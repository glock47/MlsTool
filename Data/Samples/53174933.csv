No,Url,Valid,Message,Issue-url,Tag,Category
0,https://api.github.com/repos/google/boringssl/commits/5799ebfe5f895ecd29fcd699789854fc1790d6cd,False, acvp recognise another style json json file header without url thus consider block contain algorithm also header change reviewed http boringssl boringssl 48605 reviewed david benjamin davidben google.com, , ,None
1,https://api.github.com/repos/google/boringssl/commits/d422d2c4aada2218b12916d6989424ee0bee7907,False, revert revert revert disable check x.509 extension implies reverts commit let try  bug 375 change reviewed http boringssl boringssl 48625 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
2,https://api.github.com/repos/google/boringssl/commits/c1571feb5faf5cce844354c63d0f3e842464bea3,False, acvp add hkdf support change reviewed http boringssl boringssl 48585 reviewed david benjamin davidben google.com, , ,None
3,https://api.github.com/repos/google/boringssl/commits/7a817f48bafee508b2d23ad278f892ee1cb32b91,False, add generate ech command bssl tool tool generates three file echconfig corresponding private key echconfig wrapped echconfiglist example following invocation generates file bssl generate ech ech config list ech config ech_config.data private key ech.key public name foo.example config pas echconfig private key server client command bssl server accept 4430 ech config ech_config.data ech key ech.key bssl client connect localhost 4430 ech config list bug 275 change reviewed http boringssl boringssl 48466 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
4,https://api.github.com/repos/google/boringssl/commits/e38cf79cdf47606f6768fb85dc066d7ebce304ac,False, enable atomics no_threads configuration configuration without thread thread safe anyway instead use refcount_lock.c implementation turn call thread_none.c turn plain refcount avoids build issue platform define no_threads use c11 lack c11 atomics missing definition platform ought define implement atomics also unnecessary overheard no_threads configuration anyway change reviewed http boringssl boringssl 48565 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
5,https://api.github.com/repos/google/boringssl/commits/17be3872ab3243fff6014f66d196d77b79d18119,False, check strtoul return overflow error getunsigned currently getunsigned call strtoul check whether resulting unsigned long int greater uint_max implicitly assumes uint_max ulong_max problematically unsigned long int unsigned size window bit architecture correctness check whether strtoul failed would overflow unsigned long int checking whether value fit unsigned type http cpp cpp data type range view msvc 160 change reviewed http boringssl boringssl 48545 commit queue dan mcardle dmcardle google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
6,https://api.github.com/repos/google/boringssl/commits/897a2ca3f184b34278641138c726ef902ab1fab2,False, add convenience function malloc evp_hpke_ctx evp_hpke_key caller want value heap allocated little annoying return empty value supported heap allocated one merged init new since multiple constructor function probably least fuss change reviewed http boringssl boringssl 48526 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
7,https://api.github.com/repos/google/boringssl/commits/6191cc95a1ef9a7b0a3f79ac23cbbbba85698c0f,False, document configure signing prefs otherwise boringssl may select one private key doe support change reviewed http boringssl boringssl 48525 reviewed adam langley agl google.com, , ,None
8,https://api.github.com/repos/google/boringssl/commits/519c2986c73c23461b130ad19b93fd7d081353d5,False, always trusty want seed different rng one supply per draw entropy change unless substituting implementation function see urandom.c note change seed argument cause value ored flag value always zero unless android fips build change reviewed http boringssl boringssl 48485 reviewed david benjamin davidben google.com, , ,None
9,https://api.github.com/repos/google/boringssl/commits/7153013019544f0314dfbf61c2a7010a82c8c53a,False, use stack space stack consumption function causing issue stack constrained environment therefore allocate many variable heap mean several hrss_ function allocate thus fail caller ignore return value crash failure mallocs still safe although thing fail decrypt later somehow actually make key generation _faster_ machine know better alignment fewer collision operation slightly slower expected  17390 generate operation 3054088us 5694.0 ops sec 225000 encap operation 3000512us 74987.2 ops sec 87000 decap operation 3014525us 28860.3 ops sec  21300 generate operation 3026637us 7037.5 ops sec 221000 encap operation 3008911us 73448.5 ops sec 84000 decap operation 3007622us 27929.0 ops sec change reviewed http boringssl boringssl 48345 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,General
10,https://api.github.com/repos/google/boringssl/commits/94a608a1f5d4339d95252902a9e9381c2cc1c225,False, make x509_extension opaque switched thing accessors easy x509_extension upstream const correct right little goofy update note use instead change reviewed http boringssl boringssl 48505 reviewed adam langley agl google.com, , ,None
11,https://api.github.com/repos/google/boringssl/commits/a5a9b54d84e60e6a63f64cd001db1baf131b91a1,False, make x509_crl opaque update note use accessors instead change reviewed http boringssl boringssl 48465 reviewed adam langley agl google.com, , ,None
12,https://api.github.com/repos/google/boringssl/commits/b86dcfefeb0ab890113635cfe021b8bd01de5554,False, switch another malloc bssl array change reviewed http boringssl boringssl 48506 reviewed adam langley agl google.com, , ,None
13,https://api.github.com/repos/google/boringssl/commits/ecc301ca0f77dd5d78de4b22d25713e63d18168a,False, add pointer alignment helper function also use slightly conservative pattern instead aligning pointer uintptr_t casting back compute offset advance pointer space guarantee casting pointer uintptr_t back give pointer general integer pointer conversion generally implementation defined gcc doe define useful way make fewer dependency change reviewed http boringssl boringssl 48405 reviewed adam langley alangley gmail.com, , ,None
14,https://api.github.com/repos/google/boringssl/commits/268a4a6ff3bd656ae65fe41ef1185daa85cfae21,False, remove unused field x509_name_entry used anywhere inside outside library update note removed unused field struct change reviewed http boringssl boringssl 48427 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
15,https://api.github.com/repos/google/boringssl/commits/61a21e7ec5ab9cd81bdc7616d8a110d7ccf58ea3,False, fix sign bit bn_div numerator quotient alias see also upstream though bn_divs diverged slightly change reviewed http boringssl boringssl 48426 reviewed adam langley agl google.com, , ,None
16,https://api.github.com/repos/google/boringssl/commits/ad5db965845a12fbd69bd23eab00dd6b9e5998f6,False, handle server case found fuzz come enable client certificate draft ech implementation server bug 275 fuzz 35815 change reviewed http boringssl boringssl 48425 reviewed adam langley agl google.com, , ,None
17,https://api.github.com/repos/google/boringssl/commits/62d6ed60dc192433d05fcc786a8dc0df23e80c96,False, remove return value x509 _get_ _by_nid x509 _get_ _by_nid return extension found nid invalid looking caller many check index rather index mean theory wrong thing case realistically case impossible caller pas constant even nids local enum standard constant mean hitting path almost certainly programmer error need complicate calling convention update note return value convention function simplified expected affect caller change reviewed http boringssl boringssl 48368 reviewed adam langley agl google.com, , ,None
18,https://api.github.com/repos/google/boringssl/commits/2cf7a2cdea9af3a76b0b4cf6316e02cdfa8fe284,False, remove function behavior differs lastpos function doe appear used anywhere remove lastpos return first match lastpos additionally fails duplicate lastpos additionally fails attribute multiply valued update note removed found caller function change reviewed http boringssl boringssl 48367 reviewed adam langley agl google.com, , ,None
19,https://api.github.com/repos/google/boringssl/commits/957f23d2c4cf5b54352f202f3fff062fba216e65,False, document batch extension related function x509.h change reviewed http boringssl boringssl 48366 reviewed adam langley agl google.com, , ,None
20,https://api.github.com/repos/google/boringssl/commits/7ada8466927864b6427277f455483c61081a32db,False, conf fix getting key default section comment say work openssl documentation looking code work along thing like magic section called env√¢ get environment variable sigh change reviewed http boringssl boringssl 48386 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
21,https://api.github.com/repos/google/boringssl/commits/919a973930adf7fb9853fd5c3ae722a1d5e2cf59,False, conf crash parsing lh_strhash mapped nullptr zero ec8c67dfbc switched conf use openssl_strhash crash nullptr conf depends nullptr handling change reviewed http boringssl boringssl 48385 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,General
22,https://api.github.com/repos/google/boringssl/commits/ae7c17868992ac2c64c46ba418d46cf75374054f,False, add openssl compatibility alias evp_md_nid openssl evp_md_type evp_md_type seems preferred spelling put evp_md_nid deprecated bucket also add evp_md_do_all alias change reviewed http boringssl boringssl 48365 reviewed adam langley agl google.com, , ,None
23,https://api.github.com/repos/google/boringssl/commits/170045f4900cf6ffc2d5bf162a4ef196b2400e1a,False, make asn1_object opaque clean story http boringssl boringssl 46164. none exported function mutate asn1_objects exception object reuse mode c2i_asn1_object caller function check flag correctly handle static asn1_objects kept struct definition crypto asn1 even though asn1_object partially crypto obj since prefer cut dependency crypto asn1 probably rearrange later also kept crypto asn1 internal.h style comment though style story weird maybe time clang format crypto asn1 crypto x509 patch upstream rarely directly apply anyway since mix 1.0.2 1.1.1 crypto x509 update note asn1_object opaque caller use accessors change reviewed http boringssl boringssl 48326 reviewed adam langley agl google.com, , ,None
24,https://api.github.com/repos/google/boringssl/commits/e3a7bd0a812c063e7c457d3c5e3808b4670b1049,False, rename asn1_locl.h internal.h match internal header change reviewed http boringssl boringssl 48325 reviewed adam langley agl google.com, , ,None
25,https://api.github.com/repos/google/boringssl/commits/5514476c406b3d9e6630f14414dcb6ea9e7eb597,False, update hpke_test.go test need updated reflect  change reviewed http boringssl boringssl 48305 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
26,https://api.github.com/repos/google/boringssl/commits/c220b5fa69e11c2dac0d0df89785d1a9f6927281,False, decorate declaration definition additionally decorate ipv4_from_asc ipv6_from_asc array length bug 419 change reviewed http boringssl boringssl 48265 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
27,https://api.github.com/repos/google/boringssl/commits/25d501c775b04ab3e0855552f61f9219668be96a,False, sha 256 used aarch64 even no_asm change reviewed http boringssl boringssl 48246 reviewed david benjamin davidben google.com, , ,None
28,https://api.github.com/repos/google/boringssl/commits/b90cdddcdc27995abe530c3805adb8ccca594aa4,False, swtb another aarch64 magic tweak change reviewed http boringssl boringssl 48245 reviewed david benjamin davidben google.com, , ,None
29,https://api.github.com/repos/google/boringssl/commits/ba423c9a1bbbc130f376df054ba59a4f0fb031a8,False, implement handshake client offer ech server reject client completes handshake order authenticate retry key implement flow largely allowing existing handshake proceed change certificate verification name route built verifier add callback need disable false start pick server finished 1.2 client certificate notably 1.3 encrypted revealed true server fortunately sending client cert always option channel similar issue omitted extension deprecated unlikely used ech point alp may worth pondering way currently used sensitive possibly change draft terminate handshake even sending flight ... session never offered internal book keeping quite notice replace ech_accept tri state ech_status correctly handle edge case ech rtt enabled first certificate verification rtt session true name yet ech_accept tri state track ech actually rejected maintained server well though server never actually care bug 275 change reviewed http boringssl boringssl 48135 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
30,https://api.github.com/repos/google/boringssl/commits/ca7ef8c855398302a04cbcdff8c7a943923bf934,False, runner add convenience function base64 flag long write change reviewed http boringssl boringssl 48134 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
31,https://api.github.com/repos/google/boringssl/commits/a10017c548b0805eb98e7847c37370dbd37cd8d6,False, reduce bouncing cache lock take cache lock add session cache release immediately take release lock increment 255 connection doe thing flush stale session merge first two one lock move ssl_session.cc access newly extracted also remove mode parameter ssl know client server move session check caller directly know whether new session also add tsan coverage path test earlier iteration patch managed introduce double locking bug testing confirmed test catch double locking insufficient locking seem able catch using read lock instead write lock however suspect hash table distributing cell thread touch update note reshuffle lock around session cache hopefully better change reviewed http boringssl boringssl 48133 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
32,https://api.github.com/repos/google/boringssl/commits/10a76acb0f2564a525887f88c4e3aea10f3fc1f2,False, clear not_resumable handshake renegotiation handshake later ech handshake want add session session cache also want release session resumable handshake completes ideally construct ssl_session end handshake existing apis like ssl_get_session must work mid handshake ssl_session handle immutable resumption state container progress connection property manage not_resumable flag cleared handshake done ssl_session finalized however 1.2 ticket renewal currently clear flag early break invariant actually affect renegotiation handshake never resume still maintain invariant storing copy new_session note doe sacrifice different invariant previously ssl session new_session never set time change also mean doe need special case ticket renewal change reviewed http boringssl boringssl 48132 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
33,https://api.github.com/repos/google/boringssl/commits/afa867be8f6dce3e416b8e5f54013cbf970b5609,False, runner test client actually use renewed ticket test run three connection resuming renewed ticket particularly way 1.2 ticket renewal work client logic could accidentally report old session application runner test would currently notice though one test ssl_tests doe make runner test also check cycling ticket key connection attempt also make apply even test specify resumeconfig change reviewed http boringssl boringssl 48131 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
34,https://api.github.com/repos/google/boringssl/commits/5d224a559ceec2b45811c3f9080744ad8bb2391c,False, runner clean test logic address feedback http boringssl boringssl 48131 ssl test runner runner.go 1555 pulled separate clarity first take listener waitchan exec.cmd trio wrap shimprocess type shimprocess responsible port flag manage tcplistener internally next take core test loop move doexchanges function use usual early return pattern error rather thread err nil control flow shimprocess pulled doexchanges take shimprocess finally unacted err variable gotten far actually used rename localerr align machinery change reviewed http boringssl boringssl 48186 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
35,https://api.github.com/repos/google/boringssl/commits/c41a3a937309f0ebfe33e2314a8f5b9838d6f5cc,False, runner fix process exit timeout flipped boolean http boringssl boringssl 41864 applied timeout wrong case change reviewed http boringssl boringssl 48185 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
36,https://api.github.com/repos/google/boringssl/commits/479adf98d54a21c1d154aac59b2ce120e1d1a6d6,False, remove old asn.1 set macro macro consumed anything anymore change reviewed http boringssl boringssl 48229 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
37,https://api.github.com/repos/google/boringssl/commits/b147c99ddca966a57068919ff6e9cca813bbfddd,False, document asn1_integer asn1_enumerated function change reviewed http boringssl boringssl 48228 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
38,https://api.github.com/repos/google/boringssl/commits/87be6592255359481390f7ac90cd1401ecca35e8,False, document already test move asn1_test.cc since part asn.1 library also since easy test using public apis rather stack allocating asn1_string change reviewed http boringssl boringssl 48227 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
39,https://api.github.com/repos/google/boringssl/commits/5f8c681d7897a6a7dea5daa8ab361b73e2dd7500,False, const correct bit change reviewed http boringssl boringssl 48226 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
40,https://api.github.com/repos/google/boringssl/commits/52067828463443821e175975d19085b2c8bf2f54,False, compute asn.1 bit string size consistently openssl bit string representation two mode one implicitly trim trailing zero number unused bit explicitly set mean logic elsewhere caller check flag inconsistent add code need deal x.509 using bit string field instead octet string switch external code doe export public api mostly theoretical issue parsed bit string use explicit byte string apis apart yet opaquified structs specify asn1_string x509 etc. structure intentionally made etc. internally construct asn1_string still api consistent help nudge caller towards rejecting excess bit want byte may also worth public api consistently accessing bit count left alone seen caller need save worrying byte bit overflow also fix bug original version truncating logic entire string zero const corrects parameter change reviewed http boringssl boringssl 48225 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
41,https://api.github.com/repos/google/boringssl/commits/cafb9921149dd713ce2c2de2d057664575bedd93,False, remove lh_foo_doall exported sufficient change reviewed http boringssl boringssl 48207 reviewed adam langley agl google.com, , ,None
42,https://api.github.com/repos/google/boringssl/commits/ec8c67dfbc01eb13f16a40f6c8da6299a65a540c,False, prefix internal lhash function lh_new short name claiming change reviewed http boringssl boringssl 48206 reviewed adam langley agl google.com, , ,None
43,https://api.github.com/repos/google/boringssl/commits/7f85116bedfb7b95f87e2f62d84ce425ef8ac095,False, unexport almost lhash one place lhash_of appears public apis ever called conf null cryptography.io need utter type name part binding thus keep lhash_of macro public others private update note boringssl longer provides general purpose hash table caller use language standard library another implementation change reviewed http boringssl boringssl 48205 reviewed adam langley agl google.com, , ,None
44,https://api.github.com/repos/google/boringssl/commits/ec552cab81ce984a148eb40f240b27306da763ad,False, rename t1_lib.cc extensions.cc bit self explanatory especially 1.0 minimum version implement anyway change reviewed http boringssl boringssl 48130 reviewed adam langley agl google.com, , ,None
45,https://api.github.com/repos/google/boringssl/commits/f25ada3a793e101855f6306565a8161330b3dd31,False, prefix unexport a2i_ipadd bit short name take one seems using openssl renamed unexported change reviewed http boringssl boringssl 48129 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
46,https://api.github.com/repos/google/boringssl/commits/f315a86df3d5cd51135db996c9d5747ec2641331,False, fix wdeprecated copy warning bug chromium 1221591 change reviewed http boringssl boringssl 48165 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
47,https://api.github.com/repos/google/boringssl/commits/9cbe737ec4697f5f6ac0c5d9f4ea814b7087d90a,False, validate ech public name added draft update broadly follow easily separable component want allow dns arbitrarily insert string clienthello invalid public name rejected unfortunately bit mess dns syntax doe exclude ipv4 literal yet everyone stick dns literal string rfc3986 rule alright match reality reality probably whatwg rule mess load bearing bit spec certificate verification reject whatever string application refuse represent dns name chromium call url parser http www.ietf.org archive draft ietf esni 11.html section 6.1.4.3 still bit validation step client run ipv4 parser case downstream logic forgets gone ahead implemented whatwg ipv4 parser http www.ietf.org archive draft ietf esni 11.html section 6.6.1 bug 275 change reviewed http boringssl boringssl 48085 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
48,https://api.github.com/repos/google/boringssl/commits/869bf9f3afc52d901efb9f838ddbb28e5fa63570,False, fold see also upstream made sense separate structure public struct unexported change reviewed http boringssl boringssl 48128 reviewed adam langley agl google.com, , ,None
49,https://api.github.com/repos/google/boringssl/commits/58abd2e6fa9cb8547f5a435c1a6921712a0578c5,False, make opaque update note use setter instead configuring directly change reviewed http boringssl boringssl 48127 reviewed adam langley agl google.com, , ,None
50,https://api.github.com/repos/google/boringssl/commits/36ea4d11341182715e1dfe4e49cfb32219c2435b,False, move crypto x509 vpm_int.h internal.h change reviewed http boringssl boringssl 48126 reviewed adam langley agl google.com, , ,None
51,https://api.github.com/repos/google/boringssl/commits/6d3d0690f542473a7bf8064cb46021c8d8d5fcaa,False, reformat x509_vfy.h convert comment ran clang format util change reviewed http boringssl boringssl 48125 reviewed adam langley agl google.com, , ,None
52,https://api.github.com/repos/google/boringssl/commits/995574c22569576f024ce730fecec9678dfc63ed,False, reland add util reland go.mod go.sum fixed update golang.org crypto add latest golang.org net direct dependency previously indirect dependency via crypto clean stale entry go.sum mod tidy original change description add util  wrote tool make easier test ech client real world server bssl client tool found manually extracting echconfiglist raw http record unnecessarily painful  tool query dns udp http record find http record response attempt extract echconfiglist ech svcparam write extracted echconfiglist file given directory ech client implementation land bssl client tool new flag take path echconfiglist file  using golang.org net dns dnsmessage parse dns response recently added unknownresource type library enable caller like extract byte otherwise unsupported record like http updated dependency get golang.org net  although bssl client tool know resolve address connect parameter difficult query http record platform agnostic way decide bssl client directly query http rather leaning look libresolv specifically res_query function enables caller query arbitrary record type may open cross platform worm macos linux typically ship different implementation available window info see man resolver  bug 275 change reviewed http boringssl boringssl 44104 reviewed david benjamin davidben google.com bug 275 change reviewed http boringssl boringssl 48106 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
53,https://api.github.com/repos/google/boringssl/commits/9a5abe05cc999177bc55949c9243b3bc360595cb,False, revert add util reverts commit reason revert broke go.sum reason fix reland original change description add util  wrote tool make easier test ech client real world server bssl client tool found manually extracting echconfiglist raw http record unnecessarily painful  tool query dns udp http record find http record response attempt extract echconfiglist ech svcparam write extracted echconfiglist file given directory ech client implementation land bssl client tool new flag take path echconfiglist file  using golang.org net dns dnsmessage parse dns response recently added unknownresource type library enable caller like extract byte otherwise unsupported record like http updated dependency get golang.org net  although bssl client tool know resolve address connect parameter difficult query http record platform agnostic way decide bssl client directly query http rather leaning look libresolv specifically res_query function enables caller query arbitrary record type may open cross platform worm macos linux typically ship different implementation available window info see man resolver  bug 275 change reviewed http boringssl boringssl 44104 reviewed david benjamin davidben google.com tbr davidben google.com dmcardle google.com change presubmit true tree check true try true bug 275 reviewed http boringssl boringssl 48105 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
54,https://api.github.com/repos/google/boringssl/commits/160a8891ae9a1d03f29aec079a67d97bc773990e,False, add util wrote tool make easier test ech client real world server bssl client tool found manually extracting echconfiglist raw http record unnecessarily painful tool query dns udp http record find http record response attempt extract echconfiglist ech svcparam write extracted echconfiglist file given directory ech client implementation land bssl client tool new flag take path echconfiglist file using golang.org net dns dnsmessage parse dns response recently added unknownresource type library enable caller like extract byte otherwise unsupported record like http updated dependency get golang.org net although bssl client tool know resolve address connect parameter difficult query http record platform agnostic way decide bssl client directly query http rather leaning look libresolv specifically res_query function enables caller query arbitrary record type may open cross platform worm macos linux typically ship different implementation available window info see man resolver bug 275 change reviewed http boringssl boringssl 44104 reviewed david benjamin davidben google.com, , ,None
55,https://api.github.com/repos/google/boringssl/commits/9734e4453bd755562e40388fc7e6d36933b10edc,False, reliably report handshake error ssl_write fix couple thing first never tested ssl_write refuse write application data fatal alert add test test revise logic next remove write_shutdown check ssl_write instead relies lower level version check write_app_data etc. hook improves error reporting handshake error generally try make error sticky analogous handshakeerr implementation ssl_write ssl_read implicitly call caller driving two parallel naturally call twice since error effectively applies operation save replay handshake error error handshake error typically come sending alert also set write_shutdown try send data channel checking early ssl_write mean get chance replay handshake error defers test ensures still ultimately get right finally http crbug.com 1078515 particular incarnation server enables rtt reverts 1.2 client need catch error retry deferring ssl_write check sufficient can_early_write bit remove write path dependency handshake call  made error path clear can_early_write suspect want apply handshake error though weird handshake error effectively read error rtt currently replay record decryption failure ssl_write even though also send fatal alert thus break subsequent writes bug chromium 1078515 change reviewed http boringssl boringssl 48065 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
56,https://api.github.com/repos/google/boringssl/commits/e9c5d72c09e01a0f71f30f7c3454e5e7f8711476,False, add option permute clienthello extension order although permitted specification system sometimes ossify extension order byte offset various field keep ecosystem healthy add api reorder clienthello extension since ech sensitive extension order implemented per connection permutation index kextensions structure ensures clienthellos within connection consistently ordered follow work permuting message would also nice though server message would need incorporated handshake hint change reviewed http boringssl boringssl 48045 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
57,https://api.github.com/repos/google/boringssl/commits/5358cb50446ff38d7b41e84274bc36582cced621,False, runner check test name protocol tested would caught issue test working also catch issue per message test fix change reviewed http boringssl boringssl 48046 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
58,https://api.github.com/repos/google/boringssl/commits/878795cac3947f37e7852122ebaf53e7c420d69a,False, remove outdated comment primality testing comment date ssleay appears describing incremental trial division strategy would pick starting candidate compute modulus small prime update incrementing candidate saved modulus instead dividing scratch use simpler rejection sampling strategy change reviewed http boringssl boringssl 48047 reviewed adam langley agl google.com, , ,None
59,https://api.github.com/repos/google/boringssl/commits/83a49939abb5a15508548ed1d33af8128d70cab5,False, add ech client implementation based initial implementation dan mcardle http boringssl boringssl 46784 contains client implementation draft ietf esni 10. piece missing far done follow padded server certificate message add resolve spec discussion originally going use record level padding work well quic client check public name valid dns name copying handshake flow yet implemented detect server selects handshake immediately fails follow remove logic instead add apis extra check needed otherwise complete including padding compression main interesting point design wise run clienthello construction multiple time need construct slight variant compressed form ech extension erased avoid circular dependency computed concurrently compression scheme requires shifting extension around contiguous however computed running logic twice probably done better next draft revise construction anyway thinking rework next draft use placeholder payload length construct clienthello fill payload additionally client available ssl_test add threading test confirm properly synchronized confirmed drop lock tsan notice change reviewed http boringssl boringssl 48004 reviewed adam langley agl google.com, , ,None
60,https://api.github.com/repos/google/boringssl/commits/24545c541c424b4f9bd8f42edc06d84d6542e764,False, add basic api make echconfigs probably need make complex later start hoped would also simplify test makeechconfig still needed generate weird input test instead tidied bit params structure hard coded echconfig test check output new api bug 275 change reviewed http boringssl boringssl 48003 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
61,https://api.github.com/repos/google/boringssl/commits/c890ae519582d988d93d333dca9a39ee44f413ee,False, make ech server apis take evp_hpke_key previously would extract kem echconfig parse private key using corresponding kem type make take pre pared evp_hpke_key check match doe require caller pas key type externally probably prudent hand still inferring config rest echconfig ... maybe add api extract evp_hpke_kem serialized echconfig becomes problem could see runner tool wanting convenience immediate motivation add apis construct echconfigs thinking pas const evp_hpke_key specify key point weird look different bug 275 change reviewed http boringssl boringssl 48002 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
62,https://api.github.com/repos/google/boringssl/commits/c3b373bf4f4b2e2fba2578d1d5b5fe04e410f7cb,False, rename ssl_ech_keys old name really long bit tedious type bug 275 change reviewed http boringssl boringssl 48001 reviewed adam langley agl google.com, , ,None
63,https://api.github.com/repos/google/boringssl/commits/0724e3d5525b0d872320deee3d565a4737ac3cde,False, runner self check test accurately earlier correctly handle test version figure resumeconfig got test actually check version run accurately check field also add option heuristic work test specify maximum version passing tls1 etc. flag version moreover set flag maximum 1.3. suppress check test change reviewed http boringssl boringssl 48000 reviewed adam langley agl google.com, , ,None
64,https://api.github.com/repos/google/boringssl/commits/cd89004847ad1a58722a5cde0e1d8d25f506b01f,False, pad second clienthello previous fixed bug computing padding actually need pad second cleartext clienthello anyway padding work around bug old websphere server speak 1.3. save byte change reviewed http boringssl boringssl 47999 reviewed adam langley agl google.com, , ,None
65,https://api.github.com/repos/google/boringssl/commits/350fe3bf32dcf87f281685b1e7fc8df876f396a8,True, fix calculation dropping psk extension due hrr mismatched hash looking back could easily avoided nuisance ... filed rfc8446bis predict length correctly consequence pad second clienthello desired range fix add assert http github.com tlswg tls13 spec issue 1227 change reviewed http boringssl boringssl 47998 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/1227, ,None
66,https://api.github.com/repos/google/boringssl/commits/b32aa05538113798a07e086102ffb9d57dcdc6a8,False, tidy psk binder logic computing binder little interesting area tidy bit exploded parameter may well ssl_session get folded change reviewed http boringssl boringssl 47997 reviewed adam langley agl google.com, , ,None
67,https://api.github.com/repos/google/boringssl/commits/c89ce97a2d3795d6aff8d9da252220503fc3e60f,False, move dtls header length adjustment make call hair easier also apply 256 511 compatibility hack use constant bug 275 change reviewed http boringssl boringssl 47996 reviewed adam langley agl google.com, , ,None
68,https://api.github.com/repos/google/boringssl/commits/fb4d2571f3faa85ce14bbc086f3fcfbb7043f944,False, shift complexity get kinda messy ech move padding grease extension helper bug 275 change reviewed http boringssl boringssl 47995 reviewed adam langley agl google.com, , ,None
69,https://api.github.com/repos/google/boringssl/commits/9052286dab3508855c130a5e8a9fd2c0857e7869,False, add note extension callback name 1.3 since bulk extension move made extension callback apply pulled serverhello extension callback system mean serverhello naming little confusing probably rename callback though parse_server bit ambiguous whether parse extension server parse server add comment change reviewed http boringssl boringssl 47994 reviewed adam langley agl google.com, , ,None
70,https://api.github.com/repos/google/boringssl/commits/e9109cb8ff454087acbb2a494db5935094618bc6,False, add move support evp_md_ctx need maintain two transcript ech client know used overwrite default transcript alternate one rather indirect pointer move support easy enough transcript std move bug 275 change reviewed http boringssl boringssl 47993 reviewed adam langley agl google.com, , ,None
71,https://api.github.com/repos/google/boringssl/commits/5acf9f42c2e853c660d1bc1c64da9d6e6dfab1e9,False, replace output parameter may strictly necessary similarly easier reason need interweave multiple clienthellos bug 275 change reviewed http boringssl boringssl 47992 reviewed adam langley agl google.com, , ,None
72,https://api.github.com/repos/google/boringssl/commits/14e51ad4164a28a8a1dabd634ea63b28212975b1,False, make add_clienthello callback const effective seems const ssl_handshake ssl const ssl ssl non const pointer considered moving ssl ssl_ adding const overloaded accessors need repeat ssl point seemed worth yet maybe later rewrite everything idiomatic bug 275 change reviewed http boringssl boringssl 47991 reviewed adam langley agl google.com, , ,None
73,https://api.github.com/repos/google/boringssl/commits/5fd91dba0301b4fd7efa38ac618ac8b2a814993d,False, fix documentation typo change reviewed http boringssl boringssl 48025 reviewed adam langley agl google.com, , ,None
74,https://api.github.com/repos/google/boringssl/commits/246c556b65c3235c8eb082c15017c9669815943a,False, compute ech grease payload outside callback kinda annoying like grease_seed demonstrates shortcoming idea making add_clienthello completely const strictly speaking need idempotence think okay const much easier enforce idempotence likely need anyway current draft expect draft eventual hrr resolution retain ech extension grease ech reject thing somewhat violating rfc8446 hrr rule right mean need stash ech payload regardless ech bind extension outer clienthello computing payload need move outside callback system anyway sense shifting clienthello output immediate mode end spectrum usually use retained mode end suppose make sense message becomes intricate bug 275 change reviewed http boringssl boringssl 47990 reviewed adam langley agl google.com, , ,None
75,https://api.github.com/repos/google/boringssl/commits/43ab56c618fc5212e36b9e20ad48549d3bbcc0ec,False, pick grease ech config grease_seed avoids unnecessary one byte rand_bytes call bug 275 change reviewed http boringssl boringssl 47989 reviewed adam langley agl google.com, , ,None
76,https://api.github.com/repos/google/boringssl/commits/33e8c7893bd36c9aa88e1a4c9c5a0b4cb8177899,False, initialize grease_seed construction let const lazy thing deal breaker need idempotence non thread safe const also work fine initializing earlier seems simpler bug 275 change reviewed http boringssl boringssl 47988 reviewed adam langley agl google.com, , ,None
77,https://api.github.com/repos/google/boringssl/commits/52b3638f0ae24605ae9c131af9477c3d58f7f2a1,False, remove extension init hook never used instead rely renegotiation creating new handshake structure fresh state simplifies thing ech probably could make init hook work ech two clienthello scheme either maintaining separate state per clienthello calling init clienthellos init removable easier bug 275 change reviewed http boringssl boringssl 47987 reviewed adam langley agl google.com, , ,None
78,https://api.github.com/repos/google/boringssl/commits/97ede40d43e4c16db2c5422515ee3bbeaa280d25,False, move key_share computation clienthello callback like early_data doe shift bit logic previously hidden away callback key_share probably good move independent ech logic around hrr etc. little messy bug 275 change reviewed http boringssl boringssl 47986 reviewed adam langley agl google.com, , ,None
79,https://api.github.com/repos/google/boringssl/commits/6c9758fa9a35b8996a82a0867127af41ca82bcb0,False, release temporary outside clienthello callback also add ech grease state mix clearing critical especially ssl_handshake structure easy enough bug 275 change reviewed http boringssl boringssl 47985 reviewed adam langley agl google.com, , ,None
80,https://api.github.com/repos/google/boringssl/commits/4e93cd487f0a7f447d194621a59018a88d246379,False, move early_data_ offered reason logic extension callback ech requires construct two clienthellos mean add_clienthello callback need called multiple time const already called multiple time currently thread callback bit ech think need make pure serialization bug 275 change reviewed http boringssl boringssl 47984 reviewed adam langley agl google.com, , ,None
81,https://api.github.com/repos/google/boringssl/commits/26f186bcabd9fe8221f6c732d13118120315a1f5,False, implement handshake hint certificate compression decompression deterministic compression new revision compression algorithm may start using different hopefully smaller compression cause hint mismatch add certificate compression hint shim certificate message match handshaker reuse already compressed message also add appears missing test server find compression algorithm common change reviewed http boringssl boringssl 48005 reviewed adam langley agl google.com, , ,None
82,https://api.github.com/repos/google/boringssl/commits/7fffa4636cf7647daf981914286d5d32f1beab6d,False, runner implement ech server testing implement draft ietf esni used test client implementation switched setup logic server test use new serverechconfig type probably need patch various feature later testing usable starting point based initial implementation dan mcardle http boringssl boringssl 46786 bug 275 change reviewed http boringssl boringssl 47967 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
83,https://api.github.com/repos/google/boringssl/commits/1f54fd9864c054dc33e15b1144e2a6a19fa0a52e,False, runner parse status_request extension strictly noticed area currently use extremely lax parse even tolerates syntax error instead use strict parse ensures client sends expect change reviewed http boringssl boringssl 47966 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
84,https://api.github.com/repos/google/boringssl/commits/00bccd6eefa162fb05da6a7621eaebb43b0c035a,False, runner make echisinner boolean nil vs. non nil byte sake couple test invalid payload tedious use separate field instead bug 275 change reviewed http boringssl boringssl 47965 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
85,https://api.github.com/repos/google/boringssl/commits/124122878245e9c3be5ad9e625a1af447236169e,False, runner revise echconfig type preparation client implementation echconfig like certificate knowing field sufficient exact byte representation significant echconfig bound encryption echconfig type field runner represent echconfigs output serialization function matter client testing server server parse echconfigs field support server testing client need see client reacts extra extension etc using byte represent echconfigs inconvenient instead pattern parse one byte string currently included since need yet construct new one template field want bug 275 change reviewed http boringssl boringssl 47964 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
86,https://api.github.com/repos/google/boringssl/commits/88df13d73d5a74505f046f0bf37fb2fb3e1f1a58,False, fix ech server test test actually using repeated config bug 275 change reviewed http boringssl boringssl 47912 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
87,https://api.github.com/repos/google/boringssl/commits/3a036c76eb53d9b0f26415b94471fcea6830c230,False, add api ech_is_required alert first thing deployment want monitor whether ech actually used also useful command line tool output alert client signal discarded connection due ech reject also disables ech handoff mechanism immediate cause ech_accept serialized probably need make decision around ordering since ech affect true clienthello available bug 275 change reviewed http boringssl boringssl 47911 reviewed adam langley agl google.com, , ,None
88,https://api.github.com/repos/google/boringssl/commits/5b7ec8329eca73d79e1b5f5e345b3e1c9054edfe,False, reject ech extension 1.2 serverhello ech server extension defined 1.3 1.2 serverhello bug 275 change reviewed http boringssl boringssl 47910 reviewed adam langley agl google.com, , ,None
89,https://api.github.com/repos/google/boringssl/commits/da15f2910d339d81e3125fa85b6d91783a52621d,False, move ech related apis bug 275 change reviewed http boringssl boringssl 47909 reviewed adam langley agl google.com, , ,None
90,https://api.github.com/repos/google/boringssl/commits/bcef51424b591707f3949f771f1eebd9c9935984,False, const correct message creation hook make little clearer updating sequence number enqueuing message etc left add_message ech client need construct pair parallel clienthellos change reviewed http boringssl boringssl 47908 reviewed adam langley agl google.com, , ,None
91,https://api.github.com/repos/google/boringssl/commits/b5879118ac2067f036f55497eba034940fbb791c,False, remove channel callback remaining remnant channel configure private key ahead time unwind callback machinery cut async point case need test also unwinds odd interaction callback client set callback handshake would still pause removed affect server affect client update note removed longer enables channel client server change reviewed http boringssl boringssl 47907 reviewed adam langley agl google.com, , ,None
92,https://api.github.com/repos/google/boringssl/commits/8acec00e9eaf4d69297a67c0c10729470b4bd764,False, manage channel handshake state better bit used whether channel_id filled whether particular handshake eventually negotiate channel former mean called client return zero apparently never fill channel_id client latter mean state need reset renegotiation currently forbid renegotiation channel probably ... last use init callback extension instead split bit handshake bit connection note mean actually expose even retain whether channel used client requires tweak handoff logic compatible serialized ssl channel_id always handback happens channelid message except rsa key exchange forbid channel rsa key exchange anyway update note longer return zero handshake client find caller relying change reviewed http boringssl boringssl 47906 reviewed adam langley agl google.com, , ,None
93,https://api.github.com/repos/google/boringssl/commits/bc4c91ab4655d10b55427ad7d4f1ae21fe2df06b,False, dtls srtp defined dtls avoids needing worry interaction renegotiation turn mean drop init callback support dtls renegotiation probably want forbid parameter changing anyway changing srtp parameter partway likely confuse rtp half application anyway change reviewed http boringssl boringssl 47905 reviewed adam langley agl google.com, , ,None
94,https://api.github.com/repos/google/boringssl/commits/4848294f43c34268181510a50a747e7b31bc8183,False, remove impossible ssl null check ssl never null crashed long change reviewed http boringssl boringssl 47904 reviewed adam langley agl google.com, , ,None
95,https://api.github.com/repos/google/boringssl/commits/7a3e801217d2e052062fff2293156b7ba9e5e796,False, fix 415 perl script fail building path space file name enclosed quotation mark open call http boringssl issue detail 415  cmake build project extern visual 2015 x64 debug build boringssl 439 generating rdrand x86_64.asm failed crypto fipsmodule rdrand x86_64.asm cmd.exe project extern visual 2015 x64 debug build boringssl crypto fipsmodule program file cmake bin cmake.exe make_directory perl64 bin perl.exe project extern source boringssl crypto fipsmodule rand asm rdrand x86_64.pl nasm rdrand x86_64.asm open perl script project file directory error closing stdout project extern source boringssl crypto fipsmodule rand asm rdrand x86_64.pl line ninja build stopped subcommand failed  bug 415 change reviewed http boringssl boringssl 47884 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
96,https://api.github.com/repos/google/boringssl/commits/a1d3bfb64fd7ef2cb178b5b515522ffd75d7b8c5,False, cite rfc 9000 draft ietf quic rfc 9001 also finalized flip default  update note quic apis default standard code point rather draft one quiche already calling affect caller implementing draft version cycle drop altogether also bumped case end needing ifdef change reviewed http boringssl boringssl 47864 reviewed david schinazi dschinazi google.com reviewed adam langley agl google.com, , ,None
97,https://api.github.com/repos/google/boringssl/commits/cf816d08252a63ed41c788d4a263b4e88aa9aa2b,False, add compatibility impl evp_pkey_get0 node.js evp_pkey_get0 present openssl boringssl currently doe export add implementation electron currently floating patch see http github.com nodejs node commit node change reviewed http boringssl boringssl 47824 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
98,https://api.github.com/repos/google/boringssl/commits/597ffef971dd980b7de5e97a0c9b7ca26eec94bc,False, make md32_common.h single included use unsized helper sha 256 similar http boringssl boringssl 46405 sha256_final sha224_final hit array size warning new gcc array size strictly speaking purely decoration good warning clean change difficult apply md32_common.h md32_common.h generates function md32_common.h already strange multiply included change behavior based macro defined caller instead replace inline function bit conventional typesafe allows hash function define function prototype use add unsized helper sha 256 bug 402 change reviewed http boringssl boringssl 47807 reviewed adam langley agl google.com reviewed peter foley pefoley google.com commit queue david benjamin davidben google.com, , ,None
99,https://api.github.com/repos/google/boringssl/commits/4320bc47617a66d4219e66e2420311dbfb6c3cb0,False, pull hash_transform md32_common.h macro work change reviewed http boringssl boringssl 47806 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
100,https://api.github.com/repos/google/boringssl/commits/d4c3f2a59911e200b75fca5c53073aac520330ac,False, ensure name null add check ensures name null passed handle null value openssl already ensures implementation using obj_name_get improves parity change reviewed http boringssl boringssl 47844 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
101,https://api.github.com/repos/google/boringssl/commits/92c6fbfc4c44dc8462d260d836020d2b793e7804,False, fix array parameter warning e.g home peter boringssl crypto curve25519 curve25519.c 503 error argument type const uint8_t aka const unsigned char mismatched bound werror array parameter 503 int ge_p3 const uint8_t  file included home peter boringssl crypto curve25519 curve25519.c home peter boringssl crypto curve25519 internal.h 109 note previously declared const uint8_t aka const unsigned char 109 int ge_p3 const uint8_t  home peter boringssl crypto curve25519 curve25519.c 823 error argument type const uint8_t aka const unsigned char declared pointer werror array parameter 823 void ge_p3 const uint8_t  file included home peter boringssl crypto curve25519 curve25519.c home peter boringssl crypto curve25519 internal.h 117 note previously declared array const uint8_t aka const unsigned char 117 void ge_p3 const uint8_t  cc1 warning treated error change reviewed http boringssl boringssl 47805 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
102,https://api.github.com/repos/google/boringssl/commits/47cefed43f1003ac939489712b261eb91beb3835,False, copy client session server session decrypting ticket would copy client session session copy session serverhello resuming seems icky instead install placeholder server client change reviewed http boringssl boringssl 47784 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
103,https://api.github.com/repos/google/boringssl/commits/3dd9864feace08641e1f856edd2bcca63ba7887f,False, test ech server unique repeated config also shortens ech variable name runner.go bug 275 change reviewed http boringssl boringssl 47744 commit queue dan mcardle dmcardle google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
104,https://api.github.com/repos/google/boringssl/commits/d13dbf8e2ad489e1b410ef988badc876b3913a6e,False, refresh ssl corpus adding ech fuzzer mode build_fuzzer cmake dfuzz gninja autoninja build_nofuzzer cmake dfuzz dno_fuzzer_mode gninja autoninja fuzz build_fuzzer build_nofuzzer bug 275 change reviewed http boringssl boringssl 47724 reviewed david benjamin davidben google.com, , ,None
105,https://api.github.com/repos/google/boringssl/commits/4749d8fb89ba5d765e0afa1799805b5096cb337b,False, implement fuzzer mode ech server skipping hpke decryption fuzzer mode enabled improve code coverage fuzzer logic also also ability simulate failed decryption result mostly skipping decryption exclude ech server decline test running fuzzer mode test rely broken assumption decryption fail client used echconfig unknown server bug 275 change reviewed http boringssl boringssl 47624 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
106,https://api.github.com/repos/google/boringssl/commits/ef1d779d7b82ead5c66c4f0bd103593afa08003e,False, try write empty early data tool return get confused negotiating early data using plausible say client preconnects get serverhello request bind socket change reviewed http boringssl boringssl 47684 reviewed adam langley agl google.com, , ,None
107,https://api.github.com/repos/google/boringssl/commits/3675eb3f2ac2b65ec82c3d89af9813332977773c,False, grease rfc 8701 forgot update reference change reviewed http boringssl boringssl 47666 reviewed adam langley agl google.com, , ,None
108,https://api.github.com/repos/google/boringssl/commits/aef0a88e5193b70ebe36d08ec1adfe6c9e06e167,False, runner reject zero client server randoms ever forget fill randoms end zero particularly clienthello logic getting increasingly far away clienthello serialization add test make sure notice flakily fail probability 256 reasonably unlikely change reviewed http boringssl boringssl 47665 reviewed adam langley agl google.com, , ,None
109,https://api.github.com/repos/google/boringssl/commits/b778b9c1b3d21450025e2cb22587bf79714912eb,False, const correct part deep dependency chain sniffing making add_clienthello callback const soon ech creating lot clienthellos per connection probably easiest manage constructing clienthello side effect update note change return type quite compatible found one caller function since fixed need return non const value compatibility document caller mutate output change reviewed http boringssl boringssl 47664 reviewed adam langley agl google.com, , ,None
110,https://api.github.com/repos/google/boringssl/commits/49ee62fe13adacfc89d3d612f79e3a8425b500c5,True, update ech grease size selection misread maybe changed draft padding scheme current text doe round whole payload multiple server name fallback switch grease size selection match although may want change draft see also http github.com tlswg draft ietf esni issue 433 update reference draft draft 10. also make comment verbose bug 275 change reviewed http boringssl boringssl 47644 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com,https://api.github.com/repos/google/boringssl/issues/433, ,None
111,https://api.github.com/repos/google/boringssl/commits/5e7229488844e987207b377968b3cf0340bc4ccf,False, fuzz add shebang chmod script match fuzz change reviewed http boringssl boringssl 47604 reviewed adam langley agl google.com, , ,None
112,https://api.github.com/repos/google/boringssl/commits/747229ec7e0871a253dbbe79f78da9c2cf6c777a,False, add missing case change reviewed http boringssl boringssl 47585 reviewed adam langley agl google.com, , ,None
113,https://api.github.com/repos/google/boringssl/commits/d89ec688f2296f41b4999b9db6e8bfba79c18050,False, remove draft tokbind implementation end deploying also never implemented final rfc useful someone wish deploy anyway update note token binding apis removed change reviewed http boringssl boringssl 47584 reviewed adam langley agl google.com, , ,None
114,https://api.github.com/repos/google/boringssl/commits/aaecb82c6b805849a12c43f097959b265c0d977b,False, make x509_req x509_req_info opaque unexport x509_req_info type entirely openssl done unexported much x509_req_info impossible use remains anyway update note caller reach x509_req x509_req_info must use accessors instead change reviewed http boringssl boringssl 47564 reviewed adam langley agl google.com, , ,None
115,https://api.github.com/repos/google/boringssl/commits/ddecaabdc8c950d1417ed69785ac17c3400bae4c,False, check early_session ssl session early data limit serverhello finished logically one atomic flight exit early data state process message sequentially processed finished still early data state must support writing data individual message processed atomically interesting point serverhello already tested serverhello 1.3 handshake internally clear ssl session processing serverhello getting early data information ssl session doe work instead use early_session codepaths use tested runner rather ssl_test test post post state ssl_test would self contained since directly control api call test post state reduce record overhead production implementation pack finished record mean handshake process two atomically instead tested runner flag partially drive handshake reading early data also tweaked logic hopefully little clearer bug chromium 1208784 change reviewed http boringssl boringssl 47485 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
116,https://api.github.com/repos/google/boringssl/commits/a4646740ecee1190a5f0d085b4aa172311a16ad8,False, fix includes editor clever change reviewed http boringssl boringssl 47484 reviewed adam langley agl google.com, , ,None
117,https://api.github.com/repos/google/boringssl/commits/940475da0c607eddc7c3e336284613f94632d99e,False, clearer signing input digest usually call parameter digest people sometimes think skip hashing short input short also suspect term digest common add warning also case called even msg fix say digest finally rsa_ sign verify _raw documented building block signature scheme rather signature scheme unfortunate evp_pkey_sign mean sign digest evp_digestsign mean sign likely internally digesting first step bit stuck change reviewed http boringssl boringssl 47504 reviewed adam langley agl google.com, , ,None
118,https://api.github.com/repos/google/boringssl/commits/29507b81845c25590433a4cf99b915ce99bad155,False, validate rsa public key consistently http boringssl boringssl 42504 aligned rsa private key check missed public key one two different set rsa public key check right one parser check even using key check overly large align two parsing rsa public key call rsa_check_key extra check added rsa_check_key note rsa private key parsing already called rsa_check_key consequence first rsa public key large large rejected parse time previously would parsed operation would fail aligns existing behavior parsing private key second operation rsa public key even fail already failed parse possible manually construct key previously operation explicitly fail anything useful even exponent invertible encrypting would produce something undecryptable private key would hard time reliably producing signature accept change rsa private key even would already fail consistency check fault check third operation rsa public key fail already failed parse possible manually construct key verify signature encrypt message however operation ops finally rsa private key rejected parse use case affect private key inverse pointless paired rsa public key parsing e.g library check consistency certificate public key affected already rejected key rejected public key parser aligns private half close http crbug.com boringssl 316 able resolve without consistent story key valid update note see bug 316 change reviewed http boringssl boringssl 47524 reviewed adam langley agl google.com, , ,None
119,https://api.github.com/repos/google/boringssl/commits/4b066b0e35dee8704de473490a0eacbd4d4b77a4,False, add apis manually fill signature crls add crl analog x509 function added http boringssl boringssl 43784. missed need support crls change reviewed http boringssl boringssl 47525 reviewed adam langley agl google.com, , ,None
120,https://api.github.com/repos/google/boringssl/commits/71a3b826636eee85c20f064ef318f0935416a479,False, check resumption identifier aligns openssl particular clear not_resumable soon ssl_session complete may ticket due apis like ssl_get_session ssl_session need act resumption handle bundle connection property along way use modified function internal check change remove last dependency within library placeholder sha256 change reviewed http boringssl boringssl 47447 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
121,https://api.github.com/repos/google/boringssl/commits/6ff942985389b9b64b944b98ab3e8a66e1eb436d,False, use sha256 ticket signaling session ticket inherited behavior openssl ticket based client session fill placeholder session sha256 ticket done avoid confusing code openssl possibly caller assumed determined validity separately 1.2 session ticket syntactically weird client generates fake signaling session server echo resumption combined meant used placeholder sha256 value signaling since already code generate random session 1.3 use instead minimize unnecessary implementation quirk visible wire remove one place still rely placeholder within library change reviewed http boringssl boringssl 47446 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
122,https://api.github.com/repos/google/boringssl/commits/1f6c3dc7d736357d5454a73217d47ce93d2fb240,False, simplify renego resumption handling offer session renegotiation rather applying clienthello serverhello drop ssl session take care case change reviewed http boringssl boringssl 47445 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
123,https://api.github.com/repos/google/boringssl/commits/962b375bcb7de6422c2bc5c4ef6e527d8f74c74d,False, move session assignment kind weird assign session based whether detect handshake want stateful resumption erase afterwards also remove is_server parameter get change reviewed http boringssl boringssl 47444 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
124,https://api.github.com/repos/google/boringssl/commits/8349dfc87e46d5914b0fefbb33241a95a9eef07d,False, fix ech_accept comment fixed review forgot update comment change reviewed http boringssl boringssl 47448 reviewed dan mcardle dmcardle google.com reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
125,https://api.github.com/repos/google/boringssl/commits/070a6c3e023195d26f2b28738b424926d0d26edc,False, export hpke implementation bug 410 change reviewed http boringssl boringssl 47331 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
126,https://api.github.com/repos/google/boringssl/commits/1eb7769e1189f90e41b81118d903090dbbe98ea6,False, refer evp_hpke_ctx consistent name sometimes hpke sometimes ctx evp_foo_ctx type usually called ctx use ctx bug 410 change reviewed http boringssl boringssl 47404 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
127,https://api.github.com/repos/google/boringssl/commits/1d58cd1fd3b242910ec1371fab82c9e6a96d7089,False, shift kem dependency hpke step introduces evp_hpke_kem capture kem choice evp_hpke_key capture key import thus avoids asking receiver pas full keypair bit wordy better place non user inevitably asks 256 version bug 410 change reviewed http boringssl boringssl 47329 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
128,https://api.github.com/repos/google/boringssl/commits/f0e5ea2d7440f1f25e2cd0a1bfc76298f326e65b,False, update acvp url nist break url often unclear worth including might signal remove however change update many deleted format anchor switched section number remove think worth trying unpick change reviewed http boringssl boringssl 47464 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
129,https://api.github.com/repos/google/boringssl/commits/9b2cdb769ac420b0f98ff7ef5df61115bbddc3d8,False, add caller using private key callback may retain non trivial state private key many case private key longer necessary immediately first round trip e.g non hrr 1.3 connection add function caller query drop state hair earlier tested two way first asserts front using key combined existing test ensure start reporting early second added test ssl_test.cc assert report early expect number parameter started getting tedious split caller need configure weird thing drive handshake manually call take care bio pair business continue bug 183734559 change reviewed http boringssl boringssl 47344 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
130,https://api.github.com/repos/google/boringssl/commits/9f55d972854d0b34dae39c7cd3679d6ada3dfd5b,False, make x509_sig x509_cert_aux opaque meant grab interesting type round missed spot able get way though update note direct access structs replaced accessors change reviewed http boringssl boringssl 47384 reviewed adam langley agl google.com, , ,None
131,https://api.github.com/repos/google/boringssl/commits/9fc6174162473252e573a13ded1c2e644885b272,False, acvp move hash iteration modulewrapper case rpc acvptool modulewrapper expensive iterated test take excessive amount time moving inner loop module wrapper number round trip reduced 1000√£ change reviewed http boringssl boringssl 47364 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
132,https://api.github.com/repos/google/boringssl/commits/2b2cb7d93cdf428fb8a484bb01eb72dce52e5028,False, switch hpke three parameter output buffer little tedious aligns variable length parameter preparation making hpke apis kem agnostic need make many variation hpke function kem especially ever need implement setuppsk setupauth setupauthpsk bug 410 change reviewed http boringssl boringssl 47328 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
133,https://api.github.com/repos/google/boringssl/commits/f39c81d5249ed59cc67d7930f64cec46bc184ec8,False, introduce evp_hpke_ aead kdf type replaces based api one static linker friendly ech make difference currently pull option implemented mean hpke need pull everything ech need vice versa along way fix inconsistency prefixed aead constant aead others since rest name already determines everything shorter version bug 410 change reviewed http boringssl boringssl 47327 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
134,https://api.github.com/repos/google/boringssl/commits/1d842c65e60583888891abd032e6034475949f7b,False, mark first word collective comment change reviewed http boringssl boringssl 47330 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
135,https://api.github.com/repos/google/boringssl/commits/da4390f4ef86da5167fa1c755ed7934f6bb87a84,False, revise deterministic for_test variant hpke setupbases although support x25519 right may need support kems future general case public private keypair meaningful something like ntru even guess entropy passed hrss_encap instead taking entire keypair take private key perhaps call seed bug 410 change reviewed http boringssl boringssl 47326 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
136,https://api.github.com/repos/google/boringssl/commits/198c5f56f6573d2f8e62168044f7c584d9aec58c,False, fix memory leak d2i_asn1_object object reuse imported upstream  change reviewed http boringssl boringssl 47332 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,Risky_resource_management
137,https://api.github.com/repos/google/boringssl/commits/e4d65564836ded46f9538dfaf25a531e17afa602,False, remove hpke psk mode always add back later nothing using right looking reference draft irtf cfrg hpke ietf tracker zero mode beyond setupbase bug 410 change reviewed http boringssl boringssl 47325 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
138,https://api.github.com/repos/google/boringssl/commits/9f70097eff06351a07b48d581e51034d6ef82a8c,False, remove hkdf sha384 hkdf sha512 hpke add need using hkdf sha256 ech keep set small encourage common set parameter bug 410 change reviewed http boringssl boringssl 47324 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
139,https://api.github.com/repos/google/boringssl/commits/1264f0ce35d548cf3fd947149b1a82059e3a4955,True, correctly order pkcs certificate crls pkcs store certificate crls implicitly tagged set type mean unordered der must sorted currently sort neither openssl upstream sort crls sort certificate http github.com openssl openssl pull 13143 report microsoft stricter parser check fix field serializer doe change parsing code still preserve whatever order happened find updated documentation clarify caller rely ordering based odd order kpkcs7nss believe aligns behavior update note longer case constructing pkcs file parsing back keep certificate crls order http chromium chromium src main chrome common net drc 286 change reviewed http boringssl boringssl 47304 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/7, ,None
140,https://api.github.com/repos/google/boringssl/commits/94a63a5b6e883b3cec48f0765b38ae36b807e4f8,False, implement ech draft update hpke draft bug 275 change reviewed http boringssl boringssl 47245 reviewed steven valdez svaldez google.com reviewed david benjamin davidben google.com commit queue steven valdez svaldez google.com, , ,None
141,https://api.github.com/repos/google/boringssl/commits/fe049e4d186f253140e3d4a2570bba93386b75d8,False, document expected use bti pac macro http boringssl boringssl 42084 commit message good job explaining bti pac work missing documentation header convention think right bug 409 change reviewed http boringssl boringssl 47204 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
142,https://api.github.com/repos/google/boringssl/commits/853ca1ea1168dff08011e5d42d94609cc0ca2e27,False, remove non deterministic bit ecdsa acvp test updating test file sha support forgot remove non deterministic bit i.e key signature generation input vector change reviewed http boringssl boringssl 47285 reviewed david benjamin davidben google.com, , ,None
143,https://api.github.com/repos/google/boringssl/commits/d4f877ea3c16cd6b3c2b7071b427aff6af2ae345,False, reference newer chacha20 poly1305 rfc erratum applied otherwise http tools.ietf.org rfcdiff url2 rfc8439 url1 rfc7539 change reviewed http boringssl boringssl 47264 reviewed adam langley agl google.com, , ,None
144,https://api.github.com/repos/google/boringssl/commits/1cf78cd290542e8575c5139907d61dbad5b6f49d,False, use passive entropy collection everywhere change reviewed http boringssl boringssl 47284 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
145,https://api.github.com/repos/google/boringssl/commits/a96f4dd3822efdfbd371abc4d8ad0e1b9b497866,False, rename x509v _version constant upstream ultimately preferred different naming convention type specific constant align update note renames boringssl specific constant recently added look like anyone used yet change reviewed http boringssl boringssl 47164 reviewed adam langley agl google.com, , ,None
146,https://api.github.com/repos/google/boringssl/commits/782d9b6cf7764f6aa2e5e5ffe470431a822c9cc1,False, const correct implementation little goofy obj_dup internally make copy data change reviewed http boringssl boringssl 47125 reviewed adam langley agl google.com, , ,None
147,https://api.github.com/repos/google/boringssl/commits/354cd48f51ea6c6d5c1b1d76ae0585107f8a868e,False, clarify obj_get0_data obj_get_length someone asked api realized clarify der representation change reviewed http boringssl boringssl 47124 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
148,https://api.github.com/repos/google/boringssl/commits/c5dc2781b197157de5dd94cadb7e54dcbff4c59c,False, avcp sha ecdsa _verification_ still supported nist change reviewed http boringssl boringssl 47144 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
149,https://api.github.com/repos/google/boringssl/commits/2e54edf323373a6447b0dcfd4b3b2b7c5bc86847,False, couple aarch64 fips delocate fix clang opt mode produce couple assembly pattern handled delocate firstly two digit vector index simple omission fixed secondly clang put symbol delta .byte directive bit shift .byte directive considered symbol containing directive small could store delta additionally bit shifting symbol expression supported fixed change reviewed http boringssl boringssl 47064 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
150,https://api.github.com/repos/google/boringssl/commits/eec7f3247034519deb50648afc3ef353fec9e8af,False, use placeholder unknown error err_ _error_string change reviewed http boringssl boringssl 47104 reviewed adam langley agl google.com, , ,None
151,https://api.github.com/repos/google/boringssl/commits/16c76acc78ef03dacbf2f65de178a2c382e14ca8,False, include assembly optimization bazel build linux aarch64 signed piotr sikora piotrsikora google.com change reviewed http boringssl boringssl 47084 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
152,https://api.github.com/repos/google/boringssl/commits/fcec391b0e90fadbf20f96de56b595925ceb7dd1,False, remove boringssl x509_cinf function function released version openssl history added 1.0.2 beta removed favor i2d_re_x509_tbs forked two event sure reasoning upstream end thinking x509 currently capture serialized tbscertificate might nice capture whole certificate avoid needing serialization x509_cmp make easier interop stack unclear would require exporting x509_cinf standalone serialization modified bit mean without locking i2d_x509 const thread safe might able shift encoding i2d_re_x509_tbs already inherently non const requires  sure feasible either upstream alignment x509_cinf otherwise absent public accessors seems worth removing update note removed believe caller updated caller use i2d_re_x509_tbs i2d_x509_tbs instead change reviewed http boringssl boringssl 46985 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
153,https://api.github.com/repos/google/boringssl/commits/ab7811ee8751ea699b22095caa70246f641ed3a2,False, document test x509_attribute creation function mostly confirm stack_of asn1_type created right number time change reviewed http boringssl boringssl 46984 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
154,https://api.github.com/repos/google/boringssl/commits/daf1aca1a43ae0f553ceb4cf567c2d855321339e,False, revert handshaker number make startprocess flexible b571e77773 changed number interacts poorly cross version test instead remove assumption startprocess making relationship two set fds change reviewed http boringssl boringssl 47044 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
155,https://api.github.com/repos/google/boringssl/commits/b173d9191d080c475f803965bd7639914a6d1dc3,True, remove support malformed x509_attributes x509_attribute structure includes hack tolerate malformed attribute encode value directly instead set value form never created openssl needed imported upstream also change slightly previously set1_data would override whatever previously x509_attribute leak memory set1_data appends set pkcs attribute use set value unclear intentional upstream part attrtype case make sense old behavior since way create two element set upstream long since released behavior left matching upstream update note given openssl accepted five year unlikely anything depends something break revert revisit one call non empty x509_attribute behavior change safe change reviewed http boringssl boringssl 46947 reviewed adam langley agl google.com commit queue david benjamin davidben google.com,https://api.github.com/repos/google/boringssl/issues/10, ,None
156,https://api.github.com/repos/google/boringssl/commits/575d1128581c6751f93b0649253ba9d2d981d3e5,False, make x509_attribute opaque x509_req.c change imported upstream  update note direct access x509_attribute replaced one accessors find direct access hopefully fine change reviewed http boringssl boringssl 46946 reviewed adam langley agl google.com, , ,None
157,https://api.github.com/repos/google/boringssl/commits/68a799af7f6aed15dfeedc26e5ae43ebce873a6a,False, acvptool fix typo hard coding http method change reviewed http boringssl boringssl 46964 reviewed adam langley agl google.com, , ,None
158,https://api.github.com/repos/google/boringssl/commits/f0e64904a8c3ef2488e03bbfa66ef15c61f383f5,True, document x509.h function stopped short documenting add1_attr_by function type parameter bit mess appears several enums put together end updated documentation note also need avoid mbstring_flag preview putting later see type parameter used set1_data extra fun pkcs attribute set valued plus upstream import first change reviewed http boringssl boringssl 46945 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/10, ,None
159,https://api.github.com/repos/google/boringssl/commits/e60893c098f1c8f1778be4af34de30c5c4c040ee,False, make x509_pubkey opaque update note direct access x509_pubkey replaced one accessors believe caller fixed point change reviewed http boringssl boringssl 46944 reviewed adam langley agl google.com, , ,None
160,https://api.github.com/repos/google/boringssl/commits/468cde90ca58421d63f4dfeaebcf8bb3fccb4127,False, always encode booleans der asn1_boolean representation mess asn1_boolean int non negative negative value mean omitted default get cast uint8_t encoded value mean caller simply expected know true 0xff fix encoding 0xff also fix bug value like 0x100 interpreted true e.g tasn_enc.c logic handle default value encoded false cast look least significant byte doe change parsing behavior allow ber encoding preserve value memory representation though tighten however ber encode longer preserved encoding update note caller setting asn1_booleans positive value 0xff encode 0xff probably fix bug anyone attaching significance incorrectly encoded booleans break change reviewed http boringssl boringssl 46924 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
161,https://api.github.com/repos/google/boringssl/commits/2f3958a4156d95c7e9778979acda4e43c7d15979,False, fix issueruid subjectuid parsing key usage checker many x.509 parser bug chromium 1199744 change reviewed http boringssl boringssl 46904 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
162,https://api.github.com/repos/google/boringssl/commits/b571e77773ef875f7ba9f1d2bba81f305152703e,False, add experimental handshake hint api see handshake hint internal originally bin wub google.com reworked test tidied bit start replacement split handshake api 1.3 supported start initial set hint add later particular probably apply remote handshaker extension order avoid needing capability protect change change reviewed http boringssl boringssl 46535 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
163,https://api.github.com/repos/google/boringssl/commits/666f2ab65e677bccc3db7063ae1f8706417341e1,False, make python script python compatible still need python compatible figure switch version used left byte unicode mess care figure rewrite also much faster anyway change reviewed http boringssl boringssl 46884 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
164,https://api.github.com/repos/google/boringssl/commits/15961379e6b2682d73c3cb8f8016a09d04257c77,False, export fuzzers chromium fuzzer shared library build change reviewed http boringssl boringssl 46864 reviewed adam langley agl google.com, , ,None
165,https://api.github.com/repos/google/boringssl/commits/7a1986c463548627b83ed58d9f9db65bddbce6a5,False, acvp support gmac algorithm defined gcm without plaintext input trivial change reviewed http boringssl boringssl 46844 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
166,https://api.github.com/repos/google/boringssl/commits/94b477cea5057d9372984a311aba9276f737f748,False, record fuzzing corpus decoder also generate corpus unblock chromium roll build tool expect corresponding directory somewhere bug 275 change reviewed http boringssl boringssl 46826 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
167,https://api.github.com/repos/google/boringssl/commits/5545b61a963d175fd6052c18a4dd6ff242ce32f0,False, use consistent plural corpus corpus seems common corpus chromium code search including libfuzzer source change reviewed http boringssl boringssl 46825 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
168,https://api.github.com/repos/google/boringssl/commits/43828993bcb7c8bbe74703cd74dabd208c792baf,False, add util bot libfuzzer .gitignore gclient managed file usually .gitignore think without redownload time bot though also make git status cleaner change reviewed http boringssl boringssl 46824 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
169,https://api.github.com/repos/google/boringssl/commits/09f71c1bfd9047d67ebf8a052d39e4feebaf896c,False, acvp support ecc ssc staticunified mode change reviewed http boringssl boringssl 46704 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
170,https://api.github.com/repos/google/boringssl/commits/12a3e7edf6dad774bf3d824dd2cb5405268f087e,False, check invalid alpn input ssl_ ctx_ set_alpn_protos see also upstream differs upstream treat null valid way spell empty list think mistake asked  upstream also newly make empty list disable alpn previously disable misread malloc failure already fixed misreading due switch bssl array bssl span documentation odd preserve behavior update documentation writes test update note reject invalud input previously would accept silently send invalid alpn extension server would almost certainly error change reviewed http boringssl boringssl 46804 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
171,https://api.github.com/repos/google/boringssl/commits/e4c19175abe1c1a113ee95ad0c8b3fc4239b5ccb,False, duplicate serverhello construction code also fix minor bug matter implement dtls 1.3 init_message must paired finish_message correctly handle dtls header change reviewed http boringssl boringssl 46785 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
172,https://api.github.com/repos/google/boringssl/commits/3b8c5ec1f6dfac6b1aa5a060990216819ff298a7,False, rearrange key share early data logic currently determine whether need time resolving key share machinery little late early data negotiation end accepting early data clearing later function work easy mess given preceding also alp logic got wrong believe result incorrect behavior instead pull secret computation key_share helper function find matching key share check early whether need hrr deciding early data change reviewed http boringssl boringssl 46765 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
173,https://api.github.com/repos/google/boringssl/commits/e2b7bb72216e88b8238083af63c3ecb244e79891,False, skip early data hrr offered 1.3 server skip early data client offered hrr codepath quite get right minimal fix issue think rearrange logic slightly rather deciding rtt changing mind next  bug doe consequence configured skip early data happy vacuously skip zero early data record strict change reviewed http boringssl boringssl 46764 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
174,https://api.github.com/repos/google/boringssl/commits/2de33c6b2bd882c58bfccec6617df775caeb76af,False, add ech server config api ssl_ctx_api fuzzer bug 275 change reviewed http boringssl boringssl 46744 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
175,https://api.github.com/repos/google/boringssl/commits/3af88549c2d985f51b019f87be21f47463a27421,False, fix ppc64le build change reviewed http boringssl boringssl 46724 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
176,https://api.github.com/repos/google/boringssl/commits/669ffe64a498a16ed8a339758c3abedcbb3d9522,False, simplify lucky13 mitigation rather computing kvarianceblocks hard reason use abstraction let separate reasoning byte minimum maximum value data_size interaction hmac separately core constant time sha update also faster guessing accurate block count  866000 aes 128 cbc sha1 byte open operation 2000697us 6.9 sec 616000 aes 128 cbc sha1 256 byte open operation 2001403us 78.8 sec 432000 aes 128 cbc sha1 1350 byte open operation 2003898us 291.0 sec 148000 aes 128 cbc sha1 8192 byte open operation 2006042us 604.4 sec 83000 aes 128 cbc sha1 16384 byte open operation 2010885us 676.3 sec  2089000 aes 128 cbc sha1 byte open operation 2000049us 16.7 sec 141.3 851000 aes 128 cbc sha1 256 byte open operation 2000034us 108.9 sec 38.2 553000 aes 128 cbc sha1 1350 byte open operation 2002169us 372.9 sec 28.1 178000 aes 128 cbc sha1 8192 byte open operation 2008596us 726.0 sec 20.1 98000 aes 128 cbc sha1 16384 byte open operation 2001509us 802.2 sec 18.6 confirmed valgrind tooling still constant time ran new nuisance gcc loop run counter value gcc sometimes offset loop counter secret cancel dereferencing memory etc. valgrind doe know uninit uninit get upset worked around barrier change reviewed http boringssl boringssl 46686 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
177,https://api.github.com/repos/google/boringssl/commits/00e434d67e15c9b6d535a29e9ef05a7ab48ad122,False, add ech server draft ietf esni add initial implementation ech server piece client bogo necessary testing particular server support compression ech decryption fails send retry_configs back client server pass ech accept ech reject test case interop runner tested cloudflare client reproducibility started main branch commit updated endpoint script pas server echconfig private key boringssl tool follow update hpke latest draft catch draft http github.com xvzcf interop runner bug 275 change reviewed http boringssl boringssl 45285 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
178,https://api.github.com/repos/google/boringssl/commits/61d5aabc06d378dda4b62938a14fe703b8d5a6f2,False, runner remove unused field change reviewed http boringssl boringssl 46664 reviewed adam langley agl google.com, , ,None
179,https://api.github.com/repos/google/boringssl/commits/ca65bff67c7bfeb84531be8044ca874db2294c01,False, runner construct finishedhash earlier currently construct finishedhash fairly late resolved result need defer transcript operation across large chunk code remnant earlier iteration 1.3 tell cipher suite yet cipher suite known earlier construct finishedhash object immediately move hrr handling inside keep 1.3 bit together allows maintain hrr bit handshake closer rest hrr processing useful ech complicates part process inner outer clienthello finally add missing check hrr cipher suite match change reviewed http boringssl boringssl 46630 reviewed adam langley agl google.com, , ,None
180,https://api.github.com/repos/google/boringssl/commits/c31fb79cfe35f8b14731bb2598d091b2e1394577,False, simplify tls_cbc.c slightly remove unnecessary virtual call benchmark difference mostly positive probably noise  839000 aes 128 cbc sha1 byte open operation 2000497us 6.7 sec 623000 aes 128 cbc sha1 256 byte open operation 2000409us 79.7 sec 434000 aes 128 cbc sha1 1350 byte open operation 2002909us 292.5 sec 146000 aes 128 cbc sha1 8192 byte open operation 2000785us 597.8 sec 82000 aes 128 cbc sha1 16384 byte open operation 2014268us 667.0 sec  866000 aes 128 cbc sha1 byte open operation 2000697us 6.9 sec 3.2 616000 aes 128 cbc sha1 256 byte open operation 2001403us 78.8 sec 1.2 432000 aes 128 cbc sha1 1350 byte open operation 2003898us 291.0 sec 0.5 148000 aes 128 cbc sha1 8192 byte open operation 2006042us 604.4 sec 1.1 83000 aes 128 cbc sha1 16384 byte open operation 2010885us 676.3 sec 1.4 change reviewed http boringssl boringssl 46685 reviewed adam langley agl google.com, , ,None
181,https://api.github.com/repos/google/boringssl/commits/7a0834b918772320a7b0ffeafb25e67a5870e55a,False, remove remnant cbc sha2 cipher suite follow cleanup work http boringssl 27944 change reviewed http boringssl boringssl 46684 reviewed adam langley agl google.com, , ,None
182,https://api.github.com/repos/google/boringssl/commits/bff883436231e2ecc24efbfeb858ded620500b34,False, runner test different v2clienthello challenge length challenge field least per implementation openssl may either left padded truncated form clienthello random test case well exact match change reviewed http boringssl boringssl 46631 reviewed adam langley agl google.com, , ,None
183,https://api.github.com/repos/google/boringssl/commits/6810f0e83aeb2f11599f192335eec9577678e03e,False, runner ensure hellobytes always hello.marshal client handshake currently defers creating finishedhash writing thing transcript little annoying ech preparation simplifying one nuisance retain hello hellobytes across long span code hellobytes almost hello.marshal except send v2clienthello hellobytes record serialized clienthello completely differently jdk11 workaround test hellobytes record swapped clienthello entirely time finally write hellobytes transcript hello may updated second clienthello resolve first two issue replaces option serializing clienthellomsg clienthello replacement function return clienthellomsg instead byte little weird conflating parsed constructed clienthellos well follow remove differed transcript bit actually able drop hellobytes change reviewed http boringssl boringssl 46629 reviewed adam langley agl google.com, , ,None
184,https://api.github.com/repos/google/boringssl/commits/fa2d3d56b9f542f8519b1c2298213d92eb954f3c,False, runner fix ech confirmation calculation psks test encoding message doe necessarily give back value bug 275 change reviewed http boringssl boringssl 46644 reviewed david benjamin davidben google.com reviewed dan mcardle dmcardle google.com commit queue david benjamin davidben google.com, , ,None
185,https://api.github.com/repos/google/boringssl/commits/7d2ddd2991c5831747bedf7cdbd01b877ca92769,False, runner fix hpke parameter order matching standard library cipher.aead interface evp_aead implementation put aad parameter plaintext ciphertext bug 275 change reviewed http boringssl boringssl 46665 reviewed dan mcardle dmcardle google.com reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
186,https://api.github.com/repos/google/boringssl/commits/d791fbd308b9ef0c47250f08e9a2e79d081d0e40,False, runner fail also avoid unnecessarily stashing copy serialized old clienthello change reviewed http boringssl boringssl 46628 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
187,https://api.github.com/repos/google/boringssl/commits/4151b9febaf2ac4233f95a2a65e5dcc1bcd14fa2,False, runner use buffer 1.3 comment say buffer needed 1.2 match code code buffer one place ech avoid copying hash.hash doe support albeit roundabout way ugly mean properly drop handshake buffer 1.3 change reviewed http boringssl boringssl 46627 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
188,https://api.github.com/repos/google/boringssl/commits/4b854a6db749707f9c7156b78e2ab8c892d107cb,False, runner maintain two copy transcript hash client server half remnant ssl 3.0 originally lacking way clone hash.hash limitation meant computing ssl 3.0 proto hmac construction mutated running hash finished crypto maintained two without ssl 3.0 longer needed however leaf crypto.hash hash.hash named hash stepped around storing cipher suite using change reviewed http boringssl boringssl 46626 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
189,https://api.github.com/repos/google/boringssl/commits/99f6d4bd183fa609c4474a64ee41372f1a575073,False, runner remove remnant ssl 3.0 need implement enough ssl 3.0 test shim doe  change reviewed http boringssl boringssl 46625 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
190,https://api.github.com/repos/google/boringssl/commits/5f757bc3956117c8058796930ef4106a4a40a38b,False, runner fix writeclienthash writerecord ordering per comment writeclienthash writeclienthash writerecord get sequence number right client hrr bit still wrong fix part tidying hrr path later commit actually matter dtls sequence number support dtls 1.3 change reviewed http boringssl boringssl 46624 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
191,https://api.github.com/repos/google/boringssl/commits/7a15a702a24031d44e43f3616b2add48ca445177,False, runner remove remnant various pre standard 1.3 variant runner logic built change reviewed http boringssl boringssl 46604 reviewed adam langley agl google.com, , ,None
192,https://api.github.com/repos/google/boringssl/commits/f225516cc5792e5d55ccdd641cbcce28e5995df3,False, runner remove remnant separate message early 1.3 draft dedicated message type handling runner still based along way remove test since generic unexpected message type change reviewed http boringssl boringssl 46585 reviewed adam langley agl google.com, , ,None
193,https://api.github.com/repos/google/boringssl/commits/05082718919f7156e2d4aa91ac0e4592cedf9490,False, runner store ciphersuite avoids looking passing around ciphersuite object everywhere serialize simply lookup parsing time change reviewed http boringssl boringssl 46565 reviewed adam langley agl google.com, , ,None
194,https://api.github.com/repos/google/boringssl/commits/26a589e10b00850b0049a9b23066175002a5031e,False, runner move writehash finishedhash struct avoids duplicating code client server also clean ech test code need juggle pair transcript brief window change reviewed http boringssl boringssl 46564 reviewed adam langley agl google.com, , ,None
195,https://api.github.com/repos/google/boringssl/commits/fd739853a8b088a4273d7856392a7df3f3b759b4,False, fix spelling hpke aead constant aes_128_gcm common aes_gcm_128 match specification bug 275 change reviewed http boringssl boringssl 46666 reviewed david benjamin davidben google.com reviewed dan mcardle dmcardle google.com commit queue david benjamin davidben google.com, , ,None
196,https://api.github.com/repos/google/boringssl/commits/dfde04f078c995bcbb253548a8f8ce0040f74496,False, reset server callback expectation new handshake support renegotiation server anymore even want rerun alpn anyway resumption renegotiation change reviewed http boringssl boringssl 46533 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
197,https://api.github.com/repos/google/boringssl/commits/8501579acbec6fe065bcf6c96f428a5f38b98fe2,False, fix flush error handling bio_flush may return negative value cast directly bool change reviewed http boringssl boringssl 46534 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
198,https://api.github.com/repos/google/boringssl/commits/15e0f6784bb986d44a170f131c6687a54822bedf,False, fold ripemd internal.h ripemd.c used file given name defined probably usable file anyway change reviewed http boringssl boringssl 46426 reviewed adam langley agl google.com, , ,None
199,https://api.github.com/repos/google/boringssl/commits/ca4598781a37b6d3f2f7a63593229cd7570a194f,False, move load store helper crypto internal.h load variation align one set avoids host_ macro defined md32_common.h little easier make conventional header change reviewed http boringssl boringssl 46425 reviewed adam langley agl google.com, , ,None
200,https://api.github.com/repos/google/boringssl/commits/8d4c8fc41be567bca17ce7c15304dc06539a060a,False, make word crypto fipsmodule mode actually word little confusing load_word_le actually use size_t instead crypto_word_t note platform notably nacl crypto_word_t larger size_t still need support good testing story tested hacking bit x86 build think openssl_64_bit change reviewed http boringssl boringssl 46424 reviewed adam langley agl google.com, , ,None
201,https://api.github.com/repos/google/boringssl/commits/6b9c012b7bd7ecc845e15115cd94017e88c80c12,False, handle eintr handshaker.cc call handled others change reviewed http boringssl boringssl 46532 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
202,https://api.github.com/repos/google/boringssl/commits/084064beccad5e2e1b2f97b3a941244f19af0766,False, add missing case ssl_buffer.cc code handle since outgoing handshake different path missing check change reviewed http boringssl boringssl 46531 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
203,https://api.github.com/repos/google/boringssl/commits/9bcf307c4c58b624964a1af3812b86613a89de11,False, fix unreachable code quic handshaker driver check anything replace assert add comment since wait handling little tricky change reviewed http boringssl boringssl 46530 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
204,https://api.github.com/repos/google/boringssl/commits/0a6c3fc9c309f95408a3194f087b5394c198d250,False, rearrange sslkeyshare serialize strange serialize deserialize method inverse split operation move common part subclass change reviewed http boringssl boringssl 46529 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
205,https://api.github.com/repos/google/boringssl/commits/08b1729f07b2b471afddcd05602a60ad83cb3b7e,False, fix ssl internal.h sectioning delegated credential bit got stuck middle handshake bit change reviewed http boringssl boringssl 46528 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
206,https://api.github.com/repos/google/boringssl/commits/b62a48f31d276b8ff081ab1be79ac091f4572d26,False, remove unnecessary test exclusion split handshake 1.3 work need exclude version negotiation also test quic need exclude manually checking protocol work well change reviewed http boringssl boringssl 46527 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
207,https://api.github.com/repos/google/boringssl/commits/60a78dcc9885a2043a52e294539c00979bad21af,False, remove tls13 split handshake flag longer needed change reviewed http boringssl boringssl 46526 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
208,https://api.github.com/repos/google/boringssl/commits/953650cc7becebfce9d4d72836047edacb07724d,False, define place change reviewed http boringssl boringssl 46525 reviewed adam langley agl google.com, , ,None
209,https://api.github.com/repos/google/boringssl/commits/b9b036340defede028fa70fa9f4f5382f5927f01,False, tidy handshaker tester better job scopers fds also need make copy handshaker_path strdup non const parameter posix_spawn inherits execve problem unlike cast char const const char const posix apis const correct finally freely use std vector friend test actually need depend bssl array change reviewed http boringssl boringssl 46524 reviewed adam langley agl google.com, , ,None
210,https://api.github.com/repos/google/boringssl/commits/1a93f4f820d48e100fde81cd6bd683293693461f,False, modulewrapper add option print build information android fips validation one end quite lot different build configuration acvp useful able check binary think change reviewed http boringssl boringssl 46484 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
211,https://api.github.com/repos/google/boringssl/commits/0da75f35d51ab7fbfa8efaf71c87606ee26f5db3,False, fips counter aes ctr change reviewed http boringssl boringssl 46504 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
212,https://api.github.com/repos/google/boringssl/commits/3af62269df3525ea526a2b6de0d7c70e8f8d5919,False, enforce pre_shared_key must come omitting extension mean never issue ticket client offer ticket anyway rfc8446 4.2.9 say must reject clienthello clear alert use probably appropriate thanks ben kaduk pointing change reviewed http boringssl boringssl 46464 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
213,https://api.github.com/repos/google/boringssl/commits/4aef687fcff7d0b4a6f2942a5b21c97f8da33097,False, zero fips counter msan like counter starting whatever value malloc found free change reviewed http boringssl boringssl 46444 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
214,https://api.github.com/repos/google/boringssl/commits/da890de1b534aedc6bb2001de6ff6b6676be3a60,False, remove is_resume field teststate used even set correctly split handshake test change reviewed http boringssl boringssl 46384 reviewed adam langley agl google.com, , ,None
215,https://api.github.com/repos/google/boringssl/commits/04c44d92c941da928d23b91aa1976f9844a0b3c1,False, remove build flag year past february 2020 deadline removing judging 72831885 look like root cause addressed change reviewed http boringssl boringssl 46407 reviewed adam langley agl google.com, , ,None
216,https://api.github.com/repos/google/boringssl/commits/20f7bbaaccd6dfd2214122175e85039ae7b4e37c,False, add warning use openssl_memory_ function called every malloc free non trivial implication change reviewed http boringssl boringssl 46406 reviewed adam langley agl google.com, , ,None
217,https://api.github.com/repos/google/boringssl/commits/a24ab549e6ae246b391155d7bed3790ac0e07de2,False, use unsized helper truncated sha 512 variant although strictly fine call sha512_final sha384_final array size parameter purely decorational according language gcc reportedly check get upset size mismatch use unsized helper function code match specified bound unfortunately bound function bit misleading sha512_final really output based sha md_len init function called rather final function fixed place within library mismatched added asserts smaller function sha512_final assert seen lot code use sha384_init sha512_update sha512_final fix sha256 variant since generated pile macro multiply included file probably good opportunity make code macro heavy update note small chance asserts trip something hopefully since left sha512_final alone bug 402 change reviewed http boringssl boringssl 46405 reviewed adam langley agl google.com, , ,None
218,https://api.github.com/repos/google/boringssl/commits/139adff9b27eaf0bdaac664ec4c9a7db2fe3f920,False, fix mismatch header implementation bn_sqr_comba8 bug 402 change reviewed http boringssl boringssl 46404 reviewed adam langley agl google.com, , ,None
219,https://api.github.com/repos/google/boringssl/commits/49f0329110a1d93a5febc2bceceedc655d995420,False, remove gcc 4.8.99 check gcc 4.9.0 released april 2014 well five year ago change reviewed http boringssl boringssl 46346 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
220,https://api.github.com/repos/google/boringssl/commits/d0b66c7d5c82b25933f79a37720708e5a55885e7,False, bump minimum cmake version cmake 3.5.0 released march 2016. per five year rule require http cmake.org pipermail cmake 2016 march 062947.html change reviewed http boringssl boringssl 46345 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
221,https://api.github.com/repos/google/boringssl/commits/edfe4133d28c5e39d4fce6a2554f3e2b4cafc9bd,False, automatically enable c11 atomics available 2021. hopefully least assume anyone building std c11 also corresponding set header plus even clang seems provide header c11 atomics work clang also apparently atomics optional check  doe set c11 minimum version build std c99 silently use non atomics implementation little magical kept way assert really want c11 atomics mostly turn std c11 msvc self assert update note something fails compile revert adjust check add opt give also building std c99 consider std c11 change reviewed http boringssl boringssl 46344 reviewed adam langley agl google.com, , ,None
222,https://api.github.com/repos/google/boringssl/commits/565081680a6b432a5ddc275fcf2b11375a97f39c,False, make python3 compatible make script run python3 let replace python2 specific dict function python3 compatible one change reviewed http boringssl boringssl 46364 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
223,https://api.github.com/repos/google/boringssl/commits/9be3252947c6ace1f179dbb4af544e86917a2430,True, remove document related function pkcs csrs contain extension attribute kind like extension defined separately attribute type pkcs embed list x.509 extension inside attribute well microsoft variant allowed caller globally reconfigure set attribute recognized alias extension attribute used anyone thread safe remove support two default attribute type document remaining function update note remove pair unused function change reviewed http boringssl boringssl 46326 commit queue david benjamin davidben google.com reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/9, ,None
224,https://api.github.com/repos/google/boringssl/commits/a99d3a876bb50401313854c76d2977b5a52ee39e,False, document function x509.h one thing note name setter copying ownership transfering non const currently even serializing duplicating x509_name potentially mutates ugh change reviewed http boringssl boringssl 46325 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
225,https://api.github.com/repos/google/boringssl/commits/ac85c036d7cf81b63dc030ef73a1f7bb48c77890,False, access value.ptr v_asn1_boolean fix bug asn1_type_get partly imported upstream though believe asn1_type_set broken per also lot commit added test ensure maintain unused bit invariant anyway case external code relies invariant come pointer null initialized zeroing pval free change reviewed http boringssl boringssl 46324 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
226,https://api.github.com/repos/google/boringssl/commits/477b309bf1a329ab4a666db7e40792898059ad53,False, add api doe come openssl openssl doe appear way get information work x509 object x509_pubkey change reviewed http boringssl boringssl 46304 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
227,https://api.github.com/repos/google/boringssl/commits/502fceede9e9856ce9eb913d697490b58886ca38,False, test empty evp_cipher input fix exact memcpy overlap see also upstream trying figure asan normally catch overlapping memcpys flag noticed actually test empty input added missing fixed bad assert ofb.c asan still flag llvm even requires memcpy handle dst src still fixing effort getting clear answer gcc msvc though put frustrating position trying follow rule main toolchain sanitizer disavow http bugs.llvm.org show_bug.cgi 11763 http d86993 change reviewed http boringssl boringssl 46285 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
228,https://api.github.com/repos/google/boringssl/commits/e5fe31cfe734ca6d9fd1f1a84c48fe1c49f8e01b,False, revert implement reverts commit doe seem like currently need change later git bring back easily change reviewed http boringssl boringssl 46286 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
229,https://api.github.com/repos/google/boringssl/commits/8c31179d81081cc9b8ce5b5ac3151088c45042f7,False, fix unnecessarily direction specific test evp_ciphers deterministic usually point testing one direction ecb test missing free decryption test ctr direction ought test api agrees ofb vector doubled merge together plus typo ofb aes192.decrypt test also present upstream actually testing everything removed direction specific logic altogether since test imported nist_cavp rely though may something said running way since actually double ... change reviewed http boringssl boringssl 46284 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
230,https://api.github.com/repos/google/boringssl/commits/d9ee55a89f9eee0c8febccc1091b4770401407ef,False, refactor hpke api include explicit length parameter bug 275 change reviewed http boringssl boringssl 46184 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
231,https://api.github.com/repos/google/boringssl/commits/c9d3265a9201bb81183764d71ae617aaabb51851,False, generalize make_errors.go allow evp covering multiple directory switch make_errors.go take library name parameter rather detecting cwd considered detecting need map evp crypto whatever crypto whatever evp direction since crypto hpke currently sits evp namespace gone ahead added easier define new error crypto hpke added crypto cipher etc. yet moving breaking change consumer put err_lib_cipher err_lib_evp switch case need patch bug 398 change reviewed http boringssl boringssl 46264 reviewed adam langley agl google.com, , ,None
232,https://api.github.com/repos/google/boringssl/commits/b09f283a030efc650cfcb3476932626c5000b921,False, add window impl change reviewed http boringssl boringssl 46245 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
233,https://api.github.com/repos/google/boringssl/commits/b2147413e01666859552b6544c1d55739ca9bd6a,False, pas handshaker path split handshake test little inconvenient external user test suite also helpful pas handshaker path build configuration without handshaker file anyway change reviewed http boringssl boringssl 46244 reviewed adam langley agl google.com, , ,None
234,https://api.github.com/repos/google/boringssl/commits/c953ee4af7ad385a82709d33ed3116f5900343d4,False, add rng support freebsd get entropy dev urandom freebsd getrandom freebsd per http www.freebsd.org cgi man.cgi query getrandom sektion format html tested manually ninja run_tests freebsd change reviewed http boringssl boringssl 46188 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
235,https://api.github.com/repos/google/boringssl/commits/fb855a28fe9689e8e1f76f1fb664228828c882f5,False, move fips.c subdirectory build script distinguish normal file bcm.c fragment based whether code subdirectory inside crypto fipsmodule bug 401 change reviewed http boringssl boringssl 46224 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
236,https://api.github.com/repos/google/boringssl/commits/a3437c09c77bab011d0bebb8f61a6df82eb53eec,False, implement see draft davidben tls13 pkcs1 00. code point disabled default must configured also defined 1.3 client certificate otherwise ignored required reworking test bit since first signature algorithm disabled default first algorithm behaves differently client server change reviewed http boringssl boringssl 46187 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
237,https://api.github.com/repos/google/boringssl/commits/2c1c9fa5cbb123555f38947af3c3ad3f29132dda,False, better document nullable x.509 getters safe assume x509 field non null seems cause confusion often get request add null check rewriting calling code x.509 surprisingly optional field generally say pointer non null unless documented work remember mention nullable one change reviewed http boringssl boringssl 46185 reviewed adam langley agl google.com, , ,None
238,https://api.github.com/repos/google/boringssl/commits/1eae29777c4309eb3bca73702b84becaebb71dc5,False, runner remove redundant enable curve shim flag already know supported curve runner.go sense repeating list place needed need similar construct signing prefs figure worth consistent also add shimconfig option others support curve likely run quickly change reviewed http boringssl boringssl 46186 reviewed adam langley agl google.com, , ,None
239,https://api.github.com/repos/google/boringssl/commits/87aafb69e814546a0e9a686bcbaa3a17879dedde,False, initialize nonce peraeadtest.abi flagged valgrind change reviewed http boringssl boringssl 46204 reviewed adam langley agl google.com, , ,None
240,https://api.github.com/repos/google/boringssl/commits/3d15a94add73c195fa0e68250afae8c030818437,False, document asn1_type related function representation bit messy necessary clean variable name smooth away two rough edge x509_algor_get0 would leave out_param_value uninitialized out_param_type v_asn1_undef instead set null caller accidentally use uninitialized pointer key null would leave key alone one call function externally none since removed caller openssl rely behavior null check add discontinuity empty string seems unnecessary changing algorithm without changing key useful note api support changing key without algorithm note reviewing representation asn1_type specified somewhat indirectly asn1_type asn1_any asn1_item utype v_asn1_any look asn1_ex_c2i peel asn1_type layer parse directly value field fixup null hopefully rework someday ... change reviewed http boringssl boringssl 46165 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
241,https://api.github.com/repos/google/boringssl/commits/f7b87c83fa5a8f3f30058033ea41d4f24836d44a,False, fips add counter order provide evidence auditor high level function end calling fips module provide counter allow monitoring change reviewed http boringssl boringssl 46124 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
242,https://api.github.com/repos/google/boringssl/commits/acf6149ad878f66c2de240f24617f280371e13a3,False, align openssl constness static asn1_objects asn1_objects awkward sometimes static returned obj_nid2obj sometimes dynamic parsed crypto asn1 structure crypto asn1 need support unknown oids thus must asn1_objects also may initialized static one various apis x509_algor_set0 make work detects static asn1_objects function like x509_algor_set0 take ownership openssl take non const asn1_object match obj_nid2obj return non const asn1_object signal freeable however mean obj_nid2obj mutability match return type fork switched obj_nid2obj return const make x509_algor_set0 take const asn1_object even though would actually take ownership dynamic asn1_objects also internal cast todo const correct neither situation ideal perhaps sound model would copy static asn1_objects putting structs would match current usage think aligning openssl lesser evil since avoids misleading set0 function managing ownership asn1_objects much common mutating end added note asn1_objects create must assumed immutable update note change obj_nid2obj compatible change x509_algor_set0 may require fixing pointer type almost honored function exception c2i_asn1_object instead check dynamic flag part object reuse business would come ever embedded asn1_objects directly structs change reviewed http boringssl boringssl 46164 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
243,https://api.github.com/repos/google/boringssl/commits/6b48efac7b3b229c17cff55e5cfd9f9a0aea9b70,False, add record flag runner.go flag cause runner execute shim debugger see http project.org unlike typical debugger workflow first record session replay user interact debugger recording replay session multiple time reason opted launch xterm like gdb lldb difference record restricts runner exactly one test otherwise easy accumulate bunch unwanted recording also replay recent recording default useful runner record multiple test change reviewed http boringssl boringssl 46144 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
244,https://api.github.com/repos/google/boringssl/commits/04b3213d43492b6c9e0434d8e2a4530a9938f958,False, register bssl uniqueptr change reviewed http boringssl boringssl 46105 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
245,https://api.github.com/repos/google/boringssl/commits/215f4a0287a0eaa19da5de32c9f4745a28e518be,False, register policy_mapping bssl uniqueptr also pull policy_mappings way stack_of handling change reviewed http boringssl boringssl 46104 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
246,https://api.github.com/repos/google/boringssl/commits/dfe0b01b3eb3773d16a099cb1f900f9ca48fc842,False, stub pkcs7 help cryptography.io compatibility implement flag pkcs7_sign check flag pkcs7_detached cryptography.io depends constant type available cryptography.io also want new function think easier stub externally need actually enable feature look actually implementing pkcs7_sign change reviewed http boringssl boringssl 46084 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
247,https://api.github.com/repos/google/boringssl/commits/24df734d20e15a0b0b084ddc11521c384be85a4d,False, remove todo reverse output pkcs12_parse openssl classified behavior bug fixing next release principle compatible emulate openssl bug undo update use pkcs12_parse rare behavior confusing let leave  bug 250 change reviewed http boringssl boringssl 46064 reviewed adam langley agl google.com, , ,None
248,https://api.github.com/repos/google/boringssl/commits/d4fdb7bae3c34d7e584aec88c0115f4091023643,False, make x509_val structure opaque aim eventually make entire x509 structure opaque let start small update note believe safe compile failure switch revert wrong many caller still need updating change reviewed http boringssl boringssl 45965 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
249,https://api.github.com/repos/google/boringssl/commits/abd6c05a48da9ddfa8e547c5dbb7a8b8dbb39523,True, support creating unencrypted pkcs file pkcs overly general among thing support disabling encryption practice unencrypted form widely implemented moreover even context cleartext fine unencrypted pkcs file still requires password mandatory mac component useful however cryptography.io previously added support parsing add support creating cryptography.io also depends change reviewed http boringssl boringssl 46045 commit queue david benjamin davidben google.com reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/12, ,None
250,https://api.github.com/repos/google/boringssl/commits/84c0c900fce961baf99fe000f1ca4a2fc5911b41,True, move pkcs sample embed_test_data pkcs12_test.cc getting bit long along way needed fix work around syntax quirk change reviewed http boringssl boringssl 46044 reviewed adam langley agl google.com commit queue david benjamin davidben google.com,https://api.github.com/repos/google/boringssl/issues/12, ,None
251,https://api.github.com/repos/google/boringssl/commits/a1d1a67589ba34e7a2cbce4f7556228d9e5b2c81,False, remove remnant 1.3 downgrade carveouts update note http boringssl boringssl 44124 made function kept around still call site floating around code since updated remove change reviewed http boringssl boringssl 45984 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
252,https://api.github.com/repos/google/boringssl/commits/e9315d5f86ef3f810d72981373c82112e156c099,False, remove update note remove function appears unused also hardcodes use md5 please use change reviewed http boringssl boringssl 45964 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
253,https://api.github.com/repos/google/boringssl/commits/e7bb89bae1eb281473f3c1e846ff27578fa36b5a,False, fix openssl_ec_ constant add got value flipped around also cryptography.io want check curve encoding mostly support named curve return change reviewed http boringssl boringssl 46024 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
254,https://api.github.com/repos/google/boringssl/commits/0a86cbff452f3c1807738968a88332416279e3dc,False, return int improves compatibility cryptography.io cryptography.io actually care return since code run feigning success seems better failure application doe try run function check returning error probably crash  change reviewed http boringssl boringssl 46004 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
255,https://api.github.com/repos/google/boringssl/commits/eb5640bc4445e7d7aaa913fddc34374b81d7a4f2,False, check inner outer crl signature algorithm match per rfc5280 section 5.1.1.2 must contain algorithm identifier signature field sequence tbscertlist section 5.1.2.2 aligns check already x.509 side update note invalid crls inconsistent inner outer signature algorithm rejected change reviewed http boringssl boringssl 45946 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
256,https://api.github.com/repos/google/boringssl/commits/a3aeea7c775d1859139394b57a105063351f0f5d,False, remove block_mask evp_cipher_ctx may well computed block_size reduces per evp_cipher_ctx memory usage slightly update note look like anyone reading field ideally fix revert absolutely necessary change reviewed http boringssl boringssl 45884 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
257,https://api.github.com/repos/google/boringssl/commits/f69624a16ab090da2a3ec6456ddadc3486fdfd8b,False, document couple function x509.h get up_ref function signature accessors change reviewed http boringssl boringssl 45945 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
258,https://api.github.com/repos/google/boringssl/commits/89d1241487fb6b715f6516a1f107e846dd760a85,False, define x509v _version constant x509 version apis confuse everyone including test v3name_test.cc using wrong value introduce constant also document version use type extra confusing although certificate crls use version enum rfc5280 defines x.509 certificate x.509 crls crls send similar patch openssl keep upstream aligned change reviewed http boringssl boringssl 45944 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
259,https://api.github.com/repos/google/boringssl/commits/d707bc026f9a043ae14e87cec3ccdcb50b7a16a8,False, handle default x.509 version explicitly relying internal handling null confusing change reviewed http boringssl boringssl 45924 reviewed adam langley agl google.com, , ,None
260,https://api.github.com/repos/google/boringssl/commits/565226278d6b863672bb5c3f24197d8bb6e58b50,False, compile risc change reviewed http boringssl boringssl 45904 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
261,https://api.github.com/repos/google/boringssl/commits/409ea2837deef434be575d6e790ecc93df9dc899,False, add ecdsa nonce testing function place useful run ecdsa specified nonce ecdsa kat module self check unit test particular test vector fuzzing implementation requested cryptofuzz project replaces fixed_k machinery separate function although effectively used two different function one internal used module self check exported unit test cryptofuzz marked for_testing chromium presubmits flag for_testing function outside unit test kat version test per separate function bug 391 change reviewed http boringssl boringssl 45867 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
262,https://api.github.com/repos/google/boringssl/commits/fd68d7552badb62bcb0c7e06201589ebd7ee2054,False, rearrange ecdsa implementation extra computation setup half remnant designed amortize message independent portion signature care amortization want control testing instead ecdsa_sign_impl take rest let compute kinv slightly later mean fewer temporary needed bug 391 change reviewed http boringssl boringssl 45866 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
263,https://api.github.com/repos/google/boringssl/commits/e7b56750157ad9fcf40e58c22acc436bc4e9a9b9,False, split fips mode prng lock two fips mode maintain lock order implement clearing drbg state process shutdown lock serf two purpose protects linked list drbg state need updated first time thread touch rand_bytes thread exit process exit ensures thread alive process shutdown accidentally touch drbgs cleared way taking ton read lock rand_bytes across potentially time consuming point mean one rare event happens must contend flurry read lock split two lock second lock ever see read lock process shutdown first lock accessed rare case change reviewed http boringssl boringssl 45844 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
264,https://api.github.com/repos/google/boringssl/commits/94634a72b1cbc327dccfefd577436576992c644e,False, remove legacy vs_toolchain.py environment variable http boringssl boringssl 45644 builder need vs2017 specify via gclient_vars change reviewed http boringssl boringssl 45804 reviewed adam langley agl google.com, , ,None
265,https://api.github.com/repos/google/boringssl/commits/0653147485a047a2e5a201b17a072d431e6efb9d,False, runner rename mastersecret session object plain secret mirror change side session may store master secret main secret draft ietf rfc8446bis 1.2 resumption psk 1.3 giving description plain secret even accurate separately rfc8446bis name since bit mechanical change reviewed http boringssl boringssl 45824 reviewed adam langley agl google.com, , ,None
266,https://api.github.com/repos/google/boringssl/commits/8640b412d9d4f7d03f6f5fa647dc74eea25ef99f,False, test ecdsa signing non deterministic basic sanity check generation help make sure completely disconnected rng change reviewed http boringssl boringssl 45865 reviewed adam langley agl google.com, , ,None
267,https://api.github.com/repos/google/boringssl/commits/bc0a4f1f0f7a2d56f944058da74b9c776ba38002,False, acvp split acvp modulewrapper reuse trusty trusty requires trusted app implement acvp modulewrapper functionality validation separate frontend generic function implement algorithm change reviewed http boringssl boringssl 45604 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
268,https://api.github.com/repos/google/boringssl/commits/1a7456ac15c231f8581cb5bb09fa12571640a25d,False, trigger build make sure recent change builder work change reviewed http boringssl boringssl 45724 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
269,https://api.github.com/repos/google/boringssl/commits/48d80bb6cfbc464bf5e9d146ad86210bb4e9891e,False, use cipd package ultimately upstream tarballs one hoc script maintain change reviewed http boringssl boringssl 45784 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
270,https://api.github.com/repos/google/boringssl/commits/814465f01daf333a1efeff7a91b959c142388596,False, update cmake bot switch cipd available newer version cmake fix default library window arm64 sure exactly version latest cmake doe seem work trying update others turn workstation longer make cmake build compatible builder also tedious updating cmake requires making build fortunately chrome infra maintains package third party software cipd however make window cmake build filed http crbug.com 1180257 request stuck 3.13.x blocked http crbug.com 1176531 switch cipd mac linux latest version available stick old method uploading copy upstream package window grab latest version bug fixed hopefully thing uniform change reviewed http boringssl boringssl 45764 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
271,https://api.github.com/repos/google/boringssl/commits/e5d41a57e6a9e42e454ad9baf7cc3e1ab0926211,False, future proof vs_toolchain.py vs2019 trying figure arm64 builder issue tried vs2019 fix arm64 issue reveal ported logic chromium wrong new style path toolchain directory toolchain_data path parent directory win_sdk latest vs2019 package chromium put win_sdk directory toolchain root current toolchains use chromium old style win_sdk relative path change reviewed http boringssl boringssl 45744 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
272,https://api.github.com/repos/google/boringssl/commits/be9a86f459f8e785bac42abcea5d13bd4ded251e,False, revert revert disable check x.509 extension implies reverts commit except reland date updated past change reviewed http boringssl boringssl 45704 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
273,https://api.github.com/repos/google/boringssl/commits/bbd1742f6176c5eadb44ccf36c78a86ce0543bc2,False, update clang bot left libc android tool libc running http crbug.com 1166707. sure wrong android tool cmake_linker defined reason defined machine also want update builder ndk anyway new ndk default true change reviewed http boringssl boringssl 45544 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
274,https://api.github.com/repos/google/boringssl/commits/f6bd54efbcafcf4625ce99b5f702dc4850b0ca50,False, check obj_nid2obj failure rewrite bit align preferred style assignment condition need null check free function see also upstream change reviewed http boringssl boringssl 45686 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
275,https://api.github.com/repos/google/boringssl/commits/e7c0c9734f5491e62665ea156603209a80fbb235,False, overflow output length call cve 2021 23840 imported upstream differs slightly upstream version seem necessary err_r_overflow already exists also since use cipher_r_ helped compatibility anyway though probably something said folding cipher_r_ back evp_r_ simplicity check in_len top rather trying predict exact number byte written update note passing extremely large input length fail use evp_aead instead size_t based explicit output bound change reviewed http boringssl boringssl 45685 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
276,https://api.github.com/repos/google/boringssl/commits/ca2162d71902385dc740a385d20977d551d14e8f,False, remove update note one function null dereference error case see cve 2021 23841 change reviewed http boringssl boringssl 45684 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
277,https://api.github.com/repos/google/boringssl/commits/238a25831e598642befcf056e778c8f166781a97,False, fix bazel build breakage fix issue a99308f caused bazel build break analysis phase change reviewed http boringssl boringssl 45665 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
278,https://api.github.com/repos/google/boringssl/commits/85bda4b24406639bcde177ef340a6da87f1546c4,False, specify toolchain command line argument let builder pas via gclient_vars land make builder fill point remove magic env value logic recipe change reviewed http boringssl boringssl 45624 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
279,https://api.github.com/repos/google/boringssl/commits/a99308fa91cfbf43aaeab1f8792bf15dbf4fd7cc,False, update android bazel build support build.toplevel newer version bazel use different setting crosstool_top flag depending ndk toolchain use change detects crosstools build using android flag fix 180083900 change reviewed http boringssl boringssl 45564 commit queue justin paupore jpaupore google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
280,https://api.github.com/repos/google/boringssl/commits/c02c19e0d842f54d903a9b62316476f4b9c4e3f0,False, honor alpn callback aligns openssl behavior rfc7301 say server return client supported alpn common protocol found currently interpret value instead implement mode give guidance whne use noack still useful callback may shared across multiple configuration support alpn would want return noack ignore list match upstream also switched added quic update note caller return alpn callback change behavior old behavior may restored returning though see documentation new recommendation return value change reviewed http boringssl boringssl 45504 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
281,https://api.github.com/repos/google/boringssl/commits/3b7029a549275e4bd1b17e744a6f8a94f8f9bef5,False, acvp detect header element json sometimes json vector file contain header element must duplicated output sometimes auto detect looking url√¢ field first element change reviewed http boringssl boringssl 45524 reviewed david benjamin davidben google.com, , ,None
282,https://api.github.com/repos/google/boringssl/commits/ce9b002ebd0491a8dd802e208814360ce781f32b,False, align arm capability function largely cleanup three feature follow pattern hopefully cleaner separate static non static path practical impact probably nil linux based arm build crypto extension baseline exist save binary size change reviewed http boringssl boringssl 45485 reviewed david benjamin davidben google.com reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
283,https://api.github.com/repos/google/boringssl/commits/f9bd455c85920d4576bc4aa40dac6bdf35eba53b,False, skip runtime neon check __arm_neon defined feature enabled statically build config compiler defines __arm_neon also considers free emit neon code case need check neon support runtime since binary work without neon anyway moving check compile time let drop unused code chrome required neon android nearly five year however historically bad cpu broke neon code others see http crbug.com 341598 http crbug.com 606629. worked around cpu parsing proc cpuinfo intentionally dropping optimization stable situation however hoping compiler good enough emitting neon trigger bug since number affected device dropped chrome raised minimum android requirement metric chrome well noise stop short removing workaround altogether consumer cronet unsure whether needed workaround consumer also build without __arm_neon gating work decide pending metric update note build __arm_neon mfpu neon drop 30kib dead code longer work even particular buggy cpu build without __arm_neon affected change reviewed http boringssl boringssl 45484 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
284,https://api.github.com/repos/google/boringssl/commits/fc23300164d6e36599c1ffe4bd50e878826fcdec,False, acvp include cmac aes regcap dump cmac aes inside fips module included modulewrapper order test acvptool mark special tag avoid appearing dumping regcap json nist paperwork better acvp test code change reviewed http boringssl boringssl 45465 reviewed david benjamin davidben google.com, , ,None
285,https://api.github.com/repos/google/boringssl/commits/4d3e540cc05846eba5dfa6305e742133ea08fe0d,False, acvp fix cmac verify used testing acvptool yea memcmp return bool noticed ver mode missing registration thus test vector change reviewed http boringssl boringssl 45464 commit queue adam langley alangley gmail.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
286,https://api.github.com/repos/google/boringssl/commits/a2278d4d2cabe73f6663e3299ea7808edfa306b9,False, include internal.h non bcm.c build change reviewed http boringssl boringssl 45424 reviewed adam langley agl google.com, , ,None
287,https://api.github.com/repos/google/boringssl/commits/48cbd69dee6c744b5b9ca6506079fabcda86fe61,False, add various function call test_fips test_fips probably need exercise everything self test  following change eliminate duplication code create ffdh group reason done change change reviewed http boringssl boringssl 45404 reviewed adam langley alangley gmail.com reviewed david benjamin davidben google.com commit queue adam langley agl google.com, , ,None
288,https://api.github.com/repos/google/boringssl/commits/bb43a45d6de7375f3310511d37f040d1055f8a10,False, add missing include self_check.c fix build folk using bcm.c change reviewed http boringssl boringssl 45384 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
289,https://api.github.com/repos/google/boringssl/commits/4251d0d3f66a182e1b1ff22e9d0085613a1253ec,False, revert disable check x.509 extension implies reverts commit bug 375 change reviewed http boringssl boringssl 45344 reviewed david benjamin davidben google.com, , ,None
290,https://api.github.com/repos/google/boringssl/commits/c5e4538e3b0bcfdda30d2dabecbee952faf54c1c,False, fix tls13sessionid tls13 test check happening code ran 1.2 testing anything additionally check resumption case handle correctly manage due weird openssl quirk carried 1.2 ticket synthesize session 1.3 ticket still needed subtle enough warrant test implementation reuse test suite worth coverage change reviewed http boringssl boringssl 45324 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
291,https://api.github.com/repos/google/boringssl/commits/ae2bb641735447496bed334c495e4868b981fe32,False, use instead linter complaining instance fix lot change reviewed http boringssl boringssl 45284 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
292,https://api.github.com/repos/google/boringssl/commits/4a196ccf9a1db601eda0afdb5ad2cd8c275c94df,False, acvp move cmac verification module wrapper cmac inside fips module acvp support testing module need validate cmac change make cmac verify test explicit action module wrapper verification function exposed fips module tested change reviewed http boringssl boringssl 45264 reviewed david benjamin davidben google.com, , ,None
293,https://api.github.com/repos/google/boringssl/commits/ab5edbe7fca2deeccf3f0aa567d1612bf918b2a2,False, benchmark fips mode probably worth benchmarking given slows every process startup change reviewed http boringssl boringssl 45245 reviewed adam langley agl google.com, , ,None
294,https://api.github.com/repos/google/boringssl/commits/1c919724d3f887b184f5194a8709c8ae652e4b7f,False, support movlps movhps delocate gcc 10.2.1 seems emitting code like movq gcm_gmult_clmul gotpcrel rip xmm0 movhps gcm_ghash_clmul gotpcrel rip xmm0 movaps xmm0 rsp assembling pair function pointer xmm0 writing two together observed compiler output movlps supporting movhps movlps tricky main complication instruction preserve unwritten half destination support register source memory support loading general purpose register usually pushing register stack running instruction rsp alternative considered save restore temporary xmm register use movhlps movlhps would work require another saveregister like wrapper take advantage loadfromgot ending memory mov swap final instruction would efficient downgrade got based access local symbol plain lea compiler write pair function pointer row trying optimize non local symbol seems worth trouble really compiler emitting got relative load compiler know symbol private module habit pessimally using got based load option seemed simplest change reviewed http boringssl boringssl 45244 reviewed adam langley agl google.com, , ,None
295,https://api.github.com/repos/google/boringssl/commits/5cf02188feba518aecfda7a05c72b1586c5c4080,False, add ffdh fips self test invovles 2048 225 modexp far ideal required fips mode change reviewed http boringssl boringssl 45085 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
296,https://api.github.com/repos/google/boringssl/commits/d09962d5c30fb0946377d46372eb02ff2cc7d7b9,False, acvp update newer ffdh test revision 1.0 test reportedly longer acceptable use ssc√¢ version documentation test mention field possible test vector demo server contain guessing correct response format make nist server happy change reviewed http boringssl boringssl 45224 reviewed david benjamin davidben google.com, , ,None
297,https://api.github.com/repos/google/boringssl/commits/e133345dbad0ecb6ec74f293b451b2b3ad7a7bf3,False, add basic blake2b 256 support use case doe require optimisation current time clean implementation fine change reviewed http boringssl boringssl 45164 reviewed david benjamin davidben google.com, , ,None
298,https://api.github.com/repos/google/boringssl/commits/16c42cc796b652e8b8c512727132d47ee7eb4480,False, acvp check payloadlen cipher test correct nist currently seems bug respect regcap aes ctr return fractional byte test allowed previously notice specified payload length match actual value change reviewed http boringssl boringssl 45205 reviewed david benjamin davidben google.com, , ,None
299,https://api.github.com/repos/google/boringssl/commits/1fa6b7ffd90026892b25a80814662732f653d9df,False, acvp update test expectation light 8dcdcb39a7 forgot git add file change change reviewed http boringssl boringssl 45204 reviewed david benjamin davidben google.com, , ,None
300,https://api.github.com/repos/google/boringssl/commits/b0d71a2908dcc44011bae65194a9f8a2e8c2eea3,False, support cross compiling aarch64 fips android order support cross compiling inject hash need know use sha 256 hash function android since good idea aarch64 general due common hardware support aarch64 need use compiler run preprocessor plain cpp compiler get built defines right change reviewed http boringssl boringssl 45044 reviewed david benjamin davidben google.com, , ,None
301,https://api.github.com/repos/google/boringssl/commits/8dcdcb39a71023afd61ca5a03397d1855ea79366,False, acvp drop 3des field output unused change reviewed http boringssl boringssl 45185 reviewed david benjamin davidben google.com, , ,None
302,https://api.github.com/repos/google/boringssl/commits/0f0e2bce6d84dd5117234c58057e52929f7c0f31,False, acvp advertise sha rsa signature generation nist production server like change reviewed http boringssl boringssl 45184 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
303,https://api.github.com/repos/google/boringssl/commits/39093c1bfbb561b4e3ff86a6b2570b276ef48bb8,False, fix comment refer old draft hpke bug 275 change reviewed http boringssl boringssl 45144 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
304,https://api.github.com/repos/google/boringssl/commits/c47bfce062cc5a1b462176be626338224ae2a346,False, define old code point quiche currently doe know call picking current default legacy code point assumes constant may used extract transport parameter http boringssl boringssl 44704 break smooth transition define three constant  old constant old constant match whatever default legacy default self consistent plan boringssl switch state default code point constant legacy one apis specify code point affect quiche default quiche call corresponding _legacy _standard constant use unsuffixed constant point boringssl switch default setting constant standard code point affect quiche explicitly configures code point want optional boringssl switch default back legacy quiche switch _standard unsuffixed boringssl remove _standard alias function early quiche longer need code point unwinds code switch back unsuffixed constant boringssl remove scaffolding longer needed update note fix compatibility issue http boringssl boringssl 44704 change reviewed http boringssl boringssl 45124 reviewed david schinazi dschinazi google.com reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
305,https://api.github.com/repos/google/boringssl/commits/2d691ca60ddb535a7a54fb07fd2252bd6017bee7,False, make bn_clear_free wrapper around bn_free clear heap memory free thus difference function quite small difference though firstly bn_clear_free attempt zero static limb data static data probably read thus trying zero crash secondly try zero bignum structure either heap zeroed anyway else stack try clear stack general compiler duplicating bit anyway change reviewed http boringssl boringssl 45084 reviewed david benjamin davidben google.com, , ,General
306,https://api.github.com/repos/google/boringssl/commits/c5e2cf3c077bbe974808d451103dafec2bc6a82a,False, delocate support aarch64 add aarch64 support delocate since modern isa actually bad understood behaviour assembler change reviewed http boringssl boringssl 44848 reviewed david benjamin davidben google.com, , ,None
307,https://api.github.com/repos/google/boringssl/commits/c1e156ae16fa8b61af9b5d2b74e59d3f86e141be,False, add openssl fixed width version dh_compute_key nowadays searching around caller dh_compute_key many back pad secret anyway migrate modern primitive meantime seems worthwhile openssl compatibility giving fixed width user function avoid timing leak bump since one wpa_supplicant like compile wide range android revision update note compatibility impact caller use dh_compute_key fix removed leading zero switch function migrate something else change reviewed http boringssl boringssl 45004 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
308,https://api.github.com/repos/google/boringssl/commits/a9319d9b0f5d9cfe01ffd00ac926af86485dc981,False, fix client rtt handling alp offering rtt client check carried value consistent preference ensures parameter negotiation happens independently rtt alp version check tad aggressive session without alp treated always compatible follow fix draft spec clarify change reviewed http boringssl boringssl 45104 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
309,https://api.github.com/repos/google/boringssl/commits/2f2d27eb5cd9106893d85d4109ffac4af928c685,False, acvp add support since fips module change testing change reviewed http boringssl boringssl 45064 reviewed david benjamin davidben google.com, , ,None
310,https://api.github.com/repos/google/boringssl/commits/595cdc29d6b9a84f61f49fbdea1c23d802f80967,False, doc fix ssl_set0_rbio change signed yuchen dai silentdai gmail.com reviewed http boringssl boringssl 45024 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
311,https://api.github.com/repos/google/boringssl/commits/3d8b8c3df27cc780a49607be6a27f2c518f5c082,False, add support new quic extension codepoint ietf quic draft replacing extension codepoint quic transport parameter 0xffa5 57. support multiple version chrome need support codepoints boringssl add support new codepoint way enabled individual connection note boringssl quic mode error see new codepoint server ignore legacy codepoint could different private usage codepoint change reviewed http boringssl boringssl 44704 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
312,https://api.github.com/repos/google/boringssl/commits/f8f35c95550e6796ab8b2c0f8e37e7ce4bc67302,False, delocate preprocess perlasm output aarch64 aarch64 perlasm output need run via preprocessor parsed delocate change reviewed http boringssl boringssl 44847 reviewed david benjamin davidben google.com commit queue adam langley agl google.com, , ,None
313,https://api.github.com/repos/google/boringssl/commits/c3ee9c8040c2e09a1620027e624d9c6df847173e,False, replace tag record type align exactly record type use existing constant change reviewed http boringssl boringssl 44990 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
314,https://api.github.com/repos/google/boringssl/commits/e606f79c5b63acc0a550166f06ee370cd5f974b2,False, run extension test protocol change reviewed http boringssl boringssl 44989 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
315,https://api.github.com/repos/google/boringssl/commits/47d1274fd22b989e7cec3b5579fafc05bb74a183,False, make quic test work early data change format mock quic transport include explicit encryption level matching real quic bit better particular need extra data properly skip rejected early data shim side runner manage synchronizing stack still level make bit accurate testing sending receiving actual early data relevant quic since application external allows easily run test quic along way improve error reporting easier diagnose record level mismatch change reviewed http boringssl boringssl 44988 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
316,https://api.github.com/repos/google/boringssl/commits/7a55c80271dff7ff0c88ace15006a2562a7226e3,False, make quic work async test originally work installed async bio quic bio mock quic transport quic callback meaningful notion sync async portion async flag immediate motivation like make run protocol async test fail inconvenient however async test quic still meaningful anyway support various callback removed workaround state machine coverage test though async test redundant concerned callback along way various handshake record control irrelevant quic actually result net decrease redundant test change reviewed http boringssl boringssl 44987 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
317,https://api.github.com/repos/google/boringssl/commits/71ed9d753833be7f810f47fe127cf7f5660989d4,False, fix alp state machine quic server state machine around endofearlydata bit messy caused problem introducing new message quic keep waffling whether state junction endofearlydata state skip since skipping caused miss spot let try ing test easier cherry pick duplicated basic server test better however would run extension test quic particular missing rtt coverage large diff requires improving mock quic transport etc. runner work done follow replace duplicated test change reviewed http boringssl boringssl 44985 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
318,https://api.github.com/repos/google/boringssl/commits/f4a88296fc272dc3e41e3966fa36084960a9fb7f,False, runner allow tokbind without 1.3 quic specific alp bug thinking loop protocol need fix bug test expectation change reviewed http boringssl boringssl 44986 reviewed adam langley agl google.com, , ,None
319,https://api.github.com/repos/google/boringssl/commits/41676bfd86edd39a51f2b893cfe450dfcdb45964,False, test alp deferred alpn callback cause bug noticed never tested fill change reviewed http boringssl boringssl 44984 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
320,https://api.github.com/repos/google/boringssl/commits/c295935a9bf345acb597ffefb69f7e095c3eee72,False, send ech acceptance signal backend server implement backend server behavior described section 7.2 draft ietf esni bug 275 change reviewed http boringssl boringssl 43924 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
321,https://api.github.com/repos/google/boringssl/commits/5d54832f1a35ea4f3c7da1e92c205bb4591341d1,False, delocate handle aarch64 assembly parser aarch64 assembly quite different x86 power system directive quite lot utility able use delocate framework unfortunately peg obvious way able parse instruction differently without breaking parsing two stage thus parser extended support three isas seems work without breaking either two change reviewed http boringssl boringssl 44846 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
322,https://api.github.com/repos/google/boringssl/commits/afd5dba756b6266fa99c11af6496b39d826769cd,False, add asm optimization window arm window arm woa build currently using implementation various function within boringssl patch enables feature detection neon hardware crypto optimization update perl script generate aarch64 file woa note file use gnu assembler syntax specifically tested clang assembler armasm change reviewed http boringssl boringssl 43304 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
323,https://api.github.com/repos/google/boringssl/commits/571c3e78bf2aa479c3abdecbd238d6b5381cc788,False, use gai_strerrora window gai_strerror one window function behaves differently whether unicode defined see http window win32 intl convention function prototype call gai_strerrora behave consistently mode fix build failure http chromium chromium src 2613519 also fix type error connect bio built used chromium noticed variadic function untyped type error bound interpreting nul terminated wchar nul terminated char string misinterpreted still terminated either nul wchar likely upper zero byte first latin character string call raise question char string utf posix locale window code page also utf address fix character width error realistically calling code toss char printf often non utf locale probably lost cause although right transform error string tossing printf work fine output function like much change reviewed http boringssl boringssl 44964 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
324,https://api.github.com/repos/google/boringssl/commits/13da180506b4c0fa3b9232e77167dae4d694bf32,False, optimize suffix building filetest readnext updating hpke draft irtf cfrg hpke added number test crypto hpke time run hpke crypto test increased 0.09 0.56 second averaged run runtime whole crypto_test suite increased 86.44 88.19 measured  profiling revealed excessive amount cpu time hpke test spent std map lookup readnext found slow loop computes suffix repeated attribute hammering std map incremental guess add std map std string size_t counting repeated attribute eliminating need loop reduces runtime hpke test 0.56 0.12 second averaged run whole crypto_test suite runtime reduced 88.19 86.71 second measured change reviewed http boringssl boringssl 44905 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
325,https://api.github.com/repos/google/boringssl/commits/5dd18d017d60dda7f69a2efd3026e054c5cf7d02,False, handful compatibility function change reviewed http boringssl boringssl 44944 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
326,https://api.github.com/repos/google/boringssl/commits/7dfb4721d049122243745e205ef4080262b1e8b0,False, update hpke draft irtf cfrg hpke bug 275 change reviewed http boringssl boringssl 44904 commit queue dan mcardle dmcardle google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
327,https://api.github.com/repos/google/boringssl/commits/ab6a8f49ff1e42b3be0c00c4f20312fa75096ab1,False, acvp drop subsumed test added previous change change reviewed http boringssl boringssl 44747 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
328,https://api.github.com/repos/google/boringssl/commits/76164b1bc98a005e4cc01f4f35bc2f4dcd2098da,False, add openssl compatibility alias change reviewed http boringssl boringssl 44924 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
329,https://api.github.com/repos/google/boringssl/commits/c42baf84dfa43fc5a708aa83ad829b925ad3c2ca,False, delocate eliminate expression vpaes assembly change eliminates aarch64 assembly pattern appears case easier change code pile thing top delocate parser change reviewed http boringssl boringssl 44845 reviewed david benjamin davidben google.com, , ,None
330,https://api.github.com/repos/google/boringssl/commits/e4843750e5d854a1487e8115b45c5f2730bf3c29,False, delocate support alternative comment indicator aarch64 assembly file use comment indicator indicates constant value change reviewed http boringssl boringssl 44844 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
331,https://api.github.com/repos/google/boringssl/commits/4df05c52354b871f277b6040fb1a99c1628b1026,False, update third_party googletest fuchsia looking remove constant copy googletest still usually googletest update old local patch longer necessary need new one change reviewed http boringssl boringssl 44884 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
332,https://api.github.com/repos/google/boringssl/commits/4f75b76ef294a5a2c3b7693505f90b142fb1c9e5,False, acvp add test change cause run_tests target fips build run acvp supported algorithm output compared known result output variable run ensure local error acvp test vector trimmed significantly often huge firstly included tool drop one test group vector set manually trimmed remove test cause variable output change reviewed http boringssl boringssl 44746 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
333,https://api.github.com/repos/google/boringssl/commits/9422ac61f71c818e5725e1bcb9615d701d2f1bc1,True, fix comment see http boringssl boringssl 44347 crypto cipher_extra asm 863 change reviewed http boringssl boringssl 44864 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/863, ,None
334,https://api.github.com/repos/google/boringssl/commits/bac5544e9832c65c95283e95062263c79a9a6733,False, fix awkward wording comment one comment e56dfcf9f4 worded awkwardly thanks lin fixing change reviewed http boringssl boringssl 44764 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
335,https://api.github.com/repos/google/boringssl/commits/92c48be84a96b428d6eb854e5c201ade88e98a8b,False, update ech grease draft ietf esni bug 275 change reviewed http boringssl boringssl 44784 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
336,https://api.github.com/repos/google/boringssl/commits/78f15a6aa9f11ab7cff736f920c4858cc38264fb,False, gerrit ignores sup use unicode superscript instead change reviewed http boringssl boringssl 44825 reviewed adam langley agl google.com, , ,None
337,https://api.github.com/repos/google/boringssl/commits/e02dd70f53ed3618486e17cece69737c768ccb88,False, acvp better document subprocess protocol change reviewed http boringssl boringssl 44824 reviewed adam langley agl google.com, , ,None
338,https://api.github.com/repos/google/boringssl/commits/082cd7860e39a5c6cacf5bed1756d252daddebfe,False, add .text.unlikely pattern fips_shared.lds newer version llvm may use profile information put code section named .text.unlikely make sure section end .text section change reviewed http boringssl boringssl 44804 commit queue peter collingbourne pcc google.com reviewed adam langley agl google.com, , ,None
339,https://api.github.com/repos/google/boringssl/commits/4ab14ea2756c320f35c3218fc7c8f35a20ef7e8a,False, acvp fix silly error couple processing error crept time caught test next change change reviewed http boringssl boringssl 44745 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
340,https://api.github.com/repos/google/boringssl/commits/86854828e01aee1319bca371454c71d06c1322eb,False, acvp load config later config file needed interacting acvp server invocation want process input file need moving chunk code config loaded handling json input ignore needed change reviewed http boringssl boringssl 44744 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
341,https://api.github.com/repos/google/boringssl/commits/e56dfcf9f479c8c8997194238cb6ae60e9a4f4b0,False, allow non minimal length ber ber permit length non minimal previously supported change brings greater support allowing non minimal length long fit uint32_t change reviewed http boringssl boringssl 44684 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
342,https://api.github.com/repos/google/boringssl/commits/bb0cb95e683454cd1ce0335056ac728928eda96c,False, export tool_sources build tool chromium run benchmark using chromium build config change reviewed http boringssl boringssl 44724 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
343,https://api.github.com/repos/google/boringssl/commits/62634262d88b22a577c8fab8861be4cc4bc1330f,False, use efficient std string find overload reflects internal lsc cleanup change reviewed http boringssl boringssl 44664 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
344,https://api.github.com/repos/google/boringssl/commits/ca058c06474c4492f0fbd517679793234dde6165,False, revert add support new quic extension codepoint reverts commit bug fuzz 28720 change reviewed http boringssl boringssl 44644 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
345,https://api.github.com/repos/google/boringssl/commits/df75139becd7355e117c9860452265b898b49376,False, move parameter generation fips module moved masse fips module e7f08827d2 want minimise amount fips module appear need current time change reviewed http boringssl boringssl 44605 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
346,https://api.github.com/repos/google/boringssl/commits/7ba96a675eec621bc897b25b126a95e98f1014bb,False, add support new quic extension codepoint ietf quic draft replacing extension codepoint quic transport parameter 0xffa5 57. support multiple version chrome need support codepoints boringssl add support new codepoint way enabled individual connection change reviewed http boringssl boringssl 44585 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
347,https://api.github.com/repos/google/boringssl/commits/061a7f5596c4125fc4bead14ebb37cf51d2ae627,True, use stdlib.h instead cstdlib span.h header quite interchangeable stdlib.h defines abort cstdlib defines std abort google style guide give much guidance say match existing style switched stdlib.h see http github.com apple swift nio ssl issue 259 change reviewed http boringssl boringssl 44625 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/259, ,None
348,https://api.github.com/repos/google/boringssl/commits/60926d3533a246eec8ea5e15d39852842225c0b2,False, check trailing data accidentally lost line juggling patch around change reviewed http boringssl boringssl 44624 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
349,https://api.github.com/repos/google/boringssl/commits/f2adafe7378875fc5f1dc61d9eb92030c46d4136,False, fix chacha20 poly1305 x86 asm window current 2916000 chacha20 poly1305 byte seal operation 1015000us 2872906.4 ops sec 46.0 1604750 chacha20 poly1305 256 byte seal operation 1016000us 1579478.3 ops sec 404.3 516750 chacha20 poly1305 1350 byte seal operation 1015000us 509113.3 ops sec 687.3 99750 chacha20 poly1305 8192 byte seal operation 1016000us 98179.1 ops sec 804.3 50500 chacha20 poly1305 16384 byte seal operation 1016000us 49704.7 ops sec 814.4 fix 6366750 chacha20 poly1305 byte seal operation 1016000us 6266486.2 ops sec 100.3 3938000 chacha20 poly1305 256 byte seal operation 1016000us 3875984.3 ops sec 992.3 1207750 chacha20 poly1305 1350 byte seal operation 1015000us 1189901.5 ops sec 1606.4 258500 chacha20 poly1305 8192 byte seal operation 1016000us 254429.1 ops sec 2084.3 131500 chacha20 poly1305 16384 byte seal operation 1016000us 129429.1 ops sec 2120.6 change reviewed http boringssl boringssl 44347 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
350,https://api.github.com/repos/google/boringssl/commits/cd204d8e1542c0ef85117492f4642c1a47080540,False, include bn.h internal.h using precompiled header needed otherwise internal.h definition bn_ulong etc change reviewed http boringssl boringssl 44604 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
351,https://api.github.com/repos/google/boringssl/commits/28cab640d15a94b19f4c99b28da96e6af4944ba2,False, acvp add support finite field diffie√¢ hellman involves adding new function combine ffdh output hashing inside fips module new function padded ffdh output newly specified 800 56ar3 change reviewed http boringssl boringssl 44504 reviewed david benjamin davidben google.com, , ,None
352,https://api.github.com/repos/google/boringssl/commits/ce7f08827d291a138b68d962fd81704ce76c68d5,False, move code fips module change also drop ex_data object global would need special handling fips module hard dropping save code size cost change find sign use functionality change reviewed http boringssl boringssl 44524 reviewed david benjamin davidben google.com, , ,None
353,https://api.github.com/repos/google/boringssl/commits/49587b2c10482d8f949b616ed4f42f130c9ebbaf,False, remove unused netware codepaths x86 perlasm imported upstream change reviewed http boringssl boringssl 44565 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
354,https://api.github.com/repos/google/boringssl/commits/a929e327463bfa71b065111c0245c1599d39f99b,False, finish switching nasm  http chromium chromium tool build 2586225 longer test yasm yasm seen release six year missing support newer x86 instruction remove remnant support yasm also remove yasm support patched x86nasm.pl remove unnecessary divergence upstream update note x86 window asm build break switch yasm nasm also longer testing nasm x86_64 window patch revert change reviewed http boringssl boringssl 44564 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
355,https://api.github.com/repos/google/boringssl/commits/a3a98944f43cf0cdd5135e53fcd6da224ad6184c,False, switch passive entropy collection android fips rather fips module actively collecting entropy cpu change configures android fips passively receive entropy see fips 7.14 section two change reviewed http boringssl boringssl 44305 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
356,https://api.github.com/repos/google/boringssl/commits/4ae71a4c7aea7287b7090dfa664bf9a1f30ea787,False, skip asn.1 template test window shared library build fix chromium roll window shared library build fussy dllexport vs. dllimport way incompatible external asn1t.h macro issue declare_ macro add dllexport vs. dllimport assumption symbol defined libcrypto external definition need different selector rather add complex macro exclude test ideally supoport asn1t.h outside library manage sense trying make work excludes new old test although working thus far work setting symbol test target wrong chromium confused working maybe dllexport vs. dllimport lax come function rather variable correctly template break change reviewed http boringssl boringssl 44484 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
357,https://api.github.com/repos/google/boringssl/commits/66feb2c552cd9e09f0d7cfff291ce4842cc1a5a7,False, add tls_kdf documented break test 8846533744 added power on√¢ test kdf omitted add documented list test change reviewed http boringssl boringssl 44505 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
358,https://api.github.com/repos/google/boringssl/commits/0898b077a34974bb594d1366d6edf93c0821b19f,False, acvp add support change reviewed http boringssl boringssl 44444 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
359,https://api.github.com/repos/google/boringssl/commits/a6b6b804a05d7ece17efe700854ead9e0a0b2835,False, align armv8.pl reference import upstream managing shared library already arm xlate.pl automatically add .hidden .extern line nice reduce diff doe result duplicate .hidden line generated output still want arm xlate.pl patch automatically hide .globl removing .comm line doe change generated output asm file define copy common symbol always seemed odd recall weird issue armv4.pl file subtly rely strange machinery actually want common symbol arm xlate.pl repurposes .comm trigger fortunately aarch64 much better relative addressing .comm line also previously caused weird issue http boringssl boringssl 32324 generally nice get rid update note aarch64 build get weird error relocation fault change reviewed http boringssl boringssl 44464 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
360,https://api.github.com/repos/google/boringssl/commits/92de0b53a799a8724865fe816200c1421381d128,False, reject bad asn.1 template implicitly tagged choice import upstream would rejected mistake openssl edipartyname sturcture change reviewed http boringssl boringssl 44424 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
361,https://api.github.com/repos/google/boringssl/commits/1920c6f2caf37eb624086a55db4f0609f52f6f73,False, implement grease ech draft ietf esni bug 275 change reviewed http boringssl boringssl 40204 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
362,https://api.github.com/repos/google/boringssl/commits/f0400014b383dbad63e4dacac1ffdc54502806fc,False, acvp add kdf support change reviewed http boringssl boringssl 44386 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
363,https://api.github.com/repos/google/boringssl/commits/9ac743e0b4823e51ed664517b58f7602e473da5e,False, acvp tweak config change tweak acvp config better match boringcrypto previously tested cavp change reviewed http boringssl boringssl 44385 reviewed david benjamin davidben google.com, , ,None
364,https://api.github.com/repos/google/boringssl/commits/329c0cbb2f974bb1dec2b9db9653803d993c6b45,False, acvp fix change reviewed http boringssl boringssl 44384 reviewed david benjamin davidben google.com, , ,None
365,https://api.github.com/repos/google/boringssl/commits/225961dc49e631f17da62545955e95b0e256c6ab,False, const correct also make little shorter change reviewed http boringssl boringssl 44405 reviewed adam langley agl google.com, , ,None
366,https://api.github.com/repos/google/boringssl/commits/aa4ecb49269666c75919bc068028097c3b9cd42f,False, fix edipartyname parsing see also cve 2020 1971 upstream openssl unlike upstream version opts simpler already unsuitable ordering equality mean need preserve return value asn1_string_cmp additionally asn.1 structure implies field null change x400address type x400address little clearer historical quirk general_name structure change reviewed http boringssl boringssl 44404 reviewed adam langley agl google.com, , ,None
367,https://api.github.com/repos/google/boringssl/commits/455b78d5f958081f80f212e201e8a1037af308a3,False, pwct failure clear generated key insufficient signal error pwct fails additionally need ensure invalid key material returned change reviewed http boringssl boringssl 44306 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
368,https://api.github.com/repos/google/boringssl/commits/3094902fcdc2db2cc832fa854b9a6a8be383926c,False, get closer ed25519 boundary condition perturb korder malleability check wycheproof test easily notice add test order eddsa hash public key message frustrates constructing actual boundary case instead input found generating many signature ideal sensitive significant bit change reviewed http boringssl boringssl 44346 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
369,https://api.github.com/repos/google/boringssl/commits/41a14304d7e0cfcb8afa82ee8735f0bd6763e415,False, draft ietf certificate compression rfc 8879 change reviewed http boringssl boringssl 44344 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
370,https://api.github.com/repos/google/boringssl/commits/5763899886061bf23c58f9a17805e343e51ca093,False, update fips.md include latest fips certificate change reviewed http boringssl boringssl 44345 commit queue adam langley alangley gmail.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
371,https://api.github.com/repos/google/boringssl/commits/c3f4612d83f345ef0bb0024ce6086a6a773324ca,False, accept little endian arm mips variant base.h openssl base.h check supported platform check endianness arm mips endian see http crbug.com 1153312 switch around documentation define official hard come mostly mimicked chromium chromium detects little endian arm mips __armel__ __mipsel__ respectively without looking __arm__ __mips__ __aarch64__ instead __aarch64el__ think oversight get clang output aarch64_be defines __aarch64__ __aarch64eb__ openssl arm_arch.h simplify align base.h stick also normalizes __armel__ __byte_order__ friend although interestingly arm_arch.h defines __armel__ gnuc aarch64 even though clang doe define __armel__ aarch64 guessing aligned benefit armx arch asm file value based __byte_order__ __armel__ assumes gnuc arm always defines __armel__ think reasonable assume gnuc aarch64 always defines __aarch64el__ given probably simplest thing likely work use __armel__ __mipsel__ __aarch64el__ note doe change _m_ check _m_ window definition think reasonably assume come endianness opinion window arm arm64 abis mandate little endian aligns chromium update note cpu processor defines mess little endian arm mips build break assumption may wrong case output dev null offending toolchain useful fix big endian arm mips build break working intended resulting binary producing right output change reviewed http boringssl boringssl 44324 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
372,https://api.github.com/repos/google/boringssl/commits/eb57cc1e875d3137aa3cf723f3c525e253ddea9b,True, aesv8 armx.pl avoid bit lane assignment ctr mode arm cortex a57 cortex a72 core running bit mode affected silicon erratum 1742098 1655431 respectively second instruction aes instruction pair may execute twice interrupt taken right first instruction consumes input register single bit lane updated last time modified shuffle counter assignment around bit recent update aes instruction pair executes 128 bit wide arm epm 049219 v23 cortex a57 mpcore software developer erratum notice arm epm 012079 v11.0 cortex a72 mpcore software developer erratum notice imported upstream  change applied bit bit simplicity measurable performance difference leaving aligned easiest change reviewed http boringssl boringssl 44284 commit queue david benjamin davidben google.com reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/1742098, ,None
373,https://api.github.com/repos/google/boringssl/commits/f8047e2d47386b218204267de2ede43af2931875,False, improve sk_dup need use sk_new allocates buffer immediately realloced change reviewed http boringssl boringssl 44205 reviewed adam langley agl google.com, , ,None
374,https://api.github.com/repos/google/boringssl/commits/1bec25297ce6315271b45a54cfbb46f4e5ad2108,False, poly1305 use size_t assert poly1305_state large enough clarify truncation issue target range unsigned smaller range size_t ensure poly1305_state still large enough good idea independently change especially important switching field size_t might enlarged structure change reviewed http boringssl boringssl 44244 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
375,https://api.github.com/repos/google/boringssl/commits/bb6f9c44b354c529f3cbfa71f4ace553a9537b0f,False, util fipstools acvp acvptool buffer signal channel avoid losing signal doc signal.notify warn signal delivery loss bug http golang.org pkg signal notify say package signal block sending caller must ensure sufficient buffer space keep expected signal rate channel used notification one signal value buffer size sufficient discovered one orijtech inc internal static analyzer eventually donated project included one run test change reviewed http boringssl boringssl 44264 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
376,https://api.github.com/repos/google/boringssl/commits/9dae0ac4f0ae18ebed988d36bfb4c4e4023fc574,False, add digest.h self_check.c cover use evp_sha256 added 8846533744 change reviewed http boringssl boringssl 44224 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
377,https://api.github.com/repos/google/boringssl/commits/4a265be4d931e35f0d108040c94d37bb49827948,False, document asn1_string almost everything openssl asn1.h asn1_string lot unspoken assumption library type field need quite bit text change reviewed http boringssl boringssl 44184 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
378,https://api.github.com/repos/google/boringssl/commits/806c505b7e8034f212181d3bd2fab0af0026aaf1,False, acvp add sha 512 256 support change reviewed http boringssl boringssl 44165 reviewed david benjamin davidben google.com commit queue adam langley agl google.com, , ,None
379,https://api.github.com/repos/google/boringssl/commits/88465337449ef6d91eeaacb22b413de68bbf4d7c,False, add fips self test kdf change reviewed http boringssl boringssl 44164 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
380,https://api.github.com/repos/google/boringssl/commits/5351c8bf3865b85eae085c86338db31ff16dd8c7,False, rename master_key field ssl_session secret even accurate term master key date ssl implement starting ssl key replaced secret field store various point 1.2 master secret 1.3 resumption master secret 1.3 resumption psk simply rename field secret descriptive name get point left alone openssl compatibility well reference various secret since refer concept spec dust settle bit rfc8446bis fix change reviewed http boringssl boringssl 44144 reviewed adam langley agl google.com, , ,None
381,https://api.github.com/repos/google/boringssl/commits/0a6bfa36c932fbf6bf8d8cc8611d499a6f2d9b5d,False, always check 1.3 downgrade signal apis used chromium control carve 1.3 downgrade signal http chromium chromium src 2324170 chromium longer update note  nothing call site removed copy older chromium lying around removed function yet enforcement already default doe affect caller use function change reviewed http boringssl boringssl 44124 reviewed adam langley agl google.com, , ,None
382,https://api.github.com/repos/google/boringssl/commits/5656fec512a8dfd2833fbf47b6aaa76364c26fad,False, fix documentation got wrong pass ownership caller call x509_pubkey_get bump refcount change reviewed http boringssl boringssl 44084 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
383,https://api.github.com/repos/google/boringssl/commits/53bbb1803640d51b25036fa5406d8a9f8252f618,False, const correct document x509 function change reviewed http boringssl boringssl 44052 reviewed adam langley agl google.com, , ,None
384,https://api.github.com/repos/google/boringssl/commits/354e1e998dac943b413a88c6ac6e11cc2a2c33b4,False, add apis checking asn.1 integer several implementation internally consolidate chromium also copy net der parse_values.cc could call  also hoping make call tighten crypto asn1 parser see chromium still option perhaps quite yet update note doe change behavior leaving note make net der parse_values.cc call new function change reviewed http boringssl boringssl 44051 reviewed adam langley agl google.com, , ,None
385,https://api.github.com/repos/google/boringssl/commits/43f375699f01873f0804836380a9db4ea31647ae,False, remove unnecessary pointer cast change reviewed http boringssl boringssl 44050 reviewed adam langley agl google.com, , ,None
386,https://api.github.com/repos/google/boringssl/commits/2361677677f91f4f8aa029f6e479121e420638cd,False, document basic asn1_string function still need overall documentation describing asn1_string relationship type start easy bit change reviewed http boringssl boringssl 44049 reviewed adam langley agl google.com, , ,None
387,https://api.github.com/repos/google/boringssl/commits/b16bd3313466850ca10b01cf5abd33ada2a8afb1,False, document default evp rsa interface change reviewed http boringssl boringssl 43984 reviewed adam langley agl google.com, , ,None
388,https://api.github.com/repos/google/boringssl/commits/2e5f38a1d871305ffeb0c932d421b01fd43a4168,False, rearrange slightly especially important leaving input unchanged malloc failure little tidier change reviewed http boringssl boringssl 44048 reviewed adam langley agl google.com, , ,None
389,https://api.github.com/repos/google/boringssl/commits/a4954e5ace867ed88633c1380a61ca72f62a2bab,False, remove legacy mstring m_asn1 macro free dup macro fine replaced function counterpart new macro call representative type choice doe match corresponding function e.g asn1_time_new function tasn_new.c end end creating asn1_string type flag set flag determine whether trigger x.509 utctime generalizedtime switching confusingly asn1_time_adj trigger behavior based function seems robust might accidentally lose flag maybe remove flag meantime least remove old macro create wrong type update note m_asn1 macro removed code search say openssl upstream removed change reviewed http boringssl boringssl 44047 reviewed adam langley agl google.com, , ,None
390,https://api.github.com/repos/google/boringssl/commits/c509ee3fa27d191b23da353d363c396ef7bdecdb,False, switch m_asn1_time macro within library asn1_time_dup switch m_asn1_time_dup asn1_string_dup upstream doe switch asn1_time_free also matching upstream obviously asn1_time mstring defined a_time.c defines mstring asn1_item new free function generated walk asn1_item asn1_time_free table based free function eventually running call mstrings change reviewed http boringssl boringssl 44046 reviewed adam langley agl google.com, , ,None
391,https://api.github.com/repos/google/boringssl/commits/c6ffcde8cdfd46bf0b16b5e6ceca2be0d4c6ea72,False, unwind m_asn1_ macro primitive type one point ssleay day asn1_string typedefs separate structs debug build m_asn1_ macro included type cast handle long gone still m_asn1_ macro remove cast switch code within library call macro subtlety mstring type openssl call built choice containing set string type weird m_foo_new macro tasn_new.c foo_new function behave differently split separate etc. call macro access field directly inverts dependency etc. generated via tasn_typ.c pointed field free function consistent macro like largely corresponding function aligned openssl using generic asn1_string_dup function others like corresponding function openssl retained update note external code m_asn1_ macro remain compatible type error may gotten unnoticed restores type checking change reviewed http boringssl boringssl 44045 reviewed adam langley agl google.com, , ,None
392,https://api.github.com/repos/google/boringssl/commits/7a26f97c9f296e587ee325348a62c1d5ba24a60a,False, reformat convert comment asn1.h x509 function hard document without first documenting asn.1 type asn1_type goofy representation leaked everywhere change reviewed http boringssl boringssl 44044 reviewed adam langley agl google.com, , ,None
393,https://api.github.com/repos/google/boringssl/commits/25f9d7a9f0e26ccdeecaf9ed6927c6266d2898ed,False, aarch64 fix name gnu property note section upstream review process leading dot got removed accident missing single character render boringssl armv8.5 bti incompatible also added two semicolon consistent change reviewed http boringssl boringssl 44024 reviewed adam langley agl google.com commit queue adam langley agl google.com, , ,None
394,https://api.github.com/repos/google/boringssl/commits/7be158d18bc96753a3a750b44ed7063310fa22c4,False, reformat x509.h time taught clang format handle stack_of correctly change reviewed http boringssl boringssl 43964 reviewed adam langley agl google.com, , ,None
395,https://api.github.com/repos/google/boringssl/commits/df00df6035c97cf31b7d0cb289f5ab050626b800,False, document x509v3_add1_i2d friend change reviewed http boringssl boringssl 43944 commit queue david benjamin davidben google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
396,https://api.github.com/repos/google/boringssl/commits/9bdec296adba5e3891151ab4bcb8f7ebfcd1fc37,True, remove remnant openssl streaming pkcs encoder change reviewed http boringssl boringssl 43894 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/7, ,None
397,https://api.github.com/repos/google/boringssl/commits/e4da107b6dd8996daa73688745c03ea7f7c6965c,False, unexport internal crypto asn1 function made static move rest asn1_locl.h update note code search say unused someone using reexport change reviewed http boringssl boringssl 43893 reviewed adam langley agl google.com, , ,None
398,https://api.github.com/repos/google/boringssl/commits/9e282c9a78d20937ef028ef63fcc62ac24efc88b,False, unwind old asn.1 ifdefs change reviewed http boringssl boringssl 43892 reviewed adam langley agl google.com, , ,None
399,https://api.github.com/repos/google/boringssl/commits/3de5949ba723292e01c7392b1dd9a849eb5ae17d,False, unwind used register custom primitive type namely integer variation since removed change reviewed http boringssl boringssl 43891 reviewed adam langley agl google.com, , ,None
400,https://api.github.com/repos/google/boringssl/commits/2c8445c5f7515f8125f41aa1e3da2501b8b040d1,False, remove unused type asn1t.h change reviewed http boringssl boringssl 43890 reviewed adam langley agl google.com, , ,None
401,https://api.github.com/repos/google/boringssl/commits/45858ae2a485141232fb92c4998b5f5634affb8f,True, unwind asn1_tflg_ndef sadly need keep asn1_put_eoc ruby openssl pkcs implementation generated ndef variant encoding function request indefinite length encoding remove support code update note type use one ndef macro asn1t.h fail compile affect certificate parsing change reviewed http boringssl boringssl 43889 reviewed adam langley agl google.com,https://api.github.com/repos/google/boringssl/issues/7, ,None
402,https://api.github.com/repos/google/boringssl/commits/75a05d1594c5f05475f2765a6772d2fb9b47c8bd,False, unwind remnant older incarnation openssl asn.1 code update note type using openssl asn1t.h fail compile affect certificate parsing change reviewed http boringssl boringssl 43888 reviewed adam langley agl google.com, , ,None
403,https://api.github.com/repos/google/boringssl/commits/cf1c925ddb6fe35f81d614ca0e492a84d8c1c99e,False, unwind never used remove logic gradually simply legacy asn.1 code update note type using openssl asn1t.h fail compile affect certificate parsing change reviewed http boringssl boringssl 43887 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
404,https://api.github.com/repos/google/boringssl/commits/a93545c2e07e6aa6ecb113a92e71caf591ae3a46,False, const correct various x509 string parameter change reviewed http boringssl boringssl 43886 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
405,https://api.github.com/repos/google/boringssl/commits/5eb8c877c89014f563f6f1dafe1f23eae6e6957a,False, document next function x509.h change reviewed http boringssl boringssl 43885 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
406,https://api.github.com/repos/google/boringssl/commits/352351b5c04b44ef67a4cd1e473a51fcc97010c6,False, remove sk_new_null call entire function assuming stack_of type secretly type best consistently use sk_asn1_value_ wrapper raw sk_foo function implementation detail macro probably rename better prefixed upstream change reviewed http boringssl boringssl 43884 reviewed adam langley agl google.com, , ,None
407,https://api.github.com/repos/google/boringssl/commits/1607f54fed72c6589d560254626909a64124f091,False, acvp move inner mct loop subprocess acvp mct test involve double loop inner loop iterates 1000 aes 10000 3des time change move inner loop subprocess significantly reduces amount ipc traffic cost making subprocesses complex traffic volume unimportant talking local pipe significant channel like serial link used change reviewed http boringssl boringssl 43844 commit queue adam langley alangley gmail.com commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
408,https://api.github.com/repos/google/boringssl/commits/17e530c43c70967c31b511329aa26220866ffe46,False, fix saltlen md_size return error trying make x509_algor arbitrary rsa salt length date initial commit openssl imagine attempt ratchet rsa parameter proliferation caller explicitly pass md_size rather using convenience value currently fail allow add error error queue easier diagnose change reviewed http boringssl boringssl 43824 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
409,https://api.github.com/repos/google/boringssl/commits/8591d539b5d7d3605e78750ffbe256de00f47f46,False, document x509v3_get_d2i family function bit mess caller almost never handle error correctly change reviewed http boringssl boringssl 43804 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
410,https://api.github.com/repos/google/boringssl/commits/d83dcf58c0e28f1837aaeb55ddc2c54c9a1a20ac,False, runner explicitly signal error handshaker handshaker fails parse config currently exit cause two pipe signal eof shim control channel datagram socket order atomic thus signal error shim eof wfd pipe cause short loop thus hang forever catching eof returning error work test close pipe still return information control channel start timeout wfd closed seems like might flakey thus change make handshaker send explicit error control channel catch crash catch config error much common cross version test change reviewed http boringssl boringssl 43865 reviewed david benjamin davidben google.com, , ,None
411,https://api.github.com/repos/google/boringssl/commits/aec1b62b07a4465c3b6747a09ad69c614bc5766b,False, runner add skip order skip group test cross version testing like alp useful able match pattern change reviewed http boringssl boringssl 43864 commit queue adam langley agl google.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
412,https://api.github.com/repos/google/boringssl/commits/6dcce800371dd5f3cb35a16a18b99fcfadf213ab,False, add function manipulating x.509 structure generating signature external signing process caller need fill tbscertificate including signature algorithm serialize tbscertificate fill signature i2d_re_x509_tbs originally believe setter signature algorithm signature add mirror upstream  new upstream requires caller manually assemble asn1_bit_string taking byte string seems error prone additionally add i2d_x509_tbs non variant apis conscrypt need extract portion certificate crl implement aim get data verify existing immutable certificate openssl avoided exporting x509_cinf type think correct instead mirror i2d_re_x509_tbs doe mean mirroring confusing i2d calling convention though new function unblock getting rid bunch direct struct access later reorganize header immutable apis verification mutable apis generation even though stuck mistake common type use case think splitting let rationalize cache x509 object bit change reviewed http boringssl boringssl 43784 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
413,https://api.github.com/repos/google/boringssl/commits/f18638cca14d0b02617785e848a5afaa2715f71a,False, remove prototype removed http boringssl boringssl 42724 missed prototype change reviewed http boringssl boringssl 43764 reviewed adam langley agl google.com, , ,None
414,https://api.github.com/repos/google/boringssl/commits/5709ccbd7d068e65b3050db347cbb54035d15fe4,False, update bot change reviewed http boringssl boringssl 43505 reviewed adam langley agl google.com, , ,None
415,https://api.github.com/repos/google/boringssl/commits/73b69308acd6257f4056bd2f1e91e9cf6b259a26,False, rework vs_toolchain.py vs_env.py chromium toolchains maintain json file expected environment need pull gyp figure batch file run drop long obsolete dependency make possible handle architecture gyp internally handled x86 x64 also trim away logic vs_toolchain.py account non depot_tools toolchains unlike chromium use script outside change reviewed http boringssl boringssl 43504 reviewed adam langley agl google.com, , ,None
416,https://api.github.com/repos/google/boringssl/commits/7c4a3f7d3e2a5bcccb942f51bd004479da66c351,False, add ecdsa verify kat fips self test change reviewed http boringssl boringssl 43687 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
417,https://api.github.com/repos/google/boringssl/commits/83a3f462cf2e014bf92dfb1ae2bbffb3616b3687,False, add aes gcm aeads internal nonce generation fips reason one might wish ensure random aes gcm nonce generated entirely within fips module aeads change reviewed http boringssl boringssl 43686 commit queue adam langley alangley gmail.com reviewed david benjamin davidben google.com, , ,None
418,https://api.github.com/repos/google/boringssl/commits/d5b2b177280c9a343de1f2890ad745bdd198da5d,False, define constant standard gcm nonce length use constant lot e_aes.c write every time change reviewed http boringssl boringssl 43685 reviewed david benjamin davidben google.com, , ,None
419,https://api.github.com/repos/google/boringssl/commits/1a751eefc1109c0116fb934c5e91bf2d330ebb3c,False, add test x25519 containing certificate already support test change reviewed http boringssl boringssl 43704 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
420,https://api.github.com/repos/google/boringssl/commits/fa9796ece4942091e651c7c8b8fe036409b43c38,False, add quiche switch case converting string logging cause lot churn add new value instead add function bump easily land quiche start using function without coordinating repository change reviewed http boringssl boringssl 43724 reviewed nick harper nharper chromium.org reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
421,https://api.github.com/repos/google/boringssl/commits/07827156c9ef185d3777e0f72e1afc44fa9cc2e0,False, add raw redeem api change reviewed http boringssl boringssl 43444 commit queue steven valdez svaldez google.com reviewed david benjamin davidben google.com, , ,None
422,https://api.github.com/repos/google/boringssl/commits/b67732a163c22da3e056de5cde7b02644ad724db,False, aarch64 remove flavour conditionals change expected non functional change original request http boringssl boringssl 42084 change reviewed http boringssl boringssl 43584 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
423,https://api.github.com/repos/google/boringssl/commits/c583dbea70bf113d30e47685307c162148556b4a,False, fewer opaque booleans aead_test.cc booleans little hard understand context adding make thing even complicated thus make flag meaning articulated locally change reviewed http boringssl boringssl 43684 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
424,https://api.github.com/repos/google/boringssl/commits/777e1ff3b1443788c5fdb982b3b822aac5448d9e,False, acvp rsa signature verification test change reviewed http boringssl boringssl 43626 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
425,https://api.github.com/repos/google/boringssl/commits/e44d977c5eecfda6e3bbf97b6060d10ba88c463e,False, acvp rsa signature generation test change reviewed http boringssl boringssl 43625 reviewed david benjamin davidben google.com commit queue adam langley agl google.com, , ,None
426,https://api.github.com/repos/google/boringssl/commits/2e22d1b3cb2415ffdf229d7039489f7fcd971546,False, acvp support rsa key generation test change reviewed http boringssl boringssl 43644 reviewed david benjamin davidben google.com, , ,None
427,https://api.github.com/repos/google/boringssl/commits/80e3f957e46bf2af828d67065bc19d9471f368fd,False, support 4096 bit key fips mode change reviewed http boringssl boringssl 43624 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
428,https://api.github.com/repos/google/boringssl/commits/40f49428d164b7e7145ce6e691956a023ea5cf99,False," reland check parameter rsa ecdsa signature looser reland http boringssl boringssl 41804 reverted http boringssl boringssl 42804 enforcing ecdsa parameter omitted rather null hit compatibility issue instead allow either form align chromium verifier probably want later stricter quirk flag allow invalid form add similar flag chromium least try reject completely invalid parameter value update note invalid certificate rejected verification time parsing certificate unchanged bug 167375496,342 change reviewed http boringssl boringssl 43664 reviewed adam langley agl google.com commit queue david benjamin davidben google.com", , ,None
429,https://api.github.com/repos/google/boringssl/commits/9c12f01de7f6646d5ad62a848e3a520b9677dcd0,False, acvp add 3des cbc support change reviewed http boringssl boringssl 43406 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
430,https://api.github.com/repos/google/boringssl/commits/e796cc65025982ed1fb9ef41b3f74e8115092816,False, acvp add 3des ecb support change reviewed http boringssl boringssl 43405 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
431,https://api.github.com/repos/google/boringssl/commits/043fba24112eddaa2d73c5bc36dc80014c8ef132,False, clear reported gcc wshadow warning constructor parameter vs. method name one little unfortunate given google style think done elsewhere libssl let run bug 378 change reviewed http boringssl boringssl 43545 reviewed steven valdez svaldez google.com commit queue david benjamin davidben google.com, , ,None
432,https://api.github.com/repos/google/boringssl/commits/e9fce74f2e88d74006d659eb079d4710eb017d86,False, const correct change reviewed http boringssl boringssl 43565 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
433,https://api.github.com/repos/google/boringssl/commits/1e8e5635bd7ff77cf0541d91eaeaa79d3ef7b280,False, clang format convert comment x509v3.h change reviewed http boringssl boringssl 43564 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
434,https://api.github.com/repos/google/boringssl/commits/c46b1736a14135cc5b337aad3f359c819963ac68,False, aarch64 improve conditional compilation wundef one could get warning undefined symbol patch try fix issue furthermore case bti pointer authentication check correctly reflect feature enabled state change reviewed http boringssl boringssl 43524 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
435,https://api.github.com/repos/google/boringssl/commits/fd83592b425446444525f30537a577ca2e069c20,False, silence linter check use empty size export iterateaes function return private type change reviewed http boringssl boringssl 43544 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
436,https://api.github.com/repos/google/boringssl/commits/9d1bca3dd2fbbf8c51c1c0d5e715e7eefe33b40f,False, acvp update recent change broke notice suggests test useful true ready pull trigger deleting yet change reviewed http boringssl boringssl 43484 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
437,https://api.github.com/repos/google/boringssl/commits/8c32f941ad6d9d29f7c4398011530afb9468a0aa,False, update clang copydiadllto longer needed http chromium src bonus make script much easier use outside bot change reviewed http boringssl boringssl 43464 reviewed adam langley agl google.com, , ,None
438,https://api.github.com/repos/google/boringssl/commits/51607f1fe11202f2876ec26486ffbef3cbbf0f35,False, implement draft vvv alp original svaldez reworked davidben change reviewed http boringssl boringssl 42404 reviewed steven valdez svaldez google.com reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
439,https://api.github.com/repos/google/boringssl/commits/e580e9ded3bff859a0d021ca383087b241b6df74,False, simplify rtt test add earlydata flag configure standard rtt test option tedious otherwise along way added expect cipher flag test could doe cause rtt test exchange quick burst data fuzzer mode suppression needed think probably fine maybe mess fuzzer mode able trial decrypt getting little tedious change reviewed http boringssl boringssl 43086 reviewed steven valdez svaldez google.com commit queue david benjamin davidben google.com, , ,None
440,https://api.github.com/repos/google/boringssl/commits/3989c99706bf30054798ff82f1cb010e50e385f5,False, fix crash flushing ssl bio openssl synchronizes bio next_bio ssl rbio variety callback worked attempting flush bio crashed ssl bio compatibility hack intentionally much limited start copying thing right bio directly add basic unit test ssl bios need implement complex synchronization later additionally reject reconfiguring ssl bio leak object right change reviewed http boringssl boringssl 43424 reviewed adam langley agl google.com, , ,General
441,https://api.github.com/repos/google/boringssl/commits/6d904d5b8aa3b30f1b632b0e4713260543df5d42,False, document low level pem read write function change reviewed http boringssl boringssl 43426 reviewed adam langley agl google.com, , ,None
442,https://api.github.com/repos/google/boringssl/commits/5e549fb6408bbd867ab10a7cfc5c963a2ad96ad0,False, clang format pem.h convert comment change reviewed http boringssl boringssl 43425 reviewed adam langley agl google.com, , ,None
443,https://api.github.com/repos/google/boringssl/commits/a673d02458b1b7d897084266b93d5c610e36bd17,False, add psk variant hpke setup function bogo change reviewed http boringssl boringssl 42684 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
444,https://api.github.com/repos/google/boringssl/commits/6d2c799920eba8fd8bbf85c5c652b02c1a595813,False, acvp abstract mct iteration function going getting big change reviewed http boringssl boringssl 43404 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
445,https://api.github.com/repos/google/boringssl/commits/f42d5df92487bfde18a0f7f8f1e7303efaa2f25d,False, add implementation hpke draft runner bug 275 change reviewed http boringssl boringssl 42124 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
446,https://api.github.com/repos/google/boringssl/commits/974ac218e7141132fa84a81dfe8142e71680da5c,False, runner implement complete clienthello consistency check implementation time runner forked custom testing equal method handshake message since removed except clienthello repurposed function check clienthello consistency  tedious update upstream since replaced comparison want even tighter even unknown extension allowed change replace check custom one work byte serialization remove  along way fixed hrr psk identity logic match spec bit check binder consistently change reviewed http boringssl boringssl 43364 reviewed adam langley agl google.com reviewed steven valdez svaldez google.com commit queue david benjamin davidben google.com, , ,None
447,https://api.github.com/repos/google/boringssl/commits/f2b2ef84072604ef6ecbbd10a38332b12acea82c,False, update trusttokenv2 use voprfs assemble change reviewed http boringssl boringssl 42965 commit queue steven valdez svaldez google.com reviewed david benjamin davidben google.com, , ,None
448,https://api.github.com/repos/google/boringssl/commits/f94e6d7f9dc94842c33e6e6cb90691210ecf6b47,False, acvp add aes ccm support change reviewed http boringssl boringssl 43286 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
449,https://api.github.com/repos/google/boringssl/commits/56b28d84466aedd4d2c82b5dc26572c9b0e2bfa8,False, acvp highlight totp secret config file change reviewed http boringssl boringssl 43325 reviewed david benjamin davidben google.com, , ,None
450,https://api.github.com/repos/google/boringssl/commits/048f354b2a4085ef59b40c904fc8b8e1c318f873,True, acvp handle private key format change add config parameter privatekeyfile replace although still exists taking pkcs der little odd people also probe pem der pkcs automatically try work whatever private key user change reviewed http boringssl boringssl 43344 reviewed david benjamin davidben google.com,https://api.github.com/repos/google/boringssl/issues/1, ,None
451,https://api.github.com/repos/google/boringssl/commits/6222fe767dd911bc2dac62b7cbf170c5b73dee8d,False, runner refactor bogo clienthellomsg extension marshalling replaces clienthellomsg npnafteralpn pskbinderfirst field new field extension tried first marshalling clienthellomsg ability control extension marshalling order make simpler implement behavior defined draft ietf esni bug 275 change reviewed http boringssl boringssl 43064 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
452,https://api.github.com/repos/google/boringssl/commits/51b428153d5190c443e985f8feee9dbb5b2d0a39,False, include rodata subsection fips shared build sometimes linker generate rodata subsection even fdata section enabled include fips module subsection continue discarded ensure unexpected section appear escape module bug 142971559 change reviewed http boringssl boringssl 43324 commit queue adam langley alangley gmail.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
453,https://api.github.com/repos/google/boringssl/commits/991835dfa9e08cf7972d0a2f587029e09b33de83,False, switch x509_test.cc use raw string literal lot easier copy certificate x509_test.cc indent worry note doe stick newline front string pem parser care change reviewed http boringssl boringssl 43285 reviewed adam langley agl google.com, , ,None
454,https://api.github.com/repos/google/boringssl/commits/723faad51da1e5b0b7ce5a25be018a2ad2d972c6,False, fix malloc error handling see upstream though note v3_alt.c fix rewritten sk_reserve think fix quite right anyway change reviewed http boringssl boringssl 43284 reviewed adam langley agl google.com, , ,None
455,https://api.github.com/repos/google/boringssl/commits/b117a3a0b7bd11fe6ebd503ec6b45d6b910b41a1,False, acvp add aes kwp support change reviewed http boringssl boringssl 43165 reviewed david benjamin davidben google.com, , ,None
456,https://api.github.com/repos/google/boringssl/commits/81658a95c9458c6733d61535038f8aac9a2d2f81,False, acvp add aes support change reviewed http boringssl boringssl 43164 reviewed david benjamin davidben google.com, , ,None
457,https://api.github.com/repos/google/boringssl/commits/35ee5ab8cffe677fe8f94118d64f111740eaaa6a,False, acvp support saving vector since support reading vector file change add support saving support uploading saved vector rather quicker debugging since nist server taking minute produce vector moment little frustrating iterate change reviewed http boringssl boringssl 43144 reviewed david benjamin davidben google.com, , ,None
458,https://api.github.com/repos/google/boringssl/commits/5e086956f20e1af3670ff00dca80bff84ca9ed0c,False, fix handling always saved ssl_session change fix bug saved ssl_session full handshake resumption handshake bug 376 change reviewed http boringssl boringssl 43264 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
459,https://api.github.com/repos/google/boringssl/commits/38bcb5368cae46458a501760e023b5f25de92d92,False, add warning des.h deprecated hopefully well established enough one going start complaining implementation constant time think non constant time code left without warning add one completeness possible implement bitslicing 3des cipher slow hopefully long world change reviewed http boringssl boringssl 43244 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
460,https://api.github.com/repos/google/boringssl/commits/9bf1634b93394385651858960309be05010015fe,False, move trusty workaround openssl_linux define see 169780122. openssl_linux defines urandom getrandom logic trusty use easier work future code change reviewed http boringssl boringssl 43224 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
461,https://api.github.com/repos/google/boringssl/commits/fda92cd640e36e2fd8ab455f4ca0c1a301c35011,False, acvp add aes gcm support change reviewed http boringssl boringssl 43127 reviewed adam langley agl google.com reviewed david benjamin davidben google.com commit queue adam langley agl google.com, , ,None
462,https://api.github.com/repos/google/boringssl/commits/6b6b66bacd089ae4faf8c22fdc47fe0a9fe6ef50,False, disable fork detection trusty trusty madvise sysconf importantly fork confirmed chatting ncbray branch fork_detect.c seems appropriate change reviewed http boringssl boringssl 43204 commit queue pete bentley prb google.com commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
463,https://api.github.com/repos/google/boringssl/commits/67818bea6690a230e2f42e8a588e0f54949bbbf1,False, acvp add aes ctr support change reviewed http boringssl boringssl 43126 reviewed david benjamin davidben google.com, , ,None
464,https://api.github.com/repos/google/boringssl/commits/63fa33d7eace08f5cbc671d8b202443805d45645,False, tell clang format stack_of lhash_of type clang format see stack_of foo hard time telling whether multiplication pointer often indent thing wrong typenamemacros option fix change reviewed http boringssl boringssl 43145 reviewed adam langley agl google.com, , ,None
465,https://api.github.com/repos/google/boringssl/commits/8097632475b8093f669ef33fa24414fc36e51eea,False, modulewrapper fix unknown function due typo unknown function requested previously ignored change reviewed http boringssl boringssl 43125 reviewed david benjamin davidben google.com, , ,None
466,https://api.github.com/repos/google/boringssl/commits/3ff161cc0876443bfa54c511b37d033312c81328,False, print ssl_get_error bssl_shim test fails due unexpected ssl_get_error result notably rtt rejection difficult debug change reviewed http boringssl boringssl 43085 reviewed steven valdez svaldez google.com commit queue david benjamin davidben google.com, , ,None
467,https://api.github.com/repos/google/boringssl/commits/437eabd0399a9293ba6c4501de293c51794cd70a,False, modulewrapper fix sending empty span sending empty span tripped code never considered iovec sent instead filter empty iovecs first place change reviewed http boringssl boringssl 43124 commit queue adam langley alangley gmail.com commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
468,https://api.github.com/repos/google/boringssl/commits/bb72a8d649232a74951401a22a9d99fcc5407a3a,False, allow specifying different initial resumption expectation hoc want add one alp confirm changing alp resumption work probably could done test alpn wrap connectionstate expectation struct optional field also move ocspresponse method connectionstate consistency change reviewed http boringssl boringssl 43084 reviewed steven valdez svaldez google.com commit queue david benjamin davidben google.com, , ,None
469,https://api.github.com/repos/google/boringssl/commits/0ee5808fed3a3b4ec5f54f0338e5f8e30472b797,False, add openssl_no_ constant bumping 1.1.1 pulled define compatibility change reviewed http boringssl boringssl 43104 reviewed adam langley agl google.com, , ,None
470,https://api.github.com/repos/google/boringssl/commits/b0e98e408c88dd91583f6f8fac233f0d4433b55b,False, test client server server echo selected alpn back getter client change reviewed http boringssl boringssl 43045 reviewed adam langley agl google.com commit queue david benjamin davidben google.com, , ,None
471,https://api.github.com/repos/google/boringssl/commits/a6386ea1851039458725e91cf40583e8dde28db6,False, runner rewrite sessionstate parsing bytereader make tedious add new field later change reviewed http boringssl boringssl 43005 commit queue david benjamin davidben google.com reviewed steven valdez svaldez google.com, , ,None
472,https://api.github.com/repos/google/boringssl/commits/c4ec14c71dfa6e59d7d9055daaae887ce0f6b5c2,False, switch bool span function still bit like slightly better change reviewed http boringssl boringssl 43004 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
473,https://api.github.com/repos/google/boringssl/commits/5850a016b212407708a963f4f94e4217ae18dd0e,False, disable check x.509 extension implies expect reenable january 2021 change reviewed http boringssl boringssl 43024 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
474,https://api.github.com/repos/google/boringssl/commits/b13e7b5fdca961b6f91af5d62bd080a22087f470,False, silence clang warning macos bot look like toolchain updated recently bot complaining copy reference test declaring pair vector much typing external array pair span change reviewed http boringssl boringssl 43044 reviewed adam langley agl google.com, , ,None
475,https://api.github.com/repos/google/boringssl/commits/e0900ac5e1b123ea0877b2b69e601e69e9e65afa,False, mirror dsa.h deprecation notice dh.h http raccoon attack.com also applies anyone using dh_compute_key static key add warning header change reviewed http boringssl boringssl 42904 reviewed adam langley agl google.com, , ,None
476,https://api.github.com/repos/google/boringssl/commits/cefbf9ceaa2ed47b5108eae40a20430637b93170,False, const correct upstream return const pointer match update note caller may need update call believe everything affected fixed change reviewed http boringssl boringssl 42884 reviewed adam langley agl google.com, , ,None
477,https://api.github.com/repos/google/boringssl/commits/3743aafdacff2f7b083615a043a37101f740fa53,False, add introduced openssl 1.1.1 wpa_supplicant expects function match align upstream name seems also lying around fold together retained assert seems reasonable enough casting hypothetical sslv2 cipher uint16_t would behave correctly change reviewed http boringssl boringssl 42966 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
478,https://api.github.com/repos/google/boringssl/commits/9adcb0aa7eb946bea9197276121412ef68776315,False, add trusttokenv2 change remove point prefix verify srr client todo replace srr generation generation issuer add finalized privacypass version change reviewed http boringssl boringssl 42824 commit queue steven valdez svaldez google.com reviewed david benjamin davidben google.com, , ,None
479,https://api.github.com/repos/google/boringssl/commits/ee4af9e94e7766afe739f6aa433f10b1b404c991,False, add conscrypt need function also fix bug error handling add completeness nothing yet could later alternative avoid conscrypt mess template change reviewed http boringssl boringssl 42744 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
480,https://api.github.com/repos/google/boringssl/commits/5eeaf3029dab6b7264522c57a7a2acb461c0a434,False, add accommodation freerdp change reviewed http boringssl boringssl 42924 commit queue david benjamin davidben google.com reviewed david benjamin davidben google.com, , ,None
481,https://api.github.com/repos/google/boringssl/commits/ca3f243cf0cf1dd50b79f3385154ffb6c7261073,False, require non null store documented upstream allow null store logic account however attempting use x509_store_ctx crash due logic added moreover change still crash default get_issuer hook assumes ctx ctx store non null also true upstream later fixed http github.com openssl openssl pull 6001. however without store trust anchor useful reject null store remove logic allowing null one thanks danny halawi catching update note fail store null rather report success crash later breakage thus limited code passing null store never used resulting x509_store_ctx change reviewed http boringssl boringssl 42728 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,General
482,https://api.github.com/repos/google/boringssl/commits/6d70353ca8bc55b54f19af00fb7d9b074208ff1c,False, const correct needed fix config apis take const char split incompatible half change update note external definition need fix type function probably hide struct aligns upstream openssl change reviewed http boringssl boringssl 42727 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
483,https://api.github.com/repos/google/boringssl/commits/6247347edd347b5a5c14b2a50a9c77659e77c24d,False, avoid union x509_name logic cast asn1_value directly rather messing union necessary avoid strict aliasing violation doe allow type punning union pointer union field weird rule suspect union reworked change reviewed http boringssl boringssl 42726 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
484,https://api.github.com/repos/google/boringssl/commits/49e9f67d8b7cbeb3953b5548ad1009d15947a523,False, bump 1.1.1 1.3 ed25519 support much closer openssl 1.1.1 day openssl 1.1.0. also added test keep sync update note check may need updated hopefully even away bug 367 change reviewed http boringssl boringssl 42864 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
485,https://api.github.com/repos/google/boringssl/commits/a82cfdf08370bc4fd945f21c66d7dee3c4b7bd48,False, document x509.h change reviewed http boringssl boringssl 42725 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
486,https://api.github.com/repos/google/boringssl/commits/662bfad81002086c217a9042ed459efd5e0bf82c,False, fix potential leak bssl array shrink currently use type anywhere nontrivial destructor matter right handle correctly case ever one day sort using stl abseil ... change reviewed http boringssl boringssl 42825 commit queue adam langley agl google.com reviewed adam langley agl google.com, , ,None
487,https://api.github.com/repos/google/boringssl/commits/6ad3b46b24ea45afb609a2852f6dc16f52840583,False, remove function unused quite unsafe update note use asn1_string_set instead though function appears unused change reviewed http boringssl boringssl 42724 reviewed adam langley agl google.com, , ,None
488,https://api.github.com/repos/google/boringssl/commits/6a263ce483b9ff03c7998bcae031ed42f092368e,False," revert check parameter rsa ecdsa signature reverts commit bug 167375496,342 original change description check parameter rsa ecdsa signature  aligns chromium certificate verifier allows null empty rsa requires empty ecdsa  bug 342 change reviewed http boringssl boringssl 41804 reviewed adam langley agl google.com commit queue david benjamin davidben google.com tbr agl google.com davidben google.com skipping check original landed day ago change reviewed http boringssl boringssl 42804 commit queue adam langley agl google.com reviewed adam langley agl google.com", , ,None
489,https://api.github.com/repos/google/boringssl/commits/bc2480510960a77bea24edc64fcb089aca103940,False, implement psk variant hpke setup function change reviewed http boringssl boringssl 42664 reviewed david benjamin davidben google.com commit queue david benjamin davidben google.com, , ,None
490,https://api.github.com/repos/google/boringssl/commits/bef6a2f5f51b9753b9ee49a236e3433f6e623067,False, acvp support working file direct connection acvp server may always available case nvlap lab interact server send json back forth file change support dumping capability json lab need order send server processing vector file disk change reviewed http boringssl boringssl 42704 commit queue adam langley agl google.com reviewed david benjamin davidben google.com, , ,None
491,https://api.github.com/repos/google/boringssl/commits/4ef5de02c7d0d9cf8c1ec72450ab825b633c7b76,False, document function x509.h tidy variable name stray parens change reviewed http boringssl boringssl 42665 reviewed adam langley agl google.com, , ,None
492,https://api.github.com/repos/google/boringssl/commits/298d8bea0356799ce77c871b22fd6780383365bf,False, add subject key authority key accessors although extension accessible via openssl x509 object carry cache number extension openssl added accessors 1.1.0 1.1.1d others mirror note although look like simpler getters error handling tricky looking mirror openssl accessors finally make structs opaque structure also recognizes collection built certificate field error handling parser could one path cached field mess cost making parse operation work change reviewed http boringssl boringssl 42624 reviewed adam langley agl google.com, , ,None
493,https://api.github.com/repos/google/boringssl/commits/1c58648f14ed75f2a8cc3ae08897987d97f493ec,False, remove sxnet extension used within verifier one ever extract update note parser two extension removed parsing type directly passing nid_sxnet x509v3_get_d2i _get_ext_d2i longer work change reviewed http boringssl boringssl 42585 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
494,https://api.github.com/repos/google/boringssl/commits/125a38fad9fc08cb9ac36925988c667d04fda993,False, const correct various x509 function actually making crypto asn1 crypto x509 const correct tall order hidden cache non const asn.1 macro ambiguity mutable immutable getters upstream const corrected number thing align particular currently possible usefully use non const x509_name think gotten x509.h started going x509v3.h conf bit take non const char pointer show public probably unused left alone reason openssl made const non const function kept uniformly non const adding uniformly const mirrored compatibility sake change reviewed http boringssl boringssl 42584 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
495,https://api.github.com/repos/google/boringssl/commits/95d8eaa660040cfe7075a6a0390038a10cb64ff7,False, make x509_set_not function rather macro binding library sensitive difference break http boringssl boringssl 42524 change reviewed http boringssl boringssl 42604 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
496,https://api.github.com/repos/google/boringssl/commits/48cb69f8bd5606933e1844460551a4bc140622c0,False, add x509_get0_uids openssl 1.1.0 change reviewed http boringssl boringssl 42564 reviewed adam langley agl google.com, , ,None
497,https://api.github.com/repos/google/boringssl/commits/9372f38cd06d181e8c9badf34d0d733670f282cc,False, bound rsa dsa key size better asymmetric operation scale superlinearly make potential vector problem mitigated fixed size like rsa 2048 256 curve25519 older algorithm like rsa dsa size convention rather well defined algorithm everyone rsa 2048 code import rsa key may see arbitrary key size possibly untrusted source commonly public key bound rsa key size however application import external private key may need tighter bound typically parse key check result however parsing perform superlinear work rsa_check_key recovering dsa public key doe following rename additionally call rsa_check_key fix bug rsa_check_key crt key bound bound multiplying quadratic dsa verifier stricter check 160 224 256 bit dsa signer multiple bit aligner signer verifier check validate dsa group size parse well priv_key bound running time ideally invariant would checked exactly construction rsa dsa implementation suffer openssl api mistake http crbug.com boringssl 316 mean hard consistently enforce invariant focus parser later like better rationalize logic performance parsing rsa dsa key gathered laptop 15130 rsa 2048 parse operation 5022458us 3012.5 ops sec 4888 rsa 4096 parse operation 5060606us 965.9 ops sec 354 rsa 16384 parse operation 5043565us 70.2 ops sec rsa 32768 parse operation 5038293us 17.5 ops sec rejected 35000 dsa 1024 256 parse operation 5030447us 6957.6 ops sec 11316 dsa 2048 256 parse operation 5094664us 2221.1 ops sec 5488 dsa 3072 256 parse operation 5096032us 1076.9 ops sec 3172 dsa 4096 256 parse operation 5041220us 629.2 ops sec 840 dsa 8192 256 parse operation 5070616us 165.7 ops sec 285 dsa 10000 256 parse operation 5004033us 57.0 ops sec dsa 20000 256 parse operation 5066299us 14.6 ops sec rejected update note invalid overly large rsa dsa key may previously accepted rejected parse time public key move error verification parsing private key case would previously allow signing key resulting signature would accepted boringssl anyway make behave consistently bug fuzz 24730 change reviewed http boringssl boringssl 42504 reviewed adam langley agl google.com, , ,None
498,https://api.github.com/repos/google/boringssl/commits/c947efabcbc38dcf93e8ad0e6a76206cf0ec8072,False, add set1 version x509 timestamp setter openssl renamed preferred spelling etc. add set1 name update within library change reviewed http boringssl boringssl 42524 commit queue david benjamin davidben google.com reviewed adam langley agl google.com, , ,None
499,https://api.github.com/repos/google/boringssl/commits/edd4c5f76796e7c03168f8e30740d9edfc6caa90,False, consistently sort generated build file output format manually call sorted retained since often concatenate multiple file list json output dump object json directly sort everything earlier json output deterministic change reviewed http boringssl boringssl 42544 reviewed adam langley agl google.com, , ,None
