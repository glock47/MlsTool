id,sha,author,date,issue,message,file,content
0,d3ba459338aadf27d4420f5e19a9c867018d2744,van Gotovchits <ivg@ieee.org>, 2021-07-30 17:46:22 -0400, , fix core eff theory 1338 theory used debugging introspection purpose bug denotation branch repeat operation denoted empty denotation effect empty corrected,,
1,0c615b058c89f843e17b2ff9510b5988e8293a77,van Gotovchits <ivg@ieee.org>, 2021-07-29 12:39:50 -0400, , add primus lisp stub fix existing 1337,,
2,96ab02cedf634d6bad6a6d0420dd1e0edfef2f5b,van Gotovchits <ivg@ieee.org>, 2021-07-28 18:17:09 -0400, , improves main function discovery heurisitics 1336 problem heuristic per cyclic dependency abi pas discovers main abi pass api pass ideally reimplement abi api infrastructure using knowledge base originally designed handle dependency take much time currently therefore right discover abi pas sure type applied need use later get storage first argument delay main function discovery api pas find main also want type applied unfortunately call api pas responsible known prototype main really need parse header anymore manually apply prototype translate arg term main function discovery work perfectly program use glibc runtime yeah finally execute bin true bin false  bap bin false run primus print call return grep main call return main 0x40000008 bap bin true run primus print call return grep main call return main 0x40000008 ,,
3,784ebe292762ece736a0407c7388da1aa08945c7,van Gotovchits <ivg@ieee.org>, 2021-07-09 17:01:11 -0400,1326, fix improves label handling theory 1333 context since ghidra semantics blk operation core theory refined corresponding theory updated 1326 theory ignoring label passed blk operator reason blk operation serf two purpose enables concatenation data control flow effect attache label sequence could referenced elsewhere 1326 used first purpose i.e. merge data control effect single effect ghidra needed ability create label ghidra relying branch cbranch instruction everywhere even express intra instruction logic real control flow theory take account label passed blk operation produce denotation unless label label.null label label.null operation denotes sequence data control flow effect moreover denotation allowed coalesce several block together label non null denotation preserve bir theory fully respecting passed label sometimes optimizing away example label attached empty denotation take care keeping passed label time preserving minimal form generated course assuming lifter using blk operation correctly i.e. passing non null label block plan invoke later word lifter blk operation need update pas instead fresh label semantics passing non null label different semantics,,
4,c0f0f96557d314ad1683046ee4cf23f94ec5727f,lexandre <67114640+0poss@users.noreply.github.com>, 2021-07-09 20:19:17 +0200, , add flatten pas 1332 added flatten unroll pas update plugins flatten flatten_main.ml authored ivan gotovchits ivg ieee.org update plugins flatten flatten_main.ml authored ivan gotovchits ivg ieee.org update plugins flatten flatten_main.ml authored ivan gotovchits ivg ieee.org update plugins flatten flatten_main.ml authored ivan gotovchits ivg ieee.org applies make indent add missing core_kernel dependency authored ivan gotovchits ivg ieee.org,,
5,650c35c0469d747ef091903a57cf1cb7668aa636,van Gotovchits <ivg@ieee.org>, 2021-07-08 15:44:28 -0400, , fix docker publisher also enables manual triggering 1331,,
6,e44cba99312f3e0f2490e9f510f768b7d50e3020,van Gotovchits <ivg@ieee.org>, 2021-07-08 14:29:47 -0400, , fix address size computation llvm backend 1330 virutal member function elf file implemented incorrectly llvm  template class elft uint8_t elfobjectfile elft const return elft is64bits   actually static file return elf32 elf64 nothing actual bitness target architecture address using information obtained target triple fall back target bit target interface also strange allow value,,
7,1f632b273b0373fd1efd4c64cc301271add355ea,van Gotovchits <ivg@ieee.org>, 2021-07-08 14:29:33 -0400, , fix frame layout calculation primus loader 1329 using address size everywhere instead using number bit architecture avr8,,
8,8e1cb72c4a4a457f40a9b7d16c2a318b1fff67a5,van Gotovchits <ivg@ieee.org>, 2021-07-08 14:29:19 -0400, , fix c.abi.args popn align_even operator 1328 popn always poping first register align_even also popn instead aligning,,
9,4263cb1e42b2dcaa338df105ec53f6f5339f92f3,van Gotovchits <ivg@ieee.org>, 2021-07-07 08:25:19 -0400, , fix typo ubuntu dockerfiles 1327,,
10,ef6afa455a086fdf6413d2f32db98fa9ff1b28d8,van Gotovchits <ivg@ieee.org>, 2021-07-06 15:50:12 -0400, , add experimental ghidra disassembler lifting backend 1326 initial scaffolding add support nameless register disasm backend want model unique temporary register normal physical register add option set name indicate register unique anonymous variable minimal implementation introduces sub instruction disassembler provision backend never fully implemented feature enables seambless integeration ghidra backend may also used vliw architecture e.g. hexagon llvm backend using fix handling unique namespace implement semantics sequential instruction specifies semantics pcode instruction pass basic instruction info sequential semantics value fix semantics load improves handling pcode namespaces fix varnode classification longer treating address register also prevent name clash virtual variable different scope use unique prefix aka shortcut ghidra parlance distinguish also make generated code readable closer originally genereated pcode fix subpiece implementation put pcode opcodes pcode namespace since architecture feature implement support user defined opcodes translate callother name arg1 ... argn  name arg1 ... argn translates local intra instruction branch gotos branch code overloaded type destination destination virtual address normal branch constant varnode constant namespace intra instruction branch represents inner instruction logic fix satisfies function account subinstructions looking top level instruction attempt pack subinstructions inside instruction break lot stuff publishes subinstructions probably forfeit approach still investigating introduces null object knowledge base actually already hidden obj domain properly documented well defined semantics null object represent unlabeled block lifter also lifter respect passed label blk operator remove subinstruction slot instruction add label reification bil semantics also reifies gotos using special encoding implement intra instruction gotos add sequence number documentation fix error hanlding goto subinstruction primitive implement proper disassembler factory scan ldefs file far working quite correctly default variable like word size etc properly set investigating ... add proper processor initialization implement proper command line interface plugin able list target pas path ghidra root add tentative x86 backend option enable ghidra x86 fix offset address calculation add symbol semantic primitive fix overloading primus lisp semantic definition overloading prevented attribute computation expected overload also make error message readable try overload code operation based operand type pass operand type per operand remove extra opcodes look like branch overloaded code operation e.g. int_add mem mem mem represents mem mem mem could also resolve overloading adding suffix operation e.g. int_addmr int_addmm explode number opcodes especially presence user defined opcodes catch bad unimplemented instruction decoding ghidra raise exception instruction valid semantics add signed ordering primus lisp primitive implemented corresponding pcode operation pass full information operand type backend code semantics operation defined type operand case unique variable type known pas commit extends previous approach passing kind operand mem imm full type qualification type memory represented nil type immediates represented size number bit add missing bool_negate operation fix negation operator pcode represent bool byte remove aliased register register table fix selection default backend x86 llvm specified otherwise switch caseless ordering variable change document ordering variable variable compared caseless ordering made loosely compatible caseless lexicographical ordering textual representation variable identifier e.g.   enables ghidra backend arm target right disabled default use arm backend ghidra enable pcode x86 language pcode x86 target add ghidra backend mips minor pretty printing tweak make thing readable improves primitive performance primus lisp optimization primus lisp based lifter run five time faster especially important ghidra backend lifter fully dependent primus lisp idea let primitive implementors provide body primitive every primitive computed via semantics promise invoked directly another big idea provide interface allow factor computation common target idea could extrapolated promise optimization improves name resolution primus lisp map name list surprisingly much improvement something optimizes unit computatation hoisting loop optimization request lisp argument necessary compute list argument need invoke theory reflect resulting work discarded name bound optimization check name bound program asks list argument add ghidra powerpc work box add x86 backend option alias x86 backend consistency enables ghidra riscv run box enables ghidra backend build ghidra supported target right ubuntu bionic soon add target package bap package split bap core bap bap extra bap core contain minimal part platform without analysis bap package include analysis finally bap extra include heavy weight analysis term extra dependency build time e.g. symbolic executor ghidra backend move ghidra install section lower downgrade ubuntu version try fix macos build disables ghidra opam opam used,,
11,2d948227f5cae2233f0b5d8f63d9d05d6d70c246,van Gotovchits <ivg@ieee.org>, 2021-06-09 15:11:52 -0400, , add armeb abi 1325 reuse existing arm thumb abi make sure correct architecture passed memory related operation,,
12,4adedbcd4cc4453c4ed6b46286f5bddcc00003bd,van Gotovchits <ivg@ieee.org>, 2021-06-07 13:59:42 -0400, , fix ppx_bap version dev repo opam file 1323 file assuming presence testing snapshot opam repository always available also required get ppx_bap already long time upstream repository,,
13,0e4bd537e87dc3f69b13330c6718865065690730,van Gotovchits <ivg@ieee.org>, 2021-06-02 16:15:31 -0400, , enables push flag publish docker image action 1321 docker image longer pushed dockerhubn 1312 first secret name accidentally changed secondly push parameter default false version action,,
14,0b759869b0815163aa2f11dc6d6b51feeb95a49c,van Gotovchits <ivg@ieee.org>, 2021-06-02 09:18:37 -0400, , remove sudo postinst postrm action deb package 1320 guaranteed sudo present really necessary action anyway run super user,,
15,c5825add23b98d9342fd5eb3b1189184660dd814,van Gotovchits <ivg@ieee.org>, 2021-05-27 14:51:44 -0400, , fix shared folder deb package 1319 old script following old share folder layout result bap working debian missing neccessary lisp file,,
16,864ff06a3fe55e1304bfe0dcd33f5a0f96811756,van Gotovchits <ivg@ieee.org>, 2021-05-27 09:50:52 -0400, , start 2.4.0 release cycle 1318,,
17,147425648c430ec81587e17cc5fcc8009bd6295f,van Gotovchits <ivg@ieee.org>, 2021-05-26 19:06:37 -0400, , update version changelog 2.3.0 1316,,
18,a4981a20b2081760891b5bf288967b96a88d8792,van Gotovchits <ivg@ieee.org>, 2021-05-26 16:12:13 -0400, , switch frontc.4.x add preprocessing option 1314 switch frontc.4.x add preprocessing option since frontc.4.x support new type c99 update bap well representation type well parsing procedure also added option disabled default apply preprocessing ability specify path since frontc.4.1 much robust capable chewing linux system header add frontc constraint,,
19,25408539f014fd781a68d7a717c9d6fa4a1bd7c3,ora Morimoto <sora@morimoto.io>, 2021-05-26 04:57:54 +0900, , fine tune github action workflow 1312 use semver style version matching workflow signed sora morimoto sora morimoto.io update docker build push action signed sora morimoto sora morimoto.io format github workflow file signed sora morimoto sora morimoto.io enable dune cache ubuntu runner signed sora morimoto sora morimoto.io,,
20,ed14f3a23e2f28c19ccc07b65a670ca8a9df1282,van Gotovchits <ivg@ieee.org>, 2021-05-25 09:53:46 -0400, , switch workflow ocaml setup ocaml.v2 1311 new version might give much better performance see discussion detail http ann set ocaml alpha 7895,,
21,32846d556d5f9d32b2ad3732ff72644eeab53975,van Gotovchits <ivg@ieee.org>, 2021-05-18 18:35:51 -0400, , remove old unit tracking module fix modern one 1310 old unit tracking module used compilation unit loaded core program longer used since phased compiler required however modern unit relies ocaml runtime track unit also broken version ocaml since introduction facility 4.08.0 till latest 4.12.0 properly initialized add kludge ensures proper initialization note bug manifest bap several layer protection still better working properly,,
22,acb26d6ae266d090002368eb43b6e785df1b7902,van Gotovchits <ivg@ieee.org>, 2021-05-07 18:20:20 -0400,1299, add support big endian arm thumb architecture 1309 big endian thumb arm target supported llvm fix available many year still reviewed tried raise attention success since look like going fix need fix side solution little bit hacky keep switch ghidra disassembling lifting example  bap arch thumb show insn asm show bil tst    extract  bap arch thumb order big show insn asm show bil tst    extract  file echo echo elf bit msb executable arm version arm dynamically linked interpreter lib uclibc.so.0 gnu linux 2.0.0 stripped bap echo dasm grep 8c90 8c90 main 8c90 8c90 push r10 8c94 ldr 0x334 8c98 mov 8c9c mov 8ca0 mov objdump echo grep 8c90 00008c90 main base 8c90 e92d47f0 push 8c94 e59f3334 ldr 820 8fd0 main base 0x340 8c98 e1a07001 mov 8c9c e1a06000 mov 8ca0 e3a00006 mov  fix 1299 http bugs.llvm.org show_bug.cgi 38721 http d48811 http twitter.com ivg_t status,,
23,2f38fb45bafdc4376ad259b1ebd18925d86602a2,van Gotovchits <ivg@ieee.org>, 2021-05-07 15:28:50 -0400, , fix bug method computes padding 1308 reason code assumes mod multitude raise exception happen quite often fact code called structure size computed main caveat  method incorrect type constrains padding size set real padding may number bit sum range method exist padding fully defined alignment field need override therefore solution deprecated method compute padding using alignment information method longer used code overrode get warning,,
24,a38af3a490c02c7b9a30e63f27bba52bcd19905f,van Gotovchits <ivg@ieee.org>, 2021-04-30 20:09:50 -0400, , add bap primus lisp documentation 1306 much like old bap primus lisp documentation command print primus lisp documentation .org format require file possible specify target using target command line option since primus lisp documentation separate command necessary specify bogus file name option control output first possible specify system using system possible get documentation symbolic primtives function also possible set package name using package request documentation primus lisp semantics subsystem semantics therefore get documentation thumb semantics function primitive use  bap primus lisp documentation semantics package thumb  list package along documentation also available bap primus lisp documentation,,
25,850f24b224ef4b395f46274f82fbcd604cc5b1a2,van Gotovchits <ivg@ieee.org>, 2021-04-30 18:27:24 -0400, , renames core theory package core 1307 theory part excessive make harder read knowledge base new name also make sense add theory,,
26,8915677d3aa8a1866ebdface1c4b41af29398695,van Gotovchits <ivg@ieee.org>, 2021-04-22 22:32:02 -0400, , preserve encoding name instruction 1303 ensures instruction encoding match name encoding used decode fix encoding name sometimes taken triple enforced name encoding match triple safely peek encoding name,,
27,c54b59a1cc458737184ebaa87836286271c40532,van Gotovchits <ivg@ieee.org>, 2021-04-22 22:31:38 -0400, , add show knowledge option bap 1304 option dump final state knowledge base mostly useful debugging writing lifter,,
28,2ef02d66e0f7ae691d932a2a605999f15fcde0eb,van Gotovchits <ivg@ieee.org>, 2021-04-21 12:19:46 -0400, , fix thumb sbc semantics 1302 shall complement negation instead complement negation thanks ccasin philzook58 pointing implementation incorrect,,
29,872b4a56dfcf5124f636a4df9f9a139e08c39303,van Gotovchits <ivg@ieee.org>, 2021-04-21 12:19:37 -0400, , fix implicit coercion primus lisp monoid operator 1301 arithmetic bitwise operator primus lisp accept bitvectors arbitrary length performs implicit coercion operand greatest sort however first argument accidentally removed coercion fixed addition coercion procedure missing opportunity perform coercion statically done new implementation,,
30,b0c8614983ec88853ea99271e7992d3c666c2504,van Gotovchits <ivg@ieee.org>, 2021-04-21 09:37:35 -0400, , streamlines primus lisp semantics option 1300 primus lisp semantics option take folder file current working directory excluded default path though could added primus lisp semantics necessary also improves option documentation,,
31,97fb7fa6a8a90faeae2b077d8ad59b8b882d7c32,van Gotovchits <ivg@ieee.org>, 2021-04-19 18:50:27 -0400, , add thumb specific instruction 1298 instruction mostly implemented primus lisp also add arm bits.lisp file contains arm specific operation shared across member arm architecture,,
32,27c195c51ffc5b8ca88e7bdfc4d8a3a0648ef86b,van Gotovchits <ivg@ieee.org>, 2021-04-19 13:08:00 -0400, , add missing instruction 1297 add missing instruction could use primus lisp apparently already implemented forgot update code use add cbz cnbz instruction,,
33,36a04babae0da0494d61d1ab8663adb3bbf38d85,van Gotovchits <ivg@ieee.org>, 2021-04-16 14:47:49 -0400, , add yaml alternative output specification command 1295 motivation yaml human readable machine readbale together possible easily construct various query translate json format also add corresponding function,,
34,59d213234bddd7efa6caaa4cd8a85da3130638a7,van Gotovchits <ivg@ieee.org>, 2021-04-16 13:43:51 -0400, , arm eabi thumb binary 1296 initial approaximation use existing eabi implementation first glance look like generates correct argument passing procedure,,
35,ab38ce6ef0f1fbeb7384e80928da1e63aaa10857,van Gotovchits <ivg@ieee.org>, 2021-04-15 16:04:03 -0400, , introduces bap dependency command 1294 start dependency command implementation command recursively analyze program dependency imported name library right recursion elf architecture easier unlike elf supported llvm add caching imported name fix caching service add recursion cache specification command add export import symbol set symbol add dot output add json format add support yaml move elf dynamic parse library add macho coff nearly feature complete next step add support ldconfig add documentation add support ldconfig add option specify root folder documentation,,
36,0fb8a37bc84c4eb789bbb301032e5a76860c95b2,van Gotovchits <ivg@ieee.org>, 2021-04-13 08:09:49 -0400, , implement array pointer conversion abi processor 1293 array implicitly converted pointer passed function therefore see elt elt elt prototype shall convert elt conversion applied abi processor application function feature language individual abi enable feature abi implementation processor see array anymore,,
37,dd0fef207d96010336189e4a2637ea7cb1e3e49a,van Gotovchits <ivg@ieee.org>, 2021-04-04 09:35:20 -0400,1176, add armv8 aarch64 lifter 1291 add minimal incomplete aarch64 lifter make name string conversion robust name string conversion could throw error name interned could happen example cache written one version program read another version name longer present case missing name represent repr repr hexadecimal representation missing name hash add show addr show memory option bap objdump make much easier write lifter add semantic primitive tweak existing added semantic primitive lnot extract concat select also tweaked cast reciprocal handle static case tweak monoids choose significant widest sort instead default word size lift even aarch64 instruction update armv8 register file correctly map name register add primitive disables handling pseudo register right working expected implement instruction fix function argument passing implement variable place tracking add symbol primitive add function implement constant zero register handling theory level add mips zero register target description resolve 1176 add aarch64 instruction drop handling pseudoregisters lisp compiler add aarch64 instruction finish necessary aarch64 instruction enables abi fix instruction trivial executable work echo yet bugfixes lifter minimally complete implement armv8 aapcs64 abi update testsuite,,
38,94b85716f6e7efe03b027542779f851f5b0de14c,van Gotovchits <ivg@ieee.org>, 2021-04-02 15:44:13 -0400, , implement abi description edsl 1290 add function function look variable name implement new abi description dsl new abi implement riscv abi,,
39,bc699cee89ce26162024b445d7125077d7b5aa48,van Gotovchits <ivg@ieee.org>, 2021-03-31 22:38:16 -0400, , fix unit tracking mechanism 1289 check rejecting benign passing malign plugins checking provides field loading main requires field fortunately misbehaving plugins later failing loading procedure well bening plugins also sometimes hit e.g. three field name main provides,,
40,a9e378e3e0f05453d959192b6c85b803c6616348,van Gotovchits <ivg@ieee.org>, 2021-03-19 16:18:37 -0400,1281, restores output non empty instruction 1288 look like 1281 rendered bap useless unlifted instruction objdump commads outputing empty object even without asm opcodes make really hard write new lifter fix objdump level sure also need disassembler driver case output driver incorrect without full semantics,,
41,de0e258ef91fa3d55bf74fc0abaac9acaedd3e71,van Gotovchits <ivg@ieee.org>, 2021-03-19 15:43:18 -0400, , add riscv32 riscv64 support 1287,,
42,01b054a153cca5aee5887f32e087f0e29923b6fd,van Gotovchits <ivg@ieee.org>, 2021-03-19 14:09:02 -0400, , add namepspaces package primus lisp 1286 information basic instruction lisp lifter enables support pseudo register fix primus semantic primitive implemenation implement style package second rewrite ... declares missing memory read semantic primitive duplicate primitive import export external declaration external package made finally work pass current package attribute parser return defpackage package handling meta parser probably preparse selected feature make faster resolve issue missing global static variable move invoke subroutine primitive fix signal name arranges package really need user primus feature define package beforehand even dependency remove reindexing primitive fix reindexing procedure introduces place switch ymms register amd64 target match bil representation make lisp attribute parser strict fix symbol evaluation fix signal propagation flattens implement symbol visibility move variable initialization typechecking stage run component initialized unqualified name send trace signal enables advice mechanism move place program module place semantics store semantic primitive lisp program enable package propagation better introspection switch theory var place representation switch use place semantics compiler add several semantics prototype improves error messaging target package target specific primitive refines package handling advice attribute current package ignored instead default package external add primus lisp documentation import posix user package remove posix init feature make primus default package observation remove extra noise program dumper print package current one add calling convention fix target lisp context remove advice function matching context,,
43,f939f75db684f740f987cb0a40f1778270dace73,van Gotovchits <ivg@ieee.org>, 2021-03-19 11:02:24 -0400,1284, fix missing str dependency x86 plugin 1285 fix 1284,,
44,3ee5a3730ee8e6dcfd1e9a2d8a66a814c47d769b,ryHavoc21 <cryhavoc24@gmail.com>, 2021-03-18 13:36:30 -0500, , update bap.mli auto documentation 1283 update bap.mli auto documentation added newline auto documentation correctly format var entry_point entry correctly update pas style check,,
45,5cfc3e584ea32d6c0c33013e050fb1a1e8f260de,van Gotovchits <ivg@ieee.org>, 2021-03-11 11:48:39 -0500, , fix recipe search path 1282 includes system wide share prefix search path,,
46,05ced1b10bceceac8b74dfe6c8d829112a83099b,van Gotovchits <ivg@ieee.org>, 2021-03-08 15:22:28 -0500, , prune empty segment 1281 filter empty segment specification empty segment break particular primus loader treat segment cover address appropriate assert added make easier discover issue future,,
47,4454b5db0774e861a409828bbc52e3d4b14d4311,van Gotovchits <ivg@ieee.org>, 2021-03-02 16:03:06 -0500, , fix clean optimizes avl tree implementation 1280 fix bug avl tree upsert function remove unnecessary specialization dict.insert optimization giving result micro benchmark affect real life program sensible manner given complex better remove make tree assymetrical improves utilization leaf reduces average rank tree switch tree traversal order traversal also result better utilization leaf optimizes tree merging ordering,,
48,ef40fac82beb9e360c1af9e589658b61525ff45f,van Gotovchits <ivg@ieee.org>, 2021-03-01 16:35:37 -0500, , hush bil lifter bil 1279 quick fix prevents bil lifter interpreting absence bil absence effect root problem chose empty value bil domain easy confuse absence effect representable bil effect change domain break interface better solution might changing domain bil.code slot introduced recently yet stable api meantime current solution hotfix,,
49,40efc122b6fc3bb9de45aa482372437cd70d731d,van Gotovchits <ivg@ieee.org>, 2021-02-26 15:01:09 -0500, , move centralized uniform path handling remove dead code 1278 introduction  change store configuration read data cache instead previous approach plugin receiving location via configure script rely central location module bap main library addition introduce user specific location configuration file read data user specific file unlike system wide overwritten bap installation especially useful developing lifter primus lisp bad carefully written lifter overwritten removed opam update configuring bap taste feel e.g. getting annoyed syntax want intel one want update configuration file update configuration file location  configuration file stored two folder system wide prefix etc bap host site package specific configuration user specific location follows xdg base directory specification either xdg_config_home bap xdg_config_home set home .config bap locactions folder hold arbitrary number configuration file file read applied alphabetical order first read file precedence case define value parameter syntax common ini style syntax comment starting line shall form parameter value parameter match name bap command line parameter leading removed e.g. suppose want switch intel syntax instead att x86 disassembler corresponding command line parameter llvm x86 syntax create file .config bap folder following content  llvm x86 syntax intel  filename could anything create separate file per feature one big file configuration system also integrated cache subsystem change configuration automatically detected reflected cache digest read data  read data includes various specification signature like lisp semantics definition stub policy specification api file byteweight signature also store two location system wide prefix share bap data shipped bap installed user specific xdg_data_home default home .local share bap shared switch never touched bap installation location lisp file  primus lisp library stored three place prefix share bap primus lisp prefix share bap primus site lisp xdg_data_home bap primus lisp xdg_data_home default home .local share prefix share bap primus lisp store standard library language specific definition primus lisp shall touched user prefix share bap primus site lisp folder folder library installed provided bap package approach follows convention lisp python script language commmunities finally location local user specific lisp library xdg_data_home bap primus lisp store lisp code common library expect never touched bap installation script forget current folder also search path well add path using primus lisp add add folder search path together configuration file easy handle path e.g. adding lisp paths.conf file .config bap following content conf primus lisp add home user share primus lisp  cache location  cache location really changed made accessible would like store bap specific non essential runtime file use even better use cache facility regular library breaking change  interface broken file changed location everything stored bap folder organized example bap api stored bap api folder byteweight stub signature stored bap signature also byteweight signature renamed byteweight.zip old sigs.zip update pas seamless handled configuation installation script updated separately,,
50,446c17b47f722811fd0c97045f568a7747afd79d,van Gotovchits <ivg@ieee.org>, 2021-02-24 12:07:44 -0500, , enables writing program semantics lifting primus lisp 1277 introduction  possible specify program semantics including semantics instruction aka lifter even semantics whole program primus lisp essentially primus lisp program could compiled program value i.e. core theory term main motivation work writing lifter stub primus lisp significantly reduces effort wrt writing lifter directly ocaml example took day write riscv lifter primus lisp upcoming feature seamlessly integrated knowledge base make available new architecture extending lifter existing architecture whenever semantics basic instruction requested corresponding lisp definition name match opcode name prefixed opcode encoding corresponding number argument sought found reified core theory term primus lisp language underwent deep change meta language writing program write program lisp nature make ideal choice writing lifter thanks mono iconic representation host target language primus lisp meta compiler interpreter partially evaluates primus lisp program refinement possible result specialized minimal code illustrate let consider following example assuming stored demo.lisp file located current folder lisp defun example1 set  since value statically known reify efficient representation  bap show example1 primus lisp load demo tarmv5 obap bil example1     still produce assignment target armv5 tell register let consider example compute input statically lisp defun example2 set  refied  bap show example2 primus lisp load demo tarmv5 obap bil example2     meta compiler support partial computation form possible use let form lexical dynamic scoping define helper function macro e.g.  defun example3 let average set average defun average   reified  bap show example3 primus lisp load demo tarmv5 obap bil example3  0x28   mono iconic representation possible value primus lisp expression longer word program term represented knowledge base value class value also known bap.std insn.t coincidentally type value expected provided lifter,,
51,eab07d41ab7a0791eb0075e25054544f7949e0c4,van Gotovchits <ivg@ieee.org>, 2021-02-23 14:10:05 -0500, , add target parameter disassemble compare command 1276 target command line parameter specializes refines target architecture disassembled binary order specify abi fabi target specific parameter specified target specific binarie target ignored incompatible error occur example arm linux gnueabi echo binary testsuite bin binary built bap armv5 refine adding application profile floating point see bap list target full list target  bap bin arm linux gnueabi echo target armv7  time try specify amd64 even arm derived armv5 get error e.g.  bap bin arm linux gnueabi echo target armv7 failed build project derived target bap armv5 incompatible user specified target bap armv7 ,,
52,52effe7a87e399b2811183e85e9527547cca4584,van Gotovchits <ivg@ieee.org>, 2021-02-22 16:09:44 -0500,1227, overhaul target value abstraction introduces role 1275 continuation 1225 1226 1227 series change focused substituting old inextensible arch.t abstraction new theory.target.t representation episode instigated upcoming implementation riscv target since riscv target supported arch.t became good test new theory.target.t abstraction riscv worked showed still lot code depends arch.t importantly primus fully dependent arch.t main issue theory.target.t provide mean encode register class prevented using everywhere primus e.g. need know register stack pointer order setup stack implement introduce new abstraction called _role_ _role_ could generally applied entity far talking role register various target target definiton acccepts regs paramater take register file specification register assigned one role e.g. register file specification 8086 ocaml  general integer main index segment stack_pointer untyped reg r16 frame_pointer untyped reg r16 role.index untyped index role.segment untyped segment status untyped flag integer untyped reg bool reg bool reg bool reg bool reg bool reg bool   i.e. assign set role set register also two new function enable querying register file target register fulfill one role whilst publish limited number well known blessed role module role could added user need example code snippet two non standard role specific x86 architecture role.index role.segment role drop dependency target place make sense still left x86 target specific plugins obviously independent newly added architecture,,
53,dbf2e06f0f6ac9ed86c407207379f18f9064de4a,van Gotovchits <ivg@ieee.org>, 2021-02-22 16:09:16 -0500, , update raw loader enable better support target 1274 add new bit option turn arch parameter string enable specifying arbitrary architecture,,
54,a782b4c8b6ca89965b03db0e05571ae3a5235969,van Gotovchits <ivg@ieee.org>, 2021-02-22 16:08:58 -0500, , rewrite read symbol plugin enable multiple file support 1273 new implementation directly knowledge base able provide information several file different information different unit input format permissive possible specify function start function name use old block format entry denotes basic block see bap read symbol help bap help input format flag description,,
55,b7fd4890ff8ef5e220ee38fbd35aef1f66677fd9,van Gotovchits <ivg@ieee.org>, 2021-02-22 16:08:33 -0500,1178, fix two bug memory module 1272 first bug breaking raw loader least bug introduced 1178 memory.view optimization check missed allowed creation invalid view invalid view later caught assertion check easily reproduced bap bin loader raw e.g.  assert_failure bap_memory.ml raised file bap_memory.ml line character ncalled file bap_memory.ml line 196 character ncalled file bap_memory.ml line 410 character ncalled file bap_trie.ml line character ncalled file bap_trie.ml line character 130 ncalled file line character ncalled file line 129 character ncalled file line character ncalled file src sequence.ml line 123 character ncalled file inlined line character 116 ncalled file line character 146 ...  second bug probably time library concern memory.find_map memory.find_if talking optional word_size parameter ignored function always iterating byte,,
56,155a3d17f5d6a58da9bacb207a41e4835234920e,van Gotovchits <ivg@ieee.org>, 2021-01-29 16:48:29 -0500, , add primus lisp fronted 1268 implement basic operation implement primus semantics primitive publishes semantics module primitive still published pass target program reification add top value experimental match module draft new implementation lisp semantics new implementation tightly integrated knowledge base totally rely promise provide semantics lisp definition well lisp primitive anymore special type semantics lisp program instead value used class extended value slot effect value drop longer necessary target lisp program implement equality primus lisp program source right equality purely textual equality implement semantics promise provides reification lisp publishes minimal interface publishes kb.value.resort function prevents bir reifier generating empty graph fix lisp lifter integrates semantic primitive main lisp module implement primitive far complete set though add primitive mvp lisp compiler rectifies interface little bit introduces helper add documentation prettifies interface bit optimizes primus lisp semantics computation removing request compute name unit lisp unit help since name computation involves stub resolver turn requires semantics nearby instruction  general rel symbolizer shall rewritten easy break,,
57,aacced77852a3e72edfe16adc88e35c6b0427a80,van Gotovchits <ivg@ieee.org>, 2021-01-13 18:25:48 -0500, , introduces bil code slot convenience function 1266 publishes blk.from_insns function lifting block instruction function translate sequence machine instruction represent basic block preserve much possible original structure trying keep minimum number generated blks new special encoding whenever possible enables representation instruction bil program used bil language specifying semantics instruction may also represent instruction using bil rule knowledge base adopted split accordingly rule old lifter produce bil code separated rule computes semantics bil code possible get easily insn.t value bil even bil sub program term e.g. get semantics bil create new program object set bil code ocaml let create_insn bil fun obj kb.provide bil.code obj bil fun obj  run computation example bap toplevel knowledge base e.g. ocaml let insn_of_bil bil insn toplevel.eval create_insn bil  get insn use blk.from_insn function full path bil bir  let bir_of_bil blk term list blk.from_insn insn_of_bil create_insn bil  add sugar term building function possible pas part compound term create function e.g.  sub.create blks blk.create defs ...   ,,
58,50c6781f9385e22ca83fed16780efd1e0fe56025,van Gotovchits <ivg@ieee.org>, 2021-01-08 11:51:30 -0500, , introduces bil special encoding publishes bil parser 1265 possible use bil special statement encode arbitrary semantics payload still stored string specially encoded printed kind payload represented attribute e.g. bil.call used encode call bil.intrinsic used encode intrinsics core theory bil parser enables reflection bil program term moved library made available bil.theory module might later extend module actual bil theory though already could instantiated via theory.instance function,,
59,23f5bf7a1e480ae063e38e9284ef04dd2b6d7804,van Gotovchits <ivg@ieee.org>, 2021-01-08 09:23:28 -0500,2391, fix coff section 1263 fix coff section missing non executable section coff file thanks todamon reversingwithme noticing hush non executable section object file caveat object file data including .data .bss .rdata etc section zero address .text section load together probably expected loader set address need information handle correctly starter disabling data section object file implement temporary workaround enable macos build look like take bit time fix issue upstream remove two line soon http github.com action virtual environment issue 2391 resolved,,
60,b46099b6fdd88555034c359337eeef7dff64d8c9,van Gotovchits <ivg@ieee.org>, 2021-01-04 17:20:58 -0500,2322, start 2.3.0 release cycle 1262 start 2.3.0 release cycle update version configuration tool bump copyright date also normalizes mit license make recognizable github update release.sh script release automation fix build macos add usr local bin 2to3 workaround suggested http github.com action virtual environment issue 2322,,
61,b3b5338bc8f0671a4d13920e3343ccc7570967df,van Gotovchits <ivg@ieee.org>, 2020-12-08 13:08:22 -0500, , bump version update changelog 1259,,
62,da7820e662b081933c375f7ee3c609060b366de3,van Gotovchits <ivg@ieee.org>, 2020-12-08 13:05:54 -0500, , fix nightly test 1258 test requiring presence radare sole purpose disabling radare therefore failing since excluded bap radare2 default distribution bap solution simple install bap radare nice side effect also test radare2 properly installed,,
63,6a06cc9031117aa2393271398fad49d24a5899c8,van Gotovchits <ivg@ieee.org>, 2020-12-08 12:34:32 -0500, , access specification bil lifter 1256 far using future interface work properly several file lifted row instead 1253 find satisfiable fix 1216,,
64,17186a9bfad95aed4ce4ba86f48d6c900f357970,yan Goulden <percontation@gmail.com>, 2020-12-08 06:08:22 -0800, , legacy floating point lifter 1255 public release legacy floating point lifter portion code formerly forallsecure proprietary hereby released term mit license disable x87 rounding compatible bap fpu emu fixup public release legacy floating point lifter remove warning update testsuite include floating point test authored ivg ivg ieee.org,,
65,8ee3c2bf62a0449f257beb26d53bb8ad006a2846,van Gotovchits <ivg@ieee.org>, 2020-12-02 15:19:56 -0500, , enables multiple stub region stub resolver 1252 far assuming one section stub gcc fcf protection scheme use .plt.sec _addition_ .plt represent secured stub therefore need keep track upgraded representation simple interval interval tree addition added .plt.sec known name stub,,
66,4b26c049520bb3a4a3f1b2151ef4b835feab073e,van Gotovchits <ivg@ieee.org>, 2020-12-02 09:17:44 -0500,1223, fix callgraph formation procedure primus lisp typechecker 1251 call graph correctly closed unreachable component resulted missing type error typing information node never reached exit node fix 1223,,
67,d5f4a3c005feeea32f031149b38c6992f4cf8bb3,van Gotovchits <ivg@ieee.org>, 2020-11-24 16:49:56 -0500, , update bapdoc latest change core_kernel 1249 enables back hidden unix module,,
68,68d34daa24569bfad80cee9e9c5c45196ed3942c,van Gotovchits <ivg@ieee.org>, 2020-11-24 16:37:31 -0500, , protects symbolic executor segfaults setting memory input 1246 protects symbolic executor segfaults setting memory input fail memory location explicitly set symbolic register fly optimizes primus memory operation memory operation checking layering information read write operation ensure address accessed properly mapped slow linear number layer however address already value mapping mean checked writable readable omit layer check latter needed address accessed first time,,
69,318842c18fa787b3843d5c5abc0b26e88684433a,van Gotovchits <ivg@ieee.org>, 2020-11-24 16:09:47 -0500, , fix broken release workflow 1248 got misindented,,
70,7bb41c66b775d81cc882071f0df3aa6d32d34ef2,van Gotovchits <ivg@ieee.org>, 2020-11-24 15:31:47 -0500, , add testing repository several action 1247 since depending master version ppx_bap package available testing repository also enables demand build release action,,
71,e8d63c00f6a0af02ded8bf6523b82f5055479adb,van Gotovchits <ivg@ieee.org>, 2020-11-20 13:48:30 -0500, , propagates stub resolver result program term attribute 1245 stub resolver setting sub.stub attribute subroutine resolved stub done part abi pas relinks stub implementation,,
72,1577b865bdd522f8be6b35b3ca3aa5c2b0cfe748,van Gotovchits <ivg@ieee.org>, 2020-11-20 13:47:57 -0500,1076, tweak taint engine partially rewrite taint 1244 enables intermachine communication add new interface machine.other enables access local state machine possible pry others local state even change carefuly step towards solution 1076 issue come tweak taint engine partially rewrite taint resolve 1076 enables better handling may analysis analysis require analyzing path taint engine track taint object globally across machine unlike previously machine set taint object taint object identifier specific machine enables new implementation taint garbage collection refinement taint finalize observation folding machine check taint unreachable machine observation triggered live true taint becomes unreachable current machine still reachable others live false come existence machine system terminates approach enables may must analysis track liveness per machine per system i.e. path linearity constraint garbage collector run machine instruction prevent undesired interference observation also change semantics sanitize operation object sanitized longer tracked removed tracker i.e. detached value address detached selected value,,
73,42bd9e311ea06646bc6610c4ab6d54c1d2fd6bb4,van Gotovchits <ivg@ieee.org>, 2020-11-20 13:47:28 -0500,1076, enables intermachine communication 1243 add new interface machine.other enables access local state machine possible pry others local state even change carefuly step towards solution 1076 issue come,,
74,bf954d156ad6aed833c74ef2de46f7e72b98fad0,van Gotovchits <ivg@ieee.org>, 2020-11-17 16:19:11 -0500, , fix sign handling atoi stub 1240,,
75,2b911c35384106f0908737e6053398c39d256bb8,van Gotovchits <ivg@ieee.org>, 2020-11-17 16:18:58 -0500, , make taint attached observation taint introduction 1241 observation missing taint introduced new_direct new_indirect operator although known long time behavior considered feature rather bug finally decided rectify post observation new taint introduced make behavior match semantics described low level term also make much easier debug taint related issue,,
76,f11993001f2eae847030e069d39bcfd93a382949,van Gotovchits <ivg@ieee.org>, 2020-11-17 13:03:43 -0500, , set macos specific environemnt variable using diffrent syntax 1242 old one disabled github due security issue,,
77,b6520b847e88944d4d060d951aa0117a27d07331,van Gotovchits <ivg@ieee.org>, 2020-11-13 12:58:34 -0500, , fix bapbuild removing longer necessary predicate 1239 apparently predicate longer needed mishandled ppx_bap probably also inherit meta magic ppx_jane note predicate type nonrec deriving longer work,,
78,acf162d53af0baeebe012bba9ccacae369eff686,van Gotovchits <ivg@ieee.org>, 2020-11-12 15:24:48 -0500, , fix improper project computation 1238 fix bug reported jtpaash nicely reproducible demo bug introduced switched lazy computation symtab program data structure computation delayed could run different state disassembly main culprit computation forgetting properly open current package able access object currently disassembled program instead picking object lastly disassembled program fortunately fix obvious simple,,
79,95307f780283ad0557b2d8d80b506c3b484e165e,van Gotovchits <ivg@ieee.org>, 2020-11-12 13:44:48 -0500, , initializes default policy primus taint analyzer 1237 fix 1144. add three component policy selection one selects policy selected user via command line another two per policy support base taint analyzer system leaving policy selection unspecified taint analyzer system selects policy based command line parameter teh exact taint analyzer relying exact taint propagation,,
80,a7766307021506a2c2d5eca4da36c50b956e2c8a,van Gotovchits <ivg@ieee.org>, 2020-11-10 16:15:18 -0500,1116, fix warning introduced 1116 1236 missed deprecation warning 1116. dealing sexp_ type easy deal another class warning deprecation due introduction uuid identifier witnessing binary representation idea good novel bap always uuids however right resolving issue hushing warning plan address nearest future next release,,
81,9df2884d6e846d6e945db2de32458801447d4d66,van Gotovchits <ivg@ieee.org>, 2020-11-10 14:48:29 -0500,1145, print code region use section name 1235 fix 1145 make disassembly printing robust line disassembler implementation background dasm specified iterating section print subroutine belong section since section general overlap duplicating output approach followed old implementation disassembler indeed disassembling section however point time switched code region abstraction code region overlap guaranteed contain code time update print plugin also iterate code region still use section name skip region section make bogus name make printing resilent various custom loader might provide sectioning information,,
82,874454e38952d581b7dfa38840e46b89ad3d18ac,van Gotovchits <ivg@ieee.org>, 2020-11-10 08:41:48 -0500, , add binding operator monad library 1234 instead extending syntax module monad.s monad.s2 interface break interface add new module let includes binding operator monadic applicative interface let let correspondingly mean order able use monadic operator monad example need open either example example.let first write  open example.let let example let compute let compute   instead old style fun  open example.syntax let example compute fun compute fun   parallel binding provided via operator possible write  open example.let let example let compute compute example.return ,,
83,36285d6858d350a0be6b365cc73cf6dc8495b5c5,ark Laws <mdl@60hz.org>, 2020-11-10 03:44:16 +0900, ," update ocaml 10,11 drop 4.07 switch core_kernel v0.14 1116 update change newest version bap address ppx_js_style issue created new package ppx_bap analog ppx_jane set rewriter tha obviously excludes ppx_js_style well bunch rewriter want need see http github.com ppx_bap package detail also updated opam opam file used fetch bap dependency added opam repo context build dev repo action fetch ppx_bap package yet upstream opam repository follow soon update ocaml version action support 4.08 4.11 bound including drop 4.07 bump upper bound instead building version think sufficient build boundary version i.e. 4.08 4.11. save quota waiting time authored ivg ivg ieee.org",,
84,447f44bf9fa28b1364e0ad3252688b7b560ace84,van Gotovchits <ivg@ieee.org>, 2020-11-06 15:51:23 -0500, , fix function publishes fork switch 1233 name provider observation diverged resulted bug fix 1232 also publishes machine.fork aka machine fork machine.switch aka machine switch observation due user request,,
85,32391a7444f4c66d9f9af47dee9724564d22b3be,hosphorus <steepout@qq.com>, 2020-11-03 21:43:40 +0800, , enables arm thumb thumb2 interworking 1178 full implementation arm thumb add arch check patch cmn instruction removed debug output instruction magic word bit renamed grps new resolution fix usage assignment fix blx top level exception handling integrates thumb plugin bap build system right put thumb separate plugin probably move arm plugin release reason logical separate plugin let move small step recommended use omake rapid build http github.com bap wiki experimental omake backend remove exception implement proper plugin registration remove exception use general indicate programmer error turned everything failwith eventually get rid lifter using encoding instead architecture ensures called proper time also make loader invocation little bit straightforward finally implement proper plugin extension registration shall register lifter get permission reimplements memory theory rewrote memory operation enables predicate disassembler switched disassembler switched may predicate set correctly ideally track predicate per disassembler per state instead resetting every switch benchmarking show significant performance impact keep simple also fix bug with_preds function condition flipped i.e. predicate reset predicate drop way around stop arm lifter lifting unknown instruction producing special fix arm target encoding computation fix disassembler enable interworking developed thumb core rewrote branch start move instruction finish mov remove old dsl harnessing add cmpi instruction lifter echo complete propagates encoding source destination preserve state memory seeking next encoding allows repetitive symtab entry arm thumb decoder arm thumb encoding detector assuming address occurs symbol table fact hold new implementation accepts repetitive symbol mark symbol thumb symbol occured least one odd value allows llvm loader output information zero size symbol provide zero sized symbol chunk constraint shall extended piece information named_symbol symbol_value add missing instruction enables thumb main libc_start_main fixed optimized instruction test passing fix flag computation mov instruction tweak multi mem representation hoist base loop readable probably optimal add insn.with_basic function add instruction want miss semantics information provided machine code level e.g. rely call property usually compute well property insn thumb lifter tweak bil_lifter error case machine code instruction information lifter result return empty instruction bil lifter semantics available prevent conflict property used work bil lifter one longer good idea fix systemz lifter previously accidentaly getting information assembler string property bil lifter add missing state switch disassembly start remove emission non functional symbol llvm backend temporary solution later ready non functional symbol extend scheme add symbol type enable ignore data symbol treat function case constant island marked arm code falling thumb ended conflict enables passing attribute backend need enable thumb2 form armv7 target preliminary support thumb2 armv7 t32 encoding assumes interworking present odd address probably also add command line argument control well test file elf add arm interworking option option override interworking automatic detection mechanism force one encoding prevents radare2 providing root arm target radare2 messing disassembly interworking present therefore disable target arm little bit overkill better disabling radare2 alltogether detecting interworking comming play rescans already scanned memory recover cross reference debt cross section destination may reference section already scanned therefore order disassemble kind destination revisit disassemble previosly disassembled section come performance price may try find optimal solution add couple bil simplification improves corrects thumb branch branch handling mode switching blx case destination could resolved static time also quite fix well new instruction handled preserve base memory searching encoding fix bug accidentally narrowing memory searching task decoding add heuristic relocation symbolizer search reference plt follows jump plt tweak stop promise trigger non empty property tweak change semantics knowledge base preventing triggering property already computed certain cituations may signficantly improve performance i.e. value property already known want trigger expensive computation recompute p.s honest long time impression work bit surprised imagination use feature reduce number unecessary call scoped object fact enables hoist loop invariant loop optimizes memory.view function small improves memory.view function introduces memory.view_exn function optimized version use or_error validation function instead relies exception else bound checking ideally optimized function one allocation returned value type memory.t optimizes basic level disassembler several micro optimization first represent assembler string byte minimize byte string transformation second collect predicate using fold instead filter map reduces number allocation finally use new memory.view_exn function reduce number allocation even remove classification already disassembled memory yet another small optimization fix performance degradation finally found culprit problem building graph subroutine clean slate forgetting previously built graph solve problem extend interface explore function explore several start preserving state bap back 2.1 speed maybe even faster hoist unit creation classification loop safely assume chunk memory belongs unit hoist unit disassemble function justification single piece memory always belong unit add memory slot optimizes stub resolver introduces memory memmap.t knowledge base accessible via computing stub stub resolver plugin also fix 1125 remove arch query mips relocatable plugins remove arch query symbolizer remove subroutine valid rule probably bad idea deduce simple property complex one every time want know sequence byte valid instruction compute function start remove project signal relocatable symbolizer big performance impact least code cleaner easier debug since reference knowledge base disassembles section reverse order address assumption cross section reference point backwards point forward big difference final optimization step store code region authored ivg ivg ieee.org,,
86,25d1eb6cfc13ff1e61ecead8a2ecfca7dc76dff8,van Gotovchits <ivg@ieee.org>, 2020-10-21 09:36:58 -0400,1218, enables poorman submodules testsuite 1231 since reliquish power true submodules 1218 prevent opam recursively checkout submodules including pre recorded trace package installation longer able upgrade testsuite preparation upcomming without breaking existing test word need submodules back restores instead relying true submodules record revision makefile take care checking revision work much done testsuite repo i.e. checking revision idea need extend change testsuite bap repository e.g. added new feature would like test create branch bap testsuite change reference sha bap repository makefile change accepted corresponding branch testsuite repository could also merged preserving commit shas voila basically submodules instead creating commit change submodule need change makefile,,
87,9a9ad742895853ea15171a1b6976cac275d78f01,van Gotovchits <ivg@ieee.org>, 2020-10-19 18:02:44 -0400, , add proper handling unitialized memory 1230 fix bug function triggered called current memory descriptor properly initialized instead creating new empty state silently ignoring map operation bug also affecting operation behavior i.e. ignoring probably fine new implementation fix update function used map del prevent misuse function,,
88,d23861cafbd4d58682731895888f281f3b576090,van Gotovchits <ivg@ieee.org>, 2020-10-06 16:22:38 -0400, , upgrade bap llvm 1229 breaking change stick else macro mostly coff loader affected note using llvm http apt.llvm.org bionic source repository could broken missing library static linking order use pre built binary use dynamic linking mode e.g.  configure omake llvm version llvm config llvm config disable llvm static  hope away official build llvm,,
89,2faaa426d5c058ddb5e9551e55b424e160547f9a,van Gotovchits <ivg@ieee.org>, 2020-10-05 19:12:15 -0400, , overhaul target architecture abstraction 1227 episode liberate bap bap objdump bond arch.t representation also add systemz lifter demonstration purpose course lifter minimal far usable serf well didactic purpose interface bap command preserved extended command line option provide great deal flexibility possible specify target encoding possible pas option directly backend useful disassembling target yet known bap excerpt bap man page see bap help  setting architechture target architecture controlled several group option used together arch target encoding triple backend cpu bit order arch option provides least control easiest use relies dependency injection mechanism let target support package plugins implement support given architecture best guess target encoding match provided name use common name architecture work use bit order option give hint target support package default little correspondingly target encoding provides precise control selection target encoding used represent machine instruction encoding field omitted deduced target use bap list target bap list encoding get list supported target encoding respectivly finally triple backend cpu ... group option provides full control disassembler backend bypass dependency injection mechanism pas specified option directly corresponding backends enables disassembling target encoding yet supported bap meaning option totally depend selected backend passed corresponding argument function bit order default little corresondingly used specify number bit target address order byte word group option useful implementation debugging new target thus reserved expert note group used semantics instruction provided commonly requires target specification ,,
90,aae5c10556fd3a54a84c6a4c11e35dd087d2c2b7,van Gotovchits <ivg@ieee.org>, 2020-10-01 13:34:12 -0400, , overhaul target architecture abstraction 1226 enables interworking disassembler driver interworking  interworking feature architecture enables mixing several instruction set compilation unit example arm thumb interworking branch trying add done  add switch primitive basic interface change dissassembler current disassembling state bold move conseqeuences carefully reviewed attribute destination disassembler driver state architecture call switch every time going disassemble next chunk memory default rule extends unit architecture instruction unit disabled arm thumb overriden arm plugin following behavior arm unit file file symbol table provide information based last bit symbol table todo also check abi otherwise propagate unit arch instruction done  next arm lifter shall provide promise compute destination require destination really want compute provide destination architecture based source encoding safely examine representation instruction since already lifted moment flattens target interface publishes enum module also make enum strict checking element indeed member set element preventing double declaration add llvm decode x86 drop dependency arch disassembler driver overhaul target architecture abstraction second patch series 1225 completely got rid arch.t dependency disassembler engine finally open path seamless integration target representable arch.t achieve introduced proper dependency injection disassembler driver longer responsible creating llvm disassembler instead plugin implement target aka target support package create disassembler full control parameter choose backend specify cpu detail encoding encoding new abstraction knowledge base break tight connection target way program target encoded unlike target property unit code encoding associated program i.e. property instruction enables target context dependent encoding arm thumb mode mips16e binary encoding well pave road non binary encoding architecture e.g. text assembly also may several encoding att intel syntax base branch enable interworking 1188 branch fully superseeds includes since encoding made much natural still highlty untested work real thumb binary get back merge 1178 another big update disassembler backend responsible translating bit machine instruction longer required implemented possible write backends disassemblers pure ocaml e.g. support pic backend interface pretty low level might provide higher level interface later see interface detailed comment finally rectify interface introduced previous flatten hierarchy newly introduced core theory abtractions i.e. instead also made enum module public introduced enumerated type built knowledge.value next episode series gradually remove arch.t bap component clean newly introduced interface,,
91,00950469e517db76b86ef3fce15980380f3c29f0,vg <ivg@ieee.org>, 2020-09-24 13:37:26 -0400, , overhaul target architecture abstraction introduces theory.target.t superseeds bap.std.arch.t old representation suffered problem inherited llvm main issue arch.t extensible order add new architecture bap.std code shall changed backward compatibility breaking manner arch.t unable represent whole variety computing device especially relevant micro controller avr pic iot device currently focusing finally arch.t precise enough capture information necessary code generation new venue currently exploring first attempt really work introduced arch sub property core theory unit class 1119. problem approach stringly typed interface arch represented simple string addition proposed property werent able describe uncommon architecture finally awkward use field optional good default second attempt split several pull request first one introduce theory.target.t still keep arch.t alive i.e. used internal external component bap ensure switching target.t break existing code consequent pull request gradually deprecated function use arch.t switch target.t everywhere important switch affect disassembler decoder framework currently still stuck arch.t clear work finished bap 3.0 maybe even thereafter arch.t still work used work code break require update however newly added architecture avr pic i.e. could represented arch.t available code still relies addition theory.target.t add abstraction convenience function e.g. project.empty completely new interface project.input.t generation make easier create project string custom data e.g.  also add source language compiler abstraction knowledge base core theory abstraction together target describe full cycle program transformation using compiler source code given language program specified target way around target abstraction come data type describe various aspect target system including file format abi floating point abi fabi endianness longer limited binary choice little big endianness extensible data type storing target specific option finally target formed hierarchy family help controlling vast zoo computer architecture device target.t abstract data type self describing includes enough information describes detail architecture also provide four library module arm mips powerpc x86 expose currenlty declared target llvm backend yet precise enough recongize many supported target analysis right infer target binary add target option next switch target.t everywhere usual comment question review welcome,,
92,543e6842b21f57eee81e4bd5704f4ce4383545a7,vg <ivg@ieee.org>, 2020-09-24 13:35:43 -0400, , real name sexp serialization,,
93,7ddeba07fbbc5e4473b3c6f55d76ce5d833564e0,vg <ivg@ieee.org>, 2020-09-24 13:34:20 -0400, , implement bin_io sexp protocol ogre doc sexp using ogre syntax deriviation representation,,
94,6bcf3c4edd921dd16899c8ad9bf700cd72219266,vg <ivg@ieee.org>, 2020-09-24 13:31:02 -0400, , optimizes merge function ogre document new implementation untouch document one empty document document different non trivial take larger one update smaller one also faster end make merge time faster certain scenario,,
95,4eb72ae2c15b2929dbe1b964364e7e8f1490b908,yan Goulden <percontation@gmail.com>, 2020-09-24 08:32:24 -0700, , fix pcmp instruction 1222 typo disassembler,,
96,5f1c142ea082a0812bc738e8f09b0aff34694aa2,van Gotovchits <ivg@ieee.org>, 2020-09-22 16:23:27 -0400, , fix trivial typo symbolic fread implementation 1224 non trivial bug detected type checker tracked 1223,,
97,0daabc7437d9604023771cc81556ff94a8ddc019,van Gotovchits <ivg@ieee.org>, 2020-09-16 19:48:58 -0400, , switch fowler noll hash algorithm hashing name 1221 previous algorithm bad collision rate especially small string new one much better tested large dictionary english word password guaranteed collide small string warning change hash function break knowledge base format bap cache clean update,,
98,6c50124b378c3a03b5af0a737f12296fcaccf66a,van Gotovchits <ivg@ieee.org>, 2020-09-15 12:38:41 -0400, , remove section symbol elf 1220 remove extra llvm opam depext already llvm installed reason install default llvm also enables option configure omake though careful many option ignored either script oasis omake intergration use new feature immediately build test action enable test specify llvm version ignored see next commit pull llvm configuration setup omake much better specifying manually also switch back static linking llvm omake used disables emission section file symbol elf section symbol confuse symbolization procedure end get symbol named .text instead real name prevent emitting anymore relocation information symbol section file object non function commit fix nightly regression test underlying issue triggered modern llvm e.g. observable llvm definitely triggered sure version,,
99,23b3443fa94bf35e71a1c38a809b420a892b5fc7,van Gotovchits <ivg@ieee.org>, 2020-09-14 09:02:49 -0400, , fix implementation strncasecmp strcmp model 1219 also publishes ascii module apparently included posix thanks dtpeters reporting,,
100,dc8403ea32062bd23f6614d925486257edf7343d,van Gotovchits <ivg@ieee.org>, 2020-09-11 15:34:09 -0400, , remove testsuite submodule 1218 main reason opam recursively initializes submodules installs bap source given testsuite binary along trace sum 5gb space lead disk space error build docker easiest solution would remove testsuite main repo moreover submodule really help mostly nuisance proposed solution clone testsuite potentially select branch commit test script basically git submodules control,,
101,168ca3047e9e5909d16441d84b443dcc8f2db74d,van Gotovchits <ivg@ieee.org>, 2020-09-10 18:21:17 -0400,1168, knowledge base improvement 1217 knowledge base improvement brings improvement bap summarized following demo http asciinema.org 358996 important highlight repl querying modifying knowledge base portable efficient representation knowledge base repl  repl using lineoise feature completion hit tab context dependent hint print grammar expects type course extensible i.e. possible implement command call repl script mode well direct input command command line also supported efficient representation  representation efficient improvement space portable across different version bap representation versioned enable speed changed representation knowledge.name interned form using hash function low probablility collision much like polymoprhic variant ocaml except use bit instead 31. course hash collision captured properly reported also slightly improved perfomance memory footprint bap general name used everywhere bap variable sort etc although representation using bin_prot designed enable interaction language well extensibility property stored len payload name property interned len length payload skipped supported parser payload string byte format specific property serializer may include version tag optimized loading storing  loading storing cache made via memory mapping mean knowledge base regular file since information stored knowledge base loading enough get project make loading project x20 x25 faster affect loading cache loading specified knowledge base interaction cache  cache along data store knowledge base per file indexed digest input file parameter affect disassembly thing changed result disassembly also stored knowledge base previously stored separate file project specified project file exist file loaded cache enables fast extraction file cache e.g.  bap bin project ls.proj update  load bin cache immediately store ls.proj provided ls.proj exist lazy project  project data structure includes lot fat data representation whole program cfg symtab includes cfg per function program data structure information take lot space disk ram computed even never used moreover easily computatble much efficient representation address made abovementioned data structure lazy i.e. use program computed save space time lot new api  following api added project.state represents disassembled binary writing analysis minor tweak  tweak pretty printing representation knowledge bir bil much readable concise properly indented bug fix  fix 1216 fix 1169 fix 1168 enables subroutine search address name subroutine name disables bil verification action changed binary representation trace longer valid technical reason create new test near future solution temporary disable,,
102,c93b5d8216a4522f398031c3a2b81e2235c41128,itoleg <forown@yandex.ru>, 2020-08-26 14:38:53 -0400,1136, optimizes functional test 1200 optimizes functional test remove expect test case add couple primitive match output command match bap bir find main function according pattern  match file bir sub main pas test file default fail test file   match bap ouptut version option  match_output bap version error fail test pas test   check string found output  find_all file bir line test  fix http github.com bap issue 1136 optimizes update testsuite update testsuite update testsuite update testsuite,,
103,cc739150fbe5fe75c74d97332608d420283076e3,van Gotovchits <ivg@ieee.org>, 2020-08-26 09:11:09 -0400, , enables enumeration object knowledge base 1212 add object function return sequence object knowledge base,,
104,ba8622c79d73de10d2b1633f3d1311131d6af75d,itoleg <forown@yandex.ru>, 2020-08-21 16:38:00 -0400, , add action release automatization 1210 add action release automatization trying different ready use action think found best one far good thing action allows upload many file using file pattern generates changelog automatically rewrite release tag need somehow query github delete previous release proposal workflow run action week bap ready next release rename current tag v2.2.0 alpha v2.2.0 drop prerelease checkbox resolve codasy issue ubuntu 18.04 instead ubuntu latest,,
105,7cc4c6c9337ad6f8439a4cd47c25ba58e99e205d,van Gotovchits <ivg@ieee.org>, 2020-08-21 13:41:27 -0400,1195, redirects channel radare2 spawned 1205 experience random failure arm symexec crc32 test appears like race condition bap tcl expect framework look like symbolic executor able hack program emits access granted token expect command either seeing able stop bap strong evidence anything radare2 internal testing bisecting show issue likelihood raised 1195 merged redirect channel much consistent behavior test given still explanation happening arm test showing problem therefore may fix nothing still however good idea redirect input channel radare2 interactive program may play trick stdin channel,,
106,c8250d32448cb4a3f1b31d71cd4a79203ec4ea63,van Gotovchits <ivg@ieee.org>, 2020-08-21 10:21:57 -0400, , improves symbolization facility 1209 implement support various relocation improves existing enables pas test without relying external symbol tool objdump radare2 branch support plt like relocation well direct call glob_dat relocation fix 1135 plt entry constant folded memory reference analyzed also extended analysis detects stub function support various abi file format powerpc macho store stub directly text section implemented signature matching procedure reliably detect stub also significantly improved support mips sufferening missing function start correspond stubbed function byteweigh unable detect stub addition brings new library called bap_relation bidirectional mapping useful storing addr name mapping ensure bijection library used explicitly implicitly via old symbolizer interface provider symbolic information change prevents symbolizer providing conflicting information may later lead knowledge base conflict also removed far name address translation service recently introduced 1119. ready service yet knowledge base enough rule stored without rule disassemble faster also couple minor fix quality life improvement fix insn.dests domain function better default inspect parameter make glibc runtime heuristic aggressive,,
107,701952014d74b4113c704cdefa2e3ac7d7020f8b,van Gotovchits <ivg@ieee.org>, 2020-08-21 10:21:39 -0400, , reduces default timeout back 1211 look like setting high make symbolic executor slow instead discarding overly big formula spend time solving rather exploring state probably test symbolic executor failing though say sure hard bisect issue given timing significantly non deterministic,,
108,e4914cf3e887860ed1a8332f55a9e78224cc1dc1,itoleg <forown@yandex.ru>, 2020-08-14 13:50:40 -0400, , fix weekly regression test 1208 fix weekly test try install objdump fix minor bug try find objdump find objdump remove matrix.os fix small bug uploads artifact fix bug run schedule,,
109,b9dde97451d575d33b8278702db8a17354b85dfb,itoleg <forown@yandex.ru>, 2020-08-14 09:35:36 -0400, , odoc theme documentation 1207 default odig theme look good odoc theme change,,
110,6ccd3cd7d9792902913acc73d0b7a39a3bb7cd28,itoleg <forown@yandex.ru>, 2020-08-13 10:54:29 -0400, , fix archlinux docker image 1206 added conf radare2 dependency bap installation requires radare2 present system unfortunately opam depext.1.1.3 properly support archlinux install radare2 manually,,
111,6f8b758c090201f15b23a7e150607ade27e85570,itoleg <forown@yandex.ru>, 2020-08-10 14:40:50 -0400,1201, store log file functional test 1202 store log file functional test fix http github.com bap issue 1201 every functional test create folder store log file case fail easier find problem since able find corresponded log file failed test also fix minor bug github action workflow use matrix multiple artifact depending matrix size instead every upload artifact action one artifact per workflow i.e artifact overridden fix problem name artifact according matrix element uploaded e.g log ubuntu 4.07 fix logdir,,
112,59ff73a72bd15194acaa62e928792ba4b649dac0,van Gotovchits <ivg@ieee.org>, 2020-08-10 12:11:40 -0400,1203, prevents bap failing radare2 fails 1204 look like radare2 command line interface varies bit across version certainly really fail radare2 process failed also sometimes radare2 try take isj name file instead file moved forward fix 1203,,
113,c9980f42e6f6b24857dff425282a31d7040ecf91,van Gotovchits <ivg@ieee.org>, 2020-08-07 17:09:26 -0400, , call radare2 directly 1195 call radare2 directly ocaml radare2 library suffering issue easier much efficient call radare2 directly list issue ocaml radare2 leaking file descriptor never closed suboptimal inter process communication get 100 byte ocaml radare make hundred system call lingering process partially fixed fact really need keep process open run radare2 immediately close much easier pas command using command line option xvilka saw fix yet working output channel closed exhausted waitpid return nohang passed also without nohang code sends signal actually unreachable started fixing issue later decided much easier much much efficient call radare2 directly gitoleg please update corresponding opam package drop dependency ocaml radare2 new implementation also lack version check hope new implementation hang even older version radare2 true help 1161. also please add conf radare2 package upstream repo add depenedency bap radare2 please merge fix 1184 replaces radare2 dependency conf radare2 authored gitoleg forown yandex.ru,,
114,53d124444812aea249039ced31c80bd339857297,itoleg <forown@yandex.ru>, 2020-08-06 09:32:16 -0400, , build primus api documentation 1199 build primus api documentation typo fixed fix typo,,
115,7a18ffb4e08ef9dbe0bcbf824a20fa0108df1fcc,van Gotovchits <ivg@ieee.org>, 2020-08-06 08:41:09 -0400, , implement support arm modified immediate constant 1196 surprisingly support explicit shift used,,
116,4d3431145f41ed1b41e959d6c9511885d2b2c84b,van Gotovchits <ivg@ieee.org>, 2020-08-05 12:32:20 -0400, , add specification command 1197 command print ogre specification file also add function enables direct access image loader,,
117,856edb2209c04f2f44b0ecea4f7b97146e268608,van Gotovchits <ivg@ieee.org>, 2020-08-05 12:31:53 -0400,1130, add executable format attribute fix glibc check 1198 using executable glibc runtime check though precise check look name reference insert fix 1130,,
118,27a7a5d5c484e34fc5c455d6ae4505d2e1030458,van Gotovchits <ivg@ieee.org>, 2020-08-05 12:23:21 -0400,1135, renovates llvm backend 1187 fix base calculation elf file compute base difference address loadable code segment offset loadable code segment find section minimal offset value substract address offset macho file relocatable i.e. address compute base vaddr offset elf give result match objdump match radare2 however radare2 seeing symbol really matter coff nothing done sure need anything removed special computation base address elf macho coff tested llvm version believe work 3.4 resolve 1183 authored gitoleg forown yandex.ru enables failing test hope pas update path artifact renovates llvm backend droping support old llvm legacy backends  drop lot old code minus line code thus removing support burden making easier maintain fix upgrade code fix 1166 simplifies implementation  remaining code base significanly simplified dropped separation relocatable non relocatable file removed transformation address llvm backend emit absolute virtual address whole logic transforming llvm view bap image view fit hundred line code instead hundred line spread across file  fix 1183 fix 1189 produce information  relocation information emitted file relocatable also remove ton check preventing backends emitting valuable symbolic information pave road 1135 1161 authored gitoleg forown yandex.ru,,
119,56dfefa72d816b04b1acf4dc330db274ea1379f0,itoleg <forown@yandex.ru>, 2020-08-04 08:58:29 -0400, , fix nightly test 1192 nightly test macos fail next error executing opam depext bap command  error python 3.8 3.8.4 already installed upgrade 3.8.5 run brew upgrade python 3.8  flag opam depext bap update package set case brew becomes aware new available python version opam depext call brew install package depend including python macos gha come preinstalled python 3.8.4 formula problem brew install fails another version formula installed github runner detects non zero exit code whole workflow failed fix problem upgrading installed formula via brew update brew upgrade calling opam depext bap sure system package depend modern version,,
120,c51151fb2a714378b1893843f8765c065288fe8a,itoleg <forown@yandex.ru>, 2020-07-28 08:48:31 -0400, , fix build debian testing 1191 add forgotten yes key apt get install,,
121,4d756d38b4668977614e75dcef49ac3926152ff8,van Gotovchits <ivg@ieee.org>, 2020-07-24 09:59:32 -0400,1179, restores default objdump configuration 1179 1186 default objdump configured use objdump,,
122,f7abf5dd08e6bd0d2aeabe8e71c49a3d1aad11b4,van Gotovchits <ivg@ieee.org>, 2020-07-24 07:56:31 -0400, , make radare2 respect bias 1185 forgot previously subtract bias root provided,,
123,b6f6cc60674b118cc8d0f04c9b27dafe80d3a90e,van Gotovchits <ivg@ieee.org>, 2020-07-23 15:35:21 -0400, , add command line timeout parameter bump default 1182 apparently timeouts specified millisecond default timeout millisecond enough slow macos vms used bump default second also add command line parameter enable future refinement,,
124,d9cb60af2f21723d2708acfe9461f4c5ce04f2bf,itoleg <forown@yandex.ru>, 2020-07-22 19:34:55 -0400, , expects fail macho loader 1181 nightly test fail macho loader test powerpc xnu kext file reason small hack ogre loader work elf file doe work one deal elf relocatable file want see address objdump i.e address first symbol zero subtract address first section base address reach thing work file type expect fails macho loader test time bug fixed,,
125,9f6f6ad1cd51c833435022accf62dd09cab3ea2a,itoleg <forown@yandex.ru>, 2020-07-21 15:03:56 -0400, , fix build archlinux 1180 look like llvm9 package removed reason build fails archlinux fix installs llvm package provides 10th version,,
126,54d68f8797d75f42cddd6840906ad10711aa7fba,itoleg <forown@yandex.ru>, 2020-07-20 09:15:02 -0400, , update oasis variable cxxfilt objdump plugins 1179 leave one variable cxxfilt objdump bug fix renames variable underscore instead dash update opam file,,
127,53da1cad407790d13e1a0f6bb9d4140fde35f726,van Gotovchits <ivg@ieee.org>, 2020-07-15 16:07:26 -0400,1125, enables multiple project knowledge base 1119 creates program module current package user package one specified also demistifies program object document explicitly formed add package set_package function knowledge interface add package corresponding function tid module add package parameter project.creat function fix stub resolver adding bogus slot program class properly qualifies start exit node tid graph new package field disassemble command intern context current package add collator extension point add collate command add callgraph collators add scoped promise proposal knowledge switch scoped promise arch enables lazy processing project collate command improves diagnostic message non monotonic update error tweak callgraph collator output introduces rule introspection rule static description promise commit introduces dsl rule specification well documentation view rule introspection add bap list rule command list rule known system add declaration existing rule except objdump added later new form add path possible name core theory commit pushed change rule add rule definition rule project created knowledge filename path architecture reflected knowledge base declares bil rule bulk rename package bap.std bap .std totally superfluous need one package bap move logging facility bap_main add of_string parser bitvec rewrite objdump plugin longer depends bap.std move bap attribute aka value tag bap namespace keep uuids typeid serialization otherwise break presistence package name denotes name property uuid name denotes representation provides filename using scoped promise add path symbolizer prevent symbolizer registered one file provide name file add stream.variadic documentation really hard grok use without documentation even author add path rooter update byteweight rooter update read symbol use path update ida service provide rooter symbolizer path drop debugging info use path package digest rationale multi project analysis need know package obtain information relative project getting digest bit long road moreover readable concerning possible conflict different file name quite unlikely since caching mechanism separate knowledge base digest system anyone else develop manage separation scheme add path constraint branchers also update ida brancher respect path add bap list collators command code clean add doc rest fix symbolizer block parsing function instead giving name entry address naming address belonging function add missing base binary comparison add filter custom output destination callgraph collator also normalizes name fix bug clean documentation stop objdump providing address ambiguous name temprorary reverts fix stub resolver see 1125 make radare2 plugin respect path introduces code unit new class core theory object represents compilation unit libaries executables aggregation program path property belongs unit program basically introduced extra layer indirection one important property unit could shifted memory pave road llvm base fix pass bias llvm knowledge base fix hot objdump still need know modulus address radare2 symbolizer follow treat old rooter symbolizer unbiased source add target specific information llvm backend output refactoring add bit endianessness target property add rule provides bap arch unit target defs improves signature mismatch error ogre parser fix abi printer add newly added field image specification enables propagation spec arch spec initializes unit low level disassembler interface enables biased information source assumed default information source rooter symbolizer branchers unbiased true source created image using corresponding of_image already operating using biased information loader fix issue added hidden parameter mark information source biased unbiased perform bias substraction also addition case destination provided based parameter may later make public far set information source derived image also common code information source factored module fix hardcoded modulus objdump plugin able query bitness without pull bap.std interface implement everything neatly scope information source obtained image enables scope promise information source rec far grep see information source properly scoped either limiting path function update project documentation document toplevel interface also export full toplevel interface document tweak function unit module for_file function also set path corresponding for_addr function set address for_region intern boundary current package build finaly symbol concatenation enable intersecting region different file knowledge base flush formatter callgraph collator document bap_main_event module also establishes equality export bap.std add convenience alias bap_main module logger add compare command test,,
128,da04fb08df934baa58f5909cde9fdd5604b866de,itoleg <forown@yandex.ru>, 2020-07-14 16:48:43 -0400,1162, add docker image 1175 add archlinux ubuntu bionic debian testing test archlinux build try build bap fedora try build bap fedora try build opensuse test build opensuse llvm static add ncurses dependency installs libncurses test together split file installs radare debian testing fix typo renaming one test add docker image add weekly build next alpine archlinux debian testing fedora ubuntu bionic partially fix http github.com bap issue 1162,,
129,d96f7442a2caa42ec486040431febe02e4ae6b0b,van Gotovchits <ivg@ieee.org>, 2020-07-14 16:46:18 -0400, , enables unallocated memory symbolic executor 1177 symbolic executor try initialize memory location yet mapped fails error location belongs memory set symbolic likely default virtual memory instead failing shall intialize memory location let pagefault handler memory randomizer map,,
130,0bfd8539e254db538a5d3d132acdf4d56968766a,van Gotovchits <ivg@ieee.org>, 2020-07-09 09:06:21 -0400, , publishes document new disassembler engine 1173 publishes document new disassembler engine engine introduced bap 2.0 fully published documented part interface published lacking documentation missing also publish low level interface disassembler engine totally new last least provide precise description algorithm interaction engine knowledge base grammar tweak cleanup,,
131,20c900009c54e43af949e6e0d7ca1613dcce5f40,van Gotovchits <ivg@ieee.org>, 2020-07-08 19:34:07 -0400, , prevents delay slot becoming basic block start 1170 prevents delay slot becoming basic block start control flow graph representation unable handle case delay slot branching instruction becomes target call jump allow instruction belong several basic block aka instruction sharing encounter case control flow invariant broken lead failure downstream e.g. duplicating term identifier possible delay slot might become target jump reality compiler generating code well least aware compiler main source call target delay slot byteweight false positively identifies function start since option represent graph right preserve invariant cancel disassembling chain end classifying delay slot function start target jump call implement remember task lead creating new basic block discover new basic block check start known delay slot cancel chain later discover jump whose delay slot start basic block cancel chain responsible creation basic block continue summarize invariant delay slot may never start basic block another change optimization bundled commit track function start use starting point build whole program cfg using basic block build whole program cfg ended lot unreachable code ignored subroutine partitoning algorithm need disassemble anyways restores old behavior driver i.e. scan basic block entry specified iterates subroutine partitioning graph,,
132,86829665d8e042905279f16b7470f8f722dac91c,nton Kochkov <xvilka@gmail.com>, 2020-07-08 06:55:11 +0800, , add docker publish action 1139 add docker publish action fix path use official action update secret update dockerfile authored oleg forown yandex.ru authored ivan gotovchits ivg ieee.org,,
133,aabe75169f2de23ade9735532814288aea3cfbb6,itoleg <forown@yandex.ru>, 2020-07-07 18:45:48 -0400, , fix oasis filename string library 1172 renames string library,,
134,12cad62f7d08e9d55fda6a9dd6ce472e5e918ed3,itoleg <forown@yandex.ru>, 2020-07-07 14:47:26 -0400, , creates separate package string plugin 1171 creates separate package string plugin remove string plugin beagle package introduce new package bap beagle string restores string plugin fix typo,,
135,2e81951de2d8a07dcb5837a743c5b0ea04d4bcd0,van Gotovchits <ivg@ieee.org>, 2020-07-02 08:38:59 -0400, , tweak nightly weekly build install bap twice 1167 pin bap repo portably grab extra system dependency needed running testsuite accidentally also reinstall bap,,
136,43076b1ede21778213131a4fff248b853f0b798b,itoleg <forown@yandex.ru>, 2020-07-01 18:22:03 -0400, , split oasis multipackages sub package 1164 split primus support sub package add next sub package primus exploring scheduler primus greedy scheduler primus limit primus loader primus mark visited primus print primus promiscuous primus round robin scheduler primus wandering scheduler update oasis flag every plugin add flag name directory plugins renaming split taint sub package renames flag renaming split mark visited two package remove duplicate flag add legacy llvm remove old elf try fix omake build renaming,,
137,cf5af0736daccf2e31ecacd8c7c3c2b3e03833cf,van Gotovchits <ivg@ieee.org>, 2020-07-01 16:11:39 -0400, , fix barrier instruction delay slot 1165 disassembling processing instruction linear order execution detect fallthrough looking barrier property last disassembled instruction case mips architecture delay slot even jump instead look disassembler state recording barrier even faster,,
138,bf460ce5f7b3a931cbc061f6e577cda1d99c8b9f,van Gotovchits <ivg@ieee.org>, 2020-06-30 18:00:36 -0400, , fix several bug introduced radare2 backend 1159 name properly demangled therefore call plt function looking imp.x instead entry symbol table interpreted function including data object reference data relocation result false function start bogus function etc radare2 providing name even name known suggesting bogus func.x name prevent symbolizer providing name induce radare2 default function naming really want prefer stick sub_xxxx subroutine unknown name unfortunately testing infrastructure unable detect issue test using pre recorded symbolic information thus symbolizer basically covered think reminiscent old time using travis unable bring objdump radare2 try remove much static symbol possible,,
139,73debf7f60864550d415f533f921f43b70014f37,van Gotovchits <ivg@ieee.org>, 2020-06-30 18:00:20 -0400, , make build_plugin.sh portable 1160 vanilla macos realpath mktemp accepts make simpler even nicer withour relying advanced moder technology note problem github runner far clean system lot software preinstalled something work really imply work real system given need add docker image test least weekly authored gitoleg forown yandex.ru,,
140,63fe5e79d99e13e041ce09799f558c5f5f46f255,van Gotovchits <ivg@ieee.org>, 2020-06-30 13:11:56 -0400,1155, remove buffer tracking second attempt 1158 fix broken fix introduced 1155 unfortunately file covered need fix asap see 1156 1157,,
141,3c96985dd586fe7b019ce32228b6fdd49c8f4aa8,van Gotovchits <ivg@ieee.org>, 2020-06-30 10:32:08 -0400, , remove buffer tracking 1155 prove really benefit clash regular heap overflow tracking,,
142,e9fad288e4c04672ed70e28b8297bfa168ad58f4,van Gotovchits <ivg@ieee.org>, 2020-06-29 15:58:15 -0400,3580, add workflow revamps existing one 1153 add workflow revamps existing one main workflow run known build dev repo building dev repo using oasis ocamlbuild full matrix test new workflow build test build using omake run unit functional bap veri test using ubuntu ocaml 4.07.1 new workflow check style check style independently build process keep later clear extra package brough ocp indent obviously using one system ocaml version new workflow build opam build push check rolling release testsing repository work correctly new workflow nigtly testing run nightly full matrix installs bap testing repository run functional test important run recurrently since update upstream package opam may eventually break syntactically semantically i.e. fail compile run new workflow weekly regress build latest upstream release bap detect regression upstream package workflow uploading log artifact ease debugging failure fix error yml file forgot job matrix part strategy http pin oasis need credential ssh enables test omake setup also update version number minor beauty thing hope trigger build non workflow mine repo limit number opam job fix couple issue fix weekly workflow also make build_plugins effiecient robust prevents rebuilding plugins selected limit maximum number job prevent potential oom update apt installs dejagnu silly use apt installs dejagnu via opam opam also remove bogus install bap step build opam bap meta package depedencies bap package clean add check space step add option depext presumabely shall apt update add conditional apt clean squeeze space add missing omake depenedency fix typo set xdg_cache_home absolute path see http github.com ocaml dune issue 3580 fake installation bap bap veri remove test installation selected,,
143,68582d1b33736b2f576e64d53a743001ac9eb291,hosphorus <steepout@qq.com>, 2020-06-25 20:28:10 +0800, , fix rev16 instruction 1128 fix rev16 instruction use extract place bitmask use concat extract syntax use better sematics authored ivan gotovchits ivg ieee.org,,
144,dfd21f26d2f0dfe5a121b2ecc143e444329392aa,hosphorus <steepout@qq.com>, 2020-06-25 20:22:51 +0800, , add symbolizer based radare2 1112 add radare2 symbolizer fix error within oasis file fix silly mistake use isj dump symbol chop sym.imp prefix code style clean refactor new radare2 ocaml interface lift symbol extracting allow partial failure clean refactor indentation fix polymorphic variant pipe operator fix authored ivan gotovchits ivg ieee.org,,
145,78868cb8619f2ee8630b031b9335a04bb6e28e85,van Gotovchits <ivg@ieee.org>, 2020-06-23 18:25:09 -0400, , fix taint propagation unmodeled subroutine 1147 subroutine unmodeled introduce taint directly call return method taint attached temporary value never really used anywhere reason attach taint value stored right hand side argument term right hand side could arbitrary expression e.g. rax.rdi low rax etc therefore value stored left hand side argument term result evaluation expression never used afterwards instead tainting rax rdi really used lifted code lift freshly created rax.rdi value general problem provide general solution enables taint propagation specific case right hand side expression simple variable used work ignoring arg_terms inserted api pas ill typed architecture size integer data type smaller size machine register bap 2.1.0 relaxed interpreter let grok ill typed expression adding corecions jumped case since created new coerced value small fix restores status quo taint analysis 2.1.0 right solution implemented still work complex expression,,
146,8ec0e7bd9990d7a8fee5cba887d2b1e2ecf23a99,van Gotovchits <ivg@ieee.org>, 2020-06-23 14:20:08 -0400, , enforces consistent indentation 1146 indent file using latest ocp indent unfortunately ocp indent sometimes change indentation style think mostly due bug fixing introducing time code base diverged let resync add indentation automation two new target makefile make indent indent ocaml file using ocp indent make check style run indenter see anything changed note make check style intended used part expects code commited run really suit pre commit hook switch git file mac nerfed find move status clean check makefile enable using ocp indent all.sh script pre commit hook,,
147,2b8883f19c6b121b2a626e7ddfc09bfda11277e6,van Gotovchits <ivg@ieee.org>, 2020-06-23 09:36:24 -0400, , fix fgetc stub channel input primitive return type 1143 shall return value type int returning value type char provoked type error real fgetc linked binary also incorrect since actual primitive returning value type int,,
148,582e9e483059ee95400df660a6e7b10261c92603,van Gotovchits <ivg@ieee.org>, 2020-06-23 09:35:26 -0400, , tweak jumping eval cond 1142 tweak eval cond jumping observation guard condition computed outcoming edge simplifies taint analysis symbolic execution true jumping eval cond simplifies optimizes symbolic executor eval cond take account path constraint i.e. previous branch basic block taken simplify code symbolic executor responsible executing physical i.e. represented actual basic block braches investigate non taken branch remove eval cond signal primus lisp interface might put back release right easiest error prone solution bump timeout value symexec test since functional test take five time time mac machine surprising occasionally hitting timeout see also 1136. hope double would enough,,
149,303beb4cb91830174702931a1e87b110aa85cdba,van Gotovchits <ivg@ieee.org>, 2020-06-18 21:06:09 -0400, , fix getenv lisp stub 1140 implementation missing fact envp array pointer string array pointer also sure bug abi specific env set null probably double checked loader part,,
150,f2b844e2c099a28536887c6ea20214a68bf1541d,nton Kochkov <xvilka@gmail.com>, 2020-06-18 02:09:09 +0800,512, try use github action 1115 try use github action fix llvm installation homebrew disable install macos fix disable window fix fix build ubuntu launch unit test bap installed try set cache home dir via env wip wip grammar eye candy try macos switch non alternate llvm remove llvm_config step first usr local opt llvm bin llvm config llvm config llvm shipped macos stripped non native target use requested llvm installed usr local opt llvm symlinked usr local keg  llvm keg mean symlinked usr local alternate version another formula need llvm first path run echo export path usr local opt llvm bin path user runner .bash_profile compiler find llvm may need set export ldflags usr local opt llvm lib export cppflags usr local opt llvm include  llvm aka llvm also keg installed cellar guess whether llvm config binary named llvm config llvm config bet former set tmpdir env var pas test mac update testsuite run push master branch already restricted push code reach master branch pull requested want work twice also remove commented window line return back time see also 512 authored oleg forown yandex.ru authored ivg ivg ieee.org,,
151,5a27c11aff1de969bb8ae4e6214727ed72a7e100,van Gotovchits <ivg@ieee.org>, 2020-06-17 13:20:27 -0400,1133, implement better support cross memory disassembling 1134 jump cross segment section boundary treated thoroughly jump instruction lead invalid execution chain segment cancel chain segment chain led jump current segment canceled boundary segment partially fix 1133 however since thumb 2.0 binary bap still mostly random data something meaningful problem  since 2.0 incremental disassembler support cross sectional cross segmential jump 1133 show sometimes wrong treated specially preference regular intersectional jump one invariant disassembler valid chain execution hit end segment data word force cpu invalid instruction state allow conservative chain cpu still hit invalid instruction conditional branch word allow conditional branch hit data preserve invariant maintain tree disassembling task hit data unroll chain root started first conditional branch cancel everything marking also data invariant hold jump section see jump instruction current memory region assume get region memory disassembled nicely however later actually get access memory region contains destination disassembler incremental applied per chunk memory discovered may figure chain starting address invalid cancel chain however since longer access disassembler state original memory region cancel chain led jump original memory region therefore later build whole program cfg start chain eventually hit data end exception solution  solution instead discarding task breach segment boundary accumulate debt list every time handled new memory region first try payoff debt task boundary prove hit data cancel whole chain cross section boundary caveat  debt list task task reference parent task fact tree instruction covering whole program storing debt list disassembler state saved hard drive debt list large since binary format preserve sharing quite large store load far assumption debt list either empty small project fully disassembled hypothesis turn true either cancel unpayed debt end disassembling ignore store disk,,
152,0eebcc9f00659b2edaf1d4110fdb7caaab55f870,van Gotovchits <ivg@ieee.org>, 2020-06-16 08:01:23 -0400, , add missing toupper tolower prototype 1132,,
153,ae3c7f990ed8f03ae556bc485daa3fe253d7b322,van Gotovchits <ivg@ieee.org>, 2020-06-15 13:57:10 -0400, , handle correctly xdg_cache_home 1129 shall take whole chaching directory create subfolder,,
154,c35ed1d887027b9e2aed4bf4f17a806fb2b85b9a,van Gotovchits <ivg@ieee.org>, 2020-06-12 13:59:38 -0400, , fix inifinite loop certain primus lisp analysis 1123 since primus lisp operation expressed term primus interpreter order enable analysis code stubbed primus lisp eval cond signal sent every time make comparison operation lisp e.g. etc therefore method eval cond doe comparison operation branching stall infinite loop workaround use another observation occurs jump situated binary code general shall address make sure eval cond method usable,,
155,fdadc1d762ed6dabee9bfffd5a962ba83336f1cc,nton Kochkov <anton.kochkov@gmail.com>, 2020-06-10 00:11:09 +0800, , try ubuntu bionic travis 1114 try ubuntu bionic travis update llvm remove sudo sudo required obsolete travis delete .travis opam.sh delete .travis ocaml.sh update .travis.yml update llvm depext,,
156,a97ad89911a99d60819d58cdc06df5cd0ec7a83d,van Gotovchits <ivg@ieee.org>, 2020-06-08 12:30:38 -0400, , start new development version bap 1113 techinical bump version designate start developement new 2.2.0 version bap released roughly six month also remove remove stress system,,
157,fbaf190269a3ef14f3acbfde1b786c33d2222e59,van Gotovchits <ivg@ieee.org>, 2020-05-29 14:40:48 -0400, , fix trivial assertion 1108 assertion contain symbolic value empty set constraint trivially true word assert true hold fix treating non symbolic value symbolic constant,,
158,5a98402ecf86af80510dd27392680f0c73292eac,van Gotovchits <ivg@ieee.org>, 2020-05-28 11:03:35 -0400, , prepares 2.1.0 release 1107 prepares 2.1.0 release refreshes readme add link highlight new feature bump version bap ocaml update change log update link documentation pointing master doc update build instruction deb package yet uploaded fix broken link,,
159,9d8c51dba73407cd4ca90db800f87d7473310777,van Gotovchits <ivg@ieee.org>, 2020-05-28 10:17:47 -0400, , add symbolic executor 1105 change trace representation initial design implement deduplication classification incidence enables wide generator generator able produce object random width modulo random value underneath hood still integer todo drop width parameter byte generator hardcodes generator register memory promiscuous mode make wide generator available memory allocate disables alloc free hack produce lot false positive due unwanted aliasing fix memcheck rule strn family function experimental implement errno support malloc allocate place register lisp parameter store location also consider clearing errno soon possible source aliasing lot uaf false positive experimental enables buffer creation overflow tracking basically idea function defines buffer string e.g. malloc strdup memcpy etc imposes constraint buffer may track example break bound strdup generated string could soft alarm revamps primus generator using much efficient msg algorithm implementation new bitvec module generate arbitrary number random bit specify range like enables wide generator memory hush ida error message warning need overreact add generated observation undefined var pointer initial implementation primus symbolic executor add oasis file symbolic executor make typechecker happy coerces boolean operation bitvectors keep booleans actual logic formula i.e. meta logic answer question whether path feasible abstract input type previously known origin add solver implement neq using bitvector logic add salt generator generator generate sequence note still need create separate generator independent data location unfinished publishes of_iterator function todo document todo publish bitvector interface add random plugin plugin control random generator ... much could controlled make generator syntax little bit ugly implement memory randomization register symbolic executor component using new interface split promiscuous mode several independent component restructures core system add translation formula value word resubscribe printer every time new system started implement master forker process fix bil discrepancy propagates input worker master fix worklist filter solve branch already visited process move mark visited library since many component anyway track visited term better available everyone instead reduplicating work symbolic executor mark visited component propagate visited term different run wip enables run completion mode run term visited clean symexec code add lisp stub add del operation env memory operation deletes binding variable address new component handling unresolved call component prevent linker raising unresolved call exception trapping note conflict default trap unconditionally set primus.lisp file remove next commit remove primus.lisp feature first feature posix module second used install handler assumes default prototype available fix component name add constraint formula solver computer record path constraint taken jump add assume assert primitive prefix assert assume fix ordering primitive using binops fix bug missing constraint add lisp primitive symbolic computation system add dependency fix primitive fix component name legacy main system fix typo abi specification hush error primus move fix subroutine pertubator primus random plugin possible control argument individually add global seed parameter document clean primus random plugin also add global seed parameter option keep page protection enables upper limit limiter used quite unintuitive limit maximum path need enable limiter set limit finite number default unlimited making sense however old day one system component automatically included therefore prevent limiter jumping old style bap legacy main enable seamless backward compatibility following either primus limit length primus limit max depth specified add component legacy main system also add component promiscuous mode enabled fix error message main library publishes ite operator interpreter interface rewrite malloc allocator prettifies error message disassemble command fixp malloc reimplements errno without malloc fixup limiter enables autocoercion primus interpreter evaluates condition primus lisp transparently add primitive region library region lower region upper return corresponding bound region region count count number region set region add three primitive lisp dictionary dict first first key dictionary dict next next key dict length length first two function enables iteration dictionary couple bugfixes lisp code add prototype ctypes function clean error message run plugin add new eval lisp command command used evaluate lisp code without provide binary drop bogus stub implement support modern runtime modern runtime function called via plt indirection .got.plt .got.plt remember table zeroed default expected loaded fill value relocation table existing support runtime searching libc_start_main location entry point first function called entry point assumed libc_start_main first argument function assumed main function problem since longer plt entry libc_start_main really link stub fix simple insert synthetic subroutine everything else work fine commit also add stack canary provision code system require allocates space canary initializes fs_base variable sine fs_base added primus environment default also modify x86 primus loader plugin initialize register x86 family including ymms register make branching looping interpreted fix path condition computation symbolic executor false condition refuted make symbol interning global different machine vision symbol open bap package primus system enable writing system name without bap package implement primus closure context make easier define several closure module make env.mem public make addr_size data_size public descriptor module implement symbolic primitive possible create symbolic value symbolic memory switch z.t int64 word representation lisp simplifies lisp primitive module collapse primitive single module code merlin mad add system name component lisp context initial implementation symbolic input output intialializes global static variable primus lisp treat static differently right later enable mangling static variable available scope definition tweak symbolic file start small initial size workaround bigger problem gon handle later deal large memory mapping also relevant malloc restart solution found random fix bug remembering random value emitting generated event value read static memory enables deeper search execution tree instead investigating linearly independent path execute path several time depending much information give still highly experimental disables handling ocaml exception closure application really catch level need modify bind operator want even lead stack overflow binding push exception handler stack fix lisp msg operator tweak symbol printing ocaml side effectful computation escaping monad message sometimes clobbered also tweaked printing symbol value interned symbol print could false positive probably could also check size symbol introduce tagging lisp global variable properly initialized fix symbolic stdin initialization also declares symbolic context definition file fix potential bug symbol string primitive use side effect inside monad track symbolic value symbolic computer need store numeral always compute flight also longer creating task non symbolic path condition switch partial model evaluation chain task tree task put parent task constraint note would probably optimal store model sure would correct first thought inherit model parent task significantly limit solution space thread fgets via fgetc enable symbolic fgets also fix bug fgets never returning eof fix symbolic memory generator generating random value correct width implement symbolic stream add missing update_hash operation running job stack hash fix primus destructor behavior destructor called exception thrown start handler also add fini callback finilization symmetical init honestly sure symmetrical probably run _after_ fini observation symmetrical think later fix parent refutation keep parent input first parent task constraint refuted added always taking yes branch hotfix negation condition refuted general rething parent constraint next consider parent input model included never set since child thread considering input already set massive cleanup smt interface disables input creation symbolic value memory operation create new input explicitly let generator work result input part model longer treated symbolic add symbolic getchar store symbolic context separate component stop spawning task solved switch priority queue worklist right priority lifo later may prioritize amount information task provide add model fflush flush put add model fdopen fileno fix fgets stub one forgot corner case bug revealed symbolic executor good boy symbolic executor fix ton bug symbolic stdio implement comparable interface formula remove dependency printer regular bap.std impossible use printing function without linking regular library add symexec test add progress report symbolic executor change cutoff algorithm code cleanup add fflush prototype add queue option run entry point parameter add crc32 test testsuite forgot commit add symbol test binary enable test passing travis move glibc runtime support code separate plugin possible enable disable also possible provide alternative competing runtime support without modifying existing code however main motivaiton move desire get access project data structure enables much robust runtime identification work even absence symbol fix type error strcat strncat fix type error strcat fix error strncat fix issue test core_kernel primus random enable older ocaml version fix cache test fix small bug greedy promiscuous executor still mentioned system yet another type error string static binding errno location instead parameter renames symbolic symbolic stdio add symbolic stdlib convention concrete feature xxx need symbolic counterpart provide symbolic xxx feature stdlib right empty start fill stuff release add new function old allocate still available worry take two word instead one word int make possible create region whose size fit ocaml int quite possible execution randomized mode make code much eaiser write need deal conversion error switch add_region primus loader switch memory allocate primitive add_region longer fail big number primus random also add_region possible map whole memory one run switch symbolic memory add_region add documentation function drop bogus observation authored oleg forown yandex.ru,,
160,53388e918b0e0f61f524f1a61e67ad801707d36e,itoleg <forown@yandex.ru>, 2020-05-28 09:54:34 -0400, , fix bug llvm version x86 lifter 1106 fix bug llvm version x86 lifter fix bug llvm version normalization x86 lifter warning llvm backend,,
161,140991b6d322e26e5f7ec8ac3ccf8e5040595b2f,itoleg <forown@yandex.ru>, 2020-05-22 15:55:05 -0400, , cache optimization 1090 wip variant delayed index storing index global add random deletion also play bin_io get better result updated gc.clean second removed unused fileds entry type refactoring fix couple bug call upgrade soon possible check index file existance mtime renaming everything seems preserve config file refactoring wip added lock refactored little removed lock reverted optimization pas fix couple bug couple stylistic change use integer overhead cmdkine paramter refactored little renaming remove fileutils dependency locked cache upgrade well refactoring updated testsuite rewrote remove add test debug progress stylistic update refactoring remove bap_config module wip bap_main cmdline interface update test better init removed old code final touch fix test sip refactoring fix command printing fix typo store overhead integer updated mktmp directory new implementation mkdtemp added uuidm cache deps moved rng initialization toplevel,,
162,b020215512dd2d9c5dc7d6b04921041aaf93e3e7,itoleg <forown@yandex.ru>, 2020-05-21 15:50:19 -0400, , add limit malloc 1104 set malloc parameter limit maximum size memory allocated malloc feature used frequently analysis time move main bap repository,,
163,61fc1d96321bbea8b4956180bbde94cdead9eba6,itoleg <forown@yandex.ru>, 2020-05-21 12:29:41 -0400, , add support window pdb file 1099 introduces support pdb file wip wip renaming try constraint llvm version pdb loader added constraint llvm version fixing bug add documentation removed debug output update doc rewrote llvm config parameter update doc couple improvement refactored little edited param doc,,
164,09f1aef754dbec274dfa29e7505b5d2c4d795b4c,itoleg <forown@yandex.ru>, 2020-05-21 11:57:00 -0400, , fix bil.eval memory operation different size value 1102 fix bil.eval memory operation different size value bil.eval still relies assumption memory address value byte length stored loaded value size differs memory value size try simplify expression simplification turn leave expression unchanged since take account memory value size size stored loaded value get infinite loop since expression unchanged try eval simplify fix problem check size stored loaded value memory value size raise exception,,
165,8530c062a027d9ca318ceee52ca3df009d161e42,itoleg <forown@yandex.ru>, 2020-05-20 12:52:30 -0400,1092, prune unreachable code optimization pas 1095 prune unreachable code optimization pas fix 1092 optimization pas may make code unreachable propagating constant value branch guard example code become unreachable due jump never taken condition  0000046a goto 0000045b  due previous jump taken always  00000471 00000473 goto 00000451 00000474 goto 00000455  fix problem remove block unreachable due infeasible jump jump well also fix computation digest optimization pas previously digest subroutine contained tids quite right program different tids bap execution actually happens quite often lead cache explosion since instead loading cache store duplicated data different tids value solves problem address instead removed old code renaming update digesting minor update,,
166,dec3391c5e8508e9e9e2ddb409a02d111986c827,itoleg <forown@yandex.ru>, 2020-05-20 12:47:19 -0400, , fix stub resolver build 1100 make possible build stub resolver oasis backends,,
167,90f934e0cc12dde2532658386a7d7e134b3db971,itoleg <forown@yandex.ru>, 2020-05-20 12:27:13 -0400, , add llvm support 1101 working version update fixing bug fixing bug,,
168,5937deff41b925d537a08cbd65c3e7d92da710b9,itoleg <forown@yandex.ru>, 2020-05-13 14:01:48 -0400,328, update float intrinsics 1098 x86 floating point instruction name differ different llvm version example result llvm 6.0 llvm 9.0  echo addsd ebp xmm0 llvm 6.0 arch x86 show inst .text addsd ebp xmm0 mcinst 219 addsdrm mcoperand reg 127 mcoperand reg 127 mcoperand reg mcoperand imm mcoperand reg mcoperand imm mcoperand reg   echo addsd ebp xmm0 llvm arch x86 show inst .section __text __text regular addsd ebp xmm0 mcinst 328 addsdrm_int mcoperand reg 142 mcoperand reg 142 mcoperand reg mcoperand imm mcoperand reg mcoperand imm mcoperand reg  latter instruction _int suffix former doe result test pas suffix present fix problem stub suffixed name also,,
169,8e3260d1c2d0dc17493b8fa9685d53e5ad02d28c,itoleg <forown@yandex.ru>, 2020-05-08 13:03:55 -0400, , update posix.h header 1097 add several function posix.h header  int remove const char int rename const char const char int __isoc99_fscanf file __restrict __stream const char __restrict __format ... __attribute__ int __isoc99_scanf const char __restrict __format ... __attribute__ int __isoc99_sscanf const char __restrict __s const char __restrict __format ... __attribute__ int _io_feof file stream int _io_getc file stream int _io_putc int file stream int _io_puts const char ,,
170,a11d6b7b3c3cc3369ac2b9528f43b3fd57f2be62,itoleg <forown@yandex.ru>, 2020-04-17 13:42:02 -0400, , add stub resolver abi pas 1036 stub resolver pas redirects level call stub function call real function could identified function stub stub attribute present knowledge base far add knowledge provider elf stub look .plt section others added later redirection algorithm establishes one one mapping stub prospective redirection case non bijective mapping detected stub one implementation candidate implementation one stub redirection established,,
171,9619503d20efc954db60593e333fafd94913d289,oidos-bin <63795144+aoidos-bin@users.noreply.github.com>, 2020-04-17 02:07:18 +0200, , export abi processor 1093 export abi processor add new function c.abi able register new abi processor access later hashtbl abi registry,,
172,cfeacbfc7b2ee13bd25a64edb3182e8f53e1f578,van Gotovchits <ivg@ieee.org>, 2020-03-26 15:31:23 -0400, , allows character variable name 1086 bil core theory variable literal contain specific set valid character thus approach play nice various mangler non language well contradicts tradition generally tend allow character variable see knowledge variable example used underneath hood bil variable one real world example bap fails new code lambda anonymous variable proposal allow string including empty one used variable name first escape non printable whitespace character also escape use variable versioning next prospective variable name start digit empty start use encode bruijin style variable prefix note escaping whitespaces non printable character really necessary help textual representation variable name case hit one,,
173,d3b1400cb49a50b250b3179b4b861fdaed5da758,itoleg <forown@yandex.ru>, 2020-03-19 20:09:42 -0400, , allows disassemble elf file without section 1085 usually elf binary contains segment section use latter determine code region also section used print disassembled output via bap file dasm section binary nothing file resolve issue provide necessary information segment allow process kind file,,
174,fb8b90f0186ca2fc685cb2d8361d1a9a554b579e,nton Kochkov <anton.kochkov@gmail.com>, 2020-03-19 20:51:11 +0800, , remove outdated docker container 1084,,
175,1dc4675779f54132660070f4521d553f9c434f54,itoleg <forown@yandex.ru>, 2020-03-18 16:44:48 -0400, , disables llvm 8.0 disassembler aarch64 1082 disables llvm 8.0 disassembler aarch64 llvm disassembler broken aarch64 segfaults null pointer dereference segmentation fault version 8.0. clear mitigation passing non null pointer symbolizer function result unpredictable behavior given aarch64 first tier architecture yet disable older version llvm macro added link issue github,,
176,66991e43abb0e892dcad1a184c82f1c4f28bd1c6,ieracDelta <justin.p.restivo@gmail.com>, 2020-03-17 14:27:53 -0400, , correct dockerfile typo 1083 need move quotation mark inside otherwise docker image build executed,,
177,31c837e815f84e0e3e331321258010ca23bcd472,itoleg <forown@yandex.ru>, 2020-03-12 11:27:32 -0400, , switch docbuilder odig 1079 wip wip merge action branch swaped library refactoring fix link,,
178,aa91c267a0119da7d0f5e1a4e3ae3479f75e8db2,van Gotovchits <ivg@ieee.org>, 2020-03-10 11:34:50 -0400, , add observation printer core system 1078 essential component enables observation printing probably system also tweaked bit description component old one quite vague,,
179,0d978b77df8566b9d8c56e652c95aecb860e1f9a,van Gotovchits <ivg@ieee.org>, 2020-03-09 15:25:00 -0400, , brings knowledge system primus 1075 initial implementation new module publishes document new interface fix bug has_component function translates binary program linker component deprecates old add_component favor new component module start updating registration function though test work catch exception raised init switch new component registration inteface except observation touch branch restores old behavior add_component function way preserve user interface implement restricted mode rectifies start stop observation add name start stop event hide transformer effect expose machine kill system stop observation lisp signal much better cleanup teardown task executed restricted mode mark unvisited node dead getting interested term visit rather term visted test 100 coverage taint test three xfails rectify later promiscuous mode greed scheduler respect term.visited term already visited fork loose statistic add progress respect repetition run isolation run report progress new subroutine run isolation mode enter already visited entry point rectifies kill observation called context different machine fix restricted mode restriction checked using local state local therefore fork restricted expose run function legacy main system switch run run machine.make knowledge monad slowdown add root omakefile apparently boost performance vanilla flambda compiler  drop run function better expose system use existing runner introduces job enables system job queue switch run usage job queue add option run marked subroutine idea static analysis run mark certain entry point interesting automatically chosen run plugin analysis marked subroutine used entry point preliminary support loading running system drop legacy_system function repo instead add system component printing facility rectifies name description initial checking set system definition bit cleanup add run capability run system little bit renaming plus extended callback job render progress bar correctly make observation observable via primus observation command also packaged document interpreter observation remove debugging observation blocked observation describes observation add doc deprecates machine init finished well rewires existing analysis applicable observation add doc polish primus documentation add new plugin opam opam add system testsuite run taint test run twice one bap legacy main system system corresponds test run bap stubbed executor taint bap reflective taint analyzer changed result.t result expects w64 taint deadcode fail probably enough symbolic information case investigate later original idea add read symbol option symbol window binary testsuite move taint finalization machine kill observation finalization procedure invoked restricted mode i.e. use either machine kill system stop observation otherwise risk unpleasant interaction component e.g. bap limit kill machine doe new operation increase machine clock case infinite loop taint finalization attached halting observation reflected primus signal method quite operation turn woke limited using halt operation halt,,
180,ebb53a54d5b46669ff08ae133c215b5d2bf61c4a,itoleg <forown@yandex.ru>, 2020-03-06 10:14:52 -0500,1073, drop fileutils postinstall script 1074 drop fileutils postinstall script 1073 installation opam fresh switch broken due dependency fileutils postinstall script implement postinstall without instread,,
181,7442e3f1e8d58265bc0fb2148960e38015c22fdb,itoleg <forown@yandex.ru>, 2020-03-05 14:41:15 -0500, , fix man page installation 1073 fix man page installation manpage installed bap installed via opam post install happens bap frontend yet installed update install manpage every time new bap package installed fix comma,,
182,8ec873b1572fdbdebc0a7a3fd957dab6da0a3e9d,itoleg <forown@yandex.ru>, 2020-03-03 08:10:47 -0500, , expose git commit bap version 1071 add build oasis variable try param play var wip fail git repo edited description add_variable instead var_define error message case git repo catch exception search .git,,
183,757733bc28f330a4e4a58f3848bf49f4e4b894c6,itoleg <forown@yandex.ru>, 2020-02-28 16:29:37 -0500, , recalibrates primus clock 1069 recalibrates primus clock new clock introduced 1061 ticking fast roughly time faster recalibrated closer old clock using binop unop load store event constrainted result 1.5.0 zed incompatibility constrained result 1.4.0 result 1.4.0 1.4,,
184,40440db1b8a7db1c30ccbd961404a31507dab4ce,itoleg <forown@yandex.ru>, 2020-02-28 16:29:13 -0500, , fix config run test 1070 update testsuite  preserve user configutaion file exists config test primus lisp type check option run test constrained result 1.5.0 constrained result 1.5 constrained result 1.4.0 result 1.4.0 1.4,,
185,ca6b1a7bdae6e7cabebc914f8385773fd85cebbd,itoleg <forown@yandex.ru>, 2020-02-27 07:58:29 -0500, , update testsuite 1064 add primus lisp typechecking testsuite,,
186,d712187b6b2a8de9eb0374edbdbd3d040c67acbc,itoleg <forown@yandex.ru>, 2020-02-26 16:00:47 -0500, , fix bug primus realloc stub 1062 fix unresolved variable realloc stub,,
187,cd024cf6953b8600eec4592f5c93b8295375ff10,itoleg <forown@yandex.ru>, 2020-02-26 10:54:30 -0500, , add stub realloc 1035 primus lisp update add stub realloc surprisingly many allocation done passing null pointer realloc analysis based tracing allocation freeing memory notice call also fix minor bug method name signal enter jmp depend also add new behavior free call processing memcheck malloc pointer freed unknown i.e memory allocation current primus machine allocate one byte length region release justification simple able find bug like use free double free e.g library path take necessarily contain chain call like malloc free memory access free path exists user code library encoded length removed unused function rewrote realloc refactored little renaming removed unresolved name handling promiscuous,,
188,40b1bb9cc9ca09c6dcd6486dd798e142fb2b17dd,van Gotovchits <ivg@ieee.org>, 2020-02-26 08:41:33 -0500, , add intrinsics 1059 add experimental lifting unknown instruction bil lift unknown set tranlate instruction semantics call intrinsic function later could stubbed primus lisp highly experimental feature expect change bit stabilize interface fully disabled default change something enabled via command line inteface via configuration file working example let take  40afa1 add 0xdc9b rip xmm1  taken bin output bil lift unknown option specified lifted  llvm x86_64 op1 llvm x86_64 xmm1 llvm x86_64 op2 llvm x86_64 xmm1 llvm x86_64 op3 llvm x86_64 rip llvm x86_64 op4 llvm x86_64 op5 llvm x86_64 nil llvm x86_64 op6 0xdc9b llvm x86_64 op7 llvm x86_64 nil llvm x86_64 next_address 0x40afa9 call llvm x86_64 addssrm noreturn  see operand passed via variable disassembler package case llvm x86_64 since meaning operand specific backend register referenced operand also taken backend package prevent name clashing corresponding register core theory bil different meaning type e.g. xmm register bil represented selection corresponding ymms register expected target support package define corresponding method establish mapping disassembler specific variable cpu variable finally intrinsic invoked tail call decide control flow i.e. instruction control flow instruction pas address following instruction via next_address could invoked via exec addr primitive e.g lisp defun add stub declare external llvm x86_64 addssrm exec addr llvm x86_64 next_address  every time call add add stub called instead fix case macro macro rewriting hygienic keep forgeting use backend specific register since know size register create correct variable pulling register depth disassembler would imply many possibly breaking change use register code represent register operand instead later primus get symbolic representation register name using new reg name primitive additionally add set symbol value primitive take symbol assigns correspoinding register passed value common lisper set symbol value set setq named set primus lisp using two primitive establish translation disassembler cpu model bap cpu model much efficient way add ieee754 support primus lisp demonstration new capability added support ieee754 form primus lisp primitive implemented stub three instruction addsd divsd ucomisd instruction three line code full lifter glue code take 100 line code register mapping add lisp primitive observation posted every time primitive called return value add usual primitive observation mostly primitive supposed diverge nature implemented using vanilla ocaml operate host cpu primus cpu add one additionally provide signal observation observing lisp primitive lisp trigger lisp primitive signal easy get infinite loop case reifies call call reification module translating jump gotos relying later sema lifter pas translate gotos proper jump however right thing would instead introducing incorrect term fixing produce correct reification first hand since call method core theory parse shall leverage knowledge call subroutine next lifter shall reify call know subroutine finally fix lifter relying incorrectly behavior call term returned lifter true current implementation general assumed several modification applied is_call predicate take account intrinsics word even mov could call treated way added has_call predicate accompany is_call everywhere join require different context turn_into_call function assuming input call take account could already call respect call term also bit refactoring changed if_conditional since always using negated case renamed nonconditional unconditional latter conventional relaxes primus type checker wrt referenced variable possible reference variable used defined binary program matter place add floating point test provides new commandline interface intrinsics command line option named bil enable intrinsic take list instruction class would like turn intrinsic call support right three generic class special unknown three parametrized predicate let match instruction based assembly representation opcode name based semantics tag decided provide predicate based binary representation low level really option corresponding architecture specific plugins e.g. something like x86 vex much appropriate also really want disable vex pretty fine vex move instruction new interface lisp primitive observation add symbol float test,,
189,2d23a97d5760af7ee4285a7e68985bf67096a386,van Gotovchits <ivg@ieee.org>, 2020-02-25 15:43:52 -0500, , optimizes primus observation 1061 add new function make lazy observation i.e. someone interested observation made otherwise let opinion wrap observation providing function functor create intermediate data structure even hope inliner work better add cancelable subscription observation cancel unused signal introduces primus clock add clock primus well clock observation turn limited work clock significantly improves performance delay taint incident observation add documentation increase depth analysis testsuite new limiter little bit different old one,,
190,8979c4f4cfabc38b86eb4c1199637c3e93c0638e,van Gotovchits <ivg@ieee.org>, 2020-02-25 15:40:35 -0500, , fix jmp.ml plugin example,,
191,2ad537a0e90bd7e0faaa80d69c4c328e369e2054,van Gotovchits <ivg@ieee.org>, 2020-02-20 09:24:25 -0500,1051, fix start exit insertion singleton graph 1060 1051 begun inserting start exit pseudonodes introduced small bug graph singleton node indegree outdegree equal zero graph instead  digraph start exit   got  digraph start start exit   since insert edge exit,,
192,55bc0053fb91501b3a1f450f53db74919f59f4be,van Gotovchits <ivg@ieee.org>, 2020-02-14 12:59:00 -0500, , cache disassembler state 1055 disassembler state cached even loaded cache ... never used significantly faster,,
193,892fc760461c2a694bff0c35bbd651da97e95f34,van Gotovchits <ivg@ieee.org>, 2020-02-14 12:58:46 -0500, , provides information call destination soon possible 1054 marking call destination subroutine time building callgraph therefore caller visited callee callee yet marked function start missing valid function start partitioning whole program cfg subroutine incorrect reason delaying information late two fold first mark callee function start soon discovered instruction target instruction may part valid code chain may need later cancel instruction therefore retract information since knowledge base allow retracting negating postponing information finish disassembling however disassembling really information anymore suboptimal scan memory push call destination therefore decided provide information demand premature optimization proposed solution still delay information new chunk memory scanned later mark set destination call target instruction disassembled cfg built survived call instruction record destination function start,,
194,ebcfd290ea6cc8acd9e2ebd5cdd2800bddeefd5a,van Gotovchits <ivg@ieee.org>, 2020-02-14 11:28:38 -0500, , provides liveness analysis liveness sub.free_vars 1051 liveness analysis free variable ssa available approximation dominators really work well since fixpoint function quite time reason implement using classical dataflow provides liveness analysis liveness sub.free_vars implement liveness analysis subroutine provides return fixed point solution variable liveness property liveness compute free variable subroutime ssa form sub.to_graph return fully connected graph two pseudo node start exit keep every time need graph computation let make official pseudo node constant defined graphs.tid interface context  used rely dominators tree compute set free variable ssa form available optimization time fixpoint function want compute ssa getting free var also returning rather i.e. must free analysis fine existing sub.free_vars function sufficient correct e.g. promiscuous mode relying turn subroutine closed form prevent failure runtime undefined variable probably could define var used program different story since sub.free_vars returning approximation still experience runtime failure halting machine resulted non visited code missing vulnerability fix ssa algorithm tid graph change ssa transformation algorithm assumes sub.to_graph function return graph set node equal set term identifier subroutine longer true set extended two artifical node start exit therefore algorithm failing expects artificial node handle correctly,,
195,75c640e223d4c937e7abf6df99c6fe68a0bdbd9e,van Gotovchits <ivg@ieee.org>, 2020-02-14 06:01:42 -0500, , tweak primus mark visited mark called stub visited 1053 function stubed primus lisp function original plt entry evauluated therefore marked visited result incorrect statistic visited block track primus lisp call observation mark corresponding plt entry whatever match called address visited,,
196,692dd7d88eda82c59120d2b7d2da8760a66fda85,van Gotovchits <ivg@ieee.org>, 2020-02-13 10:54:33 -0500, , prevents overwriting file input channel redirection 1049 primus lisp channel redirection make file host system visible emulation layer underneath hood use common ocaml channel model file probably use unix file descriptor file mapped open input output channel however open input channel file truncated ramification quickfix add append flag long term solution would switching unix file desciptors passing flag open function,,
197,66abfc0451e657a297afa8bdd47bb013649ccada,van Gotovchits <ivg@ieee.org>, 2020-02-12 09:21:27 -0500, , fix missing filename attribute 1048 attribute longer set test case watching longer present could present imagination though test case added,,
198,4bae1925599103cbe22e61fc00f96a86504aea8e,van Gotovchits <ivg@ieee.org>, 2020-02-10 11:12:26 -0500, , revamps primus lisp type checker 1047 rewrite gamma fix bug task left done still open question deal user type variable unresolved variable reported unresolved function call reported error message really suck best location fix scoping user type variable type variable quantified scope defining expression i.e. expression non ground signature instantiate new type variable form name type variable expression add sane error message well least sane track type used unification dump user hope clarify issue disallow unresolved function variable immediately lower type bottom see one error message explonatory include source code relevenat context highlighting tweak underline offending piece code last line add parameter global space move source pretty printing source module also instead opening file keep read data source repository exposed new interface provided external signature implement diverging type widen operator switch meet inference gradual typing look like disjoint type really useful right primus lisp decided switch classical inference conjunctive type i.e. meet operator join still gradual type allow type relaxes typing discipline allows ill typed expression example concat primitive return dependetly typed vain relax typing form unify branch return type depends condition value switch simple scheme enables much readable useful error message still type lisp program modulo real type error ignore definition applicable current context e.g. mips init checking x86 get lot unbound error  defun init main argc argv auxv gnu libc initialization stub declare external context arch mips set main set __libc_csu_fini exit invoke subroutine main argc argv  restricts set typing allowed set undefined variable probably error probably primus.env semantics let create variable fly whether used good second question far let try disable typing level later consider whether need runtime type check method body whether method corresponding signal yet checked comming soon move signal lisp machine lisp program delegate program merging program module track unresolved parameter move typechecker invocation run primus lisp cleanup add signature annotation signal move typechecker primus internals called automatically component init type error reported observation want right stop processing case type error case still false positive clean ups comment delay plt rewriter x86 loader init refactors constant tracker lisp primitive tracker primitive shall registered conditionally drop printer implement abi specific type far referring unresolved primitive type checker say reimplemented primitive big overload fix error atoi discovered new typechecker function coerce implement atoi using new language specific size function add unless case macro fix documentation enter jmp signal specifies missing size taint introduce indirectly previously ill typed piece code pas size employ parameter set size default one word parameter dynamically bound lisp let indirect taint size 100 taint introduce indirectly  fix wrongly named variable memory allocate right name fini fix missing requires function fix missing argument prune undefined input method signal defined ddtbd yet integrated bap add couple cast strchr function take integer explicitly case char cleanup merlin update add primus lisp typecheck option typecheck primus lisp program without neccesity run far need run binary trigger typechecker quite unintuitive error message printed conclusive message quality program note program run automatically typechecked error printed need use option every time need run program note prefer type check also primus lisp type check alias usual least unambiguous prefix work e.g. primus lisp type would suffice update documentation little bit,,
199,6deca44ef394f51a3eda3fe0be45add93ddf8d69,itoleg <forown@yandex.ru>, 2020-02-06 11:43:35 -0500, , fix taint garbage collector 1032 fix taint garbage collector finished observation may reach receiver unspecified order primus component executed e.g greedy scheduler intercept finished observation kill machine result taint ever finalized hit analysis depends introduces taint finalization halt observation happens finished reverts minor accidental change,,
200,948165bc41e686c735ee6dd9396e1da16b052166,itoleg <forown@yandex.ru>, 2020-02-06 10:50:29 -0500, , fix argument attribute callsites plugin 1034 fix argument attribute callsites plugin attribute assigned newly created synthetic argument term callsites plugin take consideration attribute original argument term fix attribute origin argument term assigned new one couple cosmetic change,,
201,6efba4db5a9f4fabfbd16a31376fa4488157ed53,van Gotovchits <ivg@ieee.org>, 2020-02-06 10:48:51 -0500, , prevents cmdliner fetching plugins path environment 1045 option set plugin path option used plugins path fetched enviroment variable however plugins library also look variable add set path search since variable local plugins library fact part interface remove bap main command line interface,,
202,99ad361c068791a1e0b76f940c28c29be32a7262,van Gotovchits <ivg@ieee.org>, 2020-02-06 10:48:40 -0500, , dedocuments function add warning alert 1046,,
203,5c2189fef8ba7056fcfbdb00ef8da3dad9d218d1,van Gotovchits <ivg@ieee.org>, 2020-01-30 13:41:13 -0500, , fix visited attribute attaching primus mark visited 1042 defs visited block marked visited block marked neither anything marked block definition particular breaking saluki totally ignores unvisited block,,
204,7726e93a37c5ab68357ff353857c85269f2dfd13,van Gotovchits <ivg@ieee.org>, 2020-01-28 16:59:19 -0500, , add omake optional compilation backend 1039 fix library dependency omake plugin propagating transitive closure dependency need specify dependency explicitly depend dependency induced existing dependency add omakefiles describe system committed unfortunately oasis mostly contain boilerplate code actually contains necessary flag clean main makefile update gitignore ignore file produced omake add missing header disasm add new build_plugins build faster branch change e.g. look _build plugins update flag implement configure omake forget prefix fix dependency name update missing dependency deletes unnecessary omakefiles omakefiles unmodified let oasis generate far three omakefiles want commited root one global option disasm llvm omakefiles include llvm option hardcode clean omakefile ignore omakefiles general run oasis setup setup.exe twice file generated oasis setup could seen omake clean build_plugins tool make codacy happy switch using bacticks ... build directory plugins folder could file plugins update .merlin _buildless path since omake put build artifact directly source tree need reference without _build folder fix penultimated fix plugins built,,
205,ea8b3158ba4b1a789b4d3d2b49ffb0748e07ae44,van Gotovchits <ivg@ieee.org>, 2020-01-28 09:38:33 -0500, , hack improve build time 1028 hack improve build time building whole bap repository scratch twice fast take minute even faster cpu ssd drive important rebuilding bap take minute even something changed deep bap core like disassembler even regular bap type list trick made possible disable short path option responsible nearly slowdown since nowadays mostly typechecking merlin short path really matter anymore screw short path also disable bapbuild disable cross module optimization cross module optimization enabled default every time module change dependent module recompiled behavior sort defeat purpose separate compilation lead minute recompilation module disassembler changed happen module changed module recompiled interface changed module import interface recompiled theoretically may lead optimal build notice slowdown yet may consider putting particular trick compilation flag disable release hotfix ocamlbuild linking rule bug ocamlbuild prevents caching working properly rule linking library mention .so product never build result caching system notice missing object trigger relinking library ideally fixed upstream want wait upsteam especially since fix simple override rule mention .so file disables compression plugins packed plugins zip file underneath hood pack unpack take time compress much faster especially custom llvm build debugging symbol compression disabled trick also candidate made optional pack plugin one step instead packing repackings  unlimits number job tried ocamlbuild may break travis let try know ocamlbuild good parallelizing task try best see job allright fix invalid depenency cmxa cmxs rule depend also cmxa collection cmx change cross module optimization disabled set imported module unchanged implement build caching plugins built plugins cached inside _build folder instead rebuilt every time temporary folder md5sum transitive closure plugin dependency used cache validator dependency changed plugin relinked repacked additionally script build plugins migrated build tree installing via opam try rebuild already installed plugins extperimental patch concerned portability use md5sum utility present macos however md5 slightly different interface trying use instead probably rewrite ocaml instead better portability performance finally introduces new system dependency md5 sum docker build may fail add development mode configure add new variable called development configure script disabled default enabled enable development option enable certain option optimization general suitable released version right option enabled disables cross module optimization might later attach build time optimization tweak option cross module optimization disabled significantly improve rebuilding time neglible preformance degradation turning affect lot initial build time need disable initial installation,,
206,7be422eeb92391bb3e02e6c65ec99e353d572b0a,itoleg <forown@yandex.ru>, 2020-01-27 15:20:35 -0500,957, enables jane street code style 1038 previously decided disable jane street code style check fast solution turned easier adopt style fight disable check used _tags file since global repository tag file affected subprojects even use ppx jane preprocessor thus breaking package explicitly depend ppx jane also 957 accidentally introduced dependency newer version zartith using compare module use plaincompare ala function old version zarith could still used bap,,
207,0ec9508865e382403bb99864841072d6d92cb389,van Gotovchits <ivg@ieee.org>, 2020-01-27 13:19:13 -0500, , provides versioned backends program unit symbol table 1037 move unit tracking separate module module name controlled configure variable using old findlib based tracking ocaml 4.07 new interface dynlink version newer 4.08 newer provides versioned backends program unit symbol table follow mainstream ocaml make dynamic loading sound safe never problem  long story ocaml 4.08 dynlink module unsound linking module resulted root table corruption segmentation fault prevent behavior tracking loaded unit however able reliably track unit linked program directly ocaml linker using findlib.dynload corresponding functionality dune provide information unit used link host program unfortunately findlib.dynload recording information term findlib package compilation unit therefore order resolve package name corresponding compilation unit name needed working findlib system i.e. meta file package statically linked binary present hard coded location normal mode operation package used build bap present file system pose problem however bap together plugins packed debian package distributed machine meta file available enable binary distribution developed ocamlbuild plugin resolving package name compilation unit name compilation time bap tool built main source repository dependent runtime presence meta file however host program compiled dune build system reflect package name unit name store host file predicate read anywhere outside bap packaged distributed host program fail runtime solution  sine bug fixed 4.08 big problem still impendance mismatch name library cmxs cma load name unit comprise library therefore know beforehand whether library load already linked main program query dynlink name compilation unit name library used linking procedure address problem looking error code code instead failing record library load module repository problem solution probably early drop support ocaml 4.07. therefore decided provide two backends fallback solution still old findlib approach decided make little bit robust minimize debugging time case fail check static information compilation unit comprise host program ensure working ocamlfind meta file terminate program comprehensible message modern compiler use dynlink module guarded ppx_optcomp,,
208,11818795b9b6b1619de7e50c0dd9ee32e4aa8a18,nton Kochkov <anton.kochkov@gmail.com>, 2020-01-24 04:59:43 +0800, , try build ocaml 4.08 version 957 try build ocaml 4.08 version add ocaml 4.08 script try build janestreet 0.12 libs version change compilation added dependency  used caml.filename temp_file exposed  used instead althoug temporary change likely drop support 4.04.1 4.05 4.06 compiler use unix.map_file instead lot warning fixed work progress list.equal take labeled argument anymore merged master updated set compiler list.zip cleaned oasis couple minor fix global build dependency core_kernel removed self bap_recipe probably merge artifact everything compiles lot warning though removed polymorphic compare almost everywhere fix lost polymorphic compare warning fixed one deprecated update testsuite submodule revert change text tag remove new format function bap_ir updated testsuite bap veri silenced couple warning reworked bap future applicative interface updated bap future replaced caml.ignore ignore added travis 4.09 travis added setup.ml.pre.in hide warning setup.ml file oasis line 1773 character alert deprecated module use stdlib instead need stay compatible ocaml 4.07 use stdlib shim library http github.com ocaml stdlib shim file setup.ml line 3467 character 3467  alert deprecated module use stdlib instead need stay compatible ocaml 4.07 use stdlib shim library http github.com ocaml stdlib shim authored gitoleg forown yandex.ru,,
209,b40689e636607b977758af048b79d65684ce48c3,van Gotovchits <ivg@ieee.org>, 2019-12-16 12:46:37 -0500, , add list supported architecture,,
210,ad79508e53e28184305fa58d51c6440ce95f47f6,van Gotovchits <ivg@ieee.org>, 2019-12-04 16:44:02 -0500, , add command recipe remove default command hack 1027 add command recipe remove default command hack introduction command bap recipe system updated possible write recipe default disassemble command use recipe pack analysis self contained entity would like benefit command e.g. would like able implement analysis require fully disassembly target file add command stanza recipe grammar new command stanza play well hack prepending disassemble command first argument file worry command still optional able find much better solution hack responsiblility bap_main.init set default command command specified hack need disambiguate command importantly need specify file argument command line previously required hack summarize command specified disassemble default command recipe may specify command prepended right position user may specify command command like want example consider recipe named test following specification  command option llvm x86 syntax intel option show insn asm option show bil  following valid invocation recipe  bap recipe test command could omitted bap recipe test specify command bap recipe test recipe work fine  update testsuite reflect changed command syntax,,
211,d0e4fced11da38eb90066e696b5e65837c7eb020,van Gotovchits <ivg@ieee.org>, 2019-11-21 21:32:55 -0500, , add show invalid stop error objdump fix show size 1026 add show invalid stop error objdump fix show size bap bap objdump stop error continue disassembling unless stop error option passed new option added print something invalid instruction met specified invalid instruction silenced fix option show size show kind ouputting anything due incorrect default update test reflect new option,,
212,05f6069fd5d368a93235a200351307aea497c34d,van Gotovchits <ivg@ieee.org>, 2019-11-21 18:33:20 -0500, , compels plugins respect bap_main rule 1025 plugins respecting requirement side effect load time registering function even explicitly disabled e.g. mips x86 really work,,
213,276fa178d5dabfda516616dd4f981189db63c905,van Gotovchits <ivg@ieee.org>, 2019-11-21 16:40:29 -0500, , make knowledge.run efficeint bump version 1024 knowlege.run computing every possible slot value ensure stored computation triggered however class lot slot unnecessary slow especially none slot stored computation simple fix ignore slot without stored procedure turn int improvement run function program class affect disassemble commmand using run command affect objdump using,,
214,0d73e137a15e4f494d81f5bb6e5b1b53df32beb7,van Gotovchits <ivg@ieee.org>, 2019-11-14 11:48:58 -0500, , summarizes change 1023 quick summary still lot also dropped pre 1.x version change bap 2.0 time get rid ,,
215,91617ff42efb021a7baeb7685b651c3deefdec41,van Gotovchits <ivg@ieee.org>, 2019-11-14 10:09:35 -0500, , deletes accidentally added play.svg file 1022 planned add readme slow pushed page instead provided link,,
216,b1a0794d864f5395486a4cb724a57b94c7320548,van Gotovchits <ivg@ieee.org>, 2019-11-14 10:01:52 -0500, , rectifies forallsecure spelling,,
217,ff89f92468b8741aaad20c059fb09b25ac996ca4,van Gotovchits <ivg@ieee.org>, 2019-11-14 09:57:29 -0500, , update readme.md 1021,,
218,916df0bf5bdb9832db92f46be73cdbb6f36bc5cc,van Gotovchits <ivg@ieee.org>, 2019-11-13 16:33:00 -0500, , revamps readme file 1019 add file via upload update readme.md add file via upload update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md update readme.md,,
219,db7b1127b6bece750b0e5112b051185548e259b7,van Gotovchits <ivg@ieee.org>, 2019-11-12 14:23:25 -0500, , bap 2.0.0 release candidate 1017 bap 2.0.0 release candidate polish documentation well fix theory declaration function finally bump version 2.0.0 whle revising documentation noticed interface theory declaration allowing reference theory wrapped knowledge monad fixed immediately fell trap recursive instantiation indeed theory may require base lead infinite recursion runtime failure since easy fall trap implementation robust enough either forbid appropriate error message allow appropriate semantics chose latter since theory domain sane semantics recursive theory well denotational semantics invented first hand employed technique recursive module instantiation ocaml doe i.e. first initialize theory empty structure overwrite result update testsuites commit,,
220,77252caae5325f9ed74a9de4b3aae6bdb638d9f3,van Gotovchits <ivg@ieee.org>, 2019-11-12 12:03:18 -0500, , add unknown architecture 1016 add unknown architecture introduces unknown architecture enable analysis program binary jvm clr bytecodes change also line llvm also unknown architecture additionally unkwown architecture could later refined since minimal element architecture domain let develop analysis detect architecture thus making architecture target analysis rather constant input general bap 2.0 moving away arch.t type encoding wide range architectural property computing unit model mostly property mostly structural could hardly captured nominal string even string triple also sweep code remove warning well document new function bap.mli updated testsuite bap veri submodule fixed warning,,
221,e030a8fea0ee56eb6be510bf5caeca03242f710e,itoleg <forown@yandex.ru>, 2019-11-11 16:19:57 -0500, , fix error makefile 1015 fix error makefile break bap installation opam,,
222,24c81b555fc155d7b686f1cd8c73bcc73fbbcb2f,itoleg <forown@yandex.ru>, 2019-11-11 15:27:49 -0500, , fix cache plugin 1013 fix cache plugin resolve couple long standing issue cache plugin provides efficient procedure finding cache index see 966 prevents leakage entry case entry added twice see 967 use find old entry,,
223,242ab92ccf2503c1a04463f1bf90204b3affff31,van Gotovchits <ivg@ieee.org>, 2019-11-11 15:27:33 -0500, , fix plugin initialization issue baptop restores postinstall 1014 yet discovered reason plugins evaluated baptop utility startup loaded linked side effect occured sure going utop internals loading bap.top library work fine also simplifies implementation also restored postinstall hook installs manpages bap utility utility old baptop script ppx bap longer installed obsolete man page installed proper place postisntall hook moved makefile since run plugins installed predicated existence run package installation opam installation bap std package actually produce file right disabled installation bap byteweight manpage since could installed corresponding utility installed create separate post install package,,
224,daa9c8103a90614e53bea9aea3d45e3372cdda0c,van Gotovchits <ivg@ieee.org>, 2019-11-09 11:57:17 -0500, , add online documentation knowledge theory etc 1012 add online documentation knowledge theory etc enhances list command extends knowledge core theory library interface facility let user inspect class property agent theory declared bap give perspective stored knowledge base knowledge object interact list command extended four option agent theory class entity also couple tweak make list command output nicer intuitve file changed mostly property class documented add description refine existing one fix bug theory manager sub operation accidentally flipped add operation,,
225,0479c6e7abb27466fe58371c7641ffc3f720bcd7,itoleg <forown@yandex.ru>, 2019-11-08 09:28:10 -0500, , fix subroutine ordering run plugin 1011 run entry point set subroutine launch subroutine topological order problem real callgraph common entry subroutine reachable instead represented spanning tree reverse postorder traverse graph produce ordering far topological address issue connecting root tree artificial entry point sorting skip visited bonus feature new command line option run plugin set default revisit subroutine already visited applicable set entry point entry point specified run plugin investigates separate justification behavior already visited subroutine entered subroutine i.e. investigated richer context need call directly course heuristic disabled  bap bin echo run entry point subroutine run repetition ,,
226,3bb7dc297564cfaf200198dfc48c0f3ee001accb,van Gotovchits <ivg@ieee.org>, 2019-11-07 14:03:11 -0500, , first class theory documentation 1010 iteration documentation next iteration documentation thrid iteration knowledge look finished forth time later also hide data module knowledge currently used really finished better keep iteration documentation finish bitvector theory started documenting floating point theory finished floating point number restores tag naming bap 1.x function tag.name returned name provided argument name parameter register function guaranteed unique human readable bap 2.0 value reimplemented term knowledge value identifier returned tag.name function became fully qualified name namespace included readable importantly break map term facility rely lot ida integration restores old behavior finished bitv bool float grammar finished grammar going parser finish documenting bap core theory fixed typeid name implement new interface brings back old uuid bap attrs introduces knowledge.name module module handle fully qualified name ubiquitous bap fix bug uncovered new name module store theory knowledge base theory naturally domain therefore store knowledge base create knowledge dependently commit also implement much faster simpler version join operation well add inheritance notion theory update theory documentation fix pass option possible specify one pas fix typo documentation yielded nasty error message,,
227,52cdc20929d253fb5a513f840a81be48071e0358,itoleg <forown@yandex.ru>, 2019-11-07 11:41:16 -0500, , treat jump next fall 1009 treat jump next fall warning change semantics bap 1.x branchers shall reference fall destination output non control flow affecting instruction please consider updating custom branchers one bap 2.0 set destination instruction stored dests slot set known include fall destination control flow instruction shall non empty set destination since previously branchers including destination extra filtering procedure disassembler removing fall destination case still present prevent issue old bap 1.x branchers remove extra step since clang using jmp next instruction next address first byte following instruction lot unoptimized output probably instrumentation initial step jump relaxation case jump next possible quite often remove destination look like fall destination lead inconsistency later stage analysis particular interpret jump next nop instruction disassembler denote control flow term semantic analysis default jump destination analysis already correct i.e. emit false fall edge brancher updated ida brancher fortunately interface ida service rich enough distinguish jump bap side need update ida python package refactored little,,
228,7e0b05b79aeb43962e45ef7acc2a91c134263ba4,itoleg <forown@yandex.ru>, 2019-10-31 12:44:27 -0400,1005, fix issue oasis specification introduced 1005 1007 many new library 1005. fix oasis file order install bap opam,,
229,f502c9172d5bf7cfbc354e357105dae476748e03,itoleg <forown@yandex.ru>, 2019-10-31 08:01:13 -0400, , run unit test travis 1006 turned launch available unit test travis reason launch test running make test target travis use stage even code stage unit test instead install test executables build stage manually launch stage reason install run important one  fix run test currently,,
230,1d0fec41914055f004703ec2b26645b83715a34d,van Gotovchits <ivg@ieee.org>, 2019-10-30 12:59:04 -0400, , introduces bap main unified frontend new command line interface etc 1005 starting moving thing around new bap_main library responsible unified command line configuration file interface make easier embed bap framework bap behave like library i.e. flood channel abort otherwise terminate application etc alghough command line parsing main idea make bap library independ presence command line environment stuff like framework would like embed bap application command line interface one another important change current behavior associated bap frontend i.e. disassemble file apply pass result become plugin introduces new extension point called commmand entry point sort like pluggable main procedure command line command mapped subcommands e.g.  bap disassemble bin dump bir bap byteweight train bap build my.plugin bap help disassemble  basically bap interface docker git backward compatibility disassemble command corresponds current behavior bap made default bap bin dump bir shortcut bap disassemble bin used library framework could easily initialized via bap_main.init take care loading plugins configuring etc possible provide source configuraration command line parameter desired environment even hook logging error handling command could invoked directly usually better command two interface command line one another programmatical via mli encouraging extension writer provide library interface plugins possible one important consequenses change open venue writing analysis depend projec.t data structure one expensive build also relax dependency e.g. would possible write plugin depend bap.std make bap robust make build faster move logging bap_main move previous bap plugin introduces new bap far disassemble command yet implemented well many feature old fronted bap usless fix plus support markdown instead everchanging manblock format documentation could written markdown single string reifying context concrete value compare digest even save load fix bug future bind operator circumstance overriding waiter list thus breaking chain delay context application plugins evaluated add switch flag context digest many initial implementation disassemble command renames conform plugins convention fix arch query lifter query take account different scheme provider may provide different name architecture make nicer error printing clean frontend add command stanza recipe grammar remove debugging output move recipe library universe add dictionary option command line interface option allows specify bunch command line parameter type evaluates key value storage deletes spurious copy bap_recipe module publishes dictionary advertised drop command stanza recipe grammar may reintroduce later far creates problem solves e.g. composibility several recipe well order loading etc add recipe support bap_main look like least painful solution right implement print recipe command refines plugin library make documentation clear change bit semantics feature env make usable add keep option list recipe command make possible reuse command line parameter copy pasting renames recipe plugin recipe_command plugin otherwise conflict recipe option disassemble command disambiguate whether recipe pas option add default action implement usage command mean command default action called command specified know print usage message look alike git docker polishing stuff implents list facility implement format printing rewrite bap command move data class instance centralized location previously class defining state new design open lot opportunity make easier combine existing class later far all_writers all_readers function published later refine interface drop accidentally commited autogenerated file publishes set_module_name function set manually canonical name module usually taken module_name value regular.make arguemnt least project use regular.make set bap.std.project name data class bap list format print existing data type probably much ... add filtering capability list format command fix broken version option add validation show option allows multiple call correspondigly self .when_ready implemented  previously consequent call erasing registered code latter extension invoked could probably dismiss error easier allow register several extension point context plugin make arch ambiguity error explicit fix ppc64 platform old bap elf loader previously assumed emp_mips_x mip64 fact stanford mips architecture long abandoned nothing common mips64 minor tweak mostly moving side effect extension code rather evaluating code module loading move primus_powerpc separate plugin make llvm default loader restores error pretty printer really confusing two loader mean bap elf finally repaired poping opinion everything nice_error_pp also temporary brought back shall handle better bap_main side store configuration single file file location opam config var etc bap config later add location well ability specify explicit location remove std prefix core_kernel prevent warning restores baptop add bytecode frontend restores bap.top library implement raw loader load unstructured file much better old approach source type raw command line parameter specify parameter specific raw binary disassembler command depends loader add objdump command bap command basically extend command ability take input file push raw lifter lower level operates ogre level capable creating image project therefore could used new objdump command another nice addition possible specify file offset length enables extracting portion big binary e.g. following extract main function testing echo binary  bap testsuite bin x86_64 linux gnu echo loader raw raw base 0x40076b offset 0x76b length 542  funny part symbolizer still work correctly able provide name feature basically make raw loader swiss knife unpacker could used run bap arbitrary file besides disassembly testing echo identical raw llvm lifter possible pas man page via doc parameter possible descibe plugin totally body need put anything bundle old way thing still supported worry update doc new command started documentation documented bap_main reiterated interface interface inconsistency noticed documentation process rectified far interface level implementation follow finish interface well yet another pas documentation ready default argv singleton list bap_main.init revamps bap byteweight tool original idea move new rail bap_main accidentally refactoring cleanup couple tweak main functional change compiler set entry beyond selected compiler touched used file training set deduplicated md5 sum prevent repeating entry possible choose loader image possible download signature specified version e.g. bap byteweight fetch version 1.5.0 documentation also written much clear use explicitly reference signature path byteweight plugin keeping explicit filename instead empty file let caching system automatically detect change reflect context digest word signature change content filename disassembler use cached result fix length parameter raw loader length specified offset length automatically reduced offset value tweeks byteweight implementation started use byteweight option often recently indicator revisit byteweight give least renovation first noticed new 1.6.0 signature drastically increased false positive rate acceptable getting old 1.5.0 signature high rate false positive getting revisit retrain signature make sure future signature updating procedure controlled next noticed thresholding comparing sample probability threshold without using prior probability function star despite fact information readily available using available information suboptimal decided devise new decision procedure involve time provide meaningful threshold value chose use bayes factor hypothesis testing compare ratio posterior probability hypothesis another update based observation short prefix signature e.g. 0x48 classification based small prefix reliable thus added lower limit prefix length experiment showed ingnoring prefix shorter give best result experimenting conducted choose optimal set parameter right min length threshold strong evidence parameter give better result new old signature old implementation false positive false negative rate going implement extend trie byteweight interface added general purpose iterators trie interface different decision interface byteweight interface keep backward compatibility packed newly updated interface versioned module additionally reimplemented pretty printer signature try general make output much understandable first step byteweight renovation return probably find even better decision procedure take account individual probability substring factor well update bap byteweight toolkit command automatically compute false positive false negative rate release update opam remove opam opam file added new library need remove set favorable option disassemble command disassembling scenario involves lot allocation begining end therefore better preallocate big arena instead lot reallocation doe little bit setup bap frontend probably bap_main.init look environment affecting keep frontend part note revival old behavior always fronted enabling bactracing bap_debug set handling interrupt nicely flushing formatters exit update tag remove unnecessary primus loader file remove stalled code code longer used anymore part bap fsi benchmark tool longer used needed main code base soon provide corresonding functionality part bap byteweight utility fix recipe printing update testsuite new interface updated testsuite improves build travis spelling corrected update bap veri installation travis update test use bap_main.init load plugins,,
231,6983ef49d929dfc34b94714ddd81cf5aa7277b60,itoleg <forown@yandex.ru>, 2019-10-23 07:35:01 -0400, , fix graph instruction bil.while 1004 problem 998 string instruction rep prefix represented bil.while statement semantics pure data effect therefore break basic block however reify still jump term anticipated sema lifter glueing constituting one basic block assuming complex control flow fix issue specific 998 triggered general could case pure data effect reified non simple control structure conditional move solution instead appending block ensure connected explicit jump,,
232,80f6254a819ebba63fef3482c11e837fa207a0c8,itoleg <forown@yandex.ru>, 2019-10-23 07:29:25 -0400, , prune primus leave event abnormal evaluation 1003 emitting leave event even term evaluate normally instead raised exception result event handler invoked context term partially evaluate expecting evaluation successful led undefined variable error even worse since leave event posted exception handler possible event handler raise exception escaping original exception handler breaking havoc significantly affecting performance,,
233,d768f303327c3b838409678abe031e30787870de,itoleg <forown@yandex.ru>, 2019-10-18 10:59:46 -0400, , initializes plt got primus 993 initializes plt got primus bap 2.0 conservative disassembler previously first instruction plt entry disassembled getting whole entry unfortunately precise disassembly hit analysis based primus least x86 x86 target previously got unresolved call exception soon enter plt entry primus follows whole chain plt resolution mechanism like next example call toâ free  400560 pushq 0x200aa2 rip 601008 0x8 400566 jmpq 0x200aa4 rip 601010 0x10 40056c nopl 0x0 rax free plt 400570 jmpq 0x200aa2 rip 601018 0x18 400576 pushq 0x040057b jmpq 400560 _init 0x28  doe following  400576 increase stack 40057b jump first plt entry 400560 increase stack 400566 load target got tablek  finally 400566 getting unresolved call exception primus promiscuous mode continue execution come crux problem stack broken stack increased twice anyâ popâ orâ ret instruction following execution wrong underlying problem runtime function performs lazy resolution plt got entry stubbed therefore argument passed via stack popped probably right solution would stub function quite involved process immediately obvious link correctly know neither name address another option proposed stop primus going deep plt entry linking got entry default unresolved ratification simple got plt entry address linked need continue raise unresolved function asap removed unused code check memory mapped load reason get whole got table llvm 3.8 need check memory mapped load load address directly .got.plt section use memory.get instead interpreter refactoring removed unused code,,
234,fe44212e4a599ccb88f900adf7a7826918163799,van Gotovchits <ivg@ieee.org>, 2019-10-16 16:19:27 -0400,0, represents rep prefix statement x86 998 represents rep prefix statement x86 old representation inherited bap 0.x representing repz code  rcx jmp next code rcx rcx rcx jmp next  jmp start  next start concrete address current next instruction without saying code bloated graph representation tight representation could also nicecly reified graph could produced using bil statement reflected core theory repeat term instruction following representation  true rcx code rcx rcx    reified following  entry  goto tail body code rcx rcx  goto tail tail rcx goto body  much smaller original another nice property new representation contain absolute jump therefore rellocatable additionally longer classified jump barrier pure data effect caveat  far translation layer reason produce slightly optimal representation namely  entry  goto bogus body code rcx rcx  goto tail bogus goto tail tail rcx goto body  try remove bogus goto tail block possible otherwise let later time time updated bap veri submodule,,
235,fec82c54ba344aca4355733d216c2124494ed8e3,van Gotovchits <ivg@ieee.org>, 2019-10-16 13:22:16 -0400, , fix bug future bind operator 1002 circumstance overriding waiter list thus breaking chain,,
236,27699d9a40e9c9fd5f171d3153477934aa90acb7,van Gotovchits <ivg@ieee.org>, 2019-10-16 13:21:15 -0400, , preserve solution passed fixed point solver 999 fixed point solver accepts initial solution turn could solution previous attempt originally assumed solution applied graph solution could refined graph therefore applied different graph solution entry corresponding entry new graph removed solution turn quite useful apply solution different graph even especially intersecting proposes keep entry solution passed fixed point computation update field changed leaving intact basically guarantee newly computed solution contains superset old solution,,
237,867ffbf7885ffd38a1942a2505fd2f44b0a02777,van Gotovchits <ivg@ieee.org>, 2019-10-16 13:17:52 -0400, , precise subroutine packing 1001 subroutine packing algorithm responsible partitioning set basic block set disjoint set denoting subroutine set designated block called entry dominates block set ideal world partitioning naturally induced dominators tree graph however dominator tree undefined graph contains unreachable node new subroutine packing algorithm introduced bap 2.0 alpha release solved problem connecting unconnected component root node thus promoting entry unconnected component subroutine entry led correct imprecise result e.g. x86 x10 partition true subroutine mostly due lot unreachable small piece code inserted compiler barrier alignment purpose issue underestimated original intent leave assuming later implement analysis refine packing e.g. discovering switch table proving path infeasible however turned hard refine partitioning since process made iterative i.e. monotonicity requirement allows add new path graph remove existing word unwind damage introduced connecting unconnected component root node start scratch every time summarize new algorithm produce conservative irreparable disassembly new algorithm precise therefore efficient instead connecting unconnected component root node postpone decision later time unless explicit information knowledge base node subroutine start treat still disassembling everything using speculative disassembler reifying knowledge graph materialize subroutine present knowledge base therefore letting downstream analysis discover subroutine piece code insert corresponding edge partitioning could monotonically refined algorithm fixed point solution domination relationship except node transfer function transferring node presence forward input unknown open circuit case see algorithm description diff section detail formalization,,
238,2db65905a441d97e4de8240c669767bea6b375c1,itoleg <forown@yandex.ru>, 2019-10-16 08:29:35 -0400, , fix instruction property 1000 instruction property computed semantics tag provided backend bil provided lifter bug algorithm analyzing bil code particular lead classification machine instruction barrier semantic tag inferred bil accumulate newly inferred tag list existing one instead overriding result instruction contained one jump last jump taken account rare case happening rep prefixed instruction three jump latter unconditional therefore instruction classified barrier first accumulate tag make sure override anything second hold invariant instruction posse tag time mean instruction conditional jump preserve property even presence unconditional jump going back rep prefixed instruction classified jump right solution would using statement repeat core theory classified data data effect story completely different,,
239,c0a212664790f16f176b83834de9ce9097c1bbf2,itoleg <forown@yandex.ru>, 2019-09-27 14:39:27 -0400,1342, preserve bir attribute 997 fixed couple minor bug reason case bir attribute survive map alike operation example address attribute lost case conditional call  .address 0x401492 0000eeba 1342 0000eec5 goto 0000d05b 0000fef4 goto 0000087d  fix  .address 0x401492 0000eeba 1342 .address 0x401496 0000eec5 goto 0000d05b 0000fef4 goto 0000087d ,,
240,5dcd39795081b26ac37740d5ce5c5122721e30d1,itoleg <forown@yandex.ru>, 2019-09-27 13:51:08 -0400,987, fix return edge pruning conditional call 996 fix bug introduced 987 finally prune return edge conditional call previous actually pruned call edge,,
241,bbfd00669565c62091535acbd2cbece6ebb38bf0,itoleg <forown@yandex.ru>, 2019-09-19 13:23:09 -0400,973, introduces fine granular view image memory 988 mark memory either code data default bap view image memory segment view practice mean memory disassemble contains code data region although need former one bap.1.x recursive disassembler big issue since address data region unlikely appeared destination real instruction situation different bap.2.0 brand new speculative disassembler eager process much given segment trying disassemble even data region spend time prove code idea feed true code region disassembler prevent processing data region need mark memory region either data code trick elf file already know section contain code contain data needed spread information bug llvm backend since ignored section flag although affect anything worked segment crucial fix order miss code also data region need flag writable flag section take segment contains section sort bug reason section data marked executable find reasonable explanation i.e section flag  marked code section affect anything well since processing data need need fix since need strictly separate code data also coff file bit tough since virtual size section could real one could even like object file reason process easy elf macho file fix http github.com bap issue 973 abandon data region fiexed bug coff section header two field denotates size virtual size raw data size virtual size meaningful executable file size section loaded memory object file field sense equal zero mark memory image module correctly output dasm option need use raw data size instead also fix wrong address object file llvm backend provides relative address piece information section symbol etc default base address well substitute default need work fine executable file deal object file problem becomes visible since actually address use offset instead previously taking offset first byte code address equal section offset byte belonged fix use offset relative offset first executable section first byte address expected removed unused code set zero base address non exec file fix identation,,
242,69fde6f13f38e25e51b82cc40a4f348f3fcd0ce4,van Gotovchits <ivg@ieee.org>, 2019-09-12 08:56:29 -0400, , fix bug adt printer break bap python integration since release bap 2.0 bap python integration broken tid.name return parseable representation knowledge object result getting something like tid deadbeef input python,,
243,8a46bbe944aaa26d944f99bc5f7c6ca2774e31e1,van Gotovchits <ivg@ieee.org>, 2019-09-11 16:22:41 -0400,1213, tweak print plugin print plugin probably oldest plugin bap really cry little bit attention love able give want tweak hopefully make life easier nicer list new feature dcfg print graph subroutine subgraphs enclosed partition well print interprocedural edge also let xdot tool didnt understand several digraph row work bap directly e.g. bap exe dcfg xdot dgraph new outputting format basically dcfg without term i.e. basic block def term also partitioned interprocedural edge tid number properly escaped look like dot xdot interprets somehow even delimited quote new mechanism filtering output instead old print symbol print section still supported new print matching filter accepts property regex format property field could one section segment symbol name symbol denotes name symbol take file symbol table accompanying debugging information e.g. dwarf symbol reconstructed disassembling name meaning symbol bearing i.e. name subroutine concerning regular expression accepted syntax pcre partial match e.g. print matching section text match .text texting use specify word boundary e.g. print matching symbol bmain print main forget delimit regex single quote prevent shell ringing bell bug graphviz  side note graphviz dot xdot due year old bug supposedly finally fixed version 2.40 dot usually unable render complex graph bug triggered randomly depends many variable like font subroutine name etc manifest message visible xdot used afterwards dot correspondigly xdot hang stale infinity  error trouble init_rank    lot tid looking identifier  using version 2.40 via docker alpine able render complex graph believe still hitting issue graph even version 2.40 http github.com ellson mothballed graphviz issue 1213,,
244,16d64fa026aae7be83c53f62e17cbd0433044755,van Gotovchits <ivg@ieee.org>, 2019-09-11 10:41:12 -0400, , represents arm conditionals ite expression 990 far using else statement represent conditional movement arm turn translated basic block patch translate ite expression wich lead much compact representation especially optimized arm code lot conditional move implementation predicate move physical register leave temporary variable since expect temporary variable escape scope predicated instruction,,
245,bb4283ba142914beb93cc4bb96f78f56c00e89e4,van Gotovchits <ivg@ieee.org>, 2019-09-11 10:41:01 -0400, , fix missing block start led duplicating code 989 disassembler occasionally missing start basic block destination jump due improper always premature optimization fixed searching found yet another smaller bug cancelling task afterwards still adding work list ever manifest believe,,
246,0352edfe42ba5560b178b6bf990cf15e81d78f57,itoleg <forown@yandex.ru>, 2019-09-05 15:18:16 -0400, , prune return edge conditional call 987 predicated invocation procedure expected return must perform two action predicate store return address actually control flow transfer e.g. assume bleq foo instruction    call foo   following  goto take_call goto next take_call  call foo return next next  see interprocedural control flow predicated safely assume data effect predicate therefore call expected return course possible craft violate property e.g.   call foo return next call bar return next next  corresponds following pseudocode foo else bar representation could generated global optimization pas architecture actually instruction dispatch several call based condition global optimization possible context sema lifter applied per instruction basis always operates code produced given instruction,,
247,98acabbdb17d08dd38e180608c64720663eaf2fa,itoleg <forown@yandex.ru>, 2019-09-05 08:40:00 -0400, , fix lisp atexit declaration 985 atexit declared function return value  defun atexit declare external atexit  although return integer could lead type error primus let asssume atexit always successful return,,
248,503b3daa0ec5ee9c0b0dfcce1a261c966119da89,van Gotovchits <ivg@ieee.org>, 2019-09-04 09:00:57 -0400, , restores old behavior word.to_int wrt signed value 983 previously signed bitvector converted ocaml integer sign extended behavior restored e.g.  let n_two word.of_int width val n_two bap.std.word.t n_two word.signed word.to_int_exn int n_two word.to_int_exn int  note also new implementation still exactly old subsumes old example bap 1.x following raise error  word.of_int64  therefore old code using explicit word.signed trigger signed extraction probably wrong bap 2.x matter whether value signed fit target representation converted e.g.   int64 word.of_int64 bap.std.word.t word.of_int64 int64 word.signed word.of_int64 int64 ,,
249,273a594cce7ab7ff54855697ac318bd5715d8b21,nton Kochkov <xvilka@gmail.com>, 2019-08-29 19:11:41 +0800, , break work case shell 980 work loop,,
250,1f26e903d10ce1de27289fb69ca7724ca6718ace,van Gotovchits <ivg@ieee.org>, 2019-08-23 16:36:03 -0400, , parametrize primus lisp malloc initialization strategy 979 far simple memory allocator always filling allocated memory zero proposed implementation add two parameter first one malloc initialize memory control whether memory initialized second one malloc initial value value used fill allocated memory first parameter set true default set malloc initialize memory false change behavior primus heap memory randomized break analysis set malloc initialize memory true,,
251,daffbeb2c6213710418be61a82bd349e06470362,van Gotovchits <ivg@ieee.org>, 2019-08-23 16:35:42 -0400, , relaxes cfi check primus interpreter 978 raise cfi viloation continuation finish issue prompt usually corresponds execution arbitrary function top level also open avenue making cfi violation informational since left case concrete instance form two destination expected taken,,
252,48cdbd358ec6d97314a0d4637934eb6f6524ad40,van Gotovchits <ivg@ieee.org>, 2019-08-23 16:35:31 -0400, , fix fall conditional call 977 two case missed 975 conditional call extra jump non taken branch added call conditional,,
253,ae88615c47c1df500928e417d4da5f70c1326c64,van Gotovchits <ivg@ieee.org>, 2019-08-21 20:25:48 -0400, , fix insertion call fallthroughs lifter 975 context  since subroutine set block dominated entry point possible encounter block fall subroutine block terminator could simple move instruction conditional jump call another subroutine let sprinkle description example make concrete example original code  mov rax rbx mov rdi rsi  suppose byteweight false positive marked address function start need lift code  rbx rax call sub_44 noreturn sub_44 rsi rdi  simple case working convoluted example example original code  mov rax rbx call printf mov rdi rsi  assume byteweight introduced function start lift  rbx rax call printf return next next call sub_4a sub_4a rsi rdi  particular case handled also case jump conditional jump fair byteweight reason subroutine split several part speculative disassembler identify piecies code otherwise reachable like switch table destination piece codifiable data inside function therefore quite often case real binary hypothetical situation historical reference  bap 1.6 trying handle three case reason erode migration therefore restores functionality bap 2.0 using much speculative diassembler source situation byteweight nowdays like norm implementation  need distinguish explicit call comming control flow instruction implicit call come fallthrough last happen explicit call shown identify whether explicit call look instruction predicate also search interprocedural edge call graph either exists insturction explicit call need turn call term also looking implicit interprocedural edge exists also need turn instruction call term corner case block explicit call implicit call since term capable time e.g. call malloc return sub_next add extra indirection form block sub_next call,,
254,2773e8cc68a5defedade4e2b79bf5f550b527ab8,van Gotovchits <ivg@ieee.org>, 2019-08-14 16:56:47 -0400, ," bap 2.0 960 new implementation fsqrt based approximation sqrt ramez coefficient initial scrap bitvector still wip bap elementary initial commit new efficient bitvector implementation interface design inspired correctly enforced current optimization capability ocaml end goal bitvector operation could computed without memory allocation even width known advance still wip wrote doc fixed typo finished initial implementation provide specialization probably add later renames bitvector bitvec add auxiliary library since going use bitvec next new bitvector implementation since want alias word addr anymore introduce confusion bap.std.word bap.std.addr module well significandly slow compilation need shorter name however bitv already used opam universe probably short middle ground chosen actually match smtlib name bitvectors also added two sublibraries along submodules enable support bitvectors janestreet suite library bitvec_order provides support interface depend ordering like map set comparables etc bitvec_binprot provides support bin_io together provide function make bitvec.t first class citizen core library moving away old style providing full comparable regular interface module since bloat binary importantly significandly slows compilation relying small interface compartors instead bitvec.set.t use bitvec.t bitvec_order set.t instead use set.empty bitvec_order see module documentation information make bitvec order compatible newer version base add couple missing function fix leftover merge conflict make bap_build indepndent core kernel make build system indepdent core kernel least attempt core theory longer depends bap bap depend core theory also made core theory heavy move new primus list stuff new bitvector wip update value reflec new bitvec interface finish lib part switch unboxed modulus representation since many use case bitvec interface use generic operation modulus created fly integer represented width boxed sever performance ramification instead representing modulus pair width modulus i.e. decide one another decided use modulus representation value used normalization computing every time add two extra operation noalloc ramification choice still need back direct solution count bit rather efficient already msb operation really need know width test whether msb set since msb lsr lor mod though still sure whichever efficient test_bit num_bits implementation rather efficient also reimplemented shift operation longer depend signed extract implemented purely relying bitwise operation use num_bits get width move bitvector bitvec base update oasis file add bap dependency many package dependent bap indirectly make bitvec sublibraries standalone subpackages work separate installation since share meta file break dune general fragile following code allows ymm register cast smaller register new casting operation used extract xmm register ymm register order support monomorphic function sse sysv abi updated recognize function read write xmm0 prototype sin function double double initial example using core theory floating point support hook sin function evaluate user defined polynomial using horner method current example computes geometric series fix warning regarding type scope imm run signature working merlin file initial function core theory inaccurate sine range reduction intial sine cosine implmentations using remez approximation reverse coefficient order fix fceil bug need fround implmentation work one test made refactoring recommendation seperate polynomial evaluation range reduction reconstruction renaming wip refining knowledge theory added knowledge return operator stop recomputing value renaming better comment refactoring new ceil multiply constant instead division fmod well better representation value one test pass sort dgit add undo initial abi change fix indentation optimizes sin computation time better idea flip sign using simple xor operation also reduction step store whether correction needed variable need check twice nearly finished implementation serialization left add serialization value implement domain function drop old module implement sophisticated typing implementing different type class value object implemented merge join idea tomorrow allow user provide lattice data structure knowledge module finally typechecks started rewriting core theory term least empty theory ready add symbol knowledge finish adding symbol knowledge decided forfeit symbol importing right theory manager compiles var using knowledge object parser also compiles core theory compiles implement symbol visibility keep track whether public symbol add namespaces importing enough namespaces ... really tired abstract peristence add class order instead using binprot directly abstract persistence class later easily provide backing store support hoc data type like redis new interface also easier use provides functional combinanors enables partial ordering class add documentation clarifies class samenames specificness add support knowledge data representation maybe add support integer data like bitvectors instead letting downstream library ... add support immediates sure interface yet sooner later need  primus 2.0 nearly ready trying figure proper signature run primus require component component part handled static knowledge satisfied signature add flat domain made optional flat flat domain stratifies set two class empty something empty bottom element element empty non comparable basically set empty element satisfies domain structure moreover domain defined even want derive domain optional representation actually want flat domain example addr option representation actually mean either knowledge address object knowlede mean 0xdead knowledge 0xbeef promise fullfiled knowledge monad run well least promise specific class bap.std finally compiles move new primus bap_primus folder decided keep old primus intact maybe update new primus machine instead getting rid restores primus bap new semantics branch fix print plugin longer pp_domains add missing depedency core theory renames decide fact simplifies class type remove hierarchy really need necessary could organized concrete family class using approach possible declare abstract class refine concrete declare concrete class start also make class type constructor covariant class could defined polymoprhic instance make obj slot covariant revise sort system implemented simple algebra sort consists sort atom application sort atom could either symbol number algebra typed atom universally quantified magic module provided enables breaching type system sort type could restored serialization safer phantom type reconstructred sort definition rather set arbitrary place sort definition make sort refinement safe theory.var var add unk branch bap.std.typ wip nearly finished rewriting new semantics move ir_jmp new semantics move whole new semantics longer bil insn.t semantics.t renames link label link binary attribute label unary extends derived interface object tid.t theory.label perform side effect knowledge monad move bap new runtime creates program abstraction refines label update major component new interface reverts primus component old primus fix bug bitvector representation fix value merging function order confused fix generator still sure implemented indirectly changed merging strategy insn still need something better merging value add runtime lock runtime bap function relaxes lock otherwise impossible use still need figure enable sort protection preserving usability example least allow read state without check make bap_c_abi error printable refines jmp representation dropes role along multiple link increasing impendance mismatch representation reification bil old bil jmp could two destination destination since new representation accepting many destination tempting use jmp term represent control flow represented several jump new represenation two destination denote dst alt detinations optional therefore destination   dst alt semantics  undefined goto call call   call denotes call noreturn call denotes call return loosing ret denoted alt reified back call instead ret order recover call correctly need know whether denotes function entry middle function general undecidable property therefore extend notion call interprocedural control flow transfer value dst alt field abstract variant two option indirect vec parametrized vector expression denoting set possible destination resolved tid parametrised destination label print negative number subtraction positive easier read cfg properly linked fix call wiring separate pas real pas though rewire jmps entry block call corresponding subroutine note also affect recursive subroutine jmps self entry block treated interprocedural jump nice side effect pas enforce entry block incomming edge fix bug work fix bug variable susbtituter note new bug substituter always broken bap variable substitution exposed via substitute_var function capture free contrary function description saying body still substituted even variable captured enclosing let expression fixed hardens bap_bitvector implementation bug due bap_bitvector internal representation breaching abstraction packed bitvector new implementation carefully establishes boundary accidentally treat packed representation bitvector also textual representation bap_bitvector restored match previous representation pas test print argument type using old bap type possible argument type representable old bil use old notation printer print otherwise fall back normal sort representation update elementary function fix signed comparison function make disasm failure powerpc test verbose fix object string representation fix representation tids piqi serializers fix flat domain unit test passing previously derived flat domain treating value noncomparable empty therefore non comparable fact safely assume equal value contain equal informational content thus informationally equal therefore decided define flat domain via pair value empty value equality operator remove debugging information refines reconstructor symtab lifter fit new semantics symtab change  first refined symtab interface make clearer shadow callgraph symtab store call edge callsite denoted basic block callee could real function also present symtab external represented name distinguish two kind call explicit implicit explicit call produced control flow instruction e.g. jump branch call implicit call produced via fallthrough control flow one subroutine another yes happend support since 1.6 therefore possible one callsite two call edge one explicit call another implicit e.g.  __printf_chk call __stack_check printf ...  lift two call  sub __printf_chk call __stack_check return next next call printf printf ...  general block 0,1,2 call edge modeled api two function explicit_callee implicit_callee returning optional type call edge inserted callgraph using one function take optional argument distinguish two kind edge commit also fix remove function removing function call one removed reconstructor change  update new symtab interface fix externa call classification previously inserted fall edge actually opposite always explicit call lifter change  lifter implementation longer depends bil purely implemented using new interface basically rewritten nearly scratch still passing test still insert synthetic subroutine needed anymore sake backward compatibility probably introduce back maybe separate pas new implementation precisely handel different variant call trying keep cfg representation tight possible i.e. introduce unnecessary block also conservative wrt inter intra classification jump whole program lifted ensure goto never leave boundary subroutine turn jump provide guantees call basically mean output impossible find unresolved goto gotos form goto .... new lifter thoroughly commented please continue reading  wip complete rew recursive descent disassembler new implementation supporting delay slot order execution general conservative disasembles linear sweep disassembler much space much easier understand maintain since 200 line code however still bug work progress make disassembler robust print disasembly ascending order previously printing reverse postorder actually complicates reading dasm output printing fall destination clean disassembler look like work fine add new constrained superset disassembler embeds constrained superset disassembler monad fix bug ror x86 semantics order expression confused switch new superset disassembler still lot work done look promising fix couple bug add retraction fell memory fine jump boundary fix retraction case delay slot fix delay slot implementation worked delay equal print disassembly increasing address order change scanning mode scan much needed longer add root failed instruction instead end scan find code restart first unsatisfied instruction root classify everything code data memory footprint optimization using scoped object represeting link save enomorous number byte previous approach creating code object input memory fill slot even created unique symbol instruction thus inital markup 100mbytes binary take gbytes ram new approach much memory efficient constant space also time faster probably due time spent integrating new disassembler bap still unhappy _all_ name choice renamings refactorings basic disassembler keep table created disassemblers reference counting specifically delete disassemblers want one disassembler per triple speculative disassembler renamed disasm.driver speculative disassembler one could create speculative disassembler using driver driver create disassemblers fly possible disassemble mutliarch program one pas even create cfg contain block different architecture change type insn.t program semantics instruction include address fixed fixed point commit due fire alert add optional join method domain big change semantics knowledge system since piece knowledge provided joined existing knowledge e.g. provide must consistent existing collect impossible override existing knowledge something different well modulo really control consistency order join function provided client library domain defined possible pas join function provide least upper bound two value indicate conflict therefore complete lattice stucture property conflict top value join functon provided inferred order function given new semantics reach fixed point iteration reduce burden merging knowledge provider since rely default merge function note still possible define recursive property arbitrary computation system compute fixed point computation previously possible automatically rely default join operator extent could seen optimization good example really benefit new semantics several independent knowledge provider like lifter jump destination provider really interested others providing adding information different slot case lifter set.union case dests moving forward towards well defined fixed point semantics two new update promise run provide joining forced preserve monotonicity promise computed every time property accessed stressing whole system ideally shall rerun promise new information want maintain whole dependency graph promise alternatively promise may look property decide whether information essentially make promise self recursive first look current value produce better neccesary therefore evaluate property slot obj combination computing fixed point slot object set afterwards initial value computed slot read set another problem evaluating promise could every time generate non comparable result provide made monotonic probably previous commit need enable information joining without introducing expicit cycle change enforces independence order execution ensures fixed point termination although sound nice come price every time conflicting opinion like different name function proceed without actually giving precedence one another opinion sometimes consensus could found either create complicated lattice hold information e.g. using set possible name alias symbol use lattice name predicated namer somehow prune conflicting information thus bringing back life problem order alternative solution currently table think knowledge ordering like treat two different name e.g. .init init_proc equivalent perspective informational content e.g. neither bearing information another rewoke monotonicity requirement instead implement joining promise probably extend interface two function one preserve monotonicity another override explore possible data representation valid theoretically sound approach come huge implementation reasoning burden like indeed admit entity might different name differnt circumstance different name applicable therefore name instead string shall become discriminated union different name e.g. name name provider even enable ranking provider make easier compute principal name etc wip implementing new agent based system update description come yet another fire alarm push move service knowledge runtime renames bap_state bap_toplevel also toplevel module rewritten previous commit top level like interface type toplevel.t denotes top level computation monad declared toplevel.t bap.std turned back monad outside bap.std add alias slot program label class program label may multiple name equally correct fix abi demangling usage tid.set_name since variable knowledge rename consistent function used change name moreover demangled name true name rather view therefore demangled name added set object alias small renamings new symtab interface make typeid bap.std.value abstract fix pretty printing first step merge bap.std.value new knowledge framework basically two option researched adding one slot contain dictionary value turning tag slot latter natural harder implement unifies bap.std.value knowledge tag weaker version slot store attribute directly knowledge base switch project new engine fix insn delay computation instead providing one promise compute semantics instruction providing promise number branching instruction support promise asking semantics name triggering fixed point computation therefore ended computation per instruction register one promise also request semantics match architecture fact need semantics could get name program object though make mips dependent bap.std sake demonstration knowledge capability decided keep note also fine request semantics arch end slight inefficiency delay provider called twice case arch matched otherwise return empty instruction restartred make sure fixed point reached extract directly semantics instead reruning lifter reminiscent old infrastructure faster program reconstructon went second 100ms bin general semantics depend bil add join parameter domain definition function lift instruction previously creating new instruction object every time lifter called implementation essentially guarantee instruction address call lifter rest call get semantics ready knowledge base exp bil bir domain sure whether give anything probably could get rid ... new implementation universal map ongoing experiment going substitute core univ_map map optimal implementation following optimization applied key inlined tree braches branch inlined level tree height stored balance 1,0 data stored leaf last optimization could actually pessimization experiment also finish switching new map far work correctly optimizes tree representation even storing value intermediate node leaf add inlined attribute monad library sure effect make worse revise class sort system observed slot polymorphic class therefore upcasting value base class fact since change class annotation stored value therefore extra allocation value.get information forced revise class sort system little bit efficient much straightforward first class defined set sort term ocaml class indexed sort type variable create multiple instance class parametrized different sort slot longer depend sort index class index therefore instance class matter sort could accessed without manipulation core theory level rectify naming issue two sort previously assymetric sort effect effect sort effect pretty confusing also theory.value module symmetric theory.effect module well theory.value theory.effect type make writing type much easier finally sort system also revised since notion sort knowledge level theory sort fit nicely longer class expected sort finally since ideal empty value expression domain since introduction unk type bil longer need make expression domain optional also save allocation grain salt optimization win lot performance improvemnt memory footprint yet another pas dictionary optimization dictionary twice fast core dictionary small input loose leadership drastically larger input input larger 1000 ten time slowe counterpart couple optimization improved performance overall picture still two thing optimized key uid precomputed stored key use simple integer instead relying extension constructor since latter turned rather expensive lot guard second value inserted consider case inserted head previously diving leaf level although expected optimization fix performance gap large tree unfortunately next suspect balancing procedure obvious tedious optimization instead creating disbalanced tree balancing one step also interesting core balance function recursive guarantee one balancing per insertion guarantee continues working optimized tree already time faster core tree using time memory still corner case unfinished intermediate step havl tree implementation far work x10 faster map case able maintain rank rule next iteration try use wavl approach rank rank increment instead classifying tree tree wip tree rank balanced wavl style tree mostly ready would call bonsai tree course name already used fix missing case rank_increases function forgot case optimal lower level maximizes number final optimization cleanup show touch leaf better fact drop insert function microbenchmarks run even faster compact representation case small map 1000 entry running time faster map small map entry actually expected payload running time faster core map even faster core hash table   name time run mwd run mjwd run prom run percentage  dict 307.58ns 327.02w 12.22 core 2_517.40ns 892.04w 0.36w 0.36w 100.00 hash 531.14ns 201.00w 21.10   huge map million entry still faster core map time spend despite fact always allocate least two time core map time difference big since ocaml runtime doe depend linearly number byte rather number root basically fix inline attribute keep confusing inline inlined add caching bil lifter remove caching bil lifter caching semantics level break overall semantics program semantically equal instruction still different term label least might indeed error design lifter probably considered semantics rather container semantics however quite obvious separate given use label control flow term update primus_machine new class representation switch custom type key type key core provided type_equal.id relying non robust many check rather slow many check representation use int typed counter check uniqueness key needed case ocaml robust enough check key equality usually need work add setup code setup corresponds 64m 200 bigger minor heap help minimize number word get promoted still keeping memory footprint rather low fixed increment megawords better relative increment memory consumption come close dozen gigabyte doubling memory may lead disaster gigabyte actually needed finally increased smoothing window size fit better bap flow reconstruction phase lot allocation usually much calmer analysis phase tbh see real effect changing window size optimizes map monad also remove dead code add inline attribute destroys indentation ocp indent broken attribute set optimization level default fix name external reference ogre attribute fix indentation well restores correct merge function fix opinion ignores empty knowledge far storing empty knowledge provided directly via promise suggestion besides increased memory footprint big problem except opinion data structure latter anything special handle empty value therefore empty value treated normal participating election result majority provider authorative provider information provided empty knowledge empty knowledge selected commit fix issue addition decided ignore attempt store empty value knowledge base mere optimization everything except opinion ensures symtab symbolizer provide empty name since authorative source information shoudl sure provide bogus informaton override information provided agent enables image rooter symbolizer projec created might better provide separate plugin depende image far let move small step enhances ida plugin error messaging error code really say anything revamps objdump plugin first fix bug entry name fun plt considered function name fun e.g. memove plt memmove plt 0x10 considered memmove function let lot problem note normal behavior objdump name known find closest known location add offset also since gave little bit love plugin notably performance optimization process input fly create list input line slow oom plugin rather large input file compile regular expression every line simplify regexp get rid string ops perfectly express need regexp need apply extra check string operation get rid extra allocation create substring pair list use z.t instead word represent address take space faster easier parse need substring add optional demangler since objdump demangling new obdump demangler option control demangler used set disabled disable demangling add rooter capability objdump plugin objdump plugin also providing information function start store interprocedural edge symtab publishes barrier property improves program lifting make precise eliminating false edge based instruction semantics respect inter fall jump add support kernel style relocation back idea fix fixups soon possible prevent problem spreading far away previously touch lot code fix havoc caused unfixed jump therefore new solution fix bil code based available relocation information everything else work correctly automatically main problem representation external call represent jump since latter requires concrete address simple cleanesst solution would use special statment fixup string later resolved correctly named function since solution totally confined within bil plugin rather safe robust change also added back synthetic procedure keep abi api pas rewritten new framework fix sexp printer human readable also register new serializers fix label printer bap.std.jmp print prefix named tids fix asm printer insn since assembler representation could set via interface longer guaranteed normalized normalizing printing update bap lisp change core theory interface better error message byteweight fix bitvector comparison function optimization accidentally removed size comparison make code start function start none provided old tradition treat first address root disassembly root intially provided user commit restores tradition prevents two subroutine claim identifier distinguishing subroutine name guarantee name provider provide equal name different subroutine therefore extra cautious assign tid subroutine name check already assigned track call target subroutine forget mark target known call subroutine callgraph reconstructor correctly partition whole program cfg taking extra care mark subroutine target call belong valid chain i.e. erased cfg disasm test also updated reflect new change knowledge runtime allow changing architecture address reset knowledge new cfg reconstruction algorithm conservative reconstructs unreachable block update call1_3ret test algorithm correctly produce cfg block remove debugging output fix instruction property restores conditional edge old style cfg test least simplifies lifter since barrier implies return well least fixed instruction property ensures lifter fill insn driver respect barrier therefore reclassify fall barrier new inits small doc update ensures speculative fall taken speculative slot word speculate code barrier reachable case speculative delayed slot speculate speculative slot since cpu allowed speculate word previous fix work well mips delay slot always taken even barrier update microcfg test lone sub instruction may longer form valid graph since form chain end jump also update assert message four node saying three node checking three node restores proper to_string of_string function bitvectors update mini project test since bap reject invalid graph pas valid input make mini project hack llvm prevent linking error toplevel loading llvm installation produce file unresolved external secondary dependency namely setupterm e.g.  usr lib llvm 6.0 lib process.cpp.o reference setupterm usr lib gcc x86_64 linux gnu x86_64 linux gnu libtinfo.so definition setupterm  although llvm config link static system libs correctly mention ltinfo name still remains unresolved modern ubuntu system adding lcurses lncurses resolve issue course may break installation target system introduce temporary directly oasis file see behave wild later add proper configuration collect enough information provides least basic information bil avaiable update testsuite downgrade code dialect understandable older ocamls big deal likely still bumping lower bound 4.07 even 4.08 since going update core v0.12 even v0.13 final release update opam file remove newly added libs make important property persistent make knowledge state serializable remove toplevel state project simplifies toplevel representation add knowledge caching frontend implement caching project state splitting project state derived component want store latter portable could computed state currently state disassembler later add callgraph add serialization callgraph well publishes new function module eta expands function mitigate bug 4.06 compiler bump version 2.0.0 alpha maybe beta better suited let humble wire call toplevel via library keeping undocumented right soon overwritten separate toplevel library independent bap.std update testsuite enables boolean operation bitvec context done casting bool expression bitvec via ite var.create along parser well done long time ago ... look like done case stop reflecting temp let bil lifter used previously since proper support temp bil since bil using var safely pas variable literal let parser handle properly disables bil optimization normalization neither needed anymore though could still used especially pass going disable update testsuite fix scoped variable reason made mutable corrected keep signed unsigned cast abstraction accidentally lowered primitive bit operation enables two optimization cast expression two new rule two consequent cast size type could reduced one case e.g. low low low high pad extend i.e. cast cast cast two consequent cast type s.t inner cast size bigger outer cast size drop inner cast e.g. low low low true cast type reasoning assume low high always narrowing pad extend always widening publishes bil semantics bil_semantics interface load bil_main later add command line option select appropriate semantics enables back optimization although bil semantics self optimizing still missing global optimization like elimination useless assignment aka value propagation prevents test working later disable optimization pass bil denotational optimizer handle case update testsuite fix small bug optimizer need architecture none present context translate jump special fix semantics printer value.pp_slots function work assertfaulting sexp_of_f function dict really implemented printer handling empty filter print everything documentation also add instruction destination inspector deletes stale file btw good idea add useful small primitive syntax module later fix bitvector sexp representation still using binary notation sexp prettifies inspector couple domain add dump knowledge option bap dump knowledge base later add much better tool knowledge introspection visualization far blocked bap frontend work since need better commandline interface bap 1.x provides far better nothing implement fair control flow primus primus 1.x commit interprocedural control flow following return stack instead ignored return statement always following control flow graph several ramification fragile jump could properly classified return statically work tail call fair misinterpreting malicious program benign new implementation following true control flow i.e. ignoring jump call computed destination case dynamic control flow diverges static control flow raise cfi_violation exception properly trapped manner implementation  use shadow stack approach interprocedural call expect return push return value call prompt stack contination linked call destination executed bounded pushed prompt stop reached pushed prompt i.e. control literally returned continuation return normally e.g. primus lisp primitive called either case pop prompt pushed compare prompt value expected raise trappable exception diverge updated submodule bap veri fix bitvec.to_int converter negative number fixed minor bug module naming",,
255,aefa92bb6621208d708102be17753374e562f3cc,van Gotovchits <ivg@ieee.org>, 2019-08-13 11:59:08 -0400, , fix argument call return observation 970 fix argument call return observation call return filled argument evaluate actuals obviously obviously argument actuals could already overwritten deeper story language detected prototype function classify argument passed reference i.e. passed non const referenced however value passed reference reference passed value fun fact notice two place call return observation made namely primus interpreter primus lisp interpreter latter always right thing passing input argument appended output former since analysis always focusing external function malloc strcpy strlen etc handled primus lisp interpreter never noticed anything fishy thanks isweet finding issue update testsuite properly init bap veri sub sub module,,
256,c59951972736a250cd20c63e05fe001553b2ca34,itoleg <forown@yandex.ru>, 2019-08-13 11:57:47 -0400, , fix taken pathes primus promiscuous mode 971 bug far pathes taken primus promiscuous mode sometimes far away real one possible forked continuation could return execution would continue forked point fix bug forked continuation never return,,
257,ff149590675a9cf070e310d35a73d3ce0efd1616,van Gotovchits <ivg@ieee.org>, 2019-08-06 17:33:04 -0400, , fix primus self seeding generator 964 memoizes value read primus memory layer memoizes value produced static dynamic layer two consequent read yield value fix primus generator due design error primus self seeding generator never worked expected recreating access problem design error rather implementation therefore fix beatiful really hard implement correctly create init function int type proposed implementation allows init forall int init init generate generator type probably better solution making generator type primus component turning higher order function since dropped generator primus 2.0 favor much easier use mechanism think worthwhile spend time current implementation update doc error message,,
258,3b0236267c0bc8c094b53015f7b3f86aad352acf,van Gotovchits <ivg@ieee.org>, 2019-07-31 12:21:45 -0400,5," fix signed division tweak division representation 962 fix indentation fix signed division tweak division representation signed division operation improperly encoded bap since long time ago probably since introduction x86 0.9.x back 2014 reported icemonster 961 overflow check incorrectly treating singed integer signed division negative number triggering division error exception small history research showed bap 0.8 overflow check commented signed division corresponding wrong comment implemented implemented look like later porting code uncommented new implementation implement correct check well tweak code produce compact readable code well lifting code also readable look like specification code generated signed divsion  bap show insn asm show bil idivl 0x8 rbp  high mem rbp u32 pad mem rbp u32 else pad mem rbp u32 low rdx .low rax  cpuexn  else    cpuexn  else low .low rax pad extract rdx pad extract   unknown bit unknown bit unknown bit unknown bit unknown bit unknown bit   unsigned one  bap show insn asm show bil divl 0x8 rbp  pad mem rbp u32 low rdx .low rax  cpuexn  else   high low .low rax pad extract rdx pad extract  else cpuexn   unknown bit unknown bit unknown bit unknown bit unknown bit unknown bit   small smoke test implemented program  include stdio.h include limits.h int stest const char msg int dividend int divisor int expected int result dividend divisor result expected put pas else put msg  unsigned utest const char msg unsigned dividend unsigned divisor unsigned expected unsigned result dividend divisor result expected put pas else put msg  int main int argc char const argv  stest stest stest stest 10,1,10 stest 10,2,5 stest 10,10,1 utest 10,10,1 utest 10,1,10 utest 100 10,100,0 utest uint_max uint_max,0 stest defined 10,0,10 put fail reached   correctly yield pass run bap example run note test really cover overflow check actual overflow happens know force compiler generate code lead integer overflow division anyone know please tell switch trusty look like switched xenial default week",,
259,52d625ceb031221f440cc148047eeb07cc092bd9,itoleg <forown@yandex.ru>, 2019-06-27 10:07:58 -0400, , preserve random value primus 958 primus generates new random value course generator policy assigned every time env.get called unbound variable change behaviour make primus remember generated value i.e bind variable first time value requested,,
260,f595843cb771083a7c2f0fc70d89f59366c0a97f,itoleg <forown@yandex.ru>, 2019-06-16 14:38:05 -0400, , add x86 stack pointer handling external call 955 add x86 handling external call far stack pointer register properly handled primus case external call reason asymmetry function calling x86 abi caller side allocates stack slot returning address callee sise responsible clearing case external call dependless lisp stub exists call remains unresolved stack restoring result stack pointer point proper place solve problem incrementing stack pointer lisp call return work unresolved call well refactored little,,
261,3d8bcfae39238c49fdefb0fd7d186336d56662e9,itoleg <forown@yandex.ru>, 2019-05-28 14:44:50 -0400, , add apline based dockerfile 952 add apline based dockerfile add docker file build testing version bap based ocaml opam2 alpine image dependency installed depext manually removed apk update removed env varibale,,
262,906b7cb63210af668ec36eedfd26a88bf0e976f0,itoleg <forown@yandex.ru>, 2019-05-15 19:09:49 -0400, , fix taint sanitation 950 fix taint sanitaization previous implementation worked different way preserved taint kind requested sanitaization removed others removed function object_of_kind,,
263,cc4276439e1921819f8c542d5844c82830514b2f,itoleg <forown@yandex.ru>, 2019-04-29 13:08:47 -0400, , switch primus taint default 948,,
264,5031df0a3053a20fb9bdbea6a448e1c37b40d9e8,itoleg <forown@yandex.ru>, 2019-04-29 13:08:26 -0400, , add link odoc documentation 949,,
265,1fc8dd90c0f646203df94cbc3c269fbebbb05b69,itoleg <forown@yandex.ru>, 2019-04-22 10:11:06 -0400, , fix constant tracker 947 couple bug prevent constant tracker working correctly typo lisp code forgotten signal loading storing,,
266,5ccc7e2d427f53c826e3b63c00744774d851324b,ourchaux <jprodi04@gmail.com>, 2019-04-11 19:53:31 +0200, , fixing common typo 946,,
267,85ed4f381c02f7ecc8350946ccebb85d8134c26a,itoleg <forown@yandex.ru>, 2019-04-10 16:10:50 -0400, , fixed bap version readme fix documentation 945,,
268,753fd072867190658ec20a174097f048e4b34141,itoleg <forown@yandex.ru>, 2019-04-04 13:39:39 -0400, , update bap version 943 update bap version update changelog,,
269,e598acc8e7df856659c5ea43ff312575e69e99c4,itoleg <forown@yandex.ru>, 2019-04-02 15:08:17 -0400, , enables function multiple entry 926 enables function multiple entry refactoring solved symtab data minor bug fix wip two algorithm without repetition finally end last algorithm seems everything work togetherworks refactoring fixed oasis file fixed minor bug added check fall call taken yet allow instruction share byte refactoring fixed minor bug bug fising check shared edge refactoring work optimization refactored save edge renamed function,,
270,7268622cdfc998eaee507804607b9718c18ee9d8,itoleg <forown@yandex.ru>, 2019-04-02 13:53:33 -0400, , fix dependency bug primus lisp doc 941,,
271,1554ffd5f8f535b1df052e8c444001739dc16c82,itoleg <forown@yandex.ru>, 2019-04-02 09:27:44 -0400, , fix toctou bug bap log 937 fix toctou bug log protect mkdir moved lock tmp dir updated review,,
272,651003f422de5705b84f277c2c6a6f7893356dcc,itoleg <forown@yandex.ru>, 2019-04-01 16:46:34 -0400, , fix order argument callsites plugin 939 add order subroutine argument ocp indented removed upper bound llvm version added comment used easier way compare intent updated comment,,
273,d9277ca7563d27ea6c5e1d03b0a66bfa0f4d143f,itoleg <forown@yandex.ru>, 2019-04-01 14:44:36 -0400, , add primus observation lisp call 940,,
274,44a8d3bc4b2709a9fa8d8496ad2f1e3348869ae4,itoleg <forown@yandex.ru>, 2019-03-30 13:06:50 -0400, , removed upper bound llvm version 938,,
275,fa2c7d737bf242187317c44092ebcdc4ebaebbf7,itoleg <forown@yandex.ru>, 2019-03-29 11:57:24 -0400, , includes plugin name configuration path 935 includes plugin name configuration path updated testsuite wip updated testsuite,,
276,2124102540a15e2fe06c9ab5bc8ed81a4eeb30ea,itoleg <forown@yandex.ru>, 2019-03-28 17:26:21 -0400, , enables memory sharing instruction 932 allow instruction share byte refactoring fixed minor bug bug fising check shared edge refactoring optimization refactored refactoring,,
277,ca29c044ddd037eda33ac4742876b1790d2986e8,itoleg <forown@yandex.ru>, 2019-03-27 12:29:02 -0400, , add compiler option byteweight 934,,
278,b7307875f8dd3fca8bbf62f91eae7c470f12c2f3,itoleg <forown@yandex.ru>, 2019-03-22 14:49:38 -0400, , enables bap elf 933 enables bap elf restored elf loader well bug fixed multiplied instead lsl,,
279,3cacae74a5f45601312e2c5dd776907aa70aaa46,itoleg <forown@yandex.ru>, 2019-03-22 14:07:09 -0400, , update vagrant docker file 928 update docker vagrant file added libncurses install removed bubblewrap building dockerfiles minor update quote added delete libncurses,,
280,689335e0c2b34808c515b314c42a915dd7a1c03e,itoleg <forown@yandex.ru>, 2019-02-27 13:48:31 -0500, , fix adt printer 927 add hexadecimal prefix address,,
281,09a2521510cf7f0afb2fa518a66a95eab321f300,urnersr <turnersr@users.noreply.github.com>, 2019-02-21 08:02:21 -0500, , sse xmm0 abi 923 following code allows ymm register cast smaller register new casting operation used extract xmm register ymm register order support monomorphic function sse sysv abi updated recognize function read write xmm0 arg take width size sse abi check number argument pas size variable arg,,
282,2ed58c1c80754d5ceb3314c3559cd31f76871678,itoleg <forown@yandex.ru>, 2019-02-18 16:47:54 -0500, , x86 enhancement 922 add couple x86 instruction add endbr instruction despite implement instruction special stmt still important cfg integrity since usually appear beginning function add call instruction operand override prefix previously lifting call instruction prefix present x86_disasm doe job needed prefix comprehension least part operand overriding,,
283,397343d368ad7c45200338f5d31c325fd3f4e1f3,eoni <blue.snow013@163.com>, 2019-02-04 21:57:16 +0800, , fix i64 import error 920,,
284,e074e5585e6c69adad40db6ba247c9b7987e1d81,itoleg <forown@yandex.ru>, 2019-01-31 14:54:23 -0500, , bap elf compatibility safe string 916,,
285,fd205a26dd21959afda298e02741c8d66d7772f7,ark Laws <mdl@60hz.org>, 2019-01-31 23:30:12 +0900, , jane street 0.11.x library compatibility minor fix 820 add .merlin path jane street 0.11.x compat core_kernel.std core_kernel fix warning loading bap pretty printer compatibility jsc 0.11.x library fix opam deps raise minimum required ocaml version 4.04.1 add arch linux depexts use rather core use ocamlbuild ppxlib plugin built core.v0.11.1 opem travis travis test update travis update deleted previously deleted file utop related fix fix graphlib fixed test fixed bapdoc ensures open core_kernel core_kernel.std returned utop full solved deprecation not_found exn re_posix re.posix md5 caml.digest silenced warning compilation without unsafe string added compiler travis removed unsafe string flag optimistic add 4.06 4.07 added 4.06 4.07 updated upstream removed senseless string .travis.yml,,
286,b4caff9ff5f53ef859b4ad97235bf559393a52a1,itoleg <forown@yandex.ru>, 2019-01-30 17:02:47 -0500, , preserve brancher information bil code instruction 914 attempt solve problem incoming edge renaming ensures destination conditionless insn type refactoring bug fixing refactroing rectified algorithm minor typo fix one typo fix minor renaming simplified function,,
287,4d52b23924c0e38dd3ccc47bfd269216206c33d8,itoleg <forown@yandex.ru>, 2019-01-30 15:25:56 -0500, , fixed building travis 915,,
288,25fe085e46c071e3553298558b7c95265f87bec9,itoleg <forown@yandex.ru>, 2018-12-12 08:55:46 -0500, , update readme file 908,,
289,ed57d9a95205279e1513766675e72d3ba8c37351,van Gotovchits <ivg@ieee.org>, 2018-12-11 16:46:48 -0500,907, make dead code elimination conservative 906 maked dead code elimination conservative noted 905 optimization pass sometimes miss opportunity remove obvious assignment underlying reason compute conservative set variable used interprocedural communication variable member set delete assumption could used subroutine version variable protected last definition one could used interprocedural communication propsed change relaxes protected set remove last version variable set dead variable fix 905 make sound unfortunately original proposal unsound assumption last definition preserved implied assumption last definition used interprocedural communication totally wrong liveness property propagated call indirect jump member protected set using ssa form def use analysis inherently intraprocedural preserve liveness variable interprocedural scope use protected set tighter approximation would reinstantiate liveness call indirect jump however would require tampering ssa algorithm want right updated solution reinstantiates liveness protected variable end block even block call even jump liveness killed first use protection propagated last definition remove dead function note shall merged 907 merged drop debug info drop change irrelevant proposal make cleaner,,
290,6ac07935a2cdb6c91e4c6c67202e62cfe968098b,van Gotovchits <ivg@ieee.org>, 2018-12-11 12:11:25 -0500, , fix free var dominators computation algorithm 907 algorithm kick optimization level ... break everything bug trivial kill set computed live set hence block defining variable used bug affect 1.5 version optimization level note still subtle problem algorithm come everything dominates unreachable block lemma dominators algorithm altough theorem valid wrt graph theoretic definition unreachable indeed implies block reachable circumstance binary analysis unreachable block block might reachable know path word approximation control flow graph unsoundness graph propagated unsoundness dominator tree computation lie vein idea optimization level unsound underlying graph,,
291,a755ec72f6440c7ab0851b052efd0ed4f72990c6,itoleg <forown@yandex.ru>, 2018-11-12 09:03:54 -0500, , change error message case empty file 896 change error message case empty file change error message bap using emptyt file  touch tmp foo.txt bap tmp foo.txt failed create project file format supported expected executable library kernel module raised file src import0.ml inlined line 234 character ncalled file src error.ml inlined line character ncalled file src or_error.ml line character ncalled file lib bap bap_project.ml line 264 character ncalled file src or_error.ml line character   edited message better output check input file added strip refactored little updated testsuite,,
292,ded29fd17b90e89e70fe34afe5895717b51177ee,odyroux <cody.roux@gmail.com>, 2018-11-09 15:06:34 -0500, , implement helper function creating manipulating partitâ 892 implement helper function creating manipulating partition address various issue wrt performance clarity base test structure partition change merge union run ocp indent modified file write test partition module write test partition module fix parenthesizing bug test,,
293,d2a18af4bbaa87f490e63bd9c1023d40fb9d26e0,itoleg <forown@yandex.ru>, 2018-11-08 11:52:35 -0500, , add integration ida 893 ida integartion refactored little ida launch terminal version work error message refactoring typo fix,,
294,2812d5ae421fb19389076a279a7321586b85e64e,itoleg <forown@yandex.ru>, 2018-11-08 09:16:37 -0500, , prevents bap fail signature missed 897,,
295,27378d2efb713fc4faad597a94d359563a0a9994,itoleg <forown@yandex.ru>, 2018-10-30 09:30:02 -0400, , escape string generating ogre document 891 escape everything digit letter fix comment,,
296,2da4847b9c051da313458df0dcdd32966a312cae,itoleg <forown@yandex.ru>, 2018-10-10 15:46:08 -0400, , ensures static linking llvm 4.0 889 turned llvm 4.0 default linking mode shared want e.g debian package broken bap depend llvm.so previous request library return extremly short list  ubuntu ubuntu xenial llvm config 4.0 libs lllvm 4.0  shared library use new flag llvm config  ubuntu ubuntu xenial llvm config 4.0 link static libs lllvmlto lllvmpasses lllvmmirparser ...  ,,
297,b1feeee1c4ef1771b5b45c8d1a8439838389082f,van Gotovchits <ivg@ieee.org>, 2018-10-10 14:00:30 -0400, , fix list recipe option 888 broken since enabled absolute path loading,,
298,5b164cd1022aa61460cbf92d07c2ac992e1cc4b3,itoleg <forown@yandex.ru>, 2018-10-09 12:40:30 -0400, , add llvm 7.0 support 887 add llvm 7.0 support edited change file,,
299,c080b918984807a621320f5ea200985173a52da0,itoleg <forown@yandex.ru>, 2018-10-06 09:00:31 -0600, , silenced warning deprecation 885 silenced warning deprecation silence warning bap code compilation bap also turned module bap.mli deprecated way emit warning record next deprecate module according documentation attribute level attached specific node syntax tree  module struct deprecated since ... ... end  next work expected although case deprecation end module make readable anyway look like choice  module struct ... end deprecated since ...  fixed documentation,,
300,1e9ac452a62ebf6842a92f7d175a45970b9fe532,itoleg <forown@yandex.ru>, 2018-10-05 15:04:17 -0600, , update rtl mips powerpc plugins 884 removed code written mainly support run test longer needed adding bil plugin everything work box,,
301,c4505cb947c3a10c7eef14cdd82b8c82a4b82111,itoleg <forown@yandex.ru>, 2018-10-04 15:08:00 -0600, , handle correctly format change cache module 881 prevent bap fail cache entry doe exists made sophisticated updated refactored little,,
302,20370695a22bfb8a08ddf99cdc9e66cbaf5fa94a,itoleg <forown@yandex.ru>, 2018-10-04 15:07:46 -0600, , removed unexhaustive pattern matching warning 882  file plugins x86 line character 322 warning pattern matching exhaustive example case matched ymm0 ymm3 xmm10 xmm1 ymm4 xmm15 xmm6 ymm1 ymm11 xmm12 ymm15 xmm13 ymm10 ymm9 ymm13 xmm3 xmm9 xmm11 ymm5 xmm2 ymm7 ymm14 ymm8 ymm2 xmm0 xmm5 xmm7 xmm4 xmm8 xmm14 ymm12 ymm6   make expression effective address involve sse register also let quote intelâ architecture software developerâ manual volume section 3.7.5 specifying offset  offset part memory address specified directly static value called displacement address computation made one following component displacement bit value base value general purpose register index value general purpose register scale factor value multiplied index value ,,
303,8bb0bc18b79133fa996fbfd39f687d9cdec6e4ce,ijnard van Tonder <rvantonder@gmail.com>, 2018-10-04 09:58:55 -0400, , simplify module syntax 880,,
304,6eb311e1e3931f8ec3092d4b9f2144387e6a540a,itoleg <forown@yandex.ru>, 2018-09-19 17:30:07 -0400, , update changes.md,,
305,a10009aecc5365e2312ca00b33c8685f78c24b11,itoleg <forown@yandex.ru>, 2018-09-19 13:23:17 -0400, , update version change 876 update change file,,
306,dbf2934a8e44f9bc264f91ed25696eb310b6f41f,itoleg <forown@yandex.ru>, 2018-09-19 09:48:17 -0400, , fix build travis 875 update travis env,,
307,7096bb3fdc51f38ba0627b8a77392ae191649149,van Gotovchits <ivg@ieee.org>, 2018-09-18 09:28:38 -0400, , add constant tracking analysis 872 analysis track static constant binary i.e. value hardcoded program purpose analysis value static constant initialized constant value computed static constant value constant tracker analysis called primus lisp using static constant point static data function see primus lisp documentation documentation function along constant tracker add sample analysis example check hardcoded value report hardcoded socket address incident every time hardcoded socket address used one bsd socket api function another analysis implemented check null pointer module report null pointer dereference incident every time static null pointer dereferenced,,
308,1338a3cd97718c5470948d4110496d310dd008f3,nton Kochkov <xvilka@gmail.com>, 2018-09-17 20:32:50 +0800, , fix typo primus memcheck test 874,,
309,e7e41ae51cdfb587e9b5587ba417d2aa26542e92,itoleg <forown@yandex.ru>, 2018-09-13 20:43:37 -0400, , fix llvm backend 873 look like build bap llvm 3.4 couple minor bug fix,,
310,63d61b9cb8cf41c5899191739ca922291b8a99e4,van Gotovchits <ivg@ieee.org>, 2018-09-13 11:43:02 -0400, , provides information sensitivity analysis 871 analysis based primus taint engine fully implemented primus lisp consists two module taint source module automatically detects untrusted user input correspondingly introduces taint system sensitive sink monitor function considered sensitive untrusted unsanitized user input report policy violation function called tainted argument possible specify arbitrary sanitization procedure general extend policy rule code thoroughly documented obvious use,,
311,1c8ec5be3599ad8a78649139b3102b0458ad827d,itoleg <forown@yandex.ru>, 2018-09-07 16:10:02 -0400, , make main bap brancher default one 870 since still merge brancher source need set default one used case many branchers available,,
312,9c7444eecdf3c9d56fe003fbf4fce002e1cafd94,itoleg <forown@yandex.ru>, 2018-09-07 13:05:37 -0400, , improves relocation handling 768 added relocatabale reconstructor work progress working refactored relocator refactoring added bap_relocator technicaly may add module plugin also update api pligin dependency register_pass function since api applied relocation resolving work progress working made relocatable bracnher default one lot debug code last commit removed rel_fact refactoring bap_relocator refactoring removed wrong dependency add cfg lifting function still problem bil reflect jump instruction destination case relocation presence lead wrong program one possible solution add whole program cfg sema lift function destination search need think local relocation external symbol added cfg renamed bap_relocator added symtab find_call add_call refactoring identation fixed bug call discovering resolved jump call return fix doc moved everything toa plugin removed unused refactored refactoring removed unused lot change added symtab function add_callee find_callee became possible add name callee side reconstructor useful detection external call lifting wip made workable added sema_lift lookup callees indirect call updated testsuite review accepted remove unnecessary change edited typo fixed doc refactored brancher updated testsuite fixed bug cross section call let harden resolving external function check indirect call address symtab address symtab call external refactoring updated documentation fixed predicate resolving jump,,
313,9d3c263c2e9caf6691e04a47e4805d60eb377bb0,itoleg <forown@yandex.ru>, 2018-09-07 08:53:33 -0400, , add const propagation 830 add const propagation refactored little reworked added simpl test renaming restored lost associativity add optimization distributive operation removed division case added plus minus case refactoring test refactoring added test binops removed debug code simpifications cast extract test verbose test bit refactoring applyed new simpl case recursively reworked test little added test case added test bug fixed minor bug fixed updated helper updated test wrote simplification like term added separate module consts stuff remmoved unused code stylistic change refactoring added forgotten case refactored returned back couple rec call exp fixed minor bug added guard pretify added draft bil analysis plugin refactoring thought pipeline rectified bass registration invocation refactored bil pipe rewrote select_basses minor detail corrected stylistic change fiexed bug pretifying exps added one case removed self mapping fixed minor bug added guard case rectify applyng extract cast added concat extract cast case updated cast refactoring added type readability worklist con propagation refactoring fixed bug cast simpl refactoring refactoring improves bug fixed test added moved const prop plugin doc string stylistic change moved everything plugin fixed copy propagation refactoring refactoring edited graph building little refactoring bug fixing ended graph approach redone consts renamed small portion refactoring rewritten bil dead code elimination refactored refactored simplification fixed test little refactoring need test bug fixed canceled cmdline changed refactored refactoring refactoring important fix dead code elimination refactoring bug fixed rectified symtab little updating dead code elimiination work reconstructor rectified reconstructor one iteration whole graph updating dead code elimination variant dead code elimination type infer fix merge master stage symc testsuite removed memoization deleted unused file updating name added memo updated bil refactored little added pass option remade registration library provides interface registration various bil analysis plugin selects analysis refactored little removed fold_consts brancher bit updated doc refactoring refactoring bug fixing fixpoint fixed minor bug normalization process prevent normalizeds store expression normalization fixed fixpoint order increase probability loop detection implemented simple live dead analysis bil plugin affect virtual variable refactored cmdline argument docstring bil plugin fixed live anaysis loop major change see description moved everything bap library keep_ites flag normalization exists anymore added test add updated test added propagation unknown refactoring fixed test,,
314,2a5c0764086bc92e327807fd29ce2e7b83196cd3,bhishek Singh <31144719+abhcs@users.noreply.github.com>, 2018-09-06 11:22:04 -0400,550, add ida pro brancher 868 add ida pro brancher specify brancher ida utilize ida brancher information adapted 550 861 use hashtable storing ida branch,,
315,4248ae7435b11b06cbe93dd20132beb0a5f2ec34,itoleg <forown@yandex.ru>, 2018-09-04 08:38:29 -0400, , enables bap elf 866 enables bap elf order use bitstring.ppx use ppx_driver ppx_custom predicate according bistring meta file ppx_jane used omit bap_elf diretory tag file added lost dependency updated flag,,
316,cd08f88f72406f4c5718cdba6cc2e465496023d1,itoleg <forown@yandex.ru>, 2018-08-31 16:40:27 -0400, , added bap signature dependency 867,,
317,de59e619d147c1b74c3d533cb51fb25dc5e1515f,itoleg <forown@yandex.ru>, 2018-08-30 17:57:53 -0400, , implement deadcode elimination pas optimization 857 improves dead code elimination intends speed dead code elimination plugin first add cache every next launch use result first one second need discussed irl reduces number ssa form calculation subsequently speed whole plugin bug fixed bug fixed updated review sorry indented buffer bit effort could required review change consts propagation dead code elimination separated one another previously number time called number time dead code elimination theoreticly speaking change could kill unused code since propagate consts reaching fixpoint eliminate dead code caching take account result consts propagation refactoring refactoring bug fixing brings back interleaving constant propagation dead code elimination also optimizes constant propagation part computing set virtual variable propagation done const propagation ssa form run const propagation ssa form need track defined variable since obviously defined ssa added cmdline flag propagating consts real variable i.e register add level optimization set variable affectd analysis could defined comamnd line refactored reduced memory usage reduces memory usage applying analysis subroutine separatly multiply copy subroutine memory like added attribute updated term refactoring fixed bug sub digest sub name taken account digest could different similar subroutine renamed dead code elimination optimization updated testsuite bug fixed feqw update review edited doc issue warning dead code elimination,,
318,f408c83cebfee784df275f733803689b9e53d3a6,itoleg <forown@yandex.ru>, 2018-08-30 17:57:26 -0400, , save cache index bin_prot 865 save cache index bin_io previously used sexp storing index turned slowly save index bin_io solves problem fix ida servide lock forgot close lock unlocking update review remove tmp case trouble,,
319,eab9f1e1a9a8de65d52dcb440444ce070f826b35,itoleg <forown@yandex.ru>, 2018-08-29 17:09:18 -0400, , fix call search reconstructor 863 update root reconstructor actually restores previous behaviour lost due lack test comment  extends list root address cfg node input edge effect noticeable case pure code input since list root empty case therefore reconstructor create empty symtab add comment code avoid loosing behaviour future updated documentation reconstructor bap.mli since look like quite outdated updated testsuite updated comment,,
320,74e06f1692d1fb3f81464b1220965c00defd5883,itoleg <forown@yandex.ru>, 2018-08-29 17:09:00 -0400, , deprecates x86_env.nums correct place 864 moved deprecated x86_env.nums previously compile time next warning  warning deprecated cpu.r since 2018 user instead  i.e new definition deprecated previous one,,
321,392c9597d3f517a8e629c060657a5afdf9bf4bee,ijnard van Tonder <rvantonder@gmail.com>, 2018-08-21 04:21:31 -0700, , compile strict sequence 860 without change compilation fails passing strict sequence default dune compilation flag left hand part sequence must type unit,,
322,0c05c802ffa936d769b7a7908ef0144580475f29,itoleg <forown@yandex.ru>, 2018-08-15 07:37:49 -0400, , fix bug producing unreachable block 856 remove wrong root stage diasasm significant problem happen one rooter give wrong root even miss instruction build wrong cfg remove wrong root early stage disassembler influence late one updated,,
323,06b516eaf24e48e2e92eab27186165fc5ba8ac91,itoleg <forown@yandex.ru>, 2018-08-14 08:37:35 -0400, , optimizes reconstructor symtab brancher performance 855 rectifies reconstructor symtab brancher rectifies reconstructor symtab brancher respect performance without adding new behaviour breaking existed one rewrote reduced number iteration node edge cfg bit inefficient implementation add_symbol function every addition symbol led filter whole table although enough info reduce call small fix check instruction jump subsequent call fold_consts could heavy instruction updated review refactored,,
324,e73753bcc095340688d2a08dcc633dd8a02b271b,itoleg <forown@yandex.ru>, 2018-08-09 22:26:49 -0400, , fix deprecated args 854 warn user case using deprecated flag also warns deprecated parameter used flag renaming renamed,,
325,c81a1576eabc0a86601df7e4da0023e1608602fc,itoleg <forown@yandex.ru>, 2018-08-09 21:46:17 -0400,720, clean tmp ida every time ida called 853 clean tmp ida every time ida called fix http github.com bap issue 720 remove dump file tmp ida ida launch refactored added info message renamed updated review,,
326,8edcdccc57c503cdfc8d9ffca9169512e8306575,than <thanassis.avgerinos@gmail.com>, 2018-08-07 15:17:01 -0400, , ite handling primus allowing user disable ite hoisting 850 semantics ite evaluation primus follow latest update bil specification http github.com bil pull extra option bil normalization function enables user preserve ite desirable,,
327,903b3d7c404b40ee6252f83174f1130a3584663f,itoleg <forown@yandex.ru>, 2018-08-03 12:30:00 -0400, , update travis env 851 update travis env last change ocaml script default version opam 2.0 break build simpliest fix set environment variable opam_version 1.2.2 also add script directly bap like time ago still suggest wan easy way fix issue thier side added one env var cleaned returned old version script,,
328,c23f0a62ba11901ace52a9fce65fc182d41f71d5,ustin Jamner <dijamner@me.com>, 2018-06-27 09:56:35 -0400, , fix mem type 847 fix store typing comparison fix bug eval time type inference,,
329,b4ecb65eafb318e885541be0c3602e73f1e6519e,than <thanassis.avgerinos@gmail.com>, 2018-06-25 23:40:34 +0300, , adding support xmm ymm enabling user map reg var.t 845,,
330,a691e22626e1541e9ad07e4f49baf9c1f982145d,than <thanassis.avgerinos@gmail.com>, 2018-06-19 09:35:30 -0400, , remove special handling jump cpuexns linearization 844 necessary correctly handling control flow bil containing pattern one example explaining necessary following  false cpuexn    would translated  goto takeoff landing goto next takeoff false cpuexn return landing next   note takeoff basic block missing possible control flow transition next block removing special case jmps cpuexn handled normal statement within block,,
331,91db2ae45a62f4ed61097942e558a1ffb2dee748,van Gotovchits <ivg@ieee.org>, 2018-06-08 11:08:32 -0400, , add trap memory division operation 840 add trap memory division operation division zero well faulty memory operation may terminate primus machine previously terminating specific exception however exception actually represented cpu abi specific interrupt trap proposed implementation provides mechanism allows trap exception translate machine specific interrupt ignore fix catch low level mechanism based idea linker used trap unresolved name trap provide corresponding observation could used install trap trap special name could linked either permanent basis observation trap hanlder assigned invoked concrete behavior depends particular trap e.g. linker trap hanlder invoked instead missing code division zero handler return result undefined memory fault trap fix problem terminate also introduce pagefault exception represent memory trap keep segfault non maskable non preventable exception addition provided several new operation linker interface unlink code unlinking useful removing trap lookup useful restoring trap showcase also reimplemented part promiscuous mode use pagefault trap prevent segmentation fault also fixing efficient instead mapping one byte page mapping page size besides others commit also provide fix 839 fix typo pagefault handler function name handler handler handler handler http picture bart simpson generator bart simpson generator.php line hanlder,,
332,625932a395f64e47b2466d3db89c4cef408b063a,van Gotovchits <ivg@ieee.org>, 2018-06-04 07:35:45 -0400, , several primus fix 841 fix order trace event previously leaving function first block operation attached function leaving event performed entry block fix kill operation machine implementation kill operation hard beast hard suicide i.e. kill current machine also hard routinely kill machine scheduler usually rescheduling context machine would like kill switching another machine take control previous implementation kill wrong killing state without switching continuation case self killing basically switching state leaving machine continuation proposed implementation delay machine killing current machine performs next fork note easier use implement primitive would die kill current machine tranfer control machine however add new primitive primus machine interface without bumping version let keep future primus 2.0 documentation update totally irrelevant primus sorry putting want create separate minor stuff add couple new function posix interface prevents memory leaking killing finished machine previously waiting end kill machine proposed code kill finished machine greedy scheduler save ton gigabyte memory fix bug mark visited plugin add progress report progress report show percentage visited basic block basically code coverage also previously marker broken marking term remove memory corruption check memory corruption check verifying freed pointer allocated real life incredible amount false positive fix bug primus warn unused analysis also extends bit add machine number incident backtraces general useful see backtrace change machine case greedy scheduler promiscuous mode exactly point infeasibility could introduced change order machine run run plugin subroutine selected running topological order starting function marked entry point usually _start function case executable also added option run machine isolation i.e. separate computation might useful someone,,
333,d8dddff8e9f49851b86627b80f189d08378ff10c,itoleg <forown@yandex.ru>, 2018-05-31 09:58:27 -0400, , added powerpc test 838,,
334,75ea6ec274cd7f82d56cbafb7e806e301c61b38b,itoleg <forown@yandex.ru>, 2018-05-23 11:44:32 -0400, , updated testsuite 837 pcmpistr skipped anymore veri test,,
335,d8806c950ebefc22d04a2bc23fbdf7c909f6ce1c,itoleg <forown@yandex.ru>, 2018-05-23 07:42:09 -0400, , fix packed x86 836 fixed pcmpeq pcmpgt pmin pmax added test oasis fixed pcmp str instruction bap produce bil refactored pcmpstr edited test pcmp added pmaxsb pmaxsd insns updated test,,
336,ce4bd1e25fa0685f4db433c0ab6bc0a4ad86bdba,itoleg <forown@yandex.ru>, 2018-05-09 10:48:53 -0400, , fix bug reconstructor 834 fix bug reconstructor actually ignored lot call,,
337,7de7c81e6a346a88e7b77d6a685698a97002d6b3,than <thanassis.avgerinos@gmail.com>, 2018-05-06 22:51:50 -0400, , adding support cdq cdqe cqo cwd cwde cbw opcodes 833 adding first implementation cdq run ocp indent,,
338,b9cf186b153a420e3318f167afe811c93ecd123e,ustin Jamner <dijamner@me.com>, 2018-05-03 16:27:04 -0400, , fix function name docstrings 832 fix function name two documentation string incorrectly refer another function,,
339,3f59d13029b5468f0f08f6df28b420cde8784c9c,van Gotovchits <ivg@ieee.org>, 2018-04-30 15:16:01 -0400, , fix primus 831 renames eval_cond eval cond observation plugings option pass attribute textual identifier use lisp style dash separated notation eval_cond look inconsistent make parameter evaluation visible far bypassing interpreter lisp parameter evaluated however would like see first class computation particular help track value used undefined add generic taint attached observation observation occurs every time taint attached value fix compare macro primus lisp macro wrong expected old version type i.e. applied byte return byte made using macro little bit hard need apply casting usually need int new type int propagates branch computation promiscuous mode actually major breakthrough issue preventing taint analysis work promiscuous mode killing taint branch condition long story promiscuous mode flip floping branch condition reach much code possible however since assigning branch condition loose taint associated existing condition information analysis add solution derive new value old one using need assign need assign  change machine spawning algorithm run pas previous implementation spawing machine unhierarchical depth first order essentially creating resumption new aproach bfs linear important easier reason fix typo sign macro,,
340,6ab4f103951bc945ae054095b918aacdda6cdf80,itoleg <forown@yandex.ru>, 2018-04-18 17:42:31 -0400, , fixed compilation issue bit machine 827,,
341,3d1294c12350282f3596877cbdfc41d1b9c43179,than <thanassis.avgerinos@gmail.com>, 2018-04-12 19:11:46 -0400, , add eval_cond observation allow observing non taken conditionals 823 adding eval_cond observation allow observing non taken conditionals jumping observation allows observing taken conditionals well jump destination extra observation allows observing condition evaluated taken branch including false one condition branch _after_ taken branch observed reflect new observation primus lisp,,
342,0dd6742d7a5d3bc0676aa5d9c0d56e95f00c5c21,ustin Jamner <dijamner@me.com>, 2018-04-12 19:11:19 -0400, , rename solution init value default add solution.derive 824 rename solution init value default add solution.derive reset counter derivation new solution,,
343,dc0dc1cefea2a7d7200b1bb2bed0ede8c2eeb02a,van Gotovchits <ivg@ieee.org>, 2018-04-12 16:38:34 -0400, , intoduces dependency callsites abi pass 822 disclaimer  really reluctant since beginning introduce dependency since depend implementation abstraction far look like easy solution hope last long problem  bap exe taint reg malloc_result may may work depending order pas invocation root problem taint plugin depends callsites plugin requires argument information present subroutine definition since abi pas autorun pas aplied pass including callsites pas however since better user experience haha decided mark taint pas autorun pas also run autorun phase along dependency quite possible run abi pas solution  added dependency abi pas altough insisting depend implementation abstraction better solution also abi pas became abstraction facto bap actually pas pipeline pass may devise better solution later currently gitoleg working generic solution service service provider allow build right dependency analysis,,
344,472d86a3f4cd1a2cfde355d17f52eea8cd531a51,ustin Jamner <dijamner@me.com>, 2018-04-10 16:07:16 -0400, , add interface binnable interval tree 821 add interface binnable interval tree fix comment clearer simplify internal definition fix comment clarity,,
345,6dbaa2d8a4d20701981382d6ddac20d2d528773e,itoleg <forown@yandex.ru>, 2018-04-10 07:44:25 -0400, , add mangling duplicated subroutine 813 first approach mangling duplicated subroutine implemented like iteration existed subroutine refactoring work progress check program type made program type private change review reimplemented map placed everything program module refactored added check nothing changed,,
346,e19c24a8cef0b1f4620b41418901e2945d75924b,itoleg <forown@yandex.ru>, 2018-04-09 15:57:29 -0400, , rectifies powerpc lifter 809 updated model started fix branch insns replaced wrong using fixed doubleword using rotate typo refactored couple instruction,,
347,293ad103125a38452baa3855e5b3638be65c4121,van Gotovchits <ivg@ieee.org>, 2018-04-09 07:52:14 -0400, , enhances document recipe 815 case happen know already recipe bap main chainges summarized recipe longer requred zip file plain file directory accepted recipe interface documented couple issue fixed process filename longer substituted however builtin parameter prefix substituted path recipe root folder rest copypasting excerpt bap man page describe recipe system detail well motivational example  recipe description recipe either single file directory optionally zipped contains parametrized specification command line parameter support file necessary purpose recipe make bap run reproducible share one simple file recipe instead bunch script together verbal instruction since recipe introduce extra layer abstraction actually simplify interaction bap hiding unnecessary detail recipe also provide mechanism building ready solution sharing user use recipe specify name using recipe command line parameter recipe parameter could specified colon separated list key value pair see recipe parameter information read recipe description including list parameter resulting command line use show recipe command line option list installed recipe use list recipe option main necessary part recipe recipe specification file contains list recipe item arbitrary order item either command line option parameter reference another recipe item share syntax flat expression i.e. whitespace separated list string enclosed parenthesis first string list denotes type item e.g. option run entry point malloc calloc free option command requires one mandatory parameter option name arbitrary number argument passed corresponding command line option one argument concatenated comman symbol e.g. option opt translated opt option argument may contain substitution symbol subsitution symbol start dollar sign followed named optionally delimited curly brace disambiguate rest argument one built parameter called prefix substituted path recipe top folder see parameter command learn introduce parameter parameter command introduces parameter recipe i.e. variable ingredient could changed recipe used parameter command argument required first argument parameter name second default value used parameter set last argument parameter description substitution symbol replaced default value parameter value parameter passed command line example parameter depth 128 maximum depth analysis option analysis depth depth parameter set command line substituted 128 otherwise receive whatever value user passed finally extend command like include statement preprocessor includes ingredient another recipe make sure introducing loop command one mandatory argument name recipe include recipe grammar recipe recipe item recipe item option parameter extend option option atom atom parameter parameter atom atom atom extend extend atom  come description recipe command line parameter  recipe val load specified recipe parameter specifies name recipe along optional colon separated list argument parameter following syntax name arg1 val1 arg2 val2 .... name part could either path valid recipe name recipe would search recipe search path name may omit .recipe .scm extension brevity valid representation recipe either recipe file i.e. file consisting list expression directory valid undefined file zip file contains valid recipe directory see recipe section information recipe zip file unpacked temporary folder removed program terminates otherwise recipe resource used restored previous state e.g. input output file provided modified modification persist  list recipe option work  bap list recipe uaf performs use free analysis fuzz testing recipe derive inline description provided direct testing recipe  description recipe printed  bap show recipe uaf description performs use free analysis primus promiscuous mode fuzz binary specified entry point maximum depth set depth rtl instruction output found use free incident incident file parameter depth maximum number instruction per path default 8192 width maximum number visit block default 128 entry entry point default subroutine command line run run entry point subroutine primus greedy scheduler primus limit max length 8192 primus limit max visited 128 primus promiscuous mode primus lisp load posix memcheck malloc limit malloc primus print incident incident location call return primus print rule tmp recipe 943c0231 491a 43a5 86de select.scm primus print output incident primus lisp channel redirect stdin tmp recipe 943c0231 491a 43a5 86de stdin stdout tmp recipe 943c0231 491a 43a5 86de stdout report progress log dir log ,,
348,878e39cefe08f4e63c7cc610f641f645fdfc06a6,van Gotovchits <ivg@ieee.org>, 2018-04-09 07:51:45 -0400,806, fix incorrect store operation introduced 806 816 fix incorrect store operation introduced 806 possible store word arbitrary width byte storage fixed also updated documentation added sanity check fix endianess bug memory primitive even one byte write endianness matter argument byte,,
349,12deb0f5c977f6c58e0c7746c8f88ce271f01f51,van Gotovchits <ivg@ieee.org>, 2018-04-09 07:51:31 -0400,798, fix bug primus 818 skip evaluation mem variable store operation since variable meaningfull value fix cleanup procedure term evaluation case abnormal termination cleanup procedure called ignores return statement big change actually return later make robust ignore double return first one function returned based return statement present well defined second one function exec finish finally call return destination disaster fast solution evolve later add machine switch machine fork observation also simplifies swith fork operator reason holding machine identifier stored continuation probably reminiscent debugging stage case dont need anymore halt machine switch ion greedy scheduler observable effect though better make explicit disables call bypassing make call add failsafe machine resume computation case call return use failsafe machine everything went allright handle empty block branch correctly cosmetic change fix parameter order linked lisp stub one previous commits 798 claiming need preserve order argument provide efficient frame allocation apparently need preserve order least proper signaling call call return message commit reversed order argument since reversed http github.com bap pull 798 commits fix strncpy strncmp add strpbrk summary parametrizes memory allocator zero sentinel value returned malloc called zero argument implement buffer overflow check check part memcheck check suite verifies function string.h api called correctly correctness property following pointer begining string passed function belongs heap region pointer end string must belong heap region,,
350,dcafa2fd9c3021f23c136d4e9fb78513017b338e,van Gotovchits <ivg@ieee.org>, 2018-04-09 07:51:17 -0400, , hardens ida plugin 817 run ida newly created temporary folder ida fails end break rest bap produce extremely confusing error message bap exe produce sys error exe file directory,,
351,8ededb66b5698b0cc050c08287749d3d95ad36f2,than <thanassis.avgerinos@gmail.com>, 2018-04-09 07:51:02 -0400, , expose value.mul primus layer 819,,
352,21c47fa80e1a83e4d47764d52a7cb660c43a6ea5,itoleg <forown@yandex.ru>, 2018-04-04 14:51:44 -0400, , improves macho loader 799 improves macho loader previously little endian binary expected macho loader caused unexpected behaviour big endian binary fix also fix problem entry point old macho binary contain called lc_main command entry point part binary structure absent workaround problem emiting elntry point address first executable section updated resolving entry point macho stylistic chacnges refactoring better definition relocatable file updated entry search help numeric_limits add swapping relocation_info structure wrote whole swap relocation_info added useful comment future fix typo bug fixed indirect symbol address refactoring debug code effort refactoring effort refactoring solved endianess problem fix comment change review fixed endianess issue refactoring updated testsuite,,
353,d5816c187d16a2e60882130b41f417d9d4aa1fc9,itoleg <forown@yandex.ru>, 2018-03-30 14:10:20 -0400, , add ogre dump format 810,,
354,249bfb44120ebd87f3c6c657e840991cb789df56,itoleg <forown@yandex.ru>, 2018-03-29 16:08:22 -0400,801, fix call search reconstructor 807 fix http github.com bap issue 801 fix problem disassembling pure code function bap output anything file reconstruction consider block reconstructor input edge function start make sence e.g case library guarantee every function called function library,,
355,018756f13e61eb78a31dbc4f80aa57970e57e0d1,itoleg <forown@yandex.ru>, 2018-03-28 11:52:30 -0400, , rectifies project construction 803 add concat concat_merge future also started edit project rectifies project creation move preliminary part project creation module project add simplicity project creation previously creating project somehow like following  let input exe let proj project.create rooter internal input  much simplier  let input bin let project.create input  rephrases docstirngs future library fix typo docstrings,,
356,26e7cf5cb0f3a515f46bab1a1def3781cc2a0319,van Gotovchits <ivg@ieee.org>, 2018-03-28 10:01:19 -0400, , change primus memory representation preserve value identity 806 historically implementation memory storage mapping bitvectors bitvectors thus store operation forgetful identity value discarded value primus tuple data unique identifier long time considering feature articulating load store two different value even though usually structuraly equal however also observed many case analysis would like preserve identity thus forced maintain mapping word value identity way proposed solution satisfy camp believe load store general different say practice equal leibniz equality memory component store value instead bitvectors loose information time component may define semantics load store operation wish e.g. implement mapping control register memory non trivial memory representation mechanism default however interpreter ensure load store idenity byte word arbitrary length projected several byte extract operation store operation assembled back concat operation durintg load operation,,
357,5704f07fd5c397ccf5abb7bccc01b0c10da90900,itoleg <forown@yandex.ru>, 2018-03-28 09:32:08 -0400, , remove duplicated section 804 section printed twice disassembly output using bap pure binary code remove behavior  bap tmp_test dasm source type x86 code read symbol start disassembly section bap.user _start  xorw incw movw ,,
358,0dd254d9644f13aee0d8f822f0e5465b31cb9652,van Gotovchits <ivg@ieee.org>, 2018-03-27 12:29:53 -0400, , increment step number iteration 802,,
359,84b3fedcbcb5bf70e9f35f2800130ce8c910cb78,itoleg <forown@yandex.ru>, 2018-03-23 11:28:54 -0400, , fix travis test 800 fix travis test fix bap veri installation travis bap test i.e install already installed updated qerry installes pkg refactoring try find mistake test updated add output remove bap veri build clean remove bap veri manually clean updated edition beauty,,
360,54b305d2eda707db7a64556bc0dc4e7f77692b84,itoleg <forown@yandex.ru>, 2018-03-19 12:12:19 -0400, , fixed minor bug 733 restored forgotten parenthesis x86 shift insns updated testsuite,,
361,8b04e0fbeab2e93ff38245e9341d4a366c4a2bbc,van Gotovchits <ivg@ieee.org>, 2018-03-19 11:42:49 -0400, , primus lisp enhancement 798 publishes interrupt operation provides jumping observation resolve_xxx function jumping observation made jump taken two parameter jump condition jump destination much precise useful observation enter leave term one loose origin value define jump i.e. track taint condition destination also added three function linker interface mostly convenience function resolve code name address symbolic name tid rectifies primus lisp plugin far plugin load stuff link time configuration available rest analysis phase invoked pas may even invoked twice rectified everything require access project data structure loaded automatically configuration phase finished rest e.g. linking program done analysis add optional fill parameter allocate memory primitive parameter set allocated memory chunk filled i.e. filled random value set fill chunk specified value motivation make calloc efficient add parameter definition abstract representation add parameter program data structure applies reindexer runtime definition print method parameter printing program previously definition printed add defparameters form parser specification modifies defconstant grammar fit lisp defparameter line common lisp decided put docstring declaration value defparameter defconstant indeed look natural efficient lisp stack bug fix signal handler provides efficient stack equipped map data structure allows effeciently query locally bound variable primus lisp variable live two scope primus global cpu register parameter etc primus lisp local scope populated lexically scoped local variable function parameter let bound variable lisp operation variable involves checking whether local variable global variable since using lexical scoping able distinguish compile time eventually future far requires many change interpreter previously using assoc list traversed every time read set variable new implementation balanced tree map variable total number occurences stack make check logarithmic number unique variable name stack small optimization faster function frame costructor monadic preserving order argument append reversed order using fold left count total number argument call list.length poping frame faster frame pushing mechanism instead appending argument prepending reverse order faster since frame reverse order already preserve existing order change semantics fix nasty bug signal dispatcher signal dispatched several method method ignores effect method reset state dispatcher entered keep primitive linking move init_env loader want primitive registered component dropped new program linked fact primitive complete different beast definition defined ocaml module i.e. plugins rather lisp code probably part program data structure though program make thing much easier besides drop primitive program linking time discarding primitive registered prior call program_link far accident link_program function called component since registered last lisp component fragile consider bug nasty one init_env function primus.lisp module adding special variable form hold address correspondingly named program term using local variable stack neither using local stack storing variable globals nature done linking time program function moved loader component responsible setting environemnt add runtime support parameter parameter lazy evaluated unless used set parametrize malloc allocator implementation add following feature useful analysis upper limit maximum size allocated memory chunk upper limit maximum size malloc heap malloc guard optional coloring efficient calloc take memory take time publishes primus lisp eval function two entity primus lisp could evaluated function method runable directly ocaml via eval_fun eval_method add primus lisp autodoc generator far generate index still bad add documentation option render primus lisp documentation normalizes generated documentation merges different definition entity remove quotation remove duplicating whitespaces add documentation various primus lisp definition fix name initialization loader address multiple address name shall one vice verse drop primus lisp dependency,,
362,79efb843969130ae156e5965d8cabdcbf5246d42,itoleg <forown@yandex.ru>, 2018-03-16 15:14:41 -0400, , bil test integration 737 added new stage travis update updated installation bap veri reduces job test purpose rolled back add install veri deps add core install added bap veri install install script fixed stage name,,
363,00a2461c3934843e2ee7b93867c8e7273a7fed82,itoleg <forown@yandex.ru>, 2018-03-16 12:00:20 -0400,776, fix path comprehension api plugin 796 fix path comprehension api plugin fix http github.com bap issue 776 removed debug code,,
364,9e8a58d1019371c8a76db0cf41ce186800ebc2ed,itoleg <forown@yandex.ru>, 2018-03-16 07:38:27 -0400, , add llvm 6.0 support 795 add llvm 6.0 support updated testsuite,,
365,2f6e0bd8b41de7f6e4d02addee2f3cea31f58160,itoleg <forown@yandex.ru>, 2018-03-15 07:46:36 -0400,780, restores section view 792 restores section view switched ogre started tag segment memory region segment section output like disassembly section using bap dasm option fix http github.com bap issue 780 make printing bit pretty   0000000004006ed print_endline  4006ed pushq rbp 4006ee movq rsp rbp 4006f1 subq 0x20 rsp 4006f5 movq rdi 0x18 rbp 4006f9 movq 0x18 rbp rax 4006fd movq rax 0x8 rbp 400701 jmp 0x19  40071c movq 0x8 rbp rax 400720 movzbl rax eax 400723 testb  look like  4006ed print_endline 4006ed 4006ed pushq rbp 4006ee movq rsp rbp 4006f1 subq 0x20 rsp 4006f5 movq rdi 0x18 rbp 4006f9 movq 0x18 rbp rax 4006fd movq rax 0x8 rbp 400701 jmp 0x19 40071c 40071c movq 0x8 rbp rax 400720 movzbl rax eax 400723 testb  updated testsuite update print_main.ml,,
366,9a26a03505d27d94db3decf42894c27d20ee78e4,itoleg <forown@yandex.ru>, 2018-03-14 16:10:14 -0400, , fix relative address llvm backend 794 fix relative address llvm backend kind bug llvm backend relative address binary entry defined non negative value probably bad choice since want deal negative address point view always convert relative address absolute negative address happen actually inject wrong information ogre store non negative number converting absoulte address assigns real value every entry dependless meaningful address fixed type relative address,,
367,fcbae17264581f8416ee971957006f4580e785e2,ustin Jamner <dijamner@me.com>, 2018-03-14 11:14:18 -0400, , expose gcd lcm gcdext function bap bitvectors 793 expose gcd lcm gcdext function bitvectors fix incorrect test,,
368,e4ee3a1e5b427e8d8991e7462b06123178c0a046,van Gotovchits <ivg@ieee.org>, 2018-03-12 15:49:35 -0400, , remove bogus open re_perl statement 788 necessary break buils newer jbuilder compiled library longer installs cmi file folder also fix .merlin file adding build file location,,
369,81319c19371d33d075ce2db09d23d7f397782815,van Gotovchits <ivg@ieee.org>, 2018-03-12 15:48:44 -0400, , produce correct callgraphs call program 791 empty call graph produced degenerative case call i.e. edge callgraph produce graph node case,,
370,f66a336271b21e7801e9ce801df44a802895ae3d,van Gotovchits <ivg@ieee.org>, 2018-03-12 15:48:27 -0400, , fix bil normalization procedure 789 intentation change apparently ocp indent broken editingt file last time add hoisting non generatives specific point commit extends bnf1 extra condition load store expression following position right hand side let expression address value subexpressions store expression storage address subexpressions load expression position specific position bnf2 normalization involve rearragement copying expression thus need ensure position expression generative i.e. produce observable expression effect enforce restriction hoisting non generative expression statement since transformation produce new statement impossible apply exression level putting bnf1 precondition exp.normalize function,,
371,cb519b6b6c614e7052ba153ba20a6984fd6476b3,van Gotovchits <ivg@ieee.org>, 2018-03-12 15:48:07 -0400, , bump bap version 1.5.0 dev 790 bump bap version 1.5.0 dev prevent confusion already released version remove signature update test script signature already installed previous stage needed also development version released artifact default update work unless explicit url specified easier remove,,
372,f9d7657bc051673105d479c201fccf7540de29c5,van Gotovchits <ivg@ieee.org>, 2018-03-07 14:39:07 -0500, , update tool 787 update tool add docker file vagrant file using system test bap installability also update opam release.sh script capable performing whole update procedure opam repo fully automated way need create manually add script delete non master package keep conf package far probably get rid landed upstream long time ago likely need update often neither point git repository,,
373,b796fcf6a613e4ee161d3331e6596c618af4762b,van Gotovchits <ivg@ieee.org>, 2018-03-01 07:43:58 -0500, , update documentation copyright readme change 785 documented new function deprecated superceeded primus enumerated new feature bug fix change bumped version copyright date also added sed script document generator ocamldoc started generate lot include entry probably ppx derived stuff also reindented bap.mli ocp indent tool chocking attribute put inside recursive type definition fine ocaml fine ocp indent fixed moved quite significant part bap.mli ... sorry big change,,
374,ee3897fb0f837341c61b51e455d6eab7c35aa09b,van Gotovchits <ivg@ieee.org>, 2018-02-28 12:37:18 -0500, , fix taint framework compatibility layer 784 fix powerpc dependency list surprisingly powerpc depends bap dependency specified explicitly oasis compute dependency correctly rebuild module bap library changed prevents tcf pas running many time hurt though definitely reason run  enables compatibility different taint analysis engine two approach taint analysis new taint analysis framework legacy taint propagation framework former precise versatile latter still bunch legacy software want support e.g. saluki ida pro integration still relies old framework may update downstream tool use new taint analysis framework right enough recourse perform task doubt case saluki make sense primus propagate taint plugin provides compatibility layer allows legacy tool benefit primus without event knowing anything trade offs starting semantics propagation ending desire minimize breaking change bap command line interface explained detail man page plugin provided reference  description plugin implement compatibility layer new primus taint analysis framework old taint propagation framework propagate taint plugin new framework pubslisher subscriber pattern provides sanitization operation track taint liveness enables conventional online taint analysis however represents taint abstract object associated computation value old taint propagation framework pipeline approach taint represented attribute attached program term since new representation taint much precise bijection term value layer loose information due impendance mismatch trade offs translation described new analysis possible shall rely new framework translation achieved mapping tainted ptr tainted reg attribute corresponding taint introduction operation primus taint analysis framework reflecting taint state analysis tainted regs tainted ptrs attribute step optional could enabled disabled individually since attribute attached whole term individual expression value need rule prescribes term map value term marked term introduces taint assume value computed term reference tainted object either directly case tainted reg indirectly case tainted ptr always taint value contained left hand side definition addition also try taint value right hand side load store operation taint address pointer object track marked tainted reg attribute marked tainted ptr attribute dereference pointer taint dereferenced address right hand side abritrary expression assume variable used expression contain value referencing directly indirectly tainted object option attribute introduces taint term marked tainted ptr tainted reg attribute help fmt default auto show help format fmt value fmt must one auto pager groff plain auto format pager plain whenever term env var dumb undefined mark disables projection taint engine state term attribute option valid run option specified option left compatibility old interface compatible attribute attrbutes option error mix option new old interface run enables propagating taint term attribute back attribute unless latter disabled mark option option left compatibility old interface compatible attribute attrbutes option error mix option new old interface attribute reflects state taint propagation engine tainted ptrs tainted regs term attribute  read far deserve bonus track run saluki using new taint analysis framework taint propagation engine  bap exe saluki print model propagate taint print coverage pass trivial condition form saluki taint run saluki solve primus propagate taint attr primus propagate taint attr primus promiscuous mode primus greedy scheduler primus limit max visited primus limit max length 4096  yep scary ... later provide recipe also update saluki makefile facilitate saluki experimentation new engine taint memory variable hurt memory never valuated primus still little bit ugly introduce extra weight tainter state,,
375,5edf5df7967064ce51667b0a4d59d41a530d7453,van Gotovchits <ivg@ieee.org>, 2018-02-23 10:53:30 -0500, , prevents x86 lifter botching bap 782 quite _exn function modern x86 make assumption structure data done shall make hard assumption output disassembler binary input commit fix issue arises bap applied binary compiled latest version mac lead abnormal termination unhandled exception failure indeed provoked llvm backend loses segment prefix though circumstance shall preconditioning llvm output grepped code find possible issue found quite lot _exn justified least questionable far added try catch clause around lifter prevent exception crashing whole process though future shall revisit issue carefully review mourning x86 lifter dumping log file commit also make message actionable adding binary representation failed instruction,,
376,14456701e6f99ee36689fc7e5f1c42383b362ae0,itoleg <forown@yandex.ru>, 2018-02-22 10:36:13 -0500, , move travis stage 781 move travis stage removed unused env variable use use alu copy file change fixed alu place threw away alu,,
377,1e93f440d4d44a9998998e282c0476867dd6440d,itoleg <forown@yandex.ru>, 2018-02-17 07:53:48 -0500, , fix oasis environment 779 renamed oasis file env variable bap taint bap primus test library also edited bap version,,
378,6c7347cd3baded1c31cc7a29ea2c72611f6f4d10,van Gotovchits <ivg@ieee.org>, 2018-02-16 10:10:51 -0500, , revert renames oasis file 777 778 reverts commit,,
379,e8d2675b9317caa9036e787bafc5026e79f71274,itoleg <forown@yandex.ru>, 2018-02-16 09:47:08 -0500, , renames oasis file 777,,
380,0228754dce218c0a50c544d5112df3fcf148cc0c,van Gotovchits <ivg@ieee.org>, 2018-02-15 16:13:35 -0500, , update readme.md,,
381,5ddb832cc6c86447fb9558982d42dfb1168efae2,van Gotovchits <ivg@ieee.org>, 2018-02-15 15:48:17 -0500,769, primus update many 734 see 734 detailed description dump commits change default warning set ocaml officially disables warning type disambiguation record field variant constructor default see ocaml ocaml 1333. commit set presets warning set ocaml trunk moreover set used jbuilder default modern ocaml actually started rely absence warning 40. example new version core heavily rely using data constructor defined deeply internals personally believe good thing since neccessity qualify record data constructor full path usually lead lot open statement pollute namespace unsafe unreadable code type disambiguation safe way make code much concise give opportunity write readable code warning officially disabled bap commit also sync merlin warning compiler warning let keep way suppresses warning introduces progress report commit provides new feature progress report new mechanism allows plugins provide feedback system rendering plugin added print report way show time profile progress event  progress event new kind logging event allows different component provide feedback progress supporting function like report_progress added facilitate usage new event progress reporting plugin  fact report plugin planned provide functionality far render progress bar different component requires ansi compatible terminal may clobber output pass return value function advisor advisor get returned value even change  update lisp stub fix put output end stub exit fix memset memcmp stub change primus limit block max visited behavior previously option counted state transition linker count real basic block add pos.get extract attribute since program posistion term directly extract attribute associated position e.g. get address position  get address  simplifies expression evaluation primus doc several documentation fix update stmt.normalize doc previous version reflect role normalize_exp flag intoduce bnf1 bnf2 form distinguish bil normalized normalized expression better description primus scheduler far bukazoids document better advice mechanism build wip set build system optimization switch build system compiles setup.ml build plugins needed build plugin subsystem build system performing lot unnecessary work rebuilding plugins every time proposed version build plugin yet build older library note work progress contains hardcoded path mine opam tool deletes bap case messed oasis state use uninstall  revised sexpual representation primus event bil expression printed lispish notation think would worthwile extract code later primus provide pretty printing format bil expression value representation changed lexeme following format value type little bit noise want loose information since use derive data dependency relation wip add monadic watcher previously watcher used monitoring event stream introspecting far comment warns user though comment superfluous type system allow affect machine state watcher handler commit proposes watcher interface allows machine modification i.e. watcher observer run machine monad idea subscribe observation name lisp machine using upcomming rule engine generate observation observation without ocaml code though idea sound nice several drawback main performance need transform observation sexp expression code try alleviate issue transforming unwatched observation though core problem remains warning far commit dependency possible discarded merged really needed wip add unresolved observation easier detect non stubbed function using dirty wip debugging round robin scheduler totally work progress still work want work wip untested mark term every block may break thing check work right idea update visited attribute every block done machine finished every term update involves whole rewrite program term may issue finished stage heavily overloaded different observer might case order invocation matter general problem finished event component may commit result stage though component may collect result stage given ordering handler latter might called former problem formally addressed add bap rule engine bare production system forward chaining rule system pattern matching stream processing rule engine feature non linear pattern matching basically seen generalization saluki solver implementation wise two main difference fact represented sexp.t tuples matching performed purely syntactically saluki rule uninterpreted function arbitrary behavior though paper represented tuples except predicate closer formal behavior saluki bare operates rule level whole specification level saluki sharing partial matching state rule two different rule rely pattern matched though sound nice still sure whether saluki solver implemented stuff correctly also since bare priori information input domain impossible perform query optimization thus relying bare user build efficient rule based local domain knowledge performing rule level probably easier note though implementation may look trivial comparison rete example naive may look like thanks inherited data sharing ocaml heap although list hypothesis represent partial matching state look deeper representation actual representation list pattern list pair pointer first point somewhere pattern list indicating pattern yet matched second pointer point list binding binding also shared different hypothesis share root hypothesis memory prefix tree lot data sharing said room optimization far performing lot unnecessary list reordering though employ zipper like structure merging move primus print bare primus print rule parameter specifies list file printing rule though name probably bad sound like rule printed may rule rule better name file may contain zero bare rule specification rule well formed nice really nice thanks new sexpar library error message printed program terminated add primus memcheck tool memcheck rule akin valgrind memcheck detects kind bug i.e. use free corrupted pointer memory leak  tool memory allocator agnositc controlled lisp machine via two three primitive memcheck acquire ptr len memcheck release ptr len todo make primitive available ocaml component tool report violation via memcheck violate observation following form memcheck violate kind program location address violation kind specific kind violation e.g. corrupted use free def free  tool also provides observation allocator state name primitive probably bad idea give name observation lisp primitive ... memcheck acquire ptr len made every time memcheck acquire primitive called given program position  memcheck release ptr len made every time memcheck release primitive called given program position  problem currently analysis broken due incorrect comparison value fix soon although tool allocator agnostic allow checking several allocator parallel way distinguish different allocator would nice feature allow handle bug freeing memory using incorrect dealloctor ignores value comparison value represents result computation attached identifier used attach different property result using externalized mapping thus identity value like term identifier implies bad idea name rather tag allows selection property particular result addressed carefully documentation delete looback derived fact fact problem event processor generating report generates fact also processed fact processor probably print pluing print also current implementation produce fact derived derived fact derived fact another issue rule currently communicate share fact stream thus need look right hand side rule treat observation provider would better able provide fact registered system think bad idea example observation processor create new observation thin area basically create observation visible ocaml realm believe commit discarded instead observation processor moved lisp machine question represent lisp machine squash documentation fix wip move primus lisp parser parsexp first step moving lisp parser parsexp deliver better error handling diagnostic still work progress wip add promiscuity call change enable promiscuous jump call ensure coverage code follows call return currently implementation fork call creates clone follow directly fallthrough edge wip split primus lisp many many module trying order thing track freed byte memcheck tool right way would use segmentation tree though currently add byte dead heap fixup fix promiscuity mode wip switch indexed notation instead trying use parsexp use sexp indexed conventional number indexing solves proble getting location information parse tree ast general allows attach arbitrary semantic information tree node using dual indexing one index represents identity denotes node identity another index represents equality equal node equal equality index main drawback index arbitrary recursive data type non intrusively need attach index node thus need define data representation expression e.g.  type tree token indexed token atom string list tree list  solution still partial list recusive data type thus right solution would introduce indexed list data type e.g.  type ilist node indexed node nil con ilist  however switching regular list indexed list complicate code base lot use syntactic sugar list deconstruction afaik ocaml soon get ability extend list notation arbitrary user data type make solution viable proposed implementation implement multipass processing take set feature parse source file source repository parse tree indexed expression source repository implement hashconsing computes equality relationship also record location file mapping required feature loaded source repository repository parsed several step first step load meta program consists term rewriting definition second step load definition applying term rewriting rule second step seen symbolic computation step wip separate parsing step step applied per source repository basis per module basis parsing definition meta program totally ready meta definition since need apply macro definition parsing need since apply regular lambda application stage order parsing relevant may later add pas resolve call far use late binding wip move set back special form since var field interpreted function factored program abstract type update primus lisp new data representation rectified lisp machine interface instead ugly initialization parsing component initialization parse program outside machine computation make total sense use load_program operation finally link lisp program primus machine also new primitive interface made public old one deprecated also textualized lot error message though bridge still far fix lisp library intialization fix context ordering nice static error primus lisp implement operation using primitive update lisp code new interface update memcheck new primitive inteface fix ambiguity grammar also add pretty printer generated code well primus lisp dump option dump genreated program add back error form update ascii function new syntax char remove duplication macro previous definition duplicating expression duplicated expression expansive result form example could false e.g. lisp   expanded lisp   pure produce two different value one could truth value another false new implementation make sure expression form evaluated e.g. example expanded lisp let  new definition memcheck malloc new advice syntax add gradual type inference algorithm p.lisp also implement dataflow framework later move graphlib add type annotation primitive wip added tree reindexing add type variable annotation fixed issue still bug lurking fix unification problem term accidentally thus unified fix word read function reduces amount meet gamma apparently perform substitution instead creating meet term performs join set possible application type inference pick first applicable definition use source ground type instead join applicable definition better approximation also take context consideration fix malloc definition accidentally deleted external specification add generic data flow framework fix fixpoint description move lisp typer graphlib fixpoint add indexing library interned string add docstrings index module add empty index signature hardly usable without add symbol primus lisp add new term kind symbol symbol first class value runtime representation word use interned string underlying representation symbol introduced program using regular sym literal e.g. cat commit also reverts character literal back char emacs lispish notation instead char used time branch allows memcheck user handle mutliple allocator primitive take symbolic argument denotes allocator type note argument ignored right since next step would introduce region manager deprecate memcheck since soon able represent memory checking policy without writing ocaml code add interval tree bap.std previously interval tree key interval type hardcoded memory.t tree data structure properly functorized old implementation using new functor add symbol type primus lisp type system make sym type available public api redefines type system interface instead low level signature provides dsl specifying primitive type implentation architecture agnostic require machine computation totaly make sense unrestricts shift primitive need unify left right argument add has_loc operation source module fix int width operator name accidentaly renamed batch renaming use value runtime representation symbol instead word minimize translation revised typeinference fix issue introduces bigger one terminate rewrote type inference engine know whether work time work anymore final polishing primus lisp typing still far away production ready base work squash add interval tree bap.std lost file interval tree add interval tree library primus lisp add signaling mechanism primus lisp reflect primus observation onto signal every time observation done mapped signal dispatched handler handler defined defmethod stanza perform aribtrary side effect expose symbol interface possible translate symbol symbolic numeric representation vice verse move tcf separate pas make run dependent add call tracing capability commit introduces unified interface lisp regular bir call covenient call call return observatiosn signal act intuitively also fix quite bug fix stupidiest error index library parser dequotes symbol fix docstring loosage region library add primus lisp key value storage library make merlin warn innocuous unused variable default merlin warns unused let bound variable warning unused variable including bound function parameter matching warned writing code monadic style e.g. ocaml   ...  instead let need use general fun enable warning globally compilation point time squash trail dictionary express lisp primitive via interpreter primitive fix write word macro work little endian since comparison zero signed far even provide signed comparison primitive big endian also broken byte squash cleanup program register primus dictionary fix compare add min max fold function add strdup strcmp strncmp function increase precision taint analysis reference already point tainted object overwrite new taint previously merging old set referenced tainted object new set still precise account assignment tainted also fix couple bug introduces nicer mechanism generalization tainting function i.e. selector introduces garbage collection taint analysis improve performance precision also enable tracking existence tainted object allow express property dependend taint killed improves performance taint propagation first previous note taint propagation precision wrong precise rewrite reference untainted object associating empty set tainted object minimize number reference track remove reference instead associating empty set effectively commit remove unnecessary stuff propagator introduction marking mapping stuff moved plugins move symbolic index value module would like intern symbol value module wip moving tainting module library make concat observation public sever undertainting taint propagation engine due absence event make policy selectable per taint kind basis move bap_taint library universe add conservative taint analysis framework future may provide several implementaiton different tradeoff user may choose taste remove assertion taint object correctess actually enforce abstract interface invariant taint object must associated kind still expose of_value function injects value object type possible associate value anything besides taint object thus instead assertion false assume silently ignore value honestly like silent part approach future may change publishes interpreter exp operation reluctant make public though look like need often rectifies interrupt handling previously interrupt halting machine exception without option handle new implementation provides observation interrupt happens default proceeds interrupt fall destination possible attach arbitrary behavior interrupt using observation mechanism providing method interrupt signal lisp interpreter e.g. lisp defmethod interrupt  msg print_string called  new taint introduction mechanism mechanism precise efficient easier undertand also started exposing taint framework lisp land deprecates primus propagate taint favor primus taint new interface make much sense primus much easier use need explicitly enable anything propagation enabled default possible choose default policy provided two policy implement custom policy policy selectable per taint kind basis thus time propagate different taint different policy still expose function lisp expose taint policy select function well taint policy set default would done next commit hope expose rest taint interface lisp switch finalization event instead killed expose taint finalize event used case taint removed longer reachable machine terminates chance sanitize revives primus propagate taint plugin really deprecated deprecate old taint propagation pipeline sure whether need new purpose primus propagate taint plugin enable integration new taint analysis framework old taint propagation pipeline i.e. establishes mapping taint attribute attached program term taint attached computation era taint introduction component primus taint new place propagate taint connects old taint representation new one fix couple dozen bug look like work rectifies policy based taint propagation interface surjection kind onto taint policy vice verse default policy work though possible set several policy kind actually make sense introduces recipe commit introduces new experimental feature called recipe high level recipe collection command line option artifact used run bap used replicate run underneath hood recipe zip file flat structure  filemode length date time file  feb 2018 descr 362 feb 2018 recipe.scm   descr contains description recipe recipe.scm recipe e.g.  parameter depth 1000 far search option run option run entry point subroutine option primus greedy scheduler option primus limit max length depth option primus promiscuous mode option dump bir out.bir option dump asm out.asm option run argv test joe bart ece ana option primus lisp load run option report progress  far support three stanza parameter name default desc enables simple parametrization recipe option name args pass option bap extend recipe load specified recipe extend command possible build recipe existing recipe via extension last least possible pack file recipe like scheme signature symbol table etc relaxes assumption tcf transformer tcf transformation applied block two branch assumption block two jump may condition unfortunately 769 show true add option primus limiter possible set maximum length trace path block instruction term expression kind counter used defined via suffix stand block instrucitons e.g. 1000b mean thousand basic block default prefix set use expression since lisp interpreter well linked code required express computation term block better use expression since lisp machine express computation level remove debugging message promiscuous mode add log dir option bap possible specify log destination command line parameter via environment variable count expression primitive operation instead relying expression count primitive load store unop binop exec operation instead commit also add progress report limiter era debug printing handle overflow memory manager handle special case memory region stretch across null address i.e. lower bound length result overflow usually needed promiscuous mode map negative page enables negative literal primus lisp think odd write instead add simple emulation level possible redirect channel file rough shall work initial approximation implement many stdio stub include open fopen write fwrite read fread fput fget family add missing _exit stub far exit squash onto channel lost oasis file drop old memcheck implementation introduces primus test plugin new memcheck fix bug promiscuous mode recently added fork point call site missing check already visited thus spawning exponential number path disables printing non message log add check value analysis also included example like unchecked malloc etc though later extend example add init fini signal init observation add option printing recipe list recipe show available recipe show recipe recipe show detailed information recipe including list command line argument make build system optimization portable first attempt pas test fix context constraining parsing parse function defined context applying context macro definition fogrot include global context updated tessuite opam file add tcf library opam opam remove trailing whitespace package name fix context ordering operation comparison one sided allows quoted string context declaration feature written without quote treated equally i.e. quote ignored handle mips32 startup procedure correctly problem main return address stored register nop instruction implemented operation terminate solution abuse __libc_csu_fini termination procedure set address update testsuite changed int printing thrown away symbol revives recipe accidentally killed merge fix error printing print error one place clear screen progress report done clear error message nicer error message recipe declare program variable promiscuous mode probably shall mode ...,,
382,58e0d1b33260eb7a0120d6d39dd0c10ee4a342e3,itoleg <forown@yandex.ru>, 2018-02-13 22:23:05 -0500, , update testsuite powerpc binary 774,,
383,cd9b161d4fa699855cb1ee5ddeec0f9c7c97f905,itoleg <forown@yandex.ru>, 2018-02-13 19:33:08 -0500, , add new map term predicate 773 added feature separate module added unmark bml deleted suspicious predicate updated unset feature typo fixed,,
384,9293686224437080c6108cef731532feba1f96bf,itoleg <forown@yandex.ru>, 2018-02-13 12:42:27 -0500, , added type equality equiv equiv.t 772,,
385,75cfb83fee1c58cc55673d14aad2a44ff61522da,itoleg <forown@yandex.ru>, 2018-02-13 11:00:34 -0500,709, add optional arg linear sweep disasm interface 771 fix http github.com bap issue 709,,
386,a52dd1291b721331aa84eb7aae25dc728aa282f4,itoleg <forown@yandex.ru>, 2018-02-13 07:38:23 -0500, , new bitvector printer outputting asm 770,,
387,15c1e102e02ee6544b8f1fac4616729bb136c6b9,itoleg <forown@yandex.ru>, 2018-02-09 12:13:23 -0500, , add powerpc lifter 739 squashed commit full change log powerpc lifter initial order bring powerpc lifter life contains one group instruction discussing along service module like powerpc_model powerpc_dsl others powerpc lifter ready review slighly changed documentation changed internal foreach interface powerpc arch manual bit byte etc indexed starting significant part design concept lifter let user see approach level index everything done internal code basicaly dsl everything work like user expect rtl implementation expect exception foreach break concept use weird index approach solves issue index numeration starting modt significant bit exists dsl minor doc edited minor added powerpc bapdoc fixed bug store load insns llvm decoded immediate value instruction must ourselfs edited opam file updated bap opam file fixed path new signature renamed field cpu model powerpc file single plugin file renaming removed bap powerpc bap doc refactoring progress change removed signed operator signed version comparison division modulo depends totaly operand removed logical shift lsl lsr shift logical operand unsigned arithmetical signed refactored branch add instruction modularization div sub mul bug fixed add using map.find instead string.map.find fix documentation added init function every instruction module fixed example doc,,
388,86767db5ab92e5053994f9a50c183d50f92c17bb,itoleg <forown@yandex.ru>, 2018-02-08 14:53:26 -0500, , synchronizes testsuite bap testsuite repo 765 synchronized testsuite bap testsuite repo edited opam file,,
389,406bc907808c6218b4d84ad44631b848e3e18d2d,ustin Jamner <dijamner@me.com>, 2018-02-08 11:51:34 -0500, , redirect api documentation link 766 redirect api documentation link v1.0.0 documentation master documentation way linked documentation date stay date,,
390,71dcf144e0c5c23403a8ae7d3d4ed66adf0ab8b1,nton Kochkov <xvilka@gmail.com>, 2018-02-08 23:18:34 +0800,590, add mips lifter 762 initial mips lifter draft fix ivg gitoleg fix instruction reindent file add comment missing instruction add missing load store instruction add lsa dlsa add missing mips64 instruction edited mips model created gprs would nicer correct clear register name corresponds register index minor fix review fix jump address calculation add nal instruction fix div mul instruction added model special register although register directly addressed need anyway lot instruction like mflo move register fixed instruction name registration div renamed sdiv divu udiv llvm named correspondently try  echo llvm 3.8 arch mips disassemble show encoding show inst echo llvm 3.8 arch mips disassemble show encoding show inst  let leave div instruction previous mips release also keep new version future fixed instruction like dmul need high low doubleword store temporary result 128 bit variable multiplication result something wider operand bug fix fixed operand index got exception clo clz instruction array bound reason llvm claim two operand  echo clo llvm 3.8 arch mips show inst operand show inst show encoding clo encoding mcinst 590 clo mcoperand reg 322 mcoperand reg  previous suggesting prefix unused operand correct also added better check operand array bound something wrong see better message  echo bap show bil arch mips show insn asm clz  special lifter instruction clz operand index   fixed shift instruction add asr rtl change added asr operator rtl easier implement arithmetic right shift fixed signedness many shift rotate instruction swap operand many instruction fixed dsl ordering replace index zero based fix bitswap insns minor bug rtl change fix bug rtl searching assignment step variable foreach construction previously work assignment step variable occured first statement foreach loop fix bitswap instruction reverse bit every byte byte ordering stay update mips_logic.ml typo added mips64 compatibility change changed model added register _64 suffix llvm added bit insns refactored mips_abi,,
391,1c0cb5cd5cb553af0e01994047342a6c539a3682,artin Jambon <github@mjambon.com>, 2018-02-01 19:14:03 -0800, , fix doc 763,,
392,2377c82824f11eba23e97c1347c783fe98158ab3,itoleg <forown@yandex.ru>, 2018-01-31 16:39:33 -0500, , fix search destination reconstructor 761 fix search destination reconstructor reconstructor block destination computed directly bil representation correct bil take account relocation relocatable brancher used cfg contains correct edge information ignored build set call destination reconstructor address problem searching destination directly cfg,,
393,f1757d4849ec6a3a85c36f3a563edd8e8da21a01,itoleg <forown@yandex.ru>, 2018-01-25 16:56:34 -0500, , fix source type cmdline option 758 added parsing file fmt still work fix source type cmdline option source type effect solves issue error loading project .marshal file error using raw code bap minor added matching custom fmt rename source type file string project minor removed signal emition input.binary updated testsuite,,
394,c3807834d51ff3005f4d47e3cf336c2e39663efa,itoleg <forown@yandex.ru>, 2018-01-25 12:48:13 -0500, , change merging strategy information source 759 previous implementation several source information wait ready join problem source might ready depend signal either happen happen information produce deadlock new implementation output information soon available still merging commit potential breaking symbolization process i.e. may change symbol assigned program location though review managed persuade ourself order preserved least given setup still room pessimism,,
395,5d603ee906adb5af6b88518b90f33ea887c5b90f,itoleg <forown@yandex.ru>, 2018-01-18 15:55:57 -0500, , minor bug fixed 757 primus lisp read word function implemented incorrectly read correctly requested ammount word x86 lifter forgotten llvm version constraint movoffset insn added llvm 5.0 support bap_llvm library fixed bug crush bap build llvm 3.4,,
396,5c289fad45857c2a2ca82fe2ce831df4eb3d9d58,itoleg <forown@yandex.ru>, 2018-01-18 09:10:34 -0500, , added goto resoliving non local indirect jump 755 previosly local indirect jump considered tail call performed branch instruction resolved solves issue,,
397,a2415bb9139ee01141e89237b94b386cdf91feb2,itoleg <forown@yandex.ru>, 2018-01-17 15:13:12 -0500, , fixed mov offset insn 754,,
398,7c6720a999d99c27b51f6b3124079d66e48b1707,itoleg <forown@yandex.ru>, 2018-01-17 11:36:27 -0500, , minor change bap_helpers 746 minor change fixed bug xor simplification added edited branch extract cast simplification minor updated testsuite,,
399,2eb472715589cd4396cd9150331ef0c3143475c5,than <thanassis.avgerinos@gmail.com>, 2018-01-17 08:58:42 -0500, , making ymm register available ia32 amd64 user 751 moving ymm register inside architecture parameterized module necessary since depending architecture number ymm register available varies commit also introduces two change remove nums array register exposed interface seems duplication array defines array empty bit mode expose ymms ia32 amd64 interface minor update x86_cpu interface remove nums switch update plugin code use new interface expose nums add deprecation warning fixup test use x86_cpu interface,,
400,285fffed902ec25096a42e281061a1b6a28ba19b,yan Goulden <percontation@gmail.com>, 2018-01-15 15:19:35 -0800, , switch bitstring.ppx 748 change deps bitstring 3.0.0 bitstring 3.0.0,,
401,53516b310d65d7411192a5c1fedbc796586b0b12,itoleg <forown@yandex.ru>, 2018-01-12 15:05:40 -0500, , updated bap_arch 730 change allow disasemble powerpc target,,
402,60e80c9b3d8e4ec714064cc442e88d698e68eaed,itoleg <forown@yandex.ru>, 2018-01-11 16:32:33 -0500, , added llvm 5.0 compatibility 744,,
403,174bc45815bf58dced7f5d7b9da06361e680570c,itoleg <forown@yandex.ru>, 2018-01-11 15:09:42 -0500, , reduces travis job 745 4.05.0 compiler used testing others build bap,,
404,ef7f75498c0013f9f9b12cc57e9f28faefebde76,ax Mouratov <mmouratov@gmail.com>, 2018-01-09 00:05:08 +0500, , fix grammar inside comment 743,,
405,23a1744136572a86de7d7a77af9176044aec8f4f,itoleg <forown@yandex.ru>, 2017-10-11 12:01:17 -0400, , fix sub flag calculation 728 flag calculated wrong case src dst operand e.g sub eax eax,,
406,96eda7cb9c0101e9be9fed2cbaa6e2058c8b7609,itoleg <forown@yandex.ru>, 2017-10-11 09:35:14 -0400, , small imm sign extending 727 small ints sign extended refactored,,
407,698fde0902ea4c00fb0cc05049eb4543a07eed12,itoleg <forown@yandex.ru>, 2017-10-10 13:40:48 -0400, , fixing pshufb insn 726 reimplemented pshufb using loop refactoring pshufb got rid loop refactoring bug fixed added test minor test reworked minor made separate executable x86 test,,
408,6eba325238d1ebbd28a3dd3b30f65ddd210fed13,itoleg <forown@yandex.ru>, 2017-10-06 14:55:17 -0400, , fixing rotate instruction 725 fixing rotate instruction according manual ror rol instruction following calculation number bit position  tempcount count countmask mod size  take mod size also bil contains weird assignment like flag unchanged get rid refactoring review,,
409,d7addc221c547de7f395104417ec1bc118327800,itoleg <forown@yandex.ru>, 2017-10-06 08:36:11 -0400, , fixed xadd insn 724 fixed xadd insn src dst confised anymore calculation fixed review change,,
410,a5440de486caa3412effb85bddbf4837fa9207a6,itoleg <forown@yandex.ru>, 2017-10-05 14:33:54 -0400, , fix duplicate segment 723 fix local opam file edited travis env matrix fix dulicated segment,,
411,a6ce1f9d4173630281f756954e0943a937423ff1,van Gotovchits <ivg@ieee.org>, 2017-10-03 11:39:10 -0400,19, bap core v0.9 704 make compilable new core change due following breaking change upstream change monad interface bind take function labeled argument annoying change need update base interface consistent core force release 2.0 version equal parameter different finder became mandatory discourage people using polymorphic compare fix 648 completely disables inline test new inline test janestreet work plugin system even test core test give runtime error switch opam opam newer version core drop 4.03 add 4.05 pick llvm 3.8 opam file hope travis maybe work work cxx need set custom_ppx prevent ppx_deriving otherwise become dependency really used support building without ppx_deriving ppx_deriving optional depedency many ppx_x package janestreet optionality specified using predicated requirement problem mostly ocamlfind option perform query made build preprocessor command include predicate passed command line lead failure since ppx_deriving installed workaround simple need pas option linking phase kind stupid prevent ocamlfind driver making query bap_build library also update added set default predicate used set bap dependency inferred pas flag compler becomes weird need pas flag even compiling file since syntax command still build even clean ppx dependency depending ppx_jane dependcy put common section everything else removed disables bap_elf library due issue ocamlfind new generation ppx derivers janestreet build bap_elf library without bogus dependecy ppx_deriving trick supress dependency jumping specify flag use trick library camlp4 build ppx_deriving installed actually used needed keep ocamlfind happy since ppx_deriving really needed usually lag behind compiler development decided disable library default rewrite using ppx_bitstrings http gerd lib findlib issue update test runner set version numeric disables bap_debug latter probably cause space left device error since bap_debug fill tmp folder lot trash former prevent version test passing solved warning lot warning occured new core_kernel version mainly connected _channel type _channel.t according jane street point view edited travis env matrix test 4.03 4.04 4.05 compiler either bap_run_test bap_run_check set true updated testsuite,,
412,af4970bd5e4d200b74b5b866380a5f6f479499d0,itoleg <forown@yandex.ru>, 2017-09-29 10:48:00 -0400, , fix test env 717 edited travis env matrix fixed ocaml compiler choice travis,,
413,8402cbfed81a8d078f3f26b371ac17320807b2c8,itoleg <forown@yandex.ru>, 2017-08-27 12:08:30 -0400, , removed conf llvm install 702,,
414,97b7b597540fe3b6736fc7ab0b8fa0d3e38e3254,itoleg <forown@yandex.ru>, 2017-08-27 08:52:29 -0400, , fix bug bap llvm 701 fix bug section name minor,,
415,92a96c43578998c165a8f312d85f7133a6dfa75a,van Gotovchits <ivg@ieee.org>, 2017-08-25 12:52:46 -0400, , fix bap installation instruction opam act like stupid always try upgrade conf llvm package latest,,
416,dd6e88be2fad714cb8d5ab53340b41aa0e9b9f33,van Gotovchits <ivg@ieee.org>, 2017-08-25 11:45:00 -0400, , update front page add toc ease navigation rewrite introduction add sponsor information update example output update version,,
417,8681e63660f96abb1615488c9ad744cbcc5d353e,van Gotovchits <ivg@ieee.org>, 2017-08-25 09:01:30 -0400, , update bap version,,
418,c196cb8bb137efd6f04dacfb12ca4040f181de38,van Gotovchits <ivg@ieee.org>, 2017-08-25 09:00:15 -0400, , add change changes.md,,
419,b7f4cf00cac0e6d853b8ef010bb6df2b2e5dc390,itoleg <forown@yandex.ru>, 2017-08-25 08:26:16 -0400, , support llvm 4.0 700 first step towards using llvm 4.0 minor minor minor fix 3.4 stylistic change renaming hide bap llvm stuff oasis added llvm version parameter also old odd file x86_llvm_config mionr fix oasis internal module minor reloatable separate plugin minor llvm oasis stuff reworked minor edited dockerfile fix version choosing minor minor,,
420,817eac81deeca01749dd6df3f6899f24bdd25cfb,van Gotovchits <ivg@ieee.org>, 2017-08-24 16:41:14 -0400, , final 1.3 update 688 make main state global bug fix main change one main state machine aka project separate copy per machine commit also fix leave blk sub event add several new observation exn raised occurs every time machine switch exceptional control flow commit also add common method monad interface add attribute bitvectors possible attach arbitrary value bitvector name input interface regular functor wip wip wip wip wip wip compiles least ensures normalization well typedness also fix bug eval.binop fix bug arm lifter bug lead type error result byte load half word load stored bit variable published function fix bug type checker exp normalizer type checker held correctly shift normalizer properly recurse force constant folding allow backend choose whether propagate consts far force normalization exp temporal cludge remove exp normalization bir becomes unreadable apply normalization needed later may add memoization stuff like set bap_debug true enables better diagnostics compilation configuration error travis add primus mark visted plugin plugin mark term visited primus visited attribute precedence sensitive exp pretty printer long ago finally found time unnecessary parenthesis note operator precedence follow language ocaml  cast extract                    let dot  higher precedence mean operator bind tighter bil statement precedence lower expression fix simplifier add cast simplification branch simplified recurce cast cast type removed apply constant folding default fix function wrong remove unnecessary optimization ir.lift add ssa dead code elimination plugins ssa translates program ssa form dead code elimination conservative deadcode elimination plugin help alot x86 binary removing ton unused flag calcualations make string_of_value consistent string_of_value function emits prefix hexnumbers unless instructed explicitly prefix false flag reason change enable consitent handling signed unsinged negative positive value publishes exp.substitute function long time ago forgot make public enhances dead code elimination plugin run fix point reached simple constant propagation added virtuals removed renames mem32 mem64 x86 lifter mem need two different name memory fix enhances lifted representation shift original implementation emited following code  flag flag  denote unchanged flag code problematic static dynamic analysis static analysis treated used defined variable treated flag free variable eclosing definition dynamic analysis treated flag undefined variable consequence new implementation statement change flag necessary moreover instead using multiple else expression assignment gathered one big statement lead simple cfg representation original implementation emited temporary variable hold number bit destination shifted need variable never changed moreover value variable usually always constant better inline directly expression look like case common error delegating ocaml computation bil case problem solved constant propagation applies simplification assoc operation operator associative expression left recursive recurse right hope meet constant particular simplify optimization refactoring old tainter store value empty set value special handling one byte storage remove key taint set set empty normalizes simplifies expression eval switch propagator sparse storage remove unused code call exit bap interupted ctrl profiler work well exit handler implement new bitvector pretty printer roll back behavior pretty printing function totally rewritten scratch z.format printing function broken generic printer suit taste well preinstantiated pretty printer also changed bitvector default string representation new representation used true false binary analysis anyway loose signedness information doc update renamings updated bap.mli documentation new function also renamed updated testsuite fix dash underscore issue automates documentation generation enough type make doc everything work box correct version ocaml used i.e. 4.03. makefile recipe pull latest version argot git required use build documentation bap installed either source tree opam matter update primus doc also remove unnecessary stuff add monad interface update monad doc clean document monad library removed unnecessary funciton e.g. state.modify also fixed type call function remove extra blank line bap.mli add type checker backends also fix bug found result zero width word created one bit width bug typechecker led stackoverflow far type error remove unnecessary call bil.fixpoint add missing manpages also added parameter primus loader typo doc gone crazy rewrote taint propagation plugin last update primus broke make oasy little bit hungry dispatch linker unresolved call lisp stub function called case linker resolved call also add method interpreter interface publish primitive get current program counter fix bug random number generation actually random number generator rather casting word fail whole program division zero fail machine enhances run plugin multi entry mode specify list entry point magic subroutine start execution parallel specified entry point specified subroutine term marked entry_point attribute entered flush output primus character add primus component ensures termination primus limit plugin terminate machine certain amount computation happened,,
421,528151c85875bd67734e18d8ddccda6d2413dd35,itoleg <forown@yandex.ru>, 2017-08-17 17:26:52 -0400, , update tag 690 added renamed tag list tag cmdline arg added list plugins tag cmdline option minor refactored review change,,
422,89948937aaa89b8b95006450b8c6101832bdf101,itoleg <forown@yandex.ru>, 2017-08-11 13:52:12 -0400, , update cmdliner minor 687,,
423,c82e04c48dcafc3e26583f11ff86a22554194b0a,itoleg <forown@yandex.ru>, 2017-08-07 11:56:25 -0400,633, fixed problem loader registered project 686 fix http github.com bap issue 633 problem signal propagation merge different rooter ida rooter internal byteweight rooter get empty list root internal one wait image doesnn result stream fullfill result rooter,,
424,23e1cc0851e2aebdbcc0d36a1c1727b96b58cadb,itoleg <forown@yandex.ru>, 2017-08-07 09:19:31 -0400, , llvm loader based ogre library 654 ogre based loader updated testsuite,,
425,5e6af3c74b0f6fda3a2e3ee6e907eed440d61514,itoleg <forown@yandex.ru>, 2017-08-03 11:19:27 -0400, , bap compiled cmdliner.1.0.0 684 0.9.8,,
426,85707434ae5559b4c54f804d5b0582c1fbb2be79,itoleg <forown@yandex.ru>, 2017-08-03 07:34:18 -0400,678, fixed .cmxs name bap plugins 683 fix http github.com bap issue 678,,
427,05f8529591be39422ab1d53784eb66fe32ee813d,van Gotovchits <ivg@ieee.org>, 2017-08-01 10:03:33 -0400, , reduces memory representation ram consumption 682 continuation 680 reduce memory footprint memory representation bap mem type optimization precomputing memory accessors construction memory object although might save time memory accessor operation rarely used used thus remove precomputed getters memory move check time getter invokation result reduces size memory representation word byte amd64 total 680 reduce memory representation word,,
428,08eca3aba2231d9468ca9e8df48d55f35f26c73f,van Gotovchits <ivg@ieee.org>, 2017-07-31 10:33:38 -0400, , new bitvector representation 680 proposed representation z.t container payload metadata reserve bit metadata first bit represents whether bitvector treated signed unsigned rest bit contain size bitvector representation encode bitvectors size however enough practice would needed may switch complex prefixed encoding akin utf   payload size  size  given representation bitvectors smaller represented ocaml int thus unboxed creating new bitvector performing bitvector arithmentics longer perfoms allocation  let deadbeef word.of_int32 0xdeadbeefl val deadbeef bap.std.word.t 0xdeadbeef obj.is_int obj.repr deadbeef bool true  previous representation still available word.stable.v1 useful serialization deserialization data stored previous representation particular using old representation read byteweight signature,,
429,6c2ab0dab1980c9633fe912f93b93d9d20156b3f,yle Stapp <RabidCicada@gmail.com>, 2017-07-20 08:41:54 -0400, , fixing type multi 677 ,,
430,26cecf241dfb91831c80779b1e76ddd702fd3f09,yle Stapp <RabidCicada@gmail.com>, 2017-07-17 12:20:45 -0400, , added documentation abotu llvm3.8 676,,
431,5a5a2edf09f07c67a51a039ce822fb279ba3a503,itoleg <forown@yandex.ru>, 2017-07-05 10:06:26 -0400, , fix demangle 672 fixed bug bap demangle removed minor fixed bug cmdline param,,
432,25927561ebbd768fc9bea6152ed658d85728dec2,itoleg <forown@yandex.ru>, 2017-06-29 09:36:14 -0400, , added tag bundle 663 merge change review added constraint bundle minor minor list plugins apply feature list minor extend field plugins name,,
433,bbf1e43511c0115c1623b8a2d8c85a624a1617b0,van Gotovchits <ivg@ieee.org>, 2017-06-28 12:56:16 -0400, , primus promiscuous machine 668 add promiscuous mode several scheduler intial commit forward port original idea promiscuous mode different scheduling mechanism promiscuous mode split state every branch push constraint fix path constraint four different scheduling policy implemented greedy exploring round robin wandering fix bap.mli comment next prev function mixed extract semantics bil interpreter commit extract abstract virtual ocaml parlance implementation expression interpreter interpreter named eval base class expi interpreter interpreter implemented virtual class requiring user implement two virtual interface eff domain implementation eff interface handle side effect like memory environment operation type variable denotes domain value type variable denotes type memory storage implementation domain must implement method map domain computation bitvectors storage eval interpreter depend concrete representation value storage bil.result bil.storage thus suitable new base implementation primus interpreter previously based biri intererpreter operates improper domain mem bot variant used use storage mechanism storage value ignored data stored internal state bypassing storage value eval interpreter depend context relief primus burden passing attavims across component basically move primus new eval interpreter implementation primus become much cleaner smaller especially type signature next step going get rid dependency biri primus biri suitable non deterministic computation relaxes eval parameter type monad eval functor construct evaluator actually require state monad regular monad commit also extends eval module provide functors make make2 correspondingly parametrized arity one arity two monad started reimplement primus interpreter need use small step semantics approach get machine fully non deterministic without changing semantics instruction done switch cps monad machine apparently using state monad enough case switch task predefined place like sync point attempt fork abitrary point lead lost computation resume thus solution use continutation monad commit make machine monad continuation monad except greedy bastard make call public used implement fork switch multi state monad interface new monad layout following f.c.s.m failure monad continuation monad state monad inner monad also easy remember football club spartak moscow new behavior computation machine monad consolidated fork switch method fork function remember current continuation current state switch restore continuation new state e.g. resume computation previously saved switch basically except instead creating new state switch existing one reimplements interpreter cont monad since reified computation need next pointer new implementation much easier comprehend relies linker implement computation blk sub link program via linker interface one component responsible code finding also linker longer depends interpreter code type simplified functor return computation given monad move primus new monad code finally updated though system work time stub moving away distinguishing succesfull unsuccessful computation instead denoting result computation either normal exceptional case actually result add debug plugin move main functor arm test alreay passing machine hower x86 still issue yet investigated moved main functor away machine refer component ensure proper order initilization interpreter link operation component also added primus debug plugin new interface called provides introspection capability update testsuite master branch fix propagation exception fix bug changed event remove debugging fix primus monitor plugin forgot call initialization function add primus debug output option fix finished event event bypassed case exceptional termination fix bug lifter case machine basic block represented several basic block accidentally attached address machine block last block instead first one commit resolve issue ignores undefined value interpreter every time undefined value introduced emit value instead terminating computation sort ugly think done nicely fix multiple bug machine implementation main bug preventing machine switching clone observation easy prevented wrapping provide call with_global context handler always restoring state global rest bug minor issue far look like non deterministic machine work expected reduces number fork promiscuous mode basic block computation forked question whether decide much fork execution mode scheduler maybe add component responsible reducing number fork question let open decision make promiscous mode execution fork arbitrary may revised future implement propagate taint analysis force primus machine return global state original idea point started return state whatever machine last finish taint propagation add stuff taint propagation engine provide infromation legacy one also fix bug led loosing taint fix opam file get rid cludge ... move back travis docker system macos still buildable enough time quota build time much slower provides fewer memory revert move current ocaml script 638 reverts commit limit maximum number build job otherwise oomed travis fix expi bili expi choke unbound memory instead return new empty instance memory fix taint introduction issue taint introduced propagated cleanup renamings primus primus debug renamed primus print primus plugins properly prefixed minimize chance name clashing revert move back travis docker system reverts commit reverts revert reverts switch also droped support macos never able hit deadline,,
434,545019e115ce58dccdcb9f2f121eccfb78f4c628,itoleg <forown@yandex.ru>, 2017-05-18 10:29:17 -0400, , fixed symbol name objdump symbolizer 665 fixed case case section name could treated symbol name consequently symbol like .text,,
435,0390da26baab8079a9fc2a187f867bd553e9c8c9,van Gotovchits <ivg@ieee.org>, 2017-05-10 08:56:22 -0400, , primus lisp enhancement documentation update 662 finish primus lisp manual fix code markup primus documentation applies macro expansion operator application revise container operation monad apparently missing chain binding non eager monad consumes stack memory proportionaly length chain big issue hand written chain case chain built collection element eventually monad run raise stack_overflow another problem commit fix usage with_return construct inside monad worked fine eager monad fails dramatically solve first problem switched cps implementation fold function lifter monad however insufficient second problem need mechanism allow escape collection processing loop earlier used exception exception play well monad establish contol flow address problem changed collection.base interface fact introduced two new interface deduces collection operation ordinary fold function provides foldk function applies user function continuation used continue looping necessary escape loop decided provide functors since always possible provide foldk container especially abstract provide anything similar commit also remove rev_ family function container interface mostly new map filter filter_map implementation fold_right function big efficiancy difference map rev_map though maybe wrong enhances invoke procedure make symbol visible type longer strictly needed invoke procedure via primitive instead looking type using bir type caller must provide argument based subroutine commit also implement propagation return value invoke procedure unlikely case actually return caller another enhancment new mechanism make possible reference function symbol name instead finding address binding term name address added initial context fix typo bap_run help,,
436,44730aebd0f7884b61e8332f20836bd76a1c1235,itoleg <forown@yandex.ru>, 2017-05-09 09:02:37 -0400, , fix bap segfaults file 657 gix bap segfaults file bug number one std distance work elf header iterators llvm 3.4 case segment absence fails segfault bug number two rely dynamic symbol iteration llvm 3.8 since bug add one check minor,,
437,5bb6a98453c03696cb6b40b2e88650380c4551ce,van Gotovchits <ivg@ieee.org>, 2017-05-07 14:01:50 -0400, , fix opam spec homebrew 652 fix opam spec homebrew theoretically move closer goal passing test travis mac box switch llvm38 homebrew look like llvm 3.4 longer brewed house package update successful error available formula name homebrew version llvm34 searching previously deleted formula ... homebrew version llvm34 deleted homebrew version commit f85a081 llvm migrate homebrew core http github.com homebrew homebrew version issue 1475 also delete llvm gcc28 llvm33 installs analytics,,
438,bd64c28980cca09a0170d2d5d46bdeda6e6c7c70,avid Brumley <dbrumley@users.noreply.github.com>, 2017-05-06 11:41:12 -0400, , use portable mktemp opts install 658 661 mktemp directory portable osx use instead mktemp,,
439,9eb27944d64c541e0d2e860909067c596deba769,itoleg <forown@yandex.ru>, 2017-04-28 10:26:16 -0400, , fix ida cmdline parameter 655 remove version parameter fix ida path param minor,,
440,77c443ab714e7b634a56a51b50064e50bd7bc82f,itoleg <forown@yandex.ru>, 2017-04-25 14:26:37 -0400, , review fix 630,,
441,656192d7f6292f76d8c4f3c736d68dccb9b50a60,van Gotovchits <ivg@ieee.org>, 2017-04-25 09:47:22 -0400, , underscore used oasis file name 653,,
442,a278a96acf7b7093b39a8119da5d1a92d50a3618,itoleg <forown@yandex.ru>, 2017-04-25 08:32:52 -0400, , reason llvm looking elf dynamic 650 symbol case plane symbol exist  auto syms symbol syms.begin syms.end syms  elfsymbolref sym syms ret.push_back sym sym.getsize return ret ,,
443,3fb406ed0fcb1f999b50a5a90ae6e55728608e8b,van Gotovchits <ivg@ieee.org>, 2017-04-24 22:28:23 -0400, , primus microexecution framework 651 first step better microxecution removed trace biri.context store trace context anymore trace used evaluation phi node need know came  since phi node rarely ever occurs real program need pay use default biri interpreter evaluate phi node unknown value case needed implement interpreter capable evaluating phi node enriched context added polymorphic enter_term leave_term method biri.context method default provides lot information context added current method biri.context evaluates tid currently evaluated term rewrote idea remove code context interpreter put reusable component derived class must dispatch information component particular patch reify traversing method early escaping first class value combined reused much better reusing code inheritance fragile non modular trace limiter defines trace stopped reified limit abstract type first class value chosen dynamically passed parameter context loop escaping mechanism well trace bounding implemented instance type graph traversal policy reified value type crawler store context type checkpoint three instance prototyped deterministic checkpoint one path executed exponential every path executed leading exponential blow linear linearly independent path visited leading linear complexity removed callstack tracking special tracking return statement non deterministic mode rely backtracking mechanism escaping dead end like plt entry deterministic mode provide plt summary stop small fix table module function accidentally hidden forked conqueror microx generalized interpeters monad type commit touch api bap.mli remained unchanged commit serve testimony api unchanged change satisfy unchanged bap.cmi ideally make test check new cmis subsests old one new implementation satisfy old cmis update interface generalized interpreter wip make sure stored somewhere else added lot monad transformer option list seq writer reader state fun lazy cont forgot add result ... added result monad error reader monad make make2 functors first create monad one type parameter concretize state error value type passed first parameter functor consequently make2 create monad two type variable second ranging arbitrary state error type state monad also make make2 cont left afraid ... added call continuation monad woof ... cont monad also two fold moved monad separate library added common .mli file moved new monad library implemented multistate monad state monad multiple state playing implementation started define primus monad moved multi monad library split primus add fail primus monad moved error separate module started implementing interpreter added random number generator wip added generator iterator concept added observation type factored observation machine observation type statement mandate depend context added component system run function basically kernel ready implemented interpreter possible implement tainter based interpreter added interface interpreter implemented virtual memory interface except brk setter getter neet rethink much control ready give away ... finished memory implementation moved interpreter new memory backend added env module added inspector env memory rearranged library gathered everything std umbrella added primus linker added primus_elf library fix bug lookup function caching break term transformed fix relax requirement actually lookup efficiently factored component state machine monad create state key primus able run simple program added primus lisp machine extended builtin lisp added special form let bounded variable mutable everything mutable let bounding bind mutliple variable added attribute added declare special form added hook populated advice special form simplified builtin interface added many builtins added special form imperative looping implemented operation added module level declaration finished adviser started stub libc added clos style definition dispatching allow multiple definition including macro definition name definition may specify context make sense name resolved given context resolution set reified four step step find definition given name step filter definition applicable current context step filter definition specific context i.e. drop generic competing definition step filter definition applied i.e. like sfinae actually allows overloading i.e. two definition different arity type argument supporting library added array library creates array abstraction invoke lisp_machine properly interpreter interpreter responsible binding argument evaluating return value still look like drawing incorrect abstraction boundary interpreter taking much responsibility able fulfill example given complex call hidden argument need complex interaction function declaration abi example function return structural object member function hidden parameter declared lisp side e.g. defun make point declare hidden self struct write point_t self struct write point_t self struct write builtin function implemented ocaml call existing abi api stuff rearranged library made function macro put lisp library plugin loaded without touching primus library wip primus feature execute simple program e.g.  bap arm linux gnueabi symbolizer ida primus lisp library load libc init putchar run afraid greatness born great achieve greatness greatness thrust upon thine self true must follow night day thou canst false man course true love never run smooth  libc init putchar stub libc intialization procedure emulation start entry point putchar another libc function used program code emulated program  void print_endline const char msg char msg putchar putchar  int main int argc const char argv print_endline afraid greatness print_endline born great achieve greatness print_endline greatness thrust upon print_endline thine self true must follow print_endline night day thou canst print_endline false man print_endline course true love never run smooth   fixed allocation main function stack accidentally added extra layer indirection add command line run pas actually passing command line argument via command line argument error prone probably use environent bypass command line parsing also using style would probably bad idea shell tokenization store entry point project dictionary loader optionally apply arbitrary transformation finaly recovered project data structure particular use feature store entry point program dictionary includes monad implementation option module forgot provide default implementation parameterized identity monad available symbolizer default used behavior point started default internal symbolizer dump recall reason hope one nowadays see sufficient reason using provided information probably originally used different merging strategy strategy take first name known symbolizer fall back sub_xxxx name known result needed specify explicitly symbolizer ida get good naming ida installed used automatically however caveat two symbolizer providing different name subroutine depending order installation basically random subroutine named differently probably invent mergin strategy collect naming suggestion deal ambigious name entry point root disassembly hard say whether entry point actually subroutine definitely good place disassemble speed compilation service commit build plugins parallel employ thread building main program beta reduction evaluating let expression previous implementation used host stack store previous value let bound variable however behavior lead unnecessary side effect like access undefined variable even worse evaluation let expression environment poisoned new non existent binding new implementation follows closely say literally semanitcs bil language let expression first beta reduced i.e. binding basically inlined result let binding syntactic sugar probably publish function used analysis want reason let expression beta reduction applied clever way require alpha conversion basically binding pushed stack finite map applied order exactly described operational semantics add heuristic identification main heuristic simple main function function passed function latter name exists definitely find main function course heuristic relies presence probably specific gcc glibc try find corresponding function abi link lisp machine via linker interface interpreter independent lisp machine linker interface call subroutine lisp machine added regular machine component via linker interface linked code parametrized interpreter instance also lisp machine try evaluated much possible linking phase error delayed runtime load section added backend image project dictionary used loader get section add support virtual segment much big commit hard split independent still working commits summary support virtual segment virtual segment segment backed data file loaded loader think segment commit introduces support kind segment backend set negative offset signify segment virtual image loader touch segment accessible via image.virtuals function store file loader infromation project loader provide strictly information image data structure store moreover backend representation loader storable since totally inductive type put project data structure new function backend_image added image module store abi descriptor new bap_abi.name tag added abi pass storing name detected applied abi project dictionary support virtual segment coff loader loader still waiting chance coff loader virtual size segment previosly size raw data incorrect according specification virtual size corrected call linker primus interpreter hit unresolved jump target first ask linker whether linked jump block added contextual attribute arch abi context class arch actually abi subclass fixed lisp macro overloading resolution fixed lisp macro parameter substitution 10. implemented memory read memory write builtins 11. added primus x86 plugin implement primus csp x86 currently initializes cpu flag funny x86 flag left unitialized example direction flag although undocumented assumed equal zero unless anyone called std case also undocumented caller responsible clearing back clr x86 crappy 12. added support code window crt still unable pas crt function lifter really understand segmented memory model used initialized really understand window work wrt decided postpone task little bit especially since currently really need 13. fix lisp library new addition added strlen fputs function 14. primus loader initialize register previously initializes random generator probably correct set zero factor primitive plugin extends loader primitive moved lisp library plugin loader set brk endp etext edata variable make feature ready implementing malloc primitive add msg special form primus lisp msg form accepts formatted output implement memory allocation primitive still work though allows error format message error occurs evaluation formatted message terminate machine instead printed primus emulatates test program fact even able emulate extended program commit testsuite soon program malloc free memmove strlen strcpy strchr putchar copy parse user input print performance wise testing program run twice faster qemu switched testsuite primus branch track address interpreter make thing easier track also usefull statistic enables stack call invoke subroutine previously impossible pas argument via stack lisp binary work fine stack frame allocated filled argument deallocated longer needed add auxv parameter always passed depending libc configuration hirt raise stack base pointer previous value 16mb 8mb reserved stack leaving 8mb sizeof code data heap new value 1gb leaving gigabyte heap fix stdcall abi address reserved return address caller decrease applies abi newly found main function heuristic main function identification work forget apply abi transformation relaxes primus linker linker longer requires tid possible link code based address name tid even possible link without reference add function summary fix bug implemented strrchr memrchr getenv stubed function synced testsuite rewrote beagle beagle work primus framework completely different detection mechanism fix undefined behavior value move far undefined behavior encoded statement constructor unknown introducing undefined value wrapped primus module primus namespace move monad syntax signature separate module useful referencing monad implementation especially implementation decided extend syntax reimplements conquerori using bap.std interface questio really need maybe remove module next commits remove conqueror library indeed used anymore backward compatibility handled bap_microx library deprecates microx library add operator primus.machine short hand move primus unit bap_ namespace add bap_primus.mli renames primus lisp library primus lisp move trapper beagle bap_strings also renames general unscrambler add string plugin strings.scanner module generic string finder sync testsuite initial idea ogre wip implement ogre parser implement ogre antiparser make parser robust trailing whitespaces change representation format format streamable i.e. needed parse whole document moreover definition may interspersed definition though declaration attribute precede definition implement ogre expression possible perform arbitrary query add type safe query interface ogre add floating type fix expression parser add foreach monadic operation first working version ogre fix storage issue ogre add doc signature stored reversed order tuples written reverse also fixed issue double quoting string parameter fix empty row query row empty even try access column add doc change interface distinguishing error denotes document well formed system error merged currently raising exception case latter however brings world doomed raise exception function return result probably future switch or_error.t error type distinguishes different kind error note far documentation describe desired behavior actual one still work actually type checking implemented commit also add merge function take two document merges add attribute value typechecking added attribute must correct arity value representation added description image backends ogre format minor added ogre opam file added run string plugin opam added bap string opam file added primus stuff opam removed readable segment query minor switched real sement size minor change add self join operation commit make possible select attribute multiple time i.e. make self join also provides new kind variable positional variable string like subscript used create variable e.g. fld bind field fld attribute selection e.g. find different student name  select student student join field name   commit also fix bug triggered empty attribute selected part bigger selection mapped changed minor minor bunch query optimization got ten factor speedup still room improvement added doc string minor add optimization switch normalized form fasten comparison commit add equality operator applied field without parsing remove constant factor microsecond per entry algorithm still exponential query optimization e.g. reordering filtering product done field future improvement ogre.foreach longer requires monadic result user foreach function choose monadic result immediate one former ogre.seq.all function used move monad sequence update bap_image_ogre latest interface also fix issue move image module ogre rail image longer backend abstraction except legacy backends wich derive ogre specification backend pass virtual physical size loader commit add small workaround legacy loader pas virtual physical size segment idea segment file create named section base address size field filled virtual size segment solution backward compatible legacy backend behavior hence virtual section provided physical size used implementation  backend side vsize field added segment data structure old trick negative offset removed instead size stored segment data structure image created segment add section name base address vsize field size image module mapped region created search section name base address segment constructing section found use size segment size otherwise fallback size provided segment p.s test passing least machine ida add explicit cast segment offset clang emits error without remove dependency kasprintf function function available ocaml 4.02.3 update testsuite add libc runtime detection heuristic hacky defnitely wrong place work hand would happy remove beagle ala cleanup ready merge,,
444,5a2628423796a3b1e71b90693fc0af132aa97cb5,itoleg <forown@yandex.ru>, 2017-04-03 11:00:52 -0400, , fixed macho dynamic symbol error compiling llvm 3.4 646,,
445,a5e82c0040b3a0275c04ad05cbcff0b3f9728776,itoleg <forown@yandex.ru>, 2017-03-30 09:05:58 -0400,642, removed displacement checking modern x86 lifter 644 removed displacement checking modern x86 lifter fix http github.com bap issue 640 fix http github.com bap issue 642 fix prevent project fails byte sequence like source memory operand defined zero segment base index value lifter perform check operand use made better bil generation,,
446,f871c5de2e6cbcabad30efb6cae90f3ab2f8332e,tephen <stephengroat@users.noreply.github.com>, 2017-03-08 06:41:33 -0800, , move current ocaml script 638 cleanup travis move ocaml script also add osx currently allowing failure remove osx build work copy past skill,,
447,d6194289149e10c88499922abb9593f7b2eb84af,itoleg <forown@yandex.ru>, 2017-03-08 07:43:13 -0500, , removed dependency cmdliner plugins 637,,
448,bbd8115f5c2231a1667b981ee6e3aa5dc56f1145,van Gotovchits <ivg@ieee.org>, 2017-02-09 17:16:27 -0500, , add lost beagle file 629 also add automatic generation tgz binary,,
449,fcb81f4418beecf629f62d1aca02f069fbed6fd5,van Gotovchits <ivg@ieee.org>, 2017-02-09 16:48:45 -0500, , prepares 1.2.0 release 628 bumped version updated change updated readme added release tool binary release prepare deb rpm package opam relese release opam,,
450,139b7cbb19234c008306669ea4a0e67a6e55faa3,van Gotovchits <ivg@ieee.org>, 2017-02-09 15:29:07 -0500, , beagle obfuscated string solver 627 first prototype beagle idea  high level beagle tracking everything smell something smell grab track follow trail temperature given threshold case grab target mark prey temperature estimated following recurrence  alpha alpha phi  temperature confidence whatever sniffing target alpha sensitivity parameter defines fast trail loosing temperature phi confidence something smell  defines fast hunt prey currently either something smell 1e4 smell implementation  beagle microexecution run subroutine every time word seen interpreter beagle targeted current status  currently parameter hardcoded many parameter estimated specified user predicate defines something smell whether character is_ascii is_null usage  build install make run ida shift specify option beagle attribute name beagle prey use text search alt navigate prey beagle update new feature searching static string binary identifying reference static string signal processing char data identify word like pattern word recovering based dictionary attribute beagle word word built term beagle char sequence character computed term nearby term beagle string static string explicitly referenced term either directly indirectly basically description algorithm identify null terminated string microexecute subroutine block try detect word like signal microexecute subroutine block detect direct indirect access known null terminated string use user provided dictionary plus string find binary recover possible word built set string annotate project whatever found matures beagle big commit reflecting several day beagle training first trained understand new command beagle print string print found static string beagle print word print generated word beagle print char print detected char sequence beagle ignore string ignore found static string beagle word try build word dictionary beagle alphabet force beagle use different alphabet beagle word add word beagle dictionary default use case still run beagle via pas beagle annotate program tree reference string print option mostly debugging standalone using speaking static string i.e. compare string utility currently beagle output slightly string string bug limitation design beagle find string null terminated string find string even last character arbitrary non printabl byte experiment behavior add trash however probably good reason string author decided use string example work pascal binary string required null character end given consideration probably resign allegiency null terminator future prepares beagle release prefixed name packaged oasis boring stuff,,
451,5a82d0ed6936a067f1633c1792da178f4b2a874d,itoleg <forown@yandex.ru>, 2017-02-09 11:32:52 -0500, , updated testsuite submodule 626 contains test api plugin option,,
452,ada83926a950026d71329dc673607fba7f4c019c,itoleg <forown@yandex.ru>, 2017-02-09 10:10:22 -0500, , delete attribute function project module 625,,
453,636ac9f6bdf1a7501a1f214803901872fe6e2c5d,itoleg <forown@yandex.ru>, 2017-02-09 08:59:58 -0500, , fixed compilation warning 624 fixed minor warning code,,
454,ad5c647137347b37ba158bce02216aaae4a79ade,itoleg <forown@yandex.ru>, 2017-02-09 07:56:39 -0500, , store api file api plugin 621,,
455,1760b87ecec66e181b1ef9ebc9779610b5c12e19,itoleg <forown@yandex.ru>, 2017-02-08 16:39:14 -0500, , implemented proper error handling 620,,
456,513abf88f2f0d594fbd44d8f807a5d900a15013d,van Gotovchits <ivg@ieee.org>, 2017-02-08 08:14:41 -0500, , binary deployable bap 623 make bap standalone wip switch native version postinstall tool byte version work sudo add plugindir variable add new specific configuration variable designates location plugins instead libdir bap anticipates non trivial destination bapbundle desintation may exist case default behavior utility would treat destination file need create directory first exist also possible destination folder case overwrite plugin usually user want instead ask directory name clean debug print statement add script building deb package script extremely crude really follow debian ubunty policy better something produced debian package dependency basically libz libgmp libstdc ocaml llvm dependenices statically linked script build three package bap.deb bap frontend plugins libbap.deb bap binding shared library libbap dev.deb development file bap binding installed dpkg bap.deb dpkg libbap.deb dpkg libbap dev.dep script create new opam switch make fresh clone bap bap binding repository,,
457,effad65e7c9ae860d41efa282da5be6565c6b938,van Gotovchits <ivg@ieee.org>, 2017-01-23 17:26:31 -0500, , fix llvm loader naming issue 619 name value captured self module used library solves issue setting explicit name llvm loader,,
458,1e280e3daaeb5253a03548b969946ce60cb633dc,itoleg <forown@yandex.ru>, 2017-01-23 14:55:05 -0500,618, merge pull request 618 ivg support jessie support debian,,
459,6477995633a32df3686a8a474648beab56506e0f,van Gotovchits <ivg@ieee.org>, 2017-01-23 13:42:56 -0500,614, support debian followup 614 added vagrant file provision jessie bap issue jessie old opam support plugin opam install depext solves issue jessie llvm 3.4 magic picking right version work expected due old opam one need explicitly install required version e.g. opam depext conf llvm.3.4 install bap silently clang compiling part available default jessie explicit sudo apt get install clang needed see 617 basically following script work fresh jessie box shell sudo apt get update sudo apt get yes install clang sudo apt get yes install opam opam init auto setup comp 4.02.3 yes eval opam config env opam install depext opam depext conf llvm.3.4 install yes opam depext bap install yes sudo apt get install python pip yes sudo pip install bap ,,
460,6e90b2f26a7fa77ceaf8f26ca4a8eedeb7d2c927,itoleg <forown@yandex.ru>, 2017-01-19 07:53:42 -0500, , minor 613,,
461,dd9b0e6b54fb5070976828120b25076f9f6084dd,itoleg <forown@yandex.ru>, 2017-01-18 17:00:46 -0500,607, fix http github.com bap issue 607 615 forced docker build last bap version master branch,,
462,dce95ff969c50ca75b8d12973cce44da573bcb57,itoleg <forown@yandex.ru>, 2017-01-05 15:16:29 -0500, , updated travis run three compiler 610 travis run bap three compiler 4.02.3 4.03.0 4.04.0,,
463,73c195a70d05dbb9d05a5c2277df97a2ab79a212,itoleg <forown@yandex.ru>, 2017-01-05 10:05:05 -0500,609, merge pull request 609 gitoleg compile 4.04 bap compilable 4.04.0 compiler,,
464,b69189e04aa62ac5c82352921ddcf69ae86a44b2,leg <forown@yandex.ru>, 2017-01-05 08:12:37 -0500, , bap compileable 4.04.0 compiler solved bap compilation problem compiler version 4.04.0,,
465,6fd8f4fbba01c4da922e80ae2373e2c7daed7618,van Gotovchits <ivg@ieee.org>, 2016-12-23 12:11:53 -0500, , bumped bap version 604,,
466,aff4350924c0797916dc28b12df17683e103bf23,itoleg <forown@yandex.ru>, 2016-12-22 18:09:24 -0500,603, merge pull request 603 gitoleg patch updated link doc,,
467,bf2b137b0b22e0e872afe13abb4f49a8caeeaf3b,itoleg <forown@yandex.ru>, 2016-12-22 17:48:08 -0500, , updated link doc updated link doc 1.1.0,,
468,4b79bc1a3aac180b688a79a574c283ab567654e3,itoleg <forown@yandex.ru>, 2016-12-22 17:29:09 -0500,602, merge pull request 602 ivg update ida integration update new ida integration interface,,
469,9d320e6b5a58aaa5694ed21c9cc6ca13b71ff3e5,van Gotovchits <ivg@ieee.org>, 2016-12-22 17:08:59 -0500, , update new ida integration interface make bap compatible new bap ida python package also introduces improvement like proper handling special character generated output ignoring attribute address,,
470,bd08dd4ffc55db28cc5d776a2ea67ff3727b22e1,itoleg <forown@yandex.ru>, 2016-12-22 17:04:18 -0500,576, added documentation memory.table module 600 fix http github.com bap issue 576 added comment function memory.table module added existsi for_alli function hidden,,
471,7484e26c5efed1b3bfd3bf08a60b96622ea038f4,itoleg <forown@yandex.ru>, 2016-12-22 16:43:13 -0500, , added forgotten warning 601,,
472,7c532aae3d057ac301af7b806b2451705ea89909,itoleg <forown@yandex.ru>, 2016-12-22 14:37:09 -0500,599, merge pull request 599 ivg propagate backtraces pass propagate backtraces pass,,
473,dd7d052ad36d37c293390f6659e03c01a24495d4,van Gotovchits <ivg@ieee.org>, 2016-12-22 14:10:27 -0500, , use unnumbered list change,,
474,ab88866377e8bf1afaebd7c3ea71edade4c973e4,van Gotovchits <ivg@ieee.org>, 2016-12-22 13:59:39 -0500, , propagate backtraces pass allow user see backtrace exception thrown pas backtraces printed exception including failure invalid_arg i.e. special handler exception disabled problem  pas runner capturing exception thrown pas rethows wrapped pass.failed exception since newly thrown exception physically structurally different caught exception backtraces erased propagated result printed backtrace show path pas runner entry point frontend always doe really bear information obstacle  since bap api fronzen change pass.error type failed exception solution  backtraces extraced pas runner place caught translated string attached exn.reraised exception reraised room improvement however first sort abusing exn.reraised exception however abuse local solution would anymore safe robust api breaking change affect representation exception error type second propagated backtraces still slot specific pas runner bear interesting information nice trime away get clean trace start user plugin,,
475,c9bea0bb90e649e69c44350e77a6d0438427c8c4,itoleg <forown@yandex.ru>, 2016-12-20 14:15:59 -0500,589, api plugin stop processing case failure 597 fix http github.com bap issue 589 api plugin stop exit emitting error message,,
476,5d301bd00f4a8bd3fcd8b562e4a3e3928884db9e,itoleg <forown@yandex.ru>, 2016-12-20 12:30:10 -0500,572, fixed compilation warning 596 fixed http github.com bap issue 572 next warning silenced ocaml.warning attribute  warning deprecated noalloc used instead noalloc warning deprecated warning deprecated warning deprecated warning deprecated  next warning fixed code edition warning ambiguous pattern variable guard next warning fixed still appears compilation  warning cmx file found path module clexer interface compiled opaque warning cmx file found path module cparser interface compiled opaque warning cmx file found path module topdirs interface compiled opaque warning cmx file found path module interface compiled opaque warning override effect syntax partly ,,
477,4bb936e8c06ef49579fcb9b7225d5068e18e61fa,itoleg <forown@yandex.ru>, 2016-12-16 16:15:37 -0500,591, fixed bap exit status unknown file option pass 595 fix http github.com bap issue 591 bap exit abnormally unknown pas option file exist,,
478,2c7d693e5dc015b3f58b3f46ea5887737408136d,itoleg <forown@yandex.ru>, 2016-12-16 11:45:34 -0500,381, use bapbundle plugins without specifying extension 593 fix http github.com bap issue 381 allows install remove bap plugins without specifying extension e.g bapbundle install mycode instead bapbundle install mycode.plugin latter version still available update show command,,
479,8c98e09ec772d7fc87e863b25270ab981014c801,itoleg <forown@yandex.ru>, 2016-12-15 15:44:17 -0500, , fixed extract function x86 utils 592 expression bil cast low lsl int_exp mean take low bit lsl int_exp expression right lsl actually evaluates start bit start extaction left shift taking low bit wrong approach change influence instruction pshufb pshufd,,
480,506b7742b4745e3af5bdd843e92ae8d09a09bbf6,itoleg <forown@yandex.ru>, 2016-12-15 11:39:09 -0500,553, fix llvm 3.8 specific issue 590 fix http github.com bap issue 569 fix http github.com bap issue 553 change allowed soft fail disassembler soft fails usually bound fails checking different condition like using certain register certain instruction lead undesired behavior disassembling fails instruction reason main symbol invisible arm file added config x86 plugin distinguish llvm version registering lifting function x86 plugin reworked allow flexibility extensibility plugin developer fix lib_test library difference llvm 3.4 3.8 fixed segfault stripped static elf file better say added workaround since segfault llvm 3.8,,
481,6558d4da650604acbb38ef453a63e6c815d438a4,itoleg <forown@yandex.ru>, 2016-11-23 11:14:27 -0500,571, fixed segfault corrupted file 586 fix http github.com bap issue 571 although segfault could happen every type file llvm guess magic example given issue,,
482,b6004ce467c9b7cf0b0966ac34d600a2641b22ae,itoleg <forown@yandex.ru>, 2016-11-17 11:20:10 -0500, , added two env variable check test 585,,
483,a8b3efc7073401e3534c25b5b8cb638de4de1018,van Gotovchits <ivg@ieee.org>, 2016-11-02 13:01:44 -0400,582, fix asr operation bitvectors 583 fix asr operation bitvectors operation properly lifted sign bitvector ignored thus arithmetic shift actually treated logical one fix 582 also extends testsuite prevent regression fix asr operation bitvectors operation properly lifted sign bitvector ignored thus arithmetic shift actually treated logical one fix 582 also extends testsuite prevent regression,,
484,21fb15fa9351ae551c0596dfbf88e1283a2cff55,itoleg <forown@yandex.ru>, 2016-10-07 16:13:10 +0400, , added pretty printer event bap trace 573,,
485,0bb2580b08374b3d1c1ba8b0930684c7dc525d52,van Gotovchits <ivg@ieee.org>, 2016-09-26 18:13:17 -0400, , updated change file 565 future impose policy every introduces something new must update changes.md otherwise always outdated,,
486,d83975ad3b1c2322aeb8608268aeb7ad2c0d1eeb,van Gotovchits <ivg@ieee.org>, 2016-09-26 17:47:06 -0400, , bumped version 1.0.0 566 effectively freeze api,,
487,c17f4def343b5a13480c14deca70f45d20be3f1f,van Gotovchits <ivg@ieee.org>, 2016-09-26 17:18:15 -0400, , updated testsuite master 567,,
488,327eb3929fb4a50dc623badea4b2ba1dd7cd26c6,van Gotovchits <ivg@ieee.org>, 2016-09-26 16:11:46 -0400, , add docker vargran file 564 docker file fresh new derived directly ubuntu trusty image upstream image used depend longer updated become outdated unusable vagrant file 4.02.3 trusty llvm 3.4 combination,,
489,45afdaac5bd265025fffa0821067552f00ba179b,van Gotovchits <ivg@ieee.org>, 2016-09-26 07:50:57 -0400, , update readme license 561 update readme licence since ocaml moved away qpl use plain old mit license package even involve compiler libs readme also updated reflect year change updated badge fix review still decided keep readme.md fat moved shell top matt suggested also added small output option motivating example also added link newly written troubleshooting page common error highlighted readme fix capitalize opam remove leading prompt script example fix example thanks gitoleg,,
490,2d825313d6eff0f0d4ed548b561337b0207a3a97,van Gotovchits <ivg@ieee.org>, 2016-09-21 14:50:14 -0400, , use instead fix clash 559 fix 354,,
491,cadb9b41d63cd3452e10bb4f9753a02068a1cf19,van Gotovchits <ivg@ieee.org>, 2016-09-21 13:39:13 -0400, , documentation consistency change 558 note change contains breaking change see information introduces three main feature new tool rendering documentation actual documentation docstring interface change enforce consistency breaking interface change breaking  interface change simple previously used functor foo produce module type foo e.g. printable printable functor produce module type put enclosing module foo contains functor make produce module type example regular.make ... regular.s trie.make ... trie.s etc error message module type foo mean need use foo.s error message stating _functor_ foo need use foo.make,,
492,5685cac5dea763f377a8ea5e29ddb39fb89ff377,van Gotovchits <ivg@ieee.org>, 2016-09-21 10:59:56 -0400, , dehackify cxx llvm building 557 split setup.ml.in specified file contained definition generic belonged specific module thus breaking module abstraction boundary llvm flag hardcoded rule building file make everything proper way use tag properly rule later inject proper flag package need special building rule file oasis directory example llvm package defines building rule three file oasis define configuration parameter oasis llvm.tags.in tag file need specific handling oasis inject llvm flag building tagged file still thing fixed example piqi cxx rule hardcoded path option fix configuration mac panic llvm config look llvm confi ver ver include patch version,,
493,55f2c227019ca9c1c564fe02dc4eed92af64732f,averick Woo <maverickwoo@users.noreply.github.com>, 2016-09-20 12:05:35 -0400, , add space output system libs 551,,
494,729712e0f16d5608ca211c8716833dfbf0af7860,van Gotovchits <ivg@ieee.org>, 2016-09-19 17:11:10 -0400, , constraint ocurl version 0.7.7 556 look like ocurl.0.7.8 compile ubuntu precise although work fine least trusty,,
495,fa6819380006161361116030290d682ba480d653,eseal <feseal@yandex.ru>, 2016-09-09 16:59:50 +0400, , x86 lifter 549 x86 lifter mov btc btr bts cmpxchg instruction fix,,
496,33e9e2ec66496e06dc1d0a280d21c86c43b75c6f,van Gotovchits <ivg@ieee.org>, 2016-08-26 15:57:15 -0400, , llvm 3.8 546 llvm 3.8 support llvm symbolsize smart pointer handling fix generic read symbol function temporary symbol info output clean memory struct uint8_t char llvm feature oasis llvm update eliminates unnecessary param formerly overloaded create_image function warning fix etc 489 improve warning message user suppress warning message compilation prevent namespace collision fix open removing unnecessaries internal symbolizer fail 492 raw binary passed light loader used internal rooter symbolizer unable provide information expected behavior treated error config default 494 let default part converter update plugins use new converter remove unnecessarily specified default dont pre fail dont use invalid_arg default set sane default documentation make converter abstract prevent printer repeat create empty symbolizer 499 symbolizer override latter precedence former fill fix 497 add doc_enum 500 remove symbol option frontend 501 several reason symbolizer rooter orthogonal practical reason restrict rooter default behavior say symbolizer ida without concertizing rooter i.e. use available information symbol option possible implement default option rooter fix 496 option fragile broken lifetime mostly break spot rule allow disabling certain plugins feature enabling everything 502 allow user disable configure time make posix compatible fsi benchmark disabled ida doe exist allow configure without params extending config 505 allow plugins deprecate configuration option allow synonym specified add as_flag allow param flag behaviour prevent warning user doesnt use param config plugins 504 update demangle plugin update x86 plugin update byteweight plugin update llvm plugin update print plugin update map term plugin update api plugin update phoenix plugin use synonym api deprecate label favor label clearer code llvm config 3.8 system libs 506 removed redundant param constructor get32plusheader image entry added function dynamically downcast unique pointer added llvm 3.4 plugin code fixed include guard llvm legacy header file minor comment cleanup owningptr binary fix binary smart pointer ownership fix llvm config 3.5 flag support updated .gitignore one .gitignore update actual last .gitignore change ignore configure commit fix segmentation fault caused pe32 binary initial working refactor llvm 3.8 removed unnecessary coffobjectfile code block pertaining section rva updated legacy llvm binary code touch gitignore commit autogenerated file also ignored try commit pure whitespace change usually clobber change making reviewer life harder needed make separate commit use using declaration relax change difference std error_code llvm error_code observe name make impact change much painful use using declaration reviewed load_commands function must removed abuse using directive useless renaming minor review comment rest llvm_binary.hpp fine started llvm_disasm review also discarded noise change initial fixup llvm 3.8 plugin initial ifndefs llvm version specific code partially added llvm 3.4 plugin code disasm backport llvm 3.4 working 3.4 3.8 llvm code cleanup refactor fixed 3.8 compilation arch_ reverted triple archtype small fix cleanup 3.4 llvm added using directive else block fixed else indentation added empty memoryobject class 3.8 memory representation abstraction fixed memory corruption issue working disasm 3.8 using memoryobject abstraction ... tested 3.4 added view abstraction overcome llvm memoryobject limitation bumped testsuite use image base segment offset previous version entry point used fix indentation set favorite emacs indent code correctly want change concern whitespaces let get rid soon possible sent emacs configuration file make sure using make sure following setting config lisp setq default style setq default basic offset set variable parens require space nil set variable cleanup list quote brace else brace brace elseif brace brace catch brace empty defun brace one liner defun scope operator never use tab indenting never ever ever setq default indent tab mode nil add hook mode hook lambda set style stroustrup toggle hungry state set offset innamespace  fix entry point needed read manual carefully suspect add base remove uneccessary utils namespace using outside compilation unit export use anonymous namespace way making function static fix error handling trouble error handling currently soon explode shoot essential part better fix soon move iterator_range move sec sym seg read function iterator_ranges latter available 3.4 implement easy pull 3.8 sure use bap memory represent memory use free function view implemented differently version convert type expected disassembler added function removed create_image function deleted comment block code cleanup debug output fix coff symbol size incorrect using llvm use coffobjectfile getimagebase pe32 binary minor fix 3.4 code section namespace fail due invalid symbol minor cleanup ... nothing special initial working llvm 3.8 3.8 plugin ifdefs fix coff symbol read nllvm_binary_38 added oasis llvm initial working 3.4 llvm contains fix llvm_binary_34 minor fix llvm 3.4 removed final ifdef section namespace coff file removed comment block code cleanup code cleanup 3.4 3.8 small change llvm 3.4 code simulating removed trash fixed build configuration made setup robust llvm versioning scheme,,
497,40c8db7ffab745e966cf75b959ea1479d0c77730,van Gotovchits <ivg@ieee.org>, 2016-08-25 15:53:40 -0400, , support code new python interface 543 new python interface popen run bap dump project data adt format readable python simple approach allows get programmatic access python data discovered analysis following example demostrates basic python import bap proj bap.run bin true symbolizer ida text proj.sections .text main main entry main.blks next main.blks.find entry.jmps .target.arg  see corresponding repository documentation recommended use ipython explore binding later create sphinx documentation change added adt printer project data structure consistency dashified attribute contained underscore removed subroutine addr insn addr block attribute substituted address attribute need distinguish instruction subroutine block address removed unecessary attribute like target name subroutine name note bap python repository updated soon merged,,
498,e687dba59ef8c16631acfdd3fdc7743dd77ae9db,van Gotovchits <ivg@ieee.org>, 2016-08-23 15:04:08 -0400, , update latest oasis 542 updated setup harness latest oasis fixed oasis version opam,,
499,50aedd7f287b554373a5ad8717cae8e059558c3d,van Gotovchits <ivg@ieee.org>, 2016-08-23 11:39:31 -0400, , move python binding separate repository 541 new home pythong binding bap python rationale binding depends optional component bap removed main repo previously,,
500,d1badbaab0180d53d60fac792da249571faa0e9e,van Gotovchits <ivg@ieee.org>, 2016-08-23 08:02:54 -0400, , publish create close function basic disasm 540 previously basic disassembler could accessed with_disasm function safe versatile least one use case cps style enough may need pool disassemblers example bap server add function module interface however discouraged with_disasm function considered whenever possible,,
501,c63e36b04f56ab9c22f812bceb9ddafcb8af3466,van Gotovchits <ivg@ieee.org>, 2016-08-22 09:21:48 -0400, , add dejagnu dependency 538 although package optional need add opam opam file since includes non optional make check call another option would make check rule check presence dejagnu already doe ignore testsuite present look like option increase entropy would better add package dependency resolve 537,,
502,c87f7a784a294d70ba8e5784c93f5990e139ba35,ay Bosamiya <jaybosamiya@gmail.com>, 2016-07-29 19:50:27 +0530, , introduce pas pass 531 introduce pas pass improve doc,,
503,25de736ca57d07375ab7fb07ad40a95fe881693c,van Gotovchits <ivg@ieee.org>, 2016-07-28 15:10:39 -0400, , merge prefix llvm backend 532 disable prefix llvm disassembly step prefix detected ignore recurse step function return add memory region occupied prefix instruction scheme allows arbitrary nesting prefix since official way i.e. predicate identifying instruction prefix rely convention prefix instruction _prefix suffix name performance build set instruction opcodes name far one thing tbd fail invalid instruction prefix followed valid instruction uint64_t addr robust step function step function check error carefully trust llvm llvm backend emit prefix empty prefix prefix prefix invalid instruction well prefix invalid instruction also invalid update testsuite fixed prefix behavior special case,,
504,5787ed9039f50ebdb519f116bb5e0d2f330afa62,van Gotovchits <ivg@ieee.org>, 2016-07-28 12:53:58 -0400, , better target lookup llvm backend 530 better target lookup llvm backend new lookup stategy follows closely llvm implementation able find existing architecture systemz able use intensive target lookup llvm backend patch add support systemz architecture reason passed without name target found reginfo structure hand architecture except mips found architecture passed explicitly try first search using official method arch triple specified fails specify triple updated testsuite,,
505,add6cf1c9faace2f7abe0b1c8a946349a0e15bb1,van Gotovchits <ivg@ieee.org>, 2016-07-28 11:37:08 -0400, , bap error reporting 529 fix error command line handling bap refactor bap tool conform coding quality standard fix error printing erroneous instruction properly higlighted also renamed max insns command line option one reflects much better option actually also fixed version number updated testsuite fix bap architecture accidentally commited debugging code,,
506,e2e0da369326811c268712ddaa81c58ddb8e5a1e,van Gotovchits <ivg@ieee.org>, 2016-07-26 13:04:03 -0400, , fix method overloading warn unused marker class 528,,
507,806bfc17607eef7f0a107f7b7db49ed854bc4ebb,van Gotovchits <ivg@ieee.org>, 2016-07-18 07:46:34 -0400, , updated testsuite 526 reason github activate merge button although test passed,,
508,8ea44d3eadec14cd2917db0e90daec5ce73fe0a9,ake Parker <jacob.parker@icloud.com>, 2016-07-15 09:54:59 -0400,521, llvm plugin refactor corrected coff section address 525 goodbye segmentation fault caused pe32 binary refactoring namespace segment additional refactoring handling coffobjectfiles refactoring symbol section namespaces removed segment constructor fixed narrowing conversion warning stemming list initialization correct section address coff binary object make symbol namespace pretty additional refactoring handling coffobjectfiles refactoring symbol section namespaces removed segment constructor fixed narrowing conversion warning stemming list initialization resolve x86 abi issue 519 resolve several x86 abi issue found new testsuite currently x86 abi know pas array unknown size different abi allows pas via register certain condition hold size known size unknown usually passed pointer since currently support x86 abi preliminary fixed locally posix added abi autodetection heuristic may detect binary abi better approach would store information original file format knowing file pe32 pe32 format much better heuristic guess window added demangling win32 file result saluki able work binary box even without ida help pe32 binary usually much symbolic information integrate testsuite 520 integrated testsuite repository added check phase opam file every build also checkout testuite run test initialize submodule git repo since pinned opam longer git opam recursively fetch submodules added dejagnu dependency bumped testsuite newer version support older tcl quick fix 521 522 flag triggered enable disable oasis feature e.g. enable test enable doc etc put special args protected removing kind crude work quick fix resolve properly correct section address coff binary object make symbol namespace pretty,,
509,04be90428bb876a8dea6c64fbc40acdd583f5677,van Gotovchits <ivg@ieee.org>, 2016-07-14 17:40:56 -0400,521, quick fix 521 522 flag triggered enable disable oasis feature e.g. enable test enable doc etc put special args protected removing kind crude work quick fix resolve properly,,
510,1db25f47c775f9ba8f5432b98337e8c3417c17a2,van Gotovchits <ivg@ieee.org>, 2016-07-14 16:37:46 -0400, , integrate testsuite 520 integrated testsuite repository added check phase opam file every build also checkout testuite run test initialize submodule git repo since pinned opam longer git opam recursively fetch submodules added dejagnu dependency bumped testsuite newer version support older tcl,,
511,c1c1d8741bbf4bb22b144d09aba9a5f3f1712f16,van Gotovchits <ivg@ieee.org>, 2016-07-14 13:56:31 -0400, , resolve x86 abi issue 519 resolve several x86 abi issue found new testsuite currently x86 abi know pas array unknown size different abi allows pas via register certain condition hold size known size unknown usually passed pointer since currently support x86 abi preliminary fixed locally posix added abi autodetection heuristic may detect binary abi better approach would store information original file format knowing file pe32 pe32 format much better heuristic guess window added demangling win32 file result saluki able work binary box even without ida help pe32 binary usually much symbolic information,,
512,b62fa1ddfc6ec2ed3efd8fffb9bb7c5ad2dffbbe,ake Parker <jacob.parker@icloud.com>, 2016-07-13 15:25:59 -0400, , goodbye segmentation fault caused pe32 binary 514,,
513,23b36a9e1de1f9c48aa8d2111d6bb75909183b0b,ake Parker <jacob.parker@icloud.com>, 2016-07-07 12:37:59 -0400, , fix possible use free llvm_binary plugin 509 binary smart pointer fix binary smart ptr minor indentation fix line 439 commit eliminates unnecessary second param formerly overloaded function remains one instance double parameter passing resolved separate commit removed redudant template param constructor downcast binary smart pointer removed deleter template parameter dynamic unique pointer casting function,,
514,a042f04def47ba4a5246434a9de58f67b5d85228,ake Parker <jacob.parker@icloud.com>, 2016-07-01 14:37:27 -0400, , llvm config 3.8 system libs 506,,
515,1aa119c5259a320dc33c8687d224a3ddda6ce579,ay Bosamiya <jaybosamiya@gmail.com>, 2016-07-01 12:57:51 -0400, , config plugins 504 update demangle plugin update x86 plugin update byteweight plugin update llvm plugin update print plugin update map term plugin update api plugin update phoenix plugin use synonym api deprecate label favor label clearer code,,
516,fc6cefcd9de4147a3d3a333c60e6640d252078af,ay Bosamiya <jaybosamiya@gmail.com>, 2016-07-01 12:06:44 -0400, , extending config 505 allow plugins deprecate configuration option allow synonym specified add as_flag allow param flag behaviour prevent warning user doesnt use param,,
517,8109e5b8d693bdf45034f2e0be74863993991822,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-29 11:18:24 -0400, , allow disabling certain plugins feature enabling everything 502 allow user disable configure time make posix compatible fsi benchmark disabled ida doe exist allow configure without params,,
518,5b26c254ce03a6ec9fbb794406ff4dc0a2b48d07,van Gotovchits <ivg@ieee.org>, 2016-06-28 17:11:35 -0400, , remove symbol option frontend 501 several reason symbolizer rooter orthogonal practical reason restrict rooter default behavior say symbolizer ida without concertizing rooter i.e. use available information symbol option possible implement default option rooter fix 496 option fragile broken lifetime mostly break spot rule,,
519,2d33cd656156fdca0d68cb4ae48c6faf40841e66,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-28 16:47:18 -0400, , add doc_enum 500,,
520,90c847d9d423fea8e9520a721ae21ed1453b5636,van Gotovchits <ivg@ieee.org>, 2016-06-28 16:30:57 -0400, , create empty symbolizer 499 symbolizer override latter precedence former fill fix 497,,
521,377a4fa4fa1667230eef6ab4dc85c9c594590a7c,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-28 14:48:07 -0400, , config default 494 let default part converter update plugins use new converter remove unnecessarily specified default dont pre fail dont use invalid_arg default set sane default documentation make converter abstract prevent printer repeat,,
522,9af145de4759f1044a79f50d6bae2ae4d5d4c8a5,van Gotovchits <ivg@ieee.org>, 2016-06-27 16:22:18 -0400, , internal symbolizer fail 492 raw binary passed light loader used internal rooter symbolizer unable provide information expected behavior treated error,,
523,eecd0b3f2da1420e71a541d39c76d7d5c2fd229a,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-27 13:33:59 -0400, , warning fix etc 489 improve warning message user suppress warning message compilation prevent namespace collision fix open removing unnecessaries,,
524,04b004685e8763e309c68d26189c36b898f0c401,van Gotovchits <ivg@ieee.org>, 2016-06-24 14:21:58 -0400, , support builtin integer type proper tag 486 support builtin integer type proper tag builtin integer  add support builtin integral type type must added parser layer since context free language well many language following type automatically added typing context given supported chosen abi int8_t int16_t int32_t int64_t implementation note since concrete type representation defined particular abi specify header file otherwise header portable also want accidentally capture type definition host system use preprocessing preprocessor fill type compiler limitation currently provide size_t ssize_t type also implementation specific look like need extend abi interface currently working subject proper tag namespaces  since new structure union enum definition creates new namespace field extend field representation string pair string pair enough since namespaces nested limitation anonymous name supported full extent empty tag name namespace make two different field nominally equal defined scope proper way would generate unique tag anonymous tag also fix enum representation list field instead number abstract number field added type mapper visitor added resolving forward referencing still issue name work least use typedefed name,,
525,e572af8f48fcb802409849fda042550191bb5439,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-24 11:56:47 -0400, , allow ida path specified runtime 485 allow plugins override default config ida allow path set command line allow user specify headless ida plugin use config interface stop using many optional args new interface use service dependency injection use ida plugin provide service library library accepts provided service let used plugins update command interface rename process parser allow function get field command basically added mean specifying ida path someplace would mean plugins get ida connectivity someplace config file ida localized one spot future decide provide ida differently example network library remains add new provider service implement create exec close prevent service registering path failure prevents exception also give user helpful message additionally commit also check user bap ida python installed ida trying point,,
526,fcfd4452a6a1f188b452db21b0391123f3d9cc43,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-23 14:23:17 -0400, , update fsi benchmark 487 wrap future use rooter get info watch stream start generating info use rooter name bap rather arbitrary better error handling default anymore handle rooter known need say tool tool,,
527,088b028fb5eed90c7f5468f65df4e1b5c20795bb,van Gotovchits <ivg@ieee.org>, 2016-06-21 14:25:57 -0400, , union rooter one preferred user 484 tried several default value rooter internal first one nothing internal work stripped binary negative user experience basically bap work box anything toy example compiled  first one non deterministic internal set problem result hard predict nothing mean bap output nothing unless specify rooter definitely option introduces new default rooter specified mean user particular preference use available information i.e. take registered rooter merge look like strategy allows recover code using one another rooter example taking bin example following result  75121 ida 69205 41878 ida  number left total amount term program result say rooter allow recover information rooter alone byteweight allows recover nearly twice information ida alone still allows user specific rooter use i.e. option rooter rooter used specify several rooter rooter rooter convenient rooter,,
528,b2726a9dbb2d410171f105895436019bf0caee3f,van Gotovchits <ivg@ieee.org>, 2016-06-21 13:54:55 -0400, , fix api stack helper 483 stage function may evaluate target support library available,,
529,1c9b16d22b1058898d2113d6cc804afe6558e138,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-21 07:31:50 -0400, , fix opam 482 remove artifact fix dependency constraint existed due historical reason,,
530,c8886eee7f1590941742ffcc565761e8962c2597,van Gotovchits <ivg@ieee.org>, 2016-06-20 17:55:57 -0400, , change evaluation context plugins event 481 far evaluation context switched plugin loaded context host program afterwards event fired result evaluated argument function context host program register_pass function registering pass name bap instead name plugin fix particular issue callback evaluated correct context issue fire switch one grammar one parsing scheme think little bit ensure event called proper context,,
531,d7d6444f049a6aab38382631d4e9323cf58c6521,van Gotovchits <ivg@ieee.org>, 2016-06-20 16:25:17 -0400, , better ida debugging 480 possible debug ida bap_ida_debug environmental variable greater autonomous mode disabled case error error dialogue pop greater library clean leaving database script intermediate stuff,,
532,382dca2fff0c2e64e40e1042228c3ee9415b7fdf,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-20 14:43:30 -0400, , update multiple plugins use config interface instead cmdliner 474 add converter list repetition cmdline add empty default make name non named argument prevent dangling optional argument argument used use config emit ida script instead cmdliner ensure right command line name used update cache use config update callsites use config update dump_symbols use config update ida use config update objdump use config update propagate_taint use config update read_symbols use config update taint use config update trace use config update warn_unused use config revert update ida use config reverts commit trace eval args plugins loaded simpler ignore remove artifact previous time correct ordering trace,,
533,f4a715abc39c29fd548b72b49697b4e288bd6ab2,van Gotovchits <ivg@ieee.org>, 2016-06-20 12:52:35 -0400, , use int64 cache size 479 fix 475,,
534,24963e5d85d8ed014403c2a4c7e74cb186912545,van Gotovchits <ivg@ieee.org>, 2016-06-20 10:47:10 -0400, , fix symbol rooter symbolizer option 478 rooter symbolizer default internal symbol option used fixed,,
535,f0d766c4d8c17171946cb841bf7029e05d1e845f,van Gotovchits <ivg@ieee.org>, 2016-06-20 10:19:28 -0400, , allow frontend link internal library 477 previously disallowed see big fat warning oasis fronted removed track internal external library leverage predicate mechanism ocamlfind internal library lib thatis linked host program record predicated used_lib later extract name linked library record registry linked library also revives byteweight frontend broken due dependency internal library byteweight problem manifested installed source tree worked opam repository,,
536,674ce287a888bc1647b7c2a9948eede3c0f55e8a,van Gotovchits <ivg@ieee.org>, 2016-06-20 09:29:17 -0400, , move logging library 476 otherwise standalone program life source tree access logging require user implement  order enable logging standalone program use log.start function,,
537,b28a66ebeca2013854435318c36ed1195f0f7d00,ijnard van Tonder <rvantonder@gmail.com>, 2016-06-20 08:32:48 -0400, , update opam support brew 472,,
538,e2d6fcf96ba0b9b2dc8abb960b21ff2f20c8f839,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-17 15:27:22 -0400, , bap future config update 471 update config interface prepare future see commit message use future rename config.parse expose function convert param future another rename update example usage evaluate command line args plugin loaded,,
539,28e50211db78a4818eddb363837469a0b529158d,van Gotovchits <ivg@ieee.org>, 2016-06-17 08:05:02 -0400, , verbose precise logging loader 470 leverage already existing event infrastructure report error provide precise debugging information plugins loaded,,
540,22be725e191af84761f85f093209dff5343222ca,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-16 15:55:43 -0400, , use bap ida python ida integration 467 use new import remove file moved bap ida python use new import use new import take care installation time update gitignore remove .ab compilation read config file note current implementation give hashtbl 0.t hashtbl 1.t error hence even compilable change fix use map instead hashtbl read env use algebraic type sexpr simplify config reading throw error instead use option also defines new value checked plugin loading ensure error come use standard exception run list instead sexpr simplify sexp code require plugin loadable stop depending conf ida completely use updated bap ida python stop runtime configuration minor fix,,
541,e978116ef77fae07a0c1ad1a8b444f1104790743,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-16 14:23:25 -0400, , allow runtime configuration plugins 468 first approximation add bap.std.config interface better error handling take care possible exception clean code use list.assoc instead map move self export bit give plugins access confdir themself work overriding bap confdir plugin level confdir subdirectory main confdir name plugin used name subdirectory take care non existing directory sometimes highest level bap directory doesnt exist use correct permission octal prevent shadowed name affecting subdir path check environment reading config file allow option see environment overridden value coding convention use eta reduced get proper caseless comparison use lowercase since easier eye ensure repetition occur coding convention prevent possible issue environment option silently passed file allow value use invalid_arg exception case remove old stuff new design decision first approximation handle thing config file update comment coding standard coding standard pipe add standard converter renaming documentation config rename config move toplevel config self updated doc rename config.t config.param also rename param reader rename config.create config.param move standard converter later file rename config.extract config.parse include self due moving config toplevel self make docstring code actually accessed code discourage usage conf outside plugin subdir documentation manpage_block change make default doc undocumented implement flag strip capitalization,,
542,7df788dbf1864624878f44f9a2198107a711c205,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-16 12:30:54 -0400, , enable caching built dependency 469,,
543,a64d5b5744b9db0a9917797f83493cd18dc7c421,ijnard van Tonder <rvantonder@gmail.com>, 2016-06-07 19:20:18 -0400, , catch llvm config ver 466,,
544,2d351d6973e22fbe0acfe716abb6668f40f0b4fd,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-06 19:59:23 -0400,462, bap view 465 wip wip add hack force update useful output update .gitignore due 462 add quick fix hexrays callback osx added minor change want waste time another,,
545,2f91da0a1ef778003c6cbd52e1a2c39f4c574cdc,van Gotovchits <ivg@ieee.org>, 2016-06-06 19:02:13 -0400, , fix warn ununsed argument parsing 464 define pass argument cmdliner raise exception otherwise prevent calling pass,,
546,fa44639e9444a7de08a65e693ef03470ef62915c,van Gotovchits <ivg@ieee.org>, 2016-06-06 18:11:34 -0400, , move python ida plugin 462 merge emit ida script bap plugin moved python path ida plugin folder,,
547,140e852f4a89ce23e8ae1b19467ab32bb2d839e5,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-06 14:40:08 -0400, , fix opam 460 proper cleanup opam opam delete file opam repository,,
548,a3707c8ace96186a78b29ed490094483c0823e77,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-06 13:53:03 -0400, , quick fix older version ida 459 ida older 6.9 requires import older ida weird return none sometimes,,
549,baf2b9d2b92e54bc43f8d8ae525e267aa9ff2b1c,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-03 19:54:51 -0400, , clear bap comment upon ctrl shift 458,,
550,b1938ad9cf897a44778299f2b1f49805b378718c,van Gotovchits <ivg@ieee.org>, 2016-06-03 17:04:52 -0400, , fix bug x86 abi 457 use inequality instead equality checking whether argument fit register also stop whole program possible apply attribute argument due absence latter especially face partial support x86,,
551,d028d7a8f82cb9548276721a4ae9ba47bac0f9ec,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-03 16:10:37 -0400, , proper cleanup bap plugin ida python objdump 456,,
552,3aae52640f21bba9ff56d2a84c1093dbde0166b5,van Gotovchits <ivg@ieee.org>, 2016-06-03 13:22:12 -0400, , fix microx backtracking 455 backtracking point registered entry block result backtracking update context made last block ignored better way would store context first jump simplify implementation store context actually every jump since usually one two jump block big impact also performance consideration associative list substituted real tid.map,,
553,ef074be3713f3550202e38b55c38b0f391c2a6b5,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-01 19:01:07 -0400, , unnecessarily run list2sexp 453,,
554,93fb53894514827d626c8204c3b297b7b02a2397,van Gotovchits <ivg@ieee.org>, 2016-06-01 17:58:48 -0400, , fix warn unused cmdline parsing 452 fix unlock pass hidden cmdliner particular possible run warn unused mark mark unused result dead attribute,,
555,afae14d5184ed4c0bff3549f5ffb9828acb4691f,van Gotovchits <ivg@ieee.org>, 2016-06-01 17:28:22 -0400, , extensible api abi framework 451 intro  add bunch library pass form framework applying api information written high level language low level intermediate representation program i.e. bir high level framework generic allow transform specification written language attribute term design allows specify api like language also logic language like frama acsl course latter implemented accurate transformation high level specification low level usually requires knowledge abi seen summary implementation decision made compiler developer abi usually language architecture compiler specific framework provides library building abi specification language framework actually implement api transformation language different abi main contribution complete support arm abi actually required implementation whole framework due lack time x86 abi still incomplete easily fixed also possible choose specific abi via command line using x86 abi x86 abi switch allows api dependent analysis e.g. saluki wur work correctly window qnx file new feature  partial support x86 abi sysv cdecl stdcall ms32 ms64 fastcall watcom stack watcom regs nearly complete support arm gnueabi hard float supported reading apply api specification written language abstraction language including type system data model extension mechanism adding support new abi api specification language extension mechanism adding semantic action gnu attribute propagate information including type data model program representation redesigned demangling system parser based frontc,,
556,0f25bdfee0271d9e9bd09e31dc537b7af31483a4,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-01 16:55:13 -0400, , bap_bir_attr ida python plugin 450 add bap_bir_attr execute arbitrary bap command get bir attribute ida comment allow user skip importing attribute make comment default bir attribute allow comma separated bir attribute fix typo,,
557,c6bbed1e8c6c709f1d1a6b2d2dd71a4cec338770,ay Bosamiya <jaybosamiya@gmail.com>, 2016-06-01 12:49:46 -0400, , use latest symbol calling bap ida refactoring using bap_utils 449 use function bap_utils move prologue refactor ida loader use bap_utils refactor ida symbolizer use bap_utils use latest symbol calling ida make bap_utils file prepare next commit move bap execution bap_utils,,
558,6481f8744b50deb9b2c23cd866e6bbbf958fcfd1,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-31 15:56:19 -0400, , plugin hex ray decompiler bap comment abstract base plugin refactor 446 add utility bap idapython plugins use abstract base plugin class modify simplelines add donothing bap_utils prevent ida complain pep257 add donothing fix typo add plugin_keep wherever necessary fix minor inconvenience hexrays taint prop use refactor add comment propagation pseudocode view also allow ... type expression change output format move cfunc_from_ea ensure block comment cause problem use block comment ensure file opened hexrays ready loading make block comment stable cleanup unnecessary comment revert use block comment reverts commit ensure correct coloring comment allow quoting using expression allow quote bap_comment,,
559,09caaf3e4c108bab85a37913b26f0af5d9efda2e,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-31 14:15:25 -0400, , take care older version ida 445,,
560,951fc8b417eb2834516b531232068d7cba2f9609,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-26 17:31:53 -0400, , pep standardization documentation idapython plugins 443 follow pep8 add docstrings pep257 make member private,,
561,f487906ee3e12bd978331449892bda39457cfaab,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-26 15:34:30 -0400, , add aspcud travis build 442,,
562,23c5519781d87eb08b5ec6b379459a3608d407c5,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-26 14:27:13 -0400, , restructure ida plugins 441 restructure ida plugins add constraint uri,,
563,95325dc2c01448e57a9eff97bc311db66e4544c2,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-26 09:48:48 -0400, , fix hexrays taint plugin ida demo 437 prevent bad error ida demo trying plugin load move import tempfile smaller scope prevent user trying decompile non function,,
564,efde4592073622bbd07b2c506db26f2b8ea08dad,van Gotovchits <ivg@ieee.org>, 2016-05-26 08:52:23 -0400, , constraint version core package 436,,
565,5e2eef130d2ccd379f9e920d60da01023a9a1905,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-26 08:26:20 -0400, , add movpclr arm lifter 439 add movpclr arm lifter add movpclr python binding,,
566,7237ad63bc0b5d28c2b7396eda1293178091a27d,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-25 11:12:46 -0400, , ida symbolizer fix 435 ensure thunk jump fns propagate name update bap_ida remove unnecessary file nice name given clobber auto indent make sure recognizable propagation done make sure longer name propagated,,
567,c1036f375c907a1a72fe1310ecc089d470da590d,van Gotovchits <ivg@ieee.org>, 2016-05-24 17:34:34 -0400, , fix filter_map function trace 434 relying mapper function never applied fixed although design still rather fragile,,
568,beed3b02b74f600c8241004f617e00b5468af679,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-24 14:03:19 -0400, , hex ray decompiler pseudocode taint plugin 433 plugins ida python .py become ida plugins allow bap_taint accept callback add hex ray plugin see taint analysis rename force ida load hexrays plugin add arg since required though ignored unknown color bap infers nothing,,
569,81e854097728bffa0032830170427c1ef1afc6d5,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-23 18:20:13 -0400, , use idaapi.plugin_t style ida plugin 432,,
570,023ebf0279904025d9cff054c6b6c31606a2fc5d,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-20 12:20:03 -0400, , ida python plugin propagate taint 431 add idapython plugin use .ab.in file read config variable,,
571,42901c446c49b1e4280d8762dcc2218fa97f8ee1,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-19 14:05:57 -0400, , color update 430 add supported color emit ida script plugin add gray color supported bap,,
572,2fa83f284f551c9163828ce4d2805a3f9303910c,ay Bosamiya <jaybosamiya@gmail.com>, 2016-05-17 13:08:18 -0400, , improve emit ida script 429 emit attribute using expression ida comment color attribute cause line ida colorized read prologue separate file bundle allow user choose attribute emit assert false instead since fixed file programmer must bundle add background foreground special case prevent terminal code printing update documentation move prologue.py python prologue.py add resource file,,
573,7a15c5b07b9371b32b215ef8135cb1a853fdd2ed,van Gotovchits <ivg@ieee.org>, 2016-05-10 13:29:54 -0400, , fix bug ida loader 427 architecture incorrectly recognized,,
574,f239d9f08105155750ccd74e4a1af454b41c954b,van Gotovchits <ivg@ieee.org>, 2016-05-09 17:28:11 -0400, , add ida powered file loader 426 new loader possible load file supported ida including kernel module close 345 object file close 402 note default loader still llvm switch ida loader pas loader ida bap also fix bug project construction function left code segment final project also add support writing ida script idc rewrite symbol command idc,,
575,eaa19682302a2a38c3f66dfb5d4900c1ecf1e9e3,van Gotovchits <ivg@ieee.org>, 2016-05-09 10:01:14 -0400, , added conf ida objdump dependency opam opam 425 since someone may use file obtaining bap added integration conf ida conf objdump package package available opam repository forget add get working ida objdump plugins box make sure package installed get proper objdump linux mac box invoke opam depext conf objdump note merged ida objdump become unavailable conf ida correspondingly conf objdump installed,,
576,c43a18c4702b9601d6fc4dc5adf39e50d9c89a27,van Gotovchits <ivg@ieee.org>, 2016-05-09 08:47:55 -0400, , add objdump path configuration option 424 since macports objdump called gobjdump,,
577,7b9a8b1a205fc060523f6f1a2db57e290db1542c,van Gotovchits <ivg@ieee.org>, 2016-05-06 16:16:37 -0400, , fix typo oasis objdump 423 using ida flag instead objdump compilation condition,,
578,ae3e1bbffe4a357454b08975aacbc505527839cc,van Gotovchits <ivg@ieee.org>, 2016-05-06 14:57:47 -0400, , detect binutils installation configuration time 422 alike ida objdump expects path objdump passed configuration time corresponding conf binutils package added opam dependency established consequence bap objdump package installable objdump program moreover corresponding external dependency added thus installed via depext,,
579,5d8e6d2f92bda540fb07d9cf16e337515489217c,van Gotovchits <ivg@ieee.org>, 2016-05-06 13:08:54 -0400, , move ida path option configure script 421 resolve ida configuration time impossible install bap_ida library without ida installed system comprehensive support opam side added separate push opam repository,,
580,72a549c7fb661317b80a395ca5fcf966869ead38,van Gotovchits <ivg@ieee.org>, 2016-05-05 08:40:18 -0400, , extended configuration option plugins 420 allows plugins specify configuration parameter ocamlbuild plugins tag interpolation file detail  file oasis plugin .setup.ml.in copied final setup.ml contain arbitrary ocaml code executed configuration time handful shortcut provided e.g. add_variable function add configuration variable file oasis plugin .files.ab.in contain list file substitution performed contain variable form var var one variable set configuration time see setup.data full list file oasis plugin .tags.in oasis plugin end _tags myocamlbuild.ml correspondingly also file configuration suit contain special literal allow jump correct place error,,
581,e61127877e67cbb9338ac3c6094926f24156089a,van Gotovchits <ivg@ieee.org>, 2016-05-04 12:42:34 -0400, , disable usage ppx jane rewriter bapbuild 419 used enable ppx_inline test plugins conflict ppx extension,,
582,a5e0f351af8918136255a518050da106bd6a03cd,van Gotovchits <ivg@ieee.org>, 2016-05-03 19:44:21 -0400, , fix pe32 support bug fix 418 bug llvm upstream fix side address segment incorrect address symbol incorrect size symbol incorrect first issue due use relative virtual address instead virtual fixed adding image base address latter issue quite funny algorithm calculated address llvm subtract symbol address section size sic excuse author wrote comment fixme return correct size indeed quite hard get correct size correct algorithm quadratic discover symbol pe32 even without usage external tool like ida objdump two bug objdump plugin work bit binary address always bit internal rooter symbolizer work due logic error dna author,,
583,1184800c3c8c81d21cc21b94768e03d925912c23,van Gotovchits <ivg@ieee.org>, 2016-05-03 17:31:10 -0400, , iterative multi pas disassembler 417 introduces new framework project reconstruction take multiple pass recover project previously one pas fixed set input circular reference input derived output reconstruction continue fixpoint reached source information represented stream merged arbitrary way using stream combinators detail follow event system  new event system introduced stream extensible event fed program component logging infrastructure  add logging infrastructure based top event system self generative functor bring scope new function debug info warning error debug function would logging disable component logging controlled environment variable enable logging component define bap_debug variable enable logging specific component name name define bap_debug_ name variable e.g. debug ida plugin set bap_debug_ida bap_debug_ida said logging built top event stream stream processed bap_log module print log event log file located default .local state bap log folder every new start program creates new log previous log rotated bap_log module also print error event stderr ida plugin policy change  ida plugin longer try locate ida locate find proved slow error prone instead look path nothing found refuse provide service still possible provide explicit path ida correct way determine path ida configuration time close 404 new source infrastructure  previously three type source encoded gadt allows specify source arbitrary type due switch inductive source type unit inductive type unit particular data provider capture argument type closure communicate result data consumer using callback mechanism wrapped coinductive stream future new plugins policy  plugin register soon possible instead waiting input user real information available plugin chosen explicitly user example option rooter ida plugin unable provide data fail diagnostic message instead trying provide empty input give much better feedback user experience byteweight error handling  byteweight much careful error handling close 342,,
584,2293908ac45feb146afff889f3a37074b2894efa,avid Brumley <dbrumley@users.noreply.github.com>, 2016-04-28 08:24:23 -0400, , add objdump parser symbolizer 416 objdump output parsed identify function start path objdump specified either via command line option plugin search path objdump default general x86_64 elf objdump i386 elf objdump default macports,,
585,3abe8f55964f40227bd619cd87b23ea056a0f436,van Gotovchits <ivg@ieee.org>, 2016-04-21 09:48:56 -0400, , made future library externally visible 411,,
586,138d7f541c1944f97792e696cc9e83d5263df3c6,van Gotovchits <ivg@ieee.org>, 2016-04-20 16:47:43 -0400,410, merge pull request 410 ivg bap tracing introduces trace core bap,,
587,5579dffede26316dc11cde20b1e3dd38e9286c76,van Gotovchits <ivg@ieee.org>, 2016-04-20 16:11:48 -0400, , introduces trace core bap remove bap tracedump utility reintroduces bap plugin plugin load dump trace command  bap trace dump file  equivalent old  bap tracedump file  main feature ability load trace later accessed analysis see corresponding documentation module bap_traces.std detailed change  bap trace library updated partially implemented constant memory footprint flavor input channel e.g. operation event renamed read_events refactored meta information made usable introduced event stream future bap please rush use may change nearest future see also bap frame qemu reflects change main bap repo,,
588,5c6d9def547ba61b9b42f8829791b64cc00a5ca6,van Gotovchits <ivg@ieee.org>, 2016-04-19 09:48:37 -0400,408, merge pull request 408 gitoleg lost typeid added lost typeid function,,
589,9eedc0b9a6844882c399eeedad772ae2e2156349,leg <forown@yandex.ru>, 2016-04-19 16:17:58 +0300, , added lost typeid function,,
590,ce186af2569c5a8566d8a73c6ef7e605e21758e9,van Gotovchits <ivg@ieee.org>, 2016-04-14 17:39:52 -0400,406, merge pull request 406 ivg monadt add monad transformer,,
591,d5d032af9ee8f4f2746f4b911e56ee77e8a64095,van Gotovchits <ivg@ieee.org>, 2016-04-14 16:56:33 -0400, , add monad transformer add monad transformer common monad also try clean .merlin repository case intersted suddenly need transformer answer simple cherry pick work started decided forfeit,,
592,d1b1f0d913cfe8d1c60be37c9b47dc995bee293e,van Gotovchits <ivg@ieee.org>, 2016-04-04 13:28:40 -0400,400, merge pull request 400 ivg lost file add lost file,,
593,ed02c719b07d9c95b953406a21a7092745e4e399,van Gotovchits <ivg@ieee.org>, 2016-04-04 13:02:36 -0400, , add lost file file committed last thus making functionality unusable hardly usable resource file list embedded resource api plugin whole oasis section map term plugin,,
594,b47eac9c9f3d14484b3e18754eb8e53db2a406e9,van Gotovchits <ivg@ieee.org>, 2016-04-01 16:45:33 -0400,399, merge pull request 399 ivg split marker spill marking propagate taint plugin,,
595,04d3affdb8912e90e92242b0793d864c741a0d0e,van Gotovchits <ivg@ieee.org>, 2016-04-01 16:12:02 -0400, , spill marking propagate taint plugin marking infrastructure moved away taint propagation pas full fledged extensible term mapping dsl change breaking change marked warn unvisited term  resolve 398 removed term marking propagate taint plugin  responsible propagating taint mark unconditionally term visited tainted reg ptr attribute may break script relying propagate taint mark option longer available see new map term pas renamed attribute name  substituted underscore dash stick convention starting commit may break script used print bir attr name added protection disassembler  throw exception someone trying use closed disassembler instead segfaulting added runonce option pas  option prevents pas run useful autorunned plugins non idempotent pass added map term plugin  evolution marking facility propagate taint plugin also ship library allows add arbitrary predicate mapper dsl grammar slightly changed closer scheme see full man page  map term map term manual map term name map term map term using bml dsl synopsis bap map term scheme map term using file map term description transform term using domain specific pattern matching language pas accepts list pattern via command line argument map term pattern specified several time via file contains list pattern pattern represented pair condition action action specifies transformation term applied condition satisfied condition action single expression list expression delimited parenthesis list condition must satisfied list action action applied order expression either nullary function unary function arg must valid predicate mapper name predefined set standard function extended adding new mapper predicate bml language using bap bml library option help fmt default pager show help format fmt pager plain groff using file read pattern file pattern map term according pattern standard predicate true always satisfied attr satisfied term given attribute attr must one one synthetic live dead visited attr sub satisfied term subroutine given attribute attr must one one const pure stub extern leaf malloc noreturn return_twice nothrow attr arg satisfied term argument given attribute attr must one one alloc size restricted nonnull mark satisfied term attribute mark color color satisfied term attribute color given value color must one one black red green yellow blue magenta cyan white foreground color satisfied term attribute foreground given value color must one one black red green yellow blue magenta cyan white background color satisfied term attribute background given value color must one one black red green yellow blue magenta cyan white taint satisfied term taint source i.e. tainted reg tainted ptr attribute taint reg satisfied term taint source taint value stored register i.e. tainted reg attribute taint ptr satisfied term taint source taint value pointed value stored register i.e. tainted ptr attribute taint satisfied term tainted i.e. tainted reg tainted ptr attribute tainted reg satisfied term tainted value stored register i.e. tainted regs attribute tainted reg taint satisfied term value tainted taint stored register taint must valid taint identifier e.g.  tainted ptr satisfied term load value tainted address i.e. tainted regs attribute tainted reg taint satisfied term load value address tainted give taint taint must valid taint identifier e.g. standard mapper set attr mark term specified attribute attr must one one synthetic live dead visited set attr sub mark term specified attribute attr must one one const pure stub extern leaf malloc noreturn return_twice nothrow set attr arg mark term specified attribute attr must one one alloc size restricted nonnull set mark attch mark attribute term color color set term attribute color given value color must one one black red green yellow blue magenta cyan white foreground color set term attribute foreground given value color must one one black red green yellow blue magenta cyan white background color set term attribute background given value color must one one black red green yellow blue magenta cyan white taint reg tid mark term given tid taint source register value taint ptr tid mark term given tid taint source memory value language grammar bml exps exps exps exp exp exp exp arg arg quoted string alphanumeric sequence example bap exe map term pattern visited foreground green bap exe map term pattern taint ptr comment see also bap taint bap bml ,,
596,6d5e095e4a131dc254fe2e3c40b83009737e5218,van Gotovchits <ivg@ieee.org>, 2016-03-31 06:58:39 -0400,397, merge pull request 397 ivg gnu attribute add gnu attribute,,
597,3f9fe640e0224547f2c121eb46b3d6f626f5ebdb,van Gotovchits <ivg@ieee.org>, 2016-03-30 16:48:05 -0400, , add gnu attribute add attribute posix api mostly string.h unistd.h latter important contains lot security critical function also fix parsing function nonnull printf attribute,,
598,f30e7d2922dc93bfd7afb0d3e150d257ec830c47,van Gotovchits <ivg@ieee.org>, 2016-03-30 14:36:08 -0400,396, merge pull request 396 ivg accurate taint propagation accurate taint propagation,,
599,a2aab988d8cb9e8ff3372d52ab4e2c204ce5256c,van Gotovchits <ivg@ieee.org>, 2016-03-30 13:49:21 -0400, ," accurate taint propagation bunch fix reification sum lead better accurate taint propagation analysis move attribute arg module  gnu attribute defined function level actually assigned attribute attribute often use number point positional parameter like format printf,1 show first parameter printf format string attach argument function argument subroutine following attribute affected alloc_size format nonnull new restrict new fact type qualifier warn_unused previously known also three new attribute added precondition invariant postcondition attached term expression associated attribute boolean bil expression must true corresponding position change taint introduction mechanism  term marked tainted mean value produced term reason tainted example previously  .tainted_reg   introduced taint leaving intact definition mark tainted taint propagate side effect new approach possible fix callsites plugin synthetic term used fix dataflow function argument left hand side first intuitive important fix issue inout argument killed return value consider following example previously put following definition around call strcpy  strcpy_dst strcpy_src call strcpy return  strcpy_result strcpy_dst  beside incorrect also nasty feature last definition kill previous following definition inserted  strcpy_dst strcpy_src call strcpy return  strcpy_result strcpy_dst  proper taint propagation memory  load register kill taint stored register propagate taint associated address store kill taint associated address substitute taint associated result stored register note previously union taint resulted overtainting fix api parsing  recognize restricted pointer recognize array make intent non optional",,
600,cc12a847e985d86c45ed648ec96c99529f74a5a4,van Gotovchits <ivg@ieee.org>, 2016-03-29 14:39:22 -0400,395, merge pull request 395 ivg abstract cache digest abstract cache digest,,
601,c0bf19877922598224aeb1487b3b4d7e45112dd4,van Gotovchits <ivg@ieee.org>, 2016-03-29 12:57:31 -0400, , abstract cache digest make cache digest abstract prevent user creating bad digest compensation provides interface build digest interface variadic function format parameter,,
602,c62a48f1737f1fc5338fef918e168148f75976fa,van Gotovchits <ivg@ieee.org>, 2016-03-29 08:14:48 -0400,394, merge pull request 394 ivg cache taint cache taint propagation,,
603,2e2423cd80f9830072f83a70718e0a117ab08be3,van Gotovchits <ivg@ieee.org>, 2016-03-28 17:08:28 -0400, , cache taint propagation add caching taint propagation pas,,
604,58f00f43bea9eb8a9c5cc3407bd07b53cd7b470d,van Gotovchits <ivg@ieee.org>, 2016-03-28 16:02:53 -0400,393, merge pull request 393 ivg warn unused warn unused pas,,
605,c326e5efa31145dd4bc4e705ced8040b95eaa5c9,van Gotovchits <ivg@ieee.org>, 2016-03-28 13:56:51 -0400, , warn unused pas add simple analysis output warning function marked attribute whose result value dead unlike unchecked result use saluki plugin higher threshold warn result dead require checked also fix bug taint propagation pas come printout man page bap warn unused help man warn unused warn unused manual warn unused name warn unused warn unused result certain function synopsis warn unused warn unused taint warn unused print warn unused mark description subroutine gnu attribute result used print warning message option help fmt default pager show help format fmt pager plain groff version show version information pass warn unused taint taint value defined function marked attribute run callsites dependency warn unused print print call checked warn unused mark mark unchecked call term.dead attribute warn unused warn unused taint propagate taint warn unused print warn unused 0.1 warn unused ,,
606,57383dc742df4637702668e2703261df2eff977a,van Gotovchits <ivg@ieee.org>, 2016-03-25 16:13:06 -0400,390, merge pull request 390 ivg better taint precision better taint propagation,,
607,d8abc11ea75f0d46f647e9493aa126f082b0a0ca,van Gotovchits <ivg@ieee.org>, 2016-03-25 15:31:09 -0400, , better taint propagation includes several improvement bug fix spread across code base united main goal improve taint propagation framework also found necessary base upcoming movement saluki new framework main contribution  observed concretization single value lead unwanted aliasing arbitrary pointer consider following example  000001dc strcpy_dest 0000016d mem r11 0x34 u32  strcpy_dest r11 0x34 unknown value result point memory cell note problem manifest tainted pointer often tainted immediates mostly tainted immediate value distinguish different computation result value pointer loose precision add four option concretizer class three propagated command line interface lookup function available command line allows user provide concrete value unknown variable useful example resolve value close stack_start reduce probability unwanted aliasing heap memory stack memory propagate taint plugin setting high constant default reg_policy policy concertizing unknown register default random mem_policy policy concertizing memory load default random random_seed seed rng useful get predictable result auxiliary stuff  added printf scanf family function api posix fixed parsing attribute format attribute read added enter leave term method term.visitor fixed bug callsites plugin,,
608,719ca099e9ace99b5e5e6fd709ed955a6c3e6508,van Gotovchits <ivg@ieee.org>, 2016-03-24 11:38:12 -0400,389, merge pull request 389 ivg api attrs callsites support gnu attribute,,
609,596af4eec8157d7cd16cd2c090b69de8aa327f76,van Gotovchits <ivg@ieee.org>, 2016-03-24 11:04:53 -0400, , support gnu attribute main feature support gnu attribute api plugin gnu attribute mapped corresponding term attribute see sub module detailed description attribute added libc header far understand following gnu attribute const pure malloc noreturn returns_twice nothrow  alloc_size format much term attribute added later use also add callsites plugins annotate callsites definition called subroutine useful particular data flow analysis based taint analysis required saluki fact taken saluki taint pas callsites dependency usual excerpt man page callsites plugin callsites help pas inject artifical definition subroutine argument call site consider function malloc following declaration bir sub malloc malloc_size malloc_result malloc_size u32 malloc_result u32 plugin add two definition one call malloc ... 000001c3 malloc_size 0000015b call malloc return 0000015c prepend another block malloc return 0000015c 000001c4 malloc_result ...,,
610,4efe0bb29f715a1498e1813f8008793fa1dbb72a,van Gotovchits <ivg@ieee.org>, 2016-03-23 07:16:09 -0400,388, merge pull request 388 feseal bap tracedump moved tracedump utility bap frame bap,,
611,5a5b2a5e4ee3dce53db01d0b28bba11e2ddf50ed,eseal <feseal@yandex.ru>, 2016-03-23 12:03:36 +0300, , moved tracedump utility bap frame bap,,
612,b992de24bd599ab60f54d9a675947ed1cba4c3d3,van Gotovchits <ivg@ieee.org>, 2016-03-22 18:18:14 -0400,387, merge pull request 387 ivg taint plugin taint plugin taint specified term,,
613,c6a58988b131a6103e7a0f70863a9bee5f73de27,van Gotovchits <ivg@ieee.org>, 2016-03-22 17:33:29 -0400, , taint plugin taint specified term introduces taint plugin fix bug propagate taint plugin note taint plugin relies functionality api pushed yet plugin ready plugin introduces taint based specification written small dsl come excerpt man page bap taint help injects taint program based specification possible taint value stored register value pointed value stored register former called register taint latter called pointer taint controlled respectively taint reg strain taint ptr strain command line argument strain value describes definition tainted either address variable tid list strain address passed definition tainted corresponds instruction specified address variable passed definition tainted defines variable given name finally tid specified definition must specified tid tainted several strain specified condition must satisfied consider ther following example taint reg 0xbad taint ptr strcpy_dst taint reg malloc_return 0xbad first example taint value stored register defined instruction address 0xbad second example taint value pointed variable strcpy_dst defined call strcpy note functionality relies api plugin responsible embedding definition call site third example taint value returned malloc specified call site address specify option several time full grammar specification strain specification language follows strain tid var addr strain1 strain2 straink tid hex digit var alpha alpha num addr hex digit,,
614,53baf87ac19ec2b073536c061a27e756493f6e05,van Gotovchits <ivg@ieee.org>, 2016-03-22 13:02:32 -0400,386, merge pull request 386 rvantonder update propagate taint mark term according scheme,,
615,abaff3d881a8005b5d779f7f7353442822ac9f7b,ijnard <rvantonder@gmail.com>, 2016-03-22 16:27:07 +0000, , mark term according scheme,,
616,0a008c0927b30f50d3bd4f8bb1d057077acfe7a7,van Gotovchits <ivg@ieee.org>, 2016-03-22 08:45:29 -0400,385, merge pull request 385 ivg bir hom visitor mapper higher order morphisms,,
617,06259b7f102c6ebe3fd6cc8c64828fdf9aa52156,van Gotovchits <ivg@ieee.org>, 2016-03-21 15:51:01 -0400, , visitor mapper higher order morphisms introduces breaking change described breaking change section see also corresponding bap plugins repository update change summary  add following feature term.visitor class term.mapper class three higher order morphisms term.switch term.proj term.cata split bil.visitor exp.visitor stmt.visitor split bil.mapper exp.mapper stmt.mapper fix with_zero interface work newer core_kernel fix bug graphlib node removal fix microx rng initialization module load time class initializer policy random term.visitor class performs deep visiting program inherits exp.visitor destruct program smallest possible atom true term.mapper term.switch used pattern matching term.proj term.cata special case switch allow omit branch addition mapper visitor morphism allow one write arbitrary transformation term breaking change  splitting bil visitor mapper two class also remove corresponding morphisms bil namespace fix program need following rename bil visitor mapper stmt visitor mapper exp visitor mapper using map_exp method rename bil fold iter map stmt fold iter map,,
618,b04f25eb16959abd3305631efed83151a6afede3,van Gotovchits <ivg@ieee.org>, 2016-03-19 09:53:59 -0400,382, merge pull request 382 rvantonder add api option add use file option api plugin,,
619,dc6e6dca62087add2f6d5d62591b292ca6a1ab0e,ijnard <rvantonder@gmail.com>, 2016-03-18 19:05:34 +0000, , add file add header file database par also file option user specify override header file database,,
620,b95d012a049c34ee6387bd09aacbbebdc61e22ba,van Gotovchits <ivg@ieee.org>, 2016-03-18 14:34:33 -0400,383, merge pull request 383 ivg mark scheme dsl term marking,,
621,2b96e525ad90070ddc7151c38f710917b716526b,van Gotovchits <ivg@ieee.org>, 2016-03-18 14:01:59 -0400, , dsl term marking add extensible dsl specifying marking scheme taint propagation framework dsl provides mechanism specify mark attribute make framework usable dependent saluki excerpt man page although pas perform analysis mark term attribute term marked according marking scheme specified mark scheme scheme mark scheme file file entry file scheme argument must conform following grammar scm preds mark preds pred pred1 predn mark mark mark1 markn mark tag tag value pred visited seed tainted regs tainted ptrs taint tag foreground background color comment python mark weight tainted_reg tainted_ptr scheme pair consisting set predicate set mark predicate match mark applied term mark represented pair consisting tag name value tag value type unit tag particular allows seed new term based term allowing run several pass specify complex logic,,
622,8f3a1b39bae711c951ce5b28d2f4b9f7a37112c8,van Gotovchits <ivg@ieee.org>, 2016-03-17 17:31:46 -0400,379, merge pull request 379 ivg taint propagation framework introduces new taint propagation engine based,,
623,d75f3bed7a53f9a856660272940ef2b7f95ebe7f,van Gotovchits <ivg@ieee.org>, 2016-03-17 17:11:24 -0400, , introduces new taint propagation engine based microexecution previously known quarantine excerpt bap propagate taint help taint propagation framework microexecution propagate taint program execution perfomed using conqueror engine short concrete evaluation error execution engine allows run incomplete program unspecified user input moreover increase coverage may take infeasible path taint propagated seed maximum extent seed definition point marked taint.reg taint.ptr tag usual way using framework would use one pass mark point interest taint seed use propagate taint pas propagate taint finally use pas collect analyze result pas provide analysis ability highlight term specific color microexecution performed lifted program using bap microx library memory read intercepted redirected program image possible static data otherwise concretized input like read unknown register user input also concretized several concretization policy provided const unknown value concretized specified constant random random value picked value domain range random value picked specified range default microexecution engine try visit program branch execution record missed branch checkpoint nothing explore backtrack stored checkpoint restoring execution state program point continue execution course case state contradict path constraint deterministic mode bactracking mechanism disabled mode checkpoint recorded whenever interpreter request backtracking instead return current procedure maximum length execution path limited constant number jump basic block also loop escaping mechanism detect loop bail specified amount iteration deterministic mode return procedure otherwise backtrack,,
624,0fe20c32d8e25433d2a2a0c9a73d9407d34b6623,van Gotovchits <ivg@ieee.org>, 2016-03-17 16:24:16 -0400,377, merge pull request 377 ivg microx introduce microx library,,
625,3550898f48eb6af86d7c5c609b4b2eb19fd75c6c,van Gotovchits <ivg@ieee.org>, 2016-03-17 15:24:32 -0400, , introduce microx library microexecution framework execute code without user input anything else library provides far two class concretizer implement different concretization policy undefined value conqueror execute program notwithstanding error undefined value infeasibility conqueror stand concrete evaluation error note library released quarantine also fix small issue noticed gitoleg try store undefined memory must return bot instead freshly create new empty memory,,
626,bfd7e757df8d6fd4b457671e41cc4c9c443d4608,van Gotovchits <ivg@ieee.org>, 2016-03-17 14:14:40 -0400,376, merge pull request 376 ivg fix graph merging fix segment merging disassembler,,
627,01b505575ddec98dec771eb675466c1e54c6d696,van Gotovchits <ivg@ieee.org>, 2016-03-17 13:29:35 -0400, , fix segment merging disassembler fix 372. problem disassembler function merges graph different segment repeated error least three time far merged edge forgot node since main subroutine example incoming outcoming edge added penance prevent repeating error added two new function graphlib union inter performs graph union graph intersection operation moreover noticed test disabled last dozen actually untested compiled also fix add test newly introduced operation,,
628,e679345c8ff2d6743db87dec8893ea872eb3bc85,van Gotovchits <ivg@ieee.org>, 2016-03-16 17:24:37 -0400,371, merge pull request 371 ivg delay recorded package delayed plugin initialization,,
629,3747759959da01b582c5b7738ed1c3277b9126f9,van Gotovchits <ivg@ieee.org>, 2016-03-16 16:55:22 -0400, , delayed plugin initialization read package written core delayed first load previously initialized library link time compiled trunk split library stated lead segfaults since package written bap std package taken account,,
630,f209bb9abeadd556d29d1deec6c1ff078dccc6ba,van Gotovchits <ivg@ieee.org>, 2016-03-15 17:56:59 -0400,368, merge pull request 368 ivg resolve plt entry resolve plt entry,,
631,ac886938251dd0c3bd5ae633a247eca6b5b2d15f,van Gotovchits <ivg@ieee.org>, 2016-03-15 17:19:43 -0400,366, merge pull request 366 ivg robust plugin loader robust plugin loader,,
632,30e88691dd979f86602eb7299588e8a302e7c311,van Gotovchits <ivg@ieee.org>, 2016-03-15 17:19:34 -0400,367, merge pull request 367 ivg add monad update add interface,,
633,0e540a789e8412d497781131df8f0d093e2d2c1f,van Gotovchits <ivg@ieee.org>, 2016-03-15 17:03:14 -0400, , resolve plt entry   ida least arm hacky support resolving plt entry work least arm elf i.e. favorite target support target might added later problem implementation detail  undefined symbol value use address since value size size plt entry size real symbol would loaded least elf arm hack used hardcode size byte work x86 since value usually zeroed elf64 x86 backend fact elf64 x86 backend different kind relocation giving meaning entry symbol table backend define relocation policy resolution entry performed backend level transformation abstract symbol relocation objdump work  might interested objdump resolve plt entry first actually performed backend side possible target supported relocation different elf64 x86 relocation rely fact ith relocation corresponds ith plt entry since bfd know size plt entry easy find corresponding plt entry course fragile work binary created libbfd someone try conform rely loader backend easily implement logic separate plugin provide symbolizer elf64 x86 current status  work elf32 arm break anything target support target added separate plugins per target basis nothing magic lot reverse engineering,,
634,8f79d911f0b94eec2d910f7a22dcefab552cf3c3,van Gotovchits <ivg@ieee.org>, 2016-03-15 17:00:44 -0400, , add interface,,
635,e3cfd0c7cb6f3602dd55aed70940f28ede7a84a9,van Gotovchits <ivg@ieee.org>, 2016-03-15 16:57:08 -0400,351, robust plugin loader make plugin loader robust malicious user fail plugin plugin load print warning continue verbose mode print extended error message fix 351 partially resolve 353,,
636,9b911e93a5093cd170e11ce3d002d4ba074be791,van Gotovchits <ivg@ieee.org>, 2016-03-15 06:46:00 -0400,365, merge pull request 365 rvantonder update opam update opam api plugin,,
637,bb8a36eea4c6e53ae64ca8b00226f649b4b6f9cb,ijnard <rvantonder@gmail.com>, 2016-03-15 01:04:02 +0000, , update opam api plugin,,
638,d5c2b8850bc551f865d5a439842e4ce228c61324,van Gotovchits <ivg@ieee.org>, 2016-03-11 16:47:54 -0500,364, merge pull request 364 ivg fixed biri evaluation fixed evaluation biri strategy,,
639,878f73f660c1c8135faa733e4f3f8639ee3d26a5,van Gotovchits <ivg@ieee.org>, 2016-03-11 16:29:10 -0500, , fixed evaluation biri strategy new strategy clean easy reason look like previous contained bug since semantics execution changed also considered bug fix,,
640,45a15ac1e4726e2f6c688b2744d45d1e537ed3db,van Gotovchits <ivg@ieee.org>, 2016-03-10 07:55:24 -0500,363, merge pull request 363 ivg add predicate link phase pas predicate ppx_driver link phase,,
641,ad74400533a934b639a3d5c3ae84f3368611281c,van Gotovchits <ivg@ieee.org>, 2016-03-10 07:19:30 -0500, , pas predicate ppx_driver link phase help link program old opam used install libexec part package resolve 362,,
642,c4618af77c7ff72cfd3895e11d5f600bd3bf7232,van Gotovchits <ivg@ieee.org>, 2016-03-09 14:05:45 -0500,361, merge pull request 361 ivg fix bug bap bundle fix bug bap_bundle,,
643,baeb9fe0e6e5288039ea6bced47e295f1c4e67b9,van Gotovchits <ivg@ieee.org>, 2016-03-09 13:44:56 -0500, , fix bug bap_bundle inserting file compound path work,,
644,6e64a5922c219716598f7824d78d94da6cbc0afc,van Gotovchits <ivg@ieee.org>, 2016-03-08 18:13:30 -0500,360, merge pull request 360 ivg add taint add taint module bap.std,,
645,b3d6d11f9e355ac13971e511b6452f36f894c238,van Gotovchits <ivg@ieee.org>, 2016-03-08 16:57:25 -0500, , add taint module bap.std useful abstraction used many analysis would good idea standardize,,
646,34c4176c546474e5a8ff010b2156971d8d77bb9d,van Gotovchits <ivg@ieee.org>, 2016-03-08 14:54:45 -0500,359, merge pull request 359 ivg add api plugin imported header plugin bap plugins,,
647,eac50bc653ce8996eec58f102ae5be3618a231d0,van Gotovchits <ivg@ieee.org>, 2016-03-08 14:11:19 -0500, , imported header plugin bap plugins new name header api pas utilizes new autoload feature applies known apis program apis bundled plugin new api added providing header file,,
648,49a431393a8f44793262bb702705d2fbc5995850,van Gotovchits <ivg@ieee.org>, 2016-03-08 11:17:28 -0500,358, merge pull request 358 ivg plugin autoloading add autoload option pas,,
649,fdf5dfd1b91d507479bcbdb676263cf1edb6ddc8,van Gotovchits <ivg@ieee.org>, 2016-03-08 10:54:40 -0500, , add autoload option pas possible instruct bap run pas automatically without requiring user pas explicit pas command line useful least two case pas implemented obvious reason run everyone pas option run everytime run bap autoload option possible design complex command line interface order executing autorun pass unspecified unless dependency,,
650,44281b3ff9a040c8e1e1c239e41e3e8c92eb7bc5,van Gotovchits <ivg@ieee.org>, 2016-03-08 10:52:11 -0500,357, merge pull request 357 ivg remove abi remove abi abstraction,,
651,a3bbaf5c225d6bedd68c009a99472e33636920a6,van Gotovchits <ivg@ieee.org>, 2016-03-08 10:16:45 -0500, , remove abi abstraction look like abstraction never actually worked easier write pas specific abi perform abi specific transformation,,
652,a5450b1f0b5af6abeb880ccaf76661794cf74d7b,van Gotovchits <ivg@ieee.org>, 2016-03-07 16:40:40 -0500,356, merge pull request 356 ivg opam packaging preparation preparing opam release,,
653,1c597d42f3eae48ed5dfc5455c6588c819caaa86,van Gotovchits <ivg@ieee.org>, 2016-03-07 16:21:48 -0500, , preparing opam release includes set fix revealed opam release preparation,,
654,fbfa149f95d008ad230e2a52ce87035b84093ea9,van Gotovchits <ivg@ieee.org>, 2016-03-07 15:20:59 -0500,355, merge pull request 355 gitoleg fix trace module added lost module bap_trace_id,,
655,f3d44d3a22fb0be004bfb91e09319ac39bacb07c,leg <trek4300@yandex.ru>, 2016-03-07 22:41:55 +0300, , added lost module bap_trace_id,,
656,282015339c2bedb5c00e10dcc94f72f63263fe6c,van Gotovchits <ivg@ieee.org>, 2016-03-07 10:09:38 -0500,350, merge pull request 350 ivg split libs split library separate oasis section,,
657,3d8050173cc9a6181fb6517fbd43cbf7023503c9,van Gotovchits <ivg@ieee.org>, 2016-03-04 17:01:07 -0500, , split library separate oasis section wrote automation glue everything together fixed bap fsi benchmark brute forced uninstallation every feature provided bap repository described separate file oasis folder configure script responsible glue together based enable feature option enable everything flag useful testing development default way configuring source repository would  configure enable everything prefix opam config var prefix ,,
658,1d66551df3bf87d9dcb78c29ab4235e09b0e6a99,van Gotovchits <ivg@ieee.org>, 2016-03-04 13:29:16 -0500,349, merge pull request 349 ivg add predicate ocamldep make installation robust,,
659,804fb52224af0db66f45804461920897c4c742b5,van Gotovchits <ivg@ieee.org>, 2016-03-04 13:06:27 -0500, , make installation robust add small hack add predicate flag ocamldep without flag ocamldep try fallback ppx executable might installed old version opam used used make uninstall oasis look like new opam clever enough figure need source tree remove case would better switch opam install installation uninstallation,,
660,e87b6d9fb445afcb10d7e4a75b09e5cbcfb0e42d,van Gotovchits <ivg@ieee.org>, 2016-03-03 16:42:50 -0500,348, merge pull request 348 ivg bap poly printer stuff added polymorphic printer,,
661,294ba9031220505fcf887fa745af3c9b67737be5,van Gotovchits <ivg@ieee.org>, 2016-03-03 15:45:30 -0500, , added polymorphic printer relies new yet released feature ocaml compiler ability install polymorphic printer long story short create map set etc printed using installed pretty printer instead say poly installed printer polymorphic type bap core_kernel also added ppx bap tool fixed small issue,,
662,6cb90c34e20b0f77302a2f2d4c3ddfbc1ab9442f,van Gotovchits <ivg@ieee.org>, 2016-03-02 17:19:52 -0500,347, merge pull request 347 ivg bap ppx scraped away camlp4,,
663,e516affbbaf71a445158cd426e59ee295d56a7a9,van Gotovchits <ivg@ieee.org>, 2016-03-02 16:35:32 -0500, , scraped away camlp4 yep starting point write pure ocaml syntax benefit access latest version library e.g. core family already switched ppx without backward compatibility access ppx extension lot fancy extension look opam search ppx merlin ocamldoc tool work box hack syntax extension needed syntax extension understood merlin moreover documentation lookup work core bap e.g. use merlin documentation command get online documentation function use key scrolling completion list drawback following bap requires 4.02.3 later version ocaml might considered benefit safely use new feature camlp4 used anymore still use mix badly ppx also fix small issue partially update changes.md,,
664,6e4d244bca0e2d0be68dca9935db4832971aa6b0,van Gotovchits <ivg@ieee.org>, 2016-02-29 11:12:58 -0500,344, merge pull request 344 ivg platform bap platform,,
665,93ee72c0768a9a3692e48e599f1a72431d129e58,van Gotovchits <ivg@ieee.org>, 2016-02-29 10:39:37 -0500, , bap platform introduces bap platform significant amount code moved bap.std library separate plugins library installed separately plugin system severely reimplemented short list change detailed list added later changes.md moved regular library bap moved graphlib bap made module state storable moved x86 library moved arm library moved dwarf elf library moved byteweight library moved trace library rewrote disassembler level add property insn moved llvm plugins added caching framework added printing framework redesigned build system reimplemented plugin framework current set plugins emit ida script extract python script project data type dump symbol dump symbol information list block arm provide arm lifter piqi printer provides piqi serialization main data type bil phoenix output project information phoenix format print print project various format cache provide caching service byteweight find function start using byteweight algorithm x86 provide x86 lifter llvm provide loader disassembler ida use ida provide rooter symbolizer reconstructor read symbol read symbol information file elf loader read elf dwarf format pure ocaml note update documentation pushed later,,
666,963c6d05c7bf7f88c1d95429271b10487e0bab27,van Gotovchits <ivg@ieee.org>, 2016-02-25 07:47:35 -0500,343, merge pull request 343 gitoleg bap future future library library inductive data type library provides foundation reasoning dynamic state system provides two main data type future value maybe defined future stream infinite stream finite value useful capture object value change time,,
667,ef0a94a4a2c47a3a946bc20b10ea557fc3740631,leg <forown@yandex.ru>, 2016-02-25 14:57:05 +0300, , bap future library test,,
668,ff2f46467b10b1b464ebee87b333b5918e7eb4cc,van Gotovchits <ivg@ieee.org>, 2016-02-22 18:46:15 -0500,340, merge pull request 340 gitoleg core switch switch core version 112.35.0,,
669,111428306ba66044d47cfb0e91684218b4940a19,leg <forown@yandex.ru>, 2016-02-16 09:57:52 +0300, , switch core version 112.35.00,,
670,e12b6b73b338147d7c4123726085c7128d8c33df,van Gotovchits <ivg@ieee.org>, 2016-02-15 09:08:24 -0500,339, merge pull request 339 gitoleg bap byte bap_bytes module,,
671,ccc77296cf4cf14263fcd331832c6448ed61f448,leg <forown@yandex.ru>, 2016-02-09 10:19:28 +0300, , bap_bytes module,,
672,9b55e9766538903b06f5b7cfffe7956f1a095ae3,van Gotovchits <ivg@ieee.org>, 2016-01-21 13:45:32 -0500,333, merge pull request 333 maurer cache enable caching built deps,,
673,663a6a893eec5bf2c572444b776cf404e1d980ef,atthew Maurer <matthew.r.maurer@gmail.com>, 2016-01-21 11:38:33 -0500, , enable caching built deps,,
674,52581791b4cc68f8dedd1d39e435c304d87295fa,van Gotovchits <ivg@ieee.org>, 2016-01-20 16:35:47 -0500,332, merge pull request 332 maurer master bump core_kernel minver,,
675,d79833906dfd4e46a6217b223c9c4d701cb43af1,atthew Maurer <matthew.r.maurer@gmail.com>, 2016-01-20 13:50:25 -0500, , bump core_kernel minver use present previous lower bound,,
676,a98c94a0052ff9cff82af5cc2eb5e668234b68e5,van Gotovchits <ivg@ieee.org>, 2016-01-14 13:56:59 -0500,330, merge pull request 330 ivg bap data add bap data framework refine variable,,
677,f80d1ce5908bd8c15bbbb209ba6265733fb2bed8,van Gotovchits <ivg@ieee.org>, 2016-01-14 13:05:29 -0500, , add bap data framework refine variable sorry impossible split two different commits bap data framework  purpose framework give user control data serialization printing particular allow user add new serialization format dynamically via plugin system also reduces amount boilerplate code written add new interface data capture idea inductively defined data representation serialized deserialized word data something real physical representation program unlike data actually exists somewhere outside program regular interface include data interface regular type majority data type bap implement data interface data interface come lot useful function serialization function accepts optional argument ver fmt allows user switch serialization format fly example to_bytes fmt sexp var to_bytes fmt bin var serialize variable var sequence byte using sexp format bin binprot format correspondingly default writer reader printer set permanently temporary particular data type also ship two generic data type called writer reader data type represent read write type class make instance type class sufficient provide minimum implementation everything else derived allows easily implement new format without caring much performance boilerplate hand approach allows fine tune implementation performance providing custom implementation method variable refinement  bap variable data type got refined ugly tmp flag unspecified semantics longer instead two orthogonal flag passed variable constructor is_virtual designate variable corresponds purely virtual data real storage program opposite real variable represents variable either register memory cell memory storage virtual variable introduced lifter analysis represent intermediate result calculation fresh set true generate random salt using state statically stored inside module mix variable name,,
678,18bba29a09bfe1b3dcf9f6f9fffc81e8839690d5,van Gotovchits <ivg@ieee.org>, 2016-01-14 11:49:18 -0500,329, merge pull request 329 ivg bap pluggable add support plugins bap,,
679,39187798a9b2a6901dacf5a625473df113b5c31a,van Gotovchits <ivg@ieee.org>, 2016-01-14 11:34:13 -0500, , add support plugins bap also fixed small bug cmdline preprocessing,,
680,35568c206d7de417b265bda88f372bd4ddd76170,van Gotovchits <ivg@ieee.org>, 2016-01-14 10:44:01 -0500,328, merge pull request 328 ivg strip bap server removed bap serve core lwt bap,,
681,b3153158dc72413eebac08aca52a73570c0857af,van Gotovchits <ivg@ieee.org>, 2016-01-13 17:04:44 -0500, , removed bap serve core lwt bap,,
682,455a9d6455680ce4f0ea3a5f85a90c62bad9cdc2,van Gotovchits <ivg@ieee.org>, 2016-01-13 15:26:59 -0500,327, merge pull request 327 ivg llvm option allow pas option llvm backend,,
683,ca41afe2a749491a11fdb9841c93d552765f726e,van Gotovchits <ivg@ieee.org>, 2016-01-13 14:55:13 -0500, , allow pas option llvm backend option passed backend using environment variable get option list use help currently  option help display available option help hidden x86 disable arith relaxation disable relaxation arithmetic instruction x86 version display version program x86 asm syntax choose style code emit x86 backend att emit style assembly intel emit intel style assembly  interesting option x86 asm syntax allows switch att intel syntax actually main reason add mechanism requested many user provide output intel syntax default syntax still att,,
684,5a069a9fd7aa2121260161bf60438d25584656b9,van Gotovchits <ivg@ieee.org>, 2016-01-13 13:58:03 -0500,326, merge pull request 326 ivg refine plugin system refine plugin system,,
685,b8af29826718409bb06fed8b45038eb181de9467,van Gotovchits <ivg@ieee.org>, 2016-01-13 12:03:10 -0500, , refine plugin system introduces breaking change read carefully decouples notion plugin pas well separate process loading plugin execution plugin always dynamically linked library loaded bap fronted perform side effectfull computation usually register plugin extension point   use file name load plugin use pas name run pas loading plugins command line  previously option used load plugin program pas analysis word executes option load plugin plugin execute run pas name name use name commandline option example suppose file mycode.ml following content ocaml open bap.std let main project print_endline hello world let hello main  run pas following command line sentence  bapbuild mycode.plugin bap bin lmycode hello  good news specify pas several time run amount time  bap bin lmycode hello hello hello  print hello world three time plugin dependency loaded executed many time run plugin need sophisticated control running plugins run registered pas program directly using function also since totally separate pas name filename contains pas still course general name file irrelevant used option also mean single plugin add one pas may even generate pass dynamically based command line installing plugins  still worthwhile mention plugins installed opam precisely findlib known location loaded automatically particular mean ship bap bunch pass loaded automatically run using pas name option p.s provide harness simplify installation separately passing option plugins  option passed manner i.e. pas option option plugin plugin use plugin option passed plugin option difference pas option without sign e.g. myplugin help groff old myplugin help groff style also supported also option argumentless remove ambiguity make sure followed positional parameter,,
686,a45cea90c224d365e0cb13cb8fb72b6b9ca0c87e,van Gotovchits <ivg@ieee.org>, 2016-01-12 13:49:26 -0500,324, merge pull request 324 ivg lifter fix fixed lifting procedure,,
687,8b9b0f08f6acef802f0ab98799065192d4c4db29,van Gotovchits <ivg@ieee.org>, 2016-01-12 12:56:12 -0500, , fixed lifting procedure several corner case likely occur lifting junk data handled cpuexn instruction lifting completely rewritten previously incorrect return label target trampoline block either terminal block code follows cpuexn redirect fall block actually raise question whether make return label optional interrupt term added check call conditional handle conditional call check relies bil representation rather backend kind mechanism ensure controversy recursive descent disassembler lifter,,
688,738857a4014dfd756fecd98d86b292800c3ca3c8,van Gotovchits <ivg@ieee.org>, 2016-01-06 17:03:39 -0500,322, merge pull request 322 ivg piqi fix new bir refactored bil serialization,,
689,0ca1c0fddfcb7696b7a6e2afb8da5db02577650e,van Gotovchits <ivg@ieee.org>, 2016-01-06 16:26:39 -0500, , new bir refactored bil serialization module provide family type _of_string string_of_ type function accepts fmt parameter define format transformation type _of_string longer accepts filename instead data bir serialization rewritten scratch also fixed piqi build harness,,
690,325397d344e43c43b0696e2ba335ffd9a7b081d3,van Gotovchits <ivg@ieee.org>, 2015-12-07 18:00:09 -0500,317, merge pull request 317 ivg sharing tag across plugins allow introduce new tag value plugins,,
691,9f5bfffaa74c9aa3bc7cd5614bcd69e57b552c9d,van Gotovchits <ivg@ieee.org>, 2015-12-07 17:07:44 -0500, , allow introduce new tag value plugins allows introduces new tag plugins pas value specified tag two different plugins previously possible since module defines tag evaluated per plugin failure exception thrown first evaluation stating tag value already registered fix following way first registration store provided module well freshly create tag value info data structure consequent registration look type info table find module user trying register returning stored tag otherwise bail error course ocaml type system allow extract tag value monomorphic table use dark magic type cast unsound considered safe least two witness type equality first witness uuid type equal enough since user accidentally copy pasting provide uuid two different type second witness type share comparison function look like latter enough prove type since requiring pas module value packing actually creates record function example following two module considered equal ocaml module struct type int let compare compare module struct type float let compare compare end  full example showing user pas value arbitrary type two plugins provided definition.ml open core_kernel.std open bap.std let note name note uuid e4562d18 3ac5 4070 bc12 b99b9856dfce module string definition.mli open bap.std val note string tag pass1.ml open bap.std open definition let main proj project.set proj note hello let pass1 main pass2.ml open bap.std open core_kernel.std open definition let main proj match project.get proj note note printf note note none printf note let pass2 main compile  bapbuild pass1.plugin bapbuild pass2.plugin bap bin true lpass1 lpass2  expected output  note hello ,,
692,5e2a738d69b63322faecdbf90f9a31be75a7d012,van Gotovchits <ivg@ieee.org>, 2015-11-16 07:35:38 -0500,313, merge pull request 313 ivg biri fix biri fix vector function,,
693,2e70f277b4b9e3b88aeff7ffba74107dc1d0f2fa,van Gotovchits <ivg@ieee.org>, 2015-11-16 07:03:51 -0500, , biri fix vector function technical update fixing several bug fixed term evaluation order biri added forgotten index function vector housekeeping,,
694,e28fc8f4c87ba1971f40494198727a3614bf32d2,van Gotovchits <ivg@ieee.org>, 2015-11-04 06:23:43 -0500,307, merge pull request 307 add organize serialization bil bir,,
695,0df38e416167d3d28564486eb1709bb91f0771f6,enneth Adam Miller <kennethadammiller@gmail.com>, 2015-10-29 16:53:32 -0400, , add organize serialization bil bir commit codifies set translation function bil bir bap way single function serialize way respective ocaml vernacular type string back complete unit test demonstrate good working order functionality passing lastly commit reorganizes extant bil code serialization library main bap.bap_types sub library subfolder within bap future direction ocaml concurrency external limitation lifted including core_kernel ceiling version modular implicits course duly noted,,
696,238ff82459681262704806013eb13bc8df3606c5,van Gotovchits <ivg@ieee.org>, 2015-10-30 08:11:00 -0400,311, merge pull request 311 ivg ansi color add ansi color tagging fix bug,,
697,68f9af019f224e777fdf7cfd47a3d53c346b5cc3,van Gotovchits <ivg@ieee.org>, 2015-10-29 17:38:55 -0400, , add ansi color tagging fix bug small technical update bug fix brings new feature ansi color tag ansi color  two new tag foreground background used add attribute term pretty printing function value print corresponding color ansi escape code thing need mark term color e.g. ocaml term.set_attr foreground green   ocaml term.set_attr background red  enable attribute printing see color terminal support case forgot enable printing attribute gentle reminder use emit attr option like   bap emit attr foreground  get colored foreground  bap emit attr background  background use shell globbing using shell get  bap emit attr fore back ground  enable color emacs compilation buffer add following .emacs lisp require ansi color defun colorize compilation buffer toggle read ansi color apply region point min point max toggle read add hook compilation filter hook colorize compilation buffer ,,
698,c214a5124e9fd5cdf1c6bd8acd488ffdd72ff699,van Gotovchits <ivg@ieee.org>, 2015-10-30 07:30:56 -0400,310, merge pull request 310 ivg fix filtered fix issue filtered graph,,
699,b3f14ef9a531f319b46f4f926f790d45618fa20d,van Gotovchits <ivg@ieee.org>, 2015-10-30 07:02:56 -0400, , fix issue filtered graph succs preds take account filtered edge,,
700,340583a095f46b19f3e4f7dcd10f26741d4d1552,van Gotovchits <ivg@ieee.org>, 2015-10-27 17:40:46 -0400,309, merge pull request 309 add pfsm assisted shingled disassembler lifter unit test,,
701,3d64135f844caebb3bb77054fd3e86e18d082a35,enneth Adam Miller <kennethadammiller@gmail.com>, 2015-10-27 16:53:11 -0400, , add pfsm assisted shingled disassembler lifter unit test commit add shingled disassembler lifter make available shingled shingled_lifter work continuation passing style much realistically possible utilizes single pas analysis traverse possible code sequence known data wherein sheered additionally skeleton implementation training corpus facility build probabilistic finite state machine future higher accuracy selection possible code sequence heurism facilitation provided lastly lifter module grant user easy ability drive shingled disassembler either graph sheering capability simple conservative pas execution speed expected linear save usage memmap force theoretical consideration judge log memory expected linear duly noted conformance original paper wherein graph sheering technique advised maximum two edge case possibly missed thatis sheering occurs one half expected potential case affected current time supposing sequence static successor lead known data reverse transitive closure traversed subsequently marked data however case known data proceeds body instruction instruction missed additionally least scenario wherein sequence data byte static successor expected valid code sheered mean reverse static successor traversal however testing data driven knowledge inform future recourse,,
702,84d9247d80f5dc3a90188ce4874b837ab51c83b6,van Gotovchits <ivg@ieee.org>, 2015-10-23 13:00:56 -0400,308, merge pull request 308 feseal bap trace bap trace library,,
703,82bbc1194e46d8397dc54bc8aa850cee03d8f322,eseal <feseal@yandex.ru>, 2015-10-23 14:31:48 +0300, , bap trace library,,
704,e04dba5a5ede5dafc9360c2b887ab557bee949f9,van Gotovchits <ivg@ieee.org>, 2015-10-21 17:13:56 -0400,305, merge pull request 306 ivg fix graph fix 305,,
705,44142990aea644e9699f1a5138b44df4082ff8cc,van Gotovchits <ivg@ieee.org>, 2015-10-21 16:22:15 -0400,305, fix 305 305 one manifistation bug actually node zero rank skipped,,
706,89e99a14b860b2cd15e53f30ccea3dac6ecee581,van Gotovchits <ivg@ieee.org>, 2015-10-20 13:11:12 -0400,303, merge pull request 303 ivg fix labeled update fix 302,,
707,75c31048b138dba9a09282382927a7db8cbd5c1c,van Gotovchits <ivg@ieee.org>, 2015-10-20 12:28:46 -0400, , fix 302,,
708,4fa5704013d0bc8b99ba5cf1c89710b9159d7dd9,van Gotovchits <ivg@ieee.org>, 2015-10-19 17:14:38 -0400,301, merge pull request 301 ivg bili bap interpreter framework,,
709,f09d383aaf1e5f0e06b7377ead1d958d00c05a93,van Gotovchits <ivg@ieee.org>, 2015-09-25 17:06:18 -0400, , bap interpreter framework introduces new facility interpretation bil three interpreter implemented far expi interprets expression sublanguage bil bili interprets bil ast biri interprets bil form interpreter come later interpreter form hierarchy expi base class bili biri two sibling interpreter paired corresponding context context also represented open class extended user interpreter two new data structure came play value represent concrete value storage represent memory storage fact interface implementation packed since interpreter ran state monad also add monad module bap currently one monad namely state monad good place extend monad library also remove conceval library bili feature complete substitution also constant folding reimplemented using bili code duplication constant folding also refined unsafe method removed bug fixed based newly defined semantics,,
710,e2574aacd7449701b4d5d10d10176ef3bbbc52f7,van Gotovchits <ivg@ieee.org>, 2015-09-19 10:27:38 -0400,298, merge pull request 298 ivg value parallel match parallel matching value,,
711,0c27bfa8ccd6212807efac4d7d17881e43e87b7d,van Gotovchits <ivg@ieee.org>, 2015-09-18 16:39:26 -0400, , parallel matching value introduces parallel matching value type value value want pattern match several tag use following syntax ocaml let lift value.match begin switch case memory_load fun load case memory_store fun store case register_read fun read default fun unknown end  memory_load memory_store register_read value type tag course totally polymorphic unified branch i.e. use int tag string tag switch expression,,
712,15cf7765e7632fb19246eafc32078865a0c057e4,van Gotovchits <ivg@ieee.org>, 2015-09-18 09:15:22 -0400,297, merge pull request 297 rvantonder fix server small client server fix,,
713,4941e2eba2979deff52281d82c47a064b1fe592b,ijnard <rvantonder@gmail.com>, 2015-09-15 01:03:14 +0000, , small client server fix server still respond client doe supply client break successful connection,,
714,e390818f11be378bc4b6c0ec59ab6a1b9e645a9b,van Gotovchits <ivg@ieee.org>, 2015-08-31 14:49:30 +0300,295, merge pull request 295 percontation div_fix fix div instruction,,
715,b577c6c772d4ab49f9e17dcadaef489f985ea3a6,van Gotovchits <ivg@ieee.org>, 2015-08-31 14:20:43 +0300,294, merge pull request 294 percontation xmmfix2 add r128 r256 size,,
716,ee7f335a9ff94828f8ad72a337397d68837f2c9a,yan Goulden <percontation@gmail.com>, 2015-08-26 23:15:17 -0700, , fix div instruction df856f1c0 gave exps wrong typ,,
717,e715955da3f4c4f5ff4474419602cfad41e5bac9,yan Goulden <percontation@gmail.com>, 2015-05-01 21:15:28 -0400, , add bap_memory stuff r128 r256,,
718,7a4064a5dd992be9b55d531da981854bdb458f77,yan Goulden <percontation@gmail.com>, 2015-05-01 19:44:24 -0400, , add r128 r256 support ymm lifting,,
719,977f10dab950ba979ba27abfdb56b4eedbf418a0,van Gotovchits <ivg@ieee.org>, 2015-08-18 15:41:11 -0400,292, merge pull request 292 ivg fix thumb disasm add support thumb make arch explicit,,
720,3904ed3aea032b936de25224fac5316a180f6dc0,van Gotovchits <ivg@ieee.org>, 2015-08-18 15:19:44 -0400, ," add support thumb make arch explicit fix 290  echo 0x88,0xb0 bap arch thumb show insn sub 0x20  may also break code remove wildcard arm thumb architecture previously defaulted latest arch one provide explicitly armv7 thumbv7 arch.of_string function still understand arm thumb short cut defaulting armv7 thumbv7 correspondingly big endian variant arm thumb also fixed",,
721,cf1624f8cd20f95b2520db19c43f28d3838ab3a1,van Gotovchits <ivg@ieee.org>, 2015-08-17 11:29:58 -0400,291, merge pull request 291 ivg fix memory leak disasm fix memory issue disassembler,,
722,036d9a49134527864c0839afcb47a9b8f6e3d1dc,van Gotovchits <ivg@ieee.org>, 2015-08-17 11:08:18 -0400, , fix memory issue disassembler actually two issue played along backlog history unbounded state changed byte may become long bounded user controlled issue problematic look like ocaml memory leak lazy value stored inside array insns lazy found suitable workaround upstream fixed,,
723,477e92a7ccb57bda80692e729bec64442be8ea11,van Gotovchits <ivg@ieee.org>, 2015-08-13 17:39:31 -0400,285, merge pull request 285 maurer lift fail special generate bil special semantics unknown,,
724,c064dd3587e55e05b34155caf3f934edce30626c,van Gotovchits <ivg@ieee.org>, 2015-08-13 17:12:15 -0400, , bumped doc version,,
725,e730fbed49f159e305450cab20d811e129964397,atthew Maurer <matthew.r.maurer@gmail.com>, 2015-08-13 16:44:21 -0400, , generate bil special semantics unknown,,
726,a024b5299f46f56db7c706cdaf19665cbf6b2b8f,van Gotovchits <ivg@ieee.org>, 2015-08-12 17:59:40 -0400,283, merge pull request 283 maurer docker remove git support building raw file,,
727,6457fffce0f7339425636ccf719603b9202db6c5,atthew Maurer <maurer@matthewmaurer.org>, 2015-08-12 16:12:12 -0400, , remove git support building raw file,,
728,d055132fce30a99a9b767cb0d7370bdcac98a796,van Gotovchits <ivg@ieee.org>, 2015-08-12 14:50:36 -0400,282, merge pull request 282 maurer docker add docker container build,,
729,ea5b0e1aa8bb386df4b7b46eede84de463bdaa67,atthew Maurer <matthew.r.maurer@gmail.com>, 2015-08-12 14:40:32 -0400, , add docker container build,,
730,bb81b0e29920fdef5aa072520d1125815f9ea544,van Gotovchits <ivg@ieee.org>, 2015-08-12 08:19:31 -0400,281, merge pull request 281 ivg fix ssa fixed bug ssa algorithm implementation,,
731,7ced455b630ecf97dc3cf3bd291ad6c93c350f24,van Gotovchits <ivg@ieee.org>, 2015-08-11 15:23:15 -0400, , fixed bug ssa algorithm implementation bug introduced process transforming ssa algorithm graphlib renaming procedure using wrong block version number moved,,
732,f69b83f75c429bc3717e0c7502863802e8606142,van Gotovchits <ivg@ieee.org>, 2015-08-11 16:41:11 -0400,278, merge pull request 278 ivg container infrastructure move system container based infrastructure,,
733,fa92663fea4a27e075ff880d99f243998fbadc2b,van Gotovchits <ivg@ieee.org>, 2015-08-06 18:25:48 -0400, , move system container based infrastructure greatly simplifies system first switch new ocaml integration travis allows drop system use opam file single point truth second experimental branch integration system modern container based infrastructure travis enforces use pro time test severely reduced hour minute also expected new infrastructure much stable least hope unstable legacy one many con also check multiple compiler version excessive test suite test binary issue addressed point either creating locally powerful severe time memory restriction still using travis online service running test night build approach,,
734,23580c8cfa2ef831278da53f9d440a5adb52b47b,van Gotovchits <ivg@ieee.org>, 2015-08-06 17:11:08 -0400,276, merge pull request 276 ivg v0.9.9 releasing 0.9.9,,
735,d1ba466cfff56d2e1a059aa93504f232b098a1c9,van Gotovchits <ivg@ieee.org>, 2015-08-06 15:30:06 -0400, , releasing 0.9.9 final touch release updated release file documentation bap fail lifting failed address 270 added support system amd64 abi fixed free_vars ssa form,,
736,26dbe953cc165be4db1c06227b0b66d10bff8875,van Gotovchits <ivg@ieee.org>, 2015-08-06 09:14:57 -0400,275, merge pull request 275 ivg callgraph added callgraph,,
737,0c70fff9953e51362301ddf47484ce38cfb52b06,van Gotovchits <ivg@ieee.org>, 2015-08-05 17:28:57 -0400, , added callgraph see,,
738,a684ef37c295f9e444975fd135ec519b5957f2b0,van Gotovchits <ivg@ieee.org>, 2015-08-05 11:59:02 -0400,274, merge pull request 274 ivg ssa args added ssa argument reconstruction much,,
739,6f4a639aca06660f3a6860dd9fc254df6068e011,van Gotovchits <ivg@ieee.org>, 2015-07-30 18:12:40 -0400,235, added ssa argument reconstruction much moved ssa transformation library sub.ssa reimplemented function parameter reconstruction currently work arm arm specific need bookeeping enumerate calling convention added useful algorithm like free_vars substitute etc see exp stmt def phi jmp blk sub module made tid parseble string also added support symbolic tids fixed bug memory printer introduces 235 fix fixed expression simplification algorithm fixed lifter little bit robust still much done,,
740,4849261c1720b8edfe24429b0c65fe1f8c23fc2f,van Gotovchits <ivg@ieee.org>, 2015-07-30 17:29:35 -0400,273, merge pull request 273 ivg rooted try fix trie data structure,,
741,265d8033bab22de8a0851da8c621ac2950aa9ba2,van Gotovchits <ivg@ieee.org>, 2015-07-30 16:10:13 -0400, , fix trie data structure data attached trie root i.e. empty key resolve 271 test suite added bug fixed walk algorithm added fold function substring key fact search function implemented using walk function family two new functors added array.prefix array.suffix create correspondingly prefix suffix try array key trie.string also family ,,
742,37e245da98aa9c9ed606dfa3ab69899350a72f0e,van Gotovchits <ivg@ieee.org>, 2015-07-30 14:02:57 -0400,272, merge pull request 272 ivg graph refining refined graph arg term abi interface,,
743,40426e49972463aadeb6221438ac35e934761e06,van Gotovchits <ivg@ieee.org>, 2015-07-28 10:59:45 -0400, , refined graph arg term abi interface graph  introduces mathematical model graph data structure graph implementation updated conform model much consistent difference identity node label made clear result node type graph made abstract also multigraphs i.e. graph allows one edge two node disallowed since fit model relation represented using suitable label functor labeled added library create labeled node old interface used ocamlgraph removed substituted newer clean use graphlib dfs function removed signal one use graph interface instead arg term  arg term refined sort definition part work implementing argument recognition abi interface  abi interface updated take sub term instead lower level symtab.fn free bonus sequence made printable printable list shallow sequence printables printed,,
744,cc92e92f010dbb447e556a3930ec5eebb7366aaa,van Gotovchits <ivg@ieee.org>, 2015-07-27 08:33:26 -0400,269, merge pull request 269 ivg bap graph tentatively introduces graphlib library,,
745,52d628a9a65617b62556ddd75f1429c7cece5b0c,van Gotovchits <ivg@ieee.org>, 2015-06-26 17:29:05 -0400, , tentatively introduces graphlib library graphlib extends ocamlgraph new modern rich interface also provides two new graph type algorithm dominators algorithm dominance frontier strongly connected component shortest path reachability algorithm auxiliary data structure like rose tree partition set frontier path etc functor implement new interface top ocamlgraph module functor implement old ocamlgraph interface top module implement newer graph interface pretty printing graph auxiliary data structure generic dot printing library first class module instead functors thus making working graph syntactically easier note pre release feel still rough edge node left library everyone welcome play feedback welcome,,
746,45b5e9323cef81b68f24acd0b767362be6d1b49c,van Gotovchits <ivg@ieee.org>, 2015-07-21 14:18:23 -0400,268, merge pull request 268 ivg fix high memory printing fix 235,,
747,d7f67bea8f78103e895a5c65a57bb9bd681935d1,van Gotovchits <ivg@ieee.org>, 2015-07-21 13:18:48 -0400,267, merge pull request 267 ivg fix null section fix 256,,
748,a51d58686c85a6834d185147e39f45a3dd381c7c,van Gotovchits <ivg@ieee.org>, 2015-07-21 13:15:11 -0400, , fix 235 actually workaround since real problem still  let high addr.of_int64 addr.to_int64 high int64 z.overflow  problem fit ocaml signed int64 workaround use addr.to_int64 signed high case get number corresponding bit pattern purpose printing general,,
749,ee9a404e20fc5c07a2cd39563c7039d3db7d5e2d,van Gotovchits <ivg@ieee.org>, 2015-07-21 13:02:07 -0400,266, merge pull request 266 ivg remove cache table remove caching table data structure,,
750,268e85ed4adb005854a0605a563d10a273e9bacc,van Gotovchits <ivg@ieee.org>, 2015-07-21 12:44:22 -0400, , fix 256 file contain section fit loadable memory hitting kind section error warning,,
751,39999a15a4ac76b70213303a27c29aa5862ca5ba,van Gotovchits <ivg@ieee.org>, 2015-07-21 12:05:57 -0400, , remove caching table data structure really useful implemented incorrectly,,
752,8adedac3eec13f449f4c5a45b576eb512ead55c2,van Gotovchits <ivg@ieee.org>, 2015-07-21 12:00:45 -0400,265, merge pull request 265 ivg fix trie fix 264,,
753,aa7092393d0602944bd2c5c3a423c95af2da4de8,van Gotovchits <ivg@ieee.org>, 2015-07-21 11:32:42 -0400, , fix 264,,
754,7d8bbaa13e81e96abe810f10cc8e76805a1e6325,van Gotovchits <ivg@ieee.org>, 2015-07-07 13:51:27 -0400,260, merge pull request 261 ivg fix core change fix 260 compatibilty issue,,
755,c6ba7437317d04935f0781724fe70447c521b082,van Gotovchits <ivg@ieee.org>, 2015-07-07 12:06:32 -0400,260, fix 260 compatibilty issue 112.35.00 version core introduces breaking change like changing monad interface removing dependency resolve issue manner work old newer version core,,
756,c0e1e829561954d04f57dad2f549dc2769234c8a,van Gotovchits <ivg@ieee.org>, 2015-07-07 10:13:00 -0400, , constrained core_kernel max version temporary resolve 260. upstream opam file already fixed merged http github.com ocaml opam repository pull 4409,,
757,8d1a7ca938320802c784adfa54ff5d851d5251d3,van Gotovchits <ivg@ieee.org>, 2015-06-24 20:58:37 -0400,254, merge pull request 255 ivg change bitvector piqi representation resolve 254,,
758,77cbfd5753a564d812a7ad6885e4c6d3d3788e9d,van Gotovchits <ivg@ieee.org>, 2015-06-24 18:10:25 -0400,254, resolve 254 bitvectors represented binary data although worked well piqi piqi transformation work fine actually rendered json xml format unusable change bitvector string representation,,
759,bd3aa0cedc5698a3062c2e211e6222c7efba7995,van Gotovchits <ivg@ieee.org>, 2015-06-16 14:48:22 -0400,245, merge pull request 245 ivg fix bapbuild fix 240,,
760,d2af7b8ebbd1f72fae4cfe53337450feeba71014,van Gotovchits <ivg@ieee.org>, 2015-06-16 14:48:16 -0400, , fix 240,,
761,92eeaee310853db0b7af630c00861c4778723106,van Gotovchits <ivg@ieee.org>, 2015-06-16 14:45:19 -0400,244, merge pull request 244 rvantonder master make option consistent bap expose dedicated type,,
762,8bdf0eb7c3dfd7ffb982053bcb30a9b8ceaf33d2,ijnard <rvantonder@gmail.com>, 2015-06-16 17:17:27 +0000, , make option consistent bap expose dedicated type,,
763,f8ad9137c99ea16195f4bd1622fe58d28eae21db,van Gotovchits <ivg@ieee.org>, 2015-06-15 17:44:42 -0400, , update readme.md fixed typo simple plugin example,,
764,78de1b4199acc43a6f36b0fbc09c8e13bafbc94c,van Gotovchits <ivg@ieee.org>, 2015-06-13 00:25:23 -0400,243, merge pull request 243 maverickwoo typo typo,,
765,23b2a84f30887d16bab6058a23c3fbb89e401f09,averick Woo <maverick@cs.cmu.edu>, 2015-06-12 21:43:13 -0400, , typo fixed,,
766,5c749d23fd6496c20f40715e5381c639f3ed772b,van Gotovchits <ivg@ieee.org>, 2015-06-12 17:25:28 -0400,242, merge pull request 242 ivg change var change var module implementation,,
767,df856f1c04f9a69a39292c37606c9818e68fee8b,van Gotovchits <ivg@ieee.org>, 2015-06-12 16:07:09 -0400, , change var module implementation introduces slight change var representation variable versioned i.e. version number attached variable represent variable different time space particular useful ssa form see documentation var module information also small change fix bug introduced fixed 238. due new bug block became unreachable bil lifter use sameness compare variable i.e. cpu.is_ work fine ssa form added three new function term module change upsert operation find_exn sometimes guaranteed enum synonym to_sequence added new option output synonym phoenix fix 241,,
768,a69df76180d170c1c3e93768d7fee46dc607ce96,van Gotovchits <ivg@ieee.org>, 2015-06-11 17:26:55 -0400,239, merge pull request 239 ivg phi var redesign phi node representation,,
769,5dac5c73a09381b6c9c45cfe8d46ce27eec2a5c7,van Gotovchits <ivg@ieee.org>, 2015-06-10 18:47:59 -0400,238, redesign phi node representation change representation phi node previously pair variable set definition pair variable dictionary tid exp exactly llvm also fix 238 resolve 237 also prettifies pretty printer,,
770,e283955700cd22e7a870a1bb7d6eda51b7f77bb1,van Gotovchits <ivg@ieee.org>, 2015-06-08 19:43:03 -0400,234, merge pull request 234 ivg forgotten function added,,
771,ff891c4a890e81a05f3d3c2e19910def0a3c8ad9,van Gotovchits <ivg@ieee.org>, 2015-06-08 17:37:21 -0400, , added added forgotten function also small fix vector ignores non positive capacity slightly better pretty printing phi node,,
772,fc57a0b9873f812bbf1dcba2268254d909484ff0,van Gotovchits <ivg@ieee.org>, 2015-06-08 16:03:13 -0400,233, merge pull request 233 tiffanyb cleanup followup adding dump symbol pull request 220,,
773,9e261214c7a483a16964186eab73082584a8d84f,iffany Bao <tiffanybao@cmu.edu>, 2015-06-08 14:52:33 -0400, , cleanup,,
774,7453527bbc4107590e409c8073cecba224eadc2e,van Gotovchits <ivg@ieee.org>, 2015-06-05 13:11:27 -0400,229, merge pull request 229 feseal llvm loader stub llvm loader stub,,
775,8cf98628ceae50d30b734bbb2ce6aabb086aca34,eseal <feseal@yandex.ru>, 2015-06-05 13:17:53 +0300, , llvm loader stub,,
776,772b6057af52a995a000a383e0e763197ab2248f,van Gotovchits <ivg@ieee.org>, 2015-06-04 17:25:34 -0400,228, merge pull request 228 ivg final fix cleaner error handling bug fix,,
777,f17416ed983fdb3bc232c4d3bcd880e47fad5b33,van Gotovchits <ivg@ieee.org>, 2015-06-04 11:57:43 -0400, , cleaner error handling bug fix error plugins expressed clean way one use function return or_error.t get default error handling catch get full control fixed passing option plugins system load transitive closure dependency command line parsing stage cleanup plugin option command line pas main utility arm lifter handle new instruction svc mapped cpuexn statement also slightly changed printing cpuexn printed interrupt instead previous int much easier grep readable fixed bug lifter fall jump lost regular basic block without jump fixed fixpoint function reason book algorithm one comparison check work fixed section allocation image previously allocated zero offset updated documentation readme,,
778,719cb2ddcce80a34a95b4357a4d016ccb40f0d55,van Gotovchits <ivg@ieee.org>, 2015-06-03 13:55:33 -0400,225, merge pull request 225 ivg default llvm 3.4 llvm_version default 3.4,,
779,99b01ba4fa36caaee3982065976344ad430243f9,van Gotovchits <ivg@ieee.org>, 2015-06-03 13:55:25 -0400,226, merge pull request 226 ivg expose elf library expose elf library public,,
780,0add82282bff22ea0c04db954e2e8598b08e228e,van Gotovchits <ivg@ieee.org>, 2015-06-03 10:26:53 -0400, , expose elf library public,,
781,1ec656988f9c4890526130462020c4fec388ed44,van Gotovchits <ivg@ieee.org>, 2015-06-03 09:55:30 -0400, , llvm_version default 3.4 also extended search procedure mac search macported version available,,
782,e0953e53ad27b829aaf4b0fb8f3031a4df9debfa,van Gotovchits <ivg@ieee.org>, 2015-06-02 20:35:54 -0400,224, merge pull request 224 ivg extend bil helper extend fix bil helper,,
783,65f472c08d27020a6570b7992b93397346251d1e,van Gotovchits <ivg@ieee.org>, 2015-06-02 18:33:43 -0400, , extend fix bil helper add helper previously found bil module stmt exp module example three fixpoint operator bil.fixpoint stmt.fixpoint exp.fixpoint fold iter find etc also fix wrong naming find renamed exists find_map find also nasty bug fixed,,
784,1dbd33afef3d896146a1c411e8e6e1a09fc899f8,van Gotovchits <ivg@ieee.org>, 2015-06-01 14:22:57 -0400,223, merge pull request 223 ivg section segment renaming thing,,
785,9a574498392c6a13606c9d202037daf137bb780c,van Gotovchits <ivg@ieee.org>, 2015-06-01 12:49:39 -0400, , renaming thing forfeit previous awkward naming scheme segment section section segment region section need understand anymore segment segment section section symbol symbol adopted previous scheme renaming following  section segment region section sym symbol ,,
786,1e6199e5c88d9e684f86b5fe570e7557c6ff593e,van Gotovchits <ivg@ieee.org>, 2015-06-01 12:47:20 -0400,222, merge pull request 222 ivg pas deps introduce pas dependency autoloading,,
787,db2a175ba8e6708753a06a2428940c857a1910ec,van Gotovchits <ivg@ieee.org>, 2015-06-01 09:53:51 -0400, , introduce pas dependency autoloading provides two new feature revoke one pass specify dependency list name dependency run pas run_passes auto load plugins i.e. sufficient specify sink pas dependency properly resolved loaded possible register plugin different plugins name,,
788,0e559296c6d88b13b0bc5a000c4e2824268a5703,van Gotovchits <ivg@ieee.org>, 2015-05-31 13:50:27 -0400,221, merge pull request 221 ivg moving project moving logic library extending project,,
789,96bd334a0d8af17a6dfd21eff9ec710d448f13e8,van Gotovchits <ivg@ieee.org>, 2015-05-29 18:19:27 -0400, , moving logic library extending project heavily refactors project module first hide project implementation next stuff bap utility moved project one create project easily without bap utility project changed cosmetically deprecated field removed first memory mem field represented memmap contiguous chunk data second instead symbol table represented string table symtab data structure allows represent non contiguous overlapping symbol result many function depend previous symbol representation changed function accepts bound memory accepts bound function addr bool abi new clean easy use interface change includes extending plugin system plugin loaded dynamically file moving plugin loading stuff bap utility bap_plugins library latter dependend bap library also introduces new correct robust symbol recognition algorithm polish representation like adding lifter instruction optimizing bil lifting much nicer new pretty printing attribute printed tag enabled emit attr option bap print instruction lot change properly enumerated change file release,,
790,d4eca459dbdd641b071cdad0049019d0ee481933,van Gotovchits <ivg@ieee.org>, 2015-05-27 15:43:56 -0400,220, merge pull request 220 tiffanyb dumpsymbol adding dump symbol option bap changing interface module symbol,,
791,21a00416383ada033fb416e2bee487e344c30d72,iffany Bao <tiffanybao@cmu.edu>, 2015-05-10 20:16:18 -0400, , add dump symbol option bap_main change symbol interface,,
792,9261722cf61375aa1bd6fa3e44e3108f4770092b,van Gotovchits <ivg@ieee.org>, 2015-05-22 15:33:26 -0400,219, merge pull request 219 ivg update doc update doc fix bapdoc add type equality witness,,
793,17ce903aaead190849b1f7226e7da0d55b327f58,van Gotovchits <ivg@ieee.org>, 2015-05-22 14:46:54 -0400, , update doc fix bapdoc add type equality witness extends documentation also fix bapdoc compatibility issue turn code highlighting remove ubiquitous bap.std generated documentation also expose type equality witness tag,,
794,ff1663848917638d8a9fe2bacd33dce89781467e,van Gotovchits <ivg@ieee.org>, 2015-05-21 18:52:27 -0400, , added link master api documentation,,
795,819516bc3d2ef070a04efd9fc058de66e1b6b220,van Gotovchits <ivg@ieee.org>, 2015-05-21 18:47:50 -0400,218, merge pull request 218 ivg attribute extend value module added attribute term,,
796,383003d60baa3434dd4cd8c894e1d8c2e889b4a2,van Gotovchits <ivg@ieee.org>, 2015-05-18 20:38:08 -0400, , extend value module added attribute term value type value serializable pretty printable comparable short first class allows add attribute term attach term arbitrary value,,
797,cb2200a8b085bd6ffb2e19f799bd3062aca297be,van Gotovchits <ivg@ieee.org>, 2015-05-20 21:45:54 -0400,217, merge pull request 217 percontation master fix punpckhdq e.g 660f6ac9,,
798,615e7d749bdd47dcaf491d3b1d152a98935d0f24,yan Goulden <percontation@gmail.com>, 2015-05-20 13:42:03 -0700, , fix punpckhdq e.g 660f6ac9,,
799,600d7d15e5cfc2b0e576933e43d54a9c7cb6f282,van Gotovchits <ivg@ieee.org>, 2015-05-20 16:33:03 -0400,216, merge pull request 216 nikita git test image 686 test image fixed bit,,
800,428b6ed183df2d57b782cc3477f2999ec02e127a,ikita-git <nikita.maximov@gmail.com>, 2015-05-18 22:08:59 +0300, , test image fixed bit,,
801,852e0d6834f197b065bd5a6d3c131aee5788521f,van Gotovchits <ivg@ieee.org>, 2015-05-15 17:42:55 -0400,215, merge pull request 215 ivg lifter lifter,,
802,a2a4621df7c5b25d85c04665732423992e8def98,van Gotovchits <ivg@ieee.org>, 2015-05-14 12:00:13 -0400, , lifter add lifter namely three new function added program.lift lift whole program sub.lift lift subroutine blk.lift lift basic block also bunch fix like add interrupt new kind jump add return new kind jump add intent field argument fix like adding missed function etc also add new variant dump aka command line option bir option representation program printed standard output note still work progress,,
803,8d0f8bd1f0aca9d4e1165d2663b41436729f4bc4,van Gotovchits <ivg@ieee.org>, 2015-05-13 17:58:12 -0400,214, merge pull request 214 ivg introduce intermediate representation,,
804,74cdee48818225e8b43d39803c97471903ef6d1f,van Gotovchits <ivg@ieee.org>, 2015-05-13 17:17:54 -0400, , introduce intermediate representation add long awaited bap still work progress ready still far released going advertise change right everyone welcome review anyway also moved stuff tag module value add value.map data structure,,
805,6caa0b98c5190b33cb2b335c79f4f8d1eabf8565,van Gotovchits <ivg@ieee.org>, 2015-05-13 16:53:24 -0400,213, merge pull request 213 rvantonder move subst make substitution available plugins includes test,,
806,4f79bbd54fa6b6b2430021fb39f2980077002210,ijnard <rvantonder@gmail.com>, 2015-05-13 17:28:12 +0000, , make substitution available plugins includes test,,
807,6e2493b3719476b50726ab7e755b01af8214f324,van Gotovchits <ivg@ieee.org>, 2015-05-12 15:45:15 -0400,211, merge pull request 211 rvantonder subst add missing project string substitution support,,
808,b873b723334f8174d51445cd19f1e309c6c211e6,ijnard <rvantonder@gmail.com>, 2015-05-12 16:56:49 +0000, , add missing project string substitution support,,
809,12a62b50f8a5fb1ec85848a29dc4bcd8f52e30f7,van Gotovchits <ivg@ieee.org>, 2015-05-07 21:31:26 -0400,209, merge pull request 209 tiffanyb rename renaming utility file,,
810,61c6125c8e4aa0ef2ddf5c5006fd3592368cbacb,iffany Bao <tiffanybao@cmu.edu>, 2015-05-07 16:18:58 -0400, , renaming file change oasis file file renaming,,
811,b798b0621acee153344d30dc4609281b67bb0da1,van Gotovchits <ivg@ieee.org>, 2015-05-06 13:17:23 -0400,208, merge pull request 208 tiffanyb byteweight argument remove redundant argument byteweight code cleanup,,
812,e0681bf51014806e88d715f7df46148deee0bb30,iffany Bao <tiffanybao@cmu.edu>, 2015-05-06 11:25:19 -0400, , minor change,,
813,1ed954a6df2c3078be82d8be1818e8a0daa080d3,van Gotovchits <ivg@ieee.org>, 2015-05-06 10:00:15 -0400,207, merge pull request 207 ivg fix arch issue fixed issue irrefutable pattern bap,,
814,4b51ad948712dd83f5dff7fa0b474bdc66575c14,van Gotovchits <ivg@ieee.org>, 2015-05-06 09:05:20 -0400, , fixed issue irrefutable pattern bap,,
815,fad4a8cf6adbe020f730cd61b775d863673a9808,van Gotovchits <ivg@ieee.org>, 2015-05-06 08:53:04 -0400,206, merge pull request 206 tiffanyb bw_eval_pr bap fsi benchmark implementation,,
816,80382114f395bcf45925ae2e4bc5b9aac5bba4e7,iffany Bao <tiffanybao@cmu.edu>, 2015-03-09 17:07:28 -0400, , update bap fsi benchmark,,
817,d70e051639cbea33a53189cc7732d2531338f05c,van Gotovchits <ivg@ieee.org>, 2015-05-04 17:48:55 -0400,200, merge pull request 200 master fix piqi scheme extend bap field piqi renamed due clash keywords bap got three new option addr specify starting address max insns bound maximum number instruction print size print instruction size,,
818,bdbbd7ab70abdabdf77b28f62a0cef36ccc32db4,van Gotovchits <ivg@ieee.org>, 2015-05-04 16:20:05 -0400,205, merge pull request 205 rvantonder doc general spelling grammar touch ups,,
819,15859f26311744fe29c2db1b7307e4c3479a6f3e,ijnard <rvantonder@gmail.com>, 2015-05-04 18:09:18 +0000, , general spelling grammar touch ups,,
820,efd992494a7305e21f32d1bc16d1130ce881851b,enneth Adam Miller <kennethadammiller@gmail.com>, 2015-05-04 11:41:07 -0400, , add max insns addr insn size,,
821,2a5c4671468c5a2699b6007a8af3fda8867e8eb8,enneth Adam Miller <kennethadammiller@gmail.com>, 2015-05-02 16:27:17 -0400, , bil specification causing keyword conflict cpp must alter name propagate change,,
822,6be6a965601cc27f2536dbdecb9a2ad4282a4724,van Gotovchits <ivg@ieee.org>, 2015-05-01 15:24:28 -0400,203, merge pull request 203 ivg v0.9.7 release updated readme file,,
823,8208c8f5d3b45516eaf62c057244558f4491aad7,van Gotovchits <ivg@ieee.org>, 2015-05-01 15:19:54 -0400, , updated readme file,,
824,e963b22207cbfc8758026a9dfc0a913bf0b00b43,van Gotovchits <ivg@ieee.org>, 2015-05-01 14:29:10 -0400,202, merge pull request 202 ivg install doc integrate bapdoc build system,,
825,b99bf4ee8a832b07284dd7d59daffe77f40a8700,van Gotovchits <ivg@ieee.org>, 2015-05-01 13:18:52 -0400, , integrate bapdoc build system remove old documentation generator integrate new bapdoc tool build system target doc build documentation installation left behalf opam also small fix opam tentative addition external dependency mac,,
826,aac6844671c236c5d3803dea2f64a909da5d6808,van Gotovchits <ivg@ieee.org>, 2015-04-30 22:58:57 -0400,201, merge pull request 201 ivg bap doc refactors bap library,,
827,4a50022dace78e8a8c047ab595febc0cbe4af137,van Gotovchits <ivg@ieee.org>, 2015-04-27 16:21:11 -0400, , refactors bap library instead deep hierarchy module expose bap module allowed generate api documentation also enhanced tooling support remove camlp4 bap.mli even better change break code used internal module bunch small fix disabled peer checking downloading signature fix 199 fixed pretty printing assembly instruction remove coloring code docgenerator,,
828,2b458d092182f9359222209f11cec3dbde290fe0,van Gotovchits <ivg@ieee.org>, 2015-04-29 12:30:24 -0400,197, merge pull request 197 gitoleg coff fixed entry point address,,
829,04030c97d98b95ef17b5fbf91583be6ac2275d2a,van Gotovchits <ivg@ieee.org>, 2015-04-29 12:29:31 -0400,198, merge pull request 198 gitoleg x86 lifter fix fixed bug sum bitvectors different width,,
830,44ec5356387f68ef55bd79b5131881bdf16a0320,leg <forown@yandex.ru>, 2015-04-28 12:58:42 +0300, , fixed bug sum bitvectors different width,,
831,4fe09694f4fffa30e6cde07903f8a9b83924294e,leg <forown@yandex.ru>, 2015-04-28 12:32:43 +0300, , fixed entry point address,,
832,7f15aaeeb4e5352e9bbe30d39fa1e2aedc74d904,van Gotovchits <ivg@ieee.org>, 2015-04-26 19:48:21 -0400,195, merge pull request 195 maverickwoo ignore dot fix slash git ignore fix slash,,
833,15f1dbc3b95bd9ae2f70f214347bac528046f38b,averick Woo <maverick@cs.cmu.edu>, 2015-04-26 16:22:26 -0400, , git ignore fix slash,,
834,ccf13a45d0492c3f85352439f27ca533713cf559,van Gotovchits <ivg@ieee.org>, 2015-04-24 14:59:46 -0400,181, merge pull request 194 ivg fix dfs fix 181 block.dfs,,
835,73293b04f4f64344d4521b4476f4899278722073,van Gotovchits <ivg@ieee.org>, 2015-04-24 14:18:32 -0400,181, fix 181 block.dfs bug block.dfs result dsf sequence block consumed first run nature apology also provided extra optional parameter order allows specify whether would like visit block pre order post order also fixed 181,,
836,785fc531b24ff2a5a18ee004b0ade853621c88a8,van Gotovchits <ivg@ieee.org>, 2015-04-24 13:40:36 -0400,193, merge pull request 193 ivg fix bapbuild linking issue fix possible double linking bapbuild,,
837,d82fe30ddad10d9a8fad72660d8c5691ea6bc33c,van Gotovchits <ivg@ieee.org>, 2015-04-24 12:56:21 -0400, , fix possible double linking bapbuild linking phase excluding plugin bap library dependency dependency bap executable result link library twice kind state lead undefined behavior aka segmentation fault since impossible figure library linked bap binary runtime way hardcode information bapbuild side effect need define pkg cmdliner re.posix compile plugin fact bap binary dependency automatically available,,
838,8464b001d305ca7c0251186b9f8d85570bea4930,van Gotovchits <ivg@ieee.org>, 2015-04-23 18:53:20 -0400,191, merge pull request 191 ivg order dests ordered block destination,,
839,0600c5f22b09cc4be910fd403bab150249db667a,van Gotovchits <ivg@ieee.org>, 2015-04-23 18:24:02 -0400, , ordered block destination succs dests function return successor order execution result dfs algorithm visit block execution order,,
840,1f401cef9c9e9d38e8467ddcd22e6f29d6f95ed2,van Gotovchits <ivg@ieee.org>, 2015-04-22 16:54:03 -0400,189, merge pull request 189 ddcc master wait ida autoanalysis complete exporting symbol,,
841,acfa8f393f881cc1314a82607eee800daadfed78,ominic Chen <d.c.ddcc@gmail.com>, 2015-04-22 19:42:45 +0000, , wait ida autoanalysis complete exporting symbol,,
842,f200a3b9e23482cb6de38a8dd75b53adb82ca3e1,van Gotovchits <ivg@ieee.org>, 2015-04-22 14:58:25 -0400,188, merge pull request 188 ivg fix doc issue fix building documentation,,
843,d2f9ac20779956a43de397e5697a8955392f2bc5,van Gotovchits <ivg@ieee.org>, 2015-04-22 10:39:21 -0400, , fix building documentation releasing revealed bug documentation caught since compiling documentation travis fixed bug opam file official repository bumped change back also fixed source error since time longer build documentation part installation since take much time faulty first time worthless output low quality codoc mature return issue,,
844,5db50084c8a0da96760d474e431f40de78f0bfab,van Gotovchits <ivg@ieee.org>, 2015-04-22 09:28:02 -0400,187, merge pull request 187 ivg system plugins plugins loaded findlib,,
845,8c6b3fc92765716d47c89a0610b05927e0538a2e,van Gotovchits <ivg@ieee.org>, 2015-04-21 12:46:27 -0400, , plugins loaded findlib also fixed project application added changes.md updated readme.md bumped version _oasis,,
846,8c014871dc24c200cf6969bce40550e4d3accacb,van Gotovchits <ivg@ieee.org>, 2015-04-21 10:44:10 -0400,186, merge pull request 186 ivg refining project final refining release,,
847,3ef6b8254935611317b696c05ce9493dea58f74d,van Gotovchits <ivg@ieee.org>, 2015-04-20 18:10:40 -0400, , final refining release refined project type major refining project type used plugin system first field deprecated since going move away low level representation high level intermediate representation also gradually moving away incorrect abstraction symbol symbol must contiguous space every block belongs one symbol also introduce storage map used exchange data plugins renamed bap objdump bap bap objdump outgrew name put travis diet waiting three hour enough reduced set testing file testing platform removed example folder since dead anyway,,
848,53f8a88092ffd85753e75f510b39b2e9b14ba028,van Gotovchits <ivg@ieee.org>, 2015-04-16 11:01:52 -0400,183, merge pull request 183 ivg native bapbuild native bapbuild,,
849,0cc0da8c2b582cf46f54a681948f27e18d11f329,van Gotovchits <ivg@ieee.org>, 2015-04-16 09:14:24 -0400, , 4.01 rule doc argument,,
850,8585f70b3d5d550463dcb9313a1e559d57479a6b,van Gotovchits <ivg@ieee.org>, 2015-04-15 18:22:21 -0400, , native bapbuild reintroduces bapbuild native executable extends ocamlbuild new plugin rule previous limitation longer hold particular use library withing plugin longer needed clean compilation,,
851,691cfdb36da9a4afd8c3380a8bde7618605405b9,van Gotovchits <ivg@ieee.org>, 2015-04-14 09:32:30 -0400,178, merge pull request 178 ivg typesafe memory annotation type safe memory annotation,,
852,5db1c9aa177f6535b4de5a7428a5fbe209f402aa,van Gotovchits <ivg@ieee.org>, 2015-04-14 09:32:21 -0400,179, merge pull request 179 ivg switch llvm fix fix bug llvm properly chosen,,
853,ae0c12d5f3c87039568e743870fc3f3da503e0a4,van Gotovchits <ivg@ieee.org>, 2015-04-13 15:05:36 -0400, , fix bug llvm properly chose,,
854,a9dcc44414c69bf3c732fa4cd0cd6be9e76b1c4e,van Gotovchits <ivg@ieee.org>, 2015-04-13 14:42:00 -0400, , type safe memory annotation move previous stringly typed string string tag new typesafe extensible variant type based universal type aka existentials allows plugin writer speak type safe manner using bap library mediator also fix small issue like error installing pretty printer core library necessity clean calling bapbuild also fix,,
855,fc531e04820b79b585240fd1680c984af4c605e3,van Gotovchits <ivg@ieee.org>, 2015-04-10 10:29:53 -0400,176, merge pull request 176 ivg switch llvm switch llvm backend default,,
856,07957477054a5e7ec1edc513e8eb0f3d9c083480,van Gotovchits <ivg@ieee.org>, 2015-04-09 15:55:41 -0400, , switch llvm backend default switch bap use llvm default loader also change behavior image.create function previously backend specified started autoresolution process default llvm also auto provided backend name autoresolution started,,
857,da0c033514dcbea0302a127977db92d18244d294,van Gotovchits <ivg@ieee.org>, 2015-04-09 15:40:51 -0400,173, merge pull request 175 ivg fix python interface resolve 173,,
858,9a6ec4a81541f0edc99141b811b7830216318714,van Gotovchits <ivg@ieee.org>, 2015-04-09 14:38:44 -0400,173, resolve 173 actually bug upstream break chunked get request switched post method request even actually get still funny bug due request get also fixed issue checking connection bap server,,
859,5e8d3e5ebd0a2fb87f7b4b03bd5c49dc7e3b1c0a,van Gotovchits <ivg@ieee.org>, 2015-04-09 11:22:46 -0400,174, merge pull request 174 gitter badger gitter badge add gitter chat badge readme.md,,
860,25acd6dda9ce8eb3466a41531575689d8f39aef0,he Gitter Badger <badger@gitter.im>, 2015-04-09 15:16:50 +0000, , added gitter badge,,
861,7f0127f295530e39de6530ce88c49684f5ba01c5,van Gotovchits <ivg@ieee.org>, 2015-04-08 19:09:53 -0400,172, merge pull request 172 ivg args plugins add command line argument plugins,,
862,7da278860701872b6d84ea514032c86958d3f396,van Gotovchits <ivg@ieee.org>, 2015-04-08 17:01:42 -0400, , add command line argument plugins make available command line argument plugin restricted subset command line language allowed argument must non positional long name option i.e. start value must provided sign e.g callstrings interesting st.cpy parameter must prefixed name plugin passed e.g.  bap objdump bin lstaticstore staticstore help  set parameter passed plugin argv field project record removed prefix e.g. staticstore help transformed help staticstore print transformed print etc,,
863,3a91a896d6e11a5ad81f96d675e63a5f3a0d363a,van Gotovchits <ivg@ieee.org>, 2015-04-08 15:49:52 -0400,171, merge pull request 171 ivg fix bil cleaned bil module,,
864,ac425420d4dd3b2d76334a3dc2085beb8f0172f8,van Gotovchits <ivg@ieee.org>, 2015-04-07 18:35:15 -0400, , cleaned bil module bil writing bil program stmt expr module using ocaml value i.e. expose regular interface bil module also expose printable sexpable binable interface,,
865,2717fa1d07a43edb3aaaf06ea0361b4a7a303983,van Gotovchits <ivg@ieee.org>, 2015-04-03 11:53:05 -0400,167, merge pull request 167 ivg fix default arm arm default armv7,,
866,05614740e2761101001358a329f9eb384c4c4691,van Gotovchits <ivg@ieee.org>, 2015-04-03 11:52:53 -0400,166, merge pull request 166 ivg fix llvm loader compilation fix new llvm loader compilation issue,,
867,6f578f179392ce427d457915e89bec71c7e4c15d,van Gotovchits <ivg@ieee.org>, 2015-04-03 10:10:37 -0400, , arm default armv7 little bit hack since break tradition one say arm understand like armv7 like ...,,
868,7174b23cbb64c324ffb8d5ee3d032f3688177216,van Gotovchits <ivg@ieee.org>, 2015-04-03 09:44:57 -0400, , fix new llvm loader compilation issue,,
869,e6503dd45921da6dab9ecf58f77f0963885b9b95,van Gotovchits <ivg@ieee.org>, 2015-04-02 16:04:57 -0400,163, merge pull request 163 feseal llvm loader elf macho coff llvm loader,,
870,45f14eac9ebddeed97ff031efa7f6290e648b535,eseal <feseal@yandex.ru>, 2015-04-02 15:52:53 +0300, , elf macho coff binary file loader backend test,,
871,1d31673ad3c27ec869a5d21eb45d2197875461c8,van Gotovchits <ivg@ieee.org>, 2015-04-01 18:56:15 -0400,165, merge pull request 165 ivg add loader option add loader option bap objdump,,
872,129da12b1f0bea3b768498bc1337ee3f5bd02b39,van Gotovchits <ivg@ieee.org>, 2015-04-01 18:49:33 -0400,164, merge pull request 164 ivg refactor bap bap enhancing,,
873,2f5e20395596953cfe424815200bbbb76ee9020e,van Gotovchits <ivg@ieee.org>, 2015-04-01 15:39:36 -0400, , bap enhancing bap support format outputting bil three format printing assembly command line interface refactored,,
874,84a9259c5c176fd877d97aa9676c0d977ffbc3e8,van Gotovchits <ivg@ieee.org>, 2015-04-01 15:58:06 -0400, , add loader option bap objdump needed merge 163,,
875,d055a0887a376ce3de66db4805e0b95fe91778c0,van Gotovchits <ivg@ieee.org>, 2015-04-01 10:19:45 -0400,162, merge pull request 162 ivg bug fix bug fix,,
876,1ced2ccba02adb11cce71465b421a1112c8b1555,van Gotovchits <ivg@ieee.org>, 2015-04-01 09:11:18 -0400, , fix 134 fix algorithm according reference implementation  unsigned int input bit reversed unsigned int reversed bit first get lsb int sizeof char_bit extra shift needed end       shift highest bit zero  movement 133 rewritten  unsigned char 0x0802lu 0x22110lu 0x8020lu 0x88440lu 0x10101lu  work bit though,,
877,e4e1319cb5893681f016a16d5661a8cbc21682a7,van Gotovchits <ivg@ieee.org>, 2015-04-01 09:08:44 -0400, , fix 161 vertex name properly escaped quoted,,
878,e91ad0311625ea72ab3b5d13391f21bab6d60593,van Gotovchits <ivg@ieee.org>, 2015-03-30 17:24:23 -0400,159, merge pull request 159 ivg extend ida integration extended integration ida,,
879,dfce88b1eea376e76fcca01b7db036af56bf5adb,van Gotovchits <ivg@ieee.org>, 2015-03-30 15:56:04 -0400, , extended integration ida add two new command line option hopefully fix issue locating ida added option option allows specify search path bap plugins option specified several time moreover one specify search path using bap_plugin_path environment variable accepts set path separated added emit ida script option dump ida script using new function function allow plugins smoothly talk ida annotating code segment python command fixed location issue entry locatedb considered end specified string,,
880,749fd53819d91b97be55288977fe77e55bb05e78,van Gotovchits <ivg@ieee.org>, 2015-03-30 13:37:02 -0400,158, merge pull request 158 ivg arm gnueabi new optimization fixed arm gnueabi,,
881,53fb404fe0ea44825d9c496168fc9aafeb9f0f4a,van Gotovchits <ivg@ieee.org>, 2015-03-24 16:33:37 -0400, , new optimization fixed arm gnueabi snapshot work progress provide recognition parameter structure local arm program commiting since needed plugins fix arm gnueabi implementation also introduces block.dfs function return sequence block successor predecessor dfs order including block also introduces several new arithmetic optimization well optimization like load store example,,
882,8fb7300f5f6ee054a737bc54a4a4e76a26d1b3be,van Gotovchits <ivg@ieee.org>, 2015-03-26 08:47:16 -0400,139, merge pull request 139 master revived piqi add serialization bap,,
883,4cf3e59217da5854595000938add84e36244622a,van Gotovchits <ivg@ieee.org>, 2015-03-25 15:19:04 -0400,154, merge pull request 154 ivg remove dead visitor removed dead visitor resolve 153,,
884,e380b1610df0d6acfc4b5e3d1eef310423ebe3b5,van Gotovchits <ivg@ieee.org>, 2015-03-25 14:15:01 -0400, , removed dead visitor resolve 153,,
885,4c232ae551d9c43da3afe276578701f449ead502,van Gotovchits <ivg@ieee.org>, 2015-03-25 08:53:01 -0400,151, merge pull request 151 dbrumley err_newline add newline bap objdump error message,,
886,1ffae88c296500cab019378659103c3469ab5107,avid Brumley <dbrumley@cmu.edu>, 2015-03-24 21:20:10 -0400, , add newline bap objdump error message previously error message newline option provided unaesthic offset next command prompt,,
887,5c490ccf5e6e07b73ea0185bcac55df1b503124f,enneth Adam Miller <kennethadammiller@gmail.com>, 2015-03-24 13:40:54 -0400, , revive piqi support,,
888,9ec3fdcc5b7c7cccc9090c84cfd552796728ba2e,van Gotovchits <ivg@ieee.org>, 2015-03-24 11:42:50 -0400,146, merge pull request 146 ivg arm gnueabi introduce arm gnueabi fix,,
889,d6c65b30b7c3770f6413caeab6d74c78d27ec212,van Gotovchits <ivg@ieee.org>, 2015-03-24 10:32:17 -0400, , introduce arm gnueabi fix add preliminary support arm gnueabi currently parameter passed via register recognized return_value set always return type inference needed correct heuristic since may function finish jmp abi interface little bit refined first return_value return option type handle function returning void abi module moved corresponding target create instance abi one call function general one use module target returned target_of_arch function access cross platform abstraction platform specific abstraction still available corresponding module e.g. arm.cpu.r0 refer register also fix bug function create graph block block module case function consisting one block function returned empty graph,,
890,c851acdf1e2e8fef5f7972ae25f5529e639c7795,van Gotovchits <ivg@ieee.org>, 2015-03-23 19:41:47 -0400,141, merge pull request 141 dbrumley add_memmap_iter implement iter iteri fold memmap,,
891,bf11f0e0e267be838ca5bd05d37eca117ed6236e,avid Brumley <dbrumley@cmu.edu>, 2015-03-21 13:20:51 -0400, , add memmap iterators to_sequence container.s0 sig commit add iterators via two mechanism functor core_kernel container.s0 signature give fold count sum well to_sequence similar ,,
892,8f7b59adaf61803f60e72d0e9e8da536e0e9d109,van Gotovchits <ivg@ieee.org>, 2015-03-23 14:40:44 -0400,145, merge pull request 145 ivg propagate bil plugin propagate bil transformation though plugins,,
893,084f8bfd70ecea7f746c05e50b0d6d22ad2d2676,van Gotovchits <ivg@ieee.org>, 2015-03-23 12:23:42 -0400, , propagate bil transformation though plugins provides new field project record function transform instruction list bil program initially transformation includes optimization requested command line plugin rebind optimization one issue qualified call statically bound project open recursion late binding change project affect function next plugin rebound new state project considering switch project type object type,,
894,6f8ecdd7c8702ebc927b9c2cba7da0a29de12fb9,van Gotovchits <ivg@ieee.org>, 2015-03-23 11:00:55 -0400,144, merge pull request 144 ivg switch ida32 switched ida,,
895,ea27d0596f25d630bb37ff98cdfd9cea59421c5c,van Gotovchits <ivg@ieee.org>, 2015-03-23 09:42:15 -0400, , switched ida ida used default notwithstanding platform also fixed issue ida integration,,
896,f3902f9912127277273c151a833b13fb526081c4,van Gotovchits <ivg@ieee.org>, 2015-03-22 14:25:52 -0400,143, merge pull request 143 tim becker make bap server emit full variable name,,
897,0d0105dc112991014fdfba0e68fc95af96f86310,im Becker <tjbecker@cmu.edu>, 2015-03-22 13:14:00 -0400, , make bap server emit full variable name,,
898,802b75695add3f5d695e3d1c3067b7db5bdfcf25,van Gotovchits <ivg@ieee.org>, 2015-03-21 01:10:46 -0400,140, merge pull request 140 ivg introduce abi introduce abi cpu,,
899,d5cab1a5e122719b4a3b1ece2b1bc44f3f93095a,van Gotovchits <ivg@ieee.org>, 2015-03-19 20:09:58 -0400, , introduce abi cpu unifies lifter target common interface named target also disasm library cleaned unified consequence bap server also give back bil x86 family two new main data structure target module cpu defines cpu specific bil expression allowing one figure variable register flag also abstract process resolving address abi one abstract application binary interface including calling convention stack frame data representation maybe given new structure added new optimization bil printer resolve relative address value following ocaml begin sub_ad5c_0x160 mem 0x65c u32 mem mem u32 0x1e 0x0 mem 0x650 u32 mem 0x650 u32 sub_ad5c 0x17c jmp hash_initialize   transformed ocaml begin sub_ad5c_0x160 dev_ino_free mem mem u32 0x1e 0x0 dev_ino_hash dev_ino_compare sub_ad5c 0x17c jmp hash_initialize  ,,
900,e7eeb71f7ce91c27a28ec46162a74c3b1b6afd3d,van Gotovchits <ivg@ieee.org>, 2015-03-18 20:52:33 -0400,137, merge pull request 137 ivg fix mem resolve,,
901,23da8d41f4df57b754a3aa99f7b530e15fa1f11b,van Gotovchits <ivg@ieee.org>, 2015-03-18 17:30:39 -0400, , resolve,,
902,114d727a95430b5f9a1aa72124b44f2c92cb9936,van Gotovchits <ivg@ieee.org>, 2015-03-18 17:19:53 -0400,136, merge pull request 136 ivg extend cfg fix bug extend cfg fix bug,,
903,100f75c6310705e9adc97a3996820e22fa567cc8,van Gotovchits <ivg@ieee.org>, 2015-03-18 15:47:31 -0400, , fixed bug cfg reconstruction bug uncovered recent byte block fix problem finish block root root,,
904,dcb3034d3c8580515b1a2a4a4e218b470d952cc1,van Gotovchits <ivg@ieee.org>, 2015-03-18 15:46:19 -0400, , added support imperative cfg dominator algorithm accepts imperative one published lnf signature,,
905,4a71cd966cd2c94201c7b7f078fd31035d56e3d4,van Gotovchits <ivg@ieee.org>, 2015-03-17 18:29:04 -0400,135, merge pull request 135 ivg lnf refactor lnf,,
906,fd0b7b8c3b75e52be04d4857c6b2c20233872c7a,van Gotovchits <ivg@ieee.org>, 2015-03-17 17:24:41 -0400, , implemented lnf base implementation still sure proper interface currently mostly stub,,
907,42a02220d11fd857c97c1db7c6b8da6bfb110d4b,van Gotovchits <ivg@ieee.org>, 2015-03-17 17:21:31 -0400, , simplified eager cfg representation concrete vertex still abstract existential word,,
908,ef91c57aeb2360172a0e3a0a99666e2c94c8b0f2,van Gotovchits <ivg@ieee.org>, 2015-03-17 09:14:47 -0400, , refactored library created umbrella sub library ease intra development unified block interface one consequence block return list instruction sequence created new sublibrary sema responsible semantic analysis,,
909,14630433bee81275492ca1b9c1fc9552a057ce8e,atthew Maurer <maurer@matthewmaurer.org>, 2015-03-16 13:15:52 -0400,131, merge pull request 131 ivg fix one byte rec fix one byte block issue cfg reconstruction,,
910,f08605771deb9cfaef1ccd1979ee0bc6595758ca,van Gotovchits <ivg@ieee.org>, 2015-03-16 12:18:36 -0400, , fix one byte block issue cfg reconstruction fall one byte instruction like ret example miss since algorithm start look next byte fix issue test case added,,
911,c251b9176e8d019d9f33de8b780d9847e7c615ac,van Gotovchits <ivg@ieee.org>, 2015-03-16 08:44:43 -0400,130, merge pull request 130 revert 126 xmmfix revert add r128 r256 support ymm lifting,,
912,9f2f492117e12447b565de9795fba93a546adcf5,van Gotovchits <ivg@ieee.org>, 2015-03-16 08:43:42 -0400, , revert add r128 r256 support ymm lifting,,
913,e31f4a5e552fd908aeb6242460bce2d9893eb277,van Gotovchits <ivg@ieee.org>, 2015-03-14 08:31:43 -0400,128, merge pull request 128 ivg ocamlgraph interface ocamlgraph,,
914,94236e5a5340526974fec5f9664e9807dbf1ef05,van Gotovchits <ivg@ieee.org>, 2015-03-13 17:26:57 -0400, , interface ocamlgraph brings two new data structure symtab.graph callgraph persistent ocamlgraph graph block.graph control flow graph two new function provided block.to_graph build graph given entry block possible memory boundary symtab.to_graph build callgraph preserving information call place,,
915,96e7952e46b9799003f60aa255206ca8cd985d01,van Gotovchits <ivg@ieee.org>, 2015-03-13 23:56:15 -0400,126, merge pull request 126 percontation xmmfix add r128 r256 support ymm lifting,,
916,c39017cbd6a05036a00e01de171bcfa59e236a00,van Gotovchits <ivg@ieee.org>, 2015-03-13 23:55:28 -0400,129, merge pull request 129 percontation pushf_fix flag register fix,,
917,90df38308cafb0c25222c31a7bc01f13f9aebcac,van Gotovchits <ivg@ieee.org>, 2015-03-13 23:54:45 -0400,127, merge pull request 127 percontation slight change adt repr,,
918,37d476b389e4d5ff010daf9ce356737de9e1cc81,yan Goulden <percontation@gmail.com>, 2015-03-13 18:25:05 -0400, , rflags 65th bit lflags bit,,
919,972e989dbe2e0a98166f0e44b0ad7756dc6044bc,yan Goulden <percontation@gmail.com>, 2015-03-13 00:37:25 -0400, , slight change adt repr recurse tuple args printing look better especially empty tuples show lot clause statement,,
920,b1878de7f3a4d7d6108427a566cb68593c64ba2c,yan Goulden <percontation@gmail.com>, 2015-03-12 13:34:55 -0400, , add r128 r256 support ymm lifting,,
921,b679e2b646aa54fab66c31d7dd8713a949e12265,van Gotovchits <ivg@ieee.org>, 2015-03-12 07:59:56 -0400,125, merge pull request 125 ivg memmap added support arbitrary memory map,,
922,488cfeff9102535bf6a8430b3be453e80004f045,van Gotovchits <ivg@ieee.org>, 2015-03-10 18:11:20 -0400, , added support arbitrary memory map introduce new data type bap memory map memory map associative data structure map memory region arbitrary value unlike table memory map overlapping region well repeating region multimaps underneath hood memmaps augmented balanced avl interval tree memory map used pas information loader loader mark memory region extra information like section name example default elf backend extended mark memory region corresponding section name bap objdump annotates memory region corresponding memory name well section name,,
923,6954ba1e81149de0aa4e2d4e7fb76ab7fb8192e7,van Gotovchits <ivg@ieee.org>, 2015-03-10 22:58:26 -0400,123, merge pull request 123 percontation python_fixes python adt fix,,
924,8e63da4b933ae1b41c4adf0682a1420b0dbb6c84,yan Goulden <percontation@gmail.com>, 2015-03-10 21:58:37 -0400, , python adt fix,,
925,17dd3eb91a4ce82ef02119cbf61bdcf994428316,van Gotovchits <ivg@ieee.org>, 2015-03-10 18:51:21 -0400, , fixed bapbuild compilation issue,,
926,a4c3d048354f3d7ffcf0a99a553389e197de8ec3,van Gotovchits <ivg@ieee.org>, 2015-03-10 08:42:59 -0400,122, merge pull request 122 ivg bapbuild bap.plugins add bap.plugins support bapbuild,,
927,2afb45f5fe9731b1e0a59fce013c9172ccd78c96,van Gotovchits <ivg@ieee.org>, 2015-03-10 08:41:31 -0400, , add bap.plugins support bapbuild bapbuild automatically load bap.plugins library mean call plugins.load anymore although behavior added,,
928,6fb2be9ef1a44c9b1a7b6c965539af38aa406b9a,van Gotovchits <ivg@ieee.org>, 2015-03-09 13:34:13 -0400,121, merge pull request 121 ivg fix bapbuild byteweight fix bapbuild plugin compilation,,
929,0ab47a3ec794304e3a1d6574909a28807da968ee,van Gotovchits <ivg@ieee.org>, 2015-03-09 13:00:51 -0400, , fix bapbuild plugin compilation one build plugin consisting several file previously see link time error moreover fix issue bap byteweight understand version option,,
930,e903787819202a556e98b954305ff764e50f935e,van Gotovchits <ivg@ieee.org>, 2015-03-09 11:29:25 -0400,120, merge pull request 120 ivg micro cfg fix cfg reconstruction micro example,,
931,11addce58c1eecb1a6ae0cff42f6d81a1f3247af,van Gotovchits <ivg@ieee.org>, 2015-03-09 09:46:41 -0400, , fix cfg reconstruction micro example fix issue small input e.g. xc3 disassemble function return block also fix related potential bug like passing memory region containing move return basic block,,
932,5b3e8446250a4e2a20ca1ae583e713fd1dbdc84c,van Gotovchits <ivg@ieee.org>, 2015-03-05 17:41:02 -0500,119, merge pull request 119 ivg fix rec fall fix several issue cfg reconstruction,,
933,8cad79e1d9757b096327aa0bd2d3c8f0fbd0d142,van Gotovchits <ivg@ieee.org>, 2015-03-05 14:48:44 -0500,4, fix several issue cfg reconstruction several real one potential bug bug real  fallthrough added automatically reach end block without destination next address start another block added end block implicit i.e previously recognized end bug real  block terminates without destination added set terminator thus recognized block end second stage reconstruction bug real  instruction c.f. 117 recognized correctly lifter still pretty understandable backend e.g. is_return evaluates true get rid excessive fall throughs added explicit check bug potential  possible list destination extracted instruction contains explicit fallthrough currently impossible recognized jump case someone change behavior dests_of_bil dests_of_basic made check explicit,,
934,1cd6a2faad9615be8e042d0467c288f441b03dcd,van Gotovchits <ivg@ieee.org>, 2015-03-05 14:42:13 -0500,118, merge pull request 118 ivg sync opam synced opam file repository version,,
935,428dd10014c8fe2748138bf82cdd3ded6395f8b0,van Gotovchits <ivg@ieee.org>, 2015-03-05 14:26:43 -0500, , synced opam file repository version difference version set master distinguish bap installed repository pinned one,,
936,61fecb893bfd24472269bfc4f6f304f0dc495692,van Gotovchits <ivg@ieee.org>, 2015-03-04 16:51:29 -0500, , update _oasis bumped version,,
937,b0557738cb84a006cdbc1d41587cff9842997c08,van Gotovchits <ivg@ieee.org>, 2015-03-04 16:48:18 -0500,116, merge pull request 116 ivg v0.9.5 v0.9.5,,
938,c9036260717bcc936d527a4745786e79f49b31c2,van Gotovchits <ivg@ieee.org>, 2015-03-02 11:14:01 -0500,114, v0.9.5 new plugin system mostly bug fixing release see changelog detail plugin system  plugin system packed separate library named bap_plugins part bap library need add open bap_plugins.std going use internal plugins statically linked shipped executables started previous release went wrong new pluggable extension point added program_visitor plugin applied value type project contains state decompiled binary plugin even change state bapbuild utility handle new target .plugin file named mycoolprog.ml create plugin bapbuild load resulting plugin bap objdump bap objdump bin lmycoolprog function registered applied value project type see program_visitor module changelog  removed tag warning ocamlbuild fixed 114 moved bap_plugins bap library plugin library load arbitrary file bap objdump pluggable added new extension point plugin system updated bap license baptop qpled ida work headless mode enhanced symbol resolution algorithm cleaned image backend interface constraint opam file,,
939,0a8f806f8082e882d5e655f3c2ee7f33ea7367f2,van Gotovchits <ivg@ieee.org>, 2015-03-01 22:14:00 -0500,113, merge pull request 113 ivg houskeeping housekeeping,,
940,54101baf75074d8490d0a7ba23e115a62fc5cec9,van Gotovchits <ivg@ieee.org>, 2015-03-01 20:07:39 -0500, , housekeeping fix issue bap infrastructure added checking bit installed tool  unfortunately fileutil.cp preserve permission sure easy cross platform way tricked ocamlbuild ignore unused tag  work across different compiler version added constraint opam  really compile without without aspucd solver give old version,,
941,8e8ca57b2d0a1ba43593533e6e63b49f9974a95c,van Gotovchits <ivg@ieee.org>, 2015-02-28 18:39:33 -0500,112, merge pull request 112 ivg fix baphelpers installation fix bapbuild baptop installation,,
942,2b4adbc0323ece63710815107e381057510d6a2a,van Gotovchits <ivg@ieee.org>, 2015-02-28 09:33:44 -0500, , fix bapbuild baptop installation,,
943,3e55684b263b0327c5ef20376cb129b36094e0c4,van Gotovchits <ivg@ieee.org>, 2015-02-27 22:44:59 -0500,111, merge pull request 111 ivg disable internal plugins disables dynamic autoloading internal plugins,,
944,63166a06cf0b6b452ad64a60a2918d8728e4670c,van Gotovchits <ivg@ieee.org>, 2015-02-27 21:48:51 -0500, , disables dynamic autoloading internal plugins since already loaded linked statically dynlinked anymore nothing break funny message seen standard error,,
945,3992607804b49a69a97ef70a36da23342b48438e,van Gotovchits <ivg@ieee.org>, 2015-02-27 18:54:44 -0500,110, merge pull request 110 ivg v0.9.4 bumped version oasis,,
946,92ecbae7a6efc28b33f992705258d6e099df68af,van Gotovchits <ivg@ieee.org>, 2015-02-27 17:50:52 -0500, , bumped version oasis,,
947,eb68cadb10d79c038b00af096fc87e561cba771a,van Gotovchits <ivg@ieee.org>, 2015-02-27 17:38:12 -0500,109, merge pull request 109 ivg unrestricting constraint removed constraint,,
948,2a41a355719ffd875a3d662848abff70d2c08cc5,van Gotovchits <ivg@ieee.org>, 2015-02-27 16:11:11 -0500, , removed constraint also added lost dependency,,
949,746b0f7db5c4bc5cffe5e266640d866d2032d86b,van Gotovchits <ivg@ieee.org>, 2015-02-27 16:01:32 -0500,108, merge pull request 108 ivg standalone bap make bap utility standalone executables,,
950,5f30b5f1ceab3775f11599c4f916a5116cb4b9df,van Gotovchits <ivg@ieee.org>, 2015-02-27 15:21:00 -0500, , make bap utility standalone executables resolve qira partially fix since loading plugins still work box one defines ocamlpath variable,,
951,8cb81f98eb0a073104d9608451cbb777fecba17f,van Gotovchits <ivg@ieee.org>, 2015-02-27 14:48:16 -0500,107, merge pull request 107 ivg install man page install man page optimize configuration process,,
952,0f508f1446213077eaf6cbf3c7cd0b3045c46bfd,van Gotovchits <ivg@ieee.org>, 2015-02-27 12:33:05 -0500, , install man page optimize configuration process add automatic installation man page bap utility also remove excess postconfig.ml script favor oasis filesab option,,
953,36d461ce936a4d12eac3acc9472705bbcfceb71f,van Gotovchits <ivg@ieee.org>, 2015-02-27 08:36:10 -0500,106, merge pull request 106 feseal x86 lifter x86 bap lifter brings new 1st tier platform x86 x86_64,,
954,d7639836fb24ceafe512de8b81b53580d734256c,eseal <feseal@mail.ru>, 2015-01-20 09:50:39 +0300, , x86 bap lifter,,
955,07a4a685c8916303c8ed7fd0a5b3a1c8bebba198,van Gotovchits <ivg@ieee.org>, 2015-02-26 21:31:52 -0500,105, merge pull request 105 ivg prepare x86 preparation x86 integration,,
956,8af72adefa76132f126ce5af8c4387a364321dd4,van Gotovchits <ivg@ieee.org>, 2015-02-26 16:13:31 -0500, , preparation x86 integration contains fix allow pas test x86 x86_64 lifter includes ability retrieve signature x86 uploaded github reason github allow release file extension renames sigs.db sigs.zip also small fix like hardcoded bit address width readbin,,
957,9e23d0b01fe6336e2f9fd85368ac01c96a12dd34,van Gotovchits <ivg@ieee.org>, 2015-02-26 18:01:18 -0500,103, merge pull request 103 ivg ida mac add ida support mac,,
958,f401628b1f2afff2bb94d0eb5ba83b3e8e4f552c,van Gotovchits <ivg@ieee.org>, 2015-02-26 16:49:34 -0500, , add ida support mac fixed issue actually mac specific also added demangling ida symbol,,
959,4a33edd99e48c61bbb6c957e5b229860ee3c0052,van Gotovchits <ivg@ieee.org>, 2015-02-26 15:32:46 -0500,102, merge pull request 102 ivg intrac cfg symbol reconstruction,,
960,27a74d0cb1f93efb2e998016359cc0640fc1ad67,van Gotovchits <ivg@ieee.org>, 2015-02-23 12:07:19 -0500, , symbol reconstruction introduction  introduces algorithm symbol reconstruction also contains lot bug fix optimiziations integration ida symbol reconstruction  algorithm slice reconstructed super graph symbol i.e. find symbol boundary symbol set block reachable entry block without call instruction algorithm available library symtab module used bap objdump utility default ida integration  bap objdump utility ida option option call ida extract name symbol managed find binary mostly useful inlined symbol since ida flirt signature find inside binary also resolve plt call good stuff finding main function say ida necessary bap used name resolution without ida result without fancy name symbol optimization  bap quite fast handle even big static file thousand function megabyte data second,,
961,47a0c668bf356a06f6dbc7b0f5fee7f35d9d2ee5,van Gotovchits <ivg@ieee.org>, 2015-02-23 12:07:19 -0500,99, merge pull request ivg byteweight new byteweight implementation,,
962,626f96bf26d992b4336469bcd3b3712d81c2587a,van Gotovchits <ivg@ieee.org>, 2015-02-17 15:18:11 -0500, , new byteweight implementation implementation feature new trie data structure shipped several predefined try word bil memory insn expert.insn data structure normalized try instruction also provided i.e. comparison ignoring concrete constant given new implementation trie byteweight 1000 time faster time several time efficient disk space 150 byteweight also shipped utility toolkit bap byteweight application provides facility train test fetch install signature,,
963,962c7e03b7aa18c6f2427f5bdf1b8768efa0dab2,van Gotovchits <ivg@ieee.org>, 2015-02-17 16:14:07 -0500,98, merge pull request ddcc master two fix bap objdump add objdump verbose flag fix empty symbol table make disasm.error include printable,,
964,851354bda81e804be433a3adb6bcb0933fb22ffa,ominic Chen <d.c.ddcc@gmail.com>, 2015-02-17 17:58:14 +0000, , add objdump verbose flag fix empty symbol table make disasm.error include printable,,
965,d27a964fcc65027fee9d7fdc53bf51c8dcda064d,van Gotovchits <ivg@ieee.org>, 2015-02-14 00:50:00 -0500,93, merge pull request ddcc master bap objdump fix syms parsing bug last commit autogenerate dummy symbol memory necessary,,
966,8b663e4814d16418cd9f706882ea6687e742b5a7,ominic Chen <d.c.ddcc@gmail.com>, 2015-02-13 21:10:02 +0000, , bap objdump fix bug last commit passing binary cause syms parsed bap objdump generate dummy symbol memory none present bap_fileutils add missing eof newline,,
967,87bf3c742f379c1af03734eadf47905932167719,van Gotovchits <ivg@ieee.org>, 2015-02-13 15:42:50 -0500,92, merge pull request ddcc master add argument objdump reading raw binary code refactoring typo fix,,
968,12fd4b5517a0e2dce3765c86331c77f13e5cba7f,ominic Chen <d.c.ddcc@gmail.com>, 2015-02-12 20:12:35 +0000, , bap objdump add argument reading raw binary code bap fileutils refactor file utility code bap_memory bap_image bap memory add of_file constructor function,,
969,df8bc62fa3d9b8a99e9900c23ef67189b60cf081,van Gotovchits <ivg@ieee.org>, 2015-02-13 08:42:22 -0500,91, merge pull request tim becker fix issue lifter register offset accounted,,
970,165cb359ae578379baf5047464a60a2eee4d1218,im Becker <tjbecker@cmu.edu>, 2015-02-13 01:09:20 -0500, , offset register load,,
971,c85021f9cdb7e90052a8fd4234745561a764c4a5,van Gotovchits <ivg@ieee.org>, 2015-02-12 19:15:12 -0500,88, merge pull request ivg v0.9.3 v0.9.3,,
972,3664146074fdf3f29dfd177c20d9a5bb65a09985,van Gotovchits <ivg@ieee.org>, 2015-02-10 18:59:28 -0500, , v0.9.3 introduction  release based feedback user including main goal release increase usability bap major change  bitvector aka word aka addr provides integer interface without monad right toplevel module word write word bitvector.int renamed clobber real int module bil consolidated one module named bil module contains everything including constructor statement expression cast binary unary operation also includes functional constructor written hand thus suffer syntactic clash keywords also plenty function new operator available new bap_helpers module see later old module like expr stmt etc still available implement regular interface corresponding type new feature visitor class traverse transform ast writing pattern matching code every time need traverse map bil ast error prone time consuming visitor traversing allowing override default behavior handy algorithm use visitor provided internal bap_helpers module included resulting bil module several optimization added bap objdump utility like constant propogation inlining pruning unused variable resolving address symbol insn interface provides predicate query insn class predicate use bil available disam interface provides linear_sweep function minor change  bug fix important fixing bitsub renamed extract output word greater size also handle signed extraction correctly drastic function check error,,
973,e06ec57686513680beeadf78e459436895a0d716,van Gotovchits <ivg@ieee.org>, 2015-02-11 10:44:35 -0500,82, merge pull request tim becker lifter_bugfix fix checked file fix 500 issue correct since jump case always performed using value loaded offset assigned previously code provided rearrange assignment assignment good reason believe work case,,
974,458ec1ee0f46d6e5358aa72f33771081828e3b29,im Becker <tjbecker@cmu.edu>, 2015-02-10 19:01:15 -0500,82, fix,,
975,fab2406582332b6fb8b5444f828385216b9d6c6b,van Gotovchits <ivg@ieee.org>, 2015-02-09 06:10:01 -0500,80, merge pull request maverickwoo fix preindex thing orig_offset,,
976,091189bc1a1762670c400e8e67467180c9f1b094,averick Woo <maverick@cs.cmu.edu>, 2015-02-05 20:57:24 -0500, , thing orig_offset,,
977,86f65925beb893de0c2dbba58012e787b1e84399,van Gotovchits <ivg@ieee.org>, 2015-02-05 17:43:00 -0500,78, merge pull request ivg cfg added cfg recovery also fix resolve,,
978,c5666dadbc985be72fddca7216cb27d90e955100,van Gotovchits <ivg@ieee.org>, 2015-01-21 11:58:40 -0500, , major update brings recursive descent disassembler high level simple use interface bap new utility bap objdump enhanced pretty printing lot small fix new handy function,,
979,ad1eb77505d869dbe0ce80b68cca88669a358c10,van Gotovchits <ivg@ieee.org>, 2015-01-19 12:13:45 -0500,74, merge pull request ivg python client session serialize http request one pool,,
980,3c9a3b64c2752f64ce69aac42174464edc6c67ca,van Gotovchits <ivg@ieee.org>, 2015-01-19 11:15:12 -0500, , serialize http request one pool patch solve problem qira outruns amount free tcp port system proposed solution use single pool connection upper bounded number amount free port typical linux system 28k box,,
981,40d730e8a6f64ec55076925654b76929f29e874b,van Gotovchits <ivg@ieee.org>, 2015-01-17 23:57:03 -0500,73, merge pull request ivg pip bap pip package,,
982,88f0e540eec3b0bbb85fc486ae1ed9030bea79f7,van Gotovchits <ivg@ieee.org>, 2015-01-17 22:59:44 -0500, , bap pip package moving setup.py allow one install python binding directly github also readme.md file updated removed unecessary detail moving wiki added information install everything using pip opam,,
983,2f0c115f092616a72395d19d8878346ea2190cee,van Gotovchits <ivg@ieee.org>, 2015-01-17 16:41:54 -0500,72, merge pull request ivg opam preliminary support opam also fix compilation issue ocaml 4.01 mac,,
984,dc187a8643f1e9d84f8922a13eedddd46ee29c0c,van Gotovchits <ivg@ieee.org>, 2015-01-17 13:23:00 -0500, , preliminary support opam also noticed sed trick configure script crossplatfrom even work mac removed commented tagging instruction myocamlbuild consequence warning ocaml 4.02,,
985,70b1208c5739678cf57ef69cd97095e881118106,van Gotovchits <ivg@ieee.org>, 2015-01-16 14:43:29 -0500,71, merge pull request ivg integration qira bap qira ready,,
986,9ac1b6524d29fe3bcaa203ef86bd37bd6cde3b10,van Gotovchits <ivg@ieee.org>, 2015-01-13 13:56:20 -0500,47, result integration qira bring following bap support different architecture also arch module infer address size endianness specified architecture bap server require address size endian arch required everything else inferred address public api longer adt string encoded number value specified strictly hex bil adt class extended added helper also add named property bil entity updated readme.md simplified installation resolve packaged server little accurately although still pluginized see hardened bap.py multithreaded environment bap try autospawn one server per process multiple bap proxy created per thread bap accepts user input byte separated space comma semicolon byte left without separator bap error case error resolve others 10. bap properly handle invalid instruction previously bug result error handler applied prematurely also extended error handler pretty printer output dump highlighting failed piece code 11. readbin linear sweep executable section symbol information 12. bap server ordered disassemble whole image disassemble executable part file think reasonable behavior rather previously disassemble whole file including data section,,
987,5c88397bb5d55171226e5b0ec8da251246aa7159,van Gotovchits <ivg@ieee.org>, 2015-01-13 13:51:28 -0500,4, merge pull request ivg public api bap public api resolve,,
988,ab190ebb4b1658fc78eace0926e37714e605058a,van Gotovchits <ivg@ieee.org>, 2014-12-08 18:07:10 -0500, , bap public api  abstract  patch add json public api bap also introduces bug fix extension example api usage small python binding provided infrastructure change  since bap dependency optional opam need guidance otherwise find proper solution patch add guidance properly specifying package version also patch fix warning issued build system newer compiler version core lwt library  patch introduces core lwt library thin wrapper around lwt library provide concise core like interface going remove library bap sooner later push opam separate entity consistent constructor name  order satisfy requirement adt data format consistency purpose title cased constructor name breaking change debugging support  many extended support sexp_of sexp protocol also regular type got plethora new primitive used different format specifier change bitvector  function of_int32 of_int64 accepts optional width parameter also new string_of_value function added convert string vector value dropping information size change image  switched bap size type instead core python binding  introduces python binding bap binding allows one disassemble arbitrary string load analyze binary file library packed distutils mean order use pip install binding rather deep mean instead textly typed dictionary get first class python value appropriate type known arm operand register instruction lifted python class see documentation info public api  bap called language using json api api implemented new program called bap server server also take care storage persistence problem i.e. store date currently following set protocol implemented http mmap file zmq set allows use following physical medium interaction tcp udp socket unix socket regular file shared memory,,
989,76c7cf2b25593538bdee21106b0105715944a7a8,van Gotovchits <ivg@ieee.org>, 2014-12-23 18:38:33 -0500,58, merge pull request ivg add may_save_load added support may_store may_load kind,,
990,d9ae59008653272ed8450b8fa8f54718356d4316,van Gotovchits <ivg@ieee.org>, 2014-12-23 18:01:43 -0500, , added support may_store may_load kind,,
991,5300865f05fd8a3532b68e29a2bc7c735af17c0d,van Gotovchits <ivg@ieee.org>, 2014-12-23 17:53:31 -0500,44, merge pull request ivg fix insn_of_mem fixed function fixed,,
992,9821b7d27303d4a16bbb3aff45df75259d81dd8b,van Gotovchits <ivg@ieee.org>, 2014-12-23 17:01:37 -0500, , fixed function covered issue test suite,,
993,fc2a5638a066010bc28ffe02bb4171f875af9b16,van Gotovchits <ivg@ieee.org>, 2014-12-23 16:02:33 -0500,55, merge pull request ivg add x86 test suite added x86 test suite closing,,
994,a69e6bf916bb0abc7c5133a144b3a65bed1d5b01,van Gotovchits <ivg@ieee.org>, 2014-12-22 12:51:18 -0500, , added x86 test suite x86 test suite revealed new bug bap_dwarf fixed  also split test speed compilation,,
995,a68aa19399b4159353084b711e783f0d3cd19993,van Gotovchits <ivg@ieee.org>, 2014-12-22 12:44:46 -0500,53, merge pull request ivg fix dwarf parser fixed dwarf parser overflow issue,,
996,ca98b6ae4afd0f091feb2ce3821b51402a1ed8b7,van Gotovchits <ivg@ieee.org>, 2014-12-22 11:54:20 -0500, , fixed dwarf parser overflow issue,,
997,9c0a020eb81cc0929a74e3885199e48426942ace,van Gotovchits <ivg@ieee.org>, 2014-12-22 09:20:37 -0500,10, merge pull request ivg fixing build issue fix minor build issue resolve issue reported via issue tracker also may find note http github.com bap wiki build tip trick useful,,
998,ce9ebeda275dff8d5214f5fc58692047ed37f8fe,van Gotovchits <ivg@ieee.org>, 2014-12-21 18:47:58 -0500, , fix minor build issue configure script explicitly check llvm found give sane error message otherwise since ship makefile configure file assume user read documentation run make configure script auto magically figure happening run oasis needed actually true way call make since prevent user accidentally ignoring error configure script everybody report warning oasis error really frustrating many even stop seeing warning reduce amount warning first oasis called inside configure script quiet option next proper environment variable set ocamlfind eschew emit extra warning many system default name llvm config llvm config provide file explicit version number unlike ubuntu doe address issue using default llvm config linux llvm config 3.4 macosx adding explicit version requirement command line argument llvm version ver append ver filename,,
999,d80f3cd4397907ff2c639603e63dfbfef78d4bd0,van Gotovchits <ivg@ieee.org>, 2014-12-21 22:27:06 -0500,50, merge pull request maverickwoo memory size introduce memory.size resolve,,
1000,5d37f739e2621cc81ab29911fcae24640dfdaec4,van Gotovchits <ivg@ieee.org>, 2014-12-21 22:22:02 -0500, , removed extra cell build matrix look like ocaml 4.02 work opam 1.1.0,,
1001,48988fd5898695be91eb55cccd95966690339d7f,averick Woo <maverick@cs.cmu.edu>, 2014-12-21 18:58:31 -0500, , introduce memory.size,,
1002,8c8b68e76382fd6c16d622cc33c03db8f8ff1f7a,van Gotovchits <ivg@ieee.org>, 2014-12-13 22:21:05 -0500,42, merge pull request rvantonder bap add bap,,
1003,1fb4245f7c39443d30ca23a0dfe6458d910e4a7b,ijnard van Tonder <rvantonder@gmail.com>, 2014-12-12 22:13:12 -0500, , add bap,,
1004,d2de199b301e4aa47b7038503d11f2448d548f41,van Gotovchits <ivg@ieee.org>, 2014-12-08 18:06:02 -0500,32, merge pull request ivg arm lifter review arm lifting,,
1005,4df5a259b7a6f5988a3fe4c02886325e87d16d87,van Gotovchits <ivg@ieee.org>, 2014-12-07 19:00:47 -0500,38, merge pull request dbrumley issue31 updated version number 0.9,,
1006,51b1622567ea1be11499ee85d855bf8c62cc3545,van Gotovchits <ivg@ieee.org>, 2014-12-07 19:00:31 -0500,39, merge pull request dbrumley issue36 changed output immediates decimal hex,,
1007,e8755ff9886e10a43b0a8fa8a629cec3507ae83a,avid Brumley <dbrumley@cmu.edu>, 2014-12-07 17:09:40 -0500,31, updated version number 0.9 last release bap previous move github 0.8 current release 0.9. move 1.0 alpha feature complete 0.8 disassembler lifting x86 arm cfg generation smt binding python binding see issue history discussion,,
1008,f81ede1f6ec52c62a587da23aea1a6693467d0e0,avid Brumley <dbrumley@cmu.edu>, 2014-12-07 07:06:00 -0500, , changed output immediates decimal hex change affect default printer llvm code well bap llvm operand printing code,,
1009,12285ab3ba7bdab35112f585d8c7886393c2e63a,van Gotovchits <ivg@ieee.org>, 2014-12-05 14:10:51 -0500, , arm lifting add arm lifter aka arm disassembler original disassembler refactored separate module clearly defined interface later address code code rewritten new bap_types.std reference removed bit logic performed bitvectors polymorphic variant used represent instruction opcodes allows perform matching instruction class thanks lifter split several function data type like register instruction written manually supported set value represented thousand instruction lifter quite fast per instruction although made optimization plenty opportunity  concering correctness coreutils unknown instruction lifting failure one place wrong argument type offset operand issue created soon also slightly fixed bil typesystem since last edition strict allow many valid bil program,,
1010,453d6d8268925bbb1a5b249b934546a62283a71e,van Gotovchits <ivg@ieee.org>, 2014-12-02 19:45:26 -0500,30, merge pull request maverickwoo quickfix fix test condition minor edit readme.md,,
1011,b430d44da04efa119294b1b9fe8e5e1e05be242c,averick Woo <maverick@cs.cmu.edu>, 2014-12-02 18:49:33 -0500, , fix test condition minor edit readme.md,,
1012,3a84ae9fff427a23734ed28e1ee27099599c4f02,van Gotovchits <ivg@ieee.org>, 2014-12-02 12:51:11 -0500,25, merge pull request rvantonder add test bap table intersection fix bap table test,,
1013,633637ba81630503ac1ae7bdf5a282425562ac50,ijnard van Tonder <rvantonder@gmail.com>, 2014-12-01 22:57:38 -0500, , add bap_table test suite bug fix,,
1014,5654561cc840042f206e4aa78ddd4b709fe5c018,van Gotovchits <ivg@ieee.org>, 2014-12-02 08:19:30 -0500,29, merge pull request ivg disassemblers review pluggable disassembler interface,,
1015,2bfb2f40bbde271d2219cd8fe7900516ca77017d,van Gotovchits <ivg@ieee.org>, 2014-12-01 09:16:45 -0500, , optimized readbin run incremental mode significantly faster,,
1016,e72a8fceb80c39f3522aa19d61b3108136b30ef6,van Gotovchits <ivg@ieee.org>, 2014-11-19 10:02:14 -0500, , pluggable disassembler interface introduces new ocaml interface disassembling facility developed assumption disassemblers implemented adding new disassembler bap actually result writing new code thin interface described disasm.h used ocaml call disassemblers interface implemented modern delegate actual work backend backend implement interface bap described disasm.hpp file one implementation provided llvm 3.4 library perform disassembly backends welcome top primitive interface disasm.h bound bap_disasm_prim module basic ocaml disassembler implemented see module disasm.basic implemented bap_disasm file target agnostic disassembler provides run function perform arbitrary recursive parsing i.e. folding binary data module developed mainly performance consideration mind may look little bit weird proof concept readbin enhanced disassemble found symbol linear sweep section check robustness also test suite enhanced readbin applied binary coreutils arm also build system enhanced able compile file linux mac search library etc,,
1017,8c386a095c2dad52e2311e386f1226005595a580,van Gotovchits <ivg@ieee.org>, 2014-11-26 14:30:44 -0500,23, merge pull request tiffanyb table review add byteweight _oasis fix,,
1018,3abbf78ea12076d17884d41a66fae2db9c3af194,iffany Bao <tiffanybao@cmu.edu>, 2014-11-26 12:23:33 -0500, , add byteweight _oasis,,
1019,24d9768ba0bd05a690c60400b239d498adad449a,van Gotovchits <ivg@ieee.org>, 2014-11-26 09:22:40 -0500,22, merge pull request tiffanyb table review merged create,,
1020,3b820b72d860d1c1fe7a6a8afc211ebe883bbb59,iffany Bao <tiffanybao@cmu.edu>, 2014-11-17 01:55:22 -0500, , add byteweight,,
1021,c2d406774d304ffa91cb981410688ef996e0b06f,van Gotovchits <ivg@ieee.org>, 2014-11-23 23:31:45 -0500,19, merge pull request ivg readbin error output fixed issue silent death,,
1022,f43eeb37b1a6c7722ba4375141a513f6b3fa4b0f,van Gotovchits <ivg@ieee.org>, 2014-11-23 23:29:14 -0500, , fixed issue silent death format open module open outputed data formatter flushed,,
1023,736bd27b2224c2e31e37a58aa52c8735ebef6416,van Gotovchits <ivg@ieee.org>, 2014-11-23 17:36:01 -0500,17, merge pull request tiffanyb fix issue,,
1024,7faeab78f4ba2085dd96fbceedb16a3ffd9a085e,iffany Bao <tiffanybao@cmu.edu>, 2014-11-23 16:39:53 -0500, , change elf header offset bound checking variable elf_header_size fact maximum elf header size,,
1025,5a3daa99dfe81f30008f8525977678a06ea2c563,van Gotovchits <ivg@ieee.org>, 2014-11-20 21:19:31 -0500,16, merge pull request rvantonder master always generate .cmt file,,
1026,d0ef62e8db9259804116287ab2674e6214a4f49e,ijnard van Tonder <rvantonder@gmail.com>, 2014-11-20 18:05:43 -0500, , always generate .cmt file latest oasis automagically add line generated _tags file older version potentially,,
1027,71d066f213e50591fb194a8e89b524193c320e6b,van Gotovchits <ivg@ieee.org>, 2014-11-19 18:31:29 -0500,15, merge pull request maverickwoo master housekeeping,,
1028,c1d1a63f4be3666bfcbff23f4930ebf685839326,averick Woo <maverick@cs.cmu.edu>, 2014-11-19 18:01:37 -0500, , housekeeping clean dot file small edits readme.md ocp indent,,
1029,63a81178e231e9bf283f8d06038266e4723cabe1,van Gotovchits <ivg@ieee.org>, 2014-11-17 14:55:09 -0500,14, merge pull request ivg lightweight memory model implemented lightweight memory model,,
1030,bd505218bd0a9b1275e67c1fcbf0e830d79d6275,van Gotovchits <ivg@ieee.org>, 2014-11-10 15:36:43 -0500, , implemented lightweight memory model model memory light pair pointer memory mapped file check also introduces table facility map memory arbitrary value create inter table link highlight reimplemented elf parser close still bitstring string load header table factored memory image memory lightweight represented two pointer memory mapped file added table module allows perform arbitrary memory mapping like mapping memory machine code symbol etc reimplemented image module new memory table module result new abstraction got significant speedup readbin par executable time faster also commit extends plugin system plugin system support three target native code bytecode toploop surprised discover different loading facility plugins automatically loaded bap.top library loaded mean plugins.load called catch lost file test baptop load correctly execute supplied example also example subfolder,,
1031,6a223115363902061246e4cca8fc316100d8ba23,van Gotovchits <ivg@ieee.org>, 2014-11-11 21:48:09 -0500, , update readme.md fixed old reference bap_types,,
1032,97f10746f1cc0cef85aa8af189cafbea9cf922bb,avid Brumley <dbrumley@cmu.edu>, 2014-11-10 10:52:07 -0500, , make readme documentation clearer,,
1033,2825db49712d8a023ec8f26fdfef786204a7e04b,van Gotovchits <ivg@ieee.org>, 2014-11-10 09:38:10 -0500,6, merge pull request ivg piqi setup robustness made setup.ml invocation robust,,
1034,016aea3a34dcf8efea0589784bbfcacce52d3e67,van Gotovchits <ivg@cmu-905967.wv.cc.cmu.edu>, 2014-11-10 09:11:24 -0500, , previous solution clever ... indeed def_piqic crude hack would like remove since really need piqi,,
1035,728d61ffb1c99a5a0b33f4be7fbf800a226b1200,van Gotovchits <ivg@cmu-905967.wv.cc.cmu.edu>, 2014-11-10 08:33:59 -0500, , made setup.ml invocation robust also updated dependency list made note actual source date dependency,,
1036,f693fbd3ab0597fb78e92d4eba3b07afd4ca4d75,van Gotovchits <ivg@ieee.org>, 2014-11-05 16:04:14 -0500,3, merge pull request ivg renaming bap finished renaming bap_core bap,,
1037,f9058b27e88b35e32071d38099e644e975b8c79f,van Gotovchits <ivg@ieee.org>, 2014-11-04 18:31:53 -0500, , finished renaming bap_core bap,,
1038,c8228268294a5fa566ad2fa0558bd0b7728a7c6b,van Gotovchits <ivg@ieee.org>, 2014-11-04 17:17:49 -0500,2, merge pull request ivg container review container review,,
1039,1e8b71f1eab692ceef9108cbc42c329b5d2f41c6,van Gotovchits <ivg@ieee.org>, 2014-11-03 15:45:14 -0500, , merge remote tracking branch ref remote upstream master container review conflict .travis ci.sh readme.md _oasis lib bap_core bap_core.ml lib bap_types .merlin lib bap_types lib_test bap_core run_tests.ml lib_test bap_types lib_test bap_types  setup.ml.in,,
1040,53666533ab4cb15b78b2b8fdc130e6bd0c9c9fde,van Gotovchits <ivg@ieee.org>, 2014-10-30 08:34:23 -0400, , library ready merge upstream,,
1041,cf60113c19cbaae83725cc65116945ad5e15bfb3,van Gotovchits <ivg@ieee.org>, 2014-10-31 17:10:14 -0400, , really fixed link travis,,
1042,ed7f64ad038fbb4ef958d3ab2d56b2dab384ee86,van Gotovchits <ivg@ieee.org>, 2014-10-31 17:09:09 -0400, , fixed link travis,,
1043,77f3b3da1cbac53e54357ffc5cbf7381f19e88c0,van Gotovchits <ivg@ieee.org>, 2014-10-31 15:29:46 -0400, , added travis icon,,
1044,d2250ecaadff57afa698989cea15f31d3f3cd3fa,van Gotovchits <ivg@ieee.org>, 2014-10-31 15:11:02 -0400, , fixed setup.ml.in,,
1045,16c4d9b2959ec746f2b05c12279ea597da440ba8,van Gotovchits <ivg@ieee.org>, 2014-10-31 14:14:27 -0400, , added travis,,
1046,5ee95f37b14e15f1139722dc5ddb2d9753c2f21d,van Gotovchits <ivg@ieee.org>, 2014-10-31 13:24:54 -0400,1, merge pull request ivg adding bap type merged bap_types bap_core,,
1047,bd73b0ecc485a81790347c13dd3fa7a8b411c2ce,van Gotovchits <ivg@ieee.org>, 2014-10-31 13:12:28 -0400, , moved stuff .in file addressed issue,,
1048,c7608d3dd2b349a2a16032b38ea8319f83cd0837,van Gotovchits <ivg@ieee.org>, 2014-10-30 08:34:02 -0400, , pulled bap_types,,
1049,46c728805013b78f338d19a3dedeac7792cd2c14,van Gotovchits <ivg@ieee.org>, 2014-10-30 08:34:02 -0400, , pulled bap_types,,
1050,df0860bdc2cabbe97e624630c3e1f7f3058c1de0,van Gotovchits <ivg@ieee.org>, 2014-10-30 07:59:43 -0400, ,,,
