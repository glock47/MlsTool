id,sha,author,date,issue,message,file,content
0,7367ae25d723f1b88e32453ea4d15008f7276fbb,ilian Wolff <mail@milianw.de>, 2021-06-29 20:55:00 +0200, , also parse output alias according help output keep output file form backwards compat bug 439307,,
1,66a7ba44cb18c1965298a4db60946c4636d99de5,ilian Wolff <milian.wolff@kdab.com>, 2021-06-01 16:47:44 +0200, , warn detecting dlopen rtld_deepbind disable use dlopen rtld_deepbind would lead able intercept call memory allocation function detect output warning disable flag allow intercept function desired application rely mechanism need pas use inject seems work correctly even rtld_deepbind work patch sponsored thanks,,
2,7d699b3f673626c297c5dde0ffdd4826e4c2fe17,ilian Wolff <milian.wolff@kdab.com>, 2021-06-01 13:02:01 +0200, , fix recursion guard heaptrack_print printing backtraces previous implementation mixed index trace index leading incorrect recursion detection situation check trace index need guard  work patch sponsored thanks,,
3,5efa4745e5754dd2f58cef5f6b35d76d0cd8a610,ilian Wolff <milian.wolff@kdab.com>, 2021-05-31 17:28:34 +0200, , write byte value fraction i.e write 48b instead 48.00b fractional byte work patch sponsored thanks,,
4,850bef4b4ff83c0907fe195b8177c68ff20f5fd5,ilian Wolff <mail@milianw.de>, 2021-05-31 14:05:33 +0200, , use command instead type fix compatibility dash shell,,
5,48d31167d1b7ce3be29dc208b3849b84512df009,obias Zagorni <tobias@zagorni.eu>, 2021-05-27 11:30:23 +0200, , skip additional item stack trace debug mode get following unwanted item beginning every trace trace unwind void trace fill int  malloc discarded,,
6,375042c33d37ae8d618ef746b44fadd1ba04ddbd,obias Zagorni <tobias@zagorni.eu>, 2021-05-21 20:02:03 +0200, , update libbacktrace component upstream gcc mostly direct apply diff liballoc gcc rev around version heaptrack currently  part elf.c automatically apply fixed manually remove heaptrack specific handling debuglink_crc upstream support newly created file gcc ignored heaptrack additional elf_add definition internal.h updated,,
7,fafb6015acb5f6a431d4bb3ed45db293dffc4f9e,ilian Wolff <mail@milianw.de>, 2021-05-27 11:23:18 +0200, , add expected data file update test fix tst_parser,,
8,70e2d9c80ee0e788cbf27491e7c2a592f0bac602,ilian Wolff <mail@milianw.de>, 2021-05-21 11:04:25 +0200, , use type depend utility,,
9,8890f34a641110164d90afe51a2ddc6dd308e481,ilian Wolff <mail@milianw.de>, 2021-05-21 10:48:02 +0200, , remove useless include,,
10,a9723b735f8e89d7a5b8ccf344d5f44f90fba3f0,ilian Wolff <milian.wolff@kdab.com>, 2021-05-21 10:42:30 +0200, , remove dependency boost tracking part heaptrack way poor people try deploy heaptrack embedded system build boost done already analysis part still requires boost,,
11,f83ba02a620d8d325f84477c5aaf534eaae7c7f2,10n daemon script <scripty@kde.org>, 2021-05-17 00:26:27 +0000, , git_silent made message extraction,,
12,066f268324162b08f4c58d90581740b2a0dfc5e2,ilian Wolff <mail@milianw.de>, 2021-05-13 11:30:32 +0200, , fix division zero totaltime zero happen e.g diffing data file,,
13,aaf273a142bb02e2d5de055558c8b278cd329527,ilian Wolff <mail@milianw.de>, 2021-05-13 11:16:29 +0200, , replace potential explicit custom unique_reduce algorithm previous approach modified argument sort binary predicate allowed according standard roll custom algorithm instead small variation std unique algorithm additional binary reduce equal value,,
14,921c0deb6d36eecaf630a1694220c9ee8feae8a0,ilian Wolff <mail@milianw.de>, 2021-05-08 18:50:09 +0200, , properly start progress timer also diffing result,,
15,55bf830234e2c3ec197f1422c43159faec8b075a,ilian Wolff <mail@milianw.de>, 2021-05-07 15:32:48 +0200, , fix diffing algorithm previous implementation seriously broken admit bit ashamed realizing ... merged item within erase_if callback tried remember position item stage erase happened position totally meaning result produced pretty random broken wrong result whops first sort cleanup generally restructure code rely position within allocation list anymore code actually much nicer temporary container required sort result directly handle ,,
16,b2c535ce196d4dcae4f4db4678aa5ca3559e51a4,ilian Wolff <milian.wolff@kdab.com>, 2021-05-07 17:40:37 +0200, , add suppression statistic heaptrack_ui add new model shown bottom summary page behind collapsible box suppression begin work patch sponsored thanks,,
17,324b2ec6353cd1bafa5f6cb2bcfe53b2828a6cde,ilian Wolff <milian.wolff@kdab.com>, 2021-05-07 16:35:43 +0200, , add print suppression heaptrack_print show suppression stats basically analogous lsan option specified show table suppression rule got used analyzed data example  heaptrack_print print suppression suppression test auto test auto ... suppressed leak 30.46kb suppression used match leaked pattern 5.27kb 3.40kb corelib codecs qicucodec.cpp 21.79kb lib linux .so.2  work patch sponsored thanks,,
18,55cbe95909bd6b86e0b4d1cb19e93cda4d1f7293,uri Chornoivan <yurchor@ukr.net>, 2021-05-08 09:17:15 +0300, , remove extra space,,
19,ae5dbeea5a649fc714eb37ed4ba9014354658b70,10n daemon script <scripty@kde.org>, 2021-05-08 00:20:47 +0000, , git_silent made message extraction,,
20,7b3518b6356e8b6ee39ebca909ae01db9be0445f,ilian Wolff <mail@milianw.de>, 2021-05-04 23:44:52 +0200, , print posic_memaling retval simplifies code need unused attribute,,
21,2a0dd463038e6ba19ae176540ee3e474787235d9,ilian Wolff <mail@milianw.de>, 2021-05-04 23:44:29 +0200, , prevent malloc optimized away use escape trick test otherwise malloc visible looking release build,,
22,f2311b799a8b8cd581a846560de2b3b77a4e9776,ilian Wolff <mail@milianw.de>, 2021-05-04 23:43:45 +0200, , increase timeouts debug build,,
23,5d8adecd01ea79520e1e637f2d2af402e6057116,ilian Wolff <mail@milianw.de>, 2021-05-04 23:41:31 +0200, , add comment string remapping step diff,,
24,b73ff480a7c04bb88b9dedcc00fc982344b15cce,ilian Wolff <mail@milianw.de>, 2021-05-02 13:49:47 +0200, , document diff mode failure produce bogus result,,
25,ec626354f1ad20a187934f58ab69fb969db965bc,ilian Wolff <mail@milianw.de>, 2021-05-02 13:30:23 +0200, , allow sharing even code tst_parser esp make easier access stringified symbol also share code debug print result,,
26,20026b9749784ae0578a7311970fa3b3c9a7092d,ilian Wolff <mail@milianw.de>, 2021-05-02 12:27:16 +0200, , add two test file basic test coverage diffing far summary data looked sane individual diffed model data correct shown tested future commits,,
27,13a79a44fef5a32cfc9c887180f6bb5481dbea50,ilian Wolff <mail@milianw.de>, 2021-05-02 12:16:31 +0200, , share code tst_parser across test finally expand test coverage time better share code instead duplicating place,,
28,fcb803e3a7d147f0c7e54eea9782b5663da4a262,ilian Wolff <mail@milianw.de>, 2021-04-30 22:03:30 +0200, , allow define suppression file graphically heaptrack_gui add another entry suppression file two data file load suppression dialog get accepted work patch sponsored thanks,,
29,8728e96b5f8263b54605c7b5af8d796dc144f464,ilian Wolff <milian.wolff@kdab.com>, 2021-04-30 21:50:44 +0200, , rework suppression handling various improvement push suppression allow disabling embedded suppression heaptrack data file explicitly parse suppression file instead centrally approach fix quite issue previous code reparsed file suppression got lost passed suppression file gui via cli selected data file graphically suppression got lost furthermore old approach easily allow toggle embedded suppression runtime gui analyzer work properly least according test note heaptrack_print heaptrack_gui understand disable embedded suppression option work patch sponsored thanks,,
30,4b5efbe6635b4b33b47b8ad40226ae845a73f4df,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 21:49:28 +0200, , reset system info consecutive par skip system info line consecutive par meaning wiped data previous run always assumed total memory afterwards work patch sponsored thanks,,
31,ad472fbed15fe08a4499c18c26151f02641f0cec,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 21:44:22 +0200, , add support reading check application tracing supply definition call transfer line line heaptrack data file analyze file suppression enabled automatically work patch sponsored thanks,,
32,dc6fa4910c8269ace5d7e1a5de3f5547fc0d27d6,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 20:08:05 +0200, , reuse templatematch suppression function sanitizers add support anchoring globbing suppression make sure behavior identical whatever sanitizers admit though code doe look bit fishy certainly work work patch sponsored thanks,,
33,2e221f24675cc6689ff13e66836c05d9fe0a2bb7,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 19:26:52 +0200, , trim whitespace line leak suppression line improves compatibility lsan regard work patch sponsored thanks,,
34,f70343df987f78ade897458b71210cac977192ec,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 18:26:21 +0200, , allow specifying suppression file heaptrack_gui add suppression file command line switch similar added heaptrack_print specifying gui added follow step next work patch sponsored thanks,,
35,f1871d6ae75e38e349a31b04b462b559a98c9d30,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 18:00:20 +0200, , extend test coverage summary data work patch sponsored thanks,,
36,542abc05e36e70ef9720b64b56b2b622e32d4d4b,ilian Wolff <milian.wolff@kdab.com>, 2021-04-20 16:17:16 +0200, , add basic support leak suppression heaptrack_print new suppression file parameter supplied given file parsed create list suppression rule format expected lsan compatible simple substring matching supported without anchoring finalize step efficiently check allocation event match suppression set leak cost change required easy apply approach heaptrack_gui next suppression string matched library executable name function name well source file name line number supported leak suppression file final summary printed show whether leak got suppressed work patch sponsored thanks,,
37,deb0e056daf1235799f03568bb2feab924db9ae6,ilian Wolff <milian.wolff@kdab.com>, 2021-04-30 19:27:04 +0200, , prevent scaling axis tick label chart already prevented scaling title forgot set label get window size independent font size label work patch sponsored thanks,,
38,c1385a83ba46f2ec17c2e89caa9327ef2e442e78,ilian Wolff <milian.wolff@kdab.com>, 2021-04-30 19:14:47 +0200, , propery sort top view summary page cost previously view got sorted location useful context work patch sponsored thanks,,
39,b82c4d211753b819c7d86b638f65d9f175936669,ilian Wolff <milian.wolff@kdab.com>, 2021-04-30 19:02:11 +0200, , optional allow using via ld_preload invoke heaptrack use inject app load instead rely symbol interception logic therein yield better result least one test case approach relies ld_preload dynamic linker resolve free friend fails intercept _some_ call free approach employ work though yet confident saying approach better i.e whether always use may case work better approach show testing adding feature behind optional command line switch best offer manage fully grasp dynamic linker ld_preload sometimes fails work patch sponsored thanks,,
40,1c707e768c6c971e278ff855ecc000dbd47e6fad,ilian Wolff <mail@milianw.de>, 2021-04-15 15:13:00 +0200, , build bench_parser found,,
41,22e7a9cd9c028d7da9aaabad0b691f1b56f325d3,acob King <itsjacobking@gmail.com>, 2021-04-02 21:30:02 -0500, , feat output file name include bug 435195,,
42,4408287dfa89151341f2fdf8ac8f38fbac82e371,avel Orekhov <p.orekhov@partner.samsung.com>, 2021-02-19 09:21:29 +0300, , fix symbol search loop debuglink mode distribs like ubuntu creatively name file debug symbol name without .debug suffix give build way dpkg libc6 dbg grep gconv usr lib debug .build usr lib debug lib x86_64 linux gnu libc 2.27.so dpkg libc6 lib x86_64 linux gnu libc 2.27.so lib x86_64 linux gnu libc.so.6 objdump .gnu_debuglink .note.gnu.build lib x86_64 linux gnu libc 2.27.so content section .gnu_debuglink 0000 6c696263 2d322e32 372e736f 00000000 libc 2.27.so .... 0010 5ac51387 ... content section .note.gnu.build 0270 04000000 14000000 03000000 474e5500 ............ gnu 0280 ce450eb0 1a5e5acc 7ce7b8c2 633b02cc ... ... 0290 1093339e libc loop back lib x86_64 linux gnu libc 2.27.so lookup symbol libc another standard libs patch break loop allows lookup symbol place,,
43,af6826958d72c51f22b3589876191fd47b2cf8b0,driaan de Groot <groot@kde.org>, 2021-02-18 22:31:45 +0100, , fix bit i386 freebsd build,,
44,36c821c8735ac218b693e81b0934159ce5c52098,10n daemon script <scripty@kde.org>, 2021-02-19 03:56:28 +0100, , git_silent made message extraction,,
45,705766a2c361123a27d9f9c04ff068a575dd5652,10n daemon script <scripty@kde.org>, 2021-02-15 03:07:42 +0100, , git_silent made message extraction,,
46,3079e8141a8b061ff4493dc575b2811406d58b3e,10n daemon script <scripty@kde.org>, 2021-02-02 02:58:44 +0100, , git_silent made message extraction,,
47,fd95b07a7dd8aa26bad10c22b3e72379caf722c7,10n daemon script <scripty@kde.org>, 2021-01-21 02:53:39 +0100, , git_silent made message extraction,,
48,94bb7d98225ba3835269422e9259d4c4982bbc87,10n daemon script <scripty@kde.org>, 2021-01-18 03:02:01 +0100, , git_silent made message extraction,,
49,6a7fb7b2869eedefb4f447ccef1b43f5d358029e,10n daemon script <scripty@kde.org>, 2021-01-14 02:59:47 +0100, , git_silent made message extraction,,
50,de6acb58556a84d83f7fff69787071c7a11a0fbe,10n daemon script <scripty@kde.org>, 2021-01-13 03:45:13 +0100, , git_silent made message extraction,,
51,5ec8b61d5073957cd7ee240b97f055aebad83b39,10n daemon script <scripty@kde.org>, 2021-01-12 02:57:52 +0100, , git_silent made message extraction,,
52,bdf64c8f70852951edf072a2676a761c40cb50e7,ohnny Jazeix <jazeix@gmail.com>, 2021-01-11 08:18:11 +0100, , remove dot end caption http marc.info kde i18n doc 161030168204499,,
53,502783780dd5cb7b30752439af787c39bfa5a604,10n daemon script <scripty@kde.org>, 2021-01-11 02:55:59 +0100, , git_silent made message extraction,,
54,bd5d23d04621edb95b7a41f8f2dba353a6385c01,ilian Wolff <mail@milianw.de>, 2021-01-05 19:28:59 +0100, , fail boost container available become required dependency future yet,,
55,f973c7815a3871cf8d50188c9aa1f8eebb75fbe5,enis Khalikov <d.khalikov@partner.samsung.com>, 2020-12-25 10:26:14 +0300, , backported fix handling .note.gnu.build section build based standalone debug info might ignored shared object see detail http gcc.gnu.org bugzilla show_bug.cgi 86198,,
56,1aa494bd0126b5d010c203974a8c1ac01671c4ac,ilian Wolff <mail@milianw.de>, 2020-12-14 12:49:32 +0100, , add source thanks nuno,,
57,e46f454c6d29061c9fcef49ecacd6c78b7263650,rran Cudbard-Bell <a.cudbardb@freeradius.org>, 2020-12-01 16:00:11 -0600, , update homebrew dependency look like kde homebrew tap maintainer switched hosting month back started depending upstream formula fix tap command update name dependency,,
58,4c97231f7d7aac21942c99fcea44eceb99469b65,ilian Wolff <mail@milianw.de>, 2020-11-26 14:38:19 +0100, ," expand benchmark also cover boost container pmr slist use show gain using purpose  performance counter stats home milian project build heaptrack test benchmark bench_tree boost slist 5.526,48 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 910.944 page fault 0,165 sec 20.395.572.533 cycle 3,691 ghz 83,34 58.593.916 stalled cycle frontend 0,29 frontend cycle idle 83,34 15.917.051.157 stalled cycle backend 78,04 backend cycle idle 83,33 22.396.075.369 instruction 1,10 insn per cycle 0,71 stalled cycle per insn 83,34 4.567.250.732 branch 826,431 sec 83,34 21.088.217 branch miss 0,46 branch 83,32 5,527112576 second time elapsed 4,724403000 second user 0,780738000 second sys performance counter stats home milian project build heaptrack test benchmark bench_tree boost pmr slist 4.096,87 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 910.958 page fault 0,222 sec 15.097.193.259 cycle 3,685 ghz 83,30 30.032.956 stalled cycle frontend 0,20 frontend cycle idle 83,30 12.890.862.885 stalled cycle backend 85,39 backend cycle idle 83,32 9.589.139.418 instruction 0,64 insn per cycle 1,34 stalled cycle per insn 83,38 1.683.224.838 branch 410,857 sec 83,38 19.650.364 branch miss 1,17 branch 83,31 4,097475027 second time elapsed 3,366684000 second user 0,714428000 second sys  memory consumption pretty much unaffected obviously  slist maximum resident set size kbytes 3649904 pmr list maximum resident set size kbytes 3649888 ",,
59,1518d3b33bfce7ae6daa3b87a218e9de2e89fa49,ilian Wolff <mail@milianw.de>, 2020-11-26 14:29:11 +0100, , make numnodes reusable,,
60,13d55e7dee36889666921359457ee4bb7f8a6c14,ilian Wolff <mail@milianw.de>, 2020-11-26 14:22:12 +0100, ," set tree node parent significant impact vector based tree need one full run tree set parent list based tree already significantly better  tag qvector std vector std list boost slist perf stat project build heaptrack test benchmark bench_tree tag done 40223304 performance counter stats home milian project build heaptrack test benchmark bench_tree qvector 7.258,90 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 1.066.324 page fault 0,147 sec 28.597.338.274 cycle 3,940 ghz 83,30 106.681.727 stalled cycle frontend 0,37 frontend cycle idle 83,33 18.253.436.626 stalled cycle backend 63,83 backend cycle idle 83,34 35.021.338.418 instruction 1,22 insn per cycle 0,52 stalled cycle per insn 83,35 6.910.244.080 branch 951,968 sec 83,34 24.486.655 branch miss 0,35 branch 83,33 7,259623426 second time elapsed 6,407177000 second user 0,823973000 second sys 40223304 performance counter stats home milian project build heaptrack test benchmark bench_tree std vector 6.559,15 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 913.372 page fault 0,139 sec 25.178.246.000 cycle 3,839 ghz 83,31 61.494.028 stalled cycle frontend 0,24 frontend cycle idle 83,32 18.412.909.524 stalled cycle backend 73,13 backend cycle idle 83,35 25.738.738.521 instruction 1,02 insn per cycle 0,72 stalled cycle per insn 83,35 5.149.522.578 branch 785,090 sec 83,35 23.133.623 branch miss 0,45 branch 83,32 6,559888601 second time elapsed 5,804386000 second user 0,730870000 second sys 40223304 performance counter stats home milian project build heaptrack test benchmark bench_tree std list 6.328,67 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 1.068.075 page fault 0,169 sec 23.138.038.923 cycle 3,656 ghz 83,31 57.658.887 stalled cycle frontend 0,25 frontend cycle idle 83,31 18.076.221.406 stalled cycle backend 78,12 backend cycle idle 83,31 22.337.549.206 instruction 0,97 insn per cycle 0,81 stalled cycle per insn 83,34 4.534.944.282 branch 716,572 sec 83,36 21.234.052 branch miss 0,47 branch 83,35 6,329363185 second time elapsed 5,384786000 second user 0,908987000 second sys 40223304 performance counter stats home milian project build heaptrack test benchmark bench_tree boost slist 5.377,76 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 910.954 page fault 0,169 sec 20.828.436.359 cycle 3,873 ghz 83,32 31.529.423 stalled cycle frontend 0,15 frontend cycle idle 83,32 16.674.025.296 stalled cycle backend 80,05 backend cycle idle 83,32 22.416.653.118 instruction 1,08 insn per cycle 0,74 stalled cycle per insn 83,32 4.560.100.713 branch 847,956 sec 83,38 21.152.807 branch miss 0,46 branch 83,34 5,378376956 second time elapsed 4,596761000 second user 0,761155000 second sys ",,
61,eb572d8d4eaa28c4de7c2e8b3fb145a935741f7c,ilian Wolff <mail@milianw.de>, 2020-11-26 14:12:59 +0100, ," also benchmark boost container slist one look promising already performance current best container std vector allows easily use pmr container future  performance counter stats home milian project build heaptrack test benchmark bench_tree boost slist 5.455,84 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 910.951 page fault 0,167 sec 20.295.488.575 cycle 3,720 ghz 83,32 33.927.249 stalled cycle frontend 0,17 frontend cycle idle 83,34 16.038.938.738 stalled cycle backend 79,03 backend cycle idle 83,34 22.319.974.139 instruction 1,10 insn per cycle 0,72 stalled cycle per insn 83,34 4.564.927.240 branch 836,705 sec 83,34 21.123.736 branch miss 0,46 branch 83,32 5,456638203 second time elapsed 4,656348000 second user 0,777383000 second sys  memory  maximum resident set size kbytes 3649960 ",,
62,bc0be0d1fc8d4fbc74bd88390bb2e78813a46957,ilian Wolff <mail@milianw.de>, 2020-11-26 14:03:04 +0100, ," also benchmark std list tree construction lie somewhere std vector qvector  performance counter stats home milian project build heaptrack test benchmark bench_tree std list 6.227,71 msec task clock 1,000 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 1.068.071 page fault 0,172 sec 23.672.061.063 cycle 3,801 ghz 83,33 142.641.882 stalled cycle frontend 0,60 frontend cycle idle 83,33 17.758.938.284 stalled cycle backend 75,02 backend cycle idle 83,33 22.212.698.253 instruction 0,94 insn per cycle 0,80 stalled cycle per insn 83,33 4.492.589.760 branch 721,387 sec 83,33 21.193.689 branch miss 0,47 branch 83,33 6,228371570 second time elapsed 5,293329000 second user 0,909763000 second sys  peak  maximum resident set size kbytes 4278300 ",,
63,c9231de2f96c1f431db1ff8bf31244e4204c032d,ilian Wolff <mail@milianw.de>, 2020-11-26 12:04:26 +0100, ," allow using std vector instead qvector bench_tree contrary thought significantly faster using qvector  performance counter stats home milian project build heaptrack test benchmark bench_tree std 5.657,58 msec task clock 1,000 cpu utilized context switch 0,005 sec cpu migration 0,000 sec 913.370 page fault 0,161 sec 24.925.687.516 cycle 4,406 ghz 83,30 1.071.926.434 stalled cycle frontend 4,30 frontend cycle idle 83,35 15.463.080.632 stalled cycle backend 62,04 backend cycle idle 83,35 29.942.331.671 instruction 1,20 insn per cycle 0,52 stalled cycle per insn 83,35 5.935.680.160 branch 1049,154 sec 83,35 24.781.895 branch miss 0,42 branch 83,30 5,658346811 second time elapsed 4,769389000 second user 0,867054000 second sys  also peak memory  maximum resident set size kbytes 3659356 ",,
64,3a41b6608ffd7d936594eb7163ce975c0b6d19eb,ilian Wolff <mail@milianw.de>, 2020-11-26 11:38:18 +0100, ," add benchmark creating large tree basically status quo used heaptrack current timing  performance counter stats home milian project build heaptrack test benchmark bench_tree 6.389,58 msec task clock 1,000 cpu utilized context switch 0,002 sec cpu migration 0,000 sec 1.066.317 page fault 0,167 sec 27.562.650.647 cycle 4,314 ghz 83,33 1.112.140.389 stalled cycle frontend 4,03 frontend cycle idle 83,33 15.580.172.700 stalled cycle backend 56,53 backend cycle idle 83,33 39.147.522.858 instruction 1,42 insn per cycle 0,40 stalled cycle per insn 83,33 7.680.291.744 branch 1202,002 sec 83,33 25.106.869 branch miss 0,33 branch 83,34 6,390189396 second time elapsed 5,500982000 second user 0,863794000 second sys  peak  maximum resident set size kbytes 4271420 ",,
65,c2beecb8b3860d2360af377c2bec483b59d98503,ilian Wolff <mail@milianw.de>, 2020-11-17 21:08:03 +0100, ," revert leverage std timed_mutex try_lock_for reverts commit actually slower use std timed_mutex since sleeping timer thread important better optimize common case writing data std mutex  heaptrack analyze home milian project build heaptrack performance counter stats heaptrack test manual threaded run 8.903,06 msec task clock 17,911 cpu utilized 1,29 314.336 context switch 0,035 sec 1,50 40.313 cpu migration 0,005 sec 13,18 49.464 page fault 0,006 sec 0,53 36.517.191.099 cycle 4,102 ghz 1,42 83,37 24.890.585.818 stalled cycle frontend 68,16 frontend cycle idle 1,60 84,13 926.640.652 stalled cycle backend 2,54 backend cycle idle 2,28 83,55 9.228.118.514 instruction 0,25 insn per cycle 2,70 stalled cycle per insn 1,97 83,08 1.951.426.273 branch 219,186 sec 2,14 83,48 21.883.712 branch miss 1,12 branch 1,32 82,39 0,49707 0,00592 second time elapsed 1,19  std timed_mutex  10.452,71 msec task clock 18,617 cpu utilized 0,31 384.406 context switch 0,037 sec 0,55 49.914 cpu migration 0,005 sec 13,92 49.685 page fault 0,005 sec 0,38 42.967.520.168 cycle 4,111 ghz 0,51 82,96 29.172.821.383 stalled cycle frontend 67,90 frontend cycle idle 0,51 83,39 1.069.232.909 stalled cycle backend 2,49 backend cycle idle 1,60 83,91 10.450.752.968 instruction 0,24 insn per cycle 2,79 stalled cycle per insn 1,47 83,18 2.225.628.518 branch 212,924 sec 1,50 83,15 24.390.495 branch miss 1,10 branch 0,75 83,41 0,56145 0,00924 second time elapsed 1,65 ",,
66,143af1d0da6220325c45c934dc42aa1a1d6c2a43,ilian Wolff <mail@milianw.de>, 2020-11-17 18:03:52 +0100, , port tsl robin_map,,
67,5dd0bc68ded516b637b25426a954a27f368d9e73,ilian Wolff <mail@milianw.de>, 2020-11-17 15:39:43 +0100, , leverage tsl robin_set fro,,
68,33df9c34076fcfe4992c42baac5ed8f463f861cb,ilian Wolff <mail@milianw.de>, 2020-11-17 15:38:23 +0100, ," leverage tsl robin_ map set gui parser   performance counter stats home milian project build heaptrack test benchmark bench_parser run 7.077,40 msec task clock 1,142 cpu utilized 0,35 845 context switch 0,119 sec 2,37 245 cpu migration 0,035 sec 5,21 139.577 page fault 0,020 sec 0,27 30.284.047.519 cycle 4,279 ghz 0,22 83,44 750.013.909 stalled cycle frontend 2,48 frontend cycle idle 1,05 83,24 6.383.953.436 stalled cycle backend 21,08 backend cycle idle 1,17 83,19 57.113.121.471 instruction 1,89 insn per cycle 0,11 stalled cycle per insn 0,05 83,30 11.452.771.446 branch 1618,217 sec 0,02 83,40 209.271.140 branch miss 1,83 branch 0,17 83,42 6,1972 0,0240 second time elapsed 0,39    performance counter stats home milian project build heaptrack test benchmark bench_parser 6.144,14 msec task clock 1,156 cpu utilized 611 context switch 0,099 sec 167 cpu migration 0,027 sec 173.538 page fault 0,028 sec 26.075.118.232 cycle 4,244 ghz 83,44 542.631.671 stalled cycle frontend 2,08 frontend cycle idle 83,40 6.013.468.979 stalled cycle backend 23,06 backend cycle idle 83,12 50.576.695.591 instruction 1,94 insn per cycle 0,12 stalled cycle per insn 83,32 10.046.690.454 branch 1635,166 sec 83,35 179.839.003 branch miss 1,79 branch 83,38 5,316701146 second time elapsed 5,790727000 second user 0,338084000 second sys ",,
69,88c6ae8bebf1c0f396c94929ce6d73c6b7d70a65,ilian Wolff <mail@milianw.de>, 2020-11-17 15:24:51 +0100, , use tsl robin_set heaptrack_print faster really care much utility,,
70,4c2e0e72c5a25d4a935608baf6c2b896d0b46a11,ilian Wolff <mail@milianw.de>, 2020-11-17 15:23:23 +0100, ," use tsl pointer_map string remapping diffing   performance counter stats home milian project build heaptrack test benchmark bench_parser 10.913,06 msec task clock 1,317 cpu utilized 948 context switch 0,087 sec 279 cpu migration 0,026 sec 224.389 page fault 0,021 sec 46.901.681.727 cycle 4,298 ghz 83,43 704.668.201 stalled cycle frontend 1,50 frontend cycle idle 83,33 14.905.704.111 stalled cycle backend 31,78 backend cycle idle 83,23 108.365.697.169 instruction 2,31 insn per cycle 0,14 stalled cycle per insn 83,30 19.402.933.947 branch 1777,956 sec 83,35 222.289.116 branch miss 1,15 branch 83,36 8,285154704 second time elapsed 10,577763000 second user 0,313054000 second sys    performance counter stats home milian project build heaptrack test benchmark bench_parser 10.372,46 msec task clock 1,321 cpu utilized 865 context switch 0,083 sec 229 cpu migration 0,022 sec 222.593 page fault 0,021 sec 45.087.440.140 cycle 4,347 ghz 83,38 596.167.950 stalled cycle frontend 1,32 frontend cycle idle 83,23 14.191.678.571 stalled cycle backend 31,48 backend cycle idle 83,22 108.176.660.565 instruction 2,40 insn per cycle 0,13 stalled cycle per insn 83,40 19.375.195.741 branch 1867,946 sec 83,40 223.596.938 branch miss 1,15 branch 83,37 7,850580978 second time elapsed 10,029832000 second user 0,319581000 second sys ",,
71,8866b5842b2d940b6eb996af631bb61087b02936,ilian Wolff <mail@milianw.de>, 2020-11-17 14:56:59 +0100, ," leverage tsl robin_map   allocated vector 73376 allocated input pointer 320000000 freed input pointer 224 begin actual benchmark 224 pointer added 320000000 100 overhead pointer removed 73600 trimmed 73600 performance counter stats home milian project build heaptrack test benchmark 9.160,03 msec task clock 1,000 cpu utilized context switch 0,003 sec cpu migration 0,000 sec 250.563 page fault 0,027 sec 40.159.559.869 cycle 4,384 ghz 83,33 340.503.937 stalled cycle frontend 0,85 frontend cycle idle 83,33 36.881.695.646 stalled cycle backend 91,84 backend cycle idle 83,33 11.942.611.820 instruction 0,30 insn per cycle 3,09 stalled cycle per insn 83,33 2.468.955.121 branch 269,536 sec 83,33 10.938.236 branch miss 0,44 branch 83,35 9,160886661 second time elapsed 8,911365000 second user 0,225871000 second sys    allocated vector 73376 allocated input pointer 320000000 freed input pointer 224 begin actual benchmark 224 pointer added 224 overhead pointer removed 73600 trimmed 73600 performance counter stats home milian project build heaptrack test benchmark 3.281,53 msec task clock 1,000 cpu utilized context switch 0,002 sec cpu migration 0,000 sec 490.237 page fault 0,149 sec 14.705.858.311 cycle 4,481 ghz 83,27 1.799.042.842 stalled cycle frontend 12,23 frontend cycle idle 83,35 8.573.087.340 stalled cycle backend 58,30 backend cycle idle 83,36 11.080.704.070 instruction 0,75 insn per cycle 0,77 stalled cycle per insn 83,36 2.223.987.372 branch 677,728 sec 83,36 36.702.866 branch miss 1,65 branch 83,30 3,282066401 second time elapsed 2,802599000 second user 0,465220000 second sys  note seemingly faster memory blindly replacing one show much worse performance heaptrack seems like benchmark showing real world usage currently",,
72,95a58296118bbb3553ce11f768f93eb07c96a463,ilian Wolff <mail@milianw.de>, 2020-11-17 14:53:20 +0100, ," leverage tsl robin_ map set pointermap   allocated vector 73376 allocated input pointer 320000000 freed input pointer 224 begin actual benchmark 224 pointer added 62208848 19.4403 overhead pointer removed 96448 trimmed 96448 performance counter stats home milian project build heaptrack test benchmark 5.685,95 msec task clock 1,000 cpu utilized context switch 0,002 sec cpu migration 0,000 sec 114.357 page fault 0,020 sec 25.672.059.553 cycle 4,515 ghz 83,33 416.801.612 stalled cycle frontend 1,62 frontend cycle idle 83,33 17.952.673.581 stalled cycle backend 69,93 backend cycle idle 83,33 12.248.196.258 instruction 0,48 insn per cycle 1,47 stalled cycle per insn 83,33 2.341.601.571 branch 411,822 sec 83,34 95.859.176 branch miss 4,09 branch 83,35 5,686546406 second time elapsed 5,510546000 second user 0,146093000 second sys    allocated vector 73376 allocated input pointer 320000000 freed input pointer 224 begin actual benchmark 224 pointer added 60645536 18.9517 overhead pointer removed 96448 trimmed 96448 performance counter stats home milian project build heaptrack test benchmark 4.906,87 msec task clock 1,000 cpu utilized context switch 0,002 sec cpu migration 0,000 sec 115.556 page fault 0,024 sec 21.930.029.620 cycle 4,469 ghz 83,31 314.571.970 stalled cycle frontend 1,43 frontend cycle idle 83,31 14.492.419.080 stalled cycle backend 66,08 backend cycle idle 83,31 12.059.692.467 instruction 0,55 insn per cycle 1,20 stalled cycle per insn 83,35 2.287.570.344 branch 466,197 sec 83,37 95.750.624 branch miss 4,19 branch 83,36 4,907463968 second time elapsed 4,749223000 second user 0,132838000 second sys ",,
73,e316a3523f6d4f4f6146d576321452f446863615,ilian Wolff <mail@milianw.de>, 2020-11-17 14:51:32 +0100, , import tsl robin map commit upstream http github.com tessil robin map using git submodule may rethink future ... much faster hash map leverage multiple place heaptrack mit licensed fine use ,,
74,be5aff3f1c0c79032848b0aa24f001a0194e5079,ilian Wolff <mail@milianw.de>, 2020-11-17 13:31:08 +0100, ," leverage requires boost 1.60 released roughly year ago hope fine everyone eventually replace std pmr depend impact small noticeable   performance counter stats home milian project build heaptrack test benchmark bench_parser run 7.339,25 msec task clock 1,153 cpu utilized 1,98 860 context switch 0,117 sec 9,56 242 cpu migration 0,033 sec 8,87 139.946 page fault 0,019 sec 0,33 31.016.368.103 cycle 4,226 ghz 1,36 83,45 549.091.116 stalled cycle frontend 1,77 frontend cycle idle 5,87 83,25 7.195.865.845 stalled cycle backend 23,20 backend cycle idle 1,28 83,19 58.379.008.232 instruction 1,88 insn per cycle 0,12 stalled cycle per insn 0,05 83,31 11.802.836.750 branch 1608,180 sec 0,01 83,40 209.444.455 branch miss 1,77 branch 0,33 83,41 6,365 0,142 second time elapsed 2,23    performance counter stats home milian project build heaptrack test benchmark bench_parser run 7.077,40 msec task clock 1,142 cpu utilized 0,35 845 context switch 0,119 sec 2,37 245 cpu migration 0,035 sec 5,21 139.577 page fault 0,020 sec 0,27 30.284.047.519 cycle 4,279 ghz 0,22 83,44 750.013.909 stalled cycle frontend 2,48 frontend cycle idle 1,05 83,24 6.383.953.436 stalled cycle backend 21,08 backend cycle idle 1,17 83,19 57.113.121.471 instruction 1,89 insn per cycle 0,11 stalled cycle per insn 0,05 83,30 11.452.771.446 branch 1618,217 sec 0,02 83,40 209.271.140 branch miss 1,83 branch 0,17 83,42 6,1972 0,0240 second time elapsed 0,39 ",,
75,2437baf97031b9f84f97bb9bee4e27972c461c32,ilian Wolff <mail@milianw.de>, 2020-11-17 12:44:37 +0100, , use std unordered_set recursion guard allow experiment pmr monotonic resource performance wise pretty much compared qhash simplified symbol,,
76,db40cdf38789cebfe5555e7aaa8f692887a29059,ilian Wolff <mail@milianw.de>, 2020-11-17 10:08:31 +0100, ," refactor gui code leverage string basically allows operate cheap instead fat string approach multiple advantage symbol 8byte large instead 32byte accordingly rowdata 56byte 80byte experiment using pmr allocator put monotonic buffer resource new resultdata two downside approach one hand sorting data differently i.e data sorted actual string content whereas sorted string index problem though want sort actual metric area anyways area noticeable flame graph side thing repeatedly notably cache string basename anymore overly noticeable either usually need handful row time needed even cache future benchmark also show significant win new approach notably compare total runtime 6.82s peak memory consumption 555mb 6.17s 490mb   performance counter stats home milian project build heaptrack test benchmark bench_parser 7.825,54 msec task clock 1,148 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 155.988 page fault 0,020 sec 32.848.963.956 cycle 4,198 ghz 83,22 434.588.005 stalled cycle frontend 1,32 frontend cycle idle 83,18 6.992.025.659 stalled cycle backend 21,29 backend cycle idle 83,36 63.255.414.218 instruction 1,93 insn per cycle 0,11 stalled cycle per insn 83,39 12.941.138.245 branch 1653,705 sec 83,43 225.630.395 branch miss 1,74 branch 83,41 6,817015591 second time elapsed 7,613402000 second user 0,189718000 second sys command timed home milian project build heaptrack test benchmark bench_parser user time second 7.48 system time second 0.19 percent cpu job got 114 elapsed wall clock time 06.70 average shared text size kbytes average unshared data size kbytes average stack size kbytes average total size kbytes maximum resident set size kbytes 554496 average resident set size kbytes major requiring page fault minor reclaiming frame page fault 156906 voluntary context switch 827 involuntary context switch swap file system input file system output socket message sent socket message received signal delivered page size byte 4096 exit status    performance counter stats home milian project build heaptrack test benchmark bench_parser 7.244,75 msec task clock 1,174 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 139.184 page fault 0,019 sec 29.982.409.942 cycle 4,139 ghz 83,44 542.168.522 stalled cycle frontend 1,81 frontend cycle idle 83,22 6.438.890.717 stalled cycle backend 21,48 backend cycle idle 83,17 57.743.166.637 instruction 1,93 insn per cycle 0,11 stalled cycle per insn 83,40 11.758.342.073 branch 1623,016 sec 83,40 221.034.296 branch miss 1,88 branch 83,37 6,170274615 second time elapsed 6,975850000 second user 0,249394000 second sys command timed home milian project build heaptrack test benchmark bench_parser user time second 6.73 system time second 0.27 percent cpu job got 116 elapsed wall clock time 06.00 average shared text size kbytes average unshared data size kbytes average stack size kbytes average total size kbytes maximum resident set size kbytes 490132 average resident set size kbytes major requiring page fault minor reclaiming frame page fault 140792 voluntary context switch 647 involuntary context switch 110 swap file system input file system output socket message sent socket message received signal delivered page size byte 4096 exit status ",,
77,5319c5b012352e1cf1fdfa8eb825b98c2191717a,ilian Wolff <mail@milianw.de>, 2020-11-16 16:13:42 +0100, , make identity functor eventually replaced std identity,,
78,a12d55152c18e4857ff3e7dfc019a56ab89bd934,10n daemon script <scripty@kde.org>, 2020-11-17 02:36:06 +0100, , git_silent made message extraction,,
79,a1d85b6c3a565b66a269a2ef6bb2cfd1b440c4f7,ilian Wolff <mail@milianw.de>, 2020-11-16 15:51:22 +0100, ," use std remove_if optimize diffing calling erase loop lead quadratic behavior seen impact patch   performance counter stats home milian project build heaptrack test benchmark bench_parser 75.307,69 msec task clock 0,944 cpu utilized 5.104 context switch 0,068 sec 376 cpu migration 0,005 sec 196.391 page fault 0,003 sec 307.733.655.134 cycle 4,086 ghz 83,34 1.516.564.276 stalled cycle frontend 0,49 frontend cycle idle 83,30 111.558.209.335 stalled cycle backend 36,25 backend cycle idle 83,30 333.691.330.970 instruction 1,08 insn per cycle 0,33 stalled cycle per insn 83,33 37.612.802.347 branch 499,455 sec 83,35 243.957.169 branch miss 0,65 branch 83,38 79,799304157 second time elapsed 74,538971000 second user 0,344263000 second sys    performance counter stats home milian project build heaptrack test benchmark bench_parser 11.540,35 msec task clock 1,310 cpu utilized 1.173 context switch 0,102 sec 309 cpu migration 0,027 sec 195.605 page fault 0,017 sec 48.974.438.032 cycle 4,244 ghz 83,40 749.567.505 stalled cycle frontend 1,53 frontend cycle idle 83,42 17.760.476.929 stalled cycle backend 36,26 backend cycle idle 83,06 114.694.556.598 instruction 2,34 insn per cycle 0,15 stalled cycle per insn 83,32 20.690.990.493 branch 1792,926 sec 83,39 236.844.837 branch miss 1,14 branch 83,41 8,808486636 second time elapsed 11,187237000 second user 0,322839000 second sys ",,
80,19313ef55c31ac2be25afc13ba3ca0a894f62148,ilian Wolff <mail@milianw.de>, 2020-11-16 15:19:46 +0100, ," optimize parser handletimestamp assembling chart data instead looping allocation every timestamp looking whether include chart remember allocation index used   performance counter stats home milian project build heaptrack test benchmark bench_parser 9.912,44 msec task clock 1,114 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 154.526 page fault 0,016 sec 41.541.932.930 cycle 4,191 ghz 83,42 650.025.055 stalled cycle frontend 1,56 frontend cycle idle 83,31 8.109.154.392 stalled cycle backend 19,52 backend cycle idle 83,08 70.928.385.225 instruction 1,71 insn per cycle 0,11 stalled cycle per insn 83,36 14.890.145.672 branch 1502,168 sec 83,39 303.284.007 branch miss 2,04 branch 83,44 8,898062968 second time elapsed 9,584299000 second user 0,294486000 second sys    performance counter stats home milian project build heaptrack test benchmark bench_parser 7.959,38 msec task clock 1,143 cpu utilized 963 context switch 0,121 sec 241 cpu migration 0,030 sec 155.984 page fault 0,020 sec 34.013.707.752 cycle 4,273 ghz 83,42 944.704.460 stalled cycle frontend 2,78 frontend cycle idle 83,14 6.987.086.160 stalled cycle backend 20,54 backend cycle idle 83,18 64.337.973.769 instruction 1,89 insn per cycle 0,11 stalled cycle per insn 83,42 13.140.848.740 branch 1650,989 sec 83,42 225.817.303 branch miss 1,72 branch 83,42 6,960656687 second time elapsed 7,704212000 second user 0,232872000 second sys ",,
81,594d89da6c6bcba81cf1f05c15ceb06e027294b1,ilian Wolff <mail@milianw.de>, 2020-11-15 23:23:52 +0100, , merge comment line,,
82,a3dfb3d54f9355052c6d1023667859acd6f82c33,ilian Wolff <mail@milianw.de>, 2020-11-15 23:00:21 +0100, , cleanup code leverage qhash operator,,
83,7e97f69d017b4512b8102739115fd92f78b1e894,ilian Wolff <mail@milianw.de>, 2020-11-15 22:50:49 +0100, , move test code test,,
84,d6a80f7c67edc68bf74619ce9cba3bf708aa676a,ilian Wolff <mail@milianw.de>, 2020-11-15 22:46:42 +0100, , cleanup use find_if instead raw loop,,
85,f2464df4d272d484a5daa5b76caf281526a65eb0,ilian Wolff <mail@milianw.de>, 2020-11-15 22:40:00 +0100, , simply code leveraging qhash operator exactly semantics need need special function replicate,,
86,0cf8cfa6c710cb7ed6301ed3256b6ba42ca89559,ilian Wolff <mail@milianw.de>, 2020-11-15 22:31:48 +0100, , optimize recursion guard handling replace lookup insert insert check size changed track whether actually overwrote item sadly qset nice api std unordered_set otherwise faster also use symbolid one place sadly performance impact really noticable,,
87,63e47fef91d285005a8c38423bf93b0939a2c392,ilian Wolff <mail@milianw.de>, 2020-11-15 22:17:12 +0100, , optimize recursion guard handling recursionguard reuse set buffer operate symbolid instead symbol combined lead sizeable improvement one benchmark   run time 15.517s cpu time 18.859s total sample 89206 5.749khz cycle 5.787e 7.648e sample 85.7 total 4.928khz    run time 14.610s cpu time 16.504s total sample 67473 4.618khz cycle 5.097e 6.613e sample total 4.526khz ,,
88,5485bc5d2953f92e0a35bea4c0f2bb75fc6df4e4,ilian Wolff <mail@milianw.de>, 2020-11-15 22:08:26 +0100, , reserve size labelids,,
89,137b75ae6f3afc3f8129c88f33f87971e08295ad,ilian Wolff <mail@milianw.de>, 2020-11-15 21:54:01 +0100, , prevent useless data copy using const mostly micro optimization slightly reduce instruction count real impact overall runtime,,
90,bdbc7c6eeea494068cc3ef5ab41c7b7be3fccc20,ilian Wolff <mail@milianw.de>, 2020-11-15 21:31:20 +0100, , never copy findip note could potentially lead copy std vector inlined frame could slow instead return const,,
91,6bb0c513944ab7950da43fe1d4aed8d50315ea5e,ilian Wolff <mail@milianw.de>, 2020-11-14 18:20:19 +0100, , add benchmark linereader maybe find way improve performance class even still big hotspot parsing large heaptrack data file,,
92,76e5d6454f4aa09aa23c6dce3bb7b2ff73d82f77,ilian Wolff <mail@milianw.de>, 2020-11-14 14:28:42 +0100, , crash parse raw uncompressed data file,,
93,4b3e28f2d0f09f5ebbf1ffdfa8bc0b3c3ff31247,ilian Wolff <mail@milianw.de>, 2020-11-14 14:28:26 +0100, , move filesize computation,,
94,a8a96ab534e770ea80a2d2c3291583d68f9df8ca,ilian Wolff <mail@milianw.de>, 2020-11-14 14:22:17 +0100, ," enable buffering file reading fix serious performance regression got introduced recent progress reporting improvement apparently setting optimal buffer size totally disables buffering annihilates file reading preformance patch  performance counter stats bench_parser run 1.268,35 msec task clock 1,049 cpu utilized 1,62 context switch 0,050 sec 6,81 cpu migration 0,011 sec 9,09 7.713 page fault 0,006 sec 0,32 3.773.928.075 cycle 2,975 ghz 0,68 10.437.443.403 instruction 2,77 insn per cycle 0,02 2.294.904.884 branch 1809,367 sec 0,03 15.415.829 branch miss 0,67 branch 2,51 1,2085 0,0131 second time elapsed 1,09  patch  performance counter stats bench_parser run 616,22 msec task clock 1,096 cpu utilized 2,35 context switch 0,096 sec 6,88 cpu migration 0,021 sec 7,52 7.724 page fault 0,013 sec 0,38 1.746.260.629 cycle 2,834 ghz 0,53 3.476.315.178 instruction 1,99 insn per cycle 0,05 708.657.380 branch 1150,016 sec 0,08 13.040.195 branch miss 1,84 branch 0,38 0,5625 0,0103 second time elapsed 1,82  ccmail andy.somerville gmail.com",,
95,6a121072ecb7e08c47975ae894966fab82678574,ilian Wolff <mail@milianw.de>, 2020-11-14 13:37:17 +0100, , allow fine grained benchmarking individual parser stage i.e allow parsing given stage quite interesting enables concentrate part parser benchmarking,,
96,61b2cef6e3ea1540920a38c8ed1ec46ab55b8dd2,ilian Wolff <mail@milianw.de>, 2020-11-13 17:26:09 +0100, , find ecm globally allow enabling sanitizers everywhere,,
97,06d2232c559bdbc6c7892e2f0cb19bb716492cbe,ilian Wolff <mail@milianw.de>, 2020-11-13 17:06:46 +0100, , unbreak tst_inject release mode strange reason throw lockcheckfailed directly lead call std terminate yet understood case suspect due heaptrack intercepting memory allocation happens unwinding anyhow throw catch earlier issue seems disappear let prevent odd breakage ...,,
98,6f58d27ea512cc544bc164f9b51fdcddbc675a02,ilian Wolff <mail@milianw.de>, 2020-11-13 16:43:34 +0100, , ensure parser finish tst_parser,,
99,42a1fd39bdec638b06a74db33d5a75e6b0e61ee6,ilian Wolff <mail@milianw.de>, 2020-11-13 16:04:11 +0100, ," optimize symbol lookup stringcache directly lookup function module index instead jumping hoop find symbol code much complicated opinion also significantly faster   performance counter stats home milian project build heaptrack test benchmark bench_parser run 1.255,90 msec task clock 1,053 cpu utilized 0,24 507 context switch 0,404 sec 8,50 146 cpu migration 0,117 sec 6,62 7.961 page fault 0,006 sec 0,01 4.960.717.018 cycle 3,950 ghz 0,20 83,74 55.787.174 stalled cycle frontend 1,12 frontend cycle idle 9,14 82,89 1.223.534.052 stalled cycle backend 24,66 backend cycle idle 1,21 82,35 11.012.433.497 instruction 2,22 insn per cycle 0,11 stalled cycle per insn 0,04 83,38 2.420.439.743 branch 1927,260 sec 0,02 83,80 13.888.812 branch miss 0,57 branch 0,69 83,83 1,19292 0,00411 second time elapsed 0,34    performance counter stats home milian project build heaptrack test benchmark bench_parser run 999,40 msec task clock 1,069 cpu utilized 1,29 579 context switch 0,579 sec 3,87 163 cpu migration 0,163 sec 4,46 8.040 page fault 0,008 sec 0,60 3.903.674.314 cycle 3,906 ghz 0,60 83,77 54.412.444 stalled cycle frontend 1,39 frontend cycle idle 6,15 82,83 297.844.657 stalled cycle backend 7,63 backend cycle idle 2,23 82,22 10.549.026.516 instruction 2,70 insn per cycle 0,03 stalled cycle per insn 0,17 83,40 2.335.048.031 branch 2336,452 sec 0,07 83,94 13.191.375 branch miss 0,56 branch 0,74 83,83 0,9345 0,0116 second time elapsed 1,24  overall roughly faster approach",,
100,40ca61f463cd7a82a59c1bd8d7a14241eb7a1c8c,ilian Wolff <mail@milianw.de>, 2020-11-13 16:01:19 +0100, , push closure otherwise lifetime guaranteed outlive closure,,
101,ae5b6124f736e28208e8054d40065fa00928e97a,ilian Wolff <mail@milianw.de>, 2020-11-13 16:00:24 +0100, , require damn time,,
102,feb86fed23dca87fc471d35ba8fc9b8b11d2a45a,ilian Wolff <mail@milianw.de>, 2020-11-13 15:49:55 +0100, , rate control progress message update emit update pas completion differs least 0.1 previous value otherwise large file would potentially emit million update request add real value take considerable cpu time,,
103,df75751bbc2e47087295d8e411817ff4ca8dfebe,ndrew Somerville <andy.somerville@gmail.com>, 2020-09-29 01:01:53 -0400, , add detailed progress reporting gui parser counting byte stream filter comparing file size provide detailed progress report instead busy bar indicates something parsed,,
104,d2f12bb23356e1b5102c82781fbbbb5f8a3e56b7,ilian Wolff <mail@milianw.de>, 2020-11-13 15:33:16 +0100, , sort peak default,,
105,fbb0a9b45d4ad1bcde12c5df2ec0c8d40040ec15,ilian Wolff <mail@milianw.de>, 2020-11-13 15:11:20 +0100, , copy costheaderview hotspot leverage improves section resize behavior also allows hide show individual cost column,,
106,0f22808ae59f63202999861d3995550cd9109110,u keqiao <keqiaowu@hotmail.com>, 2020-11-05 22:52:51 +0800, , add symbol binary name path chart label,,
107,d72e47781a0a431ee1c1d762afecc84d66931ff1,Ã©rgio Martins <sergio.martins@kdab.com>, 2020-10-21 21:23:21 +0200, , improve error message debuggee found,,
108,d525eee12ee379849ba005a658ec6161c77bff0a,ilian Wolff <mail@milianw.de>, 2020-10-20 09:00:11 +0200, , fix assertion encounter trace index order index current maximum incorrectly mapped second occurrence fix explicitly remembering allocation index maximum index allows keep fast path code time prevents improperly attribution bug 427970,,
109,21c21b825dd8c41b4740cd1988780a38554b8dad,10n daemon script <scripty@kde.org>, 2020-10-04 02:32:42 +0200, , git_silent made message extraction,,
110,b1c20c95cacb1aeda1e59e713ec22a8cad8d44af,ilian Wolff <mail@milianw.de>, 2020-09-27 18:56:45 +0200, , fix typo bottom bottom,,
111,fadba34ce235c650270dab71c30531242382eebb,ilian Wolff <mail@milianw.de>, 2020-09-27 18:40:55 +0200, , leverage std timed_mutex try_lock_for instead using std mutex try_lock this_thread sleep_for call std timed_mutex try_lock_for give semantics directly single call,,
112,512e92c354cc0c6b817bf143f1254df5b519d997,ilian Wolff <mail@milianw.de>, 2020-09-27 18:40:41 +0200, , join line comment,,
113,f15720202591f523c518141f8e7a4ebb511d99f4,ilian Wolff <mail@milianw.de>, 2020-09-27 18:32:35 +0200, , unbreak size histogram filtering,,
114,24e77920aa0e4c7f05723f90a1d756cfcbae1c6d,ilian Wolff <mail@milianw.de>, 2020-09-27 18:01:45 +0200, , open editor location row get activated,,
115,074e4de757ce1cf49cdbee01a3e7aed1179afa68,ilian Wolff <mail@milianw.de>, 2020-09-27 17:58:17 +0200, , use deprecated qprocess startdetached overload,,
116,6b622522c58cffcf0559c44d578557f6e5145f30,ilian Wolff <mail@milianw.de>, 2020-09-21 17:07:31 +0200, , enable fix blurry icon context menu action e.g,,
117,96e04475523def5d24d69e0d694301861284f090,ilian Wolff <mail@milianw.de>, 2020-09-20 19:44:51 +0200, , rename isfiltered,,
118,40a7835dab2120f1dcf950345c121dfce4cb6baf,ilian Wolff <mail@milianw.de>, 2020-09-20 19:40:55 +0200, , generally prevent uninitialized summarydata,,
119,f8e728130e6ba7d86f53a7173f869fd33cb8b1b9,ilian Wolff <mail@milianw.de>, 2020-09-20 19:34:28 +0200, , use cached pixmap interacting chart rubber band huge impact perceived performance selecting time range previously super slow kdiagram slow reparsing large chart butter smooth slightly bright compared normal way drawing chart resizing rubber band think fine,,
120,aa932be8867f8ff545a788e11ee01f67f3321de1,ilian Wolff <mail@milianw.de>, 2020-09-20 18:24:18 +0200, , improve util formattime negative time occur chart sometimes,,
121,aff611f071930fd7fa4ef9268447fe4a5b9486a7,ilian Wolff <mail@milianw.de>, 2020-09-20 18:24:01 +0200, , initialize chartwidget summarydata,,
122,33d973c3b0d037e63976b22f8329b58754cb7710,ilian Wolff <mail@milianw.de>, 2020-09-20 10:40:04 +0200, , show chart current time cost hover status tip,,
123,f20fd188211e62496e43f9beb0896b43a71071a7,ilian Wolff <mail@milianw.de>, 2020-09-20 10:18:08 +0200, , improve tooltip chart widget set proper mouse cursor hopefully better indicates user chart interactive,,
124,31bb00652d47a480b322df5465aea976e25c809c,ilian Wolff <mail@milianw.de>, 2020-09-20 09:58:34 +0200, , update rubber band chart need update ensures rubber band properly get initialized chart shown first time,,
125,17b765fae2afd5f5f2a439e7e1cf8fb5da58b620,ilian Wolff <mail@milianw.de>, 2020-09-19 22:31:16 +0200, , show filtered time range accurate time delta chart widget,,
126,4ef889793a29bbf1b090a209abe68cbf008387a6,ilian Wolff <mail@milianw.de>, 2020-09-19 22:18:15 +0200, , improve time formatting take hour day account optionally,,
127,4c0835dee1a4ff26dcb8fc2fe4846abae011efc1,ilian Wolff <mail@milianw.de>, 2020-09-19 22:05:58 +0200, , use util formatbytes everywhere,,
128,811ad5d37ba9ee30742a5314bb99902014a61fe6,ilian Wolff <mail@milianw.de>, 2020-09-19 21:47:09 +0200, , update summary properly applying filter,,
129,651f7b876d3ac21e877d95f2168631dcf9b221b6,ilian Wolff <mail@milianw.de>, 2020-09-19 21:29:08 +0200, , add filter menu reset filter action,,
130,ecc991374c5a1a6393e299f97d9ee343150f2f5f,ilian Wolff <mail@milianw.de>, 2020-09-19 21:29:04 +0200, , properly set context menu action icon,,
131,ac017cf292da1c10f9d88209630ebc3bc1e29155,ilian Wolff <mail@milianw.de>, 2020-09-19 21:14:56 +0200, , adapt chart legend filtering enabled hopefully make explicitly clear showing delta value subrange axis,,
132,80b776704c88636ad46cdd5f2bf1929fcbcacaf4,ilian Wolff <mail@milianw.de>, 2020-09-15 22:18:27 +0200, , properly format long time stamp summary page,,
133,fd30642bb05891903c60969409c419183c79f1d5,ilian Wolff <mail@milianw.de>, 2020-09-15 22:14:45 +0200, , properly position rubber band mapping wrong add delta subtract,,
134,008beddf1f41cbb3809b83a45a9b334ff068734a,ilian Wolff <mail@milianw.de>, 2020-09-15 22:07:07 +0200, , use custom qrubberband selection overlay much faster custom painting rubber band trigger repaints chart beneath quite costly complex long heaptrack record,,
135,019a97cf3dcafee5cf91349b89b4afb684c0ec5c,ilian Wolff <mail@milianw.de>, 2020-09-14 22:52:27 +0200, , implement time range filtering chart widget seems work need adapted show currently zoomed time range somewhere addition button undo filter easily also large detailed graph painting quite expensive cache chart redo needed,,
136,907625e8ab7506e7b46a9b78ef739033efd8c8f9,ilian Wolff <mail@milianw.de>, 2020-09-14 23:32:55 +0200, , clear chart widget selection clearing data,,
137,c87f832ab50c21062e138af32c55299a57259403,ilian Wolff <mail@milianw.de>, 2020-09-13 21:54:07 +0200, , keep data around potential future reparse lie foundation filtering time range future ignore event outside selected time range instead show difference start end end time accounting allocation event within range,,
138,753c24d93a8ca12ec8c07631c8c027a2010f8a1b,ilian Wolff <mail@milianw.de>, 2020-09-14 20:42:41 +0200, , clarify last timestamp notification via boolean parameter ensures properly handle last timestamp even filtering future,,
139,0128d24cf1b9216900c162f0d4369e1cb8ce962e,ilian Wolff <mail@milianw.de>, 2020-09-13 21:33:44 +0200, , add comment parserdata,,
140,a81929715327667c7887fb3f583f131c3c0d6b31,ilian Wolff <mail@milianw.de>, 2020-09-12 23:41:39 +0200, , show total start end delta cost chart selection tooltips way easily measure delta total cost given time range,,
141,354fa21149f834283402f1bac4cec5443322b60e,ilian Wolff <mail@milianw.de>, 2020-09-12 23:08:23 +0200, , sync time selection chart,,
142,4854ea356dea2eeed08f2fa4436d498dbfa0caa9,ilian Wolff <mail@milianw.de>, 2020-09-12 22:59:52 +0200, , implement time range selection chart widget show start end time value well time difference,,
143,6adfa2881f15521afbfd045726b50cc7fff179a9,ilian Wolff <mail@milianw.de>, 2020-09-12 22:59:18 +0200, , disable rubber band zooming pretty useless let replace something else,,
144,981495c308b91d5d01577c087126ac6a17526166,ilian Wolff <mail@milianw.de>, 2020-09-11 22:22:54 +0200, , fix compile warning qflags ctor take windowflags param need,,
145,61ac871ef038394f65c2763159b914f30fd111a4,10n daemon script <scripty@kde.org>, 2020-09-11 06:01:12 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
146,877295b2891960291e34495636b0b5e771801b9d,10n daemon script <scripty@kde.org>, 2020-09-11 02:31:12 +0200, , git_silent made message extraction,,
147,1c2d406387dc59e7ebba727fd42a647f2f38bba4,ilian Wolff <mail@milianw.de>, 2020-09-03 10:05:46 +0200, , merge branch 1.2 master,,
148,7b115f93174872fa3cd64a28042d25e5b339e7a7,ilian Wolff <mail@milianw.de>, 2020-09-03 09:54:15 +0200, , use docker build travis,,
149,88b1f15f885c2c796a106dac1b1a538cb4430370,ilian Wolff <mail@milianw.de>, 2020-09-02 22:43:42 +0200, , actually make appimage build script work upgrade gcc 4.9 allow building libunwind need relies stdatomic.h use tarball instead git clone workaround failed error finally use kdiagram 2.6 still compatible old ecm use builder,,
150,8eeb57a521f78ec4b397468b54bc0945c62fa0e3,ilian Wolff <mail@milianw.de>, 2020-09-01 16:42:00 +0200, , update invent.kde.org,,
151,bc9e3744bcc47de978673d1e382f4125a1ab5fa8,10n daemon script <scripty@kde.org>, 2020-08-06 09:25:51 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
152,c9699aa3d8e975abc37683d79bb2960807da2ff2,10n daemon script <scripty@kde.org>, 2020-08-06 06:05:48 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
153,a363aa78ecffd213640c32b1b48c3d4563f783e8,10n daemon script <scripty@kde.org>, 2020-07-13 02:29:08 +0200, , git_silent made message extraction,,
154,22f6bd6ff6782026e33f4250d0aa81e07a8da8e6,10n daemon script <scripty@kde.org>, 2020-07-11 02:22:19 +0200, , git_silent made message extraction,,
155,c2101fc674d1154c4a4114109363f51721e65d18,10n daemon script <scripty@kde.org>, 2020-06-24 05:58:59 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
156,687fd892c674494f11dded4c14ce65ab18ae62d2,10n daemon script <scripty@kde.org>, 2020-06-24 02:17:46 +0200, , git_silent made message extraction,,
157,1ea17c3c960f6f4fe47e4bd10ac55e343993351a,10n daemon script <scripty@kde.org>, 2020-06-18 08:34:01 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
158,d439c840a6000d8d7b2c6169bd50f698f6bc3941,10n daemon script <scripty@kde.org>, 2020-06-18 07:19:31 +0200, , git_silent made message extraction,,
159,3bf5dd54863a9f6bbfa66214561dcf4a4950b7d0,10n daemon script <scripty@kde.org>, 2020-06-18 05:47:47 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
160,fd79ad2c93cd7f284e3c20bd0051d6e03b27707a,10n daemon script <scripty@kde.org>, 2020-06-18 02:27:43 +0200, , git_silent made message extraction,,
161,a993f2909884dc7cead9acec2eb8b8117f4b0536,10n daemon script <scripty@kde.org>, 2020-06-17 16:56:28 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
162,415611df8f239ddf9ac56484d9698e60502e6e21,10n daemon script <scripty@kde.org>, 2020-06-17 15:40:05 +0200, , git_silent made message extraction,,
163,b38147ca74e2cd39acf5d183177835a9679fd507,10n daemon script <scripty@kde.org>, 2020-06-17 14:15:10 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
164,7776b9e5ce9c940c265e8958975a28f4a3ce5898,10n daemon script <scripty@kde.org>, 2020-06-17 11:40:31 +0200, , git_silent made message extraction,,
165,d0c2e2c22cb4d6b9eedbd91faaef5bba6f777efe,artin Juul <martin@juul.xyz>, 2020-05-30 16:59:07 +0200, , fix path macos caveat script script doe exist anymore renamed caveats.sh kde tap,,
166,87f815551269032e9fc9b2fa22f0173f14103c7d,uri Chornoivan <yurchor@ukr.net>, 2020-05-20 17:52:32 +0300, , git_silent add heaptrack icon repository logo,,
167,b0f8f2d39b88802e7c84ca0999f9c1ccd020297c,arl Schwan <carl@carlschwan.eu>, 2020-05-08 12:51:02 +0200, , fix update deprecated license identifier,,
168,8a64314941d7ee78cc37506e9c1b213989d0f142,10n daemon script <scripty@kde.org>, 2020-05-08 09:10:46 +0200, , git_silent made message extraction,,
169,4cec5bcf7c7c26e41d9857ad3295aa91d88b6f8b,10n daemon script <scripty@kde.org>, 2020-05-08 02:53:37 +0200, , git_silent made message extraction,,
170,5f6b14f55587204e18a832a8dc0cf258789da9a9,10n daemon script <scripty@kde.org>, 2020-04-14 08:49:03 +0200, , git_silent made message extraction,,
171,c17be0b77eeca905b227a2a88eb04c57f89427ed,10n daemon script <scripty@kde.org>, 2020-04-14 02:50:11 +0200, , git_silent made message extraction,,
172,eaa628d840c6c144b77d552ab5556e1a1461303b,ichael Friedrich <michael.friedrich@gmail.com>, 2019-12-10 15:00:24 +0100, , boost zstd add boost include dirs without patch boost includes found tested rhel7 epel boost located usr include boost169,,
173,94ec7af41e03bad489e0287b0266345b1bbde248,reg V <greg@unrelenting.technology>, 2020-04-01 22:33:53 +0300, , test add missing unistd include valloc,,
174,b5ab21b785c892b3cd04401918d6ff12817c109c,reg V <greg@unrelenting.technology>, 2020-04-01 21:29:56 +0300, , enable building tracker freebsd default,,
175,a35ca54da64c185c27e5e3af644fc3119ff42dea,reg V <greg@unrelenting.technology>, 2020-04-01 22:30:49 +0300, , implement path args gathering freebsd note using namespace std good thread freebsd header collides std thread,,
176,9e775a81aea67b880394452bceaf2be01ac4f3f6,reg V <greg@unrelenting.technology>, 2020-04-01 21:14:21 +0300, , add support injection freebsd,,
177,eba27eb4ec4062d7a3c43a4c2f0d4c5d7936fb31,reg V <greg@unrelenting.technology>, 2020-04-01 21:29:20 +0300, , flock separate lockfile freebsd since flocking pipe eopnotsupp,,
178,b39ddbb92cdb573e5d7b7a06887d7e26fd48fb50,reg V <greg@unrelenting.technology>, 2020-04-01 20:56:35 +0300, , handle raw elf offset freebsd rtld store,,
179,ec934831a3dd2cff302bb434d6c1e0a2d8208942,reg V <greg@unrelenting.technology>, 2020-04-01 18:24:52 +0300, , redefine elf_r_sym already defined freebsd,,
180,b39c67d20a13fa6f5bac3f6957030ae9bec788c1,reg V <greg@unrelenting.technology>, 2020-04-01 18:24:19 +0300, , define elfw macro undefined freebsd,,
181,665accde994905f201b6cff2f49c6ec2dff169fd,reg V <greg@unrelenting.technology>, 2020-04-01 18:18:17 +0300, , use noexcept attribute libc function clang hard error clang e.g call_libc.cpp error exception specification declaration doe match previous declaration int put const char str noexcept  usr include stdio.h 279 note previous declaration int put const char ,,
182,82e687628d0452e0a7ab8af9fd0453586f6b9fca,reg V <greg@unrelenting.technology>, 2020-04-01 18:17:00 +0300, , initialize calloc hook heaptrack_init heaptrack_init lock mutex freebsd call libpthread initialization call calloc hook set yet recurses infinitely,,
183,f909afaee8a3b9e6d71576d10b50fb864953f393,reg V <greg@unrelenting.technology>, 2020-04-01 18:13:29 +0300, , implement gettid freebsd using pthread_np,,
184,52fbb4f470e01596b569aec537814de93c0ccd6c,reg V <greg@unrelenting.technology>, 2020-04-01 18:07:30 +0300, , libbacktrace ifdef currently defined freebsd,,
185,f6f0d2c4e7e5c7447300e85818becbe883e9a33c,reg V <greg@unrelenting.technology>, 2020-04-01 18:05:53 +0300, , build libbacktrace have_stdint_h support freebsd nobody expects build system without stdint.h let define unconditionally,,
186,72eb9d94e8ddac4d5cd5268585872a61eb1d672b,reg V <greg@unrelenting.technology>, 2020-04-01 18:11:21 +0300, , inject include malloc.h file seem use linux specific feature like mallinfo remove use deprecated posix header cause hard error freebsd,,
187,30523d31b326cf0b912a997f20d569b04ed03f42,reg V <greg@unrelenting.technology>, 2020-04-01 18:14:34 +0300, , add missing unistd include,,
188,97782d6195f562609c1d74089c4aec55566a5333,reg V <greg@unrelenting.technology>, 2020-04-01 18:03:06 +0300, , use stdio_ext linux,,
189,f8d9e665196614b606eaab9c6fc81d65a88a2af1,10n daemon script <scripty@kde.org>, 2020-02-04 06:02:27 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
190,1691cdd142d3c9be7f9e467ee4710101108c346c,hmad Samir <a.samirh78@gmail.com>, 2020-01-10 20:29:26 +0200, , port summary use instead acceptrow set true default test plan make ctest reviewer mwolff reviewed mwolff maniphest task t12269 differential revision http d26568,,
191,9c4b8bc57bb6938ec4866ff2a037d26c05605d50,10n daemon script <scripty@kde.org>, 2020-01-22 06:10:52 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
192,3ab55dfb5d86a29d52919045fbb60c4302c5f19d,10n daemon script <scripty@kde.org>, 2020-01-08 06:13:53 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
193,d0761570d3992283f8001b63c52717839c25fc6e,10n daemon script <scripty@kde.org>, 2020-01-08 02:50:37 +0100, , git_silent made message extraction,,
194,ecf7dfa85e67ef7efe158b21a526e84be0808e3d,ilian Wolff <mail@milianw.de>, 2020-01-07 13:06:07 +0100, , merge branch 1.2,,
195,33da3a68d899facce613da1e01aed085f1dc10e8,ilian Wolff <mail@milianw.de>, 2020-01-07 13:04:53 +0100, , prevent compiler optimizing away allocation tst_inject bug 412954,,
196,de2c9f760c82e54da2d73d43a0f5e1a8b411978c,10n daemon script <scripty@kde.org>, 2019-12-06 09:10:18 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
197,769b5787bd98dfe1f3159d39231c2b5b1063fc2b,10n daemon script <scripty@kde.org>, 2019-12-06 07:59:14 +0100, , git_silent made message extraction,,
198,d4cce9a25575630bf2ba1947735b94475096d8fd,10n daemon script <scripty@kde.org>, 2019-12-05 02:41:21 +0100, , git_silent made message extraction,,
199,4df3bf969d91eb02ff2a40948bf346c58fe06dfb,ilian Wolff <milian.wolff@kdab.com>, 2019-12-02 17:56:29 +0100, , set version 1.2.80 i.e 1.3 alpha,,
200,9c90967be5081702336e97725b61c3ea28117fa7,ilian Wolff <milian.wolff@kdab.com>, 2019-12-02 17:44:37 +0100, , copy recent elf.h docker get libunwind zlib support,,
201,cb4c48b03d19e75ce9804d7add6c09b25574b813,ilian Wolff <milian.wolff@kdab.com>, 2019-12-02 17:15:40 +0100, , set version 1.2.0,,
202,4f1e9784e81395f5decb36952312b80ab665905c,ilian Wolff <mail@milianw.de>, 2019-12-02 17:10:50 +0100, , merge branch 1.1,,
203,e02e1a25aa95a63bb0ba8b8c7753ebe433b53d44,ilian Wolff <mail@milianw.de>, 2019-12-02 17:07:33 +0100, , use new heaptrack icon,,
204,01a5bcdbcb6e1251b6c44e1e589c389ba2d2d14b,ilian Wolff <mail@milianw.de>, 2019-12-02 16:45:14 +0100, , fix potential source uninitialized memory remove following compiler warning file included heaptrack src analyze heaptrack src analyze function int anonymous const traceindex const const traceindex const ipmapper ipmapper const const heaptrack src analyze warning void anonymous .frame lineâ may used uninitialized function wmaybe uninitialized line rhs.line ,,
205,857ac706587fb61cb01ef582f35b617e8c3de603,ilian Wolff <mail@milianw.de>, 2019-12-02 16:27:40 +0100, , port away deprecated qmodelindex child api,,
206,bbd3586cdaf2c681eea602fba049f4b3a9e9f0a2,ilian Wolff <mail@milianw.de>, 2019-12-02 16:23:20 +0100, , port away deprecated qtreeview sortbycolumn int api,,
207,47692644c587518b9fc95f7310353a9c5f71cfab,ilian Wolff <mail@milianw.de>, 2019-12-02 16:06:19 +0100, , fix compile centos 7.7 explicitly open std namespace specialize std hash bug 412954,,
208,fabfdf9cca3939f05d2d2add5b4c40bfbc980b72,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-09-19 20:12:40 +0300, , remove unused include dir,,
209,1e15381f426ead6095e70025979ff4e5247b8240,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-09-02 19:13:48 +0300, , fix building prepares build android,,
210,e65e358cfd45ff0f368994ff98672ec6654feeee,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-09-02 16:54:28 +0300, , add heaptrack_ pause resume api used client application optimize getting place recorded avoiding collecting trace logging,,
211,ae54d99af368198d7ab152baa4403959557072df,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-09-02 15:18:25 +0300, , check valloc stdlib.h,,
212,db6403f542c0911885ffa6331a43665af9d0995a,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-09-02 15:12:35 +0300, , build option,,
213,8023779f9a3be349975bd5b68088b6c0ba0ea0f1,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-08-29 13:14:00 +0300, ," optionally use unwind_tables instead libunwind used platform libunwind available make heaptrack functional performance really bad unwind_tables  perf stat bin heaptrack test manual threaded heaptrack output written home milian project src heaptrack build unwind table starting application might take time ... heaptrack stats allocation 403359 leaked allocation temporary allocation heaptrack finished run following investigate data heaptrack analyze home milian project src heaptrack build unwind table performance counter stats bin heaptrack test manual threaded 10.563,39 msec task clock 3,828 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 11.483 page fault 0,001 sec 13.180.119.787 cycle 1,248 ghz 11.499.050.817 instruction 0,87 insn per cycle 2.617.513.665 branch 247,791 sec 41.612.348 branch miss 1,59 branch 2,759435712 second time elapsed 6,641991000 second user 3,927803000 second sys  libunwind  perf stat heaptrack test manual threaded heaptrack output written home milian project build heaptrack starting application might take time ... heaptrack stats allocation 403293 leaked allocation temporary allocation heaptrack finished run following investigate data heaptrack analyze home milian project build heaptrack performance counter stats heaptrack test manual threaded 1.336,98 msec task clock 2,730 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 36.905 page fault 0,028 sec 1.909.003.446 cycle 1,428 ghz 2.485.908.851 instruction 1,30 insn per cycle 448.570.458 branch 335,510 sec 4.876.436 branch miss 1,09 branch 0,489731820 second time elapsed 0,798096000 second user 0,564706000 second sys  seen using libunwind roughly faster heaptrack test case machine",,
214,8cfa8f557fb5910174353e5efd3f46ed6dcbeea4,olodymyr Nikolaichuk <nikolaychuk.volodymyr@gmail.com>, 2019-08-23 16:34:47 +0300, , remove unused reference libbacktrace libunwind,,
215,4f9e7bed7b47c6a39a519bbc09535f7fdf1a1811,10n daemon script <scripty@kde.org>, 2019-10-20 07:35:39 +0200, , git_silent made message extraction,,
216,52e251ccba42ed7cd696755a518e82c1c94f4fb1,10n daemon script <scripty@kde.org>, 2019-10-20 02:44:38 +0200, , git_silent made message extraction,,
217,2d14f5de75b9dae33be0e782bcec043794e3f5e7,am Saffron <sam.saffron@gmail.com>, 2019-10-14 15:41:06 +1100, , allow high priv user profile low priv user process case root may attach non root process case need ensure pipe written process profiled bug 412742,,
218,715edab31dde248e8f45040a57686fa834202176,ilian Wolff <milian.wolff@kdab.com>, 2019-10-15 11:26:57 +0200, , add icon,,
219,983cc35dd000a8219e0d5713ab0a0d298af59c97,astian Beischer <beischer@physik.rwth-aachen.de>, 2019-10-13 21:27:24 +0200, , declare new hash function namespace std order fix build fix ... src analyze gui parser.cpp error explicit specialization template class _tp struct std hashâ outside namespace must use nested name specifier fpermissive struct hash qstring  seen gcc 9.2.0 arch linux reviewer dvratil mwolff reviewed mwolff differential revision http d24532,,
220,496047cdfd1c77d1cea7b923fc8beb22dd2daac0,aniel VrÃ¡til <dvratil@kde.org>, 2019-10-09 10:07:12 +0200, , fix build without std hash qstring specialization summary std hash specialization type introduced 5.14 appears build older need specialize std hash test plan master build 5.12.5 reviewer mwolff reviewed mwolff differential revision http d24491,,
221,8df827a2818187e18b26ec3c46d2143301148aec,avid Faure <faure@kde.org>, 2019-10-03 19:37:16 +0200, , add test parser bottom top data test plan test pass reviewer mwolff reviewed mwolff differential revision http d24396,,
222,84bb2cde32d6622bcee872380a8897d75ed24ed3,avid Faure <faure@kde.org>, 2019-09-24 17:15:39 +0200, , fix previous commit actually use unordered map pushed wrong version,,
223,39da3a97e4028f6423028ab0f4f03b311452e281,avid Faure <faure@kde.org>, 2019-09-20 18:25:37 +0200, , add symbol order make hashing faster summary 157m cycle 252m instruction 42.93 136m cycle 165m instruction 38.34 test plan perf stat bench_parser still show 365 entry 2896 allocation unlike whenever introduced bug useful check reviewer mwolff reviewed mwolff differential revision http d24099,,
224,b2371b6bcafcc22fc7e47e3939547a65919815fa,avid Faure <faure@kde.org>, 2019-09-19 23:49:06 +0200, , replace std tie operator summary 136m cycle 165m instruction 38.34 125m cycle 161m instruction clearly get inlined ... gcc 7.4.1 relwithdebinfo build reviewer mwolff reviewed mwolff differential revision http d24104,,
225,b2d806202cc45366497d1b4154025f56b55a6a9d,avid Faure <faure@kde.org>, 2019-09-22 03:58:46 +0200, , add unittest parser summary make sure optimization break actual parsing neither confirm deny bug operator commit port unordered_map point due instead ... reviewer mwolff reviewed mwolff differential revision http d24105,,
226,e39a9529082b10f0ae81eee3de89872156bd687a,avid Faure <faure@kde.org>, 2019-09-19 19:42:55 +0200, , use static variable frequent i18n call test plan perf stat bench_parser 160m cycle 259m instruction 43.58ms 157m cycle 252m instruction 42.93ms reviewer mwolff reviewed mwolff differential revision http d24095,,
227,aa201842987be14daf09d4a54e96e14d8b6aed7e,avid Faure <faure@kde.org>, 2019-09-20 16:21:26 +0200, , add benchmark parser summary useful future optimization work reviewer mwolff reviewed mwolff differential revision http d24093,,
228,33a25cddfc19f0d251cfef075b821991e5b75b59,avid Faure <faure@kde.org>, 2019-09-20 14:04:56 +0200, , provide progress information merging allocation phase summary take long time needed progress information see enough ram let finish never going work interestingly show loop becomes slower slower test plan heaptrack kmail read email quit reviewer mwolff reviewed mwolff differential revision http d24088,,
229,e2d0c0f698e231d6f09a0d280928593ac8466392,ilian Wolff <mail@milianw.de>, 2019-09-17 18:54:21 -0600, , show flame graph tooltip empty region,,
230,cb50367ac1f13652ebb01fcb4dd51a277dac5055,ilian Wolff <mail@milianw.de>, 2019-09-17 18:49:46 -0600, , show empty parens top flame graph item description,,
231,f33ac9f63de8d18ef691834705a959c24b13e3c4,ilian Wolff <mail@milianw.de>, 2019-09-17 13:25:56 -0600, , correctly check boost iostreams fix zstd support,,
232,ffbccca9df28bc8b58585cd45cbe073741c74f5b,ilian Wolff <mail@milianw.de>, 2019-09-15 22:07:27 -0600, , correctly find item cursor flame graph context menu,,
233,6dd3f959d4d4845bd54ad73742aa58a19870de1d,10n daemon script <scripty@kde.org>, 2019-08-11 04:48:02 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
234,9577ff8b4dc053d015e402b8c3df51da0888c4ae,10n daemon script <scripty@kde.org>, 2019-08-04 02:41:50 +0200, , git_silent made message extraction,,
235,ad34579bd75a035c03810dc1dc94f633d62de136,10n daemon script <scripty@kde.org>, 2019-07-31 07:46:23 +0200, , git_silent made message extraction,,
236,42386db5cfad307c590fb3fdb6c0b2e4867afa03,10n daemon script <scripty@kde.org>, 2019-07-31 02:45:31 +0200, , git_silent made message extraction,,
237,c86184d9e1a66afbf940bad482ec838e7afd4548,ilian Wolff <milian.wolff@kdab.com>, 2019-06-24 11:19:55 +0200, , skip whole branch collapsing flamegraph recursion continue handle child item skip frame due recursion detection bit recursion could still end different frame,,
238,e77592119607d6533e0b43ee3657f5695ce15d48,10n daemon script <scripty@kde.org>, 2019-06-17 05:10:38 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
239,b739845b32fa2f1d4a93b35f6d725697bc3bab86,10n daemon script <scripty@kde.org>, 2019-06-17 02:44:10 +0200, , git_silent made message extraction,,
240,b29c034bf470891030c8978c11fdc17a1f65afd4,10n daemon script <scripty@kde.org>, 2019-06-06 05:10:47 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
241,27ef22f3b922f0ab699d797597a11b9487bb528a,10n daemon script <scripty@kde.org>, 2019-06-06 02:50:16 +0200, , git_silent made message extraction,,
242,f6f0be26627fdce09576b11bd873760be0e1a5d7,10n daemon script <scripty@kde.org>, 2019-05-30 07:15:12 +0200, , git_silent made message extraction,,
243,fa83f35322fed5c5e6ce5ae1ed5c6018ec33aaae,10n daemon script <scripty@kde.org>, 2019-05-30 02:51:53 +0200, , git_silent made message extraction,,
244,8aa97c2931d91b8e2b10984e04ddbd3adcade852,arle Aase <jarle@jgaa.com>, 2019-05-25 09:09:58 +0300, , add output option heaptrack used specify data written,,
245,34175cdd39767dce1f4b5c37a839291cfe191ac0,ergio Martins <iamsergio@gmail.com>, 2019-05-26 01:57:04 +0100, , fix build msvc heaptrack gui useful window view result winheaptrack also running embedded linux device ccmail milian.wolff kdab.com,,
246,f540b95cc7446fbf41b4b3fa9b6f275b580de638,ergio Martins <smartins@kde.org>, 2019-05-26 01:48:21 +0100, , use unsigned int instead uint former cross platform make buildable msvc couple place need typedef,,
247,50022eda861108102baa789e836c654c8e6733ef,10n daemon script <scripty@kde.org>, 2019-05-20 09:12:07 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
248,987d9c4afe29d1c256d340abee929c8565f977a6,10n daemon script <scripty@kde.org>, 2019-05-20 05:29:12 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
249,a27fffe0e608438e06744c9cc1a78f879a9d3ff7,ilian Wolff <mail@milianw.de>, 2019-03-22 09:49:01 +0100, , mark overridden method,,
250,f8aab10aa87aa3f414b0683d6c9722cef8b91849,ilian Wolff <mail@milianw.de>, 2019-02-27 22:47:43 +0100, , copy zstd correct appimage folder,,
251,9e234f041fc9982fa0a6cbdb8342d8a006994a98,ilian Wolff <mail@milianw.de>, 2019-02-27 22:45:56 +0100, , build kdchart example test,,
252,f1c0636445148553360b2494cd008b80cd768a76,ilian Wolff <mail@milianw.de>, 2019-02-27 22:44:23 +0100, , build kgantt,,
253,3ae20c056629dfaadc503583d8d74d7583acfd8d,ilian Wolff <mail@milianw.de>, 2019-02-27 22:34:36 +0100, , use git instead http checkout kde,,
254,bb21f3f89fb8af360de94cc3839f0a6d82db0380,ilian Wolff <mail@milianw.de>, 2019-02-27 22:24:40 +0100, , make wget chatty,,
255,9efe21c4ae4087483c9e5c1261c6953409fb99ec,ilian Wolff <mail@milianw.de>, 2019-02-27 22:23:23 +0100, , silently copy icon,,
256,047ce1cb07452ebf5be2fa61a315ca7df6d6bd99,ilian Wolff <mail@milianw.de>, 2019-02-27 22:21:00 +0100, , build kdiagram source,,
257,1dc3aead87d328eff7dad2b400d2f2046868952b,ilian Wolff <mail@milianw.de>, 2019-02-27 22:20:54 +0100, , merge line ecm build,,
258,6274d849be1e28aa8273688812529ab977ce30fb,ilian Wolff <mail@milianw.de>, 2019-02-27 22:08:54 +0100, , use sudo install,,
259,8b59d2b8f8bce8fc10fdba0e77dd2530c039b8cc,ilian Wolff <mail@milianw.de>, 2019-02-27 22:07:05 +0100, , use hardcoded prefix travis.ci,,
260,c9f8e77f405313cbfd8066339296631133fc57c3,ilian Wolff <mail@milianw.de>, 2019-02-27 22:06:47 +0100, , include zstd binary appimage,,
261,ba4a2991c7211f3d0b8e6f260fb47fbecc054dc8,ilian Wolff <mail@milianw.de>, 2019-02-27 22:03:58 +0100, , try fix kdiagram integration travis.ci appimage,,
262,bc62fe7e01fb94314686faf7d25f7e2e276d235b,ilian Wolff <mail@milianw.de>, 2019-02-27 22:03:46 +0100, , build zstd heaptrack appimage,,
263,98562677883e75c15c6ef83a0134a043d1b67e38,10n daemon script <scripty@kde.org>, 2019-02-25 07:32:20 +0100, , git_silent made message extraction,,
264,c8a220ff4786d8a8cb1712d29c330d8822a8d286,10n daemon script <scripty@kde.org>, 2019-02-25 03:17:21 +0100, , git_silent made message extraction,,
265,2d7003e6b73e3e8dda2a743c2a4d11e14a7f7722,10n daemon script <scripty@kde.org>, 2019-02-24 07:08:49 +0100, , git_silent made message extraction,,
266,cff420dad0438002f8d29aac6cb654699c5b17b2,ilian Wolff <mail@milianw.de>, 2019-02-11 11:24:22 +0100, , upload correct file github,,
267,38263a2a43b48315fa1ec032e8bb91e3a46de49c,ilian Wolff <mail@milianw.de>, 2019-02-11 11:04:50 +0100, , use uploadtool instead transfer.sh deployment,,
268,99a410b705be18ccaf82e4d7a343d4a6554e89d5,riedrich W. H. Kossebau <kossebau@kde.org>, 2019-02-05 04:28:00 +0100, , heaptrack_gui set direct window icon also new icon,,
269,30ca42deadcb3bf0a73cd37806ceca5d290fbbce,riedrich W. H. Kossebau <kossebau@kde.org>, 2019-02-05 04:23:58 +0100, , add correct desktopfilename property heaptrack_gui,,
270,3f193356c821b8ff9ad1dfdf9ab0b75c5c5fb304,riedrich W. H. Kossebau <kossebau@kde.org>, 2019-02-05 04:10:56 +0100, , duplicate work kaboutdata,,
271,f2349d480fc30cf55281218b2b8063c4e5207abb,riedrich W. H. Kossebau <kossebau@kde.org>, 2019-02-05 04:08:55 +0100, , set startupwmclass desktop file used non plasma unixoid based shell map window desktop file e.g launcher uis know instead expect one wm_class entry match basename desktop file default startupwmclass overwrites default,,
272,971573cd8283d80d0ea5dcc360aa9b654326390e,10n daemon script <scripty@kde.org>, 2019-01-24 03:00:26 +0100, , git_silent made message extraction,,
273,c8d7254d4fc60444854ee0b1746ae8bec8d69a56,10n daemon script <scripty@kde.org>, 2019-01-20 07:33:45 +0100, , git_silent made message extraction,,
274,3816dfc2bd25f6cf8ad92c57d17288b2761c0c27,ascha Kolewa <blakharaz@anfractus.de>, 2018-12-17 12:24:22 +0100, , add documentation build heaptrack_gui macos homebrew get kde dependency easy way,,
275,952261f82617745cf455ffacee75adc16c9656bb,ascha Kolewa <blakharaz@anfractus.de>, 2018-12-17 11:43:45 +0100, , add build option allow building also non linux system disable track interpret module linux allow disable building heaptrack_print cross compiling e.g embedded target analyzer needed platform allow disable building test,,
276,a825175fd445c4c2a1c54b44cc71de43bc904947,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 14:05:51 +0100, , allow diffing using heaptrack filea fileb previously omitted arg scenario,,
277,b6a65089482953fc182e6848d0a6f9b4cc0226e6,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 14:05:23 +0100, , send .git folder docker,,
278,5604de23b72b0c3c09b10ad42f83fa6120f32447,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 13:22:08 +0100, , ignore thing default like appimages data file,,
279,d995cdac6e8d06c12c3159e6f38361cc87368975,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 13:20:15 +0100, , add dockerignore file exclude build artifact,,
280,36782353662073a11b6d7d2419c3d5cb9266de46,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 13:19:37 +0100, , add heaptrack namespace intermediate docker image,,
281,f66157bfc6a623efbffe528683a4bc34f1d409c0,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 13:08:35 +0100, , use correct prefix appimage icon,,
282,5ccc0bd34db6875ebb5cbb90f273ca08ab05734e,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:52:20 +0100, , update travis file,,
283,a0da7288bac9c665526183e45ea6ff52d534c82b,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:46:39 +0100, , embed breeze icon appimage,,
284,4c7958bb55b8ff9e31fee8cd72992278f5d64443,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:46:00 +0100, , fix launching ide editor appimage cleanup environment case prevent launched subprocess inheriting appimage env custom,,
285,010fd45e6286833438efd316c258f698685db478,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:33:56 +0100, , allow opening file custom ide editor copy behavior hotspot gammaray specify editor ide use setting menu big advantage allows open file specific line possible via,,
286,d9b00afc35311ed90e238ce42b1622c0bf3b0341,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:18:14 +0100, , unbreak opening file source map convert fileline string display purpose store fileline sourcemap model otherwise,,
287,2bbd18d716b8497c65902a602f83d29238446eab,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:08:00 +0100, , make apt docker non interactive silence warning,,
288,a0b5053e0b4ee35e8ca9da31aabaef69335f34ec,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:07:31 +0100, , update dockerfile use 5.10.1,,
289,2078f513c9de3ef99617c12adf010aedaf0b1636,ilian Wolff <milian.wolff@kdab.com>, 2019-01-09 11:06:31 +0100, , fix compile older compiler fix error requires space string literal macro,,
290,c6bf39bc9ca588bb9f0f62f04b223da95211ad42,uri Chornoivan <yurchor@ukr.net>, 2019-01-09 09:09:40 +0200, , fix minor typo,,
291,7fa3c078ec09210cfb2c5f534f6d79f35e53cb62,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 17:17:16 +0100, , use remapped frame diff algorithm use actual remapped frame lead broken string mapping larger data file,,
292,1517faae303ed4784a253d62997a0b8f00e4f00a,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 16:48:16 +0100, , fix caller callee view diff mode want sort absolute unsigned value need support negative value displaying data user,,
293,899852aeaf36d6a2dedbc3c07d21358a5831a755,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 16:16:42 +0100, , show location data one column caller callee view merge symbol name binary like tree view already,,
294,c99589ea2175c8b21bf605d9c369a2112c4e543a,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 15:56:45 +0100, , reorder tree model column show memory consumption column peak leaked column number temporary allocation make view resemble caller callee view closely,,
295,b726e9ec2825caaa5f21a518c5927d2d71dd90b5,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 15:42:24 +0100, , add context menu entry jump caller callee view flame graph action greatly simplifies analysis routine using flame graph previously one manually search given entry caller callee view find source location use context menu jump caller callee view open editor given source location source map view aggregate flame graph item symbol instead function name useful anyhow since see dso given function correlate,,
296,42c537486ab95f994a6c8bca233563ce30934c15,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 15:25:12 +0100, , add context menu quickly jump caller callee view allows inspect source location given symbol right click jump caller callee view inspect source location,,
297,bcf4c3d7f176db0c37dac0ba3d3637028a75af3b,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 15:10:00 +0100, , also group tree model entry symbol previously aggregated tree model data symbol file line mostly done historic reason place existed show file line information show data source map caller callee view allows remove file line tree model two big advantage first tree become smaller entry get merged reduce memory consumption significantly case second tree view become way useful diffing two data file usually line number match anymore aggregating symbol level suffer problem heaptrack behaves like hotspot gui data aggregation also make easier use teach tool tandem,,
298,0f373a8a9ea6ddc06124a55085fea29c62ef7ce9,ilian Wolff <milian.wolff@kdab.com>, 2019-01-08 10:10:30 +0100, , overhaul data aggregation caller callee view group entry symbol show distinct caller callee view file line data shown separate location view make caller callee view look like view hotspot much ergonomic opinion additionally allows group symbol also view like hotspot done follow commits end result use dramatically memory since tree become much smaller aggregate symbol additionally diff view much ergonomic use since see per symbol diffs get confused line number changed,,
299,b8eb4fc0361a73711cfaefdd1b0221204ac38ca2,ilian Wolff <milian.wolff@kdab.com>, 2019-01-07 16:06:12 +0100, , introduce util helper,,
300,0aace04f7b62c4b25397660e68f50b0734c8007c,ilian Wolff <milian.wolff@kdab.com>, 2019-01-07 14:22:50 +0100, , reword overall flame graph label peak memory consumption label represents overall total partial contribution total,,
301,7f9413f19fdb5b5ec5155ef79560ffe871ca3c9d,ilian Wolff <milian.wolff@kdab.com>, 2019-01-07 14:18:33 +0100, , remove allocated cost metric overall byte allocated cost metric really useful practice clutter real gain last year kept teaching heaptrack saying ignore metric let simplify tool removing useless data,,
302,3ec2cd4ca73eb2697e4041a4b2e182c4d448f212,ilian Wolff <milian.wolff@kdab.com>, 2019-01-07 14:01:55 +0100, , reorder cost type flame graph use memory peak contribution default cost type follow leaked memory allocation temporary allocation finally allocated memory order also use data table already,,
303,cdb60c71801e64085d604d8fda078656a9a3367c,10n daemon script <scripty@kde.org>, 2019-01-06 08:38:08 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
304,ecb1ede467c9a749bd1f0ce0db0e6322090e2ac9,10n daemon script <scripty@kde.org>, 2019-01-06 05:30:08 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
305,a4930b6cf155d9225ccad85d131e0b788e22dc29,10n daemon script <scripty@kde.org>, 2018-12-30 02:54:04 +0100, , git_silent made message extraction,,
306,f6a3479b6f91cdee5a650cbd719834dfcbc6102e,ebastian Biallas <sb@biallas.net>, 2018-12-18 00:50:59 +0100, , remove noop memset memset useful debugging ensure anything wrong bookkeeping remove small performance win,,
307,0b1d07b1a6872648a63833de6292904b704a8ab6,ebastian Biallas <sb@biallas.net>, 2018-12-18 00:43:15 +0100, , allow writing arbitrary long string linewriter write function take formatted string support string buffer_capacity size write symbol string arbitrarily large thanks template magic case introduce new overload print std string directly bypassing buffer,,
308,254d4ff7953b082c2ea43663b21e539d221311b7,10n daemon script <scripty@kde.org>, 2018-12-17 06:56:04 +0100, , git_silent made message extraction,,
309,66c20e5f4d54c779904e40533004e3dcd6f719c8,ebastian Biallas <sb@biallas.net>, 2018-12-10 23:04:25 +0100, , encoding value proc self statm actually decimal,,
310,cca24d04d62adfcf45d38812cc24f38e7a1dfb06,ilian Wolff <mail@milianw.de>, 2018-11-28 15:20:32 +0100, , try free allocation dummy calloc implementation fix crash exit newer libdl try free data dummy calloc call __libc_freeres thankfully gdb showed address passed free corresponded filt anonymous namespace hook dummy_calloc unsigned long unsigned long buf without lot trouble fix crash,,
311,68fbf9d224d495459ea3010d737abecee8612434,ilian Wolff <mail@milianw.de>, 2018-11-28 12:50:01 +0100,14, prevent deadlock reading value statm get rare situation accessing two separate file buffered api could end deadlock thread thread 0x7ffff77cb700 lwp 9265 usr lib libc.so.6 usr lib libc.so.6 usr lib libc.so.6 usr lib libc.so.6 fscanf usr lib libc.so.6 anonymous namespace heaptrack writer 0x7ffff77c4770 home milian project src heaptrack src track 378 anonymous namespace heaptrack lockeddata lambda operator void const __closure 0x55555555a548 home milian project src heaptrack src track 602 std __invoke_impl void anonymous namespace heaptrack lockeddata lockeddata int lambda std __invoke_other anonymous namespace heaptrack lockeddata lambda __f ... usr include 8.2.1 bit invoke.h std __invoke anonymous namespace heaptrack lockeddata lockeddata int lambda anonymous namespace heaptrack lockeddata lambda __fn ... usr include 8.2.1 bit invoke.h std thread _invoker std tuple anonymous namespace heaptrack lockeddata lockeddata int lambda _m_invoke std _index_tuple 0x55555555a548 usr include 8.2.1 thread 244 std thread _invoker std tuple anonymous namespace heaptrack lockeddata lockeddata int lambda operator void 0x55555555a548 usr include 8.2.1 thread 253 std thread _state_impl std thread _invoker std tuple anonymous namespace heaptrack lockeddata lockeddata int lambda _m_run void 0x55555555a540 usr include 8.2.1 thread 196 std __p 0x55555555a540 build gcc src gcc libstdc src thread.cc start_thread usr lib libpthread.so.0 clone usr lib libc.so.6 thread thread 0x7ffff77d4dc0 lwp 9256 __lll_lock_wait usr lib libpthread.so.0 usr lib libpthread.so.0 __mutex 0x7ffff7fcb8a0 anonymous namespace heaptrack s_lock usr include 8.2.1 x86_64 linux gnu bit gthr default.h 748 std mutex lock 0x7ffff7fcb8a0 anonymous namespace heaptrack s_lock usr include 8.2.1 bit std_mutex.h 103 anonymous namespace heaptrack heaptrack 0x7fffffffbc4f home milian project src heaptrack src track 235 ptr 0x55555556c460 size 1024 home milian project src heaptrack src track 711 malloc size 1024 home milian project src heaptrack src track 164 usr lib libc.so.6 _io_doallocbuf usr lib libc.so.6 usr lib libc.so.6 usr lib libc.so.6 vfprintf usr lib libc.so.6 __printf_chk usr lib libc.so.6 printf __fmt 0x555555556004 malloc usr include bit stdio2.h 107 main home milian project src heaptrack test manual test.c prevent happening circumventing buffered api use raw open read lseek close instead scanf still fine use since allocate internally,,
312,f752536fd565b7fb5d80d96fcbba94512c69a6ba,avid Faure <faure@kde.org>, 2018-09-22 12:17:58 +0200, , fix syntax error boost filesystem found,,
313,4ef65df7c5d7d5ca0e6ba634dabf1f2b797b77ed,10n daemon script <scripty@kde.org>, 2018-09-09 06:41:55 +0200, , git_silent made message extraction,,
314,9d6ee0256e4ab35245948b05a4907e5c1100d063,10n daemon script <scripty@kde.org>, 2018-08-26 06:20:36 +0200, , git_silent made message extraction,,
315,aecbd96798de50971a5e06b032309d0056c06295,10n daemon script <scripty@kde.org>, 2018-08-26 03:36:09 +0200, , git_silent made message extraction,,
316,741be9e2bdba8328af2236b6c87b8692fb1c0a08,10n daemon script <scripty@kde.org>, 2018-08-03 06:18:29 +0200, , git_silent made message extraction,,
317,57b59ec79a71e937c6976b48052c0feceb09f1fb,10n daemon script <scripty@kde.org>, 2018-08-03 03:30:52 +0200, , git_silent made message extraction,,
318,fb54b46652805f87b11e0d5068d4373bf0ddcc0f,10n daemon script <scripty@kde.org>, 2018-08-01 05:50:35 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
319,982da454a74da0c726e5240cd74e5286573cd028,10n daemon script <scripty@kde.org>, 2018-08-01 03:38:03 +0200, , git_silent made message extraction,,
320,57ced4818389d4a0eefe743235dca7adc6526793,ilian Wolff <mail@milianw.de>, 2018-07-02 23:00:19 +0200, , merge branch 1.1,,
321,5ff967ab12fda20834100ea3861d65d74221db89,ilian Wolff <mail@milianw.de>, 2018-07-02 22:44:33 +0200, , call libc libstdc freeres function libheaptrack atexit one hand prevents infinite recursion call atexit allocates happens e.g uclibc since call install recursion guard yet hand code move ensures freeres function get called properly heaptrack_stop called bug 395109,,
322,a41dde9757cbc7712eaae7cfbb6c390b86a5acbd,10n daemon script <scripty@kde.org>, 2018-06-10 07:15:59 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
323,58a4d1f3347edfc0f83148d83ec868b5fc12c27e,10n daemon script <scripty@kde.org>, 2018-06-10 06:10:04 +0200, , git_silent made message extraction,,
324,88ef88bea54651afd4323d24703fb0713fc9cf9e,10n daemon script <scripty@kde.org>, 2018-06-10 05:21:43 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
325,bdce350bfb28b71ae07965bf0f6b267074c30034,10n daemon script <scripty@kde.org>, 2018-06-07 07:42:00 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
326,9f85b3d5e1c529554fed734b171c6883f06fd526,10n daemon script <scripty@kde.org>, 2018-06-07 05:41:44 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
327,b48befecc15c962fed99bc4ab8e64a3c8565dcac,ilian Wolff <milian.wolff@kdab.com>, 2018-05-29 10:41:10 +0200, , fix another compile error 32bit introduce user defined _u64 literal uint64_t use instead ull bug 394330 cherry picked commit,,
328,986aed02da77512b3c1f59bb3bfc305b1d51f61a,ilian Wolff <milian.wolff@kdab.com>, 2018-05-29 10:47:02 +0200, , merge remote tracking branch origin 1.1,,
329,c456f6a1575fb2834238a1f693e7c7787d768d42,ilian Wolff <milian.wolff@kdab.com>, 2018-05-29 10:45:53 +0200, , fix compile warning format type mismatch 32bit use priu64 instead hardcoding std chrono millisecond representation ccbug 394330,,
330,49577e019ea791ee63962cdfe7e9c0c5b5c6ea4b,ilian Wolff <milian.wolff@kdab.com>, 2018-05-29 10:41:10 +0200, , fix another compile error 32bit introduce user defined _u64 literal uint64_t use instead ull bug 394330,,
331,935cb097e2c4b0391963d16da5fb12fe2620026f,10n daemon script <scripty@kde.org>, 2018-05-19 07:00:32 +0200, , git_silent made message extraction,,
332,eaca9e15ec4c19e3ef9185fc5094d5d61cbed14f,ilian Wolff <mail@milianw.de>, 2018-05-17 13:32:09 +0200, , merge branch 1.1,,
333,76fd2e84ba133e96d2cfdf90cb715e66e923eb8f,ilian Wolff <mail@milianw.de>, 2018-05-17 13:31:25 +0200, , fix compile 32bit bug 394330,,
334,5cbcc9e410f5c15b2cbc5f575c5cfb8cc36f1e65,10n daemon script <scripty@kde.org>, 2018-05-17 05:33:15 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
335,fe504986d7a22247aa65041cb24a58e634c61e30,10n daemon script <scripty@kde.org>, 2018-05-17 03:30:43 +0200, , git_silent made message extraction,,
336,81f23394bc027cb2bb4d52292eb8e9a809f5b038,ilian Wolff <mail@milianw.de>, 2018-05-16 14:30:46 +0200, , silence compiler warning ignoring return value function declared attribute wunused result,,
337,b1deb436f2ec4b032fc2e7d37111fd4b9fd1aabb,ilian Wolff <mail@milianw.de>, 2018-05-16 14:26:00 +0200, , fix clang compiler warning linewriter defined class previously declared struct wmismatched tag,,
338,db70b1ea2fd8012c6f216721cb500777abe4f540,ilian Wolff <mail@milianw.de>, 2018-05-16 14:08:35 +0200, , use char instead char dummy calloc buffer element bug found gcc waring memset used length equal number element without multiplication element size,,
339,c852afd926014c42aff62e78cb3ea1c2e21bf603,ilian Wolff <mail@milianw.de>, 2018-05-16 10:08:43 +0200, , silence gcc warning ignoring attribute template argument see also http gcc.gnu.org bugzilla show_bug.cgi 71463,,
340,e89290ca0607da1655e1c3c808034ec9812049b8,ilian Wolff <mail@milianw.de>, 2018-05-16 10:07:37 +0200, , fix gcc warning catching polymorphic type class std system_error value wcatch value,,
341,6a565f9aa4f417b76b84dabdc532ff57e90b034b,ilian Wolff <mail@milianw.de>, 2018-05-16 10:06:27 +0200, , fix clang warning lambda capture used wunused lambda capture,,
342,45a33190752ad7052e8acec2b8ee496e199a50c3,ilian Wolff <mail@milianw.de>, 2018-05-16 09:33:43 +0200, , merge branch 1.1,,
343,423726afa1750665127c451833ff3bdcb1aed467,10n daemon script <scripty@kde.org>, 2018-05-14 06:27:46 +0200, , git_silent made message extraction,,
344,b1079eced64ac5462a878ac37ea3005ee7fb0625,10n daemon script <scripty@kde.org>, 2018-05-13 06:11:26 +0200, , git_silent made message extraction,,
345,c3fcda86edda7b1d5ae25cb31252645057cd9acd,10n daemon script <scripty@kde.org>, 2018-05-11 06:32:37 +0200, , git_silent made message extraction,,
346,859f26cc546bd525526fbdae238a4a86d8e98535,10n daemon script <scripty@kde.org>, 2018-05-08 06:14:52 +0200, , git_silent made message extraction,,
347,769b451aee9c18ab626426633f00737baa9fe458,10n daemon script <scripty@kde.org>, 2018-05-07 06:08:29 +0200, , git_silent made message extraction,,
348,c0954860c40ef27bbaeaef9a3a506e3472ad5add,10n daemon script <scripty@kde.org>, 2018-05-06 07:11:28 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
349,d1f01bf66a37cce6a1d45376d2260cfa8a69fd15,10n daemon script <scripty@kde.org>, 2018-05-06 06:06:17 +0200, , git_silent made message extraction,,
350,35220d76dea1dadc510bfc11669f414502489b00,10n daemon script <scripty@kde.org>, 2018-05-06 03:25:04 +0200, , git_silent made message extraction,,
351,56dbc88b0c34c01df0ac1b97f946f8764d1dd3ce,10n daemon script <scripty@kde.org>, 2018-05-05 03:27:34 +0200, , git_silent made message extraction,,
352,97f7e115fb17cdf8a7cc4af0a436e050dcb2eaea,ilian Wolff <mail@milianw.de>, 2018-05-04 22:51:36 +0200, , use proper delete buffer,,
353,bc3b51d9749f17e642a0bb93c94bff56d22cacb2,ilian Wolff <mail@milianw.de>, 2018-05-04 18:46:09 +0200, , merge branch 1.1,,
354,aec1ea2f2b7ffa9bc5d064e87e016a9a3a7e52d7,ilian Wolff <mail@milianw.de>, 2018-05-04 18:43:19 +0200, , fix appstream test   component summary end analizador uso memoria dinã mica heap para linux,,
355,a44b314095d510bb999f2c1e0200b50dbc64e1a7,ilian Wolff <mail@milianw.de>, 2018-05-04 18:41:43 +0200, , fix appstream screenshot url use kde cdn instead phabricator bug 391528,,
356,5fea57617737fd044dce4afc54f7c61a388ffe48,ilian Wolff <mail@milianw.de>, 2018-05-04 18:35:00 +0200, , merge branch 1.1,,
357,bab1109ec488c99ddcc84748de42f51171dc60f2,ilian Wolff <mail@milianw.de>, 2018-05-04 18:28:27 +0200, , use check find,,
358,dd6a4e83ca6b0a7016e60df0ce4201c429ff266b,ilian Wolff <mail@milianw.de>, 2018-05-04 18:21:16 +0200, , include find zstd appimage bundle,,
359,a3716f0965e41bad57300a0b08d3024e58868c27,ilian Wolff <mail@milianw.de>, 2018-05-04 18:04:47 +0200, , report runtime error zstd found,,
360,ba5e14551db219dc5e8a88d5e9101041423103e4,ilian Wolff <mail@milianw.de>, 2018-05-04 17:42:44 +0200, , set heaptrack version 1.1.80 become 1.2.0 eventually,,
361,ce2776858e12f86cc312f2f036cec21aefa0d982,ilian Wolff <mail@milianw.de>, 2018-05-04 17:41:47 +0200, , remove sparse hash benchmark really useful happy current custom data structure reporting sparsehash missing optional dependency somewhat misleading use one benchmark,,
362,2d05fe96ac4a4dd5410b65f9b979fa1ef6464628,ilian Wolff <mail@milianw.de>, 2018-05-04 17:36:18 +0200, , update version preparation heaptrack v1.1.0 release,,
363,07d585655ebdadaf31dd7b88449cf7ad419dd14a,ilian Wolff <mail@milianw.de>, 2018-05-02 22:42:45 +0200, , add script generate heaptrack appimages docker script generates appimage could eventually run directly kde script take dockerfile build container ready run script generated heaptrack appimage copied current folder,,
364,3eefe94a0829d3e5c7fd2612e6bf407433e7a46a,ilian Wolff <mail@milianw.de>, 2018-05-01 22:45:42 +0200, , fix compile option boost dependency available first need query optional component required one see also http cmake.org pipermail cmake 2010 august 039042.html,,
365,8aec0f5c2215c72c3d4e90d96bc4d315806da59b,ilian Wolff <mail@milianw.de>, 2018-05-01 20:46:23 +0200, , check override symbol injection dt_syment size actually size symbol table instead specifies size one entry symbol table skipped lot symbol placed end symbol table essentially completely broke heaptrack runtime attachement 64bit system removing check fix injection unit test allows expand check note added check initially workaround crash 32bit system investigated fixed another way obviously wrong revert fix bound check valid index revert check symbol table size accessing reverts commit reverts commit,,
366,3907d4d5aa32f4f46721aae69eee9648aed8a2f0,ilian Wolff <mail@milianw.de>, 2018-04-29 22:21:16 +0200, , add basic unit test coverage runtime attaching test use dlopen equivalent internal libc api load heaptrack trigger allocation stop unload library note actually test whether allocation tracked yet since actually work scenario yet investigating happening ...,,
367,02a19d87f0a6cbb0e5f862af3e7245a8090dbc85,ilian Wolff <mail@milianw.de>, 2018-04-26 21:01:56 +0200, , include file line information error message,,
368,0d3e48ae7f8076f418d2f0ca0d3e60c2509aa188,ilian Wolff <mail@milianw.de>, 2018-04-26 20:50:14 +0200, , add basic test coverage linereader read single line verify get type string hex char correctly,,
369,60cbfffb62ae872a1c39e865c8cde694ffd23ab2,ilian Wolff <mail@milianw.de>, 2018-04-25 23:55:09 +0200, ," also use new linewriter reduces cpu load thus potentially runtime machine fewer core mine  performance counter stats heaptrack test manual threaded run 1283,488536 task clock msec 2,178 cpu utilized 0,19 27.880 context switch 0,022 sec 0,26 6.034 cpu migration 0,005 sec 0,72 56.193 page fault 0,044 sec 0,04 3.824.835.231 cycle 2,980 ghz 0,22 4.324.071.695 instruction 1,13 insn per cycle 0,19 851.553.131 branch 663,468 sec 0,19 14.281.586 branch miss 1,68 branch 0,14 0,589248478 second time elapsed 0,45  performance counter stats heaptrack test manual threaded run 1183,979396 task clock msec 2,059 cpu utilized 0,23 28.352 context switch 0,024 sec 0,17 6.082 cpu migration 0,005 sec 0,86 56.146 page fault 0,047 sec 0,07 3.516.405.182 cycle 2,970 ghz 0,21 3.915.573.576 instruction 1,11 insn per cycle 0,15 757.085.516 branch 639,441 sec 0,14 14.118.057 branch miss 1,86 branch 0,18 0,574975868 second time elapsed 0,35",,
370,e15aee2acb9d99de141bb542d961b8e6a7bd2ed2,ilian Wolff <mail@milianw.de>, 2018-04-25 23:05:58 +0200, ," introduce custom linewriter high performance hex line printing linewriter fill output buffer custom implementation unsigned integer hex string converter benchmarking test manual threaded show noticeable performance gain  performance counter stats heaptrack test manual threaded run 2246,525202 task clock msec 1,772 cpu utilized 4,44 109.471 context switch 0,049 sec 14,85 25.173 cpu migration 0,011 sec 20,76 56.174 page fault 0,025 sec 0,17 6.828.825.882 cycle 3,040 ghz 4,36 6.068.732.957 instruction 0,89 insn per cycle 2,68 1.187.665.333 branch 528,668 sec 2,66 20.658.618 branch miss 1,74 branch 4,26 1,267992445 second time elapsed 6,18  performance counter stats heaptrack test manual threaded run 1283,488536 task clock msec 2,178 cpu utilized 0,19 27.880 context switch 0,022 sec 0,26 6.034 cpu migration 0,005 sec 0,72 56.193 page fault 0,044 sec 0,04 3.824.835.231 cycle 2,980 ghz 0,22 4.324.071.695 instruction 1,13 insn per cycle 0,19 851.553.131 branch 663,468 sec 0,19 14.281.586 branch miss 1,68 branch 0,14 0,589248478 second time elapsed 0,45 drastic reduction cpu time string conversion also lead significant reduction lock contention paired together give big runtime improvement test",,
371,4e72941cd56af515e3f3eeb60ffd058f2bbe3164,ilian Wolff <mail@milianw.de>, 2018-04-24 23:03:50 +0200, , always use std mutex locking never custom spin lock previous change introduces custom buffered write often lead abysmal performance heaptrack extreme thread pressure e.g running heaptrack test manual threaded suddenly take one minute instead around one second using mutex always performance back original ballpark workaround deadlock originally observed using std mutex try_lock background timer thread ensure endlessly locking try join destruction,,
372,95a17c6a407a50b4da66d97521adf94c2a1ae219,ilian Wolff <mail@milianw.de>, 2018-04-24 22:50:17 +0200, , use stdio buffered instead implement custom buffer scheme snprintf write directly way write syscall total control properly handle eintr see also http newsgroups 2006 msg00314.html seems fix issue data file corrupted seems due sigchld signal received inside fprintf syscall perf trace syscalls record 16m signal signal_deliver signal signal_generate sched call graph dwarf apprun test ... child process kdevelop exit 2443.428 sched comm docker pid 15924 prio 120 sigchild handled thread inside fprintf 2444.617 signal signal_deliver sig errno code sa_handler 7fa121163570 sa_flags 4000005 get_signal kernel.kallsyms usr lib libc 2.26.so inlined new_do_write usr lib libc 2.26.so inlined inlined inlined ___fprintf_chk inlined fprintf inlined writeline long unsigned int unsigned int long unsigned int inlined handlemalloc inlined ... eventually receives partially written data failed parse line 7fa11060b9 30a09e0 heaptrack stats allocation 534879 leaked allocation 150033 temporary allocation 78765 exists 3580.135 sched comm heaptrack_inter pid 15913 prio 120 leading sigpipe 3580.628 signal signal_generate sig errno code comm kdevelop pid 15915 grp __send_signal kernel.kallsyms __send_signal kernel.kallsyms usr lib libc 2.26.so inlined new_do_write usr lib libc 2.26.so inlined inlined inlined ___fprintf_chk inlined fprintf inlined writeline char const long unsigned int inlined seems explanation issue ultimately boil fprintf save use may receive sigchild leading eintr bug 393387,,
373,fc4b7ef99d3b3879d72e23fa2ffb14b2ff8dc038,ilian Wolff <milian.wolff@kdab.com>, 2018-04-24 16:30:56 +0200, , optionally add helgrind annotation custom spinlock,,
374,215869fbd0881cd03fbc2690eecd38b4620859c6,ilian Wolff <milian.wolff@kdab.com>, 2018-04-24 16:20:08 +0200,2, unlock locking failed timer thread fix issue found helgrind 29171 thread unlocked lock 0x242a60 currently held thread 29171 0x4c30156 hg_intercepts.c 1086 29171 0x4c33acc hg_intercepts.c 1107 29171 0x2005b9 pthread_mutex_t gthr default.h 778 29171 0x203493 std mutex unlock std_mutex.h 121 29171 0x200c78 anonymous namespace heaptrack heaptrack 309 29171 0x2016c8 anonymous namespace heaptrack lockeddata lockeddata _io_file void lambda operator const 631 29171 0x202dd0 void std __invoke_impl void anonymous namespace heaptrack lockeddata lockeddata _io_file void lambda std __invoke_other anonymous namespace heaptrack lockeddata lockeddata _io_file void lambda invoke.h use exception get constructor prevent destructor called would always unlock mutex even timer thread get lock,,
375,03f534bd31b978bd5c4ec812d444f39539fe8fcd,ilian Wolff <milian.wolff@kdab.com>, 2018-04-24 16:18:18 +0200, , make easily possible use mutex locking internally allows run test valgrind helgrind error detection still need add surpressions std atomic usage though something like   helgrind race fun exchange fun    helgrind race fun store fun   std_atomic_load helgrind race fun load fun ,,
376,bc1e9fabc33d9ab898765117cf540ab7cdc83f32,ilian Wolff <milian.wolff@kdab.com>, 2018-04-24 13:12:15 +0200, , add block libheaptrack api call multiple thread allows verify code tsan uncovered issue libunwind directly heaptrack,,
377,a5c9c9fea0ca682707aa6cde51937b4063edfb8c,ilian Wolff <milian.wolff@kdab.com>, 2018-04-24 10:45:33 +0200, , add initial test libheaptrack code build code instead sharing via static library since way actually use sanitizers validate code,,
378,06ad0cffc4157086a00c6a35c13899cc84d9feee,ilian Wolff <mail@milianw.de>, 2018-04-23 13:45:37 +0200, , open output file o_cloexec,,
379,8990817a26971456fc076726528b1f836a8b6df1,ilian Wolff <mail@milianw.de>, 2018-04-23 12:25:37 +0200, , lock output file ensure one process writes,,
380,77f1e068b292dedc3668df06f2eea705e1a28527,ilian Wolff <mail@milianw.de>, 2018-04-23 12:21:01 +0200,20, try handle eintr writing data hopefully fix issue one heaptrack debug 8859 8859 5830 tmp kdevelop 5.2.1 x86_64 usr lib libxcb dri2.so.0 7fd27a93d000 heaptrack debug 8885 8885 5830 child_fork heaptrack debug 8859 8859 5831 write error interrupted system call 0x4c 0x13c dl_iterate_phdr 0x171 0xa5 0x54 0xef malloc 0x5f _znwm 0x19 0x22 0x14 0x60 0xa 0x1c 0x58e 0x8d6 0xb95 0x5d main 0x5182 0xea _start 0x29 heaptrack debug 8859 8859 5858 shutdown heaptrack debug 8859 8859 5858 destroying lockeddata heaptrack debug 8859 8859 5858 done destroying lockeddata heaptrack debug 8859 8859 5885 shutdown done ccbug 393387,,
381,d16bcef32b0ed4791839fe5a03bae062513df195,ilian Wolff <mail@milianw.de>, 2018-04-23 11:40:14 +0200, , handle potential write error printing trace index,,
382,51f3ad78630bc425b527843eb4ea016cf0e00518,ilian Wolff <mail@milianw.de>, 2018-04-22 20:30:44 +0200, , initialize start time first use ensures data properly initialized global static initialization may happen late otherwise,,
383,21cc733161280fa7f8fea8113a40bcbd6c61f8d1,ilian Wolff <mail@milianw.de>, 2018-04-22 12:39:59 +0200, , print backtraces encountering write error,,
384,84e2e282d83cc59b6e900ae3287b7157c6ebb022,ilian Wolff <mail@milianw.de>, 2018-04-22 12:36:29 +0200, , output elapsed time debug message,,
385,a0623a3253cbbe1ce7144a48864e05f67aaa5ce1,ilian Wolff <mail@milianw.de>, 2018-04-22 12:35:14 +0200, , handle allocation printf call debuglog call could otherwise happen situation called debuglog without active recursion guard fork handler,,
386,099bb032c2244a95f1f189ae5c8a5501dc6a6e29,ilian Wolff <mail@milianw.de>, 2018-04-22 12:23:34 +0200, , use find libunwind capability unw_getcontext unw_init_local symbol use platform specific prefix wrapped via macro thus fail look unw_getcontext fix using instead,,
387,2bf512817ce93884260422faf1f2c2bd9e250b2a,ilian Wolff <mail@milianw.de>, 2018-04-22 11:50:33 +0200, , print pid tid heaptrack log message useful tracking problem multithreaded application pid also useful ensure run multiple process yet supported,,
388,6ee4e3e836fd2375f70aab8cb2c23118196eff4b,ilian Wolff <mail@milianw.de>, 2018-04-22 11:49:31 +0200, , print stats even get terminated use atexit write stats end get called even main return e.g app get terminated,,
389,dfb6123a6b1c5a925f4c346e5737d7129a20c683,ilian Wolff <mail@milianw.de>, 2018-04-22 10:13:23 +0200, , use shell launch new program debug mode want debug heaptrack use gdb launch new process default actually first start shell eventually debuggee process would get heaptrack injected write process thereby corrupting data file using set startup shell gdb eliminate shell prevent issue occurring bug 392085,,
390,0a3c45c904e1841ee12bf1a6cbeff5376b594064,ilian Wolff <mail@milianw.de>, 2018-04-22 10:06:53 +0200, , start gdb quiet mode reduce amount console output,,
391,a6839d6f36dfd24cdd99205b395d46d8ff7e0185,ilian Wolff <mail@milianw.de>, 2018-04-22 10:04:24 +0200, , error early recording receiving child process event heaptrack doe yet support recording child process apparently happen actually trace child process use heaptrack lead corrupted data file patch catch scenario early error ccbug 392085,,
392,e253b08794c62a14c6a521c6f08a5721e7dffd1c,ilian Wolff <mail@milianw.de>, 2018-04-22 09:38:29 +0200, , mark file duplicated debuggee entry corrupt since yet support tracking child process data file two debuggee entry line starting corrupt clue yet one generate sure data completely bogus trigger sort issue notably backtraces randomly broken potentially even recursive ... ccbug 392085,,
393,1a0dabbedee82c4e7254d4fc44f67881d8d1643f,ilian Wolff <mail@milianw.de>, 2018-04-16 20:32:45 +0200, , open heaptrack data file even analyze specified simplifies usage heaptrack remove one common error personally keep running,,
394,70e6a1ddb2219f17cbdc08e2aaa6dce190b91e70,ilian Wolff <mail@milianw.de>, 2018-04-16 19:58:31 +0200, , also properly handle whitespaces appimage wrapped heaptrack_gui,,
395,5d584ed9890933ad27e80e62f0a8c11b69b03522,ilian Wolff <mail@milianw.de>, 2018-04-16 17:20:12 +0200, , improve handling path whitespaces fix running heaptrack path contains white space,,
396,c21195fe9a30823c30212bb46883d9ca034655ab,ilian Wolff <mail@milianw.de>, 2018-04-16 16:22:00 +0200, , properly handle whitespaces invoking heaptrack analyze,,
397,e1699eed9e4068aa5b5c6d5c7b13ab6e53ee5028,ilian Wolff <mail@milianw.de>, 2018-04-12 15:59:53 +0200, , update .travis.yml fix appimage generation,,
398,fd2d184f0e8a91d30b68e9bd7b9ac7c6766b0a78,ilian Wolff <milian.wolff@kdab.com>, 2018-04-03 17:30:56 +0200, , allow open zst file gui easily,,
399,7ae3f595a0ea49abd4b8ecd8a7be2b362e0fa916,ilian Wolff <milian.wolff@kdab.com>, 2018-04-03 15:30:56 +0200, , make heaptrack.sh file compatible dash use bashism compare string use instead bug 392487,,
400,79cd7c8614ddfb91e92f3dcbb6acfb3d8f272253,ilian Wolff <mail@milianw.de>, 2018-03-26 10:07:36 +0200, , fix compile extra cmake module available bug 392320,,
401,60257e3ae6380df8e83d7631bca40f37812f9320,ilian Wolff <mail@milianw.de>, 2018-03-22 14:13:44 +0100, , squeeze rowdata child vector safe bit memory set parent vector considered immutable afterwards thus ensure capacity equal size make sure waste space needlessly,,
402,705afc7f9c30ffcc48118a173b73a7f04ec46d05,ilian Wolff <mail@milianw.de>, 2018-03-21 18:11:50 +0100, , error early gdb available runtime attach without gdb tell user error early bug 382268,,
403,fc6c6be2d8803d194d31fddb326cae54018aa54e,ilian Wolff <mail@milianw.de>, 2018-03-21 17:47:42 +0100, , add flamegraph cost type heaptrack_print allows specifying cost type print generating flamegraph available cost type used i.e allocation still default temporary allocated leaked peak bug 377339,,
404,bbfd607af0d6b5c7eaf18945484d37e8a8b7a9e1,ilian Wolff <mail@milianw.de>, 2018-03-21 17:29:11 +0100, , unbreak mess clang format made boost program_options manually format option disallow clang format touching,,
405,bd307afe7c4b2564ae252615b008bfa9194da326,ilian Wolff <mail@milianw.de>, 2018-03-21 17:25:23 +0100, , apply clang format file,,
406,7c55120b015263af67156303c6c5b7a441c64e2b,ilian Wolff <mail@milianw.de>, 2018-03-21 17:12:58 +0100, , disable buffering proc statm file stream rewind file read latest value default stream buffered thus always read stale value bye disabling buffer actually read new content statm pseudo file current value,,
407,81879f49ffc946f1280b17fe0608c396dd8bd3e1,ilian Wolff <mail@milianw.de>, 2018-03-21 17:10:55 +0100, , extend error message failing open proc statm reading,,
408,b6e66d1ca81e51c48d24cfe9f2682b444e8e9095,ilian Wolff <mail@milianw.de>, 2018-03-21 16:36:23 +0100, , simplify code,,
409,a59b9ddaec5c173fb040acbec21af0ef7fc001de,ilian Wolff <mail@milianw.de>, 2018-03-21 16:34:50 +0100, , remove unused method,,
410,91e1935397ec491e4e4d9082fd15159da93ce0c6,ilian Wolff <mail@milianw.de>, 2018-03-17 00:55:04 +0100, , mention new optional zstd dependency,,
411,a189ad4d2aa09e7afcd47987bdc75537dd22d5d3,ilian Wolff <mail@milianw.de>, 2018-03-17 00:20:04 +0100, ," optimize map trace index allocation info previously used run binary search map trace index allocation object every allocation event occurring extremely often course usually order magnitude often allocation info event map trace index allocation new allocation info parsed way need run slow binary search access allocation object directly mapped index allocation index large data file 13gb uncompressed result quite impressive patch heaptrack_print took 3min parse zstd compressed data patch applied 2min6s  performance counter stats heaptrack_print 178798,164042 task clock msec 0,998 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 30.570 page fault 0,171 sec 551.902.999.436 cycle 3,087 ghz instruction 2,79 insn per cycle 332.833.340.539 branch 1861,503 sec 1.350.342.839 branch miss 0,41 branch 179,193276255 second time elapsed  performance counter stats heaptrack_print 125579,754384 task clock msec 0,999 cpu utilized context switch 0,000 sec cpu migration 0,000 sec 33.982 page fault 0,271 sec 393.084.840.177 cycle 3,130 ghz instruction 2,87 insn per cycle 238.225.815.121 branch 1897,008 sec 998.456.200 branch miss 0,42 branch 125,663808724 second time elapsed ccbug 386256",,
412,e7feb7c70437e44456e20311e40500b0f9754763,ilian Wolff <mail@milianw.de>, 2018-03-16 23:52:29 +0100, , minor cleanup use operator index directly,,
413,e992c97b0f3b0f36faf323307476c181f57465ad,ilian Wolff <mail@milianw.de>, 2018-03-16 23:51:24 +0100, , introduce distinguish allocationindex,,
414,45958fcec5a115795e506d7864567b6a26e3911d,ilian Wolff <mail@milianw.de>, 2018-03-16 23:08:31 +0100, , actually make traceindex hashable,,
415,ef4a460cc69310618ec72cbaf284501bd19a6133,ilian Wolff <mail@milianw.de>, 2018-03-16 21:57:40 +0100, , optimize findallocation instead sorting vector allocation object 48byte large introduce separate sorted vector pair traceindex allocationindex byte large lookup insertion middle much smaller container considerably faster improving heaptrack_print analysis time one larger test file 3minutes 2min40s ccbug 386256,,
416,9f59d368e10d26a2dd95816ae67e80b145364205,ilian Wolff <mail@milianw.de>, 2018-03-16 21:28:17 +0100, , document individual parse pass,,
417,4edc10044f2743e067b0387d04518b94afd602e1,ilian Wolff <milian.wolff@kdab.com>, 2018-03-16 19:47:19 +0100, ," optionally use zstd compression heaptrack data file zstandard much faster compared gzip drastically improving record analysis performance heaptrack turn since zstandard support missing upstream boost yet patch introducing copy zstd boost iostream code written reimar ffinger published http github.com rdoeffinger iostreams tree zstd many thanks reimar enabling zstandard support heaptrack performance number compression decompression heaptrack data dramatic reduction compression time significantly reduces overhead imposed heaptrack system recording data time saved decompressing data speed analysis step later performance compression 224mb raw heaptrack data gzip performance counter stats gzip run 4869,759387 task clock msec 0,996 cpu utilized 0,70 context switch 0,000 sec cpu migration 0,000 sec 112 page fault 0,023 sec 0,52 14.986.414.840 cycle 3,077 ghz 0,62 21.816.226.253 instruction 1,46 insn per cycle 0,00 4.022.016.531 branch 825,917 sec 0,00 157.529.308 branch miss 3,92 branch 0,07 4,890694017 second time elapsed 0,60 size gzip compressed data file 15807235 byte zstd performance counter stats zstd run 577,288680 task clock msec 0,995 cpu utilized 0,49 context switch 0,000 sec cpu migration 0,000 sec 634 page fault 0,001 sec 0,08 1.626.811.592 cycle 2,818 ghz 0,37 2.750.788.523 instruction 1,69 insn per cycle 0,00 312.504.536 branch 541,331 sec 0,00 10.858.277 branch miss 3,47 branch 0,08 0,580079819 second time elapsed 0,67 size zstd compressed data file 16188988 byte performance parsing data file heaptrack_print requires two decompression pass gzip performance counter stats heaptrack_print run 6180,813184 task clock msec 0,998 cpu utilized 0,76 context switch 0,000 sec cpu migration 0,000 sec 20.111 page fault 0,003 sec 0,00 19.138.095.427 cycle 3,096 ghz 0,66 36.417.197.208 instruction 1,90 insn per cycle 0,00 7.683.651.885 branch 1243,146 sec 0,00 153.959.798 branch miss 2,00 branch 1,24 6,194282999 second time elapsed 0,71 zstd performance counter stats heaptrack_print run 4496,786684 task clock msec 0,999 cpu utilized 0,43 context switch 0,000 sec cpu migration 0,000 sec 24.304 page fault 0,005 sec 0,00 13.944.273.234 cycle 3,101 ghz 0,40 33.232.471.804 instruction 2,38 insn per cycle 0,00 6.912.954.404 branch 1537,310 sec 0,00 120.004.080 branch miss 1,74 branch 0,07 4,501574955 second time elapsed 0,41 one larger data file actually seeing even better improvement data 13gb uncompressed gzip brings much manageable 155mb zstd magically compress data 77mb even better parse zstd compressed data file heaptrack_print minute gzip compressed data file hand take bit minute ccbug 386256",,
418,a4fc2bf3d6789b6a086dc3e6b96b1258493ec450,ilian Wolff <milian.wolff@kdab.com>, 2018-03-14 09:39:53 +0100, , simplify enabling sanitizers non injected heaptrack code sanitizing injected heaptrack code possible knowledge since asan least interfer overriding malloc figure done separately patch add trivial way configure heaptrack build sanitizers via cache variable applied non injected code namely heaptrack_print heaptrack_gui,,
419,a3b03642f3b646620911eeed755874102fe7b7bf,eremy Coulon <jeremy.coulon@3ds.com>, 2018-03-01 12:26:44 +0100, , allow copy paste callstacks heaptrack application bottom top view,,
420,77288070069fd674083bfc761f63fc37225e17ad,10n daemon script <scripty@kde.org>, 2018-03-13 03:18:36 +0100, , git_silent made message extraction,,
421,9590221b9b035a5fa7cf407228a69fa1f91b20a8,ilian Wolff <milian.wolff@kdab.com>, 2018-03-08 23:16:16 +0100, , hand pointer temporary string libbacktrace api fix error form module backtrace error code failed read executable information valgrind reported 27827 syscall param openat filename point unaddressable byte 27827 0x580a0ee open usr lib libc 2.26.so 27827 0x11ad03 backtrace_open posix.c 27827 0x11aa76 fileline.c 117 27827 0x11ac0a fileline.c 183 27827 0x10da52 resolveaddress 129 27827 0x10da52 resolve 245 27827 0x10da52 addip 304 27827 0x10da52 main 435 27827 address 0x15164b90 byte inside block size free 27827 0x4c2e60b operator delete void 576 27827 0x10cef5 deallocate new_allocator.h 125 27827 0x10cef5 deallocate alloc_traits.h 462 27827 0x10cef5 _m_destroy basic_string.h 226 27827 0x10cef5 _m_dispose basic_string.h 221 27827 0x10cef5 basic_string basic_string.h 647 27827 0x10cef5 main 413 27827 block alloc 27827 0x4c2d54f operator new unsigned long 334 27827 0x4f5e76f std __cxx11 basic_string char std char_traits char std allocator char _m_assign std __cxx11 basic_string char std char_traits char std allocator char const 265 27827 0x10d76d assign basic_string.h 1347 27827 0x10d76d operator basic_string.h 685 27827 0x10d76d intern 269 27827 0x10d76d main 414 issue copied interned string temporary handed pointer data temporary libbacktrace actually wonder blowing often ... copy temporary hand pointer interned string data directly preventing error arising bug 372165,,
422,5851c7a370b21d81da658b8ee053b6fb4945fa96,ilian Wolff <milian.wolff@kdab.com>, 2018-03-08 23:00:56 +0100, , improve error message module backtrace error also output address module file name,,
423,eb85633ae8e177f75ea66fac1fcd9b5311a1aa71,ilian Wolff <milian.wolff@kdab.com>, 2018-03-08 22:31:48 +0100, , prevent infinite loop encountering corrupt data file trace index build loop something fundamentally broken catch situation handle gracefully printing error exiting loop,,
424,00772bb30f74cae89f7bf346b9ff1e705f929ee3,ilian Wolff <milian.wolff@kdab.com>, 2018-03-08 22:03:45 +0100, , add known bug limitation section readme document old ld.gold version produce completely broken backtraces lead memory crash heaptrack_gui relinking libunwind debuggee ld.bfd used workaround limitation,,
425,6e31841708b351b9f53e59d384e94df014d927ed,lex Smith <asmith@feralinteractive.com>, 2018-02-08 16:30:16 +0000, , fix crash elf module symbol table set libbacktrace dummy callback function avoid calling null pointer,,
426,a4534d52788ab9814efca1232d402b2eb319342c,10n daemon script <scripty@kde.org>, 2018-01-29 05:02:17 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
427,933de2c4a1003c1baf1cbb5f51dfbf26e4ab98ec,10n daemon script <scripty@kde.org>, 2018-01-29 03:18:00 +0100, , git_silent made message extraction,,
428,1412055f818f6dec599ce01ef58e768f4671e583,ilian Wolff <milian.wolff@kdab.com>, 2018-01-18 11:43:13 +0100, , also override relocation dt_rel seems unused system may used others completeness also add code override relocation table,,
429,232c92992d191ba0dda47964bf30327b449e1f4f,ilian Wolff <milian.wolff@kdab.com>, 2018-01-18 11:38:30 +0100, , fix bound check valid index,,
430,fe3f4d769d90c068bd7c6032a64435ffc40769e6,ilian Wolff <milian.wolff@kdab.com>, 2018-01-17 16:39:23 +0100, , make pas read function pointer attaching heaptrack value get rewritten read pointer address later correct value found test pass expected think anything first situation want rewrite whole address space ...,,
431,ab2a8222da3cbf2c061578f8215a1b771ff5bb90,ilian Wolff <milian.wolff@kdab.com>, 2018-01-17 16:17:57 +0100, , check symbol table size accessing fix crash 32bit system using attach,,
432,56140865b28a368b125f19056bb83facee8cec0d,ilian Wolff <milian.wolff@kdab.com>, 2018-01-17 16:10:05 +0100, , support debug switch attaching process load symbol detach gdb passed attach process simplifies debugging something wrong attaching,,
433,779dceb8cbe77a2d653d5244126a80e0d5d5346f,ilian Wolff <milian.wolff@kdab.com>, 2018-01-17 15:34:42 +0100, , override allocation function accessible .rel .dyn allows correctly intercept call function even application compiled immediate binding symbol happen hardened environment address function want intercept taken ld.bfd used patch add code also look .rela.dyn .rel.dyn relocation catch situation semi automated test also added used check behavior heaptrack note test show one way catch right allocation function accessed indirectly function pointer would need find address data segment override sure patch based work ivan middleton thanks lot differential revision http d9259,,
434,481bb53b2a260337b17db673d38eea8d4e5098ea,aurent Montel <montel@kde.org>, 2018-01-07 11:01:29 +0100, , remove unused file,,
435,ecaf50f10e7e8396071df9794cddd93740f7caee,10n daemon script <scripty@kde.org>, 2018-01-05 03:08:39 +0100, , git_silent made message extraction,,
436,7c626849b3448b276dcc8873b62b10ab38536df3,10n daemon script <scripty@kde.org>, 2017-12-24 03:10:59 +0100, , git_silent made message extraction,,
437,a4046fd554201a3d4c0081aaa1753514686c3ac3,10n daemon script <scripty@kde.org>, 2017-12-11 02:57:21 +0100, , git_silent made message extraction,,
438,f214ec0d7741436b933b9926eb86527592d2ee82,10n daemon script <scripty@kde.org>, 2017-12-10 02:56:42 +0100, , git_silent made message extraction,,
439,e66eb5b25a66b36d2a6f05a52f0745b8336c596e,ndrew Somerville <asomerville@carnegierobotics.com>, 2017-11-29 18:44:30 -0500,5, fix crash fopen fails fsetlocking attempt use result fix following crash fopen fails fifo creation heaptrack continue least crash target application  __gi_raise sig sig entry sysdeps unix sysv linux raise.c __gi_abort abort.c pacrashhandler signum info 0x7fffe68479b0 context 0x7fffe6847880 home username work knight_project knight_project knight lib module nvcore source linux exit.c 244 signal handler called entry 0x0 type type entry __fsetlocking.c anonymous namespace createfile filename 0x1becf00 tmp home username tmp heaptrack src track 187 anonymous namespace heaptrack initialize synthetic pointer stopcallback 0x7f6f7c95ef80 lambda _fun void 0x7f6f7c95f130 lambda file _fun file optimized filename 0x1becf00 tmp home username tmp heaptrack src track 260 heaptrack_init outputfilename 0x1becf00 tmp optimized 0x7f6f7c95f130 lambda file _fun file stopcallback 0x7f6f7c95ef80 lambda _fun void home username tmp heaptrack src track 607      gdb frame anonymous namespace createfile filename 0x1becf00 tmp home username tmp heaptrack src track 187 187 __fsetlocking gdb print _io_file 0x0 gdb print filename 0x1becf00 tmp gdb frame entry 0x0 type type entry __fsetlocking.c __fsetlocking.c file directory gdb print file 0x0 gdb anonymous namespace createfile filename 0x1becf00 tmp home username tmp heaptrack src track 187 187 __fsetlocking gdb list 182 boost replace_all outputfilename to_string getpid 183 184 auto fopen 185 debuglog verboseoutput write 186 locking speed writing significantly 187 __fsetlocking 188 return 189 190 191 gdb print outputfilename tmp gdb  reproduce visualize scenario handled ld_preload lib heaptrack forbidden error failed open heaptrack output file forbidden permission denied normal output follows crash original patch andrew somerville cleaned milian,,
440,c6ef62854f78a89c2df01001780f3d08f6163200,10n daemon script <scripty@kde.org>, 2017-11-28 02:59:19 +0100, , git_silent made message extraction,,
441,040fbf357248beb56a3cad39c512d42fd6f9ebb2,ilian Wolff <milian.wolff@kdab.com>, 2017-11-27 10:17:40 +0100, , update libbacktrace support compressed separate debug info update source code libbacktrace rev trunk 255161 additional change top keep elf_add elf_syminfo public use check lstat readlink cmake patch debug info code make work common use case compare crc available also get symbol debug file bug 387264,,
442,28cd33d53f7ebbd8a54e64a6a8eb4f70812f0858,ilian Wolff <milian.wolff@kdab.com>, 2017-11-27 11:25:31 +0100, , use qt591 repo travis,,
443,f657413f9a61506d2af80b95f91a34c2deccae80,10n daemon script <scripty@kde.org>, 2017-11-27 03:08:28 +0100, , git_silent made message extraction,,
444,2bf49bc4fed144e004a9cabd40580a0f0889758f,10n daemon script <scripty@kde.org>, 2017-10-30 03:05:25 +0100, , git_silent made message extraction,,
445,acfca5857c8ede71e7786e40ca3a09b4a9962c44,10n daemon script <scripty@kde.org>, 2017-10-24 05:06:53 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
446,403ee6a79a2078c4f6e5e8dccaff212405a26a06,10n daemon script <scripty@kde.org>, 2017-10-24 03:08:20 +0200, , git_silent made message extraction,,
447,9c7b22bb83fe54c5f0c886f701121d0194ce1d2a,10n daemon script <scripty@kde.org>, 2017-09-15 05:02:22 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
448,7415a12b10d322eb1449299039a65a000c5117fb,ilian Wolff <milian.wolff@kdab.com>, 2017-09-12 13:20:34 +0200, , add .travis.yml file create appimage via travis,,
449,2696ad5ff1575491cde37c2061189f29cd0e6198,ilian Wolff <milian.wolff@kdab.com>, 2017-09-12 14:43:00 +0200, , use instead check heaptrack_gui availability depends path modify anymore,,
450,48a67258dca0c9fd8b1ac34607150c00b8af25ad,ilian Wolff <milian.wolff@kdab.com>, 2017-09-12 14:22:49 +0200, , load heaptrack_gui _print belongs version heaptrack ensures version match notably use appimage user heaptrack installed globally,,
451,95c3dacfef27e2288d9aa72dc2ab994437ecb59e,ilian Wolff <milian.wolff@kdab.com>, 2017-09-12 13:40:18 +0200, , add heaptrack analyze open heaptrack_gui heaptrack_print mostly useful appimage context allows create single image track analyze,,
452,0c639981e58f7474468365c46b2263517bb75dbf,ilian Wolff <milian.wolff@kdab.com>, 2017-09-12 13:24:47 +0200, , fix typo occurrances occurrence,,
453,8957299769c4ba7830f16e06451ced9121391019,10n daemon script <scripty@kde.org>, 2017-09-11 03:15:25 +0200, , git_silent made message extraction,,
454,cf900d9735a45eb528701be79755ef4a0895fb67,10n daemon script <scripty@kde.org>, 2017-09-03 03:01:08 +0200, , git_silent made message extraction,,
455,627770d2bd61a8be73f861e21a600996c87f9cc7,10n daemon script <scripty@kde.org>, 2017-09-02 03:15:37 +0200, , git_silent made message extraction,,
456,e0f17ca3bb19a40c61c5af1386805d45c2309a0d,10n daemon script <scripty@kde.org>, 2017-09-01 03:00:24 +0200, , git_silent made message extraction,,
457,f0a682550118b7019e74af71d9e8624902b8a984,ilian Wolff <milian.wolff@kdab.com>, 2017-08-31 09:51:34 +0200, , use check cfree available thanks daniel vratil initial work heaptrack compiles fedora rawhide arch linux x86_64 glibc 2.26 newer differential revision http d7621,,
458,278fbd43cbf9bb1a3c4332415c51f82b50644afd,10n daemon script <scripty@kde.org>, 2017-08-31 02:58:39 +0200, , git_silent made message extraction,,
459,6311628a20ee23eeb4f1ba97ba8d7b92fe9c66db,10n daemon script <scripty@kde.org>, 2017-08-30 05:56:10 +0200, , git_silent made message extraction,,
460,1635942e9b197312a03df473febf6091651b2c85,onathan Riddell <jr@jriddell.org>, 2017-08-29 16:33:30 +0100, , appstream validation http appstream html xenial main issue heaptrack.html,,
461,c48433502ddd95ed62b20a79c425adf1894b9eb5,onathan Riddell <jr@jriddell.org>, 2017-08-29 16:32:42 +0100, , install icon appstream happyness using office chart area breeze http appstream html xenial main issue heaptrack.html,,
462,38f69da19998f456776c9ca8ed64c4f8a3d7e08b,ilian Wolff <mail@milianw.de>, 2017-08-29 16:20:09 +0200, , explicitly hide zero cost row top proxy diff two file result show difference given metric max cost case check cost m_costthreshold would fail zero cost row even though always want hide,,
463,3c823edb030530b769abc71274cf6a88c17608b0,10n daemon script <scripty@kde.org>, 2017-08-04 03:14:31 +0200, , git_silent made message extraction,,
464,70036012c408f5152ec454eba74b3a90d435cf23,10n daemon script <scripty@kde.org>, 2017-07-25 03:12:49 +0200, , git_silent made message extraction,,
465,189fd3be8f5bb2f22459f2c8ac767fe14195dfed,ilian Wolff <milian.wolff@kdab.com>, 2017-06-29 13:36:06 +0200, , use i18n instead,,
466,fde47011f126f4a48fe337e2166e5ae8fbb7063f,ilian Wolff <milian.wolff@kdab.com>, 2017-06-29 13:35:26 +0200, , add reset view action flame graph,,
467,3c8eaa092f028212c7bf3a2e9b2ecd16c216a9d1,ilian Wolff <mail@milianw.de>, 2017-06-24 13:58:34 +0200, , find peak memory consumption first pas input data allows compute per allocation peak data dramatically improves runtime heaptrack analysis large data file hit many individual peak largest one finally reached i.e patch first pas data without waiting graph generated one medium sized heaptrack file take 2.4s patch applied time 0.9s despite walk whole file twice,,
468,8b59f843d25f4239884814458d5b1c6719429f6c,10n daemon script <scripty@kde.org>, 2017-06-21 06:50:05 +0200, , git_silent made message extraction,,
469,d30ab831f344c590d0a5835762a404aa6764594d,10n daemon script <scripty@kde.org>, 2017-06-11 04:31:19 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
470,faacd467668a5fe973adb3711415ef0647a039af,10n daemon script <scripty@kde.org>, 2017-06-08 04:52:53 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
471,f32669fd529f5c2e57ec55227db91823c8273226,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 17:29:11 +0200, , format time value larger 1min term minute,,
472,eb9c84cf7ad73bf3065ce140dcd80898cb0fcd96,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 17:26:23 +0200, , restore caching functionality stringcache location patch 1b9a59dc broke refactoring code forgot store non cached value back faster lookup table see original patch c370b7be advantage fast path bring,,
473,c98495f7e7ede203319cacf82ded869f1ae91711,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 17:17:42 +0200, , move time formatting code util header,,
474,b32855c7538f524378e2efe96a5d6caf9958775f,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 16:59:42 +0200, , optimize handling peak data cost update peak cost leave peak allows merge multiple consecutive allocation lead increment peak memory consumption instead updating peak cost every time update peak end peak patter memory freed record process finished brings processing time back original 1.2s seen initially real world data file,,
475,5369ee48f244dc81c43737ed76203033c77d842d,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 16:50:03 +0200, , update peak cost first parse pas second parse pas reuse initial data save 200ms parse time test case brings time 1.6s 1.8s,,
476,b695089353bf5f397fe681e879e6855425570b66,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 16:34:51 +0200, , add missing license header,,
477,9054e99e199459f8ff7ba7bbc48006983bbc8e28,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 16:08:19 +0200, , optimize tracking peak cost use separate container potentially frequent write operation updating peak memory consumption allocation location allows update actually required thus make better use cpu cache one example file decrease processing time 2.2s 1.8s i.e faster compared original approach different peak heuristic took 1.2s still slower,,
478,18de9c5385903713f3e1a18b8a4b93cc2b833c23,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 15:43:17 +0200, , make peak memory consumption easier understand change meaning peak metric frequent feedback value used show confusing previously tracked peak memory consumption individually backtrace end aggregate total point lose temporal resolution new peak example show wrong used show peak 275b expected peak actually 125b new code repurposes peak metric mean contribution peak memory consumption requires update peak value allocation whenever hit new peak quite costly procedure greatly slows overall processing time one test file took 1.2s total processed patch take 2.2s total processing slower patch nevertheless think worth make cost metric easier understand thus hopefully useful user heaptrack,,
479,4bf10d84391e6b903f66eddf855866a21bbe9fb4,ilian Wolff <milian.wolff@kdab.com>, 2017-05-23 14:48:25 +0200, , always use kformat dialect much simpler grasp usually people expect talking megabyte kilobyte,,
480,cf84990f8cc9bb05d3df4a43ba3856394ed5fb28,ilian Wolff <milian.wolff@kdab.com>, 2017-05-17 15:13:59 +0200, , hide row cost top proxy drastically reduces clutter summary page concentrate actual pain point,,
481,ab071d9accd8d2ada9ad0eb239c92b5eec401bd1,ilian Wolff <milian.wolff@kdab.com>, 2017-05-17 12:00:41 +0200, , use fixed formatting percentage heaptrack_print otherwise could end printing 100 1.00e2 print 100.00,,
482,86214582550cfea61d51fe6262d05fe2f11af99d,ilian Wolff <milian.wolff@kdab.com>, 2017-05-03 17:48:35 +0200, , update comment list sorted,,
483,2b17e7c47595617b9a6839f8aaf0dd4cc6ce6d42,ilian Wolff <milian.wolff@kdab.com>, 2017-05-03 17:43:19 +0200, , handle fscanf failure reading proc self statm situation disable read attempt value fix compiler warning like one src track 339 warning ignoring return value int fscanf file const char ... declared attribute wunused result,,
484,4e01b09d1d0995850b5ec58ca0b4eb9a22f5e7a3,evin Funk <kfunk@kde.org>, 2017-05-09 18:13:25 +0200, , make sure kf5_found false component available heaptrack_gui need component,,
485,f8d3f2dcabb369a7310bae9589677265d0fe8a19,ilian Wolff <mail@milianw.de>, 2017-05-09 13:01:37 +0200, , print zero cost sub branch diff mode,,
486,0d91dab0cdbab3520eb62b07ed8f5ce508ea52e4,riedrich W. H. Kossebau <kossebau@kde.org>, 2017-05-08 16:54:18 +0200, , repeat work kaboutdata,,
487,1b9a59dcc625b400e896fae92542496deb472abd,ilian Wolff <mail@milianw.de>, 2017-05-08 14:52:26 +0200, , show inlined frame major usability improvement code previously profiled code heaptrack built compiler optimization enabled allocation within container class missing parent frame even confusing sometimes missed interesting user frame completely got inlined add inlined frame heaptrack_print output also include heaptrack_gui model simple inlining example added pach clearly show advantage got call allocation function 1.23kb peak consumption main home milian project src heaptrack test manual inlining.cpp home milian project build heaptrack test manual inlining afterwards get frame call allocation function 1.23kb peak consumption asdf home milian project src heaptrack test manual inlining.cpp home milian project build heaptrack test manual inlining bar home milian project src heaptrack test manual inlining.cpp foo home milian project src heaptrack test manual inlining.cpp main home milian project src heaptrack test manual inlining.cpp,,
488,855330456d6b6e2f4ac8c0cde660a959537ef634,ilian Wolff <mail@milianw.de>, 2017-05-04 00:07:26 +0200, , clear flamegraph hide way keep history zoom state navigating away flamegraph e.g quickly check something caller callee view,,
489,4da8c450fa53a2c9d585c868cad48f645e677333,ilian Wolff <milian.wolff@kdab.com>, 2017-05-03 17:36:35 +0200, , force fill method never get inlined,,
490,3ddc8ba3c751436fddd2969ba349a76ab6b7f8d1,ilian Wolff <milian.wolff@kdab.com>, 2017-05-03 17:35:18 +0200, , filter zero frame end stack returned libunwind older version libunwind eratically return zero frame end stack happened debian ubuntu distro provided libunwind situation skip uninteresting frame bug 379082,,
491,0a481b5642b73ac879c8eda522013bc866f15378,ilian Wolff <mail@milianw.de>, 2017-05-02 23:19:13 +0200, , disable flamegraph navigation action applicable,,
492,f31b2605fbf863ab6bd4d1863125c8959807e1ef,ilian Wolff <mail@milianw.de>, 2017-05-02 22:57:24 +0200, , also show tooltips function identifier try use fancy html formatting though making text elision harder necessary would also break tooltips long function name often happens stl using code bug 379360,,
493,50f335a4801cb21d8f5add985df1967f03a1923b,ilian Wolff <mail@milianw.de>, 2017-05-02 22:54:14 +0200, , add search feature flamegraph similar search feature available interactive svgs generated flamegraph.pl allows search string contained within function name calculate total contribution flamegraph,,
494,70aae68975c9c7a3cf82e6b9e7897375538b3cec,ilian Wolff <mail@milianw.de>, 2017-05-02 21:47:26 +0200, , add cmake copyright.txt referenced,,
495,e85cba3fbfa76fc9ff546d7189faabfb7e7e2667,ilian Wolff <mail@milianw.de>, 2017-05-02 21:33:03 +0200, , clarify license code lgpl use correct lgpl header mixture gpl lgpl,,
496,5dd6871acf546deedf541aed3db06ce0fc475e75,ilian Wolff <mail@milianw.de>, 2017-05-02 20:57:43 +0200, , remove unused modeltest gpl licensed rest lgpl licensed,,
497,103cc2a96fabf6a694026f20c5421c23cb775e35,ilian Wolff <mail@milianw.de>, 2017-04-28 13:34:42 +0200, , include raw byte size tooltips size larger 1kb lose precision case also show raw byte size parenthesis shortened value allow accurate manual comparison bug 379222,,
498,d8a97812dc2e5a8864b02a3a2de3c9d109d327bf,ilian Wolff <mail@milianw.de>, 2017-04-28 13:28:04 +0200, , use byte size allocated tooltip wrongly using time twice bug 379221,,
499,4f56a13fcc4b75313333216f48698eb682c9d0f9,ilian Wolff <mail@milianw.de>, 2017-04-28 13:24:37 +0200, , properly remap string index asserting equality string index belong file thus mismatch need remap commpare data assertion correctly bug 379220,,
500,6de34700395c2e4bc1f927d5d41bb1de9c6770be,runo P. Kinoshita <brunodepaulak@yahoo.com.br>, 2017-04-25 11:25:38 +1200, , calcuation calculation,,
501,4f977a920f8ee16d78187b8d75f1590e1695b6e2,10n daemon script <scripty@kde.org>, 2017-04-18 09:50:03 +0200, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
502,3cb1b7fd2f4b3fd656758060582001f1e78c3e12,ilian Wolff <mail@milianw.de>, 2017-04-17 21:14:15 +0200, , call libc libstdc freeres function exit function used valgrind already used force clean shutdown libc libstdc usually bother freeing global resource used reported memory leak heaptrack calling freeres function get clean shutdown libc_leaks.c example without memory leak reported thanks maxim golov pointing hidden functionality providing test case bug 378765,,
503,e203d56632b94e6607d6cdc8710f947d644fc764,ilian Wolff <mail@milianw.de>, 2017-04-07 14:07:31 +0200, , disable signal handling timer thread host application set custom signal handler thread thread supposed handle signal heaptrack spawn timer thread initialization i.e first encounter memory allocation usually happens host application setup signal mask timer thread would still receive e.g sigterm shutdown whole application disable signal handling helper thread fix behavior application rely bug 378494,,
504,1bab9e49229c66554998e7193c668b961e62e174,rwin Jansen <jansene@google.com>, 2017-04-05 10:15:22 -0700, , add missing include directory boost header boost_root might default include path use add path,,
505,c513793b8a433f5fe9a9a3d2897e6a4970484a44,ilian Wolff <milian.wolff@kdab.com>, 2017-04-04 17:38:34 +0200, , prefer lib.debug file lib file available first step towards supporting split debug file patch alone least improve situation using heaptrack binary split debug information file .debug suffix case used unable resolve file line information properly resolve note qmake split file configuration default since time,,
506,743a628be73d344d9339e0c7e4d0edb1a91b5f2b,axim Golov <maxim.golov@gmail.com>, 2017-04-04 09:32:15 +0200, , add script anonymize profiling data allow heaptrack user anonymise stack trace application command line submitting bug report reviewed mwolff differential revision http d5288,,
507,ef3632ff8fc37f0f60273f1df1e6f641e48422e2,ilian Wolff <milian.wolff@kdab.com>, 2017-04-04 09:31:36 +0200, , add .arcconfig file,,
508,ccdc14bfaa433f639ab61765a0d106f721cafc50,ilian Wolff <mail@milianw.de>, 2017-04-02 20:54:34 +0200, , properly fail parse line two one char encountered e.g line content advance char iterator end string kept instead beginning line tried parse timestamp would interpret 0xc lead breakage try compute chart model would improperly use maximum timestamp essentially drop time filter instead trying visualize chart wrong timestamps patch fix issue fail parse line thus simply omit last timestamp get confused building chart model data,,
509,aecd0c2d6162ea4e9ca3c4164e86ff7b251968c8,ilian Wolff <mail@milianw.de>, 2017-03-12 20:59:28 +0100, , enable rubber band zooming chart left click hold create rubber band zoom area shown right click undo last zoom change note doe yet influence data aggregation,,
510,654d1bcd59f709cb0fa86a801f8056f198741421,evin Funk <kfunk@kde.org>, 2017-03-06 15:35:10 +0100, , fix wexpansion defined warning clang 3.9 fixed  home kfunk devel src kf5 heaptrack test manual test.cpp warning macro expansion producing defined undefined behavior wexpansion defined   home kfunk devel src kf5 heaptrack test manual test.cpp note expanded macro define defined _isoc11_source ,,
511,03b8f632347cfdd8c30a2fc7f76bb6880221a7cf,evin Funk <kfunk@kde.org>, 2017-03-06 15:34:58 +0100, , update .gitignore something versatile,,
512,804815f78c0f2b958a4ebebe1fcc9a9459dcc90b,nton Anikin <anton.anikin@htower.ru>, 2017-03-06 15:29:52 +0800, , merge remote tracking branch origin 1.0,,
513,3f99437091b938eb8a40484e40773ce23e526989,nton Anikin <anton.anikin@htower.ru>, 2017-03-06 15:28:39 +0800, , add gitignore file,,
514,6045b90877c98ef18228858eaa84db3d10242aa7,nton Anikin <anton.anikin@htower.ru>, 2017-03-06 10:25:44 +0800, , merge remote tracking branch origin 1.0,,
515,57c474bca5c8ca71abe566cc34a250a514d97fc5,nton Anikin <anton.anikin@htower.ru>, 2017-03-06 10:20:13 +0800, , fix uninitialized struct member cppcheck error reviewer mwolff reviewed mwolff differential revision http d4888,,
516,4d82c36360fbc88638a254ec829c4afcaedcc0fe,ilian Wolff <mail@milianw.de>, 2017-03-06 00:42:21 +0100, , merge branch 1.0 conflict src analyze gui,,
517,0e0d481c7177337511fa1ec70d4515a8c6b9303e,uo jp <muo@muo.jp>, 2017-03-03 11:05:38 +0900, , update readme.md matter specifying library option boost bootstrap.sh,,
518,be08875318563444ed7bdbccffc1ac398edb1723,ilian Wolff <mail@milianw.de>, 2017-03-05 22:52:23 +0100, , decrease leaked allocation counter known allocation runtime attach heaptrack may encounter free allocation track i.e happened attached case used decrase leaked allocation counter potentially underflowed fixed,,
519,932defacaa604a3359d61a65397c8fa319c1f347,ilian Wolff <mail@milianw.de>, 2017-03-05 22:44:37 +0100, , improve cleanup detaching heaptrack stop heaptrack explicitly via gdb breaking pipe improves stability unload process heaptrack runtime injection still somewhat shaky though still see crash shutdown debuggee long heaptrack stopped similarly see ton issue try unload via __libc_dlclose keeping library loaded added explicit warning option saying runtime attaching unstable crash debuggee bug 377143,,
520,ba9832bfb68fcd25631a74eb91095e409884d09e,10n daemon script <scripty@kde.org>, 2017-03-04 08:09:59 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
521,173873dc9c74c62426131d1d6cab537ea17e1da5,10n daemon script <scripty@kde.org>, 2017-03-04 07:13:43 +0100, , git_silent made message extraction,,
522,d9cb5c72a2e01b4e2d5dc9e4c934b581bd63032d,ontel Laurent <montel@kde.org>, 2017-03-01 09:26:13 +0100, , typo,,
523,2062edcd10ce19efd5705a647d79daddd18b2915,ilian Wolff <mail@milianw.de>, 2017-02-26 22:05:20 +0100, , exclude unresolved function recursion detection previously encountered stack two consecutive frame missing debug information thought would indicate recursion collapsed frame beneath exclude frame missing debug information collapse stack anymore,,
524,2af66156ec98addcb71ad9ea400937dde5ab3337,ilian Wolff <mail@milianw.de>, 2017-02-26 21:50:35 +0100, , remove dead code,,
525,3a34d54697e29428354309596e6db07ff4ec923d,ilian Wolff <mail@milianw.de>, 2017-02-26 21:35:54 +0100, , merge branch 1.0,,
526,b77cd26eaa1b59eadb652455cc2322f503c0b680,ilian Wolff <mail@milianw.de>, 2017-02-26 21:25:15 +0100, , improve bottom conversion top caller callee data encounter broken backtraces may way main case non leaf frame may actually cost higher sum child case also hande difference cost like normal leaf node manual test added doe cover properly unwinding reliable thus run corner case real world profile though doe occur add error fixed caller callee top view become reliable,,
527,ec6434e74e536d8e93d5248969dd9bb91045d85f,10n daemon script <scripty@kde.org>, 2017-02-26 07:51:10 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
528,b1ed27c8749fc795858b8642a42602e1920a268b,10n daemon script <scripty@kde.org>, 2017-02-26 06:46:07 +0100, , git_silent made message extraction,,
529,7fe121258f710a2e85f342a54d65db2bccf8e4e9,10n daemon script <scripty@kde.org>, 2017-02-26 05:53:32 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
530,96815e85e6a2129dbff97179ceb7fc07002bd63d,10n daemon script <scripty@kde.org>, 2017-02-26 03:52:22 +0100, , git_silent made message extraction,,
531,1dc1e5094947ba5416fc5f1f20b6529ef9cb4495,10n daemon script <scripty@kde.org>, 2017-02-25 06:18:19 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
532,093f98897dbb5840b242a5ab1ae8a6e23058f89f,10n daemon script <scripty@kde.org>, 2017-02-25 03:54:49 +0100, , git_silent made message extraction,,
533,021f593ef1effe10ea6fbc537d17164453671120,ilian Wolff <milian.wolff@kdab.com>, 2017-02-23 10:27:09 +0100, , enable alternating row color caller callee view,,
534,e3b6d828147329f90684e3f6ae67ce1412ef3ddf,ilian Wolff <milian.wolff@kdab.com>, 2017-02-23 10:25:59 +0100, , move top view property .ui file enable alternating row color,,
535,237739a6b57f4c7f9e6a8fffbffbc4953ce622b9,10n daemon script <scripty@kde.org>, 2017-02-23 08:13:09 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
536,2245c765eab81083140e9e5e277ac24f62b432a9,10n daemon script <scripty@kde.org>, 2017-02-23 07:13:29 +0100, , git_silent made message extraction,,
537,6785a473a72789641237fe481474a2546836c2b7,10n daemon script <scripty@kde.org>, 2017-02-23 06:11:51 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
538,07f35ed8775abe0d7fd90272b22b39c21cbef3a1,10n daemon script <scripty@kde.org>, 2017-02-23 04:01:02 +0100, , git_silent made message extraction,,
539,e5554a0a304d3b59085c7f00c6ad00fd917af8b8,ilian Wolff <milian.wolff@kdab.com>, 2017-02-22 13:40:40 +0100, , merge branch 1.0,,
540,65c7cac9817880bce4608fca747dbab52239c3fb,ilian Wolff <milian.wolff@kdab.com>, 2017-02-22 13:38:38 +0100, , fix action enabled state enable open showing open page already disable open close currently parsing file,,
541,e543ca681b6c5c73d78b6f49789aae0cb2d27b48,ilian Wolff <milian.wolff@kdab.com>, 2017-02-22 13:36:25 +0100, , fix compile older kf5 e.g available ubuntu 16.04,,
542,7d1098c124c5033e28b2e8f6b94e955d1d873fa6,ilian Wolff <mail@milianw.de>, 2017-02-21 09:42:31 +0100, , merge branch 1.0,,
543,dca3b138cd2d3d091f588528cfee38a78d91b4b2,ilian Wolff <mail@milianw.de>, 2017-02-21 09:23:13 +0100, , enable wordwrap summary label encounter long debuggee command line used put one line increased minimal width mainwindow could even expand beyond screen dimension making part window invisible enabling wordwrap break command line every argument additionally cope extremely long argument add zero width space every word character enable word wrap place bug 376741,,
544,08bdda7b322c97566c7de81fc95b012af9a0bd29,ilian Wolff <mail@milianw.de>, 2017-02-21 08:57:02 +0100, , merge branch 1.0 conflict src analyze gui src analyze gui,,
545,75bf1ffbd34ab2755046dede8031bcdfa2c372c9,ilian Wolff <mail@milianw.de>, 2017-02-21 08:54:13 +0100, , document contribute heaptrack,,
546,67d7be2d014b478137e1755cfb8230b932c989ba,10n daemon script <scripty@kde.org>, 2017-02-20 07:39:42 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
547,e8204ff50d824890cd03d9aa381958094729e8c1,10n daemon script <scripty@kde.org>, 2017-02-20 06:45:04 +0100, , git_silent made message extraction,,
548,39fbbc5190f8a6f6c3b314a0de52ed60fb6c0595,10n daemon script <scripty@kde.org>, 2017-02-20 05:54:14 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
549,6e3cb78b86d27e7d621f055820a4a46b75247083,10n daemon script <scripty@kde.org>, 2017-02-20 03:52:26 +0100, , git_silent made message extraction,,
550,4ca6c2ffcb99e419d711c3435dc4f6128372a304,10n daemon script <scripty@kde.org>, 2017-02-19 07:37:47 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
551,b9b0e1f274d3022d60e3a9ce704dcfe8c88cf919,10n daemon script <scripty@kde.org>, 2017-02-19 05:52:02 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
552,586c46fbf63486ad8e40691f21aaa83e3df50cf1,10n daemon script <scripty@kde.org>, 2017-02-19 03:50:07 +0100, , git_silent made message extraction,,
553,39136bb27900e185922a5e98d58e2d79501aec0f,10n daemon script <scripty@kde.org>, 2017-02-18 07:55:48 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
554,92fbe0e41599a61ae15e53b2ed9c072d059d2db6,10n daemon script <scripty@kde.org>, 2017-02-18 07:01:16 +0100, , git_silent made message extraction,,
555,3423767c9250655d578588e6eae9cef5c45cce55,10n daemon script <scripty@kde.org>, 2017-02-18 06:11:41 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
556,4f74da8c6a3cbff0b224d3b254610ee4af64aca2,10n daemon script <scripty@kde.org>, 2017-02-18 03:49:16 +0100, , git_silent made message extraction,,
557,43d67efc42cb6c4a5b8f0ff4e10e6d1e89c6b906,ilian Wolff <mail@milianw.de>, 2017-02-18 00:22:14 +0100, , merge branch 1.0,,
558,79ee3500a16f4e005a169c49aa0e490135d54ea8,10n daemon script <scripty@kde.org>, 2017-02-17 07:27:36 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
559,8131580bc05254948eb331f76dc4a566e74cbefc,10n daemon script <scripty@kde.org>, 2017-02-17 06:43:37 +0100, , git_silent made message extraction,,
560,4f082308a376c19bca7a817284a7498b798155b3,10n daemon script <scripty@kde.org>, 2017-02-16 07:38:37 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
561,64c1f326ebf25bd37aa4133ed1e648d8d1b43a9f,10n daemon script <scripty@kde.org>, 2017-02-16 06:45:11 +0100, , git_silent made message extraction,,
562,c1ebf2c48f4fc063cc965e03167afc6ed0ca6519,10n daemon script <scripty@kde.org>, 2017-02-16 05:56:32 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
563,093df7f22a8f8e5770f0f6682d39de0c2a50a12d,10n daemon script <scripty@kde.org>, 2017-02-16 03:51:13 +0100, , git_silent made message extraction,,
564,c63be8ce50c0a8bbe76e5ed727a8950250c98927,10n daemon script <scripty@kde.org>, 2017-02-15 08:00:01 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
565,17884feb99cfa6bb3fc0fafdac9c0623f89ba6f7,10n daemon script <scripty@kde.org>, 2017-02-15 07:02:53 +0100, , git_silent made message extraction,,
566,dbe2050ac692586877a1430ed5fbd1689e9bf6fa,10n daemon script <scripty@kde.org>, 2017-02-15 06:12:24 +0100, , svn_silent made message .desktop file always resolve case conflict i18n keep version branch resolve particular conflict git checkout path file.desktop,,
567,601e7f466c8f3d4e3b75296d9392d1c43b5f50e0,10n daemon script <scripty@kde.org>, 2017-02-15 04:00:13 +0100, , git_silent made message extraction,,
568,f824d9b0d002aea9087037d8dbc4c1f6047e0d04,ilian Wolff <mail@milianw.de>, 2017-02-14 00:41:43 +0100, , build flamegraph twice initial load get resize event followed show event used trigger rebuild flame graph react ,,
569,843271e43dfa04233c00146fd53414f73c2b3b16,ilian Wolff <mail@milianw.de>, 2017-02-14 00:31:08 +0100, , ensure brush properly initialized thread safe way fix crash circumstance multiple graph build parallel something need investigated separately,,
570,c11f955579918194132502e116809b6a85a749eb,ilian Wolff <mail@milianw.de>, 2017-02-14 00:29:33 +0100, , set context menu policy flamegraph main widget unbreaks context menu since action set main widget policy set view,,
571,3baa4f2576cdcc315c66fdfe5e3bfc8021f20e59,ilian Wolff <mail@milianw.de>, 2017-02-14 00:25:11 +0100, , use kstandardaction flamegraph forward back action,,
572,11e442612c6e269ff9441797969b929975716c48,ilian Wolff <mail@milianw.de>, 2017-02-14 00:25:45 +0100, , use i18n favor qobject,,
573,2469003b3172874e1df7e1f81c56e469b80febdb,ilian Wolff <mail@milianw.de>, 2017-02-14 00:16:43 +0100, , apply clang format,,
574,2240a3c327e2d1849b1a40a4f6f820183418a5ce,ilian Wolff <mail@milianw.de>, 2017-02-14 00:16:02 +0100, , add open open new close quit action file menu,,
575,2b4bc615381ee3c6a8848f586cacf972c51e3bcc,ilian Wolff <mail@milianw.de>, 2017-02-13 23:14:12 +0100, , add .desktop appdata file,,
576,d46be16155456af6cdc99d5b1e9cb20415a11ea1,ilian Wolff <mail@milianw.de>, 2017-02-12 13:31:06 +0100, , pas explicit parent qaction ctor fix build ubuntu xenial seems like default nullptr added recently bug 376247,,
577,5061baa7763982f9660af6f8642689f73323a1c4,ilian Wolff <mail@milianw.de>, 2017-01-30 21:55:19 +0100,1, optimize aggregation caller callee data previously unmerged data mean traverse way stack instead use merged data input thereby get rid hash allocation alone used recursion guard hotspot come allocation number far boil easily million allocation,,
578,971cccd40a0dcfcb0fd8ac45406a73ec75328511,ilian Wolff <mail@milianw.de>, 2017-01-29 20:41:37 +0100, , show whether data come runtime attached profile gui,,
579,7637dc40ed1397333154658de435c12f16c04696,ilian Wolff <mail@milianw.de>, 2017-01-29 20:35:30 +0100, , remove empty line,,
580,e4a8138b9033d5e9483186004fdefe70963abe61,ilian Wolff <mail@milianw.de>, 2017-01-29 20:32:29 +0100, , add format_sources use kdevelop reformat source action note depends clang format moreutils sponge,,
581,1e5e9bcd0eac8c8c4f0675d96c7bfc0ca9fcd9a6,ilian Wolff <mail@milianw.de>, 2017-01-29 20:31:06 +0100, , cleanup add elf namespace typedefs elfw type look much nicer code play better clang format well,,
582,ef90fad941ca10d8beab724bc633c275a29aff7d,ilian Wolff <mail@milianw.de>, 2017-01-29 20:25:42 +0100, , fix warning undefined behavior expanding macro see e.g http d15866 information,,
583,9763133aa8d861f6ea476e5a47a54fbdd6576fe1,ilian Wolff <mail@milianw.de>, 2017-01-29 20:24:29 +0100, , remove dead code,,
584,be56ec89381831e0c8b4065d0a22108ac50f7ec1,ilian Wolff <mail@milianw.de>, 2017-01-28 23:46:10 +0100, , set word wrap column 120 like clang format config,,
585,65142094531990ad78232fb05358beaf59acfdc4,ilian Wolff <mail@milianw.de>, 2017-01-28 23:41:50 +0100, , add clang format configuration reformat src test source,,
586,99d7f2b9a1f8a28e66045d72d2b64a6275ca08ee,ilian Wolff <mail@milianw.de>, 2017-01-28 22:51:33 +0100, , remove libunwind specific defines global config purpose,,
587,39ef60acf67833e2b3b94dc51b0702507ca63def,ilian Wolff <mail@milianw.de>, 2017-01-28 22:49:09 +0100, , fix detection adapt upstream change actually define detect directly without need cmake detect using define also make sure detect platform symbol mangled libunwind support multiple architecture,,
588,15afea6aaecd0ae420600fc8d9ed98c119c29bca,ilian Wolff <mail@milianw.de>, 2017-01-28 21:56:11 +0100, , move code setup caller callee view separate function,,
589,e68010a928806417c3652ace477a9f7ee8239218,ilian Wolff <mail@milianw.de>, 2017-01-28 21:52:51 +0100, , share code setup treemodel view,,
590,36d120fa71bcdefa17642d930975a2a8eb118151,ilian Wolff <mail@milianw.de>, 2017-01-28 21:41:59 +0100, , decouple heaptrack version file format version allows set version 1.0.0 preparation first release file format set version well still able read old data file profile run current version heaptrack,,
591,b886e8f9988fd7abbc65496d28f2a4cf283eadfa,ilian Wolff <mail@milianw.de>, 2017-01-22 12:59:08 +0100, , never show raw address output information pretty useless imho always returning shared unresolved function string function name instead stringified adress speed code significantly reduces memory stack branch get merged,,
592,5033297c08feda946021e7a5ba251951ce2e84fe,ilian Wolff <mail@milianw.de>, 2017-01-22 12:55:45 +0100, , remove empty line,,
593,c370b7beb1bf47a6ed4731235bf65c309ba2da0f,ilian Wolff <mail@milianw.de>, 2017-01-22 12:37:34 +0100, ," speed gui analysis significantly adding location index cache perf showed quite lot time consumed finding interned location given adding cache front lookup ipindex key parse step speed significantly indicated following perf stat call got measured adding exit  performance counter stats heaptrack_gui run 1384.265399 task clock msec 1.019 cpu utilized 0.91 898 context switch 0.649 sec 1.44 cpu migration 0.055 sec 23.67 27,747 page fault 0.020 sec 0.41 4,287,486,004 cycle 3.097 ghz 0.90 5,965,906,048 instruction 1.39 insn per cycle 0.07 1,298,988,220 branch 938.395 sec 0.03 17,667,331 branch miss 1.36 branch 0.04 1.358443950 second time elapsed 1.02  performance counter stats heaptrack_gui run 969.782341 task clock msec 1.023 cpu utilized 1.27 844 context switch 0.870 sec 6.82 cpu migration 0.101 sec 5.30 27,590 page fault 0.028 sec 0.46 3,000,707,304 cycle 3.094 ghz 1.22 4,374,580,309 instruction 1.46 insn per cycle 0.03 911,989,553 branch 940.406 sec 0.03 14,788,489 branch miss 1.62 branch 0.17 0.947570109 second time elapsed 1.34",,
594,c2efbffcb1ff072c1b590d17f0ae2e683f799d9f,ilian Wolff <mail@milianw.de>, 2017-01-22 01:01:08 +0100, , fix cmake warning minimum version trying find kf5 disable even trying build gui deal cmake older 2.8.12 cmake warning dev home milian project compiled kf5 share ecm module 133 message project require least cmake 2.8.12 use findkf5.cmake call stack recent call first home milian project compiled kf5 share ecm find module findkf5.cmake cmakelists.txt find_package warning project developer use wno dev suppress,,
595,95f919ca5975f9fbe86e5ef1ddd16ec502c96bd3,ilian Wolff <mail@milianw.de>, 2017-01-22 00:57:17 +0100, , update copyright header two place,,
596,4413e89a6735c9d36edf2b05621e08d652f20666,ilian Wolff <mail@milianw.de>, 2017-01-22 00:42:23 +0100, , elide text flamegraph item prevents flickering hovering item long text lead label wordwrap increasing height label decreasing height view moving scene thus mouse point different view would repeat simply elide text right label work cutting text soon since cope html think char get painted ...,,
597,de6f4524582b531e182ed0d36d15cf9b573123c4,ilian Wolff <mail@milianw.de>, 2017-01-21 23:48:46 +0100, , use new locationdata ptr typedef everywhere,,
598,e62cb9e293bd8aa8c26bfb0a186fc9eb01cc61d7,ilian Wolff <mail@milianw.de>, 2017-01-21 23:46:24 +0100, , add context menu open file location model view doe yet allow user configure editor want use open file,,
599,504d0403d72c3090841c5419caecb0bf748e9edd,ilian Wolff <mail@milianw.de>, 2017-01-21 19:35:44 +0100, , properly connect filter corresponding view proxy model,,
600,fc171fdbd7700d81ee1b0dcce01e229cf25b5591,urkhard LÃ¼ck <lueck@hube-lueck.de>, 2017-01-21 17:29:29 +0100, , move messages.sh follow code change,,
601,214fe3ed53d20f0fdc05233baeecb02ddc8dbb56,ilian Wolff <mail@milianw.de>, 2017-01-21 13:58:21 +0100, , make possible run heaptrack build folder setting correct cmake property library shell runner executables land correct folder layout build directory way run heaptrack directly build dir i.e heaptrack build make bin heaptrack app bin heaptrack_gui data file,,
602,15de2a1a05ef7f902b23e2b6ad017c4a591bdab1,ilian Wolff <mail@milianw.de>, 2017-01-21 13:40:21 +0100, , move libunwind cmake logic fix build regression using clean build folder find script copied zbackup http zbackup zbackup master cmake slightly adapted find symbol required heaptrack depend symbol actually need extract configuration defines ,,
603,ecb55ab557d053150d23db12683c57b4ace5eba5,ilian Wolff <mail@milianw.de>, 2017-01-21 12:49:57 +0100, , collapse recursive frame default flame graph enabled option clean flamegraph face recursive function call note skip recursion function calling directly another function inbetween frame get collapsed,,
604,110876dc5287485ce60aa60ea880cd11924f71c5,ilian Wolff <mail@milianw.de>, 2017-01-21 12:37:24 +0100, , reorder caller callee column put location first show peak memory consumption leaked cost followed number allocation temporary allocation finally show throughput total byte allocated sort peak memory consumption,,
605,b4bd34409b85e982034d237766e6dfae49f88a89,ilian Wolff <mail@milianw.de>, 2017-01-21 12:30:55 +0100, , increment caller callee cost multiple time recursive stack encounter call stack recursive function call must increment caller callee cost per stack fix cost calculation stack used produce cost sometimes beyond actual peak cost,,
606,3c5ce9616d534c5d7ba0e45c1f502800f95c6450,ilian Wolff <mail@milianw.de>, 2017-01-21 12:29:22 +0100, , remove extra fix compiler warning pedantic mode,,
607,3c9443e84d02c64fd52e423278ba24159adde2b1,abrizio Oddone <pianofab+github@gmail.com>, 2017-01-20 13:52:43 -0800, , include cinttypes required change required fix compilation error devtoolset4 centos gcc 5.2.1 http scls rhscl devtoolset,,
608,a5d5aceafb2329e4b57873cb11b80b52f765f998,ilian Wolff <mail@milianw.de>, 2017-01-11 16:06:38 +0100, , update copyright year,,
609,aeaf893187e6b779171bb92d606b02b83c9f0ffc,ilian Wolff <mail@milianw.de>, 2017-01-11 14:50:24 +0100, , restructure source code directory layout everything 3rdparty test moved src subfolder one turn contains following folder util shared helper functionality track core functionality heaptrack i.e stuff get injected client code interpret doe first level aggregation dwarf translation raw instruction pointer returned tracking code analyze high level analyzer i.e print ascii dumper gui kde gui,,
610,5c6ac6c0f124c5a16804d6412696339165547619,ilian Wolff <mail@milianw.de>, 2017-01-09 00:00:51 +0100, , merge remote tracking branch paulmenzel improve readme.md,,
611,9877e7a0b641377718c0bec8bb922b9b5bdc1072,ilian Wolff <mail@milianw.de>, 2017-01-08 23:58:22 +0100, , fix flamegraph tooltip top level item use item function directly one actually tooltip like label already top level item,,
612,f2ef7b77edda6cb65817ec499a4393d611848da4,ilian Wolff <mail@milianw.de>, 2017-01-08 23:46:10 +0100, , add screenshots readme.md file,,
613,80e610285236dbe1e14b5550f3cf3b2eefc0ca86,ilian Wolff <mail@milianw.de>, 2017-01-08 23:33:04 +0100, , use internal symbol instead dlmopen dlmopen dlopen available debugeee application link libdl case one could inject heaptrack runtime instead using libc.so internal function get rid limitation also inject application link libc.so libdl trick found linux inject project http github.com gaffe23 linux inject,,
614,471b90a0df12ec5ebcf4cd741d56dfe5e8e58ccf,ilian Wolff <mail@milianw.de>, 2017-01-08 23:33:01 +0100, , document need gdb runtime attaching,,
615,4c5f7a177a5268a7d13635619e3fc526e79ae298,ilian Wolff <mail@milianw.de>, 2017-01-08 23:10:28 +0100, , make dependency kchart optional heaptrack_gui pretty useable without kchart access kchart simply skip charting display table view raw data still better using heaptrack_print,,
616,0c5d7cdb645244e39358f89ef0d3e174c2e051d1,ilian Wolff <mail@milianw.de>, 2017-01-08 22:26:38 +0100, , add basic documentation build heaptrack notably tell world various dependency heaptrack core data collector well analyzer gui,,
617,78b85ab578bae8470869f1e6c13312bcc9817bab,ilian Wolff <mail@milianw.de>, 2016-11-15 23:29:54 +0100, , link libunwind directly need link backtrace library,,
618,5b53e3a02f7173c868323b10ac3e03deb7ff4ff7,ilian Wolff <mail@milianw.de>, 2016-11-15 23:26:53 +0100, , fix use free usage libbacktrace passed c_str temporary std string libbacktrace stored internal data structure later dangling pointer accessed leading subtle bug odd reason became apparent recently running interpreter valgrind easily showed problem though fix failed read executable information error message emitted heaptrack also ensures profile data attribute cost correct module ccmail apol kde.org,,
619,7934f7659d1650d9abd165fc9e1f289817f643d2,aul Menzel <paul.menzel@giantmonkey.de>, 2016-09-01 15:30:37 +0200, , readme remove trailing whitespace,,
620,d2582f36cc1a94aaca8462dedb4394f3c8703e32,aul Menzel <paul.menzel@giantmonkey.de>, 2016-09-01 15:31:33 +0200, , readme add newline end file text file end newline add one,,
621,75a9113ea345c696cabab33517686efc0420f00a,ilian Wolff <mail@milianw.de>, 2016-08-16 10:08:48 +0200, , extend error message dwarf.h found either elfutils dev libdwarf dev need installed,,
622,a0380f1ad8e8a24b6b8c30dffc0c566135fa333d,ilian Wolff <milian.wolff@kdab.com>, 2016-06-20 11:42:59 +0200, , add pool allocator api heaptrack header api use add support pool allocator custom allocator heaptrack simply include header call macro custom allocator trace code heaptrack allocation tracked run heaptrack nothing happen include heaptrack.h void mypool allocate size_t  void ptr allocate ptr return ptr  void mypool free void ptr  ptr actually free ,,
623,30edde07bd3db682d4d9ebf83feebee571ec5b41,ilian Wolff <milian.wolff@kdab.com>, 2016-06-16 12:21:37 +0200, , make libheaptrack.h compliant,,
624,288413bf60597ce6c5642f3158125b94ffb0c0f6,ilian Wolff <milian.wolff@kdab.com>, 2016-06-20 13:52:16 +0200, , skip top row without cost happen diffing file,,
625,d34c72120eebb5cc7fe7c643adf2fadbdbda647d,ilian Wolff <mail@milianw.de>, 2016-06-17 18:47:35 +0200, , remove row without cost caller callee data reduces clutter diffs,,
626,5aefb7bb96d13f57747b4daaf2c69a763d07e405,ilian Wolff <mail@milianw.de>, 2016-06-17 18:28:00 +0200, , merge branch wip diffing,,
627,867d2226a5994a2b84b6c4076c725459edb6fd18,ilian Wolff <mail@milianw.de>, 2016-06-17 18:27:22 +0200, , also disable flame graph diff mode future may want implement differential flame graph much work,,
628,7b88a816c1362f8a9949a209686829ddc99022db,ilian Wolff <mail@milianw.de>, 2016-06-17 17:38:32 +0200, , disable chart diff mode could implemented eventually lot work,,
629,bc635dd2929b7b313a89cf3404834c2badd98fcb,ilian Wolff <mail@milianw.de>, 2016-06-17 17:23:14 +0200, , load diff base data parallel primary data file slightly improves performance diffing,,
630,ca5559f9b823277e1c9f6a000c8348a507948667,ilian Wolff <mail@milianw.de>, 2016-06-17 16:41:23 +0200, , reword diff cli help text add heaptrack_gui,,
631,05dc4a6b8531de361d40c5ac0d21854c25ccd493,ilian Wolff <mail@milianw.de>, 2016-06-17 16:38:45 +0200, , make possible easily diff file heaptrack_gui,,
632,f263fca776cfc433acef71f3bf4bf43f0c262fa5,ilian Wolff <mail@milianw.de>, 2016-06-17 13:56:36 +0200, , add code comment diffing method,,
633,b8a71974d6925219d30b6d31b3765e36f78b1499,ilian Wolff <mail@milianw.de>, 2016-06-14 23:45:36 +0200, , convert data type signed integer also calculate difference time peakrss system info diffing heaptrack data file,,
634,35df75db577331e975647451117ff449b2dbd5f8,ilian Wolff <mail@milianw.de>, 2016-06-01 00:06:12 +0200, , add diff support file heaptrack_ print gui executables get new diff file argument file passed get parsed addition primary data file allocation data therein subtracted data found primary data file algorithm somewhat complicated ignore instruction pointer address vary run due address space randomization paired partial lack debug symbol end non trivial situation map allocation one run another essentially need find correct allocation share backtrace ignoring instruction pointer address,,
635,60c2afef7bbd57035fa0218ec89831dccce83e56,ilian Wolff <milian.wolff@kdab.com>, 2016-06-14 17:20:29 +0200, , crash switching call stack direction,,
636,27bb36c4b351e7e561a989368af0f4ffde0a9562,ilian Wolff <milian.wolff@kdab.com>, 2016-06-13 11:13:11 +0200, , add basic readme.md,,
637,b73416675d908c74c6280e044184e1d7e00b74ce,ilian Wolff <mail@milianw.de>, 2016-05-30 21:27:23 +0200, , refactor code use signed data type required handle diffing file individual timestamps since use 64bit data type still handle lot allocation way bit exabyte,,
638,1193d8c8c2658750e4e66ddd0d04e101dc98fb0c,ilian Wolff <mail@milianw.de>, 2016-06-01 00:06:02 +0200, , add minus operator allocationdata,,
639,04968fc8989cc8677196739c244dd001b3e9cb90,ilian Wolff <mail@milianw.de>, 2016-06-08 18:27:34 +0200, , make possible skip building heaptrack_gui embedded never want build gui find script spit error noisy recommended way build heaptrack embedded linux cmake ...,,
640,bb9a54a6f606bd9b1acb9407e4246d7626fb5c2e,ilian Wolff <mail@milianw.de>, 2016-06-08 17:16:27 +0200, , refactor code remove reliance undefined behavior previously code got away style constexpr function allowed according standard think lucky compiler saw yet also code assumed enforced function pointer sizeof void worked bit clunky simply get rid list address iterate manually hook apply could implemented even nicer tuple std apply exist yet manually call function,,
641,10d1d69557f885c59cc9eea04a0f26f21152314a,ilian Wolff <mail@milianw.de>, 2016-06-08 15:08:16 +0200, , slightly cleanup code preload hook instantiate directly decltype function pointer thereis need construct pointer via secondary type anymore,,
642,15059853951eb197fa35f86fac572e9c655df59e,ilian Wolff <mail@milianw.de>, 2016-06-08 14:48:59 +0200, , increase portability system cfree available cfree used according man page used need overload system available simply skip step keep heaptrack compiling,,
643,08fd284ac02091ace68d7551f8434f108a2bf628,ilian Wolff <mail@milianw.de>, 2016-06-04 19:36:02 +0200, , track temporary allocation allocationinfo index need output boolean temporary allocation information looking allocationinfo index corresponds unique size location i.e used output     information held    ,,
644,62fe41608857c8b3a7decca00a3c46be67765ae2,ilian Wolff <mail@milianw.de>, 2016-06-03 21:29:54 +0200, , move struct heaptrack_print used,,
645,193a7aebe80adc3680e11dba3e0d80cc7d2c9a23,ilian Wolff <mail@milianw.de>, 2016-06-02 12:02:07 +0200, , make heaptrack.sh shell script work dash,,
646,f92df68b41b9aaa10b431d5d4f52caae266c5b0c,ilian Wolff <mail@milianw.de>, 2016-06-02 12:01:29 +0200, , improve bash compatibility heaptrack shell script use case fall via access proc pid comm directly,,
647,a2a9798c8aaef19b69c9603a11e6797c15b9cb1f,ilian Wolff <mail@milianw.de>, 2016-05-29 20:05:10 +0200, , update display text navigation history,,
648,ea2884e1721f85d977c95be7e386100d0a5d78a3,ilian Wolff <mail@milianw.de>, 2016-05-29 19:44:32 +0200, , make text label selectable mouse,,
649,58c23536604bb82b25cd76e50fb6befbcbabc4c0,ilian Wolff <mail@milianw.de>, 2016-05-29 19:39:51 +0200, , make possible back forward flamegraph via keyboard keep simple list item around got selected use user press standard back forward key reset view state accordingly,,
650,c7a96012448123e70a60471d81dc2fb1f1f37605,ilian Wolff <milian.wolff@kdab.com>, 2016-05-10 10:21:07 +0200, , fix compile include cmath use std round,,
651,a404a18c419c1e5d4ae2c713841d48d73b567fd7,ilian Wolff <mail@milianw.de>, 2016-04-28 19:11:43 +0200, , add dock widget important graph allows data visible looking data make easier correlate,,
652,b988210b8aa41faf218234fc049882b5289769fd,ilian Wolff <mail@milianw.de>, 2016-04-28 18:13:23 +0200, , improve tooltips total data chart,,
653,6f56fe2c026ba766652fae2e6f4b6de0d157c3db,rederik Schwarzer <schwarzer@kde.org>, 2016-04-10 20:10:23 +0200, , remove wrong unit formatbytesize return right one,,
654,80e5803cc87f41e8c3c604440e39f1fccd392a6d,ilian Wolff <mail@milianw.de>, 2016-04-09 14:02:02 +0200, , add tooltips element flame graph view,,
655,11f9fafe581c8d1867b8fba99b76bfc96417be4c,ilian Wolff <mail@milianw.de>, 2016-04-09 13:29:43 +0200, , set cursor show interact flame graph,,
656,d0781b5fefdd2dc4a33f9428164bb03216a16960,ilian Wolff <mail@milianw.de>, 2016-04-09 13:16:23 +0200, , use monospace font function label description note wrong font afaik got fixed 5.6.1 5.7,,
657,5977f693c418493000073458bab1bd11ae718985,ilian Wolff <mail@milianw.de>, 2016-04-09 13:15:06 +0200, , enable wordwrap prevent layout issue wide function label,,
658,acc2de6ecb9cb31eecd22db53630d151d78ca9d3,tephen Kelly <ske@ableton.com>, 2016-04-06 16:41:00 +0200, , move frame description bottom otherwise tooltip fade away quickly often mouse cursor cover hide number start,,
659,fc208dd0c5a52fb4817e00a5ac57cb897974fa12,tephen Kelly <ske@ableton.com>, 2016-04-06 11:48:50 +0200, , replace rigid layout qsplitter,,
660,2185c8b9531c865877f796dc2c452093733b6687,ilian Wolff <mail@milianw.de>, 2016-04-05 23:39:19 +0200, , html escape string tooltips esp required template,,
661,35f19267d2dd7a812a42e09e89ca289432a90c9f,ilian Wolff <mail@milianw.de>, 2016-04-05 23:34:25 +0200, , fix wrong conditional lead excessive i18n call,,
662,a0de51fca8274a83bd730066ba9cc239337f50dd,ilian Wolff <mail@milianw.de>, 2016-04-05 23:33:40 +0200, , cache qpen qbrush used chartmodel remove quite allocation would otherwise happen data queried kdiagram,,
663,e1b76fb1a014c690ef3a06a90234b01843ab9a83,ilian Wolff <mail@milianw.de>, 2016-04-05 22:50:30 +0200, , add relative cost number tree model tooltips,,
664,b92e7a2cef1cf37d6e8ede67da77a08d96baac0f,ilian Wolff <mail@milianw.de>, 2016-04-05 22:39:34 +0200, , show cost fraction flamegraph tooltips,,
665,04fc1fb98c0b74238c09a04a1117bbf8bd007b9d,ilian Wolff <mail@milianw.de>, 2016-04-05 22:30:23 +0200, , introduce cost threshold flamegraph minimize memory overhead larger data file flamegraph easily consume hundred megabyte ram take multiple second build mostly due dozen small leaf item tiny cost shown time new default cut 0.1 drastically reduces memory overhead flamegraph build nearly instantly even larger data set future one could even refine data demand,,
666,e76bf7faeee6ea6d318c0de00fbf4a75dd6acc6d,ilian Wolff <mail@milianw.de>, 2016-03-25 00:07:10 +0100, , add experimental perf heaptrack data converter resulting data file much smaller perf.data file visualized heaptrack_gui course label good first step towards visualizing perf data file heaptrack code infrastructure,,
667,cdc192fba820b712ffd5b97f65c1926306eaffd7,ilian Wolff <mail@milianw.de>, 2016-03-24 23:49:19 +0100, , prevent one data access chart model,,
668,14d2e1ca7cb16b01a5620fc0ecc3acb144aa5cbe,ilian Wolff <mail@milianw.de>, 2016-03-24 22:34:08 +0100, , make code error resilient parsing data file,,
669,ceaa0064ea879c6c30d174a7a4a970f41615ed16,ilian Wolff <mail@milianw.de>, 2016-03-24 22:33:36 +0100, , check validity allocation index parsing data file,,
670,399d94528fce7eab096ed8d9b6f06299e2ee103d,ilian Wolff <mail@milianw.de>, 2016-03-24 20:33:10 +0100, , never divide zero,,
671,7b412a435b62b866734ba9fca1008f0cca220309,ilian Wolff <mail@milianw.de>, 2016-03-24 20:31:27 +0100, , intern caller callee data location data,,
672,889831f44cd0a4a4143352d05754996baf0930c4,ilian Wolff <mail@milianw.de>, 2016-03-24 19:21:54 +0100, , add caller callee table view data,,
673,eadfb25c1a3aebe10c5488d389ae62a5939aab95,ilian Wolff <mail@milianw.de>, 2016-03-24 18:08:07 +0100, , reuse common allocationdata class operator operator simplifies code area,,
674,4893422b13a51dae9d960791ce7e0d50f7615f2a,ilian Wolff <mail@milianw.de>, 2016-03-23 16:09:35 +0100, , make possible select different cost source flame graph also put bottom action new control toolbar,,
675,b4457c52123057d408607506e6ca375e8633d558,ilian Wolff <mail@milianw.de>, 2016-03-23 15:14:57 +0100, , print unknown file line location tooltip,,
676,539b1df87b6edb0441240c78df3c7aa5e059e3dc,ilian Wolff <mail@milianw.de>, 2016-03-15 20:18:00 +0100, , colorize model cost cell background based relative cost total maniphest task http t1709,,
677,acc2953f6de97b9ebff9e0f28ac75ffe00e4a226,ilian Wolff <mail@milianw.de>, 2016-03-09 18:42:33 +0100, , properly skip 32bit version operator new,,
678,813876c510166b651e9a61b10ef78908ba9b9f0a,ilian Wolff <mail@milianw.de>, 2016-03-09 18:20:38 +0100, , fix compile warning 32bit machine,,
679,7f22f57b79a965636f4c4b612b3857b8a2dbd749,ilian Wolff <mail@milianw.de>, 2016-03-09 18:15:47 +0100, , update libbacktrace gcc trunk 234085,,
680,4fd89d525a5b1beba2e11fbf7dd262a847924e28,ilian Wolff <milian.wolff@kdab.com>, 2016-02-29 14:39:46 +0100, , show function triggered temporary allocation top list,,
681,f55574d5983e1ea8058bc3dda5d91bba649e0288,ilian Wolff <mail@milianw.de>, 2016-02-26 21:47:30 +0100, , add executable measure malloc overhead,,
682,44fb0b822c568e86910567d5bffb66ba7b39274f,ilian Wolff <mail@milianw.de>, 2016-02-26 18:15:44 +0100, , filter row leak anything topproxy,,
683,4770cbf7fc0e2d67a84acacbdeb2b0102b336f6a,ilian Wolff <mail@milianw.de>, 2016-02-25 20:44:39 +0100, , include total system memory peak usage output track parsing proc self statm every timestamp total system memory taken sysconf may potentially miss true peak handled future via getrusage still nice useful addition think,,
684,efdbf48fff0232a36afa93d8a8c8ccaee0dcd367,ilian Wolff <milian.wolff@kdab.com>, 2016-02-22 13:56:37 +0100, , show minimal statistic directly heaptrack finished,,
685,361b241b20ce68a078f78c63b30f78c05a2678eb,ilian Wolff <mail@milianw.de>, 2016-02-24 02:40:53 +0100, , pas correct data dl_iterate_phdr wonder crash ...,,
686,41c855be7c50049291196d56bca68f2f79fb747c,ilian Wolff <mail@milianw.de>, 2016-02-24 02:31:21 +0100, , access invalid memory tiny broken input file,,
687,1311b0e8016c39da9dbb2cdea5ddd62f70315b0b,ilian Wolff <mail@milianw.de>, 2016-02-24 01:58:06 +0100, , put summary text three column save vertical space,,
688,04c10788f709731986a8f9ef941cc81647ee61ea,ilian Wolff <mail@milianw.de>, 2016-02-24 01:41:32 +0100, , display time memory peak encountered,,
689,c3795cc8d0061eb7af133df13a30f447ceac45b6,ilian Wolff <mail@milianw.de>, 2016-02-24 01:37:03 +0100, , remove resize content call,,
690,c4620afbc42f02435db87a03a5febdbc4743886c,ilian Wolff <mail@milianw.de>, 2016-02-24 01:24:47 +0100, , add summary tab display top function,,
691,036e5d70a07f09869358560d3e665e49db0ee575,ilian Wolff <mail@milianw.de>, 2016-02-23 23:59:56 +0100, , show error failed parse input file,,
692,e09e3dd1d5e6f9ce8e16b93ce03b3b79b5dea0bd,ilian Wolff <mail@milianw.de>, 2016-02-23 23:48:45 +0100, , use monospace font family tooltips bug got fixed upstream older improves readability significantly,,
693,8de563ccfa78079e6193ec14ea26533a4970ba8c,ilian Wolff <mail@milianw.de>, 2016-02-23 23:48:10 +0100, , show backtrace without backtrace tooltip,,
694,2d11d8e2c50cbd44a3dbd9b7619a193fda7ed002,ilian Wolff <mail@milianw.de>, 2016-02-23 23:45:45 +0100, , add stack model display full backtrace selection,,
695,03332f004c2ff2c311aa8c4f23c4bc85d95e1f69,ilian Wolff <mail@milianw.de>, 2016-02-23 23:21:09 +0100, , display shorter basename file table default,,
696,e02927585b30a74ae49b5788d9f8665a46155dca,ilian Wolff <mail@milianw.de>, 2016-02-09 21:17:48 +0100, , descend child invisible flamegraph item,,
697,6d18c09040b0c1dd402f1405bf52483907d9eec5,ilian Wolff <milian.wolff@kdab.com>, 2016-01-22 13:26:12 +0100, , optimize treemodel cache kformat prevent repeated allocation,,
698,b3bf0d88b630bc0b289ff074ff4c4012ec1ed8e6,leix Pol <aleixpol@kde.org>, 2016-01-28 14:57:37 +0100, , let kde change policy project suggested ecm documentation,,
699,fce783c314e3b5d06c540b742bc65477fd4cdb82,ilian Wolff <mail@milianw.de>, 2016-01-21 21:03:54 +0100, , decrease indentation allows show deeper backtraces space left still work left done nice gui deep backtraces potentially increasing indentation depth merged backtrace fork,,
700,502f1b90d14e84045683e30f5e2d08e4513d2bba,ilian Wolff <mail@milianw.de>, 2016-01-15 14:06:37 +0100, , make chart tooltips better readable,,
701,b383199765711302fde80e44e0307a7ace33bf8b,ilian Wolff <mail@milianw.de>, 2016-01-04 22:41:47 +0100, , use std tie instead std make_tuple lexicographical ordering std tie take argument reference whereas make_tuple copy want former see also http common task lexicographic ordering.html,,
702,a137921c9d502c36a3d4e6cea0287c21f3948fb6,ilian Wolff <mail@milianw.de>, 2015-12-16 13:37:22 +0100, , show data soon available way one investigate data table waiting chart built take time large data file,,
703,4a31fc0d6067381447a132d59c1fa3bfec1d9acf,ilian Wolff <mail@milianw.de>, 2015-12-16 12:56:54 +0100, , sort cost column initially descending order,,
704,1f05c8db1fb857be4e1dbc2b246021cbe58b36da,ilian Wolff <mail@milianw.de>, 2015-12-16 12:56:42 +0100, , add indication file load process,,
705,2418f436d7522cc53d2eaddd4707d21178edfa6f,ilian Wolff <mail@milianw.de>, 2015-12-16 12:30:42 +0100, , display pretty printed byte size tree model,,
706,906c1d1c27b87bb9574a5816236170347bd39602,ilian Wolff <mail@milianw.de>, 2015-12-16 11:59:08 +0100, , set proper axis type temporary allocation plot,,
707,d495e9d9c726a988d3aaab942431671fe78eac8a,ilian Wolff <mail@milianw.de>, 2015-12-16 11:34:49 +0100, , duplicate allocation info reparsing,,
708,e79f7deadc4a7c0b15bae784530203e1ee11fb23,ilian Wolff <mail@milianw.de>, 2015-12-15 18:34:30 +0100, , reuse pointermap backwards compatibility also make size histogram work older data file,,
709,9134f65fc7218605fc60bdb791077deaeab97792,ilian Wolff <mail@milianw.de>, 2015-12-15 17:46:04 +0100, , add size histogram heaptrack_gui track number time allocation certain size requested display data histogram note size binned following byte range     128 129 256 257 512 513 1024 1024,,
710,b1139b658d72952b8fa18a49c41583b049de1775,ilian Wolff <mail@milianw.de>, 2015-12-14 18:48:03 +0100, , reject data file newer heaptrack version,,
711,c19aba1b3e5237b4978f2cae001a0889e399b5ee,ilian Wolff <mail@milianw.de>, 2015-12-14 18:24:34 +0100, , optimize tracking active allocation instead mapping pointer pair allocated size trace index intern pair map pointer 32bit index assumes 4.294.967.295 different pair occur could theoretically broken allocating different size loop practically never seen happen really break always bump 64bit index later furthermore patch introduces new pointermap drastically reduces memory overhead tracking allocation benchmark also get added show overhead compared 100 overhead simple hash map also note even google sparse_hash_map get overhead even better pointermap implementation faster google sparse_hash_map possible leveraging information memory allocation return pointer page thus pointer clustered shrink 64bit pointer common shared base pointer small 16bit offset machine runtime performance close simple hash map decided move allocation tracking drastically reduces file size heaptrack data file sometimes cutting size half even better speed heaptrack benchmark data written disk course lead much improved performance heaptrack_gui heaptrack_print,,
712,b9242914cef2c27c045ca37872721849a15a60ad,ilian Wolff <mail@milianw.de>, 2015-12-11 21:34:33 +0100, , also make number sub trace peak configurable,,
713,3b98613e71e6230a342887de30fc5adf63f809e0,avid Landell <david.landell.dl@gmail.com>, 2015-12-11 21:30:37 +0100, , make number reported peak configurable make possible control number reported peak heaptrack_print review 126282 mon sep 2001 david landell gmail.com date wed dec 2015 0100 subject patch make number reported peak configurable,,
714,33b5ecee7c089e2c6054a42bcf4f745dddec3dde,ilian Wolff <mail@milianw.de>, 2015-12-11 21:27:54 +0100, , add .reviewboardrc file rbt integration,,
715,cad62051cacba5a9b9b70dadf902b4a4a2b58cf2,ilian Wolff <mail@milianw.de>, 2015-12-11 21:17:14 +0100, , add version heaptrack data file,,
716,bd2fafdff383912edd32709a9e6e1f92681add08,ilian Wolff <mail@milianw.de>, 2015-12-11 21:13:23 +0100, , check module map sanity non debug build heaptrack,,
717,0dbd93b60d6d8ed41c37c4489291e06941094d8b,ilian Wolff <mail@milianw.de>, 2015-12-10 15:56:48 +0100, , show temporary allocation heaptrack_gui,,
718,8d69b4a4cf86eb948d3824db4d1d119ee10faa42,ilian Wolff <mail@milianw.de>, 2015-12-10 15:35:43 +0100, , find temporary allocation heaptrack_print,,
719,7f7696ef57f6fdf8d68aad29426d795c1ed9ba39,ilian Wolff <mail@milianw.de>, 2015-12-09 21:45:59 +0100, , fix regression pointer index still 64bit,,
720,125d346f602d28d4fe4fecff5b7c97bac50e1f4a,ilian Wolff <mail@milianw.de>, 2015-12-09 20:39:58 +0100, , fix compiler warning,,
721,613cd167d80dd14cb5af2960b5a89e0ed60daf08,ilian Wolff <mail@milianw.de>, 2015-12-07 23:10:58 +0100, , optimize reduce memory cost tracking active allocation split hash two one small allocation numeric_limits uint32_t max one bigger rest allows reduce cost factor apps notable example heaptrack_gui doe ton small allocation lookup table long lived one test case reduces memory consumption heaptrack 1gb,,
722,a3b20d36c8f77791e96f8e4b63a4493caa2cb4d0,ilian Wolff <mail@milianw.de>, 2015-12-07 22:48:43 +0100, ," use uint32_t index allows save memory open possibility future optimization 4,294,967,295 still enough space list trace string etc",,
723,c8d8768011e8923542a9e56c056edd8b42578c78,ilian Wolff <mail@milianw.de>, 2015-12-06 17:46:18 +0100, , optimize reduce memory consumption rowdata treemodel interning common locationdata save quite memory large data set still large tree still easily hogging gigabyte memory ...,,
724,95b93675275222c47d4b4ce7d609ebd6b7455084,ilian Wolff <mail@milianw.de>, 2015-12-05 02:27:55 +0100, , generate flame graph background thread also add temporary text indicates generating graph,,
725,32085740819add2bcd8ca2a28a8c0de9d98ce43f,ilian Wolff <mail@milianw.de>, 2015-12-05 02:20:14 +0100, , make possible switch bottom top flame graph context menu new action switch view mode flame graph,,
726,5316c0d800b24b8e5c9f3716d3d36b07e48c0599,ilian Wolff <mail@milianw.de>, 2015-12-05 01:50:39 +0100, , build flame graph demand reduces memory consumption flame graph displayed,,
727,d598a2c5ba6e40b80d3627bca5949e3e8be14f76,ilian Wolff <mail@milianw.de>, 2015-11-15 15:01:47 +0100, , remove duplicate component,,
728,95292067d9c03e23ad84e2ae8500874ca13d0d53,ilian Wolff <mail@milianw.de>, 2015-11-15 14:56:42 +0100, , default relwithdebinfo need compiler optimization heaptrack code otherwise really slow run,,
729,b9e59080f5ee369cedf9212d74677767467368dc,drian BÄcÃ®rcea <adrian.bacircea@gmail.com>, 2015-10-25 17:53:33 +0200, , always pas false exe elf_add call basically pas isexe flag elf_add libbacktrace see et_dyn executable mean section relocated load defer dl_iterate_phdr get real address call behind scene end calling dl_iterate_phdr executable wrong since executable want get symbol current one already get base address correctly main process pipe need ever pas isexe true,,
730,ff6e1e9367bd4afd568227232df7988f5ebea706,ilian Wolff <milian.wolff@kdab.com>, 2015-10-23 11:43:29 +0200, , reserve space chart data,,
731,6a755b02f1f6d6a8f0bd9068a00da2848e807dcf,ilian Wolff <milian.wolff@kdab.com>, 2015-10-23 11:36:35 +0200, , optimize evaluate top data parallel chart data larger data file reduces parse time machine,,
732,8b8b7ab97a158d18d3af91ac69e1e06ffd53365b,ilian Wolff <milian.wolff@kdab.com>, 2015-10-23 11:11:12 +0200, , optimize one hash lookup instead three per ipindex still one hotspot parsing large data file least make bit faster,,
733,4771c1c9c1ea4dd13bcd51805d1eb0ee12094059,ilian Wolff <milian.wolff@kdab.com>, 2015-10-23 10:49:47 +0200, , optimize replace qhash std array know chart cost data monotonously indexed thus use plain array qhash much quicker index parser handletimestamp remove hotspot found perf analyzing big data file,,
734,abd8b4ae8c5404ecabbf51064688e1fd15748c00,ilian Wolff <milian.wolff@kdab.com>, 2015-09-10 17:05:51 +0200, , minor move newline readbility,,
735,8390f602809a30227383c5d58e83e61705a16e7c,ilian Wolff <mail@milianw.de>, 2015-10-11 23:40:08 +0200, , increase max chart datapoints 500,,
736,78e5039dcc1ef4f1af1f161111c47989d3f1fca3,ilian Wolff <mail@milianw.de>, 2015-10-11 18:19:05 +0200, , allocate 100 brush flamegraph color probably discernible anyways way save couple megabyte memory large input file,,
737,c81fece8e150431b4c5675f8c98a0c317787952b,ilian Wolff <mail@milianw.de>, 2015-10-11 18:09:43 +0200, , use two pas input data speed chart building way look top hotspot first parse quickly iterate file discarding line line allocation must looked everything else reused first parse spend minute hour create chart data look explicit hotspot found costly merging sorting allocation data every timestamp,,
738,45778b4b171ceea21aa695d627a568f8a24241d5,ilian Wolff <mail@milianw.de>, 2015-10-11 16:01:52 +0200, , create one chart data per second way run heaptrack large data file future restructured make configurable,,
739,39ff168be7ca199fa9b9101cc84a863d2b16c44f,ilian Wolff <mail@milianw.de>, 2015-10-11 15:46:58 +0200, , make sure chartmergedata nothrow move assignable,,
740,12731c265f39d275b44e7d90478c46eced2b8faf,ilian Wolff <mail@milianw.de>, 2015-10-11 15:46:42 +0200, , cache address,,
741,80e4ffd959a7f04da0cdd5094f6ddae6f31106d8,ilian Wolff <mail@milianw.de>, 2015-10-11 15:46:30 +0200, , fix wrong assertion,,
742,85a377370c3a4829154b4deb12df98d5dbba4469,ilian Wolff <mail@milianw.de>, 2015-10-11 14:28:15 +0200, , disable modeltest write proper test soon add modeltest,,
743,cbec4a53b25422c4848df3de4f799c7aae3b9596,ilian Wolff <mail@milianw.de>, 2015-09-25 07:00:33 +0200, , restructure test code layout import catch use,,
744,446edb1629e47a90eab55089d5fa656401d3699b,ilian Wolff <mail@milianw.de>, 2015-09-25 06:27:22 +0200, , simplify cmakelists.txt always use malloc,,
745,b1f9527d95d055ed3ce18a2d968364786d341b6d,ilian Wolff <mail@milianw.de>, 2015-09-25 06:16:32 +0200, , use malloc within libbacktrace usecase heaptrack library used within external interpret process never signal handler mmap approach make sense using malloc instead significantly faster make using heaptrack clang debug symbol usuable,,
746,ae959834f9f043ddaad1024f2578468f5f8381e0,ilian Wolff <mail@milianw.de>, 2015-09-22 09:10:06 +0200, , cleanup rename leaked gui consumed,,
747,c7fcac4e6c637c364d648f49afd7c47e90a028f3,ilian Wolff <mail@milianw.de>, 2015-09-22 08:56:50 +0200, , fix chart model splitting type since number column different per type need separate model finally make stacked chart work properly,,
748,5feb2c646cf347aace79d2b71e19838d814e3cb6,ilian Wolff <mail@milianw.de>, 2015-09-22 04:22:08 +0200, , cleanup,,
749,6489567586bfd1472490666d3e43923dd1745946,ilian Wolff <mail@milianw.de>, 2015-09-21 04:28:10 +0200, , deduplicate code,,
750,dfb81250753e424062117b73fee3e839d3dfac04,ilian Wolff <mail@milianw.de>, 2015-09-21 04:17:48 +0200, , format tooltip cost time,,
751,1397bb6b13745173f608b4408f79e08af3473ea4,ilian Wolff <mail@milianw.de>, 2015-09-19 08:47:21 +0200, , keep chart data associated constant column neccessary association color later legend label make sense left done adding sorting top costly column bottom model,,
752,cf84ce71a0a8dd80271630c0e72d47fb2691a238,ilian Wolff <mail@milianw.de>, 2015-09-13 15:46:51 +0200, , merge entry chart data sort descending order,,
753,a3f45c5cad01c86a2e2e4d83c972f96ca2cd5e87,ilian Wolff <mail@milianw.de>, 2015-09-11 20:18:51 +0200, , fix tooltips show stacked graph,,
754,bd5a354859ddcfbce54b1eb74f488b3032080343,ilian Wolff <milian.wolff@kdab.com>, 2015-09-10 18:02:23 +0200, , use correct axis label time chart,,
755,65a4e0a40613e502dc4e21df6b828c135c8a6143,ilian Wolff <milian.wolff@kdab.com>, 2015-09-10 17:33:39 +0200, , add basic tooltip functionality stacked time chart,,
756,71bc62bf0eea9c3eaa39042736e161273c7de149,ilian Wolff <mail@milianw.de>, 2015-09-09 20:41:56 +0200, , start stacked time chart,,
757,30b079ccb3bd670ee145fa8d79ab8d7e476e5c4f,ilian Wolff <mail@milianw.de>, 2015-09-06 19:37:40 +0200, , use topdowndata input generate flamegraph,,
758,04a4a3361d42cb32525e23a24c4c793c24d2786d,ilian Wolff <mail@milianw.de>, 2015-09-06 19:26:27 +0200, , add top tree model,,
759,ab84a84e064e8d7521b67ed1a9cfb94762920926,ilian Wolff <mail@milianw.de>, 2015-09-06 18:20:56 +0200, , also sum peak model temporal notation thus two peak happen different time say real peak memory consumption merged allocation taking absolute peak peak confusing leaked number peak,,
760,82ad34f3451443ef60789bc5fcdcbee2a128b45d,ilian Wolff <mail@milianw.de>, 2015-09-06 18:02:10 +0200, , build tooltip ondemand speed initial parsing tremendously save thousand allocation way tooltip becomes expressive well doe remove number allocation graph iteself though often visible anyways width already represents data,,
761,1a610e74e3469e88e166b20f613926f2714ff7e2,ilian Wolff <mail@milianw.de>, 2015-09-06 17:41:19 +0200, , forget selection resizing flamegraph widget,,
762,6caca0540f3a8d4d61e4b3ea670b896397d29e75,ilian Wolff <mail@milianw.de>, 2015-09-06 17:37:42 +0200, , cleanup code add comment,,
763,148b1fde0d89490e9b8a9aebf0f16487e5aa36b0,ilian Wolff <mail@milianw.de>, 2015-09-06 17:20:27 +0200, , merge branch flamegraph,,
764,1fbda09d338386f7afe1b4b562b43999038476fa,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 18:33:29 +0200, , cleanup code,,
765,a8ad56c977b38c4ca4749db48a2111737ad65dfa,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 18:32:10 +0200, , implement zooming done original flamegraph svg maximize parent frame hide sibling parent relayout child available parent width much better usability pov imo proven svg implementation previous take mine simply confusing,,
766,aa00d3c8e443934840395c3892847b58215c5992,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 17:43:17 +0200, , use mem color scheme upstream flamegraph,,
767,ce8df3340bd23ac190ac317b2cbf4868557af9ab,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 17:13:38 +0200, , add hover effect,,
768,b44ab7b0383ef2ca4b5a8cd043c5551fb73feb27,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 16:29:39 +0200, , paint selected item differently,,
769,3422ef8ea352e55e90dbb14788f7630f25c41d82,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 16:17:57 +0200, , cleanup code bit use font metric height item height,,
770,96afcb8b66204c3a87797d32a0c4a0d25c39cde8,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 16:13:48 +0200, , disable qgv bsp item indexing flamegraph scene data change frequently would slow use bsp,,
771,3994e59710ae0fa02d1c40e1f2990a4290f6ec0e,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 16:10:08 +0200, , adapt minrootwidth available viewport width,,
772,6b39c9335adca3d12efa5da139d6e69f89e87e53,ilian Wolff <milian.wolff@kdab.com>, 2015-09-04 15:37:14 +0200, , cleanup code build graphic item background thread prevents gui freeze common data file,,
773,dca399dfa84d02abf6dfa5e56c4aab95d0f7900a,evin Funk <kfunk@kde.org>, 2015-09-03 11:59:56 +0200, , cmake kchart,,
774,167292881d405f5841ce025b81a60bc2ccee9469,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 17:09:36 +0200, , bring back mouse wheel zooming work fine removing flag apparently required,,
775,e791398b126d917ec228e9044db820033edafed7,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 17:04:13 +0200, , implement click zoom flamegraph,,
776,89553dcbe9f1ca8a7c237e5257c1601d7303934c,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 16:06:46 +0200, , refactor code use qgv parent child chain ignoring transformation first step towards custom zooming operation,,
777,bde38b088a34576ba6f9fb8f938452c6416871d6,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 15:53:49 +0200, , set pen externally add total item,,
778,799ce945d7a1659769faf70c8744b8b7f3262155,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 15:52:27 +0200, , exclude stop index gui backtraces,,
779,7a26be40361e46a1f2dd95e63f0f2e6a9fbdf6b9,ilian Wolff <milian.wolff@kdab.com>, 2015-09-02 11:45:20 +0200, , use correct foreground color,,
780,5b18b71e9151d77464a7b83f4cc0be7d665295a5,ilian Wolff <mail@milianw.de>, 2015-09-02 00:40:13 +0200, , keep font size stable,,
781,b5da5edfbe922f3a7ed21516f0d438217d75dc79,ilian Wolff <mail@milianw.de>, 2015-09-02 00:17:18 +0200, , improve layouting data generation flame graph count non leaf node cost multiple time take parent cost account calculating width frame graphic item,,
782,8e6d4a17385734f8080ffdf4e81b107fcf770cb4,ilian Wolff <mail@milianw.de>, 2015-09-01 23:39:19 +0200, , build top flame graph layouting still wrong give data least,,
783,3c5bcdaebc524b9f02c05551ced1c063aa3c1b84,ilian Wolff <mail@milianw.de>, 2015-09-01 22:37:09 +0200, , merge remote tracking branch origin master flamegraph,,
784,555fdc25483f719bed08b47c32ceb7435fe1d935,ilian Wolff <milian.wolff@kdab.com>, 2015-08-24 14:52:55 +0200, , mix peak allocated column,,
785,c19b065fd096b708ef9fbd082f5226370f5f5fdd,ilian Wolff <milian.wolff@kdab.com>, 2015-08-24 14:52:37 +0200, , add qdebug include potential printf debugging need,,
786,d986ab91d2658fc6f11ed69a307c0f591ff82a23,ilian Wolff <mail@milianw.de>, 2015-08-21 23:49:20 +0200, , add initial take flamegraph based qgraphicsview many issue still mostly due bad scaling i.e want constant text size elided parent item small constant item height based text height,,
787,e05510faced3b532eebd305d120c77fec85d5d14,ilian Wolff <mail@milianw.de>, 2015-08-21 22:59:26 +0200, , remove warning bogus translation,,
788,338f8720c49fa9d281daf33a4c48a89c9746fb9a,ilian Wolff <mail@milianw.de>, 2015-08-20 23:09:30 +0200, , make possible create flamegraph compatible stack file heaptrack_print gained following new feature print flamegraph arg path output file flame graph compatible stack file written visualize resulting file use flamegraph.pl http github.com brendangregg flamegraph heaptrack_print stacks.txt optionally pas reverse flamegraph.pl flamegraph.pl title heaptrack allocation color mem countname allocation stacks.txt firefox chromium,,
789,ecfe1e65e920097d69b939ede369a02d4bc1b39c,ilian Wolff <mail@milianw.de>, 2015-08-20 22:49:20 +0200, , increase width help output,,
790,9e69f6e98464e5e7e26283d46c3c78b103218983,ilian Wolff <milian.wolff@kdab.com>, 2015-08-10 18:28:54 +0200, , save memory keeping file string shared detached concatenated string number leading excessive memory consumption large data file,,
791,bb4fae3046f1ae49c6170e7d8fbe83404aba45d8,ilian Wolff <milian.wolff@kdab.com>, 2015-08-10 10:51:48 +0200, , fix compile test unwind.h non standard path,,
792,e2c55cfc8a3b82b7e1b6431409ed22575c8f719e,ilian Wolff <mail@milianw.de>, 2015-07-23 16:50:49 +0200, , fix serious regression broke evaluation back trace data format expects hexadecimal number thus output one regression introduced hacked 32bit support,,
793,32217d22d52cb162bc6809ddeae9c54189869f87,ilian Wolff <mail@milianw.de>, 2015-07-23 16:30:30 +0200, , add first test verify libunwind integration behaves sane turn must build libunwind gold linker completely break stack unwinding functionality todo use proper testing framework,,
794,c39dc786369507a73360a51a5e84b0d48bf0c1e9,ilian Wolff <milian.wolff@kdab.com>, 2015-07-21 14:01:00 +0200, , show error heaptrack_gui path,,
795,7badfd23e5d6c2d99e90fd3ce7ddab0e458c7baa,ilian Wolff <milian.wolff@kdab.com>, 2015-07-21 13:58:21 +0200, , make gui chart optional,,
796,0855e64dc30f1b9b3fecf634b297cef906d7acca,ilian Wolff <milian.wolff@kdab.com>, 2015-07-08 18:14:06 +0200, , fix obvious error 32bit injection still work properly,,
797,f06b9cf7d7f377456fdc74a06c3d4680d4bb6b04,ilian Wolff <milian.wolff@kdab.com>, 2015-07-08 18:13:49 +0200, , also fix building gui 32bit,,
798,3bc97b118fef85d8b7a4934c908ab5da51b38a7c,ilian Wolff <milian.wolff@kdab.com>, 2015-07-08 17:47:07 +0200, , always assume 64bit input data printer otherwise print 64bit record 32bit machine,,
799,9ed40920eb84bd7171a0b5a8dc5997351bf18a05,ilian Wolff <milian.wolff@kdab.com>, 2015-07-08 17:38:44 +0200, , fix compile warning 32bit,,
800,c97f51712d701cd5fd2cb01a1ed63e7cb0305c13,ilian Wolff <mail@milianw.de>, 2015-07-03 09:57:35 +0200, , use ki18n_wrap_ui,,
801,ec5abc026d462b82693103f73ad77d7b369f99bc,ilian Wolff <mail@milianw.de>, 2015-07-03 09:56:38 +0200, , set application domain translation,,
802,7ae0e9271e899668ff1a18147eea8fc68c671b9a,ilian Wolff <mail@milianw.de>, 2015-07-03 09:56:20 +0200, , show window file given,,
803,cacae52c14d3a88335ad757fc7d33aa450e05308,ilian Wolff <mail@milianw.de>, 2015-07-02 23:18:41 +0200, , properly link zlib required,,
804,3e5ff33c9d909454ff52d32c8de102008ada6aae,ilian Wolff <mail@milianw.de>, 2015-07-02 23:17:36 +0200, , remove wrong assert,,
805,58d622b1ff9154b0c5e5e23a46d7625207f24d78,uri Chornoivan <yurchor@ukr.net>, 2015-06-23 19:36:31 +0300, , get rid formatting message,,
806,0ed191eef0d78201a63202f5e9edb56f436a9b7c,ilian Wolff <mail@milianw.de>, 2015-06-23 00:03:25 +0200, , add messages.sh gettext extraction,,
807,a6b194a7fdd508435098080d847f072dbe6e3504,ilian Wolff <mail@milianw.de>, 2015-06-16 01:59:11 +0200, , properly use max last leaked data value,,
808,69b0901f3dd8e4fcba158617e27cf42e2825a405,ilian Wolff <mail@milianw.de>, 2015-06-16 01:41:18 +0200, , include first chart datapoint,,
809,7990bb0a9f1678f3a43e9029a00303ee33f48e55,ilian Wolff <mail@milianw.de>, 2015-06-16 01:40:22 +0200, , advertise heaptrack_gui,,
810,cde62980ca5be97d61c9c5800336e0b1f0077da3,ilian Wolff <mail@milianw.de>, 2015-06-16 01:37:37 +0200, , also show total byte allocated time,,
811,7eb219ac87a61453ad1532b732f5e0a77d05f5ec,ilian Wolff <mail@milianw.de>, 2015-06-16 01:32:11 +0200, , also show total number allocation time,,
812,c26662e71cef4b69caca3360ba872a867b9e951c,ilian Wolff <mail@milianw.de>, 2015-06-16 01:12:20 +0200, , show total leaked data graph,,
813,0f3e514c6c199b0af5f510c7dcfe975e9d4de2b4,ilian Wolff <mail@milianw.de>, 2015-06-16 00:14:09 +0200, , prepare addition visualization refactors loading file class clean implementation bottom model,,
814,7ddeb068d79fac7361c9476ec4b0a3b6f7d9fe5a,ilian Wolff <mail@milianw.de>, 2015-06-15 23:29:31 +0200, , add data enable loading multiple file,,
815,67b56aca92afb6883f2617bc70eb87bd84266335,ilian Wolff <mail@milianw.de>, 2015-06-15 23:03:37 +0200, , group disabling stdio locking code,,
816,a413a8f159baae1d98fc211279cd5b450d0f10e5,ilian Wolff <mail@milianw.de>, 2015-06-15 22:58:06 +0200, , use binary search tracetree,,
817,661a5489657358b33e4ad4932411a85066a65e64,ilian Wolff <mail@milianw.de>, 2015-06-15 22:48:34 +0200, , rename function dlopen callback dl_iterate_phdr one,,
818,612bcc6720b5349906255cd1a016be3a8ef8718f,ilian Wolff <mail@milianw.de>, 2015-06-15 22:42:41 +0200, , two coments,,
819,fdad5a7a1eb3da13d88087a0a2d6c2e6569c516d,ilian Wolff <mail@milianw.de>, 2015-06-15 22:28:21 +0200, , merge branch gui,,
820,ab8b0aa3a48267f2c34b1f5fe8e6569515bf9969,ilian Wolff <mail@milianw.de>, 2015-06-15 22:26:07 +0200, , run stuff parallel,,
821,bc83d5bfb881b4d6c4c23e853f854f6069e69a14,ilian Wolff <mail@milianw.de>, 2015-06-15 21:46:36 +0200, , add tooltip header,,
822,24ca7076791675cffb44030fcd4b0b4bbb8df9f1,ilian Wolff <mail@milianw.de>, 2015-06-15 21:46:28 +0200, , merge location column,,
823,63968a6615448579cd9881e6feaddbbd028d3f19,ilian Wolff <mail@milianw.de>, 2015-06-15 21:37:07 +0200, , make filter case insensitive,,
824,e39c4fbcb33dba005d7970e590a1e6495226d80c,ilian Wolff <mail@milianw.de>, 2015-06-15 21:27:03 +0200, , show debuggee command line heaptrack_gui,,
825,1045bbe9b21801c69a28ace14fc43613e7d24bd0,ilian Wolff <mail@milianw.de>, 2015-06-15 21:11:55 +0200, , make heaptrack compatible debug tool ignore parameter,,
826,137097f10ddaf8220c0d48221f194e333844f9e0,ilian Wolff <mail@milianw.de>, 2015-06-15 21:11:06 +0200, , skip one level backtraces debug build otherwise malloc function would still shown backtrace thereby breaking aggregation use elsewhere,,
827,57f4614d58fafc6035c37da073a208b3d8678266,ilian Wolff <mail@milianw.de>, 2015-06-12 15:37:38 +0200, , translate summary,,
828,e8a046f11fc3173ff43ae942194fb0d93eee71a5,ilian Wolff <mail@milianw.de>, 2015-06-12 15:27:42 +0200, , show full merged backtraces heaptrack_gui,,
829,0f118362c8946ef33320bf7a5c8af274d21849fe,ilian Wolff <mail@milianw.de>, 2015-06-07 20:50:21 +0200, , use kformat byte formatting model implementation,,
830,da42d2a5b871ac965f32b623ddca44a99b9ed41c,ilian Wolff <mail@milianw.de>, 2015-06-07 20:27:09 +0200, , copy massif visualizer gui pattern open load result page also load data background thread threadweaver,,
831,8364f3cb1bfe697c0c6edd50107aff0967ab24f1,ilian Wolff <mail@milianw.de>, 2015-06-07 20:23:59 +0200, , fix style fix early return check model data,,
832,edbcec8ad8c7252b82931800974071bd382180a4,ilian Wolff <mail@milianw.de>, 2015-06-07 18:59:07 +0200, , make possible filter function module file info,,
833,5da7483de16db6cb6949d840e668835f1f6a7208,ilian Wolff <mail@milianw.de>, 2015-06-07 18:47:02 +0200, , allow filtering file module well,,
834,c59b8dea4fb95f5859f62645d5279608b1abb863,ilian Wolff <mail@milianw.de>, 2015-06-07 18:05:12 +0200, , cleanup cmake code bit,,
835,c6d3975e2865860deecd52fcb1e582400970d279,ilian Wolff <mail@milianw.de>, 2015-06-07 17:57:26 +0200, , link kf5 use fix issue,,
836,763950a89fe1fb93a81ff9809f9457c405892cfe,ilian Wolff <mail@milianw.de>, 2015-06-07 13:53:21 +0200, , deduplicate shown function skipping first merged level,,
837,465d0aad3cd0ed54f584989a61be32227154424c,ilian Wolff <mail@milianw.de>, 2015-06-07 13:50:16 +0200, , return empty qstring file available fix assertion modeltest,,
838,d1950a82f031390970dffc64384ac8c1597a1239,ilian Wolff <mail@milianw.de>, 2015-06-07 13:47:32 +0200, , show backtrace tooltip,,
839,e2828224c03524ceebb025cf3785b3ec6bc223b6,ilian Wolff <mail@milianw.de>, 2015-06-07 13:32:59 +0200, , add modeltest source,,
840,9f7bee9e9f6349cb520b670083454123b92b002f,ilian Wolff <mail@milianw.de>, 2015-06-07 13:32:14 +0200, , show sub trace merged allocation data model,,
841,804d0c4767939e397d59cbf8b9b7dd74534eb44d,ilian Wolff <mail@milianw.de>, 2015-06-07 12:43:30 +0200, , move helper function shared file use later tooltips,,
842,d753af2cac5e485654c0e1e356ba18f4c117a948,ilian Wolff <mail@milianw.de>, 2015-06-07 12:30:49 +0200, , add filter function,,
843,bdad4f989fdae865bb6df3d605f151efe7bf5dba,ilian Wolff <mail@milianw.de>, 2015-06-07 12:30:42 +0200, , show function file module information,,
844,54b7334269254dd971852e422aba0fd190d1af63,ilian Wolff <mail@milianw.de>, 2015-06-07 12:05:27 +0200, , sort view,,
845,06c876c64710c1d8f1992bc726a86d868b6f7270,ilian Wolff <mail@milianw.de>, 2015-06-07 11:59:02 +0200, , show merged allocation data model,,
846,6794a21d8c26289d9668561151a46b0285adb10e,ilian Wolff <mail@milianw.de>, 2015-06-07 11:48:20 +0200, , move data model,,
847,c5e02171fec3ecc284d16ea91149fd6a6c28a231,ilian Wolff <mail@milianw.de>, 2015-06-07 11:34:30 +0200, , merge branch master gui,,
848,d0cc85430036e87ed75bdea9abb7ca7d0bf5e9c2,ilian Wolff <mail@milianw.de>, 2015-05-30 14:20:02 +0200, , set version 0.1.0 include tool,,
849,0c503ed5e8cae51ab3db391f58bc4da4f76b4a07,ilian Wolff <mail@milianw.de>, 2015-05-23 23:30:09 +0200, , crash injection linux apparently bad idea overwrite e.g free linux triggered crash trying inject heaptrack kf5 application kwrite,,
850,2fed3e3402acfc0c108bca5025a676ea7bfe7936,ilian Wolff <mail@milianw.de>, 2015-05-21 11:05:34 +0200, , cleanup code slightly readability,,
851,d376deb49a9359e502eccd0788fe013a2be4763a,ilian Wolff <mail@milianw.de>, 2015-05-18 17:59:22 +0200, , merge branch master gui,,
852,9f49e868d25b0e1047e32c5b24569b6590fc519d,atthias Schwarzott <zzam@gentoo.org>, 2015-05-18 12:05:47 +0200, , fix compilation error platform see also http bugs.gentoo.org show_bug.cgi 548850,,
853,93bcc0d4a5fd76c72df81f2af231909254e28b8e,ilian Wolff <mail@milianw.de>, 2015-05-18 16:13:59 +0200, , start simple gui share code ascii printer,,
854,852fd5c5a7ac8fe8826989e35051a223d08ec517,atthias Schwarzott <zzam@gentoo.org>, 2015-05-18 12:05:47 +0200, , fix compilation error platform see also http bugs.gentoo.org show_bug.cgi 548850,,
855,f09ac0eb6cfcf39edab82ba2e206d15cb07058e9,ilian Wolff <milian.wolff@kdab.com>, 2015-04-30 13:26:27 +0200, , stay backwards compatible old boost 1.41 rhel compatibility,,
856,fa6752fc50d0d93c1b9720909df1b096e812ed08,ilian Wolff <milian.wolff@kdab.com>, 2015-04-30 13:21:58 +0200, , set true make simpler run heaptrack e.g libunwind available otherwise one would set ld_library_path manually,,
857,e9211114fc0ca4a5d29ed20f9f6090f95fab5e9b,ilian Wolff <milian.wolff@kdab.com>, 2015-04-30 12:59:56 +0200, , fail compile aligned alloc available,,
858,bc2d956a8d327e90f9e874a17732bdfd1930804d,ilian Wolff <milian.wolff@kdab.com>, 2015-04-27 14:57:23 +0200, , make symlinked heaptrack shell script work properly,,
859,b8548eadd81f429a8fab6864d62f277fd73e0509,ilian Wolff <mail@milianw.de>, 2015-04-15 16:06:09 +0200, , link pthread heaptrack library required run properly debuggees use thread reported yehezkel horowitz horowity checkpoint.com reported anatolii koval akoval luxoft.com,,
860,be5ed66aa0cd2b27878e01cff87b68a0ce411624,natolii Koval <AKoval@luxoft.com>, 2015-04-15 16:02:40 +0200, , use dlmopen trying inject system use optimized dlopen symbol especially embeded linux modification touch dlmopen general prevents dlopen symbol found error trying inject heaptrack system running process,,
861,a5749eae91070091ed70d2f63e2fc61664aa7178,ilian Wolff <mail@milianw.de>, 2015-04-15 15:43:25 +0200, , improve output document pid argument,,
862,d0f9b5fbf743da4f87ef718558be9dda2ac02f95,ilian Wolff <mail@milianw.de>, 2015-04-15 15:08:45 +0200, , fix build machine size_t reported yehezkel horowitz horowity checkpoint.com,,
863,6bb1cb3dd5896c41d1e473b2d93b859146b18a39,olker Krause <vkrause@kde.org>, 2015-01-17 16:51:06 +0100, , override ld_preload prepend enables usage target use ld_preload already,,
864,4bfb1b51db3f8b8768e1fe477e86d7fbb2b2ade1,ilian Wolff <mail@milianw.de>, 2015-01-14 16:13:32 +0100, , add backtrace filter via filter function allocation function matching filter printed,,
865,e6fa1aa678d1f09e157bb66310ccbb9934ac44d5,ilian Wolff <mail@milianw.de>, 2015-01-13 16:48:56 +0100, , make warning error rely libbacktrace feature,,
866,feb3657f9ced04255993bb7f9314a38055587a92,eter Bortas <bortas@gmail.com>, 2014-12-30 18:22:52 +0100, , allow whitespace program name argument,,
867,0764980a80dc4322279fc4653b08f5e0c23f669c,ilian Wolff <mail@milianw.de>, 2014-12-22 14:52:39 +0100, , use correct allocation data massif peak data way sum detailed backtraces equal total snapshot count axis wrong important think rather want find memory hotspot much easier way,,
868,f0956bdcaecb7f4021acc1b6d0634febf8330492,ilian Wolff <mail@milianw.de>, 2014-12-22 14:35:09 +0100, , disable malloc_info baseline attaching running process case interested relative increase want apply relative threshold based absolute baseline example rather data obtained,,
869,7e7fe1537c052a5c687583f6ebb045cf74fa4ed5,ilian Wolff <mail@milianw.de>, 2014-12-22 14:03:30 +0100, , make start time const,,
870,6315798c66e90b92e0130062dfb5f215f37f4ee9,ilian Wolff <mail@milianw.de>, 2014-12-22 14:03:21 +0100, , fail trying join timer thread,,
871,90981a3bb317b67e112c08346ccee4d19808a13c,ilian Wolff <mail@milianw.de>, 2014-12-22 13:23:15 +0100, , silence gdb stdout message using batch silent,,
872,5fbcc10df9b525fdaad2c407e978a426954b2973,ilian Wolff <mail@milianw.de>, 2014-12-22 13:22:27 +0100, , also print exit message killing heaptrack via ctrl,,
873,84fc6336f1188bf73a64836bce366c4b2b5e8393,ilian Wolff <mail@milianw.de>, 2014-12-22 13:19:16 +0100, , load gdbinit file symbol attaching process instead load two libs actually need libdl dlopen init function,,
874,61249adb156881b271db88cd32d98964796adc4f,ilian Wolff <mail@milianw.de>, 2014-12-18 20:04:41 +0100, , cleanup code operator new skipping backtraces,,
875,37f5589aca428699c6532dcfa85e540447b456e7,ilian Wolff <mail@milianw.de>, 2014-12-18 19:36:54 +0100, , also stop backtraces additionally cope backtraces either show main stop first occurrance either symbol,,
876,0b531c531df6b60b1e8a5591d0ae5c8ba90a0157,ilian Wolff <mail@milianw.de>, 2014-12-17 14:09:19 +0100, , fix major regression get backtrace malloc properly zomg must asleep comitted sorry,,
877,57901a7fde2f11733a42829238b95a0f04e91a1e,ilian Wolff <mail@milianw.de>, 2014-12-17 13:49:44 +0100, , remove explicit std qualification use namespace,,
878,b2c5b7bd9c3853180db1db0cd7614eeceb6ec40d,ilian Wolff <mail@milianw.de>, 2014-12-17 13:46:24 +0100, ," instead yielding thread sleep one micro second significantly improves performance threaded test example reason far reduced number context switch perf stat result averaged ten run  1537.459666 task clock msec 2.741 cpu utilized 1.98 164,214 context switch 0.107 sec 4.77 1,238 cpu migration 0.805 sec 1.42 3,996 page fault 0.003 sec 0.26 3,531,767,774 cycle 2.297 ghz 1.96 56.85 supported stalled cycle frontend supported stalled cycle backend 4,404,564,712 instruction 1.25 insns per cycle 1.81 82.34 895,286,284 branch 582.315 sec 1.83 82.05 14,800,878 branch miss 1.65 branch 2.07 83.04 0.560967210 second time elapsed 1.78  940.204408 task clock msec 1.970 cpu utilized 0.97 16,628 context switch 0.018 sec 2.09 1,709 cpu migration 0.002 sec 2.02 3,733 page fault 0.004 sec 0.62 2,299,207,706 cycle 2.445 ghz 0.95 54.67 supported stalled cycle frontend supported stalled cycle backend 3,203,389,330 instruction 1.39 insns per cycle 1.48 84.25 717,416,828 branch 763.043 sec 1.01 77.86 11,127,629 branch miss 1.55 branch 0.98 76.95 0.477194059 second time elapsed 0.34 note utilize cpu good safe power still decrease total run time number cycle spent instruction executed",,
879,ba05fb4d0cdf397d6dd77a40dfa986bc4b465b22,ilian Wolff <mail@milianw.de>, 2014-12-17 13:40:27 +0100, , use acquire semantics ... according page relaxed semantics useless optimization might fact degrade performance system http www.boost.org doc libs master doc html atomic,,
880,261a0443d63e35840c061fe258de5f98f4149740,ilian Wolff <mail@milianw.de>, 2014-12-17 13:38:21 +0100, , cleanup spinlock implementation use atomic exchange use relaxed memory order loop,,
881,a058bb01f1a8046f950d6861fa736cbed2ae2d6b,ilian Wolff <mail@milianw.de>, 2014-12-15 19:02:44 +0100, , cope broken backtraces still output trace index print later,,
882,82dbe6f3d2a14ae6b6dfc4de54923afd29b07b7f,ilian Wolff <mail@milianw.de>, 2014-12-13 00:57:02 +0100, , refactor code yet better thread safety shutdown instead using flockfile use simple spin lock even bit faster using flockfile doe issue shutdown file deleted already also spin lock easily combined check timer thread stopped furthermore code restructured ensure thread unsafe api ever getting called lock held simplify future development debug log enabled trace heaptrack execution,,
883,8a699c03ce971bded0b64b40210e7652b4d66788,ilian Wolff <mail@milianw.de>, 2014-12-11 15:04:20 +0100, , set cmake requirement 2.8.9 use link_private hopefully restores building older cmake version,,
884,3aad01ef866232e6cee9eb9fc33d156704acb235,ilian Wolff <mail@milianw.de>, 2014-12-11 14:37:40 +0100, , one trap added prevents leakage tmp heaptrack_fifo file,,
885,2c74cd539cfdbcafed52e390cebd09ceb255d820,ilian Wolff <mail@milianw.de>, 2014-12-11 14:32:59 +0100, , adapt libunwind change,,
886,3a9c0ce5134a22269dd28b475798b1e7564ad5d9,ilian Wolff <mail@milianw.de>, 2014-12-10 23:08:17 +0100, , silence build warning done vogl apitrace,,
887,960c2fcd43926fed79ea4de3bf266d2c32c2816d,ilian Wolff <mail@milianw.de>, 2014-12-10 19:30:29 +0100, , add noexcept,,
888,a1fd71ad391c55b7c3450eac9dd804f8c333c125,ilian Wolff <mail@milianw.de>, 2014-12-10 19:27:11 +0100, , compile pedantic mode,,
889,35765ea8ecde1abd97ac89a0a1cea4f0b8def1c8,ilian Wolff <mail@milianw.de>, 2014-12-10 19:23:51 +0100, , remove dead code,,
890,8d91faf6f6c16289bf6148051ae2a5fed8335847,ilian Wolff <mail@milianw.de>, 2014-12-10 19:10:18 +0100, , write accurate end time shutdown also print byte allocated per second allocation per second heaptrack_print overview,,
891,6ddb5aebe2775f23059ca416fb814cee075c4f10,ilian Wolff <mail@milianw.de>, 2014-12-10 18:04:42 +0100, , minimize change libbacktrace instead export elf internals call directly make simpler keep libbacktrace checkout sync upstream change,,
892,c56ae75f014d7e6be0f83cfd482879278c421f94,ilian Wolff <mail@milianw.de>, 2014-12-10 16:56:57 +0100, , remove dead code enable warning building,,
893,f04015cfe591fe2af1bae16c39fa9a4b7a618919,ilian Wolff <mail@milianw.de>, 2014-12-10 16:25:27 +0100, , update libbacktrace latest version gcc 4.9 git branch fix serious memory issue libbacktrace see http gcc.gnu.org gcc patch 2014 msg00547.html thanks report analysis andrã bbeking ccmail woebbeking kde.org,,
894,d2ba6f76e2d035b82f7d40c7adeba3ca3a9199f3,ilian Wolff <mail@milianw.de>, 2014-12-10 15:06:08 +0100, , mark boost thread required dependency,,
895,f217c823f1c203bc26bba463e2e5cfa89e8fd086,ilian Wolff <mail@milianw.de>, 2014-12-09 21:54:07 +0100, , overwrite symbol dlopen injected heaptrack,,
896,480f43ae693c66304919266afd5c4a7dbda8c30a,ilian Wolff <mail@milianw.de>, 2014-12-09 21:42:30 +0100, , mark module cache dirty initialization required multiple reattachements,,
897,502891b127650ec042a7f069c9d2888e45359bb2,ilian Wolff <mail@milianw.de>, 2014-12-09 20:27:47 +0100, , use custom thread sleep_for instead timer make attaching work without deadlock timer_delete clean code even much code yet still accurate overhead negleglible test make trivial future let user configure interval,,
898,cfe0417e2a6aa2945cff9d752a6fcfe99111fb42,ilian Wolff <mail@milianw.de>, 2014-12-09 18:59:59 +0100, , refactor code allow multiple runtime injection sometimes useful way hop like investigate area interested,,
899,56ae72d1bcf713f83c38aa5280a4064088ed6abf,ilian Wolff <mail@milianw.de>, 2014-12-09 15:33:55 +0100, , refactor hook initialization previous code work clang gcc new code work gcc hopefully also clang doe depend static initialization order anymore string identifier hook function initialized via constexpr fix usage machine,,
900,715905ec21f216cb1a491394b3f65fc7852409b3,ilian Wolff <mail@milianw.de>, 2014-12-09 11:19:56 +0100, , remove code doe compile slightly older compiler,,
901,0ccb365a3834f93f0eecd24d1e0adf984d37d7b2,ilian Wolff <mail@milianw.de>, 2014-12-09 11:18:08 +0100, , add compile check around,,
902,8b77b5747aa4107dfe27befc56f07192cf37f3c8,ilian Wolff <mail@milianw.de>, 2014-12-09 02:11:24 +0100, , silence warning debuggee quit already,,
903,f47bb1016b95ef9d4d04b0e3c48178ccf7c6580c,ilian Wolff <mail@milianw.de>, 2014-12-09 02:08:55 +0100, , restore original function address shutting injected heaptrack bring back original behavior performance might also able attach desired,,
904,edf2c57aed67058cdf36784481cc9698e1086454,ilian Wolff <mail@milianw.de>, 2014-12-09 01:51:06 +0100, , return output stream,,
905,3422764e8696b6a6f031337609f5501e86b87875,ilian Wolff <mail@milianw.de>, 2014-12-09 01:49:49 +0100, , merge branch inject,,
906,09d52a3f9a775b2d00e39302a7237dd8f5abb40b,ilian Wolff <mail@milianw.de>, 2014-12-09 01:45:24 +0100, , stop heaptrack away,,
907,2c3eb0da70a138971752e7424d5e82026445fe44,ilian Wolff <mail@milianw.de>, 2014-12-09 01:13:57 +0100, , add pid option attach heaptrack running process use gdb attach process call dlopen finally initialization hook new prevent underflow total memory consumption call malloc_info parse get baseline current total memory consumption point attached process code refactored shared common code two library old heaptrack bash script adapted support version,,
908,522c702dd479ad02e69794e865d83072506f4293,ilian Wolff <mail@milianw.de>, 2014-12-08 22:13:37 +0100, , restructure argument parsing shell script make easier maintain argument become position independent useful,,
909,63892b3b5306c5c1fa247cbc5c776362a6a82c16,ilian Wolff <mail@milianw.de>, 2014-12-08 12:19:29 +0100, , get rid temporary string allocation,,
910,07ddfe8e1ad8730fe12fb7db6bf193c2f3fa88c4,ilian Wolff <mail@milianw.de>, 2014-12-08 12:09:05 +0100, , use lambda instead passing printf label magic number also get rid useless string allocation format byte size data member never printed,,
911,e6102ea3bf506a52dbcdb587b022159321aeae37,ilian Wolff <mail@milianw.de>, 2014-12-08 11:26:09 +0100, , cleanup fix add already need,,
912,07e5ef28c6112709bf5a1ce830080838a7e5067b,ilian Wolff <mail@milianw.de>, 2014-12-07 15:53:29 +0100, , use mprotect address want overwrite seems reliable method,,
913,b5ab387368186303b927964cb0f1ea4cbbaa7139,ilian Wolff <mail@milianw.de>, 2014-12-06 15:39:36 +0100, , also overload posix_memalign,,
914,aa00bc9a91613d235e7ac378f5f546d6f5b681bc,ilian Wolff <mail@milianw.de>, 2014-12-06 15:35:07 +0100, , overwrite realloc calloc cfree runtime,,
915,236a0e408437c424caa34d509502be82dd1807aa,ilian Wolff <mail@milianw.de>, 2014-12-06 15:27:25 +0100, , overwrite dlopen dlclose well runtime,,
916,402bd9f0527b6e96e118a29366ab7b33d30e6e53,ilian Wolff <mail@milianw.de>, 2014-12-06 14:51:09 +0100, , ensure hook function convertible original function,,
917,e9a56b1cde3a4d87c36f2fd9a6c3b167ce9bd6ba,ilian Wolff <mail@milianw.de>, 2014-12-06 13:46:36 +0100, , cleanup code,,
918,55990bbeffd330e66f0874a8d132bf21cb073d59,ilian Wolff <mail@milianw.de>, 2014-12-06 13:42:02 +0100, , make hook list easier extensible,,
919,7777e3f2dd5ee97695ddaad7519248eb2292516f,ilian Wolff <mail@milianw.de>, 2014-12-06 13:35:34 +0100, , cleanup code bit,,
920,5ce62c14f183947f11dffb96c0dbf1d2aaa5a90f,ilian Wolff <mail@milianw.de>, 2014-12-06 00:50:02 +0100, , also overwrite free,,
921,2d72d0bfa2170f0e98613b2b584e66392c28031c,ilian Wolff <mail@milianw.de>, 2014-12-06 00:43:42 +0100, , make runtime patching work wow awesome missing offset i.e dlpi_addr must added p_vaddr well r_offset seems see crash anymore custom malloc gest called,,
922,9e6fcc375af036b00a5f7c31fac61de03da21542,ilian Wolff <mail@milianw.de>, 2014-12-06 00:06:19 +0100, , first work towards runtime injection really working yet,,
923,88daa5f7f9687142a465b2c7c3773261a06e3852,ilian Wolff <mail@milianw.de>, 2014-12-05 21:35:32 +0100, , remove spurious define required faulty machine mine,,
924,73cfd8f3af31a60efe8ba72363a47c793489c24f,ilian Wolff <mail@milianw.de>, 2014-12-04 19:24:05 +0100, , add lgpl v2.1 text copying file,,
925,be460c48f55d9c8aae8c6541f680157c8560555f,ilian Wolff <mail@milianw.de>, 2014-12-03 17:11:39 +0100, , fix line information written line number written decimal format heaptrack_print expects hexadecimal number reading lead completely wrong line number end,,
926,2684dfe16dd61071510959f140d1a5c7360cddb3,ilian Wolff <mail@milianw.de>, 2014-12-03 12:07:27 +0100, , always show biggest heap total memory consumption still issue better nothing,,
927,0572faf909675220730731de7e4898dc73e728ab,ilian Wolff <mail@milianw.de>, 2014-12-02 15:11:48 +0100, , add platform check give better error message cmake time,,
928,f8d7e48820389d76d1f414636ee0e33785a7eeec,ilian Wolff <mail@milianw.de>, 2014-12-02 14:51:04 +0100, , skip anything main massif backtraces,,
929,f74229542a6283a4ea7181960daf66505629aee1,ilian Wolff <mail@milianw.de>, 2014-12-02 14:48:58 +0100, , properly handle case encountered main still want break main,,
930,830231a2f674873fb444a635dfc6abd9c28ccc55,ilian Wolff <mail@milianw.de>, 2014-12-02 14:34:29 +0100, , sort massif output file expected e.g massif visualizer probably tool well,,
931,72cf5643902a6f4f321c91ead796a14c77ff6c34,ilian Wolff <mail@milianw.de>, 2014-12-02 12:22:19 +0100, , introduce tunable massif threshold detailed freq parameter,,
932,170d276c698107e528a680c7eb5c37edd6757164,ilian Wolff <mail@milianw.de>, 2014-12-02 04:30:53 +0100, , print full backtraces generated massif file file easily become quite large really need heaptrack visualizer efficiently read data handle,,
933,029a39d371adb7afa3c77b66739ccd5768477d44,ilian Wolff <mail@milianw.de>, 2014-12-02 03:36:34 +0100, , print first level backtrace generated massif file,,
934,16e13bd6be811af7b6a6eb1148167a3798bd38d6,ilian Wolff <mail@milianw.de>, 2014-12-02 02:56:00 +0100, , basic support massif output file generation far includes total heap memory usage backtraces added next step,,
935,52cc7fb4f84ee217b7eca254bb2d7984c6877884,ilian Wolff <mail@milianw.de>, 2014-12-02 02:54:57 +0100, , use thread instead signal increase timestamp frequency sadly creates new thread every timer apparently still better using signal randomly influence function sometimes fubar output file think,,
936,bd1ea0e40ecd75478ad4a41acf906203caf11bbe,ilian Wolff <mail@milianw.de>, 2014-12-02 02:00:23 +0100, , remember debugee command line sometimes useful also tracked massif tool,,
937,eb8a0ee0d32ac2983793c4dea65e3d487f0f3dbb,ilian Wolff <mail@milianw.de>, 2014-12-02 01:32:02 +0100, , simplify code write exe path directly stream need temporary string allocation,,
938,3d90743452c9c2c363dcc052188b8d0bda26c4e5,ilian Wolff <mail@milianw.de>, 2014-12-02 01:26:40 +0100, , simplify code worth imagined performance gain,,
939,8e5ef0a142f0265e3e591b73433b2f1e4838d69a,ilian Wolff <mail@milianw.de>, 2014-11-28 16:53:06 +0100, , unset automatic locking stdout stdin required process,,
940,9dd88c5d992b5aa56624c166d6793289422ccc51,ilian Wolff <mail@milianw.de>, 2014-11-28 16:50:04 +0100, , prefer api speed sad give noticeable speedup,,
941,f48aec970f1468358461a3cae4adf57f47074f5e,ilian Wolff <mail@milianw.de>, 2014-11-28 16:43:35 +0100, , use fputs need format anything,,
942,2128462e460ed6f572b045ce100eb0d7956acaa7,ilian Wolff <mail@milianw.de>, 2014-11-28 16:22:44 +0100, , cleanup module handling code change file format bit output single line per module delegate whole interpretation dl_phdr_info data allows reduce size module bit leading hope fully faster binary search amongst benefit,,
943,db5a27fc81f1e00cf35facebe17fba15e1accaf6,ilian Wolff <mail@milianw.de>, 2014-12-01 15:50:10 +0100, , remove code depends local libunwind patch,,
944,63ba13f759ee6661323710406cd531571a0ace81,ilian Wolff <mail@milianw.de>, 2014-11-27 18:23:44 +0100, , fixup handling posix_memaling return value zero indicates success fix inconsistency application use function,,
945,e030a99ebb6c83c7a339699daa26c54753836f9f,ilian Wolff <mail@milianw.de>, 2014-11-27 18:23:38 +0100, , print leaked line,,
946,df3cafb45aad4bc460cc6e237e2355acd92e9317,ilian Wolff <mail@milianw.de>, 2014-11-27 18:19:36 +0100, , properly take cfree account,,
947,80eb2f9683c74f5aa2e3132e50cdccb13146fc73,ilian Wolff <mail@milianw.de>, 2014-11-27 17:46:11 +0100, , ensure ever initialize,,
948,57d6248ca9b9874f390f73c608c847aa7400e01a,ilian Wolff <mail@milianw.de>, 2014-11-27 17:40:10 +0100, , use error handler init error callback happens rarely error message still helpful,,
949,12e68d88974ff95291f98fdfe8b433ecabd62b48,ilian Wolff <mail@milianw.de>, 2014-11-27 17:37:39 +0100, , fixup callback handler wrong data passed,,
950,f6abc6876d36ef125f7d98bfa4ce3ec69ec5fb2a,ilian Wolff <mail@milianw.de>, 2014-11-27 17:30:58 +0100, , cleanup get rid obsolete isexe member module required call,,
951,6d16b899ed8810b5fe6b672bb62c52fe92cd378f,ilian Wolff <mail@milianw.de>, 2014-11-27 15:50:16 +0100, , add second elapsed heaptrack log future evaluation,,
952,a95b183e46c66d20d5a5e5f3c7009c2930778af7,ilian Wolff <mail@milianw.de>, 2014-10-17 14:59:58 +0200, , support building libunwind different include directory,,
953,a4b8ad0c620f9403f9e7767110d6dae113b02de1,ilian Wolff <mail@milianw.de>, 2014-11-25 17:12:05 +0100, , delete obsolete file used vogl heaptrack get rid,,
954,dcc2dc83a3e3002af612bb4e62acef9a0dfa792e,ilian Wolff <mail@milianw.de>, 2014-11-25 16:55:22 +0100, , support atomic function possible,,
955,e910675cc23f5e151fde2e40fdd8f99d31a5a315,ilian Wolff <mail@milianw.de>, 2014-11-24 17:22:40 +0100, , prevent crash apps using qprocess,,
956,c3c73e8bd83cdd5910b711db4bd7f6007ccf3976,ilian Wolff <mail@milianw.de>, 2014-11-19 13:33:01 +0100, , prevent issue file corruption tracking forking process thankfully pthread_atfork used get notified fork call stop heaptrack forking continue parent process child process stop heaptrack alltogether todo make possible track child process,,
957,0b7691c21c3a94eb9bbcb25b88705e8ff3ce93bf,ilian Wolff <mail@milianw.de>, 2014-11-18 20:04:47 +0100, , also use linereader,,
958,95c90e29980a30073e2b7dca41763cd16f168b3d,ilian Wolff <mail@milianw.de>, 2014-11-18 19:44:20 +0100, , forgiving encountering bad data still clue bad data come though ...,,
959,0cbd0da16976875f0fe9c53b7175925f8f993a9a,ilian Wolff <mail@milianw.de>, 2014-11-18 18:44:58 +0100, , optimize findallocation call leveraging monotonicity index comparing incoming trace index largest index far encountered already decide whether index equal largest one location used repeatedly i.e loop directly return last item index larger last known one definitely find thus insert directly return index lower last index actually need binary search yield small noticeable speedup 14.5s 13.4s one file,,
960,e933e5b92fc519fe75e0cbed0ccdd02b6b66a2ed,ilian Wolff <mail@milianw.de>, 2014-11-18 18:01:12 +0100, , slightly cleanup optimize linereader readhex,,
961,2d724ccb22e13ee9601d480bc6a3aa3ad14dd16f,ilian Wolff <mail@milianw.de>, 2014-11-18 17:42:27 +0100, , minor cleanup,,
962,ce7554ea3c5831c509ab38d127c0450f2502bd47,ilian Wolff <mail@milianw.de>, 2014-11-18 17:41:20 +0100, , fill sizehistogram going print,,
963,82b9b1f7724e2fa03361bbd70d1eb42decb27181,ilian Wolff <mail@milianw.de>, 2014-11-18 17:28:13 +0100, , introduce optimized reader class faster reading hex number benchmark big data file reduces runtime heaptrack_print whole function pretty simple willing sacrifice simplicity big performance win,,
964,507e7a906c549faed69d2a10339cc1305072efbf,ilian Wolff <mail@milianw.de>, 2014-11-18 16:40:35 +0100, , improve error checking reading data file,,
965,c91380ac89e9dabaa9a3cdeda9e0163a1918c61a,ilian Wolff <mail@milianw.de>, 2014-11-18 16:03:17 +0100, , format byte size,,
966,ca1922bd2dd90f8ea9865e0d2fc02f5227e00520,ilian Wolff <mail@milianw.de>, 2014-11-18 14:10:18 +0100, , fallback main found,,
967,8554de50aad97edd0a9cb8045d8bc19124c1d430,ilian Wolff <mail@milianw.de>, 2014-11-18 14:10:07 +0100, , change output format slightly better readability,,
968,88278f273110c2ad8880c3fa590fdcc9e5719b96,ilian Wolff <mail@milianw.de>, 2014-11-18 13:44:54 +0100, , merge allocation equivalent location equivalent mean data except instruction pointer address useful missing debug information,,
969,294212ec06746eef81c85717eac058744f66944a,ilian Wolff <mail@milianw.de>, 2014-11-18 12:09:59 +0100, , cleanup code also initialize fileline fix regression looking kdepim heaptrack,,
970,c2ff39249123d78cf1fa80cd8e4c5fb3ddcd2db5,ilian Wolff <mail@milianw.de>, 2014-11-17 20:18:09 +0100, , reduce looping,,
971,7601dfa13ac844a510cddcf0519913bc6848d939,ilian Wolff <mail@milianw.de>, 2014-11-17 19:51:23 +0100, , call per file also improve check overlapping library wrong combined drastically cut memory consumption improve runtime process,,
972,e4c0f1a3ffcc93ba854f7a6ee8985366bdc3c666,ilian Wolff <mail@milianw.de>, 2014-11-17 18:59:34 +0100, , fix issue related improper backtrace symbol lookup clear list known module also really forget module ensures keep invalid module around improperly associate instruction pointer address module fix heaptrack usage larger application kmail plasma desktop kde4,,
973,927dadfa45f0ad122029e992bb3bf2e52f638968,ilian Wolff <mail@milianw.de>, 2014-11-17 18:32:48 +0100, , take pt_load dlpi_phdr module fix issue incorrect backtrace symbol shared library used new example show e.g libc.so overlapped many library incorrectly chosen find backtrace symbol patch issue gone,,
974,7c76ed5ab20b8bbffc6c776b98cefd65663bb5f7,ilian Wolff <mail@milianw.de>, 2014-11-17 17:16:57 +0100, , add whitespace lib name,,
975,78224e9aa04ba0d7504ed1fc5538c5369aeb1b64,ilian Wolff <mail@milianw.de>, 2014-11-17 17:16:45 +0100, , fix warning missing debug info linux vdso.so.n,,
976,5339d1f95da7b2941b18d9d55c903456e1755113,ilian Wolff <mail@milianw.de>, 2014-09-08 10:37:23 +0200, , check main index reading data,,
977,8fc6ee45badb39d5d0d7b698a9db0526fcfe49d4,ilian Wolff <mail@milianw.de>, 2014-09-08 10:23:16 +0200, , skip operator new etc encountering trace make much simpler backtraces filtered automatically,,
978,cd0c7d0e9f5aa802d5d1048b52c849c14dba57fc,ilian Wolff <mail@milianw.de>, 2014-09-07 00:42:18 +0200, , write histogram file specified cli argument,,
979,8ea6eacdf804815ab1c2f5cef12499bd63053178,ilian Wolff <mail@milianw.de>, 2014-09-07 00:24:05 +0200, , improve output better understand number mean,,
980,8687054b4cca33d08cd946a8428f470a09afd555,avid Faure <faure@kde.org>, 2014-09-06 23:22:24 +0200, , fix compilation opensuse,,
981,0d6d933bb2381b7f7f8391d311067857936f5f26,avid Faure <faure@kde.org>, 2014-09-06 23:05:34 +0200, , fix compilation passing flag command line well,,
982,2c8ca4ee69382ca662c3844c2f1adb81dc8820d4,ilian Wolff <mail@milianw.de>, 2014-09-05 10:18:25 +0200, , skip operator new location even differs occurring real world data file operator new unsigned long encountered twice different,,
983,750639bec7ed322a242ab8cf7ade59e7324ff94f,ilian Wolff <mail@milianw.de>, 2014-09-04 17:57:41 +0200, , get confused operator,,
984,3fcfa03d1ac9156a79034ba426e7d7d8b89ae7e7,ilian Wolff <mail@milianw.de>, 2014-08-26 02:44:08 +0200, , share code,,
985,19421809c16401afa5db2b8f58a64a2510292474,ilian Wolff <mail@milianw.de>, 2014-08-26 02:37:58 +0200, , make possible switch merged non merged backtraces,,
986,a8b36359d9531526638a122fc530219be51c01d3,ilian Wolff <mail@milianw.de>, 2014-08-26 02:30:18 +0200, , add comment esp implementing better trace merging,,
987,1b128ce1d110196e90e06bae269aed48bc74547d,ilian Wolff <mail@milianw.de>, 2014-08-26 02:26:23 +0200, , remove obsolete debug output,,
988,b982cab197a95ee327bc455ad0b895fdd61534b6,ilian Wolff <mail@milianw.de>, 2014-08-26 02:21:05 +0200, , add implicit value program option,,
989,5ecf0f123e6cf07fc2b0073773a6789cb7b51204,ilian Wolff <mail@milianw.de>, 2014-08-26 02:16:43 +0200, , merge code print merged backtraces pointer member really powerful feature wow,,
990,b056e8a9154ddf36c68601c1c31f78355d09cc28,ilian Wolff <mail@milianw.de>, 2014-08-26 02:01:56 +0200, , prettify output top allocator place todo something similar place well,,
991,186f80e84ed38a952cf2b9e9f1d078ead8ff551d,ilian Wolff <mail@milianw.de>, 2014-08-26 01:45:03 +0200, , merge allocation data instruction pointer safe except peak memory consumption ignore temporal dependency otherwise greatly improves output multiple call function different place get merged thus show one fat data point instead multiple thinner one,,
992,c19b735b52583ad8d3393b01ea0eb12b100c2bf4,ilian Wolff <mail@milianw.de>, 2014-08-26 01:04:13 +0200, , skip operator new unsigned long new start backtraces,,
993,12961d1dede821f2081175682d25ff61f49f7572,ilian Wolff <mail@milianw.de>, 2014-08-26 00:21:52 +0200, , make index typesafe,,
994,2d820134238fbce984830a0149cbae4e361108ee,ilian Wolff <mail@milianw.de>, 2014-08-26 00:01:51 +0200, , fix name variable,,
995,2742841a3a783775b4886f534ff8e065e5adc025,ilian Wolff <mail@milianw.de>, 2014-08-25 23:56:32 +0200, , add bit recursion callgraph test debugee,,
996,eb5c5e7700553662f6ca071f414fc530b691471b,ilian Wolff <mail@milianw.de>, 2014-08-25 23:51:58 +0200, , fix regression properly stop backtraces main function,,
997,02db6f039b1c0cc63267b75fec7490408ca528c7,ilian Wolff <mail@milianw.de>, 2014-08-25 23:39:17 +0200, , cleanup code reduce duplication,,
998,ddb809ada8c947ae62ab6b3bfc58c0b0ee04a24e,ilian Wolff <mail@milianw.de>, 2014-08-25 23:33:11 +0200, , split trace instruction pointer data debug info required whereas trace contains mapping parent outputted many time different combination way call libbacktrace function often decrease file size cost memory consumption debugee run memory consumption significantly decrease heaptrack_print though,,
999,a7de1b1ef50ece539aaf263be250afd5ec121f5b,ilian Wolff <mail@milianw.de>, 2014-08-25 22:19:55 +0200, , reduce amount cout flushing std endl also flush output pretty bad performance instead use endl make sense i.e output block,,
1000,a9f925e0b7ae1c23a59a2f17cadbbfa96546f2b3,ilian Wolff <mail@milianw.de>, 2014-08-25 22:17:21 +0200, , cleanup code encapsulate data reading make stuff private,,
1001,3405458b252faf2abc6822df0c97c592d95d7be3,ilian Wolff <mail@milianw.de>, 2014-08-24 16:45:06 +0200, , add test call graph merged better,,
1002,c3f155688bd0024470c7918ac21db61fb12baf2e,ilian Wolff <mail@milianw.de>, 2014-08-25 19:18:12 +0200, , improve heading different output section,,
1003,329b91e6fa5c5ea7e87202fdad1e372d308c283c,ilian Wolff <mail@milianw.de>, 2014-08-25 18:52:16 +0200, , take dlclose account update module cache accordingly,,
1004,2cf2502eb700b898a420cd627b1f0b97bec87893,ilian Wolff <mail@milianw.de>, 2014-08-25 18:38:04 +0200, , make possible validate correctness allocation overload still flaky apparently function related allocation missing,,
1005,94cd898ce08b45dbe6384ccfb274e2ebd68b5f43,ilian Wolff <mail@milianw.de>, 2014-08-25 18:06:13 +0200, , improve output,,
1006,1015e2122da9379008d0995922a1c7eb0687d46e,ilian Wolff <mail@milianw.de>, 2014-08-25 18:06:04 +0200, , clash print histogram help,,
1007,32b4eb5f60fdf050d4e59ba8230c5d9e050c6d7f,ilian Wolff <mail@milianw.de>, 2014-08-25 17:57:47 +0200, , link directly libheaptrack interpreter important useful data imo,,
1008,44f93d14a4160b7b32ed75cb0347163365ed0bb8,ilian Wolff <mail@milianw.de>, 2014-08-25 17:57:28 +0200, , shorten template identifier default,,
1009,9d322ae8c4d0a63b29eef34bbc319fa943e8e4e9,ilian Wolff <mail@milianw.de>, 2014-08-25 17:57:00 +0200, , use boost program_options make output configurable,,
1010,4625d3a11cc80367d3d95a8ae213141210695910,ilian Wolff <mail@milianw.de>, 2014-08-25 15:46:37 +0200, , simplify code use std namespace,,
1011,95f7d8018124dd284cb0d2a364c9211794a2a429,ilian Wolff <mail@milianw.de>, 2014-08-25 15:42:12 +0200, , simplify code bit,,
1012,4f390651eb1049899f2f532f1c12502d1389f8c5,ilian Wolff <mail@milianw.de>, 2014-08-25 15:35:07 +0200, , output pointer adresses without prefix needlessly increase file size cast uintptr_t output,,
1013,13b4ea723e84d76cca74c20611436c6a8170ba9e,ilian Wolff <mail@milianw.de>, 2014-08-25 15:24:41 +0200, , output function file line index unknown location null value default anyways need output information thereby decrease filesize bit debugees many occasion missing debug information,,
1014,5279d2b2be9dcae819b6024883dc7365afa69b59,ilian Wolff <mail@milianw.de>, 2014-08-23 17:30:48 +0200, , also show individual peak allocation,,
1015,1f63ff3dee1c03d4249c70f72a42224569717023,ilian Wolff <mail@milianw.de>, 2014-08-23 17:23:55 +0200, , also show top ten allocation place ignoring deallocations,,
1016,e889814f7b2fd94a0382d1c39eb35527cb323792,ilian Wolff <mail@milianw.de>, 2014-08-23 17:16:48 +0200, , use print ptr address,,
1017,0a05c2424131736c4bc28e66112af18c748683b1,ilian Wolff <mail@milianw.de>, 2014-08-12 00:12:05 +0200, , add debug output show whats currently going,,
1018,0e74f2a9589d31f53cdd0eeb8388b9efee485995,ilian Wolff <mail@milianw.de>, 2014-08-13 16:00:18 +0200, , optimize sync cin cout cerr stdio single threaded apps,,
1019,69308c263ba49b60bbc7a5055f82253feb43837d,ilian Wolff <mail@milianw.de>, 2014-08-13 14:11:30 +0200, , cleanup code bit,,
1020,ccbd87a7d8c91ba6f6a935c7acec4142ceacd528,ilian Wolff <mail@milianw.de>, 2014-08-13 11:55:25 +0200, , add comment use stdio,,
1021,3ca9274b28485577f706b72b235dcaa3c4046d54,ilian Wolff <mail@milianw.de>, 2014-08-13 10:52:17 +0200, , fixup check executable debuggee call first also find exe path,,
1022,c4b982809319c292a737d16dbaec860e44d27977,ilian Wolff <mail@milianw.de>, 2014-08-10 17:15:12 +0200, , add heaptrack help,,
1023,3cdbe5f3cd0a1dcbfab92ff33d63ef84ea6f49ff,ilian Wolff <mail@milianw.de>, 2014-08-10 16:57:49 +0200, , cleanup output message make simpler understand heaptrack,,
1024,a2521ccd8a7ef78fb75f4fa88ed40a4176b5d9b0,ilian Wolff <mail@milianw.de>, 2014-08-10 16:50:57 +0200, , install heaptrack shell script use proper path therein get relative path install directory lib libexec target folder write shell script,,
1025,c1e2fbdaeb4998157a1d308a2fde6ea1e30e8819,ilian Wolff <mail@milianw.de>, 2014-08-06 23:19:14 +0200, , cleanup restructuring,,
1026,4a2071b753fb0d20a2948fa6f75ca52aacc0a302,ilian Wolff <mail@milianw.de>, 2014-08-06 22:49:54 +0200, , rename heaptrack start cleaning code structure,,
1027,9c91f56784d2bd36338ce1da2c980f6e5b91c7c1,ilian Wolff <mail@milianw.de>, 2014-08-06 22:31:56 +0200, , remove mallocinfo code old repo,,
1028,71211387240fdc2e1f76fc4294f58b35e7993340,ilian Wolff <mail@milianw.de>, 2014-08-03 21:22:47 +0200, , directly evaluate backtrace data make final data interpretable even binary library change also make possible ship data file external computer evaluation,,
1029,f27505202be63c4c1f62672b0b417de90653d6f4,ilian Wolff <mail@milianw.de>, 2014-06-07 02:45:28 +0200, , hide anything garbage,,
1030,4b008f9d2504a84cc6b8cce44bb0eeb616053813,ilian Wolff <mail@milianw.de>, 2014-06-05 15:31:48 +0200, , use named pipe compress output data fly plain awesome imo really easy get implemented evaluation code also untouched thanks boost iostreams library nice support gzip data,,
1031,58963d75391076fd9828a58d5bd21b9321544e35,ilian Wolff <mail@milianw.de>, 2014-06-05 12:22:23 +0200, , fixup example code use proper delete,,
1032,a3992a16ce891f81c92c82ee10c043665c0dfca1,ilian Wolff <mail@milianw.de>, 2014-06-04 19:47:02 +0200, , output new data outputted sequentail way thus information obsolete,,
1033,b033cd1812a77c9e14691d929fdd69b2357892ba,ilian Wolff <mail@milianw.de>, 2014-06-04 19:43:08 +0200, , directly link malloctrace test executables,,
1034,bffb9bcaaad68c833ac8574f2c466f6cadcaf28e,ilian Wolff <mail@milianw.de>, 2014-06-04 18:37:43 +0200, , output number hex form reduces output data file size slightly simplifies evaluation code switch different format time,,
1035,fc47e31680a3771e6cbd8cbaf8ca30a8b452e7e0,ilian Wolff <mail@milianw.de>, 2014-06-04 18:34:04 +0200, , output prefix address reduces size output data file,,
1036,6af5f13b7bd30b09c80a9f8f7bf785d872c0218e,ilian Wolff <mail@milianw.de>, 2014-06-04 18:25:30 +0200, , decrease runtime memory overhead getting rid allocationinfo output every allocation ptr output free reduces runtime cpu overhead also drastically reduces memory overhead relatively large allocationinfo map required anymore size output data file increase cost seems bearable worth reduces memory overhead imo,,
1037,f004bdc0f2f2d571fb80de771929ba4743b4052a,ilian Wolff <mail@milianw.de>, 2014-06-04 15:03:46 +0200, , realloc nullptr pure malloc case handle realloc like free followed malloc malloc,,
1038,c92e49000453af99fa509fcd30d4a6c9ea1d9332,ilian Wolff <mail@milianw.de>, 2014-06-04 14:18:14 +0200, , store backtrace information memory efficient tree structure instead storing individual trace ever call allocation function store tree instruction pointer tree constructed top bottom node representing instruction pointer get associated unique index index enough reconstruct backtrace point iterating parent index done evaluation program nice side effect data file becomes smaller bigger application evaluation run common part beginning every allocation trace implicitly shared,,
1039,d027ffe1378e5ba29da2d3b8b5fc28e7bfe05fec,ilian Wolff <mail@milianw.de>, 2014-06-02 20:33:23 +0200, , cleanup code make explicitly work unw_backtrace api,,
1040,e821ec6018becc30e3905600f8327ad4b459670d,ilian Wolff <mail@milianw.de>, 2014-06-02 19:20:37 +0200, , use unw_backtrace instead manual unw_step loop former potentially much performant may require work libunwind currently investigating,,
1041,f0aec6a26d3c70dcb030324ce20989a92f439535,ilian Wolff <mail@milianw.de>, 2014-06-02 16:50:02 +0200, , add warning unknown executable format,,
1042,46cdade983b7447c8a2e0160b0fc52b90f7aeba2,ilian Wolff <mail@milianw.de>, 2014-06-01 01:34:32 +0200, , enable per thread unwind caching much performant libunwind also add another serialization point also trigger call sigprocmask every mutex lock unlock,,
1043,c993d99fb65d1c1c62a2a5cd0b09212bff67edc4,ilian Wolff <mail@milianw.de>, 2014-06-01 01:16:54 +0200, , refactor handling set stderr stdout print directly console file get replaced pid host app allows set dev null disable output,,
1044,b8bf3884409592bf70c0babeb4c0af88398ea414,ilian Wolff <mail@milianw.de>, 2014-06-01 01:16:01 +0200, , add garbadge null end line,,
1045,e3b1fbbc440f491893934f0755dabc53e31ed475,ilian Wolff <mail@milianw.de>, 2014-06-01 00:58:21 +0200, , prepend output file malloctrace even env var set also add code comment future thing,,
1046,ec267210d0eee08842d605e38a7d655c9b337ce5,ilian Wolff <mail@milianw.de>, 2014-06-01 00:45:57 +0200, , simplify code reduce overhead trace time evaluate module connection evaluation time rather tracing reduce overhead also get rid rather large cache thereby reducing memory overhead,,
1047,c7d0462acfc76540be06e06a1526000efd18b037,ilian Wolff <mail@milianw.de>, 2014-06-01 00:04:56 +0200, , save ptr start end address instead start size also output size,,
1048,55c78243ec7656977b3951bea03c68d3243af9d9,ilian Wolff <mail@milianw.de>, 2014-05-26 21:08:57 +0200, , return early without bzipping output file,,
1049,5cdc129b13a05d2d8374ee7c708722531ee5c981,ilian Wolff <mail@milianw.de>, 2014-05-26 21:08:28 +0200, , add threaded test application,,
1050,6db15234389c42f1e791ecd1b5c34b7623cf6857,ilian Wolff <mail@milianw.de>, 2014-05-23 15:04:42 +0200, , extract information allocation data size histogram,,
1051,a0e6a2a2bb04e52ba5e52ad584cd9c45ff984266,ilian Wolff <mail@milianw.de>, 2014-05-21 22:39:46 +0200, , use stack allocated trace buffer seems required multithreaded application otherwise get random crash deadlock ...,,
1052,07ea6bcfe739cf5aff7095390978073f150adf48,ilian Wolff <mail@milianw.de>, 2014-05-28 14:37:33 +0200, , break encountering zero senseless imo also continuing would slow libunwind would try ask dwarf info next address bad performance wise never find anything pay nothing,,
1053,3f36142ac44cd43bac34b1d466c334b4fcb7e728,ilian Wolff <mail@milianw.de>, 2014-05-28 13:19:52 +0200, , take trace size account hash generation,,
1054,1cfb730a48a445e2d2af9719f056fb5f9df74470,ilian Wolff <mail@milianw.de>, 2014-05-21 21:59:04 +0200, , skip instruction make sense,,
1055,f5066553ac6130bcdd9987e1d709d77be39edb06,ilian Wolff <mail@milianw.de>, 2014-05-21 21:41:29 +0200, , fixup environment passing via gdb library,,
1056,a1b4857849523d4686fc3fa0cf2284810313e5fb,ilian Wolff <mail@milianw.de>, 2014-05-21 21:41:17 +0200, , abort failure,,
1057,a6b86228624d535cde684c3063e38e02ffaa296f,ilian Wolff <mail@milianw.de>, 2014-05-21 21:41:09 +0200, , preallocate trace buffer,,
1058,faae998e454eadc0a8f929cb391b28e98b274d10,ilian Wolff <mail@milianw.de>, 2014-05-21 16:22:06 +0200, , cleanup environment,,
1059,8ce5d72cd2d5e517939bb096db1e3f1490df4947,ilian Wolff <mail@milianw.de>, 2014-05-21 15:57:45 +0200, , disable error message dwarf info missing,,
1060,16928f5742bc8c45f29289395ed90c32360a0e3b,ilian Wolff <mail@milianw.de>, 2014-05-21 15:56:00 +0200, , get file line dwarf info possible,,
1061,4a1b7457e55ad9016930f4d9d9b2b77bc27fc9ce,ilian Wolff <mail@milianw.de>, 2014-05-21 15:19:29 +0200, , update trace script,,
1062,0a23358bb20dbbb6e2c47aa294c65108274b6c28,ilian Wolff <mail@milianw.de>, 2014-05-21 15:13:56 +0200, , use vector everywhere pedantic input data,,
1063,2a2d2f4f6992a5216adfc74e58e28f711908fc5c,ilian Wolff <mail@milianw.de>, 2014-05-21 14:58:28 +0200, , print total leaked byte number allocation,,
1064,b2e1ea160728b403c91f36f377e89d1dd4b1682a,ilian Wolff <mail@milianw.de>, 2014-05-21 14:58:09 +0200, , manual reserve call slower default way,,
1065,f541d0e00b83db51b489a7e4169472eba700ed28,ilian Wolff <mail@milianw.de>, 2014-05-21 14:42:33 +0200, , introduce memleak test app,,
1066,ad98f8b3bc3010f8c0f792d58adc0388467aecf6,ilian Wolff <mail@milianw.de>, 2014-05-21 14:42:12 +0200, , print top allocator leak sorted way,,
1067,3eaf275075dfd92a882962d1ad845bbb0c08896a,ilian Wolff <mail@milianw.de>, 2014-05-21 14:34:04 +0200, , refactor code work single file use vector trace latter allow sort trace later evaluation purpose easily,,
1068,00774c49aef33d698132658c4191c6835bc10941,ilian Wolff <mail@milianw.de>, 2014-05-21 14:33:44 +0200, , demangle function name,,
1069,7e3e32a8e079e833cab046a9f3c7f8b728f97aaf,ilian Wolff <mail@milianw.de>, 2014-05-21 12:04:59 +0200, , refactor malloc tracing synchronize stuff completely forgot free follow malloc different thread perfectly fine support must centralize data handler bad merge multi thread data one file way interleaved properly good later evaluation contention point view tried minimize much possible evaluation profiling done later,,
1070,56ecaca9a688c93a7f99fd061fb066e76b526b77,ilian Wolff <mail@milianw.de>, 2014-05-20 15:08:14 +0200, , bring back trace cache reduce generated filesize also speed thing repeated large print actually quite slow furthermore extend tool actually interpret data,,
1071,9feda7b291511e55213c2ba3e1e1b6f45df1ed99,ilian Wolff <mail@milianw.de>, 2014-05-20 11:48:58 +0200, , check valid malloc free handling,,
1072,cfba746fa87b288094de8c8b26b223f228477a52,ilian Wolff <mail@milianw.de>, 2014-05-20 10:06:49 +0200, , reserve place module,,
1073,b9879bdd82b66e3608c705e4bf45ef24ccc5c2f9,ilian Wolff <mail@milianw.de>, 2014-05-20 09:33:29 +0200, , reimplement backtrace reading offload dwarf info interpretation make profiling run much faster later evaluation performance critical thereafter,,
1074,3d6a9d25f2e0cbce89c5fe4f95d0b378091ba4af,ilian Wolff <mail@milianw.de>, 2014-05-20 09:32:22 +0200, , fix regression introduced,,
1075,027bd1364deb5adb5110ef5370e5b2169915d049,ilian Wolff <mail@milianw.de>, 2014-05-19 16:35:34 +0200, , use relative module offset instead baseaddress address,,
1076,eef11c061d7fe3ebe6d3af7ea648bef70c316ec0,ilian Wolff <mail@milianw.de>, 2014-05-19 16:24:19 +0200, , add kdev project file,,
1077,ee83e1206e438a4daf7cdef961efe3ff5902cb11,ilian Wolff <mail@milianw.de>, 2014-05-19 16:24:10 +0200, , add start malloc trace evaluation executable show post mortem address resolution yet really functional enough quick test,,
1078,40abfada65f15c9abecc394918da28a6d79d7099,ilian Wolff <mail@milianw.de>, 2014-05-19 16:23:10 +0200, , remove uuid code required usecase afaik,,
1079,622c127e4740be8518bec80d086af53dc1ef8e8b,ilian Wolff <mail@milianw.de>, 2014-05-19 15:07:56 +0200, , cleanup code insert data directly sorted order,,
1080,3cc802314a8b59266b801e655098836ec79f5eb4,ilian Wolff <mail@milianw.de>, 2014-05-19 14:55:10 +0200, , port bsearch stl std lower_bound,,
1081,fe3af5907334e7df2388b63561319da92c568e0a,ilian Wolff <mail@milianw.de>, 2014-05-19 14:31:03 +0200, , adapt code coding style,,
1082,e316c2f40a7685007406b300c0e00ef2861a25e3,ilian Wolff <mail@milianw.de>, 2014-05-19 14:25:33 +0200, , cleanup code bit removing unused function,,
1083,9ee058409f1179f0d84e48ef4ded5c2bcdd8f7c2,ilian Wolff <mail@milianw.de>, 2014-05-19 08:26:44 +0200, , get proper dwarf based backtraces filename line number code based libbacktrace gcc see http github.com mirror gcc tree master libbacktrace furthermore include btrace cpp cmakelists.txt based vogl valve software rad game tool see http github.com valvesoftware vogl.git,,
1084,14707f968d3f125b757f398a7f144fde01f118fd,ilian Wolff <mail@milianw.de>, 2014-05-16 02:46:04 +0200, , add todo sub tree matching,,
1085,23452e91c86a5cd1ca058ae83fc32f3b9c07506e,ilian Wolff <mail@milianw.de>, 2014-05-15 22:47:48 +0200, , create single entry tree output,,
1086,577c088ed00242a8ff945a65ae10b896c119b932,ilian Wolff <mail@milianw.de>, 2014-05-15 22:42:42 +0200, , save memory use unsigned int instead size_t number call stack hopefully fit range,,
1087,35f5e6f71172cd76324aa6f99286fe96ca48c923,ilian Wolff <mail@milianw.de>, 2014-05-15 22:33:46 +0200, , print given call tree,,
1088,1e344a061a09202e02329a263c2fc1a7c48df3e8,ilian Wolff <mail@milianw.de>, 2014-05-15 22:33:07 +0200, , stop,,
1089,aa3f3e83d7279057cf600eea729e59b862b74c31,ilian Wolff <mail@milianw.de>, 2014-05-15 22:32:34 +0200, , move test file compile debug mode,,
1090,66771cf9a8761649383b43c1f71a24743fdb3f6f,ilian Wolff <mail@milianw.de>, 2014-05-15 21:10:42 +0200, , use namespace std,,
1091,8eb50547a1735035721bb5e39c9eade802ced38c,ilian Wolff <mail@milianw.de>, 2014-05-15 20:51:38 +0200, , add kateconfig,,
1092,8ffb672686557b0e4ec2a36e00cf5e5eaaed0056,ilian Wolff <mail@milianw.de>, 2014-05-15 20:10:50 +0200, , write output per thread file merge later,,
1093,adca5a1f92d9ae05361129c06b24564d3ae5d5c3,ilian Wolff <mail@milianw.de>, 2014-05-15 19:43:46 +0200, , skip handlemalloc properly,,
1094,4a7a141e787da54f43d761c401283236bcfa4afe,ilian Wolff <mail@milianw.de>, 2014-05-15 19:37:14 +0200, , add support posix_memalign aligned_alloc valloc,,
1095,4417d3dfc7421df523ad1715119b09ca56c75751,ilian Wolff <mail@milianw.de>, 2014-05-15 19:24:02 +0200, , handle calloc,,
1096,d11ca3af2a8a8b9bf44f1b579f63b163635b502b,ilian Wolff <mail@milianw.de>, 2014-05-15 19:07:15 +0200, , handle realloc,,
1097,306dc7db470310d07c70837e8f4ea82ba2f9e1f5,ilian Wolff <mail@milianw.de>, 2014-05-15 19:01:14 +0200, , also output call free,,
1098,8c2ff99b118572daed7c6fb789ebbce9f2bc35e2,ilian Wolff <mail@milianw.de>, 2014-05-15 18:26:30 +0200, , print full backtraces,,
1099,abbbd2c7c7fb0f23420f7d9daec980281457f7d2,ilian Wolff <mail@milianw.de>, 2014-05-15 18:00:09 +0200, , make possible run malloc tracer gdb easily,,
1100,422fc3c1c9464641a29c6420a42fd4e6b47ebb5b,ilian Wolff <mail@milianw.de>, 2014-05-15 17:59:21 +0200, , cleanup code output function name also keep memory afterwards mean need separate tool interpret data much faster way,,
1101,c7b7af5a1e2aca402c0beb8eed8a2ce762bae111,ilian Wolff <mail@milianw.de>, 2014-05-15 17:32:30 +0200, , cache encounter,,
1102,88f8ebd2b999cc46efe69dd4b527ec4335dd94c7,ilian Wolff <mail@milianw.de>, 2014-05-15 17:08:17 +0200, , print caller malloc operator new operator new instead full backtrace,,
1103,9a2028bec8bb98421b977456c3d7eba33812f6a6,ilian Wolff <mail@milianw.de>, 2014-05-15 16:27:27 +0200, , demand initialize real_ func ptrs must rely static initialization order,,
1104,c374204c8298c7642e6ad7d94ef5d3df5d2520bb,ilian Wolff <mail@milianw.de>, 2014-05-15 16:10:22 +0200, , local unwind required,,
1105,6342b6a604b83df9f52461b538ef313fdd4848f0,ilian Wolff <mail@milianw.de>, 2014-05-15 16:10:11 +0200, , add example,,
1106,e109bbd428a27491845777bca3ed5d98dffe6736,ilian Wolff <mail@milianw.de>, 2014-05-15 16:09:58 +0200, , extend test.c bit,,
1107,b9f32866a0cb5f5d72b46ed74ca11babef43d04b,ilian Wolff <mail@milianw.de>, 2014-05-15 14:47:25 +0200, , add simple malloc free tracer,,
1108,3fdc7a92dc4f51cd840962665e8d2e3e78075455,ilian Wolff <mail@milianw.de>, 2013-05-31 18:55:36 +0200, , trace child apps,,
1109,8bfae1a5e47a2d0defd605787275b9bd80a9855d,ilian Wolff <mail@milianw.de>, 2013-05-31 18:55:30 +0200, , append pid output file,,
1110,f7d672d3b5fb0a3fc4c968a565ec2e70c817ec46,ilian Wolff <mail@milianw.de>, 2013-05-31 18:08:18 +0200, , add simple run script,,
1111,446684162170566ba20e402201f4775028192264,ilian Wolff <mail@milianw.de>, 2013-05-31 18:07:53 +0200, , simplify,,
1112,e40de8b71746d9211eff113061c03ed695eb5107,ilian Wolff <mail@milianw.de>, 2013-05-31 17:51:02 +0200, , make output actually usable also possible dump custom file,,
1113,520f6ef25a3b2c6ac11789b9718f13f6b1dc13d9,ilian Wolff <mail@milianw.de>, 2013-05-31 14:27:49 +0200, , make output destination configurable,,
1114,05229807f0a8803b010d1aada85388f4dd034d05,ilian Wolff <mail@milianw.de>, 2013-05-31 14:27:37 +0200, , enable file,,
1115,98c3f8887af0a160130fe2039bf6fface446b093,ilian Wolff <mail@milianw.de>, 2013-05-31 14:18:49 +0200, , add test binary verify trick also work pure application,,
1116,dfbf38ba62c23a67e6e186738954da081594bda4,ilian Wolff <mail@milianw.de>, 2013-05-30 01:16:58 +0200, , true instead,,
1117,8caf7282534493b78db6b5c35c7affe21ab6e1e4,ilian Wolff <mail@milianw.de>, 2013-05-30 01:03:12 +0200, , fix usage message,,
1118,52fbe926ea1778b922ba49136a7ca83f0262c9ec,ilian Wolff <mail@milianw.de>, 2013-05-30 01:02:48 +0200, , use raw pointer get double delete exit,,
1119,b2467801616dfd9e13d85024219f8c13552d4750,ilian Wolff <mail@milianw.de>, 2013-05-30 01:02:32 +0200, , add snapshot timestamp output,,
1120,8e8a26dfe4d4fce3469926c28484e3dca9337527,ilian Wolff <mail@milianw.de>, 2013-05-30 00:40:08 +0200, , add lgpl license,,
1121,ca0e266ea877c893bfa450163c365ee2a9587aca,ilian Wolff <mail@milianw.de>, 2013-05-30 00:29:12 +0200, ,,,
