id,sha,author,date,issue,message,file,content
0,9aac0a28896a714b698ab489a473b9bc05deb7c3,mitry Bezhetskov <Dima00782@gmail.com>, 2021-07-26 00:41:32 +0700, , begin support typed function reference proposal added flag supported call_ref 1691,,
1,7eadc12f71483b1d9d8cf16877efa33361d1e493,oni L <EnderMoneyMod@gmail.com>, 2021-07-14 19:44:27 -0300, , wasm2c support multi value 1686,,
2,16ab43493237c8b82ccb411618f1679a9a321148,sumu Takikawa <asumu@igalia.com>, 2021-06-29 17:34:51 -0700, , allow plain try catch delegate 1676 match recent change exception handling spec allowed case reduce special case syntax http github.com webassembly exception handling pull 157,,
3,29323f09c63c48aef029ff308c39e1c1dc11d6c4,eejin Ahn <aheejin@gmail.com>, 2021-06-29 15:18:09 -0700, , remove unwind 1682 unwind removed see webassembly exception handling 156,,
4,cdc1b459c0ba7a5ae8c2b091fe3065185ce81494,eejin Ahn <aheejin@gmail.com>, 2021-06-29 15:17:47 -0700, , make tag attribute encoding uint8 1681 change encoding attribute field currently contains value denoting tag exception varuint32 uint8 field effectively unused moment reserved future use likely need varuint32 even future see http github.com webassembly exception handling pull 162 doe change encoded binary encoded way varuint32 uint8,,
5,f6ecccbb30383fac7a9f92f49d4c3cc25174ebb2,sumu Takikawa <asumu@igalia.com>, 2021-06-29 13:54:58 -0700, , fix try delegate label printing 1685 similar previous bug 1609 kind block label test check adjacent try delegate block label print correctly split 1675,,
6,6448318d5577b12c4bb1cec081ea0b48012ed3f4,sumu Takikawa <asumu@igalia.com>, 2021-06-29 13:53:26 -0700, , fix resolution delegate label 1675 label resolution code example spec http github.com webassembly exception handling blob master proposal exception handling exceptions.md  try try call foo delegate delegate catch ... catch_all ... end  label resolve delegate target typical block construct work current code resolve also error case like following  try nop delegate  possible represent label binary format try delegate target,,
7,b97dd591fad3e4b7d382d409247007cf65fc2baf,oni L <EnderMoneyMod@gmail.com>, 2021-06-28 21:54:20 -0300, , wasm2c support saturating float int 1680,,
8,6c9355e490a37c7a990d504f32676c9d7a2ebb13,oni L <EnderMoneyMod@gmail.com>, 2021-06-25 18:48:22 -0300, , wasm2c support sign extend 1679 touch error passing disable sign extension wasm2c nothing really test enable disable feature flag anyway non issue cast technically implementation defined relied elsewhere well non issue,,
9,950042585626bc639c4b330bd47c7b9be4e11bac,eejin Ahn <aheejin@gmail.com>, 2021-06-22 13:06:29 -0700, , replace event tag 1678 recently decided change event tag event section tag section rationale section contains generalized tag reference type may used something exception name event confusing web context see http github.com webassembly exception handling issue 159 issuecomment 857910130 http github.com webassembly exception handling pull 161,,
10,c6cd63316ac53208900cda4d1089a22618b85256,ailey Hayes <ricochet@users.noreply.github.com>, 2021-06-17 19:24:00 -0400, , add submodule init readme 1677 add submodule init cmake command gtest others fail running cmake without,,
11,e808dfe3fc7ec890be4ef59d4772afaa19af4847,am Clegg <sbc@chromium.org>, 2021-05-28 15:43:49 -0700, , fix reading bad relocation type 1672 fix http fuzz issue detail 30792,,
12,63c350984f7dbe76f5963f4df819bfc375ea0217,am Clegg <sbc@chromium.org>, 2021-05-13 16:01:41 -0700, , objdump add support segment flag linking section 1669,,
13,4432d426f984cf255915e7bc6f2cf3d64a054ddd,outer van Oortmerssen <aardappel@gmail.com>, 2021-04-26 16:33:05 -0700,1665, wasm decompile fix repeated pre declaration 1666 see http github.com webassembly wabt issue 1565 http github.com webassembly wabt issue 1665 could done better sufficient,,
14,39bcd102d4c0130dcbd31214a42bf2cc31434836,outer van Oortmerssen <aardappel@gmail.com>, 2021-04-22 10:35:45 -0700, , memory64 support reading writing limit bit lebs 1664,,
15,6e5684a6688fb79c12761df6b045f10acb82f47d,am Clegg <sbc@chromium.org>, 2021-04-07 19:11:30 -0700, , add support extended name section 1659 noticed lacked support debugging 1651,,
16,6bc09acabcc7ded2ce934613a7ded98a25217d09,g Zhi An <zhin@chromium.org>, 2021-04-07 14:13:40 -0700, , handle simd expression wasm2c 1660 simd feature flag supported wasm2c handle expression switch statement assert,,
17,3c79f17a7dadb396f955f0912858c3230ed8e10e,outer van Oortmerssen <aardappel@gmail.com>, 2021-04-05 12:38:16 -0700, , memory64 support bit data init expr 1656,,
18,15a5156b05981c16ba181fae0e35c50418f86df0,am Clegg <sbc@chromium.org>, 2021-04-04 17:34:00 -0700, , use ninja cmake generator default 1146 tempted followup removing unix makefile support completely top level makefile user really prefer still run cmake directly course,,
19,aa0515b3c808da880942db8658abeaa969534667,g Zhi An <zhin@chromium.org>, 2021-03-24 14:23:09 -0700, , version 1.0.23 1654 add _free export building libwabtjs,,
20,094996150a4602f26e596ea26a6d4e64975c1a67,g Zhi An <zhin@chromium.org>, 2021-03-23 17:52:14 -0700, , add _free list export 1652 _free used src wabt.post.js,,
21,6a18d150d0a0e73034383449fe1377e9133aa64f,g Zhi An <zhin@chromium.org>, 2021-03-23 10:37:00 -0700, , version 1.0.22 1650 thirdparty testsuite update wasi compilation fix bit compile fix simd update,,
22,1ba6f750a50c9b033a2309f979edeb0b4bcbf1ef,g Zhi An <zhin@chromium.org>, 2021-03-23 09:10:27 -0700, , simd unskip test 1648 missed unskipping prior implementation simd test running,,
23,d15b1a1e3b975b3ce77aa2b747f890f396179d2f,g Zhi An <zhin@chromium.org>, 2021-03-22 17:12:10 -0700, , simd implement store lane 1647,,
24,2c7d2572414aad39341734d1513a6cd94759a320,g Zhi An <ngzhian@gmail.com>, 2021-03-22 15:22:02 -0700, , simd implement load lane 1646 new kind ast node instruction immediates memarg align memarg offset lane index required new visitor function place drive cleanup share simd lane parsing logic shuffle lane new load lane instruction requires rebasing test error message slightly different,,
25,c7293e42c587cab2b15eaf2934f574f84eeab9e5,g Zhi An <ngzhian@gmail.com>, 2021-03-17 09:17:00 -0700, ," simd implement v128.load 32,64 _zero 1644 requires new type relevant implementation virtual mthods various visitor",,
26,a24ae3eed05f28d91a48dac2591619dd204e4526,g Zhi An <ngzhian@gmail.com>, 2021-03-16 20:58:19 -0700, , fix ubsan compile 1641 happens supported end setting use_ubsan twice hit fatal_error one sanitizer allowed,,
27,1692d72ff2f9755f1e26753b6465ae777d1b81b0,g Zhi An <ngzhian@gmail.com>, 2021-03-16 17:38:07 -0700, , simd implement i64x2.extend_ low high _i32x4_ 1643 unskip rebase,,
28,b584d2dc49bb8a6a3a3d171c99862c58a1a52d27,g Zhi An <ngzhian@gmail.com>, 2021-03-16 17:21:13 -0700, , simd implement i64x2 comparison 1642 rebase unskip simd_i64x2_cmp,,
29,5a1409b4df8e402084bc17dd76c52bb84fcffd7d,g Zhi An <ngzhian@gmail.com>, 2021-03-16 17:04:28 -0700, , simd implement 1640 rebase unskip,,
30,8e2d18cdbad19381061aca7a2ff00f798ee16483,g Zhi An <ngzhian@gmail.com>, 2021-03-16 14:11:16 -0700, , simd implement q15mulrsat_s 1639 rebase unskip,,
31,ed1eaeef20df234f420db6010ea38778e88dd74b,g Zhi An <ngzhian@gmail.com>, 2021-03-12 11:32:21 -0800, , simd implement extmul instruction 1638 renumber floating point rounding instruction since overlap new extmul instruction rebase  rebase unskip simd extmul test,,
32,5f2a1c830563b15d6405e8c44f8c52c41024fa00,g Zhi An <ngzhian@gmail.com>, 2021-03-12 11:07:43 -0800, , simd implement extadd instruction 1637 rebase unskip ,,
33,6738ebd57307a84e90b2782a694018315a86993a,g Zhi An <ngzhian@gmail.com>, 2021-03-12 10:31:27 -0800, , simd implement i64x2.abs 1636 rebase unskip,,
34,ff438ad6e641447ef5f71670d42f174f4878e193,g Zhi An <ngzhian@gmail.com>, 2021-03-12 10:00:39 -0800, , simd implement _zero 1635 rebase ,,
35,7e50e4b0f5b5c75fce08229df020a8d6e27bd041,g Zhi An <ngzhian@gmail.com>, 2021-03-12 09:16:45 -0800, , remove mention running travis script readme 1634,,
36,08c15bc9b961428d8c1357bf608daa9dfb76d31e,g Zhi An <ngzhian@gmail.com>, 2021-03-11 14:18:09 -0800, , simd rename widen extend implement double precision ops 1633 double precision conversion instruction implemented     sufficient unskip rebase bunch test due rename widen extend,,
37,9b21a2b92ae3cc66be163e1349f6825f5585ca34,g Zhi An <ngzhian@gmail.com>, 2021-03-11 11:45:26 -0800, , implement i8x16.popcnt rebase 1625,,
38,86229770e051cea3d59433bbaa48162ed3def983,teven Johnson <srj@google.com>, 2021-03-10 12:49:02 -0800, , fix format string warning bit compilation 1629 1630,,
39,06d05820b294f3398ccaafaf72b6e74737ba905e,teven Johnson <srj@google.com>, 2021-03-05 15:47:54 -0800, , fix compile error with_wasi 1627 1628,,
40,055ab5e21b1c642a0242daf76837164ef7b8a4a1,g Zhi An <ngzhian@gmail.com>, 2021-03-04 19:47:46 -0800, , simd rename any_true implement i64x2 bitmask all_true 1624 rename any_true v128.any_true add i64x2.bitmask i64x2.all_true rebase simd_boolean unskip spec simd since i64x2.abs implemented unskip spec simd simd_lane.txt update dump interp test rebase,,
41,9be10643b12554bc4f9c75017463220d28bca609,g Zhi An <ngzhian@gmail.com>, 2021-03-04 16:26:21 -0800, , bump third_party testsuite tot 1623 bump third_party testsuite run test update spec tests.py skip new simd test implemented rebase test test spec based latest update testsuite define global_i64 wasm2c global test skip simd test due updated new instruction,,
42,f5d520d1cefd5a5add8c93e4e135d443817d0357,g Zhi An <ngzhian@gmail.com>, 2021-03-04 11:28:15 -0800, , bump testsuite version fix test 1622 incremental bump testsuite tot simd test work yet main fix test added spec repo invalid functype type section based spec functype single byte 0x60 leb encoding come effect proposal,,
43,bdd7059ce7c5bf09b2a830f6cd5e15240d438a6e,am Clegg <sbc@chromium.org>, 2021-03-02 15:07:54 -0800, , version 1.0.21 1618,,
44,c5143758ac529c2193d894f4db9b9d087bc86b00,am Clegg <sbc@chromium.org>, 2021-03-02 08:25:10 -0800, , objdump fix typo 1614,,
45,cd26248fd432e7937ce16c38b159a4a2ff31036e,ofl0r <rofl0r@users.noreply.github.com>, 2021-03-02 16:24:33 +0000,1315, add github action build source release tarball 1615 close 1315 result seen http github.com rofl0r wabt release tag 9.9.99d,,
46,2b9d936713e46b6702e6ef3bb9207344af7ad014,sumu Takikawa <asumu@igalia.com>, 2021-02-23 17:38:53 -0800, , fix label printing block folded form 1609 make label consistent non folded printing multiple block function block body,,
47,8d9f5ac238ff801d014689dc7ee687bca562a3a4,sumu Takikawa <asumu@igalia.com>, 2021-02-23 17:35:57 -0800,146, fix checking delegate target block kind 1605 clarified http github.com webassembly exception handling issue 146 delegate target block loop commit also add failure test cover several case discussed issue,,
48,6d6c37b9a0fb29ee469ef8561395ea9a44fa6bb0,WANABETHATGUY <974153916@qq.com>, 2021-02-24 09:34:46 +0800, , feat drag file editor trigger recompile 1598 feat drag file editor trigger recompile fix code style fix reviewd problem style semicolon close,,
49,ffb22e3c900e8246d806d2e9a765dc14251b33e8,sumu Takikawa <asumu@igalia.com>, 2021-02-18 07:09:32 -0800, , update rethrow depth handling catch_all opcode 1608 give catch_all opcode previously catch_all shared opcode else spec allocates 0x19 opcode adjust rethrow depth semantics previously interpreted rethrow depth argument counting catch block spec clarified count block similar fashion related instruction,,
50,036a632a24679062e7fc891e7743195139bfa0a9,sumu Takikawa <asumu@igalia.com>, 2021-02-09 12:12:01 -0800, , update exception handling support current proposal 1596 update support exception handling latest proposal compatible future phase exception handling described http github.com webassembly exception handling pull 137 http github.com webassembly exception handling pull 143 add back tagged catch catch_all rethrow previous version wabt update match current spec e.g. catch_all share opcode else rethrow depth index catch block etc add unwind delegate instruction remove exnref br_on_exn update relevant test detail could still change e.g. maybe delegate depth validated happy submit spec detail change,,
51,09ac53e41d959ce8e14e703e627327971e67f6d3,am Clegg <sbc@chromium.org>, 2021-01-29 15:06:30 -0800, , objdump set table name based import name 1599,,
52,80221f003c9d461a381d41d810212aa91004d1fc,olin Ihrig <cjihrig@gmail.com>, 2021-01-29 16:19:19 -0500, , update uvwasi repo 1597 uvwasi transferred node.js github org commit update project source repo,,
53,e57e6cd4b342332ca8d6a3e667cf257c6d5b2c82,en Smith <binji@chromium.org>, 2021-01-09 19:49:57 -0800, , add function wasm api 1586,,
54,0b80b37c5f99102c5b1c669191ff7b48436875d9,en Smith <binji@chromium.org>, 2020-12-29 21:01:05 -0800, , update gtest 1585,,
55,92e4cb9df0fab16083e32bf1b0fda0c4b6a55695,g Zhi An <ngzhian@gmail.com>, 2020-12-17 12:22:59 -0800, , add script generate html man generate wasm decompile html 1592 script regenerates html man page ran checked wasm,,
56,669d09305c17aedbcdfd3c86d8c65ac003600bc9,oni L <EnderMoneyMod@gmail.com>, 2020-12-14 16:25:41 -0300,1575, fix 1575 wasm2c i64_load16_u used 1589,,
57,ed647324744cbc3da86eb737af4a9d9262314789,am Clegg <sbc@chromium.org>, 2020-12-09 22:09:40 -0800, , wasm objdump report data segment name 1588 also fix ordering data name table segment name,,
58,3c4bad02b95e8ef6b4f773647adcbe467cc316f3,oni L <EnderMoneyMod@gmail.com>, 2020-12-07 16:18:58 -0300, , port big endian platform s390x others trivially added 1557 initial attempt s390x port second attempt s390x port fix big endian memory fill fix memory location calculation improve simd implement big endian memory grow fill relocation 0x00 per spec make wasm2c endianness work fix shuffle fix load endianness wasm2c refactor shared code clean swapbytessized clean clean fix opcodecnt basic test,,
59,60dee30f5711f82a019f462144d7ff4d42c6a259,en Smith <binji@chromium.org>, 2020-12-04 11:09:15 -0800, , fix emscripten build rebuild libwabt.js 1583 sure line got removed ...,,
60,215279faaca0913b574dbc7c8e4d0ad7d0e5139b,en Smith <binji@chromium.org>, 2020-12-03 21:24:11 -0800, , select instr multiple result invalid 1582 reference type proposal add select instruction type vector number greater invalid fix 1577,,
61,f6a833f9b220786b18e083b01a117e679a33d8d0,am Clegg <sbc@chromium.org>, 2020-12-03 18:24:51 -0800, , wasm objdump display name start function 1581,,
62,8e5db7dac04ac22c0040b6a4ea070ec720a816b9,am Clegg <sbc@chromium.org>, 2020-12-03 14:08:31 -0800, , fix warning nfc 1580 really enable werror,,
63,2a487fc00594a54e5085fb6915e0575db3cb4013,am Clegg <sbc@chromium.org>, 2020-12-03 14:08:18 -0800, , use stderr logging error output 1579 sure using stdout convention normally write logging error message stderr,,
64,24af5fa65c3c730d4b36810b4e2b0aa43794d29b,raveer Kumar <yadav.praveer.kumar@gmail.com>, 2020-12-02 11:55:15 +0800, , let cmake add flag needed 1576,,
65,b5fdd589261813b2c3b2a49d6829a21f3b7f834a,en Smith <binji@chromium.org>, 2020-11-23 16:38:39 -0800, , fix func.wast spec test 1574 fix spec test failure func.wast wasm text format allows use function type specified one three way  explicit type index symbol type params result param i32 result i64 explicit type index params result type param i32 result i64  option text format sugar since binary format always encodes explicit type index option need check type index match explicitly given params result normally checking whether index bound validation step syntax checking step however case index bound type checked must syntax error,,
66,96001693fb1694318630675ea69e832412b624c4,am Clegg <sbc@chromium.org>, 2020-11-20 10:42:41 -0800, , add new relocation type 1572 see http d91276,,
67,252da1d8bf8c18915f07ca1a7aa29ff30b5fd1a6,am Clegg <sbc@chromium.org>, 2020-11-20 10:41:16 -0800,1554, wasm objdump honor extended name section 1573 really part 1554,,
68,8555ec5dbcd09bebed3182facf197f0270609d04,adu M <matei.radu94@gmail.com>, 2020-11-16 09:16:15 -0800, , update output type func type binary writer reader 1570 signed radu root radu.sh,,
69,2d91f696983e69d2ac5eb65efb83d8251d774d22,en Smith <binji@chromium.org>, 2020-11-11 09:43:41 -0800, , element offset expr required bulk disabled 1569 text parsing allowing element segment without offset expression even bulk memory flag disabled fix 1566,,
70,830d32a41449278cacb0bf17530618d47c43340b,en Smith <binji@chromium.org>, 2020-11-03 14:11:14 -0800, , rename atomic.notify .atomic.wait 1564 atomic.notify i32.atomic.wait i64.atomic.wait renamed upstream ago new name added wabt,,
71,8e42376ccd5f05dc1036f91b4262e67b0fc66c2d,outer van Oortmerssen <aardappel@gmail.com>, 2020-10-26 15:46:16 -0700,5, change required make new memory64 spec test run 1560 uncovered thing previous test also required switching location index discussed http github.com webassembly memory64 issue also one small .py change ensures new test consistent posix path,,
72,30af7afe3c27fd2957036eb09453f74ecc75ac67,arin Morrison <darinmorrison@gmail.com>, 2020-10-26 10:37:13 -0600, , update simd support 1553 update testsuite update test result disallow lane nums optional simd ops update simd support mark test spec func.txt failing authored darin morrison darinmorrison,,
73,1eb5e2c5b7409a64c6e610fb74df3e5b61394cfc,dmund Wu <22758444+eadwu@users.noreply.github.com>, 2020-10-23 15:21:11 -0400, , wasm2c build library wasm impl 1408 also include header file needed compilation,,
74,807580497711003aaab04c5e383f5118b3133104,ingqang Bai <bxq2011hust@qq.com>, 2020-10-22 06:32:45 +0800, , fix compile failed ubuntu 18.04 aarch64 cmake3.10.2 1559,,
75,be5e8bf8ec698f9ad3a1b6fbb412680995fe39bf,am Clegg <sbc@chromium.org>, 2020-10-02 12:27:47 -0700, , add initial support extended name section 1554 see http github.com webassembly extended name section although phase proposal seems pretty straight forward already implemented binaryen,,
76,ee87440dedb4335d5ca8ec25e86b36c27a5b3368,ndy Wingo <wingo@igalia.com>, 2020-10-01 17:30:58 +0200, , add relocatable support table 1549 1549 add relocation table number place reify table number call_indirect table.get table.set ... reference type enabled also fix symbol table generation unnamed definition allow relocating reference anonymous function table test add variant relocation symbol table dump test without feature enabled enabling reference type cause relocs emitted also add detail relocation dump test see target symbol relocation,,
77,cd63243c5b3b2fa938f365edab30139f74549b51,outer van Oortmerssen <aardappel@gmail.com>, 2020-09-30 17:27:14 -0700, , update testsuite 646b43e 1555 head writing head containing memory64 test want land separately,,
78,76f76f9c01b43124c98769d9c92620c9a587dd62,aweÅ Bylica <chfast@gmail.com>, 2020-09-18 18:37:24 +0200, , disallow bit flag memory64 disabled 1547 fix regression binary reader introduced implementation memory64 extension http github.com webassembly wabt pull 1500,,
79,122f79d2030156857e5f5a581d060eb9edb2bfec,aweÅ Bylica <chfast@gmail.com>, 2020-09-17 21:45:08 +0200, , disallow non zero memidx bulk memory disabled 1546 bulk memory extension disabled allow memory index data segment zero,,
80,367ff792670cb6294697102201f2ca4e73ee32e5,ndy Wingo <wingo@igalia.com>, 2020-09-17 18:04:07 +0200,1527, fix reloc related test 1537 1545 fix reloc related test 1537 1527 1539 needed test expectation updated 1537 merged patch doe also renames test consistency adapt test renaming,,
81,3c35d5e680ed6be4ae5afa0a0022e29bf463ec26,ammax <sammax@outlook.de>, 2020-09-17 00:23:24 +0200, , wat2wasm fix relocation offset 1527 fix reloc offset test long function section long function body relocation offset depend length function size encoding length function section size encoding remove unused variable add preceding function test,,
82,4ca46604bb9cd9596f2fbdd57008e4574f08c4d4,ndy Wingo <wingo@igalia.com>, 2020-09-17 00:22:45 +0200, , fix reloc section reference enable bulk memory 1539 fix reloc section reference enable bulk memory fix 1538 add assertion successor elided datacount section,,
83,cd0b3db0524f11023e6cdbbaa6e430f8dc3aa2f8,ndy Wingo <wingo@igalia.com>, 2020-09-17 00:21:23 +0200, , eager symbol table 1537 eagerly create symbol table writing relocatable binary instead adding entry symbol table referenced writing relocatable binary going make symbol function allows exported function globals written proper exported no_strip flag resulting file link wasm symbol table name export name without dollar previous commit wrongly assumed globally visible name linking taken export section whereas actually symbol table therefore patch change strip dollar also make named binding globally visible exported host binding mostly unrelated visible compilation unit binding unnamed definition added symbol table add symbol table test rename intern helper ensureunique,,
84,21350996d5bbcd9cafbaa3a5687e6fb503da060c,ndrei Maiboroda <andrei@ethereum.org>, 2020-09-14 18:47:58 +0200, , fix refptr empty 1544,,
85,58e0e3812d69efb3b5f55613b0f73d5f864e6b51,ominic Chen <1108560+ddcc@users.noreply.github.com>, 2020-09-10 13:25:46 -0400, , add missing case relocation 1541,,
86,774a115665dea3b2699f3b083b2b8ef52ad75c07,ndy Wingo <wingo@igalia.com>, 2020-09-10 19:13:36 +0200,1534, refactor symbol table creation binary writer 1535 commit refactors representation symbol binary writer allow fix 1534 followup,,
87,812a5a031fe6b9ae41cb8755e32a49315633ab58,en Smith <binji@chromium.org>, 2020-09-08 12:34:14 -0700, , fix bug writing multi value block type 1533 fix bug writing multi value block type block type must written sleb leb also want relocatable added way write fixed size sleb  fix ubsan issue,,
88,c3b9c32b6165295c536e5884dfcfe8e4bdf7a811,en Smith <binji@chromium.org>, 2020-08-31 10:08:33 -0700, , implement simd bitmask instruction 1530,,
89,ca7890a54b76628327623553cbe34552b5fc53a5,ammax <sammax@outlook.de>, 2020-08-22 18:24:53 +0200, , blocktype relocation 1526,,
90,7db486f9352d84f4617db76691cdbf2756972b87,ammax <sammax@outlook.de>, 2020-08-20 15:40:14 +0200, , wat2wasm type relocation 1525,,
91,713becedfe45e7b7a993d7efb6fd2994f064b234,am Clegg <sbc@chromium.org>, 2020-08-19 11:28:42 -0700,1520, fix integer overflow objdump name tracking 1524 fix 1520,,
92,40f6a8a9354f335f9bbe05b1962172873c2913f0,am Clegg <sbc@chromium.org>, 2020-08-18 17:44:51 -0700,1249, enable werror 1522 fix 1249,,
93,95c04e0fb7ae5b9b0c92f66d707fa579114f1569,am Clegg <sbc@chromium.org>, 2020-08-18 12:56:08 -0700, , fix warning generated system clang 9.0.1 1521 guess maybe werror enabled probably ,,
94,2a15fcb8ba45d43f6766bf76639b0071cd3a0913,outer van Oortmerssen <aardappel@gmail.com>, 2020-08-10 18:29:49 -0700, , enable multi core build window 1516 speed build wabt significantly,,
95,b199ff27800f275d8a143d45b6c820972d9625bf,en Smith <binji@chromium.org>, 2020-08-10 14:41:04 -0700, , update readme.md include default proposal 1515 proposal enabled default readme reflect also flag flipped disable rather enable change see issue 1513,,
96,204ef4ed0b618138a22c55ddeba0477e374e9883,outer van Oortmerssen <aardappel@gmail.com>, 2020-08-10 13:05:19 -0700, , made interpreter type safe debug mode 1512 add type field value verify right union member read wasm module validated need code reading wrong value would trigger still often work like uint32_t read uint64_t little endian machine mask bug turning found bug landed suspected also older code,,
97,66023842fda8e0a5cdd89fbae8555103b9685814,liver Horn <oliver.horn@gmx.net>, 2020-08-10 21:33:14 +0200, , wast2json improved file error handling 1511 result value writetofile call json_stream module_streams evaluated checked,,
98,4b9852ad23541c851031398b835d6387b1b51393,outer van Oortmerssen <aardappel@gmail.com>, 2020-08-07 12:55:47 -0700, , added initial memory64 proposal support 1500,,
99,05c1aa18e53258fefee9a8aac656280475ccf614,en Smith <binji@chromium.org>, 2020-08-03 11:31:46 -0700, , add tool use llvm libfuzzer 1507 useful reproducing bug found fuzz see http fuzz issue list wabt,,
100,ef0d3789f229e1176910e45fc47600336ae3aed9,en Smith <binji@chromium.org>, 2020-07-31 15:11:34 -0700, , fix linking section symbol name bug 1508 found fuzz,,
101,49a78c6173e5702326c9fb033f9ca1057f2cff64,aweÅ Bylica <chfast@gmail.com>, 2020-07-31 19:59:46 +0200, , reformat code binary reader.cc 1506,,
102,153419db5321f197bfb0cb44f9c5473d9daa5270,aweÅ Bylica <chfast@gmail.com>, 2020-07-31 19:53:46 +0200, , detect malformed memory table limit flag 1505 read memory table limit flag uint8_t wasm spec limit flag single byte leb128 encoded value detect malformed memory table limit flag disallow shared memory thread disabled add additional check disallow is_shared 0x2 flag memory limit thread extension enabled previously flag unconditionally accepted,,
103,347bef5355bfdf220a27adce82516c7e706b3b1f,aweÅ Bylica <chfast@gmail.com>, 2020-07-31 19:29:30 +0200, , fix reading section code 1501 section code single byte leb128 encoded value fix section code read correctly readu8,,
104,724b83c95368ee389eca9df6f47aa7e971dd03a0,sumu Takikawa <asumu@ccs.neu.edu>, 2020-07-30 13:18:20 -0700, , print newline rethrow instruction 1503,,
105,dfb652a62ba36409d00ca96c730d39a699b898a5,aweÅ Bylica <chfast@gmail.com>, 2020-07-30 21:48:59 +0200, , detect malformed import kind binary reader 1504,,
106,5390bb0c51023aef254d9a637d84b79bef9c03db,en Smith <binji@chromium.org>, 2020-07-29 17:52:38 -0700, , update testsuite fix conversion error 1502 interpreter wasm2c incorrectly handling float int conversion clarity wasm2c implementation conversion match implementation interp math.h closely e.g numeric range written min max case quite wasm2c test previously skipped since wasm2c currently support multi value better instead duplicate test disable part supported lose test coverage,,
107,2402dedc1d95b75ba6a005c9ba686cb77f316c7f,en Smith <binji@chromium.org>, 2020-07-25 12:52:49 -0700, , fix assert function struct type 1498 function type struct type share index space function defined using function type since module getfunctype already return nullptr oob index make sense return nullptr invalid type,,
108,f414678326964001e4009daf58274006900d2f14,en Smith <binji@chromium.org>, 2020-07-24 13:06:45 -0700, , print newline ref.is_null instruction 1495,,
109,5140e96ea42eca9dafd28bb43ca1e93a604a08c2,outer van Oortmerssen <aardappel@gmail.com>, 2020-07-23 13:38:27 -0700, , decompiler fixed block params 1497 would previously assume blocktype simple single result value also support function signature also fixed ignoring validator result,,
110,efee26853b4c7a3278b014db2fa0db13922f9e21,en Smith <binji@chromium.org>, 2020-07-21 22:09:11 -0700, , fix resolving local name empty func signature 1494 originally landed 6bff9f0 incorrect test even right thing problem local index correctly updated happened _after_ name already resolved fix needed called order erroneous assertion fired result run resolving name incorrect code work properly resolving name since module getfunctype properly look function type name thanks alexcrichton pointing,,
111,cd5ff133f84854f0b269f5cb06193ad8205f05d3,en Smith <binji@chromium.org>, 2020-07-21 13:39:04 -0700, , completely disable signal handler bit 1488 previous change prevented defined still defined would prevent memory bound check,,
112,4942d3b0b3281a2e3c1fa207ca7e62fc10c2fa88,g Zhi An <ngzhian@gmail.com>, 2020-07-20 13:26:26 -0700, , add missing includes type.h 1491 cassert assert confing.h think working type.h included common.h cassert config.h included prior including type.h,,
113,e58b367af0b4717dd7d00050a11c7658aec8650f,en Smith <binji@chromium.org>, 2020-07-18 13:07:11 -0700, , fix gcc warning getexprarity 1489 enumeration value handled switch still possible produce invalid value would return,,
114,d214642e5f81d29160ec39bc12f527b8cba2cf38,en Smith <binji@chromium.org>, 2020-07-16 11:39:17 -0700, , use warning instead warn 1487,,
115,04e859622ca2d91cc1a3adee1167a1b114b694b8,en Smith <binji@chromium.org>, 2020-07-16 10:27:41 -0700, , fix folding .load_splat table.fill 1486 also remove default case util.cc get compile warning future,,
116,bd52b8845aa8dcbecc8fc14d77a2bd4e64ad6e75,en Smith <binji@chromium.org>, 2020-07-15 16:39:52 -0700, , remove ref.is_null type parameter 1474 see http github.com webassembly reference type issue change also update testsuite spec test pas addition behavior br_table longer different mvp text confirm fixed type checker.cc ,,
117,3041d94d21c82c5a31d1d003bfacbcf2fc28b573,en Smith <binji@chromium.org>, 2020-07-15 14:54:33 -0700, , revert br_table reference type proposal 1484 reference type proposal originally modified br_table behavior check arity specific type remove subtyping check subtyping removed revert back original mvp br_table behavior,,
118,3e8b0bb489d63f0a211e00c7de3b629410aa3c08,en Smith <binji@chromium.org>, 2020-07-15 11:53:48 -0700, , wasm2c disable signal handling bit arch 1483,,
119,7c88424c98f157d375458fe6b2cd392959d7d217,teven Johnson <srj@google.com>, 2020-07-13 13:54:25 -0700, , fix portability issue interp wasi.cc 1480 _static_assert _alignof defined everywhere also use priu64 format specifier needed authored ben smith binji chromium.org,,
120,d856a8c3d197400f03d42255c6860f84cb8ff3a0,teven Johnson <srj@google.com>, 2020-07-12 22:26:06 -0700, , tweak definition ssize_t msvc compilation 1479 designed exactly mimic definition llvm msvc allows use wabt llvm header codebase without work around compilation error,,
121,017b8bd1271256567a9f4712a0a13b80d157ade6,lon Zakai <azakai@google.com>, 2020-06-22 10:23:31 -0700,1472, fix warning comparison void integer fix 1472 1473,,
122,96596685f99f8dd5d330c34e8a3cd9651fdcc2fe,teven Johnson <srj@google.com>, 2020-06-19 11:37:30 -0700, , enable cmake policy cmp0077 1471 make simpler safer project including wabt via fetchcontent configure option via cmake_args argument importing project may want set e.g build_tests however work without creating identical option importing importing project enabling cmp0077 supported version cmake allows importing project set default value variable without touching cache,,
123,51db8c621d95e6037f8d5455558d8935c98b5a22,en Smith <binji@chromium.org>, 2020-06-18 15:59:01 -0700, , update libwabt.js fix runtime issue 1468 libwabt.js meant included multiple environment web node.js etc using noderawfs recent change build system include noderawfs link step needed wabt executables e.g wasm2wast.js,,
124,f80108f417951064f6082dd2bfc52d6af75a8e65,teven Johnson <srj@google.com>, 2020-06-18 12:56:30 -0700, , improve cmakelists.txt used via 1467,,
125,1467a6113414e7ef24174f51398079c9f4eeae57,en Smith <binji@chromium.org>, 2020-06-17 16:32:11 -0700, , add install prefix build release skip,,
126,6bff9f079a8e7b33bb616ea0731d592072dc53dd,en Smith <binji@chromium.org>, 2020-06-16 20:47:37 -0700, , update local binding function type use 1466 function specified like func type ... type sequence params result known signature resolved however local parsed given binding index assumption signature empty e.g func type local i32 local i32 ...  index index turn later type parameter index need updated,,
127,3239018f403d8fe0f20a914032c7fb1bf8c1c358,teven Johnson <srj@google.com>, 2020-06-15 12:26:36 -0700, , fix two minor compiler warning 1462 writing uintptr_t use priuptr priu64 add explicit override filestream,,
128,2dca7fc627397636116ad74a31d7aac980095390,en Smith <binji@chromium.org>, 2020-06-11 11:53:57 -0700, , fix typo,,
129,23500f124366149c9f0802764f94d922d14f465d,en Smith <binji@chromium.org>, 2020-06-10 12:29:30 -0700, , wasm api implement missing function 1461 wasm api interface wabt test relies wasm api repo example testing mean function used example accidentally omitted todo wabt wasm api explicit test api surface,,
130,20f3984ff1f6c0ea7aa1e1be0c6314d947cc8826,en Smith <binji@chromium.org>, 2020-06-10 10:46:10 -0700, , better error parsing input output command 1460 fix 1459,,
131,30d74b15937266778b83a7c1a3af813e5d9db5a7,en Smith <binji@chromium.org>, 2020-06-09 08:50:49 -0700, , check malformed alignment 1454 fix issue 1453,,
132,15264cd20be3510058e56d1de5db1f32ae5364eb,en Smith <binji@chromium.org>, 2020-06-04 15:45:02 -0700, , wasm2c implement trap handler linux macos 1442 test whether work macos use fix bug macos use instead ifdef value work properly add wasm_rt_setjmp wasm_rt_longjmp macro,,
133,eb4e9509604137f6ac51b529a8540cd0e01f2650,en Smith <binji@chromium.org>, 2020-05-29 13:34:46 -0700,1448, wasm2wat fix roundtripping issue 1450 declare keyword printed using element expression element index i.e flag flag imported table properly setting element type fix 1448 1449,,
134,8ece4546102de10e9717cf8174ab2064d595e7d1,en Smith <binji@chromium.org>, 2020-05-29 12:46:53 -0700, , wasm2wat write select type immediate 1451 main fix wat writer.cc type immediate never printed also included change select type immediates represented wabt previously bare select instruction would stored type type real wasm type primarily used type validation spec instead considers form select empty type immediate closer type void type commit type void empty typevector represent bare select instruction fix 1444,,
135,17da0da1f59c18e0a655454662ed9ee7bb24756a,en Smith <binji@chromium.org>, 2020-05-28 17:03:35 -0700,1445, wat2wasm write table index text format 1446 wasm2wat write table index non zero already properly written binary read binary written wat fix 1443 also write table index table init copy fix 1445,,
136,bf46c08b05fc6fcc457f1657e936fab24b4dceee,en Smith <binji@chromium.org>, 2020-05-28 11:30:38 -0700, , reference type change remove subtyping 1407 main change rename anyref externref remove nullref rename hostref externref ref.null ref.is_null ref kind parameter add ref kind keywords func extern exn,,
137,0630dc53755678239d7609b61776b125221eefb8,lon Zakai <azakai@google.com>, 2020-05-21 15:11:59 -0700, , allow building tool emscripten 1436 allows building say wasm2c.js wabt.js change indentation also remove llvm lto upstream backend anyhow however get lto need build source flto,,
138,e882acdacfa00036de6dbbf64c13d61a1e358229,am Clegg <sbc@chromium.org>, 2020-05-21 14:41:00 -0400, , update pin emscipten image used 1437,,
139,7639690bbc2a2a35f315e2ee061cfa8cfeb1c5b1,am Clegg <sbc@chromium.org>, 2020-05-21 12:58:02 -0400, , wasi implement wasi api 1430 used test wasi sdk get started http github.com webassembly wasi sdk tree master test test pas still saying much still big missing piece started using new serdes serialize deserialze api uvwasi think almost point look auto generating stuff witx avoid hand code marshelling stuff add support argumentcount zeroormore optionparser also ability force end option processing using allows pas option underlying wasi program running wasm interp,,
140,3625539c176839c9a45d58143767a63c04b95559,erek Schuff <dschuff@chromium.org>, 2020-05-19 18:12:46 -0700, , add build flag disable build libwasm 1435 allows wabt tool build git submodules,,
141,2facebce75a062b8c1b94be005b3d498ee5c383b,am Clegg <sbc@chromium.org>, 2020-05-19 01:08:45 -0400, , update build status badge 1433,,
142,a08df5c90ce65c5f83656ee464e562603d0e74b9,am Clegg <sbc@chromium.org>, 2020-05-18 23:12:24 -0400, , complete conversion github action 1431,,
143,a9317fb219e958b819b9ce98d15214803953c24c,am Clegg <sbc@chromium.org>, 2020-05-17 00:15:31 -0400, , implement wasi apis 1423 almost enough pas tiny test wasi sdk repo,,
144,14b17a66a1604e97e209dea0ced035779fb9f1b2,lon Zakai <azakai@google.com>, 2020-05-15 13:50:37 -0700, , mangle wasm2c name simpler way 1427,,
145,ebbf625e15b844d43feb24134b9a9cd3ea91daca,en Smith <binji@chromium.org>, 2020-05-14 17:58:29 -0700, , require folded try statement 1425 example  try label param ... result ... ... catch ...   see comment http github.com webassembly exception handling issue issuecomment 626696720,,
146,d087e702d520207871ae82c58461fb08d58af187,en Smith <binji@chromium.org>, 2020-05-13 18:14:13 -0700, , update testsuite 1424 includes three merged proposal nontrapping float int sign extension multi value also one bug fix parsing table limit min max size doe fit bit int,,
147,73cc590820a526c553ce9d70b1fa1096826bc773,en Smith <binji@chromium.org>, 2020-05-13 15:16:28 -0700, , fix bug writing grouped named parameter 1418 named parameter local must always param block syntax allowed param i32 i32 must instead converted param i32 param i32,,
148,2395f8f81575aaf3e243c9ce400948444e6f8c6a,am Clegg <sbc@chromium.org>, 2020-05-13 14:35:01 -0400, , use stderr reporting error wasm interp 1422 probably send traving stderr thats bigger change,,
149,a5a9b341b7fb7aa66427d4701871d2b3c73bcc87,am Clegg <sbc@chromium.org>, 2020-05-12 21:28:43 -0400,1409, add initial mvp wasi api support wasm interp 1411 proof concept implement proc_exit fd_write apis extending full wasi api follow assuming approach seems reasonable fix 1409,,
150,08aa226fa21d15aeac865c0a38b77fb852728a88,am Clegg <sbc@chromium.org>, 2020-05-12 01:43:08 -0400, , move flake8 travis github action 1419,,
151,28af34277a9ebc1a91f51dfb51b267bbea073dab,en Smith <binji@chromium.org>, 2020-05-11 22:09:38 -0700,1413, remove range assertion binaryreader 1416 assertion check see whether sig_index i.e function type bound responsibility validator binary reader fix issue 1413 1414,,
152,fad5a2dbdba5d98a91c4a2dea24bbff3b565e733,en Smith <binji@chromium.org>, 2020-05-11 22:09:09 -0700, , prevent large allocation br_table instruction 1415 binary reader try allocate vector branch target checking whether length excessively long already function readcount error count longer section assumes element requires least one byte fix issue 1386,,
153,58b2833ef1705e654ed14a0a55200726b9fcde80,am Clegg <sbc@chromium.org>, 2020-05-11 13:34:36 -0400, , fix typo nfc 1410,,
154,5537de73ca211a6bbcf4b4025644b0cfa07c396e,am Clegg <sbc@chromium.org>, 2020-05-11 13:30:03 -0400, , pas current thread host function callback 1412 experimental wasi implementation working wasi callback implemented hostfuncs need know module call coming implicitly operate memory calling instance approach seems match current convention passing thread func docall purpose allow hostcall callback determine instance called alternative approach considered created different set wasi hostcall object instance instance memory bound wasi function,,
155,e88bc660cf89ca84dccda358cfbadc8a7c2bc935,lex Crichton <alex@alexcrichton.com>, 2020-05-06 13:46:43 -0500,1145, enabled merged proposal default 1405 enables three proposal default since merged upstream specification saturating float int webassembly spec 1143 sign extension webassembly spec 1144 multi value webassembly spec 1145 fallout test suite lot enable flag getting removed test unconditionally pas also getting removed two spec test explicitly pas disable spec test submodule updated,,
156,9068d3927b404ce1e9c600473255a90504034eee,en Smith <binji@chromium.org>, 2020-05-05 10:49:14 -0700, , update emscripten build simd change,,
157,49cdabbad32378a3648575f1dc7dcc991817f241,eepti Gandluri <dtig@users.noreply.github.com>, 2020-05-04 16:43:36 -0700, , renumber simd opcodes 1403 fix typo i8x16avgru update test skip simd_const test till updated,,
158,5c48f3bdd5ab8b7c27d4959840407ce09a31f0cf,en Smith <binji@chromium.org>, 2020-04-29 00:31:05 -0700, , fix address overflow bug wasm2c 1401 occurs immediate offset small int sized stack offset u32 immediate int usual arithmetic conversion convert result u32 wrap address checking overflow already spec test overflow use offset 4294967295 long least lp64 system mean sum type u32 long long test pas added additional test case http github.com webassembly spec pull 1188 fix issue 1400,,
159,5e16bf1c7ef1d2bed53db4e5a03771d2d5a12f04,en Smith <binji@chromium.org>, 2020-04-27 17:34:05 -0700, , update demo 1398 recompile libwabt.js using latest emscripten add feature checkbox wasm2wat like wat2wasm remove call since always done parsing text,,
160,068f604394b07160654b1e9b829472f877cacfe9,karthee <lkarthee@users.noreply.github.com>, 2020-04-28 01:47:29 +0530,1385, improve error message python available fix 1385 1392 making python optional build http github.com webassembly wabt issue 1385 show error message skipping test python3 available skipping test python 3.5 found,,
161,74afb7f8d86fc1cfd30eb1f4a74cd8139baa384f,ax Desiatov <max@desiatov.com>, 2020-04-23 16:19:53 +0100, , fix typo type checker.h 1393,,
162,d041025854ba2b00b3df9f308914c8aba05dcda9,ndy Wingo <wingo@igalia.com>, 2020-04-20 21:10:19 +0200, , add support atomic.fence thread proposal 1231 see http github.com webassembly thread pull 141 binary encoding patch doe add field atomicfenceexpr consistency model though without type time,,
163,952c3b8006911a8659c1b922c3bb4adffc671d89,en Smith <binji@chromium.org>, 2020-04-14 08:57:07 -0700, , wasm2c add rot13 example 1384 example demonstrates use imported function rot13 program take command line argument rot13 encodes exported rot13 function argument instead call back program via fill_buf buffer fill function finish call buf_done rot13.wat src test interp.cc,,
164,10a9b0563efea0ab00abf6846c0ebcb53f492404,en Smith <binji@chromium.org>, 2020-04-14 08:47:42 -0700, , add exnref value type parser 1389 exnref type already supported type checker part code way name type text format also fix make binary reader.cc check flag enable exnref exception handling proposal depends reference type proposal handled higher level function fix issue 1388,,
165,343d24bf620594c985065d193bde2c3fc282a53e,outer van Oortmerssen <aardappel@gmail.com>, 2020-04-09 12:46:28 -0700, , fixed warning vs2019,,
166,392881de0eeb05e26c909a6b7acea0e05e8ad672,en Smith <binji@chromium.org>, 2020-04-07 18:58:24 -0700, , add documentation wast2json 1383 primarily documentation json format produced,,
167,ae2140ddc6969ef53599fe2fab81818de65db875,en Smith <binji@chromium.org>, 2020-03-27 14:50:35 -0700, ," update testsuite 1381 add 8x16,16x8,32x4 .abs instruction implement intabs interp math.h",,
168,1f397a3c829869f23ae0ff3e311d22f12d8c72a9,en Smith <binji@chromium.org>, 2020-03-25 12:43:23 -0700, , update testsuite simd 1373 lot change necessary make work well bug fix main change allowing nan canonical nan arithmetic possible value lane v128 need propogate parser json format spec interpreter also change format spec json file simd value stored list value instead single u128  type v128 lane_type i32 value  since lane type i16 type used place decompiler used proposal packed value updated use binary value specified proposal actual simd fix simd lane malformed match binary format invalid smaller lane width example malformed lane 256 lane stored byte invalid lane  instruction handling sign extension propoerly todo code pretty clumsy would better universal value expectedvalue used everywhere logic need duplicated,,
169,d8771ed54edc85ee71e69b835cdaab57bd2722f4,eejin Ahn <aheejin@gmail.com>, 2020-03-25 10:02:42 -0700, , move event section global section 1374 decided move event section global section webassembly exception handling,,
170,7898e57f28c89565b99e894e764e058346e28fbe,en Smith <binji@chromium.org>, 2020-03-23 18:54:14 -0700, , parse arraytypes 1364 following format supported type array i32 type array field i32 type array field mut i32 add support reading writing binary text interpreter support yet,,
171,dc396c9d57d59c33c99f5f6c6c1b8f67de086dc8,dam Klein <adamk@chromium.org>, 2020-03-23 17:32:55 -0700, , fix whitespace formatting simd ops 1372 fix 1227,,
172,0a4d0eebb73c2a8f5e5b8ff004f840d832db723a,ian Hunter <rianhunter@users.noreply.github.com>, 2020-03-23 11:34:43 -0700,1368, always generate datacount section even number data 1369 always generate datacount section even number data bulk memory spec requires datacount section always present memory.init data.drop instruction present following code section requirement remains even number data remove condition fix 1368 fix test,,
173,5ba0296190a077acfdc6c1de19510143b4dcc7c4,en Smith <binji@chromium.org>, 2020-03-20 15:58:31 -0700, ," move functionality v128 type 1363 add lane getters 8,16,32,64 32,64 _bits add lane setter set_u 8,16,32,64 set_f 32,64 _bits add set_zero is_zero add type type change make easier build v128 value spectest interp need updated support simd spec test",,
174,142c52678acf7decf6a48190c395ed73bb91170a,en Smith <binji@chromium.org>, 2020-03-19 10:33:31 -0700, , add wasm objdump support structs 1361,,
175,7d48bd6148d723b7b9aca66126156f087de3918e,en Smith <binji@chromium.org>, 2020-03-17 14:42:38 -0700, , fix interpreter garbage collector 1357 interpreter garbage colletor store collect almost worked particular free list fast way determine whether object used necessary iterating object actually delete commit add is_free_ vector purpose store collect method also correct calling store mark ref root mark ref iterate object reference commit update collect iterate marked object iteratively steady state reached potentially quadratic number object currently written definitely room improvement,,
176,8d8db66eeeaffd471cbdb70d34b235c08665e788,en Smith <binji@chromium.org>, 2020-03-16 17:24:50 -0700, , refactor const struct internal storage 1356 const previously stored value union bit pattern uint32_t uint64_t v128 etc extended support case nan value either arithmetic canonical expected bool is_expected_nan union uint32_t u32 uint32_t f32_bits ... expectednan expected  simd proposal possible lane f32x4 f64x2 float expected nan work anymore possible move expectednan union bit clumsy use properly bool is_expected_nan expectednan expected union ... instead took opportunity clean class bit first expectednan extended handle case nan i.e number allows remove bool store rest data array uint32_t provide accessor function instead,,
177,5467faf5cd52ba2da3e331e6c950a3860c559010,en Smith <binji@chromium.org>, 2020-03-16 17:24:37 -0700, , parse struct field 1355 allows following field format struct field name i32 struct field name mut i32 struct field i32 struct field mut i32 struct mut i32 struct i32,,
178,261dfdd75d8199298c9e0143e351322cc79c996a,aphael Graf <r@undefined.ch>, 2020-03-15 18:12:05 +0100,1359, set mingw cygwin 1360 resolve 1359,,
179,a5994b2f94586063f7cce021e537f2cda82f3ba0,en Smith <binji@chromium.org>, 2020-03-13 10:10:26 -0700, , fix flake8 failure 1358,,
180,e0b5f0f33f84e23869f8e511cdd583f45097af9a,en Smith <binji@chromium.org>, 2020-03-11 10:21:01 -0700, , add script generate .wast .json 1353 one difference module ... converted module binary,,
181,cbe3f1291df14685bf44a61692ebef8934d17c4f,en Smith <binji@chromium.org>, 2020-03-11 09:54:35 -0700, , remove validation binaryreader 1354 validation happen validatemodule binaryreader check whether binary malformed change also fix place binaryreaderir index assumed valid,,
182,f649b7ca9af02ff3213d8c2b135eaef9d87f5e0d,en Smith <binji@chromium.org>, 2020-03-09 11:45:17 -0700, , initial pas parsing reading struct 1352 par format struct new type added test using wat2wasm requires rudimentary binary format test runner automatically attempt rountrip wat2wasm test required implementing wat writing binary reading summary change binary reader rename binaryreader ontype callback onfunctype binary reader.h add binaryreader onstructtype binary reader.cc use switch reading type form determine whether reading function struct tokens.def add new tokentype struct lexer keywords.txt add new struct keyword type.h add type struct type form wast parser.cc parse struct text format wat writer.cc write func struct type form,,
183,bec78eafbc203d81b9a6d1ce81f5a80dd7bf692a,en Smith <binji@chromium.org>, 2020-02-29 10:38:49 -0800, , fix todos validator affect error output major change error output showing max value instead max value bit weird see range max seeing 4294967295 strictly worse,,
184,6316d05066ae7fa6df44e6d4a544be58724ffd92,en Smith <binji@chromium.org>, 2020-02-29 10:22:28 -0800, , nfc fix todos remove wabt prefix binary reader interp rename interpcallhost,,
185,f8e09f6ccfa25ca96be1a255b72e3240f29b4700,en Smith <binji@chromium.org>, 2020-02-28 21:16:33 -0800, , convert type enum class 1350 similar way opcode structured allows hang member function enumeration primary motivator change proposal function reference proposal type parameterized type struct ... func local ref ...  case type ref parameter type index making type class make easier store additional information,,
186,7914f5f0182b5282d9de8399ba3ff264b5b5dea5,en Smith <binji@chromium.org>, 2020-02-28 20:42:39 -0800, , update testsuite reference type change 1351 new table sub test check whether subtyping handled properly table.init table.copy instruction callback pas element type anymore since known yet callback also deferred since callback happen callback reference type always known initializer expression read work around added new callback element segment change element type must tracked sharedvalidator subtle fix writing segment flag need take account whether element type segment funcref even element expression case use flag bit 0x4 seguseelemexprs addition tablecopy tableinit instruction handling table index fully tablecopy variable read parser optional tablecopy name resolved applied tablecopy index validated tableinit table variable read parser subtle since text format order table segment table optional,,
187,2d5bdb4a3a1bf8541dda300ffc2d35ffd9d4f84b,en Smith <binji@chromium.org>, 2020-02-28 17:08:32 -0800, , add typeentry base class type section entry 1349 type section currently one form function proposal least two form added struct array facilitate rename typemodulefield rename module func_types module type rename type_bindings typeentry added base class functype typemodulefield store unique_ptr typeentry,,
188,02aa62e015e3eff5a50bad5d94d9a7d98f4e9d89,en Smith <binji@chromium.org>, 2020-02-28 15:26:06 -0800, , add feature 1348,,
189,3177c9355824814937461677dd52eb7c20e85a8d,en Smith <binji@chromium.org>, 2020-02-28 10:50:48 -0800, , always check index accessing vector 1347 since validator try print many error possible stop index invalid since may produce future error instead default value encoded new function called either access vector default value,,
190,9719aa5b0cb3ce03696d255423dabb14c2d289c8,en Smith <binji@chromium.org>, 2020-02-27 11:23:08 -0800, , share validator binary reader interp 1346 typechecker already shared rest validation logic duplicated change creates sharedvalidator used validator class validator structured similarly typechecker collection function assumed function called order section occur binary format valiator doe even though possible validate component order case change also split module validation script validation two different class written way first place nice part change since module validator logic mostly moved sharedvalidator anyway next step remove validation binaryreader move sharedvalidator move typechecker sharedvalidator maybe necessary ensure validation occurs creating binary use sharedvalidator binaryreaderir maybe create passthru binaryreaderir use rename validator irvalidator sharedvalidator validator,,
191,981e30acb316da4da1965969283108e52781e695,en Smith <binji@chromium.org>, 2020-02-26 15:51:33 -0800, , move type enum file 1344 good start cleaning common.h,,
192,5ce1a556f55779d3d59930b16a9d328ad6a7c1f2,en Smith <binji@chromium.org>, 2020-02-25 14:57:12 -0800, , move validation func signature parser 1341 previous called validator function code moved entirely parser preferable since mismatching function signature considered malformed text validation error,,
193,d125db7274f17f743379ea7b34f9aae9563b3bc2,en Smith <binji@chromium.org>, 2020-02-21 17:52:32 -0800, , renumber v8x16.shuffle back 0xfd03 1342 producer emit number convenient use old value instruction renumbered soon anyway,,
194,24a12ecfdde0246527506c87bd82460beb761c57,en Smith <binji@chromium.org>, 2020-02-21 14:11:44 -0800, , new interpreter 1330 modeled closely wasm api runtime object garbage collected object subclass object stored store root created using refptr struct module store runtime object description structs named desc e.g funcdesc instantiation take descriptor turn runtime object e.g funcdesc used create func import matching occurs instantiation validation assumed occurred module compilation previous interpreter wasm instruction executed directly instead compiled instruction stream easier interpret e.g branch become gotos still stack machine though previous interpreter would always compile instantiate one step mean always known whether imported function host function wasm function result call module stayed wasm could cheap update module compiled instantiation imported function call always check first may slight performance hit one major difference structure interpreter floating point value passed directly instead using equivalent bit pattern convenient general requires annotating function wabt_vectorcall visual studio x86 work properly otherwise float passed x87 stack instruction stream decoding tracing disassembling handled istream class reduces lot duplication three make logging opcodes tracing opcodes valuable removed change file binary reader metadata removed interp .cc istream new helper file interp util primarily print debugging function interp math.h template used handling wasm math,,
195,bb4b65186668ff3ebd2f088778337608969a9567,en Smith <binji@chromium.org>, 2020-02-21 09:50:32 -0800, , move parsemodulewat 1338 validating function signature i.e making sure named function type match explicit signature really parse text parsing example type func param i32 result i32 ... call_indirect type param f32 result i32 error change quite get closer next step remove entirely perform check parser,,
196,94ad3e84817c546b1313e161da565d181b1a470c,en Smith <binji@chromium.org>, 2020-02-20 14:06:20 -0800, , always run resolvenames parsing .wast .wat 1337 resolving name i.e remapping variable name index meant part parsing process spec even considers unmapped variable name malformed text move direction always running resolvenames parsing text next step would integrate closely parser,,
197,09d712be32398d2ab4174f36228dcac5fbb5f672,en Smith <binji@chromium.org>, 2020-02-19 18:19:04 -0800, , fix memory table check include imported defined 1336,,
198,ad8ae437b3957b2f46aae7593cd4ce50cc8a3f54,en Smith <binji@chromium.org>, 2020-02-19 17:49:24 -0800, , fix logging f32.const f64.const 1335,,
199,c74404bd148e1ae55e539179a334ed3d7f0f1392,en Smith <binji@chromium.org>, 2020-02-19 17:47:19 -0800, , appveyor add script allow rdp bot 1334 see documentation http doc rdp build worker,,
200,4c3189d1df4a4062fb2705182a525fd8c23d6af2,kuoku <mjt@cltn.org>, 2020-02-19 04:15:32 +0900, , use standard gnu clang compiler 1333 use _posix_c_source applicable use _posix_c_source 200809l everywhere except msvc mingw effect regard  cygwin allow use posix apis std environment binary reader objdump.cc include strings.h include strings.h depends posix strcasecmp disable explicitly explicitly disable default recent cmake 3.1 read implicit std gnu injection test hexfloat use thread instead sysconf use thread instead sysconf bit standard way  guard strings.h have_strcasecmp guard strings.h have_strcasecmp non posix platform may ,,
201,4ba97c116d1417b2fb516299a37965820b93ced3,kuoku <mjt@cltn.org>, 2020-02-12 01:58:17 +0900, , cygwin build fix 1332 workaround cygwin build cygwin __strict_ansi__ doe show posix definition use gnu language instead wasm decompile silence wsign compare silence wsign compare warning using unsigned literal one wasm objdump fix 4294967296 output disasm use instead use uint32_t,,
202,3dc09d11ff4396c9a4cf903cae2ed6a88f5982b6,am Clegg <sbc@chromium.org>, 2020-02-06 17:08:37 -0800, , action avoid triggering branch build 1329 add nuanced triggering github action,,
203,417a5be8678b22296c2dfa7e12f87a577225d776,am Clegg <sbc@chromium.org>, 2020-02-05 23:47:19 -0800, , improve help usage message invalid argument 1328 print full help message unless actually ask instead suggest help option also print program name error string thing seem match gnu utility used kind like seeing entire screen help text forget argument,,
204,c109e4fc87a435e49f3ccebb3eaafb5c5a508c56,am Clegg <sbc@chromium.org>, 2020-02-05 14:40:53 -0800, , update testsuite 1327 main change addition declared elem section,,
205,13b500b006757a1d7cbf73a756d8d599038322f6,am Clegg <sbc@chromium.org>, 2020-02-04 11:48:49 -0800, , remove python3 ism left test suite 1326,,
206,d18058fe482a75ec8fefbef56d27cf5c8e36afd8,am Clegg <sbc@chromium.org>, 2020-01-31 13:35:27 -0800, , remove support python2 1321,,
207,ea255e38b9bcc072ae7f1fc8062e208ed88c121f,en Smith <binji@chromium.org>, 2020-01-31 10:11:07 -0800, , include 1310 fix 1042 thanks rathann,,
208,943d69d59e78f5ef4c52035cb7edc8e0dc172777,am Clegg <sbc@chromium.org>, 2020-01-30 20:06:33 -0800, , travis switch xenial 1324,,
209,12cc9c283901c2090685571f16cfdcd95475526d,am Clegg <sbc@chromium.org>, 2020-01-30 19:25:06 -0800, , travis limit use sudo 1323 need sudo i668 builder need extra package also name element matrix also remove bunch unuser setting emcripten build,,
210,e21bb7e3370da868aa36e3000a756824df4078d1,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-30 14:22:22 -0800, , wasm decompile escape hatch variable used outside scope 1322 decompiler assumes define variable first assigned work almost case occasionally use variable outside scope defined detects case make sure variable pre declared,,
211,4966aa99dceb8851c1135393f520b879096c16fc,en Smith <binji@chromium.org>, 2020-01-28 09:55:14 -0800, , increase timeout fix bug timeout occurs 1320,,
212,c74e612ff9d95d6afd1bbfb6d9656655aa6d70ed,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-27 16:52:53 -0800, , wasm decompile fix access undefined symbol 1319,,
213,b0be627636428a949609e2b18daf347600105be8,en Smith <binji@chromium.org>, 2020-01-27 15:35:37 -0800, ," simd update instruction 1317 add i64x2.mul add 8x16,16x8,32x4 min max rename .load_splat .load_splat remove i8x16.mul remove remove remove i64x2 _true",,
214,ac29d4f571f54ce3c99243048ebdac6cfe6cc671,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-27 14:05:21 -0800, , wasm decompile use symbol linking section name 1318 allows wasm file readable name even final linked module linking information preserved e.g emit relocs lld implemented part wabt representation benefit wasm2wat well named obtained way set function function also name name section preferred export name one,,
215,2132abdd621a354a25af6bc67d1bb603c6b3c4dc,am Clegg <sbc@chromium.org>, 2020-01-23 17:50:04 -0800,1314, remove build time dependency git 1316 add version project command turn required cmake version bump 3.0.0 fix 1314,,
216,90cec44b193b95b71cf1ea34137cbf6e939b7144,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-23 15:50:33 -0800, , wasm decompile name data section content 1309 fun way give somewhat meaningful name section containing string case pure binary section likely generates random character worse current generated name,,
217,5926d542ee382ccf1c693921f42aec767270295b,am Clegg <sbc@chromium.org>, 2020-01-23 10:57:55 -0800,386, support reading stdin readfile 1313 allows tool read input file use special filename read stdin also improve error reported general readfile see 386,,
218,7eb3f7771e5374c36af58485d67c3dc19290024a,en Smith <binji@chromium.org>, 2020-01-21 09:33:35 -0800,1189, omit datacount section unless required 1312 see 1189 1311. even bulk memory enabled convenient omit datacount section mvp compatibility change includes datacount section instruction requires either data.drop memory.init also omitted data segment rather second pas instruction implementation unconditionally writes datacount section remove needed required adding function truncate stream stream truncate,,
219,8bd065771ad7f87c839c2ac76ad924b33d961db5,en Smith <binji@chromium.org>, 2020-01-17 16:33:03 -0800, , put rendered man page html doc file,,
220,0b99d31dd8b4c16e213680494589ad5b6702ea47,en Smith <binji@chromium.org>, 2020-01-17 16:19:18 -0800, , move documentation doc directory easier update page,,
221,7c80d05e37dc02870c680869ae3f04ac6d9637ee,am Clegg <sbc@chromium.org>, 2020-01-16 14:53:11 -0800, , initial wasm api implementation 1250 test except thread pas,,
222,d663c80dcb627fed3e21cfa2b47465452a83a894,en Smith <binji@chromium.org>, 2020-01-16 10:13:51 -0800, , update testsuite 1308 remove handled using assert_return ref.func reference type proposal depends bulk memory proposal using enable reference type automatically includes enable bulk memory table.fill longer clamp valid range instead check writing anything match bulk instruction,,
223,0fdf72711e23116750f1aff34cae57f0d5c55125,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-16 08:40:47 -0800, , wasm decompile absolute access refer data segment 1302 make easier look large integer constant llvm output full,,
224,256f868194bafc3ea32b981c51dd657151a04ae7,am Clegg <sbc@chromium.org>, 2020-01-15 14:35:31 -0800, , add cmakelists.txt 1208 allows code completion tool clangd work sure downside enabling case,,
225,1d7176328c7e45fcb6309a585ecf406b0bef9b54,lex Crichton <alex@alexcrichton.com>, 2020-01-14 14:52:33 -0600,1303, fix typo widening simd intrinsics 1305 testing revealed another typo believe 1303 widening instruction think last one though,,
226,7ceac5860aa3bb76cbcf7a9f03dec0d9f6bceca1,lex Crichton <alex@alexcrichton.com>, 2020-01-14 13:41:36 -0600,1303, fix typo i64x4 i64x2 1304 think may accidental typo 1303,,
227,23ee09715f214971d19572683726d8b673645f02,en Smith <binji@chromium.org>, 2020-01-14 09:24:54 -0800, ," simd implement new simd instruction 1303 16x8,32x4,64x2 .load 8x8,16x4,32x2 v128.andnot 8x16,16x8 .avgr_u none implemented interpreter yet",,
228,cd7e137c12691e91e566ac68ce0ad7a7b44b60b9,en Smith <binji@chromium.org>, 2020-01-13 16:21:52 -0800, ," simd add support narrow widen instruction 1301 8x16,16x8 .narrow_i 16x8,32x4 16x8,32x4 .widen_ low high 8x16,16x8 though combination valid currently supported interpreter todo implement new simd instruction load extend bitwise lanewise rounding average",,
229,79772de74d458e0f2451b94b9502b23dff316a15,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-13 10:12:35 -0800, , wasm decompile wrap data declaration 1298,,
230,ca00fec0c8378db44d335d1731afd71c70c404cc,en Smith <binji@chromium.org>, 2020-01-10 22:06:13 -0800, , error memory.init data.drop without datacount 1297 see 1176. working spec interpreter way segment index handled better handle earlier binary reader,,
231,710721e99bb37563cdad97f9b950770abe6064b7,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-10 14:43:43 -0800, , wasm decompile support pointer single type 1296 deriving struct load store ops fails next best thing typed pointer access type also fixed precedence related issue,,
232,c47cd5cf72d7aca083184fc18fd6d155f20b2b4f,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-09 17:45:46 -0800, , wasm decompile documentation 1295 added language description man page link general readme,,
233,6fce5a3b6768f0d81e1cd900b14a199fcb750aa0,am Clegg <sbc@chromium.org>, 2020-01-09 17:32:03 -0800, , add explicit flag wast2json test 1294 otherwise new default behavior 1287 write cwd want running test writing cwd rather alongside input file deliberate desirable match behavior compiler clang gcc wat2wasm,,
234,6468e757939589667de94cf0f761d9c61ddc4e04,en Smith <binji@chromium.org>, 2020-01-09 14:27:51 -0800, , fix parse error table elem exprs 1293 see 1291. two issue table funcref elem ... syntax support elem exprs error produced elem var list parsed also fixed similar issue var list e.g br_table another bug text list i.e list string involved left todos instead,,
235,79505b7da00c6e06d8f85d638f238e0728b8a3a9,en Smith <binji@chromium.org>, 2020-01-09 11:42:48 -0800, , apply start function name wasm2wat 1289 fix 1226,,
236,415c3bb1b70c5edc9beb3a7e2cea5d9247e1e52c,am Clegg <sbc@chromium.org>, 2020-01-09 11:36:21 -0800,111, update testsuite 1275 two primary change involved removal arithetic nan favor special nan canonical nan arithmetic constant used test expectation see http github.com webassembly spec pull 1104 new trapping behaviour bulk memory operation range check performed front opterations memory.fill memory.copy see http github.com webassembly bulk memory operation issue 111 http github.com webassembly bulk memory operation pull 123 old behaviour still kept around support table.fill defined reference type proposal yet updated,,
237,7de6d8eedd550a9001a2db9d9e04b7ad941c9be7,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-09 09:31:52 -0800, , wasm decompile friendlier general load store ops 1284 index relative type detects common case index shifted produce new base address,,
238,5b2f61e8908ae80e5ccfa0cbbd8c856aa16ab5fd,am Clegg <sbc@chromium.org>, 2020-01-09 08:06:35 -0800, , report invalid literal parsing spectest json file 1288 silently ignored previously,,
239,d7f7fd7baa9b259e034667148ea771460ce4e83a,en Smith <binji@chromium.org>, 2020-01-08 22:10:56 -0800, , segment flag mvp compat possible 1286 fix 1280 1268 1269,,
240,ea8ce4f61fb1d15ebb91e7f136767444c44ccc80,en Smith <binji@chromium.org>, 2020-01-08 19:33:40 -0800,1180, run tests.py work properly python3 1285 fix 1180 1181,,
241,168ba9100b8168782668462f87540dfea16be26d,am Clegg <sbc@chromium.org>, 2020-01-08 19:15:17 -0800, , add default output name wast2json 1287 without default write wasm file json,,
242,82e64ba214f2978b45b053331c13e19e4d659f4e,en Smith <binji@chromium.org>, 2020-01-08 16:04:56 -0800, , wat2wasm passive segment require bulk memory 1203,,
243,f644a0324abd8f957bb1bc2bb79bbdad4956cd0e,eejin Ahn <aheejin@gmail.com>, 2020-01-08 15:08:07 -0800,66, several fix reference type 1278 allow ref.func global initialization expression allow nullref full fledged type webassembly reference type enable reference type exnref used reference type proposal prerequisite proposal,,
244,52953f3fceee35f4a91f2a701d655353851ba59e,en Smith <binji@chromium.org>, 2020-01-08 11:51:51 -0800, , wat2wasm crash unsupported reloc type 1202 typeindexleb relocation used call_indirect seem supported,,
245,7816cb16849ba5298c147e3ae7f6c139207fdcb6,en Smith <binji@chromium.org>, 2020-01-08 11:46:46 -0800, , fix warning test hexfloat.cc 1201 float always fit uint32_t double,,
246,e2e1d1d7fc6e78bfcf98b5b1a6390d3ab534929a,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-06 16:18:38 -0800, , wasm decompile block represented label 1282 block stats stats label possible stats label latter indentation thus automatically flattening br_table nestings common pattern initially attempted create proper switch br_table typical llvm output intertwined br_if jumping br_table target etc switch could cleanly applied applied small subset case current simple label flattening work wasm code equally bit low level also rename break goto reflecting really though goto ever jump downwards backwards jump loop construct still called continue,,
247,b4e473279a8d55557efe6071e9e1fce9a3654b46,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-06 09:05:37 -0800, , wasm decompile supporting node type specifically 1279 output wabt node type special purpose syntax rather default catch function call still incomplete especially mvp later reworking br_table seperate,,
248,d008411c9bb1ae11caf9912c625898bba6e12666,outer van Oortmerssen <aardappel@gmail.com>, 2020-01-02 14:51:23 -0800, , wasm decompile added precedence support 1277 previously would simply bracket binary exps precedence system line people know programming language,,
249,76ff3af40040a90c15b6b9f2614f3a3869dbdab1,outer van Oortmerssen <aardappel@gmail.com>, 2019-12-23 08:33:07 -0800, , wasm decompile overhauled name filtering 1272 previous implementation simplistic renaming correct location catch occurrence also ineffective cutting gigantic stl signature something managable version creates usable identifier almost case,,
250,dff75b2844e5b512ef6106ba1da0ddff51cebab3,outer van Oortmerssen <aardappel@gmail.com>, 2019-12-19 14:24:47 -0800, , wasm decompile fixed predecl added nested block 1271 generally work since local question may still used block case also causing bad corruption exp_stack thanks vector emplace asserting value range also refactored affected code better debuggable,,
251,8be933ef8c1a6539823b0ed77b3a41524888e19d,am Clegg <sbc@chromium.org>, 2019-12-13 21:11:13 -0600, , binary reader continue unfinished section error 1266 treat unfinished section like section error allow reader continue reading section depending value ,,
252,8b45c14420764a2eeefbf756cadc0a3599d325c8,outer van Oortmerssen <aardappel@gmail.com>, 2019-12-13 17:13:12 -0800, , wabt decompile cleaned string composition 1265 code way string composition using string string_view ostringstream wabt stream first far widely used simply decompilation hierarchical process requires storing intermediate string knowing surround thus unsuitable stream make code uniform everything converted use first approach get performance degradation efficient concatenation method added also work wabt string_view,,
253,b238f211161c38b8b92eecd43aa057e8fb60f01a,am Clegg <sbc@chromium.org>, 2019-12-13 18:21:20 -0600, , reference type add final test br_table 1264 requires slightly different validation rule mvp interface type test unreachable invalid.wast removed reference type repo type br_table label num label num unreachable test depends old validation rule still exists master testsuite need continue support set rule ,,
254,c3038c52956e84b53736e7155d6aaf89e2ac48b1,am Clegg <sbc@chromium.org>, 2019-12-12 14:30:59 -0600, , run update spec tests.py add resulting missing test 1263 found one bug parsing active elem segment uncref style element,,
255,06ad5237e965fbfbd2c61a01b77dfda83522b289,am Clegg <sbc@chromium.org>, 2019-12-12 14:30:45 -0600, , add one test reference type unreached invalid 1262,,
256,de431f0a4d897e86e4dbe59c248573bbbf555793,mir Bawab <amirbawab@gmail.com>, 2019-12-11 18:01:48 -0500, , replace newline space 1261,,
257,e098f4c22f4630dab830a032612532ab7baa9ff9,outer van Oortmerssen <aardappel@gmail.com>, 2019-12-09 17:03:18 -0800, , wasm decompile load store tracking struct output 1258 try make code readable summarizing pattern load store ops struct declaration initial version probably improved essential idea place,,
258,4191fc9e5d65f31ca7538b2a585d251b3ba07ac3,am Clegg <sbc@chromium.org>, 2019-12-03 16:48:34 -0600,1250, split run unittests seperate target 1255 new check target run allows github action show unittests system test separate step also couple cmakelists.txt cleanup use add_definition add fno exception flag lowercase name sanitizer function remove opcode.def list library input file window building dll .def file assumed window dll .def file  change split 1250,,
259,b807819d5501ee7ba22a178d3acfb8fa6d6bcde7,am Clegg <sbc@chromium.org>, 2019-11-26 09:46:27 -0600, , run github action push well 1254,,
260,f1716357df721cbbaeacfcf8b1e7a12d4cb99459,am Clegg <sbc@chromium.org>, 2019-11-26 09:45:14 -0600, , reference type add support typed select 1253,,
261,4386b19e2854e8d5f303bd7236a20092ff77cb9a,am Clegg <sbc@chromium.org>, 2019-11-25 21:41:13 -0600, , reference type add table.fill instruction 1252,,
262,3130ab89d7864ae9105ccca5c241024f9536ab69,am Clegg <sbc@chromium.org>, 2019-11-25 19:30:35 -0600,1223, reference type add reference type spec test 1225 change add test reference type proposal two test require new instruction table.fill select_t followup change see 1223,,
263,af2b4450ef9a9ce504fe95d42cc9812e5976e1f9,am Clegg <sbc@chromium.org>, 2019-11-25 15:05:23 -0800, , add github action badge readme.md 1251,,
264,e6199f223f802ef62bc00058a7fa530f359666d4,outer van Oortmerssen <aardappel@gmail.com>, 2019-11-25 14:17:21 -0800, , wasm decompile output section import export 1233 wasm decompile output section import export output data memory globals table import export function changed syntax consistent refactored checked code review fix fixed printf format warning,,
265,2d1e5a0246d5b2e806ea029ec045ee6f23cf6c78,am Clegg <sbc@chromium.org>, 2019-11-22 15:26:21 -0800,40, initial support github action 1238 add basic workflow build test wabt three desktop platform plan extend completely replace travis appveyor future remove 2.7 requirement python cmakelists.txt due issue github action end selected wrong mingw version python see http github.com action setup python issue,,
266,5e81015f69262657186b3f3bf03bfa28016c5a0d,am Clegg <sbc@chromium.org>, 2019-11-22 00:23:47 -0800, , update spec testsuite 1237 major change interpreter move segment initialization binary reader interp.cc test suite expects bound semgments reported initialization rather reported validation error,,
267,e9b42933377814248b64c4fed9f58bae219443c6,am Clegg <sbc@chromium.org>, 2019-11-22 00:21:56 -0800, , fix run test target window 1247 window binary end .exe live debug release subdirectory need use target_file get full executable name,,
268,1eba845b3abbf7fcc2d49b76198bdc3a563fc698,am Clegg <sbc@chromium.org>, 2019-11-21 18:51:52 -0800, , avoid os.path.relpath gen spec js.py 1246 relpath failing window tmpdir different drive life tmpdir json_dir might different drive path get embedded final anyway embed directly binary string important relative,,
269,291333af0cc5acb2ed17172bdc4a258d8f1fda44,am Clegg <sbc@chromium.org>, 2019-11-21 18:15:45 -0800, , add i686 clang build config 1240 i686 gcc build already work local machine,,
270,0cd7bc16489fe7476b25bf4c8176095ee35d013e,am Clegg <sbc@chromium.org>, 2019-11-21 18:14:51 -0800, , add silence gcc msvc warning 1241,,
271,2da0242be007caffdf44b172e95d7903f71f5b48,am Clegg <sbc@chromium.org>, 2019-11-21 12:40:17 -0800,1236, mark memory_grow test slow 1242 window debug build seems taking long time seems gotten worse since 1236 landed continue investigate cause slowdown possibly revert,,
272,838256d449ecd48f37e0c2fc0c2c1d0f50ce8584,am Clegg <sbc@chromium.org>, 2019-11-20 17:02:30 -0800,1236, fix i686 string formatting issue 1236 1239 sure allowed change land without i686 test passing,,
273,3eb3daf7af8714fe274b578fe9c289cd00d97872,am Clegg <sbc@chromium.org>, 2019-11-19 14:46:02 -0800, , interpreter allow trap include custom error string 1236 mean give precise useful error runtime failure change interp result enum struct hold result enum plus optional detailed error message add trap_msg trap_if_msg macro work like trap trap_if contain format string printf like argument formatted produce error message,,
274,b51f2cd46959467c8e3bb567799f400dbf8070e7,am Clegg <sbc@chromium.org>, 2019-11-19 11:56:26 -0800, , spectest interp report assert_trap pass include error string nfc 1235,,
275,cdd59d17d89a4fa7f2bb663de78fb38317e26409,am Clegg <sbc@chromium.org>, 2019-11-19 10:15:17 -0800, , fix failing git describe cmakelists.txt 1234,,
276,43fef7d1c31f5b99ff9f1e79ce368fe139414882,am Clegg <sbc@chromium.org>, 2019-11-18 15:18:50 -0800,98, switch treating segment flag bitfield nfc 1232 preparation updating latest version reference type proposal additional flag combined see http github.com webassembly bulk memory operation issue also add error_if binary reader.cc logical corollary existing error_unless,,
277,cc1edc0c12d2cf72aec34ae246ebd43bd681671c,am Clegg <sbc@chromium.org>, 2019-11-18 11:42:50 -0800, , wasm interp correctly report failure start function 1230 printing error message returning success,,
278,8b554c8d21f3f9cd9d052ef91a370a032f75aba3,am Clegg <sbc@chromium.org>, 2019-11-15 11:46:13 -0800,1223, wast2json add new assertion type 1224 needed running reference type test see 1223,,
279,2ce48702f02fe25b662a4625344a5a610ba23130,am Clegg <sbc@chromium.org>, 2019-11-15 10:12:23 -0800,1223, reference type implement type checking table.get table.set 1221 test follow form spec test reference type repo see 1223,,
280,80bac7d4a7ca1d80bf3ac2313bbf349f6f29da38,am Clegg <sbc@chromium.org>, 2019-11-15 10:11:50 -0800, , fix expected stack layout typechecking select instruction 1222 i32 condition variable right type error report update bad select cond.txt distinguish difference prevent regression,,
281,ddcec7c6122bbf0ee82a197fbb739ffcc52b63d9,am Clegg <sbc@chromium.org>, 2019-11-14 18:26:49 -0800, , reference type add multi table support interpreter 1218 involved plumbing table argument table.init table.copy way rather assuming always zero update rather complex logic assigning name elem segment handle active elem segment name table apply,,
282,df55ded934ec80d102dc84225c1e76bbdb8c8f0c,am Clegg <sbc@chromium.org>, 2019-11-14 16:56:10 -0800, , reference type improve reftype support 1220 add hostref type internal subtype anyref used refer host object since anyref abstract base type stored directly value stack value stack instead must contain ref concrete reftype enumeration currently null func foreign change needed implementation api separately useful improving conformance reftype proposal implement sub typing rule parameter result using callfunction interpreter,,
283,abc8463c7b7e0eed02b25fd093615e55232ebc90,am Clegg <sbc@chromium.org>, 2019-11-14 11:50:06 -0800,59, reference type table immediate call_indirect come first text format 1219 overview document incorrect recently imagine wabt got wrong initially see http github.com webassembly reference type issue,,
284,a147d92575d386ef45c75a3e492c8ca4d33a3bbc,am Clegg <sbc@chromium.org>, 2019-11-11 17:28:29 -0800, , rename v128_bits simply vec128 since stored natively 1207 _bits suffix used floating point type use type differ native type v128 native struct type store manipulate directly also remove unneeded bitcast operation,,
285,af9250f743a52b374cef88bb3f78ec31c9f5eacf,outer van Oortmerssen <aardappel@gmail.com>, 2019-11-11 08:39:17 -0800, , wasm decompile fixed arbitrary character appearing function name 1213 particular lld may stick entire signature name wabt wasm2wat appropriate wasm decompile function name,,
286,3cc34754555c224c1693d7c42925c3c32145e3e0,am Clegg <sbc@chromium.org>, 2019-11-08 17:37:22 -0800, , allow anyref globals store ref subtypes 1214 requires type global distinct current typedvalue content,,
287,660ce2ce9b4812248088ac45e5f8ef98a6bf6e51,am Clegg <sbc@chromium.org>, 2019-11-08 16:07:35 -0800, , interpreter move env member module base class 1215 needed part implementing api top interpreter also remove trailing match struct member file also remove unneeded forward decls,,
288,2e2991e5a0e6a75d57c9ed6ff7ee0ae88adf253f,am Clegg <sbc@chromium.org>, 2019-11-07 18:42:51 -0800, , initial implementation reftype proposal interpreter 1206 implement ref.func everywhere implement table.get table.set interpreter,,
289,2561eaca9cdba262eaa1e74ce877ffc7be543323,outer van Oortmerssen <aardappel@gmail.com>, 2019-11-07 16:26:58 -0800, , wasm decompile reworked stacky code get decompiled 1205 example multi value void exps non void exps stack temp variable instead pseudo push pop latter particularly readable ordering problem hard make intuitive new system cover possible situation generates variable possible clearer comment test,,
290,856a84c25ae4a29d88e27e5c8918830f04489565,am Clegg <sbc@chromium.org>, 2019-11-07 13:49:14 -0800,1206, wasm objdump fix output passive data elem segment 1211 split 1206,,
291,7eb55de53b68c704666e79759631c7432c34d007,am Clegg <sbc@chromium.org>, 2019-11-07 10:36:22 -0800, , remove used class member interpreter 1204 change also make easier add alternative import resolver needed implementing api,,
292,8a5040e19b7c1c4a56a4a12b6d2cb0ff85e8e3ed,erek Schuff <dschuff@chromium.org>, 2019-11-06 16:08:27 -0800, , check msvc first list compiler test 1209 allows use clang cl.exe wherin clang pretend msvc accepts flag treated msvc case place want tune perhaps refactor allow compiler msvc clang perhaps use clang flag instead msvc get thing working,,
293,a79d64327b480f63fa28a5e239b98ce64ebbe9b9,liver Horn <oliver.horn@gmx.net>, 2019-10-28 20:32:36 +0100, , wasm objdump consistent output table type 1198 adjusts output table import output table declaration element type instead elem_type limit initial instead init check has_max,,
294,ffefb3ba2cdfca91fd20a8ac99c668f80140760d,outer van Oortmerssen <aardappel@gmail.com>, 2019-10-24 08:08:25 -0700, , wasm decompile added initial test 1195 pretty minimal added part feature,,
295,73f141d49a8759993e0a79c3a0e86dd23784378c,am Clegg <sbc@chromium.org>, 2019-10-21 09:20:11 -0700,1187, check redefinition elem segment 1193 fix 1187,,
296,03816aa9c193bf8076de0d5d7a11941f60ff3353,outer van Oortmerssen <aardappel@gmail.com>, 2019-10-18 15:53:36 -0700, , wasm decompile improved return drop 1192,,
297,e6fc529b0677adf1f34c1ab727bf5eb64866b581,outer van Oortmerssen <aardappel@gmail.com>, 2019-10-18 14:54:37 -0700, , wasm decompile refactored code first build ast 1191 pave way better multi pas analysis collect information final output pas,,
298,b04203d60329fa8ccfc4659bb1907fbc54653b81,am Clegg <sbc@chromium.org>, 2019-10-17 07:21:15 -0700,1188, add initial support multi table wat2wasm wasm objdump 1190 fix 1188,,
299,64d3c90ad03fc7e4dfecc3c3b1b994ee14c29dcf,am Clegg <sbc@chromium.org>, 2019-10-16 22:26:26 -0700, , fix unused lambda capture warning 1184 also inline two trivial method,,
300,f157909d791ea8f32248657062e8fdb3ed435eb5,liver Horn <oliver.horn@gmx.net>, 2019-10-14 20:56:10 +0200, , wasm objdump print br_table immediates 1186 print missing br_table immediates,,
301,0a51e391f6aef691dffc62eed4101645f57337e6,am Clegg <sbc@chromium.org>, 2019-10-10 10:28:29 -0700, , add externalkind onimport callback 1182,,
302,8d6f79d2b11b5ab54a6965d072afccd66629947d,mir Bawab <amirbawab@gmail.com>, 2019-10-09 23:12:28 -0400,1106, add version wabt tool 1175 close 1106 ported versioning system binaryen cmakelists.txt http github.com webassembly binaryen blob cmakelists.txt l10 l23  bin wasm2c version 1.0.11 g71f883ad  applied tool src tool,,
303,6d39c5876efbcae17df6c6d45d371b9194fb0b28,liver Horn <oliver.horn@gmx.net>, 2019-10-07 20:29:52 +0200, , wasm objdump fix type signature multi value result type 1179 previously first result type printed even multiple result change print multiple result type parenthesized form whereas single result type printed func result multi.txt test case modified cover type section well,,
304,a31934597195f97f1c4ec4fa6848eb6f05e45a73,am Clegg <sbc@chromium.org>, 2019-09-30 10:13:51 -0700, , wasm objdump include information memory segment 1177,,
305,8eb949210a80869dcaf1388cdd86c9a2292f53ae,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-25 17:26:22 -0700, , wasm decompile declaring local global var 1173 global myvar type initializer file scope var myvar initializer local function also take care lifting function level happen inside exp make use uninitialized local,,
306,5041f12fb308d119c52fbe7bdd64f5aeac3d4fb7,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-25 16:22:16 -0700, , wasm decompile implement br_if 1172 becomes break continue br_if prefixed  refer enclosing loop block generated label name syntax may change may later want replace switch special case decently readable also added statement,,
307,1b243b041c302da716d8a69542e20d04e341787c,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-25 14:41:16 -0700, , wasm decompile added explicit return statement type 1170 previously last value block,,
308,cf261f2bd561297e0da7008ddde8c09ba5ea35a2,en Smith <binji@chromium.org>, 2019-09-25 17:04:14 -0400, , wasm2c fix realloc check 1171 see issue 1159,,
309,2f63483c22b69230542d50d64e51deed00a68b8e,ergey Rubanov <chi187@gmail.com>, 2019-09-25 23:36:32 +0300,1154, update supported feature table 1164 close 1154,,
310,2c73fbb35d393c024211ef07f36b9b3181bca048,en Smith <binji@chromium.org>, 2019-09-25 16:23:52 -0400, , add wabt unittests dependency run test 1157 without running make test fail fix issue 1149,,
311,be24ea4d524905937bbc51b34aa8214cdd5ca22f,aniel Wirtz <dcode@dcode.io>, 2019-09-25 22:22:48 +0200, , attempt locate emscripten emscripten_dir set 1153 attempt locate emscripten emscripten_dir set remove previous,,
312,94d496755830b587f43e7154ee4ffaeb378138bf,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-25 09:30:48 -0700, , wasm decompile output tee set get instead possible 1165 really tangle code line assignment hard read make possible track current stack depth take account unreachable path support feature also added debug output upon assert,,
313,7db18a5d54bf2a19aee60c565c947cf5030c1692,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-23 13:05:59 -0700, , wasm decompile improved naming 1163 initially using name generated wat format modified generatenames function slightly allow alpha based name prefix appears make noisy looking code,,
314,4362ff42d7fff6cc91d7cc82c28e9a4a56ac3622,am Clegg <sbc@chromium.org>, 2019-09-19 12:30:46 -0700, , wasm objdump add symbol flag 1162,,
315,8c0333856c1cfae7c735007ae232ee57dba21171,acob Gravelle <jgravelle@google.com>, 2019-09-16 15:03:38 -0700, , decompiler recurse block exprs 1161,,
316,7f0a6a976fc01a216e4a4f416ee5250d967e45d3,outer van Oortmerssen <aardappel@gmail.com>, 2019-09-12 17:13:16 -0700, , wip added initial skeleton code wasm decompile 1155 wip added initial skeleton code wasm decompile code review change,,
317,99bb044a796b3c4bd3c292c11092de0e21d59ea9,ury Delendik <ydelendik@mozilla.com>, 2019-09-12 07:35:32 -0500, , add ref invoke 1156,,
318,3e938b7a10cc6738037dce5f18675cc5d267992d,en Smith <binji@chromium.org>, 2019-08-29 17:52:04 -0400, , wasm2c return fails 1148,,
319,97bd353df98dfea72f1d7d06b4d087b508a4c37a,am Clegg <sbc@chromium.org>, 2019-08-15 13:44:29 -0700, , switch python indentation space space 1145 pep8 specifies space indentation use space believe historical anomaly certain large organization google chose yet make switch project like wabt little python code think cost switching small enough justify churn,,
320,dcaa42c6bcad851faf4af8076e2f301ddddd6f21,uanzhong Chen <gzchen@google.com>, 2019-08-15 10:38:09 -0700, , run flake8 whole repository 1144,,
321,3150801f60bd64280fe43fdf4604c50018949eb9,eejin Ahn <aheejin@gmail.com>, 2019-08-14 01:35:58 +0900, , visit catch even body empty 1141 current visitor doe visit catch body empty even attached test empty catch body supposed validation failure exnref value left stack catch body passed validator detail current code input validation failure  try catch push exnref value onto stack end  output wrong catch missing  try end  correctly visit catch even body empty test correctly cause validation failure,,
322,a9c001a945ba35456e7ca49f1fe819db2f504bbf,eejin Ahn <aheejin@gmail.com>, 2019-08-13 02:54:34 +0900,79, rename except_ref type exnref 1142 webassembly exception handling agreed rename except_ref type exnref,,
323,51c05065c9cd2a09f7a9e82ead17263b6d097395,en Smith <binji@chromium.org>, 2019-08-10 22:59:46 -0700, , fix bug wast2json simd 1140 never allow null option pointer parsewatmodule parsewastscript allow token type int nat parsing simd float const,,
324,7d07a011b483293853b9badae320dd5ab08e66ba,lewycky <nick@wasmer.io>, 2019-08-10 20:53:48 -0700, , add support feature wasm opcodecnt emit total instruction count 1138,,
325,8e2da7b6b5d5b1c6cc4177bff5ed170d6bdfd33d,eejin Ahn <aheejin@gmail.com>, 2019-07-29 11:20:21 -0700, , add enable option 1132 add enable option enables existing feature,,
326,34a77dcbe7c40aa2feb20d02b5bed9587f8ee2a8,ndy Wingo <wingo@igalia.com>, 2019-07-25 22:03:40 +0100, , add support ref.null global initializers 1131 per reference type spec ref.null constant expression try add support ref.func time really understand strategy wabt reference type seems strong func.ref element section whereas doe seem possible func.ref global well need,,
327,39970f8270fe869c1aec144d468811c71a5cc39c,en Smith <binji@chromium.org>, 2019-07-24 18:19:09 -0700, , fix fuzzing bug wat2wasm 1129 bug bad string newlines bad escape incorrect hex float exponent update fuzz wat2wasm.sh enable feature,,
328,3275a872d4937937417eba7c1bc85034041a0e68,en Smith <binji@chromium.org>, 2019-07-24 18:11:59 -0700, , update demo libwabt.js,,
329,b070467e71f60e7ab00d74078f7742bbf681d0e2,en Smith <binji@chromium.org>, 2019-07-23 14:59:05 -0700, , fix fuzz bug wasm2wat 1128 also update fuzz script enable various feature get fuzz testing,,
330,890fba3f14b098bad6393f472fb1d49b417f4aeb,en Smith <binji@chromium.org>, 2019-07-22 12:25:07 -0700, , change call abort 1126 using instead basically produce undefined behavior ever reached make difficult debug perhaps desired optimized build certainly debug build always convert abort,,
331,58e59b626b8fcf7973316eb84270c1887a8ac1f0,ndy Wingo <wingo@pobox.com>, 2019-07-22 18:02:24 +0100, , fix parsing anyref valued expression 1125 fix http github.com webassembly wabt issue 1124,,
332,c36c95d34aacced046314d444f89e1cd07fa4ba2,lewycky <nick@wasmer.io>, 2019-07-19 15:32:54 -0700, , add support v8x16.swizzle load_splats 1116 add support v8x16.shuffle1 rename previous v8x16.shuffle add copy code new instruction case spec proposal make change test old v8x16.shuffle remain place new test new v8x16.shuffle1 behaviour implementation v8x16.shuffle simply search replace existing test point leaving one untested probably deprecated v8x16.shuffle test v8x16.shuffle1 simd spec test wavm pass wavm spec test parse invocation instruction rename v8x16.shuffle1 v8x16.swizzle update simd operand swizzle binary operator shuffle named v8x16.shuffle add new opcodes load_splat remove legacy 0xfd 0x03 opcode shuffle test four load splat,,
333,3ae2f6df453206ff80f35958b7ab4a1583395dc3,en Smith <binji@chromium.org>, 2019-07-19 15:31:10 -0700, , fix gcc clang warning 1123,,
334,6c0e000814c1528d904f996cce635aa860358d4c,lewycky <nick@wasmer.io>, 2019-07-19 13:53:08 -0700, , fix typo unt8_c defined stdint.h 1122,,
335,3b8337f0d624a080cff322c0288f99c7794db165,en Smith <binji@chromium.org>, 2019-07-19 11:21:29 -0700, , fix crash newlines string token 1121 fix crash newlines string token fix issue 1120,,
336,04fd00d2fc29b565da350739d3a1f9c85267d5d2,en Smith <binji@chromium.org>, 2019-07-18 20:16:12 -0700, , fix assertion wastlexer ischarclass 1119 char signed conversion int keep sign ischarclass value index value must unsigned fix issue 1117,,
337,98865cc377e4fe3f64a957a88a6ddfb842b3ccc1,en Smith <binji@chromium.org>, 2019-07-18 18:08:29 -0700, , fix floating point conversion msvc bit 1118 msvc bit precision x87 register default mode possible properly round large unsigned bit integer bit float work around change x87 floating point precision function reset original precision better solution may change floating point precision entire program though clear effect may generated code change also enables appveyor bit msvc build fix issue 1113,,
338,95796330a76a73a4fc859284748dc61a2c77424a,lewycky <nicholas@mxc.ca>, 2019-07-18 09:27:35 -0700, , fix use non portable format string remove clang warning build 1115,,
339,00d1a725567e5879e5c6f131c0576ef16fc9f5c6,lewycky <nicholas@mxc.ca>, 2019-07-17 15:51:33 -0700, , add spec test support v128 1110 add spec test support v128 algorithm however simple produce digit reverse order remember reverse printing correct order quad v128 given v128.const i32x4 0x01020304 0x05060708 0x090a0b0c 0x0d0e0f00 wabt v128 struct contain 0x01020304 v128_bits.v wasm program v128.store store constant load byte i32.load8_u wabt interpreter produce order add parser v128 implement support spectest interp move writeuint128 literal.cc add test rewrite use string stream roll repeated code loop rename function comply style guide use anonymous namespace v128 operator use spectest binary module use feature module outer spectest,,
340,3f2ba0f3bd2c829a57929a23c0cd08157b66cd61,am Clegg <sbc@chromium.org>, 2019-07-16 19:06:55 -0700, , wasm objdump improve display comdat data 1114,,
341,0b039bf756178160c54c94d1b0bce9322cf6cd88,en Smith <binji@chromium.org>, 2019-07-16 16:46:41 -0700, , update spec testsuite 1111 remove passive keyword bulk memory fix rounding hex float allow underscore nan payload,,
342,b973cd4ed4ffb6a3c7e797b126a8a79b72b14234,an Douglas Scott <ian@iandouglasscott.com>, 2019-07-15 17:59:06 -0700,1103, add option use system copy gtest 1109 fix 1103,,
343,429dee91050454b361f739352f215aee1bf971e1,en Smith <binji@chromium.org>, 2019-07-15 16:26:17 -0700, , fix value dropping bug return_call 1112 previous implementation properly dropping value stack performing return_call particular keep count i.e number value keep top stack set properly drop count number value drop keep count fix issue 1108,,
344,41adcbfb106e035f90de93d472c10461bf4f3f9c,en Smith <binji@chromium.org>, 2019-06-28 15:44:56 -0700, , interp add flag provide dummy import funcs 1101 pas dummy import func wasm interp provide function log call return zero,,
345,2800d5725e79ac5cc6eb50c4d2265d1de4cdf4ed,en Smith <binji@chromium.org>, 2019-06-28 13:54:34 -0700, , write text json file 1100 wast file definition look like wasm  invoke function i32.const 132 error message  commit add error message part output,,
346,763cda5287f56f15ced59ab3254eacc576646dbf,en Smith <binji@chromium.org>, 2019-06-27 09:57:22 -0700, , match custom section name wasm objdump 1097 way see content one custom section using  wasm objdump section_name  section_name name custom section,,
347,a81f36c0d5aeda465b593dae7e0adc4ddb660149,en Smith <binji@chromium.org>, 2019-06-24 19:00:05 -0700, , add test option parser 1096 also fix bug long value see 1095,,
348,8b281fa2f0358006d584834a70a53ce3d8ec1112,en Smith <binji@chromium.org>, 2019-06-07 15:34:32 -0700,1091, fix wasm interp assertion 1092 i32 init expression data elem segment instruction last end instruction function function label popped fix 1089 1090 1091,,
349,d1bb5f81541e670b8d088f158d08c99a6a973281,en Smith <binji@chromium.org>, 2019-06-07 09:53:41 -0700, , rely utf encoding json string 1088 fix issue 1086,,
350,986f5cc8bb85ba4ecc0dd3ed82fa39565ce9c419,am Clegg <sbc@chromium.org>, 2019-06-04 09:48:32 -0700, , add support comdat group linking section 1087,,
351,a3a7a93f1f417c6c258e6b5d507adb004fc8b688,am Clegg <sbc@chromium.org>, 2019-05-17 16:50:05 -0700, , wasm objdump fix crash invalid reloc section 1084,,
352,11a9e0b531a3d650d2fef0ab258f136f1a9bd5ff,en Smith <binji@chromium.org>, 2019-05-17 12:11:20 -0700, , add supported proposal section readme.md 1083,,
353,ca758dcb15eca9894f555456c3e36e55df81dadd,ill Ticehurst <billti@microsoft.com>, 2019-05-16 20:07:39 -0700, , fix install prefix readme 1082,,
354,66cb491d3ecd8f0ea438fd90033112330117729b,ill Ticehurst <billti@hotmail.com>, 2019-05-16 20:04:50 -0700, , fix cmake warning 1081,,
355,c65a5319441a86109f2c4f9cdc1d626e89875c4f,lex Crichton <alex@alexcrichton.com>, 2019-05-13 12:43:20 -0500, , update typechecking table.grow 1079 think previous order implemented firefox point look like since updated reversing order operand table.grow match proposed spec text currently say,,
356,0af114943e38a0c0a4ccb0b49b4a8fb07d1bd056,acob Gravelle <jgravelle@google.com>, 2019-05-07 22:30:07 -0700, , initial custom annotation support 1076 lex custom annotation discard parser future able parse simple spec compliant,,
357,f46149231522736d909c7c18d6fd2471ec53393f,en Smith <binji@chromium.org>, 2019-05-07 19:03:02 -0700, , implement bulk memory interpreter 1074 implement bulk memory interpreter read write elem_type element segment binary format text format elem passive funcref ... add datasegment runtime object initialize active data segment instantiating,,
358,3b8dfbff5ba95537fb1b6da151ad6a526503d405,en Smith <binji@chromium.org>, 2019-04-28 18:00:37 -0700, , fix factorial demo thanks d3x0r,,
359,638ddb7c1ed549e60de9df1a3be363760f74ed1c,en Smith <binji@chromium.org>, 2019-04-24 16:28:04 -0700, , update testsuite 1071,,
360,fd8fb076f16ae200bf80212fc1d007e3ecf45535,en Smith <binji@chromium.org>, 2019-04-24 00:23:27 -0700, , fix wswitch warning opcode reffunc,,
361,e7a3802b6e8bb1ab88d9b0bc97d7f5a20ffe0ab9,en Smith <binjimin@gmail.com>, 2019-04-18 16:37:58 -0700, , proper encoding passive element segment 1066 store element segment vector elemexpr instead func index read write binary format element expression read write text format element expression,,
362,791896866ee26621ba806d03c69b64ece0992c66,en Smith <binjimin@gmail.com>, 2019-04-17 21:46:51 -0700, , print function name code detail 1065 name already displayed function section disassembling function,,
363,748b07dce1ac06bceacf326595261edcdef2e27f,en Smith <binjimin@gmail.com>, 2019-04-11 10:37:57 -0700, , update build instruction include building basic instruction describe using cmake generate project file mention running make etc,,
364,733e7dd3b22900a47b178ff7e6c51340eb94b20d,en Smith <binjimin@gmail.com>, 2019-04-10 16:21:04 -0700, , fix infinite loop lexer bad character 1061,,
365,189c0e61cb164b6db98a97b6bc4f19205d9f2dc6,outer van Oortmerssen <aardappel@gmail.com>, 2019-04-05 15:00:08 -0700, , made common string lookup robust 1060 since purpose string display user error string useful default assert would require caller consistently check range valid value tool like wasm objdump preferably able continue outputting even face illegal value,,
366,a927578d466838b6dacfdd30c2aebc891bcf594e,en Smith <binjimin@gmail.com>, 2019-04-04 10:46:33 -0700, , use string_view instead string token 1059 possible ensure entire source file memory lexing,,
367,cc39cc1174ac4182977704845d8dd1cdb8926f43,en Smith <binjimin@gmail.com>, 2019-04-03 23:20:50 -0700, , rewrite lexer manually instead re2c 1058 current lexer re2c easy change generates huge amount code easy forgot update rewrite lexer manually gperf instead match keywords generated source much smaller,,
368,65663b0e20cba18d340ca35195b13a37936adac6,am Clegg <sbc@chromium.org>, 2019-04-03 18:39:19 -0700, , add name locally declared globals 1057 currently come export global,,
369,5c94a7ba7f0cdf4276fa64fccbb74586048b10d7,am Clegg <sbc@chromium.org>, 2019-04-03 12:29:28 -0700, , add new relocation type position independent code 1056 see http github.com webassembly tool convention pull 106,,
370,a5919e92af2e1ef9172d541f1b30d143d5f96e56,en Smith <binjimin@gmail.com>, 2019-04-03 11:36:14 -0700, , update testsuite fix linking spec test 1055 module instantiated start function trap content memory table may modified case handled check wast test spectest interp would instantiate module incorrectly resetting environment run spec wasm2c test run module init function run expected trap,,
371,d7d7945a4823a666d5d967f7cb2069cf8797b7d7,en Smith <binjimin@gmail.com>, 2019-04-01 12:52:48 -0700, , remove lexersourcefile 1054 benefit lexersourcefile read file larger loaded memory probably valuable feature loading sized file bit machine certain worth extra complexity,,
372,d84161cbfe968f8b0e67d945fd3669b71c5e73bb,en Smith <binjimin@gmail.com>, 2019-03-28 16:42:19 -0700, ," add parseint 8,16 function use simd 1052",,
373,cef3040884af87b702c5d285c940669b5e5a4236,nzlbg <gnzlbg@users.noreply.github.com>, 2019-03-28 20:12:56 +0100, , make v128.const i32x4 conform simd draft 1037 update v128.const wat parsing conform simd draft manually fix indentation rename no_lanes lane_count fix parsing oob integer update simd shuffle test new syntax add v128.const type token lexer,,
374,19d9aae9c28dd8656a69a8d8f77d191ae2b90973,am Clegg <sbc@chromium.org>, 2019-03-26 19:06:13 -0700, , wasm objdump print name globals used init expression 1051,,
375,5545b01e27e2b79b6e878bac8328167da17f5f70,en Smith <binjimin@gmail.com>, 2019-03-25 15:37:13 -0700, , update testsuite 1047,,
376,2aad6f7444e969f80c86047d89e79557c57bc4c0,en Smith <binjimin@gmail.com>, 2019-03-25 15:36:53 -0700, , provide better error file fails 1050,,
377,cd646347d3eb08b8cdba7945738f3ce0e177b4a1,am Clegg <sbc@chromium.org>, 2019-03-21 12:14:53 -0700, , wasm objdump include import module part displayed name 1049,,
378,6f743c4dc3bc69601fe54ba938d083ebc4cbe587,en Smith <binjimin@gmail.com>, 2019-03-18 15:05:26 -0700, , canonicalize nan interpreter 1046 even though store f32 f64 value representation still use underlying system implementation float operation non deterministic behavior w.r.t nan change canoncalizes nan allowed excludes fxx.abs fxx.neg fxx.copysign fxx.reinterpret always work floating point representation directly fxx.convert instruction nan input integer,,
379,08629b86342872e91f50cfbeef7444cfa8810dcf,en Smith <binjimin@gmail.com>, 2019-03-14 17:15:29 -0700, , fix bug integer parsing 1041 parsehexdigit allowed hex character overflow checking check old_value new_value fails many case,,
380,8ab47309e20748c465e28773c92cef7029f5e410,en Smith <binjimin@gmail.com>, 2019-03-08 17:02:30 -0800, , allow local type count 1039 legal wasm format local type count originally made illegal fix wabt bug notice spec test behavior,,
381,a44ee1228e2a1408ae773dfeb2dfc0463b371ea2,nzlbg <gnzlbg@users.noreply.github.com>, 2019-03-07 11:47:04 +0100, , update textual encoding simd vector shuffle conform latest simd draft 1034,,
382,2d1f2c9d5a544181f5a7bc5598831323ffa223c7,en Smith <binji@chromium.org>, 2019-03-06 16:41:26 -0800, , travis run before_deploy script,,
383,04fe0c4124967f09060f3a9d16e2bf4f7956ac0d,en Smith <binji@chromium.org>, 2019-03-06 15:08:43 -0800, , travis deploy tool webassembly bucket,,
384,5fc2854ab275510cd703e960e165b390b04e6d4c,en Smith <binjimin@gmail.com>, 2019-03-06 14:07:24 -0800, , update demo include feature flag 1036 also add new example feature,,
385,69336dcad7dc0c861dffd97351ce7288a53aef26,nzlbg <gnzlbg@users.noreply.github.com>, 2019-03-05 21:01:51 +0100, , make lane wise simd relational operator conform spec 1031 lane wise simd relational operator setting false lane zero true lane according spec operator clear bit false lane set bit true one,,
386,df79d5812ee1fb23cc6b1c166abe3d28b4fcb342,en Smith <binjimin@gmail.com>, 2019-03-03 23:57:35 -0800, , refactor objdump name handling little 1030 use objdumpnames struct share similar code mapping index name,,
387,ca92c97ac4e7175edc1d7b5e8f06ae2ef3001281,am Clegg <sbc@chromium.org>, 2019-03-03 22:16:50 -0800, , wasm objdump show data segment name 1028,,
388,f320e3c34b4fbcf7d2ed30e8aa9ee01e383b67d6,liver Horn <ohorn@users.noreply.github.com>, 2019-03-04 04:25:10 +0100, , wasm objdump fix f64 init expression 1029 printinitexpr function falsely treated f64 float instead double test case global.txt also contained wrong output namely 0x0p instead 0x1p f64.const,,
389,3cdce2e009f371d532db748227fac615eb661e64,outer van Oortmerssen <aardappel@gmail.com>, 2019-02-26 02:59:19 +0100, , wabt objdump refactored function use string_view 1027,,
390,93640e2a4ef8559c412f9860aa8ed1497d756abc,en Smith <binjimin@gmail.com>, 2019-02-25 00:12:19 -0800, , rename anyfunc funcref parse reference type 1026 also add feature limit using v128 anyref type requires enable simd enable reference type respectively separate parsevaluetype used params local global type parsereftype used table type,,
391,8096983bb0b8fa2f0ab3486dad76e9f7c50eb381,outer van Oortmerssen <aardappel@gmail.com>, 2019-02-25 01:42:29 +0100, , improve support event symbol except_ref type 1025 added except_ref legal block type signature added support event symbol,,
392,601d488f919e464b9dc80f5b3a3d8498fad10bba,en Smith <binjimin@gmail.com>, 2019-02-20 13:51:30 -0800, , add wasm objdump fuzzing script fix fuzz bug 1023,,
393,4eec05224dd67d12e9b4c7e9f929d581871997b2,outer van Oortmerssen <aardappel@gmail.com>, 2019-02-20 02:46:03 +0100, , wasm objdump implemented reloc type 1022 also fixed asserts could trigger user data,,
394,aae9e628d57966e042419e858594f2fb5d986ddd,en Smith <binjimin@gmail.com>, 2019-02-19 16:07:44 -0800, , remove use update demo 1021,,
395,ab7f63addcb907e3d363b2f3c1245fc7c4ddf87e,onough Liu <ldm2993593805@163.com>, 2019-02-17 05:51:08 +0800, , update readme.md 1017,,
396,2b33a37dc49c033ba9b34f438233f204002415d9,lex Crichton <alex@alexcrichton.com>, 2019-02-14 11:07:03 -0600, , add support reference type proposal 938 add support reference type proposal commit add support reference type proposal wabt namely add new opcodes like table get set grow well add new anyref type plumbed throughout various operation relatively simple fashion support added subtyping relationship anyref anyfunc yet also raise restriction multiple table disallowed allowing multiple table exist enable reference type passed allow nonzero table index call_indirect plumb support throughout call_indirect instruction work multi table module according reference type proposal,,
397,19191efaf1b5b92b0357b303be1b25cf439be9a2,en Smith <binjimin@gmail.com>, 2019-02-13 16:27:24 -0800, , add br_on_exn instruction 1016 take two u32 immediates branch depth exception index stack signature expect_ref except_ref except_ref tested easily multiple exception type,,
398,e448ac7cbd74f7a048b1de15ce1a2716340a57c8,en Smith <binjimin@gmail.com>, 2019-02-12 14:41:34 -0800, , parse updated event text binary format 1014 event type section index like function definition current proposal specify text format assumed would match format section reference function type mean following declaration style allowed  type func param i32 event type event param f32 ,,
399,35ee613d4f8e65e730aaa6d519ee39ce581d4f24,en Smith <binjimin@gmail.com>, 2019-02-11 21:48:54 -0800, , rename exception event 1013,,
400,d565b00ba381b3000f0517dd2191185d8787a61d,en Smith <binjimin@gmail.com>, 2019-02-11 19:45:06 -0800, , add event known section remove exception 1012 exception section known section code known event section structure section changed fix another,,
401,800a45337bc77163ba54237284ee7e6786af2a08,att McCormick <matt@mmmccormick.com>, 2019-02-11 01:18:57 -0500, , add missing string.h include wasm impl.c 1010 address gcc tmp wabt wasm2c tmp wabt wasm2c wasm impl.c wasm impl.o tmp wabt wasm2c wasm impl.c function tmp wabt wasm2c wasm impl.c 111 warning implicit declaration function memsetâ wimplicit function declaration memset memory data old_pages page_size delta page_size  tmp wabt wasm2c wasm impl.c 111 warning incompatible implicit declaration built function memsetâ tmp wabt wasm2c wasm impl.c 111 note include string.h provide declaration memsetâ usr lib gcc x86_64 linux gnu x86_64 linux gnu scrt1.o function _start .text 0x20 undefined reference main gcc debian 6.3.0 deb9u1,,
402,86ca8824a9cc4298fe4f1b017bf5e006588efd20,en Smith <binjimin@gmail.com>, 2019-02-10 22:17:15 -0800, , remove if_except instruction 1009 longer part exception proposal,,
403,b61ea803e237987ba1296577512bdc6e9d6ca371,ugene Chung <bluewolf.chung@gmail.com>, 2019-02-09 04:18:27 +0900,992, avoid mac ranlib error 1007 992 linking cxx static library libwabt.a library developer usr bin ranlib file libwabt.a config.cc.o symbol library developer usr bin ranlib file libwabt.a config.cc.o symbol add dummy function clang ranlib error,,
404,2470125ad664e8744acab97526173a44bd9fb98a,am Clegg <sbc@chromium.org>, 2019-02-06 14:04:58 -0800, , rename relocation type 1005 see http github.com webassembly tool convention pull,,
405,adf722aa263d53d90b505adf86e6b4250707e8f7,am Clegg <sbc@chromium.org>, 2019-02-05 14:03:04 -0800, , wasm objdump always show function number along name 1004 since name always unique,,
406,d8fc8e1fbba8b6ba73eb52caea90290525e853c1,en Smith <binjimin@gmail.com>, 2019-02-01 16:49:17 -0800, , return failed test count spectest interp 1003 spectest interp used return success test failed non zero source could parsed useful return non zero test fail fix issue 1002,,
407,75ffe6cd45e3fedd950f24ba15333dbc69e5a5da,aWa <wasserfuhr@yahoo.com>, 2019-01-31 21:41:45 +0100, , updated 404 link 1001,,
408,ceef14583e7634230126c5b6974e697c5a58b2c2,lex Crichton <alex@alexcrichton.com>, 2019-01-30 09:23:04 -0800,46, rename memory table .drop data elem .drop 1000 carrying renames webassembly bulk memory operation,,
409,4c95f0e9fbedd922b7161a0a00c90c8eb7dac694,lex Crichton <alex@alexcrichton.com>, 2019-01-29 14:09:50 -0600,45, update bulk memory instruction binary encoding 999 commit update wabt wrt two recent webassembly bulk memory operation webassembly bulk memory operation,,
410,12e8de7f5b3a5be01e3e6347c64168ea34b85a38,en Smith <binjimin@gmail.com>, 2019-01-23 15:12:42 -0800, , implement parsing writing datacount section 998,,
411,c37eef7de4df2b4d523b8b1daecf5207a0da4ec2,en Smith <binjimin@gmail.com>, 2019-01-21 02:56:15 -0800, , clarify build instruction readme.md 997 see issue 992,,
412,60958802126b101a35cab900ced6fac0ad5df1f5,am Clegg <sbc@chromium.org>, 2019-01-17 11:02:50 -0800, , update linking metadata version 996 also make explicit showing log2 alignment could instead display actual byte alignment p2align,,
413,4d5b0ba9e6a0ca36a094ec520ada45f5db7104ad,en Smith <binji@chromium.org>, 2019-01-16 01:11:21 -0800, , appveyor generate sha256 file deployment sure work,,
414,b37a749c93eb7c716a1a29e99eac63152e4a5d28,en Smith <binji@chromium.org>, 2019-01-15 21:53:45 -0800, , update latest spec testsuite,,
415,7da7dadd7884d0493ce59512011079572846f26d,en Smith <binjimin@gmail.com>, 2019-01-09 23:58:09 -0800, , look python building test 993 system python installed build test ever need,,
416,fb7e8666afb76307bb41d5067c8c85754120ec1f,en Smith <binjimin@gmail.com>, 2019-01-07 15:40:27 -0800, , fix segfault passing wasm objdump directory 991 fix issue 962,,
417,943164db9bc1147a856dc202f177cf32b64231b7,en Smith <binjimin@gmail.com>, 2018-12-20 15:54:59 -0800, , fix segfault running wat2wasm 990 fix issue 989,,
418,21a9de42020492451dbefd95173ad06613dcf176,en Smith <binjimin@gmail.com>, 2018-12-20 14:29:28 -0800, , remove assert stdlib includes wasm2c 986 seem used anymore,,
419,052d2864ec4cc45a3aca4bab1a833d1cc45e29d6,en Smith <binjimin@gmail.com>, 2018-12-19 12:36:52 -0800, , great renaming 985 huge doe renaming described issue 933. also update latest testsuite new name used old name mvp instruction still supported convenience though remove point old simd atomic instruction name longer supported,,
420,3ac02b6d3cc5bc3ff6cfe57df312b2677ca83d75,en Smith <binjimin@gmail.com>, 2018-12-18 09:27:18 -0800, , fold multi value result properly 984 expression need treated specially folding expression result count since expression split include child another expression value used example  func dup result i32 i32 ... call dup produce two value i32.add consumes two value ,,
421,32ee1f63cf9489d47896dfc2e7d294fdfee13d3d,en Smith <binjimin@gmail.com>, 2018-12-17 11:33:06 -0800, , add werror option cmake build 982 compile werror default useful wabt developer hostile user fix issue 980,,
422,9c5234771080917b22310f137b7c91af49baa746,en Smith <binjimin@gmail.com>, 2018-12-17 11:32:05 -0800, , add link generated man page readme.md 983,,
423,8cbe3cc113dc78d42000abd76d4b47897aae0e4f,aphael Graf <r@undefined.ch>, 2018-12-17 20:12:21 +0100, , add missing manpages fix markup reference link example 979,,
424,bfc4f5b9cf7d1e43896d825d5485621956a3ec3f,en Smith <binjimin@gmail.com>, 2018-12-12 17:03:23 -0800, , pas function body size binaryreader callback 975 useful finding large function wasm objdump,,
425,a5827e0c2e5d3e4a05a65853ec5b5284dffe9585,am Clegg <sbc@chromium.org>, 2018-12-12 15:48:35 -0800, , add needed_dynlibs dylink section 974 field recently added http github.com webassembly tool convention blob master,,
426,152a5258aa0d24bf10b7e57878abba78dd0c3c56,aphael Graf <r@undefined.ch>, 2018-12-12 20:43:22 +0100, , fix synopsis manpages 973 wasm objdump option filename wasm objdump option file ... also document wasm objdump.1,,
427,b94c2056529885af1ac056ceec07735bb45b9e80,en Smith <binjimin@gmail.com>, 2018-12-04 12:19:55 -0800, , combine param_binding local_binding 969 bindinghash object used map name index detect multiply defined name since local params use index space namespace always using bindinghash,,
428,96e12c00b3bec700f851e94b63708ead1d7f84ad,en Smith <binjimin@gmail.com>, 2018-12-03 23:10:12 -0800, , rename duplicate local 968 similar 512 duplicate local allowed name section produce invalid wat file could support properly custom annotation available yet meantime follow function append etc name make unique,,
429,48e4b094c54103fbf406d7566c950190d928c34c,en Smith <binjimin@gmail.com>, 2018-11-30 11:40:47 -0800, , run proposal spec test 964 test already included third_party testsuite update spec tests.py script need updated include,,
430,6b93a50cf1e3750f0b7a0e4290c73dc202e0ce6a,am Clegg <sbc@chromium.org>, 2018-11-29 14:30:06 -0800,960, wasm objdump cleanup hanlding global name 960 963 way implement first time around,,
431,451edf63ed251b7438173dd88a224890c47a0872,am Clegg <sbc@chromium.org>, 2018-11-29 00:53:20 -0800, , wasm objdump print name global disassembly get set_global 960,,
432,2547ab9c1dd291ad3c19beaf96ddf74d3a8892e5,en Smith <binjimin@gmail.com>, 2018-11-28 00:10:51 -0800, , handle mismatch function code section 959 function section present non zero count code section absent module validate either section missing count zero,,
433,a3ec8554b5c62e2f973992054904f30e99910384,en Smith <binjimin@gmail.com>, 2018-11-19 17:32:43 -0800, , fix wasm objdump binary opcode output 958 instruction long encoding longer byte instruction nice write byte instruction immediates used truncated misaligned  0002f1 v128.const 0x00000001 0x00000002 0x00000003 0x00000004  wrapped  0002f0 v128.const 0x00000001 0x00000002 0x00000003 0x00000004 0002f9  instruction offset also incorrect instruction prefix fixed,,
434,690948b22cc3e1213820f3e4b33009ebdef66e2d,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-19 15:05:49 -0800, , support simd instruction wasm objdump 957 test shamelessly borrowed light editing test interp,,
435,95d70000cce49b058107e3a4695bca7f848a18c6,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-14 20:56:00 -0800, , renumber simd instruction 956,,
436,e13d7c942a25df6f181cdbabb01b557666842752,am Clegg <sbc@chromium.org>, 2018-11-14 16:17:44 -0800, , add support dylink section 955 see http github.com webassembly tool convention blob master,,
437,9b549f947297d680b1e493facdd15a469f6e8244,ms <michail.vms@gmail.com>, 2018-11-15 01:28:32 +0300, , remove redundant i32 i64 f32 f64 v128 .const instruction disassemble trace view 954 delete redundant const instruction add consts delete redundant dissasemble view correct test remove v128.const operation remove lost dissemble view,,
438,92b3a32a7451ed1061ea773a33f35d418f792b26,en Smith <binjimin@gmail.com>, 2018-11-07 16:22:00 -0800, , update lastest spec testsuite 953,,
439,a0048afa8313c0a03e187fc543678e142dc6644e,en Smith <binjimin@gmail.com>, 2018-11-06 11:23:29 -0800, , add note building using makefile 952 apparently system trouble building using makefile build using cmake directly see 951 822 others least give clue work around bug,,
440,61372aad2bb3379a0c16ee052568eb7f69b02114,en Smith <binjimin@gmail.com>, 2018-11-05 11:59:14 -0800, , update testsuite 942 also fix bug parsing elem data segment table memory index stored leb128,,
441,b1b50452a297ec60f20bc7235ecfb82c7ab907a9,en Smith <binjimin@gmail.com>, 2018-11-01 10:28:12 -0700, , add ... function fix travis 941 newer version emscripten error attempt export function defined added dummy function export list work around emscripten issue 7073. fixed may want keep workaround bit allow non head emscripten version fix 939,,
442,39ceee53a9cd23451a28d4e56e151ef76044b5df,en Smith <binjimin@gmail.com>, 2018-10-30 16:19:26 -0700, , set end_loc folded expression 940 without fix validation error display location properly,,
443,bba180a8c1ea170341e8479ba6ceebeb7b97cf73,en Smith <binjimin@gmail.com>, 2018-10-30 12:46:31 -0700, , check type use vs. explicit sig call_indirect 937 call_indirect instruction take type use also take explicit signature  call_indirect type foo type use call_indirect param i32 explicit signature call_indirect type bar result f32  type signature must match wat file considered malformed properly checked spec test performed separate function wabt validated wat2wasm performs full module validation via wabt validatemodule share code  might good idea share code two enough fix bug performing check module validation path fix issue 936,,
444,38d6ac56fc9bead682f9c09295303635aeca47d8,ob Richardson <robrich@robrich.org>, 2018-10-23 00:09:37 -0700, , update url match documentation change 935,,
445,9b66cdc5a92cc11c321b0068a90f6db8c24e07ff,en Smith <binjimin@gmail.com>, 2018-10-18 14:47:40 -0700, , add test disabled opcodes binary reader 934 easy forget add check unexpected opcodes tedious write additional test test binary way test potentially disabled instruction,,
446,4e226c6a5491f15593f57aaddb12efe1ee25efb1,en Smith <binji@chromium.org>, 2018-10-17 21:20:53 -0700, , use appveyor status badge date,,
447,fd4a696c3d104b8bc2520796e758e66439c079f5,en Smith <binjimin@gmail.com>, 2018-10-16 17:00:25 -0700, , add test tail_call feature 931 fix place call call_indirect used instead return_call fix typechecker print better error signature match allow return_call instruction parser unless tail call feature enabled support folding return_call fix 929,,
448,b234c76e30b49f75ddcd095c5f1e7d9d27d82160,en Smith <binjimin@gmail.com>, 2018-10-15 13:57:26 -0700, , add bulk memory test use var segment 930 allow name data elem segment  data foo i32.const abcdef  name referenced memory table instruction operate segment  memory.drop foo  fix running wasm objdump bulk memory instruction check valid data elem segment validation check bulk memory enabled parsing text partial fix 928 still need interpreter check,,
449,8292bd817c873a77d2a0a14dbbd9892b4e9c7860,rancis McCabe <frankmccabe@mac.com>, 2018-10-12 14:05:00 -0700, , implemented tail call instruction 926 return_call  simple test thereof,,
450,27d833c6c8bbb041c43e5f67e1049d6c0095bd56,lex Crichton <alex@alexcrichton.com>, 2018-10-12 13:57:23 -0700, , add bulk memory opcode definition 927 commit start add support wabt various tool upcoming bulk memory proposal based current proposal overview although may get tweaked time also first time significantly contributed wabt thought would relatively simple addition ended much larger imagined add many negative test yet test desired please let know http github.com webassembly bulk memory operation,,
451,2cf0904a8b0c8fac067a10838121f8e0e35359de,en Smith <binjimin@gmail.com>, 2018-10-11 20:04:13 -0700, , use page instead rawgit demo 925 fix 924,,
452,795d1292377b7e5de8dabeefaa11edfaf6bd97af,en Smith <binjimin@gmail.com>, 2018-10-05 16:10:30 -0700, , require reserved instruction byte one byte 922 spec requires reserved byte call_indirect memory.grow memory.size one zero byte mean accept 0x80 0x00 long leb128 encoding zero,,
453,c60072616662f3e7000cc7959ce6ae1280b09ec0,en Smith <binjimin@gmail.com>, 2018-10-04 12:22:16 -0700, , libwabtjs add support feature 921,,
454,0e27f0b47291724230eb18bc9ea7fda298dd8ea4,en Smith <binjimin@gmail.com>, 2018-10-02 08:57:04 -0700, , refactor interpreter bit 919 create src interp directory move thread trace src interp interp trace.cc move environment disassemble src interp interp disassemble.cc move shared code src interp interp internal.h,,
455,c90dc3ed9787a0c671d4efff407911fd3003f786,en Smith <binjimin@gmail.com>, 2018-10-01 17:50:46 -0700, , tailcall 918 real work yet add returncall expr opcode type enable tail call flag still todo parse opcodes binary reader.cc validate opcodes validator.cc type checker.cc implement opcodes interp.cc write standard wabt test enable spec proposal test,,
456,48531e30895d47ae4f881dc18e41e4eb187b776a,izhengxing <unixhaha@gmail.com>, 2018-09-26 13:34:07 -0700, , update wasm simd instruction opcodes 916 update wasm simd instruction opcodes changed latest spec,,
457,718688b8d26f7a270054fb49f99360663fbcece7,en Smith <binjimin@gmail.com>, 2018-09-14 14:48:20 -0700, , install wabt unittests refactor cmakelists 913 wabt unittests used installed really also use make wabt_executable function little powerful,,
458,10bf7b29cbc826eb66d8b2ef2208d64ed86a5512,en Smith <binjimin@gmail.com>, 2018-09-13 21:13:54 -0700, , wasm interp fix assert non func export 912 run export flag assumed export function,,
459,ad864f79b7340f60fc3a58448055f77cb9a6b3e3,en Smith <binji@chromium.org>, 2018-09-10 13:04:22 -0700, , optimize interpreter opcode fromcode opcode fromcode calculated opcode given prefix code pair using lower_bound list opcodeinfo happening every instruction incredibly slow since interpreter format internal use encoding want simpler faster use opcode enum directly without calling opcode fromcode opcode fromcode also used reading binary file optimized anyway instead using infos_ table indexed opcode enum_ value create new statically defined table map prefix code pair enum value unfortunately done easily doe currently support designated array initializers table created file instead opcode code table.c,,
460,0b5f3c8af75422c1ba17f322b0ab816ef6bc0a58,en Smith <binji@chromium.org>, 2018-09-10 13:30:44 -0700, , update readme.md demo link see issue 908,,
461,140224fb8692ed081c46a357052ccaaff81e71a2,en Smith <binji@chromium.org>, 2018-09-06 19:06:00 -0700, , fix multi value bug run spec test running multi value spec test found bug dropkeep need copy kept value backward region overlap type name need resolved index block declaration e.g block type foo without else valid behaves though else empty pas params result validating function signature need also check block declaration signature split resolvefunctype two function   resolving implicitly defined function type create implicit function type type inlinable i.e block loop result value params change update spec test include multi value proposal repo testsuite,,
462,e0719fe0fe504c497d9fb7510fe68499c08179f4,en Smith <binji@chromium.org>, 2018-09-03 13:08:23 -0700, , replace errorhandler error formaterrors errorhandler complicated error handling wabt since callback based callback would useful ever wanted change behavior error occurred instead handler ever write error stdout stderr buffer change add new class error contains errorlevel location error message also replaces errorhandler error typedef std vector error add couple function format list error output formaterrorsto string file,,
463,b4125e90c70a6b1bef4480e33f3c838ab4c7cfcb,en Smith <binji@chromium.org>, 2018-09-02 18:22:35 -0700, , move wastlexer nameresolver validator etc also remove wast parser lexer shared,,
464,4a54eb34d3e362c8a49316aff6e989f7c9743ed9,en Smith <binjimin@gmail.com>, 2018-08-31 09:16:52 -0700, , work around bug emscripten response file 905 see issue 7037 emscripten parsing respones file work properly final element list fix issue 904,,
465,6e0687bdfc70d230408d37453e38d133c3bd30f8,en Smith <binjimin@gmail.com>, 2018-08-28 21:17:41 -0700, , add inline port flag wat desugar 903 long supported wasm2wat,,
466,8af3902b8a4c65c5a9abf1a0194a71846c640586,am Clegg <sbc@chromium.org>, 2018-08-27 16:16:06 -0700, , objdump display element count section detail 899,,
467,3f574198cf65bca02f4eb657ed9652d006b6e690,en Smith <binjimin@gmail.com>, 2018-08-27 11:31:02 -0700, , add wasm strip tool strip custom section 902 lot tool could even helpful  fix issue 631,,
468,95f21b26ca861de6aabf4b2c3f0e824be643a07e,en Smith <binjimin@gmail.com>, 2018-08-24 20:32:43 -0700, , update testsuite 901,,
469,7bfcedf9aff5dfe0fb7d7f4e35d83f5301e8d4ef,att Witherspoon <32485495+spoonincode@users.noreply.github.com>, 2018-08-23 21:39:41 -0400, , reset executorâ thread start runfunction 900 end executor runfunction thread reset executor reused subsequent runfunction however case execution wonâ make far runfunction example hostmoduleâ callback throw exception move call threadâ reset start runfunction threadâ state always expected executor start function,,
470,71647d4f0e86a4c738f742f69f65b2cc41d4c004,aphael Graf <r@undefined.ch>, 2018-08-20 20:35:53 +0200,417, add manpages make install target 898 add manpages make install target related issue 417 allow overriding,,
471,ffe92e6c57fe0ee356c5ae98d0ef0ac6ecfdee27,aphael Graf <r@undefined.ch>, 2018-08-17 23:45:53 +0200,417, add minimal manpages mdoc formatted 896 resolve 417,,
472,93a7889b67448d11d3ccd8b0d5dd9cce2c85d993,enzn <41971413+penzn@users.noreply.github.com>, 2018-08-15 14:27:42 -0700, , update gtest avoid build failure 893 use commit right 87a4cdd introduced missing member initializer warning break build move away version using tr1 namespace disabled visual studio,,
473,33f758c6b43f52ea5d74cc9579c63e62de4ec33d,en Smith <binjimin@gmail.com>, 2018-08-15 14:26:00 -0700, , fix set_global immutable global invalid 895 spec test spectest interp run validator binary reader interp.cc different validator validator.cc necessarily since check make sense module linked instantiated fix issue 894,,
474,0d683b182258b1e04cbbcfb319f0107b6790df36,en Smith <binjimin@gmail.com>, 2018-08-14 11:23:02 -0700, , wasm2c add spec test fix update spec tests.py 891 update spec tests.py update test test wasm2c spec directory,,
475,69a7704723176ad656db8b79cd2146f456d36fbd,en Smith <binjimin@gmail.com>, 2018-08-14 01:21:17 -0700, , interp add rot13 interpreter example 890 demonstrates sharing memory webassembly module embedder,,
476,558bc1dd153da30d9e752988a16718565352e576,en Smith <binjimin@gmail.com>, 2018-08-13 12:00:00 -0700, , interp simplify host module import 889 importing host module used handled delegate powerful enough solution allow host import behavior make common case difficult clunky also assumed every imported function global etc needed newly created added environment though wasteful function incorrect mutable value like memory globals change simplifies common case providing set function hostmodule used add export e.g add type i32 type i32 type i32 addfunc generic interface function provided well allow automatically generating function needed currently used function like host.print wasm interp,,
477,221a39bb62a8984f894331aa5081957d332fd353,en Smith <binjimin@gmail.com>, 2018-08-07 08:49:49 -0700, , pas option structs const reference 888,,
478,ea279ce6f5e02411528344ddb1fdb227adf296e8,en Smith <binjimin@gmail.com>, 2018-08-06 11:53:01 -0700, , interp add test trapping host function 887 previous change fixed bug occurs host function trap change add test case host function called directly via call_indirect,,
479,299e7bc3f7fde726bb0120249f8418478bfa1bb1,aul D <36397285+poemm@users.noreply.github.com>, 2018-08-03 20:16:52 -0500, , handle trap host function 886,,
480,407ed441bcc2e316c02e407e81e7aed41000578f,en Smith <binjimin@gmail.com>, 2018-08-03 12:28:01 -0700, , update testsuite enable mut globals default 884 newest testsuite update enables mutable globals default match webassembly spec change change default wabt tool change flag disable mutable globals case need previous behavior flag likely removed future,,
481,7ce1b98bec018c13b5c8e3875688bed43f1f2935,aphael Graf <r@undefined.ch>, 2018-08-03 06:05:14 +0200,872, remove short option help 877 resolve 872,,
482,b877bb84316b511c260dfce4d3e8ca1964ec4917,lex Beregszaszi <alex@rtfs.hu>, 2018-07-30 21:38:00 +0100, , add build_tools option cmake 882 useful project importing wabt libwabt,,
483,a7f07b58f00c160ffd0fe8a73c945af4539a3eb1,en Smith <binji@chromium.org>, 2018-07-25 18:15:02 -0700, , appveyor another try getting deploys working,,
484,4a1f3d29923eb286398460c564f0058fdab52586,en Smith <binji@chromium.org>, 2018-07-25 16:36:44 -0700, , appveyor maybe fix deploy issue,,
485,fc02537d59b996b581beb5fc977f2bf015b4b307,en Smith <binjimin@gmail.com>, 2018-07-25 15:30:42 -0700, , emscripten use long instead int ssize_t 880 recently changed emscripten seems ssize_t used directly defining necessary msvc,,
486,847d112aaf9c5f402815caff6dbb70b814ba9469,en Smith <binjimin@gmail.com>, 2018-07-25 14:38:27 -0700, , fix binary release 879 create artifact packaged before_deploy happens afterward macos sha256 use python,,
487,dd9d51d631394eb4100a27b5341ac4a08f12a09f,en Smith <binjimin@gmail.com>, 2018-07-24 13:41:30 -0700, , binary release travis appveyor 876 fix 875 maybe,,
488,e5b3830f4c992c5a0b407dae3e9c8c4ee9a626b2,en Smith <binjimin@gmail.com>, 2018-06-25 15:44:42 -0700, , wasm2c fix bad realloc wasm impl 869 fix issue 868,,
489,c9d29f0a26bf2915288d8653258aa4fc89cc8d0f,en Smith <binjimin@gmail.com>, 2018-06-25 14:49:40 -0700, , fix typo 867 fix 866,,
490,b83e670d5287856d02377609d1ce11a66640f7f9,aphael Graf <r@undefined.ch>, 2018-06-18 20:05:59 +0200,864, relax check alloca 865 resolve 864,,
491,637e1fdb143aa180d57d87c09e604cb345d11020,en Smith <binjimin@gmail.com>, 2018-06-15 13:11:24 -0700, , fix integer overflow many local 862 maximum number local function,,
492,d23c99d036ab31f7de21bc4a90b651c4cfd4a356,en Smith <binjimin@gmail.com>, 2018-06-14 15:16:43 -0700, , add support multi value proposal 861 use enable multi value flag enable lot code already worked multi value needed remove restriction change modifying callback apis general e.g taking result type type stored negative value work nicely encoding inline function type used block signature always positive value remove blocksignature use instead typedef funcsignature allows explicit implicit type specification block signature allow keep value dropkeep interpreter instruction,,
493,ace6f17fae2ae6511e1c676217d76143ddf0f23d,horn <alex.horn@gmail.com>, 2018-06-06 07:52:12 -0700, , use named offset type clean pushrep doc 860,,
494,705a85b9ced0933a6ca9a2fb2924fc6c040d2167,arvin LÃ¶bel <loebel.marvin@gmail.com>, 2018-06-05 22:52:46 +0200,857, fix gcc error due werror class memaccess 858 close 857,,
495,909d44aa725dd8f2f8822c5eb62962f37dbc995e,en Smith <binjimin@gmail.com>, 2018-06-05 00:26:11 -0700, , better type check error locs end block 856 type checking occurs end block location generated last expression block confusing nested block e.g  block result i32 block nop end end  produce error line line store location end block either end closing parenthesis easier understand error occurred,,
496,29281771e9cd3896d8ee83c960b87d0d5bd3436d,en Smith <binjimin@gmail.com>, 2018-06-04 15:39:39 -0700, , fix emscripten build 855 correct use pre post wrap module function instance instead supposed use modularize still keep build almost asm.js switching wasm bit work need preload wasm binary module fix issue 853,,
497,a9829fff6a5345d6b7ae6cbbbca70c7c03f22fe0,am Clegg <sbc@chromium.org>, 2018-06-04 10:09:37 -0700, , objdump include elem segment offset printing table element 851,,
498,71ce746f1be4290b8d20449ff35b852b5cc374d2,am Clegg <sbc@chromium.org>, 2018-05-29 09:46:08 -0700, , add support new relocation type used dwarf section 846,,
499,499b3a3dadf349be553ff2ecc495dcaaeddb4414,am Clegg <sbc@chromium.org>, 2018-05-29 08:50:47 -0700, , revert appendix original form 848 designed boiler plate preceding paragraph make sense without part square bracket,,
500,409d61ef5d485ae2ce783968f290050840e87a22,en Smith <binjimin@gmail.com>, 2018-05-27 00:21:38 -0700, , update spec test rename grow current _memory 849 grow_memory memory.grow current_memory memory.size could smaller change took opportunity rename token type expr type callback function many sorted alphabetically resorted based new name,,
501,7a6308ac5d7e73f174aef9252bcb9f0644f4dac8,en Smith <binjimin@gmail.com>, 2018-05-22 10:13:34 -0700, , work wasm2c documentation 835 described use put near top doc added source generated file,,
502,b7a237ade0842ea0064e5d184acf1345958198d6,en Smith <binjimin@gmail.com>, 2018-05-21 16:28:27 -0700, , fix token enum string mismatch move token.def 845 fix issue 844,,
503,02a70956b27b030b933effdcd2829d7e2aad528e,am Clegg <sbc@chromium.org>, 2018-05-17 10:11:31 -0700, , remove old sub section type linking section 840,,
504,1fec702978b82945f5e6097f765d505f25f30097,en Smith <binjimin@gmail.com>, 2018-05-16 19:21:19 -0700, , print warning ignored custom section error 843 previous message said error make look like output created change message warning instead error handling code pretty ugly use refactor would much larger change,,
505,dd7663d78bf483308cd8d70d114748321f2cd61f,am Clegg <sbc@chromium.org>, 2018-05-14 15:30:37 -0700, , wasm objdump clearly distinguish undefined symbol symbol table 839,,
506,17352a0aa4580ddf783cb0d9133ba5af9239b3f0,am Clegg <sbc@chromium.org>, 2018-05-14 15:16:20 -0700, , fix broken version check metadata section 841,,
507,1312606aeef8990100ffbc54f3bf5438fa1cac17,en Smith <binjimin@gmail.com>, 2018-05-14 12:09:40 -0700, , fix bug ignore custom section error flag 837 flag set would still stop reading wasm file even ignore custom section error flag set,,
508,42f3b934279e1b43c9e02ab1523161fd27974300,en Smith <binjimin@gmail.com>, 2018-05-09 15:10:10 -0700, , add documentation wasm2c 803 also remove seem used,,
509,9a31b42affa93298c66374ff2540d8c5e217a15d,en Smith <binjimin@gmail.com>, 2018-05-08 16:17:16 -0700, , display module name wasm objdump 834 also put around name function local,,
510,9890d45ff4e04a89ba53137d5f569c5038df8d27,en Smith <binjimin@gmail.com>, 2018-05-07 13:56:13 -0700,378, add flag ignore error custom section 833 wasm engine fails parse custom section must error wabt often want continue custom section parsed still may useful able continue change add new flag ignore custom section error wasm2wat wasm validate partially parse custom section error could lead strange behavior partially completed data structure generally safe see issue 378 discussion pull 830 info,,
511,4228d2f1396c98b54c9c342505304eeb36447ac6,izhengxing <unixhaha@gmail.com>, 2018-05-07 12:08:12 -0700, , fix one bug converting v128.shuffle wasm format wat format 832 converting v128.shuffle wasm format wat format char must removed const value v128.shuffle instruction expects valid simd v128 const format i.e 0xxxx 0xxxx 0xxxx 0xxxx int32 int32 int32 int32 otherwise encounter error converting v128.shuffle wat format back wasm format,,
512,95deff19c7a512699fe0529e21c2e7b6c4d2f740,am Clegg <sbc@chromium.org>, 2018-05-03 13:28:33 -0700, , refer target section index relocation section 830 also add parsing linking metadata version,,
513,a0bdeb720a1cdcff2b2045aa0a0e0e33a5a5e8a9,en Smith <binjimin@gmail.com>, 2018-05-01 10:55:45 -0700, , read write module name name section 831,,
514,2ec0d8536daedca867b188d88c47e45cd3b38c64,aniel Wirtz <dcode@dcode.io>, 2018-04-21 03:38:10 +0200, , add useful flag building libwabt.js 829,,
515,14b478f0589f608056cbd5f8962585e81e835e66,en Smith <binjimin@gmail.com>, 2018-04-10 10:16:07 -0700, , allow local decl count 827 also clean localtypes bit ensure decls_ never count fix issue 826. thanks finding opticaliqlusion,,
516,c1896e079897830b4e8c8f9c15dea6bd41ffc28c,en Smith <binjimin@gmail.com>, 2018-04-06 10:40:13 -0700, , error running wasm2c enable flag 825 none feature flag currently supported fix issue 823,,
517,b0193edc38f1ecc12b80c6fa408f7c0d78fb0202,en Smith <binjimin@gmail.com>, 2018-04-04 21:43:20 -0700, , allow v128 type without simd flag 824 see issue 823,,
518,2e44cbbd9cabe19d9dfab50c3950c5a4ff0ea4df,en Smith <binjimin@gmail.com>, 2018-03-28 16:04:25 -0700,760, use readcount function binaryreader 821 see http github.com webassembly wabt issue 760 info assume count precedes list item least one byte contained section result front check prevent allocation technique spec interpreter,,
519,8b192e6a441ad22207d95486ba5b34030188c455,en Smith <binjimin@gmail.com>, 2018-03-28 13:43:12 -0700, , store local type type count pair 820 since binary format store local type count pair easy generate function huge number local text format way compress resulting file huge however binary file error would useful able catch without allocating huge number local store local type count pair well provide accessor function getting number local type type particular local index etc fix issue 819,,
520,90fb9eefa9c2f36481e575da591e9ca521bf724f,ichael Ferris <mike.ferris@hotmail.com>, 2018-03-22 17:32:26 -0700, , window remove _check_return_ annotation 817 remove _check_return_ annotation window annotation must prefix function suffix breaking code analysis binary reader.cc find way reconcile clang gcc msvc use prefix suffix annotation furthermore used lot project anyway,,
521,802f56ca2d1e3812796941e027e8ef97b9753130,en Smith <binjimin@gmail.com>, 2018-03-21 16:25:06 -0700, , add simd test logging tracing opcodes 816 also fix tracing .splat opcodes,,
522,ab9e0b5539690b353ca79648c2ca491f00d80841,en Smith <binjimin@gmail.com>, 2018-03-20 12:12:12 -0700, , separate wasm rt.h wasm impl 813 make easier use outside running wasm2c spec test,,
523,565d0b47c229ce5b29ce685c65839a4aa8f404da,en Smith <binji@chromium.org>, 2018-03-20 03:00:52 -0700, , fix typo introduced previous commit,,
524,7badabdac38a7fc7e47a88f11c523ca8b4fd6c1b,en Smith <binji@chromium.org>, 2018-03-19 22:28:22 -0700, , realign opcode table non functional change,,
525,000b062de17637814c46ef9e8d15f83dd268fc70,en Smith <binjimin@gmail.com>, 2018-03-16 18:02:26 -0700, , update testsuite 815,,
526,3f0c19fad78dd4ce8b4dd5c37cb418253dc18254,en Smith <binjimin@gmail.com>, 2018-03-16 16:49:31 -0700, , run clang format file 814 also fixed use brace noticed non functional change,,
527,142553c3be3d0c5161060ef784d0573c53af63c1,am Clegg <sbc@chromium.org>, 2018-03-16 12:31:09 -0700, , objdump report elem count elem segment 812,,
528,130e929db7d2b786ab9925bc09448e470c566139,en Smith <binjimin@gmail.com>, 2018-03-16 11:37:37 -0700, , small cleanup simd extract replace lane 810 also add typecheck test,,
529,bff679779509ab1bb0c923bc4e67cf88eaadfa42,izhengxing <unixhaha@gmail.com>, 2018-03-15 20:46:46 -0700, , simd v8x16.shuffle implementation 811,,
530,e31a5623815a545e57db3eb0ec3988025b1b0f0e,izhengxing <unixhaha@gmail.com>, 2018-03-15 16:31:08 -0700, , simd replace lane instruction implementation 809 including      ,,
531,3510ced20ab6242d11a7d1ab9a1b9f23dae9fb5d,en Smith <binjimin@gmail.com>, 2018-03-15 14:20:43 -0700, , print local objdump disassembly 808 fix issue 807,,
532,32e89690fa59500602ebf6e787b7667e78b666a2,izhengxing <unixhaha@gmail.com>, 2018-03-15 11:22:41 -0700, , simd remaining extract lane instruction implementation 806 including       ,,
533,0652fa7e6cd1a8413ad5088d005865f48905de7f,izhengxing <unixhaha@gmail.com>, 2018-03-13 11:18:34 -0700, , simd instruction implementation 802 including necessary code simd lane accessing implementation,,
534,ba6b56615d9a70da1a28c0d749f586405f2c7e6b,izhengxing <unixhaha@gmail.com>, 2018-03-09 00:36:40 -0800, , simd v128.load v128.store implementation 801,,
535,f2ba5acb90cb8aec1688cb695382a0ff663c4391,am Clegg <sbc@chromium.org>, 2018-03-08 19:02:38 -0800, , improve output object symbol table 800,,
536,c717930f221eb936ff4874e9f432c49dee0084c3,izhengxing <unixhaha@gmail.com>, 2018-03-07 11:23:27 -0800, , simd floating point integer saturation implementation 797 including i32x4.trunc_s f32x4 sat i32x4.trunc_u f32x4 sat i64x2.trunc_s f64x2 sat i64x2.trunc_u f64x2 sat,,
537,27cbf3e99338d877d9d460de392a559b3b6238b0,izhengxing <unixhaha@gmail.com>, 2018-03-06 23:21:54 -0800, , simd integer floating point conversion implementation 795 including f32x4.convert_s i32x4 f32x4.convert_u i32x4 f64x2.convert_s i64x2 f64x2.convert_u i64x2,,
538,b449997b18c4bf44aa9f954d4419b9ada4017d15,am Clegg <sbc@chromium.org>, 2018-03-06 19:38:07 -0800, , generate symbol table creating relocation binary writer.cc 794,,
539,39193c96e4ba05393e045548727fca616a9c47ad,am Clegg <sbc@chromium.org>, 2018-03-06 19:15:03 -0800, , objdump use export name function one exists 796,,
540,527b1d973d7a82a391a694757a5aa5b911fa30a7,am Clegg <sbc@chromium.org>, 2018-03-05 22:00:44 -0800, , fix typo logging debug string nfc,,
541,5ce26582725dcb9c37c14214a04913787c8fbcfb,am Clegg <sbc@chromium.org>, 2018-03-05 21:56:30 -0800, , use early return 788 also add missing brace,,
542,4d6106c3a510c7e2986324cd3493c6694d3ace3a,am Clegg <sbc@chromium.org>, 2018-03-05 21:56:10 -0800, , remove wasm link tool 793 superseded lld longer bandwidth maintain separate linker,,
543,64adcb79c41213304f3dba2256fe7eb5659d4399,en Smith <binjimin@gmail.com>, 2018-03-05 21:42:11 -0800, , always set expr loc value binary reader 791 done error reporting print location useful,,
544,c3ccb00fba17b2d78a561db0113926702132f2b1,am Clegg <sbc@chromium.org>, 2018-03-05 21:27:20 -0800, , write linking metadata relocation 792 relocation refer symbol table entry linking.md spec soon updated reflect requirement,,
545,1dd69c48cd8c9f1c0d8e466f7cb4b712687529e6,am Clegg <sbc@chromium.org>, 2018-03-05 17:14:15 -0800, , refactor binarywriter module written member 790 already bunch module specific member class already single use anyway,,
546,d40189b2e6a4a797994b980c3048504a612907bb,izhengxing <unixhaha@gmail.com>, 2018-03-05 15:58:08 -0800, , simd f32x4 f64x2 .sqrt implementation 789,,
547,e7934efa2eafb9138f0154565452b4f67e7b4f89,am Clegg <sbc@chromium.org>, 2018-03-05 14:03:02 -0800, , add support new symbol table format 769,,
548,c3ead8a2a892ca5a1cf7a9bb5781ae6dc1076aad,izhengxing <unixhaha@gmail.com>, 2018-03-05 10:22:25 -0800, , simd floating point div mul implementation 787 including f32x4.div f64x2.div f32x4.mul f64x2.mul,,
549,1962691f08e4ff71d4a3de6ce38ee532346400b3,izhengxing <unixhaha@gmail.com>, 2018-03-03 20:14:51 -0800, , simd floating point add sub implementation 786 including f32x4.add f64x2.add f32x4.sub f64x2.sub,,
550,c0e3c8ae30236582060dfa830bf405b209d9e149,en Smith <binjimin@gmail.com>, 2018-03-02 17:48:10 -0800, , wip support level1 exception spec 773 implemented parsing try if_except throw rethrow validation binary text output still missing except_ref local interpreter implementation,,
551,2c591c592b5e1480e4d69093dd051348c1ec5f0e,izhengxing <unixhaha@gmail.com>, 2018-03-02 11:28:07 -0800, , simd floating point min max implementation 784 including f32x4.min f64x2.min f32x4.max f64x2.max,,
552,5978d7bfddb5b7c52906005f9a4a092e9a3a1ad1,izhengxing <unixhaha@gmail.com>, 2018-03-01 17:36:38 -0800, , simd f32x4 f64x2 .abs implementation 783,,
553,8d22b5ac0a6c3c704fd10c91714699a1d6ec9f93,am Clegg <sbc@chromium.org>, 2018-03-01 08:05:13 -0800, , match value type enum spec value read write uint8_t 782 seems match spec value specified single type terminal see http spec core binary types.html,,
554,1d76bb63beba5de424b660187d153b06087e763f,en Smith <binjimin@gmail.com>, 2018-02-28 19:23:44 -0800, , update testsuite 780 fix edge case elem segment bound checking fix bound checking importing spectest table,,
555,c40f1b51714e2191f9dec1c3cfbaf9e3d536e561,am Clegg <sbc@chromium.org>, 2018-02-28 14:47:19 -0800, , use uint8 reading import kind 781 match spec existing code already exists file export kind,,
556,3c356d1291b2896c544cef12e94eefad885ad4a9,izhengxing <unixhaha@gmail.com>, 2018-02-28 11:23:46 -0800, , simd f32x4 f64x2 .neg implementation 779,,
557,6851084ddbe7d592020bedd5f5cec18f04fc897c,izhengxing <unixhaha@gmail.com>, 2018-02-28 09:38:21 -0800, , simd comparison greater equal instruction implementation 778 including i8x16.ge_s i8x16_ge_u i16x8.ge_s i16x8_ge_u i32x4.ge_s i32x4_ge_u f32x4.ge f64x2.ge,,
558,f3766f9eb9987a5a8f190c5741b0e9220adff520,en Smith <binjimin@gmail.com>, 2018-02-27 23:24:39 -0800, , fix token name order 776 wait wake wrong place also moved ternary list alphabetic order,,
559,d3b58431583a29888baff2a4aa8acdba3d05c5d1,en Smith <binjimin@gmail.com>, 2018-02-27 22:30:17 -0800, , use gettypename binary reader objdump.cc 775,,
560,f9b6995dcc23ffcfc157ed15c3c3df11c6d6166b,en Smith <binjimin@gmail.com>, 2018-02-27 21:20:36 -0800, , fix run tests.py roundtrip test fails 774,,
561,654a23c3a5edd26a9e2bec177042b49c1fee679d,izhengxing <unixhaha@gmail.com>, 2018-02-27 10:51:09 -0800, , simd comparison greater instruction implementation 772 including i8x16.gt_s i8x16_gt_u i16x8.gt_s i16x8_gt_u i32x4.gt_s i32x4_gt_u f32x4.gt f64x2.gt,,
562,a3f72c9a04f2eb1aca9236fcea87fc80ebf5a7eb,izhengxing <unixhaha@gmail.com>, 2018-02-26 11:52:01 -0800, , simd comparison equal instruction implementation 771 including i8x16.le_s i8x16_le_u i16x8.le_s i16x8_le_u i32x4.le_s i32x4_le_u f32x4.le f64x2.le,,
563,701ca3e4208043f32cb9da23b9675a86cce2fecf,izhengxing <unixhaha@gmail.com>, 2018-02-23 11:48:06 -0800, , simd comparison instruction implementation 770 including i8x16.lt_s i8x16_lt_u i16x8.lt_s i16x8_lt_u i32x4.lt_s i32x4_lt_u f32x4.lt f64x2.lt,,
564,2747d60ba4d2e72aa9da2a5ae76b2527afe86ca6,en Smith <binjimin@gmail.com>, 2018-02-21 18:26:43 -0800, , use exprvisitor watwriter 768 since exprvisitor non recursive allow module deeply nested block written see issue 752,,
565,022ad4ab733f8bff8cf2d164effff793939e062e,izhengxing <unixhaha@gmail.com>, 2018-02-21 14:54:01 -0800, , simd comparison non equality instruction implementation 767 including i8x16 i16x8 i32x4 f32x4 f64x2 .ne,,
566,cbfa1b2f199dc5219b870c3f8bee67031bd65c33,en Smith <binjimin@gmail.com>, 2018-02-21 11:58:02 -0800, , rewrite exprvisitor non recursive 765 help wasm module deeply nested block see issue 752,,
567,8c799ef5afebc881326daa3ce54551daf48a542b,izhengxing <unixhaha@gmail.com>, 2018-02-21 09:28:58 -0800, , simd comparison equality instruction implementation 766 including i8x16 i16x8 i32x4 f32x4 f64x2 .eq,,
568,3e12747da52d5765a341605931b2a2874d3c3448,izhengxing <unixhaha@gmail.com>, 2018-02-21 00:09:33 -0800, , simd boolean horizontal reduction implementation 763 including i8x16 i16x8 i32x4 i64x2 .any_true i8x16 i16x8 i32x4 i64x2 .all_true,,
569,b99699fe017d4f6865f902c1320fcc6d97257689,en Smith <binjimin@gmail.com>, 2018-02-20 22:25:45 -0800, , use exprvisitor validator 764 make easier use non recursive visiting strategy reused elsewhere,,
570,68a134ceddb750de7fc2cee29be726c779e4838c,izhengxing <unixhaha@gmail.com>, 2018-02-19 10:59:22 -0800, , simd v128.bitselect instruction implementation 759,,
571,7b196f2f743d05f56dfec2b8f005e3f74b8ad2bc,en Smith <binjimin@gmail.com>, 2018-02-15 19:23:15 -0800, , add try catch around call reserve 761 exception enabled via cmake with_exceptions option,,
572,d77796e39c0fc15a2710faa76fea126bec40b206,izhengxing <unixhaha@gmail.com>, 2018-02-14 10:08:02 -0800, , simd bitwise logic instruction implementation 758 including v128.and v128.or v128.xor v128.not,,
573,6589cbb48abe0d1ecaf14b59b22bfbb70f62a77a,en Smith <binjimin@gmail.com>, 2018-02-13 22:08:47 -0800, , update testsuite 757 spectest module function globals longer overloaded implementation spectest interp spec wasm2c prefix.c changed well,,
574,0e4a9d04c535d2b9dc9a00fbe95c2f941d5677e1,izhengxing <unixhaha@gmail.com>, 2018-02-13 19:11:41 -0800, , simd right shift scalar instruction implementation 755 including i8x16.shr_s i8x16.shr_u i16x8.shr_s i16x8.shr_u i32x4.shr_s i32x4.shr_u i64x2.shr_s i64x2.shr_u,,
575,b20496162dfa5d8f847f3b1608373dd70478af9e,en Smith <binjimin@gmail.com>, 2018-02-13 11:37:18 -0800, , allow memory shared default 756 shared memory allowed enable thread flag,,
576,bfa5e1cc2e3b1fd0ff733fb4b5b2fffd0a878fe3,izhengxing <unixhaha@gmail.com>, 2018-02-12 22:06:03 -0800, , simd i16x8 i32x4 i64x2 shl implementation 751,,
577,275afb954293e0e5241e3984591cdb6962d8ab2d,en Smith <binjimin@gmail.com>, 2018-02-11 10:30:55 -0800, , fix segfault wat2wasm loading invalid file 753 see issue 748,,
578,5eb90aa61bd42ff54a5415aaf1de9bca99cd6fcd,en Smith <binjimin@gmail.com>, 2018-02-11 10:30:27 -0800, , use stream api 744 writes json file associated module file either .wasm .wat file previous api wrote directly filesystem useful allow caller specify write output instead function provides callback take filename parameter return stream write also convenience function write result vector filename memorystream pair,,
579,fa263f9850d08770a1fe194a4063306ca6c39427,izhengxing <unixhaha@gmail.com>, 2018-02-07 14:45:27 -0800, , simd i8x16.shl implementation 750,,
580,a74072b2163ca20645e4a313636507cb3984f5fb,izhengxing <unixhaha@gmail.com>, 2018-02-06 19:30:53 -0800, , simd saturating sub implementation 747,,
581,f0b06778ce46b26afd3f0b646f79726fdbdb1845,en Smith <binjimin@gmail.com>, 2018-01-31 10:13:28 -0800, , update readme.md wasm link deprecation,,
582,0a57e72bf5dc4f0bbf1eec328023d44d2d3eaac3,en Smith <binjimin@gmail.com>, 2018-01-30 14:11:34 -0800, , replace run wasm link.py run command 742 interp test modifies spectest json running complex turn run command wasm link deprecated though imo fine remove test,,
583,420323029666c8eb9366123aa415197f47778efa,lon Zakai <alonzakai@gmail.com>, 2018-01-27 00:26:15 -0800, , verify emscripten build compiles travis 740,,
584,6eb372ed94eb2db8df9a2296fc258393cd6631a3,en Smith <binjimin@gmail.com>, 2018-01-26 18:11:47 -0800, , replace run gen spec js.py run command 741 doe remove functionality ability run directly specified engine actually tested anywhere imo better remove simplicity sake,,
585,ea7b0224275f4e3e93f972d39856afaf08cd953b,en Smith <binjimin@gmail.com>, 2018-01-26 14:24:21 -0800, , replace run gen wasm .py run command 738 add new tool run gen wasm bad run gen wasm assumes wasm2wat wasm validate fail error,,
586,58040bf57d008fc246ea567396c834268dcf9324,aniel Wirtz <dcode@dcode.io>, 2018-01-26 23:13:37 +0100, , fix building libwabt.js latest emscripten 739,,
587,fe1f9ebea915d8bbb2361b12f8ec5f632f03f7a5,cefoxen <icefoxen@gmail.com>, 2018-01-26 16:35:05 -0500, , creating emscripten exported binding wast handling function 734 creating emscripten exported binding wast handling function added emscripten binding fixed compile error,,
588,36d47fbbb4acea12b6f985f259705bcec54e551e,en Smith <binjimin@gmail.com>, 2018-01-26 11:31:38 -0800, , support different returncodes per command test 737 command specify expected returncode returncode match command run command run test change also requires error directive specified run command since added command way args,,
589,a2ac28e0dd155ee5974f492a01a4c46bd45e3398,en Smith <binjimin@gmail.com>, 2018-01-25 17:13:36 -0800, , fix allow test empty command list 736 since wat2wasm longer default tool must specified test without run tool directive previous removed default fix test directive,,
590,77eb57115bfec040de8486ea337012a2e1c2229d,en Smith <binjimin@gmail.com>, 2018-01-25 15:47:17 -0800, , wat2wasm longer default tool test 735 tool must specified explicitly,,
591,207be26047494412c54a7c7a36ace690e6da6a7e,en Smith <binjimin@gmail.com>, 2018-01-24 17:31:48 -0800, , replace run opcodecnt.py run command 733,,
592,7360bc9536203d949b7f11872e51252ae04cb366,en Smith <binjimin@gmail.com>, 2018-01-24 16:27:28 -0800, , remove run objdump.py replace run cmds 732 remove run objdump.py replace run cmds introduces two new tool test run objdump gen wasm run objdump wasm file generated gen wasm.py run objdump spec run objdump wasm file generated wast2json requires test specify file manually temp_file s.0.wasm temp_file s.1.wasm etc gen_wasm_py added new run variable well call expanding variable,,
593,89e86d1c68df2a9308b299643070535635eb5cf9,am Clegg <sbc@chromium.org>, 2018-01-23 16:56:42 -0800, , print symbol name dumping table relocation 731 relocation point function index space print name function,,
594,8bcd84f39737a8f26da1dec33a80da7c7ee4e390,en Smith <binjimin@gmail.com>, 2018-01-21 21:59:43 -0800, , remove run interp.py use run command instead 730 many test run python script essentially python equivalent shell script require tedious maintenance whenever tool change significant amount copied code remove run interp.py relatively simple initial example,,
595,6ce14be1c40144dfe109e2bb4dd6e8bf2a459da5,en Smith <binjimin@gmail.com>, 2018-01-21 17:41:25 -0800, , test run command optional args 729 also fix bug printing last command failed,,
596,337a96618479dc7f88fa3561d34336650d3de2dd,izhengxing <unixhaha@gmail.com>, 2018-01-21 16:16:54 -0800, , simd saturating add implementation 727,,
597,c1270776b2104e3c50c5c39b1dfb633c42b1ce49,en Smith <binjimin@gmail.com>, 2018-01-21 10:26:48 -0800, , rename run args 728 suggested http github.com webassembly wabt pull 725,,
598,2d00abf7ab07422dc16ae023325adafac1c639ee,en Smith <binjimin@gmail.com>, 2018-01-19 09:59:20 -0800, , allow multiple command per test test runner 725 allows test specify one command run order long previous command return errorcode example  exe command1 flag foo stuff exe command2 flag thing  goal remove many test wrapper script e.g test run interp test run objdump etc functionality represented multiple command instead wrapped tool definition,,
599,c3d1654f7db0e1d018ea69f9584a3466cfbca488,izhengxing <unixhaha@gmail.com>, 2018-01-19 09:58:42 -0800, , fix simd i8x16.neg i16x8.neg i32x4.neg i64x2.neg implementation 723 726 simd neg unary instruction wrong place disassemble interp.cc fix move right place,,
600,55639eb12eb209c671212b9252314aa5b08d34db,izhengxing <unixhaha@gmail.com>, 2018-01-18 17:29:46 -0800, , simd i8x16.neg i16x8.neg i32x4.neg i64x2.neg implementation 723,,
601,25140d740d55bd5c2103e4032a37a6f4ca94d4c0,en Smith <binjimin@gmail.com>, 2018-01-18 12:56:55 -0800, , add feature flag sign ext. mutable globals 722 also reorder flag alphabetical order,,
602,23163d0967768a384c9eb7ac8d29cf2ab369be46,izhengxing <unixhaha@gmail.com>, 2018-01-18 11:35:23 -0800, , simd i8x16.mul i16x8.mul i32x4.mul implementation 721,,
603,a1d928a7deb566430d8fdf5e79b61a66ea805e26,izhengxing <unixhaha@gmail.com>, 2018-01-17 17:09:16 -0800, , simd i8x16.sub i16x8.sub i32x4.sub i64x2.sub implementation 720,,
604,790e1477925481bc3a77fdb8630916a027c39002,en Smith <binjimin@gmail.com>, 2018-01-17 17:09:06 -0800, , move test hexfloat.cc src test hexfloat.cc 719 hexfloat test first test added bit different gtest based test slow test parsing writing hexfloats bit float exhausitvely change move test src directory gtest based test live separate faster test included wabt unittests,,
605,e9e5685e6f3cb0ee8507d0e333a608f4c2b63374,en Smith <binjimin@gmail.com>, 2018-01-17 17:08:53 -0800, , use section gen wasm test subsection 718 easier read handle byte length automatically,,
606,462bd5fc7d098b2b3fdc15d7f5432ed670a8a694,en Smith <binjimin@gmail.com>, 2018-01-17 12:27:52 -0800, , check name section known section 717,,
607,1aec263a2c90a0b2e22a6765c18ef0fcde44fb2c,izhengxing <unixhaha@gmail.com>, 2018-01-16 11:38:53 -0800, , simd i16x8.add i32x4.add i64x2.add implementation 714,,
608,afc3f3a84d138b64e5d259ed61c70c51d4d0abe7,en Smith <binjimin@gmail.com>, 2018-01-10 16:32:10 -0800, , use template generating wasm2c source 712 simple template syntax without advanced feature  top ... bottom ...  template generate output two string  const char section_name top ... ... const char section_name bottom ... ...  update generated file run make update wasm2c,,
609,ed1e3977f936ac4056a28afd0b5136ba054762b2,en Smith <binjimin@gmail.com>, 2018-01-10 16:08:43 -0800, , use default clang install travis ubsan 713 use default clang install travis ubsan travis image updated recently blog say dec 12th update clang 5.0.0 fix ubsan unsigned overflow warning size_ zero size_t adding begin iterator trigger overflow warning even though fixed adding,,
610,75b5a6a134c372eb05aed30cd11df0d1599ba987,izhengxing <unixhaha@gmail.com>, 2018-01-10 09:45:09 -0800, , simd i8x16.add implementation 706,,
611,911127d772e72319aa034b2aed8223ca63305aef,en Smith <binjimin@gmail.com>, 2018-01-09 19:09:45 -0800, , fix run tests.py stdin_file used time 711 test run directory output test run parallel without clobbering result since added wasm2c spec .wast file used twice using output directory would often work properly full run flaky since write .json .wasm file name fix give directory always using directory name test,,
612,6fc756c4f1a5b7c0209c5dad0c0ec51b3b504df7,en Smith <binjimin@gmail.com>, 2018-01-08 17:35:01 -0800, , add wasm2c tool 710 add wasm2c new tool read .wasm file generates source file accompanying header file output currently support gcc clang compiler since builtins functionality resulting code standalone runtime function must provided well pointer import runtime symbol must provided follows void wasm_rt_trap wasm_rt_trap_t code called webassembly code trap function must return u32 u32 param_count u32 result_count ... register function type given signature function must check whether signature already registered return original index void u32 initial u32 max allocate memory buffer given memory object given number page memory must zeroed returning u32 u32 delta grow memory given number page allocation fails new page size larger maximum return otherwise return previous number page newly allocated memory must zeroed void wasm_rt_table_t u32 initial u32 max allocate buffer given table object buffer must zeroed returning u32 symbol track current call stack depth value exceeds trap occurs value default 500 redefined example implementation found spec wasm2c prefix.c functionality webassembly mvp supported generated code pass core spec test new test tool called run spec wasm2c.py run following wast2json convert spec test json wasm file wasm2c convert wasm source header compiler default compile link source file including test runner spec wasm2c prefix.c finally resulting executable produce output,,
613,1f735e8f5125f84abba2a91d4f44bc8ee30544a8,en Smith <binjimin@gmail.com>, 2018-01-07 13:27:03 -0800, , always write expected action type .json output 709 useful determine signature action function without impossible tell difference function signature two function func param i32 result i32 ... func param i32 ... parameter list result discarded invoke i32.const invoke i32.const,,
614,2a0b6920d6b41ef7c8190573a5f4a7503c441afd,en Smith <binjimin@gmail.com>, 2018-01-07 12:29:35 -0800, , apply global name imported globals data elem 708,,
615,d957549afd9c25c4d02ddb582dc838eca16b2732,olin Eberhardt <colin.eberhardt@gmail.com>, 2018-01-07 19:10:35 +0000, , fixed broken link 707,,
616,ccfa5c5184a617188ea3126fbb467d8b193fe650,am Clegg <sbc@chromium.org>, 2018-01-02 11:08:23 -0800, , add support init function linking metadata 699 also remove support dataalignment removed spec linking.md output datasize non zero,,
617,7fcc96d15444346b244500fc205a677ca2d745d0,en Smith <binjimin@gmail.com>, 2018-01-02 11:07:37 -0800, , add watwriter option inline import 703 add watwriter option inline import inline import flexible regular import since combined inline export example  func export baz import foo bar param i32  remove unused overload,,
618,0325ab2170fdf7c6ec0896d3f26c175827f2b9ce,izhengxing <unixhaha@gmail.com>, 2017-12-26 14:14:14 -0800, , simd i16x8.splat i32x4.splat i64x2.splat f32x4.splat f64x2.splat insâ 705,,
619,e59f0aaf6b404d13f9ca7b48a21475b0df662a8f,izhengxing <unixhaha@gmail.com>, 2017-12-25 14:05:24 -0800, , simd i8x16.splat instruction implementation 704,,
620,f835db8cfb418bb19dd61a10dbe49e1131b664bc,en Smith <binjimin@gmail.com>, 2017-12-19 16:27:49 -0800, , fix bug writing inline export import 700 import ... syntax allow inline export wat writer assumed export would written inline export would omitted fix writing export normally  module import foo bar func export baz func   also possible fix writing import inline currently supported .wat writer  module func export baz import foo bar  ,,
621,59341472102801d2ccb9d7d955af46729e6cd2ae,izhengxing <unixhaha@gmail.com>, 2017-12-19 16:27:34 -0800, , wabt simd v128.const instruction part 702 sequential wabt simd v128.const instruction initial implement wasm interp objdump validate function v128.const,,
622,73341ef674cb5df3aaa67dcb5bbfd7db52e3c483,en Smith <binjimin@gmail.com>, 2017-12-19 14:00:38 -0800, , run wabt unittests coverage script 701,,
623,77b67896232f3f13447205f4aefdd196b8d6656d,izhengxing <unixhaha@gmail.com>, 2017-12-19 10:16:35 -0800, , add simd suppor run interp.py run objdump.py run roundtrip.py 698 currently run interp.py recongize enable simd flag test file add simd suppor run interp.py run objdump.py run roundtrip.py,,
624,49d62e7baae8c720d7db9542d3cb7ebbdbae502e,am Clegg <sbc@chromium.org>, 2017-12-18 12:09:39 -0800, , rename appveyor.yml .appveyor.yml 696 line config file top level .travis.yml supported alternative name appveyor.yml,,
625,1e74bf1994ee9204130c99031575a94e6b9ccade,am Clegg <sbc@chromium.org>, 2017-12-18 11:27:26 -0800, , fix coverage build clang 697,,
626,096f7ab84749b5725a5780671111434c34cc17ea,izhengxing <unixhaha@gmail.com>, 2017-12-15 17:49:15 -0800, , wabt simd v128.const instruction initial 677 initial wabt simd support implement v128.const instruction construct simd 128 bit const expected wat format v128.const i32 0x00000000 0x11111111 0x22222222 0x33333333 simplify implement wat2wasm wasm2wat function following implement full function wabt interp objdump logging etc ....,,
627,9548f63dd04c735a078c40340a3f3ed81323e557,en Smith <binjimin@gmail.com>, 2017-12-15 12:11:11 -0800, , add simd feature flag 694,,
628,be94d802c076c08d8f102eb4c6d3376dcc77c232,en Smith <binjimin@gmail.com>, 2017-12-12 00:24:25 -0800, , update demo link readme.md,,
629,aae5a4b74e0544cef627b47004df33c5ae8d6a5d,en Smith <binji@chromium.org>, 2017-12-12 00:13:56 -0800, , fix emscripten build update libwabt.js libwabt.js old build fixed bug e.g infinite loop parser,,
630,f469eb75b2fa38fc67c2d0f2e0515f2527df8f19,en Smith <binjimin@gmail.com>, 2017-12-11 16:08:04 -0800, , add deprecation warning wasm link 692,,
631,72e7fd34dc143f2ea0d5f134834e57a41b29ab77,en Smith <binjimin@gmail.com>, 2017-12-09 15:29:26 -0800, , cleanup always use brace 691,,
632,a8306f4e1c2d995aab30514cac3219e449325469,en Smith <binjimin@gmail.com>, 2017-12-07 11:12:03 -0800, , import export mutable globals thread enabled 690,,
633,cfa390be92ba948b431da7f626c39b556723e336,en Smith <binjimin@gmail.com>, 2017-12-06 00:44:10 -0800, , replace invalid character wat writer 687 add way express name valid binary format text format better able produce valid wat file see issue 685,,
634,30ceb057c1311321388f327a87b0eb6774641320,am Clegg <sbc@chromium.org>, 2017-12-05 19:10:05 -0800, , refactor code write section header 689,,
635,32454f4e0ca2b277535b6312fce55cc51e2a9b91,am Clegg <sbc@chromium.org>, 2017-12-05 17:02:56 -0800, , always create linking section write relocatable wasm file 688,,
636,20452b9ef4621dec018670ee8e7190537720841e,mitriy Tsvettsikh <dmitrycvet@gmail.com>, 2017-12-04 02:08:37 +0500, , add missing check libwabt.js 686,,
637,51f1f3610eb56bad9bf720359c743c499c27feda,am Clegg <sbc@chromium.org>, 2017-12-02 15:19:16 -0800, , wat2wasm always write output file 682 involves deriving output filename input filename none otherwise specified also split filename handling utility add unittests ,,
638,b0d76dac6eb3e08ce14ada96cffb747356c95247,am Clegg <sbc@chromium.org>, 2017-12-02 15:18:55 -0800, , make use string_view const char 684,,
639,1d5f578380504c40710c56d0c56ed3059605633d,am Clegg <sbc@chromium.org>, 2017-12-01 15:53:02 -0800, , remove duplication run tests.py 683,,
640,b3a971b43a0a6fa4d15decb6d55a192b00723fa8,am Clegg <sbc@chromium.org>, 2017-11-28 16:46:41 -0800, , fix ubsan build remove workaround favor ubsan.blacklist 678,,
641,cd5a893ccc93628569d39c36e4366c5dc5d48068,irko Sertic <mirko.sertic@web.de>, 2017-11-23 18:13:42 +0100,675, 675 enable option wat2wasm online demo 676 enabling option allows better debugging latest firefox chrome,,
642,a630c95d472dc1615640bfe7d33849d45631778c,en Smith <binjimin@gmail.com>, 2017-11-21 14:51:34 -0800, , rename wake wait atomic wake wait 672 recently changed spec,,
643,49b7984544ddaf14d5e2f1ad9115dad7e9a2b299,en Smith <binjimin@gmail.com>, 2017-11-14 09:14:52 -0800, , fix error message inconsistent br_table label 671 refactored type checker produce nicer error message forgot handle error  block block result f32 i32.const br_table ...  label signature inconsistent invalid type checker returning proper result error printing error message fix 670,,
644,76affd0d17e3f0ec9e86b960256e3f6d21c62062,en Smith <binjimin@gmail.com>, 2017-11-13 18:54:03 -0800, , use .wat extension wast2json generated file 669 fix 668,,
645,500b617b1c8ea88a2cf46f60205071da9c7569bc,en Smith <binjimin@gmail.com>, 2017-11-11 13:36:34 -0800, , update testsuite call_indirect new syntax 667 call_indirect instruction allows type specified inline via common type use syntax  call_indirect type ... call_indirect param i32 f32 result f64 ... call_indirect type param i32 ...  mean change storing var referenced func type funcdeclaration store type use function signature change fallout change major change function signature resolution error checking need iterate function expr list looking call_indirect instruction sure significant overhead parsing validation yet plenty way optimize end profile,,
646,2b196f1ee90ef04c6434d0694945214d31550aa7,am Clegg <sbc@chromium.org>, 2017-11-03 14:58:35 -0700, , wasm objdump improve support displaying import 666,,
647,4d9849ffbde861e10193cb15cce502eb49e1cb68,en Smith <binjimin@gmail.com>, 2017-11-02 21:19:01 -0700, , fix bad folding import generating name 665 name generation pas adding entry function binding hash using import index instead function global etc index result subsequent lookup would return wrong function case would cause wat folding code use function wrong number parameter,,
648,9c65b752bd12b55cbfb7cd5380fdf04614608c36,en Smith <binjimin@gmail.com>, 2017-10-31 22:10:49 -0700, , add wasm validate tool 664 currently identical wasm2wat without part write .wat file,,
649,fa0f11e9f54a8c8f4d7f0a5d2cd1cf113f30f461,en Smith <binjimin@gmail.com>, 2017-10-30 11:17:04 -0700, , better type checking error 662 instead printing error every failure accumulate error operation fails print message change error   error type mismatch i64.store expected i32 got f32 error type mismatch i64.store expected i64 got i32    error type mismatch i64.store expected i32 i64 got f32 i32 ,,
650,b230d2f7d23d1c03aa4acf5f7de11e3865bb3727,en Smith <binjimin@gmail.com>, 2017-10-26 14:09:28 -0700, , change shared memory text syntax 661 used shared min max min max shared see http github.com webassembly thread pull,,
651,2adfb2bf04c1fd47a5a556779f76c799cf15e5a5,en Smith <binjimin@gmail.com>, 2017-10-25 09:37:31 -0700, , rename counting builtins clz ctz popcount 660 put wabt namespace follow normal naming convention mixedcase importantly defined input instead using __builtin_c directly undefined,,
652,7ddd13efacf89d2c68844bb1784944c4b0a945b7,en Smith <binjimin@gmail.com>, 2017-10-23 15:10:11 -0700, , use simpler way check unaligned atomics 659,,
653,7680cb2cebbf26aa84b443048f1c98128b1b8b74,en Smith <binjimin@gmail.com>, 2017-10-22 21:10:33 -0700, , support newer ubsan fno sanitize recover 658 ubsan normally print error continue use fno sanitize recover abort error message point flag made require parameter want support check configuration time one allowed compiler,,
654,fa3ee1d2ff3ae74208bc1ccc4ab8621b4a3b201e,en Smith <binjimin@gmail.com>, 2017-10-19 11:00:39 -0700, , set loc member const 657 switch recursive descent parser properly set result certain error would proper location,,
655,1c4d51e96077798bf6bd0dfa82f65259a07bd314,am Clegg <sbc@chromium.org>, 2017-10-17 12:24:27 -0700, , wasm objdump add support data segment info 656,,
656,240cd232ab6afc6732cfc79eedcedfe669f14501,en Smith <binjimin@gmail.com>, 2017-10-15 11:27:56 -0700, , update readme.md point new demo look like link sync,,
657,fb986fbd03e31591fffec804575868e36fc39410,ris Selden <kris.selden@gmail.com>, 2017-10-15 11:18:15 -0700, , update demo add eval wat2wasm demo 655 minor redesign demo,,
658,d6964d412f07bd379c90ad1835902ca004f344a2,en Smith <binjimin@gmail.com>, 2017-10-14 00:15:39 -0700, , update output gen spec match spec 654 use call get helper instead accessing export directly use recent instance instead always use numbered instance e.g add comment command file line number,,
659,cf5df451ee53beccefec11e0be9e4de5cf4d69a3,en Smith <binjimin@gmail.com>, 2017-10-14 00:12:28 -0700, , validate utf encoding text format 653,,
660,0d59f1e96ab81d882f390cb424b2ae41534726b4,en Smith <binjimin@gmail.com>, 2017-10-13 15:58:01 -0700, , small cleanup commandrunner 652 runaction return execresult remove handling passed_ total_ command handler simplify command handler similar structure try error early fall success bottom,,
661,742c1d83a1d2e2d63398a8febcad6474b21f6fac,en Smith <binjimin@gmail.com>, 2017-10-12 14:07:18 -0700, , refactor interpreter execution 650 move thread run function executor executor abstract execution allow simulated multi threaded execution would awkward implement api thread object add execresult type wrap interp result result function many thing called result perhaps renamed sure call though expose low level functionality thread public member function mean possible get thread invalid state imo since assumption know use thread api simplify value_stack call_stack use array index instead pointer remove used handle calling back forth interpreter host currently done anywhere anymore probably better remove functionality used ever,,
662,9fc1661250adf19e3678bb44ee72b8cd85680de8,en Smith <binjimin@gmail.com>, 2017-10-12 12:22:39 -0700, , rename interpreter interp everywhere 649 already used interp place may well consistent,,
663,6e96660b2987df6ea170cea17025e685af5deb27,en Smith <binjimin@gmail.com>, 2017-10-10 11:33:48 -0700, , update testsuite 648,,
664,dac347ecb3a33eb67f62cd9061c58a1b4a2b549b,en Smith <binjimin@gmail.com>, 2017-10-06 16:40:58 -0700, , fix fuzzer found regression 647 assertion hang parsing invalid value type list assertion parsing invalid module field assertion two start section specified one named function,,
665,518e48c8bbe8167b8925eed9c263f943c7c806e6,en Smith <binji@chromium.org>, 2017-10-05 22:24:20 -0700, , update emscripten demo latest also change api always work module script mean many function named wast called wat also includes bug fix previously wrong buffer would supplied log_buffer result,,
666,a359f4248178d140e9b011b6ae538ad0710d3c8d,en Smith <binjimin@gmail.com>, 2017-10-05 21:47:40 -0700, ," add 32,64 .wait wake operator 646 implement everything except interpreter",,
667,8c38e6a008a04e018e0f5907c0b5117974f1ff35,en Smith <binjimin@gmail.com>, 2017-10-05 12:22:49 -0700, , refactor spectest interp 645 separate specjsonparser jsonparser commandrunner also add spectest namespace avoid defining ambiguous name global scope cleaner way also make easier handle new thread command contains subcommands need run parallel,,
668,f0a04294da979393939c42352d37eb484e37bbee,en Smith <binjimin@gmail.com>, 2017-10-03 15:56:33 -0700, , share code wasm interp spectest interp 644 also add typedvalues typedef std vector typedvalue fix bug displaying large number interpreter length capped 100 character,,
669,0e08c4974e614e05ecb72f25df07c04ff02b1ad0,en Smith <binjimin@gmail.com>, 2017-10-03 10:28:34 -0700, , add spectest interp tool split wasm interp 643 wasm interp tool run .wasm file spec test wasm interp new flag host print importing print function named host.print spectest interp tool run .json file,,
670,b10a3ab9187003f9e8ba84ef714821227981e77b,en Smith <binjimin@gmail.com>, 2017-09-28 01:05:38 -0700, , rename wast desugar wat desugar 642,,
671,5f0be7053d9a4e4b8c7e72d2b96f24126620267f,en Smith <binjimin@gmail.com>, 2017-09-27 22:53:38 -0700, , validate atomic access shared memory 641,,
672,a5a4007efcf9f3386b76835cd647426560068ca7,en Smith <binjimin@gmail.com>, 2017-09-26 19:02:54 -0700, , wasm objdump continue reading section error 636 wasm objdump want always try read much binary possible change add new binaryreader option called set false enable behavior currently bail error section try read next section may expand error handling behavior try recover inside section well probably best keep simple wasm objdump doe multiple pass binary error would normally displayed multiple time also add onerror override suppress error message pass first,,
673,c26acf2f6d4788dc2d1a582b5b10d93c8d87d6b7,en Smith <binjimin@gmail.com>, 2017-09-26 19:02:02 -0700, , cleanup binary reader.cc 640 remove in_size macro use template instead change comment comment,,
674,5396ae79d6d1c450882291a55ecc55101341eb14,en Smith <binjimin@gmail.com>, 2017-09-22 18:33:04 -0700, , fix assertion wat2wasm module test 638 fix issue 637,,
675,6b59c48cfcd28062836d7ace77c3d9cc0b3e18a9,en Smith <binjimin@gmail.com>, 2017-09-22 00:55:44 -0700, , move leb128 reading function leb128.cc 635,,
676,cc79eb62915517ef899c8f2e32619cb0ae1ecde9,en Smith <binjimin@gmail.com>, 2017-09-21 18:24:54 -0700, , add tracing logging output atomic instruction 634 forgot add last easy miss since default case switch statement remove default case explicitly enumerates invalid case also add two test opcodes traced disassembled interpreter,,
677,447e6f752b157d0a9951525a045d862e62d9b88c,en Smith <binjimin@gmail.com>, 2017-09-20 09:49:58 -0700, , add atomic instruction 633 add support atomic instruction enabled via enable thread flag support tool parsing text decoding binary validation interpreting doe currently ensure memory marked shared flag supported wabt yet,,
678,c71918746e06d2afffc46b3da5e3f2c024cc4b92,erek Schuff <dschuff@chromium.org>, 2017-09-19 23:23:43 -0700, , parse dump shared limit field 632 parse dump shared limit field add test handle error update text syntax review comment update binary wat writer use validator check instead clang format update generated lexer,,
679,fcb45be2153896ef57ab5ed562f3b551735fd3be,en Smith <binjimin@gmail.com>, 2017-09-19 12:07:20 -0700, , correctly report value bad opcodes 630 previously opcode would always return since opcode store enumeration represent invalid opcodes negative number way opcode getinfo return invalid prefix opcode number value byte current encoding expanded opcodes,,
680,15c4a0021cfcd8561779dfde07ff9e380bc12b7b,en Smith <binjimin@gmail.com>, 2017-09-14 19:06:19 -0700, , fix potential use free wastlexer 626 fix issue 623 move token file add wastparser test one used source text large may useful generate parser test future reorganize tokentype union data member make easier determine member need constructed copied destroyed bare data literal opcode string type make token store string literal data directly rather share lexer actually fix bug fix couple line printing bug long token e.g 20000 time clamped char long line displayed properly error e.g line 65000 column,,
681,18f7772c47f0720fbaa38a01e6892826705ec26f,am Clegg <sbc@chromium.org>, 2017-09-14 19:05:05 -0700, , enable reader feature objdump 628 objdump really make best effort display anything given tool better suited validation,,
682,7a0bf623e2b69621fa45f2d194c9dd6233086203,en Smith <binjimin@gmail.com>, 2017-09-13 18:45:29 -0700, , support non pod type circulararray 625 necessary want allow token destructor also add test api,,
683,e592d8d95a2d1a21d04e8311ef1aaee07be26e62,ichael Ferris <mike.ferris@hotmail.com>, 2017-09-13 17:26:22 -0700, , add interface enable feature 624 add interface enable feature nit fix,,
684,a4aa20105bc8851b57b50b5c62684c0f36cdbb02,en Smith <binjimin@gmail.com>, 2017-09-12 16:30:49 -0700, , allow parsing one module wat2wasm 622 .wat file contain one module assertion fix issue 621,,
685,caf98190ca5267a0864ef019889b31ed16d95f77,en Smith <binjimin@gmail.com>, 2017-09-08 16:54:18 -0700, , add virtual destructor stream 619 seems causing warning build see travis though,,
686,c73acd290c29429f4f4c491e8a66cc62f7ef8f2e,en Smith <binjimin@gmail.com>, 2017-09-08 15:53:38 -0700, , move interpreter opcodes opcode 618 interpreter use opcodes convenient add additional code e.g alloca br_unless etc soon add atomic instruction count byte need mechanism storing code could increase opcode size uint16_t simpler use encoding webassembly binary format one drawback mapping encoding opcode log2 operation currently affect speed running test insignificant worth mentioning,,
687,6a582bccddb48009414c5d909dea1544bcfcc512,en Smith <binjimin@gmail.com>, 2017-09-08 07:35:33 -0700, , rename wast2wasm wat2wasm wast2json 617 wat2wasm par wat file individual module wast2json par spec test file generates json wasm,,
688,0ecaaacb27d03a1aafc40397740f9bdd04bf8d73,en Smith <binjimin@gmail.com>, 2017-09-08 00:17:38 -0700, , rename wasm2wast wasm2wat 616 see issue 543,,
689,fe2cdc7f0f7633f7a14c5ea9952f5de9f5c17fad,en Smith <binjimin@gmail.com>, 2017-09-07 20:33:51 -0700, , append trailing underscore private member name 615 class already needed fixed,,
690,11851545c44814de4ad1fdc0ce15b6521607a94e,en Smith <binjimin@gmail.com>, 2017-09-07 11:33:49 -0700, , generate var name import export name 614 also make sure accidentally generate name already used,,
691,44853bc8996496fec161bd6ec48a0a41adf891ce,en Smith <binjimin@gmail.com>, 2017-09-06 23:28:42 -0700, , remove writer class move functionality stream 613 remove writer class move functionality stream fix emscripten build,,
692,4a37785fd5a6fe8c65a814e77289194616a2696a,en Smith <binjimin@gmail.com>, 2017-09-06 22:24:10 -0700, , move leb128 stuff file 612 also rename function,,
693,12e96a6e7b1941f0944f1f74734537bb517b6133,am Clegg <sbc@chromium.org>, 2017-09-05 14:15:15 -0700, , remove default case enum switch 607,,
694,9251833c182ba914515655620fbe33d416bc83d0,en Smith <binjimin@gmail.com>, 2017-09-05 12:27:11 -0700, ," add 32,64 .extend 8,16,32 operator 610 add 32,64 .extend 8,16,32 operator also add thread feature via enable thread update re2c generated output",,
695,0dea3835115ad7ff3c706c7d7e06f4b1bbc56cab,en Smith <binjimin@gmail.com>, 2017-09-04 22:22:16 -0700, , fix file descriptor leak writer.cc 611 fix 571,,
696,8a25289451c262d7c5d791c087b9052220b149ac,en Smith <binjimin@gmail.com>, 2017-09-04 10:42:33 -0700, , update testsuite 609 mostly updating test expectation function signature need checked part parsing see test testsuite func.wast added ,,
697,19483e5c93571d4288122adf7f5350e5425ae393,en Smith <binjimin@gmail.com>, 2017-09-04 10:41:40 -0700, , fix parsing bug 608 would previously fire assert attempting parsecommand iscommand false,,
698,38988f417b16f219d042f5e86609ee1c99df64a8,am Clegg <sbc@chromium.org>, 2017-09-01 16:01:04 -0700, , remove overuse auto wasm link.cc 606,,
699,9bd56665382b26045ba120f1a0abc60343236aad,en Smith <binjimin@gmail.com>, 2017-09-01 12:03:14 -0700, , return unique_ptr script parser 605 remove place using delete also checked emscripten build found previous change wabt result broke fixed,,
700,306f51146592faaf23a82324384e92961a6af5a9,am Clegg <sbc@chromium.org>, 2017-09-01 08:49:14 -0700, , add support data size alignment linking metadata 555,,
701,b07109fc40cd55fe92336f81f7bd59643fbe9742,am Clegg <sbc@chromium.org>, 2017-09-01 08:48:32 -0700, , add support symbol type linking section 604,,
702,cd9f0a60b5c869673a843f1c0ff47068661b5440,am Clegg <sbc@chromium.org>, 2017-08-31 17:40:40 -0700, , add type check data segment offset 525 conservative check binary reader extensive checking still done interpreter i.e vefiying type global,,
703,03a3c76144192dcc53826ba1cefb35c6502e407e,en Smith <binjimin@gmail.com>, 2017-08-31 15:07:54 -0700, , update relocation name match tool convention doc 603 see http github.com webassembly tool convention blob master linking.md relocation section,,
704,9a5a40909044d24d5a80085de3c9d952d4fe1a40,en Smith <binjimin@gmail.com>, 2017-08-30 22:15:44 -0700, , use std unique_ptr intrusive list api 602 using std unique_ptr function signature avoid call std unique_ptr release change also move wabt makeunique src make unique.h used intrusive list.h test intrusive list.cc without pulling common.h,,
705,040b8f9d80a67fe6746304a262cd57f71e9a4e3e,en Smith <binjimin@gmail.com>, 2017-08-30 00:10:25 -0700, , always include quoted header like src foo.h 601 way name conflict header name,,
706,781e08e3ef857eb738fe54e6ef426717f99f5364,en Smith <binjimin@gmail.com>, 2017-08-29 23:24:48 -0700, , move result file result.h 600 unify check_result use check_result place add operator operator result use instead combine_result change occurrence succeeded failed,,
707,7d33b3f26fc5aead990a35e4d089eaf2d5053202,en Smith <binjimin@gmail.com>, 2017-08-29 22:23:09 -0700, , use appendfield binary reader ir.cc 599 match behavior wast parser.cc clearer,,
708,8098411091fc3456dc778a0fe413275e461a84b5,en Smith <binjimin@gmail.com>, 2017-08-29 11:52:44 -0700, , use auto type obvious context 598,,
709,07ee60ee05957923101b96611b47bf2886b9ac54,en Smith <binjimin@gmail.com>, 2017-08-28 10:59:50 -0700, , rename emscripten_dir emcc_dir makefile 597 emscripten_dir meant root directory find emscripten binary emcc_dir meant name subdirectory emscripten build artifact live,,
710,7223c1dc10ef63b884381df030ab1af760cbac91,en Smith <binjimin@gmail.com>, 2017-08-26 20:48:01 -0700, , clean various structs ir.h 595 nicer static constructor const e.g const f32 protect type member used discriminant type hierarchy e.g expr modulefield etc remove pointer member field possible use std unique_ptr instead remove nearly union var const still use rename make_unique makeunique conflict std make_unique found adl,,
711,b775de1e48b5b8064e758cbcd8020eb3df1f9e50,en Smith <binjimin@gmail.com>, 2017-08-24 17:41:39 -0700, , update online demo,,
712,7e56ca5662eee90f5224d7702b7f534c165f8865,en Smith <binjimin@gmail.com>, 2017-08-24 17:37:37 -0700, , update libwabt.js fix wast2wasm example 594,,
713,a4b89db94f489c1802c3ae277bf92daaa1492870,mitriy Tsvettsikh <dmitrycvet@gmail.com>, 2017-08-24 10:59:39 +0500, , added missing function emscripten export 593 added missing emscripten export added one function,,
714,477cd75c3924e84dd1a8338ddfc0318308ca9d52,en Smith <binjimin@gmail.com>, 2017-08-17 20:34:08 -0700, , refactor interpreter import 592 create import derived class instead using union use cast dyn_cast interpreter func module defined vs. host remove onimport callback work kind specific callback e.g onimportfunc,,
715,bc3deb3288252866d9b571cd28c4104b9ffffd56,en Smith <binjimin@gmail.com>, 2017-08-16 10:12:03 -0700, , add saturating float truncation operator 573 add saturating truncation operator described http github.com webassembly nontrapping float int conversion change also codifies mechanism enabling new webassembly feature passing feature object opcode isenabled const feature member function query opcode enabled mean future exception flag renamed enable exception consistency checking whether feature enabled always happens input either wastparser binaryreader,,
716,3d3920f6d9388c46af6725dabb34d98752958d8d,en Smith <binjimin@gmail.com>, 2017-08-15 14:36:20 -0700, , rewrite parser recursive descent 591 remove bison dependency remove pre generated parser file rename build config re2c bison re2c add simple make_unique implementation move handling module binding ir.cc simplify lexer remove lookahead parser handle unify token lexertoken contains terminal value refactor setting token type value one function e.g literal return return_literal new parser two token lookahead use peek peek consume consumes one token kind match consumes current token match peekmatch return true iff token match consume basic error synchronization plenty room improvement,,
717,68e8642fea319253466bb3bddece75306f808a69,ohn Gardner <gardnerjohng@gmail.com>, 2017-08-04 04:35:17 +1000, , add wast highlighting .txt file test directory 590 enable highlighting window build instruction reference 01e176c 418 add syntax highlighting test file,,
718,ee0ce7cde5e5fb4ed21d5425629ae447eb433109,en Smith <binjimin@gmail.com>, 2017-07-31 12:06:20 -0700, , fix type checking bug br_if polymorphic stack 589 similar issue 586 necessary pop push type top stack validating br_if otherwise concerete type pushed stack i.e top remains polymorphic fix 588,,
719,17ded47a1324c54cf76e8486b900515242f3ae43,en Smith <binjimin@gmail.com>, 2017-07-29 21:37:16 -0700, , fix tee_local typechecking bug polymorphic stack 587 previous type checking code made sure value top stack correct type sufficient stack polymorphic concrete type pushed onto stack,,
720,d9d4aefd3b66a183677aaf167911a5ead76c1752,en Smith <binjimin@gmail.com>, 2017-07-26 15:20:06 -0700, , update testsuite 582 implicit function type appended module directly function import float int literal underscore separating digit,,
721,ffc29291b90d9ac5bfc9d79cdd3a6956f4d87e3b,en Smith <binjimin@gmail.com>, 2017-07-25 23:36:42 -0700, , wasm link remove context use class instead 584 cleanup,,
722,5a7d7e9f0fb668fc07c07b1e2fbdb6e469db871a,en Smith <binjimin@gmail.com>, 2017-07-25 21:50:25 -0700, , use class wasm interp instead context 583,,
723,46666c4dd78e297b8f3f08478b53b4b1a47e73a3,en Smith <binjimin@gmail.com>, 2017-07-25 20:38:17 -0700, , opcodecnt write hex representation constant 581,,
724,44085f825883e25d216c2d6866180a4db2a7a53c,en Smith <binjimin@gmail.com>, 2017-07-24 22:41:03 -0700, , refactor wasm opcodecnt 580 simplify code using map instead vector also added ability count immediates opcode add ubsan blacklist stl_tree broken older libstdc implementation also requires clang upgrade since clang 3.5 old support blacklist ubsan fix filestream move constructor incorrect worked gcc clang actual move elided use matrix_eval bypass set compiler .travis.yml,,
725,3142da34c5cafb41b1953556c9a312d5beab5780,en Smith <binjimin@gmail.com>, 2017-07-19 13:17:10 -0700, , rename snake_case mixedcase 579 functional change,,
726,028701aa7a80320d5e5a6e1d69b52cd940d402ea,en Smith <binjimin@gmail.com>, 2017-07-19 09:22:51 -0700, , properly forward argument pack 578 pattern  template typename ... args void foo args ... args bar std forward args args ...  ,,
727,a2d15d2cd095d6915cc83cbd811be8488ca0fce6,en Smith <binjimin@gmail.com>, 2017-07-17 22:03:46 -0700, , add moveanddelete helper function parser 577 combine std move delete behavior used throughout wast parser.y cleaner way also renamed helper function mixedcase added appendanddelete helper function,,
728,72ae6f4a7a8d3e417a8db6484a363328f08e6aa9,en Smith <binjimin@gmail.com>, 2017-07-17 15:23:22 -0700, , remove stringslice 576 added stringterminal used lexer parser since need object non trivial constructor destructor included token union name terminal token member prefix rename literal literalterminal use lexer parser move literaltype literal.h use std vector std string textlist rename textvector renamed removeescapes make template write std string std vector rename duptextlist removeescapes simplify considerably,,
729,31af1dcc64a26c0ebac901f773a2c9f359b07451,en Smith <binjimin@gmail.com>, 2017-07-17 13:30:58 -0700, , remove stringslice wasm link 575 also remove wasm link.h seem used,,
730,9e38a8fd3a5bf6022cee56d2e36b57360b026e4a,en Smith <binjimin@gmail.com>, 2017-07-14 14:37:34 -0700, , rename read_file readfile return vector 572 add dataornull function used get std vector std string data return nullptr container empty needed undefined behavior least according ubsan call data empty container would nicer various read_ function take void size_t pair either work another perhaps introducing span like api also considering readfile return wrapper object instead could mmap file fix 570,,
731,b2194657c4b9b90599ae02b36a02a10dbedc32c4,en Smith <binjimin@gmail.com>, 2017-07-14 11:06:00 -0700, , remove stringslice interpreter 569 use std string string_view instead,,
732,1c91faa7619869dc0cbcd06226494511df526c02,en Smith <binjimin@gmail.com>, 2017-07-14 11:05:44 -0700, , use template instead macro interpreter 564 still done decent cleanup template type called valuetyperep integer representation given type example valuetyperep float uint32_t nearly unary binary operator defined via template function operate value,,
733,9baa0e36730db024ba4cf5990d190206de457a62,en Smith <binjimin@gmail.com>, 2017-07-12 19:42:30 -0700, , use std vector datasegment data 567 also switch scriptmodule data std vector wast parser.y change duptextlist write std vector quoted_text instead duptextlist,,
734,88be146bd125e01e49281b1a2ec6efde9012c260,arlSchimpf <karlschimpf@gmail.com>, 2017-07-12 14:28:45 -0700, , make placement construct destructs easier read 568 make placement construct destructs easier read undo placement destructor wast parser.y address leak,,
735,50e47cb559af05736fb75cf5c014f01181e91314,en Smith <binjimin@gmail.com>, 2017-07-12 11:13:25 -0700, , update testsuite 566,,
736,96d5722c212936b1a2748075ac000a2ec662dbb5,en Smith <binjimin@gmail.com>, 2017-07-10 15:19:50 -0700, , always pas string_view value 563 value type passed value like int etc x64 clang linux abi seems passed two register rather requiring indirection may faster,,
737,9590ebfe68a9fd1297eab00966742ef06c2c7df0,en Smith <binjimin@gmail.com>, 2017-07-10 10:22:53 -0700, , use string_view binaryreader callback 561 pas string_view value,,
738,ac055b4f7aff5e9601bca48a7299c7cc5de77af2,en Smith <binjimin@gmail.com>, 2017-07-10 10:22:14 -0700, , fix bug string_view rfind 562 position need clamped needle larger haystack,,
739,f6be01744eb5d6442694814b127a3f6d216f2838,en Smith <binjimin@gmail.com>, 2017-07-07 15:36:46 -0700, , clean 560 previously upper limit extension length also taken opportunity modify writer stream apis take string_view instead const char filename,,
740,9c91ef3debff02dc952150a51f0e1378d3a03cdb,en Smith <binjimin@gmail.com>, 2017-07-07 14:09:42 -0700, , remove stringslice 559 member variable std string parameter string_view allows remove many destructors,,
741,50fed70f8d16081f4802cdf0e45a36c8b1aa7626,en Smith <binjimin@gmail.com>, 2017-07-07 00:52:24 -0700, , fix location error wasm2wast 558 error binary location text,,
742,12d228447c7ffcdb0bdb9a2af828b0b374975623,en Smith <binjimin@gmail.com>, 2017-07-06 17:30:02 -0700, , use std string instead stringslice var 556 change keep union hide behind accessors implementation bit complex since std string requires constructor destructors called result use placement new explicit destructors,,
743,a5066278b34021de22b150442cb7a94d62e22102,en Smith <binjimin@gmail.com>, 2017-07-06 13:07:24 -0700, , remove rename 553 since support binary location make much sense two different error handler errorhandler base class first argument specifies whether error handler expecting text binary location,,
744,12963c80e7083de8c0835745ec934ea356b9ef47,en Smith <binjimin@gmail.com>, 2017-07-06 09:58:34 -0700, , use intrusive list modulefields 554,,
745,2cb1e81a3e53f3481fdb789fe09df59042391e67,arlSchimpf <karlschimpf@gmail.com>, 2017-07-05 11:57:18 -0700, , move exception section code section 552,,
746,0551c78694ec7ffd5276d6dfce73e3ff3f7fc59d,arlSchimpf <karlschimpf@gmail.com>, 2017-07-05 10:44:08 -0700, , add inline export wat writer 550 add inlining exception export fix conflict wat writer.cc,,
747,5089ad7eb96c5fa2022562ff02bb64d0666ff276,arlSchimpf <karlschimpf@gmail.com>, 2017-07-05 10:43:35 -0700, , add test example wasm objdump 551 add test example wasm objdump use dump verbose instead new detail flag,,
748,59a5d9d06b02bddf8c0415eb421cacee5c842842,en Smith <binjimin@gmail.com>, 2017-07-04 09:35:33 -0700, , fix inline export multiple exported kind 548 possible export func global memory etc twice different name supported inline export format broken would print name last export,,
749,87f5a458b4f251aa1aa693314c9bd6de7f6ce7e8,arlSchimpf <karlschimpf@gmail.com>, 2017-07-03 14:01:19 -0700, , add concept exception wasm objdump 547 allow wasm objdump handle exception fix writing exception section make wasm objdump handle exception add test,,
750,44148ad88082a597a4098923dea4d7047d40531e,arlSchimpf <karlschimpf@gmail.com>, 2017-07-02 16:47:24 -0700, , fix handling exception section 546,,
751,4f1d3170b0c289265ade1d67268760fa1b539fe6,arlSchimpf <karlschimpf@gmail.com>, 2017-07-01 12:30:56 -0700, , extend binary reader handle exception construct 545 save state start changing binary reader handle exception add framework parsing binary initial binary reader exception working add fold option wasm2wast remove unnecessary code change completed implementation binary reader added round trip test fix issue caused merge master fix exprlist change fix nit add error message exception allowed fix issue raised binji initialize label ontryexpr,,
752,193f08d7c0846d0d840973be0ca182c27ac4daa1,en Smith <binjimin@gmail.com>, 2017-06-30 10:34:22 -0700, , use intrusive_list expr 544 nothing much special becoming increasingly annoying parser token value type everything must moved deleted,,
753,cd1ae6ae25556cbefbd8e3777e0817b1d1307dd1,en Smith <binjimin@gmail.com>, 2017-06-29 10:47:12 -0700, , add intrusive_list implementation 542 used replace list exprs modulefields manual linked list,,
754,a4eb5ec8fca10dba70301db440cc2dd33ddc61fa,arlSchimpf <karlschimpf@gmail.com>, 2017-06-28 15:38:12 -0700, , remove wabt_failed wabt_succeeded macro 540 remove wabt_failed wabt_succeeded macro add source generated file add pod check,,
755,4835641a34511bba8877a0b08832e7d0aba75b9c,ichael Ferris <mike.ferris@hotmail.com>, 2017-06-28 15:32:41 -0700, , fix getconsolemode use color.cc 541,,
756,57d5975652fef981f564f928d26eb64c4459f1e8,en Smith <binjimin@gmail.com>, 2017-06-27 09:08:57 -0700, , use type hierarchy command instead union 538 also remove commandtype used case assert_invalid could generate binary file name could resolved error handled quoted binary,,
757,25f0c6b4f2bfbb50d753bb117d597b5df3c6b7ce,en Smith <binjimin@gmail.com>, 2017-06-27 08:45:32 -0700, , update libwabt.js 539 includes new commonjs amd loader syntax,,
758,b1488c1bff9f69a603d757b8a9d7d20cf7ab89db,aniel Wirtz <dcode@dcode.io>, 2017-06-27 17:35:49 +0200, , support commonjs amd loader libwabt.js 536,,
759,142d5b1b0b240f2987aa7a553034169b1027a516,ink Saville <wink@saville.com>, 2017-06-26 20:50:38 -0700, , add default constructor location const 535 fix todo although may exactly right passing test initialized union field assume compiler remove unnecessary initialization,,
760,9ebcea8401b12dc7e2ea681b92bfa71789f7fbf3,ink Saville <wink@saville.com>, 2017-06-26 16:11:08 -0700, , explicitly initialize lextoken.value_ 534 suggested sam clegg sbc100 simpler solution first solution 530,,
761,bd2f5b3454891d436303c98d402bbeefbe3aad6e,arlSchimpf <karlschimpf@gmail.com>, 2017-06-26 13:51:10 -0700, , fix wat writer fold exception handling construct 533 fix wat writer fold exception handling construct add new source file clean issue raised binji clean exprtree,,
762,716d37a24194415bcbb9a9bde25ff1493fe91fe2,en Smith <binjimin@gmail.com>, 2017-06-25 14:26:10 -0700, , use type hierarchy modulefield instead union 532 also added llvm style casting free function isa return true object type cast convert object asserts dyn_cast convert object return nullptr,,
763,c76e945836a90dd9135d9d17aea503ae094ddd9a,arlSchimpf <karlschimpf@gmail.com>, 2017-06-24 15:43:51 -0700, , make wast desugar work exception handling 529 make wast desugar work exception handling add todo,,
764,ca21405638f58cdc7902525950e6773512f2f822,ink Saville <wink@saville.com>, 2017-06-24 15:33:29 -0700, , fix ununitailzed value_ lextoken 530 fix uninitialized warning error compiling 7.1.1,,
765,d95e53d6005bc96c9db7624e5679d21969a1245b,arlSchimpf <karlschimpf@gmail.com>, 2017-06-24 15:08:13 -0700, , clean error message bad rethrow instruction 528,,
766,4df75ce065c26b0c0244964e924692f19df17111,arlSchimpf <karlschimpf@gmail.com>, 2017-06-24 08:29:15 -0700, , fix binary writer handle exception declaration 526 binry binary exception declaration fix exception test succeed,,
767,b2613e132d93372bd75c640dd4d7505a81f707f7,en Smith <binjimin@gmail.com>, 2017-06-23 19:25:32 -0700, , add color output 517 currently supported vt100 escape sequence work assume isatty true color supported logic likely need improved good start also add support passing environment variable test via env used test force_color environment variable,,
768,29e8e9ee0068b0f90f30c69c4f6c0c3fd30bf96e,en Smith <binjimin@gmail.com>, 2017-06-23 18:41:59 -0700, , refactor expr class hierarchy instead union 524 benefit making thing much type safe well simplifying destroying member variable many member still raw pointer probably become unique_ptrs ordinary value,,
769,72edc598a20d79d5d19caf7b397be4254a7d5fb8,am Clegg <sbc@chromium.org>, 2017-06-23 16:01:07 -0700, , improve display data segment 520 use virtual address init offset display data rather file offset show segment size header,,
770,9dffec8454edbc4830d764ab5b0ff6c531cfd47e,arlSchimpf <karlschimpf@gmail.com>, 2017-06-23 14:13:04 -0700, , fix dereference null pointer validator 523 fix null pointer dereference test exception test output using option check test file output,,
771,f4ef7c6a363eb76528f78008fc8a0ad35936ee3e,am Clegg <sbc@chromium.org>, 2017-06-23 13:46:00 -0700, , consistent comment ending anonymous namespace 521 match wording preferred llvm,,
772,6b065cce18dc778ed3fefbe2bc1e0f7c826e772f,am Clegg <sbc@chromium.org>, 2017-06-23 12:50:35 -0700, , add parsing objdump support updated linking section 522,,
773,eea347b3eeb26989989aa9e62413e1841300a026,arlSchimpf <karlschimpf@gmail.com>, 2017-06-23 11:52:29 -0700, , fix circular array create destroy element 519 fix circular array create destroy element consistent reference element type use std array manage content circular array let compiler build default destructor circular array define constructor token circular array initialized,,
774,708c56b3361dfb082f3ac7b576f6c9c64ab16655,arlSchimpf <karlschimpf@gmail.com>, 2017-06-23 09:24:31 -0700, , update binary writer handle try catch throw rethrow instruction 518 define write try catch throw expression fix handling catch add test output,,
775,62e934ea09a7523e2b1ee57fd689ef930e9e6e18,en Smith <binjimin@gmail.com>, 2017-06-22 13:58:25 -0700, , add validation wasm2wast 516 modify location reference binary file offset set node location binaryreaderir modify print text binary location convert backslash slash wasm2wast filename also move duplicated code common.h would good clean path class point,,
776,29d6fe9a1108a166f8e0f596ab125824b903b148,am Clegg <sbc@chromium.org>, 2017-06-22 13:58:13 -0700, , add parsing objdump support updated linking section 483,,
777,4a27fafd433ee8ed8a206968c4d8c97515fe6400,en Smith <binjimin@gmail.com>, 2017-06-22 13:57:21 -0700, , update testsuite fix literal parsing issue 515 return error float overflow used return inf significantly simplfy significand parser floatparser parsehex add new parse test hexfloat.cc previous test checked valid canonical string,,
778,917d3bfa6593c9a85c81b674770aec2ca404a4a2,arlSchimpf <karlschimpf@gmail.com>, 2017-06-22 07:59:09 -0700, , fix validator able validate exception handling construct 514 save state add exception declaration syntax extend validator handle exception declaration fix binary writer handle exception declaration fix code handle external exception kind regenerate lexer fix bug last merge add exception declaration add example fix nit initial extension expr visitor save state fix issue master merge reconcile issue merge tool wast2wasm wast desugar save state save work move mtv fix resolving name try throw construct completed implementation validation exception handling fix nit combine catch catchall remove tryblock visitor clean use one visitor catch rework structure try block catch remove need common cli option fix issue raised binji fix re2c generated file fix memory leak fix nit,,
779,c0ae2e69b53f12e57833270e1b48a01864fb5156,am Clegg <sbc@chromium.org>, 2017-06-21 18:05:57 -0700, , allow duplicate name name section 512 previously allowed would result invalid wast file since mutliple function would end name generating label add unique numeric suffix etc llvm link could add magic behaviour strip producing name sectio wast2wasm would allow cleaner roundtrip might cause confusion issue might want legitimately name function suffix,,
780,9c7b8e5cfe4f7c2dda32f21167231d2653da2c7c,en Smith <binjimin@gmail.com>, 2017-06-19 18:34:07 -0700, , use template implement hexfloat parser writer 503 make easier update parser disallow range hexfloat value added recently spec parser,,
781,b7bc12696c813edde29f6362a321878c91ec6f11,en Smith <binjimin@gmail.com>, 2017-06-19 18:25:18 -0700, , move testing info test readme.md 513 also update information,,
782,6e27ec869dd74b2176e4eae2b2479742c8483664,en Smith <binjimin@gmail.com>, 2017-06-19 11:14:09 -0700, , check uses_terminal support cmakelists.txt 511 without get weird error older version cmake,,
783,c1507f8aafdf6bc7653657e8fc5895bc88777bc5,en Smith <binjimin@gmail.com>, 2017-06-19 10:17:46 -0700, , rewrite wabt opcode class 500 class store one enum optimized passed register since object get_opcode_ accessors member get_opcode_name opcode opcode.getname one side effect change opcode enumeration doe match binary encoding potential source error allows use contiguous set value enumeration opcode getinfo lookup also beneficial adding operator prefixed encoding,,
784,b8ee81f3b6a0d7f677a77703e8217236ccc14ea2,en Smith <binjimin@gmail.com>, 2017-06-19 10:00:20 -0700, , fix writing wat file long indentation 510 dumb infinite loop confusion indent indent_,,
785,4ada22587ee0693bdca843ad7bcfe40bdeed70a1,en Smith <binjimin@gmail.com>, 2017-06-19 10:00:05 -0700, , remove option default macro 508,,
786,5c9ed7ef98dda446e01a07c285051fd0e98d43c7,en Smith <binjimin@gmail.com>, 2017-06-19 09:59:51 -0700, , enable fix warning re2c 509 fix argument parsing findre2c allow multiple flag condition enum must generated re2c couple character need escaped line_comment allowed empty string conflicted similar state condition,,
787,0f700c65f819e593a814c6b71585cf7c7f5415bc,am Clegg <sbc@chromium.org>, 2017-06-18 17:14:05 -0700, , add uses_terminal run test cmake target 504 mean run via ninja output sent directly tty rather buffered turn mean test output displayed happens using single line tty based output method,,
788,cb0ada0b0ccbd8e6dcb910c96161e9301ea98826,am Clegg <sbc@chromium.org>, 2017-06-18 17:13:40 -0700, , error parse error gen wasm.py 505 previously gen wasm.py would return parse error rather bailing causing test fail,,
789,d5ee7a2b58aca1b4edd9fdf13583aff37c563384,arlSchimpf <karlschimpf@gmail.com>, 2017-06-17 16:32:51 -0700, , modify lexer look past parenthesis needed conflict 506 add framework lookahead queue test single case using lookahead save gettoken argument lexer state show lookahead token queue work modify wast parser use lookahead catch catch_all clean ups clean lexer always read token lookahead queue use lookahead queue hold token save token value lookahead token clean code simplify rule parenthesized try block make catch_expr_list left recursive rule remove used fix issue raised binji,,
790,6166d6d943609726fa7b1225c3faf6403665ec06,en Smith <binjimin@gmail.com>, 2017-06-16 17:32:18 -0700, , use custom command copy bin 502 last build always bin directory also mean make install install normal place e.g usr local bin fix 495,,
791,01e176c13887be2052909e8dc88e53587856aefb,en Smith <binjimin@gmail.com>, 2017-06-15 17:37:41 -0700, , add documentation building window 501 see issue 496,,
792,386fa98e07dbe74ae756016fe66f070f4f8c6a58,en Smith <binjimin@gmail.com>, 2017-06-14 01:26:12 -0700, , update readme.md wasm2wast demo also fix text format binary format link point new spec doc,,
793,0b789eaa02755a0082f454090f8bbae7f1418e12,en Smith <binjimin@gmail.com>, 2017-06-14 01:07:48 -0700, , make optionparser class 497 added new feature specify many argument allowed error provide many also add help test tool,,
794,013802ca01035365e2459c70f0508481393ac075,en Smith <binjimin@gmail.com>, 2017-06-14 01:07:14 -0700, , add wasm2wast functionality emscripten build 491 add demo index landing page move old demo index wast2wasm index.html add demo wasm2wast fix bug setting default value foo true never false need check undefined specifically fix bug allocatebuffer offset typedarray.set offset source buffer destination create new view change destination offset add new functionality emscripten build read binary file wasmmodule converting wasmscript wasmmodule text binary wrap libwabt.js module iife pollute global namespace emscripten junk,,
795,e0ba9fbd75661a573ce9087d7f5e5e2d909bbb8f,en Smith <binjimin@gmail.com>, 2017-06-13 19:32:14 -0700, , fix bug binaryreaderir debug name 499 debug name add converting worked properly func name updated func binding,,
796,67b36e268f696e7e15847f28a759ef0d77a53f01,en Smith <binjimin@gmail.com>, 2017-06-13 19:32:03 -0700, , fix emscripten build 498,,
797,4e5f32c19ed1b1756446231e9622e903137b0e27,arlSchimpf <karlschimpf@gmail.com>, 2017-06-13 14:25:11 -0700, , add exception declaration example 494 save state add exception declaration syntax extend validator handle exception declaration fix binary writer handle exception declaration fix code handle external exception kind regenerate lexer fix bug last merge add exception declaration add example fix nit fix issue raised binji sbc100 make wast wat version try block internally fix exp form try block fix nit grammer try block,,
798,194fbedf2065cc2ac09a4ead997256a8a8f8894a,en Smith <binjimin@gmail.com>, 2017-06-12 16:10:17 -0700, , use camelcase name member function ir.h 492 remove destroy_var use destructor instead add var copy move constructor assignment operator,,
799,3377747c3fb159826c5bd6d4a70ee5e167c79552,en Smith <binjimin@gmail.com>, 2017-06-11 18:35:43 -0700, , update testsuite lexer parser change 484 add support quoted module module quote ... binary module must annotated module binary ... multiple result block longer parser error func result i32 result i32 ... function type specify unused bind variable type func param foo rename rawmodule scriptmodule encapsulates module may parsed yet whether binary quoted validate load store offset alignment parser validator spec test assume catch error  parse wast file wasm interp checking malformed invalid etc module allows run assertion time nice wasm interp probably renamed though two test type.wast fail use assert_invalid module quote ... prefer support since unnecessary additional work fix follow decide worth keeping,,
800,3b81354b2482930a311646c34863ef5a584e7b2c,arlSchimpf <karlschimpf@gmail.com>, 2017-06-11 16:32:07 -0700, , add syntax try block wast parser 490 update grammar recognize try block fix parenthesized version try block add test file add parsing try block wast parser remove debugging comment fix help test handling null parser flag pointer fix formatting try wast case clean model exception fix test fix typo bad try.txt test case fix nit binji,,
801,5322dbcd2a06c920f59b5a3bc6f01de5fd2af228,en Smith <binjimin@gmail.com>, 2017-06-09 16:09:35 -0700, , use callback bindinghash findduplicates 487,,
802,155bbc40469570681fec73eca262dbcc05643774,en Smith <binjimin@gmail.com>, 2017-06-09 15:05:17 -0700, , use class 488,,
803,754925a7f49ced0be38f908546d82d50b614c92c,uy Bedford <guybedford@gmail.com>, 2017-06-09 19:18:58 +0200, , disable memory import export linker 486,,
804,cffb9cc41c9e13a020cca57ba2a3b12839aa37f0,en Smith <binjimin@gmail.com>, 2017-06-08 14:05:51 -0700, , check bison re2c version fallback prebuilt 485,,
805,d999df990e41634e45c199ca1e391b06f4734ebe,en Smith <binjimin@gmail.com>, 2017-06-07 12:45:08 -0700, , update testsuite various lexing parsing fix 482 update testsuite various lexing parsing fix lexer change switch re2c parser utf parser almost done free flag required bit work allow catch malformed utf well change re2c fill value 0xff since never valid utf byte allow reserved token basically ascii aside parenthesis double quote semi colon remove infinity lexer inf allowed change definition eof token implemented incorrectly correct way handle return fill data fill valid escape parser change change match spec parser block signature use result type syntax func global table memory multiple inline export inline import handled func definition instead import definition allow inline module i.e module ... expr required remove funcfield previously used parsing params result local code parse right recursive i.e backward insert everything front requires reversing index bindinghash remove nasty macro  behavior handled  inline import export handled returning additional modulefields list remove need optionalexport exportedfunc exportedglobal exportedtable exportedmemory use _opt suffix instead non_empty_ prefix e.g text_list text_list_opt text_list location changed symbol typically use name following lpar e.g import  add ppa re2c 0.16 add skip confirmation travis,,
806,044a198e827521f54b5260486ad3c89350b79450,am Clegg <sbc@chromium.org>, 2017-06-07 11:16:07 -0700, , store test intermediate file output directory 480 previously would temp directory would clean test run way intermediate always available inspection run,,
807,65663fd1b73b5e0772be0e75f1da56c81a231fe3,en Smith <binjimin@gmail.com>, 2017-06-07 10:37:01 -0700, , validate block signature multiple type 474 parser typechecker allow multiple type block signature block i32 i32 ... end currently supported mvp way serialize change make validation error change also fix default location handling non terminal node parser used look weird would use ending column last symbol rule even symbol different line fix 473,,
808,7ecfe0be4037139224a44bca854c7e0ecb9aec8c,am Clegg <sbc@chromium.org>, 2017-06-07 10:30:29 -0700, , objdump explict type element index 481,,
809,b7b892e7514c188c90bbb8681e157a01f5c8e2d6,am Clegg <sbc@chromium.org>, 2017-06-06 19:23:19 -0700, , objdump split state objdumpoptions 479 also use constructor inheritance avoid boilerplate constructor,,
810,1e5b546c65e8fef609431e77b1b2434dbf162e6c,en Smith <binjimin@gmail.com>, 2017-06-03 17:59:04 -0700, , make validator class 476,,
811,154543ab9d6964d2a369357d909610d2eeb641b1,en Smith <binjimin@gmail.com>, 2017-06-03 17:22:18 -0700, , make typechecker class 475,,
812,c4bd7d46fd3e0beced7824c3c243a419fa20d898,en Smith <binjimin@gmail.com>, 2017-06-03 14:20:05 -0700, , use class apply resolve generate name 472,,
813,7425bcc31e6516375391d18a62daee4c9f3502de,en Smith <binjimin@gmail.com>, 2017-06-02 17:20:50 -0700, , make exprvisitor class 471 add exprvisitor delegate callback exprvisitor delegatenop function implemented similar binaryreader,,
814,c77561850dfb530fbf067192e4d31c6070331340,en Smith <binjimin@gmail.com>, 2017-06-02 14:20:32 -0700, , fix assert wasm2wast invalid var 469 watwriter rely module previously validated fix 468,,
815,3c6c7a83c5bcf4f6654d4646652ace2c1468f0fb,en Smith <binjimin@gmail.com>, 2017-06-02 13:35:24 -0700, , cleanup lexer 466 add class lexersource encapsulates reading data source either buffer file add class lexersource read line source displaying error lazily cache line number file offset work done unless error occurs make wastlexer class instead struct,,
816,c37a2d912e83f9298c64c61e1e92aff8042566e1,am Clegg <sbc@chromium.org>, 2017-06-02 09:28:20 -0700, , use override keyword appropriate 467,,
817,1724d710dd00b3155f8989d0cbd9558941d7ea35,en Smith <binjimin@gmail.com>, 2017-05-31 17:00:08 -0700, , add option generate inline export wat writer 465 partially address issue 436,,
818,4bd1d335af8de5383645356f6a207d1115fa2b5a,en Smith <binjimin@gmail.com>, 2017-05-31 15:12:24 -0700, , clean interpreter 458 make interpreter thread interpreter environment class move function running code interpreter wasm interp move environment searching function interpreter binary reader interpreter remove free function use member function environment thread instead,,
819,7e5942d59ae16a5be236de2cc1a1fc7a263cb439,am Clegg <sbc@chromium.org>, 2017-05-31 13:43:06 -0700, , cleanup logging wasm link 464,,
820,449107b3645379a24b96afa8a0f0673283b95510,am Clegg <sbc@chromium.org>, 2017-05-31 13:42:16 -0700, , update relocation offset fixing section size 463,,
821,bc671ce76411ca0fb91e09d41dce9be9b67b8cab,en Smith <binjimin@gmail.com>, 2017-05-26 14:23:00 -0700, , add support folding expression wat writer 460,,
822,d8c30c7d2059563019bc52f1f017d407da907bd7,am Clegg <sbc@chromium.org>, 2017-05-26 10:57:58 -0700, , use single line test output attached tty 457 mean get verbose test output example running within ninja,,
823,40dce034d0203d96a2996263318f512929c1d810,am Clegg <sbc@chromium.org>, 2017-05-25 13:52:35 -0700, , change default tool path bin 456 make install put stuff default,,
824,261df56ff70732a19d1211ca98c358de2fc22d57,am Clegg <sbc@chromium.org>, 2017-05-25 13:52:24 -0700, , rename wasmdump wasm objdump 455 consistent llvm binutils name tool,,
825,cfcdab032b9fc3f16f9b6259de4ebc509e269def,am Clegg <sbc@chromium.org>, 2017-05-24 11:35:55 -0700, , ensure entry name section appear order 426,,
826,765d598979b5eb4e1229695cd495d242f9db9337,en Smith <binjimin@gmail.com>, 2017-05-23 17:01:04 -0700, , move interpreter stuff namespace 454 name conflict wabt opcode interpreter opcode wabt result vs. interpreter result name would conflict e.g funcsignature ever included interpreter related code,,
827,d120d2f9fa44f727a6b894d2f593abdc9cea89ee,am Clegg <sbc@chromium.org>, 2017-05-23 16:57:12 -0700, , wasm link add helper method 453 make thing little helper method make code clear,,
828,cb60a587dae48ec973fb8f59f48e34d58d569f5a,en Smith <binjimin@gmail.com>, 2017-05-23 12:22:10 -0700, , clean binaryreader rename 451 remove use setjmp longjmp well,,
829,6f21c9537c59321ac9b3b7a8368e346573b02dfc,am Clegg <sbc@chromium.org>, 2017-05-23 12:00:43 -0700, , add debug name wasm link test 452 also wasmdump list debug name function table element change make easier interpret wasm link test output,,
830,9b1a28c074d5a5c5f2151a26ac169764677b416d,en Smith <binjimin@gmail.com>, 2017-05-23 10:41:49 -0700, , use make use jobserver 450 allows run  make j10  without make complains make warning jobserver unavailable using add parent make rule,,
831,9a0e5a27ada9e19c24280f1faa1887c2847353e2,am Clegg <sbc@chromium.org>, 2017-05-23 09:09:16 -0700, , include leading wasm binary name section 449 leading part text format strip writing name section add back reading binary long run might make sense add remove reading writing text format,,
832,694f33237cc40e3460cc2d9709b37c367232f76d,en Smith <binjimin@gmail.com>, 2017-05-22 16:02:59 -0700, , fix disassembly bit value wasmdump 446 also change formatting uint32_t operand i32.const grow_memory current_memory fix 445,,
833,27a3f8fac98751ce3b7f040a6d6d01d3dde5bcd5,en Smith <binjimin@gmail.com>, 2017-05-22 13:47:05 -0700, , update testsuite fix bug export name 444,,
834,7fd2cffc595216e74befef2467b9acb37e82ebd0,am Clegg <sbc@chromium.org>, 2017-05-22 11:18:22 -0700, , wasmdump include debug name function 443,,
835,366d2e022d5e3b87c35838179607063198d7f20e,en Smith <binjimin@gmail.com>, 2017-05-19 11:12:33 -0700, , implement utf validation update testsuite 429 enough pas testuite yet validate utf8 string text format,,
836,43afc1b880ba857110b0fdee6d3c82a2d4a13244,am Clegg <sbc@chromium.org>, 2017-05-19 10:15:41 -0700, , wasmdump display function name call site disassembly 441 also print index type decimal rather hex since seems convention elsewhere,,
837,c5b833e68b52dfc67b582b6f7fa60b55074d3aa8,ink Saville <wink@saville.com>, 2017-05-18 14:29:12 -0700, , allow module name 440 currently module name must __extern change module name allowed,,
838,a9a997b417f493615bd51b82670e9c920b7ab439,am Clegg <sbc@chromium.org>, 2017-05-18 12:46:25 -0700, , add support type index relocation 438 relocation type used signature type immediate call_indirect instruction,,
839,f1031e8ac4a4eb2ec886c03fa432d5b5b3cc56a0,en Smith <binjimin@gmail.com>, 2017-05-15 10:07:21 -0700, , use index address offset instead uint32_t 433 index index one webassembly index space also used count space well parameter count result count address index linear memory size data region linear memory offset offset host file memory buffer fix issue 322,,
840,5d10e89b5d796edc62cfb6bc3f806d8a1b1272c0,en Smith <binjimin@gmail.com>, 2017-05-12 16:34:54 -0700, , add fuzzing helper script fix fuzzing bug 416 add fuzzing helper script fix fuzzing bug fuzzing dictionary old updated also added simple fuzzing shell script make bit easier run bug fix validate function index local name section calling callback fix invalid assert parse_ float double _infinity assumed infinity required could inf bail resolve local name current function e.g attempting resolve name elem offset expression catch bad_alloc wast2wasm wasm2wast without afl fuzz see allocation failure crash disable exception default add option wrap tool try catch,,
841,a220185a7adc14251d86fb8d22141f5596f8ed30,en Smith <binjimin@gmail.com>, 2017-05-11 22:09:38 -0700, , use style header e.g cstdlib 431,,
842,84c25f09386baca162a60eb8398542182d45e5c6,am Clegg <sbc@chromium.org>, 2017-05-11 16:25:55 -0700, , wasmdump make export section readable 430,,
843,18b643dfffbc2eb5679155dc8fcf10a1f1468646,en Smith <binjimin@gmail.com>, 2017-05-11 13:52:41 -0700, , use codemirror wast2wasm demo 428 also includes simple codemirror syntax highlighter wast format using simple mode.js codemirror plugin also moved example demo.js examples.js codemirror.css codemirror.js file marked binary show diffs patching anyway,,
844,1542efb3cdf6239a6e80cc469066e5c4b0e02cd9,am Clegg <sbc@chromium.org>, 2017-05-10 17:59:06 -0700, , update reloction name match spec 427,,
845,c63e85a7e3febf6b75ee9d426361aaf7ede7ae8d,am Clegg <sbc@chromium.org>, 2017-05-10 14:24:03 -0700, , wasmdump show function name along relocation 425,,
846,fb60660de654becd498ec928a6acc2ff6657ed4a,am Clegg <sbc@chromium.org>, 2017-05-10 12:56:30 -0700, , regenerate expected test output 423 expected test output sync becasue whitespace start end stdout cause test failure stdout stderr stripped comparison,,
847,b040dc4b5edae9974343f0dcf73284802274a54f,am Clegg <sbc@chromium.org>, 2017-05-10 10:59:21 -0700, , improve error message binary reader 421,,
848,47407e7f11a7cc4568b2901bf2dd36b8ebf91cec,am Clegg <sbc@chromium.org>, 2017-05-08 17:56:23 -0700, , add wasmdump support start section 420,,
849,ea9cd441420da1d129271a669872bc444c35ad2f,ohn Gardner <gardnerjohng@gmail.com>, 2017-05-09 10:46:47 +1000, , add highlight readme code block 418 add highlighting embedded code block replace osx macos readme file,,
850,5ccca25f20cdf18bebaffc57f186357d0abd66b3,en Smith <binjimin@gmail.com>, 2017-05-05 00:02:07 -0700, , remove unused terminal lexer 415 old one still around like if_else call_import,,
851,0cc349dae28571450a4b7a70606a68fd54403233,en Smith <binjimin@gmail.com>, 2017-05-04 16:31:46 -0700, , rename occurences ast 413 ast binary reader ast binary reader ast writer wat writer everything else change ast wast deciding wast vs. wat wat format allow single module without assertion,,
852,08cc271f600bafb7dbf42b519ba48c539cd3130e,harles Lowell <cowboyd@frontside.io>, 2017-05-04 17:55:09 -0500, , note cmake version dependency osx 414 cmake version 1.3.1 osx see error like following http cmake.org bug view.php 15355  make error cmakelists.txt target hexfloat_test requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wabt unittests requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wasm interp requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wasm link requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wasm2wast requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wasmdump requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wasmopcodecnt requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wast desugar requires language dialect cxx11 compiler extension cmake doe know compile flag use enable cmake error cmakelists.txt target wast2wasm requires language dialect cxx11 compiler extension cmake doe know compile flag use enable ,,
853,2365f39ad37bc13723056d3865420c7eb7a0c314,am Clegg <sbc@chromium.org>, 2017-05-03 15:00:07 -0700, , wasmdump support multiple input file 411 mimick objdump behaves also make code readable,,
854,690e436cda8cb25181cccc2ebcb884d277454920,en Smith <binjimin@gmail.com>, 2017-04-27 16:34:07 -0700, , move opcode opcodeinfo opcode 412 forgot set s_initialized true meant _really_ slow laptop parsing angrybots.wast time spent whoop could fixed setting s_initialized true instead filled gap operation called invalid_0x16 etc also took opportunity move opcode stuff file use .def file opcode information list,,
855,8e1f6031e9889ba770c7be4a9b084da5f14456a0,en Smith <binjimin@gmail.com>, 2017-04-26 13:32:41 -0700, , update testsuite 410 exposed small bug empty init expr would type would print null since exist,,
856,5a0feb1d21a9448b53ad31440af666f13705858d,en Smith <binjimin@gmail.com>, 2017-04-25 22:23:00 -0700, , update online demo link readme.md 409,,
857,ab4290e57d39ef079e82377d91bd27dcde4d73ae,en Smith <binjimin@gmail.com>, 2017-04-25 22:09:56 -0700, , fix emscripten demo libwabt.js 407 remove complicated emscripten wrapper used favor something much simpler remove memory init file remove oninputkey handling demo auto indent broken flat syntax simplify emscripten helper provide simple function wrapper around wast2wasm api wabt_parse_ast    tricky part function return multiple value returned structs well  ,,
858,27b992d8bc9a359a5d4256835d2d965ce92eda69,am Clegg <sbc@chromium.org>, 2017-04-25 17:11:43 -0700, , improve wasmdump output relocation data segment 406 data segment print file offset match file offset shown dumping relocation relocation show addend one present correctly display negative addend way objdump doe e.g symbol_foo 0x10 symbol_foo 0x10,,
859,7f333885d7ad84036b8fcac7df3c8ce8cb6d9c33,am Clegg <sbc@chromium.org>, 2017-04-25 10:13:49 -0700, , split smaller function 405,,
860,f78f159d836ed6920f7a656a693220bbc9b5bbd6,en Smith <binjimin@gmail.com>, 2017-04-24 15:18:57 -0700, , change source binary errorhandler 403 added new class abstract base class writes error file abstract base class eats error writes error file specific one well used wasm interp handle writing custom header assertion failure i.e place error handler fire used parsing .wast embedded binary file,,
861,bcdb11f2ab3d778a83bf53ddfbd174b70ebaf02a,en Smith <binjimin@gmail.com>, 2017-04-24 13:29:26 -0700, , make astwriter binarywriter class 404,,
862,9b0055d1d9c75149b2c93b95117fc9af7c20ec32,en Smith <binjimin@gmail.com>, 2017-04-18 14:52:01 -0700, , define implicit func type function 400 function defined without explicit type first search already defined implicitly otherwise func type one found use otherwise define use code previously would define new type function work roundtrip properly end defining func type twice,,
863,50007242ecb843a94fbcc7eb118f2c58376d3858,en Smith <binjimin@gmail.com>, 2017-04-18 13:45:48 -0700, , fix appveyor build a4751fe7 402 msvc vector debug check like accessing address end vector even never read value writing size memorywriter write move data also fixed cmake warning,,
864,ddfbfc592da5c7b889de46c5a58e62de672b197c,en Smith <binjimin@gmail.com>, 2017-04-18 10:22:55 -0700, , fix uninitialized value binary writer spec 401,,
865,a4751fe78f119305fa8927f1bba10aefecc14f3f,en Smith <binjimin@gmail.com>, 2017-04-16 16:07:03 -0700, , refactor stream writer write 399,,
866,15c898a5bd3e257e72e4f5b4fdc831c82bf20e83,F Bastien <github@jfbastien.com>, 2017-04-12 23:24:01 -0700, , english good 398,,
867,7af18252ff077e0384751066e7eaec67c936d1b8,akob Bornecrantz <wallbraker@gmail.com>, 2017-04-08 21:02:22 +0200, , opcodes i64.clz i64.ctz i64.popcnt one argument 397,,
868,78f49341b88f66bd4275217d8e8777e652b50cbb,en Smith <binjimin@gmail.com>, 2017-04-06 12:22:11 -0700, , update testsuite spec 392,,
869,2cff640848045138d447ed34c0c871eb754be4ef,am Clegg <sbc@chromium.org>, 2017-04-05 14:59:08 -0700, , refactor wasmdump disassembly pas reader class 395,,
870,0dcecdc2c638ff73ed2cec2edc770cc9bf38c841,gravelle-google <jgravelle@google.com>, 2017-04-05 13:57:28 -0700, , remove waterfall known failure 396,,
871,56ac5cb143ae9bf12a84ca42cf67ee1cc679c77c,ipcet <pipcet@users.noreply.github.com>, 2017-04-05 18:28:35 +0000, , use hex digit wasm version rather 391,,
872,02c340c691e4f6b8da4dbc1a47ddb1db9dbeffd3,erek Schuff <dschuff@chromium.org>, 2017-04-04 18:19:12 -0700, , disable warning msvc build warning error 394 disable warning msvc build warning error disable scl warning header,,
873,f0045ae5f5e8f842a44af179c0575388adf570e7,en Smith <binjimin@gmail.com>, 2017-04-04 17:09:16 -0700, , run test appveyor 385 fix issue 326 install target installs executables required actually know msvc build target use absolute path running executables set pythonpath test directory reason window sys.path include current script directory wasmdump strip directory last slash backslash wasm interp use round nearest tie even converting uint64 float double check backslash slash get_dirname wasm interp looking module alongside json file print float wasm interp using since msvc print using digit exponent instead run wasm link.py remove file renaming top,,
874,fa6a4e0c6cbf253fa6dab9b8da59312d7e7e6b3f,en Smith <binjimin@gmail.com>, 2017-04-04 17:00:31 -0700, , fix type checking bug br_table loop 390 loop signature signature fallthrough branch target br_table loop label always void fix issue 389,,
875,bbff32694ff2a7c1b0a37514201debbc69828051,am Clegg <sbc@chromium.org>, 2017-04-04 11:45:41 -0700, , wasmlink relocate index gererated reloc section 388 recently switched embedding index relocation within relocation entry overlooked fact need updated writing linked reloc section,,
876,ea63e5c26cf2c2240d0f1c9f671092003a5316b8,am Clegg <sbc@chromium.org>, 2017-04-04 10:34:06 -0700, , add dump test show inline relocation 387,,
877,ad0d589c6bf89afaac6ab24fb0c20c9b1a6f0297,ipcet <pipcet@users.noreply.github.com>, 2017-04-03 19:30:36 +0000, , fix function name index imported function 384 linking source binary imported function index implemented function index non contiguous previous code catch cache relocated index avoid behavior,,
878,f57ff31c1425e5f066dd0959992fb2aabc39b510,am Clegg <sbc@chromium.org>, 2017-03-31 15:59:09 -0700, , allow name section sparse 381 emit name function actually one previously emitting empty string function without name new version name section allow sparse list also cleanup function name handling wasm link,,
879,feb6ee594bf670d5c637e8b11e598af2dc37f95d,am Clegg <sbc@chromium.org>, 2017-03-31 15:18:59 -0700, , return non zero travis test fail 383 return non zero travis test fail oops silently ignoring test failure traivs,,
880,efc5145bf0bd1fe7ea2f7a4b2a34541d1f2b10b2,am Clegg <sbc@chromium.org>, 2017-03-31 12:32:13 -0700, , add option run tests.py show command run 379 without hard dig find exactly run,,
881,190a98f9e317215b995539e4e4522cac44539d44,en Smith <binjimin@gmail.com>, 2017-03-31 10:27:39 -0700, , properly handle keyboard interrupt run tests.py 382 eat exception local error way bug test runner propagate give nice stack trace,,
882,06839fe4a1ba21e7c596e77c49b0e8126fe0d9b1,en Smith <binjimin@gmail.com>, 2017-03-30 14:24:17 -0700, , force color diagnostics clang 380 break vim workflow seriously figure nicer way handle ninja want,,
883,ca9ccccd10d1975eb117dd9ce05a189270f2fb01,en Smith <binjimin@gmail.com>, 2017-03-30 14:17:29 -0700, , use class virtual function binaryreader 376 add new class binaryreader abstract base class binaryreadernop implement binaryreader doe nothing log call binaryreader forward another binaryreader typically mean remove context structs implementation since data move binaryreader subclass also took opportunity rename new member function mixedcase instead snake_case since common,,
884,2e9e6ce3f5f4ccf2983338fb5353013d2a5bb94d,am Clegg <sbc@chromium.org>, 2017-03-30 14:12:48 -0700, , verify size sub section within name section 375,,
885,d3bd2f82b876ab6e54ad9af3b03c2a348fc14b5c,am Clegg <sbc@chromium.org>, 2017-03-29 18:00:45 -0700, , cleanup default test tool declartion run tests.py 377 bunch redundant splitting joining going,,
886,fc721a13ed51969411607dbf6f91822e3097e575,am Clegg <sbc@chromium.org>, 2017-03-29 16:09:44 -0700, , wasmlink fix function index name section 374 code assuming function named using simple increment rather calculating actual function index new binary,,
887,b8e6c1c82d91fb6d3da2bbf825babda097685c0e,am Clegg <sbc@chromium.org>, 2017-03-29 14:09:40 -0700, , wasmdump fix output local name 372 previously could nest local name inside function name new name section local come later,,
888,aad6e98314bc4225dca7e12aa9795cb0ad87f21e,en Smith <binjimin@gmail.com>, 2017-03-24 14:44:37 -0700, , support arithmetic canonical nan update testsuite 368 positive nan nan defined nan value sign bit clear exponent one tag quiet bit set quiet bit significant bit tag example bit float nan 0x7cf00000 canonical nan either nan nan nan nan sign bit set arithmetic nan defined quiet nan i.e quiet bit must set bit either change update interpreter loosening previous nan behavior,,
889,41d597d678b6443d9e8a692316271ceafd8bcc2d,ichael Ferris <mike.ferris@hotmail.com>, 2017-03-23 13:33:30 -0700, , use parse_float_hex parse float hexstring window crt implementation strtof strtod support hexstrings 367,,
890,192fbd023a542f2e6d7a737ac5412e392dd0e45e,en Smith <binjimin@gmail.com>, 2017-03-22 21:14:16 -0700, , replace wabt vector std vector 366 propagates lot code since std vector call constructor destructors particular add many default constructor destructors previously pod type many construct var stringslice type likely removed constructor since union member contain constructor destructors without additional implementation change member pointer instead perhaps future std variant instead union member value type,,
891,f8c3d6027dd64c7c3c962aa1d4bfc50e6ecc4a8c,am Clegg <sbc@chromium.org>, 2017-03-22 12:59:19 -0700, , wasmdump improve printing relocation information 364 print addend make clear different offset mean,,
892,6602d3cc97caa5bec08e274b2250c545ff0d71d1,ichael Ferris <mike.ferris@hotmail.com>, 2017-03-21 10:11:03 -0700, , fix bug lexing buffer subsequent read buffer overwrites byte still available 361,,
893,2702f8575658dcf3f7d75fedbf1b0eeb163eb075,en Smith <binjimin@gmail.com>, 2017-03-17 13:56:09 -0700, , add install target makefile 355,,
894,b81a0ad2140cdbdb2e0a148ce18d0b23e9cd11f5,en Smith <binjimin@gmail.com>, 2017-03-17 11:45:12 -0700, , add wabt string_view based string_view 359 add wabt string_view based string_view also add wabt unittests test,,
895,c31d2f952fb54ab0bb12caea45500c14dafe9761,gravelle-google <jgravelle@google.com>, 2017-03-17 11:23:45 -0700, , define __stdc_ _macros non msvc compiler 360,,
896,264a9505ecf8dc8834a2f9842793f6d91ad6803b,am Clegg <sbc@chromium.org>, 2017-03-16 18:27:38 -0700, , add callback end opcode end function 358 without objdump show final byte opcode function,,
897,5b642c3ce487b77102dec4fc4b55538cfbccc5ff,en Smith <binjimin@gmail.com>, 2017-03-16 14:49:06 -0700, , use std bindinghash 357 change really done isolation since add member constructor struct longer trivial constructor propagates type use etc number change ugly hopefully reduced amount code needed change particular changed union member pointer would stay trivially constructible another tricky change handling duplicate binding previously relied fact hash implementation would consistent nicer solution display duplicated binding source order probably nicer way bikeshedding welcome,,
898,81a64d68c7ce50617bac025061d8f6db91b00ee9,en Smith <binjimin@gmail.com>, 2017-03-15 16:29:37 -0700, , fix potential one definition rule breaking structs 356 context common potential problem noticed wasm link.h others datasegment export probably issue yet since trivial constructor soon add non trivial type break though,,
899,8cc8ef1db69ba79b6f35d466bd376223d640b09a,en Smith <binjimin@gmail.com>, 2017-03-14 12:02:34 -0700, , update testsuite 066e17da spec e0778664 353,,
900,a02beb8e12b21f63dcfbf862366d3e44f4eb62d3,en Smith <binjimin@gmail.com>, 2017-03-13 16:32:11 -0700, , fix crash using binary reader logging error 351 binary logging turned use reader on_error directly since function expects user_data context example actually loggingcontext make easier user use default error handler return bool saying whether error handled additional change add test logging succeeds add test logging error change run interp.py script use tracing logging,,
901,a17662511d4e7c277f5add3b61453e7b708b2756,am Clegg <sbc@chromium.org>, 2017-03-13 15:54:17 -0700, , update relocation encoding latest spec 352 brings wabt line llvm producing soon land tool convention spec static linking add index option addend relocation define reloc common.h rather tool,,
902,39e2c488f82ccd1bbc08059ea575b2d9deafe008,am Clegg <sbc@chromium.org>, 2017-03-13 13:00:53 -0700, , add detailed error logging binary reader 350,,
903,f09b9fdcbb7e94a43040155a2bfa3ea1bf07cfbd,en Smith <binjimin@gmail.com>, 2017-03-10 17:01:45 -0800, , remove wabt_vector interpreter 349 also fixed bug process interpreter updating function table happen result table would updated even linking failed,,
904,5180a926895aebb57fb3e4c2a670d61692ae3d8d,ipcet <pipcet@users.noreply.github.com>, 2017-03-10 18:40:22 +0000, , binary reader api pas module field name on_import_ 348 pas module field name on_import_ simplify code longer need store field name context remove nop method,,
905,dece22f5b8ab409150a5b9df4fb03a5033ec5c19,en Smith <binjimin@gmail.com>, 2017-03-09 19:34:58 -0800, , move loop variable loop header 347,,
906,826b336ea6c050f4b4971eb8014b2c2584fdad10,ay Phelps <hello@jayphelps.com>, 2017-03-09 15:04:21 -0800, , use array char instead pointer char sizeof correct 345,,
907,6aad8be7f5bed5d008877e414d7e1d9f68d4f0a2,en Smith <binjimin@gmail.com>, 2017-03-09 12:52:14 -0800, , remove src array.h use std vector instead 342 caused destructor become deleted since import array std vector union member change also fix fallout separating  derived instead using union,,
908,89b9c975d8f56291d708132b7ca2fdf57237415a,en Smith <binjimin@gmail.com>, 2017-03-09 11:30:52 -0800,342, fix mingw build defining _posix 346 mingw32 try support runtime printf posix compliant printf seems randomly choose two depending arbitrary factor like header include order change force always use posix compliant printf mingw also change attribute use posix compliant tag gnu_printf since printf default ms_printf seems resolve issue 324 well one found 342 well,,
909,851f757b6681fefa965a20888e25596779b40402,oo Rong Jie <loorongjie@gmail.com>, 2017-03-09 16:55:40 +0800, , mingw64 fix print format warning 344 mingw64 fix print format warning,,
910,2678234ffbaef42d3a39cf6ede35eecb99f168d2,ichael Ferris <mike.ferris@hotmail.com>, 2017-03-07 20:27:24 -0800, , use wabt_snprintf instead calling snprintf directly 341,,
911,b2ac6bd50d8b75cb203b28c0196d78e30a154b43,am Clegg <sbc@chromium.org>, 2017-03-07 11:00:55 -0800, , dump debug info wasmdump 340 need include debug logging prepass unconditionally performed start,,
912,75c0870ca1371f8fc421749f3b826c51eb971105,am Clegg <sbc@chromium.org>, 2017-03-07 07:33:23 -0800, , add debug flag wasmdump wasm link 338 enable logging binary reader debug flag passed wasmdump wasm link,,
913,d155a0e4374f9e1f15bcb06aa5d10125efc28829,en Smith <binjimin@gmail.com>, 2017-03-06 16:51:03 -0800, , use std move relocate bison stack 319 previously used memcpy robust want use non trivially copyable token see issue 314,,
914,8fb4e09ad1d5d0c737028e87728abe336350ae27,ipcet <pipcet@users.noreply.github.com>, 2017-03-06 23:07:58 +0000, , extensible name section support 337 support new extensible name section specified http github.com webassembly design commit robustness use enum class name section subsection fix test expect actual output fix linker parse emit extensible name section remove duplicated code skip function without local writing local subsection use wabt_snprintf remove duplicated code,,
915,e4dda12b17a5323a56b6782a6787f258ed2d8c81,en Smith <binjimin@gmail.com>, 2017-03-06 11:34:37 -0800, , use new delete instead malloc free 332 also switch void char remove unnecessary cast doe like void,,
916,b6e5735f3bfbb66d76142fc2f404da796289fc76,en Smith <binjimin@gmail.com>, 2017-03-06 00:27:25 -0800, , use cmake_standard property target 336 hoping resolve compilation issue folk mac ,,
917,557f97b1cbda0575fdcb28b72851ec1e25590aa1,en Smith <binjimin@gmail.com>, 2017-03-05 23:43:20 -0800, , run flake8 travis linux 335 installed mac fix mac build issue 325,,
918,2759d4646d9ec9fdb37a4b0b7ba40a972dd509de,en Smith <binjimin@gmail.com>, 2017-03-02 23:14:31 -0800, , replace wabt wabt prefix namespace 331,,
919,73fc2e25a9d49aa2188ed1ca25260ba76a475df3,en Smith <binjimin@gmail.com>, 2017-03-01 21:50:11 -0800, , update cmake makefile use .hh instead 330 built cmake rule look .hh file instead building without build always think generated parser stale rebuild,,
920,61c9592d990cc20450300e2e0609f366a7a3a5b8,en Smith <binjimin@gmail.com>, 2017-03-01 14:14:40 -0800, , make enumeration enum class 329,,
921,9e1654912d3ead429706caa4f152331fe0317d1e,ay Phelps <hello@jayphelps.com>, 2017-02-27 19:54:16 -0800, , use perror output error message reading file 318 use wabt_snprintf instead unsafe sprintf,,
922,b44543c99c8f044f8106e3d46f055a9e2380d9fb,en Smith <binjimin@gmail.com>, 2017-02-27 18:19:03 -0800, , update gen spec support 313,,
923,f94275a6cf1f9ef990ec47d97a1174765790d56c,en Smith <binjimin@gmail.com>, 2017-02-27 18:09:36 -0800, , require style cast disallow style cast 320,,
924,86ee5244e68cc2320f1e8bde02aefe255d334430,en Smith <binjimin@gmail.com>, 2017-02-27 16:47:42 -0800, , roll back previous msys2 323,,
925,4e7541cb2d067eeebce5f13f85c0d4f67a685299,en Smith <binjimin@gmail.com>, 2017-02-24 16:49:49 -0800, , remove struct enum typedefs 317,,
926,529015dc83b426659047689922eee7f9a34f9f15,erek Schuff <dschuff@chromium.org>, 2017-02-24 16:48:28 -0800, , update wasm binary format label 310 update wasm binary format label rebaseline test change revert test spec globals.txt update testsuite update spec binary.wast test testsuite repo,,
927,25f189ffdbd953f7799ad98ea2d62fc822e54728,en Smith <binjimin@gmail.com>, 2017-02-24 10:45:40 -0800, , change null nullptr 315 also switch using,,
928,b86721bdeb746ff86db73385f449a4af882501b2,en Smith <binjimin@gmail.com>, 2017-02-23 17:37:28 -0800, , use 312 replaces hoc mechanism used thread keep eye travis build switched away multiprocessing would flake occasionally hopefully issue also remove path allowed anyway early parsing argument,,
929,e20131dac9bd01799ce4397cdf7e67f40001356d,en Smith <binjimin@gmail.com>, 2017-02-23 16:19:52 -0800, , switch file file 309 mostly involves adding additional cast though substantial change default method relocating parser stack longer work bison assumes value memcpy easy way make generated code right thing manually removed wabtbool replaced bool renamed export mutable export_ mutable_ casting invalid value enum trigger ubsan little careful see binary reader.c read_sections illegal forward declare enums include instead designated initializers allowed switch lazily initialized structure instead pretty horrible nice better solution,,
930,adaf0c5b86925975ca2a7048b3057da6414722cc,en Smith <binjimin@gmail.com>, 2017-02-23 13:39:16 -0800, , update testsuite 311 fixed typechecker error br_table must consistent type signature branch target without else signature,,
931,28a34066f1f17b0ce7070835a695f621bdfe59ea,en Smith <binjimin@gmail.com>, 2017-02-17 16:32:20 -0800, , remove wabtallocator 307 complicates code everywhere faster use stack allocator worth trouble maintainability,,
932,6463c765207e37e55af1c6a06ff06071af131c07,en Smith <binjimin@gmail.com>, 2017-02-16 11:02:51 -0800, , fix bug wasm2wast many import 305 fix issue 304,,
933,e077c23cc9e7deb2c6b9733da08e7455d05859c4,en Smith <binjimin@gmail.com>, 2017-02-15 09:06:09 -0800, , add gcc debug cov code coverage build 303,,
934,ae1782d3c6e024c56e12cc405cb19645520a59b1,en Smith <binjimin@gmail.com>, 2017-02-14 11:05:43 -0800, , full typechecking unreachable code 302 typechecking shared validator binary reader interpreter well shared various labeltype enumeration wabtlabeltype fixed invalid depth error max value incorrect removed test useful anymore interp useful even validate without dropping i32.const true branch typecheck bad multi type possible block must specify signature typecheck bad label multi type used test matching signature fallthrough possible block signature,,
935,4492d0cbbb0c008366dec0fd42ec242406ca01fe,erek Schuff <dschuff@chromium.org>, 2017-02-02 14:28:05 -0800, , add missing extern_c_end validator.h 301,,
936,8c9e3047d943425b85db9bba7b8b7dfffdfb946f,en Smith <binjimin@gmail.com>, 2017-02-01 16:46:08 -0800, , update emscripten build demo 300,,
937,4fdbb4647c519a42f3e54ed7a858194780ca2ae4,en Smith <binjimin@gmail.com>, 2017-01-31 17:16:19 -0800, , rename wasm prefix wabt 298,,
938,edb3a471bc249855d5ece45dc21ee69af700b19b,en Smith <binjimin@gmail.com>, 2017-01-30 10:31:43 -0800, , remove assert_ invalid malformed check wast2wast 296 assert_invalid checked wasm interp spec assertion handled interpreter subset also handled wast2wasm useful also bug option parser passing option match could still work prefix valid,,
939,7965a952da0a54063df3b9a96c5a2fb293aa50ad,en Smith <binjimin@gmail.com>, 2017-01-29 19:02:49 -0800, , update testsuite 297,,
940,48402a5e44f99426c62fab94ed2b3ddf36bd75df,en Smith <binjimin@gmail.com>, 2017-01-27 11:00:34 -0800, , implement assert_invalid wasm interp 294,,
941,85947db54125eecc6d6755103b9984828766bc4b,ay Phelps <hello@jayphelps.com>, 2017-01-27 10:52:51 -0800,253, update readme wasm2wast default including debug name 253 295,,
942,3556e8f9fb1f4dff4bd506fa4c2b764ac4e6aea0,en Smith <binjimin@gmail.com>, 2017-01-26 13:17:37 -0800, , resolve name assert_invalid module 293 name resolved assert_invalid module even running wast2wasm check assert invalid malformed add generic version resolve names.c reason general duplicated binding prevent name resolution duplicated export checking duplicated export belongs validator.c resolve names.c add new command type set name resolution succeed case binary module generated writing spec module always write binary format memory buffer even user specifies output file way test module writing error easily fix issue 292,,
943,27e054f1fe4db13e02eaef649bb4bfe71b0efc68,en Smith <binjimin@gmail.com>, 2017-01-24 11:16:36 -0800, , update testsuite 291 also check data elem segment updating memory table check call stack value stack exhaustion allow bound size data segment,,
944,f2f782dde1152057a4aed421ba89578c31ea66b6,am Clegg <sbc@chromium.org>, 2017-01-24 08:51:53 -0800, , fix reading custom section relocation 289 string name target section come relocation count tested currently generate relocation custom section also added binary relocs.txt test generate binary doe,,
945,88e6c3ca7d1bc55c475d8df0bdba3d1a70495104,ichael Ferris <mike.ferris@hotmail.com>, 2017-01-23 16:57:09 -0800, , assert exhaustion 290 teach parser type essentially treat like assert_trap except different name treated differently javascript implement wasm interp case,,
946,ce3d0e454cb27a2417e8f3e1273be1b904dce542,en Smith <binjimin@gmail.com>, 2017-01-23 12:00:24 -0800, , apply name name section globals 287 name section currently provides name function local fix issue 286,,
947,5a658b3f2b90cce2bb3d81994828d29b74e41958,am Clegg <sbc@chromium.org>, 2017-01-23 11:18:54 -0800, , add function name relocation wasmdump disassembly 285,,
948,a6a3ff9398e06690081d8d41353ad3715ee19e7a,en Smith <binjimin@gmail.com>, 2017-01-23 11:02:49 -0800, , remove index assertion binary writer.c 288 assertion useful allow writing invalid module asked cellule pipe is_invalid instead think better remove assertion,,
949,4a139e085cfc2e04776530ab714aa2cf4f01b56d,am Clegg <sbc@chromium.org>, 2017-01-20 11:43:38 -0800, , add symbol resolution wasm link 271 symbol exported one module consumed another module link time import resolved link time removed output unresolved imported remaining output binary considered error unless flag passed also split binary reading logic wasm link.c binary reader linker file,,
950,86d121eb85f4e75fb0207bd5a13891e3d4de7ee9,am Clegg <sbc@chromium.org>, 2017-01-20 09:57:47 -0800, , improve wasmdump command line option 284 improve wasmdump command line option change make wasmdump closely match objdump change verbose detail change raw full content error unless specified previously wasmdump would simply print nothing confusing,,
951,aa49b05e65ebff47fb89c100f2e4e48f080c48a9,en Smith <binjimin@gmail.com>, 2017-01-19 17:01:36 -0800, , pas import_index binary reader import callback 283 passed index confusing callback recently changed pas func global memory table index instead,,
952,149b47d0928583bec6aa2abb2272dbde594964c0,am Clegg <sbc@chromium.org>, 2017-01-19 10:41:19 -0800, , allow name function binary reader 282 ast binary reader still fail many name binary reader allow since spec allows,,
953,313743c0a8ca2f6a40406cb5cb4deceb05c50924,am Clegg <sbc@chromium.org>, 2017-01-18 17:00:38 -0800, , run flake8 travis build 281,,
954,5d2234949d09d9a4c416de0c4e917930c1bf7f15,am Clegg <sbc@chromium.org>, 2017-01-18 15:20:25 -0800, , add support yapf python formatting tool 276 add support yapf python formatting tool chang add .style.yapf define python style using also ran yapf python file yapf git file .py going forward probably add travis test prevent regression probably also switch conventional space indentation used almost everybody outside google,,
955,1403f86b78adf5dafe308ff430a8ee12571fb522,am Clegg <sbc@chromium.org>, 2017-01-18 12:51:06 -0800, , remove duplicate copy section string name 279,,
956,791958df80a1c7e5749a8e2965fcb48256eb6047,en Smith <binjimin@gmail.com>, 2017-01-18 11:08:40 -0800, , always use function index space wasmdump 278 change also modifies binaryreader callback return index module space rather defined space fix issue 277,,
957,48e070f10a361dd596042de7354e3b165272cf38,am Clegg <sbc@chromium.org>, 2017-01-12 05:44:10 -0800, , pas bindir test helper rather full path tool 273 simplifies invocation aid maintainability,,
958,d3c6c973d9c5fe13ad1066d5de47470a41b54943,am Clegg <sbc@chromium.org>, 2017-01-11 06:21:22 -0800, , add support linkable module 228 change add support writing wasm module compatible proposed linking spec http github.com webassembly tool convention blob master linking.md basically mean wast2wasm generate extra reloc section pad lebs code section might require relocation mode activated passing flag wast2wasm also start work wasm link able link module together,,
959,6f4df52f245c2aee9d9d071065d38e200bc2bac5,am Clegg <sbc@chromium.org>, 2017-01-10 06:21:34 -0800, , wasmdump allow raw dump specific section 270,,
960,38d03ba65882ed929e12986d6ee8202a2751ab62,en Smith <binjimin@gmail.com>, 2017-01-09 13:34:30 -0800, , update testsuite 269 also update initialize environment spectest module available,,
961,360d82a2c326777797f9cbef43584e71301dfbe3,en Smith <binjimin@gmail.com>, 2017-01-07 15:12:48 -0800, , wast2wasm write .0.wasm spec 268 running wast2wasm spec without .json file written module written .0.wasm .1.wasm etc change prevent module written,,
962,caf370d73f55e3fead34d937aea436101136e319,en Smith <binjimin@gmail.com>, 2017-01-06 15:03:38 -0800, , wasm2wast read name module default 253 disable behavior passing debug name,,
963,e11c12cd2cb9a41ff30b56a880816c91d7a9e847,am Clegg <sbc@chromium.org>, 2017-01-06 11:18:30 -0800, , remove use python3 newline argument open 266,,
964,339c52e067a9d67098e3727f26488c524021f574,en Smith <binjimin@gmail.com>, 2017-01-05 14:35:23 -0800, , update test run tests.py 255 write intermediate output use real path test name i.e include test python3 fix,,
965,ce155764645df932b0baaa8c1efebbd31bb3ea08,erek Schuff <dschuff@chromium.org>, 2017-01-05 13:29:15 -0800, , add extra cast header remove warning building mode 265,,
966,dc8b34ffae06d51d1a16e65ba01982f0b92fd59d,en Smith <binjimin@gmail.com>, 2017-01-03 15:40:05 -0800, , fail running wast2wasm module 264 fix issue 160,,
967,c94b128b6baebf5a969100d494f781df9f46c215,en Smith <binjimin@gmail.com>, 2017-01-03 15:38:33 -0800, , freebsd alloca stdlib.h 263 fix issue 262,,
968,2177e7517b857d557cbf9b8477c31f96a8ed66bb,en Smith <binjimin@gmail.com>, 2016-12-27 16:05:34 -0800, , fix binary reader bug found fuzzing 261 change assertion apply name failure fix one bug binary reader ast get_label_at keep track last known section code section specified twice custom section,,
969,1448686215848cc581e2bc5a69e6492fceec4f60,aam Barati <saambarati1@gmail.com>, 2016-12-27 11:11:08 -0800,259, update gen spec prefix.js 260 check instead typeerror see http github.com webassembly wabt issue 259,,
970,d0d44702c753f851b094615298a2f4d4e3c21035,en Smith <binji@chromium.org>, 2016-12-24 13:34:41 -0800, , write module invalid segment binary writer write invalid module change allows writing data element segment memory table segment respectively also writes full init_expr even would invalid fix issue 256,,
971,36abbd8a13a2f25db161ddd049c18f2aba835d4c,F Bastien <github@jfbastien.com>, 2016-12-22 16:11:27 -0800, , copied inelegant 254 wording better way,,
972,622b42dced6d793e9d49e9b1fd1d1524defd1387,am Clegg <sbc@chromium.org>, 2016-12-20 13:45:17 -0800, , add couple string slice utility function 252 needed support wasm link utility hopefully landing soon,,
973,1d9e26d68c95c26066ebb75328ca0dd95d4d536b,en Smith <binjimin@gmail.com>, 2016-12-20 11:25:06 -0800, , validate function var elem segment 250 must reference valid function,,
974,050712d06ece5ef934f820a32dad2c75a6320815,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-12-20 00:01:54 +0000, , added symlinks make clean rule broken symlinks left hanging around clean 251,,
975,1a657476e7c7fddda34b05a115415ebe72567f45,en Smith <binji@chromium.org>, 2016-12-15 16:29:17 -0800, , rewrite binary section reader code previous way took advantage fact webassembly section required order ultimately made code complicated fragile change make parsing natural read section dispatch function know parse,,
976,8d0fcc1fe04fd3497795a01c692667d7d47f3441,en Smith <binji@chromium.org>, 2016-12-15 13:56:06 -0800, , update testsuite,,
977,180003ae092d1f083a1142fd5966aa5c24664cf8,am Clegg <sbc@chromium.org>, 2016-12-15 11:50:50 -0800, , add check section end expected 246 add check section end expected,,
978,cdcdda11bbdf2d39340ec9bdb51e6af8e2cb268c,am Clegg <sbc@chromium.org>, 2016-12-14 17:44:37 -0800, , make binary reading writing utility public 245 make binary reading writing utility public mostly refactor make internal binary reading writing utility public available wasm linker prototype working,,
979,55293660eb9f01d50256cb272478e2ad86713c6b,am Clegg <sbc@chromium.org>, 2016-12-13 11:00:47 -0800, , wasmdump improve printing limit 244,,
980,3d97c2f760623427b3cacb2240b44e87f57b345f,en Smith <binji@chromium.org>, 2016-12-12 00:14:29 -0800, , add new fail spec test forgot add last updated testsuite,,
981,aad4356114fe5b13a8fa0756e999d895bf9b8a73,en Smith <binji@chromium.org>, 2016-12-10 14:24:57 -0800, , clang format python3 support gen spec js.py,,
982,767f55f86fc196eb2332e4f72698700810f45618,ichael Ferris <mike.ferris@hotmail.com>, 2016-12-10 14:09:26 -0800, , adjust asserts allow writing invalid module 241 adjust asserts allow writing invalid module teach wasm interp read assert_invalid command running yet implemented,,
983,c025829d6cccfbd2ac94782beebbbee0c0389675,en Smith <binji@chromium.org>, 2016-12-08 15:18:37 -0800, , update testsuite non imported globals used initializer expression block loop label repeated end get_global index initializer expression reference use module index space defined global index space,,
984,3918cc61718aee6301c24f71eda0688d8fba284b,am Clegg <sbc@chromium.org>, 2016-12-09 15:16:55 -0800, , wasmdump add memory index segment info 240,,
985,bbdcd704a0b2de7b04b90ec1ec707a742a3227b9,en Smith <binji@chromium.org>, 2016-12-07 16:13:17 -0800, , use threading multiprocessing run test hopefully fix stability running test travis machine doe run slower still pretty fast,,
986,d93bdf140d99d642f039f4ff797d99baf23a7bd8,am Clegg <sbc@chromium.org>, 2016-12-08 14:55:00 -0800, , wasmdump dump data segements 238 wasmdump dump data segements,,
987,7db16fc3bb0daf170e5afcb2a78267f1d14b23c6,am Clegg <sbc@chromium.org>, 2016-12-07 14:50:58 -0800, , wasmdump improve print table element 236,,
988,dfec7714c1ac9b0ac2b126162f5f6703ed0fd665,en Smith <binji@chromium.org>, 2016-12-02 11:47:12 -0800, , implement assert_ malformed unlinkable uninstantiable,,
989,4a7fb609422e8f36f4339769f0c5901b00fbeccd,ichael Ferris <mike.ferris@hotmail.com>, 2016-12-05 18:43:16 -0800, , escape source filename writing json 235 used path window need escaped valid json,,
990,98355e73ef121b8c3e2a0433e31fc8bac7057c70,en Smith <binji@chromium.org>, 2016-11-08 12:25:58 -0800, , fix gen spec js.py mostly match output spec interpreter,,
991,538f5e61d10b19a0d7283e765589432bbeedcfa8,am Clegg <sbc@chromium.org>, 2016-12-05 10:54:02 -0800, , add binary.h 232 function also useful linker proof concept working,,
992,06f824b34df0a953ad7969db95c28d93c0c41cd5,am Clegg <sbc@chromium.org>, 2016-12-05 10:25:39 -0800, , rename user section custom section 231 rename user section custom section per http github.com webassembly design pull,,
993,4ee278d04664ebdb84ff5a6c7d37515fe1857ea3,am Clegg <sbc@chromium.org>, 2016-12-02 11:25:06 -0800, , improve handling globals wasmdump 230 improve handling globals wasmdump also fix bug on_error handling,,
994,07b6eda70b70e630e65b4d6fcf1263beeaf187c0,am Clegg <sbc@chromium.org>, 2016-11-30 16:18:59 -0800,167, wasmdump improvments 226 wasmdump improvments fix 167,,
995,86a4d836284849d0c5631e5b924c00e3c32d560f,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-28 20:47:44 +0000, , convert test new flat syntax 227 conversion typecheck test flat syntax,,
996,fc0b9b9f5c9c91df0b208644aec2626ba7a3b8bf,am Clegg <sbc@chromium.org>, 2016-11-23 10:40:53 -0800, , wasmdump dump content name section 225 wasmdump dump content name section also add dump verbose flag run wasmdump.py order able test output wasmdump,,
997,438d2ec8b1ce824f726ede46f460689653ace646,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-22 23:11:31 +0000, , converted typecheck test flat syntax 224,,
998,5a1add152460ef952dd94e2f5172fa440af6f3c6,erek Schuff <dschuff@chromium.org>, 2016-11-21 15:17:17 -0800, , update readme.md 223 add window build status document wast desugar tool,,
999,03b08e00e2fbb7f19f97401b52ccfa952d68a7b2,en Smith <binji@chromium.org>, 2016-11-16 10:48:24 -0800, , rename check validate place still check flag though,,
1000,3382c7f9835fef7a3effa81d97d79bb48269ea0f,am Clegg <sbc@chromium.org>, 2016-11-18 16:20:14 -0800, , parse arbitrary user section 220 handle user section interspersed section type add test switch calling section unknown user,,
1001,efc81f5be6ce999c46681d46dd169a845ad670a7,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-17 18:35:14 +0000, , convert test new flat syntax 222 converted parse roundtrip test new flat syntax corrected value corrupted translation parse expr const.txt,,
1002,0029de32e08f23cc59d36dbdbaa38a25f185a3c0,en Smith <binji@chromium.org>, 2016-11-12 13:38:36 -0800, , add separate pas used handled wasm_check_ast clunkier separate pas,,
1003,c73c9100c2e480da4cda6339df01a8341ddbb46d,am Clegg <sbc@chromium.org>, 2016-11-14 16:50:26 -0800, , add test wasmdump 219,,
1004,8414dc0287518b68a875d5ee57d8bc931fc5d092,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-14 22:58:05 +0000, , convert test new flat syntax 217 another batch converted test,,
1005,a87629773e683b659dc4510d9a388eae47f69669,en Smith <binji@chromium.org>, 2016-11-11 19:58:03 -0800, , allow named import name section worked defined function well data section stopped checking section last known section,,
1006,d81e4b9e2f4199db532db9cb85ff2432da2002f5,en Smith <binji@chromium.org>, 2016-11-09 16:53:48 -0800, , allow defined globals without init expr fix issue 188,,
1007,3b19c08891539994fa56bebb899840ade753cdbd,en Smith <binji@chromium.org>, 2016-11-09 16:29:19 -0800, , read data outside section boundary fix issue 177,,
1008,dde402d3a45ce31d5b03a76bb35da771b6642a1b,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-10 01:01:22 +0000, , convert test new flat syntax 211 test converted new flat syntax removed empty line end file load.txt parenthesis return also added new test,,
1009,3845c10fb12a631ea0736122257067d2f8328197,en Smith <binji@chromium.org>, 2016-11-08 10:58:06 -0800, , fix spec binary test also fail wasm_read_file reading file size,,
1010,8b4175461aae1d5f4c771b815b2d9fff21a0c611,en Smith <binji@chromium.org>, 2016-11-08 10:23:52 -0800, , fix spec linking test func_fixups table specified defined index space module always fill function table unitialized value created table include imported globals use defined global index space initializing module globals write table_index istream call_indirect write memory_index istream memory ops tied particular module originally match given module memory table value instruction stream use one wasm interp lazily allocate thread host_args vector rather trying determine maximum size signature,,
1011,1dc1198995535a3f68bdebe4b677c01db58754fd,en Smith <binji@chromium.org>, 2016-11-04 18:37:48 -0700, , fix spec import test properly handle registering unnamed module recently read ast parser register command optional name spec json format implement table memory global implement wasm interp wire module binding implement set module table_index memory_index importing table memory translate get set _global index module environment index space close environment istream writer module read fails destroy output buffer leave extra unused data environment add hash registered name module confused module name internal  add get set _global opcodes wasm_trace_pc add new trap calling function via call_indirect table element initialized via elem segment check limit table memory importing check function signature importing use callback printing error host import let redirect output way error add environment mark similar allocator mark allows backup previous state operation fails successfully reading module supposed fail,,
1012,35a8a975af23c008230e2c61d037007f36a13547,en Smith <binji@chromium.org>, 2016-11-07 12:27:20 -0800, , update spec test,,
1013,bce4b1d722a2bd089f53963d58c2ee2e9720e74c,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-07 21:58:19 +0000, , convert test new flat syntax 205 converted parse test new syntax fixed broken test added test,,
1014,d81e24f3a8749becc5472244109114f9b4ea301f,en Smith <binji@chromium.org>, 2016-11-07 12:04:45 -0800, , simplify default error handler change useful handling error via default binary error handler wasm interp,,
1015,b9db0c03337e309bb9b35ea2b1934e302a10fd26,en Smith <binji@chromium.org>, 2016-11-04 22:15:03 -0700, , remove last occurences sexpr wasm also remove longer accurate comment getlocal test,,
1016,5ddcbb9d871d172fbd496ba772247489a07d7d40,en Smith <binji@chromium.org>, 2016-11-04 22:07:33 -0700, , fix bad include config.c,,
1017,015e83d2ad877b4de17b1547e5febb5e8f660811,en Smith <binji@chromium.org>, 2016-11-04 22:03:33 -0700, , remove wasm prefix source file,,
1018,8a64749912e4d83d1bb5d086eacdda7e5286d33a,en Smith <binji@chromium.org>, 2016-11-03 14:35:44 -0700, , fix export spec test implement get action reading exported globals fix invoke get checking given action named module fix module name binding parsing wast,,
1019,ede1cd7c01234ca491cd0af73f81aab3f8553bc2,wadwo 'Que' Amankwa <citisolo@gmail.com>, 2016-11-04 17:34:42 +0000, , parse test converted 202,,
1020,5a1be55f5a50c1df5cdce6412a589bafa5fab1df,en Smith <binji@chromium.org>, 2016-10-24 14:02:18 -0700, , use new format spec json writer parser previous spec json format defined around module previous spec test would run assertion recently read module addition previous spec writer would write assertion new exported function module run primary reason allow passing returning i64 value necessary test javascript host primary host running spec test wasm interp longer need bundle assertion module also new spec test allow running exported function module recently read module new spec test format defined around command command map directly spec format command e.g module assert_invalid assert_trap etc,,
1021,fe4f7d4f0d85826f8babbda76607654380cfc050,en Smith <binji@chromium.org>, 2016-11-02 16:15:19 -0700, , fix appveyor msys build define dbuild_tests msys include malloc.h msys alloca define prizd prizx msys define strcasecmp _stricmp window initialize command_line_no silence msys warning,,
1022,cb7fd7ded9b78b40f6e511735a74e91cacba98c3,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-11-01 00:51:34 +0000, , update test syntax new flat syntax 193 test converted new syntax,,
1023,b284c48616fff555752b426f3792c0a24aad8ac1,am Clegg <sbc@chromium.org>, 2016-10-31 16:58:52 -0700, , wasmdump improvments 192 wasmdump improvments split three different pass header detail raw nest import correctly show element count part section header rather line,,
1024,5d6cd3e3a37c48327db5c67c5dc0cdf69f25973e,am Clegg <sbc@chromium.org>, 2016-10-31 13:42:45 -0700, , convert wasmtype enum 197 fix bug exposed using explicit type,,
1025,2baa1ecb0b36bea6268c52ea49246aafbed05f02,en Smith <binji@chromium.org>, 2016-10-28 17:49:06 -0700, , update demo example linear format,,
1026,7c55f12d467e1d7820a84a3f4420063070a34081,en Smith <binji@chromium.org>, 2016-10-28 17:23:24 -0700, , update demo link readme.md 0xd,,
1027,e528a622caa77702209bf0c3654ca78456c41a52,en Smith <binji@chromium.org>, 2016-10-28 17:20:32 -0700, , update emscripten demo 0xd,,
1028,10de0ceca2f14faa055e17945797256e1026692b,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-27 22:28:32 +0100, , update test syntax new flat syntax 190 converted test parse asserts modified stdout text reflect new output message caused modification added requested change,,
1029,ac925dc6a11d3f105e1f304a4b2cb255d34ca469,ichael Ferris <mike.ferris@hotmail.com>, 2016-10-25 13:12:35 -0700, , treat warning error window fix use __assume window 184,,
1030,be9de0645a10d16a2de007d97429d775adf3d178,erek Schuff <dschuff@chromium.org>, 2016-10-26 11:29:28 -0700, , move import top python file 191 move import top python file remove extra blank line satisfy appveyor version flake8,,
1031,e963b31c815193ade24334c142f9aab94a4dd9c7,erek Schuff <dschuff@chromium.org>, 2016-10-26 10:23:43 -0700, , add appveyor.yml binaryen 189 add appveyor.yml binaryen update gen emscripten exported json.py comply almost pep8 fix typo,,
1032,58da60e181e125a0b1c09d836fe467b47e2726e3,en Smith <binji@chromium.org>, 2016-10-25 12:12:22 -0700, , reorder f32 f64 ops see http github.com webassembly design pull 828,,
1033,c034df96ff86d5731e3eff0f71bb2d96f7a37305,en Smith <binji@chromium.org>, 2016-10-24 13:44:13 -0700, , add reserved immediate three operator call_indirect grow_memory current_memory take additional immediate must zero mvp used allow specifying table memory index,,
1034,4ec57d83d7869c3f96922debbe0b1e637d1fa2f8,en Smith <binji@chromium.org>, 2016-10-24 11:32:25 -0700, , fix type binary 0xd type unified i32 i64 f32 f64 func anyfunc void use array get type name use instead encode type vs7 i.e signed leb128 max length byte change version 0xd,,
1035,04b5b36fc0cc6746e5939bcafc4e95a7c40722c1,en Smith <binji@chromium.org>, 2016-10-20 13:35:21 -0700, , remap operator encoding binary 0xd,,
1036,134a7599e72f5d496450f8a9c03a992c8d678155,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-25 21:14:37 +0100, , update test syntax new flat syntax 180 converted test test plus fix broken test fixed broken test converted test fixed issue previously submitted interp binary.txt nested if.txt,,
1037,aa78908319b232f8aa7429a468eaf12ae107502a,en Smith <binji@chromium.org>, 2016-10-21 15:14:23 -0700, , create module_bindings hash wasmscript action optional module_var reference module last one,,
1038,5baecee28e617f351fb9bea788c522724bc5fd75,en Smith <binji@chromium.org>, 2016-10-11 17:52:43 -0700, , refactor interpreter linking support create hold module function globals table memory three index space module environment defined module index space match normal webassembly index space distinct function globals table etc environment index space combined index space loaded module defined index space includes defined object imported object used example iterating code section function body specified defined function thread implicitly associated module environment simplify many function signature remove additional argument importable kind imported host module unfortunately since spec test require polymorphic import importing mechanism must callback based interpreting spec test environment module must retained throughout move binding hash code wasm ast wasm binding hash add initializing environment instruction stream independently add initializing given existing add predefined spectest module generic function import still need implement spectest table memory global import,,
1039,7d8c366a9baddadfd655f1cd33748883cf11563c,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-20 21:42:01 +0100, , update test syntax new flat syntax 174 converted another batch,,
1040,ad1f5093d33b986967ff3972eb81590ba292538b,en Smith <binji@chromium.org>, 2016-10-19 16:40:37 -0700, , rename src exe src tool,,
1041,010753c375d7f0a1127f5413b5b0d554d837ffef,en Smith <binji@chromium.org>, 2016-10-19 12:28:42 -0700, , wast desugar reformats desugars wast file,,
1042,f6f9ba8cd819567a4829317d18caeb8861698dc3,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-19 22:38:08 +0100, , update test syntax new flat syntax 172 converted batch test new flat syntax,,
1043,6bde9fb1a7fbb9a0a30a05b0999539d9e1a34d30,en Smith <binji@chromium.org>, 2016-10-19 11:49:52 -0700, , move executable source src exe,,
1044,0eaad66d2b112e00f1474c5517adc300d3871a71,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-18 19:59:20 +0100, , update test syntax new flat syntax 169 converted dump test new syntax,,
1045,eb011a752a2267d59580f81f6962969aa3fe49ab,oo Rong Jie <loorongjie@gmail.com>, 2016-10-18 16:24:29 +0800, , replace prizx 168,,
1046,f9e4c5ad4a7e1261dfe445cf3330507e790c7a5d,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-10-17 19:59:46 +0100, , updated selected test file new flat format 166,,
1047,0f610c594bc97426d7ba368911470872aad7014c,en Smith <binji@chromium.org>, 2016-10-13 13:17:08 -0700, , update testsuite fix test offset align specify hex value data elem segment offset checked order overlapping even bound size zero added new test skip stack guard page unwind,,
1048,7d9d479a2c9fc3eceb8ce8fd2c0636772eb68dac,en Smith <binji@chromium.org>, 2016-10-13 16:26:35 -0700, , allow failure osx build osx build slow run good test unlikely differ linux build significantly,,
1049,b2ea38aa1d7314252a087005db08a95e8ff9c63d,erek Schuff <dschuff@chromium.org>, 2016-10-13 15:48:21 -0700, , add wasmdump list intall target 164,,
1050,7de714088a3e4effd9e1915f725a99f2e9fd23ff,am Clegg <sbc@chromium.org>, 2016-10-12 13:32:50 -0700, , add wasmdump binary inspecting wasm file 161 add wasmdump binary inspecting wasm file run tool part dump test rather using flag wast2wasm,,
1051,9b23a2a9a37f19a1516f270c2bd5d7b86cd14158,am Clegg <sbc@chromium.org>, 2016-10-11 17:06:27 -0700, , add type passed reader callback 147 includes user_data pointer previously passed also includes information current reader context offset binary,,
1052,925feab250d43402cd194d4f24ce632d1d8ea138,en Smith <binji@chromium.org>, 2016-10-07 16:05:11 -0700, , fix emscripten build work 0xc also remove interpreter stuff still flux,,
1053,e90079d4b7fc07136cb05a6b31e473e1f90931da,en Smith <binji@chromium.org>, 2016-10-07 16:29:25 -0700, , add wasmopcodecnt test also rename last place using sexprwasm wasmwast make formatting little nicer,,
1054,244833d60643d0741abb45c24f254884799749a1,en Smith <binji@chromium.org>, 2016-10-07 14:01:03 -0700, , fix start spec test rename call_import call_host move host func callback export call_host wasm_call_host general use function index instead function offset instruction stream modify run_function use function index work host function defined function,,
1055,625ff63a27e704bad3f8721df80bf6f4673e4d55,am Clegg <sbc@chromium.org>, 2016-10-07 14:26:05 -0700, , split funcion 153,,
1056,619868dbb7ec3d8e5d012f5d23c59e6f4e9fb12e,am Clegg <sbc@chromium.org>, 2016-10-07 09:59:55 -0700, , remove trailing whitespace hexdumps 154,,
1057,63765fce649e2e65c4ac029c0ac5e0f1471cc51b,en Smith <binji@chromium.org>, 2016-10-06 14:38:15 -0700, , allow adding elem segment imported table allowed ast checker binary reader,,
1058,61c910bfcf9629db877f4f8a4f445fec282fec7d,en Smith <binji@chromium.org>, 2016-10-06 14:15:19 -0700, , refactor s_opcode_ use function,,
1059,7c6eb0aad7d83a8a6c1e4b2b8aa30741dda309df,arlSchimpf <karlschimpf@gmail.com>, 2016-10-06 15:30:59 -0700, , collect commonly used instruction opcodes 149 collect common instruction opcodes fix non declaration fix issue raised binji 149,,
1060,5063373ceb48f3aa2375385ad1c03bea799c4606,en Smith <binji@chromium.org>, 2016-09-29 16:17:07 -0700, , fix spec test one failing import export linking start fix make sure assign loc_ wasmvar import must occur definition definition kind check load store alignment larger natural alignment always check type stack end check_block way empty block still validated allow one memory table including import allow importing exporting mutable globals loop label signature fallthrough bottom branch target implemented properly ast checker binary reader interpreter top_type_is_any check anywhere type stack previously check look past top label type stack limit may called without enough value type stack example end function end return properly handle cleaning type stack interpreter branching implicit function label rename invoke action place,,
1061,a89f67e3157adfc4d5eaf409d051fb0ac8278d6c,en Smith <binji@chromium.org>, 2016-10-05 00:29:49 -0700, , try evaluate imported globals imported globals initializer expression linked evaluated normal check pas,,
1062,eee405aff7565d8029d7d8bb49f7a065d80bceb2,am Clegg <sbc@chromium.org>, 2016-10-05 09:32:42 -0700, , fix crash bug specified without 145 initialize s_log_stream case since used add test,,
1063,7a2076d5738212a3ad560afa7f8de047d58b843b,en Smith <binji@chromium.org>, 2016-10-04 09:06:16 -0700, , fix bug defining global imported global index space globals merges imported defined local checker context must incremented checking,,
1064,b1c18e30938378b33e09ffc40be0d53c21920b8a,en Smith <binji@chromium.org>, 2016-10-03 13:46:24 -0700, , implement checking malformed module almost checking invalid module difference try decode binary format validation renamed add assert_invalid one print instead add basic test,,
1065,b83292112351cf75318d4bfe79bd4e9e38b9ec9d,en Smith <binji@chromium.org>, 2016-10-02 14:42:33 -0700, , fix displayed index writing wast file also change block comment label instead exit remove text parameter write_end_block always end write decimal float value float constant easier read hex float fix assertion taking account imported globals add new test show correct indexing behavior importing funcs table memory globals,,
1066,c3d962bb38507a1ecd350d84bc68ad2a8f1317a9,en Smith <binji@chromium.org>, 2016-09-30 16:57:12 -0700, , append end opcode end function fix 132,,
1067,4543590fb7c7043bce4c28e405d049f07892c4db,en Smith <binji@chromium.org>, 2016-09-30 16:08:24 -0700, , br_if keep value stack fix issue 131,,
1068,aa7d00b78ebde5bd2881db6678723192ee621a9e,erek Schuff <dschuff@chromium.org>, 2016-09-30 15:46:26 -0700, , implement 136 implement logging_on_ memory table _count,,
1069,05da473037838eb0bced1eda454b804625991583,en Smith <binji@chromium.org>, 2016-09-30 15:16:46 -0700, , br_table depth immediates leb128 fix issue 133,,
1070,7b8a5ca5c81ae3ed8d5487d3a59138a8efffd119,en Smith <binji@chromium.org>, 2016-09-27 13:41:40 -0700, , fix interp test wasm binary reader interpreter.c rename interpreterfunc longer internal detail track number function import share index space defined function restructure handle import type change function table entry function index store function offset signature anymore could imported function change on_call_expr determine whether calling defined function imported function use internal call_import opcode nicer deciding runtime wasm interp.c run_export call defined imported function rewrite run_export function call export doe logging add log info wasm interpreter.c change call_stack value_stack top pointer instead integer convenient interpreter mean convert back forth two calling helper function e.g call_import pas dummy result required rename vs_ value_stack_ cs_ call_stack_ enable interp test run test.py,,
1071,fde8a174fe1e044772ba899294db27aa5075e709,en Smith <binji@chromium.org>, 2016-09-30 14:16:24 -0700, , fix typechecking bug check_n_types given type stack block signature check_n_types check signature top stack example type stack ... i32 f32 i32 block signature f32 i32 block signature type currently allowed supported code previous code wrong checked signature bottom type stack reverse,,
1072,6142e98e4c658ef9f053e06a6425fb3f1df51c59,am Clegg <sbc@chromium.org>, 2016-09-30 12:49:22 -0700, , remove known failure related call_indirect table 134 passing waterfall,,
1073,d565062f22139b19b531347f9eafc08ff11518f7,en Smith <binji@chromium.org>, 2016-09-29 16:27:57 -0700, , parse implemented yet,,
1074,7028a7664e0667c6b477344ae7c29b89942521cf,en Smith <binjimin@gmail.com>, 2016-09-29 23:55:51 -0700, , fix bug checking whether segment valid 130 segment fit initial size max size also building bit arch offset must cast bit int overflow check work properly,,
1075,65d8d1d68d469ff38f753e8c88852ea255b8af1e,gravelle-google <jgravelle@google.com>, 2016-09-29 14:27:00 -0700, , update known test failure 0xc 127,,
1076,e9ed330037f13cfbef0714c81377e1ce4b40028c,arlSchimpf <karlschimpf@gmail.com>, 2016-09-29 11:27:41 -0700, , fix initialization error travis read_table read_memory 125 fix initialization error travis read_table read_memory foce assignment out_value in_u32_leb128,,
1077,7ce7ec279f53aca0908ae81dd9fc2782017451de,en Smith <binji@chromium.org>, 2016-09-28 18:08:57 -0700, , fix asan lsan build,,
1078,8fe9f5c061b799c12607de906f8089173e26d650,arlSchimpf <karlschimpf@gmail.com>, 2016-09-29 07:24:15 -0700, , fix non assert use result sprint_limits 121,,
1079,1627ca663615bac0a6a0ad0dd8f35cefb1ec5cff,en Smith <binjimin@gmail.com>, 2016-09-28 16:43:32 -0700, , update spec test head 122 update third_party testsuite current head binary_0xc branch http github.com webassembly testsuite commit collection test current head spec repo binary_0xc branch http github.com webassembly spec commit,,
1080,c8b7f71358900914f04c031c38a3804f08929b4b,en Smith <binji@chromium.org>, 2016-09-28 15:31:50 -0700, , disable interp spec test make build green enable fix test,,
1081,3b02a673e6e60684c2549a0667495720508e79b7,arlSchimpf <karlschimpf@gmail.com>, 2016-09-28 15:18:46 -0700, , fix travis build issue 117 fix false missing return value fix loop local used assert fix issue raised binji dschuff assume use c99 clean use use implement unreachable,,
1082,1a025f3fd13e790d9d1f2a69d7d7028eaccb3af6,arlSchimpf <karlschimpf@gmail.com>, 2016-09-28 12:09:37 -0700, , add diagnostic tool count usage opcodes wasm file 115 save initial start opcode counter initial implementation opcode counting compilable version opcode counter clean source output clang format new file fix nit suggested binji,,
1083,1133575d48958ef6cd483e7ecef0ed1001d3ae57,en Smith <binji@chromium.org>, 2016-09-26 17:03:05 -0700, , fix interp test still need import,,
1084,c92a909563d12f81d382df8428d5e4e0e2ee91fc,en Smith <binji@chromium.org>, 2016-09-23 14:53:12 -0700, , fix typecheck regress test binary_0xc,,
1085,b93f54dbfa603828eab92ccd7173d6a00d28a81c,en Smith <binji@chromium.org>, 2016-09-23 14:45:02 -0700, , fix roundtrip test binary_0xc also fix writing user defined section,,
1086,fb26a396abc722b4c65ba11775c843bed66d8ae7,en Smith <binji@chromium.org>, 2016-09-23 14:14:44 -0700, , fix binary test binary_0xc,,
1087,3d27314416c5dfbfc6dbd84c4a56e7239da3bb96,en Smith <binji@chromium.org>, 2016-09-22 20:34:06 -0700, , fix call instruction wasm binary reader call instruction call imported function defined function valid index  also noticed call_indirect incorrectly testing instead num_signatures,,
1088,63d7dbb60245136872f2ca521fbd721dc76e0b9e,am Clegg <sbc@chromium.org>, 2016-09-22 19:58:46 -0700, , update dump test binary_0xc,,
1089,b4d2bc2f3fe925a78a7e1ea061106b1f01e8dba2,en Smith <binji@chromium.org>, 2016-09-22 17:39:20 -0700, , parse test porting table etc,,
1090,cca0d93b8ba2a6ea101f18927eddfbe5ec726dd0,en Smith <binji@chromium.org>, 2016-09-22 15:26:18 -0700, , rename import export parse test include func preparation adding import export test table memory globals,,
1091,fbaa7d65ac61ba814b3ac6209a2ce1ac829f7803,en Smith <binjimin@gmail.com>, 2016-09-22 17:42:40 -0700, , fix test parse test binary_0xc 105,,
1092,e84781465fda10f8db3c800de126374e52c1f1d6,en Smith <binji@chromium.org>, 2016-09-21 17:52:41 -0700, , everything compiles multiple todos,,
1093,c560aa303e5dae3b8aa27fcef04ad77a635d3264,en Smith <binji@chromium.org>, 2016-09-21 11:01:06 -0700, , ast writer.c binary reader ast compiling,,
1094,5369f84204d1502ea3cd8e7537fd21c65e730444,en Smith <binji@chromium.org>, 2016-09-19 15:13:58 -0700, , wip checker binary reader writer compile,,
1095,355777d1ac0fe6820ccba45ae2c3789fbc8ccdc5,en Smith <binji@chromium.org>, 2016-09-16 15:50:09 -0700, , wip parser stuff compiles,,
1096,70eebc1677c98f8387aad1a55936f53cb06235ff,en Smith <binji@chromium.org>, 2016-09-13 15:24:33 -0700, , wip,,
1097,42c4998b0fb00815fe7e4fb4e017c477a798c050,en Smith <binji@chromium.org>, 2016-09-13 14:58:29 -0700, , pass test,,
1098,f3976d9bd9b1915d22c83f8bc89eecd7bc948b14,en Smith <binji@chromium.org>, 2016-09-13 14:17:49 -0700, , pass spec test,,
1099,03e62e5d18bcf169505d6aa74451054aa14772e0,en Smith <binji@chromium.org>, 2016-09-06 11:05:06 -0700, , simplifying interpreter interp test pas,,
1100,1fdcfa2b9cac4101f5ea0134c4ec2d9769bd7d05,en Smith <binji@chromium.org>, 2016-09-02 14:44:58 -0700, , wip fixing call_indirect need rewrite interpreter think,,
1101,de342e989d2892416771cd9e2b87c87abae776c1,en Smith <binji@chromium.org>, 2016-08-26 14:15:06 -0700, , wip table memory,,
1102,46b98638b8d0d4fc20ea0c3f53fda2abb43da971,en Smith <binji@chromium.org>, 2016-08-23 12:54:19 -0700, , implement globals,,
1103,3c69386308638f004a659b0f65a984a9e6fc9074,en Smith <binji@chromium.org>, 2016-08-22 15:28:35 -0700, , fix parse module binary module test,,
1104,94cd8fd68fa1e7a234ffce1743b2933f2dbc1eab,en Smith <binji@chromium.org>, 2016-08-22 14:37:07 -0700, , update testsuite rebase test,,
1105,4197c06ab756cdc7c3c1cd79c219fb8a9002a342,en Smith <binji@chromium.org>, 2016-08-22 13:39:08 -0700, , fix interp test move spec test mostly requires proper implementation drop tee_local wasm binary reader interpreter.c wasm interpreter.c,,
1106,9b764f3d9681b1f1fa2bf2d37d00ecf1a0b14144,en Smith <binji@chromium.org>, 2016-08-18 17:01:50 -0700, , fix regression test,,
1107,3d3d144121d9b2ac77de0c8db4b0e260af7b9eee,en Smith <binji@chromium.org>, 2016-08-18 16:58:34 -0700, , fix roundtrip test explicit implicit,,
1108,51d67859ca43abd2968666b69d18866fdd497312,en Smith <binji@chromium.org>, 2016-08-18 15:36:39 -0700, , fix binary test,,
1109,6e004f638b8d9929d32b12305edd4b9c9f9aa4b8,en Smith <binji@chromium.org>, 2016-08-18 13:52:03 -0700, , fix typecheck test also made type check error bit nicer using opcode name,,
1110,0bcaaf67850f3d6bed35d02c22a8d873ffe395cc,en Smith <binji@chromium.org>, 2016-08-17 16:46:39 -0700, , fix dump test update binary version 0xc,,
1111,b8793f6aabd4932114674443fd42c3448036044c,en Smith <binji@chromium.org>, 2016-08-02 14:36:57 -0700, , wip stack change enough pas parse test including roundtrip test change includes new drop tee_local operator well type checking full stack machine parser also updated allow new linear text format,,
1112,47cd3242fee70aedef3a2d595ee23fa2fe0efc28,am Clegg <sbc@chromium.org>, 2016-09-28 18:10:03 -0700, , add install build target 123,,
1113,79b57d3755f783169a3b1820e49e017b48183ed4,im Caswell <tim@creationix.com>, 2016-09-28 00:47:32 -0500, , use recursive clone example make easier 114,,
1114,1492e6c7dab33b1692872610bfa3f88c579104cb,erek Schuff <dschuff@chromium.org>, 2016-09-27 08:57:46 -0700, , update travis link wabt 112,,
1115,dd778ef5be052af7ce3840ad86124771af221ee7,erek Schuff <dschuff@chromium.org>, 2016-09-26 17:26:00 -0700, , introduction wabt 111 introduces name change sexpr wasm prototype wabt readme.md run tests.py update travis yet,,
1116,86c043d6bd7e5708f9b07eeb2a0d1b315a9d374f,am Clegg <sbc@chromium.org>, 2016-09-22 18:39:37 -0700, , fix broken run test target 104 followup 102 renamed executable file propagated rename tool test runner also fix run test target passing wrong argument name run_tests.py script,,
1117,fd48108205003e96ea2d87586ba23bc907b020ff,am Clegg <sbc@chromium.org>, 2016-09-21 16:30:00 -0700, , improve error message bad file version 103 newcomer obvious version wasm interp expecting provided,,
1118,66167ac6beab040e8a30d3bc122481a45729142f,wadwo 'Que' Amankwa <jofreezy@hotmail.co.uk>, 2016-09-21 22:44:10 +0100,100, rename sexpr wasm binary 100 102 renamed sexpr wasm wast2wasm renamed wasm wast binary wasm2wast added command generate symlinks renamed target fixed issue causing test break fixed name error travis test script corrected repo name change int readme renamed binary two test added platform check cmake symlink generation unix reverted change test file due breakage,,
1119,fd0ac04db229dadee125857cfdad7c1069d64fd8,en Smith <binji@chromium.org>, 2016-09-16 16:06:35 -0700, , remove local remapping originally implemented required binary format feature complicates writing binary perhaps could added separate pas part standard binary writer,,
1120,4c4e59e0674a157de9b4414542c182fb2ee0b21c,en Smith <binji@chromium.org>, 2016-09-06 09:32:27 -0700, , fix emscripten build newer cmake maybe newer emscripten sure,,
1121,57d700b4c01efa7746e9d53695849aa8ecfca721,en Smith <binji@chromium.org>, 2016-09-06 09:23:19 -0700, , update contributing point readme.md,,
1122,8f1d86a7d3d2365339ba288db8bd25de4d227815,en Smith <binji@chromium.org>, 2016-09-06 09:21:16 -0700, , remove squirrel stuff interesting experiment maintained tested,,
1123,4b050f2a60a4e2d1b5f7cc1d5454b25ea921a372,en Smith <binji@chromium.org>, 2016-09-06 09:19:07 -0700, , disable msan build travis seems stopped working sure yet,,
1124,294622a979ffae3b72394cc5120257fbd2c88e2e,en Smith <binji@chromium.org>, 2016-09-05 19:22:48 -0700, , increase yymaxdepth bison parser fix memory exhausted error relatively small file since grammar right recursive parser stack depth easily increase default yymaxdepth 10000 fix,,
1125,1978d8fd6a0360d4733588079e5129518d189d43,en Smith <binji@chromium.org>, 2016-09-01 11:51:41 -0700, , cleanup python script bit,,
1126,a0a53eace2efd3e07cb584cd6f360058bb4dce17,en Smith <binji@chromium.org>, 2016-08-30 16:42:42 -0700, , python3 support,,
1127,e771a3b9d3ac4ea19ff3be45983276b844213d4e,ahaas <ahaas@google.com>, 2016-08-23 09:49:15 -0700, , fix error message generated invoke function error message wanted print file name line number value passed invoke additionally propose increase passed failed counter invoke,,
1128,2d375e8d502327e814d62a08f22da9d9b6b675dc,en Smith <binjimin@gmail.com>, 2016-08-04 20:15:18 -0700, , update testsuite handle implicit func type change 7c482b1a spec repo requires implicit function type created creating new func import type explicitly specified specified example  func param i32 import foo bar result i32  previously done sexpr wasm writing binary type referenced call_import handled earlier since signature defined module made function signature shared module function type tricky part function type explicit signature specified  func type param f32 ...  case need keep explicit signature around long enough checked function type must owned function flag specifies case simplify code ast reverted many change introduced 73e5bc7d function declaration signature always valid access resolved specified func type instead explicit signature change bug interpreter f32.demote f64 rounding given value close positive negative f32_max added update spec tests.py easily update spec test test interp spec .txt file third_party testsuite .wast previously would manually,,
1129,31dcad7ff987455bae219b31e4d6c76d78634315,ichael Ferris <mike.ferris@hotmail.com>, 2016-08-04 16:23:21 -0700, , fix warning visual studio,,
1130,2338246f9ea098d9581279ffcb20c0a980c3065a,en Smith <binji@chromium.org>, 2016-07-29 15:32:18 -0700, ," fix bug floating point min max f32.min 0.0 0.0 0.0 test using f32.eq inside assert_return case since f32.eq 0.0 0.0 test passing change fix assert_return always perform bitwise comparison testing floating point value fix interpreter properly handle 32,64 min max operation case",,
1131,1347a367c34876bfe92562f244a8c8b770372479,en Smith <binjimin@gmail.com>, 2016-07-20 15:53:01 -0700, , use wasm wast verbose flag verbose flag hooked anything display info reading binary file could useful debugging,,
1132,5910843c4c03f803f7b76a69e19049cc36d3fbfb,en Smith <binji@chromium.org>, 2016-07-19 15:02:17 -0700, , update prebuild ast parser changed 73e5bc7d,,
1133,73e5bc7dd4a4e5bc7fcb842a35b91ad587f80fcb,en Smith <binjimin@gmail.com>, 2016-07-18 16:34:12 -0700, , doe always set sig prior change ast parser would always set sig even function explicit signature i.e used function type variable instead make flag confusing clear return false sig valid change make sig set explicit signature correct way get function signature call check whether func type check explicit function signature,,
1134,b487574ba29dd85c64be6aa1406b58084b14b8b4,en Smith <binjimin@gmail.com>, 2016-07-06 15:25:09 -0700, , function implicit block scope func valid function introduces implicit block scope change also update testsuite test behavior,,
1135,35600ece919c127db39e625be103a149746fb7b1,en Smith <binjimin@gmail.com>, 2016-06-24 13:46:22 -0700, , update testsuite fix test modify ast parser disallow order param result local allow parsing var integer int64 lookup fail later fix interpreter logic determining whether adjust stack correctly handling case unreachable used expression value stack adjusted value actually produced behavior required br_table return add nat token lexer parser integer value without sign,,
1136,bb66db55c1767cb0cded918ef530f38aa956ffe9,en Smith <binjimin@gmail.com>, 2016-06-17 13:36:59 -0700, , remove javascript engine testing really appropriate place handle wasm wast wasm interp least verify tool internally consistent,,
1137,35be50b28012f0efaaa55775529602dab76c6988,ichael Ferris <mike.ferris@hotmail.com>, 2016-06-17 11:32:27 -0700, , test verbosity added option stop prompt every error continue execution added option multithreaded execute test series added prompt rerun failing test verbose info happened added option print cmd run script see command run console useful repro error local machine make sub script run tests.py use output directory created function runmultiprocess removed option multithreaded favor job code review nit fix,,
1138,e01db9c7cb1135b0aca0abf13a4e6baf013878db,ichael Ferris <mike.ferris@hotmail.com>, 2016-06-17 11:26:30 -0700, , fix window fix build window changed stderr stdout binary mode window avoids printing cause test fail make sure print backward slash .json file explicitly pas program name print usage instead getting argv format different linux window forward slash backward slash .exe window failing lot baseline check test suite read wast file binary instead text mode buffer offset file offset unreliable text mode added support carriage return searching line offset test tool search binary using .exe window account backward slash spec.js fix diffing file ignoring endline unstable window platform fix,,
1139,88acd087e8b758f72a60f07e79c6febf37f0b84e,ichael Ferris <mike.ferris@hotmail.com>, 2016-06-08 10:09:25 -0700, , teach test script ch.exe,,
1140,e8f8aa4eddc2e27251690027263b61b9138dbcd7,æ¨ <wangchenclark0512@gmail.com>, 2016-06-07 16:49:52 -0700, , update step cloning,,
1141,f2edae202e803d729fe5e6a0b8a06d6ea811d286,ominic Chen <d.c.ddcc@gmail.com>, 2016-06-02 09:10:22 -0700, , fix bug found afl asan,,
1142,9beb0a13c13cf7d43169c095ec14654f0123f659,en Smith <binjimin@gmail.com>, 2016-05-28 05:13:07 +0200, , add flag turn ast checking sexpr wasm check disables checking except validating name without generate binary file check assert invalid skip running assert_invalid check spec test file,,
1143,60997924af87b2bf3956928dac4257b370c7c6d8,ichael Ferris <mike.ferris@hotmail.com>, 2016-05-24 14:57:30 -0700, , fix build win32 fix implementation ctz64 clz64 popcnt64 win32 fixed warning msvc fix build window wasm interp,,
1144,4cf8f5e7dea634ed1d37691e25310baba207f332,en Smith <binji@chromium.org>, 2016-05-24 23:30:22 +0200, , update testsuite,,
1145,088144998c728ee4a89ce222a7fb6b0dc11d201c,en Smith <binji@chromium.org>, 2016-05-21 10:29:44 -0700, , generate apply label if_else block,,
1146,df1ace01fdad71f4cdedbcec279cc52727c95b54,en Smith <binji@chromium.org>, 2016-05-21 02:08:53 -0700, , remove checking allocation failure code cleaner fail setjmp,,
1147,9702778b428574674e89cd7c8ffde427373d63e8,en Smith <binji@chromium.org>, 2016-05-18 14:28:38 -0700, , update spec test parse memory page uint64 need check whether invalid assert_invalid one spec test value update wasm_max_pages 65535 65536 add new spec test binary.wast break drop.wast typecheck.wast couple added added .txt file test directory,,
1148,d9534b10a85366a02425cf2f9ebfd2d939a7fc27,en Smith <binji@chromium.org>, 2016-05-16 15:11:52 -0700, , always display stdout test runner throw exception executable fails even happens still want display stdout,,
1149,6f6c784e4026c19d1bef49f75ccafa1e114414cb,en Smith <binji@chromium.org>, 2016-05-16 14:33:20 -0700, , update javascript demo link,,
1150,2bb13aa785be9908b95d0e2e09950b39a26004fa,en Smith <binji@chromium.org>, 2016-05-16 14:29:22 -0700, , use new javascript api demo also add download button,,
1151,0d9c4f8824b5fb085cc5ae42d6f8366e8f8e256d,en Smith <binji@chromium.org>, 2016-05-09 12:35:34 -0700, , better javascript api,,
1152,ef1fec2db0956844dbf394f4126cd8a3017cdf5d,en Smith <binji@chromium.org>, 2016-05-07 14:59:42 -0700, , add script generate emscripten exported.json would nicer automatically integrated build ,,
1153,022bfb2cd138d367bce258f15c2d98a23aeae782,en Smith <binji@chromium.org>, 2016-05-13 11:23:36 -0700, , fix update match spec test syntactic sugar function export func export ... fix bug source text char 128 char vs. unsigned char fix bug type checker empty expression list,,
1154,0d8e5d61447c95a210876714ace212791cf08e65,en Smith <binji@chromium.org>, 2016-05-10 15:13:53 -0700, , fix build script use archive git clone specific commit sha download source archive github,,
1155,e9d5cbf1284ddc12f9cb24d4cb9e78aa2052f415,en Smith <binji@chromium.org>, 2016-05-11 16:38:46 -0700, , defer decoding binary module assert_invalid decode binary module parsing error displayed early instead store binary data ready decoded done assert_invalid assume module actually used otherwise convenient always wasmmodule decode directly parsing ast,,
1156,f8cc693231149115316774eb29bd0aaf03378426,en Smith <binji@chromium.org>, 2016-05-10 13:58:27 -0700, , update gen spec js.py work spidermonkey spidermonkey requires first argument typedarray arraybuffer,,
1157,b6279218307de6073c80413e79c4e1946bee18bf,en Smith <binji@chromium.org>, 2016-05-10 13:53:42 -0700, , update readme.md engine agnostic,,
1158,7805eab628a666979f2f95b0bcc93ab4c60da818,en Smith <binji@chromium.org>, 2016-05-09 17:24:01 -0700, , update run tests.py script support,,
1159,52223631265a9436e3751f0a037d68e16fcbd9fc,en Smith <binji@chromium.org>, 2016-05-09 16:52:22 -0700, , script building loading spidermonkey,,
1160,051cbf7d40391907dba9e7b395b347a6e888dbf3,en Smith <binji@chromium.org>, 2016-05-09 12:37:36 -0700, , parse split segment string module binary,,
1161,92bfdd8738aafda989ef6169a9c70e1edf776dc7,en Smith <binji@chromium.org>, 2016-05-07 13:38:03 -0700, , use one library libwasm.a anything used linked anyway also make internal function static,,
1162,cdac11e839e116059b8f69c0313d0024ededb9b0,en Smith <binji@chromium.org>, 2016-05-07 12:37:37 -0700, , add convenience stream function    also use stream wasm interpreter function,,
1163,58177f70bc1e72d59f8ec87c9e8300d644849996,en Smith <binji@chromium.org>, 2016-05-06 12:56:19 -0700, , fix memory leak expr ast reader label_stack,,
1164,a637f3bcd73bde91807ae2344b76535852f1deff,en Smith <binji@chromium.org>, 2016-05-06 12:17:21 -0700, , fix binary reader bug popping past label also add test make gen wasm.py line comment,,
1165,1392c089034327d69a09fce1bb318f0f4e747473,en Smith <binji@chromium.org>, 2016-05-06 11:52:04 -0700, , better logging wasm binary reader ast.c,,
1166,5ac687030aa04fe70f186122e19a117f19df952e,en Smith <binji@chromium.org>, 2016-05-06 01:02:47 -0700, , update link emscripten demo newest version,,
1167,decc58fed3b2de7e952a143b87ccf7e0b38da36c,en Smith <binji@chromium.org>, 2016-05-06 01:02:04 -0700, , minor fix emscripten demo,,
1168,5b49663185fbf0e33fdfeacef07e166b98ac1e34,en Smith <binji@chromium.org>, 2016-05-05 17:57:21 -0700, , osx travis build,,
1169,f9f344cc486795a058f474a6e7eca669cf01864c,en Smith <binji@chromium.org>, 2016-05-05 17:20:03 -0700, , download upload d8.sh script support macosx also remove readlink work osx,,
1170,8447d7bda7cd80f0a5d44bfb8a6824dff3af9e47,en Smith <binji@chromium.org>, 2016-04-29 08:46:41 -0700, , fix interp unary test sqrt 100 return nan instead nan mac spec test make look like sign non deterministic,,
1171,ca9d6e81a01a731fda6be3140c38e176966aedc6,en Smith <binji@chromium.org>, 2016-05-05 16:19:24 -0700, , set quiet bit nan keep nan payload see discussion http github.com webassembly spec pull 282,,
1172,da449869d09d61e2f01711ca770d3d523379ab62,en Smith <binji@chromium.org>, 2016-05-05 15:10:37 -0700, , fix prebuilt re2c lexer ecc49ca5,,
1173,ecc49ca5c193db3279a0adc8b9c7e2c631fa3ced,en Smith <binji@chromium.org>, 2016-05-05 14:42:44 -0700, , fix bug displaying source line error scanning file offset source line source file reuses code scanning memory buffer line found buffer return wasm_error expected also need update currently found line keep scanning,,
1174,8f0ab76f7b898f257e09f32f6a8655e56fb08539,en Smith <binji@chromium.org>, 2016-05-05 11:42:07 -0700, , copy findre2c.cmake cmakexfind make easier build user run git submodule update init,,
1175,65a4e0d29a5bea9057bbb4a1e5bd7d7299ff5f55,en Smith <binji@chromium.org>, 2016-05-03 14:59:32 -0700, , remove wasm prefix non extern stuff stuff includes function macro enums structs fit nicely commit line,,
1176,0dd2d7f2374f422d344255f77450fb1616fd2fb9,en Smith <binji@chromium.org>, 2016-05-03 15:15:02 -0700, , put ply output file directory,,
1177,91862328438168cfc43e817badabd0a32c67f5ce,en Smith <binji@chromium.org>, 2016-05-03 12:41:47 -0700, , fix bunch shift bit wasm ast checker shifting sign bit wasm binary reader interpreter float div zero wasm interpreter float64 float32 demote wasm interpreter,,
1178,f4b7778686acde784f0f6ee0612c2b7043f0763b,en Smith <binji@chromium.org>, 2016-05-03 12:40:45 -0700, , add exe dir flag run tests.py make much easier run test executables given directory test run tests.py exe dir clang debug ubsan,,
1179,8090e5535912b3e8d1f484716c85662cefa4fc88,en Smith <binji@chromium.org>, 2016-05-03 12:40:02 -0700, , move cmake option top file also make sanitizer build option instead passing flag makefile,,
1180,d57f7bb8d8b5c8dc3317881ae42382b71524e550,en Smith <binji@chromium.org>, 2016-05-02 15:57:52 -0700, , fix shifting subnormal exponent bit,,
1181,f763ea9eafcef0465289bec046374728111f8b05,en Smith <binji@chromium.org>, 2016-05-02 15:55:21 -0700, , ubsan trap error,,
1182,9e03d853eca4653e6d45a5979105fed647fd2910,en Smith <binji@chromium.org>, 2016-03-28 07:31:24 -0700, , ubsan fix bug shifting bit,,
1183,3a91692673af5181ccd08497d6a99141f90003a8,en Smith <binji@chromium.org>, 2016-03-27 12:51:45 -0700, , ubsan build need fix one bug,,
1184,30e5f6f6b572bb8d522849f5ff93ff6f6b01f2eb,en Smith <binji@chromium.org>, 2016-05-02 11:15:30 -0700, , disallow without depth wast format allowed spec format,,
1185,14fd2cb745b0de5dad7619f2361095ee132ee1ef,en Smith <binji@chromium.org>, 2016-05-01 01:59:37 -0700, , use linked list expression list faster simpler generally memory also make inserting expression much nicer,,
1186,9644d80ffb5bd37fba625cd3d4a8cd397c82dd38,en Smith <binji@chromium.org>, 2016-04-30 13:37:39 -0700, , create wider shallower travis build matrix,,
1187,6d58f7d346561eb61eee157eb84682df6bd5052f,en Smith <binji@chromium.org>, 2016-04-29 17:39:23 -0700, , binary reader test also check wasm_max_pages wasm ast checker,,
1188,346c4dcb7e83ae0cba1654e071a90d9a53211e6a,en Smith <binji@chromium.org>, 2016-04-30 12:32:08 -0700, , cleanup check_alloc macro always use implicit ctx variable remove unused variant e.g,,
1189,4fcde32a25d1619d647ba2858f7538a923069693,en Smith <binji@chromium.org>, 2016-04-29 14:12:33 -0700, , simplify ast checker storing module func ctx also uncovered bug error message name calling function displayed rather callee,,
1190,07bdd0a29f3db28a18bd1dcaf743f892a5835055,en Smith <binji@chromium.org>, 2016-04-29 11:51:42 -0700, , fix print format bug look like spotted gcc,,
1191,1d8369181295be464d966c48a46c43d5608ccd1a,en Smith <binji@chromium.org>, 2016-04-29 11:45:10 -0700, , update fix test,,
1192,2ccfad662051a8d46d475c5c84cae969f1ee39d4,en Smith <binji@chromium.org>, 2016-04-27 15:05:29 -0700, , add run gen wasm.py used generate .wasm useful testing binary reader,,
1193,f9e1967acfaf7a92178411e3699e9b5d8b0ee745,en Smith <binji@chromium.org>, 2016-04-25 16:25:56 -0700, , fix asan found bound read interpreter,,
1194,8cadb37b685c538cb4f8701d4224d5f2925053c0,en Smith <binji@chromium.org>, 2016-04-25 15:56:48 -0700, , arity call break return,,
1195,bcc7c471e160a6648abf61b1860072b25a9bfbc6,en Smith <binji@chromium.org>, 2016-04-25 14:02:22 -0700, , rename memory_size current_memory current_memory grow_memory return page size byte size also update testsuite fix couple spec test disable spec test hacky way binary_0xb support landed yet easily test,,
1196,4b65b16cba2eb3aa173848377079c0523c9c896f,en Smith <binji@chromium.org>, 2016-04-25 06:54:13 -0700, , update dump test,,
1197,ee599aecbbc6d1d61bfb7485ba40c404937c4727,en Smith <binji@chromium.org>, 2016-04-25 13:21:58 -0700, , support br_table value,,
1198,ec184a350f52f96ea11130822967d03a9b16c68a,en Smith <binji@chromium.org>, 2016-04-25 07:33:49 -0700, , use new type section format,,
1199,8ff085d37bb107cabe7e9305553f7c3179e4ded8,en Smith <binji@chromium.org>, 2016-04-25 07:11:01 -0700, , move section length section name,,
1200,8b8647dc8f4cc032d5ce932fd4df22ff3714086d,en Smith <binji@chromium.org>, 2016-04-25 07:06:51 -0700, , use short section name,,
1201,355ef8dfe1a63b6902d71018684ff69fe6b46922,en Smith <binji@chromium.org>, 2016-04-25 06:52:45 -0700, , switch wasm binary reader ast postorder,,
1202,31364c01588d9f67f8f90755fca578fbbd62db48,en Smith <binji@chromium.org>, 2016-04-24 03:14:56 -0700, , post order interpreter pass test,,
1203,712942698bd2a26d5274634854bb2fe9f0c879e8,en Smith <binji@chromium.org>, 2016-04-23 23:05:01 -0700, , use post order style,,
1204,aace63e852422d9da89d1ed034d13b8965fe6205,en Smith <binji@chromium.org>, 2016-04-18 15:34:53 -0700, , wip,,
1205,df2b6b6f8f36dfb903eaa32aa597665635107604,en Smith <binji@chromium.org>, 2016-04-28 23:42:40 -0700, , remove generation date prebuilt re2c lexer,,
1206,98729df534b55d495d0040266daaaf96ed41b9f9,en Smith <binji@chromium.org>, 2016-04-28 21:26:51 -0700, , rename lexer astlexer parser astparser match file nicer lexers parser added also remove reference flex flex lexer,,
1207,8ef2f014f80ad118c901db4c65d4feb0baf878da,en Smith <binji@chromium.org>, 2016-04-28 20:33:06 -0700, , add printf format attribute fix format bug,,
1208,310ab15d442195fdee0ce0de20ff79ab054c19d6,en Smith <binji@chromium.org>, 2016-04-28 16:00:23 -0700, , compute line offset demand storing line offset every newline expensive large file example angrybots million line,,
1209,e8100f790f25142d862a73f10495215fe70e4c48,en Smith <binji@chromium.org>, 2016-04-27 15:05:29 -0700, , add run gen wasm.py used generate .wasm useful testing binary reader,,
1210,5ccfea1eff9dd9fb71e70479216e1f478429f9be,en Smith <binji@chromium.org>, 2016-04-27 17:09:37 -0700, , fix memory leak interpreter look like started showing refactoring last,,
1211,c4e0efa14686e4862e95449786dda75c96baed93,en Smith <binji@chromium.org>, 2016-04-27 13:34:56 -0700, , cleanup run .py script,,
1212,f3fc1d28b23808d503dca9814ff354a38380a911,en Smith <binji@chromium.org>, 2016-04-26 11:50:28 -0700, , add gen spec js.py generates standalone test,,
1213,b3699b2378ed56cf266ecc127b5f049cfd50bb32,en Smith <binji@chromium.org>, 2016-04-21 15:49:51 -0700, , update src wasm lexer.c work older re2c primarily replacing default rule feature added re2c 0.13.7 yysetcondition naked supported yet either,,
1214,2f3625e382c0b1e2e826d4c2c509ab43a4f4e59b,en Smith <binji@chromium.org>, 2016-04-19 14:23:05 -0700, , lex using re2c instead flex,,
1215,ef794aaa57705ff4b7015a4f2b78ca8ea4ff5af6,en Smith <binji@chromium.org>, 2016-04-18 12:06:08 -0700, , remove arity check type checker see similar spec change http github.com webassembly spec commit b64d219a temporarily break labels.wast spec test testsuite updated fixed,,
1216,ff4c333f1659f2b35a1176350d72e2b8e8850424,en Smith <binjimin@gmail.com>, 2016-04-18 01:54:36 -0700, , link readme.md online demo,,
1217,306c3c68044004962315e90e0bd8bf803f0487db,en Smith <binji@chromium.org>, 2016-04-18 01:39:34 -0700, , update libwasm.js include,,
1218,294eab56dbcea5d49c2145b5c161906d783c9136,en Smith <binji@chromium.org>, 2016-04-18 01:37:32 -0700, , switch demo use correct file,,
1219,cbd283ada1e6d9915bea1e02560e2ef8700123d1,en Smith <binji@chromium.org>, 2016-04-18 01:30:24 -0700, , demo stuff need call binary writer work properly make .wast .wasm link add another example bunch section clamp length error caret line,,
1220,36a1f6a90c854523b80fa3166facb08e65dcfdbd,en Smith <binji@chromium.org>, 2016-04-18 00:47:14 -0700, , fix emscripten release build emscripten release build load module memory asynchronously mean call module function loaded,,
1221,187be92a30fe1e409d019de0dac7954428e64f5f,en Smith <binji@chromium.org>, 2016-04-17 18:49:57 -0700, , work demo look pretty good,,
1222,4bd1fede657db68a98522c39be866f384fd2a576,en Smith <binji@chromium.org>, 2016-04-17 15:06:41 -0700, , display binary writer log demo,,
1223,31633c76efabe9264565dfe284c6975cc9837227,en Smith <binji@chromium.org>, 2016-04-17 01:18:31 -0700, , binding,,
1224,e2c4f2cbc772dd9aadd2922e90e62481867f8f88,en Smith <binji@chromium.org>, 2016-04-16 14:46:02 -0700, , add simple emscripten demo,,
1225,525072bf2f2647436147474bdb8be25fc6660330,en Smith <binji@chromium.org>, 2016-04-15 10:11:02 -0700, , emscripten build library binding,,
1226,cd5b8f5494073fc0a35d70aa2b1091f3742dc096,en Smith <binji@chromium.org>, 2016-04-17 13:23:15 -0700, , add wasmstream refactor writing,,
1227,3417080552bf58bd74196308dbf73ebe4ef62102,en Smith <binji@chromium.org>, 2016-04-16 13:31:18 -0700, , fix local name checking regression 21deffc6,,
1228,28251da7164c27f1ddf239f92558b6c6c605dc7e,en Smith <binji@chromium.org>, 2016-04-16 01:43:08 -0700, , lex buffer move error formatting lexer,,
1229,318057e29ad7de266fd6fd17d9706ef172fd25d7,en Smith <binji@chromium.org>, 2016-04-15 01:57:15 -0700, , add help text test,,
1230,30a62b7348a529e79008b6bf4bd72783dcd10d7b,en Smith <binji@chromium.org>, 2016-04-15 01:20:24 -0700, , error handling binary reader also logging cleanup binary reader,,
1231,7c1ebc333ff50a7b8c0a5e6469ce518c9a3d47bd,en Smith <binji@chromium.org>, 2016-04-14 19:03:10 -0700, , move parser error printing callback also ast checker,,
1232,09b3e6839f60e9f43836da4e98ae02d90381ac18,en Smith <binji@chromium.org>, 2016-04-14 22:18:35 -0700, , generate label name finer grained test,,
1233,dbfd60b099753b34139bd99af0201cbc0da96be7,en Smith <binji@chromium.org>, 2016-04-11 11:32:52 -0700, , generate name unnamed ast node also add flag run roundtrip writing wast output stdout useful testing,,
1234,2a18cfc94c7a1db62466554d2b1190e28fd768d3,en Smith <binji@chromium.org>, 2016-04-14 20:58:30 -0700, , rename traverse visit,,
1235,fb0f7da9c1ba977aa68f5e01346306ae13b8f59a,en Smith <binji@chromium.org>, 2016-04-12 12:42:09 -0700, , share func import duplicated code wasmfunc wasmimport allow specify function signature function type change introduces shared also allows remove,,
1236,04140042f96a68f3610b4a24fdf456b5fac9792e,en Smith <binji@chromium.org>, 2016-04-12 02:02:46 -0700, , simplify wasm binary writer,,
1237,21deffc665cbd0fcd43f4503622d1068e65cef2a,en Smith <binji@chromium.org>, 2016-04-12 01:30:17 -0700, , remove keeping sync params local lot work really help much anyway often whatever lookup need one array,,
1238,51c0f0ab7f8fb3a4990e042a63b233b24fa4637e,en Smith <binji@chromium.org>, 2016-04-10 10:59:02 -0700, , add memory.setblob memory.getblob function,,
1239,45fbe42f92c2d8531911f02556a812dd043299e1,en Smith <binji@chromium.org>, 2016-04-09 01:20:50 -0700, , use wasm_succeeded wasm_failed,,
1240,8b1401c735e0c9df6f964e730f8ef2978594e6c8,en Smith <binji@chromium.org>, 2016-04-09 00:34:44 -0700, , use wasmbool,,
1241,556c4945bea70784389a27c07a80374605ec9434,en Smith <binji@chromium.org>, 2016-04-08 20:52:58 -0700, , better error handling squirrel wasm wasm import function raise error propagate back interpreter error caught wasm caught squirrel major change prevent calling error handler multiple time store currently propagating error soon see unwind see call error handler nasty hack seems work,,
1242,95dce1b2fb8c819b2d5c23120dbd1913371e9c5e,en Smith <binji@chromium.org>, 2016-04-08 14:46:40 -0700, , export module memory squirrel,,
1243,3d63b97aec0916091fbbbbb12a4830714c716b91,en Smith <binji@chromium.org>, 2016-04-08 12:01:14 -0700, , remove read_file use wasm_read_file,,
1244,b4cbfb66d3af64ea964441a99a91f53297e28c1b,en Smith <binji@chromium.org>, 2016-04-08 11:56:22 -0700, , interpreter run function given frame previously interpreter would continue run returned topmost function support import calling export correct interpreter stop running return frame export function first called,,
1245,8d5fefa18f0a3aace4e960bb6c38bd130dd47d3d,en Smith <binji@chromium.org>, 2016-04-07 10:58:46 -0700, , squirrel interpreter work simple case pretty clunky though,,
1246,d4d12bf331a1301e8f7f8c4a73af5d66fb7f3269,en Smith <binji@chromium.org>, 2016-04-11 16:21:13 -0700, , helper building type binding reverse mapping maybe would better store directly wasmfunc,,
1247,3252d5b3e4fbf43029b1da9755a7bbe3a8c4ed12,en Smith <binji@chromium.org>, 2016-04-11 14:18:11 -0700, , use linked list parsing func field consistent spec repo remove explosion come parsing every combination particular func field existing  measured time take run sexpr wasm angrybots change negligble,,
1248,7c103ba5671bbe0fe16c958cf511e1615d0dce11,en Smith <binji@chromium.org>, 2016-04-10 01:43:57 -0700, , fix bug if_else code generation size value stack must branch if_else true branch value false branch kept value stack true branch value false branch fix write nop end true branch value need discarded update discard,,
1249,fe0d080c226dad91b79d02779d0422dabbcea2cd,en Smith <binji@chromium.org>, 2016-04-09 22:08:11 -0700, , fix gcc i686 release build real time,,
1250,988fcbd8e62033fe38eb690bab031a66428d378d,en Smith <binji@chromium.org>, 2016-04-09 21:51:38 -0700, , fix gcc i686 debug gcc i686 release think compile failure,,
1251,a57d0b57c70bd0e14e8bf5dc9d89407ab59b7d81,en Smith <binji@chromium.org>, 2016-04-09 21:35:44 -0700, , update flex fix gcc flex bison build,,
1252,eff19aa6365aad31101d256a3e22a2d02ef7695e,en Smith <binji@chromium.org>, 2016-04-09 20:11:11 -0700, , fix gcc flex bison build,,
1253,4e38209a98e63dc83e2ee2a17bac70adbf001ddc,en Smith <binji@chromium.org>, 2016-04-09 09:52:54 -0700, , turn wextra turn wunused parameter,,
1254,3f01f302cf7eda68fcb1b476a5051f3bf24e3ce7,en Smith <binji@chromium.org>, 2016-04-09 09:37:09 -0700, , add basic stack machine disassembler pretty bare bone,,
1255,cf6f48ea4562283b7dc4df8d0a9dbcaf39baafb8,en Smith <binji@chromium.org>, 2016-04-09 01:18:22 -0700, , add wasm_succeeded wasm_failed check result,,
1256,06c5a6d22aad887c1354d6fdd9189eab6738d8a1,en Smith <binji@chromium.org>, 2016-04-09 00:27:12 -0700, , add wasmbool replace many int size_t,,
1257,0672adc2b22e748b8aa831b458cfe3e0c3fa1b6c,en Smith <binji@chromium.org>, 2016-04-07 13:41:13 -0700, , share many copy read_file wasm_read_file,,
1258,2a50794557f943435b9ec617d9c03b477a88f367,en Smith <binji@chromium.org>, 2016-04-07 11:53:53 -0700, , fix dumb bug many copy print_error also refactor code shared also random cleanup,,
1259,3dea2fd7852672f978e1e52d8157c1a15b19eace,en Smith <binji@chromium.org>, 2016-04-07 11:23:12 -0700, , enable roundtrip test fix br_table used bug caught bug code mark used block default br_table target marked used,,
1260,d0d3d387c10856d32d13358121ec3175b49d7ca4,en Smith <binji@chromium.org>, 2016-04-05 11:33:49 -0700, , update,,
1261,41904fb3c493e5edfade0533450523973cf41556,en Smith <binji@chromium.org>, 2016-04-05 01:18:02 -0700, , make wasm common static library speed build little,,
1262,644e0a4a0d73d1300e44b5cb853109b4a8b44be1,en Smith <binji@chromium.org>, 2016-04-04 22:54:22 -0700, , store ast checker result ctx simplifies code significantly,,
1263,01615d023661ea4f34ac52ca4397f5930cc17992,en Smith <binji@chromium.org>, 2016-04-04 13:09:12 -0700, , move marking used block separate pas mean ast checker pas modify ast make easier make optional,,
1264,090d7a1def36a12c359eb14e4cab1c4f93b2fbad,en Smith <binji@chromium.org>, 2016-04-04 13:08:34 -0700, , add generic expression tree traverser,,
1265,4a1fd36f2d750a5c16aebf1aac06b8cd481a49ab,en Smith <binji@chromium.org>, 2016-04-04 10:56:01 -0700, , move ast modification checker,,
1266,77e32101c528ceeffea183f15255b3f2f6cb96d3,en Smith <binji@chromium.org>, 2016-04-04 08:55:56 -0700, , wip constness,,
1267,ba9d6c121f090fba684b75472b8227e363bed4d4,en Smith <binji@chromium.org>, 2016-04-04 12:27:44 -0700, , rename wasm context wasmcontext local translation unit nicer keep name short,,
1268,afd6f55ba93e2008dac04801c1b113867e43762a,en Smith <binji@chromium.org>, 2016-04-04 01:22:29 -0700, , rename wasm check wasm ast checker consistent file,,
1269,81426f6090d2dc797435b67aac59ca174654a7be,en Smith <binji@chromium.org>, 2016-04-04 01:06:28 -0700, , add convenience macro string slice printing printf stuff int foo.bar.length foo.bar.start becomes printf stuff pristringslice foo.bar bit verbose easier read think,,
1270,922f6afcf8573fb43eecbb71632fb61d84345cf3,en Smith <binji@chromium.org>, 2016-04-03 02:07:07 -0700, , wasm wast writes stdout default,,
1271,04dd4d59b9ea65aa81946055e179ca78faa159dc,en Smith <binji@chromium.org>, 2016-04-03 23:03:57 -0700, , add wasm_ likely use interpreter sure faster generated code nicer also added trap_if trap_unless make code look little cleaner imo,,
1272,e11b26f02eafa7c31ef95c6948de362fb262ce42,en Smith <binji@chromium.org>, 2016-04-03 22:56:46 -0700, , fix gcc warning interpreter,,
1273,97a0ce9790c56b88733d582107032161d5e92f94,en Smith <binji@chromium.org>, 2016-04-03 20:58:13 -0700, , reduce interpreter value stack default size 8mb bit much result bad performance stack allocator new size 512k one stack chunk,,
1274,4fdc4e3431088495a553613482c3beb05d6b965f,en Smith <binji@chromium.org>, 2016-04-03 20:57:24 -0700, , bunch allocator work add mark reset_to_mark allocator interface function implemented stack allocator allow quickly reset stack previous state allocation tracing stack allocator displaying file line number alloc realloc free call add stack allocator stats thing like number alloc realloc free number stack chunk allocated byte size,,
1275,da585024db5a5ca6c249139ae5b0d4f554916524,en Smith <binji@chromium.org>, 2016-04-03 03:25:38 -0700, , turn disabled spec test fix grow_memory,,
1276,21c29e00b9625abf55e200990f37c3d66742f47d,en Smith <binji@chromium.org>, 2016-04-03 02:00:07 -0700, , switch rest markdown,,
1277,1e80cf791c4885359bcc48316a18d40500459d0e,en Smith <binji@chromium.org>, 2016-04-03 00:15:31 -0700, , use sse2 compiling i386 target default x87 fail spec test also fix gcc warning,,
1278,506383d41ed1b01286aaeaa5993c8e94d175ad07,en Smith <binji@chromium.org>, 2016-04-02 22:14:14 -0700, , spec test pas interpreter,,
1279,e6b52e43912c66d4cfcd5e851f98df941cc3d65a,en Smith <binji@chromium.org>, 2016-04-02 22:12:26 -0700, , memory_size return byte doe grow_memory,,
1280,258a4782370ed2431f2820c20df1cc75a335e94c,en Smith <binji@chromium.org>, 2016-04-02 22:05:55 -0700, , fix floating point conversion,,
1281,cf1c7019602079e22253b352340f80a71daa4632,en Smith <binji@chromium.org>, 2016-04-02 17:55:09 -0700, , fix copy pasta f64 ops,,
1282,97b5ab104d21ebe0be96cef34d9036591f1ec48e,en Smith <binji@chromium.org>, 2016-04-02 17:52:05 -0700, , fix gcc warning wasm interp.c,,
1283,37fec0c5bc9cca5306796eca801651bd9fc9701f,en Smith <binji@chromium.org>, 2016-04-02 17:48:16 -0700, , fix div_s ops need trap overflow i32.div_s i32.const 0x80000000 i32.const supposed trap similar i64.div_s operation also trap,,
1284,2fbfc7efe57fa33ec9ab8d340e8c1f7073dcf6e1,en Smith <binji@chromium.org>, 2016-04-02 17:18:34 -0700, , fix value_stack bug br_if also add br_unless,,
1285,c07ca03de9c1582f75a84bed296deb3bceca9188,en Smith <binji@chromium.org>, 2016-04-02 16:28:26 -0700, , adjust stack if_else condition without anything reference stack top branch e.g local index,,
1286,79fbe134697caa4de1fe8f8a89332a2c61e38056,en Smith <binji@chromium.org>, 2016-04-02 16:06:42 -0700, , simplify value_stack handling interpreter previous algorithm manually handled value_stack every operation error prone algorithm much simpler mark location value stack whenever shift expression reset stack location expression reduced adjusting one return value also properly handle non local control flow type check expression push value,,
1287,798ee90f9b33d7879c63a30eca589e4620bf2d85,en Smith <binji@chromium.org>, 2016-04-02 14:00:30 -0700, , parsing spec json allow empty command array,,
1288,64ad44c2aa3680274b90b5c00f0807be3f2f610b,en Smith <binji@chromium.org>, 2016-04-02 13:59:50 -0700, , add flag wasm interp similar sexpr wasm write temporary file given directory instead writing temporary directory,,
1289,3e071bf7cdd59b38643b150ed00aa61d545b6c3c,en Smith <binji@chromium.org>, 2016-04-02 13:50:57 -0700, , fix memory access oob bug need check size load store also fix spec json parser allow empty module list,,
1290,c90060cf18262fcc3e6a5e5c34e28954bf55a322,en Smith <binji@chromium.org>, 2016-04-02 12:16:35 -0700, , better message spec test fails,,
1291,68d643b9119682fb6032492be6cd210e8eadc40e,en Smith <binji@chromium.org>, 2016-04-02 11:59:24 -0700, , add bit tracing info,,
1292,e512aab69feb175c6f8714fb95cc881a574b747e,en Smith <binji@chromium.org>, 2016-04-02 11:51:09 -0700, , add spec flag wasm interp par enough json read sexpr wasm output fixed memory leak,,
1293,077a49e3129800573fb94fbf42b1df84f598b5a3,en Smith <binji@chromium.org>, 2016-04-01 16:58:49 -0700, , fix gcc i686 build,,
1294,b271cf9efa2848d854d22fd64bf33ef6c8982ab4,en Smith <binji@chromium.org>, 2016-04-01 15:55:52 -0700, , add wasm interp travis test.sh also refactor travis test.sh bit easier add executables,,
1295,c94cc85535440b42e15b8dd35f5fc39f2a522031,en Smith <binji@chromium.org>, 2016-04-01 15:32:00 -0700, , fix gcc warning,,
1296,401fa488a537e5e735969576a55c3dfd110b01a1,en Smith <binji@chromium.org>, 2016-04-01 15:21:00 -0700, , fix bug nullary call return,,
1297,370e9dfe9bd7299f8a36c9f127762c47ce90241e,en Smith <binji@chromium.org>, 2016-04-01 13:23:10 -0700, , fix leak wasm interp,,
1298,3218cc8b453c361936fe69fe9a0ec530d47db79c,en Smith <binji@chromium.org>, 2016-04-01 12:30:07 -0700, , add interpreter test copied test,,
1299,78526e008053b01b5a65cce53e916533e44aad39,en Smith <binji@chromium.org>, 2016-04-01 11:09:10 -0700, , add wasm interp cmake test target,,
1300,647612350772f18a729c41a1e9b861cbb6e22ef7,en Smith <binji@chromium.org>, 2016-04-01 10:59:37 -0700, , fix comparison ops rename stack_value pick,,
1301,e8a43351ee71dcc27ec521e43b6536eeb83fca69,en Smith <binji@chromium.org>, 2016-04-01 10:44:18 -0700, , fix br_if,,
1302,dad3e2ccf608695dafc7456ef6b882cb631163cb,en Smith <binji@chromium.org>, 2016-04-01 09:56:54 -0700, , fix call_indirect br_table,,
1303,1fd965aeabd396e80474040979570c659ef89ab7,en Smith <binji@chromium.org>, 2016-03-31 23:43:11 -0700, , interpreter fix execution tracing,,
1304,5b51d51a4762499de80e2214920c8ed0675a4f2b,en Smith <binji@chromium.org>, 2016-03-31 18:50:28 -0700, , running test wasm interp mostly failing,,
1305,2e4639e97f03c306374a02c4e8097add36f31aa7,en Smith <binji@chromium.org>, 2016-03-25 23:47:26 -0700, , wasm interpreter work generating instruction stream simple stack machine,,
1306,da5e6ec567a41f6d21b9477d67b5d1960bf1dcfa,en Smith <binji@chromium.org>, 2016-04-02 22:16:49 -0700, , update testsuite,,
1307,57b1b194ccb21ff2b8c319bf92f7da64a0d7f8de,en Smith <binji@chromium.org>, 2016-04-01 23:27:37 -0700, , write spec file .json .wasm file sexpr wasm spec used write .js file could run convenient general easy use wasm interp either generates json file reference collection .wasm file test spec.js also modified read json file,,
1308,13d0f4dea12f090bdec6a9a9bc41d4bce90fbeab,en Smith <binji@chromium.org>, 2016-04-01 18:47:01 -0700, , fix bug wasm wast writing end file,,
1309,c291bea301ea25e430c923430ae2c23653726abd,en Smith <binji@chromium.org>, 2016-04-01 17:56:27 -0700, , use stack allocator place sexpr wasm,,
1310,e58cc6390674919c12740b11a88bfd96349212fb,en Smith <binji@chromium.org>, 2016-04-01 17:38:48 -0700, , simplify wasm binary writer.c mostly removing wasmwriterstate,,
1311,387db020ebadc447fbc6ed6627804767b5dbd2ec,en Smith <binji@chromium.org>, 2016-04-01 17:26:13 -0700, , remove unnecessary code spec writer,,
1312,900f90d7a8019b3a394999a71970e55bb91a454f,en Smith <binji@chromium.org>, 2016-04-01 16:56:22 -0700, , separate spec binary writer file,,
1313,8f7a33e6828c6871497290baa1b344061c9ec448,en Smith <binji@chromium.org>, 2016-03-22 12:12:08 -0700, , add afl fuzzing setup makefile,,
1314,0592bad3415282a3f7636102507958b25ad65e49,en Smith <binji@chromium.org>, 2016-04-01 11:24:19 -0700, , clean makefile cmakelists.txt primarily moving sanitizer build cmakelists.txt makefile much cleaner way,,
1315,2ed6348f8c56c027f6726a3aceda4442aa6cd774,en Smith <binji@chromium.org>, 2016-04-01 11:25:03 -0700, , update prebuilt wasm flex lexer.c fix build,,
1316,dbbfaa0176c360825e9fefe2bcadb3e07821b126,en Smith <binji@chromium.org>, 2016-03-26 15:59:19 -0700, , make type table clearer make easier use opcodes typechecking without knowing expression type,,
1317,afadf35828a341b7632b8bba6fcf8c01e3bab23f,en Smith <binji@chromium.org>, 2016-03-26 00:07:40 -0700, , remove make funcs inline make easier use vector find good place put matching anymore,,
1318,7e24867f3fb58858952581c1735d682aaad50e89,en Smith <binji@chromium.org>, 2016-03-25 22:29:14 -0700, , pas run tests.py keep generated output also cleanup generated filename longer end roundtrip also remove unused function aslist,,
1319,c757eca521cb0862a67893d66103225898bdc6f9,en Smith <binjimin@gmail.com>, 2016-03-29 10:16:53 -0700,61, merge pull request ossy szeged fix readme update readme.rst,,
1320,2ea13f368352d83327cd4c4eeed4b9e96e7f01ff,saba OsztrogonÃ¡c <oszi@inf.u-szeged.hu>, 2016-03-29 05:00:25 -0700, , update readme.rst,,
1321,9a43c5a6ffca061c63d68e4dec812d71ee26cc3c,en Smith <binji@chromium.org>, 2016-03-25 14:50:16 -0700, , read name section binary format test rename roundtrip.py run roundtrip.py add roundtrip tool run test add debug name flag wasm wast whether parse name section using tool flag combine flag override,,
1322,040815ef53f006be4306630858911f4e9fec57eb,en Smith <binji@chromium.org>, 2016-03-22 00:24:32 -0700, , couple lexer optimization,,
1323,bfd34dcd3679b2ae4137d1ec35eeb5bc781c58fc,en Smith <binji@chromium.org>, 2016-03-22 11:55:32 -0700, , window fix check alloca.h add prizd prizx printing size_t,,
1324,9f480e9f941cb0146519faa2e7db25605f544d18,en Smith <binji@chromium.org>, 2016-03-22 11:18:21 -0700, , add roundtrip test hexfloat_test would caught nan writing bug,,
1325,230db21ddcc45531f8254da733224ca2771c52f9,en Smith <binji@chromium.org>, 2016-03-21 21:44:42 -0700, , fix roundtrip test write roundtrip file different location two thread fight writing probably write optimize later refactor travis test.sh bit cleanup passing args run_tests pas args running gcc debug flex bison,,
1326,f67405442131835c260434e9ab4ddcf0a09baa69,en Smith <binji@chromium.org>, 2016-03-21 20:11:56 -0700, , fix bug writing nan tag trim trailing zero writing nan tag,,
1327,673adc4cc8cb050dfbe90de7d862f0d8dcb5d688,en Smith <binji@chromium.org>, 2016-03-21 19:58:42 -0700, , reverse roundtrip flag roundtrip,,
1328,1b5876b1885ccb6835bb8285566320db3d839dad,en Smith <binji@chromium.org>, 2016-03-21 19:54:55 -0700, , major refactoring run tests.py roundtrip remove test functionality roundtrip add roundtrip test individual test parallelized factor much cleaner add create roundtrip test normal test rename status.timeout timeout confusing name,,
1329,dc52888e1a01b6fa112bbea8a24a4d359182dd10,en Smith <binji@chromium.org>, 2016-03-21 18:41:23 -0700, , fix asan found bug wasm allocator reverse oob check occur reading memory,,
1330,927f4dcb7e937322d6ac9e08599070e244c04093,en Smith <binji@chromium.org>, 2016-03-21 18:26:59 -0700, , travis test.sh handle wasm wast,,
1331,82fd4d1ac216306f30fb22b2ece66325885ecad5,en Smith <binji@chromium.org>, 2016-03-21 18:25:05 -0700, , fix memory leak wasm wast,,
1332,6f9d00fd5d1e1e23de57cb5d757eed7e850e8c5c,en Smith <binji@chromium.org>, 2016-03-21 18:26:33 -0700, , pas use libc allocator via roundtrip.py,,
1333,bf80ca809762dad0a7ec0abeb668a086e728c7ac,en Smith <binji@chromium.org>, 2016-03-21 18:24:46 -0700, , update wasm wast allow use libc allocator,,
1334,0cc5ae64230f0eec7fff74b5a2411d6cb61ddded,en Smith <binji@chromium.org>, 2016-03-21 15:23:09 -0700, , add roundtrip test run test,,
1335,6cec6c2d45a836061170f9e9f56417708593e283,en Smith <binji@chromium.org>, 2016-03-21 11:56:02 -0700, , add roundtrip.py option setting executables,,
1336,c87b2d60d6cc592e2b97b52e69f90401e05447be,en Smith <binji@chromium.org>, 2016-03-21 11:46:35 -0700, , remove mmap wasm wast use fopen fread,,
1337,ffb230a7f96bfe6065bc9b5b1f995fc4b7c3c52b,en Smith <binji@chromium.org>, 2016-03-20 23:18:13 -0700, , use wasm wast,,
1338,e6a740701b666c24a463d659521d4bf63f026380,en Smith <binji@chromium.org>, 2016-03-20 20:13:16 -0700, , fuzz fix fuzzer found bug handle error returned callback allow void param local type,,
1339,4e9f5f20a37eaa9b858d9815d6b72e4c73ec221a,en Smith <binji@chromium.org>, 2016-03-20 18:04:09 -0700, , update roundtrip run test fix bug make wasmmodule pointer start function zeroed empty module fix local checking binary reader include parameter always write valid module even source file empty factor findtestfiles function run tests.py clean hexdump function roundtrip.py,,
1340,e9982deed1a426e201fc0fc8ea5b05484270801a,en Smith <binji@chromium.org>, 2016-03-20 14:49:59 -0700, , use error callback wasm binary reader ast also pas offset error function,,
1341,b54b89078565a326b7c02395a59777874b0a24db,en Smith <binji@chromium.org>, 2016-03-20 14:20:24 -0700, , fuzz fix bug wasm binary reader,,
1342,8a9ac17deb58488e3cfb5067237ace1fdb4b66fc,en Smith <binji@chromium.org>, 2016-03-20 11:48:46 -0700, , fix bug found roundtripper properly escape import export segment string always insert newline line end comment fix order align offset operand add i64.eqz opcode binary reader output first module spec script convert escape import export string parsing add newline call_indirect type operand,,
1343,1952fe6dfaddf3a874e861683d28f3bf3caf898b,en Smith <binji@chromium.org>, 2016-03-20 11:47:30 -0700, , add roundtrip.py wast wasm wast wasm two wasm file indentical,,
1344,f91cfa47ca6375d0106a92baeed10adf2f900860,en Smith <binji@chromium.org>, 2016-03-19 23:57:00 -0700, , fix dumb binary reader ast writer bug sizeof char string includes write br_table depth first followed expr set size br_table target vector copypasta i32.lt_u i32.le_u angrybots roundtrip,,
1345,09f040e49ba1082a064c10a77129112b9cfde850,en Smith <binji@chromium.org>, 2016-03-19 22:26:12 -0700, , rewrite hexfloat_test gtest,,
1346,17a2880ad8f02b28a3aadb0c9bbc205a27e0f334,en Smith <binji@chromium.org>, 2016-03-19 19:31:12 -0700, , hex float double writing,,
1347,a5055550dbdb15fa9a98e52c1f5d991b1e028d84,en Smith <binji@chromium.org>, 2016-03-18 15:32:09 -0700, , rebase work ast writer wip ast writer work try make block work ugh finally work,,
1348,8b99847bc1b71699924f388e36bcfc07abbc6541,en Smith <binji@chromium.org>, 2016-03-18 10:04:06 -0700, , wip wasm ast writer,,
1349,12c099f57251d6090951520e7d342bcccab1d7f0,en Smith <binji@chromium.org>, 2016-03-18 10:03:03 -0700, , refactor shift wasm binary reader ast.c,,
1350,76171ff158b28fa1d85e308a60d34a07df738471,en Smith <binji@chromium.org>, 2016-03-17 22:20:45 -0700, , use stack allocator wasm wast,,
1351,cfad86afbd2b27339daaadb565e0544e9451f941,en Smith <binji@chromium.org>, 2016-03-17 22:20:34 -0700, , fix gcc release build,,
1352,31fdba6e4822b1415bf78ebbb308e2c5f08ad157,en Smith <binji@chromium.org>, 2016-03-17 21:38:49 -0700, , wip parsing binary format ast,,
1353,69c53eaf8c465173c012c792453605d72d94a295,en Smith <binji@chromium.org>, 2016-03-17 17:45:43 -0700, , wip reducing expression,,
1354,f251f33462ee3741f03aefba64316cbb331aaf0f,en Smith <binji@chromium.org>, 2016-03-17 14:54:11 -0700, , start binary reader creates ast also callback function return wasmresult abort decoding,,
1355,0b9657a3f36e27cb4c691e31b85e1877e6b209f5,en Smith <binji@chromium.org>, 2016-03-17 12:22:35 -0700, , remove wasm internal refactor,,
1356,4506ea3b835462f1b2df92fe90d3daa26cb0c60b,en Smith <binji@chromium.org>, 2016-03-17 11:28:53 -0700, , rename wasm objdump wasm wast,,
1357,c7876bda85f4b874aadf90d4134dffe507d1290d,en Smith <binji@chromium.org>, 2016-03-17 11:10:26 -0700, , remove use c99 vlas,,
1358,c57b3fbe4278d55749d6fa1273ee979956ae1123,en Smith <binji@chromium.org>, 2016-02-24 15:35:05 -0800, , rebase bunch early work binary reading basic reading work update latest binary format read name section use setjmp longjmp error handling,,
1359,5954eeb27b2ee7d3e12329a4cbe37ec8fb89b5a6,en Smith <binji@chromium.org>, 2016-03-21 15:01:05 -0700, , nicer overriding various executables testing run tests.py take executable flag added tool directive test reduce boilerplate change test use new tool directive factor executable searching fallback find_exe.py fix issue,,
1360,1a09f8b2899787f1e2c4606fce4cd1379d032966,en Smith <binji@chromium.org>, 2016-03-21 11:16:45 -0700, , add option build without gtest submodule used wasm waterfall,,
1361,c95ef67dfe5c24b000f4f24752b81c5169743223,en Smith <binji@chromium.org>, 2016-03-21 11:16:45 -0700, , add option build without gtest submodule used wasm waterfall also rename cmake test target run test avoid nasty warning,,
1362,02634375f056e8cae5176bc6ebb9bf4e160fe936,en Smith <binji@chromium.org>, 2016-03-20 23:01:02 -0700, , remove getopt use instead,,
1363,4cdce96d43e421f714df37da03f802950bd811b1,en Smith <binji@chromium.org>, 2016-03-20 16:20:20 -0700, , add option build using ninja cmake generator,,
1364,5f2975e30510a210db0c39a76089e9671d153087,en Smith <binji@chromium.org>, 2016-03-20 15:04:53 -0700, , update testsuite,,
1365,50fa93d47190793b7981973fd163c6b660d182b3,en Smith <binji@chromium.org>, 2016-03-19 22:34:58 -0700, , rename wasm parse literal wasm literal,,
1366,0114d0b5dff98da0ad2551ea74c4cb5bceadc1cc,en Smith <binji@chromium.org>, 2016-03-19 22:26:12 -0700, , rewrite hexfloat_test gtest,,
1367,d0ac26ab37db5ac6c11902b21b16ab33dafd5975,en Smith <binji@chromium.org>, 2016-03-19 19:31:12 -0700, , hex float double writing,,
1368,29684af7a99ef96065c429a734e5829d4c43f83a,en Smith <binji@chromium.org>, 2016-03-19 10:31:05 -0700, , simplify block spec repo added postorder style block switch postorder nice store branch block easier lower block since binary format currently support,,
1369,6faaec99378e5aa221393e9bf1276dffc9fec144,en Smith <binji@chromium.org>, 2016-03-19 23:06:08 -0700, , cleanup everything custom target cmakelists.txt,,
1370,d80518d65b9a0a4c4f53b97cd6475e848656ab59,en Smith <binji@chromium.org>, 2016-03-18 16:03:25 -0700, , fix wasm check bug calling func defined type,,
1371,cf7b85685a5a268f245b0ecae3f5ef68b7a608ae,en Smith <binjimin@gmail.com>, 2016-03-19 23:25:36 -0700,56, merge pull request jsstats eqz operator rename operator i32.eqz add i64.eqz,,
1372,ff2b50bb9618e1c00d7a91385902e04e6d2b9b87,ouglas Crosher <info@jsstats.com>, 2016-03-18 19:20:41 +1100, , rename operator i32.eqz add i64.eqz,,
1373,224d73bb2ff43da0aae914711d5a363635a7a768,en Smith <binji@chromium.org>, 2016-03-18 15:42:14 -0700, , update,,
1374,20fc6d5ec8bfc5b6014b62d46fa27ab7c13b663d,en Smith <binji@chromium.org>, 2016-03-17 22:19:32 -0700, , better use gcc clang msvc builtins instead hacking negative array size,,
1375,5128dca449c673cc815856a9fe4f55959fae3fd5,en Smith <binji@chromium.org>, 2016-03-17 20:46:37 -0700, , use opcode everywhere remove op_type,,
1376,36f09a88b4370c71835cf76d618653d70ee20fee,en Smith <binji@chromium.org>, 2016-03-17 15:26:31 -0700, , module field use linked list instead vector since cache module field pointer vector nicer allocated individually fixup pointer time,,
1377,59a8dfad60121aeb2fa3e5a2750f85e4b73747c8,en Smith <binji@chromium.org>, 2016-03-17 12:43:03 -0700, , make header exposed defines start wasm_,,
1378,a4b5fff74fd4df972c1621395d6f2a7fe997bbf0,en Smith <binji@chromium.org>, 2016-03-17 12:22:35 -0700, , remove wasm internal.h wasm.c refactor,,
1379,eb0a7616147d1298a2757f15ad50b3dc6304b1db,en Smith <binji@chromium.org>, 2016-03-16 15:58:56 -0700, , window fix hexfloat change _bitscanreverse return top bit set leading zero work x86_64 msvc pickier signed unsigned shift dumb typo wasm_snprintf switching order va_start args,,
1380,851ac9468b2da6f4fd4d74d425863776bd8e6cba,en Smith <binji@chromium.org>, 2016-03-16 14:14:27 -0700, , fix cmakelists.txt sanitizer build add target asan lsan msan,,
1381,aaa17571ec33350f6500bdbda9636ffbd87d0b72,en Smith <binji@chromium.org>, 2016-03-16 13:54:28 -0700, , fix typo travis build.sh,,
1382,e015670c4a0a27e68410a35e83b41fc2826f5fce,en Smith <binji@chromium.org>, 2016-03-16 12:53:10 -0700, , update travis build.sh new makefile change,,
1383,b67d576de0a8345c0c2e79e7f18ab0d4bc9d5dc8,en Smith <binji@chromium.org>, 2016-03-16 12:29:06 -0700, , fix i686 build gcc clang i686 sizeof int sizeof long sizeof long long gcc clang x86_64 sizeof int sizeof long sizeof long long careful __builtin_clz use could probably use __builtin_clz bit __builtin_clzll bit best check,,
1384,dc8ac7716ea958e21c12b4413c6bcff75610868a,en Smith <binji@chromium.org>, 2016-03-16 12:07:50 -0700, , makefile conveniently build multiple executables,,
1385,bf4176ea6cd74112dc010dbf733852099758f9e1,en Smith <binji@chromium.org>, 2016-03-16 12:07:36 -0700, , hexfloat_test fix,,
1386,eec5961ef71df968906b935bf09757eea9ca2c95,en Smith <binji@chromium.org>, 2016-03-16 11:46:15 -0700, , parse hexadecimal float nan infinity automatically parsed c99 strtod strtof msvc support c99,,
1387,766469fef6a5d70dc70ccf4636dd3d9d10b1514c,en Smith <binji@chromium.org>, 2016-03-14 12:06:58 -0700, , set bison minimum version 3.0 fix issue,,
1388,ad6a0a2134e3d55bc6e63f84bf90d0c586c34c4b,en Smith <binjimin@gmail.com>, 2016-03-14 11:23:01 -0700,55, merge pull request cellule fix_vsnprintf window vsnprintf,,
1389,3a58db88b173d61bc41006f7d4aa76008c92674c,ichael Ferris <mike.ferris@hotmail.com>, 2016-03-14 11:10:13 -0700, , implementation vsnprintf wrong check window,,
1390,abed71fb2df776391745c4697ed3bfa430939467,en Smith <binji@chromium.org>, 2016-03-13 03:14:01 -0700, , use _snprintf vsnprintf window match behavior c99 snprintf vsnprintf,,
1391,411ec2ca50dc4fb7985091c7fa1466290149cb0f,en Smith <binji@chromium.org>, 2016-03-13 00:49:39 -0800, , add back make clean phony target,,
1392,ba46800e4bfb0ab234b172db324208d83c6e1923,en Smith <binji@chromium.org>, 2016-03-12 20:37:53 -0800, , fix test run d8.py window,,
1393,5d6e6ab03cd09600c6a968ec5deb3e7257b3a058,en Smith <binji@chromium.org>, 2016-03-12 17:48:19 -0800, , window fix test run tests.py work require python2.7 make sure add .exe necessary python cmake,,
1394,d792fbeb9cc851b07693784218ff764fcf5b0a15,en Smith <binji@chromium.org>, 2016-03-12 17:47:21 -0800, , add build d8.bat file building window,,
1395,5412aba9830d022827ddb60ba8b5f154ec7bed1d,en Smith <binji@chromium.org>, 2016-03-10 14:23:00 -0800, , fix have_snprintf have_ssize_t,,
1396,9889e6e3d5b27347dd899b5e9ae1b6ee51ff902e,en Smith <binji@chromium.org>, 2016-03-10 13:50:37 -0800, , cmake window fix,,
1397,de9fda47d99c1945520116633dc79d82ddc4f947,en Smith <binji@chromium.org>, 2016-03-10 13:53:31 -0800, , add io.h _isatty window,,
1398,656e71ce002b03f386cca23b025069b95bfa66fe,en Smith <binji@chromium.org>, 2016-03-10 13:49:04 -0800, , stdint.h top wasm flex lexer.c needed window,,
1399,bc18b07fed5c5d786b26ecfff2a9ceb615666608,en Smith <binji@chromium.org>, 2016-03-10 11:32:12 -0800, , add gcc 4.8 multilib .travis.yml maybe fix gcc bit build,,
1400,36adaff906fbb9170494a23e753938cf8fcc38b4,en Smith <binji@chromium.org>, 2016-03-07 02:14:13 -0800, , fix link cmake readme.rst,,
1401,5aa9b6637e411e69fd361fb6517b71b169690df4,en Smith <binji@chromium.org>, 2016-03-07 02:12:42 -0800, , build cmakelists building flex bison test prebuilt source file updated along file,,
1402,ab91bed948b214bb94f8fbab8169a7e4b1a3eefc,en Smith <binji@chromium.org>, 2016-03-06 15:22:47 -0800, , remove .sln .vcxproj use cmake generated file,,
1403,1eced726eaa1bb662672f87dbae613da7f775c72,en Smith <binji@chromium.org>, 2016-03-06 15:02:53 -0800, , handle nan properly x87 float,,
1404,7caec37eb628d8aee95be319e03159cb556de908,en Smith <binji@chromium.org>, 2016-03-06 14:45:12 -0800, , add bit build gcc,,
1405,4f94d77153bae3e25b945a0e96bd171516742b7a,en Smith <binji@chromium.org>, 2016-03-05 10:41:35 -0800, , .travis fix cmake change,,
1406,2d129651a2a813c4a04ea014b52ac6f02fd68828,en Smith <binji@chromium.org>, 2016-03-05 00:20:47 -0800, , make print directory verbose,,
1407,0e76a6403f1949326abbe99374acf546da2801d7,en Smith <binji@chromium.org>, 2016-03-05 00:11:14 -0800, , move prebuild flex bison src prebuilt also add make update bison flex build modify cmakelists.txt use,,
1408,4caccea63e68765fbf2e179981c677e954002ac1,en Smith <binji@chromium.org>, 2016-03-05 00:04:45 -0800, , update readme add test everything makefile,,
1409,c91538cd39bddcd7811b401ce2146de7c6307449,en Smith <binji@chromium.org>, 2016-03-04 15:10:27 -0800, , cmake build work,,
1410,724f62ece7b4554f9115a9e79bbfab5162fba563,en Smith <binji@chromium.org>, 2016-03-12 17:33:45 -0800, , move wasm_page_size wasm common.h,,
1411,ce36cce17941aa30b5f3c1d37a660c7a4daeaf57,en Smith <binji@chromium.org>, 2016-03-11 11:54:33 -0800, , remove end section,,
1412,7ee0c81f107ab72d6e46d94e0a1d01be7ae56d34,en Smith <binji@chromium.org>, 2016-03-10 18:28:33 -0800, , write name section binary behind flag,,
1413,2bc78ad47544bb5ee0b9177bff1b30d9de4f3e75,en Smith <binji@chromium.org>, 2016-03-10 17:01:46 -0800, , add flag prevent packing local old binary format required local remapped count type new format allows type run length encoded,,
1414,d0c3e7035e5d04e60e9b0f24b60bf64a0f81e4b6,en Smith <binji@chromium.org>, 2016-03-10 15:20:47 -0800, , add flag canonicalize leb128 size value prevent move data around depending size number byte leb128 value,,
1415,c92c0d38bdc1d80f967428667488b9fcc5f41c97,en Smith <binji@chromium.org>, 2016-03-10 04:03:45 -0800, , optimize unnecessary block block never referenced one expression removed useful arm spec repo requires binary format introduce new block,,
1416,c5e3fc7d76a758b32d62eb856d58da1faea7f0a2,en Smith <binji@chromium.org>, 2016-03-09 18:30:05 -0800, , fixed order encoders,,
1417,6b97835cc47ecfa1fcc575b924a253726ff1e5a0,en Smith <binji@chromium.org>, 2016-03-10 10:55:47 -0800, , update fix build 10308dc5,,
1418,bed85db5ab9cc04182ff3cc27c29cd41264ec597,en Smith <binji@chromium.org>, 2016-03-10 04:05:51 -0800, , remove unused code,,
1419,10308dc58188534b571033905e6ec72c8b37cace,itzer <titzer@google.com>, 2016-03-10 14:18:40 +0100,50, merge pull request webassembly section_names section size name string,,
1420,8b95260131a607bee33d8d70bfd64bb9319da62b,en Smith <binji@chromium.org>, 2016-03-09 15:35:50 -0800, , section size name string,,
1421,902593052e7b54b2c75d0861941687373e070fab,en Smith <binji@chromium.org>, 2016-03-09 16:20:17 -0800, , update use function sig body section also support name section add later,,
1422,2004b40ad4342ea8406bbfb1249e58e959f53f37,en Smith <binji@chromium.org>, 2016-03-09 12:33:54 -0800, , set memory export bit based export memory look like memory always exported however,,
1423,f650289f46bf883a7fa17b967583192d679986fe,en Smith <binjimin@gmail.com>, 2016-03-09 12:09:32 -0800,49, merge pull request webassembly data inline data segment,,
1424,a039967ae8bd46dda32320b8de6596d2c2d305ee,en Smith <binji@chromium.org>, 2016-03-09 11:54:16 -0800, , cleanup remove segment defines move out_data,,
1425,fc23e103e5ba5016329ae99203c6818b6378262a,en Smith <binji@chromium.org>, 2016-03-09 11:50:09 -0800, , update inline data segment change,,
1426,ac354d3fe3094d84e0489c07ffd91126f58db08c,ndreas Rossberg <rossberg@chromium.org>, 2016-03-09 16:16:01 +0100, , move data segment inline wip,,
1427,4f8f2a2b90597d8dc82b9188d0b62b36887c2aef,en Smith <binji@chromium.org>, 2016-03-09 11:27:56 -0800, , update move import export string inline,,
1428,63a2c80349c4ab6d92718c07d5bdd46ce8fef9a8,en Smith <binji@chromium.org>, 2016-03-09 11:10:01 -0800, , update d95fa45a mem immediates leb128,,
1429,d95fa45a33be28b4dbf727cfc519d48bd6dcaa0c,itzer <titzer@google.com>, 2016-03-09 19:50:05 +0100,48, merge pull request webassembly update load store immediates alignment varint followed,,
1430,ae3921c92192f8ea7c898202cfb2b503b020448a,en L. Titzer <titzer@google.com>, 2016-03-09 19:46:44 +0100, , fix one,,
1431,7b68bde9683f06822f593abe5f4f08f4216a67b1,en L. Titzer <titzer@google.com>, 2016-03-09 19:33:47 +0100, , update store,,
1432,4d2f21512ed4e5ab3375fddbaed7216cb3aed5e5,en L. Titzer <titzer@google.com>, 2016-03-09 19:26:17 +0100, , integrate comment,,
1433,2857b4ebe04c79b6e5a365c7f6ac4b2a0447568b,en L. Titzer <titzer@google.com>, 2016-03-09 19:08:18 +0100, , update load store immediates alignment varint followed index varint,,
1434,321fe24509c916ebee7da5568ee4c09c6211b27a,en Smith <binji@chromium.org>, 2016-03-08 17:03:45 -0800, , update leb128 two level import,,
1435,d1a32218bfeb3c535fca702fb180c2b9abe2fc73,en Smith <binjimin@gmail.com>, 2016-03-08 16:29:19 -0800,47, merge pull request webassembly wasmexp_to_wasm rename _wasmexp_ wasm,,
1436,151f3606f1fcf16eb097e3b27af751b29ac21be4,en Smith <binji@chromium.org>, 2016-03-08 16:19:18 -0800, , update rebaseline test,,
1437,8e7ecef72e62a49b62e7c6bf3d6a4791678d5ef0,en L. Titzer <titzer@google.com>, 2016-03-08 15:44:06 +0100, , rename _wasmexp_ wasm,,
1438,d946a65bf6ab4fa960d699032c8e708a9edeae00,en Smith <binji@chromium.org>, 2016-03-08 13:17:22 -0800, , update testsuite fix spec test spec switch.txt still failing yet support br_table passing argument,,
1439,c4d1bf5f569f2a895c764904613ff588c4616e68,en Smith <binjimin@gmail.com>, 2016-03-07 13:53:51 -0800,41, merge pull request webassembly local decls rewrite,,
1440,9db711998760a344ad26be1fe14df3862553416c,en Smith <binji@chromium.org>, 2016-03-07 13:45:40 -0800, , rebase master remove need local decl fixup,,
1441,c7776e56fc9a20d6d4be8da3aff8150d6634fd61,en L. Titzer <titzer@google.com>, 2016-03-07 20:14:05 +0100, , rebase dump local decls change,,
1442,cbea8ecd52273404f6383bb3d1666e0baa97be7d,en L. Titzer <titzer@google.com>, 2016-03-07 12:36:16 +0100, , fix loop,,
1443,c575a376fb12ea99454fa0069829071b70383690,en L. Titzer <titzer@google.com>, 2016-03-07 11:56:12 +0100, , rework encoding local declaration,,
1444,d67e4588d6d28b2f3fe6bd8f86fb1ebe97874a3d,en Smith <binji@chromium.org>, 2016-03-07 12:06:33 -0800, , update last push broke build,,
1445,2c40bbd3653f3361d5f3cafc36af5dd1b8720c34,en Smith <binji@chromium.org>, 2016-03-04 16:34:49 -0800, , remove tableswitch add br_table update,,
1446,bdee708bb63b5da3a6abbe2318a860d4c7045045,en Smith <binji@chromium.org>, 2016-03-07 11:44:57 -0800, , add i32 i64 .rot operator,,
1447,d8383f154cb48ca4c1283d53df732029f5be6e93,en Smith <binji@chromium.org>, 2016-03-05 12:46:22 -0800, , cleanup readme.rst bit,,
1448,31e73b2c03b08116ebd6a937d5f8aa971cd800fd,en Smith <binji@chromium.org>, 2016-03-05 12:42:44 -0800, , rebase failing spec test relying page size also allow todo note directive test file format,,
1449,26d0850bff62c81b0c8574878494586214b614c4,en Smith <binji@chromium.org>, 2016-03-04 23:30:43 -0800, , clang format,,
1450,2b314cd8d8df7dc00eb5aa2f99b631439d4ba06a,en Smith <binji@chromium.org>, 2016-03-04 23:21:13 -0800, , fix line ending,,
1451,062e659a5fd25df13f0fec188d76a4ddcdd8fc28,en Smith <binji@chromium.org>, 2016-03-04 15:12:13 -0800, , add back if_else temporarily still generated asm2wasm let keep around little longer,,
1452,2ca5d5ca13594633758b554510c30957a47abdd4,en Smith <binji@chromium.org>, 2016-03-02 17:37:47 -0800, , store i32.const i64.const signed leb128,,
1453,627c2ba1fadbd7097039098042f06b4600bc7316,en Smith <binjimin@gmail.com>, 2016-03-04 09:56:33 -0800,40, merge pull request jsstats mem page test fix fix test expected output memory page change,,
1454,16014ac8044c643b4e38547467b9e12d5afc9451,ouglas Crosher <info@jsstats.com>, 2016-03-04 22:14:57 +1100, , fix test expected output memory page change,,
1455,c4342a0df691646c2a2209513085189784885455,en Smith <binji@chromium.org>, 2016-03-03 22:32:22 -0800, , update support memory specified page break spec test since corresponding change testsuite pushed yet,,
1456,924590c7c53f7deed33dd57108a087d220ebe73e,en Smith <binjimin@gmail.com>, 2016-03-03 22:20:01 -0800,21, merge pull request jsstats mem page change memory size unit page rather power two,,
1457,6f9e9479784a0857eaa9072be55e07dc6032d339,en Smith <binji@chromium.org>, 2016-03-03 16:08:14 -0800, , fix memory leak using libc allocator,,
1458,18604bd6def26785f1ecf293b9ec09d987066fdf,en Smith <binji@chromium.org>, 2016-03-03 15:59:14 -0800, , add block.wast spec test,,
1459,b6cb4d56ba52ca4637180857b39d81cc2002348b,en Smith <binji@chromium.org>, 2016-03-03 15:03:50 -0800, , use else instead if_else also update testsuite,,
1460,87ca6c9662c9f5f51bbc86c06462d664b5f66d0c,ouglas Crosher <info@jsstats.com>, 2016-01-18 14:58:50 +1100, , change memory size unit page rather power two,,
1461,2029de9cd1a617b6dd7a5fbf18eb01d041b55633,en Smith <binji@chromium.org>, 2016-03-03 14:59:35 -0800, , zero_memory also remove zeromem wasm bison parser.y,,
1462,28f11c235833ccd94a075c4f584a8a54f9534a47,en Smith <binjimin@gmail.com>, 2016-03-03 14:52:14 -0800,37, merge pull request cellule window build window,,
1463,43f0d02fdcc9bc708c44134acd28e51fba334e63,ichael Ferris <mike.ferris@hotmail.com>, 2016-03-02 18:19:09 -0800, , remove custom unistd create wasm platform.h unite platform specific implementation,,
1464,afb456c314504c3ac1bec24fc4e83d45d92d0015,en Smith <binji@chromium.org>, 2016-03-03 08:59:55 -0800, , select type parametric update testsuite,,
1465,1da8695368a117fd6433b115cf9ecbde1abbe799,ichael Ferris <mike.ferris@hotmail.com>, 2016-03-02 14:22:02 -0800, , create zero_memory macro fix nit added header alloca.h,,
1466,5f54da1b9c475d81023e6f072f4d9ce1a9ffb1ae,ichael Ferris <mike.ferris@hotmail.com>, 2016-02-29 17:31:33 -0800, , build window,,
1467,e7a2cce7b4077d38beeaf93f24ac84aa736bbd53,en Smith <binji@chromium.org>, 2016-02-29 17:24:40 -0800, , update testsuite,,
1468,4aeda006d6a2fdb2b8722d42d57bcb06f45c3ecc,en Smith <binji@chromium.org>, 2016-02-25 14:03:20 -0800, , remove globals,,
1469,20135f5f783b8f5cfa5f94683bc8c667e60d4a68,en Smith <binji@chromium.org>, 2016-02-27 15:44:14 -0800, , binary format magic version number,,
1470,6da3f5272ccc3be7384f0a5e5886ee85f755fec8,en Smith <binji@chromium.org>, 2016-02-27 12:41:47 -0800, , use export table update,,
1471,1596a6a2a657c17e4b66afa5fe793e222df44fb3,en Smith <binji@chromium.org>, 2016-02-26 17:25:46 -0800, , add optimized build,,
1472,414dec24c373c5be4dcde89541f687ea554325e4,en Smith <binji@chromium.org>, 2016-02-26 17:00:14 -0800, , nicer error wasm check,,
1473,1da300c87dd26e1db680cb4cd05c265b63b33db1,en Smith <binji@chromium.org>, 2016-02-26 16:35:17 -0800, , error display line caret like clang,,
1474,bfdef5e0e6cb87d876a315185295bd4a7f8ceae7,en Smith <binji@chromium.org>, 2016-02-25 23:58:53 -0800, , update testsuite,,
1475,0abd32fce90cf87518cc14736aac658731d7807d,en Smith <binji@chromium.org>, 2016-02-25 12:21:18 -0800, , remove has_feature,,
1476,e112d190bdb7cfcd2e4d33d1011c9733a2189fdc,en Smith <binji@chromium.org>, 2016-02-25 12:17:35 -0800, , parse exported memory yet supported,,
1477,1d18fe34a0702be39c2647e54b8de9bf59e1e9bf,en Smith <binji@chromium.org>, 2016-02-24 14:22:27 -0800, , move shared binary format stuff wasm binary.h,,
1478,be38053ad83b2d2f7baa98880c276b0b38d41b67,en Smith <binji@chromium.org>, 2016-02-24 13:57:51 -0800, , make wasmtype match binary format wasmtype bitset previously used one place validating wasm check.c added wasmtypeset handle case also moved enums wasm ast.h shared parsing binary format,,
1479,09aa896585957c9b408716abae95c51f658a3741,en Smith <binji@chromium.org>, 2016-02-23 17:02:46 -0800, , allocate variable size wasmexprs,,
1480,d00a6108fc7ca8ab8b2c39d7736940d626294973,en Smith <binji@chromium.org>, 2016-02-23 10:56:44 -0800, , fix .travis.yml,,
1481,c9fcf5abbd6083e248eb3123fd69c2dcb37f074f,en Smith <binji@chromium.org>, 2016-02-23 01:11:49 -0800, , fix lsan crash use libc allocator,,
1482,423c4526d16cb03871f5f7bf059954bc61505a75,en Smith <binji@chromium.org>, 2016-02-23 00:50:35 -0800, , remove wasm.h add wasm check binary writer,,
1483,5134436715452b95cd9d3562c4f183cea0e240ac,en Smith <binji@chromium.org>, 2016-02-23 00:37:44 -0800, , rename scanner lexer add wasm parser lexer,,
1484,af7d453529960c11724e08d77a68d6e8d70254fd,en Smith <binji@chromium.org>, 2016-02-22 23:57:08 -0800, , rename wasm_parse similar change,,
1485,bf1d77eebc45c1b8885df9762362fba1ef6a9b38,en Smith <binji@chromium.org>, 2016-02-22 23:50:58 -0800, , rename parser bison parser lexer flex lexer,,
1486,ec4731b6f9607d9e0545693b0a5586a138278b10,en Smith <binji@chromium.org>, 2016-02-22 23:46:57 -0800, , move ast stuff wasm ast,,
1487,255ba24b78f878b2f37f63f2dd0650baf5d883c3,en Smith <binji@chromium.org>, 2016-02-22 23:29:04 -0800, , use script allocator wasmscript node also header cleanup,,
1488,b7d354bc22d8f5347117282c4e9b9a69281d543a,en Smith <binji@chromium.org>, 2016-02-22 14:30:48 -0800, , formatting,,
1489,da6933289e66a74972d49137ed9e7fc0ed09cea8,en Smith <binji@chromium.org>, 2016-02-22 12:36:24 -0800, , flag switch stack libc allocator propagate flag test run tests.py test run d8.py cleanup main little bit one exit,,
1490,44cc72a7c2b94cf69fc0cc551228054f54b72d46,en Smith <binji@chromium.org>, 2016-02-22 11:57:14 -0800, , add wasm_ alloc realloc free make inline,,
1491,500cb35bb8a43f884a7854e9215a3ef32a6d0ed2,en Smith <binji@chromium.org>, 2016-02-21 13:46:03 -0800, , implement stack allocator wasmallocator interface,,
1492,e3df3f7df06d04ddc46c49dcc9ed1ed8564d3e0e,en Smith <binji@chromium.org>, 2016-02-23 14:25:29 -0800, , grow_memory return previous memory size currently implemented least typecheck also rename old instance resize memory,,
1493,580805a3f531173ecba67550a3584bfd3744df58,en Smith <binji@chromium.org>, 2016-02-23 11:11:56 -0800, , support start function binary format,,
1494,41fd777996046d40a3724579b951e111b68606ae,en Smith <binji@chromium.org>, 2016-02-23 01:03:44 -0800, , update testsuite,,
1495,6ea66d30a17e20dcf82986ad150ea6cd37a7dd67,en Smith <binji@chromium.org>, 2016-02-22 10:29:20 -0800, , update import table support,,
1496,92aabd878f454bd1a105eb99086a0a8118cbab33,en Smith <binji@chromium.org>, 2016-02-19 12:31:36 -0800, , import table binary format,,
1497,12c62b79a1ff2c884e4a6dbbf768c810526bf7fa,en Smith <binji@chromium.org>, 2016-02-21 19:16:11 -0800, , reduce wasmtoken size expensive copy large test file copying token expensive operation previous wasmtoken size 416 byte lp64 build allocating larger union member reduced byte large test file improved parsing time percent,,
1498,2ddbccf550f93d9aa8c7fbd76cfb585aac423af3,en Smith <binji@chromium.org>, 2016-02-18 23:40:50 -0800, , remove reference source,,
1499,924dd78b365192fb25318b42a70a5e0ab3cea553,en Smith <binji@chromium.org>, 2016-02-16 11:02:13 -0800, , fuzz fix crash printing error long func name,,
1500,66862baeb62c6cc65a8718f0ea3f7665dc9f9d08,en Smith <binji@chromium.org>, 2016-02-16 10:12:53 -0800, , fix test added b127c07b,,
1501,b127c07b6d9a6dde6b64c80a4a9350c52f197505,en Smith <binji@chromium.org>, 2016-02-15 13:30:23 -0800, , fuzz fix crash referencing undefined function,,
1502,f43c10557865e63ca93cd9d8bb4e3f47590cb026,en Smith <binji@chromium.org>, 2016-02-07 17:54:23 -0800, , fuzz fix assert memory gcc __builtin_clz undefined zero gcc seems often return value 32. since log_two_u32 implemented sizeof unsigned int __builtin_clz would return something greater uint32_t would wrap large number would hit assertion writing value 255 interesting never seems happen clang always return produce log_two_u32,,
1503,115d44b85d88cc7cd8d43c177da6c95376317979,en Smith <binji@chromium.org>, 2016-02-07 18:12:01 -0800, , fuzz add fuzz build gcc fix build look like gcc little strict potentially unused variable,,
1504,264b120b18c05af8fa4fab1bc3668ff7bf6de471,en Smith <binji@chromium.org>, 2016-02-14 15:23:14 -0800, , update readme.rst change native prototype change bytecode binary encoding change .wasm .wast .bin .wasm change wasm _wasmexp_,,
1505,11634d7fde596c8f025d9eab27b2d26cf405253d,en Smith <binji@chromium.org>, 2016-02-12 19:22:15 -0800, , use hash table binding one large .wast file improved run time minute second,,
1506,efcbd7192266c660c1242a38a5a518f252c8000e,en Smith <binji@chromium.org>, 2016-02-10 12:24:06 -0800, , implement start function supported binary format yet,,
1507,69262ad3d87277de2805d6b6ffa4f85a739f3de5,en Smith <binji@chromium.org>, 2016-02-08 15:50:38 -0800, , update fix order br_if operand,,
1508,6e3185c7bd57ab8f9fa75dde46821c5b84d2bd41,en Smith <binji@chromium.org>, 2016-02-08 13:06:38 -0800, , update testsuite fix br_if order condition come last br_if br_if var cond br_if var expr cond also evaluated last updated yet,,
1509,8761ffdf8992dd8e03390998527cc8663dd6e712,en Smith <binji@chromium.org>, 2016-02-08 13:05:11 -0800, , update fix select order binary format,,
1510,23dc368148fc7827a603e3853f5a40287eb9effe,en Smith <binji@chromium.org>, 2016-02-04 17:03:04 -0800, , update testsuite condition come last select select changed select true_val false_val cond new failure test spec left right.wast evaluation order incorrect,,
1511,87e4f00bdaa11dbc0cf89d81cc3252b03af19f87,en Smith <binji@chromium.org>, 2016-02-04 12:09:10 -0800, , update testsuite,,
1512,aa3940ba53d039aed322abb2e7aba3716f755890,en Smith <binji@chromium.org>, 2016-02-03 11:59:10 -0800, , fix couple bug label break depth break scope always added whether named true block loop tableswitch pair identical block foo ... block ... loop outer inner ... loop ... tableswitch foo ... tableswitch ... block must added implicitly writing block 255 expression tableswitch case expression increase max_depth used create new label node null label work label named break block numbering case tableswitch i32.const table case implicit block generated case case nop,,
1513,7b0765b443ed6750c12a32f6ef48623918c9f1b6,en Smith <binji@chromium.org>, 2016-02-02 11:32:46 -0800, , update test suite,,
1514,d309fce3f5abeabaaf817eb9c8a0f98fbcfd874f,en Smith <binji@chromium.org>, 2016-02-02 11:25:23 -0800, , loop always add two depth level used loop ... add depth loop inner ... add depth loop outer inner ... add depth point spec interpreter started always adding depth loop sure changed recent update testsuite exposed inconsistency,,
1515,f8cd47e723cacdbb513ed7ac4e7259b6088d29b8,en Smith <binji@chromium.org>, 2016-02-02 11:21:24 -0800, , remove cast replace convert removed spec parser long time ago may well consistent,,
1516,1123b97595f751574f82f6b8a3ff8123b5f5bdb0,en Smith <binji@chromium.org>, 2016-02-01 01:06:53 -0500, , binary format require exact alignment specified alignment greater natural alignment memory access still considered aligned,,
1517,466c1a698eeff566ad0613b91e057afccbaaf4fa,en Smith <binji@chromium.org>, 2016-01-31 23:26:51 -0500, , function table entry skip import imported function currently allowed function table list native format make sure skip imported function always defined first specifying entry function table list,,
1518,e7df86a4b63714c39c79c3789cfcae0cf48ff83e,en Smith <binji@chromium.org>, 2016-01-31 17:21:52 -0500, , update third_party,,
1519,bed6955f0339ccd14b5ec63639cdf3c1a838cba8,en Smith <binji@chromium.org>, 2016-01-31 17:12:34 -0500, , write nested block expression count 255 wasm binary format currently one byte number expression block expression count 255 used wrap value out_ u16 function assert value range writing expression list greater 255 expression write series nested block add test well making sure block depth modified,,
1520,146558c4d47860eb8a02ee594006bb4127d79d07,en Smith <binji@chromium.org>, 2016-01-30 15:20:17 -0500, , better message passing many params call fix,,
1521,337b8f7782caa12f43b607d1e36057c934a8427a,erek Schuff <dschuff@chromium.org>, 2016-01-29 11:54:39 -0800, , update torture test failure expectation one failure related varargs function probably compiler bug rework varargs anyway,,
1522,e580017e33eacd030757dac2c6001725e325a149,en Smith <binji@chromium.org>, 2016-01-29 11:51:31 -0500, , write unaligned access byte load store broken older version caused crash look like work,,
1523,b8038680d76b081b5c8250b1f0ca711bcfaa1511,en Smith <binji@chromium.org>, 2016-01-28 00:17:39 -0500, , allow float literal digit 1.e100,,
1524,961a3cbcb594160cc659fe6f3f9fe060644cbf8e,en Smith <binji@chromium.org>, 2016-01-27 23:52:16 -0500, , fix bug parsing memory section long segment lex buffer valid immediately parsing token int token store string slice lex buffer often valid clobbered long segment string,,
1525,6dfe9068fe716c6c1dbf14d76028fa19ab173d1d,en Smith <binji@chromium.org>, 2016-01-26 11:48:10 -0500, , add arity check return expression make typechecking consistent spec interpreter fix issue,,
1526,0c48c8ae4c875a5af79c2a3000e2b687cf08dc46,en Smith <binjimin@gmail.com>, 2016-01-25 11:17:34 -0500,24, merge pull request jsstats nested accept duplicate block label,,
1527,22f0a62c5da053f2e37373a03a01843993cafc71,ouglas Crosher <info@jsstats.com>, 2016-01-24 23:58:29 +1100, , accept duplicate block label,,
1528,bee3f91170d529889dd4d6a561c80abee21db7de,en Smith <binji@chromium.org>, 2016-01-14 14:04:47 -0800, , update rename wasm _wasmexp_,,
1529,102f85ecf68793920fbd5778a0e0d72c056f577b,F Bastien <jfb@chromium.org>, 2016-01-13 18:17:00 -0800, , last torture test failure fixed,,
1530,24eaf46c655feddce6d06c317e2b8af7c77c861b,en Smith <binji@chromium.org>, 2016-01-13 12:05:58 -0800, , update testsuite fix test nan propagation,,
1531,63c1ca991668b403ec066fc11afff74118d2fc09,F Bastien <jfb@chromium.org>, 2016-01-08 13:00:52 -0800, , update known gcc failure fix came,,
1532,720f810e27fef7a80c975ea44bc0e1dccd41827a,F Bastien <jfb@chromium.org>, 2016-01-07 11:32:18 -0800, , wasmate gone remove known failure,,
1533,d610f1bc554e484d7bd3bb295e57cd2c8a6cef0b,F Bastien <jfb@chromium.org>, 2016-01-06 17:12:52 -0800, , update known gcc failure fix came,,
1534,2cceec77253d9d19ba985de2aa88af3ab1c8983e,F Bastien <jfb@chromium.org>, 2016-01-06 14:40:36 -0800, , update known gcc failure fix came,,
1535,91e4862f118797118dd9051c339433211d91f968,en Smith <binji@chromium.org>, 2016-01-06 13:54:46 -0800, , clarify typechecking error message specify whether call call_import call_indirect argument count mismatch add call result result call match expected type,,
1536,532b67012dd1007464dcabeb4a85063bff2875b5,en Smith <binji@chromium.org>, 2015-12-17 22:20:18 -0800, , refactor makefile use macro make easier add executables,,
1537,5df9f43a28c1644a5a946ff73be281bffeaf1305,F Bastien <jfb@chromium.org>, 2016-01-06 13:06:17 -0800, , update known gcc failure bunch fix came,,
1538,db097733fcec89f2bfb7027e418a7f0b6d850bfe,F Bastien <jfb@chromium.org>, 2016-01-06 10:53:20 -0800, , update s2wasm known gcc test failure fixed http github.com webassembly binaryen pull failure hiding failure,,
1539,45b2d99a8a1179dd0f3d54e4e3d64b128bdb217a,F Bastien <github@jfbastien.com>, 2016-01-05 21:19:07 -0800, , add failure missed,,
1540,a45d34e34a2528276f64b47e72c1f70ba33c40b3,erek Schuff <dschuff@chromium.org>, 2016-01-05 16:36:57 -0800,18, merge pull request webassembly constness make ast utility function take const pointer applicable,,
1541,7d5fb53e2b4fb655948e12b865794e9f1145ff8c,erek Schuff <dschuff@chromium.org>, 2016-01-05 16:28:44 -0800, , make ast utility function take const pointer applicable,,
1542,987b720646878c0a6f36e879c4023229a3bf3cf0,en Smith <binji@chromium.org>, 2016-01-05 14:40:56 -0800, , add contributing.md,,
1543,fa1ddb8f7c1f0a63bffeaf352f68a7e448ffeb97,en Smith <binji@chromium.org>, 2016-01-05 14:29:15 -0800, , add license header source,,
1544,ee7a01815045ffbe1ef097ea5af12594fd6ad2f7,erek Schuff <dschuff@chromium.org>, 2016-01-05 14:18:11 -0800,16, merge pull request webassembly support_cxx support use parser ast program,,
1545,519b49121bf028d8646a78e2621c3934fc92c095,en Smith <binji@chromium.org>, 2016-01-05 11:47:05 -0800, , remove store_wrap load_extend expr node copied token type spec repo parser never treated distinctly provide additional information also spec repo reference anymore anyway,,
1546,3d9be10028c6c3136c8e98f32c91fae369bd3ed2,erek Schuff <dschuff@chromium.org>, 2016-01-05 11:35:13 -0800, , rename wasm_export export_,,
1547,d813f8351f17e8be44acd77127e9a6b8e1a69105,F Bastien <jfb@chromium.org>, 2016-01-05 11:34:17 -0800, , add s2wasm known torture failure,,
1548,0b039cdd94ba166b83a37fcbff3b6d50ae4faf07,erek Schuff <dschuff@chromium.org>, 2016-01-05 11:13:50 -0800, , support use parser ast program rename export field wasmmodulefield export reserved word regenerate parser wrap function declared wasm.h extern,,
1549,a2e23d8522096127af8841363e6f0c6aa8edbfc8,F Bastien <jfb@chromium.org>, 2016-01-05 11:12:00 -0800, , rename known torture failure preparation also using sexpr wasm s2wasm output known failure file eventually wasmate die leaving s2wasm,,
1550,e833f46a5ff354901878d31e863a7989ab875329,en Smith <binji@chromium.org>, 2015-12-30 12:51:52 -0800, , remove label node block node always create new scope,,
1551,3f1322072e3ebc95dfeecc33e11095ff4a2638de,en Smith <binji@chromium.org>, 2015-12-30 12:25:49 -0800, , update testsuite repos break test spec repo updated remove label node block always introduce new block scope break memory switch spec test,,
1552,973bec1d32a1292e59e723c9092b1270089c4307,en Smith <binji@chromium.org>, 2015-12-24 15:47:49 -0800, , remove trailing slash makefile perhaps fix 15. seen fail seems official way conditionally create directory makefile,,
1553,cbe74d8c554fbf81ef6330e36cee1e52f38b9475,F Bastien <github@jfbastien.com>, 2015-12-21 13:40:26 -0800,14, merge pull request webassembly update torture update torture failure,,
1554,1873a4c305ea3f101bf1aaea798fd9e939c6653e,F Bastien <jfb@chromium.org>, 2015-12-21 13:23:34 -0800, , update torture failure following wasmate fix http github.com webassembly experimental pull make import ... use result instead return fixing failure hiding failure,,
1555,745467d36aa3828e46b879f6bd59a802c3d021e8,en Smith <binji@chromium.org>, 2015-12-21 13:19:19 -0800, , update fix assert_trap spec test,,
1556,e4e03a8a86295c070cbdbfd91fda99e70f1ea0c5,en Smith <binji@chromium.org>, 2015-12-21 12:49:45 -0800, , fix uninitialized memory access wasmmodule without cached module vector garbage value passed realloc reason blow asan msan change fix 10. thanks mbodart fix,,
1557,bd86c5cdd967c69e5aa049c40a27b8483a98aab2,F Bastien <github@jfbastien.com>, 2015-12-20 15:26:54 -0800, , fix previous gcc torture test update instead removing successful test removed,,
1558,1423e37c31ee421f219c4cbeb399fd5ea86195e6,F Bastien <github@jfbastien.com>, 2015-12-20 15:24:55 -0800, , update expected gcc test failure wasmate emitting export data label recent change made sexpr wasm sad update test failure accordingly linked commit fix wasmate,,
1559,8d13bdfe5c57427460317cd5318c0accc6a3c520,F Bastien <github@jfbastien.com>, 2015-12-19 13:12:24 -0800,11, merge pull request webassembly add,,
1560,10edac7e67d0ab0e44af4692f0f1d1c8945697e6,F Bastien <jfb@chromium.org>, 2015-12-19 13:09:27 -0800, , add none failure classified,,
1561,31e5d00ee922e7be5fb1871b802a3e9349294eda,en Smith <binji@chromium.org>, 2015-12-17 13:42:45 -0800, , update download use directory,,
1562,7fbc0f5b38e1aade586f0c353862ca971ac5cf22,en Smith <binji@chromium.org>, 2015-12-17 13:20:00 -0800, , use upstream instead native prototype,,
1563,a27b0c7b993b0eb9caf6dc7f9d0c7d95f177029c,en Smith <binji@chromium.org>, 2015-12-17 11:41:43 -0800, , remove page_size operation,,
1564,acf0cc3288fc7f45ae1ae4f134ac37a812b4939a,en Smith <binji@chromium.org>, 2015-12-17 10:57:27 -0800, , remove break keyword rename,,
1565,68f771eeeea36fd924734d9c2a27a720d2c01fcd,en Smith <binji@chromium.org>, 2015-12-11 14:45:02 -0800, , fix dump module flag broke rewrote everything,,
1566,5726defaabe668f390ec56ad9e2da59d71512ab9,en Smith <binji@chromium.org>, 2015-12-11 13:02:49 -0800, , update testsuite native submodules fix number spec test assertion fail,,
1567,f22485474182e734ac963234daf81ed63d5c7891,en Smith <binji@chromium.org>, 2015-12-04 17:38:05 -0800, , update native fix unreachable mem oob,,
1568,74767ab12b4908359dcdebe887efadbee1d0f114,en Smith <binji@chromium.org>, 2015-12-08 11:13:33 -0800, , error writing segment size test also print error message fseek fwrite malloc etc fail,,
1569,cd5fed8e82541bd7a515a26267bcd78aed1956e5,en Smith <binji@chromium.org>, 2015-12-07 17:53:41 -0800, , try using travis trusty build,,
1570,79d1accb8ac4bb04028426bd31706ee588c057bd,en Smith <binji@chromium.org>, 2015-12-07 17:41:18 -0800, , run bison flex travis travis run ubuntu precise 12.04 bison 2.5. assume bison 3.0.2,,
1571,ba0bf16686fe0f860d2a759fad10380a362f57b5,en Smith <binji@chromium.org>, 2015-12-07 17:11:51 -0800, , update .travis.yml install use flex bison,,
1572,ed96567158823efab30ff1a943f52faff11cce27,en Smith <binji@chromium.org>, 2015-12-07 14:49:21 -0800, , pin revision script build way native stay sync,,
1573,f89c63cc8860aba532e182d9ae7fbed7c8d19828,en Smith <binji@chromium.org>, 2015-12-07 11:19:45 -0800, , update native spec unreachable pass,,
1574,35a392ba974be8e73a9fdddd4322c7fc7aae47a0,en Smith <binji@chromium.org>, 2015-12-04 14:13:42 -0800, , enable test fixed,,
1575,1c27c600a6883e31651c7f0f94789b2983d44637,en Smith <binji@chromium.org>, 2015-12-04 09:35:47 -0800, , fix link readme.rst,,
1576,27a9c335a1fc7744ba0c596990c65dffe2918977,en Smith <binji@chromium.org>, 2015-12-04 09:09:18 -0800,477, add nan propagation spec test assertion fail x86 generates nan sign bit arm test suite assumes sign bit non determinism mentioned http github.com webassembly design issue 477 yet incorporated spec test,,
1577,b1b72bdad5c6cccafb185104127267230aa22398,en Smith <binji@chromium.org>, 2015-12-04 08:27:21 -0800, , parse memop offset u64 validate check way pas invalid offset assert_invalid,,
1578,1836b189998bbb115989aa8f64d2095e371fd7cf,en Smith <binji@chromium.org>, 2015-12-04 00:51:31 -0800, , proper nan check assert_return use f32.eq assert_return expected value nan instead i32.reinterpret f32 side use i32.eq fix many assertion float_memory float_mis though look like f32.neg still broken,,
1579,0d84706b2307b5315aad72de1ce00d852f2376bd,en Smith <binji@chromium.org>, 2015-12-04 00:05:47 -0800, , add br_if value fix type checking br_if change order br_if br_if cond depth br_if return value br_if cond depth value value discarded anymore example following invalid i32 used block label i32.const ... fix loop label checking inner loop void value use value following invalid loop cont cont i32.const,,
1580,42dcd4261166e08e35109e7739f6cc8c108ac972,en Smith <binji@chromium.org>, 2015-12-03 22:04:20 -0800, , update testsuite break labels.wast sexpr wasm currently parse br_if value,,
1581,5b20c7d49cb76b466f0f3c010e2d107fa738bcc2,en Smith <binji@chromium.org>, 2015-12-03 21:39:07 -0800, , update native fix many spec test,,
1582,ea3658e6f893b7b66443718ae6b336cc539a0103,en Smith <binji@chromium.org>, 2015-12-03 21:09:26 -0800, , update readme.rst,,
1583,d811a7770f45f38c7167caf2f34e3ebb0c2a3740,en Smith <binji@chromium.org>, 2015-12-03 17:03:00 -0800, , handle allocation failure,,
1584,859906ff545a75b38f1decc137ee9ae1cbee8e51,en Smith <binji@chromium.org>, 2015-12-03 14:31:15 -0800, , pas spec verbose flag binary writer,,
1585,72d7881ba492b3e6a152b5575cc49e2c4251e90b,en Smith <binji@chromium.org>, 2015-12-03 14:23:07 -0800, , write func name offset func exported originally done difficult otherwise old binary generator,,
1586,3334ddf0b47c607fe7b1e7cd0371edf781fc1491,en Smith <binji@chromium.org>, 2015-12-03 14:20:45 -0800, , write memory section specified originally match old binary generator necessary,,
1587,e9a5e9aaa92048366cbdca9b82cc5fa07d46c755,en Smith <binji@chromium.org>, 2015-12-03 14:18:58 -0800, , remove todos sharing code code different enough handling label stack wasm check.c wasm binary writer.c complicate thing combine ,,
1588,e3d962588c881da9f499b96e8893c0789fcdb974,en Smith <binji@chromium.org>, 2015-12-03 14:13:31 -0800, , use wasm_ prefix instead bison flex,,
1589,4ea57062ca203309c86dbb6d6446b79aae19207e,en Smith <binji@chromium.org>, 2015-12-03 12:43:30 -0800, , remove old parser binary generator,,
1590,fa51e82d072cf263919dc015fe73ff1f52b8d71d,en Smith <binji@chromium.org>, 2015-12-03 12:42:20 -0800, , move helper function wasm.c,,
1591,292b9410f0acaacd3d1391cab37d86325caadbc9,en Smith <binji@chromium.org>, 2015-12-03 12:32:31 -0800, , pass test sanitizers,,
1592,7d8510455220ca544874240fd8124e19c4a4b2b3,en Smith <binji@chromium.org>, 2015-12-03 12:18:41 -0800, , fix lsan build parse test,,
1593,dad2a8f033293ddd4880807f08a928f83dec957c,en Smith <binji@chromium.org>, 2015-12-02 17:35:36 -0800, , destroy script exiting fix memory leak memory need freed parse fails well,,
1594,92c22bb9f4e25bf348fc943d3d17d0f3d99b2cf9,en Smith <binji@chromium.org>, 2015-12-02 15:03:02 -0800, , fix asan msan build still many many leak fix next,,
1595,8a2fc1e8dfa5d28028414e58c3ba4763754235da,en Smith <binji@chromium.org>, 2015-12-02 14:16:50 -0800, , fix llvm warning,,
1596,d7d038e6936543ff08e1c42d84dcf2a25c549317,en Smith <binji@chromium.org>, 2015-12-02 14:04:26 -0800, , spec test pas well least reasonable expected failure,,
1597,726e2754438e5c232bc1096b5eec5e3245d58c49,en Smith <binji@chromium.org>, 2015-11-30 17:13:44 -0800, , test pas spec test still fail,,
1598,ccfb65fd643040403ca763e7f8261780c8914ca4,en Smith <binji@chromium.org>, 2015-11-28 17:17:01 -0800, , move log_writes option struct,,
1599,a1ea38a07a29f180e127539aa1496f5b72298c53,en Smith <binji@chromium.org>, 2015-11-28 17:09:57 -0800, , track wasmresult since already passing context function fail may well store result value context,,
1600,ffe33de182f63cd860df82e4bc861f59accf8186,en Smith <binji@chromium.org>, 2015-11-28 15:26:01 -0800, , rename wasmwriter move wasmwriter wasmfilewriter,,
1601,fd0f0afcd5e3d5b288535b07097d6340d849d79a,en Smith <binji@chromium.org>, 2015-11-27 14:47:58 -0800, , move parsing test test parse ...,,
1602,bb2bd70cf375aaef4ce774041b37e128b3428e38,en Smith <binji@chromium.org>, 2015-11-26 12:56:32 -0800, , write binary output disk,,
1603,3cd64af0bc07fbf22bffe37ddf8c4308fab9d48f,en Smith <binji@chromium.org>, 2015-11-26 12:56:03 -0800, , fix br_if order br_if var expr,,
1604,577108c2fe3cb783f779f10e9ea2338f36cf8b5c,en Smith <binji@chromium.org>, 2015-11-26 12:55:35 -0800, , fix tableswitch case target order,,
1605,edb2d2f28524e5f510fe948ac4f58c84b0287294,en Smith <binji@chromium.org>, 2015-11-26 12:50:37 -0800, , copy signature func type unspecified happens wasm check.c move binding set wasm check,,
1606,fb8aae99be5bef3204f38287c863434b1c252345,en Smith <binji@chromium.org>, 2015-11-24 16:59:51 -0800, , finished code dump actually write yet,,
1607,37ee626dbeacd62193dd913dddaff5894f7da251,en Smith <binji@chromium.org>, 2015-11-23 17:14:35 -0800, , wip code writing native binary,,
1608,4a7cd6deb3c3b9213ac5eef70c1ea10f1f826fc0,en Smith <binji@chromium.org>, 2015-11-23 12:16:28 -0800, , fix bug wasm check compare ops return i32,,
1609,8d1c826e94c0c0b80cad12b84f1b4a868c5f954a,en Smith <binji@chromium.org>, 2015-11-23 10:18:52 -0800, , use wasmresult instead int,,
1610,1974c762bd6bf2589d6e422576a6e0a9371b6327,en Smith <binji@chromium.org>, 2015-11-23 10:03:16 -0800, , move parsing stuff wasm internal.h,,
1611,2b00d21c76ff924ee1031fddcdc1595e6e2320de,en Smith <binji@chromium.org>, 2015-11-23 09:46:32 -0800, , fix basic test empty file etc,,
1612,f88b8d73ffbf264332c303ed83453e1d22d2e7cd,en Smith <binji@chromium.org>, 2015-11-23 01:56:34 -0800, , better lexing bad string,,
1613,a7a4f31e5006366425c7ade6534d60eb1e1f5beb,en Smith <binji@chromium.org>, 2015-11-23 01:28:03 -0800, , remove wasm keywords gperf,,
1614,9b00550ca0faadb717db0fdd1b91a37773b9a243,en Smith <binji@chromium.org>, 2015-11-23 01:25:08 -0800, , fix assert_return test const args allowed,,
1615,4198e4d8ddd4c015e36fe7e45d40ddb46d822503,en Smith <binji@chromium.org>, 2015-11-23 01:21:56 -0800, , match assert_invalid output,,
1616,e9a0f7a81c6606e5ab57252f73a87adb226bc062,en Smith <binji@chromium.org>, 2015-11-23 01:08:04 -0800, , check ast,,
1617,c038821891e0a35acf0aca958c45c840807eaa85,en Smith <binji@chromium.org>, 2015-11-20 11:07:17 -0800, , cache module field convenience,,
1618,b30d732a20f2d30a4c0579eadf4a9d79e5d3b128,en Smith <binji@chromium.org>, 2015-11-20 09:58:57 -0800, , move vector stuff wasm vector,,
1619,b521ec614d3830f26a2c1917aacd3a2b308683ac,en Smith <binji@chromium.org>, 2015-11-18 16:39:02 -0800, , remove wasm lexer.h,,
1620,e6dde0e35ed5e16c6dfd54920352fc73f18c884d,en Smith <binji@chromium.org>, 2015-11-18 16:04:29 -0800, , validate integer float literal,,
1621,c2f8eb80273e11a5bf6094cf528a09ea73cfe2dc,en Smith <binji@chromium.org>, 2015-11-18 15:38:05 -0800, , move wasm2.h wasm.h,,
1622,4da68a0a726bbc2add3de64e1f1149a8e977a9ba,en Smith <binji@chromium.org>, 2015-11-18 15:36:33 -0800, , cleanup wasm2.h typedefs,,
1623,63aa52aa1fd786b229e4be7493f4b5f14777a90f,en Smith <binji@chromium.org>, 2015-11-18 15:26:03 -0800, , move yylloc_default wasm parser.y,,
1624,d6b075549d43bdeea225ef679dba00284a75ce2e,en Smith <binji@chromium.org>, 2015-11-18 15:10:30 -0800, , rebase bunch test new output,,
1625,b52ec9837de5f2ecf7eec6c9e36a359709ccfca5,en Smith <binji@chromium.org>, 2015-11-18 14:53:02 -0800, , fix clang build,,
1626,0154e0e1615ce75a06bf396b5978b7c3e7c089f6,en Smith <binji@chromium.org>, 2015-11-18 14:47:02 -0800, , move main function sexpr wasm.c,,
1627,bdcb5b0eb07cbc6890d2f1d46afa517c853c8094,en Smith <binji@chromium.org>, 2015-11-18 14:18:27 -0800, , change yylex yyparse signature pas wasmparser wasmparser hold resulting wasmscript,,
1628,173153fc9d3968449813866a327fa6cc4bf321ae,en Smith <binji@chromium.org>, 2015-11-18 13:39:27 -0800, , parse offset align memops parse consts,,
1629,11ce1df5cad89fc3e35d39463c48a52ce3f8a10b,en Smith <binji@chromium.org>, 2015-11-18 12:53:28 -0800, , build ast parser,,
1630,43ce1481fe6943bcc6ac9937df5ff8dc382e82da,en Smith <binji@chromium.org>, 2015-11-14 13:23:47 -0800, , add lex parse rule match sexpr wasm sexpr wasm test construct removed spec globals i32.not ... break ... expr spec var expr br_if var expr spec say br_if expr var page_size,,
1631,11af4d292b1307c6ec5d468096e9fbf3b13368b5,en Smith <binji@chromium.org>, 2015-11-14 13:06:19 -0800, , add filename wasmlocation,,
1632,67ee864b725b4d2d46b377ef728c4720d0ffa98d,en Smith <binji@chromium.org>, 2015-11-14 12:58:00 -0800, , refactor move lex error parse wasm2.h,,
1633,3442b0bc98a5fc9e6b4bc792f1be1e2d41d7b1e4,en Smith <binji@chromium.org>, 2015-11-14 12:49:35 -0800, , rename wasm tokens.h wasm2.h fix parser deps,,
1634,7cb9d2e4ee5a8ccd9d142dd78f71e7a259016219,en Smith <binji@chromium.org>, 2015-11-14 12:31:30 -0800, , make parser grammer list left recursive expr_list tricky made left recursive func_fields modified func_fields empty expr expr_list lpar param value_type_list rpar func_fields ... expr_list left recursive rule make empty expr_list left shift reduce conflict func case impossible whether start currently empty expr_list start parameter result local fix prevents empty reduction lpar always shifted,,
1635,81aed54c73be11b7c80111b21af7336143e11ee9,en Smith <binji@chromium.org>, 2015-11-13 23:33:28 -0800, , better error invalid atom parse cast expr,,
1636,83e6c83a67745103b344c9b2bf270d9effdbf83f,en Smith <binji@chromium.org>, 2015-11-13 23:19:09 -0800, , bison parser mostly copied spec,,
1637,713501c8644d3e5bf5b10bdea8eb19c3b874ba7b,en Smith <binji@chromium.org>, 2015-11-13 20:05:41 -0800, , generate token bison,,
1638,99ccd9463521221a710045ee194f6187e3849018,en Smith <binji@chromium.org>, 2015-11-13 17:25:48 -0800, , better location info,,
1639,b80d5b6948ab7c1394d891fa91eeefd9b339fbf2,en Smith <binji@chromium.org>, 2015-11-13 15:58:31 -0800, , lexer using flex,,
1640,00389e153c4532de0ad35df4afa0d48680b20df4,en Smith <binji@chromium.org>, 2015-12-01 15:49:14 -0800, , store wasmlabels linked list stack previous implementation stored wasmlabels vector cached pointer value pointer potentially invalidated whenever new label pushed,,
1641,b3bd89333758918e664557c981eeb5e1c2f5b865,en Smith <binji@chromium.org>, 2015-11-30 10:54:52 -0800, , update native prototype fix spec test labels.wast i32.wast i64.wast pas,,
1642,488977367f9059773513eb2cd91778adadaa1f96,en Smith <binji@chromium.org>, 2015-11-19 19:38:39 -0800, , disable spec address.wast test produce inconsistent output native read oob memory,,
1643,49f8319a63ac46741903632c411f1f527d410332,en Smith <binji@chromium.org>, 2015-11-19 19:38:12 -0800, , generate code tableswitch,,
1644,b011fc93ceb4c86953f62ae87b29697abec46116,en Smith <binji@chromium.org>, 2015-11-19 16:08:08 -0800, , refactor tableswitch parsing quite convoluted make easier output order want,,
1645,d9be80ad4d4795aadbc2773ae14ee1e9b58634e3,en Smith <binji@chromium.org>, 2015-11-12 11:08:04 -0800, , parse tableswitch codegen yet,,
1646,2a396f1abc7c03dbe286e217100c86b1eaf7d965,en Smith <binji@chromium.org>, 2015-11-12 15:23:55 -0800, , dedupe signature defined type ... fix func_ptrs spec test,,
1647,c7a32a54827b5a24b038a4a222b0d0c9e7badd10,en Smith <binji@chromium.org>, 2015-11-20 00:32:19 -0800, , use return opcode,,
1648,d170b70a9f34902f1d87837f6896d5543e79d459,en Smith <binji@chromium.org>, 2015-11-19 11:18:23 -0800, , update native testsuite submodules,,
1649,7c68cfbf83344943a3d29c179ffcf1328ee24c56,en Smith <binji@chromium.org>, 2015-11-09 15:06:36 -0800, , support load store offset,,
1650,af91ed2b144d519f4738e015c7cdfe69bf02344e,en Smith <binji@chromium.org>, 2015-11-17 12:49:34 -0800, , reverse operand order br_if used br_if label expr br_if expr label,,
1651,80bd0d01966347156f7502bf19aaf81c3c48d97d,en Smith <binji@chromium.org>, 2015-11-17 12:20:20 -0800, , parse load store offset uint32_t,,
1652,6c363e7e175523a28871b66dc5d2c53fd9d1c234,en Smith <binji@chromium.org>, 2015-11-17 12:18:01 -0800, , remove page_size operator,,
1653,a4830373e6002946f098f4cb4459a4e81ca740ec,en Smith <binji@chromium.org>, 2015-11-17 12:14:46 -0800, , update testsuite fix test test change spec test longer reference page_size address.txt fails offset uint32 currently allowed sexpr wasm,,
1654,6fcd1ac50cd451ae1682069526c07ab2db8e8e96,en Smith <binji@chromium.org>, 2015-11-17 12:12:19 -0800, , update native prototype mark broken test test failure i64.clz implemented native seems return i32 instead i64 page_size removed native testsuite updated remove yet,,
1655,0f4363e8119fbed848456a6b2f2aa2abb926e9ca,en Smith <binji@chromium.org>, 2015-11-12 14:41:17 -0800, , update native repo fix importing print failure func_ptrs sexpr wasm bug dedupe function signature spec repo want,,
1656,b688bfb5f6c3036ab72c9c8095aff70ec0a752eb,en Smith <binji@chromium.org>, 2015-11-12 13:42:37 -0800, , skip fewer spec test clean run d8.py output fac unreachable still skipped lock machine minute running make test,,
1657,16eadc8bfc631d53635409bbafbb8b5d05d88438,en Smith <binji@chromium.org>, 2015-11-12 12:48:04 -0800, , display info signal raised test,,
1658,a268a22ab4e3fbd18aed47fa06db164523d0449c,en Smith <binji@chromium.org>, 2015-11-12 12:01:29 -0800, , deprecate flag always supported,,
1659,97d4d32acd525fbb9a95a8a831d6d7738fadd441,en Smith <binji@chromium.org>, 2015-11-12 11:54:11 -0800, , add test trapping call_indirect,,
1660,94c92a31e6160fa39e5f95b1e44da6c3ea74c16d,en Smith <binji@chromium.org>, 2015-11-12 11:45:55 -0800, , generate unreachable opcode add test native support opcode doe prevent error find unreachable code e.g func param i32 result f32 if_else get_local unreachable f32.const,,
1661,50414347bfc7eae595bc57409a4aa3e6eba3d054,en Smith <binji@chromium.org>, 2015-11-12 11:20:53 -0800, , add test empty function,,
1662,32d73a63ea51a8d22416e4d8a2c4fcd474db7086,en Smith <binji@chromium.org>, 2015-11-12 11:18:06 -0800, , update native prototype add unreachable opcode add return opcode trap call_indirect signature mismatch trap throw instead crashing empty function allowed,,
1663,53a431e87288e334de7ede83c5a0a73f0566f823,en Smith <binji@chromium.org>, 2015-11-09 17:31:38 -0800, , add unreachable operation supported native spec test fail typecheck,,
1664,46ccb024669fe7e75d77740bdd164d45103016cb,en Smith <binji@chromium.org>, 2015-11-09 17:20:32 -0800, , fix loop label match spec spec recently changed loop label loop without label implicit continue label loop ... loop one label continue label loop cont ... cont loop two label exit label first loop exit cont ...,,
1665,d1c9f08a1e92ec0118dfc5b1dd99fd890d0ef6f1,en Smith <binji@chromium.org>, 2015-11-09 16:46:12 -0800, , parse tagged nan new format nan 0xabc,,
1666,b4d0f1764b6cc0b00fc26c37f16c23a6db0ee94f,en Smith <binji@chromium.org>, 2015-11-09 16:38:28 -0800, , update testsuite repo disable broken test,,
1667,0a6ba2ea0868aed42856bbb9c3fcc2fa11e9dc46,en Smith <binji@chromium.org>, 2015-11-09 12:49:23 -0800, , add if_else keyword,,
1668,4b7372d1de081a1d2a19c0c2efe1f59799faec15,en Smith <binji@chromium.org>, 2015-11-09 15:43:04 -0800, , use built native br_if instead emulating,,
1669,27477b0c7e7d4172aebdec835f8a23a5897cc899,en Smith <binji@chromium.org>, 2015-11-09 15:31:40 -0800, , update native prototype add select test,,
1670,904b6621acde8101dd3ff3554a0384b39b59baba,en Smith <binji@chromium.org>, 2015-11-06 09:13:25 -0800, , parse import statement function type,,
1671,e9756cbdff00906cfccfd983f8bacef1c948a324,en Smith <binji@chromium.org>, 2015-11-05 15:11:21 -0800, , update testsuite add name test,,
1672,c893bac8635834738c004006370594effac25895,en Smith <binji@chromium.org>, 2015-11-05 15:10:00 -0800, , add func_ptrs select spec test,,
1673,fbe2c36ddc977033c37d8e498ee85cc3bfd7861b,en Smith <binji@chromium.org>, 2015-11-05 14:58:45 -0800, , update native merge stmt expr branch break test call variadic import e.g print,,
1674,c55505b9bb005db785cc888938e0827b418fd8bc,en Smith <binji@chromium.org>, 2015-11-04 17:56:53 -0800, , gen binary select operator native currently implement typed either may change later,,
1675,3a63c58706a7d0ee35febdd3e28ad4bbe33bd454,en Smith <binji@chromium.org>, 2015-11-04 16:53:18 -0800, , remove implicit branch top loop,,
1676,743624656b6479303e0caed3dbeabfe1d7e1ce28,en Smith <binji@chromium.org>, 2015-11-04 16:19:30 -0800, , fix gen native change make stmt expr big change statement ops everything expression opcodes shuffled around loop longer implicitly branch top loop two break scope one continue scope deeper one exit scope return statement removed return need break top level block,,
1677,80fb89290acd3e39a8d61c762dd40a81b15f36a3,en Smith <binji@chromium.org>, 2015-11-05 12:56:12 -0800, , remove switch operator add tableswitch solidifies,,
1678,25e51e5b9cbf6e874fac99bf5d70accc825bac7e,en Smith <binji@chromium.org>, 2015-11-04 17:40:08 -0800, , parse select expression,,
1679,32b4cca62aded23d6925ee63da8a9462f415967f,en Smith <binji@chromium.org>, 2015-11-04 17:06:50 -0800, , use testsuite repo spec test,,
1680,cb5b2452487ba73e57bfe3b6717110cc249f1ac9,erek Schuff <dschuff@chromium.org>, 2015-11-02 22:59:29 -0800, , pas exported function after_export callback callback useful name,,
1681,d6e3acacfd7e97cc618f2021f300e57cadf40d82,en Smith <binji@chromium.org>, 2015-10-28 14:36:53 -0700, , correct author file add contributor,,
1682,631ea96120b515d9a5c5ff8118e27eb75c16b400,en Smith <binji@chromium.org>, 2015-10-28 14:33:35 -0700, , better error message spec file without spec,,
1683,0f618028ae252108c341478eeaa4c8ef7ba65a8d,en Smith <binji@chromium.org>, 2015-10-28 14:31:20 -0700, , rename multi module spec,,
1684,0cf037b5625343cb280886a0b69551c65fedc0c2,en Smith <binji@chromium.org>, 2015-10-27 12:41:11 -0700, , add spec address test test align offset,,
1685,3f445ef6a44c0fe9fcca84a367501ed6a86279ed,en Smith <binji@chromium.org>, 2015-10-27 12:39:23 -0700, , fix align test change alignment syntax,,
1686,c99cc1ae2bf085e165ef975fde4c4fee91ebd8e1,en Smith <binji@chromium.org>, 2015-10-27 12:36:32 -0700, , parse load store offset,,
1687,71416c0c431d997ca6702ef08099fefecf5d7abb,en Smith <binji@chromium.org>, 2015-10-27 12:18:15 -0700, , fix parsing align immediate failure parse align ... must rewind token else misspelling incorrectly use normal alignment,,
1688,904f2c0b0d5618d6ceeb9a8b017d467363961a3e,en Smith <binji@chromium.org>, 2015-10-26 10:42:20 -0700, , fix bug call_indirect signature index also add call_indirect test case,,
1689,b756bd9837ddb8f0752fd073e2e5901699464f07,en Smith <binji@chromium.org>, 2015-10-26 10:41:20 -0700, , update native prototype,,
1690,86466bbdb2053dd057a88cab456d59be8d08ccc7,en Smith <binji@chromium.org>, 2015-10-23 17:29:08 -0700, , dedupe function signature one signature table function function type import reference index preparation properly supporting call_indirect,,
1691,6159801f83d483dd6d7742ba4d1558c73211f285,en Smith <binji@chromium.org>, 2015-10-22 17:52:35 -0700, , rename signature function_types wasmmodule,,
1692,ceb86ed8a32adbeccf9801e9b7b4fe16669b625b,en Smith <binji@chromium.org>, 2015-10-22 17:28:54 -0700, , add destroy_module wasm gen,,
1693,ef6e448d9b15def1020308de3ebc2e2bc799d037,en Smith <binji@chromium.org>, 2015-10-22 17:02:26 -0700, , update native prototype,,
1694,d4cafcc862bda2756a8e43ef4d1c68bc17c76a3f,en Smith <binji@chromium.org>, 2015-10-21 18:03:48 -0700, , fix dumb parse bug parsing call_indirect first argument must function index,,
1695,82d7e2e6830263ecaf7777f42435fc64fb0f2ca1,en Smith <binji@chromium.org>, 2015-10-21 17:47:40 -0700, , output call indirect operation,,
1696,adcc251f16729429276b6762e8aec323c5cfa778,en Smith <binji@chromium.org>, 2015-10-21 17:16:59 -0700, , fix bug copying function args signature,,
1697,433c26322cb428a5c97573e3b45bcafd59f1b0f8,en Smith <binji@chromium.org>, 2015-10-21 17:06:02 -0700, , output function table,,
1698,5c6844d9b1c1b6885395514bba2124a7c97932ff,en Smith <binji@chromium.org>, 2015-10-21 16:20:58 -0700, , add dump test function signature,,
1699,551b65d911f5225aaf7bc86a90ce06f853f4e359,en Smith <binji@chromium.org>, 2015-10-21 14:52:52 -0700, , add alias break,,
1700,64cbe0ec8321b960b4452b15a1cbc63e4bfd9cfe,en Smith <binji@chromium.org>, 2015-10-21 12:40:20 -0700, , update native prototype new binary format new binary format optional section marked byte name segment data must come section major change format function body inlined function header make much easier append assert_ function module fact place function section last write assertion function directly buffer tricky part function count stored leb128 mean may need shift function section function count increase,,
1701,4821a1d9a0e3ee4846135de2b4166105ca33625b,en Smith <binji@chromium.org>, 2015-10-19 15:42:08 -0700, , remove,,
1702,7323d51f4ca5e2680267046880db141147d06d8e,en Smith <binji@chromium.org>, 2015-10-19 15:31:35 -0700, , always typecheck way spec repo doe remove continuation native typechecking stuff making thing complicated,,
1703,bfe6f5b324e6d402d6f9c19c36eabacbb42a2e0e,en Smith <binji@chromium.org>, 2015-10-19 12:31:50 -0700, , use call_import,,
1704,c99102319ba39be11d8cac814c942a822f1d7c1f,en Smith <binji@chromium.org>, 2015-10-16 14:33:11 -0700, , parse labeled switch statement,,
1705,41543201fa6d6021a91045bba81431eda2b0021f,en Smith <binji@chromium.org>, 2015-10-19 01:01:54 -0700, , store cooky,,
1706,fa021c2b44fa7dbbf9bf262713cb3f40e12c16c0,en Smith <binji@chromium.org>, 2015-10-19 00:27:13 -0700, , update download always use submodule sha,,
1707,f82e0c4b481982d6c8c3af79242f3fc9da7e77e8,en Smith <binji@chromium.org>, 2015-10-18 23:08:40 -0700, , refactor callback use common struct contains useful info callback,,
1708,7404877ef5cce5576884a7c3e8da793bf4d50d4a,en Smith <binji@chromium.org>, 2015-10-18 17:28:37 -0700, , remove f32 f64 .switch,,
1709,b99734a2fa340f67f9136e4d98fb632ad534b66e,en Smith <binji@chromium.org>, 2015-10-18 14:53:36 -0700, , update native prototype,,
1710,dd791ab77721d7a1ddac27f3d64daefefda7f4b7,en Smith <binji@chromium.org>, 2015-10-17 14:37:40 -0700, , optimize appending assertion function module previously add assertion module individually requires remapping value module assertion function add assertion function right writing module,,
1711,32afd5f9599d8b9c257eb24904da57bb7ebdd810,en Smith <binji@chromium.org>, 2015-10-16 12:33:34 -0700, , memory spec test pass,,
1712,12888520802534121a62a50fd3297964e872a67d,en Smith <binji@chromium.org>, 2015-10-16 12:32:04 -0700, , expose native memory access byte parser move logic wasm gen,,
1713,fe1277ea2310112dd0ffa33902e2915534724ab1,en Smith <binji@chromium.org>, 2015-10-16 12:17:56 -0700, , parse new alignment syntax i32.load8_u i32.load8_u align,,
1714,ce932fb77ca412115d87f69f40ee0e95e4aa3e9a,en Smith <binji@chromium.org>, 2015-10-16 11:52:29 -0700, , update spec repo,,
1715,34777568c0e52d9a302b4021835e0dab6d9cb083,en Smith <binji@chromium.org>, 2015-10-16 11:48:22 -0700, , renamed resize_memory grow_memory semantics change well resize_memory given absolute size whereas grow_memory given relative size add really matter though native support anyway,,
1716,c9e458ad0db8938330b34dd6c1b94a797ef8fa8b,en Smith <binji@chromium.org>, 2015-10-16 10:23:01 -0700, , increase travis test timeout reduce verbosity,,
1717,6aefb09a68602cce2e20016a8ae01577f705bf69,en Smith <binji@chromium.org>, 2015-10-16 10:05:48 -0700, , generate opcodes br_if general straightforward mapping br_if label cond cond break label addition loop implicit branch top emulate native add break last statement every loop loop exit ... loop exit ... break exit finally code generated llvm currently loop exit label continue label remap loop exit br_if exit cond loop exit cond continue exit break exit continue operator supplied native wasm,,
1718,33216d80bfe6c92ba6acfc1a084c219ba05a188e,en Smith <binji@chromium.org>, 2015-10-15 18:18:58 -0700, , parse br_if behind flag,,
1719,9e46a586e7aa12d1f7e0c4a86e243ccabe70342a,en Smith <binji@chromium.org>, 2015-10-15 12:58:39 -0700, , parse call_indirect,,
1720,e51f42f27f0e9616180a6d75f406f59bdc9f88fd,en Smith <binji@chromium.org>, 2015-10-15 12:35:40 -0700, , parse function table,,
1721,f9c0f0db37872cf52af14856d2243ff740986318,en Smith <binji@chromium.org>, 2015-10-14 18:20:06 -0700, , parse function explicit type signature,,
1722,13e7f06a36d81ab62abdfdfad8b60a3e881d0025,en Smith <binji@chromium.org>, 2015-10-14 16:32:15 -0700, , refactor reuse,,
1723,c44bfa8eda2f96063d856eaa45fef22b42cc439e,en Smith <binji@chromium.org>, 2015-10-14 16:08:32 -0700, , parse function type signature also refactors import parsing use function match new behavior spec repo,,
1724,56d3142a82a8856496652f604b2268e11e928a9b,en Smith <binji@chromium.org>, 2015-10-13 23:10:54 -0700, , run couple failing spec test,,
1725,c122f7523957131201921766a2fb8dbe75b7cef1,en Smith <binji@chromium.org>, 2015-10-13 22:59:59 -0700, , use one counter assert function,,
1726,9c56f163e228ce6fbe918509577060aa202d0f09,en Smith <binji@chromium.org>, 2015-10-13 22:38:42 -0700, , nicer output spec test print success failure also print file line error,,
1727,0b2ae03147db7954b46cce5881fcd04beb0ef200,en Smith <binji@chromium.org>, 2015-10-13 21:24:11 -0700, , change prefix test file format use comment character expression format test file easily loaded sexpr wasm directly key value stdout  standard output stdout,,
1728,49c965d911d61c9949a1047363e87c0d54e1539e,en Smith <binji@chromium.org>, 2015-10-13 18:45:13 -0700, ," mark 32,64 test slow also change behavior slow double timeout instead skipping",,
1729,534349a24d7485dd2098ee10df080df53354935d,en Smith <binji@chromium.org>, 2015-10-13 18:37:53 -0700, , run spec test crash rather skipping test crash run strip callstack output consistent,,
1730,4ad13fc40a15f85d95b145c5b84c4e156c6af059,en Smith <binji@chromium.org>, 2015-10-13 18:15:30 -0700, , fix bug calling assert_return void function invoke void function assert_return always return,,
1731,b62edfddb25bdbb57ce52cbe2b1e9ae329937024,en Smith <binji@chromium.org>, 2015-10-13 18:01:42 -0700, , add new spec repo test,,
1732,ec9b719421d24b630c8b4a173d292639ea9d3b0d,en Smith <binji@chromium.org>, 2015-10-13 17:41:16 -0700, , update spec repo,,
1733,4449e0a0d2eedc3e12524c5c65f29a9b1e2b3398,en Smith <binji@chromium.org>, 2015-10-13 17:27:29 -0700, , fix stupid bug parsing atom containing open parens,,
1734,7601228b1391c31830f82c4fd5ae039b053eeb70,en Smith <binji@chromium.org>, 2015-10-12 18:21:23 -0700, , labeled block loop new syntax block foo expr loop exit expr loop exit cont expr label optional specified count numeric break skip block block block break note true block loop unnamed label anonymous referenced numerically label break additional change label statement longer implicit block illegal label foo nop nop,,
1735,4200ec1effe30d98c3c59ea26c8d6c79b6592291,en Smith <binji@chromium.org>, 2015-10-12 15:50:31 -0700, , remove globals wasm gen.c,,
1736,44f9fea148194b28e4cd330090767192a0c782c6,en Smith <binji@chromium.org>, 2015-10-12 15:35:07 -0700, , use global quiet variable spec.js nicer pas call createmodule runtests,,
1737,985f90f26eb57217681ebb42b93494357100ff5f,en Smith <binji@chromium.org>, 2015-10-12 15:19:39 -0700, , add flag enabling verbosity running spec test flag multi module verbose added default running test run d8.py spec think nicer quiet default,,
1738,218ec7433f7ea692bb1d689f2da412c18542cf77,en Smith <binji@chromium.org>, 2015-10-12 15:17:57 -0700, , add katelyn author,,
1739,2e0f15e4153f626134e2b86f79f0c089d7297be6,atelyn Gadd <kg@luminance.org>, 2015-10-12 14:46:47 -0700, , update spec.js expose write entrypoint writing raw byte stdout suppress text passed assertion,,
1740,a86003ac1f90e3c23d2ccc3b0bc4fa42fdaada22,en Smith <binji@chromium.org>, 2015-10-12 11:39:44 -0700, , add sourcelocation assertion callback,,
1741,1b9690935004f3897b426b2d0fd1605bc099507b,en Smith <binji@chromium.org>, 2015-10-12 11:11:36 -0700, , update readme.rst,,
1742,81c9d80890074b9cf8820a8e3f3a9ebb72807a22,en Smith <binji@chromium.org>, 2015-10-09 12:16:16 -0700, , add new spec test also update reason skipping certain test,,
1743,467ba74aaca124f9d326e7abcdd202945e8f2ccf,en Smith <binji@chromium.org>, 2015-10-09 11:51:51 -0700, , update spec repo fac test fails test callstack exhaustion fails native prototype,,
1744,700bdb669b294f00aa6778bcb20e4a9755956b68,en Smith <binji@chromium.org>, 2015-10-08 15:43:05 -0700, , added flag typecheck like spec repo,,
1745,2c75ab33aea116b39c5410eefd5263c5a494a0e7,en Smith <binji@chromium.org>, 2015-10-08 13:57:39 -0700, , change wasmtype bitfield preparation handling spec repo style type checking,,
1746,40b92812ba04ca0a698bf452e2f01af14ed2a620,en Smith <binji@chromium.org>, 2015-10-07 23:47:40 -0700, , fix nan parsing strtod strtof always parse nan quiet nan parse manually fix float_literals spec test,,
1747,657f26f2b5af98a3e61f7e1a48c4ff50f80ead16,en Smith <binji@chromium.org>, 2015-10-07 22:56:58 -0700, , parse miscellaneous floating point value strtod strtof already parse nan infinity hex float fine except nan never return nan sign bit set change fix well making sure arbitrary nan using syntax nan 0xabcdef parse properly strto handle lexer stopping open parenthesis added somewhat ugly hack handle case,,
1748,ca76647b161efb9ddae55969d281bd41e46e3cd2,en Smith <binji@chromium.org>, 2015-10-07 22:31:27 -0700, , reuse hexdigit read_uint64,,
1749,58973c09db95fe94ce35d164501aaf20b1eaed48,en Smith <binji@chromium.org>, 2015-10-07 22:27:36 -0700, , better error bad const literal,,
1750,c1ec4b2d31243127d2a677bd7e0c09f5ed8a08a8,en Smith <binji@chromium.org>, 2015-10-07 22:25:06 -0700, , use strtof parsing float,,
1751,9e2e3391daa7391c54092158b1b9cdf2f4f01e8e,en Smith <binji@chromium.org>, 2015-10-07 22:19:47 -0700, , read_ function take string arg pointer string,,
1752,a5996f881d70e4a371fd2743a38ac46e7a35dd29,en Smith <binji@chromium.org>, 2015-10-07 22:03:24 -0700, , stop using strncmp wasm parse easier write string comparison hand previous comparison incorrect would succeed string shorter expected string,,
1753,4c7751ee6b5606580f3392c3818980b8a1adeac6,en Smith <binji@chromium.org>, 2015-10-07 15:39:53 -0700, , change reason f32 f64 test fail supported f32.min f64.min,,
1754,bb4d8862ad50df8a9276f6bb219037f3dd784984,en Smith <binji@chromium.org>, 2015-10-07 15:37:57 -0700, , add new spec test,,
1755,3249100758ed7d994a9dbeff05a20a1b8b94e478,en Smith <binji@chromium.org>, 2015-10-07 15:37:28 -0700, , rename assert_eq assert_return,,
1756,7f0e0aa84429b9fb326b1350722cf712df44133f,en Smith <binji@chromium.org>, 2015-10-07 15:28:12 -0700, , add,,
1757,f0c43ec97750b6f989ab0bcd8380a0820f8813c8,en Smith <binji@chromium.org>, 2015-10-07 14:03:00 -0700, , update spec repo,,
1758,73aebd6c48ff78991db1e57bc7d5ac51be58c697,en Smith <binji@chromium.org>, 2015-10-07 13:07:32 -0700, , update native prototype,,
1759,64fb062d0cd242962f56eb82d6c654fac848ea89,erek Schuff <dschuff@chromium.org>, 2015-10-07 11:05:17 -0700, , revert change print output keep test passing,,
1760,0062770e04b6342f333c214ab6dbf47789e87e79,erek Schuff <dschuff@chromium.org>, 2015-10-07 10:53:01 -0700, , rename assert_eq assert_return match recent change spec repo left assert_eq alias assert_return accomodate existing test although semantics compare subtly different renamed enums event name assert_return also left spec test alone,,
1761,bfa078a2eaf3eb1d62d83f395618d29a0deb74c5,en Smith <binji@chromium.org>, 2015-10-05 16:09:42 -0700, , pas exported function name after_export after_export callback called multiple time per export statement currently possible distinguish exported function exported multiple time change fix,,
1762,b5aeea4a0c364447258fed31ed824a8296c6cef7,en Smith <binji@chromium.org>, 2015-10-05 15:35:00 -0700, , move local remapping wasm parse wasm gen native prototype group local type order i32 i64 f32 f64 originally remapping parser really belongs wasm gen,,
1763,5a40424dd10dc20f961837793b161093b77d0b09,en Smith <binji@chromium.org>, 2015-10-05 10:24:46 -0700, , rename hash wasm keywords,,
1764,cc066066a36d02b3470e0e85ef0c4d9ae26f77e8,en Smith <binji@chromium.org>, 2015-10-05 11:02:11 -0700, , update download newest native prototype,,
1765,a4e7b20070ab1e6dd7a8f938de599fdf7eda9c4f,en Smith <binji@chromium.org>, 2015-10-05 10:46:02 -0700, , parser callback switch operation,,
1766,ef887d0f7209096e0275993a3c8773ef2dfb2dd3,en Smith <binji@chromium.org>, 2015-10-02 14:16:06 -0700, , fix typecheck switch statement switch spec test still fails i64.switch implemented though,,
1767,78bc9ca08abf6506c0cd7afebb33d978b9bb2722,en Smith <binji@chromium.org>, 2015-10-02 13:58:57 -0700, , add resizing spec test,,
1768,0319579cebe64b45785d8ab0118c07de264532d0,en Smith <binji@chromium.org>, 2015-10-02 13:43:35 -0700, , update native prototype need specific rev work properly unless repo sync change function used native prototype,,
1769,864167100b48e71ad7180855e0a8e60b696b8ea1,en Smith <binji@chromium.org>, 2015-10-02 13:40:58 -0700, , flag build d8.sh script,,
1770,6ebd6dbb6ec4fcaed99f62ac3bf40ae620d4167d,en Smith <binji@chromium.org>, 2015-10-02 12:13:17 -0700, , add page_size memory_size resize_memory ops currently implemented native prototype opcodes aside memory_size defined spec,,
1771,4c8743b82144c44d54e4b3238ad016ccee722d89,en Smith <binji@chromium.org>, 2015-09-29 16:01:11 -0700, , add author file,,
1772,da0c5cd8ccf0fabeeb89d70e8a573e4b267712de,en Smith <binji@chromium.org>, 2015-10-02 09:26:40 -0700, , support exporting function multiple name enough handle spec test actually export function name except first native prototype currently allows function exported one name could work around introducing new function forward one implemented yet,,
1773,a36333d005c3429f2cba23725471f90a70d10ee6,en Smith <binji@chromium.org>, 2015-10-02 08:51:53 -0700, , expression based break statement,,
1774,e0446aa3366580bde807294f83172509e5f25b8c,en Smith <binji@chromium.org>, 2015-10-01 11:47:31 -0700, , without else return type void sugar cond nop,,
1775,e764e67be731d67ad57159863520a0dfa46fc4f8,en Smith <binji@chromium.org>, 2015-09-30 15:54:36 -0700, , update spec repo,,
1776,69f8352bcc648d706843cf007ae5e9b9b075d3d0,en Smith <binji@chromium.org>, 2015-09-30 14:10:48 -0700, , better handling exception test run tests.py previously exception type error would crash worker process would prevent test finishing,,
1777,f1db1aec70c90a93aa44dbf6dfb07453d6972af2,en Smith <binji@chromium.org>, 2015-09-30 14:05:40 -0700, , add option override executable test run d8.py,,
1778,c184e08eaaaea38ef0a7e18c7ac844d92c36d971,en Smith <binji@chromium.org>, 2015-09-29 12:37:56 -0700, , update native prototype fix i64 mem load,,
1779,55ba0ad3a83bcf9ad76ff98fcf1733d4024d4a9e,en Smith <binji@chromium.org>, 2015-09-29 11:29:51 -0700, , ensure function name start,,
1780,08be12797d0fee29a6fc65ede80498303ce0fdf8,en Smith <binji@chromium.org>, 2015-09-29 11:09:29 -0700, , add documentation spec flag,,
1781,983382c851516a74ad48a5b1d040130907805714,en Smith <binji@chromium.org>, 2015-09-29 11:05:33 -0700, , add bunch failing spec test i32 i64 memory_trap switch unsigned,,
1782,e7514b2f2c479fa87bf8d6c28c5fde64bb8d6cf4,en Smith <binji@chromium.org>, 2015-09-29 10:26:11 -0700, , add assert_trap operation,,
1783,89450810fec3f113b111724afe3c1af663ac9ad4,en Smith <binji@chromium.org>, 2015-09-28 18:11:12 -0700, , add memory spec test fix bug setting unaligned bit memory access byte native prototype currently throw error disable temporarily start segment end memory range long size segment explicitly tested memory.wasm spec test memory spec test fail native prototype properly sign extend bit load,,
1784,5b7898346af4cb7be96278c094ade35a0fe994ee,en Smith <binji@chromium.org>, 2015-09-28 17:47:18 -0700, , add back bit load store smaller memtypes,,
1785,48f6dae797ef50d7135679fa0d4d35c57c0bf4cb,en Smith <binji@chromium.org>, 2015-09-28 15:52:25 -0700, , import spec test,,
1786,62128aefb62de397624e207d70d696a3911e4f57,en Smith <binji@chromium.org>, 2015-09-28 15:25:53 -0700, , add forward spec test,,
1787,f25b71f437d0fe2a8ee4b9c9f5b9b7cea5032dce,en Smith <binji@chromium.org>, 2015-09-28 15:25:37 -0700, , fix hex number parsing add hexnum spec test,,
1788,aae3f398c5a0a37bb42fd555a91f75bb853a6754,en Smith <binji@chromium.org>, 2015-09-28 15:02:20 -0700, , add fac spec test,,
1789,3e8a4bc6f8650e6eb26dd7e746136d6a98b7a815,en Smith <binji@chromium.org>, 2015-09-28 15:01:54 -0700, , disable export spec test memory leak,,
1790,8eb717c336aa106292034e9b53ccfb2e9c82fe74,en Smith <binji@chromium.org>, 2015-09-28 10:40:52 -0700, , better continuation handling block break,,
1791,73bf928fdef7dbda0fd94381e4553823efb36f35,en Smith <binji@chromium.org>, 2015-09-28 11:26:36 -0700, , after_break callback yield label depth block block depth make sense native prototype used wasm parse,,
1792,5bd18110626e19248f278be09d53563da7fdb7d3,en Smith <binji@chromium.org>, 2015-09-27 23:00:14 -0700, , expression based block statement,,
1793,c3d47f235a62f6a53ea01013dc134642c8d716eb,en Smith <binji@chromium.org>, 2015-09-27 17:38:34 -0700, , expression based test,,
1794,be041032bf4c9c89705cbbddda8e419e420f9f98,en Smith <binji@chromium.org>, 2015-09-27 17:14:24 -0700, , start tracking continuation expression needed properly handle typechecking implicit return return statement type return statement void example type error even though return type f32 f32.neg return f32.const implicit return legal func result i32 i32.const explicit return legal well func result i32 return i32.const last case requires knowing statement return statement sufficient however legal well func result i32 i32.const return i32.const return i32.const easily resolved propagate continuation,,
1795,7949e0ded00f706f646ba285c4a4cb53a07f3cbf,en Smith <binji@chromium.org>, 2015-09-27 15:47:20 -0700, , fix upload script gsutil append basename file unless end destination slash,,
1796,a0868526c877b7a30f3ffb0e40c8106d3e95a5de,en Smith <binji@chromium.org>, 2015-09-27 14:32:47 -0700, , update native prototype,,
1797,f9955de47372578ba3ca87b12b4a99ac275c3c24,en Smith <binji@chromium.org>, 2015-09-25 23:41:46 -0700, , correct check strtod turn strtod return erange errno parsing subnormal value still return correct value correct check look return value check errno,,
1798,b70917a9376ed24cfd3fc036043e7270a71c52a9,en Smith <binji@chromium.org>, 2015-09-25 23:40:58 -0700, , hack prevent exporting function i64 params checking i64 return type i64 params crash,,
1799,cad6b19b2fb0bd18ac6a6e5ca1914ea9ca2f7235,en Smith <binji@chromium.org>, 2015-09-25 23:40:08 -0700, , add skipped conversion spec test also add ability mark test skipped test runner,,
1800,a6e24b2872e91040f6717a872dd566677aceacdb,en Smith <binji@chromium.org>, 2015-09-25 23:32:40 -0700, , add export spec test,,
1801,b80968f4fb84b39efe69b48682d007d181434606,en Smith <binji@chromium.org>, 2015-09-25 23:20:36 -0700, , add float32 spec test,,
1802,5a87a675dee28282a3c6784e5caa9dd4f016333f,en Smith <binji@chromium.org>, 2015-09-25 23:19:07 -0700, , add spec repo submodule,,
1803,ed3856044cd17686a626c895cbf4f9441f543923,en Smith <binji@chromium.org>, 2015-09-25 16:50:55 -0700, , better timeout keyboard interrupt run tests.py still perfect ever leak process ... finger crossed,,
1804,e56551a523ae4414aa80f343fda9d65fb23976c9,en Smith <binji@chromium.org>, 2015-09-25 14:54:37 -0700, , add after_return parser callback also add test returning void,,
1805,28994ac8839f5dfb9338106d976512b843093e92,en Smith <binji@chromium.org>, 2015-09-25 11:10:47 -0700, , info readme.rst,,
1806,3686f98a88272725d928b02e4fb48015ef76ad09,en Smith <binji@chromium.org>, 2015-09-25 10:39:28 -0700, , add test everything make target,,
1807,8bc4f72d372bf2aa56b99af1027e9042464857ec,en Smith <binji@chromium.org>, 2015-09-25 10:37:12 -0700, , remove toplevel block thought needed seem anymore maybe never,,
1808,f3271dbceb1d2111b747b71fe685e5f0e99dc32c,en Smith <binji@chromium.org>, 2015-09-24 22:16:58 -0700, , increase timeout sanitizer build travis,,
1809,c662ac456521f235e940753cdbbe82ee669a3034,en Smith <binji@chromium.org>, 2015-09-24 22:10:34 -0700, , fix dumb use free bug,,
1810,3ea0f5c75bb29c9d4d0d2790015806d73b9fd114,en Smith <binji@chromium.org>, 2015-09-24 21:59:54 -0700, , add san test travis,,
1811,86233e707d3015003756a173ca9c1efd5e6f21d6,en Smith <binji@chromium.org>, 2015-09-24 21:58:40 -0700, , add lsan fix memory leak,,
1812,622b090e62bcc7f33e0ac6c63427972d2e801537,en Smith <binji@chromium.org>, 2015-09-24 13:48:30 -0700, , fix msan bug,,
1813,342320d25c3185d6f31a4e4e376ad1dcb17cf352,en Smith <binji@chromium.org>, 2015-09-24 13:22:11 -0700, , add asan msan build sexpr wasm also integrate executables test runner run test run d8.py well,,
1814,4246fedb2468bcdc96f3b4a7ff54bd444433ac53,en Smith <binji@chromium.org>, 2015-09-24 08:21:30 -0700, , fix hang source single semicolon,,
1815,5f1d0f3b8a10dcd3730e1db8bb6420fc7e8390fa,en Smith <binji@chromium.org>, 2015-09-23 14:42:03 -0700, , update test newly implemented reinterpret ops,,
1816,9ba4cecdd0e004d4c0a8f9fc35a6289bc983d4c6,en Smith <binji@chromium.org>, 2015-09-23 14:20:07 -0700, , update native prototype,,
1817,b5b330dab82b1066f334ac972740cc3d6ed73a08,en Smith <binji@chromium.org>, 2015-09-23 13:22:32 -0700, , fix assert_eq i64 type requires unfortunate hack native prototype currently crash try export function return i64 currently mark function exported generated output,,
1818,d4908563428ce7c40ca6be5c940ed14b1fd056ea,en Smith <binji@chromium.org>, 2015-09-23 13:10:30 -0700, , add complex assert_eq test,,
1819,c73582af62fab4eb291146afd397061a626d3e5e,en Smith <binji@chromium.org>, 2015-09-23 12:47:43 -0700, , assert_eq type i32,,
1820,1fdeed24d0695d6d64469b52342920f2609a7546,en Smith <binji@chromium.org>, 2015-09-23 09:01:10 -0700, , add couple assert_eq invoke test,,
1821,34656e6578fac3a2ef65aa0db7431508bcbd0012,en Smith <binji@chromium.org>, 2015-09-22 17:07:00 -0700, , support invoke spec test,,
1822,bab8a5abe8177f1b0e1a5f8463617fc066f928b5,en Smith <binji@chromium.org>, 2015-09-21 18:57:11 -0700, , support assert_eq spec test,,
1823,d2f4553eac0d1c397187da454e99b4f3baa99b94,en Smith <binji@chromium.org>, 2015-09-21 22:02:56 -0700, , move outputbuffer context object,,
1824,5ae4f271990a92e57e6ca3d2fe966c1f93d2ae10,en Smith <binji@chromium.org>, 2015-09-21 21:55:46 -0700, , remove wasm function segment .offset,,
1825,d5218c9429da3887688c8f953385cc75b7433e5c,en Smith <binji@chromium.org>, 2015-09-21 21:24:29 -0700, , remove wasm variable import .offset,,
1826,e2ba65181cce0f69c3bf82d710d4830440a5c194,en Smith <binji@chromium.org>, 2015-09-21 19:32:04 -0700, , refactor remove wasmexport whether function exported exported name stored wasmfunction,,
1827,6c9203b7420703a82a15caee72683c63b4dee9b8,en Smith <binji@chromium.org>, 2015-09-19 10:49:59 -0700, , parse invoke,,
1828,9ff6b7fea179914e8dbaf3290397e6f273360382,en Smith <binji@chromium.org>, 2015-09-19 09:32:05 -0700, , parse assert_invalid,,
1829,13023fec840d523dfea138c0639ce9b933836f99,en Smith <binji@chromium.org>, 2015-09-18 23:28:04 -0700, , parse assert_eq,,
1830,416e56f26034ea928396993a444e95f42c1cd70d,en Smith <binji@chromium.org>, 2015-09-18 19:26:17 -0700, , keep module around parsing modify output module later preparation adding assert support,,
1831,e06cab5301932d546769fd3873b401e742785175,en Smith <binji@chromium.org>, 2015-09-18 19:15:42 -0700, , fix makefile dependency,,
1832,51567dfed3e52d406b74e1028bde1987e2980675,en Smith <binji@chromium.org>, 2015-09-18 18:03:54 -0700, , cleanup wasm.h little move tokenizer struct definition wasm parse.c,,
1833,3259269005e901def443c8f54ffc3a98a85441f6,en Smith <binji@chromium.org>, 2015-09-18 16:20:15 -0700, , assert expr match known keyword,,
1834,5c0e7acb1f95d022640e1ad4a740629f8563f5a7,en Smith <binji@chromium.org>, 2015-09-18 14:49:44 -0700, , use longjmp callback error remove call exit fprintf stderr ... parser make easier embed,,
1835,3272b2ff4f5accc52a63b8ee7e795b2352eb068d,en Smith <binji@chromium.org>, 2015-09-18 15:20:37 -0700, , move tokenizer parser pas parser place wasm parse.c tokenizer passed preparation hanging error handling info parser object rather pas function need,,
1836,07e70e0ce778eeee1150c3735edb1999aa4ff885,en Smith <binji@chromium.org>, 2015-09-18 12:23:33 -0700, , expect eof module without multi module,,
1837,37be3e78fa9fdcd3bdf3d4e182e00e7fade2b7b9,en Smith <binji@chromium.org>, 2015-09-17 16:28:24 -0700, , allow empty file without module,,
1838,c7a928b825f7752c7243380631a9d4ef2a7db897,en Smith <binji@chromium.org>, 2015-09-17 16:12:17 -0700, , add flag parse multiple module default,,
1839,e656b6142e0db23e6ad1d08a306f022d2ee130f0,en Smith <binji@chromium.org>, 2015-09-16 17:12:52 -0700, , null check parser function pointer,,
1840,cad2b978553dd91c22922d665a5839e66fd1c76d,en Smith <binji@chromium.org>, 2015-09-16 16:07:29 -0700, , add .clang format,,
1841,a52e0832b6074e5a16b5c215c3b3055b080addc5,en Smith <binji@chromium.org>, 2015-09-16 15:56:23 -0700, , remove destruct keyword implemented needed multiple return value anyway,,
1842,f10f32fe99752a5ffbdc2f04d31e9e91f40ff7a9,en Smith <binji@chromium.org>, 2015-09-16 15:54:32 -0700, , fix run tests.py crash test filtered,,
1843,28289d72d7f6b6c32e1e84b7e9cf121b274f372d,en Smith <binji@chromium.org>, 2015-09-16 13:34:42 -0700, , include filename error output test infrastructure currently autogenerates source file test .txt file change modifies generate temporary directory instead populated test file path run using temporary directory cwd error output produce correct file,,
1844,592b9073396c1539d19decbf5939d8ed8ddcd9e5,en Smith <binji@chromium.org>, 2015-09-16 10:14:37 -0700, , fix test previous commit,,
1845,10fcc8995bf8176b8f882cff0168173bd1d2f4e4,en Smith <binji@chromium.org>, 2015-09-16 10:07:39 -0700, , remove support multiple return value,,
1846,6353c93665c10f24088095325813cd27ee0ac17f,en Smith <binji@chromium.org>, 2015-09-16 09:45:14 -0700, , rename neq match design spec repos,,
1847,ffe65be3946dff4fcb544c791a5abe620c6a10eb,en Smith <binji@chromium.org>, 2015-09-15 13:37:19 -0700, , fix globals generated binary writing offset global automatically calculated native prototype module parser,,
1848,2a2510984ef83cfb9ae569895e62bc3a367ae29a,en Smith <binji@chromium.org>, 2015-09-15 21:00:23 -0700, ," use const value range 128,127",,
1849,4e79d0cefcdade7f713b57056addc725ee9df316,en Smith <binji@chromium.org>, 2015-09-15 20:49:54 -0700, , refactor after_const pas value,,
1850,41ce06343c81f8f9fdee32f09c4f6723bb9c5e6f,en Smith <binji@chromium.org>, 2015-09-15 11:53:32 -0700, , update load store match spec,,
1851,9913e170ccc77abac4b826b9a84b8b9cae7605e4,en Smith <binji@chromium.org>, 2015-09-15 11:20:48 -0700, , rename sar shr_s shr shr_u,,
1852,e3aa6c8b741703eeb4e525132dea791d4431f793,en Smith <binji@chromium.org>, 2015-09-14 18:03:24 -0700, , implement call_import,,
1853,2ed25c31e58536edf3687c0ccc594e4376cd4c40,en Smith <binji@chromium.org>, 2015-09-14 17:11:49 -0700, , output binary import,,
1854,efb8abd1fecacf5d6898d4c894e0fe3676caabcd,en Smith <binji@chromium.org>, 2015-09-14 16:45:30 -0700, , parse import,,
1855,3e4a2375fbdbe5f7ea9c4e55cee4886ea68c4617,en Smith <binjimin@gmail.com>, 2015-09-14 14:47:00 -0700,1, merge pull request webassembly after_export make after_export parser callback pas wasmexport instead int,,
1856,677783e1f861f5b0f3aa97b40312caef7d04681d,erek Schuff <dschuff@chromium.org>, 2015-09-14 14:40:44 -0700, , make after_export parser callback pas wasmexport instead int allows getting export name without get module peek back export vector,,
1857,853559a53353dd8b5902cce2735a9a52f7c91055,en Smith <binji@chromium.org>, 2015-09-14 13:10:10 -0700, , use webassembly bucket download,,
1858,aa44ab9172bdfa22c4cafa7b5fdb6d4fa7cf0b40,en Smith <binji@chromium.org>, 2015-09-14 12:57:41 -0700, , fix typo .travis.yml,,
1859,aebda3211f770271ad190afa65b2967fa5d39688,en Smith <binji@chromium.org>, 2015-09-14 12:45:32 -0700, , move sexpr wasm sexpr wasm prototype,,
1860,385f62363801870671eb6fcf83b74c96bda5d05f,en Smith <binji@chromium.org>, 2015-09-14 11:47:56 -0700, , add license,,
1861,35ed980d7bf7af3209ba9f6f70aae58e9cf7df56,en Smith <binji@chromium.org>, 2015-09-13 20:37:30 -0700, , move common definition wasm internal.h,,
1862,1cc694b599fdf11ffa5cdd05265d6755d99a5623,en Smith <binji@chromium.org>, 2015-09-13 20:06:09 -0700, , update readme switch rest,,
1863,ceafe802283cd1d977997097d8141ede834689f0,en Smith <binji@chromium.org>, 2015-09-13 19:16:57 -0700, , mkdir downloading,,
1864,fe48f4aaf56d28e031b75be18c679d4f04fba2fc,en Smith <binji@chromium.org>, 2015-09-13 19:14:30 -0700, , download travis instead building speed build considerably,,
1865,26f70752caa3f073deb8f73a1360150a8e89510a,en Smith <binji@chromium.org>, 2015-09-13 02:30:41 -0700, , store test,,
1866,0b83c6bcd4cd7c137ab5e7beffdf58ae4d1ded6e,en Smith <binji@chromium.org>, 2015-09-13 02:17:49 -0700, , remove unnecessary store load ops,,
1867,241d241ff02ed0ac592f8ebe2911c6ba5019c76c,en Smith <binji@chromium.org>, 2015-09-13 02:07:00 -0700, , read hex integer literal,,
1868,c0defbcc49011b9eb155810409644392deb9d8a1,en Smith <binji@chromium.org>, 2015-09-12 15:44:44 -0700, , manually parse int32 preparation parsing hex value,,
1869,87b650d26614b7a97a10610ea590ac74cae0f1d7,en Smith <binji@chromium.org>, 2015-09-12 15:11:55 -0700, , remove store_s store_u,,
1870,20ea4680951b8f344ac222753da7a02d8c53af15,en Smith <binji@chromium.org>, 2015-09-12 14:23:25 -0700, , remove f64 load store f32,,
1871,173bf75ce30e15ee71889b30f28cb166c4e403e2,en Smith <binji@chromium.org>, 2015-09-12 13:12:06 -0700, , load test,,
1872,31c4ca5d698a54819647a18d42d4e8332c85670e,en Smith <binji@chromium.org>, 2015-09-11 17:24:58 -0700, , call test,,
1873,4445e7bb3f74bbbfe5aa17547b4d90534027861c,en Smith <binji@chromium.org>, 2015-09-11 17:20:57 -0700, , fix calling function name prefix another function,,
1874,e5e1cdf5eee78e1f9f2205e864a840a5c767139a,en Smith <binji@chromium.org>, 2015-09-11 16:57:59 -0700, , break test,,
1875,0d980842448995db9f99046fa22fe3a109c02d42,en Smith <binji@chromium.org>, 2015-09-11 16:17:01 -0700, , add wasm_ prefix enums,,
1876,9d0e170d5cc5bcf4c9aac71bc3082012b5f8e7aa,en Smith <binji@chromium.org>, 2015-09-11 15:27:51 -0700, , test,,
1877,f0027fd0f25701db9ebd821ec670a4768264ecb0,en Smith <binji@chromium.org>, 2015-09-11 15:06:18 -0700, , cast test neither operation implemented currently,,
1878,6dd36d1fa57268c4e9678baafea172f59951a04c,en Smith <binji@chromium.org>, 2015-09-11 14:51:09 -0700, , convert test,,
1879,70e25fe9c5c87ad7aecac621a10968cb5c6af9c1,en Smith <binji@chromium.org>, 2015-09-11 13:49:23 -0700, , compare test,,
1880,d76f2e8b7658ec5f7e23537448c624be08eb8544,en Smith <binji@chromium.org>, 2015-09-11 13:34:31 -0700, , unary test,,
1881,723bc586e203bc247a5b4686ac524e47022020a8,en Smith <binji@chromium.org>, 2015-09-11 11:35:31 -0700, , add binary test,,
1882,72a69119cc63c49186e42d05d232b8d341ca968d,en Smith <binji@chromium.org>, 2015-09-11 11:37:26 -0700, , handle negative integer constant,,
1883,30a68587780748eb13c3aafe3c7892a064a6058e,erek Schuff <dschuff@chromium.org>, 2015-09-11 15:15:45 -0700, , extern vector manipulation function arguably make private parser evolve along user,,
1884,f9a0cab4c16cb67f27948914f1043d041eedbd8b,erek Schuff <dschuff@chromium.org>, 2015-09-11 15:05:42 -0700, , namespace wasm parser type prepend prefix wasm type wasm_ function exported parser help avoid name clash also use linkage function,,
1885,bcd811c369b6baa569364547ae7a4aca8d02b77e,en Smith <binji@chromium.org>, 2015-09-10 11:08:56 -0700, , rename parse.c wasm parse.c,,
1886,285a81d8b1807fca81786030ad3a6612cf89b7a0,en Smith <binji@chromium.org>, 2015-09-10 11:07:58 -0700, , move generation parser,,
1887,9f0cb0efc93a98740529561360aa696e5e148481,en Smith <binji@chromium.org>, 2015-09-10 03:12:02 -0700, , starting move generation parser,,
1888,8bde9d740d952c8bfa2c8c304f53ec96ba4eb598,en Smith <binji@chromium.org>, 2015-09-10 02:02:02 -0700, , little cleanup,,
1889,bfc95814da465fb5aaa165f8c00d20d5d6a10592,en Smith <binji@chromium.org>, 2015-09-09 08:16:09 -0700, , write correct expression count toplevel block,,
1890,9a1c2ad57ca641ca7821438635cf7e18a94f146c,en Smith <binji@chromium.org>, 2015-09-09 08:13:51 -0700, , verbose output test run d8.py,,
1891,a24707f599ebd2d44ef8148614cff9b55d9b1e98,en Smith <binji@chromium.org>, 2015-09-09 08:06:10 -0700, , use readbuffer read read file read try interpret data utf8 string whereas readbuffer read data directly arraybuffer,,
1892,d33a73ea8800b79bfea7f710dc325094e1e2e42a,en Smith <binji@chromium.org>, 2015-09-09 08:05:43 -0700, , fix size exported fixup,,
1893,fbbf00e6a2df6e4c2eae3c42c3afbe0b437d07fa,erek Schuff <dschuff@chromium.org>, 2015-09-09 16:06:58 -0700, , move struct declaration variable function module etc wasm.h creates dependence wasm parse.h wasm.h worry factoring better later well,,
1894,732c886f771cdf5bdfc435afcf340d1349f7c1bf,erek Schuff <dschuff@chromium.org>, 2015-09-09 00:12:32 -0700, , factor wasm type parser declaration file first refactoring toward making parser usable thing sexpr wasm encoder move wasm type header parser type declaration header parser code source file separate main cli option parsing make attempt actually change interface yet,,
1895,578f13dd81078d37a2a0203af7041b99da4af661,en Smith <binji@chromium.org>, 2015-09-08 14:47:56 -0700, , unset building,,
1896,44e33204e9531c6a2950a7a52dfbbfeb438316ed,en Smith <binji@chromium.org>, 2015-09-08 02:04:15 -0700, , update travis build,,
1897,2445eafb4aff1ee258d0770090bc9e91454dbdd9,en Smith <binji@chromium.org>, 2015-09-08 01:44:50 -0700, , add test cleanup script bit,,
1898,a04ced82d58ea0dbddffc61b873dd4b2f9a9f1bc,en Smith <binji@chromium.org>, 2015-09-08 01:09:20 -0700, , add script assemble run,,
1899,c4d78e756e1441540308514c50e16b386b22ea38,en Smith <binji@chromium.org>, 2015-09-08 00:46:17 -0700, , native prototype submodule also added script build source,,
1900,55fb4bc1401388969635883024bf3c02957ea593,en Smith <binji@chromium.org>, 2015-09-07 23:09:53 -0700, , add src directory,,
1901,e71592d7eca77036ecb32bbf9db0a7f49a5a7401,en Smith <binji@chromium.org>, 2015-09-07 23:04:48 -0700, , wrap function opcode_block native prototype work properly without,,
1902,c8683362292758b5b4d11b899cbb00ebb410a73f,en Smith <binji@chromium.org>, 2015-09-07 21:56:30 -0700, , write output file,,
1903,20746b9a2510d987fa15683f29e493edf634a83f,en Smith <binji@chromium.org>, 2015-09-07 18:10:39 -0700, , add timeout run tests.py fix multiprocess running turn queue.empty raised spuriously really running multiprocess,,
1904,fa443a59a5e4cb03ae783ef2b1669e5ed685df6c,en Smith <binji@chromium.org>, 2015-09-07 16:36:38 -0700, , add section comment verbose output,,
1905,64c7c0900562e57dbf8177534c882e9882a7aa57,en Smith <binji@chromium.org>, 2015-09-07 16:18:44 -0700, , output break statement native prototype expects break statement give break depth label name break depth start count block loop going outward webassembly spec label block instead also starting counting going outward block loop skipped however keep depth block loop added introduce new block every label found,,
1906,e186da628644a4f88e20531094225302934100eb,en Smith <binji@chromium.org>, 2015-09-07 15:17:50 -0700, , refactor adding typed vector structs,,
1907,967934636382148bd688bc8cabaec1f96450aada,en Smith <binji@chromium.org>, 2015-09-07 11:35:00 -0700, , use memory max size output,,
1908,8aeee277068595c1a1c2d90c24244a867e137478,en Smith <binji@chromium.org>, 2015-09-07 04:42:30 -0700, , fix hexdigit bug test memory hex,,
1909,7cf4de4010eb0092aef81540f3a2923355c116bc,en Smith <binji@chromium.org>, 2015-09-07 04:39:24 -0700, , parse output memory segment,,
1910,9c0bb83c9abb4ae690d0a331908f0d80bb0c7e6b,en Smith <binji@chromium.org>, 2015-09-07 03:00:49 -0700, , output get set _local,,
1911,afb6277ef625a2f6d118d479fe8ba7552743e99e,en Smith <binji@chromium.org>, 2015-09-07 02:05:20 -0700, , add convenient fatal_at macro,,
1912,970eea40d1cefc254aa36f177bafa18b14800559,en Smith <binji@chromium.org>, 2015-09-07 01:37:41 -0700, , add .travis.yml readme,,
1913,3f0c1294f4196998239737dde1e6df1d152c62bf,en Smith <binji@chromium.org>, 2015-09-07 01:09:05 -0700, , separate binding variable function type,,
1914,191b4e3aa5171a0e626310ba254f856b1a719495,en Smith <binji@chromium.org>, 2015-09-06 22:21:31 -0700, , refactoring,,
1915,b49b69a4c7d59ef12b91c25c4bb1d06aeb65f5eb,en Smith <binji@chromium.org>, 2015-09-06 21:40:15 -0700, , refactor parser use hashed keywords,,
1916,716c211a66069d0f76ac67214feaf620150f20a2,en Smith <binji@chromium.org>, 2015-09-06 11:32:07 -0700, , use perfect hash parse expression,,
1917,277dbc2c921812d3a33d8c33fa20765e466ecd0a,en Smith <binji@chromium.org>, 2015-09-06 04:00:07 -0700, , opcodes store_ load_ global,,
1918,ae7fd83588b992f88a98cdc3804503e97f384d32,en Smith <binji@chromium.org>, 2015-09-06 02:42:13 -0700, , output opcode,,
1919,37d0fb8296d18d30a5a5726aff2f528b9e133fc5,en Smith <binji@chromium.org>, 2015-09-06 01:19:41 -0700, , output opcodes load store,,
1920,75f432aac6e39f2b56f3108a841d6c318d25b733,en Smith <binji@chromium.org>, 2015-09-06 00:28:10 -0700, , remove i64 f32 f64 .not,,
1921,1b766db5ba9d536cddb397f492e86e14a9d49778,en Smith <binji@chromium.org>, 2015-09-06 00:23:37 -0700, , output opcodes call return unary binary compare convert cast,,
1922,4aef28d05bde3b076f78653e5fdc0964eebd6fb1,en Smith <binji@chromium.org>, 2015-09-05 23:35:10 -0700, , check opcode valid,,
1923,30892ff45eb1bfc45d6755c48b80ff2e4d25072a,en Smith <binji@chromium.org>, 2015-09-05 23:11:41 -0700, , convenience function dumping opcode,,
1924,06c0a0ec11a64cfe3bcdbf13f27aa4450caad6f3,en Smith <binji@chromium.org>, 2015-09-05 22:47:38 -0700, , verbose dump output,,
1925,9a9f982eed99d6dc7c909e27ff0a03bbb24374d6,en Smith <binji@chromium.org>, 2015-09-05 15:57:19 -0700, , use new name asserts,,
1926,2df01d0bf8050dc669c0600de7d9808f0c99510c,en Smith <binji@chromium.org>, 2015-09-05 15:54:48 -0700, , fix bug expression value type,,
1927,09ab4c9547db53eeb83cba2d73f29670eca9583b,en Smith <binji@chromium.org>, 2015-09-05 15:44:48 -0700, , write opcodes block loop const,,
1928,d0b40e37bd1b3db26b2fa7e0d59e752ca79eeb03,en Smith <binji@chromium.org>, 2015-09-05 15:14:35 -0700, , check function result type empty function,,
1929,b10704ecb9a2ab97b42d3f2783088b8e57059cf7,en Smith <binji@chromium.org>, 2015-09-05 14:59:05 -0700, , dump test,,
1930,50bcadb6bf917ca694dd02ba718ed7151a500700,en Smith <binji@chromium.org>, 2015-09-05 14:57:59 -0700, , write correct exported name,,
1931,7195174372fedc4a59a43561e6f7d5b34003f9a0,en Smith <binji@chromium.org>, 2015-09-05 14:31:19 -0700, , handle string escape properly,,
1932,e180612946d6f595a1fbcb77561deee454108847,en Smith <binji@chromium.org>, 2015-09-05 13:32:22 -0700, , plumbing output buffer simple test,,
1933,bc6c4d7a98a1f5612aa2fc53c49a59921d8e50d8,en Smith <binji@chromium.org>, 2015-09-05 11:58:41 -0700, , remove getparam,,
1934,95be17c870224ddd536e6cffa96395f6a0d38f10,en Smith <binji@chromium.org>, 2015-09-04 19:44:32 -0700, , value module header footer,,
1935,d12b95b6ab6c34c9d547efa501ffaf3cff82b270,en Smith <binji@chromium.org>, 2015-09-04 16:36:30 -0700, , output buffer test module dump,,
1936,87893ad311b7aba3516342b42a943dfd52578caa,en Smith <binji@chromium.org>, 2015-09-04 13:59:13 -0700, , add popcnt min max,,
1937,32ad94cf60283bedad486ecbe6e02080cdf99e0a,en Smith <binji@chromium.org>, 2015-09-04 13:55:30 -0700, , add opcodes,,
1938,fe2b0a4e9e2384138ee7b0f70186ee32c59d1e93,en Smith <binji@chromium.org>, 2015-09-04 13:02:57 -0700, , remove print_tokens,,
1939,0f1a6f3902962a56fa975d119f8276b6a056757e,en Smith <binji@chromium.org>, 2015-09-04 12:59:57 -0700, , add option parsing,,
1940,f359ef09487bbfdd922a37a737c7a9cda41cd72b,en Smith <binji@chromium.org>, 2015-09-04 11:25:43 -0700, , match new naming scheme,,
1941,ab73a189711dd9b7c14f8b3250e8460b7cfc0325,en Smith <binji@chromium.org>, 2015-09-04 07:37:51 -0700, , add sqrt f32 f64,,
1942,78cba224f37b01a4a28092b80ba0050a6c025037,en Smith <binji@chromium.org>, 2015-09-04 07:33:55 -0700, , remove neg i32 i64,,
1943,308b4fd71be491c7d75958f17f9f8eac644d45e4,en Smith <binji@chromium.org>, 2015-09-03 23:57:23 -0700, , typecheck function result,,
1944,f07ef73ef16f4c98e08375227c3e6078bde76590,en Smith <binji@chromium.org>, 2015-09-03 23:43:42 -0700, , parse switch,,
1945,338cf38826f3b34d8e5eac85565097c463852fa8,en Smith <binji@chromium.org>, 2015-09-03 18:20:17 -0700, , add static assert,,
1946,4130645e4383a3f0bc8b31de8a3277c05f4c9dbf,en Smith <binji@chromium.org>, 2015-09-03 18:18:36 -0700, , typecheck branch correctly branch need match type one branch type void case result void way type checker fail expression actually used,,
1947,58b1ffa517f7451b0525020c0db469b95db4476b,en Smith <binji@chromium.org>, 2015-09-03 15:27:40 -0700, , move typecheck test typecheck directory,,
1948,3217856bfc934f31a1b340ccbff368f02d0ccf48,en Smith <binji@chromium.org>, 2015-09-03 15:17:58 -0700, , typecheck unary binary compare convert cast,,
1949,af15e5ab0e6554f6616ff30a7ba628f3f5bc808a,en Smith <binji@chromium.org>, 2015-09-03 14:58:07 -0700, , typecheck condition,,
1950,aee67a9caab2b2eefd51ba0bef4d6a2dd45f2925,en Smith <binji@chromium.org>, 2015-09-03 14:36:35 -0700, , typecheck load store refactor bit,,
1951,35d072ef7bdac9296c829103bf939ce3e7e0f1d2,en Smith <binji@chromium.org>, 2015-09-03 14:09:18 -0700, , typecheck setlocal store_global,,
1952,73b3184f81ccac3f1abc144dcf66e2bd5fe5ef89,en Smith <binji@chromium.org>, 2015-09-03 13:53:22 -0700, , typecheck return,,
1953,592507f22bbf046f5ec5e60186cdb97f2051f090,en Smith <binji@chromium.org>, 2015-09-03 12:32:20 -0700, , typecheck function call,,
1954,db12ff39f749e423ac8ad31995900359e2f267eb,en Smith <binji@chromium.org>, 2015-09-03 12:14:41 -0700, , params local index space,,
1955,16d0a549c71fcf09464590a8960c7c66018fdebb,en Smith <binji@chromium.org>, 2015-09-02 18:03:21 -0700, , parse export,,
1956,744aef79f776dc777ccb28d5f389a5f397addee5,en Smith <binji@chromium.org>, 2015-09-02 17:40:41 -0700, , check variable name,,
1957,da1bfe77656f9ac219d6c4f1f8880ee0c3e74cb2,en Smith <binji@chromium.org>, 2015-09-02 16:15:22 -0700, , preparse local thread module parse,,
1958,fedf7f5545b2f66cf0d2acdb174d84e63558e664,en Smith <binji@chromium.org>, 2015-09-02 15:48:49 -0700, , preparsing function,,
1959,e892302cd51f7c17bd3cf14763b73eeeea161546,en Smith <binji@chromium.org>, 2015-09-02 14:56:31 -0700, , wip module preparsing pas,,
1960,10986cc95eac91b590973720e339cf303110eba0,en Smith <binji@chromium.org>, 2015-09-02 14:56:00 -0700, , add job flag run tests.py,,
1961,579566c263f92051ab74389cc09862ee5d2759ab,en Smith <binji@chromium.org>, 2015-09-02 11:36:02 -0700, , expression test,,
1962,d4face5022de3400abfc1daba3230f12cd446551,en Smith <binji@chromium.org>, 2015-09-02 01:35:30 -0700, , correctly parse const start handling type,,
1963,0167618f7e46f44902e146ca61720e99a4622772,en Smith <binji@chromium.org>, 2015-09-02 00:15:36 -0700, , load store test,,
1964,7229b60ac8165d5b616690c5e3bb894838bc5007,en Smith <binji@chromium.org>, 2015-09-01 23:52:23 -0700, , globals,,
1965,e7360b59f4bc7cf5aec373343a1d07875c3c96f2,en Smith <binji@chromium.org>, 2015-09-01 23:21:57 -0700, , fix parsing param local,,
1966,9b3971d68253ecdaa10a0a092e379e431deea7c7,en Smith <binji@chromium.org>, 2015-09-01 22:56:28 -0700, , getlocal getparam setlocal test,,
1967,217bbad6de6aaf94f4be9c886edd7dc415ffa896,en Smith <binji@chromium.org>, 2015-09-01 22:35:20 -0700, , fatal macro,,
1968,bd79c0fa78ab2d324ddd7fbc5498d65c61d646c0,en Smith <binji@chromium.org>, 2015-09-01 22:31:10 -0700, , break call return test,,
1969,04151641f118e666fdc9203fa74da9304299efc5,en Smith <binji@chromium.org>, 2015-09-01 22:10:45 -0700, , add bunch expression test,,
1970,e41a09f9e32effee08a4f50858c54dfdf1d9c133,en Smith <binji@chromium.org>, 2015-09-01 17:14:49 -0700, , clang format,,
1971,7f32fad48ac306fc2fb73faeb4462396ef3e7b4e,en Smith <binji@chromium.org>, 2015-09-01 17:13:26 -0700, , top level test,,
1972,5cb6d37ea620ff283cb589c9183ad8c4e17acd43,en Smith <binji@chromium.org>, 2015-09-01 17:08:19 -0700, , function local test,,
1973,9b36214a57ceec51c825b248237341dd6550afb0,en Smith <binji@chromium.org>, 2015-09-01 16:58:56 -0700, , add result test,,
1974,f576e63cb168044eb10748db90595c70cef0fda0,en Smith <binji@chromium.org>, 2015-09-01 16:49:36 -0700, , comment test,,
1975,5b91bff74409f5eb255db40d7d969f57efd3b930,en Smith <binji@chromium.org>, 2015-09-01 16:23:53 -0700, , param test,,
1976,7b59fc80a36967ec37bb23039893a1cbbd5296c4,en Smith <binji@chromium.org>, 2015-09-01 16:14:49 -0700, , read test input .txt fix,,
1977,829535dd928ba4fb7a2c801d2fb0deaa58ae2369,en Smith <binji@chromium.org>, 2015-09-01 15:56:20 -0700, , test runner,,
1978,ff855d4566232b047e75c4b448fb78ffff5a2938,en Smith <binji@chromium.org>, 2015-09-01 15:45:26 -0700, , better parsing param result local,,
1979,cef336662d0bd13c7211087e14b0a97fc5d7070f,en Smith <binji@chromium.org>, 2015-09-01 15:07:17 -0700, , match load store ops,,
1980,22e3b752e6fd8861b460b682dfbf10014d0a13e6,en Smith <binji@chromium.org>, 2015-09-01 15:06:47 -0700, , add binops,,
1981,2ce2ca3b50b2b7e3d5fa3c986376424a9815111c,en Smith <binji@chromium.org>, 2015-09-01 13:39:45 -0700, , simplify matching,,
1982,2bad17ac1adb7f97f2ff3f89bbf09e4e8d55a603,en Smith <binji@chromium.org>, 2015-09-01 13:21:05 -0700, , wip parsing expression,,
1983,2a646432393c1fe35e07d3f244c1a9b56e94cd7b,en Smith <binji@chromium.org>, 2015-09-01 01:09:00 -0700, , wip parser,,
1984,e5aa5154da1e6d530f33c2be9be64a806b5a45e9,en Smith <binji@chromium.org>, 2015-08-31 22:30:42 -0700, , tokenize string,,
1985,622a62ea69b5788daf974a43c7111d4101297064,en Smith <binji@chromium.org>, 2015-08-31 22:15:22 -0700, , basic tokenizer,,
1986,448450d0a05907bb0f91c5fb2799b4338a5dbe62,en Smith <binji@chromium.org>, 2015-08-31 16:37:50 -0700, , read file,,
1987,21e55002b4cbc5d1f9b1d901a2c3c65160b8af60,en Smith <binji@chromium.org>, 2015-08-31 16:14:30 -0700, ,,,
