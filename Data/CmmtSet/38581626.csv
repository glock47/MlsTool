id,sha,author,date,issue,message,file,content
0,dcbda8d7ff6e0a207807208ff0364bbb74e02175,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-30 11:25:29 -0700, , removing msvc c4127 pragma block top pybind11.h 3152 removing pragma 4127 see still broken latest code using new constexpr_bool suppress warning c4127 one missed case python similar approach c4100,,
1,e2573dc961ec11cd148c50c06abfaee0a6930694,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-30 10:51:50 -0700, , moving pragma msvc warning c4505 pybind11.h existing list detail common.h 3160 moving pragma c4505 pybind11.h existing list detail common.h removing existing suppression see still needed capture msvc message turn none pragmas needed anymore,,
2,9e8a741baac7485a7f81904bbb9c06a9ae423c40,erome Robert <jeromerobert@gmx.com>, 2021-07-30 19:48:41 +0200, , fix mingw64 corrected add job test 3132 mingw64 platform string like mingw_xxx mingw see http github.com msys2 mingw package blob master mingw w64 python 0099 change get_platform method sysconfig dist.patch mingw dllexport exception fix error like pybind11 pybind11 include pybind11 detail common.h 735 error dllexport implies default visibility class pybind11 already declared different visibility 735 class pybind11_export public std runtime_error  gha test mingw64 build fix avoid thin binary mingw fix drop lto mingw mingw64 disable trigger many warning unknown reason authored henry schreiner gmail.com,,
3,b42597291fd59b9bb3af4a9489ca14c910c347d6,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-30 07:09:55 -0700, , limiting pragma ignoring gcc wnoexcept type scope pybind11.h 3161 moving pragma ignoring wnoexcept type one location needed trying second location previous commit worked github action green see added comment dicy nature wnoexcept type applying reviewer suggestion,,
4,b1fdbe6954be5afa0a9003c37731da60ac68baff,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-29 16:10:18 -0700, , chore add discussion link 3159,,
5,c14b193308d7877b158e9187079078099d1052ee,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-28 18:04:14 -0700, , chore increase cmake upper limit 3124,,
6,b72ca7d1bd8d07470b5094017c790f6c763f9b0f,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-28 17:01:21 -0700, , removing msvc c4100 pragma block top pybind11.h 3150 removing pragma 4100 see still broken latest code adding keep going revert adding keep going reverts commit introducing _msc_ver 1916 replacing simple variadic function variadic template attempt resolve msvc 2017 failure preserving existing comment moved pybind11.h detail common.h adding blank line readability,,
7,f4721a7b44e5513df3681ccb2c08eca50132b4bd,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-28 08:58:36 -0700, , accommodating environment define even defined implementation 3151 follow 3129,,
8,2164c2e0e78ca4bf12123f98349722907732581b,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-27 15:33:31 -0700,2196, removing section pragma block top pybind11.h 3135 fixing pragma warning pop adding push pop test removing 878 top pybind11.h needed test trying failure moving push top test trying failure adding push pop moving icc 2196 suppression cmakelists.txt fixing condition pragma gcc diagnostic push pybind11.h moving pragma warning disable 2196 common.h revising ifdef conservative undoing insertion note hopefully soon completely obsolete anyway,,
9,9beaa925db49cf4751642a1529d34bef4a3682ce,aron Gokaslan <skylion.aaron@gmail.com>, 2021-07-27 18:32:26 -0400, , maint clang tidy improve code readability explicit boolean cast 3148 maint clang tidy improve code readability fix minor typo revert optimization removed test case fix comment formatting revert another optimization repro issue remove make_unique since newer eformat comment fix unsignedness comparison update comment,,
10,7cc0ebb4753770ace452d118bb327cdd9e76dcbb,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-27 14:23:52 -0700, , fix cmake config python package hard coded path 3144,,
11,a0b975965fe5df66f20a1d29193055f8538ac94e,avid Hewitt <1939362+davidhewitt@users.noreply.github.com>, 2021-07-27 19:16:28 +0100, , allow python builtins used callback 1413 allow python builtins used callback try fix pypy segfault add expected fail pypy fix typo pre commit.ci auto fix pre commit.com hook information see http pre commit.ci add info xfail add env try returning false try removing move pypy fix bug try removing move keep ignoring pypy add back xfail fix ctors revert change std move change skip fix bug edit comment remove clang tidy bugprone fix skip bug authored aaron gokaslan skylion.aaron gmail.com authored pre commit bot 66853113 pre commit bot,,
12,a0f862d428acd11dacb344ce9690e420d98cde53,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-26 13:26:36 -0700, , removing msvc c4800 pragma block top pybind11.h 3141 adding appease msvc 2015 warning c4800 replacing simpler extra parenthesis almost compiler failed without,,
13,7f76d79508475ef2e8f17941e350b1dfa8d828b4,re-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>, 2021-07-26 15:05:58 -0400, , pre commit.ci pre commit autoupdate 3143 update github.com asottile pyupgrade v2.21.2 v2.23.0 http github.com asottile pyupgrade compare v2.21.2 ... v2.23.0 authored pre commit bot 66853113 pre commit bot,,
14,7904ba1a5c600ea8455b16c1010a1d46181d3148,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-26 12:02:50 -0700, , adding pragma warning disable 4522 msvc 2017 3142,,
15,ff97f101d96cc780ce348ac6b4b4464982578929,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-26 11:28:36 -0700, , removing msvc c4996 pragma block top pybind11.h 3129 removing msvc c4996 pragma block top pybind11.h  adding include ctime attempt fix msvc 2015 2017 error,,
16,e58c6897cc7b77b92e1c49df82a3504f777b97c9,a-bo <55587089+ka-bo@users.noreply.github.com>, 2021-07-21 18:00:57 +0200, , specified encoding setup.py call open 3137 specified encoding setup.py call open fix python2 authored karsten bock karsten.bock dlr.de,,
17,d65edfb0243c9bc24b748c52d2983ef4dd627004,esse-sony <50677487+jesse-sony@users.noreply.github.com>, 2021-07-21 08:22:18 -0400, , feature local exception translator 2650 create struct since two thing going module local felt correct add struct manage add local exception translator added via function applied global translator add unit test show local exception translator work fix bug unit test string value keyerror fix formatting issue rename rename disambiguate new member add additional comment new local exception code path add function add additional unit test use like get_internals update documentation new local exception feature add back missing space clean issue doc remove code duplication translating exception separated exception processing standalone function detail namespace clean comment per note well remove code duplication cleanup formatting thing caught clang format remove template exception translator added using declaration alias type remove extra local local_internals variable name add extra explanatory comment local_internals fix typo code,,
18,6d5d4e738caad61152427f2b3b0c3fa09b52ce03,lacktea <42189825+blacktea@users.noreply.github.com>, 2021-07-20 18:48:09 +0300, , move object pop method list 3116 move item instead copy make clang 3.6 happy authored c99 email dummy.com,,
19,9626483cdfb1e9d22275d7bd059822e08bdf55c2,re-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>, 2021-07-20 11:29:42 -0400, , pre commit.ci pre commit autoupdate 3134 update github.com asottile pyupgrade v2.21.0 v2.21.2 http github.com asottile pyupgrade compare v2.21.0 ... v2.21.2 github.com psf black 21.6b0 21.7b0 http github.com psf black compare 21.6b0 ... 21.7b0 http gitlab.com pycqa flake8 http github.com pycqa flake8,,
20,34f587dd2398efb933b5b8d97b73791ddcb4b87b,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-17 08:54:31 -0700, , removing warning pragmas effect 3127,,
21,74935f8d675a308244a7cdcf92aa97f41f496124,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-17 11:50:42 -0400, , chore post release 3128,,
22,65e95ea8675ea34bdd566d6461330f25c651e5a8,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-16 09:27:47 -0400, , chore bump 2.7.0 3123,,
23,6642f389dc5b7b05b5682ba5db8460817649791d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-15 20:00:07 -0400, , doc update changelog 3122,,
24,4359e00b97154c663b5710a5aef1c961d48753d5,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-15 15:00:57 -0700, , introducing 3120 introducing better late never consistency check setup.py,,
25,1b10292c0597a497cdee43dcba731bcdd1ce0c49,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-15 16:54:40 -0400, , chore support pdf nox 3121,,
26,55f6f6e9bf7f0848a1c1415f90120be9076e8add,xel Huebl <axel.huebl@plasma.ninja>, 2021-07-15 12:41:36 -0700, , fix rtd docutils build 3119 docutils 0.17 release semantic html5 tag rtd theme doe yet know break side bar list element,,
27,2415c09459efb0c6ab33d9dfe2a555237577dc6e,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-15 15:01:29 -0400, , feat package support pipx run 3117,,
28,31843d455dd347ce9ccb27dd5b51822fe2b561c5,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-15 15:01:13 -0400, , doc reduce visibility 3.9.0 warning 3105,,
29,5cd37507572db8a849309340de9b64645c9094f0,oris Staletic <boris.staletic@protonmail.com>, 2021-07-15 16:38:52 +0000, , enable wstrict aliasing warning 2816 enable wstrict aliasing warning narrow scope wstrict aliasing home msvc drunk make sure pragma gcc executed icc authored yannick jadoul yannick.jadoul belgacom.net,,
30,c4b0dc7cdd9cd70acce65940305d039ef336fc23,aron Gokaslan <skylion.aaron@gmail.com>, 2021-07-14 16:52:13 -0400, , add shellcheck style checking 3114,,
31,cd061aeef164b380ba7a4b7699679a38f87cb111,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-14 16:49:13 -0400, , style pre commit cleanup 3111 style disallow pytest pytest style cleanup spell checking bit style add item .gitignore,,
32,7331d381af4639f385fa07b5cb07d6c5dbacba71,hane Loretz <shane.loretz@gmail.com>, 2021-07-13 21:21:55 -0700, , raise codec error casting std string 2903 raise codec error casting std string allow codec exception raised instead runtimeerror casting str std string py2 allows ucs surrogate utf conversion signed shane loretz sloretz signed shane loretz sloretz attempt fix py2 error revert unicode literal fixed authored aaron gokaslan skylion.aaron gmail.com,,
33,aca6c3ba37ca8f0855dfe60370b407abca4cb994,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-13 18:14:58 -0700, , removing stray semicolon discovered running clang format v12 followed tool check style.sh 3087 manually moving nolint comment clang format doe move wrong place manually reformatting comment related static_assert clang format doe need two pass empty line includes prevent clang format shuffling order thereby confusing msvc 2015 git diff color head python3 home clone llvm project clang tool clang format clang format diff.py style file,,
34,1be0a0a6107478d8523191a053c24f47ebeda1ad,ntony Lee <anntzer.lee@gmail.com>, 2021-07-13 23:21:55 +0200, , add helper build tree extension 2831 single file extension convenient pattern offered cython place source file directly python source tree foo __init__.py foo ext.pyx deriving package name filesystem location adapt pattern pybind11 using helper thought moral equivalent cythonize difference cythonize chose include globbing support glob.glob .cpp seems sufficient provide extension customization kwargs directly setting attribute resulting object seems sufficient could choose singular instead make user write map glob.glob .cpp strong opinion authored aaron gokaslan skylion.aaron gmail.com,,
35,2b7985e548ee7fb551528384ae864f8b175ffbe9,barlow83 <jbarlow83@users.noreply.github.com>, 2021-07-13 12:32:56 -0700, , improve documentation api 2697 improve documentation api update pytypes.h remove update pytypes.h fix precommit error authored aaron gokaslan skylion.aaron gmail.com,,
36,25e470c57d6a5df00c7a4010ecfb9f2c991bca14,aron Gokaslan <skylion.aaron@gmail.com>, 2021-07-13 09:54:32 -0400, , fix clang tidy add init var slicing throw value catch reference check 3094 clang tidy guard behavior remove slicing check,,
37,6a644c8f0472ba4a23517a22e30aff9e5eff1dea,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-13 00:08:29 -0400, , doc update changelog 3099 doc update changelog doc add one merge tidy,,
38,0e2e003508ab0dfbea8a0f825d3d001b5f4be2cd,enry Schreiner <henryschreineriii@gmail.com>, 2021-07-12 15:01:19 -0400, , style add pyupgrade check 2.7,,
39,11e12fe455831cae33b138a0ce4d4df5da9ace96,enry Schreiner <henryschreineriii@gmail.com>, 2021-07-12 14:58:59 -0400, , chore move config pyproject.toml,,
40,84fdadfbcc50d3eaa9f8a64a83505eae17e81560,enry Schreiner <henryschreineriii@gmail.com>, 2021-07-12 14:56:06 -0400, , chore update pre commit hook,,
41,75090647cea463e4e43914e404674cb1b8b47a13,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-12 16:56:10 -0700, , precise automatic documentation 2920 adding test_stl.py first attempt make documentation accurate trying comprehensive bloat reference table many detail fixing minor oversight applying reviewer suggestion,,
42,ddf0efb9905770399eea765b4aaca09446155f04,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-12 17:45:40 -0400, , chore add nox support 3101 chore add nox support chore add line codeowners,,
43,9f11951b5beee10c86eaeba56707da22d913bdbd,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-12 14:00:48 -0700,2995, fixing spelling error went undetected pre commit spell check added 2995 last ran 3103,,
44,f0a65c899c7245f1dbaabad73330b4120ed6f2d4,enry Schreiner <henryschreineriii@gmail.com>, 2021-07-12 16:57:28 -0400, , doc fix spelling mistake recent commit,,
45,7472d37a93514dd22bf27da4123ff7b7f2a1545a,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-12 13:39:06 -0700, , adding iostream.h thread safety documentation 2995 adding iostream.h thread safety documentation restoring testthread code added std lock_guard std mutex updating new comment reflect new information fixing git rebase accident,,
46,2d468697d9c1a6209c2ccf13f3b57ba548230655,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-12 13:10:28 -0700, , nolint reduction 3096 copying prework_no_rst branch 3087 test_stl.cpp manual change reducing nolints clang format diff.py minor adjustment avoid msvc warning c4702 unreachable code,,
47,7a64b8adcc7d74b7f6ce601db8b47a00e4cf107c,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-07-12 14:10:46 -0400, , doc fix script issue changelog compilation 3100 skip,,
48,0f4761b44ae2a9b7caf2f95e26dfc62178a2a776,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-11 00:40:38 -0700, , rollback download_catch change merged via 3059 3092,,
49,cf006af2f06810b10e2ff0fa8281eb25642e9122,an Iwaszkiewicz <jan.iwaszkiewicz@intel.com>, 2021-07-10 20:16:07 +0200, , fix typo doc style 3088 pickle typo correct dot parenthesis,,
50,bac5a0c3700f1ee7b4fcc98659f3c924e915322f,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-09 14:09:56 -0700,3051, way fixing clang tidy issue avoid nolintnextline clutter clang format issue really meant part 3051 held back either abundance caution confusion caused stray semicolon 3086,,
51,b5357d1fa8e91ddbfbc2ad057b9a1ccb74becbba,aron Gokaslan <skylion.aaron@gmail.com>, 2021-07-09 09:45:53 -0400, , fix clang tidy enable clang tidy else return redundant void check 3080 enable clang tidy else return redundant void check fix remaining else address reviewer comment fix indentation rerun clang tidy post merge,,
52,6d1b197b4669c70da94c8efb516374e1935d3ea3,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-08 09:02:48 -0700,2730, splitting pybind11 stl filesystem.h 3077 splitting pybind11 stl filesystem.h solve breakage like http github.com deepmind open_spiel run 2999582108 mostly following suggestion http github.com pybind pybind11 pull 2730 issuecomment 750507575 except using pybind11 stl filesystem.h instead pybind11 stlfs.h decided via chat stl.h restored exact state merging 2730 via  git checkout stl.h  properly including new stl subdirectory pip wheel config pass interactively  pytest test  iwyu cleanup iwyuh.py std ipybind11 include usr include python3.9 usr include eigen3 include pybind11 stl filesystem.h adding eliminating else return,,
53,c090c8c409feb6f7f89657b0677a46b3e2192493,obert Haschke <rhaschke@users.noreply.github.com>, 2021-07-07 00:13:13 +0200, , unify cast_error message thrown simple unpacking _collector 3013 unify cast_error message thrown simple unpacking _collector throw different error message casting argument failed former mention make_tuple latter emphasis call argument name position consolidating unable convert call argument error reporting code guarantee uniformity authored ralf grosse kunstleve rwgk google.com,,
54,0ad116d3717a3a39b837b9053a6f9b051784454a,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-06 14:10:35 -0700, , adding codespell .pre commit config.yaml follow 3075 3076,,
55,8bee61b645da98c833166e85113f55a114319ceb,uzpaz <luzpaz@users.noreply.github.com>, 2021-07-04 19:58:35 -0400, , doc fix various typo 3075 found via codespell thist,,
56,795e3c4ce11dea3df7ef164c3faeef01026cb6c5,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-07-02 14:14:18 -0700, , removing true 3067 also removing commented line,,
57,6d4409466b6c7e6fa53e7b93cb05d78647c26313,ustin Spicuzza <dustin@virtualroadside.com>, 2021-07-02 10:02:33 -0400, , check dict item access already checked 2863 convert pydict_getxxx internal error checking variant check unlikely error return,,
58,5bcaaa0423c6757ca1c2738d0a54947dacdb03a1,ntony Lee <anntzer.lee@gmail.com>, 2021-07-02 16:00:50 +0200, , add std filesystem path os.pathlike caster 2730,,
59,f067deb563d1073a7193b87d058fce37838ea5aa,yy <cyyever@outlook.com>, 2021-07-01 14:35:25 +0800, , avoid unnecessary strlen 3058,,
60,733f8de24feed964f96b639a0a44247f46bed868,onathan-conder-sm <63538679+jonathan-conder-sm@users.noreply.github.com>, 2021-07-01 17:19:14 +1200, , avoid string copy possible passing python object std ostream 3042,,
61,cad79c1146c64ece40a9513dbffb4bb8ba93d561,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-06-30 14:30:26 -0700, , test remove minor oversight 3059 3066,,
62,fbae8f313be887e0bf4b702fe551966efdc8cbc2,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-06-30 12:34:32 -0700, , pickle setstate setattr __dict__ empty 2972 pickle setstate setattr __dict__ empty force use dynamic_attr unnecessarily adding unit test clang 3.6 3.7 compatibility pypy compatibility minor iwyu fix additional comment addressing reviewer request applying clang tidy suggested fix adding related issue 3062,,
63,93e69191c1ad81ccde1b3dfd46bb69dccd8e45ce,ris Luengo <crisluengo@users.noreply.github.com>, 2021-06-25 18:56:17 -0600,2778, fix enable none ... class_ wrapped type 3059 allow casting none custom object close 2778 ci.yml patch smart_holder branch full coverage,,
64,484b0f04332fff15543d4c2a49c355d6942455fa,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-06-22 15:12:58 -0700, , updating slightly enhancing instruction running clang tidy 3055 updating slightly enhancing instruction running clang tidy making documented command identical workflow command adding comment workflow file pointing documentation,,
65,dac74ebdf5d64cb30a4492003a87d7455ad00144,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-22 12:11:54 -0400, , fix clang tidy performance fix applied test 3051 initial fix whoop finish clang tidy manual fix add two missing fix revert update clang tidy try fix unreachable code error move nolint comment apply missing fix override clang tidy config doe fix clang tidy make clang tidy error visible add comment nolints remove fix typo,,
66,3b30b0a51e48a3273918f30dfb222db604cea5e9,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-21 10:37:48 -0400, , fix clang tidy clang tidy readability misc fix like adding const 3052 enable apply clang tidy readability misc fix revert deprecated tester add space test,,
67,d00fc62931bde0f2899940f4d487c979a0110422,obert SchÃ¼tz <rschuetz17@gmail.com>, 2021-06-20 00:45:53 +0200, , use 3005,,
68,9b3b35770650832a70c4829b1dcbcd2ab62ae09e,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-06-19 18:39:54 -0400, , chore deps bump ilammy msvc dev cmd 1.8.1 1.9.0 3027,,
69,e0b5cbd4c6503a96747ca184621e242818fa2ef4,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-19 18:38:56 -0400, , chore clang tidy add modernize clang tidy check 3049 add modernize clang tidy check enable,,
70,af6218ff78d480c5e93237174ee6f02ec36853cc,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-19 13:53:27 -0400, , fix clang tidy apply performance fix clang tidy 3046 apply performance fix clang tidy 2nd round perf optimization 3rd round fix handle false positive apply missing fix clang format apply reviewer comment,,
71,79178e713d8f3ac3ae5b77017eb57f1bc67f336f,barlow83 <jbarlow83@users.noreply.github.com>, 2021-06-18 07:17:34 -0700, , fix setup_helpers try import 3043,,
72,19d99a87fedc7272ec48bd90e91a00eff8e57b68,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-06-18 01:35:36 -0700, , working around centos failure 3030 experiment using debug centos moving comment current placement seems mess cmake command using echo var_xxx cat var_xxx trick emulate using variable http github.com action starter workflow issue issuecomment 524937002,,
73,b4b67f026bc2aa1a1ae17e9858a9e61210c77c31,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-17 16:39:59 -0400, , fix typo 3044,,
74,cd4b49a2c8c659d3933cf902bb10e34931dbd1e7,aron Gokaslan <skylion.aaron@gmail.com>, 2021-06-17 16:20:17 -0400, , update kwargs example pas reference 3038,,
75,4c7697dbe973ed01ae6fbec37d186ebd05982e1f,ack S. Hale <mail@jackhale.co.uk>, 2021-06-08 20:56:45 +0200, , add const docstring generation 3020 add const docstring generation change order see existing test trigger const type add test fix test remove experiment reformat test check run adding test_fmt_desc_ prefix new test function using condense test exercise function even one fails platform specific e.g float necessarily float32 authored ralf grosse kunstleve rwgk google.com,,
76,e25b1505dbca042289c4076141092cff49b0b96b,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-05-27 12:51:46 -0700, , adjusting valgrind suppression pypocketfft resolve systematic failure started appear 2020 3022,,
77,3ac690b88be00a44c1988afc209a395d87a57051,ichen <oraluben@outlook.com>, 2021-05-27 23:00:18 +0800, , explicitly export exception type 2999 set visibility exception default authored xziar czktc2007 gmail.com add test update doc skip failed test,,
78,14023c9cda70215ccef7fd92ebb4c42197e98e1f,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-05-27 06:10:28 +0000, , chore deps bump ilammy msvc dev cmd 1.8.0 1.8.1 3021,,
79,f61855b9d8821e2576960109a2a67379a6c2366f,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-05-13 23:21:13 -0400, , chore deps bump ilammy msvc dev cmd 1.8.0 3001,,
80,bc7cf6ef17031393d300acb30b8526345e6465a7,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-05-13 23:19:51 -0400, , chore deps bump jwlawson action setup cmake 1.8 1.9 3000,,
81,b6ec0e950c4a12d25cadf492f193ced94f681d6c,ric Cousineau <eric.cousineau@tri.global>, 2021-05-06 10:13:30 -0400, , function add doc incorrect argument index 2979 explicitly check free function static method,,
82,417fd120ccd6a40294058a4d9cc3c6c6038fbb26,kira Kawata <akawashiro@users.noreply.github.com>, 2021-05-06 16:19:05 +0900, , fix fix typo without_soabi 2992,,
83,0c93a0f3fcf6bf26be584558d7426564720cea6f,ieter P <pieter.pas@outlook.com>, 2021-05-04 07:04:38 +0200, , fix unicode support ostream redirects 2982 crash printing unicode redirected cout add failing test fix unicode crash redirected cout pythonbuf utf8_remainder check end iterator remove trailing whitespace formatting iostream avoid buffer overflow ostream redirect race solve actual race least much lower probability reading past end buffer even data race occur,,
84,54430436fee2afc4f8443691075a6208f9ea8eba,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-04-22 00:03:07 -0400, , install boost boost check 2968,,
85,bca4b36ba75957b463463a35ad7dc98b8326b04c,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-04-21 15:00:00 -0400, , chore deps bump pre commit action v2.0.2 v2.0.3 2964 bump pre commit action http github.com pre commit action v2.0.2 v2.0.3 release note http github.com pre commit action release commits http github.com pre commit action compare v2.0.2 ... signed dependabot bot support github.com authored dependabot bot 49699333 dependabot bot,,
86,5e4804bb66e7d1915558adca1803db0815398fce,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-04-21 13:30:01 -0400, , test use master commit pytest 3.10 2967,,
87,e08a58111dbea38d667b209f7543864d51a3b185,voelkle-cern <54059203+mvoelkle-cern@users.noreply.github.com>, 2021-04-19 19:53:57 +0200, , fix compilation gcc 2956 user defines force pre abi numpy.h assumes available necessarily case patch clang feature detection instead workaround certain libstdc version test target particular version,,
88,114be7f4ade0ad798cd4c7f5d65ebe4ba8bd892d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-04-15 18:27:16 -0400, , doc remove recommonmark 2955,,
89,62976cfcb8ccc76a79849028d7f5a3f8c7019007,hilipp Bucher <philipp.bucher@tum.de>, 2021-04-14 20:01:27 +0200, , fix using werror intel 2948 correcting werror intel adding ward intel adding ward intel another ward intel missed one intel ward exact match intel compiler removing inline limit disable warning inline limit formatter suggestion indent hopefully make formatter happy addressed review fix update test cmakelists.txt authored henry schreiner gmail.com authored henry schreiner gmail.com,,
90,6709abba934e968d31c24f20c132c67a6f424a6a,amaki Nishino <otamachan@gmail.com>, 2021-04-14 08:53:56 +0900, , allow function pointer extraction overloaded function 2944 add failure test overloaded function allow function pointer extraction overloaded function,,
91,e0c1dadb757296c8bc91760a62bfb48b48c39530,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-04-10 11:12:56 -0400, , chore add codeowners 2940 chore add codeowners ensure get notified pull request file change update .github codeowners,,
92,4f0727f2804f96b896155f1a680ea6da23cd4407,eiming Zhao <wmzhao.code@gmail.com>, 2021-04-05 20:50:50 -0700, , fix enabling default extension handling 2938,,
93,16c23fef312bcb98c951b71170a49508e1de4eb7,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-04-05 22:53:59 -0400, , chore deps bump pre commit action v2.0.0 v2.0.2 2935,,
94,ad6bf5cd39ca64b4a9bf846b84b11c4c8df1c8e1,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-04-02 18:17:12 -0700, , adding object_api operator 2919 adding object_api operator enabling python 3.6 possibly explains safely used python 3.4 3.5 http github.com python cpython pull 10267 issuecomment 434881587 adding simple micro benchmark reducing test time minimum purely coverage accurate result fixing silly oversight minor code organization improvement test adding example runtimes removing capsys run using .format,,
95,f676782becc5bcd30c56b4da1ff1026db61bcce3,ric Cousineau <eric.cousineau@tri.global>, 2021-04-02 14:34:09 -0400, , env add surrogate ptyest 3.9 2923 env add surrogate ptyest 3.9,,
96,1259db6fd99bc60228ef0e4af2e379f8e86abc1d,erome Robert <jeromerobert@gmx.com>, 2021-04-02 19:26:17 +0200, , fix mingw64 2921 add ehsc bigobj std flag window good visual mingw according http github.com msys2 mingw package blob master mingw w64 python2 0410 mingw build extension gcc.patch way check mingw64,,
97,c2db53da56af7bce1dabf1b3c71913385111f49b,obert Haschke <rhaschke@users.noreply.github.com>, 2021-04-02 19:13:44 +0200, , fix catch missing self argument overload constructor 2914,,
98,3df0ee6fe36f85786477fb1d15dc68ea9087b073,YX <1449843302@qq.com>, 2021-04-02 23:46:43 +0800, , doc typo classes.rst 2926,,
99,0e01c243c7ffae3a2e52f998bacfe82f56aa96d9,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-03-09 15:07:44 -0800, , generalizing suppression pypocketfft 2896 adding suppression pypocketfft generalize existing pypocketfft valgrind suppression authored yannick jadoul yannick.jadoul belgacom.net,,
100,f110889dde14da15dab08d431791a2080f9a9357,oris Staletic <boris.staletic@gmail.com>, 2021-03-08 08:42:01 +0100, , use correct duration representation casting std chrono duration 2870 use correct duration representation casting std chrono duration asserting datetime timedelta date time equality compare whole object,,
101,44678e5476db5b0d46a03bb4625c03a6ea7e49c8,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-03-05 14:45:57 -0800, , shuffling code separate struct class definition binding code 2890,,
102,9c0aa69937dbb9d7023123d5d98914855432982c,om de Geus <tdegeus@users.noreply.github.com>, 2021-02-25 16:25:50 +0100, , pointing namespace doc 2874,,
103,e2e819b2d86cdc191471adde0d9c8c349e07be7c,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-02-25 07:10:26 -0800, , shuffling code separate struct class definition binding code back porting smart_holder branch minimize diffs potential merge conflict 2875 thanks wenzel,,
104,74a767d42921001fc4569ecee3b8726383c42ad4,ertrand MICHEL <bd2michel@gmail.com>, 2021-02-23 10:57:28 +0100, , dtype kind char 2864 dtype add type method access type attribute pyarray_descr dtype.char python dtype change type name method char_ compliant python numpy interface dtype fix pre commit dtype change comment solution format test clarify documentation move note dtype.char pyarray_descr type plain non doxygen comment fix extend test fix supposedly fixed test fix fixed test authored bertrand michel bertrand.michel onera.fr authored yannick jadoul yannick.jadoul belgacom.net,,
105,c0fbb02c9fc1fe969f2740253469499385e6dc20,ustin Spicuzza <dustin@virtualroadside.com>, 2021-02-22 22:15:40 -0500, , extract gil management function separate header 2845,,
106,0c42250a4ed516382f84d937faa348a189d0cb4f,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-02-22 18:38:18 -0800, , splitting detail cast.h iwyu cleanup 2841 splitting detail cast.h include cleanup guided include use 0.12 based clang version 9.0.1,,
107,98f9a33c622fd93a403f268f2ac44cfb6119384f,akobjw <jakobjw@users.noreply.github.com>, 2021-02-20 23:28:27 +0100, , correct typo faq 2868,,
108,59f8d7f1bfe999148b3c9ece26e1495c9e03e0ce,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-02-17 18:48:37 +0000, , chore deps bump jwlawson action setup cmake v1.7 v1.8 2865,,
109,417067eeb8d93e8ed49f3ff580712ae2b9a85259,ikram Pal <vikrampal659@gmail.com>, 2021-02-14 20:21:13 +0530, , add pybind11 bytearray 2799 add initial implementation add method add test fix typo use std string constructor take size fix implicit sign conversion error add size method test remove implicit conversion fix bytearray constructor operator std string make implicit bytearray constructor explicit rerun test add null check rerun test rerun test remove null check,,
110,cbae6d55c207a3616ceb071127a59655587abb57,nlineCop <OnlineCop@users.noreply.github.com>, 2021-02-12 15:11:23 -0700, , doc fix cmake status download_eigen 2857 authored onlinecop onlinecop gmail.com,,
111,c2362393564dee62c692432a97a45d81d84cc217,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-02-09 17:00:16 -0500, , chore deps bump pypa action pypi publish v1.4.1 v1.4.2 2851 bump pypa action pypi publish http github.com pypa action pypi publish v1.4.1 v1.4.2 release note http github.com pypa action pypi publish release commits http github.com pypa action pypi publish compare v1.4.1 ... signed dependabot bot support github.com authored dependabot bot 49699333 dependabot bot,,
112,c78dfb69f23639148870bf7d97587b5a7e7053ab,xel Huebl <axel.huebl@plasma.ninja>, 2021-02-08 12:40:04 -0800, , msvc clang 2824 window clang doe understand  clang warning argument unused compilation wunused command line argument  clang 10.0.0,,
113,e791ec4e2792eb8daff723e87dd12e4a4a07148d,arthik Nishanth <55433069+knzivid@users.noreply.github.com>, 2021-02-08 21:38:22 +0100, , fix add null pointer check std localtime 2846,,
114,948d09d6df79efda92020d774ae2ad9915c08874,umar Aditya <59607654+kumaraditya303@users.noreply.github.com>, 2021-02-09 02:05:30 +0530, , test test python 3.10 2848,,
115,fe845878d14f50a2fa35c4b3d35245f409ff4a61,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-02-01 14:52:20 +0100, , make sure warning pytest get turned error 2838 make sure warning pytest get turned error suppress pylong_aslong shout deprecated python 3.8 fix remaining warning pypy cpython 3.10 dev,,
116,721834b422482a522abd4e83f11d545ef876f997,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-31 17:29:09 -0500, , chore get pypy 3.7 wheel using numpy 1.20 2837 chore get pypy 3.7 wheel using numpy 1.20 add valgrind suppression numpy update authored yannick jadoul yannick.jadoul belgacom.net,,
117,6cf6bf203e8d1927e07865fb5d42516a3de8e3e2,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-31 23:13:31 +0100, , fix confusing weakref constructor overload 2832 demonstrate issue weakref constructor overload fix weakref constructor convert passed non weakref object improve nonlocal scoped variable test_weakref keep backwards compatibility introducing macro simplify test_weakref,,
118,932769b03855d1b18694e7a867bbd1c24ff6170e,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-01-30 15:02:24 -0500, , adding holder_caster typename sfinae void hook help work around current lack smart pointer 2833 adding typename sfinae void enable external specialization adding sfinae hook also uniformity comment explain purpose,,
119,23c3edcf214086d9759e64e7b5ea5eb28e17a7d7,dward Lockhart <locked@google.com>, 2021-01-30 19:05:13 +0000, , determining shared_ptr already exists use test weâ 2819 determining shared_ptr already exists use test weak_ptr instead try catch block determining shared_ptr already exists use test weak_ptr instead try catch block weak_from_this available later switch use feature flag instead version flag add microsoft specific check avoid undefined preprocessor macro warning treated error simplify init_holder include version detail common.h stolen borrowed bstaletic 2816 move class_ detail simplify using weak_ptr lock authored yannick jadoul yannick.jadoul belgacom.net,,
120,0432ae7c5222ecb5d6e81babf996d3777bd94bf3,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-01-29 12:41:42 -0500, , changing pybind11 str exclusively hold pyunicodeobject 2409 changing pybind11 str exclusively hold pyunicodeobject,,
121,587d5f840a234fc11475952c81ee68525875239f,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-28 12:28:16 +0100, , update breathe 4.26.1 add make_tuple make_iterator 2828,,
122,9b7bfef833ca5af73db1bb8f31f194c2288a96da,alf W. Grosse-Kunstleve <rwgk@google.com>, 2021-01-27 00:08:46 -0500, , factoring cast 2822 factoring cast,,
123,87954e7a54608d7419f6ec86b060e3d24df4689d,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2021-01-26 22:42:14 -0500, , fix corrected dev versioning,,
124,4a5b81b1b7ec91cfceb34bcc0fc49aa7f4503b81,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2021-01-26 22:28:09 -0500, , chore get back work,,
125,8de7772cc72daca8e947b79b83fea46214931604,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-26 21:26:45 -0500, , chore prepare 2.6.2 release 2821,,
126,732bf88d19989f5927b0a58e0b3fe0e897d2503c,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2021-01-26 19:29:22 -0500, , fix avoid changing class outside gil,,
127,dff9b3b4328417e3eff8b1784d11efdebfaae2fa,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2021-01-26 19:25:35 -0500, , chore add pytest timeout mypy,,
128,8e5d3d234ef3bbd9efdbba865d1e606d4c5e97bb,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-25 16:09:36 -0500, , doc prepare 2.6.2 2820 doc prepare 2.6.2 chore pre commit autoupdate,,
129,42e73807053eb1baa6790b2bef2e66b9c343146b,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-01-25 15:11:18 -0500, , chore deps bump jwlawson action setup cmake v1.6 v1.7 2818 bump jwlawson action setup cmake http github.com jwlawson action setup cmake v1.6 v1.7 release note http github.com jwlawson action setup cmake release commits http github.com jwlawson action setup cmake compare v1.6 ... signed dependabot bot support github.com authored dependabot bot 49699333 dependabot bot,,
130,0bb8ca26394d28534ab3e11741c1ffb753f53db8,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-25 21:05:17 +0100, , always call pynumber_index casting python integral type also pre 3.8 2801 always call pynumber_index casting python integral type also pre 3.8 fixed pypy simplify use pynumber_index following rwgk idea ignore warning 3.8 reproduce mismatch pre 3.8 post 3.8 behavior __index__ throwing typeerror fix test 3.6 python 3.8 uninitialized variable fix use __index__ python make type boring descriptive,,
131,9ea39dc356531a8bd549ab3d0cc091e07c650288,rimsoncor <crimson.corelio@gmail.com>, 2021-01-24 12:17:28 -0500, , force builtin module key correct type 2814 force builtin module key correct type previously always going std string converted unicode python appears want module key normal str type breaking code expected plain string type builtins.keys data structure add simple unit test ensure built key str update unit test also run pypy run pre commit authored jesse clemens jesse.clemens sony.com,,
132,08bca374fdcf3831e8ad15246fbd3b2d5675b4a5,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-21 11:34:39 -0500, , doc update changelog nicer output script 2811,,
133,44105ca1f2428fe4b7b57ea5e0b3f02454fc2a77,enry Schreiner <henryschreineriii@gmail.com>, 2021-01-19 22:47:40 -0500, , doc mention changelog block special,,
134,5b43ac42a0553cb603ead1cd62e364c04e854f28,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2021-01-19 19:56:22 -0500,2310, doc fix missing line 2310,,
135,2db0264acaa9ec914c01ae635c564ebdccae60f2,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-19 19:10:26 -0500, , style add clang format file 2310 style adding clang format manual hook doc adding clang format section 2803 authored ralf grosse kunstleve rwgk google.com,,
136,130c99544d5b622ed5304886d0bcb2e07e6f8451,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-19 18:49:03 -0500, , fix support basic dual includes 2804,,
137,eb83feefff14e6b805e46b795b133f2523d0d585,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-19 18:48:22 -0500, , style avoid using unintialized variable 2806 style avoid using unintialized variable tested cmake warn unintialized build refactor use function possibly uninit var,,
138,87f5aff4a7814377d49639715a26e81027640d9b,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-19 18:24:46 -0500, , update setup cmake v1.6 2805,,
139,e8c4f5431620a6ec859c4a0e80cba68531d58c1c,ntony Lee <anntzer.lee@gmail.com>, 2021-01-20 00:20:30 +0100, , fix prepend flag rather appending 2808 allows user set e.g temporarily debugging purpose get overridden default order minimize order inversion really matter though chose collect flag add hence dropping args also dropped flag deduplication seems unneeded,,
140,48534089f7f1b0229bc7ae2e4d0f21dc9ad169b5,ichael Kuron <mkuron@users.noreply.github.com>, 2021-01-18 01:53:07 +0100,2709, fix intel icc compatibility 2729 intel icc icpc via oneapi add testing intel icc icpc via oneapi image intel oneapi late beta stage currently shipping oneapi beta09 icc 20.2 skip interpreter test intel find add neiter package libc6 dev intel oneapi mkl devel help installed solve  looking include pthread.h looking include pthread.h found cmake error __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 165 message could find thread missing threads_found call stack recent call first __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 458 __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 234 test test_embed cmakelists.txt find_package  libc6 dev gcc icc run bare metal oneapi ubuntu 18.04 oneapi intel catch eigen cmake apt icc test replace intel gcc intel gcc eigen icc verbose make debug find core dump test use arg instead arg intel test adding missing fix sync tobiasleibner branch fix try ubuntu fix drop exit doc apply suggestion code review authored tobias leibner tobias.leibner googlemail.com workaround icc enable_if issue another workaround icc enable_if issue fix error previous commit disable one test intel compiler mode add back one instance arg .noconvert add nolint fix clang tidy check work around icc internal error mode intel icc doc pybind11 numpy.h doe require numpy build time 2720 nice enough mentioned explicitly doc doc update warning python 3.9.0 3.9.1 released 2719 adjusting type_caster std support const non const propagation cast_op 2705 allow type_caster std native reference std std const would invoke cast_op type allow type_caster specialization distinguish type value type type_caster specialization invokes cast_op type allows behave way native reference type add test example std const add test use mutable immutable variant test chimera blend pybind11 caster custom pytype implementation support immutable mutable call order detect immutable mutable state cast_op need propagate even e.g std reference const note still work progress thing crashing likely mean refcounting bug something else missing add finish test distinguish const fix bug custom python type implementation demonstrate test requires const const treated differently non const add passing const non const method demonstrate non const conversion test apply formatting presubmit check fix build error presubmit check try fix error fix fixups try get pypy work additional minor fixups getting close green fix fix clang tidy warning presubmit fix clang tidy warning minor comment consistency cleanup pydecref py_decref copy move constructor resolve codereview comment review comment fix review comment remove spurious make test fail even static_assert commented expands bit adding accessors .is_immutable .addr compare identity python changing default cast_op type_caster specialization return non const value normal codepaths reasonable default adding roundtrip variant exercise reference pointer call path conjunction demonstrates failure case existing std conversion loses const similar way happens using default cast_op_type apply presubmit formatting revert inclusion concern test bit unwieldly use raw python.h function removing add test validates const reference propagation test verifies cast_op may used correctly detect const reference type used std mend review comment based change std type type simplify test little never returning constrefcaster type class_ definition removed formatted file move test builtin_casters review comment use cast_op adjust comment simplify constrefcasted test like version better move assertion matter back python drop pypy2 linux pgi 20.7 add python dev 2724 drop pypy2 linux add python dev fix mistake commented pgi 20.11 drop 20.7 fix regression installed pybind11 overriding local one 2716 fix regression installed pybind11 overriding discovered one close 2709 doc wording incorrect style remove redundant instance owned true 2723 set true instance allocate_layout fix also throw move constructor added pybind11_object macro argument moved necessary 2701 make args_are_all_ icc workarounds unconditional disable test_aligned intel icc fix test_aligned intel icc skip intel icc fix test_aligned icc downgrade pytest pytest doe capture stderr writes warning content instead refactor simpler intel workaround suggested laramiel fix try version impl see easier compile doc update readme icc authored axel huebl axel.huebl plasma.ninja authored henry schreiner gmail.com,,
141,8449a8089c312e7138865e0af93b8d6ea971f83e,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-17 02:52:14 +0100, , fix allow integer type_caster call __int__ method conversion allowed always call __index__ 2698 allow integer type_caster call __int__ __index__ method conversion allowed remove test __index__ seems used convert int 3.8 take int long type account python add assert test currently fail even though np.intc __index__ method also consider __index__ noconvert integer new style class python 2.7 sigh add test type custom __index__ method ignore test python 3.8 update comment conversion np.float32 int workaround difference cpython pypy different pyindex_check unnoticed currently pypy 3.8 avoid icc segfault arg,,
142,0df11d857ce21a1f85aad1d18116cd4959f13f1d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-16 20:12:19 -0500, , doc update build description slightly 2794 doc update build description slightly doc missing tick,,
143,0b3df7f96448df149e61742444967537acc36141,xel Huebl <axel.huebl@plasma.ninja>, 2021-01-15 12:59:47 -0800, , intel icc icpc via oneapi 2573 intel icc icpc via oneapi add testing intel icc icpc via oneapi image intel oneapi late beta stage currently shipping oneapi beta09 icc 20.2 skip interpreter test intel find add neiter package libc6 dev intel oneapi mkl devel help installed solve  looking include pthread.h looking include pthread.h found cmake error __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 165 message could find thread missing threads_found call stack recent call first __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 458 __t cmake 3.18.4 x64 cmake 3.18.4 linux x86_64 share cmake 3.18 module 234 test test_embed cmakelists.txt find_package  libc6 dev gcc icc run bare metal oneapi ubuntu 18.04 oneapi intel catch eigen cmake apt icc test replace intel gcc intel gcc eigen icc verbose make debug find core dump test use arg instead arg intel test adding missing fix sync tobiasleibner branch fix try ubuntu fix drop exit style clang tidy fix style fix missing nolint icc update compiler name changed upstream last oneapi release icc downgrade pytest pytest doe capture stderr writes warning content instead use new test pinning test add note intel cleanup authored henry schreiner gmail.com,,
144,0f8d5f2eb6b5756920a6927417b040188adca3c7,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-15 21:07:31 +0100, , add valgrind build debug python 3.9 2746 adding valgrind build debug python 3.9 authored boris staletic boris.staletic gmail.com add valgrind suppression file introduce suppression file populate first suppression taken cpython fix one leak test suppress leak numpy clean test test name passing except test_buffer suppress multiprocessing error merge multiprocessing suppression suppression file numpy seems spelled big append single entry valgrind misc.supp valgrind python.supp make clear valgrind python.supp cpython authored boris staletic boris.staletic gmail.com enable workaround add memcheck cmake target add memcheck cmake target reformat cmake appease formatting overlord angry format cmake valgrind target decently update config new action version fix separate memcheck pytest cleanup merge valgrind deadsnakes build authored boris staletic boris.staletic gmail.com authored henry schreiner gmail.com,,
145,76a160070b369f8d82b945c97924227e8b835c94,eyer2 <danielsafari@yahoo.dk>, 2021-01-15 03:51:41 +0900, , fix static shared flag detected 2796 fix static shared flag detected fix use classic naming lib type authored henry schreiner gmail.com,,
146,08551463577dc6c8b701572fbc7d30c5ac95bd65,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-14 19:34:32 +0100, , plug leaking cpp_function initialization case exception found valgrind 2746 2756 plug leaking function_record object exception thrown plug leak strdup string function_record extra comment function_record ownership dance clean function_record better case exception demonstrate extra function_record leak change deletestrings template argument free_strings runtime argument destruct function_record zero state deleter object clarify rvalue reference unique_ptr parameter use push_back const char instead emplace_back,,
147,230fa53f168b3a185dadfa9fb35472a101012eaa,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-14 08:31:48 -0500, , fix override global setting visibility set 2793 sometimes programmer want control changed fact commonly set via cmake_ variable variable set respect like setting,,
148,1faf4a8ae4a1ef23c12a6f34291eebb11504c642,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-14 05:17:27 +0100, , doc order alternative variant type matter follows rule overload resolution 2784,,
149,40931961e3983c23c4d23f02a3cbd281d808390d,ndy Maloney <asmaloney@gmail.com>, 2021-01-13 23:15:58 -0500, , doc fix spelling comment doc 2777 found codespell,,
150,df8494dc86e641e717dc9616920e180ce47f38ab,ndy Maloney <asmaloney@gmail.com>, 2021-01-13 23:15:27 -0500, , fix clang warning wshadow field constructor modified 2780 fix clang warning wshadow field constructor modified warning modifying constructor parameter flag shadow field set_flag wshadow field constructor modified change name based review,,
151,14b375123c0ee2c1ce2d5e6e327e386672dc212a,ndy Maloney <asmaloney@gmail.com>, 2021-01-13 23:14:45 -0500, , doc fix example code exception section match vs. match 2781,,
152,210c8c218ff7e2828ad7c396b106cd7dfbf5e095,hangming Sun <chasun@microsoft.com>, 2021-01-13 20:14:06 -0800, , fix warning found static code analyzer 2783 update attr.h fix warning found static code analyzer update attr.h fix warning found visual studio static code analyzer severity warning code c6323 description use arithmetic operator boolean type location src onnxruntime debug pybind11 src pybind11 include pybind11 attr.h 547 update include pybind11 attr.h authored henry schreiner gmail.com update attr.h authored henry schreiner gmail.com,,
153,f243450e89a57a67f3d67aa1e25868e8d4997d56,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-14 05:13:19 +0100, , disable build 3.10.0a4 enable nightly 3.10 dev build 2792 disable build 3.10.0a4 enable nightly 3.10 dev build fix job name remove deadsnakes job add deadsnakes job deadsnakes 2.7 add 3.10 version discovered legacy findpython fix debug input deadsnakes action try branch fix update deadsnakes action v2.1.1,,
154,5abce7fce2a6ef911959f7d9381537ddea588a91,enry Schreiner <HenrySchreinerIII@gmail.com>, 2021-01-13 14:32:11 -0500, , use fixed action 2791,,
155,7b7ec664b7502edacebe26e58d88965a71ced93b,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-13 17:16:35 +0100, , pin cmake 3.19.2 fix issue 3.19.3 linux aarch64 macos universal 2790,,
156,98f1bbb8004f654ba9e26717bdf5912fb899b05a,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-01 17:37:28 +0100, , ignore deprecation warning old style __init__ __setstate__ constructor test originally done 2746 2759 ignore old style __init__ warning simplify exec wrap single class_ defs ignore old style __init__,,
157,e57dd4717e3df2a9740addacdb4c1df67d772ef0,annick Jadoul <yannick.jadoul@belgacom.net>, 2021-01-01 17:05:22 +0100, , fix various minor memory leak test found valgrind 2746 2758 fix leak test_copy_move fix leaking pymethoddef test_class plumb leak test_buffer occuring mutable buffer requested read object enable test_buffer.py fix weird reference enable test cleanup nodelete holder object test_smart_ptr enable test,,
158,e612043d43e5382848466a5a6fe59e58edcf74fb,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-12-31 17:10:11 +0100, , fix invalid access non pybind11 pyobject instance found valgrind 2746 2755,,
159,2110d2d8bac7c5db240d4d0ccea5079224885ffd,ric Cousineau <eric.cousineau@tri.global>, 2020-12-31 10:08:15 -0600, , enum add missing enum.value property 2739 enum add enum.value property simplify address review,,
160,b7dfe5cc84ca1891b50e728e83c9b5b393cf5272,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-12-28 20:14:54 -0500, , chore changelog update 2750,,
161,d587a2fd17dc89c0b2d4b6dc7715594bed45fb58,ifan Lu <lqf.1996121@gmail.com>, 2020-12-27 19:56:30 -0800, , fix set docstring function empty 2745 set docstring function empty need check pointer free use ternary operator conditionally set ml_doc,,
162,830f8eda87fa06614a0328c3fce00060f4135e4c,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-12-24 15:53:23 +0100, , test update pytest 6.2.1 fix 2741 update pytest 6.2.1 test pin pytest last supported version 3.5 suppress use instead fix filterwarnings mark old pytest old python version cleanup decorator,,
163,6f66e7603c9c75f1ab2872457e465bb00b56d596,teve Siano <steve.siano@yahoo.com>, 2020-12-24 06:51:36 -0800, , doc add note compiling example 2737 doc mention pythonpath installing.rst pybind11 included submodule user need update python module search path otherwise first compilation command doc basics.rst fail doc add note compiling example note show modify compilation command example pybind11 source included git submodule doc add note compiling example added internal link doc doc updated note compiling example also updated command substitution syntax consistency,,
164,635e3fc92fd92003965e5d63dbce75f55c49075f,ric Cousineau <eric.cousineau@tri.global>, 2020-12-23 18:02:03 -0500, , contributing add suggestion passing pytest flag 2738,,
165,79b0e2c05206865fe12a1ef95552e059913c1855,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-12-22 08:50:45 -0500, , doc fix pdf build simpler start page 2736,,
166,6b4297fd2fe733d0bb7d57d1372cc3e4a15d7dbf,ntony Lee <anntzer.lee@gmail.com>, 2020-12-22 04:17:10 +0100, , fix trigger wunused parameter flagcheck.cpp 2735 ... leaving unused parameter anonymous checked e.g compiling python_example wall wextra,,
167,5bd766bf6c0392c23b2dec66e3c9464b89992b91,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-12-21 21:04:33 -0500, , doc update changelog add script help generate 2733,,
168,d5af536fa15f3337611520bef10a0ee7e0765cdc,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-12-21 20:58:40 -0500, , update cmake action 2734,,
169,79cb013f1f67d5565700e528cb5d8ef079fe5e8a,ikita Shulga <nikita.shulga@gmail.com>, 2020-12-19 12:45:19 -0800,47776, fix allow user avoid thread termination scoped_released 2657 avoid thread termination scoped_released call python runtime finalizing result thread termination python runtime newer 3.6 documented http docs.python.org api init.html similarly call runtime finalizing discovered debugging pytorch crash using python 3.9 described http github.com pytorch pytorch issue 47776 simplify availability check fix typo add version agnostic detail move detail common.h rename is_finalizing move is_finalizing back pybind11.h simplify is_finalizing check one follow documentation rather make assumption feat disarm doc fix comment authored henry schreiner gmail.com,,
170,cecdfadc582f3b079b5e92aea537ad3cf17e5adc,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-12-18 19:41:43 -0500, , minor cleanup fixing silencing flake8 error 2731 minor cleanup fixing silencing flake8 error lock cmake non universal version update .github workflow ci.yml authored henry schreiner gmail.com,,
171,30eb39ed79d1e2eeff15219ac00773034300a5e6,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-12-16 05:22:53 +0100, , fix also throw move constructor added pybind11_object macro argument moved necessary 2701,,
172,d9fa70561e9a3f1c1b23fd0ebcdf12e5fa279cce,obert Haschke <rhaschke@users.noreply.github.com>, 2020-12-16 05:21:40 +0100, , style remove redundant instance owned true 2723 set true instance allocate_layout,,
173,ffb113d1d8c6c7d820b9f521c70c85a06a7b8211,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-12-15 21:55:14 -0500,2709, fix regression installed pybind11 overriding local one 2716 fix regression installed pybind11 overriding discovered one close 2709 doc wording incorrect,,
174,499fcd5447750935839ad2b25eceec7d0ba5c44c,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-12-15 21:07:41 -0500, , drop pypy2 linux pgi 20.7 add python dev 2724 drop pypy2 linux add python dev fix mistake commented pgi 20.11 drop 20.7,,
175,5469c238c878193bbfce1a67ab28db2508ef5a41,aramie Leavitt <laramiel@users.noreply.github.com>, 2020-12-15 16:53:55 -0800, , adjusting type_caster std support const non const propagation cast_op 2705 allow type_caster std native reference std std const would invoke cast_op type allow type_caster specialization distinguish type value type type_caster specialization invokes cast_op type allows behave way native reference type add test example std const add test use mutable immutable variant test chimera blend pybind11 caster custom pytype implementation support immutable mutable call order detect immutable mutable state cast_op need propagate even e.g std reference const note still work progress thing crashing likely mean refcounting bug something else missing add finish test distinguish const fix bug custom python type implementation demonstrate test requires const const treated differently non const add passing const non const method demonstrate non const conversion test apply formatting presubmit check fix build error presubmit check try fix error fix fixups try get pypy work additional minor fixups getting close green fix fix clang tidy warning presubmit fix clang tidy warning minor comment consistency cleanup pydecref py_decref copy move constructor resolve codereview comment review comment fix review comment remove spurious make test fail even static_assert commented expands bit adding accessors .is_immutable .addr compare identity python changing default cast_op type_caster specialization return non const value normal codepaths reasonable default adding roundtrip variant exercise reference pointer call path conjunction demonstrates failure case existing std conversion loses const similar way happens using default cast_op_type apply presubmit formatting revert inclusion concern test bit unwieldly use raw python.h function removing add test validates const reference propagation test verifies cast_op may used correctly detect const reference type used std mend review comment based change std type type simplify test little never returning constrefcaster type class_ definition removed formatted file move test builtin_casters review comment use cast_op adjust comment simplify constrefcasted test like version better move assertion matter back python,,
176,91a697203c80b52086244bb385f4d477ffaac787,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-12-09 00:08:19 +0100, , doc update warning python 3.9.0 3.9.1 released 2719,,
177,d068ab286ad5359dad9ffbe76f8002e3ce6ff8c0,ntony Lee <anntzer.lee@gmail.com>, 2020-12-09 00:07:36 +0100, , doc pybind11 numpy.h doe require numpy build time 2720 nice enough mentioned explicitly doc,,
178,028812ae7eee307dca5f8f69d467af7b92cc41c8,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-11-24 19:37:51 +0100, , doc add warning findpython development component library exist e.g manylinux 2689 add waring findpython development component library exist e.g manylinux minor wording update thanks henryiii,,
179,d57c1fab7f458ea63c39a9780c4b2f3507edf001,ames Foster <github@jgfoster.net>, 2020-11-24 09:08:33 -0800, , doc update installing.rst 2691 git submodule add need branch repository else ignored previous code checked master branch stable branch,,
180,8adef2c7f6b314e4fd0a4047b2e19828643ce105,oris Staletic <boris.staletic@gmail.com>, 2020-11-23 19:02:25 +0000,2682, fix workaround 2682 2422 simply clearing typeerror 2685,,
181,087b07c8b7ac5c16a65cf56b7dd01853e721972e,lbanD <desmaison.alban@gmail.com>, 2020-11-23 14:00:35 -0500,1211, remove workaround code needed since 1211 2683,,
182,7bd4b39754297ca4435810868520251820cc3091,obias Leibner <tobias.leibner@googlemail.com>, 2020-11-23 15:11:04 +0100, , fix define pybind11_cpp14 recent intel compiler 2679,,
183,af8849f47eea35fe16df0c5df64221b33b655968,ean-Baptiste Lespiau <jeanbaptiste.lespiau@gmail.com>, 2020-11-19 16:11:55 +0100, , doc list pybind11 exception 2671 list pyind11 exception curious reader see ,,
184,2fa4747cd4bc8802a1f7c4344caa976ae8421082,ickbridgechess <74011726+nickbridgechess@users.noreply.github.com>, 2020-11-19 05:09:33 -0600, , pythonbuf fix 2675 added test_thread testing segfault recreation fix str created outside gil moved threading test test_iostream cleaned formatting deleted test_thread cpp formatting fix yet another formatting fix formatting fix removed unecessary comment ignore warning c4702 unreachable code msvc 2015 authored nick bridge gmail.com authored nick bridge nbridge jumptrading.com authored yannick jadoul yannick.jadoul belgacom.net,,
185,17c22b9e0f56276f212b44f6cf0e6846a01623b2,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-16 10:18:43 -0500, , doc mention branch update checklist 2670,,
186,32d11c96537efb954da55a2167f6aa99a0bf2173,jorn <bjodah@gmail.com>, 2020-11-16 15:57:06 +0100, , fix typo pickle example 2669,,
187,de78bddd7f7cf7b59a9bd0b24d4c32f3d35e047d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-15 12:23:33 -0500, , doc better badge 2656,,
188,f8b8107b469922406afe6bc0aecd8061295e2c78,rank <frank-stettner@gmx.net>, 2020-11-15 17:55:42 +0100, , fix make findpython2 findpython3 work 2662,,
189,02746cb69f202579efb0004e55ac7984a5c466bb,enry Schreiner <henryschreineriii@gmail.com>, 2020-11-12 13:06:00 -0500, , doc add little information release,,
190,b7c741b5403706be05181bed7aafef749050df6c,enry Schreiner <henryschreineriii@gmail.com>, 2020-11-11 19:27:41 -0500, , doc back work 2.6.1,,
191,f1abf5d9159b805674197f6bc443592e631c9130,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-11 16:33:21 -0500, , doc changelog update 2652,,
192,ebd5c5b48c3e56e08630d11f7ed4cc5b23b02ed9,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-11 11:45:28 -0500, , feat way recompile changed file 2643 feat lazy compile refactor lazy only_changed refactor leave changed function user refactor pas function based yannickjadoul hdembinski suggestion refactor old _old intended user doc slight improvmenent rwgk doc ccache spelling extra warning pip caching ccache spelling noted yannickjadoul,,
193,c58758d04915197e16c7c0d8efc3b85c63b765f9,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-11-10 18:49:42 +0100, , fix add reasonable argument name enum_ method 2637 add argument name enum_ method add test_enum,,
194,b72cebeb228e839caa13fa0269bd15676e130def,obert Haschke <rhaschke@users.noreply.github.com>, 2020-11-09 19:10:19 +0100, , style clang tidy modernize use using 2645 style clang tidy modernize use using style clang tidy checking authored henry schreiner gmail.com,,
195,06b673a0daef1db4f921a19676a51abec6fb13e8,oris Staletic <boris.staletic@gmail.com>, 2020-11-05 22:54:37 +0000, , allow null value 2629,,
196,3e4d54bc0181eb7aad2ac52a2a18be18c1ab9aee,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-05 14:37:11 -0500,2638, fix match new extension discovery change classic discovery 2640 fix match new extension discovery change classic discovery followup 2638 fixed 2.6.0 classic python fix followup avoid warning,,
197,6d4854a50170239c93b396bd4b4f33258b161c86,enry Schreiner <henryschreineriii@gmail.com>, 2020-11-03 11:59:29 -0500, , correct type statement,,
198,6cc233cc32c6974c6268cc166ca4dde92a5aaece,enry Schreiner <henryschreineriii@gmail.com>, 2020-11-03 11:49:45 -0500, , label merged,,
199,b8dc60ec8f17ae739f15c54ffe4b1c578adcb994,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-11-02 20:45:54 -0500, , fix python include directory missing dirs 2636,,
200,7d6713a46d30f51014632f74c13667d42bfa783a,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-11-02 18:39:40 +0100, , use weakref clean captured function object def_buffer 2634,,
201,06a54018c8a9fd9a7be5f5b56414b5da9259f637,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-29 11:37:42 -0400, , fix min macos 2622,,
202,139c05dafa064d7be7aba17fe7448938fb961fe1,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-29 09:56:00 -0400, , test numpy python 3.9 2628,,
203,8290a5a0dafd6cb24ba327d25c4a4321c80bba0f,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-10-29 09:12:14 -0400, , clang wnon virtual dtor compatibility 2626 adding missing virtual destructors silence clang wnon virtual dtor warning tested clang version 9.0.1 ubuntu like originally discovered google internal environment adding wnon virtual dtor gnu intel clang,,
204,f2e799863b6314d7103c25cd86ff52aeea9dc8a1,homas KÃ¶ppe <tkoeppe@google.com>, 2020-10-29 11:47:59 +0000, , common.h mark another entry point unused 2625,,
205,3a37d338307573963b50d703fa2d29bee88a977a,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-27 19:58:27 +0100, , add __builtins__ globals argument exec eval present 2616 add __builtins__ globals argument exec eval present refactor inline function,,
206,ace4deb4f09f172e3f0cd622774a85de3874463f,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-22 22:34:44 -0400, , add job 2610 add job minor trimdown,,
207,4d037439ba0c7aa9add3c58b4754b634d55203df,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-21 16:21:44 -0400, , fix missing identifier python 3.9,,
208,7c26c71835d230b7d5b362d6fb6c464e60b551f3,ink Saville <wink@saville.com>, 2020-10-21 11:11:34 -0700, , fix mispelling basics.rst 2614 replaced adviced advised,,
209,86d3e9eb43935d2029185b09a8e58e88eb368b00,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-10-21 18:31:03 +0200, , begin working towards future v2.6.1 patch release,,
210,59a2ac2745d8a57ac94c6accced73620d59fb844,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-10-21 18:07:48 +0200, , v2.6.0 release,,
211,4038542b157d8e7ffd5c6f47166d9544fea03800,oris Staletic <boris.staletic@gmail.com>, 2020-10-21 13:14:56 +0200, , remove friend declaration class_ detail generic_type 2613 line two bug declares detail class_ friend fixing would change template typename typename ... first one introduced year ago large refactoring made probably intermediate step refactoring second made generic_type made agnostic respect order class_ template parameter nbsp removing declaration altogether never relied make think intermediate step refactoring ended commit history,,
212,6edd0e6d9038aa339e20b1293b4a2b555183c0d1,ana Borwornpadungkitti <potpath@users.noreply.github.com>, 2020-10-20 17:57:22 -0400, , fix reject keyword argument none .none false 2611 demo kwarg none false reorder extend test arg none false fix arg none keyword argument add changelog note fix name no_none_kw test function authored yannick jadoul yannick.jadoul belgacom.net,,
213,7f9445a626f25b253de7184a7db4f700758a2816,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-10-20 21:14:40 +0200, , thanks google,,
214,2bc62dc8c9d7a5fa0e5d303e22a010a48c2971a7,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-10-20 16:56:02 +0200, , updated credit,,
215,120e2e2167410a38857372bc5fd9d9b83c9b457c,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-18 22:40:19 -0400, , doc tiny typo,,
216,c513b5e3c6c94a8e0d98d07e11a3f96ce1556584,ric Cousineau <eric.cousineau@tri.global>, 2020-10-18 20:42:48 -0400, , test cmakelists robustify add version boost 2608 test cmakelists robustify add version boost refactor simpler impl authored henry schreiner gmail.com,,
217,0b9acc4009afdda427b5f151a67d500216707dc1,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-18 14:31:28 -0400, , fix chapter pdf 2606 fix chapter pdf fix section readme,,
218,bed9080c7f0f643e7013e0d6588a92c9032f317a,ariusz Suchojad <dsuch-github@m.zato.io>, 2020-10-18 12:51:36 +0200, , doc updated link pdf doc 2603 2605,,
219,09056717da753df8cc375b557640c3ae4c6e6f2d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-18 00:21:16 -0400, , fix much better pdf 2604 doc fix pdf build adding unicode mapping fix better pdf fix html build issue,,
220,c16da993094988141101ac4d96a9b2c92f9ac714,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-16 17:34:53 -0400, , chore bump 2.6.0rc3,,
221,064362fbb768b1159c825df3a234a48abe05b63e,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-16 17:23:36 -0400, , fix allow abi string forced 2602,,
222,6364b732e9e30cbd79b795e9290bfa3360aa32a1,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-16 22:38:51 +0200,2335, fix failure triggered 2564 demonstrate failure without functional change 2335 revert demonstrate failure without functional change 2335 reverts commit fix test crash registered python type get garbage collected clean internal structure class object scope reduce length std erase_if comment clean code cleaning type internals move cleaning type info internals tp_dealloc,,
223,c50f90eca6cee9d665913f56a8f3d00591b262ff,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-16 16:38:13 -0400, , style use black everywhere 2594 style use black everywhere style minor touchup review,,
224,2e31e466dc7591612b4b17300797d352e1f3f801,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 17:04:44 -0400, , doc update pypy win issue,,
225,8ae11fbf885d59cb395cff4e9bdbb1a1debd94e6,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 14:58:34 -0400, , add run,,
226,a42211536b797887b054bd86610aa11bf91f1470,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 12:16:09 -0400, , fix new line pypy_version,,
227,ad2fe0ee7b5c8db7fe134ac568a507cc5bdb0617,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 11:59:30 -0400, , fix pypy3 window extension issue,,
228,6bb71c48d570ba7d316838b368061fc11ed82807,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 10:52:31 -0400, , fix intp asserts,,
229,9ac604a3e86fe86473768de95725783d284ffcae,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 10:13:38 -0400, , fix pypy window issue,,
230,b72c79f96469fa3a22aaa3cfdff35ac8622d34da,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 09:43:49 -0400, , fix std is_pod pybind11 detail is_pod,,
231,f2008325346be9b549758b9642d723427b904d64,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 09:26:38 -0400, , style ssize_t ssize_t,,
232,63f2deea324fd7423f9dcc48eeaec7c9f319599b,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-15 00:07:54 -0400, , chore update eigen,,
233,c4a8b5bb9140cdc8c214044d41e2593986f875d0,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-14 16:37:25 -0400, , chore bump 2.6.0rc2,,
234,493649f965ef8ba613a6c60d3881adeae1052518,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-14 20:11:09 +0200, , fix valgrind detected freeing access pymethoddef macos python 3.9.0 segfaults 2576 check valgrind detected freeing access pymethoddef cause macos python 3.9 segfaults fix apply leak 3.9.0 fix faster check fix better naming thanks bstaletic authored henry schreiner gmail.com,,
235,645d83813bf1974c31842a7c30e687091218b5ec,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-14 14:08:41 -0400, , feat typing support helper 2588 feat basic typing support doc mention syncing suggested rwgk doc update changelog doc copy warning limitation,,
236,a8c2e3eec5baccde62cf76cfe3dbe82801acff29,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-14 13:43:31 -0400,2587, fix ipo debug relwithdebinfo 2590 fix ipo debug relwithdebinfo close 2587 doc slightly detailed ipo update,,
237,3be085d1944b62f96389dfe429dcded07f4af62e,alentin Boettcher <hiro@protagon.space>, 2020-10-14 17:32:26 +0200, , doc typo prefix suffix 2593,,
238,526a7733c773016f2e552777612027954d0765fd,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-13 19:59:51 -0400, , merged label still missing,,
239,01453b05c49a5796fa87d7c1d90931b33beb42a4,ay Soffian <155970+jaysoffian@users.noreply.github.com>, 2020-10-13 18:20:10 -0400, , fix setup_helpers fix bug _add_lflags 2586 fix minor bug _add_lflags allows flag added,,
240,2a263e087c0aa7a70a6ffc6dcfbfc0d3a5b9a2fa,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-13 18:19:05 -0400, , doc final 2.6.0 update 2582 doc final 2.6.0 update doc better warning text,,
241,c99d7f1cc721e7f2f6b7895b4d72c3bb0d8b3399,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-13 13:09:40 -0400, , doc template 2580,,
242,edda89ba6851ba9c04052079f43f514aec37f9f2,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-13 13:08:54 -0400, , fix install datarootdir instead hardcoding share 2584 close 2571 defined share unlike datadir sometimes overwritten incorrectly storing cmake file,,
243,7c71dd386161703dc25860870f579cca0ff3a9a8,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-12 23:04:16 -0400, , inverted labeler logic,,
244,99773fc5f6b148900a8b5e61a4a683a17052261d,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-13 05:00:54 +0200, , fix throw len failing pyobject_length 2575 throw len failing pyobject_length fix test mach error message pypy,,
245,2f746eeeb412023b844b12b4f4c8fa2a75424b08,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-12 22:35:23 -0400, , original labeler,,
246,1914b7d3a741cccb24ab9825fb0574e38b63d282,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-12 23:10:18 +0200, , shorten macro implementation using 2579,,
247,ae2e5a368ce327ba080f1dd054c0c8ff913d1afd,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-12 17:03:26 -0400, , try get labeler add need changelog,,
248,993495c96c869c5d3f3266c3ed3b1b8439340fd2,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-12 16:31:44 -0400,94, fix intel required 2577 fix intel fully supported fix intel compiler workaround longer needed followup intel required,,
249,4f45052d4c05ef75af27142333561d6bd349c25f,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-11 23:43:00 -0400, , fix label,,
250,cd2c25a2bf55ed3bdbfc362350ce1f46cb01ba05,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-11 20:41:11 -0400, , adjust labeler match pattern,,
251,7d7309b8143c54aa2b82497f4c32a6d465e46a4c,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-10 22:43:05 -0400, , monitor dependency,,
252,d46f3322a45cb907777f568bb1377ab1b9457ad8,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-09 17:33:45 -0400, , fix allow cmake varibles python call cached 2570,,
253,fecef388640a2eedb78d23158a3a38c01f145461,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-09 17:12:05 -0400,2569, refactor simpler followup 2569 2572,,
254,c02f0ec607b7120343ce35cfbebd21cf11083b78,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-09 16:51:23 -0400, , fix formatting issue,,
255,f385eccdb73aed41a268830f31fc47599d584c7a,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-09 16:41:42 -0400, , chore bump 2.6.0rc1,,
256,fae45325f633eccc2be9ebbb6972885d205859b9,enry Schreiner <henryschreineriii@gmail.com>, 2020-10-09 16:40:12 -0400, , fix labeler,,
257,8d8d48c5281438e6fb400984ff8c1522d2b9fb28,hmed Sobhy <68698147+asobhy-qnx@users.noreply.github.com>, 2020-10-09 13:10:23 -0700, , fix use abi __forced_unwind libc even gcc instead clang 2569 add support llvm compiler update include pybind11 pybind11.h __forced_unwind libc libstdc authored henry schreiner gmail.com authored henry schreiner gmail.com,,
258,59323a975ade742a5904fff23dbd3aecf72ad091,ndriish <andriish@users.noreply.github.com>, 2020-10-09 21:38:26 +0200, , update pgi 20.9 2566 update pgi 20.9 update pgi 20.9 update ci.yml update ci.yml update readme.rst update ci.yml authored henry schreiner gmail.com,,
259,e4e5c49a26dbf478ff93e3d6aacd747f19627c76,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-09 11:19:13 -0400, , doc known issue 2565 doc faq cmake update doc limitation label doc update changelog add bit structure label label sooner doc update rwgk doc address yannickjadoul point,,
260,0c5cc031ee4f64bbf60305051da8f45971577c3f,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-09 16:46:11 +0200, , feat deprecate public constructor module_ class 2552 deprecated public constructor module turn documentation comment module_ add_object valid doxygen documentation move definition macro move detail module_ unify python signature throw module creation fails module_ mention module_ deprecation warning message module_ module_,,
261,71aea49b8bce3019b1b5b19f1aebe2d2125b21c6,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-09 01:09:56 +0200, , check scope __dict__ instead using hasattr registering class exception 2335 check scope __dict__ instead using hasattr registering class exception allow registering name derived class scope extend test add test error thrown registering duplicate class circumvent bug combination test_class.py,,
262,deba040b6feb33b25b450ea0cd63c266f4de409e,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-08 12:25:04 -0400, , test hide segfault 2559 test run test often segfault test drop cross module gil test test try skipping macos python 3.9 test test drop macos python 3.9,,
263,49cdb70a4d260423fe8617af49f97fc67e34b5e9,barlow83 <jbarlow83@users.noreply.github.com>, 2020-10-08 06:04:27 -0700, , doc use sorted glob example setup.py 2561,,
264,49c389b760536d9b56d0be4cff0aec69f7dfca97,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-08 09:04:02 -0400, , test window 3.8 3.9 mostly 2560 skip cpptest win 3.8 doc minor typo caught rwgk,,
265,b6f37f67ac6c6d2ec2fa35ca3816b9de7da9fcbd,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-07 20:41:03 -0400, , doc minor cleanup 2555 doc minor cleanup fix add path command doc add example use place update .github workflow ci.yml,,
266,00edc3001bb10d6e6d4669e385ee43996e674b08,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-06 10:04:13 -0400, , fix pybind11_object required pybind11 namespace regression 2553 fix pybind11_object could used inside pybind11 namespace regression doc add changelog conversion protection change update python 3.9,,
267,9a0c96dd4c7438955c891b05e07fbbd91c45d7a0,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-05 22:36:33 -0400, , feat prepend tag 1131 feat add priority overload prepend doc fix wording suggested rwgk feat add get_pointer refactor is_prepended prepend internal doc suggestion wjakob test add test covering get_pointer set_pointer,,
268,f537093a2fc1b42e084479a07cfa01512837492e,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-05 22:48:54 +0200, , fail passing object wrong python type object subclass using pybind11_object macro 2349 fail passing object wrong python type object subclass using pybind11_object macro split fix test_as_type type constructor throw error argument type replace tp_name access pybind11 detail move forward declaration detail common.h add builtins module name pypy add macro use,,
269,2a2f52201dfda1018d9e77839c8be94da0a25da0,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-05 15:31:00 -0400, , fix find_import work properly classic tool 2550 fix find_import work properly classic tool fix file checked style run,,
270,1411207711cbd8349e71de8feafae77e351677a7,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-05 16:43:27 +0200, , chore drop support pypy 7.3.1 clean old pypy workarounds 2456 remove code inside 0x06000000 preprocessor branch fix cleanup remove reference pypy 5.7 5.9 doc update comment pyunicode_utf pypy authored henry schreiner gmail.com,,
271,b70894df524ae34ba7b66df8cb541523cc29b880,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-04 15:52:55 +0200, , doc add std valarray doc advanced cast stl.rst 2547,,
272,e8ad33bb308276149cf9a56f80c477318b64999a,ritz Reese <fritzoreese@gmail.com>, 2020-10-03 17:09:14 -0400, , fix buffer_info ctypes buffer pybind 2502 2503 test new test ctypes buffer pybind 2502 fix fix buffer_info segfault view stride pybind11 2502 explicit conversion buffer_info make clang happy pybind 2502 another explicit cast buffer_info constructor clang pybind 2502 simpler implementation buffer_info constructor py_buffer move test_buffers comment view stride may null fix whitespace use c_strides instead zero view stride null c_strides f_strides moved numpy.h array buffer_info.h detail used buffer_info py_buffer constructor increase ctypes buffer test coverage test_buffers split ctypes test skip one broken pypy2,,
273,6bcd220c8d6a6e7ea05fced74531fabcbac88fbd,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-03 13:38:03 -0400, , refactor module module_ typedef 2544 wip module module_ without typedef refactor allow module work,,
274,560ed3e34fb667f7100284241caaa77f3f95c660,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 22:38:29 -0400, , doc fix odd spacing,,
275,3488494a814c025b19c9a223e8bbd6b0599b176b,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 22:34:22 -0400, , refactor import check common function 2526 feat import check common function doc add cmake doc,,
276,ca4127ce07ef5c9a25fdac7c6b981bda4e352db6,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 17:09:58 -0400, , fix labeler,,
277,961b2e6205647f0308b2e9fb13d884c18fcb23ef,yrum Wright <hyrum@hyrumwright.org>, 2020-10-02 17:00:45 -0400, , fix ensure gil held copying function 2545 authored hyrum wright hwright google.com,,
278,1bcd5f0a1948cd0523834f1ef97c56e8e22b9485,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 16:59:04 -0400, , update pr_merged.yml,,
279,5f9b16672f3d8cae698515171718a1e625f71861,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 16:56:19 -0400, , label changelog needed 2546,,
280,9796fe98fca282a2abe3719057397e256ba2e290,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-02 21:30:34 +0200, , feat vectorize function void return type 1969 allow function functor passed vectorize return void stealing sizmailov test fixing unused argument warning add missing std move rvo work function return type different actual returned type remove extra eol doc add detail chore pre commit autoupdate remove array_iterator array_begin array_end detail namespace authored sergei izmailov gmail.com authored henry schreiner gmail.com,,
281,56784c4f425a5749d07171b1dabccf2e4aa405ae,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-02 19:07:04 +0200, , add operator operator overload resolution 2514,,
282,2b6b98e28f08a786b781992921896908276ca940,iyaz Haque <haque1@llnl.gov>, 2020-10-02 10:06:04 -0700, , bugfix check actual value deregistering pybind11 instance 2252 add test demonstrating problem deregistering pybind11 instance fix deregistering different pybind11 instance internals authored yannick jadoul yannick.jadoul belgacom.net authored blistic wots_wot hotmail.com,,
283,b9d00273eefd4c07f7c9e27fbcf04fba590b798f,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 10:03:35 -0400, , feat parallel compiler 2521,,
284,07b069a55bfd13a9bbc5c6320120c260fb30d107,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-02 16:01:24 +0200, , unify python module constructor make contructor pre allocated pymoduledef private 2534,,
285,6d2d08db00b39b81e531c9fa974fd00aa2ef1185,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-02 09:56:54 -0400, , fix conda forge patch 2540,,
286,5ebc78164db47772d9c57948b3668edae1e273be,oris Staletic <boris.staletic@gmail.com>, 2020-10-02 15:39:22 +0200, , allow raw union without base class 2320 authored henry schreiner gmail.com,,
287,c72708a746904544b4dc35a84844b83ce0b5e228,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-10-02 04:57:25 +0200, , moving tp_class access consistent fully qualified naming pypy detail get_tp_name 2520 moving tp_class access consistent fully qualified naming pypy detail get_tp_name change get_tp_name,,
288,3232e59b83196dc0846ff4738e8ce70d79307be1,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-09-30 23:49:11 +0200, , check module file extension could queried correctly 2538 incomplete python installation e.g within docker possible distutils installed case execute_command statement query distutils python module extension fails pybind11 empty string commit add extra check cause cmake failure actionable information spent lot time trying track problem,,
289,01ad89209a80be8695342427d5b2c153c72b4121,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-30 17:46:55 -0400, , publish two step,,
290,319b99648b94c37e16cec64e0aec6d80557de64f,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-30 17:17:59 -0400, , fix metadata adding quote distinfo,,
291,1994691a9c25b418d58f723eb5b16fb085bd2bb2,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-30 17:05:32 -0400, , download artifact issue,,
292,0fc5774c0ca9766336f3ef12837d3a5d64d10c8f,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-30 16:32:19 -0400, , fix beta doe dot front 2539,,
293,219024624310f14218d9b5519f70080feefa7d2e,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-30 16:10:26 -0400, , chore bump 2.6.0b1 beta release,,
294,82dbc5b78fd699bb9b9f948e0876e77cbb510893,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-30 15:48:08 -0400, , release 2530 release doc minor update form wjakob fix enforce reasonable version setuptools,,
295,d159a563383d10c821ba7b2a71905d1207db6de4,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-09-26 22:55:11 -0700, , static allocation pymoduledef avoid leak check error 2413 initializing pymoduledef object python 3.8 documentation m_base always initialize member long standing since first github commit 2015 inconsequential bug also removing inconsequential py_incref def pymodule_create reset reference count git rebase master moving static pymoduledef declaration global scope requested wjakob renaming two new macro start,,
296,3c7ef56bb651c4d31670c0db42d9555755b1172a,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-22 17:36:25 -0400,2510, fix warning latest appleclang 2522 fixed 2510 reintroduced one line 2126,,
297,d74be321097093b994c9aed0bc2b54ad1276784d,ric Cousineau <eric.cousineau@tri.global>, 2020-09-22 12:01:15 -0400, , test fix test override execution 2512,,
298,e01f49246298f3fb7f825a911f1e8d838cda83d7,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-21 18:34:48 -0400, , fix add nice cmake error interpreter component missing 2519 close 2515 found rhjdjong,,
299,5e6ec496522b313e34af3de91f6c0565f68e3552,avid Vo <auscompgeek@users.noreply.github.com>, 2020-09-20 09:12:19 +1000, , add enum value enum repr 2126 change enum reprs look like enum.name value similarly python enum module keep str enums enum.name like python enum module,,
300,5a8ec8e50569303e9220ea52fdc20ec0e0c19ae4,ickard HallerbÃ¤ck <rickard.hallerback@gmail.com>, 2020-09-19 20:25:46 +0200, , include used pybind11.h 2499 include used separated standard library header project header reordering includes,,
301,d0ed035cc537ac1736ee840ff3b6af923803942b,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-19 14:23:47 -0400, , fix appleclang warning 2510 fix appleclang new warning fix appleclang x.x.0 trigger warning,,
302,4a288ab92839837126e75a862ba07af1b207b084,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-18 14:57:47 -0400, , fix window latest 2508,,
303,87828c7ec1e64ed35293a719d7a22e11cd176063,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-18 11:15:36 -0400, , fix typo window support 2507,,
304,8fa70e74838e93f0db38417f3590ba792489b958,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-17 21:18:15 -0400, , fix broken documenation test work rtd 2506 fix broken documenation test work rtd doc doc link incorrect,,
305,d753b76999485805435a7046c18a1ea826320fb9,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-17 17:53:35 -0400, , doc corrected link documentation,,
306,54831a9a1a4c6ab859a1118e793cbb414e29af38,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-17 15:57:03 -0400, , fix use svg pdf converter instead original solution,,
307,81555ce61f496c7c94eadeaf2830160a9b9c304f,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-17 15:40:09 -0400, , doc use readme.rst doc home page 2500,,
308,99ef2b846742e2298b97904e5be43f5ea5d71d8c,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-17 09:08:08 -0400, , doc read version pybind11 file 2496 doc read version pybind11 file doc show full pep 440 version everywhere,,
309,4e7c08daee39ffe8b24dde5a8fb18062f03bf5a6,ric Cousineau <eric.cousineau@tri.global>, 2020-09-17 07:19:33 -0400, , add test vectorize 2260,,
310,e3774b76ed50ceb1ff53c0cd401cc7ce53cca76e,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-09-16 22:03:06 -0400, , test condition look xfail,,
311,11f756f5a9504b003883ae243ec34276222c7c3e,enry Fredrick Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-09-16 22:02:09 -0400,2492, fix type bug intruduced 2492 test old form fix bug introduced,,
312,dec33c29f228b2b9bb931f4cf93520780d961fe4,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-16 20:00:19 -0400, , doc installing section 2494 doc installing section doc feedback wjakob,,
313,d3c999c774d15602eabe4141c2b29788d72dfcf3,oris Staletic <boris.staletic@gmail.com>, 2020-09-16 23:15:42 +0200, , fix rename pybind11 module pybind11 module_ 2489 support 20. backwards compatibility provide alias old name change necessary easily avoid error compiler think module used keyword,,
314,e37921d7617f7bf87ee2fa9591c9cec91ae216b4,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-16 17:14:06 -0400, , refactor drop mkdoc update changelog 2491 refactor drop mkdoc doc update changelog,,
315,fd61f5038eac57a96f0d2dbcf2a4f125bc91f1ca,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-16 17:13:41 -0400, , feat setup.py redesign helper 2433 feat setup.py redesign helper refactor simpler design two output refactor helper file update window support fix review point yannickjadoul refactor fix naming doc feat customization point feat add entry point pybind11 config refactor try extension focused method refactor rename alt inplace global fix allow usage git module better doc feat global extra yannickjadoul suggestion feat single version location fix remove requirement setuptools must imported first fix review point wjacob fix use .in add procedure doc refactor avoid monkeypatch copy doc minor typo corrected fix minor point yannickjadoul fix typo window mode fix msvc update flag see http cpp build reference std specify language standard version view 2019 doc discus making sdists hand use pep517.build instead manual setup.py refactor comment yannickjadoul doc update ktbarrett fix change newly recommended tool instead pep517.build intended proof concept build seems correct replacement see http github.com pypa pep517 pull doc update wjakob refactor dual version location doc typo spotted wjakob,,
316,41aa92601ebce548290f6a9efcd66e64216bf972,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-16 11:32:17 -0400, , refactor replace .get_type type handle_of 2492 refactor replace .get_type type handle_of refactor use impl handle_of fix deprecate h.get_type,,
317,a4cee36b6f846bcb07ae6a6d60a2e9d6670607b6,riffin Downs <35574547+grdowns@users.noreply.github.com>, 2020-09-16 05:07:06 -0700, , add vcpkg installation instruction 1936 add vcpkg installation instruction casing move instruction authored henry fredrick schreiner cern.ch,,
318,dabbbf315d61d71e9d0a2cb68e0b9a86e4204459,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-15 12:10:31 -0400, , fix use override instead overload 2490 fix use override instead overload doc accurate statement,,
319,16f199f8d969c3c01ae0f8c863498bf5854389ea,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-09-15 16:24:39 +0200, , change base parameter type exception constructor pyobject handle 2467 change base parameter type excepion constructor pyobject handle fix compilation error passing handle pyobject,,
320,e7bafc8ec1b8d9b438c15bc1b28566a9476918fe,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-12 08:26:35 -0400, , style clang tidy default check fix bug iostream deconstruction  pybind11 include pybind11 iostream.h warning call virtual method pythonbuf sync destruction bypass virtual dispatch clang analyzer sync  pybind11 test note calling  ,,
321,4d7864083064975239befb80e3cb2479b4610fb5,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 23:26:50 -0400, , style clang tidy modernize use emplace,,
322,ce88e940ce9db950534e7d8a411d89cb76c39f5f,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 23:20:47 -0400, , style clang tidy modernize use auto,,
323,b491b465c7282e039583f6f92e11077cfc378e80,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 23:15:22 -0400, , style clang tidy modernize use equal default,,
324,b342c37388177067db9e8ba609aacc119c24b1a4,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 22:57:10 -0400, , style clang tidy modernize use using,,
325,96e6a8d5541a91a82ad224c9f60ecbc34d86fb57,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 22:49:33 -0400, , style clang tidy readability container size empty,,
326,5dfbe6f903adcb894fd1471c62347d97229a998c,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 22:43:53 -0400, , style clang tidy modernize use override,,
327,8dc31c7b29663eb7d0636c4e6117a042fa8dc85f,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-10 21:16:40 -0400, , style clang tidy llvm namespace comment,,
328,d65e34d61d5f49ffbe7c2e7864391366f1124b0e,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-09-15 14:56:20 +0200, , resolve empty statement warning using 2325 wrap ... false resolve trailing semicolon deprecate get_overload favor get_override correct erroneous usage overload instead override implementation internals fix test use non deprecated macro update doc use override instead overload appropriate add warning deprecated alias add semicolon deprecated macro match original behavior remove deprecation macro get_overload add note changelog upgrade guide,,
329,9df13835c851753b7d385717eb79d8a06906e0c4,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-09-15 14:50:51 +0200, , stop array_t argument accepting array match contiguity flag 2484 stop array_t argument accepting array match contiguity flag add trivially contiguous array test,,
330,f12ec00d70189869ce46f9a7f534d435cf9ea173,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-14 18:06:26 -0400, , feat type type 2364 feat type refactor using type class refactor object base wip tigher api refactor fix conversion limit api doc added note ericcousineau tri refactor use type,,
331,32bb9071aa3cac01c6edcf7246305c0b0bae453f,oris Staletic <boris.staletic@gmail.com>, 2020-09-14 20:07:29 +0200, , avoid style cast pointer doc 2487 pointer cast hard grep,,
332,cc982ac1cd3ec31040c0cfff3a6dd0183f7c1cac,oris Staletic <boris.staletic@gmail.com>, 2020-09-13 16:24:00 +0200, , fix allow assignment time point resolution system clock 2481,,
333,38370a87f417001f3984cfa929860dabce6b69e7,ndriish <andriish@users.noreply.github.com>, 2020-09-12 04:06:52 +0200, , fix support nvidia pgi hpc sdk 2475 added guard includes added new config added new trigger changed workflow name debug debug debug debug added flag fro pgi disable eigen removed test fail uncomment line fix missing include fix minor style cleanup test support skipping remove tighten bit fix try msvc workaround pgic test split prealoc test fix pgi compiler fix fix pgi void_t fix try appease nvcc better ordering slow test minor improvement testing add numpy testing eigen generates cuda warning pgi error added centos7 back moment fix yaml run missing centos7 missing pytest use centos test something else try adding flag centos fix centos refactor move include shared location added verbose flag try use system cmake3 try use system cmake3 attempt2 try use system cmake3 attempt3 test finding pytest warning fatal error test cleanup weird issue fix final polish authored andrii verbytskyi mpp.mpg.de authored henry schreiner gmail.com authored andrii verbytskyi averbyts cern.ch,,
334,fe9ee86ba882634ee7ec46dfdc72ac6cbbfb5b50,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-09-11 19:53:04 +0200,2392, add check str handle correctly converted object throw 2477 add check str handle correctly converted object throw fix test python apply rwgk fix cherry picked commits 2392,,
335,b47efd35fb436abe5c93db36b4ff5a1b5fdf593f,iro Santilli <36707998+cirosantilli2@users.noreply.github.com>, 2020-09-10 18:58:26 +0100, , use defined preprocessor variable might undefined 2476 variable __clang__ __apple__ checked defined minortity instance project using pybind11 set wundef warning show test build also modified catch problem,,
336,621906b3e7b0492b5a4271c94a9435853dd20141,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-10 11:49:26 -0400, , fix support nvcc test 2461 fix support nvcc test fixup fix support nvcc test doc mention compiler fail fix much simpler logic refactor slightly faster clearer,,
337,fbc7563623247f410b119f7cee44841411059cd7,olger Kohr <ho.kohr@zoho.com>, 2020-09-09 16:39:20 +0200, , add object casting example embedding doc 2466 add object casting example embedding doc move implicit cast example object.rst move bottom improve implicit casting text fix xref improve wording per bstaletic suggestion,,
338,37f845a1dc171d981149a53f01c13c6ba85e0f2e,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-08 09:26:50 -0400, , disallow common capitalization mistake 2472 annotate linux style block common mistake,,
339,064a03a49be23d5b19109ca4910bf6ebdd272354,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-09-04 23:31:19 +0200, , main cmakelists.txt file noisy,,
340,36c666f02758f416d038284f24dc16a5a6454fdb,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-09-04 23:31:05 +0200, , opt_size target,,
341,3bd0d7a8d58afed91a4aacf5d0cdb8443e107825,ichalsustr <michal.sustr@gmail.com>, 2020-09-06 05:35:53 -0600, , add note specifying custom base class exception 2465 add note specifying custom base update exception doc based feedback fix trailing whitespace authored michal sustr michal.sustr aic.fel.cvut.cz,,
342,ce1a07ef45d204e6e72d7039ca6764cac90b026e,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-04 21:54:09 -0400, , fix use classic extension handling unless otherwise requested 2462 fix use classic extension handling unless otherwise requested fix variable must cached used externally,,
343,0dbda6e80ba41df50edaef40475011d0395aba16,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-09-04 20:02:05 -0400, , feat pos_only 2459 feat pos_only fix review point yannickjadoul fix review point bstaletic refactor kwonly kw_only,,
344,44fa79ca8064a0f476fa9095c9c1436c26d2fb12,ric Cousineau <eric.cousineau@tri.global>, 2020-09-04 19:26:57 -0400, , pytypes add gotchas section default constructed wrapper type none 2362,,
345,72b06b86b3824781f31c790dfce67e26e6307816,enry Schreiner <henryschreineriii@gmail.com>, 2020-09-03 12:47:30 -0400, , eigen moved,,
346,4c36fb7b1236fce25e00b63f357ccc36dc006662,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-09-01 15:56:43 +0300, , doc avoid type docstrings 2441 doc avoid type docstrings bit rewording another bit rewording third rewording,,
347,3a89bffac0d95a856d1d2367ca1b9e28ac4ef663,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-31 14:28:07 -0400, , harden chrono test mark another macos 4.9 dev failure 2448 harden chrono test mark another macos 4.9 dev failure help little flakiness seen timing test update test test_chrono.py also fail,,
348,fb0a3a0e82ae5f62a382b5c59ac53873f33089db,aniel Saxton <2658661+dsaxton@users.noreply.github.com>, 2020-08-31 09:01:08 -0500, , fix broken readme link 2449,,
349,3c061f216899485399fbb1e6b7732fa0051733f1,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-08-27 17:49:52 -0700,2409, fixing pybind11 byte ambiguous conversion issue adding missing byte type exercise code change change cherry picked 2409 minor modification test_pytypes.py related flake8 via 2409 change extensively tested google environment summarized http docs.google.com document 1tpl change cause issue note pass python pybind11 str hold pyunicodeobject pybytesobject side effect longer relies permissive pybind11 str behavior however permissive behavior still exercised exposed via existing test code change designed enable easy removal later python support dropped completeness confusingly non test code change travelled example ambiguous conversion error fixed  pybind11 test 214 error ambiguous conversion functional style cast pybind11 detail item_accessor aka accessor generic_item byte byte byte byte  pybind11 include pybind11 detail pytypes.h 957 note candidate constructor pybind11_object byte object  pybind11 include pybind11 detail pytypes.h 957 note candidate constructor pybind11 include pybind11 detail pytypes.h 987 note candidate constructor inline byte byte const pybind11 str  error generated ,,
350,6a192781fca28fd997f0220989605b759d65d6ad,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-28 15:21:43 +0200, , fix bug roundtripping datetime.time object midnight eastern hemisphere timezones 2417 2438 fix bug roundtripping datetime.time object midnight eastern hemisphere timezones 2417 test check timezones fix review remark remove useless comment skip setting environment variable window,,
351,1abc4a9de5d3dfbe3b4b174ba144259d130a59ff,ekken <philip.deegan@gmail.com>, 2020-08-27 00:55:18 +0200, , fix doc typo drop second use without 2439,,
352,9b8cb02030e45443a8a4c5526cdb8093caa481eb,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-26 09:07:30 -0400, , fix respect python_version set classic mode 2414 fix respect python_version set classic mode fix add warning using python_version,,
353,03b3d59d10b2b8fa67c4049fd3e505b7b9322dfe,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-26 05:51:07 +0200, , test fix including algorithm stop msvc complaining std count_if test 2435,,
354,a2bb297b325827765853929ac6dc220ac5b15658,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-25 18:51:06 +0200, , throw exception returning unique_ptr shared_ptr nullptr holder type init rather crashing 2430,,
355,5b59b7b2638ce7461e96f12c41015134733fb290,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-24 18:04:37 -0400, , gha annotation 2427,,
356,43f390ad854028d25b64bc143597bcb646f851d5,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-24 20:31:20 +0200, , add note vs2017 requires permissive build mode 2431 add note vs2017 requires permissive build mode test msvc 2017 args1 use args override max cxx authored henry schreiner gmail.com,,
357,b3d8fec066285c831b69fd77c092f1cc70e38882,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-24 00:00:12 +0200, , adapt code example advanced classes.rst new handling forgetting call superclass __init__ 2429,,
358,4493751a5f8c74b63e64088594e2d59af2f84639,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-23 18:35:51 +0200, , fix new style __init__ usage numpy doc 2426,,
359,b8863698d6f53ea86dd26c681eeaa837888c66d6,barlow83 <jbarlow83@users.noreply.github.com>, 2020-08-22 15:11:09 -0700, , improve documentation python exception 2408 main change treat separate category exception arises different circumstance need handled differently asymmetry python exception emphasized,,
360,c58f7b745b778897ccb5cb122fdb95085f7e5cc4,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-22 09:06:01 -0400,2420, fix reduce target collision add_submodule mode 2423 fix reduce target collision add_submodule mode close 2420 fix update cmakelists.txt,,
361,56df3c4649170dba69662271693f3352beb37796,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-21 15:27:21 -0400, , fix couple place pybind11 missing 2421,,
362,d4d7ef5d27b48e7773b5fef8b646625210532c91,jorn <bjodah@gmail.com>, 2020-08-21 20:52:38 +0200, , update 2419 cpython configured pydebug could use,,
363,f31df738f7fbd77382ae88d36fbd17b01b912953,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-20 15:42:07 -0400, , doc move contributing 2402 doc move contributing doc clarify pypy promise,,
364,2fa18431cee49b7e782c577b63a7e2ca7d0213d2,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-20 12:00:28 -0400, , doc pin version readthedocs,,
365,a6887b604aa4d0df7fb63c3d6d7911cb44906cfa,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-19 14:53:59 -0400, , doc update changelog versionadded,,
366,110e6c12ce46cc83ecbb1aaf76c327e24ca76a31,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-20 11:58:34 -0400, , reduce flakiness little 2418,,
367,24dffe46afb1c6d9d2946fd0b162aeed4c9c1daa,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-19 16:49:08 -0400, , fix always 2412,,
368,04fdc44f5065f8b56754fae9e0e93473bd3e7e60,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-19 13:11:57 -0400, , test avoid putting build product source directory 2353 test keep source dir clean make first build inplace drop dev setting anything test warn source directory dirty,,
369,1729aae96fe5da9b978fa6f448c6bb8f56da6b94,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-19 12:26:26 -0400, , feat new findpython support 2370 feat findpython support refactor rename doc cap fix feat nopython mode test check simple call doc add changelog upgrade guide feat support python3 python2 refactor use target test fix support cmake 3.4 feat classic search also find virtual environment doc update wjakob review fix wrong name quiet mode variable reported skoslowski refactor cleaner output messaging fix support debug python findpython mode fixup refactor cleaner output messaging fix missing pybind11_found restored subdir mode fix nicer reporting python pypy fix order variable fix doc minor last minute cleanup,,
370,69821d9e755b4bc16f644067272a5399a5afcc4c,aul Fultz II <pfultz2@yahoo.com>, 2020-08-18 07:34:18 -0500, , disable testing using build_testing 1682,,
371,cf0a64596ea067f244deb49fa40c402b176a7176,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-18 07:14:34 -0400, , fix throwing repr caused segfault 2389 fix throwing repr caused segfault fixup include python 3.9 rc1 2387,,
372,7dd2bdb0b3374f14817b4625f26e865d9825c679,osalam Ebrahimi <m@heslil.com>, 2020-08-18 03:46:23 -0700, , doc fix typo 2405,,
373,64040997121d5660394463db9c117bae8db9f42c,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-17 10:14:23 -0400, , doc contrib issue template 2377 doc move helper .github allowed doc guideline contributing chore update issue template fix review bstaletic refactor point rwgk doc touchup review change,,
374,4d9024ec71f30223fc161b7a01fcc486abce800b,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-16 16:02:12 -0400, , test cleanup hardening 2397 test refactor cleanup refactor consistent test vendor six test xfails nicer system test simplify info test suggestion yannickjadoul bstaletic test restore pypy test pas test rename info env test strict false true test drop explicit strict true test reduce minimum pytest 3.1,,
375,3618bea2aadc220055ed0f00ac113909da7b9466,ames R. Barlow <james@purplerock.ca>, 2020-08-08 03:07:14 -0700, , add document deal exception hit destructors noexcept function includes fix support python 2.7 extends documentation error handling virtuald yannickjadoul contributed,,
376,a876aac2cf779a7d82b454f0c7ae06add172dc97,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-16 11:18:47 -0400, , test loosen test valid system 2399,,
377,cd856992121b0a98bbe6e15d9a886f2b43f3d972,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-08-14 13:53:41 -0700, , using recently added pytest.py2 instead str byte 2396 important gain uniformity therefore easier cleanup drop py2 support slight loss nice str byte reminder specific context,,
378,5a3ff72348103ec00cab2832a25d5d4937f9eec8,ric Cousineau <eric.cousineau@tri.global>, 2020-08-14 14:16:38 -0400, , remove setup boost macos step 2395,,
379,ebdd0d368cb53f6e8f4bafb4368332f8426f2001,ric Cousineau <eric.cousineau@tri.global>, 2020-08-14 14:03:43 -0400, , test consolidate version vs. platform cpython vs. pypy check 2376 fix logic authored henry schreiner gmail.com,,
380,cba4a98546ed0e054fb85d1a7eb70a37154d8fd4,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-14 12:24:58 -0400, , include boost 2393,,
381,fb042d692ffbbc9ec39546c8e734596ddaf93b7e,ichael Goulding <michael.goulding@live.com>, 2020-08-14 09:15:50 -0700, , fix warning c26817 copying auto ... 2382 fix warning c26817 potentially expensive copy variable range loop consider making const reference es.71 replace another instance auto ... auto found bstaletic authored michael goulding microsoft.com authored yannick jadoul yannick.jadoul belgacom.net,,
382,2e2de8c87a65aba78db65f60915a90b6f20e9c46,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-13 20:13:16 -0400, , fix add missing signature 2363 fix add missing signature fix add array_t,,
383,830adda850d4ef9e680ead522b3189877cfc2827,arc-chiesa <marc@rti.com>, 2020-08-13 16:47:23 -0400, , modified vector stl bind initialization buffer type optimization simple array 2298 modified vector stl bind initialization buffer type optimization simple array add subtests demonstrate processing python buffer protocol object step fixed memoryview step test run python modified vector constructor buffer return value readability,,
384,1534e17e44a74274b164a65f76880764b8e4cc8d,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-12 14:09:42 -0400, , include python 3.9 rc1 2387,,
385,f7abac66895d2c19f9992625241af32a8d8836d7,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-12 09:33:08 -0400, , fix boost include dir listed first 2384,,
386,173204639e5c555dadbf5465e8d8b9b0d6b736ae,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-08-10 17:49:14 -0700, , adding test specifically exercise pybind11 str raw_str 2366 test also alert behavior change across python pypy version hardening test preparation changing pybind11 str hold pyunicodeobject also byte note test expose pybind11 str also hold byte,,
387,6f3470f757cc5162d5f9115ea9e280e071c212fa,ustin Spicuzza <dustin@virtualroadside.com>, 2020-08-10 16:10:45 -0400, , add robotpy build list tool 2359,,
388,0af7fe6c1943e6a9043e4e01c4bc9059108a6c98,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-08 17:34:38 -0400, , fix typo 2374,,
389,227170dc2f209795974fdeea2df96c699de981a0,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-03 11:44:16 -0400, , fix better handling,,
390,c664d55757ea20903da78f7320de8415da497378,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-01 23:09:32 -0400, , better output config,,
391,ed6de125c92ba1db4ccafc4e9c8a1a1d905a0347,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-01 23:47:47 -0400, , format include .in file,,
392,da803eb0a5113cc570a397a2acb1ecbc4d5bad78,enry Schreiner <henryschreineriii@gmail.com>, 2020-08-01 15:53:11 -0400, , fix duplicate target name removed,,
393,df115977df9de70710d1d445253c99f47f1a58bd,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-31 22:45:19 -0400, , chore cleanup,,
394,3e448c0b5e3abcd179781dd718df2bd2340ddb06,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-08-04 14:45:55 +0200, , enable ellipsis python 2360 enable ellipsis python enable ellipsis test python mention ellipsis doc,,
395,1caf1d0613c25817e6524286615f3d3cff34afb5,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-08-01 15:24:30 -0400, , fix check list validity add missing file 2352 added check cmake 3.12 make sure file listing date caught missing file,,
396,4d90f1a1998b394e075660fea1dbaf9d24ea0039,barlow83 <jbarlow83@users.noreply.github.com>, 2020-07-31 17:46:12 -0700,1878, add error_scope class_ dealloc protect destructor call 2342 fix issue 1878,,
397,b8047245bbcc36c56d0be2103ca575b79c5e6a34,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-07-31 04:16:40 -0400, , fix uninstall cleanup 2346,,
398,6f6e9394ce37a737fab2a93248046dcccfa20da5,cxz <17132214+acxz@users.noreply.github.com>, 2020-07-30 21:16:50 -0400, , feat add uninstall target cmake 2265 add uninstall target cmake add target built master project authored henry schreiner gmail.com authored henry schreiner gmail.com,,
399,94db5c5ed1a0f8bde74e8b31e603c7bcccf6e3f6,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-30 16:20:10 -0400, , format apply cmake format,,
400,e2a96890e12e71074ed3ff4acfd23b83fc14f923,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-29 16:42:07 -0400, , format add cmake format pre commit,,
401,1651c324928cc849bcd1cefdf74076574a4db868,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-30 16:04:26 -0400, , update address review point,,
402,f64d5aa6da17ef92987a0b740f94c5d8cbce3229,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-29 20:10:38 -0400, , fix typo warning support win 2.7,,
403,1b92cd17034df657de2a677f5182946ca646dd6e,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-29 15:02:53 -0400, , fix address review point yannickjadoul,,
404,6ec1775fffa9918ffdfdf7d2c8c08a1117c6da7c,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-28 00:43:12 -0400, , feat drop cmake 3.6 modernize cmake fix include python_is_debug,,
405,1491c94c9d742d2d7bfccfc57b3944d66e5e048a,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-07-28 20:13:09 -0400, , cmake configure test 2327,,
406,8e40e389fd60a6cdef97897b2749868004c6d994,arcin Wojdyr <wojdyr@gmail.com>, 2020-07-28 21:44:19 +0200, , cast pointer std tuple std pair 2334,,
407,c51b3f436d23a6d62815ba40c26d03574e1a2ea7,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 20:25:21 -0400, , change caching,,
408,a63248686542bd57244a64c7ffe058539ef542e8,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 18:42:53 -0400, , window 2016 test,,
409,88b3e5c68d33b1f24ab72878ff61d846fccabd62,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 18:17:11 -0400, , nicer naming scheme,,
410,ff39ad3f312d949a83d2c4089c310ae6db8c7600,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 15:05:10 -0400, , include scipy test,,
411,249a13bd6e6bf105f6034758f38f1d940899b557,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 14:37:39 -0400, , move doc check gha,,
412,e450ea05369a5d3f7f12bf536e023c834e1488f7,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 14:15:20 -0400, , add docker build gha,,
413,2fbbd51084dd439e6a456ee5b61733b1eccb2116,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 13:54:11 -0400, , add gcc,,
414,2ee1bcd9a4b458dab25ad72815fde29ac9054a33,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 13:50:31 -0400, , add gha badge,,
415,1b880dfd5aee33087b357c49c593c46250b42247,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 13:44:10 -0400, , download eigen,,
416,9521bc56a8810a2d336983b1ef3d0ad2cbd7bae5,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 11:47:53 -0400, , drop part travis,,
417,78069057b2dd879a19f1e4121ee25337d64d6f82,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-26 11:43:56 -0400, , trim appveyor,,
418,7b067cc387d10dc98bc55e2a830645131bf6bf0f,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-07-27 02:44:25 +0300,2191, set __hash__ none type defines __eq__ __hash__ 2291 fix 2191,,
419,aab701399a8c9b9a5c9b3826f3b3fa121cbadc13,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-24 11:45:22 -0400, , cache build wheel macos pypy3,,
420,5927c5819f8dd4f6f73ee4e529f455c489a1ba45,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-24 00:26:49 -0400, , chore update catch,,
421,447067179685df99b151ced52998a4f86cbedc73,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-23 23:05:22 -0400, , fix many brace clang 3.6,,
422,1f53c373e44ab80a1a3d9b0dbc6c4e8dd824e9c1,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-23 22:55:29 -0400, , fix mode clang may error,,
423,e428a7f6b89625eb153f5346fe85a656803b92a2,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-23 21:16:54 -0400, , fix clang warning,,
424,6a80171c42cbb13ffaefeb3f6a7ff53be0856e86,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-23 20:30:47 -0400, , add clang build,,
425,7e0a4fb7d0c548231b2dc104054170cb6bebea96,uxmaster5000 <837503+tuxmaster5000@users.noreply.github.com>, 2020-07-24 19:00:48 +0200,2168, fix 2168 2299,,
426,2819ce64a4fcc406822382b9ad70bbe12aec90bf,oris Staletic <boris.staletic@gmail.com>, 2020-07-24 18:43:59 +0200,2028, avoid attr __repr__ 2317 default argument value class instance class a.value.attr __repr__ raise valueerror switching repr a.value make use case work fix 2028,,
427,6f3e5e38c90c69f5758365fb1c3b31c8c5a557bc,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-23 17:21:55 -0400, , keep travis running twice,,
428,5c936d4b22cbe5ed46208c790c635baf03aed4b1,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-21 09:34:20 -0400, , refactor issue fixed upstream,,
429,8b0ccf7657b855e1d4156e39d45b9bb42d433094,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-20 15:07:22 -0400, , style adding pre commit check style.sh,,
430,b16347e51d054789df43d8c66da126d5287d5521,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:24:11 -0400, , enable gha testing add requirement file,,
431,73dc9786832bcaf0ab5f8284929cb67e211fe04f,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:23:48 -0400, , style avoid adding virtual environment directory,,
432,a59c6de821a9131612434914954bf3efca2d467f,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:23:16 -0400, , test allow msvc xcode run embed test,,
433,49007b7ff344ed147a14930f9973a967338811dc,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:20:42 -0400, , test fix warning error python mode,,
434,3d20b73e87a33537318ae96ad607243b1b38ea97,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:19:28 -0400, , test pas std cmake test,,
435,ef057f12b65a48c91def4efe854123618271eb77,enry Schreiner <henryschreineriii@gmail.com>, 2020-07-22 10:18:41 -0400, , test support pypy2 7.3,,
436,134a2ec3f7affc808f8ba19ae5734bb8a47b1c30,kszltl <xkszltl@users.noreply.github.com>, 2020-07-24 01:21:09 +0800,2318, add .git suffix url github work without 2319 fix http github.com pybind pybind11 issue 2318,,
437,441e77704043f1f0944043b56e39d95342e76ac1,oris Staletic <boris.staletic@gmail.com>, 2020-07-23 16:03:55 +0200, , use new style __init__ numpy doc 2316,,
438,96c67636132dc25f87ca59e40cb4d40a965fc137,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-07-22 12:05:16 -0700, , python compatibility 2314 tested 2.7.18rc1 built py_unicode_size change also tested python 3.8,,
439,c4fd1fd9872b731e9df21347a09d094489776801,iam Keegan <liam@keegan.ch>, 2020-07-21 19:17:22 +0200, , cmake improvement support window python msys 2312 look window python lib using mingw msys found look system python lib,,
440,d8c7ee00a687ac369e62e2032514a93a9b413502,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-07-20 13:35:21 -0400, , gha basic format pre commit 2309,,
441,e248869893163b95cffb4a63e899e5d933f3ef20,ota Yamaguchi <yamaguchi_kota@cyberagent.co.jp>, 2020-07-16 00:50:43 +0900, , fix undefined memoryview format 2223 fix undefined memoryview format add missing algorithm header add workaround py27 array compatibility workaround py27 memoryview behavior fix memoryview constructor buffer_info workaround availability py27 fix memoryview test update memoryview test buffer check signedness use static factory method create memoryview remove ndim arg memoryview frombuffer add test allow ndim memoryview documentation fixup use void align frombuffer method signature add const variant frombuffer frommemory add memory view section doc fix doc add test null buffer workaround py27 nullptr behavior test rename frombuffer from_buffer,,
442,aa982e131d723e2e428245847c0bc75693a11569,oris Staletic <boris.staletic@gmail.com>, 2020-07-12 16:45:13 +0200,1599, small fix numpy.h 2293 using py_intptr_t const http github.com numpy numpy blob numpy core src multiarray ctors.h using npy_bool http github.com numpy numpy blob numpy core src multiarray ctors.c l1350 l1355 http docs.scipy.org doc numpy 1.13.0 reference api.dtype.html c.npy_bool offset http github.com numpy numpy blob numpy core code_generators numpy_api.py l141 array_t constructor take size pointer take ssize_t fix 1599,,
443,fe1392d0895e7104aafe60f8bda17cd568d025e5,lorian Apolloner <apollo13@users.noreply.github.com>, 2020-07-12 14:16:19 +0200, , silence clang compiler warning fix 2225 2294,,
444,8b9eb964d904c1dab33ed819497fb997f25e473b,oris Staletic <boris.staletic@gmail.com>, 2020-07-11 17:20:22 +0200, , check null raw_str python3 2290,,
445,b2f52225fa3dd546ea8475eeee397d5c1342a32a,oris Staletic <boris.staletic@gmail.com>, 2020-07-10 16:31:03 +0200,2172, rename embedded_module object name 2282 avoids potential conflict name scope name embedded module like namespaces global variable fix 2172,,
446,964ab956e046d446a9e087de70d914d7a583d1de,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-07-10 16:30:44 +0200, , fix invalid escape sequence tool doc python script 2281,,
447,f980d76d38dda8e9ce78e68e27b4c2026681bf51,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-07-09 00:14:41 +0200, , change namespace_ macro 2283 change namespace_begin namespace_end macro fix sudden homebrew python installed error sweep difference class.__init__ must called overriding __init__ error message cpython pypy rug homebrew updated 3.8 yesterday authored henry schreiner gmail.com,,
448,0d70f0e18eec60786499faba53de4d72583ba2f7,suru Fernando <isuruf@gmail.com>, 2020-07-07 08:58:16 -0500, , pypy3 support 2146 error eval_file enable dynamic attribute support pypy add test dynamic attribute support skip test eval_file pypy workaround __qualname__ pypy3 add pypy3.6 7.3.0 build disable pypy3 fix travis testing numpy scipy pypy enable test pypy2 fix logic eval_file skip test due bug pypy scipy wheel broken make pypy2 failrue authored andreas kloeckner inform tiker.net,,
449,f2226aefe0f679c61e6eaf5d6f315796fc28cebc,obert Haschke <rhaschke@users.noreply.github.com>, 2020-07-07 15:56:07 +0200, , allow perfect forwarding method args 2048,,
450,1b0bf352fa51f07402f998d358565bf141f94c69,ustin Spicuzza <dustin@virtualroadside.com>, 2020-07-07 06:04:06 -0400,2103, throw typeerror subclass forget call __init__ 2152 fix 2103,,
451,d54d6d8c613914a7063897d5ddddc62348ffe74a,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-07-01 01:53:09 +0200, , adding pybind11 cast overload rvalue reference 1260 adding pybind11 cast overload rvalue reference,,
452,fc3a4490b879cce20a7e1b1454f0f7f5a0bc08c6,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-07-01 00:25:17 +0200, , minor clarification antoineprv 2083,,
453,141e8cc0afad1e06904fab36ff4ca5f8b64f44e7,ils Leif Fischer <nils.fischer@aei.mpg.de>, 2020-06-26 12:15:10 +0200, , fix uninitialized variable cmake warning,,
454,3618807dca91f58f3e1b2709f5bb6e0cab441cd2,akahiro Ishikawa <ishikawatt@gmail.com>, 2020-05-04 19:40:42 +0900, , fix python.lib name fails try link pythonxx.lib first letter lowercase,,
455,8908552dfce61cc4d0d428c402b416c28283cb9c,uilherme Dantas <guidanoli@hotmail.com>, 2020-04-27 17:19:17 -0300, , typo,,
456,d031efe78890f673e6ea8d8f2175058881b1e006,in Hsu <linhsu0723@qq.com>, 2020-06-13 23:24:44 +0800, , typo,,
457,714424387fffff17c8c18b6bf377fb3d47577791, Krishna Chaitanya <bkchaitan94@gmail.com>, 2020-06-21 17:23:53 +0530, , refactor extract custom type cast related test,,
458,ae2ee2a4a51914cf78deb5c253a3b03cbb53ce72,oris Staletic <boris.staletic@gmail.com>, 2020-06-15 19:36:43 +0200, , avoid using deprecated api python 3.9 function deprecated removed python 3.11. calling doe nothing gil initialized py_initialize since python 3.7,,
459,f99ff736c27f2209b66ca367b6ebe14c58c771f3,atvlady <fatvlad.95@gmail.com>, 2020-06-29 20:52:35 +0300, , add additional check compliant caster,,
460,8c06b9549255fccb5565578078223c992b061c27,atvlady <fatvlad.95@gmail.com>, 2020-03-14 16:10:14 +0200, , fix compile error gcc4.8,,
461,556277d689f64f2b4910f5ace1ed1cb5a793726c,atvlady <fatvlad.95@gmail.com>, 2020-03-14 15:20:04 +0200, , fix optional dereference type deduction,,
462,a3daf87d45eb5a26c12ec44b7878f81e1dc8b8d5,atvlady <fatvlad.95@gmail.com>, 2020-03-14 15:15:12 +0200, , add failing optional test,,
463,8e85fadff28988f036182cc9345dae124ce7cd17,shley Whetter <ashley@awhetter.co.uk>, 2020-06-27 18:33:20 -0700,2270, render none none docstrings close 2270,,
464,8c0cd94465fbc1dbc34217e5a614edc784f0913e,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-06-18 12:14:59 +0200, , ignore another type visual studio project file,,
465,d96c34516d276f4c33d25df23d5934af1c5b2406,ethylDragon <methylDragon@gmail.com>, 2020-06-16 03:34:45 +0800, , fix doc typo,,
466,e107fc2a054fe3c71bbd8c4ed2539fdb80e9f1b5,suru Fernando <isuruf@gmail.com>, 2020-04-26 14:56:10 +0000, , fix setuptools record header,,
467,ab323e04f3157cfe57c49d6f95fd232190d7032c,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-06-05 21:29:16 +0300, , test iterable iterator representation docstrings,,
468,4f1531c454ada656884c6f69b56050ac9fd18b2a,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-05-15 00:11:39 +0300, , render int_ int docstrings,,
469,90d99b56a00a00cf23568435ae5f44ea0c8c3bf1,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-05-20 12:42:07 +0300, , render pybind11 array numpy.ndarray docstrings,,
470,57070fb0a084e40ceab8a9f80b9e4436a48b9e53,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-05-16 17:28:29 +0300, , render iterator iterable iterator iterable docstrings,,
471,22b2504080d37e035bbf3df88edb7abffb317ce5,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2020-05-14 15:34:48 +0300, , render full numpy numeric name e.g numpy.int32,,
472,63df87fa490d49244b76249854559ec8db22f119,lemens Sielaff <clemenssielaff@users.noreply.github.com>, 2020-06-10 04:35:10 -0700, , add lvalue ref qualified cpp_function constructor 2213 added overload value ref qualified method added test code would failed build,,
473,b524008967daf913deccffaf4e06285e2c4f5923,atthijs van der Burgh <matthijs.vander.burgh@live.nl>, 2020-06-10 13:30:41 +0200, , deepcopy documentation 2242 doc convert note real note doc add information deep copy,,
474,1e14930dfcee467da6a28b44f0f276451935970b,homas KÃ¶ppe <tkoeppe@google.com>, 2020-06-03 13:51:40 +0100, , common.h mark another entry point unused rationale see 2241 second entry point function defined pybind11_module macro also need annotated unused,,
475,c776e9ef937e3286c96f801ce2c4221f245e1bff,imeon Ehrig <s.ehrig@hzdr.de>, 2020-06-03 12:12:51 +0200, , fix compiler error msvc cuda 10.2,,
476,eeb1044818af5b70761deae602c49eba439164dc,homas KÃ¶ppe <tkoeppe@google.com>, 2020-06-03 13:51:40 +0100, , common.h mark entry point unused change defines new portable macro mark declaration unused annotates pybind11_module entry point attribute purpose annotation facilitate dead code detection might otherwise consider module entry point function dead since otherwise used used via ffi,,
477,1817d2116a3b2b9f5239b25b87657a324695fb5a,ndrey Dorozhkin <dorozhkin@speechpro.com>, 2020-06-02 16:43:07 +0300, , disable defining snprintf macro modern visual studio,,
478,4e3d9fea74ed50a042d98f68fa35a3133482289b,ric Cousineau <eric.cousineau@tri.global>, 2020-05-22 00:43:01 -0400, , operator explicitly expose hash self add warning extending stl,,
479,5309573005eddbdcebaffa4f1ef88178d24497e9,ric Cousineau <eric.cousineau@tri.global>, 2020-05-18 15:33:23 -0400, , operator move hash check mutation tweak whitespace,,
480,2c30e0a11867f09ff21292f435fd99e3ab973de9,ric Cousineau <eric.cousineau@tri.global>, 2020-05-31 01:00:55 -0400, , cmake expose 2218 primarily ccmake curse gui,,
481,a3118130c6cf6307bf21fdb7ce9c00a71aec1360,ndrew J. Hesford <48421688+ahesford@users.noreply.github.com>, 2020-05-31 00:59:50 -0400, , pytypes.h fix doc generation 2220,,
482,a38e5331d7b98f99ac4f7284ef3359b327d99241,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2020-05-31 00:29:30 -0400, , fix prepare test python 3.9 beta 2233 test python 3.9 beta pin sphinx newer version pypy,,
483,a54eab92d265337996b8e4b4149d9176c2d428a6,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-04-26 22:53:50 +0200, , revert change __init__ self __new__ reverts commit,,
484,2c4cd8419dd81f0563373150c5c1474bfc308352,ustin Spicuzza <dustin@virtualroadside.com>, 2019-11-24 02:36:48 -0500, , add autowig list binding generator 1990 add autowig list binding generator,,
485,02c83dba0f6efeef536f0bb8c1aac99f603c96b0,icholas Musolino <n.musolino@gmail.com>, 2020-01-26 11:49:32 -0500, , propagate exception sequence size 2076,,
486,805c5862b61204cb2e43911c794d78326e947cb7,annick Jadoul <yannick.jadoul@belgacom.net>, 2020-01-25 23:38:01 +0100, , adding method name cpp_function constructor call enum_base,,
487,a86ac538f59db7af596ee192f42b9f39ec8039ed,ebastian Koslowski <sebastian.koslowski@gmail.com>, 2020-04-14 13:04:25 +0200, , rename args_kw_only kwonly,,
488,be0d804523c01809292f93f0bbf6adbfcf5cd0fa,ason Rhinelander <jason@imaginary.ca>, 2017-12-23 18:56:07 -0400, , support keyword argument add support args_kw_only annotation specified arg annotation indicate following argument keyword allows write m.def int int ... arg args_kw_only arg work like python def ... respect argument accepted positional keyword specified keyword,,
489,03f9e4a8ec10eaab2181da7ec7d629f0dce74c30,eter <peter_jiachen@163.com>, 2020-03-22 12:59:37 +0800, , fix compilation clang,,
490,0dfffcf257f01ddc72488a0408d227591e5f7e67,ustin Spicuzza <dustin@virtualroadside.com>, 2020-04-05 02:34:00 -0400, , add is_final disallow inheritance python currently supported pypy,,
491,b14aeb7cfae1a412f17ab3cb87350d5cd2ad788f,Rocholl <moritz.rocholl@gmail.com>, 2020-04-15 15:37:41 +0200, , fix typo sorted function call argument reverse,,
492,9358e30d2afd580acacf969e58cfc7230cd563a7,Rocholl <moritz.rocholl@gmail.com>, 2020-04-15 15:35:38 +0200, , change set_path set_file,,
493,00c462d1490d95cc9fd8ee5c22376909651319bc,Rocholl <moritz.rocholl@gmail.com>, 2020-04-15 15:00:03 +0200, , find library path libclang.so via glob command usr lib llvm set,,
494,9ed8b44033e64f2990bf123b5057e92b8142edae,rell Garten <10799869+orgarten@users.noreply.github.com>, 2020-04-21 15:02:55 +0200, , change __init__ self __new__ __init__ self return value according http question 2491819 return value init python __new__ used work,,
495,5088364b967d3cf57e99d7d352b8a52230788b0c,avid Stone <david.stone@uber.com>, 2020-04-23 12:47:24 -0600, , declare operator operator member function const,,
496,6ebfc4b2b09036eec6a2caeb55d2801ae2df361f,xel Huebl <axel.huebl@plasma.ninja>, 2020-04-25 18:10:53 -0700, , document variable cmake community standard set standard build document favor previous variable stay legacy flag existing project http cmake.org cmake help v3.17 variable,,
497,d730fbc0d54a3c3a7655cabe0d4f091f122b4998,huck Atkins <chuck.atkins@kitware.com>, 2018-06-12 13:18:48 -0400, , utilize cmake language standard abstraction possible,,
498,f6e543b15ec0aaf39c494936440f91a16f161c9a,alf W. Grosse-Kunstleve <rwgk@google.com>, 2020-01-16 00:20:44 +0000, , adding default virtual destructor animal type change cast.h master fails compile error message cast.h change pull 2016 building testing succeeds pybind11 build test usr bin ipybind11 include usr include python3.7m isystem usr include eigen3 dndebug fpic fvisibility hidden std flto fno fat lto object wall wextra wconversion wcast qual wdeprecated cmakefiles pybind11 test file included pybind11 include pybind11 attr.h pybind11 include pybind11 pybind11.h pybind11 test pybind11 test pybind11 include pybind11 cast.h instantiation static std pair const void const pybind11 detail type_info pybind11 detail type src_and_type const itype type animal pybind11 detail type itype animal pybind11 include pybind11 cast.h 906 required static pybind11 handle pybind11 detail type cast_holder const itype const void type animal pybind11 detail type itype animal pybind11 include pybind11 cast.h 1566 required static pybind11 handle pybind11 detail type holder_type cast holder_type pybind11 pybind11 handle type animal holder_type std unique_ptr animal pybind11 include pybind11 stl.h 175 required static pybind11 handle pybind11 detail list_caster type value cast pybind11 pybind11 handle std vector std unique_ptr animal type std vector std unique_ptr animal value std unique_ptr animal pybind11 include pybind11 pybind11.h 159 required void pybind11 cpp_function initialize func return args ... const extra ... func std vector std unique_ptr animal return std vector std unique_ptr animal args extra pybind11 name pybind11 scope pybind11 sibling pybind11 include pybind11 pybind11.h required pybind11 cpp_function cpp_function return args ... const extra ... return std vector std unique_ptr animal args extra pybind11 name pybind11 scope pybind11 sibling pybind11 include pybind11 pybind11.h 819 required pybind11 module pybind11 module def const char func const extra ... func std vector std unique_ptr animal extra pybind11 test 141 required pybind11 include pybind11 cast.h 880 error ambiguous template instantiation struct pybind11 animal void const void vsrc itype get src instance_type  pybind11 include pybind11 cast.h 844 note candidate template class itype struct pybind11 itype typename std enable_if std is_polymorphic _tp value void type itype animal struct itype detail enable_if_t std is_polymorphic itype value  pybind11 test 115 note template class itype struct pybind11 itype typename std enable_if std is_base_of animal itype value void type itype animal struct itype detail enable_if_t std is_base_of animal itype value  file included pybind11 include pybind11 attr.h pybind11 include pybind11 pybind11.h pybind11 test pybind11 test pybind11 include pybind11 cast.h 880 error incomplete type pybind11 animal void used nested name specifier const void vsrc itype get src instance_type ,,
499,4697149d19738a674ab59b08492becfcf69a87f8,alf W. Grosse-Kunstleve <rwgk@google.com>, 2019-12-04 15:03:22 -0800, , allows user specialize std enable_if currently user specialization form template typename itype struct itype std enable_if_t ... ... fail itype also polymorphic existing specialization also enabled lead equally viable candidate change user provided specialization higher priority built specialization polymorphic type,,
500,023487164915c5b62e16a9b4e0b37cb01cd5500a,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-03-31 13:09:41 +0200, , begin working next version,,
501,3b1dbebabc801c9cf6f0953a4c20b904d444f879,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-03-31 12:55:48 +0200, , v2.5.0 release,,
502,bb9c91cce826122a3d7361d8fb9217831a07c4c6,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-03-04 16:17:20 +0100, , search python 3.9,,
503,4f72ef846fe8453596230ac285eeaa0ce3278bb4,aljak <baljci@hotmail.com>, 2020-01-22 11:49:56 +0100, , fix use msvc msys environment 2087,,
504,e97c735fc44bd39b390a321a276f41b3095ea2fe,wjavox <fw@javox-solutions.com>, 2020-01-17 01:16:56 +0100, , stl_bind add binding std vector clear 2074,,
505,07e225932235ccb0db5271b0874d00f086f28423,aljak <baljci@hotmail.com>, 2020-01-05 15:49:59 +0100, , fix compilation mingw 2053,,
506,370a2ae2b364cc91792ecf2a343b14fca5d488ad,obert Haschke <rhaschke@users.noreply.github.com>, 2020-01-05 15:49:24 +0100, , declare call_impl 2057,,
507,bf2b031449c8c8156443655a80bdaf41433b2534,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-01-02 22:18:01 +0100, , handle case binding code immediately throw binding code immediately throw exception type e.g via module import fails catch block set import error expected unfortunately following deconstructor decides call detail get_internals set various internal data structure pybind11 fails given error flag active call stack look follows   detail get_internals ... pybind11 detail solution simple call detail get_internals running binding code make sure internal data structure ready,,
508,4c206e8c79bcbd3784fd05491b3c139e8fadaa4e,enzel Jakob <wenzel.jakob@epfl.ch>, 2020-01-02 22:17:20 +0100, , binding import_error exception,,
509,2fda9d5dd876de2fc0c530e4a375b1f8c52e6758,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-12-31 01:26:40 +0100, , travis fix macos py3,,
510,f9f3bd711f266c435fa7cd8198e5696e3fb37eef,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-12-30 01:26:32 +0100, , use fold expression casting tuples argument list 2043 commit introduces use style fold expression casting tuples argument list function change improve performance resulting binding fold expression short circuiting semantics pybind11 e.g try cast second argument function first one failed particularly effective working function many overload long argument list,,
511,6e39b765b2333cd191001f22fe57ea218bd6ccf2,emund Handeland <vehandel@online.no>, 2019-12-19 12:16:24 +0100, , add char8_t u8string support 2026 fix test build add char8_t u8string support,,
512,37d04abdee11403e98bc5c09e386dd49d58a58bd,Gamache-autodesk <56274617+JGamache-autodesk@users.noreply.github.com>, 2019-12-19 06:15:42 -0500, , fix 1295 handle debug interpreter 2025 debug interpreter detected allow linking pythonxx_d.lib window,,
513,b4e5d582cb656a590b256bcf4a8ffa7c8ce9ba19,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-12-13 11:11:33 +0100, , undo define copysign pyconfig.h,,
514,1376eb0e518ff2b7b412c84a907dd1cd3f7f2dcd,oris Staletic <boris.staletic@gmail.com>, 2019-12-12 15:55:54 +0100, , free tstate python 3.7 2020,,
515,fb910ae92b4a489e9b31f9ec545bde9d09d6a40e,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-12-11 21:26:46 +0100, , revert fix memory leak creating python3 module 2019 reverts commit,,
516,819802da9926535714acf2bffe690b04f90cb12b,ils Berg <berg.nils@gmail.com>, 2019-12-11 15:01:45 +0000, , fix memory leak creating python3 module 2019,,
517,dc9006db4f97d9b73cb919b2db691c0fe56bcdb4,oris Staletic <boris.staletic@gmail.com>, 2019-12-11 12:05:01 +0100, , use newer macos image python3 testing,,
518,fe2a06e339ac8d10eb0b23dc8d77afbf08044667,oris Staletic <boris.staletic@gmail.com>, 2019-12-11 12:04:35 +0100, , pin breathe 4.13.1,,
519,37352491225358b97ce302273bf2d887a477efb0,suru Fernando <isuruf@gmail.com>, 2019-11-28 01:59:23 -0600, , install header using header package_data 1995,,
520,a60648223d409c51804be63a097eeaae383e8a7c,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-11-28 08:07:32 +0100, , revert numpy.h minor preprocessor fix suggested chaekwan reverts commit,,
521,61e4f1182357cc0f55b567b128011c579e4c7ccd,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-11-28 07:42:34 +0100, , numpy.h minor preprocessor fix suggested chaekwan,,
522,baf69345f6f252302ca5378a4568f33be178b8a8,ric Cousineau <eacousineau@gmail.com>, 2019-11-25 09:14:06 -0500, , minor modification interrupt handling faq 2007,,
523,0f1d3bfee2b5a7e52643fbaa46268c73ebb0497a,harles Brossollet <chbrossotaf@gmail.com>, 2019-11-25 10:59:53 +0100, , add faq entry dealing long function interruption 2000 add faq entry code example dealing long function interruption,,
524,dc65d661718ed10a9d212f1949813f7a7acf9437,ebastian Koslowski <sebastian.koslowski@gmail.com>, 2019-11-24 08:33:05 +0100, , support readonly buffer 863 1466,,
525,bd24155b8bf798f9f7022b39acd6d92e52d642d6,rancesco Biscani <bluescarni@gmail.com>, 2019-11-16 01:18:24 +0100, , aligned allocation fix clang 1988,,
526,deb3cb238a9f299d7c57f810165e90a1b14b3e6f,rancesco Biscani <bluescarni@gmail.com>, 2019-11-14 08:56:58 +0100, , add exception translation std overflow_error 1977,,
527,55ff464233a189a085f1f7b1f7969b2f4fbc344b,annick Jadoul <yannick.jadoul@belgacom.net>, 2019-11-14 08:55:34 +0100, , fixing systemerror nb_bool nb_nonzero set python exception type_caster bool load 1976,,
528,b32b762c60c0325fe5b3577de3061ba3ed893605,rick Matsen <ematsen@gmail.com>, 2019-11-13 23:53:30 -0800, , fixing minor typo basics.rst 1984,,
529,6f11347a3077fd859153967bcea4b82a418beb1b,atthew Dawkins <matthew.d.dawkins@gmail.com>, 2019-11-14 02:53:06 -0500, , prevent cmake error prefix empty 1986,,
530,a6355b00f84d997a9ddcf209b6464447432be78a,xel Huebl <axel.huebl@plasma.ninja>, 2019-10-31 04:40:15 -0700, , cmake add python 3.8 pybind11tools 1974 add python 3.8 considered version cmake additional hint http cmake.org cmake help v3.2 module,,
531,a83d69e78ffe58bbd410aa7503384a312e08963b,ebastian GsÃ¤nger <8004308+sgsaenger@users.noreply.github.com>, 2019-10-31 12:38:24 +0100, , test pair copyability upwards 1886 test pair copyability upwards stdlib falsely detects container like std map copyable even one copyable therefore rely stdlib dismissing std pair even fix bind_map used std suffers problem std therefore fix applied created test copyability,,
532,bdf6a5e8708abe87d42e0e4c8bef51db0f0957ff,ans Dembinski <HDembinski@users.noreply.github.com>, 2019-10-23 12:19:58 +0100, , report type name return value policy related cast exception 1965,,
533,c27a6e1378e6e3e438ed3542246db470fea35fa7,ans Dembinski <HDembinski@users.noreply.github.com>, 2019-10-22 16:19:15 +0100, , make build python test cpp test fail either one fails 1967,,
534,759221f5c56939f59d8f342a41f8e2d2cacbc8cf,eremy Nimmer <jeremy.nimmer@tri.global>, 2019-06-14 12:12:51 -0400, , obey assume language version standard library offer feature using clang 6.0 std ubuntu 18.04 libstdc false,,
535,6c29cbf88de0df177ec730fc4c85e52bdf8d82c0,iccardo Bertossa <33728857+rikigigi@users.noreply.github.com>, 2019-10-18 17:55:17 +0200, , misleading comment corrected stride buffer_info byte number entry 1958,,
536,de5a29c0d4ad15271c172cf5dd60c7fd33febb80,icolov <nicolov@users.noreply.github.com>, 2019-10-17 10:43:33 +0200, , fix build wmissing prototype 1954 building werror wmissing prototype clang complains missing prototype function defined macro expansion add missing prototype  error previous prototype function werror wmissing prototype embedded mod  external pybind11 include pybind11 embed.h note expanded macro name  external pybind11 include pybind11 embed.h note expanded macro extern void name  scratch space 380 note expanded   error generated ,,
537,dfde1554ea3c9d43a914b868b46d3ddf3e3c6274,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-10-15 01:58:43 +0200, , begin working next version,,
538,80d452484c5409444b0ec19383faa84bb7a4d351,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-10-15 01:57:24 +0200, , v2.4.3 release,,
539,6cb584e9de6e8d54f5576c299a308f89bfdcb519,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2019-10-08 19:25:09 +0300,1946, adapt python3.8 api change 1950 adapt python3.8 api change py_decref type python object deallocation fix 1946 add bare python3.8 build matrix numpy scipy wheel available run python3.8 test without,,
540,96be2c154f296da7ca8d5d7159773970622d0c77,oris Dalstein <dalboris@gmail.com>, 2019-10-06 23:23:10 +0200, , fix version mismatch typo .travis.yml 1948,,
541,34c2281e315c51f5270321101dc733c1cf26214f,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-21 20:23:01 +0200, , begin working next version,,
542,2abd7e1eb48ce8549b936a3e19581ce82256a20f,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-21 20:22:33 +0200, , updated release.rst remove part automated,,
543,7ec2ddfc95f65d1e986d359466a6c254aa514ef3,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-21 20:19:58 +0200, , v2.4.2 release,,
544,7f5dad7d5fba3fb6fccef966f7cde5ca24509473,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-21 18:54:10 +0200, , remove usage construct fix 1929,,
545,f3109d8419b3ed56cf9795f6343ab08b0c27746a,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-21 18:09:35 +0200, , future proof python version check commit 31680e6 lgritz,,
546,82cf7935883020b7fd89f0ff9f8b8ad2c1d924f8,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-20 11:12:22 +0200, , begin working next version,,
547,e44fcc3c15b41f0720c72832c0b9cd07de819781,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-20 11:10:49 +0200, , v2.4.1 release,,
548,31680e6f9c1bbe582bc36d457f8e010121ff16bb,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-20 11:06:10 +0200, , implicit conversion enum int python 3.8 fix sizmailov,,
549,5fd187ebe92b3fbd3e467a08c194dc254a1edd74,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-20 10:49:52 +0200, , minor changelog cleanup skip,,
550,21d0eb460f3d6932cbf9544d636d22080bf386b6,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-20 09:38:30 +0200, , fix python 3.8 test regression,,
551,e825205ac6995dad6f548217838a0e7544c98e2c,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-19 23:18:04 +0200, , begin working v2.4.1,,
552,00a0aa992953d6482114a0f539a21bb535a16383,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-19 23:06:22 +0200, , v2.4.0 release,,
553,6ca312b3bcdccdd55321dcf7111a50cad37a6c99,amuel Debionne <samuel.debionne@esrf.fr>, 2019-09-19 21:23:03 +0200, , avoid infinite recursion 1910,,
554,c9f5a464bc8ebe91dee8578b2b4a23d9997ffefe,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-09-19 21:07:17 +0200, , pybind11 internals separate different compiler,,
555,09f082940113661256310e3f4811aa7261a9fa05,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2019-09-19 19:23:27 +0300, , avoid conversion int_ argument enum 1912 fix avoid conversion int_ argument enum test compare unscoped enum string suppress comparison none warning test unscoped enum arithmetic comparision unsupported type,,
556,f6c4c1047a293ea77223c21f84f888e062212d78,ori A. Burns <lori.burns@gmail.com>, 2019-09-04 16:16:21 -0400,1907, restores __invert__ arithmetic enabled enum fix 1907 1909,,
557,5b4751af269afab9a2e40a92b486bd29214f352b,tephen Larew <slarew@users.noreply.github.com>, 2019-08-27 08:05:47 -0700, , add const buffer request 1890,,
558,8f5a8ab4ac693efc9610aba1e3bb1f5e0d711533,mitry <sv.l1@mail.ru>, 2019-08-23 17:18:05 +0300, , strip debug symbol relwithdebinfo mode 1892,,
559,12e8774bc9aa4603136f2979088619b495850ca2,ingofpayne <43875454+kingofpayne@users.noreply.github.com>, 2019-08-19 23:00:36 +0200, , added support list insertion 1888,,
560,19189b4c2c7f205ae16fe9d0df121b47f142f54a,ndre SchmeiÃer <schmeisser@users.noreply.github.com>, 2019-08-19 12:54:33 +0200, , make available mode 1581 make available mode narrow scope defined pybind11_cpp14 block around overload_cast cover part stricly required thus implementation pybind11 detail still available mode 1581 modify test use update doc change log,,
561,04c8f4b56e59704558755865a5f4c2f0a94e5c96,ladimÃ­r VondruÅ¡ <mosra@centrum.cz>, 2019-08-19 12:48:03 +0200, , expose buffererror among pybind11 exception 1852,,
562,87fa6a4342c5a1e8483eb6dd37bc9ed72eceebf4,amuel Debionne <samuel.debionne@gmail.com>, 2019-08-19 12:43:33 +0200, , detect whether running conda environment adjust get_include 1877,,
563,046267c6297173fb59edfae2f1484710b4be5771,ergei Lebedev <185856+superbobry@users.noreply.github.com>, 2019-08-16 14:43:08 -0700, , added .empty collection type 1887,,
564,08b0bda4bc68dd3f1c57393ed008177e58fc909d,ergei Lebedev <185856+superbobry@users.noreply.github.com>, 2019-08-16 12:32:27 -0700, , added set contains generalized dict contains 1884 dynamically resolving __contains__ call wasteful since set public pyset_contains function,,
565,5b0ea77c62ed77ed9f641f7284865a391dc2acab,ladimÃ­r VondruÅ¡ <mosra@centrum.cz>, 2019-08-16 08:52:13 +0200, , fix wmissing prototype warning clang 1863 wmissing prototype clang warning wmissing declaration gcc useful avoid accident function definition source file match corresponding declaration header file would warn already compilation much later link time unfortunately mean exported function defined source file usually one annotated extern cause warning emitted clang gcc slightly different behavior wmissing declaration warn fix warning providing declaration right definition,,
566,5ef13eb680069680c41e89265d4f1105bd501846,li-beep <54114435+ali-beep@users.noreply.github.com>, 2019-08-15 13:41:12 -0400, , add negative indexing support stl_bind 1882,,
567,b2fdfd122827c1170c75702c05a4040997cf3bf5,orja Zarco <bzarco@google.com>, 2019-08-15 07:42:43 -0400, , avoid use lambda work around clang bug 1883 clang bug x86 window exposed use lambda unforwardable prototype error error compile forwarded non trivially copyable parameter yet message introduced used assertion http llvm.org bug show_bug.cgi 28299 http github.com microsoft checkedc clang commit,,
568,bdf1a2cc34815c2f9ee9a5f3b5b05bfadd28dd35,aran Tunyasuvunakool <stun@google.com>, 2019-08-13 21:00:47 +0100, , internals.h look _debug compiling msvc 1855 internals.h look _debug compiling msvc _debug msvc specific macro,,
569,640b8fe6d96b3e1498520c7c57d6b41f55ee3bc6,hristoph Kahl <26385576+kanonet@users.noreply.github.com>, 2019-08-13 21:41:53 +0200,1406, fix 1406 add mingw compatibility 1851,,
570,c9d32a81f40ad540015814edf13b29980c63e39c,auli Virtanen <pav@iki.fi>, 2019-07-27 09:35:32 +0000, , numpy fix refcount leak dtype singleton 1860 return new reference borrowed one,,
571,4a3464fd88ae8666a670a17b99035beea6b464a8,ric Cousineau <eric.cousineau@tri.global>, 2018-12-01 07:31:44 -0500, , numpy provide concrete size alias test dtype check succeed without warning,,
572,e9ca89f453cf81bea9a73b976c6a2fa59a6b1fe2,ric Cousineau <eric.cousineau@tri.global>, 2018-03-20 16:55:29 -0400, , numpy add test explicit dtype check present int64 uint64 exactly match dtype ... .num,,
573,c6b699d9c2d71d09359b6785cc3d7c50fac0c847,hil-zxx <32247590+phil-zxx@users.noreply.github.com>, 2019-07-19 10:28:48 +0100, , added ability convert datetime.date system_clock time_point 1848 added ability convert python datetime.date datetime.time system_clock time_point,,
574,a3f4a0e8ab38f6b67174a162a5f0324e900a9c6b,eremy Maitin-Shepard <jeremy@jeremyms.com>, 2019-07-18 00:02:35 -0700, , add support __await__ __aiter__ __anext__ protocol 1842,,
575,9b3fb05326d49bbe2849744d8375dfb2406e8865,athan <n8nyoung@gmail.com>, 2019-07-18 01:01:50 -0600, , allow windows.h min max coexist pybind11 1847 protect std min max function windows.h min max removed check window min max,,
576,b2c4ff6052c4bb91c087f565cad534be38410655,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-07-15 17:29:13 +0200, , renamed local avoid ambiguity,,
577,b60fd233fa423ff56579513efd90820509efb2cc,aran Tunyasuvunakool <stun@google.com>, 2019-07-15 15:47:02 +0100,1364, make sure detail get_internals acquires gil making python call 1836 necessary get_internals called first time given module running thread gil released state fix 1364,,
578,dffe869dba4a305ec1d822aea8b21ff406fb8513,homas Peters <thomas.d.peters@gmail.com>, 2019-07-15 10:16:14 -0400, , quiet clang warning adding default move ctor 1821,,
579,a301c5add866fe91bf3b91df3d8034c124858a5e,gor Socec <igorsocec@gmail.com>, 2019-07-15 12:31:03 +0100, , dtype field ordering numpy 1.14 1837 test dtype field order numpy dtype test running test numpy 1.14 later test expose invalid buffer descriptor error reported 1274 create dtype_ptr ordered field,,
580,74d335a53580477bad8b5a1bea2db14b5788ce02,oru Niina <niina.toru.68u@gmail.com>, 2019-07-10 17:13:56 +0900, , replace usage language feature code 1833,,
581,9fd4712121fdbb6202a35be4c788525e6c8ab826,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-07-06 16:57:17 +0200, , fix test suite pytest change exceptioninfo class,,
582,8b90b1da625f7e96ce9164db55b97a48e039b730,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-07-06 14:52:32 +0200, , acquire gil one line earlier fix 1779,,
583,502ffe50a9f22c04637bbc8ec0019488458ba948,an Bell <ian.h.bell@gmail.com>, 2019-06-22 04:07:41 -0600, , add doc test unary class 1814,,
584,a1b71df137e015d44f7e31f7b6d4807253fb7871,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-19 10:48:36 +0200,1804, fix issue 1804 warning redefined macro,,
585,b3bf248eec9cad8260753c982e1ae6cb72fff470,lexander Gagarin <unientity@gmail.com>, 2019-06-13 12:17:10 +0500, , fix casting time point non system clock duration 1748 fix casting time point non system clock duration window add explicit time_point_cast time point duration system clock fix visual studio compile error add test case custom time point casting,,
586,ed39c50458738794a77bd2a43a3564aaead0f191,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-12 21:10:37 +0200, , readme.md added several folk made repeated contribution,,
587,64f2a5f8e699736f528b6eb3fa143492b65da93a,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-12 21:03:40 +0200, , begin work v2.3.1,,
588,cf36e3d9baa7c771115edae1b16353793eecf1ac,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-11 22:03:10 +0200, , updated changelog,,
589,51ca6b08327810c0edfc70c0c1a3cc074dc39b5f,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-11 22:47:37 +0200, , update doc std out_of_range exception mapping 1254,,
590,e11e71d85cb9ff39b93651530c58f8256fcaa576,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-06-11 22:42:30 +0200, , make compiler flag werror specific gnu clang intel,,
591,21c3911bd3eef2d763783ff2122d0fddb9958c01,izmailov <sergei.a.izmailov@gmail.com>, 2018-05-11 21:30:15 +0300, , add signed overload slice compute,,
592,22859bb8fc1a7f106182e142dcb8b5aed6a7a879,hris Rusby <chris.rusby@googlemail.com>, 2018-08-22 22:38:27 +0100, , support natural syntax vector extend,,
593,1aa8dd17451108871ade6b1ea86d6bcea9d3215a,oland Dreier <roland@purestorage.com>, 2019-06-11 13:25:12 -0700, , fix assertion failure union 1685 1709 def_readonly def_readwrite assertion member come class base class static_assert std is_base_of type value ... however type type is_base_of still true _non union_ type mean define accessors member union type assertion update assertion test std is_same type value std is_base_of type value allow union type member base class also add basic unit test accessing union,,
594,0071a3feb091ee0a1ede2010922ef825c7d08fff,lexander Gagarin <unientity@gmail.com>, 2019-06-12 01:23:08 +0500, , fix async python functors invoking multiple thread 1587 1595 fix async python functors invoking multiple thread 1587 ensure gil held functor destruction add async python callback test run separate python thread,,
595,047ce8c452087809f5ab10d7a2ea58c8709a8da3,enry Schreiner <henry.fredrick.schreiner@cern.ch>, 2019-06-11 16:17:50 -0400, , fix iostream used nogil 1368,,
596,95f750a87d82ad6b996ceae27e68737472ff4809,mar Awile <omar.awile@epfl.ch>, 2019-06-11 22:11:38 +0200, , add optional buffer size pythonbuf d_buffer constructor 1687 case user pythonbuf need allocate internal buffer specific size e.g performance enable synchronous writes buffer changing pythonbuf d_buffer dynamically allocated enable use case still providing default behavior allocating 1024 byte internal buffer default parameter,,
597,38f408fccd358e4322238f5aada3b3af22f5f388,xel Huebl <axel.huebl@plasma.ninja>, 2019-06-11 22:09:56 +0200, , uninit member 1660 fix uninitialized member constructurs found coverity downstream project,,
598,868d94fcb4769ad3a5d826c9f5483376433da8a5,ori A. Burns <lori.burns@gmail.com>, 2019-06-11 16:05:00 -0400, , apply standard flag file cxx language 1678,,
599,77ef03d5b136891fec8878bf8c6e7442ce75e903,eff VanOss <vanossj@users.noreply.github.com>, 2019-06-11 08:25:35 -0400, , compile time check property arg value 1524,,
600,000aabb2a715fcea1a9857d244321bdbc2847d82,xel Huebl <axel.huebl@plasma.ninja>, 2019-06-11 14:00:05 +0200, , test numpy scalar creation 1530 found numpy array test already contained empty shaped array test none data following pep 3118 scalar empty shape ndim work already also documented covered test,,
601,41f29ccd9e5c3bb0a61236212dd448a01ac8e649,an <github@drmoose.net>, 2019-05-23 08:39:18 -0400, , parse command line args separate function,,
602,e0b8bbbce965e4d9ca6c364a1289150477411d54,an <github@drmoose.net>, 2019-05-15 21:14:44 -0400, , use file local constant non prefixing node,,
603,2c8c5c4ed395acc3b39fdbc16a59ffe8b7c7a138,an <github@drmoose.net>, 2019-05-15 21:04:02 -0400, , split seperate function easier invocation python,,
604,590e7acedf7965461b558228929d6f544aab29fc,an <github@drmoose.net>, 2019-05-15 20:53:35 -0400, , avoid storing global state,,
605,a163f8813e90d763e651c0d20239c55630321b73,an <github@drmoose.net>, 2019-05-15 20:50:23 -0400, , delete partially written file event error,,
606,ede328a784f657b97968a6228c8d3cae79619eb3,an <github@drmoose.net>, 2019-05-15 20:42:47 -0400, , allow writing output file instead stdout,,
607,a33212df1f9b35946ed66ddf479af8338f48b495,an <github@drmoose.net>, 2019-05-15 20:37:18 -0400, , wrap main functionality mkdoc function,,
608,b46bb64d39d11522472b8f3ddbeac2c7105794c7,an <github@drmoose.net>, 2019-05-15 20:31:51 -0400, , allow user override default value std,,
609,4612db54ace3215ab5a2d6bfa8169191866c8171,an <github@drmoose.net>, 2019-05-15 20:06:08 -0400, , try autodetect location clang standard library linux usr include belongs gcc standard library work clang usr lib clang 8.0.0 variation thereof result error  lib64 gcc x86_64 linux gnu 8.3.0 include 8.3.0 bit fatal error stddef.h file found  extraction,,
610,a175b21e4b3b8f0032d30dbf78f33435f1273cd8,an <github@drmoose.net>, 2019-05-15 17:58:50 -0400, , avoid decoding already decoded string cindex recent version clang.cindex include code convert internal byte string python str http github.com llvm mirror clang blob master binding python clang cindex.py l72,,
611,d23c821b209c370b917b78186c613d9a40174b08,annick Jadoul <yannick.jadoul@belgacom.net>, 2019-06-11 10:59:57 +0200, , make static member function added def_static staticmethod descriptor instance 1732,,
612,7a24bcf1f67dd5f76c15ee85f1841a38d477a96d,oland Dreier <roland.dreier@gmail.com>, 2019-06-11 01:57:49 -0700, , fix malformed rest 1802 commit 2b045757b560 improve documentation related inheritance 1676 left hyperlink break travis build,,
613,a2cdd0b91520bd3bd6ce67fceb311b51cbb1ecc7,xel Huebl <axel.huebl@plasma.ninja>, 2019-06-10 22:19:41 +0200, , dict_readonly member init 1661 fix missing member initialization pytypes read dict found coverity downstream project,,
614,1c627c9ec0545640497c18b3a75deb6349b53a58,xel Huebl <axel.huebl@plasma.ninja>, 2019-06-10 22:18:11 +0200, , useless safe nullptr check 1664 alternative implementation 1657 know obj never nullptr nullptr check already dereferencing http github.com pybind pybind11 pull 1657 issuecomment 452090058,,
615,f93cd0aa72410e9acea0614bd75a11ebb88a5c32,effrey Quesnelle <jquesnelle@gmail.com>, 2019-06-10 16:13:35 -0400, , use macro argument value python 3.7 1683,,
616,2b045757b5606eb55758cefb0453a7036f052866,vor Wanders <iwanders@users.noreply.github.com>, 2019-06-10 16:12:28 -0400, , improve documentation related inheritance 1676 add section reference add section advanced class page describing use get_overload,,
617,492da592c2b3ada67574ab8b60105754cdb4f13d,anuel Schneider <manuelschneid3r@gmail.com>, 2019-06-10 22:02:58 +0200, , another typo 1675,,
618,9424d5d27731e3c7333e7295b545ee8722054c73,xel Huebl <axel.huebl@plasma.ninja>, 2019-06-10 22:02:40 +0200, , type_record uninit member 1658 fix uninitialized member type_record found coverity downstream project,,
619,69dc380c0dcb3ee057165844f270c48a1b98c625,Ã¶rg Kreuzberger <joerg@kreuzberger.eu>, 2019-06-10 22:00:55 +0200,1208, 1208 handle forced unwind exception e.g pthread termination 1208 bugfix thread kill wihile running pybind11 module 1208 bugfix missing space catch,,
620,09330b94ea1e9893d443b5fb42018cb2bf5ff9aa,arius Arnold <mail@dariusarnold.de>, 2019-06-10 21:57:00 +0200, , fix typo documentation 1635 always capitalize eigen fix spelling,,
621,21bf16f5b852ea2d92446dcb549b9b3fcdd4c2d1,uzpaz <luzpaz@users.noreply.github.com>, 2019-06-10 12:56:38 -0700, , misc comment typo 1629,,
622,ac6cb91a343c388669308ece8e98940b9a00c28c,mar Awile <omar.awile@gmail.com>, 2019-06-10 21:56:17 +0200, , fixed small typo 1633 think particular method binding done instead,,
623,4ddf7c402d3f460cda8370a7aff920adeefab06c,teven Johnson <srj@google.com>, 2019-06-10 12:54:56 -0700, , add missing includes better bazel compatibility 1255 bazel strict build model requires header file compilable thus must explicitly include header require even facto header inclusion order mean get free add couple header needed missing model,,
624,979d75de23a759e134639934a980231acf685448,ergei Izmailov <sergei.a.izmailov@gmail.com>, 2019-06-10 22:03:17 +0300, , doc add note casting none 1760 doc add note casting none doc reword none pointer note message doc mention opaque type none pointer note message,,
625,30c035234830c7fdb36841067e9f9ecb50c016b3,lake Thompson <blake@mapbox.com>, 2019-06-10 14:01:11 -0500, , added __contains__ stl binding map 1767 added __contains__ stl binding map,,
626,c251434011959433e254d1b845543b441fccc9b7,stelzen <nickstelzenmuller@gmail.com>, 2019-06-10 16:35:36 +0200, , added note documentation regarding make install 1801 added note regarding make install,,
627,97784dad3e518ccb415d5db57ff9b933495d9024,annick Jadoul <yannick.jadoul@belgacom.net>, 2019-05-12 23:35:49 +0200, , bugfix fixing pybind11 also work exception subclass 1715 fixing order argument call pybind11 added test match fix exception base class,,
628,a0b8f70df4f6dfcf522164e10fa99e1c7afb3f47,amie Snape <jamiesnape@users.noreply.github.com>, 2019-05-12 13:43:44 -0400, , ensure set module 1373 since module named set appropriately,,
629,b3f0b4de663e31e2eeb5fbe76cd31d07cc2dd803,oris Staletic <boris.staletic@gmail.com>, 2019-05-12 17:27:23 +0000, , new sphinx 1786,,
630,35045eeef8969b7b446c64b192502ac1cbf7c451,artinRenou <martin.renou@gmail.com>, 2019-05-03 14:32:28 +0200, , add getters exception type value traceback 1641,,
631,9bb3313162c0b856125e481ceece9d8faa567716,enry Schreiner <henryschreineriii@utexas.edu>, 2019-04-07 10:38:10 +0200, , fixing warning conversion gcc 1753,,
632,73b840dc3420252181efa46cb609a5afba4e231f,enry Schreiner <henryschreineriii@utexas.edu>, 2019-04-07 10:37:21 +0200, , fix issue latest conda 1757,,
633,ae951ca085f6a3a12958467b60ad0162eec7f72f,enry Schreiner <henryschreineriii@utexas.edu>, 2019-04-06 19:09:39 +0200, , fix 1744 fix warning including cmake source build dir fatal error newest cmakes fix appveyor travis cmake 3.9 year travis dropped sudo false december dropping sphinx clang7 suppress self assign warning fix missing virtual dtors pypy keep old version newer stuff break pin package extra index speed travis make docker explicit remove docker needed make command verbose debugging repro make ubuntu dist explicit per job fix window add name travis,,
634,25abf7efba0b2990f5a6dfb0a31bc65c0f2f4d17,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-02-04 17:09:47 +0100, , flake8 fix,,
635,ccbe68b084806dece5863437a7dc93de20bd9b15,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-02-04 16:19:36 +0100, , added binding delattr analogous hasattr,,
636,d1f64fa920806801954e4d8d85674db8a7a810b3,enzel Jakob <wenzel.jakob@epfl.ch>, 2019-02-04 16:18:01 +0100, , appveyor quench pip deprecation warning v2.7,,
637,43a39bc7d8f3b1f4e8b319b77ecab8d34584f4a9,uilhem Saurel <guilhem.saurel@gmail.com>, 2019-01-23 15:13:59 +0100, , ignore numpy.ufunc size warning,,
638,e7ef34f23f194cfa40bdbf967c6d34712261a4ee,uilhem Saurel <guilhem.saurel@gmail.com>, 2019-01-23 14:22:39 +0100,1670, compatibility pytest 4.0 fix 1670 http docs.pytest.org latest pytest namespace,,
639,085a29436a8c472caaaf7157aa644b571079bcaa,annick Jadoul <yannick.jadoul@belgacom.net>, 2019-01-03 19:41:10 +0100, , increasing timeout get appveyor succeed,,
640,0ca6867e8e233b64de24d5a01ab854702a1dbf66,oris Staletic <boris.staletic@gmail.com>, 2019-01-03 12:02:39 +0100, , avoid visual studio 2017 15.9.4 ice,,
641,f4b4e2e957985eb2b906286943c0e568499249ff,oris Staletic <boris.staletic@gmail.com>, 2019-01-03 12:01:34 +0100, , use new doxygen archive url fix travis,,
642,e2b884c33bcde70b2ea562ffa52dd7ebee276d50,orja Zarco <borja@bzarco.com>, 2018-12-01 08:47:40 -0500, , use using 1211 avoids gil deadlocking pybind11 try acquire gil thread already acquired using standard python api e.g running python thread,,
643,81da9888c70e0067921395bd722d143907c0f5f7,aljak <baljci@hotmail.com>, 2018-11-20 23:22:02 +0100, , fix intel compiler warning window 1608,,
644,64205140bdaf02be50d3476bb507e8354a512d04,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-11-16 06:46:46 +0100, , added std deque overview.rst skip,,
645,17983e74256bb8ec136ed3d3d17e0726c80f1adb,oxmea <gilbert@voxmea.net>, 2018-11-16 00:45:19 -0500, , add type_caster support std deque 1609 add std deque type supported list_caster stl.h add new test_deque test test_stl cpp update documentation include std deque default supported type,,
646,8f5b7fce849b64216068c087207343c81c3776ed,huva Kroizer <ahuva.kroizer@intel.com>, 2018-11-13 14:25:57 +0200, , faq addition 1606 add possible solution importerror issue,,
647,e9d6e879499d56c26e7a55424e499b24a5047c36,arl Haubenwallner <crest01@users.noreply.github.com>, 2018-11-11 20:47:26 +0100, , added debug flag 1549,,
648,63c2a972fe566def1d32974545518a8dbf87fe1e,revor Laughlin <trevor.w.laughlin@gmail.com>, 2018-11-11 13:36:55 -0500, , enable unique_ptr holder mixed deleters base derived type 1353 check default holder recognize std unique_ptr default holder even match base derived holder add test unique_ptr change,,
649,cea42467b02451a6330f6fbe5984844ee6ed2472,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-11-11 19:32:09 +0100, , fix cast void 1605 pybind11 provides cast operator opaque void pointer side capsule python side cast void expression aware possibility incorrectly triggered compile time assertion unable cast type reference value local type caster fixed,,
650,e2eca4f8f86685507764ea25dc96a404026a50f2,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-11-09 20:14:53 +0100, , support aligned new statement 1582 support aligned new statement patch make pybind11 aware nonstandard alignment requirement bound type pass information aligned new operator pre behavior unchanged,,
651,adc2cdd5c4e201f583bba0b74758ba418e57be52,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-11-09 20:12:46 +0100, , fixed regression stl type caster rvps fix 1561 1603,,
652,9f73060cc7759b2375d71243a93dadf1ad996077,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-11-09 12:32:48 +0100, , std array caster support arbitrary sequence 1602 brings std array caster sync stl type caster accept arbitrary sequence input rather list restrictive,,
653,978d439e929397e625fab26566cdd3ef66b79610,ichaÅ Wawrzyniec UrbaÅczyk <mwu-tow@gazeta.pl>, 2018-11-03 13:20:08 +0100, , add pybind11_ prefix throw macro prevent name collision 1578,,
654,741576dd115bd9a2457f7a1e854bb4d0b0f8ec43,osh Kelley <joshkel@gmail.com>, 2018-10-31 21:10:11 -0400, , update documentation 1584 add detailed link python documentation add caveat program terminating initializing interpreter fails,,
655,06d021b6e46905ffb84c3646b35739f9c5e70aad,une Paamand <rune@paamand.eu>, 2018-10-25 01:35:33 +0200, , issue 1532 incompatible config option msvc debug 1533 issue 1532 incompatible config option msvc debug,,
656,c9b8933e9aa8914aa56c0195cbaaf023302fe1c9,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-10-24 13:25:25 +0200, , flake8 fix,,
657,54eb8193e512f35edca99753155c3a804ed5c176,arcÃ­sio Fischer <tarcisio.fischer.cco@gmail.com>, 2018-10-24 06:18:58 -0300, , fix scoped enums comparison equal equal case 1339 1571,,
658,1377fbf73c02ba3ceca61536726d8145253d9cf4,yota Suzuki <suzuryo3893@gmail.com>, 2018-10-24 18:18:04 +0900, , fix unintentional escaping character window 1574 1575,,
659,111b25b260fd687df9524d850c9d91927a661623,dyson37 <charlie@charliedyson.net>, 2018-10-14 19:14:04 +0100, , mention flake8 check style.sh contributing 1567,,
660,e76dff7751847df560bc0aea79abae814d39b475,llan Leal <allanmulin@gmail.com>, 2018-10-11 10:28:12 +0200,1258, fix issue 1258 1298 fix issue 1258 list_caster load method check python string prevent automatic conversion list fix issue pybind11 stl.h convert string vector string 1258 http github.com pybind pybind11 issue 1258 added test fix issue 1258 changelog stl string auto conversion,,
661,0f404a5d4d84e883360ec8c7ff11e6c25b33ca85,enry Schreiner <henryschreineriii@utexas.edu>, 2018-10-10 21:28:53 +0200, , allow recursive checkout without http 1563,,
662,177713fa4ea49c5594b5568279757f22354fa000,ason Rhinelander <jason@imaginary.ca>, 2018-10-02 12:11:37 -0300, , fix gcc compilation warning,,
663,73634b6db743e5b5b6fc5c64db020e4434cd41f0,une Paamand <rune@paamand.eu>, 2018-09-27 16:26:42 +0200,1531, update iostream.h changed local varname self self_ 1535 update iostream.h changed local varname self self_ avoiding conflict namespace pybind11 self http github.com pybind pybind11 issue 1531,,
664,e7761e338313ae649b8a694f1d6dee93b3b72a73,remanj <oremanj@mit.edu>, 2018-09-25 14:55:18 -0700, , fix potential crash calling overloaded function 1327 fix potential crash calling overloaded function crash would occur dispatcher two pas logic target overloaded argument support conversion first pas conversion disabled find matching overload second pas doe find matching overload return value converted python code formatting error message assumed still pointed selected overload second pas loop nullptr fix setting correctly second pas call return nullptr handle add new test segfaults without fix make overload iteration const correct iterate second pas error change dependency local class variable,,
665,9343e68b4611926fb9bae4c01a61c83841b1a0a8,avis E. King <davis685@gmail.com>, 2018-09-14 08:28:54 -0400, , fix cmake script project using cuda .cu file build correctly 1441,,
666,c8e9f3ccad8cde7bf5e1b33bf822ec7364e8ff0d,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-14 12:07:47 +0200, , quench __setstate__ warning fix 1522,,
667,ef13fb2e1c89f3e67f83eb860e8f6f37954a8cb1,emen Yesylevskyy <yesint4@yahoo.com>, 2018-09-12 01:20:56 +0300, , info inconsistent detection python version pybind11 1093 info inconsistent detection python version pybind11 cmake faq,,
668,f4245181ae40e1922a76e17e06f659dc8b75cee2,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-01 01:20:24 +0200, , enum_ move functionality non template implementation commit address inefficiency enums created pybind11 enum_ implementation completely generic however template class ended instantiating vast amount essentially identical code larger project many enums commit introduces generic non templated helper class compatible kind enumeration enum_ becomes thin wrapper around new class new enum_ api designed 100 compatible old one,,
669,b4b2292488dc59892ed0ec1c1fe17c4ba663f5ef,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-01 01:19:16 +0200, , relax operator tuples list sequence object_api operator powerful overload handle accept slice tuples numpy etc list sequence tuples provide specialized operator unfortunately disables functionality accidental purpose commit enable general behavior commit tangentially related previous one make handle object behave like python counterpart,,
670,067100201fbeefc4e4bcc041c7e3a36a28e4c7f7,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-01 01:09:16 +0200, , object_api support number protocol commit revamps object_api class map operator python analog make possible e.g perform arithmetic using int_ array,,
671,5c8746ff135abb390bf95944be593e895a586a50,rzysztof Fornalczyk <cysiek@users.noreply.github.com>, 2018-09-11 10:59:56 +0200, , check already existing enum value added added test 1453 check already existing enum value added added test added enum value name exception message test defining enum multiple identical name moved test_enum.cpp,,
672,35c82c725097f2d58208f233c4b42a1e2face560,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-11 10:08:48 +0200, , changelog version 2.2.4 feature targeted 2.3.0,,
673,01839dce8de5b9ecd7085e8708e05b98810032bf,eff VanOss <vanossj@users.noreply.github.com>, 2018-09-11 04:39:17 -0400, , remove duplicate feature list 1476,,
674,44e39e0de7ad011de9862a66666632401d66cdf3,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-09-11 09:32:45 +0200,1454, fix regression reported cyfdecyf 1454 1517,,
675,77374a7e5f48b64ee8b51de0a7d3783177a67716,ichael Goulding <michael.goulding@live.com>, 2018-09-08 07:25:11 -0700, , 15.8.0 preview 4.0 bug alias template 1462 15.8.0 preview 4.0 bug alias template,,
676,435dbdd114d135712a8a3b68eb9e640756ffe73b,xel Huebl <axel.huebl@plasma.ninja>, 2018-08-29 13:20:11 +0200, , add_module allow include system 1416 pybind11 header passed via cmake function included system includes isystem allows set stricter experimental warning calling project might throw otherwise header user pybind11 influence,,
677,3a94561c4d05abf9f3bdadb1e68ce812705f9a70,xel Huebl <axel.huebl@plasma.ninja>, 2018-08-29 13:18:43 +0200, , debug build dpy_debug 1438 build python debug library unreliable could lead symbol error linking setting py_debug define necessary linking debug build http question 39161202 work around missing pymodule create2 amd64 win python35 lib http docs.python.org api intro.html debugging build http docs.python.org 3.6 api intro.html debugging build,,
678,e0f3a766e951ebbf2aadb31f41eb490de5bb607e,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-08-29 12:10:48 +0200, , fixed flake8 error,,
679,2cbafb057f0031ac382f62c797a10bad4ea777b8,ustin Bassett <jbassett271@gmail.com>, 2018-08-29 02:48:30 -0700, , fix detail pythonbuf overflow return value return not_eof 1479,,
680,3789b4f9fd4c126c919f933ba0b8605683da4ac2,enry Schreiner <henryschreineriii@utexas.edu>, 2018-08-29 00:07:35 +0200, , update macro msvc mode 1347,,
681,7bb1da969a2747c24e6bd29dad6d44c4c5796141,atthias Geier <Matthias.Geier@gmail.com>, 2018-08-15 17:13:36 +0200, , fix copy paste error non const const,,
682,885b5b905a58247b5038cc02cf12e38b1573f5f7,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-08-28 23:04:47 +0200, , eigen test suite create np.matrix,,
683,d4b37a284aa37f1d78f136fc854e41a54d5f67f2,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-08-28 00:23:59 +0200, , added ellipsis method slicing numpy array add new ellipsis method used conjunction numpy generalized slicing support instance following valid numpy array array make_tuple ellipsis,,
684,f7bc18f528bb35cd06c93d0a58c17e6eea3fa68c,ason Rhinelander <jason@imaginary.ca>, 2018-07-19 15:03:26 -0300, , fix compatibility catch catch changed run ... signature take char argv arguing partly technically char argv type correct main signature rather const char argv dropping const appear cause problem catch tested cmake downloaded 1.9.3 debian 1.12.1 package follow suit,,
685,cbd16a8247b65c6eaab0369a54a25f51c5c0bd45,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-07-17 16:56:26 +0200, , stl.h propagate return value policy type specific caster 1455 stl.h propagate return value policy type specific caster return value policy container like handled stl.h currently broken problem detail policy always return move given non pointer reference type e.g std vector ... sensible behavior custom type exposed via class_ doe make sense type handled type caster stl container eigen matrix etc commit change behavior detail becomes active type caster derives furthermore override logic called recursively stl type caster enable key value specific behavior,,
686,b4719a60d32821fa47aaaba7c1035cb447bab386,annick Jadoul <yannick.jadoul@belgacom.net>, 2018-07-17 16:55:52 +0200, , switching deprecated thread local storage usage python 3.7 thread specific storage tss 1454 switching deprecated thread local storage usage python 3.7 thread specific storage tss changing python version 3.6 3.7 travis match brew version python introducing pybind11_ macro switch tss api,,
687,b30734ee9faf90eba7bb18962cf1d08baeb96863,oris Dalstein <dalboris@gmail.com>, 2018-07-01 17:47:22 +0200, , fix typo doc build built,,
688,221fb1e11e79b50308ec5afc55ea1337b828fa77,ennis Luxen <info@project-osrm.org>, 2018-07-17 15:48:51 +0200, , untangle cast logic implicitly require castability 1442 current code requires implicitly integral type cast able floating point case strongly typed integral e.g explained http blog 2014 type safe identifier always case commit sfinae move numeric conversion separate cast implementation avoid issue,,
689,534b756cb3244aca959359c07d44e4fed3498ba8,homas Hrabe <3632672+thomashrabe@users.noreply.github.com>, 2018-06-24 06:41:27 -0700, , minor documentation clarification numpy.rst 1356,,
690,baf6b99004bc61aee73bf199bb28669fd2f3a7cf,ntony Lee <anntzer.lee@gmail.com>, 2018-06-24 15:38:09 +0200, , silence gcc8 wcast function type 1396 silence gcc8 wcast function type see http bugs.python.org issue33012 linked therein,,
691,97b20e537abaca2a0235b3272cbb39340e1f4a43,xel Huebl <axel.huebl@plasma.ninja>, 2018-06-24 15:22:41 +0200, , cmake remember python version 1434 useful remember python libs includes also interpreter version cache user call pybind11 throught otherwise access selected interpreter version interpreter version useful downstream project e.g select default lib pythonx.y site package install path,,
692,e3cb2a674a3a8131717c2eb89f813698b4546fdb,hachajantc Michael <m.khachajantc@drweb.com>, 2018-06-20 18:33:50 +0300, , use std addressof obtain holder address instead operator,,
693,9b02856293fb66543d135ac3ad441326dd7bc066,aciek Starzyk <mstarzyk@gmail.com>, 2018-06-02 20:21:19 +0200, , update pypi url,,
694,4b84bad7efc0100fc6cd2382507bb1a38ee1ea3b,xel Huebl <axel.huebl@plasma.ninja>, 2018-06-21 16:31:46 +0200, , fix travis gcc python 3.6.6 1436 add missing python3 distutils debian buster,,
695,58e551cc737d77575b05de198da49479b81222a1,ntony Lee <anntzer.lee@gmail.com>, 2018-04-16 19:08:45 -0700, , properly report exception thrown module initialization exception thrown module initialization destructor try call get_internals setting python error indicator resulting systemerror ... returned error set fix temporarily stashing away error indicator destructor,,
696,55dc131944c764ba7e30085b971a9d70531114b3,ntony Lee <anntzer.lee@gmail.com>, 2017-11-14 19:52:11 -0800, , clarify doc function taking byte str,,
697,e763f046899ce09bf8a586ea75a7d9a9d27e70e4,ason Rhinelander <jason@imaginary.ca>, 2018-05-18 12:48:32 -0300,1401, base class destructor virtual fix 1401,,
698,ce9d6e2c0d02019c957ad48dad86a06d54103565,ranÃ§ois Becker <francois.becker@gmail.com>, 2018-05-07 15:18:08 +0200, , fixed typo classes.rst 1388 fixed typo erroneous classes.rst,,
699,5ef1af138dc3ef94c05274ae554e70d64cd589bf,aotoshi Seo <sonots@gmail.com>, 2018-05-06 13:59:25 +0000, , fix segv create empty shaped numpy array 1371 fix segfault creating dimension stride array,,
700,4b874616b2eda574c9e92b6e9b858c38108595f5,uzpaz <luzpaz@users.noreply.github.com>, 2018-05-06 13:54:10 +0000, , misc typo 1384 found via codespell,,
701,a7ff616dfbdc947c6fca7cbd82e9bb73ffaccd09,om de Geus <tom@geus.me>, 2018-05-04 17:04:45 +0200, , simplified example allowing robust usage fixed minor spelling issue,,
702,f5f66189620b7575f3124c66e3b3c8d0d03caf25,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-04-29 15:47:03 +0200, , updated changelog v2.2.3,,
703,bdbe8d0bde6aeb5360007cc57a453c18a33ec17b,ori A. Burns <lori.burns@gmail.com>, 2018-04-29 07:48:25 -0400,1121, enforces intel icpc 2017 fix 1121 1363,,
704,307ea6b7fdc77ae6d42ac71fef74ff6924498e58,avid Caron <dcaron05@gmail.com>, 2018-04-24 10:16:18 -0400, , typo,,
705,ed670055832f6669fbb7849878ed2cb99be4889c,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-04-22 14:04:31 +0200, , minor fix msvc warning cs4459 1374 using pybind11 bind enums msvc warning enabled following warning pollutes build fix renames one occurrence pybind11 include pybind11 pybind11.h 1398 warning c4459 declaration self hide global declaration pybind11 include pybind11 operators.h note see declaration pybind11 detail self,,
706,ffd56ebec0b1940e8d8d49b33cdc541f4e04c0a9,enry Schreiner <henryschreineriii@utexas.edu>, 2018-04-22 14:04:12 +0200, , fix pip issue appveyor 1369,,
707,060936fed2ad0bc14251a8703b6139eb7ea62a25,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-04-16 10:27:21 +0200, , detect pybind11 header path without depending pip internals fix 1174 1190,,
708,fd9bc8f54d1d9869e086923ad776ff4eda1ae6f5,remanj <oremanj@mit.edu>, 2018-04-13 20:13:10 -0400, , add basic support tag based static polymorphism 1326 add basic support tag based static polymorphism sometimes possible look object know dynamic type even use polymorphism instance object subclass conform mechanism self describing example perhaps enumerated tag kind member base class always set indication correct type might done performance reason permit derived type trivially copyable one widely known example llvm http llvm.org doc permit pybind11 informed convention via new specializable detail template generalizes previous logic determining runtime type object based rtti implementors provide way map base class object const std type_info dynamic type pybind11 ensure casting base python creates python object know wrapping appropriate sort derived number restriction tag based static polymorphism support compared pybind11 existing support built polymorphism support pointer adjustment single inheritance permitted way make code call new python provided subclass binding class redefine method subclass .def must repeated binding python know update much issue practice many case impact complexity pybind11 innards minimal localized support automatic downcasting improves usability great deal,,
709,8fbb5594fdf02eea6024d7b0c5eef3891d7366ab,ntony Lee <anntzer.lee@gmail.com>, 2018-03-11 16:15:56 -0700, , clarify documentation,,
710,289e5d9cc2a4545d832d3c7fb50066476bce3c1d,oris Staletic <boris.staletic@gmail.com>, 2018-04-02 23:26:48 +0200, , implement enum_ property name property return enum_ value string example import module  enum.value str enum.value  value actually equivalent boost.python name property,,
711,6862cb9b3564215805f5a4015c89914282b3509c,ason Rhinelander <jason@imaginary.ca>, 2018-04-05 11:04:15 -0300,1349, add workaround clang 3.3 3.4 reported 1349 clang 3.5 segfault function local variable referenced inside lambda move function local static separate function lambda invoke avoid issue fix 1349,,
712,6c62d2797cc8e50a58604ea3120dc4d8323db53b,enry Schreiner <henryschreineriii@utexas.edu>, 2018-04-03 11:27:04 +0200, , fix conda failure window,,
713,41a4fd8ae941406d6635df43f0e84021fc2a528f,atrik Huber <patrikhuber@users.noreply.github.com>, 2018-04-03 00:08:30 +0100, , fix missing word typo think word missing sentence correct please double check sentence mean supposed mean,,
714,6d0b4708c6eb1be31b943419a73aec00095a2d64,ason Rhinelander <jason@imaginary.ca>, 2018-03-10 11:42:24 -0400, , reimplement version check combine init macro reimplements version check avoid sscanf reportedly started throwing warning msvc even used perfectly safely 1314 also extract mostly duplicated part pybind11_module pybind11_plugin separate macro,,
715,9f41c8eade51f88331758e561a7c12cea0042463,ason Rhinelander <jason@imaginary.ca>, 2018-02-27 23:43:16 -0400, , fix class name overload failure message,,
716,e88656ab45ae75df7dcb1fcdd2c89805b52e4665,ason Rhinelander <jason@imaginary.ca>, 2018-02-27 22:33:41 -0400, ," improve macro type handling type comma take ... rather single argument expands __va_args__ let templated comma containing type get correctly add new macro pybind11_type let pas type macro single argument pybind11_type 1,2 pybind11_type 3,4 func unfortunately work one macro call forward argument next macro call without processor breaking requires also adding pybind11_type ... type macro argument ... macro chain updated documentation two change use couple place test suite test work",,
717,ab003dbdd994de6b1de5a20e348939576408917c,arc Schlaich <marc.schlaich@googlemail.com>, 2018-02-06 16:07:27 +0100, , correct version faq,,
718,1ddfacbad1c8dbbbcf6527e16bfae0a93749a2fb,ason Rhinelander <jason@imaginary.ca>, 2018-03-10 13:30:29 -0400, , fix python3 via brew apparently homebrew correct package python3 python python relegated python python3 alias python need upgraded rather installed,,
719,13c08072dc98ba679251ab8b17cf7e959d924fea,uz.paz <luzpaz@users.noreply.github.com>, 2018-02-21 13:28:55 -0500, , typo,,
720,01fada7674c62c19581c8b26b3a404e27708eaad,omas Babej <tomasbabej@gmail.com>, 2018-01-28 10:16:27 -0500, , minor typo,,
721,431fc0e19810a73d8278b71d8f991b319b5377d8,ason Rhinelander <jason@imaginary.ca>, 2018-02-17 11:07:37 -0400, , fix numpy dtypes test big endian architecture fix test code big endian architecture array support 832 hard coded little endian need use big endian architecture,,
722,2d0507db43cd5a117f7843e053b17dffca114107,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-02-07 11:05:41 +0100, , added v2.2.2 changelog,,
723,ff6bd092d482b0c4e51aeb7367c3e5ecbc18a9de,enzel Jakob <wenzel.jakob@epfl.ch>, 2018-02-06 15:40:50 +0100, , fix pybind11 clang trunk 1269,,
724,add56ccdcac23a6c522a2c1174a866e293c61dab,ason Rhinelander <jason@imaginary.ca>, 2018-01-12 12:37:54 -0400, , msvc workaround broken using detail warning,,
725,657a51e88919e2daf9fe6ededeb4bec0bd426bef,ason Rhinelander <jason@imaginary.ca>, 2018-01-12 12:06:46 -0400, , remove unnecessary detail function already using namespace detail detail qualification needed,,
726,adbc8111bcccd2594cb0fc6c26cadbb08e72e92c,ason Rhinelander <jason@imaginary.ca>, 2018-01-11 13:22:13 -0400,1247, use stricter brace initialization update init constructor use brace initialization aggregate initiailization constructor given argument particular fix regression 1247 presence std constructor started invoked constructor invocation 2.2 even specific constructor desired type added test case demonstrates without change fails compile .def init std vector int constructor try invoke std std vector int constructor rather std vector int constructor using new ... style construction ... constructor exist bypass still allowing init ... used aggregate type initialization since type definition user declared constructor,,
727,326deef2ae6c535c2b1838fd7404579b3fe497b7,ason Rhinelander <jason@imaginary.ca>, 2018-01-11 19:46:10 -0400, , fix segfault reloading interpreter external module 1092 fix segfault reloading interpreter external module embedding interpreter loading external module embedded interpreter external module correctly share internals_ptr one embedded interpreter interpreter shut however internals_ptr local embedded code actually reset nullptr external module remains set result loading external pybind11 module letting interpreter finalize initialize attempting use something external module fails external module still trying use old destroyed internals cause undefined behaviour typically segfault commit fix adding level indirection internals path converting local internals variable internals instead internals change detect stale internals pointer reload internals pointer either capsule creating new internals instance issue number reported gitter henryiii aoloe,,
728,05d379a9aa9a72a3d4aeee7ca725ba4c811c734b,eff VanOss <vanossj@users.noreply.github.com>, 2018-01-11 18:43:37 -0500, , fix return std map binding __delitem__ 1229 fix return std map binding __delitem__ returning void iterator also add test map item deletion,,
729,28cb6764fc6f66f5c678466c9af525f1dd6f8cc8,uz.paz <luzpaz@users.noreply.github.com>, 2018-01-09 12:30:19 -0500, , misc typo found via codespell,,
730,507da4181d2a33183b74065e25fe728c0f65fa29,ason Rhinelander <jason@imaginary.ca>, 2018-01-11 11:42:22 -0400, , use named rather anon struct instance anonymous struct nested union trigger wnested anon type warning anonymous type declared anonymous union extension clang 1204 name struct defines definition instance get around warning make code slightly simpler,,
731,88efb25145a7fea66cc7038547b277c8e936bbd2,ason Rhinelander <jason@imaginary.ca>, 2018-01-11 10:37:52 -0400, , fix numpy 1.14.0 compatibility updateifcopy deprecated replaced similar identical writebackifcopy trying access flag cause deprecation warning numpy 1.14 check new flag numpy repr formatting float changed 1.14.0 instead pre 1.14 updated test check equality repr ... value rather hard coded version dependent string representation,,
732,0826b3c10607c8d96e1d89dc819c33af3799a7b8,ntony Lee <anntzer.lee@gmail.com>, 2017-11-26 20:00:35 -0800, , add space around signature repr pep8 indicates correctly imo annotation present signature include space around equal sign i.e def int ... instead def int ... latter case equal appears bind type argument pybind11 signature always includes type annotation always add space,,
733,d1db2ccfdf7e9c365fc34177f79ad742cf8e0d7c,van Smirnov <aldanor@users.noreply.github.com>, 2017-12-27 15:00:27 +0000, , make register_dtype accept field container 1225 make register_dtype accept field container add test programmatic dtype registration,,
734,b48d4a01ca19b5feaf146140a8ed224585bbc78d,ason Rhinelander <jason@imaginary.ca>, 2017-12-15 13:22:15 -0400, , added args ref counting test,,
735,367d723a541f8d2f06ad74d40c425e6ea2aa5242,ason Rhinelander <jason@imaginary.ca>, 2017-12-15 13:21:52 -0400, , simplify arg copying,,
736,03874e37386d693b56d05a8e3cc458760d74725c,ach DeVito <zdevito@fb.com>, 2017-12-14 17:19:19 -0800, , fix leak var arg handling using mixed position vararg path pybind inc_ref vararg position printing ref_count item change see change  refcount item assign refcount item assign  change  refcount item assign refcount item assign ,,
737,48e1f9aadc6ed715742e41a3cd3693a234a96246,ason Rhinelander <jason@imaginary.ca>, 2017-12-23 09:42:32 -0400, , fix premature destruction args kwargs argument args kwargs argument properly referenced added function_call argument list reference count drop zero first non converting function call fails mean might cleaned second pas call run commit add couple extra object function_call stash reference needed tie lifetime function_call object lifetime credit yannickjadoul catching proposing fix 1223,,
738,5e7591c66b389d4157f5da1a487af375e2150caf,lliott Sales de Andrade <quantum.analyst@gmail.com>, 2017-12-14 02:45:04 -0500, , update pypi url,,
739,3be401f2a20eb7d21ab7fb111ad40feaa30f9775,ason Rhinelander <jason@imaginary.ca>, 2017-12-15 10:15:25 -0400, , silence new msvc deprecation warning latest msvc mode including eigen cause warning warning c4996 std unary_negate _fn warning stl4008 std not1 std not2 std unary_negate std binary_negate deprecated 17. superseded std not_fn define  acknowledge received warning disables 4996 eigen includes catch generates similar warning std disable warning case temporary remove warning disabling new upstream version eigen catch available address warning catch one particular look fixed upstream master probably fixed next 2.0.2 release,,
740,a303c6fc479662fd53eaa8990dbc65b7de9b7deb,ntony Lee <anntzer.lee@gmail.com>, 2017-12-03 18:17:16 -0800, , remove spurious quote error message 1202,,
741,cf0d0f9d5ad79349e313694ddf3efeef7de21890,enry Schreiner <henryschreineriii@utexas.edu>, 2017-11-30 11:33:24 -0600, , matching python int behavior python 1186 pybind11 default conversion int always produce long python int long unified python patch fix int handling match python python short type size_t smaller number returned int possible otherwise long requires python 2.5 needed thing like sys.exit refuse accept long,,
742,3b265787f253b84598a0453fc2ff3fa25f3d5acf,ruce Merry <bmerry@gmail.com>, 2017-11-24 16:19:45 +0200, , document using atexit module destructors pypy 1169 none three currently recommended approach work pypy due garbage collecting thing want added note example showing get interpreter shutdown callback using python atexit module,,
743,086d53e8c66a84d0ec723d5435918c76edd878e8,ason Rhinelander <jason@imaginary.ca>, 2017-11-21 17:05:43 -0400, , clean eigen download code bump 3.3.4 change travis eigen download code extract tar fly rather saving file first extract eigen directory rather using upstream eigen eigen xxxxx directory also bump travis eigen release 3.3.4 attempt see fixed wdeprecated warning build setup cleanup seems worth committing anyway,,
744,ba33b2fc798418c8c9dfe801c5b9023d3703f417,rancesco Biscani <bluescarni@gmail.com>, 2017-11-20 14:19:53 +0100, , add wdeprecated test suite fix associated warning 1191 commit turn wdeprecated test suite fix several associated deprecation warning show result static constexpr member implicitly inline redeclaration needed deprecated various test suite class destructors rely implicit copy constructor implicit copy constructor definition user declared destructor present deprecated eigen also various implicit copy constructor disable wdeprecated eigen.h,,
745,15e0e445499be526d8e2d6bc0b1f04b262c2e86d,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-11-17 18:44:50 +0100, , moved section licensing contribution fix 1109 1188,,
746,e7d304fbc6f0aa22b6105e2b1a4807c7a294eafa,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-11-17 18:44:20 +0100, , added citation reference fix 767 1189,,
747,6d19036cb26cf0675d8b35285c83b1e43bd75ad8,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-11-16 22:24:36 +0100, , support docstrings enum value 1160,,
748,0a0758ce3a8e62c1fcf0a32b9c2564aa59ee1fe8,ed Drain <ted.drain@gmail.com>, 2017-11-07 08:35:27 -0800,1142, added write property function issue 1142 1144 class_ def_property take nullptr getter allow write property established mirroring python property built none given getter also update property use new nullptr constructor internally,,
749,71178922fdf375f1b58724a1c67fe11abc52e815,ason Rhinelander <jason@imaginary.ca>, 2017-11-07 12:33:05 -0400, , __qualname__ nested class naming fix 1171 fix related set __qualname__ show type name function signature __qualname__ supposed module name beginning putting remove keeping nested.class name chaining print rather type tp_name latter work properly nested class would get module.b rather module.a.b class parent also unifies python pypy code fix 1166 set __qualname__ attribute type would happen python 3.3 python 3.3 including pypy particularly important earlier python version useful able extracted nested name __qualname__ invented first place added test,,
750,0b3f44ebdfd9bdb8dface02ffa0dbde0e29ad542,nknown <kunda@scribus.net>, 2017-11-01 21:08:06 -0400, , trivial typo non user facing found using codespell,,
751,5c7a290d374b8b6cc3bb3d1d6f1316547ba118f2,ason Rhinelander <jason@imaginary.ca>, 2017-10-24 20:39:46 -0300, , fix new flake8 e741 error using variable updated flake8 package hit bunch e741 ambiguous variable name warning commit renames lst list value avoid error,,
752,32ef69acde3b3345411fec40317f34cba423f075,ason Rhinelander <jason@imaginary.ca>, 2017-10-24 17:59:50 -0300, , qualify cast_op_type help icc,,
753,835fa9bcc61b1da097779e868b5653193c1cae1f,ason Rhinelander <jason@imaginary.ca>, 2017-10-22 12:25:18 -0300, , miscellaneous travis update fix debian buster docker build gcc install use system catch package also renames extra_packages since contains non compiler package add status message indicating catch version used compiling embedded test simplify bash code using var foo append rather var var foo fix appending prepending existing value would end eigen path already set bug actually noticed since currently nothing else set,,
754,a582d6c7ff4180345117737c1c86e6a3defde25c,ason Rhinelander <jason@imaginary.ca>, 2017-10-22 12:06:52 -0300, , build permissive vs2017 building vs2017 permissive flag put compiler stricter standard compliant mode cause compiler work differently disallows non conforming code perfectly fine test suite vs2017 build commit also fix one failure non permissive mode,,
755,6a81dbbb1e07ff0f37f362ce426cd54910536f4f,ason Rhinelander <jason@imaginary.ca>, 2017-09-21 19:09:39 -0300, ," fix nx1 1xn input eigen dense vector args fix bug introduced passing two dimensional conformable array value compile time eigen vector vectorxd rowvectorxd commit switched using numpy copy eigen data broke described case numpy refuse broadcast n,1  commit fix squeezing input array whenever output array dimensional let problematic case squeeze inappropriately dimension compatibility already checked conformability getting copy code",,
756,7672292e6bcdf3ca4e345019b41995031a37766e,ason Rhinelander <jason@imaginary.ca>, 2017-10-03 10:09:49 -0300,1124, add informative compilation failure method_adaptor failure using method_adaptor usually implicitly via cl.def compilation failure result actually method inaccessible base class made public via using class public void class private public using pybind deduces member function pointer since base class inaccessible cast method_adaptor base class member function pointer derived class member function pointer valid cast failure result sort regression 2.2 introduced method_adaptor expected thing base class accessible actually something worked 2.1 though get compile time failure method callable cast access restriction result simply get run time failure ever tried call function 855 fixed thus change 2.2 essentially promoted run time failure compile time failure really regression commit simply add static_assert accessible base class check rather cryptic cast failure get something informative along suggestion workaround workaround use lambda e.g class derived private base public using base  binding code cl.def derived fails derived actually base class member function pointer cl.def derived self return self.f bit nuissance especially bunch argument forward really see another solution fix 1124,,
757,1b08df58725f37e76de09076872018255ea9427b,ason Rhinelander <jason@imaginary.ca>, 2017-10-06 11:50:10 -0300,1116, fix char argument non bindable change caster return reference new local chart type caster member binding lvalue reference char argument work currently result compilation failure fix 1116,,
758,04b41f03043744ed324bae17d1164952cccb28b7,enry Schreiner <henryschreineriii@utexas.edu>, 2017-10-09 22:47:02 -0400, , upgrading xcode fix osx py3 build failure upgrade latest stable xcode fix build error python build,,
759,1e6172d4055d654df466f32b8327de7145bc9ea3,ruce Merry <bmerry@ska.ac.za>, 2017-10-08 11:28:04 +0200, , fix minor mistake comment struct instance,,
760,64a99b92fe2e3bf257127667e27e7e548dda163a,ason Rhinelander <jason@imaginary.ca>, 2017-09-28 08:04:34 -0300,1117, specify minimum needed cmake version test suite fix 1117,,
761,a22dd2d1dfa84b6122fa55a37da58fd7726f816d,nsgar Burchardt <aburch@users.noreply.github.com>, 2017-09-21 23:07:48 +0200, , correct stride matrix example test also match eigen example row major case also enhances one test trigger failure fix really flaw pybind rather fix wrong code test code doc,,
762,d2757d044028abd3f839c83e1555d9ea5c32e9c0,ason Rhinelander <jason@imaginary.ca>, 2017-09-19 23:17:21 -0300, , remove superfluous requires_numpy entire test file already marked requiring numpy needed individual test,,
763,c6a57c10d10a458db1dfd8430d817017629f8b0a,ason Rhinelander <jason@imaginary.ca>, 2017-09-19 22:12:46 -0300, , fix dtype string leak steal reference argument passed argument .release,,
764,0aef6422a349e498410c4a06b9decc04addd8c25,ean Moldovan <dean0x7d@gmail.com>, 2017-08-31 14:38:23 +0200, , simplify function signature annotation parsing type_descr applied final signature mark argument type nested type e.g tuples return type,,
765,56613945aea9f2786ddf004cf17a770dc5270c16,ean Moldovan <dean0x7d@gmail.com>, 2017-07-02 12:52:00 +0200, , use semi constexpr signature msvc mscv doe allow typeid constexpr context string part type signature still constexpr order avoid typeid long possible descr modified collect type information template parameter instead constexpr typeid actual std type_info pointer collected end constexpr gcc clang regular msvc function call doe significantly reduce binary size msvc gcc clang benefit little bit well since skip intermediate std type_info array,,
766,c10ac6cf1f69ebe2b7dd26957325ea3b161cb7ff,ean Moldovan <dean0x7d@gmail.com>, 2017-07-02 11:48:56 +0200, , make possible generate constexpr signature mode current constexpr signature require relaxed constexpr auto return type deduction get around type caster name static member function turned static constexpr auto variable,,
767,f94d7598813d5f50f88ffad11f4622c02a3eb391,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-09-14 08:49:47 +0200, , updated changelog v2.2.1 release,,
768,1caeb8d78925df57c8feb02431e2f2be7e9d47e1,ean Moldovan <dean0x7d@gmail.com>, 2017-09-13 21:45:49 +0200, , fix travis style doc pip build travis change default python 3.x break hardcoded version selection fix make pyenv activate everything 2.7 3.x use whichever python 3.x default skip appveyor,,
769,27680302ddf61ec9d1b660bcea66f4126579412e,ean Moldovan <dean0x7d@gmail.com>, 2017-09-13 19:04:25 +0200, , update changelog v2.2.1 release,,
770,d81d11a61caa6fdfdceb10cd272aef776fa7254f,zh1043 <tzh1043@users.noreply.github.com>, 2017-09-13 19:02:53 +0200, , make pybind11_module name usable define 1082,,
771,9f82370e48b7eda75087a2fdefdf29735fb7b699,barlow83 <jbarlow83@users.noreply.github.com>, 2017-09-13 07:18:08 -0700, , doc describe importing python module python method 1079 expand documentation include explicit example module import one would expect describe use unbound bound method class python class skip,,
772,2b4477eb65d9e852da9cad1d163dde277d5b3c2e,ean Moldovan <dean0x7d@gmail.com>, 2017-09-09 20:21:34 +0200, , make typeerrors informative optional header missing e.g trying convert list std vector int without including pybind11 stl.h raise error note suggests checking header note appended std found function signature case header missing e.g stl.h included signature would contain list int instead std vector int using stl_bind.h would produce something like myvector similarly std map dict complex std function callable etc possibility false positive pretty low,,
773,c64e6b1670e57d103e52c4ca3b42e5e55858ca41,unnar LÃ¤thÃ©n <gunnar@lathen.se>, 2017-09-12 08:05:05 +0200, , added function reloading module 1040,,
774,2cf87a54d81404482a0844cc7525802a8ad7a01e,ean Moldovan <dean0x7d@gmail.com>, 2017-09-10 12:21:21 +0200, , fix implicit conversion accessors type derived object fix 1069,,
775,953d2422b35b1fc73f32bba3366f07e18577a54b,ean Moldovan <dean0x7d@gmail.com>, 2017-09-10 16:53:02 +0200, , fix reference leak number converter 1078 fix 1075 pynumber_float pynumber_long return new reference,,
776,7b1de1e5515498679477ac4af7caff28fbe60638,ean Moldovan <dean0x7d@gmail.com>, 2017-09-03 01:31:47 +0200, , fix nullptr dereference loading external module_local type,,
777,3c4933cb5041da7b5d87b65d85167816f6460911,ean Moldovan <dean0x7d@gmail.com>, 2017-09-01 21:42:20 +0200, , fix stl caster container proxy regression avoid odr violation test suite testing stl.h std_bind.h std vector bool bind_vector std vector bool test moved secondary module doe include stl.h,,
778,43126201a6b16ba4cb172c42643c0c5b89a88717,enry Schreiner <henryschreineriii@utexas.edu>, 2017-09-10 06:24:33 -0400, , fix style script add comment failing block 1045 skip appveyor,,
779,2d49aee4c5a11b217a3abd57273251185c9ee12a,ean Moldovan <dean0x7d@gmail.com>, 2017-09-08 13:44:55 +0200, , remove unused value assignment,,
780,b0a0e4a23cfb82c92403012e4dc446928bb4347a,ean Moldovan <dean0x7d@gmail.com>, 2017-09-04 21:16:09 +0200, , fix compilation clang host gcc old libstdc,,
781,cdf38dc6ba346f2aba52240d906b3ef0eba544ec,ean Moldovan <dean0x7d@gmail.com>, 2017-09-08 11:34:06 +0200, , move style check barebones config first position travis run basic test first avoids waiting end style check skip appveyor,,
782,b7c98d21e13158e9076cdb26cb31b3d8ba0f4bfb,ean Moldovan <dean0x7d@gmail.com>, 2017-09-08 10:59:50 +0200, , speed travis build 1056 update python osx image xcode8.3 speed brew install python osx image remains xcode7.3 one osx config run debug mode improve coverage run cmake build test two configs speed overall build cmake test take second configuration really need run two one linux one macos mirror recent change appveyor merge style doc pip test barebones build merge bit cmake install configuration remove clang 3.9 testing already clang version tested travis new xcode8.3 image close clang 3.9 skip appveyor,,
783,0991d7fba1dfcf036ba90ae79ee69f02e3ed8079,ean Moldovan <dean0x7d@gmail.com>, 2017-09-05 16:49:33 +0200, , remove deprecated placement new constructor doc skip,,
784,a80af9557d211b14c2942177b5371d7d6fc4448c,ean Moldovan <dean0x7d@gmail.com>, 2017-09-04 23:22:22 +0200, , add dummy common.h header deprecation warning,,
785,00b8f3655dafe32ae04e05212a5a2aa1e2a0d16a,ean Moldovan <dean0x7d@gmail.com>, 2017-09-04 23:46:11 +0200, , relax pickle get set type check fix 1061 const compatible type,,
786,7939f4b3fe421f1457841225c048330878979f6f,ean Moldovan <dean0x7d@gmail.com>, 2017-09-04 13:49:19 +0200, , fix application keep_alive policy constructor regression,,
787,fbab29c73a91234d7992aefb69d40c50c56d5ccf,arcin Wojdyr <wojdyr@gmail.com>, 2017-09-04 18:37:16 +0100, , remove extra wpedantic,,
788,91b42c81745e8a918f80167f5cd9c40ff8eb8a39,ean Moldovan <dean0x7d@gmail.com>, 2017-09-02 14:46:32 +0200, , add upgrade guide entry stricter compile time check close 1048 close 1052 skip,,
789,1ad2227d3c47525b00959b60552667390c02ec22,atrik Huber <patrikhuber@users.noreply.github.com>, 2017-09-04 22:00:19 +0100, , fixed typo doc skip,,
790,b490b44e34f57433e562a2f8f7de6202f30a017a,ruce Merry <bmerry@ska.ac.za>, 2017-09-01 09:27:00 +0200,880, update documentation keep_alive match new implementation 880 changed implementation keep_alive avoid weak reference nurse pybind11 registered documentation get updated match,,
791,2fb4e9532e55ca12d05373f0a1b53f50cdf919d6,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-31 23:05:45 +0200, , fix release.rst instruction conda forge sha checksum skip,,
792,8cf091a41fb696d7039519b79e37a6804caa8b11,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-31 14:01:08 +0200, , updated version flag next version,,
793,2a5a5ec0a47c245fbf1bb1a8a90b4c3278e01693,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-31 13:58:24 +0200, , updated changelog.rst release date,,
794,def3c18c6500e74bca95c596df4b8d14cb790b75,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-31 13:56:57 +0200, , updated variable v2.2.0 release,,
795,689867927033d3de22241b4e8e95d2bf25a350a7,ean Moldovan <dean0x7d@gmail.com>, 2017-08-30 23:40:55 +0200, , update enum_ bind_vector new style init pickle fix 1046,,
796,4c5404421f7c1fe9cc941df1cbc645222aae7b6c,ean Moldovan <dean0x7d@gmail.com>, 2017-08-30 21:53:08 +0200, , update changelog upgrade guide skip,,
797,5cbfda5b68c289f63429598a8b194b79226bd66a,van Smirnov <aldanor@users.noreply.github.com>, 2017-08-30 20:58:43 +0100, , update build command linux doc 907,,
798,37de2da9dd72d22e4d57f18ce61bac0738053371,ruce Merry <bmerry@gmail.com>, 2017-08-30 14:22:00 +0200, , access hash function python vice versa 1034 two separate addition hash obj equivalent python hash obj .def hash self register hash function defined std hash python hash function,,
799,29b99a11a45bb8d84e18dd38c89e477202b3ece1,lorian Apolloner <apollo13@users.noreply.github.com>, 2017-08-30 14:17:54 +0200, , specify cxx project language cmake 3.4 1027,,
800,b8c5dbdef5671e467d43e14de7a888c197996b87,ean Moldovan <dean0x7d@gmail.com>, 2017-08-24 02:46:07 +0200, , show deprecation warning old style __init__ __setstate__ warning shown module initialization time import function called visible compiled debug mode,,
801,1e5a7da30dded4f302a13c42a30bfdca4b12cd54,ean Moldovan <dean0x7d@gmail.com>, 2017-08-24 01:53:15 +0200, , add pickle adaptor safer __getstate__ __setstate__ binding analogous init __init__ placement new pickle reuses implementation detail init,,
802,a1041190c8b8ff0cd9e2f0752248ad5e3789ea0c,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-28 16:35:32 +0200,1037, mention 1037 changelog,,
803,8ed5b8ab55130f8fcea24d3e90fc3a75886fd3c9,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-28 16:34:06 +0200, , make implicit conversion non reentrant fix 1035 1037,,
804,15f36d2b2d07a8ce00dcc00cfe40770dec9ec53b,ean Moldovan <dean0x7d@gmail.com>, 2017-08-24 00:42:51 +0200, , simplify init type deduction error checking,,
805,39fd6a946336fb9bb46f55f55b0a2de7d0e2098c,ean Moldovan <dean0x7d@gmail.com>, 2017-08-17 02:01:32 +0200, , reduce binary size overhead new style constructor lookup self type value pointer moved template code dispatcher brings binary size constructor back level old placement new approach also avoids second lookup init_instance implementation mixing old new style constructor overload set may result runtime overhead temporary allocation deallocations fine old style constructor phased,,
806,93528f57f33c35c6ae81d2889037611c99445946,ean Moldovan <dean0x7d@gmail.com>, 2017-08-28 14:55:56 +0200, , document type_caster requires default constructible type skip,,
807,5f317e60bd17f0c226bcac40ed10b26c3b68dcc0,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-26 00:35:05 +0200, , extended module destructor documentation 1031,,
808,c40ef612cc41d8a59af049a132fd8beef73623b8,ean Moldovan <dean0x7d@gmail.com>, 2017-08-25 21:11:36 +0200, , skip boost variant test unsupported compiler version boost,,
809,c14c2762f69f2bd36765f793e997751ce63c7b40,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-25 16:02:18 +0200, , address reference leak issue fix 1029 creating instance pybind11 bound type caused reference leak associated python type object could prevent collected upon interpreter shutdown commit fix issue type defined scope e.g module unscoped anonymous type e.g custom iterator type always retain positive reference count prevent collection,,
810,8b405055759bc27708b5203b215779c6031fcc87,enry Schreiner <henryschreineriii@utexas.edu>, 2017-08-24 17:12:43 -0700, , utility redirecting stream python 1009,,
811,3d8df5af033f05c9da300eb67eef3d490a8f7bf2,ean Moldovan <dean0x7d@gmail.com>, 2017-08-23 16:59:10 +0200, , fix missing user dir python pybind11 includes case pip install user header include dirs must also include true skip appveyor,,
812,1913f252d3ddddb6afbae43f05d8911db51deca6,ean Moldovan <dean0x7d@gmail.com>, 2017-08-23 14:20:53 +0200, , fix setup.py detail header add pip install test travis default install_headers distutils flattens header single directory detail subdirectory lost commit fix overriding setup custom header installer test added travis make sure setup.py sdist pip install miss header directory structure preserved skip appveyor,,
813,e8b507418706e4e0869ae7fcaef3035089641616,atthias Hochsteger <matthias.hochsteger@tuwien.ac.at>, 2017-08-23 16:08:13 +0200, , fix wrong link changelog,,
814,e9bb843edca5aed30eae341a8903998782c42679,ason Rhinelander <jason@imaginary.ca>, 2017-08-22 10:37:51 -0400, , fix clang5 warning,,
815,b97510388f132de7d41699581051541ad7646df1,ason Rhinelander <jason@imaginary.ca>, 2017-08-22 10:23:45 -0400, , change clang travis build clang newer clang produce additional warning skip appveyor,,
816,b33475d054cd1df9eab22b2003e58a276439db36,ean Moldovan <dean0x7d@gmail.com>, 2017-08-23 17:18:57 +0200, , speed appveyor build 1021 latest build remains others modified use regular python instead conda pip install much faster conda scipy available numpy still tested compile debug mode instead release skip cmake build test reason cmake configuration slow appveyor test almost entirely cmake change reduce build time original latest config still cover scipy release mode cmake build test others need,,
817,b12a9d67c69ddf3e3d123894669f66938b4921ff,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-23 16:30:56 +0200,1015, mention 1015 changelog,,
818,4bacd7dec1ea44497a77e94468a2e3f87cfba868,ean Moldovan <dean0x7d@gmail.com>, 2017-08-20 17:23:12 +0200, , remove noinline internal static local,,
819,669aa29461de7daabc0efbb624b23e320a89ece4,ean Moldovan <dean0x7d@gmail.com>, 2017-08-20 17:18:33 +0200, , improve type safety,,
820,96997a4b9d4ec3d389a570604394af5d5eee2557,ean Moldovan <dean0x7d@gmail.com>, 2017-08-20 17:14:09 +0200, , change internals versioning scheme avoid module conflict current depends version library order isolate binary incompatible internals capsule however doe preclude conflict module built different binary incompatible commits version number example one module built early v2.2.dev submitted pypi could loaded alongside v2.2.x release module would segfault incompatible internals  change depend independent main library version integer incremented whenever binary incompatible change made internals also introduced similar reason versioning scheme also applied type_info module_local type attribute,,
821,024932b3799044f8b259d6d4f2760f3e900c1f06,ean Moldovan <dean0x7d@gmail.com>, 2017-08-20 16:15:33 +0200, , move everything related internals separate detail header,,
822,3271fecfdee7ae728cedf3316500d7d69f23e100,aljak <baljci@hotmail.com>, 2017-08-23 00:45:30 +0200, , fix llvm intel toolset 1020,,
823,4336a7da4a890ba421da72d7d0c48c7d7f276a50,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-21 22:48:28 +0200, , support brace initialization,,
824,fb276c661f6bca259efc11f2c21cda442064e74d,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-08-22 00:55:53 +0200, , minor text edits advanced classes.rst unrelated,,
825,234f7c39a0a1dabeecf5e1615c6aa1e4d0bf8849,ean Moldovan <dean0x7d@gmail.com>, 2017-08-17 17:03:46 +0200, , test document binding protected member function,,
826,9f6a636e547fc70a02fa48436449aad67080698f,ason Rhinelander <jason@imaginary.ca>, 2017-08-21 16:50:46 -0400, , detail init.h fix see comment see comment referenced code comment anymore copy later factory init comment first constructor block fix,,
827,1fb9df601c0b6b84bb072a6450a65ef0eb5664e9,ean Moldovan <dean0x7d@gmail.com>, 2017-08-18 19:26:49 +0200, , add upgrade guide documentation skip,,
828,db46a89d962791077fb39bc75663c805ff75d4ee,ean Moldovan <dean0x7d@gmail.com>, 2017-08-13 22:25:15 +0200, , update changelog v2.2.0 skip,,
829,d265933d8550f0a3ddb17d74a93b92641c5ce382,atrik Huber <patrikhuber@users.noreply.github.com>, 2017-08-19 19:47:36 +0100, , fix typo eigen documentation fix one small variable name typo two instance arg .nocopy used think arg .noconvert instead probably nocopy old original name changed,,
830,5e14aa6aa712e23f4e37c7520d70fa7fdd7bc213,ason Rhinelander <jason@imaginary.ca>, 2017-08-17 11:38:05 -0400, , allow module local class loaded externally main point module_local make python cast unique returning casting instance well defined unfortunately also make loading unique particularly desirable instance contains type instance reason possible pas instance bound function taking type parameter even function another module commit solves issue allowing foreign module global type loader chance load value local module loader fails implementation doe storing module local loading function capsule python type call local possibly global local type masking global type version work,,
831,39498b2bd39642dd6f97dc60f8220c69a422b295,ason Rhinelander <jason@imaginary.ca>, 2017-08-17 11:34:43 -0400, , remove macro macro anything useful hidden visibility applied pybind11 code,,
832,c4e180081de91d6db7f6223f41ec15f3a2d78dd2,ason Rhinelander <jason@imaginary.ca>, 2017-08-17 00:01:42 -0400, , reimplement init ... use common factory code reimplements init ... implementation using various function added support init ... move implementing structs detail init.h pybind11.h simply use factory directly common case implementation without extra lambda call small useful optimization combined previous lazy initialization also avoids needing placement new init ... construction construction occurs via ordinary new type ... consequence also fix potential bug using multiple inheritance python easy write class double initialize existing instance potential leak non pod class new implementation attempt call __init__ already initialized object ignored already done previous commit factory constructor change exposed warning fixed deleting pointer base class virtual function without virtual destructor look like legitimate warning suppress add virtual destructors appropriate class,,
833,464d98962d28d812531f4442c98635607f399be9,ason Rhinelander <jason@imaginary.ca>, 2017-06-12 21:52:48 -0400, , allow binding factory function constructor allows use cls.def init return pointer holder value class type derived type various compile time check static_asserts performed ensure function valid various run time type check necessary detail feature init name conflict templated argument init ... keep naming consistent existing templated argument one wrap constructor template function argument one wrap factory function returning cppclass whether value pointer cppalias required i.e python side inheritance declared alias dynamic_cast alias attempted pointer version fails returned value alias class constructor invoked constructor exist runtime error occurs holder return alias required try dynamic_cast wrapped pointer alias see already alias instance raise error init class_factory alias_factory also available take two factory first called alias needed second reimplement factory instance clearing previous implementation failed python side multiple inheritance inherited type factory init would clear instance instead setting type value new implementation clear relevant value pointer dealloc updated explicitly set leftover value pointer nullptr flag false used clear preallocated value without needing rebuild instance internals data added various test test new allocation deallocation code preallocation done lazily init factory holder completely avoid extra overhead needing extra allocation deallocation updated documentation make factory constructor default advanced constructor style __init__ called second time two choice throw away first instance replacing second ignore second call latter slightly easier,,
834,42e5ddc541f474d0f652528c0cbdcb4bbd1e9943,ason Rhinelander <jason@imaginary.ca>, 2017-06-12 21:48:36 -0400, , add polymorphic static assert using alias alias used two main purpose override virtual method add extra data class needed pybind wrapper absolutely require wrapped class polymorphic virtual dispatch destruction respectively work,,
835,b4bf5ed575da01e0846bc1f465443b2335219b53,ason Rhinelander <jason@imaginary.ca>, 2017-05-10 01:51:08 -0400, , added metatypes dealing function lambda extract function type function function pointer lambda is_lambda really name bit long check whether type approprate context lambda check whether type pointer function,,
836,fd81a03ec91c4e729bb2c4f0456300015972bad0,ason Rhinelander <jason@imaginary.ca>, 2017-07-31 23:32:34 -0400, , lazy instance value pointer allocation currently allocate instance value creating instance except constructing instance cast particular reason instance internals non simple layout allocated via python reason expect better locality invoked operator new moreover make implementation factory function constructor trickier slightly efficient use pre eallocate memory mean pointless allocation free commit make allocation lazy instead preallocating creating instance allocation happens instance first loaded null time addition making efficient deal case need preallocation also allows slight performance increase needing look instance type allocation lookup eventual load course happening already,,
837,8665ee8100e8b305e026abd6cf17841ab41f329b,ean Moldovan <dean0x7d@gmail.com>, 2017-08-17 15:01:43 +0200, , fix documentation build doxygen need recursive yes order parse detail subdir warning error option sphinx work makefile build switched calling sphinx directly fix citation cppimport referenced warning,,
838,0d703f6e7ca59fc56ecbb8a0d263ae1d7a6e3ae7,ason Rhinelander <jason@imaginary.ca>, 2017-08-14 14:47:58 -0400, , force hidden visibility embed target module target embedding may well used place hidden visibility desired relatively safe allow potential conflict would come module loaded embedded interpreter long module compiled hidden visibility conflict could still warning embedded code attempt export class internal hidden pybind member seems legitimate warning already faq entry,,
839,f580649871f721d271a459d13e067bbd1fc31925,ean Moldovan <dean0x7d@gmail.com>, 2017-08-14 00:35:53 +0200, , move internal header detail subdirectory,,
840,76e06c89e419db196cda20e0e43171f9461139ae,ean Moldovan <dean0x7d@gmail.com>, 2017-08-13 15:48:08 +0200, , avoid duplicate standard flag set available cmake 3.1. flag set avoid initializing,,
841,97aa54fefa9401329a292bb0a425097f5fd0e730,ason Rhinelander <jason@imaginary.ca>, 2017-08-10 12:08:42 -0400, , compile hidden visibility always set via cmake property rather compiler flag update compilation always apply hidden visibility resolve issue default visibility causing problem debug compilation moreover using cmake property make easier caller override absolutely needed reason use cmake set property target append compilation option non msvc compiler,,
842,a859dd67a29372e478ad862d8d2979930471532e,ason Rhinelander <jason@imaginary.ca>, 2017-08-10 12:03:29 -0400, , force hidden visibility pybind code add macro expands pybind11 namespace hidden visibility gcc type compiler otherwise plain pybind11 force hidden visibility everything pybind solving visibility issue discussed end end 949,,
843,8d3cedbe2bb6ae5c68e1543b8a1c78ae07370ccc,ean Moldovan <dean0x7d@gmail.com>, 2017-08-13 03:03:06 +0200, , add test mixing stl caster local binder across module one module generic vector caster pybind11 stl.h export std vector int local bind_vector,,
844,eb0f1cc7bfdb957d9e60f93ea91af9d56e3351a7,ason Rhinelander <jason@imaginary.ca>, 2017-07-25 16:22:45 -0400, , allow unchecked lvalue mitigate accidental invocation temporary array fix 961,,
845,7918bcc95b8c599a5d1783ab395ec31f3c8bb2ea,ean Moldovan <dean0x7d@gmail.com>, 2017-08-08 16:02:31 +0200, , add support boost variant mode mode boost apply_visitor requires explicit result_type also add optional test boost variant boost available mode std variant tested instead,,
846,e06077bf4718050c4f95c3b4741c75f7f7041b83,ricCousineau-TRI <eric.cousineau@tri.global>, 2017-08-07 18:37:42 -0400, , document requirement explicitly initialize base 986 ensure ref parsed add quick blurb __init__ inherited type skip,,
847,3dde6ddc5348d5ccd006b2ce00302ed076f59454,ean Moldovan <dean0x7d@gmail.com>, 2017-08-07 22:47:19 +0200, , add test custom cmake export group,,
848,017a747da650d81f3f92404ba6e4cb1e0edbaa05,en Boeckel <mathstuf@users.noreply.github.com>, 2017-08-07 16:32:35 -0400, , cmake support custom export group 970 pybind11 used via target installed parent project cmake want dependency built project export set project may set pybind11 put target project export set install pybind11 export file,,
849,ebd6ad588b6851d9dbf465b033b0f9d1acb4e54a,ason Rhinelander <jason@imaginary.ca>, 2017-08-07 15:48:49 -0400, , fix boost variant example forward args boost apply_visitor accepts argument non const lvalue reference fails bind rvalue reference change example remove argument forwarding,,
850,391c75447da13ef44cc2e119e005c0aeee442862,ason Rhinelander <jason@imaginary.ca>, 2017-07-25 16:47:36 -0400, , update remaining test new test style udpates remaining test new test suite code comment style started 898. part test coverage unchanged minor exception noted add overload test overload different number argument comprehensive overload_cast testing test style conversion broke overload test msvc 2015 prompting additional test looking workaround test_eigen dropped unused function get_cm_corners test duplicate thing provided used via returntester method test hidden dependence examplemanda fixed using global usertype suffices relevant test required addition usertype make usable replacement test previous simpletype usertype gained value mutator value property mutable previously readonly overload test also added better test overload_cast described removed untemplated mutate_data mutate_data_t templated version empty parameter pack expand thing test_stl already mostly new style tweak thing bit localizing class adding missing test_whatever comment like test_stl mostly new test style already needed test_whatever comment commit also move inherited virtual example code end file main set test since important test rather length also got renamed  test inherited virtual approach repeat approach,,
851,9866a0f994dc83d587314e58b7f5bfb179b5b3a2,ason Rhinelander <jason@imaginary.ca>, 2017-07-26 13:52:53 -0400, , test_class use gc_collect instead detail_reg_inst side effect,,
852,b468a3cefcf30c8fe4ff5c76cbab89bbe2c3a477,ason Rhinelander <jason@imaginary.ca>, 2017-07-25 21:46:54 -0400, , ignore undefined name long error python,,
853,3ed62218a8803e606d57e8589c2d5dc5cf61bfff,ason Rhinelander <jason@imaginary.ca>, 2017-07-27 20:17:05 -0400, , overload_cast msvc 2015 fix current overload_cast hitting ice msvc 2015 clang 3.8 debian rewritten test suite adding empty constexpr constructor class seems avoid ice,,
854,4b159230d9a7b543307fe5830df8fc9f17dd6482,ason Rhinelander <jason@imaginary.ca>, 2017-08-04 13:05:12 -0400, , made module_local type take precedence global type attempting mix module_local non module_local class result unexpected undesirable behaviour class registered non local module later attempt register locally fails need perfectly acceptable local registration simply override external global registration going way i.e module register type locally register type globally cause serious issue a.t constructor longer work self argument get converted b.t fails resolve changing cast precedence prefer local global fix make work consistently regardless module load order,,
855,2640c950ca1e7cd45ebce4a17448462db326bb5f,ason Rhinelander <jason@imaginary.ca>, 2017-08-04 10:42:39 -0400, , stash std string used tp_name internals type need tp_name set style string current strdup end leak issue 977 avoids strdup storing std string internals interpreter shutdown properly destroyed,,
856,7437c69500f973ac5640285f0857bab70ce56da3,ason Rhinelander <jason@imaginary.ca>, 2017-07-28 22:03:44 -0400, , add module_local attribute module local type binding commit add module_local attribute let confine registered type module technically shared object defined registering class_ module_local allow class registered different module independent set class definition python side two type completely distinct side type resolve different python type module applies module_local automatically stl_bind.h binding container value type look like something global i.e converting type example binding std vector int registered type bound module_local help resolve potential future conflict e.g two completely unrelated module try bind std vector int user override automatic selection adding module_local module_local false note doe mildly break backwards compatibility bound stl container basic type like std vector int bound one module returned different module enabled module_local false described potential eventual load conflict,,
857,d5981729934361f458d86fb9479b9ef68c26de9a,ason Rhinelander <jason@imaginary.ca>, 2017-07-28 21:38:23 -0400, , fix builtin exception handler work across module builtin exception handler currently work across module clang libc builtin pybind exception like pybind11 pybind11 stop_iteration rtld_local module loading clang considers module exception class distinct type mean base exception translator fails catch exception fall generic std exception handler completely break thing like stop_iteration stop_iteration first module loaded actually work properly later module raise runtimeerror message trying invoke iterators example two module defined like exhibit behaviour clang libc z1.cpp include pybind11 pybind11.h include pybind11 stl_bind.h namespace pybind11 pybind11_module bind_vector std vector long intvector  z2.cpp include pybind11 pybind11.h include pybind11 stl_bind.h namespace pybind11 pybind11_module bind_vector std vector double floatvector  python import z2.floatvector pas result traceback recent call last file zs.py line module z2.floatvector runtimeerror commit fix issue adding new exception translator time internals pointer initialized python builtins generally mean internals data initialized module extra translator skipped libstdc,,
858,0bd5979c7768664a02c83da1f9b672d328c6d6b3,ason Rhinelander <jason@imaginary.ca>, 2017-07-28 20:57:57 -0400, , add cross module test plugin add infrastructure separate test plugin cross module test commit contains test actually use following commits separated simply provide cleaner commit history,,
859,e98d31d697f8f0dd5623d309680eb6edede27662,ason Rhinelander <jason@imaginary.ca>, 2017-07-28 21:56:51 -0400,862, force hidden visibility function needing distinct static local commit add macro force function hidden visibility gcc gcc compatible compiler gcc particular need avoid sharing static local variable across module happens even rtld_local dlopen clang appear issue forced visibility internal pybind function certainly hurt icc update workaround 862 use rather version specific template,,
860,373da824869863459e0851c3ad5564073bf83d10,ason Rhinelander <jason@imaginary.ca>, 2017-08-03 19:27:04 -0400, , make convert type check fails currently type capable conversion always call convert function invoked object actually correct type mean code cast list obj list obj.attr list make copy oversight rather intentional feature first glance might something behind list obj make copy would python would inconsistent dig little deeper list make copy existing list inconsistency within would worse python inconsistency possible get around copying using list commit fix one place embed.h doe seems misuse really supposed dealing raw python returned value object derived wrapper supposed higher level change constructor converting type i.e anything using str bool_ int_ float_ tuple dict list set memoryview reference rather copy check function pass also add object constructor slightly efficient avoiding inc_ref check function pass,,
861,cca20a7f8d980dd9de2c1054076a7da6b51b5b5d,ason Rhinelander <jason@imaginary.ca>, 2017-07-29 03:56:01 -0400,960, fix occassional segfault introduced 960 fix 960 could result type registered multiple time __init__ called multiple time happen perfectly ordinarily python side multiple inheritance involved example diamond inheritance pattern intermediate class invoking parent constructor change 960 multiple __init__ call meant called multiple time deletion deleted thus future instance type allocated location pybind would pick registered type fix issue tracking whether value pointer registered avoid double registering also slight optimization needing lookup type known registered secondary,,
862,85d63c3bcd233d15e140d3cff2c244148b5c141f,ason Rhinelander <jason@imaginary.ca>, 2017-07-29 03:54:25 -0400, , superclass typo fix actually affect anything mi3 constructor doe invoke mi2 argument anyway,,
863,12be4cd418d168aee4c04fe76a0917fbef1b2402,ason Rhinelander <jason@imaginary.ca>, 2017-07-29 03:53:45 -0400, , remove debugging meant committed meant optimization never used,,
864,1682b67326dcf44c2b221f664c219871f22d166a,ason Rhinelander <jason@imaginary.ca>, 2017-07-20 23:14:33 -0400, , simplify complicated need partly manages reference count rather using object partly try exception clearing needed commit greatly simplifies fix 927 using object instead pyobject mean rely implicit copy move constructor current logic pyerr_clear deletion pyerr_fetch creation see pyerr_clear deletion ever useful fetch creation clear error way pyerr_clear deletion could anything exception raised object alive case clearing exception seems wrong code worried exception handler raising another exception would already catch second exception code destructor called clear clear little bit paranoid needed called restore restore currently captured error immediately cleared using pyerr_restore release reference unnecessary valid release reference manually update code simply release reference three object preserving gil acquire clear however also side effect clearing current error even current current error e.g previous restore clear call really see clearing error ever actually useful way current error could set called restore case current stored error related member already released code raised error case clear object clearing error responsible neither seem like intentional desirable feature manually requesting deletion stored reference similarly seems pointless made clear empty method marked deprecated also fix minor potential issue destruction technically possible value null though seems likely rare practice update check look type always non null fetch exception also add round trip throw test test suite,,
865,abcf43d59c16542e20175d1522d13518b341967f,ason Rhinelander <jason@imaginary.ca>, 2017-07-23 12:26:17 -0400, , convert test_exceptions new testing style,,
866,353615f77e0b1922d0d9df3cf980a517eada88d2,ason Rhinelander <jason@imaginary.ca>, 2017-07-25 00:53:23 -0400, , make init_holder registration rename init_instance instance registration offset base type fails macos segfault presense virtual base type issue occurs trying static_cast base derived_ptr derived_ptr allocated via operator new initialized commit fix issue moving addition init_holder rather immediately value pointer allocation also renames init_instance since doe holder initialization also renamed init_holder since init_holder used anymore fix 959,,
867,44a17e1f3d92d17fdefb6a50c021a8c4a1f9d87d,ason Rhinelander <jason@imaginary.ca>, 2017-07-25 00:05:15 -0400, , convert new style significant rearrangement new test added,,
868,793726014d4ea879950f5a7c8f7c6684d51e544b,ason Rhinelander <jason@imaginary.ca>, 2017-07-27 14:55:17 -0400, , detect std pair non copyability pre std pair technically copy constructor even though actually invoked without compilation failure due underlying type non copyable stls including libc since 3.4 use behaviour exposing uncallable copy constructor freebsd deliberately broke libc preserve nonsensical behaviour http base view revision revision 261801 update pybind internal also detect std pair case pre also everything except couple case internal version use internal rather std,,
869,e07f75839ddba5e41a7c22cf1dddc73ddc1ce5ad,van Smirnov <aldanor@users.noreply.github.com>, 2017-07-23 16:02:43 +0100, , implicit conversion bool np.bool_ conversion 925 add support implicit conversion bool python type __bool__ python __nonzero__ python attribute add direct i.e non converting support numpy bools,,
870,a03408c8398b9d97ed60f6af24513a788a79fcd6,ason Rhinelander <jason@imaginary.ca>, 2017-07-23 00:32:58 -0400, , add support custom sized operator deletes 952 class provide operator delete void doe operator delete void size_t latter invoked delete somet pybind currently look call former commit add detection calling latter former exist,,
871,7c0e2c247b5b5bab41cd7e9fddd37e5617995e5f,ustin Spicuzza <dustin@virtualroadside.com>, 2017-07-22 21:36:08 -0400, , document automatic upcasting polymorphic type 654 resolve 645,,
872,2e37fe09e134112dd3451294f18022f3307f90ce,ean Moldovan <dean0x7d@gmail.com>, 2017-06-29 11:42:54 +0200, , fix compatibility make sure libsnew run correctly called old libs,,
873,cb3d4065febed88ba3f7129e8188dc0d4c9cba57,ennorth <ben@redfrontdoor.org>, 2017-07-20 14:21:31 +0100, , fix refcounting tp_base object new type 950 fix difficult reproduce segfault python interpreter exit ensure tp_base field handful new heap type counted reference base type object,,
874,60526d463650487ca6aa8b6e15d0522df03a4835,ason Rhinelander <jason@imaginary.ca>, 2017-07-07 17:26:14 -0400, , support take_ownership custom type caster given pointer change pointer cast recognize take_ownership policy casting pointer take ownership cast recall cast dereferenced rvalue rather previous code always calling const lvalue reference deletes pointer chained cast complete make code like m.def return new std vector int 100 take_ownership expected thing taking ownership returned pointer deleted chained cast completes,,
875,67a0cc4eed34a164628fe0f7380ed70abd4b9a54,ason Rhinelander <jason@imaginary.ca>, 2017-07-06 20:41:52 -0400,936, fix regression container pointer castable 936 broke ability return pointer stl container likewise tuple added deduced type matched non const pointer argument pointer accepting cast const type worse match non const pointer universal reference template 936 added change provided type_caster cast ptr take pointer template arg accept either const non const pointer two effect slightly reduces .so size many type caster never actually need pointer cast allows type caster provide untemplated pointer cast take precedence templated version provided macro,,
876,fad5d3386ce76807a6195d069bed8b0fee5ddcab,ason Rhinelander <jason@imaginary.ca>, 2017-07-12 14:59:16 -0400, , detect standard unconditionally currently set externally set called embed target setup run unconditionally make use set yet commit remove function completely always run standard detection code also tweak detection code bothering checking std flag std detection succeeded,,
877,6b51619a7cc5a34bbcd4474fb70954d009cebb64,ason Rhinelander <jason@imaginary.ca>, 2017-07-12 11:50:40 -0400, , fix test suite msvc debug debug build msvc apply copy move elision often triggering test failure relaxes test count requirement let test suite pas,,
878,a403d0e675f8c07ded3a83b58771341a66aa36ca,ason Rhinelander <jason@imaginary.ca>, 2017-07-12 10:18:09 -0400, , fix past end dereference value holder iterator code past end iterator dereference course invalid dereference actually cause problem caught dereferenced value never actually used vector implementation appear allow dereferencing past end iterator msvc debug build however fails debug assertion abort amends iterator store use pointer vector rather adding second past end iterator member checking type index type vector size,,
879,fd47779f40120e4257856ace044a91c3948ee98e,ason Rhinelander <jason@imaginary.ca>, 2017-07-06 09:53:35 -0400, , travis switch debian buster build python 3.6 buster python3 numpy scipy package support python 3.6,,
880,706a7d96bd42a97f34f578af38a18666427a440d,ean Moldovan <dean0x7d@gmail.com>, 2017-07-04 01:27:18 +0200, , fix compilation intel compiler icc reporting constexpr handle literal type fix remove constexpr function since strictly needed commit also suppresses new false positive warning mostly appear constexpr context compiler know conversion safe,,
881,b57281bb00582e1c8046aa6c39e0faf143742baa,ason Rhinelander <jason@imaginary.ca>, 2017-07-03 19:12:09 -0400, , use rvalue subcasting casting rvalue container update std tuple std pair stl.h type caster forward contained value according whether container cast lvalue rvalue reference fix issue subcaster cast always called const lvalue meant nested type caster desired cast overload invoked example caused eigen value tuple end readonly flag issue 935 made impossible return container move type issue 853 fix issue adding templated universal reference cast method various container type forward container element according container reference type,,
882,897d71687e4c4e15e8f5f76f4662955c3228aedf,ason Rhinelander <jason@imaginary.ca>, 2017-07-04 14:57:41 -0400, , combine std tuple std pair logic std pair caster written special case std tuple caster combine via base tuple_caster class essentially identical previous std tuple caster also remove special empty tuple base case returning empty tuple relatively rare base case still work perfectly well even tuple type empty list,,
883,23bf894590be0af06c6cbd9ec391aaa86ec25683,ason Rhinelander <jason@imaginary.ca>, 2017-05-16 11:07:28 -0400, , override deduced base class defining derived method defining method member function pointer e.g .def derived run problem derived actually implemented base class base base pybind registered happens class type deduced member function pointer becomes lambda first argument deduced type base class implementation deduced type base derived generate registered overload take base first argument trying call fails base registered e.g implementation detail class intended exposed python type caster unregistered type always fails commit add method_adaptor function rebinds member function derived type member function otherwise i.e regular function lambda leaf argument used class definition bound type registered rather potential base type closely related fix commit similarly update lambda used def_readwrite related bind class type registered rather deduced type registering property resolve base class member similarly generates usable function fix 854 910 authored dean moldovan dean0x7d gmail.com,,
884,259b2fafea69c546111f1eab814e46afed17a1e6,ason Rhinelander <jason@imaginary.ca>, 2017-07-01 16:31:49 -0400, , fix unsigned error value casting casting unsigned type python int currently cast using unsigned long long src.ptr python cast fails return unsigned long cast unsigned long long mean get 4294967295 equal unsigned long long detect failure commit move unsigned casting detail as_unsigned function upon error cast final type otherwise cast return value final type avoid problematic double cast error occurs error commonly show wherever long bit e.g bit window bit linux passing negative value bound function taking unsigned long fix 929 added test also trigger latent segfault pypy casting integer smaller long e.g casting uint32_t bit long architecture check python error also resulting intermediate value fit final type conversion error get value would overflow end calling illegally call allowed current exception pypy segfaults test suite appear segfault cpython documentation suggests could fix check exception match actually got error,,
885,30f6c3b36e580e49419f8775e2b22bea48b0929b,ean Moldovan <dean0x7d@gmail.com>, 2017-06-26 23:20:39 +0200, , fix indirect loading eigen ref put caster temporary array life support ensure correct lifetime used subcaster,,
886,af2dda38ef01bddec4434450f76ebb5875f59df7,ean Moldovan <dean0x7d@gmail.com>, 2017-06-26 20:34:06 +0200, , add life support system type_caster temporary,,
887,6b442ff9e1f9b87e01dc016ac6c25b6520f9685b,van Smirnov <i.s.smirnov@gmail.com>, 2017-06-23 18:40:43 +0200, , python pybind11 includes print include path,,
888,34b7b54f2947ecc5b15d3dc60ee61aa60b8ef270,ndreas Bergmeier <a.bergmeier@dsfishlabs.com>, 2017-05-09 15:01:22 +0200, , add test passing stl container pointer nullptr expected work case,,
889,c67033a92680eb401c0221fe0ad9a4e804fa6e7a,ean Moldovan <dean0x7d@gmail.com>, 2017-06-25 15:16:34 +0200, , move target code subdirectory,,
890,0bc272b2e98d57ce5b54dc6f4fc5a8c1defc6ebe,ean Moldovan <dean0x7d@gmail.com>, 2017-06-22 23:42:11 +0200, , move test short translation unit logical parent,,
891,83e328f58c18799d370520ff016aa33163fb1e8d,ean Moldovan <dean0x7d@gmail.com>, 2017-06-09 00:44:49 +0200, , split builtin_casters stl pytypes,,
892,bdfb50f38491b18fed98cb94d5dd740c2f93972b,ean Moldovan <dean0x7d@gmail.com>, 2017-06-07 16:52:50 +0200, , move test test_issues.cpp appropriate file,,
893,44e9a4e6cf245432dccf4c8d90b6ac8d2963aaaa,ason Rhinelander <jason@imaginary.ca>, 2017-06-26 16:18:09 -0400, , travis switch gcc build buster remove allow_failures gcc debian testing buster proper stable upstream release update associated travis use buster rather sid remove build allow_failures,,
894,2bde61500d0719c344a238cd11124d0755370f36,ean Moldovan <dean0x7d@gmail.com>, 2017-06-25 17:35:44 +0200, , fix invalid reference definition string conversion doc skip,,
895,cd2d3ad5df688e7df208896ace31364350488b7e,ean Moldovan <dean0x7d@gmail.com>, 2017-06-24 21:00:18 +0200, , fix embedded thread test msvc2015 python 2.7,,
896,9d698f7fcc21c56ef59f6814631d722dcb466dcc,ruce Merry <bmerry@gmail.com>, 2017-06-24 14:58:42 +0200, , hold strong reference keep_alive patient fix 856. instead weakref trick internals structure hold unordered_map pyobject vector reference avoid cost unordered_map lookup object keep_alive patient flag added instance indicate whether anything,,
897,219669674675cf26c5a07de8f4da1397cd982d0e,ason Rhinelander <jason@imaginary.ca>, 2017-06-21 13:38:10 -0400, , use std type_info name type lookup outside stdlibc using std type_info operator fails libc .so loaded rtld_local libc considers type .sos distinct comparing typeid value directly going work add custom hasher equality class type lookup map stdlibc add detail same_type function perform equality test also convert pointer argument const lvalue reference particularly since pointer comparison technically valid though practice appeared work everywhere fix 912,,
898,2d6116b53ff702b6a6953583c8d34fb7530ce42d,ean Moldovan <dean0x7d@gmail.com>, 2017-06-20 23:50:51 +0200, , fix gil release acquire embedding interpreter fix race condition multiple thread try acquire gil detail internals initialized tasked initializing internals guaranteed single threaded ensure safety subsequent acquire call multiple thread,,
899,f42af24a7d9259f41cdfad08f5f9d240b91ad16b,ason Rhinelander <jason@imaginary.ca>, 2017-06-18 20:32:22 -0400, , support std string_view compiled,,
900,220a77f5cdf685f96c2023812d2b1e67bda23d31,ason Rhinelander <jason@imaginary.ca>, 2017-06-18 21:17:42 -0400, , endian wording fix,,
901,aee409dc8d601d3bdeae4a0758cc5c54faa955bc,ason Rhinelander <jason@imaginary.ca>, 2017-06-18 21:17:13 -0400, , fix strings.rst style wrapped long line removed trailing space,,
902,ce7024fdf54372508ae9647d8c2547945de357e1,ean Moldovan <dean0x7d@gmail.com>, 2017-06-13 23:47:43 +0200, , fix linker issue move constructor msvc fix issue described comment commit e27ea47 add enable_if_t std value change fix msvc harmless compiler,,
903,24dec80b44b5980f348e99b410893fb139836965,ean Moldovan <dean0x7d@gmail.com>, 2017-05-31 16:44:41 +0200, , help clion ide evaluate clion slows crawl evaluating intricate macro commit replaces macro cascade simple void ease ide evaluation,,
904,e067c5842bf2b55b3f06a6afbe3f1bb3e10fd1e7,ason Rhinelander <jason@imaginary.ca>, 2017-06-18 12:55:00 -0400, , switch debian docker image stretch debian stretch released debian testing debian stetch starting diverge commit keep travis docker image stretch gcc6 clang3.9 debian also moved gcc experimental unstable switch gcc7 build sid migrates testing switch gcc build docker image testing take failure allowed,,
905,13d8cd2cc7566de34d724f428ea7a6b6448d6a0c,hilip Austin <paustin@eos.ubc.ca>, 2017-06-15 06:45:11 -0700, , add capsule name capsule constructor allows named capsule constructed capsule,,
906,28f3df7ff3c666e77f9c7eb46f14dac652885210,an Bell <ian.h.bell@gmail.com>, 2017-06-14 20:33:45 -0600, , fix typo embedding.rst,,
907,d080f833beb7e18944961d523d408c524b70001a,ason Rhinelander <jason@imaginary.ca>, 2017-06-14 15:19:42 -0400, , make check style.sh work stock macos tool check style.sh fails stock currently fix use pipe directly rather exec redirection macos ancient version bash fails latter macos ancient bash support escape echo replace 033 instead bsd grep support grep_colors doe allow grep_color adding hurt gnu grep grep_color deprecated used grep_colors set bsd grep collapse multiple listed filename failure include would include pybind11 whatever.h remove include directory argument minor change crlf detection run grep_colors anything removed trailing whitespace test would trigger crlfs would result messed output changed test match trailing space tab rather whitespace,,
908,404bcf259d45c264098279a50c66ee1204a487d3,ason Rhinelander <jason@imaginary.ca>, 2017-06-14 11:49:40 -0400, , travis clang 4.0 install use ldd 4.0 clang 4.0 cpp17 build enabling flto system linker like output generated clang reason switch build use llvm lld instead let flto work link considerably faster,,
909,2cc1916eaf91011d2a11c3ec04b41ec1a9a3b5a1,ason Rhinelander <jason@imaginary.ca>, 2017-06-11 21:20:03 -0400, , upgrade pypy 5.8 use pre built numpy scipy wheel numpy 1.13.0 fails pypy 5.7.1 upgrade 5.8.0. also uploaded pre built .whl file imaginary.ca checked every hour rebuilt needed list extra pypi location pypy pip install avoid long travis pypy build time new release branch,,
910,e45c2114974a872674745a082828f07b34ea4721,ason Rhinelander <jason@imaginary.ca>, 2017-02-22 21:36:09 -0500, , support multiple inheritance python commit allows multiple inheritance pybind11 class python e.g class mytype base1 base2 def __init__ self base1.__init__ self base2.__init__ self base1 base2 pybind11 exported class requires collapsing various builtin base object ... introduced 2.1 single pybind11_object fixed size fixed size object allocates enough space contain either simple object one base class small holder instance pointer new allocation contain arbitrary number base class holder holder size unrestricted small mean sizeof pointer enough fit unique_ptr sizeof ptr shared_ptr sizeof ptrs minimize performance impact repurposes internals store vector pybind registered base type direct use pybind type e.g pya simply storing thing vector python side inherited type map let avoid base class traversal long seen class change vector needed multiple inheritance python type inheriting multiple registered base one entry per base,,
911,caedf74a8943e5fe000399b2e156a4724212bd01,ean Moldovan <dean0x7d@gmail.com>, 2017-06-09 16:49:04 +0200, , fix make_iterator __next__ past end call fix 896 python doc iteratorâ __next__ method raise stopiteration must continue subsequent call implementation obey property deemed broken,,
912,17cc39c818ecc59180a7ad6be659cbeeeb83d9a1,ean Moldovan <dean0x7d@gmail.com>, 2017-06-09 15:33:09 +0200, , let pytest discover test test_embed pytest raise error recurses directory,,
913,74b501cd859ae1f44b1f60de13022f3ccbf8aa90,en Frederickson <github@benfrederickson.com>, 2017-06-06 12:31:41 -0700, , fix passing utf8 encoded string python passing utf8 encoded string python function taking std string broken previous version trying call data failed convert string unicode default ascii codec also incurs unnecessary conversion unicode data immediately converted back utf8 fix treating python string python byte object copying data possible,,
914,0365d491b5ddc9c2cb3b012eb765335490891b63,ason Rhinelander <jason@imaginary.ca>, 2017-06-08 16:57:49 -0300, , remove feature macro experimental optional libc 3.8 possibly others including derived version define macro doe support std experimental optional remove extra macro check assumes header existing enough optional variant,,
915,e27ea47c8705427dd2e8375921d0a7a2d874a90e,ean Moldovan <dean0x7d@gmail.com>, 2017-06-08 18:21:12 +0200, , enable detection private operator new msvc msvc 2015 update 2017 handle enough expression sfinae make work,,
916,6223b18cea153a81c07bb837ac31169c0fd23ce4,atthew Chan <chanmhy@mcmaster.ca>, 2017-06-08 13:55:30 -0400, , update basics.rst fix spelling,,
917,4edb1ce20c323c0e91cdbb0f309f15550eaafb5d,ason Rhinelander <jason@imaginary.ca>, 2017-06-07 12:35:39 -0300, , destroy internals created py_finalize py_finalize could potentially invoke code call get_internals could create new internals object one exist catch used pre finalize interpreter pointer status happens result internals pointer properly destroyed interpreter leak also cause get_internals future interpreter return internals object wrong various way,,
918,ef2dfd47ba3887d3767bab767e50df751a7d2e9b,ean Moldovan <dean0x7d@gmail.com>, 2017-06-07 13:54:58 +0200, , tweak github issue template skip,,
919,1d3c4bc54dcc8bb018c319d12ade7a91adfb0041,ean Moldovan <dean0x7d@gmail.com>, 2017-06-06 17:05:19 +0200, , fix missing default globals eval exec embedding fix 887,,
920,91bbe2f2e59b1586db12bc6fd94b88155c448d48,irrgang <mei2n@virginia.edu>, 2017-06-06 11:57:17 -0400, , explicitly define copy move constructor accessor accessor currently relies implicit default copy constructor deprecated copy assignment operator present case raise deprecation warning see 888 commit explicitly specifies default copy constructor also add default move constructor,,
921,8f6c129689fbda86f6e98c0d34ea42d744a00d33,ean Moldovan <dean0x7d@gmail.com>, 2017-05-31 13:48:39 +0200, , fix cmake example code embedding doc skip,,
922,acedd6c70ce192e79047fe5111287fbc14b1eab5,ason Rhinelander <jason@imaginary.ca>, 2017-05-12 13:40:05 -0400, , std non generic type none reimplements std caster shell around underlying caster rather assuming generic type let work thing like std int anything else custom type caster lvalue cast operator also make properly fail none provided ordinary lvalue reference argument would similarly fail also add static assert test appropriate type caster trigger caster like std pair return value cast operator theory could supported storing local temporary type beyond scope  also replaces automatic take_ownership return value policy taking ownership reference inside valid,,
923,7cdf9f1a68ce5318685a4709f100009de3316bc6,ason Rhinelander <jason@imaginary.ca>, 2017-05-12 13:11:08 -0400, , move test test_issues test_issues deprecated following commit add related test,,
924,005fde6a7fba409390317dd4e8e4fdb0e36cf951,ean Moldovan <dean0x7d@gmail.com>, 2017-05-28 22:39:05 +0200, , filter warning pytest v3.1 new version pytest report python warning default commit filter third party extension warning useful pybind11 test,,
925,443ab5946b0a9dd77e07ec2c7ee2e30c1869430a,ean Moldovan <dean0x7d@gmail.com>, 2017-04-24 01:51:44 +0200, , replace pybind11_plugin pybind11_module commit also add doc object_api shortcut attr __doc__ accessor module macro change  pybind11_plugin example pybind11 module example pybind11 example plugin m.def add int int return return m.ptr     pybind11_module example m.doc pybind11 example plugin m.def add int int return   using old macro result deprecation warning warning actually point pybind11_init function since attribute bind macro message quite clear pybind11_plugin deprecated use pybind11_module,,
926,b700c5d6723acce634526e53dee3b87660259f1e,annick Jadoul <yannick.jadoul@belgacom.net>, 2017-05-29 03:13:55 +0200, , convenience constructor template buffer_info 860 added template constructor buffer_info deduce item size format string number dimension pointer type shape container implemented actual buffer_info constructor private delegate constructor taking rvalue reference workaround evaluation order move problem gcc 4.8,,
927,427e4afc695f73243f41d8ff030ad837bc9de579,ean Moldovan <dean0x7d@gmail.com>, 2017-05-28 16:35:02 +0200, , fix buffer protocol inheritance fix 878,,
928,6d2411f1ac09b5669ab48834fb38079bb4ca95b9,ean Moldovan <dean0x7d@gmail.com>, 2017-04-22 23:24:13 +0200, , add tutorial page embedding interpreter,,
929,931b9e93ab16884ab98aa914015a3255b0ec3b62,ean Moldovan <dean0x7d@gmail.com>, 2017-04-20 23:40:56 +0200, , support restarting interpreter subinterpreters,,
930,22c413b196af9a2913c3b66422202623c1f0b031,ean Moldovan <dean0x7d@gmail.com>, 2017-03-30 00:20:42 +0200, , add interface python interpreter,,
931,9693a5c78f0b6dc6a24dd019a44e8af4b260a1dc,ean Moldovan <dean0x7d@gmail.com>, 2017-03-23 17:27:32 +0100, , add catch framework testing embedding support side feature point single test interpreter basic apart embedding test framework also benefit side feature allowing tested directly,,
932,7f5c85c861e56c0bb9563eaaba2615c70773b9a5,ean Moldovan <dean0x7d@gmail.com>, 2017-03-23 13:32:54 +0100, , add cmake target embedding python interpreter target provided pybind11 pybind11 module existing target creating extension module pybind11 embed new target embedding interpreter pybind11 pybind11 common base target header,,
933,46dbee7d423f44bbf1f8a216a6f6bb1bf85b95b5,ruce Merry <bmerry@gmail.com>, 2017-05-26 08:52:54 +0200,851, avoid explicitly resetting std experimental optional 851 removed multiple caster use default constructed value needing reset fix two issue std experimental optional least gcc 5.4 would construct instance optional type move assign fails value type move assignable older version boost could fail ambiguous allowing construction either boost none value type,,
934,4f9ee6e430048ef87801423eeeb2506a8145d7ec,ason Rhinelander <jason@imaginary.ca>, 2017-05-26 23:20:48 -0400, , fix exception reference error exc valid,,
935,39b9e04be8bc9655dc5198a4e3e54ce5f6c55f2b,henzy <chenzeyuczy@qq.com>, 2017-05-26 16:46:00 +0800, , correct error numpy.rst,,
936,eee4f4fc7ea10fdde4216ea677b5acbf85b856be,ruce Merry <bmerry@ska.ac.za>, 2017-05-25 15:17:36 +0200, , fix invalid memory access vector insert method stl_bind.h wrapper vector.insert neglected bound check,,
937,6a0f6c40cd00f16fd3d145db1ae0f897da716965,ruce Merry <bmerry@ska.ac.za>, 2017-05-25 15:04:40 +0200, , fix quadratic time behaviour vector extend extend method vector defined stl_bind.h used reserve allocate space extra growth sometimes make constant factor improvement performance also cause construction vector repeated extension take quadratic rather linear time memory reallocated small increment rather exponential schedule example python code would take time proportional square trip count python vectorint vectorint range 100000 b.extend  commit remove reserve call alternative would try add smarter heuristic standard library may well heuristic iterators random access iterators easily determine number item added trying add heuristic top seems like bad idea,,
938,8dc63ba941e80a9fc515c28d5bb9ae0bbd5acc07,ason Rhinelander <jason@imaginary.ca>, 2017-05-25 01:05:49 -0400,869, force msvc compile utf mode msvc default local codepage fails see utf add utf flag test suite compilation force interpret source code utf fix 869,,
939,f3ce00eaed443ae1375364866dc74c10bd864558,ason Rhinelander <jason@imaginary.ca>, 2017-03-26 00:51:40 -0300, , vectorize pas non vectorizable args extends vectorize automatically pas non vectorizable argument remove need documented explicitly exclude argument workaround vectorization applies arithmetic std complex pod type passed plain value const lvalue reference previously pas value type supported non const lvalue reference type passed function rvalue reference argument whether vectorizable explicitly prohibited rvalue reference inherently something passed multiple time thus unsuitable vectorized function vectorize returned value also sensitive input previously would return value input size amended input size dimension thus pas example get back 1x1 array previously got back resulting single value vectorization member function specialization also supported via vectorize class method required passthrough support initial object pointer wrapping function pointer,,
940,41f8da4a95fae187cb74cc5dc4acc6d525bdeeda,ason Rhinelander <jason@imaginary.ca>, 2017-03-27 11:03:16 -0300, , array_t make c_style f_style work array creation currently construct array_t array f_style shape stride get style array way get style stride calculate stride manually commit fix adding logic use f_style stride flag set also simplifies existing c_style stride logic,,
941,129a7256a95a13f8087d42445e081c196e7c84a3,ason Rhinelander <jason@imaginary.ca>, 2017-03-26 00:01:52 -0300, , add use detail add convert various typename std ... type using,,
942,926e2cf333bad8c0b1cd4aba8bf929c43cda8708,ason Rhinelander <jason@imaginary.ca>, 2017-03-25 22:41:06 -0300, , add macro allows calling function typically void parameter pack replacing usage bool unused voidfunc param_pack_arg false ... false void unused much cleaner voidfunc param_pack_arg,,
943,4e1e4a580e8db16b219d7839de6de8f1ed092896,ason Rhinelander <jason@imaginary.ca>, 2017-05-17 11:55:43 -0400, , allow arg .none false argument attribute attribute let disable explicitly enable passing none argument otherwise would allow accepting value raw pointer shared_ptr,,
944,813d7e868746f106f9ebb98decae55219d97a722,ason Rhinelander <jason@imaginary.ca>, 2017-05-14 15:57:26 -0400, , add movable cast support type caster commit allows type_casters allow local value moved away rather copied type caster instance rvalue applies automatically type caster using generic type type caster pointer various value caster e.g std string std pair arithmetic type already cast rvalue i.e return value update various calling code attempt get movable value whenever value coming type caster destroyed example constructing std pair various stl.h container type support value moving cast_op fall back lvalue cast obvious place add test added also renamed drop _policies test policy,,
945,fe0cf8b73b8e068c205e062c779eb694b194d6b4,ruce Merry <bmerry@ska.ac.za>, 2017-05-17 10:52:33 +0200, , support pointer member function def_buffer close 857 adding overload def_buffer match pointer member function wrap lambda,,
946,37b2383a646c93f531ae4275c0957902b18afe03,ason Rhinelander <jason@imaginary.ca>, 2017-05-22 12:06:16 -0400, , style cleanup javadoc style comment change javadoc style documenting comment text start continues    test start continues  look little better also match javadoc recommended way writing documenting comment,,
947,b8ac438386363d5b50e0be52157034be9cd2c2bb,ason Rhinelander <jason@imaginary.ca>, 2017-05-19 13:34:55 -0400, , use dynamic cast holder init using dynamic_cast instead static_cast needed safely cast base derived type previous safe however downcasting fails compile downcasting virtual inheritance switching always use incur additional overhead safe i.e upcasting self casting compiler need rtti check case,,
948,35998a0314d4660ccbf1341eb5c55d72236570de,ason Rhinelander <jason@imaginary.ca>, 2017-05-20 20:34:51 -0400, , define __div__ __truediv__ python python requires __div__ __truediv__ variant compatibility regular python python __future__ import division without division fails one case,,
949,1ac51a02f7671cda3b0a7065e59ca2908a88d8cd,ason Rhinelander <jason@imaginary.ca>, 2017-05-20 20:33:18 -0400, , minor operators.h style cleanup realign end macro line use using rather typedef use conditional_t,,
950,acad05cb13a64ec55cfa676bb0b58b2fc1af5542,ason Rhinelander <jason@imaginary.ca>, 2017-05-20 20:19:26 -0400, , fix operator python python method set __idiv__ __itruediv__ python totally broken without defined python construct new object calling __truediv__ operator test however actually test operator added saw extra construction leading problem commit also includes test previously untested operator add element wise vector multiplication division operator,,
951,d2da33a34a255c77e96f1add10a2ef05b0240f39,ason Rhinelander <jason@imaginary.ca>, 2017-05-20 11:21:19 -0400, , static_assert testing ssize_t size_t numpy stride size etc signed static_assert get updated match,,
952,a4d0d95e2ec717f15b42cd3e4b3bbccf12f57d57,ason Rhinelander <jason@imaginary.ca>, 2017-05-17 18:29:53 -0400, , make static internals ptr pybind version specific gcc static internals internals_ptr shared across .so break obvious reason commit fix moving static pointer declaration pybind version templated function,,
953,731a9f6ceaf061a7630b4d859515bf3f2ebe3892,ason Rhinelander <jason@imaginary.ca>, 2017-05-16 09:38:58 -0400, , fix py_buffer leak getbuffer failure fix 852,,
954,4567f1f82a72726b1c03cf0927212ade372c7f10,ean Moldovan <dean0x7d@gmail.com>, 2017-05-11 15:38:39 +0200, , fix eigen shape assertion error dense matrix caster missing conformability check causing eigen create 0x0 matrix error debug mode silent corruption release mode,,
955,94d0a9f7bcf163138968585c5e9965232ae0fa6f,ean Moldovan <dean0x7d@gmail.com>, 2017-05-10 11:15:17 +0200, , improve constructor resolution variant_caster currently int_ .cast variant double int fill double slot variant commit switch loader pas scheme order correctly fill int slot,,
956,93e3eac6f94832d53aea6b19924a803942b416fb,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 13:08:04 -0400, , defer none loading second pas many is_none check type caster loading return true really considered deferral example overload none argument would win one take none null option keep none accepting convert pas std optional void caster char caster already deferred none extends behaviour caster,,
957,7fb01ecd9c844e8644fb24c5db61ddf9e89d8062,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 14:14:34 -0400, , fix gcc warning gcc std compilation result several following warning file included home jagerman src pybind11 test home jagerman src pybind11 include pybind11 operators.h function pybind11 detail op_ pybind11 detail op_id pybind11 detail op_type pybind11 detail self_t pybind11 detail self_t pybind11 detail operator const pybind11 detail self_t const pybind11 detail self_t home jagerman src pybind11 include pybind11 operators.h warning inline declaration pybind11 detail op_ pybind11 detail op_id pybind11 detail op_type pybind11 detail self_t pybind11 detail self_t pybind11 detail operator const pybind11 detail self_t const pybind11 detail self_t follows declaration attribute noinline wattributes inline op_ op_ op_l self_t self_t const self_t const self_t  home jagerman src pybind11 include pybind11 operators.h 109 note expansion macro add radd operator  file included home jagerman src pybind11 include pybind11 cast.h home jagerman src pybind11 include pybind11 attr.h home jagerman src pybind11 include pybind11 pybind11.h home jagerman src pybind11 test home jagerman src pybind11 test home jagerman src pybind11 include pybind11 descr.h 116 note previous definition pybind11 detail descr pybind11 detail operator pybind11 detail descr pybind11 detail descr descr friend operator descr descr  appears happening gcc considering implicit construction descr place using addition two descr compatible argument descr.h fallback code particular reason operator need friend function commit change rvalue context member function operator avoids warning,,
958,b82c0f0a2daa5a672afd130c56989731b8d9dd29,ruce Merry <bmerry@gmail.com>, 2017-05-10 11:36:24 +0200, , allow std complex field 831 exposed underlying issue is_pod_struct strict allow relaxed require trivially copyable standard layout rather pod additionally requires trivial constructor std complex violates std complex format returned numpy format string instead pep3118 format string register_dtype feed format code field changed return pep3118 format code public type may considered incompatible change tried smart whether mark field unaligned however examining alignment rather numpy possibly pep3118 think alignment complex value different made mark field unconditionally always safe even aligned explicitly mark padding,,
959,8e0d832c7d84a3dd77f35828e1ff35045fc36fe7,ruce Merry <bmerry@gmail.com>, 2017-05-10 10:21:01 +0200, , support array inside 832 resolve 800 array std array supported including mixture like std array int multi dimensional array char last dimension used construct numpy string type,,
960,78f1dcf98f6bbb68bdefddb8d8c78e99e883d567,ean Moldovan <dean0x7d@gmail.com>, 2017-05-09 23:30:05 +0200, , fix std nullptr_t caster 840 fix compilation error std nullptr_t enable conversion none std nullptr_t std nullopt_t fix 839,,
961,77710ff01c069c0cfe3bab2bb77e80a505f88738,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 14:37:48 -0400, , make work msvc msvc ignoring simply passing standard make msvc default mode msvc 2015u3 added std std latest flag latter msvc 2017 enables feature std optional std variant something need start supporting msvc make cmake variable work msvc defaulting std matching default std non msvc also add new appveyor test running msvc 2017 std latest run pass std optional std variant test also updated documentation clarify flag add show msvc flag example,,
962,ca0e82b79f7115758b25f2ff275305329c85d05f,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 14:34:45 -0400, ," update pybind11_cpp1 4,7 macro msvc pybind11_cpp14 macro started guard compile time path code descr.h since come mean thing mean descr.h check checked pybind11_cpp14 macro various place check pybind11_cpp14 _msc_ver revers setting cpp14 macro msvc trying support disabling descr.h code still fails msvc 2017 cpp17 macro also get enabled msvc 2017 compiling std latest default std enables std optional std variant support msvc",,
963,d15b217f1abc1b9bf8bdc904772175bee6d6c77e,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 14:46:15 -0400, , disable wnoexcept type gcc,,
964,616e3d8fa3bc5ea07df8eb49139c506de9daed26,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 13:50:34 -0400, , attr.h fix header copy paste typo,,
965,88ebc49be6594a4857ed85c77c5480b7eea31bcc,ason Rhinelander <jason@imaginary.ca>, 2017-05-09 13:39:26 -0400, , gcc disable warning gcc generates compiling mode warning mangled name pybind11 class_ type_ option pybind11 class_ type_ option def const char func const extra ... func int test_exc_sp int noexcept extra type_ test_exc_sp option change exception specification part function type wnoexcept type nothing actually code avoid disable warning,,
966,076c738641547bd5f63d8b229d23f15201dc4f5e,ean Moldovan <dean0x7d@gmail.com>, 2017-04-30 01:53:06 +0200, , add exec shortcut eval eval_statements,,
967,0c4e0372a36a2389da1d661690d9358793f63829,ean Moldovan <dean0x7d@gmail.com>, 2017-04-29 21:31:06 +0200, , improve showing message compiler gcc support deprecated msg since v4.5 support standard deprecated msg since 2015 rtm deprecated constructor change default workaround vs2015 bug,,
968,36f0a15a49658da03c58ca42e88fe156b56429af,ean Moldovan <dean0x7d@gmail.com>, 2017-02-08 01:01:56 +0100, , deprecate handle operator favor object_api,,
969,30d43c4992f90ac7592fdbedd56c332717278c91,ris Luengo <cluengo@flagshipbio.com>, 2017-04-14 14:33:44 -0600, , shape size ndims itemsize also signed integer,,
970,b68959e822a619d1ad140f52c7197a29f4e6a06a,ason Rhinelander <jason@imaginary.ca>, 2017-04-06 18:16:35 -0400, , use numpy rather eigen copying current copy creating eigen map input numpy array assigning basic eigen type effectively eigen copy work negative stride though eigen allow commit make numpy copying instead allocating eigen type numpy copy input array numpy reference eigen object data also save copy type conversion required numpy conversion fly part copy finally commit also make non reference parameter respect convert flag declining load called noconvert pas convertible non array input array wrong dtype,,
971,627da3f135d3e01396f4ae911dc15145c1856cf0,ris Luengo <cluengo@flagshipbio.com>, 2017-04-06 11:34:39 -0600, ," making copy casting numpy array negative stride eigen return false stride negative case use stride 0,0 write negative stride element eigen throw assertion type_caster specialization regular dense eigen matrix doe second array_t ensure copy data case negative stride sure best way implement added todo tag linking change eigen bug 747 fixed allow eigen accept negative stride",,
972,d400f60c96312f32fafcb15168bbf56970ff3d3a,ris Luengo <cluengo@flagshipbio.com>, 2017-04-05 16:13:04 -0600, , python buffer object negative stride,,
973,2b941b38b403bc5b7a6d065e57c972937ccf40ee,ason Rhinelander <jason@imaginary.ca>, 2017-05-07 12:19:19 -0400, , add missing header setup.py,,
974,271b27ff1869d71e39f2e93af26ef4b941554f3d,ason Rhinelander <jason@imaginary.ca>, 2017-05-02 15:21:39 -0400, , remove obsolete comment,,
975,083a0219b5962a146a5e1556d7ce5e5187cb8bca,entity <unientity@gmail.com>, 2017-04-13 21:41:55 +0500, , array implement array resize,,
976,4ffa76ec56ad485607793227da5e04d260b7c5a8,ean Moldovan <dean0x7d@gmail.com>, 2017-04-21 23:54:41 +0200, , add type caster std variant variant like class,,
977,a01b6b805c97a66a796744e589b248b559086706,ason Rhinelander <jason@imaginary.ca>, 2017-04-24 12:29:42 -0400, , functional support bound method bound std function invoked bound method implicit bound self lost use detail get_function unbox function commit amends code use function unboxes special really function case make bound method stay bound rather unbinding forcing extraction function,,
978,7653a115bdffd2dac67bf30be86d1a84dec1e0f2,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-28 22:43:14 +0200, , pytest target add use_terminal flag added flag enables non buffered console output using ninja,,
979,e6fd2cd5abd6fd2a3f977a4d7af16645900511d6,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-28 14:46:52 +0200, , enum_ fix implicit conversion python 2.7 enumeration python 2.7 always implicitly converted integer depending target size patch add __long__ conversion function enabled 2.7 fix issue attached test case fails without patch,,
980,51d18aa252332e883c61b7cb45ed317146b372ce,ason Rhinelander <jason@imaginary.ca>, 2017-04-28 11:06:16 -0400, , fix ambiguous initialize_list argument remove convert arithemtic scalar constructor any_container result ambiguous call array_t float could intepreted either array_t float array_t float array_t float detail any_container removing convert arithmetic constructor reduces number implicit conversion avoiding ambiguity array array_t also add array array_t constructor taking scalar argument backwards compatibility,,
981,2761f78f11e8fb2fb0a3708bab36f910a36dc822,ason Rhinelander <jason@imaginary.ca>, 2017-04-28 13:10:00 -0400, , travis remove clang allow_failures job using released clang stable branch libc case added leave allow_failures still pre release compiler pulled debian experimental,,
982,0a90b2db712ae8ed65f544ce28db361b11e92118,ason Rhinelander <jason@imaginary.ca>, 2017-04-16 20:30:52 -0400, , let hide python hide via tp_descr_get prevents aliasing method via cls.attr cls.attr instead tp_descr_get return plain function called class pymethod called instance override behaviour pybind11 type special bypass ,,
983,a7f704b39bd3c6f62e4fa36179840cdb9f2127aa,ason Rhinelander <jason@imaginary.ca>, 2017-04-26 10:49:55 -0400, , fix python byte conversion std string char unicode support added 2.1 624 inadvertently broke accepting byte std string char argument restores separate path doe plain conversion i.e completely bypassing encoding decoding code single byte string type,,
984,ce494d65de445bdfbf397f71ce0979e6e1dc249e,ason Rhinelander <jason@imaginary.ca>, 2017-04-28 08:57:13 -0400, , add numpy version check 819 numpy api constant check past end api array numpy version old thus causing segfault current list function requires numpy 1.7.0 add check exception numpy old added feature version api element added numpy 1.4.0 could still segfault loaded 1.3.0 earlier given 1.4.0 released end 2009 seems reasonable enough worry case 1.7.0 released early 2013,,
985,1f8a100d38e1a9bc96586cef63a53a79e8d343a6,ason Rhinelander <jason@imaginary.ca>, 2017-04-21 19:01:30 -0400, , track base class pointer instance commits add base class pointer offset base class i.e due multiple inheritance pointer returned properly recognize existing instance without returning base class pointer cast existing instance pointer happens coincide instance pointer construct new instance quite possibly segfault ownership applied unequal base class pointer due multiple inheritance,,
986,14e70650fe097923354e64c88bb40a583c6dc488,ason Rhinelander <jason@imaginary.ca>, 2017-04-21 17:14:22 -0400, , fix downcasting base class pointer returned base class pointer either directly via detect runtime type using typeid end essentially pointer derived type invalid base class pointer non first base end invalid pointer could dynamic_cast derived type type pybind11 registered resulting pointer given base cast implementation necessarily valid back backup type commit remove backup type argument many argument cast ... instead doe derived pointer type decision type lookup dynamic_cast correctly get derived pointer also type lookup ensure pas wrong derived pointer backup type i.e type caster intrinsic type pointer needed since lookup needed calling base cast also change input type detail type_info rather second lookup cast,,
987,929009954b54cbdc3680b59a7a983b95e9a8c0a6,ason Rhinelander <jason@imaginary.ca>, 2017-04-20 15:09:20 -0400, , expose instance management function break instance management function class_support.h little bit pybind11 code use particular added doe doe also allows instance allocation without value allocation let cast.h use instance allocation rather separate implementation instance registration moved pair rather individual code add remove thing directory clear_instance doe everything need except deallocation helpful factory construction need able replace internals instance without deallocating clear_instance also call dealloc true even value false happen factory construction pointer moved one instance another holder copied i.e shared_ptr holder,,
988,deb85f46efcba5fea624ee89daea8144abd77c54,ean Moldovan <dean0x7d@gmail.com>, 2017-04-22 23:30:33 +0200, , switch regular breathe package travis breathe previously installed git master bug released version fix since migrated pypi skip appveyor,,
989,fb50ce1fefb047a8497f158d4020e579f62b7855,ason Rhinelander <jason@imaginary.ca>, 2017-04-16 21:58:29 -0400, , add static_assert raising error overload_cast got unexpected error code using overload_cast realized configured build std commit add fake overload_cast class mode trigger static_assert failure indicating needed,,
990,d355f2fcca2afc852aef40f96bfd40ee0b4712b0,ason Rhinelander <jason@imaginary.ca>, 2017-04-16 22:31:13 -0400, , allow mixed static non static overload currently fail runtime trying call method overloaded static non static method something python allow object either function instance ,,
991,90bac96321e3f189f4b60074c1e4ad782dd3ceb6,ason Rhinelander <jason@imaginary.ca>, 2017-04-14 17:50:44 -0400, , keep skipping buffer test pypy adding numpy pypy test exposed segfault caused buffer test first test explicitly skipped pypy second also seems cause occasional segfault marked requiring numpy explicitly skip pypy well workaround fix pypy fix found,,
992,d170731f6f638ffda80eff53df143224582b2c67,ason Rhinelander <jason@imaginary.ca>, 2017-04-14 16:55:11 -0400, , remove unneeded export various bash variable used travis script need propagate e.g cmake pointlessly exported remove export,,
993,f0c7c008156bbb2e4b5791eb086d7ec9ca384ae4,ason Rhinelander <jason@imaginary.ca>, 2017-04-14 16:53:14 -0400, , switch clang 4.0 build trusty cache libc trusty container rather docker clang 4.0 build also cache local libc installation need compiled every time speed job considerably,,
994,3d5005168bc5ec24b1901c1e821b5a214d20d53c,ason Rhinelander <jason@imaginary.ca>, 2017-04-13 14:18:13 -0400, , travis switch trusty cache pip package applies several change non docker travis build make build use trusty rather precise pybind really build precise anyway install essentially entire toolchain backported trusty every build save needing install backported package build setup updated 3.5 build 3.6 via deadsnakes backport 3.6 ubuntu release earlier trusty result switch trusty barebones build pick default installed python 3.5 installation invoke pip everywhere via python pip rather pip executable save figure pip executable ensures using correct pip install package pip user rather virtualenv add local user python package archive travis cache rather pip cache save needing install package installation unless update case package cache updated install numpy scipy pypy build build source blas fortran need installed build given caching build slow first build new numpy scipy release testing valuable numpy various behaviour difference pypy added set around before_install install block failure e.g pip install failure dependency download failure trigger build failure update eigen version latest 3.3.3 mainly consistent appveyor build travis trusty environment upgraded cmake downgrade cmake stock trusty version first couple job still including cmake 2.8.12 testing,,
995,b4cbd7a1fea96264e166b0bcaeaf7a66eac5ba60,ason Rhinelander <jason@imaginary.ca>, 2017-04-17 11:57:46 -0400, , appveyor disable fast_finish build randomly failing fast_finish reenable appveyor stabilizes,,
996,2d14c1c5db04d4d09cb62196f64cfb87908075af,ason Rhinelander <jason@imaginary.ca>, 2017-04-15 11:12:41 -0400, , fixed bad_arg_def import try define issue submodule fails testing without issue compiled e.g using cmake,,
997,02ffbf16fe7cfb78cdfaa5b6e1ac3385355823b2,ason Rhinelander <jason@imaginary.ca>, 2017-04-14 13:57:49 -0400, , fix leak accidentally dropped setting resulting buffer never released view always nullptr,,
998,201796d94f29a6ab25628505c44c036d2dc43cad,ason Rhinelander <jason@imaginary.ca>, 2017-04-12 18:35:46 -0400, , make any_container implicitly constructible arithmetic value reduces constructor required buffer_info numpy removing need constructor take single size_t forward via container accepting constructor unfortunately array one constructor run ambiguity problem deprecated array handle bool constructor bool constructor any_container constructor involve implicit conversion neither precedence forwarding constructor kept deprecated constructor eventually removed,,
999,5f38386293f989db87545ce8a619e55085068060,ason Rhinelander <jason@imaginary.ca>, 2017-04-07 15:49:54 -0400,782, accept abitrary container iterators shape stride add support constructing buffer_info array using arbitrary container iterator pair instead requiring vector primarily needed 782 make stride signed properly support negative stride likely also make shape itemsize avoid mixed integer issue also need preserve backwards compatibility 2.1 earlier accepts stride parameter vector size_t rather adding nearly duplicate constructor stride taking constructor seems nicer simply allow type container iterator pair work replacing existing vector argument new detail any_container class handle implicit conversion arbitrary container vector desired type also explicitly instantiated pair iterators e.g passing begin end instead container,,
1000,dbb4c5b531aa53e0a88728049cb650cc07068abd,ason Rhinelander <jason@imaginary.ca>, 2017-04-07 15:21:53 -0400, , move buffer_info header upcoming change buffer_info make need thing declared common.h also feel bit misplaced common.h arguably large already move separating subsequent change separate commits make change easier distinguish move,,
1001,5749b5023936e23d0d2ae77bd776e1f519e2e412,ason Rhinelander <jason@imaginary.ca>, 2017-04-10 11:05:26 -0400, , array set exception message failure attempting get raw array pointer return nullptr given nullptr trigger set exception message result unknown internal error caller want explicit allowing nullptr already handle clearing exception call,,
1002,257df10ffea317273969a00860a59007c9d0e2dc,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-12 11:07:51 +0200, , improve mkdoc.py determinism processing many file contain top level item name e.g operator output non deterministic depended order different clang process finished commit add sorting also account filename prevent random change run run,,
1003,46469d4ec3c4d85ecad4823d895c36bbf994fd97,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-11 03:00:30 +0200, , appveyor suppress debug message generate.stamp http cmake cmake issue 16783,,
1004,3983a8ed48ce63f9419ce930daca537cc0a36111,ason Rhinelander <jason@imaginary.ca>, 2017-04-10 14:48:24 -0400, , appveyor update eigen 3.3.3 3.3.2 changelog indicates 2017 fix updating see avoids random build failure,,
1005,4c72ec22200cf83f36fcb713c944867a27470203,ason Rhinelander <jason@imaginary.ca>, 2017-04-09 08:12:17 -0400, , appveyor remove attempt resolve build failure also seem made build faster,,
1006,e9e17746c8015fb567be72e90edb625be7eb3321,ason Rhinelander <jason@imaginary.ca>, 2017-04-08 19:26:42 -0400, , fix eigen argument doc string many eigen type caster name method wrapping type description type_descr object thus adding ... annotation used identify argument broke help output skipping eigen argument test code added even unnoticed broken output arg0 showing return value commit also add test code ensure named eigen argument actually work properly despite invalid help output added test pas without rest commit,,
1007,501135fa769ca5ad73ca81315da509bffa5adeb9,ason Rhinelander <jason@imaginary.ca>, 2017-04-07 11:11:14 -0400,785, add static_assert holder caster holder caster assume check holder type type really type add static_assert make sure really case turn thing like std shared_ptr array compilation failure fix 785,,
1008,d994db2da01e3d4726e6d9d5c45270ac45ec6139,ason Rhinelander <jason@imaginary.ca>, 2017-04-03 16:51:14 -0400, , remove gcc lto werror workarounds gcc version debian stretch gcc experimental gcc incorporate upstream gcc fix,,
1009,e0e2ea33788e29ff5efca5842e92c6b179ca9378,ean Moldovan <dean0x7d@gmail.com>, 2017-04-06 23:45:12 +0200, , fix overriding static property derived class fix 775 assignment form value translated value except isinstance value static_prop,,
1010,db200955b98c27bc79192d9df7c3325380e5fbda,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-07 02:03:46 +0200, , changelog v2.1.1,,
1011,16c86638a52bdf24af6d2cf64ac18ce24782cbb2,ason Rhinelander <jason@imaginary.ca>, 2017-04-06 18:31:21 -0400,777, remove object borrowed stolen 771 deprecated cause linking failure 770 deprecation tag cause warning gcc 5.x 6.2.x removing entirely break backwards compatibility consequence effect minimal code inheriting object could get protected fix 777,,
1012,555dc4f07a7462e9079b7b0dce622f278be42991,ean Moldovan <dean0x7d@gmail.com>, 2017-04-06 22:41:24 +0200, , fix failure bare python exe name fix 783 besides appearing cmake gui filename specifier change behavior well cmake python fail find python cmake path python cmake filename python cmake filename path python,,
1013,087b8d84e93fc1c7ed8cacbea69889255c57fe4e,ason Rhinelander <jason@imaginary.ca>, 2017-04-05 18:09:02 -0400, , skip vs2015 x86 build appveyor added support excluding specific job thhis commit cut number build eliminating vs2015 x86 build,,
1014,7348c407f6d12875648311d78b31428c663c1d16,van Smirnov <i.s.smirnov@gmail.com>, 2017-04-05 23:00:38 +0100, , fix wmissing brace warning,,
1015,6906b270d6fadfa22db4e15b9e59bf752ed43bd4,ason Rhinelander <jason@imaginary.ca>, 2017-04-05 10:51:02 -0400, , improve make_tuple error message debugging make_tuple fails example print called non convertible argument 778 error message helpful could make_tuple unable convert argument type std tuple type1 type2 python object actual std tuple involved parameter pack python tuple also immediately reveal type caused problem commit change debugging mode output show problematic type make_tuple unable convert argument type type2 python object,,
1016,8f010cce8eaefcdd7a5206e456b2e7633f2d67d3,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-04-05 17:02:34 +0200, , appveyor use parallel build group subscription appveyor pro also permit running parallel build open source project,,
1017,82ece940fb38b5ddf5c3ec8ae925844d34d567c8,ean Moldovan <dean0x7d@gmail.com>, 2017-03-29 11:55:18 +0200, , replace first_of_t exactly_one_t,,
1018,1ac19036d6146024fb5881ac888f7775e16b203d,ean Moldovan <dean0x7d@gmail.com>, 2017-03-16 11:22:26 +0100, , add scope guard call policy  m.def foo foo call_guard  equivalent  m.def foo args ... scope_guard return foo args ... forwarded argument  ,,
1019,83a8a977a74203fedaedbf6969ebcc036e86d17c,oman Miroshnychenko <romanvm@yandex.ua>, 2017-04-02 23:38:50 +0300,700, add method check python exception type 772 commit add match convenience method check exception trapped match given python exception type address 700 providing verbose way check exception,,
1020,37ef74c5847ed7c677b0d73699c4bdcaa925973b,ylvain Corlay <sylvain.corlay@gmail.com>, 2017-03-31 20:21:08 +0200, , wrong msvc version,,
1021,280470d80c9a2c71729b066ef4c82f776403a053,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-30 13:14:33 +0200, , updated cindex.py submodule latest version,,
1022,aa1b316f6f3e8f5acb18c79584589203508f9a88,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-30 11:59:32 +0200, , adjusted module add_object signature accepts handle,,
1023,194d8b99b33b1fe58e14a6143334a2d3ee5397ed,ean Moldovan <dean0x7d@gmail.com>, 2017-03-29 00:27:56 +0200, , support raw string literal input eval 766 support raw string literal input eval dedent needed,,
1024,6db60cd945febf2bbfd9aa465d96e689c4a66ba6,ason Rhinelander <jason@imaginary.ca>, 2017-03-28 19:23:37 -0300,771, deprecated borrowed stolen borrowed_t stolen_t 771 constexpr static instance cause linking failure compiler optimize away reference reported 770 particularly nice way fixing inline definition match declaration permitted non templated static variable doe allows inline variable obviously help one solution could work around add extra inherited subclass object hierarchy bit messy solution decided 771 favour deprecating eventually dropping constexpr static fix 770,,
1025,d6fdafb203560dc3fbb905e065b2b9cb478b0127,ason Rhinelander <jason@imaginary.ca>, 2017-03-26 12:43:22 -0300, , fix unchecked type caster template dim type,,
1026,5b5037649093d6e3c6f2ec6fdbfaff769cae6bb5,hislain Antony Vaillant <ghisvail@users.noreply.github.com>, 2017-03-24 22:09:38 +0000, , arch indep cmake packaging 764 arch indep cmake packaging since pybind11 header library cmake packaging doe carry architecture specific check without patch detection pybind11 fail bit architecture project built bit machine vice versa fix similar applied eigen header library,,
1027,0d92938f74ea46755294e5b5ab7b6ee81ca2c3b9,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-22 22:52:29 +0100, , minor style fix,,
1028,d405b1b3a497c55e89187837a1af8345514e7bf7,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-22 22:20:07 +0100, , updated version information v2.2 development,,
1029,f0e58a69d382724697f9d0154e94a59529a9d512,ean Moldovan <dean0x7d@gmail.com>, 2017-03-22 22:02:13 +0100, , fix compilation clang 4.0 std mode,,
1030,62e5fef09e8c14b8a38c9d848dd3a50f083284e8,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-22 22:07:45 +0100, , changelog v2.1.0 759,,
1031,b16421edb143bceb812f8644281029e6224deeac,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-22 22:04:00 +0100, , nicer api pas capsule destructor 752 nicer capsule destructor mechanism added destructor version capsule test added documentation module destructors fix 733,,
1032,ab26259c87152f676f66d2ae0e3ae7bcafa47fe2,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-22 21:39:19 +0100, , added note trailing comma fix 593,,
1033,ed8a461d9a3c880aff6451b66248bc7c71c3d798,ason Rhinelander <jason@imaginary.ca>, 2017-03-22 16:30:53 -0300, , change pypy travis pypy build 5.7 release longer need nightly build 5.7 released current nightly 5.8 failing,,
1034,773339f131488819c878ae1a1d5bfbefec629af6,ason Rhinelander <jason@imaginary.ca>, 2017-03-20 17:48:38 -0300, , array unchecked add runtime dimension support array compatible method extends previous unchecked support ability determine dimension runtime incurs small performance hit used versus compile time fixed alternative still considerably faster full check every call happen .at .mutable_at,,
1035,423a49b8be20c0d4447d5d668232d2ea779159e5,ason Rhinelander <jason@imaginary.ca>, 2017-03-19 01:14:23 -0300, , array add unchecked access via proxy object add bound unchecked access array a.unchecked type dimension method array_t type template parameter omitted mutable version requires array writeable flag available ... specifying dimension template parameter allows storage std array stride size stored way opposed storing copy array stride shape pointer allows compiler make significant optimization shape method make pointer testing nested loop form size_t r.shape size_t r.shape ... ... million element array give around speedup versus using pointer case run twice fast array,,
1036,0d765f4a7c3c6e32f43b576ddcbe23021ab8586f,ean Moldovan <dean0x7d@gmail.com>, 2017-03-21 01:15:20 +0100, , support class specific operator new delete fix 754,,
1037,b0292c1df32d68759c3dfeb81d51954338d418c6,ason Rhinelander <jason@imaginary.ca>, 2017-03-18 21:11:59 -0300, , vectorize trivial handling order array extends trivial handling support trivial handling fortran order array i.e column major input contiguous contiguous resulting array contiguous trivial processing anything else e.g contiguous input requiring non trivial processing result numpy default contiguous layout,,
1038,ae5a8f7eb3407bd420734e1780e83ddceef04403,ason Rhinelander <jason@imaginary.ca>, 2017-03-15 00:57:56 -0300, , stop forcing contiguous vectorize part vectorize code actually need contiguous trivial broadcast non trivial argument code already stride properly handle style style neither slice etc commit rewrite broadcast additionally check contiguous storage take c_style flag argument keep functionality except longer requiring array copy non contiguous input array additionally given singleton slice e.g 4x4 smaller array longer fail triviality trivial code path never actually stride singleton,,
1039,cd3d1fc7df0ca6cd7f10ce2a27df522b8f14d2d7,ean Moldovan <dean0x7d@gmail.com>, 2017-03-20 21:53:24 +0100,588, throw exception attempting load incompatible holder instead segfault fix 751 cover case loading custom holder default holder instance attempting load one custom holder different custom holder i.e std unique_ptr yield undefined behavior 588 established inheritance,,
1040,0f5ec0a87e3d3879cd70740422adf3e3728a9d84,ason Rhinelander <jason@imaginary.ca>, 2017-03-19 12:36:18 -0300, , error message wording tweak arg specify named argument anymore error message misleading e.g using arg .noconvert forgetting arg second positional argument,,
1041,5a9247872d338d3a9fb1c5dcecaf03ade777dab0,ason Rhinelander <jason@imaginary.ca>, 2017-03-14 11:38:22 -0300, , added minimum compiler version assertion require enforce compile time gcc 4.8 clang 3.3 5.0 apple renumbered clang msvc 2015u3 icc also update version listed readme remove redundant msvc version check,,
1042,3d591e8f2f6d06176884f33cd271bdd3d65294b4,ason Rhinelander <jason@imaginary.ca>, 2017-03-18 13:34:21 -0300, , document make_iterator add brief api documentation make_iterator specifically mentioning requires inputiterators close 734 skip code change,,
1043,b961626c0c2132dde5ec81036fc9f83398d95f30,ason Rhinelander <jason@imaginary.ca>, 2017-03-16 20:10:48 -0300, , fail compile via class_ ctor parameter support class imported module primary purpose ctor argument base class parent derived properly extract multiple inheritance base class pointer derived class pointer could support actual class_ base ... instance since case base already present code seems consistent simply always require via template option,,
1044,d51acb687313a1c7d651f999d7ad6d8fbd5ffa23,ason Rhinelander <jason@imaginary.ca>, 2017-03-17 00:41:09 -0300, , use fold expression macro put fold expression behind feature macro instead general macro also add fold expression optimization constexpr_sum guarded feature macro,,
1045,efa8726ff78c4520559d360e82c997d0ce3f8e90,ason Rhinelander <jason@imaginary.ca>, 2017-03-17 14:51:52 -0300,738, eigen require conformability length dimension fix 738 current check conformability fails given 1xn nx1 input row major column major respectively eigen ref leading copy required state type_caster later failed copy also non conformable shape stride 1xn nx1 contiguous case safely ignore stride dimension since never used dimension stride need match eigen ref stride fix non conformable copy problem also avoids copy entirely long dimension compatible stride,,
1046,68e089a8bf84535bf3d2a2e0dae1cf9607624463,ean-MichaÃ«l Celerier <jeanmichael.celerier+github@gmail.com>, 2017-03-17 14:51:41 +0100, , use custom definition negation bool_constant 737 instead relying sometimes missing definition,,
1047,cabbf610a7ccce9fc849c4449ed078c4a84319da,ason Rhinelander <jason@imaginary.ca>, 2017-03-11 23:03:23 -0400, , add 2017 build bump conda 3.6 add 2017 build matrix plus various small appveyor build change conda version bumped 3.5 3.6 build newer version architecture python first i.e vs2017 x64 3.6 first build vs2015 x86 2.7 last stop building job failure often build failure one occurs everywhere stop processing job freeing error hit annoyingly appveyor allow excluding test i.e test matrix always dense appveyor issue 386 run everything appveyor issue 386 resolved come back cut build,,
1048,819cb5533ed8e1654a11e2defc6cd1ea8254ab86,ean Moldovan <dean0x7d@gmail.com>, 2017-03-15 13:57:10 +0100, , fix nullptr none conversion builtin type caster fix 731 generally applies caster made,,
1049,dfd89a608123645badd3e77cdcdfaa683f405857,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-16 11:44:01 +0100, , remove pybind11 namespace prefix stl_bind.h,,
1050,1769ea427f48da4dde5df1d56416c46a09841697,ean Moldovan <dean0x7d@gmail.com>, 2017-03-15 15:38:14 +0100, , add __module__ attribute pybind11 builtin type 729 fix 728,,
1051,9f383a542e3259e28cfd568df846c9971dbb1b36,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-03-14 02:51:09 +0100, , added patstew readme.md,,
1052,0b6d08a0081dc50a1bec7937a67043399755ce99,atrick Stewart <patrick@rfcreations.com>, 2016-11-21 17:40:43 +0000, , add function comparing buffer_info format type allows equivalent integral type numpy dtypes,,
1053,54679795887f2f398ee4e92f35c22dc0936c8862,atrick Stewart <patrick@rfcreations.com>, 2016-11-08 13:03:34 +0000, , add buffer interface wrapped stl vector allows use vector python buffer example adopted without copy numpy.asarray allows faster conversion buffer vector copying instead individually casting element,,
1054,16afbcef4633b2c038cef26f7aaa0b4e567eed20,ean Moldovan <dean0x7d@gmail.com>, 2017-03-13 19:17:18 +0100, , improve array_t scalar type information 724 add value_type member alias array_t resolve 632 use numpy scalar name array_t function signature e.g float32 instead float,,
1055,dc5ce5930fc1c697cc163c23391fcf627b52ec54,ason Rhinelander <jason@imaginary.ca>, 2017-03-13 12:49:10 -0300, , use move assignment eigen ref copy affect much make code consistent non copying branch,,
1056,139a082b0edfd0e2dcf0b9332b1f4f5358cd9568,ason Rhinelander <jason@imaginary.ca>, 2017-03-12 17:59:07 -0300,697, add static_assert failure non static def_static fix 697,,
1057,2d965d43a673d48fdce7bf1771f96a009e1e018a,ason Rhinelander <jason@imaginary.ca>, 2017-03-12 13:34:30 -0300, , add msvc 2017 cpp_function ice workaround decltype ... template parameter give sfinae matching lambda make msvc 2017 ice work around changing test explicit function pointer test seems work everywhere,,
1058,b7017c3dad16fe961e4f7ec4facaca8ba8c19e3b,ean Moldovan <dean0x7d@gmail.com>, 2017-03-12 22:36:48 +0100, , fix readthedocs build 721 rtd updated build environment broke 1.8.14.dev build doxygen using update also break conda forge build 1.8.13 version issue luckily rtd update bring doxygen version 1.8.11 enough parse code need ref qualifier also avoids segfault found 1.8.13 since using native doxygen conda required anymore simplify rtd configuration skip,,
1059,ee9296395d604732b73a27a78f47c9f6465a83c3,ason Rhinelander <jason@imaginary.ca>, 2017-03-09 11:35:28 -0500, ," call directly version python 2.7 reportedly 713 issue passed encoding string skip entirely calling function directly also slightly efficient avoiding check encoding string python going unicode class decode python fast track utf 8,16,32 encoding python fast tracked exact string utf passing anyway utf8 work pypy however 8,16,32 appear rather broken utf8 one segfaults require recasting non const char might segfault get far enough find avoid whole thing keeping encoding passed string version pypy seems work reliably",,
1060,e5456c222624134d2b98759dbd4f4f1d32c45b2a,ason Rhinelander <jason@imaginary.ca>, 2017-03-11 22:29:25 -0400, , fix floating point duration duration calculation using supported duration object arithmetic type support hence fails float fixed subtracting calculated value instead,,
1061,28a837a07e39e6a391aaec1b4de6674425a22c61,ason Rhinelander <jason@imaginary.ca>, 2017-03-08 14:32:52 -0500, , add failure allowed clang 4.0 libc 4.0 build add linux docker clang 4.0 libc build,,
1062,d47febcb179ef6b9c1f65748190bb84c990ef6b2,ean Moldovan <dean0x7d@gmail.com>, 2017-03-10 15:42:42 +0100, , minor pytest maintenance 702 add pytest.ini config file set default option instead cmakelists.txt command line argument change output capture capfd filedescriptors capsys python sys.stdout sys.stderr avoids capturing low level error e.g debug build python set pytest minimum version 3.0 make easier use new feature removed conditional use excinfo.match clean leftover function level,,
1063,303ee29d9fa03a003fb969fe66c24b179d075ba7,ason Rhinelander <jason@imaginary.ca>, 2017-03-10 06:50:50 -0500, , use trusty travis pypy build 716 nightlies pypy longer run ubuntu 12.04 change pypy build distribution travis trusty i.e 14.04 beta container pypy build also installing numpy scipy system python version pointless also add guard eigen numpy scipy install code pypy check,,
1064,10d1304806529861c16a19d2af5906520f1c0997,ason Rhinelander <jason@imaginary.ca>, 2017-03-08 12:32:42 -0500, , fix extra docstring newlines using pybind option disable function signature user defined docstrings get appended exist newlines getting appended unconditionally docstring could end blank line depending overload particular provided docstrings commit suppresses empty line adding newlines overload needed,,
1065,c44fe6fda5c7552373942c93847cf9881ac819c1,ason Rhinelander <jason@imaginary.ca>, 2017-02-26 18:03:00 -0500, , array_t overload resolution support make array_t respect overload resolution noconvert failing load convert false src already array correct type,,
1066,38fc542f9790ced232bfae4a9bc5fde879622e29,ason Rhinelander <jason@imaginary.ca>, 2017-03-04 09:41:45 -0500,709, merge pull request 709 jagerman enum extra constructor remove extraneous enum_ python constructor,,
1067,e370520918e662826092afb57cc0403f845dcbd4,ason Rhinelander <jason@imaginary.ca>, 2017-03-04 09:24:05 -0500, , remove extraneous enum_ python constructor added second constructor anything signature exactly first always going one invoked dispatcher,,
1068,414ee163ccb229a9d4b774ef439e9c206066de90,ason Rhinelander <jason@imaginary.ca>, 2017-03-03 13:17:11 -0500,666, merge pull request 666 mdcb master expose enum_ entry new __members__ attribute,,
1069,af936e1987312e665b64463bed94d4a486a78a09,atthieu Bec <mbec@gmto.org>, 2017-03-03 08:45:50 -0800, , expose enum_ entry __members__ read property getters get copy,,
1070,11c9f32c0f99082adeb8e85b7c022a9c1f9126f1,irrgang <eirrgang@umich.edu>, 2017-03-01 04:53:38 -0500, , fix python version check 705 commit 11a337f1 added major minor python version checking cast.h doe use macro defined via python.h inclusion may due intention use variable defined cmake module nothing pybind11 repo doe anything convert cmake variable preprocessor defines,,
1071,51439896239570da704cb1328ce12174d3f0308c,ean Moldovan <dean0x7d@gmail.com>, 2017-02-28 18:07:51 +0100, , fix compilation eigen caster complex scalar,,
1072,5687b337f94f096d4233fbdec09df3bf2ee69462,ean Moldovan <dean0x7d@gmail.com>, 2017-02-27 23:39:26 +0100, , fix negative refcount pycapsule destructor,,
1073,620a808ad062f6ee20f0799b7c20cb4b54da262f,ean Moldovan <dean0x7d@gmail.com>, 2017-02-27 15:42:51 +0100, , test debug build python debug travis,,
1074,5fe9908b7a34e4f4e320e319a528c4f1bdf6a8e6,ean Moldovan <dean0x7d@gmail.com>, 2017-02-10 12:20:24 +0100, , add remove pypy iterator workarounds definition pysequence_fast restrictive pypy use slow path instead pydict_next fixed pypy remove workaround,,
1075,5637af7b6775dbbf694755fb03c8dcdab9bc74c9,ean Moldovan <dean0x7d@gmail.com>, 2017-02-09 23:05:33 +0100, , add lightweight iterators tuple list sequence slightly reduces binary size range loop tuple list benefit lot iterators compatible std algorithm,,
1076,1fac1b9f5f337c06a502b6ff093e455f33e26264,ean Moldovan <dean0x7d@gmail.com>, 2017-02-09 12:08:14 +0100, , make iterator compatible std algorithm added type alias required std iterator_traits python iterators satisfy inputiterator concept,,
1077,f7685826e2ac907c3fe6315f4e3cadb41b377a9b,ean Moldovan <dean0x7d@gmail.com>, 2017-02-08 14:31:49 +0100, , handle iterator error iterator error handling code like  auto item int_ ...   would silently skip loop throw typeerror expected breaking behavior change code relied silent skip probably broken anyway also error returned pyiter_next properly handled,,
1078,cecb577a191c9312c95d4d74aa4560933b9811ea,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-26 23:15:39 +0100, , fix wunused lambda capture warning,,
1079,df244884c0ecb5bf869d37944ea06aa218a4bc1a,ason Rhinelander <jason@imaginary.ca>, 2017-02-25 16:33:44 -0500, , skip .match older pytest pre 3.0 fix test failure fedora,,
1080,0861be05da6e91efb13b8bf4d6ee01b53dc94a6b,ason Rhinelander <jason@imaginary.ca>, 2017-02-25 16:43:01 -0500, , fix numpy test big endian architecture fix numpy test failure ppc64 big endian mode due little endian assumption fix 694,,
1081,2a75784420059a3d3661febf8f39b385a9b08abf,ason Rhinelander <jason@imaginary.ca>, 2017-01-24 11:26:51 -0500, , move requires_numpy etc decorator globals test_eigen.py test_numpy_ .py every single test change use pytest global pytestmark ... instead disable entire module numpy eigen available,,
1082,17d0283eca34e703f139a1688019b6b361d9f269,ason Rhinelander <jason@imaginary.ca>, 2017-01-16 20:35:14 -0500, , eigen numpy referencing support commit largely rewrite eigen dense matrix support avoid copying many case eigen argument reference numpy data numpy object reference eigen data given compatible type eigen ref ... argument also make use new convert argument use added 634 avoid conversion allowing arg .noconvert used binding function prohibit copying invoking function respecting convert also mean eigen overload avoid copying preferred overload resolution one require copying commit also rewrite eigen documentation test suite explain test new capability,,
1083,546f6fce1aa72e576bc334afa0a9000b743df7a8,ason Rhinelander <jason@imaginary.ca>, 2017-01-20 00:59:26 -0500, , add ability avoid forcing rvp move eigen ref object returned almost always returned rvalues important data reference outer shell want able use copy etc refer data eigen ref reference following commits rather eigen ref instance move policy override struct code want avoid want provide return type conditional override create specialization return order override override let eigen ref returning function bound rvp copy example specify data copied new numpy array rather referenced rvp indicate referenced keep alive used actually used array base rather keep_alive case accomplishes thing,,
1084,fd7517037b0e108d8acef539ce4d33ae3bde02fc,ason Rhinelander <jason@imaginary.ca>, 2017-01-20 13:50:07 -0500, , change array writeable exception valueerror numpy raise valueerror attempting modify array array raising runtimeerror change exception std domain_error get mapped expected valueerror python,,
1085,f86dddf7ba45810c97dc2cf8e8cb6ee1e8477307,ason Rhinelander <jason@imaginary.ca>, 2017-01-16 20:22:00 -0500, , array fix base handling numpy array currently properly setting base setting base directly base follow numpy expects document following chained array base root array fix behaviour using numpy set base instead update test reflect fixed behaviour,,
1086,88fff9d18910295db739bf5861cb6825b2384ef3,ason Rhinelander <jason@imaginary.ca>, 2017-01-16 20:15:42 -0500, , change numpy constant non deprecated version pybind numpy constant using numpy deprecated name without array_ updated name consistent current numpy code,,
1087,7d46c6f60dc3ed607260e8d51e76768827ae29fa,ason Rhinelander <jason@imaginary.ca>, 2017-01-14 11:25:28 -0500, , make ignore qualification fails const implementation relies able convert base work const also agrees std is_base_of ignores qualification,,
1088,d9d224f28826040f181e40c4feeb115c8f1034c0,ason Rhinelander <jason@imaginary.ca>, 2017-01-12 19:50:33 -0500, ," eigen fix partially fixed matrix conversion currently conversion numpy array eigen vector allow conversion eigen type compile time vector i.e least one dimension fixed compile time type dynamic dimension mean run case matrixxd allow thing conforming compile time size doe example matrix double,4 dynamic currently allowed even assigning element vector allowed matrix double dynamic dynamic commit also reverts current behaviour using matrix storage order determine structure matrix fully dynamic i.e dimension currently assign eigen row storage order row major column otherwise seems wrong storage order nothing shape numpy distinguish row column vector eigen doe make sense consistently choose one produce something different shape based intended storage layout",,
1089,a04410bd290aea0995086ce615d5421ef7861807,ason Rhinelander <jason@imaginary.ca>, 2017-02-24 15:45:54 -0500, , workaround style check false positive,,
1090,231e167854a571904d6bf3a72a8564a528c677e2,ason Rhinelander <jason@imaginary.ca>, 2017-02-23 21:04:46 -0500, , show kwargs failed method invocation previous commit output confusing see positional argument invoked line failure kwargs well particular value invalidly specified via via positional kwargs commits add kwargs output update associated test match,,
1091,caa1379e92e4c50c62a91e3c1a5c1b95134e90ed,ason Rhinelander <jason@imaginary.ca>, 2017-02-23 19:54:53 -0500, , make bad kwarg argument try next overload fix 688 commented assumption error highly likely caller mistake proven false 688,,
1092,60d0e0db3e564d7d41c7ae9c521a09a3329c4478,ason Rhinelander <jason@imaginary.ca>, 2017-02-24 17:07:53 -0500, , independent test 665 make test buildable independently make test buildable separate project find_package pybind11 config invoked independently also move werror option test cmakelists.txt place used use eigen 3.3.1 cmake target available change eigen finding code attempt use eigen system installed eigen3config first eigen 3.3.1 export cmake eigen3 eigen target get dependency rather setting include path directly fails fall back trying load allowing module i.e allowing tool either fallback eigen version older 3.3.1 still set include directory manually otherwise config new eigen get via target also needed allow test built independently find_package eigen3 going find via system installed  add install build test using clang linux test make install actual system followed build test without main pybind11 repository available work expected also expand testing variety bit also build using clang 3.9 instead gcc try loading eigen3config cmake 3.0 could fatal_error newer cmake includes cmake 3.0 required line independent tree test build regular find_package eigen3 likely fail error think let want recent eigen proper cmake loading support want independent test build need least cmake 3.0,,
1093,ee2e5a5086d02eda96e6cfcf8e15d8fbcd2af57c,ason Rhinelander <jason@imaginary.ca>, 2017-02-24 05:33:31 -0500,624, make string conversion stricter 695 make string conversion stricter string conversion logic added 624 std basic_strings derived old std wstring logic underused turn bug accepting almost anything convertible unicode previous std string logic much stricter restores previous std string logic allowing actual unicode string type fix 685 added missing requires numpy decorator forgot change global decorator yet merged eigen,,
1094,dd01665e5a8f5c13f18c009c34c1449c33b33dec,ean Moldovan <dean0x7d@gmail.com>, 2017-02-16 23:02:56 +0100, , enable static property metaclass default one shared metaclass ever allocated extremely cheap enable pybind11 type deprecate default metaclass since needed anymore allow user specify custom metaclass via metaclass handle,,
1095,08cbe8dfed1f245a17daf91babeb950a2aac82c9,ean Moldovan <dean0x7d@gmail.com>, 2017-02-15 21:10:25 +0100, , make class instance size derive common base order fully satisfy python inheritance type layout requirement type common solid base solid base one instance size derived type counting space required optional dict_ptr weakrefs_ptr thus object doe qualify solid base pybind11 type lead issue multiple inheritance get around new base type created one per unique instance size going base ensure python mro check pas multiple base involved,,
1096,c91f8bd62716881ad1137848f16953892b4efd8d,ean Moldovan <dean0x7d@gmail.com>, 2017-02-13 18:11:24 +0100, , reimplement static property extending pyproperty_type instead creating new unique metaclass type builtin property type subclassed support static property new setter getters always pas type instead instance self argument metaclass still required support behavior store data anymore new one need created class one common metaclass shared pybind11 type,,
1097,a3f4a02cf87e71aa5cb84b0bd75eef7aa9f5da09,ean Moldovan <dean0x7d@gmail.com>, 2017-02-23 08:57:25 +0100, , minor doc build maintenance 692 switch breathe stable release previously pulling directly master required bugfix stable release yet force update sphinx rtd theme using conda readthedocs pin sphinx 1.3.5 0.1.7 bit older one used rtd regular non conda build newer theme nicer sidebar navigation level depth vs. level older version note python 3.5 requirement must stay rtd still installs older sphinx one point available python 3.6 skip,,
1098,c7fcde7c760cd2432d15b97e36e544e0fddc31ea,underberg <Lunderberg@users.noreply.github.com>, 2017-02-22 14:00:59 -0500, , fixed compilation error binding function accepting form std function 689 fixed compilation error defining function accepting form std function compilation error happens functional.h header present build done debug mode ndebug undefined addition std function must accept abstract base class reference compilation error occurred cast.h trying construct std tuple abstractbase rather std tuple abstractbase caused functional.h using std move rather std forward changing signature function used commit contains fix along test exhibit issue compiled debug mode without fix applied moved new std function test test_callbacks added test,,
1099,c8e506961ca205bdacf748a9be853300ef90af4d,atthias MÃ¶ller <m_moeller@live.de>, 2017-02-18 14:29:54 +0100, , fix msvc warning python.h included pybind11.h 683 fix warning python.h included pybind11.h remove trailing whitespace,,
1100,baec23c2d4cf542fafc4d26e6d1d8fd3255b3678,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-17 12:59:32 +0100, , minor stl caster clarification,,
1101,e72eaa47d20ab279117091a35703a469bedeb612,horink <thorink@users.noreply.github.com>, 2017-02-17 12:57:39 +0100, , changed return_value 672 changed return_value update functions.rst,,
1102,1d7998e333fe98941d9858e8554631848cd7a4b2,ason Rhinelander <jason@imaginary.ca>, 2017-02-17 06:56:41 -0500, , revert noexcept deduction favour better sfinae lambda function 677 noexcept deduction added 555 work clang std work entirely clear required work work however allows implicit conversion noexcept true function pointer noexcept false i.e default noexcept specified function pointer breaking pybind11 cpp_function template used lambda provided better match i.e without requiring implicit conversion failed commit take different approach using sfinae lambda function prevent matching non lambda object get implicit conversion noexcept function pointer noexcept false function pointer much nicer solution also get rid noexcept macro work clang,,
1103,d361ea15fb72bfba21f6d3aac9491467a13ebb21,ean Moldovan <dean0x7d@gmail.com>, 2017-02-14 20:11:25 +0100, , strip debug symbol debug mode 669,,
1104,d5ce82b6f577433100fcd65160469fbfec24b0f6,ylvain Corlay <sylvain.corlay@gmail.com>, 2017-02-14 13:16:14 +0100, , cmake installation path consistency 652 add flag installation header python include directory allow disabling distutils install_headers,,
1105,cec052b5c5a7fd1db3369cb5ea0377e110413ba8,ean Moldovan <dean0x7d@gmail.com>, 2017-02-14 11:26:22 +0100,667, fix readthedocs build fix 667 sphinx version pinned readthedocs sphinx 1.3.5 available conda python 3.6. workaround pin python version 3.5 really matter doc build,,
1106,329d983392a363dd2d33251724d38c9c3878d116,ean Moldovan <dean0x7d@gmail.com>, 2017-02-14 11:25:47 +0100, , revert template array constructor 582 reverts commit,,
1107,11a337f16f9b96a13df971d490c2ceea85d1a309,ason Rhinelander <jason@imaginary.ca>, 2017-02-14 05:08:19 -0500, ," unicode fix doc 624 propagate unicode conversion failure returning std string invalid utf data currently fail uninformative typeerror instead propagating python set failure add support u16 u32strings literal add support wchar 16,32 character literal associated std 16,32 string type also fold character string conversion single type_caster template since type caster string wstring mostly anyway added long big character conversion error commit casting single character opposed style string make sure input multi character string single character codepoint large character type also change character cast chart instead chart need able return temporary decoded char value also little gained bothering lvalue return finally change char caster string caster instead string caster cast_op change nothing gained inheritance also let remove success string caster char caster char caster also renamed none inverted value better reflect purpose none nullptr loading also take place convert true load pas although unlikely function taking char also overload take none seems marginally correct treat conversion commit simplifies size assumption character size static_asserts back",,
1108,ada763b9eeb07eaaa05a2cc58163bd7088ebb165,ason Rhinelander <jason@imaginary.ca>, 2017-02-09 21:53:38 -0500, , temporary gcc travis build fix recent gcc snapshot gcc snapshot recent gcc stable branch snapshot triggering upstream gcc bug flto enabled http gcc.gnu.org bugzilla show_bug.cgi 79296 hitting gcc build going start hitting debian testing build day well issue triggered using flto combination structs class declared function done test_isses possibly subscribed upstream bug submit another reenable lto fixed gcc available gcc build also generates warning ignore turning werror,,
1109,c137c0a87b58da4c5a8af7d18681ec60361c156c,ason Rhinelander <jason@imaginary.ca>, 2017-02-09 21:27:29 -0500, , store lto flag pybind11_lto_ cxx linker _flags cache variable let bother rechecking lto flag cmake reinvokes also let cmake invoker override specify custom lto flag setting cache variable invoking cmake,,
1110,1bee6e7df8ae835aa539c69bdbaad90be66160f1,ason Rhinelander <jason@imaginary.ca>, 2017-01-17 02:13:11 -0500, , overhaul lto flag detection clang linux currently fails run cmake clang cxx clang cmake ... configuring done cmake error tool 135 error evaluating generator expression flto expression evaluate known generator expression call stack recent call first test cmakelists.txt investigating led various flto detection problem commit thus overhaul lto flag detection flto need passed linker well also compile fno fat lto object gcc pas equivalent flag msvc enable lto flag via generator expression non debug build multi config build like window still work properly seems reasonable however even single config build simplifies cmake code bit clang lto linker plugins accept replace minsizerel build enable trying thinlto default test suite affect clang match clang rather clang cmake 3.0 policy effect compiler appleclang macos,,
1111,bee8827a98fbb77def8cbe5c7aa4de956667baec,ylvain Corlay <sylvain.corlay@gmail.com>, 2017-02-14 10:55:01 +0100, , template array constructor 582,,
1112,a76ed42c3f828bcb89422bdeb984194579841686,ean Moldovan <dean0x7d@gmail.com>, 2017-02-14 01:43:20 +0100, , fix sequence_item reference leak 660,,
1113,5e92b3e608c98e1484a8a237db4b03bd807452a3,atthew Woehlke <matthew.woehlke@kitware.com>, 2017-02-08 17:43:23 -0500, , fix path libsize.py 658 use instead base path libsize.py fix error pybind11 built directly within another project,,
1114,e15fa9f99a8bc6597ebadeb410c5fc7383478d16,atthew Woehlke <matthew.woehlke@kitware.com>, 2017-02-08 17:43:08 -0500, , avoid style const cast 659 avoid style const cast replace style cast discard const const_cast necessary well warn style const discarding cast change also enable wcast qual warn style cast discard const default previous commit gotten rid least one tripped build included test discourage newly appearing,,
1115,d534bd670e7de67bbc93999b6d24861bc3afd7a7,ean Moldovan <dean0x7d@gmail.com>, 2017-02-08 20:23:56 +0100, , fix handling python exception module initialization 657 fix 656 commit problematic sequence catch const std exception get python exception i.e pyerr_setstring e.what set importerror run fails due unhandled importerror set step commit add separate catch block python exception clear python error state little earlier replaces importerror thus making sure single python exception flight time step sequence effectively two python expections set,,
1116,1eaacd19f6de9a053570c21de6d173efc2304bc2,ason Rhinelander <jason@imaginary.ca>, 2017-02-08 02:45:51 -0500, , fix debugging output nameless arg_v annotation 648 fix debugging output nameless arg annotation fix couple bug nameless arg introduced 634 annotation argument name used debug mode without checking exists would result std string construction throwing exception invoked nullptr error output say keyword argument arg_v also used positional argument default debugging output function named blah overly verbose changed function blah fix missing space debug test string moved test issue,,
1117,93cc4bd6d7d7239e6f3d65c9a99a0c3bdb9674be,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-08 08:39:16 +0100,655, merge pull request 655 dean0x7d issue template add github issue template,,
1118,70c2a1aa43b15d27a31bf16ef89f570e2e62fd3a,ean Moldovan <dean0x7d@gmail.com>, 2017-02-07 22:23:37 +0100, , add github issue template skip,,
1119,0defac597700168aa8a571fc5966bafd2bdcea41,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-07 00:06:04 +0100, , renamed _check check_ identifier starting underscore reserved standard also fixed typo comment,,
1120,6fa316d259e68098f2bf2d5e63e00fde17e2782d,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-05 23:51:50 +0100,643, merge pull request 643 jagerman two pas dispatch prefer non converting argument overload,,
1121,18e34cb2e6cd3a84c218e1e148514293f6dd0fff,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-02-05 23:51:38 +0100,634, merge pull request 634 jagerman noconvert argument add support non converting argument,,
1122,e550589b42cb130da2b7fec22d3aae368b851c26,ason Rhinelander <jason@imaginary.ca>, 2017-02-03 18:25:34 -0500, , prefer non converting argument overload change function dispatching code overloaded function two pas procedure first try overload convert false argument function call succeeds first pas try second pas allow argument convert true unless course argument explicitly specified arg .noconvert non overloaded method two pas procedure skipped make overload allowed call second pas also skipped would result thing i.e argument .noconvert argument,,
1123,abc29cad020bb035f698fdc3e5d33c5c551ed772,ason Rhinelander <jason@imaginary.ca>, 2017-01-23 03:50:00 -0500, , add support non converting argument add support controlling convert flag argument arg annotation allows argument flagged non converting type_caster able use request different behaviour currently afaics convert used type converter regular pybind11 registered type core type_casters ignore however repurpose control internal conversion converter like eigen array usefully give caller way disable conversion would otherwise occur eigen ref const eigen matrix argument passed numpy array requires conversion either incompatible stride wrong dtype specifying noconvert look like one m.def _a.noconvert default named default noconvert m.def _a.noconvert named default converting m.def arg .noconvert unnamed default converting last part able declare arg without name new previous arg accepted named keyword argument non convert argument passed convert false type caster loading argument whether effect type caster mentioned would extremely helpful eigen support give nicer way specify copy mode custom wrapper current moreover eigen specific hack,,
1124,709675a7aaa3e8f60ab6b9a03e93daa14f3b2372,ason Rhinelander <jason@imaginary.ca>, 2017-02-03 20:16:14 -0500, , made arithmetic complex caster respect convert arithmetic complex caster converting cast convert true previously would convert always e.g passing int float accepting function float complex accepting function,,
1125,40db2c757a298e0b165b012fea7ccbe891f05f4d,barlow83 <jbarlow83@users.noreply.github.com>, 2017-02-02 04:56:31 -0800, , rfc add documentation string unicode issue 636 add documentation string unicode issue unicode documentation character literal wide character,,
1126,0558a9a739ba5bb979ddef114d3ef6632214b02b,ason Rhinelander <jason@imaginary.ca>, 2017-02-01 04:36:29 -0500,633, add warning binding multiple module 635 issue 633 suggests people might tempted copy test script self binding code bad idea pretty much anything test suite self contained test code commit add comment reference documentation tell people instead,,
1127,12494525cf59acc94b509fb94745df3425307577,ason Rhinelander <jason@imaginary.ca>, 2017-01-31 11:28:29 -0500, , minor fix 613 minor doc syntax fix numpy documentation bad file reference using double backticks instead single backticks changed long outdated example test wording internal doc still example import main testing cpp file still used example module description,,
1128,ab60bf1346e8a944c0d9b5a8588169d4202dffe7,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-31 17:23:53 +0100, , minor code style change fixed typo,,
1129,bfcf952e01bd24991f7d000ca053214af8963716,ason Rhinelander <jason@imaginary.ca>, 2017-01-30 13:34:38 -0500,625, pack function call data single struct clean previous commit slightly reducing function call argument single struct containing function_record argument vector parent although currently change anything doe allow future functionality place precalls store temporary object need destroyed function call whether call succeeds concrete example change 625 could easily implemented think adding std unique_ptr member function_call struct precall actually construct without precall postcall invoked call throw exception seems affect .so size noticeably either way,,
1130,70ed2a489729afa5e0a4c4087043f425ce3cc4d4,ason Rhinelander <jason@imaginary.ca>, 2017-01-22 19:15:12 -0500, , use constexpr_first args kwargs positional check,,
1131,34d308adf05bd27659a86d0284d1060a43a7b0e9,ason Rhinelander <jason@imaginary.ca>, 2017-01-22 19:12:24 -0500, , move constexpr_first last common.h keep constexpr_sum metafunctions,,
1132,3b4b9211924e219b9b0092f08b4a6991c61cbd27,ason Rhinelander <jason@imaginary.ca>, 2017-01-22 09:23:53 -0500, , changed keep_alive template argument int size_t passing negative value valid anyway moreover avoids little bit extra code avoid signed unsigned argument warning,,
1133,2686da8350812e35784a3600d45b3e7f91a2af0e,ason Rhinelander <jason@imaginary.ca>, 2017-01-21 23:42:14 -0500, , add support positional args args kwargs commit rewrite function dispatcher code support mixing regular argument args kwargs argument also simplifies argument loader noticeably longer worry args kwargs sorted dispatcher simply appends tuple dict function take args kwargs pass argument vector argument loader hit args kwargs anything special call appropriate type_caster like doe argument thus removing previous special case args kwargs switching passing argument single std vector instead pair tuples also make thing simpler dispatch argument_loader since argument list strictly pybind internal i.e never python particular reason use python tuple intentional restriction may bind function args kwargs somewhere end somewhat match python keep dispatch code little cleaner able worry inject args kwargs argument list specify argument positionally via keyword argument get typeerror alerting python,,
1134,102c94fc38369e6addf65078bd0f4346c07459d1,ason Rhinelander <jason@imaginary.ca>, 2017-01-31 11:10:31 -0500, , add i386 build 612 add bit debian build travis,,
1135,18d7df5efd3d4e01e644dc693518629fe3a6832a,ustin Spicuzza <dustin@virtualroadside.com>, 2017-01-31 10:55:16 -0500, , documentation explicitly call gil held 615,,
1136,ec009a7ca25dd2abdfe105cff8816d8fe0c7a388,ean Moldovan <dean0x7d@gmail.com>, 2017-01-31 17:05:44 +0100, , improve custom holder support 607 abstract away holder functionality resolve 585 custom holder type .get select correct function call specializing holder_traits add support move holder fix 605,,
1137,f7f5bc8e375a381c8e5b810938f05ef14466a4c3,ason Rhinelander <jason@imaginary.ca>, 2017-01-31 11:00:15 -0500, , numpy better compilation error long double support 619 clarify documentation current documentation example read though declarative macro along line change documentation doc example make clear need call macro add satisfies_ none _of preds pred1 pred2 pred3 nice legibility enhanced shortcut is_all pred1 pred2 pred3 give better error message non pod dtype attempt try use non pod data type get difficult interpret compilation error name member internal pybind11 struct among others obvious problem add static_assert case also change base case empty struct is_pod_struct case longer using enable_if is_pod_struct instead using static_assert thus specialization avoid base class pod type work non pod type unimplemented pod type like std array get informative static_assert failure prefix macro pybind11_ numpy.h unprefixed macro seems undesirable prefix pybind11_ match macro numpy.h elsewhere add long double support add long double std complex long double support numpy array allows simplification code used generate format descriptor new code fewer macro instead putting code different templated option template condition end simpler supporting basic arithmetic type use is_arithmetic instead is_integral multiple different specialization addition testing indeed working test script also add various offset size calculation fix test failure x86 compilation,,
1138,c2d1d958091c4cc4c7fc362fbf61a03623fba3b9,atthias MÃ¶ller <m_moeller@live.de>, 2017-01-31 16:54:49 +0100, , update common.h 606 fixed build _debug defined without value assigned e.g vs15,,
1139,57a9bbc6c7378870f66b02f9ee268f4a55ff2893,ean Moldovan <dean0x7d@gmail.com>, 2017-01-31 16:54:08 +0100, , automate generation reference doc doxygen breathe 598 make default markup role sphinx doc automate generation reference doc doxygen breathe improve reference doc coverage,,
1140,cc88aaecc821297ab9c0b2fef96943331939091c,im Schellart <P.Schellart@princeton.edu>, 2017-01-31 10:52:11 -0500, , add check matching holder_type inheriting 588,,
1141,7830e8509f2adc97ce9ee32bf99cd4b82089cc4c,barlow83 <jbarlow83@users.noreply.github.com>, 2017-01-13 02:17:29 -0800, , doc minor clarification 590 clarification section virtual fns primarily made clear useful required renaming situation also clarified one bind trampoline helper class found tempting since seems explicit remove emphasize line cpp block seems suppress formatting doc emphasize default policy clarify keep_alive emphasize default return value policy since statement hidden wall text add hint call policy probably required container object,,
1142,9b815ad2e93d79042e06495dee09a986f4fbb012,yd7349 <myd7349@gmail.com>, 2017-01-13 18:15:52 +0800, , doc fix several error example doc 592 doc fix several error example doc add missing operator def added missing add missing namespace,,
1143,05bc1ffbe0192fbb7c52f4e33667e0c35fb9ba2c,lexander Stukowski <stukowski@users.noreply.github.com>, 2017-01-13 11:12:22 +0100, , correct function signature module init function generated macro python 2.x 602,,
1144,53a338c05ad66862f27577baea2eba188a74a604,ori A. Burns <lori.burns@gmail.com>, 2017-01-13 05:10:22 -0500, , fix one lingering pybind11 module target name 603,,
1145,5b5e3de369236d655ef8e129738ed728f9d98854,ean Moldovan <dean0x7d@gmail.com>, 2017-01-06 23:38:00 +0100, , make python version selection cmake convenient 589 way non cache variable also used example  set value ... ,,
1146,a9730be73cbb6a1af17055a1a0515b435fa0c6d4,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-06 14:18:44 +0100, , use flag strip shared library osx fix 595,,
1147,0f294e26ace5350ef14dfa5391ac8b1725061891,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-04 15:17:18 +0100, , removed mdash character setup.py,,
1148,f8dafe908e120f8c021fde7739f01eb54a903704,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-04 15:09:49 +0100, , changelog 2.0.1 release,,
1149,cd7eacc584188d3ba93fe6e2a995c0a34e710bf5,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-04 09:01:59 -0500, , fix segfault test suite due typo fix 586,,
1150,0e49c022130d412dd3a42277a1a0a3b3e1c0ce78,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-04 08:00:14 -0500, , use conservative mechanism check pytest debian jessie machine running python version noconftest caused pytest try run test suite yet compiled extension module thus failing test commit chages pytest detection attempt run import statement,,
1151,5f07facef55cf93ff0d01106258255f6025d09ba,ean Moldovan <dean0x7d@gmail.com>, 2017-01-03 11:52:05 +0100, , fix pointer reference error type_caster msvc 583,,
1152,2723a38820236734b6456cf554ec5f6c02d30744,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-01 17:14:27 +0100, , minor setup.py update,,
1153,11bc16e52534b0381418555a2b10f52f4b9abb65,ason Rhinelander <jason@imaginary.ca>, 2017-01-01 10:53:00 -0400, , remove allow fails 581 longer needed debian testing python 2.7.13 final wheel numpy scipy available,,
1154,fb4e1047e40f556bc994cc43b1d5bd7317aa0082,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-01 14:29:40 +0100, , begin work v2.1.0,,
1155,e33ef9c20d36fe760792c61ccc95ecf1b42cf81d,enzel Jakob <wenzel.jakob@epfl.ch>, 2017-01-01 13:55:06 +0100, , v2.0.0 release,,
1156,401008163afa841a8fb7ca8220b678e8cafa18be,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-29 23:44:48 +0100, , updated release instruction,,
1157,2ef3599fe710d41ca433edce0df1d2e19721fa21,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-29 19:15:17 +0100, , added link gitter chat room,,
1158,f331843b3955ac345223c20a4d0d5e2fd6f85d2e,ichael KÃ¶nig <michael.koenig@blue-yonder.com>, 2016-12-28 12:10:11 +0100, , make non ancient version gcc explicit documentation mean 4.8 575,,
1159,f3de2d5521c3e95e3212b7c5dc26d9d4e23b17fb,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-26 13:34:28 +0100, , reference binder project documentation,,
1160,1805c3489fbd650e6cd0b4a7dd1d4dde7f99f1cf,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-26 13:26:17 +0100, , updated loc value readme.md intro.rst,,
1161,ed52f4664c9bb596f7a95d0313324963b90e4906,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-26 13:18:26 +0100, , updated changelog,,
1162,64cb699e8ae8d8c31984d9654f1de0f5e8618e4a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-26 13:12:10 +0100, , disable dynamic attribute test pypy,,
1163,a3fec901b8c9e02d60593a749737aebcbf732ffa,ason Rhinelander <jason@imaginary.ca>, 2016-12-26 05:26:21 -0500, , avoid cmp0048 warning 570 fix 567 pybind cmakelists get loaded via another cmakelists higher minimum version e.g 3.0 project command without version produce cmp0048 warning commit explicitly request new behaviour policy exists cause problem set version later,,
1164,c40d8c617f10f04d03b2ef13e6fa032afc9b6ce3,ung-Yu Chen <yyc@solvcon.net>, 2016-12-26 18:25:42 +0800, , fix segfault repr pybind11 type metaclass 571 fixed regression introduced pypy patch use instead ht_qualname fix ht_qualname field added qualname repr test work python 3.3 previous version,,
1165,87f893b76642d09a6d4d3e38e1207dcd57db9d6b,ung-Yu Chen <yyc@solvcon.net>, 2016-12-26 18:24:30 +0800, , temporarily allows osx homebrew python 3.6 fail 572 temporarily allows osx homebrew python 3.6 fail http github.com pybind pybind11 pull 570 issuecomment 269120613 homebrew got python 3.6 brew install python3 numpy scipy binary wheel 3.6 yet trying compile source failing,,
1166,3c7967111280b0a796986ac2025d0ca201623656,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-23 16:19:36 +0100, , minor v2.0.0 rc1 related change,,
1167,d3549d6027837693ed25a86a341e690e120b55e9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-23 16:01:04 +0100, , added changelog v2.0.0 rc1,,
1168,05920e363edfd5d8dc6b4608820d749af5217b5f,ason Rhinelander <jason@imaginary.ca>, 2016-12-19 11:33:02 -0500, , change compilation test target back check 566,,
1169,06b9397c721e899e5453c4c048dd8d0f87209ea3,ean Moldovan <dean0x7d@gmail.com>, 2016-12-17 21:39:17 +0100, , add check target run available test,,
1170,71e8a7962c4ce032d61b417e6421730335c63a62,ean Moldovan <dean0x7d@gmail.com>, 2016-12-17 21:38:57 +0100, , rename target pybind11 pybind11 pybind11 module make room eventual pybind11 embedded target,,
1171,0cbec5c96e92b26f2ed176c0ecaf8c40fa80f9b1,ean Moldovan <dean0x7d@gmail.com>, 2016-12-16 22:58:37 +0100, , add new option doc see documentation description option,,
1172,b0f3885c954166d813bfbf7ca33263645f743ee0,ean Moldovan <dean0x7d@gmail.com>, 2016-12-14 01:43:39 +0100, , make sure find_package behave identically add build_interface pybind11 pybind11 alias interface library match installed target add new cmake test consolidates .cpp .py file needed cmake build test  test  cmakelists.txt main.cpp test.py  cmakelists.txt main.cpp test.py  test  cmakelists.txt cmakelists.txt cmakelists.txt cmakelists.txt main.cpp test.py,,
1173,003a9eba5944ad48b3edb154d78044607b2203d3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-18 17:08:13 +0100, , fixed pypy minimum version,,
1174,1d1f81b278d956445287b3c491125caa11b925bd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-16 15:00:46 +0100, , wip pypy support 527 commit includes modification needed get pybind11 work pypy full test suite compiles run except last function commented due problem pypy reported pypy bugtracker two somewhat intrusive change needed make possible two new tag buffer_protocol metaclass must specified class_ constructor class buffer protocol requires metaclass e.g static property note pypy version based python 2.7 pypy 3.x caught term cpyext compliance pypy 3.x patch follow,,
1175,c79e435e00fd4fb49817a87c3c2b2647482c077b,ori A. Burns <lori.burns@gmail.com>, 2016-12-15 18:15:24 -0500, , remove constexpr help export void arg function intel 557,,
1176,2029171211d5099a9679f492faf7fce33462e462,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-15 23:44:23 +0100, , feature support intrusively reference counted type 561 feature support intrusively reference counted type added testcase,,
1177,709e648c5780025f57076643a0f128bc7a7fb641,ason Rhinelander <jason@imaginary.ca>, 2016-12-15 16:49:09 -0500, , add temporary allow_failure python 2.7 gcc 562 current debian testing python 2.7.13 rc1 serious regression upstream http bugs.python.org issue5322 reverted rc2 final 2.7.13 ignore build failure build test temporarily intention reverting commit couple week stop failing i.e debian testing pick updated python 2.7 release,,
1178,6ae68fe3013c85cb53986d65ac0dd885af724559,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 12:23:12 -0500, , add simple any_of all_of implementation,,
1179,fa5d05e15de402eba3f6142fd3933f56b07d7a33,ason Rhinelander <jason@imaginary.ca>, 2016-12-12 18:11:49 -0500, , change all_of_t any_of_t all_of any_of add none_of replaces current all_of_t pred ... all_of ... previous use all_of_t pred ... becoming all_of pred ... similarly any_of_t also add none_of ... shortcut negation any_of ... allows all_of any_of used bit flexible e.g case several predicate need tested type instead predicate multiple type commit replaces implementation efficient version non msvc msvc change workaround use built recursive std conjunction std disjunction instead also remove count_t since any_of_t all_of_t thing using commit also rearranges future std import use actual std implementation feature appropriate compiler mode already thing like index_sequence saving much implementation enable_if_t example trivial think make intention code instantly clear also enables msvc native std index_sequence support,,
1180,b11b144603f7b8a8e95d784960fb85e86fde889f,ason Rhinelander <jason@imaginary.ca>, 2016-12-14 01:46:17 -0500, , remove duplicate protected private,,
1181,a3d41d103cdecf7165b6340373ed9bc247b9b456,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 21:00:51 -0500, , add gcc build debian experimental add build using snapshot debian experimental build set allow failure without triggering overall build failure since experimental compiler experimental support future standard,,
1182,6e036e78a75276766a8b4cfaf9637c4dd9b6ecd0,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 20:06:41 -0500, , support binding noexcept function method compiling mode noexcept specifier part function type cause failure pybind11 omitting noexcept specifier deducing function return argument type implicitly making noexcept false part type mean function noexcept fail match function template cpp_function place get compilation failure end trying fit lambda function version fails since function pointer operator however deduce true false noexcept need add whole set overload need deduce extra argument 17. work pre however commit add two macro fix problem appropriate feature macro set provide extra bool noexceptions template argument provide noexcept noexceptions deduced specifier pre expand nothing needed compile pybind11 gcc7 std,,
1183,79de508ef4781212415f6a2d01014af4bb74198a,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 19:36:16 -0500, , fix test compilation optional exist gcc std experimental optional std optional break test compilation trying use opt_int type alias,,
1184,12ce07a2c226769f7b1370789ad2a28ff548baa2,ason Rhinelander <jason@imaginary.ca>, 2016-12-14 01:43:06 -0500, , remove useless convert argument argument_loader since argument loader split tuple converter never called convert argument set anything true remove argument entirely passing literal true within argument_loader individual value caster,,
1185,23e59c8633a8ba22d6913bce2b4cf57af8bd8b00,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 19:11:36 -0500, , work around gcc ice current snapshot fails compile pybind std  make building cxx object test cmakefiles file included home jagerman src pybind11 test home jagerman src pybind11 test home jagerman src pybind11 include pybind11 pybind11.h instantiation pybind11 cpp_function initialize func return args ... const extra ... lambda pybind11 detail function_record pybind11 handle pybind11 handle pybind11 handle func pybind11 cpp_function cpp_function return class arg ... const extra ... return int class arg extra pybind11 name pybind11 is_method pybind11 sibling lambda return int args extra pybind11 name pybind11 is_method pybind11 sibling home jagerman src pybind11 include pybind11 pybind11.h 120 required struct pybind11 cpp_function initialize func return args ... const extra ... func pybind11 cpp_function cpp_function return class arg ... const extra ... return int class arg extra pybind11 name pybind11 is_method pybind11 sibling lambda return int args extra pybind11 name pybind11 is_method pybind11 sibling lambda struct pybind11 detail function_record class pybind11 handle class pybind11 handle class pybind11 handle home jagerman src pybind11 include pybind11 pybind11.h 120 required void pybind11 cpp_function initialize func return args ... const extra ... func pybind11 cpp_function cpp_function return class arg ... const extra ... return int class arg extra pybind11 name pybind11 is_method pybind11 sibling lambda return int args extra pybind11 name pybind11 is_method pybind11 sibling home jagerman src pybind11 include pybind11 pybind11.h required pybind11 cpp_function cpp_function return class arg ... const extra ... return int class arg extra pybind11 name pybind11 is_method pybind11 sibling home jagerman src pybind11 include pybind11 pybind11.h 984 required pybind11 class_ type_ option pybind11 class_ type_ option def const char func const extra ... func int extra type_ option home jagerman src pybind11 test required home jagerman src pybind11 include pybind11 pybind11.h 147 sorry unimplemented unexpected ast kind cleanup_stmt   home jagerman src pybind11 include pybind11 pybind11.h 147 internal compiler error constexpr.c 5593 0x84c52a src gcc constexpr.c 5593 0x84c3c0 src gcc constexpr.c 5154 0x645511 finish_function int src gcc decl.c 15527 0x66e80b tree_node int bool src gcc pt.c 22558 0x6b61e2 src gcc pt.c 10444 0x6b61e2 tree_node src gcc pt.c 10514 0x75a676 complete_type tree_node src gcc typeck.c 133 0x67d5a4 tree_node tree_node int tree_node bool bool src gcc pt.c 17516 0x67ca19 tree_node tree_node int tree_node bool bool src gcc pt.c 16655 0x672cce tsubst_expr tree_node tree_node int tree_node bool src gcc pt.c 16140 0x6713dc tsubst_expr tree_node tree_node int tree_node bool src gcc pt.c 15408 0x671915 tsubst_expr tree_node tree_node int tree_node bool src gcc pt.c 15394 0x671fc0 tsubst_expr tree_node tree_node int tree_node bool src gcc pt.c 15618 0x66e97f tsubst_expr tree_node tree_node int tree_node bool src gcc pt.c 15379 0x66e97f tree_node int bool src gcc pt.c 22536 0x6ba0cb int src gcc pt.c 22653 0x6fd7f8 src gcc decl2.c 4512  look lot like http gcc.gnu.org bugzilla show_bug.cgi 77545 error seems get confused std tuple ... value argument_loader apparently initialized properly adding default constructor explicit default initialization value work around problem,,
1186,cb63770978151a89e07c38e7a131ad3de3927020,ason Rhinelander <jason@imaginary.ca>, 2016-12-13 19:09:08 -0500, , silence warning eigen wint bool context trigger many warning compiling eigen code disable locally eigen.h,,
1187,f4b81b36bff9b888f4ee9e1b664614e7805eac7c,ori A. Burns <lori.burns@gmail.com>, 2016-12-13 15:29:10 -0500, , reflow doc paragraph,,
1188,eb09af5e586d0305bc66c9ef104118afc67b5873,ori A. Burns <lori.burns@gmail.com>, 2016-12-13 11:02:37 -0500, , test installed pybind,,
1189,545b4dbc19e4b539d319ca3478322d315ac62a93,ori A. Burns <lori.burns@gmail.com>, 2016-12-13 10:59:21 -0500, , separate main cmakelists.txt tool file also available upon installation,,
1190,5cafc99884d8c8b8ac158566ee3f4b0992c90e66,ori A. Burns <lori.burns@gmail.com>, 2016-12-13 10:55:38 -0500, , add cmake exported interface library config detection file,,
1191,44d7c59c55713738e40b1ea403cb38a4f0822533,ori A. Burns <lori.burns@gmail.com>, 2016-12-13 10:46:41 -0500, , make installation include config dirs configurable set cmake project version source,,
1192,76e993a3f485baa173136d3bd0eccc4ecdb326fd,ean Moldovan <dean0x7d@gmail.com>, 2016-12-13 00:59:28 +0100, , set maximum line length python style checker 552,,
1193,de2c6df2003816b6682f94fde095123ca3b62d6f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-13 00:17:29 +0100, , check style.sh check accidentally committed crlf line ending,,
1194,3f1ff3f4d1f3fb0298d5bc05cad22ed621d72a5d,ason Rhinelander <jason@imaginary.ca>, 2016-12-12 17:42:52 -0500, , add automatic casting assignment non pyobject type 551 add automatic casting assigning python type like dict list attribute instead dict key cast val m.attr foo cast true list.append cast simply write dict key val m.attr foo true list.append cast needing extra parameter e.g non default rvp still require cast call set add also supported usage channeled sfinae implementation either return cast combined non converting handle autocasting template method via helper method either return handle cast type,,
1195,7c9ef7b55393762086ae822a278e18d258baff1a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-12 23:24:21 +0100, , stable documentation link readme.md,,
1196,f8571ea1bc71e7965b3371471a8384f36817dffc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-11 18:51:44 +0100,3212, workaround sphinx docutils issue http github.com sphinx doc sphinx issue 3212,,
1197,8fadade2251c54a3df8ab9de1f6566ba675bb87c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-12-09 15:26:03 +0100, , add valarray documentation update docutils travis,,
1198,4e959c9af4b4e6d8975c2d726a3d29693675021c,ean Moldovan <dean0x7d@gmail.com>, 2016-12-08 11:07:52 +0100, , add syntax sugar resolving overloaded function 541,,
1199,ae185b7f1973aef0bd15f1f20cbcbac7d3f3abb5,ason Rhinelander <jason@imaginary.ca>, 2016-12-07 18:43:29 -0500, , std valarray support stl.h 545 added ternary support descr args current bool ternary support work char commit allows work descr argument well add support std valarray stl.h abstract std array array_caster used either std array std valarray main difference std valarray resizable also let array_caster potentially used std array like interface much list_caster map_caster currently provide small stl.h cleanup remove redundant type typedefs make internal list_caster method private,,
1200,ab90ec6ce91c105e9871e866cedad944ef308a1e,ean Moldovan <dean0x7d@gmail.com>, 2016-12-07 02:36:44 +0100, , allow reference object held smart pointer 533,,
1201,8c85a857474f629d5e7c5ccd740a660098e417bd,ean Moldovan <dean0x7d@gmail.com>, 2016-11-27 20:56:04 +0100, , use index_sequence possible newer standard library use compiler intrinsics std index_sequence make freeâ prevents hitting instantiation limit recursive template ftemplate depth,,
1202,107285b3539da43c71201baf9c78af49adc1a6de,ean Moldovan <dean0x7d@gmail.com>, 2016-11-27 20:32:04 +0100, , accept sequence type std tuple std pair pythonic compliment std vector std list caster also accept sequence,,
1203,719c1733ddea0c5c9b5b6f5fb2d14980b6a0012f,ean Moldovan <dean0x7d@gmail.com>, 2016-11-27 18:19:34 +0100, , split tuple caster function argument loader needed order allow tuple caster accept sequence keeping argument loader fast also little overlap two class make separation clean itâ also good practice completely new functionality specialization,,
1204,9f13a30c6e88ec7987a624d6e6186445c509b396,lessandro Bacchini <allebacco@gmail.com>, 2016-12-01 15:22:17 +0100, , add missing header sort header 540,,
1205,67a68f1394de3135dcb10f45169af937043bf1e5,squires <eric.g.squires@gmail.com>, 2016-12-01 05:35:34 -0500, , print traceback failed import 537,,
1206,14bfe622f86213d20c93a61a5fc53539046824e2,ason Rhinelander <jason@imaginary.ca>, 2016-11-25 13:23:01 -0500, , simplify cast_op return type 532 using complicated declval pointlessly complicated already know type cast_op_type first place declval also broke msvc,,
1207,db86f7f2859398f20180968ba8789595a581338a,ason Rhinelander <jason@imaginary.ca>, 2016-11-25 12:35:00 -0500, , clean cast operator invocation 531 add detail cast_op caster function handle rather verbose caster.operator typename castertype template cast_op_type allows various place use shorter clearer cast_op caster instead full verbose cast operator invocation,,
1208,f2004937161413946e575885d98395a9dfa9e6fa,ason Rhinelander <jason@imaginary.ca>, 2016-11-25 07:06:18 -0500, , fixed stl caster use appropriate type_caster cast_op_type 529 stl caster using value cast value key always appropriate change use appropriate value converter cast_op_type,,
1209,8d396fcff2735b211939fbb22729212145e29c9f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-24 23:11:02 +0100, , use pybind11 instead pygilstate_,,
1210,099d6e9c48e5a2a76c4bad375e33d58e0834e587,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-24 18:52:31 +0100, , improved implementation exception destructed context code catch point python gil may held could lead crash previous implementation pyerr_fetch pyerr_restore always occur pair case previous implementation clear exception new approach pyerr_restore pyerr_clear instead simply decreasing reference count exception object,,
1211,e72d958a5d38d18085d83bfe84a214c41edb267f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-24 12:31:06 +0100, , detail error_string handle call stack switch python multiple time,,
1212,fbec17ce900cf82da85570f435d24cae07aa6485,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-24 12:30:11 +0100, , move semantics,,
1213,2ac2d69418bf4c9332b1fd827c24914f9165d206,ason Rhinelander <jason@imaginary.ca>, 2016-11-22 15:59:18 -0500, , improve detection python library directory 523 use libdir multiarch linux find python library remove apple specific setting non window one work fine default libdir multiarch avoid getting none remove trailing whitespace,,
1214,5271576828bfe8288a320ec87950af1a5c7f112b,atrick Stewart <patrick@rfcreations.com>, 2016-11-22 14:56:52 +0000, , use correct itemsize constructing numpy dtype buffer_info,,
1215,47681c183d2835cae0e83e76d60f695928c10a52,atstew <patstew@gmail.com>, 2016-11-22 11:17:07 +0000, , mark unaligned type buffer 505 previously type marked unaligned buffer format string test alignment adding marker,,
1216,b14f065fa97b6e0baf110e93bdb04587dfb87ed5,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-11-22 01:29:55 -0900, , numpy.h replace macro function 514,,
1217,7146d6299c57be4bda02b0c7fc0e3c0eaab1702a,ason Rhinelander <jason@imaginary.ca>, 2016-11-22 05:28:40 -0500, , changed invoked output use repr instead str 518 give informative output often including type least hint type,,
1218,c4d8196607eedeb5d0c58fafcf20a0f9da059925,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-20 23:08:00 +0100, , include license readme.md contributing.md pip archive fix 512,,
1219,bad17402132511604169c075b3b73d59957c484f,ean Moldovan <dean0x7d@gmail.com>, 2016-11-20 21:21:54 +0100, , add check maintain consistent python code style prevent bug 515 flake8 configuration included setup.cfg check executed automatically travis ensures consistent pep8 code style doe basic linting prevent possible bug,,
1220,df81546965df4cac8b9fec5aa95fd480204599e6,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-20 05:41:32 +0100, , added forgotten initialization,,
1221,d079f41c26296d1b1fd054a20bf6a298adcc0607,ean Moldovan <dean0x7d@gmail.com>, 2016-11-20 05:31:02 +0100, , always use move rvalues 510 fix 509 move policy already set rvalues 473 applied directly cast user defined type problem stl container cast value indirectly rvalue information lost therefore move policy set correctly commit fix also make additional adjustment remove copy policy exception rvalues always use move policy also safe copy rvalues move policy internal fallback copying,,
1222,31fbf18ac7fd92b73a7d4412c8d976c6b10a3559,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-20 05:27:05 +0100, , replace redundant function_record class_ field bit,,
1223,7c2461eefd9bad93601a431a45aa8785ebf26b2f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-20 05:26:02 +0100, , resolve issue involving inheritance def_static override fix 511,,
1224,405f6d1dfd1a1f31369489b6cd4893aa8db6e1d3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-17 23:24:47 +0100,503, make arithmetic operator enum_ optional 508 following commit 90d278 object code generated python binding nanogui github.com wjakob nanogui went whopping turn project quite enums really care arithmetic operator commit thus partially reverts effect 503 introducing additional attribute arithmetic must specified arithmetic operator desired,,
1225,99ddc9ac1a331afcd5099fac97d1a99bad5d83f1,ori A. Burns <lori.burns@gmail.com>, 2016-11-17 05:01:11 -0500, , equal needed build icpc 2016.3 507,,
1226,4de271027d9e8b1daed2ba111c495cae23c970ac,ean Moldovan <dean0x7d@gmail.com>, 2016-11-16 01:35:22 +0100, , improve consistency array array_t regard pytypes array_t const object throw error array_t ensure intended caster old constructor deprecated array array_t get default constructor empty array array get converting constructor isinstance array_t check type flag one special thing must remain array_t get type_caster specialization ensure instead simple check,,
1227,c7ac16bb2ea29f8096edb2bf7d7b148c02ef9cba,ean Moldovan <dean0x7d@gmail.com>, 2016-10-28 03:08:15 +0200, , add steal low level unchecked cast pytype converting constructor convenient safe user code library internals additional type check possible conversion sometimes desired serve low level unsafe counterpart cast deprecates object handle bool constructor renamed borrowed parameter is_borrowed avoid shadowing warning msvc,,
1228,e18bc02fc9bc17f537aa3d57ebd08c277b6a3959,ean Moldovan <dean0x7d@gmail.com>, 2016-10-25 22:12:39 +0200, , add default converting constructor concrete python type deprecate object str member function since str obj equivalent preferred make repr free function make sure obj.cast work expected python type obj.cast obj i.e convert given object different python type however obj.cast usually call type_caster load check type without actual conversion cause unexpected cast_error commit make obj.cast obj python type simplify pytypes converting constructor implementation necessary maintain full set converting constructor assignment operator const single converting const constructor work impact binary size hand conversion function significantly simplified,,
1229,b4498ef44d5b2fbae84726a5d6a3ad011f053922,ean Moldovan <dean0x7d@gmail.com>, 2016-10-23 14:50:08 +0200, , add isinstance obj generalized python type checking allows checking python type creating object instead example  auto list ptr true l.check ...  replaced  isinstance list ptr auto ptr ...   deprecates object check isinstance cover use case also check user defined type  class pet ... class_ pet ... m.def is_pet object obj return isinstance pet obj work expected  ,,
1230,281ccc692c95106a81d1affb5207c8b913fecec6,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-16 17:59:56 +0100, , exception constructor consistency improvement fix 492,,
1231,5027c4f95b65dbf76c3f72ce0fcda89716fb5f62,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-11-16 08:53:37 -0800, , switch numpy variadic indexing per value argument 500 also added unsafe version without check,,
1232,2fb5f1d0c3d3f4604ef6b2265631810f7ba0d0cc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-16 17:36:54 +0100, , added message recursion limit,,
1233,90d27805b9d1be3f1a8ad4d55ed3b06bc7b3b976,im Schellart <P.Schellart@princeton.edu>, 2016-11-16 11:28:11 -0500, , extended enum support 503 allow enums ordered support binary operator,,
1234,2e76daa53f76d96c8ca6b87ae9d1c1617ad22018,ason Rhinelander <jason@imaginary.ca>, 2016-11-15 16:24:26 -0500, , enable testing optional available 501,,
1235,425b4970b28cedfb8c4567dded6378c0e33c117b,van Smirnov <aldanor@users.noreply.github.com>, 2016-11-15 12:00:38 +0000, , add type caster nullopt_t fix none refcount 499 incref returned none std optional type caster add type caster nullopt_t add test nullopt_t,,
1236,9a110e6da84a7f23c3a447e4325b62db6f6e1f28,lexander Stukowski <stukowski@users.noreply.github.com>, 2016-11-15 12:38:05 +0100, , provide control automatic generation docstrings 486 added class give global control generation docstrings function signature,,
1237,617fbcfc1e90b8cf9b98c6a25ba112b84ab16b9e,ason Rhinelander <jason@imaginary.ca>, 2016-11-15 06:30:38 -0500, , fix stl_bind support movable non copyable value type 490 commit includes following change provide non copyable container currently fails various stl container e.g std vector std unordered_map std deque etc container value type e.g std pair map non copyable add override type look like container also requires value_type copyable stl_bind.h make bind_ vector map work non copy constructible type stl_bind modifier require copying type copy constructible provide read interface instead practice mean type non copyable intent purpose read python side currently simply fails compile container still possible caller provide interface manually defining method returned class_ object something stl_bind handle code construct value going highly dependent container value_type stl_bind copy arithmetic value type non primitive type may well copying complex type returning reference appropriate commit return internal reference basic arithmetic type return reference whenever possible definitely i.e std vector bool return something copy everything else return reference map case always return reference least default stl map unordered_map,,
1238,06bd27f53683c43198cfb791a5a15fac06f0fbd5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-15 06:37:39 +0100, , import size_t pybind11 namespace fix 498,,
1239,0780655808e4aa299a58ac38da1bc1487ac01be1,ason Rhinelander <jason@imaginary.ca>, 2016-11-12 20:41:31 -0500, , fix test compilation failure gcc 4.9 496,,
1240,920e0e349d0016c4b58b32d9df444a5502673f8c,ason Rhinelander <jason@imaginary.ca>, 2016-11-12 19:10:53 -0500, , add cmake option override test 489 working particular feature nice able disable test except one working currently possible editing test cmakelists.txt commenting test want commit step letting give list test want invoking cmake e.g cmake test_issues.cpp change build build two test change pytest target invoke two associated test persists build directory disable running cmake also add message pytest output remind effect note test run effect,,
1241,5e1c0445cfe0ec563d62ba87e3e9b1d20e863033,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-12 16:57:30 +0900, , include backtrace pybind11 detail error_string 494,,
1242,219b10ac99e998c25708f4af1e7e9d64994187e3,ason Rhinelander <jason@imaginary.ca>, 2016-11-11 02:15:38 -0500, , update travis appveyor build eigen 3.3.0 491,,
1243,2b92a49115657712c7dd924248df2286e6143b8d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-08 10:58:22 +0100, , updated check style.sh doc,,
1244,cc4efe69c2183914dd3ae644224a741a74612393,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-08 10:53:30 +0100, , code style check travis,,
1245,fe40dfe67d2c7d31673ee8d41794897f839eb530,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-07 15:59:01 +0100, , address number caster regression fix 484,,
1246,c07ec31edf5c032da8d22155ac98edbecba51aa7,ason Rhinelander <jason@imaginary.ca>, 2016-11-06 13:12:48 -0500,478, construct unique_ptr around unowned pointer 478 need initialize holder around unowned instance holder type non copyable i.e unique_ptr currently construct holder type around value pointer never actually destruct holder holder destructor called instance actually inst owned true set seems pointer however creating holder around unowned instance never actually intend use anything unique_ptr give fact want unique_ptr ever actually got destroyed would cause destruction wrapped pointer despite fact wrapped pointer owned commit change logic create unique_ptr holder actually instance destruct via constructed holder whenever constructed holder case owned unique holder shared holder type change include added test non movable holder constructor destructor count three alive assertion pas 478 fail count respectively unique_ptr want destroy want destructor run return cstats reference fix constructstats doc small cleanup 478 test code fix constructstats documentation static method definition use reference  rename inst constructed inst make clearer exactly referring,,
1247,e916d846bf90c0405fb57a70ad9b0b4cb9cacc1e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-04 16:51:14 +0100, , minor enum export_values return reference usual,,
1248,f1b44a051a39a01ef83c90f7d5485e38c40eac15,ason Rhinelander <jason@imaginary.ca>, 2016-11-04 09:49:37 -0400, , optional requires std 479 place descr.h make use new macro quite old one tested couple feature new one check __cplusplus version even try enable msvc icc add optional including mode allowed including experimental optional allowed mode triggered provide optional yet,,
1249,dc0b4bd2c93c6a58002ca9c0b0b36b07006cf7d3,ason Rhinelander <jason@imaginary.ca>, 2016-11-04 09:47:41 -0400, , add debugging info .so size build output 477 add debugging info size build output add small python script tool capture .so size build output build output via string 35m x86_64 linux gnu.so file size 924696 decrease 73680 byte 7.38 35m x86_64 linux gnu.so file size 998376 increase 73680 byte 7.97 35m x86_64 linux gnu.so file size 998376 change .so build .so size 35m x86_64 linux gnu.so file size 998376 allows example build checkout different branch rebuild easily see exactly change size also allows looking travis appveyor build log get idea .so .dll size across different build system minor libsize.py script change use raii open remove unused libsize report change xyz byte a.bc,,
1250,45e6e6f6eb8754f86ebe6886d39fc97addd13b5f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-04 11:06:22 +0100, , add note custom type caster fix 480,,
1251,12edaaa66ac8a41c65208252f8b651e639458110,ason Rhinelander <jason@imaginary.ca>, 2016-11-03 11:17:11 -0400, , enable std optional compiling 476,,
1252,44a69f78cfddbe99f47a1d2061f477c9b2d7ba23,van Smirnov <aldanor@users.noreply.github.com>, 2016-11-03 12:42:46 +0000, , std experimental optional 475 add type caster std experimental optional add test std experimental optional support optional experimental optional mention std experimental optional doc,,
1253,bd560acf401596136b98a4540c2454ad07a99e9e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-03 11:53:35 +0100, , smart pointer refcount fix dean0x7d slight modification fix 471,,
1254,0a9ef9c3008023f633e5d81d1b77c12444a60e5e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-03 11:08:50 +0100,472, merge pull request 472 aldanor feature shared dtypes support sharing dtypes across extension public shared data api,,
1255,cc8ff16547fc841d9bac4e8a3624386d70c566e3,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-31 16:16:47 +0000, , move register_dtype outside template avoid code bloat possible,,
1256,f95fda0eb20dc55b92c45249b1e004c34ab06f3f,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-31 21:40:11 +0000, , add doc shared data api,,
1257,2dbf0297050533e697d065f4b92283e0ecd37581,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-31 14:11:10 +0000, , add public shared_data api numpy internals stored key,,
1258,c546655dc29086895538be92377a82f64a834c1f,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-31 13:54:43 +0000, , use pytest fixture numpy dtypes test module,,
1259,2184f6d4d64b4631c943b4c92d35bcd849da51ad,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-31 13:52:32 +0000, , numpy dtypes shared across extension,,
1260,a743ead455511043ce1ddc1386dcdbc53183484f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-11-03 09:44:30 +0100,474, merge pull request 474 aldanor feature numpy dtype overriding field name binding structured dtypes,,
1261,abd3429ce9ae884974c11d2dc79a190f0ca8f742,van Smirnov <i.s.smirnov@gmail.com>, 2016-11-01 13:29:32 +0000, , add test numpy dtypes custom name,,
1262,e8b50360fe2523e8d490d40dc9a06b36b7e8516a,van Smirnov <i.s.smirnov@gmail.com>, 2016-11-01 13:27:35 +0000, , add dtype binding macro allows setting name type ...,,
1263,03f627ebb1884e3f532d96707454cc3051eb98bd,ean Moldovan <dean0x7d@gmail.com>, 2016-11-01 11:44:57 +0100, , make reference _internal default return value policy property 473 make reference _internal default return value policy property def_property function used automatic default return value policy commit make non static property use default thus matching def_readonly def_readwrite static property use reference default thus matching  case cpp_function passed def_property policy used instead default user defined argument extra still top priority override default policy one cpp_function resolve 436 almost always use move rvalues function return rvalues rvalue reference viable return value policy copy move reference _internal take_ownership would take address temporary always error commit prevents possible user error overriding bad rvalue policy move besides move copy allowed explicitly selected user also necessary safety feature support new default return value policy property reference _internal,,
1264,030d10e826b87f8cdf0816aa36b9a515fb7d064d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-28 01:23:42 +0200, , minor style fix,,
1265,496feacfd031d185c63252a7040930db717afc6c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-28 00:37:07 +0200, , pybind11 implicitly convert numpy integer scalar current integer caster unnecessarily strict rejected various kind numpy integer type calling function expecting normal integer relaxes current behavior,,
1266,a6f85eb98531af69557e1f92b32031212460c37a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-25 10:03:53 +0200,465, merge pull request 465 jagerman prevent object overwriting prevent overwriting previous declaration,,
1267,6873c202b3fd2e2264b2566d60cf079ee9322264,ason Rhinelander <jason@imaginary.ca>, 2016-10-24 21:58:22 -0400, , prevent overwriting previous declaration currently pybind11 check define new object e.g class function exception overwrites existing one thing overwritten class lead segfault pybind still think type defined even though python longer type case harmless e.g replacing function exception even case likely bug code prevent actively something harmful like deliberately overwriting previous definition detects overwriting run time error occurs standard class function exception def registration interface addition non template code result actually tiny decrease .so size compared master without new test code 977304 977272 byte higher new test,,
1268,dd9bd7778f2e76f3e0234fa9602758dfe7169a59,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-25 01:15:25 +0200,453, merge pull request 453 aldanor feature numpy scalar numpy scalar ctypes conversion support,,
1269,8f3e045deb6d504e202d9e57318b6c5d8fd691e6,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-23 15:43:03 +0100, , use detail get_type_info wherever sensible reduces direct access place,,
1270,6ba98650e22f068ceac1915e3c6995446cf304e0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-24 23:48:20 +0200, , bit work new documentation structure,,
1271,a6e6a8b108f49f8e990045e020e2058b15dfcf5b,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-23 15:27:13 +0100, , require existing typeinfo direct conversion avoid hashmap lookup since pointer list direct converter cached typeinfo,,
1272,c0d19192d2c13e405715dc5afe2eb40d1a222548,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-22 13:08:44 -0400, , minor indentation change,,
1273,f4eec65526f4f86f4e97db3527b29008f66296af,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-22 19:06:50 +0200,455, merge pull request 455 bennorth bugfix bad delete copy ctor bugfix bad delete copy ctor,,
1274,43a88f4574269c5d8e621b6e15f0fcfb2fe317a2,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-22 10:52:05 +0100, , reraise existing exception dtype ctor fails,,
1275,694269435bc5f24d38d5aa6b252e481406f3d2ac,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-22 10:51:19 +0100, , allow implicit cast literal string dtype,,
1276,ef5a38044c515a744b4e8a9f7f697f945f558efe,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-22 10:51:04 +0100, , dtype method docstrings,,
1277,f70cc112f0c0ea2a3fbac47bc092ce165fb98135,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-22 10:50:39 +0100, , make dtype string ctor accept const ref,,
1278,fb7c9fd3260f306b267acbb3450512cb7c9a4ace,ason Rhinelander <jason@imaginary.ca>, 2016-10-22 12:54:33 -0400, , remove obsolete example reference 457 remove obsolete example reference make example fully working except includes fix 456,,
1279,18e9590ca9607e01ece81d2fc9e293d297474073,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-22 18:53:29 +0200,458, merge pull request 458 dean0x7d fix property fix def_property related function,,
1280,5b7e190fa2c75137e8643aa5b7243c5b5ec15408,ean Moldovan <dean0x7d@gmail.com>, 2016-10-21 18:51:14 +0200, , fix def_property related function making cppfunction explicit broke def_property friend added test would compile without implicit cppfunction,,
1281,bbe45082f4e40159eba3e066c66ce415152c677c,en North <ben@redfrontdoor.org>, 2016-10-20 21:19:30 +0100, , test uncopyable static member without previous commit test generates core dump,,
1282,24a2054dbcf8bae3e00927466c1942103f9df0f6,en North <ben@redfrontdoor.org>, 2016-10-20 21:09:25 +0100, , fix wrapper value owned ctor missing cast value wrapper value wrapper owned incorrect case return value policy copy requested copy constructor similarly move particular source object static instance destructor object inst lead class_ dealloc incorrectly attempt delete static instance commit arranges code clearer value value owned various case behaviour different previous code two situation policy copy copy ctor old code leaf value src owned true lead trouble new code leaf value nullptr owned false correct policy move move copy ctor old code leaf value src owned true lead trouble new code leaf value nullptr owned false correct,,
1283,77898af0f82e53c81916688460fb9de31bfbfbae,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-20 19:16:32 +0200,454, merge pull request 454 dean0x7d shared_ptr support std shared_ptr holder type box,,
1284,7edd72db243e676514d8e036e2688fa96e573343,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:57:12 +0100, , disallow registering dtypes multiple time,,
1285,ccc69f91f46115bcc9def5c9d4fba8ff03745190,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:52:24 +0100, , cache direct converter generic type caster,,
1286,4f3044616476aba72ec7a81274feccbf2a228d1d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-20 17:51:30 +0200,448, merge pull request 448 dean0x7d doc reorganize documentation,,
1287,cbbb7830f2f9953d3ea52b4e0f31828da4a6936b,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:47:29 +0100, , add test numpy scalar conversion,,
1288,85e16262d622cce52a0352bc125b5cf1d17cac6f,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:46:40 +0100, , enable direct conversion typeinfo present,,
1289,7bf90e8008fcaba6b03dfbc999610928197174fa,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:11:08 +0100, , add direct converter numpy scalar,,
1290,c275ee6b4620315d24c2251c1eea3bb66253eb61,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:09:31 +0100, , add support direct converter,,
1291,ba08db4da5c8fc105714ddfc623db6bd67a4eefd,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 16:09:10 +0100, , import numpy extern symbol,,
1292,5d28dd1194aaf22002c4872ae8e91b7d5a993f4c,ean Moldovan <dean0x7d@gmail.com>, 2016-10-18 13:56:33 +0200, , support std shared_ptr holder type box need manual user declaration like std shared_ptr existing one still compile without error ignored silently resolve 446,,
1293,f0b0df58a9fcbfdd94554c2b0b201db60e9eab4d,ean Moldovan <dean0x7d@gmail.com>, 2016-10-19 22:13:27 +0200, , directly compare way moving data python,,
1294,67b52d808e973bbdaed2d371df7ee74b173eb7ae,ean Moldovan <dean0x7d@gmail.com>, 2016-10-16 19:12:43 +0200, , reorganize documentation,,
1295,3eb569f4df24e91fa62b6ce9c80139c28bce22e1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-20 14:41:38 +0200,452, merge pull request 452 aldanor feature numpy enum auto implement format numpy descriptor enum type,,
1296,2f3f3687dc6efd282a500ec6253862d1f075beba,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 12:28:47 +0100, , add test numpy enum descriptor,,
1297,fb74df50c9165e768feac4a46f7e41e115996d62,van Smirnov <i.s.smirnov@gmail.com>, 2016-10-20 12:28:08 +0100, , implement format numpy descriptor enums,,
1298,35995856dd040c31dc33fa66c1699c0044b02a1e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-17 11:59:29 +0200,450, merge pull request 450 dean0x7d explicit bool make operator bool explicit,,
1299,c889ebd0e151bce10f141461e9be588119eef546,ean Moldovan <dean0x7d@gmail.com>, 2016-10-17 01:48:32 +0200, , make operator bool explicit prevents unwanted conversion bool int  object my_object std cout my_object std endl compiles print int my_object compiles nonsense  explicit operator bool case become compiler error,,
1300,135fd149288da8752c4ff2f9f4e960da546998e1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-16 22:47:49 +0200,449, merge pull request 449 jagerman implicit conversion disable implicit conversion constructor,,
1301,12d76600f8b9092707ff3fe4aab61baf8dc2adb8,ason Rhinelander <jason@imaginary.ca>, 2016-10-16 16:27:42 -0400, , disable implicit conversion constructor various class non explicit constructor accept single argument implicitly making implicitly convertible argument case desirable e.g implicit conversion std string str conversion double float_ many others however unintended e.g implicit conversion size_t pre declared array_t type disables unwanted implicit conversion marking explicit comment one deliberately left implicit,,
1302,946f897da07a2fea6867dce584b5132e0e7e654c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-15 23:50:06 +0200,445, merge pull request 445 lsst master accept sequence type std vector std list,,
1303,fcab621ee459338df2693a573112c4ba1b58aae2,im Schellart <P.Schellart@princeton.edu>, 2016-10-15 11:31:19 -0400,4, merge pull request lsst ticket 7115 accept sequence type std vector,,
1304,8b51ed17c82c1ae3d65c65decaff14e68f16c818,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-14 19:21:55 +0200,444, merge pull request 444 dean0x7d inherit dynamic attr fix dynamic attribute inheritance,,
1305,b8cb5ca7bd8719e9502ed83f283d7f4639410aa7,ean Moldovan <dean0x7d@gmail.com>, 2016-10-14 18:01:17 +0200, , fix dynamic attribute inheritance pytype_ready would usually perform inheritance adjust tp_basicsize appropriately,,
1306,5c13749aea599cd1df0dfbfc050e6e7dd8bb99b4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-14 08:57:12 +0200,437, merge pull request 437 dean0x7d dynamic attrs add dynamic attribute support,,
1307,9273af4f92580a4d25d7489a7a77c24daae4dbb0,ean Moldovan <dean0x7d@gmail.com>, 2016-10-13 23:53:16 +0200, , document dynamic attribute,,
1308,c01a1c1ade0ebeda166d9a070318b0abc6391086,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-14 01:08:03 +0200, , added array ensure function wrapping pyarray_fromany convenience function ensures object either array implementation try convert one layout requirement c_style f_style also provided,,
1309,22726c9d22ceeff322945f658141615d10e0a598,ean Moldovan <dean0x7d@gmail.com>, 2016-10-12 23:20:32 +0200, , allocate dict pointer needed dynamic attribute,,
1310,00488a3e2c3a3c9e62e9a3125e37a72e2976b667,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-13 10:50:35 +0200,440, merge pull request 440 wjakob master permit creation numpy array base object owns data,,
1311,fac7c0945801bdc37234a9559bfe86ac2f862059,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-13 10:37:52 +0200, , numpy base feature integrated feedback aldanor,,
1312,c49d6e508a07d876520b9a7aa0106633fc1324eb,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-13 10:34:52 +0200, , print robustness improvement added import exception class,,
1313,369e9b39377dfab610328a1f8de7d83273b82f55,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-13 00:57:42 +0200, , permit creation numpy array base object owns data patch add extra base handle parameter array array_t constructor specified along pointer data base object registered within numpy increase base reference count feature useful create shallow copy python array ensuring owner underlying garbage collected referenced numpy commit also add simple test function involving wrap function creates shallow copy various array,,
1314,43f6aa6846c776ec092ccb1b03086978a4875039,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-12 23:34:06 +0200, , added numpy test minor check stride respected even creating new array actually work change 100 convinced decided write test see true,,
1315,d2afe7f0017335b22f546226d718eb476a6062f5,im Schellart <P.Schellart@princeton.edu>, 2016-10-12 12:00:53 -0400, , accept sequence type std vector std list,,
1316,6fccf69360dd959ca9ef1ea74b163d5b245553c3,ean Moldovan <dean0x7d@gmail.com>, 2016-10-11 01:12:48 +0200, , add dynamic attribute support,,
1317,26df852392a631e10e8c88d01fc2a5dd9659c60e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-10 01:35:27 +0200, , removed forgotten message stmt cmakelists.txt,,
1318,6a1734af23fd221826dd835e5bf2278d8bfa0272,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-09 20:10:49 +0200, , minor cmake cleanup,,
1319,c3d8b8cf4244fbfa10aff7306353a8c070b4db88,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-09 20:06:33 +0200,435, merge pull request 435 wjakob master extra python version sanity check import time,,
1320,4c00fd9ef692107165dd34fc36af07ceb7480629,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-09 19:40:15 +0200, , extra python version sanity check import time python 3.5 often import pybind11 module compiled compiled python 3.4 i.e symbol resolved lead crash later due change various python internal data structure commit add extra sanity check prevent successful import python version match,,
1321,f66610153f5bd37fe409e83085e85eb3052ef0d3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-09 14:12:17 +0200, , actually setting contrary spec,,
1322,b55a5c5660a37adbb416dda18ea834f07505ce9d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-09 13:51:05 +0200, , fixed typo cmake file,,
1323,e71ab8f455dc374aeb719f500bc9300db9207687,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-08 15:30:00 +0200, , allow nullptr valued kwargs argument fix issue arise forwarding args kwargs captured pybind11 bound function call another python function initial function call includes keyword argument kwargs field set nullptr cause crash later,,
1324,ba7678016cf340a3ee733ca3fe941667448eab67,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-07 11:19:25 +0200, , numpy.h added array squeeze method,,
1325,68a9989298635c46e08221812e201935c0e613be,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-10-02 23:15:18 +0200,429, merge pull request 429 jagerman accessor bool operator add accessor bool operator,,
1326,7b8e3f9ec83f86b8356d3849162a9853f8722d0b,ason Rhinelander <jason@imaginary.ca>, 2016-10-01 20:41:14 -0400,425, add deprecated bool operator attr item 425 removed bool operator attribute accessors likely use existing code way 425 added hasattr function check existence attribute via obj.attr foo ... commit add back attr item accessors deprecation warning use hasattr obj ... obj.contains ... instead,,
1327,103d78d368f6920226cecc065c87fa194cbbab5f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-30 13:43:19 +0200, , failed implicit conversion lead nullptr dereference,,
1328,cd4d7d6bf87a5772db4761aea4a378ff87dc3db2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-30 12:20:19 +0200, , minor caster simplification,,
1329,dac3858e7db9d7c3b8dbe471ee545e7bd80b0955,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-29 21:30:00 +0200, , make header file viewable ides fix 424,,
1330,5699986d125d772d2985418b7f948d23e93187df,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-29 21:20:26 +0200,427, merge pull request 427 dean0x7d eigen base simplify base class detection eigen type,,
1331,71af3b07fba1e211d16c7c6e0d7ba6746d1bfc44,ean Moldovan <dean0x7d@gmail.com>, 2016-09-24 23:54:02 +0200, , simplify base class detection eigen type,,
1332,886288787eb0c2dfde447d1bbe9276c3f000b83d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-27 18:02:20 +0200, , contributor list update,,
1333,632dee1e11a6dd20ee03fb148c7d031dd6544383,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-27 17:58:34 +0200,356, merge pull request 356 trenthouliston master add cast chrono class python datetime,,
1334,10a6a90738d27eb732e53bd1ed9c7e05677d22ca,rent Houliston <trent@houliston.me>, 2016-09-28 01:01:59 +1000, , redo documentation make easier read,,
1335,a3603e6df0bc72b652ca76eeec8d0fdccebf15da,rent Houliston <trent@houliston.me>, 2016-09-28 01:01:44 +1000, , simplify redundant code conform style suggestion improve logic,,
1336,253e41ccad7216a9a656a82d101b98b40b112e16,rent Houliston <trent@houliston.me>, 2016-09-28 00:59:21 +1000, , relax constraint testing ensure work case,,
1337,b0c4444687f8450f0ce28ec8caec02f4c71d4bfc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-27 11:23:52 +0200, , format_descr constexpr tweak msvc jagerman fix 416,,
1338,0a014e91359f94ec93852b6ddb04c9c0e6feb8c3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-26 20:35:24 +0200,425, merge pull request 425 dean0x7d accessors make accessor interface complete,,
1339,2bab5793f75ddbd38b5639ec8c1fb822b7ad505d,ean Moldovan <dean0x7d@gmail.com>, 2016-09-23 00:27:59 +0200, , later assignment accessors overwrite original field auto var strange quirk var actually accessor object later assignment var ... would modify instead var surprising compared non auto assignment object var var ... overloading operator lvalue rvalue expected behavior restored even auto variable,,
1340,ea763a57a8b3d79e9fdeada091a87e4fec51af7f,ean Moldovan <dean0x7d@gmail.com>, 2016-09-22 23:39:06 +0200, , extend tuple list accessor interface,,
1341,242b146a5165015045d6547d4840fa6afc6161f4,ean Moldovan <dean0x7d@gmail.com>, 2016-09-08 17:02:04 +0200, , extend attribute item accessor interface using object_api,,
1342,865e43034b98a317dc523a23075750d564cb477c,ean Moldovan <dean0x7d@gmail.com>, 2016-09-21 01:06:32 +0200, , make attr item accessors throw error instead returning nullptr also add hasattr getattr function needed new attribute behavior new function behave exactly like python counterpart similarly object get contains method call __contains__ i.e keyword python,,
1343,37e22e436e012c18acedcce7229e9515cef0db45,ean Moldovan <dean0x7d@gmail.com>, 2016-09-08 16:36:01 +0200, , move common object function object_api mixin,,
1344,2d9220f09de66b67fe2c33266d898034fea37d3e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-22 23:57:49 +0200,423, merge pull request 423 drufat use consistent indentation typenames numpy vectorize,,
1345,c250ee51468abed6fb99c26ed11c0430a4f33ccf,zhelil Rufat <drufat@caltech.edu>, 2016-09-22 14:44:11 -0700, , use consistent indentation typenames name,,
1346,1ee4128cfe8efcab618a980649cad9d830d8b32b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-21 19:41:30 +0200,420, merge pull request 420 jagerman doc typo fix minor documentation spelling mistake,,
1347,20ef62656f126abd9c0951e253d837fec7106da7,ason Rhinelander <jason@imaginary.ca>, 2016-09-21 13:39:02 -0400, , fix minor documentation spelling mistake,,
1348,d4285a6dda191fca4683d56097b111327137d388,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-21 19:30:23 +0200, , one typo,,
1349,514371ebecaa4622f61341434302142b0be1f5e5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-21 19:29:19 +0200, , typo fix spotted theghosthucodes,,
1350,bc622dc936208f768e4c99a5404fae359478e96e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-20 12:31:46 +0200,418, merge pull request 418 dean0x7d fix missing test fix missing smart_ptr test,,
1351,568ec6b35a6ff9f8a3a2d5add48a54bb51dd519e,ean Moldovan <dean0x7d@gmail.com>, 2016-09-20 11:52:25 +0200, , fix missing smart_ptr test,,
1352,d922dffec480c6ce9029e302057f52d106c00a2d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-19 18:55:05 +0200,410, merge pull request 410 wjakob wip multiple inheritance support,,
1353,e72a676b7262bef30fbe96149d3a11bb2ef969ff,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-14 23:39:16 +0800, , verbose error message pytype_ready fails,,
1354,c1fc27e2b58391c7b945b06d3e1bfd30e46b62c6,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-13 00:36:43 +0900, , use detail enable_if_t everywhere,,
1355,8e5dceb6a65be3a69f8a078b08122f1072a9f9f5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-11 20:00:40 +0900, , multiple inheritance support,,
1356,bad589a477e6092b20296a1e2938799c0ea16b94,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-12 12:03:20 +0900, , deprecated base added macro improved readability,,
1357,e99ebaedcf5944a80e41313dcdc56e89966e232b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-12 11:44:37 +0900, , nicer error message invalid function argument,,
1358,7962f30d70fa82ce917b6301fb497cae642f30d3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-17 12:58:18 +0200, , set possible build type cmake build system,,
1359,b3794f10879cf9cd519f583794cb6b6460d7324a,ason Rhinelander <jason@imaginary.ca>, 2016-09-16 02:04:15 -0400,273, added simple case 296 custom exception handling added 273 robust overly complex declaring common simple python exception mapping need copy add simpler cppexp module pyexp function greatly simplifies common basic case translation simple cppexception simple pythonexception removing advanced capability defining custom exception handler,,
1360,ad3bb9bbab1944408b0d013d2d04984f29daaa2b,rent Houliston <trent@houliston.me>, 2016-09-14 19:27:53 +1000, , include cmath header std lround fix space parens style guide,,
1361,2f597687e719a9a0321e694036023598e5528da8,rent Houliston <trent@houliston.me>, 2016-09-13 20:40:28 +1000, , changed non system clock time delta allowed duration non system clock set float,,
1362,207d0da31cecbbe2ba0ee59714defd25013f350d,rent Houliston <trent@houliston.me>, 2016-08-26 15:40:13 +1000, , move python datetime header chrono header,,
1363,0ee97dd6d08bc7de9da612876947012d20b4666c,rent Houliston <trent@houliston.me>, 2016-08-25 23:44:18 +1000, , import pydatetime,,
1364,8fe2fa7ebae1c34950f5a372a8f095f502053618,rent Houliston <trent@houliston.me>, 2016-08-25 23:25:48 +1000, , increase amount time execute function 50ms,,
1365,352149e8929c1a2f0b13659dd46bf636cff0eb1d,rent Houliston <trent@houliston.me>, 2016-08-25 23:08:04 +1000, , refactor chrono cast function chrono.h add unit test documentation chrono cast,,
1366,6ddfd1e090de6b5f1d1a14f7c51790275bff5818,rent Houliston <trent@houliston.me>, 2016-08-25 19:59:41 +1000, , add cast chrono class python datetime,,
1367,29b5064e9c80be7034fc9d6ac15dbb7ebe304fc5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-13 09:27:09 +0900,411, merge pull request 411 jagerman debug build fix debug build fix,,
1368,4a4fb396e7f648eb249aa11bc6e40beeb1a2f9e1,ason Rhinelander <jason@imaginary.ca>, 2016-09-12 16:21:40 -0400, , fix build debug mode take load_type nested type_caster template argument instead full type_caster type,,
1369,5b4968df3aa5a955f3401a94ac7b0d7beee805d3,ason Rhinelander <jason@imaginary.ca>, 2016-09-12 16:04:31 -0400, , make gcc6 python 3.5 build use debug mode,,
1370,591a9999c2ccc68efa345363e7de2e5ef4fe512f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-12 08:17:52 +0900,409, merge pull request 409 jagerman dynamic cast test added test detect invalid rtti caching,,
1371,0e489777ff919a70970823d40378ad16be1ee06e,ason Rhinelander <jason@imaginary.ca>, 2016-09-11 18:41:28 -0400, , added test detect invalid rtti caching current inheritance testing sufficient detect cache failure test added break 390 cache run time determined return type first time function called reuses cached type even though run time type could different future call,,
1372,f22683806e9232b59277318d0c91380a4ec7e1f1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-12 06:32:39 +0900,400, merge pull request 400 jagerman add ref virtual macro add way deal copied value reference,,
1373,3e4fe6c0a8dff999cab4e3b0f616740711f76980,ason Rhinelander <jason@imaginary.ca>, 2016-09-11 12:17:41 -0400, , store static type_caster rather basic type,,
1374,f3f53e2b03c4af3028409704be012fae35d2739f,ason Rhinelander <jason@imaginary.ca>, 2016-09-11 11:36:33 -0400, , removed unused unwanted public ref_cast,,
1375,b2eda9ac7cfd560981b31d22c9288d7567056185,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-11 21:33:33 +0900,408, merge pull request 408 dean0x7d exc destructors fix python api call desctuctors triggered,,
1376,e3c297f03e0b10dbd94fd69e9e12776bb95fded0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-11 20:02:32 +0900,407, merge pull request 407 wjakob fix_iterator parameterize iterators return value policy fix 388,,
1377,7dfb932e70e61ca2fba6dc884ef34d63411a6595,ason Rhinelander <jason@imaginary.ca>, 2016-09-08 14:49:43 -0400, , update overload macro support ref ptr return type overload add static local variable dead code unless actually needed overload code used storage overload convert value type numeric value std string limitation written advanced doc better simply able overload reference pointer method,,
1378,116d37c9ba6e9acfeaa075ac8c4d2a5c90ca551f,ason Rhinelander <jason@imaginary.ca>, 2016-09-08 14:47:05 -0400, , use override rather virtual override minor change make example compliant core guideline,,
1379,6eca083e4c8c08975e2aff88aade39cb609f89ac,ason Rhinelander <jason@imaginary.ca>, 2016-09-08 13:25:45 -0400, , fix doc typo trampoline doubled first sentence,,
1380,f217c04195e6aa89130cff97ffa3756612b50906,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-11 08:34:04 +0900,402, merge pull request 402 aldanor feature numpy api add array method via api,,
1381,aca6bcaea5e223752b210f991076d42202be61bf,van Smirnov <i.s.smirnov@gmail.com>, 2016-09-08 23:03:35 +0100, , add test array data access index method,,
1382,f2a0ad5855d233fe4052923c2231c45cffc9b13e,van Smirnov <i.s.smirnov@gmail.com>, 2016-09-08 21:48:14 +0100, , array add direct data access indexing method,,
1383,91b3d681ad96951bd51a719897b89487c3e99d37,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-29 02:41:05 +0100, , expose dtype array attribute via numpy api,,
1384,f69071ca4beac62f5230f78e260c77b96cdd51e4,ean Moldovan <dean0x7d@gmail.com>, 2016-09-10 14:43:28 +0200, , make easier add new binding builtin python exception,,
1385,135ba8deafb8bf64a15b24d1513899eb600e2011,ean Moldovan <dean0x7d@gmail.com>, 2016-09-10 11:58:02 +0200, , make fetch hold python error clear python error throw site thus allowing python call made destructors triggered exception preferable alternative would guarding every python api call error_scope effectively flip behavior previously assumed error stay python handling exception would require explicitly calling pyerr_clear nothing needed propagate error python change handling error doe require pyerr_clear call propagating error python requires explicit restore change doe break old code explicitly call pyerr_clear cleanup majority user code need explicit restore call doe break old code mostly confined library user code,,
1386,b212f6c416654ca4e6676487ccea6104c0f93338,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 16:00:50 +0900, , parameterize iterators return value policy fix 388,,
1387,720136bfa7bba696feb2e56a24a34ff09b9322c3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 16:32:17 +0900, , raii wrapper error state,,
1388,1f2e417d8c239949332a3d41397c5bfe997e6c8f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 16:12:19 +0900,403, merge pull request 403 jagerman alias initialization implement init_alias constructor,,
1389,3d1bb29ee5fa23d9af2ebdcffb2215a4b44c6c16,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 16:02:53 +0900,406, merge pull request 406 wjakob master operator return notimplemented given unsupported input fix 393,,
1390,382484ae56160854f02df0c8fe9a935ffd8982a1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 15:28:37 +0900, , operator return notimplemented given unsupported input fix 393,,
1391,8d38ebed917ad6a59d0cd092a1f4b90eb3d4212f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-10 13:46:57 +0900,405, merge pull request 405 jagerman retry apt get apt get tweak docker debian build,,
1392,bf14cea7c7dcf5f3a2f865c3edf71aa857317eae,ason Rhinelander <jason@imaginary.ca>, 2016-09-09 23:54:10 -0400, , apt get tweak debian build try update upgrade twice brief pause attempt deal occassional spurious server failure repository race condition main package install use dist upgrade instead upgrade updating image add upgrade install command make apt verbose,,
1393,ec62d977c461fd83d63ffd41d821dafa82815c6b,ason Rhinelander <jason@imaginary.ca>, 2016-09-09 02:42:51 -0400, , implement init_alias constructor commit add support forcing alias type initialization defining constructor init_alias arg1 arg2 instead init arg1 arg2 currently init result alias initialization type extended python given argument used construct base type used construct alias init_alias contrast always invokes constructor alias type look like already intention detail init_alias forward declared apparently never finished despite existance .def method accepting detail init_alias class actually defined anywhere commit completes feature possibly repurposes allowing declaration class always initialize trampoline argued 397 sometimes useful,,
1394,356bf94a850346f4036a894e2197c9944c69bd0d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-09 08:44:33 +0900,401, merge pull request 401 jagerman template simplification small template simplification,,
1395,5aa2cd5eb9292cc2354267063e9170c1cbb91ec5,ason Rhinelander <jason@imaginary.ca>, 2016-09-08 17:45:53 -0400, , template simplification switch count_t use constexpr_sum non msvc make all_of_t any_of_t use instead sum msvc count_t still done using template recursion all_of_t any_of_t also make use,,
1396,260b26b3d62700aa01e6e64e030613b9ece4a33e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-09 00:39:43 +0900,399, merge pull request 399 jagerman fix alias initialization fix type alias initialization,,
1397,9c6859ee6e90c6df9f3624968620b82bb22a0e6e,ason Rhinelander <jason@imaginary.ca>, 2016-09-08 11:03:08 -0400, , fix type alias initialization type alias alias class member work properly space allocated sizeof type want able put type_alias instance need sizeof type_alias sizeof type_alias sizeof type whenever type_alias member,,
1398,9d7f7a38a75f87ed8fac5eabf84d3be3cf91a3c9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-08 22:53:18 +0900, , fixed py_none reference couting,,
1399,5812d64ba28b62e6509ea1e8b115464e7b45256b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-08 09:05:15 +0900,394, merge pull request 394 jagerman fix ref heap cast fix ref heap cast,,
1400,587aa328c6af300bcfc47113a3b18a1ab6c0f190,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-08 09:03:41 +0900,395, merge pull request 395 aldanor feature error already set message improvement,,
1401,39577e8c629fc1665d958750e75ab144acfb2b02,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-08 09:03:02 +0900,396, merge pull request 396 aldanor feature is_none add handle is_none,,
1402,984c76248528e91d3ab47b32933577153bcfdc9d,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-29 02:38:47 +0100, , use handle is_none instead raw ptrs,,
1403,f5e8b6d9cb345d1cd963e0e375aa3c5ee9c2ac81,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-29 02:37:03 +0100, , add handle is_none method,,
1404,67b54894b2e590279493270af7e859e3d0107e93,van Smirnov <i.s.smirnov@gmail.com>, 2016-09-07 21:10:16 +0100, , set error set,,
1405,c03db9bad9690d780d7fd1fafd8c7ef3009aa967,ason Rhinelander <jason@imaginary.ca>, 2016-09-07 13:38:32 -0400,392, fail static_assert trying reference non referencable type previous commit address 392 trigger compiler warning returning reference local variable false alarm following cast int happens internally overload declaration really returning reference local cast operator type_caster numeric type return reference member commit add static_assert make compilation failure rather returning reference freed memory incidentally also fix 219 exactly issue reference numeric primitive cast wrapper around python numeric type,,
1406,392f16ccb8a96b4cc6eb74465fdbe61ea0e00041,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-28 21:25:25 +0100, , properly format type name,,
1407,56f717756b8dab54c825f455ffd2495009046225,ason Rhinelander <jason@imaginary.ca>, 2016-09-07 13:32:49 -0400, , fix type caster heap reference type need use intrinsic type raw type fix 392,,
1408,8706fb9085e709a3dd1730ff062b8d65f2525889,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-07 23:37:40 +0900, , intel compiler 2017 fix,,
1409,6fd3132e8106059585b99ec4379b9b2a672be3bd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-07 23:49:00 +0900,385, merge pull request 385 jagerman relax class argument allow arbitrary class_ template option ordering,,
1410,837fda20d7a6b7a9e1cc565a149083c398654599,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-07 16:44:14 +0900,391, merge pull request 391 dean0x7d cout print replace std cout print test,,
1411,6b52c838d78cb697f68761c75b82d2a1806aedde,ason Rhinelander <jason@imaginary.ca>, 2016-09-06 12:27:00 -0400, , allow passing base type template parameter allows slightly cleaner base type specification class_ type base type alternative class_ type type base base template parameter order relative holder trampoline type matter also includes compile time assertion failure attempting specify one base class easily extendible support multiple inheritance someday updating class_selector set_bases function set multiple base,,
1412,81511be341f397f32f245f861f8e10bb744a1429,ean Moldovan <dean0x7d@gmail.com>, 2016-09-07 00:50:10 +0200, , replace std cout print test change python write sys.stdout resolve capture issue noted 351. therefore related workarounds removed,,
1413,5fffe200e337f1a1bb13034fac29a63ad6eae304,ason Rhinelander <jason@imaginary.ca>, 2016-09-06 12:17:06 -0400, , allow arbitrary class_ template option ordering current pybind11 class_ type holder trampoline fixed template ordering result requirement repeat holder default value std unique_ptr type argument little bit annoying need specified want override default rather need specify third argument commit remove limitation making class_ template take type name plus parameter pack option extract first valid holder type first subclass type holder_type trampoline type_alias respectively unfound fall back current default std unique_ptr type type respectively unmatched template argument provided static assertion fails mean specify omit argument order class_ pya class_ pyb std shared_ptr class_ std shared_ptr pyb also allows future class attribute base type next commit passed class template type rather needing use base wrapper,,
1414,c84b37b577f293c82672eaa022beca9aa549ad5d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-07 00:47:17 +0900, , fix bogus return value policy fallback fix 389,,
1415,a3dbdc67f56ae995f45d6522673d8a6849478204,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-07 00:31:03 +0900,372, merge pull request 372 dean0x7d keywords keyword argument generalized unpacking api,,
1416,60b26802fd78273b2bef33315cc3bbbd12539afd,ean Moldovan <dean0x7d@gmail.com>, 2016-09-06 00:49:21 +0200, , make keyword argument hold object instead change arg_t longer template must remain backward compatibility thus non template arg_v introduced dummy template alias arg_t keep old code breaking remove next major release implementation arg_v also needed placed little earlier header template need forward declaration,,
1417,8fe13b889672ca1db697a9c178349373e55d4014,ean Moldovan <dean0x7d@gmail.com>, 2016-09-05 14:30:56 +0200, , apply make_caster intrinsic_t alias everywhere,,
1418,56e86ed094024eacf50aaabcfb0baa3bb182585f,ean Moldovan <dean0x7d@gmail.com>, 2016-09-04 21:30:08 +0200, , workaround dict constructor msvc msvc fails compile constructor defined line error state deduce type default template parameter used sfinae,,
1419,16db1bfbd70dd67b5cbe6ffe03f876dfae1c69ff,ean Moldovan <dean0x7d@gmail.com>, 2016-09-03 17:25:40 +0200, , remove superseded handle operator overload variadic handle operator offer functionality well mixed positional keyword argument test also superseded one test_callbacks,,
1420,625bd48a91551e413153cb9c6abe6a266c7ce26d,ean Moldovan <dean0x7d@gmail.com>, 2016-09-02 16:40:49 +0200, , document calling function keyword argument,,
1421,15a112f8ff8a55660d682ba178cb59184e766f48,ean Moldovan <dean0x7d@gmail.com>, 2016-08-30 12:05:53 +0200, , add dict keyword constructor,,
1422,66aa2728f44be58e9786c685dfbf166978579f3d,ean Moldovan <dean0x7d@gmail.com>, 2016-08-29 18:04:30 +0200, , add str format method,,
1423,67990d9e19421f63a08908a2f1ef65bced440d04,ean Moldovan <dean0x7d@gmail.com>, 2016-08-29 18:03:34 +0200, , add print function replicates python api including keyword argument,,
1424,c743e1b1b4c1ea4a0c5c1aee9802f02533633e2a,ean Moldovan <dean0x7d@gmail.com>, 2016-08-29 03:05:42 +0200, , support keyword argument generalized unpacking python function called syntax python foo args kwargs  commit add support equivalent syntax  foo args kwargs  addition generalized unpacking implemented per pep 448 allows call multiple unpacking python bar args1 args2 101 kwargs1 200 kwargs2    bar args1 args2 101 kwargs1 200 kwargs2 ,,
1425,317524ffad6ac255a6cbceb6e6b95c46ea48c673,ean Moldovan <dean0x7d@gmail.com>, 2016-08-28 14:32:48 +0200, , make arg_t hold pointer instead copy value,,
1426,6f017cf6580b3817e44580cedc899cae59f0851b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-06 14:13:35 +0900, , basics.rst minor table update eigen type,,
1427,48ce0727e49a1e87099cf4a9c12d07a7f1fbd353,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-06 14:13:22 +0900, , added doc custom type caster fix 298,,
1428,146397ecf47db162465a4d02b5c7862d4784e3c7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-06 13:06:31 +0900, , allow iterators different policy fix 388,,
1429,fe34241e509db4542677cb09c19244ad3288035d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-06 13:02:29 +0900, , minor doc style fix,,
1430,07082eecc36783a26ff82fd74f3a7a4fc1ec3140,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-06 12:11:41 +0900,235, merge pull request 235 rosettacommons stl adding bind_map adding key_error exception,,
1431,7520418e2699429f8d7cd9cf9d6d5f1ff7865b80,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-08-29 22:50:38 -0400, , adding bind_map,,
1432,ba21f1dbd6469c2289750595e325577e00c7b8a0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-05 23:29:31 +0900,386, merge pull request 386 wjakob enum fix enum serialization support fix 380,,
1433,8ac9715f849464c72934d39fc649b9e23f2fe25d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-05 17:20:50 +0900, , enum serialization support fix 380,,
1434,70f5a4dc8b53ef99e5e0d310a7367cdfda8efcca,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-05 17:19:18 +0900, , minor added error message faq,,
1435,614988c875851cbe88d7fa33e67133b37be9380c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-05 08:26:34 +0900,384, merge pull request 384 jagerman unique ptr non default deleters make unique_ptr non default deleters work,,
1436,cc4e4065b37967929453a15dfb9ac11f3422b54b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-05 08:25:10 +0900, , another one,,
1437,a6495af87af57f148f7264b45d02d8b6eb48d5f2,ason Rhinelander <jason@imaginary.ca>, 2016-09-04 18:23:55 -0400,368, make unique_ptr non default deleters work currently pybind11 support std unique_ptr holder default holder course declared using macro 368 added nodelete intended used class_ type std unique_ptr type nodelete type work box could add explicit holder type declaration appear intention commit commit fix generalizing unique_ptr type_caster take type deleter template argument unique_ptr instance automatically handled pybind also add test test_smart_ptr testing nodelete work object indeed deleted intended,,
1438,f3be07c6613c8463a2faea12806dcd1bd788caf9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-04 23:03:48 +0900, , minor code style fix,,
1439,987be18fee7b4e1e8f689613e2f22e035b3bcd11,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-04 23:02:20 +0900,379, merge pull request 379 nevion buffer_info buffer info improvement,,
1440,85f07e18cc9c69f39021b08360fb422d21fa938b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-04 23:00:49 +0900, , minor code style checker update,,
1441,2ea4b8e8bb8c441aaa40f597b4e5f873c1409b4d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-09-04 22:49:53 +0900,381, merge pull request 381 jagerman test self registering make test initialization self registering,,
1442,52f4be8946198685264fedac9d554a503b201bb9,ason Rhinelander <jason@imaginary.ca>, 2016-09-03 14:54:22 -0400, , make test initialization self registering adding removing test little bit cumbersome currently test need added cmakelists.txt init function need predeclared called plugin initialization big deal test committed hassle working new feature test code temporarily care building linking test worked rather entire test suite commit change test self register initialization test initialize local object store initialization function static variable make changing set test build easy one need add comment test name test cmakelists.txt couple minor change along test_eigen.cpp included test list removed eigen available let disable eigen test commenting like test keep build working without eigen eigen available also commented even bother looking reporting building without eigen status message pytest invoked built test name .cpp changed .py try run test built,,
1443,10d46e7f73c517c97fecb24a3df9917b88266e2d,ason Newton <nevion@gmail.com>, 2016-09-02 18:39:47 -0400, , explicitly delete copy ctor assignment operator,,
1444,4764698069be4e2c10864bb3a26faf6ba7b1f5a1,ason Newton <nevion@gmail.com>, 2016-09-02 17:11:30 -0400, , add move ctor move assignment operator,,
1445,514c6dad7065a77f7fc1a0b93c7c4983b8f35fb8,ason Newton <nevion@gmail.com>, 2016-09-02 17:10:25 -0400, , add field ownership,,
1446,3718c38e68c42edcf1db82b3db978482691d057a,ason Newton <nevion@gmail.com>, 2016-09-02 17:10:02 -0400, , default field ctors,,
1447,06d8de113a89b660b216600a46e06d52666e318b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-30 21:17:40 +0900,373, merge pull request 373 jagerman style check fix fix check style exit status improve failure message,,
1448,c50bd5cb3da1eceb2c953aff94c917ccc637c5bc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-30 21:17:27 +0900,374, merge pull request 374 jagerman tpl tramp resolution fix fix template trampoline overload lookup failure,,
1449,d472f0f058f8009be27bf01973af79d0218d48eb,ason Rhinelander <jason@imaginary.ca>, 2016-08-29 20:59:48 -0400, , add line number show highlight found tab make output considerably easier use highlight red matched tab instead listing filename add line number tab check space check output,,
1450,2097826346c3e894101663ef20b7e31a6a9f5bf8,ason Rhinelander <jason@imaginary.ca>, 2016-08-29 18:16:46 -0400,322, fix template trampoline overload lookup failure problem  template trampoline pattern documented 322 problem virtual method overload intermediate class inheritance chain trampoline class base class example consider following inheritance structure actual class pyb trampoline class pya intermediate class adding method trampoline pyb pya suppose pya method some_method overload virtual some_method python class defined inherits pybind11 registered try provide overriding some_method declared pya fails find overloaded method thus never invoke pure virtual overridden pyb raise exception happens base internal macro simply call get_overload name get_overload inferred type type lookup fails pya pya neither base type trampoline type pyb result overload fails get failed overload lookup fix  fix relatively simple cast passed get_overload const let get_overload look correct class since trampoline class derived class anyway cast perfectly safe doe require adding class name argument macro leaf public macro signature unchanged,,
1451,5a3570c47cec8a0adc1ed6f1039e669cbac6689d,ason Rhinelander <jason@imaginary.ca>, 2016-08-29 19:04:12 -0400, , fix check style exit status check style exit status propagated properly loop running subshell change error variable active command shell fix running greps subshells loop main shell also avoids style check test cmakelists.txt since doe statement space producing error message acceptable cmake style,,
1452,d9b3db3e64c6b422de943a8292ed9cfa374def48,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-29 23:03:46 +0200,371, merge pull request 371 jagerman overload name doc fix doc fix overload _name macro,,
1453,64830e3333f1921f3094b5afc35c353c74860465,ason Rhinelander <jason@imaginary.ca>, 2016-08-29 16:58:59 -0400, , doc fix overload _name macro documentation say string valued python function name function actually,,
1454,7946715d026fa56726f10c126264a76e685b0392,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-29 22:31:42 +0200,369, merge pull request 369 jagerman check tab check style issue doc build,,
1455,5d1d380e0c5a2120cd09806849710fe7fc5ccc0f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-29 22:29:37 +0200,370, merge pull request 370 jagerman contributing test target minor doc fix make test make pytest,,
1456,dbc4bf68edb28ab3c0faa2d0b9ab709248562c7e,ason Rhinelander <jason@imaginary.ca>, 2016-08-28 14:53:04 -0400, , check style also report space,,
1457,79583b564308d5c3d7a66ba5422eafbf90d3daa1,ason Rhinelander <jason@imaginary.ca>, 2016-08-28 14:26:50 -0400, , minor doc fix make test make pytest test target changed new testing framework,,
1458,540ae61d3ca86ed7b06b2c513e30e0670769589a,ason Rhinelander <jason@imaginary.ca>, 2016-08-28 13:46:25 -0400, , replace tab space pas style check,,
1459,ac4278970c636183f571836ffbbe9be6dab6439d,ason Rhinelander <jason@imaginary.ca>, 2016-08-28 13:00:44 -0400, , check tab instead space doc build add tool check style currently tab instead space file include test doc produce travis build failure problem found,,
1460,8c41974630098a7f647fa3c5ffd19867a5f2dc18,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-28 02:05:11 +0200,367, merge pull request 367 dean0x7d debug_ext_name fix module file name working debug build python,,
1461,5e4e477b8bade7d215471326bd1137289ac52bb2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-28 02:03:15 +0200,368, minor fix 368,,
1462,a3906778eb86bc1885bffd86ef61838770a2624b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-27 13:09:02 +0200, , minor renamed argument array constructor,,
1463,35540ea35da01cc4f43920ce1001cb67a6e25e15,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-28 01:54:38 +0200,368, merge pull request 368 nbelakovski master added support exposing class private destructors corresponding documentation,,
1464,6333825350952b4fc91976a733d8cbb4b7a0884b,ickolai Belakovski <nbelakovski@gmail.com>, 2016-08-27 11:57:55 -0700, , added support exposing class private destructors corresponding documentation,,
1465,7b4f8dc048c088674358fedc680ee6e0633457f8,ean Moldovan <dean0x7d@gmail.com>, 2016-08-27 20:34:33 +0200, , fix module file name working debug build python fix 365. already return correct even debug build need add anything else manually,,
1466,36919ea6955a790c2c61a2cdc44f7796027b5532,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-27 11:34:01 +0200,364, merge pull request 364 jagerman cmake remove pip install pytest cmake fail instead,,
1467,dd3d56a8851551fc68fe6c52c4b0f35fe3a77b9b,ason Rhinelander <jason@imaginary.ca>, 2016-08-26 17:11:40 -0400, , install pytest cmake fail instead installing something outside project directory cmake invocation overly intrusive change test cmakelists.txt fail informative message instead change travis build install pytest via pip apt get,,
1468,324c9c521b063a0de94f09ac9fa32e6d85dcef52,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-26 16:50:11 +0200, , minor intel compiler fix,,
1469,c7c7705f86d0270cd6e3b8f083384db1698f635f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-26 12:34:38 +0200,361, merge pull request 361 dean0x7d barebones test absence optional dependency cmake automatic discovery function,,
1470,14bd10d6d641a6de0f53bafe4bffcbcc796cd3fc,ean Moldovan <dean0x7d@gmail.com>, 2016-08-26 11:53:25 +0200, , fix travis cache config remove ccache add pip cache ccache travis never configured properly setting never actually anything enabling ccache real brings issue due way preprocessor handled python header macro produce bogus compiler warning turn produce error werror ccache also requires additional configuration docker would reduce compile time second best worth trouble skip appveyor,,
1471,b62a896f316e1d5501dc4f6ae6c4e8edb3482448,ean Moldovan <dean0x7d@gmail.com>, 2016-08-25 22:35:15 +0200, , add barebones build travis build make sure everything still work without optional dependency numpy scipy eigen also test automatic discovery function cmake python version standard skip appveyor,,
1472,7b748cef3b1b55cda2f85808db3dd895b62583e3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-26 09:53:44 +0200,359, merge pull request 359 dean0x7d fix_skip_numpy fix test suite failure without numpy improve module init diagnostics,,
1473,3c49bca67a45ab6a94bad36e326669809e4c1f14,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 22:56:38 +0200,358, merge pull request 358 aldanor bugfix icpc numpy fix dtype strip_padding intel compiler,,
1474,d8b11b8708df720e903f423e3a3e4370554a1e45,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-25 21:52:52 +0100, , fix dtype strip_padding intel compiler,,
1475,23919174a798db1a91edbf6629f8b0676af60743,ean Moldovan <dean0x7d@gmail.com>, 2016-08-25 17:08:09 +0200, , fix test suite failure without numpy improve module init diagnostics fix 357,,
1476,69b6246677e43b8e2c2ee6be6970d2b5dbb156c6,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 02:20:35 +0200, , add reason attribute,,
1477,9a777a263dba76bbbe1cff173142d3e30b1363b3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 02:16:47 +0200, , numpy.h fix test suite issue intel compiler,,
1478,89f2db459641c982791bbbdc570acead3daf8418,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 01:47:38 +0200,353, merge pull request 353 aldanor feature generalized iterators add support iterators different begin end type,,
1479,1ffce7422d0848c4b8a6a6cdb0a9b8f02311f272,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 01:43:33 +0200, , get pybind11 test suite compile intel compiler icpc handle ncvirt trampoline return non copyable type likely due constexpr sfinae issue disables test compiler least rest tested,,
1480,ce55683084740c2822b7322aedbfff19d2db393e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-25 01:40:53 +0200,354, merge pull request 354 aldanor bugfix int_ shadow fix int_ shadowing problem detail namespace,,
1481,1c8828fe8f408cf864c1182dd3e0f103220540de,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-25 00:33:02 +0100, , fix int_ shadowing problem detail namespace operators.h included int_ function detail namespace shadow pybind11 int_ type fully qualified name used,,
1482,606160ed68712fccc7d402427dbd7ff79a594a50,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-24 23:32:13 +0100, , update changelog generalized iterators,,
1483,4c5e21b0cbe3fcf9c9972d385215c199598aad86,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-24 23:30:00 +0100, , add test generalized iterators,,
1484,2b308e01f783596e19dad4827ea8b8dca2582121,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-24 23:29:04 +0100, , add support iterators differing end type,,
1485,c5a1c8a6b95db9a9117cf14c50cf18d48aab944f,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-24 23:27:19 +0100, , require operator key iterators,,
1486,b692896fc7b581795d1c7b5578e39e90a7e74200,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-23 01:27:36 +0200,351, merge pull request 351 dean0x7d fix win test capture workaround random failure pytest capture window,,
1487,b6ccdc953d22034750f19b4d5fb136b79ec3940a,ean Moldovan <dean0x7d@gmail.com>, 2016-08-22 23:09:00 +0200, , workaround random failure pytest capture window pytest capture test output globally controlled cmd line flag capture locally capsys capfd fixture enabling method time cause problem window test output captured sometimes resulting test failure happens seemingly random workaround disables global output capture i.e capture leaving local capture fixture side effect test output appveyor little messy better solution found,,
1488,faec30c4db51bd7fef40642cab854b4eb1c485e8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-22 13:02:27 +0200,321, merge pull request 321 dean0x7d pytest port test suite pytest,,
1489,bf099587cd613b33b6e05e503381d0c96ebfd701,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-22 12:52:02 +0200, , documentation clarification fix 346,,
1490,99dbdc16e555c7fd28ad8b972bc18bc3ac67a8df,ean Moldovan <dean0x7d@gmail.com>, 2016-08-19 13:45:36 +0200, , simplify test replacing capture assert,,
1491,3b44daedf67f7b2800a9b7c7c4d45a35584c679d,ean Moldovan <dean0x7d@gmail.com>, 2016-08-18 16:55:26 +0200, , rewrite eval test allow simple asserts test code left since intended use case eval function,,
1492,ec0d38ef252a2755e41ac7343f9ed524cdc5eb39,ean Moldovan <dean0x7d@gmail.com>, 2016-08-13 03:09:52 +0200, , update doc reflect new test structure test compilation instruction window changed use cmake build command line invocation easier manually setting using cmake gui visual studio,,
1493,18319d5598e874168b00048bf093721a8755c611,ean Moldovan <dean0x7d@gmail.com>, 2016-08-13 02:44:56 +0200, , automatically install pytest cmake pytest development dependency make painless automating install using cmake,,
1494,a9a37b4e31966629dfe0b07f6d8fc8066ebe479a,ean Moldovan <dean0x7d@gmail.com>, 2016-08-13 00:57:24 +0200, , move enum test new file enum test constant function,,
1495,382db5b2e750acac62de0f707fe36d952461b074,ean Moldovan <dean0x7d@gmail.com>, 2016-08-13 00:37:50 +0200, , move inheritance test proper file,,
1496,665e8804f3854480479b92fcb8958a6ca366929d,ean Moldovan <dean0x7d@gmail.com>, 2016-08-12 22:28:31 +0200, , simplify test replacing output capture asserts possible part test code modified achieve result kind test python capture kw_func1 assert capture kw_func  replaced simple assert kw_func1,,
1497,a0c1ccf0a9487ce2516ad8eee27202e512affb60,ean Moldovan <dean0x7d@gmail.com>, 2016-08-12 13:50:00 +0200, , port test pytest use simple asserts pytest powerful introspection make testing simpler merges old .py .ref file pair simple .py file expected value right next code tested commit doe touch part code replicates python test exactly like old .ref file based approach,,
1498,192eb88475794c0598dc244806dc259dfb688035,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-19 09:38:14 +0200, , mention benchmark doc well,,
1499,68b193e3f2a4d75b021b26ea800e4f3b7d207024,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-19 09:32:58 +0200, , mention pyrosetta stats,,
1500,8de0437e46fe014fa29dc3a0a7591be33f41d9f3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-18 11:18:12 +0200, , type_caster std function allow none value direction,,
1501,0b63231baefe4abb9599e96f144545aaba3f394c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-18 10:58:21 +0200, , minor doc touchups,,
1502,1fa74222846075a8debb14f7e7bafd60222e7cbf,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-18 10:50:31 +0200,341, merge pull request 341 glenwalker support keep_alive nurse may none,,
1503,3460fccbd73f69cf59ab0cfedcdbd958220b4819,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-18 10:48:34 +0200,345, merge pull request 345 jagerman travis dedicated doc build build doc dedicated build,,
1504,f45bb585c32b761ded4e8ecd32897a5d205fcf72,len Walker <glen@walker.gen.nz>, 2016-08-16 17:50:43 +1200, ," support keep_alive nurse may none example keep_alive 0,1 work return value may sometimes none present could allocate weak reference exception thrown update documentation clarify behaviour keep_alive nurse none doe support weak reference",,
1505,0b952cdf28f94d662b6c34e4bb151e063ed04cfb,ason Rhinelander <jason@imaginary.ca>, 2016-08-17 14:19:08 -0400, , pip venv before_install override install doc build rather adding doc separate install instruction simplifies travis logic pip venv setup before_install hook leaving install hook install needed package make default install script simpler need check native_deps doc override install anyway top level install really install gcc 4.8 osx build docker build doc build override install completely,,
1506,4b5058dc2eeb0df4f9e2ebfe470d1b98198391f2,ason Rhinelander <jason@imaginary.ca>, 2016-08-17 09:14:22 -0400, , build doc dedicated build switch travis build build doc dedicated build rather part regular linux osx build,,
1507,4be2f990c0c99ea41e33357da01c503a648d76fe,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-17 10:17:32 +0200,344, merge pull request 344 jagerman travis build doc build sphinx doc travis build,,
1508,7e016366feba5c096dcf1f5ba23ae3f0b72b61a7,ason Rhinelander <jason@imaginary.ca>, 2016-08-16 22:46:37 -0400, , build sphinx doc travis build,,
1509,e357ed3cc8458fe3c2f202231e22a1fe1148a587,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-16 02:02:17 +0200,339, merge pull request 339 dean0x7d docfix fix sphinx doc missing code block warning,,
1510,aebca12bb9657066f2f5ab38b388db9e1304d756,ean Moldovan <dean0x7d@gmail.com>, 2016-08-16 01:26:02 +0200, , fix sphinx doc missing code block warning missing empty line code block resulted incorrectly parsed sphinx warning code block generated html output change silence orphaned file warning skip,,
1511,94f2052d0836973cd62fb058a126d3c1263d5bd4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-15 20:12:06 +0200,335, merge pull request 335 aldanor bugfix is_pod_struct decay type passing is_pod_struct,,
1512,6956b655f0179a4c0afa9079eab0690ef4855af6,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-15 01:24:59 +0100, , simplify code eigen.h using new array ctors,,
1513,67b3daeea4c621849ba4636d1d9865c14d089629,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-15 01:24:28 +0100, , always decay type param,,
1514,edbd4cb0a7f8a67280be27c7f7dcdafbed60a010,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-15 01:23:59 +0100, , decay const qualifier is_pod_struct,,
1515,6ecb5b15836717a6049956105c84474e5506f241,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-15 14:19:01 +0200,337, merge pull request 337 dean0x7d werror report warning error travis appveyor werror,,
1516,9d52796a0809e5e691c84f2d2418892872a2719a,ean Moldovan <dean0x7d@gmail.com>, 2016-08-15 13:49:34 +0200, , fix _posix_c_source redefined warning python 2.7,,
1517,00a300950bd0881a4e275a1646f2ad71abb59e65,ean Moldovan <dean0x7d@gmail.com>, 2016-08-15 13:41:44 +0200, , report warning error travis appveyor,,
1518,91bdcf3acd1bccde94e6e36dfe84630747647837,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-15 06:47:38 +0200,336, merge pull request 336 jagerman gcc6 testing add build travis,,
1519,6a0a850742c5513d4692fd15bf0f85a0d0c87b1a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-15 06:47:13 +0200,334, merge pull request 334 aldanor bugfix string descriptor fix format descriptor string type,,
1520,024ce4471b58f3f962539c1ca8fda1c0ce6fa566,ason Rhinelander <jason@imaginary.ca>, 2016-08-14 12:31:52 -0400,334, add build travis current linux testing using backported 4.8 year old ubuntu quite ancient good baseline level support mean testing support 334 happened commit add docker based travis build using debian testing distribution give another test system different version build tool importantly also adding build test run using mode,,
1521,03fb488579b271a26e0865ffd4820ef4f9d7caf1,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-14 13:45:49 +0100, , format yield std string required since format descriptor string type using pybind11_descr causing problem linux although technically breaking change cause problem since use format string passing buffer_info constructor expects std string note non structured type const char value still accessible via value compatibility purpose,,
1522,6fc7a3021141e6243196686fad40baf7f4392f1e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-14 14:46:13 +0200,333, merge pull request 333 aldanor feature print add handle repr method,,
1523,6715736936bd54b5f8872dab8f9abbc9cc1c4144,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-14 00:05:05 +0100, , add handle repr method,,
1524,3c3533b4bc6ed8948bc27e840347eed974448d2b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-13 22:21:46 +0200,308, merge pull request 308 aldanor recarray dtype buffer protocol improvement structured type support,,
1525,bccbc10a6504b1e11019656b678c25f12447d3dd,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 21:17:26 +0100, , update changelog author,,
1526,7dcbfe228e296890de7c67048fd4ce9389a950a9,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 20:00:15 +0100, , add missing byte ctor const char,,
1527,c22fe428eda0927be85bbf6cc1e3f9e62c5a526e,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 19:39:11 +0100, , change str byte cast operator ctors,,
1528,89ec7f3e794512edcbd1df9442c721168546d163,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 19:38:50 +0100, , add const char size_t ctors str byte,,
1529,1e1217817bda324181d49bc0acfab70cf5036677,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 18:52:39 +0100, , use explicit cast str byte test,,
1530,fd6cede7e9affe25f967b4bb8f2ff02bb3885bee,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 15:46:46 +0100, , avoid extra allocation operator str byte,,
1531,35c51c477bc3140e1b8c5cffd580f94434e50a90,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 13:52:27 +0100, , strict byte str test,,
1532,b65185906d1e1c1b9749b39ebe493b656297183d,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 13:28:56 +0100, , update doc use new array ctor,,
1533,245f77b4d504acac5336b3d4babb9a7169b8fbeb,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 13:20:36 +0100, , use uint64_t instead long numpy test msvc,,
1534,f36ec97827d35ebf254e7b2598811917caed8913,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 13:14:51 +0100, , fix msvc warning numpy example,,
1535,0d7a015fb4addedfdf6e3e6402c0384e3c15f517,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:56:51 +0100, , update numpy docstring test new format,,
1536,4611bcdd3665cdcd2a11bd5e95d2db1f5dcac25d,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:55:35 +0100, , fix rebasing problem example python type,,
1537,61e3b0bd1580bde20e64514f534eb662a2ae1957,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:42:02 +0100, , use builtin str type recarray field name,,
1538,1cdd171fbc5bad2e82075bc24e2f25375c7a1a47,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:39:16 +0100, , add represent builtin str,,
1539,88239ef83d971587aa71ab670cb8138965455ce3,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:38:57 +0100, , use unittest test python compat,,
1540,006d8b6621547c69abfe9b2d17d9296715b6c32d,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-13 12:38:11 +0100, , add casting operator str byte,,
1541,3768b6abf9e2f8c745985f44050330bd864c0c4c,van Smirnov <i.s.smirnov@gmail.com>, 2016-08-02 20:00:55 +0100, , use fully qualified name pybind11_descr macro,,
1542,ad5ca6d4e64c8d8521567fe9ac982fafc793d021,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-25 00:58:17 +0100, , added dtype const char pointer ctor,,
1543,c6257f864112791e68241c6676b492a0fdd6e00b,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-25 00:46:39 +0100, , allow nullptr array ctors wherever possible,,
1544,10af58fa77745478c78514eb58afc137e9d1d913,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-25 00:15:07 +0100, , add dtype test,,
1545,611e614619d398425133b70ad6286fcd08d497ba,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 23:52:42 +0100, , add test dtype ctors,,
1546,e19980cc1082b26fc07a3fe0584015bb64ea688c,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 20:30:17 +0100, , add test new array array_t ctors,,
1547,98ba98c06bbea58aa7e971b1cf87a118a0525433,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 20:29:44 +0100, , add simplified buffer_info ctor case,,
1548,6636ae9d4e6c9de5bc33a6f0fd40b72f90a5a888,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 18:54:53 +0100, , also add new ctors array_t,,
1549,6bb0ee1186de21b59455b87e2e374e11e75cc48d,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 18:35:14 +0100, , add possible ctors array,,
1550,d77bc8c343cb62c8a4b13fa50b523500099d59c6,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 17:51:35 +0100, , add dtype name offset format itemsize ctor,,
1551,fc5620afa68a802b5953c2ef05b74611a908a054,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-24 17:34:53 +0100, , fix segfault func object released,,
1552,01f74095504211d2587ea3f48b2ffbe51b5ad724,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-23 21:55:37 +0100, , initial implementation dtype,,
1553,05cb58ade27ac74979efd7a64cb8d120744521dd,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-20 00:54:57 +0100, , cleanup move numpy api binding array,,
1554,afb07e7e9268e0ef316c6dc58dca30599e878b6f,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-20 00:26:18 +0100, , code reordering cleanup,,
1555,5db82353f732ad258996b255a87ea6ce1e140192,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-20 00:24:00 +0100, , rename example20 example numpy dtypes,,
1556,f9c0defed7a764b1b1cfc02bce6c742d56e2664f,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-20 00:19:24 +0100, , add numpy wrapper char std array char,,
1557,103d5eadc36ccc361474c7793bf4b588b16fce23,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 23:36:18 +0100, , remove redundant definition,,
1558,098f9aef7382f483128919c97a74c81359a7c911,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 22:52:08 +0100, , replace 4096b format buffer std string,,
1559,f5f75c65449ab6956b58626ad13d6530357c2cf9,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 22:47:40 +0100, , make struct packing example20 msvc compliant,,
1560,b37985ee0c2c46e689e43542649760872f1a996c,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 22:37:42 +0100, , fix comment wrong indentation,,
1561,b51fa02cc383ce2dca2e678374d78763fc7fbd27,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 22:35:50 +0100, , store array request local variable test,,
1562,bf2510ee8650fb5b340c47c3a46a5ae42b732b27,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 22:24:53 +0100, , make buffer_info as_pybuffer memoryview ctor,,
1563,41c339902123b96ce3bf23f2522758f5d4954be8,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-18 19:58:20 +0100, , update name,,
1564,076b953ccd6a0849af652755feb7e1d1d19296dc,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-17 11:10:19 +0100, , restore dtype equivalence sanity check,,
1565,8f2f7cd61cae57680baa3cef2c00c307f51b5146,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-17 11:07:49 +0100, , various cleanup,,
1566,8fa09cb871d2241355bb2a794dc75db502b20997,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-06 00:28:12 +0100, , strip padding field dtypes update test,,
1567,13022f1b8cf533711994b505858025fcd3ea345c,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-03 10:22:40 +0100, , bugfix pas struct size itemsize descriptor without partially bound structs incorrect itemsize,,
1568,eeb4c043f9b9fbc9a270910101ed2f45d823533b,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-03 10:22:10 +0100, , change field descriptor offset type size_t,,
1569,511401599c4e655675efa75b0b0bf92e219bdda2,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-02 16:43:21 +0100, , use malloc insterad calloc numpy array,,
1570,5412a05cf03dc6472456c6dbc2497d764c952d90,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-02 16:18:42 +0100, , rename pybind11_dtype,,
1571,5afe9df30a07d65fd4706d5ded8d5a13902e38ba,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-02 16:17:21 +0100, , minor fix doc,,
1572,872bd92575299cb701823dfe098479915d4e854a,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-02 16:14:57 +0100, , use proper type int literal,,
1573,223afe37fad4b89418633f8f91a522ae6cefab85,van Smirnov <i.s.smirnov@gmail.com>, 2016-07-02 15:33:04 +0100, , add documentation pybind11_dtype macro,,
1574,4c9a160a1d85be98c7111f50daa2f41e5fb5cd70,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-29 15:27:21 +0100, , exclude double type is_pod_struct,,
1575,3b803846d50783f4cb4fe2e41d76b0f9c9f520ea,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-29 15:21:51 +0100, , add comment throughout numpy.h,,
1576,2f01f01866a1efe137e0dbd7160165bca44d087e,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-29 15:21:10 +0100, , always allocate least one element,,
1577,b38ca22e947f7cc7fcb58297e1f4ce2d36f2d52a,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-29 15:16:49 +0100, , add brace clarity,,
1578,95545e6256911ea371957f88efdf731628bc402b,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-27 23:02:21 +0100, , change pb11_impl prefix pybind11 add comment,,
1579,7bdd74a9fbed302a8aa408574b667af3c0fd5bf0,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-27 17:01:22 +0100, , fix pybind11_dtype work msvc compiler,,
1580,5dc6c5445d74bf82f9183fffcb92aafd62ec4a8c,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-27 15:47:51 +0100, , cosmetic fix indentation,,
1581,73f56830f8e4b024f24717e323d48c5e98fa1275,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:46:40 +0100, , add detail is_pod_struct helper,,
1582,d0bafd90e0a8472e8b4de0ba17de636d34b195a0,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:35:28 +0100, , add test buffer format unbound struct,,
1583,a0e37f250edf86b68ff0e26380883e9a3bf88434,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:34:39 +0100, , format fail unbound,,
1584,5a47a16e47cdbb690b2c1e9337e15d3db6f90fb5,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:21:34 +0100, , revert accidental whitespace change,,
1585,40eadfeb736fa46aa1f5d1932a4bda07712071f4,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:19:18 +0100, , make backwards compat typenum non structured type still accessible value dtype object type accessible dtype,,
1586,95e9b1232262000fe798fe63a5d0fd8b794faf2e,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 16:18:46 +0100, , prefix macro,,
1587,5e71e17bdfa13c15e4ac752fec1fa1d7684d15e7,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-26 12:42:34 +0100, , make change backwards compat format string known compile time accessible via value format format string everything else accessible via format make backwards compatible,,
1588,4f164217e48ae1dbce5cfb896195c7b56521fc2a,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-22 01:07:20 +0100, , add dtype_of function update test,,
1589,036e8cd32f067953d7236a4612d9f3e4674650ce,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-22 00:52:16 +0100, , remove erroneous prefix numpy.h,,
1590,873d2674716fdfbdf5b7ccf4d6cd951693d9a555,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-22 00:48:36 +0100, , prefix macro numpy.h avoid name clash,,
1591,1f54cd92096b163185fa15669f359e0dc70c1a73,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-22 00:42:10 +0100, , use object instead ptrs numpy descriptor,,
1592,2a7acb6d55c0f1e59df1ddb518de7fe6c2fa6456,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-22 00:33:56 +0100, , incref descriptor properly creating array,,
1593,669e14269d58620a75ec85bd8cdb93776769a8ae,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-21 21:05:29 +0100, , add test function accepting recarray wip,,
1594,f5b166d042b8c1edd9bff6e2f8604e54843d7924,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-21 21:03:58 +0100, , simplify slightly,,
1595,bdc9902041300a158eb3230f5af441310e90b162,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:54:07 +0100, , add explicit test recarray format descriptor,,
1596,7f913aecabed087bc368708cc7e2b23d0edb58aa,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:41:15 +0100, , add test nested recarrays,,
1597,80a3785a66a61d4aaa3543a450ef249fbec33d5a,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:40:52 +0100, , borrow field descriptor recarray dtype,,
1598,8502f542b36d0cbb1f3af532300df149f9ca773a,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:09:44 +0100, , add packed recarray test,,
1599,2e1565e414bbc34e72a67bfdbf44c2706546d355,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:05:23 +0100, , add empty recarray test check calloc fail,,
1600,f10c84eb9b91e62a545eb326da90194c502f023b,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 16:04:01 +0100, , release format descriptor args converting,,
1601,bb4015ded39592a593f4af437d7e62b1ae4366a4,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 15:50:31 +0100, , add basic test recarrays complex dtypes,,
1602,2488b32066e6a7199719bd1f056037bbffc39b52,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 15:48:55 +0100, , add pybind11_dtype macro registering dtypes,,
1603,fab02efb10d5d3a057eba85752b91d1d77bfcd4b,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:53:20 +0100, , switch away typenums numpy descriptor,,
1604,a67c2b52e470613620e610e6210687ed084b4949,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:50:06 +0100, , use memoryview constructing array buffer,,
1605,ea2755ccdc25c6f5ec8c4061d2e69d2e56521442,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:44:20 +0100, , use macro numpy api definition,,
1606,f7143dc589f2c105b95e3cab5402d3a6ea8c177d,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:41:21 +0100, , update gitignore ignore debug test build,,
1607,7709d6b77dceb925b8f41819bc3e3b1b67c7cfca,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:40:30 +0100, , add memoryview type,,
1608,8b5fc8b5e1c54d20bd4b6d692fb6315ca4007caa,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:40:04 +0100, , dump test output test runner fails,,
1609,42ad3284815b06cc74fa9d19d767a73d86e73546,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:39:41 +0100, , change value static func,,
1610,a7e62e1ca621c7a7c1b8956873a16c255f2939b6,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-19 14:37:55 +0100, , add buffer_info as_pybuffer method,,
1611,3dd325b77280be9ef83cfd986309d2489a709686,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-18 00:46:12 +0100, , change typenum static,,
1612,09f40e010fda3e074c979d26be978fd079ff5c52,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-12 08:35:45 +0200,282, merge pull request 282 jagerman key iterators add pybind11 map iteration,,
1613,5aa85be26e17f89f0e1bf04870f8efa4765e8326,ason Rhinelander <jason@imaginary.ca>, 2016-08-11 21:22:05 -0400, , added pybind11 map iteration allows exposing dict like interface python code allowing iteration key via custommapping ... still allowing iteration pair also implement dict.items functionality return pair iterator allowing  ... example sequence iterators updated custom class providing type iteration,,
1614,216df0dd67d403faa04a6c8e8685263375042a21,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-12 00:59:57 +0200, , quench warning clang osx,,
1615,bb6c1f9c4dbbc87acfd40fe69680dd920753a39f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-12 00:58:49 +0200, , add jason rhinelander contributor list,,
1616,f4f2afb6c95b80024b09cbf4c2c86b0da29501d4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-12 00:56:26 +0200,324, merge pull request 324 jagerman example constructor tracking improve constructor destructor tracking,,
1617,3f589379ec04c2c2a677ffc060418db151c61cd0,ason Rhinelander <jason@imaginary.ca>, 2016-08-07 13:05:26 -0400, , improve constructor destructor tracking commit rewrite example look constructor destructor call via static variable tracking rather output parsing added class provides method keep track constructor destructors number default copy move constructor number copy move assignment also provides mechanism storing value e.g value construction allows checked end test getting statistic python mapping class relying precise pattern construction destruction rather simply ensuring every construction matched destruction object ensure everything get created also get destroyed expected replaces various std cout whatever code constructor destructors print_created print_destroyed etc function provide similar output unified format across different example including new prefix make mixed example output lifecycle event easier distinguish change relaxed mode longer needed enables testing proper destruction msvc compiler generates code calling extra constructor optimizes away constructor gcc clang used baseline move constructor test adapted allow move constructor evoked type constructor much matching count commit also disables output buffering test buffering sometimes result output ending middle python output vice versa depending python version,,
1618,85557b1dec178665a05af4002507af0570a3038d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-11 22:35:15 +0200,330, merge pull request 330 jagerman silence msvc warning silence msvc warning,,
1619,e20fc61a33b6ce2234e74c9171d82390c531ac64,ason Rhinelander <jason@imaginary.ca>, 2016-08-11 16:23:23 -0400,329, silence msvc warning 329 generates following warning msvc ... cast.h 202 warning c4456 declaration hide previous local declaration renames second iterator silence,,
1620,5a4cd3b45c321e00c36011e3fb852347b07df444,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-10 18:24:10 +0200,329, merge pull request 329 jagerman track ptr instance track registered instance share pointer address,,
1621,f2ecd8927e023b8b083d0f1cba525f61c4691ecf,ason Rhinelander <jason@imaginary.ca>, 2016-08-10 12:08:04 -0400, ," implement keep_alive requires instance field track returned reference parent duplication keep_alive 0,1 doe use keep alive eliminate duplication",,
1622,efc2aa7ee7c4a8142f15490315c940bd84aae87b,ason Rhinelander <jason@imaginary.ca>, 2016-08-10 11:38:33 -0400, , removed obsolete documentation duplicate address problem longer applies since instance identified address type,,
1623,1b05ce5bc062d15940b10451fcbdc4bf436dc584,ason Rhinelander <jason@imaginary.ca>, 2016-08-09 17:57:59 -0400,328, track registered instance share pointer address pointer first member class instance pointer instance pybind11 workarounds track registered instance registered parent address work everywhere however issue 328 failure mutator operator resolve argument parent rather child needed 328 commit resolve issue restores tracking address instance changing unordered_map allows duplicate instance pointer recorded resolve difference checking type matched instance looking instance seems cleaner unordered_map list similar vast majority time instance unique,,
1624,bb1ee389fdf153537323e2d13615dff16268f6de,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-09 15:14:31 +0200,297, merge pull request 297 jagerman move python return value move support return value called python function,,
1625,ed14879a1942fdfa4e4ef053c842841ca9fd6fc4,ason Rhinelander <jason@imaginary.ca>, 2016-07-21 21:31:05 -0400, , move support return value called python function currently pybind11 always translates value returned python function invoked code copying even moving feasible importantly even moving required first relatively minor concern moving may considerably efficient type second problem however serious currently way python code return non copyable type code ran trying add virtual method return type simply fails compile  overload ... overload args .template cast ret_type involves copy overload args return object instance invoked object cast load returned value return copy loaded value however safely move returned value object reference i.e ref_count object temporary i.e rvalue commit doe adding rvalue qualified object cast method allows returned value move constructed stored instance feasible basically come three case object movable copyable always try move runtime exception raised would involve moving value multiple reference type movable non trivially copyable move happens invoked object ref_count otherwise object copied trivially copyable type excluded case typically collection primitive type copied easily moved non movable trivially copy constructible object simply copied also add example example virtual function show non copyable object movable copyable object action former raise exception returned holding reference latter invokes move constructor unreferenced copy constructor referenced basically allows code class myclass pybind11class def somemethod self whatever movabletype whatever ... return allows movabletype instance returned code via move constructor course attempt violate something like self.value movabletype whatever return self.value get exception right pybind11 side code compile,,
1626,6697f80f7fed2b7077c17deff5e8a797733cd24a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-08 15:42:28 +0200,325, merge pull request 325 hubble1942 fix python library path window venv fixed finding python library window venv,,
1627,72270777a38b9f81c3abde92e3b854a1fbf82759,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-08 15:24:42 +0200,322, merge pull request 322 jagerman document inherited virtuals added advanced doc section virtual method inheritance,,
1628,b81c500ce22a23eb39a8369c12ce3e2730a8b5e7,hristian Ewald <christian.ewald@flytec.ch>, 2016-08-08 08:31:08 +0200, , fixed finding python library window venv run window venv python_library pointet non existant location virtual environment directory fixed testing path exists trying alternative path relative alternative path exit well error raised,,
1629,d6c365bcfab79d2386f9ed522e398658f7b0fcbd,ason Rhinelander <jason@imaginary.ca>, 2016-08-05 17:44:28 -0400, , virtual inheritance example remove multiple inheritance approach already pretty badly intrusive also appears make msvc segfault rather investigating fixing easier remove,,
1630,0ca96e29154f80e816011d1cbb06a4dd42a7dbba,ason Rhinelander <jason@imaginary.ca>, 2016-08-05 17:02:33 -0400, , added advanced doc section virtual method inheritance discussed 320 add documentation block mention trampoline class must provide override class virtual method inherited virtual method also provides templated solution avoiding method duplication example includes third method mentioned see also section documentation addition using multiple inheritance approach work avoids code generation deep hierarchy intrusive requiring wrapped class use virtual inheritance instrusive virtual base class need anything default constructor per discussion 320 kept example suggested documentation,,
1631,5289af5fc08db5f8038c9bbe75a9a4ce31b19f6d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-05 00:10:33 +0200,319, merge pull request 319 dean0x7d fix sign warning fix minor signedness warning clang,,
1632,cb6cd6954b1fb10582f10bb0c879dee3c9a5e229,ean Moldovan <dean0x7d@gmail.com>, 2016-08-04 23:55:12 +0200, , fix signedness warning,,
1633,934e8dbd801b6628742fe9d0f56533d7f5c29e69,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-05 00:04:24 +0200,310, merge pull request 310 dean0x7d signature improve function signature ides static analysis tool,,
1634,ed23dda93b3735e220c5931f646dc8193d2d1b31,ean Moldovan <dean0x7d@gmail.com>, 2016-08-04 01:40:40 +0200, , adopt pep 484 type hint type exported python,,
1635,ecced6c5ae399d7c0214b57a5b24ba8c1fbebd1b,ean Moldovan <dean0x7d@gmail.com>, 2016-07-31 20:03:18 +0200, , use generic arg name function without explicitly named argument example signature old new foo int foo arg0 int bar object int bar self object arg0 int change make signature uniform named unnamed argument help static analysis tool reconstruct function signature docstrings also tweak signature whitespace style better conform pep annotation default argument  ,,
1636,52d77d9db9989045d8893c915748652d5efe3847,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-04 22:42:18 +0200,318, merge pull request 318 jagerman eigen base type really fix enumeration index,,
1637,b68d8fc2c57731d310f707296923295f52b9e114,ason Rhinelander <jason@imaginary.ca>, 2016-08-04 16:39:30 -0400, , really fix enumeration index,,
1638,67bfeb19c1f1f991a6035884caec68ab494e31c5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-04 22:37:26 +0200,316, merge pull request 316 jagerman eigen base type eigen support special matrix object,,
1639,38d5b4565c35e018b12796c4b182223bb6a7b1bc,ason Rhinelander <jason@imaginary.ca>, 2016-08-04 16:36:16 -0400, , fixed enumeration index,,
1640,9ffb3dda5fb9b97a8ca5dea288a7de2e532d408c,ason Rhinelander <jason@imaginary.ca>, 2016-08-04 15:24:41 -0400, , eigen support special matrix object function returning specialized eigen matrix like eigen diagonalmatrix eigen selfadjointview inherit eigenbase densebase currently allowed class explicitly copyable matrix definition support function return copying value matrix casting resulting dense matrix numpy.ndarray commit doe exactly ,,
1641,19637536acf60ec7ad1f4b29440f56064242fae3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-04 19:47:17 +0200,315, merge pull request 315 jagerman eigen stride fix fix eigen copying non standard stride value,,
1642,2fb81afb596befeb54b338c230317dc98a985395,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-04 19:46:56 +0200,313, merge pull request 313 jagerman scoped enums fix scoped enums add scoped enum example,,
1643,8657f3083a633d6d4a74e9bcecd3856dd3b513b6,ason Rhinelander <jason@imaginary.ca>, 2016-08-04 13:21:39 -0400, , fix eigen copying non standard stride value eigen object returned matrix.diagonal matrix.block non standard stride value basically map onto underlying matrix without copying example primary diagonal 3x3 matrix vector like object .src equal full matrix data stride returning object pybind11 method break however pybind11 assumes vector stride matrix stride equal number row column depending whether matrix stored column major row major commit fix issue making pybind11 use eigen stride method copying data,,
1644,d41a273031770112fdec6fb03e8259c4b103e23a,ason Rhinelander <jason@imaginary.ca>, 2016-08-04 00:21:37 -0400, , support int unscoped enums make python interface mirror interface pybind11 exported scoped enums directly comparable underlying integer value,,
1645,613541947a0a2be1680785f95d04b68bcbc33c85,ason Rhinelander <jason@imaginary.ca>, 2016-08-03 23:45:08 -0400,309, fix scoped enums add scoped enum example 309 broke scoped enums failed compile added value value2 comparison valid scoped enum implicitly convertible underlying type commit fix explicitly converting enum value underlying type comparison also add scoped enum example constant function example trigger problem fixed commit,,
1646,39ff2d014028c4911d237d1990a193c099ebabf7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-03 23:12:20 +0200,312, merge pull request 312 jagerman eigen ref args add support eigen ref ... function argument,,
1647,5fd5074a0b19ff6f28c85513e2ebe01a9b20948e,ason Rhinelander <jason@imaginary.ca>, 2016-08-03 16:50:22 -0400, , add support eigen ref ... function argument eigen ref common way pas eigen dense type without needing template e.g single definition void func eigen ref eigen matrixxd called double matrix like object current pybind11 eigen support fails internal error attempting bind function eigen ref ... argument eigen ref ... satisfies is_eigen_dense requirement compile actually used eigen ref ... default constructible argument std tuple containing eigen ref ... constructible result compilation failure commit add support eigen ref ... giving type_caster implementation consists internal type_caster referenced type load cast method dispatch internal type_caster unique_ptr eigen ref instance get set load course performance advantage pybind11 using code using eigen ref ... allocating matrix derived type loading advantage allowing pybind11 bind transparently method taking eigen ref,,
1648,7f9603fe248e089532bf835a9d598e03da4731be,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-03 17:42:28 +0200,311, merge pull request 311 lsst master fix zero valued enum comparison error,,
1649,3d079fbd545e3ac17700292d8005311871e0c64d,im Schellart <P.Schellart@princeton.edu>, 2016-08-03 10:36:22 -0400, , fix zero valued enum comparison error,,
1650,6c19f6e598e9d68e8a16a29ab78a6d525f88b170,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-02 18:27:32 +0200,309, merge pull request 309 lsst master enable comparison enums underlying type,,
1651,e5b42ef1fece01ec7207c7a3639355bfe5efeb13,im Schellart <P.Schellart@princeton.edu>, 2016-08-02 10:58:32 -0400, , enable comparison enums underlying type,,
1652,2160860c0aa5d5ca14b8a5b670f2fbfcbc6d6b17,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-02 02:19:35 +0200,306, minor cmake change per 306,,
1653,3da5edec1f15a2bbef840b6655588391f1b0f3ac,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-02 02:18:08 +0200,306, merge pull request 306 trygvis pybind 305 mark pybind11 include dir private avoid cmake error message,,
1654,b6f79f28b907106ac9614e3b0be6c735ec2cfea0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-02 01:30:26 +0200,302, merge pull request 302 dean0x7d improve test coverage eigen numpy,,
1655,880a7e4d0a6a11fabae7f310bbbeb939769479cf,ean Moldovan <dean0x7d@gmail.com>, 2016-08-02 00:42:07 +0200, , use system version python 2.7 travis,,
1656,3764e28475eb189cd3aa302a77639478ad376659,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-01 23:34:48 +0200, , added note args kwargs limitation,,
1657,f5d00105ceb724545bc8cbf50d8c0aca99e77dae,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-08-01 23:10:00 +0200,304, merge pull request 304 trygvis pybind 303 change accessor operator throw instead using pybind11_fail,,
1658,9119f1307256ac71b0b44f8c98280eb39ba8575f,rygve LaugstÃ¸l <trygvis@inamo.no>, 2016-08-01 09:14:54 +0200,305, improving support installing pybind11 mark pybind11 header private target fix 305,,
1659,3572bc3e825c9ff2ee67942dfb4f9edb4cf30da7,rygve LaugstÃ¸l <trygvis@inamo.no>, 2016-08-01 08:45:16 +0200, , change accessor operator throw instead using pybind11_fail throw exception failure show underlying exception instead masking  fix 303,,
1660,3ac1275248354ce3e79d7b3d29b92ae422951e74,ean Moldovan <dean0x7d@gmail.com>, 2016-07-30 00:15:01 +0200, , improve test coverage eigen numpy,,
1661,f38f359f96815421f1780c1a676715efd041f1ae,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-19 17:48:42 +0200, , documentation fix fix 290,,
1662,a771e362dfd61e67fddadbf36b5ef3f3115f8d81,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-19 17:47:59 +0200, , check nominmax issue window fix 291,,
1663,a975ab25017fbc415b059d0b97dfc066ceb78ee9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-19 17:35:09 +0200, , minor namespace change example,,
1664,4a87933be9c816b0434f563c263c260a41ed31d0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-19 11:59:37 +0200, , descr fix int string conversion,,
1665,61352e504d65160c80ed210a493555dd54c4eebb,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-18 23:52:59 +0200,288, merge pull request 289 jagerman example renaming rename example file per 288,,
1666,3e2e44f53fc93ee3195b41e7556e4769a501dcbc,ason Rhinelander <jason@imaginary.ca>, 2016-07-18 17:03:37 -0400, , updated advanced.rst example reference,,
1667,b3f3d79f4c5ea6217f9028d2971b6538dd010ac6,ason Rhinelander <jason@imaginary.ca>, 2016-07-18 16:43:18 -0400,288, rename example file per 288 renames example file examplen example description specifically following renaming applied example1 example method attribute example2 example python type example3 example operator overloading example4 example constant function example5 example callback example6 example sequence iterators example7 example buffer example8 example custom ref counting example9 example module example10 example numpy vectorize example11 example arg keywords default example12 example virtual function example13 example keep alive example14 example opaque type example15 example pickling example16 example inheritance example17 example stl binder example18 example eval example19 example custom exception inheritance part example5 moved example inheritance previously example16 remainder left example callback commit also renames internal variable example1 example2 example4 etc non numeric name examplemanda examplewithenum etc correspond file renaming order test preserved easily changed natural ordering updating list example cmakelists.txt,,
1668,fb6aed21576f1de5e6b54f4a8279a7f64a717b30,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-18 20:29:53 +0200, , return value policy clarification,,
1669,1f66a584278dfd1ad88be19d5e4996302793a191,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-18 10:47:10 +0200, , pybind11.h minor cleanup functionality change,,
1670,6969e7c1ba75969a486d98e89d5880f57194f111,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-18 10:46:41 +0200, , exception handler tweak fix 284,,
1671,d46b6eee5ac0a05193cf3d9810d975bfb8e8aa4f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-18 10:09:24 +0200,285, merge pull request 285 jagerman fix uninitialized str fix 283 print first arg constructor,,
1672,4e45e1805b3733650f848c99563f465bc2da711c,ason Rhinelander <jason@imaginary.ca>, 2016-07-17 17:43:00 -0400, , fix 283 print first arg constructor change exception error message bad argument error suppress constructor argument failure constructor change invoked output omit object instance rewrite constructor signature make look like constructor changing first argument object name removing nonetype return type,,
1673,fbdd30e5c56080c837282bef03542bd7c3e6b532,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-12 21:00:54 +0200,278, merge pull request 278 jagerman eigen test scipy dep add missing scipy run time dep eigen test,,
1674,eae180cd0bfdb1cc7027eda8cffe464a25f783c4,ason Rhinelander <jason@imaginary.ca>, 2016-07-12 14:16:46 -0400, , add missing scipy run time dep eigen test scipy imported pybind11 eigen.h encounter sparse matrix get tested eigen test,,
1675,a720a6046e156a140474365f2afd0783e0c95b85,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-12 18:02:13 +0200, , updated changelog v1.8.1 updated release instruction,,
1676,4d727e10ab1baac05b03a8b77a7f4bc774f6df44,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-12 16:58:55 +0200, , minor readme.md fix,,
1677,59b240a848e0ffb42887c0c725f794c7f1d14ed2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-12 16:56:47 +0200, , bump intel compiler version requirement,,
1678,c47d498c3546008c3b663c0449ec3421bd3d0382,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-11 23:40:28 +0200, , fix rare issue type creation fix 277,,
1679,58ec1caa9b594c511f19ab1136dde24378a1145a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-11 23:39:39 +0200, , updated readme changelog,,
1680,3c6ada3a48ffd98ef9bad49df70b6728a91a1328,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-11 23:38:21 +0200,273, merge pull request 273 lsst master add support user defined exception translator,,
1681,5a7d17ff16a01436f7228a688c62511ab8c3efde,im Schellart <P.Schellart@princeton.edu>, 2016-06-17 17:35:59 -0400, , add support user defined exception translator,,
1682,4e27f7bb13f041b81ef6b180dcbdd0979c6619ee,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-10 11:01:35 +0200, , python 2.7 fix example,,
1683,e6b2f75949f86952fc19985c51c0d07602b8af8a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-10 10:54:46 +0200, , updated changelog,,
1684,954b7932fe39229ed8834d85dd022027c05a1cf5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-10 10:13:18 +0200, , avoid python overhead passing around function object,,
1685,52269e91aac46d64c61c5bb6f480db2720080b94,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-09 20:38:25 +0200,274, merge pull request 274 jagerman report skipped test skip eigen test eigen header available numpy,,
1686,7de9f6c72d26121376a2bba1f7b38da0cebbdd93,ason Rhinelander <jason@imaginary.ca>, 2016-07-08 17:44:12 -0400, , test skip exiting fix eigen test failure allows change current example exit status skip test instead outputting special string numpy missing also fix eigen test currently fails eigen header available numpy skip instead failing numpy available,,
1687,5ba89c340c668c68a4d0335db06fcd5da7750d0c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-09 15:44:54 +0200, , quench warning eigen.h,,
1688,678d59d21f9cd5af7fa99e692a946e383067a595,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-08 15:14:48 +0200, , python 2.7 fix eval,,
1689,464c43513ed08048a728274e97615ad55c26a348,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-08 15:06:25 +0200, , eval improvement,,
1690,5130212d5f6cbaa9fb420a62d62d074cae7d80a6,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-08 11:07:22 +0200, , appveyor show output test failure,,
1691,dc13cf0e546d1cf850a706d666f56a16f446508e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-08 11:07:02 +0200, , quench warning window,,
1692,0d3fc3566a363796f5f4817d0c79a852afe7e7fd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-08 10:52:10 +0200, , complete rewrite eval exec patch,,
1693,c6ad2c4993fecb60503b6f2ab9941f4ccae5fe5c,lemens Morgenstern <klemens.morgenstern@ed-chemnitz.de>, 2016-06-09 16:10:26 +0200, , added exec function,,
1694,c2ee3f52b51f45957f59a4cf1b6f3d7b921f4e2a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-07 22:56:36 +0200,272, merge pull request 272 jagerman fix gcc6 placement new warning fix gcc6 placement new warning,,
1695,0b12f91fa3fd8994d2683db4059821b97d739103,ason Rhinelander <jason@imaginary.ca>, 2016-07-07 16:26:04 -0400, , disable placement new warning gcc otherwise would create unknown option warning,,
1696,cae0e0094792d994e189813ea2e87df77b75bb30,ason Rhinelander <jason@imaginary.ca>, 2016-07-07 16:11:42 -0400, , disable wplacement new warning false alarm gcc add wplacement new warning warns placement new space small sometimes triggered e.g example5 always generates warning false warning however line immediately checked size line never going actually reached case gcc warning triggered localizes warning disabling one spot placement new pybind11 warning could warn legitimate future problem,,
1697,4be37c17d76f547962a23d2943ed062edad4b97c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-06 07:09:00 +0200,269, merge pull request 269 jagerman ternary description add bool ternary use type_caster,,
1698,4609beb46e53e7b9c350974c3f4cee24f13f23d8,ason Rhinelander <jason@imaginary.ca>, 2016-07-06 00:49:49 -0400, , merge remote tracking branch upstream master ternary description,,
1699,8469f751cba1e4b187367ea7f2a9b5e54fe4df87,ason Rhinelander <jason@imaginary.ca>, 2016-07-06 00:40:54 -0400, , add bool ternary use type_caster commit add additional template function compile time selection two description string turn allows elimination needing two name method type_caster arithmetic type type_caster eigen type allows start using instead simplifying code eliminating code duplicating macro,,
1700,22201d08e4ed54860887967e1bc6e64a1725868c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-06 05:45:56 +0200,268, merge pull request 268 bennorth stricter test tighten check test eigen.py,,
1701,f57133aa2efff6b078005bb627f0b9e777a65af8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-06 05:43:52 +0200,266, correction 266 fix,,
1702,150a0fa786157dea15c71090f01645a0a88a6351,en North <ben@redfrontdoor.org>, 2016-07-05 19:59:28 +0100, , check stricter check test previous version would give false example supposed get instead got,,
1703,676e29885bdfc10a93aeccb97dadc15070bcd570,en North <ben@redfrontdoor.org>, 2016-07-05 21:46:09 +0100, , test check catch wrong order element fails next commit tighten test,,
1704,c2f6841c2243b707d8babb87baece1beddf3067d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-05 22:34:36 +0200,267, merge pull request 267 bennorth non contiguous array non contiguous array,,
1705,7b8d9e024622897389c2d66203638070923cedcb,en North <ben@redfrontdoor.org>, 2016-07-05 21:03:19 +0100, , test eigen convert slice array correctly,,
1706,3e0e77932229aa18431d269b01d74a892f0bbefd,en North <ben@redfrontdoor.org>, 2016-07-05 21:00:05 +0100, , test add function matrix add declare python function double_mat_cm compute column major matrix double_mat_rm compute row major matrix eigen.cpp test example,,
1707,93594a3857a05d52c2c47e35c768c5fb080752da,en North <ben@redfrontdoor.org>, 2016-07-05 20:05:10 +0100, , fix handling one dimensional input array eigen.h type_caster type load ndim case use innerstride type inner stride vector choose n_elts n_elts according whether constructing vector rowvector,,
1708,4a22091d454a9e02964b09ee63f98aeb1d57e769,en North <ben@redfrontdoor.org>, 2016-07-05 20:03:02 +0100, , add test doubling row col vector passing non contiguous one dimensional numpy array give incorrect result three test fail one passing simple case numpy array contiguous building column major vector subsequent commit fix three failing case,,
1709,b063e64b19ee89cbdafc3d2a82c3324e57e8e83f,en North <ben@redfrontdoor.org>, 2016-07-05 20:01:11 +0100, , eigen test function col row vector,,
1710,c9f69bc35abe4cdbc4fe9d14e80cc46aa3d49f19,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-05 22:07:34 +0200,266, merge pull request 266 jagerman fix python27 test output fix test diff output python2.7,,
1711,f23e0b5e95b5da6d2ed0715712a224673cfa9ad5,ason Rhinelander <jason@imaginary.ca>, 2016-07-05 16:03:43 -0400,220, fix test diff output python2.7 220 broke failed test output python2.7 support keepends argument splitlines,,
1712,3b48482f02dcd549003125e542d64328a9467fa2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 21:48:14 +0200,262, merge pull request 262 merlinnd make tuple error message informative error message make_tuple fails,,
1713,68ca3b6343eb0f616c40353ebcfe5ed5bf7eae10,erlin Nimier-David <merlin.nimier@gmail.com>, 2016-07-01 20:35:35 +0200, , informative error message make_tuple fails,,
1714,0006259508c8308ef8545a4967f71c1f86890e73,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 16:07:35 +0200, , switched internal usage cast_error exception,,
1715,472ffbba968c5d72586d3da852ee8077a61d9983,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 16:07:24 +0200, , informative error message cast fails,,
1716,fb0e2e5dac4da09fd2b556dc5f949a643bb753ab,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 14:54:24 +0200, , minor formatting fix,,
1717,d7e208c740e523b9e29eaf8b59ed73abca99d1f0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 13:38:46 +0200,260, merge pull request 260 hbruintjes allow std using const element type,,
1718,70d2e57b0913800f0679e03dc508ea4e29fdd019,bruintjes <h.bruintjes@cs.rwth-aachen.de>, 2016-07-01 12:39:55 +0200, , cast derived holder using container type using std allows const type used shared_ptr,,
1719,5766c3a6090e07d806c34bdb8a2e9ccfbf81db16,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-07-01 12:21:53 +0200, , cindex.py updated,,
1720,3eeea6fa612efa9a3b2f620408915ea71336fe1a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-30 18:10:28 +0200, , doc point limitation implicit conversion,,
1721,f53e300fbd3d1d8dc43c9d137052a965a70777db,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-30 14:59:23 +0200, , doc update,,
1722,09e22b4a1712a4e73544859eeb22eba3870bf4cd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-30 14:48:29 +0200,255, merge pull request 255 nafur patch added warning address optimization,,
1723,4626b5a4afc670c6e0700e54a0970c92777f9d5e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-30 14:45:57 +0200, , updated limitation section,,
1724,717df7523743f66f70e20db2b0e87e51230f302b,afur <nafur@users.noreply.github.com>, 2016-06-28 18:07:11 +0200,254, added warning address optimization see http github.com pybind pybind11 issue 254,,
1725,2353b9b8fa3dfc91b50b8ba9ddaa41fe166c5360,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-27 16:05:46 +0200, , quench c4459 warning msvc2015,,
1726,37e1f61f541681d755e3d3c81a3b3e6585a8aa23,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-22 14:29:13 +0200, , allow passing return value policy handle operator,,
1727,4a53d38bd4109afdfe15279658a9a8ed1e3b4846,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-22 14:02:27 +0200, , deprecate call function available,,
1728,f88af0c127c39c6025e75eb8ee482bf752cdca3a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-22 13:52:31 +0200, , clarification static property fix 248,,
1729,407c29208009a6b767a8424c28a0909eb5871996,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-21 15:43:01 +0200,247, merge pull request 247 aldanor iterators use prefix increment make_iterator,,
1730,9edfd20d40405eba19d4bb4651690a25f3a00cd3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-21 14:27:17 +0200,245, merge pull request 245 bradharmon add callback example named parameter,,
1731,daed1abc9c6fb3c43b6c633391316249fb263dad,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-17 22:29:39 +0100, , switch using prefix increment make_iterator,,
1732,3ae5bd787fb107d98f4071b489ff83861a393e59,van Smirnov <i.s.smirnov@gmail.com>, 2016-06-17 22:29:10 +0100, , remove extraneous semicolon pedantic warning,,
1733,835fc06ca4d74b0c03325090fd108486833b440b,rad Harmon <bharmon@exegy.com>, 2016-06-16 13:19:15 -0500, , add callback example named parameter,,
1734,a62b3a07ba7741a891bb1062ee80a83b2203b14b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-15 19:39:03 +0200,244, merge pull request 244 jerryatinnobec master allow pybind11 arg false default value,,
1735,b8f2d1886c2a09805df77e24f14a06a2fd856a80,erry Gamache <jerry.gamache@autodesk.com>, 2016-06-15 12:55:34 -0400, , remove unnecessary brace,,
1736,c6e0cdfa54bd42815a4e3c264e788d5f1529d6aa,erry Gamache <jerry.gamache@autodesk.com>, 2016-06-15 12:48:15 -0400, , allow pybind11 arg false default value,,
1737,663513cf23749c5ac9a1c321457a913661fd4722,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-14 16:08:31 +0200, , release process clarification,,
1738,452da8884f8e1223fff37610ab4d5501e7ac7547,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-14 15:25:53 +0200, , minor .gitignore update,,
1739,f85c52901e7a4a81dd82c46f37345ee6bfe08b42,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-14 15:24:47 +0200, , starting work release v1.9,,
1740,f9502150469cc064f656dff73bed7c392a8ab7c7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-14 15:00:46 +0200, , note semver policy,,
1741,1cbe7ef2ace9c268b16f69730acc56e770acc448,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-14 14:55:10 +0200, , changelog update,,
1742,b4dcb8f200895e4c2158cd0d06781488609dd9f4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-12 13:03:22 +0200,237, merge pull request 237 dean0x7d pythonlibs skip defined fix 236,,
1743,e782eb86e9cce3f529909e98a7c5f0ae05d5d672,ean Moldovan <dean0x7d@gmail.com>, 2016-06-12 00:37:56 +0200, , skip defined fix 236 also update documented result variable remove long ago deprecated variable,,
1744,19d95ef09a384d6631308161ead24e5a230c9bf8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-04 01:44:05 +0200,226, merge pull request 226 dean0x7d check number named argument compile time,,
1745,9e62558d521efd899f986d2cf4d062adadb7d8b0,ean Moldovan <dean0x7d@gmail.com>, 2016-06-04 00:27:32 +0200, , check number named argument compile time,,
1746,e3f8cfcbe8c9394ce434b05c6a9fa91374cfe35a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-04 00:02:31 +0200,224, merge pull request 224 dean0x7d udl syntax sugar user defined literal arg str,,
1747,b3eadfa5950420bf3c8449af927a0dee89e8cc38,ean Moldovan <dean0x7d@gmail.com>, 2016-06-03 23:48:31 +0200, , update doc suffix notation named argument,,
1748,96017dd7cdf43fa4b8f21c838affabfc6b0ccc23,ean Moldovan <dean0x7d@gmail.com>, 2016-06-03 10:00:40 +0200, , add literal named argument,,
1749,f600c1d8992e4708e43fe7dd3c97a0a47657cdad,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-03 14:47:54 +0200, , updated faq section python detection,,
1750,ca8dc08a663b4f9d7ccf662cb605e5fe10e951c4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-03 14:24:17 +0200, , updated pbtest link,,
1751,aa79af09f6598bbc6f66ea3b378fd3546da8f8ba,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-03 12:23:24 +0200, , updated cmake example link,,
1752,9bb97c1b96023f771703de17b4e5ebcbbc45c1de,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-03 11:19:41 +0200, , doc added general note macro usage,,
1753,99279f71076468ab566bebd6dd29c7fac9e3dcea,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-03 11:19:29 +0200, , doc switched lexer python console snippet pycon,,
1754,7c99ff2a00e56a8444cdbb05b06226dc81f899ed,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-02 20:33:01 +0200, , fix segfault passing docstring def_property fix 222,,
1755,9767c4803debc363e3b9ba1d3e048b5cfbe28d0f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-02 20:31:17 +0200, , add tested cygwin version readme.md,,
1756,a22ce6cb0e56b8b80eae13a36f558dcbbad24e8e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-06-02 09:35:38 +0200,220, merge pull request 220 dean0x7d fix smaller fix test output improvement,,
1757,ba0a0c063faf313a46a186970b1001a90fc6446e,ean Moldovan <dean0x7d@gmail.com>, 2016-06-02 08:49:41 +0200, , install numpy manylinux binary wheel travis,,
1758,52ae7b1d33c44ea5340778ff015e5cb7877b7a66,ean Moldovan <dean0x7d@gmail.com>, 2016-06-01 23:28:44 +0200, , add check target build test,,
1759,1fe59010629cbbfd6ab92de0d34fa091539cca09,ean Moldovan <dean0x7d@gmail.com>, 2016-06-01 23:16:13 +0200, , add informative diff output failed test,,
1760,4337a5d86a7563cbb4a87eeb756f29bcdf391911,ean Moldovan <dean0x7d@gmail.com>, 2016-06-01 23:11:35 +0200, , fix typo caused set test skipped used pas anyway expected output identical python set,,
1761,f2b36c2ed2d477607851ddca6c0b136791031669,ean Moldovan <dean0x7d@gmail.com>, 2016-06-01 23:03:10 +0200, , fix couple warning conversion warning clang long size_t unused variable warning msvc,,
1762,38d8b8cfe263e956d64c09f8a35c556467b8d722,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-31 09:53:28 +0200, , allow registering class twice fix 218,,
1763,5eda97d7e4cccdcfc48a135206db90c7030228ff,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-30 11:45:02 +0200, , gcc fix,,
1764,b5692721273cbb383a53db5beeee5937360c354c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-30 11:37:03 +0200, , quench eigen related warning,,
1765,5dd33d880da052b195caef20cbbbd31a57341dca,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-30 11:28:21 +0200, , fix issue std vector bool overload stl fix 216,,
1766,dca6b04c5f65ba9461d56356fb542d69f0dec600,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 22:09:24 +0200,217, merge pull request 217 borisschaeling cygwin fix cygwin support,,
1767,fc19c198040c4c63248c197e8dd0292e31b06e8f,oris SchÃ¤ling <boris@theboostcpplibraries.com>, 2016-05-29 16:56:15 +0200, , fix cygwin support,,
1768,3f3ea26215ad9ca6e84fd88aa13ee7ab35a4f074,oris SchÃ¤ling <boris@theboostcpplibraries.com>, 2016-05-29 16:51:48 +0200, , merge branch master cygwin,,
1769,0a07805ab663b981d72bbe2663b946f8c18e67cf,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 13:40:40 +0200, , fixed many conversion warning clang,,
1770,c48da92561c11b9cc96a0ea1ebb6901ad2854ea4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 12:45:35 +0200, , merge branch cygwin http github.com borisschaeling pybind11 borisschaeling cygwin,,
1771,7da7b67478d3bf0e68c6c539bc84cea470093601,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 12:37:11 +0200, , updated contributor readme.md,,
1772,67a63929875a2f9b1b5d0abd5371819f8f1fb1e9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 12:35:16 +0200, , minor cmake adjustment,,
1773,1503d2fb504cdb5b8ee21ba8bc4ca23d54d97a6d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-29 12:29:36 +0200,207, merge pull request 207 dean0x7d cmake simplify cmake build using,,
1774,9309b022fe51909348f5535e4f6b55829d69399e,oris SchÃ¤ling <boris@theboostcpplibraries.com>, 2016-05-28 12:36:30 +0200, , merge branch master cygwin,,
1775,20ee9352038f961b5a9d76c986c9ae088f8ea969,oris SchÃ¤ling <boris@theboostcpplibraries.com>, 2016-05-28 12:26:18 +0200, , use decltype deduce return type,,
1776,c3c27c425951b7c7360bf1b9ac75e5837ef31d15,ean Moldovan <dean0x7d@gmail.com>, 2016-05-28 11:08:16 +0200, , make standard configurable,,
1777,9fb50c56d02eae0b345a7964aacb0b4f16c23a54,ean Moldovan <dean0x7d@gmail.com>, 2016-05-27 21:42:43 +0200, , add lto strip,,
1778,24ddf4b3f13e264369b2f09060306e6eae9b68a5,ean Moldovan <dean0x7d@gmail.com>, 2016-05-27 00:11:52 +0200, , update cmake build documentation,,
1779,49720f0353f3114f7008582b5177fcd263a7f6d9,ean Moldovan <dean0x7d@gmail.com>, 2016-05-26 22:53:38 +0200, , add pybind11_ prefix variable remove redundant osx property,,
1780,896564453671eac84baa0fe200b1163b790695b8,oris SchÃ¤ling <boris@theboostcpplibraries.com>, 2016-05-26 22:42:07 +0200, , make example build run cygwin,,
1781,2c76c693f642c7bb5b13939581fa4cf0a525ce7e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-26 16:50:15 +0200, , minor update release process,,
1782,6e2e0e98218320c0bee0b912ba11d4164e86735d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-26 16:48:28 +0200,214, merge pull request 214 yungyuc yyc docver update document version next release 1.8,,
1783,2240ce2adff4b9ce5b5e04441e6a36f0abd27663,ung-Yu Chen <yyc@solvcon.net>, 2016-05-26 22:32:41 +0800, , update document version next release 1.8,,
1784,69e1a5c91b8fd999da327a39d684745bf689011d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-26 14:29:31 +0200, , quenched warning window comment,,
1785,86d825f3302701d81414ddd3d38bcd09433076bc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-26 13:19:27 +0200, , redesigned virtual call mechanism user facing syntax breaking change sergey lyskov pointed trampoline mechanism used override virtual method within python caused unnecessary overhead instantiating original i.e non extended class commit remove inefficiency syntax change needed achieve project using feature need make change particular example show old syntax instantiate class trampoline class_ trampolineclass myclass .alias myclass .... used class_ myclass std unique_ptr myclass trampolineclass myclass .... importantly trampoline class specified third argument class_ template alias call gone second argument unique pointer simply default holder type used pybind11,,
1786,60abf299c6f6e5e4f418cd406a76dc0371d9af1c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-26 10:47:11 +0200, , minor cleanup pytypes.h,,
1787,ca9f3b2d8ecd0f5c36155d7d23ce461aaf5c02f9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-25 15:41:18 +0200,213, merge pull request 213 yungyuc yyc args pybind11 args derived tuple,,
1788,114bfeb762e623330b3f1efa9d53b090782e7765,ung-Yu Chen <yyc@solvcon.net>, 2016-05-25 20:54:12 +0800,346, pybind11 args derived tuple args derived list cpp_function dispatcher sends tuple impl line 346 392 pybind11.h result args size args operator work mac args size return making args subclass tuple fix,,
1789,03d6a514d2dd49b263ec6a77c3cfaf9a45ba1d5a,ean Moldovan <dean0x7d@gmail.com>, 2016-05-25 13:39:32 +0200, , fix missing variable window build,,
1790,1e3be73a521d6c888e09e554b8a239ce28fbf5a8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-24 23:42:05 +0200, , fix 205,,
1791,b437867338777074af7c80a28f955555d5139515,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-24 21:39:41 +0200, , eigen.h relax access member,,
1792,ec10c20ba53e161e7916fabc44f489ebadbf348b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-24 12:36:32 +0200,212, merge pull request 212 abergmeier master increase available information invocation error,,
1793,2dd215711aca9428acb6e1512afd49baeee14b96,ndreas Bergmeier <a.bergmeier@dsfishlabs.com>, 2016-05-24 10:15:43 +0200, , fixed expected test example verbose error output,,
1794,16d43948456ee3c96a2c0b8bd9f446fc85a728b2,ndreas Bergmeier <a.bergmeier@dsfishlabs.com>, 2016-05-24 09:19:35 +0200, , increase available information invocation error,,
1795,8c6b0b83332c8cb802391ffb08196fa4ebe1ebec,ean Moldovan <dean0x7d@gmail.com>, 2016-05-23 00:12:37 +0200, , build test project used via,,
1796,b4b70a5d62c0e26799f4261a6de713138ad05cb5,ean Moldovan <dean0x7d@gmail.com>, 2016-05-22 22:45:11 +0200, , update cmake travis,,
1797,4563e9a8cd67cec4af61129ef811925cf7a214e8,ean Moldovan <dean0x7d@gmail.com>, 2016-05-22 22:23:18 +0200, , add cmake function function creates pybind11 module using specified source file,,
1798,928fff649fa52ebc7b43860a4914f68e320d2bb2,ean Moldovan <dean0x7d@gmail.com>, 2016-05-22 19:48:47 +0200, , include robust findpythonlibs module cmake,,
1799,bd986fe57e2b413666e5f93987d7f44dbbb3ea2a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-21 10:48:30 +0200, , add comment macro issue fix 203,,
1800,02096a057fb1816197072822a48f40c8e4c77aa0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-21 10:38:56 +0200,204, merge pull request 204 thedrow patch cache compilation,,
1801,f74c9236a593ae97430ef1a384906041bf1f11aa,mer Katz <omer.drow@gmail.com>, 2016-05-21 11:29:30 +0300, , cache compilation,,
1802,43b09af3a970da71b1a39ad75b90d26d26929481,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-21 01:11:11 +0200, , example12 clarification,,
1803,f64ff575d776283de12b01a017a19665928e9b48,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-20 16:37:13 +0200, , mkdoc.py improved formatting code segment enums,,
1804,a970a579b20058a1c6cb95cbedf962114a579b83,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-20 12:00:56 +0200, , eigen.h return compile time vector numpy array,,
1805,b47a9de03542df3743f252b935c52e0d8582a77c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-19 16:02:09 +0200, , ability prevent force cast numpy argument,,
1806,93a317eca1e370bca319e844600329f0e8d3b014,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-19 14:08:20 +0200,198, merge pull request 198 nil werner numpy typo fixed typo numpy example prevented compilation,,
1807,f7048f25b1ba6f91c8707de02ff8b69dd609faa1,ils Werner <nils.werner@audiolabs-erlangen.de>, 2016-05-19 11:17:17 +0200, , fixed typo numpy example prevented compilation,,
1808,54b4aceafa26eb7b0d1caa1aea2822eaf7f2ba0c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-18 08:25:38 +0200,197, merge pull request 197 rosettacommons fix refactoring bind_vector take std string,,
1809,065526a369a43a96ed89d37b5b7b9c35cb909e05,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-17 23:30:58 -0400, , refactoring bind_vector take std string avoid capture potentially temporary char const calling,,
1810,3f200fab2237ea478a71997a9864b935506bb96e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-17 15:35:29 +0200, , implicitly convert double ints,,
1811,a439ccaa0e41899f0f656f798891ea1b3d999951,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-17 10:47:52 +0200, , minor faq edits referenced cppimport project,,
1812,d1bfc4e0f8acc9f65bc7d19de5ff6ecf854ebf93,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-16 18:52:46 +0200, , support __bool__ python 2.x 3.x,,
1813,00c7d6ccc718562871e3cb5c80fc3dfdb05a68e0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-16 12:14:25 +0200, , merge branch stl_bind,,
1814,25c03cecfaa8fef2137e1f2c11c6e534177cbc86,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-15 20:50:38 +0200, , stl_bind redesign cleanup pas,,
1815,affb9f40c549172b17d9ab181d0464fd818e0ebf,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-15 23:55:06 +0200, , quench conversion warning window,,
1816,deeab558ba15101528d7786c6b002066036517e2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-15 23:54:34 +0200, , quench strict aliasing warning,,
1817,a380ed9259489885701a66e7d4784296bd7ddc50,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-15 23:54:13 +0200, , consider __setstate__ constructor,,
1818,26aca3d8adb7c81a93963f321d0740d740f36ebb,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-11 18:35:47 -0400, , adding vector extendâ member function,,
1819,9ee4f92b063e5053d652ab7f55b7725bfe960dcf,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-10 19:40:28 -0400, , refactoring vector_binder function,,
1820,2de5af998d1aca7d308e9a4127ea0631c1f6e542,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-09 15:57:35 -0400, , adding workarounds msvc 2015,,
1821,7b50cbd870312bdac0fe5b588f207798b5bab2dd,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-08 20:41:39 -0400, , fixing build apparently msvc implementation std bool operator,,
1822,a95bde1ea57f55799311d9c90434a95cb133b232,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-08 19:31:55 -0400, , adding documentation value_error fixing various formatting issue removing redundant binding style method adding binding iterator slicing protocol extending example,,
1823,25ac21903af7c798aaef9e5408a1b38be782c1c4,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-07 19:30:33 -0400, , properly adding value_error exception,,
1824,a315c7a25afa55c62b7857d7d92be6402d4823f1,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-07 18:50:26 -0400, , adding python style modifier vector wrapping _msc_ver ifdefâ adding instead bool castâ,,
1825,eae7744c0e143b6866b9239f85531decd07d4705,ergey Lyskov <sergey.lyskov@jhu.edu>, 2016-05-07 00:26:19 -0400, , adding stl_binders,,
1826,178c8a899da094f391f937fbb927786c756440f4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-10 15:59:01 +0100, , nicer type_caster load calling convention,,
1827,5984baafd0629ac8a4079e284418bd198aba01bd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-10 15:05:03 +0100, , redesigned cpp_function constructor significant space saving,,
1828,07ef518bbb538505892b2a6794e3a848ee8331fd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-11 14:25:01 +0100,194, merge pull request 194 jmabille numpy_ctor add extra constructor numpy.h,,
1829,a63d93ba443b9aaaabb5ecf985144197fc80aafb,ohan Mabille <jmabille@bloomberg.net>, 2016-05-11 11:25:15 +0200, , constructor fix,,
1830,c209323c1f30737b35436b47aa581727deb86af2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-11 13:51:30 +0100,193, merge pull request 193 jmabille vs_fix compilation issue fixed,,
1831,a580ed8c47d238d7481a8cea79f8d598818e3609,ohan Mabille <jmabille@bloomberg.net>, 2016-05-11 14:45:01 +0200, , compilation issue fixed,,
1832,ace7b4386eebb3470df932ad3367d0d708d98133,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-10 13:09:05 +0100, , switched conda forge updated release process doc,,
1833,9f272ddc73a9b8b820a982c925a8d0a78c0edcbe,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-08 14:40:57 +0200, , updated testcase reference result,,
1834,6c03beb86731ad0c9797b04a29dfa36a38204e18,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-08 14:34:09 +0200, , enable args kwargs notation close 190,,
1835,e611823e4c0f999a1cb0260d74c37eae10dec416,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-05 21:54:24 +0200, , quench warning osx,,
1836,9e0a0568fed8c05ba7bb8d5101af7b6c407fb4eb,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-05 20:33:54 +0200, , transparent conversion dense sparse eigen type,,
1837,9ac5bc55314457e69dcffd352e79c1332f454e25,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-05 16:27:06 +0200, , fix captialization issue cmakelists.txt,,
1838,e762853bba9f1ba39f3fe72c490ec1de7556e4ba,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-05 10:04:44 +0200, , nicer example instantiating eigen matrix,,
1839,f1032df8916cfd866b8d1843169d9142e50c99f8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-05 10:00:00 +0200, , numpy contiguous fortran array conversion explicitly requested,,
1840,876eeab4ca41c68020a4279a89dfb70e36b58cc7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-04 22:22:48 +0200, , redesigned somewhat heavyweight solution avoid size_t long long long int mismatch various platform previous template overload could e.g handle size_t darwin one gotcha value syntax changed value,,
1841,c62360d994d5c8fb5a98ff02c28b6319fcf40000,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-03 14:32:47 +0200, , minor faq update,,
1842,163ac2ef53e886cb07e9eefcb34f4eefa19c0928,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-03 14:16:18 +0200, , changelog update,,
1843,ad696349072f9aaf5e28e11e9bc47327f8f6415a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-03 13:28:40 +0200, , minor cleanup,,
1844,aadc2f3d8c63c90c6fedda48001bbf75c868dbf2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-03 13:27:57 +0200, , cast use cast_op_type mechanism,,
1845,65f0c2aeb757673200241955f895865558700328,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 22:36:09 +0200, , mkdoc.py handle conversion operator template argument function name,,
1846,6d2529613ae26b90406b5f0ef0dbd00ceb04e41b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 20:47:49 +0200, , fix incorrect macro statement,,
1847,bd57eb484dbd7d5a613818d35620e1726c41409e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 14:42:20 +0200, , try cast none lvalue reference,,
1848,bdd11030c2f74c1d912658e2e4f86b2775ca21e7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 12:56:09 +0200, , minor cmake improvement window,,
1849,6fb48490ef9da9ecddea0c7b6de81b2aed6c762c,enzel Jakob <wenzel@inf.ethz.ch>, 2016-05-01 12:45:38 +0200, , fix crash none passed enum operator,,
1850,9059bd813405917e16a8f0543dd64fa258ca7bfa,enzel Jakob <wenzel@inf.ethz.ch>, 2016-05-01 10:39:45 +0200,70, added test issue,,
1851,2bc946bd7afc5ffcaa488722c1ab345473508634,enzel Jakob <wenzel@inf.ethz.ch>, 2016-05-01 10:28:00 +0200, , copy move constructor detection workaround msvc 2015 bug,,
1852,8e93df825e5ade442a5c5e9b21a8d3dff1b3851a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 02:36:58 +0200, , minor clarification regarding keep_alive fixed typo,,
1853,c993bcec198109e375cc993a70de88ce3e949da4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 02:32:38 +0200, , mkdoc.py document enumeration,,
1854,5612a0c1c22649865a3296d9acaa78f6b414c680,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-05-01 00:32:18 +0200, , generalized str operator std string accept byte 3.x string 2.7,,
1855,fc92d82bba9d8b9d87cc1a83241e7b4693f79b39,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:55:44 +0200, , added noreturn attribute pybind11_fail,,
1856,87810d8e9130e31d5162db88d79a32800161ab6b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:55:10 +0200, , mkdoc.py fixed doc macro,,
1857,295acb2da0dcd8bd326e63c8cb3836621fed5c23,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:36:57 +0200, , mkdoc.py handle ingroup attribute,,
1858,d2b628bba41dc4964f3332b81678c48259f0cecd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:02:39 +0200,187, added testcase issue 187,,
1859,81e0975b82365ec3ef100ae69a02118cb0dd21d5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:13:03 +0200, , clarified pickle version requirement fix 186,,
1860,8edfa0c10ff1bdb13544da6c21d2ca864b239b06,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 23:01:06 +0200, , simplification shared_ptr caster,,
1861,e44e56fafc8dd9eb5b63a030eefe6a3b3165be4d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 22:59:58 +0200, , consider pybind11 include directory python needed case older pybind11 version installed pip,,
1862,e7074970193b840f510cc2de623ca2f5923bc3de,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 22:44:00 +0200, , restructured code issues.cpp,,
1863,ffd85b46d817c6840e57f870144520703cadd020,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 22:41:05 +0200, , return value policy fix function returning std shared_ptr fix 187,,
1864,c4d7ccd8b083eb6d29f704cf49d9ba1e3500344a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 22:00:44 +0200, , started working v1.8,,
1865,e70b2abb6dee27a2889b01f245a2a28e6fcd4b01,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 19:58:33 +0200, , preparing v1.7 release,,
1866,1959d18c489d26ec96786b46956e5b8284e72c83,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 21:10:27 +0200, , fixed return value type make_iterator,,
1867,772c6d54d6700b54749a4f7f9ba1970974a3fc0d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 19:56:10 +0200, , enable passing instance void valued argument,,
1868,e8b9dd263c506a844b3675cb4241c25cca872e5a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 19:35:24 +0200, , fixed docstring generation void pointer,,
1869,fd7cf51a563cd8e248dc613d22097858bab6c9c1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-30 19:13:18 +0200, , enabled casting const void,,
1870,f02f41656b715cfaf05920575a1666d62d2f22e9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-29 14:32:10 +0200, , support longer argument list expansion variadic doc macro,,
1871,dc110276020e510100987d0b7da1283b4aca7f79,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-29 14:29:41 +0200,185, merge pull request 185 merlinnd patch mkdoc.py fix typo __doc5 macro,,
1872,77173d63470084e080dcceae30e0156d39619a36,erlin Nimier-David <merlinND@users.noreply.github.com>, 2016-04-29 14:25:39 +0200, , mkdoc.py fix typo __doc5 macro prevented doc ... call argument resolve correctly,,
1873,dd7ec34d500bb0958fc55411386dab4bc93f7e8e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-29 10:06:24 +0200, , documentation update,,
1874,06f56ee1e90861d6af1882202baf02e31646510a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-28 16:25:24 +0200, , opaque type redesign,,
1875,f64feaf3e49d53b1ed918ae5db3a16c96393b556,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-28 14:33:45 +0200, , documentation improvement,,
1876,6ca6e82f7c766a0894327571fd1057a191198572,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-27 14:33:52 +0200, , fix various iterator issue fix 181,,
1877,a01977ec96a98c6674b016ce7cef82d49dc9c04c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-27 02:39:36 +0200, , pytypes noexcept annotation,,
1878,a57e51c5d89f82c18937631b3d07637509da70a1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-27 00:35:03 +0200, , mkdoc.py sanitize_name fix pep cleanup,,
1879,e84f557edf7c703bb4e1af912ab5a04a22a8d7ea,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-26 23:19:19 +0200, , documentation improvement,,
1880,d361a57863fa46d49e39d63789382dd63414e3f3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-26 00:12:22 +0200, , minor mkdoc name sanitation fix,,
1881,19dfc50d10924cb3786e3d85b2f6d3b0de7ea506,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 23:49:03 +0200, , simplification,,
1882,1ac22e35e3991eb9ad221b212fb30b6cddfe5e04,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 23:25:40 +0200, , changelog update,,
1883,f7b5874ca34634ed281b32f8013f5afdde808f50,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 23:04:27 +0200, , new move value policy,,
1884,fbafdea6728359c1335011402f3b419e689cf70e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 15:02:43 +0200, , gil related compatibility fix,,
1885,17b10d7cbf64a372b120323bb5a987b9b3bd20e5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 09:17:28 +0200, , functional.h acquire gil calling python function,,
1886,2f6662e1747c3ce1bc5e2d811ceda4794a52dfa0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 09:16:41 +0200, , python 2.7.x fix new,,
1887,084ca0e55364af5e83b0c2e46a9b2ccf974ce32e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 04:00:47 +0200, , compilation fix,,
1888,39e97e6a490474af7a4fcc3da58b132f0f00e091,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 03:26:15 +0200, , significant redesign gil state handling,,
1889,18fb3e323a8d0f0cd6d36bf33b26e2bdf3c01451,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 03:25:34 +0200, , added pybind11 none class,,
1890,9b880ba743a39b35cfa3b806a96c5f99428d7c2b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 03:25:13 +0200, , keep_alive fail patient,,
1891,7d0162a2dfc34b280306c9d24be57c67a746a862,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-25 03:24:46 +0200, , minor cleanup,,
1892,0871228f42905d265fcf096007bf2ed9664c3aa1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-22 16:52:15 +0200, , opaque clarification,,
1893,5a2924275c5abc3db0e841afd60c528d894c7bbd,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-22 10:56:58 +0200, , added args kwargs pas parameter,,
1894,7ca275588073428bff4d8b980c31b69087750410,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-22 09:33:19 +0200, , new type wrapper iterable object,,
1895,54b6fdd43d0386d8c16cf86b99e9223bc5c55d6a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-21 12:29:17 +0200, , starting work v1.6 release,,
1896,bb79d7bdc0f48f1a9284af85bf36d392afc28307,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-21 12:23:20 +0200, , preparing version 1.5 release,,
1897,dbe43ffccee87ee1f94d01d8b109f494db15ec5b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-21 12:21:14 +0200, , completed implicit type caster,,
1898,f54ded74f170946d8c8987dee3d81384eec71d6d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-20 17:00:57 +0200, , added caster std fix 171,,
1899,afb9c1776a41ba2aafa2e2315da8cc784e683910,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-19 13:33:21 +0200, , make mkdoc work libclang distribution apple,,
1900,e65e58716e79087a48421da3b1bb2907b8310cde,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-18 21:22:22 +0200, , slight generalization cast_op_type,,
1901,c79dbe425d69a6911155ca39edf74698524fd3e3,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-17 21:54:31 +0200, , faq improvement,,
1902,8cb6cb33ef10257a1f45e038897c91a558745943,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-17 20:21:41 +0200, , minor cleanup common.h updated author info copyright year,,
1903,bf0c7dcc2264317c5e741a00a4fa78b8e12d24cf,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-18 10:52:12 +0200, , convenience overload make_iterator,,
1904,1dc940d4b7696b1339f1ec4367d3bd31b879b12a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-18 10:34:27 +0200, , quenched pendantic warning close 167,,
1905,b2b44a9af81b591b273fa98fa0780237c66a3a7d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-15 17:50:40 +0200, , fix virtual dispatch newly created thread,,
1906,71c5d80a9118a40d17112c771450ba911ecb015d,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-14 21:42:51 +0200, , added contributing.md file github issue tracker loosely based template drush project,,
1907,8bd31c71e432323ecc6cee6d33daabb0aec8ceed,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-14 14:26:13 +0200, , new automatic return value policy cat make_tuple fixed ambiguity issue,,
1908,2e03a5857cd2706e7356517490ffdc398638a70b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-14 11:27:15 +0200, , added comment cmake issue,,
1909,b282595bbaeed7eb1de4ab4e3d2fce7a4005ee14,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 23:33:00 +0200, , convenience wrapper constructing iterators fix 142,,
1910,5a6aa491056046dc8d828d7234873fecbdae8492,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 22:48:05 +0200, , added len function,,
1911,1a060fd70df0b9089c34b8f60fba6bb62349b498,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 18:46:05 +0200, , function retrieving header file path fix 158,,
1912,ef7a9b9a3f73678273c86ec3411e6a53ed8c0de0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 18:41:59 +0200, , added info autogenerated sphinx doc fix 112,,
1913,057d05613955f347dacca6105c218d261988beec,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 14:42:17 +0200, , fix testcases python 3.x,,
1914,d7efa4ff7b04f987cdb3a3a9d1649be8f0a78bc1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 13:45:09 +0200, , return best representation polymorphic type fix 105,,
1915,d40885a1e656939a6f2673b30a4e33a603e7814b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 13:30:05 +0200, , clarified pickling doc,,
1916,3d0e6fff254df319eee6e5284ec3b64ae34acb23,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 11:48:10 +0200, , typo,,
1917,1c329aab5a8bc9c22696624a22ae5952ee413e6f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 02:37:36 +0200, , pickling support fix 144,,
1918,505466ff0edcf920dc73b1d94a5b38ceb3e62971,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-13 00:56:17 +0200, , added variadic make_tuple function,,
1919,2c5d560640d2797af3471806a060220c48109090,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-11 18:46:11 +0200, , changelog update,,
1920,f5c154ade93a04118d81c14013c6090c1f9e393b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-11 18:13:08 +0200, , address issue virtual function dispatch fix 159,,
1921,50ed3614ded7d6d51793c48ea9fe6ce1a0d03ee9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-11 17:38:25 +0200, , added faq entry import issue,,
1922,90d2f5e2fccf0afdca3a25e048b3215769786bc5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-11 14:30:11 +0200, , added comment symbol visibility,,
1923,978e376e57930d7decd15b8f181b7511d605b23e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-07 18:00:41 +0200, , documentation improvement,,
1924,1e1f3675cdec705de23ffc2d28c8cbc7b9a65343,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-07 10:31:01 +0200, , added limitation section,,
1925,33c2a0494f15de9df9f720894e0cec7e86e24e2c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-07 09:06:49 +0200, , minor documentation update,,
1926,95dc0695b7b04b3ad13678adc5b4abd4ce615c70,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-07 08:59:10 +0200, , starting work version 1.5,,
1927,0e6ca5916e2585ca9b778f8304c166b6a36b7e5a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-07 08:49:37 +0200, , version 1.4,,
1928,3411673fbf66ee78fcbd030186c87ab92594eb3e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-06 17:55:41 +0200, , updated changelog,,
1929,9f0dfce84b716b3e2a5e79be4fd6df5f09131626,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-06 17:38:18 +0200, , returning unique pointer allowed,,
1930,a3ee1a45910c2dc9034f554bc238a9aaf41e0e53,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-06 11:51:00 +0200, , improved pair type caster fix 155,,
1931,912feec119a9588c7a2c731dff321d51d1969bb8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-04-01 12:17:03 +0200, , improve debug error message default parameter construction fails,,
1932,9e75905b697793b921e0f188669a47d299620ba5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-31 14:22:37 +0200, , fix testcase issue window related unicode encoding,,
1933,b90e68de7e839ba9953483c6a13a9d0e945420e1,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-27 00:19:32 +0100, , another corner case fix 151,,
1934,08927e9809e1bd15629bf3bbf819a3e9cb1fd59a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 23:38:46 +0100, , tab space,,
1935,9883ec01d7bfb87a90e75032581efbef906c6bcb,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 23:37:51 +0100, , allow nullptr string value close 138,,
1936,7393343f6935c71026eeabc3e21d893af25587f4,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 23:04:40 +0100, , removed unnecessary code,,
1937,d3349af48b0ffa101660b370bc702454fd064968,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 23:04:10 +0100, , modularized logic preceding change fixed issue char fix 150,,
1938,0772967ecfbc3c1cf6260bbc5277c7a2b801cec7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 20:41:28 +0100, , allow nullptr passing void value,,
1939,de1bca864e8e898e03c3c166d2720b0734425861,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 17:51:09 +0100, , added feature pas void pointer popular demand,,
1940,12cf543804ae90db08bcb2c836141fcf1b037e28,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 17:29:33 +0100, , address compilation issue msvc,,
1941,048373c1b4a8b88cecb0ba1b57ec4c5706d1b1cc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-26 17:14:08 +0100, , explicitly route type casting operation desired casting operator fix 147,,
1942,0b4895885b7f1f7ecad2851196943a12f846bb19,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-25 16:13:10 +0100, , improve default parameter property,,
1943,84ec78feeb47a8e14aae326251757b981dd74c97,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-21 17:54:24 +0100, , minor redesign generalization def_property mechanism,,
1944,76eb607d4ed821de36df703f7de1c428e93fa6e7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-21 17:53:39 +0100, , completed type table,,
1945,eda978e003263fd7a162716d3447bb4aba92332e,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-15 15:05:40 +0100, , support opaque type,,
1946,a3e34f4a5f90bf47b81c7a9638f2e469ef4526ba,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-15 14:37:53 +0100, , comment old version visual studio,,
1947,13484a207de33bed5092f942a4536157b68e91c0,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-10 22:48:38 +0100,135, merge pull request 135 bennybp master check callable python object,,
1948,1b52246f5d6992d94210b29b0594f3d120e25681,en Pritchard <ben@bennyp.org>, 2016-03-10 16:31:38 -0500, , better testing callable python function,,
1949,17cdb06c1b5dbc3d7d4dafaa22ecfe712264eaf8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-10 13:24:10 +0100, , fix severe regression involving character array fix 137,,
1950,cf8b30287bda1b200ad25f938f31cd75ef9f0d5b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-10 08:48:01 +0100,136, merge pull request 136 sylvaincorlay improve recipe improve conda recipe,,
1951,13ad78bc521c0df7b4f0f858f7acd40ec35278ff,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-03-09 22:28:53 -0500, , improve conda recipe,,
1952,4a48afb356c99a4ee5fe4c592d1fceebc8057f48,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 21:31:21 +0100, , doc update,,
1953,de623a766891d3d3088500d7ff0439c44fa1d739,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 21:11:19 +0100, , added faq,,
1954,4e455dde0b0cd35f0a8f9aa3824ba5a000b56c6f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 16:38:28 +0100, , updated changelog added build directory gitignore file,,
1955,eb5277b38e47c1c8c79401e65e77d9caafe7f8f7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 16:37:44 +0100,119, merge pull request 119 sylvaincorlay docstring signature formatting sphinx,,
1956,14cefbf473d523f41938e33a8ff34bff66f37114,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 09:56:37 +0100, , minor fix conda release process,,
1957,f7e056a413a8f7f182d8c74f6ac144134e6e551a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-09 01:47:28 +0100,132, merge pull request 132 sylvaincorlay update release instruction,,
1958,e6464ad8430971aa139ad5dcf0a45167527bc3ae,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-03-08 19:31:52 -0500, , update release instruction,,
1959,4c7bf9bb947c748c75d7ab2ce58624dacc8b32dd,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-03-08 18:44:04 -0500, , add return type,,
1960,0e04fdf3f6a586936518052c97c0e5136f70aa45,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-03-08 16:42:12 -0500, , add generic signature overload,,
1961,13b22bf4f6ff75c720dda5acba7b3ba9640807be,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-02-28 21:23:39 -0500, , signature formatting sphinx,,
1962,81dfd2c51ff60a885712bca20af0ec9918db4065,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-08 19:40:32 +0100, , working type caster wide string wide character,,
1963,504f7553e382357883205cd5227f6385fe0f24de,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-08 18:12:24 +0100, , starting work next version,,
1964,d2385e8fc6a3008cab96532c99db4c3d57541fc5,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-08 18:04:43 +0100, , ready version 1.3,,
1965,309a85ba59879bde27ca25111d3fc48f46cf9bbc,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-08 17:59:10 +0100, , support std shared_ptr const type indirectly derive std,,
1966,fdc00f50776b75819fbe6f4458f9c0957cd8e184,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-08 17:44:38 +0100,118, merge pull request 118 sylvaincorlay conda_recipe add conda recipe pybind11,,
1967,77586fd6a2518a8d430335de36d7ad4b5bed43f8,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-06 13:38:18 +0100, , add version suffix internal pybind11 data structure avoid conflict future version,,
1968,8d862b37b46c5ceaf7b5566913d2b41a323e2f13,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-06 13:37:22 +0100, , documentation update clarified cross module dependency added contributor improved,,
1969,bce8a4b95c79f0705ef4b746d3ad634ecdcbb83c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-06 13:30:10 +0100, , force explicit cast fix 130,,
1970,98e9210816e2f199a234aed00b914d097ba5b7ca,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-05 23:52:25 +0100,129, merge pull request 129 bennybp master use emplace casting map,,
1971,f4902ece170fe7e17f112f2516e58030d788d12d,en Pritchard <ben@bennyp.org>, 2016-03-05 17:36:46 -0500, , use emplace casting map,,
1972,52f4c3aef37d4a053cc6d0e26678af360c03d58a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-03 14:05:06 +0100, , handle nullptr argument custom holder type fix 124,,
1973,c769fce28001167310a747d417aa0856a98efcc7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-03 12:03:30 +0100, , note nullptr default args,,
1974,a88334f9c2eec11428fb214fa97577fab8af87d8,ulucc <hulucc@outlook.com>, 2016-03-02 15:07:08 +0800, , add wchar_t caster,,
1975,c8f68b3d92a50d48b545a96737d25877775fbd6a,ulucc <hulucc@outlook.com>, 2016-03-02 13:59:39 +0800, , add wstring caster,,
1976,937d646baba3cb40d9b4f6c28cb9b69733e31259,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-01 15:41:02 +0100, , updated link,,
1977,175fa352f7aede4c950aac486a53852906f339be,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-02-01 15:04:09 -0500, , add conda recipe pybind11,,
1978,74982c3d095f7dd7d669c3fa14c8d9c45ec13227,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-01 12:45:08 +0100, , statement,,
1979,4f972c003996ce09c4ab9f2c784e22b9f867216c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-03-01 10:36:10 +0100, , revert revert python package version information reverts commit,,
1980,218b6ce2465577a5ee636e501c3bb84983feb68a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-28 23:52:37 +0100, , revert trim docstrings close 112 reverts commit,,
1981,00d584da975882a3a19b3963e4d071055ea7de9b,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-28 23:50:58 +0100,117, merge pull request 117 jmabille overload python overloading virtual function defined class template,,
1982,25dd4789a8d8cecc42f054bd0938bb48dd54b7be,ohan Mabille <jmabille@bloomberg.net>, 2016-02-26 13:09:22 +0100, , python overloading virtual function defined class template,,
1983,b3ef54a5449f2ec42e1d091b208ffb12258e755a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-24 13:39:53 +0100, , trim docstrings close 112,,
1984,4a50fa5cd48f55bb7be108c690caf41dea466442,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-23 23:50:21 +0100, , address issue handle cast bool quench warning example fix 110,,
1985,9cfa71f4118b8281b21bacbeba23d8c4d1f90076,mabille <johan.mabille@gmail.com>, 2016-02-23 22:41:07 +0100, , example bug function returning bool overriden python,,
1986,347e6eaf68b4712454e4e095f5d7ca7a1516f987,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-23 17:37:10 +0100, , allow broader set type stl container,,
1987,82ba3300806a990070792750f55a32c738147247,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-23 17:28:45 +0100, , stl.h transparent conversion stl linked list,,
1988,a3861b54c4a739db21fc3f7a3bbc9b58d787e045,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-23 13:37:14 +0100, , load accept py_none input,,
1989,cf2b87aa5e05c708adbb0f0a9f3eeb30fcda5174,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-22 17:32:44 +0100, , changelog update,,
1990,bee8f16dbbbe1db4137bfaae3bdcdfb537361875,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-22 17:29:30 +0100, , removed pybind11 package ultimately served purpose,,
1991,c0ce590f5ac57d8514f577dc3f9dc4a2698e1887,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-22 17:25:58 +0100, , fix link setup.py,,
1992,bf72a76dd3b239a95c85170b36ecc0e5e06504b2,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-22 10:29:08 +0100, , added dist .gitignore file,,
1993,57b52798e2d8de6c06c90e980c879a9301af0856,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-20 21:19:30 +0100, , fixed run_test script,,
1994,240e4044aad8c23b31ab8ebe5326ca7d8b9df333,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-20 21:00:45 +0100, , added note supported compiler version,,
1995,80c2451ac56656663d5e63bf16203530d850c350,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-20 20:53:10 +0100, , use relaxed testing scheme msvc intel compiler miss optimization,,
1996,d6e4cef65f118b1a3167b89452161dfc83c81166,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-20 12:17:17 +0100, , minor formatting change removed missing header file referenced setup.py,,
1997,5e31d891fc4db8b7b10624ae38605a5f8f24316c,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-20 12:15:31 +0100,102, merge pull request 102 jmabille vectorize,,
1998,1dc960c37f7d8c46016700992bf279592adbe6c8,ohan Mabille <jmabille@bloomberg.net>, 2016-02-11 10:47:11 +0100, , numpy style broadcasting support pybind11 vectorize,,
1999,e2bb4eb87a531be515c46a29135d52b02dc9c348,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-19 13:27:20 +0100, , ipo check non intel compiler cause issue clang osx,,
2000,3fe59b9b222ebfc520549615b2182ac377166e01,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-18 21:40:24 +0100,103, merge pull request 103 bennybp master fix addition intel compiler,,
2001,33f3430d0c1d6c0ac90aa6f3ac62de108fda3f67,en Pritchard <ben@bennyp.org>, 2016-02-18 15:25:51 -0500, , add intel warning push pop,,
2002,2de6e1d14281dea8995e7fa34f00c159996ecbcc,en Pritchard <ben@bennyp.org>, 2016-02-18 13:20:15 -0500, , remove unnecessary semicolon compiler warn higher level,,
2003,70ee47ddcff0aaecebfdd3aeab190739ff204f5f,en Pritchard <ben@bennyp.org>, 2016-02-18 13:06:43 -0500, , add intel cmake file supress intel inline noinline warning,,
2004,0b6cff3d1d918f642bcb5bdfbbfa6dcd8a7d35ec,en Pritchard <ben@bennyp.org>, 2016-02-18 12:38:27 -0500, , fix compilation segfault problem intel issue,,
2005,f8584b630b82f8a2bfaa70a521efffdb0cb2ef70,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-16 13:36:04 +0100, , quench warning operators.h,,
2006,0880294924a85aebcc7ad091d5ec954fb1d21248,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-13 00:20:21 +0100, , support unordered set map data structure fix 100,,
2007,4fee179900c9c7c9fb3731f04fa98f851ba3787d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-09 09:46:11 +0100, , better debug info arg operator fails,,
2008,6f6c3bc7fcb18a1e8d32e93d402d4567c3288326,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 17:37:40 +0100, , fixed tarball link setup.py added 3.6,,
2009,4f8902a93135672a7f2d98bedb3609e80abdd0e1,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 17:33:12 +0100, , starting development cycle v1.3,,
2010,8ed2808239f3a6052e7789feeeab34eed39b5c62,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 17:32:37 +0100, , pybind11 version 1.2,,
2011,43b6a23a895da7e5025eb9a0c75207ced1fff207,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 17:24:41 +0100, , minor comment binding static method,,
2012,10c74c6f34d5d4f08bd49309ffb6807f80684c98,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 16:36:26 +0100, , transparent std array conversion fix,,
2013,c91551b33ba76377bd541170e861604d40fcefe8,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 15:45:56 +0100, , improved python detection cmakelists.txt fix,,
2014,1f7a8096b7a1cfdaf8e5b91720232560ad4d988f,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-07 13:29:17 +0100, , support string default argument specified static array,,
2015,e206564ebf3cc2970181084813fa2bbe227cbfd5,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-04 23:29:29 +0100, , removed redundant tag,,
2016,a65017902e878f813c8e4ed3a40dd92b1940fa95,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-04 23:02:07 +0100, , set __module__ attribute function fix,,
2017,de3ad078991fee386f6300affcd9b09d0db40c7d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-02-02 11:38:21 +0100, , documentation exporting constant close,,
2018,298183fac4e671ce77f5f002599888f7420b529f,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-02-01 16:51:26 +0100,91, merge pull request sylvaincorlay version add version information,,
2019,97dc81057facb749325eb2c4931a4bc08e788355,ylvain Corlay <sylvain.corlay@gmail.com>, 2016-02-01 09:51:35 -0500, , add version info release instruction pybind11,,
2020,cd4e6ae3f0e4f1116ffb468ebd00147528b25fc5,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-29 11:48:40 +0100, , updated changelog,,
2021,b6cf75d66a72ceb395a9e198d2be696a783b3175,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-29 11:39:32 +0100, , address issue std type_info across module boundary fix,,
2022,2547ca468c8f3860e0fac92da40f5d8a8802e3cc,elipe Lema <felipelema@mortemale.org>, 2016-01-25 16:22:44 -0300, , deal python version compiled without thread support fix,,
2023,15f6a0030e0354d353d8a3cc5d6b3ba3f84a96b3,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-24 14:05:12 +0100, , enum comparison conversion operation close,,
2024,a40c27ee0ef83f02d828aefb9e9630210bd7e076,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-21 19:21:59 +0100, , travis cache pip,,
2025,ab7ef81ee1f9ee75b5abfae11944453515a178d9,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-01-21 19:23:23 +0100,73, merge pull request ax3l topic cleancmake cmake test counting,,
2026,518cf721d90b60667548e8f4c2193dbbb1d1c49b,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-21 19:17:58 +0100, , improve cmake window debug configuration fix,,
2027,fa92f6796fdc110e4831afe8d597f0ae1cd399e7,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-01-21 19:03:51 +0100,69, merge pull request ax3l fix unusedvar close unused var warning,,
2028,d1f4d3ea91d192099945beaa62e04175229cc72a,enzel Jakob <wenzel.jakob@epfl.ch>, 2016-01-21 18:58:36 +0100,75, merge pull request ax3l fix complexglibc fix complex may define macro,,
2029,30214adc0a39b0bb144e060184b47f4e26ad6757,xel Huebl <axel.huebl@plasma.ninja>, 2016-01-21 17:42:46 +0100,75, fix complex may define macro fix described undefining macro complex defined glibc seems include,,
2030,2dd5e3bc2a2ce305553e3bcdaf82c8f87cb1ad93,xel Huebl <axel.huebl@plasma.ninja>, 2016-01-21 17:18:47 +0100,69, close unused var warning close http 3418951 stackoverflow post recommended http herbsutter.com 2009 mailbag shutting compiler warning herb sutter blog post general portable solution work great,,
2031,6c37f2111d580f9152f24819a2c8994e4349f511,xel Huebl <axel.huebl@plasma.ninja>, 2016-01-20 09:24:25 +0100, , cmake test counting automatically detect number example,,
2032,80a06745d31ea28e886423acf40f398b0227f73a,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-20 11:34:07 +0100, , hopefully final adjustment detail fix,,
2033,d4db8bc4bf12ea963e7bef82ac2b3e59f841efd4,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-20 01:26:44 +0100, , minor cmake doc improvement,,
2034,b670b77060dee2bd2d2690efeb0c5777ee0a75be,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-20 01:26:43 +0100, , minor adjustment detail fix,,
2035,88d1d041326d16bb2c51d03e3bad86e01106c0d7,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-20 01:26:42 +0100, , another attempt fix offsetof warning,,
2036,9dcb1c3b3a9d77f75777eab9c4125ebe3d5eea90,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-19 09:50:49 +0100,71, merge pull request ax3l fix strbuild2 fix compile error str naming,,
2037,7cd569c703acfa749f05d3cfebb05ad5b8f8762f,xel Huebl <axel.huebl@plasma.ninja>, 2016-01-11 20:15:40 +0100, , fix compile error str naming fix build error compiling nvcc 7.5 gcc 4.9.2 causing  include pybind11 pybind11.h 952 include pybind11 pytypes.h member function pybind11 str pybind11 handle str constâ include pybind11 pytypes.h 269 error expected primary expression classâ return pybind11 str str false  include pybind11 pytypes.h 269 error expected classâ include pybind11 pytypes.h 269 error expected primary expression classâ ,,
2038,61587164ed74fa1d452ec6ff747502a8aeba4c49,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-18 22:38:52 +0100, , example manually vectorizing numpy code close,,
2039,260bc58f574498791c027b9ad4d4e5ccdcf2d568,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-18 21:00:25 +0100, , improved sfinae close,,
2040,92b2f452f08b7ef033fbad852cd9809b2affd7aa,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-18 21:00:25 +0100, , fix regression stl.h,,
2041,2983d5e1de0de153e14f0de040ad8984a3102656,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-18 21:00:24 +0100, , quench warning close,,
2042,48548ea4a5735acfb86c67354d3ea6a728169740,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:44 +0100, , general cleanup codebase new pybind11 base attribute indicate subclass relationship unified infrastructure parsing variadic argument class_ cpp_function use handle object consistently everywhere,,
2043,9180519d8cffeb1a42e7d69bfd6a57cef9623cf8,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:43 +0100, , added example using fancier kind default argument,,
2044,1ae77fe4d3612c79dd2e78a83ae493c9860a430d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:43 +0100, , added changelog file version defines,,
2045,53b26549d08c0d09dde8ad895b74e64486b3f675,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:43 +0100, , python 3.2 compatiblity close,,
2046,ba0732e7dc7b171970f5dddf29ecbdbcde29a171,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:42 +0100, , fixed terrible bug switched faster api call,,
2047,678d787ca42e0616a667026f83b4feac1828cccb,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:41 +0100, , work class pytypes.h especially stl container casting,,
2048,d561cb010c1c09d0a6b5f9406d07b46a26e25132,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:41 +0100, , fully moved __pybind11__ python attribute side cleanup documentation pas main header file,,
2049,e45b29047a697798b6ad6007ab228a4933820bd5,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:41 +0100, , numpy.h fixed leak added comment buffer_info,,
2050,d33361a6d7d6a96e9d7ab7fc1450ac051ce33621,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:40 +0100, , moved lifetime management py_buffer pybind11 buffer_info renamed count size match numpy naming fix,,
2051,95d18691c9c7877d73cf70c47c6d811552dce434,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:40 +0100, , minor fix removed leak freeing function,,
2052,b2c2c79240679463dd231c5430d8626bca3b596a,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:40 +0100, , improved handling shared smart pointer previously pybind11 required class using std shared_ptr derive std compilation failure would ensue everything also work class assuming basic rule followed e.g never passing raw pointer instance manged shared pointer safer std approach continues supported,,
2053,2ca07de83c3cc6a2cb285eb82d4dc9c3ed4fe8a0,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:39 +0100, , minor fix,,
2054,5f218b3f2c7de3666defecbe355c96e2a4fa011b,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:39 +0100, , keep_alive call policy analogous boost.python fix,,
2055,87187afe9156166863915cd9d46aab6d527dd689,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:39 +0100, , switch numpy array object api avoid unnecessary copy operation vectorize,,
2056,87dfad65443e4a64ab88850d3263cdd3905c0c2d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:38 +0100, , avoid naming clash numpy fix,,
2057,4177ed4336eceb0202c26c9092d8cd8071a32b74,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:38 +0100, , renamed decay intrinsic_type fix,,
2058,82ffd40870956bb6cfb0d5a6fa4c258e278b553a,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:38 +0100, , type void fixed none nonetype,,
2059,56e9f4942b38aa29e7677f21d959f619b1a1ca34,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:38 +0100, , improved signature name subclass pybind11 handle,,
2060,d0325bbd9718d5318b90179f7eacc3a50d90d15b,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:37 +0100, , switched admissible case pytuple_set getitem pytuple_set get_item,,
2061,27e8e1066bb7ab94688163e0d93037989e629e75,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:37 +0100, , added new type pybind11 byte cleanup various macro fix,,
2062,2dfbadee5da258845aa6192869d0ccc85097aaef,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:37 +0100, , documentation using multiple extension module,,
2063,4c1a6be4bd2a5eb8d72dcaa21bc45b1f9cc538f0,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:37 +0100, , minor cleanup numpy.h updated gitignore file ninja,,
2064,6eb11da94af1b605a57775017b87371448c05b95,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:36 +0100, , minor documentation fix updated logo,,
2065,f4671f6a04dc35909d534ee6f55c9b8a2edfa4dc,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:36 +0100, , use raii dispatcher avoid refcount leak certain circumstance handling exception,,
2066,66c9a40213dab8d51ae5933a409c5e970b754f61,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:36 +0100, , much efficient generation function signature updated doc modification tap newer feature present generate function signature considerably efficiently compile time rather run time change pybind11 binary 2.1 time smaller compared boost.python baseline benchmark compilation time get nice improvement well visual studio 2015 unfortunately implement constexpr well enough yet support change runtime fallback,,
2067,2ac5044a05dd22991b227e4755c607553b7b471d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:35 +0100, , moved processing cpp_function argument dispatch code cpp_function class accepts variadic argument formerly processed twice registration time dispatch lambda function unnecessarily slow also lead code bloat since add object code generated every bound function change remove second pas dispatch time one noteworthy change commit default argument constructed converted python object right declaration time consider following example class_ myclass myclass .def myfunction arg arg sometype 123 case change mean pybind11 must already set deal value type sometype exception thrown another change preview default argument function signature generated using __repr__ special method available type signature may helpful i.e myfunction ... signature myclass arg sometype sometype object 0x101b7b080 none one workaround defining specify human readable preview default argument manually using cumbersome arg_t notation class_ myclass myclass .def myfunction arg_t sometype arg sometype 123 sometype 123,,
2068,caa9d44cc78e78c560352279b483de27fc8eb804,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 22:36:34 +0100, , cmake robustified search python,,
2069,3faa3879c6c21db08c5f7d11925d42dd866f679d,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-17 17:43:23 +0100,66, merge pull request aldanor patch add include cmake.rst,,
2070,4f88edde14b4eb16ca3ff210d96e0e0c8e6dc650,van Smirnov <aldanor@users.noreply.github.com>, 2016-01-17 16:42:11 +0000, , add include cmake.rst,,
2071,f08a3f0622c259c95a761dd11eba320e725dc606,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-10 21:34:55 +0100,52, merge pull request tmiasko const correctness make handle related class const correct,,
2072,deadbbb6711c01df7f506b48a0ed9874f30a70bb,enzel Jakob <wenzel@inf.ethz.ch>, 2016-01-07 00:08:38 +0100,57, merge pull request tmiasko conversion use object class hold partially converted python object,,
2073,ca77130be8ec51519cac21655afe77cdb39904c5,omasz MiÄsko <tomasz.miasko@gmail.com>, 2015-12-30 21:03:57 +0100, , use object class hold partially converted python object using object class hold converted object automatically deallocates object exception thrown scope left constructing complete python object additionally added method object release allows release ownership python object without decreasing reference count,,
2074,3367cecc6b6d1641fad85c1684b15094445c228f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-30 18:48:20 +0100, , detect unreferenced keyword argument function call,,
2075,e9dc8248665d9060eeef855c6d333208b2cbaf79,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-28 11:18:11 +0100,53, merge pull request tmiasko clean type clean type name alone whole message,,
2076,5d53ac4cbf29276f9adbb259bfdd76ed442ff8ee,omasz MiÄsko <tomasz.miasko@gmail.com>, 2015-12-28 08:45:14 +0100, , clean type name alone whole message,,
2077,875df5528dd9e71bd3d3ea982ca16d1e30c420bd,omasz MiÄsko <tomasz.miasko@gmail.com>, 2015-12-28 08:11:16 +0100, , make handle related class const correct give handle class typical pointer semantics respect constness,,
2078,45f7c65594491cbcb7213e47af040bd8f599dfd7,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-27 17:29:24 +0100,50, merge pull request tmiasko add const modifier handle cast,,
2079,386ac5cbabdb9996bcbc86e48cfb7fc43a2e5ce2,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-27 17:28:30 +0100,51, merge pull request tmiasko def_tuple create empty python tuple pybind tuple default constructor,,
2080,c83e0622635490ea38db539074782fdab7f0733d,omasz MiÄsko <tomasz.miasko@gmail.com>, 2015-12-27 09:05:25 +0100, , create empty python tuple pybind tuple default constructor follow semantics constructor dict list set creating valid python object default constructor tuple class,,
2081,cc39b2f37fafd6b9949f6bc6210880710e5030bf,omasz MiÄsko <tomasz.miasko@gmail.com>, 2015-12-26 19:01:28 +0100, , add const modifier handle cast,,
2082,dd57a34e2d653478bf0b6f3d54c7c0cae46f3364,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-26 14:04:52 +0100, , improved error handling module import time,,
2083,9d573f44b954c5ce6ad808ba0edce627a5e58f89,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-26 13:37:59 +0100, , stl.h fix std map see,,
2084,1546b85797e158c225f7ea163db39a61333a4d7f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-22 12:05:44 +0100,44, merge pull request onionhammer patch functional.h included make install,,
2085,a1718a66d3fda266009e7f50be126ff3a9469431,rik O'Leary <erik.m.oleary@gmail.com>, 2015-12-21 20:26:02 -0600, , functional.h included make install,,
2086,4b279327a3d416687d6558e4b6fef8ee5486a710,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-18 18:40:22 +0100, , stl.h bugfix std set misc cleanup,,
2087,dbfaf370a5f6b1a28db465d77b932ff61da85f95,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-16 12:22:20 +0100,41, merge pull request jaredcasper master fix typo stl doc,,
2088,d1a24823bc2e77643ac34f23b633a6c8edaf9333,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-16 12:11:01 +0100, , considerable simplification python type caster,,
2089,9b0b40e0b0d511fcdedd7596a464242dedc68d99,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-16 11:34:39 +0100, , add converter nullptr_t,,
2090,6be9e2fff50f0fee6a054eb6ca5d6a78957dbb6b,ared Casper <jared.casper@baidu.com>, 2015-12-15 15:56:14 -0800, , fix typo stl doc,,
2091,5ef121903068a40ac77be93b80e91f4a58cde063,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 17:07:35 +0100, , smart pointer clarification,,
2092,8b5bf00f26fdd23b7b4304ce7c9b29ed86d950ca,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 16:35:05 +0100, , added enhancement clause license,,
2093,6621c17f1037b2bf8e159b287d88fbbd0dcf5ea8,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 12:25:12 +0100,38, merge pull request adler issue enh add error conversion,,
2094,2b9fdbe7c9f989506fef6eb04159587d86b3a73d,onas Adler <jonasadl@kth.se>, 2015-12-15 11:27:19 +0100, , enh add error conversion,,
2095,3e4263447b37bfba4840288aad9f7ac0e3d943e5,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 11:33:52 +0100,32, merge pull request polygon fixed array constructor failing complex type,,
2096,e52cf8ae915efe6347c574f26f092317005d3eca,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 11:32:29 +0100, , also add stl.h header,,
2097,93d9af10192a8faac9d0d21872f0395ef4d3444b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 11:31:20 +0100,31, merge pull request polygon fix_complex add complex.h list installed header,,
2098,f933e68d6a92e712a17922cc0d41020567a2f346,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-15 11:17:13 +0100, , fixed license zlib clause bsd,,
2099,ab92eb37650d3c59a4484b585b8dedde44dac89d,an Dohl <jan@legxaro.de>, 2015-12-15 04:16:49 +0100, , fixed array constructor failing complex type array const buffer_info info constructor fails given complex type since format string length two cause error  throw std runtime_error unsupported buffer format fixed allowing format size one two,,
2100,3e2736b63cd41da6602bb5e231659a5cbe07c9a2,an Dohl <jan@legxaro.de>, 2015-12-15 03:24:40 +0100, , add complex.h list installed header,,
2101,61d67f0462dedcf7fe494fcf5aaddc6bcc852eab,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-14 12:53:06 +0100, , documentation improvement,,
2102,44db04f5807d215e1c6c6350fb386a872a096321,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-14 12:40:45 +0100, , clarification regarding stl container support,,
2103,a4caa85fc66f1d023b2186705bc8f016f076411c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-14 12:39:02 +0100, , added missing namespace declaration,,
2104,e98a5dfa7e6b2f4d14fe1b78847eca902a4a8e4a,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-14 11:35:40 +0100,29, merge pull request mkkim1129 master fix typographical error,,
2105,b62c1203f578e5d95fce45a79942c15052546dec,k kim <myungk2@hotmail.com>, 2015-12-14 16:00:58 +0900, , fix typographical error,,
2106,62127a27b0e781b6169330c1f1fae1f9aaee275c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-13 13:09:42 +0100, , allow void void function argument,,
2107,5f15121b0c4e0bdf81fe5462fc8a65f60f9cbe06,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-13 11:33:49 +0100,24, merge pull request jtravs patch add ldflags compile command,,
2108,7ab3e879a346dec5226225809ee3fbc7d2e24c95,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-13 11:33:22 +0100,26, merge pull request whoshuu feature debug appveyor configuration add debug appveyor configuration,,
2109,76269b70b699baa81579cd7a538d284413f457e9,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-13 11:33:41 +0100, , fix test harness window debug build,,
2110,665eeafd44ecde16209d8845da6adc5c485514ce,uu Nguyen <whoshuu@gmail.com>, 2015-12-12 23:02:45 -0500, , add debug appveyor configuration,,
2111,f7e430292a81bee1cc7e5b7d69b9303c7d184203,ohn Travers <jtravs@gmail.com>, 2015-12-12 22:58:23 +0100, , add ldflags compile command system mac custom python installation add ldflags argument python config get thing working,,
2112,bda3b67dc5f9481857aa7a14478bab3293bb376f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-07 18:25:38 +0100, , add extra documentation rtd,,
2113,f1532bd31c7b9ad54248e9af8d6d9484efdf129e,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-07 18:24:43 +0100, , updated cmake snippet documentation,,
2114,ecdd868956051c7bc6bc23ce341aad8dffe8edd5,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-07 18:17:58 +0100, , documentation using gil,,
2115,24fe0904fb15771c79fac7c9085c0d732221559c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-05 14:41:25 +0100, , license note,,
2116,40584ce8c52e711fe22ea8bfab872c55692c4ba0,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-04 23:58:23 +0100, , fixed another typo,,
2117,7f7831877853385176f532a29527293870e49e8f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-04 23:56:04 +0100,20, merge pull request jakirkham minor_typo missing,,
2118,648e1962e10933d1a9604b12b48f971f2431f4a4,ohn Kirkham <kirkhamj@janelia.hhmi.org>, 2015-12-04 17:51:42 -0500, , readme.md missing,,
2119,e9f4304f29998132d21ad21f66d2fbefde36087d,enzel Jakob <wenzel@inf.ethz.ch>, 2015-12-04 22:39:47 +0100,19, merge pull request jakirkham change non ascii character ascii,,
2120,dc97833f8d1c1621a1659efb86b5a74367e9e663,ohn Kirkham <kirkhamj@janelia.hhmi.org>, 2015-12-04 16:22:25 -0500, , setup.py fix another dash ascii pip complain,,
2121,c40f8c70dcc96d2083ab5fbb23e9bd79f15e1c77,ohn Kirkham <kirkhamj@janelia.hhmi.org>, 2015-12-04 16:21:23 -0500, , setup.py fix dash ascii pip complain,,
2122,faaee1cbbd7ad5ac5c99a6f1fbb0562f2c3f548c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-30 10:17:01 +0100, , use flto supported quenched policy warning,,
2123,60c36db1c95438009f0f3fb2ec2281bdbc11bbba,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-30 12:30:28 +0100, , generic integer type handling,,
2124,7f8d1c20f19deff1f1a43d324fd58e456926c140,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-29 13:46:56 +0100, , improved int_ constructor,,
2125,4ee0f2a19e223bccb59054fcd7d976e06bc3f7fc,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-29 13:45:27 +0100, , add missing instructor bool_,,
2126,f2331666d1e706eeb269f245baa1f5cfbb916bc4,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-28 14:24:44 +0100, , improved compiler detection,,
2127,e1b113b0d9d0a2422b8e3def46ad238a43a58b55,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-28 14:20:38 +0100, , ifdef win32 _win32,,
2128,6e213c9ca04e5f9b1959db5524544bed5fd8f684,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-24 23:05:58 +0100, , improved shared pointer support fix,,
2129,5e90fa4e6a27ad43adee83a41a1e0c7eb5c520b9,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-24 21:24:04 +0100, , bit build travis disabled,,
2130,3350b5e81c0a1e69fbddb0d0a41eaa215d0f0bd2,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-24 21:33:18 +0100, , make install target optional,,
2131,19af357583eaa2bb3d296aa31a376f911012bd13,uka Äehovin <luka.cehovin@gmail.com>, 2015-11-24 21:20:56 +0100, , enabling installation header unix system,,
2132,a4175d6ea3888fe912f6e322a75e960e98c0d012,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-17 08:30:34 +0100, , added warning wrapping wrapped function,,
2133,eb7c0b82ec21e1d63019f170fee3315d7058d9dd,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-16 18:39:43 +0100, , functional.h support kind python function,,
2134,3ee91b2f0aa24480bd215c0dbd1b8917d89c7e0f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-15 13:03:07 +0100, , renamed pybind11 set insert add match api naming,,
2135,333e889ef2fdc22fece30512961b2b7f2da02570,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-14 19:04:49 +0100, , improved stl support support std set,,
2136,723bc65b27292bb214f91725e9fc5b2ab2fc85e0,enzel Jakob <wenzel@inf.ethz.ch>, 2015-11-12 23:27:20 +0100, , fix std shared_ptr proposed vayu fix,,
2137,54289302bc821e69ff7b8079fb412dcd410d9b65,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-26 20:10:24 +0100, , minor cleanup,,
2138,42af9c295ab7213aaa1b87bbf42408e58fc9ad77,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-23 10:21:09 +0200, , appveyor legacy build win32,,
2139,5db63fb746259c9e101b5b19a26f39d98716fa9c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-22 21:38:11 +0200, , work around weird macro substitution issue gcc fix issue,,
2140,fa1bfb2ec7654b7ea6e8419967174e3b6c35698c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-22 16:03:44 +0200, , fallback search type handle incompatible std type_info across module boundary fix issue,,
2141,3419ee909f3e4eeb280ca027747eb25f11829db0,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-21 11:07:48 +0200, , fix linux bit build,,
2142,ad7bc01d516c39829238a4a2b4db7d8f8a30a8f9,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-20 01:09:53 +0200, , fix build linux,,
2143,436b7318912d2718ce1df5753556ddd7dc8414ab,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-20 01:04:30 +0200, , added note cast operation,,
2144,5cd3311c6c7eeea09947cac2bc2902e919f36667,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-20 00:58:59 +0200, , added benchmark,,
2145,0fb8528edfc9e81a189d88f69f1ced8c41b63927,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-19 23:50:51 +0200, , factored common functionality non templated parent class,,
2146,fab881caf43c5cb0cfa88b0d889d8e5ca94719c5,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-18 17:04:24 +0200, , appveyor script,,
2147,b1b714023a5ece9436c135a11c19837804d9f099,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-18 16:48:30 +0200, , consistent macro naming throughout project,,
2148,041a8656af338ead91b1ea45df9091aaa54be809,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-18 16:44:12 +0200, , minor documentation theme change,,
2149,1853b65ff13555542ab84bb3ffbce7dd2db7a56a,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-18 15:38:50 +0200, , bit documentation reference counting wrapper,,
2150,7641c1dd114b4ef05192a05e5f0b2bc024ba2af3,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-18 14:48:24 +0200, , minor doc update,,
2151,10e62e168b95f621a491440d7c5acaf7b9a70fd8,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-15 22:46:07 +0200, , fixed missing semicolon documentation,,
2152,b456ec789d4ba094ed58294e3462b7bf10d51fcb,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-15 22:43:55 +0200, , updated supported python version list setup.py,,
2153,867ae377edb385a31d13dabd19477aa764d50b89,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-15 22:41:25 +0200, , minor cmakelists.txt tweak optimize small binary even release build,,
2154,929fd7e6946255ed84c803d2993f48912de96e15,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-15 18:24:12 +0200, , pypi setup.py file v1.0 release,,
2155,8f4eb006901553ccfa010b75660f979ab1ef31a4,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-15 18:13:33 +0200, , last breaking change consistent project name,,
2156,607654f7ece64240ab56f47a48b13f64f56fe55f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 23:58:10 +0200, , window fix,,
2157,db028d685cb78a71b299a98efe762b614a8b26da,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 23:44:25 +0200, , added module import statement,,
2158,932966968362533e94c12a6156875b8273a58219,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 23:21:54 +0200, , remainder documentation,,
2159,b50872acf2486ac684d9186f6e380c5d014204e2,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 17:38:22 +0200, , breaking change consistency 1.0 release renamed python_ pybind_ everywhere renamed pybind array_dtype pybind array_t,,
2160,19208fe9a4e27e38dfc17456e411e38f53de5f2c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 17:37:25 +0200, , install cleanup handler nontrivial lambda closure,,
2161,28f98aa298db65b781935bc5ead13c3558ee5aaf,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 02:57:16 +0200, , took stab documentation,,
2162,8456a4dca28a0c467b9c85fe67bc4cdd200341b8,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-13 02:42:20 +0200, , minor enum_ improvement use __repr__ instead __str__,,
2163,bcd3182f3d0e290e1b1e17706e1a5532df2e4f53,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-12 23:57:20 +0200, , added comment cmake build system,,
2164,215fc6a4ce32a00e6c150b0b57686b93ac31042b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-12 23:56:56 +0200, , simplified string caster removed wide char support inconsistent across platform better use utf8 case,,
2165,3b806d41eb28027a700b5630d931aabbb26ab0bb,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-11 16:29:35 +0200, , added configuration file travis integration,,
2166,d2a902bd45d140345d72aa525a7ec4740d3eeab9,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-04 20:24:20 +0200, , quench warning window,,
2167,b3ee3eaf813392372dece26b870261afaaa967a6,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-04 15:17:34 +0200, , emit useful error message return value converted python type,,
2168,2cf192f578de4f8f683602f92b6c1e2b9bdf8b46,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-04 15:17:12 +0200, , fixed testcase take enum int conversion account,,
2169,edbdef7ccf88df9632ad9e31884da347d1d3cd7c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-02 09:33:53 +0200, , fixed pybind call value policy,,
2170,6a32620db3d31b18d272a2f0f3d704dab02000bb,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-02 00:42:33 +0200, , convenience function create pybind handle python version type,,
2171,6918922332a46eda4732cb15cec0fbcd8c5dd30d,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 21:32:23 +0200, , allow enums value cast integer,,
2172,ac0fde988a7e376454a1563480cc284e3a01333b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 18:37:26 +0200, , throw exception python deallocates object still exists side,,
2173,6d6fd099dbb7b15eb096976317eeda5918185bf3,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 17:34:26 +0200, , fixed testing infrastructure,,
2174,be0e834b828af8eef51d3d0a32777c977f1b0115,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 16:48:34 +0200, , updated reference output,,
2175,6c698fec59db33395cfd3097facf78870da8f5f9,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 16:47:21 +0200, , fix usage win32 define,,
2176,a2f6fde0dcea0a4c66429e4bb262fc51079900c5,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 16:46:03 +0200, , support overriding virtual function,,
2177,04358b02ed7934b271aa3e26ce44ab255dfa9197,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 16:45:28 +0200, , always record __module__ newly created python type,,
2178,96c10530aa506341863c1acf9660a1e4551f340d,enzel Jakob <wenzel@inf.ethz.ch>, 2015-10-01 16:42:15 +0200, , convenience function working python type get descriptive string python exception without changing exception status convenience function map object python handle convenience check pybind function defined underlying implementation get type object pybind handle,,
2179,5257330e6add34a2139d0999520fe3f45df949e4,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-14 16:38:47 +0200, , keyword processing bugfix,,
2180,73a50a04410db0168af937152793d7f107e18f10,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-11 17:09:47 +0200, , fix radd rsub rmul rdiv operator convenience wrapper,,
2181,38ffb5232f3fc83b5aeff46b38ebc762fe392e0a,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-11 17:01:21 +0200, , handle error callback,,
2182,5116b02e6806f7b9a025597c896d3928ed3a891e,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-05 02:09:17 +0200, , python 2.7 fix,,
2183,570822102c037600781da816d1a083db031c8cde,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-04 23:42:12 +0200, , support ancient python version 2.7.x,,
2184,d557e1d3ad743dd902f69e35b15262e8b2e679e6,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-01 22:56:40 +0200, , example6 fix,,
2185,02f770d06cf3f169a7bac15e37403dc38881f264,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-01 21:38:20 +0200, , win32 compilation flag improvement,,
2186,2b0339f44e248f22ae274f6b8290a30ea6e6d064,enzel Jakob <wenzel@inf.ethz.ch>, 2015-09-01 21:38:07 +0200, , refcounting fix,,
2187,c47fc488d3ba90a8f113acc53dac95a15b1b7866,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-30 01:01:47 +0200, , win32 build fix,,
2188,a7500317956457497c9d97e22276863554e2e3ad,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-29 02:08:32 +0200, , support strongly typed enum,,
2189,bce10fae3813cfd1bd447f9ed7c29853b61aae8b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-28 17:58:24 +0200, , window fix,,
2190,a9ee25a97e94e6a41b173016727215cc045bc52b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-28 17:53:31 +0200, , various minor compilation fix,,
2191,5d4d83da1187d88de50dbb0c3e2c82fedc30aa94,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-28 17:49:27 +0200, , merge branch master http github.com wjakob pybind11,,
2192,7b8e032c26eafaf32935ce604239c962abd17e83,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-28 17:49:15 +0200, , added basic number type,,
2193,328aa14e0af07ee78fcbce5eaaccfb38b53daed1,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-26 17:23:23 +0200, , linux compilation fix,,
2194,43dbdfd0e738939e25b84deb60fc6b253a9a5ea2,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-24 15:32:50 +0200, , merge branch master http github.com wjakob pybind11,,
2195,f5fae929a39b0f0894fcf14bdcfe0d90ce7e55f3,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-24 15:31:24 +0200, , avoid std string creating signature make nicer type name binary size reduced,,
2196,b129af53cd70e7de1422a529f72d02575499ccd1,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-04 19:04:39 +0200, , merge,,
2197,d85215c18de1bc3355d76477d57d71457bee349c,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-04 19:03:53 +0200, , quench clang warning,,
2198,d3a4a50207655a16c8dca64b4413237dfefcf47b,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-04 18:55:07 +0200, , merge branch master http github.com wjakob pybind11,,
2199,efd9e987f52e33d83ef1da5c70bedcf13a8f96b0,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-04 18:53:18 +0200, , window fix,,
2200,10d992eb9c367c01f9025fedac136dd0a02601a7,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-04 13:59:51 +0200, , added logo,,
2201,cd5cda715b31f67a817188a5cf2b6b77aaae13b6,enzel Jakob <wenzel@inf.ethz.ch>, 2015-08-03 12:17:54 +0200, , cleaned handling warning clang,,
2202,281aa0e668fe7c1b6185ccd981d9ab949035bbaa,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-30 15:29:00 +0200, , nicer code separation cleanup logic std function type caster,,
2203,a576e6a8ca5f22f9f9d5f149929637c3337ad086,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-29 17:51:54 +0200, , keyword argument support removed last trace std function usage,,
2204,71867830f531aeefe2a095773fd4f0ef977b9f43,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-29 17:43:52 +0200, , switched cpp_function use variadic argument,,
2205,fbe82bf94d7a28af7a73b69522766d8a1e03ecb7,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-28 16:12:29 +0200, , code size reduction,,
2206,43398a854859ba9df3bc7cd1d7c135a18e066d75,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-28 16:12:20 +0200, , complex number support,,
2207,d4258bafeff13e4a2e0f67174affd1ca2da71bc6,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-26 16:33:49 +0200, , generate compact binary,,
2208,fa70d302482a613a3888253120b16fd3ba2f9c19,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-23 14:43:34 +0200, , documentation extraction improvement,,
2209,ad06e76f9f2a3d72ac2d4c801cbedb14193261dc,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-22 01:01:52 +0200, , documentation extraction tool,,
2210,2ac80e77aa6cb35a8383b331d670f538586eabfb,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-22 00:59:01 +0200, , better numpy support,,
2211,bd4a529319c45d9a87b8b5c60155bcc06d7a742f,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-11 17:41:48 +0200, , flexible function creation syntax,,
2212,38bd71134a428d641d8ca34b3ea94358a387703d,enzel Jakob <wenzel@inf.ethz.ch>, 2015-07-05 20:05:44 +0200, ,,,
