id,sha,author,date,issue,message,file,content
0,7eebcd2be6ac91a1c28ed6a2184efb81aa9aa2a4,lexander Motin <mav@FreeBSD.org>, 2021-07-27 19:05:47 -0400,12425, avoid small buffer copying write wrong arc_write_ready use decide whether reallocate copy buffer answer specific depends buffer size instead use moved public header reviewed brian behlendorf behlendorf1 llnl.gov reviewed brian atkinson batkinson lanl.gov signed alexander motin mav freebsd.org close 12425,,
1,b72611f0f612bf9ffeda827ea0bdf4cc36d9c6e4,rian Behlendorf <behlendorf1@llnl.gov>, 2021-07-26 20:22:27 -0700,12435, fix format specifier warning commit 5dbf6c5a66d address format specifier warning since introduced unrelated commit rebased 5dbf6c5a66d merged fix reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 12435,,
2,4bd99c11d76bec08c951f3fc491a92e8e24de361,rian Behlendorf <behlendorf1@llnl.gov>, 2021-07-26 17:31:00 -0700,12435, remove overlooked __sun_attr__ based macro __noreturn __const __pure macro freebsd platform code based __sun_attr__ macro removed commit 5dbf6c5a6 caused build failure __noreturn macro still used one place kernel code __const __pure macro entirely unused reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 12435,,
3,9776838cfb8c72b2d9bd340db6caf44a95ec580b,eorge Melikov <mail@gmelikov.ru>, 2021-07-18 18:55:46 +0300,12388, update abi file generated worker reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 12388,,
4,0b072481afe26be3314a34bbb69556753ebb97ed,eorge Melikov <mail@gmelikov.ru>, 2021-07-18 17:37:36 +0300,12388, storeabi add corpus path flag try minimize diffs reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 12388,,
5,273730d5b5560d19430ab4bffb29ff8d6400999d,orgen Lundman <lundman@lundman.net>, 2021-07-27 08:38:06 +0900,12357, macos also set va_type reviewed ryan moeller ryan ixsystems.com reviewed tony nguyen tony.nguyen delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 12357,,
6,02601d8aa41df597556ec18c0a1769201fc44851,orgen Lundman <lundman@lundman.net>, 2021-07-27 08:34:11 +0900,12385, move check_file platform section keep shared code base allow special case code check_file section future macos additional check check_file linux freebsd wrapper call reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed jorgen lundman lundman lundman.net close 12385,,
7,dd3bda39cf7a9716c1d45dcaba67da7f64116d63,lexander Motin <mav@FreeBSD.org>, 2021-07-26 19:30:20 -0400,12419, add comment locking reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org issue 12314 close 12419,,
8,bdd2bfd02c70f42ba99d5d621998cfe6a959cb6b,ohn Wren Kennedy <john.kennedy@delphix.com>, 2021-07-26 15:47:08 -0600,12408, assorted fix performance test bail early running perf test forget specify disk allow perf test run number disk remove weekly vs. nightly setting move variable common value perf.shlib use zinject clear arc export import fix dbuf cache size calculation meaning changed performance test cover dbuf cache started fail test would try write file test using max possible size cache inevitably filling pool failing change correctly calculate dbuf cache size reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed george melikov mail gmelikov.ru signed john kennedy john.kennedy delphix.com close 12408,,
9,d8381f50d6adb7c20941ceac64c356dfeb9b80e7,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-07-26 12:51:39 -0700,12339, read past end argv array zpool_do_import zpool_do_import pass argv optionally argv pool_specified import_pools pool_specified false argv argument used however value may end argv array loading could dereference unmapped memory error reported asan build   6003 error heap buffer overflow read size 0x6030000004a8 thread 0x562a078b50eb zpool_do_import zpool_main.c 3796 0x562a078858c5 main zpool_main.c 10709 0x7f5115231bf6 0x562a07885eb9 _start 0x6030000004a8 located byte right byte region allocated thread 0x7f5116ac6b40 0x562a07885770 main zpool_main.c 10699 0x7f5115231bf6  commit pass null argument end argv array reviewed george wilson gwilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allan signed matthew ahrens mahrens delphix.com close 12339,,
10,31c41aea9cd4be1346ae11ece94e03e5ef1f3226,Ã¡clav SkÃ¡la <skala@vshosting.cz>, 2021-07-20 22:21:18 +0200,12402, add missing property zfs allow manpage reviewed brian behlendorf behlendorf1 llnl.gov signed clav skã skala vshosting.cz close 12402,,
11,ab8a8f07457831a21db888afcf48910ce3e9214a,eorge Amanakis <gamanakis@gmail.com>, 2021-07-26 21:30:24 +0200,12365," fix persistent l2arc l2arc_add_vdev first decide whether device eligible l2arc rebuild whole device trim add list cache device otherwise might already start writing device invalidating previous content l2ad_hand l2ad_start however need device present cache device list figure l2arc_dev_t fix moving new function doe need search cache device list contrast l2arc_add_vdev worry invalidating previous content onlining cache device device parameter l2ad cleared offlining device writing new buffer invalidate previous content worst case buffer log block written device lost retire 4,5,8 test since cover code already covered remaining one test renamed renamed fix typo remove assertion always true also update assertion explain comment reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 12365",,
12,037af3e0d403e3850c5d4b0bc4854911013a6a15,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-05 16:02:41 +0200,12201, remove note constcond note.h mostly used annotate reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 12201,,
13,2c69ba6444ad5c1eb54342964149c3095504c401,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-05 15:07:38 +0200,12201, normalise fallthr ough reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 12201,,
14,90f1c3c9467881ed76fd3a41719bf297e6de708b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-05 14:18:37 +0200,12201, prune notreached includes simplification mkbusy format correctness zhack ztest reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 12201,,
15,5dbf6c5a66d3de65f1b0436c8e83097dd49ff059,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-05 13:14:12 +0200,12201, replace printfliken attribute printf reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 12201,,
16,13737094503a38a219f1ffe641cb257bb4b879cb,ark Johnston <markj@FreeBSD.org>, 2021-07-16 10:12:47 -0400,12383, initialize dn_next_type dnode constructor seems nothing ensures array zeroed dnode freshly allocated principle retains value previous allocation practice seems case field end zeroed zero field anyway consistency found using kmsan reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 12383,,
17,3a185275a0172ea8d2ed8b55c7b3524c52147395,ark Johnston <markj@FreeBSD.org>, 2021-07-16 10:05:28 -0400,12383, zero pad byte following tx_write log data logging tx_write record case file data copied dmu pad log record size multiple byte case padding byte zeroed otherwise content uninitialized memory written zil found using kmsan reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 12383,,
18,58714c2817891e27f08b964c7212bf331cee71ac,ark Johnston <markj@FreeBSD.org>, 2021-07-16 09:34:54 -0400,12383, zero pad byte allocating zil record allocating record round allocation size multiple case padding byte zeroed otherwise content uninitialized memory written zil found using kmsan reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 12383,,
19,03363b2f86a97f95127085864a8323853f78f479,ark Johnston <markj@FreeBSD.org>, 2021-07-16 09:27:11 -0400,12383, initialize field zfs_log_xvattr logging tx_setattr could otherwise fail initialize part corresponding zil record depending field present xvattr initialize creation time scan timestamp zero uninitialized byte written zil found using kmsan reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 12383,,
20,da27b8bc7f2778b28fa73547ff91bb8cc962fc0e,ark Johnston <markj@FreeBSD.org>, 2021-07-16 09:19:59 -0400,12383, initialize autoreplace spa_prop_find may fail find specified property case suppresses enoent zap_lookup case return value left uninitialized spa_autoreplace initialized using uninitialized stack variable found using kmsan appears regression commit 9eb7b46ed0 removed initialization autoreplace definition reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 12383,,
21,1c24bf966c373009f2be77438e8696aabf50a7e7,oleman Kane <ckane@colemankane.org>, 2021-07-26 13:55:55 -0400,12427, linux 5.14 compat explicity assign set_page_dirty kernel 5.14 introduced change set_page_dirty struct longer implicitly set ended resulting null pointer deref kernel attempted called change set .set_page_dirty structure introduced related patch set breaking change introduce commit torvalds linux.git reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 12427,,
22,f1ca7999bbf2f1c39e80cee176ba52fcca12ec05,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-07-26 13:51:30 -0400,12428, fix unfortunate null 1325434b certain circumstance end calling vdev_mg null end poorly vdev removal let space adjustment reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12380 close 12428,,
23,1b06b03a7be88f4565c2c3114b8d3f2dc9f9408a,rian Behlendorf <behlendorf1@llnl.gov>, 2021-07-23 15:28:03 -0700,12409, linux 5.14 compat blk_alloc_disk linux 5.14 blk_alloc_queue longer exported usage superseded blk_alloc_disk return gendisk struct still retrieve struct request_queue needed one place used also replaces call alloc_disk minor minor set via struct member assignment reviewed tony nguyen tony.nguyen delphix.com reviewed olaf faaland faaland1 llnl.gov reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 12362 close 12409,,
24,14b43fbd9c13d802409ed886bb6b66fd528fb209,yan Moeller <ryan@iXsystems.com>, 2021-07-22 17:29:27 -0400,12411, zloop add max iteration option use default run pas time useful control number iteration zloop easily produce core dump found iteration metric using random value run pas time improve coverage meaningful way randomizing run time could seen compromise running greater variety shorter test versus smaller variety longer test within fixed time span however desirable running fixed number iteration pas time already incorporates randomness within ztest either parameter passed ztest explicitly default satisfactory reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 12411,,
25,46197dc85892fc15a21b409dc78054a28ac85d6e,lexander Motin <mav@FreeBSD.org>, 2021-07-22 12:22:14 -0400,12375, freebsd ignore make_dev_s error since error returned ignored common code convenient ignore make_dev_s error allows example get device created zvol later rename instead stuck half created state already ignores error switch maxphys maxphys freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12375,,
26,c14ad80fcbcfc011686f01a89644eea7c028a879,orgen Lundman <lundman@lundman.net>, 2021-07-22 11:22:27 +0900,12404, remove old orig_fd variable zfs send possibly required past currently fill purpose ordinarily tiny cleanup generally worth however macos port future commit unspeakable thing send recv would easier deal one instead two reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed jorgen lundman lundman lundman.net close 12404,,
27,1b50749ce9757030ddd4dba9f03ee18182cda82e,lexander Motin <mav@FreeBSD.org>, 2021-07-21 08:40:36 -0400,12314, optimize allocation throttling remove mc_lock use math based refcounts atomic race possible  case called allocator lock held cover race case lock held gang_allocation set use even assume non existing scenario worst may happen race get allocation earlier problem move lock data different allocator different cache line avoid false sharing group spa_alloc_ array together single array aligned struct spa_alloc spa_allocs align struct reviewed paul dagnelie pcd delphix.com reviewed ryan moeller ryan ixsystems.com reviewed brady don.brady delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12314,,
28,bc93935ef0294e559bd0b46809a33c717070a8ce,eorge Melikov <mail@gmelikov.ru>, 2021-07-21 01:21:00 +0300,12379, generate abi file changed commit author download artifact commit reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com signed george melikov mail gmelikov.ru close 12379,,
29,a7bd20e309a4b45b18b1da8e379f5826debe4870,evin Jin <33590050+jxdking@users.noreply.github.com>, 2021-07-20 11:40:24 -0400,12284, add module parameter regarding log size limit add module parameter regarding log size limit  upper limit tx_write log data reached write operation blocked log data cleared txg sync count tx_write log wr_copied wr_need_copy reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed jxdking lostking2008 hotmail.com close 12284,,
30,8172df643b6cdc7fe233b18c8d8e9b29455ae9f1,lexander Motin <mav@FreeBSD.org>, 2021-07-20 10:13:21 -0400,12348, minor arc optimization remove unneeded global practically constant state pointer variable arc_anon arc_mru etc replacing macro real state variable address arc_anon arc_mru etc change arc_evict_all 1ull uint64_max requiring special handling inner loop arc reclamation respectively change byte argument arc_evict_state int64_t uint64_t reviewed matthew ahrens mahrens delphix.com reviewed mark maybee mark.maybee delphix.com reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 12348,,
31,e04210035eba31c40978658b8d2fa7f823a9f7de,orgen Lundman <lundman@lundman.net>, 2021-07-20 23:08:45 +0900,12118, dmu_redact.c doe call bqueue_destroy ensure call bqueue_init corresponding call bqueue_destroy reviewed paul dagnelie pcd delphix.com authored brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 12118,,
32,23c13c7e807ec8abb368e00699a34ffe0bd50885,lexander <solbjorn@users.noreply.github.com>, 2021-07-20 16:03:33 +0200,12260, fix callback typecasting upcoming clangcfi zio avoid callback typecasting zil avoid zil_itxg_clean callback typecasting zpl decouple zpl_readpage two separate callback nvpair explicitly declare callback xdr_array linux zfs_nvops use external iput callback zcp_synctask use fnvlist_free callback zvol use ops zv_free callback taskq_dispatch reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed alexander lobakin alobakin pm.me close 12260,,
33,65b929364162418337ae563fa523d480411790f9,yan Moeller <ryan@iXsystems.com>, 2021-07-19 12:52:50 -0400,12356, use set_error error freebsd vnops use set_error first get error add freebsd xattr implementation missing reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 12356,,
34,de12cd251105d4842a8b749b7386b8bb74e8f8cc,yan Moeller <ryan@iXsystems.com>, 2021-07-19 12:02:35 -0400,12361, remove unused field zvol_task_t use need pool name value source zvol task reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 12361,,
35,eecceeae9feee7f7398c423e81b276a394c8ffae,lexander Motin <mav@FreeBSD.org>, 2021-07-19 11:56:58 -0400,12378, freebsd switch maxphys maxphys freebsd reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12378,,
36,ca14e08cbff36cadd26928cb01222707930973cb,evin Bowling <kevin.bowling@kev009.com>, 2021-07-16 13:28:55 -0700,12350, detect compile time move definition header set appropriate reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allan reviewed alexander motin mav freebsd.org reviewed ryan moeller ryan ixsystems.com signed kevin bowling kbowling freebsd.org close 12350,,
37,b17b19943edfe734211388c6ebd626109232cf17,eorge Melikov <mail@gmelikov.ru>, 2021-07-16 23:04:00 +0300,12344, zpool_influxdb fix werror stringop truncation use strlcpy instead problematic strncpy reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed ryan moeller ryan ixsystems.com signed george melikov mail gmelikov.ru close 12344,,
38,b7ec530233ec1bf16a330443848a23a93a056624,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-07-16 15:58:01 -0400,12336, correct zfs send readonly sends zfs send claimed flag list could use sending readonly filesystem volume reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed rich ercolani rincebrain gmail.com close 12336,,
39,c1b5869bab987711ed00c3b5b43ee7145d332003,lexander Motin <mav@FreeBSD.org>, 2021-07-16 15:39:24 -0400,12300, introduce cpu time dd_lock overhead time spent calling one another waste time even contention twice rewritten block within dbuf_write_done via created one biggest cpu overhead case small block rewrite combine functionality two function case needed without double overhead practically cost even cheaper optimize dsl_dir_phys call seems clang detects aliasing repeating dd_dbuf db_data dereference multiple time increasing dd_lock scope contention reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com author ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12300,,
40,41eba770616c36126cba3468a1781d212d3afb9d,orgen Lundman <lundman@lundman.net>, 2021-07-16 03:31:00 +0900,12296, pas handle do_unmount change already done domount macos platform need access zhp handle devdisks snapshot also symmetry pleasing addition code sort mountpoints sort related handle meant mountpoint handle paired lost get random handle mountpoint reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed jorgen lundman lundman lundman.net close 12296,,
41,d9f0f1582c4bd73e5beb8be447358c8a7170e553,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-07-13 22:50:48 +0200,12359, config libatomic require latomic iff atomic.c link absence lto dynamic libatomic la.so end need section every toolchain executable consider issue reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12345 close 12359,,
42,1325434b2d758ecd0b07a3a4f883a0c43393ed37,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-07-13 11:47:57 -0400,12271, tinker slop space accounting dedup tinker slop space accounting dedup include deduplicated space usage slop space reservation lead surprising outcome update sometimes sometimes get 0ull aka unset spa_dspace correctly set call code update use hit case reviewed matthew ahrens mahrens delphix.com reviewed mark maybee mark.maybee delphix.com signed rich ercolani rincebrain gmail.com close 12271,,
43,f7de776da2ee4b703529035975fd3216b4bacc7a,lexander Motin <mav@FreeBSD.org>, 2021-07-13 11:41:59 -0400,12279, fix arc ghost state eviction accounting arc_evict_hdr return number evicted byte scope specific state ghost state doe mean amount really freed memory logical buffer size correct eviction process waking thread waiting arc size reduction added revise arc shrinker algorithm commit causing premature wakeups arc still overflowed allowing even bigger overflow plus processing overhead next allocation also get blocked probably also short time fix make arc_evict_hdr also return amount really freed memory ghost state header use update arc_evict_count instead originally thinking return since doe account header decided slow allocation progress better long wait reaching test 100ms reduce negative latency effect long time period reclaim thread free little real memory start reclamation process earlier actually reached overflow threshold throttle new allocation also without taking global arc_evict_lock reducing contention reviewed george wilson gwilson delphix.com reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12279,,
44,07a4c76e9016fad22f1ce2613ab5abc4b2652114,rian Behlendorf <behlendorf1@llnl.gov>, 2021-07-12 13:05:50 -0700,12340, update bug report template remove spl version line repository merged since 0.8 release longer need ask simply ask kernel version patch level add hint get information linux freebsd remove status triage needed template practice really using label let step setting reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12340,,
45,958826be7a3e17f29e1f5e114c76aa2ec3c8a490,eorge Wilson <george.wilson@delphix.com>, 2021-07-10 20:00:37 -0500,12299, file reference count get corrupted caller zfs_file_get zfs_file_put corrupt reference count file structure resulting panic soft lockup zfs send recv run add reference count open file begin send recv stream file descriptor closed dmu_recv_stream dmu_send return call zfs_file_put remove reference placed file structure unfortunately zfs_file_put file descriptor lookup file structure may end finding file descriptor table longer contains file struct thus leaking file structure might end finding file descriptor different file blindly updating reference count failure mode probably exists change reworks zfs_file_ get put interface rely file descriptor instead pas zfs_file_t pointer around reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com reviewed ryan moeller ryan ixsystems.com authored allan jude allan signed george wilson gwilson delphix.com external issue dlpx 76119 close 12299,,
46,03dba7ae318e10184a6d5e8327e3005a3ad17eb0,orgen Lundman <lundman@lundman.net>, 2021-07-08 12:13:40 +0900,12311, dprintf_dnode strcpy strlcpy missed couple strcpy earlier commit used enable debug reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed jorgen lundman lundman lundman.net close 12311,,
47,d2119d0e6f411be5418f88fdb9b64e5c7b808fce,orgen Lundman <lundman@lundman.net>, 2021-07-08 12:08:13 +0900,12312, replace strchrnul strrchr could gone either way one either adding macos window spl returning classic usage strrchr since new special way really used used commit reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed jorgen lundman lundman lundman.net close 12312,,
48,eb5983e1b7b46f9159f9efc76f2a59e3dd3a21c2,lexander Motin <mav@FreeBSD.org>, 2021-07-07 19:39:00 -0400,12320, freebsd use unmapped scattered gang abd buffer many freebsd disk driver support unmapped mode data buffer represented virtually contiguous kva mapped address range list physical memory page originally designed buffer without kva mapping unmapped moving virtual address equation allows operate even non contiguous data buffer one condition buffer discon tinuities must aligned memory page border capable geom device patch traverse non linear abd buffer validating chunk border condition met supply geom list original physical memory page instead copying data temporary contiguous buffer capable hardware pool ashift default abd chunk 4kb handle without additional memory copying reviewed brian atkinson batkinson lanl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 12320,,
49,bdd11cbb90a2afa54fd00935ac0d34b4ddf2515c,lexander Motin <mav@FreeBSD.org>, 2021-07-06 20:39:23 -0400,12328, freebsd hardcode abd_chunk_size page_size make sense set page_size since increase overhead make returning memory problematic make sense set page_size since allocation especially free expensive cause kva fragmentation benefit fewer chunk make sense keep complicated math may sense though tunable border linear scatter abds previously also controlled tunable retain functionality taking tunable linux different default value reviewed brian behlendorf behlendorf1 llnl.gov reviewed brian atkinson batkinson lanl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 12328,,
50,97752ba22a4a036f9bc54556d114c77f68796b8f,lexander Motin <mav@FreeBSD.org>, 2021-07-06 17:38:00 -0400,12281, move gethrtime call vdev queue lock dramatically reduces lock contention system slower non tsc timecounters tsc difference minimal since lock pretty congested improvement count plus see reason lock latency lock change actually reduces reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 12281,,
51,6e4e3c3ab67d4ad050a5e704287ea3577fe45b17,ustin Gottula <justin@jgottula.com>, 2021-07-06 13:41:17 -0700,12303, udev rule remove zvol compat symlinks without leading zvol potentially arguable change remove compatibility cruft certain system people may come rely either long time ago unwisely recent time hand literally decade since openzfs switched strategy using opaque numbered dev device node canonical zvol access path directory tree symlinks created udev rule inside dev zvol see 102. even time dev scheme labeled compatibility commit remove second tree symlinks located directly dev assumption anybody sense using intended dev zvol path long time think anticipate large fraction people blissfully unaware intention use dev zvol tree along come rely upon dev tree simply whole time despite compat thing reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed neal gompa ngompa datto.com signed justin gottula justin jgottula.com close 12303,,
52,f24c7c359ea486438ecadf1496e7c9a77b132a0c,ustin Gottula <justin@jgottula.com>, 2021-06-29 21:29:09 -0700,12302, use substantially robust program exit status logic zvol_id currently several place zvol_id program logic return particular errno value even particular ioctl return value program exit status rather straightforward system explicit zero success explicit nonzero value failure problematic multiple reason one particularly interesting problem arise value happens least significant bit unset i.e. positive negative multiple 256 although program see nonzero int value presumed failure exit status actual exit status seen system bottom bit integer zero happen practice encountered particularly weird situation zvol_open code zfs kernel module behaving manner caused open syscall fail errno set kernel private value erestartsys happens defined 512 turn 512 evenly divisible 256 word least significant bit zero even though zvol_id believed returning nonzero failure exit status 512 system modulo value 256 resulting actual exit status visible program actually zero non failure exit status caused problem udev believed program operating successfully fact attempting indicate failure via nonzero exit status integer combined another problem led creation nonsense symlinks zvol dev node udev let get rid problematic logic simply return exit_success everything went fine exit_failure anything went wrong additionally let clarify variable name error similar errno etc clean overall program flow bit reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed justin gottula justin jgottula.com close 12302,,
53,b19e2bdfb5a2f0b652e12f73d8e01e80773aaadd,ustin Gottula <justin@jgottula.com>, 2021-06-29 20:14:18 -0700,12302, print zvol_id error message stderr rather stdout zvol_id program invoked udev via program key zvol.rules.in rule file determine pretty dev zvol symlink path path generated opaquely named dev dev node udev rule program key followed symlink assignment containing substitution collect program stdout paste directly name symlink created unfortunately currently written zvol_id output intended output single string representing symlink path created refer name dataset whose dev path given error message stdout processing program key others import program udev data written stdout functional purpose data written stderr used solely purpose logging udev log_level set debug unintended consequence follows zvol_id encounter error condition udev fails halt processing current rule either zvol_id return nonzero exit status program key rule written properly result non match condition would stop current rule nonzero exit udev create space delimited list symlink name derived directly word error message string observed exact behavior system situation open syscall dev dev node failing sporadically reason especially relevant open call failed zvol_id printed unable open device file dev zd736 stdout exited udev rule finished symlink zvol assuming volume name like pool foo bar would ordinarily expand symlink zvol pool foo bar pool foo bar would cause symlinks created like dev zvol pool foo bar dev zd736 dev pool foo bar dev zd736 combination error message printed stdout udev syntax freely accepting space delimited sequence name context error message string unable open device file dev zd736 reality expanded symlink zvol unable open device file dev zd736 caused following symlinks actually created dev zvol unable dev zd736 dev dev zd736 dev open dev zd736 dev device dev zd736 dev file dev zd736 dev dev zd736 dev zd736 multiple zvols open syscall error multiple zvols attempted claim several symlink name resulting numerous udev error timeouts general chaos commit rectifies silliness simply printing error message stderr dennis ritchie originally intended reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed justin gottula justin jgottula.com close 12302,,
54,f1aef8d4df83c8dc27e366fa1c720f91661d89c2,ustin Gottula <justin@jgottula.com>, 2021-06-29 18:54:38 -0700,12302, udev rule use match rather assign program assignment syntax used program key program key really match key assign key internal logic used udev decide whether program key matched determines whether remainder rule evaluated depends whether operator op_match op_nomatch man page claim effect program key brief perusal udev source code doe seem confirm operator op_match op_nomatch implicitly converted op_match entirely clear definitely case anecdotal testing seems indicate op_assign used program exit status disregarded remainder rule processed regardless whether fact successful exit bottom line zvol_id hit snag return nonzero exit status almost certainly want continue rule use whatever stdout content may mindlessly create dev zvol symlinks therefore let extra sure use match operator explicitly eliminate possibility udev might wrong thing ensure nonzero exit status definitely short circuit rest rule bypassing symlink assignment  udev file src udev udev rules.c func switch case tk_m_program nonzero exit status return token op_nomatch switch case tk_m_program zero exit status return token op_match func retval key considered matched func retval key considered matched  udev file src udev udev rules.c func parse_token func start bool is_match in_set op_match op_nomatch else case streq key program is_match op_match reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed justin gottula justin jgottula.com close 12302,,
55,17c794e7b0723b1f90229771ddf1dc2ac227f224,ustin Gottula <justin@jgottula.com>, 2021-06-29 18:52:33 -0700,12302, udev rule replace deprecated tempnode devnode tempnode substitution old even mentioned man page anymore still technically supported udev plenty deprecated comment surrounding preferred modern equivalent tempnode devnode alternatively reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed justin gottula justin jgottula.com close 12302,,
56,a5398f8782ebc22930cfbad846decaeb17570e86,ustin Gottula <justin@jgottula.com>, 2021-06-29 18:50:13 -0700,12302, udev rule use non ancient comma syntax file old dirt entirely possible comma optional udev back time definitely supposed nowadays reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed justin gottula justin jgottula.com close 12302,,
57,b192a2c0a19133234972b491e9c06093b3d21358,lexander Motin <mav@FreeBSD.org>, 2021-07-01 11:32:31 -0400,12290, remove avl_size field struct avl_tree field used illumos mdb platform increase struct size byte struct vdev_queue including instance avl_tree_t size mean active cache line keep padding user space break abi reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12290,,
58,490c845efe3ca29eaa8aa6ea1e3f45eda72895fe,lexander Motin <mav@FreeBSD.org>, 2021-07-01 11:30:31 -0400,12289, compact dbuf buf hash lock array default dbuf cache size arc make sense hash table size even bigger linux reduce arc one still leaving slack assuming higher rate via dbuf cache via arc remove padding arc hash lock array idea behind padding avoid false sharing lock would sense would limited number busy lock since limit number using memory lock achieve even lower lock contention false sharing use memory contention level reduce number hash lock 8192 2048. number still big enough cause contention reduced memory size improves cache hit rate mutex_tryenter arc eviction thread saving thread time reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 12289,,
59,c6d1112bf4125e5a22eb47ceb7b8cee01f0df9a1,orgen Lundman <lundman@lundman.net>, 2021-07-02 00:28:15 +0900,12295, fix abd leak kmem_free correct size abd_t fix leak abd_t manifested mostly using raidzn least many column e.g four disk raidz2 three disk raidz2 sufficiently heavy raidz use would eventually run system memory additionally switch abd_cache arena firstfit empirically improves perofrmance make abd_chunk_cache performant debuggable allocate abd_zero_buf abd_chunk_cache rather heap try reap non existent qcaches abd_cache arena km_pushpage km_sleep allocating chunk arena reviewed matthew ahrens mahrens delphix.com reviewed alexander motin mav freebsd.org signed jorgen lundman lundman lundman.net authored sean doran smd use.net close 12295,,
60,eca174527e0b8416550e6ce87c405702fd379ada,orgen Lundman <lundman@lundman.net>, 2021-07-02 00:22:16 +0900,12294, upstream leak refcount missing call destroy refcounts leaking mutex inside reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed jorgen lundman lundman lundman.net close 12294,,
61,50e09eddd0c556ace90357b081d23df3f00c2d83,evin Jin <33590050+jxdking@users.noreply.github.com>, 2021-07-01 11:20:27 -0400,12274, optimize txg_kick process 12274 use dp_dirty_pertxg txg_kick instead dp_dirty_total original code extra parameter txg added txg_kick thus know txg kick also txg_kick call moved  know txg number assigned txg_kick unnecessary code regarding dp_dirty_total txg_sync_thread also cleaned reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed alexander motin mav freebsd.org signed jxdking lostking2008 hotmail.com close 12274,,
62,42afb12da70f1fd73c7fcf653d5e2bf42f05b42b,lexander Motin <mav@FreeBSD.org>, 2021-07-01 11:16:54 -0400,12287, remove refcount spa_config_ reason spa_config_ use refcount instead simple non atomic thanks scl_lock variable scl_count tracking hard disabled last year switch simple int scl_count reduces lock hold time avoiding atomic plus make structure fit single cache line reducing lock contention reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed mark maybee mark.maybee delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12287,,
63,cfc564f9b11eed1421789fa018f7b3d141cc18d0,yan Moeller <ryan@iXsystems.com>, 2021-06-30 10:37:20 -0400, , zed match added disk pool vdev guid found 12217 enables zed auto online vdevs wholedisk managed zfs signed ryan moeller ryan ixsystems.com reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov,,
64,4694131a0a05b6db2727c9801f9729b9378d3064,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-29 13:16:38 -0700, , linux 5.13 compat meta increase linux maximum version meta file 5.13 required compatibility patch merged 5.13 kernel officially released signed brian behlendorf behlendorf1 llnl.gov,,
65,3482c2b79ae062dbbc8032d63435d90846580920,aurenÈiu Nicola <lnicola@users.noreply.github.com>, 2021-06-29 22:33:49 +0300, , zed fix sending email 12292 commit 6fc3099 broke quoting invoking mail program revert change signed laurenè nicola lnicola dend.ro reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov,,
66,6a19dea7f68eaf44003008d284270933ad9d3177,lexander <solbjorn@users.noreply.github.com>, 2021-06-29 16:26:11 +0200,12253, module zfs simplify ddt_stat_add loop llvm polly isl precise unhappy loop ddt_stat_add zfs zfs ddt.o lib external isl 2470 insert node set sequence node filter child building custom patch add polly support kbuild mentioned loop rather suboptimal need treat ddt_stat_t array u64 perform addition substraction done simpler loop determined index bound compiler expand d_end number ddt_stat_t field compile time prevents polly failing file reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander lobakin alobakin pm.me close 12253,,
67,5b7053a9a5a624603843a07ac0b360af64839e72,lexander Motin <mav@FreeBSD.org>, 2021-06-29 08:59:14 -0400,12288, avoid 64bit division multilist index function number sublists multilist relatively small dont need bit calculate index bit sufficient make code efficient reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12288,,
68,f20fb199e60722abc052b6034bddb6b83d870c99,ichal Vasilek <michal@vasilek.cz>, 2021-06-26 07:43:25 +0200,12147, fix plymouth passphrase prompt dracut plymouth command split command space mean zfs load key getting filesystem name enclosed single quote since 13c59bb76 failing commit fix piping password directly command similar done script initramfs dracut without plymouth reviewed brian behlendorf behlendorf1 llnl.gov signed michal vasilek michal vasilek.cz related 9193 related 9202 close 12147,,
69,2084e9f7483a50f63ea8efbf3708fa82dcc85e86,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-26 01:28:12 -0400,12232, fix build kasan stock zstd code expects helper asan present work fine userland kernel kasan also get detected lack helper let make empty substitute case reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12232,,
70,5e2c8338bf17d31b44eb1dbbb3c9b6a0f64e96ee,lexander Motin <mav@FreeBSD.org>, 2021-06-25 19:38:31 -0400,12280, help compiller optimize abd_verify abd_verify doe nothing built without debug compiler optimize due call external list_ commit make explicit reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com reviewed george melikov mail gmelikov.ru signed alexander motin mav freebsd.org sponsored ixsystems inc close 12280,,
71,14d2841b5318f92bc443d24ed65f29ccc4b9f2bd,artin MatuÅ¡ka <mm@FreeBSD.org>, 2021-06-25 19:28:51 +0200,12282, freebsd fix compilation freebsd world 29274c9f6 prng32_bounded available kernel freebsd call inline correct pointer type consistent apply linux well reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed martin matuska freebsd.org close 12282,,
72,88a4833039b4a3f08139c5b69a2300424fddfd0f,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-24 14:30:02 -0700,12276, update cache file setting compatibility property unlike property compatibility property stored pool config object object advantage compatibility information available without needing fully import pool read zdb however mean need make sure update copy config cache file done commit add call ensure copy config cache file get updated well one stored pool change made comment property suffers inconsistency reviewed sean eric fagan sef ixsystems.com reviewed colm buckley colm tuatha.org signed brian behlendorf behlendorf1 llnl.gov close 12261 close 12276,,
73,8f11b1d26efbdf5d654dfee6415518705b0ddf55,aul Dagnelie <paulcd2000@gmail.com>, 2021-06-24 12:42:01 -0700,12266, fix flag copying resume case couple flag copied case size estimation resume reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 12266,,
74,86f5e0bbce02c23748a7a212e86da7f88a461d0c,umbi77 <jumbi77@users.noreply.github.com>, 2021-06-24 19:02:54 +0200,12273, instead according current zfs man page instead reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com reviewed mark maybee mark.maybee delphix.com signed jumbi77 close 12273,,
75,126615303d928ba51e58e181203f73f821471739,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-24 12:38:33 -0400,12277, stop using zstreamdump test zstreamdump replaced zstream dump let stop using old name compat symlink reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12277,,
76,942121cfcb545adc856f64ba0ea2ae772bf14b84,onathon <559369+jonathonf@users.noreply.github.com>, 2021-06-24 00:14:58 +0000,12251, update libera webchat client url libera made webchat client available change build 12127 reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed jonathon fernyhough jonathon m2x.dev close 12251,,
77,1b610ae45f59bd15e75b2bb058c4d9ab552e9214,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2021-06-24 01:57:06 +0200,12237, gcc cleanup compiling gcc 11.1.0 produce three new warning change code slightly avoid reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed attila fã¼lã attila fueloep.org close 12130 close 12188 close 12237,,
78,63f4b959a6826088c3eda7d17326a6bcf2f4ced8,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-23 15:53:13 -0700,12272, zts add known exception receive test case reliably fails freebsd main builder linux root cause understood add test freebsd exception list linux test case may occasionally fail known false positive also added linux exception list test made entirely reliable reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 12272,,
79,8e739b2c9ff446457ad04f63a3ee127ded70b996,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-23 00:53:45 -0400,12233, annotated dprintf printf like zfs love using llu uint64_t requires cast noisy even done many though place also couple place used uint64_t promoted llu reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12233,,
80,a81b812495a20623a49c797d255ee5d89fc38790,ntonio Russo <aerusso@aerusso.net>, 2021-06-22 22:39:15 -0600,12227, revert consolidate arc_buf allocation check reverts commit per discussion 11531 reverted commit intended cleanup commit introduced subtle unintended change behavior care taken partially revert reapply 10b3c7f5e4 would otherwise caused conflict change squashed commit reviewed brian behlendorf behlendorf1 llnl.gov suggested chrisrd suggested robn despairlabs.com signed antonio russo aerusso aerusso.net close 11531 close 12227,,
81,29274c9f6d7caa864d2c95cb797ca3cf32b4ef66,lexander Motin <mav@FreeBSD.org>, 2021-06-22 19:35:23 -0400,12183, optimize small random number generation place except two spa_get_random used small value consumer require well seeded high quality value switch two exception directly optimize spa_get_random renaming random_in_range since related spa zfs general freebsd directly map random_in_range new prng32_bounded kpi added freebsd 13. linux user space reduce type used uint32_t avoid expensive 64bit division reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 12183,,
82,ba91311561834774bc8fedfafb19ca1012c9dadd,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-21 08:22:40 -0700, , linux 5.12 compat meta increase linux maximum version meta file 5.12 required compatibility patch merged signed brian behlendorf behlendorf1 llnl.gov,,
83,c4c162c1e8ff9ce8833014711875d18df520096c,lexander Motin <mav@FreeBSD.org>, 2021-06-16 20:19:34 -0400,12172, use wmsum arc abd dbuf zfetch statistic 12172 wmsum designed exactly case like many update rare read allows completely avoid atomic operation congested global variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12172,,
84,9ffcaa370aee6871c92c7c84aa65942fba63a884,eorge Amanakis <gamanakis@gmail.com>, 2021-06-17 03:17:42 +0300,12054, avoid deadlock removing l2arc device case try remove l2arc device deadlock might occur arc_read zio_read wait scl_vdev dropped holding hash_lock however hold scl_all wait hash_lock l2arc_evict fix moving top top arc_read hash_lock taken verify block pointer return checksum error damaged rather halting system using blk_verify_log instead blk_verify_halt reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed george amanakis gamanakis gmail.com close 12054,,
85,ff3175040572baae1aacf5d9062192c5df849030,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-14 12:59:54 -0400,12238, fix importing symlinks turn symlinks heavily used linux dev disk let allow importing reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed rich ercolani rincebrain gmail.com close 12238,,
86,83ba91adf6c0b4b1a5b0f0a6f3e84d267e689915,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-14 17:48:53 +0200,12231, systemd import expand correctly turn expands shell like fashion yielding import cachefile none unset variable import cachefile none word1 word2 white spaced one expands like z_i_o would shell yielding import cachefile none empty import cachefile none word1 word2 spaced fix dracut 90zfs respect zfs_force systemd system reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12231,,
87,069bf406b4619597df1519171edf5fc1736218ee,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-06-13 10:48:53 -0700,12221, ignores reserved space return minimum size child vdev used determining disk big enough replace child also used zdb determine big child make test replacement say childâ asize least nth entire draidâ asize logic raidz however contradicts code vdev_draid_open calculates draidâ asize based reduced child size additional 32mb scratch space reserved end child use draid expansion feature problem replace draid disk one thatâ actually need larger accommodate additional 32mb replacement allowed everything work first since reserved space end donâ try use yet try close reopen pool vdev_draid_open calculates smaller asize draid smaller leaf allowed think confusion correctly returning amount required allocatable space leaf actual size leaf need least 32mb assumes attach size device actually kernel libzpool accepts later cause zdb able open pool commit change return required size leaf size draid make available metaslab allocator reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed matthew ahrens mahrens delphix.com close 11459 close 12221,,
88,afa7b3484556d3ae610a34582ce5ebd2c3e27bba,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2021-06-11 20:00:33 -0400,12210, hash unlinked inodes zfs_znode_alloc always hash inodes znode unlinked need hash fix problem zfs_suspend_fs zrele iput async fashion zfs_resume_fs unlinked drain processing try hash inode could still hashed resulting panic reviewed brian behlendorf behlendorf1 llnl.gov reviewed alan somers asomers gmail.com signed paul zuchowski pzuchowski datto.com close 9741 close 11223 close 11648 close 12210,,
89,10bcc4da6ceced9746fe498f12d0603951258367,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 19:40:09 +0200,12105, script commitcheck.sh fix false positive signed commits reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
90,feb04e66802ef96aa77951c43d4b632b376041ef,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 17:19:14 +0200,12105, forbid basename dirname least two interpretation basename addition function allowed return static buffer unsuitable multi threaded environment raze input encourages overallocations best reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
91,64dfdaba372f07f91a6eab598b3480693b1d14c8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 16:29:53 +0200,12105, libzutil import filter unsuitable file earlier accept right type file available reject small file opening linux reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
92,bf80fb53f59c1d98c03758dec6322cfacec4ccf9,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 16:26:40 +0200,12105, linux libzutil zpool_open_func dup name extract untouchable reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
93,0854d4c186f52066ba0bd2da4282c5fde4bd9326,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 17:17:09 +0200,12105, libzutil add zfs_ base dir name reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
94,3aa81a6635bf025298a40bf7b62ab57c556cfbbe,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 16:23:59 +0200,12105, linux libzutil use array_size instead constant search path reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12105,,
95,1a345d645a5389ac4f9922bc7ecf5cc519e15d32,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-11 11:38:23 -0400,12168, added uncompress requirement old enough version file uncompress program installed cause rpmbuild root crash mangle rpmdb let add build dependency rpm based system reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed rich ercolani rincebrain gmail.com close 12071 close 12168,,
96,9d639d879954e694dea7d2fa5d9c4e9ff1ef0e69,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-11 08:21:36 -0700,12224, zts add makefile.am commit 86b5f4c12 added new test case include makefile.am result test included dist tarball never run reviewed john kennedy john.kennedy delphix.com reviewed serapheim dimitropoulos serapheim delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12224,,
97,ffdf019cb317b16109ec74ae199d4253a6662f5a,lexander Motin <mav@FreeBSD.org>, 2021-06-10 12:42:31 -0400,12158, embed multilist_t storage commit partially reverts change multilists 7968 multi threaded spa sync add cache line alignment separate read multilists heavily modified refcount different cache line reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 12158,,
98,eec5ba113e1d285d445333079a3e8184872ad00a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-10 18:26:37 +0200,12195, dracut 90zfs respect zfs_force systemd system systemd system provide environment generator order respect zfs_force kernel command line option reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11403 close 12195,,
99,371f88d96fe0aeb46a72fec78f90e1d777493ee5,lexander Motin <mav@FreeBSD.org>, 2021-06-10 11:27:33 -0400,12212, remove pool kstats 12212 mostly reverts 3537 want pool kstats commit year ago one side code using pool wide lock became pretty bad performance creating significant lock contention pipeline another efficient way obtain detailed statistic statistic illumos specific much usable linux freebsd reported via procfs sysctls commit doe remove kstat_type_io implementation may removed later together already unused kstat_type_intr  reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 12212,,
100,860051f1d1ef7ee995188b852d8da36bce85b1dc,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-09 20:57:57 -0400,11991, added error writing dev linux starting linux 5.10 trying write dev null zero error prefer inform people happens rather hoping guess wrong reviewed antonio russo aerusso aerusso.net reviewed ahelenia ziemiaå ska nabijaczleweli reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed rich ercolani rincebrain gmail.com close 11991,,
101,327c904615db9cfcd8c9e07cb56b8e36050a4048,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 23:50:07 +0200,12191, lib efi avl share tpool zfs_core zfsbootenv zutil fvisibility hidden symbol affected libavl symbol affected libtpool pre ansi declaration got purged symbol affected libzfs_core symbol affected libzfs_bootenv libefi got cleaned gained efi_debug documentation efi_partition.h remove one undocumented unused symbol libzfs_core  libnvpair saw removal symbol  nv_alloc_sleep     libshare saw removal symbol libzfs   register_fstype smb_shares libzutil saw removal internal symbol libzfs_core label_paths   zpool_open_func zutil_alloc zutil_strdup reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12191,,
102,d406a695c640dd93f49f8dcb532bfa0394ad1812,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 23:34:27 +0200,12191, libefi remove efi_auto_sense present undocumented illumos gate used exclusively rmformat recommend nice blast past also math assumes 512b sector therefore wrong reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12191,,
103,4b7ed6a286c3c92e34f2941dafd822cfa6a880dd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-04 22:43:21 +0200,12212, zgenhostid.8 revisit reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12212,,
104,1b37cc1abee9a1c58ed54a93df569a81f86072c7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-04 22:08:50 +0200,12212, consistentify miscellaneous style remaining manpages notably fix vdev_id non .xrs vdev_id.conf.5 reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12212,,
105,2badb3457ad396b3c2d282d7a9eae90259b15a5a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-04 22:29:26 +0200,12212, move property parameter event concept around manual section page moved follows zpool feature spl module parameters.5 zfs module parameters.5 zfs events.5 zpool events.8 zfsconcepts zfsprops zpoolconcepts zpoolprops reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli authored daniel ebdrup jensen debdrup freebsd.org close 12149 close 12212,,
106,b0f3e8a6ebe10a9098c7a984ae14c6fc9b0e0d7a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-31 14:10:11 +0200,12212, man use one makefile use openzfs .os prevailing style use either nothing originating organisational umbrella openzfs linux manpages also deduplicates substitution code make adding removing sexions simpler future reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12212,,
107,88af959b24301e6fb39ce6ae8b66bdb7e817c710,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-09 12:21:24 -0700,12208, fix minor shellcheck 0.7.2 warning first warning misspelling false positive annotate script accordingly prefix warning update check use conventional string syntax syslog.sh warning possible misspelling may assigned sc2153 make_gitrev.sh note avoid prefix comparison longer serf purpose sc2268 man dates.sh note avoid prefix comparison longer serf purpose sc2268 reviewed ahelenia ziemiaå ska nabijaczleweli reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12208,,
108,08cd0717359b1a18693e3c8e6d6e5a2819b35a48,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-08 20:20:16 -0400,12073, correct flaw python version checking turn version check assumes 3.x 1.0 3.x.0 true python also presumably 100 ... let remake check behave consistently using packaging absent distlib module also update github workflow use new package reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed rich ercolani rincebrain gmail.com close 12073,,
109,1fcfc21cd8cce3d44b2526f262be5c73e4d8621a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 04:22:34 +0200,12042, zed.d history_event zfs list cacher.sh.in parallelise simplify  improves error log message lock per pool instead globally lock actual output file instead var lock zfs list would otherwise linger forever well still remove come back preserve attribute output file instead reverting 644 imperative previous commit zed functions.sh zed_lock truncate lock included series contains one reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
110,e20c9330d7b68c41a4e9b19dc6bd4760b6052b75,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 04:18:20 +0200,12042, zed.d debug.sh simplify locking log file omit arduous rebinding explicit umask setting perhaps importantly avoid permanently littering var lock never delete imperative previous commit zed functions.sh zed_lock truncate lock included series contains one reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
111,b828cf1d01d291de2ab43f207f243898c763f7a2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 04:17:31 +0200,12042, zed functions.sh zed_lock truncate lock appending instead truncating lock file write permission instead dedicated lock file since locking process longer alters file way reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
112,75b4cbf62590c23fac3667537961a2a75fdc2cc3,lan Somers <asomers@gmail.com>, 2021-06-08 07:36:43 -0600,12091, libzfs freebsd use mnt_nowait getfsstat getfsstat used retrieve list mounted file system libzfs fetching property like mountpoint atime setuid etc mode parameter may mnt_nowait information vfs cache mnt_wait effectively doe statfs every single mounted file system order fetch date information far tell field libzfs care filesystem name mountpoint fstypename mount flag thing always updated mount unmount always accurate vfs mount cache except two circumstance file system busy unmounting zfs file system change value mount overridable property like atime setuid remount file system right happens property changed unprivileged user delegated authority change property mount dataset perhaps libzfs could choose reason future switching mnt_nowait greatly improve speed downside long explicitly update mount cache whenever change mount overridable property comparison illumos get information using native getmntany getmntent function also use cached information illumos function would refresh cache resetmnttab never called libzfs gnu linux getmntany getmntent even communicate kernel directly simply parse file given usually etc mtab proc mount perhaps implementation proc mount synchronous ala mnt_wait know sponsored axcient reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 12091,,
113,9685f363c32a4c590e76fa7ff6152bafd36a4d7c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:33:37 +0200,12187, test file_check remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
114,f423411c44bd3c2f83c7f64cd5791d12682827b8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:33:01 +0200,12187, module zfs vdev_removal remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
115,6bab6ee838bc76d8f8be9749a0708b1187e32114,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:32:38 +0200,12187, module zfs vdev_indirect remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
116,f70f3e2fbc9d7071563b113b1a4a688a0ab4cb12,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:31:58 +0200,12187, module zfs dbuf dbuf_read_impl remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
117,f719d3b160050e29b547477ba5b8c3f837c3f45f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:31:21 +0200,12187, module zfs arc remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
118,4ff49c5a063f8adcd2d4094e1f5b00539666236a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:30:23 +0200,12187, libzfs zfs_send remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
119,4f1009face57478d6cd98966e531c98886431e97,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 18:29:45 +0200,12187, zdb needlessly set buf reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
120,77f3b675206cc65689c38b51a6c38f3c8d977f2a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 17:10:41 +0200,12187, libzutil remove unused variable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12187,,
121,2d815d955e02b7c7193f159e9e95cb51d804f65e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-07 21:41:54 +0200,12169, modernise fix rewrite unlinted manpages zpool destroy.8 flatten fix description zfs wait.8 flatten fix description use list event zpool reguid.8 flatten fix description zpool history.8 flatten fix description zpool export.8 flatten fix description remove unmount reference afaict command exists even illumos today anyway definitely call zpool labelclear.8 flatten fix description zpool features.5 modernise spl module parameters.5 modernise zfs mount generator.8 rewrite zfs module parameters.5 modernise reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12169,,
122,afb96fa6ee5293bca7e5002b5946938d04ba6d62,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-07 15:29:27 -0400,12163, force enable debug freebsd invariant set already logic force invariant building present running kernel however debug enabled debug invariant cause strange panic reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed rich ercolani rincebrain gmail.com close 12185 close 12163,,
123,86b5f4c121885001a472b2c5acf9cb25c81685c9,erapheim Dimitropoulos <serapheim@delphix.com>, 2021-06-07 12:09:07 -0700,12177, livelist logic handle dedup blkptrs update logic handle dedup case consecutive free livelist code logic still ensures free entry matched respective alloc keeping refcount free blkptr encounter ensuring refcount get zero time done processing livelist zdb longer panic encountering double free reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brady don.brady delphix.com signed serapheim dimitropoulos serapheim delphix.com close 11480 close 12177,,
124,ea400129c376c958e32bd912ea29905107ebe0bb,lexander Motin <mav@FreeBSD.org>, 2021-06-07 12:02:47 -0400,12145, aggsum optimization avoid atomic_add updating as_lower_bound as_upper_bound previous code excessively strong 64bit system strong enough 32bit one instead introduce use real atomic_load atomic_store operation assignment 64bit machine using proper atomics 32bit one avoid torn read writes reduce number bucket large system extra bucket much improve add speed hurt read unlike wmsum aggsum read still important reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12145,,
125,e5e76bd6432de9592c4b4319fa826ad39971abd7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-05 01:04:37 +0200,12197, libzfs format strerror fix 50353dbd let zfs diff permissive accidentally introduced build warning reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12197,,
126,2ba7a9e5cc984a9e9e750b1ce3d41b8b384ba55c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 13:13:08 +0200,12108, try import empty cache chase zfs import cache scan change condition filenotempty reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12108,,
127,a0242eceff17abc08910ea9bfe6376ecd85f606f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-23 22:09:35 +0200,12108, dracut 90zfs zfs load key wait key appear second also reduce password retries match reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12065 close 12108,,
128,b2c68bea50bd6fcf03ea01f045bbfeac8a88eb4e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-23 18:04:14 +0200,12108, use instead awk print strip datasets reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12108,,
129,c38bc221b28a104dc05f825492062638b7f92d86,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-23 16:39:58 +0200,12108, dracut 90zfs zfs load key load unencrypted bootfs keylocation reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11800 close 12108,,
130,cfc8dd198368dbf4e76c21731ebab35789d2fdd1,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-23 15:48:26 +0200,12108, dracut 90zfs module setup try lib libgcc_s.so relax gcc path suse store library lib64 libgcc_s.so.1 lib libgcc_s.so.1 i686 glibc search path also relax usr lib path catch system similar suse usr lib64 gcc x86_64 suse linux libgcc_s.so without top level lib64 reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11750 close 12108,,
131,50353dbd05a771378ef2eebd3bcb4ab5a0029f43,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-04 17:00:39 -0400,12072, let zfs diff permissive current world zfs diff die certain kind error come ordinary mangled filesystems like einval come file multiple hardlinks one whose name referenced deleted since always safe continue let relax error code still print something immediately abort encounter reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed rich ercolani rincebrain gmail.com close 12072,,
132,8dddb25d2c68e623426a38c9a475767cd8fecdc1,harmening <jason.harmening@gmail.com>, 2021-06-04 13:11:08 -0700,12052, freebsd incorporate change vfs_quotactl kpi vfs_quotactl updated allow filesystem indicate whether changed busy state mount filesystem may still assume .vfs_quotactl entrypoint always called mount busied need unbusy mount clear mp_busy doe something actually requires mount unbusied longer need blindly copy paste ufs protocol calling vfs_unbusy q_quotaoff q_quotaon command reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed jason harmening jason.harmening gmail.com close 12052,,
133,1f8e5b6cb8d28128883a102612d424eebe596d70,yan Moeller <ryan@iXsystems.com>, 2021-06-04 15:53:44 -0400,12176, fix error check move check error mbrtowc loop error value actually negative break loop encountered reviewed tony nguyen tony.nguyen delphix.com reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 12175 close 12176,,
134,f84fe3fc8793e6974402ec32925224e2b404ad8f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-27 02:46:40 +0200,12129, lint manpages reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12129,,
135,4a98300feb783684a3adfba4959f7d7d26a4bd79,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-27 01:31:43 +0200,12129, mancheck accept lint accept lint override reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12129,,
136,783784582225e8ddfbf07993d9fc278bf08025c5,rian Behlendorf <behlendorf1@llnl.gov>, 2021-06-03 13:37:45 -0700,12150, linux set page size small object kernel slab implementation fast space efficient however allocation size increase require multiple page performance suffers spl kmem cache allocator designed better handle large allocation size therefore linux kmem_cache_ compatibility wrapper prefer use kernel slab allocator small object custom spl kmem cache allocator larger object logic effectively disabled architecture using non page size caused kmem cache use spl implementation functionally fine spl code calculates target number object per slab doe take account __vmalloc always return page aligned memory result massive amount wasted space allocating tiny object platform using large page 64k resolve issue set cutoff 16k architecture particular change doe attempt update logic used calculate optimal number page per slab remains issue addressed future change reviewed matthew ahrens mahrens delphix.com reviewed tony nguyen tony.nguyen delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12152 close 11429 close 11574 close 12150,,
137,739cfb965b00e9cc3155c4a0d6c24bd779b1a245,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-15 11:53:14 +0200,12048, libzfs convert fvisibility hidden also mark printf like funxions libzfs_impl.h printf like add show locs storeabi hope diffs make sense future remove symbol libzfs nfs_only sha256init sha2final sha2init sha2update sha384init sha512init share_all_proto smb_only    reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12048,,
138,e00aae4be2b5f126eb67ff3cdfd1b8e09e99fc0b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-25 21:03:56 +0200,12048, libefi efi_get_devname allocate procfs path reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12048,,
139,eefaa55f6452dcaeb26a8994ecf6aa8af054ab83,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-15 13:00:05 +0200,12048, libzfs distribute libzfs_impl.h reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12048,,
140,94f942c658521c9f67955958942014d41a4a7146,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-06-03 19:04:13 +0200,12050, libspl staticify buf pagesize rename aok exporting name short easily cause nasty collision user code reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12050,,
141,f97142c74801a15c4e3840722502d279d1913fb5,olm <colm@tuatha.org>, 2021-06-03 16:13:42 +0100,12156, couple small style cleanup  initialize l_features loop rather static initializer redefine system constant use private name instead rationale array initialized using static foo specified member initialized provided value rest initialized zero b_false course zero feel unsafe rely true forever inclined sacrifice microsecond runtime initialize using loop looking correct combination system constant use open mmap prefer use private constant rather redefining system one due small chance system one might referenced later file rather defining o_path map_populate use distinct constant name reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed colm buckley colm tuatha.org close 12156,,
142,f645d4416f0f0ddb46ba85bbaaf3bb7e87f75877,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-29 19:37:02 +0200,12157, zfs module parameters.5 remove nonexistent parameter never parameter illumos 5497 lock contention arcs_mtx result git log soverflow_shift exposed renamed share zfs_fsync zfs_read zfs_write linux freebsd never parameter added openzfs 9403 assertion failed arc_buf_destroy developer aid setting zdb dangerous test tunable place public documentation mention obviously work although uncover low priority issue unfortuantely also cause ztest assert many location code working correctly since designed fail error developer manually set variable option find debug issue reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed ahelenia ziemiaå ska nabijaczleweli close 12157,,
143,ace760a0b488f73de5fe8d14b3f54e4dad5b7280,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-29 19:10:49 +0200,12157, spl module parameters.5 remove spl_kmem_cache_ expire removed remove kmem_cache module parameter kmc_expire_age reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed ahelenia ziemiaå ska nabijaczleweli close 12157,,
144,6c7c7201d9e0be57f2565d7b9704731968a84594,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-01 17:34:19 -0400,12165, quick fix two zts failure freebsd two test started erroring like object attempting examine exist reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com signed rich ercolani rincebrain gmail.com close 12165,,
145,8bd41ebd543fd7e1a3e99f78fb51a1da9f232a86,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-01 17:20:50 -0400,12160, added another missed case arc_summary3 turn sometimes evidently run inside zts handler arc_summary3 head dev null die enotconn ruin test run added handling reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com signed rich ercolani rincebrain gmail.com close 12160,,
146,e1af0d0d739c6f4b35caabccb38d00feb90363fd,yan Moeller <ryan@iXsystems.com>, 2021-06-01 17:13:26 -0400,12137, libzfs_core fix style violation made function name start new line added blank line function help grepping function reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 12137,,
147,65d9212aeeb531e9f987bb41a1ee11b526d2cdad,rembo <freebsd@grem.de>, 2021-06-01 23:03:49 +0200,12104, freebsd boot code reminder zpool upgrade used warning upgrading zpool freebsd user forget update boot loader pool booted change brings warning back bootfs property set pool sufficient vast majority freebsd installation people running something custom likely aware upgrade specific environment functionality implemented specific helper function reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com authored michael gmelin grembo freebsd.org signed michael gmelin grembo freebsd.org close 12099 close 12104,,
148,3f81aba7668143c6ca6fc44983d4c880606dea8f,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-06-01 14:58:08 -0400,12155, remove iter_write additional iter advance incorrect copy_from_iter already done right thing result following warning printed console 5.12 kernel attempted advance past end bvec iter change included 11378 similar change made read side suggested siebenmann reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com issue 11378 close 12041 close 12155,,
149,f7d7ee0583819f3c380866affb31fd6f828cb50d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 01:45:40 +0200,12101, turn checkbashisms make target make_gitrev.sh actually break checkbashisms parser insists end line actually string start reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12101,,
150,c3ef9f7528d160faa08bbddfa29d7ad58835e1bd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-21 23:43:38 +0200,12101, turn shellcheck normal make target fix new file caught check every file checked explicitly instead work work best effort good anyway reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 10512 close 12101,,
151,d3858ab78894cbd6d2b63d350a25dfa7ab378ce7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 12:29:11 +0200,12101, udev rules.d .gitignore glob rule reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12101,,
152,8d5f211fc87ad595a6e7d32f3adddf216fad19ba,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-28 18:52:48 +0200,12148, suggest zpool import altroot root fail remounted real root reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12148,,
153,7b5bf4758b034e4b12c20f3f99d09677678a3fa4,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-28 13:55:12 +0200,12148, let rootdelay set reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli ref http github.com openzfs zfs issue 11420 issuecomment 850338673 close 11663 close 12148,,
154,d484a7255b8fcc31e3602bb89b0b54a994f48d17,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-30 05:37:05 +0200,12143, zstream force install zstreamdump link accidentally introduced commit dd00925e8d force install zstreamdump link supported configuration install fail need overwrite existing file also work around funny platform noted ac_prog_ln_s doc reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed allan jude allan signed ahelenia ziemiaå ska nabijaczleweli close 12143,,
155,102c91b4f80c8c1b8c8373529e05ce13b1d18eba,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 23:23:19 +0200,12125, widen mancheck man test runner reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
156,4910903c076527252057dce2b00cd20d8264a2f2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 20:15:21 +0200,12125, test runner.1 modernise reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
157,d44449025c1510a6bcd65ce011b77a1179951869,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 19:50:01 +0200,12125, zfs events.5 modernise reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
158,c3fb6653b5975737baed09c9b856752216bb7e1e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 19:12:48 +0200,12125, vdev_id.conf.5 modernise also yeet pci_slot since seem exist reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
159,56454b0391f89dc9e7678137c86dbec9a73331fc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 18:41:20 +0200,12125, man use consistently reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
160,1f3cbcfcc5132b2d5e0f68aac1870bbc2ccd6fbe,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 18:29:29 +0200,12125, zed.8 modernise reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
161,3bcbb6af16d8011f9bf3145b468b081848da2520,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 17:50:17 +0200,12125, cstyle.1 modernise also remove note net consolidation illumos gate reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
162,76b8f7cf539be7b10a8c855e2574cc936aaf55bc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 17:14:48 +0200,12125, vdev_id.8 modernise note scsi topology reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
163,5aace42ce7dbd81efbc7e9787ec2d49be3a42d25,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 16:46:48 +0200,12125, zhack.1 modernise spacing zhack feature stat pool bit iffy reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
164,2c9c5bc8599cef63977b852a867e2816a90f6f33,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 16:14:04 +0200,12125, modernise also rip section potentially including openzfs distribution simplify description reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
165,3d00fbf9a0e54022375fa2c161898b3c3d15efec,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 15:48:24 +0200,12125, zinject.8 modernise reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
166,3365d2cf71638958804e32f3b558a290da93cff2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:51:37 +0200,12125, raidz_test.1 modernise also add article left slav wrote reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
167,defa5a0ae524bc5e5f5771b4712239c96e650dfa,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:50:53 +0200,12125, zpoolprops.8 fix spacing ashift reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
168,2b42a1e57e88f6bd0dfba2e27a592115977d249d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:34:00 +0200,12125, fsck.zfs.8 modernise reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
169,639871363af46ff732d11049dfaa258601471e35,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:27:13 +0200,12125, arcstat.1 modernise also slim description tad reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
170,8134178f3b6bfebe36fde9e20c47e4b6a5238250,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:10:56 +0200,12125, ztest.1 modernise fixed typo avoided changing anything beyond sould document preserved reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
171,b1821d06c35c0f9e2c62015b3e69f7d56825c853,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 14:04:48 +0200,12125, zgenhostid.8 use single line indent macro single line example reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12125,,
172,757df529280d789029bb91761e31031c45c68b8f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-15 12:35:46 +0200,12116, libzfs add stop including libzfs_impl.h cmd reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12116,,
173,e618e4a4ff0b0512e6b6a5230d101a4baad1aabd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-27 17:09:32 +0200,12116, include move zio_encrypt sys zfs.h used userspace live public header reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12116,,
174,f00f469052145ebe18d5d71ee5086194aca82a2d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-15 12:23:45 +0200,12116, libzfs format safety reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12116,,
175,c4e5a07fd050eb62257e481d3266d35a0df2452f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-15 12:02:32 +0200,12116, libzfs expose reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 12116,,
176,45516b4a0a1908299f2f88aa4ef8c65f95abecb3,anoj Joseph <manoj.joseph@delphix.com>, 2021-05-28 15:06:07 -0700,12117, long option ztest change introduces long option ztest build usage message well long_options array single table also add defines default value reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed manoj joseph manoj.joseph delphix.com close 12117,,
177,5d59178e9863ee1e4b39b64b2e4e9e21431508c3,aul Dagnelie <paulcd2000@gmail.com>, 2021-05-28 14:08:41 -0700,12127, direct freenode issue template libera yet webchat client least direct right network webchat client available direct reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 12127,,
178,6465e590dc7999abfee13d1fe9a6531b37cd60bb,rmin Wehrfritz <dkxls23@gmail.com>, 2021-05-28 16:06:45 +1000,12124, rpm explicitly set required min max kernel version dkm package reviewed brian behlendorf behlendorf1 llnl.gov signed armin wehrfritz dkxls23 gmail.com close 12124,,
179,d66b817f0ac78499b0cef73f5093d452cb18d8f4,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-28 01:39:53 -0400,12126, minor fix configure s390x configure s390x key check fail error variable used uninitialized let initialize reviewed colin ian king colin.king canonical.com reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12126,,
180,86706441a86d6e947610046bc8fc08c0618e9eaa,lexander Motin <mav@FreeBSD.org>, 2021-05-27 16:27:29 -0400,12114, introduce write mostly sum wmsum counter reduced version aggsum counter optimized write mostly scenario provide optimized read function instead allow much cheaper add function primary usage infrequently read statistic counter requiring exact precision linux implementation directly mapped percpu_counter kpi freebsd implementation directly mapped counter kpi user space due lack better implementation mapped aggsum unfortunately neither linux percpu_counter freebsd counter provide sufficient functionality completelly replace aggsum still remains used several hot counter reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12114,,
181,2041d6eecd5e88fadf7a8f0d755d3dda938a3127,lexander Motin <mav@FreeBSD.org>, 2021-05-27 12:11:39 -0400,12046, improve scrub math previously zfs scaled based total number disk pool wide mirror receiving queue depth disk since read disk inside wide raidz situation slightly better still wide raidz1 received depth disk instead new code count unique data disk i.e disk mirror non parity disk raidz draid draid math still imperfect since return number parity disk per group per vdev still better slightly reduce scrub influence payload pool topology avoiding excessive queuing reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc closing 12046,,
182,ba646e3e89102552b271727e835a1a99ac8d947d,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-27 11:55:49 -0400,12093, bend zpl_set_acl permit new userns parameter like 12087 set_acl signature changed bolted userns parameter disabled set_acl usage caused 12076 turn zpl_set_acl zpl_set_acl add new configure test new version reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12076 close 12093,,
183,5611bdc8f0d2a0d4c347f37570859e7d5e2a50fe,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-19 21:28:27 +0200,11917, etc systemd zfs mount generator output tweak git diff dirty zfs load key dset.service zfs load key dset.service flattened set bin flag simpler counter counter prompt loop exec zfs applicable reviewed antonio russo aerusso aerusso.net reviewed richard laager rlaager wiktel.com reviewed insaneprawn insane.prawny gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11915 close 11917,,
184,5a1fb060fd6ccd8bf22a49028f3eb677d5978a94,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-19 20:56:10 +0200,11917, etc systemd zfs mount generator rewrite plain rewrite shell version generates identical unit save replacing empty line nothing fewer meaningless space different spacing lock script clean git diff gain anywhere 0m0.336s 0m0.022s 15.27x 0m0.202s 0m0.006s 33.67x depending hardware a.k.a absolutely unusable perfectly fine also properly deal canmount noauto unit across multiple pool see detailed timing early version diffs reviewed antonio russo aerusso aerusso.net reviewed richard laager rlaager wiktel.com reviewed insaneprawn insane.prawny gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11915 close 11917,,
185,0bb736ce0b59d6851dff0914a98a4ff90bba15b3,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-27 01:07:31 -0400,12040, reinstate old zpool read label logic fallback case aio failure probably fallback old behavior still work reviewed ryan moeller ryan ixsystems.com reviewed alan somers asomers gmail.com reviewed ahelenia ziemiaå ska nabijaczleweli signed rich ercolani rincebrain gmail.com close 12032 close 12040,,
186,20bd864edc5120c95484d423ccf029db1b862e05,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-24 20:26:39 +0200,12111, mount.zfs.8 match reality zfsprops.8 add missing temporary option reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12111,,
187,eae3598ae45a3d9ff9cee61ca08edd43a65419a6,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-24 18:15:26 +0200,12111, mount.zfs.8 modernise change text reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12111,,
188,fb9baa9b2045a193a3caf0a46b5cac5ef7a84b61,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-24 17:53:12 +0200,12111, zfsprops.8 remove nbmand used linux pointer mount linux man page mount point fcntl doe mount support little used deprecated configurable since 4.5 far tell freebsd support nbmand mandatory lock mostly dead reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12111,,
189,69cbd0a360e9c09b8a09046c1a373099e14281e8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-22 02:38:17 +0200,12103, various linux kabi cosmetic reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12103,,
190,202498c9583e98152e1e748b8639743943e022d2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 00:44:09 +0200,12103, linux fall arg vfs_getattr reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12103,,
191,a1ca39655ba446c98a2f44b2b1d45d1059738885,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-25 21:33:52 +0200,12094, forbid strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
192,a0d7e27a138883664acef9e1e065f440187d37c8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 23:11:22 +0200,12094, zdb remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
193,1ce6d70c52d6a7b6d8d6ec985333a3ccadc5efc1,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 23:07:23 +0200,12094, zpool remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
194,a281f7690da598964168f4100571cc39b93a8cab,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 23:02:44 +0200,12094, zpool import use realloc realloc remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
195,31f4c8cb19bf3f7a1629e259af77d8a63f3816fd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 22:51:06 +0200,12094, linux libzutil zfs_path_order remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
196,2a8c6060823f98360763038fbb79d2d5922bb6bb,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 22:49:59 +0200,12094, libzutil remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
197,91d67806719c80fbdcf1b4fd47862ae4ac2b7f74,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 22:47:43 +0200,12094, libzutil remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
198,2fdd61a30b517498f766b5a7d9eec6182c32cd72,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 22:45:08 +0200,12094, libzutil allocate remove strtok reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
199,a0cb347ceac4840e988fc6148db21bffbf80cb68,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-20 22:29:33 +0200,12094, libzfs_core fini check refcount twice reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12094,,
200,c71a2bb52fd3ec4db44890e05c071b137ec420b3,lexander Motin <mav@FreeBSD.org>, 2021-05-26 14:14:26 -0400,12097, freebsd update dataset_kstats zvols dev mode previous commit added accounting geom mode dev geom mode actually geom statistic dev mode additional accounting actually make sense reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 12097,,
201,671ea40f626ff98064442834e386a49b009b144d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-26 19:03:47 +0200,12051, freebsd libzfs import execvpe freebsd allocates properly deal argv null minor cosmetic change match cstyle remove whitespace damage restore direct string printing reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed tony nguyen tony.nguyen delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 12051,,
202,f172c3088f511038a50293a3640138419820062d,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-25 22:02:01 -0400,12036, correct flaw arc_summary test change correctly handle brokenpipeerror improves associated test reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed rich ercolani rincebrain gmail.com close 12037 close 12036,,
203,211cee4fcf785935a94d038ee6656267adc2b223,lexander Motin <mav@FreeBSD.org>, 2021-05-25 21:38:34 -0400,12049, freebsd avoid memory allocation arc_prune_async reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 12049,,
204,90c05245350334a7d013c5e394dc06a17d90ccec,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-25 21:08:27 -0400,12113, add note printing dbgmsg entry freebsd looked bit find documentation print logged dbgmsg entry message since dtrace probe started allanjude kindly pointed toward sysctl let add note dtrace probe mentioned freebsd people find reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed allan jude allan signed rich ercolani rincebrain gmail.com close 12113,,
205,dce1bf99ecbcb6a82756329f4a87cea6c8284277,ermavipinkumar <75025470+vermavipinkumar@users.noreply.github.com>, 2021-05-26 00:02:07 +0530,12088, propagate vdev state due invalid label corruption propagate vdev child state parent invalid label add reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com authored srikanth hpe.com signed vipin kumar verma vipin.verma hpe.com close 12088,,
206,1a1302f8c4727b90ac83a3d3bcf995fa0516a11b,oomas Soome <tsoome@me.com>, 2021-05-25 20:33:18 +0300,12098, zdb dump_history need space one space missing zdb output causing string concatenated fixing 11940 reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed toomas soome tsoome me.com close 12098,,
207,0989d798fa347b87a34607d1fd7b94a1121cf2ad,hristian Schwarz <me@cschwarz.com>, 2021-05-24 22:57:29 +0200,12092, zts remove helper longer applies zfs since slog support always available reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed christian schwarz cschwarz.com close 12092,,
208,f8646c871a422046fba7eb24c0cdfc53b5ffc546,lexander Motin <mav@FreeBSD.org>, 2021-05-24 16:42:45 -0400,12077, freebsd retry ocf enomem error zfs doe expect transient error crypto read counted checksum error write end panic panic random low memory condition retry enomem error ocf wrapper function remove unneeded timeout priority msleep external issue http d30339 reviewed brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mark.maybee delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 12077,,
209,5d1a32a542125e5ed10ef97112a07da242357917,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-10 10:56:53 +0200,12015, linux libshare smb leak share name fix 645fb9cc21 implemented sharing datasets via smb using libshare reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12015,,
210,dd00925e8de33ca490d29b7b30fc8d2a14ab4da3,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-08 15:04:48 +0200,12015, zstreamdump replace link zstream zstreamdump quite bad state wrapper work invoked without sbin path reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12015,,
211,93ef500388db2bf8e85446a3df0b013609cdbd73,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-08 13:17:04 +0200,12015, abuse vfork according posix.1 vfork effect fork except behavior undefined process created vfork either modifies data variable type pid_t used store return value vfork ... call function successfully calling _exit one exec family function three work pure chance maybe blisfully know either way bad idea call vfork unless standard library posix.1 2008 remove entirely reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12015,,
212,5da6353987ccf73c67e9e1c68faa66989b76a583,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-19 14:32:15 +0200,12082, libzfs run_process leak reopen failure reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12082,,
213,7c20ceebdd9ca7ad30dd8035c5550875fd71d0cc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-19 14:04:19 +0200,12082, libzfs run_process reuse line leak line grow wide need glibc start 120 store narrower view also fix leak scenario reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12082,,
214,30dadd5c04be1f88c5fa6ab7f32b7573a9eee981,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-19 13:56:24 +0200,12082, libzfs run_process set o_nonblock line pipe without deadlock child stuck writing pipe stuck waiting child child fill pipe hundred kbish start getting eagains allows either crash ignore used zpool script output short run pair likelihood losing legitimate data relatively low reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12082,,
215,e72383825bbd48524bef19feb9893cdb05107f15,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-21 01:37:38 +0200,12086, raidz_test use async signal safe function signal handler execl glibc 2.24 could allocate called least 1024 argument five errno modification also fine long restore end reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12086,,
216,0b1b66b4735f13d826ece675ea5568a7d3ca316c,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-20 19:02:36 -0400,12087, update tmpfile existence detection linux changed tmpfile signature torvalds linux 6521f89 turn broke have_tmpfile detection configure update macro include new case change signature zpl_tmpfile appropriate reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12060 close 12087,,
217,8fb577ae6da03ed72edca9adad027779e69db146,rian Behlendorf <behlendorf1@llnl.gov>, 2021-05-20 15:05:26 -0700,12061, fix draid sequential resilver silent damage handling change address two distinct scenario possible performing sequential resilver draid pool vdevs contain silent unknown damage circumstance took form device intentionally overwritten zero however could also result device returning incorrect data sequential resilver progress scenario sequential resilver performed draid vdevs online silent damage present vdev resilvered case nothing repaired  rc_error set raid column address updated always mark resilvering column estale sequential resilver scenario multiple column contain silent damage block sequential resilver performed case impossible generate correct data parity unless damaged column sequentially resilvered thus good data used generate parity expected nothing done however need careful make situation worse since verify data actually good without checksum must repair device sequentially resilvered otherwise incorrect repair device previously contained good data could effectively lock damage make reconstruction impossible check added along new test case lastly change update test case representative normal draid replacement operation specifically care scrub run sequential resilver doe find additional block need repair would indicate sequential resilver failed rebuild section one device note also test switched using verify_pool function still check checksum error reviewed mark maybee mark.maybee delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12061,,
218,6ac2d7f76f8b56f0d5869c60c0b49b15018d1a53,auri Tirkkonen <lauri@hacktheplanet.fi>, 2021-05-20 19:03:03 +0300,12064, zfs allow.8 mention bookmark permission reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed lauri tirkkonen lauri close 12064,,
219,adc851d9f83579f31903007e3ce0af24faceb21b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-16 16:18:30 +0200,12042, derivative shellcheck fix header reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
220,9627bdc6970558c9d59e0f9a0a2b4397cd6170e7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-16 21:59:56 +0200,12042, contrib fix obvious shellcheck problem reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
221,359b6cca0f858808790023c5c5a562dcd92cbf43,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-16 14:26:42 +0200,12042, zgenhostid use argument path directly reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
222,6fc3099248f04591d7d7bf05078482f794b38eaa,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 14:02:11 +0200,12042, trim excess shellcheck annotation widen non korn script make shellcheck checked script commitcheck make_gitrev man date paxcheck zfs helper zfs zfs test zimport zloop .sh cmd zed zed.d debug syslog data notify generic notify resilver_finish start scrub scrub_finish notify statechange led statechange notify trim_finish notify zed function .sh history_event zfs list cacher.sh.in cmd zpool zpool.d deps iostat lsblk medium smart upath also check contrib dracut module setup 90zfs export zfs parse zfs zfs needshutdown zfs load key zfs lib module setup mount zfs zfs generator .sh.in cmd zed zed.d pool_import led vdev_attach led resilver_finish notify vdev_clear led .sh contrib initramfs zfsunlock hook zfs.in script local top zfs test zfs test test perf script prefetch_io.sh script common.sh.in contrib bpftrace zfs trace.sh autogen.sh reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
223,2ca77988a5584440b9d322ebb26ab55c730637bf,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 11:55:17 +0200,12042, fix sc2181 outside test reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12042,,
224,1d106ab57a53dced72d0798c62635f11b8242bd1,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-19 23:46:42 -0400,12056, simple change fix building recent environment renamed _fini symmetry suggested ensch reviewed tony nguyen tony.nguyen delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 12059 close 11987 close 12056,,
225,7457b024ba2be2cf742e07239c20a1c3f3fa9c72,lexander Motin <mav@FreeBSD.org>, 2021-05-14 12:13:53 -0400,11966, scale worker thread taskqs number cpu use dynamic taskqs allows reduce number idle thread hardcoded taskqs kind big overkill small system complicating cpu scheduling increasing reorder etc providing real locking benefit needed another side worker thread per kind able overload almost system nowadays example pool several fast ssds sha256 checksum make system barely responsive scrub dedup enabled barely responsive large file deletion address problem patch introduces zti_scale macro alike zti_batch multiple taskqs depending number cpu used place lock scalability needed request ordering much code made create new taskq worker thread small system large cpu core previous good rounding number thread thread per taskq tunable case somebody really want use system power zfs obviously benchmark show small peak performance reduction big really especially system smt use second thread doe give much performance first one also show dramatic latency reduction much smooth user space operation case high cpu usage zfs reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 11966,,
226,6a13add5596b1390fe79b3d1ba94b07283805f73,rian Behlendorf <behlendorf1@llnl.gov>, 2021-05-14 09:11:56 -0700,12043, zts increase redundancy test timeout test updated commit 93c8e91fe additionally verify self healing additional check increased run time occasionally exceed default maximum timeout environment prevent causing failure increase default timeout redundancy test case reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 12043,,
227,5236eafdcdf5e9e4e4d276f3c91391cdf5d97589,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-14 06:47:53 +0200,12017, rewrite hook produce leaner image fail zdb exist properly handle hostnameless system mention crypto module reason add useless empty executable hope eight year old merged builtins copy also optimize checkbashisms filter spawn one awks instead one per regular file remove initramfs hook therefrom due command false positive reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 12017,,
228,fce29d6aa4b4067cd5f0d6cd7481cce469dca3e8,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2021-05-14 00:46:14 -0400,12034, fix dmu_recv_stream test resumable use check stream resumable reviewed matthew ahrens mahrens delphix.com reviewed alek pinchuk apinchuk axcient.com reviewed ryan moeller ryan ixsystems.com signed paul zuchowski pzuchowski datto.com close 12034,,
229,210231ede0ecef5aa2c49db0366742bafaecde2c,yan Moeller <ryan@iXsystems.com>, 2021-04-29 03:27:57 +0000,11997, freebsd implement xattr freebsd historically cared xattr property always treated xattr xattr xattrs stored file hidden xattr directory xattr xattrs stored system attribute get cached nvlists xattr operation make xattrs simpler efficient manipulate freebsd need implement xattr operation feature parity linux ensure xattrs accessible migrated replicated linux following example set linux refactor existing extattr vnops split part handling dir style xattrs add corresponding handling part reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11997,,
230,d86debf5762c0d18574af67407f4c99fd9aaec3a,yan Moeller <ryan@iXsystems.com>, 2021-04-28 19:19:28 +0000,11997, freebsd use set_error trace xattr name error reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11997,,
231,099ca8186b071ad6db4f8d5fab66baa1be8877b0,yan Moeller <ryan@iXsystems.com>, 2021-04-28 18:58:30 +0000,11997, freebsd force xattr mount option kernel use xattr property default overridden mount option reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11997,,
232,da124ad8ec1b3b0f18057a6b0ff3160ca6053800,cott Colby <scolby33@users.noreply.github.com>, 2021-05-13 13:02:24 -0400,12012, zed add pushover notifier add zed functions.sh along necessary configuration variable zed.rc reviewed brian behlendorf behlendorf1 llnl.gov reviewed ahelenia ziemiaå ska nabijaczleweli signed scott colby scott scolby.com close 12012,,
233,6217656da33c0920cb9f213742fd51dd215bc455,rian Behlendorf <behlendorf1@llnl.gov>, 2021-05-13 10:00:17 -0700,12033, revert fix raw sends encrypted datasets copying back snapshot commit d1d4769 take account encryption key version decide local_mac could zeroed however could lead failure mounting encrypted datasets created intermediate version zfs encryption available master major release order prevent situation revert d1d4769 pending comprehensive fix address mount failure case reviewed george amanakis gamanakis gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 11294 issue 12025 issue 12300 close 12033,,
234,618a65cd7a77b0b5a27ccdd3e0ff4f80cd14404f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-10 17:24:59 +0200,12017, widen mancheck target page fix mandoc man man8 zfs mount generator.8.in 188 error skipping end block open mandoc man man8 error skipping unknown macro .lp mandoc man man8 error inserting missing end block break mandoc man man8 zfs wait.8 error skipping end block open mandoc man man8 zfs program.8 460 error inserting missing end block break mandoc man man8 zfs mount generator.8 188 error skipping end block open mandoc man man8 zstream.8 error skipping unknown macro .lp mandoc man man8 zstream.8 107 error inserting missing end block break mandoc man man8 zstream.8 107 error inserting missing end block break make makefile 1529 mancheck error reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 12017,,
235,37086897b06a070d957226dbf860b4673906dc70,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-13 06:21:35 +0200,11956, libzfs add keylocation http backed fetch libcurl add support http http keylocation properly allow encryption key fetched specified url reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli issue 9543 close 9947 close 11956,,
236,7d07d1be39f4bc36930e304e36e95b712e379a5e,rian Behlendorf <behlendorf1@llnl.gov>, 2021-05-11 19:55:12 -0700,12023, zts add known exception following seven test observed occasionally fail testing commit add list known somewhat flaky test case reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed tony nguyen tony.nguyen delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12023,,
237,48c7b0e444591ca5e0199e266e79ecff53e81ee6,oleman Kane <ckane@colemankane.org>, 2021-05-11 22:53:02 -0400,11977, linux 5.13 compat bdevops revalidate_disk removed linux kernel commit remove revalidate_disk handler struct caused regression commit eliminates call assignment static handler assignment code configure identifies kernel support api handler reviewed colin ian king colin.king canonical.com reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11967 close 11977,,
238,4704be2879e660c0128839f466eaeb61c6c19136,yan Moeller <ryan@iXsystems.com>, 2021-05-11 01:02:25 -0400,11972, remove unimplemented virus scanning hook reviewed adam moss yotes.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed ryan moeller ryan ixsystems.com close 11972,,
239,38c6d6ceddff5a6e15c316c79ab98eac1f2749cd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-10 20:00:15 +0200,11996, module zfs remove zfs_zevent_cols committed multiple printk per line without properly continuing single event could easily fragmented across thirty line making useless direct application zfs_zevent_cols exists purely wrap output niche supposed fill better served something akin syslog zedlet reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 7082 close 11996,,
240,2babd200454eff922ba2cae23a20db2308ec8059,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 12:30:16 +0200,11993, libzfs zfs_asprintf return undefined pointer reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
241,87b671f3ace5ab47fd5449279374051cfd8856b4,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 12:11:30 +0200,11993, libzfsbootenv free undefined pointer reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
242,c493943404c684b5686e0e782f874448253b31c5,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 12:13:20 +0200,11993, free undefined pointer reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
243,8dfb9e57c7364b2fbf1a24914a9e8b78de349005,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 12:01:13 +0200,11993," leak dev path also always free tmp2 end  nabijaczleweli tarta uwu valgrind leak check full blergh 8947 memcheck memory error detector 8947 using valgrind 3.14.0 libvex 8947 command blergh 8947 null 8947 8947 heap summary 8947 use exit byte block 8947 total heap usage allocs free 1,147 byte allocated 8947 8947 byte block definitely lost loss record 8947 0x483577f malloc 299 8947 0x48d74b7 vasprintf vasprintf.c 8947 0x48b7833 asprintf asprintf.c 8947 0x401258 191 8947 0x401482 main blergh.c 107 8947 8947 leak summary 8947 definitely lost byte block 8947 indirectly lost byte block 8947 possibly lost byte block 8947 still reachable byte block 8947 suppressed byte block 8947 8947 count detected suppressed error rerun 8947 error summary error context suppressed nabijaczleweli tarta uwu sed 191p tmpsize asprintf tmp1 sys block device dev_name  nabijaczleweli tarta uwu valgrind leak check full blergh 9512 memcheck memory error detector 9512 using valgrind 3.14.0 libvex 9512 command blergh 9512 null 9512 9512 heap summary 9512 use exit byte block 9512 total heap usage allocs free 1,147 byte allocated 9512 9512 heap block freed leak possible 9512 9512 count detected suppressed error rerun 9512 error summary error context suppressed reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993",,
244,ca46fa602b0d09bde851dc1eb85d689051089839,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 11:36:02 +0200,11993, zpool vdev_run_cmd free undefined pointer reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
245,68ebbd9a935db060f9558c2aa8883a826ba8a96c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-30 20:49:39 +0200,11993, libzfs free undefined pointer reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
246,8bc357ba9285f0a151d458409d23916b3062d6dc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-29 22:21:41 +0200,11993, libzfs open feature file cloexec bonus also pass open flag open flag instead mode worked accident o_rdonly correctly detects failed map prefaults entire file since always writing every page reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11993,,
247,36e8abee95576de588802afadd2c44c674e00acb,lliliti <illiliti@protonmail.com>, 2021-05-08 15:58:26 +0000,12004, copy builtin posix conformance commits contains change allow running copy builtin without bash minor improvement changed shebang bin added option set globally disable unneeded globbing replaced echo command within add_after printf alternative avoid possible issue option nee dropped non portable superfluous readlink command replaced superfluous true command builtin alternative replaced non portable recursive option command alternative dropped non portable local keyword reviewed brian behlendorf behlendorf1 llnl.gov signed illiliti illiliti protonmail.com close 12004,,
248,93c8e91fe7f5c55612131db64297106d7e5d1cdd,rian Behlendorf <behlendorf1@llnl.gov>, 2021-05-08 08:57:25 -0700,12010, fix draid self healing short column draid performs normal read operation data column raid map read disk enough information calculate checksum verify return needed data application event checksum failure additional parity empty column must read since required parity reconstruction reading additional column handled call expand raid_map_t submit missing column work correctly fails account short column data column padded empty skip sector end since empty sector needed normal read read column first read disk however like parity empty column skip sector needed perform reconstruction fix mark short column never read clearing rc_tried flag expanding raid_map_t cause entire column read disk event checksum failure allowing self healing functionality repair block note effect self healing feature scrubbing pool parity data empty column read initially verify content furthermore block contain short column would effected memory backing skip sector already zeroed change extends existing test case verify self healing well resilver scrub applies test case draid slightly modified version test script called unused variable combrec also removed test case reviewed matthew ahrens mahrens delphix.com reviewed mark maybee mark.maybee delphix.com signed brian behlendorf behlendorf1 llnl.gov close 12010,,
249,a27ab6d43b5f62db5d9093702a69b933fb5f4515,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 22:11:02 +0200,11956, dracut module setup mainly shellcheck cleanup reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11956,,
250,1966e959cab25d6e535eeb88e0b2ad9590881eb7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-03 21:21:21 +0200,11956, replace zol openzfs applicable afterward git grep zol match readme.md zol site http zfsonlinux.org correct etc default zfs.in zol userland configuration changing would induce needle upgrade check user modified configuration updated next time default change module zfs dmu_send.c zol 0.7 doe handle ... 0.7 zol fair enough reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11956,,
251,8c0991e813a8a8916ca590b5113b5bc9f00a7791,yan Moeller <ryan@iXsystems.com>, 2021-05-03 17:56:08 +0000,11994, freebsd remove freebsd ifdef code reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11994,,
252,0dd7da9d7a333ea9ee72b744c2e9853e44c96773,yan Moeller <ryan@iXsystems.com>, 2021-05-03 17:51:03 +0000,11994, clean use zfs_log_create zfs_dir zfs_log_create return void reason cast return value void call site reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11994,,
253,3bd6b0e05acfd9e79b095bacb32789c1821d26a8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-05-08 00:10:16 +0200,11965, zed protect wait4 fork race global pid table easily triggered adding sleep wait4 pid starved system reaper thread would wait child entry appeared letting old entry accumulate invoking debug.sh eid 3021 pid 391 finished null eid pid 391 time 0.002432s exit invoking syslog.sh eid 3021 pid 336 finished null eid pid 336 time 0.002432s exit invoking history_event zfs list cacher.sh eid 3021 pid 347 invoking debug.sh eid 3022 pid 349 finished history_event zfs list cacher.sh eid 3021 pid 347 time 0.001669s exit finished null eid pid 349 time 0.002404s exit invoking syslog.sh eid 3022 pid 370 finished null eid pid 370 time 0.002427s exit invoking history_event zfs list cacher.sh eid 3022 pid 391 avl_find tree new_node null assert module avl avl.c 641 avl_add thread zed received signal sigabrt aborted employing wider lock atomise wait remove fork add slowing reaper thread cause zombie accumulate get reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11963 close 11965,,
254,c074a7de1366656f77635da9db02cf5c09798cae,lyssa Ross <hi@alyssa.is>, 2021-05-07 22:08:16 +0000,11995, return required size encode_fh size small quoting linux exportfs.h encode_fh return fileid_type success error return 255 space needed encode greater max_len byte error max_len contains minimum size byte unit needed encode file handle zfs setting max_len case handle small result example work zfs zfsctl_fid set max_len called fid small give zfs_fid behavior well fix quite easy handle small use zero size fid instead handle tested running normal file directory .zfs directory snapshot thanks puck meerburg puck puckipedia.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed alyssa ross alyssa.is close 11995,,
255,4fb9e5638b31bc4b187607601d2ab824257e20d2,lexander Motin <mav@FreeBSD.org>, 2021-05-07 18:07:03 -0400,11998, simplify fix dnode_move dn_zfetch previous code tried keep prefetch stream moving dnode least updating per stream zs_fetchback pointer causing use free next access instead see much easier cleaner drop old prefetch state start new scratch reviewed matthew ahrens mahrens delphix.com reviewed igor kozhukhov igor dilos.org signed alexander motin mav freebsd.org sponsored ixsystems inc close 11936 close 11998,,
256,610cb4fb8c6e8c354d3796e98932e79d45d057a4,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-05-06 11:24:56 -0700,11999, undocumented libzfs api change broke zfs list openzfs doe permit breaking change libzfs api avoid change reasonably possible take step mitigate impact consumer change necessary commit e4288a8397bb1f made libzfs api change especially difficult consumer change function signature behavior therefore consumer notice change compile time also api change incompletely incorrectly documented commit message mention zfs_get_prop sic caller impacted zfs_prop_get  always call src null assumes filesystem mounted mean e.g always return documentation say preserve previous behavior caller initialize src zprop_src_none caller changed however existing behavior actually preserved initializing src zprop_src_all none code comment zfs_prop_get say src ... null treated zprop_src_all however code actually treat null zprop_src_none i.e zfs_prop_get src null assumes filesystem mounted several existing call use src null impacted api change noticeably used zfs list assumes filesystems mounted example zfs list name mounted previously indicated whether filesystem mounted always incorrectly indicates filesystem mounted mounted similarly property set mount time ignored e.g zfs list name atime may display incorrect value set mount time address problem commit reverts commit e4288a8397bb1f zfs get lookup mount option using local reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11999,,
257,b1e44cdcea09db50c887c2b301e1af1fae1b5aa0,yan Moeller <ryan@iXsystems.com>, 2021-05-06 12:45:16 -0400,12003, freebsd initialize destroy z_lock z_lock used shared code protecting projid scantime exercise path much freebsd lucky enough issue uninitialized lock far reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 12003,,
258,1f77b58789e209e22bc85e296ff291da8a3d674c,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-05-06 00:16:51 -0400,11986, updated documentation accurate changed default specified added clarification interaction zfs_flags reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed rich ercolani rincebrain gmail.com close 11984 close 11986,,
259,c903a756ac5ff151b99080f60eead22fc6302f0f,yan Moeller <ryan@iXsystems.com>, 2021-04-30 19:39:07 -0400,11974, miscellaneous code cleanup remove extra whitespace use pointer typed asserts linux znode cache destructor info debugging simplify couple conversion inode znode already znode reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11974,,
260,e4efb7095093be70acd8f347e384c803ec2e0886,yan Moeller <ryan@iXsystems.com>, 2021-04-30 19:36:10 -0400,11971, freebsd clean assert verify use module convert use assert assert0 assert3u assert3s assert3p likewise verify case ended making sense change code verify nvlist operation converted use fnvlist instead one place changed internal struct member int boolean_t match use asserts combined multiple check single assert split separate asserts make apparent check fails reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11971,,
261,ec4f330816134868fcf82166a3f9bfa5208f0b9c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-27 17:27:33 +0200,11954, zed.d zed functions.sh fix dash reviewed tony hutter hutter2 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11935 close 11954,,
262,208675a09b7f7a030d1b3d38c0eb1860e609ca6b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-23 22:41:47 +0200,11935, zed.d history_event zfs list cacher.sh grep snapshot detection reviewed tony hutter hutter2 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11935,,
263,8dca000040bd82cebd2c184d219836b7884ddf56,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-23 22:41:19 +0200,11935, zed.d notify.sh use mktemp instead generating temp path manually reviewed tony hutter hutter2 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11935,,
264,71def603cd984780db45cf6ca93a3f24548d4eac,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-23 22:27:50 +0200,11935, zed.d pool_import led.sh fix current zpool script also minor clean folding state_to_val case unrolling lesser available seq number ignoring vdev state care documentation comment signed tony hutter hutter2 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11934 close 11935,,
265,1a7d7182ac2cf5dd00cdf8667d996126908b7294,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-29 10:40:39 +0200,11935, libzutil fix return device example would happily return dev null dev sda1 reviewed tony hutter hutter2 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11935,,
266,ccb46cab50f56238102cffc344cc2fbfc5fe908a,yan Moeller <ryan@iXsystems.com>, 2021-04-30 10:37:02 -0400,11970, zts fix xattr_002_neg passing soon reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11970,,
267,801c76149bab8598c3cd1a6689e1893ec2f91deb,yan Moeller <ryan@iXsystems.com>, 2021-04-30 10:34:53 -0400,11973, freebsd prune unneeded definition is_xattrdir never used v_count used two place one immediately followed use real name v_usecount reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11973,,
268,6f4e132fece3343ae62c3b0f79450fef2504f9cd,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-30 16:31:22 +0200,11976, zts cli_root zfs_load key add separate key file reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11956 close 11976,,
269,17b83525f547a571dcd7d78e46913f6ed405a64f,oomas Soome <tsoome@me.com>, 2021-04-30 02:44:07 +0300,11940, zdb dump_history improved recognize history record instead use logic zpool_main.c reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 11940,,
270,e4288a8397bb1f9df763c08bf93260062da8173a,lan Somers <asomers@gmail.com>, 2021-04-29 15:19:44 -0600,11955, zfs get lookup mount option using local looking mount option expensive server many mounted file system zfs get option doe include temporary mount list never used commit optimizes case breaking commit libzfs caller zfs_get_prop required initialize src preserve existing behavior initialize zprop_src_none sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11955,,
271,bc9c7265ae01b970a0353cc390d4e2fb08dc7194,rshad Hussain <arshad.hussain@aeoncomputing.com>, 2021-04-30 02:28:49 +0530,11959, vdev_id variable getting expanded map_slot function map_slot variable passed args getting properly substituted expanded patch fix substitution issue reviewed niklas edmundsson nikke acc.umu.se reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed arshad hussain arshad.hussain close 11951 close 11959,,
272,056a658dee00cab7cd42e6146f3fa0690f07c93e,athaniel Wesley Filardo <nwfilardo@gmail.com>, 2021-04-28 01:48:11 +0100,11930, vdev_mirror scrub resilver device read ensures accumulate checksum error offline unavailable device importantly mean needlessly create dtl entry offline device already date consider way mirror disk always online always empty dtl occasionally online resilver offline dtl effectively appended due spurious zios even resilver empty dtl zios land flag error flagged error cause see issue zio_type_write repair zio inherits includes flag zio fails eventually zio_done get hand call see error zio ... speculative due eio rather enxio since device closed io_vd null specifically offline leaf device write txg rather read block physical birth txg asserted call vdev_dtl_dirty offline vdev resilver offline story get replayed dtl appended fact one doe need permanently broken mirror scenario induce badness breaking mirror dtls scrubbing create dtls offline device dtls persist entire mirror reassembled duration resilver incidentally consider device good data source good data case read failure reviewed mark maybee mark.maybee delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed nathaniel wesley filardo nwfilardo gmail.com close 11930,,
273,919714554b99229b8c1804256443f2cd89e7e5c0,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-27 17:45:40 -0700,11931, zfs.spec.in remove post ldconfig scriptlets fedora packaging guideline changed ldconfig longer called either post postun scriptlets instead new compatibility macro ldconfig_post ldconfig_postun used since currently support fedora newer could drop post postun scriptlets entirely according guideline however since also use spec file centos rhel convenient call macro available starting centos rhel centos rhel must still call ldconfig traditional way http wiki change reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 11931,,
274,09131144b70ad8b20d00573da7a6c32bff8b4c13,oomas Soome <tsoome@me.com>, 2021-04-27 18:33:37 +0300,11932, zdb assert issue debug defined zdb built debug mode assert macro eliminated leave vim defined used gcc warning checkpoint spacemap validation loop nothing reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 11932,,
275,b1f7341203080e6387df49e0da6f86272ea49bda,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-27 08:27:03 -0700,11949, zts add known exception  test case known occasionally fail add list known possible failure reference appropriate issue tracker reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11949,,
276,a69356cf26d585ecc71e391439caf8becb5c43d2,artin MatuÅ¡ka <mm@FreeBSD.org>, 2021-04-27 17:25:48 +0200,11947, drop right reserved file trasz freebsd.org obeys change freebsd freebsd src bce7ee9d4 external issue http d26980 reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed martin matuska freebsd.org close 11947,,
277,b0269cd8ced242e66afc4fa856d62be29bb5a4ff,rawn <Insane.Prawny@gmail.com>, 2021-04-27 02:23:51 +0200,11864, receive fail inheriting property wrong dataset type receiving datasets blanket inheriting property like zfs receive mountpoint generally desirable e.g avoid unexpected mount backup host currently fail receive zvols due mountpoint property applicable filesystems limitation currently requires operator special case mind tool zvols change get rid limitation inherit spiting dataset type handling warning inheriting error overriding reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 11416 close 11840 close 11864,,
278,f172f759b913ca1d0bbee02c6edd8d92d213480d,ateusz Guzik <mjguzik@gmail.com>, 2021-04-26 21:44:40 +0200,11926, freebsd damage control racing lookup face mkdir rmdir external issue http d29769 reviewed alexander motin mav freebsd.org reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11926,,
279,0375465536c9790a7fb3e1ac94412fef91076e3f,omain Dolbeau <romain@dolbeau.org>, 2021-04-26 21:42:42 +0200,11938, fix avx512bw fletcher code avx512 machine introduce specific valid function avx512f avx512bw instead checking avx512f reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed romain dolbeau romain dolbeau.org close 11937 close 11938,,
280,f9bece92e24bbb679232085e41c4ddf5b74ccaa4,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-23 02:49:21 +0200,11928, zed protect wait4 fork race launched process tree soon wait4 return fork immediately return pid race lock try add new duplicate pid asserts locking wait4 ensure given unfortunate scheduling locked spawner pop process reaper afterward added move reaper idle child wait4 pause locking duration single syscall child running child case impact one two syscalls depending state per loop reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11924 close 11928,,
281,60ffc1c460e4cdf3c3ca12c8840fd0675a98ed0d,aniel Stevenson <bot@dstev.net>, 2021-04-20 12:16:00 -0500,11918, fixed incorrect man page reference zfsprops section directed reader zpool documentation special allocation class actually documented zpoolconcepts reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed daniel stevenson daniel dstev.net close 11918,,
282,44287ffa0d5d6f23b4dc082b67ea5b7c5a465d8e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-19 19:52:44 +0200,11915, etc systemd zfs mount generator fail cached pool fslist exists empty generator fails sort read etc zfs zfs list.cache file directory reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11915,,
283,dc3a56d38bf300cf15f13d5bd4b116ec387c60e0,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-16 00:40:22 +0200,11886, libshare nfs commonify reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11886,,
284,62866fc96cab95516cd9625839da6a75599b7931,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 20:12:50 +0200,11886, freebsd libshare nfs make nfs_is_shared thread safe reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11886,,
285,8357bbff1fdf99554d6a296dee4841e41d87b7c9,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 19:42:07 +0200,11886, libshare nfs commonify nfs_ init fini _tmpfile also open temp file cloexec reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11886,,
286,a3d387b31de44e2069c00bed18491e032c7424dc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 19:37:48 +0200,11886, libshare nfs commonify nfs_exports_ lock file_header reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11886,,
287,0f4d83117a6baad3743a1ada469f296a3e7ae3d0,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 19:27:43 +0200,11886, libshare nfs leak nfs_lock_fd lock fails reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ahelenia ziemiaå ska nabijaczleweli close 11886,,
288,fef8bd41fc178d7212957b611c9bc81fe10cb63e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-19 07:13:24 +0200,11904, libspl implement atomics term atomics replaces generic libspl atomic.c atomics implementation one based builtin gcc atomics functionality added experimental feature gcc 4.4. today even centos ship gcc 4.8 default compiler make default furthermore builtin atomics good better hand rolled implementation reasonable drop custom code reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11904,,
289,50d9ff93dfdb5052e0466729d1d2e1e627a56080,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-18 21:58:36 -0700,11906, zts improve redundancy test script add additional logging provide information test failed including logging individual command content difference record file failure updated get_vdevs properly exclude top level vdevs including raidz3 draid replaced gnudd remaining place test suite gnudd used needed refill_test_env function expects pool first argument never set pool variable fill test pool capacity instead help speed test fix calculation mindevsize minvdevsize fix damage_devs overwrites almost device guaranteed damage filesystem block use log_mustnot check pool healthy since return value may misinterpreted perform normal conditional check log failure reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11906,,
290,7c9702e2a7c04b0acf5fd51274daf25bd286c920,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2021-04-17 22:11:18 +0200,11914, icp silence objtool stack pointer realignment warning objtool requires use drap register aligning stack since drap register gcc concept notoriously low register crypto code worth effort mimic gcc generated stack realignment simply silence warning adding offending object file  reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 6950 close 11914,,
291,a31ac10185e60f4806139e7c2b02afada12ecf03,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-16 20:03:20 +0200,11911, libzfs refresh property cache inheriting userprop match happens inheriting system property consider following program int main void zhp libzfs_init void dataset zfs_open zhp zest __test printf dump_nvlist dataset printf dataset test printf dump_nvlist dataset printf dataset printf refreshed dump_nvlist dataset printf  output zfs set test hehe zest __test a.out test value hehe source zest __test test value hehe source zest __test refreshed compared output zfs set test hehe zest __test a.out test value hehe source zest __test  refreshed reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11064 close 11911,,
292,bfe8b9fff3888828d92db1baf0c9e5982fd45842,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-16 17:52:47 +0200,11031, libzfs mark prompt raw retriable reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11911 close 11031,,
293,309c32c954122d75eefd484f891bd041bf6cd845,ateusz Guzik <mjguzik@gmail.com>, 2021-04-17 21:36:04 +0200,11877, combine zio cache possible deduplicates set cache use allocation size memory saving fluctuate lot one sample result freebsd running make buildworld saving 180mb ram reduced page count associated zio cache reviewed brian behlendorf behlendorf1 llnl.gov signed mateusz guzik mjguzik gmail.com close 11877,,
294,c682b67827f8945f62804e6f14a8d8f26618366a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-14 17:30:59 +0200,11898, contrib dracut zfs rollback snapshot bootfs use sbindir reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11898,,
295,ac541438a2fc5cf83a0fd7577691f6d68720cd5d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 23:23:15 +0200,11898, contrib properly mount root child space reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11898,,
296,d8ced6613d0fd508f43b6d2e4bb1d43c2330d8d2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 22:41:10 +0200,11898, contrib dracut mount essential datasets root partly mirror script doe though mount child recursively etc usr lib bin essential present successfully invoke real init mount everything else might need right order following extreme case set boot issue zoot zfs relatime xattr noacl etc zoot etc zfs relatime xattr noacl usr zoot usr zfs relatime xattr noacl usr local zoot usr local zfs relatime xattr noacl var zoot var zfs relatime xattr noacl var lib zoot var lib zfs relatime xattr noacl var log zoot var log zfs relatime xattr posixacl var cache zoot var cache zfs relatime xattr noacl var tmp zoot var tmp zfs relatime xattr noacl home zoot home zfs relatime xattr noacl home nab zoot home nab zfs relatime xattr noacl boot zoot boot zfs relatime xattr noacl root zoot home root zfs relatime xattr noacl opt zoot opt zfs relatime xattr noacl srv zoot srv zfs relatime xattr noacl reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11898,,
297,51bc60e5828808296bd7bc7f3197ef574029b371,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 22:37:59 +0200,11898, contrib dracut generator log kmsg debug set cmdline debug also used systemd really reason generator write much garbage default reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11898,,
298,626a792bb37231d1257e5948efa69466f9840f60,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 22:31:26 +0200,11898, contrib dracut spill device name across multiple line reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11898,,
299,a9c93ac533488b78262e86821f04a22cac8be76d,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2021-04-17 00:11:26 +0200,11733, icp add missing stack frame info sha asm file since assembly routine calculating sha checksum use standard stack layout cfi directive needed unroll stack reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 11733,,
300,f2286383d017856a276e6ea73f2a61f85b99df35,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2021-04-16 14:00:53 -0400,11896, fix crash zio_done error reporting fix null pointer dereference reporting checksum error gang block zio_done reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 11872 close 11896,,
301,d92af6fc8d8274180c1f4afd10585893291324c5,yan Moeller <ryan@iXsystems.com>, 2021-04-15 20:43:07 -0400,11905, zfs send restore sorting flag 11710 flag zfs send sorted restore order bump date reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11905,,
302,23b6f17abb83b4c9cedd26c9a80d0830373cd16f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 16:29:00 +0200,11879, linux spl proc use global table_ min max value instead local one reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11879,,
303,a0978d15aa9dae8a78b403ed765c1232d86e2b50,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 01:51:04 +0200,11879, linux libspl gethostid read proc sys kernel spl hostid simplify fix set via aforementioned sysctl simplifies code bit kernel user space must agree  reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11879,,
304,7de4c88b39473f358add601e8c227ca9002b1bee,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-11 01:18:40 +0200,11879, linux spl base proc_dohostid proc_dostring fix proc sys kernel spl hostid kernel mainline commit sysctl pas kernel pointer proc_handler 5.7 rc1 access_ok check copy_to_user would always fail userspace read writes would fail einval proc_dostring strip final new line simple_strtoul actually need back trimmed string writing 012345678 still allowed 012345678zupsko alters happens invalid value written previously get set ever simple_strtoul returned probably thereby resetting default doe nothing reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11878 close 11879,,
305,2d14207c98b485385a97aa6669c2723eed53bcbb,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-10 03:28:53 +0200,11879, libspl lift common bit getexecname merge actual implementation getexecname slightly clean freebsd one reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11879,,
306,375bdb2b20ec293658e9e9cee6c70d9cfc1d3fbe,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-10 03:27:26 +0200,11879, module zfs zvol.c purge unused reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11879,,
307,08795ab8d35db2b7bdc8849081aa35a8f778e27b,itendra Patidar <53164267+jsai20@users.noreply.github.com>, 2021-04-16 02:19:27 +0530,11803, zfs optimization limit prefetch traversal code doe visit block recursively indirect non block size 128k could contain 1024 block pointer 128 byte case full traverse incremental traverse block modified could traverse large number block pointed indirect traversal code doe issue prefetch block traversed indirect could result large number async read queued vdev queue account prefetch issued block pointed indirect limit max prefetch one module param limit prefetch traversing indirect block local counter prefetched local counter account number prefetch done pidx index next prefetch issued ptidx index next prefetch triggered keep ptidx somewhere middle block prefetched block prefetch read get enough time window demand read issued reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed jitendra patidar nutanix.com close 11802 close 11803,,
308,86418090d731b7f98d6b9981d29a9c905719dc4d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-12 14:08:33 +0200,11891, zts add zed_fd_spill verify fds zedlets inherit reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11891,,
309,aa6a14c0d5c388d38720024561679ae4f7d5e67d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-12 14:07:14 +0200,11891, zed set o_cloexec persistent fds remove closefrom pre exec also dup dev null stdio daemonised reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11891,,
310,414f7249dc32a579060441a644387a58e91d300a,aul Dagnelie <paulcd2000@gmail.com>, 2021-04-15 13:34:35 -0700,11801, add sigstop sigtstp handling issig change add sigstop sigtstp handling issig function mirror behavior solaris way long running kernel task stopped appropriate signal note ctrl command line return control tty shell tty handling done separately stopping process future work people feel necessary addition reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com issue 810 issue 10843 close 11801,,
311,c95c5176b6a38ed5e84bcbb621e99b2d8599fb07,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-15 08:53:08 -0700,11902, fix make checkbashisms warning awk command used checkbashisms target incorrectly add escape character character result following warning character need escaped awk cmd line warning regexp escape sequence known regexp operator awk cmd line warning regexp escape sequence known regexp operator remove unneeded escape character valid escape sequence http www.gnu.org software gawk manual html_node escape sequences.html reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11902,,
312,96904d879cc0a8ec3485806150a7e0311aa907bd,uri Pankov <82001006+yuripv@users.noreply.github.com>, 2021-04-14 19:02:16 +0300,11899, fix vdev health padding zpool list incorrectly right instead left pad health string taken care printing property value reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed yuri pankov yuripv freebsd.org close 11899,,
313,3e660534eab18d05de0dfca49e4a5e8c27e2c9af,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-13 16:33:06 -0700,11895, obsolete earlier package due version bump follow d5ef91af add missing obsoletes libzfs devel package add comment zfs.spec file reminder previous version package marked obsolete reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 11844 close 11895,,
314,d197a150b4fd7e906440c0b6ac820c9a96a8ea73,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 13:00:35 +0200,11868, libzfs get rid unused libzfs_handle libzfs_ storeerr chassis_id reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11868,,
315,533527725bf3fa72b8feb61993d1ed0d6e5672dc,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-09 00:44:23 +0200,11868, libzfs get rid libzfs_handle libzfs_mnttab user freopen even non user point open mtab needed understand solaris getextmntent correctly non user freopen likely odd twisted vestigial tail got completely different calling convention caching semantics platform support reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11868,,
316,74e48f470e8190ed64bbea020e6535f69e17c1a8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-09 00:42:03 +0200,11868, linux libspl getextmntent leak mnttab file reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11868,,
317,b3530c4262275d6a6419a259b2f58c3c12664ea6,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-13 06:26:55 +0200,11875, libzfs zfs_mount_at load key encryption root ms_crypt work encryption root zfs mount would fail encounter datasets sorted encroots trigger truncate 40g tmp test dev urandom tmp 128 count status none zpool create encryption keylocation file tmp keyformat passphrase test tmp test zfs create mountpoint test zfs create mountpoint test zfs umount test zfs unload key test zfs mount final mount errored key load error key must loaded encryption root test test key load error key must loaded encryption root test test test mounted technically break libzfs api previous behavior decidedly bug reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11870 close 11875,,
318,93f81eb7211becfa2acccac640e7f8c92fd76e0d,ateusz Guzik <mjguzik@gmail.com>, 2021-04-12 20:01:46 +0200,11881, freebsd use available fix issue zfs used along filesystems external issue http src commit reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11881,,
319,5ad86e973ce41b9ba94b5103f83a3ef189f60c78,ateusz Guzik <mjguzik@gmail.com>, 2021-04-12 19:59:57 +0200,11884, freebsd add missing seqc write begin end around happens trip assert doe matter correctness time done future proofing reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11884,,
320,d8c09f3fccd38fef104f6250e6483f0175bee329,ateusz Guzik <mjguzik@gmail.com>, 2021-04-12 19:59:22 +0200,11883, freebsd add support lockless symlink lookup reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11883,,
321,53e9540e41d5225efae9a3ed86778e49268481d8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-09 03:26:45 +0200,11868, .gitmodules link openzfs github repository update test image link reference openzfs github repository reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli issue 11868,,
322,ee6615e07a8bb68d81d23e06421f4b0235b7f2a7,rawn <Insane.Prawny@gmail.com>, 2021-04-12 18:35:55 +0200,11862, cmd zfs receive allow dry run check property args zfs recv doe report error could code bail receive dry run mode came little early skipping validation cmdprops recv among others move check enable additional check reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 11862,,
323,722b7f9a4c8f1051e624c88160d9ff7e2fbdf6bb,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-12 18:32:43 +0200,11873, libuutil purge unused function remove vestigial uu_open_tmp problem implementation many primary one tmppathfmt macro unused always searching around user lead earlier import identical file i.a apple repository doe patch gethrtime give copyright date 2007 midnightbsd one 2008 searching illumos gate uu_open_tmp appears current head three time header libuutil mapfile abi implementation slowly grows eight occurrence one move back root opensolaris launch commit header implementation twice libuutil spec abi twice multilib non multilib path libuutil.so i386 sparc binary abis 2005 file abandonware even dead code situation similar uu_dprintf family function uu_dump nothing accessibly recorded history ever used reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11873,,
324,e086db16568e2cb8f484325481430aafd414d913,olm <colm@tuatha.org>, 2021-04-12 17:08:56 +0100,11861, improvement compatibility property several improvement operation compatibility property improved handling unrecognized feature change way unrecognized feature compatibility file handled invalid feature file usr share zfs compatibility.d get warning may refer future feature yet library invalid feature file etc zfs compatibility.d get error presumed refer current system improved error reporting note slight abi change better error reporting compatibility legacy inhibits zpool upgrade operation detect feature enabled outside current compatibility set zpool set compatibility foo print warning zpool set feature xxx enabled error zpool status indicate state reviewed brian behlendorf behlendorf1 llnl.gov signed colm buckley colm tuatha.org close 11861,,
325,888700bc6b4e673af3b90e7529a313573c4cc5b1,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-11 21:49:13 -0700,11869, zts fix test case observed required obsolete byte mapping high threshold test resulting condensing never triggered test failure prevent failure make existing tuning available obsolete percentage reduced test reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11869,,
326,4ef03d077cb47ad0bc499ab6c6a6580ee5152a8a,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-11 17:03:55 -0700,11710, update libzfs.abi zfs_send change commit 099fa7e4 intentionally modified libzfs abi however failed include update libzfs.abi file commit resolve make checkabi warning due omission signed brian behlendorf behlendorf1 llnl.gov close 11710,,
327,458f82319a745f08558d28974529edd252540d0d,stef <pstef@users.noreply.github.com>, 2021-04-12 01:35:07 +0200,11882, balance parenthesis parameter description reviewed brian behlendorf behlendorf1 llnl.gov signed piotr paweå stefaniak pstef freebsd.org close 11882,,
328,ea3cd8e420c9395ac57e991ff89631803b67ccea,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-11 15:55:38 -0700,11890, zts add known exception fault l2arc alloc_class test case entirely reliable may occasionally fail resulting false positive add test known list possible failure made 100 reliable reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11890,,
329,10b575d04cda376489f0102c36bb59e8edbfc186,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-08 22:17:38 +0200,11866, lib set o_cloexec fds found git grep open setmntent pipe2 grep zfs zpool lzc_re pidfile_ open freebsd pidfile_open say nothing flag file open anything anyway implementation doe open file o_cloexec consider output zpool.d medium appended pid proc pid dev tty sbin zpool iostat medium lrwx dev pipe 3278500 dev null lrwx dev zfs proc 31895 mount lrwx dev zfs usr lib zfs linux zpool.d medium  zpool iostat vendor upath iostat medium lrwx dev pipe 3279887 dev null usr lib zfs linux zpool.d medium reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
330,92ffd87aafd2cf35f82acec01513e16e9ed4edd6,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-10 00:00:43 +0100,11866, libzfs _core set o_cloexec persistent zfs_dev mnttab fds time zfs change key hit execute_key_fob glibc appends setmntent mode musl return fopen reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
331,0fc401a7ef630857c9e17bb3424b039c5492cb38,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-11 14:34:01 +0100,11866, libzfs requires new key definition set newkey change password prompt new encryption root enter passphrase enter passphrase  enter new passphrase enter new passphrase make sense consistent new passphrase always meaning come something plain passphrase remember thing reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
332,e568853f9668b2b389870a55c9157ff37f64a604,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-10 11:18:49 +0100,11866, libzfs_crypto.c remove unused key_locator enum reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
333,0395cf92e02df36f75531679ce868fd7380ad879,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-11 17:42:22 +0100,11866, zfprops fix spacing jailed argument reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
334,0241dfac473d324b5c5bdbcf8e994587b5d639a1,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-10 15:56:01 +0100,11866, zfs jail fix zfs jail jail leftover reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11866,,
335,e0779d1e204438d5a4df7f2a12dc949fe7a5ac7f,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 16:17:44 +0200,11860, zed untangle dunno maybe previous style really confusing reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
336,346c85b7229853a499a8dd069d8b15e0706f7d1a,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 15:38:22 +0200,11860, zed malloc global zed_conf instance optimise zed_conf layout byte byte pointer byte one previously respectively reason live stack reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
337,46d50eaf56eaee87e9ae0b5a5227b61a228a0fc2,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 15:35:10 +0200,11860, zed remove zed_conf min max _events zed_ min max _events user field marked reserved future use macro defined reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
338,d09bd1962919283696961323e0fdd0c0aef3c26c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 15:32:45 +0200,11860, zed remove zed_conf syslog_facility user nobody set main hard code log_daemon correct value reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
339,88bf37d91a12d0048c24fdfb6db7b4de91377479,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 15:27:55 +0200,11860, zed consistent got_err mean user passed exit_success exit_failure despite bool reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
340,d622f16b6bb183dcad97ad8848f64ebb34942102,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 15:20:22 +0200,11860, zed untangle option listing reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
341,83cc6bbf79909417f618962bd284e51eff53e040,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 14:52:58 +0200,11860, zed print licence string one big chunk reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11860,,
342,099fa7e475d30b53ea64b2327fcaee4ba9741690,ablofsf <32678034+pablofsf@users.noreply.github.com>, 2021-04-11 21:05:35 +0200,11710, allow zfs send replication stream missing snapshot tentative implementation discussion done 5285 according send skip missing flag added replication stream snapshot missing hierarchy provided print warning ignore dataset child instead throwing error reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pablo correa gã³mez ablocorrea hotmail.com close 11710,,
343,2ec0b0dd71b7dfb61ebcd14ab69ad3413fff4dbb,laf Faaland <faaland1@llnl.gov>, 2021-04-11 12:02:26 -0700,11865, kmod zfs obsolete kmod spl well spl kmod without obsoletes using package built spec redhat upgrade zfs 0.7 zfs 2.x doe cause kmod spl 0.7 package removed reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 11865,,
344,d08dc34515cf7768435d89a26a0ba3368494e02d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-09 18:12:07 +0200,11859, zvol_wait properly handle zvol_volmode sysctl none reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
345,4640baab69cdc53926e25260ffb4d02b07cb96d9,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 19:06:42 +0200,11859, zfs_ids_to_path print correct wrong value reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
346,ecbf7c6707878fc308a9ab65b5f940926706b31e,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 19:04:46 +0200,11859, zfs_ids_to_path come executable name reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
347,e09318829b9499e725e53204518ac6c742cda264,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 18:38:07 +0200,11859, contrib bpftrace exec bpftrace remove useless cat reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
348,0f2915602e9dc5b0545ba284628d0c14c21e474b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 18:02:35 +0200,11859, arc_summary3 read mod version instead spawning cat reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
349,519aec83f574d5d60b46d716161db2195f0a0ae1,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 17:37:55 +0200,11859, zvol_wait fix zvols space name optimise list_zvols would happily zvols space name assign second half volmode use normal read set ifs tab instead using separate awk process similarly run zfs use output directly instead spawning zfs process per zvol reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
350,ea4541e4c6c1bcd629d3d335e33b97fb94f3be38,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-07 16:55:40 +0200,11859, zstreamdump exec zstream dump reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11859,,
351,a631283b745efc8354ad680b3a3c1f7bff38c4f8,yan Moeller <freqlabs@FreeBSD.org>, 2021-03-16 13:04:58 +0000,11833, move zfsdev_state_ init destroy common code reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11833,,
352,1dff54527806efb2e710a9c86370a43e33f8e03a,yan Moeller <freqlabs@FreeBSD.org>, 2021-03-16 12:44:23 +0000,11833, eliminate 3937ab20f become reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11833,,
353,161ed825ca08abc6df5eb1215b4b46eb3ba5dc6d,erraTech <TerraTech@users.noreply.github.com>, 2021-04-08 21:15:29 -0700,11839, zpl_inode.c fix smack smack need zfs dentry security field setup smack d_instantiate hook called requires functioning __vfs_getxattr call properly set label fxes file instantiation properly setting object label subject label proper file labeling transmutable directory function updated zpl_create zpl_mknod zpl_mkdir zpl_symlink external issue http github.com cschaufler smack next issue reviewed brian behlendorf behlendorf1 llnl.gov signed terratech terratech close 11646 close 11839,,
354,5d508d92d2dd5fdb679fcf8b2a3977adb1f4199f,yan Moeller <ryan@iXsystems.com>, 2021-04-09 00:10:28 -0400,11856, zts improve cleanup kill removal operation every platform linux test fixed stable freebsd reviewed john kennedy john.kennedy delphix.com reviewed igor kozhukhov igor dilos.org signed ryan moeller ryan ixsystems.com close 11856,,
355,46fb4783260f87d94962c8d31ae1a43628ba2074,ich Ercolani <214141+rincebrain@users.noreply.github.com>, 2021-04-08 17:37:51 -0400,11850," added check broken alien version added check alien 8.95 1,2,3 known fail generate deb 100 time instead print message informing developer known broken linking information reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 11848 close 11850",,
356,600a1dc54cadded39ce56cb5a0fa99737abdbbe9,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-08 14:33:15 -0700,11849, use setup scrub rebuild completes automatically schedule follow scrub verify block checksum setting scrub execute counterpart function confirm scrub started prior change check comprehensive using check function keep logic one place reviewed mark maybee mark.maybee delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11849,,
357,9c3b926b0ed7ed906be6c0e38f86e2f52b48da98,ino Reichardt <github@mcmilk.de>, 2021-04-08 22:25:24 +0200,11852, fix double sha1 sha1.o line module icp makefile.in reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tino reichardt milky zfs mcmilk.de close 11852,,
358,383401589e0f4e11b31cbae64aa42afff7ed3132,yan Moeller <ryan@iXsystems.com>, 2021-04-08 16:21:53 -0400,11855, zts test using zhack may fail freebsd described 11854 zhack occasionally segfaulting freebsd debugging proving tricky avoid false positive add entry test use zhack zts report accept may occasionally fail freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com issue 11854 close 11855,,
359,e778b0485baaddd55284b138a517e0a028bd15eb,yan Moeller <ryan@iXsystems.com>, 2021-04-07 19:23:57 -0400,11786, ratelimit deadman zevents delay zevents delay zevents flood zevent pipe vdev becomes unresponsive deadman zevents ratelimit deadman zevents according tunable delay zevents enable deadman test freebsd add test deadman event ratelimiting reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed ryan moeller ryan ixsystems.com close 11786,,
360,c9c6537731d21c00ef5829003db0bb694c6aec56,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-03 12:09:24 +0200,11834, zed current limit close_from fallback consider following strace log prlimit64 rlimit_nofile null rlim_cur 1024 rlim_max 1024 1024 dup2 dup2 300 300 dup2 3000 ebadf bad file descriptor dup2 30000 ebadf bad file descriptor dup2 300000 ebadf bad file descriptor prlimit64 rlimit_nofile rlim_cur 1024 1024 rlim_max 1024 1024 null dup2 dup2 300 300 dup2 3000 3000 dup2 30000 30000 dup2 300000 300000 even privileged process need bump rlimit able use fds higher rlim_cur reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
361,509a2dcf7dcff4a44becf2c0ccc4cbf8cd3b72f3,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 21:37:53 +0200,11834, zed.8 diagnosis engine implemented reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
362,54f6daea7ae060763b4b4d3cdf1218a81102980c,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 21:31:23 +0200,11834, zed replace write purge set sa_restart early prevent eintrs indeed point needing clear reaper since interferes pause error actually handled plus pid write bigger byte anyway reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
363,3d62acf0adbceadeac472db22619a389027ec4cf,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 20:47:00 +0200,11834, zed merge event event currently never generated also untag merge serve different purpose machine usually script human consumption format output differently stand reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
364,0d0720eb52c1e69d455d4b24381e328c65138380,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 17:32:51 +0200,11834, zed remove unused zed_file_read_n deal reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
365,1a05182ba0dd26204757cef1f22f4c229c3ee112,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 17:14:31 +0200,11834, zed bump miss event reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
366,c52612ba0315409e4c47f753e41615d19131baf7,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 16:40:48 +0200,11834, zed.8 pretend unprivileged user could change script owner add note zedlets need owned root quoth chown linux man page project privileged process linux one cap_chown capability may change owner file quoth chown freebsd eperm operation would change ownership effective user super user reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
367,ed519ad495db94b333215db819ba9c67b646f116,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 15:57:23 +0200,11834, zed purge mention configuration file simply need one since flag daemon take short mostly toggle administrative nature therefore better served age old tradition sourcing environment file preparing cmdline init specific handler needed reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
368,64c03a0a27a4d746b3b4e5eca22c7b7ed63b25db,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 15:10:34 +0200,11834, zed implement close_from term proc self available dev darwin consider following strace output prlimit64 rlimit_nofile null rlim_cur 1024 rlim_max 1024 1024 yes well million file descriptor reduces zed start time least second instantaneous strace even try usable simple virtue five syscalls instead million case main loop doe nothing recent linux 5.8 close_range libcs wrapper yet also run zedlet pre exec compare finished syslog.sh eid pid 6717 time 1.027100s exit finished history_event zfs list cacher.sh eid pid 6718 time 1.046923s exit  finished syslog.sh eid pid 4834 time 0.001836s exit finished history_event zfs list cacher.sh eid pid 4835 time 0.001346s exit lol reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
369,3bc3eef9c3f1c71bae09ef546bdc990621771c87,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-02 14:10:31 +0200,11834, zed print combined system user time zedlet death reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11834,,
370,7367be0da935cc01dc9f7d048bcba367a147d2c7,arcin Skarbek <mskarbek@users.noreply.github.com>, 2021-04-07 19:17:39 +0200,11836, add kmodtool fix detect different system.map location reviewed brian behlendorf behlendorf1 llnl.gov signed marcin skarbek git skarbek.name close 7807 close 11836,,
371,cfd4a25fcec37beced07cec95a9dd72c1d3d5ba4,laf Faaland <faaland1@llnl.gov>, 2021-04-07 10:10:34 -0700,11851, fix misplaced quote kmod preamble rpm redhat zfs kmod.spec.in typo shell code creates kmod preamble file typo result preamble file wrong name source kmod missing obsoletes clause become part name filename incorrect built package doe obsoletes conflict set reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 11851,,
372,d5ef91af02667d8e7239fc3d9b026ff04d9429cb,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-07 10:09:21 -0700,11847, obsolete earlier package due version bump order package manager dnf upgrade cleanly package soname bump obsolete package name must known update new package correctly obsolete old one reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 11844 close 11847,,
373,aa5a4eb5d0d7dff475333c4cdd00b79a3164c862,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-04 00:53:40 +0200,11838, brokenly set scheduler root pool vdev disk effectively reverts part 6807 9042 code latter cite symmetry whole disk vdev behaviour presumably rootfs vdevs rarely whole disk code broken nvme device indeed strip controller number instead potential partition number turning nvme0n1p1 nvmen1p1 would subsequently fail sysfs existence check could fixed handle others rather easily dereferencing sys class block devname place setting noted commit removed setting scheduler default use udev rule reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11838,,
374,55419e0a721f32632e182794a5efa465522b9994,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-03 18:18:39 +0200,11838, fix root zfs auto ifs would break loop import_pool would fault automatic import additionally zfs_bootfs cmdline would interfere find_rootfs many pool present thing could happen across multiple find_rootfs run bail early clean error path suggested nachtgeist reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11278 close 11838,,
375,a03b288cf08f39540ae1c30bc353de96912f343e,att-fidd <81489167+matt-fidd@users.noreply.github.com>, 2021-04-07 00:05:54 +0100,11837, zfs get output column clone property empty currently return empty string filesystem snapshot clone break parsable zfs get output three column output instead reviewed brian behlendorf behlendorf1 llnl.gov signed matt fiddaman github m.fiddaman.uk authored matt matt fiddaman.net close 11837,,
376,bbcec73783c552658a4fe54de8aee110109874bc,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-04-06 12:44:54 -0700,11461, kmem_alloc km_sleep use kvmalloc kmem_alloc size pagesize km_sleep backed kmalloc find contiguous physical memory enough contiguous physical memory available e.g due physical page fragmentation oom killer invoked make memory available ideal process may killed still plenty free memory happens individual page contiguous run page observed allocating 13kb zfs_cmd_t example zfsdev_ioctl commit change behavior kmem_alloc size pagesize km_sleep insufficient contiguous free page case find individual page stitch together using virtual memory accomplished using kvmalloc implement described behavior trying kmalloc __gfp_noretry falling back vmalloc behavior kmem_alloc km_nosleep changed continues use kmalloc gpf_atomic __gfp_noretry vmalloc may sleep reviewed tony nguyen tony.nguyen delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed matthew ahrens mahrens delphix.com close 11461,,
377,57a1214e3aa295a8f4b5683bf6891d99cb297112,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-06 21:39:54 +0200,11842, zpool features.5 remove booting possible feature exact limitation feature supported booting vary considerably depending environment order minimize confusion avoid categorical statement assume grub2 used supported grub2 feature covered earlier man page easy reference reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11842,,
378,d35708b18705adf3b1854061bec1f6ba29545aec,eorge Melikov <mail@gmelikov.ru>, 2021-04-06 22:27:40 +0300,11845, man fix wrong .xr macro usage addition html doc working hyperlink reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed george melikov mail gmelikov.ru close 11845,,
379,61b50107a58a1da9d86f5f81dc35d039ca629aae,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-06 21:25:53 +0200,11843, libzutil zfs_isnumber return false input empty zpool list user would mistakenly try parse empty string interval case zpool list open pool zpool list interval zero usage usage string follows symmetric zpool get zpool list open name must begin letter avoid breaking interval zero string simply need user facing reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11841 close 11843,,
380,ec580225d2b2fb78ea9e12d0b08a185fbb50c7a6,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-03 08:33:22 -0700,11832, zts pool_checkpoint improvement pool_checkpoint test may incorrectly fail several invoke zdb imported pool scenario unexpected zdb fail pool modified resolve zdb check done pool exported additionally default cleanup function assumed pool would imported run case exit early fail cleanup test state causing subsequent test fail add check destroy pool imported reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed serapheim dimitropoulos serapheim delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11832,,
381,bf169e9f15efbc343b931f20cfad5d2b59c8a821,ndrea Gelmini <andrea.gelmini@gelma.net>, 2021-04-02 18:38:53 -0700,11774, fix various typo correct assortment typo throughout code base reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed ryan moeller ryan ixsystems.com signed andrea gelmini andrea.gelmini gelma.net close 11774,,
382,943df59ed942182427ed50b94a346dc22c4407e6,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-04-03 01:34:58 +0200,11828, always call zfs zpool binary directly dev zfs 666 system dev zfs check always succeeds zfs path e.g completing sbin zfs list regular account lead error spew like nabijaczleweli szarotka sbin zfs list bash zfs command found bash zfs command found read command quite general one need elevate one way another reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11828,,
383,c0af3c7b2c7bf1c601b4130533a9efebe42c581c,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-02 16:33:40 -0700,11821, add releases.md file document project policy regarding publishing maintaining official openzfs release reviewed tony hutter hutter2 llnl.gov reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11821,,
384,73218f41b4413ec75a5d877771a03ab98e8fb3c3,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-29 15:21:54 +0200,11807, zed allow limiting concurrent job 200ms time relatively long already hit cap likely able spawn multiple new job wake reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11807,,
385,02a0fa19995a865fe5194f1777e77dc8779d89b6,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-27 14:18:27 +0100,11807, zed remove unused fixme comment since initial implementation 2014 user reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11807,,
386,ca2ce9c50b6b579741de12867c9b7cbf4f799cb4,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-26 14:41:38 +0100,11807, zed use separate reaper thread collect zedlets asynchronously reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11807,,
387,3ef80eefff37d92315b030008edc853512d487da,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-26 21:18:18 +0100,11807, zed set name thread reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11807,,
388,583e320546972945b9bf79fac82bf3c398d74d3b,yan Moeller <ryan@iXsystems.com>, 2021-04-02 14:11:52 -0400,11830, zts inheritance inherit_001_pos flaky add inheritance inherit_001_pos maybe fails freebsd list reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11830,,
389,dce31763491e462876ff8706cb651bf488f443a0,yan Moeller <ryan@iXsystems.com>, 2021-04-02 14:09:05 -0400,11751, avoid taking global lock destroy zfsdev state exclusive access zfsdev state object section invalidated setting zs_minor destroy state without taking lock invalidation last member ensure correct ordering strengthen assertion zs_minor valid enter reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller freqlabs freebsd.org close 11751,,
390,02aaf11fc793e0c632223a95d24db0969d0ba602,yan Moeller <ryan@iXsystems.com>, 2021-04-02 14:06:44 -0400,11827, freebsd fix stable at_beneath removal reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11827,,
391,fe6babced2f3a5eff9d70e380f2054d5f18fa4c0,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-01 16:53:05 -0700,11817, bump libzfs.so libzpool.so version bump library version advised libtool guideline http www.gnu.org software libtool manual html_node updating version info.html two new function added existing function changed increase version age version revision age added function boolean_t const char const char boolean_t char char additionally bump libzpool.so version information library internal use still want update version track major change interface libzfsbootenv libuutil libnvpair libzfs_core library updated reviewed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 11817,,
392,c05eec32a7f7eeeb17c328f39da742a8096a5991,yan Moeller <ryan@iXsystems.com>, 2021-04-01 11:49:41 -0400,11813, allow pool name look like solaris disk name nothing bad happens prefix pool name match disk name bit silly restriction point reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller freqlabs freebsd.org close 11781 close 11813,,
393,032a213e2e6b791364301e9de029e7b8189a69a0,yan Moeller <ryan@iXsystems.com>, 2021-03-31 13:56:37 -0400,11822, scale cpu count lower bound scaling low upper bound high use fixed default length 512 instead reasonable value system reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11822,,
394,3ba10f9a6ae3c1b339fb7ff78a6bc9c314e3e08c,yan Moeller <ryan@iXsystems.com>, 2021-03-29 15:44:27 -0400,11822, atomically check set dropped zevent count protected lock expected updated atomically reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11822,,
395,9f9e1b5425ffa3e248504e401828eb13a3f1d00e,rian Behlendorf <behlendorf1@llnl.gov>, 2021-04-01 08:39:27 -0700,11826, increase free space workflow recently running free space ubuntu 20.04 environment resulting test failure appears caused change default available free space change openzfs try avoid failure applying suggested workaround remove unnecessary file http github.com action virtual environment issue 2840 reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11826,,
396,19c9247d5754fc3d534f1561899f3a3f3a341927,rian Atkinson <batkinson@lanl.gov>, 2021-04-01 09:37:41 -0600,11825, fixing iop rename check configure check iop rename wanting flag missing ac_msg_checking would print yes without saying checked reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 11825,,
397,0c2eb3f54075c1ef0fb06b8ce3ca68c2978f99d8,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-31 19:49:56 +0200,11806, fsck.zfs implement exit code suggested manpage update fsck.zfs helper bubble already known error detected pool health degraded filesystem error left uncorrected health faulted dataset etc fstab operational error pool found operational error everything else reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11806,,
398,67859aedd14eb020b2f2988498410e661067a582,ike Swanson <mikeonthecomputer@gmail.com>, 2021-03-31 09:40:25 -0700,11818, add compatibility file set zol 0.6.1 0.6.4 openzfs 2.1 zol 0.6.1 introduced feature flag three feature implementation time guaranteed 0.6.4 introduced 0.6.5 added two openzfs 2.1 added draid feature reviewed brian behlendorf behlendorf1 llnl.gov signed mike swanson gmail.com close 11818,,
399,9ac82cab2d8e5235b61e6811203793758c30b994,rian Behlendorf <behlendorf1@llnl.gov>, 2021-03-30 10:32:29 -0700, , update meta increase version 2.1.99 indicate master branch newer 2.1.x release ensures package built master branch considered newer last release signed brian behlendorf behlendorf1 llnl.gov,,
400,3522f57b6ada25bb58a88307971544ce49f39c66,rian Behlendorf <behlendorf1@llnl.gov>, 2021-03-29 16:31:29 -0700, , tag 2.1.0 rc1 new feature distributed spare draid feature added compatibility property zpool feature set added zpool_influxdb command collect zpool statistic signed brian behlendorf behlendorf1 llnl.gov,,
401,38280c3526845852c4da09fd0c11090493ee58fb,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-03-26 22:21:00 +0100,11798, zed reap child killing time child process killed waitpid must called pid reap zombie process update bug section reflect reality replacing zedlets time limited zedlets interrupted reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11769 close 11798,,
402,2b56a634579e4cdab8d84ccba138e701a6d3bc64,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-03-26 11:19:35 -0700,11744, use helper function clarify gang block size gang block dva_get_asize total space allocated gang dva including child space allocated dva vdev offset commit make relationship clear using helper function space allocated gang block vdev offset reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11744,,
403,b85f47efd094dc9ebe210c364e235c6ef99f8417,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-03-26 11:12:22 -0700,11742, specifying raidz vdev name parity count match specifying name raidz vdev command line specified raidz vdevid raidzp vdevid e.g zpool clear poolname raidz zpool clear poolname raidz2 parity specified vdev name match actual parity raidz vdev otherwise command fail commit make reviewed brian behlendorf behlendorf1 llnl.gov authored stuart maybee stuart.maybee comcast.net signed matthew ahrens mahrens delphix.com close 11742,,
404,2037edbdaa80f49dd83c82d283d269c6fa3f95d7,uis Henriques <73643340+lumigch@users.noreply.github.com>, 2021-03-26 17:46:45 +0000,11791, fix error code linux filesystems seem return eperm instead eaccess trying set fs_append_fl fs_immutable_fl without capability detected generic 545 test fstest suite reviewed brian behlendorf behlendorf1 llnl.gov signed luis henriques henrix camandro.org close 11791,,
405,ef977fce66369e11769eaba0839dca19d4ddb484,essica Clarke <jrtc27@jrtc27.com>, 2021-03-26 17:45:12 +0000,11771, support running freebsd buildworld arm based macos host arm based mac like freebsd provide full bit stat start stat64 variant thus define stat64 fstat64 alias normal version reviewed ryan moeller ryan ixsystems.com signed jessica clarke jrtc27 jrtc27.com close 11771,,
406,8a915ba1f66edc3863c0dcb1c2a4f83582cd4a94,ndrea Gelmini <andrea.gelmini@gelma.net>, 2021-03-22 20:34:58 +0100,11775, removed duplicated includes reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 11775,,
407,be1e69f31c9edc3f46ff82a411e50c8d2c19329d,ndrea Gelmini <andrea.gelmini@gelma.net>, 2021-03-22 20:32:38 +0100,11776, fix typo python method name reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 11776,,
408,891568c9907b3631f99a1079344bddf62ca70f56,lexander Motin <mav@ixsystems.com>, 2021-03-20 01:56:11 -0400,11652, split dmu_zfetch speculation execution part make better prediction parallel workload dmu_zfetch called early possible reduce possible request reordering particular called call dbuf_hold may sleep waiting indirect block waking multiple thread time completion significantly reorder request making stream look like random issue prefetch request demand one since may get disk first despite scheduler increasing demand request latency patch split dmu_zfetch two function dmu_zfetch_run first executed early needed update statistic make prediction without issuing issuance handled dmu_zfetch_run called later demand already issued even track activity concurrent thread issuing prefetch _all_ demand request issued many year big problem storage server handling deeper request queue client either serialize consequential read make zfs prefetcher usable execute incoming request get almost prefetch zfs relying deep enough prefetch client benefit way varied neither perfect patch deeper queue sequential read benchmark crystaldiskmark window via iscsi freebsd target show much better throughput almost 100 prefetcher hit rate comparing almost zero also removed per stream zs_lock useless completely covered parent zf_lock also reused zs_blocks refcount track zf_stream linkage stream since believe previous zs_fetch null check racy delete prefetch stream reach end file save 1kb ram per file plus reduces search stream list block data prefetch speculation indirect block prefetch still done since cheaper dbufs stream already dmu cache first cache miss immediately fire prefetch would done stream time save cpu time file within dmu cache capacity read reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com reviewed matthew ahrens mahrens delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 11652,,
409,296a4a369bc1078a694f88570972330985b3b1b8,hunwei Chen <tuxoko@gmail.com>, 2021-03-19 22:53:31 -0700,11682, fix zfs_get_data access file wrong generation tx_write create file file later deleted new directory created object possible zil_commit happens zfs_get_data called new directory may result panic try range lock patch fix issue record generation number zfs_log_write zfs_get_data check object valid reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen nutanix.com close 10593 close 11682,,
410,66e6d3f128f22262e4be564c40ddc708725b6ed3,ndrew <awalker@ixsystems.com>, 2021-03-20 01:50:46 -0400,11760, fix regression posix mode behavior commit 235a85657 introduced regression evaluation posix mode require group deny entry internal zfs acl example posx mode 007. set ace_write_data added wanted_dirperms prior calling occurs unfortunately hit particular deny ace zfs_groupmember checked determine whether access denied since zfs_groupmember always return b_true linux check failed resulting ultimately eperm returned reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed andrew walker awalker ixsystems.com close 11760,,
411,c23850759fbd5e4d6d45bbe73a75d2085f2a170b,alash Gandhi <pbg4930@rit.edu>, 2021-03-19 22:47:50 -0700,11764, zts new test kernel panic induced redacted send change add new test cover bug fix binary search redacted send resume logic cause kernel panic bug fixed http github.com openzfs zfs pull 11297 reviewed brian behlendorf behlendorf1 llnl.gov authored john kennedy john.kennedy delphix.com signed palash gandhi palash.gandhi delphix.com close 11764,,
412,cd5b81281804bf1200abf060a0bc63872fd55fd3,artin MatuÅ¡ka <mm@FreeBSD.org>, 2021-03-20 06:46:43 +0100,11763, allow setting bootfs property pool indirect vdevs freebsd boot loader relies bootfs property capable booting removed indirect vdevs reviewed eric van gyzen reviewed brian behlendorf behlendorf1 llnl.gov signed martin matuska freebsd.org close 11763,,
413,0ab84bff55d0ec93436ae5530175b45c56a9ab4f,yan Moeller <ryan@iXsystems.com>, 2021-03-20 01:39:42 -0400,11770, fix typo zgenhostid.8 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 11770,,
414,f52124dce8f62b7fdf7bce78d59c231ff5df4f88,rian Atkinson <batkinson@lanl.gov>, 2021-03-19 23:38:44 -0600,11768, removing old code map_atomic used required pas enum km_type kmap_atomic kunmap_atomic however longer necessary wrapper zfs_k map_atomic removed confusing abd code struct abd_iter member iter_km longer exists wrapper macro simply compile reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed brian atkinson batkinson lanl.gov close 11768,,
415,793c958f6f168ebbf71db9b1ae342d8b7d73ce5a,erapheim Dimitropoulos <serapheim@delphix.com>, 2021-03-19 22:36:02 -0700,11737, initialize metaslab range tree metaslab_init motivation noticed several zloop crash within delphix generated due following sequence event device get expanded new metaslabas allocated metaslabs metaslab_init gone yet meas range tree actually set ms_allocatable others null issue start processing one new metaslabs expanded vdev part call metaslab_load turn try dereference metaslabs tree still null therefore crash failure come vdev_trim code path patch considered following solution deal issue add logic vdev_initialize trim skip new metaslabs decided would good avoid exposing lower level detail higer level operation return early new metaslabs thus never touch range_trees null time seemed work around bug clear cut solution refactor logic metaslabs range_trees created time creatin metaslab_init patch decided expose metaslab detail higher level operation vdev initialize trim current behavior creating range tree lazily unnecessarily complicated always initializing metaslab range_trees make part codebase cleaner example used use ms_freed reference value knowing whether range_trees initialized longer need check place use ms_new boolean field readable side change probably due mismerge set ms_loaded b_true twice patch remove extraneous assignment reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 11737,,
416,ffd6978ef59cfe2773e984bf03de2f0b93b03f5c,oleman Kane <ckane@colemankane.org>, 2021-03-20 01:33:42 -0400,11765, linux 5.12 update bio_max_segs replaces bio_max_pages bio_max_pages macro retired favor bio_max_segs function implement typical min logic used throughout kernel bounding allocation also new implementation intended signed safe former reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11765,,
417,e2a8296131e94ad785f5564156ed2db1fdb2e080,oleman Kane <ckane@colemankane.org>, 2021-03-20 00:00:59 -0400,11712, linux 5.12 compat idmapped mount linux 5.12 filesystem api modified support ipmapped mount adding struct user_namespace parameter number function vfs handler change add needed autoconf macro detect new interface update code appropriately change doe add support idmapped mount instead preserve existing behavior passing initial user namespace needed subsequent commit required add support idmapped mounted reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov authored brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11712,,
418,330c6c052314b530e5b271bc731d4040570c5fb0,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-03-19 16:22:10 -0700,11735, clean raidz draid ereport code raidz draid code responsible reporting checksum error child vdevs checksum error represent event disk returned data parity correct word instance silent data corruption checksum error show vdev stats thus zpool status cksum column event log zpool event note contrast common noisy error disk offline case zfs know disk bad try read device return error requested read write operation raidz draid generate checksum error via three code path raidz draid reconstructs damaged block checksum error reported child whose data used reconstruction handled common type raidz draid checksum error raidz draid able reconstruct damaged block mean data lost zio fails error returned consumer e.g read system call would happen example three different disk raidz2 group silently damaged since damage silent possible know three disk damaged checksum error reported every child returned data parity read draid typically one group child involved case handled next common type raidz draid checksum error raidz draid able reconstruct damaged block like case happens additional copy block due ditto block i.e multiple dva blkptr_t one copy good raidz draid compare sector data parity retrieved good data dva differ report checksum error child differs case checksum error reported subset child actually bad data parity case happens rarely since normally metadata ditto block silent damage extensive many instance case pool likely unrecoverable code handling case considerably complicated case two reason need run main raidz read logic completed data raidz read need preserved alternate dva read necessitates refcounts callback managed non raidz specific zio layer nontrivial map section data read raidz correct data example correct data doe include parity information parity must recalculated based correct data compared parity read raidz child due complexity case rareness hitting minimal benefit provides case commit remove code case type error handled case i.e checksum error reported child returned data parity reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11735,,
419,2f385c913f3e6d52c4a4cc670713acc80464ee7c,ateusz Guzik <mjguzik@gmail.com>, 2021-03-18 06:09:45 +0100,11739, freebsd make seqc asserts conditional replay avoids tripping asserts pool recovery reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11739,,
420,46df6e98aaf324e7cbdf529f293a3c493645499e,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-03-17 21:57:09 -0700,11736, remove unused rr_code rr_code field raidz_row_t unused commit remove field well code used set  reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11736,,
421,ec3e4c6784485beca965ae3ebdeea948dd4739f3,yan Moeller <ryan@iXsystems.com>, 2021-03-18 00:55:18 -0400,11767, freebsd fix memory leak kstats handle incorrectly kmem_zalloc failure km_sleep never return null free data allocated non virtual kstats deleting object reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11767,,
422,1daad98176d18a785d116d9666dadc866f631f98,dam D. Moss <c@yotes.com>, 2021-03-16 16:33:34 -0700,11704, linux always check verify return igrab zhold wrap igrab linux igrab may fail inode process deleted mean zhold must called reference exists therefore deleted case existing consumer add verify comment explaining requirement reviewed brian behlendorf behlendorf1 llnl.gov signed adam moss yotes.com close 11704,,
423,5f9d61d06b5a2df87d8d5733429cf4eba66f0acb,ries Michiels <32487486+driesmp@users.noreply.github.com>, 2021-03-16 23:03:28 +0100,11718, update freebsd version update supported freebsd version documentation reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed dry michiels driesm.michiels gmail.com close 11718,,
424,07dff5cffed2c25f0dd268a294bc31d9721bea11,ldisater <gldisater@gmail.com>, 2021-03-16 18:01:21 -0400,11727, hold release permission exist man page missing two permission add missing permission man page reviewed brian behlendorf behlendorf1 llnl.gov signed jeremy faulkner gldisater gldis.ca close 11727,,
425,5638803b6af4cc97ee9fabe153418420c24a404e,yan Moeller <ryan@iXsystems.com>, 2021-03-16 18:00:14 -0400,11734, zts add test mode attribute create new section test run acltype test mode readonly attribute freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11734,,
426,dd0b5c8559329a042e55159a5d83440481b06416,on Brady <don.brady@delphix.com>, 2021-03-16 15:56:17 -0600,11753, module param make use tunable module parameter open zfs also since macro auto generate specific tunables removed existing reference module freebsd zfs sysctl_os.c reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed allan jude allan signed brady don.brady delphix.com close 11753,,
427,9305ff2edf7ff67cdd2cc3d38884fa4f5de6dadd,yan Moeller <ryan@iXsystems.com>, 2020-11-09 17:57:00 -0500,11185, zts fix incorrect use libtest user_run xattr_003_neg use user_run eval ksh function defined libtest unless include libtest user shell fix xattr_003_neg include libtest user shell run get_xattr assert fails use variable filename change user shell log content etc passwd cleanup byproduct reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11185,,
428,e0b53a5dbbfdf8f7cb85bfa7f3c4f9650bc590ec,yan Moeller <ryan@iXsystems.com>, 2021-03-11 15:01:58 -0500,11185, zts use ksh current environment user_run current user_run often doe work expected command run different shell different environment output discarded simplify user_run retain current environment eliminate eval feed command string ksh enhance logging user_run see err reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11185,,
429,e464f7c7cc1efb6a0bcae70f77bec13fc531cd20,ariusz Zaborski <oshogbo@vexillium.org>, 2021-03-13 01:12:14 +0100,11730, freebsd bring back possibility rewind checkpoint bootloader add parsing rewind option upstreaming change omitted part detect pool rewind freebsd repo synced openzfs part code removed freebsd repo openzfs repo external issue http bugzilla show_bug.cgi 254152 originally reviewed tsoome allanjude originally reviewed kevans high level overview reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed mariusz zaborski oshogbo vexillium.org close 11730,,
430,f845b2dd1c6048db6c67cd6072a9a976b1dcf6e4,yan Moeller <ryan@iXsystems.com>, 2021-03-12 19:09:15 -0500,11720, freebsd clean zfsdev_close match linux resolve oddity zfsdev_close could result panic present equivalent function linux remove unused definition zfs_min_minor freebsd simplify zfsdev state destruction assert zs_minor valid zfsdev_close make locking around zfsdev state match linux reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11720,,
431,e3e82dcc515586d460bb739ceb549443df26a863,ateusz Guzik <mjguzik@gmail.com>, 2020-11-04 17:28:56 -0500,11153, freebsd switch teardown lock rms deserializes otherwise non contending operation previous scheme using lock hashed curthread run conflict quickly check pull request sample result reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
432,5ebe425a5bf332ab1d77d78eb3bfd9594b5d7250,ateusz Guzik <mjguzik@gmail.com>, 2020-11-04 17:23:48 -0500,11153, macroify teardown lock handling allow platform implement see fit particular different manner rrm lock reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
433,9847f77f012b0ea4d54a7151c726e63122e2117d,ateusz Guzik <mjguzik@gmail.com>, 2020-11-04 17:19:35 -0500,11153, freebsd rename teardown inactive macro mimick rrm convention reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
434,f9acd578f0d62639c4e0b4b44bd4a72fa1cd311a,ateusz Guzik <mjguzik@gmail.com>, 2020-11-12 17:33:14 -0500,11153, freebsd remove assertion teardown lock held useful hard implement rms routine code start using reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
435,300f68e017e80366f406a816e6070521d1215e82,ateusz Guzik <mjguzik@gmail.com>, 2020-10-12 21:27:59 +0000,11153, freebsd rework asserts zfs_dd_lookup even ifdefs drop arguably useless teardown lock asserts nothing else check reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
436,446400346d2dcec222abebf0db1b0ad61f013548,ateusz Guzik <mjguzik@gmail.com>, 2020-10-15 05:45:28 +0000,11153, add branch prediction zfs_enter zfs_verify_zp macro expected fail corner case reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11153,,
437,0936981d8698f0f05db69bb8efeb67fe5f810d2f,eorge Wilson <george.wilson@delphix.com>, 2021-03-12 17:42:27 -0600,11716, zpool import cachefile improvement importing pool using cachefile ideal reduce time required import pool however device associated pool cachefile changed import would fail easily corrected normal import would read pool configuration label goal change make importing using cachefile resilient auto correcting accomplished cachefile import logic automatically fallback reading label device similar normal import main difference fallback logic normal import cachefile import logic look device directory originally used cachefile populated additionally fallback logic always import guid ensure pool cachefile would imported external issue dlpx 71980 reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson gwilson delphix.com close 11716,,
438,b8fa03efbc721ee98ad9d5e0bf9ce6f72f2a8eb2,artin MatuÅ¡ka <mm@FreeBSD.org>, 2021-03-12 04:42:04 +0100,11722, fix whitespace introduced ecc277cff manual page change ecc277c introduced whitespace line end reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed martin matuska freebsd.org close 11722,,
439,35aa9dc6dfddb319bed027e1eebb17ff226bd2bc,yan Moeller <ryan@iXsystems.com>, 2021-03-11 22:23:24 -0500,11715, freebsd fix scope deadman tunables deadman tunables ended wrong sysctl node move vfs.zfs.deadman reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11715,,
440,c94d648b1c2726882c57cb4e48bc61d74c881418,dam D. Moss <c@yotes.com>, 2021-03-11 17:16:09 -0800,11708, verify friend add branch hint constify intermediate evaluation left right params verify3 reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed adam moss yotes.com close 11708,,
441,92e8fb63956e8df91bab9644a2b5838486942686,llan Jude <allan@klarasystems.com>, 2021-03-11 20:13:34 -0500,11705, add missing file makefile file added missed makefile since file missing resulted disappeared dist archive reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed allan jude allan close 11705,,
442,8d534c37ac745a8fd9e41f756012118d27b90bb4,eorge Melikov <mail@gmelikov.ru>, 2021-03-12 04:11:31 +0300,11713, checkstyle pin ubuntu version checkstyle work well ubuntu 20.04 temporary pin 18.04 reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11713,,
443,f5ada6538dbc07f4589cbeff8f84228d1575bb03,on Brady <don.brady@delphix.com>, 2021-03-08 09:46:45 -0700,11681, return finer grain error libzfs unmount_one added errno mapping unmount_one libzfs changed do_unmount implementation return errno error directly like done do_mount others reviewed mark maybee mark.maybee delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 11681,,
444,4fdbd434508fac4013b856d804f9f191baea5690,ony Hutter <hutter2@llnl.gov>, 2021-03-08 08:43:30 -0800,11698, vdev_id create symlinks even dev mapper vdev_id dev mapper symlinks resolve uuid name like however multipath setup dev mapper entry uuid time vdev_id called udev however necessarily needed may able resolve name devname udev pass like devname dev patch try resolve name devname first falling back looking dev mapper fixed issue vdev name reliably showing one node reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 11698,,
445,b2eebe3ae7e301b084e47e243356c17d94ca98de,ntonio Russo <aerusso@aerusso.net>, 2021-03-08 09:42:45 -0700,11703, zts events_002 improve speed reliability events_002 exercise zed ensuring neither miss event reporting event twice slow test hardware timeouts insufficient allow zed properly settle conversely fast hardware timeouts long unnecessarily slowing test run instead using fixed timeout wait expected final event returning additionally wait timeout unexpected event avoid missing show late reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11703,,
446,93e3658035030dedc4a25c25e8b410a549bafa74,hristian Schwarz <me@cschwarz.com>, 2021-03-07 18:49:58 +0100,11667, zvol call zil_replaying replay zil_replaying zil side effect informing zil entry replayed still open zil information record replay progress zil header txg syncs zpl log entry idempotent logically dependent thus calling zil_replaying necessary correctness zvols question correctness nuanced zvol log tx_write tx_truncate idempotent logical dependency two record exist write discard request sync semantics range affected record overlap thus first glance would correct restart replay beginning crash replay completes doe address following scenario assume one log record per lwb chain disk hdr represents log entry number tx_write offset replay one txg sync txg crash bit flip corrupt come restart replay beginning call zil_replaying replay replay interpret invalid checksum end zil chain call replay done replayed zvol content called zil_replaying hdr would pointed resumed replay would replayed anything corrupted resulting zvol content logically depends replay corrupted zvol_obj content patch add zil_replaying call replay function since callback replay function need zilog_t pointer call zil_replaying open zil replaying also verify replay done demand opening zil first modifying bio reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 11667,,
447,b30cd705993be426d36cdf254ef216b28508fd8c,yan Moeller <ryan@iXsystems.com>, 2021-03-07 12:41:01 -0500,11694, zts improve cleanup zpool test restore original kern.corefile value test leave behind frozen pool clean leftover vdev file make zpool_002_pos zpool_003_pos consistent handling core file reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11694,,
448,ecc277cff7a4bfa4c2bcba6331b0ec28d5a96b7d,anfromafar <jonsonb10@gmail.com>, 2021-03-07 10:39:16 -0700,11690, clarify compressed zfs send recv behavior doc send receive explain behavior sending compressed stream receiving host override compression compress value data send stream written send compressed form compression algorithm set receiver overridden version cause confusion algorithm actually used updated man doc clarify behavior reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allanjude freebsd.org signed manfromafar manfromafar outlook.com close 11690,,
449,4b2e20824b96e805177be17ef88ec9adcdb047b5,yan Moeller <ryan@iXsystems.com>, 2021-03-07 12:31:52 -0500,11693, intentionally allow zfs_readonly zfs_write zfs_readonly represents attribute flag set behave write access granted anything acl particular _must_ allow writes opening file setting attribute writing similar write fchmod 0444 restore semantics lost freebsd refactoring zfs_write knowledge linux doe actually expose flag need eventually added supporting check reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11693,,
450,e7a06356c13c972c894e00b702ae7a5f5bf187e5,rian Behlendorf <behlendorf1@llnl.gov>, 2021-03-05 17:56:35 -0800,11700, suppress cppcheck invalidsyntax warninigs reason cppcheck 1.90 generating invalidsyntax warning bf64_set macro used zstream source warning reported cppcheck 2.3 evident problem expanded macro appears issue version cppcheck commit annotates source suppress warning signed brian behlendorf behlendorf1 llnl.gov close 11700,,
451,6bbb44e157818b52b2cf222f7cc299d42903f7b0,rian Behlendorf <behlendorf1@llnl.gov>, 2021-03-05 14:45:13 -0800,11687, initialize zil buffer populating zil destination buffer ensure always zeroed content constructed reviewed matthew ahrens mahrens delphix.com reviewed tom caputi caputit1 tcnj.edu signed brian behlendorf behlendorf1 llnl.gov close 11687,,
452,8a6d4448257320ce8afc67ecea25b434f094a304,orgen Lundman <lundman@lundman.net>, 2021-03-06 05:22:57 +0900,11683, fix may allocate new abd even supplied abd call allocate different abd ensure call abd_fini_struct abd used reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 11683,,
453,ba74de88c0891f4f40a6841db97668dfdac07b18,yan Moeller <ryan@iXsystems.com>, 2021-03-05 15:16:41 -0500,11678, freebsd module enable debug enable invariant wire enable debug flag configure freebsd module build add enable invariant running freebsd kernel config used detect whether enable invariant explicitly specified enable invariant disable invariant reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11678,,
454,fd1c366f822ecadc3a011340133e2f481803009f,homas Lamprecht <guggentom@hotmail.de>, 2021-03-05 21:15:35 +0100,11674, zpool use tab intend continuation removal status bring output removal status line field zpool status output thus allows parser easier detect continuation remove output  remove removal vdev copied 282g 0h9m completed ... 776k memory used removed device mapping  remove removal vdev copied 282g 0h9m completed ... 776k memory used removed device mapping reviewed brian behlendorf behlendorf1 llnl.gov signed thomas lamprecht t.lamprecht proxmox.com close 11674,,
455,92fb29b9f95522d1083f4467e9aab9f8f1e7d0ba,ames Wah <james@laird-wah.net>, 2021-03-04 03:28:49 +1100,11651, bomb using keylocation file avoid following error path operation fact succeeded reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed james wah james laird wah.net close 11651,,
456,e439ee83c1316b58d480148c9c851f42c1458305,hristian Schwarz <me@cschwarz.com>, 2021-03-03 17:15:28 +0100,11666, linux zvol avoid heap allocation spl_kmem_alloc showed flamegraphs single threaded sync write workload 85k iop intel xeon silver 4215 cpu 2.50ghz certainly huge win believe change clean easy maintain road reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed christian schwarz cschwarz.com close 11666,,
457,3242b5358ea816909b3ade995cf95007f181b280,ake Howard <RealOrangeOne@users.noreply.github.com>, 2021-03-03 16:14:19 +0000,11670, add zstd fast help option compression property value doe work expected documented manpage reviewed brian behlendorf behlendorf1 llnl.gov signed jake howard git close 11670,,
458,bedbc13daa6dfe9e0221bfadb8d8db2378deaacc,ssrikanth <75025422+nssrikanth@users.noreply.github.com>, 2021-03-02 23:57:27 +0530,11588, cancel trim initialize faulted non writeable vdevs device actively trimming initializing becomes faulted therefore longer writable cancel active trim initialization device merely taken offline zpool offline stop operation cancel device brought back online operation resumed possible reviewed brian behlendorf behlendorf1 llnl.gov authored brian behlendorf behlendorf1 llnl.gov authored vipin kumar verma vipin.verma hpe.com signed srikanth hpe.com close 11588,,
459,2e160dee97a4badbc318561f76ea56451c916d2f,ndriy Gapon <avg@FreeBSD.org>, 2021-02-28 03:23:09 +0200,11654, fix assert freebsd specific dmu_read_pages function three similar piece code read behind page requested page read ahead page three piece assert ensure page mapped later assert relaxed require page mapped writing done two place three change fix third piece read ahead reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed andriy gapon avg freebsd.org close 11654,,
460,3e73ea0c10df0a6ac62ce076ba8d6dad835d5d4b,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-27 17:19:50 -0800,11649, zts several trim test based initialize test adapted trim test intended one test overlooked actually never adapted update accordingly reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11649,,
461,03ef8f09e1d2854afe1436b897b81bac872f1be7,artin MatuÅ¡ka <mm@FreeBSD.org>, 2021-02-28 02:16:02 +0100,11653, add missing check unsupported feature 35ec517 become possible import zfs pool witn active org.illumos edonr feature freebsd leading panic addition zpool status reported pool without edonr upgradable zpool upgrade reported edonr list upgradable feature reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed martin matuska freebsd.org close 11653,,
462,778fa36ee79bc8887f3b4bb2c3bb09784a3fb33c,oleman Kane <ckane@colemankane.org>, 2021-02-22 21:18:41 -0500,11639, linux 5.12 compat replace bio_ _io_acct disk_ _io_acct bio_ _acct function became gpl export cause kernel module refuse compile replaces code alternate function call disk_ _io_acct interface gpl export change added kernel commit  reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11639,,
463,d939930fccbf7382c3525bba59cc04e9afc28fdc,oleman Kane <ckane@colemankane.org>, 2021-02-22 21:07:51 -0500,11639, linux 5.12 compat bio bi_disk member moved struct bio member bi_disk moved underneath new member named bi_bdev attempt reference bio bi_disk need become bio bi_bdev bd_disk reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11639,,
464,8e43fa12c571878f32119122771888ab9092a75a,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-24 10:01:00 -0800,11647, fix deadlock call may block waiting txg sync therefore important release scl_config read lock holding call failure result txg_sync thread getting blocked waiting lock result deadlock reviewed mark maybee mark.maybee delphix.com reviewd srikanth hpe.com signed brian behlendorf behlendorf1 llnl.gov close 11647,,
465,75a089ed34befb8d11df9be92a4438cc49554bf6,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-24 10:00:21 -0800,11585, fix overly broad locking calling vdev_free requires acquire spa config scl_state_all lock scl_all lock particular need need avoid taking scl_config lock included scl_all writer since lead deadlock txg_sync_thread may block taking scl_config lock reading detects pending writer reviewed igor kozhukhov igor dilos.org reviewed mark maybee mark.maybee delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11585,,
466,3ee4e6d8b7925d3b83dd7745e873d27983f9e995,ony Hutter <hutter2@llnl.gov>, 2021-02-24 09:58:46 -0800,11637, vdev_id fix partition regular expression given device name old vdev_id script would extract text partition number appends part partition number name giving vdev name like part5 work fine name like 2p5 work name multipath name like mpatha case incorrectly match mpatha giving vdev name like partatha patch fix issue making partition regex match stricter reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 11637,,
467,1dfc82a14ed538992f5c37a152995e93ede10469,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-24 09:57:18 -0800,11638, linux increase max nvlist_src size linux increase maximum allowed size src nvlist passed dev zfs ioctl originally set maximum kmalloc since time converted vmalloc longer hard limit desirable zfs send recv allow larger nvlists snapshot sent signed brian behlendorf behlendorf1 llnl.gov close 6572 close 11638,,
468,f01eaed4556623b63c414fee9085ae27d457fe46,rakash Surya <prakash.surya@delphix.com>, 2021-02-24 09:52:43 -0800,11023, add upper bound slop space calculation change modifies behavior determine much slop space use pool upper limit default upper limit 128g configurable via tunable reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 11023,,
469,5156862960fad12d7f9c8b57c01419c2875d7566,yan Moeller <ryan@iXsystems.com>, 2021-02-24 12:51:10 -0500,11636, wrap bare einval return set_error reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11636,,
470,94fa1c3d966caf483df7a1c1a00551b8c804c6cc,yan Moeller <ryan@iXsystems.com>, 2021-02-24 12:49:59 -0500,11633, force symlink creation zpool.d compat link gmake install fails zpool.d compat link already exist force symlinks recreated already present reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11633,,
471,b9c07ec71b205c034e63f34fa3546437ea766b3b,edric Maunoury <38213715+cedricmaunoury@users.noreply.github.com>, 2021-02-24 18:48:58 +0100,11608, doall send without fromsnap behavior null fromsnap inadvertently changed doall send send recv logic libzfs updated restore previous behavior correcting include snapshot nvlist case reviewed brian behlendorf behlendorf1 llnl.gov signed cedric maunoury cedric.maunoury gmail.com close 11608,,
472,9312e0fd1e162094ba2470408878879fa24eeaf7,dam D. Moss <c@yotes.com>, 2021-02-20 20:23:10 -0800,11627, fix error message zfs module already unloaded using zfs linux fail inaccurate message zfs module already unloaded deal case module already unloaded use_count empty string reviewed brian behlendorf behlendorf1 llnl.gov signed adam moss yotes.com close 11627,,
473,11f2e9a491baa2ae3fc00f6b8b892fa91a852ca1,bynite <52733326+fbynite@users.noreply.github.com>, 2021-02-20 19:19:20 -0900,11623, vdev_ops try call vdev_op_hold vdev_op_rele null prevents panic slog add removal root pool followed zpool scrub slog removed hole take place vdev_ops hole vdev_hole_ops defines handler function vdev_op_hold vdev_op_rele null bug reported illumos freebsd different trigger freebsd report though credit patch patrick mooney pmooney pfmooney.com obtained illumos gate commit external issue http www.illumos.org issue 12981 external issue http bugzilla show_bug.cgi 252396 reviewed brian behlendorf behlendorf1 llnl.gov signed rob wing rob.fx907 gmail.com close 11623,,
474,7e56b05058c8d2af2b5bc8b0b1475d9fdd6cd7dc,ony Hutter <hutter2@llnl.gov>, 2021-02-20 20:17:45 -0800,11617, better enclosure support multpathed disk several underlying path disk example multipath disk may made path dev sda sdb sdc sdd many enclosure underlying sysfs path symlink back enclosure device entry like slot1 used statechange led.sh script set clear fault led disk zpool status however enclosure underlying path may symlinks back enclosure device maybe two four might patch update favor returning path symlinks back enclosure device rather returning first path reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 11617,,
475,c0801bf35a09623a8f4422530550266c9fa143b5,rian Atkinson <batkinson@lanl.gov>, 2021-02-20 21:16:50 -0700,11622, cleaning uio header making uio_impl.h common header interface linux freebsd share common header file also help reduce code duplication zfs_uio_t reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 11622,,
476,52cb284f7b7e2e8eb389c2f62d133ca4e4d38832,hristian Schwarz <me@cschwarz.com>, 2021-02-18 12:20:09 +0100,11602, ztest propagate zdb child process think behavior user expect future work separate flag e.g. specify separate set_global_vars zdb child ztest child reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed christian schwarz cschwarz.com close 11602,,
477,2801e68d1bedaedd76c433a7cf6eafd304bc7ccf,hristian Schwarz <me@cschwarz.com>, 2021-02-16 11:14:44 +0100,11602, ztest fix calling set_global_var child process without set_global_var child process option provides little use change set_global_var called side effect getopt processing happens parent ztest process change limit set option set make available child future work support arbitrary option count length reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed christian schwarz cschwarz.com close 11602,,
478,edc508ac0b80996d872f3c5d86c2ee49b519a661,hristian Schwarz <me@cschwarz.com>, 2021-02-16 12:27:48 +0100,11602, libzpool set_global_var refactor modify arg also fix leak dlopen handle error case reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed christian schwarz cschwarz.com close 11602,,
479,b5fffa1d294f5e17e8e4fdf34a4fec99c374c586,hristian Schwarz <me@cschwarz.com>, 2021-02-15 13:02:32 +0100,11602, libzpool set_global_var fix endianness handling fix zdb without patch get error setting global variable supported little endian system using zdb amd64 machine reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed christian schwarz cschwarz.com close 11602,,
480,64e0fe14fff465604952d576051ca80c2f1be898,yan Moeller <ryan@iXsystems.com>, 2021-02-20 01:34:33 -0500,11613, restore freebsd resource usage accounting add zfs_racct_ interface platform dependent read write accounting reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11613,,
481,03e02e5b561f7f60597dd905414eb476610740cc,on Brady <don.brady@delphix.com>, 2021-02-19 23:33:15 -0700,11609, checksum error may counted fix regression seen issue 11545 checksum error counted showing zpool event reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 11609,,
482,e7adccf7f537a4d07281a2b74b360154bae367bc,ark Johnston <markjdb@gmail.com>, 2021-02-18 18:51:20 -0500,11612, freebsd disable use hardware crypto offload driver first crypto request completion handler contains bug fails reset fs_done correctly request completed problem asynchronous driver second hardware driver input constraint zfs doe satisfy instance ccp apparently requires aad length aes gcm multiple cipher block size qat aes gcm aad length may longer 240 byte freebsd generic crypto framework mechanism automatically fall back software implementation hardware driver process request zfs doe tolerate error plan implement fallback mechanism freebsd 13.0 approaching simply disable use hardware driver  reviewed ryan moeller ryan ixsystems.com reviewed alexander motin mav freebsd.org signed mark johnston markj freebsd.org close 11612,,
483,778869fa139ab72ed557e7455e4f1126684f2625,ndriy Gapon <avg@FreeBSD.org>, 2021-02-18 23:53:05 +0200,11607, fix never calling happens one mistake call current sm_done incremented sm_done one increment parameter appears logic became obsolete commit a10d50f999511 parallel zfs mount freebsd observe zfs mount print example null 201 248 happens never called change output becomes correct mounting zfs filesystems 209 248 reviewed brian behlendorf behlendorf1 llnl.gov signed andriy gapon avg freebsd.org close 11607,,
484,bf156c966bd68aef3b08716f9e81238a4571236a,yan Libby <rlibby@FreeBSD.org>, 2021-02-17 21:39:13 -0800,11614, remove unused remove function become unused refactoring  reviewed ryan moeller ryan ixsystems.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan libby rlibby freebsd.org close 11614,,
485,658fb8020f0501435516baeea7004575d640649b,olm <colm@tuatha.org>, 2021-02-18 05:30:45 +0000,11468, add compatibility property zpool feature set property allow set feature specified compatibility specific version release external system influence behavior zpool upgrade zpool create initial man page change test case included brief synopsis zpool create compatibility legacy file file ... pool vdev ... compatibility disable compatibility mode enable feature compatibility legacy request feature enabled compatibility file file ... read feature specified file feature present file enabled resulting pool filename may absolute relative etc zfs compatibility.d usr share zfs compatibility.d etc checked first affect zpool create zpool upgrade zpool status abi change libzfs new function load parse compat set add typedef compatibility parse status add pool property enum add pool status enum initial set base compatibility set included cmd zpool compatibility.d makefile cmd zpool modified install pkgdatadir compatibility.d create symbolic link reasonable set alias reviewed ericloewe reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed colm buckley colm tuatha.org close 11468,,
486,35ec51796f0aa8d4fe322b48e7d1d5a65e38a4ce,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-17 08:14:51 -0800,11468, freebsd disable edonr rather conditionally compiling edonr code freebsd update indicate feature unsupported ensures spa feature defined every platform even supported reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11605 issue 11468,,
487,aef1830f932c3499cb5430b4c1bd9d21f87808f3,osÃ© Luis Salvador Rufo <salvador.joseluis@gmail.com>, 2021-02-17 06:51:46 +0100,11600, support uclibc test compilation two issue allow zfs compiled using uclibc backtrace const patch add uclibc conditionals way already glibc backtrace remove external param used whole project reviewed brian behlendorf behlendorf1 llnl.gov signed josã luis salvador rufo gmail.com close 11600,,
488,436ab35a53bad83c3dc4b8f1dc2b6ad00bd5e9ec,yan Moeller <freqlabs@FreeBSD.org>, 2021-02-15 13:15:50 -0500,11592, make inline abd predicate compatible freebsd zfsd fails build e2af2acce3 due strict type checking error implicit conversion bool boolean_t inline predicate definition abd.h use conditionals return correct value type function reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed ryan moeller freqlabs freebsd.org close 11592,,
489,c1c31a835a7c57dac7d9a6026f075c0bd7f43fa6,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-10 10:11:21 -0800,11586, linux 5.11 compat meta increase linux maximum version meta file 5.11 required compatibility patch merged reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11586,,
490,677cdf78652ce8ae7cd0ed8531d39725334972a7,rshad Hussain <arshad.super@gmail.com>, 2021-02-10 02:34:09 +0530,11526, vdev_id support daisy chained jbods multipath mode within function sas_handler userspace command like usr sbin multipath replaced sourcing device detail within sysfs reduced significant amount overhead processing time multiple jbod enclosure order sourced bsg driver sys class enclosure isolate chassis top level expanders dynamically indexed based host channel multipath subordinate disk member device processed additionally added mixed mode slot identification environment zfs server system may contain disk slot expander direct connect hba attached external jbod expander different slot identifier method tested  testing performed amd epyc based dual server high availability multipath environment multiple hbas per zfs server four jbods two primary jbods multipath cross connected two zfs server secondary jbods daisy chained primary jbods using aligned expander channel jbod expandera jbod expandera jbod expanderb jbod expanderb etc pool created exported imported imported globally zpool import dev disk vdev low level udev debug output traced isolate resolve error result  initial testing previous version change showed reliance userspace utility like usr sbin multipath usr bin lsscsi exacerbated increasing number disk jbods four disk jbods 240 disk time process udevadm trigger minute second nearly cpu core utilization switching reliance userspace utility sysfs version udevadm trigger processing time reduced 12.2 second negligible cpu load patch also fix shellcheck complains reviewed gabriel devenyi gdevenyi gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov authored jeff johnson jeff.johnson signed jeff johnson jeff.johnson signed arshad hussain arshad.hussain close 11526,,
491,fc273894d2eda03a9317f7e28b9ce2816bb95db4,hng300 <khng300@gmail.com>, 2021-02-10 03:17:29 +0800,11580, rename platform agnostic name besides function prototype moved include sys zfs_znode.h function also used common code reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed khng300 gmail.com sponsored freebsd foundation close 11580,,
492,4f22619ae3ab62c60ae718bd911eb2d988ae168d,leber TarcÃ­sio <klebertarcisio@yahoo.com.br>, 2021-02-09 16:14:59 -0300,11575, add assert clarify code first time loop prevdb prevhdl null set prevdb checked add assert make clear prevhdl must set prevdb reviewed brian behlendorf behlendorf1 llnl.gov signed kleber klebertarcisio yahoo.com.br close 10754 close 11575,,
493,f8ce8aed0c8d1bf0b18f461863e68eae74a83585,ntonio Russo <aerusso@aerusso.net>, 2021-02-08 10:15:05 -0700,11576, set file mode zfs_write 3d40b65 refactored zfs_vnops.c shared much code verbatim linux bsd successful write suid sgid bit reset mode written stored newmode linux propagated memory inode znode updated sa_update 3d40b65 accidentally removed initialization newmode happened occur line inode update moved function uninitialized newmode saved disk leading crash stat file addition merely incorrect file mode reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11474 close 11576,,
494,7c64ee9e7731b7ad39e300b4a422892dbe8d4b23,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-02-05 20:25:22 +0100,11568, zfs import cache scan change condition filenotempty pool exported zfs generate empty cache file cause import service fail sub optimal since mean dracut fails necessary run zpool import boot delete file regenerate reinstall initrd resolve issue treating zero length cache file missing cache file aligns behavior zpool command reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed ahelenia ziemiaå ska nabijaczleweli close 11568,,
495,32366649d3164e994def7e5a26765ca6bc1e2315,ssrikanth <75025422+nssrikanth@users.noreply.github.com>, 2021-02-05 22:00:50 +0530,11564, fixed issue processing ec_dev_remove event pool guid vdev guid received call zfs_retire_recv normally non zero however later method may unconditionally reset zero code intended handle multipath spare l2arc vdevs result ec_dev_remove handled reviewed brian behlendorf behlendorf1 llnl.gov authored vipin kumar verma vipin.verma hpe.com signed srikanth hpe.com close 11564,,
496,d66f017c1775952a1923031039fdfb1ac28a34f4,rian Behlendorf <behlendorf1@llnl.gov>, 2021-02-04 09:56:28 -0800,11565, zfs list.8 clarify listing snapshot clarify include snapshot zpool list output referencing full name listsnapshots pool property zpool list snapshot option reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11562 close 11565,,
497,84268b099b96ea446d890bfe3946547ad7d08097,hristian Schwarz <me@cschwarz.com>, 2021-01-25 13:13:45 +0100,11521, document monotonicity dmu_tx_assign txg_hold_open expand comment make clear exactly guaranteed dmu_tx_assign txg_hold_open additionally update comment refers txg_exit reference  reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 11521,,
498,9eee7fce3b52036067a78859df729715a5eb8165,eorge Melikov <mail@gmelikov.ru>, 2021-01-27 15:18:01 +0300,11554, zts report.py ignore skipped test github reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11554,,
499,aa743acc79564414e8c2368e86ba5c04efb6efdd,eorge Melikov <mail@gmelikov.ru>, 2021-01-26 15:01:44 +0300,11554, add ubuntu functional test runner reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11554,,
500,1051499aeffc35b87b5a7d37f792838d42ee5336,eorge Melikov <mail@gmelikov.ru>, 2021-01-26 15:01:19 +0300,11554, rename zfs test workflow reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11554,,
501,96a6629872bd5192b661ee90de668986c536e67d,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-30 10:06:14 -0800,11543, remove unused wrapper compatibility code longer needed used code dropped part commit 83b91ae1 take care oversight remove reviewed brian atkinson batkinson lanl.gov signed brian behlendorf behlendorf1 llnl.gov close 11543,,
502,2d4bbd14fca11fd5d990fca537d2f7cc9b32d6a7,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-30 10:04:42 -0800,11535, abd child parent relationship doe need tracked abd currently track parent child relationship applies abd_get_offset abd_borrow_buf however nothing depends knowing relationship used consistency check verify destroying abd still use creating destroying abd frequently performance impact maintaining data structure particular atomic increment decrement operation measurable commit remove verification code production build keep zfs_debug set reviewed brian behlendorf behlendorf1 llnl.gov reviewed brian atkinson batkinson lanl.gov signed matthew ahrens mahrens delphix.com close 11535,,
503,cf0a6dd3ede987212cad7f7c0afed64e54bd9975,ssrikanth <75025422+nssrikanth@users.noreply.github.com>, 2021-01-29 06:30:26 +0530,11355, added extra check replace faulted vdev distributed spare zed zfs_retire agent added check handle distributed spare replacement faulted vdev also reviewed brian behlendorf behlendorf1 llnl.gov authored vipin kumar verma vipin.verma hpe.com signed mark maybee mark.maybee hpe.com close 11354 close 11355,,
504,2993698eb3dfc0b462d216b2ea8bbe7bdb06f841,rian Atkinson <batkinson@lanl.gov>, 2021-01-28 17:54:12 -0700,11542, fixing gang abd adding another gang originally applied fix 11539 fix parent child reference gang abd free however take account still need make sure update child reference function well order resolve removed decreasing gang abd size abd_free_gang well moved back original placeent abd_free reviewed mark maybee mark.maybee delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 11542,,
505,9f8c7e6a76a147cacc26dd0661d1a00da42bf405,eorge Melikov <mail@gmelikov.ru>, 2021-01-29 00:39:38 +0300,11541, zts add makefile test need included makefiles reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11541,,
506,f8c0d7e1f6a2c7efebea004afbab436d8d20b1e7,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-28 09:28:20 -0800,11536, fix gang abd allocate bio sufficient number iovec process zio i.e nr_iovecs bi_max_vecs enough iovec bio additional bio allocated however sub optimal code path particular requires several abd call abd_bio_map_off walk constituent abd page gang child looking offset gang abd return number iovec needed first constituent rather sum constituent within requested range always estimate required number iovec cause always need several bio end result usually gang abd occasionally bio needed commit fix handling gang abd correctly determine many iovec needed adding number iovec gang child requested range reviewed mark maybee mark.maybee delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed brian atkinson batkinson lanl.gov signed matthew ahrens mahrens delphix.com close 11536,,
507,0ae184a6baaf71e155e9b19af81b75474622ff58,eorge Amanakis <gamanakis@gmail.com>, 2021-01-28 18:20:03 +0100,11537, avoid updating l2arc device header unnecessarily write buffer cache device evict hand advanced update cache device header reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 11522 close 11537,,
508,416015ef544183aa1310d7353f28b369f8b89928,rian Atkinson <bwa@g.clemson.edu>, 2021-01-28 10:15:17 -0700,11539, removing abd parent child reference freeing abd moving call abd_free called abd free variant called necessary abd_free_gang adjusts abd_size gang abd parent child reference removed free ing gang abd refcount adjusted correctly parent child also removed stray abd_put comment changed abd_free_gang reviewed mark maybee mark.maybee delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 11539,,
509,393e69241eea8b5f7f817200ad283b7d5b5ceb70,llan Jude <allan@klarasystems.com>, 2021-01-28 00:36:01 -0500,11027, add zdb dataset object file output use zdb poolname vdev offset lsize psize flag extract individual dvas vdev would handy able copy entire file pool given file object number add support copy content file useful debugging recovery reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 11027,,
510,b2c5904a7839b93fa30bba261a5981161acea336,ark Maybee <mark.maybee@delphix.com>, 2021-01-27 22:31:51 -0700,11464, revert special case code pre hashtable nvlist era hash table added top nvlist code case nvlist allocation changed fnvlist_alloc nvlist_alloc avoid expensive nv_unique_name check longer necessary change reverted consistent code case change also reduce number iteration reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed mark maybee mark.maybee delphix.com close 11464,,
511,2921ad6cba54522a33fc95f90237c6e5ead80de7,aul Dagnelie <paulcd2000@gmail.com>, 2021-01-27 21:29:58 -0800,11530, fix zrele race zrele_async cause hang race condition zfs_zrele_async checking would one evict inode lead txg sync deadlock instead calling iput directly attempt perform atomic decrement unless would set i_count value zero case dispatch call iput run later prevent deadlock occurring reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 11527 close 11530,,
512,b8e6401b794be9e8188d595d64f98b560d50cb6e,eorge Melikov <mail@gmelikov.ru>, 2021-01-28 04:33:30 +0300,11534, zts pool_state test check pool existence cleanup scsi_debug module test must skipped case cleanup routine prepared absent pool reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11534,,
513,6b2e7203ae5c90fb9fb1ef353fdc18372f36d11f,lan Somers <asomers@FreeBSD.org>, 2021-01-26 20:39:28 -0700,11528, fix resource leak need destroy pthread mutex created http base view revision revision 262912 obtained freebsd sponsored spectrum logic corporation reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11528,,
514,cf0977ad72e97ae7d2aad1f0b6a2fe1a0209bbe7,lan Somers <asomers@FreeBSD.org>, 2021-01-12 15:25:52 -0700,11470, parallelize vdev_validate runtime vdev_validate dominated disk access speed validating vdevs parallel using taskq sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11470,,
515,67874d5487f74c11503cb4f195c7a658f628b168,lan Somers <asomers@FreeBSD.org>, 2021-01-12 14:59:56 -0700,11470, read disk label concurrently similar already sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11470,,
516,a0e01997ec013fa24a570a36689235ee6c21d9e1,lan Somers <asomers@FreeBSD.org>, 2021-01-11 17:00:19 -0700,11470, parallelize vdev_load metaslab_init slowest part importing mature pool must repeated hundred time top level vdev speed dominated serialized disk access lead import time hour pool many top level vdevs spinny disk speed import using taskqueue parallelize vdev_load across top level vdevs also requires adding mutex protection mc_histogram field unprotected code first written illumos 4976 4984 metaslab improvement openzfs lock added though unclear exactly field supposed protect case vdev_load parallelized code attempted concurrent access field sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11470,,
517,dfb44c500e0b05b2e3ff058e6e5cbf2431d4f80b,lan Somers <asomers@gmail.com>, 2021-01-26 17:17:11 -0700,11529, fix man page link zfs program.8 zfs program.8 orphan link fix http base view revision revision 360080 obtained freebsd reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed alan somers asomers gmail.com close 11529,,
518,0e6c493fec53c9a7268aaa73d9b99c3717d5d96f,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 12:54:34 -0800,11508, cppcheck integrete cppcheck order cppcheck perform proper analysis need aware source compiled source file include path file extra defines etc needed information available makefiles leveraged generic cppcheck makefile target let add one additional minor change removing cppcheck file cppcheck 2.3 change appears longer needed inline suppression also removed since appear needed add back turn needed older version cppcheck added ax_count_cpus macro detect configure time many processor available order run multiple cppcheck job value also used replacement nproc executing kernel interface check phony line moved rules.am file included top makefile.am convenient becase allows use syntax add phony target one upside integration worth mentioning allows make cppcheck run directory check subtree moment cppcheck run freebsd specific kernel source cppcheck freebsd target need implemented testing freebsd support reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11508,,
519,a06ba74a1e5f54f03cc59daeb350f456bbe9e91d,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 21:26:41 -0800,11508, cppcheck return value always identical condition return expression return value always reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11508,,
520,2cdd75bed7aaa4737a901bd30d8daad479977756,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 21:24:08 -0800,11508, cppcheck remove redundant asserts assert passed pointer null appears pointer already dereferenced remove redundant check reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11508,,
521,6fc1ce07239f17a1262e87a334325d60da34d7a1,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 16:17:16 -0800,11508, cppcheck resolve double free double free reported realloc failure branch false positive resolved cppcheck 2.4 benefit older version supress warning http ticket 9292 reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11508,,
522,7454d2bb8d860bb49353c8b60dc980de82296f73,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 15:03:56 -0800,11508, cppcheck zpool_main.c possible null pointer dereference explicitly check null satisfy cppcheck val never null passed printf look like false positive since is_blank_str never take false conditional branch passed null harm adding extra check reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11508,,
523,62d4287f279a0d184f8f332475f27af58b7aa87e,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-26 16:05:05 -0800,11510, raidz2 fails heal silently corrupted parity bad disk scrubbing non sequential resilvering correcting checksum error using raidz parity zfs heal incorrect raidz parity overwriting example disk silently corrupted number failure tolerated e.g raidz2 zpool scrub detect heal bad state disk including parity way subsequent failure fully protected raidz2 raidz3 block silent damage parity sector also damage silent known data sector case parity healed problem noticed scrubbing pool twice assuming damage concurrent scrub first scrub fix silent damage second scrub clean zpool status report checksum error disk bug encountered second scrub repair silently damaged parity first scrub failed repair checksum error reported second scrub since first scrub repaired damaged data bug encountered second scrub subsequent scrub two necessary root cause problem code inadvertently added draid change incorrect code cause parity healing aborted damaged data rc_error data disk present rc_tried check necessary call correct data may reconstructed using parity verified checksum commit fix problem removing incorrect check  reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11489 close 11510,,
524,d7265b330954fe844958642c5f61e790c58442d5,ill Andrews <will@firepipe.net>, 2021-01-26 15:14:04 -0600,11518, zts zpool_export test improvement refactor cleanup routine common kshlib func require physical disk test use file reviewed brian behlendorf behlendorf1 llnl.gov signed andrew firepipe.net close 11518,,
525,caedada66e1cb503a2e1d5af6e93280f88d913a5,orenz HÃ¼depohl <dev@stellardeath.org>, 2021-01-26 21:14:22 +0100,11500, dracut fix race condition load key import zfs load key.sh called dracut pre mount.service unit explicit dependency zfs import.target way pool yet imported zfs load key.sh finish without ever seeing relevant pool reviewed brian behlendorf behlendorf1 llnl.gov signed lorenz hã¼depohl dev close 11500,,
526,f4f50a70488ebad3fa96c2fe4142924215733113,ill Andrews <will@firepipe.net>, 2021-01-25 17:04:11 -0600,11514, refactor common exit point create common exit point long function avoids missing step failure work helpful planned forced pool export change reviewed brian behlendorf behlendorf1 llnl.gov signed andrew firepipe.net close 11514,,
527,35ac0ed1fd78a820474658f34dd7661af1bf635f,ill Andrews <will@firepipe.net>, 2020-10-11 15:11:06 -0500,11517, zts improve output clarity instead failing indicate expected actual value source note test using failed earlier version changeset information helped find cause reviewed brian behlendorf behlendorf1 llnl.gov signed andrew firepipe.net close 11517,,
528,a57acbb627b20dc911cb83dd8340da0545745de0,ill Andrews <will@firepipe.net>, 2021-01-25 16:38:19 -0600,11516, zts remove duplicate zfs_receive identical definition already reviewed brian behlendorf behlendorf1 llnl.gov signed andrew firepipe.net close 11516,,
529,de1a6cc38743b5542252a1179cf519dfc3485508,ill Andrews <will@firepipe.net>, 2020-10-11 15:08:56 -0500,11515, logapi cat output file instead printing avoids globbing together multiple line log happen specify logapi_debug want see signed andrew firepipe.net signed brian behlendorf behlendorf1 llnl.gov close 11515,,
530,a4134da2b2b2917fe516a5fd396b6330656c181a,atthew Macy <mmacy@freebsd.org>, 2021-01-25 11:18:28 -0800,11512, spl taskq make sure thread tsd hash entry cleared like thread created thread_create need call thread_exit properly clean particular ensures tsd hash thread cleared reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11512,,
531,fd95af8dd4ca2857875551f3bed5848cb06362be,lan Somers <asomers@gmail.com>, 2021-01-24 17:02:45 -0700,11502, speed zpool import presence many zvols default freebsd doe allow zpools backed zvols changed sysctl sysctl set kernel doe attempt read zvols looking vdevs zpool command still doe change brings zpool command line kernel behavior speed zpool import already imported pool many zvols zvol many snapshot http base view revision revision 357235 http bugzilla show_bug.cgi 241083 http d22077 obtained freebsd reported martin birgmeier d8znecfg aon.at sponsored axcient reviewed ryan moeller ryan ixsystems.com reviewed alexander motin mav freebsd.org signed alan somers asomers gmail.com close 11502,,
532,8887760aefc46dc240caca0b15790cda1d071ca3,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2021-01-25 00:57:51 +0100,11509, zfsprops.8 fix default value reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11509,,
533,a4acc47e4b52746233479716570d3a63e1dad29f,yan Moeller <ryan@iXsystems.com>, 2021-01-24 18:56:59 -0500,11503, zts use swapctl list swap device freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11503,,
534,e2870fb24aff7a002d06022b2f264349a75458e6,rshad Hussain <arshad.super@gmail.com>, 2021-01-24 05:22:29 +0530,11498, vdev_id add error message config missing observed vdev_id exists silently config file missing patch add error message case vdev_id called without default config make end user observe exit message easily patch  cmd vdev_id vdev_id  patch  cmd vdev_id vdev_id error config file etc zfs vdev_id.conf found  reviewed brian behlendorf behlendorf1 llnl.gov signed arshad hussain arshad.hussain close 11498,,
535,4a90d4d6fccfa72b77e32ce24eed65917973139e,olm <colm@tuatha.org>, 2021-01-23 23:49:32 +0000,11507, fix two minor lint error cppcheck fix two minor error reported cppcheck module zfs abd.c add non null assertion prevent null dereference warning module zfs arc.c change try variable pas avoid reserved word reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed colm buckley colm tuatha.org close 11507,,
536,5aa69a57da86a38d49cca1623b0c79764f8ad3e9,lexander Motin <mav@FreeBSD.org>, 2021-01-23 18:45:27 -0500,11501, relax assertion follow commit 624222a value asserted instead previous change reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 11501,,
537,716408f56043981365488f65f924a2647af03b21,atthew Macy <mmacy@freebsd.org>, 2021-01-23 15:42:42 -0800,11497, add basic io_uring test provide basic test coverage io_uring reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11497,,
538,1c943451031b3c437110ecbb2f6a56d6ae0caa9f,yan Moeller <ryan@iXsystems.com>, 2021-01-21 23:20:14 +0000,11458, freebsd upstream change vfs interface set virf_mountpoint flag snapshot mountpoint authored mateusz guzik mjg freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11458,,
539,0e9bcd5d4fc9e34e3808fdcbae8ce547fd1668d5,att Macy <mmacy@mattmacy.io>, 2021-01-12 16:22:29 -0800,11458, freebsd fix head build conditionally remove fdsync defines reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11458,,
540,76e1f78d4b5f759f8972dc14b1e04cdce364d548,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-22 09:47:06 -0800,11492, add supported feature pool creation creating pool feature supported user kernel space enabled furthermore improve error message attempting create add draid vdev draid feature supported kernel module reviewed mark maybee mark.maybee delphix.com reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11492,,
541,aa755b35493a2d27dbbc59f1527c6c93788b28f6,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-21 15:12:54 -0800,11389, set aside metaslab zil block mixing zil normal allocation several problem zil allocation allocated written disk second later freed leaf behind hole free segment zil block used increase fragmentation negatively impact performance moderate load zil allocation 128kb pool fairly fragmented may many free chunk size cause zfs load metaslabs locate free segment 128kb loading happens synchronously zil_commit take around second even metaslab spacemap cached arc concurrent synchronous operation filesystem must wait metaslab loading cause significant performance impact pool fragmented may zero free chunk 128kb case zil fall back txg_wait_synced enormous performance impact problem eliminated using dedicated log device slog even one performance characteristic normal device change set aside one metaslab top level vdev preferentially used zil allocation vdev_log_mg allocation perspective similar dedicated log device eliminates mentioned performance problem log zil block allocated following location one tried order allocation succeeds dedicated log vdevs aka slog spa_log_class embedded slog metaslabs metaslabs normal vdevs space required embedded slog metaslabs usually 0.5 1.0 pool come existing 3.2 slop space available user data ssd system 4tb storage fragmentation capacity recordsize testing show performance increase random sync writes even fragmented system hit problem call txg_wait_synced performance improvement arbitrarily large 100x reviewed serapheim dimitropoulos serapheim delphix.com reviewed george wilson gwilson delphix.com reviewed brady don.brady delphix.com reviewed mark maybee mark.maybee delphix.com signed matthew ahrens mahrens delphix.com close 11389,,
542,984362a71ebef106d05a8f68f241c5c610ff6547,orenz HÃ¼depohl <dev@stellardeath.org>, 2021-01-21 21:59:24 +0100,11487, dracut support usr bin systemctl path opensuse initrd systemctl usr bin check path well reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed lorenz hã¼depohl dev close 11487,,
543,0ae733c7a42d91b0955ca5394b4dba4eb9c76dca,ntonio Russo <aerusso@aerusso.net>, 2021-01-21 13:58:24 -0700,11485, install zgenhostid sbindir zgenhostid used modify create etc hostid administrative tool currently installed bindir system utility typically placed sbin modify installation directory zgenhostid additionally track change use dracut rpm installation authored ð½ð nabijaczleweli authored antonio russo aerusso aerusso.net reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11485,,
544,2d8f72d76c8b928c51d38d50a3f4f75144db3f85,lan Somers <asomers@FreeBSD.org>, 2021-01-21 13:55:54 -0700,11469, zpool speed importing large pool 11469 ioctl return nvlist kernel preallocated buffer userland userland must guess large buffer undersizes must reallocate try cost lot time large pool openzfs commit 28b40c8a6e3 set guess without explanation system small experiment better multiplier know calculate theoretically sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk axcient.com signed alan somers asomers gmail.com close 11469,,
545,e50b5217e7a85f1466edf88d5f3ea5aed0c2fd22,lan Somers <asomers@FreeBSD.org>, 2021-01-13 10:00:12 -0700,11467, libzutil optimize aio read label parallel instead sequentially originally committed http src commit obtained freebsd sponsored spectrum logic axcient reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk axcient.com signed alan somers asomers gmail.com close 11467,,
546,ec40ce84058628ca943d5fe5328d8a1df8198616,lan Somers <asomers@FreeBSD.org>, 2021-01-13 09:30:48 -0700,11467, libzutil read extraneous data need full label including uberblocks need vdev_phys_t reduces half amount data read check label speeding zpool import zpool labelclear etc originally committed http src commit obtained freebsd sponsored spectrum logic corp axcient reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk axcient.com signed alan somers asomers gmail.com close 11467,,
547,83b91ae1a4faeaa720dc93a7660b755a04632f68,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-21 10:43:39 -0800,11484, linux 5.10 compat restore custom part commit 1c2358c1 custom code removed favor using generic kernel provided interface unfortunately turn linux 4.7 kernel function would ever fault first iovec iov_iter result uiomove_iov may hang waiting page commit effectively restores custom page code linux 4.9 earlier kernel contain troublesome version signed brian behlendorf behlendorf1 llnl.gov close 11463 close 11484,,
548,d0cd9a5cc65e39feab5631ad4b5c09cf004ad3f0,rian Atkinson <batkinson@lanl.gov>, 2021-01-20 22:27:30 -0700,11438, extending freebsd uio struct freebsd struct uio typedef uio_t order extend struct outside definition struct uio struct uio embedded inside uio_t struct also renamed uio_ interface zfs_uio_ make clear zfs interface reviewed ryan moeller ryan ixsystems.com reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 11438,,
549,e2af2acce3436acdb2b35fdc7c9de1a30ea85514,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-20 11:24:37 -0800,11439, allow caller allocate provide abd_t struct abd_get_offset_ routine create abd_t reference another abd_t allocate page buffer workload routine may called frequently create many abd_t representing small piece single large abd_t particular upcoming raidz expansion project make heavy use routine commit add ability caller allocate provide abd_t struct variant abd_get_offset_ eliminates cost allocating abd_t performing accounting associated raidz draid code rc_abd reference zio abd upcoming raidz expansion project leverage infrastructure increase performance read post expansion around additionally interface around creating destroying abd_t cleaned significantly distinction abd_put abd_free eliminated type abd_t disposed abd_free reviewed brian atkinson batkinson lanl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com issue 8853 close 11439,,
550,03f036cbccdd8699f5fe8540ef317595a35bceb8,terlingjensen <5555776+sterlingjensen@users.noreply.github.com>, 2021-01-19 13:57:31 -0600,11462, apply path sanitizer mount still mangle prior util linux 2.36.2 file directory current working directory named dataset mount would prepend current working directory dataset eventually able drop workaround reviewed brian behlendorf behlendorf1 llnl.gov signed sterling jensen sterlingjensen close 11295 close 11462,,
551,f8c4d63a2660e07e8172372a753b582bd7c3c1c1,ntonio Russo <aerusso@aerusso.net>, 2021-01-19 12:53:35 -0700,11478, zts avoid piping special device described 11445 kernel interface kernel_ read write longer act special device zts zfs send receive tested piping device leading spurious failure positive test may mask error negative test permanent mechanism address deficiency developed clean output zts avoiding directly piping dev null dev zero dev zero input simply use pipe cat dev zero however dev null output shell semantics pipe failure mean zfs send error code masked successful cat dev null command execution case use temporary file test_base_dir output favor reviewed brian behlendorf behlendorf1 llnl.gov reviewed attila fã¼lã attila fueloep.org signed antonio russo aerusso aerusso.net close 11478,,
552,60a2434b295f395bbedcec2c4cd6a54530edf29a,yan Moeller <ryan@iXsystems.com>, 2021-01-14 12:53:09 -0500,11460, libzfs_sendrecv use fnv verify nvlist nvpair use verified variant nvlist nvpair function applicable reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed ryan moeller ryan ixsystems.com close 11460,,
553,a9eaae065bcb5c3375b2ce2c06908707f57fde3f,yan Moeller <ryan@iXsystems.com>, 2021-01-12 20:21:01 -0500,11454, ztest clean use assert verify try use appropriate assert verify variant ztest reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11454,,
554,8752f7e320115a1deaa4672c73293879c6d5d0f1,ntonio Russo <aerusso@aerusso.net>, 2021-01-12 18:20:02 -0700,11451, zts avoid race unmount test modifies file temporary test dataset repeatedly iteration preexisting dataset removed unmounted umount necessary add short delay forced unmount avoiding race prevent zfs destroy succeeding leading test failure reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11451,,
555,bea3fc71ae716797088b2bcc990cdbd4fac0fa89,yan Moeller <ryan@iXsystems.com>, 2021-01-11 12:30:33 -0500,11441, ztest use fnvlist_ instead verifying nvlist_ simplify ztest using fnvlist function verify success reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed ryan moeller ryan ixsystems.com close 11441,,
556,2ac90457f503e84a3acf8b7c368cd8e44677f7d3,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-11 09:29:25 -0800,11440, record ioctl elapsed time zpool history zfs ioctl change disk state e.g set property create snapshot destroy filesystem recorded zpool history printed zpool history performance diagnostic purpose would useful know long ioctls took run commit add functionality new member history nvlist additionally time recorded history log currently time history record written disk many case cli args logging ioctl logging happens asynchronously potentially many second operation completed commit change timestamp reflect history event created rather written disk reviewed mark maybee mmaybee cray.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11440,,
557,dc303dcf5b4230d3f53ba999ce3225fcd3b08943,atthew Ahrens <matthew.ahrens@delphix.com>, 2021-01-07 20:06:32 -0800,11397, assertion failed system low memory specifically arc_free_memory arc_sys_free i.e 16th ram free defer wakups case remain list even though arc_evict_count incremented past aew_count problem assumes waiter list count waiting yet reached however deferred wakeups may violate causing assert last aew_count arc_evict_count fail commit resolve issue new waiter use greater arc_evict_count last aew_count reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed george amanakis gamanakis gmail.com signed matthew ahrens mahrens delphix.com close 11285 close 11397,,
558,f11b09dec3d33ba11bc3bf7644bdde558d08ad76,atthew Macy <mmacy@freebsd.org>, 2021-01-07 10:41:27 -0800,11437, freebsd minor_t need signed recognized zfsdev_close set zs_minor avoid duplicate call destroy mix well current u_int used reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed matt macy mmacy freebsd.org close 11437,,
559,06346cc5b50bef7327f7c901b92cbadab7fd7265,rian Behlendorf <behlendorf1@llnl.gov>, 2021-01-02 16:55:55 -0800,11419, autoconf 2.70 compatibility several macro retired autoconf 2.70. update build system use new macro provided replace replaced ac_help_string as_help_string replaced ac_try_compile ac_lang_program replaced replaced ac_prog_libtool lt_init cpp defined zfs_ac_kernel really directly used like replace awk command extract kernel source version reviewed eli schwartz eschwartz archlinux.org signed brian behlendorf behlendorf1 llnl.gov issue 11413 close 11419,,
560,4ba8c6b584dc23b2f2e11682ff06ed664f41107e,oomas Soome <tsoome@me.com>, 2021-01-03 02:54:53 +0200,11417, cleanup_all leave pool root mounted pool root mounted zpool umount next test leave dataset mountpoint directory around next zfs mount fail error mount testpool directory empty reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 11417,,
561,064c2cf40ea367f0b7608a3e8b537f87190f52cb,onstantin Khorenko <khorenko@virtuozzo.com>, 2020-12-31 01:18:29 +0300,11411, kernel compat introduce iter enabled .direct_io via iovecs virtuozzo kernel starting 3.10.0 following configuration   let add implementation zpl_direct_io via zpl_aio_ read write case http bugs.openvz.org browse ovz 7243 reviewed brian behlendorf behlendorf1 llnl.gov signed konstantin khorenko khorenko virtuozzo.com close 11410 close 11411,,
562,808e6812386b1c93a90be685a3f71342596df203,atthew Ahrens <mahrens@delphix.com>, 2020-12-24 21:07:24 -0800,11396, memory leak zdb reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11396,,
563,f014700a3768fcfcf0be61e1b9fc96e847272d98,atthew Ahrens <mahrens@delphix.com>, 2020-12-24 20:58:17 -0800,11396, memory leak reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11396,,
564,a0316ad26851d4b07d5048d5b2034137659babf5,atthew Ahrens <mahrens@delphix.com>, 2020-12-24 20:51:13 -0800,11396, memory leak reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11396,,
565,b6722b871b141b29adb5ae46455b7d96620fa993,atthew Ahrens <mahrens@delphix.com>, 2020-12-23 09:52:24 -0800,11396, nvlist leaked pool nvlist leaked part sub nvlist returned configp caller also leak additionally zdb.c main searchdirs leaked leak detected asan configure enable asan commit resolve leak reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11396,,
566,40ab927ae817b44fcb7fa043a8073c5f049f9257,oomas Soome <tsoome@me.com>, 2020-12-28 02:31:02 +0200,11406, implicit conversion boolean_t ds_hold_flags_t build error illumos gcc reveal function common zfs dmu_objset.c 857 error implicit conversion boolean_t ds_hold_flags_t aka enum ds_hold_flags werror enum conversion 857 decrypt tag  cc1 warning treated error function 754 error implicit conversion enum dmu_objset_type enum werror enum conversion 754 err lzc_create dataset dmu_ost_zfs null null  cc1 warning treated error issue present openzfs also issue ds_hold_flags_t currently defines exactly one valid value reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 11406,,
567,c449d4b06d1a6f26e3e422a845bff99a52b70000,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-22 14:12:31 -0800,11390, linux 5.11 compat blk_ register_region 5.11 function retired problem since add_disk implicitly allocated minor number long time reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
568,19697e4545cae70cf6692d19d17821d2f11a1ece,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-22 13:53:25 -0800,11390, linux 5.11 compat revalidate_disk removed functionally problem relied function call perform additional handling might needed kernel version neither available know additional handling needed directly call reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
569,72ba4b2a4ca8c55bc8e8350126de2e9f18e75900,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-22 13:02:59 -0800,11390, linux 5.11 compat bdev_whole bd_contains member removed block_device structure caller needing determine vdev whole block device use new bdev_whole wrapper older kernel provide bdev_whole wrapper relies bd_contains compatibility reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
570,a970f0594e9f67363dece8e0ed066e3eb7725bb4,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-22 12:17:13 -0800,11390, linux 5.11 compat bio_end_io_acct generic accounting function removed favor bio_end_io_acct function provide better interface new function introduced 5.8 kernel 5.11 kernel previous generic accounting interface removed commit update blk_generic_ _io_acct wrapper provide interface similar updated kernel interface slightly different older kernel need pas request queue well bio reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
571,b7281c88bcbba0525e8b55607145956320d103f0,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-22 10:26:45 -0800,11390, linux 5.11 compat lookup_bdev lookup_bdev function updated require dev_t passed second argument actually pretty nice since major number stored dev_t part interested allows avoid handling bdev entirely wrapper updated emulate behavior new lookup_bdev supported kernel reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
572,c347fac5861e9ed736441644a97b5fa5b446998d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-23 11:40:02 -0800,11390, linux 5.11 compat conftest update macro always set module license 5.11 kernel setting license converted warning error reviewed rafael kitover rkitover gmail.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 11387 close 11390,,
573,8fbd31d761b3a311c96783f2f285ac38cfd27274,yan Moeller <ryan@iXsystems.com>, 2020-12-23 18:10:35 -0500,11394, dbufstat fix warning python 3.8 replace reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 11394,,
574,4879c4d1982be4d72903e3bb7c681ad23a713bdb,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-23 08:55:02 -0800,11391, linux 5.10 compat meta increase linux maximum version meta file 5.10 required compatibility patch merged reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11391,,
575,0c763f76b1bc6d5e38a638493d13c9b54222743d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-21 20:17:13 -0800,11384, remove unused check individual transaction may larger dmu_max_access enforced assertion additional check however effect set local err variable could enable check however since already enforced asserts elsewhere opted remove instead reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 3731 close 11384,,
576,af9593903ef287bc1c0cb1829f0863773ce93c78,hristian Schwarz <me@cschwarz.com>, 2020-12-22 04:14:32 +0000,11381, zfs kmods install lib module instead usr lib module patch dracut find zfs.ko inclusion initramfs caused package installing lib module instead usr lib module correcting allows dracut right thing even without etc dracut.conf add_drivers zfs notably rpm redhat zfs kmod.spec.in doe contain definition prefix macro commit remove generic kmod spec http rpmfusion.org packaging kernelmodules kmods2 doe mention prefix reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 11381,,
577,7bbe563a0eee83265787d15bc23ba4d55f45c30e,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-12-22 05:09:02 +0100,11383, forward question github discussion instead creating issue type question forward github discussion system reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 11383,,
578,39372fa25b4af426365ad064f5d18cf4cc1f6ea0,ndy Fiddaman <omnios@citrus-it.co.uk>, 2020-12-21 18:13:23 +0000,11368, dangling reference porting fix http github.com openzfs zfs issue 5295 illumos started hitting assertion failure running testsuite assertion failed rc_count number file ... refcount.c unexpected hold stack 0x59 0x73 0x15 dmu_objset_own 0x14f simplest reproducer illumos zpool create version testpool c3t0d0 zpool destroy testpool run part test get trigger freebsd appears call txg_wait_synced missing illumos slows enough avoid condition reviewed brian behlendorf behlendorf1 llnl.gov signed andy fiddaman andy omnios.org close 11368,,
579,6152014d1ab694cdc785b286231ee308386bbc06,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-21 10:11:56 -0800,11374, linux 4.18.0 257.el8 compat blk_alloc_queue centos stream 4.18.0 257 kernel appears backported linux 5.9 change make_request_fn associated api maintain weak module compatibility original symbol retained new interface added unfortunately blk_alloc_queue replaced blkdev.h header seem way build new kmods old interfces even though appear still available weak module binding accommodate configure check added new _rh variant function used available compatibility code get added kernel original blk_alloc_queue interface fine openzfs simply continue prefer new interface fallback blk_alloc_queue available signed brian behlendorf behlendorf1 llnl.gov close 11374,,
580,8947fa449503dc159995aef6220d6be33dd38fe3,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-20 09:50:13 -0800,11373, fix maybe uninitialized variable warning commit 1c2358c12 restructured code introduced warning variable maybe initialized happen updated code initialize variable anyway silence warning zpl_file.c function zpl_iter_writeâ zpl_file.c 324 warning countâ may used uninitialized function wmaybe uninitialized signed brian behlendorf behlendorf1 llnl.gov close 11373,,
581,9ac535e66277a8d874434e1e81da8adb266d9692,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-20 09:49:29 -0800,11378, remove iter_read need call zpl_iter_read preserved previous code needed also cause problem iter function also handle pipe longer case fully reading pipe buffer may result pipe buf release function called registered resulting null dereference signed brian behlendorf behlendorf1 llnl.gov close 11375 close 11378,,
582,49c482fde366e0cd2d2c164c8339669ba88fe108,hristian Schwarz <me@cschwarz.com>, 2020-12-20 02:04:05 +0000,11370, dsl_pool extend comment dsl pool configuration lock based conversation matt openzfs slack reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed christian schwarz cschwarz.com close 11370,,
583,1c0bbd52c3cd6860d6b20a82c5fe482c6bf2e6d4,ichael D Labriola <michael.d.labriola@gmail.com>, 2020-12-18 12:36:19 -0500,11358, linux 5.10 compat also commit 59b68723 added configure check 5.10 removed revalidate_disk conditionally replaced usage call new function however old function also invoked device registered callback case commit add call make sure code path stay reviewed brian behlendorf behlendorf1 llnl.gov signed michael labriola gmail.com close 11358,,
584,77f09e29322817d69cc58a5442fe94ca104b91cd,rawn <Insane.Prawny@gmail.com>, 2020-12-18 18:34:10 +0100,11347, zed zfs list cacher.sh exit ignored event type check history_event type instead zfs list cacher.sh script currently respect event type excluded syslog make little sense single purpose script silently break history_events excluded syslog default since reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 11164 close 11347,,
585,1c2358c12a673759845f70c57dade601cc12ed99,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-18 08:48:26 -0800,11351, linux 5.10 compat use iov_iter uio structure 5.10 kernel generic splice compatibility code removed filesystems responsible registering splice_read splice_write callback support operation good news vfs provided callback used provided iter_read iter_write callback support pipe however currently case iovecs bvecs pipe ever attached uio structure commit change allowing full iov_iter structure attached uios ever since 4.9 kernel iov_iter structure supported iovecs kvecs bvevs pipe desirable pas entire thing possible conjunction uio helper function i.e uiomove uiocopy etc updated understand new uio_iter type note using kernel provided uio_iter interface allowed existing linux specific uio handling code simplified longer need support kernel older 4.9 possible remove iovec bvec member uio structure always use uio_iter need maintain existing type older kernel additional refactoring cleanup included change added check configure detect available iov_iter interface available way back 3.10 kernel used available particular always available supported kernel unused uio_userispace type removed longer needed uio_seg enum platform specific moved zfs_uio.c zcommon.ko module linux specific platform code zfs.ko module get libzfs never needed keep linux specific code common source removed unnecessary o_append handling zfs_iter_write redundant o_append already handled zfs_write reviewed colin ian king colin.king canonical.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 11351,,
586,2844ad60d41717f4713ed01df2d46bc12f590ddd,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-18 08:42:59 -0800,11365, zts simplify consider test success long initializing pattern found least per metaslab indicates least part free space initialized ideally check pattern written free space much trickier check reasonable compromise using string feed loop test cause empty string still trigger loop miss spacemaps case pipe loop instead use zpool wait initialize testpool wait pool initialize authored brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11365,,
587,71e4ce0e52c9205b9f4a8dceaa06a54089b0f70c,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-12-17 12:11:56 -0800,11329, special device removal space accounting fix space special device included spa_dspace zfs available property therefore always least much free space normal class allocated special class therefore always enough free space remove special device however check free space removing special device take account commit corrects reviewed ryan moeller ryan ixsystems.com reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11329,,
588,1531506d23232f90e9d0cef30d7bdbe7511e1cb4,yan Moeller <ryan@iXsystems.com>, 2020-12-17 14:16:42 -0500,11237, avoid extra work updating arc kstats tunables e357046 necessary periodically update arc kstats tunables tunable update applied modified kstats updated demand update kstats zfs_debug build reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11237,,
589,fb188409f1b60390e3c8e4bbb18f887be44887e1,terlingjensen <5555776+sterlingjensen@users.noreply.github.com>, 2020-12-17 12:19:30 -0600,11359, use correct return type getopt use correct return type getopt otherwise clang complains tautological constant range compare reviewed brian behlendorf behlendorf1 llnl.gov signed sterling jensen sterlingjensen close 11359,,
590,be5c6d96530e19efde7c0af771f9ddb0073ef751,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-12-16 14:40:05 -0800,11327, examine best metaslabs vdev system high fragmentation may need lot gang allocation e.g indirect block allocation 50kb may need gang failing normal allocation resorting ganging try every metaslab impact loading every metaslab huge deal since typically keep metaslabs loaded also iterating every metaslab every failing allocation many metaslabs typical 200 e.g due vdev expansion large vdevs cpu cost iteration impactful iteration done mg_lock held creating long hold time high lock contention concurrent allocation ultimately causing long txg sync time poor application performance address commit change behavior normal try_hard zil allocation examine 100 best metaslabs determined ms_weight none large enough free segment allocation fail fall back ganging accomplish normally gang try_hard allocation non try_hard allocation examine 100 best metaslabs vdev summary first try normal allocation fails gang allocation fails try hard gang allocation fails multi layer gang block reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11327,,
591,f8020c936356b887ab1e03eba1a723f9dfda6eea,lexander Motin <mav@FreeBSD.org>, 2020-12-15 13:55:44 -0500,11288, make metaslab class rotor aliquot per allocator metaslab rotor aliquot used distribute workload vdevs keeping locality logically adjacent block multiple allocator introduced separate allocation different object doe make much sense different allocator write different metaslabs metaslab group vdev time competing resource change make allocator choose metaslab group independently colliding others sporadically test including simultaneous write file recordsize 4kb striped pool disk system logical core show reduction vdev queue lock contention due better load distribution unfortunately help much zvols yet since one dataset zvol synced time part one allocator used may improve later reduce number pointer dereferences change per allocator storage metaslab class group several separate malloc variable length array end original class group structure reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed alexander motin mav freebsd.org close 11288,,
592,e2d952cda06a649441eba01730753e1a24bf2c83,regory-lee-bartholomew <gregory.lee.bartholomew@gmail.com>, 2020-12-15 11:22:30 -0600,11335, dkm disable weak module fedora doe guarantee stable kabi weak module dis abled see dkm man page detailed explanation weak module feature reviewed brian behlendorf behlendorf1 llnl.gov signed gregory bartholomew gmail.com close 9891 close 11128 close 11242 close 11335,,
593,d8a09b3a041c8983ce51106ae7f92a11142f8470,yan Libby <rlibby@gmail.com>, 2020-12-15 09:20:48 -0800,11337, lua avoid gcc wreturn local addr bug avoid bug gcc wreturn local addr warning obfuscation buggy version gcc return value expression involves address local variable even address legally converted non pointer type warning may emitted value address may replaced zero howerver buggy version emit warning replace value simply returning local variable non pointer type http gcc.gnu.org bugzilla show_bug.cgi 90737 reviewed brian behlendorf behlendorf1 llnl.gov signed ryan libby rlibby freebsd.org close 11337,,
594,956f94010f3163d7104d0674c9b0d7f68038702e,yan Libby <rlibby@gmail.com>, 2020-12-15 09:20:06 -0800,11336, spa avoid type narrowing warning building spa module i386 caused gcc emit wint pointer cast cast pointer integer different size spa.spa_did uint64_t pthread_join via thread_join spa_deactivate take pointer bit i386 define spa_did pointer size instead spa_did fact never non zero thread_join could instead ifdef changing size spa_did may useful future reviewed brian behlendorf behlendorf1 llnl.gov signed ryan libby rlibby freebsd.org close 11336,,
595,c7500ded3e2616ee797dad8db56da93619bbf75c,yan Libby <rlibby@gmail.com>, 2020-12-14 09:28:24 -0800,11331, freebsd libzfs gcc requires __thread static building libzfs gcc freebsd failed gcc picky order keywords declaration __thread whereas clang relaxed http gcc.gnu.org onlinedocs gcc thread local.html reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ryan libby rlibby freebsd.org close 11331,,
596,923d730329290c7dc8ae5b4d27c6ed01d24d9f4c,atthew Macy <mmacy@freebsd.org>, 2020-12-12 16:00:00 -0800,11324, dmu_zfetch fix memory leak last change caused read completion callback called still progress change restores allocation arc buf callback callback path check new acb_nobuf field know skip buffer allocation reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11324,,
597,c76a40bfdaedd1eb2c037dfdf822ea5c4db97397,eorge Amanakis <gamanakis@gmail.com>, 2020-12-11 21:15:37 +0100,11277, fix reporting cksum error indirect vdevs removing subsequently reattaching vdev cksum error may occur read child mirror case resilver fix checking whether child missing data setting flag ic_error checked suppresses incrementing checksum counter reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 11277,,
598,1ad07b01bca915c9db2c856121d616baf01a088b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-11 11:00:58 -0800,11326, remove draid.d symlink zfs_helpers.sh earlier revision draid existed etc zfs draid.d directory removed final version integrated little bit accidentally overlooked zfs_helpers.sh script remove remnant reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11326,,
599,695ac5850b8ba9792c038e26051a4991a0d6de8d,yan Moeller <ryan@iXsystems.com>, 2020-12-08 20:20:25 +0000,11270, arc_summary3 handle overflowing value width tunables shown arc_summary3 string value may exceed normal line length leaving negative offset name value field negative space course valid python rightly barf exception traceback handle overflowing value field width ignoring line length separating name value single space instead reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11270,,
600,439dc034e94c99e413430277c81b3c45e0060e51,yan Moeller <ryan@iXsystems.com>, 2020-12-02 21:45:08 +0000,11270, freebsd implement sysctl fletcher4 impl tunable select fletcher checksum implementation linux present freebsd implement sysctl handler freebsd use provide tunable platform reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11270,,
601,ba67d82142bc7034734a49a62998cfc96b1d0038,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-12-11 10:26:02 -0800,11105, improve zfs receive performance lightweight write performance zfs receive bottlenecked cpu consumed receive_writer thread especially receiving stream small compressed block size much cpu spent creating destroying dbuf arc buf one write record send stream commit introduces concept lightweight writes allows zfs receive write dmu providing abd instantiating new type dbuf arc buf dirty leaf block instantiated dbuf dirty data mechanism support reading lightweight dirty block would see disk state rather dirty data since dedup receive code removed zfs receive write work fine arc bufs received data received data longer cached arc testing receive stream average compressed block size 4kb commit improves performance also reducing cpu usage cpu per block basis cpu consumed receive_writer dbuf_evict 7th baseline 450mb cpu receive_writer dbuf_evict new 670mb cpu receive_writer dbuf_evict code also restructured way added dr_dnode field simplifies existing code longer need db_dnode_enter related routine new field needed lightweight type dirty record ensure dr_dnode field remains valid dirty record freed ensure dnode_move relocate dnode_t keep hold dnode zio completed already done user accounting code commit extends always keep dnode hold zio completion see dnode_rele_task dn_dirty_txg previously zeroed dnode synced necessary since meaning dnode last dirtied change simplifies new dnode_rele_task code removed dead code related drr_write_byref dedup receive reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com reviewed george wilson gwilson delphix.com signed matthew ahrens mahrens delphix.com close 11105,,
602,7d4b365ce32ecaf97020178f2a847a01f7e35476,aul Dagnelie <paulcd2000@gmail.com>, 2020-12-11 10:22:29 -0800,11297, fix kernel panic induced redacted send redaction list traversal code bug binary search logic looking resume point maxbufid decremented causing read last possible block object instead one wanted cause incorrect resume behavior possibly even hang case addition examining non last block treat block size last block causing miss entry redaction list determining resume finally ignoring case resume point found buffer searched resuming minbufid issue corrected code significantly simplified make future issue likely reviewed serapheim dimitropoulos serapheim delphix.com reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 11297,,
603,8c5606ca0b601faedf27ae7e21c5f528f824327c,yan Moeller <ryan@iXsystems.com>, 2020-12-08 17:21:36 +0000,11318, freebsd fix format invalid type cause sysctl format bytearray integer valid format type match variable type int return einval value set zero reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11318,,
604,513c1962003b4cb76d49054c6542b12b7ec0ebe0,yan Moeller <ryan@iXsystems.com>, 2020-12-08 17:02:16 +0000,11318, freebsd update usage sysctl sysctl includes ctltype_node type node list returned sysctl.filter freebsd head also provides description eliminate subprocess call get description filter node deal value reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11318,,
605,e5f732edbb0d3242708442e14e033935399cf1bb,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-10 15:23:26 -0800,11306, fix possibly uninitialized root_inode variable warning resolve uninitialized variable warning compiling function zfs_domountâ warning root_inodeâ may used uninitialized function wmaybe uninitialized s_root d_make_root root_inode reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 11306,,
606,60a4c7d2a2f8e8123e3c2e45d1773b5849f74b16,aul Dagnelie <paulcd2000@gmail.com>, 2020-12-10 14:09:23 -0800,11212, implement memory cpu hotplug zfs currently react hotplugging cpu memory system way patch change adding logic arc allows system take advantage new memory added caching purpose also add logic taskq infrastructure support dynamically expanding number thread allocated taskq reviewed brian behlendorf behlendorf1 llnl.gov authored matthew ahrens matthew.ahrens delphix.com authored brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 11212,,
607,f483daa870e7d129ea988f976429e1210e8aa2e6,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-10 10:55:53 -0800,11319, add zloop workflow run ztest via zloop minute total run time minute reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11319,,
608,5053dfa08c4310fe1e2ada21131c64562132fbc0,eorge Melikov <mail@gmelikov.ru>, 2020-12-08 21:40:44 +0300, , add zloop workflow run ztest via zloop minute total run time minute signed george melikov mail gmelikov.ru,,
609,e0716250bf34159082d96f04200063e3edb114b6,yan Moeller <ryan@iXsystems.com>, 2020-12-10 00:29:00 -0500,11302, freebsd zcommon_init sooner avoid fpu panic panic affecting system configuration thread fpu context disturbed fletcher benchmark leading panic boot module_init register zcommon_init run last subsystem si_sub_last running soon interrupt configured make sure finished benchmark start thing clear fpu context disturbed doe seem avoid add macro run zcommon_init earlier point freebsd linux defined module_init authored konstantin belousov kib freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11302,,
610,b9916b40647cfe615ba90612e0049ae8feac0dd1,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-12-10 06:27:12 +0100,11311, zts three small follow fix 11167 follow fix 0cb40fa3 remove unused variable source unused libs add missed cleanup reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 11311,,
611,957f9681eb7ce5562f4912e97fc64aeceb23bd7f,rico Nogueira Rolim <34201958+ericonr@users.noreply.github.com>, 2020-12-10 02:24:59 -0300,11303, mount_zfs print strerror instead errno error reporting tracking error message errno value difficult using strerror make error message clearer reviewed brian behlendorf behlendorf1 llnl.gov signed rico rolim erico.erc gmail.com close 11303,,
612,1e4667af320df1a99cb3995d18054fb207dd5d02,terlingjensen <5555776+sterlingjensen@users.noreply.github.com>, 2020-12-09 23:24:26 -0600,11295, drop path prefix workaround source trouble disabled 9000a9f reviewed brian behlendorf behlendorf1 llnl.gov signed sterling jensen sterlingjensen close 11295,,
613,ab4fb9b74e9d089fc9a261c4f41e19697ad6a4ca,rivej Desh <orivej@gmx.fr>, 2020-12-10 05:22:54 +0000,11309, delete configure check last use wait_lock removed linux 5.3 compat retire rw_tryupgrade fix issue reported http github.com openzfs zfs issue 11097 issuecomment 714532367 reviewed brian behlendorf behlendorf1 llnl.gov signed orivej desh orivej gmx.fr close 11309,,
614,1e4732cbda8eb0c95901ed9f924b5a13bf24c76e,atthew Macy <mmacy@freebsd.org>, 2020-12-09 15:05:06 -0800,11232, decouple arc_read_done callback arc buf instantiation add arc_flag_no_buf indicate buffer need instantiated fix performance regression cached read due zfetch change reviewed tony nguyen tony.nguyen delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed matt macy mmacy freebsd.org close 11220 close 11232,,
615,edb20ff3bab31f9e07578a7bf8279d67b821f29a,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-09 14:52:45 -0800,11284, fix optional force arg handing function used check force argument since optional may provided may created wrong flag reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11281 close 11284,,
616,1a735e763a4e008d654c0239f905fec2cc3cfd42,eorge Melikov <mail@gmelikov.ru>, 2020-12-08 20:53:45 +0300,11304, add new zfs test sanity workflow run zfs test sanity.run brief result timeouts rare minimize false positive increasing default 180 second reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11304,,
617,8e8fdce682f83d4ba4362fa916f42ec3ad80a4c3,eorge Melikov <mail@gmelikov.ru>, 2020-12-07 21:06:10 +0300,11296, zts zpool_trim test throttle trim process otherwise trim may finish progress check reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11296,,
618,83b698dc42bf9ff06aa025c625eca39c9785f3e1,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-06 09:57:20 -0800,11282," reduce fletcher4 raidz benchmark time module load time available fetcher4 raidz implementation benchmarked fixed amount time determine fastest available manual testing shown time significantly reduced negligible effect final result commit change benchmark time 1ms reduce module load time second x86_64 x86_64 system sse3 ssse3 avx2 instruction benchmark time fletcher4 603ms 15ms raidz 1,322ms 64ms reviewed matthew macy mmacy freebsd.org reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11282",,
619,8136b9d73bda48771ab49b32272b7870b463e6fd,lexander Motin <mav@FreeBSD.org>, 2020-12-06 12:55:02 -0500,11280, avoid call since 8c4fb36a24 7795 started take two lock per write inside surprised pool wide lock contended still operation visible cpu profile contended vdev lock commit slightly change flow call function going return max_active way due high amount dirty data allows save cpu time exactly pool busy reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi caputit1 tcnj.edu signed alexander motin mav freebsd.org close 11280,,
620,6366ef22404ef1bd0ba26364905e19f2ec7df2a4,lexander Motin <mav@FreeBSD.org>, 2020-12-06 12:53:40 -0500,11279, bring consistency abd chunk count type abd_size abd_nents uint_t make sense return size_t random mix different type used count chunk look bad make compiler difficult optimize code particular freebsd change allows compiler completely optimize built without debug removing pointless bit division even pointless empty loop reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 11279,,
621,eed2bfe06a60d42b0035edb4b86590eb7edd331d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-06 09:50:47 -0800,11287, enable abi check checkstyle workflow extend checkstyle workflow perform library abi check master branch intent prevent abi change detect immediately made done intentionally changing abi make storeabi target used generate new .abi file included commit depends libabigail utility available majority distribution package manager reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11287,,
622,0484e8722f3f511f8f8cc657e6d9f54c58b6edff,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-06 09:48:36 -0800,11286, zts adjust timeout running test case occasionally take longer maximum 600 second happens test case considered failed always completes minute latter since log suggest nothing actually failed commit increase timeout remove exception reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11286,,
623,81638c999d468c9837dec8c92cdfb07ae5507ea4,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-06 09:47:33 -0800,11283, zts update occasionally memory error hit test case mounting filesystems try reduce likelihood occurring reducing thread count 100 also advantage slightly speeding test mount testpool testfs3 allocate memory filesystem successfully created mounted reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11283,,
624,d1d47691c256cd7e15af7819ea33024e6693e9c5,eorge Amanakis <gamanakis@gmail.com>, 2020-12-04 23:34:29 +0100,11221, fix raw sends encrypted datasets copying back snapshot sending raw encrypted datasets user space accounting present expected lead subsequent mount failure due checksum error verifying local mac fix clearing reset local mac allows user accounting correctly updated first mount using normal upgrade process reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi caputit1 tcnj.edu signed george amanakis gamanakis gmail.com close 10523 close 11221,,
625,0cb40fa38903298b7af2b1084e8228b2c8315c4e,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-12-04 23:04:39 +0100,11167, zpool dryrun fails list device zpool create fails list cache spare vdevs zpool add fails list spare device zpool split fails list special dedup label zpool add zpool split list hole device reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 11122 close 11167,,
626,4b6e2a5a33957af806b708723f32b83dbafce326,yan Moeller <ryan@iXsystems.com>, 2020-12-04 17:01:42 -0500,11254, add option zfs create add option zfs create prevents file system automatically mounted similar zfs receive authored pjd pjd freebsd.org freebsd commit freebsd freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allan ported ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 11254,,
627,8f158ae6ad98d7b4f4c583a77a44009580dee91c,rian Behlendorf <behlendorf1@llnl.gov>, 2020-12-03 10:49:39 -0800,11271, add sanity.run file run file contains subset functional test exercise much functionality possible still executing relatively quickly included test take second run provides convenient way sanity test change committing full test run take several hour script zfs tests.sh sanity ... result summary pas 813 running time percent passed 100.0 reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11271,,
628,766e06695f881fcd9634f5091eba999f861ae19e,elak <ice@extreme.hu>, 2020-12-03 19:18:26 +0100,11272, fix trivial typo zfs diff.8 reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed tamas tevesz ice extreme.hu close 11268 close 11272,,
629,dcf704452278677af35eda758a27d16fb8694b80,lexander Motin <mav@FreeBSD.org>, 2020-12-03 13:02:39 -0500,11261, fix reduce latency effect non interactive found setting min_active tunables non interactive make stuck caused never reached never issue due min_active set zero fix issuing least one non interactive time interactive interactive zero min_active allows completely block non interactive may min_active starvation scenario deny foot shooting reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 11261,,
630,9109b89cd767165cdf24454f3c8477bb1eae2637,zdanis <zdanisq@gmail.com>, 2020-12-03 13:01:16 -0500,11269, add compatibility busybox mktemp busybox mktemp requires least six template causing current sed place check fail file doe exist change add additional mktemp template already least six reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed quentin zdanis zdanisq gmail.com close 11269,,
631,0aacde2e9a818942f4e25ab765b3a4849aac6de8,yan Moeller <ryan@iXsystems.com>, 2020-12-02 13:20:02 -0500,11260, freebsd notify userspace vdev removed needed zfsd autoreplace vdevs reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11260,,
632,ec50cd24ba6fd3656229dbbcb78a665197597c91,inix1979 <Finix1979@users.noreply.github.com>, 2020-12-03 01:28:55 +0800,11256, avoid unneccessary zio allocation wait function usage zio reading operation create zio wait reading scenario performance optimization reviewed brian behlendorf behlendorf1 llnl.gov signed finix yan yancw info2soft.com close 11251 close 11256,,
633,95a78a035ae01b6ee79ac9ce6bad073bc3ebb3cf,ndrew Sun <as-com@users.noreply.github.com>, 2020-12-01 18:22:51 -0500,11255, make zpool status remove label print bold zfs_color set zpool status show row heading bold except remove heading quick fix make print bold reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed andrew sun andrewsun.com close 11255,,
634,aa2778d1003af4601db77ae74b90d86454e5a37c,eorge Melikov <mail@gmelikov.ru>, 2020-12-01 23:15:55 +0300,11262, simplify checkstyle runner remove excess step reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11262,,
635,52c8537513652a9d424009cde03299e83a8c4467,avel Snajdr <snajpa@snajpa.net>, 2020-11-28 20:15:57 +0100,11224, zpool_influxdb move libexec dir move zpool_influxdb command usr libexec zfs include usr libexec zfs path system search directory running test suite reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 11156 close 11160 close 11224,,
636,b2a54a28b5ebad7165bbf10bd4de8066a6bf335d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-28 11:11:18 -0800,11243, verify zfs module loaded starting service extend change made ae12b02 verify zfs kernel module loaded rest openzfs service module loaded neither share volume zed service started signed brian behlendorf behlendorf1 llnl.gov close 11243,,
637,16692e6ba0bc3b0b6e7d64a68e91ded9f2d0959e,oÃ n Tráº§n CÃ´ng Danh <congdanhqx@gmail.com>, 2020-11-29 02:02:08 +0700,11244, dracut use bin instead bash intepreter despite dracut hard dependency bash module dracut hard dependency bash module setup fully usable machine inside initramfs dracut allows user choose list handful shell e.g bash busybox dash mkfsh fact local machine initramfs built dash functional long time 64025fa3a silence make checkbashisms 2020 also allows user right let fix problem make checkbashisms reported allows user right plymouth case let simply run command inside instead checking existence command running status also failture plymouth unavailable let remove unnecessary fork grep zfs generator.sh.in following complicated elif simple case ... esac support change also exclude 90zfs make checkbashisms current infrastructure ship old version checkbashisms complains command current latest checkbashisms think fine near future revert change makefile.am infrastructure updated reviewed gabriel devenyi gdevenyi gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed tráº danh congdanhqx gmail.com close 11244,,
638,04a82e043d067181a8b352921ef6a3c3ac875b59,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-24 09:28:42 -0800,11235, remove incorrect assertion commit 85703f6 added new assert zfs_write part cleanup correct case multiple process concurrently extending file z_size updated atomically holding range lock portion file therefore possible file size increase check performed earlier loop causing assert fail code handle case correctly invalid assert need removed reviewed brian atkinson batkinson lanl.gov reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11235,,
639,6f5aac3ca057731d106b801bfdf060119571393c,lexander Motin <mav@FreeBSD.org>, 2020-11-24 12:26:42 -0500,11166, reduce latency effect non interactive investigating influence scrub especially sequential random read latency noticed hdds single 4kb read may take second deeper investigation shown many hdds heavily prioritize sequential read even submitted queue depth patch address latency two side using _min_active queue depth non interactive request interactive request active request throttling interactive request completed configured amount non interactive also modified give chance schedule least _min_active request lowest priority reduce starvation several non interactive process running time interactive think make possible setting low benchmarked change 4kb random read zvol 16kb block size newly written non fragmented pool fragmented pool also saw improvement dramatic log2 histogram random read latency millisecond different device mirror vdevs sata hdd wdc wd20efrx 68euzn0   101 195 419 250 mean maximum latency reduction 500ms mirror vdevs sata hdd wdc wd80efzx 68uw8n0   247 455 470 412 181 i.e 250ms hdd seagate st14000nm0048 107  681 1261 676 1633 i.e 125ms ssd seagate xs3840te70014 microsecond 18343 82548 618  283 92351 34844 also measured scrub time test idle pool idle fragmented pool measured scrub getting percent faster due use qd3 instead qd2 idle non fragmented pool measured difference busy non fragmented pool measured scrub time increase 1.5 1.7x iop increase reached reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 11166,,
640,f67bebbc3446d0f350bb481092519303b99ee2da,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-24 09:24:24 -0800,11233, obsolete earlier package due version bump order package manager dnf upgrade cleanly package soname bump obsolete package name must known update new package correctly obsolete old one signed brian behlendorf behlendorf1 llnl.gov close 11230 close 11233,,
641,cd44f5be37d994a59b6afac8eb3b3827ad63212f,atthew Macy <mmacy@freebsd.org>, 2020-11-24 09:16:46 -0800,11213, freebsd decouple zfs_debug kernel debug setting reviewed martelli nikola martellini reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11213,,
642,0657326f9cc6aaf35e90657171bc0f6ad96e29a9,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-23 14:49:17 -0800,11229, update draid short feature description documentation describes draid distributed spare parity raid implementation update short feature description match rest documentation reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11229,,
643,d45267183f1056320ca884b849145243018eb181,ntonio Russo <aerusso@aerusso.net>, 2020-11-22 16:16:42 -0700,11227, libzfsbootenv depend libnvpair build libnvpair.pc moreover automatically pulled libzfs.pc additional specific dependency required reviewed toomas soome tsoome me.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11227,,
644,dc6d39a85eccbfdd9b34d89f7ab05436fe3138e5,ragw <crag0715@gmail.com>, 2020-11-23 01:32:34 +0800,11165, pam_zfs_key accommodate different dataset naming scheme name dataset user home directory may vary expected homes_prefix username different naming scheme used use property mountpoint specify dataset username long value identical passwd pw_dir example name property value rpool home myuser_123456 mountpoint home myuser reviewed felix rre felix dogcraft.de reviewed brian behlendorf behlendorf1 llnl.gov signed crag wang crag0715 gmail.com close 11165,,
645,f1ece319fd701b1e78a98cc17a20b64bbaa8be73,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-21 10:44:52 -0800,11225, include abi dist tarball abi included generating make dist tarball since required make checkabi target signed brian behlendorf behlendorf1 llnl.gov close 11225,,
646,4d0ba9411312991635edc5154bb42b9dfff192a2,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-20 13:14:45 -0800,11218, correct missing zil_claim dtl update commit a1d477c2 accidentally disabled dtl update zil_claim case described end unconditionally disabling dtl update loading done avoid deadlock vd_dtl_lock loading dtls disk take vd_dtl_lock    __zio_execute arc_read   dbuf_prefetch dmu_prefetch   space_map_load vdev_dtl_load take vd_dtl_lock vdev_load  spa_tryimport missing dtl update restored moving space_map_load call outside vd_dtl_lock private range tree populated reading space map merged dtl_missing tree lock furthermore spa_load_none check lead additional problem resilvering occurs spa_load_none set incorrectly determine nothing repair result full redundancy restored block reviewed matt ahrens matt delphix.com signed brian behlendorf behlendorf1 llnl.gov close 11218,,
647,8434017a276e4c311d32adfa793a779d814ce543,ntonio Russo <aerusso@aerusso.net>, 2020-11-19 17:25:24 -0700,11219, track soname version bump packaging rpm deb package named soname version library contain bumping version packaging renamed reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11219,,
648,567e4d0dfafd9a6da8efff2b6c49f740ecf0bb9d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-11-12 23:16:50 +0100,11198, dracut mount zfs.sh quote expansion zpool test bring improvement dracut zfs load key.sh shellcheck slightly quieter well reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11198,,
649,2d9f82d89118240d19a6857c84b45f4481a5543b,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-11-12 23:06:24 +0100,11198, dracut zfs load key.sh simplify import loop quote variable assignment loop confusing condition properly systemctl failed return code instead entire mess assignment could turn var val program encryptionroot keylocation whitespace bonus mostly silence shellcheck reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11198,,
650,85703f616ddb83bb94192e24fd8519661578aac2,yan Moeller <ryan@iXsystems.com>, 2020-11-18 18:06:59 -0500,11191, reduce confusion zfs_write block abuf null ever reached yes add asserts comment prove get full block write aligned offset extending past eof simplify removing check tx_bytes max_blksz since assert always true reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11191,,
651,0ca45cb31092358044d11f6085b6338fb5fca602,atthew Macy <mmacy@freebsd.org>, 2020-11-17 09:50:52 -0800,11199, fix problem leave fstrans set passed snapshot remove minor volmode already match new value freebsd wait geom ops complete trying remove create time geom tasting parallel freebsd leak zvol_state_lock open null freebsd try unlock zv_state lock null reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11199,,
652,82611cdfe586a1da5e48cfdc6864b94470281e6e,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-14 21:38:34 -0700,11144, add abi snapshot add snapshot current abi using libabigail 1.7 included abi pass make checkabi centos fedora debian ubuntu 20.04. cover fairly wide range glibc gcc libabigail version plus change platform specific reviewed antonio russo aerusso aerusso.net signed brian behlendorf behlendorf1 llnl.gov close 11144,,
653,14c34c3d49319a0fea937d54167602c43ff9d93f,ntonio Russo <aerusso@aerusso.net>, 2020-11-14 21:35:31 -0700,11144, library abi tracking abigail provide two make target checkabi storeabi storeabi libabigail generate reference copy abi public library checkabi compare reference compiled version failing compatible abi generated libzpool.so used ztest zdb external consumer authored brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net close 11144,,
654,e6c59cd171bf141eae232db2f4c33ff79d5862c3,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-11-13 23:38:29 +0100,11202, zpool correctly align column ignores pl_fixed new literal argument true rest consequence needing pas  reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiao dska nabijaczleweli close 11202,,
655,fd654e412e48751e402a993594a39d336868e4c4,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-11-13 23:53:37 +0100,11202, zpool fix pool typo reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 11202,,
656,4072f465bc3630bbab50afccfd6c7baf41afcc4c,oli10K <ezomori.nozomu@gmail.com>, 2020-11-16 18:10:29 +0100,9596, fix zfs userspace received datasets encrypted root encrypted receives user accounting initially disabled creation zfs userspace zfs groupspace fails eopnotsupp forgets set objset flag successful reviewed brian behlendorf behlendorf1 llnl.gov authored brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9501 close 9596,,
657,2c210f68189c6f781be050bfdc890cd6dc231fea,eorge Amanakis <gamanakis@gmail.com>, 2020-11-16 18:08:11 +0100,11205, fix assert logic l2arc_evict case cache device removal possible end l2arc_evict l2ad_hand l2ad_evict lead following panic case debug build verify3 dev l2ad_hand dev l2ad_evict failed 321920512 321920512 call trace dump_stack 0x66 0x90 spl_panic 0xef 0x117 spl 0x11d 0x290 zfs 0x275 0x5b0 zfs spa_vdev_remove 0x4a5 0x6e0 zfs 0x59 0xa0 zfs 0x5b3 0x630 zfs zfsdev_ioctl 0x53 0xe0 zfs do_vfs_ioctl 0x42e 0x6b0 ksys_ioctl 0x5e 0x90 do_syscall_64 0x5b 0x1a0 0x44 0xa9 case cache device removal also possible l2ad_hand distance l2ad_end since iterate l2arc_evict l2ad_hand reset functional consequence however cache device removed fix omitting assert case device removal reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 11205,,
658,24c12b48a196265cf1837cd832b420476a208b47,rico Rolim <erico.erc@gmail.com>, 2020-11-13 00:00:59 -0300,11189, config dracut 90zfs handle case hostid return zero system musl libc hostid always print 00000000 cause improper behavior 90zfs module configured dracut initramfs work around copying host etc hostid file exists otherwise write etc hostid hostid return something meaningful avoids zgenhostid creating random etc hostid initramfs could lead error trying import pool spl_hostid defined kernel command line furthermore tag etc hostid file hostonly since system specific taken account trying use initramfs generated one system boot different system reviewed brian behlendorf behlendorf1 llnl.gov reviewed georgy yakovlev gyakovlev gentoo.org authored andrew hesford ajh sideband.org signed rico rolim erico.erc gmail.com close 11174 close 11189,,
659,9c4b6dbb314cabd14746527c0865d98300ea5190,rico Rolim <erico.erc@gmail.com>, 2020-11-10 11:22:27 -0300,11189, zgenhostid accept hostid argument equal zero common usage pattern zgenhostid including zfs dracut module running zgenhostid hostid however zgenhostid accepted hostid argument greater meant output hostid 00000000 zgenhostid would error even though possible return value gethostid function used hostid current musl libc gethostid stub always return glibc gethostid return etc hostid exists smaller byte case make sense zgenhostid treat value part zfs codebase meaning hostid value determined therefore attempt generate random value write etc hostid manpage usage output updated reflect whitespace also fixed usage output reviewed brian behlendorf behlendorf1 llnl.gov reviewed georgy yakovlev gyakovlev gentoo.org reviewed andrew hesford ajh sideband.org signed rico rolim erico.erc gmail.com close 11174 close 11189,,
660,4352edaafb5fba9b98b6ac4987b576bbc333f68a,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-14 10:19:00 -0800,11201, linux fix zfs_enter zfs_exit zfs_verfy_zp usage zfs_enter zfs_exit zfs_verfy_zp macro used linux zpl_ source file return positive error value correct common code linux specific kernel code expects negative return value zpl_enter zpl_exit zpl_verfy_zp macro used instead furthermore zpl_exit macro updated call zfs_exit_fs function prevents possible deadlock occur snapshot automatically unmounted must never wait progress automatic snapshot unmounts reviewed adam moss yotes.com reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11169 close 11201,,
661,d66aab7c081274c97b785cdc9033456c493ca6b1,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-11-14 10:17:16 -0800,11194, assertion failure logging large output channel program output zfs channel program logged disk zpool history printed zpool history channel program use 10mb memory default 100mb using zfs program flag therefore output fraction 100mb addition somewhat wasteful limited space reserved pool history large pool 1gb extreme case result failure assert length dmu_max_access  commit limit output size logged 1mb larger output logged instead entry logged indicating size omitted output reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 11194,,
662,7e3617de35defa931ec124d1442008f73b275ecc,yan Moeller <ryan@iXsystems.com>, 2020-11-14 13:16:26 -0500,11193, return efault end zfs_write set freebsd vfs expects efault zfs_write complete full write retry operation add missing set_errors zfs_write reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11193,,
663,b2255edcc0099e62ad46a3dd9d64537663c6aee3,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-13 13:51:51 -0800,10102," distributed spare draid feature patch add new top level vdev type called draid stand distributed parity raid pool configuration allows draid vdevs participate rebuilding distributed hot spare device substantially reduce total time required restore full parity pool failed device draid pool created using new top level draid type like raidz desired redundancy specified type draid 1,2,3 additional information required create pool reasonable default value chosen based number child vdevs draid vdev zpool create pool draid 1,2,3 vdevs ... unlike raidz additional optional draid configuration value provided part draid type colon separated value allows administrator fully specify layout either performance capacity reason supported option include zpool create pool draid parity data child spare vdevs ... draid parity parity level default draid data data device per group default draid child expected number child vdevs draid spare distributed hot spare default abbreviated example zpool status output disk draid pool two distributed spare using special allocation class  pool tank state online config name state read write cksum slag7 online draid2 68c online online online ... u25 online u26 online spare online u27 online draid2 online u28 online u29 online ... u42 online u43 online special mirror online online online mirror online online online spare draid2 inuse currently use draid2 avail  adding test coverage new draid vdev type following option added ztest command option leverage zloop.sh test wide range draid configuration draid raidz random kind raid test value draid data drive per group value draid distributed hot spare value raid parity raidz draid zpool_create zpool_import redundancy replacement fault test group updated provide test coverage draid feature authored isaac huang he.huang intel.com authored mark maybee mmaybee cray.com authored brady don.brady delphix.com authored matthew ahrens mahrens delphix.com authored brian behlendorf behlendorf1 llnl.gov reviewed mark maybee mmaybee cray.com reviewed matt ahrens matt delphix.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10102",,
664,a724db03740133c46b9a577b41a6f7221acd3e1f,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-11-11 17:16:15 -0800,11190, channel program may spuriously fail memory limit exhausted zfs channel program invoked zfs program executed lua sandbox limit amount memory consume limit 10mb default raised 100mb flag memory limit exceeded lua program exit command fails message like channel program execution failed memory limit exhausted lua sandbox allocates memory vmem_alloc km_nosleep fail requested memory immediately available case program fails message memory limit exhausted however case specified memory limit reached memory may temporarily unavailable commit change lua memory allocator zcp_lua_alloc use vmem_alloc km_sleep spuriously fail memory temporarily low instead rely system able free memory e.g evicting arc assume even highest memory limit 100mb channel program truly exhaust system memory external issue dlpx 71924 reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 11190,,
665,c08d442e4545663ff8fc7f0c4dcf5ffb1cd30a24,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-11 17:14:24 -0800,11187, linux fix mount unmount dataset name space custom helper translate space octal escape sequence 040. getmntent function aware convention properly translates escape character back space reading fsname without change zfs mount zfs unmount command incorrectly detect dataset name containing space mounted reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11182 close 11187,,
666,18ca574f0a52a05806f0d0ea6d70b7ebc35bf0c0,ateusz Guzik <mjguzik@gmail.com>, 2020-11-12 02:11:32 +0100,11188,  leftover illumos always set null introducing spurious difference zio_buf zio_data_buf reviewed brian behlendorf behlendorf1 llnl.gov signed mateusz guzik mjguzik gmail.com close 11188,,
667,9bd14b8724717bd344ac0c61378fc60e501c3c13,ony Perkins <tperkins@datto.com>, 2020-09-27 20:46:22 -0400,11039, start snapdir_iterate traversal begin wtih value zero microzap hash sometimes zero single digit snapnames zap cursor serialized value two skip first entry avl tree .zfs snapshot directory listing therefore doe return snapshot reviewed brian behlendorf behlendorf1 llnl.gov reviewed cedric berger cedric precidata.com signed tony perkins tperkins datto.com close 11039,,
668,3fcd737478217ab3f4cc518fadb20e1931f13dfe,drian Chadd <adrian@freebsd.org>, 2020-10-15 13:07:12 -0700,11069, fix compiling freebsd gcc assume illmnos bit look like illumnos compat code freebsd cmn_err compiler format attribute definitely error show llvm trigger add format flag keep behind many format issue trigger one doe format checking shared code reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed adrian chadd adrian freebsd.org close 11068 close 11069,,
669,79a357c2a1fb42f9539af57aa729ca175a8115b9,drian Chadd <adrian@freebsd.org>, 2020-10-15 13:02:43 -0700,11069, fix pointer uint64_t sized assumption ioctl path show compiling freebsd head amd64 using gcc 6.4 lib32 compat build end tripping assumption reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed adrian chadd adrian freebsd.org close 11068 close 11069,,
670,a4ae4998cbae3bb451642272738ab4d59b9714c4,terlingjensen <5555776+sterlingjensen@users.noreply.github.com>, 2020-11-10 17:50:44 -0600,11098, fix memleak cmd mount_zfs.c convert dynamic allocation static buffer simplify parse_dataset function return path add test specific mount helper reviewed mateusz guzik mjguzik gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed sterling jensen sterlingjensen close 11098,,
671,b60ae3a5dc42bc62adb1507eb8785cf6fee57912,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-11-10 21:48:26 +0100,11158, zpoolprops.8 clarify vdev expansion rule remove reference efi explain new space beyond gpt whole disk vdevs add section noting behaves partition vdevs term user likely encounter previous phrasing confusing seemed indicate zpool online able claim gpt whatever zfs free space whatever  gpt whatever zfs whatever case able manually resizing zfs partition include free space beforehand i.e gpt whatever zfs free space whatever gpt whatever zfs free space potentially left whatever zpool online gpt whatever zfs whatever reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli close 11158,,
672,1a0b4f566c4e2948e8df0ce43880ebf6123bad8c,ateusz Guzik <mjguzik@gmail.com>, 2020-11-10 21:42:47 +0100,11186, struct znode z_moved field yet another leftover unsupported zfs_znode_move reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11186,,
673,0f66201dbcead2d1ff8ab075587ee2811c19822b,avel Zakharov <pavel.zakharov@delphix.com>, 2020-11-10 14:12:07 -0500,11162, initramfs zfsunlock hook break usr bin copy_exec function expects full path target file passed rather directory take care creating underlying directory exist reviewed brian behlendorf behlendorf1 llnl.gov signed pavel zakharov pavel.zakharov delphix.com close 11162,,
674,7b42f09049d4d2d7e8191ee0a5fb72475b511f88,yan Moeller <ryan@iXsystems.com>, 2020-11-06 13:56:58 -0500,11175, freebsd simplify zvol_geom_open zvol_cdev_open consolidate unlocking procedure one place starting drop_suspend set b_false moving open count check little code cleanup match label zvol_geom_open zvol_cdev_open add missing period comment reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11175,,
675,2186ed33f1a24313ee9b62591cece6373a8378f6,yan Moeller <ryan@iXsystems.com>, 2020-11-06 13:52:16 -0500,11175, freebsd avoid spurious eintr zvol_cdev_open zvol_first_open fail eintr held taken without waiting apply logic done zvol_geom_open take already held first open zvol_cdev_open reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11175,,
676,d1dd72a2c576ff5acc4a7b219570ecc8338e3469,yan Moeller <ryan@iXsystems.com>, 2020-11-09 16:01:56 -0500,11176, simplify offset length limit zfs_write reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11176,,
677,9a764716fc98bf3ba137b90f01ea4cd74a8c7551,yan Moeller <ryan@iXsystems.com>, 2020-11-04 23:10:12 +0000,11176, const unchanging variable zfs_write show value changing later reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11176,,
678,2074dfd0e9998e1086c373962f42960e0053f987,yan Moeller <ryan@iXsystems.com>, 2020-11-04 21:43:30 +0000,11176, freebsd move def uio.h reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11176,,
679,8a9634e2f36528aa47096ed09cd849a08cb23fc3,yan Moeller <ryan@iXsystems.com>, 2020-11-04 21:47:14 +0000,11176, remove redundant oid parameter update_pages oid come znode already passing reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11176,,
680,eec6646ea9126d0f3c367e1298e5272b72cda8a4,yan Moeller <ryan@iXsystems.com>, 2020-11-04 22:10:13 +0000,11176, factor uid gid projid loop zfs_write reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11176,,
681,daabddaac11afa1e79f4a9114053cf749c528dce,lexander Motin <mav@FreeBSD.org>, 2020-11-10 13:39:26 -0500,11178, fix arc_c reduction initial arc_c reduced arc_c_min became possible datasets primarycache metadata none dirty data make arc capacity easily configured initial arc_c cause forced txg commits periodic long write delay patch make use arc_c arc warmed arc_c really mean something use arc_c_max  reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed alexander motin mav freebsd.org sponsored ixsystems inc close 11178,,
682,570d7038d06a1f38c25df0ea5d826f28a4f2e84b,atthew Macy <mmacy@freebsd.org>, 2020-11-10 10:37:10 -0800,11184, fix dnode refcount tracking fix couple place wrong tag passed dnode_ hold rele reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 11184,,
683,52e585a822cbdba27e138bbcbeab96ab080f63d0,yan Moeller <ryan@iXsystems.com>, 2020-10-21 22:35:08 +0000,11141, zts add corruption test add new test case corrupts level block file verifies corruption detected repaired reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11141,,
684,cce66dfa8ee0e121741603874e25617a68d74e91,yan Moeller <ryan@iXsystems.com>, 2020-10-29 21:43:38 +0000,11141, zts output block copy second part transforms object description output zdb ddddd objnum stream line form level path offset length indirect block given file current code work first copy block indirect block one copy disk add one zdb command get block copy rewrite transformation match output dvas reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11141,,
685,94deb47872e1fd6cf460eddf119bd219bcb30a27,yan Moeller <ryan@iXsystems.com>, 2020-10-28 20:29:31 +0000,11141, zts fix mirror vdevs level first part transforms pool configuration output zdb pool shell code set shell variable vdev_map map vdev underlying vdev path variable simple indexed array however vdev dva top level vdev pool mirrored top level vdev mirror child mirrored device need map top level vdev list underlying vdev path ist_file_blocks doe need work raidz vdevs disregard case reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11141,,
686,ae37ceadaa2a8cf09fbf1a9baafaa6dc6e24318a,ariusz Zaborski <oshogbo@vexillium.org>, 2020-11-06 02:02:19 +0100,11152, freebsd prevent null reference zvol_cdev_open check zvol written calling zil opened first write earlier reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed mariusz zaborski oshogbo vexillium.org close 11152,,
687,a4246bce5024df202e7c41a682c3f74555777197,hng300 <khng300@gmail.com>, 2020-11-05 08:50:08 +0800,11149, freebsd prevent null pointer dereference resid spa_config_load pass null resid zfs_file_read would trip sponsored freebsd foundation reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allan signed khng close 11149,,
688,71ae6a9d232de59534e4337efb0dc85c7d6906bd,ntonio Russo <aerusso@aerusso.net>, 2020-10-31 08:39:58 -0600,11144, synchronize library abi level bump library soversion linux match freebsd additionally bump properly account abi change relative zol 0.8.5 linux build reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo aerusso aerusso.net issue 11144,,
689,181b2adc2a8686fb0c300769b8db7ccc5e635c36,yan Moeller <ryan@iXsystems.com>, 2020-11-03 12:21:09 -0500,11146, freebsd zvol_os use set_error judiciously set_error useful trace error use error occur rather factored end function reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11146,,
690,2d7843401a628ef8c483229742dd58bca70bc27e,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-03 09:20:34 -0800,11148, zts increase variance expected variance test case originally set based local testing additional testing via show large increase expected maximum prevent test incorrectly failing reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11148,,
691,123d2803bfb9b754cee7e721a67a151380efd7e7,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-03 09:19:45 -0800,11147, zts wait event test case fail possible correct config_sync event posted last expected event accommodate run_and_verify function updated wait non history event last event doe increase run time test long event get generated reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11147,,
692,59b687232798a4da0e7647cca19a308aa82b5fad,oleman Kane <ckane@colemankane.org>, 2020-10-18 13:06:18 -0400,11085, linux 5.10 compat added new function added named old revalidate_disk appears deprecated zfs code call function swapping old function call new one required reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11085,,
693,ae15f1c1d88d85cc1af8152559d50a4baf5e50c5,oleman Kane <ckane@colemankane.org>, 2020-10-18 12:54:21 -0400,11085, linux 5.10 compat removed kernel 5.10 removed favor caller using faster instead explicitly forcing bdev revalidation desire behavior preserve prior behavior wrapped macro call inline function new api mimic old behavior exist call exists reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11085,,
694,838a2490123a596ac7771894311f17269f47024c,oleman Kane <ckane@colemankane.org>, 2020-10-18 10:36:12 -0400,11085, linux 5.10 compat percpu_ref added data member kernel commit 2b0d3d3e4fcfb brought change struct percpu_ref structure move field member struct named data type struct percpu_ref_data includes count member updated update function chase api change detect via configure reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 11085,,
695,8c7d604c62bf621c11faf3abe64cfa94bd12b45b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-11-02 21:39:50 +0000,11085, linux 5.10 compat frame.h renamed objtool.h linux 5.10 linux frame.h header renamed linux objtool.h add configure check detect use correctly named header signed brian behlendorf behlendorf1 llnl.gov close 11085,,
696,7eefaf0ca04734a6eed399ed684465ddf31179f4,ebastian Gottschall <s.gottschall@dd-wrt.com>, 2020-11-02 21:10:07 +0100,11126, optimize locking check mempool allocator avoid checking whole array object time removing self organized memory reaping managed global memory reap callback called every second reduce use locking operation significant reviewed kjeld schouten kjeld schouten lebbing.nl reviewed mateusz guzik mjguzik gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed sebastian gottschall s.gottschall wrt.com close 11126,,
697,ab8c935ea65e1a4d92311c9b84adc77047ba0b2f,hristian Schwarz <me@cschwarz.com>, 2020-11-02 21:07:07 +0100,10979, zfs_vnops make zfs_get_data independent move zfs_get_data platform independent code platform specific aspect way release inode linux vnode_t freebsd aware platform could supported zfs implement zfs_rele_async sibling zvol_get_data already platform independent reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 10979,,
698,09eb36ce3d98e0eeaeec9c333ac818b2bc3f85bf,ateusz Guzik <mjguzik@gmail.com>, 2020-11-02 20:51:12 +0100,11142, introduce current cpu_seqid user care possibly changing cpu enclose within kpreempt disable enable order fend warning linux need expected way get cpu allowing migration use order make future proof patch keep cpu_seqid introduces instead make clear consumer explicitly want behavior reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11142,,
699,8583540c6e04135626fe301ace8aa51212826965,atthew Macy <mmacy@freebsd.org>, 2020-10-31 09:40:08 -0700,11125, consolidate zfs_holey zfs_access zfs_holey zfs_access function made common freebsd linux reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11125,,
700,2f94e8f09ee37e83d9e74332e125c02841364639,yan Moeller <ryan@iXsystems.com>, 2020-10-31 12:37:56 -0400,11131, remove duplicate cond_resched definition reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11131,,
701,65a343bbd3b2c9f61b5970828a80443871ae39ac,yan Moeller <ryan@iXsystems.com>, 2020-10-21 18:09:17 +0000,11117, zvol_os fix handling zvol private data zvol private data supposed nulled zvol_free called indicator zvol going away implement volmode dev assert called zvol_free check called updating volsize fail enxio reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
702,277884ab428f33b3185a4dc0b2175239c9504c57,yan Moeller <ryan@iXsystems.com>, 2020-10-21 18:05:18 +0000,11117, zvol_os leak doi cdev error path make sure free doi impl make_dev_s fails reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
703,9a0ef216e53fef8c1166154efb4b259d889ec83d,yan Moeller <ryan@iXsystems.com>, 2020-10-21 17:59:15 +0000,11117, zvol_os properly ignore error volmode lookup fall back default volmode continue looking zvol volmode property fails set error ensure take success path section make sure log zvol created success reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
704,1a6a75ac07457f66461bb1eada71d11e68a89f8a,yan Moeller <ryan@iXsystems.com>, 2020-10-21 17:54:38 +0000,11117, zvol_os code cleanup nonfunctional change readability consistency reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
705,260f6a28af1075ad02c5d8b2ee70d7049b9b52f5,yan Moeller <ryan@iXsystems.com>, 2020-10-21 17:46:48 +0000,11117, zvol_os keep better track open count close zvol_geom_close get count number close operation make sure always using count check last close operation performed zvol reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
706,0b32d81783bad54540792fc3701817a7b49025ca,yan Moeller <ryan@iXsystems.com>, 2020-10-21 17:23:08 +0000,11117, zvol_os tidy asserts using specific assert variant give better message failure functional change reviewed alexander motin mav freebsd.org reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 11117,,
707,c4ede65bdfca11b532403620bbf0d6e33f0c1c1d,ateusz Guzik <mjguzik@gmail.com>, 2020-10-30 23:26:10 +0100,11129, zstd track allocator statistic note track size requested caller actual allocated space almost always bigger e.g. rounded next power page size additionally allocated buffer may holding area hostage nonetheless starting point tracking memory usage zstd reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com reviewed kjeld schouten kjeld schouten lebbing.nl signed mateusz guzik mjguzik gmail.com close 11129,,
708,e8beeaa1116cc771360a24c9c1f9e6f47ced0e28,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-10-30 23:24:21 +0100,11102, icp gcm allocate hash subkey table separately evaluating assembler implementation turn precomputed hash subkey table vary size byte avx2 avx512 byte avx512 vaes depending implementation able handle size difference later allocate gcm_htable dynamically rather fixed size array adapt consumer reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 11102,,
709,d9655c5b3723abc21dc2915e8d6aecf22d842527,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-10-30 23:23:18 +0100,11101, add missing cfi frame info aesni gcm x86_64.s preparing 9749 .cfi_ start end proc directive missed add missing one see upstream http github.com openssl openssl commit 275a048f reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 11101,,
710,115216cc9290d54e8c12d2f5d858f1ec082ad657,ateusz Guzik <mjguzik@gmail.com>, 2020-10-30 23:22:04 +0100,11136, freebsd catch 1300124 version bump use cache_vop_mkdir cache_rename reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed allan jude allan reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11136,,
711,d1e4ded7bc69c2805e42ee06d76e0f541214a41f,yan Moeller <ryan@iXsystems.com>, 2020-10-30 18:19:02 -0400,11139, freebsd fix 12.2 stable at_beneath mfc at_beneath merged stable kern_unlinkat take non const path deconst path passed kern_unlinkat case at_beneath defined reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11139,,
712,5fa356ea44240c188ad0e4f7b6af20c3f1b99257,atthew Macy <mmacy@freebsd.org>, 2020-10-30 10:00:33 -0700,11124, remove uio_zerocopy function structure original xuio zero copy functionality always unused linux freebsd remove disabled code avoid confusion improve readability reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11124,,
713,1199c3e8fb9006f28e11c747101ba770cc0bf743,lexander Motin <mav@FreeBSD.org>, 2020-10-30 11:57:54 -0400,11116, yield periodically rebuilding l2arc l2arc device several terabyte filled 4kb block may take minute rebuild due way l2arc log reading implemented quite likely time rebuild thread never sleep least freebsd kernel thread absolute priority preempted thread lower priority thread also bound specific cpu may get cpu time minute reviewed cedric berger cedric precidata.com reviewed ryan moeller freqlabs freebsd.org reviewed george amanakis gamanakis gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 11116,,
714,76d04993a60fcd30bbb815cfa7f716cbebcdfcbd,yan Moeller <ryan@iXsystems.com>, 2020-10-30 11:55:59 -0400,11132, update reference nonexistent man page code refer correct section alternative freebsd linux reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11132,,
715,e3a6ac8d06210ac035cec8d86fab05549ff54f94,lexander Motin <mav@FreeBSD.org>, 2020-10-30 11:50:57 -0400,11130, freebsd remove bio_ordered flag bio_flush zfs always wait write completion flushing cache doe require explicit ordering fence around pretty difficult implement nvme since one internal concept strict request ordering already removed freebsd got resurrected mistake openzfs merge reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 11130,,
716,f829227f49117c4466bab88e90c187b273211c5f,ony Hutter <hutter2@llnl.gov>, 2020-10-30 08:47:42 -0700,11133, zts fix xattr_004_pos failure use tmpfs previously xattr_004_pos would create file xattrs tmpfs ext2 copy zfs verify xattrs preserved however tmpfs support xattrs never noticed fedora 33. fedora older tmp root partition like ext4 whereas fedora tmp actually tmpfs caused test fail fedora fix update test create file ext2 tmpfs reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 11133,,
717,973ba682f5cbbc8e89683fb439bd0605afc2b43a,ateusz Guzik <mjguzik@gmail.com>, 2020-10-29 17:54:20 +0100,11115, linux leftover fence zfs_znode_alloc port removed provision zfs_znode_move cleanup missed bit quote original snip zfsvfs z_all_znodes membar_producer  everything else must valid assigning z_zfsvfs make znode eligible zfs_znode_move  z_zfsvfs zfsvfs snip current code immediately followed unlock issue fence thus play role correctness reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed mateusz guzik mjguzik gmail.com close 11115,,
718,082ff328f2582ac32b74e40328c89fe7a74f4dbf,ateusz Guzik <mjguzik@gmail.com>, 2020-10-29 17:52:50 +0100,11114, freebsd unused zfs_znode_move support allocator doe provide functionality begin reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed mateusz guzik mjguzik gmail.com close 11114,,
719,4ce728d028bc8bc32dfeced2a590edec12be565d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-10-27 09:43:36 -0700,11113, use known license string zlua linux kernel module_license macro recognizes handful license string mit one update macro use dual mit gpl recognized kernel expects mit licensed module use reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 11112 close 11113,,
720,5c810ac4999b773ec0528ca72c946d3acc82e87d,yan Moeller <ryan@iXsystems.com>, 2020-10-26 17:34:28 -0400,11099, freebsd skip raw kstat sysctls default kstats often expensive compute want avoid unless specifically requested following kstats affected change kstat.zfs pool .multihost kstat.zfs pool .misc.state kstat.zfs pool .txgs     freebsd sysctl updated still list name description type skipped sysctls still discoverable reviewed allan jude allan reviewed mateusz guzik mjguzik gmail.com signed ryan moeller ryan ixsystems.com close 11099,,
721,01a65c5861fb445e2a1f7aeceeaa821b595281c2,ateusz Guzik <mjguzik@gmail.com>, 2020-10-26 22:32:17 +0100,11104, freebsd catch 1300123 version bump removed thread argument vop_inactive removed cred argument vop_vptocnp reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11104,,
722,3928ec53395fcc26be7844dd6b63df757166c281,y Schubert <cy@FreeBSD.org>, 2020-10-22 12:15:17 -0700,11088, restore identification vdevs using non native block size name state read write cksum dsk02 online mirror online ada1s4a online ada2s4a online block size 512b configured 4096b native reviewed matt macy mmacy freebsd.org reviewed toomas soome tsoome me.com reviewed brian behlendorf behlendorf1 llnl.gov signed schubert freebsd.org close 11088,,
723,1e36af8c7b217cd020b5ff0a02d9019737cc5ba4,touqh <72357159+xtouqh@users.noreply.github.com>, 2020-10-22 21:28:10 +0300,11086, properly format name subsection zfs zpool subcommands use proper name i.e zfs allow zpool add name subsection zfs zpool subcommands instead current pretty printed one makewhatis utility implementation namely one mandoc suite used freebsd look document title also name subsection adding zfs zpool search result correct common sense utility splitting subcommands multiple man page e.g git reviewed brian behlendorf behlendorf1 llnl.gov signed xtouqh xtouqh hotmail.com close 11086,,
724,eb02a4c6fbf25388858099fc63de98192d5d2f66,yan Moeller <ryan@iXsystems.com>, 2020-10-22 13:18:26 -0400,11094, add missing tunable even documented already reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11094,,
725,2aaab887bb8693722f601c0576462cc82a47698f,yan Moeller <ryan@iXsystems.com>, 2020-10-21 17:09:14 -0400,11090, arcstat add option freenas added option automatically print valid statistic added option suppress scaling printed data reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov authored nick principe 32284693 powernap ported ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 11090,,
726,e53d678d4ad596a310d51dab107bb6fa97e2b226,atthew Macy <mmacy@freebsd.org>, 2020-10-21 14:08:06 -0700,11078, share zfs_fsync zfs_read zfs_write linux freebsd zfs_fsync zfs_read zfs_write function almost identical linux freebsd little refactoring moved common code done commit reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11078,,
727,666aa69f32ff2558ef9e9a27bc4cb5559e21d795,dam D. Moss <c@yotes.com>, 2020-10-20 11:39:52 -0700,10921, non l2arc pool read l2arc miss current l2_misses accounting behavior treat read pool without configured l2arc l2arc miss iff least one pool system doe l2arc configured make extremely hard tune improved l2arc hit miss ratio ratio modulated read pool l2arc device upper limit depend ratio read l2arc pool non l2arc pool prevents arc read affecting l2arc stats n.b l2_misses relevant one target spa l2arc includes new test reviewed brian behlendorf behlendorf1 llnl.gov reviewed george amanakis gamanakis gmail.com signed adam moss yotes.com close 10921,,
728,241c62bdd7fbc0683d54c40b4a184cf889ebd774,yle Evans <kevans91@users.noreply.github.com>, 2020-10-20 13:34:59 -0500,11077, makefile.bsd remove directory longer exists removed reorganization directory preparing merge freebsd support 006e9a408824 mmacy llvm perfectly happy nonexistent directory gcc6 gcc9 elect use cross toolchains trip reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed kyle evans kevans freebsd.org close 11077,,
729,ff2f54246d6e10863feac613fedafaf89cff002c,atthew Macy <mmacy@freebsd.org>, 2020-10-20 08:53:16 -0700,11079, freebsd delete unreferenced file zfs_onexit_os.c deleted removed build reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11079,,
730,777b8ccc352704526b2349e6b52940333079c962,yan Moeller <freqlabs@FreeBSD.org>, 2020-10-20 11:35:53 -0400,11070, fix commitcheck freebsd convert bash avoid perl regexes prune unused function reviewed mateusz piotrowski 0mp freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11070,,
731,13d65987a9d9958de77422f5d9d25b47e486537d,on Brady <don.brady@delphix.com>, 2020-10-19 12:01:00 -0600,10967, zed syslog entry drop important info zed log zevents summary syslog however log entry tend drop event detail useful diagnosis especially true ereport event like checksum delay update syslog.sh script log additional event information add optional config option zed.rc choosing guids name pool vdev change default exclude history_event event event tend frequent convey meaningful info already logged zpool history reviewed john kennedy john.kennedy delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 10967,,
732,ab6a0e236e2ada3c88882b52f9060a0fdac29fec,yan Moeller <freqlabs@FreeBSD.org>, 2020-10-16 16:21:28 -0400,11071, ignore zpool_influxdb binary requested forgotten 10786 reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11071,,
733,41e2b3de13521230e3447e737638e73830ddfa3d,ateusz Guzik <mjguzik@gmail.com>, 2020-10-15 05:08:20 +0000,11066, freebsd add missing fplookup_vexec handler special vop vector otherwise lookup fail eopnotsupp panic reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11066,,
734,34cda44af61139582387a06fd2b8a7d1dfcedf64,ateusz Guzik <mjguzik@gmail.com>, 2020-10-15 05:07:02 +0000,11066, freebsd unused vop vector reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11066,,
735,dff71c793684fcf3a01495f24014797d7faaa88c,on Brady <don.brady@delphix.com>, 2020-10-15 15:45:16 -0600,11053, ignore special vdev ashift spa ashift min max removal vdev normal class would fail special deup vdev different ashift vdevs normal class moved initialization spa_min_ashift spa_max_ashift vdev_open occurs vdev allocation bias initialized i.e vdev_load caveat order remove special dedup vdev must ashift normal pool vdevs could perhaps lifted future i.e case ample space surviving special class vdevs reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 9363 close 9364 close 11053,,
736,15a4ca4620b7a550902cdd998ff7949c354915e7,hristian Schwarz <me@cschwarz.com>, 2020-10-14 23:04:19 +0200,11048, fix crash caused invalid snapshot name redactnvl follow fix commit 0fdd6106bb verify true hit error code path see added test case reproducer reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 11048,,
737,6a60ef80e2f00fca81f02a6eb93a520a29d6ae03,aul Dagnelie <paulcd2000@gmail.com>, 2020-10-14 08:59:54 -0700,11056, fix incorrect deletion order gap case side effectful call like add remove reference range segs stored btrees longer used safely move remove call reinsertion call seg remains valid long need reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 11044 close 11056,,
738,47a7e999398c98e65d0f5aefb6de947a106144fb,ateusz Guzik <mjguzik@gmail.com>, 2020-10-14 17:57:03 +0200,11059, freebsd fix panic due tqid overflow bit counter eventually wrap sentinel invalid  make bit lp64 platform check otherwise note linux counterpart stored per queue instead global check going way feasible goal minimal fix job reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed mateusz guzik mjguzik gmail.com close 11059,,
739,485b50bb9e6772240af32fba434ddb8ebfa8cede,yan Moeller <ryan@iXsystems.com>, 2020-10-14 00:25:48 -0400,10520, cross platform acltype acltype property currently hidden freebsd doe reflect nfsv4 style zfs acls used platform make difficult observe pool imported freebsd linux different type acl ignored vice versa add nfsv4 acltype expose property freebsd make default acltype nfsv4 freebsd setting acltype unhanded style treated setting acls removed ignored reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10520,,
740,b302185a9283fa93ce98d17ca9893437753ec665,arner Losh <imp@bsdimp.com>, 2020-10-13 22:05:49 -0600,10998, freebsd make adjustment standalone environment freebsd three compile environment supported user land kernel bootloader standalone adjust header compile standalone environment limit kernel item view _standalone defined reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed warner losh imp freebsd.org close 10998,,
741,57dc5d42b185d2983717580b7fb58bfe423cd834,atthew Macy <mmacy@freebsd.org>, 2020-10-13 21:03:36 -0700,11052, dmu_zfetch leak unreferenced stream zfetch freed currently stream freed referencing zfetch reference zero old new request come zfetch mean leak unreferenced stream zfetch structure freed change check reference count stream zfetch free time zero free immediately remaining reference allow prefetch callback free completion time reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 11052,,
742,6ba2e72b7899771f588dc4557624c186be2c2176,arner Losh <imp@bsdimp.com>, 2020-10-13 22:01:40 -0600,11055, aarch64 use proper guard neon instruction zstd code assumes aarch64 neon instruction necessarily true boot loader might vfp properly initialized instruction may available also error include arm_neon.h neon insturctions enabled change guard using neon instruction __aarch64__ __arm_neon standard symbol knowing available __arm_neon proper symbol defined arm language extension release 2.1 http documentation ihi0053 source suggest __arm_neon__ obsolete spelling prior version standard updated based zstd pull request http github.com facebook zstd pull 2356 reviewed brian behlendorf behlendorf1 llnl.gov signed warner losh imp bsdimp.com close 11055,,
743,92286311f824dc0538e1eb2c8561ad3eb349c90f,dam D. Moss <c@yotes.com>, 2020-10-13 16:51:54 -0700,11042, add zfs.sh module unload error message module fail unload outstanding user consider success reviewed brian behlendorf behlendorf1 llnl.gov signed adam moss yotes.com close 11042,,
744,701f656b970485577899db84f024cd85121149b2,hristian Schwarz <me@cschwarz.com>, 2020-10-14 01:46:00 +0200,11047, dmu.h remove stale declaration reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed christian schwarz cschwarz.com close 11047,,
745,2ce14cdf6893f52afff8daa7bce6adf2a8356698,ateusz Guzik <mjguzik@gmail.com>, 2020-10-14 01:41:26 +0200,11045, freebsd use cache_rename available reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org signed mateusz guzik mjguzik gmail.com close 11045,,
746,b3a216fba0a2f0c0b8691e07faf431606d6acfad,athieu Velten <matmaul@gmail.com>, 2020-10-14 01:36:36 +0200,11049, blkg_tryget config test initialize struct missing struct initialization config test result interface incorrectly detected reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed mathieu velten matmaul gmail.com close 10713 close 11049,,
747,4b59c195ffbaebfdd5f0971a54613c0ed7c42005,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-10-13 18:51:13 +0200,11050, increase supported linux kernel 5.9 increase linux kernel version 5.9 5.8 compatibility fix already included reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel snajdr snajpa snajpa.net signed kjeld schouten lebbing kjeld schouten lebbing.nl close 11050,,
748,e191b60ddc2bc5697f2b28558f8156d4357d79c0,yan Moeller <ryan@iXsystems.com>, 2020-10-13 12:38:40 -0400,11033, freebsd improve message common mistake failed autoload module due permission issue running zfs command user operation permitted unhelpfully vague error message use thread local message buffer format nicer error message infer loading kernel module failed module loaded extended heuristic error future looking stuff remove unused thread local message buffer found libspl remove inaccurate verbiage comment reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11033,,
749,7dfc56d8661aa862364f9ccf76751fe6d2946c29,yan Moeller <ryan@iXsystems.com>, 2020-10-13 12:32:34 -0400,11038, expose tunable freebsd value tunable switch new openzfs tunable name changed breaking legacy compat restore legacy compat tunable properly expose tunable new name platform document zfs module parameter clean documentation bit reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 11038,,
750,61868bb14d33e9b787ab810533c359888c1c76db,hristian Schwarz <me@cschwarz.com>, 2020-10-09 18:34:54 +0200,11020, zil_parse make callback parameter const code cleanup follow commit 4d55ea81 reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com authored ryan moeller ryan freqlabs.com signed christian schwarz cschwarz.com close 11020,,
751,e9527d44e655fe6fda4f154b396a1e5890abc539,ichard Elling <Richard.Elling@RichardElling.com>, 2020-10-09 09:29:21 -0700,10786, add zpool_influxdb command zpool_influxdb command introduced ease collection zpool statistic influxdb time series database example given integrate telegraf statistic aggregator companion influxdb finally grafana dashboard template included show pool latency distribution visualized zfs telegraf influxdb grafana environment reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed richard elling richard.elling close 10786,,
752,b7ab7ae2410f5152318cbb71675e9ba94d7562cb,yan Moeller <ryan@iXsystems.com>, 2020-10-09 12:27:14 -0400,11025, linux initialize zfs_setattr_dir value used without initialized condition initialize pointer null add regression test case using chown acl posix however enough setup set xattr mean zfs_setattr_dir called create second group acl test acl posix duplicating acl posix test symlinks remove xattr original acl posix test provides coverage default xattr code reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10043 close 11025,,
753,d0249a4bd0da59f20edadba409d0620d387e4e26,rian Behlendorf <behlendorf1@llnl.gov>, 2020-10-08 20:10:13 -0700,11007, replace zfs linux reference openzfs change update documentation refer project openzfs instead zfs linux web link updated refer http github.com openzfs zfs extraneous zfsonlinux.org web link zed spl source dropped reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 11007,,
754,07f5d4d66313932f27d4294f2a996dc365f39fc4,acob Adams <tookmund@gmail.com>, 2020-10-09 03:07:10 +0000,11032, fix linux module uninstall missing semicolon kmoddir variable declaration uninstall loop caused linux fail syntax error unexpected reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed jacob adam jacob tookmund.com close 11032,,
755,84cfe5d4f88da37c10e13b27e3e97d5bff788a23,yan Moeller <ryan@iXsystems.com>, 2020-10-08 19:39:23 -0400,11026, zts fix path dev null direct stdout stderr test_base_dir null direct dev null reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 11026,,
756,a8fc1b8743f1abfe6b9c5922f6d7617d4959d51d,huck Tuffli <ctuffli@gmail.com>, 2020-10-08 16:37:27 -0700,11024, fix ubsan shift exponent large running libzpool undefined behavior sanitizer ubsan enabled zpool create cause run time error module zfs vdev_label.c 600 runtime error shift exponent large bit type long long unsigned int  fix convert base logarithm using highbit64 compare shift reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed chuck tuffli ctuffli gmail.com close 9744 close 11024,,
757,36482bf607735598abf660a17a2adc2244353c2b,hristian Schwarz <me@cschwarz.com>, 2020-10-08 18:43:51 +0200,11021, libzfs_sendrecv zfs_send remove unused pipefd tid variable fixup 196bee4 gcc gcc 9.2.1 20190827 red hat 9.2.1 code removed caused wmaybe uninitialized error reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed christian schwarz cschwarz.com close 11021,,
758,73989f4b9ec3b550bdd10ba8ba2ab64b91e4e71b,yan Moeller <ryan@iXsystems.com>, 2020-10-08 12:40:23 -0400,11008, make dbufstat work freebsd procfs_list kstats implemented freebsd dbufs exposed  freebsd dbufstats use sysctl instead procfs input file given enable dbufstats test freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11008,,
759,82b81a2acd92cb43322bc572d2e547b66e456cd9,yan Moeller <ryan@iXsystems.com>, 2020-10-08 12:37:56 -0400,11000, freebsd sort dedup includes kmod_core code cleanup sort includes remove duplicate drop extra blank line kmod_core.c reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 11000,,
760,b0c9239f17c07e5ceb91058e83ae1da82a16f4dc,eorge Melikov <mail@gmelikov.ru>, 2020-10-08 19:33:53 +0300,11022, doc update readme installation link openzfs cross project reviewed ryan moeller ryan ixsystems.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 11022,,
761,a76e4e676180acad9e12f5a1e03f5ff48ec85983,eorge Amanakis <gamanakis@gmail.com>, 2020-10-05 18:29:05 -0400,10983, make l2arc test robust instead relying arbitrary timer pool export import cache device online rely arcstats make l2arc test robust also cleanup function related persistent l2arc reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed george amanakis gamanakis gmail.com close 10983,,
762,4e84f67a96837008735e988b84309f9b292de26f,oomas Soome <tsoome@me.com>, 2020-10-06 00:05:28 +0300,11006, zdb output binary data terminal zdb interpreting byte array textual string dump_zap also binary array output binary data terminal reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed toomas soome tsoome me.com external issue http www.illumos.org issue 12012 external issue http www.illumos.org issue 11713 close 11006,,
763,79f0935fab1122d466f67885e84d878c107e34df,yan Moeller <ryan@iXsystems.com>, 2020-10-02 20:48:45 -0400,11005, freebsd sort kernel fpu header 12.1 rel missing include kernel fpu function breaking build freebsd 12.1 release apparently pulled elsewhere stable head sorted includes file reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 11005,,
764,a132c2b413de78981cd958974ad95d3f9cec9dea,lan Somers <asomers@gmail.com>, 2020-10-02 18:47:09 -0600,10999, fix eio resuming receive new dataset existing one resuming interrupted zfs send stream creates new dataset name existing dataset existing dataset accessed failed receive subsequent successful receive return eio happens nothing mount new dataset leaving old longer valid dataset still mounted commit fix zfs receive always unmount remount destination regardless whether stream new stream resumed stream sponsored axcient reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alan somers asomers gmail.com external issue http bugzilla show_bug.cgi 249579 close 10995 close 10999,,
765,4d55ea811d4f5b832398f4e3b24c4da365956d62,yan Moeller <ryan@iXsystems.com>, 2020-10-02 20:44:10 -0400,10997, throw const string const indicates reader mutation occur also serve hint ownership add const place make sense reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10997,,
766,5b525165e9113e7faabd230b504ae4e9b85d35a5,ohn Poduska <jpoduska@datto.com>, 2020-10-02 20:40:46 -0400,10978, mismatched nvlist name cause zfs send ... fail resume send unknown error 1030 turn name value pair verification list wrong name ioctl got kicked update name accordingly reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed john poduska jpoduska datto.com close 10978,,
767,266d1121c3f49da05abcbdd527bf12b5d5a06df6,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-30 13:27:51 -0700,10996, fix buggy warning kernel seq_read helper function expects next update passed position even entry failure result following warning logged seq_file buggy .next function spl update position index functionally issue way implemented warning harmless however want silence scary incorrect warning commit update linux procfs code advance position even last entry reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10984 close 10996,,
768,d688beb19110b21cbfd3e3053833b9d4ec6a277c,yan Moeller <ryan@iXsystems.com>, 2020-09-30 16:25:50 -0400,10994, freebsd fix legacy compat platform iocs request number bound platform table subtract starting offset get correct subscript reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10994,,
769,1cb8202b1b0b5810ab9eaecd19fc84f8ffb874d9,atthew Macy <mmacy@freebsd.org>, 2020-09-30 13:24:38 -0700,10993, eliminate gratuitous bzeroing take much longer need repeatedly bzeroing buffer fact buffer need null terminated reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10993,,
770,8a171ccd9258c9528af413562b5bd6b994cf9c2e,ebastian Gottschall <s.gottschall@dd-wrt.com>, 2020-09-30 22:22:34 +0200,10969, cyclic seek unused memory object pool non regular use case allocated memory might stay persistent memory pool small patch check every minute old object released memory pool right regular use pool checked old object allocation attempt pool basically polling use consider happens someone writes lot file stop use volume even unmounts code longer check object released pool already allocated object still stay pool cache big issue common use someone discovered issue test personally know behavior aware big issue enhancement reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten lebbing kjeld schouten lebbing.nl signed sebastian gottschall s.gottschall wrt.com close 10938 close 10969,,
771,c0bd2e0fe206791242d467b6f84789bf08c3a118,yan Moeller <ryan@iXsystems.com>, 2020-09-30 16:19:49 -0400,10919, drop reference skipping dmu_send due exdev invalid incremental send requested make sure drop reference pool dataset returning error add assert freebsd make sure hold lock returning ioctl add test coverage reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10919,,
772,68cdafdbb8c3515328cedd351b471e1bb918bd27,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-09-30 22:17:30 +0200,10962, add intel_qat patch add community compatibility patch intel qat due incompatibility higher kernel version also includes basic instruction reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10961 close 10962,,
773,5aa3e3d3be4b0c2a2f30cd0a6de49ad1d0c42de2,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-28 18:43:27 -0700,10992, use known license string zzstd linux kernel module_license macro recognizes handful license string bsd one update macro use dual bsd gpl recognized kernel expects bsd licensed module use reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 10982 close 10992,,
774,4c5159cc5cb08f00c2a69d2b1dd0d5420745eb4b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-28 16:42:54 -0700,10991, fix configure check check accidentally broken kabi check updated run parallel commit 608f874 check must name determine symbol license compatible reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10991,,
775,96951e0327ecc6f54125775ab807ba7dc9189b9b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-28 16:40:50 -0700,10990, fix objtool configure check objtool configure check incorrectly fail missing header test appears result recent kernel change observed fedora 5.8.11 200 kernel file included home fedora zfs build objtool objtool.c arch x86 include asm frame.h 100 error struct pt_regs declared inside parameter list visible outside definition declaration werror consequence check never run set incorrectly result build failure change add appropriate header objtool check behaves intended reviewed kjeld schouten kjeld schouten lebbing.nl reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10990,,
776,53245fe337d1c79e28a4b3837bc589b126bc17da,rodik <pat@litke.dev>, 2020-09-17 20:19:13 -0400,10948, note key must loaded zpool remove error returned zpool remove encryption key loaded helpful furthermore man page make mention key need loaded change resolve error message doe update man page mention requirement authored grodik pat litke.dev reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10939 close 10948,,
777,595b7e99d38f42e433bc0736d51d8f3be394e20f,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-09-28 22:23:49 +0200,10976, document branching structure change document currently used branching structure cut include controversial change reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10976,,
778,af20b97078af7bf4ba7552dff04cc40b643ab72c,atthew Macy <mmacy@freebsd.org>, 2020-09-27 17:08:38 -0700,10900, zfetch issue new stream old completed current dmu_zfetch code implicitly assumes complete within min_sec_reap second async dmu readonly workload thus exponential backoff operation write throttle l2arc rebuild possible saturate drive request effectively compounded prefetch request change reference count stream prevents recycled min_sec_reap timeout still outstanding reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10900,,
779,cf2667759f4583bddd4b6ce8167e48b041ae1ea3,llan Jude <allan@klarasystems.com>, 2020-09-25 17:37:10 -0400,8915, zfs userspace use argument path change zfs userspace subcommand use provided dataset path usr dataset rpool usr reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed allan jude allan close 8915,,
780,acfd2d4641a137a1a22c206597ef951d406a1cf6,dam D. Moss <c@yotes.com>, 2020-09-25 13:49:22 -0700,10953, add dbuf_read dnode.c prefetching dnodes dbuf_read cause significant mutex contention workload helpful already get dnodes block read iterating directory prefetch dnodes directory disable prefetching prevent lock contention reviewed brian behlendorf behlendorf1 llnl.gov submitted adam moss yotes.com submitted matthew ahrens mahrens delphix.com signed adam moss yotes.com close 10877 close 10953,,
781,2e407941a2148ab400d8b4e3748cc894e411c0c4,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-25 13:28:35 -0700,10973, fix preemption blk_cgroup config arm64 preemption blk_cgroup used arm64 gpl function hence build dkm kernel module fails fix redefining safe long tracing used reviewed brian behlendorf behlendorf1 llnl.gov signed juerg haefliger juergh canonical.com close 8545 close 9948 close 10416 close 10973,,
782,f6bb7c029cabba405ff7072bfefa1dee55ccf0b4,ateusz Guzik <mjguzik@gmail.com>, 2020-09-25 22:23:43 +0200,10970, freebsd update cache_purgevfs usage 1300117 version bump reviewed ryan moeller freqlabs freebsd.org reviewed nick wolff darkfiberiru gmail.com signed mateusz guzik mjguzik gmail.com close 10970,,
783,fa1912e80fa75d5ec25ae8a8cac1296104c9b13c,yan Moeller <ryan@iXsystems.com>, 2020-09-03 21:15:32 +0000,10884, freebsd code cleanup zio_crypt address unused value control flow issue flagged coverity unreachable code pruned unused value avoided scattered section reordered coherence assume kmem_alloc km_sleep fail need check returned null allocated memory need zeroed last iovec mac reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10884,,
784,863e38453ee537ab59b3729b32d9d88ca2b884bc,yan Moeller <ryan@iXsystems.com>, 2020-09-03 19:23:30 +0000,10884, prune dead branch reported coverity wkey null every goto error dcp never null reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10884,,
785,bd76bcb36dcdc7264f17a64b506fe2a1fdf266b9,eorge Wilson <george.wilson@delphix.com>, 2020-09-25 15:09:40 -0500,10934, zpool command complains etc exports.d etc exports.d directory doe exist create performing action already requires root privilege commit move directory creation enable disable code path ensures appropriate privilege reviewed richard elling richard.elling reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson gwilson delphix.com close 10785 close 10934,,
786,a5c77dc4d53ea86d048a9c251015eed14d57e0a7,hristian Schwarz <me@cschwarz.com>, 2020-09-25 22:06:34 +0200,10956, zfs_log_write simplify data copying code wr_copied record lr_write_t record wr_copied record data directly appended see lr_write_t type definition data copied debuf using function called wr_copied record part short circuiting statement expression found side effectful call pretty hard spot patch improves readability moving call line reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed christian schwarz cschwarz.com close 10956,,
787,7b8363d7f0ca85a2dde7473d6079147387f2f1fc,atthew Macy <mmacy@freebsd.org>, 2020-09-23 16:43:51 -0700,10890, freebsd add support procfs_list procfs_list interface required several kstats implement functionality freebsd provide access kstats reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10890,,
788,3dad29fb4b085a159d26e2322dc07b46950ff72e,atthew Macy <mmacy@freebsd.org>, 2020-09-23 11:09:48 -0700,10899, freebsd save user fpu context kernel thread reviewed alexander motin mav freebsd.org reviewed ryan moeller freqlabs freebsd.org signed matt macy mmacy freebsd.org close 10899,,
789,eb267f08cf52fb5f31c6c671bfc0f2cfbf6d0c06,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-09-23 18:53:26 +0200,10965, update issue template commitcheck contributing.md remove openzfs port commit check remove openzfs port contributing.md add mailing list irc issue template selector remove blank issue option issue creator reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov authored george melikov mail gmelikov.ru signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10965,,
790,20dfe8cd3b63773f0c50a5c611300843c28ef6ae,aul Dagnelie <paulcd2000@gmail.com>, 2020-09-22 16:16:07 -0700,10916, set numobjs uint64_max near resolve issue zfs send stream 0.8.4 prevents received version 0.7 reviewed matthew ahrens mahrens delphix.com reviewed paul zuchowski pzuchowski datto.com signed paul dagnelie pcd delphix.com close 10911 close 10916,,
791,e865e7809e3c920d1d37e52978ea1175957cc4a0,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-09-23 01:10:09 +0200,10917, contrib initramfs fix shellcheck checkbashisms error shebang reviewed gabriel devenyi gdevenyi gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 10908 close 10917,,
792,c6f5e9d92f1af425cc190fe1d0c8946170bbb570,eorge Amanakis <gamanakis@gmail.com>, 2020-09-22 19:08:05 -0400,10951, restore clearing l2cache flag arc_read_done commit 45152dc removed clearing l2cache flag arc_read_done moved related code careful code inspection arc_read_done bypassed case prefetches thus restore old behavior reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed george amanakis gamanakis gmail.com close 10951,,
793,0daa0320e99437c72aac946500f445875e476010,ark Johnston <markjdb@gmail.com>, 2020-09-22 19:05:52 -0400,10960, fix logic bug freebsd getpages vop commit cd32b4f5b79c fix deadlock freebsd getpages vop introduced bug porting patch originally committed freebsd rangelock pointer may null try operation failed must avoid calling case reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com reviewed matt macy mmacy freebsd.org reported steve swill freebsd.org signed mark johnston markj freebsd.org close 10519 close 10960,,
794,5f8a9e6a028e9528567682cb0a92addb23032787,yan Moeller <ryan@iXsystems.com>, 2020-09-22 19:03:11 -0400,10959, freebsd reduce stack usage lua use reduced buffer size lauxlib used linux fix panic head lua gsub test designed exhaust stack space remove special case reserve stack space freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed kyle evans kevans freebsd.org signed ryan moeller ryan ixsystems.com close 10959,,
795,6bdb09510bd27038ee85c372035b27120a4f46c6,ark Johnston <markjdb@gmail.com>, 2020-09-18 08:45:54 -0400,10836, annontate freebsd sysctls ctlflag_mpsafe without sysctl system call acquire global lock invoking handler noticeable situation running top global lock mostly vestigal continues see use contention still problem default sense mpsafe flag change annotate every handler reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com signed mark johnston markj freebsd.org close 10836,,
796,c50f3c902fa565379e005fa9d0431f17f65f2a04,ark Johnston <markjdb@gmail.com>, 2020-09-18 08:41:28 -0400,10950, fix switch statement indentation freebsd kstat code preparation functional change reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com signed mark johnston markj freebsd.org close 10950,,
797,37b00fb0398e42d31aff174c17e650584b873661,eorge Amanakis <gamanakis@gmail.com>, 2020-09-21 12:26:24 -0400,10945, update documentation l2arc_mfuonly regard even l2arc_mfuonly enabled reflected information useful deciding whether toggle l2arc_mfuonly depending current workload reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10945,,
798,c494aa7f578d5cb844b770f679bd46495242edad,eorge Wilson <george.wilson@delphix.com>, 2020-09-18 14:13:47 -0500,10932, vdev_ashift set motivation context new vdev ashift optimization prevents removal device zfs configuration comprised disk different logical physical block size caused set spa_min_ashift vdev_open later call would result inconsistency spa ashift calculation top level vdev addition optimization logical ignores overridden ashift value would provided ashift val description change reworks vdev ashift optimization set first time device configured still allows physical logical ahsift value set every time device opened value consulted first open reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed cedric berger cedric precidata.com signed george wilson gwilson delphix.com external issue dlpx 71831 close 10932,,
799,908d43d0a9f736af62c0f4b179950bb1262dfd7d,llan Jude <allanjude@freebsd.org>, 2020-09-18 13:23:29 -0400,10882, libzfs leak buf nvlist large resolve freebsd coverity defect cid 1432398 resource leak resource_leak libzfs leak hdl error reading env var resolve freebsd coverity defect cid 1432395 resource leak resource_leak reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allanjude freebsd.org close 10882,,
800,8e82ffba7be213373eb7805cadfb6fe3260f0cdd,eorge Wilson <george.wilson@delphix.com>, 2020-09-17 22:03:10 -0500,10897, pool may become suspended device expansion expanding device zfs need rescan partition table get correct size happen kernel requires device closed part rescan udev notified device link removed recreated leave window vdev code may try reopen device udev recreated link happens pool may end suspended state correct leverage ioctl allows partition information modified even use ioctl also doe remove device link associated zfs data partition eliminates race condition occur kernel reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson gwilson delphix.com close 10897,,
801,a57f954226ce1111a022d1fa615e555c5e735a35,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-09-17 10:55:30 -0700,10920, zdb leak detection fails progress device removal device removal progress location data already moved original location device removed new location pointed indirect mapping leak detection zdb need know location determine already copied load spacemaps removing vdev omit block yet copied use vdev remap find new location problem optimization spacemap loading code zdb processing log spacemaps ignore entry relevant past point copied however entry span point copied i.e partly relevant partly irrelevant processed normally lead illegal spacemap operation example offset 100kb copied spacemap log following entry alloc 50kb 150kb partly relevant free 50kb 100kb entirely relevant free 100kb 150kb entirely irrlevant ignored alloc 50kb 150kb partly relevant entirely irrelevant entry ignored space remains spacemap last entry processed attempt add spacemap partially overlap 100 150kb entry left problem discovered ztest zloop one solution would also ignore irrelevant part partially irrelevant entry i.e processing alloc 150 add 100 spacemap however commit implement simpler solution remove optimization entirely i.e process entire spacemap log without regard point copied reconstructing entire allocatable range tree already code remove part yet copied reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 71820 close 10920,,
802,3c7566cb0dce96e612fd14b69b66726b4522da09,yan Moeller <ryan@iXsystems.com>, 2020-09-17 13:54:14 -0400,10929, freebsd copy f_data dtype_vnode file http d26346 copy f_data dtype_vnode file vnode pointer already stored f_vnode use f_data reused reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10929,,
803,5bed68bdc410a7ed4fc51a3727ee863a977cc920,ohn Poduska <jpoduska@datto.com>, 2020-09-17 13:53:02 -0400,10936, need long hold zpl_mount_impl zpl_mount_impl dmu_objset_hold return pool held dsl_pool_rele sget  spelled dsl pool configuration lock dsl_pool.c requires long hold reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed john poduska jpoduska datto.com close 10936,,
804,741b20ce0c8370d5c7cb31cb82c0b040a535e99b,oomas Soome <tsoome@me.com>, 2020-09-17 20:51:09 +0300,10937, libzfsbootenv lzbe_nvlist_set need store bootenv version vb_nvlist small bug slip initial libzfsbootenv storing nvlist nvlist make sure bootenv using vb_nvlist format reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 10937,,
805,7ead2be3d23d2ed7c541031ca25dd223589a7bd5,yan Moeller <ryan@iXsystems.com>, 2020-09-16 15:26:06 -0400,10918, rename acltype posixacl acltype posix prefer acltype posix retaining old name alias reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10918,,
806,9cc177baa06e8efc0d092886e2c9b3de4b3ee50f,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2020-09-16 12:25:12 -0700,10925, cmd zgenhostid replace simple implementation discovered dracut script zgenhostid always generate little endian etc hostid commit provides simple endianess aware binary update script use new feature include flag force overwrite flag write different file dracut accepting 0x01234567 01234567 value input reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed georgy yakovlev gyakovlev gentoo.org close 10887 close 10925,,
807,9569c31161453e29ec32e3612b91950d2faed83e,avel Snajdr <snajpa@snajpa.net>, 2020-09-07 17:33:34 +0200,10879, fix stack frame size reviewed ryan moeller freqlabs freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10879,,
808,a1c5578ce0ffaa5baaa22177cafea36aa8145d8d,avel Snajdr <snajpa@snajpa.net>, 2020-09-07 17:27:51 +0200,10879, dmu_redact_snap fix possible memleak reviewed ryan moeller freqlabs freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10879,,
809,8c0b16e6e9c33507a0674fada782046e895b06d7,avel Snajdr <snajpa@snajpa.net>, 2020-09-07 17:12:17 +0200,10879, fix stack frame size dmu_redact_snap reviewed ryan moeller freqlabs freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10879,,
810,c95625769db24df81806d8f41bbd34b1da36a5ca,avel Snajdr <snajpa@snajpa.net>, 2020-09-03 17:38:16 +0200,10879, fix stack frame size reviewed ryan moeller freqlabs freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10879,,
811,5797d7cc4c80e279002b1511fe4d7151e955e59d,½Ð°Ð± <nabijaczleweli@nabijaczleweli.xyz>, 2020-09-16 00:43:42 +0200,10923, zpoolprops.8 fix raidz par typo reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ahelenia ziemiaå ska nabijaczleweli close 10923,,
812,1db9e6e4e4c355a89e52f156f63843d01f84866e,oomas Soome <tsoome@me.com>, 2020-09-16 01:42:27 +0300,10774, zfs label bootenv store data nvlist nvlist doe allow support different data type system encapsulate user data nvlist libzfsbootenv library provided reviewed arvind sankar nivedita alum.mit.edu reviewed allan jude allan reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov igor dilos.org signed toomas soome tsoome me.com close 10774,,
813,37325e47499ccdb4eeabfaa61d06a4075390b960,yan Moeller <ryan@iXsystems.com>, 2020-09-15 18:40:03 -0400,10927, linux prevent destruction showing mount devname use zfs_enter zfs_exit protect datasets mount devname retrieved reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10892 close 10927,,
814,085321621e79a75bea41c2b6511da6ebfbf2ba0a,eorge Amanakis <gamanakis@gmail.com>, 2020-09-14 13:10:44 -0400,10743, add l2arc arcstats mfu mru buffer buffer content type currently arc state mfu mru cached l2arc buffer content type unknown knowing information may prove beneficial adjusting l2arc caching policy commit add l2arc arcstats display aligned size byte l2arc buffer according content type data metadata according arc state mru mfu prefetch also expands existing arcstat differentiate mfu mru buffer l2arc cache buffer mru mfu list arc upon caching buffer arc state mru mfu stored header b_arcs_state l2_m u_asize arcstats reflect aligned size byte l2arc buffer according arc state based b_arcs_state also account case l2arc arc cached mru mru_ghost buffer transition mfu reflects alinged size byte l2arc buffer cached prefetch flag set arc dynamically updated prefetch flag l2arc buffer change buffer evicted arc determined l2arc eligible logical size recorded arcstats according arc state upon eviction persistent l2arc committing l2arc buffer log block l2arc metadata b_arcs_state prefetch flag also stored buffer change arcstate prefetch flag reflected arcstats however l2arc metadata currently updated reflect change example l2arc cache mru buffer l2arc metadata arcstats count mru buffer buffer transition mfu arcstats updated reflect upon pool import offlining l2arc device arcstats cleared buffer counted mru buffer l2arc metadata updated bug fix set arc_read_done clear l2cache flag arc buffer however prefetches may issued way arc_read_done bypassed instead move related code account case also add test update manpages l2arc_mfuonly module parameter update manpages code comment move persist_l2arc test l2arc reviewed ryan moeller freqlabs freebsd.org reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10743,,
815,d0cea309e7e2c3de7d08be017341b6c42f3366c9,arald van Dijk <harald@gigawatt.nl>, 2020-09-12 16:22:07 +0100,10898, config zfs build.m4 never define _initramfs rpm_define_util zfs initramfs package never worked rpm based distribution initramfs tool listed dependency zfs initramfs would ordinarily problem enabled usr share initramfs tool present normally case rpm based distribution however package may install unused file even initramfs tool used remove auto detection rpm utils target doe fully remove logic zfs initramfs package split separate rpm utils initramfs target debian build still use reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed harald van dijk harald gigawatt.nl close 10898,,
816,9b77c57d5a346acc5edb5f60918cf00b815da655,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-09-12 08:19:48 -0700,10915, libzutil depends libnvpair libzutil depends libnvpair dependency undeclared build system therefore possible make new command depends libzutil doe directly depend libnvpair commit make dependency explicit reviewed brian behlendorf behlendorf1 llnl.gov reivewed ryan moeller freqlabs freebsd.org signed matthew ahrens mahrens delphix.com close 10915,,
817,8e7fe49b25d63e855a8d230d2775f99d722818ff,ateusz Guzik <mjguzik@gmail.com>, 2020-09-09 19:15:52 +0200,10896, freebsd convert teardown inactive lock read mostly sleepable lock lock taken time regular read write lock avoidably serf mount point wide contention point forward port freebsd revision r357322 quote aforementioned commit sample result incremental build 173.30s user 458.97s system 2595 cpu 24.358 total 168.58s user 254.92s system 2211 cpu 19.147 total reviewed alexander motin mav freebsd.org reviewed ryan moeller freqlabs freebsd.org signed mateusz guzik mjguzik gmail.com close 10896,,
818,c2c7ca0d6d6d4e4351f8819afc2ae4d8b804672e,dch47 <34678034+xdch47@users.noreply.github.com>, 2020-09-09 19:14:04 +0200,10878, force use decimal separator solves issue occurring different decimal operator keep command line interface consistent locale e.g zfs set quota 0.5t reviewed brian behlendorf behlendorf1 llnl.gov signed felix neumã rker xdch47 posteo.de close 10878,,
819,a74259cea063704622b7f3329bef3eadb13ab8b7,laf Faaland <faaland1@llnl.gov>, 2020-09-09 10:12:54 -0700,10873, initialize mmp_last_write mmp thread start great deal time may mmp_init called mmp thread start particularly bad device checking configs etc time long gethrtime mmp_last_write mmp_fail_ns time mmp thread start mmp configured suspend pool pool suspended immediately seen issue 10838 value mmp_last_write matter mmp thread start give mmp thread time issue land mmp writes initialize mmp_last_write mmp thread start reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 10873,,
820,cba6d86638811adaebf4c88441c22575d1194821,yan Moeller <ryan@iXsystems.com>, 2020-09-09 13:10:32 -0400,10901, freebsd drop dependency cryptodev module need kernel interface crypto device node cryptodev reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10901,,
821,feb3a7eef114b6d23bc1aaf5c550b2abeffaca94,eorge Amanakis <gamanakis@gmail.com>, 2020-09-08 14:44:37 -0400,10710, introduce zfs module parameter l2arc_mfuonly certain workload may beneficial reduce wear l2arc device caching mru metadata data l2arc commit introduces new tunable l2arc_mfuonly purpose reviewed matthew ahrens mahrens delphix.com reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10710,,
822,ebc4b52369ea10a2ad3df03b679acdd077e45a48,yan Moeller <freqlabs@FreeBSD.org>, 2020-09-08 14:39:16 -0400,10894, avoid possibility division zero 1000 msec 1000 result division zero found somewhere freebsd using howmany msec 1000 convert tick avoiding potential zero divisor reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10894,,
823,189272f78a775e3ef93499c21c8742c39ab36322,oomas Soome <tsoome@me.com>, 2020-09-08 21:36:52 +0300,10876, error unchecked function return zrl_tryenter reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 10876,,
824,5a877a894e11ea9baa453096a002f38142c9a296,eter Dave Hello <PeterDaveHello@users.noreply.github.com>, 2020-09-09 00:04:36 +0800,10893, add missing option prefix zfs tests.sh usage reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed peter dave hello hsu close 10893,,
825,5266cf48269ac7a067cd1b769fbbb5e3488537fa,abio Buso <dev.siroibaf@gmail.com>, 2020-09-08 17:49:55 +0200,10871, display pbkdf2iters property plain number pbkdf2iters property iteration counter displayed plain number rather binary unit reviewed brian behlendorf behlendorf1 llnl.gov signed fabio buso buso.fabio gmail.com close 10871,,
826,75bf636cd06f5911a35ccd99af96e3087218891d,laviss <leorize+oss@disroot.org>, 2020-09-04 19:03:57 +0000,10880, libshare add missing header nfs.c musl libc zfs failed compile due missing fcntl.h include required open per posix commit add missing fcntl.h include reviewed brian behlendorf behlendorf1 llnl.gov signed hiáº lãª leorize disroot.org close 10880,,
827,7432d29760ebce2415a696bb5fb443c50969e7be,atthew Macy <mmacy@freebsd.org>, 2020-09-04 11:13:27 -0700,10872, freebsd reduce priority zio_taskq_issue writes larger value freebsd priority divided four rq_ppq equal difference insignificant word incrementing pri one linux insufficient reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10872,,
828,ef55446a9ce6a666eb843126eca8a715ff3bb0d6,yan Moeller <ryan@iXsystems.com>, 2020-09-04 14:11:18 -0400,10869, spruce pkg config file libzfs libzfs_core several listed library dependency relevant freebsd configure save library found via pkg config lib _pc use configured automake variable instead hard coded name get actually needed update url point openzfs github repo reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10869,,
829,3ec88ab205636f185a664d34411e107814292ad9,yan Moeller <ryan@iXsystems.com>, 2020-09-01 14:06:22 -0400,10866, man cross reference zfs load key encryption mention reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov submitted harry schmalzbauer signed ryan moeller ryan ixsystems.com close 10866,,
830,782b1c1249b15f4327afc096a23da9124b87ef21,yan Moeller <ryan@iXsystems.com>, 2020-09-01 13:49:35 -0400,10866, man add zfs rename zfs rename synopsis reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10866,,
831,dce63135ae32213f2f0cc963a40f2ca50c6019bd,rian Behlendorf <behlendorf1@llnl.gov>, 2020-09-04 10:39:58 -0700, , sequential scrub resilver updated comment commit d4a72f2 introduced multi phase scrub resilvers continued work presented nexenta 2016 zfs developer summit update source reflect contribution signed brian behlendorf behlendorf1 llnl.gov,,
832,4f0728278615eb42fc5022b2817c082f578e225f,on Brady <don.brady@delphix.com>, 2020-09-04 11:34:28 -0600,10861, avoid posting duplicate zpool event duplicate checksum ereport event misrepresent thing worse seem ideally zpool event corresponding vdev stat error count zpool status unique error error counted demonstrated simple example single bad block datafile read file end degraded vdev even though one unique error pool proposed solution issue eliminate duplicate posting event updating vdev error stats save recent error event interest posting event easily check duplicate posting error reviewed brad lewis brad.lewis delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 10861,,
833,3808032489f28c1f36b39c9a3274d5f4b6f9638a,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-09-04 10:29:39 -0700,10855, nowait synctask must succeed used sync task may fail due enospc however way notice communicate failure extremely difficult use functionality correctly fact almost caller use commit remove argument always reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10855,,
834,cd80273909184426d5f38050c3163de43031098f,yan Moeller <ryan@iXsystems.com>, 2020-09-03 23:09:52 -0400,10881, retain thread name resuming zthr created zthr given name identify name lost cancelled zthr resumed retain name zthr used resuming reviewed serapheim dimitropoulos serapheim delphix.com reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10881,,
835,f3064162ba41778577b7fb72930d6c207743ec5c,lexander Richardson <Alexander.Richardson@cl.cam.ac.uk>, 2020-09-04 04:06:03 +0100,10863, fix running freebsd buildworld linux macos host adding ifdef __freebsd__ freebsd specific header may seem odd header used non freebsd system bootstrap tool phase originally submitted downstream http d26193 reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alex richardson cl.cam.ac.uk close 10863,,
836,ac6e5fb202a95277cd7886eb7b6acc3ec53d8def,atthew Macy <mmacy@freebsd.org>, 2020-09-03 20:04:09 -0700,10843, replace cv_ timed wait_sig cv_ timed wait_idle appropriate number place cv_ _sig used simply accounting purpose surrounding code ability cope actually receiving signal freebsd possible send signal individual kernel thread could enable undesirable behavior patch add routine linux idle accounting _sig without making task interruptible freebsd cv_ _idle alias cv_ reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10843,,
837,f30703f6fc831bdeb5e7a11b5f1c01d6d9cb7799,arrett Fields <ghfields@gmail.com>, 2020-09-03 19:31:05 -0400,10868, remove zfs linux reference template mentioned openzfs irc channel thanks toomas soome openzfs template still mention zfs linux change reference update url reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed garrett field ghfields gmail.com close 10868,,
838,6fffc88bf389e6ae74c88b4e74d04869bf413e41,pencer Kinny <30333052+Spencer-Kinny@users.noreply.github.com>, 2020-09-02 22:12:12 +0530,10859, link source file added comment following file link illumos manual page module avl avl.c module nvpair nvpair.c module linux spl spl kstat.c module freebsd spl spl_kstat.c reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed spencer kinny gmail.com close 5113 close 10859,,
839,0db1b84a6df462cee40f9eab24ac4489c654fa51,oomas Soome <tsoome@me.com>, 2020-09-02 19:30:29 +0300,10867, zvol unsigned zero reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed toomas soome tsoome me.com close 10867,,
840,417e6467224ec697da5cc0f4425ce51f2ef4138e,lexander Richardson <Alexander.Richardson@cl.cam.ac.uk>, 2020-09-02 00:22:09 +0100,10864, fix werror wmacro redefined limits.h macro also defined compiler provided float.h included later least freebsd buildworld case trigger werror warning including float.h first defining macro dbl_dig flt_dig missing fix problem reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed alex richardson cl.cam.ac.uk close 10864,,
841,964791acdcc99182d8a36e7f65ae15bf988886be,yan Moeller <freqlabs@FreeBSD.org>, 2020-09-01 19:19:19 -0400,10858, make spa_stats.c tunables visible freebsd use cross platform tunables spa_stats.c add update tunables.cfg test newly supported one reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10858,,
842,e84e49218f448369929c5c426220445d1698f044,atthew Macy <mmacy@freebsd.org>, 2020-09-01 16:16:56 -0700,10860, freebsd fix spa_stats.c move moving spa_stats added additional burden supporting kstat_type_io spa_state_addr always return valid value regardless value freebsd cause infinite loop relies raw ops addr routine indicate data reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller freqlabs freebsd.org signed matt macy mmacy freebsd.org close 10860,,
843,7b4e27232dec4595ef842ce7c0e31aafd255a20a,yan Moeller <freqlabs@FreeBSD.org>, 2020-09-01 19:14:16 -0400,10839, add zfs rename rename without remounting allow rename file system without remounting possible possible file system mountpoint property set legacy none change mount directory currently file system unmounted rename even mounted back introduces layering violation need update f_mntfromname field statfs structure related mountpoint dataset renaming child opinion worth allow update freebsd even cleaner way zfs configuration root file system zfs file system mountpoint property set legacy root dataset named system rootfs snapshot system rootfs upgrade clone system oldrootfs update freebsd boot boot back system oldrootfs rename back system rootfs mounted possible unmounting possible authored pawel jakub dawidek pjd freebsd.org reviewed allan jude allan reviewed brian behlendorf behlendorf1 llnl.gov ported matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 10839,,
844,88d19d7cc2586fbb4fe917b16763e88bcdf62d98,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-31 22:52:46 -0400,10847, freebsd remove unused seclabel code seclabel undefined freebsd pruned reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10847,,
845,46b7d53baf1c17f006a0ff6a8efb01e48ac248bf,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-30 17:37:44 +0000,10851, libspl provide platform specific zone implementation freebsd concept jail precursor solaris zone mapped required zone interface relative ease previous zfs implementation freebsd continue provide appropriate implementation openzfs well move lib libspl zone.c platform code adopt correct implementation freebsd prune unused code reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10851,,
846,eff621071ffd33764b833ea16894bee47d6ffb34,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-29 18:43:26 +0000,10851, freebsd simplify inglobalzone freebsd previous zfs implemented inglobalzone thread jailed thread td_ucred passed curthread inglobalzone pas curproc instead curthread achieve effect jailed proc p_ucred implementation trivial enough fit single line define really need whole separate function something already macro way eliminate in_globalzone reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10851,,
847,2f65c7a608520f5907eddca0a732b0a995cb0a86,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-29 18:25:56 +0000,10851, freebsd define crgetzoneid appropriately previous zfs implementation freebsd ifdefs use jailed instead crgetzoneid dsl_dir.c however simply provide appropriate definition crgetzoneid effect reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10851,,
848,1144586b57350f0f850d2428dccf7c80cbaa7485,oomas Soome <tsoome@me.com>, 2020-09-01 05:35:11 +0300,10857, return value ignored use void silence analyzer reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed toomas soome tsoome me.com close 10857,,
849,abe4fbfd01c2440813c9f31ca6727473e22d0039,pencer Kinny <30333052+Spencer-Kinny@users.noreply.github.com>, 2020-08-31 02:44:32 +0530,10850, typo correction corrected typo zfs cmd zfs zfs_main.c line number 404 pbkfd2iters pbkdf2iters reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed spencer kinny gmail.com close 10850,,
850,7bb18b94c7f1e44e82cdbaf0d9b67f8f7ae0c8ea,atthew Macy <mmacy@freebsd.org>, 2020-08-30 14:12:46 -0700,10842, move spa_stats.c common code initially considered simplest stub function freebsd freebsd support kstat_type_raw least functionality made available reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed matt macy mmacy freebsd.org close 10842,,
851,cd23154a8c2b657d1f4c15cd5f35c20f17e119d2,atthew Macy <mmacy@freebsd.org>, 2020-08-30 14:11:33 -0700,10841, freebsd fix spurious failure zvol_geom_open zvol_geom_open first open need guarantee namespace lock held avoid spurious failure zvol_first_open reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller freqlabs freebsd.org signed matt macy mmacy freebsd.org close 10841,,
852,0e6a7aaac01eaf7dea8d4ce56555e0cc29a7d606,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-30 23:09:54 +0200,10808, auto close status feedback requested month commit close issue labeled status feedback requested month label removed author responded reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10807 close 10808,,
853,d436de638938827acfdd61f09128146fa4dc4000,atthew Macy <mmacy@freebsd.org>, 2020-08-29 20:59:50 -0700,10836, freebsd add support kstat_type_raw kstats use kstat_type_raw provide string generated demand implementing sysctls punted reviewed toomas soome tsoome me.com reviewed allan jude allan reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10836,,
854,3e29e1971bbb4ab63dafeb592b747ef56bad3534,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-29 20:57:45 -0700,10834, linux 5.9 compat commit dcdc12e added compatibility code treat however new value byte old value page mean interchangeable place reclaimable slab size used component calculation done arc_free_memory function return amount memory arc considers free reclaimable little cost rather switch new interface get value removed calculation normally minor component compared number inactive free page removing aligns behavior freebsd version arc_free_memory reviewed matthew ahrens mahrens delphix.com reviewed coleman kane ckane colemankane.org signed brian behlendorf behlendorf1 llnl.gov close 10834,,
855,62663fb7ec191ca2f872aec1636e94934212936f,ichard Laager <rlaager@wiktel.com>, 2020-05-30 20:39:31 -0500,10388, fix another dependency loop zfs load key dataset.service gaining systemd journald.socket due stdout stderr going journal default systemd journald.socket via run systemd journal .mount root filesystem encrypted .mount get zfs load key dataset.service setting stdout stderr null key load service avoid loop reviewed antonio russo antonio.e.russo gmail.com reviewed insaneprawn insane.prawny gmail.com signed richard laager rlaager wiktel.com close 10356 close 10388,,
856,ec41cafee1dac132775ca3eaa9aa7f56cf30b30f,ichard Laager <rlaager@wiktel.com>, 2020-05-30 18:40:45 -0500,10388, fix dependency loop generating unit zfs mount generator pool already imported zfs import.target needed avoids dependency loop root zfs system systemd random seed.service via var lib.mount zfs import.target zfs import cache scan .service  systemd random seed.service reviewed antonio russo antonio.e.russo gmail.com reviewed insaneprawn insane.prawny gmail.com signed richard laager rlaager wiktel.com close 10388,,
857,7ddcfe7c00d1ca6269000dc48c6bb12100fc1737,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2020-08-28 09:43:44 -0700,10835, config zfs build.m4 add vendor flag allow override auto detection distribution based checking presence etc release file build system make lot file location assumption based detected distribution distribution like gentoo may prefer explicitly setting vendor gentoo avoid auto detection since auto detection check file order current script may misdetect even gentoo system etc redhat release file present default behavior unchanged default vendor check reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed georgy yakovlev gyakovlev gentoo.org close 10835,,
858,2b07c5aa3ea001aa58185beff2e02ff992b00f63,lexander Richardson <Alexander.Richardson@cl.cam.ac.uk>, 2020-08-28 00:09:26 +0100,10818, fix definition blkgetsize64 freebsd matching ioctl diocgmediasize reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller freqlabs freebsd.org signed alex richardson cl.cam.ac.uk close 10818,,
859,735ba76104fb5d701641f1785f75b4c74809155c,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2020-08-27 15:50:13 -0700,10829, module zstd pas u__bmi__ kernel compiled march znver1 march znver2 zstd module compilation fail due sse register return sse disabled interesting march skylake also implies mbmi defines __bmi__ compilation succeeds probably due different bmi implementation amd intel processor way compiler instruction reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed georgy yakovlev gyakovlev gentoo.org close 10758 close 10829,,
860,770269ef3acb3a5e3fe49213840f00776477d678,ohn-Mark Gurney <jmgurney@users.noreply.github.com>, 2020-08-26 22:29:00 -0700,10589, add see also well ton zfs zpool man page add see also section people quickly look option page split reviewed richard laager rlaager wiktel.com reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allan signed john mark gurney jmg funkthat.com close 10589,,
861,8d42c98d953f0a0b522950d712f22957e06bad48,atrick Mooney <pmooney@pfmooney.com>, 2020-08-26 23:48:29 -0500,10823, dnode_sync careless range tree must drop dn_mtx processing using callback safe operation besides destroy allowed begun dropping dn_mtx would leave window open another thread observe invalid unsafe state via reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed patrick mooney pmooney oxide.computer close 10708 close 10823,,
862,600def792e17ba4e31327fa792f0e03e3ab6a2a3,Ã©dric Berger <cedric@precidata.com>, 2020-08-27 06:44:41 +0200,10824, fix news file point http github.com openzfs zfs release reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed dric berger cedric precidata.com close 10824,,
863,a2f944a140dc4db1f515d748320bdca01b4dc295,yan Moeller <ryan@iXsystems.com>, 2020-08-27 00:43:06 -0400,10820, zpool change base url zfs message openzfs doc reviewed george melikov mail gmelikov.ru reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10820,,
864,03f5d2fd6a5bd74cdb15ab0499e28057d9fe48cd,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-26 21:41:09 -0700,10819, remove duplicate dnode.h include zfs sa.c source file accidentally includes sys dnode.h twice remove second occurrence reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10816 close 10819,,
865,4aa3b3bd471cd8b9b18fd1e67c685932763f306b,aul Dagnelie <paulcd2000@gmail.com>, 2020-08-26 21:38:27 -0700,10791, always track temporary snapshot accounting root cause issue occasionally comment code suggest actually ignore recv dataset come filesystem limit tracking specifically time ignore initializing filesystem snapshot limit value creating new recv dataset deleting one always update bookkeeping cause problem init count filesystem already recv dataset since bookmarking decremented incremented resolved patch simply always tracking recv dataset child reviewed matt ahrens matt delphix.com reviewed jerry jelinek jerry.jelinek joyent.com signed paul dagnelie pcd delphix.com close 10791,,
866,ad52de77c2a518d32f979358f9a3e4cefeb44977,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-26 19:49:51 +0200,10821, fix broken bug report form accident previous broke bug report form commit fix actually tested completely work reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10821,,
867,ec0c480c14e4868cc1c020be55f8fafc6da62ca0,oomas Soome <tsoome@me.com>, 2020-08-26 20:35:50 +0300,10810, remove pragma ident line pragma ident historical relic needed pragma actually unknown common compiler causing trouble reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed toomas soome tsoome me.com close 10810,,
868,2dbad4471005784e97b65b60ecfdbf6dddc4b751,atthew Macy <mmacy@freebsd.org>, 2020-08-26 09:54:37 -0700,10809, freebsd disable neon usage neon support code doe build freebsd ifdef reference fix linker issue arm64 reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10809,,
869,d6f90c78ab65036c7112493bbdee03597b0be4ce,eorge Melikov <mail@gmelikov.ru>, 2020-08-26 19:52:28 +0300,10811, github enable checkbashism run checkbashisms checkstyle reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10811,,
870,59ad15d3c5438a9d285f8dffe7d3eb2c7522231b,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-26 18:49:58 +0200,10813, stalebot tweak add status triage needed bug report currently type defect auto added adding triage tag make sure issue reviewed maintainer also open option priority defect near future prevent future stalebot spam stalebot limit action per hour prevent future flood stalebot activity aka spam stalebot ignore issue worked ignore following issue tagged status work progress maintainer assigned part project milestone tag rename ignore type understood bot stale commits change general ignore tag stalebot type understood  bot stale reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10813,,
871,523e1295fe8fb15d37b2459ce48a32b9454d448d,lexander Motin <mav@FreeBSD.org>, 2020-08-25 17:33:36 -0400,10765, introduce limit size l2arc header since l2arc buffer evicted memory pressure large amount header system irrationally large l2arc render slow even unusable change limit l2arc writes rebuild unevictable l2arc header reach dangerous level call arc_adapt l2arc rebuild could properly grow arc_c reflecting potentially significant arc size increase avoiding slow growth hopeless eviction attempt later overflow detected reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reported richard elling richard.elling signed alexander motin mav freebsd.org close 10765,,
872,47a3f3fc01def2695c6e0652dad063c50a0950be,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-25 11:48:28 -0700, , tag 2.0.0 rc1 new feature unified code base linux freebsd redacted zfs send recv persistent l2arc sequential resilvering zstd compression log spacemaps fast clone deletion sectional zfs zpool man page added zpool wait subcommand improved zfs share scalability improved aes gcm encryption performance signed brian behlendorf behlendorf1 llnl.gov,,
873,7a6c12fd6a756af5a2f664c0a6a292d22fbb2487,llan Jude <allan@klarasystems.com>, 2020-08-25 14:04:20 -0400,9616, assert nvlists larger originally asserted read however nvlists zfs record limited  add new environment variable allow user specify maximum size nvlist sent received default value modify libzfs send routine return useful error send stream generate nvlist beyond maximum size modify libzfs recv routine add explicit error message nvlist large rather abort ing move change assert trigger data record reviewed paul dagnelie pcd delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed allan jude allan close 9616,,
874,87688b686bb4ede154d502cf9a342126c25789c0,terlingjensen <5555776+sterlingjensen@users.noreply.github.com>, 2020-08-25 12:32:49 -0500,10795, mark lua setjmp longjmp powerpc weak linux already defines setjmp longjmp powerpc lead duplicate symbol statically linked build reviewed brian behlendorf behlendorf1 llnl.gov signed sterlng jensen sterlingjensen close 10795,,
875,94dac3e880560cf37dcef9fc9b101afb150220fe,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-25 08:34:41 -0700,10796, export dmu_offset_next symbol export dmu_offset_next symbol use lustre reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 10796,,
876,b596585fd9eefffb0a476c92c731db2c49d29938,yan Moeller <ryan@iXsystems.com>, 2020-08-25 00:25:28 -0400,10792, man canonicalize .th usage use cap document title remove section name inferred section number name openzfs document source bump modification date fixed trailing whitespace reported igor reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 10792,,
877,b9007997682fac4a4272f2d59fc3df4875db2df0,ouzhongyang <youzhong@gmail.com>, 2020-08-24 20:33:02 -0400,10783, fix inability destroy snapshot used nfs cache struct svc_export struct svc_expkey nfsd rpc.mountd snapshot hold reference mount point need flush unmounting otherwise umount would fail ebusy reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed youzhong yang yyang mathworks.com close 6000 close 10783,,
878,184df27eef0abdc7ab2105b21257f753834b936b,ebastian Gottschall <s.gottschall@dd-wrt.com>, 2020-08-24 21:20:41 +0200,10775, avoid symbol collision kernel zstdlib linux zfs compiled kernel static variant kernel zstd library compiled statically kernel symbol collision occur wrapper header renames relevant zstd function avoid problem reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed sebastian gottschall s.gottschall wrt.com close 10775,,
879,04c37b6851fcfde84ec3be4ff63f5ee9022bf830,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-24 21:04:38 +0200,10778, add stale bot file configures following stale bot http github.com apps stale set mark issue stale 365 day also set auto close issue day please aware issue also requires listed stale bot added repo reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10778,,
880,c3b03d0701d8b82d60784e729ece9cb2f650eb87,hris McDonough <chrism@plope.com>, 2020-08-24 13:32:59 -0400,10766, appease gcc sprintf warning found fedora gcc 10.0.1 increase size ddt_namelen mnt_line_max appease gcc snprintf truncation warning reviewed brian behlendorf behlendorf1 llnl.gov signed chris mcdonough chrism plope.com close 10712 close 10766,,
881,b0e75805eefcb09186010afc8d27748e60f80329,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-24 11:50:15 -0400,10768, zts improve freebsd freebsd equivalent udevadm settle resorting three second sleep wait device change take effect far ideal mainly waiting volmode geom zvols appear dev hack reading geom config desired effect quiescing geom state reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10768,,
882,07ce8961e52bc9c4f9f978357551c507239a7410,hris McDonough <chrism@plope.com>, 2020-08-24 00:18:30 -0400,10771, improve documentation zpool import specify default zpool import libblkid cache linux geom freebsd scan provided reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller freqlabs freebsd.org signed chris mcdonough chrism plope.com close 7656 close 10771,,
883,a541f7d48595be864fd87865b5bcf051c93a9ef1,eorge Melikov <mail@gmelikov.ru>, 2020-08-24 07:15:25 +0300,10784, checkstyle add linter rename job install latest flake8 reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10784,,
884,c686c6fe759bdf408eab85ebe65c048e04706e43,ony Nguyen <tony.nguyen@delphix.com>, 2020-08-23 16:14:22 -0600,10767, zfs performance test clean nfs mount change umounts client nfs mount test avoid two sporadic issue client nfs stale mount zpool export zpool destroy failed due dataset busy reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony nguyen tony.nguyen delphix.com close 10767,,
885,68f2288620f2a5401ded0ca0834e146a28e8b9f9,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-24 00:13:07 +0200,10779, add seperate issue question big portion issue type question add separate issue template also automatically add type question tag addition add type defect bug report default reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10779,,
886,7b15b8d18c7731069b2687a7f466a438c6536754,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-23 14:13:34 -0400,10773, libzstd warn stack frame size userspace current way cflags modified libzstd cflags passed make command line cause cflags makefile zstd.c discarded am_cflags cause smaller frame size limit used build fails need worry stack frame size userspace drop extra flag reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10773,,
887,a741b386d3ce195fd3eb2e98066f9abffbbace89,ndrew <awalker@ixsystems.com>, 2020-08-23 00:49:25 -0400,10748, prevent zfs_acl_chmod aclmode restricted acl inherited absence inheriting entry owner group everyone zfs_acl_chmod called set cause confusion samba admins expect entry appear newly created file directory stripped parent directory aclmode set restricted chmod prevented non trivial acls stretch assume case administrator doe want zfs add missing special entry add check aclmode inherited entry present skip zfs_acl_chmod reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrew walker awalker ixsystems.com close 10748,,
888,ab4a78c7444fc6fa410261166f1b75e50d8be872,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-08-23 06:41:01 +0200,10759, update issue template github started using new issue templating structure commit move current template add one additional one move issue template new issue template folder add feature request template remove following warning viewing issue template reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed kjeld schouten lebbing kjeld schouten lebbing.nl close 10759,,
889,72eedb69fd8a15ea2b6ac3ef2fa322210dd42f6c,yan Moeller <ryan@iXsystems.com>, 2020-08-22 14:05:59 -0400,10762, zts remove leftover variable name overlooked use local removed satisfy checkbashisms reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10762,,
890,a5b1b60e9b3a6f9bfbc8ce2acbf3238ccc3830a0,hris McDonough <chrism@plope.com>, 2020-08-22 14:04:49 -0400,10757, remove vestigial setting related initramfs remove zfs_pool_import  feature etc default zfs.in feature longer work reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed chris mcdonough chrism plope.com close 9126 close 10757,,
891,1ddd7cdb92641c150cb5f88722f097dcc63d2f3d,lint Armstrong <clint@clintarmstrong.net>, 2020-08-22 13:58:07 -0400,10761, make formatting dedup value string consistent prop value return option separated dedup value separated change make dedup value formatting consistent property reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed clint armstrong clint close 10761,,
892,6fe3498ca3406ffb10f729ab4f9cf63f10c74ede,yan Moeller <ryan@iXsystems.com>, 2020-08-21 15:53:17 -0400,10619, import vdev ashift optimization freebsd many modern device use physical allocation unit much larger minimum logical allocation size accessible external command two prevalent example 512e disk drive 512b logical sector physical sector flash device 512b logical sector larger allocation block size 128k larger erase block size operation modify physical sector size result costly read modify write garbage collection sequence device simply exporting true physical sector device zfs would yield optimal performance two serious drawback existing pool created device different logical physical block size configured use logical block size e.g version used pool construction reported logical block size instead physical block size suddenly find vdev allocation size increased easily tolerated active member array zfs would prevent replacement vdev another identical device appears smaller allocation size required pool supported new device device physical block size may large supported zfs optimal allocation size vdev may quite large example raid controller may export vdev requires read modify write cycle unless accessed using 64k aligned sized request zfs currently minimum block size limit reporting logical physical allocation size vdevs solves problem device may used long logical block size compatible configuration comparing logical physical block size new configuration optimized administrator notified existing pool sub optimal reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov authored matthew macy mmacy freebsd.org signed matt macy mmacy freebsd.org close 10619,,
893,6706552ea6bdc74122b530ba5e8a6956f5160428,yan Moeller <ryan@iXsystems.com>, 2020-08-21 14:55:47 -0400,10760, remove hard coded linux manpages recommended practice .os freebsd specify argument correct name used automatically oddly enough linux distro tested centos man pager defaulted displaying bsd rather linux accommodate tack linux back install hook linux much simpler removing freebsd vendored base system reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10760,,
894,64025fa3a1f0f710f7f8678f2ac459b07ed9f88f,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-20 13:45:47 -0700,10755, silence make checkbashisms commit d2bce6d03 added make checkbashisms target resolve bashisms script commit resolve either doe fix excludes others make checkstyle longer print warning small step right direction dracut linux specific depends bash therefore dracut support script bash specific update shebang accordingly zed functions.sh zfs import zfs mount zfs zed smart paxcheck.sh make_gitrev.sh script excuded check updated properly tested zfsunlock whole value sleep allowed vdev_id removed unneeded local use instead dkms.mkconf dkms.postbuil use instead reviewed insaneprawn insane.prawny gmail.com reviewed gabriel devenyi gdevenyi gmail.com reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 10755,,
895,7bba1d404cd213223cfca017035f9ebf8683a8ef,on Brady <don.brady@delphix.com>, 2020-08-20 14:12:12 -0600,10747, zfs share clean noauto export follow 10688 zfs share allows sharing canmount noauto datasets mounted however dataset canmount noauto mounted command also purge existing entry export file otherwise reboot nfs server attempt export underlying mountpath dataset lead hard hang existing client mount instead skipping adding export mounted canmount noauto also remove existing export dataset reboot export unmounted dataset reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed brady don.brady delphix.com close 10747,,
896,3dc18995bd408d3030d2928ae88c4546bc40c2c8,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-08-20 11:45:20 -0700,10744, fix indentation reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10744,,
897,1c2725a157d1af79d73bbe980ff8db01086fd1e8,atthew Macy <mmacy@freebsd.org>, 2020-08-20 10:55:02 -0700,10745, freebsd 11.x arc_stats compatibility removing other_size arc_stats break top 11.x jail running head reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10745,,
898,10b3c7f5e424f54b3ba82dbf1600d866e64ec0a0,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2020-08-18 19:10:17 +0200,10278, add zstd support zfs add two new compression type based zstandard zstd basic zstandard compression algorithm available compression level zstd zstd zstd compression increase every level speed decrease zstd fast faster version zstandard compression algorithm zstd fast basically negative level zstd compression decrease every level speed increase available compression level zstd fast zstd fast zstd fast zstd fast zstd fast 100 increment zstd fast 500 zstd fast 1000 information check man page implementation detail rather treat level zstd different algorithm done historically gzip block pointer enum zio_compress value simply zstd level including zstd fast since use decompression function compress property 64bit unsigned integer lower bit store compression algorithm matching number bit used block pointer 8th bit borrowed embedded block pointer upper bit used store compression level necessary able determine compression level used later reading block back concept used lz4 first 32bits disk value size compressed data since allocation rounded nearest ashift extended store version zstd level well compressed size value returned decompressing block block need recompressed l2arc nop write etc parameter used result matching checksum internal zfs code arc_buf_hdr_t objset_t zio_prop_t etc separated _compress _complevel variable property zap contains combined bit shifted value combined value split callback called set objset member os_compress os_complevel userspace tool use combined bit shifted value additional note zdb also decode zstd compression header flag inspect size version compression level saved header record zstd compressed parameter decoded compression header get printed zstd included current test new test added needed per dataset feature flag get activated property set compression algorithm requires feature flag zfs activates feature property set rather waiting first block born currently used zstd extended needed portion sponsored freebsd foundation authored allan jude allanjude freebsd.org authored brian behlendorf behlendorf1 llnl.gov authored sebastian gottschall s.gottschall wrt.com authored kjeld schouten lebbing kjeld schouten lebbing.nl authored michael niewã hner mniewoehner.de signed allan jude allan signed allan jude allanjude freebsd.org signed brian behlendorf behlendorf1 llnl.gov signed sebastian gottschall s.gottschall wrt.com signed kjeld schouten lebbing kjeld schouten lebbing.nl signed michael niewã hner mniewoehner.de close 6247 close 9024 close 10277 close 10278,,
899,dc544aba15758f7fbf55ef6a95ae8b93e241c533,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2020-08-18 19:10:10 +0200, , import zstandard v1.4.5 zstandard modern high performance general compression algorithm provides similar better compression level gzip much better performance zstandard provides large selection compression level allow storage administrator select preferred performance compression trade commit import unmodified zstandard single file library used zfs implementation new library done future update zstd mind reason integrated code way doe require modification library detail see module zstd readme.md library excluded codecov calculation cppcheck unaltered dependency need full codecov cppcheck authored allan jude allanjude freebsd.org authored kjeld schouten lebbing kjeld schouten lebbing.nl authored michael niewã hner mniewoehner.de signed allan jude allanjude freebsd.org signed kjeld schouten lebbing kjeld schouten lebbing.nl signed michael niewã hner mniewoehner.de,,
900,772c69d230b34bab1aaab800b1f95010e237862f,avel Snajdr <snajpa@snajpa.net>, 2020-08-20 06:37:38 +0200,10741, linux 5.7 compat include linux sched.h spl sys mutex.h struct task_struct needed lockdep_off mutex.h popped e616cb8daadf linux 5.7 rc7 reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10741,,
901,f2c027bd6a003ec5793f8716e6189c389c60f47a,ariusz Zaborski <oshogbo@vexillium.org>, 2020-08-20 02:19:42 +0200,10738, freebsd add option rewind checkpoint importing root pool option used freebsd boot loader reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed mariusz zaborski oshogbo vexillium.org close 10738,,
902,5266a0728aae503fb2f79961299d4dffac58b22a,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-18 22:13:17 -0700,10730, zed offline missing device spare available due commit d48091d removed device explicitly offlined zed spare available rather letting zfs detect unavail broke auto replacing whole disk device described issue 10577. short new device reinserted slot zed try online without letting zfs recreate necessary partition table change simply avoids setting device offline removed spare available spare_on_remove false change left minimal allow backported 0.8.x release zts test updated accordingly follow work planned update zed transition vdev removed state state always existed current interface zed use accomplish therefore left follow reviewed gionatan danti g.danti assyoma.it authored gionatan danti g.danti assyoma.it signed brian behlendorf behlendorf1 llnl.gov close 10577 close 10730,,
903,cfd59f904b0760f1bc909bc1b6deae9798042af9,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-18 22:11:34 -0700,10739, fix arc aggsum access arc_state_fini commit 85ec5cbae updated call updating scatter stats requires global aggsum value arc initialized normally issue however module unload function called l2arc_cleanup arc_state_fini destroyed aggsum value resolve issue performing slightly earlier arc_fini reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10739,,
904,4f7fb135bda604256641454f390a03d7b805edba,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-18 21:07:43 -0400,10729, libzfs_core initialize fail_ioc_cmd zfs_ioc_last freebsd number zfs_ioc_ starting pick different sentinel value avoid unintentionally messing ioctls reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10729,,
905,716b53d0a14c72bda16c0872565dd1909757e73f,atthew Macy <mmacy@freebsd.org>, 2020-08-18 09:57:07 -0700,10727, freebsd fix unix permission checking reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10727,,
906,5e7eaf8fbda348db9878ce013ecb4ab5e9b5cf5a,atthew Macy <mmacy@freebsd.org>, 2020-08-18 09:52:30 -0700,10719, add define enable autotrim default freebsd trim defaulted several year order minimize pola violation import important maintain default importing vendored openzfs freebsd base reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10719,,
907,009cc8e884a84aeebed612ab64c30f77eab38392,yan Moeller <freqlabs@FreeBSD.org>, 2020-08-18 12:33:55 -0400,10706, make limit tunable limit size nvlists passed kernel user make kernel unreasonably large allocation freebsd limit 128 kib turn bit small operation involving large number datasets snapshot example replication make limit tunable platform specific auto default linux keep limit freebsd system limit user wired memory allows scale depending system configuration reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org issue 6572 close 10706,,
908,663a070c92b365262f674d1b443d3749d75d7493,eorge Melikov <mail@gmelikov.ru>, 2020-08-18 19:30:12 +0300,10734, remove unused otherwise compiler error  libzfs_pool.c 449 error defined used werror unused function  reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10734,,
909,eaa25f1a8e5f6ed72c2095a06df14621ed04ee6d,ichard Laager <rlaager@wiktel.com>, 2020-08-18 01:12:39 -0500,8627, remove grub restriction grub restriction based around pool bootfs property given current situation grub staying current openzfs pool feature either non zfs boot separate pool limited feature pretty much long term answer grub support second case matter context restriction useful bootfs property would set boot pool need restriction pool grub read documentation bootfs describes pointing root pool also used initramfs zfs doe allow setting bootfs point dataset another pool difficult impossible enforce restriction cross pool accordingly bootfs pretty much useless grub scenario moving forward even user one pool existing restriction grub incomplete prevent enabling unsupported checksum example reason ripped grub restriction little longer term think extending proposed feature portable system define feature grub much useful approach user could set boot pool creation thing would work reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8627,,
910,d60c0dbdf390c4fe7ad66bc2f79ee076bb046fb1,rian Behlendorf <behlendorf1@llnl.gov>, 2020-08-17 22:31:18 -0700,10726, zts ztest may cause mmp test failure test depend ztest simulating active pool ztest unexpectedly terminates due unrelated issue test case fail since ztest yet 100 reliable added test maybe exception list removed issue ztest resolved test case updated handle unexpected failure reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 10726,,
911,85ec5cbae228defb4332da4cf0ebb64d53aea157,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-08-17 20:04:04 -0700,10701, include arc_size arc cache data scatter abd collection page typically therefore space used cache block rounded multiple abd subsystem track wasted memory kstat however arc size aware memory used round account size requested abd subsystem therefore arc effectively using memory aware due impact observability e.g arcstat show arc using memory effectively also impact arc responds memory pressure amount change appears arc memory pressure need resize arc_c sector size ashift page size larger waste compressed block size relatively large compared page size amount small problematic effect minimal however using 512b sector ashift compressed block size small e.g compression default volblocksize decreased recordsize amount large production system arc_size constant memory observed memory commit add arc_size add new waste field arcstat result arc memory usage observable arc_c doe need adjusted frequently reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 10701,,
912,994de7e4b748465f175b7cc48995b5c44adf2200,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-08-17 16:04:28 -0700,10673, remove kmc_kmem kmc_vmem kmc_kmem kmc_vmem unused since spl implemented cache kmc_kvmem kmc_kmem given default value use kmalloc back spl cache instead use kvmalloc kmc_kvmem flag module parameter proc entry associated code removed kmc_vmem flag used kvmalloc always preferable vmalloc flag proc entry associated code removed reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 10673,,
913,3df0c2fa32a37fbb95f32de20e737fdf65ec0f5b,yan Moeller <ryan@iXsystems.com>, 2020-08-17 18:40:17 -0400,10723, freebsd fix build clang cast void uintptr_t casting boolean_t avoid clashing definition __asm linux prevent duplicate __volatile__ already done place reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed ryan moeller freqlabs freebsd.org close 10723,,
914,cfdc432e644912bbd7e026110ee57cc0f22ec321,atthew Macy <mmacy@freebsd.org>, 2020-08-17 15:28:03 -0700,10721, freebsd fix merge error reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10721,,
915,b0099072dfc38c502222c47172469d7245027f35,erapheim Dimitropoulos <serapheim@delphix.com>, 2020-08-17 15:25:37 -0700,10725, fix typo btree.c reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 10725,,
916,5f1984f2f83624b30dbdaa5d906a6253d78efb66,atthew Macy <mmacy@freebsd.org>, 2020-08-17 14:43:47 -0700,10720, freebsd fallback boot look zpool.cache zpool.cache always lived boot freebsd sake compatibility fallback boot zpool.cache found etc zfs reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10720,,
917,9352d8c00402d2b10c0a2f547445dadda3bb0062,eorge Amanakis <gamanakis@gmail.com>, 2020-08-17 14:04:06 -0400,10717, fix reporting l2arc writes arc_summary3 arc_summary3 report l2arc writes byte however related arc_stat reported hit arc_summary2 report correctly reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed george amanakis gamanakis gmail.com close 10717,,
918,3eaf76a8d2a6fb9bfaeca888bfd20535d7e1e71b,yan Moeller <ryan@iXsystems.com>, 2020-08-17 14:02:32 -0400,10716, fix thread name thread_create freebsd stringifies argument passed thread function create name thread thread name ended void void change type signature function doe need cast creating thread rename function clarity consistency well reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed george amanakis gamanakis gmail.com signed ryan moeller ryan ixsystems.com close 10716,,
919,3c3d7c8a57b278063952fc671fc2cf1589e45a6a,yan Moeller <ryan@iXsystems.com>, 2020-08-17 14:01:19 -0400,10715, freebsd create taskq thread appropriate proc stepping stone toward enabling spa_thread freebsd reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10715,,
920,fc34dfba8e8238683e90e3fa83d16be3343886f6,llan Jude <allanjude@freebsd.org>, 2020-08-14 02:31:20 -0400,10693, fix l2arc read compressed arc disabled reading compressed block l2arc compressed arc disabled arc_hdr_size return lsize rather psize actual read psize cause l2arc_read_done compare checksum wrong size resulting checksum failure manifest increase kstat l2_cksum_bad read retried main pool making l2arc ineffective add new l2arc test compressed arc enabled disabled block handled differently depending state tunable block compressed disk compressed_arc enabled block read disk decompressed added arc compressed form may write l2arc l2arc_read_done compare checksum compressed however compressed_arc disabled block read disk decompressed added arc uncompressed use recompress block writing l2arc l2arc_read_done compare checksum compressed l2arc_read_done use uncompress test writes test file pool consisting one disk one cache device randomly read since arc_max test low feed l2arc result read l2arc compare value kstat l2_cksum_bad determine block failed survive trip l2arc sponsored freebsd foundation reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allanjude freebsd.org close 10693,,
921,faa296c73c7ccd535c0874d4f7e8f7c4ea43eea6,orgen Lundman <lundman@lundman.net>, 2020-08-14 07:03:23 +0900,10700, release onexit event missed zfsdev_state linux freebsd likely never see issue macos kext unloaded zed still connected zed issued enodev cdevsw released kernel zfsdev_release called release minor onexit event leak ensures cleaned unload changed loop zsprev zsnext style code duplication signed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10700,,
922,f67f5832eca415055e1eaf6cdc100f24ae53487a,eorge Melikov <mail@gmelikov.ru>, 2020-08-12 20:46:26 +0300,10705, github workflow checkstyle use github workflow run checkstyle use free project resource start every commit branch work fork contributor may use creating reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10705,,
923,42d4a8e5feadd2e9d95687656701c3dcca4fb23a,eorge Melikov <mail@gmelikov.ru>, 2020-08-12 20:45:50 +0300,10705, cstyle.pl echo command github workflow reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10705,,
924,2925ed6c702eeafe81d77fe7e39aef091ce8f16f,eorge Melikov <mail@gmelikov.ru>, 2020-08-14 00:55:45 +0300,10704, remove stale .travis.yml work manually edited test change even test runtime change travis give small time run useful signed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10704,,
925,d64c6a2eee4a28fd22beff5c82f57372758ac81b,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-08-12 10:10:50 -0700,10683, use zfs_dbgmsg log metaslab_load unload metaslabs usually loaded unloaded infrequently case useful log event happened commit enables zfs_dbgmsg metaslab_load add zfs_dbgmsg metaslab_unload reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10683,,
926,e111c8024796e9bdd2cb883b5c10c8abc13c3a5b,atthew Macy <mmacy@freebsd.org>, 2020-08-12 10:03:24 -0700,10618, restore arc mfu mru pressure arc_adapt function tune lru mlu balance according type cache hit passed state agrument ghost lru lru mru ghost mru function called wrong cache hit state adaptation sub optimal performance suffer time ago upstream received commit 6950 arc cache compressed data arc_read next sequence access ghost buffer commit hit ghost list passed arc_adapt call arc_access revive element cache change state ghost real hit commit order call reverted arc_adapt called realâ hit even hit one two ghost list render ghost list useless break arc algorithm freebsd fixed problem locally change d19094 commit r348772 change adaptation commit current arc code reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10548 close 10618,,
927,53c9d1d9b5ff19d3095f9dcbb806582d9c0b977f,eorge Wilson <george.wilson@delphix.com>, 2020-08-11 14:55:04 -0600,10688, zfs share handle canmount noauto zfs share currently skip filesystems canmount noauto set behavior unexpected since one would expect zfs share share mounted filesystem sharenfs property already set change behavior zfs share allow sharing canmount noauto datasets mounted reviewed matt ahrens matt delphix.com reviewed brady don.brady delphix.com reviewed prakash surya prakash.surya delphix.com signed george wilson gwilson delphix.com external issue dlpx 71313 close 10688,,
928,6f763d408530c5dd22e4e8616235871524e55529,atthew Macy <mmacy@freebsd.org>, 2020-08-11 13:49:50 -0700,10699, freebsd fix module autoloading built base kmod name zfs instead openzfs building freebsd define zfs_kmod symbol zfs in_base defined otherwise openzfs reviewed brian behlendorf behlendorf1 llnl.gov authored ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 10699,,
929,d817c17100183b266aa6bf8b868e016805d51d16,oleman Kane <ckane@colemankane.org>, 2020-08-09 12:12:25 -0400,10696, linux 5.9 compat make_request_fn replaced submit_bio interface make_request_fn associated api replaced recently linux 5.9 merge replace functionality new submit_bio member struct reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 10696,,
930,dcdc12e8babb2490249cd93ec77863b216c25c5d,oleman Kane <ckane@colemankane.org>, 2020-08-09 12:07:49 -0400,10696, linux 5.9 compat update change appears primarily name change enum update test logic work long either one present favoring newer one additionally newer show node_page_item commit test zone_page_item enum reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 10696,,
931,1823c8fe6a4a20971463e9b51615dad412aea9a9,oleman Kane <ckane@colemankane.org>, 2020-08-09 12:03:03 -0400,10696, linux 5.9 compat add linux blkdev.h include many block device operation often function bdev name moved linux blkdev.h linux fs.h seems header already included needed code autoconf test missing causing false negative commit test include linux fs.h old location also linux blkdev.h new location reviewed brian behlendorf behlendorf1 llnl.gov signed coleman kane ckane colemankane.org close 10696,,
932,9777044f1c68f5a671834ce28cba5a086a06462a,llan Jude <allanjude@freebsd.org>, 2020-08-11 16:16:57 -0400,10694, fix typo reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allanjude freebsd.org close 10694,,
933,ed726fb063d245f2f1e7f3d7d54c949b895a860c,yan Moeller <ryan@iXsystems.com>, 2020-08-11 16:12:12 -0400,10685, move zvol_dir back zfs.h previously moved nothing else tree evidently dilos tree reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed ryan moeller freqlabs freebsd.org close 10361 close 10685,,
934,0f95ddcc0c67bfb3d2a69097e9807aabab57aeb2,atthew Macy <mmacy@freebsd.org>, 2020-08-07 14:16:01 -0700,10682, freebsd update vaccess signature recent head reviewed alexander motin mav freebsd.org reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10682,,
935,12045d0278549fdcad1f042ced45314311e753a8,aul Dagnelie <pcd@delphix.com>, 2020-08-07 14:13:13 -0700,10654, clarify error message range tree double add occurs various piece logic resulted situation double free space zfs turn result double add range tree issue much difficult diagnose error handling around case much weaker around double remove case reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed paul dagnelie pcd delphix.com close 10654,,
936,d4e6e9597d322df47a5d177ba40c86e35bfb1e05,yan Moeller <ryan@iXsystems.com>, 2020-08-07 17:10:48 -0400,10640, zts remove bashisms zfs tests.sh bring zfs tests.sh compliance script converting bin avoid dependency bash reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10640,,
937,0cab7970f9c10284d2dae47de52c974101e68274,atthew Ahrens <mahrens@delphix.com>, 2020-08-04 11:36:53 -0700,10650, remove commented code remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
938,74e994ec63804af69b177b2a26f13a67dd2b9360,atthew Ahrens <mahrens@delphix.com>, 2020-07-30 13:59:07 -0700,10650, remove km_nodebug remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
939,c6f2b942bee8bb31bbd41121b7d29984ed72539f,atthew Ahrens <mahrens@delphix.com>, 2020-07-30 13:56:00 -0700,10650, remove kmc_nomagazine remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
940,3c09f6949abfce179286d237665761dc27b58be2,atthew Ahrens <mahrens@delphix.com>, 2020-07-30 13:51:31 -0700,10650, remove kmc_qcache remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
941,d519c10575602952258f7e9e300af79a2b04d801,atthew Ahrens <mahrens@delphix.com>, 2020-07-30 13:46:32 -0700,10650, remove kmc_nohash remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
942,f68af67a0ce07e3f1035792d243978dca9257de6,atthew Ahrens <mahrens@delphix.com>, 2020-07-30 13:43:18 -0700,10650, remove kmc_notouch remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
943,492db125dc45e79a2347cd6c277456a846a60509,atthew Ahrens <mahrens@delphix.com>, 2020-07-29 22:03:23 -0700,10650, remove kmc_offslab remove dead code make implementation easier understand reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens matt delphix.com close 10650,,
944,d87676a9fa0b434fe3073933c4125074b8a48325,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-08-05 10:22:09 -0700,10643, fix error handling livelists zap iteration pool wide metadata stored meta object set metadata stored triplicate addition pool level reduncancy e.g raidz however copy metadata available still get eio ecksum reading encounter error syncing context typically already committed making change corrupt missing metadata typically handle verify prevents system continuing undefined state minimizing amount error handling code however code path ignore error assert happen since assertion disabled non debug build effectively ignore well lead zfs continuing incorrect state potentially leading disk inconsistency commit add handling error metadata typically verify handle error return place dsl_deadlist.c handle error return zap_contains turn call necessary always call zap_lookup handle error return zap_lookup handle error return zap_remove handle error return zap_lookup  handle error return  additionally augment internal history log message zfs destroy note method used e.g bptree livelist synchronous mintxg correct comment dbuf_init correct indentation reviewed sara hartse sara.hartse delphix.com reviewed george wilson george.wilson delphix.com signed matthew ahrens mahrens delphix.com close 10643,,
945,1b376d176ead7651ffde83d319edcc1bcc65da55,atthew Macy <mmacy@freebsd.org>, 2020-08-05 10:19:51 -0700,10657, freebsd add support lockless lookup authored mjg mjg freebsd.org reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10657,,
946,22dcf89181bdb178173ebc73c1345199acc22860,atthew Macy <mmacy@freebsd.org>, 2020-08-05 10:17:07 -0700,10668, add missed thread_exit vdev_ autotrim rebuild _thread reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov authored ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10668,,
947,309d20882fbc3c3a870a6c7c58ba95503c12b254,avel Snajdr <snajpa@snajpa.net>, 2020-08-04 19:04:00 +0200,10669, fix tracepoint 3442c2a02d added new tracepoint fails compile tracepoints enabled tracepoint definition begin multi line definition fix backslash parenthesis accordingly reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 10669,,
948,f1de1600d132666d03b3b73a2ab62695a0f60ead,onathon <559369+jonathonf@users.noreply.github.com>, 2020-08-02 00:13:15 +0000,10663, verify zfs module loaded starting service minor change systemd service template verifies zfs kernel module loaded kernel prior attempting import zpool service check presence sys module zfs indicates zfs module loaded systemd built check  reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew thode prometheanfire gentoo.org signed jonathon fernyhough york.ac.uk close 10663,,
949,da60484db5960f2b94cf3302dd08fe7fb673eaf3,eorge Amanakis <gamanakis@gmail.com>, 2020-08-01 14:17:18 -0400,10659, fix logging l2arc_rebuild case l2arc rebuild canceled log spa history log pool may process removed panic may occur bug kernel null pointer dereference address rip 0010 0xb1 0x120 zfs call trace l2arc_rebuild 0x464 0x7c0 zfs 0x2d 0x130 zfs l2arc_rebuild 0x7c0 0x7c0 zfs 0x78 0xb0 spl kthread 0xfb 0x130 is_err 0x10 0x10 spl kthread_park 0x90 0x90 ret_from_fork 0x35 0x40 reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10659,,
950,b6737193ee601cc213d3630e4603f9883b6002ad,yan Moeller <ryan@iXsystems.com>, 2020-08-01 11:44:54 -0400,10658, freebsd fix zfs jail add test zfs_jail using zfs_ioctl failed map ioc number correctly use zfs_ioctl perform jail ioctl add test case freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10658,,
951,fe628bc21d360336307d1da09bc9260a46dde444,atthew Macy <mmacy@freebsd.org>, 2020-08-01 08:42:55 -0700,10656, fix page fault must acquire z_teardown_lock accessing zfsvfs_t object reproduce panic demand look like correct solution reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov authored asomers asomers freebsd.org signed matt macy mmacy freebsd.org close 10656,,
952,8fb79fdddb076036a006e19f4e1b93b3baf72498,llan Jude <allan@klarasystems.com>, 2020-08-01 11:41:31 -0400,10631, change error handling invalid property value zfs recv return useful error message invalid index property value provided send stream property nvlist compression property outside understood range   receiving full stream zof zstd_send send2 testpool recv send2 internal error invalid argument aborted core dumped  note recv completes successfully abort likely make easier track unexpected error code   receiving full stream zof zstd_send send2 testpool recv send2 receive compression property testpool recv invalid property value received 28.9m stream second 28.9m sec  reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10631,,
953,47ed79ff60945e0c5d8ccb56f0d29a893e1261ac,atthew Macy <mmacy@freebsd.org>, 2020-07-31 21:30:31 -0700,10635, change make openzfs build within freebsd buildworld collection header change enable freebsd build vendored openzfs reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10635,,
954,0cc3454821879396c38d8c557ab918a70afd919b,yan Moeller <ryan@iXsystems.com>, 2020-08-01 00:25:35 -0400,10647, convert linux ism freebsd ism platform zfs_debug.c change comment copied linux code describe appropriate method freebsd convert tunables get created freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10647,,
955,af524bf7ff970c8dd70b3620b4ef6ee46441c27e,yan Moeller <ryan@iXsystems.com>, 2020-08-01 00:18:32 -0400,10633, zts freebsd doe tunable reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10633,,
956,3442c2a02d1b506d100914f056fc1686771f04da,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-31 21:10:52 -0700,10600, revise arc shrinker algorithm arc shrinker callback _scan invoked kernel shrinker mechanism system running low free page happens via code path direct reclaim system attempting allocate page low memory arc shrinker callback invoked page allocation code path indirect reclaim kswapd notice many free page invokes arc shrinker callback case kernel shrinker code request arc shrinker callback release cache measure many page released however measurement released page doe include page freed via __free_pages arc release memory via abd_free_chunks rather kernel shrinker code looking page placed list reclaimable page separate actually free page kernel shrinker code detect arc released page may call arc shrinker callback many time resulting arc collapsing arc_c_min several negative impact zfs use ram cache data effectively direct reclaim case single page allocation may wait long time e.g minute evict entire arc even improvement made 67c0f0dedc5 arc shrinking block read writes occasionally arc_size may stay arc_c entire time arc collapse thus blocking zfs read write operation  address issue commit limit way arc shrinker callback used kernel shrinker code mitigates impact zfs read write operation commit limit amount data reclaimed arc via direct reclaim shrinker limit amount time take allocate single page allow arc shrink via kswapd indirect reclaim instead rely arc_evict_zthr monitor free memory reduce arc target size keep sufficient free memory system note simply rely limiting amount reclaim direct reclaim case kswapd boosted logic invoke callback unlimited number time see balance_pgdat want allocate memory wait multiple requested amount data evicted rather waiting arc longer overflowing allows zfs read writes make progress even arc overflowing also ensuring eviction thread make progress towards reducing total amount memory used arc amount memory arc always try keep free rest system arc_sys_free increased shrinker callback able provide feedback kernel shrinker code progress safely enable kswapd hook allow arc receive notification memory pressure first detected kernel also enable appropriate kstats track callback reviewed alexander motin mav freebsd.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov authored george wilson george.wilson delphix.com signed matthew ahrens mahrens delphix.com close 10600,,
957,18c624302d444b8db36af55f4ee5288c65cbaa15,yan Moeller <ryan@iXsystems.com>, 2020-08-01 00:05:55 -0400,10655, zts flaky freebsd mark known issue reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10655,,
958,721ed0154817cf43507ce36d1e85a059365c8bb1,yan Moeller <ryan@iXsystems.com>, 2020-07-31 21:11:21 -0400,10651, zts use posix compatible space character class freebsd recently integrated change cause regex throw error instead silently misinterpreted change regex use space reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller freqlabs freebsd.org close 10651,,
959,25499e2139b248eef1b89148002ade27f0223ba9,yan Moeller <ryan@iXsystems.com>, 2020-07-31 12:17:37 -0400,10634, lua increase reserved stack space freebsd debug config freebsd stack space debug configuration overflow stack formatting error message call depth limit frame reached readily reproduced running gsub recursion test increased kstack size hit panic page per kstack noticed away bumped reserve additional byte stack building freebsd enough avoid panic deep stack wasting much space default stack size used reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10634,,
960,24f98ed383c978fe4ec385a912573fb1d9f3260e,llan Jude <allan@klarasystems.com>, 2020-07-31 12:07:37 -0400,10632, encountering ezfs_unknown print error text buffer anyway rather saying internal error provide context might user help understand issue reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10632,,
961,eabf270b2c5902967e04ad8b3c6eca381964f24c,llan Jude <allan@klarasystems.com>, 2020-07-31 12:04:45 -0400,10636, remove duplicate include sys zfeature.h dmu_objset.c reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10636,,
962,4cf6f10714109902504156c0e02ee97a11a32cc1,llan Jude <allan@klarasystems.com>, 2020-07-31 12:01:41 -0400,10649, pyzfs add missing entry zfs_errno causing later errno incorrect value reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10649,,
963,948423a3d1b6b396b46c8edbee9d77515a62589b,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-31 08:59:00 -0700,10652, zfs promote doe delete livelist origin clone promoted livelist longer accurate discarded clone origin also clone i.e promoting clone clone origin livelist also longer accurate discarded code actually  consider pool filesystem clone clone clone clone promote discard livelist discard livelist happening impact destroyed use livelist find block free livelist longer correct end freeing block still use incorrectly freed block reallocated causing checksum error destroyed double free incorrectly freed block problem remove livelist origin_ds ds_dir origin snapshot already moved promoted dsl_dir actually trying remove livelist promoted dsl_dir already removed explained comment beginning need use saved odd origin dsl_dir reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed sara hartse sara.hartse delphix.com signed matthew ahrens mahrens delphix.com close 10652,,
964,a15c6f33104a0ef12f36688e5dcca2f16fff8e05,on Brady <don.brady@delphix.com>, 2020-07-30 10:11:05 -0600,10641, zts minor improvement functional test fixed typo cause one variation added additional coverage adding special vdev pool create added additional coverage using sector size reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed brady don.brady delphix.com close 10641,,
965,2f571dbe06e3d65a3ddadca54d94e4ee2798529d,yan Moeller <ryan@iXsystems.com>, 2020-07-30 12:09:46 -0400,10604, use correct prefix share pam configs respect configured install prefix reviewed brian behlendorf behlendorf1 llnl.gov reviewed arvind sankar nivedita alum.mit.edu signed ryan moeller ryan ixsystems.com close 10604,,
966,3a92552f755543c02c71aa29d680261907b1bea3,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-29 17:04:34 -0700,10637, fix error handling vdev_top_zap vdev_load look several entry vdev_top_zap object case encounter error returned caller however handling get error may continue theory could cause realize vdev used special allocation practice encountered error looking vdev_top_zap also get error looking entry object thus zpool open import would fail therefore impact problem negligible commit add error handling error accessing vdev_top_zap relying unrelated code fail  reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10637,,
967,ae12b023082fd91e89507a2a1fc014e64c6767f0,onathon <559369+jonathonf@users.noreply.github.com>, 2020-07-29 23:52:18 +0000,10627, verify zfs module loaded starting service minor change systemd service template verifies zfs kernel module loaded kernel prior attempting import zpool reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jonathon fernyhough york.ac.uk close 10627,,
968,27d96d22542282b81a055e2108268dc78d08eda8,atthew Macy <mmacy@freebsd.org>, 2020-07-29 16:35:33 -0700,10620, rename refcount.h zfs_refcount.h renamed avoid conflicting refcount.h different implementation already provided platform reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10620,,
969,843e9ca2e1ef347cf6b0271ed84438afc145dfd4,erapheim Dimitropoulos <serapheim@delphix.com>, 2020-07-29 09:43:33 -0700,10630, introduce name zthrs debugging issue generally analyzing runtime system would nice able tell different zthrs running name rather analyze stack reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com authored ryan moeller ryan ixsystems.com signed serapheim dimitropoulos serapheim delphix.com close 10630,,
970,5678d3f59389a241c8d9c032513c38209bb53e70,atthew Macy <mmacy@freebsd.org>, 2020-07-28 13:02:49 -0700,10621, prefix zfs internal endian check _zfs freebsd defines _big_endian big_endian _little_endian little_endian every architecture trying cross build whilst hiding zfs proven extremely cumbersome reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10621,,
971,3eabed74c0fca5dd9f96d2cca13c4a1a16d5c094,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-27 16:11:47 -0700,10613, fix lua stack overflow recursive call gsub zfs program subcommand invokes lua interpreter run zfs channel program interpreter run constrained environment defined memory limit lua stack used lua function call allocated kernel heap limited memory limit flag module parameter stack used certain lua feature implemented stack limited luai_maxccalls limit call depth lua call use stack space others gsub unusually large amount programming trick invoked recursively using stack rather lua stack overflow 16kb linux kernel stack iteration limit one solution would decrease luai_maxccalls could made work drawback existing test suite doe pas luai_maxccalls may lua function use lot stack space stack space may change depending compiler version option commit address problem adding new limit amount free space byte remaining stack running lua interpreter luai_mincstack 4096 amount stack space remaining lua runtime error generated reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed allan jude allanjude freebsd.org reviewed serapheim dimitropoulos serapheim delphix.com signed matthew ahrens mahrens delphix.com close 10611 close 10613,,
972,e64cc4954c7862db6a6b4dc978a091ebc3f870da,atthew Macy <mmacy@mattmacy.io>, 2020-07-25 20:09:50 -0700,10625, refactor ccompile.h include system header step toward able vendor openzfs code freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10625,,
973,6d8da84106de1fc8480e1758cc88e81393b4c0c2,atthew Macy <mmacy@mattmacy.io>, 2020-07-25 20:07:44 -0700,10623, make use zfs_debug consistent within kmod source reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10623,,
974,f5b189f9379b092600293ac3e7a670bf2087d88c,atthew Macy <mmacy@mattmacy.io>, 2020-07-25 11:00:23 -0700,10622, freebsd fix required build zfs powerpc reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10622,,
975,d364de7a89dc339aad1bc20d429dc670e61dc1ff,yan Moeller <ryan@iXsystems.com>, 2020-07-25 13:49:49 -0400,10616, freebsd remove accidental arc size limiter i386 additional memory reservation logic limit size reported available memory accidentally used arch due missing header include machine vmparam.h freebsd zfs arc_os.c pull missing definition reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 10616,,
976,cb18d88060100ced29da1900f5a35e3deded0b36,yan Moeller <ryan@iXsystems.com>, 2020-07-25 13:47:18 -0400,10626, freebsd implement arc_free_memory used kstat something nice reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 10626,,
977,6fba7bfd0e2d7dc677278322158cd89816a53433,rian Atkinson <batkinson@lanl.gov>, 2020-07-24 22:09:20 -0600,10430, add gang abd child parent gang abd design gang abd another gang abd child make sure logical offset gang abd consistent individual abds contains child gang abd added child gang abd add individual child gang abd parent gang abd allows consistent view offset within parent gang abd reviewed mark maybee mmaybee cray.com reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 10430,,
978,8348fac30c51564bf0c102aab35a54ca2dca50b4,yan Moeller <ryan@iXsystems.com>, 2020-07-24 23:38:48 -0400,10610, limit dbuf cache size based arc target size default set initial max size ulong_max allow cache grow arc recalculate metadata cache size demand adapt update description zfs module parameter reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed ryan moeller ryan ixsystems.com close 10563 close 10610,,
979,4fbdb10c7b94439694ad18409662210099e09cb4,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-24 09:39:26 -0700,10608, remove kmem_cache module parameter kmc_expire_age default kmc_expire_mem meaning object removed kmem cache magazine  also module parameter change kmc_expire_age establishes maximum lifetime object stay magazine setting rarely ever used regularly tested commit remove code kmc_expire_age associated module parameter additionally unused module parameter removed reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10608,,
980,02fced3067798cbc5472f180e4c6d36f4c441a77,ony-zfs <62951051+tony-zfs@users.noreply.github.com>, 2020-07-23 20:44:03 -0400,10558, add support decode resume token adding new subcommand zstream called token allows user decode resume token retrieve toname field useful tool need information syntax work follows zstream token resume_token reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed tony perkins tperkins datto.com close 10558,,
981,bfafe1780a61a1be0a84273c7155708de003033e,yle Evans <kevans91@users.noreply.github.com>, 2020-07-23 19:41:48 -0500,10606, annotate unused parameter inline definition libspl umem obviously intentionally unused annotate appease wunused parameter build include header sys dmu.h case used zfs_debug build annotate __maybe_unused appease wunused parameter reviewed brian behlendorf behlendorf1 llnl.gov signed kyle evans kevans freebsd.org close 10606,,
982,f7a68f99d07ffb231046d2bae5360b66957ca9a7,yan Moeller <ryan@iXsystems.com>, 2020-07-23 20:35:34 -0400,10609, freebsd remove code duplication sysctl_os.c drop unnecessary redefinition several arcstat value put missing extern declaration arc_impl.h reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10609,,
983,b197457cd6e7deec0a24dcd435de5c4184399348,yle Evans <kevans91@users.noreply.github.com>, 2020-07-22 13:14:20 -0500,10605, libzfs const ify path argument need mutate path argument notably zfs_open take path const getextmntent take path const fprintf clearly need mutate hard foresee reason libzfs could conceivably want mutate future either const ify reviewed ryan moeller ryan ixsystems.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed kyle evans kevans freebsd.org close 10605,,
984,db5b3926e98e6b6a29da0987c78c59f4502ff22c,yan Moeller <ryan@iXsystems.com>, 2020-07-22 14:09:04 -0400,10602, openzfsify contributing.md update stale reference zfs linux openzfs contributing.md reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10602,,
985,0c79b070a70c09aac45a520aba7329bd12a7e16e,yan Moeller <ryan@iXsystems.com>, 2020-07-22 13:49:22 -0400,10590, zts fix devname2devid build freebsd libudev libudev installed freebsd configure find set found linker specify use libudev_libs location library get added linker flag devname2devid also use libudev_cflags case platform need reviewed brian behlendorf behlendorf1 llnl.gov reviewed arvind sankar nivedita alum.mit.edu signed ryan moeller ryan ixsystems.com close 10590,,
986,59415fc9fba4796d832b1a82b5ac338df7a11510,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-18 21:24:48 -0400,10595, add zfs_gitrev.h distributed source commit 109d2c931020 move zfs_gitrev.h build directory stopped distributing zfs_gitrev.h generated file add back change behavior change logic gitrev follows source tree git repository behavior build unchanged make dist append dist git tag distributed version zfs_gitrev.h otherwise check source tree contains zfs_gitrev.h use falling back unknown exist clean make maintainer clean remove source tree make clean make distclean allows disted source track git tag originally came dist suffix indicating code built directly git might contain additional change beyond git tag reviewed brian behlendorf behlendorf1 llnl.gov reviewed eli schwartz eschwartz archlinux.org signed arvind sankar nivedita alum.mit.edu close 10595,,
987,d32a59fe2b29a7008a820d597a7efa41ccdf2f09,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-17 17:30:51 -0400,10595, restore script make_gitrev.sh commit 109d2c931020 move zfs_gitrev.h build directory removed script make_gitrev.sh putting logic makefile however least arch linux packager want script file generated without run configure first dkm packaging purpose move make recipe back script reviewed brian behlendorf behlendorf1 llnl.gov reviewed eli schwartz eschwartz archlinux.org signed arvind sankar nivedita alum.mit.edu close 10595,,
988,5dd92909c6d1ed606aac7c6ffe3df68513bb5ed1,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-22 09:51:47 -0700,10592, adjust arc terminology process evicting data arc referred arc_adjust commit change term arc_evict specific reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 10592,,
989,317dbea1735f3cd3eaec70bcb31b3a7ba0721923,van Harris <eharris@puremagic.com>, 2020-07-19 12:22:44 -0500,10584, updated contributing doc link new issue label reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed evan harris eharris puremagic.com close 10584,,
990,5ad61b5b0153094ddc5f524800907973a8583d55,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-19 13:19:08 -0400,10582, disable shebang mangling input file dkm module installs entire source tree including .in file later substituted building make complain shebang line .in file exclude everything usr src shebang mangling dkm package kmod package contain file excludes mangling drop exclusion reviewed brian behlendorf behlendorf1 llnl.gov reviewed joã carlos mendes luã jonny jonny.eng.br signed arvind sankar nivedita alum.mit.edu close 10581 close 10582,,
991,0421f257b20f41e33fb69e067b47beed2c5bd3bd,yan Moeller <ryan@iXsystems.com>, 2020-07-19 13:15:34 -0400,10579, freebsd add legacy arc_min arc_max tunables renamed vfs.zfs.arc_min vfs.zfs.arc_max vfs.zfs.arc.min vfs.zfs.arc.max add legacy compat tunables old name reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10579,,
992,ceadc0dbbd5594db153a61c3d82a6d98e1adca7d,ean-Baptiste Lallement <jean-baptiste@ubuntu.com>, 2020-06-18 19:15:10 +0200,10477, make unloading key robust unit failing instead stopping someone manually unloaded key stopping unit zfs unload key failing unavailable key follow similar logic loading key checking key status unloading reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com authored didier roche didrocks ubuntu.com signed didier roche didrocks ubuntu.com close 10477,,
993,b717f9b95e6b85ea502318f6350a6b6b6a237ebd,ean-Baptiste Lallement <jean-baptiste@ubuntu.com>, 2020-06-18 19:00:04 +0200,10477, bindsto dataset keyload unit mount associate unit need stronger dependency mount unit keyload unit know dataset encrypted keyload unit fails want still try mount dataset fail itâ better show failure due dependency failing keyload unit tighting dependency know generate unit generator itâ optional dependency bindsto enable well keyload unit fails point associated mountpoint unmounted reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov authored didier roche didrocks ubuntu.com signed didier roche didrocks ubuntu.com close 10477,,
994,de817cc7b7c2ab3dfa8348ae0e826e84c1d416eb,ean-Baptiste Lallement <jean-baptiste@ubuntu.com>, 2020-06-18 18:47:27 +0200,10477, ensure mount unit pilot zfs key loaded drop zfs.mount dependency explicity generated key load .service unit indeed associated mount unit dataset key load .service thus mount point control point want mounted zfs mount.service stock generator automount point triggered another service additional dependency key load service needed thus reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov authored didier roche didrocks ubuntu.com signed didier roche didrocks ubuntu.com close 10477,,
995,026e529cb336d1d656eaa33f58ac911a70f273cd,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-19 09:58:30 -0700,10576," remove skc_reclaim hdr_recl kmem_cache shrinker spl kmem_cache implementation provides mechanism skc_reclaim whereby individual cache register callback invoked memory pressure mechanism used one place arc register hdr_recl reclaim function function wake arc_reap_zthr whose job call kmem_cache_reap  skc_reclaim callback invoked shrinker callback arc_reap_zthr callback wake arc_reap_zthr called arc_reap_zthr waking arc_reap_zthr called shrinker callback already aware memory pressure responding therefore little benefit ever calling hdr_recl skc_reclaim callback arc_reap_zthr also wake second memory low allocating arc buffer therefore additionally waking shrinker calbacks little benefit shrinker callback invoked frequently e.g 10,000 time per second additionally invocation shrinker callback skc_reclaim invoked many time therefore mechanism consumes significant amount cpu time kmem_cache shrinker call addition invoking skc_reclaim doe two thing attempt free page use system return free object magazine layer slab layer return entirely free slab page layer i.e free page action apply cache implemented spl use underlying kernel slab slub cache spl cache used object 32kb primarily linear abd cached dbuf cache action freeing object magazine layer returning entirely free slab also taken whenever kmem_cache_free call find full magazine would typically zero entirely free slab number object magazine limited typically object per magazine one magazine per cpu therefore benefit nonzero modest also call arc_reap_zthr memory pressure detected therefore calling kmem_cache shrinker needed commit remove skc_reclaim mechanism callback hdr_recl kmem_cache shrinker callback reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed pavel zakharov pavel.zakharov delphix.com signed matthew ahrens mahrens delphix.com close 10576",,
996,e862b7ecfc6049df19cf0d439510f385a7707b8b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-07-19 09:56:21 -0700,10573, linux 4.10 compat has_capability stock kernel older 4.10 export has_capability function required commit e59a377 avoid breaking build older kernel revert safe legacy behavior return eacces privilege checked reviewed ryan moeller ryan ixsystems.com reviewed matt ahrens matt delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10565 close 10573,,
997,8fbf432ae274fc227c38012230c3bf23bda64d64,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-16 10:11:26 -0700,10575, anon_pages free evictable arc_free_memory return amount memory arc considers free includes page actually free evicted essentially zero cost without example page cache arc squeeze page included calculation leaving arc_sys_free 64th ram free evictable page included count free evictable page described anonymous memory used recently swapped page would written disk swap order evict included proc meminfo memavailable therefore appropriate included free evictable memory returned arc_free_memory arc intentionally make system swap commit remove memory returned arc_free_memory step towards enabling arc manage free memory monitoring reducing arc size notice insufficient free memory arc_reap_zthr rather current method relying arc_shrinker callback reviewed tony nguyen tony.nguyen delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10575,,
998,23c871671c7bc2c79ad6ec1804715f405058cdb6,atthew Macy <mmacy@mattmacy.io>, 2020-07-15 21:32:50 -0700,10542, freebsd zfs command backward compatibility update zfs command backwards compatible version zfs base freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10542,,
999,f1b815379422b840b01bbb25f40140d774f84692,rian Behlendorf <behlendorf1@llnl.gov>, 2020-07-15 21:28:18 -0700,10578, update zts report.py additional test following test case observed fail frequently enough problem reporting result updated entirely reliable add zts report.py script alloc_class cli_root zpool_import mmp rsend reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 10578,,
1000,103bc5b957b0456814665947a5db7348dcd9d78a,yan Moeller <ryan@iXsystems.com>, 2020-07-16 00:26:39 -0400,10572, zts fix nonportable use stat freebsd stat specify format string rather blkdev.shlib stat get file object zdb already library function portably use get_objnum get file object take log_must call masked error good pipe output log_must loop anyway reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10572,,
1001,01a4852ecbe3fddd6e7dbab5b740a7871dcd7e8b,omain Dolbeau <romain@dolbeau.org>, 2020-07-16 00:58:15 +0200,10569, fix early include linux percpu_compat.h move add include linux percpu_compat.h satisfy missing requirement reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain dolbeau.org close 10568 close 10569,,
1002,6774931dfa9e90a88d77d54108eccc26cc2af893,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-14 17:51:05 -0700,10515, extend zdb print inconsistency livelists metaslabs livelists spacemaps data structure log allocation free livelists entry block pointer blkptr_t spacemaps entry range number often used track allocated freed region metaslabs vdevs data structure become self inconsistent example block range double allocated two allocation record without intervening free double freed two free record without intervening allocation zdb well zfs running kernel detect inconsistency loading livelists metaslab however generally halt processing error detected analyzing disk problem often want know entire set inconsistency possible current behavior commit add new flag zdb analyzes livelist metaslab data structure display inconsistency note different leak detection performed zdb check inconsistency spacemaps tree block pointer assumes spacemaps self consistent specific check added verify livelists iterating sublivelists report leftover free report double allocs double free record leftover allocs together txg see cross check verify spacemaps iterating metaslab iterate spacemap metaslab entry spacemap log report double free double allocs verify livelists consistenet spacemaps space referenced livelists using free cancel corresponding allocs allocated according spacemaps reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov authored sara hartse sara.hartse delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 66031 close 10515,,
1003,38e2e9ce8327284b2d516874308300aa96102fe9,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-11 19:35:58 -0400,10559, centralize variable substitution bunch place need edit file incorporate configured path i.e bindir sbindir etc move logic common file create arc_summary copying arc_summary appropriate build time instead install time reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10559,,
1004,bdb518c13abb9eca8d6f8f1d9e2096dc5163a9e7,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-13 19:20:27 -0400,10564, make rpm_define_kmod conditional config_kernel configure variable defined config_kernel disabled defining empty macro cause error spec file provide default macro undefined remove config conditionals tgz makefile reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10564,,
1005,e6c093dd94e7e6f221194e96095c0133662e3500,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-13 17:24:07 -0400,10564, fix parallel make srpm building srpm using make recursive make invoked build srpm dkm kmod utils build dist target unnecessary also good chance breaking race trying build gitrev fix make dist prerequisite srpm dkm kmod utils instead srpm common done invoking recursive make also gitrev really required make dist instead adding built_sources add prerequisite target mark individual package target phony reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10564,,
1006,1743c737f5ad6e2c6c429858b7c0f717ecb20954,lexander Motin <mav@FreeBSD.org>, 2020-07-14 15:21:57 -0400,10553, fix lor spa_props_lock team automated api testing hit deadlock zfs caused lock order reversal one side lock writer call spa_sync_props wait spa_props_lock another spa_prop_get lock spa_props_lock call trying lock reader patch make spa_prop_get lock spa_props_lock making order consistent reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org close 10553,,
1007,5f72109e5bd84124bd6dd9877fae3fa9ae7ee348,oao Carlos Mendes Luis <dioni21@users.noreply.github.com>, 2020-07-14 16:17:44 -0300,10560, disable defs asan build commit af65916 added defs shared library apparently doe work case enable asan add non asan build reviewed brian behlendorf behlendorf1 llnl.gov reviewed joã carlos mendes luis jonny jonny.eng.br signed arvind sankar nivedita alum.mit.edu close 10557 close 10560,,
1008,e4d3d776844fd9c53b4bb641e21a7eff62052dca,rian Atkinson <batkinson@lanl.gov>, 2020-07-14 12:04:35 -0600,10511, fixing gang abd child removal race condition linux list debug code setting failure checking node next prev value pointing back node time check evaluates 0xdead removing child gang abd must acquire child abd_mtx make sure abd added another gang abd removed gang abd fix race condition checking abds link already active part another gang abd adding gang added additional debug code gang abd abd_verify make sure child abd active link also check make sure another gang abd added gang abd reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed brian atkinson batkinson lanl.gov close 10511,,
1009,c15d36c674bcfb10975fc835978d4a49d159bf0b,eorge Wilson <george.wilson@delphix.com>, 2020-07-13 11:19:18 -0500,10300, remove dependency sharetab file refactor sharing logic motivation context current implementation sharenfs sharesmb relies use sharetab file use file specific required linux freebsd currently code must maintain update file add complexity present significant performance impact sharing many datasets addition concurrently running zfs sharenfs command result missing entry sharetab file leading unexpected failure description change remove sharetab logic linux freebsd implementation sharenfs sharesmb still preserve specific library contains logic required sharing nfs smb following entry point exist vastly simplified libshare library sa_enable_share share dataset may commit change unshares dataset may commit change sa_is_shared determine dataset shared sa_commit_share notify nfs smb subsystem commit share determine sharing option valid sa_commit_share entry point provided performance enhancement required sa_enable_share may commit share part implementation libshare provides framework nfs smb operating system may fully support protocol feature protocol nfs operation linux libshare update etc exports.d zfs.exports add remove share commits change invoking exportfs file automatically read kernel nfs implementation make better integration nfs systemd service freebsd libshare update etc zfs export add remove share commits change sending sighup mountd smb operation linux libshare add remove file var lib samba usershares calling net command directly need commit change freebsd doe support smb performance result test sharing performance created pool increasing number datasets invoked various zfs action would enable disable sharing performance testing limited nfs sharing following test performed vcpu system 128gb pool comprised 50gb ssds scale testing share filesystems parallel zfs sharenfs dataset unshare filesystems parallel zfs sharenfs dataset functional testing share filesystem serially zfs share unshare filesystem serially zfs unshare reset sharenfs property unshare zfs inherit sharenfs pool zfs sharenfs scale testing saw average reduction time 89.43 zfs sharenfs saw average reduction time 83.36 functional testing also show huge improvement zfs share 97.97 reduction time zfs unshare 96.47 reduction time zfs inhert sharenfs 99.01 reduction time reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed bryant bryangly gmail.com signed george wilson gwilson delphix.com external issue dlpx 68690 close 1603 close 7692 close 7943 close 10300,,
1010,e59a377a8fdbf4e66864d1654c0055fdff5f12f4,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-07-11 17:18:02 -0700,10545, snapshot_limit incorrectly enforced root snapshot_limit property limit number filesystems snapshot created dataset according manpage limit enforced user allowed change limit two type user allowed change limit delegated snapshot_limit permission e.g zfs allow user dataset work properly user elevated system privilege e.g root doe work root user incorrectly get error trying create snapshot filesystem exceeds _limit property problem priv_policy_ns doe work cred_t current process happens called syncing context part sync task check func determine permission corresponding user process commit fix issue passing task_struct typedef proc_t syncing context using has_capability determine process privileged note still need pas cred_t syncing context check user delegated permission zfs allow problem impact linux wrapper added freebsd continues use priv_check_cred work arbitrary cred_t reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 8226 close 10545,,
1011,217f48373f9878a3cd714b8007444f46101aad9e,yan Moeller <ryan@iXsystems.com>, 2020-07-11 20:16:13 -0400,10550, libzfs add error message creating mountpoint failed zfs_mount_at fails stat mountpoint create directory return error message failed create mountpoint indication failed add error string syscall error aux message update do_mount linux return errno instead reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10550,,
1012,3933305eaca95ad6c3003765326136d4d710ba0e,atthew Macy <mmacy@freebsd.org>, 2020-07-11 17:13:45 -0700,10529, freebsd use hash table taskqid lookup previously tqent could recycled prematurely update code use hash table lookup resolve reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10529,,
1013,6f1db5f37ede685ebe55d1549c635e0aef4661b5,erapheim Dimitropoulos <serapheim@delphix.com>, 2020-07-10 15:30:31 -0700,10549, unconditionally enable debugging libzpool already enable ddebug unconditionally meaning regardless debug build performance build zdb ztest mostly used development debugging patch enables ddebug libzpool extending debugging check zdb ztest couple test utility addition passing ddebug also enable dzfs_debug assertion check work expected libzpool every utility link even utility directly use functionality wrapped zfs_debug macro definition reason utility may still include header contain structs field zfs_debug defined problem enabling flag libzpool zdb lead random problem e.g segmentation fault zdb may incorrect view struct passed libzpool reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 10549,,
1014,f040a7b0f8bad1cea97b0148076608db0c183d2a,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-09 16:31:41 -0400,10538, fix work cross compiling make respect configured sysroot otherwise might find header build machine assume library available host target tighten error checking pkg config user specified _cflags _libs find header library issue fatal error fix flag usr local lib instead usr local clean _cflags _libs located something later find work rename zfs_ac_ scope reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1015,3e597dee1128db8907a2b757c675c41cfdbf21aa,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-06 16:01:29 -0400,10538, use referencing library libtool store absolute path dependency_libs component .la file makefile dependent library refers library relative path library end duplicated link command line example libzfs specifies libzfs_core libnvpair libuutil dependency linked .la file libzfs_core also specifies libnvpair using absolute path result libnvpair present twice linker command line producing libzfs thing cause slightly slow linking avoid using absolute path everywhere including convenience library consistency reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1016,af6591622696bcb4e46702da07923e909db99f30,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-05 22:58:59 -0400,10538, add defs ldflags make sure installed library linked everything require reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1017,1537105a8cfecb227a2925a7889cd662224b7968,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-05 21:08:40 -0400,10538, add config.rpath am_gnu_gettext commit e8864b1b28c2 config libintl libiconv gettext detection added empty config.rpath comment real one work libtool however empty config.rpath really work freebsd libintl usr local lib configure think gettext exist nls disabled currently supported source hence requires manual workaround directly link lintl without relying configure config.rpath essential let detected either prefix using libintl prefix also see mentioned issue libtool flag applied compilation seems work fine pas ltlibintl libtool unnecessary include ltlibiconv configure test automatically append ltlibintl necessary link libiconv reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1018,4d61ade1a317606dc899e38b516410a0c2fdae0e,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-30 13:10:41 -0400,10538, clean lib dependency libzutil currently statically linked libzfs libzfs_core libzpool avoid unnecessary duplication removing libzfs libzpool adding libzfs_core libzpool remove unnecessary dependency libuutil libzfs_core libtirpc libspl keep libcrypto libzfs use function libssl librt used clock_gettime however modern system libc rather librt add configure check see actually need librt libdl raidz_test add missing dependency zlib libefi libzfs libuuid zpool libuuid libudev zed libnvpair assertion add assert.c provide aok libspl_assertf sort ldadd program library satisfy dependency come end rather beginning linker command line revamp configure test libaries use instead take advantage pkg config also avoids polluting libs list required dependency pkgconfig file move one libzfs_core latter directory install pkgconfig file libdir pkgconfig linux prefix libdata pkgconfig freebsd instead usr share pkgconfig correct location library .pc file reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1019,b6437ea41c7611481925d72d294677434639b847,rvind Sankar <nivedita@alum.mit.edu>, 2020-07-04 18:24:13 -0400,10538, move libspl_assertf file variadic function inlined libspl_assertf end duplicated every file fix moving function new assert.c also move definition aok new file instead zone.c reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10538,,
1020,2054f35e564b59e23950ee573e91dbae3fd2ccd9,eorge Amanakis <gamanakis@gmail.com>, 2020-07-10 17:10:03 -0400,10543, fix persistent l2arc bug case handle zio successful check list log block pointer empty restoring device header otherwise zero case perform actual write updating device header zio completes may touched memory holding log block pointer device header reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10540 close 10543,,
1021,d2bce6d036b38893b8d46fb3cd97fc8183967c34,abriel A. Devenyi <gdevenyi@gmail.com>, 2020-07-09 23:04:49 -0400,10513, add makefile command run checkbashisms bin script based shellcheck make target add target check violation posix standard shell script reviewed brian behlendorf behlendorf1 llnl.gov signed gabriel devenyi gdevenyi gmail.com close 10513,,
1022,a2ec738c75a11bb225b1a01cb6019cc360a6202c,yan Moeller <ryan@iXsystems.com>, 2020-07-09 20:49:02 -0400,10551, zts make conditional use compatible new bsd freebsd recently replaced gnu base system bsd licensed version supposed compatible feature present gnu version turn picky statement corresponding else zts echo place cause test fail unexpectedly new change two expression zts else compatibility new bsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10551,,
1023,659f4008be86d5eaf67184c83fddbcb6800a3705,yan Moeller <ryan@iXsystems.com>, 2020-07-09 20:47:12 -0400,10539, libzfs make zfs_cmd_t initialization consistent use zfs_ioctl clang version 8.0.1 shipped freebsd 12.1 release also oddly throw warning treated error initialization struct zpool_nextboot zpool_nextboot code freebsd updated use zfs_ioctl switch ioctl zfs_ioctl use initialize struct consistency pas zfs_cmd_t initialization reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed ryan moeller ryan ixsystems.com close 10539,,
1024,fb91f0367e91fb74a391f56d80fa3d3a9c6a2902,yan Moeller <ryan@iXsystems.com>, 2020-07-06 14:57:24 -0400,10524, add zpool_nextboot move zfs_jail libzfs.h freebsd zfsbootcfg command want zpool_nextboot libzfs add function freebsd libzfs_compat.c move prototype zfs_jail param.h freebsd spl libzfs.h ifdef freebsd prototype zpool_nextboot join reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10524,,
1025,cd32b4f5b79c97b293f7be3fe9ddfc9024f7d734,ark Johnston <markj@freebsd.org>, 2020-06-30 15:54:42 -0400,10519, fix deadlock freebsd getpages vop freebsd per page busy lock held handling page fault mapped file lock also acquired copying data dmu page cache zfs_write file range lock also acquired path opposite order respect busy lock getpages vop range lock used determine extent optional read ahead read behind operation resolve lock order reversal modify getpages vop avoid blocking range lock reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed mark johnston markj freebsd.org close 10519,,
1026,6e0056171234b84450af2afbb6594bd3b09422b5,ark Johnston <markj@freebsd.org>, 2020-06-30 15:35:29 -0400,10519, add try operation range lock bail immediately instead waiting lock become available used resolve deadlock freebsd page code functional change intended reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed mark johnston markj freebsd.org close 10519,,
1027,a4b0a74c7f346cab0a9ae3f8f55bd1a372e14336,inglq <winglq@gmail.com>, 2020-07-07 02:46:17 +0800,10526, fix wrong return clearing bit check whether bit note used reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed liu qing winglq gmail.com close 10526,,
1028,8a3d9186ba0c99834506392428c5c6cc3a0954a9,yan Moeller <ryan@iXsystems.com>, 2020-07-03 14:30:04 -0400,10528, update fix mmapped writes appears based unfinished version http d22130 bug file written via mmap actually persist update function match final version committed freebsd authored mateusz guzik mjg freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10527 close 10528,,
1029,9a49d3f3d3bfa26df4e5e54d574cb490f0ee284b,rian Behlendorf <behlendorf1@llnl.gov>, 2020-07-03 11:05:50 -0700,10349, add device rebuild feature device_rebuild feature enables sequential reconstruction resilvering mirror vdevs rebuilt lba order may quickly restore redundancy depending pool average block size overall fragmentation performance characteristic device however block checksum verified part rebuild thus scrub automatically started sequential resilver completes new option added zpool attach zpool replace command request sequential reconstruction instead healing reconstruction resilvering zpool attach pool existing vdev new vdev zpool replace pool old vdev new vdev zpool status output updated report progress sequential resilvering way healing resilvering one notable difference multiple sequential resilvers may progress long operating different top level vdevs zpool wait resilver command extended wait sequential resilvers perspective different healing resilvers sequential resilvers supported raidz compatible draid feature developed part change test moved functional replacement directory additionally replacement test renamed extended verify resilvering rebuilding original patch isaac huang he.huang intel.com reviewed tony hutter hutter2 llnl.gov reviewed john poduska jpoduska datto.com authored mark maybee mmaybee cray.com signed brian behlendorf behlendorf1 llnl.gov close 10349,,
1030,7ddb753d17f2c12f152647c0e34eb9c42ee5e4af,atthew Macy <mmacy@freebsd.org>, 2020-07-01 09:10:08 -0700,10497, freebsd change necessary coexist dtrace tree fix header conflict building zfs openzfs vendor import reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10497,,
1031,22831636c8c132c62c771c64e7131b422e41be34,arald van Dijk <harald@gigawatt.nl>, 2020-07-01 17:05:21 +0100,10518, configure fix supported shell equivalent rewrite also fix commit 9ea6c3d3 intended make definition _dracutdir _udevdir _udevruledir conditional actually ensured _initconfdir longer got defined _dracutdir defined defined _udevdir value used _udevruledir also fix fact check introduced commit 9ea6c3d3 could never work zfs_ac_package called configuration option processed reviewed brian behlendorf behlendorf1 llnl.gov signed harald van dijk harald gigawatt.nl close 10518,,
1032,2ac6aa117603d5856b172114dcc62c454dafddb1,arald van Dijk <harald@gigawatt.nl>, 2020-06-29 17:28:22 +0100,10509, pam fix test usage configure script standard test command doe support operator certain shell including bash support shell doe exactly thing standard operator use instead reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed harald van dijk harald gigawatt.nl close 10509,,
1033,3c42c9ed84f1755ee8898b76e0264b8ebab19fd8,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-29 09:01:07 -0700,10499, clean specific arc kmem code specific code e.g module linux doe need share code structure operating system particular arc kmem code need similar code illumos syncing specific code operating system example illumos support added common repo would add file module illumos zfs arc_os.c illumos version code therefore simplify code specific arc kmem routine change impact system behavior purely code cleanup change arena used linux freebsd always null heap_arena zio_arena zio_alloc_arena removed along code  desfree unused remove rename freemem avoid conflict pre existing define remove check related arena use unit byte rather converting byte page back byte unused remove skc_reap unused remove count argument unused remove  vmem_size associated type macro unused remove use confusing variable name store result arc_free_memory reviewed george wilson gwilson delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 10499,,
1034,94a2dca6a0b826a25ddc43c80297cbad02b48547,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-26 18:38:48 -0400,10506, mark phony target phony reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10506,,
1035,2b5f3045ae9c3a6f953d4cd5ed5be1b898809fdf,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-26 18:27:30 -0400,10506, paxcheck need run builddir srcdir otherwise doe nothing tree build reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10506,,
1036,c79907f90174842fb5213893e476e5d5f5b44eca,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-26 18:26:03 -0400,10506, move cppcheck suppression .github move file .github add distribution reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10506,,
1037,a86f0be8efc868b164b37a1952eb8c9b6da9a9a7,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-26 17:22:26 -0400,10506, remove config suppressed warnings.txt appear used buildbot let remove  reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10506,,
1038,4d8e68c42fb0bd5518f61670720af690fca302e0,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-26 17:20:30 -0400,10506, avoid installing kernel header freebsd kernel header installed dkm linux install unless building linux reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10506,,
1039,67b1362f0492dc398b842d17d8aab59aa2272802,rian Behlendorf <behlendorf1@llnl.gov>, 2020-06-27 17:33:30 -0700, , style fix fix cstyle issue shrinker.h exceeded column silence shellcheck warning zpool.d smart script signed brian behlendorf behlendorf1 llnl.gov,,
1040,3bc92b9ef6557efae00d37320db2548ec9bc0a56,llan Jude <allan@klarasystems.com>, 2020-06-27 13:29:47 -0400,10505, make zstreamdump output size payload begin record helpful determining size nvlist snapshot property reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10505,,
1041,270ece24b6f90c649a6c8880adec161119b60e18,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-27 10:27:02 -0700,10502, revise spl wrapper shrinker callback spl provides wrapper kernel shrinker callback enables zfs code interface multiple version shrinker api different kernel version specifically linux kernel 3.0 3.11 single combined callback linux kernel 3.12 later two split callback spl provides wrapper function zfs code need implement one version callback currently spl wrapper designed zfs code implement older combined callback downside approach general design within zfs latest linux kernel considered first class api newer split callback api easier understand callback one purpose current wrapper completely abstract differing api zfs code need ifdef code handle differing return value required different kernel version commit address drawback zfs code provide latest split callback spl provides wrapping function older combined api reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10502,,
1042,ec1fea4516ac2f0c08d31d6308929298d1b281d0,erapheim Dimitropoulos <serapheim@delphix.com>, 2020-06-26 18:06:50 -0700,10397, use percpu_counter obj_alloc counter linux backed cache previous commit enabled tracking object allocation linux backed cache spl layer debuggability commit unfortunately also introduced minor performance regression highlighted zfs perf test suite within delphix found regression would way workload commit brings performance back par creating separate counter cache making percpu order avoid lock contention initial performance testing done final round conducted tonynguien also one discovered regression highlighted culprit reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 10397,,
1043,7b232e93548a187beb5490314dad181f9ce6b17c,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-26 18:05:28 -0700,10494, arcstat add avail fix free meaning free field currently target amount memory leave free system constant booting commit change meaning free arc_free_memory amount memory arc considers free also add new arcstat field avail track  since avail negative also update arcstat script pretty print negative value example output arcstat time miss arcsz grow need free avail time miss arcsz grow need free avail 39k 114g 114g 2.4g 407m 42k 114g 114g 2.1g 120m 40k 114g 114g 1.8g 177m 24k 113g 112g 1.7g 269m 29k 111g 110g 1.6g 385m 27k 110g 108g 1.4g 535m 13k 108g 108g 2.2g 239m 33k 107g 107g 1.3g 639m 16k 105g 102g 2.6g 704m 7.2k 102g 102g 5.1g 3.1g 42k 103g 102g 4.8g 2.8g reviewed george melikov mail gmelikov.ru reviewed pavel zakharov pavel.zakharov delphix.com reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 10494,,
1044,bfcbec6f5d8aad60365eaeacff21df92c04c26df,obert Novak <sailnfool@gmail.com>, 2020-06-26 15:09:20 -0700,10315, add block histogram zdb block histogram track change psize lsize asize count number block blocksize total length block blocksize also keep running total cumulative size block size help determine size caching ssds added zfs hardware deployment block history count length summarized bin power two even row count zero printed change accessed specifying one two option zdb bbb pool zdb pbbb pool first version print table fixed size column second print parseable output placed csv file fixed column nicenum output sample block psize lsize asize size count length cum count length cum count length cum 512 3.50k 1.75m 1.75m 3.43k 1.71m 1.71m 3.41k 1.71m 1.71m 3.65k 3.67m 5.43m 3.43k 3.44m 5.15m 3.50k 3.51m 5.22m 3.45k 6.92m 12.3m 3.41k 6.83m 12.0m 3.59k 7.26m 12.5m 3.44k 13.8m 26.1m 3.43k 13.7m 25.7m 3.49k 14.1m 26.6m 3.42k 27.3m 53.5m 3.41k 27.3m 53.0m 3.44k 27.6m 54.2m 16k 3.43k 54.9m 108m 3.50k 56.1m 109m 3.42k 54.7m 109m 32k 3.44k 110m 219m 3.41k 109m 218m 3.43k 110m 219m 64k 3.41k 218m 437m 3.41k 218m 437m 3.44k 221m 439m 128k 3.41k 437m 874m 3.70k 474m 911m 3.41k 437m 876m 256k 3.41k 874m 1.71g 3.41k 874m 1.74g 3.41k 874m 1.71g 512k 3.41k 1.71g 3.41g 3.41k 1.71g 3.45g 3.41k 1.71g 3.42g 3.41k 3.41g 6.82g 3.41k 3.41g 6.86g 3.41k 3.41g 6.83g 6.82g 6.86g 6.83g 6.82g 6.86g 6.83g 6.82g 6.86g 6.83g 16m 6.82g 6.86g 6.83g reviewed brian behlendorf behlendorf1 llnl.gov signed robert novak novak5 llnl.gov close 9158 close 10315,,
1045,6b99fc0620f00fcfd201595b2bc6d279031dcb09,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-25 14:14:54 -0400,10501, fix make dist reduce usage extra_dist file conditionally included _sources _headers etc automake smart enough dist file could possibly included doe apply extra_dist resulting make dist depending configuration add file missing altogether various makefile change disted file commit excluding deleted file cmd zed agent readme.md etc init.d readme.md lib libspl freebsd getexecname.c lib libspl freebsd gethostid.c lib libspl freebsd getmntany.c lib libspl freebsd mnttab.c lib libzfs libzfs_core.pc lib libzfs libzfs.pc lib libzfs freebsd libzfs_compat.c lib libzfs freebsd lib libzfs freebsd lib libzfs freebsd libzfs_zmount.c lib libzutil freebsd zutil_compat.c lib libzutil freebsd lib libzutil freebsd module lua readme.zfs module linux spl readme.md test readme.md test zfs test test functional cli_root zfs_clone test zfs test test functional cli_root zfs_send test zfs test test functional inheritance readme.config test zfs test test functional inheritance readme.state test zfs test test functional rsend test zfs test test perf fio reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10501,,
1046,7c902a5178496f1321ecb9f33df743a77278089e,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-25 14:04:50 -0400,10501, include freebsd source module dist add freebsd makefile.bsd distdir target reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10501,,
1047,67c0f0dedc5ce0096dd0f595fa8a188de8d84547,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-26 10:42:27 -0700,10496, arc shrinking block read writes zfs register memory hook supposed allow arc shrink kernel experience memory pressure arc shrinker change arc_c via call commit arc shrinker would also evict data arc bring arc_size new arc_c however commit seemingly inadvertently made arc shrinker longer evicts data wait eviction complete repeated call arc shrinker reduce arc_c drastically often way arc_c_min since wait actual eviction data arc creates situation arc_size arc_c several second minute take arc_adjust_zthr evict data arc time block zfs process read write request e.g iscsi nfs read write syscalls ensure arc_c shrink faster adjust thread keep commit make arc shrinker wait eviction complete resulting similar behavior commit  note commit openzfs 9284 job integrated december 2018 part zol 0.8.x 0.7.x additionally arc size reduced drastically arc_adjust_zthr cpu many second without blocking thread bound cpu arc_adjust_zthr running able run long time ensure cpu bound thread make progress commit change make voluntary preemption call cond_resched reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 70703 close 10496,,
1048,221e67040fc47c15b3da2afb09bb48f1e9700fb9,elixdoerre <felixdoerre@users.noreply.github.com>, 2020-06-25 03:45:44 +0200,9903, pam implement zfs_key pam module implement pam module automatically loading zfs encryption key home datasets pam module load zfs key mount dataset session open unmounts dataset unloads key session close user logged change password module change encryption key reviewed richard laager rlaager wiktel.com reviewed jengelh jengelh inai.de reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed felix rre felix dogcraft.de close 9886 close 9903,,
1049,75138073208674967d0fb238f1b6210da224db36,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-22 17:30:40 -0400,10493, drop unnecessary srcdir path need specify srcdir explicitly _headers extra_dist reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1050,5ca349f95d836a2a59aceaa42715349749a43865,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-22 12:08:12 -0400,10493, fix check sed place test added commit 4313a5b4c51e detect sed support place work least system autoconfig 2.69 issue sed already found cached function evaluated result test completely skipped ... checking sed doe truncate output ... usr bin sed ... checking sed place ... cached usr bin sed first test executed libtool.m4 look around libtool least year sure encountered time original commit fix caching value ac_inplace flag rather path sed also use sed add ac_require ensure use sed located standard configure test reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1051,9642beef2b415e52638c469563f3addc30a024dc,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-21 21:04:02 -0400,10493, add missing third party license file dist license file added commit 31b160f0a6c6 icp improve aes gcm performance added distributed file reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1052,0b03254830a79ed0784b517467442ad38404de74,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-21 22:13:02 -0400,10493, fix tag target module makefile.in cleanup target look copied automake generated makefile.in work since none auto generated automake variable defined moreover ctags overridden top level makefile target pointless anyway gtags recursive target fix cscopelist moving top level makefile well line ctags etags also add ctags command well otherwise work one xargs invocation take place add assembler file ctags etags prune dotted dirs restrict find file cleanup add .phony module makefile.in fix one recipe missing continuation character reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1053,2989d1012ac00b4134a0dc490917e0b0d048d289,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-19 15:24:20 -0400,10493, fix libspl asm generic atomic vpath build currently asm generic atomic.c compiled file comment saying simplify upper level makefile however work properly vpath build would require better logic deal generated source correctly also seem complex specify source file depending cpu instead source directory lib libspl makefile.am eliminates need intermediate compilation reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1054,109d2c93102049e7d7fdd5de7f9edff717224b32,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-19 22:08:59 -0400,10493, move zfs_gitrev.h build directory currently tree build doe work read source directory zfs_gitrev.h created move file build directory appropriate generated file drop dist hook zfs_gitrev.h need distribute file since regenerated part compilation case script make_gitrev.sh try avoid updating zfs_gitrev.h change however cover case source directory git case zfs_gitrev.h get overwritten even though always unknown simplify logic always write new version zfs_gitrev.h compare old overwrite different simple enough include makefile drop script reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1055,33982eb24c615f78b8f6b5f54c6acb6c29cbf6e3,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-19 13:33:56 -0400,10493, support tree kmod build freebsd srcdir builddir pas makeobjdir freebsd make support tree build also allow passing gmake option freebsd make understands support useful flag like etc detect number cpu specified without argument reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10493,,
1056,f21de6883fa53b83c065aaa1aca7122afafb3c90,evin P. Fleming <kpfleming@users.noreply.github.com>, 2020-06-24 19:57:13 -0400,10491, add trim_finish notify script zed allow user configure notification trim operation completed pool unlike resilver_finish scrub_finish trim_finish event generated vdev pool trimmed script generate notification one reviewed brian behlendorf behlendorf1 llnl.gov signed kevin fleming kevin km6g.us close 10491,,
1057,9192f27c1d7a8cb367d8691277573f2b756b47b6,yan Moeller <ryan@iXsystems.com>, 2020-06-23 16:32:42 -0400,10490, add tunable handler freebsd tunable required handler implemented  add handler tunable declared common code reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10490,,
1058,2451a553681fac5e7e42bd794adbf5587bce6749,rawn <Insane.Prawny@gmail.com>, 2020-06-22 18:56:29 +0200,10483, zfs print userland version even kernel module loaded running zfs module loaded would currently result following output failed file directory note lack userland version output reorder code ensure userland version printed even kmods loaded reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 10483,,
1059,68301ba20e0a6543304a63d22b558fddea130d79,orgen Lundman <lundman@lundman.net>, 2020-06-23 01:53:34 +0900,10476, zed additional feature commit add two feature zed macos desire first unload kernel module zed would enter cpubusy loop calling zfs_events_next repeatedly look enodev returned kernel zed exit gracefully second feature idle ala persist taken deamon started without zfs kernel module stick around waiting kernel module unloaded back due daemon macos started launchctl expected stick around currently busy loop exists errno enodev ensure functionality upstream expects changed care error still doe exception enodev however probably better error erestart notwithstanding exit loop issue complaining zed taking cpu away reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10476,,
1060,42d8d1d66ac1d3629ab22f65cd0787933cfb60ab,erapheim Dimitropoulos <serapheim@delphix.com>, 2020-06-22 09:48:36 -0700,10482, remove unnecessary terminology error injection ztest rephrase error injection comment ztest clear reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed sara hartse sara.hartse delphix.com signed serapheim dimitropoulos serapheim delphix.com close 10482,,
1061,540493ba4f92df1cd3aa18336734cc07702b8bfb,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-22 09:46:37 -0700,10481, clarify comment config .m4 vdev_geom.c zfs_allow_ .ksh rephrase comment clear reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 10481,,
1062,745ace3f24299d0c319950db53012db2a0096d50,rian Behlendorf <behlendorf1@llnl.gov>, 2020-06-22 09:44:49 -0700,10489, update zts report.py additional test following test case may still occasionally fail added maybe list linux updated entirely reliable cli_root zfs_rename cli_root zpool_reopen refreserv refreserv_raidz test consistently fail fedora failure related kernel rescanning partition table loopback device longer reliable unless partprobe used order enable fedora bot default also added list test updated significant regression functionality covered test still detected freebsd builder alloc_class alloc_class cli_root zpool_expand cli_root zpool_expand rsend rsend_007_pos rsend rsend_010_pos rsend rsend_011_pos snapshot signed brian behlendorf behlendorf1 llnl.gov close 10489,,
1063,1c08fa8b5ba1a03a012823d7c0157ec54c68f113,yan Moeller <ryan@iXsystems.com>, 2020-06-19 18:12:34 -0400,10480, fix copy paste error breaking freebsd head resolve freebsd head build failure reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10480,,
1064,a8bd6dcf8756b4abc5bac00f54361b28809d4177,ndriy Gapon <avg@FreeBSD.org>, 2020-06-19 20:38:43 +0300,10280, zfs allow unallow work numeric uid gid work even especially matching user group name change originally xin lin delphij freebsd.org original patch xin delphij freebsd.org reviewed yuri pankov yuri.pankov nexenta.com reviewed andy stormont astormont reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed andriy gapon avg freebsd.org close 9792 close 10280,,
1065,2e6af52b2e2bbab1d1988bd52290586d3bd91623,yan Moeller <ryan@iXsystems.com>, 2020-06-18 16:45:36 -0400,10475, match new vfs_checkexp kpi freebsd head kpi changed freebsd update accordingly reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10475,,
1066,ae7b167a98b48260554fd88cef022547283e125f,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-16 19:46:04 -0400,10470, enable wmissing prototype wstrict prototype switch warning flag detect mismatch declaration definition reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1067,c0673571d03a51d9ac014ecb8cbb7a6ca9dee384,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-17 16:02:34 -0400,10470, switch wmissing prototype libgcc math function spl generic.c defines libgcc integer library function bit bother checking wmissing prototype since nothing directly call function code reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1068,eebba5d8f486fd069e9fccd9e653894a7d635cdd,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-16 18:56:47 -0400,10470, make skein_ get put 64_lsb_first inline function turn generic version inline function avoid skein_port_code trickery also drop check using fast bcopy variant bcopy assume alignment userspace version currently different macro defined kernelspace header reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1069,0ce2de637bf73e2c7e483e644aa09797439734ef,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-11 16:38:25 -0400,10470, add prototype add prototype move prototype header file reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1070,60356b1a211a0fcfe7dbd2e1dd280d6fc0170cf0,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-11 16:25:39 -0400,10470, add include file prototype include header prototype file provides definition well catch mismatch prototype definition reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1071,c3fe42aabd9f8879500437e2be2968b47e8b6797,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-15 14:26:43 -0400,10470, remove dead code delete unused function reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1072,65c7cc49bfcf49d38fc84552a17d7e8a3268e58e,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-15 14:30:37 -0400,10470, mark function static mark function used translation unit static includes function prototype header file either reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1073,1fa5c7af3314b4c556bd86e3a49e3497a5ed72ed,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-09 18:59:04 -0400,10470, cleanup libzpool kernel.c commit ec213971274a async zvol minor node creation interferes receive replaced changing prototype time however stub function libzpool kernel.c defined old prototype definition empty cause runtime issue lto build show warning mismatched prototype commit a0bd735adb1b add support asynchronous zvol minor operation removed real reason added stub implementation libzpool kernel.c reference delete dead code commit 196bee4cfd57 remove deduplicated send receive code removed drop stub well add zvol.h include provide prototype sort include directive reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10470,,
1074,f734301d2267cbb33eaffbca195fc93f1dae7b74,dilger <adilger@dilger.ca>, 2020-06-18 12:22:11 -0600,10408, linux add basic fallocate mode compatibility implement semi compatible functionality mode preallocation mode preallocation beyond eof zpl since zfs doe cow snapshot preallocating block file guarantee writes file run space even first overwrite guaranteed would handle later overwrite block due cow strict compliance futile instead make best effort check least enough free space currently available pool bit margin create sparse file requested size continue life doe handle case e.g several fallocate call writing file filesystem nearly full would require complex mechanism implemented probably based modified version dmu_prealloc usable new module option used control reserve margin single fallocate call default 110 requested preallocation size additional available space reserved overhead allow application good chance finishing write fallocate succeeds heuristic basic fallocate implementation desirable old non functional behavior returning eopnotsupp call restored setting parameter zfs_statvfs changed take inode instead dentry since dentry available test behlendorf cover basic fallocate functionality reviewed richard laager rlaager wiktel.com reviewed arshad hussain arshad.super gmail.com reviewed matthew ahrens mahrens delphix.com authored brian behlendorf behlendorf1 llnl.gov signed andreas dilger adilger dilger.ca issue 326 close 10408,,
1075,d553fb9b9e18e04d1c85bf1930bcf0f46757d32e,orgen Lundman <lundman@lundman.net>, 2020-06-19 02:44:45 +0900,10468, avoid adding new primitive zpool wait zpool wait brought sem_init family primitive set previously used open zfs also happens deprecated macos replace phtread api call reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed jorgen lundman lundman lundman.net close 10468,,
1076,8056a75672a57c85b8e10c0c6bce138146f7d213,atthew Macy <mmacy@freebsd.org>, 2020-06-18 10:17:50 -0700,10471, disambiguate condvar api contract illumos caller cv_timedwait distinguish whether signaled call timed illumos handle definition handle calling cv_signal return path signaled return value indicates instead timed would make sense possible query net signal disposition however possible spite fact place code clearly take different incompatible path timeout value indicated distinction appears rather subtle developer problem compounded fact linux calling cv_signal return path even right thing unless waiter since possible caller independently determine much time remaining possible query fact signaled prioritizing signalling timeout seems like cleaner solution addition judging usage pattern within code also error prone reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed matt macy mmacy freebsd.org close 10471,,
1077,7564073ed6344c12e6bc4ffabd130522d937fb93,atthew Macy <mmacy@freebsd.org>, 2020-06-17 21:44:13 -0700,10474, add abd_chunk_cache user apparently missed initial port integration need reap abd_chunk_cache freebsd change address oversight reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed matt macy mmacy freebsd.org close 10474,,
1078,4458157beecdf892a596bf8a61a958ebc492f0b3,orgen Lundman <lundman@lundman.net>, 2020-06-18 06:30:03 +0900,10469, zfs_ioctl saved_poolname truncated kmem_strdup kmem_strfree rely strlen saved_poolname truncated causing spl kernel memory allocator buffer freed wrong cache spl buffer allocated kmem_alloc_16 spl caller attempting free kmem_alloc_8 spl buffer bufctl 0x0 cache kmem_alloc_8 reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10469,,
1079,17ca30185af139588b9617ca0bdbf57027bd3303,lexander Motin <mav@FreeBSD.org>, 2020-06-17 17:27:04 -0400,10437, set initial arc_c arc_c_min instead arc_c_max least year since opensolaris arc_c set default arc_c_max later decreased memory pressure noticed arc_c set high enough cause memory pressure considered zfs setting arc_no_grow true make effect delay reap_retry_ms return time zfs continue increasing effective arc size causing memory pressure potentially point low memory handler activates reduces arc_c requesting fast reclamation allocated memory problem seems serious freebsd guess linux since neither implement use asynchronous kmem reclamation take time older freebsd supporting multiple memory domain system lot ram get completely unresponsive minute due heavy lock congestion arc reclamation page daemon kmem reclamation thread change conservative arc_c value arc stop growing time doe need later reclamation also since growing arc_c often situation use instead aggsum_compare arc_adapt reduce lock congestion also getting sync code  reviewed ryan moeller ryan ixsystems.com reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 10437,,
1080,fccaea454c3492e90b3e45b6bc33839b82af2125,oao Carlos Mendes Luis <dioni21@users.noreply.github.com>, 2020-06-16 16:27:23 -0300,10456, merge change upstream current bash_completion contrib code openzfs old change added since original repo http github.com aneurin zfs bash using original aneurin code since first deploy zol reviewed brian behlendorf behlendorf1 llnl.gov signed joã carlos mendes luã jonny jonny.eng.br close 10456,,
1081,cd07d7c83f83f8b7aed655ea20ab08f6f660a3bb,orgen Lundman <lundman@lundman.net>, 2020-06-17 03:57:04 +0900,10453, drr_begin forward declare untagged struct compiling clang doe allow untagged structs struct ddr_begin need declared struct reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10453,,
1082,86a0f4948363cc196d1ad6de9ba8685999bf8cdd,yan Moeller <ryan@iXsystems.com>, 2020-06-16 14:47:04 -0400,10443, freebsd kernel module depend xdr krpc 1300092 since http d24408 freebsd provides xdr function xdr module instead krpc freebsd module_depend changed xdr reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10442 close 10443,,
1083,d366c8fd7a163f17e8984952d8f0aeb550844e8a,orgen Lundman <lundman@lundman.net>, 2020-06-17 03:43:33 +0900,10452, make struct vdev_disk_t platform private linux defines different vdev_disk_t member macos used vdev_disk.c move declaration reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10452,,
1084,ba54b180a5b496af29f8dd6eada3f0bd82d9b883,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-16 11:41:45 -0700,10457, remove refences blacklist whitelist term reinforce incorrect notion black bad white good replace language specific term also clear rely metaphor specifically vdevs specified command line selected vdevs entry dev considered possible disk excluded device reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed matthew ahrens mahrens delphix.com close 10457,,
1085,0a03495e3ee75b3457181910081e809dda80cec0,rian Atkinson <batkinson@lanl.gov>, 2020-06-16 11:05:22 -0600,10431, fixing abd struct allocation freebsd event allocating gang abd freebsd passing however led allocation abd scatter chunk left gang abd allocation byte smaller  reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov authored matt macy mmacy freebsd.org signed brian atkinson batkinson lanl.gov close 10431,,
1086,c13facb9c4a036034ff8d898857a81c64c83dc09,yan Moeller <ryan@iXsystems.com>, 2020-06-16 12:59:31 -0400,10460, fix freebsd condvar semantics return instead negative delta signaled reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed ryan moeller ryan ixsystems.com close 10460,,
1087,883a40fff427d200be41d3faabab1dca9a84b353,orgen Lundman <lundman@lundman.net>, 2020-06-15 02:09:55 +0900,10412, add convenience wrapper common uio usage macos uio struct opaque api must used make smallest change code platform reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10412,,
1088,4f73576ea15fcf38b344b008eaf355480a08bbff,orgen Lundman <lundman@lundman.net>, 2020-06-15 02:08:21 +0900,10445, upstream stall forever macos clock_t unsigned return loop forever conditional tweaked ignore signedness reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10445,,
1089,f2edc0078fe158a846c6f0bfe33c2bdffeb5dc56,eorge Amanakis <gamanakis@gmail.com>, 2020-06-13 14:02:00 -0400,10433, fix gcc10.1 truncation error gcc10.1 complains include sys dmu.h 373 error directive output may truncated writing byte region size werror format truncation 373 define dmu_pool_ddt ddt  module zfs ddt.c 256 note expansion macro dmu_pool_ddtâ 256 void snprintf name ddt_namelen dmu_pool_ddt  include sys dmu.h 373 note format string defined 373 define dmu_pool_ddt ddt  module zfs ddt.c 256 note snprintfâ output byte assuming 102 destination size 256 void snprintf name ddt_namelen dmu_pool_ddt  257 ddt ddt_checksum .ci_name  258 ddt_ops type ddt_op_name ddt_class_name class  increasing dtt_namelen fix reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10433,,
1090,499dccd69baa7e7fe479a54b964409bfb8b45fd2,yan Moeller <ryan@iXsystems.com>, 2020-06-13 13:58:10 -0400,10449, freebsd require zeroing new lock init shown use enough justify inconvenience reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org reviewed allan jude allanjude freebsd.org signed ryan moeller ryan ixsystems.com close 10449,,
1091,e08b993396692c227f576dd789280663103d3332,rian Atkinson <batkinson@lanl.gov>, 2020-06-10 18:54:11 -0600,10428, removing zero_page mips architecture linux zero_page macro reference empty_zero_page exported gpl symbol call zero_page removed single zero page allocated page kernel abd code path reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 10428,,
1092,059f7c20e3d410efb48aacce42abf47df316bee4,rischa Zengel <github.zfsonlinux@zengel.info>, 2020-06-11 02:53:07 +0200,10419, man.8 add bookmark list type checking bash_completion missed bookmark type  zfs get type zpool2 name property value source zpool2 type bookmark  reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed grischa zengel zengel.info close 10419,,
1093,2bc07c6dfff616da76637b8b31d55fa11a7f542b,rischa Zengel <github.zfsonlinux@zengel.info>, 2020-06-11 02:51:15 +0200,10418, bash_completion add missing attribute attribute missing shown man page zfs list type comma separated list type display type one filesystem snapshot volume bookmark example specifying snapshot display snapshot zfs get source comma separated list source display property coming source list ignored source must one following local default inherited temporary received none default value source zfs get type comma separated list type display type one filesystem snapshot volume bookmark reviewed brian behlendorf behlendorf1 llnl.gov signed grischa zengel zengel.info close 10418,,
1094,f66434268cef381b2799c45c654162bfb8e128ce,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-10 17:07:59 -0700,10435, remove unnecessary reference slavery horrible effect human slavery continue impact society casual use term slave computer software unnecessary reference painful human experience commit remove possible reference term slave implementation note zpool.d slave script renamed deps terminology dmsetup deps reference sys class block dev slave directory remain directory name determined linux kernel although dmsetup deps provides information unfortunately requires elevated privilege whereas sys ... directory world readable reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 10435,,
1095,feff3f69fc3de99f31af6955e2cb27eb8d0f436e,yan Moeller <ryan@iXsystems.com>, 2020-06-10 14:05:15 -0400,10427, fixup avoid geom topology lock recursion autoexpanding pool patch applied vdev_geom_open instead vdev_geom_close mistake reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10427,,
1096,66786f7943ee83617cbe654103aa1d2fe7e33162,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-07 18:35:49 -0400,10421, fix vpath build user config cmd zpool lib libzutil makefile use work vpath build replace srcdir instead reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10379 close 10421,,
1097,71504277ae5537007a99864e53a3b5ceb211a660,rvind Sankar <nivedita@alum.mit.edu>, 2020-06-07 17:03:12 -0400,10421, cleanup linux module kbuild file linux module built either external module compiled kernel using copy builtin source build directory slightly different two case currently compiling kernel still refers file configured zfs source tree instead copy inside kernel source tree also duplication copy builtin creates kbuild file build zfs inside kernel tree top level module makefile.in fix moving list module cflags setting new module kbuild.in used kernel kbuild infrastructure using kbuild_extmod distinguish two case within makefiles order choose appropriate include directory etc module cflags setting simplified using subdir ccflags available since 2.6.30 set top level kbuild instead individual module disabling wunused set variable removed lua zfs module variable makefile actually defined effect warning long disabled kernel makefile target_cpu definition module zfs zcommon removed replaced use config_sparc64 commit 70835c5b755e unify target_cpu handling linux spl zfs removed obj module included makefile spl zfs module directory vestigial makefiles linux removed reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10379 close 10421,,
1098,dd4bc569b9f73e8c2445bed90d82c92d98aada03,ndrea Gelmini <andrea.gelmini@gelma.net>, 2020-06-10 06:24:09 +0200,10423, fix typo correct various typo comment test reviewed ryan moeller ryan ixsystems.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 10423,,
1099,7bcb7f0840d1857370dd1f9ee0ad48f9b7939dfd,atthew Ahrens <matthew.ahrens@delphix.com>, 2020-06-09 10:41:01 -0700,10383, file incorrectly zeroed receiving incremental stream toggle background increasing recordsize property default 128kb filesystem may large block default send stream filesystem doe contain large write record instead decrease object block size 128kb split large block 128kb block allowing large block filesystem received system doe support large_blocks feature send stream generated zfs send large block preserve large block size receiving system using large write record receiving incremental send stream filesystem large block send stream flag toggled bug encountered file content incorrectly zeroed content block modified send stream lost toggled mean previous send used incremental doe use previous send use incremental doe use change commit address problem several change semantics zfs send receive incrementals rejected previous send used incremental doe use zfs receive fail error message incremental send stream requires large block match previous receive incrementals handled correctly preserving smaller 128kb block size already received file used large block sending system split zfs send without flag new send stream format flag added feature indicates correctly handle incrementals flag currently set send stream future intend incremental send stream snapshot large block use default stream also feature set ensures stream default use zfs send encounter bug mentioned received software bug implementation note facilitate accessing zpl generation number renamed restructured fill struct zpl specific info including owner generation case compressed send stream zfs send large write record written small 128kb blocksize file need decompressed written split multiple block zio pipeline recompress smaller block individually new test case send l_toggle added test case verifies get error case reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 6224 close 10383,,
1100,6722be2823b5ef39d647e440541806c72b3dbf9b,gor K <igor@dilos.org>, 2020-06-09 20:31:16 +0300,10426, zts fix add o_ashift.ksh use option action compatibility reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed igor kozhukhov igor dilos.org close 10426,,
1101,b7654bd7940618f1b02835d565e04920c8c4403f,eorge Amanakis <gamanakis@gmail.com>, 2020-06-09 13:15:08 -0400,10224, trim l2arc l2arc_evict function responsible evicting buffer reference next byte l2arc device overwritten teach function additionally trim vdev space overwritten device filled data done trim issuing new type trim  also implement trim ahead feature zfs module parameter expressed current write size trim ahead current write size minimum 64mb trimmed default disables trim l2arc put significant stress underlying storage device enable trim l2arc set  also implement trim whole cache device upon addition pool pool creation header device invalid upon importing pool onlining cache device dependent trim whole device done status monitored zpool status save trim state whole device time completion disk header restore upon l2arc rebuild zpool status correctly report whole device trim done asynchronously user export pool remove cache device trimming slow trim whole device persistent l2arc disabled may want lose cached buffer may want import pool memory pressure persistent l2arc disabled setting module parameter value greater size cache device whole device trimmed upon creation import pool reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed george amanakis gamanakis gmail.com close 9713 close 9789 close 10224,,
1102,32f26eaa70fe9e8aea79311123879f885f674d45,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2020-06-09 01:33:46 +0200,10424, move gfp flag kernel compatibility code move gfp flag kernel compat code file kmem header reviewed brian behlendorf behlendorf1 llnl.gov signed michael niewã hner mniewoehner.de close 10424,,
1103,080102a1b686a36adaec3a11a9778783462429e8,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2020-06-09 01:32:02 +0200,10422, linux 5.8 compat __vmalloc pgprot argument removed __vmalloc linux 5.8 page_kernel always detect configure define wrapper older kernel http git.kernel.org pub scm linux kernel git next linux next.git commit vmalloc.c next 20200605 reviewed brian behlendorf behlendorf1 llnl.gov authored sebastian gottschall s.gottschall wrt.com authored michael niewã hner mniewoehner.de signed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 10422,,
1104,529246df96e2838b18592ed18628d2a122828be8,awel Jakub Dawidek <pawel@dawidek.net>, 2020-06-08 13:57:22 -0700,10417, restore support kernel zfs ioctls illumos possible call ioctl function within kernel passing fkioctl flag neither freebsd linux support hurt keep around code commit dead code zc_iflags always zero restore functionality allowing pas flag function reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed pawel jakub dawidek pawel dawidek.net close 10417,,
1105,77b998fa7018801426a6e216a462c83699fa9f44,awel Jakub Dawidek <pawel@dawidek.net>, 2020-06-08 09:57:36 -0700,10415, remove redundant includes removing excessive includes take small step close compiling file userland reviewed ryan moeller ryan ixsystems.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pawel jakub dawidek pawel dawidek.net close 10415,,
1106,b2f3709c3ec0116773c9269431dc8f9f97563028,aul Dagnelie <pcd@delphix.com>, 2020-06-08 08:58:13 -0700,10405, erase final byte envblock copy envblock content currently treat normal string however functionality supposed closely emulate interacting file consequence incorrectly truncating content envblock replacing final byte buffer null character reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 10405,,
1107,c9e319faae9677aa0dddfbf9973b9e8fc3feb06c,orgen Lundman <lundman@lundman.net>, 2020-06-08 03:42:12 +0900,10400, replace sprintf snprintf strcpy strlcpy strcpy sprintf function deprecated platform care needed ensure correct size used platform miss snprintf add define sprintf likewise strlcpy biggest change adding size parameter various _impl_get function used linux yet updated reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10400,,
1108,60265072e02049be708f74cf0865eba2434a2d85,yan Moeller <ryan@iXsystems.com>, 2020-06-06 15:54:04 -0400,10409, improve compatibility consumer little picky using keywords name string constness reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed ryan moeller ryan ixsystems.com close 10409,,
1109,c1f3de18a4347c3aceee114e6681c2055e8863f8,rian Behlendorf <behlendorf1@llnl.gov>, 2020-06-06 12:51:35 -0700,10407, ztest fix spa_open enoent failure pool may imported previous pas terminated case spa_open return enoent indicate pool currently imported refactor code slightly handle case importing pool retrying spa_open ztest_import function moved ztest_run import logic split small internal helper function ztest_freeze function also moved change made reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 10407,,
1110,13dd63ff81e5c774a9ff9522e5dd008dac1fc150,laviss <leorize+oss@disroot.org>, 2020-06-05 19:22:10 -0500,10406, mkfile include missing header without header compilation fails musl libc offset_t undeclared min implictly declared reviewed brian behlendorf behlendorf1 llnl.gov signed hiáº lãª leorize disroot.org close 10406,,
1111,63761a8f1abd084dbae8a284e48c25d87ae9080e,rian Behlendorf <behlendorf1@llnl.gov>, 2020-06-05 17:21:04 -0700, , zfsvfs_setup zap_stats_t may undefined content accessed 10398 signed allan jude allanjude authored allan jude allanjude,,
1112,4547fc4e071ceb1818b3a46c3035b923e06e5390,llan Jude <allan@klarasystems.com>, 2020-06-05 20:17:02 -0400,10386, connect dataset_kstats freebsd expand freebsd spl kstats support current type move back zvol_state_t zfs_state_os_t common  kstat.zfs 0x10b.nunlinked kstat.zfs 0x10b.nunlinks kstat.zfs 0x10b.nread 150528 kstat.zfs 0x10b.reads kstat.zfs 0x10b.nwritten 134217728 kstat.zfs 0x10b.writes 1024 kstat.zfs mypool datasetname  reviewed ryan moeller ryan ixsystems.com reviewed sean eric fagan sef ixsystems.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed allan jude allan close 10386,,
1113,99b281f1ae3833826b4e3cee4126a4ea5e6de987,aul Dagnelie <pcd@delphix.com>, 2020-06-03 19:53:21 -0700,10374, fix double mutex_init bug send code possible cause kernel panic send code initializing already initialized mutex record created type data destroyed different type bypassing mutex_destroy call allocated data record tweak logic change type record created avoiding issue reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed paul dagnelie pcd delphix.com close 10374,,
1114,52998c7f36ff9e5bbeae38ac5df9b3f1608a290b,eorge Melikov <mail@gmelikov.ru>, 2020-06-04 05:46:31 +0300,10395, update wiki link new address use direct link new documentation resource reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 10395,,
1115,7da304bbcecb0e723ca81661c590ce1fc888904b,llan Jude <allanjude@klarasystems.com>, 2020-06-03 22:18:07 +0000, , zfsvfs_setup zap_stats_t may undefined content accessed signed allan jude allanjude,,
1116,c0eb5c35ef1ce3ab2cea4d98304a3edf9e61d770,yan Moeller <ryan@iXsystems.com>, 2020-06-03 13:45:12 -0400,10381, freebsd simplify zvol fix locking handle use zvol suspend reader lock ensure zilog exists needed place using zvol zilog use suspend reader lock well simplify consumer fix locking use boolean_t constant doread reviewed matt macy mmacy freebsd.org reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 10381,,
1117,a9dcfac51caa6abaff3742abd91a6a5bcaa747a5,yan Moeller <ryan@iXsystems.com>, 2020-06-03 12:52:38 -0400,10371, periodically update arc kstats freebsd need arc_adjust_zthr run periodically kstats updated comment code suggests may original intent illumos well http github.com openzfs zfs blob module zfs arc.c l4697 l4700 create thread second timer reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10371,,
1118,081de9a86d14562a5817f388c2949c423dcd1ea0,orgen Lundman <lundman@lundman.net>, 2020-06-04 01:49:32 +0900,10390, restore avl_update call related function macos kmem implementation avl_update related function function exist solaris avl code removed unused restore reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10390,,
1119,3bf3b164ee18b2897f9f8812f053704a10a1481d,atthew Macy <mmacy@freebsd.org>, 2020-05-30 12:54:57 -0700,10384, fix crypto build freebsd head update api usage reflect recent change reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10384,,
1120,9052e3d70bacdbcc51cbef8b7f0566b49d2f736b,regory-lee-bartholomew <gregory.lee.bartholomew@gmail.com>, 2020-05-29 23:16:08 -0500,10198, add bootfs.snapshot bootfs.rollback kernel parameter unlike filesystems snapshot rollback bootfs need done rescue environment patch make possible snap shot rollback bootfs simply specifying bootfs.snapshot bootfs.rollback kernel command line operation performed dracut bootfs mounted reviewed antonio russo antonio.e.russo gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed gregory bartholomew gmail.com close 10198,,
1121,3d93161b0112b0baa4f5483d03105bd77605ff8d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-29 21:14:10 -0700,10385, ztest fix ztest_run_zdb failure possible ztest killed pool exported result empty cache file valid state test validation check performed ztest_run_zdb depends pool cache file following error printed zdb bccsv tmp zloop run zpool.cache ztest zdb open tmp zloop run file directory resolve failure removing dependency cache file functionally care pool imported zdb verification pass reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 10385,,
1122,4d829ad9c128d7769a1552d3170d2a66b8c6c7d4,llen-4 <65494904+allen-4@users.noreply.github.com>, 2020-05-29 15:01:57 -0400,10382, update zfs functions.in init.d zfs share script doe perform intended action without variable set zfs_share zfs_unshare assign default value zfs_share zfs_unshare export environment variable sourcing configuration file reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed georgy yakovlev gyakovlev gentoo.org signed allen holl allen.m.holl gmail.com close 10341 close 10382,,
1123,a1ba12092744ce4da5ffb8061223cc61c9b8b4f8,½Ð°Ð± <nabijaczleweli@gmail.com>, 2020-05-21 21:53:13 +0200,844, always use lld formatting time_ts given following test program include time.h include stdio.h include stdint.h int main printf time_t sizeof time_t printf long sizeof long printf long long sizeof long long  output various x86 architecture x32 time_t x32 long x32 long long amd64 time_t amd64 long amd64 long long i386 time_t i386 long i386 long long therefore code using format time_ts produced warning x32 reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli gmail.com close 10357 close 844,,
1124,6059f3a1f6950bd2aa9724ab917f2bc01343a076,½Ð°Ð± <nabijaczleweli@gmail.com>, 2020-05-18 00:00:49 +0200,844, correctly handle x32 abi __x86_64__ _ilp32 forcibly define _lp64 reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed ahelenia ziemiaå ska nabijaczleweli gmail.com close 10357 close 844,,
1125,50ff632787876494ca4138ad3a178e97dbf9c0a5,ohn Gallagher <jgallag88@gmail.com>, 2020-05-27 17:27:28 -0700,10372, rework error handling zpool_trim manual trim run entire pool error particular device support trim suppressed change zpool_trim libzfs return error error suppressed one exception made none device support trim case error reported non zero status returned also fix wait flag work presence suppressed error particular suppressed error longer cause zpool_trim skip wait reviewed brian behlendorf behlendorf1 llnl.gov signed john gallagher john.gallagher delphix.com close 10263 close 10372,,
1126,40f96f46434633aedd1820980a4c84097cfb7ea7,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2020-05-28 00:22:19 +0000,10376, etc zfs makefile.am set initconfdir initconfdir variable defined etc zfs makefile sed code doe perform correct replacement reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed georgy yakovlev gyakovlev gentoo.org issue 10375 close 10376,,
1127,4f8b2356cc98a3cfed2da21c56789593dc8c684f,yan Moeller <ryan@iXsystems.com>, 2020-05-27 20:18:06 -0400,10380, zts retry export destroy busy take moment nfs server give mountpoint unsharing filesystem use log_must_busy retry export destroy time switching sharenfs reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 10380,,
1128,70a5fc053033c21098651c59a13ab0ac535579e9,orgen Lundman <lundman@lundman.net>, 2020-05-27 08:13:41 +0900,10366, memory leak error case function early error temporary nvlists freed reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 10366,,
1129,d1b84da8c1a69c084f04b504beefe804591bca07,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-26 16:07:50 -0700,10364, revert let zfs mount tolerate progress mount reverts commit a9cd8bf introduced segfault running zfs mount multiple time mountpoints empty segfault seen frequently mount code updated directly call mount original reason logic added described 8881 since systemd zfs share.target updated run zfs mount.server avoid issue reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov close 9560 close 10364,,
1130,ce98ed25dea9f4e03bfcf9434fde5e8b54434036,arcel Schilling <marcel.schilling@uni-luebeck.de>, 2020-05-27 00:09:25 +0200,10369, fix dead link http originally wanted point directly http group zfs discus text refers specific mailing list george melikov requested change general give user overview reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed marcel schilling uni luebeck.de close 10367 close 10369,,
1131,c946d5a91329b075fb9bda1ac703a2e85139cf1c,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-23 17:13:42 -0700,10358, zts fix cleanup update use destroy_dataset performing cleanup ensures destroy retried pool busy preventing occasional failure reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 10358,,
1132,fb822260b19921985a5312f7306b0ee0e30eb3b0,rian Atkinson <bwa@g.clemson.edu>, 2020-05-20 19:06:09 -0600,10069, gang abd type adding gang abd type allows linear scatter abds chained together single abd used avoid memory copy abds example found vdev_queue.c function reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov authored brian bwa clemson.edu authored mark maybee mmaybee cray.com signed brian atkinson batkinson lanl.gov close 10069,,
1133,501a1511aeaaf8f7b50410ef7e64e06647aa8dfb,elixdoerre <felixdoerre@users.noreply.github.com>, 2020-05-21 04:02:41 +0300,10294, mount use mount syscall directly allow zfs datasets mounted linux without relying invocation external process behavior implemented freebsd use libmount library originally considered provides functionality properly lock update etc mtab file however day etc mtab typically symlink proc self mount nothing updated therefore call mount directly avoid additional dependency required legacy behavior enabled setting environment variable may needed environment selinux enabled zfs binary doe mount permission reviewed brian behlendorf behlendorf1 llnl.gov signed felix rre felix dogcraft.de 10294,,
1134,57434abae6af23cf0b0b360882762dfae7fee555,eHackEd <DeHackEd@users.noreply.github.com>, 2020-05-20 13:07:21 -0400,10282, use boot_ncpus place max_ncpus taskq_create due hotplug support bios bug sometimes max_ncpus absurdly high value system core thread report max_ncpus 440. many thread potentially cripple system arc_prune flood example boot_ncpus number working cpu called use instead reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 10282,,
1135,de4f06c275430937026e328f48438cc799eba987,aul Dagnelie <pcd@delphix.com>, 2020-05-20 10:05:33 -0700,10204, small program convert dataset object path small program convert dataset object path reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 10204,,
1136,7b0e39030c6b887f9e9e158f3a312dbbeb127e33,yan Moeller <ryan@iXsystems.com>, 2020-05-19 19:45:25 -0400,10344, freebsd correct order argument copyin q_setquota sponsored darpa external issue http d24656 freebsd commit freebsd freebsd authored jhb jhb freebsd.org reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov ported ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 10344,,
1137,7cd723e685a83b0d5ae5e196bb90202c630fc571,eorge Amanakis <gamanakis@gmail.com>, 2020-05-19 17:24:10 -0400,10346, fix gcc 10.1 stringop truncation error expect destination strncpy call null terminated substitute memcpy reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10346,,
1138,5b090d57d4da09a3372b9566c46dfc51a13433c6,yle Evans <kevans91@users.noreply.github.com>, 2020-05-16 12:12:01 -0500,10338, freebsd return eisdir read directory arguably change internal consistency within openzfs linux implementation reject read directory eisdir unreasonable read something freebsd currently copy anything useful anyways start rejecting appropriate error reviewed ryan moeller ryan ixsystems.com reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed kyle evans kevans freebsd.org close 10338,,
1139,d2782af461c62350abb5abe439b57961c72f9cee,yan Moeller <ryan@iXsystems.com>, 2020-05-16 13:10:38 -0400,10337, fix zvol_dir use zvol_dir freebsd freebsd correct move definition file needed define dev zvol reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10337,,
1140,4d6043f2b74ded58d36d3254acd12da16023c844,olMelvin <chris.lindee+github@gmail.com>, 2020-05-14 22:51:33 -0500,10327, rpm remove old version dkm upgrade due mismatch text regex looking text preuninstall script would never run dkm remove command necessary avoid corrupting dkm data configuration increase regex specificity avoid issue reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chris lindee chris.lindee github gmail.com close 9891 close 10327,,
1141,1b9cd1a9d9ebd213df1427d38e75d3233c873bde,atthew Ahrens <mahrens@delphix.com>, 2020-05-14 20:48:29 -0700,10320, fix error handling get error saved rwa err stop processing record main thread notice receive failed error first encountered happens correctly however record dequeue next time loop reset rwa err zero allowing try process following record failed record depending type record remain may incorrectly complete receive successfully without actually processed record fix set rwa err got non zero error bug introduced 10099 improve zfs receive performance batching writes reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed matthew ahrens mahrens delphix.com close 10320,,
1142,cdcce2f0190e05127d304fcc261cfdb5284ab621,paritcher <y@paritcher.com>, 2020-05-14 22:47:14 -0500,10322, fix vn_open_invfs typo vn_open_invfs literal wrong field reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed yparitcher paritcher.com close 10322,,
1143,2ade659eb4f836931f10b69477657a054d743894,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-14 20:45:16 -0700,10332, fix abd_enter exit_critical wrapper commit fc551d7 introduced wrapper mark critical section linux implemented local_irq_save macro set flag argument saving wrapping function local variable longer set macro longer properly restored convert macro resolve issue ensure flag properly restored reviewed matthew ahrens mahrens delphix.com reviewed brian atkinson batkinson lanl.gov signed brian behlendorf behlendorf1 llnl.gov close 10332,,
1144,eeb8fae9c7dc9a116f061ee8b266f0a51fd6c8ad,orgen Lundman <lundman@lundman.net>, 2020-05-15 07:58:09 +0900,10314, upstream add missing thread_exit undo freebsd wrapper thread_create added call thread_exit reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed jorgen lundman lundman lundman.net close 10314,,
1145,8b240f14f93822129ab9fb0674fc27f6353b0a2d,atthew Ahrens <mahrens@delphix.com>, 2020-05-14 12:10:29 -0700,10319, remove unneeded member drc_err member drc_err used locally receive_read replace local variable reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10319,,
1146,c87f9586687d53bc7c3f2e8887841267a3960269,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-14 09:41:29 -0700,10323, flake8 e741 variable name warning update zts report.py script conform flake8 e741 rule variable named hard read letter letter easily confused letter number easily confused http rule e741.html reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10323,,
1147,e1fcd940e7a550e0631fb7e80c5df6d84c446d28,ohn Wren Kennedy <john.kennedy@delphix.com>, 2020-05-14 10:39:47 -0600,10324, zts deletes zfstest log file cleanup routine test attempt remove temporary file vdev_ vdev_ undefined result file current working directory var tmp test_results current get removed instead includes complete log file test reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed george amanakis gamanakis gmail.com reviewed ryan moeller ryan ixsystems.com signed john kennedy john.kennedy delphix.com close 10324,,
1148,41035a049643ff7083a6cb6cd43b8eb70a7d18a1,ohn Poduska <jpoduska@datto.com>, 2020-05-13 13:54:27 -0400,10291, resilver restarts unnecessarily encounter error resilver finish called hopefully excise dtl_missing amongst thing error resilver tracked dtl_scrub spelled block comment vdev.c dtl_scrub core used pool online whole resilver state tracked flag get set scan initialized unfortunately flag get cleared right get called error scan dtl_missing never get excised resilver continually restart fix simply move clearing flag call addition pool imported already scn_errors change restart resilver immediately instead rest scan restarting beginning hand scn_errors import error encountered far flag safely set test added verify resilver doe restart relevant dtl available reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed john poduska jpoduska datto.com close 10291,,
1149,b29e31d80d6cb78dbd889e9b529333944b4c3ba1,J Jordan <alex@strugee.net>, 2020-05-04 04:00:59 -0400,10288, fix outdated comment header reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jordan alex strugee.net close 10288,,
1150,5a04b177175607d1ac2ab7d43c80ce1a033584dc,J Jordan <alex@strugee.net>, 2020-05-04 03:49:33 -0400,10288, fix arcstat match version turn illumos manpage originates written original perl version utility version openzfs tree version originates python rewrite done freenas fix manpage match actually ship fix typo process reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jordan alex strugee.net close 10288,,
1151,ac806a25591d5419f819405199b1962b84bad60c,J Jordan <alex@strugee.net>, 2020-05-03 22:23:46 -0400,10288, import arcstat manpage illumos move section section consistency imported illumos commit f34d737f reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jordan alex strugee.net close 10288,,
1152,2b21da4f763a076e5ea16cf758849503126c5d6c,J Jordan <alex@strugee.net>, 2020-05-07 17:49:00 -0400,10288, fix inconsistent capitalization arcstat reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jordan alex strugee.net close 10288,,
1153,7fcf82451c4b75afe327c77683f66bf0c6396a48,ichard Laager <rlaager@wiktel.com>, 2020-05-10 14:26:08 -0500,10307, change zfsunlock better busybox compatibility turn two version busybox least ubuntu 18.04. busybox static package installed get busybox support head busybox initramfs either way awk change also make compatible gnu somehow end initramfs environment reviewed tom caputi tcaputi datto.com reviewed andrey prokopenko job terem.fr signed richard laager rlaager wiktel.com close 10307,,
1154,fc551d7efbbf26cc1671ddb51f2f0df57ec53ee7,rian Atkinson <bwa@g.clemson.edu>, 2020-05-10 13:23:52 -0600,10293, combine independent abd code common source file reorganizing abd code base independent abd code placed common abd.c file dependent abd code left abd source file source file renamed abd_os independent abd code module zfs abd.c dependent code module linux zfs abd_os.c module freebsd zfs abd_os.c reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brian atkinson batkinson lanl.gov close 10293,,
1155,bd95f00d4b6aa185bf508f12d2cdbfbb2350b80e,etros Koutoupis <pkoutoupis@users.noreply.github.com>, 2020-05-09 12:17:08 -0500,10304, fixed ldadd library link makefiles cross compilation build building native dev system issue cross compiling target system linker error observed way avoid error adjusting makefile.am various component add library dependency reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed petros koutoupis petros close 10304,,
1156,d775c86dd4ced233ac0636607706cc5a08bcb923,rian Behlendorf <behlendorf1@llnl.gov>, 2020-05-08 13:50:02 -0700,10305, zts recursively destroying dataset possible dataset volume open unrelated process like blkid use destroy_dataset retry occurs reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 10305,,
1157,1cc635a2dd0379181950a1458255ea8ae8b9c1e0,ndrey Prokopenko <job@terem.fr>, 2020-05-03 00:43:42 -0500,10027, unlock encrypted root partition ssh commit add new feature debian based distribution unlock encrypted root partition ssh feature handy headless vps cloud server use feature need install dropbear initramfs package reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed andrey prokopenko job terem.fr signed richard laager rlaager wiktel.com close 10027,,
1158,746d22ee02d2617ee982f1620b06f882b924ce8e,ichard Laager <rlaager@wiktel.com>, 2020-05-02 18:16:46 -0500,10027, rework file listed markdown format really use much markdown added fair amount formatting reordered reworded thing improve flow text reviewed andrey prokopenko job terem.fr reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed richard laager rlaager wiktel.com close 10027,,
1159,4cfd339ce4ae1fb199fad04ff826e67b221cfb41,ichard Laager <rlaager@wiktel.com>, 2020-05-02 18:46:46 -0500,10027, cleanup contrib initramfs automake initramfs hook script depend makefile way substitution code changed update brings line etc init.d modified match example automake doc initramfs hook script cleaning match etc init.d mix subdirs recursion custom install rule file subdirectory duplicated hook script subdirectory everything subdirs fixed substitution hook zfs reviewed andrey prokopenko job terem.fr reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed richard laager rlaager wiktel.com close 10027,,
1160,657fd33bcff17e44ad55dffdf294d7c107b4bf5d,eorge Amanakis <gamanakis@gmail.com>, 2020-05-07 19:34:03 -0400,10228, improvement persistent l2arc functional change implement refcounts log block aligned size cache device along two corresponding arcstats refcounts reflected header device provide valuable information whether log block accounted correctly dynamically adjusted log block committed evicted zdb also information device header compare corresponding value reported emulates l2arc_rebuild refcounts saved device header report higher value zdb exit error feature work correctly active writes device also employed test persistent l2arc extend structure cache device header adding two new variable mirroring refcounts existing variable preserve backward compatibility term persistent l2arc new arcstat refcount l2ad_lb_asize reflect total aligned size log block device also reflected header cache device dh_lb_asize new arcstat refcount l2ad_lb_count reflect total number l2arc log block present cache device also reflected header cache device dh_lb_count amount committed log entry log block device header valid update device header facilitate trimming whole device case trim l2arc implemented improve loop protection l2arc_rebuild using starting offset payload log block instead starting offset log block zio fails restore lbps array header device previous state l2arc_rebuild end rebuild process without restoring l2arc log block arc without error mean lbps array header pointing non existent invalid log block reset device header case l2arc_rebuild change zfs_dbgmsg message making user visible zpool history command non functional change make first test persistent l2arc use zdb lll increase coverage zdb.c rename psize asize referring log block since l2arc_set_psize store vdev aligned size log block also rename dh_log_entries make clear mirror added comment change fix inaccurate comment example add asserts end l2arc_evict reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10228,,
1161,108a454a4604df6ea3be817f3cf076726df2c67a,aul Dagnelie <pcd@delphix.com>, 2020-05-07 09:36:33 -0700,10009, add support boot environment data stored label modern bootloaders leverage data stored root filesystem enable powerful feature grub specifically grubenv file store large amount configuration data read written boot time normal operation allows sysadmins configure useful feature like automated failover failed boot attempt unfortunately due copy write nature zfs standard behavior tool handle writing zfs file safely boot time need alternative way store data allows bootloader make change data work similar work done illumos enable similar functionality freebsd bootloader patch different data stored raw grubenv file file store arbitrary variable value scripting provided grub powerful enough special structure required implement advanced behavior repurpose second padding area label store grubenv file protected embedded checksum add two ioctls get set data libzfs_core libzfs function access easily direct command line interface function added directly bootloader utility reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 10009,,
1162,a36bad17596e5cbc472a0d1fecb200a6b2e3530d,hilip Pokorny <ppokorny@penguincomputing.com>, 2020-05-06 17:17:38 -0700,10247, fix column width calculation issue certain terminal width reported terminal width signed variable width set negative number assigned unsigned column width becoming huge number add comment change logic better explain happening reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed philip pokorny ppokorny mindspring.com close 10247,,
1163,1b664952ae34d28c0408c20947f8aa5420c4ab63,eorge Amanakis <gamanakis@gmail.com>, 2020-05-06 13:32:28 -0400,10283, enable splitting mirror indirect vdevs top level vdev removed pool converted indirect vdev splitting mirrored pool possible zpool split patch enables handling indirect vdevs splitting pool zpool split reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 10283,,
1164,ddc7a2dd3b099c280b4f3ed978f16fa6bd7012c0,yan Moeller <ryan@iXsystems.com>, 2020-05-05 12:36:41 -0400,10292, taskq leak freebsd add missing taskq_destroy call reported jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 10292,,
1165,3e5d41d807b03e5f43afe3d859735b845c905f5f,laviss <leorize+oss@disroot.org>, 2020-05-04 22:25:48 +0000,10281, config kernel inode time initialize timespec usage variable uninitialized trigger werror wuninitialized compiled clang linux kernel 5.6 leading build system believe function declared commit initializes variable suppress warning fix build kernel 5.6 clang reviewed brian behlendorf behlendorf1 llnl.gov signed hiáº lãª leorize disroot.org close 10279 close 10281,,
1166,6f3e1a48287f3d93a78668cb24cf4a2fb12991cd,yan Moeller <ryan@iXsystems.com>, 2020-05-04 18:10:41 -0400,10270, avoid geom topology lock recursion autoexpanding pool step reproduce problem mdconfig swap gpart create gpt md0 gpart add freebsd zfs md0 zpool create autoexpand foo md0p1 gpart resize md0 authored pjd pjd freebsd.org freebsd commit freebsd freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org ported ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 10270,,
1167,639dfeb83124105615041c45b4574703803ae781,yan Moeller <ryan@iXsystems.com>, 2020-05-04 18:07:04 -0400,10250, update freebsd spl atomics sync following change freebsd zfs add emulation atomic_swap_64 atomic_load_64 bit platform provide bit atomic operation zfs requires either userland emulate operation platform using mutex entirely correct efficient besides load plain load torn value possible nevertheless emulation seems work definition work change add atomic_swap_64 already used zfs code atomic_load_64 used prevent torn read authored avg avg freebsd.org freebsd commit freebsd freebsd cleanup illumos compatibility atomics atomic_cas_32 implemented using platform ditto atomic_cas_64 platform exception sparc64 provides atomic_cas_32 atomic_cas_64 slightly inefficient fcmpset report whether operation updated target information needed nevertheless code maintain add new platform also operation done inline opposed function call implemented using platform provide casptr cas32 atomic_or_8 atomic_or_8_nv completely removed user atomic_mtx used emulate bit atomics platform lack defined platform result platform specific file lost code exception i386 compat contrib code provides bit atomics userland use code assumes availability cmpxchg8b instruction freebsd doe assumption i386 userland doe provide bit atomics hopefully fixed authored avg avg freebsd.org freebsd commit freebsd freebsd emulate illumos membar_producer membar_producer supposed store store barrier also code freebsd ported illumos membar_producer used regular store regular memory respect caching primitive store store barrier closest provides load store store barrier previously membar_producer empty function call bit arm bit powerpc riscv mips variant think inadequate platform amd64 arm64 i386 powerpc64 sparc64 membar_producer implemented using stronger primitive required store store barrier respect regular memory access example used sfence amd64 lock nop i386 despite tso powerpc64 use recommended lwsync instead eieio sparc64 freebsd tso mode arm64 aarch64 use dmb instead dmb ish sure improvement actually change drop aarch64 amd64 powerpc64 sparc64 required atomic operation either direct light weight mapping freebsd native atomic operation discussed kib authored avg avg freebsd.org freebsd commit freebsd freebsd fix r353340 assume fcmpset strong semantics fcmpset two kind semantics weak strong practical purpose strong semantics mean fcmpset fails reported current value always different expected value weak semantics mean reported current value may expected value even though fcmpset failed called sporadic failure originally implemented atomic_cas expecting strong semantics many platform actually weak one reported pkubaj confirmed issue discussed kib mjg authored avg avg freebsd.org freebsd commit freebsd freebsd powerpc mips implement bit kernel emulation atomic64 operation lock based emulation bit atomics kernel use split earlier patch jhibbits needed unblock future improvement reduce need locking bit platform using atomic update implementation allows future integration userland atomic64 implies going sysarch every use current status quo userland locking may best submitted jhibbits original patch kevans mips bit reviewed jhibbits jeff kevans authored bdragon bdragon freebsd.org differential revision http d22976 freebsd commit freebsd freebsd remove sparc64 kernel support remove sparc64 specific file remove sparc64 ifdefs removee indireeect sparc64 ifdefs authored imp imp freebsd.org freebsd commit freebsd freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org ported ryan moeller ryan ixsystems.com signed ryan moeller ryan ixsystems.com close 10250,,
1168,6ed4391da97a1d183dbabcbe667026deb6678612,yan Moeller <ryan@iXsystems.com>, 2020-04-30 20:50:16 -0400,10271, zts count cksum vdevs verify_pool verify_pool function detect checksum error vdev checking root pool accumulate error vdevs obtain correct count reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10271,,
1169,154e48eac904dc8e4d46c8f74f0ce50dd0e94697,yan Moeller <ryan@iXsystems.com>, 2020-04-30 20:48:58 -0400,10269, zdb fix ignored zfs_arc_max tuning running zdb disk show warning zfs_arc_max ignored zdb set zfs_arc_max zfs_arc_min cause value ignored set zfs_arc_min bare minimum zdb zfs_arc_max reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allanjude freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 10269,,
1170,0aeb0bed6fe12afa9c3c9c5cab0fb287f768d5d5,aul B. Henson <henson@acm.org>, 2019-12-06 05:35:38 +0000,10266, openzfs 6765 comment accurately reflect delete permission acls authored kevin crowe kevin.crowe nexenta.com reviewed gordon ross gwr nexenta.com reviewed yuri pankov yuri.pankov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported paul henson henson acm.org porting note comment updated openzfs issue http www.illumos.org issue 6765 openzfs commit http github.com openzfs openzfs commit da412744bc close 10266,,
1171,235a85657686b678a293e33f2e77622e6b8db1e6,aul B. Henson <henson@acm.org>, 2019-12-06 05:30:35 +0000,10266, openzfs 6762 posix write imply delete_child directory additional consideration authored kevin crowe kevin.crowe nexenta.com reviewed gordon ross gwr nexenta.com reviewed yuri pankov yuri.pankov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported paul henson henson acm.org openzfs issue http www.illumos.org issue 6762 openzfs commit http github.com openzfs openzfs commit 1eb4e906ec close 10266,,
1172,99495ba6abbf0bb726324d03212c6f5ffa00043e,aul B. Henson <henson@acm.org>, 2019-12-05 05:58:12 +0000,10266, openzfs 8984 fix 6764 break acl inheritance authored dominik hassler hadfl omniosce.org reviewed sam zaydel szaydel reviewed paul henson henson acm.org reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved matthew ahrens mahrens delphix.com ported paul henson henson acm.org openzfs issue http www.illumos.org issue 8984 openzfs commit http github.com openzfs openzfs commit e9bacc6d1a close 10266,,
1173,5a2f527d4b94ce296538f3308cb348a57254ab4e,aul B. Henson <henson@acm.org>, 2019-12-05 04:30:02 +0000,10266, openzfs 6764 zfs issue inheritance flag chmod aclmode passthrough authored albert lee trisk nexenta.com reviewed gordon ross gwr nexenta.com reviewed yuri pankov yuri.pankov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported paul henson henson acm.org openzfs issue http www.illumos.org issue 6764 openzfs commit http github.com openzfs openzfs commit de0f1ddb59 close 10266,,
1174,7bf3e1fa0f2f49f0e55bbe4eb5334addd5395570,aul B. Henson <henson@acm.org>, 2019-12-05 00:45:14 +0000,10266, openzfs 3254 add support zfs aclmode restricted authored paul henson henson acm.org reviewed albert lee trisk nexenta.com reviewed gordon ross gwr nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported paul henson henson acm.org openzfs issue http www.illumos.org issue 3254 openzfs commit http github.com openzfs openzfs commit 71dbfc287c close 10266,,
1175,a1af567bb6961d3ad5dcd18747979be71d9991fe,aul B. Henson <henson@acm.org>, 2019-12-05 00:35:18 +0000,10266, openzfs 742 resurrect zfs aclmode property openzfs 664 umask masking deny acl entry openzfs 279 bug new acl post psarc 2010 029 semantics porting note updated zfs_acl_chmod take boolean_t isdir first parameter rather zfsvfs_t zfsvfs zfs man page change mixed zfs new zfsprops man page reviewed aram hvrneanu aram nexenta.com reviewed gordon ross gwr nexenta.com reviewed robert gordon rbg openrbg.com reviewed mark.maybee oracle.com reviewed brian behlendorf behlendorf1 llnl.gov approved garrett amore garrett nexenta.com ported paul henson henson acm.org openzfs issue http www.illumos.org issue 742 openzfs issue http www.illumos.org issue 664 openzfs issue http www.illumos.org issue 279 openzfs commit http github.com openzfs openzfs commit a3c49ce110 close 10266,,
1176,d7d4678fe65689af7f6335c7f84a190139bcbcdf,dam D. Moss <c@yotes.com>, 2020-04-29 17:33:33 -0700,10265, fix regression caused c14ca14 zfs load key command broken keyformat passphrase use correct output var stdin interactive terminal reviewed brian behlendorf behlendorf1 llnl.gov signed adam moss yotes.com close 10264 close 10265,,
1177,ab16c87e5560b5d8554386cfaded72e7f61465b8,rian Behlendorf <behlendorf1@llnl.gov>, 2020-04-29 17:30:13 -0700,9967, add longjmp support thumb thumb kernel used longjmp must implemented using thumb instruction set module lua setjmp setjmp_arm.s original patch jsrlabs reviewed awehrfritz signed brian behlendorf behlendorf1 llnl.gov close 7408 close 9957 close 9967,,
1178,c14ca1456e6e7b2fdfd7578207c7f1866c852a77,ason King <jasonbking@users.noreply.github.com>, 2020-04-28 12:55:18 -0500,10218, support custom uri scheme keylocation property every platform preferred method implementing uri scheme beyond currently supported file scheme e.g http freebsd would likely use libfetch linux distros illumos would probably use libcurl etc would helpful libzfs extended support additional scheme simple manner table scheme pair added libzfs_crypto.c existing function libzfs_crypto.c key format scheme uri string extracted matching handler located aforementioned table returning error matching handler found handler function invoked retrieve key material format specified keyformat property key loaded handler return error abort key loading process reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed jason king jason.king joyent.com close 10218,,
1179,89a6610ed053359d2299715e519d06d2ca5c053f,ara Hartse <sara.hartse@delphix.com>, 2020-04-28 09:56:31 -0700,10243, add sanity testing zdb input args reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed sara hartse sara.hartse delphix.com close 10243,,
1180,fa254605385ca8db5ce8594018b044e7e3091b5f,eorge Amanakis <gamanakis@gmail.com>, 2020-04-28 12:53:45 -0400,10246, add missing otherwise running true mounting unmounting encrypted dataset panic call trace dump_stack 0x66 0x90 slab_err 0xcd 0xf2 __kmalloc 0x174 0x260 0x158 0x240 0x1d 0x115 shutdown_cache 0x11 0x140 0x210 0x230 0x122 0x3e0 spl 0x11 0x20 zfs spa_fini 0x4b 0x120 zfs zfs_kmod_fini 0x6b 0xa0 zfs _fini 0xa 0x68c zfs 0x19c 0x2b0 do_syscall_64 0x5b 0x1a0 0x44 0xa9 reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed george amanakis gamanakis gmail.com close 10246,,
1181,a8085184d6483d9d621c0c837718630af9b776f3,yan Moeller <ryan@iXsystems.com>, 2020-04-28 12:14:30 -0400,10252, fix zlib leak freebsd zlib_inflateend accidentally wrapper inflateinit instead inflateend hilarity ensues fix typo free memory instead allocating reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed matthew ahrens mahrens delphix.com signed ryan moeller ryan ixsystems.com close 10225 close 10252,,
1182,47c9299fcc9e5fb91d0b1636bfacc03bd3e98439,lex <alex@stty.io>, 2020-04-25 10:04:34 +0800,10196, zfs_create round volume size multiple round volume size requested zfs create size next higher multiple volblocksize update man page add test verify new behavior reviewed brian behlendorf behlendorf1 llnl.gov reported puffi puffi signed alex john alex stty.io close 8541 close 10196,,
1183,aa646323dbb61a2c3224b03c17732bd19fc50758,om Caputi <tcaputi@datto.com>, 2020-04-24 22:00:32 -0400,10239, fix missing ivset guid resumed raw base recv patch corrects bug introduced 61152d1069 resuming raw base receive dmu_recv code always set drc drc_fromsnapobj object previous snapshot incrementals correct base sends left presence eventually allows check run determines whether incoming stream previous snapshot matching ivset guids check fails becuase meant run previous snapshot doe fail user receives error stating incoming stream problem outlined erratum patch corrects issue simply ensuring drc drc_fromsnapobj left base receives reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tom caputi tcaputi datto.com close 10234 close 10239,,
1184,6de3e59bdd70fc9db5d3ef2549a49264845c937e,rian Behlendorf <behlendorf1@llnl.gov>, 2020-04-23 15:54:38 -0700,10244, fix unitialized variable zstream redup command fix uninitialized variable zstream redup command compiler may determine stream_offset variable uninitialized rdt_lookup exit path set never happen practice documented assert initialize regardless resolve warning reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 10241 close 10244,,
1185,5d4ed9614fad523fafd6e8a7705847b624a005fe,atthew Ahrens <mahrens@delphix.com>, 2020-04-23 15:53:14 -0700,10236, change libspl list member name match kernel aid debugging use infrastructure walk zfs list_t kernel module userland library e.g debugging ztest reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10236,,
1186,196bee4cfd576fb15baa6a64ad6501c594f45497,atthew Ahrens <mahrens@delphix.com>, 2020-04-23 10:06:57 -0700,10212, remove deduplicated send receive code deduplicated send stream i.e zfs send zfs receive stream deprecated deduplicated send stream received first converting non deduplicated zstream redup command commit remove code sending receiving deduplicated send stream zfs send print warning ignore flag generate regular non deduplicated send stream zfs receive deduplicated send stream print error message fail resulting code simplification especially kernel support receiving dedup stream help enable future performance enhancement several new test added leverage zstream redup reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com issue 7887 issue 10117 issue 10156 close 10212,,
1187,70e5ad31f6425868b8a173bbc2be4ef08a8d949b,oao Carlos Mendes Luis <dioni21@users.noreply.github.com>, 2020-04-22 14:40:34 -0300,10219, fix leak detected asan commit fix bunch missing free call a10d50f99 reviewed brian behlendorf behlendorf1 llnl.gov signed joã carlos mendes luã jonny jonny.eng.br close 10219,,
1188,32d805c3e2888cbb71956454ced38b4882c27c00,atthew Ahrens <mahrens@delphix.com>, 2020-04-22 10:26:56 -0700,10213, use struct organize metaslab group allocator field metaslab group one per top level vdev several default metaslab group allocator allocator metaslab prefers allocate primary allocator perform allocation concurrently allocator addition primary metaslab several field need tracked separately allocator currently stored several array array indexed allocator number change organizes metaslab group allocator specific field new struct need one array indexed allocator number contains  reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10213,,
1189,a84c92f93364116b5e7f4685eb6d665526251a51,iklas Haas <github-c6e1c8@haasn.xyz>, 2020-04-21 18:29:31 +0200,10227, attempt trimming hole vdevs zpools containing hole vdevs e.g removed log device zpool trim presumably zpool initialize command attempt calling respective function hole fails real vdev avoid removing hole vdevs reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed niklas haas git haasn.xyz close 10227,,
1190,1f043c8be1bf575bae1088f150cf17b35184ad12,atthew Ahrens <mahrens@delphix.com>, 2020-04-20 10:12:48 -0700,10216, fix zfs send progress reporting progress send supposed reported zfs send work creating new user thread pthread_create doe ioctls check much progress made ioctl find specified send since may multiple concurrent sends system ioctl also check specified send started current process linux different thread process represented different struct task_struct confusingly different pid check two thread process need check struct task_struct group_leader used correctly inadvertently changed 30af21b02569 redacted send simply check current struct task_struct one started send commit change code back checking send started struct task_struct group_leader calling thread reviewed ryan moeller ryan ixsystems.com reviewed chris wedgwood f00f.org reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10215 close 10216,,
1191,c614fd6e12c0fe2636a82b341e9ab9d150ee3c8a,atthew Macy <mmacy@freebsd.org>, 2020-04-17 09:30:26 -0700,10205, use new freebsd api largely eliminate object locking propagate change head mostly eliminate object locking reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed matt macy mmacy freebsd.org close 10205,,
1192,9249f1272ec08316f4482cba145b42ba935d3b02,eorge Amanakis <gamanakis@gmail.com>, 2020-04-17 12:27:40 -0400,10210, persistent l2arc minor fix minor fix persistent l2arc improving code readability fixing typo zdb.c byte swapping log block also improves test giving time retrieve log block cache device reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed george amanakis gamanakis gmail.com close 10210,,
1193,a7929f31373497590f5884efbc7cde29104e94d5,yan Moeller <ryan@iXsystems.com>, 2020-04-15 14:14:47 -0400,10203, update freebsd tunables remove obsolete legacy compat rename misnamed add missing tunables freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10203,,
1194,af99094dee7b47d32678b271ca90563e9b89bb78,yan Moeller <ryan@iXsystems.com>, 2020-04-15 12:21:40 -0400,10206, delete freebsd.run distclean add comment file empty comment removed freebsd specific test added reviewed george melikov mail gmelikov.ru reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10206,,
1195,813c8564ee756ad0a51cd5a67750b97292611efe,yan Moeller <ryan@iXsystems.com>, 2020-04-14 16:18:23 -0400,10194, fix sc2086 note zpool.d smart cmd zpool zpool.d smart note double quote prevent globbing word splitting sc2086 reported latest shellcheck freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10194,,
1196,6b1139e82c0a96c267752b437a3b14f6787535ec,laviss <alaviss@users.noreply.github.com>, 2020-04-14 18:47:40 +0000,10195, sys mnttab.h include sys stat.h stat64 musl libc defined stat64 macro cause build fail upon compiling linux getmntany.c due conflict forward declaration implementation commit fix including sys stat.h sys mnttab.h directly reviewed brian behlendorf behlendorf1 llnl.gov signed hiáº lãª leorize disroot.org close 10195,,
1197,9f0a21e6411aa0bac23fba0ddb220342a48c7cc7,atthew Macy <mmacy@freebsd.org>, 2020-04-14 11:36:28 -0700,8987, add freebsd support openzfs add freebsd platform code openzfs repository commit source compiled tested freebsd subsequent commits required compile freebsd linux additionally must pas zfs test suite freebsd run commit 1230 test pas freebsd unexpected failure reviewed sean eric fagan sef ixsystems.com reviewed jorgen lundman lundman lundman.net reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov authored ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 898 close 8987,,
1198,75c62019f3938e7bc81becb4fb2d5b5eb523e79a,oao Carlos Mendes Luis <dioni21@users.noreply.github.com>, 2020-04-13 14:54:41 -0300,10193, fix allocation error detected using asan test done memory allocation could return function without freeing since need allocation yet postpone add missing free buffer longer needed reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed joã carlos mendes luã jonny jonny.eng.br close 10193,,
1199,791e480c6ac7a3e33adc5270b3fc99015f9f0c15,rian Behlendorf <behlendorf1@llnl.gov>, 2020-04-13 10:51:44 -0700,10189, disable user space reference tracking memory cpu cost reference count tracking current implementation significant reason always disabled default kmods apply default user space ztest always incur performance penalty intention enable default ztest code optimized since expect point provide fuse implementation want enabled default libzpool reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 10189,,
1200,c602b35cf7091e5afd192c9a943433379e21f567,lex <alex@stty.io>, 2020-04-14 01:50:41 +0800,10172, zts fix change testcase cache_010_neg commit 379ca9c removed requirement aux device block device test case cache_010_neg updated making fail consistently change change test check cache device _can_ anything present block interface testcase renamed cache_010_pos exception known failure removed test runner reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reported richard elling richard.elling signed alex john alex stty.io close 10172,,
1201,20f287855a61a64a90e01edfd551ff28f7abdb5c,atthew Ahrens <mahrens@delphix.com>, 2020-04-10 21:14:01 -0700,10184, zvol_write use improve performance writes zvols using instead reduces lock contention first block dnode object also reduces amount cpu needed benefit highest multi threaded async writes i.e writes call zil_commit reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 10184,,
1202,808084825492721571d617e6c670dcf307ddffcd,rian Behlendorf <behlendorf1@llnl.gov>, 2020-04-10 21:10:09 -0700,10192, minor zstream redup command fix fix uninitialized variable zstream redup command rdt.ddt_count variable uninitialized allocated stack globally initialize reported gcc compiling debugging enabled zstream_redup.c 157 error rdt.ddt_count may used uninitialized function werror maybe uninitialized remove cmd zstreamdump .gitignore file longer needed zstreamdump command script reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10192,,
1203,c618f87cd2e96438468a391246d63ba1803f35c8,atthew Ahrens <mahrens@delphix.com>, 2020-04-10 10:39:55 -0700,10156, add zstream redup command convert deduplicated send stream deduplicated send receive deprecated ease migration new dedup send world commit add zstream redup utility convert deduplicated send stream normal stream continue received indefinitely new zstream command also replaces functionality zstreamdump way zstream dump subcommand zstreamdump command replaced shell script invokes zstream dump way zstream redup work hood read send stream build hash table map guid object offset file_offset whenever see write record add new entry hash table indicates stream file find write record block key drr_toguid drr_object drr_offset entry write_byref pas unchanged except running checksum recalculated write_byref record change write record find referenced write record looking hash table record key drr_refguid drr_refobject drr_refoffset reading record header payload specified offset stream file stream pipe found write record replaces write_byref record drr_toguid drr_object drr_offset field changed write_byref i.e writing logical block data supplied previous write record algorithm requires memory proportional number write record zfs send size per write record relatively low byte vs. zfs send 1tb send stream 8kb block recordsize would use around 5gb ram redup reviewed jorgen lundman lundman lundman.net reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10124 close 10156,,
1204,77f6826b83b7e27f0996f6d192202c36f65e41fd,eorge Amanakis <gamanakis@gmail.com>, 2020-04-10 13:33:35 -0400,9582, persistent l2arc commit make l2arc persistent across reboots implement light weight persistent l2arc metadata structure allows l2arc content recovered reboot significantly eas impact reboot read performance system large cache reviewed matthew ahrens mahrens delphix.com reviewed george wilson gwilson delphix.com reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov authored saso kiselkov skiselkov gmail.com authored jorgen lundman lundman lundman.net authored george amanakis gamanakis gmail.com ported yuxuan shui yshuiv7 gmail.com signed george amanakis gamanakis gmail.com close 925 close 1823 close 2672 close 3744 close 9582,,
1205,36a6e2335c45212f2609269bcee3004908ac6bcb,yan Moeller <ryan@iXsystems.com>, 2020-04-09 18:39:48 -0400,10158, ignore zfs_arc_max allmem set arc_c_min arc_c_max zfs_arc_min set lower default allmem zfs_arc_max also set lower add warning message tunables ignored reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10157 close 10158,,
1206,8b27e08ed8c6d854ee3c398773407dfac24d7578,atthew Macy <mmacy@freebsd.org>, 2020-04-09 09:59:31 -0700,10178, add separate field indicating spa middle split default possible open device already owned active vdev necessary make exception vdev split freebsd platform code make exception spa_is splitting set true reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 10178,,
1207,68dde63d138882860109178f4ab0b7b1b1bb3cfd,rian Behlendorf <behlendorf1@llnl.gov>, 2020-04-09 09:16:46 -0700,10187, linux 5.7 compat blk_alloc_queue commit http github.com torvalds linux commit 3d745ea5 simplified blk_alloc_queue interface updating take request queue argument add wrapper function accepts new argument internally available interface minor change include increasing linux maximum 5.6 5.6 released bumped 5.7 release yet finalized still subject change added local struct zvol_state_os zso variable zvol_alloc reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10181 close 10187,,
1208,01c4f2bf2933319e876e8f695e97d0719a9db0ed,atthew Macy <mmacy@freebsd.org>, 2020-04-08 10:30:27 -0700,10177, use freebsd avoid potential deadlock added prevent possible deadlock following comment freebsd explain issue comment describing  helper function perform requested uiomove operation using held page uio_iov .iov_base buffer instead copyin copyout access page instead iov_base prevents page fault could occur due pmap_collect invalidating mapping created pageout daemon page laundry object cleanup revoking write access page mapping  filesystems specified mntk_no_iopf shall use instead plain uiomove  used vn_io_fault following motivation  vn_io_fault wrapper around vn_read vn_write prevent following deadlock  assume thread read vnode vp1 userspace buffer buf1 backed page vnode vp2 page buf1 currently resident system end call chain vn_read vop_read vp1 uiomove page fault vm_fault buf1 vp2 vop_getpages vp2 establishes lock order vp1 vn_lock vp2 vn_lock time thread read vnode vp2 buffer buf2 backed page vnode vp1 page buf2 resident get reversed order vp2 vn_lock vp1 vn_lock  prevent lock order reversal deadlock vn_io_fault doe allow page fault happen vop_read vop_write instead first try whole range pagefaults disabled page buffer resident mapped vop succeed ignoring genuine filesystem error otherwise get back efault vn_io_fault fall back chunk page chunk prefaulted held using  filesystems using deadlock avoidance scheme use array held page uio saved curthread td_ma instead uiomove helper function convert uiomove request td_ma array  since vnode lock cover whole anymore rangelocks make current request atomic respect truncation  reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10177,,
1209,7e3df9db128722143734a9459771365ea19c1c40,yan Moeller <ryan@iXsystems.com>, 2020-04-07 13:06:22 -0400,10179, finish refactoring linux freebsd different parameter tunable proc handler prevented freebsd implementing macro complete sharing declaration create per platform definition parameter list declaration wired discovered incorrect scope prefix spa_slop_shift fixed reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10179,,
1210,2a15c6aab40e854808f2d910ee998cd405769dfa,lex <alex@stty.io>, 2020-04-08 01:04:40 +0800,10173, libzfs_pool remove unused check enotblk commit 379ca9c removed check aux device block device also changing zfs_ioctl hdl ... zfs_ioctl hdl ... never set enotblk change remove dangling check enotblk never trigger reviewed brian behlendorf behlendorf1 llnl.gov reported richard elling richard.elling signed alex john alex stty.io close 10173,,
1211,4a21ec056016bb5738721543af933a8eed2308fb,yan Moeller <ryan@iXsystems.com>, 2020-04-06 19:07:35 -0400,10170, zts fix non portable date format delegate test use date generate snapshot name using format get nanosecond resolution since multiple snapshot may taken second portable cause test fail freebsd since purpose timestamps serve create unique name simply use random instead reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10170,,
1212,5a42ef04fd390dc96fbbf31bc9f3d05695998211,aul Dagnelie <pcd@delphix.com>, 2020-04-01 10:02:06 -0700,9707, add zfs wait command add mechanism wait delete queue drain redacted send recv many workflow involve deleting file contain sensitive data way zfs handle file deletion snapshot taken quickly operation sometimes still contain file question especially file large result issue redacted send recv user expect deleted file redacted send stream appear clone change duplicate much zpool wait related logic zfs wait command used wait internal deleteq drained additional wait activity may added future reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed paul dagnelie pcd delphix.com close 9707,,
1213,c9e3efdb3a6111b9795becc6594b3c52ba004522,abio Scaccabarozzi <fsvm88@gmail.com>, 2020-04-01 18:48:54 +0200,10148, bugfix fix uio partial copy zfs_write loop continues next iteration without accounting partial copy occurring uiomove_iov copy_from_user return non zero status result zfs accessing past end object ... kernel log write failing account partial copy update uio struct returning efault leave comment explaining reason done reviewed brian behlendorf behlendorf1 llnl.gov reviewed ilbsmart wgqimut gmail.com signed fabio scaccabarozzi fsvm88 gmail.com close 8673 close 10148,,
1214,0929c4de398606f8305057ca540cf577e6771c30,atthew Ahrens <mahrens@delphix.com>, 2020-03-31 10:50:44 -0700,10163, improve zvol sync write performance using taskq summary prior change sync writes zvol processed serially commit make zvols process concurrently outstanding sync writes parallel similar read async writes already handled result throughput sync writes tripled background write come zvol e.g iscsi processed calling zvol_request initiate operation zfs expected later call bio_end_io operation completes possibly different thread limited number thread available call zvol_request one one per iscsi client unless using therefore ensure good performance latency zvol_request important many operation zvol processed concurrently word client multiple outstanding request zvol zvol multiple outstanding request storage hardware i.e issue multiple concurrent zio_t read async writes i.e writes acknowledged data reach stable storage zvol_request achieves low latency dispatching bulk work including waiting disk taskq taskq callback zvol_read zvol_write block waiting disk complete zvol_taskq thread default concurrent disk service request zvols however sync writes i.e writes must persisted stable storage acknowledged calling zil_commit zvol_request doe use zvol_taskq instead block waiting zil write disk complete effect serializing sync writes zvol word zvol process one sync write time waiting written zil accepting next request issue applies flush operation zvol_request call zil_commit directly description change commit change zvol_request use zvol_taskq sync writes flush operation therefore thread taskq thread simultaneously calling zil_commit theoretical performance improvement 32x avoid locking issue described comment commit remove acquire rangelock taskq callback e.g zvol_write rather zvol_request applies writes sync async read discard operation mean multiple simultaneously outstanding access block complete order previously thought incorrect review block device interface requirement revealed fine order inherently defined shorter hold time rangelock also slight performance improvement additional slight performance improvement use instead taskq_dispatch avoids kmem_alloc eliminates failure mode applies writes sync async read discard operation performance result used zvol iscsi target server window initiator client single connection default i.e used diskspd generate workload thread 1mb writes random offset zvol without change get 231mb change get 728mb 3.15x original performance ran real world workload restoring mssql database saw throughput 2.5x original saw modest performance win typically 1.5x using connection different number client thread  reviewed tony nguyen tony.nguyen delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10163,,
1215,37c22948e5b1ce9f9f11c66676ecca15caf1f264,eorge Amanakis <gamanakis@gmail.com>, 2020-03-31 13:46:48 -0400,10154, reset l2ad_hand l2ad_first l2arc_evict increasing result enough space perform writes panic zio_write_phys instead resetting l2ad_hand l2ad_start end taking account possible user mediated increase l2arc_write_max l2arc_evict right run enough space evict exceed l2ad_end evict end device reset l2ad_hand l2ad_start set l2ad_first iterate l2arc_evict avoid infinite iteration l2arc_evict making sure l2ad_start size doe exceed l2ad_end reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed george amanakis gamanakis gmail.com close 10154,,
1216,c96a32e1a30a97212cdfc68e465e55de52a407d5,yan Moeller <ryan@iXsystems.com>, 2020-03-31 13:35:14 -0400,10165, zts skip udev action zvol_misc linux udev used linux skip udev_wait udev_cleanup linux reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 10165,,
1217,9a51738b60c2164822baefa17f8fdcebe9d82fbc,yan Moeller <ryan@iXsystems.com>, 2020-03-27 12:14:46 -0400,10155, let default arc_c_max platform dependent linux changed default max arc size physical memory deal shortcoming linux slub allocator platform require logic implement arc_default_max function determine default max arc size platform code reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10155,,
1218,3f38797338f2e4b16e8e0065e21f1bca6ef59784,atthew Ahrens <mahrens@delphix.com>, 2020-03-27 09:11:22 -0700,10152, compile cityhash code libzfs make cityhash code compile libzfs preparation new zstream command reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10152,,
1219,ef3331e703a8fa988bc09129f6f8d8f7c4c4082f,yan Moeller <ryan@iXsystems.com>, 2020-03-26 13:48:19 -0400,10146, zts wait free space quota test removal test sync specific pool waiting reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10146,,
1220,112c1bff9422739b0bfa8156c44f6da63ae30fd0,irkjan Bussink <d.bussink@gmail.com>, 2020-03-26 18:41:57 +0100,10015, remove check null value encryption path path never exercised parameter given always different cipher plaintext crypto_data_t pointer reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed attila fueloep attila fueloep.org signed dirkjan bussink d.bussink gmail.com close 9661 close 10015,,
1221,1d2ddb9bb9993b9c2e942040d700a4bacd0b205b,lex <alex@stty.io>, 2020-03-26 23:28:22 +0800,10153, zfs_get change time format string issue 10090 reported snapshot created midnight missing padded zero creation property change fix bug reported issue 10090 snapshot created midnight missing padded zero creation timestamp output leading zero missing time format string used format hour decimal number single digit preceded blank fixed changing format hour difference output  thu mar 2020 thu mar 2020  reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed alex john alex stty.io close 10090 close 10153,,
1222,652bdc9b0ed73476c4120dc2db16bd2f16f63708,atthew Ahrens <mahrens@delphix.com>, 2020-03-18 13:31:10 -0700,10117, deprecate deduplicated send stream dedup send deduplicate set block send command invoked doe take advantage dedup table common misconception among user developer make feature seem useful result many user using feature getting benefit  dedup send requires nontrivial expenditure memory cpu operate especially dataset sent already using dedup strength checksum dedup send add developer burden expands test matrix developing new feature causing bug released code delaying development effort forcing testing done result deprecating use zfs send receiving stream change add warning man page also print warning whenever dedup send receive used future release plan remove kernel code generating deduplicated stream make zfs send generate regular non deduplicated stream remove kernel code receiving deduplicated stream make zfs receive deduplicated stream process userland duplicate still received reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 7887 close 10117,,
1223,22df2457a7b8265d999a2fe48f3e8e941c8fdde5,yan Moeller <ryan@iXsystems.com>, 2020-03-18 15:54:12 -0400,10138, avoid core dump invalid redaction bookmark libzfs abort dump core einval kernel trying redacted send bookmark redaction bookmark move redacted bookmark validation libzfs check bookmark given redaction actually redaction bookmark print error message exit gracefully abort einval zfs_send_one reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10138,,
1224,4df8b2c3739c50be2e0a5aa5b6d0d131e8b8e3f3,vatat <kontakt@avatat.pl>, 2020-03-18 19:50:45 +0100,10142, changed decimal integer arcstat script changed interval value type decimal integer deprecation warning python 3.8 also changed kstat value type decimal integer value integer fixed behavior arcstat run without args reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed bartosz zieba bartosz zieba.pro close 10132 close 10142,,
1225,535195127409ca9d0526c120a5c4c24670ce79f1,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-18 11:47:07 -0700,9739, fix zfs_rmnode unlink rollback issue rollback occurred file open unlinked file closed post rollback exist rolled back version unlinked object therefore call zap_remove_int may correctly return enoent allowed signed brian behlendorf behlendorf1 llnl.gov close 6812 close 9739,,
1226,6b7028ec5189386e73b978fa68ce2a0d22ec0343,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-17 15:42:27 -0700,10143, fix cstyle warning fix minor cstyle warning accidentally introduced 7145123b reviewed paul dagnelie pcd delphix.com signed brian behlendorf behlendorf1 llnl.gov close 10143,,
1227,7145123b0ae4d625a419ee357a0df9467b1e8311,aul Dagnelie <pcd@delphix.com>, 2020-03-17 10:30:33 -0700,10122, separate warning incomplete corrupt stream change add separate return code zfs_ioc_recv used incomplete stream addition existing return code stream contain corruption reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 10122,,
1228,5b3b79559c3206ea5916cbdab72b88344aa6e9a2,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-03-17 18:24:38 +0100,10029, icp gcm avx support architecture lacking movbe instruction couple x86_64 architecture support needed feature make accelerated gcm implementation work movbe instruction mainly intel sandy ivy bridge amd bulldozer piledriver steamroller using movbe available replacing mov followed bswap architecture benefit new gcm routine performance considerably better compared original implementation reviewed brian behlendorf behlendorf1 llnl.gov reviewed adam moss yotes.com signed attila fã¼lã attila fueloep.org followup 9749 close 10029,,
1229,a57d3d45d6efdff935421e2ef3f97e3dc089d93d,ariusz Zaborski <oshogbo@vexillium.org>, 2020-03-17 18:08:32 +0100,9904, add option forcible unmounting dataset receiving snapshot currently dataset use receive snapshot zfs send test asd zfs recv test unmount test device busy commits add option attempt forcibly unmount dataset thanks enforce receiving snapshot single step note functionality supported linux vfs prevent active mounted filesystems unmounted even force option intended vfs behavior test case added verify expected behavior based platform discussed pawel jakub dawidek pjd freebsd.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allanjude freebsd.org external issue http d22306 close 9904,,
1230,80d98a8f3addfbfa1feefef70774193ed18c1013,yan Moeller <ryan@iXsystems.com>, 2020-03-17 12:55:18 -0400,10136, zts use needed add log_pass appropriately reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10136,,
1231,e0d3284bc95d3d6b6660e8881454caf367ce460b,yan Moeller <ryan@iXsystems.com>, 2020-03-17 12:49:58 -0400,10137, exit status 256 signum actually baked ksh 10121 fix signal number freebsd darwin incorrectly changed expected encoding exit status command exited signal encoding 256 signum feature shell signal number platform dependent always use encoding 256 signum checking exit status signal exit reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10137,,
1232,4d32abaa874db06ec84aeefafa1354548f91d650,yan Moeller <ryan@iXsystems.com>, 2020-03-16 14:56:29 -0400,10127, libzfs fix bound check float parsing uint64_max exactly representable double closest representation uint64_max use comparison instead bound check reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10127,,
1233,7261fc2e8136f99b89851fa853f7862db45437c3,atthew Ahrens <mahrens@delphix.com>, 2020-03-16 11:51:56 -0700,10099," improve zfs receive performance batching writes write record stream zfs receive creates dmu transaction dmu_tx_create writes block data object per block overhead opposed per byte overhead dominate performance often case small recordsize per dmu transaction overhead significant example workload receieve_writer thread 100 cpu half cpu time per routine e.g dmu_tx_assign dmu_tx_commit improve performance zfs receive commit batch write record nearby offset object one dmu transaction write default batch size 1mb recordsize reduces number dmu transaction 128x full send stream incrementals depend clumpy changed block commit improves performance stream zfs recv 78,800 block sec 98,100 block sec improvement reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10099",,
1234,c94fb10917c404ecdba53a46dd7d497cdeadbc30,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-16 10:46:03 -0700,10129, remove builder customization test default option reasonable builder yes already default 3600 increased ztest run time increase code coverage small degree default 900s run sufficient disabling certain test bit builder longer needed reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 10129,,
1235,d3fe62cb35474fc6ec12014f3ace7cb7655cf162,yan Moeller <ryan@iXsystems.com>, 2020-03-13 12:29:10 -0400,10120, zts update flaky test zts report test pas freebsd fail linux put maybe set move back known linux check expected outcome clear add test found flaky freebsd stable maybe set reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10120,,
1236,0fdd6106bbd1b31322be87fee94c0c579ca459e6,atthew Ahrens <mahrens@delphix.com>, 2020-03-12 10:55:02 -0700,10115, must called held normal lock order must held ds_opening_lock example dmu_objset_hold doe however called ds_opening_lock held already held attempt acquire may lead deadlock since lock order reversed looking caller principally caller almost caller already however place send receive code path example send_cb dmu_recv_stream  commit resolve problem requiring caller hold case code restructured call earlier send receive process already save objset_t need middle send receive similar already dsl_dataset_t thus need acquire many new place also cleaned code dmu_redact_snap reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed matthew ahrens mahrens delphix.com close 9662 close 10115,,
1237,fa130e010c2ff9b33aba11d2699b667e454b3ccb,lexander Motin <mav@FreeBSD.org>, 2020-03-12 13:52:03 -0400,8694, fix infinite scan pool special allocation attempt run scrub resilver new pool containing special allocation special vdev added creation caused infinite loop limiting memory usage pool size calculated accounting normal allocation class addition special case dedup class fix issue reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 10106 close 8694,,
1238,94eb65b4c1ff02653c00c8f30b1a2a9617afa556,yan Moeller <ryan@iXsystems.com>, 2020-03-12 13:50:51 -0400,10121, zts use correct signal number status check different operating system encode exit status different way logapi shell library assumes solaris meaning exit code correct platform define needed constant according platform running use decode process exit status reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10121,,
1239,cdbc34fc2b954e504d42e25ad5c8e92504908813,yan Moeller <ryan@iXsystems.com>, 2020-03-12 13:50:01 -0400,9142, zts test boundary condition alloc_class_012 issue 9142 describes error check device removal prevent removal special allocation class vdevs situation enhance alloc_class check situation bug occurs update zts report knowledge issue 9142 reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10116 issue 9142,,
1240,e70b127e059e4dacece24c61502a5e7175eeebf4,yan Moeller <ryan@iXsystems.com>, 2020-03-12 13:48:46 -0400,10112, zts wait free space write_dirs test cleanup write_dirs involves destroying dataset filling pool recreating dataset next test due asynchronous nature free space accounting recreating dataset fail lack space causing problem next test add wait_freeing testpool wait space freed sync_pool testpool update space accounting attempting recreate test filesystem use single disk create pool make small file doe take long fill reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10112,,
1241,e6b28efccc4853b4f2715c2d37ab05cead2e1c3e,ohn Poduska <jpoduska@datto.com>, 2020-03-12 13:25:56 -0400,10101, prevent race condition dnode_dest 10101 wait refcount dn_holds zero without holding dn_mtx doe final remove dn_holds dn_mtx held ref dn_holds tag mutex_exit dn_mtx race condition remove dn_mtx dropped time dnode_destroy get called end dnode_dest calling mutex_destroy panic since lock still held change add condvar wait final release dn_mtx calling dnode_destroy reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed john poduska jpoduska datto.com close 7814 close 10101,,
1242,1e9231ada893d43bdbfa8ef3a11f1e423296981d,ark Roper <markroper@gmail.com>, 2020-03-12 13:24:43 -0400,9987, prevent deadlock arc_read linux memory reclaim callback using zfs lustre arc_read trigger kernel memory allocation turn lead memory reclaim callback deadlock within single zfs process change prevent reclaim attempt deadlock http group zfs devel stack trace observed __schedule schedule  __mutex_lock arc_buf_destroy zfs dbuf_destroy zfs dbuf_evict_one zfs zfs zfs osd_zfs lu_object_free obdclass obdclass obdclass shrink_slab shrink_node     new_slab ___slab_alloc __slab_alloc  spl zfs arc_read zfs dbuf_read zfs zfs reviewed brian behlendorf behlendorf1 llnl.gov signed mark roper markroper gmail.com close 9987,,
1243,61871518dd6703a59a676042a152aa54a30aea10,laf Faaland <faaland1@llnl.gov>, 2020-03-11 10:02:23 -0700,10118, zloop.sh call zdb pool name commit 54007c79 introduced error changing final argument zdb ztest ztest argument indicates pool name script changed reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed olaf faaland faaland1 llnl.gov close 10118,,
1244,ddd9ef3a4fab1eed3ed7c32900fc7f9474f2929b,yan Moeller <ryan@iXsystems.com>, 2020-03-10 14:00:56 -0400,10096, zts add failsafe callback run test test get killed opportunity clean many bad state leave system particular gravity zinject used induce bad behavior one test disk create failsafe mechanism test runner.py run callback script every test script common test test benefit protection add obligatory zinject clear zinject state every test case run reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10096,,
1245,1dc32a67e93bbc8d650943f1a460abb9ff6c5083,atthew Ahrens <mahrens@delphix.com>, 2020-03-10 10:51:04 -0700,10067," improve zfs send performance bypassing arc zfs send dataset small recordsize e.g performance dominated per block overhead especially true zfs send compressed reduces amount data sent number block several thread involved limiting factor send_prefetch thread 100 cpu main job send_prefetch thread issue zio data needed main thread doe calling arc_read immediate cost creating arc_hdr take around one cpu also induces later cost thread since data prefetched dmu_send dmu_dump_write need call arc_read get data look arc_hdr hash table copy data scatter abd arc_hdr linear abd arc_buf take one cpu dmu_dump_write need arc_buf_destroy take one cpu arc_adjust need evict arc_hdr taking one cpu cost avoided bypassing arc data already cached commit change zfs send check data arc found directly call zio_read reading data linear abd used dmu_dump_write directly performance improvement best expressed term many block processed zfs send one second change increase metric 100,000 150,000. amount data per block small e.g 2kb corresponding reduction elapsed time zfs send dev null minute minute test case addition improving performance zfs send change make zfs send pollute arc cache case data reused allows keep caching useful data mru hit part arc reviewed paul dagnelie pcd delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10067",,
1246,9be70c37844c5d832ffef6f0ed2651a332b35dbd,yan Moeller <ryan@iXsystems.com>, 2020-03-10 13:44:14 -0400,10113, zts simplify libtest function echo result arithmetic expression necessary use hw.clockrate sysctl get cpu freq instead parsing dmesg.boot line might even anymore reduce bookkeeping fill_fs making easier follow reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10113,,
1247,5ecbb293c64ee88257e1e21fa155cf75fdd8cbd8,ichard Laager <rlaager@wiktel.com>, 2020-02-06 09:28:20 -0800,9443, fix zfs function packaging bug fix bug generated zfs function included along original zfs functions.in make dist tarball caused unfortunate series event build packaging resulted rpm installed etc zfs zfs function listing path zfs usr local sbin zfs zed usr local sbin zed zpool usr local sbin zpool  zfs sbin zfs zed sbin zed zpool sbin zpool affect init.d non systemd distros like centos etc default zfs etc zfs zfs function also used initramfs need built even init.d support moved new etc default existing etc zfs source directory respectively fix 9443 authored tony hutter hutter2 llnl.gov signed richard laager rlaager wiktel.com,,
1248,01243e72a5d7144345a9c13ab4455a52003fc0af,ichard Laager <rlaager@wiktel.com>, 2020-02-22 18:09:55 -0600, , initramfs eliminate substitution handled zfs function duplicative unnecessary signed richard laager rlaager wiktel.com,,
1249,49afc91387cdf91e1b6e247211b16209be2fa252,ichard Laager <rlaager@wiktel.com>, 2020-02-05 18:02:43 -0600, , delete built init script make clean previously deleted make distclean brings line example http www.gnu.org software automake manual html_node scripts.html signed richard laager rlaager wiktel.com,,
1250,dc4dd467287d1121c0c7e860548293a834774b1a,ichard Laager <rlaager@wiktel.com>, 2020-02-05 18:01:49 -0600, , make init script depend makefile brings line example http www.gnu.org software automake manual html_node scripts.html way substitution code changed update signed richard laager rlaager wiktel.com,,
1251,ff2f960b2492ecb3db6a2614251240a77874ab93,nsanePrawn <Insane.Prawny@gmail.com>, 2020-03-09 19:09:09 +0100,10103, systemd mount generator fail keyload file already loaded previously generated keyload unit encryption root keylocation file contain code detect key already loaded would marked failed situation move code check whether key already loaded keylocation prompt handling general key loading code reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 10103,,
1252,2b95e91132880309d67a537fe727bdef9f4af463,yan Moeller <ryan@iXsystems.com>, 2020-03-06 12:31:32 -0500,10092, zts another round change freebsd highlight is_linux is_illumos swap make clever path given slightly optimize remove platform difference user_run temporarily expect non libfetch behavior keylocation foo bar fix sharenfs exception test multihost property fix misc broken platform check clear zinjected fault callback reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10092,,
1253,f5f6fb03b7e5e3d06da4c04b26319758568ae238,yan Moeller <ryan@iXsystems.com>, 2020-03-06 12:28:19 -0500,10030, change default overlay filesystems allow overlay mount default freebsd linux respect native convention switching default overlay retaining option turn property compatibility operating system convention update documentation test accordingly reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10030,,
1254,788398c5625c2c42903debc9a3f0e6870df08fe0,yan Moeller <ryan@iXsystems.com>, 2020-03-06 12:26:38 -0500,10105, zts update zts report exception freebsd new zfs_sync_trim_ test skipped freebsd previously failing test passing reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10105,,
1255,5a1abc4b5b4267ad8b03d14ba3b20df3d459202f,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:12:12 -0800,10098, zts speed write_dirs cleanup write_dirs test fill filesystem bunch file full cleanup file truncated removed individually test already take run quicker easier destroy whole dataset create new one replace cleanup function reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10098,,
1256,fa23c5be88e79d2da3d3482221e2e24d0d72de68,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:10:45 -0800,10097, zts add missing quote default_setup take disk list first argument optional additional argument control secondary functionality couple test setup mistakenly call default_setup disk add quote second subsequent disk correctly included pool vdevs rather triggering unwanted behavior default_setup reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10097,,
1257,4b06d052986675c0bdcbb7eec343da24c15558b3,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:09:40 -0800,10093, zts add zts report exception freebsd three test expect fail freebsd link_count never exit eventually time amotin tell test probably applicable skip freebsd userobj feature doe activate immediately pool upgrade low impact aware issue removal doe appear condense export low impact aware issue additionally pass freebsd moved maybe reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10093,,
1258,f49db9b50427565a263e219497f18165299dee87,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:08:41 -0800,10086, zio dprintf_bp error also dprintf_bp case blk_verify_halt since dprintf_bp never executed reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed justin keogh commits v6y.net close 10086,,
1259,d16c029f9997ba2a2f97baba839632cfb7c28aad,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:07:52 -0800,10082, zts test correct behavior see issue 8226 property doe work documented previous attempt fix behavior linux far issue still open see 8228 8280 existing test pas incorrect behavior problem freebsd failing test implement feature correctly adapted test based work loli10k 8280 extended change fix snapshot_limit test well linux fails test entry linking issue added maybe group zts report.py reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10082,,
1260,2288d4196821ae4b5fa375e8e519f6e83f26abad,rian Behlendorf <behlendorf1@llnl.gov>, 2020-03-04 15:07:11 -0800,10071, add trim support zpool wait manual trim fall category long running pool activity people might want wait synchronously change add support zpool wait waiting manual trim operation complete also add flag zpool trim used turn zpool trim synchronous operation reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed john gallagher john.gallagher delphix.com close 10071,,
1261,b3212d2fa6ab8d7d8373373e8a6b8acbbf45508e,atthew Ahrens <mahrens@delphix.com>, 2020-03-03 10:29:38 -0800,10070," improve performance __zio_execute call determine running zio interrupt taskq case may need switch processing zio zio issue taskq call become performance bottleneck processing high rate zio call taskq_member zio interrupt taskqs 21. slow call taskq_member doe tsd_get taskq_tsd linux relatively slow commit improves performance cache value tsd_get taskq_tsd reducing number call 21th current behavior test case running zfs send dev null filesystem small block average 2.5kb block using 6.7 one cpu change reduced 1.3 overall time perform zfs send reduced 150,000 block sec 165,000 block sec reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com reviewed ryan moeller ryan ixsystems.com reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 10070",,
1262,0a0f9a7dc6e4f215089cf0aabb230d5dd5dfbd1e,yan Moeller <ryan@iXsystems.com>, 2020-03-03 13:28:09 -0500,10080, zts provide nested cleanup routine shared test library function lack simple way ensure proper cleanup event failure log_onexit cleanup pattern used library function one global variable store cleanup command example serious issue tunable artifically stall kernel progress get activated check fails unless caller know tunable set back system left bad state solve problem turn global cleanup variable stack provide push pop function add additional cleanup step remove safe first use new functionality set reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10080,,
1263,9bb907bc3fdcaa132ecb0f8326c8815f27824ce4,yan Moeller <ryan@iXsystems.com>, 2020-03-02 12:43:30 -0500,10079, make platform dependent kernel function return linux linux move kernel part function common code fix test freebsd reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10079,,
1264,1289fbb557e1f6d4de69a085280890619bc71127,yan Moeller <ryan@iXsystems.com>, 2020-03-02 12:42:22 -0500,10081, zts change issue url template openzfs org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10081,,
1265,d32eff3a27d2a57fa280b7e461883fed2a4cec16,atthew Macy <mmacy@freebsd.org>, 2020-02-28 14:54:14 -0800,10076, open zfs control device exclusively freebsd platform change made 10073 longer necessary freebsd open control device exclusively get onexit callback invoked reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10076,,
1266,cf118ae8dc149c5c9fd9b70e89790c38824b85de,atthew Macy <mmacy@freebsd.org>, 2020-02-28 14:53:18 -0800,10075, call zrele passed freebsd freebsd somewhat cumbersome locking refcounting protocol platform counterpart znode need call zrele passed need intermediate reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10075,,
1267,ae9f92f6f31c81f4d1aa4602f812f912b4392e7c,atthew Macy <mmacy@freebsd.org>, 2020-02-28 14:50:32 -0800,10073, share zfsdev_getminor adding accessor common interface extension freebsd platform code possible share implementation aforementioned function reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10073,,
1268,9cdf7b1f6b00cdd0a31d07e3fbc679d0e9eff247,atthew Ahrens <mahrens@delphix.com>, 2020-02-28 14:49:44 -0800,10034, improve zfs destroy performance zio_t free zio_free zfs destroy run completes quickly background locate block free free background activity observed zpool get freeing zpool wait free ... background activity processed single thread spa_sync thread call zio_free block free even modest storage performance cpu consumption zio_free performance bottleneck performance zio_free improved actually creating zio_t common case non dedup non gang instead calling metaslab_free directly avoids cpu cost allocating zio_t importantly cost adding later removing zio_t parent zio child list result performance background freeing double 0.6 million block per second 1.3 million block per second reviewed paul dagnelie pcd delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed matthew ahrens mahrens delphix.com close 10034,,
1269,6c0abcfddd4dcf8ef62e84cfa3b77c14e146827d,yan Moeller <ryan@iXsystems.com>, 2020-02-28 12:48:29 -0500,10051, zts fixup shebang rsend_016 add common.run ksh script use bin ksh shebang make rsend_016_neg consistent rest suite test also absent runfiles add common.run reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 10051,,
1270,f0410e98063d17b8a7f1e35ef86ff49e815789b0,yan Moeller <ryan@iXsystems.com>, 2020-02-28 12:46:51 -0500,10060, zts eliminate partitioning zpool_add use file vdevs short disk also fixed vol recursion freebsd 004 reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10060,,
1271,3f99a3abc773bf50a0c0276ba530f1b43ea97dc9,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-28 09:23:48 -0800,10063, fix config_modules linux kernel config configuring builtin enable linux builtin kernel without loadable module support config_modules object file created never loadable kmod update handle manor similar macro reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9887 close 10063,,
1272,bd0d24e09b089af589ebaecd9e85d9fd4ac31deb,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-28 08:58:39 -0800,10072, linux 5.5 compat blkg_tryget commit http github.com torvalds linux commit 9e8d42a0f accidentally converted static inline function blkg_tryget gpl kernel built resolve build issue providing equivalent functionality needed internally reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9745 close 10072,,
1273,2ce90dca91a991592da48c52332326ae4bb25b69,yan Moeller <ryan@iXsystems.com>, 2020-02-27 20:15:06 -0500,10062, arc_summary make per platform linux modinfo get tunables description freebsd use sysctl move existing function definition defined way linux add definition term sysctl freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10062,,
1274,276410387ef40e2c9659729ad6813a2dea3b3aae,yan Moeller <ryan@iXsystems.com>, 2020-02-27 20:14:21 -0500,10061, pyzfs add constant platform specific errnos freebsd ebade echrng etime add constant set appropriately platform reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10061,,
1275,13fac09868b4e4e08cc3ef7b937ac277c1c407b1,atthew Macy <mmacy@freebsd.org>, 2020-02-27 17:12:44 -0800,10057, consolidate arc_buf allocation check following check currently occurs three separate location dbuf.c change consolidates check function data ... else compress_type ... else ...  reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10057,,
1276,3d5ba1cf29c8a89cad89ee3ac7a3e0739c399eb1,yan Moeller <ryan@iXsystems.com>, 2020-02-27 12:38:34 -0500,10054, zts misc fix freebsd set geom debug flag use right time zone history test add missing commands.cfg entry diskinfo rewrite use zdb check ulimits sparse file suspend removal removing vdev reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10054,,
1277,ab9646166d4f1fb01f648c678e896ea05a9517f6,atthew Ahrens <mahrens@delphix.com>, 2020-02-27 09:37:34 -0800,10055, zts fix zfs recv incremental stream already exists ignored message like receiving incremental stream pool incsnap pool incsnap snap testpool testfs incsnap already exists ignoring command exit successfully exit code test expecting case fail nonzero exit code fix remove specific command test case let check remaining command fact fail reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10055,,
1278,2c3a83701dd185cadb30db4556256534e2930c7d,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-26 13:18:07 -0800,10064, linux 5.6 compat time_t part linux kernel y2038 change time_t type fully retired caller required use time64_t type rather move new type removed remaining place time_t used kernel code replaced uint64_t already zfs internally handled value going forward work towards updating remaining user space time_t consumer bit interface reviewed matthew macy mmacy freebsd.org reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10052 close 10064,,
1279,ff5587d651371ab496f7962e85fe2c337fdb8a59,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-26 12:42:33 -0800,10064, linux 5.6 compat getrawmonotonic interface fully retired update gethrtime use replacement interface introduced 4.18 kernel reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 10052 close 10064,,
1280,28caa74b196553aaafda6d0a881668735d627d82,atthew Macy <mmacy@freebsd.org>, 2020-02-26 16:09:17 -0800,9924, refactor dnode dirty context dbuf_dirty add dedicated routine add empty dirty record destroy assertion make much extensive use set_error macro reviewed andrew wca freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed matt macy mmacy freebsd.org close 9924,,
1281,647ff8e975d2087ade05d862eb19a589ab155126,yan Moeller <ryan@iXsystems.com>, 2020-02-26 17:29:13 -0500,10059, zts fix function get_used_prop doe exist use get_prop used instead reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10059,,
1282,abef699866508f96157290e2a85482968e094a58,yan Moeller <ryan@iXsystems.com>, 2020-02-26 11:41:30 -0500,10050, zts adapt casenorm test freebsd several casenorm test pas freebsd expected fail linux move passing test fail maybe passing freebsd unexpected invert platform logic freebsd use illumos zlook reviewed george melikov mail gmelikov.ru reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10050,,
1283,3a192f7d898e78dfdf5c2f7b2dd983b23eaf25f6,yan Moeller <ryan@iXsystems.com>, 2020-02-25 19:23:27 -0500,10047, zts misc fix freebsd check mountd is_shared avoid timeout running enhance robustness cleanup function simplify atime lookup skip sharenfs validation add mountpoint property inheritance validation freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10047,,
1284,a33cb7e01a72a1b04b75c83607f235438df9281f,yan Moeller <ryan@iXsystems.com>, 2020-02-25 19:20:50 -0500,10045, add missing newline zfs redact help message signed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10045,,
1285,034313908a3fa3661d6c2f7392294a64b41d60f8,laf Faaland <faaland1@llnl.gov>, 2020-02-25 16:02:10 -0800,9974, zts zed_start fail zed already running zed_start may called place zed typically already running requirement test reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 9974,,
1286,c6a6b4d50a71108e053c19418e0f423533cfe7d1,atthew Macy <mmacy@freebsd.org>, 2020-02-25 15:59:29 -0800,10031, remove dead code error handling dsl_crypt.c sleepable km_sleep allocation fail hence error handling useful reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 10031,,
1287,2757010166e8dd3f198989747f64bb497566ddaf,yan Moeller <ryan@iXsystems.com>, 2020-02-25 18:27:41 -0500,10046, zts move atime_003 linux.run test verifies relatime behavior present linux move test linux.run reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10046,,
1288,521abcc49a73ac5187f58807b8599de04d9d9765,atthew Ahrens <mahrens@delphix.com>, 2020-02-25 11:43:20 -0800,10053, update readme openzfs reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10053,,
1289,327000ce04b4243f140a38647dca59683d39b8e7,irkjan Bussink <d.bussink@gmail.com>, 2020-02-25 00:38:23 +0100,10006, remove zfs_getattr convoff dead code convoff function called one code path zfs_space caller zfs_space called flock64_t l_whence set seek_set mean convoff always result bfp parameter l_whence set seek_set int whence seek_set well reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed dirkjan bussink d.bussink gmail.com close 10006,,
1290,92bd4cabd615684d1fa476f56e73e0d9edf9a902,yan Moeller <ryan@iXsystems.com>, 2020-02-24 13:17:55 -0500,10038, zts misc fix freebsd force ufs sync snap vol rollback test valid share option freebsd use instead mountpoint pool rmdir export fix platform check fix disappearing group delegate test try delegating jailed root set reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10038,,
1291,31a69fbccb06bd1b3b1aaaf59e07a9016cea735d,atthew Ahrens <mahrens@delphix.com>, 2020-02-24 09:50:14 -0800,10039, remove unused structs member dmu_send.c several structs member structs related redaction longer used commit remove reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 10039,,
1292,24fcd9fc5c999385785d73414bfd1cf72c1b230d,yan Moeller <ryan@iXsystems.com>, 2020-02-21 19:00:23 -0500,10036, zts eliminate partitioning zpool_destroy zpool destroy test partition single disk create two pool done using two disk partitioning instead temporarily allow vol recursion freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10036,,
1293,b7dbbf6aa782b10e2645b3cf748406443ccd7052,yan Moeller <ryan@iXsystems.com>, 2020-02-21 18:59:20 -0500,10037, zts refactor is_shared fix impl freebsd freebsd share command doe showmount split separate platform impls is_shared_impl dispatch correct platform impl function is_shared eliminate use is_shared_impl test is_shared work reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10037,,
1294,f5f438194df6419573eb699f9ef0c8b0e1aeaf12,yan Moeller <ryan@iXsystems.com>, 2020-02-21 11:52:44 -0500,10035, zts move privilege test sunos.run test unspported freebsd linux lack pfexec move privilege test sunos.run remove platform check reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10035,,
1295,6a608416315ab9a109b948baa02a90171b09a337,yan Moeller <ryan@iXsystems.com>, 2020-02-21 11:38:34 -0500,10033, zts use lsblk freebsd test use lsblk find sector size disk freebsd lsblk use diskinfo get sector size freebsd reviewed george melikov mail gmelikov.ru reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10033,,
1296,ca7ea23f8a173b554fa89f46de298fa038f9c6e2,yan Moeller <ryan@iXsystems.com>, 2020-02-20 11:14:25 -0500,10032, zts fix freebsd freebsd account management erroneously invokes non existent groupdel command freebsd use groupdel instead groupdel freebsd reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10032,,
1297,b11375d74a18945d247f0f98e2d599628bd26e2a,yan Moeller <ryan@iXsystems.com>, 2020-02-20 11:12:24 -0500,10028, zts check right mount option freebsd freebsd doe support device nodevices mount option check option freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10028,,
1298,325a551232cb714cebf167d327d512a64256bcd0,yan Moeller <ryan@iXsystems.com>, 2020-02-20 11:11:51 -0500,10022, zts fix faulty test test supposed verify zil operation tx_write writes must synchronous order entered zil linux seems sync writes even asked freebsd test doe intended use oflag sync part test supposed result tx_write zil entry reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10022,,
1299,65635c34034933f5adaf3a6e470a06e12a9435ae,rvind Sankar <nivedita@alum.mit.edu>, 2020-02-20 11:10:47 -0500,10021, fix icp include directory tree build zfs built tree using enable linux builtin compile command executed kernel build directory build directory different kernel source directory passing ifs zfs icp find header present build directory fix adding abs_top_srcdir pull header zfs source tree instead reviewed brian behlendorf behlendorf1 llnl.gov signed arvind sankar nivedita alum.mit.edu close 10021,,
1300,81369567169c740df466d454f0b3e1ff31dbe77b,yan Moeller <ryan@iXsystems.com>, 2020-02-20 11:10:13 -0500,10002, zts eliminate partitioning zpool_create etc test made work without bunch complex partitioning physical disk use disk directly creating file disk needed compelling reason reduce use shared variable clear utility catch fallout test include cfg shlib zpool_create reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10002,,
1301,873cd182de5ff49cdad26381665d21543036a051,yan Moeller <ryan@iXsystems.com>, 2020-02-19 13:27:23 -0500,10023, zts fix zpool_create create o_ashift freebsd unknown reason egrep misbehaving pattern freebsd command work fine run interactively shell test output egrep empty work around issue using filter awk script instead add bit diagnostic output simplification awk script well reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10023,,
1302,392556f0efa0129c51b08378b2e52b6667424a56,yan Moeller <ryan@iXsystems.com>, 2020-02-19 12:03:31 -0500,10024, zts avoid nonportable cmp flag freebsd flag cmp read area first four label disk separate file compare instead using special flag limit size reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10024,,
1303,89adffb7bcabc8f596552c92c8b3635eaa696713,ariusz Zaborski <oshogbo@vexillium.org>, 2020-02-18 22:36:23 +0100,10013, add notice forcefully unmount supported linux linux vfs never allow filesystem use unmounted behavior differs platform like freebsd allow filesystem force unmounted result error returned application actively using filesystem reviewed brian behlendorf behlendorf1 llnl.gov signed mariusz zaborski oshogbo vexillium.org close 10013,,
1304,43849fdf3ffe200b6ad17597d6cfe706af1212d9,yan Moeller <ryan@iXsystems.com>, 2020-02-18 14:23:41 -0500,10011, zts move free linux command list freebsd doe free command command used linux perf hostinfo function move free list common command list linux command reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10011,,
1305,5f087dda784b26f16e72eff32c0e2c2b7c483adb,yan Moeller <ryan@iXsystems.com>, 2020-02-18 14:22:56 -0500,10008, enable zpool event tunables test freebsd made necessary change module code expose zevents devd zpool event ioctl tunables exposed zpool event test enabled platform minor tweak test needed accommodate way format output freebsd zed remains ported reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10008,,
1306,8b3547a481a74b39c5d0eed256896fb25e8310e9,atthew Macy <mmacy@freebsd.org>, 2020-02-18 11:21:37 -0800,9923, factor dbuf subroutine add state change tracing create dedicated dbuf_read_hole dbuf_read_bonus additionally add dtrace probe allow state change tracing reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed andrew wca freebsd.org reviewed brad lewis brad.lewis delphix.com authored andrew wca freebsd.org signed matt macy mmacy freebsd.org close 9923,,
1307,f2448464623f240002a0dff0f4617dec4c2cdefe,ichard Laager <rlaager@wiktel.com>, 2020-02-18 11:36:50 -0600,10003, prefer org.openzfs feature property moving forward wish use org.openzfs dash rather org.open zfs org.zfsonlinux feature guids property name existing feature guids changed reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed richard laager rlaager wiktel.com close 10003,,
1308,fb63fc0c0398baf2250eea8a7e0ddb4760d59e5e,yan Moeller <ryan@iXsystems.com>, 2020-02-16 15:49:49 -0500,10007, zts move cksum common system command cksum command used delegate test freebsd moved linux command list move back common command list reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 10007,,
1309,d09dc5980c3e4840352c3c7b575975cbb72e7270,eHackEd <DeHackEd@users.noreply.github.com>, 2020-02-16 15:44:08 -0500,10005, honour sync disabled relinking tpmfiles unlinked file respect synchronous flush command get relinked state unknown previously force flushed file even sync disabled correct case reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed dhe git dehacked.net close 10005,,
1310,ecbbdac799e0fd33f9d8b5fd6315008e3b4c9a50,nsanePrawn <insane.prawny@gmail.com>, 2020-02-12 18:01:15 +0100,9649, systemd mount generator generate noauto unit add control property commit refactors systemd mount generator make following major change generator generates unit datasets marked canmount noauto unit wantedby local fs.target multiple noauto datasets path noauto unit created datasets canmount prioritized introduces handling new user property included zfs list.cache file requires list unit require mount unit requires mount list mount require mount unit  list unit order mount unit  list unit order mount unit wanted list unit add want dependency mount unit required list unit add requires dependency mount unit nofail toggle want requires dependency ignore generate mount unit dataset consult updated man page detailed documentation restructures extends zfs mount generator man page property information unit ordering license header reviewed richard laager rlaager wiktel.com reviewed antonio russo antonio.e.russo gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 9649,,
1311,9d2f3b7f94b62939de3fb50c8d9a2d78477f8627,nsanePrawn <insane.prawny@gmail.com>, 2020-01-11 19:14:23 +0100,9649, systemd mount generator silence shellcheck warning silence warning intentionally unquoted variable fix warning caused string split across line slightly refactoring keyloadcmd reviewed richard laager rlaager wiktel.com reviewed antonio russo antonio.e.russo gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed insaneprawn insane.prawny gmail.com close 9649,,
1312,13b5a4d5c018f94d04efefcec6205aa73205e05f,ason King <jasonbking@users.noreply.github.com>, 2020-02-14 15:41:42 -0600,9950, support setting user property channel program add support setting user property zfs channel program adding zfs lua api reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com authored sara hartse sara.hartse delphix.com contribution jason king jason.king joyent.com signed sara hartse sara.hartse delphix.com signed jason king jason.king joyent.com close 9950,,
1313,4fe3a842bb53e7cebcdcd69deae758ccfb0660e9,atthew Ahrens <mahrens@delphix.com>, 2020-02-14 08:39:46 -0800,10000," remove limit number async zio_frees non dedup block module parameter limit number block freed background freeing filesystems snapshot zfs destroy one txg useful freeing dedup block becuase zio_free dedup block require read relevant part dedup table ddt also dirty block set 100,000 default typical case dedup used negative performance impact rate background freeing zfs destroy example recordsize txg syncing every second free 160mb data per second may much rate write data change increase unlimited default address dedup freeing issue new tunable introduced limit number zio_free dedup block done background destroys per txg default 100,000 free old default reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 10000",,
1314,0f1832106d66a309a9a5a6cc11edee6bb11ced98,yan Moeller <ryan@iXsystems.com>, 2020-02-14 11:37:40 -0500,9979, make zpool.d iostat work freebsd slight difference iostat command freebsd linux reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9979,,
1315,db0ad393b1bb7f83167e1cece1fd896dd0e63d73,ndrew J. Hesford <48421688+ahesford@users.noreply.github.com>, 2020-02-14 11:30:29 -0500,9998, use posix stdout stderr redirect configure macro fix issue wherein redirecting stdout stderr building kernel module configure test relied bashism doe work expected bin bash reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed andrew hesford ajh sideband.org close 9990 close 9998,,
1316,4f4ddf98eeb3cf4a7b4f7a28188f24cb13074d1a,yan Moeller <ryan@iXsystems.com>, 2020-02-13 16:52:34 -0500,9994, zts misc test fix freebsd add missing logic freebsd test script reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9994,,
1317,71439163bb62ea1a931f8b359ded6c5b438f4baa,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:11:25 -0500,9997, zts include zpool_add zpool_add test include silly variable use variable file name include whatever variable still need reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9997,,
1318,3bdc4f6314ab55d1ee78ec8a2a6b77e5a3282ca3,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:10:36 -0500,9996, zts eliminate partitioning zpool_remove test need use partition get rid partitioning use disk directly reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9996,,
1319,3e725f0ad2d379f3bff42ac3127a5948226274fd,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:08:59 -0500,9995, zts eliminate partitioning write_dirs test need use partition get rid partitioning use disk directly reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9995,,
1320,5ceccda5cb78a4786e088368aa0fafb0ae281715,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:05:32 -0500,9993, zts cleanup cleanup function cleanup function make best effort clean much possible consistency pas bunch test make cleanup function prone failure fix typo reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9993,,
1321,523bc0d548d7151c7f7551e72251c741e210103f,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:04:47 -0500,9991, fix typo whitespace test readme reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9991,,
1322,b90b01cbc816878e9caa3b276533bb4b98aa90c6,yan Moeller <ryan@iXsystems.com>, 2020-02-13 15:03:01 -0500,9992, zts use ecksum instead ebade libzfs test linux defines ecksum ebade freebsd defines eintegrity test ecksum instead ebade define ebade test freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9992,,
1323,d1d65bb367d7baa4de1ae50640cf55b6434ee4a2,ichard Laager <rlaager@wiktel.com>, 2020-02-13 13:55:59 -0600,9970, zfs mount generator fix escaping correct name mount unit .mount .mount reviewed insaneprawn insane.prawny gmail.com reviewed brian behlendorf behlendorf1 llnl.gov authored antonio russo antonio.e.russo gmail.com signed richard laager rlaager wiktel.com close 9970,,
1324,f49b7a0d8ec2579c1f06c8ea7581448927482fb2,atthew Ahrens <mahrens@delphix.com>, 2020-02-13 11:24:57 -0800,9983, fix zstreamdump zstreamdump always fails calculating checksum still trying verify non calculated checksum match one stored send stream change make zstreamdump verify checksum reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 9983,,
1325,2adc6b35aebc722d83329f0e340833263c6415aa,atthew Ahrens <mahrens@delphix.com>, 2020-02-13 11:23:02 -0800,9989, missed wakeup growing kmem cache growing size vmem kvmem kmem cache spl_cache_grow always doe taskq_dispatch wait kmc_bit_growing cleared taskq thread taskq thread doe allocate new slab add list wake_up_all skc_waitq clear_bit kmc_bit_growing therefore waiting thread wake growing cleared see growing yet completed back sleep hit 100ms timeout extreme performance impact workload alloc free fit statically sized magazine workload allocate free slab high frequency problem observed funclatency spl_cache_grow workload show 99.5 time take 64us allocate slab spend time outlier waiting 100ms timeout fix clear_bit kmc_bit_growing wake_up_all skc_waitq future investigation evaluate still actually need taskq_dispatch kernel version reviewed paul dagnelie pcd delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com signed matthew ahrens mahrens delphix.com close 9989,,
1326,465e4e795ee3cbdc5de862b26d81b2f1116733df,lexander Motin <mav@FreeBSD.org>, 2020-02-13 14:20:42 -0500,9949, remove duplicate dbufs accounting since avl already embedded element counter use dn_dbufs_count dbufs counted bonus buffer add remove two atomics per dbuf life cycle according profiler reduces time spent dbuf_destroy inside bottlenecked 13.36 9.20 core reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 9949,,
1327,610eec452d723bc53ce531095aff9577a2e0dc93,yan Moeller <ryan@iXsystems.com>, 2020-02-12 16:06:00 -0500,9982, zts move user_namespace test linux.run namespaces linux feature available platform move user_namespace test common.run linux.run reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9982,,
1328,834f274fbfa0642e62944784a06b0e184065bdf0,yan Moeller <ryan@iXsystems.com>, 2020-02-12 16:04:51 -0500,9981, zts interpret env var faketty freebsd missed review freebsd script doe understand environment variable passed command use env make faketty handle env var freebsd reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9981,,
1329,9c536b9a7824f17ab85ba9dfafc95f65eac68e0e,yan Moeller <ryan@iXsystems.com>, 2020-02-12 16:01:55 -0500,9980, zts fix freebsd missed review output freebsd indented string comparison mismatch comparing unindented number compare count integer instead string reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed paul zuchowski pzuchowski datto.com signed ryan moeller ryan ixsystems.com close 9980,,
1330,e7be5c47bd8f824c79631b2747731ae169d6ae7a,yan Moeller <ryan@iXsystems.com>, 2020-02-12 16:00:19 -0500,9978, move platform code linux sysfs determine module version freebsd different method reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9978,,
1331,1bbeb6d755ba2aa72578faceb44183987c51b8d8,yan Moeller <ryan@iXsystems.com>, 2020-02-12 15:59:28 -0500,9984, zts move linux.run test scsi_debug linux kernel module move test linux.run alternative scsi_debug worked freebsd reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9984,,
1332,12f7b90c93ecad822d79067386574f39c6462fbf,ustin Keogh <github.com@v6y.net>, 2020-02-12 19:36:05 +0000,9925, zdb always print symlink target zdb printing path also print symlink target exists reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed justin keogh commits v6y.net close 9925,,
1333,948f0c44196d2fa254399ec0d716c2ba0bb9ffad,hristian Schwarz <me@cschwarz.com>, 2020-01-16 02:15:05 +0100,9571, zcp add add support bookmark creation cloning reviewed matt ahrens matt delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 9571,,
1334,a73f361fdb2c0a7778e70b482e316054fc2d8630,hristian Schwarz <me@cschwarz.com>, 2019-11-10 23:24:14 -0800,9571, implement bookmark copying feature allows copying existing bookmark using zfs bookmark target newbookmark niche use case functionality e.g using bookmark marker replication progress copying redaction bookmark produce normal bookmark used redacted send duplicating redaction object zcp support bookmarking creation copying implemented separate patch based work overview terminology source existing snapshot bookmark new bmark new bookmark implement bookmark copying dsl_bookmark.c create new bookmark node copy source zbn_phys new zbn_phys zero redaction object copy extend existing bookmark ioctl nvlist schema accept bookmark source authoritative use check snapshot bookmark source adjust cli refactor shortname expansion logic zfs_do_bookmark update man page warn redaction bookmark handling add test case cli pyyzfs libzfs_core binding reviewed matt ahrens matt delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 9571,,
1335,7b49bbc8164a8a5cd31cf1ba7a6cd88269fec8d0,atthew Macy <mmacy@freebsd.org>, 2020-02-11 13:12:41 -0800,9962, address coverity warning 9902 coverity report variable may null due way dirty record handled case add comment verify make clear silence warning reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9962,,
1336,dceeca5bbd00188e7dcb1cf66080dcf2a0b47601,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-10 14:54:12 -0800,9968, add missing call dbuf_read_impl explained comment dbuf_read dbuf_read_impl circumstance parent lock specified dblt dropped existing dbuf_read_impl done two exist path additionally ensure mutex unlocked dropping parent lock reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 9968,,
1337,bc67cba7c0f8b860746b3c80251fc8a968600d61,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2020-02-10 18:00:05 -0400,9729, fix zdb flag zdb fails due indirect block compressed flag working tandem specified fix flag parsing code create zfs test zdb block display also fix zio flag dotted notation vdev portion dva i.e 0.0 offset length fails reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 9640 close 9729,,
1338,dda702fd16bafac1ecb081590f6b00eea8a1136b,raham Christensen <graham@grahamc.com>, 2020-02-10 16:13:46 -0500,9893," bash script use usr bin env bash shebang system distros bin bash script difficult run development time example system nixos bin bash problem nixos building zfs package build environment automatically replaces shebang corrected path problem much annoying development time either script run correct local machine deal perpetually dirty work tree committing patch confirmed existing script use usr bin env locate bash thinking safe transformation handful shebang repository work system patch useful specifically commitcheck.sh otherwise validate commits submission remaining shebang nixos system 1274 bin ksh bin ksh bin ksh bin sed usr bin perl usr bin ksh bin nawk plus create invalid shebang test zfs test test functional mv_files echo bin ksh test_base_dir exitszero.ksh chose leave alone gauge interest much smaller patch first fix easy enough simply using usr bin env ksh bin ksh usr bin ksh fix set much trickier quoting gnu coreutils manual operating system e.g gnu linux bsds treat text first space single argument using env script thus possible specify multiple argument env support argument mine gnu coreutils 8.31 doe though feature new since april 2018 gnu coreutils 8.30 http cgit coreutils.git commit worse requires argument split string process split separate argument used pas multiple argument shebang line example seq nix build nixpkgs coreutils bin env sort nix ... coreutils 8.31 bin env sort nrâ file directory nix ... coreutils 8.31 bin env use pas option shebang line seq nix build nixpkgs coreutils bin env sort   gnu coreutils say freebsd env doe though wonder freebsd would unhappy http www.gnu.org software coreutils manual html_node env invocation.html env invocation busybox v1.30.1 doe doe like option seq nix build nixpkgs busybox bin env sort env execute sort file directory toybox 0.8.1 also doe also doe option seq nix build nixpkgs toybox bin env sort env exec sort file directory  rate patch merges remaining 1,500 updated much larger patch probably include checkstyle like test asserting new shebang use usr bin env also mind dealing nixos weirdness project would prefer reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed graham christensen graham grahamc.com close 9893",,
1339,57940b435cd1dab6529babcda095c47ecee8a8e9,yan Moeller <ryan@iXsystems.com>, 2020-02-10 16:11:30 -0500,9964, share code spa deadman tunables need thing update spa tunables let share code let match type literal initializing variable type variable reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed ryan moeller ryan ixsystems.com close 9964,,
1340,572b5b302a8353814f8631085fcdb7623698b191,yan Moeller <ryan@iXsystems.com>, 2020-02-10 16:10:25 -0500,9953, zts test zvol different volmodes found zvol code issue volmode dev revealed zts add basic operation exercise code path volmode test reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9953,,
1341,31b160f0a6c673c8f926233af2ed6d5354808393,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2020-02-10 21:59:50 +0100,9749, icp improve aes gcm performance currently simd accelerated aes gcm performance limited two factor need disable preemption interrupt save fpu state using reverse done due way code organized see pay price twice byte gcm block processed processing done operating single gcm block use simd instruction limited aes encryption counter block aes galois multiplication pclmulqdq lead fpu fully utilized crypto operation solve crypto processing larger chunk owning fpu module parameter introduced make chunk size tweakable default kib step alone roughly double performance tackled porting using highly optimized openssl aes gcm assembler routine processing ctr aes gmult single routine step together result 32x reduction time spend decryption routine leading approximately 12x throughput increase large 128 kib block lastly commit change default encryption algorithm aes ccm aes gcm setting encryption property reviewed brian behlendorf behlendorf1 llnl.gov reviewed jason king jason.king joyent.com reviewed tom caputi tcaputi datto.com reviewed richard laager rlaager wiktel.com signed attila fã¼lã attila fueloep.org close 9749,,
1342,fa3922df75d722724dd51819cb49da0418d054f5,atthew Macy <mmacy@freebsd.org>, 2020-02-07 14:22:29 -0800,9909, factor dbuf_sync_bonus factor portion dbuf_sync_leaf responsible handling bonus buffer dbuf_sync_bonus helper function reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed matt macy mmacy freebsd.org close 9909,,
1343,818d4a87fd59ddbacc8ae0c8b67eb1577ca9b069,gor K <igor@dilos.org>, 2020-02-07 23:32:52 +0300,9960, zts add is_dilos function future zts update reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed igor kozhukhov igor dilos.org close 9960,,
1344,9825e7ad1d5d8b36cf1afdbc6861bb52269f8317,yan Moeller <ryan@iXsystems.com>, 2020-02-07 15:31:38 -0500,9963, zts use instead byte portability freebsd doe long opts reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed ryan moeller ryan ixsystems.com close 9963,,
1345,795699a6cc28b8f1059397e03d1a86d576bfc7dc,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-06 12:37:25 -0800,9961, linux 5.6 compat function added replaces existing function change renames wrapper function consistent upstream name update compatibility code older kernel accordingly reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9956 close 9961,,
1346,0dd73648532e8654e07c28bba6c80bfb779a4938,rian Behlendorf <behlendorf1@llnl.gov>, 2020-02-06 10:30:41 -0800,9961, linux 5.6 compat struct proc_ops proc_ops structure introduced replace use file_operations structure registering proc handler change creates new kstat_proc_op_t typedef compatibility used pas around correct structure change additionally add const keyword existing proc operation structure reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9961,,
1347,e0ce98d57c44b324ffa99f0620ef8721814fc43e,lexander Motin <mav@FreeBSD.org>, 2020-02-06 16:21:06 -0500,9930, reduce number atomic_add call aggsum previous code used atomics borrow flush since asc_borrowed asc_delta accessed holding asc_lock make sense modify as_lower_bound as_upper_bound multiple step instead new code atomics case one per as_ _bound variable think even overkill simple atomic store load could used since modification done as_lock primitive zfs code make borrow code consider previous borrow value mixed request pattern reduce chance needing borrow much larger request follows tiny one needed borrow also reduce as_numbuckets uint64_t u_int make sense use large division operation every aggsum_add reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 9930,,
1348,77122f9d68a3a6e3fbd266652467acbd7b5d3225,omain Dolbeau <romain.dolbeau@european-processor-initiative.eu>, 2020-02-06 18:26:13 +0100,9942, replace static per cpu dynamic per cpu data solves issue loading spl module risc reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau european processor initiative.eu close 9942,,
1349,af09c050e95bebbaeca52156218f3f91e8c9951a,omain Dolbeau <romain.dolbeau@european-processor-initiative.eu>, 2020-02-06 18:25:29 +0100,9943, fix static data link fno common fno common new default gcc replacing fcommon gcc static data must allocated reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau european processor initiative.eu close 9943,,
1350,5b7e6a36175c1c13803785557b17977d2a9ecd9d,yan Moeller <ryan@iXsystems.com>, 2020-02-06 12:24:37 -0500,9946, fix unknown flag fno ipa sra clang doe recognize fno ipa sra add check reviewed brian behlendorf behlendorf1 llnl.gov reviewed prakash surya prakash.surya delphix.com signed ryan moeller ryan ixsystems.com close 9946,,
1351,81acb1edcb595a7377a6ad188c65dd23f2702ce9,erardwx <Gerardwx@users.noreply.github.com>, 2020-02-05 14:31:53 -0500,9918, suggest using visudo edit suggest visudo allows editing sudoers file safe fashion reviewed brian behlendorf behlendorf1 llnl.gov signed gerardwx gerardw alum.mit.edu close 9918,,
1352,cbd8f5b759a7903a04aa38d858bb36f5dac19cb5,lexander Motin <mav@FreeBSD.org>, 2020-02-05 14:08:44 -0500,9931, dbuf layer move db_link cache line db_blkid db_level allows significantly reduce avl_add time dbuf_create system large ram huge number dbufs per dnode avoid access dbuf_caches .size highly congested high iop never stay cache long time use local value receiving way remove bump dbuf_evict_one see point dbuf eviction done insertion  reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 9931,,
1353,cccbed9f98597c2c354b218b0578625cc26358aa,atthew Macy <mmacy@freebsd.org>, 2020-02-05 11:07:19 -0800,9902, convert dbuf dirty record record list list_t additionally pull state machine comment upcoming async cow work reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed matt macy mmacy freebsd.org close 9902,,
1354,741db5a3466236620612772319c3401171d3f2b6,lexander Motin <mav@FreeBSD.org>, 2020-02-04 11:49:12 -0500,9933, prepare ks_data calling kstat_install violated sequence described kstat.h least freebsd kstat_install provided name create sysctls name available time end bad reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed alexander motin mav freebsd.org sponsored ixsystems inc close 9933,,
1355,52c487a0e4432269b0b0ddc034155a8cf62e0299,©æ´å® <w12101111@gmail.com>, 2020-02-05 00:47:38 +0800,9927, use werror check compiler support specific option default clang treat unknown warning option warning need use werror make error reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed 12101111 w12101111 gmail.com close 9927,,
1356,8c4987c489c842a7dcd2356bdfd53e2aacc33316,yan Moeller <ryan@iXsystems.com>, 2020-02-04 11:40:08 -0500,9913, restore aclmode remove acltype freebsd replaces placeholder matching done nfsv4 acls 9709 freebsd hide linux hide  test already assume arrangement reviewed brian behlendorf behlendorf1 llnl.gov reviewed alexander motin mav freebsd.org signed ryan moeller ryan ixsystems.com close 9913,,
1357,07bc2bc2319655c0a9dd92f4a732467bfeac4874,yan Moeller <ryan@iXsystems.com>, 2020-02-03 13:52:41 -0500,9917, fix const correctness raidz math clang warns error cast const void struct drop const qualifier reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9917,,
1358,ec213971274a38e9ad3558e12bd57d6a97f0acad,atthew Ahrens <mahrens@delphix.com>, 2020-02-03 09:33:14 -0800,9885, async zvol minor node creation interferes receive finish zfs receive call async true kick thread create minor device node dev zvol poolname ... async thread call call dmu_objset_own put long hold dataset since zvol minor node creation asynchronous happen zfs_ioc_recv _new ioctl zfs receive process completed first receive ioctl completed userland may attempt another receive dataset e.g next incremental stream second receive asynchronous minor node creation interfere one another several different way require exclusive access dataset second receive finishing doe fail ebusy async minor node creation already long hold dataset cause 2nd receive fail async udev rule fail zvol_id systemd udevd try open device second receive async attempt minor node creation owns dataset via cause minor node dev exist udev generated dev zvol ... exist async minor node creation silently fail ebusy first receive try dataset second receive already owns dataset address problem change synchronously creates minor node avoid lock ordering problem asynchrony introduced fix see 3681 create minor node open context lock held rather syncing contex originally done implementation note generally need traverse child prefetch anything e.g running recv snapshot create clone subcommands zfs need recursion importing opening pool loading encryption key existing recursive asynchronous prefetching code preserved use case channel program may need create zvol minor node creating snapshot zvol snapdev property set figure snapshot created running lua program syncing context case need remember snapshot created try create minor node open context lua code completed additional zvol use case asynchronously dataset cause similar problem e.g changing volmode snapdev property problematic recursive touch datasets involved operation still potential interference subsequent operation future case similarly converted create zvol minor node synchronously open context async task removing renaming minor objset problem however may make sense also convert operation happen synchronously open context future reviewed paul dagnelie pcd delphix.com reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 65948 close 7863 close 9885,,
1359,147622b2f1e5d8c51b1aeb4735d5e0fa5c91ff78,rakash Surya <prakash.surya@delphix.com>, 2020-02-03 09:21:05 -0800,9921, disable fipa sra using enable debuginfo better enable dynamic tracing tool e.g bpftrace change disables fipa sra compilation optimization way function signature changed compiler allows better attach kprobes kretprobes dynamic tracing tool otherwise compiler may append .isra function name possibly change function argument well reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed prakash surya prakash.surya delphix.com close 9921,,
1360,591505dc2737bcd77c587e369e1d91b0fd97325c,yan Moeller <ryan@iXsystems.com>, 2020-01-31 12:00:47 -0500,9914, zts use ext4 linux add workaround freebsd ensure dirty data synced taking snapshot remounting read remount read write snapshot reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9914,,
1361,fe7c15985b184e6e15320755ebcea0ec786be59c,yan Moeller <ryan@iXsystems.com>, 2020-01-31 11:55:51 -0500,9912, left align index prop index type prop display string aligned left right   freebsd 13_0 current r356528 zfs list name aclmode mountpoint name aclmode mountpoint passthrough foo discard foo    freebsd 13_0 current r356528 zfs list name aclmode mountpoint name aclmode mountpoint passthrough foo discard foo  reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9912,,
1362,12430796d65f7bd0df7168adfb3d466476a33efd,yan Moeller <ryan@iXsystems.com>, 2020-01-31 11:52:29 -0500,9899, use correct spelling jailed test freebsd jail zone reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9899,,
1363,a3bddd49f8397b3e10872a793d60c8bbbdbe2a80,yan Moeller <ryan@iXsystems.com>, 2020-01-31 11:51:23 -0500,9898, zts fix default linux missing default value dev_dskdir set dev fix resulting fallout slice_prefix seems like good candidate including default reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9898,,
1364,9d8ce2457d67e112552ac20b9408464bc246b727,yan Moeller <ryan@iXsystems.com>, 2020-01-29 14:25:15 -0500,9907, zts freebsd tunable reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9907,,
1365,395a6b19d35c97d14d9a3a009433a727a5f59e41,yan Moeller <ryan@iXsystems.com>, 2020-01-29 14:24:18 -0500,9908, zts simplify zero_partitions freebsd avoid great deal sleep simply destroying whole partition table one shot gpart reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9908,,
1366,74b4d349b3740cf654f762e4afe1e51afc9febb8,yan Moeller <ryan@iXsystems.com>, 2020-01-29 14:23:20 -0500,9906, zts reverse constrained path lookup order freebsd base system zfs utils sbin zof utils install usr local sbin ensure link zof utils base utils searching utils constrain path test reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9906,,
1367,0ecd9109238f1e322b9a3a44781277b7b7ce5c38,yan Moeller <ryan@iXsystems.com>, 2020-01-28 11:38:02 -0500,9901, zts use edonr freebsd freebsd support feature edonr reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9901,,
1368,7a298ae97589d758d2b9aadf78b91a2af450d37a,yan Moeller <ryan@iXsystems.com>, 2020-01-28 11:36:33 -0500,9900, zts eliminate random shuf consolidate code gnu freebsd sort randomize input reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9900,,
1369,25df8fb42ffa62e4ad3855a8cd4660eeedc80e1f,raham Christensen <graham@grahamc.com>, 2020-01-27 16:32:52 -0500,9892, add .editorconfig document git whitespace setting project work use tab authoring first patch wrestle editor introduce whitespace editor .editorconfig file supported large number editor box many plugins first time contributor say certain setting totally correct thus far git editor satisfied enough considered adding git config local format.signoff true wanted respect warning format.signoff boolean value let enable signoff option format patch default note adding signed line patch conscious act mean certify right submit work open source license please see document discussion reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed graham christensen graham grahamc.com close 9892,,
1370,e4c439021f09352ee757cb508fda061586f4664b,yan Moeller <ryan@iXsystems.com>, 2020-01-27 16:29:25 -0500,9871, zts move test common.run test run platform currently implemented need zed fault need zed mmp need need procfs zpool_expand need udev event zed zpool_reopen need scsi_debug need modify vfstab zvol_swap_00 _pos need swaphigh swaplen reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9871,,
1371,a3403164d700e0c32dd89ba09bbcaf48bdee47f2,ed Bass <bass6@llnl.gov>, 2020-01-24 11:00:46 -0800,9832, zdb add support object range zdb allow range object identifier dump may useful dumping large dataset want break multiple phase resume previous scan left object type selection flag supported reduce performance overhead verbosely dumping unwanted object reduce amount post processing work needed filter unwanted object zdb output change extends existing syntax backward compatible way base case range specify single object identifier dump range object identifier intermixed command line parameter usage synopsis object range take form start end flag start starting object number end ending object number upper bound flag optional flag select object type object default zfs directory zfs file spa space map zap negate effect next flag example dump file object zdb tank fish dump file directory object zdb tank fish dump type except file directory object zdb tank fish dump object specific range zdb tank fish 1000 2000 reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed paul zuchowski pzuchowski datto.com signed ned bass bass6 llnl.gov close 9832,,
1372,8e9e90bba3148b87bc6525c98ac3a0a9200a89f6,ony Nguyen <tony.nguyen@delphix.com>, 2020-01-23 22:18:02 -0700,9877, performance test variable missing perf_ prefix adding expected perf_ prefix randseed comppercent compchunk reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony nguyen tony.nguyen delphix.com close 9877,,
1373,0d37c2bb2eea2820309675ce9e2593404c5d94f0,ohn Wren Kennedy <john.kennedy@delphix.com>, 2020-01-23 22:14:55 -0700,9876, zts zpool offline requires whole disk name used non loop device zdb_004_pos fails disk argument provided partition rather expected whole disk name reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed john kennedy john.kennedy delphix.com close 9876,,
1374,20ea8540a68ff183f273fc642ac498ccd182d58e,hristian Schwarz <me@cschwarz.com>, 2020-01-24 06:13:42 +0100,9880, fix null pointer deref dbca_errors null discovered preparation zcp support creating bookmark handle case dbca_errors null reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 9880,,
1375,3aea3c9d548b1788ec0eb88d43a7aa33b8c4fcf1,hristian Schwarz <me@cschwarz.com>, 2020-01-24 06:11:54 +0100,9879, doc comment include space allowed character helper function valid_char already allows doc comment date reviewed brian behlendorf behlendorf1 llnl.gov signed christian schwarz cschwarz.com close 9879,,
1376,603059e41ae29239b46702f3cff61675e3fbe2b6,hristian Schwarz <me@cschwarz.com>, 2020-01-24 06:11:06 +0100,9878, script zfs test.sh example add example running single test case reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed christian schwarz cschwarz.com close 9878,,
1377,dbfec5cc09cedfe3a31fc958a80e111f50716929,yan Moeller <ryan@iXsystems.com>, 2020-01-23 20:14:40 -0500,9872, zts get xattr test running freebsd mostly involves reworking platform check make illumos exception thanks unusual way exposing xattrs platform able take advantage recently added xattr wrapper libtest reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9872,,
1378,35b07497c60701465a87aab48fc890a0bc502561,omain Dolbeau <romain.dolbeau@european-processor-initiative.eu>, 2020-01-23 20:01:24 +0100,9539, add altivec raid implement raid function using altivec simd basically neon code translated altivec note fletcher algorithm requires bit operation initial implementation altivec ppc74xx a.k.a ppc970 a.k.a bit operation fletcher reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau european processor initiative.eu close 9539,,
1379,1a69856034304e74b32fb372e89967e91989cafd,yan Moeller <ryan@iXsystems.com>, 2020-01-23 12:38:09 -0500,9873, zts add missing export dev_dskdir default reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9873,,
1380,0ea03c7c8273c2a1a48b86c397c727c076c86a06,hristian Schwarz <me@cschwarz.com>, 2020-01-18 21:40:30 +0100,9867, dmu_send redacted fix memory leak invalid redaction bookmark reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed christian schwarz cschwarz.com close 9867,,
1381,f658f61c722872753e8899a118e11546f136e85a,hristian Schwarz <me@cschwarz.com>, 2019-11-25 20:08:20 +0100,9867, cmd zfs redact better error message common usage error reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed christian schwarz cschwarz.com close 9867,,
1382,7b53e2e5a9c771869e5629e9cca04f2014e7413b,hristian Schwarz <me@cschwarz.com>, 2019-11-23 16:31:38 +0100,9867, cmd zfs send meaningful error message incorrect redaction bookmark reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed christian schwarz cschwarz.com close 9867,,
1383,3d91490f7c69986132f374d016de3753ea790567,atthew Macy <mmacy@freebsd.org>, 2020-01-22 17:55:56 -0800,9865, simplify freebsd locking requirement zfs_replay.c freebsd zfs_vnops code avoids asserting vnode lock held z_replay true limit freebsd specific change couple change necessary drop vnode lock function return held reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9865,,
1384,e2ef1cbf04c713fcdba33f8183e6a61a18f61119,ason King <jasonbking@users.noreply.github.com>, 2020-01-22 19:03:17 -0600,9738, support inheriting property channel program add support channel program inherit property analogous zfs inherit adding function zfs lua api reviewed brian behlendorf behlendorf1 llnl.gov signed jason king jason.king joyent.com close 9738,,
1385,79add96766f03e7382f9a4b356e7a06f66b600f8,ichard Laager <rlaager@wiktel.com>, 2020-01-22 14:45:25 -0600,9863, order zfs import .service multipathd someone using multipathd zfs probably using together ordering zpool import multipathd ready fix import issue multipath configuration tested mike pastore mike oobak.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 9863,,
1386,5206b8228e17a2505c7a1af071135c753cc82d75,atthew Macy <mmacy@freebsd.org>, 2020-01-21 15:06:10 -0800,9862, disable xattr freebsd freebsd mount flag determining disposition xattr disable fetched default route zfs get xattr return correct value reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9862,,
1387,af26a8695847bd6edffc750c3a5d26b430b4704e,atthew Macy <mmacy@freebsd.org>, 2020-01-21 15:05:23 -0800,9861, update tunable macro usage reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9861,,
1388,d3c1e45b7a583e9447b2884c2972987fc49e79c6,atthew Macy <mmacy@freebsd.org>, 2020-01-21 15:04:13 -0800,9860, consolidate recent spl change longer need per platform version reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9860,,
1389,09436c5d885179b302be03d60f0fcc1921745506,yan Moeller <ryan@iXsystems.com>, 2020-01-17 15:41:45 -0500,9854, zts eliminate partitioning zpool_import setup seem need complexity reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9854,,
1390,914bd02f292a8de5033b887ab103248ecb1fdb33,yan Moeller <ryan@iXsystems.com>, 2020-01-17 15:41:03 -0500,9851, zts make dva pattern zdb test robust ensure capture end first dva case multiple dvas line capturing first character reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9851,,
1391,70835c5b755e4fe1e16724e0a5d24e7e451f755c,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-17 12:40:09 -0800,9848, unify target_cpu handling year several slightly different approach used makefiles determine target architecture change update build system makefile handle consistent fashion target_cpu set i386 x86_64 powerpc aarch6 sparc64 made available makefiles used appropriate reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9848,,
1392,e5030fbc2846c347f58e3a0bae436da84b98ef16,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-17 12:38:13 -0800,9853, zts enable remove blkid version check test case skipped version blkid tested either new enough suffer issue patched case centos libblkid 2.23.2 additionally add device partitioning ensure expected partition exist reviewed george melikov mail gmelikov.ru reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9853,,
1393,31712a7ea898bba33a104728b1d96b92d25e468c,yan Moeller <ryan@iXsystems.com>, 2020-01-16 16:26:26 -0500,9844, zts fix incorrect usage check meant used command substitution reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9844,,
1394,f12e42cccf31d6077f585a562d7e7ed3483291b1,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2020-01-16 12:22:49 -0500,9733, zdb accept numeric objset alternative dataset name zdb allows decimal hexadecimal objset specified permanent error reported hexadecimal number objset object zpool status use zdb pool objset object determine name objset object error reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed paul zuchowski pzuchowski datto.com close 9733,,
1395,1b64627e7335e9f38d66424cdd242b3d0889b060,ony Nguyen <tony.nguyen@delphix.com>, 2020-01-16 10:16:16 -0700,9847, zfs performance suite use json fio output making default fio output format json thus easier post process performance result get previous normal output format perf_fio_format set prior invoking zfs tests.sh example perf_fio_format normal zfs tests.sh perf runfiles perf.run reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony nguyen tony.nguyen delphix.com close 9847,,
1396,1bb5f5e2b47336ddc8d22833801eadbee8ce21e6,yan Moeller <ryan@iXsystems.com>, 2020-01-15 19:23:29 -0500,9845, zts fix ksh path btree test every ksh script bin ksh shebang going assume path least consistent reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed ryan moeller ryan ixsystems.com close 9845,,
1397,6f481612f37a4cffaff142b80f6a4c37257406c6,yan Moeller <ryan@iXsystems.com>, 2020-01-15 12:27:22 -0500,9841, zts avoid using pcre grep zdb test freebsd grep doe support perl extension reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9841,,
1398,83c30248efb1ce1d6f0c5de222159322ac2b9203,yan Moeller <ryan@iXsystems.com>, 2020-01-15 12:26:26 -0500,9840, zts fix freebsd using egrep reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9840,,
1399,900010daf1d45f970917dc0169c754e59a59ad07,yan Moeller <ryan@iXsystems.com>, 2020-01-15 12:24:55 -0500,9839, zts remove path workarounds freebsd longer needed fixing device name matching whole disk libzutil freebsd reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed ryan moeller ryan ixsystems.com close 9839,,
1400,2476f103069e83e17d2c9cec4191af34a7996885,yan Moeller <ryan@iXsystems.com>, 2020-01-14 17:57:28 -0500,9831, zts catalog tunable name test tunables.cfg update test use variable tunable name reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9831,,
1401,61152d1069595db08f9b53ee518683382caf313e,om Caputi <tcaputi@datto.com>, 2020-01-14 15:25:20 -0500,9829, fix erratum handling resuming stream currently handling erratum two issue allow check issue bypassed using resumable sends first issue drc drc_fromsnapobj set resuming code non resuming code cause skip check from_ivset_guid second issue resumable sends clean disk state fail check dmu_recv_stream happen data received result two bug user attempt resumable send dataset without from_ivset_guid fail initial dmu_recv_stream check leaving valid resume state send resumed skip check allowing receive completed commit fix issue setting drc drc_fromsnapobj resuming receive path ensuring properly cleaned fail initial dmu_recv_stream check reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9818 close 9829,,
1402,f744f36ce583ed27dcfcda93ecd0af1df994a891,ichard Laager <rlaager@wiktel.com>, 2020-01-14 12:11:07 -0600,9819, document zfs change key caveat discussed 2019 openzfs leadership meeting need clear limitation zfs change key changing user key doe change master key doe currently overwrite old wrapped master key disk reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed george melikov mail gmelikov.ru reviewed garrett field ghfields gmail.com reviewed kjeld schouten kjeld schouten lebbing.nl signed richard laager rlaager wiktel.com close 9819,,
1403,7e2da7786ec089d1b9f9010677dc8e8a65dc01a1,oli10K <ezomori.nozomu@gmail.com>, 2020-01-14 18:09:59 +0100,9813, kmc_kvmem disrupts kv_alloc memory alignment expectation kernel kasan enabled following failure observed soon zfs module loaded verify is_p2aligned ptr page_size failed panic spl kmem cache.c 228 kv_alloc problem kmalloc never guaranteed aligned allocation requirement resulted zfsonlinux spl 8b45dda removed kmalloc usage kv_alloc gfp_aligned flag equivalent functionality provided kernel commit partially reverts 66955885 6d948c35 prevent malloc allocation kv_alloc reviewed kjeld schouten kjeld schouten lebbing.nl reviewed michael niewã hner mniewoehner.de reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9813,,
1404,68a192e4b7627f8f00d412ba68c291fcc90d3de9,yle Evans <kevans91@users.noreply.github.com>, 2020-01-14 10:49:54 -0600,9833, libzfs add zfs_mount_at function zfs_mount_at mount dataset arbitrary mountpoint rather configured mountpoint may used consumer wish temporarily expose dataset another mountpoint without altering dataset pool property used freebsd libbe be_mount mount boot environment arbitrary mountpoint reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed kyle evans kevans freebsd.org close 9833,,
1405,e458fcca7516a0ceac7aaecc4aacfef1114eb216,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-13 16:43:59 -0800,9837, change http zfsonlinux.org link http zfsonlinux.org update project website link contained repository reference secure http zfsonlinux.org address reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru reviewed garrett field ghfields gmail.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9837,,
1406,a4c3e3c74fe1f3cde5df0322f77038fc343163e5,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-13 16:42:23 -0800,9828, zts remove obsolete zts report.py exception disk_reason udev_reason exception removed since apply unsupported kernel version v3.10 check test case kept purpose documentation useful sanity check test environment reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9828,,
1407,602f667285b3c72bfdcd68578105ff1cc83a36e8,yan Moeller <ryan@iXsystems.com>, 2020-01-13 18:21:42 -0500,9834, zts clean bit fix last property empty value freebsd make code bit readable reviewed kjeld schouten kjeld schouten lebbing.nl reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9834,,
1408,6e1c594d6491ed5c9cc052ad5d94098eff684e2a,yan Moeller <ryan@iXsystems.com>, 2020-01-10 16:24:59 -0500,9826, zts create xattr helper hide platform create xattr helper hide platform update usage test doe generally aim enable xattr test yet necessary step direction reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9826,,
1409,ba0ba69e50efeda7190b59f27c23ada0edf6f36b,om Caputi <tcaputi@datto.com>, 2020-01-10 13:16:58 -0500,9007, add zfs send saved flag commit add saved zfs send command flag allows user send partially received dataset useful migrating backup server new hardware flag compatible resumable receives even saved send interrupted resumed flag doe require user kernel abi change new feature flag send stream format reviewed paul dagnelie pcd delphix.com reviewed alek pinchuk apinchuk datto.com reviewed paul zuchowski pzuchowski datto.com reviewed christian schwarz cschwarz.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9007,,
1410,9ab6109fb51c88e9dc43622432b300efed036995,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-10 09:14:49 -0800,9827, zts improve zts zts test could exceed minute test limit killed test infrastructure prevent speed test case removing redundant pool configuration following vdev type tested mirror raidz cache special function need wait block device removed part test reviewed paul zuchowski pzuchowski datto.com signed brian behlendorf behlendorf1 llnl.gov close 9827,,
1411,36e5b4a94b43341ec1d2dc07cf26485997609edf,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2020-01-09 20:21:33 +0100,9793, performance test fio enhancement set fixed chunk pattern sane compression adjust buffer blocksize cross blocksize repeatability use fixed seed improved repeatability move comp percent comp chunk variable set variable mostly old default reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9793,,
1412,90ae48733c6bf6343213525d50cb9d731fb22dfd,yan Moeller <ryan@iXsystems.com>, 2020-01-09 12:31:17 -0500,9824, zts provide alternative shuf freebsd shuf package upstream port recently disappeared longer available create function hide usage shuf implement using seq random freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9824,,
1413,4abd7d80b2904135a9518cebf190f36f4f3fa3a8,ick Black <dankamongmen@gmail.com>, 2020-01-08 20:50:05 -0500,9821, remove parameter name libzfs.h signature libzfs.h provide name parameter signature function included problem per line parameter conflict line define terminfo term.h present least decade make difficult compile code making use zfs terminfo reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed kjeld schouten kjeld schouten lebbing.nl signed nick black dankamongmen gmail.com close 9821,,
1414,f8d55b95a5ed825d4fb50cc8e0e03edf25bd44e3,yan Moeller <ryan@iXsystems.com>, 2020-01-08 12:08:30 -0500,9820, zts eliminate function named random name overlap command needed freebsd also sense two random function nearly thing consolidate general one name  reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9820,,
1415,028e3b3b1a8d15a9ab5a0c925ca32fd3851cfa36,orenz <lhuedepohl@users.noreply.github.com>, 2020-01-08 02:03:00 +0100,9802, avoid document systemd mount generator system opensuse example yet writeable temporary file system available bash bail error create temp file document read file system document zfs mount generator simple fix change multi line echo statement reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed lorenz hã¼depohl dev close 9802,,
1416,67709516db7fb15f1e482a3c4f53ca7d4bc8a4ff,eHackEd <DeHackEd@users.noreply.github.com>, 2020-01-07 15:41:53 -0500,9809, zfs module parameter add missing item ran report output modinfo zfs.ko commit add everything missing corrects renamed module parameter specifically second renamed ad796b8a3 renamed c853f382d also fix variable type inconsistency unsigned int uint reviewed george amanakis gamanakis gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 9809,,
1417,798b2b84773860d802f3eac147f817f038ee4b7a,yan Moeller <ryan@iXsystems.com>, 2020-01-07 15:38:12 -0500,9815, zts add sunos.run dist data missed file introduced reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9815,,
1418,c24fa4b19a1b117945f3235e014f926fe93b0c5a,oli10K <ezomori.nozomu@gmail.com>, 2020-01-07 00:40:06 +0100,9390, fix zpool add dedup special log device dedup special log device zpool add doe print correctly vdev type zpool add pool dedup tmp dedup special tmp special log tmp log would update pool following configuration pool tmp normal tmp dedup tmp special tmp log could lead storage administrator modify zfs pool unexpected unintended vdev configuration reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9783 close 9390,,
1419,bc9cef11fddfe8e6e240477084a49f4bad1fb4f3,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-06 11:17:53 -0800,9788, fix qat allocation failure return value qat_compress fails allocate required contiguous memory mistakenly return success prevents fallback software compression taking compressing block resolve issue correctly setting local status variable exit path furthermore initialize cpa_status_fail ensure qat_compress always fails safe guard similar bug future reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9784 close 9788,,
1420,581ca28169eaa2c3285057876f42bab3314051ad,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-06 11:14:19 -0800,9806, zts cleanup partition table cleanup_devices function remove partition created device force partition table reread needed ensure blkid date version device partition used zfs cleanup_devices call removed since operated partition instead device needed lastly ddidecode may called parted therefore added constrained path reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9806,,
1421,33dc49e0c0ced678b9de5f53a4689b79ded87737,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-06 10:43:32 -0800,9803, fix option description corresponding zpool status option update description reference correct option reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 9803,,
1422,665684d721f01772f3557b952829e2a3a5c35423,yan Moeller <ryan@iXsystems.com>, 2020-01-03 12:10:17 -0500,9795, zts add helper disk device check replace test equivalent is_disk_device used instead freebsd block cache layer device reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9795,,
1423,d7164b27bee6c2837affcc42892fbd4b45dd13ff,yan Moeller <ryan@iXsystems.com>, 2020-01-03 12:08:23 -0500,9794, zts move dumpdev test sunos.run neither freebsd linux support dumping zvols dilos still test file kept test relocated sunos.run is_illumos function added libtest.shlib eliminate awkward platform check function expected used outside illumos sanitized extraneous freebsd adaptation reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9794,,
1424,cc618d179e87fa13b67c98e93cf92569d995dd20,rian Behlendorf <behlendorf1@llnl.gov>, 2020-01-02 18:08:45 -0800,9791, static symbol exported icp declared static exported icp resolve following warning observed building 5.4 kernel warning ... icp static export_symbol warning ... icp static export_symbol reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9791,,
1425,54007c791f74c4b0bc84d3837e5c4fbec6c9cfc8,yan Moeller <ryan@iXsystems.com>, 2020-01-02 16:48:06 -0500,9790, add freebsd core handling zloop.sh use correct path libtool ztest reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9790,,
1426,82e996c2616af6254002065398de7cfb6929c4fd,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2019-12-30 18:24:41 +0100,9753, improve pull request guideline split advice two section add authored instruction add description draft using appropriate reword zfs test suite checklist question link zfs tests.sh zloop.sh reviewed marcel schilling mdc berlin.de reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com authored marcel schilling mdc berlin.de authored brian behlendorf behlendorf1 llnl.gov authored richard laager rlaager wiktel.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9753,,
1427,8b3438e5034c192c652eafe3180464a57a839174,ed Bass <bass6@llnl.gov>, 2019-12-30 09:14:40 -0800,9765, zdb print block checksum verbosity include checksum output zdb dddddd along indirect block information already displayed example output follows long line trimmed zdb dddddd tank fish 128 dataset tank fish zpl 259 cr_txg 16.2m object rootbp object lvl iblk dblk dsize dnsize lsize full type 128 128k 128k 634k 512 100.00 zfs plain 168 bonus system attri dnode flag used_bytes dnode maxblkid path uid gid atime sat dec 2019 mtime sat dec 2019 ctime sat dec 2019 crtime sat dec 2019 gen mode 100755 size 964592 parent link pflags 40800000104 indirect block 2c0000 400 c021e00 400 20000l 400p 227800 13800 20000l 13800p cksum 167a 20000 25ec00 17c00 20000l 17c00p cksum 2312 40000 276800 18400 20000l 18400p cksum 24e0 60000 2a7800 18800 20000l 18800p cksum 25be 80000 28ec00 18c00 20000l 18c00p cksum 2579 a0000 24d000 11c00 20000l 11c00p cksum 140a c0000 23b000 12000 20000l 12000p cksum 164e e0000 221e00 5a00 20000l 5a00p cksum 9de790 segment size reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 9765,,
1428,153db761979524e0d91ef3596d3d705aa5690148,en Cordero <bencord0@condi.me>, 2019-12-29 19:25:01 +0000,9780, zfs load key.sh zfs zfs binary change merged yesterday refer zfs binary initramfs actually unset shell variable commit change line call zfs directly like surrounding code  reviewed brian behlendorf behlendorf1 llnl.gov reviewed garrett field ghfields gmail.com reviewed richard laager rlaager wiktel.com signed ben cordero bencord0 condi.me close 9780,,
1429,2c47bd575a4b7b77f91355e49ec691b60ea2f46f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-28 08:43:23 -0800,9777, zts fix pool_state cleanup externally faulted vdev brought back online error cleared pool destroyed failure leave vdev valid active label vdev may used create new pool without flag potentially leading subsequent test failure additionally remove unreachable log_pass setup.ksh reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9777,,
1430,edb24bec3b90fb47d82254ecffc250d346ee77f9,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-27 16:41:16 -0800,9775, zts replace var tmp test_base_dir remove hardcoded instance var tmp use test_base_dir order allow zts optionally run alternate directory using zfs tests.sh path reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com reviewed igor kozhukhov igor dilos.org reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9775,,
1431,a6f6ef8bda9d012f3217acd2e94cf0dd445ae5c1,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-27 12:12:41 -0800,9774, zts python 3.5 default behavior json.tool changed preserve input order rather lexical order test case expects output sorted apply sort key option json.tool command using python 3.5 option supported http docs.python.org library json.html module json.tool reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9774,,
1432,590ff61a5520214c9ad7101c55d87adaa580e15e,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-27 12:11:27 -0800,9773, zts devices_001_pos devices_002_neg update devices_001_pos devices_002_neg test case special block device file created backed zfs volume specifying specific device allows major minor number easily determined furthermore avoids potentially dangerous behavior opening first block device happen find dev reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9773,,
1433,d5c97f3de7ac3d5568bc641cc87a2edf37f8b9b5,teve Mokris <smokris@softpixel.com>, 2019-12-26 13:57:05 -0500,9022, avoid crash importing pool corrupt metadata skip invalid dvas importing pool readonly mode addition config untrusted upon encountering dva null vdev fail gracefully instead panicking null pointer dereference reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed steve mokris smokris softpixel.com close 9022,,
1434,ad353e214798619ef4244f84325eb48d8b1afdab,am-lunt <samuel.j.lunt@gmail.com>, 2019-12-26 12:55:20 -0600,9764, initramfs prompt keylocation file encryption key stored file initramfs prompt password example could case boot partition stored removable medium present boot time reviewed brian behlendorf behlendorf1 llnl.gov reviewed garrett field ghfields gmail.com reviewed richard laager rlaager wiktel.com reviewed kjeld schouten kjeld schouten lebbing.nl signed sam lunt samuel.j.lunt gmail.com close 9764,,
1435,8cda5c5ce9dfd26591fa26b7be17347ef6091250,ick Black <dank@qemfd.net>, 2019-12-26 13:52:14 -0500,9752, libspl declare aok extern header rather defining new instance aok every compilation unit includes header single instance defined zone.c header declares extern reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed nick black dankamongmen gmail.com close 9752,,
1436,635a01aafdd7191e32cd1228e96dc90ddfe0d899,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-26 10:50:23 -0800,9751, cancel initialize trim running zpool initialize trim must cancelled prior call unload metaslabs set ms_group null reviewed igor kozhukhov igor dilos.org reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 8602 close 9751,,
1437,80bde2c4ba3720526bb344b4532db98c073cd6bd,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-26 10:49:07 -0800,9769, zts test case failure force pool sync invoking zdb ensure updated dnode block persisted disk refreserv_raidz wait dev zvol link created removed important device volume name used repeatedly btree_test add missing .gitignore file btree_test binary reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9769,,
1438,c587b2c7d8d2f6d127fe4266eef017ab7d8b8972,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-23 14:24:36 -0800,9759, update maximum kernel version 5.4 increase maximum supported kernel version 5.4. verified using fedora 5.4.2 300.fc31.x86_64 kernel reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9754 close 9759,,
1439,54aefa6abf1bafc2fca2cfce8565c7435bde8e97,yan Moeller <ryan@iXsystems.com>, 2019-12-20 12:31:59 -0500,9750, fix test pattern zts report.py pattern updated match test output changed include platform identifier platform specific test reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9750,,
1440,9fb2771aa5f53a14f8c30dca6b9f609d192e50f6,ony Hutter <hutter2@llnl.gov>, 2019-12-19 16:26:07 -0800,9340, colorize zpool status output zfs_color env variable set use ansi color output zpool status column header bold degraded offline pool vdevs yellow non zero error counter faulted vdevs pool red status action section yellow displaying warning also includes new faketty function libtest.shlib compatible freebsd code provided freqlabs reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed tony hutter hutter2 llnl.gov close 9340,,
1441,5e8ac0559046e8432bc7ae3232e4d4d746b09a4d,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-19 15:32:56 -0800,9748, zts various test case fix devices_001_pos devices_002_neg failing freebsd zts merged due missing function keyword pool_state occasionally fails due insufficient delay checking zpool status increasing delay second resolved issue local testing fails run tree logged command actually zfs updated regex accordingly reviewed john kennedy john.kennedy delphix.com reviewed tony hutter hutter2 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9748,,
1442,523fc80069477e7ae493834f93ea3d37ce747cc8,ohn Wren Kennedy <john.kennedy@delphix.com>, 2019-12-19 12:53:55 -0700,9717, test btree implementation used range tree additional test case btree implementation see 9181 reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed john kennedy john.kennedy delphix.com close 9717,,
1443,a3640486fffc592806c16f5149170ed659c94c2c,yan Moeller <ryan@iXsystems.com>, 2019-12-19 12:31:16 -0500,9746, update zfs.sh work freebsd extend zfs.sh script load unload zfs kmods freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed ryan moeller ryan ixsystems.com close 9746,,
1444,d16a207f2edd19ece593967e7e83b7e2217d04f9,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-16 16:03:31 -0800,9732, cppcheck warning possible null pointer dereference nvh move nvh void buf assignment buf null check resolve warning interestingly cppcheck 1.88 correctly determines existing code safe cppcheck 1.86 report warning reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1445,487bddad67f5abf4f4d8020befd5792743ff8657,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-16 15:53:43 -0800,9732, cppcheck error address local auto variable assigned suppress autovariables warning lua interpreter usage unconventional intentional upstream module lua ldebug.c 327 error address local auto variable assigned function parameter reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1446,1e49b288cbb2ffa14b0031d8db77beef6e01974a,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-16 15:49:28 -0800,9732, cppcheck error null pointer dereference who_perm indicated verify local who_perm variable never null parse_fs_perm due existence is_set conditional always true cppcheck 1.88 reporting possible null reference resolve issue removing extraneous is_set variable reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1447,070402f112bcfbf53b7da9bedc9453721b159e96,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-16 10:55:11 -0800,9732, cppcheck warning possible null pointer dereference dnp dnp argument set null dnode_dry_run flag set case early return path executed null pointer dereference given location impossible add additional assert silence cppcheck warning document dbp must never null point function module zfs dnode.c 1566 warning possible null pointer deref dnp reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1448,fe20400db5564d4478fb039e773dd43c1f546d7b,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-16 10:40:29 -0800,9732, cppcheck error memory leak vtoc resolve reported memory leak using dedicated local vptr variable store pointer reported calloc assign passed vtoc function argument success case vptr freed lib libefi rdwr_efi.c 403 error memory leak vtoc lib libefi rdwr_efi.c 422 error memory leak vtoc lib libefi rdwr_efi.c 440 error memory leak vtoc lib libefi rdwr_efi.c 454 error memory leak vtoc lib libefi rdwr_efi.c 470 error memory leak vtoc reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1449,abfdb836079410d73ce0ee25fb4e8aec7e7c59ae,buntu <ubuntu@ip-172-31-20-6.us-west-1.compute.internal>, 2019-12-14 00:16:42 +0000,9732, cppcheck error shifting signed bit value bit cppcheck 1.82 surpress warning regarding shifting many bit __divdi3 implemention algorithm used correct reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1450,7cf1fe63316d20ae7986b4060337d0e2966a42b1,buntu <ubuntu@ip-172-31-20-6.us-west-1.compute.internal>, 2019-12-14 00:07:48 +0000,9732, cppcheck error uninitialized variable cppcheck 1.82 warning issued using list_for_each_ function uninitialized variable functionally fine resolve warning initialize variable reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1451,5215fdd43c3edd25897b8257d802b68ca5583646,buntu <ubuntu@ip-172-31-20-6.us-west-1.compute.internal>, 2019-12-13 23:56:37 +0000,9732, cppcheck error uninitialized variable resolve following uninitialized variable warning practice unreachable due goto replacing goto return resolve warning yield readable code module icp algs mode ccm.c 892 error uninitialized variable ccm_param module icp algs mode ccm.c 893 error uninitialized variable ccm_param module icp algs mode gcm.c 564 error uninitialized variable gcm_param module icp algs mode gcm.c 565 error uninitialized variable gcm_param module icp algs mode gcm.c 599 error uninitialized variable gmac_param module icp algs mode gcm.c 600 error uninitialized variable gmac_param reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9732,,
1452,b8a899e94ff8464dc538dbcdd7864ed49ef279a8,arrett Fields <ghfields@gmail.com>, 2019-12-18 15:32:31 -0500,9736, exchanged two zfs get value command initramfs get_fs_value elsewhere reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed kjeld schouten lebbing kjeld schouten lebbing.nl signed garrett field ghfields gmail.com close 9736,,
1453,7839c4b5e1e79e29f0df4ec9fe5e1e7182473e47,atthew Macy <mmacy@freebsd.org>, 2019-12-18 12:29:43 -0800,9692, update zts work freebsd update common zts script individual test case needed order allow run freebsd high level goal provide compatibility wrapper whenever possible minimize change individual test case reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9692,,
1454,118fc3ef07c53a88ea1d4c21142a2b01c4648434,omain Dolbeau <romain.dolbeau@european-processor-initiative.eu>, 2019-12-18 04:34:52 +0100,9725, minor performance fix neon raid neon code replicates closely sse code including masked bit shift neon like altivec 9539 unsigned bit shift use instead drop masking reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau european processor initiative.eu close 9725,,
1455,fe564845c0c5ec6f0c65fd647b2018c7fc8d672d,homas Geppert <geppi@users.noreply.github.com>, 2019-12-18 02:50:20 +0100,9730, create symbolic link dev disk vdev nvme disk device existing rule miss nvme disk device trailing digit kernel device name e.g nvme0n1 partition nvme disk device already properly handled existing rule env devtype partition reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed thomas geppert geppi digitx.de close 9730,,
1456,3035f14d82d0ba6a68eec0242dd37bfeace424bc,jeld Schouten-Lebbing <kjeld@schouten-lebbing.nl>, 2019-12-18 02:47:58 +0100,9726, move codecov ignore lcov rely exclude test directory remove broken codecov ignore place ignore section forward user codecov lcov ignores reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9726,,
1457,e8b199faec442a2e831f715ce187acf4bce0e930,arrett Fields <ghfields@gmail.com>, 2019-12-17 20:45:06 -0500,9731, force system kernel option quiet display prompt password system utilize tty password entry kernel option quiet set system would appear freeze blank screen fact waiting password entry user since tty fallback method effect systemd plymouth password prompting temporarily setting printk running command resuming original printk state user see password prompt reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed garrett field ghfields gmail.com close 9731,,
1458,ad976437738c67751d97732e12ad5df54b6b518f,ichard Laager <rlaager@wiktel.com>, 2019-12-16 18:54:51 -0600,9723, initramfs setup keymapping video prompt steve langasek steve.langasek canonical.com poorly named framebuffer option initramfs tool control whether console_setup plymouth script included used initramfs required initramfs prompting user input console_setup without user configured keymap set plymouth guaranteed working video output initramfs without e.g nvidia uefi configuration default grub behavior zfs initramfs script may need prompt user passphrases encrypted zfs datasets know definitively whether case time initramfs constructed difficult dynamically populate initramfs config variable anyway therefore zfs initramfs package set framebuffer yes conf snippet way cryptsetup initramfs package doe usr share initramfs tool conf hooks.d cryptsetup http ubuntu source zfs linux bug 1856408 reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed steve langasek steve.langasek canonical.com signed richard laager rlaager wiktel.com close 9723,,
1459,ba434b18ec6bcedb9d9eb39fa234fbba55032381,atthew Macy <mmacy@freebsd.org>, 2019-12-16 09:49:05 -0800,9720, fix freebsd comment explain freebsd vfs unfortunate idiosyncratic locking requirement functional change platform reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9720,,
1460,ddb4e69db5eb0ed741dc4e32714af3e0f054086c,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-12-14 08:02:23 +0900,8998, fail apply umask o_tmpfile file apply umask mode eventually applied inode needed since vfs apply umask o_tmpfile file note zpl_init_acl applies i_mode current_umask posix acl used reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8997 close 8998,,
1461,c317c8c811873c4a0fefd41bd317bf266a29f966,om Caputi <tcaputi@datto.com>, 2019-12-13 14:51:39 -0500,9704, allow empty ds_props_obj destroyed currently zfs list zfs get command slow working snapshot ds_props_obj code discovers property snapshot need read object snapshot almost always end causing extra random synchronous read snapshot performance penalty exists even property snapshot unset object normally freed snapshot freed even though created needed patch allows user regain zfs list performance snapshot destroying ds_props_obj longer entry left practice production machine optimization seems make zfs list faster reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed tom caputi tcaputi datto.com close 9704,,
1462,13a9a6f5e872fe45684f9ba12d1e322ced577849,atthew Macy <mmacy@freebsd.org>, 2019-12-13 07:54:10 -0800,9715, make zfs_replay.c work freebsd freebsd vfs currently permit file system locking avoid duplicate zfs function without locking add locking luck change removed future reviewed sean eric fagan sef ixsystems.com reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9715,,
1463,9bb0d89c5c7f1bbf16ab410c25a087b691d428ac,atthew Ahrens <mahrens@delphix.com>, 2019-12-11 15:38:21 -0800,9706, fix use free vd_path spa_vdev_remove called config nvlist longer valid replaced new one specified device removed therefore pointer nvlist longer valid save result vd_path across call instead use spa_strdup save copy string calling  found error heap use free address ... read size 0x608000a1fcd0 thread t686 0x7fe88b0c166d usr lib x86_64 linux gnu libasan.so.4 0x5166d 0x7fe88a5acd6e spa_strdup spa_misc.c 1447 0x7fe88a688034 spa_vdev_remove vdev_removal.c 2259 0x55ffbc7748f8 ztest.c 3229 0x55ffbc769fba ztest_execute ztest.c 6714 0x55ffbc779a90 ztest_thread ztest.c 6761 0x7fe889cbc6da start_thread 0x7fe8899e588e __clone 0x608000a1fcd0 located byte inside byte region freed thread t686 0x7fe88b14e7b8 0x7fe88ae541c5 nvlist_free nvpair.c 874 0x7fe88ae543ba nvpair_free nvpair.c 844 0x7fe88ae57400 nvpair.c 978 0x7fe88a683c81 vdev_removal.c 185 0x7fe88a68857c spa_vdev_remove vdev_removal.c 2221 0x55ffbc7748f8 ztest.c 3229 0x55ffbc769fba ztest_execute ztest.c 6714 0x55ffbc779a90 ztest_thread ztest.c 6761 0x7fe889cbc6da start_thread reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matthew ahrens mahrens delphix.com close 9706,,
1464,957c7aa23c3000cfdff5d5b1c1341ea773e60afa,yan Moeller <ryan@iXsystems.com>, 2019-12-11 15:12:08 -0500,9710, relocate common quota function shared code quota function common implementation moved common code simplification moved linux platform code initial refactoring reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9710,,
1465,4bc721965ff272ad59c6e8a130a544e1e2c01b34,atthew Macy <mmacy@freebsd.org>, 2019-12-11 11:58:37 -0800,9686, add freebsd jail support hook add zfs jail unjail subcommands along relevant documentation freebsd feature supported linux still requires match kernel ioctls included freebsd platform code integrated reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9686,,
1466,657ce253575295ef680eb33cf4ef698548212a46,atthew Macy <mmacy@freebsd.org>, 2019-12-11 11:53:57 -0800,9708, eliminate linux specific inode usage common code change many znops routine take znode rather inode zfs_replay code largely shared future much znops code may shared reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9708,,
1467,f0bf4351767ab95b1b5e9baa5445db20ffacd00d,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-12-10 18:51:58 -0500,9630, always asserts successful decompression interferes zdb_read_block trying decompression algorithm flag specified expected fail also control output guessing algorithm try common compression type first allow specifying lsize psize fix uninitialized variable reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 9612 close 9630,,
1468,b119e2c6f185008001667a621521417111b21aa8,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2019-12-10 21:53:25 +0100,9674," simd use force alignment fxsave xsave require target address byte aligned kmalloc _node doe yet offer fine grained control alignment 0,1 even though doe right thing time power size unfortunately alignment completely using certain debugging hardening feature configs kasan slub_debug yet upstream slab_canary use instead allows allocate page aligned memory since fpregs_state padded full page anyway code relevant x86 page approach allocate unnecessary memory still guarantee needed alignment http lwn.net article 787740 http lore.kernel.org linux block vbabka suse.cz reviewed tony hutter hutter2 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com signed brian behlendorf behlendorf1 llnl.gov close 9608 close 9674",,
1469,362ae8d11f81e5f65cd20aaf773075a3f045644d,atthew Macy <mmacy@freebsd.org>, 2019-12-10 09:21:07 -0800,9697, abstract away platform specific superblock reference zfsvfs z_sb field linux specified abstracted reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9697,,
1470,7bda69a1a9e7b852e8651ab87a05dd7ad5572a5a,ohn Poduska <jpoduska@datto.com>, 2019-12-10 12:10:36 -0500,9703, zts fix spurious failure test resilver restart test reported failing time two issue found event log large enough resilver event missing one zpool sync enough resilver start zinject reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl signed john poduska jpoduska datto.com issue 9588 close 9677 close 9703,,
1471,3c502d3b75a092dbfeacce9e1a93a985bedbbb2a,atthew Macy <mmacy@freebsd.org>, 2019-12-09 12:29:56 -0800,9691, exclude data core unconditionally metadata conditionally change allows align code dump logic across platform reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed matt macy mmacy freebsd.org close 9691,,
1472,ea79e90f995e53357f68885fda03ea10713ef08d,atthew Macy <mmacy@freebsd.org>, 2019-12-09 12:26:33 -0800,9696, mark static function private marked reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed matt macy mmacy freebsd.org close 9696,,
1473,a25861dcae55f9bbd649cffb7b4bdad77b163206,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-09 11:09:14 -0800,9680, zts fix update vdev_disk_open retry logic use specified number millisecond robust additionally failure log time waited requested timeout internal log default maximum allowed open retry time increased 500ms 1000ms reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9680,,
1474,592791798716f5efb039ac42dfe7daa157f4eb86,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-12-09 19:10:55 +0100,9700, fix typo 9681 going 9672 9681 made typo remove typo pattern folder match recursively folder please use folder source http docs.codecov.io doc ignoring path reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9700,,
1475,0dcef9b966590ac2b7b30c2188996943198cd45c,atthew Macy <mmacy@freebsd.org>, 2019-12-06 09:44:29 -0800,9684, disable sysfs feature check freebsd sysfs infrastructure reporting supported feature property linux specific disable freebsd extended portable reviewed kjeld schouten kjeld schouten lebbing.nl reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9684,,
1476,69b7e3f92df86348cd9e091d0d680c583743ab34,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-12-06 18:37:48 +0100,9679, set use set use like compression related test missing 9645 reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl issue 9645 close 9679,,
1477,3ac34ca375732df26871faba9ff6a4b79571a4c2,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2019-12-06 18:36:19 +0100,9660, icp fix bound write called succession accumulated length blocksize ctx copy_to incorrectly advanced later null bcopy line 114 overflow ctx gcm_copy_to since ctx larger ctx gcm_copy_to buffer hold fix set ctx copy_to already set zol issue may academic since testing able hit neither condition needed trigger consumer easily reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed attila fã¼lã attila fueloep.org close 9660,,
1478,f784828416ca1beb3c3bbf62a55a0a85cf417d10,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-12-06 18:35:02 +0100,9681, fix codecov ignore wrong syntax current codecov ignore syntax incorrect corrected reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9681,,
1479,1f654753bab0afbc282916400917d45081d613fe,atthew Macy <mmacy@freebsd.org>, 2019-12-06 09:33:27 -0800,9682, remove stale assertv comment followup 9671 remove stale comment reviewed kjeld schouten kjeld schouten lebbing.nl reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org issue 9671 close 9682,,
1480,f95704ca5ef37aac2dc335d878380512a7cf628c,atthew Macy <mmacy@freebsd.org>, 2019-12-05 13:10:29 -0800,9664, disable edonr freebsd freebsd crypto framework kernel time edonr implementation reviewed jorgen lundman lundman lundman.net reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9664,,
1481,054a049841879bfa4d7a8c91fbe5c7d51864e23d,atthew Macy <mmacy@freebsd.org>, 2019-12-05 13:06:51 -0800,9667, add zfs_ioc offset freebsd freebsd requires three additional ioctls zfs_ioc_jail zfs_ioc_unjail added linux specific ioctls range 0x80 0xff reserved future optional platform specific ioctls platform may choose implement appropriate none existing ioctl number changed maintain compatibility linux vector registered new ioctls reported unsupported reviewed jorgen lundman lundman lundman.net reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9667,,
1482,e64e84eca57966cff1314d61f5b9557876e856e3,atthew Macy <mmacy@freebsd.org>, 2019-12-05 12:40:45 -0800,9670, refactor deadman set failmode cross platform update use wrapper split common platform specific portion reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9670,,
1483,2a8ba608d3eace43010174aa4f67c8b8af4aacf3,atthew Macy <mmacy@freebsd.org>, 2019-12-05 12:37:00 -0800,9671, replace assertv macro compiler annotation remove assertv macro handle suppressing unused compiler warning variable asserts using __attribute__ unused compiler annotation annotation understood gcc clang reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9671,,
1484,12395c7b0bbd2eaaae96d4105bdc83c3d0c73bec,eorge Amanakis <gamanakis@gmail.com>, 2019-12-04 16:24:56 -0500,9669, fix reporting l2arc hit miss arc_summary3 arc_summary3 report l2arc hit miss byte whereas reported event arc_summary2 report correctly reviewed ryan moeller ryan ixsystems.com reviewed kjeld schouten kjeld schouten lebbing.nl signed george amanakis gamanakis gmail.com close 9669,,
1485,be627fc84711d2382d179392e3313f9fda8d24a3,atthew Macy <mmacy@freebsd.org>, 2019-12-04 13:12:57 -0800,9668, refactor zfs_context.h build freebsd linux move linux specific header freebsd move freebsd specific definition remove duplicate tsd_ definition remove unused at_type reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed matt macy mmacy freebsd.org close 9668,,
1486,618b6adfbf136b3b61c6366719650ccfbad189a4,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-12-04 22:10:12 +0100,9645, refactor compression algorithm selection test move compression algorithm test remove compression algorithm level general test replaces lz4 compression test remove random algorithm selection needed clean copyright header formatting reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed michael niewã hner mniewoehner.de signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9645,,
1487,5a089773742b0c48a7baea32194566ac2987be7d,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-12-03 17:37:15 -0500,9657, fix zdb_read_block using zio destroyed checksum display code zdb_read_block zio read block call use new zio call zio read destroyed zio_wait reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed paul zuchowski pzuchowski datto.com close 9644 close 9657,,
1488,54c8366e3984b710dc2ce99ffdce6dfb15e8eecf,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2019-12-03 19:28:48 +0100,9659, icp fix null pointer dereference use free vmem_alloc fails bcopy called null pointer destination length result undefined behavior ctx gcm_pt_buf freed set null leading potential write free double free due missing return value handling code may write ctx gcm_pt_buf may free ctx gcm_pt_buf  fix slightly rework error handling check return value reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed kjeld schouten kjeld schouten lebbing.nl signed attila fã¼lã attila fueloep.org close 9659,,
1489,7af72863fd0c995ea15f903273f93072bcfebc09,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-12-03 19:23:48 +0100,9650, codecov tweak modify codecov setting provide realistic stable report following change made precision limited whole percent round nearest mean 0.0 0.49 round zero change 0.51 round exclude test zfs test directory report reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9650,,
1490,5ff2249fa579c20c12bce627e284415720fd4412,lexander Motin <mav@FreeBSD.org>, 2019-12-03 12:59:30 -0500,9648, fix use free case l2arc prefetch failure case l2arc read failed l2arc_read_done creates _different_ zio read data original storage device unfortunately pointer failed zio remains hdr b_l1hdr.b_acb acb_zio_head read try bump zio priority crash problem reproducible corrupting l2arc content reading data prefetch tunable changed default setting issue probably reproducible reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org sponsored ixsystems inc close 9648,,
1491,624222ae31bc8ce0009c7da9b0877a3c93aa56fb,rian Behlendorf <behlendorf1@llnl.gov>, 2019-12-03 09:58:03 -0800,9355, increase allowed maximum value may circumstance desirable block specified dataset stored special device relax artificial 128k limit allow property set block 1mb enabled via module option limit increased accordingly reviewed brady don.brady delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9131 close 9355,,
1492,b3673342c79b65c441c98a8161ffbf136d497c2f,atthew Macy <mmacy@freebsd.org>, 2019-12-03 09:56:15 -0800,9666, wrap routine __linux__ functionality currently still linux specific wrapped accordingly reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9666,,
1493,bff8fb395b1f2b84a47f8245dd43f4945cab8e77,atthew Macy <mmacy@freebsd.org>, 2019-12-03 09:51:44 -0800,9665, mark write_record static write_record function private marked reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9665,,
1494,74d1d749596d9d60723e05be3a5e24600721a32c,atthew Macy <mmacy@freebsd.org>, 2019-12-03 09:49:40 -0800,9663, move linux qsort def platform header moving qsort platform header allows platform provide appropriate sorting implementation reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9663,,
1495,e69bb31b71f60b338fa5510dc48de298f394ad73,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-12-02 22:23:47 +0100,9656, adapt gitignore module remove specific gitignore rule module left add generic one module reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed michael niewã hner mniewoehner.de close 9656,,
1496,51420321068e905445e625def28fadc7c3625e13,atthew Macy <mmacy@freebsd.org>, 2019-12-02 10:08:27 -0800,9624, move zfs_cmd_t copyin copyout platform code freebsd need cope multiple version zfs_cmd_t structure allowing platform code pre post process cmd structure make possible work legacy tooling reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9624,,
1497,42a826eed32cd428a3f7c796c619a854c1f8f9dd,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:49:09 -0800,9632, add freebsd required defines mntent.h linux freebsd use different name suid setuid reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9632,,
1498,758699b6f1d37e75f10b40e3ebafeaa231d88acd,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:45:07 -0800,9643, restructure nvlist_nv_alloc work freebsd km_pushpage illumosism freebsd aliased malloc flag km_sleep compiler naturally reject multiple case statement value effectively since caller pas specific km_ flag reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9643,,
1499,101f9b1771a638947697e46f3acc16addefdf9f5,yan Moeller <ryan@iXsystems.com>, 2019-11-30 18:43:23 -0500,9641, add freebsd code arc_summary arcstat adding freebsd code allows arc_summary arcstat used freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9641,,
1500,c54687cd2360d01c8237058f16293572b2a2eedb,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:42:00 -0800,9634, make asm x86_64 atomic.s build freebsd include required header freebsd reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9634,,
1501,f348c78f97527e7a49859fa7e7ee29dd6b37dfb2,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:40:22 -0800,9633, mark linux fallocate extension specific linux fallocate linux specific system call unavailable platform reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9633,,
1502,77323bcf5361ded9ca6b8eb1fee77a8dfd34654c,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:38:16 -0800,9631, add freebsd support zio_crypto.h minimal compatibility change freebsd reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9631,,
1503,a5b762ab1d9064bcae85f72c64c4a54bef7bbd80,atthew Macy <mmacy@freebsd.org>, 2019-11-30 15:35:54 -0800,9625, resolve zof difference zfs_ioctl.h freebsd need able pas jail jail unjail ioctls struct file device structure unused reviewed kjeld schouten kjeld schouten lebbing.nl reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9625,,
1504,a7c358845b1fdfc60b5f1f70d9d6a4ab87f95fa4,gor K <igor@dilos.org>, 2019-11-28 01:55:43 +0300,9636, zts fix attach o_ashift.ksh multiple platform ashift option must appear attach properly interpreted getopt platform reviewed richard elling richard.elling reviewed kjeld schouten kjeld schouten lebbing.nl reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed igor kozhukhov igor dilos.org close 9636,,
1505,d6f67df63c58a5460b5b78f653dd09ad3f7f610e,atthew Macy <mmacy@freebsd.org>, 2019-11-27 11:11:03 -0800,9615, minor diff reduction zof include sys move linux includes platform header add void io_bio zio tracking underlying bio add freebsd specific field abd_scatter reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed matt macy mmacy freebsd.org close 9615,,
1506,c940bf0c37dd4b644618e13631c74b67f68d7002,nsanePrawn <insane.prawny@gmail.com>, 2019-11-22 18:53:51 +0100,9611, fix encryption logic systemd mount generator previously generator would skip dataset mountable zfs mount legacy none mountpoint canmount noauto also skipped generation key load unit datasets breaking dependency handling mountable child datasets reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com signed insaneprawn insane.prawny gmail.com close 9611,,
1507,70d2dd922b3b8802e9549d8ef3276dce7d9f322b,nsanePrawn <insane.prawny@gmail.com>, 2019-11-23 16:16:06 +0100,9611, fix non absolute path systemd mount generator systemd ignore unit try execute program non absolute path use hardcoded bin instead reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com signed insaneprawn insane.prawny gmail.com close 9611,,
1508,d8ce455c1eb7defb60664f6c6e234e0c4ef62fde,nsanePrawn <insane.prawny@gmail.com>, 2019-11-22 18:48:03 +0100,9611, fix small typo systemd mount generator reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com signed insaneprawn insane.prawny gmail.com close 9611,,
1509,7c1bf0cf27f5947b5094b42e7707f22b28c5f923,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-11-27 13:45:56 -0500,9610, implement ignore asserts zdb command line switch ignore asserts always available zdb never connected correct global variable time need zdb ignore asserts keep dumping whatever information get despite assert failing always intended part zdb incomplete reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 9610,,
1510,9e17e6f2541c69a7a5e0ed814a7f5e71cbf8b90a,rian Behlendorf <behlendorf1@llnl.gov>, 2019-11-27 10:35:49 -0800,9609, remove module option described commit f81d5ef6 module option removed user require functionality update system set disk scheduler using udev rule reviewed richard laager rlaager wiktel.com reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 8664 close 9417 close 9609,,
1511,3c819a2c7da4560abb75b9dbf9a314ceafddaf86,wpoduska <jpoduska@datto.com>, 2019-11-27 13:15:01 -0500,9588, prevent unnecessary resilver restarts device participating active resilver non empty dtl operation like vdev_ open reopen probe cause resilver restarted deferred restarted later unnecessary dtl still covered current scan range similar logic dtl excised max txg resilvered range reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl signed john poduska jpoduska datto.com issue 840 close 9155 close 9378 close 9551 close 9588,,
1512,894f6696b4cf7cc2562da159ba5e6e8c806f35de,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-11-27 13:08:18 -0500,9607, add display checksum zdb function zdb_read_block zdb always intended flag would read dva length supplied user display checksum since know checksum data calculate display checksum table read data supplied dva length calculate checksum display update man page create zfs test new feature reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed paul zuchowski pzuchowski datto.com close 9607,,
1513,0c46813805f428038f0f5e2541cdab8034c2f082,auricio Faria de Oliveira <mfo@canonical.com>, 2019-11-21 17:24:03 -0300,9602, check unlinked znodes igrab change commit 41e1aa2a 9583 introduced regression tmpfile_001_pos fsetxattr o_tmpfile file descriptor started fail errno enodata openat at_fdcwd test o_rdwr o_tmpfile 0666 ... fsetxattr user.test ... enodata originally proposed change 9583 susceptible move code check around back way fix reviewed pavel snajdr snajpa snajpa.net reviewed brian behlendorf behlendorf1 llnl.gov original patch heitor alves siqueira half canonical.com signed mauricio faria oliveira mfo canonical.com close 9602,,
1514,da92d5cbb38cea3a860b8a6bb8ee21f9129e7d7c,atthew Macy <mmacy@freebsd.org>, 2019-11-21 09:32:57 -0800,9556, add zfs_file_ interface remove vnodes provide common zfs_file_ interface implemented platform perform normal file access either kernel module libzpool library allows non portable vnode_t usage common code replaced new portable zfs_file_t associated vnode kobj compatibility function type macro removed spl moving forward vnodes used platform specific code provided native operating system reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9556,,
1515,67a6c3bc9ff401fa04bc41354c5172b51aaed1c9,rian Behlendorf <behlendorf1@llnl.gov>, 2019-11-20 17:26:32 -0800,9601, zts increase test threshold test case may occasionally fail running consistent virtual environment observed failure process terminated correctly took longer expected resulting many snapshot created minimize likelyhood occuring increase threshold snapshot larger limit still verifiy channel program correctly terminated early reviewed brady don.brady delphix.com reviewed reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9601,,
1516,540312df7f3f8e10e3049e4b3ec667d57fa9b90e,eorge Melikov <mail@gmelikov.ru>, 2019-11-20 03:23:27 +0300,8812, zts casenorm fix unicode interpretation use printf properly interpret unicode character illumos utility called zlook allow additional flag provided readdir lookup testing functionality could ported linux even without several test enabled instead using standard test command additional work required enable remaining test case reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru issue 7633 close 8812,,
1517,8221bcf1e4efc40d92d1354de710048c70eb709b,nsanePrawn <Insane.Prawny@gmail.com>, 2019-11-19 01:44:28 +0100,9589, remove requirement zfs list zfs get bookmark df58307 removed need specify zfs list zfs get called snapshot datset commit extends behaviour bookmark commit also introduces snap shorthand snapshot zfs list zfs get reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed kjeld schouten kjeld schouten lebbing.nl signed insaneprawn insane.prawny gmail.com close 9589,,
1518,7ae3f8dc8f1e075108f91ddf6fb16471d4a0f044,rian Behlendorf <behlendorf1@llnl.gov>, 2019-11-18 13:05:56 -0800,9592, partially revert 5a6ac4c reinstate zpl_revalidate functionality resolve regression dentries open file rollback invalidated unrelated functionality automatically unmounting .zfs snapshot reverted addition zfs_resume_fs function issue immediately caught test case intended catch included list zts test may occasionally fail unrelated reason remove rollback test list help identify frequency spurious failure test case expose real issue long standing code need investigated regardless enable small workaround test case reviewed matt ahrens matt delphix.com reviewed pavel snajdr snajpa snajpa.net signed brian behlendorf behlendorf1 llnl.gov close 9587 close 9592,,
1519,41e1aa2a06f81640c3a3e1a6b12558d95887f662,eitor Alves de Siqueira <halves@canonical.com>, 2019-11-15 14:56:05 -0300,9583, break zfs_zget early unlinked znode z_unlinked set working znode marked deletion case skip goto loop return enoent znode discovered reviewed richard yao ryao gentoo.org reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed heitor alves siqueira half canonical.com close 9583,,
1520,cc1a1e17d944fa4111443c41cdab7320061b38fa,nsanePrawn <Insane.Prawny@gmail.com>, 2019-11-15 18:52:11 +0100,9574, remove inappropiate error message suggesting use remove incorrect error message libzfs suggests applying zfs subcommand called filesystem path expecting either snapshot bookmark path reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl signed insaneprawn insane.prawny gmail.com close 9574,,
1521,64c77c4badddff4e843ad10466cad2dc96f5e165,jeld Schouten <kjeld@schouten-lebbing.nl>, 2019-11-13 19:23:23 +0100,9581, change zed.service zfs zed.service man page zed.service doe exist replaced correct service name man reviewed brian behlendorf behlendorf1 llnl.gov signed kjeld schouten lebbing kjeld schouten lebbing.nl close 9581,,
1522,7ba964cc3f23e843fda0ac328997e25e54c79acb,oli10K <loli10K@users.noreply.github.com>, 2019-11-13 19:19:06 +0100,9577, prevent null pointer dereference blkg_tryget el8 kernel blkg_tryget shipped el8 kernel doe seem handle null blkg input different mainline counterpart null accepted prevent dereferencing null pointer dealing block device set root_blkg request queue perform null check reviewed brian behlendorf behlendorf1 llnl.gov reviewed kjeld schouten kjeld schouten lebbing.nl reviewed tony hutter hutter2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9546 close 9577,,
1523,8aaa10a9a059589ca8a57c3e91c12ad520fb6f30,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2019-08-06 13:28:56 +0200,9034, check __gfp_reclaim instead gfp_kernel check __gfp_reclaim instead gfp_kernel zfs modifies flag break check gfp_kernel reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 9034,,
1524,6d948c3519ab7a52c06f68927737a3199ba13f81,ichael NiewÃ¶hner <michael.niewoehner@8com.de>, 2019-07-21 19:34:10 +0200,9034, add kmem_cache flag forcing kvmalloc add new kmc_kvmem flag added enforce use kvmalloc allocator even large block may also increase performance specific case e.g zstd default kvmem instead vmem reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 9034,,
1525,66955885e24427a94e938c013da214bd5c0177d4,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2019-07-21 19:34:07 +0200,9034, make use kvmalloc available fix vmem_alloc implementation patch implement use kvmalloc gfp_kernel allocation may increase performance allocator able allocate physical memory kvmalloc available public kernel interface since v4.12 otherwise simply fall back virtual memory vmalloc also fix vmem_alloc implementation lead slow allocation since first attempt kmalloc doe make use noretry flag tell linux kernel retry several time fails reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 9034,,
1526,c025008df5398be4eb7f5b98e75822f447833dd4,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2019-07-21 19:34:02 +0200,9034, add missing documentation kmc flag reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 9034,,
1527,94a570e39c35522ad3bedf6f7873ca18e6422e91,rian Behlendorf <behlendorf1@llnl.gov>, 2019-11-13 09:23:14 -0800,9568, fix zpool create property error message zpool create property run without root permission pool property requested specifically enumerated incorrect error message referring invalid property printed rather expected permission denied error specifying pool property create time handled way filesystem property default zfs_error_aux set property listed reviewed loli10k ezomori.nozomu gmail.com reviewed kjeld schouten kjeld schouten lebbing.nl signed brian behlendorf behlendorf1 llnl.gov close 9550 close 9568,,
1528,c5ebfbbe1978d4488f68489aadf003774e7e4672,oss Williams <ross@ross-williams.net>, 2019-11-13 12:21:07 -0500,9564, reorganize zpool man page section moved subcommand topic individual manpages reordered grouped list subcommands topic moved concept overview zpoolconcepts.8 long list available pool property zpoolprops.8 internal cross reference copied zpool.8 needed converted .xr external reference new subcommand manual page move autotrim lexical order autotrim tacked onto end list alphabetical order clarify attach detach description description specific command syntax overview clarifies reason attaching detaching device clarify replace description refer subcommand argument clarify split command description say split actually doe want clarify description upgrade simplify zpool.8 wording zpool upgrade description clarify description import detail zpool import actually doe add appropriate see also section divided zpool subcommand manual page need see also section also modified fsck.zfs.8 point directly zfs scrub.8 zed.8.in include direct reference zfs events.8 reviewed matt ahrens matt delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov signed ross williams ross ross williams.net close 9564,,
1529,870fc32fc94fcc5108868b4a64cb694c72dc2e21,oss Williams <ross@ross-williams.net>, 2019-11-12 14:17:40 -0500,9559, reorganize zfs man page section subcommands got manpages e.g create related command grouped single manpage symlinks created e.g set get inherit topic either short warrant file interrelated user would want refer command file corrected .sx internal reference .xr cross ref lot .sx reference text zfs.8 needed changed .xr zfs subcommand cross reference divided subcommand list zfs section related functionality required writing new description command preserved .os linux .os macro parsing behavior differs mandoc bsd mandoc package available ubuntu man ubuntu man package call groff format manpages groff handle .os macro differently wrongly defaulting bsd usr share groff tmac mdoc doc common instead getting default uname future set change introduce build time preprocessing manpages platform specific documentation insert correct operating system name added see also section newly divided zfs subcommand man page needed see also section pointing related subcommands case documentation package e.g zfs share.8 reviewed matt ahrens matt delphix.com reviewed kjeld schouten kjeld schouten lebbing.nl reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed ross williams ross ross williams.net close 9559,,
1530,1f2f46be9576964c90ca25805c9741d56bbaccdf,atthew Macy <mmacy@freebsd.org>, 2019-11-12 10:40:39 -0800,9511, add wrapper stub zfs_cmd ioctl libzpool freebsd need wrapper handling zfs_cmd ioctls libzfs handled zfs_ioctl however need wrap call directly reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9511,,
1531,066e825221012e1e81ccf46b0448772bdd7e5483,rian Behlendorf <behlendorf1@llnl.gov>, 2019-11-12 08:59:06 -0800,9566, linux compat minimum kernel version 3.10 increase minimum supported kernel version 2.6.32 3.10 remove support following linux enterprise distribution distribution kernel end life  ubuntu 12.04 lts 3.2 apr 2017 sle 3.0 mar 2019 rhel centos 2.6.32 nov 2020 following change made part removing support updated configure enforce minimum kernel version specified meta file linux minimum 3.10 configure error build kernel version 2.6.32 minimum supported kernel version 3.10 removed configure kabi check matching code interface solely predate linux 3.10 kernel updated configure kabi check fail interface missing 3.10 kernel latest 5.1 kernel removed have_ preprocessor defines check updated code unconditionally use verified interface inverted detection logic several kabi check match new interface appears 3.10 newer legacy interface consolidated following check individual file due large number change check made sense handle would desirable group related check fashion left future work config kernel blkdev.m4 block device kabi check config kernel blk queue.m4 block queue kabi check config kernel bio.m4 bio interface kabi check removed kabi check sop sop interface currently unused signed brian behlendorf behlendorf1 llnl.gov close 9566,,
1532,035ebb365383dcca71c4c542093ea1ad2b8e1dea,yan Moeller <ryan@iXsystems.com>, 2019-11-11 15:15:44 -0500,9565, allow platform dependent path stripping vdevs linux full path preceding device stripped formatting vdev name freebsd want strip dev hide implementation detail path stripping behind zfs_strip_path make static linux implementation since never used outside file defined reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9565,,
1533,5a6ac4cffcd0255ca6f730bcf356e12891fd18af,avel Snajdr <snajpa@snajpa.net>, 2019-11-11 18:34:21 +0100,9549, remove zpl_revalidate patch remove need zpl_revalidate altogether main reason used d_revalidate periodic automounted snapshot umount deferral negative dentries created snapshot rollback stale inodes referenced dentry cache snapshot rollback periodic snapshot deferral solution introduces zfs_exit_fs function called part zfs_exit zfsvfs_t macro negative dentries stale inodes solved flushing dcache particular dataset zfs_resume_fs call patch also remove unused have_s_d_op configure test reviewed aleksa sarai cyphar cyphar.com reviewed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 8774 close 9549,,
1534,f15d6a54575567c6d69b6f1ffc000d2df5a8f206,lexander Motin <mav@FreeBSD.org>, 2019-11-11 20:27:59 +0300,9409, improve logging 128kb writes zil space optimization year ago 128kb writes logged two 64kb record two 128kb log block change became 127kb 1kb two 128kb log block free space second block another record unfortunately case 128kb writes space second block remained unused change increased write latency unbalancing checksum computation write time parallel thread also help slog space efficiency case change introduces new 68kb log block size used writes 67kb 128kb sharp writes writes 127kb still using one 128kb block increase processing overhead writes 131kb still using full 128kb block since possible saving small mixed load likely also fall back previous 128kb since code maximum last requested block size reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 9409,,
1535,2f1ca8a32af1c405fc5735673cc3f24f35465b68,yan Moeller <ryan@iXsystems.com>, 2019-11-11 12:24:04 -0500,9561, isolate code specific linux cmd use sys.platform choose correct implementation function value variable platform run reword comment avoid describing implementation detail wrong place reviewed kjeld schouten kjeld schouten lebbing.nl reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed ryan moeller ryan ixsystems.com close 9561,,
1536,6c7023a5326cc999cfaced931ee2498642d5e63f,itaut Bajaryn <vitaut.bayaryn@gmail.com>, 2019-11-08 23:34:07 +0100,9529, skip loading already loaded key ask password try load key key encryptionroot already loaded user might loaded key manually mean script get called reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed richard laager rlaager wiktel.com signed witaut bajaryn vitaut.bayaryn gmail.com close 9495 close 9529,,
1537,734de7ced12f376e8f07ad8cec3ccc1abf9779b1,. Zhou <5723047+cdluminate@users.noreply.github.com>, 2019-11-06 19:36:33 +0000,9544, add notice etc default zfs systemd user systemd user may want change configuration etc default zfs setting affect systemd service reviewed brian behlendorf behlendorf1 llnl.gov signed zhou cdluminate gmail.com close 9544,,
1538,4254e407294b211f3399da2ee131b45fe9f4ac80,omain Dolbeau <romain.dolbeau@european-processor-initiative.eu>, 2019-11-06 19:56:09 +0100,9540, preliminary support rv64g add basic support risc specifically rv64g reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau european processor initiative.eu close 9540,,
1539,27ece2ee4d9a3e814edfc6ff7cbbc56537d94b59,atthew Macy <mmacy@freebsd.org>, 2019-11-06 10:54:25 -0800,9536, move platform specific part zfs_znode.h platform code znode field different function consuming inode exist freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9536,,
1540,1c47c2c42cdc809ce998d7a5b7b0df145201ad89,avel Zakharov <pavel.zakharov@delphix.com>, 2019-11-06 13:51:19 -0500,9545, zvol_wait ignore redacted zvols zvol_wait wait zvol link created dev zvol zvol link created redacted zvols ignore reviewed paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pavel zakharov pavel.zakharov delphix.com close 9545,,
1541,ae38e00968a1920eb3c1051df888b24301e2f82b,rakash Surya <prakash.surya@delphix.com>, 2019-10-24 14:13:41 -0700,9525, add tracepoints taskq entry lifetime event add new dtrace_probe endpoint observe taskq latency system additionally new taskqlatency.bt script added observation via bpftrace lastly zfs trace.sh script added wrap bpftrace proper option required run use taskqlatency.bt example change place user run following contrib bpftrace sudo zfs trace.sh taskqlatency.bt attaching probe ...  example output showing latency information time spent executing taskq entry function exec_lat_us dp_sync_taskq     exec_lat_us z_wr_int_h zio_execute   exec_lat_us z_wr_iss_h zio_execute   128 exec_lat_us z_ioctl_int zio_execute    exec_lat_us dp_sync_taskq      128 128 256 256 512 example output showing latency information time spent waiting taskq prior starting execution entry function queue_lat_us dp_sync_taskq      128 128 256 256 512 queue_lat_us z_wr_iss     128 128 256 256 512 512    16k 16k 32k queue_lat_us z_wr_int      128 128 256 256 512 512 reviewed brad lewis brad.lewis delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 9525,,
1542,e5d1c27e30f1aecfde2a7a16830b2d34c2f5e975,rakash Surya <prakash.surya@delphix.com>, 2019-10-30 11:02:41 -0700,9525, enable use dtrace_probe macro spl module change modifies infrastructure enabling use dtrace_probe macro use tehm spl module currently dtrace_probe macro used get expanded create new function dynamically generated function become part zfs module since spl module doe depend zfs module use dtrace_probe spl module would result undefined symbol used spl module specifically dtrace_probe would turn function call function called would symbol contained zfs module result linker runtime error thus change add necessary logic spl module mirror tracing functionality available zfs module change trace_zfs.h header file defines probe available zfs module trace_spl.h header file defines probe available spl module reviewed brad lewis brad.lewis delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 9525,,
1543,4a2ed9001353a895ff84594cb34e9c42fd24edaa,atthew Macy <mmacy@freebsd.org>, 2019-11-01 10:41:03 -0700,9542, wrap linux module macro module_version already defined freebsd wrap used module_ macro sake consistency portability add user space noop version reduce need _kernel ifdefs reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9542,,
1544,bd4dde8ef7b3861b20f12619f8994e037b303040,atthew Macy <mmacy@freebsd.org>, 2019-11-01 10:37:33 -0700,9534, prefix struct rangelock struct rangelock already exists freebsd add zfs_ prefix per convention prevent conflict existing symbol change follow 2cc479d0 reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9534,,
1545,bbc18de83afaceff498104d9d261c0328057ccf6,atthew Macy <mmacy@freebsd.org>, 2019-11-01 10:31:42 -0700,9537, remove ecksum alias zinject custom ecksum errno defined appropriate platform specific linux spl sys errno.h header reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9537,,
1546,32682b0c0347a4d695fbd3e02d76f9871a0cefd6,atthew Macy <mmacy@freebsd.org>, 2019-11-01 10:27:53 -0700,9538, fix icp build freebsd rotate_left used amd64 move within scope used silence clang warning __unused alias compiler annotation __attribute__ __unused__ freebsd rename field ____unused reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9538,,
1547,156f74fc03d6187017a695c6c84a03f650f626b4,atthew Macy <mmacy@freebsd.org>, 2019-11-01 10:19:11 -0700,9541, return error code freebsd implementation fail allow function fail add required error handling linux reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9541,,
1548,c4ae27c763acc2b29747e98a4318be9516c43e70,atthew Macy <mmacy@freebsd.org>, 2019-10-31 15:45:58 -0700,9530, move sha2.h platform code freebsd sha routine port reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9530,,
1549,ab44be142a57023a539b66eb06e795b4924fbc9f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-31 12:57:42 -0700,9528, zts fix test case could occasionally complete removal process instead canceling due injected error prevent false positive export import pool test phase flush arc cache furthermore double amount data pool increase removal time reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9528,,
1550,a5308e252d201b1bcfc8fdfbb49262460a19828c,atthew Macy <mmacy@freebsd.org>, 2019-10-31 10:38:03 -0700,9533, cast away const follow 511fce6b missed cast reviewed matt ahrens matt delphix.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9533,,
1551,59055a0164ac5e7dfd690533d39fa9a941204a37,atthew Macy <mmacy@freebsd.org>, 2019-10-31 10:09:01 -0700,9535, include prototype vdev_initialize address two prototype related warning emitted clang reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed matt macy mmacy freebsd.org close 9535,,
1552,2a3aa5a109bffb6cd350bb9e978292358c104f8f,atthew Macy <mmacy@freebsd.org>, 2019-10-31 09:52:22 -0700,9457, factor linux specific code spa_misc.c move linux module parameter get set helper platform specific code reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9457,,
1553,936e2d6d3ea8745d8a4148ec9fa7b060fd64448a,laviss <alaviss@users.noreply.github.com>, 2019-10-30 21:38:41 +0000,9520, dracut zfs load key.sh properly remove prefix remove zfs prefix bootfs instead root make sure zfs prefix remains stripped user root zfs dataset cmdline key loaded boot reviewed garrett field ghfields gmail.com reviewed dacian reece stremtan dacianstremtan gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed hiáº lãª leorize disroot.org close 9520,,
1554,f63e2fe132588fab595f3524afd14bc4b4e0386b,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-30 12:37:49 -0700,9527, fix contrib zcp makefile.am remove stray leading makefile preventing autosnap.lua channel program properly included make dist reviewed giuseppe natale guss80 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9527,,
1555,0b2a642351f375cb9be3d2569a0ac0417340c741,omain Dolbeau <romain.dolbeau@atos.net>, 2019-10-30 20:26:14 +0100,9517, add avx512bw variant fletcher much faster avx512f byteswapping skylake newer byteswap single vshufb instead many instruction reviewed gvozden neskovic neskovic gmail.com reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau atos.net close 9517,,
1556,bae11ba8dc1dd992643dd0ab0b5cc3b3cc197fe9,om Caputi <tcaputi@datto.com>, 2019-10-30 14:27:28 -0400,9524, fix zfs change key unencrypted child currently call zfs change key encrypted dataset unencrypted child code trigger verify verify leftover allowed unencrypted datasets exist underneath encrypted one patch fix issue simply replacing verify early return recursing datasets reviewed jason king gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tom caputi tcaputi datto.com close 9524,,
1557,d46f0deb035bd26840dc6284fc6e1bb392097c92,atthew Macy <mmacy@freebsd.org>, 2019-10-28 09:53:39 -0700,9508, add wrapper linux blkflsbuf ioctl freebsd analog buffered block device removed decade plus ago reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9508,,
1558,4a22ba5be0aab1480aeac4581025ce6d7ce4b4a1,atthew Macy <mmacy@freebsd.org>, 2019-10-28 09:51:53 -0700,9499, minor spa portability fix freebsd rootpool import code move call spa_import needed cause lock order reversal freebsd reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9499,,
1559,7125a109dcc55628336ff3f58e59e503f4d7694d,hunwei Chen <david.chen@nutanix.com>, 2019-10-28 09:49:44 -0700,9516, fix zpool history unbounded memory usage original implementation zpool history read whole history printing anything causing memory usage unbounded fix breaking read print iteration reviewed tom caputi tcaputi datto.com reviewed matt ahrens matt delphix.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen nutanix.com close 9516,,
1560,e35704647e84c62c6a6017ead0b66b446010e4ff,oli10K <loli10K@users.noreply.github.com>, 2019-10-27 00:22:19 +0200,9489, fix arc sysctls ignored runtime change leverage run immediately arc tunable updated suggested cffa8372 code review simple test case added zfs test suite prevent future regression functionality reviewed matt macy mmacy freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9487 close 9489,,
1561,6963414d7049b52047982fd94bfc16522bc5c26c,atthew Macy <mmacy@freebsd.org>, 2019-10-26 10:07:59 -0700,9510, remove unneeded header libzpool kernel.c sys signal.h header exist freebsd needed linux reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9510,,
1562,9e2ca0b3c6063bbb1a6183a048a8c683687b5a07,atthew Macy <mmacy@freebsd.org>, 2019-10-26 10:04:10 -0700,9514, fix header guard typo fix header guard typo accidentally introduced 9497 reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9514,,
1563,fdf5593232b80c445ed848d072010eba5968ed28,yan Moeller <ryan@iXsystems.com>, 2019-10-25 23:03:46 -0400,9512, zts move test linux.run test rely special filesystems specific linux run linux reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed ryan moeller ryan ixsystems.com close 9512,,
1564,5f3eceb98f1a19c28dc3fe6d602103980390e274,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:53:50 -0700,9509, remove unused header uu_string.c malloc.h include gratuitous run following error freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9509,,
1565,24cf9f4eb2bbfad49dc70a1540ff096191d7c39f,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:50:34 -0700,9507, use zfs_ioctl zinject.c consistently use zfs_ioctl wrapper since ioctl called directly due differing semantics platform follow 9492 reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9507,,
1566,0ee89a1252f23fa2f1086670e47091400b1f857a,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:46:07 -0700,9506, remove non portable pointer valid assert assert make non portable assumption state memory returned memory allocator reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9506,,
1567,c392c5aec06837aaf6d780fa6ba4dce5a84f6acb,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:42:54 -0700,9505, move final common code logic platform dependent reside common code reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9505,,
1568,1952fe0e2552d9b65b2db1e76c1a4a3f5ab0f27e,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:40:50 -0700,9498, move platform dependent errno alias ebade ebadr enoano exist freebsd libspl errno.h similarly platform dependent reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9498,,
1569,68a1b1589ad60f9c07d3299f7068ad29fb47e695,atthew Macy <mmacy@freebsd.org>, 2019-10-25 13:38:37 -0700,9497, remove sdt.h mostly noop zol conflict platform support dtrace remove header resolve conflict reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9497,,
1570,b4238327b4ec84451fd2944cee7ccff37a065d27,om Caputi <tcaputi@datto.com>, 2019-10-24 13:51:01 -0400,9494, fix incremental recursive encrypted receive currently incremental recursive encrypted receives fail work snapshot first reason check properly realize user attempt use encryption situation really overriding existing encryption property instead attempting prevent changing resulted error message stating encryption property encryption set excluded raw incremental stream problem fixed updating logic expect use case reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tom caputi tcaputi datto.com close 9494,,
1571,28f7427ab163887e901708dec5e7e72a6ac2a269,yan Moeller <ryan@iXsystems.com>, 2019-10-24 13:49:19 -0400,9503, zts move tmpfile test linux.run o_tmpfile available freebsd reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9503,,
1572,4c6225b6888d5ea8f812d2f39eb9c2f7d40fb9e7,yan Moeller <ryan@iXsystems.com>, 2019-10-24 13:47:47 -0400,9502, zts consistency pas .ksh extension use .ksh extension ksh script .sh remove .ksh extension test common.run reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9502,,
1573,10fa254539ec41c6b043785d4e7ab34bce383b9f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-24 10:17:33 -0700,9403, linux 4.14 4.19 5.0 compat simd save restore contrary initial testing rely kernel invalidate per cpu fpu state restore fpu register guarantee kernel modify fpu state saved task struck therefore kfpu_begin kfpu_end function updated save restore fpu state using dedicated per cpu fpu state variable additional advantage allowing use fpu user thread remove code added use task queue ensure function ran kernel thread reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 9346 close 9403,,
1574,b834b58ae61063f526ce82df348440e31c58c232,atthew Macy <mmacy@freebsd.org>, 2019-10-23 17:29:43 -0700,9492, use zfs_ioctl zfs_cmd_t libzfs consistently use zfs_ioctl wrapper since ioctl called directly due differing semantics platform reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9492,,
1575,05d07ba9a7f104e71c4052abe0be1cb96ba012d1,hrisrd <chris@onthe.net.au>, 2019-10-24 09:26:17 +1100,9453, call arc_buf_destroy unallocated arc_buf fix obvious issue calling arc_buf_destroy unallocated arc_buf reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed paul dagnelie pcd delphix.com signed chris dunlop chris onthe.net.au close 9453,,
1576,64b2e7d7ecd97fe181e9b909a52196c4b0474747,atthew Macy <mmacy@freebsd.org>, 2019-10-23 13:48:31 -0700,9493, use platform independent error code reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9493,,
1577,685abd595cf8e058cc7233d6e4f1ffc2dce88695,atthew Macy <mmacy@freebsd.org>, 2019-10-20 20:37:30 -0700,9486, use correct format string printing int8 reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9486,,
1578,8b2d097c17bdf799b0b9a680b17b91d10ef8b6be,atthew Macy <mmacy@freebsd.org>, 2019-10-19 17:08:19 -0700,9483, remove gratuitous linux include ztest zdb need include stdio_ext.h reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9483,,
1579,4063440b73af79be9792029ada17b01c51ad7172,ohn Wren Kennedy <john.kennedy@delphix.com>, 2019-10-18 19:27:02 +0200,9477, zts written prop test fails disk disk test fail last section expected human readable value 20.0m reported 20.1m rather use human readable property switch parsable property verify value reasonably close reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed tony hutter hutter2 llnl.gov signed john kennedy john.kennedy delphix.com close 9477,,
1580,9f3c72a2a849dcf121679cb483be33b68880c519,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-10-18 10:25:44 -0700,9478, name anonymous enum kmc_bit constant giving name enum make discoverable debugging tool like drgn sdb example name proposed patch iterate value drgn  prog.type enum kmc_bit .enumerators kmc_bit_notouch kmc_bit_nodebug kmc_bit_nohash kmc_bit_qcache kmc_bit_kmem kmc_bit_vmem kmc_bit_slab ...  enables sdb easily pretty print flag spl_kmem_caches system like  spl_kmem_caches name flag total_memory name flag total_memory  abd_t kmc_nomagazine kmc_slab 4.5mb kmc_nomagazine kmc_slab 12.3mb ... cropped ... ddt_cache kmc_vmem 583.7kb ddt_entry_cache kmc_nomagazine kmc_slab 0.0b ... cropped ... zio_buf_1048576 kmc_nodebug kmc_vmem 0.0b ... cropped ...  reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9478,,
1581,851eda356600167c080fe62d0a5726980c1c0b8a,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-10-18 10:24:28 -0700,9474, update skc_obj_alloc spl kmem cache backed linux currently certain size class allocation use spl cache backed cache linux slab allocator reduce fragmentation increase utilization memory way thing implemented cache though keep statistic allocation make cache patch enables tracking allocated object spl cache making trade grabbing cache lock every object allocation free update respective counter additionally patch make cache visible proc spl kmem slab special file side note enabling specific counter cache enables sdb create user friendly interface proc spl kmem slab also cross reference data slabinfo example output one cache sdb output name underlying linux cache memory spl object allocated cache percentage object compared object  spl_kmem_caches filter obj.skc_name zio_buf_512 name ... source total_memory util ... zio_buf_512 ... kmalloc 512 slub 16.9mb  reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9474,,
1582,c9c9c1e213c15c0f0b94aebcea6b2268d7e8f52b,atthew Macy <mmacy@freebsd.org>, 2019-10-18 10:23:19 -0700,9472, openzfs restructuring arc memory pressure factor linux specific memory pressure handling arc platform different available interface managing memory pressure reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9472,,
1583,4313a5b4c51e2093f1b45ef9845fc77d32b09330,yan Moeller <ryan@freqlabs.com>, 2019-10-16 22:19:48 -0400,9463, detect sed support place version sed place flag detect support flag configure provide fallback mechanism system sed behavior differs autoconf variable ac_inplace used choose correct flag editing file place sed replace violating usage makefile.am ac_inplace reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9463,,
1584,08f530c6996a41c1050a11fc5b02b31a6b68fe45,atthew Macy <mmacy@freebsd.org>, 2019-10-16 18:43:52 -0700,9466, make zfsdev_getminor signature cross platform pas file descriptor make portable reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9466,,
1585,0e939e434a254224907cc379a0e7039984221500,atthew Macy <mmacy@freebsd.org>, 2019-10-16 18:37:31 -0700,9465, move linux specific mmp handler platform code reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9465,,
1586,cf2eba666e6b959a9705de27c0203a2aad93c7b9,atthew Macy <mmacy@freebsd.org>, 2019-10-16 18:36:16 -0700,9450, add default case lua kernel code platform e.g freebsd support user space setjmp semantics kernel reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9450,,
1587,47d57dbccf5693b327342ec045b66bcf5a47e655,atthew Macy <mmacy@freebsd.org>, 2019-10-16 18:34:19 -0700,9467, fix signature private function without header declaration clang complain function prior declaration reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9467,,
1588,177c79dfbee633b70e7d373ff83c6a2d47625a17,atthew Macy <mmacy@freebsd.org>, 2019-10-13 19:25:19 -0700,9432, remove dead code cleanup scoping dmu_send.c address number problem dmu_send.c bp_span unused make clang complain dump_write conflict freebsd existing core dump code range_alloc private file declared header causing clang complain reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9432,,
1589,511fce6b1f939bd78687924aaa35dc83f8056ced,aul Dagnelie <pcd@delphix.com>, 2019-10-13 19:21:51 -0700,9455, call sizeof void get sizeof appropriate type cast away const reviewed ryan moeller ryan ixsystems.com reviewed igor kozhukhov igor dilos.org reviewed matt macy mmacy freebsd.org signed paul dagnelie pcd delphix.com close 9455,,
1590,cdbba101f48bef68b46363a64880b51fa647ad45,atthew Macy <mmacy@freebsd.org>, 2019-10-13 19:19:39 -0700,9442, move platform code freebsd different implementation reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9442,,
1591,c32470133273ab587fb3bd9b3324ccfb823f6fe6,atthew Macy <mmacy@freebsd.org>, 2019-10-13 19:15:27 -0700,9439, move platform code freebsd implementation platform reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9439,,
1592,d292307212d68016455422a3fe764968f552b031,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-13 19:13:26 -0700,9425, modify sharenfs default behavior may sometimes convenient export nfs filesystem no_root_squash default behavior align default behavior linux nfs server default restore previous behavior use zfs set sharenfs no_root_squash ... reviewed loli10k ezomori.nozomu gmail.com reviewed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 9397 close 9425,,
1593,2c6fa6eafbac4acffb1304132a8e06cfe4d71cde,hrisrd <chris@onthe.net.au>, 2019-10-12 04:33:13 +1100,9452, typo fix comment dso_dryrun reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 9452,,
1594,ea25ed236500f67235a9a692b4ea8a6f53a88dea,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-11 10:22:20 -0700,9451, zts fix zpool_status_ commit 5e74ac51 split reordered run file zpool_status_ test began failing new ordering placed test previous test used zpool replace replace disk clear label resulted next test zpool_status_ failing potentially active pool detected replaced vdev dev loop0 part potentially active pool testpool use function create pool zpool_status_ use flag default test wipe label cleanup prevent future failure test reordered reviewed igor kozhukhov igor dilos.org reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 9451,,
1595,516a83f8861269de9f795a96c471623e3bd67009,aul Dagnelie <pcd@delphix.com>, 2019-10-11 10:13:21 -0700,9441, function name comment update rename certain function consistency share common feature make comment clearer argument passed insert add function reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com signed paul dagnelie pcd delphix.com close 9441,,
1596,bce795ad7a1385fe81052bab6a85ae17b90986b7,atthew Macy <mmacy@freebsd.org>, 2019-10-11 10:10:20 -0700,9449, remove linux mod_compat.h common code longer necessary mod_compat.h included zfs_context.h reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed matt macy mmacy freebsd.org close 9449,,
1597,af1698f59b79eff7e96332518512069ce5824b31,atthew Macy <mmacy@freebsd.org>, 2019-10-11 10:06:18 -0700,9431, expose platform code freebsd pager ops routine reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9431,,
1598,803884217f9b9b5fb235d7c5e78a809d271f6387,ichard Yao <ryao@gentoo.org>, 2019-10-09 12:16:12 -0700,9436, implement since 0.7.0 zpool import would unconditionally block udev second introduced regression initramfs environment lack udev particularly mdev based environment yet use zfs userland tool intended system built udev gentoo genkernel main example although custom user initramfs environment would similarly impacted unless special build zfs userland utility done environment already mechanism blocking device node ready genkernel scandelay parameter unnecessary zpool import block non existent udev timeout reached inside rather trying intelligently determine whether udev available system avoid unnecessarily blocking environment seems best allow environment override timeout propose add environment variable called setting would restore 0.6.x behavior desirable mdev based initramfs environment allows system user land utility reused building mdev based initramfs archive reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed georgy yakovlev gyakovlev gentoo.org signed richard yao ryao gentoo.org close 9436,,
1599,d96635a5c7ba539c2f56c245c662be5b914f93e1,yan Moeller <ryan@freqlabs.com>, 2019-10-11 12:50:46 -0400,9445, clarify loop variable name zfs copy test reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9445,,
1600,767f65cf73e98fdec25f67e3717694a4a7561d08,yan Moeller <ryan@freqlabs.com>, 2019-10-11 12:49:48 -0400,9447, fix style nit test mostly whitespace change functional change intended reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9447,,
1601,715c996d3b5e45897ff165f2e6610e1b57da47e4,oli10K <loli10K@users.noreply.github.com>, 2019-10-11 01:39:41 +0200,9429, fix pool creation feature disabled feature enabled pool vdev special dedup allocation type allowed exist vdev tree reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9427 close 9429,,
1602,2516a8782158a1d420aa00ce5f470a33cc7ec2ca,atthew Macy <mmacy@freebsd.org>, 2019-10-10 15:59:34 -0700,9401, move platform code temporary property handling vfs layer requires platform specific code reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9401,,
1603,6501906280f8f244710012116ef678007999da67,atthew Macy <mmacy@freebsd.org>, 2019-10-10 15:45:52 -0700,9404, add kmem cache accessors make metaslab platform agnostic adding accessor function implemented platform reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9404,,
1604,eedb3a62b9f16b989aa02d00db63de5dff200572,atthew Macy <mmacy@freebsd.org>, 2019-10-10 15:39:44 -0700,9440, make visible platform code freebsd zvol platform code requires access function reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9440,,
1605,f3dc4a85e92712a71ede0f81d6749f479cccf893,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-10 09:49:45 -0700,9428, update zfs program command usage update zfs man page clearly describe argument channel program listed sentinel terminates argument processing behavior supported getopt linux freebsd illumos according platform respective man page zfs program instruction limit memory limit pool script arg1 ... reviewed clint armstrong clint reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9056 close 9428,,
1606,e4f5fa12290016b2f1fd6a5b4c7e5733c788c863,atthew Macy <mmacy@freebsd.org>, 2019-10-10 09:47:06 -0700,9433, fix strdup conflict platform freebsd kernel strdup signature  char strdup const char __restrict struct malloc_type  unfortunate developer chosen change signature libc function deal reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9433,,
1607,c5858ff9462719be60b2ffb0065dd01508a63162,atthew Macy <mmacy@freebsd.org>, 2019-10-10 09:45:38 -0700,9434, make clang happy vdev_raidz_ code macro used generate code condition without corresponding branch problem practice clang way knowing add default branch verify indicate happen  file included usr home mmacy devel zof module zfs 607 usr home mmacy devel zof module zfs 281 error case matching constant switch condition werror  reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9434,,
1608,381d91de7de42222419ea8fbe2a956f9aebe3f7a,yan Moeller <ryan@iXsystems.com>, 2019-10-09 13:54:22 -0400,9426, sort list generated file configure.ac functional change quality life improvement reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9426,,
1609,5e74ac51c70ee978e338e828f05377092d0637d4,yan Moeller <ryan@iXsystems.com>, 2019-10-09 13:39:26 -0400,9391, move platform independent test shared runfile test limited running linux moved common runfile shared platform test runner wrapper script enhanced allow specifying multiple runfiles comma separated list default runfiles common.run platform.run platform determined run time section runfiles share path another runfile append colon separator identifier path section name test functional atime linux avoid overriding test specified runfiles reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9391,,
1610,ca5777793ee10b9f7bb57aef00a6c8d57969625e,aul Dagnelie <pcd@delphix.com>, 2019-10-09 10:36:03 -0700,9181, reduce loaded range tree memory usage patch implement new tree structure zfs store range tree efficiently new structure approximately tree though small difference usual tree core node leaf node contain data element element core node acting separator child difference core leaf node core node array child leaf node every node tree may partially full case least full term element count except root node full underfull node steal neighbor merge remain full enough overfull node split two data element contained tree controlled buffer copied insertion overwritten deletion mean element independently allocated reduces overhead also mean shared tree also pointer valid side effectful tree operation occurs overhead varies based dense tree usually order element size per node overhead small make significant difference tree accept arbitrary record accept size comparator allow used variety purpose new tree replace avl tree used range tree today currently range_seg_t structure contains three byte integer payload two byte handle storage offset sorted tree size sorted tree total size byte new model range seg structure usually two byte integer separate one need exist size sorted offset sorted tree raw size overhead double storage new btrees expected use 1.5 byte per record 33.3 much memory avl tree purpose storing metaslab range tree purpose like scrub use much memory reduced size payload range segment teaching range tree starting offset shift since metaslabs fixed starting offset operate term disk sector store range using byte integer long size metaslab divided sector size 32. 512 byte sector 2tb metaslab default setting corresponds 256pb disk sector disk handle metaslabs byte byte disk since anticipate disk size near future almost case metaslabs need byte integer store range still capability store byte integer range account case storing per vdev per dnode tree could reasonably limit discussed also store fill information compact version node since used sorted scrub also optimized metaslab loading process various way offset inefficiency btree model individual operation find insert remove_from faster btree avl tree remove usually requires find operation avl tree model element suffices clever change actually caused overall speedup metaslab loading use approximately cpu load metaslabs test illumos another memory performance optimization achieved changing stored size sorted tree disk heavily fragmented algorithm used default zfs almost always find number small region initial cursor based search usually fall back size sorted tree find larger region increase size cursor based search slightly store segment smaller tunable size floor size sorted tree cut memory usage avl tree store also result reduction cpu time spent loading metaslabs 16kib size floor chosen result substantial memory usage reduction usually resulting situation find appropriate chunk cursor forced use oversized chunk size sorted tree addition even use oversized chunk size sorted tree chunk would small use zil allocation big loss might otherwise often small allocation follow initial one cursor search find remainder chunk use use subsequent allocation practical testing shown little change fragmentation result change size sorted tree becomes empty offset sorted one still entry load entry offset sorted tree disregard size floor unloaded operation occurs rarely default setting incredibly thoroughly fragmented pool small change zdb teach handle btrees nothing major reviewed george wilson gwilson delphix.com reviewed matt ahrens matt delphix.com reviewed sebastien roy seb delphix.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 9181,,
1611,d0a84ba92b40085b46efee9bc1219490876c7a68,gor K <igor@dilos.org>, 2019-10-08 23:40:17 +0300,9349, zts fix mmp_hostid test correctly use mntpnt_fs variable include additional logic ensure etc hostid correct set cleaned signed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 9349,,
1612,7b50929851b055deb96fcba919791d5699563e5d,eorge Melikov <mail@gmelikov.ru>, 2019-10-08 20:10:23 +0300,9418, module makefile.in run xargs empty stdin empty run xargs command otherwise get missing file operand error reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 9418,,
1613,94bcf6f5e31aad91033111ffed0ca45934e0e37d,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-04 12:38:07 -0700,9399, zts fix trim trim_config trim autotrim_config occasional failure occur trimmed vdev size exactly match target size resolve slightly relaxing conditional checking rather case observer value match exactly example failure mnt trim vdev1 768 768 reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9399,,
1614,6bd4f4545d3d334442fbe87d40ad0e0542703ce6,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-04 12:30:51 -0700,9384, fix automount root filesystems commit 093bb64 resolved automount failure chroot process inadvertently broke automounting root filesystems vfs_mntpoint null resolve issue checking null order generate correct path reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 9381 close 9384,,
1615,2cc479d049eb84b9cd7da9f2d64266429f3c3201,atthew Macy <mmacy@mattmacy.io>, 2019-10-03 15:54:29 -0700,9402, rename rangelock_ function zfs_rangelock_ rangelock kpi already exists freebsd add zfs_ prefix per convention prevent conflict existing symbol reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9402,,
1616,64b6c47d90b95d9eb9c39aec40e3c6e8374d2721,ony Nguyen <tony.nguyen@delphix.com>, 2019-10-03 16:33:38 -0600,9351, dbuf_hold_impl cleanup improve cached read performance currently every dbuf_hold_impl incurs kmem_alloc kmem_free costly cached read performance change reverts dbuf_hold_impl fix stack commit i.e eliminate extra kmem_alloc kmem_free operation improve cached read performance change dbuf_hold_impl frame byte total 800 recursive level linux kernel stack size 16k 32bit 64bit respectively stack overrun risk limited sample stack output comparison file recordsize 512 current code 2240 arc_alloc_buf 0x4a 0xd0 zfs 2176 264 0x2e3 0x7f0 zfs 1912 120 dbuf_read 0xe5 0x520 zfs 1792 0x572 0x630 zfs 1736 0x508 0x630 zfs 1672 0x508 0x630 zfs 1608 dbuf_hold_impl 0x23 0x40 zfs 1568 dbuf_hold_level 0x32 0x60 zfs 1528 dbuf_hold 0x16 0x20 zfs dbuf_hold_impl cleanup 2320 arc_alloc_buf 0x4a 0xd0 zfs 2256 264 0x2e3 0x7f0 zfs 1992 120 dbuf_read 0xe5 0x520 zfs 1872 dbuf_hold_impl 0x50f 0x5e0 zfs 1776 104 dbuf_hold_impl 0x4df 0x5e0 zfs 1672 104 dbuf_hold_impl 0x4df 0x5e0 zfs 1568 dbuf_hold_level 0x32 0x60 zfs 1528 dbuf_hold 0x16 0x20 zfs performance observation recordsize filesystem 128 1024k 128 sequential cached read improvement testing done ubuntu 18.04 4.15 kernel 8vcpus ssd storage vmware esx reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony nguyen tony.nguyen delphix.com close 9351,,
1617,73cdcc632304ed72aafabef1fb03c45a27dcc58f,atthew Macy <mmacy@mattmacy.io>, 2019-10-03 10:33:16 -0700,9377, openzfs restructuring libzfs factor linux specific functionality libzfs reviewed allan jude allanjude freebsd.org reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed matthew macy mmacy freebsd.org close 9377,,
1618,7c5eff9400d12ed8f2676a6d08f6ae099351397f,atthew Macy <mmacy@mattmacy.io>, 2019-10-03 10:20:44 -0700,9356, openzfs restructuring libzutil factor linux specific functionality libzutil reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9356,,
1619,e1c216fb0c33209471b51f80ba3a1ce8910913c7,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-03 09:39:13 -0700,9400, zts fix update cleanup_upgrade use destroy_dataset destroy_pool performing cleanup wrapper retry pool busy preventing occasional failure like observed running test example success test enabled enabled user accounting upgrade executed readonly pool note performing local cleanup via log_onexit cleanup_upgrade destroy testpool pool busy error zpool destroy testpool exited reviewed ryan moeller ryan ixsystems.com reviewed john kennedy john.kennedy delphix.com reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 9400,,
1620,8ae8b2a1445bcccee1bb8ee7d4886f30050f6f53,idier Roche <didrocks@ubuntu.com>, 2019-10-02 19:51:55 +0200,9360, workaround avoid race var lib persistent dataset var lib dataset pool root root_dataset proposed ubuntu root zfs upstream guide http github.com zfsonlinux zfs wiki ubuntu 18.04 root zfs end race service like systemd random seed writing var lib zfs mount called zfs mount potentially fail var lib empty mounted order unit may needed declare virtually provide mount point match var lib systemd random seed systemd random seed.service optional generator zfs 0.8 fix enabled default necessarily required example rpool root ubuntu mountpoint rpool var mountpoint var rpool var lib mountpoint var lib zfs mount.service systemd random seed.service starting systemd remount fs.service zfs mount.service done local fs.target systemd random seed.service finish sysinit.target later target ideally would way zfs mount unit declare path move systemd random seed local fs.target reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed didier roche didrocks ubuntu.com close 9360,,
1621,d31277abb1db51dece836dd47628ca42c07e528c,atthew Macy <mmacy@mattmacy.io>, 2019-10-02 10:39:48 -0700,9336, openzfs restructuring libspl factor linux specific piece libspl reviewed ryan moeller ryan ixsystems.com reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9336,,
1622,6360e2779e47f4bf2233071b427ad522eca9bdd4,atthew Macy <mmacy@mattmacy.io>, 2019-10-02 09:15:12 -0700,9389, add inode accessors common code reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed matt macy mmacy freebsd.org close 9389,,
1623,13a4027a7cd68069cb252e94c18ba1e5eb5af1cd,atthew Macy <mmacy@mattmacy.io>, 2019-10-01 16:35:05 -0700,9386, openzfs restructuring arc_stats make arc_stats visible platform code reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed matt macy mmacy freebsd.org close 9386,,
1624,7111c86ca38c4513d036d3bf58e28a532b8ce137,atthew Macy <mmacy@mattmacy.io>, 2019-10-01 13:17:32 -0700,9385, enable clang use intrinsics lz4 reviewed igor kozhukhov igor dilos.org reviewed jorgen lundman lundman lundman.net reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9385,,
1625,bd76e6817cb53ad621fc100d0ec01fcaacbb092e,acianstremtan <35844628+dacianstremtan@users.noreply.github.com>, 2019-10-01 15:54:27 -0400,9379, fix zfs dracut regression line overwrote root variable broke mount zfs.sh create new variable dataset instead overwriting root variable zfs load key.sh root variable zfs load key.sh reviewed kash pande kash tripleback.net reviewed garrett field ghfields gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed dacian reece stremtan dacianstremtan gmail.com close 8913 close 9379,,
1626,608f8749a1055e6769899788e11bd51fd396f9e5,rian Behlendorf <behlendorf1@llnl.gov>, 2019-10-01 12:50:34 -0700,9341, perform kabi check parallel reduce time required configure perform needed kabi check allowing kbuild compile multiple test case parallel accomplished splitting test source code logic handling whether code could compiled  introducing split possible minimize number time kbuild need invoked importantly mean test built parallel doe require little extra care since expect test fail keep going option must provided otherwise test may get compiled furthermore since failure kbuild modpost phase result early exit final linking phase limited test passed initial compilation produced object file everything built configure script proceeds previously significant difference merely need test existence .ko file determine result given test vastly speed entire process new test case use declare test source code check result existing kernel .m4 file updated accordingly see config kernel current time.m4 basic example legacy macro kept handle special case use encouraged master sec patched sec  autogen.sh configure 137 current run time make nproc make rpm 287 150 reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8547 close 9132 close 9341,,
1627,99573cc05339ee04e80eb49c68f62d310da92ec7,rakash Surya <prakash.surya@delphix.com>, 2019-10-01 12:33:12 -0700,9380, timeout waiting zvol device created seen case creating zvol zvol device node dev generated second waiting point application give waiting report error workload occurs refresh 400 zvols roughly time based policy set user refresh operation destroy zvol create based snapshot occurs see many hundred entry z_zvol taskq based inspection proc spl taskq file many entry taskq end function measured latency function function msec count distribution       127 128 255 256 511 data second sample using bcc funclatency tool see second sample call took 128ms minimum thus basic math tell second interval could process 150 removal much 400 occur based workload result since zvol minor operation single threaded z_zvol taskq latency creating single zvol device unreasonably large due zvol activity system case large enough cause application generate error fail operation profiling function saw time function spent cpu blocked function work dispatch call zvol_free using system_taskq function used wait dispatched call occur return far tell necessarily wait call zvol_free occur return thus change remove call call zvol_free affect latency reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed prakash surya prakash.surya delphix.com close 9380,,
1628,3283f137d713dce293983e573a62c344ddcf8a19,atthew Macy <mmacy@mattmacy.io>, 2019-09-30 12:16:06 -0700,9333, openzfs restructuring zpool factor linux specific function zpool command reviewed allan jude allanjude freebsd.org reviewed ryan moeller ryan ixsystems.com reviewed sean eric fagan sef ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed matt macy mmacy freebsd.org close 9333,,
1629,7bb0c294688ed121477536d7b4a7031c78a5706a,atthew Macy <mmacy@mattmacy.io>, 2019-09-27 10:46:28 -0700,9301, openzfs restructuring zfs_ioctl refactor zfs ioctls platform dependent independent bit reviewed brian behlendorf behlendorf1 llnl.gov reviewed sean eric fagan sef ixsystems.com signed matthew macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9301,,
1630,3768db24abe09f964a976945faeb805214817626,en McGough <bmcgough@fredhutch.org>, 2019-09-26 09:52:10 -0700,9350, adding slack notifier allow zed notification via slack incoming webhook reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com reviewed richard elling richard.elling signed ben mcgough bmcgough fredhutch.org close 9076 close 9350,,
1631,bb61cc31851098ab41a7dcb56333a90b40d65129,om Caputi <tcaputi@datto.com>, 2019-09-25 20:02:33 -0400,9309, fix encryption hierarchy issue zfs recv currently function accepts destsnap one parameter originally intended top level dataset receive whether receive recursive unfortunately parameter actually simply input passed command line user specifies zfs recv string actually name receiving pool since rest name derived send stream cause function fail leaving datasets invalid encryption hierarchy patch resolve problem passing top_zfs variable instead order make work patch also includes change ensure value always present need reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9273 close 9309,,
1632,479d7d3ca6c61dce789e54eb02c04b90f9ce0c8f,yan Moeller <ryan@freqlabs.com>, 2019-09-25 14:42:04 -0400,9362, zts fix typo zfs_destroy test cleanup lot_must log_must reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed sara hartse sara.hartse delphix.com reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9362,,
1633,5e5cefbaee494c4e347216aafb945cc358f224ac,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-25 09:24:45 -0700,9358, zts harden xattr cleanup.ksh xattr cleanup.ksh script unable remove test group due active process call default_cleanup result zvol_enospc setup failure attempting create mnt testdir directory already exist resolve issue performing default_cleanup removing test user group ensure step always happens also allow one retry minimize likelihood cleanup failing reviewed ryan moeller ryan ixsystems.com signed brian behlendorf behlendorf1 llnl.gov close 9358,,
1634,f81d5ef686e8198c38caa8622905647667165622,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-25 09:23:29 -0700,9317, add warning option removal originally module option added convenience requested elevator would automatically set underlying block device time simple kernel provided api function exactly api removed linux 4.12 kernel prompted add compatibly code set elevator via usermodehelper well intentioned introduced bug could cause system hang issue subsequently fixed commit 2a0d4188 order avoid future bug area simplify code functionality deprecated console warning added notify existing consumer documentation updated accordingly option remain lifetime 0.8.x series compatibility planned phased master reviewed richard laager rlaager wiktel.com reviewed loli10k ezomori.nozomu gmail.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 8664 close 9317,,
1635,5df7e9d85ced424292e8312a7848b6092a29c930,atthew Macy <mmacy@mattmacy.io>, 2019-09-25 09:20:30 -0700,9295, openzfs restructuring zvol refactor zvol platform dependent independent bit reviewed allan jude allanjude freebsd.org reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9295,,
1636,d359e99c38f66732d42278c32d52cfcf1839aa4f,oli10K <loli10K@users.noreply.github.com>, 2019-09-24 21:01:37 +0200,9343, diff_cb doe handle large dnodes trying zfs diff snapshot large dnodes incorrectly try access interior slot dnodesize sizeof dnode_phys_t normally issue interior slot zero filled report_dnode handle calling however case encrypted large dnodes filesystem using many based xattrs extra data past legacy dnode size boundary interpreted dnode_phys_t reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed ryan moeller ryan ixsystems.com signed loli10k ezomori.nozomu gmail.com close 7678 close 8931 close 9343,,
1637,73d7820bba26dd61085cb6dd8348ebf0bb41b951,yan Moeller <ryan@freqlabs.com>, 2019-09-22 18:27:53 -0400,9355, use signed type prevent subtraction overflow difference size could positive negative leaving type unsigned mean result overflow difference negative removing lab mean introduced bug subtraction result correct value unsigned integer interpreted signed integer lab clang see subtraction abusing type see result subtraction unsigned value passed absolute value function emits warning treat error reviewed youzhong yang youzhong gmail.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9355,,
1638,d49d7336dd42d19de00ee24d1112d496829ff027,ody A Kantor <kody.kantor@gmail.com>, 2019-09-22 17:25:39 -0500,9338, disabled resilver_defer feature lead looping resilvers disk replaced another pool resilver_defer feature present enabled resilver activity restarts spa_sync patch check make sure resilver_defer feature first enabled requesting deferred resilver originally fixed illumos joyent 7982 reviewed chris dunlop chris onthe.net.au reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed jerry jelinek jerry.jelinek joyent.com signed kody kantor kody kkantor.com external issue illumos joyent 7982 close 9299 close 9338,,
1639,afc8f0a6ffb4dd2dd5e17abc39e035eb7c7bcdc8,yan Moeller <ryan@freqlabs.com>, 2019-09-18 12:05:57 -0400,9330, refactor newlines move trailing newlines error message string format string closely match error message reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9330,,
1640,dd262c9681793e2bae6528297803e627622801f0,ndriy Gapon <avg@FreeBSD.org>, 2019-09-18 19:04:45 +0300,9163, fix logic incorrect respect swapping dataset disk zap object memory queue case ds1 already present would first replaced ds2 would replaced back ds1 also case properly handle situation ds1 ds2 already queued duplicate insertion would attempted failure would result panic reviewed matt ahrens matt delphix.com reviewed tom caputi tcaputi datto.com signed andriy gapon avg freebsd.org close 9140 close 9163,,
1641,fcd37b622b9fb3a9673b483c59fb2d1a8c368177,oli10K <loli10K@users.noreply.github.com>, 2019-09-16 19:46:59 +0200,9327, device removal indirect vdev panic kernel commit fix null pointer dereference triggered trying zpool remove indirect vdev reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9327,,
1642,b24771a8c9e4752456a2db69476388fb45a3f751,oli10K <loli10K@users.noreply.github.com>, 2019-09-16 19:46:02 +0200,9326, prevent gcc werror maybe uninitialized warning spa_wait_common commit fix following build failure detected debian9 gcc 6.3.0 module zfs spa.o module zfs spa.c function module zfs spa.c 9468 error in_progressâ may used uninitialized function werror maybe uninitialized in_progress spa error  cc1 warning treated error reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed loli10k ezomori.nozomu gmail.com close 9326,,
1643,7e15647ce9f404525eaa37c2bb95705f0caecd8a,oli10K <loli10K@users.noreply.github.com>, 2019-09-16 19:44:51 +0200,9325, zts fix usr bin env python2 file directory since 4f342e45 env must able find python2 executable constrained path system configured python 2.x otherwise zfs test suite able use python script reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed loli10k ezomori.nozomu gmail.com close 9325,,
1644,637f0c6019a67b7cc3f548ec254c5c55e2d1ef1e,om Caputi <tcaputi@datto.com>, 2019-09-16 13:07:33 -0400,9294, fix clone handling encryption root currently doe recurse clone updating encryption root either call zfs promote zfs change key cause child clone end state point wrong dataset encryption root also trigger asserts case code check reference count wrapping key patch fix issue ensuring function properly recurses clone processing reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com signed tom caputi tcaputi datto.com close 9267 close 9294,,
1645,2a0d41889e1c7c430e708cea76e70b11e0e2b0aa,oli10K <loli10K@users.noreply.github.com>, 2019-09-14 03:09:59 +0200,9321, scrubbing root pool may deadlock kernel without elevator_change 9321 originally module option added convenience requested elevator would automatically set underlying block device time simple kernel provided api function exactly api removed linux 4.12 kernel prompted add compatibly code set elevator via usermodehelper unfortunately changing evelator via usermodehelper requires reading userland binary notably modprobe zfs dataset system root zfs deadlock system used following call path may need data already cached arc reading directly disk holding spa config lock writer  spa_scan spa_scan vdev_reopen   usermodehelper wait modprobe blocked zio pipeline trying read disk info task modprobe 2650 blocked second tainted 5.2.14 modprobe 2650 206 0x00000000 call trace __schedule 0x244 0x5f0 schedule 0x2f 0xa0 cv_wait_common 0x156 0x290 spl 0xb0 0xb0 0x13b 0x1e0 zfs 0x51d 0x590 zfs 0x3b 0x80 spl zio_nowait 0x142 0x2f0 zfs arc_read 0xb2d 0x19d0 zfs ... zpl_iter_read 0xfa 0x170 zfs new_sync_read 0x124 0x1b0 vfs_read 0x91 0x140 ksys_read 0x59 0xd0 do_syscall_64 0x4f 0x130 0x44 0xa9 commit change use usermodehelper functionality synchronous umh_wait_proc asynchronous umh_no_wait prevents scrub consumer triggering aforementioned issue signed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com issue 8664 close 9321,,
1646,e60e158eff920825311c1e18b3631876eaaacb54,ohn Gallagher <john.gallagher@delphix.com>, 2019-09-13 18:09:06 -0700,9162, add subcommand wait background zfs activity complete currently best way wait completion long running operation pool like scrub device removal poll zpool status parse output neither efficient convenient change add wait subcommand zpool command invoked zpool wait block specified type background activity completes currently subcommand wait following scrub resilvers complete device initialized device replaced device removed checkpoint discarded background freeing complete example scrub progress could waited running zpool wait scrub pool also add flag attach checkpoint initialize replace remove scrub subcommands used flag make operation kicked subcommands synchronous instead asynchronous functionality implemented using new ioctl type activity wait provided input ioctl ioctl block activity type completed ioctl used method kernel userspace communiction primarily sake portability porting note ported delphix change dlpx 44432. following change made porting added zol style ioctl input declaration reorganized error handling libzfs integrate better change made trim support fixed check whether checkpoint discard progress previously also waited pool checkpoint instead checkpoint discarded exposed zol style tunable updated existing test make use new zpool wait functionality test exist delphix used existing zol tunable together zinject place new tunable added support non integral interval argument zpool wait future work zol support trimming device delphix doe future zpool wait could extended add ability wait trim operation complete reviewed matt ahrens matt delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed john gallagher john.gallagher delphix.com close 9162,,
1647,7238cbd4d3ee7eadb3131c890d0692a49ea844af,hengfei ZHu <chengfeix.zhu@intel.com>, 2019-09-13 04:33:44 +0800,9303, qat related bug fix fix issue kernel bug qat decompression 9276 uninterruptible specific given qat request ctrl interrupt still work user space process copy digest result buffer encryption vise versa decryption reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed chengfei zhu chengfeix.zhu intel.com close 9276 close 9303,,
1648,4f342e45be19d0bb8e32f38664dc29a12092dfe9,yan Moeller <ryan@freqlabs.com>, 2019-09-12 16:32:32 -0400,9314, canonicalize python shebang usr bin env python3 suggested shebang python general likewise python2 conventional across platform eas development system python installed usr bin freebsd example make possible develop virtual environment venv isolating dependency many packaging guideline discourage use usr bin env since canonical way writing shebang python community many packaging script already equipped handle substituting appropriate absolute path python automatically rpm package builder lacking brp mangle shebang need small fallback mechanism package spec stamp appropriate shebang installed python script http docs.python.org using unix.html miscellaneous reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9314,,
1649,b01a6574aebbf50504db2c1b28de5a9d288be1a5,atthew Macy <mmacy@mattmacy.io>, 2019-09-12 13:31:09 -0700,9315, move objnode handling common code objnode agnostic used dmu_redact.c reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed matt macy mmacy freebsd.org close 9315,,
1650,74756182d2da0f8889b3a0a1fded274a2baa14f5,atthew Macy <mmacy@mattmacy.io>, 2019-09-12 13:28:26 -0700,9316, enable compiler typecheck logging annotate spa logging declaration printflike workaround gcc bug non disable able warning replacing reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9316,,
1651,d66620681d85105256203b4f4407f0092e5a7fe7,atthew Macy <mmacy@mattmacy.io>, 2019-09-11 14:25:53 -0700,9290, openzfs restructuring move linux tracing code platform directory move linux specific tracing header source platform directory update build system reviewed allan jude allanjude freebsd.org reviewed ryan moeller ryan ixsystems.com reviewed brad lewis brad.lewis delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org close 9290,,
1652,5815f7ac30e108fcbf4c6487328c28d818e9e014,om Caputi <tcaputi@datto.com>, 2019-09-11 14:16:48 -0400,9300, fix stalled txg repeated noop scan currently dsl scan code figure suspend processing allow txg continue calling function unfortunately function allows scan suspend level block event system scanning bunch empty snapshot resilver running high enough scn_cur_min_txg scan stop processing dataset root level deciding nothing left mean check_suspend function never called txg remains stuck dataset found data scan patch fix problem allowing scan suspend root level objset backwards compatibility use bookmark objsetid suspend older version code work intended reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9300,,
1653,5b51c15861a0c066b25bfa4741a6df16d0c63884,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-11 11:14:50 -0700,9310, kmodtool depmod path determine location depmod system either sbin depmod usr sbin depmod use path generating specfile additionally update requires line reference package provides depmod rather binary centos rhel supported fedora release kmod package centos rhel module init tool package reviewed minh diep mdiep whamcloud.com signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8724 close 9310,,
1654,490e23cdf498d6aedb449c9dc606ae4e114d18b7,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-11 11:09:50 -0700,9208, copy builtin spl must kbuild first commit bced7e3 accidentally reintroduced issue 7595 previously addressed 517d247 apply original fix resolve issue include comment make clear ordering important reviewed ryan moeller ryan ixsystems.com reviewed matthew thode prometheanfire gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 9302 close 9208,,
1655,25f06d677a81a65ca98fa3d725ab5031a4864104,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-10 13:42:30 -0700,9285, fix etc hostid root pool deadlock accidentally introduced dc04a8c take scl_vdev lock reader deadlock occur etc hostid file resides dataset pool reading etc hostid file may occur caller holding scl_vdev lock writer example perform zpool attach shown abbreviated stack resolve issue cache system hostid initializing spa_t modifying multihost property cached value relied upon subsequent access call trace 0x1e8 0x350 zfs 0x33c 0x4f0 zfs trying read lock zio_read 0x6c 0x140 zfs ... vfs_read 0xfc 0x1e0 kernel_read 0x50 0x90 ... spa_get_hostid 0x1c 0x38 zfs 0x1a0 0x610 zfs vdev_label_init 0xa0 0xc80 zfs vdev_create 0x98 0xe0 zfs spa_vdev_attach 0x14c 0xb40 zfs grabbed write lock reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9256 close 9285,,
1656,562e1c0327be13bce43d81479bb113a1175569d4,yan Moeller <ryan@freqlabs.com>, 2019-09-10 16:27:53 -0400,9279, add generalize abstraction arc_summary3 code interfacing procfs kstats tunables linux specific generic interface used abstraction loading kstats various tunable parameter allowing platform implement function cleanly similar vein determining zfs spl version abstracted away order platform provide implementation function reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9279,,
1657,6122948b3bb6b96f9bac35492dce245fb96659db,yan Moeller <ryan@freqlabs.com>, 2019-09-10 15:17:54 -0400,9277, add generalize abstraction arc_summary2 generic interface used abstraction loading kstats allowing platform implement function cleanly similar vein loading tunables abstracted away order platform provide implementation function reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9277,,
1658,b88ca2acf5129fe1fa7817b9d1dbf6a2ad43cda9,rian Behlendorf <behlendorf1@llnl.gov>, 2019-09-10 10:45:46 -0700,9296, enable simd encryption adding simd compatibility code e5db313 decryption dataset wrapping key left user thread context done intentionally since relatively infrequent operation however also meant encryption context template initialized using generic operation therefore subsequent encryption decryption operation would use generic implementation even executed pipeline thread resolve issue initializing context template pipeline thread updating dispatch encryption operation pipeline thread called user context example performing read arc tested attila fã¼lã attila fueloep.org reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 9215 close 9296,,
1659,b63e2d881f859f0c7d8596be2759dd096e324f48,ohn Wren Kennedy <john.kennedy@delphix.com>, 2019-09-09 17:11:07 -0600,9288, zts introduce targeted corruption file block verifies various checksum algorithm detect corruption overwriting underlying vdev file resides possible overwrite miss block file causing spurious failure change introduces function corrupt individual block file determined zdb reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan ixsystems.com signed john kennedy john.kennedy delphix.com close 9288,,
1660,43f4495bde1f862a7f234919fb6c627abfdbd040,yan Moeller <ryan@freqlabs.com>, 2019-09-09 19:04:05 -0400,9286, clean do_vol_test zfs_copies test get rid get_used_prop function get_prop used work fine fix comment describing function parameter type doe default mntp also used ext2 rename variable number copy copy copy use case statement match type parameter order case alphabetically add little sanity checking good measure use eval make sure output command silenced rather log message redirecting output dev null simplify case zfs requires special behavior allow test loop forever event space usage doe change bail loop fail arbitrary number iteration add information log message test fails help debugging reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9286,,
1661,4bbf0477a7f8936627c37ab89c704e763aa63b37,laf Faaland <faaland1@llnl.gov>, 2019-09-06 11:30:07 -0700,9289, buildrequires libtirpc devel needed rhel building rhel requires libtirpc devel fedora add rhel8 centos8 option test account buildrequires originally added fedora via commit  reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed olaf faaland faaland1 llnl.gov close 9289,,
1662,bced7e3aaa3cf54d5e8e4f94e067144b27cb744b,atthew Macy <mmacy@mattmacy.io>, 2019-09-06 11:26:26 -0700,9206, openzfs restructuring move platform specific source move platform specific linux source module linux update build system accordingly additional code restructuring follow make common code fully portable reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matthew macy mmacy freebsd.org close 9206,,
1663,870e7a52c105f26ef4254b90230d396f4ce39ea7,om Caputi <tcaputi@datto.com>, 2019-09-05 19:22:05 -0400,9173, fix noop receive raw send stream currently noop receive code fails work raw send stream resuming send stream happens read drr_begin payload without reading payload normally kernel expects read case recv_skip code run instead prepared handle stream left place beginning record patch resolve issue manually reading drr_begin payload dry run case patch also includes number small fixups code path reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed tom caputi tcaputi datto.com close 9221 close 9173,,
1664,8e2c502cf3f54201a75e5b8ea983358f2b9939f9,yan Moeller <ryan@freqlabs.com>, 2019-09-05 19:20:09 -0400,9284, clean remove lot unnecessary setting incrementing remove unused variable instead calling python loop generate string repeatedly generate string using shell construct entering loop reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed ryan moeller ryan ixsystems.com close 9284,,
1665,03fdcb9adc596fb86a65edb56d8088b77ea2d891,atthew Macy <mmacy@mattmacy.io>, 2019-09-05 14:49:49 -0700,9230, make module tunables cross platform add abstract module parameter setting operating system linux reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matt macy mmacy freebsd.org signed ryan moeller ryan ixsystems.com close 9230,,
1666,65a91b166e66a57c44b62bb5ca20ccb6f0ecc46d,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-09-06 01:57:55 +0900,9282, cause side effect verification function end side effect function call metaslab_weight turn call latter dirty otherwise dirty metaslab fro next txgand set spacemaps upgraded meaning enabled feature upgrade patch add new flag parameter metaslab_weight making dirtying metaslab optional reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9185 close 9282,,
1667,240c015ac6ea629bef1339ed2829148051c2a954,yan Moeller <ryan@freqlabs.com>, 2019-09-05 12:51:59 -0400,9280, refactor checksum operation test md5sum particular also sha256sum lesser extent used several area test suite computing checksum vast majority invocation followed awk print introduce function wrap md5sum file awk print likewise sha256sum also serve convenient interface alternative implementation platform reviewed igor kozhukhov igor dilos.org reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9280,,
1668,006e9a40882468be68f276c946bae812b74ac35c,atthew Macy <mmacy@mattmacy.io>, 2019-09-05 09:34:54 -0700,9198, openzfs restructuring move platform specific header move platform specific linux header include linux update build system accordingly detect platform lay initial groundwork supporting building platform part change necessary create user kernel space sys simd.h header included either context functional change source refactored relevant include updated reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org signed matthew macy mmacy freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 9198,,
1669,d02186ee2b0570069cfbb0d08d5c52752648f388,oli10K <loli10K@users.noreply.github.com>, 2019-09-04 22:36:25 +0200,9270, fix zpool subcommands error message unsupported option detach online zpool subcommands provided unsupported option forget print error message zpool online rpool vda3 invalid option usage online pool device ... change fix error message order include actual option supported reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9270,,
1670,a49dbbbe06c6c0d0c401530c756c0c056d49fbb7,oli10K <loli10K@users.noreply.github.com>, 2019-09-04 00:20:39 +0200,9271, fix zfs dkm .deb package warning prerm script debian zfs dkm package generated alien call prerm script rpm preun integer first parameter result following warning package uninstalled zfs dkms.prerm line remove integer expression expected modify condition avoid warning reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9271,,
1671,a6a2877774faa5abfc0491e66c8361da759d22fd,yan Moeller <ryan@freqlabs.com>, 2019-09-03 15:44:08 -0400,9264, use right booleans true false happen defined use b_true b_false sake consistency reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed ryan moeller ryan ixsystems.com close 9264,,
1672,e242b67cee1dbaf09a27e7c78c55c5505ac88ff4,gor K <igor@dilos.org>, 2019-09-03 22:12:31 +0300,9151, fix panic dilos kstat per dataset statistic account kstat data size value ignored linux kstat code resolve issue platform reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 9254 close 9151,,
1673,a91e4790a60a40467170080a39424f7976e63550,avel Zakharov <pavel.zakharov@delphix.com>, 2019-09-03 14:29:52 -0400,9260, zvol_wait script ignore partially received zvols partially received zvols link dev zvol reviewed sebastien roy sebastien.roy delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pavel zakharov pavel.zakharov delphix.com close 9260,,
1674,ebeb6f23bf7e8fe6732a05267ed1cab4c38d3b23,ndriy Gapon <avg@FreeBSD.org>, 2019-09-03 20:56:55 +0300,9252, always refuse receving non resume stream resume state exists fix hole situation resume state left receiving new dataset state set dataset opposed recv child additionally distinguish incremental resume stream error message reviewed matt ahrens matt delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed andriy gapon avg freebsd.org close 9252,,
1675,1a504d27df4657d394d9a924c2e7796b692ff993,gor K <igor@dilos.org>, 2019-09-03 20:46:41 +0300,9259, zts fix create larger file extend time required perform removal occasional failure observed due removal completing cancel could requested reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 9259,,
1676,6988f3ed9af7e9e253ee49115cbc6c4d835dd53d,oli10K <loli10K@users.noreply.github.com>, 2019-09-03 19:36:33 +0200,9269, fix intel qat zfs compatibility v4.7.1 kernel change use compat code introduced 9cc1844a reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9268 close 9269,,
1677,1e52716257877dbd97373cc8ca239315eaee2984,eorge Wilson <george.wilson@delphix.com>, 2019-09-02 22:17:51 -0400,9272, maxinflight overflow running larger memory system overflow value maxinflight result maxinflight value causing system hang reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 9272,,
1678,a57c82fc50bced77b7f409595130091360533012,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:17:39 +0200,9251, fix typo reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9251,,
1679,c6e457dffb24bdc3efaea73b99480d2cf6567128,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:14:53 +0200,9250, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9250,,
1680,cb14aa4ca9a2ba84beeb2165486e65c441272c04,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:13:19 +0200,9249, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9249,,
1681,4001f09055a6daa3030d7f7916b4319949bc9334,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:12:01 +0200,9247, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9247,,
1682,220dd4ae84eaa07d58ccd26f13ca4c4cb9259ee5,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:10:31 +0200,9246, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9246,,
1683,24739cd5b084367dbafd84883b6fb7687858a922,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:08:56 +0200,9244, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9244,,
1684,37e42197a4d2bec5d4307f61024c9678d1f3ffe0,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 03:07:35 +0200,9243, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9243,,
1685,ade306a9d4fa23649c11584b289eab917534bf13,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 02:58:26 +0200,9242, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9242,,
1686,e1cfd73f7f91f1ccf4b19ec26adcbcd575f546c9,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 02:56:41 +0200,9240, fix typo module zfs reviewed matt ahrens matt delphix.com reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9240,,
1687,7859537768e030d0151a6d72a6b031751228bc85,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-09-03 02:53:27 +0200,9237, fix typo lib reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9237,,
1688,c9539600484d8f89d48629eb5775c8b1967fe7d7,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-31 01:53:48 +0200,9248, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9248,,
1689,b520706f29958b04146884b9554d4e81a62a31fa,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-31 01:52:00 +0200,9245, fix typo test reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9245,,
1690,9f5c1bc60935068d947dd596a7dbefdf4d04efd7,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 23:32:18 +0200,9241, fix typo module reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9241,,
1691,9d40bdf414e9baa8fcaf60188e2067e7ec3c1f0f,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 23:26:07 +0200,9239, fix typo module icp reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9239,,
1692,cf7c5a030e505451e0cbadc49e33e41f5219c44b,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:53:15 +0200,9238, fix typo include reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9238,,
1693,0463c955011fc3913f9aaad6c686f48f118d2fef,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:46:52 +0200,9236, fix typo etc reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9236,,
1694,cd6b910b64a999f7943020786892e6a688f980d7,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:44:43 +0200,9235, fix typo contrib reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9235,,
1695,ad0b23b14ab37a54764122fe8341e62f10245e15,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:43:30 +0200,9234, fix typo cmd reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9234,,
1696,ac3d4d0cf6b3d06cfd90636b4bc8a2043176b725,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:41:35 +0200,9233, fix typo man reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9233,,
1697,2b96f774236fa8793f9e5c387abf10d780ffca38,ndrea Gelmini <andrea.gelmini@gelma.net>, 2019-08-30 18:40:30 +0200,9232, fix typo config reviewed ryan moeller ryan ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed andrea gelmini andrea.gelmini gelma.net close 9232,,
1698,d39c71d3654f6546dc3374c7833610f51d036109,gor K <igor@dilos.org>, 2019-08-30 19:32:25 +0300,9257, fix must use zfs instead zfs undefined reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 9257,,
1699,475aa97cab771b3b2b9ddab03f5c14a1d4e985da,aul Dagnelie <pcd@delphix.com>, 2019-08-30 09:28:31 -0700,9253, prevent metaslab_sync panic due pool enables feature shortly exported enter situation cause kernel panic metaslabs loaded final dirty txg already condensed cause metaslab_sync proceed final dirty txg condense performed assertion prevent nature issue number way enter state rather try prevent one one potentially missing edge case instead cut point intersection preventing metaslab_sync proceeding would perform condense past final dirty txg preserve utility existing asserts preventing particular issue reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 9185 close 9186 close 9231 close 9253,,
1700,e2fcfa70e36a9f7c059ec64d787f37c6bd9ae48c,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2019-08-29 12:14:48 -0800,9177, etc init.d zfs functions.in remove arch warning remove x86_64 warning longer case supported architecture reviewed brian behlendorf behlendorf1 llnl.gov signed georgy yakovlev gyakovlev gentoo.org close 9177,,
1701,815a6456928b56b98bea3c9508f4037b6d6f4759,yan Moeller <ryan@freqlabs.com>, 2019-08-29 16:11:29 -0400,9224, simplify deleting partition libtest eliminate unnecessary code duplication use loop instead loop need echo disksarray subshell return declare variable typeset reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9224,,
1702,f66ad580cca5493b6f4b7acb23aa7d82f3b82755,yan Moeller <ryan@freqlabs.com>, 2019-08-29 14:03:09 -0400,9228, use compatible arg order test bsd getopt getopt_long want option argument reorder argument zfs zpool test put option first reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9228,,
1703,eef0f4d84ec8e33b25792485f1f915efeb95af77,aul Dagnelie <pcd@delphix.com>, 2019-08-29 10:20:36 -0700,9197, keep metaslabs loaded metaslab change loaded onto system significantly reduce memory usage loaded metaslab unload demand memory pressure however none change actually result keeping metaslabs loaded keep metaslabs loaded still wait demand loading finish loaded metaslab satisfy allocation cause zil performance issue addition performance traditionally measured per unit time unloading currently done txg count basis txgs take widely varying range time tenth second several second result confusing hard predict behavior change simply add time based component metaslab unloading metaslab remain loaded one minute txgs default last used unless evicted due memory pressure reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com external issue dlpx 65016 external issue dlpx 65047 close 9197,,
1704,e6cebbf86e769eba7c0e7b8834985682d1b38e7e,avel Zakharov <pavel.zakharov@delphix.com>, 2019-08-28 18:02:58 -0400,9165, zfs_handle used closed freed change_one callback typical case use free would call zfs_close zhp would free handle call handle later change ensures zfs_handle closed ready return running zfs inherit sharenfs pool failing error code without error message debugging pinpointed issue memory corruption would cause zfs try issue ioctl wrong device receive enotty reviewed paul dagnelie pcd delphix.com reviewed george wilson gwilson delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com signed pavel zakharov pavel.zakharov delphix.com issue 7967 close 9165,,
1705,8d042842815f33d2e4ab919a695139b11b7ed0c2,ony Nguyen <tony.nguyen@delphix.com>, 2019-08-28 15:56:54 -0600,9217, use smaller default slack delta value interrupt coalescing 100us slack delta call 100us slack costly small writes change improves small write performance passing resolution parameter used delta slack new tunable added preserve old behavior desired performance observation recordsize filesystem random writes thread improvement one thread smaller gain thread count increase thread decrease performance observed sequential writes similar improvement one thread leveling around thread thread decrease performance observed 128k sequential write see 128k observed regression high thread count testing done ubuntu 18.04 4.15 kernel 8vcpus ssd storage vmware esx reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tony nguyen tony.nguyen delphix.com close 9217,,
1706,07a328dde4937a49aa975e8dffea2e6f8754a097,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-28 14:52:08 -0700,9225, zts temporarily disable several upgrade test issue 9185 9186 resolved following zpool upgrade test disabled prevent failure      reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov issue 9185 issue 9186 close 9225,,
1707,28c91ab66d4607795f1e7ae3a2a82f3690ea6c4f,on Brady <don.brady@delphix.com>, 2019-08-28 11:44:46 -0600,8899, tag abd page exclusion kernel crash dump tag abd data page identified exclusion kernel crash dump eliminating zfs file data allows significantly smaller crash dump file note zfs illumos always excluded zfs data page kernel crash dump change tag arc scatter data page identified makedumpfile command command used create smaller dump file ignoring memory region using compression already filter file data vfs page cache able exclude zfs file data page dump file corresponding change makeumpfile required identify zfs data page reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed brady don.brady delphix.com close 8899,,
1708,035e96118bc9a7cbf435dd17dda507b870fcf6e6,hunwei Chen <david.chen@nutanix.com>, 2019-08-28 10:42:02 -0700,9145, fix zil replay panic tx_remove followed tx_create tx_remove followed tx_create object need make sure object removal completely finished creation current implementation relies dnode_hold_impl returning enoent check seems work fine current version doe guarantee object removal completed fix checking return successful instead also add test remove dead code dnode_hold_impl reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed chunwei chen david.chen nutanix.com close 7151 close 8910 close 9123 close 9145,,
1709,9c9dcd6e04ae7a868efafe4447bdbe67ae25a6da,yan Moeller <ryan@freqlabs.com>, 2019-08-28 13:38:40 -0400,9219, prefer true defining special constant make infinite loop excessive especially name clash symbol commonly defined platform freebsd reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9219,,
1710,e6203d288a787f7196bdc206edfc9148f9a58780,ndriy Gapon <avg@FreeBSD.org>, 2019-08-27 23:45:53 +0300,9180, check user prop permission snapshotted datasets previously permission checked pool obviously incorrect change validates property without permission check permission checked individually snapshotted dataset reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed andriy gapon avg freebsd.org close 9179 close 9180,,
1711,f335b8ffe178276c7a98bdc87965a3dc9e2b59f5,ichard Allen <33836503+belperite@users.noreply.github.com>, 2019-08-27 21:44:02 +0100,9202, fix plymouth passphrase prompt initramfs script entering zfs encryption passphrase plymouth working zfs initrd script plymouth calling zfs via command passing filesystem argument zfs load key properly passing single quote around filesystem name intended handle space literally zfs load key understand reviewed richard laager rlaager wiktel.com reviewed garrett field ghfields gmail.com signed richard allen belperite gmail.com issue 9193 close 9202,,
1712,e7a2fa70c3b0d8c8cee2b484038bb5623c7c1ea9,om Caputi <tcaputi@datto.com>, 2019-08-27 12:55:51 -0400,9203, fix deadlock zfs rollback currently zfs rollback code end deadlocked due way kernel handle unreferenced inodes suspended essentially zfs_resume_fs code path may cause zfs spawn new thread reinstantiates suspended zil new thread spawned kernel may attempt free memory thread freeing unreferenced inodes happens select inodes part suspended deadlock occur freeing inodes requires holding still held suspend patch corrects issue adding additional reference inodes still present suspend initiated prevents freed kernel reason reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9203,,
1713,142f84dd19f20b47157bbbf45aaba489b6577c88,yan Moeller <ryan@freqlabs.com>, 2019-08-26 14:48:31 -0400,9210, restore makefile.am double colon looked like typo actually obscure feature rule may appear multiple time run independently one another order appear use distclean local conventional accidental add comment indicate intentional use double colon rule reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9210,,
1714,95f0144675dd0e18617355443be0fbc7171af76b,aul Dagnelie <pcd@delphix.com>, 2019-08-25 18:33:03 -0700,9134, add regression test zpool list test zpool list well tested automated test add test zpool list reviewed prakash surya prakash.surya delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 9134,,
1715,a18f8bce5c6acb9c3990b2917efa96d1828e541c,yan Moeller <ryan@freqlabs.com>, 2019-08-25 21:30:39 -0400,9212, split argument list satisfy shellcheck sc2086 split argument test_runner across multiple line clarity also added quote message match invoked command unquoted variable argument list subject splitting particular case quote variable optional argument use method suggested description linked instead technique use unquoted variable alternate value http github.com koalaman shellcheck wiki sc2086 reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9212,,
1716,4302698be16e88419b8b22194685372e012fa333,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-22 17:37:48 -0700,9196, zts fix tree dbufstats test case commit a887d653 updated dbufstats escalated privilege required since test cli_user run normal privilege move test case location run required privilege reviewed john kennedy john.kennedy delphix.com reviewed ryan moeller ryan ixsystems.com reviewed michael niewã hner mniewoehner.de signed brian behlendorf behlendorf1 llnl.gov close 9118 close 9196,,
1717,d1d1f8c37db83dc3f3ed6c571b644f2e400c6ee5,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-22 17:31:38 -0700,9089, fix install error introduced 9089 9205 signed paul dagnelie pcd delphix.com,,
1718,97c54ea818ac60b914d1591e17ab175d89410b1b,yan Moeller <ryan@freqlabs.com>, 2019-08-22 20:26:51 -0400,9194, make slog test setup robust slog test fail attempting create pool using file vdevs already exist previous test run remove file setup test reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed ryan moeller ryan ixsystems.com close 9194,,
1719,19d61d63faa359afee5b3d7eb233bb786bc0de1c,shui <yshuiv7@gmail.com>, 2019-08-23 01:11:17 +0100,9174, zfs mount genrator dependency space separated reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com signed yuxuan shui yshuiv7 gmail.com close 9174,,
1720,d1484fb1898043adc543f19d909c9f02d15b73f7,aul Dagnelie <pcd@delphix.com>, 2019-08-22 12:01:41 -0700,9089, fix install error introduced 9089 signed paul dagnelie pcd delphix.com,,
1721,31b548ffb91f1475f5154df9d26e8917e96f81fb,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-22 10:36:57 -0700,9195, zts use decimal value setting tunables mdb_set_uint32 function requires value passed decimal overlooked initially matching linux function accepts decimal hexadecimal value reviewed john kennedy john.kennedy delphix.com reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 9125 close 9195,,
1722,a3ba6e589fcea2c08a50d3442c5e1805bdfb86f4,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-22 09:53:45 -0700, , fix automake program name transformation 9190 automake perform program name transformation install time however arc_summary name transformation taking place interferes automake transforms automake transforms must taken account order resolve conflict signed ryan moeller ryan ixsystems.com,,
1723,2f74950c5e0f0693448a4c8bb75389313f00c996,auricio Faria de Oliveira <mauricio.foliveira@gmail.com>, 2019-08-22 13:48:48 -0300,9191, document userland configuration document option userland configuration file done zfs_dkms_ option introduced commit e45c1734a665 dkm enable debuginfo option set zfs sysconfig file mentioned anywhere dkms.conf file generated reviewed brian behlendorf behlendorf1 llnl.gov signed mauricio faria oliveira mfo canonical.com close 9191,,
1724,0154a1e539370e66bbe54eb62a36f0d684c03331,yan Moeller <ryan@freqlabs.com>, 2019-08-22 12:46:09 -0400,9188, dedup ioc enum value reuse enum value zfs_ioc_base helpful freebsd zfs_ioc_base different value wrong reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9188,,
1725,f591a581d6b57509057e6ec5ebae31d7f12cc106,yan Moeller <ryan@freqlabs.com>, 2019-08-22 12:44:11 -0400,9187, enhance ioctl number check checking zfs_ioc_ number print number wrong rather silently failing reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9187,,
1726,20f7b917aaabd16b41321e9c4dc9f11996ca3683,rian Behlendorf <behlendorf1@llnl.gov>, 2019-08-22 08:53:44 -0700,9199, zts fix centos ancient version blkid v2.17.2 used centos detect newly created pool unless written force pool sync zpool import detect newly created pool reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 9199,,
1727,a9ebdfdd43204b8f907c5395cd68b2d745544730,ony Hutter <hutter2@llnl.gov>, 2019-08-21 09:29:23 -0700,9170, linux 5.3 fix switch fall though compiler error fix switch fall though compiler error abd.c 1504 error statement may fall reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 9170,,
1728,f66a1f88fb31716030c97f71df13a7ecef365a79,yan Moeller <ryan@freqlabs.com>, 2019-08-21 12:01:59 -0400,9189, minor cleanup makefile.am split long line adding license info dist archive remove extra colon target line reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 9189,,
1729,c759b33a519ca5f0d5bce51501bd4230134d4b25,lexey Smirnoff <fling-@users.noreply.github.com>, 2019-08-20 23:26:19 +0000,9168, zfs functions.in in_mtab always return used wrong sed command mntpnt instead match variable exported read_mtab fix mostly reuse sed command found read_mtab reviewed brian behlendorf behlendorf1 llnl.gov reviewed michael niewã hner mniewoehner.de signed alexey smirnoff fling member.fsf.org close 9168,,
1730,92a9e1da60f760380220624db2681b72ffff9a0b,yan Moeller <ryan@ixsystems.com>, 2019-08-20 17:45:26 -0400, , fix automake program name transformation automake perform program name transformation install time however arc_summary name transformation taking place interferes automake transforms automake transforms must taken account order resolve conflict signed ryan moeller ryan ixsystems.com,,
1731,325d288c5d536227010ff4dfcf66df89f123d166,atthew Ahrens <mahrens@delphix.com>, 2019-08-20 11:34:52 -0700,8744," add fast path handling empty_bpobj many snapshot call e.g zfs destroy pool snap1 snap10000 slow resulting poor performance holding entire time blocking spa_sync continuing around ten thousand snapshot seen 500 second ioctl iterating 50,000,000 bpobjs empty bpobj creating fast path handling empty_bpobj achieve performance improvement ioctl many snapshot deadlist mostly empty_bpobj reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 58348 close 8744",,
1732,3beb0a7694df5d1d4314179147aaa1d40b63fe76,dike <52420226+jdike@users.noreply.github.com>, 2019-08-19 19:04:26 -0400,9110, fix lockdep circular locking false positive involving sa_lock two different deadlock scenario share common link thread holding sa_lock trying get zap zap_rwlock 0x858 0x16c0 zfs zap_lockdir 0xd2 0x100 zfs zap_lookup_norm 0x7f 0x100 zfs zap_lookup 0x12 0x20 zfs sa_setup 0x902 0x1380 zfs zfsvfs_init 0x3d6 0xb20 zfs zfsvfs_create 0x5dd 0x900 zfs zfs_domount 0xa3 0xe20 zfs thread trying get sa_lock either sa_setup sa_setup 0x742 0x1380 zfs zfsvfs_init 0x3d6 0xb20 zfs zfsvfs_create 0x5dd 0x900 zfs zfs_domount 0xa3 0xe20 zfs sa_build_index sa_build_index 0x13d 0x790 zfs 0x368 0x500 zfs 0x24b 0x330 zfs zfs_znode_alloc 0x3da 0x1a40 zfs zfs_zget 0x39a 0x6e0 zfs zfs_root 0x101 0x160 zfs zfs_domount 0x91f 0xea0 zfs different locking path back something holding zap zap_rwlock deadlock scenario involve multiple different zfs filesystems mounted sa_lock common scenario struct involved private mount therefore must referring different sa_lock instance deadlock occur practice fix brian behlendorf remove sa_lock lockdep coverage initializing mutex_nolockdep reviewed brian behlendorf behlendorf1 llnl.gov signed jeff dike jdike akamai.com close 9110,,
1733,ff4b68eedc307e6e9b7f3890b809cbb0e9d73856,ominic Pearson <dsp@technoanimal.net>, 2019-08-20 00:22:52 +0200,9169, linux 5.3 compat makefile subdir longer supported obj instead due kernel change see lkml masahiro yamada tue aug 2019 0900 reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed dominic pearson dsp close 9169,,
1734,f6fbe25664629d1ae6a3b186f14ec69dbe6c6232,olmbuckley <colm@tuatha.org>, 2019-08-19 23:11:47 +0100,9042, set none scheduler available initramfs existing zfs initramfs script logic attempt set noop scheduler available vdev block device newer kernel similar none scheduler multiqueue device change alters initramfs script logic also attempt set scheduler available reviewed brian behlendorf behlendorf1 llnl.gov reviewed garrett field ghfields gmail.com reviewed richard laager rlaager wiktel.com signed colm buckley colm tuatha.org close 9042,,
1735,1a26cb6160949d1aa16a91714c88fd927423209f,aul Dagnelie <pcd@delphix.com>, 2019-08-19 15:06:53 -0700,9139, add refquota test used possible zfs receive operation related clone swap bypass refquotas cause number issue automated test added test rollback receive overriding refquota reviewed pavel zakharov pavel.zakharov delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 9139,,
1736,f09fda5071813751ba3fa77c28e588689795e17e,aul Dagnelie <pcd@delphix.com>, 2019-08-16 08:08:21 -0700,9128, cap metaslab memory usage system large amount storage high fragmentation huge amount space used storing metaslab range tree since metaslabs unloaded txg sync inactive txgs possible get state system memory consumed range tree metaslabs txgs sync zfs know evict arc data needed mechanism range tree data result boot hang system configuration first add ability unload metaslabs outside syncing context second store multilist loaded metaslabs sorted selection txg quickly identify oldest metaslabs use multilist reduce lock contention heavy write workload finally add logic unload metaslab loading new metaslab using certain fraction available memory range tree reviewed matt ahrens mahrens delphix.com reviewed george wilson gwilson delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 9128,,
1737,9323aad14d2f99d6fff1e50cce25fa6361495ec4,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-08-16 17:02:32 +0200,9089, initramfs fix debian initramfs contrib initramfs include etc default zfs etc zfs zfs function least debian need etc default zfs etc zfs zfs function initramfs include build initramfs configured contrib initramfs include zvol.rules zvol_id include zvol.rules zvol_id set udev predependency instead debians zdev make debians additional zdev hook unneeded correct initconfdir substitution distros every linux distro using sysconfdir default initconfdir already determined configure let use systemd prevent possible conflict systemd sysvinit systemd load sysvinit service unit exists name prevents conflict sysvinit systemd zfs one sysvinit service doe systemd service target counterpart zfs import.target usually doe make sense install possisble let prevent conflict masking zfs import.service default doe harm even init.d zfs import doe exist reviewed chris wedgwood f00f.org reviewed brian behlendorf behlendorf1 llnl.gov tested alex ingram reimu tested dreamcat4 dreamcat4 gmail.com signed michael niewã hner mniewoehner.de close 7904 close 9089,,
1738,0f8ff49eb69311dca3ab799e18d1a0ab389befac,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-08-15 16:53:53 -0700,9137, dmu_tx_wait hang likely due cv_signal even though bug writeup github issue 9136 detailed still know exactly got state thus able reproduce bug said make educated guess combining information filled issue code fact dp_dirty_total know one thread set signaled one waiter see also place dp_dirty_total changed thus logical explaination bug hit waiter got awaken given function called think two possible way scenario happening waiter call two function find highly unlikely i.e wait begin  waiter call one function passed space delta dirtied undirtied callee returned immediately e.g return immediately space case matter got easy fix would broadcast waiter whenever dp_dirty_total hit said given never hit would make sense think situation occured attempting mimic prakash issue filed created dataset sync always started contiguous writes file within dataset observed dtrace even though update pool dirty data accounting would dirty stuff accounting decremented incrementally done zios writes reason called override code path thus never called result wait get dsl_pool_sync zero dirty data accounting pool current txg metadata addition matt noted later verified issue would arise using dedup case sync dedup wait dsl_pool_sync zero accounting data according comment part code reason zeroing nothing observe   written accounted dirty data zero however seldom used code path adhere e.g dbuf_undirty also rounding error shore accounting dirtied space  dp_dirty_pertxg txg txg_mask txg  ideally want undirty accounting exactly dirty use word ideally still rounding error would make behavior system clear predictable another interesting issue observed dtrace update pool dirty data accounting whenever would dirty undirty data addition every time would change size dbuf dbuf_new_size update accounted space dirtied appropriate dirty record zios done would undirty dirtied pool accounting point view first two issue observed sync dedup patch ensures still update pool accounting undirty data regardless write physical change first ensure zero pool dirty data accounting dsl_pool_sync synced ahead enable update pool dirty data accounting wheneve change data another fix update accounting explicitly counting error dbuf_write_done finally dbuf_new_size update accounted space appropriate dirty record correctly problem still know bug came issue filled said issue fixed seem relevant instead going broadcasting solution right away decided leave patch reviewed brian behlendorf behlendorf1 llnl.gov reviewed prakash surya prakash.surya delphix.com signed serapheim dimitropoulos serapheim delphix.com external issue dlpx 47285 close 9137,,
1739,c8bbf7c00b3e1d949f928fd3aace234e38906a12,ony Nguyen <tony.nguyen@delphix.com>, 2019-08-15 17:36:24 -0600,9156, improve write performance using zfs_log_write use rather dmu_read thus avoiding unnecessary dnode_hold call get performance gain large test 128k writes file recordsize testing done ubuntu 18.04 4.15 kernel 8vcpus ssd storage vmware esx reviewed brian behlendorf behlendorf1 llnl.gov signed tony nguyen tony.nguyen delphix.com close 9156,,
1740,0e37a0f4f3bc4feb62a966a7c0dd64544172395f,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-08-15 07:44:57 -0700,8348, assert dnode bonuslen never exceeds recorded size patch introduces assertion catch pitfall development mismatch size read writes _phys structure respective core structure bonus buffer used debugging aid complementary verification done ztest side patch clear extra byte past bonus buffer new size buffer shrinking reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed serapheim dimitropoulos serapheim delphix.com close 8348,,
1741,e2b31b58e8777faa51561342d72a5a30127fa4b6,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-08-15 10:27:13 -0400,9115, make txg_wait_synced conditional zfsvfs_teardown call txg_wait_synced zfsvfs_teardown made conditional objset dirty data prevent unnecessary txg_wait_synced unmount operation reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 9115,,
1742,dc04a8c757d7df91efbca05491174112540f6e7a,aul Dagnelie <pcd@delphix.com>, 2019-08-13 20:24:43 -0700,9112, prevent race blkptr_verify device removal check vdev blkptr run race condition vdev temporarily unavailable happens device removal operation old vdev_t removed array new indirect vdev yet inserted hold spa_config_lock sensitive verification ensure deadlock grab lock config_writer held addition const tag refcounts spa_config_lock argument reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed paul dagnelie pcd delphix.com close 9112,,
1743,8e556c5ebc7b66caf2cdcc561b6644f9f8437a6d,hunwei Chen <david.chen@nutanix.com>, 2019-08-13 20:21:27 -0700,9061, fix order zil txtype lost hardlinked file call object removed however current implementation called whenever tx_remove called case hardlinked file every unlink generate tx_remove causing operation dropped even object removed fix calling file fully unlinked reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed prakash surya prakash.surya delphix.com signed chunwei chen david.chen nutanix.com close 8769 close 9061,,
1744,475ebd763a7bc963b64118c22244cb0cd795d778,rakash Surya <prakash.surya@delphix.com>, 2019-08-13 20:18:53 -0700,9111, fix device expansion powered running esxi based found zpool online expand zpool disk expanded esxi powered example take following scenario running top vmware esxi zfs pool created given device sda size 8gb powered device sda size expanded 16gb powered zpool online used device sda situation zpool roughly 8gb size expectation zpool size expand roughly 16gb size i.e expand new size sda device unfortunately seen zpool size doe change happening efi label sda device field efi_last_u_lba efi_last_lba efi_altern_lba reflect new size disk i.e 33554398 33554431 33554431 respectively thus check perform efi_label efi_altern_lba efi_label efi_altern_lba efi_label efi_last_lba return true return function without expanded size zpool device contrast remove step sequence i.e device expanded powered thing change case field efi_last_u_lba efi_altern_lba change i.e still reflect old 8gb device size efi_last_lba field doe change i.e reflects new 16gb device size thus evaluate conditional return false zpool expanded taking account update properly expand zpool underlying disk expanded powered reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson gwilson delphix.com reviewed brady don.brady delphix.com signed prakash surya prakash.surya delphix.com close 9111,,
1745,d2a32912b9f768065eaac31b4713bbaf316b7637,llan Jude <allanjude@freebsd.org>, 2019-08-13 23:16:23 -0400,9154, mark static function used outside dsl_dataset.c reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed sara hartse sara.hartse delphix.com signed allan jude allanjude freebsd.org close 9154,,
1746,c8242a96ba8495013cc2f2e12ea6202e61796462,eorge Wilson <george.wilson@delphix.com>, 2019-08-13 08:11:57 -0600,9146, spa_load_verify may consume much memory pool imported scan pool verify integrity data metadata amount scan depend import flag provided system small amount memory importing pool crash kernel possible spa_load_verify issue many consumes memory system resulting oom message hang prevent limit amount memory initial pool scan consume change default use 16th arc scan prevent running system memory import reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed george wilson george.wilson delphix.com external issue dlpx 65237 external issue dlpx 65238 close 9146,,
1747,a43570c5f3ca11957c23b4e073a520963cd9cfb2,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-08-13 22:58:02 +0900,9092, change boolean like uint8_t field znode_t boolean_t given znode_t core structure readable boolean also locate existing boolean field space efficiency expecting booleans packed aligned reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9092,,
1748,fccbd1d6e2e0a95511ad3e1c743b98bf31a6b6c9,ichard Yao <ryao@gentoo.org>, 2019-08-13 09:46:12 -0400,9119, drop kmc_noemergency implemented implemented using would risk deadlock pre 3.18 kernel let drop reviewed brian behlendorf behlendorf1 llnl.gov reviewed michael niewã hner mniewoehner.de signed richard yao ryao gentoo.org close 9119,,
1749,3b9edd7b171f510b0abb9c885aa5b77114b8169a,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-08-12 10:02:34 -0700,7902, introduce getting hold listing bookmark zcp consumer zfs channel program list bookmark get hold datasets minor refactoring also applied distinguish user system property zcp reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com ported serapheim dimitropoulos serapheim delphix.com signed dan kimmel dan.kimmel delphix.com openzfs issue http illumos.org issue 8862 close 7902,,
1750,2081db79827e0fbc3088dcd693f8af7d7d0191a4,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-08-12 09:49:07 -0700,9143, sort log spacemap tunables alphabetical order beside whole commit nit reality bring diffs source file zol delphix zfs reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9143,,
1751,c81f1790e28a547769ce9d8e2d25391cf4317cc0,aul Dagnelie <pcd@delphix.com>, 2019-08-05 14:34:27 -0700,9055, metaslab max_size persisted unloaded unload metaslabs today zfs cached max_size value discarded instead use histogram determine whether think satisfy allocation metaslab result situation size aligned histogram bucket metaslab loaded even though satisfy allocation think example metaslab entry 16k 32k bucket may entirely 16kb entry try allocate 24kb buffer load metaslab think able handle allocation expensive cpu time disk read average latency exacerbated write attempted sync write change make zfs cache max_size metaslab unloaded ever get free coalesced group free larger max_size update otherwise leave attempting allocate use max_size lower bound respect unless try_hard however age max_size point since expect actual max_size increase free sophisticated algorithm might helpful work reasonably well reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed paul dagnelie pcd delphix.com close 9055,,
1752,99e755d653aec351c43a636b5734d1de3476d233,eHackEd <DeHackEd@users.noreply.github.com>, 2019-08-05 14:35:47 -0400,9091, wakeup unnecessarily zpool event zed prevent cpu properly sleeping rather periodically waking zevents code sleep wait wakeup reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed dhe git dehacked.net close 9091,,
1753,8098465558184612265afeaf72d98369b77f4acc,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-08-05 10:50:20 -0700,9101, test cancelling removal zts patch add new test sanity check cancelling removal reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed serapheim dimitropoulos serapheim delphix.com close 9101,,
1754,48be0dfba19f35637877ab63f58d52b6d51e759c,dike <52420226+jdike@users.noreply.github.com>, 2019-07-31 17:53:39 -0400,9094, lockdep false positive move txg_kick outside dp_lock fix lockdep warning breaking link tx_sync_lock dp_lock deadlock envisioned lockdep thread hold db_mtx try get dp_lock 0x70 0x2d0 zfs dbuf_dirty 0x778 0x31d0 zfs thread hold bpo bpo_lock try get db_mtx  0x6b 0x6c0 zfs 0xbe6 0x1410 zfs thread hold tx_sync_lock try get bpo bpo_lock bpobj_space 0x63 0x470 zfs dsl_scan_active 0x340 0x3d0 zfs txg_sync_thread 0x3f2 0x1370 zfs thread hold dp_lock try get tx_sync_lock txg_kick 0x61 0x420 zfs 0x1c7 0x3f0 zfs patch orginally brian behlendorf slightly simplified  break cycle thread moving call txg_kick outside section controlled dp_lock reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed jeff dike jdike akamai.com close 9094,,
1755,cae97c88c4ed2d99b523b84c713993d26034a23b,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-31 09:29:01 -0700,9096, list log_spacemap feature zpool features.5 manual update zpool features.5 manpage describe log_spacemap feature reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed serapheim dimitropoulos serapheim delphix.com close 9096,,
1756,f489458ad7e7214df455ac00af621e9b4369361d,lint Armstrong <clint@clintarmstrong.net>, 2019-07-30 19:02:19 -0400,9050, add channel program property based snapshot channel program many user find useful included zfs contrib directory first contribution channel program recursively take snapshot datasets property com.sun auto snapshot true reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed clint armstrong clint close 8443 close 9050,,
1757,1ba4f3e7b4e15b2262802909bee50355e439c67e,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-30 13:20:01 -0700,9074, 9072 handle error log spacemap zap possible return error expected enoent e.g end zap ensure error case handled correctly import path reviewed brian behlendorf behlendorf1 llnl.gov reviewed sara hartse sara.hartse delphix.com reviewed matt ahrens matt delphix.com signed serapheim dimitropoulos serapheim delphix.com close 9074,,
1758,2fcf4481a6f6ff037e24f2926e31fd64a50536da,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-30 10:13:44 -0700,9097, mismerged log spacemap comment log spacemap commit merged zol debugging function deleted feature pretty much stable unfortunately though reference comment patch deletes reference paste comment reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed serapheim dimitropoulos serapheim delphix.com close 9097,,
1759,a6c82894735a476ce5eb275f307ec0b5430296e4,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-07-30 19:06:09 +0200,9087, install path fix rpm correct pkgconfig path pkconfig file get installed datarootdir pkgconfig rpm expects datadir work datarootdir datadir case time fail differ install make initramfs tool path static since initramfs tool path nothing control external package doe make sense install zfs addition anywhere else simply use usr share initramfs tool path reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed michael niewã hner mniewoehner.de close 9087,,
1760,85ce79bbc8cf17f100eb4ae6a0d1b1ce2e2dd9d9,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-07-30 18:59:38 +0200,9084, increase default zcmd allocation 256k creating hundred clone example using container lxd cloning slows number clone increase time reason fetching clone information using small zcmd buffer requires two ioctl call one determine size second return data however requires gathering data twice determine size populate zcmd buffer return userspace expensive ioctl call instead make default buffer size much larger 256k reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed colin ian king colin.king canonical.com signed michael niewã hner mniewoehner.de close 9084,,
1761,0eb8ba6ab68801d4b0e6280e7388514a6355fc86,atthew Ahrens <mahrens@delphix.com>, 2019-07-30 09:18:30 -0700,9081, improve performance using dmu_tx_hold_ _by_dnode zfs_write dmu_tx_hold_sa use dmu_tx_hold_ _by_dnode instead dmu_tx_hold_ since already dbuf target dnode hand eliminates call dnode_hold expensive especially impactful several thread accessing object block dnodes contend dbuf lock seeing performance win test performance test suite 128k writes file recordsize also remove unnecessary cast area reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 9081,,
1762,1e620c98727a5a5cff1af70fef9bc25626b4e9d8,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-29 12:46:56 -0700,9090, revert develop test issue 5866 8858 reverts commit change resulted kmem leak observed existing code need identified addressed reviewed paul zuchowski pzuchowski datto.com signed brian behlendorf behlendorf1 llnl.gov issue 8978 close 9090,,
1763,adf495e23982f2f94b468806fa059358fcab0c88,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-28 18:15:26 -0700,9080, fix channel program s390x adapting original source s390x jmp_buf_cnt mistakenly halved due incorrect assumption size unsigned long byte s390x architecture increase jmp_buf_cnt accordingly authored brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reported colin ian king canonical.com tested colin ian king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 8992 close 9080,,
1764,453bb4791e7d0479643ce340818106ab878b562b,eorge Wilson <george.wilson@delphix.com>, 2019-07-28 21:13:56 -0400,9083, race zfs share zfs mount service system boot zfs mount.service zfs share.service start simultaneously may unclear sharing filesystem first mount filesystem already mounted mean service race mount fileystem race result segfault ebusy condition change explicitly defines start ordering two service zfs mount.service solely responsible mounting filesystems eliminating race zfs mount zfs share command reviewed sebastien roy sebastien.roy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 9083,,
1765,693c1fc478cc8118dd0168c4815c0ae3be41c9c3,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-07-26 20:52:13 -0400,8978, develop test issue 5866 8858 provide zfstest coverage two issue panic accessing extended attribute problem comparing bit bit generation number reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com issue 5866 issue 8858 close 8978,,
1766,9fb6abe5addfa2f2d9f382422d50b37764c3569c,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-27 05:52:30 +0900,9043, implement unconditionally return i.e retain suid sgid test cap_fsetid capability http github.com pjd pjdfstest blob master test chmod 12.t expects suid sgid dropped write non owner fails without filesystems make decision within vfs using generic file write fop reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9035 close 9043,,
1767,4b5c9d9f976375ca4f075a533d2b6f0c9a14cf4a,atthew Ahrens <mahrens@delphix.com>, 2019-07-26 12:07:48 -0700,9060, zed crash devid present zed core dump due null pointer gs_devid null nvl devid entry check dev_identifier present nvl later assume dev_identifier present thus gs_devid set typically problem usually either vdevs devid none since first check vdev devid dereferencing gs_devid problem typically encountered however vdevs devid problem easily reproduced happen pool moved system devid one doe fix try match devid nvl gsp devid present reviewed prashanth sreenivasa pks delphix.com reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed matthew ahrens mahrens delphix.com external issue dlpx 65090 close 9054 close 9060,,
1768,37f03da8ba6e1ab074b503e1dd63bfa7199d0537,ara Hartse <sara.hartse@delphix.com>, 2019-07-26 10:54:14 -0700,8416, fast clone deletion deleting clone requires finding block clone shared snapshot done traversing entire block tree result large performance penalty sparsely written clone new method keep track clone block modified livelist itâ time delete clone specific block already hand see performance improvement deletion work proportional number clone modified block size original dataset reviewed sean eric fagan sef ixsystems.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed sara hartse sara.hartse delphix.com close 8416,,
1769,d274ac54609894d00a49c0a0da89abd3a7f3998d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-26 03:59:20 +0900,9065, directly cast unsigned long void cast uintptr_t first portability integer pointer conversion reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9065,,
1770,1ff46825e232b3ad3414f60fab8dcba8ed17d778,atthew Ahrens <mahrens@delphix.com>, 2019-07-25 11:57:58 -0700,9062, replace zf_rwlock mutex rwlock implementation linux doe perform well mutexes realize performance benefit replacing zf_rwlock mutex local microbenchmarks show improvement nfs see improvement several zfs performance test case especially randwrite seq_write reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com reviewed olaf faaland faaland1 llnl.gov signed matthew ahrens mahrens delphix.com close 9062,,
1771,09276fde1ce7730804957da88350c893d635526b,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-20 03:23:56 +0900,9051, fix module_param type unsigned long reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9051,,
1772,d84c5a120e992a3576b0fdab233ed619ffeb9539,ony Hutter <hutter2@llnl.gov>, 2019-07-19 11:21:54 -0700,9057, move test cli_user zpool_status test test functional cli_root zpool_status require root however linux.run user specified test mean run normal user removed line run root following test pas  zpool_status_ c_disable zpool_status_ c_homedir zpool_status_ c_searchpath test need run normal user fix move test new test functional cli_user zpool_status directory reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed tony hutter hutter2 llnl.gov close 9057,,
1773,7f31908913592b3075306daf403f2a334602493e,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-19 11:19:50 -0700,9045, tricky semantics ms_max_size used two place trying select metaslab allocate trying allocate metaslab always expect metaslab loaded refactoring log spacemap change whenever load metaslab set ms_max_size biggest range ms_allocatable tree thus used field mean metaslab segment used allocation though may free space space freeing freed deferred tree metaslab loaded unloaded point either mean metaslab space metaslab loaded thus ahead try make estimation based weight issue call function metaslab allocatable space still ahead check ms_weight may date ran yet point allowing allocation attempted even though know range allocatable patch fix issue explicitly checking metaslab loaded ms_max_size used reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9045,,
1774,43a8536260e76dab4a615164f9e6d6397c6b7778,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-18 13:02:33 -0700,9044, race condition spa async thread export past seen multiple race condition open context thread async thread concurrent call spa_export spa_destroy including one referenced issue 9015 patch ensures one thread execute main body time subsequent thread returning new error code created situation eliminating way race condition bug introduced concurrent call function reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9015 close 9044,,
1775,1c44a5c97fabc669885df84c3e9b6b5e16f0cd35,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-18 12:55:29 -0700,9047, hdr_recl call zthr_wakeup destroyed zthr exists race condition hdr_recl call zthr_wakeup destroyed zthr timeline following hdr_recl run first intro zthr_wakeup arc_initialized set arc_fini called another thread zero flag destroying zthr buf_init hdr_recl try enter destroyed mutex blow patch ensures arc zthrs offloaded new work arc_initialized set destroys arc state deleted reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9047,,
1776,bac15c11983e72cfd8ce10512aa9d227135bbca0,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-18 12:54:03 -0700,9048, zdb print log spacemap stats pool without feature creating pool feature enabled running zdb mmmmmm patch  log space map pool log space map obsolete entry statistic valid entry txg valid entry total  patch output away reviewed matt ahrens matt delphix.com reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 9048,,
1777,f79121d11463b8c9a6cbaf7285e5df6ccb9902f9,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-19 04:48:46 +0900,9052, fix wrong comment zcr_blksz_ min max tunable illumos comment fixed 3742 zfs comment need cleaner consistent style sync reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9052,,
1778,26b60474691ad4bdb91f61b667819e22aabc202f,avel Zakharov <pavel.zakharov@delphix.com>, 2019-07-17 18:33:05 -0400,8975, new service wait zvol link created zfs volume wait.service scan existing zvols wait link dev created service depends zvol link add dependency zfs volumes.target default target enabled reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed antonio russo antonio.e.russo gmail.com reviewed richard laager rlaager wiktel.com reviewed loli10k ezomori.nozomu gmail.com reviewed john gallagher john.gallagher delphix.com reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed pavel zakharov pzakharov delphix.com close 8975,,
1779,d64dd3b62a5411e628ce59b11fe50ba848d12ffc,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-12 14:40:15 -0700,9029, retire unused spl_ mutex rwlock init_fini function unused removed along spl mutex.c spl rwlock.c source file reviewed tony hutter hutter2 llnl.gov reviewed tomohiro kusumi kusumi.tomohiro gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9029,,
1780,e7a99dab2b065ac2f8736a65d1b226d21754d771,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-12 14:06:36 -0700,9029, linux 5.3 compat retire rw_tryupgrade linux kernel rwsem never provided interface allow reader upgraded writer historically functionality implemented spl wrapper function however approach depends internal knowledge rw_semaphore therefore rather brittle since zfs code must always able fallback rw_exit rw_enter rw_tryupgrade fails functionality critical furthermore potentially performance sensitive consumer dmu_zfetch decrease performance observed change applied see comment additional testing detail therefore retired make build robust simplify rwlock implementation reviewed tony hutter hutter2 llnl.gov reviewed tomohiro kusumi kusumi.tomohiro gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9029,,
1781,041205afee7e151a0ac10c9b5314186cf65417dc,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-12 13:27:24 -0700,9029, linux 5.3 compat rw_semaphore owner commit http github.com torvalds linux commit 94a9717b updated rwsem owner field contain additional flag describing rwsem state rather update wrapper mask bit code longer relies owner stored kernel doe increase size krwlock_t make implementation sensitive future kernel change reviewed tony hutter hutter2 llnl.gov reviewed tomohiro kusumi kusumi.tomohiro gmail.com signed brian behlendorf behlendorf1 llnl.gov close 9029,,
1782,a649768a1771236c4af783ec3f03b1d6da9b5862,dike <52420226+jdike@users.noreply.github.com>, 2019-07-17 12:18:24 -0400,8984, fix lockdep recursive locking false positive dbuf_destroy lockdep report possible recursive lock dbuf_destroy true dbuf_destroy acquiring dn_dbufs_mtx one dnode holding another dnode however impossible dnode among thing dbuf_destroy check mutex_held acquiring mutex fix defines class nested_single change lock call subclass nested_single order make userspace code compile include sys zfs_context.h defines nested_single lockdep report 122.950921 122.950921 warning possible recursive locking detected 122.950921 4.19.29 4.19.0 debug tainted 122.950921 122.950921 dbu_evict 1457 trying acquire lock 122.950921 dn_dbufs_mtx dbuf_destroy 0x3c0 0xdb0 zfs 122.950921 task already holding lock 122.950921 dn_dbufs_mtx 0x90 0x740 zfs 122.950921 info might help debug 122.950921 possible unsafe locking scenario 122.950921 cpu0 122.950921 122.950921 lock dn_dbufs_mtx 122.950921 lock dn_dbufs_mtx 122.950921 deadlock 122.950921 may due missing lock nesting notation 122.950921 lock held dbu_evict 1457 122.950921 dn_dbufs_mtx 0x90 0x740 zfs 122.950921 stack backtrace 122.950921 cpu pid 1457 comm dbu_evict tainted 4.19.29 4.19.0 debug 122.950921 hardware name supermicro h8ssl h8ssl bios 080011 2009 122.950921 call trace 122.950921 dump_stack 0x91 0xeb 122.950921 __lock_acquire 0x2ca7 0x4f10 122.950921 lock_acquire 0x153 0x330 122.950921 dbuf_destroy 0x3c0 0xdb0 zfs 122.950921 dbuf_evict_one 0x1cc 0x3d0 zfs 122.950921 0xb84 0xd60 zfs 122.950921 0x3a6 0x740 zfs 122.950921 0x7a 0x500 zfs 122.950921 0x70 0x480 zfs 122.950921 taskq_thread 0x979 0x1480 spl 122.950921 kthread 0x2e7 0x3e0 122.950921 ret_from_fork 0x27 0x50 reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed jeff dike jdike akamai.com close 8984,,
1783,095b5412b31c07cad5cec74a4eb5ace011c92b27,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-17 09:14:36 -0700,9049, fix build failure defined symbol pulled dependency result build failure prevent undefine disable warn_on_fpu macro rely warn_on_once debugging check previously added reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 9041 close 9049,,
1784,5784c7c36eca5a0c9ed662dfd9248de4c90862cf,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-07-17 18:09:22 +0200,9031, add missing __gfp_highmem flag vmalloc make use __gfp_highmem flag vmem_alloc required bit system make use full available memory kernel version 4.12 rc1 add flag implicitly older kernel reviewed brian behlendorf behlendorf1 llnl.gov signed sebastian gottschall s.gottschall wrt.com signed michael niewã hner mniewoehner.de close 9031,,
1785,c8802ba08d50483ca583f54dbe730e8ada922dd0,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-18 01:07:53 +0900,9039, use wrapper zfs_refcount_ wrapped file reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9039,,
1786,8062b7686aa2c3a22824b9a7c83cf01a5fa457a0,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-16 17:22:31 -0700,9030, minor style cleanup resolve assortment style inconsistency including use white space typo capitalization line wrapping functional change reviewed tony hutter hutter2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 9030,,
1787,3b03ff22761da0f5fad9a781025facfc6e555522,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-16 14:14:12 -0700,9020, fix build failure cast size_t returned strlcpy uint64_t verify3u result build failure set due additional hardening since token expected always fit strval verify3u removed somehow still safely truncated reviewed tony hutter hutter2 llnl.gov reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov issue 8999 close 9020,,
1788,d45d7f08fa56f94fc9577a6578cb411071a42e8d,ike Gerdts <mike.gerdts@joyent.com>, 2019-07-16 13:19:24 -0500,8974, add zfs create dryrun add ability sanity check zfs create argument see value additional property local dataset example automation may need adjust quota parent filesystem creating volume may call zfs create size volume obtain value refreservation add following option zfs create dry run verbose parseable implies verbose reviewed ryan moeller ryan ixsystems.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed jerry jelinek jerry.jelinek joyent.com signed mike gerdts mike.gerdts joyent.com close 8974,,
1789,93e28d661e1d704a9cada86ef2bc4763a6ef3be7,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-07-16 10:11:49 -0700,8442, log spacemap project motivation delphix seen lot customer system fragmentation random writes take performance hit lot time spend update disk space accounting metadata specifically seen case sync time spend sync pas system spent updating spacemaps problem pool existed long enough touched almost every metaslab least random writes scatter free across metaslabs every txg thus appending spacemaps resulting many give example assuming every vdev 200 metaslabs writes fit within single spacemap block generally 200 assume level indirection need 400 additional since talking metadata keep extra copy redundancy need triple number leading total 1800 per vdev every txg could try decrease number metaslabs per txg metaslab would cover wider range disk thus would take time loaded memory disk addition loaded range tree would consume memory another idea would increase spacemap block size would allow fit entry within block resulting fewer per metaslab speedup loading time problem still deal number going number metaslabs increasing fact generally write lot metaslabs little rest thus increasing block size would actually waste bandwidth utilizing bigger block size patch patch introduces log spacemap project provides solution problem taking account aforementioned tradeoff detail achieves found reference section code see big theory statement even though change fairly constraint within metaslab lower level spa codepaths side change user facing change vdev vdev hole longer reused give background reasoning log device removed vdev structure replaced hole compacted end vdev array vdev_id could reused device added pool wide space map recording vdev behavior cause problem e.g entry referring segment new vdev removed log thus simplify thing reuse behavior gone vdev top level vdevs truly unique within pool testing illumos implementation feature used internally year production month patch specifically seem regression introduced zts running zloop week without related problem performance analysis linux specific performance result analysis illumos found link reference redoing experiment linux gave similar result specific linux run pool reached stable state percentage time spent pas per txg average stock bit log spacemap bit stayed experiment graph img linux lsm sync time per txg 37.6 second average stock bit 22.7 second log spacemap bit related graph img linux lsm result log spacemap bit able push txgs also reason graph quantified per txg entry log spacemap bit another interesting aspect term txg syncs stock bit txgs reach sync pas reach sync pas reach log space map bit reached sync pas txgs sync pas sync pas emphasizes fact spend time metadata also iterate time convergence spa_sync dirtying object related graph stock img linux lsm lsm img linux lsm finally improvement iop userland gain change approximately consistent win iop see graph absolute amount improvement log spacemap give varies within minute interval img linux lsm img linux lsm porting platform people want port commit platform list zol commits patch depends make zdb result checkpoint test consistent  update new spacemap encoding  simplify spa_sync breaking smaller function  factor metaslab_load  rename  change target size metaslabs 256gb 16gb  zdb skip leak detection altogether  vs_alloc underflow l2arc vdevs  simplify log vdev removal code  get rid  introduce auxiliary metaslab histogram  error path forgets drop ms_sync_lock  reference background motivation internals feature openzfs 2017 presentation youtu.be jj2ixrkl5bq slide slideshare.net zfs log spacemaps project flushing algorithm internals performance result illumos specific blogpost post zfs lsm flushing openzfs 2018 presentation youtu.be x6d2dhrjkxw slide slideshare.net zfs log spacemap flushing algorithm upstream delphix issue dlpx 51539 dlpx 59659 dlpx 57783 dlpx 61438 dlpx 41227 dlpx 59320 dlpx 63385 reviewed sean eric fagan sef ixsystems.com reviewed matt ahrens matt delphix.com reviewed george wilson gwilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8442,,
1790,df834a7ccc6a4bb690f6992273a7345cc56afd6d,ntonio Russo <antonio.e.russo@gmail.com>, 2019-06-02 14:29:37 -0600,8848, enable zfs mount generator default reviewed richard laager rlaager wiktel.com reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 8750 close 8848,,
1791,f88d069cbbbdff9a67a9be523cfb470cef707e07,ntonio Russo <antonio.e.russo@gmail.com>, 2019-06-02 08:57:10 -0400,8848, systemd encryption key support modify zfs mount generator produce dependency new zfs import key .service unit dynamically created boot call zfs load key encryption root attempting mount encrypted datasets unit created zfs mount generator keyfile present call systemd ask password passphrase requested patch includes suggestion fabian gruenbichler ryanjaeb rlaager well adaptation rlaager script retry incorrect password entry reviewed richard laager rlaager wiktel.com reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 8750 close 8848,,
1792,6993e012025c68e4ce0657f84fb47fe96c436735,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-16 08:26:52 +0900,9009, drop redundant posix acl check zpl_init_acl already tested zpl_init_acl need test posix acl access reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 9009,,
1793,64f3d39ae429e56db5e3b40ab7a5fdffd6b8a5ff,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-15 16:11:55 -0700,9027, export dnode symbol external consumer lustre require access dnode interface order correctly manipulate dnodes reviewed james simmons uja.ornl yahoo.com reviewed olaf faaland faaland1 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov issue 8994 close 9027,,
1794,9949b856a0435d064afd7d1d929d55e5572b0831,om Caputi <tcaputi@datto.com>, 2019-07-15 16:08:42 -0700,9021, ensure decrypts objsets patch corrects small issue code run async_destroy feature disabled would properly decrypt dataset beginning processing dataset able decrypted optimization code simply doe run dataset completely destroyed dsl sync task reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 9021,,
1795,ff9630d1a8006c7a6afac4386378324e4bc94ae4,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-16 05:57:56 +0900,9025, disable unused pathname pn_path unneeded linux struct pathname originally solaris vfs used zol merely call vop linux vfs interface without api change therefore pathname pn_path unused unneeded technically struct pathname wrapper string zol save stack bit lookup unlink if0 member instead removing since comment refer reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed tomohiro kusumi kusumi.tomohiro gmail.com close 9025,,
1796,e5db31349484e5e859c7a942eb15b98d68ce5b4d,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-12 09:31:20 -0700,8965, linux 5.0 compat simd compatibility restore simd optimization 4.19.38 lts 4.14.120 lts 5.0 newer kernel accomplished leveraging fact definition dedicated kernel thread never need concern saving restoring user fpu state therefore may use fpu long guarantee user task always restore fpu state context switching back user space 5.0 5.1 kernel disabling preemption local interrupt sufficient allow fpu used non kernel thread restore preserved user fpu state 5.2 latter kernel user fpu state restoration skipped kernel determines register changed therefore kernel need perform additional step saving restoring fpu register invalidating per cpu global tracking fpu state would force restore functionality private core x86 fpu implementation unavailable practice restricting simd kernel thread major restriction zfs vast majority simd operation already performed pipeline remaining case relatively infrequent handled generic code without significant impact two noteworthy case decrypting wrapping key encrypted dataset i.e zfs load key encryption decryption operation use simd optimized implementation generating payload checksum zfs send stream order avoid making change higher layer zfs _get_ops function updated take consideration calling context allows fastest implementation used appropriate see kfpu_allowed notable instance simd operation used outside kernel thread module load time code moved taskq order accommodate new kernel thread restriction finally modification made order harden code facilitate testing include updating implementation operation structure declared constant allowing cycle set selecting preferred ops kernel well user space reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8754 close 8793 close 8965,,
1797,d230a65c3b161d33de3a8f96e78f8a35edce6708,ick Mattis <nmattis@users.noreply.github.com>, 2019-07-10 18:54:49 -0400,9011, fix 8934 large kmem_alloc large allocation value performed switched vmem_alloc interface specified large allocation changed subsequent free match reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed nmattis nickm970 gmail.com close 8934 close 9011,,
1798,c3fba9091b1792755a0aac804f6ada1fe863c8b6,ttila FÃ¼lÃ¶p <attila@fueloep.org>, 2019-07-10 20:44:52 +0200,9003, fix zts killed process detection log_neg_expect using wrong exit status detect process got killed sigsegv sigbus resulting false positive reviewed loli10k ezomori.nozomu gmail.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed attila fã¼lã attila fueloep.org close 9003,,
1799,02fad9260aaa95cb7eb6f6e89c5d85f77123582c,haun Tancheff <shaun@aeonazure.com>, 2019-07-09 15:02:40 -0500,8969, pkg utils python sitelib sles15 use python esc set reviewed neal gompa ngompa datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed shaun tancheff stancheff cray.com close 8969,,
1800,ab5036df1ccbe1b18c1ce6160b5829e8039d94ce,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-10 01:31:46 +0900,8878, fix race parallel mount thread dispatching algorithm strategy parallel mount follows initial thread dispatching select set mount point dependency set hence thread run lock race thread set thread dispatched corresponds top level directory may may datasets mounted sub directory subsequent recursive thread dispatching thread mount datasets set mount point mount point within set dependency i.e child directory child directory processed parent directory completes problem initial thread dispatching multi threaded need single threaded put thread race condition race appeared mount unmount issue zol zol different timing regarding mount execution due fork exec mount zfs unmount expects proper mount order unmount mount reordered race condition currently two known pattern input list handle handle cause race condition 8833 case input sorting problem correctly handle input list two top level directory race two posix thread threada test1 threadb test0 case 8833 threada race two thread created considered contains 8450 case input var data var data test sorting problem correctly handle input list containing race two posix thread threada var data test threadb var data case 8450 threada race two thread created var data considered contains var data word least one input list initial thread dispatching must single threaded since every directory child meaning directly indirectly depend case first call fails correctly determine path1 contains path2 result initial thread dispatching creates another thread need single threaded fix conditional consider two reviewed brian behlendorf behlendorf1 llnl.gov reviewed sebastien roy sebastien.roy delphix.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8450 close 8833 close 8878,,
1801,a54f92b4b1cf9a1915631c6a4f61e7480a209e58,oli10K <loli10K@users.noreply.github.com>, 2019-07-09 18:28:05 +0200,8991, fix dracut debian ubuntu packaging commit ensures make target build .deb package fail alien convert .rpm file additionally also update zfs dracut package name changed noarch ca4e5a7 reviewed neal gompa ngompa datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8990 close 8991,,
1802,1d20b763bb63782bb281173b1b82fe54fefaa624,oli10K <loli10K@users.noreply.github.com>, 2019-07-09 00:10:23 +0200,9001, zfs send doe handle invalid input gracefully due change introduced 30af21b zfs send crash provided invalid input change attempt add check affected code path reviewed attila fã¼lã attila fueloep.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 9001,,
1803,f664f1ee7fc9dd7101171f6518c67951cb5bd8cf,aul Dagnelie <pcd@delphix.com>, 2019-07-08 13:18:50 -0700,8946, decrease contention currently sequential async write workload spend lot time contending lock responsible protecting entire block tree naturally result serialization heavy write workload resolved per dbuf locking allow multiple writer object time introduce new rwlock db_rwlock lock responsible protecting content dbuf part reading block pointer dbuf hold lock reader writing data dbuf hold writer allows multiple thread write different part file time reviewed brad lewis brad.lewis delphix.com reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com external issue dlpx 52564 external issue dlpx 53085 external issue dlpx 57384 close 8946,,
1804,cb709642216b5ac9be10039471c3c4bc27cb7cf2,rad Lewis <brad.lewis@delphix.com>, 2019-07-08 12:20:53 -0600,8663, 8659 static dtrace probe unavailable non gpl module zfs tracing effort hampered inability access zfs static probe probe using dtrace_probe macro probe available via tracepoints gpl module build could modified generate function unique dtrace_probe invocation could accessed via kprobes reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed richard elling richard.elling signed brad lewis brad.lewis delphix.com close 8659 close 8663,,
1805,1086f54219ebcdebf05b8f6bd10142c43c1f4f3f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-05 19:52:27 -0700,8961, revert fail early bio corruption confirmed 5.2 rc1 reverts commit change compatible centos 2.6.32 based kernel due differnces bio layer signed brian behlendorf behlendorf1 llnl.gov issue 8961,,
1806,52a83dc6940ebeaca91f53494bb9be6f9b6bbc52,om Caputi <tcaputi@datto.com>, 2019-07-05 19:53:14 -0400,8976, remove verify patch fix issue would verify able hold encryption root function instead silently continue without populating related field nvlist convention code reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8976,,
1807,fe0ea84812764c085b709aaa2cde5cc1fe3fc8fa,aul Dagnelie <pcd@delphix.com>, 2019-07-05 16:45:20 -0700,8968, activate metaslabs weight return enospc metaslab weight avoid activating metaslab space available sanity checking also assert free space range tree case reviewed igor kozhukhov igor dilos.org reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 8968,,
1808,3b5fe2c351b1ba74ac75199310ad79a7597aa747,oli10K <loli10K@users.noreply.github.com>, 2019-07-06 01:38:17 +0200,8988, fix zfs redact misc issue zfs redact error message end newline character 30af21b0 inadvertently removed zfs_prop comment man zfs zfs redact optional reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 8988,,
1809,341166c8435f54936cdea366d096b1f5556292c1,ike Gerdts <mike.gerdts@joyent.com>, 2019-06-30 23:38:07 +0000,8973, openzfs 9318 doe account raidz skip block volume created pool raidz vdevs volblocksize 128k volume reference space reserved automatically calculated refreservation two deficiency contribute  skip block may added keep allocation multiple parity dominating factor volblocksize close ashift raidz deflation 128 block different block size see theory raidz space accounting comment full explanation authored mike gerdts mike.gerdts joyent.com reviewed richard elling richard.elling reviewed sanjay nadkarni sanjay.nadkarni nexenta.com reviewed jerry jelinek jerry.jelinek joyent.com reviewed matt ahrens matt delphix.com reviewed kody kantor kody.kantor joyent.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported mike gerdts mike.gerdts joyent.com porting note zts wait zvols exist writing zts use log_must_busy zpool zfs destroy openzfs issue http www.illumos.org issue 9318 openzfs commit http github.com illumos illumos gate commit b73ccab0 close 8973,,
1810,6dbca94f0c0276108748487bbfbaa7140ebb000b,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-07-03 16:05:02 -0400,8959, improve unable automount error message mountpoint dataset name message made confusing read additionally convert zfs_dbgmsg rather sending console reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 8959,,
1811,aa7aab6c457f106d2b794b9adf3fe5aa451ad8e9,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-04 05:03:22 +0900,8961, fail early bio corruption confirmed 5.2 rc1 unable import zpool large kmem_alloc warning due corrupted bio invalid page vector see 8867 detail fail early enomem reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8867 close 8961,,
1812,46db9d6161d0781f00ee3cb5bc02e11685d2ffaf,rian Behlendorf <behlendorf1@llnl.gov>, 2019-07-03 13:01:54 -0700,8979, check b_freeze_cksum conditional b_freeze_cksum field data set therefore equiv check must wrapped accordingly reason assert arc_buf_fill unsafe however since largely redundant simply removed reviewed george wilson gwilson delphix.com reviewed allan jude allanjude freebsd.org reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 8979,,
1813,aa79910726f29cc056c260507b678dd2feba85b6,atthew Ahrens <mahrens@delphix.com>, 2019-07-03 12:57:05 -0700,8985, fix typo zpool features.5 section full property name includes delphix delphxi reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8985,,
1814,2ba59fa9f1d1e3bfa012721a35fc1d2a4ba4c4e7,om Caputi <tcaputi@datto.com>, 2019-07-02 20:30:00 -0400,8977, fix error text einval zfs_receive_one small patch fix einval case zfs_receive_one missing else added two possible case ensure intended error message printed reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tom caputi tcaputi datto.com close 8977,,
1815,df358db7c3a39f8a13f16fd99d87c08ca2f2e2a5,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-07-03 00:25:23 +0900,8966, use d_path automount mount point chroot process chroot process fails automount snapshot due realpath failure mount.zfs construct mount point path ctldir inode dirent name instead d_path chroot process get affected view reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8903 close 8966,,
1816,ac6d54160ad016a199101a074db50345daea4c59,oli10K <loli10K@users.noreply.github.com>, 2019-07-02 17:19:55 +0200,8980, fix zfs mandoc error accidentally introduced 765d1f06 mandoc man man8 zfs.8 error skipping item outside list filesystem mountpoint mandoc man man8 zfs.8 error skipping item outside list mandoc man man8 zfs.8 error skipping end block open mandoc man man8 zfs.8 error skipping item outside list mandoc man man8 zfs.8 error skipping end block open reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 8980,,
1817,681a85cb01a9f83b9f742d8fb634edddc68c5679,eorge Wilson <george.wilson@delphix.com>, 2019-06-28 15:40:24 -0400,8957, nopwrites dmu_sync block result panic device removal performing nopwrites dmu_sync block result panic panic show two way attempt issue ioctl failed comparison zio io_bp zio io_bp_orig zio_done resolve panic nopwrites block indirect vdevs ignored new allocation performed concrete vdevs reviewed igor kozhukhov igor dilos.org reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed george wilson gwilson delphix.com close 8957,,
1818,765d1f0644658d772addeb9b2dd5039ac43177ad,om Caputi <tcaputi@datto.com>, 2019-06-28 15:38:37 -0400,8952, add zfs umount encrypted datasets patch add ability user unload key datasets unmounted analogous zfs mount reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com signed tom caputi tcaputi datto.com close 8917 close 8952,,
1819,679b0f2abf4cfce9e1520f877bd1970c6cb6426b,aul Dagnelie <pcd@delphix.com>, 2019-06-26 11:00:12 -0700,8843, concurrent small allocation defeat large allocation new parallel allocator scheme possibility problem two thread allocating allocator time conflict two primary case worry first another thread working another allocator activates metaslab first thread trying activate result first thread needing back reselect new metaslab even though may waited long time metaslab load second another thread working allocator may activated different metaslab first thread waiting metaslab load case cause first thread significantly delayed issuing second case also cause metaslab load unload churn metaslab loaded fully activated never set selected_txg result metaslab immediately unloaded process repeat many time wasting disk cpu resource likely happen first thread larger one like zil write thread smaller write likely find acceptable metaslab quickly two primary change first always proceed allocation returning preempted either way described previous section second change set selected_txg call activate even metaslab used allocation immediately attempt unload reviewed jerry jelinek jerry.jelinek joyent.com reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com external issue dlpx 61314 close 8843,,
1820,3fab4d9e08aa1471c5c34bf7fdc2632bf4a7d494,aul Dagnelie <pcd@delphix.com>, 2019-06-25 12:50:38 -0700,8947, zdb vvvvv ztest pool memory ztest creates extremely large file part operation zdb try dump large enough file run memory spend extremely long time attempting print million billion uint64_ts cap amount data uint64 object willing read print reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com external issue dlpx 53814 close 8947,,
1821,fc7546777ba15a7fff651cd803bf521f592d8379,lexander Motin <mav@FreeBSD.org>, 2019-06-25 15:03:38 -0400,8909, avoid extra taskq_dispatch call dmu dmu sync code call taskq_dispatch sublist os_dirty_dnodes since number sublists default equal number cpu dispatch equal potentially large number task waking many cpu handle even one sublists actually work change add check empty sublists avoid reviewed sean eric fagan sef ixsystems.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 8909,,
1822,5279ae918befc707b3b2c5e9b97e2b6e8d033d99,oli10K <loli10K@users.noreply.github.com>, 2019-06-25 03:06:26 +0200,8948, redacted send receive cause zdb dump core used verbosity zdb fails assertion dump_bookmarks expects snprintf retun success reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed loli10k ezomori.nozomu gmail.com close 8948,,
1823,746d4a451eaff3d90fb63b853b3f91920d8ab69c,oli10K <loli10K@users.noreply.github.com>, 2019-06-25 03:02:17 +0200,8951, fix enum definition addition 30af21b0 couple codepaths make wrong assumption could potentially result error reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au reviewed paul dagnelie pcd delphix.com signed loli10k ezomori.nozomu gmail.com close 8951,,
1824,13d454c6ca12327f0080c14eaae78dc2f67d7d73,gor K <igor@dilos.org>, 2019-06-25 03:58:12 +0300,8926, option zdb valid option added ztest test split block reconstruction reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed igor kozhukhov igor dilos.org close 8926,,
1825,59ec30a3290d865b98e3805df6c82b6b4f88aab0,atthew Ahrens <mahrens@delphix.com>, 2019-06-24 16:44:01 -0700,8944, remove code zfs remap zfs remap command disabled little utility introduced tricky bug commit remove code associated zfs_ioc_remap ioctl test note ioctl property remain functionality allows older software fail gracefully attempt use avoids backwards incompatibility would introduced renumbered later ioctls prop reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8944,,
1826,53864800f60b843b8212514428530adfa155211b,om Caputi <tcaputi@datto.com>, 2019-06-24 19:42:52 -0400,8935, fix error message promoting encrypted dataset patch corrects error message reported attempting promote dataset outside encryption root reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8905 close 8935,,
1827,8f12a4f8d2846ca668f8ad90d9ea5c19c8c0b78f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-06-24 09:32:47 -0700,8943, fix tree build failure resolve incorrect use srcdir builddir reference various file build system crept time went unnoticed building top level directory srcdir builddir identical change possible build subdirectory mkdir obj obj configure make reviewed loli10k ezomori.nozomu gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8921 close 8943,,
1828,cc9625c47c39ef9c558a51c6ae662d2342b70679,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-24 03:51:29 +0900,8950, add missing .gitignore implement redacted send receive 30af21b025 needed ignore get_diff executable reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8950,,
1829,186898bbb580a830c02d994e961d717f7cf5dcca,on Brady <don.brady@delphix.com>, 2019-06-22 16:51:46 -0700,8904, openzfs 9425 channel program interrupted problem statement  zfs channel program script currently require timeout hung long running script return timeout error instead causing zfs get wedged limit currently set 100 million lua instruction even limit place would desirable sys admin support engineer able cancel script taking long time proposed solution  make possible abort channel program sending interrupt signal.in underlying txg_wait_sync function switch cv_wait cv_wait_sig catch signal signal encountered dsl_sync_task function install lua hook get called lua interpreter executes new line code dsl_sync_task resume standard txg_wait_sync call wait txg complete meanwhile hook abort script indicate channel program canceled kernel return eintr indicate channel program run canceled porting note added missing return value cv_wait_sig authored brady don.brady delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed serapheim dimitropoulos delphix.com reviewed matt ahrens matt delphix.com reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com ported brady don.brady delphix.com signed brady don.brady delphix.com openzfs issue http www.illumos.org issue 9425 openzfs commit http github.com illumos illumos gate commit d0cb1fb926 close 8904,,
1830,cb9e5b7e84654a8c7dba0f9a0d1227f3c8fa1012,atthew Ahrens <mahrens@delphix.com>, 2019-06-22 16:48:54 -0700,8929, held thread calling hold assigning lead deadlock specifically dnode already assigned earlier txg thread may need wait txg sync erestart case thread assigned dnode earlier txg prevents txg syncing complete calling dmu_tx_commit may need acquire e.g via dmu_buf_hold commit add assertion ensure deadlock inadvertently introduced reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8929,,
1831,ca4e5a785f844eaace4bf80cb70a3a02f1b587f6,ordan-bobic <gordan.bobic@gmail.com>, 2019-06-23 00:47:19 +0100,8914, remove arch relax version dependency remove arch relax version dependency zfs dracut package reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed gordan bobic gordan redsleeve.org issue 8913 close 8914,,
1832,8b14cb46bf0bd8be08ab11686ae5b87d74433c52,arry Mallon <1816667+hjmallon@users.noreply.github.com>, 2019-06-23 00:43:11 +0100,8919, add libnvpair libzfs pkg config function need libnvpair linked default pkg config file contain reviewed brian behlendorf behlendorf1 llnl.gov signed harry mallon hjmallon gmail.com close 8919,,
1833,a9cd8bfde73a78a0ba02e25b712fe28d11019191,on Brady <don.brady@delphix.com>, 2019-06-22 16:41:21 -0700,8881, let zfs mount tolerate progress mount zfs mount service unexpectedly fail start zfs encounter mount progress service zfs mount window time check dataset mounted actual mount via mount.zfs binary occurs reason racing mount zfs mount.target zfs share.target allowed execute concurrently import issue relatively recent addition parallel mounting consider serializing mount share target reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com reviewed allan jude allanjude freebsd.org signed brady don.brady delphix.com close 8881,,
1834,fb6e6f1ffb2aa18711c8c3c825c1090bd97561f0,llan Jude <allanjude@freebsd.org>, 2019-06-22 19:33:44 -0400,8432, zstreamdump add per record type counter overhead counter count byte payload replication record type count byte overhead replication record include counter output summary end run reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed allan jude allanjude freebsd.org sponsored klara system catalogic close 8432,,
1835,2b09628b59105a2b8da92f6db8da24c07e54ecb9,aul Dagnelie <pcd@delphix.com>, 2019-06-22 16:32:26 -0700,8945, fix comment reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed paul dagnelie pcd delphix.com close 8945,,
1836,d5bf1cf179a060e6defbbec564d557fb296d200a,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-23 08:30:59 +0900,8939, fix build break implement redacted send receive 30af21b025 broke build fedora gcc detect potential overflow compile time consider strlen already copied string also change strn strl variant per suggestion behlendorf ofaaland  function test_redact 711 error strncat specified bound 288 equal destination size werror stringop overflow strncat bookmark testbookmark sizeof bookmark  reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8939,,
1837,a370182fed893c65c4d5a6ec96ce70535e861c62,aul Dagnelie <pcd@delphix.com>, 2019-06-21 09:40:56 -0700,8933, add zvols enable unmap support exporting zvols scsi luns default window issue unmap command reduces storage efficiency many case add flag zvol device queue let scsi target logic know handle scsi command reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed john gallagher john.gallagher delphix.com signed paul dagnelie pcd delphix.com close 8933,,
1838,3976fd65d367a4a40c075f64763f79e6496ed917,oli10K <loli10K@users.noreply.github.com>, 2019-06-21 18:38:15 +0200,8942, redacted send receive broke zfs help message since 30af21b0 merged zfs send help message format broken list valid option commit corrects small issue reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed loli10k ezomori.nozomu gmail.com close 8942,,
1839,9585497208266a917513754f887d9db35efdcec7,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-21 10:31:53 +0900,8940, prevent pointer scope local variable show_str could pointer local variable stack scope time return snprintf buf buflen show_str called reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8924 close 8940,,
1840,accd6d9dc411b150d5313b2e777381f13da8861b,atthew Ahrens <mahrens@delphix.com>, 2019-06-20 18:30:40 -0700,8936, dedup verify clear blkptr dedup flag logic handle strong checksum collision data match incorrect clearing dedup bit blkptr cause panic later zio_ddt_free due dedup table matching blkptr reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 48097 close 8936,,
1841,a64f8276c7c2e121f438866d2f91ddff22031e7f,gor K <igor@dilos.org>, 2019-06-21 04:29:02 +0300,8925, update vdev_ops_t illumos align vdev_ops_t illumos better compatibility reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 8925,,
1842,da68988708d6e38457ce965103d001e8aa965885,om Caputi <tcaputi@datto.com>, 2019-06-20 15:29:51 -0400,8870, allow unencrypted child encrypted datasets encryption first added zfs made decision prevent user creating unencrypted child encrypted datasets idea prevent user inadvertently leaving data unencrypted however since release 0.8.0 legitimate reason brought behavior allowed patch simply remove limitation code path check update test accordingly reviewed jason king jason.king joyent.com reviewed sean eric fagan sef ixsystems.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8737 close 8870,,
1843,84b4201f3202fb6bf6beed7a27abf38292f67b41,acianstremtan <35844628+dacianstremtan@users.noreply.github.com>, 2019-06-20 15:27:14 -0400,8938, replace whereis type zfs lib.sh whereis command used since may exist initramfs dracut plymouth module also type command instead whereis reviewed brian behlendorf behlendorf1 llnl.gov reviewed garrett field ghfields gmail.com signed dacian reece stremtan dacianstremtan gmail.com close 8920 close 8938,,
1844,050d720c43b6285fc0c30e1e97591f6b796dbd68,atthew Ahrens <mahrens@delphix.com>, 2019-06-19 14:54:02 -0700,8310, remove dedupditto functionality dedup use dedupditto property set causing zfs keep extra copy data referenced many time 100x idea data important data thus want really sure lost disk experience small amount random corruption zfs system administrator rely pool level redundancy protect data e.g mirroring raidz since user sysadmin control data offered extra redundancy dedupditto extra redundancy useful bulk data still vulnerable loss based pool level redundancy example particle strike corrupt 0.1 block either saved mirror raidz sad true even dedupditto saved another 0.01 block corrupted therefore dedupditto functionality rarely enabled i.e property rarely set fulfills promise increased redundancy even rarely additionally feature doe work advertised existing release scrub resilver repair extra dedupditto copy see http github.com zfsonlinux zfs pull 8270 summary seldom used feature work even provide useful data protection non trivial maintenance burden see http github.com zfsonlinux zfs pull 8270 remove dedupditto functionality backwards compatibility existing cli zpool set dedupditto still succeed exit code zero effect backwards compatibility existing pool dedupditto enabled point code still able understand dedupditto block free appropriate however zfs write new dedupditto block reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed alek pinchuk apinchuk datto.com issue 8270 close 8310,,
1845,fb0be12d7b6db16eabfe8f91da12da7d7854ea9a,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-20 04:27:31 +0900,8912, use zfs_dev macro instead literal rest code comment use zfs_dev sync reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed tomohiro kusumi kusumi.tomohiro gmail.com close 8912,,
1846,0b755ec3d5ba531d2662da54fb9ac62627ce2c66,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-06-19 20:53:37 +0200,8911, fix memory leak check_disk reviewed allan jude allanjude freebsd.org reviewed tony hutter hutter2 llnl.gov reviewed richard elling richard.elling signed michael niewã hner mniewoehner.de close 8897 close 8911,,
1847,c308b1dd6388d591d9eefd3e753ad2b04a053c8b,laf Faaland <faaland1@llnl.gov>, 2019-06-19 11:44:44 -0700,8930, kmod zfs devel rpm provide kmod spl devel configure run spec redhat rpm built kmod zfs devel package missing provides kmod spl devel version required software lustre build zfs kmods adding make easier software build zfs 0.7 spl separate may missing zfs 0.8 reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 8930,,
1848,4ca457b065c6d95d9b6b2ed776f14e7e33257b94,rian Behlendorf <behlendorf1@llnl.gov>, 2019-06-19 10:39:28 -0700,8906, zts fix mmp_interval failure mmp_interval test case failing fedora due built echo command terminating script unable write sysfs module parameter change behavior observed ksh 2020.0.0 alpha1 resolve issue using external cat command fails gracefully expected additionally remove incorrect quote around return value reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed olaf faaland faaland1 llnl.gov reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 8906,,
1849,30af21b02569ac192f52ce6e6511015f8a8d5729,aul Dagnelie <pcd@delphix.com>, 2019-06-19 09:48:13 -0700,7958, implement redacted send receive redacted send receive allows user send subset data target system one possible use case feature transmit sensitive information data warehousing test dev analytics environment another save space replicating unimportant data within given dataset example backup tool like zrepl redacted send receive three stage process first clone clone made snapshot sent target clone clone unnecessary unwanted data removed modified clone snapshotted create redaction snapshot snapshot second new zfs redact command used create redaction bookmark redaction bookmark store list block snapshot modified redaction snapshot finally redaction bookmark passed parameter zfs send sending snapshot redacted redaction bookmark used filter block contain sensitive unwanted information block included send stream sending redaction bookmark block contains considered candidate block addition block destination snapshot modified since creation_txg redaction bookmark step necessary allow target rehydrate data case block accidentally unnecessarily modified redaction snapshot change bookmark enable fast space estimation involve adding deadlists bookmark also logic manage life cycle deadlists new size estimation process operates case previously accurate estimate could provided case send performed data block read reducing runtime significantly providing byte accurate size estimate reviewed dan kimmel dan.kimmel delphix.com reviewed matt ahrens mahrens delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com reviewed chris williamson delphix.com reviewed pavel zhakarov pavel.zakharov delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 7958,,
1850,c1b5801bb5af0055e5f3d263beaa07026103e212,lexander Motin <mav@FreeBSD.org>, 2019-06-14 17:07:34 -0400,8901, minimize aggsum_compare arc_size arc_c call busy arc situation arc_size close arc_c desired quite likely aggsum_compare arc_size arc_c need flush per cpu bucket find exact comparison result often hot path penalizes whole idea aggsum usage since replaces simple atomic addition dozen lock acquisition replacing aggsum_compare code increasing arc_p arc growing arc_size arc_c according pmc profile allows save cpu time aggsum code sequential write zvols 16kb block size large dual socket system suppose minor arc_p behavior change due lower precision new code think big deal since affect small window time aggsum bucket flushed every second arc size bucket limited average arc block per cpu reviewed chris dunlop chris onthe.net.au reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 8901,,
1851,b1b4ac27082aede8522e479c87897026519f1dd7,yan Moeller <ryan@freqlabs.com>, 2019-06-13 13:15:46 -0700,8895, python config cleanup require python configure build unless building pyzfs move always pyzfs.m4 used make test syntax consistent sponsored ixsystems inc reviewed neal gompa ngompa datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan ixsystems.com close 8895,,
1852,7218b29e4bb86fb8f17459f355b609e23c6aaa54,atthew Ahrens <mahrens@delphix.com>, 2019-06-13 13:14:35 -0700,8894, declared defined declared zio_compress.h defined anywhere declaration removed reviewed dan kimmel dan.kimmel delphix.com reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 47477 close 8894,,
1853,53dce5acc652800fcfca1b83e22a00c5e4fc9e87,atthew Ahrens <mahrens@delphix.com>, 2019-06-13 13:12:39 -0700,8893, panic removal_remap test device tunable changed multiple sector size device removal code malfunction try create mapping smaller one sector leading panic debug bit assertion fail assert3u dva_get_asize dst size nondebug system panic stack like        metaslab_free fortunately default 1mb occur default hit test change 1kb testing 4kb sector disk hit bug change make tunable robust automatically rounding multiple sector size also turn key assertion verify similar bug would caught encoded disk thus avoid panic reboot loop reviewed sean eric fagan sef ixsystems.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 61342 close 8893,,
1854,be89734a29fda5a0f5780d953789fb7e91b2a529,atthew Ahrens <mahrens@delphix.com>, 2019-06-13 13:10:19 -0700,8892, compress metadata later sync pass starting sync pas disable compression including metadata ostensibly help sync pass converge i.e sync pas need allocate anything 100 overwrites however practice increase average number sync pass turn compression lot block size change thus allocate overwrite also increase number 128kb allocation e.g indirect block spacemaps compressed 128k allocation especially detrimental performance highly fragmented system may free segment size may need load new metaslabs satisfy 128k allocation increase practice highly fragmented system see pas txg tiny number pas txg txg pass reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed pavel zakharov pavel.zakharov delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed george wilson george.wilson delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 63431 close 8892,,
1855,ae5c78e0b13ffeabf1c49a27d3f42a95aa9a678d,lexander Motin <mav@FreeBSD.org>, 2019-06-13 16:08:24 -0400,8890, move write aggregation memory copy vq_lock memory copy heavy operation congested lock moving reduces congestion many time almost invisible since original zio removed queue child zio executed yet see would copy need protection guess remained like time lock dropped added later fix lock ordering issue multi threaded sequential write test hdd ssd pool zvol block size 4kb 16kb 64kb 128kb show major reduction lock congestion saving cpu time increasing throughput reviewed richard yao ryao gentoo.org reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alexander motin mav freebsd.org close 8890,,
1856,d3230d761ac6234ad20c815f0512a7489f949dad,atthew Ahrens <mahrens@delphix.com>, 2019-06-13 13:06:15 -0700,8877, looping impact performance fragmented pool fragmented pool high performance storage looping become performance limiting bottleneck looking larger block e.g 128k block zil may search many free segment hundred thousand find one large enough satisfy allocation take long time dozen done holding ms_lock thread may spin waiting performance problem encountered profiling show high cpu time well mutex_enter various caller problem evident test system sync write workload writes recordsize filesystem 4tb ssd storage full fragmented also observed production system 90tb storage full fragmented fix change search 16mb previous allocation alignment pick segment exact size requested larger reduces number iteration hundred fragmented pool 100x improvement reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com reviewed tony nguyen tony.nguyen delphix.com reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos serapheim delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 62324 close 8877,,
1857,9c7da9a95aaaecced0a1cfc40190906e7a691327,ulsi Jain <TulsiJain@users.noreply.github.com>, 2019-06-13 08:56:15 -0700,8564, restrict filesystem creation name referred either change restricts filesystem creation given name contains either reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed tulsijain tulsi.jain delphix.com close 8842 close 8564,,
1858,3475724ea4221a354633d7c4e50d9d90f6bd266f,atthew Ahrens <mahrens@delphix.com>, 2019-06-13 08:48:43 -0700,8889, ztest dmu_tx_assign get enospc running zloop occasionally see following crash dmu_tx_assign txg_wait 0x1c assert module zfs vdev_removal.c 1507 sbin ztest 0x89c3 0x55faf567b9c3 error value 0x1c enospc transaction used able fail due space i.e call allow removal thread schedule work even pool low space slop space provide enough free space sync txg reviewed igor kozhukhov igor dilos.org reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 37853 close 8889,,
1859,daddbdc7ccf5edc6174d6e7300f93bf009f0be12,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-13 09:15:06 +0900,8884, fix lockdep warning insmod sysfs_attr_init required make lockdep happy dynamically allocated sysfs attribute fixed 8868 fedora running kernel debug requirement introduced 2.6.34 see include linux sysfs.h actually doe reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8868 close 8884,,
1860,d9b4bf0665a0b1a7af2bbb34c60bca612956022d,atthew Ahrens <mahrens@delphix.com>, 2019-06-12 13:13:09 -0700,8862," fat zap prefetch iterating iterating zap object almost always certain iterate entire object multiple leaf block realize performance win issuing read leaf block parallel iteration begin example 10,000 snapshot zfs destroy pool 9999 take minute cache cold change provides performance improvement issuing read block zap object parallel reviewed andreas dilger andreas.dilger whamcloud.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com external issue dlpx 58347 close 8862",,
1861,d9cd66e45f285356624d26eb92e10e2baf2738ee,atthew Ahrens <mahrens@delphix.com>, 2019-06-12 13:06:55 -0700,8864, target arc size get reduced arc_c_min sometimes target arc size reduced arc_c_min impact performance seen happen part random_reads performance regression test arc size reduced read test start impact long take system reach good iop performance call return true arc_c however could easily low even arc_c low ton unused bufs abd kmem cache would especially true dmu request bunch stuff evicted arc e.g due zpool export fix arc reduce arc_c requested amount way arc_size arc_c_min small reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com external issue dlpx 59431 close 8864,,
1862,10269e02f9d0feef815a83d718728b51a9633d16,njf <bnjf@users.noreply.github.com>, 2019-06-13 06:03:33 +1000,8880, fix typo fix typo reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed brad forschinger github bnjf.id.au close 8875 close 8880,,
1863,5662fd57941d020e23160b271dc27f254fb5a3c6,atthew Ahrens <mahrens@delphix.com>, 2019-06-11 09:02:31 -0700,8580, single chunk scatter abds treated linear scatter abd allocated number page contrast linear abd page disjoint kernel virtual address space accessed contiguous buffer therefore routine need linear buffer e.g abd_borrow_buf friend must allocate separate linear buffer zio_buf_alloc copy content page linear buffer measurable performance overhead workload http github.com zfsonlinux zfs commit abd_alloc use scatter allocation increased use scatter abd specifically switching 1.5k inclusive buffer linear scatter workload access block whose compressed size range commit introduced additional copy read code path example test test suite reduced around read logical block compressed cached arc commit treat single chunk scattered buffer linear buffer contiguous kernel virtual address space single page abd represented way multi page abd also represented way able allocate single chunk higher order page represents power series physically contiguous page often case page abd representing single entry scatter abd linear abd performance advantage avoiding copy allocation performance increase around observed arc cached read small block take advantage fixing regression introduced 87c25d567 note optimization possible physical memory always mapped kernel address space case highmem page optimization made bit system reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8580,,
1864,b8738257c2607c73c731ce8e0fd73282b266d6ef,atthew Ahrens <mahrens@delphix.com>, 2019-06-10 11:48:42 -0700,8865, make zil max block size tunable observed highly fragmented pool metaslab allocation small 8kb large 128k allocation large allocation zil block lot fragmentation large allocation hard satisfy common impact need check thus load lot metaslabs zil allocation code path causing sync writes wait metaslabs load take second worst case may able satisfy allocation case zil resort txg_wait_synced ensure change disk provide workaround change add tunable reduce size zil block external issue dlpx 61719 reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8865,,
1865,5a902f5aaa1fbf6f7e459ec29f6d1d988ec78b0a,lexander Motin <mav@FreeBSD.org>, 2019-06-10 12:52:25 -0400,8873, fix comparison signedness arc size small arc_size may return negative value due unsigned comparison caused delay waiting arc_adjust fix calling aggsum_value arc_size use signed comparison fix problem reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed alexander motin mav freebsd.org close 8873,,
1866,c08c30ed131800635576282e1d142b12fa33c76b,om Caputi <tcaputi@datto.com>, 2019-06-10 12:45:08 -0400,8863, fix incorrect error message raw receive patch fix incorrect error message come non forcing raw incremental receive dataset newer snapshot snapshot case current code print confusing message ivset guid mismatch functionality supported non raw receives undocumented feature never supported raw receive code desired future probably figure way make work reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com issue 8758 close 8863,,
1867,cfc16f8ba8e6e35fc4651059ee95abbb8bf92f62,ichard Elling <Richard.Elling@RichardElling.com>, 2019-05-30 16:38:51 -0700,8839, improve zts debugging udevadm settle timeout 120 180 second default distribution long delay experienced could due strangeness malfunctioning device related device test help debug condition notice given settle take long argument passed expected argument block device pathnames reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8839,,
1868,4cb1b541d42ae0e1f07851f3ea571935b5641624,ichard Elling <Richard.Elling@RichardElling.com>, 2019-06-07 10:12:42 -0700,8839, doe return error code reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8839,,
1869,bef70afaa6fe349022a90ecc395838359ec2e7aa,ichard Elling <Richard.Elling@RichardElling.com>, 2019-06-05 16:22:04 -0700,8839, remove redundant redundant remove reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8839,,
1870,2ff615b2bf2bcbff90fe7b79de0eceee365a7a5a,ichard Elling <Richard.Elling@RichardElling.com>, 2019-06-05 16:13:57 -0700,8839, fix logic error setpartition function reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8839,,
1871,215e4fe4d2d38a095ea99c537f395e00d51d3995,li Schwartz <eschwartz93@gmail.com>, 2019-06-10 12:08:53 -0400,8851, arc_summary prefer python3 version install python match behavior python script arcstat dbufstat always installed whose install exec hook action simply touch shebang python interpreter configured interpreter python2 interpreter fix installation minimal build chroot without python available reviewed brian behlendorf behlendorf1 llnl.gov reviewed ryan moeller ryan freqlabs.com signed eli schwartz eschwartz archlinux.org close 8851,,
1872,01d1e88b1aad73f76b0071fba1a79d79bda24c96,amuel VERSCHELDE <stormi-github@ylix.fr>, 2019-06-10 18:06:58 +0200,8866, fix post postun generation kmodtool zfs kmod rpm build uname get unintentionally evaluated build host evaluated execution scriptlets installation host escaping character avoids evaluating build reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov reviewed neal gompa ngompa datto.com signed samuel verschelde stormi xcp ylix.fr close 8866,,
1873,893a6d62c1895f3e3eeb660b048236571995a564,aul Dagnelie <pcd@delphix.com>, 2019-06-06 19:10:43 -0700,8837, allow metaslab unloaded even freed large system memory used loaded metaslabs become concern range tree fairly efficient data structure heavily fragmented pool still consume significant amount memory problem amplified fail unload metaslabs using currently unload metaslab order function called given metaslab given txg dirtied metaslab txg dirtying result allocation unloading since txgs since selected effect unload metaslab txgs freed move unload logic sync_done new function call function metaslabs given vdev vdev_sync_done reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 8837,,
1874,876d76be3455ba6aa8d1567203847d8c012d05c9,orgen Lundman <lundman@lundman.net>, 2019-06-07 11:01:41 +0900,8860, avoid updating zfs_gitrev.h rev unchanged build process would always compile spa_history.c due touching zfs_gitrev.h avoid change gitrev reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au reviewed allan jude allanjude freebsd.org signed jorgen lundman lundman lundman.net close 8860,,
1875,fd7a657bffccf24a11c60ea63e5dba7aed635961,om Caputi <tcaputi@datto.com>, 2019-06-06 16:47:34 -0400,8857, reinstate raw receive check truncating patch add check removed 369aa50 check confirms raw receive occuring truncating object dn_maxblkid time believed case would hit code path would handled place case reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8852 close 8857,,
1876,b7109a413c4724e05f535876f8902c26804ab3ce,llan Jude <allanjude@freebsd.org>, 2019-06-06 16:14:48 -0400,8822, fix typo comment reviewed chris dunlop chris onthe.net.au reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com signed allan jude allanjude freebsd.org close 8822,,
1877,cb020f0d86f6a1902f49c6e7d1f934850188acc2,erapheim Dimitropoulos <serapheim@delphix.com>, 2019-06-06 13:08:41 -0700,8859, reduced iop vdevs historically performance testing noticed iop significantly reduced vdevs pool hitting percentage specifically hypothetical pool two vdevs happen following vdev would threshold vdev would used vdev would pas threshold vdev would freeing allocate allocation would back forth utilizing one vdev time iop taking hit empirically seen vdev selection allocation good enough fragmentation increase uniformly across vdevs majority time thus set threshold percentage high enough avoid hitting speed bump pool pushed edge effectively disable effect majority case remove least case hit weird behavior future reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 8859,,
1878,627f5117a3ec4b435e6ee85026a1da671de44c7b,arrett Fields <ghfields@gmail.com>, 2019-06-06 16:04:35 -0400,8356, zfs_bootfs contains guid replace guid portion pool reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com signed garrett field ghfields gmail.com close 8356,,
1879,3ce85b5e604e92c421a7975f9f64607cc98131fc,om Caputi <tcaputi@datto.com>, 2019-06-06 15:59:39 -0400,8858, fix integer overflow ztoi i_generation zfs disk format store inode generation bit number disk core however linux kernel inode bit number place code handle correctly cast missing zfs_rezget many pool issue since generation computed current txg inode created many pool txgs pool txgs issue cause inode high enough generation number report error call zfs rollback holding file directory open patch simply add missing cast reviewed alek pinchuk apinchuk datto.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8858,,
1880,8e91c5ba6a1b2c607a1ed4a0a42b2d07eca13091,on Brady <don.brady@delphix.com>, 2019-06-05 15:21:25 -0600,8850, hkdf_test binary one icp instance build test binary hkdf_test linking libicp libzpool result two instance libicp inside binary call icp_init initializes one reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed brady don.brady delphix.com close 8850,,
1881,1a6889947eadb1602109e2f683041865205e8fa8,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-06-06 06:18:46 +0900,8841, drop objid argument zfs_znode_alloc sync openzfs since zfs_znode_alloc already take dmu_buf_t taking another uint64_t argument objid redundant inode i_ino doe need match znode z_id zfs_znode_alloc freebsd illumos argument since vnode vnode vfs hence z_id exists reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8841,,
1882,2ecc2020ef37f6b3901243a181e8c1a7bf0ad045,eter Wirdemo <4224155+pewo@users.noreply.github.com>, 2019-06-05 18:09:17 +0200,8855, fixed small typo man man1 raidz_test.1 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed peter wirdemo peter.wirdemo gmail.com close 8855,,
1883,1ec7eda16743a74b363d3765bca7642935422862,orsten WÃ¶rtwein <twoertwein@users.noreply.github.com>, 2019-06-04 21:12:16 -0400,8820, allow build builtin module zfs built seems possible compile kernel reviewed brian behlendorf behlendorf1 llnl.gov signed torsten rtwein twoertwein gmail.com close 8820,,
1884,1a132f063882bba08253b6c0abf3846cdacfb7a6,yan Moeller <ryan@freqlabs.com>, 2019-06-04 18:05:46 -0700,8731, make python detection optional portable previously without python would cause configure fail able proceed python script built use portable parameter expansion matching instead nonstandard substring matching detect python version test duplicated several place define function assume full path binary since different platform install thing different place use ac_check_progs instead building without python also build without pyzfs sponsored ixsystems inc reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed eli schwartz eschwartz93 gmail.com signed ryan moeller ryan freqlabs.com close 8809 close 8731,,
1885,df24bcf00a60a5a9b1673f4012ee4cbea8c13a69,eHackEd <DeHackEd@users.noreply.github.com>, 2019-06-03 23:54:43 -0400,8752, wait state send recv pipe blocking reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed dhe git dehacked.net close 8733 close 8752,,
1886,a3c98d5728701d455e036d7687e3f7dbbb6100e5,ulsiJain <tulsi.jain@Tulsi-Jains-MacBook-Pro.local>, 2019-05-28 14:14:23 -0700,8289, make handle zero correctly reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tulsijain tulsi.jain delphix.com close 8829 close 8289,,
1887,2531ce372015a90f090176ae61105a9ea1a8f992,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-30 17:13:18 -0700,8834, revert report hole metadata change reverts commit ec4f9b8f30 introduced narrow race lead lseek seek_data incorrectly returning enxio resolve issue revering change restore previous behavior depends solely checking dirty list reviewed olaf faaland faaland1 llnl.gov reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 8816 close 8834,,
1888,1608985a411a8fd7698a41f9150f4bb3543d7093,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-30 08:26:46 +0900,8732, add link count test root inode add test 97aa3ba44 fix link count root inode snapdir visible suggested 8727 reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8732,,
1889,fe0c9f409a1914ad5e5ea5b7cf14a8991e6c1126,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-30 08:18:14 +0900,8826, remove vn_set_fs_pwd vn_set_pwd need insmod per suggestion behlendorf 8777 remove vn_set_fs_pwd vn_set_pwd used zfs_ioctl.c _init loading zfs.ko rest initialization function called cwd set depend cwd process except spa_config_load spa_config_load relative path etc zfs zpool.cache rootdir non null etc zfs zpool.cache given cwd unconditionally use absolute path without vn_set_pwd well entire function removed also freebsd doe reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8826,,
1890,1e724f4f346486f27d57051df73361b0dacf5632,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-29 11:35:50 -0700,8735, exclude log device ashift normal class opening log device import allocation bias yet set vdev_load result log device ashift incorrectly applied maximum ashift vdevs normal class turn prevents removal top level device due ashift check function issue resolved including vdev_islog check since set correctly vdev_open reviewed matt ahrens mahrens delphix.com reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 8735,,
1891,ec4afd27f198d93a7bd32a05cb288708ba754ada,adz <olivier.mazouffre@ims-bordeaux.fr>, 2019-05-29 19:17:25 +0200,8797, fix integer overflow get_next_chunk dn_datablksz type uint32_t need casted uint64_t avoid overflow record size greater mib reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed olivier mazouffre ims bordeaux.fr close 8778 close 8797,,
1892,46df7e6cc97c5c95acdb54abe8b078d7ed410c64,osh Soref <jsoref@users.noreply.github.com>, 2019-05-28 18:58:32 -0400,8818, grammar plural agreement reviewed richard laager rlaager wiktel.com reviewed matt ahrens mahrens delphix.com reviewed chris dunlop chris onthe.net.au signed josh soref jsoref close 8818,,
1893,5691b86ce5e28fc551786bc97567c161ffc6c347,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-29 07:31:39 +0900,8815, refactor parent dataset handling libzfs zfs_rename recursive renaming simplify code moving zhrp parentname inner scope zhrp used test existence parent dataset recursive dataset dir scan since ba6a24026c reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed giuseppe natale guss80 gmail.com signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8815,,
1894,ab1a9705f8021fbbb816d6042b8b8f40f1bb3aaf,oli10K <loli10K@users.noreply.github.com>, 2019-05-29 00:19:50 +0200,8791, double free encryption wrapping key due invalid pool property commits fix double free triggered specifying unsupported combination property creating pool encryption enabled reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed loli10k ezomori.nozomu gmail.com close 8791,,
1895,227d37938553c3c774f127a6354cad57b6bfa12c,yan Moeller <ryan@freqlabs.com>, 2019-05-28 15:18:31 -0700,8759, update comment match code get_vdev_spec make_root_vdev former exist anymore sponsored ixsystems inc reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed ryan moeller ryan freqlabs.com close 8759,,
1896,10e1a0112eeca634b3fd76c7d488293c5d26b10d,toiko Ivanov <s.ivanov@proxmox.com>, 2019-05-23 15:32:53 +0200,8803, test fix cosmetic permission issue make install file dist_ _scripts get installed 0755 dist_ _data 0644. commit move .kshlib .shlib .cfg file testsuite remove shebang  ensures file installed appropriate permission silence warning lintian reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com reviewed john kennedy john.kennedy delphix.com signed stoiko ivanov s.ivanov proxmox.com close 8803,,
1897,3ba8cd6d0ef6d760c7a61861906144dad6e29a13,toiko Ivanov <s.ivanov@proxmox.com>, 2019-05-23 15:22:27 +0200,8803, test runner.py change shebang python3 commit python script work python2 python3 changed shebang usr bin python usr bin python3 get adapted build system system provide python3 commit change test runner.py also use usr bin python3 enabling change buildtime fixing minor lintian issue debian package depend specific python version python3 python2 reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com reviewed john kennedy john.kennedy delphix.com signed stoiko ivanov s.ivanov proxmox.com close 8803,,
1898,0869b74a1edc1e3375b560f788038615f37feac4,oli10K <loli10K@users.noreply.github.com>, 2019-05-28 20:14:58 +0200,8789, endless loop zpool_do_remove platform unsigned char system char unsigned type value returned getopt never negative leading endless loop issue prevents zpool remove zstreamdump working system reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au signed loli10k ezomori.nozomu gmail.com close 8789,,
1899,841a7a98fc4623e0bcecfa393e7818ade4198a15,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-26 06:29:10 +0900,8767, update description vnops description uptodate code reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8767,,
1900,3b61ca3e57852a2d38f3524901df1f1801923c1d,om Caputi <tcaputi@datto.com>, 2019-05-25 16:52:23 -0400,8766, fix embedded accounting count_block currently count_block doe correctly account possibility passed could embedded block counted since work scanning block already handled containing block scanned patch simply resolve issue returning early case reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov authored bill sommerfeld sommerfeld alum.mit.edu signed tom caputi tcaputi datto.com close 8800 close 8766,,
1901,8e3c3ed1b3b21d5510748a55852264c78fe24610,om Caputi <tcaputi@datto.com>, 2019-05-25 16:46:32 -0400,8811, disable parallel processing zfs mount currently zfs mount always attempt parallelize work related mounting best unfortunately user pass option load key cause thread prompt user key resulting confusing racy user experience patch simply disables parallel mounting using flag reviewed sebastien roy sebastien.roy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8762 close 8811,,
1902,bfd5a709e74dfe9358b339b4a17c4ad6567b85c7,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-26 05:42:09 +0900,8794, linux 5.2 compat directly call made gpl torvalds linux 19343b5bdd directly call without using interface given zfs_putpage caller reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8794,,
1903,36c110f9943f3abe2ac59ffa7e76b48e8dbfc1b6,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-26 05:40:46 +0900,8776, linux 5.2 compat fix config kernel shrink.m4 test failure whether count_objects callback exists test failed error error message using incomplete function shrinker_cb caused torvalds linux 83da1bed86 configurable would want able compile default kbuild setting reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8776,,
1904,4bb17ebfe20754078d15e14a3231e25be1d5ca9f,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-26 05:28:56 +0900,8777, linux 5.2 compat remove config kernel set pwd.m4 failed 5.2 rc1 error unknown message set_fs_pwd visible const non const test caused torvalds linux 83da1bed86 configurable would want able compile default kbuild setting set_fs_pwd never exported exception distro kernel set_fs_pwd used zol begin test result used spl function vn_set_fs_pwd reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8777,,
1905,c3e5907fdb10201e972c133699e2b8738e1fffbe,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-25 08:43:23 +0900,8765, drop local definition mount_busy accessible via sys mntent.h reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8765,,
1906,43977948aa156be2771f3df2b9a71f741d49515a,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 23:16:00 +0200,8782, zpool status documented help message commit add undocumented option zpool help message reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed loli10k ezomori.nozomu gmail.com close 8782,,
1907,fe609530f2333054eeffd08ebef8c227a9730085,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 23:12:14 +0200,8787, zfs test fix warning packaging .shlib file change prevents following warning packaging zfs test file warning usr src zfs 0.8.0 test zfs test include executable empty shebang removing executable bit reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed loli10k ezomori.nozomu gmail.com close 8787,,
1908,d28b492ab374675df0b94f83aa6bfbca2d8264f9,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 23:06:53 +0200,8786, verify3p message missing space character commit reintroduces space character inadvertently removed a887d653 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed loli10k ezomori.nozomu gmail.com close 8786,,
1909,2696e86f2b5c6dfb66fb809d7070ffb2c25b3f28,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 23:04:08 +0200,8785, zfs test verify zfs zpool help message column commit update zfs test suite detect incorrect wrapping zfs zpool help message reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8785,,
1910,b868525bf7577e1e83634471eaac8805d9ed5481,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 22:58:12 +0200,8784, zfs pretty print objsetid property objsetid property stored number dataset identifier pretty printed reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed loli10k ezomori.nozomu gmail.com close 8784,,
1911,62b2152ecacfe656617054531aa2db4bb84a1ace,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 22:54:36 +0200,8783, zfs missing newline character error message commit simply add missing newline character error message printed zfs command provided pool parameter found reviewed chris dunlop chris onthe.net.au reviewed giuseppe natale guss80 gmail.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 8783,,
1912,0ff5cd07723c23a158d5708cc5127209f37ac777,iv0 <github@nomore.at>, 2019-05-24 22:17:50 +0200,8779, fix ksh path test zfs test test perf regression file use usr bin ksh shebang change bin ksh consistency reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale guss80 gmail.com reviewed igor kozhukhov igor dilos.org signed stoiko ivanov s.ivanov proxmox.com close 8779,,
1913,8708fd888f8a2bd3c68ccc059a579ba7ff41f79d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-25 04:26:18 +0900,8761, linux 2.6.39 compat test kstrtoul exists kstrtoul exists torvalds linux 33ee3b2e2eb9 2.6.39 use strict_strtoul kstrtoul exist note strict_strtoul existed alias kstrtoul removed torvalds linux 3db2e9cdc085 look like rhel6 2.6.32 based backported kstrtoul caused build pas compilation test fail vanilla 2.6.39 kernel distro kernel without backport reported 8760  grep kstrtoul lib module 2.6.32 build include linux kernel.h dev null echo  reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8760 close 8761,,
1914,2e8c315fc6a9999e3c51c4b409dcd10a9e1accda,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 21:17:52 +0200,8790, device removal panic bit system issue caused incorrect usage sizeof operator bit system issue since uint64_t uint64_t byte size however bit system pointer byte long supported zap_lookup_impl trying remove top level vdev bit system cause following failure verify3 failed panic vdev_indirect.c 833 showing stack process 1315 cpu pid 1315 comm txg_sync tainted 4.4.69 hardware name qemu standard i440fx piix 1996 bios 1.10.2 2.fc27 2014 c1abc6e7 0ae10898 00000286 d4ac3bc0 c14397bc da4cd7d8 d4ac3bf0 d4ac3bd0 d790e7ce d7911cc1 00000523 d4ac3d00 d790e7d7 d7911ce4 da4cd7d8 00000341 da4ce664 da4cd8c0 da33fa6e 49524556 28335946 3d3d2030 65647620 626f5f76 call trace dump_stack 0x58 0x7c spl_dumpstack 0x23 0x27 spl 0x5 0x41 spl dbuf_rele 0x3e 0x90 zfs zap_lookup_norm 0xbe 0xe0 zfs zap_lookup 0x57 0x70 zfs 0x102 0x12b zfs 0x3e1 0x64d zfs txg_verify 0x1d 0x160 zfs 0x80 0xc0 zfs vdev_sync 0xbf 0x550 zfs mutex_lock 0x10 0x30 txg_list_remove 0x9f 0x1a0 zfs zap_contains 0x4d 0x70 zfs spa_sync 0x9f1 0x1b10 zfs ... kthread_stop 0x110 0x110 commit simply corrects integer_size parameter used lookup vdev zap object reviewed giuseppe natale guss80 gmail.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8790,,
1915,e55db32ad08759bd2feff2812b39ecb0a306f520,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 18:40:46 +0200,8781, zpool trim valid option commit remove documented handled option zpool help message reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8781,,
1916,75c09c5060b85a144cc794ae857520662dc8fd58,oli10K <loli10K@users.noreply.github.com>, 2019-05-24 04:17:00 +0200,8788, fix coverity defect cid 186143 cid 186143 memory illegal access use_after_free patch fix use free moving kmem_free call end function reviewed chris dunlop chris onthe.net.au reviewed giuseppe natale guss80 gmail.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8788,,
1917,2d0077da6ded46fb9c8fc646904d23a54ad4d352,gor K <igor@dilos.org>, 2019-05-24 01:42:03 +0300,8729, rename reservation test .sh .ksh reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 8729,,
1918,8b8b44d06fc653ca608412a756d3645ee465f7fe,afael Kitover <rkitover@gmail.com>, 2019-05-23 14:40:28 -0700,8647, kernel timer api rework config kernel timer.m4 refactor slightly check generally new timer_setup apis also check callback signature kernel notably 4.14 new timer_setup api use old callback signature also add check flag member struct timer_list added 4.1 rc8 add compatibility shim include spl sys timer.h allow using new timer apis two caveat callback argument type must declared explicit assignment required get timer variable timer_of macro callback would look like  __cv_wakeup  struct timer_list tmr struct timer_list struct thing parent from_timer parent tmr  ... stuff parent  make minor change spl condvar.c spl taskq.c use new timer apis instead conditional code reviewed tomohiro kusumi kusumi.tomohiro gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed rafael kitover rkitover gmail.com close 8647,,
1919,78fac8d925fdd64584292fbda4ed9e3e2bbaae66,ichard Elling <Richard.Elling@RichardElling.com>, 2019-05-23 14:28:53 -0700,8746, fix kstat state update pool transition reading kstats health aka state pool stored proc spl kstat zfs poolname state via however import export case spa exists root vdev doe exist fix check case set state transitioning unfortunately easy reproduce test detected randomly zts run kstats also sampled regularly change testing trip case transitioning state collected least kstats posterity backtrace prior fix mon may 2019 rip 0010 0x10 0xb0 zfs ... mon may 2019 call trace mon may 2019 spa_state_data 0x1a 0x40 zfs mon may 2019 kstat_seq_show 0x117 0x440 spl mon may 2019 seq_read 0xe5 0x430 mon may 2019 proc_reg_read 0x45 0x70 mon may 2019 __vfs_read 0x1b 0x40 mon may 2019 vfs_read 0x8e 0x130 mon may 2019 sys_read 0x55 0xc0 mon may 2019 sys_fcntl 0x5d 0xb0 mon may 2019 do_syscall_64 0x73 0x130 mon may 2019 0x3d 0xa2 reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed richard elling richard.elling close 8746,,
1920,bff2361aeb32a83c26e2992733864ca99cced257,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-23 13:46:33 -0700,8730, linux 5.2 compat rw_tryupgrade commit torvalds linux 46ad0840b removed architecture specific rwsem source header leaving generic version part change macro moved private kernel locking rwsem.h header result build failure macro required implement rw_tryupgrade compatibility function practice major problem consumer rw_tryupgrade consumer rw_tryupgrade written retry using rw_enter rw_writer auditing caller dmu_zfetch determined perform retry updated commit resolve issue said rw_tryupgrade functionality considered possible removal future release due difficultly supporting interface reviewed tomohiro kusumi kusumi.tomohiro gmail.com reviewed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8730,,
1921,e34c3ee2fcbb320525a110c1811c557bc60479ff,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-21 10:03:24 -0700, , tag 0.8.0 signed brian behlendorf behlendorf1 llnl.gov,,
1922,9dc41a769df164875d974c2431b2453e70e16c41,yan Moeller <ryan@freqlabs.com>, 2019-05-19 17:31:54 -0700,8743, fix wrong assertion libzfs diff error handling compare error case set error code epipe error set correct assertion make error epipe einval reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed ryan moeller ryan freqlabs.com close 8743,,
1923,e61b53475e859bd055d205a4d9659f576a9765d1,aul Dagnelie <pcd@delphix.com>, 2019-05-19 17:30:33 -0700,8745, fix incorrect assertion db_dirtycnt evicting dbuf always however still appears dn_dbufs tree call range contains evicting dbuf attempt mark dirty fail evicting resulting new dbuf created dirtied later zfs_debug mode assert dbufs range dirty evicting dbuf still present trip assertion erroneously reviewed matt ahrens mahrens delphix.com reviewed richard elling richard.elling reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 8745,,
1924,f378f42b53382dc8e5a21dfad1a4d71271aba059,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-09 10:34:05 -0700, , tag 0.8.0 rc5 signed brian behlendorf behlendorf1 llnl.gov,,
1925,ca95f70dff2915a1a5d838ecafc28646f5f5a42e,laf Faaland <faaland1@llnl.gov>, 2019-05-09 10:08:05 -0700,8696, zpool import progress kstat import requires long mmp activity check user request pool recovery import make take long time user may know able tell whether import progressing hung add kstat list import currently processed kernel currently one time possible kstat allows one kstat proc spl kstat zfs import_progress kstat content follows pool_guid load_state multihost_secs max_txg pool_name tank3 load_state value spa_load_state multihost_secs second end multihost activity check none required max_txg current rewind occurring could used outside tool pacemaker resource agent report import progress part manual troubleshooting zpool import subcommand could also modified report information reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 8696,,
1926,b689de85e8c78b9dc03c1bd4c3ca0f4e75714e92,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-09 08:43:55 +0900,8726, add missing trailing printk message message want like regular printk message reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8726,,
1927,4bb40c1c82f0c11d231cbb4e2bd3bee1b550ad0b,lexander Motin <mav@FreeBSD.org>, 2019-05-08 19:42:39 -0400,8723, fix dataset name comparison zfs_compare code never returned match comparing two datasets snapshot result uu_avl_find called zfs_callback never succeeded allowing add dataset list multiple time example zfs get name pers pers pers pers name property value source pers name pers pers name pers pers name pers patch zfs get name pers pers pers pers name property value source pers name pers pers name pers reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed alexander motin mav freebsd.org close 8723,,
1928,97aa3ba44f0b3911866e5dfc31b0d7a9fb124855,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-09 08:40:51 +0900,8727, fix link count root inode snapdir visible given zfs_getattr implemented used getattr zpl inodes also need consider additional link count snapdir property set visible without directory root inode dataset match link count snapdir visible reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8727,,
1929,e2dddb7e58f7046dc1bfdbc49db52f298fb7019f,MoVS <git@justinscholz.de>, 2019-05-09 01:04:45 +0200,8721, fix typesetting erratum reviewed olaf faaland faaland1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed justin scholz git justinscholz.de close 8712 close 8721,,
1930,3b770842d58ccea70f4217f573bcf529df10fcd0,ichard Laager <rlaager@wiktel.com>, 2019-05-06 17:11:42 -0500,8710, add zol2zfs patch.sed makefile.am sort adding man dates.sh noticed zol2zfs patch.sed missing even though zfs2zol patch.sed present also list sorted sorted reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8710,,
1931,e7ce9759accfe973027a20928b1e2af46058190a,ichard Laager <rlaager@wiktel.com>, 2019-05-05 16:45:56 -0500,8710, correct man page date various change many made man page without bumping date corrected based last commit file also added script used make change reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8710,,
1932,a20f43b51ba87d4932f897e23cf9af181d4d1374,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-08 10:18:40 -0700,8545, linux 5.0 compat asm_bug macro 5.0 kernel defines macro asm_bug order prevent conflict build failure rename asm_bug zfs_asm_bug currently issue aarch64 instance asm_bug renamed avoid future conflict x86_64 reviewed tomohiro kusumi kusumi.tomohiro gmail.com reviewed richard laager rlaager wiktel.com reviewed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 8725 issue 8545,,
1933,515ddf65042e8eb772c3f38ed4556850a0c2fbf3,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-08 10:04:04 -0700,8719, fix errant efault writes 8719 commit 98bb45e resolved deadlock could occur handling page fault zfs_write change added field uio structure failed initialize b_false uninitialized field would cause uiomove_iov call instead copy_from_user resulting unexpected efaults resolve issue fully initializing uio clearing flag used zfs_write additionally reorder uio_t field assignment match order field declared structure reviewed chunwei chen tuxoko gmail.com reviewed richard laager rlaager wiktel.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 8640 close 8719,,
1934,1f02ecc5a56d08b744b618c641505c451bd9b1e4,eHackEd <DeHackEd@users.noreply.github.com>, 2019-05-07 18:34:42 -0400,8706, make parameter exported documented new module parameter reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 8706,,
1935,caf9dd209fdcfccabc2f32b3f23c5386ccfb896c,rian Behlendorf <behlendorf1@llnl.gov>, 2019-05-07 15:18:44 -0700,8668, fix send recv lost spill block receiving drr_object record receive_object function need determine handle spill block associated object may need removed kept depending object modified source determination currently accomplished using heuristic take account drr_object record existing object property problem quite enough information available right thing circumstance example block size change spill block removed kept needed resolve additional flag drr_object indicates object received reference spill block flag added purpose set object reference spill block must kept either update date replaced subsequent drr_spill record conversely object received reference spill block existing spill block always removed since previous version zfs understand new flag additional drr_spill record inserted stream advantage fully backward compatible existing zfs system receiving stream recreate spill block incorrectly removed updated zfs version correctly ignore additional spill block identified checking flag small downside approach may increase size stream received snapshot previous version zfs additionally receiving stream generated previous unpatched version zfs spill block may still lost openzfs issue http www.illumos.org issue 9952 freebsd issue http bugzilla show_bug.cgi 233277 reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8668,,
1936,9c53e51616c99592973ebf94b4fd54a5f8c8756d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-08 02:06:30 +0900,8675, fix zfs set atime relatime behavior inherited datasets zfs set atime relatime disable enable property read datasets whose property inherited parent dataset unmounted mounted property start work properly dataset unmounted mounted difference come regular mount process e.g via zpool import mount option based property read ondisk layout dataset whereas zfs set atime relatime remount specified dataset  zpool create device zfs create zfs set atime echo test test sync zfs list name used avail refer mountpoint 176k 18.9g 25.5k 26k 18.9g 26k zfs get atime name property value source atime local atime inherited stat test grep access tail access 2019 33.741205192 0900 cat test test stat test grep access tail access 2019 50.173231861 0900 changed read  problem zfsvfs z_atime probably intended keep incore atime state get updated callback function atime property change never used anything else since file read atime update use common function file_accessed whether update atime via dirty_inode determined need return false atime turned currently continues return true zfs set atime fix setting dropping sb_noatime vfs super block depending new atime value work expected property change problem applies relatime except self contained relatime test needed based mount option flag mnt_relatime exist datasets inherited relatime property via zfs set relatime ... hence need relatime test reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8674 close 8675,,
1937,75346937de39f059722eedd29468ac9b86bea67c,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-08 01:55:40 +0900,8714, linux 5.1 compat drop ullong_max llong_max definition linux kernel commit linux kernel.h split _max _min macro linux limits.h first appeared 5.1 moved several macro linux kernel.h linux limits.h broke compilation due header inclusion order local header include spl sys types.h also defines ullong_max llong_max undefined look like local ullong_max llong_max never needed spl integration linux kernel.h definition since upstream commit 2.6.18 drop  linux include linux limits.h error llong_max redefined werror define llong_max long long 0ull zfs include spl sys types.h note location previous definition define llong_max long long 0ull reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8714,,
1938,c6eaa14620906267a491dd6bd6097c68abb8f8da,ichard Laager <rlaager@wiktel.com>, 2019-05-07 11:51:09 -0500,8713, cleanup special dedup language standardizes language deduplication table rather dedup data might read data block rather ddt likewise standardizes small file block also standardizes normal rather using normal general paragraph also replaced non specified explicit non dedup special reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8713,,
1939,6aff30ad803fd677d873dd5220a37e6e3876aa0d,ntonio Russo <antonio.e.russo@gmail.com>, 2019-05-07 12:32:23 -0400,8718, fix zfs mount generator datasets space alternative implementation rlaager original modification zfs mount generator fix chrisrd comment set ifs tab character matching call zfs list allowing space appear dataset name mountpoints also add comment explaining rationale reviewed chris dunlop chris onthe.net.au reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed antonio russo antonio.e.russo gmail.com close 8708 close 8718,,
1940,bca06413f7db1b04a943c04e7bacbcfa13a6727d,ichard Laager <rlaager@wiktel.com>, 2019-05-06 12:37:18 -0500,8711, openzfs 10473 zfs missing cross reference zfs program authored jason king jason.king joyent.com reviewed toomas soome tsoome me.com reviewed andy fiddaman andy omniosce.org reviewed peter tribble peter.tribble gmail.com reviewed gergå mihã doma domag02 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported richard laager rlaager wiktel.com openzfs issue http www.illumos.org issue 10473 openzfs commit http github.com illumos illumos gate commit 736e67003 close 8711,,
1941,a7628932695997e87e6f03531a9ff342e2e1e1d6,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-06 07:57:23 +0900,8707, fix typo etc module zfs zfs_ctldir.c drop duplicated phrase comment also drop obsolete comment perform mount associated ... doe get objid dmu lookup incore inode reviewed giuseppe natale guss80 gmail.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8707,,
1942,de3e0b914b28deaf9034656d8f6e0bdf9ccd7c7f,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-05 08:40:48 +0900,8701, linux 5.0 compat use totalhigh_pages linux kernel commit convert totalram_pages totalhigh_pages variable atomic replaced totalhigh_pages inline function totalhigh_pages broke compilation ia32 etc zol totalhigh_pages arch highmem confirmed fedora 5.0.9 301.fc30.i686 reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8677 close 8701,,
1943,1eacf2b3b0a1d3bccaab83dece44d671ba30292d,ohn Gallagher <john.gallagher@delphix.com>, 2019-05-04 16:39:10 -0700,8615, improve rate new zvols processed kernel function add new zvols disk system add_disk briefly open close zvol part work closing zvol involves waiting two txgs sync combined fact taskq processing new zvols single threaded make processing new zvols slow waiting txgs sync necessary zvol written case add_disk change add tracking whether zvol written skip txg_wait_synced call unnecessary change also fix flag passed vdev_disk_open fmode_read fmode_write fmode_excl instead fmode_excl flag incorrectly calculated using wrong version vdev_bdev_mode reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed john gallagher john.gallagher delphix.com close 8526 close 8615,,
1944,b3b60984ee191bdbb00b91842053c83581854db7,MoVS <git@justinscholz.de>, 2019-05-03 01:52:57 +0200,8683, clearer wording erratum user existing pool especially pool top level encrypted datasets could run trouble trying work around erratum clarify removing encrypted snapshot bookmark enough clear erratum reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed justin scholz git justinscholz.de close 8682 close 8683,,
1945,8d9f616511cbb1775e0225b3315f4713135da7f6,atthew Ahrens <mahrens@delphix.com>, 2019-05-02 16:46:04 -0700,8703, reword comment comment could clear specific also contains needlessly strong language reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed matthew ahrens mahrens delphix.com close 8702 close 8703,,
1946,fa241660743d75a97001509c613b400fb60f26be,om Caputi <tcaputi@datto.com>, 2019-05-02 19:42:31 -0400,8700, add feature check zpool resilver command zpool resilver command requires resilver_defer feature active pool unfortunately check left original patch commit simply corrects command properly return error case reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tom caputi tcaputi datto.com close 8700,,
1947,85bdc6840190879e4b97364dfa6d93e2877a265e,om Caputi <tcaputi@datto.com>, 2019-05-01 20:34:24 -0400,8687, fix estimated scrub completion time currently possible zpool scrub command progress slightly beyond 100 due concurrent change happening live pool behavior expected userspace code zpool status would subtract expected amount data amount data already scrubbed resulting negative integer casted large positive one number used calculate estimated completion time resulting wildly wrong result code change behavior zpool status doe attempt report estimate period reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed tom caputi tcaputi datto.com close 8611 close 8687,,
1948,6bdefad311a87452b557febd5be33b627775a006,atthew Ahrens <mahrens@delphix.com>, 2019-05-01 17:32:54 -0700,8699, remove incorrect inappropriate comment dprintf_dnode comment seems misunderstand preprocessor token doe token concatenation needed since concatenating string literal performed putting literal next additionally comment offensive language reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 8698 close 8699,,
1949,2a15c00f89468dde08ef48f2d6a3df223c60e723,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-10 01:58:28 +0900,8593, use sigaction instead sigignore portability sigignore portable code fails compile platform without sigignore use sigaction  zfs_main.c function zfs_do_diff zfs_main.c 7178 error implicit declaration function sigignore werror implicit function declaration void sigignore sigpipe  reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8593,,
1950,5b1443c47e4ae5c53f343f3d0fb81d8d963c3d95,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-10 01:58:03 +0900,8593, use sigaction instead sigset portability sigset portable code fails compile platform without sigset use sigaction  largest_file.c function main largest_file.c error implicit declaration function sigset mean sigvec werror implicit function declaration void sigset sigxfsz sigxfsz  sigvec reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8593,,
1951,f0ce0436aa801a5b281f93a456d394fe141034f7,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-05-01 11:41:12 +0900,8692, correct snprintf size argument size argument snprintf glibc snprintf linux kernel includes trailing snprintf man page explains write size byte including trailing null byte i.e snprintf take buffer size e.g snprintf module zfs zfs_ctldir.c buffer size maxpathlen caller passing maxpathlen snprintf size path_len caller trying reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8692,,
1952,77449a1ab0467a6fc43211a9c19d6f60be52a737,ichard Laager <rlaager@wiktel.com>, 2019-04-30 15:53:54 -0500,8691, clarify deduped data encrypted reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com signed richard laager rlaager wiktel.com close 8691,,
1953,294fcb543e4bf8d8d36832e9071ef0f6b1c9423e,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-30 10:58:45 -0700,8660, add signed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8660,,
1954,c12ea778654778f2039369323e8875e71d3a5609,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-29 18:20:21 -0700,8678, linux 5.0 compat remove incorrect assert block device notably scsi_debug set root_blkg request queue remove assertion allow existing call blkg_tryget gracefully handle null doe reviewed tomohiro kusumi kusumi.tomohiro gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8678,,
1955,b43a27f76fa2cdad5e9a8e74a6a028e38a415a62,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-27 03:24:31 +0900,8653, use nvlist encoding variable use nvlist encoding variable instead reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au signed tomohiro kusumi kusumi.tomohiro gmail.com close 8653,,
1956,9dfe4b80f0d18d41bc44aa448367aa4ebb63b5db,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-27 03:22:14 +0900,8665, prevent make distclean removing config config.rpath make distclean remove empty file config config.rpath avoid adding text also see e1245d83e9 prevent make distclean removing sized file  find size config config.rpath autogen.sh configure git diff make distclean git diff diff git config config.rpath config config.rpath deleted file mode 100644 index e69de29bb 000000000 reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8665,,
1957,126d0fa7333c0d6d6159900d2858c82fa964b4f9,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-26 02:17:28 +0900,8656," use seek_ set cur end file seek whence use either seek_ 0,1,2 ... reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro gmail.com close 8656",,
1958,f4c594da94d856c422512a54e48070f890b2685b,om Caputi <tcaputi@datto.com>, 2019-04-25 13:16:24 -0400,8655, fix dmu free throttle patch fix issue dmu free throttle implemented first issue get_next_chunk calculating number block free would dirty incorrectly case involving extremely large file code would greatly overestimate number effected block causing excessive call txg_wait_open patch corrects calculation second issue free throttle total number free block open quiescing syncing txgs determine whether throttle cause large free created first issue cause txg syncs free allowed proceed patch ensures accounting done entirely per txg fashion free given txg affect immediately follow reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8655,,
1959,2b127afb44d11bfddaf8ed95be18c7aefe7ea5de,ichard Laager <rlaager@wiktel.com>, 2019-04-24 19:14:25 -0500,8652, clarify improve encryption documentation remove language user data encrypted avoid argument user data especially light user property document property unencrypted document snapshot name unencrypted consistency rest zfs.8 man page use zfs generic noun bolded zfs latter refers command likewise use zfs instead kernel module give passphrase example user key reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard laager rlaager wiktel.com close 8652,,
1960,6e81f9b21b1ba5649691d07143849665dd6108ad,ichard Laager <rlaager@wiktel.com>, 2019-04-24 19:12:14 -0500,8651, duplicate encryption copy limitation add encryption copy limitation language copy property section reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8651,,
1961,7b337fda40dc2d50ee4600930b21e6856e68e3e5,ichard Laager <rlaager@wiktel.com>, 2019-04-24 19:10:47 -0500,8650, deprecate dedupditto document zpool.8 dedupditto deprecated made effect future release reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed richard laager rlaager wiktel.com close 8650,,
1962,0531c83c18768467a533e054d0dec0557a914619,ichard Laager <rlaager@wiktel.com>, 2019-04-21 15:56:33 -0500,8641, eliminate useless double bolding man page far know tell testing ... exactly equivalent ... reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1963,a5a6d82dda4e633c0c846a8949c597d255689c29,ichard Laager <rlaager@wiktel.com>, 2019-04-21 15:47:23 -0500,8641, alphabetize zpool features.5 short name feature sorted en_us locale locale specifically mean bookmark_v2 come _after_ bookmark reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1964,6f07780147b741ab2aaf9185cd6522b3f5a1637e,ichard Laager <rlaager@wiktel.com>, 2019-04-21 15:46:21 -0500,8641, standardize .re placement zpool features.5 command used unindent end block consistent man page reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1965,1644708fdca89f202785b4a4be2addd06826beca,ichard Laager <rlaager@wiktel.com>, 2019-04-21 15:24:52 -0500,8641, add missing formatting sha512 zpool features.5 reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1966,e1822912a915c9cdc04198d5272ad93efdab5698,ichard Laager <rlaager@wiktel.com>, 2019-04-21 15:23:52 -0500,8641, correct guid large_blocks zpool features.5 org.open zfs large_blocks plural reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1967,d0c3aa9cdd460f4c6bd149e51c9a8bce117074d4,om Caputi <tcaputi@datto.com>, 2019-04-21 15:12:30 -0500,8641, change wording zfs module parameters.5 reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1968,063edd7fd88bdcb17ea286899788fef09459cdb3,ichard Laager <rlaager@wiktel.com>, 2019-04-18 20:21:09 -0500,8642, document hole_birth effectively useless first sentence commit come wiki originally written rich ercolani rincebrain gmail.com change tom caputi tcaputi datto.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641 close 8642,,
1969,6ce7b2d9ad760e3aa0a2185b1c7435c37d284cd8,ichard Laager <rlaager@wiktel.com>, 2019-04-18 20:15:58 -0500,8641, document reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1970,e1fbe7711061c10c2c0fe80a5d3768e865c0c166,ichard Laager <rlaager@wiktel.com>, 2019-04-18 19:09:11 -0500,8641, correct bookmark_v2 dependency encryption depends bookmark_v2 bookmark_v2 depends bookmark reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1971,4d256e897a8f0b2218778e018852651f897dd59d,ichard Laager <rlaager@wiktel.com>, 2019-04-18 19:08:32 -0500,8641, fix formatting zpool features.5 need use tab instead space display correctly i.e thing lined reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8641,,
1972,2de17298de0725b437a4f312612f7b2a6000eaa5,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-24 02:23:00 +0900,8644, fix incorrect use .nm directive zpool affect zpool reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8644,,
1973,e8864b1b28c231d80f0df8b1c4b893f9ada73aad,afael Kitover <rkitover@gmail.com>, 2019-04-19 19:09:29 +0000,8554, config libintl libiconv gettext detection detect autoconf whether lintl possibly liconv necessary translation function like gettext actual autoconf code  am_iconv am_gnu_gettext external libs libs ltlibintl ltlibiconv  reference http www.gnu.org software gettext manual html_node http www.gnu.org software gettext manual html_node reason check libiconv add separately sometimes necessary user linking statically config .m4 file added running gettextize removing everything else empty file config config.rpath necessary avoid error version autotools see http 2007 required file configrpath found.html config.rpath copied gettextize doe currently work kind missing interaction libtool try apply libtool flag compiler reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed rafael kitover rkitover gmail.com close 8554,,
1974,34d343c2a8ff849c46001c2ee2f1081f489192ef,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-20 04:05:15 +0900,8636, drop unused znode_stats znode_stat_add unused since 5649246dd3 remove znode move functionality znode_stat_add never needed reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tomohiro kusumi kusumi.tomohiro gmail.com close 8636,,
1975,f8b2ca6b1c0e6a2b1564323ab3e06a85ec668c2d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-20 04:04:21 +0900,8643, fix typo zbin zpool sbin zpool reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tomohiro kusumi kusumi.tomohiro gmail.com close 8643,,
1976,a35c12073ccc1ae22f816c1128363cb337bb3b06,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-20 04:03:32 +0900,8635, fix incorrect unused comment unused flag zfs_create also indicate large file reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard laager rlaager wiktel.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8635,,
1977,17cbc2e62b7d561d59ece976f17fe422516587a8,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-16 13:24:49 -0700, , tag 0.8.0 rc4 signed brian behlendorf behlendorf1 llnl.gov,,
1978,5090f72743f5a587b1a8b64aaa1023913735d0bf,fzhu <chengfeix.zhu@intel.com>, 2019-04-17 03:38:36 +0800,8610, code improvement bug fix qat support support qat zfs root file system zfs module loaded qat started qat started post process e.g echo sys module zfs parameter echo sys module zfs parameter echo sys module zfs parameter verify alder checksum compress result allocate digest aad buffer physical contiguous memory update documentation  reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com signed chengfeix zhu chengfeix.zhu intel.com close 8323 close 8610,,
1979,59f6594cf605635c22311c7f0752bbc67807a508,ichard Laager <rlaager@wiktel.com>, 2019-04-16 14:34:06 -0500,8623, restructure vec_idx loop replaces empty loop loop make code easier read reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reported github.com dcb314 signed richard laager rlaager wiktel.com close 6681 close 6682 close 6683 close 8623,,
1980,50478c6dadc2accfab5bfe72d278ede17c2e13cf,erraTech <1118433+TerraTech@users.noreply.github.com>, 2019-04-10 00:43:28 -0700,8567, add option version emit version string add zfs version zpool version subcommands display version user space utility loaded zfs kernel module example zfs version zfs 0.8.0 zfs kmod 0.8.0 version alias added support common convention using zfs version obtain version information reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com signed terratech 1118433 terratech close 2501 close 8567,,
1981,8750edf1f75e4f02c353be490309940f11115f23,ichard Laager <rlaager@wiktel.com>, 2019-04-16 12:12:08 -0500,8624, zfs allow refreservation needed zfs create creating non sparse volume zfs create set refreservation accordingly one need refreservation ability addition create ability order create non sparse volume reviewed brian behlendorf behlendorf1 llnl.gov reported github.com homerlinux reported matthew ahrens mahrens delphix.com signed richard laager rlaager wiktel.com close 8531 close 8624,,
1982,6c0f78f8a35122e63c9c92475678174d9575afdf,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:30:13 -0500,8446, clarify grub lack support sha512 skein edonr zfs.8 correctly said grub support zpool features.5 said booting pool ... supported zpool features.5 discus grub specifically indicates lack support feature also clarified wording place indicate pool feature used filesystem dataset thing pool wide described used think technically feature enabled active however effect essentially enable checksum algorithm dataset pool might well enable feature pointing loaded gun foot past argument could made feature enabled useful simplicity long activate grub incompatible feature getting realistic time user still encourage reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626 close 8446,,
1983,fcf21f8fcb4600fafbd40fbf44e70473aae58470,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:23:26 -0500,8626, update comment match code grub support large_blocks reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1984,8dda07b33c15cffa0b702d0fd7d7087399231677,ichard Laager <rlaager@wiktel.com>, 2019-04-15 23:59:37 -0500,8626, reference zfeature.c spa_version comment reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1985,7698c4eca951f0b211edaf3572f9c9fef108aef1,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:22:38 -0500,8626, remove zfs.h comment grub nobody going bumping spa_version openzfs moved feature flag also requirement keep grub date happening zpl_version could bumped would likely handled similar way adding filesystem feature flag event need comment certainly need reference grub 0.97 source code solaris tree reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1986,7886aa8a798b373cf0d809f95d77713446ef0bac,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:19:36 -0500,8626, reword dedup limitation edon old wording effectively use except seems confusing reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1987,393363c5ec518210ad4ad66326d421b0adc55e07,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:15:04 -0500,8626, consistently captialize guid feature reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1988,612c4930dd2c8d12c42b95a23b5967d644123298,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:07:36 -0500,8626, fix spelling deferred reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1989,c349137a7e1acd6b3d50de1f38af015e9f96d375,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:06:34 -0500,8626, update zdb.8 fsck reference linux man section also fsdb linux removed reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1990,9042ca0e94f9b3fa4a8329758a2548725b1c2814,ichard Laager <rlaager@wiktel.com>, 2019-04-14 20:52:34 -0500,8626, refer command consistently zpool features.5 mix command subcommand quoted quoted bolded vs. bolded command name also fix man page section solaris linux reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1991,9810410a53f7e05cef7a901c3692d96a38475abc,ichard Laager <rlaager@wiktel.com>, 2019-04-14 20:46:19 -0500,8626, eliminate mention special previously spare vdev type described special pseudo vdev ... wanted eliminate word special feature exists thing special vdev ended eliminating almost instance word special referencing feature reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 8626,,
1992,c2c6eadf29c8ab46f6c9fdc68688e65785d26b4b,om Caputi <tcaputi@datto.com>, 2019-04-10 10:17:36 -0700,8607, fix issue truncated file raw sends receiving raw send stream reallocated object whose content freed standard indicator call furthermore calling required object current block size must used new block size two additional test case added provided realistic test coverage processing reallocated object part raw receive reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8528 close 8607,,
1993,83472fabe5600695fdb07a3f158a9352cc5bf3af,ichard Laager <rlaager@wiktel.com>, 2019-04-14 21:06:34 -0500,8622, fix hierarchy misspelling reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reported matthew ahrens mahrens delphix.com signed richard laager rlaager wiktel.com close 8563 close 8622,,
1994,703f791d3538472600571ecde01627df6b47e6d6,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-08 02:18:01 +0900,8598, hard code number ioctls portability use zfs_ioc_last zfs_ioc_first instead 256 seems 256 number large enough hold ioctls moment using 256 also cause compile time warning error platfoms whose enum zfs_ioc definition differs reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tomohiro kusumi kusumi.tomohiro gmail.com close 8598,,
1995,96e51d2773cb0f82595f7d29caed0ca4ac653681,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-08 02:35:28 +0900,8598, sync reserved illumos ioctl comment actual number  reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tomohiro kusumi kusumi.tomohiro gmail.com close 8598,,
1996,d5d2ef2b268096f96d7fdf0743976d2a64cf51a2,ichard Elling <Richard.Elling@RichardElling.com>, 2019-04-14 11:04:54 -0700,8617, compile fno omit frame pointer default depending version gcc reuse frame pointer register micro optimization might help old x86 processor however also make dynamic tracing useful stack easily observed rule change instructs gcc use fno omit frame pointer option compiling reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8617,,
1997,7dcd31883299b3ee3801dd701f7a986a0af9b2f9,om Caputi <tcaputi@datto.com>, 2019-04-14 14:03:06 -0400,8619, cleanup nit ab7615d92 patch simply clean nit corrects error message issue introduced multiple dva scrub patch reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8619,,
1998,b92f5d9f8254f726298a6ab962719fc2b68350b1,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-12 14:28:04 -0700,8614, fix issue receive_object reallocation receiving object previously allocated interior slot new object allocated setting dmu_new_object reallocated resilience verify slot free required case stream malformed add test case generate realistic incremental send stream force reallocation occur receive reviewed olaf faaland faaland1 llnl.gov reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8067 close 8614,,
1999,3fa93bb8d3f0c757814b96a98ce3334d132894f1,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-12 11:30:59 -0700,8606, fix txg_mask cstyle fix style issue tx_txg txg_mask white space around character split assert make readable clearly separate check reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8606,,
2000,9e3485abfcff126654c98aa64512505e603215d0,ohn Wren Kennedy <jwk404@gmail.com>, 2019-04-12 11:07:20 -0600,8579, zts make fault cleanup function robust cleanup function doe account possibility test may fail disk still removed test run using real disk cleanup involve restoring missing reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed john kennedy john.kennedy delphix.com close 8579,,
2001,b31cf30a155d10e6f4a6dc4941e5b4720c4f2daf,lek P <alek-p@users.noreply.github.com>, 2019-04-11 10:20:37 -0700,8575, allow zfs test recover hibernation system sleep zfs test time spent hibernating counted test runtime even though test running patch try detect timeouts due hibernation rerun test timed due system sleeping version patch existing behavior returning non zero test killed preserved patch applied still return nonzero also automatically rerun test suspect killed due system hibernation reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed alek pinchuk apinchuk datto.com close 8575,,
2002,48ed0f9da0389f3ad44e494b00055c8563f961a1,orgen Lundman <lundman@lundman.net>, 2019-04-11 07:39:40 +0900,8605, always call rw_init error path would call call rw_destroy key zk_salt_lock yet initialized move rw_init call start instead reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 8604 close 8605,,
2003,8cb34421e0bf1fea316d16014483d61381a41f57,im Chase <tim@chase2k.com>, 2019-04-10 17:38:21 -0500,8601, avoid stack overwrite zfs_setattr_dir bulk array index count must reset per iteration order overwrite stack reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au reviewed tom caputi tcaputi datto.com signed tim chase tim chase2k.com close 8072 close 8597 close 8601,,
2004,5ae4e4481eede259a64260ab1b09f86ff46c8f8d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-10 12:49:03 +0900,8558, assume pthread_t uint_t portability posix define pthread_t uint_t could pointer code cause compile error platform using pointer pthread_t  kernel.c 815 error cast pointer integer different size werror pointer int cast void printf uint_t pthread_self reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org signed tomohiro kusumi kusumi.tomohiro gmail.com close 8558,,
2005,9a65234c8bbfe4e394d32172439ae0266ac59c8d,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-04-09 06:59:24 +0900,8599, unbreak build linux kernel 3.10 d12614521a fix procfs file backed linked list pde_data since pde_data public interface replaced old public interface pde first appeared upstream kernel 3.10 lack visible local definition kernel 3.10 move local pde_data definition zol header unbreak build kernel 3.10  module spl spl procfs list.c function module spl spl procfs list.c 166 error implicit declaration function pde_data module spl spl procfs list.c 166 warning assignment make pointer integer without cast reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed tomohiro kusumi kusumi.tomohiro gmail.com close 8599,,
2006,c375c69ecad41f68610ad1186355822e28744476,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-08 09:14:45 -0700,8594, fix zfs list snapshot depth commit df583073 introduced ability list snapshot specified dataset change inadvertently resulted top level snapshot listed dataset specified fix issue adding additional check determine dataset provided avoid incorrectly restricting depth reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com reviewed alek pinchuk apinchuk datto.com signed brian behlendorf behlendorf1 llnl.gov close 8591 close 8594,,
2007,ac4985e48dfcf030418df0f0ce9bf153ba12ba03,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-08 09:10:59 -0700,8596, fix buffer length strlcpy length used strlcpy used size zv_value used size zc_name correct typo reviewed george melikov mail gmelikov.ru reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 8595 close 8596,,
2008,d93d4b1acdf53a25ad21e20ddfca3b0d58a06cdf,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-05 17:32:56 -0700,8584, revert fix issue truncated file raw sends partially reverts commit 5dbf8b4ed change resolved issue observed truncated file raw sends however required change dnode_allocate introduced regression non raw stream need understood additional debugging improvement original patch reverted reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov issue 7378 issue 8528 issue 8540 issue 8565 close 8584,,
2009,944a37248a0db8a3f8c5aee3864d9857a3486672,atthew Ahrens <mahrens@delphix.com>, 2019-04-05 10:12:02 -0700,8577, predictive prefetch disabled new pool export reboot pool initially created zpool create predictive prefetch inadvertently disabled pool export import machine rebooted device removal introduced added code disable predictive prefetching indirect vdevs loaded resulted default state prefetch disabled proactively enable indirect vdevs loaded unfortunately resulted bug code path neglect enable predictive prefetch first fixed http github.com zfsonlinux zfs commit commit fix another case also need explicitly enable predictive prefetch pool initially created reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 8577,,
2010,b4ddec7af6cc52afc54797b4bd3a5f7b29eab52e,on Brady <don.brady@delphix.com>, 2019-04-04 20:00:55 -0600,8566, features.kernel layout match features.pool features.kernel layout match features.pool reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 8566,,
2011,a887d653b32aaba3fe04c7b25ff0091b9ea9c64e,ara Hartse <sara.hartse@gmail.com>, 2019-04-04 18:57:06 -0700,8476, restrict kstats print real pointer several place use zfs_dbgmsg print pointer linux kernel value obfuscated prevent information leak mean pointer useful debugging crash dump decided restrict permission dbgmsg kstats print pointer zfs_dbgmsg well spl_dumpstack reviewed brian behlendorf behlendorf1 llnl.gov reviewed john gallagher john.gallagher delphix.com signed sara hartse sara.hartse delphix.com close 8467 close 8476,,
2012,af6507930051e9ee481cad1130df84636c4a770c,osh Soref <jsoref@users.noreply.github.com>, 2019-04-04 13:00:16 -0400,8483, hint zpool free zfs available also describe free allocated fragmentation reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed josh soref jsoref close 7565 close 8483,,
2013,f4e35b165c1a3dff5c635fe89e7a52277731ca56,rian Behlendorf <behlendorf1@llnl.gov>, 2019-04-04 09:44:46 -0700,8558, fix txg_wait_open load average inflation caller txg_wait_open set should_quiesce b_true accounted iowait time otherwise caller understood idle cv_wait_sig used prevent incorrectly inflating system load average similarly txg_wait_wait updated use cv_wait_io accounted iowait reviewed tim chase tim chase2k.com reviewed olaf faaland faaland1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 8550 close 8558,,
2014,ce4432c5424eb9aa4d00833ee7529cf24491bdde,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-04-03 02:14:39 +0200,8510, move dracut specific dracut module dracut depends environment variable bootfs set pool import dracut specific systemd execstartpost command called non dracut system let move static systemd unit reviewed manuel amador rudd rudd rudd o.com reviewed matthew thode prometheanfire gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed michael niewã hner mniewoehner.de close 8510,,
2015,f72ecb8d2779ef8b3e8892280c8c8756a419e461,osh Soref <jsoref@users.noreply.github.com>, 2019-04-02 14:05:09 -0400,8559, fix man warning macos man app strenuously object blank line man file mdoc warning empty input line xyz reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com reviewed george melikov mail gmelikov.ru signed josh soref jsoref close 8559,,
2016,bd15ac764fb8fe1995d3b2f6c8ddb643447d92aa,erraTech <TerraTech@users.noreply.github.com>, 2019-04-01 12:25:17 -0700,8543, append snapshot name time sent snapshot output simply appends zhp zfs_name time sent snapshot output reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed richard elling richard.elling signed terratech terratech close 8543,,
2017,df583073eb49e602d07ff4ec7d769732b9b9f077,om Caputi <tcaputi@datto.com>, 2019-04-01 14:58:59 -0400,8539, iterate filesystems unnecessarily currently attempting list snapshot zfs may lot extra work checking child datasets code doe realize able reach snapshot contained within snapshot depth limit since snapshot datasets counted additional layer deeper patch corrects issue addition patch add ability perform command zfs list snapshot dataset zfs get snapshot prop dataset convenient way list property snapshot given dataset without use depth limit reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed matt ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed tom caputi tcaputi datto.com close 8539,,
2018,e03b25a56443c79a53327806fa4cc5a2b6acd70c,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2019-03-17 22:47:15 +0100,8510, fix systemd import service debian systemd complains missing bin awk actually located usr bin awk good idea hardcode binary path different linux distros use different path according systemd man page absolutely safe miss path binary located standard location bin sbin usr bin ... replace complicated awk command grep reviewed brian behlendorf behlendorf1 llnl.gov signed michael niewã hner mniewoehner.de issue 8510,,
2019,3b2618927c666aaa7458bfe3a9cdd15d8e537864,ichael NiewÃ¶hner <foss@mniewoehner.de>, 2019-03-17 22:44:57 +0100,8510, remove hard dependency bash zfs import service hard dependency bash everyone bash installed point bin sufficient use reviewed brian behlendorf behlendorf1 llnl.gov signed michael niewã hner mniewoehner.de issue 8510,,
2020,dd29864b01e899cd6af9feebe6f604e43ff1333a,om Caputi <tcaputi@datto.com>, 2019-03-29 18:05:55 -0400,8544, update raw send documentation patch simply clarifies limitation related raw sends man page functional change reviewed brian behlendorf behlendorf1 llnl.gov reviewed jason cohen jwittlincohen gmail.com signed tom caputi tcaputi datto.com close 8503 close 8544,,
2021,1b939560be5c51deecf875af9dada9d094633bf7,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-29 09:13:20 -0700,598, add trim support unmap trim support frequently requested feature help prevent performance degrading ssds various san like storage back end issuing unmap trim command sector longer allocated underlying device often efficiently manage trim implementation modeled zpool initialize feature writes pattern unallocated space pool new zpool trim command vdev_xlate code calculate sector unallocated per vdev trim thread model locking basic cli consistent user experience core difference instead writing pattern issue unmap trim command extent zio pipeline updated accommodate adding new zio_type_trim type associated spa taskq new type make straight forward add platform specific trim unmap call vdev_disk.c vdev_file.c new zio_type_trim zios handled largely way zio_type_reads zio_type_writes make possible largely avoid changing pipieline one exception trim zio may exceed 16m block size limit since contain data addition manual zpool trim command background automatic trim added controlled autotrim property relies exact infrastructure manual trim however instead relying extent metaslab ms_allocatable range tree ms_trim tree kept per metaslab autotrim range added back ms_allocatable tree also added ms_free tree ms_free tree periodically consumed autotrim thread systematically walk top level vdev metaslabs since automatic trim skip range considers small value occasionally running full zpool trim may occur freed block small enough time allowed aggregate automatic trim manual zpool trim may run concurrently case automatic trim yield manual trim reviewed jorgen lundman lundman lundman.net reviewed tim chase tim chase2k.com reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos serapheim delphix.com contribution saso kiselkov saso.kiselkov nexenta.com contribution tim chase tim chase2k.com contribution chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8419 close 598,,
2022,f94b3cbf43d62f4962e71cfe7ba8c6f0602e2a45,om Caputi <tcaputi@datto.com>, 2019-03-28 18:48:58 -0400,8533, send stream list included snap currently zfs send stream include list snapshot source side option provided cause performance problem receive side especially snapshot present destination problem arise guid_to_name used several receive side function search entire receive side pool find snapshot matching guid patch corrects issue ensuring stream require list snapshot include reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8533,,
2023,5dbf8b4edd5a60b0d043b09aa168e8be1fb30647,om Caputi <tcaputi@datto.com>, 2019-03-27 14:30:48 -0400,8528, fix issue truncated file raw sends patch fix issue raw receives involving truncated file call dnode_set_blksz instead dnode_setdblksz ensures remaining dbufs blkid resized along containing dnode upon reallocation one call receive_object need check object free content completely removed already previous call function call previous point need ensure object current block size new block size ensures block object supposed freed completely removed simply partially zeroed patch also add handling record dprintf_drr debugging purpose reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7378 close 8528,,
2024,85a150ce1e6d609cec814f9af28ce4f2aef312ab,ichard Elling <Richard.Elling@RichardElling.com>, 2019-03-26 14:18:58 -0700,8532, update valid vdev type get_disklist reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed john kennedy john.kennedy delphix.com signed richard elling richard.elling close 8532,,
2025,db6be852da8762059c40dd2ae6bfb9c19a25e0af,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-26 13:57:40 -0700,8534, zts detect e2fsprogs verity issue test case use lsattr command detect project quota bit set correctly due bug e2fsprogs 1.44.4 setting project bit also result verity bit reported set result test case failing issue resolved e2fsprogs order avoid testing failure two test case skipped e2fsprogs 1.44.4 installed http github.com tytso e2fsprogs commit 7e5a95e3d reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 8534,,
2026,74580a9411a9f53fa72ed33eb37b284c277e3a15,van Allrich <eallrich@gmail.com>, 2019-03-26 14:27:29 -0500,8535, correct minor grammar issue reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed evan allrich evan unguku.com close 8535,,
2027,fc16b4f4c8f1f9b751d364821fa5a5a059e723a1,ichard Elling <Richard.Elling@RichardElling.com>, 2019-03-25 15:05:26 -0700,8525, git ignore python 3.7 virtual environment directory reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8525,,
2028,c048ddaf332504765696a456ab572d6f041051a2,gor K <igor@dilos.org>, 2019-03-22 23:25:07 +0300,8522, fix vd_path error spa_vdev_remove make local copy vd_path preserve removal error use required spa_vdev_exit nothing preventing vdev state changing reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed igor kozhukhov igor dilos.org close 8522,,
2029,234234ca4de9b2121f69d2cd3b2928197234336d,oman Strashkin <Ramzec@users.noreply.github.com>, 2019-03-22 23:11:36 +0300,7856, panic running zpool split added missing remove detachable vdev txg dtl list avoid use free split vdev reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed roman strashkin roman.strashkin nexenta.com close 5565 close 7856,,
2030,2efea7c82c5741a50b476bb1dcbc9a74b8f73ad1,eorge Wilson <gwilson@zfsmail.com>, 2019-03-22 16:09:11 -0400,8523, zfs read may result unneccesary call zil_commit zfs support o_rsync read operation specified ensure level data integrity o_dsync o_sync provides writes o_rsync effect must combined either o_dsync o_sync however many platform support o_rsync mapped o_sync mean o_rsync within zfs incorrect cause unnecessary call zil_commit platform support o_rsync implement zil_commit functionality read code path reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 8523,,
2031,060f0226e6396a3c7104fedc8d2af7063a27c1f9,laf Faaland <faaland1@llnl.gov>, 2019-03-21 12:47:57 -0700,7842, mmp interval fail_intervals uberblock multihost enabled pool imported uberblock writes include ub_mmp_delay allow importing node calculate duration activity test value enough information node pool imported safe minimum duration activity test well defined doe depend ub_mmp_delay  node well defined safe duration importing host tell whether mmp_delay high due delay due large setting host last imported pool result may use far longer period activity test necessary patch renames ub_mmp_sequence ub_mmp_config record value well mmp sequence allows shorter activity test duration calculated importing host situation value also added kstat record calculates activity test duration differently depending whether new field present importing pool ub_mmp_delay ub_mmp_delay result activity test duration sensitive leaf count addition make improvement update sequence part ub_mmp_config mmp writes syncs occur allows importing host detect mmp remote host sooner pool idle limited granularity ub_timestamp second issue writes immediately changed remote host see updated value soon possible fix bug setting result immediate pool suspension update test verify activity check duration based recorded tunable value tunable value importing host update test verify expected number uberblocks valid mmp field fail_intervals mmp_interval mmp_seq sequence number sequence number incrementing uberblock value match tunable setting reviewed andreas dilger andreas.dilger whamcloud.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed olaf faaland faaland1 llnl.gov close 7842,,
2032,d10b2f1d35b76efc22c006ba9ca172681da301e7,orgen Lundman <lundman@lundman.net>, 2019-03-19 12:34:30 +0900,8517, mutex leak addition releasing hold error case missed additional release call introduced a1d477c24 openzfsonosx commit http github.com openzfsonosx zfs commit 63ff7f1c authored jorgen lundman lundman lundman.net reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported brian behlendorf behlendorf1 llnl.gov close 8517,,
2033,45001b949c14b09230a4cd6d105ab32a4673d286,fzhu <chengfeix.zhu@intel.com>, 2019-03-22 01:35:18 +0800,8521, qat allocate digest_buffer using buffer digest_buffer allocated qat_checksum stack ensure address physically contiguous dma result buffer may handled incorrectly using ensures physically contiguous allocation reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed chengfei zhu chengfeix.zhu intel.com close 8323 close 8521,,
2034,ec4f9b8f30391a3fb46c8d4a31c2dc9250dca1bb,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-21 10:30:15 -0700,8505, report hole metadata change update dirty check dmu_offset_next dnode considered dirty purpose reporting hole pending data block free synced ensures metadata update synced atime hole reported reviewed debabrata banerjee dbanerje akamai.com signed brian behlendorf behlendorf1 llnl.gov close 6958 close 8505,,
2035,066da71e7fe32f569736b53454b034937d0d3813,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-21 10:13:01 -0700,6261, improve zpool labelclear implemented zpool labelclear command overwrites calculated offset four vdev label even single valid label found device purposed still contains valid label result space longer owned zfs zeroed prevent verifying every label removed intact overwritten address small bug prevented labelclear working file vdevs block device support blkflsbuf try ioctl reported unsupported fatal fix zpool labelclear run vdevs removed pool zpool remove additionally allow intact partial label cleared case failed zpool attach zpool replace remove labelclear labelread variable test case reviewed matt ahrens mahrens delphix.com reviewed tim chase tim chase2k.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8500 close 8373 close 6261,,
2036,304d469dcdcb47a6c4e993a62007a8b7c81a212a,ulian Heuking <JulianH@beckhoff.com>, 2018-11-30 11:20:44 +0900,8519, add missing dmu_zfetch_fini dnode_move_impl turn window platform rw_init called rather bedrock call placed active list lock removed rw_destroy time dnode_move logic copy old dnode new dnode including calling dmu_zfetch_init new dnode due missing dmu_zfetch_fini old dnode kmem call dnode_dest release memory debug build fill pattern 0xdeadbeef window active lock prev next list pointer making window sad platform content dmu_zfetch_fini one call list_destroy one rw_destroy effectively call required commit mostly correctness skipped porting note leak exists linux currently never happen dnode_move functionality supported openzfsonosx commit openzfsonosx zfs d95fe517 authored julian heuking julianh beckhoff.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed jorgen lundman lundman lundman.net close 8519,,
2037,73c25a78e6b420ff37d703d2e1911c17cf449caa,om Caputi <tcaputi@datto.com>, 2019-03-19 13:22:39 -0400,8514, add space error message patch simply add missing space error message reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8514,,
2038,ca6c7a94c994b9979824f8fccf1c6ddb00ee5598,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-15 14:17:38 -0700,8144, fix l2arc_evict destroy race destroying arc_buf_hdr_t identity discarded entirely undiscoverable includes unhashed also removed l2arc header list discarding header identify prematurely render hash lock useless always hash bucket zero change resolve race l2arc_evict discarding identity removed l2arc header list ensures either header list contains correct identify reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 7688 close 8144,,
2039,ab7615d92c9bf4bdbbc6a675724b763d16f05280,om Caputi <tcaputi@datto.com>, 2019-03-15 17:14:31 -0400,8453, multiple dva scrubbing fix currently issue sequential scrub code prevents self healing working case scrub code split dva copy issue separately problem since dvas longer associated others self healing code opportunity repair problem show one dvas data others patch fix issue ensuring issued sequential scrub code include dvas initially first dva attempted issue arises retried available copy giving self healing code chance correct issue test change patch also add ability zinject specify individual dvas inject read error add new test case utilizes functionality ensure scrub self healing read handle transparently fix issue individual copy block reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8453,,
2040,2bbec1c910a24bf61c6f41e0762e50face4b8907,ony Hutter <hutter2@llnl.gov>, 2019-03-14 18:21:53 -0700,7817, make zpool status counter match error event count number checksum event match number error seen zpool status previously mismatch two count zpool status would count unrecovered error zpool event would get event error recovered lead situation disk could faulted many error time showing zero error zpool status fix zpool status error counter increment time post error event reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed tony hutter hutter2 llnl.gov close 4851 close 7817,,
2041,04a3b0796c622201e2cde6b7288043f90da1ba33,om Caputi <tcaputi@datto.com>, 2019-03-14 21:14:36 -0400,8490, fix memory leak patch simply fix small memory leak happen error handling function fails free memory reference created reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed tom caputi tcaputi datto.com close 8490,,
2042,c742bf1e68be582fb2db029e38768f8450d2609d,enrik Riomar <henrik.riomar@gmail.com>, 2019-03-15 02:12:17 +0100,8502, zfs import swap zfs import must done swap order swap zvol work reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed henrik riomar henrik.riomar gmail.com close 8502,,
2043,eaed840542b49b36fb8ed3a2aaf7208629974434,om Caputi <tcaputi@datto.com>, 2019-03-14 19:48:30 -0400,8504, better user experience erratum patch attempt address user concern arisen since erratum introduced erratum warning made scary user without encrypted datasets erratum warning clear without pool reimport bookmark_v2 feature enabled encrypted datasets exist longer possible create new encrypted datasets without enabling bookmark_v2 feature thus helping ensure erratum resolved reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 8308 close 8504,,
2044,98310e5d1aebda5a7cd986c8a0dc9932d62ead56,pande <github@tripleback.net>, 2019-03-14 09:53:34 -0700,8498, update commented zed.rc value default update zed.rc value reflect default value help avoid confusion user expects functionality enabled reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed kash pande kash tripleback.net close 8498,,
2045,508c5527d0b6d53347b5643456444ea377b84c7a,gor K <igor@dilos.org>, 2019-03-14 04:39:12 +0300,8501, use printf instead echo compatibility ksh echo behavior illumos linux differs compatibility others platform switch printf reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allanjude freebsd.org reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com signed igor kozhukhov igor dilos.org close 8501,,
2046,1af240f3b51c080376bb6ae1efc13d62b087b65d,lexander Motin <mav@FreeBSD.org>, 2019-03-13 15:00:10 -0400,8494, add separate aggregation limit non rotating medium sequential scrub patch zfs never aggregated 128kb sequential scrub bumped 1mb supposedly reduce number head seek spinning disk ssds make little sense especially freebsd due maxphys limitation device likely still see bunch 128kb instead one large strict aggregation limit ssds allows avoid allocation large memory buffer copy serious problem throughput reach gigabyte per second reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed alexander motin mav freebsd.org close 8494,,
2047,12a935ee9c2e2aa92309e7afb9d73e0757f61cd7,pande <github@tripleback.net>, 2019-03-13 11:57:57 -0700,8466, update contributing point user irc well mailing list reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed kash pande kash tripleback.net close 8466,,
2048,5cc9ba5cf070f726fcc9dda311372d5dd6aef1da,om Caputi <tcaputi@datto.com>, 2019-03-13 14:19:23 -0400,8493, make zstreamdump greppable currently verbose output zstreamdump includes new line character within individual record presumably originally done keep output getting wide fit terminal however since new flag struct member added rule maintained consistently addition newlines make hard grep output scenario patch simply remove newlines making output easier grep removing inconsistency reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed allan jude allanjude freebsd.org signed tom caputi tcaputi datto.com close 8493,,
2049,181424237903cd139df8e63fa6f09ebf2e8cd750,ndrew Stormont <astormont@racktopsystems.com>, 2018-10-25 17:16:39 +0100,8496, openzfs 9914 broken 9580 authored andrew stormont astormont reviewed yuri pankov yuripv yuripv.net reviewed garrett amore garrett damore.org reviewed andy fiddaman omnios citrus it.co.uk reviewed serapheim dimitropoulos serapheim delphix.com reviewed igor kozhukhov igor dilos.org approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9914 openzfs commit http github.com illumos illumos gate commit b8a5bee18 close 8496,,
2050,f00ab3f22cc2c7f62cfd56be842945667b1d558f,om Caputi <tcaputi@datto.com>, 2019-02-04 14:24:55 -0500,8308, detect prevent mixed raw non raw sends currently issue raw receive code raw receives allowed happen top previously non raw received datasets problem source side dataset know block destination encrypted result mac objset checksum mac tree parent block encrypted source block encrypted destination incorrect result authentication error decrypt dataset patch fix issue adding new check raw receive code code maintains ivset guid act identifier set used encrypt given snapshot snapshot raw received destination snapshot take value drr_begin payload non raw receives normal zfs snap operation cause zfs generate new ivset guid raw incremental stream received zfs check ivset guid stream match destination snapshot match code error receive preventing problem patch requires disk format change add ivset guids snapshot bookmark result patch erratum handling tunable help affected user resolve issue little interruption possible reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8308,,
2051,579ce7c5ae65e670496d41957f63352cb3f0d298,om Caputi <tcaputi@datto.com>, 2019-02-04 14:15:01 -0500,8308, add bookmark disk feature patch add bookmark feature disk format feature needed upcoming redacted sends upcoming fix raw receives feature currently used code thus change aside fact user enable feature reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tom caputi tcaputi datto.com issue 8308,,
2052,369aa501d11f4d21d4732b58d749259ad811a10a,om Caputi <tcaputi@datto.com>, 2019-03-13 13:52:01 -0400,8487, fix handling maxblkid raw sends currently receive code create unreadable dataset correct raw send stream currently impossible set maxblkid lower value without freeing associated object mean truncating file send side non size could result corruption patch solves issue adding new force flag dnode_new_blkid allow raw receive code force dmu accept provided maxblkid even lower value existing one testing purpose test extended include variety truncated file multiple snapshot also leverage xattrtest command help ensure raw receives correctly handle xattrs reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8168 close 8487,,
2053,146bdc414c7ad5b93417569bff6737d57860ff14,wittlincohen <jwittlincohen@gmail.com>, 2019-03-13 13:43:55 -0400,8499, fix typo arc_summary3 simple fix typo perfetch rather prefetch arc_summary3 reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed george melikov mail gmelikov.ru signed jason cohen jwittlincohen gmail.com close 8499,,
2054,db2af93d727dad0c48a919bdacf4e605120201e6,laf Faaland <faaland1@llnl.gov>, 2019-03-13 09:50:48 -0700,8495, increase default default multihost enabled pool pool suspended pas without successful mmp write recommended configuration default value default value 1000 pool suspension occurred second multiple case single misbehaving device pool triggered scsi reset paused second turn caused mmp suspend pool case observed rest device healthy pool otherwise correctly performing reset handled correctly zfs suspending pool mmp made replacing device difficult well forcing host rebooted increase default value mmp tolerates second failed mmp writes suspending pool increase default value maintain safety factor result force import taking approximately second mmp enabled default value reviewed brian behlendorf behlendorf1 llnl.gov reviewed andreas dilger andreas.dilger whamcloud.com reviewed george melikov mail gmelikov.ru signed olaf faaland faaland1 llnl.gov close 7709 close 8495,,
2055,cffa8372f42be4b37931d3cd24b01e837aa123b6,ustin Gottula <justin@jgottula.com>, 2019-03-12 15:03:59 -0700,8463, fix zfs_arc_ mod params actually modifiable runtime zfs_arc_ module parameter value used arc code directly instead function called module initialization periodically thereafter whose job fetch module parameter value clamp limit appropriately assign value separate set internal variable actually referenced arc code commit 3ec34e55 featured overhaul former location post init time call would occur rework split work previously done pair replacement thread unfortunately call fell crack lost reorganization meant changing almost arc related zfs module parameter via sys module zfs parameter would result module parameter value appearing change however modification would actually propagate arc code real effect commit reinstates post init time call called equivalent former call location reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed justin gottula justin jgottula.com close 8405 close 8463,,
2056,4c0883fb4af0d5565459099b98fcf90ecbfa1ca1,lek P <alek-p@users.noreply.github.com>, 2019-03-12 13:13:22 -0700,8077, avoid retrieving unused snapshot prop patch modifies ioctl enable take input parameter alter way looping list snapshot performed idea restrict function throw away snapshot returned ioctl range snapshot function actually use improves efficiency execution speed rollback send operation reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed alek pinchuk apinchuk datto.com close 8077,,
2057,dd785b5b86bbb7ebbfe1d22668f3dd27c5704994,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-12 10:39:47 -0700,8477, fix removal race resolve vdev_initialize crash uncovered ztest similar starting new initialization verify removal progress additionally restart thread already exists check congruent handling reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8477,,
2058,3d31aad83e6420d7a2f661ca077afdac13f50b77,laf Faaland <faaland1@llnl.gov>, 2019-03-12 10:37:06 -0700,7953, mmp writes rotate leaf instead choosing leaf vdev quasi randomly starting root vdev randomly choosing child rotate leaf issue mmp writes fix issue pool whose top level vdevs different number leaf issue frequency individual leaf chosen mmp writes based total number leaf based many sibling leaf example pool like root vdev  vdev1 vdev2   disk1 disk2 disk3 disk4 disk5 disk6 vdev1 vdev2 chosen time every time vdev1 chosen disk1 chosen however every time vdev2 chosen disk2 chosen time result disk1 sent many mmp writes disk2 may create wear issue case ssds also reduces effectiveness mmp depends writes evenly distributed case device fail partitioned new code maintains list leaf vdevs pool mmp record last leaf used mmp write mmp mmp_last_leaf choose next leaf mmp start mmp mmp_last_leaf traverse list continuing head tail reached stop suitable leaf found leaf examined added test verify mmp write distribution even reviewed tom caputi tcaputi datto.com reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed olaf faaland faaland1 llnl.gov close 7953,,
2059,b1b94e9644ee6af27ce71d127618b7d5323561c6,eorge Wilson <gwilson@zfsmail.com>, 2019-03-11 12:13:37 -0400,8486, zfs doe honor nfs sync write semantics linux kernel nfsd implementation use rwf_sync determine write synchronous flag used set kernel control block flag unfortunately zfs updated inspect flag nfs sync writes honored change map iocb_ flag zfs equivalent reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 8474 close 8452 close 8486,,
2060,1118f9944924678095aa43636dce742a03c5fde3,zhivich <33133421+mzhivich@users.noreply.github.com>, 2019-03-11 12:11:04 -0400,8413, fix lockdep ds_lock dd_lock booting debug kernel found inconsistent lock dependency dataset ds_lock directory dd_lock 32.215336 32.221859 warning possible circular locking dependency detected 32.221861 4.14.90 tainted 32.221862 32.221863 dynamic_kernel_ 4667 trying acquire lock 32.221864 ds_lock 0x9e 0x8a0 zfs 32.221941 task already holding lock 32.221941 dd_lock 0x3b9 0x1290 zfs 32.221983 lock already depends new lock 32.221983 existing dependency chain reverse order 32.221984 dd_lock 32.221992 __mutex_lock 0xef 0x14c0 32.222049 dsl_dir_namelen 0xd4 0x2d0 zfs 32.222093 0x2f1 0x430 zfs 32.222142 0xd 0x40 zfs 32.222184 0x5f5 0xef0 zfs 32.222226 0x40 0x60 zfs 32.222235 taskq_thread 0x969 0x1460 spl 32.222238 kthread 0x2fb 0x400 32.222241 ret_from_fork 0x3a 0x50 32.222241 ds_lock 32.222246 lock_acquire 0x14f 0x390 32.222248 __mutex_lock 0xef 0x14c0 32.222291 0x9e 0x8a0 zfs 32.222355 0x5d2 0x1290 zfs 32.222392 dmu_tx_assign 0xa61 0xdb0 zfs 32.222436 zfs_create 0x4e6 0x11d0 zfs 32.222481 zpl_create 0x194 0x340 zfs 32.222484 lookup_open 0xa86 0x16f0 32.222486 path_openat 0xe56 0x2490 32.222488 do_filp_open 0x17f 0x260 32.222490 do_sys_open 0x195 0x310 32.222491 sys_open 0xbf 0xf0 32.222494 do_syscall_64 0x191 0x4f0 32.222496 0x42 0xb7 32.222497 info might help debug 32.222497 possible unsafe locking scenario 32.222498 cpu0 cpu1 32.222498 32.222499 lock dd_lock 32.222500 lock ds_lock 32.222502 lock dd_lock 32.222503 lock ds_lock 32.222504 deadlock 32.222505 lock held dynamic_kernel_ 4667 32.222506 sb_writers mnt_want_write 0x3c 0xa0 32.222511 type i_mutex_dir_key path_openat 0xe2e 0x2490 32.222515 dd_lock 0x3b9 0x1290 zfs issue caused holding ds_lock followed acquiring dd_lock ds_dir dsl_dir_namelen however ds_dir protected ds_lock releasing call dsl_dir_namelen prevents lockdep issue reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed chris dunlop chris onthe.net.au signed michael zhivich mzhivich akamai.com close 8413,,
2061,bf90948daf9f5057d76a68900e42c87f02ce65fa,orenz Brun <lorenz@dolansoft.org>, 2019-03-09 22:39:31 +0100,8484, reorder zfs ioctls fix cross version compatibility reorder zfs ioctls fix cross version compatibility reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed matt ahrens mahrens delphix.com signed lorenz brun lorenz dolansoft.org close 8484,,
2062,b46fd243d57d0af4b4b568d8c0c4b30b79059ecc,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-07 14:44:23 -0800,8479, linux 5.1 compat get_ds removed commit torvalds linux 736706bee removed get_fs function bit cleanup defined kernel_ds architecture supported kernel replace get_fs kernel_ds done kernel reviewed tom caputi tcaputi datto.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8479,,
2063,becdcec7b9cd6b8beaa2273495b97c06de24e9e5,ony Hutter <hutter2@llnl.gov>, 2019-03-06 16:03:03 -0800,8363, kernel_fpu fix patch fix issue detecting kernel_fpu function available use exported newer kernel use choose right kernel_fpu function using enable linux builtin reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8259 close 8363,,
2064,a73e8fdb93d24b885f0c38202a34da51013d674a,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-03-06 12:50:55 -0500,7908, stack overflow recursive function overflow stack bpobjs deeply nested rewrite function eliminate recursion reviewed serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 7674 close 7675 close 7908,,
2065,96ebc5a1a4cc57806882e4e9b38c49ba8a5bdfda,rian Behlendorf <behlendorf1@llnl.gov>, 2019-03-06 09:17:53 -0800,8461, fix race allowing new allocation metaslab need ensure issued initializing writes synced otherwise possible allocate range overwritten initializing serapheim dimitropoulos serapheim delphix.com reviewed richard elling richard.elling reviewed tim chase tim chase2k.com reviewed george wilson george.wilson delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8461,,
2066,762f9ef3d9d897b5baf7c91d6e8a7bf371a9b02f,afael Kitover <rkitover@gmail.com>, 2019-03-02 16:19:05 -0800,8313, config better libtirpc detection improve autoconf code finding libtirpc assume header usr include tirpc also remove assumption rpc xdr.h header libspl use include_next mechanism used libspl header include pkg.m4 pkg config config file license allows include autoconf archive file license compatible use 2012 version rely recent autoconf feature as_var_copy break build slave add new macro library config defines macro convenience wrapper using fallback standard library location sanity check parameter  variable prefix module header header prefix library function action found action found  header prefix function comma separated list libtirpc using  libtirpc libtirpc rpc xdr.h tirpc tirpc xdrmem_create ...  header first checked without prefix system work pkg config fall back checking standard header library location easily overridden user setting prefix_cflags prefix_libs variable automatically added configure help output reviewed brian behlendorf behlendorf1 llnl.gov signed rafael kitover rkitover gmail.com close 7422 close 8313,,
2067,0409679d88a8ccd06397ceae1b6d08935198c756,atthew Ahrens <mahrens@delphix.com>, 2019-02-28 17:57:47 -0800,8459, fix style fix indentation code ifdef remove obsolete comment make else statement readable adding brace reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed matthew ahrens mahrens delphix.com close 8459,,
2068,8133679ff00b1a1434460111f1fa71d169575701,laf Faaland <faaland1@llnl.gov>, 2019-02-28 17:56:19 -0800,8460, resume pool multihost enabled multihost enabled pool suspended return einval response zpool clear pool pool may imported another host suspended reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6933 close 8460,,
2069,4f3218aed8be7e3a6f619b363ccdb6c4bf1bc680,laf Faaland <faaland1@llnl.gov>, 2019-02-28 17:54:36 -0800,8457, warn user accidentally sharing device improve man page text warn user risk adding device multiple pool via simultaneous zpool create zpool add zpool replace etc state mmp multihost doe protect scenario reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov signed olaf faaland faaland1 llnl.gov close 6473 close 8457,,
2070,87c25d567fb7969b44c7d8af63990e704fc49dd3,atthew Ahrens <mahrens@delphix.com>, 2019-02-28 17:52:55 -0800,8455, abd_alloc use scatter allocation abd_alloc normally doe scatter allocation thus solving problem abd originally set bulk zfs allocation single page faster allocate free suffer internal fragmentation inability reclaim memory buffer slab still allocated however current code doe linear allocation 4kb smaller allocation defeating purpose abd scatter abd use least one page sub page allocation waste space allocated scatter e.g 2kb scatter allocation waste half page using linear abd small allocation mean put slab contain many allocation improve memory efficiency also make much harder arc eviction actually free page buffer one slab need freed order slab underlying page freed typically 512b 1kb kmem cache buffer per slab possible actually waste memory scatter one page per buf wasting 8th one buf per slab wasting 16th spill block typically 512b heavily used system running selinux default dnode size xattr property set default use linear allocation 512b 1kb scatter allocation larger 1.5kb reviewed george melikov mail gmelikov.ru reviewed dhe git dehacked.net reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed matthew ahrens mahrens delphix.com close 8455,,
2071,3a1f2d533d471f38a01d33d6ade63e8b5a6377ad,eren12 <github@mid-earth.net>, 2019-02-28 15:07:03 -0500,8447, remove zfs zed hard dep zfs share init script reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed chris zubrzycki github mid earth.net close 8447,,
2072,46164122c0f365f14073266a695334f9de2073cf,ichael NiewÃ¶hner <c0d3z3r0@users.noreply.github.com>, 2019-02-28 21:05:55 +0100,8448, initramfs debian use panic instead directly calling bin debian panic function make possible disable shell access initramfs setting panic kernel parameter use reviewed brian behlendorf behlendorf1 llnl.gov reviewed kash pande kash tripleback.net signed michael niewã hner mniewoehner.de close 8448,,
2073,d6838ae649d7a369b5064f7ab1c016b39c26af68,llan Jude <github@shellfusion.ca>, 2019-02-27 20:55:25 -0500,8430, zstreamdump include embedded writes dumping raw data feeding replication stream zstreamdump raw dump mode doe print raw data record reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed allan jude allanjude freebsd.org close 8430,,
2074,6af7ba417eb429413f9f24cd2704a302d766d9b4,rian Behlendorf <behlendorf1@llnl.gov>, 2019-02-27 10:49:22 -0800,8445, fix overly broad spa config lock  mistakenly taking scl_all scl_config required access vdev stats could result deadlock observed running ztest reviewed olaf faaland faaland1 llnl.gov reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 8445,,
2075,c568ab8d99d88b69f54159cd771cb9b20784174e,atthew Ahrens <mahrens@delphix.com>, 2019-02-26 11:15:28 -0800,8410, zfs.8 wrong description zfs program argument zfs program specifies limit number lua instruction executed zfs.8 manpage wrong description updated match zfs program.8 also fix formatting zfs help message reviewed allan jude allanjude freebsd.org reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 8410,,
2076,47d7ef5490f06bf36bbf9667f266bfd6907ca596,pande <github@tripleback.net>, 2019-02-26 11:13:15 -0800,8440, sort full path name instead guid importing preferentially sort full path name instead guid determining device link use help ensure pool vdevs named consistently multiple link device appear directory example dev disk scsi dev disk wwn link reviewed alek pinchuk apinchuk datto.com reviewed richard elling richard.elling authored brian behlendorf behlendorf1 llnl.gov signed kash pande kash tripleback.net close 8108 close 8440,,
2077,e065034563c8ea34d647c83c22717d72315ca580,amian WojsÅaw <damian@wojslaw.pl>, 2019-02-25 20:20:07 +0100,8352, improve error message zfs create name reorder zfs create error message order return specific one first none apply expanded version invalid name message used reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed damian wojså damian wojslaw.pl close 8155 close 8352,,
2078,ba7b05cb257eeabbba503db89cd2ed58eaeabad6,eHackEd <DeHackEd@users.noreply.github.com>, 2019-02-25 14:10:16 -0500,8423, zfs improve document compression behaviour reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed allan jude allanjude freebsd.org reviewed bunder2015 omfgbunder gmail.com signed dhe git dehacked.net close 4660 close 8423,,
2079,8eef997679ba54547f7d361553d21b3291f41ae7,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-02-25 11:08:52 -0800,8444, error path forgets drop ms_sync_lock reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru signed serapheim dimitropoulos serapheim delphix.com close 8444,,
2080,c44a3ec0596d574f2eb7f57ff97720cd63c4a61e,oli10K <loli10K@users.noreply.github.com>, 2019-02-23 00:38:42 +0100,8371, zvol allow rename use zvol dataset zfs allow renaming use zvols dsl level without issue zvol layer doe correctly update renamed dataset device node open zv_open_count trying access stale dataset name instance zfs receive cause following failure verify3 zv_objset os_dsl_dataset ds_owner failed null panic zvol.c 1255 zvol_resume showing stack process 1390 cpu pid 1390 comm zfs tainted 3.16.0 amd64 debian 3.16.51 hardware name bochs bochs bios bochs 2011    call trace dump_stack 0x5d 0x78 spl_panic 0xc9 0x110 spl mutex_lock 0xe 0x2a 0x1ad 0x250 zfs rrw_exit 0xc8 0x2e0 zfs mutex_lock 0xe 0x2a 0x9a 0x250 zfs 0x71 0xc0 zfs zvol_resume 0x178 0x280 zfs 0x88b 0xf80 zfs 0x1ad 0x250 zfs zfs_ioc_recv 0x1c2 0x2a0 zfs 0x13 0x20 zfs 0x166 0xb50 zfsdev_ioctl 0x896 0x9c0 zfs handle_mm_fault 0x464 0x1140 do_vfs_ioctl 0x2cf 0x4b0 __do_page_fault 0x177 0x410 sys_ioctl 0x81 0xa0 0x28 0x30 0x10 0x15 reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6263 close 8371,,
2081,0c637f3100f0b6a76594f1ec42bfdc24b6455765,oli10K <loli10K@users.noreply.github.com>, 2019-02-23 00:36:34 +0100,8391, zpool report 16e expandsize disk oddball number sector issue caused small discrepancy userland creates partition layout kernel estimate available space zpool command subtract usable device size align boundary sum start partition alignment efi reserved partition kernel module subtract 10m device size 10m sum start partition alignment end partition alignment efi reserved partition device number sector multiple alignment size zpool command create partition layout reserve efi reserved partition disk dev sda 1024 mib 1073739776 byte 2097148 sector unit sector 512 512 byte sector size logical physical 512 byte 512 byte size minimum optimal 512 byte 512 byte disklabel type gpt disk identifier 49811d40 16f4 4e41 84a9 387703950d7f device start end sector size type dev sda1 2048 2078719 2076672 1014m solaris usr apple zfs dev sda9 2078720 2095103 16384 solaris reserved kernel module vdev_open device max_asize end slightly smaller asize result huge number 16e reported change prevents returing size smaller bdev_capacity reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson george.wilson delphix.com reviewed sara hartse sara.hartse delphix.com signed loli10k ezomori.nozomu gmail.com close 1468 close 8391,,
2082,8d9e51c084805237a36420e6cdcd8e2e9801a7cf,idongyang <gnaygnodil@gmail.com>, 2019-02-23 04:48:37 +1100,8433, fix dnode_hold_impl soft lockup soft lockup could happen multiple thread trying get zrl dnode handle order allocate initialize dnode marked loop beginning get zrl otherwise would increase zrl refcount nobody actually lock reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed dongyang dongyangli ddn.com close 8433,,
2083,f8bb2a7e0c889d6c5cf7655d698869b3a32c2bb0,pande <github@tripleback.net>, 2019-02-21 14:00:48 -0800,8417, clarify zpool iostat statistic reporting document expected behavior zpool iostat statistic reporting reviewed matt ahrens mahrens delphix.com reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed allan jude allanjude freebsd.org signed kash pande kash tripleback.net close 2888 close 8417,,
2084,f23b0242b68723d7ca998cd6cfa5ff9e8c98c985,natoly Borodin <anatoly.borodin@gmail.com>, 2019-02-21 20:22:06 +0100,8438, fix description zpool  display time stamp specify printed representation internal representation time see time specify standard date format see date specify specify used instead zpool list doe work bring description zpool list zpool status sync zpool iostat reviewed allan jude allanjude freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov signed anatoly borodin anatoly.borodin gmail.com close 8438,,
2085,9abbee491285303d78704e937a13ddcbb6cd0f79,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-02-21 03:14:36 +0900,8401, enter zvol rangelock read bio size scst driver scsi target driver implementation possibly others may issue read bio length zero byte although unusual bio issued certain condition cause kernel oops due rangelock implemented made handle overlap two range read bio offset one size even though conceptually overlap allowing enter rangelock result kernel oops dereferencing invalid pointer assertion failure avl tree manipulation debug enabled kernel module example happens read bio whose offset size enters rangelock followed another read bio 4096 rangelock still locked pending write bio also happen reverse order followed still locked detail mentioned 8379 kernel oops make_request_fn zfs volume http github.com zfsonlinux zfs issue 8379 prevent returning bio size success without entering rangelock done write bio checking flusher bio case though reason read bio reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8379 close 8401,,
2086,1e427f2e2b8da17bdddada3926648692bc1ffae0,pande <github@tripleback.net>, 2019-02-20 10:04:05 -0800,8428, add diffutils dependency dkm build cmp diff utility required configure time add dependency diffutils ensure installed reviewed brian behlendorf behlendorf1 llnl.gov signed kash pande kash tripleback.net close 5205 close 8428,,
2087,928e8ad47d3478a3d5d01f0dd6ae74a9371af65e,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-02-20 09:59:57 -0800,8358, introduce auxiliary metaslab histogram patch introduces new histogram per metaslab histogram track segment made metaslab space map histogram part spacemap yet reached ms_allocatable tree loaded metaslab metaslab currently syncing gone yet histogram help decide whether load unloaded metaslab order allocate calculating weight unloaded metaslab traditionally look highest bucket spacemap histogram problem guaranteed able allocated segment load metaslab may still freeing freed defer tree new histogram used try calculate unloaded metaslab weight deal issue removing segment would allocatable tree runtime note method dealing completely accurate adjacent segment always consolidated space map histogram metaslab addition make thing deterministic always reset weight unloaded metaslabs based space map weight instead need basis thus every time metaslab loaded weight reset weight based space map one based allocatable range tree expect assert change weight get better stay  reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 8358,,
2088,bb1be77a35d3cf5389a36f1d13935811962278c3,oli10K <loli10K@users.noreply.github.com>, 2019-02-20 03:41:18 +0100,8424, prevent user accounting readonly pool trying mount dataset readonly pool could inadvertently start user accounting upgrade task leading following failure verify3 tx_threads failed panic txg.c 680 txg_wait_synced showing stack process 2541 cpu pid 2541 comm z_upgrade tainted 3.16.0 amd64 debian 3.16.51 hardware name bochs bochs bios bochs 2011 call trace dump_stack 0x5d 0x78 spl_panic 0xc9 0x110 spl 0x1d4 0x2c0 zfs dmu_object_next 0x77 0x130 zfs 0x4d 0x120 zfs txg_wait_synced 0x91 0x220 zfs 0x10f 0x140 zfs 0xe3 0x170 zfs taskq_thread 0x2cc 0x5d0 spl wake_up_state 0x10 0x10 0x70 0x70 spl kthread 0xbd 0xe0 0x180 0x180 ret_from_fork 0x58 0x90 0x180 0x180 patch update function responsible checking perform user accounting verify pool readonly reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8424,,
2089,75d6b7ddca269542279975f716a343bb40a79baf,ed Bass <bass6@llnl.gov>, 2019-02-19 18:39:10 -0800,8435, add missing copyright notice large_dnode test missing copyright notice noticed illumos rti process add llns 2016 copyright based original merge date reviewed giuseppe natale guss80 gmail.com reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 8435,,
2090,790c880e8c175424144f8d21c2355f8be1654be4,gor K <igor@dilos.org>, 2019-02-19 22:15:22 +0300,8402, fix zdb crash use umem_free instead free using umem_zalloc reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed igor kozhukhov igor dilos.org close 8402,,
2091,435637d1ed9ad8c6e521786f343c5ade7ce552c4,ohn Wren Kennedy <jwk404@gmail.com>, 2019-02-19 12:12:47 -0700,8422, zts fails destroy volume cleanup function test attempt destroy volume fail volume busy leaf system unexpected datasets turn cause subsequent failure reviewed bunder2015 omfgbunder gmail.com reviewed igor kozhukhov igor dilos.org reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed john kennedy john.kennedy delphix.com close 8422,,
2092,11f6127aba6b9aa54bc86e70581aebeb7d160db4,pande <github@tripleback.net>, 2019-02-19 11:10:57 -0800,8414, zfs mount man page document legacy behaviour document legacy mount behavior reviewed allan jude allanjude freebsd.org reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com reviewed loli10k ezomori.nozomu gmail.com signed kash pande kash tripleback.net close 2900 close 8414,,
2093,f545b6ae00ef77df710ddace328d13e8c5c265bf,ara Hartse <sara.hartse@gmail.com>, 2019-02-15 14:44:56 -0800,8404, delay injection cause indefinitely hung zios hit nsec_to_tick diff condition zio_interrupt never called zio doe progress reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed sara hartse sara.hartse delphix.com close 8404,,
2094,a28c1a58fef803a63fdfe0390ac529b7c4a18685,on Brady <don.brady@delphix.com>, 2019-02-15 15:40:16 -0700,8398, zfs mounted nfsv3 share fail lock reclaims zfs nfs share mounted client nfsv3 open lock fail reclaim lock server reboot reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru signed brady don.brady delphix.com close 8398,,
2095,07237a7bc1eab62d8bb2bb7b4abafe7a2fd3a482,ohn Wren Kennedy <jwk404@gmail.com>, 2019-02-15 13:45:46 -0700,8409, zts clone_001_pos fails cleanup busy dataset cleanup_all function test call zfs destroy fails approximately time environment due dataset busy since failure happens cleanup error propagated subsequent test tested running snapshot test group loop without seeing failure reviewed george melikov mail gmelikov.ru reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov signed john kennedy john.kennedy delphix.com close 8409,,
2096,638dd5f44e2e56bb60a6f9aacbb1b3c22844926f,im Chase <tim@chase2k.com>, 2019-02-15 14:44:24 -0600,8362, fix enhancement add tunable print zios also case display depth zio relative original parent zio meant used developer gain diagnostic information hang involve fully set zio tree otherwise stuck hung early stage reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed tim chase tim chase2k.com close 8362,,
2097,9c5e88b1ded19cb4b19b9d767d5c71b34c189540,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-02-15 15:41:38 -0500,7513, zfs optionally send hold add switch zfs send command send dataset hold hold present stream zfs receive create target dataset unless zfs receive option used skip receive hold reviewed alek pinchuk apinchuk datto.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed paul zuchowski pzuchowski datto.com close 7513,,
2098,e73ab1b38cd099f3416eed0ab5576639383bbdcc,ony Hutter <hutter2@llnl.gov>, 2019-02-15 12:37:20 -0800,8389, linux 4.20 compat fix verify rw_read_held hash mh_contents 4.20 kernel changed meaning bit causing assertion loading module 4.20 kernel patch fix issue reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8360 close 8389,,
2099,2d76ab9e422286b4e97fbd014a2efb05804d4181,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2019-02-15 08:13:58 +0900,8408, fix obsolete comment rangelock 5d43cc9a59 renamed rangelock_enter reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 8408,,
2100,cf89a4ec9d39167e53cb70c7fa051239c1a78ba4,gor K <igor@dilos.org>, 2019-02-13 22:28:36 +0300,8397, zdb replace label_t zdb_label_t reduce collision build illumos based platform see build issue label_t redefined reduce build issue others platform rename label_t zdb_label_t reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed igor kozhukhov igor dilos.org close 8397,,
2101,65282ee9e06b130f1f0169baf5d9bf0dd8fc1ef9,lek P <alek-p@users.noreply.github.com>, 2019-02-12 12:01:08 -0800,7888, freeing throttle account hole deletion throttle currently doe account hole file mean activate fix switch throttle based number block dirty freeing reviewed tom caputi tcaputi datto.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alek pinchuk apinchuk datto.com close 7725 close 7888,,
2102,dcec0a12c8e480262288ac76f6350652079ea173,lek P <alek-p@users.noreply.github.com>, 2019-02-12 10:41:15 -0800,8142, port async unlinked drain illumos nexenta patch async implementation existing sync function function called mount time responsible freeing znodes get freeing hold mounting dataset unlinked list fully drained done since process unlinked set asynchronously result better user experience mounting dataset entry unlinked set reviewed jorgen lundman lundman lundman.net reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com signed alek pinchuk apinchuk datto.com close 8142,,
2103,425d3237ee88abc53d8522a7139c926d278b4b7f,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-02-12 10:38:11 -0800,8328, get rid initially metaslabs space map used thing zfs later started differentiating referring space map disk state metaslab making metaslab higher level concept metadata deal space accounting today managed split code furthermore space map disk data structure used area zfs besides metaslabs e.g vdev wide space map used zpool checkpoint vdev removal feature patch refactors space map code split space map code metaslab code doe getting rid idea space map different core disk length sm_length smp_length something used metaslab code consumer space map deal instead patch introduces change move old core length metaslab space map metaslab structure see field making space map code care actual space map length disk result space map consumer longer deal syncing two different length structure e.g away metaslab specific behavior stay within metaslab code specifically field keep track amount data metaslab_load read metaslab space map working concurrently metaslab_sync may appending space map side note patch also add comment around metaslab code documenting assumption expected behavior reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed serapheim dimitropoulos serapheim delphix.com close 8328,,
2104,d8d418ff0cc90776182534bce10b01e9487b63e4,oli10K <loli10K@users.noreply.github.com>, 2019-02-09 00:44:15 +0100, , zvols allowed child zfs create receive rename bypass hierarchy rule update userland kernel module prevent issue use pyzfs unit test exercise ioctls directly note commit slightly change zfs_ioc_create abi allow differentiate generic error einval specific case tried create dataset zvol reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed loli10k ezomori.nozomu gmail.com,,
2105,4417096956f7439322c65d9e70a4526df45ea8d0,oli10K <loli10K@users.noreply.github.com>, 2019-02-08 21:32:12 +0100,8361, pool allocation class misplacing small file block due one condition picking normal allocation class instead special one file block size equal property value change fix small code issue update zfs test suite zfs man page reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed loli10k ezomori.nozomu gmail.com close 8351 close 8361,,
2106,0902c4577f4ba2a3687549f7d5d19718a275fb52,im Chase <tim@chase2k.com>, 2019-02-04 11:33:30 -0600,8319, fix arc stats embedded blkptrs factor arc_read better account embedded data blkptrs previously reading payload embedded blkptr would cause arcstats bumped actually cache miss data already available blkptr following test procedure used demonstrate problem zpool create tank ... zfs create compression lz4 tank echo blah tank blah stat tank blah grep meta proc spl kstat zfs arcstats repeating last two step watch metadata miss counter increment also demonstrated via zfs_arc_miss dtrace4 probe arc_read reviewed loli10k ezomori.nozomu gmail.com reviewed george wilson george.wilson delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tim chase tim chase2k.com close 8319,,
2107,96342996577aac97fc9eaa0c0a9f74377dc9e336,hmed Ghanem <ahmedg@delphix.com>, 2018-02-11 16:11:59 -0700,8367, openzfs 9185 enable testing nfs zfs performance test change make addition zfs test suite allows performance test run nfs test run performance data collected server side generated nfs client tested linux illumos nfs client authored ahmed ghanem ahmedg delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed john kennedy john.kennedy delphix.com reviewed kevin greene kevin.greene delphix.com reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov ported john kennedy john.kennedy delphix.com signed john kennedy john.kennedy delphix.com openzfs issue http www.illumos.org issue 9185 close 8367,,
2108,1a745ef62ebdab0e1022908fc9c3280746acf462,oli10K <loli10K@users.noreply.github.com>, 2019-02-04 18:13:00 +0100,8369, zstreamdump option documented manpage change simply document missing dump content option zstreamdump reviewed bunder2015 omfgbunder gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 8369,,
2109,bf6ca0a6313ad09f4b98f774069693c1b36ecc60,under2015 <omfgbunder@gmail.com>, 2019-02-04 12:07:19 -0500,8367, shellcheck pas note non standard use builtin command instead sc2230 note use instead sc2236 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 8367,,
2110,cca14128c956e26486633d50650e11cda89b1d17,under2015 <omfgbunder@gmail.com>, 2019-02-04 12:02:46 -0500,8368, flake8 pas f632 use compare str byte int literal reviewed kan johansson f96hajo chalmers.se reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 8368,,
2111,57dc41de96c46a6cc037bfb3b81a7d5e9aa2ea5b,ony Hutter <hutter2@llnl.gov>, 2019-01-31 10:51:18 -0800,8338, fix zpool iostat header name zpool iostat latency histogram column name sync_queue async_queue match man page equivalent column average latency change column name syncq_wait asyncq_wait consistent reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8338,,
2112,6c926f426a26ffb6d7d8e563e33fc176164175cb,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-31 09:17:52 -0800,8347, simplify log vdev removal code get rid majority metaslab metadata removing log vdevs call metaslab_fini instead duplicating lot reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8347,,
2113,7558997d2f808368867ca7e5234e5793446e8f3f,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-31 09:16:39 -0800,8298, vs_alloc underflow l2arc vdevs current arc device code consistently psize increment vs_alloc varies psize lsize decrementing result behavior vs_alloc decremented incremented underflow patch change code asize used anywhere addition ensures vs_alloc get incremented arc device code buffer written end routine latter old way would temporarily underflow vs_alloc buffer written would destroyed still looping reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8298,,
2114,2747f599ff322ddafbfef79813e63624d04fb7aa,ara Hartse <sara.hartse@gmail.com>, 2019-01-30 12:31:16 -0800,8333, acquire zthr_wakeup address deadlock caused simultaneous wakeup cancel zthr remove hold zthr_wakeup allows thr_wakeup block thread process cancelled reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos serapheim delphix.com signed sara hartse sara.hartse delphix.com close 8333,,
2115,21e7cf5da89f55ce98ec1115726b150e19eefe89,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-30 09:54:27 -0800,8335, zdb skip leak detection altogether currently point option zdb disable leak tracing loading space map expensive yet still leak detection term space unfortunately scenario lie using zdb pool vdev removed open metaslab space map device patch make zdb skip leak detection altogether ensures space map loaded reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8335,,
2116,466f55334ac9b353948d4309bbcd44573e9a3024,ony Hutter <hutter2@llnl.gov>, 2019-01-23 11:31:24 -0800,8331, exclude test runner.py rpmbuild shebang check exclude test runner.py rpmbuild shebang check allow run python reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8331,,
2117,caacc6e4c4006b95a1ad118b50dbf1422ca3f053,ony Hutter <hutter2@llnl.gov>, 2019-01-23 11:17:52 -0800,8330, gcc 9.0 fix ztest directive argument nul terminated string gcc 9.0 complaining trying print string defined like .zo_pool fix making actual string reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8330,,
2118,26a856594f731db62446cf537659f9360261fe97,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-16 10:39:19 -0800,8287, linux 5.0 compat fix bio_set_dev linux 5.0 kernel updated bio_set_dev macro call gpl symbol thus inadvertently converting entire macro provide minimal version always assigns request queue root_blkg bio reviewed brian behlendorf behlendorf1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8287,,
2119,0c593296e98e3ac95f14704e4cee6cedb2134990,ony Hutter <hutter2@llnl.gov>, 2019-01-11 18:01:28 -0800,8259, linux 5.0 compat disable vector instruction 5.0 kernel 5.0 kernel longer export function need vector sse sse2 sse3 avx ... instruction disable vector based checksum algorithm building kernel reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8259,,
2120,ed158b19b1dddf26f2bbebb4d0fd21f04fdd5d38,ony Hutter <hutter2@llnl.gov>, 2019-01-10 17:07:05 -0800,8257, linux 5.0 compat fix subdirs subdirs deprecated long time finally removed 5.0 kernel use instead reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8257,,
2121,05805494dd7ea3b2fbb34ac031c338a8bc0bab62,ony Hutter <hutter2@llnl.gov>, 2019-01-10 15:28:44 -0800,8264, linux 5.0 compat convert ms_ macro sb_ 5.0 kernel mount namespace code use ms_ macos filesystems use sb_ one http patch 10552493 reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8264,,
2122,031cea17a3db1dae3b6968a8c71bcfb678a03235,ony Hutter <hutter2@llnl.gov>, 2019-01-10 14:28:10 -0800,8263, linux 5.0 compat use totalram_pages totalram_pages converted atomic variable 5.0 http patch 10652795 value read though totalram_pages helper function reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8263,,
2123,77e50c3070a0009c4ed8b50dbb7cf0df48bdda90,ony Hutter <hutter2@llnl.gov>, 2019-01-10 11:03:40 -0800,8261, linux 5.0 compat access_ok drop type parameter access_ok longer need type parameter 5.0 kernel reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8261,,
2124,5cb46f6a664db913f0ef2bf8e929c3f8d8cbfc5b,ony Hutter <hutter2@llnl.gov>, 2019-01-09 13:16:39 -0800,8258, linux 4.18 compat use newer kernel remove use place reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8258,,
2125,c853f382db731e15a87512f4ef1101d14d778a55,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-25 16:38:27 -0800,8324, change target size metaslabs 256gb 16gb old behavior vdev size 100gb 50tb keep 200 metaslabs per vdev metaslab size grows 512mb 256gb vdev bigger start increasing number metaslabs hit 128k limit new behavior vdev size 100gb 3tb keep 200 metaslabs per vdev metaslab size grows 512mb 16gb vdev bigger start increasing number metaslabs hit 128k limit reasoning old behavior make metaslabs grow size vdev range 3tb ms_size 16gb 32pb ms_size 256gb even though keeping number metaslabs good term potential number per txg bigger metaslabs take longer loaded loaded take lot memory range tree change try put boundary memory loading time specific range vdev size reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed serapheim dimitropoulos serapheim delphix.com close 8324,,
2126,df72b8bebe0ebac0b20e0750984bad182cb6564a,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-25 09:51:24 -0800,8327, rename function look segment range tree panic segment present tree patch give function descriptive name reviewed matt ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8327,,
2127,107dd2b1748bc4c15e5e5fa7342cfc4e61bce4ee,im Chase <tim@chase2k.com>, 2019-01-25 11:50:06 -0600,8326, use proper tag spa config refcounts allows spa config refcounts use tracking debug build without triggering hold refcount panic reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 8326,,
2128,7646af20ad3406afde8b02b9b58eb0e58af66700,oli10K <loli10K@users.noreply.github.com>, 2019-01-25 18:47:52 +0100,8279, zfs userspace dump core used zvols try get userspace groupspace projectspace zvol generated error result passing einval return specific error inform user property available volume reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed loli10k ezomori.nozomu gmail.com close 8279,,
2129,8fccfa8e17d30b4dae82f0cd33346f39b79f4822,amian WojsÅaw <damian@wojslaw.pl>, 2019-01-23 22:29:49 +0100,8262, zpool iostat print header terminal fill zpool iostat fill terminal header printed zpool iostat used suppress command attached tty header printed break existing script reviewed joshua clulow josh sysmgr.org reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed damian wojså damian wojslaw.pl close 8235 close 8262,,
2130,b5d693581d6238942997e1493ddfafa30b1e28f2,om Caputi <tcaputi@datto.com>, 2019-01-23 14:38:05 -0500,8307, fix bad kmem_free currently call kmem_asprintf allocate initialize string function thin wrapper around kernel kvasprintf doe call spl kmem tracking code enabled however function free string tracked kmem_free instead untracked strfree cause spl kmem tracking code believe function attempting free memory never allocated triggering assert patch simply corrects issue reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8307,,
2131,0a10863194b0e7c1c64f702f868c10d5dac45ea5,oli10K <loli10K@users.noreply.github.com>, 2019-01-18 20:14:01 +0100,8277, ztest creates partially initialized root dataset since d8fdfc2 integrated dsl_pool_create doe call root dataset running userland ztest creates pool partially initialized root dataset trying import use pool result zpool zfs executables dumping core fix adopting alternative change suggested openzfs 8607 code review reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com original patch robert mustacchi joyent.com signed loli10k ezomori.nozomu gmail.com close 8277,,
2132,ad635071355255a43469daa41fd411881407d861,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-18 11:11:47 -0800,8297, remove zfs_sync panicking kernel check check provides real additional protection unnecessarily introduces dependency kernel symbol remove check special circumstance platform make requirement reintroduced relevant call path portable comprehensive manor reviewed matt ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 8297,,
2133,b194fab0fb6caad18711abccaff3c69ad8b3f6d3,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-18 11:10:32 -0800,8290, factor metaslab_load caller need operate loaded metaslab always call loading metaslab case someone else already work factoring within metaslab_load make later robust caller load wait check explicitly every time need load metaslab reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8290,,
2134,960347d3a684a0063614eb293950f8f8c7dce7e1,om Caputi <tcaputi@datto.com>, 2019-01-18 14:06:48 -0500,8266, fix byte memory leak zfs receive currently drr_object record read memory memory allocated bonus buffer however object bonus buffer code still allocate zero byte memory passed processing thread cleanup later cause spl kmem tracking code report leak patch simply change code allocates memory non zero length reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8266,,
2135,1a759200e5aa080dd76208555ce83092f6110481,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-18 10:16:56 -0800,8299, document guideline usage zfs_dbgmsg reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru signed serapheim dimitropoulos serapheim delphix.com close 8299,,
2136,e45c1734a665e571599781811a0cd3128a550226,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2019-01-18 13:10:24 -0500,8304, dkm enable debuginfo option set zfs sysconfig file linux distribution kernel module build default building debuginfo symbol make difficult debugging testing case provide flag override build force debuginfo produced kernel module build reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov authored neal gompa ngompa datto.com authored simon watson swatson datto.com signed neal gompa ngompa datto.com signed simon watson swatson datto.com close 8304,,
2137,60b0a963f56182beb2d57823960f3ddb987a584a,oli10K <loli10K@users.noreply.github.com>, 2019-01-18 18:58:46 +0100,8278, one trying set user property length byte shorter maximum size trigger assertion failure panic cpu0 thread assertion failed num_integers integer_size 0x2000 0x2000 file common zfs zap_leaf.c line 233 genunix process_type 167c35 zfs 1d2 zfs 1be zfs fzap_update zfs zap_update 1a5 zfs 5c6 zfs zfs zfs 10a zfs dsl_pool_sync 3a3 zfs spa_sync 4e6 zfs txg_sync_thread 297 unix thread_start patch simply corrects assertion reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8278,,
2138,8dc2197b7b1e4d7ebc1420ea30e51c6541f1d834,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-18 09:50:16 -0800,8293, simplify spa_sync breaking smaller function point refactoring break high level conceptual step spa_sync helper function general large function enhance readability structured well case amount conceptual step taken could use help helper function reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8293,,
2139,ce5fb2a7c6dfaa0f305350225e064e9f536bd5a4,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-18 09:47:55 -0800,8269, ztest scrub verification design ztest never inject non repairable damage pool update ztest_scrub test case wait scrub complete verifies pool always repairable enabling scrub verification two scenario encountered result ztest manages failure injection first case straight forward pertains detaching mirror vdev case pool must always scrubbed prior detach failure potentially lock previously repairable data corruption removing good copy block leaving damaged one second little subtle child offset selection logic depends calculated number leaf always remaining constant injection pass true within single execution ztest using zloop.sh random value selected restart therefore ztest import existing pool must scrubbed failure injection safely enabled otherwise possible inject non repairable damage reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8269,,
2140,305781da4bbe11acef8707894d7e33f8aef3ca8e,om Caputi <tcaputi@datto.com>, 2019-01-17 18:47:08 -0500,8291, fix error handling incallers dbuf_hold_level currently function assume dbuf_hold_level fail event error former cause null pointer dereference later trigger verify patch add error handling function caller necessary reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8291,,
2141,75058f33034d23801818582996d3dc941c545910,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-17 15:41:12 -0800,8285, remove unused vdev_t field following field vdev_t struct used anywhere reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8285,,
2142,52b684236d35c64bb371bd19ce0c87552e368d77,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-17 15:25:00 -0800,8270, ztest scrub ddt repair test designed inflict damage ddt repairable scrub unfortunately repair logic broken point went undetected issue specific ztest thankfully extra redundancy rarely enabled even rarely needed root cause identified ddt_bp_create function called set dedup bit generated block pointer consequence never enabled block pointer scrub dedup ditto repair logic never run note demand read rely ddt_bp_create required pipeline stage would enabled repair performed resolved unconditionally setting dedup bit ddt_bp_create way code path may need perform repair block pointer generated dtt entry able exception dedup bit cleared ddt_phys_free required avoid leaking space reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com reviewed serapheim dimitropoulos serapheim delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8270,,
2143,419ba5914552c6185afbe1dd17b3ed4b0d526547,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-16 15:06:20 -0800,8286, update new spacemap encoding since new spacemap encoding ported zol longer limitation patch update performing check also update appropriate test ensure functionality tested test doe creating pool new spacemap encoding enabled checkpoint feature patch also reorganizes test order cut half memory consumption reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8286,,
2144,64bdf63f5cceb6ea6b7e199c79a8ac3e37cdbf13,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-16 14:10:02 -0800,8271, ztest split block reconstruction increase default allowed number reconstruction attempt exact right number setting need set large enough cover realistic failure scenario small enough avoid stalling pipeline invoking dead man detection current value 256 empirically determined low based multi day run ztest fault injection code would inject damage could reconstructed given relatively small number attempt however observed case block could reconstructed using slightly higher limit based local testing increasing default value 4096 determined strike best balance checking combination take worst case far eliminated vast majority false positive detected ztest delay roughly par long retries may performed misbehaving hdd deemed reasonable better err side brief delay rather fail reconstruct data lastly flag added zdb make easy try possible combination performing split block reconstruction badly damaged block split fully enumerated within minute done ensure permanent error never incorrectly reported ztest verifies pool zdb reviewed tom caputi tcaputi datto.com reviewed matt ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8271,,
2145,db587941c5ff6dea01932bb78f70db63cf7f38ba,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-16 10:41:47 -0800,8292, make zdb result checkpoint test consistent patch export import pool test analyzed zdb get consistent result reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed serapheim dimitropoulos serapheim delphix.com close 8292,,
2146,6e91a72fe3ff8bb282490773bd687632f3e8c79d,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-15 15:46:58 -0800,8238, disable zfs remap command implementation zfs remap proven problematic since modifies objset logical content dirtying metadata without owning consequence vulnerable certain race example middle receiving filesystem remapped possible could evict objset receive completes see may still using objset result would panic extended run ztest exposed possible race occur using zfs remap several fixed may others yet encountered diagnosed furthermore ability manually remap filesystem longer particularly useful removal code map large chunk coupled fact explaining command doe may useful requires detailed understanding internals device removal detail user bothered  therefore zfs remap command disabled entirely removed may removed future potentially reworked address issue described since zfs remap never part tagged release removal expected minimal impact zts test updated continue exercise command prevent atrophy removed entirely ztest reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8238,,
2147,5e7f3ace5807f950f3529361e03970101e61aa44,om Caputi <tcaputi@datto.com>, 2019-01-15 15:23:40 -0500,8267, fix zio leak dbuf_read currently dbuf_read may decide create zio_root used parent child zios created dbuf_read_impl however error dbuf_read_impl zio never executed end leaked patch simply ensures always execute root zio even real work  reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8267,,
2148,7b02fae7a6670579437d1fb490362f70168b0666,oli10K <loli10K@users.noreply.github.com>, 2019-01-15 20:56:29 +0100,8281, verify .gitignore entry change add make target vcscheck scan git workspace new untracked file missing .gitignore configuration done help prevent adding unwanted build artifact source tree development reviewed neal gompa ngompa datto.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8281,,
2149,9b626c126e78cdc36200b66c7cd1dc6a06cf400d,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-10 15:58:15 -0800, , tag 0.8.0 rc3 signed brian behlendorf behlendorf1 llnl.gov,,
2150,d611989fdc176ccb54c24df99fd6c81b1cfff833,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-13 10:11:52 -0800,8272, minor spelling correction minor spelling mistake typo functional change reviewed neal gompa ngompa datto.com reviewed matt ahrens mahrens delphix.com reviewed giuseppe natale guss80 gmail.com reviewed bunder2015 omfgbunder gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8272,,
2151,61c3391acc988573aaf9e59550f863de4affcb68,erapheim Dimitropoulos <serapheimd@gmail.com>, 2019-01-13 10:09:46 -0800,8229, serialize zthr operation eliminate race add new lock serializing operation zthrs commit also includes code cleanup refactoring reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8229,,
2152,83c796c5e9d9ecb28e9553338f079a5d6b015b10,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2019-01-13 13:06:13 -0500,8254, zfs filesystem skipped full pool pool root filesystem reference byte f_blocks returned statvfs least reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 8253 close 8254,,
2153,a13392a6a1a0e3858a11f79cf3fc2f2026b4dcc0,om Caputi <tcaputi@datto.com>, 2019-01-13 13:04:38 -0500,8268, add contrib pyzfs setup.py .gitignore 9ef798b77 setup.py generated setup.py.in file never moved .gitignore patch simply corrects issue reviewed neal gompa ngompa datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8268,,
2154,e34cd80d7942a0f26042c074f30044083c9f952f,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-13 10:02:33 -0800,8265, add pyzfs buildrequires mock building pyzfs mock python cffi python setuptools package need installed added buildrequires reviewed neal gompa ngompa datto.com signed brian behlendorf behlendorf1 llnl.gov close 8265,,
2155,99b0b5bc3fe5a566d73ed2eed53137f97d684e84,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-13 10:01:31 -0800,8273, zts since vdev initialize feature integrated zts test hitting internal timeout frequently happens often coverage builder exclusively increasing timeout test case prevents false positive signed brian behlendorf behlendorf1 llnl.gov close 8273,,
2156,6955b40138b959af724a332df32ae64c872d876b,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-10 14:37:43 -0800,8015, provide flexible object allocation interface object allocation performance improved complex operation providing interface return newly allocated dnode allows caller immediately use dnode without incurring expense looking dnode object number function zap_create_hold added purpose zap_create_ function updated take advantage new functionality function really never included sys dmu.h removed sole caller converted use new symbol exported use lustre reviewed tony hutter hutter2 llnl.gov reviewed matt ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8015,,
2157,58769a4ebd462461131f19cccf25c3d19a4dbfb5,om Caputi <tcaputi@datto.com>, 2019-01-10 17:36:23 -0500,8249, allow dnode allocation dn_holds patch simply fix small bug dnode_hold_impl could attempt allocate dnode process freed still active reference patch simply add required check reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8249,,
2158,8bd2a2866ccc3f606566ce5503b32053948513ab,regor Kopka <mailfrom-github@kopka.net>, 2019-01-09 01:15:30 +0100,8247, removed suggestion use root dataset bootfs dracut howto proposed boot root dataset pool apart giving problem booting code seems expect child dataset creates illegal dataset name using root dataset technical limitation root dataset among others inability rename destroy zfs command resulted general consensus use container datasets pool filesystem removed idea boot root dataset reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed gregor kopka gregor kopka.net close 8247,,
2159,9ef798b771b9b40968e207ad2a02092717dd628e,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2019-01-08 18:56:42 -0500,8243, use zfs version pyzfs drop unused reqs file pyzfs part zfs codebase versioned rest source tree eliminates confusion version binding used especially dependent python project may use python dist metadata identify compatible version pyzfs work addition trivial change drop unused file included simply unused leftover imported zfs codebase wired autotools build script reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa datto.com close 8243,,
2160,0f5f23869a64ec12b1744ee3df25816c712667d2,oli10K <loli10K@users.noreply.github.com>, 2019-01-08 19:17:46 +0100,8232, zfs receive rollback skew commit fix small issue cause zfs receive rollback operation incorrectly increase property value change also add new test group limit zfs test suite exercise limit snapshot_count limit functionality reviewed jerry jelinek jerry.jelinek joyent.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8232,,
2161,f384c045d8135adf6fa4858948cc42ddb580c652,somers <asomers@FreeBSD.org>, 2017-09-20 16:31:00 +0000,8251, openzfs 8473 scrub doe detect error active spare scrubbing supposed detect repair error pool however wrongly ignores active spare device problem easily reproduced openzfs git rev 0ef125d command truncate 64m tmp tmp tmp sudo zpool create testpool mirror tmp tmp spare tmp sudo zpool replace testpool tmp tmp bin dev zero 1024k count oseek conv notrunc tmp sync sudo zpool scrub testpool zpool status testpool show error wrong sudo zpool offline testpool tmp sudo zpool scrub testpool zpool status testpool show error tmp already fixed freebsd head partially affected first scrub detect error second scrub detect test run linux applying fix freebsd head behavior observed authored asomers asomers freebsd.org reviewed andy stormont astormont reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported brian behlendorf behlendorf1 llnl.gov sponsored spectrum logic corp openzfs issue http www.illumos.org issue 8473 freebsd commit http github.com freebsd freebsd commit e20ec8879 openzfs commit http github.com illumos illumos gate commit 554675ee close 8251,,
2162,53b5fcd36592140a6d2f10d1d4ffd8bb743a9379,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2019-01-08 12:29:34 -0500,8242, include third party license dist tarballs since merge linux solaris porting layer source tree zfs codebase zfs double licensed codebase former spl codebase retaining license gplv2 within zfs source tree however license file spl included tarballs generated autotools change corrects addition third party license codebase properly declared included dist tarballs reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa datto.com close 8242,,
2163,21e000ad3f5331a1c549905480e19d5ecbac0db3,ony Hutter <hutter2@llnl.gov>, 2019-01-08 09:26:45 -0800,8216, fix missing dkm module upgrade upgrading say fc28 fc29 zfs version rpm macro would get called like post x.fc29 step fc29 get built dkm part build dkm automatically remove previous module building new one build new module preun x.fc28 right step x.fc29 built installed since file get inadvertently removed fc28 uninstall postun x.fc28 patch update preun x.fc28 see upgrading uninstalling uninstalling remove file upgrading nothing since know dkm already removed file post x.fc29 note since fix preun step effect going noticed immediately seen package fix upgraded newer version reviewed ralf ertzinger ralf skytale.net reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6902 close 8216,,
2164,4efb48eecb43717f70817bfb152bf86f7ed28b5b,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2019-01-08 12:23:05 -0500,8250, bump commit subject length character really reason keep subject length short since reason make short making nice render summary list git log character still work fine let raise easier give slightly descriptive change summary reviewed matt ahrens mahrens delphix.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa datto.com close 8250,,
2165,22448f08942457ab34579cb7d7edbcf635fa25a6,enjamin Gentil <benjgentil.pro@gmail.com>, 2019-01-07 20:08:54 +0100,8241, zfs.8 wrong snapshot name example reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed benjamin gentil benjamin gentil.io close 8241,,
2166,a769fb53a17e7f8b6375b25cd23f3ff491b631cb,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-27 13:12:53 -0800,8230, add zpool status option display full detail vdev initialization state zpool status output requested option default display initializing vdevs actively initialized consistent established precident appending resilvering etc fit within default column terminal width making easy read additionally updated zpool initialize documentation make clear option mutually exclusive allow duplicate option like zfs zpool command reviewed matt ahrens mahrens delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed tim chase tim chase2k.com reviewed george wilson george.wilson delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8230,,
2167,c10d37dd9f5d56e19330add732f1a713250d24f7,eorge Wilson <george.wilson@delphix.com>, 2018-12-19 09:20:39 -0700,8230, zfs initialize performance enhancement problem  invoking zpool initialize pool command create thread initialize disk unfortunately doe serially across many transaction group result command taking long time return user may appear hung thing true trying suspend cancel operation solution  change refactors way invoke initialize interface ensure start stop intialization transaction group stopping cancelling vdev initialization perform two phase first signal vdev initialization thread exit thread signaled wait exit pool leaf vdevs reduces vdev initialize stop cancel time minute second reason longer need wait multiple full txgs per leaf vdev stopped commit additionally add missing check passed input nvlist content user provided input nvlist must validated ensure value uint64s done order keep check single location updated innvl outnvl comment match formatting used new sytle ioctls reviewed matt ahrens mahrens delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 8230,,
2168,619f09769393d4e0cbaa5f662362138e1c699159,eorge Wilson <george.wilson@delphix.com>, 2018-12-19 07:54:59 -0700,8230, openzfs 9102 zfs able initialize storage device problem  first access block incurs performance penalty platform e.g aws vmware vmdks therefore recommend volume thick provisioned supported platform vmware create large delay getting new virtual machine running adding storage existing engine thick provision step omitted write performance suboptimal block lun written solution  feature introduces way initialize disk install background make sure incur first read penalty entire lun added zfs make space available immediately allow zfs find unallocated space zero work concurrent writes arbitrary offset ensuring zero something middle written scheme also applied existing pool affecting free region vdev detailed design new subcommand zpool initialize pool vdev ... start suspend cancel initialization creates new open context thread vdev thread iterates metaslabs vdev metaslab select metaslab load metaslab mark metaslab zeroed walk free range within metaslab translate range leaf vdev issue zeroing leaf vdev corresponds free range metaslab working continue free range metaslab zeroed reset unmark metaslab zeroed metaslabs exist repeat task metaslabs done progress initialization stored disk vdevâ leaf zap object following information stored last offset initialized state initialization process i.e active suspended canceled start time initialization progress reported via zpool status command show information vdevs initializing porting note added module parameter set pattern written zpool initialize added zfs_vdev_ initializing removal min max _active module option authored george wilson george.wilson delphix.com reviewed john wren kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed prakash surya prakash.surya delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net signed tim chase tim chase2k.com ported tim chase tim chase2k.com openzfs issue http www.illumos.org issue 9102 openzfs commit http github.com openzfs openzfs commit c3963210eb close 8230,,
2169,c87db591967507de027d6bb0c683ffd09dd70105,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-06 10:41:16 -0800,8096, python compatibility python slowly approaching eol removal distribitions already planned fedora existing python code need transitioned python patch stack update python code compatible python 2.7 3.4 3.5 3.6 3.7 reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com reviewed antonio russo antonio.e.russo gmail.com close 8096,,
2170,dffce3c282f74991e740c1e1887001fe059fe05a,ohn Wren Kennedy <john.kennedy@delphix.com>, 2018-12-03 11:38:06 -0700,8096, test runner python3 support updated compatible python 2.6 2.7 3.5 newer reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed john wren kennedy john.kennedy delphix.com close 8096,,
2171,530248d1aab90356968570a44b26c92b7e190b8f,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-13 12:25:04 -0800,8096, arc_summary consolidate test case since installing one version arc_summary need one test case update test determine version available test supported flag remove file misc test cleaned reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8096,,
2172,6e72a5b9b61066146deafda39ab8158c559f5f15,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-31 09:22:59 -0700,8096, pyzfs python3 support build system almost python code respository updated compatibile python 2.6 python 3.4 newer exception arc_summery3.py requires python pyzfs requires least python 2.7. allows maintain single version code support default version python change doe following set default shebang python script python3 python available install time script compatible python shebang replaced usr bin python done compatibility python end life since installed version changed mean python must installed system test runner testing tree added python 3.4 etc configure option set python environment variable target specific python version default newest installed version python used preferred distribution version creating pacakges fixed enable pyzfs configure check run enable pyzfs check enable pyzfs yes enabled pyzfs python 3.4 newer supported renamed pyzfs package python version pyzfs updated install appropriate site location example building python 3.4 python34 pyzfs created installs usr lib python3.4 site package renamed following python script according fedora guidance packaging utility bin dbufstat.py dbufstat arcstat.py arcstat arc_summary.py arc_summary arc_summary3.py arc_summary3 updated python cffi package name centos centos amazon linux called python cffi python2 cffi python3 called python3 cffi python3x cffi install one version arc_summary depending version python available install either arc_summary2 arc_summary3 arc_summary user output slightly different reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8096,,
2173,4b1c4062d050e2cfa609e1040384d1f3b5f04f52,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-04 10:50:39 -0800,8096, pyzfs python3 support unit test updated unit test compatbile python case required add prefix existing string convert type byte python compatibility several place python version need checked remain compatible pythong one seasoned python may able find way rewrite statement compatible fashion reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com signed john wren kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8096,,
2174,e5fb1dc586e879f016ddba24372b731971dad20c,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-04 10:50:04 -0800,8096, pyzfs python3 support library pool dataset nvlist key must type byte reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com signed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8096,,
2175,9de8c0cd7f02978fc13bc2a9720a182e80a48f87,ntonio Russo <antonio.e.russo@gmail.com>, 2018-08-22 06:59:51 -0400,8096, pyzfs python3 support library change efficient valid python part also pythonic 2to3 conversion add __future__ import iterator change integer division relative import fix reviewed john ramsden johnramsden riseup.net reviewed neal gompa ngompa datto.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 8096,,
2176,0b8e4418b615eb6e46d409b3de61bfffe1000c68,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-03 15:19:37 -0800,8231, add zfs module feature property compatibility change required ease transition upgrading 0.7.x 0.8.x allows 0.8.x user space utility remain compatible 0.7.x older kernel module reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8231,,
2177,5365b0747a51edeef9c24213929eafb0444ccb78,under2015 <omfgbunder@gmail.com>, 2019-01-03 15:15:46 -0500,8222, add missing mmp status code libzfs_status mmp merged status code libzfs_status updated add status code commit corrects add comment help keep track code used status reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 8148 close 8222,,
2178,65ca2c1eb9af3c3fb2d221aabc2afa5db7b0f8cc,rian Behlendorf <behlendorf1@llnl.gov>, 2019-01-02 11:46:04 -0800,8215, fix zpool remap freeing race logic depends dnode_hold returning enoent dnodes freed skipped behavior relied upon taking new hold caller open transaction ensures open txg advance concurrent free end txg critical relying existing hold prevent dnode_free succeeding solution take additional dnode_hold assigning transaction ensures remap never dirty dnode freed waiting dmu_tx_assign txg_wait randomly set ztest increase likelihood operation racing remap converted tick millisecond reviewed matt ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com reviewed igor kozhukhov igor dilos.org signed brian behlendorf behlendorf1 llnl.gov close 8215,,
2179,06f3fc2a4b097545259935d54634c5c6f49ed20f,ichard Laager <rlaager@wiktel.com>, 2018-12-26 15:50:14 -0600,8220, minor tweak zfs.8 man page posix acls capitalize posix posix acls change make posix posix acls cap correct consistent rest man page slightly reword part zfs.8 tweaked sentence add missing comma long editing removed couple unnecessary word reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed richard laager rlaager wiktel.com close 8220,,
2180,3ec34e55271d433e3c2dbb861a886361e006ca0a,rad Lewis <brad.lewis@delphix.com>, 2017-03-15 16:41:52 -0700,8165, openzfs 9284 job following fix 9018 replace longer block reaping however code still confusing error prone thread two responsibility instead separate two thread responsibility keep arc_size arc_c calling arc_adjust improves keep enough free memory system calling plus arc_shrink improves  furthermore use zthr infrastructure separate something part logic normalize start shut thread authored brad lewis brad.lewis delphix.com reviewed matt ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed paul dagnelie pcd delphix.com reviewed dan mcdonald danmcd joyent.com reviewed tim korda tim.kordas joyent.com reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov ported brad lewis brad.lewis delphix.com signed brad lewis brad.lewis delphix.com openzfs issue http www.illumos.org issue 9284 openzfs commit http github.com openzfs openzfs commit de753e34f9 close 8165,,
2181,00f198de6b6ac663926bff2666d956a61cea85db,om Caputi <tcaputi@datto.com>, 2018-12-18 17:47:33 -0500,8212, fix documentation dfbe2675 changed new tunable named unfortunately module parameter documentation code updated accordingly patch simply corrects reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8212,,
2182,c66401fae036b22ecb3fa9af3337e1f9ecffb5e7,ony Hutter <hutter2@llnl.gov>, 2018-12-14 17:27:49 -0800,8194, add option vdev_id add option vdev_id.conf creates consistently named symlinks enclosure device dev based configuration vdev_id.conf enclosure symlinks show dev enclosure prefix channel num link make make easy run sg_ses particular enclosure device enclosure link created addition normal dev disk vdev link valid sas_direct configuration reviewed brian behlendorf behlendorf1 llnl.gov reviewed simon guest simon.guest tesujimath.org signed tony hutter hutter2 llnl.gov close 8194,,
2183,7c46894081300410612a34f7c05377848b277dab,om Caputi <tcaputi@datto.com>, 2018-12-14 13:06:49 -0500,8210, zts fix wait_scrubbed currently wait_scrubbed function kind accepts timeout default timeout pretty short scrub cause test failure run long patch remove timeout instead leaning global test suite timeout ensure test keep moving reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8210,,
2184,2a6078450db6437863f5ce32cfbb06f82e1beae7,om Caputi <tcaputi@datto.com>, 2018-12-14 13:04:11 -0500,8209, fix zap_update assert ztest patch simply remove invalid assert zap_update function assert invalid doe hold zap lock time fetch old value time confirms  reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8209,,
2185,0dd6b6bfcb2c14249a6d6b874e11ff137777d349,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-14 10:03:05 -0800,8206, ztest enospc unlikely possible return enospc occur even used dsl_sync_task existence checkpoint pending deferred free cause reviewed serapheim dimitropoulos delphix.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8206,,
2186,98d07d5798390bbe3817418db51afa895831e900,aul Dagnelie <pcd@delphix.com>, 2018-05-24 13:38:47 -0700,8211, openzfs 9559 zfs diff handle file delete queue fromsnap poorly authored paul dagnelie pcd delphix.com reviewed joshua clulow josh sysmgr.org reviewed tom caputi tcaputi datto.com approved richard lowe richlowe richlowe.net ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9559 openzfs commit http github.com openzfs openzfs commit d7e45412 close 8211,,
2187,dc1c630b8abf2db4ce78b583b441bd0c74f42936,ndriy Gapon <avg@FreeBSD.org>, 2018-06-28 00:37:54 +0300,8207, openzfs 9630 add lzc_rename lzc_destroy libzfs_core porting note additional change required due encryption code merged openzfs yet libzfs_core python binding pyzfs updated fully support lzc_rename lzc_destroy authored andriy gapon avg freebsd.org reviewed andy stormont astormont reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported loli10k ezomori.nozomu gmail.com openzfs issue http www.illumos.org issue 9630 openzfs commit http github.com openzfs openzfs commit 049ba63 close 8207,,
2188,eff7d78f8a1e2c8c8a151b99ee7e66ad619b201c,en Cordero <bencord0@condi.me>, 2018-12-13 23:48:46 +0000,8197, add cut binary initramfs since cut command used parse zfs.sh ensure copied initramfs fix spl_hostid set cmdline follows similar logic zgenhostid script using echo instead printf reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ben cordero bencord0 condi.me close 8197,,
2189,5aa95ba0d3502779695341b5f55fa5ba1d3330ff,om Caputi <tcaputi@datto.com>, 2018-12-13 17:18:48 -0500,8193, fix resilver writes patch address issue found ztest resilver write zios passed indirect vdev would end handled though resilver read zios caused issue zio io_abd would read written time causing asserts fail reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos serapheim delphix.com signed tom caputi tcaputi datto.com close 8193,,
2190,4b702901637ee0be1f654af38c86d0a68593f921,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-11 16:01:41 -0800,8202, check strlcat strlcpy partially reverts commit 8005ca4 moving strlcat strlcpy compatibility implementation back original location addition two function added ac_check_funcs macro function available library have_strlcat have_strlcpy defined library version used otherwise compatibility version built reviewed sebastian gottschall s.gottschall wrt.com reviewed alek pinchuk apinchuk datto.com signed brian behlendorf behlendorf1 llnl.gov close 8157 close 8202,,
2191,a48cd034c8df96ab751179b0c15bf84c6e178967,ichard Elling <Richard.Elling@RichardElling.com>, 2018-12-11 13:56:54 -0800,8198, seeing negative value wlentime rlentime linux kstat timer printed value signed however counter increment thus human looking data confused counter roll note recommended use value monitor derivative really care sign see explanation related non negative derivative various time series database reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov signed richard elling richard.elling close 8131 close 8198,,
2192,fa61e72340c1b47f33b5290e5eeb7e05e62eabf0,laf Faaland <faaland1@llnl.gov>, 2018-12-10 16:52:49 -0800,8195, rename macro zfs_minor due lustre conflict macro zfs_minor introduced commit a6cc9756 record chosen static minor number dev zfs conflict existing macro lustre lustre macro along _major _patch _fix used record zfsonlinux version lustre built since lustre macro came first used past version lustre least going back 2.10 make sense rename macro zfs instead lustre would require backporting patch reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 8195,,
2193,900d09b285107e13fa0bdb8378274dff89347181,rakash Surya <prakash.surya@delphix.com>, 2018-10-23 14:14:27 -0700,8188, openzfs 9962 zil_commit omit cache thrash result change made 8585 possible excessive amount vdev flush command issued workload specifically workload consists mostly async write activity interspersed sync write fsync activity end issuing flush command underlying storage actually necessary result flush command write latency overall throughput pool poorly impacted latency increase throughput decrease currently time lwb completes vdev written result lwb issued flush command intenion data written vdev stable storage prior communicating waiting thread data safe disk problem scheme sometimes lwb thread waiting complete occur async activity get converted sync request result calling function via zil_commit_impl occurs current code may issue many lwbs waiter associated resulting many flush command potentially vdev example given pool single vdev single fsync call result lwbs written e.g due async writes result flush command single vdev flush issued lwb write completes ideally issue single flush command vdev lwb writes completed important pertains change since flush command often impactful performance pool underlying storage unnecessarily issuing flush command poorly impact performance lwb writes thus need avoid issuing flush command possible order acheive best possible performance pool underlying storage change attempt address problem changing zil logic issue vdev flush command detects lwb thread waiting complete lwb doe thread waiting responsibility issuing flush command vdevs involved lwb write passed next lwb write lwb waiter completes issue vdev flush command result issue flush issue vdevs involved specific lwb write potentially also vdevs involved previous lwb writes i.e previous lwbs waiter associated thus prior example lwbs last lwb completes lwb containing waiter thread called fsync issue vdev flush command lwbs find waiter pas responsibility flush next lwb reaching last lwb waiter porting note reconciled conflict fastwrite feature authored prakash surya prakash.surya delphix.com reviewed matt ahrens matt delphix.com reviewed brad lewis brad.lewis delphix.com reviewed patrick mooney patrick.mooney joyent.com reviewed jerry jelinek jerry.jelinek joyent.com approved joshua clulow josh sysmgr.org ported signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9962 openzfs commit http github.com openzfs openzfs commit 545190c6 close 8188,,
2194,53b1f5eac602b1d576907fa7409f91ac03d607f2,rakash Surya <prakash.surya@delphix.com>, 2018-10-23 09:44:37 -0700,8186, openzfs 9963 separate tunable disabling zil vdev flush porting note add option zfs module parameter man page move vdev.c instead vdev_disk.c since latter get built user space authored prakash surya prakash.surya delphix.com reviewed matt ahrens matt delphix.com reviewed brad lewis brad.lewis delphix.com reviewed patrick mooney patrick.mooney joyent.com reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9963 openzfs commit http github.com openzfs openzfs commit f8fdf68125 close 8186,,
2195,18b14b17c854d56b1f952bb6e18a1e0ff1e8b813,eorge Wilson <george.wilson@delphix.com>, 2018-11-02 17:49:40 -0600,8185, openzfs 9993 zil writes get delayed zio pipeline authored george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed brad lewis brad.lewis delphix.com reviewed matt ahrens matt delphix.com reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9993 openzfs commit http github.com openzfs openzfs commit 2258ad0b close 8185,,
2196,e63ac16d25fbe991a356489c86d4077567dfea21,ndy Fiddaman <omnios@citrus-it.co.uk>, 2018-10-20 14:48:39 -0700,8189, openzfs 9880 race zfs parallel mount porting note required linux since zone always global want change start using zone code authored andy fiddaman omnios citrus it.co.uk reviewed jason king jason.king joyent.com reviewed sebastien roy sebastien.roy delphix.com reviewed tom caputi tcaputi datto.com approved joshua clulow josh sysmgr.org ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9880 openzfs commit http github.com openzfs openzfs commit bc4c0ff134 close 8189,,
2197,4b611761bd09718c267d5e3dcb3ded62e3a545df,om Caputi <tcaputi@datto.com>, 2018-12-07 13:54:38 -0500,8187, fix error message zfs module loaded patch corrects small issue wrong error message displayed zfs kernel module loaded also avoids waiting default timeout see dev zfs device appears reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8187,,
2198,ef57371a92367394108a5f65cee3c00d50101a4d,ony Nguyen <tony.nguyen@delphix.com>, 2018-12-07 11:51:42 -0700,8173, enable stack tracer zfs performance test linux zfs test suite run proc sys kernel via zfs.sh script negative performance impact since large stack rare issue preferred behavior would making stack tracer opt feature zfs.sh zfs test.sh enables stack tracer requested reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling reviewed john kennedy john.kennedy delphix.com signed tony nguyen tony.nguyen delphix.com 8173,,
2199,d6496040d904c381d7ecdb113cfcab4964e033c1,om Caputi <tcaputi@datto.com>, 2018-12-06 12:47:23 -0500,8178, ensure dsl scan prefetch queue emptied patch simply ensures scn emptied kernel module unloaded scanning completes reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com signed tom caputi tcaputi datto.com close 8178,,
2200,b53cb02d925258ada06282d7dc4223a251edb5cb,oli10K <loli10K@users.noreply.github.com>, 2018-12-05 18:33:52 +0100,8167, fix zfs receive message destination snapshot receiving send stream forced rollback dataset snapshot zfs suggests said snapshot must removed successfully receive stream however message misleading print dataset name instead one snapshot sudo zfs snap recvfs snap orig sudo zfs recv recvfs sendstream receive new filesystem stream destination snapshot recvfs must destroy overwrite change simply restores snapshot name error message reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8167,,
2201,2aa398f3aa907b71e1f827aec8e59d5dd081cb6f,en Wolsieffer <lopsided98@users.noreply.github.com>, 2018-12-05 12:31:44 -0500,8180, use autoconf variable preprocessor fix build cross compiling preprocessor might prefixed reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed ben wolsieffer benwolsieffer gmail.com close 8180,,
2202,e3c85c0938c5d878927fcb812792b68fd056b188,om Caputi <tcaputi@datto.com>, 2018-12-05 12:30:28 -0500,8171, move assert dump_dir zdb one line patch move assert function dump_dir error check ensures ran correctly ensures zdb dump error actually caused problem opposed one symptom reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8171,,
2203,78e21394679ed7435f9b0d10a56ce4f679c680fe,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-05 09:29:33 -0800,8172, fix dnode_hold freeing dnode behavior commit 4c5b89f59 refactored dnode_hold process accidentally introduced slight change behavior intended required behavior zpl consumer declares intent free dnode dnode_hold immediately start failing updated code return failure freed set must return enoent set must return eexist issue uncovered ztest_remap attempted remap freeing object skipped described comment reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8172,,
2204,c5eea0ab9c0ce31b172eac948c32a6cea5d0965f,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-04 10:17:54 -0800,8147, fix zpool list alignment verbose output zpool list correctly aligned due difference vdev name length minimally update code correct alignment using strategy employed zpool status missing dash added empty default column vdev state printed vdevs reviewed tom caputi tcaputi datto.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7308 close 8147,,
2205,a0cc3726ed0b14ce43b0cfd4af4b703536a587c6,erraTech <TerraTech@users.noreply.github.com>, 2018-12-04 09:57:29 -0800,8151, zfs functions.in is_mounted always return read line ... done loop run piped subshell therefore return would cause return is_mounted function case function always return fix return subshell successful match match return negating final return value reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed terratech terratech close 8151,,
2206,fedef6dd592cf6e83ab8fc8b81e5407d64f79996,om Caputi <tcaputi@datto.com>, 2018-12-04 12:54:05 -0500,8162, fix ztest deadlock spa_vdev_remove patch corrects issue spa_vdev_remove would call holding spa config lock function may decide block next txg current one seems full however since thread holding config log txg sync thread progress system end deadlocked patch simply move call outside config lock reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8162,,
2207,0b606cb33fd1c43a4eea416e48d81127373c20ea,om Caputi <tcaputi@datto.com>, 2018-12-04 12:43:31 -0500,8154, fix ztest deadlock patch fix small race condition could result deadlock call spa_vdev_remove may eventually call spa_reset_logs attempt call zil_close happening may fail asserts zilog_is_dirty zilog patch simply add locking correct issue reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8154,,
2208,bdbd5477bcba03b1df1e02b3b89e795c99e2f4c8,OLi <loli10K@users.noreply.github.com>, 2018-12-04 18:38:55 +0100,8121, fix assert zfs_receive_one commit fix following assert zfs_receive_one receiving send stream root dataset option sudo zfs snap source snap sudo zfs send source snap sudo zfs recv destination recv chopprefix drrb drr_toname assert 3804 zfs_receive_one reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed loli10k ezomori.nozomu gmail.com close 8121,,
2209,7c9a42921e60dbad0e3003bd571591f073860233,rian Behlendorf <behlendorf1@llnl.gov>, 2018-12-04 09:37:37 -0800,8161, detect error device removal detect error device removal device removal verify checksum individual block device removal reasonably detect hard error leaf vdevs failure perform error checking result device removal completing successfully moving data permanently corrupt pool situation faulted degraded vdevs configuration shown removal mirror permanently corrupt pool device removal preferentially copy data vdev1 vdev3 vdev2 vdev4 case result nothing copied since one vdev group unavailable however device removal complete successfully since error ignored tank degraded mirror degraded var tmp vdev1 faulted external fault var tmp vdev2 online mirror degraded var tmp vdev3 online var tmp vdev4 faulted external fault issue resolved updating source child selection logic exclude unreadable leaf vdevs additionally unwritable destination child vdevs never succeed skipped prevent generating large number write error situation individual hard error removal unexpected hard error encountered either reading writing child vdev entire removal operation cancelled may possible reconstruct data removal guaranteed strictly safe thing cancel removal future improvement may want instead suspend removal process allow damaged region retried work left another time hard error removal process expected exceptionally rare reviewed serapheim dimitropoulos serapheim delphix.com reviewed tony hutter hutter2 llnl.gov reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov issue 6900 close 8161,,
2210,c40a1124e1d1010b665909ad31d2904630018f6f,om Caputi <tcaputi@datto.com>, 2018-11-28 23:47:09 -0500,8105, fix consistency ztest currently boolean flag protect test may run successfully occur time unfortunately event ztest middle device removal decides issue sigkill device removal automatically restarted without setting flag pool imported next run patch corrects ensuring progress removal completed running test import patch also make small change prevent race condition involving creation destruction spa since field protected lock check may run concurrently setting unsetting field updated check spa instead significant change longer account flight work done since could result null pointer dereference reviewed matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8105,,
2211,c71c8c715b7a4f6b842f8f04c18a93086012e2a0,OLi <loli10K@users.noreply.github.com>, 2018-11-28 20:29:57 +0100,8150, zfs_dbgmsg safe every context commit reverts using printk instead zfs_dbgmsg log message vdev_disk_error necessary latter called interrupt context allowed sleep unfortunately zfs_dbgmsg performs allocation calling kmalloc km_sleep flag may result following oops bug scheduling atomic swapper 0x10000100 call trace irq dump_stack 0x19 0x1b ... spl_kmem_alloc 0xdf 0x140 spl kmem_alloc size km_sleep __dprintf 0x69 0x150 zfs kmem_cache_free 0x1e2 0x200 0x5f 0x70 zfs 0x48 0x70 zfs bio_endio 0x67 0xb0 0x90 0x360 ... 0xdc 0x140 0x132 0x160 0x96 0xc0 __do_softirq 0xf5 0x280 call_softirq 0x1c 0x30 do_softirq 0x65 0xa0 irq_exit 0x105 0x110 do_irq 0x56 0xf0 0x162 0x162 eoi 0x54 0xd0 0xde 0x230 arch_cpu_idle 0xe 0xb0 0x14a 0x1e0 start_secondary 0x1f7 0x270 start_cpu 0x5 0x14 reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8137 close 8150,,
2212,cef48f14da6eec8a9095a0272f1cd7d9d60ca476,om Caputi <tcaputi@datto.com>, 2018-11-28 13:12:08 -0500,8111, remove race scrub resilver test currently several test zfs test suite attempt test scrub resilver behavior occasionally fail big reason test use combination zinject attempt slow operation enough verify test command method work time provides guarantee lead flaky behavior patch add new tunable ensures scan make progress guaranteeing test run without racing patch also change match new tunable provides consistency two similar tunables ensures tunable misbehave bit system reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed tony hutter hutter2 llnl.gov signed tom caputi tcaputi datto.com close 8111,,
2213,00369f333809c2d38629abd8ff1fe0383ccd5154,OLi <loli10K@users.noreply.github.com>, 2018-11-27 18:39:37 +0100,8152, zts fix found error commit fix several found error caused calling undefined incorrect shell function following zfs test suite group alloc_class channel_program lua_core channel_program synctask_core cli_root zpool_import cli_user misc reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed bunder2015 omfgbunder gmail.com signed loli10k ezomori.nozomu gmail.com close 8152,,
2214,62ee31adcebe64a1b7cdf1225356108a924c595a,ich Ercolani <Rincebrain@gmail.com>, 2018-11-26 13:23:58 -0500,8153, fix typo update zfs module parameter reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed bunder2015 omfgbunder gmail.com signed rich ercolani rincebrain gmail.com close 8153,,
2215,8005ca4f749f71397197292452ca539a25286b89,rian Behlendorf <behlendorf1@llnl.gov>, 2018-11-20 10:37:49 -0800,8116, move strlcat strlcpy strnlen move strlcat strlcpy source file libspl string.h header changing compatibility function static inline function included needed without requiring linking libspl.so library remove strnlen barely used source provided glibc since v2.10 finally convert four instance strncpy strlcpy causing build warning compiling gcc 8.2.1. example function zfs_destroyâ 651 error strncpyâ specified bound 4096 equal destination size werror stringop truncation void strncpy zc.zc_name dataset sizeof zc.zc_name  reviewed olaf faaland faaland1 llnl.gov reviewed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 8116,,
2216,0cd5c941d097ec170177e1a5f97f08ebd32eff85,OLi <loli10K@users.noreply.github.com>, 2018-11-20 19:22:53 +0100,8133, zpool allow split whole disk device change allows zpool split work whole disk device update zfs test suite new script exercise functionality reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6643 close 8133,,
2217,bd9c195805bd3ccecac87acfc5c962d859005d8f,hristian Schwarz <me@cschwarz.com>, 2018-11-20 18:59:43 +0100,8134, man zfs.8 document received property source reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed richard laager rlaager wiktel.com signed christian schwarz cschwarz.com close 8134,,
2218,70621ff20eb9dab94dde5e1c5cba7113e4cb7036,ohn Wren Kennedy <jwk404@gmail.com>, 2018-11-20 10:51:42 -0700,8136, zts fix parsing zpool status checksum test consumes output using read assigning field variable problem come vdev marked degraded appends extra field line cause trailing text treated part cksum variable using awk instead read allows extract checksum error count output whether vdev degraded reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed john wren kennedy john.kennedy delphix.com close 8136,,
2219,ebb873590173fe8b98b4b1b48074925c89245aa0,OLi <loli10K@users.noreply.github.com>, 2018-11-20 18:47:58 +0100,8139, zts checksum test group need lscpu change add lscpu list command used zfs test suite required checksum test group read cpu frequency used edonr skein sha2 performance test reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed loli10k ezomori.nozomu gmail.com close 8139,,
2220,a10d50f999511d304f910852c7825c70c9c9e303,ebastien Roy <seb@delphix.com>, 2018-11-05 08:40:05 -0700,8092, openzfs 8115 parallel zfs mount porting note use thread pool tpool api instead introducing taskq interface libzfs use pthread_mutext lock mutex_t available ignore alternative libshare initialization since openzfs 7955 present zfsonlinux authored sebastien roy seb delphix.com reviewed matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brad lewis brad.lewis delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed prashanth sreenivasa pks delphix.com authored brian behlendorf behlendorf1 llnl.gov approved matt ahrens mahrens delphix.com ported brady don.brady delphix.com openzfs issue http www.illumos.org issue 8115 openzfs commit http github.com openzfs openzfs commit a3f0e2b569 close 8092,,
2221,af2e8411dacbc694b1aaf9074e68a9d12270e74c,rian Behlendorf <behlendorf1@llnl.gov>, 2018-11-12 11:57:03 -0800, , tag 0.8.0 rc2 signed brian behlendorf behlendorf1 llnl.gov,,
2222,eb1a0b617448a8cb5d83a0f63102a7b24dc15e70,pande <github@tripleback.net>, 2018-11-11 21:23:11 -0500,8117, allow space pool name cmdline argument 8114 quoted encryptionroot parameter ensure lose space unlocking root filesystem chance space name unfortunately dracut initramfs tool actually get quote cmdline use root zfs root pool filesystem name script still see root zfs root quotation mark reserved character zfs used placeholder space kernel cmdline way root zfs root pool filesystem name properly expand replacing character sed posix compliant method reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed kash pande kash tripleback.net issue 8114 close 8117,,
2223,c8fd652ce7abe85c5238356248d1918ea9ff5ff8,OLi <loli10K@users.noreply.github.com>, 2018-11-12 03:09:00 +0100,8120, fix coverity defect cid 184285 cid 184285 read pointer free use_after_free patch fix use free moving kmem_free call end function reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed loli10k ezomori.nozomu gmail.com close 8120,,
2224,ecd3728b264b94de239932555b7046f1ddb936b2,rian Behlendorf <behlendorf1@llnl.gov>, 2018-11-11 18:06:36 -0800,8119, fix systemd spec file macro ensure _unitdir _presetdir _modulesloaddir macro always defined set expected default value pas option configure package resulting file location additionally set conversion python complete may built cleanly mock reviewed neal gompa ngompa datto.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7567 close 8119,,
2225,0500bfd0b9f1393af5bae274551147c5b31e7ccc,arrett Fields <ghfields@gmail.com>, 2018-11-09 14:30:09 -0500,8093, make initramfs tool script encryption aware changed decrypt_fs zfs command load key plymouth case code based contrib dracut 90zfs zfs lib.sh.in systemd case based contrib dracut 90zfs zfs load key.sh.in cleaned misspelling available throughout code style fix single quote encryptionroot changed decrypt_cmd eval decrypt_cmd reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed richard laager rlaager wiktel.com signed garrett field ghfields gmail.com close 8093,,
2226,d48091de81e5eab2aa32d7a52db4f147bd813523,oli10K <ezomori.nozomu@gmail.com>, 2018-09-18 23:45:52 +0200,7926, zed detect offline physically removed device commit add new test case zfs test suite verify zed detect device physically removed running system device offlined spare available pool implement using existing libudev functionality without relying solely kernel module capability observed unreliable kernel reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed loli10k ezomori.nozomu gmail.com close 1537 close 7926,,
2227,13c59bb76b2f56db9f3ff6597d8a865347158e2c,pande <github@tripleback.net>, 2018-11-09 12:32:01 -0500,8114, add quotation encryptionroot add quotation encryptionroot avoid breaking system space name reviewed bunder2015 omfgbunder gmail.com reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed kash pande kash tripleback.net related 8093 close 8114,,
2228,ad796b8a3b2565bcd9c7460b7bf9154e4850ca93,ony Hutter <hutter2@llnl.gov>, 2018-11-08 16:47:24 -0800,6885, add zpool status slow parseable patch add new slow column zpool status show number vdev slow number complete zio_slow_io_ms millisecond also add new parsable flag display exact value name state read write cksum slow testpool online mirror online loop0 online loop1 online reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tony hutter hutter2 llnl.gov close 7756 close 6885,,
2229,877d925a9e816337bb62ee61d564118db0181477,eorge Melikov <mail@gmelikov.ru>, 2018-11-09 03:17:12 +0300,8045, update value disabled disabled default update code test reflect documentation minor cleanup reviewed gregor kopka gregor kopka.net reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 7835 close 8045,,
2230,d8244d34bdc3e7b864e0152b55477fa61dae3e90,om Caputi <tcaputi@datto.com>, 2018-11-07 19:59:27 -0500,8088, zts fix reenable zfs_rename test flaky past missing call ensure zvols creates present running whenever happened would also fail first test would leak zvol clone know clean patch fix root cause reenables test also fix minor grammar error reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 5647 close 5648 close 8088,,
2231,c2bcfa71f40beb87d2a13f42193487e31f077137,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-11-07 19:54:08 -0500,8081, zts fix test linux place file mount point folder considered busy fix loop directory testdir add linux specific code test overlay reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 4990 close 8081,,
2232,d7bda38c762f7611f7f3588f762cd40dcd31a1c6,ony Hutter <hutter2@llnl.gov>, 2018-11-07 15:48:24 -0800,8102, add buildrequires gcc make elfutils libelf devel add buildrequires gcc make elfutils libelf devel spec file gcc packaging requirement awhile http wiki packaging c_and_c additional buildrequires allow mock build fedora reviewed neal gompa ngompa datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 8095 close 8102,,
2233,a2d88f778a31111fcf98ecf3a690888bab07055e,om Caputi <tcaputi@datto.com>, 2018-11-07 18:46:50 -0500,8094, fix zilog_is_dirty assert ztest ztest occasionally hit assert zilog_is_dirty zil_close caused interaction thread first ztest_run wait test thread complete close associated dataset soon thread join time test may attempt remove slog open dirty reset log every dataset pool including thread patch simply ensures always join test thread closing datasets reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8094,,
2234,20eb30d08e24c2240a5d66e2e62893e784f586af,om Caputi <tcaputi@datto.com>, 2018-11-07 18:44:56 -0500,8086, fix divide zero indirect split damage patch simply ensures hit divide zero exception split child valid data normal reconstruction code path already check reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8086,,
2235,fde25c0a87ea7e2d4438485cd55646a91b99c4b4,om Caputi <tcaputi@datto.com>, 2018-11-07 18:44:14 -0500,8085, fix dirtying vdev config spa patch simply corrects issue could attempt dirty vdev config even spa elligable writing reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8085,,
2236,f44ad9297da6e638482232636e9d63302b96f7e9,om Caputi <tcaputi@datto.com>, 2018-11-07 18:40:24 -0500,8084, replay log starting ztest worker patch ensures log replayed datasets prior starting ztest worker ensures call vdev_offline log device fail due log device required replay patch also fix small issue found testing doe check dataset specified encryption root check present libzfs however reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8084,,
2237,ac53e50f799b39d9cd04e5ecc0a6552c9490c84a,om Caputi <tcaputi@datto.com>, 2018-11-07 18:38:10 -0500,8083, fix vdev removal finishing race patch fix race condition end hold svr_lock would race destroys lock called asynchronously via reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 6900 close 8083,,
2238,4021ba4cfaa861602ae75d45713224d5a7866004,om Caputi <tcaputi@datto.com>, 2018-11-07 18:33:17 -0500,8082, make recursive vdev_clear call non leaf vdev setup deferred resilver however function currently written handle leaf vdevs bug introduced deferred resilvers 80a91e74 patch make function recursive find appropriate vdevs resilver set  reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 7732 close 8082,,
2239,95692927f28479c2d3cf0c1e60ad278c8748377c,on Brady <don.brady@delphix.com>, 2018-11-06 18:47:52 -0700,8097, fix libudev dependency libzutil zfs able build without libudev installed recent change libzutil inadvertently broke make libudev code conditional zutil_import.c resolve build failure reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brady don.brady delphix.com close 8097,,
2240,f0f978654581cea4cc042e7f185e1843d727acdb,OLi <loli10K@users.noreply.github.com>, 2018-11-06 19:14:56 +0100,8079, zpool bogus error invalid dedupditto value provided invalid dedupditto value zpool print misleading error message sudo zpool set dedupditto set property property dedupditto defined fix printing meaningful error description unsupported dedupditto value reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 8079,,
2241,09b85f2dedfae2f15fed3140ffb3246bef36da97,rian Behlendorf <behlendorf1@llnl.gov>, 2018-11-05 11:53:49 -0800,8080, ztest reduce gangblock creation order validate gang block code ztest configured artificially force fraction large block written gang block default setting chosen write block 32k larger using gang block confluence unrealistically large number gang block aggressive fault injection done ztest split segment reconstruction logic introduced device removal resulted following type failure zdb bccsv ... exit code specifically zdb unable open pool unable reconstruct damaged block manual investigation multiple failure clearly showed block could reconstructed however due large number damaged segment could done allotted time furthermore large number gang block determined reason unrealistically large number damaged segment order make situation likely change increase forced gang block size 64k reduces frequency block reviewed matthew ahrens mahrens delphix.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8080,,
2242,e89f1295d4faa88bb05a62c8dd5f781657db5955,on Brady <don.brady@delphix.com>, 2018-11-05 12:22:33 -0700,8050, add libzutil libzfs libzpool consumer add libzutil utility function common libzfs libzpool consumer libzfs_import.c remove need utility link libzpool libzfs reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 8050,,
2243,6644e5bb6e1a6c25c5006c819abf93c7bb662e80,ichard Elling <Richard.Elling@RichardElling.com>, 2018-11-01 15:54:55 -0700,8057, update zfs events.5 info psarc 2009 497 update zfs events.5 info psarc 2009 497 regarding ereport field also update zio_stage_ zio_flag_ description match current source reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 8057,,
2244,04a88fc00cce9f0744d7e815cbe0ced4dd009b75,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-10-31 19:58:43 -0400,8069, zts fix posix acl test pas make sure test proper include file make sure underlying chmod style permission interfere acls reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 8069,,
2245,58aeb87a8f69019487457460a5d7c823910fc8ff,eorge Melikov <mail@gmelikov.ru>, 2018-10-31 20:00:06 +0300,8071, zts change cat speedup better use ksh bash built method rather spawn new process every time reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com signed george melikov mail gmelikov.ru close 8071,,
2246,9553c533a635bf39697b0b54f4751580f6d2590d,atthew Ahrens <mahrens@delphix.com>, 2018-10-31 09:58:17 -0700,7908, copy small subobj delete snapshot consolidate bpobj together longer need keep entry separate bucket done constant time including sub bpobj reference parent bpobj many snapshot deleted may many sub bpobj usually sub bpobj contain many compared small payload sub bpobj relatively heavyweight since object common scenario long lived pool vast majority object small sub bpobj improve situation consolidating bpobj together copy content small bpobj parent delete enqueued bpobj rather including reference since copying limited size one block consolidation still constant time though larger constant due reading one block enqueued bpobj idea mechanism similar handle sub subobj including sub bpobj reference sub bpobj block sub sub bpobj list sub sub bpobj copied parent bpobj list sub bpobj reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul zuchowski pzuchowski datto.com signed matthew ahrens mahrens delphix.com close 8053 issue 7908,,
2247,82c0a050fcaa50c2d35e562858fa5c95e05caecd,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-31 11:50:42 -0500,8074, linux 4.20 compat commit torvalds linux 976516404 removed function several others caller expected use update gethrestime_sec wrapper accordingly reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8074,,
2248,9042f6033a72e2ffbd4f92af7de83ad0f81f1dfc,d Islam <mdnahian@outlook.com>, 2018-10-30 12:47:50 -0400,8047, improve snapshot listing error message provide hint error message listing snapshot single dataset fails using needed list snapshot requiring listing snapshot single dataset make confusing change make error message clear reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed islam mdnahian outlook.com close 8047,,
2249,0a544c174d54d9adcea2faf5817596174582139e,erapheim Dimitropoulos <serapheimd@gmail.com>, 2018-10-30 09:46:18 -0700,8001, zdb doe work linux used minor bug introduced port feature openzfs zol patch fix issue caused minor ordering original code reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed serapheim dimitropoulos serapheim delphix.com close 8001,,
2250,63a77ae3cff2eea8f7d92c5ab2ab99af664b34a5,regor Kopka <mailfrom-github@kopka.net>, 2018-10-30 00:18:20 +0100,8058, added column definition arcstat.py grow arc grow enabled arc_no_grow free arc free memory arc_sys_free need arc reclaim need arc_need_free fixed alignment issue mread wrong width reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed gregor kopka gregor kopka.net close 8058,,
2251,bea75783565eeef4a083892dd4ee28106b092810,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-29 15:05:14 -0500,8051, zts fix test root cause failure udev notify zed newly created partition link created handle allowing auto replace briefly wait udev confirms link exist distill test case essential run reliably need check new disk physical location automatically brought online added system completes replacement process pool online healthy need remove scsi_debug module exporting pool disk zeroed removed added system new disk reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 8051,,
2252,b74f48fe1b15b4958da35413edd89060df7a1c30,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-24 23:26:08 -0700,8056, fix flake8 invalid escape sequence warning http flake8rules rule w605.html python 3.6 backslash character pair valid escape sequence generates although eventually become syntaxerror several python release note float_pobj simply removed arcstat.py since entirely unused reviewed john kennedy john.kennedy delphix.com reviewed richard elling richard.elling signed brian behlendorf behlendorf1 llnl.gov close 8056,,
2253,b3d7725c943292df72fa6812177f912bc58b302d,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-24 14:48:14 -0700,8054, remove zfs_gitrev.h generated file accidentally included previous commit 80a91e7 included repository reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov close 8054,,
2254,8cb119e3dc0ac6c90b1517fbadc021b7e9741fc6,om Caputi <tcaputi@datto.com>, 2018-10-23 15:17:18 -0400,8010, fix small bug cached dsl_scan_phys_t patch corrects small bug scn scn_phys_cached properly updated match primary copy needed first resulted pause state properly updated second resulted cached version completely zeroed even primary reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2255,7d658d29cf4b6b037156dfc29d298a7abb8afc86,om Caputi <tcaputi@datto.com>, 2018-10-22 09:54:01 -0400,8010, fix waiting spa created sync task initiated via since task may run spa_vdev_remove return must wait least txg ensure removal struct created reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2256,7ab96299e5b961c7d4c29344927f2c59e914545e,om Caputi <tcaputi@datto.com>, 2018-10-19 18:10:23 -0400,8010, fix enxio ztest patch fix small issue code path would hit ebusy error would occur thread attempted call time case loser would receive error code ignored instead floated caller ended resulting enxio returned  reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2257,4a7eb69a5ab0027a0f347a0cdd37b0275fcfecad,om Caputi <tcaputi@datto.com>, 2018-10-18 16:53:27 -0400,8010, fix ztest deadman panic indirect vdev damage patch fix issue ztest deadman thread would trigger panic reconstructing artifically damaged block would take long reconstruct patch simply limit often ztest inflicts split block damage many segment damage doe reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2258,5e0bd0ae056e26de36dee3c199c6fcff8f14ee15,om Caputi <tcaputi@datto.com>, 2018-10-18 04:13:07 -0400,8010, fix issue scanning dedup block scan end patch fix issue discovered ztest could add dsl scan queue scan finished required work scan marked complete caused scan spin indefinitely without ending reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2259,a783dd96843699744e0543b579b5f50c9023432f,om Caputi <tcaputi@datto.com>, 2018-10-16 17:00:55 -0400,8010, fix lock inversion txg_sync_thread patch fix lock inversion issue txg_sync_thread code would attempt hold spa config lock reader holding tx_sync_lock race spa_vdev_remove attempt hold tx_sync_lock assign new via holding spa config lock writer reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com authored brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 8010,,
2260,ab4c009e3d0cf794bbe84aff3b9ac203eaed03c7,om Caputi <tcaputi@datto.com>, 2018-10-15 15:14:22 -0400,8010, fix dbgmsg printing ztest zdb patch resolve problem option zdb ztest would cause code call __dprintf print zfs_dbgmsg output function properly wired add message dbgmsg log userspace message simply dropped patch also try add degree distinction dprintf print directly stdout zfs_dbgmsg add message internal list dumped  addition patch corrects issue ztest used global variable decide whether dump dbgmsg buffer crash work ztest spin instance using execv copy global variable new process option moved already exists interprocess communication patch also change use write call instead printf fail used signal handler reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2261,c04812f964a2a79ec501fb1ba995ef333ff79172,om Caputi <tcaputi@datto.com>, 2018-10-11 16:38:27 -0400,8010, fix assert zil_create ztest patch corrects assert zil_create true call zio_alloc_zil doe fail reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2262,9410257800789cde96abf135663930d0f44661e6,om Caputi <tcaputi@datto.com>, 2018-10-10 16:48:33 -0400,8010, fix random failure zloop test failing buildbot last week various failure due fact thread stopped performing pool import export test patch simply corrects reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 8010,,
2263,e871a8f0584a3259c342f8e3e817159600302832,eorge Melikov <mail@gmelikov.ru>, 2018-10-24 06:06:40 +0300,8052, allow use pool guid root pool helpful pool name need use one main case twin server meanwhile software requires name pool e.g proxmox reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru signed igor guardianâ lidin moscow russia close 8052,,
2264,3449243b6d0c7f557f1659602bad1b0a9a774fbf,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-23 19:53:14 -0700,8043, zts update project quota test e2fsprogs v1.44.1 provides lsattr added new attribute ext3 called verity reported project quota flag character lsattr output update use pattern match expected output case reviewed john kennedy john.kennedy delphix.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 8043,,
2265,da4f331b4136a50e41ce3bb639ad48e519611210,atthew Ahrens <mahrens@delphix.com>, 2018-10-22 12:23:30 -0700,8034, make gitrev reliable build method gitrev unnecessarily set unknown improve changing gitrev use git describe always long dirty get revision even tag match always print hash even exactly match tag long uncommitted change appends dirty rather failing dirty reviewed george melikov mail gmelikov.ru reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew thode prometheanfire gentoo.org signed matthew ahrens mahrens delphix.com close 8034,,
2266,ae3d8491427343904c66d69ba94731553727eb26,aul Dagnelie <pcd@delphix.com>, 2018-05-23 10:32:31 -0700,8042, openzfs 9688 aggsum_fini leak memory porting note fix applied original 37fb3e43 commit change ported linux authored paul dagnelie pcd delphix.com reviewed serapheim dimitropoulos delphix.com reviewed matt ahrens matt delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9688 openzfs commit http github.com openzfs openzfs commit 29bf2d68be close 8042,,
2267,9b2266e3d80994b21c452f67856010b566420831,erapheim Dimitropoulos <serapheim@delphix.com>, 2018-06-16 17:39:14 -0700,8037, openzfs 9682 page fault opening pool authored serapheim dimitropoulos serapheim delphix.com reviewed brad lewis brad.lewis delphix.com reviewed matt ahrens matt delphix.com reviewed sara hartse sara.hartse delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 9682 openzfs commit http github.com openzfs openzfs commit ade2c82828 close 8037,,
2268,ee900344f2f81cd3cc8dda95e8e8e41497d58001,erapheim Dimitropoulos <serapheim@delphix.com>, 2018-05-15 10:43:25 -0700,8039, openzfs 9690 metaslab vdev space map flushed removal authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens matt delphix.com reviewed brad lewis brad.lewis delphix.com reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9690 openzfs commit http github.com openzfs openzfs commit 4e75ba6826 close 8039,,
2269,d637db98e17e05c86afbf2e91793c12daffbf421,atthew Ahrens <mahrens@delphix.com>, 2018-05-18 15:56:13 -0700,8041, openzfs 9681 ztest failure due spa_rename authored matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed serapheim dimitropoulos delphix.com reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9681 openzfs commit http github.com openzfs openzfs commit 6aee0ad7 close 8041,,
2270,80a91e7469669e2a5da5873b8f09a752f7869062,om Caputi <tcaputi@datto.com>, 2018-10-19 00:06:18 -0400,7732, defer new resilvers current one end currently resilver triggered reason existing one running zfs immediately restart existing resilver beginning include new drive cause problem system administrator drive fails another already resilvering case optimal thing reduce risk data loss wait current resilver end immediately replacing second failed drive allows system operate two incomplete drive minimum amount time patch introduces resilver_defer feature essentially doe admin without forcing wait monitor resilver manually change requires disk feature since must mark drive part deferred resilver vdev config ensure assume done resilvering existing resilver completes reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed mmaybee signed tom caputi tcaputi datto.com close 7732,,
2271,9f438c5f948c0072f16431407a373ead34fabf6e,llan Jude <allanjude@freebsd.org>, 2018-10-18 14:14:04 +0300,8036, openzfs 9862 fix typo comment vdev_impl.h authored allan jude allanjude freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov approved robert mustacchi joyent.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 9862 openzfs commit http github.com openzfs openzfs commit 84927f52 close 8036,,
2272,8d431940038c4a668abdac40b5853b269d49253e,atthew Thode <mthode@mthode.org>, 2018-10-17 14:06:05 -0500,8025, allow copy builtin work modified source script make_gitrev.sh set command failed would fail cause copy builtin fail copy builtin also set commit also simplifies script make_gitrev.sh always write file using cleanup function also simplifies area script well making much shorter reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matthew thode mthode mthode.org close 8022 close 8025,,
2273,2e55034471413fb668d0d910b2c083610b386127,OLi <loli10K@users.noreply.github.com>, 2018-10-17 20:21:07 +0200,7999, zpool allow sharing spare device among pool zfs allows default sharing spare device among different pool commit simply restores functionality disk device add additional test case zfs test suite prevent future regression reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7999,,
2274,49394a7708e9de4f67e4cd4fb34b59b64ec7aeb1,atthew Ahrens <mahrens@delphix.com>, 2018-10-17 10:31:38 -0700,8032, linux doe have_smb_share since linux doe kernel smb server need code manage reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling signed matthew ahrens mahrens delphix.com close 8032,,
2275,5fbf85c4e2a162723bb90ba5723ac4b0837217b9,atthew Ahrens <mahrens@delphix.com>, 2018-10-17 10:30:08 -0700,8031, linux doe have_dnlc since linux doe directory name lookup cache need code manage reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling signed matthew ahrens mahrens delphix.com close 8031,,
2276,bfcb82cb5426e75799705938a9d17deb6cfaca82,under2015 <omfgbunder@gmail.com>, 2018-10-17 13:25:38 -0400,8029, advise user retain issue template occasionally get issue user delete template advise user issue may closed fill template really need information also updating template drop unneeded approval toggle using issue label status tracking reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed matthew ahrens mahrens delphix.com signed bunder2015 omfgbunder gmail.com close 8029,,
2277,d52d80b700229e879fe757c989c3bcd3a3a42f2a,aul Dagnelie <paulcd2000@gmail.com>, 2018-10-16 11:15:04 -0700,7981, add type featureflags zfs boolean featureflags use thus far zfs extremely useful take advantage zap layer interesting data true false value stored featureflag redacted send receive used store list redaction snapshot redacted dataset change add ability zfs store type boolean featureflag implemented type uint64_t array also modifies interface around dataset feature accomodate new capability add new function increase encapsulation functionality used redacted send receive feature reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 7981,,
2278,779a6c0bf6df76e0dd92c1ccf81f48512b835bb0,lbsmart <wgqimut@gmail.com>, 2018-10-17 02:11:24 +0800,7939, deadlock mm_sem assign zfs_write page fault bug time sequence thread zfs_write assign txg process thread mmap page fault mean mm_sem hold occurred zfs_dirty_inode open txg failed wait previous txg completed thread call uiomove write however page fault occurred uiomove mean need mm_sem mm_sem hold thread stuck complete txg complete thread thread deadlocked reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed grady wong grady.w xtaotech.com close 7939,,
2279,b2030e5d51ec23fced9f54536d97ac09db4e0552,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-15 16:59:28 -0700,7360, add zts report.py python shebang exclusion include zts report.py resolve build failure fedora newer reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 8020 issue 7360,,
2280,0aa5916a30745c131c4e19464027ea793e66603d,atthew Ahrens <mahrens@delphix.com>, 2018-10-12 11:28:26 -0700,7979, openzfs 9847 leaking dd_clones object 7979 openzfs 9847 leaking dd_clones object leaking dd_clones object bug appears around forever thankfully amount space typically involved tiny addition add mechanism zdb find object leaked referenced anywhere porting note added dd_crypto_obj zdb object leak tracking authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported matthew ahrens mahrens delphix.com openzfs issue http illumos.org issue 9847 close 7979,,
2281,27f80e85c2649573af3c3d915baf6d4195538583,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-09 15:42:42 -0700,7921, improved error handling extreme rewinds  function assume way zap_lookup fail requested entry missing common cause cause attemping access damaged zap result error likely scenario accessing damaged zap extreme rewind pool import condition pool expected contain damaged object import code updated handle gracefully getting ecksum error zap pool import far likely therefore behavior call path modified reviewed tim chase tim chase2k.com reviewed matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7809 close 7921,,
2282,d6c745830f2529643f1967e1f8a5d0abacba4585,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-09 15:21:27 -0700,7921, revert allow ecksum reverts commit reviewed tim chase tim chase2k.com reviewed matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7921,,
2283,3c94dd7b7b102d398e70670a36ca29a84e31bc46,ony Hutter <hutter2@llnl.gov>, 2018-10-12 11:13:34 -0700,8014, define timestruc_t lustre compatibility lustre 2.8 possibly version still using timestruc_t removed spl 0.7.10 favor add backwards compatibility define timestruc_t lustre build reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tony hutter hutter2 llnl.gov close 8014,,
2284,5d43cc9a59d61aea37a1236e9d28628856030947,att Ahrens <mahrens@delphix.com>, 2018-10-01 15:13:12 -0700,7980, openzfs 9689 zfs range lock code zpl specific zfs range locking code zfs_rlock.c depends zpl specific data structure specifically znode_t however also used zvol code dummy znode_t pas range locking code clean range locking code generic used equally zpl zvol also used future consumer may need run userland libzpool well kernel porting note added missing sys avl.h include sys zfs_rlock.h removed dbuf within locked range asserts dmu_sync needed ztest doe yet use locked_range_t removed approved tag requirement openzfs commit check prevent needle warning integrating change merged illumos reverted free_list range lock change originally needed defer cv_destroy called immediately cv_broadcast d2733258 safe may need reintroduce logic reverts following two commits reverted squashed change order make easier apply openzfs 9689 d88895a0 removed dummy znode zvol_state e3a07cd0 updated ztest use range lock preserved optimized rangelock comparison function preserved rangelock free list cv_destroy function block waiting process cv_wait scheduled drop reference done ensure safe free condition variable however blocking holding rl_lock mutex result deadlock linux free list introduced defer cv_destroy kmem_free mutex released authored matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed serapheim dimitropoulos delphix.com reviewed george wilson george.wilson delphix.com reviewed brad lewis brad.lewis delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9689 openzfs commit http github.com openzfs openzfs pull 680 external issue dlpx 58662 close 7980,,
2285,50a343d85c04698d51c154375a00994dea81e6db,lek P <alek-p@users.noreply.github.com>, 2018-10-11 00:13:13 -0400,7991, fix changelist mounted dataset iteration commit 0c6d093 caused regression inherit codepath fix restrict changelist iteration mountpoints add proper handling legacy mountpoints reviewed serapheim dimitropoulos delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alek pinchuk apinchuk datto.com close 7988 close 7991,,
2286,5b3bfd86a4acd0fd572802de6eb8bfed322dd470,arrett Fields <ghfields@gmail.com>, 2018-10-10 11:46:22 -0400,8004, check scheduler noop setting noop originally code checked presence sys block queue scheduler write error invalid argument produced trying set noop certain device virtio listed option modification continues check presence sys block queue scheduler also check contains noop option setting noop reviewed richard laager rlaager wiktel.com reviewed tony hutter hutter2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling signed garrett field ghfields gmail.com close 8004,,
2287,2ef0f8c3298ef02a68180fa3b16d84aa810a464a,ony Hutter <hutter2@llnl.gov>, 2018-10-09 20:30:32 -0700,7978, print repairing zpool status historically zpool status print repairing drive error scrub name state read write cksum mypool online mirror online tmp file1 online repairing tmp file2 online tmp file3 online accidentally broken openzfs 9166 zfs storage pool checkpoint d2734cc patch add back reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7779 close 7978,,
2288,0391690583a8c5129477cbdac476130abe4af776,aul Dagnelie <paulcd2000@gmail.com>, 2018-10-09 14:05:13 -0700,7982, refactor dmu_recv file change move bottom half dmu_send.c receive logic kept new file dmu_recv.c doe similarly receive related change header file reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 7982,,
2289,5e8ff25644dfed600b4bdfb201ea6db003b4ad2c,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-08 14:59:34 -0700,8000, fix arc_release refcount update arc_release use arc_buf_size hunk accidentally dropped porting compressed send recv 2aa34383b reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 8000,,
2290,d7e4b30a672c1d7eb77dbbe2cdcf14cac102839a,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-08 14:58:21 -0700,8000, add debugging enabled zfs_refcount_t contains multiple holder using key different ref_counts wrong reference_t may transferred add function like existing zfs_refcount_ _many function match transfer correct refcount_t issue may occur using encryption refcount debugging enabled arc_buf_hdr_t reference hdr b_l1hdr.b_pabd hdr use hdr reference holder unsharing buffer p_abd transferred issue doe impact production build refcount holder tracked reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 7219 close 8000,,
2291,4cbde2ecbf7c6478bac106fadd6a23f53d538262,atthew Ahrens <mahrens@delphix.com>, 2018-10-08 21:57:02 -0700,7965, create proc sys kernel spl gitrev git hash existing mechanism determining code running kernel always correctly report git hash version reported reflect change made since configure run i.e incremental build update version misleading git tag set properly applies modinfo zfs dmesg sys module zfs version complicated requirement existing version generated therefore leaving alone adding new mechanism record retrieve git hash cat proc sys kernel spl gitrev gitrev generated compile time running make including incremental build value output git describe unknown git repo uncommitted change also removing proc sys kernel spl version never useful reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com signed matthew ahrens mahrens delphix.com close 7931 close 7965,,
2292,dfbe26750308d757d20af8eb5aefef49ec65d4a8,atthew Ahrens <mahrens@delphix.com>, 2017-12-12 15:46:58 -0800,7976, openzfs 9617 frequent txg sync cause excessive write inflation porting note renamed changed type consistent dirty module params updated zfs module parameters.5 accordingly authored matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com reviewed brad lewis brad.lewis delphix.com reviewed george wilson george.wilson delphix.com reviewed andrew stormont andyjstormont gmail.com reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9617 openzfs commit http github.com openzfs openzfs commit 7928f4ba close 7976,,
2293,58c0f374f101a37b5e1bb22359f40020f235e008,atthew Ahrens <mahrens@delphix.com>, 2018-10-04 13:11:45 -0700,7984, warn checking program installed make checkstyle silently skip check required program installed e.g shellcheck mandoc therefore developer may realize getting full suite code check also applies specific target like make shellcheck print warning message check skipped due missing tool reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com reviewed prakash surya prakash.surya delphix.com signed matthew ahrens mahrens delphix.com close 7984,,
2294,c23f8d4829ce50e92b60f69b3b80e5301db476b2,atthew Ahrens <mahrens@delphix.com>, 2018-10-04 13:10:10 -0700,7985, add codecheck make target like tooling verifies code style ignoring commit message example code doe need signed order tested current workarounds run git checkstyle ignore commit message error run make cstyle shellcheck flake8 mancheck testscheck make sure list stay updated solution add new make target codecheck doe code check checkstyle simply codecheck commitcheck reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed matthew ahrens mahrens delphix.com close 7985,,
2295,6e8b268875ff2bad66b797d1094a6eb1b694206a,aul Dagnelie <paulcd2000@gmail.com>, 2018-10-03 20:16:45 -0700,7884, fix assert macro expand code reuse definition assert verify macro result expansion argument stringified produce ugly undesirable output reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 7884,,
2296,95542372e62935e91cec430fbadf9420887fc5d8,aul Dagnelie <paulcd2000@gmail.com>, 2018-10-03 15:30:55 -0700,7977, add new fnvlist_lookup_ function reviewed serapheim dimitropoulos delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed paul dagnelie pcd delphix.com close 7977,,
2297,54eb2c410ec8ef9f75c62e3d0e8f53ac8bdb5eea,rakash Surya <prakash.surya@delphix.com>, 2018-09-21 10:54:49 -0700,7941, verify zfs destroy unshare dataset change add new test case zfs test suite verify zfs destroy used shared dataset dataset unshared destroy operation completes reviewed loli10k ezomori.nozomu gmail.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 7941,,
2298,1bf490ba930e7f46a82689fda2618d0f30365fec,rakash Surya <prakash.surya@delphix.com>, 2018-09-21 08:47:42 -0700,7941, fix zfs destroy sharenfs used using zfs destroy dataset using sharenfs automatically exported libzfs dataset automatically unexported workflow appears broken commit change zfs_unmount function modified use mnt.mnt_special field determining mount point unmounted rather mnt.mnt_mountp result mntpt passed value dataset name rather mountpoint thus value used is_shared function via find match since function assumes passed mountpoint incorrectly report dataset shared easily reproduced following command sudo zpool create tank xvdb sudo zfs create sharenfs tank fish sudo zfs destroy tank fish sudo zfs list tank name used avail refer mountpoint tank 97.5k 7.27g 24k tank sudo exportfs tank fish world sudo cat etc dfs sharetab tank fish nfs crossmnt point tank fish filesystem exist still listed exported looking exportfs etc dfs sharetab also note change brings back sync illumos code pertains one line illumos mnt.mnt_mountp used reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov authored george wilson george.wilson delphix.com signed prakash surya prakash.surya delphix.com issue 6143 close 7941,,
2299,c955398b527fd0996cc03b55ba26a4647bd826cd,rad Lewis <brad.lewis@delphix.com>, 2018-03-15 13:47:26 -0600,7975, openzfs 9677 panic panic creating dump device fragmented rpool authored brad lewis brad.lewis delphix.com reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com reviewed prashanth sreenivasa pks delphix.com approved robert mustacchi joyent.com ported behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9677 openzfs commit http github.com openzfs openzfs commit 7341a7d close 7975,,
2300,84ddd4b0629be52ca7c519043cc2d155ac3ef7af,ndrew Stormont <astormont@racktopsystems.com>, 2018-06-17 11:53:29 +0100,7974, openzfs 9616 bogus error attempting set property read pool authored andrew stormont astormont reviewed paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9616 openzfs commit http github.com openzfs openzfs commit f62db44d close 7974,,
2301,52ce99dd617369ff09d8eef8cfd36fa80dbfca4f,om Caputi <tcaputi@datto.com>, 2018-10-03 12:47:11 -0400,7949, refcounted dsl crypto key mapping since native zfs encryption merged fighting series bug come problem key mapping must present operation created destroyed based dataset ownership traditionally allowed leak next txg dataset disowned past attempted solve problem trying ensure datasets disowned ater finished calling txg_wait_synced repeatedly found edge case need squashed code path might incur high number txg syncs patch attempt resolve issue differently adding reference key mapping txg dirtied remove many unnecessary call txg_wait_synced added past ensure need deal problem future reviewed jorgen lundman lundman lundman.net reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7949,,
2302,f65fbee1e7a370db24e1aaa2b7bea7865938b9ae,erry Jelinek <jerry.jelinek@joyent.com>, 2018-08-30 13:13:30 +0000,7973, openzfs 9700 zfs resilvered mirror doe balance read authored jerry jelinek jerry.jelinek joyent.com reviewed toomas soome tsoome me.com reviewed sanjay nadkarni sanjay.nadkarni nexenta.com reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling approved matthew ahrens mahrens delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9700 openzfs commit http github.com openzfs openzfs commit 82f63c3c close 7973,,
2303,cb110f254eaaaaff02d548d4a3f2b561b9cc2a51,uri Pankov <yuri.pankov@nexenta.com>, 2018-08-24 03:36:04 +0300,7972, openzfs 9763 zfs broken formatting allow unallow description porting note two three change upstream patch already applied linux last one required authored yuri pankov yuri.pankov nexenta.com reviewed robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru approved gordon ross gwr nexenta.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9763 openzfs commit http github.com openzfs openzfs commit 8a702e55 close 7972,,
2304,0c6d09361dd8ab83f3193e6d7f398b4d20c9c300,lek P <alek-p@users.noreply.github.com>, 2018-10-02 15:30:58 -0400,7967, changelist able iter mount modified ing mountpoint property instead iterating dataset descendant read proc self mount iterate mounted descendant datasets switched changelist implementation uu_list_ uu_avl_ order reduce changlist code path worst case time complexity reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alek pinchuk apinchuk datto.com close 7967,,
2305,838bd5ff35db04695ba4eadc7fdb2d56ff816ee5,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-01 17:15:57 -0700,7962, zts fix mitigate likelihood newly created volume busy zfs destroy issued waiting udev settle since iron clad fix added test case known list possible failure referenced issue 7961 finally case test doe fail fix cleanup logic subsequent test incorrectly fail reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7961 close 7962,,
2306,424fd7c3e080255935646d2beaa2655c116cc37a,im Schumacher <timschumi@gmx.de>, 2018-10-01 19:42:05 +0200,7963, prefix refcount function zfs_ recent change linux kernel made necessary prefix refcount_add function zfs_ due name collision bring function line avoid future collision prefix refcount function well reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tim schumacher timschumi gmx.de close 7963,,
2307,fc23d59fa09f3cd803438986ba70ffcb32b8a036,atthew Ahrens <mahrens@delphix.com>, 2018-10-01 10:40:11 -0700,7968, remove duplicate macro dsl_dir.h macro added twice value change remove one reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed pavel zakharov pavel.zakharov delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 7968,,
2308,1258bd778e8279a4cd051543827f333fe2daed76,rian Behlendorf <behlendorf1@llnl.gov>, 2018-10-01 10:36:34 -0700,7934, refine split block reconstruction due flaw 4589f3ae number unique combination could calculated incorrectly could result random combination reconstruction used would possible check combination change fix unique combination calculation simplifies reconstruction logic maintaining per segment list unique copy function introduced validate enumeration random reconstruction logic ztest implemented never make known recoverable block unrecoverable reviewed matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com signed brian behlendorf behlendorf1 llnl.gov issue 6900 close 7934,,
2309,d12614521a307c709778e5f7f91ae6085f63f9e0,ohn Gallagher <jgallag88@gmail.com>, 2018-09-26 11:08:12 -0700,7819, fix procfs file backed linked list issue way seq_file interface implemented kstats backed linked list zfs_dbgmsgs certain per pool debugging info account fact seq_file sometimes visit node multiple time result missing message read procfs keep separate state reader file concurrent reader receive incorrect result account fact entry may removed list read syscalls reading file procfs cause system crash change fix issue add procfs_list wrapper around linked list abstract away detail implementing seq_file interface list exposing content list procfs reviewed brady don.brady delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brad lewis brad.lewis delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed john gallagher john.gallagher delphix.com external issue 1211 close 7819,,
2310,3ed2fbcc1ce36fdc516aa11848692a4e4c4a2bc0,regor Kopka <mailfrom-github@kopka.net>, 2018-09-26 20:02:26 +0200,7952, fix flake style warning ran zts report.py test runner.py test test runner bin 2to3 http docs.python.org library 2to3.html checked result fixed maxint maxsize 2to3 missed cmp parameter sorted key version try except wrapping configparser import still python 2.7 system lack compatibility shim reviewed brian behlendorf behlendorf1 llnl.gov signed gregor kopka gregor kopka.net close 7925 close 7952,,
2311,c13060e4787e9578dafad85a47c62457424bec9c,im Schumacher <timschumi@gmx.de>, 2018-09-26 19:29:26 +0200,7932, linux 4.19 rc3 compat remove refcount_t compat torvalds linux 59b57717f blkcg delay blkg destruction writeback finished added refcount_t blkcg structure due refcount_t compatibility code zfs_refcount_t used mistake resolve removing compatibility code replacing occurrence refcount_t zfs_refcount_t reviewed franz pletz fpletz reviewed brian behlendorf behlendorf1 llnl.gov signed tim schumacher timschumi gmx.de close 7885 close 7932,,
2312,7a23c81342df05ace730bd303b4a73854dba43dd,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-26 09:50:58 -0700,7957, fix small sysfs leak zfs_kobj_init called attr_cnt kobj allocated subsequently get freed since free wrapped kobj zko_attr_count conditional split block make sure kobj freed case additionally fix minor spelling mistake typo zfs_kobj_init could also cause leak practice almost certain fail reviewed richard elling richard.elling reviewed tim chase tim chase2k.com reviewed john gallagher john.gallagher delphix.com reviewed brady don.brady delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7957,,
2313,b954e36e512171d94637c709023e4d763b655d91,regor Kopka <mailfrom-github@kopka.net>, 2018-09-26 01:29:16 +0200,7694, zpool iostat remove latency queue scaling bandwidth iop average per second _wait average per request latency queue depth instantaneous measurement end interval according man zpool calculating first two make sense increase total byte number request duration interval second scale amount amount second applying math latter _wait latency queue wrong component value time request get average_time request already absulute number bug lead correct continuous _wait figure latency queue depth zpool iostat duration wrong math cancel nop remove temporal scaling latency queue depth figure reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed gregor kopka gregor kopka.net close 7945 close 7694,,
2314,a7165d7255b71fea5a4b2431ccf915ee4099d613,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-24 17:16:41 -0700,7929, revert fix flake style warning reverts commit accidentally introduced regression version python signed brian behlendorf behlendorf1 llnl.gov issue 7929,,
2315,e897a23eb13bafcf9c38d2fc37ae57a7729d9a02,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-24 17:11:25 -0700,7937, fix statfs bit user space handling bit statfs system call returned field although bit kernel must limited bit eoverflow error returned issue block count since default reported block size 128kib since possible set smaller block size value scaled needed fit bit unsigned long unlike filesystems total possible file count likely overflow calculated based available free space pool order prevent reported value must capped statfs reporting change internal zfs limit reviewed andreas dilger andreas.dilger whamcloud.com reviewed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 7927 close 7122 close 7937,,
2316,36e369ecb847570d6939073663c4e95406223c7f,OLi <loli10K@users.noreply.github.com>, 2018-09-24 21:58:16 +0200,7913, zts fix change simplify test case removing part logic introducing race condition thus causing spurious failure use removal.kshlib instead observed stable reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7894 close 7913,,
2317,b8fd4310c54444eecb66140d99a6156f4353b29b,regor Kopka <mailfrom-github@kopka.net>, 2018-09-24 19:12:59 +0200,7929, fix flake style warning ran zts report.py test runner.py test test runner bin 2to3 http docs.python.org library 2to3.html checked result fixed maxint maxsize 2to3 missed cmp parameter sorted key version reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy jwk404 gmail.com signed gregor kopka gregor kopka.net close 7925 close 7929,,
2318,dda5500853c736aca9ad8c14f7d22cd9d9f9fb36,OLi <loli10K@users.noreply.github.com>, 2018-09-21 18:42:42 +0200,7936, vdev_disk_error print ascii soh debug log currently vdev_disk_error prepends message sent internal zfs debug log kern_warning currently defined follows define kern_soh 001 define kern_warning kern_soh since 001 ascii start header printable result weird character displayed inspecting debug log commit simply remove superfluous prefix passed zfs_dbgmsg reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed loli10k ezomori.nozomu gmail.com close 7936,,
2319,9d489ab3a8bc866f3658c332230aee02b1b2012d,eHackEd <DeHackEd@users.noreply.github.com>, 2018-09-21 12:41:08 -0400,7938, fix reference zpool feature reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed dhe git dehacked.net close 7938,,
2320,7522a260773038ff58c213da3e722d1752655237,OLi <loli10K@users.noreply.github.com>, 2018-09-21 06:10:12 +0200,7900, add limit spa_slop_shift tunable change add limit possible spa_slop_shift value set via sysfs interface accepted value minimum maximum inclusive limit based following value observed 128pb file vdev test pool spa_slop_shift 63.5pib spa_slop_shift 31.8pib spa_slop_shift 15.9pib spa_slop_shift 7.9pib spa_slop_shift 4pib spa_slop_shift 2pib ... spa_slop_shift 4gib spa_slop_shift 2gib spa_slop_shift 1016mib spa_slop_shift 508mib spa_slop_shift 254mib spa_slop_shift 128mib spa_slop_shift 128mib spa_slop_shift 128mib reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7876 close 7900,,
2321,145c88fb7bfb7e5941a0994daa3d9f4401a167a1,ichard Yao <ryao@gentoo.org>, 2018-09-18 15:03:47 -0400,7918, add news file received request news file need handled tony brian least provide one provides link github user expect news file package know release information reviewed neal gompa ngompa datto.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 7918,,
2322,e0b7ff46c98ef19afe58b21df9255d243de1a662,OLi <loli10K@users.noreply.github.com>, 2018-09-18 18:43:09 +0200,7917, zstreamdump dump core printing truncated nvlist change prevents zstreamdump crashing trying print invalid nvlist data drr_begin record truncated send stream reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7917,,
2323,81155b296d88b6db1f526832e3e855e3b3b20fc9,eHackEd <DeHackEd@users.noreply.github.com>, 2018-09-18 11:59:47 -0400,7920, fix guid zpool feature reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed dhe git dehacked.net close 7920,,
2324,0ff15c275321584f889e95be5578722b9ce26c49,under2015 <omfgbunder@gmail.com>, 2018-09-18 11:58:15 -0400,7915, add new wiki page contributing new wiki page added user may new git github adding link contributing reviewed richard elling richard.elling reviewed gregor kopka gregor kopka.net reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7923 close 7915,,
2325,48b0b649fd49fa2c725237ee4d054521769e0a86,regor Kopka <mailfrom-github@kopka.net>, 2018-09-18 17:55:33 +0200,7916, man page fix zpool zfs optional parameter man page zpool zfs get command listed pool dataset parameter required optional fixed reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed gregor kopka gregor kopka.net close 7916,,
2326,2ced3cf0b2c5cc84885bd4c8c07878145a94c036,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-17 17:28:18 -0700,7893, clarify zpool remove restriction update zpool clarify type vdevs may safely removed existence top level raidz device part primary pool prevent device removal reviewed matthew ahrens mahrens delphix.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7880 close 7893,,
2327,5140a58f3b2a25ce24ff9ae2b01277cd6c64f5ad,OLi <loli10K@users.noreply.github.com>, 2018-09-13 22:37:42 +0200,7878, zpool detect invalid property create change improve handling invalid filesystem property specified pool creation useful zpool create dry run executed detect invalid level option actual command run reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7620 close 7878,,
2328,92b432139da587c85648ac96dc31ed8c4b5d7b97,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-13 13:35:09 -0700,7894, add zts report.py add test case possible failure section zts report.py reference github issue environment test proven unreliable due way detects removal thread flaw test device removal update result summary accordingly additionally increase allowed timeout effort reduce observed rate false positves reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7895 issue 7894,,
2329,733b5722b4fc6e7927ea8a33bef49f7059d91903,oman Strashkin <Ramzec@users.noreply.github.com>, 2018-09-13 04:14:42 +0300,7881, zpool split create corrupted pool added check verify vdevs fully synced split new pool corrupted reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed roman strashkin roman.strashkin nexenta.com close 7865 close 7881,,
2330,b8a90418f3a9c23b89c5d2c729a4dd0fea644508,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-07 09:35:09 -0700, , tag 0.8.0 rc1 major new feature native encryption device removal allocation class pool checkpoint sequential scrub resilver project quota channel program direct signed brian behlendorf behlendorf1 llnl.gov,,
2331,73a5ec30bf6facf44a59045ea761a704c5e1b431,on Brady <don.brady@delphix.com>, 2018-09-06 22:44:52 -0600,7872, fix kernel sysfs entry recent sysfs zfs property feature break kernel build zfs sans module built module add sysfs entry sys zfs reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7868 close 7872,,
2332,e7b677aa5de49a6a0619681647c8093900d4cd64,on Brady <don.brady@delphix.com>, 2018-09-06 18:36:00 -0600,7869, fix zfs_sysfs_live test failure zts zfs_sysfs_live test fails occasionally due uninitialized string error path reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7869,,
2333,0238a9755b07d1a2705e970f5c09fb7fa261ea5d,OLi <loli10K@users.noreply.github.com>, 2018-09-06 22:11:21 +0200,7860, fix zfs allow create time permission permission set defined dataset create time permission incorrectly shown permission set change simply correct allow permission displayed commit also fix small manpage formatting issue add test case zfs test suite reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 7519 close 7860,,
2334,cc99f275a28c43fe450a66a7544f73c4935f7361,on Brady <don.brady@delphix.com>, 2018-09-05 19:33:36 -0600,5182, pool allocation class allocation class add ability allocation class pool dedicated serving specific block category ddt data metadata small file block pool opt feature adding special dedup top level vdev reviewed pavel zakharov pavel.zakharov delphix.com reviewed richard laager rlaager wiktel.com reviewed alek pinchuk apinchuk datto.com reviewed kan johansson f96hajo chalmers.se reviewed andreas dilger andreas.dilger chamcloud.com reviewed dhe git dehacked.net reviewed richard elling richard.elling reviewed gregor kopka gregor kopka.net reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed brady don.brady delphix.com close 5182,,
2335,cfa37548ebc880580782b245f2d233ed540e7a01,hris Siebenmann <cks.github@cs.toronto.edu>, 2018-09-05 01:26:56 -0400,7864, correctly handle error kern_path regular kernel function kern_path return error negative errnos eloop must convert positive errnos used throughout zfs code return zfs function zfs code properly see error reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed chris siebenmann cks.git01 cs.toronto.edu close 7764 close 7864,,
2336,0405eeea6a8d142171ce352d3dac5f08cd6f70f0,ich Ercolani <Rincebrain@gmail.com>, 2018-09-05 01:15:14 -0400,7855, added recalculation arc stats mid eviction add recalculation step arc stats mru eviction pathologically attempt evict mfu reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov authored mark johnston markj freebsd.org signed rich ercolani rincebrain gmail.com close 7855,,
2337,27ca030fa68dd58fbb36714a6ddfc3fdf6974df3,rian Behlendorf <behlendorf1@llnl.gov>, 2018-09-04 21:58:23 -0700,7838, revert update default value disabled reverts commit disabling default result multiple zts test failing depend functionality revert change relevant test case updated signed brian behlendorf behlendorf1 llnl.gov issue 7838,,
2338,a6214a0ae9e78d3cac0e495e2fcf7af0858a872f,eorge Melikov <mail@gmelikov.ru>, 2018-09-05 03:21:24 +0300,7838, update default value disabled disabled default update code reflect documentation reviewed brian behlendorf behlendorf1 llnl.gov reviewed gregor kopka gregor kopka.net signed george melikov mail gmelikov.ru close 7835 close 7838,,
2339,c197a77c3cf36531e4cf79e524e1ccf7ec00cc4c,av <mav@FreeBSD.org>, 2018-08-17 15:17:09 +0000,7857, openzfs 9751 allocation throttling misplacing ditto block relax allocation throttling ditto block due random imbalance allocation tends push block copy one vdev look slightly better moment slightly strict policy allows improve data security surprisingly write performance since need touch extra metaslabs vdev respect min distance sponsored ixsystems inc authored mav mav freebsd.org reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9751 freebsd commit http github.com freebsd freebsd commit 8253837ac3 close 7857,,
2340,e38afd34c37343c2df17dc6860788f33eec7c2b3,av <mav@FreeBSD.org>, 2018-08-17 15:00:41 +0000,7858, openzfs 9738 fix third block copy allocation broken 9112 use weight allocate tertiary block previous use caused error later call leading massive load unneeded metaslabs write freeze authored mav mav freebsd.org reviewed paul dagnelie pcd delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9738 freebsd commit http github.com freebsd freebsd commit 63e7138 close 7858,,
2341,b83a0e2dc1b972e3ae5c0c17b714941b4604dfd6,on Brady <don.brady@delphix.com>, 2018-09-02 15:14:01 -0400,7780, add basic zfs ioc input nvpair validation want newer version libzfs_core run existing zfs kernel module i.e deferred reboot module reload update document via zfs_ioc_key_t valid argument ioc command rely nvpair input argument i.e non legacy command libzfs_core automatically verify expected pair dispatching command initial phase focus non legacy ioctls follow change address legacy ioctl input zfs_cmd_t zfs_ioc_key_t look like static const zfs_ioc_key_t program arg sync zk_optional instrlimit zk_optional memlimit zk_optional  introduce four input error identify specific input failure addition generic argument value error like einval erange ebadf e2big ioctl number supported kernel input argument supported kernel required input argument missing input argument invalid type reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7780,,
2342,e8bcb693d6a19962291e4429f2dc4ce60693bef7,on Brady <don.brady@delphix.com>, 2018-09-02 15:09:53 -0400,7706, add zfs module feature property info sysfs extends sysfs sys module zfs entry include feature property attribute primary consumer information user process like zfs cli need know current loaded zfs module support libzfs binary consult information instantiating zfs zpool property table pool feature table introduces kernel object dirs sys module zfs corresponding attribute file  features.pool  properties.pool reviewed matthew ahrens mahrens delphix.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7706,,
2343,bb91178e60df553071ce2e18b0067ef703f7b583,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-31 15:30:44 -0700,7854, zts fix ebusy volume destroy failure possible unrelated process like blkid volume open zfs destroy run switch cleanup function destroy_dataset helper handle case retrying destroy dataset busy done volume also file system consistency reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7854,,
2344,e927fc8a522e1c0db89955cc555841aa23bbd634,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-31 14:20:34 -0700,7853, allow ecksum checkpoint space map object may accessible vdev zap damaged may case performing extreme rewind importing pool reviewed serapheim dimitropoulos serapheim delphix.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7809 close 7853,,
2345,adb726eb0ed69e7331ddd308da8fec9316f6426d,atthew Ahrens <mahrens@delphix.com>, 2018-08-31 13:16:54 -0400,7841, clean simplify dbuf_hold code allocating dbuf_hold_arg_t demand rather allocating big array front occasionally increase number allocation typically one allocation needed since indirect block already cached performance test suite get result change reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com signed matthew ahrens mahrens delphix.com close 7841,,
2346,9e7fb6c1718b4651f9134dde5f9fe79fa44f76d8,under2015 <omfgbunder@gmail.com>, 2018-08-30 17:45:16 -0400,7840, zts pool_checkpoint path cleanup removing hardcoded path reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7840,,
2347,6fa1e1e73a50d224e0d768fb2ef1d024df50f086,ichard Elling <Richard.Elling@RichardElling.com>, 2018-08-30 14:43:37 -0700,7848, zts fix dev_dskdir trim disk reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 7848,,
2348,de61daa597129b4bc5cba275cf2ce4aa64069ed5,under2015 <omfgbunder@gmail.com>, 2018-08-30 16:53:06 -0400,7839, zts zvol_swap_003 path cleanup removing hardcoded path zvol_swap_003 reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7839,,
2349,0fe7c953b38a39278ea44c5c0782fa295d51fa54,ernie1995 <42413912+bernie1995@users.noreply.github.com>, 2018-08-30 22:46:55 +0200,7843, zts path cleanup removing hardcoded path many script reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bernie1995 bernie.pikes gmail.com issue 7507 close 7843,,
2350,6c6949acae06dc9a31db2e375f13eb7f357651b6,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-30 13:38:09 -0700,7847, zts fix possible unrelated process like blkid volume open zfs destroy run switch cleanup function destroy_dataset helper handle case retrying destroy dataset busy reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7847,,
2351,c3bd3fb4ac49705819666055ff1206a9fa3d1b9e,om Caputi <tcaputi@datto.com>, 2018-08-29 14:33:33 -0400,7822, openzfs 9403 assertion failed arc_buf_destroy assertion failed arc_buf_destroy concurrently reading block checksum error porting note ability zinject decompression error added work zio_decompress level info need match user zinject option test added test new zinject functionality attempted set ztest test coverage although uncover low priority issue unfortuantely also cause ztest assert many location code working correctly since designed fail error developer manually set variable option find debug issue authored matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved matt ahrens mahrens delphix.com ported tom caputi tcaputi datto.com openzfs issue http illumos.org issue 9403 openzfs commit http github.com openzfs openzfs commit fa98e487a9 close 7822,,
2352,47ab01a18f55f89be7b3f340b6ec9101bf9e231c,om Caputi <tcaputi@datto.com>, 2018-08-20 16:42:17 -0400,7795, always wait txg sync umounting dataset currently unmounting filesystem zfs wait txg sync dataset dirty readonly however problematic case dataset remounted readonly immediately unmounted often happens system shut since encrypted datasets require completed dataset disowned issue cause problem write leak txgs dataset disowned happen sync disabled looking fix issue discovered doe return b_true dataset removed txg dirty datasets list actually processed yet furthermore implementation comletely different adding confusion rather relying function patch force umount code path remount readonly code path always perform txg sync read write datasets remove function altogether reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7753 close 7795,,
2353,8c4fb36a24d4fd88382e454b13751a5adfea0806,om Caputi <tcaputi@datto.com>, 2018-08-20 16:41:53 -0400,7795, small rework txg_list code patch simply add missing locking txg_list function refactors txg_verify compiled debug build reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7795,,
2354,a584ef26053065f486d46a7335bea222cb03eeea,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-27 10:04:21 -0700,7823, direct support direct via o_direct flag originally introduced xfs irix database workload purpose allow database bypass page buffer cache prevent unnecessary operation e.g readahead preventing contention system memory database kernel cache illumos library function called directio allows user space provide hint file system direct useful file system free ignore semantics also entirely file system decision implement return enotty since semantics never defined standard o_direct implemented conforms behavior described linux open man page follows minimize cache effect design arc already scan resistant help mitigate need special o_direct handling data accessed first evicted cache behavior consistent illumos freebsd future performance work may wish investigate benefit immediately evicting data cache read written o_direct flag functionally behavior similar applying primarycache metadata property per open file o_direct _may_ impose restriction alignment length additional alignment length restriction imposed o_direct _may_ perform unbuffered operation directly user memory block device unbuffered operation currently supported order support feature transparent compression encryption checksumming copy must made transform data o_direct _may_ imply o_dsync xfs o_direct doe imply o_dsync zfs caller must provide o_dsync request synchronous semantics o_direct _may_ disable file locking serializes operation application avoid mixing o_direct normal mmap file particularly true overlapping region zfs locked correctness locking disabled o_direct however concurrently mixing o_direct mmap normal file recommended change implemented layering aops direct_io operation existing aio operation code already existed zfs linux bypassing page cache o_direct specified reference http xfs.org doc xfsdocs xml dev xfs_user_guide tmp html ch02s09.html http roch entry http index.php s_semantics http illumos.org man directio reviewed richard elling richard.elling signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 224 close 7823,,
2355,5097b4e42513a5fb6957d9f4d72d7d597822d8e9,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-26 12:59:33 -0700,7827, remove changelog spec file remove changelog section spec file since doe get updated master branch doe mean information stale result make deb failing build package issue 7825. section updated tagged release reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7825 close 7827,,
2356,5d6ad2442b0ac97922403edda848697c9e9de399,oao Carlos Mendes Luis <dioni21@users.noreply.github.com>, 2018-08-26 16:55:44 -0300,7830, fedora fix misc bound check compiler warning fix bunch truncation compiler warning show fedora gcc 8.0.1 reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov issue 7368 close 7826 close 7830,,
2357,644e01a268ad55dc789a79982d62d3db59660499,OLi <loli10K@users.noreply.github.com>, 2018-08-26 21:43:27 +0200,7831, fix libaio devel requirement debian based distribution buildrequires tag devel package rpm spec file work building debian based distribution fix issue making requirement conditional rpm based distribution reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7829 close 7831,,
2358,55972a6724ca49d98d67a47fe0f0b28ad21260d5,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-23 09:34:34 -0700,7824, add libaio devel buildrequires zfs test package need build requirement libaio devel package without configure correctly determine mmap_libaio built skipped reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7821 close 7824,,
2359,c434d8806cfdf33a4a0b0ab24fb8e35a7b6811ee,OLi <loli10K@users.noreply.github.com>, 2018-08-22 20:03:31 +0200,7810, stack overflow destroying deeply nested clone destroy operation deeply nested chain clone overflow stack depth size location 221 entry  15664 mutex_lock 0x5 0x30 15616 mutex_lock 0x5 0x30 ... 13576 0x124 0x1e0 zfs 13504 0x18a 0x1e0 zfs 13432 0x18a 0x1e0 zfs ... 185 2128 0x18a 0x1e0 zfs 186 2056 0x18a 0x1e0 zfs 187 1984 0x18a 0x1e0 zfs 188 1912 136 0x4e0 0x1090 zfs 189 1776 0x0 0x90 zfs ... 218 304 128 kthread 0xdf 0x100 219 176 ret_from_fork 0x22 0x40 220 128 128 kthread 0x0 0x100 fix issue converting recursive iterative reviewed paul zuchowski pzuchowski datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7279 close 7810,,
2360,e8a8208eef3f2e256ddbf91e73add2e08705d482,ich Ercolani <Rincebrain@gmail.com>, 2018-08-22 12:35:20 -0400,7815, added metadata dnode cache info arc_summary reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 7815,,
2361,2711b1d05f30d4f6f54fe828e6b19c77e2ce2491,im Chase <tim@chase2k.com>, 2018-08-21 18:08:15 -0500,7818, verify verify3s using verify3s allows view unexpected error value system log reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady delphix.com signed tim chase tim chase2k.com issue 7809 close 7818,,
2362,149ce888bb14a220036ca3e5b301e3b56451bd71,om Caputi <tcaputi@datto.com>, 2018-08-20 14:03:56 -0400,7701, fix issue raw patch fix issue raw deduplicated send stream first datasets completely received earlier stream still marked raw receives caused problem newly received datasets attempted fetch raw data datasets without flag set second problem arc freeze checksum code consistent lock needed held performing asserts proper locking needed run asserts actually fairly nuanced since asserts touch linked list buffer requiring header lock arc_state requiring b_evict_lock b_freeze_cksum requiring b_freeze_lock seems like large performance sacrifice lot unneeded complexity verify relatively small debug feature working intended patch simply remove asserts instead reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7701,,
2363,c962fd6c4e3836be223af93b0d75d92e8ee98fb4,OLi <loli10K@users.noreply.github.com>, 2018-08-20 19:11:52 +0200,7800, pyzfs add missing libzfs_core function change add following libzfs_core function pyzfs lzc_remap reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7793 close 7800,,
2364,34fe773e303e499e6a6e5fcd2ceeee4531579dab,laf Faaland <faaland1@llnl.gov>, 2018-08-20 10:05:23 -0700,7801, skip import activity test zdb code path since zdb open pool read damage pool event pool already imported either host another one pool vdev structure changing zdb importing pool may cause zdb crash however unlikely case user space process simply run reason zdb disable multihost activity test import normally run commit fix zdb code path overlooked also add test ensure several common use case handle properly future reviewed brian behlendorf behlendorf1 llnl.gov reviewed zheng guzheng2331314 163.com signed olaf faaland faaland1 llnl.gov close 7797 close 7801,,
2365,edc05fdb34792e65508ac2ff91c58828b44f19b1,eHackEd <DeHackEd@users.noreply.github.com>, 2018-08-20 12:55:18 -0400,7760, modify argv user tool argv get modified string parsing input argument reflected live process listing reviewed serapheim dimitropoulos serapheim delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 7760,,
2366,a448a2557ec4938ed6944c7766fe0b8e6e5f6456,erapheim Dimitropoulos <serapheimd@gmail.com>, 2018-08-20 09:52:37 -0700,7705, introduce read write kstats per dataset following patch introduces statistic read writes grouped dataset statistic implemented kstats backed aggregate sum performance retrieved using dataset objset number motivation change provide preliminary analytics dataset usage performance reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed serapheim dimitropoulos serapheim delphix.com close 7705,,
2367,fa84714abbb9316208bef7188009ee74204d532e,under2015 <omfgbunder@gmail.com>, 2018-08-19 00:19:41 -0400,7805, zts event path cleanup removing hardcoded path events.cfg reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7805,,
2368,80d45e089c4a1d90c7519f793cbb02198da9c85d,under2015 <omfgbunder@gmail.com>, 2018-08-19 00:18:31 -0400,7804, zts path cleanup removing hardcoded path reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7804,,
2369,5468ee7a2f659cd33b3652cefff6ce4aa987e574,under2015 <omfgbunder@gmail.com>, 2018-08-19 00:17:22 -0400,7803, zts privilege group path cleanup removing hardcoded path privilege group test reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7803,,
2370,089b16f48da2255b2c47cbab9dfbac3dcfe43ae8,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-18 21:16:12 -0700,7802, zts fix allow zpool replace run slowly without overwhelming vdev queue setting 128k limit number concurrent slow need handled net effect test case run approximately faster putting well minute per test time limit rename import_cache test case imprt_cachefile originally renamed due maximum tar name limit limit removed commit 1dfde3d9b replaced instance var tmp test_base_dir reviewed bunder2015 omfgbunder gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7765 close 7802,,
2371,a9d6270acb7f529cb446c46b429a52631777452f,OLi <loli10K@users.noreply.github.com>, 2018-08-19 00:47:41 +0200,7798, zfs hold scripted mode documented change simply document existing scripted mode option command help man page reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7798,,
2372,1f87313ac830970088389a6d6e68fa3ce8194aff,OLi <loli10K@users.noreply.github.com>, 2018-08-18 22:10:36 +0200,7799, fix arcstat.py handling unsupported option change allows arcstat.py script handle unsupported option gracefully print error usage message one option provided reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7799,,
2373,802715b74a23a58d66028699a99eb141c85b7447,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-17 10:01:47 -0700,7796, zts fix possible unrelated process like blkid volume open zfs destroy run switch cleanup function destroy_dataset helper handle case retrying destroy dataset busy reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7796,,
2374,4338c5c06fbe92fdef9a5f0f7e457fae98c94b4d,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-15 09:53:44 -0700,7791, fix traverse_impl kmem leak error path must free memory allocated function leaked practice would leak byte memory rare circumstance thus unlikely caused real problem issue caught kmemleak reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7791,,
2375,1dfde3d9b20b3be24a0cb24520652c22bbeb7499,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-15 09:52:28 -0700,7767, use posix format dist tarballs traditionally automake defaulted tar format creating tarballs distribution one many limitions format character maximum path file name limit cause problem adding new test case zts due depth sub tree descriptive test name change switch build system posix aliased pax tar format conforms posix.1 2001 specification format doe suffer limitation designed compatible become default format future version gnu tar http www.gnu.org software tar manual html_chapter tar_8.html part change blockfiles directory originally removed due limit readded reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7767,,
2376,1fff937a4c9d7b745540387d232c5ab2ba856fea,om Caputi <tcaputi@datto.com>, 2018-06-18 15:47:12 -0400,7650, check encrypted dataset embedded recv earlier patch fix bug attempting receive send stream embedded data encrypted dataset would cleanup dataset error reached check moved preventing issue reviewed jorgen lundman lundman lundman.net reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed tom caputi tcaputi datto.com close 7650,,
2377,d9c460a0b659c044d4397b7405712f2c9450d3c4,om Caputi <tcaputi@datto.com>, 2017-10-13 13:09:04 -0400,7650, added encryption support zfs recv one small integration absent b52563 support zfs recv regard encryption parameter main use case follows receiving unencrypted stream encrypted without needing create dummy encrypted parent encryption inheritted allowing user change keylocation receive long receiving dataset encryption root allowing user explicitly exclude override encryption property unencrypted property stream allowing received encrypted receiving recursive heirarchy unencrypted datasets encrypting top level one forcing child inherit encryption reviewed jorgen lundman lundman lundman.net reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed tom caputi tcaputi datto.com close 7650,,
2378,fe8a7982ca90c3c9b8a09ec33f032527d7034a7b,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-08-14 05:33:47 +0900,7768, fix comment calculating blkid fix comment calculating blkid level within dnode blkptrs level indblkshift spa_blkptrshift part divisor division reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7768,,
2379,64e96969a88c21aebb2f8d982a8c345e55a2ae6c,under2015 <omfgbunder@gmail.com>, 2018-08-13 11:24:02 -0400,7778, zts delegate group path cleanup removing hardcoded path delegate group test reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7778,,
2380,d02fa81c7835f1cce54a0cfe3c010a0766f49165,under2015 <omfgbunder@gmail.com>, 2018-08-13 11:22:41 -0400,7777, zts acl group path cleanup removing hardcoded path acl group test reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7777,,
2381,604016054e947526cd0608174f09e5669ae4ebe3,under2015 <omfgbunder@gmail.com>, 2018-08-13 11:16:55 -0400,7775, zts inuse_004 path cleanup removing hardcoded path inuse_004 reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7775,,
2382,5fba582887b732e2ef29b73127147215b075cd92,under2015 <omfgbunder@gmail.com>, 2018-08-13 11:15:53 -0400,7774, zts path cleanup removing hardcoded path reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7774,,
2383,5200237711cf17d7da41dd3a89330328eafb5e87,laf Faaland <faaland1@llnl.gov>, 2018-08-13 08:12:25 -0700,7776, mmp suspend pool ztest running ztest never suspend pool due failed delayed mmp writes many source long delay within ztest device open close etc combination may delay mmp writes long cause mmp suspend pool delay also affect real pool fixed worked separately reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 7776,,
2384,94b197a0a503d0153babe155fe3f099af662c626,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-12 09:38:53 -0700,7766, zts test case reliability cli_root zpool_import redundancy observed fail spurious reason time add exception list reference open github issue speed replacement prevent exceeding minute per test limit getting killed file vdev creation switched truncate redundant raidz1 testing pas dropped fixed minor formating issue reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7766,,
2385,c8c308362c2f0a43adbe21a44b3443a27d2c7ca9,OLi <loli10K@users.noreply.github.com>, 2018-08-03 23:56:25 +0200,7757, allow inherited property change modifies checksum dedup property verified handling case explicitly inherited dataset hierarchy receiving recursive send stream reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed loli10k ezomori.nozomu gmail.com close 7755 close 7576 close 7757,,
2386,fc1ecd16d735eb35939a5cae9488b00b1539e383,on Brady <don.brady@delphix.com>, 2018-08-03 15:50:51 -0600,7759, drop extra spa ref reviewed thomas caputi tcaputi datto.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7759,,
2387,6da0998f592a322ca045dec1c9db61333c9936dc,rian Behlendorf <behlendorf1@llnl.gov>, 2018-08-03 10:21:50 -0700,7763, zts fix possible unrelated process like blkid volume open zfs destroy run switch cleanup function destroy_dataset helper handle case retrying destroy dataset busy reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed john kennedy john.kennedy delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7763,,
2388,62840030a7dceaee013ddbcc1eebcfc7922edf7c,atthew Ahrens <mahrens@delphix.com>, 2018-08-02 15:51:45 -0700,7736," reduce taskq context switch cost zio pipe read disk zfs creates zio zio_null logical zio_read physical zio currently result separate taskq_dispatch zio_execute high read iop workload cause significant performance impact processing zio single taskq entry reduce overhead taskq locking context switching accomplish allowing zio_done return next zio execute zio_execute result performance increase random read 96,000 iop 108,000 iop recordsize ssd reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson george.wilson delphix.com signed matthew ahrens mahrens delphix.com external issue dlpx 59292 close 7736",,
2389,499b5497cbc62a4db35227bc98c6244454dfab4c,ohn Gallagher <jgallag88@gmail.com>, 2018-08-02 14:03:56 -0700,7761, add missing check zpl_xattr_ function linux specific zpl_ entry point xattrs must include unmounted handle check common zfs_ entry point additional zpl_ wrapper identical zfs_ counterpart except errno negated since expected used zpl_ layer reviewed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov signed john gallagher john.gallagher delphix.com close 5866 close 7761,,
2390,010d12474cb1572c0c9b729615fa45cf43f59d14,athan Lewis <linux.robotdude@gmail.com>, 2018-08-02 11:59:24 -0700,7103, add support selecting encryption backend add two new module parameter icp icp_aes_impl icp_gcm_impl control crypto implementation moment choice generic aesni platform support enables support aes pclmulqdq amd family 15h bulldozer newer cpu zen modify aes_key_t track implementation generated key schedule generated various implementation necessarily interchangable reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed richard laager rlaager wiktel.com signed nathaniel lewis linux.robotdude gmail.com close 7102 close 7103,,
2391,3d503a76e890d7711d5e906e025e092d0e244211,eorge Wilson <george.wilson@delphix.com>, 2018-07-31 17:51:15 -0400,7758, fix openzfs 9337 mismerge change reintroduces logic required openzfs 9577. openzfs 9337 zfs get slow due uncached metadata merged ended removing logic required openzfs 9577 remove inadvertently reintroduced bug 9577 designed fix change enables evicting flag update caller provide correct parameter reviewed brian behlendorf behlendorf1 llnl.gov signed george wilson george.wilson delphix.com close 7758,,
2392,fd7265c646f40e364396af5014bbb83e809e124a,ohan Puri <rohan.puri15@gmail.com>, 2018-07-28 18:32:12 +0530,7752, fix deadlock zfs umount zfs umount zfsctl_destroy take writer call wait present snap automounted wait reader resulting deadlock fix hold tree lookup removal successful lookup lock dropped zfs_snapentry_t remain valid reference taken lookup released reviewed brian behlendorf behlendorf1 llnl.gov signed rohan puri rohan.puri15 gmail.com close 7751 close 7752,,
2393,492f64e941e3d6b947d1cc387a1a380c0c738b09,aul Dagnelie <pcd@delphix.com>, 2018-02-12 12:56:06 -0800,7682, openzfs 9112 improve allocation performance high end system overview  parallelize allocation process creating concept allocator certain number allocator per metaslab group defined value tunable pool open time allocator given metaslab group active metaslabs one primary one secondary primary secondary weight mean thing pre allocator world primary metaslabs used allocation secondary metaslabs used ditto block allocated metaslab group also claim weight separated weight important understanding patch active metaslabs allocator moved normal place metaslab tree group back tree way selected use allocator searching new metaslabs unless passive metaslabs unsuitable allocation doe happen allocator steal ensure fail truly space left perform allocation addition alloc queue metaslab group broken separate queue allocator want dramatically increase number inflight low end system significantly increase txg time hand want ensure enough allocator allow good coalescing sending disk result take compromise path allocator alloc queue max depth start certain value every txg every time completes increase max depth hopefully provide good balance two failure mode dramatically increasing complexity also parallelize spa_alloc_tree spa_alloc_lock cause similar contention selecting allocate parallelization allocator scheme metaslab selection performance result  performance improvement change vary significantly based number cpu system whether system numa architecture speed drive value various tunables workload performed fio async sequential write workload core numa system 256 ram 128 ssds roughly performance improvement future work  analysis performance system patch applied show significant new bottleneck vdev disk queue also need parallelized prototyping change occurred performance improvement work need done stability verified ready upstreamed authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos delphix.com reviewed alexander motin mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov approved gordon ross gwr nexenta.com ported paul dagnelie pcd delphix.com signed paul dagnelie pcd delphix.com porting note fix reservation test failure increasing tolerance openzfs issue http illumos.org issue 9112 openzfs commit http github.com openzfs openzfs commit 3f3cc3c3 close 7682,,
2394,3905caceaf21d4207ffff8a086e977f02cba7c0c,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-31 10:17:44 -0700,7747, add missing zfs dracut rpm dependency zfs dracut package requires hostid basename head awk grep utility installed first three provided coreutils additional dependency required awk grep reviewed manuel amador rudd rudd rudd o.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7729 close 7747,,
2395,9b9d1adc38d14f0e01564b980662006589227f0a,ntonio Russo <antonio.e.russo@gmail.com>, 2018-07-31 13:15:41 -0400,6964, use zfs import.target contrib dracut new zfs import.target used place zfs import .service unit reviewed brian behlendorf behlendorf1 llnl.gov reviewed manuel amador rudd rudd rudd o.com signed antonio russo antonio.e.russo gmail.com close 6964,,
2396,dae3e9ea21a73b1ca940abd4aee1993ea4be8028,on Brady <don.brady@delphix.com>, 2017-09-26 19:45:19 -0600,7749, openzfs 9465 arc check anon_size arc_c stall system case one pool built another pool want make sure end throttling lower backing pool upper pool majority contributor dirty data insure make forward progress throttling also check current pool net dirty data throttle exceeds anonymous dirty data cache authored brady don.brady delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed matt ahrens matt delphix.com reviewed prashanth sreenivasa pks delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov porting note new global variable  intentially added tunable module parameter openzfs issue http illumos.org issue 9465 openzfs commit http github.com openzfs openzfs commit d6a4c3ef close 7749,,
2397,6b64382b17ea420b1265237ab52657a2d0a94824,erapheim Dimitropoulos <serapheim@delphix.com>, 2017-12-05 09:57:42 -0800,7748," openzfs 9580 add hash table top nvlist speed operation motivation dealing another performance issue see 126118f noticed spend lot time various place kernel constructing long nvlists problem nvlist created nv_unique_name set case time linear search whole list ensure uniqueness every entry add example scenario seen following flamegraph time zfsdev_ioctl spent constructing nvlists flamegraph http img flame adding table speed lookup help situation construct nvlist like scenario addition regular lookup removal patch doe diff implemented hash table top nvlist code convert nvlist operation number entry start amortized time hash table grows shrink depending entry plain lookup strictly performance analysis analyze performance improvement used setup snapshot deletion issue mentioned motivation section basically created 10k filesystems one snapshot used api libzfs_core pas nvlist snapshot deleted reason used driver program clean performance result actually happens kernel flamegraphs wall clock time mentioned gathered start end driver program run trial testpool used completely destroyed system rebooted testpool completely recreated reason dance get consistent result result patch sampling flamegraphs trial http img flame dlpx 53417 trial a.svg trial http img flame dlpx 53417 trial a2.svg trial http img flame dlpx 53417 trial a3.svg wall clock time second  trial real 5.3 user 0.4 sys 2.3 trial real 8.2 user 0.4 sys 2.4 trial real 6.0 user 0.5 sys 2.3  result patch sampling flamegraphs trial http img flame dlpx 53417 trial ae.svg trial http img flame dlpx 53417 trial a2e.svg trial http img flame dlpx 53417 trial a3e.svg wall clock time second  trial real 4.9 user 0.0 sys 0.9 trial real 3.8 user 0.0 sys 0.9 trial real 3.6 user 0.0 sys 0.9  analysis result trial consistent section talk flamegraph result trial wall clock result trial trial see zfs_dev_ioctl 2,331 996 sample count specifically sample almost gone 500 800 sample leaving dominate sample zfs_dev_ioctl trial see user time dropped secods believe consistent 0.4 second patch applied due driver program constructing long nvlist snapshot pas kernel system time effect clear 2.3 0.9 second porting note case added switch fm_nvprintr  authored serapheim dimitropoulos delphix.com reviewed matt ahrens matt delphix.com reviewed sebastien roy sebastien.roy delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9580 openzfs commit http github.com openzfs openzfs commit b5eca7b1 close 7748",,
2398,1897bc0d4843e8774189bd7e37a2d6b025dd94cc,atthew Ahrens <mahrens@delphix.com>, 2016-10-31 10:42:37 -0700,7746, openzfs 9439 zfs double free due failure dirty indirect block follow commit openzfs 9438. see openzfs issue link complete analysis authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9439 openzfs commit http github.com openzfs openzfs commit 779220d external issue dlpx 46861 close 7746,,
2399,21d48b5eac54ba7b2e4d8bf0d0e747082e0e8577,aul Dagnelie <pcd@delphix.com>, 2016-09-20 10:02:29 -0700,7746, openzfs 9438 hole lose birth time info block mix birth time reported http github.com zfsonlinux zfs issue 4996 yet another hole birth issue one block entirely hole birth time lose information creating one hole current txg birth time zol fix approach incorrect ultimately problem truncate write file transaction group dbuf indirect block zeroed deal truncation written write process lose hole birth time information hole range case dnode freed need determine whether block converted higher level hole zio pipeline dnode synced porting note dmu_object_end change zfs_znode.c already applied added test case 5675 provided rincebrain hole_birth issue test case pushed upstream openzfs updated mk_files used several rsend test file created little interesting may contain hole authored paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9438 openzfs commit http github.com openzfs openzfs commit 738e2a3c external issue dlpx 46861 close 7746,,
2400,b719768e35fdd6d4052546338453cee0713a1a3c,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-30 09:23:45 -0700,7750, zts fix possible unrelated process like blkid volume open zfs destroy run switch cleanup function destroy_dataset helper handle case retrying destroy dataset busy reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7750,,
2401,11d0525cbb15a3519df683ec0248b6ac55f9d090,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-30 09:22:30 -0700,7589, add 4.9.20 rt16 kernel rwsem implementation changed allow multiple reader 4.9.20 rt16 patch set result build failure existing implementation forced directly access rwsem structure changed could accommodated adding additional compatibility code patch resolve build issue simply assuming rwsem never upgraded functionality performance optimization caller must already handle case converting last remaining use spin_lock_init additionally required get clean build signed brian behlendorf behlendorf1 llnl.gov close 7589,,
2402,fb7307b8922e9eb7da430733d6665e06d2cb0bf5,eorge Diamantopoulos <georgediam@gmail.com>, 2018-07-17 01:11:36 +0300,7719, fix initramfs missing systemd binary systemd binary necessary mounting encrypted root dataset copied initramfs generated dracut patch fix copy binary unconditionally regardless whether native zfs encryption used root dataset reviewed brian behlendorf behlendorf1 llnl.gov signed george diamantopoulos georgediam gmail.com close 7607 close 7719,,
2403,5fadb7fb0cc7429609f74c7f2221db882231fe3b,oomas Soome <tsoome@me.com>, 2016-06-01 19:18:10 +0300,7714, openzfs 8906 illumos rootfs support salted cksum porting note grub 2.02 checksum supported however pointed 6501 alternative efistub work restriction warning added checksum property section zfs.8 man page authored toomas soome tsoome me.com reviewed fraire cfraire me.com reviewed robert mustacchi joyent.com reviewed yuri pankov yuripv yuripv.net approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 8906 openzfs commit http github.com openzfs openzfs commit 7dec52f close 6501 close 7714,,
2404,3a549dc7a1f5e5511b4c8699081f704eeb4381b7,atthew Ahrens <mahrens@delphix.com>, 2018-01-11 08:54:38 -0800,7712, openzfs 9442 decrease indirect block size spacemaps authored matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com reviewed george wilson george.wilson delphix.com reviewed albert lee trisk forkgnu.org reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov update indirect block spacemaps contribute significantly write inflation therefore want reduce indirect block size spacemaps 128k 16k porting note refactored allow function use common shared function openzfs issue http www.illumos.org issue 9442 openzfs commit http github.com openzfs openzfs commit 0c2e6408b close 7712,,
2405,e106a7bacbf6a642a07ecaecc82ef2c45c458865,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-25 10:15:39 -0700,7742, zts add exception test case observed fail non dangerous way approximately automated test run add test case list possible expected failure test case made perfectly reliable reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov issue 7741 close 7742,,
2406,750e1f88d386b752283de7ed763af2a189b73677,eng Sun <loyou85@gmail.com>, 2018-07-26 00:52:27 +0800,7718, introduce kstat helpful tune commit 539d33c7 openzfs 6569 large file delete starve write ops reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed feng sun loyou85 gmail.com close 7718,,
2407,473c976a0c4da84d8b49edaaf3d88a716d8dde2c,ara hartse <sara.hartse@delphix.com>, 2017-09-07 13:10:53 -0700,7713, openzfs 9457 libzfs_import.c add_config memory leak memory leak occurs line 209 213 config freed error case interface add_config seems ideal would better copied data necessary config caller freed porting note issue already resolved linux adding missing call nvlist_free adopt upstream fix keep behavior code consistent authored sara hartse sara.hartse delphix.com reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos delphix.com reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9457 openzfs commit http github.com openzfs openzfs commit be86bb8a close 7713,,
2408,802b1a7b3b413486d4ff249f84c5e6cfd005ed55,atthew Ahrens <mahrens@delphix.com>, 2017-06-23 12:32:16 -0700,7715, openzfs 9338 moved dnode incorrect dn_next_type authored matthew ahrens mahrens delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed serapheim dimitropoulos delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov investigating different problem noticed moved dnodes processed dnode_move_impl via kmem_move incorrect dn_next_type could cause disk dn_type changed invalid value fix copy dn_next_type dnode_move_impl porting note moment potential issue occur linux since spl doe provide kmem_move functionality openzfs issue http illumos.org issue 9338 openzfs commit http github.com openzfs openzfs commit 0717e6f13 close 7715,,
2409,b7ddeaef3dee6b12f22f67cef184590b5a3f10ed,om Caputi <tcaputi@datto.com>, 2018-07-24 15:20:04 -0400,7711, refactor function responsible converting full arc header extended crypt header visa versa code originally written bcopy new member added arc header would automatically included without requiring code change however practice along small difference kmem_cache implementation various platform caused number hard find problem port operating system patch solves problem making member copy explicit adding asserts field set transfer also manually reset old header reallocation finished properly reallocated reused reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 7711,,
2410,863522b1f9235398f6c28ee3ab96f7d1c9088450,teven Noonan <steven@uplinklabs.net>, 2018-07-24 09:33:56 -0700,7738, double account non embedded block count_block twice inside function unconditionally beginning intended catch embedded block case near end processing block double accounting caused zpool scrub progress statistic zpool status climb 200 instead 100 showed double rate actually seeing apparently regression introduced commit 00c405b4b5e8 incorrect port openzfs commit http github.com openzfs openzfs commit d8a447a7 reviewed thomas caputi tcaputi datto.com reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed steven noonan steven uplinklabs.net close 7720 close 7738,,
2411,fda0f162171585891d7865bc7bd5e49255b4564b,atthew Ahrens <mahrens@delphix.com>, 2018-07-23 22:08:18 -0700,7737, provide motivation context first often necessary understand change made understanding exact change made context provides background definition necessary understand prior substance pull request change template request motivation context first description reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 7737,,
2412,d441e85dd754ecc15659322b4d36796cbd3838de,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-23 15:40:15 -0700,7629, add support autoexpand property autoexpand property may seem like small feature depends significant amount system infrastructure enough infrastructure place modification linux supported auto expand work follows block device modified sized closed open etc change uevent generated udev zed monitoring udev event pass change event along zfs_deliver_dle disk partition contains zfs_member identified blkid device matched imported pool vdevs using vdev_guid read label blkid match found zed reopens pool vdev opening important allows vdev briefly closed disk partition table read otherwise possible report maximum possible expansion size finally property autoexpand vdev expansion attempted performing sanity check disk verify safe expand primary partition part1 expanded partition table updated partition opened detect updated size allows new capacity used order make possible following change required updated test test create pool layered loopback scsi_debug file vdev allows testing non partitioned block device loopback partition block device scsi_debug file doe receive udev change event provided better test coverage removing layering zfs volume issue surrounding layering one pool another avoided updated accept vdev guid allows matching guid rather path reliable way zed reference vdev fixed zfs_zevent_wait signal handling could result zed spinning signal handled removed functionality abandoned favor kernel provided function added rwlock held writer disk reopened important prevent error occurring configuration related bypass scl_zio lock test case added verify error never observed reopening expected impact performance additional fix critical discovered resolved course developing functionality added phys_path dev zvol dataset vdev configuration zfs volume good unique physical path volume used test case anymore reason improvement included reviewed richard elling richard.elling signed sara hartse sara.hartse delphix.com signed brian behlendorf behlendorf1 llnl.gov close 120 close 2437 close 5771 close 7366 close 7582 close 7629,,
2413,2e5dc449c1a65e0b0bf730fd69c9b5804bd57ee8,atthew Ahrens <mahrens@delphix.com>, 2018-07-10 13:49:50 -0400,7668, openzfs 9337 zfs get slow due uncached metadata project goal make read heavy channel program zfs administrative command faster caching metadata need dbuf layer prevent data evicted future call i.e zfs get disk much two part identify put cache based object type dbuf caching objset property version normalization utf8only casesensitivity objset_t reason needed cached although queried frequently stored dbuf type easily recognize cache dbuf layer instead explicitly store already existing infrastructure maintaining cached property objset setup code simply used performance testing disabled kmem_flags tuned low 128k tuned zfs_arc_max low 64m created test pool 400 filesystems 100 snapshot per filesystem later testing added 600 filesystems snapshot make sure scaling look different snapshot filesystems result test time trunk diff trunk diff  zpool import 12.9k 12.9k zfs get uncached 16.7k 5.7k zfs get cached 16.0k 6.0k authored matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed george wilson george.wilson delphix.com reviewed thomas caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported alek pinchuk apinchuk datto.com signed alek pinchuk apinchuk datto.com openzfs issue http illumos.org issue 9337 openzfs commit http github.com openzfs openzfs commit 7dec52f close 7668,,
2414,e4e94ca3154a9e58ac20e5409c003895ec859964,on Brady <don.brady@delphix.com>, 2017-08-11 15:28:17 -0600,7700, openzfs 9426 metaslab size exceed offset addressable spacemap authored brady don.brady delphix.com reviewed paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com ported brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com openzfs issue http www.illumos.org issue 9426 openzfs commit http github.com openzfs openzfs commit f1c88afb1 close 7700,,
2415,e902ddb0f8c57ac8d5b7d64edc687a022d0b9b7f,ndriy Gapon <avg@FreeBSD.org>, 2018-04-16 10:08:13 +0300,7699, openzfs 9479 fix wrong format specifier vdev_id authored andriy gapon avg freebsd.org reviewed matt ahrens matt delphix.com reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com openzfs issue http www.illumos.org issue 9479 openzfs commit http github.com openzfs openzfs commit 20aa447c close 7699,,
2416,ac09630d8b0bf6c92084a30fdaefd03fd0adbdc1,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-11 15:49:10 -0700,7693, fix zpl_mount deadlock commit 93b43af10 inadvertently introduced following scenario result deadlock issue easily reproduced lxd container using zfs storage backend reproducible workload frequently mounting unmounting thread spa_sync  rrw_enter rw_writer ftag waiting thread mount_fs zpl_mount zpl_mount_impl dmu_objset_hold  dsl_pool_hold  rrw_enter rw_reader tag sget sget_userns grab_super down_write s_umount waiting thread cleanup_mnt  down_write s_umount  zpl_kill_sb kill_anon_super  sync_filesystem zpl_sync_fs zfs_sync zil_commit txg_wait_synced waiting reviewed alek pinchuk apinchuk datto.com signed brian behlendorf behlendorf1 llnl.gov close 7598 close 7659 close 7691 close 7693,,
2417,33a19e0fd9b22364d295351ea1bda57b80e39e85,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-11 13:10:40 -0700,7684, fix kernel unaligned access sparc64 update sa_copy_data macro check architecture support efficient unaligned memory access compile time otherwise fallback using sa_copy_data function kernel provided used determine availability kernel space user space x86_64 x86 powerpc sometimes arm architecture define macro signed brian behlendorf behlendorf1 llnl.gov close 7642 close 7684,,
2418,2dca37d8dc13e6faf92c5a095d49dffd480c5b2d,atthew Ahrens <mahrens@delphix.com>, 2017-08-07 09:29:34 -0700,7696, openzfs 9424 ztest failure unprotected error call lua api invalid value type function key error ztest failed following crash status debugging core file ztest bit clone slave 280 file usr bin amd64 ztest initial argv usr bin amd64 ztest threading model raw lwps status process terminated sigabrt abort pid 2150 uid 1025 code panic message failure thread thread unprotected error call lua api invalid value type function key error stack libc.so.1 _lwp_kill 0xa libc.so.1 _assfail 0x182 libc.so.1 assfail 0x19 libzpool.so.1 vpanic 0x3d   libzpool.so.1 luad_throw 0x86 3011a48   libzpool.so.1 0x33 3011a48 2686470 libzpool.so.1 0xa4 3011a48 2686470 libzpool.so.1 zcp_pool_error 0x59 1e0f450 libzpool.so.1 zcp_eval 0x6f8 1e0f450 6400000 1d33b30 libzpool.so.1 0x12c 2786b60 484750 libzpool.so.1 0x4f 0xea 0x53 ztest_run 0x59f main 0x7ff _start 0x6c problem assumes exactly one value stack always true end putting wrong thing stack consumed value either add wrong message nvlist blow fix make sure caller clear stack pushing error message verify stack expected size authored matthew ahrens mahrens delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed paul dagnelie pcd delphix.com reviewed brady don.brady delphix.com ported brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com openzfs issue http www.illumos.org issue 9424 openzfs commit http github.com openzfs openzfs commit eb7e57429 close 7696,,
2419,e2cc448b6013c9b9ac4e12167a1d5abb6b790202,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-10 21:23:17 -0700,7702, reduce zdb output pool contains checkpoint running zdb without additional argument pool containing checkpoint entire checkpoint spacemap dumped make behavior conditional upon passing mmmm option described zdb man page mmmm display every spacemap record reviewed serapheim dimitropoulos delphix.com reviewed giuseppe natale guss80 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7702,,
2420,00c405b4b5e89741731daa59e23b9a7dabd41c32,atthew Ahrens <mahrens@delphix.com>, 2017-12-04 11:29:40 -0800,7697, openzfs 9454 zfs_blkstats count embedded block scrub resilver zfs count different type block printed zfs_blkstats mdb dcmd however fails count embedded block porting note commit d4a72f23 moved count_blocks bp_is_embedded conditional part sequential resilver functionality since phys_birth would zero case never happen described confirmed code coverage analysis remove conditional realign aspect function openzfs authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru reviewed tom caputi tcaputi datto.com ported brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com openzfs issue http www.illumos.org issue 9454 openzfs commit http github.com openzfs openzfs commit d8a447a7 close 7697,,
2421,ab11916583e5215d3143fa9109a9f8b4a80714f7,rakash Surya <prakash.surya@delphix.com>, 2017-09-07 15:12:35 -0700,7695, openzfs 9456 ztest failure problem  illumos bug 8373 integrated present code path dmu_tx_assign fail dmu_tx_assign fails issue lwb passed result return lwb still opened state originally called solution  result new call path failed assertion need modified aware new possibility thus assert lwb longer opened state returned lwb non null since differentiate case dmu_tx_assign failing zio_alloc_zil failing within call  authored prakash surya prakash.surya delphix.com reviewed matt ahrens matt delphix.com reviewed serapheim dimitropoulos delphix.com reviewed prakash surya prakash.surya delphix.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov approved matt ahrens mahrens delphix.com openzfs issue http www.illumos.org issue 9456 openzfs commit http github.com openzfs openzfs commit a8b09f4e close 7695,,
2422,a7ed98d8b5cefbd62ed39b9cf25860dad3922861,erapheim Dimitropoulos <serapheim.dimitro@delphix.com>, 2016-09-12 08:15:20 -0700,7681, openzfs 9330 stack overflow creating deeply nested dataset datasets deeply nested 100 level impractical put limit level newly created datasets existing datasets work without problem problem seen attempting create dataset using option many level panic cpu0 thread bad trap type double fault ffffffff unix die 100 unix trap 157d unix 196 zfs dbuf_rele ... zfs dsl_dir_close zfs dsl_dir_evict zfs dbuf_evict_user zfs zfs dbuf_rele ... block repeat per directory ... ... create command working towards root ... zfs zfs zfs zfs findfunc zfs 38c zfs dmu_objset_find zfs zfs zfsdev_ioctl 347 genunix cdev_ioctl specfs spec_ioctl genunix fop_ioctl genunix ioctl 18e unix 1c9 porting note added module option documentation updated linux increase zfs.sh stack warning 15k enough time passed 16k reasonably assumed default value increased 3.15 kernel released june 2014 authored serapheim dimitropoulos delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matt ahrens matt delphix.com ported brian behlendorf behlendorf1 llnl.gov approved garrett amore garrett damore.org openzfs issue http www.illumos.org issue 9330 openzfs commit http github.com openzfs openzfs commit 757a75a close 7681,,
2423,66df02497c900dd1a74fdc218f9a81b690a40d47,rian Behlendorf <behlendorf1@llnl.gov>, 2018-07-09 12:46:14 -0700,7690, zts clean_mirror scrub_mirror cleanup remove dependency partitionable device clean_mirror scrub_mirror test case allows setup cleanup test case simplified removing need complex partitioning change also resolve issue clean_mirror device properly damaged since device name full path result loopx file left top level test_results directory signed brian behlendorf behlendorf1 llnl.gov close 7434 close 7690,,
2424,94370f595597389fe317c47acec588e10bd76cf5,roels NÃ¸rgaard <tnn@tradeshift.com>, 2018-07-07 01:15:19 +0200,7676, default ashift amazon ec2 nvme device add default kib ashift amazon ec2 nvme device instance nvme ephemeral device type c5d m5d per official documentation 4096 byte blocksize used match underlying hardware string identified via sudo sginfo dev nvme0n1 inquiry response cmd 0x12  device type vendor nvme product amazon ec2 nvme revision level lsblk kname type size model kname type size model nvme0n1 disk 442.4g amazon ec2 nvme instance storage http awsec2 latest userguide storage optimized instances.html retrived 2018 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed troels rgaard tnn tradeshift.com close 7676,,
2425,3f4e6d6f36732f0bd3b55487f04281f8eb553082,aul Dagnelie <paulcd2000@gmail.com>, 2018-07-06 09:27:37 -0700,7683, cause autogen.sh fail autoreconf fails reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed paul dagnelie pcd delphix.com close 7683,,
2426,4d044c4c1d68ed518fe37eea61a4cc77048940fb,erapheim Dimitropoulos <serapheim@delphix.com>, 2017-08-04 09:30:49 -0700,7665, openzfs 9238 zfs spacemap encoding motivation  current space map encoding following disadvantage assuming 512 sector size entry represent 16mb segment make encoding inefficient large region space vdev wide space map started used new feature i.e device removal zpool checkpoint started imposing limit vdevs used based maximum addressable offset currently 64pb top level vdev new encoding  layout found space_map.h remains backwards compatible old one introduced two word entry format besides extending limit imposed single entry layout also includes vdev field extra padding prefix extra padding prefix reserved future usage e.g new prefix future encoding new field flag new vdev field make space map self descriptive also open door pool wide space map expected used log spacemap project one final important note number bit used vdevs reduced bit blkptrs decided know setup use 16m vdevs time wanted fit vdev field space map addition give extra bit dva_t reference  new encoding also discussed towards end log space map presentation 2017 openzfs summit link http www.youtube.com watch jj2ixrkl5bq authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed george wilson gwilson zfsmail.com reviewed brian behlendorf behlendorf1 llnl.gov approved gordon ross gwr nexenta.com ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs commit http github.com openzfs openzfs commit 90a56e6d openzfs issue http www.illumos.org issue 9238 close 7665,,
2427,4e82b4be78b0febb2a6add5dc070f34b27a4b786,hmed Gahnem <ahmedg@delphix.com>, 2018-06-26 16:30:56 -0600,7660, openzfs 9184 add zfs performance test fixed blocksize random read write change introduces new performance test doe random read writes instead using bssplit determine block size fixed blocksize additionally new size added test timestamp data recorded performance data authored ahmed gahnem ahmedg delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed john kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony nguyen tony.nguyen delphix.com ported john kennedy john.kennedy delphix.com signed john wren kennedy john.kennedy delphix.com requires builder perf openzfs issue http www.illumos.org issue 9184 openzfs commit http github.com openzfs openzfs pull 659 external issue dlpx 46724 close 7660,,
2428,370bbf66aec5b4208fc8e49dfbc0d9e395f2e8f3,om Caputi <tcaputi@datto.com>, 2018-07-02 16:37:48 -0400,7667, fix coverity defect cid 176037 cid 176037 uninitialized scalar variable patch fix uninitialized variable defect caught coverity introduced 69830602 reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7667,,
2429,e03a41a6049d463fe746038c81dec394783db98e,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-29 09:40:32 -0700,7663, zts improve enospc test enospc_002_pos test case would frequently fail due command succeeding expected fail due lack space order make far likely file created across multiple transaction group order consume many unused block possible dependency test run partitioned block device removed simpler use sparse file signed brian behlendorf behlendorf1 llnl.gov close 7663,,
2430,da2feb42fb5c7a8c1e1cc67f7a880da9d8e97bc2,om Caputi <tcaputi@datto.com>, 2018-06-28 17:55:11 -0400,7662, fix zfs recv non large_dnode send stream currently bug older send stream without flag handled correctly code receive_object fails handle case drro drr_dn_slots set always case sending code doe support feature flag patch fix issue ensuring value treated dnode_min_slots tested dhe git dehacked.net reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7617 close 7662,,
2431,edf60b864505497dc8c4f09d4ce2190c72f1e2c2,hunwei Chen <david.chen@osnexus.com>, 2017-08-14 14:28:43 -0700,7661, enforce prop_onetime zpool property reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 7661,,
2432,69830602de2d836013a91bd42cc8d36bbebb3aae,om Caputi <tcaputi@datto.com>, 2018-06-28 12:20:34 -0400,7632, raw receive fix encrypted objset security fix patch fix two problem encryption code first current code doe correctly prohibit dmu updating dn_maxblkid object truncation within raw receive usually cause issue truncating drr_free record aggregated drr_free record later receive relatively hard hit second patch fix security issue reading block within encrypted object guarantee dnode block ever verified mac usually verification happened anyway bonus buffer read use case notably zvols might never perform check reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 7632,,
2433,3be1eb29dab4e96249de7832d9b3dae5740c33c8,im Chase <tim@chase2k.com>, 2018-06-27 09:29:16 -0500,7658, fix formatting zpool feature formatting feature beginning large_blocks broken feature added signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7658,,
2434,fb8a10d5beb9c5d9106d56b669ab664df7fe08e6,itan Adler <lists@eitanadler.com>, 2018-04-27 23:59:49 +0000,7658, openzfs 9521 add checkpoint field add checkpoint field default list zpool list man page authored eitan adler list eitanadler.com reviewed serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com reviewed kpande github tripleback.net reviewed tim chase tim chase2k.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9521 openzfs commit http github.com openzfs openzfs commit c5a860f7b close 7658,,
2435,aebfb848514ec371bb6872529f680f04d4103911,ow-power <msl0000023508@gmail.com>, 2018-06-27 01:17:55 +0800,7655, fix missing option zpool online usage reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed whr msl0000023508 gmail.com close 7655,,
2436,d2734cce68cf740e015312314415f9034c67851c,erapheim Dimitropoulos <serapheim.dimitro@delphix.com>, 2016-12-16 14:11:29 -0800,7570, openzfs 9166 zfs storage pool checkpoint detail motivation feature usage found blogpost http post zpool checkpoint lightning talk feature found http www.youtube.com watch fpqa8k40jam implementation detail found big block comment  side change relevant commit explained elsewhere renames member struct metaslab tree shorter without losing meaning space_map_ alloc truncate accept block size parameter reason current state space map allocate dmu use global tunable space_map_blksz defauls 4kb metaslab space map term bandwirdth since scattered disk space map default probably want example device removal review relationship vdev could benefit bigger block size porting note part dsl_scan_sync handle async destroys moved new function remove verify flag fwrite kernel.c zhack write block device backed pool zts fix get_txg due checkpoint_txg use large block size dev urandom linux  adopt delphix setting spa_dvas_per_bp test speed attempt fill pool create base nested pool sync disabled speed setup phase clear label test pool checkpoint test avoid duplicate pool issue test marked known fail reason listed disclaimer new module parameter  documented debugging formerly  authored serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http illumos.org issue 9166 openzfs commit http github.com openzfs openzfs commit 7159fdb8 close 7570,,
2437,88eaf610d9c7056f0946e5090cba1e6288ff2b70,im Chase <tim@chase2k.com>, 2018-06-16 11:21:46 -0500,7570, use eval history_002_pos log_must otherwise output consumed output redirection reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7570,,
2438,a8577bdb32e091645df901d8501e44ef50748389,js124 <ajs124@users.noreply.github.com>, 2018-06-25 18:50:01 +0200,7649, fix duplicate typo reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed bunder2015 omfgbunder gmail.com signed ajs124 git ajs124.de close 7649,,
2439,7637ef8d235f34876c8600e3006e0bb9763b24d8,erapheim Dimitropoulos <serapheim@delphix.com>, 2018-06-12 15:34:20 -0700,7644, openzfs 9591 ms_shift incorrectly changed ms_shift incorrectly changed changed config indirect vdevs historically expanded according expect new vdevs vdev_ms_array equal ahead set metaslab size problem indirect vdevs also vdev_ms_array metaslabs destroyed removal done result vdev expanded removed may ms_shift changed another vdev added removal fortunately behavior doe cause type crash bad behavior kernel confuse zdb anyone kind analysis history pool authored serapheim dimitropoulos serapheim delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson gwilson zfsmail.com reviewed john kennedy john.kennedy delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com ported tim chase tim chase2k.com openzfs commit http github.com openzfs openzfs pull 651 openzfs issue http illumos.org issue 9591a external issue dlpx 58879 close 7644,,
2440,af43029484cc368112954668dace8fa9327f72f2,atthew Ahrens <mahrens@delphix.com>, 2018-06-20 14:07:50 -0700,7646, remove suffix zio taskq name zio taskq multiple instance e.g z_rd_int_0 z_rd_int_1 etc one unique name suffix make performance analysis difficult default perf includes thread name taskq name stack trace mean get different stack thing executed different taskq remove suffix taskq name read interrupt thread named z_rd_int note already support multiple taskq name happens multiple pool case taskq different tq_instance show proc spl taskq reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru reviewed pavel zakharov pavel.zakharov delphix.com signed matthew ahrens mahrens delphix.com close 7646,,
2441,e4a3297a044ebafe467e6edda6096a784a0e1848,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-20 14:03:13 -0700,7638, zts adopt openzfs test analysis script adopt extend openzfs zts result analysis script use zfs linux allows automatic analysis test may skipped variety reason entirely reliable addition list known failure updated zfs linux new maybe section mapping include test might correctly skipped depending test environment may missing dependency lack required kernel support list also includes test normally pas might occasion fail harmless reason script also extended include reason given test might skipped may fail reason included test result pas expected section failure preferable set reason github issue number skipped test several generic reason available may also specify custom reason needed test added back linux.run file even expected failed value running test may pas expected result test encoded new analysis script test disabled ran slowly bit system enabled developer working bit system ass reasonable environment unnecessary dependency physical block device removed checksum grow_pool grow_replicas test group longer skipped updated test case run properly enabled moved grow test single directory reviewed prakash surya prakash.surya delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7638,,
2442,1c38ac61e1dbc876eb4079a69f965bb51635fef7,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-19 21:52:45 -0700,7645, linux 4.14 compat function replaced 4.14 kernel commit torvalds linux 5fdee212 change resulted default elevator used negatively impact performance rather adding additional compatibility code detect new interface unconditionally attempt set elevator since expect fail block device without elevator error message moved zfs_dbgmsg finally observed elevator_change removed 4.12 kernel commit torvalds linux c033269 update comment clearly specify expected export elevator_change symbol reviewed matthew ahrens mahrens delphix.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7645,,
2443,6413c95fbd88dc06ae57e50398b8530a17d0c7d3,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-19 21:51:18 -0700,7643, linux 4.18 compat inode timespec timespec64 commit torvalds linux 95582b0 change inode i_atime i_mtime i_ctime member form timespec timespec64 make 2038 safe part change current_time function also updated return timespec64 type resolve issue introducing new type defined match timespec type used inode used working inode timestamps ensure matching type timestruc_t type illumos used similar fashion specified always timespec_t rather incorrectly define type timespec_t type replaced new type finally kernel user space sys time.h header aligned define appropriate context several constant macro include static inline implementation gethrestime gethrestime_sec gethrtime reviewed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7643,,
2444,aeb39df72615b896db2b69921d7d887f1bb0a396,pande <github@tripleback.net>, 2018-06-19 00:51:06 -0400,7641, fix typo comment handeling handling reviewed george melikov mail gmelikov.ru reviewed giuseppe natale guss80 gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed bunder2015 omfgbunder gmail.com signed kash pande kash tripleback.net close 7641,,
2445,cd32e5db8bb4411533dc21cfc12a5af5f3b56701,om Caputi <tcaputi@datto.com>, 2018-06-18 17:10:54 -0400,7637, add assert debug encryption key mapping issue patch simply add assert confirms last decrypting reference dataset wait dataset longer dirty help debug issue zio layer find encryption key dataset disowned reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7637,,
2446,517d2471921fc44622dc737b09b655829b8c9c6f,ichard Yao <ryao@gentoo.org>, 2018-06-15 18:16:29 -0400,7606, copy builtin spl must kbuild first recent spl merge caused regression kernel zfs integrated source module would initialized alphabetical order despite icp requiring spl module loaded first caused kernel zfs builtin fail boot resolve adding special case spl list first somewhat ugly work reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew thode prometheanfire gentoo.org signed richard yao ryao gentoo.org close 7595 close 7606,,
2447,917f475fba03ceb4e11c7aa35aff09c47a6c596e,ohn Gallagher <jgallag88@gmail.com>, 2018-06-15 15:10:42 -0700,7618, add tunables channel program patch add tunables modifying maximum memory limit maximum instruction limit specified running channel program reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed sara hartse sara.hartse delphix.com signed john gallagher john.gallagher delphix.com external issue 1085 close 7618,,
2448,7b98f0d91f09df90218322df5cf1b8ba7928972e,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-15 15:05:21 -0700,7611, linux compat 4.18 added support bop check_events interface added 2.6.38 kernel replace bop media_changed fully implementing functionality allows volume resize code rely revalidate_disk preferred mechanism remove need use order bop check_events lookup zvol_state_t stored disk private_data zvol_state_lock need held since check event interface may poll mutex converted rwlock better concurrently rwlock need taken writer zvol_free path disk private_data set null configure check structure consolidated single kernel block device operations.m4 file configure check assoicated dead code removed interface added 2.6.28 kernel predates oldest supported 2.6.32 kernel therefore always available updated maximum linux version meta file 4.17 kernel released 2018 zol compatible finalized kernel reviewed boris protopopov actifio.com reviewed sara hartse sara.hartse delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7611,,
2449,29445fe3a03d58d5aa725bd6c8964df8c8081385,llan Jude <github@shellfusion.ca>, 2018-06-14 12:47:26 -0400,7626, reserve zstd reserve bit zstd compression feature freebsd reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed allan jude allanjude freebsd.org close 7626,,
2450,7e0594a3dad8fc0c5cb54494eb7c4466efe854e2,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-14 09:43:32 -0700,7625, remove libefi __linux__ wrapper zol version libefi modified linux several place outside existing __linux__ wrapper remove make code easier read mislead anyone sole modification linux signed brian behlendorf behlendorf1 llnl.gov close 7625,,
2451,c91cf36fc23f66efd9de5738b62cf8dec87f15ce,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-14 09:41:27 -0700,7630, fix test case commit 2ffd89fc allowed two new error reported zil_reset order provide descriptive error message regarding log device could removed however new return value handled test case resulting ztest failure automated testing reviewed tim chase tim chase2k.com reviewed george melikov mail gmelikov.ru reviewed paul zuchowski pzuchowski datto.com signed brian behlendorf behlendorf1 llnl.gov close 7630,,
2452,1fac63e56f370f675b23687ee2e634744c54e818,atthew Ahrens <mahrens@delphix.com>, 2018-05-31 10:29:12 -0700,7602, openzfs 9577 remove tsd tsd thread specific data necessary instead pas flag place prevent recursive dbuf eviction making change benefit code semantics easier understand linux performance improved creating removing tsd value setting null non null expensive often according nexenta current semantics cause deadlock concurrently calling rare today working parallel unmount change trigger easily porting note minor conflict openzfs 9337 yet ported authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed serapheim dimitropoulos delphix.com reviewed brad lewis brad.lewis delphix.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9577 openzfs commit http github.com openzfs openzfs pull 645 external issue dlpx 58547 close 7602,,
2453,232dd8b956703bcc774524e78110d13de93dd5bd,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-13 10:20:58 -0700,7624, fix efi_get_info zvol detection partition detection zvol device working correctly resulting inconsistent partitioning behavior layering pool top zvols supported configuration still like work properly reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7624,,
2454,ab24877bd3459c84a9220a06acbbbfbb337e59a9,ohn Gallagher <jgallag88@gmail.com>, 2018-06-12 10:42:26 -0700,7615, zts deletes home directory export home cleanup privilege test empty variable empty corresponding setup skipped linux result export home deleted patch add assertion variable empty cause cleanup skipped linux well reviewed john wren kennedy jwk404 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed paul dagnelie pcd delphix.com signed john gallagher john.gallagher delphix.com external issue 1099 close 7615,,
2455,527757126088aed28a92399f6b5c1a2647f7e176,under2015 <omfgbunder@gmail.com>, 2018-06-12 13:37:12 -0400,7614, zts cleanup user_run user_run leaf two file tmp moving test_base_dir adding default cleanup routine reviewed john wren kennedy jwk404 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed bunder2015 omfgbunder gmail.com close 7614,,
2456,c634808ebbc86fc0eac498bcb17adda407da5569,om Caputi <tcaputi@datto.com>, 2018-06-11 21:42:12 -0400,7612, add pyzfs build directory gitignore recent addition pyzfs doe include generated build pyzfs.egg info directory pyzfs .gitignore make clean target patch simply corrects problem reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7612,,
2457,2ffd89fcb90969bd9e3a118cfe373dd356d1519a,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-06-07 21:07:29 -0400,7518, wrong error message removing log device case pool loaded without crypto key necessary playback intent log log device removal attempted generic busy message received change message inform user datasets must mounted reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed paul zuchowski pzuchowski datto.com close 7518,,
2458,174bcd581d546be77d055273d2bad67cc854fc01,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-07 15:55:11 -0700,7610, fix preemptible warning aggsum_add new aggsum counter cpu_seqid macro surrounded kpreempt_enable call prevent linux kernel bug warning addsum_add function use cpuid minimize lock contention selecting bucket selection bucket protected mutex safe reschedule process different processor time reviewed matthew thode prometheanfire gentoo.org reviewed paul dagnelie pcd delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7609 close 7610,,
2459,39042f97365c0e677e5e77ded90372526422afdf,ntonio Russo <antonio.e.russo@gmail.com>, 2018-06-07 12:59:59 -0400,7597, tunable directory zfs runtime script zpool zed place script subdirectory libexecdir distribution locate architecture independent script location e.g debian avoid path getting sync centralize definition build zfs test default.cfg makefile use new directory logic building test zfs test include default.cfg.in reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 7597,,
2460,fba33c3819761487a75c8f1307482959105a6269,athaniel Clark <Nathaniel.Clark@misrule.us>, 2018-06-07 12:51:56 -0400,7487, panic bad sa_magic sa_build_index sa_build_index encounter corrupt buffer panic add info zfs ring buffer return eio allows cleaner error recovery path reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed nathaniel clark intel.com issue 6500 close 7487,,
2461,7106b23640e8fba33df09b160f366918dcb79021,ntonio Russo <antonio.e.russo@gmail.com>, 2018-06-07 12:38:39 -0400,7608, minor documentation logging testing typo patch collect minor inconsistency typo documentation logging testing infrastructure reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 7608,,
2462,b405837a6cf74165316bf996b4b79d171b19c211,om Caputi <tcaputi@datto.com>, 2018-06-06 13:17:50 -0400,7593, update correct abd l2arc_read_done patch fix issue l2arc_read_done would always write data b_pabd even raw encrypted data requested occured case l2arc device different ashift main pool reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 7586 close 7593,,
2463,e7504d7a188b666a61a8c2d8c1ffaa9713f6cdfa,om Caputi <tcaputi@datto.com>, 2018-06-06 13:16:41 -0400,7592, raw receive function must decrypt data patch fix small bug found receive_spill sometimes attempted decrypt spill block raw receive addition patch fix another small issue arc_buf_fill error handling decryption failure could caused first bug would attempt set arc header io_error flag without holding header lock reviewed matthew thode prometheanfire gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 7564 close 7584 close 7592,,
2464,6969afcefdfb49fb9c0fcf56240e6eb133a2c4a8,lek P <alek-p@users.noreply.github.com>, 2018-06-06 13:14:52 -0400,7574, always continue recursive destroy error currently recursive zfs destroy first error encountered stop destruction datasets error may happen variety reason including competing deletion busy datasets patch switch recursive destroy always best effort recursive dataset destroy reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed alek pinchuk apinchuk datto.com close 7574,,
2465,62841115bc77fbd8b55d89f07cbe1cc4fb3bc520,under2015 <omfgbunder@gmail.com>, 2018-06-06 13:00:22 -0400,7600, zts history path cleanup history test hard coded use tmp clean properly testing reviewed john wren kennedy jwk404 gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com issue 7507 close 7600,,
2466,37fb3e431845b934df9771d7bcca5fbef79f4c1e,aul Dagnelie <pcd@delphix.com>, 2017-05-25 11:32:40 -0700,7462, openzfs 8484 implement aggregate sum use arc counter pursuit improving performance multi core system implement fanned counter use improve performance arc statistic stats updated extremely frequently consume significant amount cpu time authored paul dagnelie pcd delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported paul dagnelie pcd delphix.com openzfs issue http www.illumos.org issue 8484 openzfs commit http github.com openzfs openzfs commit 7028a8b92b7 issue 3752 close 7462,,
2467,f0ed6c744872ec6dc4838947ffc597f4d141864a,ony Hutter <hutter2@llnl.gov>, 2018-06-06 09:33:54 -0700,7563, add pool state proc entry suspended pool add proc entry display pool state cat proc spl kstat zfs tank state online done without using spa config lock never hang fix zpool status zpool list health output print suspended instead online suspended pool reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling signed tony hutter hutter2 llnl.gov close 7331 close 7563,,
2468,2d9142c9d4c9db4edcef4777fecfafa4832610cb,rian Behlendorf <behlendorf1@llnl.gov>, 2018-06-04 16:52:10 -0700,7591, remove rwlock wrapper remaining consumer rwlock compatibility wrapper ztest remove wrapper convert remaining call underlying pthread function rwlock_init rwlock_destroy rw_rdlock rw_wrlock rw_unlock note default equivilant usync_thread behavior functional change reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7591,,
2469,e48afbc4ebc64712f56220b65ed12c536ef0e114,erapheim Dimitropoulos <serapheim@delphix.com>, 2017-12-05 09:45:46 -0800,7587, openzfs 9464 txg_kick fails see quiescing txg_kick fails see quiescing forcing transaction next stage without leaving accumulate change creating fragmented pool dcenter continuously writing multiple instance randwritecomp get following output txg.d 0ms 311mb 4114ms 75mb 544mb 336us 153ms 0ms 0ms 8mb 51ms 163mb 474mb 129us 34ms 0ms 0ms 366mb 4454ms 82mb 572mb 498us 20ms 0ms 0ms 406mb 5212ms 77mb 591mb 661us 37ms 0ms 0ms 340mb 5110ms 66mb 622mb 1048us 41ms 1ms 0ms 3mb 61ms 51mb 419mb 33us 0ms 0ms 0ms 361mb 3555ms 101mb 542mb 335us 40ms 0ms 0ms 356mb 4592ms 77mb 561mb 430us 89ms 1ms 0ms 11mb 129ms 90mb 507mb 222us 15ms 0ms 0ms 281mb 2520ms 111mb 542mb 334us 42ms 0ms 0ms 383mb 3666ms 104mb 557mb 411us 133ms 0ms 0ms 404mb 5757ms 70mb 635mb 1274us 123ms 2ms 4ms 367mb 4172ms 88mb 556mb 401us 51ms 0ms 0ms 42mb 470ms 90mb 557mb 412us 43ms 0ms 0ms 261mb 2273ms 114mb 556mb 407us 27ms 0ms 0ms 394mb 3646ms 108mb 552mb 393us 304ms 0ms 0ms 275mb 2416ms 113mb 510mb 200us 53ms 0ms 0ms 9mb 53ms 169mb 483mb 140us 100ms 1ms txgs getting synced lot change pushed txg_kick basically force current open txg get quiesced state tx_syncing_txg tx_open_txg tx_synced_txg tx_quiesced_txg tx_synced_txg tx_open_txg cv_broadcast  problem code check currently quiescing anything quiesce sync requested etc following scenario happen open txg enough dirty data pushed quiesced state opened new txg txg currently synced immediately opening txg_kick run write dirty data saw currently syncing txg one requested quiescing request one bumping broadcast quiesce thread quiesce thread passed txg synced see quiescing request sent immediately grab without letting gather enough data putting quiesced state opening new txg scenario txg example entry interest show txg.d output ideally would like txg_kick get triggered sure syncing quiescing txg way kick open txg quiescing state sure nothing going would benefit different state running concurrently authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens matt delphix.com reviewed brad lewis brad.lewis delphix.com reviewed andriy gapon avg freebsd.org approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9464 openzfs commit http github.com openzfs openzfs commit 1cd7635b close 7587,,
2470,ab44e511e2546567a296a88e71ed2056372fd5a4,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-08-17 15:15:27 -0600,7585, openzfs 9245 zfs test failure slog_013_pos slog_014_pos test would fail attempt zpool destroy pool still busy changed call destroy_pool doe retry loop problem longer reproducible also removed non functional code test originally commented placing call log_pass test would fail sometimes check degraded pool would complete pool changed state changed logic check loop timeout problem longer reproducible authored john wren kennedy john.kennedy delphix.com reviewed matt ahrens matt delphix.com reviewed chris williamson delphix.com reviewed yuri pankov yuripv yuripv.net reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov porting note enabled openzfs issue http illumos.org issue 9245 openzfs commit http github.com openzfs openzfs commit 8f323b5 close 7585,,
2471,8a393be353c3bfffbfbe0f4d2bc57210b658dcde,avel Zakharov <pavel.zakharov@delphix.com>, 2017-02-10 17:51:09 -0500,7532, openzfs 9235 rename want able pas various setting import open pool related rewind instead adding new policy duplicate bunch code rename rewind_policy generic term like load_policy instance like set spa nvlist rather flag parameter passed spa_import case want flag import case also open case one flag could used zdb would allow zfs open pool log missing authored pavel zakharov pavel.zakharov delphix.com reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9235 openzfs commit http github.com openzfs openzfs commit d2b1e44 close 7532,,
2472,85912983a4ff12eab20b170c15eb26f7761b8be2,under2015 <omfgbunder@gmail.com>, 2018-06-04 12:06:16 -0400,7596, fix typoes zpool man page fixed highlighting zpool man page reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed bunder2015 omfgbunder gmail.com close 7596,,
2473,1a5b96b8ee66da5dfdfbedcb6bc462f454b4a25d,atthew Ahrens <mahrens@delphix.com>, 2018-05-30 11:27:40 -0700,7578, openzfs 9329 panic zap_leaf_lookup due concurrent zapification null pointer issue shown solution initialize content object changing type concurrent accessors see non zapified ready access via zap bad trap type page fault addr occurred module zfs due null pointer dereference unix die unix trap dc0 unix cmntrap zfs zap_leaf_lookup zfs fzap_lookup zfs zap_lookup_norm 111 zfs zap_contains zfs zfs zfs 262 zfs zfs zfs zfs 140 zfs zfsdev_ioctl 4d7 genunix cdev_ioctl specfs spec_ioctl genunix fop_ioctl genunix ioctl unix 1c9 porting note dmu_ot_byteswap conditional kept authored matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brad lewis brad.lewis delphix.com reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9329 openzfs commit http github.com openzfs openzfs commit e8e0f97 close 7578,,
2474,d2a12f9e2a94bdd09f160bdf98feda21203a7e74,atthew Ahrens <mahrens@delphix.com>, 2018-05-30 11:16:54 -0700,7578, openzfs 9328 zap code take advantage c99 zap code written allowed c99 solaris kernel change take advantage able declare variable first used reduces variable scope mean scrolling find type variable authored matthew ahrens mahrens delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9328 openzfs commit http github.com openzfs openzfs commit 76ead05 close 7578,,
2475,74d42600d8d391dab5c57e87e81f97e0ca07b7b2,ara Hartse <sara.hartse@gmail.com>, 2018-05-31 10:36:37 -0700,7582, zpool reopen detect expanded device update bdev_capacity wholedisk vdevs query size underlying block device correcting size efi parition partition alignment therefore detect expanded space correct expandsize aligned metaslab size new space reported large enough new metaslab reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed john wren kennedy jwk404 gmail.com signed sara hartse sara.hartse delphix.com external issue 165 close 7546 issue 7582,,
2476,d1f06ec5bccae26639b7bb6bd3925f9998848f86,atthew Ahrens <mahrens@delphix.com>, 2018-05-31 09:19:59 -0700,7580, make install work make install fail directory created still exists case blow away spl src directory recreating also gracefully handle migration pre spl merge post spl merge reviewed richard elling richard.elling reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 7580,,
2477,928046b744a6d3f93f5ba1351a6d700a62535a00,ntonio Russo <antonio.e.russo@gmail.com>, 2018-05-30 23:11:19 -0400,7571, explicitly state supported linux version add meta tag linux maximum linux minimum one pain point package maintainer ensuring compatibility packaged version zfs linux kernel providing authoritative compatibility guide source tree maintainer automate compatibility check additionally increase meta string extraction specificity configure.ac find name version simple grep might conceivably find field require string beginning line followed colon avoid confusion reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com reviewed george melikov mail gmelikov.ru signed antonio russo antonio.e.russo gmail.com close 7571,,
2478,93491c4bb9dcc755f74d266f2aeb5a2d3cf94432,ohn Wren Kennedy <john.kennedy@delphix.com>, 2018-04-10 14:29:55 -0600,7491, openzfs 9082 add zfs performance test targeting zil latency add new test measure zil performance add ability induce delay zinject add new variable allow fio thread distributed individual file system opposed going one happens elsewhere refactoring do_fio_run authored prakash surya prakash.surya delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported john wren kennedy jwk404 gmail.com openzfs issue http www.illumos.org issue 9082 openzfs commit http github.com openzfs openzfs pull 634 external issue dlpx 48625 close 7491,,
2479,c26cf0966d131b722c32f8ccecfe5791a789d975,ony Hutter <hutter2@llnl.gov>, 2018-05-29 18:13:48 -0700,7542, fix zio io_priority failed assert fix assert verify3 zio io_priority failed panic vdev_queue.c 832 reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7566 close 7542,,
2480,3c28c636424f26b5638e27d238fd52e6598e9900,teffen MÃ¼thing <steffen.muething@iwr.uni-heidelberg.de>, 2018-05-30 02:32:05 +0200,7562, install basename utility dracut initramfs vdev_id requires program basename handling short alias defined vdev_id.conf defined without leading path basename always available dracut environment cause pool device name change using vdev device extreme case make pool import fail dracut commit fix problem explicitly installing basename reviewed brian behlendorf behlendorf1 llnl.gov signed steffen mã¼thing iwr.uni heidelberg.de close 7562,,
2481,93ce2b4ca5a40c41ac945cd3aaf4a4a22bb751e1,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-15 17:53:18 -0800,7556, update build system packaging minimal change required integrate spl source zfs repository build infrastructure packaging build system packaging renamed spl_ autoconf macro zfs_ removed redundant spl_ autoconf macro updated rpm spec file remove spl package dependency zfs package obsoletes spl package zfs kmod package obsoletes spl kmod package zfs kmod devel package updated add compatibility symlinks usr src spl x.y.z dependent package updated removed future release updated copy builtin script kernel build updated dkm package include spl.ko updated stale author file include contributor updated stale copyright included spl exception renamed readme.markdown readme.md renamed license renamed disclaimer notice required code change removed redundant have_spl macro removed _boot nvpairs since apply linux initial header cleanup removal empty header refactoring remove spl repository clone build zimport.sh use define_spinlock removed due build issue forcing c99 compilation replaced legacy access_once read_once include needed header current export_symbol reviewed tony hutter hutter2 llnl.gov reviewed olaf faaland faaland1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com signed brian behlendorf behlendorf1 llnl.gov yes close 7556,,
2482,1272941f49321bcb7b26025670720c98785427ee,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-29 14:57:07 -0700, , merge branch zfsonlinux merge spl merge minimal version zfsonlinux spl repository zfsonlinux zfs repository care taken prevent file conflict merging preserve spl repository history spl kernel module remains gplv2 license documented additional file signed brian behlendorf behlendorf1 llnl.gov,,
2483,a91258913fb597db7f409f3534512cf2249bceb6,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-14 17:01:15 -0800, , prepare spl repo merge zfs repo commit remove everything repository except core spl implementation linux file remain moved non conflicting location facilitate merge readme.md associated file updated accordingly signed brian behlendorf behlendorf1 llnl.gov,,
2484,3e5300e0ed3c4b49e3b0dab7daded1e3bfaaded7,ntonio Russo <antonio.e.russo@gmail.com>, 2018-05-26 13:56:24 -0400,7554, support debian dkm build script dkms.mkconf call configure linux debian put kernel source lib module version source patch add logic dkm file produced script dkms.mkconf debian shipped official zfs packaging dkm build time check system debian system adjusts path accordingly reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed antonio russo antonio.e.russo gmail.com close 7358 close 7540 close 7554,,
2485,561ba8d1b1bb1f74c0182fb95161adfec99e27a1,orgen Lundman <lundman@lundman.net>, 2018-05-07 17:35:50 +0900,7561, openzfs 9523 large alloc zdb cause trouble 16mb alloc cause core certain situation clang gcc55 authored jorgen lundman lundman lundman.net reviewed igor kozhukhov igor dilos.org reviewed andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov porting note replaces equivalent fix previously made linux openzfs issue http illumos.org issue 9523 openzfs commit http github.com openzfs openzfs commit 2c1964a close 7561,,
2486,0dc2f70c5cece6ef2474e14552111ae098d9f5b4,atthew Ahrens <mahrens@delphix.com>, 2018-02-26 15:33:55 -0800,7536, openzfs 9486 reduce memory used device removal fragmented pool device removal allocates new location allocated segment disk removed allocation result one entry mapping table map old location length new location fragmented disk removed result large number mapping entry thus large amount memory consumed mapping table worst real world case seen around 1gb ram per 1tb storage removed improve situation allocating larger segment span across allocated free region device removed including free region allocation thus mapping reduce number mapping entry example allocation followed free allocated would allocate 9kb move entire region including allocated free part case used one mapping previously would used two often ratio much higher real world use need mark region free removing device free new location also obsolete mapping entry method preserve fragmentation removing device rather consolidating allocated space small number chunk possible result drastic reduction memory used mapping table around 20x fragmented case fragmented real world case reduces memory used mapping 1gb 50mb ram per 1tb storage removed fragmented case typically also see around 100mb ram per 1tb storage porting note add following module parameter   document following module parameter    authored matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http illumos.org issue 9486 openzfs commit http github.com ahrens illumos commit 07152e142e44c external issue dlpx 57962 close 7536,,
2487,ba863d0be4cbfbea938b10e49fb6ff459ac9ec20,ony Nguyen <tony.nguyen@delphix.com>, 2018-05-22 11:51:46 -0600,7549, profiling perf test stack profiling quite useful linux zfs test suite doe current collect data linux perf common tool purpose though perf record data file quite large change linux zfs perf test capture perf record data perf installed system environment variable set reviewed john wren kennedy jwk404 gmail.com reviewed matthew ahrens mahrens delphix.com signed tony nguyen tony.nguyen delphix.com external issue 971 close 7549,,
2488,a430cef9cd6cbff7d9827b37c1cb322aaa1bf9dc,atthew Ahrens <mahrens@delphix.com>, 2018-05-21 10:36:59 -0700,7547, create bin directory zloop.sh work running zloop.sh need run script zfs tests.sh create populate bin directory symlinks utility rather making developer remember make  reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 7525 close 7547,,
2489,43eb39d6ccd8fbaa5ae3a84a6df549331db4d6be,eorge Melikov <mail@gmelikov.ru>, 2018-05-15 19:02:57 +0300,7539, small cleanup issue template add link clean system information table easier find needes documentation process link reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed george melikov mail gmelikov.ru close 7539,,
2490,f46209dd6bdb0fdcb22623d64008c23ddc603150,eorge Melikov <mail@gmelikov.ru>, 2018-05-15 19:01:28 +0300,7538, update test readme.md fix markdown option command example readable code style reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale guss80 gmail.com signed george melikov mail gmelikov.ru close 7538,,
2491,ab6a2b5cd7ff867e63b03ca6c021d72d9b6be817,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-15 08:58:46 -0700,7541, zts improve reliability possible zpool attach portion test case complete zpool scrub issued update test case force resilvering phase take longer reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 5444 close 7541,,
2492,8c64fe04421664fbf908bbe928e14e2dfeadb058,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-14 20:36:30 -0700,7528, zts update o_tmpfile support check centos 7.5 kernel provided compatibility wrapper support o_tmpfile result test setup script correctly detecting kernel support zfs module built without o_tmpfile support due non standard centos kernel interface handle case updating setup check fail either kernel zfs module fail provide support reason clearly logged test result reviewed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7528,,
2493,38a19edd34f6a3fc0c8d0f6b9750fc2df2856c9f,avel Zakharov <pavel.zakharov@delphix.com>, 2016-09-14 11:01:40 -0400,7533, openzfs 9189 add debug txg check fails change added help debug issue 9187 essentially original bug vdev_validate seems fails print failed reading config could happen either label actually corrupt zio_wait fails label discarded pas txg check beyond 9187 debug info case happens could useful scenario zpool import authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed giuseppe natale dinatale2 llnl.gov approved matt ahrens mahrens delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9189 openzfs commit http github.com openzfs openzfs commit f6af1b7 close 7533,,
2494,db7d07e14ba4b964f64058e2c3d121d32f8d53c4,avel Zakharov <pavel.zakharov@delphix.com>, 2016-12-16 14:20:15 -0500,7531, openzfs 9191 dump vdev tree zfs_dbgmsg spa load fails due missing log device add vdev_print_tree log device missing ease debugging authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed matt ahrens matt delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9191 openzfs commit http github.com openzfs openzfs commit c5c02e5 close 7531,,
2495,189bd0b67085a6c26589201d256ff46a121f142f,avel Zakharov <pavel.zakharov@delphix.com>, 2016-10-17 22:51:25 -0400,7530, openzfs 9190 fix cleanup routine must clear slow disk zinject injection test cleanup routine otherwise test fails cause subsequent test fail authored pavel zakharov pavel.zakharov delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9190 openzfs commit http github.com openzfs openzfs commit 762c6b4 close 7530,,
2496,a11c7aaec9c10f22f3259545e2697005cfd19863,avel Zakharov <pavel.zakharov@delphix.com>, 2016-10-19 17:46:08 -0400,7529, openzfs 9187 racing condition vdev label vdev_validate ztest failed uncorrectable error despite fix 7163. side mirror also distinguishes issue definitely seems like racing condition vdev_validate spa_sync thread spa_sync vdev label updated latest txg thread vdev_validate vdev label txg compared ahead thread spa_sync updated latest txg solution check txg vdev_validate unless config lock held authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed matt ahrens matthew.ahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9187 openzfs commit http github.com openzfs openzfs commit 805fda72 close 7529,,
2497,b669ab83bb3636e86b8fda271ee1549f2692d03a,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-13 18:59:02 -0700,7534, ignore .o.ur safe build artifact generated building ubuntu 18.04. also ignore new dynamically generated zfs mount generator.8 man page module .cache.mk file reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7534,,
2498,bc5f51c5de21fd8b7cf3110801a6b1db1e4c3d0a,laf Faaland <faaland1@llnl.gov>, 2018-05-11 12:46:07 -0700,7521, module param callback check initialized spa callback provided module parameter executed module loaded user alters via sysfs e.g echo bar sys module zfs parameter foo well module loaded argument e.g modprobe zfs foo bar latter case init function likely run yet including spa_init initializes namespace lock safe use instead immediately taking namespace lock attemping iterate initialized spa structure check whether spa_mode_global nonzero set spa_init initialized namespace lock reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com signed olaf faaland faaland1 llnl.gov close 7496 close 7521,,
2499,68fded814692c6a7fa7ca1f584a34a92aaa279af,ntonio Russo <antonio.e.russo@gmail.com>, 2018-05-11 15:44:14 -0400,7453, add canonical mount option zfs mount generator lib libzfs libzfs_mount.c zfs_add_options provides canonical mount option used zfs mount command call zfs mount directly systemd.mount unit mirror logic zfs mount generator zed script updated cache property well include mini tutorial manual page properly substitute configuration path zfs mount generator.8.in standardize makefile reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed antonio russo antonio.e.russo gmail.com close 7453,,
2500,29badadd4e3af86975bcaa23acca0e939f954af2,under2015 <omfgbunder@gmail.com>, 2018-05-11 15:37:44 -0400,7524, fix shebang import test incorrect shebang used porting reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed bunder2015 omfgbunder gmail.com close 7523 close 7524,,
2501,d1043e2f6da4315f0dcbd1487b4e6b5f63bebc41,im Chase <tim@chase2k.com>, 2018-05-08 23:45:47 -0500,7499, unify behavior deadman parameter  paramaters stored per pool however update per pool state change patch give add behavior two consistency also three case update per pool parameter spa_init actually called order avoid panicking trying take lock mutex reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7499,,
2502,670d74b9cee4dd185a620510bffd4797a2e1066a,under2015 <omfgbunder@gmail.com>, 2018-05-09 00:42:58 -0400,7515, zts enospc_002 path cleanup removing hard coded path used enospc_002 reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed bunder2015 omfgbunder gmail.com close 7515,,
2503,f3d28f0a59825a88840d84927b05af0cf9e8447a,im Chase <tim@chase2k.com>, 2018-05-03 23:02:38 -0500,7459, streamline zpool_import test create ext4 file system atop dev_diskdir disk2 likely sufficient space succeed instead simply create vdev file directory would mounted signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7459,,
2504,a0ad7ca54e7803b31458c78bc755d41d22a6ee78,im Chase <tim@chase2k.com>, 2018-05-03 18:23:15 -0500,7459, clear vdev_faulted clear vdev_faulted set external zol support zpool export force fault combined temporary fault persist across export import cause configuration set without set case previously offlined vdev imported line state clearing vdev_faulted flag cause import treat device line typically resilver catch based dtl reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7459,,
2505,6cb8e5306d9696d155ae7a808f56c4e46d69b64c,avel Zakharov <pavel.zakharov@delphix.com>, 2016-07-22 10:39:36 -0400,7459, openzfs 9075 improve zfs pool import load process corrupted pool recovery work done lately improve debugability zfs pool load import process includes 7638 refactor spa_load_impl several function 8961 spa load import tell failed 7277 zdb able print zfs_dbgmsg iterate top change made make import process resilient crash free one first task pool load process parse config provided userland describes device pool composed vdev tree generated config vdevs opened meta object set pool accessed several metadata object necessary load pool read exact configuration pool also stored inside since configuration provided userland external might accurately describe vdev tree pool txg loaded relied upon safely operate pool reason configuration read early past two configuration compared together mismatch load process aborted error returned latter good way ensure pool doe get corrupted however made pool load process needlessly fragile case vdev configuration changed userland configuration outdated since stored copy configuration provided userland perfect order read content hence new approach adopted pool first opened untrusted userland configuration real configuration read trusted configuration used generate new vdev tree pool opened pool opened untrusted configuration writes disabled avoid accidentally damaging read sanity check performed block pointer see dva point known vdev configuration untrusted instead panicking system check fail simply avoid issuing read invalid dvas new two step pool load process allows rewinding pool accross vdev tree change device replacement addition etc loading pool external config file clustering environment also becomes much safer since pool import even config outdated instance register recent device addition code place became relatively easy implement long sought feature ability import pool missing top level i.e non redundant device note since almost guarantee loss data feature restricted read import porting note zts fix make dist target zpool_import maximum path length allowed tar character several new test case exceeded limit resulting included tarball shorten name slightly set get tunables using accessor function get last synced txg via zfs_txg_history mechanism clear zinject handler cleanup order zpool exported error increase filesize zfs test.sh allow larger ext4 file system created zfs_disk2 also need partition zfs_disk2 partitioning already disabled multipath device among thing partitioning steal space ext4 file system make difficult accurately calculate paramters parted make test fail increase fs_size file_size zpool_import test configuration filesize larger write data order device evacuation take lonnger couple test use mkdir avoid error directory already exists remove use sudo authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andrew stormont andyjstormont gmail.com approved han rosenfeld rosenfeld grumpf.hope 2000.org ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http illumos.org issue 9075 openzfs commit http github.com openzfs openzfs commit 619c0123 close 7459,,
2506,afd2f7b7117ff8bf23afa70ecae86ec0c1a1461e,avel Zakharov <pavel.zakharov@delphix.com>, 2018-01-30 15:25:19 -0800,7459, openzfs 8962 zdb work non idle pool currently zdb consistently fails examine non idle pool fails spa_load process main problem seems spa_load_verify fails seen sudo zdb dcenter zdb open dcenter error zfs_dbgmsg zdb spa_open_common opening dcenter spa_load dcenter loading disk vdev dev dsk c4t11d0s0 best uberblock found spa dcenter txg 40824950 spa_load dcenter using uberblock txg 40824950 spa_load dcenter unloading spa_load dcenter reloading spa_load dcenter loading disk vdev dev dsk c3t10d0s0 best uberblock found spa dcenter txg 40824952 spa_load dcenter using uberblock txg 40824952 spa_load dcenter failed spa_load_verify failed error spa_load dcenter unloading change make spa_load_verify dryrun ran zdb done creating global flag zfs setting zdb authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andy stormont astormont approved dan mcdonald danmcd joyent.com ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http illumos.org issue 8962 openzfs commit http github.com openzfs openzfs commit 180ad792 close 7459,,
2507,4a0ee12af8967a859c3607530aaef466e21cebc3,avel Zakharov <pavel.zakharov@delphix.com>, 2016-03-10 10:16:02 -0500,7459, openzfs 8961 spa load import tell failed problem  fail open import storage pool typically get additional diagnostic information pool found import may additional user consumable information least make situation easier debug diagnose developer support example could start using zfs_dbgmsg log thing try importing thing failed e.g tried uberblock txg label device also could log stage spa_load_impl solution  following cleanup spa_load_impl debug message added every point failure function additionally debug message added strategic place vdev_disk_open authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andrew stormont andyjstormont gmail.com approved dan mcdonald danmcd joyent.com ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http illumos.org issue 8961 openzfs commit http github.com openzfs openzfs commit 418079e0 close 7459,,
2508,ca0845d59efe5881d14e0bb90603a5152eb07227,aul Dagnelie <pcd@delphix.com>, 2016-08-26 11:43:21 -0700,7470, openzfs 9256 zfs send space estimation datasets authored paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported giuseppe natale dinatale2 llnl.gov porting note added tuning man page test case change dropped default behavior unchanged openzfs issue http www.illumos.org issue 9256 openzfs commit http github.com openzfs openzfs commit 32356b3c56 close 7470,,
2509,4ceb8dd6fdfdde3b6ac55cf52132858973fce9d0,OLi <loli10K@users.noreply.github.com>, 2018-05-08 06:11:59 +0200,7509, fix zpool create tempname creating pool temporary name fails also specify custom dataset property mistakenly call real pool name expected found spa present namespace temporary name fix specifying correct pool name setting dataset property reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7502 close 7509,,
2510,c02c1becce96969ea20a2e142dd451cc37d2a9a0,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-07 21:08:33 -0700,7514, zts enable mmp test commit 7fab6361 inadvertently disabled mmp test case creating removing etc hostid file new test case file exists zts skip entire mmp test group rather modify may system already configured update test case remove file additionally mmp test disabled regression slipped part commit 9eb7b46ed0 fix reviewed tim chase tim chase2k.com reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7514,,
2511,1149b62d20b7ed9d8ae25d5da7a06213d79b7602,atthew Ahrens <mahrens@delphix.com>, 2018-05-07 10:12:25 -0700,704, update readme run autogen first reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 704,,
2512,a82a4a15be9559b20ec8e8df1430fc4c901d0b69,under2015 <omfgbunder@gmail.com>, 2018-05-07 00:02:10 -0400,7508, zts remove dead cleanup code snapshot test caught path cleanup file referenced appear created used anywhere reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7508,,
2513,e1245d83e9c0d556272c3f3c874adab49a1e088c,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-05-06 20:46:13 -0700,7505, prevent make distclean removing sized file __init__.py used python package typically nothing including contrib pyzfs libzfs_core test __init__.py however cause make distclean delete file file size seems reasonable comment avoid deleted rather trying modify distclean behavior find size contrib pyzfs libzfs_core test __init__.py autogen.sh configure make make distclean contrib pyzfs libzfs_core test __init__.py access contrib pyzfs libzfs_core test __init__.py file directory git diff diff git contrib pyzfs libzfs_core test __init__.py contrib pyzfs libzfs_core test __init__.py deleted file mode 100644 reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7505,,
2514,fb0da71fd96c37ff86c4d55e53b5a56e050bcfc9,OLi <loli10K@users.noreply.github.com>, 2018-05-07 05:42:29 +0200,7510, zts fix using mawk instead gawk fails consistently due subtle difference mawk handle substr awk  finally mawk handle exceptional case discussed awk book posix draft unsafe assume consistency across awks safe skip next section substr return character intersection closed interval length half open interval intersection empty empty string returned substr abc substr abc  support running gawk mawk change second parameter passed substr reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7503 close 7510,,
2515,64c1dcefe38a62d304177475a2ef77111cec612a,aul Dagnelie <pcd@delphix.com>, 2017-07-06 10:35:20 -0700,7500, openzfs 9421 9422 zdb show possibly leaked object 9421 zdb detect print number leaked object 9422 zfs diff zdb explicitly mark object deleted queue possible zfs leak object way freed also accessible via posix interface way know happened see one directly zdb run noting unaccounted space usage zdb enhanced count object return failure detected access delete queue zfs_get_deleteq function call dump_znode determine object delete queue efficient possible method simplest implement suffice common case object delete queue also zfs diff zdb currently traverse every single dnode dataset try figure path object following parent object placed delete queue practical purpose already discarded parent might exist anymore another object might object number belonged parent make sense trying figure path object delete queue run issue either impossible determine path parent gone another dnode taken place thus returned wrong path therefore avoid trying determine path object delete queue mark object delete queue avoid confusion achieve currently two idea putting object delete queue change parent object number known constant mean null displaying object first check present delete queue authored paul dagnelie pcd delphix.com reviewed matt ahrens matt delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved matt ahrens mahrens delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9421 openzfs issue http illumos.org issue 9422 openzfs commit http github.com openzfs openzfs commit 45ae0dd9ca close 7500,,
2516,5e097c67f14e32de67c62752e728e9fbabb920dc,atthew Ahrens <mahrens@delphix.com>, 2018-02-05 10:06:18 -0800,7501, openzfs 9443 panic scrub v10 pool expanding stored pool ran panic using old pool step reproduce sudo zpool create version test c2t1d0 sudo etc passwd test foo sudo zpool attach test c2t1d0 c2t2d0 get panic unix b27c unix trap dc8 unix cmntrap zfs 1ff zfs dsl_scan_visit zfs dsl_scan_sync 1b3 zfs spa_sync 435 zfs txg_sync_thread 23f unix thread_start problem bad trap accessing null pointer looking dp_origin_snap dsl_pool_t version system reboot loop point dump accessible except removing cache file within recovery environment impact sort scrub resilver version pool e.g zpool create version test c2t1d0 zpool scrub test authored matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com reviewed george wilson george.wilson delphix.com reviewed andriy gapon avg freebsd.org reviewed igor kozhukhov igor dilos.org approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9443 openzfs commit http github.com openzfs openzfs commit 010eed29 close 7501,,
2517,609b2425429da30d95943aaa3e501bc0b49a389e,eHackEd <DeHackEd@users.noreply.github.com>, 2018-05-03 14:10:26 -0400,7493, fix inverted check enable pyzfs dis able pyzfs check backwards fix reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed dhe git dehacked.net close 7493,,
2518,1a62a305be01972ef1b81469134faa4937836096,ony Hutter <hutter2@llnl.gov>, 2018-05-03 10:47:46 -0700,7495, fedora add buildrequires libtirpc devel add buildrequires libtirpc devel fix mock build fedora reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7494 close 7495,,
2519,be9a5c355c819ac0f2aca1f8c30dc75164e10322,om Caputi <tcaputi@datto.com>, 2018-05-02 18:36:20 -0400,7474, add support decryption fault zinject patch add ability zinject trigger decryption authentication fault zio arc layer functionality exposed via new decrypt error type may provided data object type patch also refactors core encryption decryption function consistent prototype handle error consistently unused argument reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7474,,
2520,84a80d5f2d14fdfd16d440eef2e3d6e756a1165c,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-02 15:34:20 -0700,703, fix undefined rpm macro always invoke spl_ac_debug macro running configure correctly expanded similar change already applied zfs reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 703,,
2521,9464b9591ea5cd61a4d6ef8e29c4597b48d16a77,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-02 15:01:24 -0700,7463, rhel 7.5 compat rhel 7.5 mainline fops.iterate method added file_operations structure correctly detected configure script normally want order maintain kabi compatibility rhel change additionally doe following requires caller intending use extended interface set flag file structure opening directory add fops.iterate method end structure without removing fops.readdir change update configure check ignore rhel 7.5 variant fops.iterate detected instead fallback fops.readdir interface available finally add zpl_ prefix directory context wrapper avoid colliding kernel provided symbol fops.iterate fops.readdir provided kernel reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7460 close 7463,,
2522,bc8a6a60e9f0fd219e10f355384d87a41d4f5882,rian Behlendorf <behlendorf1@llnl.gov>, 2018-05-01 20:44:24 -0700,7468, fix inst_num overflow qat_crypt.c patch fix issue previously addressed 6051. variable inst_num incorrect type could cause overflow damaging neighbor cast return value cpa32u fix type num_inst clarity reviewed weigang weigang.li intel.com signed brian behlendorf behlendorf1 llnl.gov close 7468,,
2523,2c24b5b1487646f68960f25e13a1b0df645d4f49,om Caputi <tcaputi@datto.com>, 2018-05-01 14:24:20 -0400,7456, fix issue found zfs diff two deadlock assert failure introduced a2c2ed1b would occur whenever arc_buf_fill failed decrypt block data occurred call arc_buf_destroy responsible cleaning newly created buffer would attempt take hdr lock already holding resolved calling underlying function directly without retaking lock addition dmu_diff code properly ensure key loaded mapped begining dataset traversal turn code doe need look encrypted value code altered perform raw reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7354 close 7456,,
2524,d6133fc500ea8b4fdc1a51944cb17ea5e70f3137,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-05-01 11:15:54 -0700,7489, silence compile time warning unused variable assert3u could nop lead unused pointer spa metaslab.c function metaslab.c 2075 warning unused variable spa wunused variable spa_t spa msp ms_group mg_vd vdev_spa reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7489,,
2525,85ce3f4fd114cf3c7a77feb07b397d43b90d11c7,oli10K <ezomori.nozomu@gmail.com>, 2018-03-18 09:34:45 +0100,7230, adopt pyzfs clusterhq commit introduces several change update license project information give good pep8 talk existing python source code add rpm deb packaging pyzfs fix outstanding issue existing pyzfs code caused change abi since last time code updated integrate pyzfs python unittest zfs test suite add missing libzfs_core function lzc_change_key lzc_load_key lzc_receive_one lzc_reopen lzc_send_resume lzc_sync lzc_unload_key lzc_remap note commit slightly change abi allow differentiate case tried unload key non existing dataset enoent situation dataset key loaded consistent change case trying dataset key result eacces reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7230,,
2526,6abf922574f39ad597ae122fa43d2fa811970720,ndriy Gapon <avg@FreeBSD.org>, 2018-03-03 11:10:34 +0100,7230, import pyzfs source code clusterhq libzfs_core intended stable interface programmatic administration zfs wrapper provides one one wrapper libzfs_core api function signature type natural python nvlists wrapped dictionary list depending usage parameter default value depending typical use increased convenience enumeration bit flag become string list string python error reported exception rather integer errno style error code wrapper take care provide one many mapping error code exception interpreting context error code produced unit test automated test libzfs_core api provided package please note api test perform lot zfs dataset level operation zfs try hard ensure modification reach stable storage mean operation done synchronously example disk cache flushed thus test slow real hardware recommended place default temporary directory temporary directory specified instance tmp environment variable memory backed filesystem original patch andriy gapon avg freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov ported loli10k ezomori.nozomu gmail.com signed loli10k ezomori.nozomu gmail.com close 7230,,
2527,3cbe89b12a55a0ff350d7434834f4f48227896a3,OLi <loli10K@users.noreply.github.com>, 2018-05-01 05:58:29 +0200,7478, fix zfs incremental send remove property receiving incremental send stream intermediary snapshot zfs_receive_one doe correctly identify top level dataset consequently restore said snapshot child datasets hierarchy forcing inheritance property received zfs send effectively removing locally set value test case correctly verify situation adjacent snapshot basically testing zfs send instead zfs send commit add additional intermediary snapshot test script reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7478,,
2528,20507534d4ede14d4dd82c99fc8d461704ce7419,lexander Motin <mav@FreeBSD.org>, 2018-04-03 14:57:15 -0400,7480, openzfs 9434 speculative prefetch blocked device removal code device removal code doe set pool never experienced device removal least one visual consequence completely blocked speculative prefetcher patch set variable situation authored alexander motin mav freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com approved matt ahrens mahrens delphix.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 9434 openzfs commit http github.com openzfs openzfs commit 16127b627b close 7480,,
2529,eb201f50ac02a2b5cbfe7274cb6274ef767002da,eorge Melikov <mail@gmelikov.ru>, 2018-04-30 21:42:58 +0300,7483, add back iostat description iostat description left cda0317e get back reviewed matthew ahrens mahrens delphix.com reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 7479 close 7483,,
2530,c83ccb3e72934ea1787cf7ddb0a9960eded82d0e,ntonio Russo <antonio.e.russo@gmail.com>, 2018-04-30 13:45:47 -0400,7411, add test two kind file creation order data loss identified 7401 many small file copied add reproducer bug similar one randomly generate file listing order produce file directory name trigger bug consistently provided large enough  reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 7411,,
2531,964c2d69a90c503f44946f31c5d4a8ac4458176d,atthew Ahrens <mahrens@delphix.com>, 2017-01-03 15:18:33 -0800,7467, openzfs 9236 nuke spa_dbgmsg use zfs_dbgmsg instead spa_dbgmsg least call zfs_dbgmsg important rare enough always log possible message would high frequency zfs_dbgmsg authored matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported giuseppe natale dinatale2 llnl.gov patch note removed zfs_debug_spa zfs module parameters.5 openzfs issue http www.illumos.org issue 9236 openzfs commit http github.com openzfs openzfs commit cfaba7f668 close 7467,,
2532,089500e79234c9cb741090ade96baec266f0ace4,ark Wright <markwright@internode.on.net>, 2018-04-21 02:53:25 +1000,7464, fix build fix build error gcc 7.3.0 gentoo kernel 4.16.3 built module zfs vdev_indirect.c 296 error positional initialization field structâ declared attribute werror designated init   reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed mark wright gienah gentoo.org close 7464,,
2533,b4555c777a0be3c0dba29662d278c57099c60a87,OLi <loli10K@users.noreply.github.com>, 2018-04-19 18:45:17 +0200,7454, fix zfs remap poolname snapname filesystems volume valid zfs remap parameter passed snapshot name doe handle einval returned libzfs_core result failing assertion consequently crashing reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7454,,
2534,599b8648133738b524ff4c58a72fc744b62fe142,hunwei Chen <tuxoko@gmail.com>, 2018-04-18 14:19:50 -0700,7421, fix enospc handle zap_add failure ... commit cc63068 caused enospc error copy large amount file two directory reason patch limit zap leaf expansion retries return enospc failed intent limiting retries prevent pointlessly growing table max size adding block full entry name different case mixed mode however turn use limit retry copy file one directory readdir order copying hash order one leaf block time mean leaf block source directory expanded time copy entry block time need expand leaf destination directory need expand time one limit retry result error note use different salt different directory seems salt hash function provide enough randomization hash distance prevent happening since cc63068 already reverted patch add back remove retry limit also turn failing zap_add serious side effect mzap_upgrade upgrading micro zap fat zap call zap_add transfer entry one time hit error halfway remaining entry lost causing file become orphan patch add verify catch reviewed sanjeev bagewadi gmail.com reviewed richard yao ryao gentoo.org reviewed tony hutter hutter2 llnl.gov reviewed albert lee trisk forkgnu.org reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed chunwei chen david.chen nutanix.com close 7401 close 7421,,
2535,b0ee5946aaee396c9c90b07f27504c39f6dec0ef,om Caputi <tcaputi@datto.com>, 2018-04-17 14:19:03 -0400,7432, fix issue raw sends spill block patch fix issue spill block processed raw sends first problem compressed spill block using logical length rather physical length determine much data dump send stream second issue typo caused spill record object number used objset number required issue corrected payload_size printed zstreamdump future debugging reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7378 close 7432,,
2536,e14a32b1c844d924b9f093375c0badcf10f61741,om Caputi <tcaputi@datto.com>, 2018-04-17 14:13:57 -0400,7433, fix object reclaim using large dnodes currently receive_object code want reclaim object always assumes dnode legacy 512 byte even incoming bonus buffer exceeds length cause buffer overflow enable debug provided trigger assert patch resolve issue add assert ensure happen reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7097 close 7433,,
2537,0c03d21ac99ebdbefe65c319fc3712928c40af78,atthew Ahrens <mahrens@delphix.com>, 2018-04-17 11:06:54 -0700,7429, assertion arc_release encrypted receive existing code raw encrypted zfs receive call open context creates race condition arc_release writing block syncing context arc_write_ready done change make raw encrypted zfs receive save crypt parameter salt mac dnode block call syncing context writing block dnodes additionally eliminate dr_raw associated setter instead know dnode block always raw zfs receive see new field os_raw_receive reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed matthew ahrens mahrens delphix.com close 7424 close 7429,,
2538,b40d45bc6c0e908c4d1086ac8ac3dcd1f7178d2a,under2015 <omfgbunder@gmail.com>, 2018-04-17 13:52:53 -0400,7451, zts fix integer overflow using large disk integer calculating size overflow past 31. changing long integer typeset correct reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 4444 close 7451,,
2539,7f96cc23acf78a325897498b91416b7831a539e3,atthew Ahrens <mahrens@delphix.com>, 2016-12-16 10:31:01 -0800,7446, openzfs 9192 explicitly pas good_writes vdev_uberblock label_sync authored matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported giuseppe natale dinatale2 llnl.gov currently vdev_label_sync take zio_t assume io_private pointer good_writes count instead accept argument explicitly openzfs issue http www.illumos.org issue 9192 openzfs commit http github.com openzfs openzfs commit 3f4c0b602d close 7446,,
2540,d830d4795a210b5ba85482fe26909e64857af763,att Ahrens <Matt.Ahrens@delphix.com>, 2017-07-24 11:07:39 -0700,7445, openzfs 9280 assertion failure running test device authored matt ahrens matt.ahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed giuseppe natale dinatale2 llnl.gov approved garrett amore garrett damore.org ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9280 openzfs commit http github.com openzfs openzfs commit 243952c close 7445,,
2541,73d08ace523fc3964852e4e82eae3f2db70354d4,ony Hutter <hutter2@llnl.gov>, 2018-04-16 15:40:14 -0700,700, exclude python script rpm shebang check newest fedora packaging rule print warning script using usr bin python shebang warning mangling shebang usr src spl 0.7.0 cmd splslab splslab.py usr bin python usr bin python2 become error fix manually fedora want cross compatible script pick python3 since want user pick specific version python exclude script rpm build check reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 699 close 700,,
2542,d68ac65eb61acfd898262709a726bbcd7f5a31f1,egari <megari@iki.fi>, 2018-04-16 22:44:40 +0300,7444, revert openzfs 9036 zfs duplicate const declaration specifier reverts commit original change openzfs 9036 remove duplicate const specifier zol port already done done openzfs 9036 make pointer const port change zol ended unnecessary removal constness pointer undo reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com signed ari sundholm ari tuxera.com close 7444,,
2543,9eb7b46ed03002dc8531a512ee1b52f6b5a86881,avel Zakharov <pavel.zakharov@delphix.com>, 2016-02-23 11:49:30 -0500,7437, openzfs 7638 refactor spa_load_impl several function authored pavel zakharov pavel.zakharov delphix.com reviewed paul dagnelie pcd delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andrew stormont andyjstormont gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com approved dan mcdonald danmcd joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7638 openzfs commit http github.com openzfs openzfs commit 1fd3785ff6 close 7437,,
2544,3eba666332629bffc5c247326939556b511af6e7,under2015 <omfgbunder@gmail.com>, 2018-04-15 18:17:44 -0400,7439, zts clean leftover filedisk clean filedisk file left running test reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7435 close 7439,,
2545,5284f43a1e66f6237bb300f256460b4220398f3e,im Chase <tim@chase2k.com>, 2018-04-15 17:12:28 -0500,7441, avoid linux hung task message zthr use interruptible avoid linux hung task message zthr prevent inflating load average reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7440 close 7441,,
2546,5e567da987e3ba930cd908aae9f1d0373de9a0f8,oomas Soome <tsoome@me.com>, 2018-03-10 15:01:46 -0800,7436, openzfs 9213 zfs sytem typo authored toomas soome tsoome me.com reviewed fraire cfraire me.com reviewed andy fiddaman omnios citrus it.co.uk reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru approved joshua clulow josh sysmgr.org ported brian behlendorf behlendorf1 llnl.gov porting note additional instance typo addressed openzfs patch already resolved openzfs issue http illumos.org issue 9213 openzfs commit http github.com openzfs openzfs commit edc8ef7d92 close 7436,,
2547,cbb893321545c2c9052787b556c9375fcb103979,oomas Soome <tsoome@me.com>, 2018-02-05 14:56:04 +0200,6900, openzfs 9036 zfs duplicate const declaration specifier authored toomas soome tsoome me.com reviewed yuri pankov yuripv yuripv.net reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9036 openzfs commit http github.com openzfs openzfs commit f02c28e434 close 6900,,
2548,eecdd8e8849f136c488a8e18ed06e9ecb93dd4bb,rakash Surya <prakash.surya@delphix.com>, 2018-02-16 08:17:06 -0800,6900, openzfs 9084 spa_ _ashift must ignore spare device possible following assertion tripped running ztest assertion failed thread 0xf09fca40 thread 549 spa spa_max_ashift spa spa_min_ashift 0xc 0x9 file common zfs vdev_removal.c line 965  libc.so.1 _lwp_kill ebdde6c0 ebdde6c0 fee7865e libc.so.1 _assfail 0x214 ebddea28 fed7ac3c 3c5 fef62000 libc.so.1 assfail3 0xde fed7b130 fed812cb libzpool.so.1 0x26b 89a4b40 ebddef74 ebddef68 8992dc0 ebe10a00 fef073c0 libzpool.so.1 0x6cd 87450c0 fee8f43a libc.so.1 _thrp_setup 0x8c f09fca40 libc.so.1 _lwp_start f09fca40 spa addr state name 08723000 active ztest addr state aux description 087466c0 healthy root 087450c0 healthy rpool tmp ztest.0a 08745640 healthy indirect 08745bc0 healthy rpool tmp ztest.2a 08746140 healthy rpool tmp ztest.3a spare 08744b40 healthy rpool tmp ztest.spares.0 authored prakash surya prakash.surya delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd joyent.com ported tim chase tim chase2k.com openzfs issue http www.illumos.org issue 9084 openzfs commit http github.com openzfs openzfs commit 18acba7 close 6900,,
2549,4bf8108ede7c1b2bff4052eb25e29874638754f5,erapheim Dimitropoulos <serapheim.dimitro@delphix.com>, 2017-01-09 12:54:51 -0800,6900, openzfs 9080 recursive enter authored serapheim dimitropoulos delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved han rosenfeld rosenfeld grumpf.hope 2000.org ported brian behlendorf behlendorf1 llnl.gov openzfs issue http illumos.org issue 9080 openzfs commit http github.com openzfs openzfs commit bdfded42e6 close 6900,,
2550,9d5b5245979f0192c4726c0678d7e25a7125c402,erapheim Dimitropoulos <serapheim@delphix.com>, 2017-03-15 16:41:52 -0700,6900, openzfs 9079 race condition starting ending condensing thread indirect vdevs timeline race condition following thread finish condesing first vdev call sync task set field null waiting sync task finish thread sleep txg done happens thread acquire spa_async_lock set null thread wait txg finish thread running spa_sync check whether condense second vdev checking field set null thread try spawn new condensing thread aforementioned assertion fails thread set null basically last thing doe returning main issue rely signify whether condensing thread running ideally would use one throughout codebase addition managing currently use spa_async_lock basically tights condensing scrubing come pausing resuming action spa export commit introduces zthr infrastructure basically thread created spa_load spa_create exist export destroy pool zthrs sleep majority time notified wake predefined type work context current bug zthr doe condensing indirect mapping replacing older code used bare kthreads pool created condensing zthr spawned sleep right away awaken signal spa_sync existing pool loaded condensing zthr look anything condense going sleep case condensing mapping pool got exported benefit solution following current bug fixed sole indicator whether currently condensing condensing decoupled related functionality final note commit also set path upstreaming feature use zthr code like zpool checkpoint fast clone deletion authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved han rosenfeld rosenfeld grumpf.hope 2000.org ported tim chase tim chase2k.com openzfs issue http illumos.org issue 9079 openzfs commit http github.com openzfs openzfs commit 3dc606ee close 6900,,
2551,4589f3ae4c1bb435777da8640eb915f3c713b14d,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-29 14:50:40 -0700,6900, optimize possible split block search space remove duplicate segment copy minimize possible search space reconstruction reduced accurate assessment made regarding difficulty reconstructing block also ztest run zdb set 1000000 attempt avoid checksum error reviewed matthew ahrens mahrens delphix.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 6900,,
2552,9e052db4627ca945db1e3fa63ed81b156d9d7562,atthew Ahrens <mahrens@delphix.com>, 2018-02-13 11:37:56 -0800,6900, openzfs 9290 device removal reduces redundancy mirror mirror supposed provide redundancy face whole disk failure silent damage e.g data disk right zfs detected whole device broken however current device removal implementation bypass mirror redundancy note case incorrect data returned might get checksum error able find right data two underlying problem remove mirror device read one side mirror since verify checksum side may silently bad good data side mirror read cause removal bake busted data copy data new location busted version left good version behind fix read copy side mirror old new vdevs mirror read side old mirror write copy corresponding side new mirror old new vdevs different number child best possible even though verifying checksum ensures long good copy data good copy removal even silent damage one side mirror removing mirror silent damage exactly damage new location assuming new location also mirror read indirect vdev point mirror vdev consider one copy data lead reduced effective redundancy might read bad copy data one side mirror retry good side mirror note problem removal process rather removal completed copied correct data side mirror one side new mirror silently damaged encounter problem reading relocated data via indirect vdev also note problem occur zfs know one side mirror bad e.g disk entirely fails offlined impact read indirect vdevs point mirror may return checksum error even though good data exists one side mirror scrub repair data mirror pointed via indirect vdev fix complicated split block one logical block may split two piece piece moved different new location case need read version split one side mirror figure combination version result correct checksum repair incorrect version ensures supply redundancy whether use device removal example mirror small silent error child still reconstruct correct data long error sufficiently separated offset specifically separated largest block size default 128kb 16mb porting note new indirect vdev check moved added zol part sequential scrub work passed null parameter extra parameter unique zol posting indirect checksum error abd passed directly yet abd aware openzfs authored matthew ahrens mahrens delphix.com reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov ported tim chase tim chase2k.com openzfs issue http illumos.org issue 9290 openzfs commit http github.com openzfs openzfs pull 591 close 6900,,
2553,a1d477c24c7badc89c60955995fd84d311938486,atthew Ahrens <mahrens@delphix.com>, 2016-09-22 09:30:13 -0700,6900, openzfs 7614 9064 zfs device evacuation removal openzfs 7614 zfs device evacuation removal openzfs 9064 remove_mirror wait device removal complete project allows top level vdevs removed storage pool zpool remove reducing total amount storage pool operation copy allocated region device removed onto device recording mapping old new location removal complete read free operation removed indirect vdev must remapped performed new location disk indirect mapping table kept memory whenever pool loaded minimal performance overhead operation indirect vdev size memory mapping table reduced entry become obsolete longer used block pointer pool entry becomes obsolete block use freed entry also become obsolete snapshot reference deleted block pointer reference remapped filesystems zvols clone whenever indirect block written block pointer remapped new concrete location possible process accelerated using zfs remap command proactively rewrite indirect block reference indirect removed vdevs note device removed verify checksum data copied make process much faster used redundant vdevs i.e mirror raidz vdevs would possible copy wrong data correct data e.g side mirror moment mirror simple top level vdevs removed removal allowed top level vdevs raidz porting note avoid zero sized kmem_alloc device evacuation code add dependency able properly empty vdev_child array setting null zeroing vdev_children linux kmem_alloc related function return sentinel pointer rather null zero sized allocation remove comment regarding mpt driver initialized change consistency tunables delay specified zts change use set_tunable rather mdb use zpool sync appropriate use sync_pool instead sync kill job allow unmount export add non disk name mirror raidz disk use test_base_dir instead tmp increase 100 1000 common linux  reduce iteration order time code coverage builder  functionally test case correct exists race kernel thread fully started yet visible wait second removal thread started giving also increase amount data copied order removal finish export chance fail mmp compatibility concept concrete versus non concrete device slightly changed semantics vdev_writeable update accordingly updated dbuf_remap handle org.zfsonlinux large_dnode pool feature supported openzfs added support new vdev removal tracepoints test case intentionally disabled run manually pas intended running automated test environment produce unreliable result latest fedora release may work better upstream pool import refectoring merged zol point enabled authored matthew ahrens mahrens delphix.com reviewed alex reece alex delphix.com reviewed george wilson george.wilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed prakash surya prakash.surya delphix.com reviewed richard laager rlaager wiktel.com reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov approved garrett amore garrett damore.org ported tim chase tim chase2k.com signed tim chase tim chase2k.com openzfs issue http www.illumos.org issue 7614 openzfs commit http github.com openzfs openzfs commit f539f1eb close 6900,,
2554,4b0f5b2d7b99ca3ed9585173fe4b1c7fedda5aa5,im Chase <tim@chase2k.com>, 2018-04-07 23:10:22 -0500,6900, wait resilver online test performs rapid offline online cycle several mirror vdevs run quickly sufficient pool redundancy perform offline solution wait pool resilvered following online operation also add pool sync offline operation help reduce spurious error reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 6900,,
2555,5c596ba7a47942f42aa7b67509cf28ebb878d058,im Chase <tim@chase2k.com>, 2018-01-03 15:45:35 -0600,6900, eliminate trailing space disk zfs tests.sh driver script could add space end disk defeates shell based parsing construct disk reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 6900,,
2556,93b43af10df815d3ebfe136d03cd2d7f35350470,eth Forshee <seth.forshee@canonical.com>, 2018-04-12 15:24:38 -0400,7207, allow mounting datasets currently mounting already mounted zfs dataset result error whereas typically allowed filesystems cause bad interaction mount namespaces take sequence example create dataset create snapshot dataset create clone snapshot create new mount namespace rename original dataset rename result unmounting remounting clone original mount namespace however remount fails dataset still mounted new mount namespace note mean mount new mount namespace never unmounted perhaps unmount remount clone actually necessary problem result way mounting implemented kernel module since mounting block device mount_nodev instead usual mount_bdev however mount_nodev written filesystems mount new instance i.e new super block zfs able detect mount request satisfied using existing super block change zpl_mount call sget directly test callback passing objset_t object data allows checking superblock already exists dataset case need return new reference root dentry reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed alek pinchuk apinchuk datto.com signed seth forshee seth.forshee canonical.com close 5796 close 7207,,
2557,1e37dee03f6ecc01362f8e18607737db693790d7,under2015 <omfgbunder@gmail.com>, 2018-04-13 13:35:55 -0400,7430, zts clean leftover ibackup_trunc file clean ibackup_trunc file left running test also changing path ibackup file placed correct directory var tmp temporary directory reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7430,,
2558,d6bb22171b6e4e8b16a8243b8cd63f571f11c4ff,rian Behlendorf <behlendorf1@llnl.gov>, 2018-04-12 19:46:14 -0700,7431, linux compat 4.16 blk_queue_flag_ set clear case overlooked original 10f88c5c commit available kernel build update blk_queue_flag_ set clear wrapper call locked version avoid confusion safe existing caller function updated use wrapper mean setting clearing queue_flag_wc queue_flag_fua longer atomic done early zvol_alloc prior request issue reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed kash pande kash tripleback.net signed brian behlendorf behlendorf1 llnl.gov close 7428 close 7431,,
2559,7fab6361882753d2703dbe4c6f6badc956b40484,OLi <loli10K@users.noreply.github.com>, 2018-04-12 19:57:24 +0200,7409, add zpool split coverage zfs test suite change add five new test zts verify command line option argument verify zpool split accepts device list verify zpool split encrypted pool verify zpool split set property value verify vdev layout splitting pool reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7409,,
2560,8111eb4abc96a173845a553dc7d65382398f0683,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-04-13 02:50:39 +0900,7405, fix calloc argument order calloc take nelem nmemb glibc first size element difference expected reverse order however follow standard http onlinepubs 009695399 function calloc.html reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7405,,
2561,7403d0743e2b75b7f5412a14007ba159efb67a7d,eren12 <github@mid-earth.net>, 2018-04-12 13:47:32 -0400,7417, fix zfs_arc_max minimum tuning setting zfs_arc_max minimum value allowed mib error matter tiny system reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chris zubrzycki github mid earth.net close 7417,,
2562,d22f3a8244bf17aefdd47988b3ea5c4a5a6a9b7d,ike Gerdts <mike.gerdts@joyent.com>, 2018-04-11 10:14:45 -0600,7387, openzfs 9286 want refreservation auto authored mike gerdts mike.gerdts joyent.com reviewed allan jude allanjude freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed andy stormont astormont reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov approved richard lowe richlowe richlowe.net ported brady don.brady delphix.com porting note adopted destroy_dataset zts test cleanup use ksh shebang instead bash new test openzfs issue http www.illumos.org issue 9286 openzfs commit http github.com openzfs openzfs commit 723d0c85 close 7387,,
2563,9966754ac55fa693b03155ea460db946e018b862,OLi <loli10K@users.noreply.github.com>, 2018-04-11 23:45:58 +0200,7402, fix zpool set feature feature disabled commit e4010f2 accidentally allows zpool set pool feature disabled allowed pool creation commit add additional check test coverage zpool set reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7402,,
2564,dfb1ad027f23f65bfe47493e195c18565bce4148,eHackEd <DeHackEd@users.noreply.github.com>, 2018-04-10 20:19:01 -0400,7377, zfs fix dedup omission mdoc overhaul property description updated new algorithm well reviewed matt ahrens matt delphix.com reviewed richard elling richard.elling reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed dhe git dehacked.net close 7377,,
2565,edc1e713c294d116702b034c59eed7b9a03fbc64,om Caputi <tcaputi@datto.com>, 2018-04-10 14:15:05 -0400,7388, fix race currently work checking dn_type dnode determine dnode reclaimable however small window time dnode_free_sync first call useraccounting code run type set dmu_ot_none dnode yet evictable leading crash patch add ability dnodes track txg last dirtied add check performing reclaim patch also corrects several instance dn_dirty_link treated list_node_t technically reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7147 close 7388,,
2566,10f88c5cd523eec8431941abf00017fc8fb67fd3,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-04-10 10:32:14 -0700,7410, linux compat 4.16 blk_queue_flag_ set clear queue_flag_ set clear _unlocked private interface linux kernel http github.com torvalds linux commit 8a0ac14 use blk_queue_flag_ set clear interface introduced http github.com torvalds linux commit 8814ce8 reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 7410,,
2567,74df0c5e251a920a1966a011c16f960cd7ba562e,om Caputi <tcaputi@datto.com>, 2018-04-10 00:11:17 -0400,7418, correct swapped keylocation error message patch corrects small issue two error message code check invalid keylocations swapped reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tom caputi tcaputi datto.com close 7418,,
2568,9125f8f5bdb36bfbd2d816d30b6b29b9f89ae3d8,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-04-09 17:20:06 -0700,697, linux compat 4.16 sector_size http github.com torvalds linux commit 233bde21 sector_size defined linux blkdev.h define sector_size sunldi.h already defined reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 697,,
2569,4f301661dfe7e90574ad634f8b7fe8da7e6b4064,ony Hutter <hutter2@llnl.gov>, 2018-04-09 14:24:46 -0700,7416, revert handle zap_add failure mixed ... reverts commit certain circumstance change result enospc error adding new file directory see 7401 full detail reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov issue 7401 cloes 7416,,
2570,3b0d99289a8e473b059605a83d4ce0bd505ec3d3,rian Behlendorf <behlendorf1@llnl.gov>, 2018-04-08 19:41:15 -0700,7404, fix zfs send recv hang 16m block using 16mb block send recv queue quite big enough change leaf default 16m queue size good value pool additionally ensures queue size least twice allowed reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7365 close 7404,,
2571,7b47628acb7ef073caa5bd23372b0c9c2741caf8,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-04-08 19:37:22 -0700,7406, clean shlib cfg file shebang kshlib file imported script shebang top file make kshlib follow convention remove shebang cfg file well reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 7406,,
2572,6c9af9e8f4a2901c9a5f205876b67dcc3216cbd8,ony Hutter <hutter2@llnl.gov>, 2018-04-06 16:34:21 -0700,7395, fix file executable shebang warning fedora rpm build check warn executable file shebang line warning caused incorrectly include data config file the_scripts automake line file _scripts marked executable automake patch fix issue including non executable script _data line instead reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 7359 close 7395,,
2573,812323bb03ce4c31f61bfb83d70eb1f5c494df25,ony Hutter <hutter2@llnl.gov>, 2018-04-06 16:32:58 -0700,7399, exclude python script rpm shebang check newest fedora packaging rule print warning script using usr bin python shebang warning mangling shebang usr bin arc_summary.py usr bin python usr bin python2 become error fix manually fedora want cross compatible script pick python3 since want user pick specific version python exclude script rpm build check reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 7360 close 7399,,
2574,55d80e651a8c19919b8ee6a1c05fb36ad97ab5ad,ntonio Russo <antonio.e.russo@gmail.com>, 2018-04-06 17:11:09 -0400,7329, systemd mount generator tracking zedlet zfs mount generator implement systemd generator protocol producing systemd.mount unit cached output zfs list early boot integrating systemd pool indpendent cache command zfs list oname mountpoint canmount tfilesystem pool kept synchronized zedlet history_event zfs list cacher.sh datasets cache loaded later boot process zfs mount.service including pool without cache among thing allows complex mount hierarchy reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 7329,,
2575,5c27ec10889d3d8f12d59fb7e5068ed2d8697c85,atthew Ahrens <mahrens@delphix.com>, 2018-04-06 13:30:26 -0700,7390, fix snprintf_blkptr encrypted mdb dmu_ot need different mechanism snprintf_blkptr determine encrypted authenticated additionally since already relies bp_is_encrypted etc snprintf_blkptr might well figure crypt_type rather making caller reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed matthew ahrens mahrens delphix.com close 7390,,
2576,0ba106e75c6cda806cb5d2003b918e658f2ff86c,laf Faaland <faaland1@llnl.gov>, 2018-04-06 13:29:11 -0700,7391, fix divide zero denominator may return caught coverity introduced 533ea04 update mmp_delay sync skipped failed write reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed olaf faaland faaland1 llnl.gov close 7391,,
2577,1bf9a552bb52785d5d838108574443e35682c85c,om Caputi <tcaputi@datto.com>, 2018-04-06 16:28:15 -0400,7382, make encrypted zfs mount failure consistent currently zfs mount print warning fail mount encrypted datasets key loaded patch make behavior failure consistent failure mode zfs mount silently continue explict zfs mount print message return error code reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7382,,
2578,533ea0415bd788530ff894bc0edbc3cea20fbe4c,laf Faaland <faaland1@llnl.gov>, 2018-04-04 16:38:44 -0700,7330, update mmp_delay sync skipped failed write mmp write skipped fails time since mmp_last_write already greater mmp_delay increase mmp_delay original code updated mmp_delay write succeeded result write delay failed write reporting ub_mmp_delay low update mmp_last_write mmp_delay txg sync successful least one uberblock written thus extending time sure pool imported another host allow mmp_delay msec2nsec period frequent successful mmp writes e.g due frequent txg syncs doe result import activity check short reliable based mmp thread writes alone remove unnecessary local variable start use start time loop iteration add debug message allow verification import_delay value prove activity check occurred alter test import pool attempt detect activity check calculate expected duration based module parameter time import performed rather fixed time set mmp.cfg fixed time may wrong also use default value activity check longer easier recognize reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed olaf faaland faaland1 llnl.gov close 7330,,
2579,21a4f5cc867b4f166704df84985edc048caa2578,ony Hutter <hutter2@llnl.gov>, 2018-04-04 10:16:47 -0700,7368, fedora fix misc bound check compiler warning fix bunch mostly sprintf snprintf truncation compiler warning show fedora gcc 8.0.1 reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7361 close 7368,,
2580,581bc01a0765eed9ea7dc17132b3943a5efc966d,rian Behlendorf <behlendorf1@llnl.gov>, 2018-04-04 09:54:20 -0700,696, remove sysevents header provided zfs repository never used spl remove ensure right one included reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 696,,
2581,1724eb62debfaa48f5861660615d49a994945d94,OLi <loli10K@users.noreply.github.com>, 2018-04-04 02:31:30 +0200,7380, fix spa reference leak leak spa reference zc_flags valid could happen userland binary zfs kernel module differ version would prevent pool exported reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7380,,
2582,f119d00c1fdcb5812fec6a8ff38c1eb9979a7a57,OLi <loli10K@users.noreply.github.com>, 2018-04-04 02:30:14 +0200,7342, fix test case use zpool reopen instead zpool scrub kick spare device required avoid spurious failure caused race condition event processing zfs event daemon zpool scrub zed   dsl_scan vdev_reopen vdev_set_state  spa_vdev_attach  dsl_sync_task  ebusy reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7247 close 7342,,
2583,10adee27ced279c381816e1321226fce5834340c,im Chase <tim@chase2k.com>, 2018-03-31 17:14:21 -0500,7375, remove assert assert erroneously copied next section code buffer size expanded psize asize necessary reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7375,,
2584,a2c2ed1bd4c3dc6d52b6058b9c74245cad2ae331,om Caputi <tcaputi@datto.com>, 2018-03-31 14:12:51 -0400,7372, decryption error handling improvement currently decryption block authentication code zio arc layer bit inconsistent regard ereports produce error code passed calling function patch ensures error begin ecksum converted eio leave zio arc layer ereports correctly generated decryption authentication failure addition patch fix bug zio_decrypt ecksum never get written zio io_error reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7372,,
2585,4515b1d01c936b8cf156e20ba42cdb8916bca80b,om Caputi <tcaputi@datto.com>, 2018-03-31 14:11:48 -0400,7362, encrypted dnode block prefetched raw encrypted dnode block always initially read raw data converted decrypted data encrypted bonus buffer needed allows dmu used thing like fetching dmu master node without requiring key loaded however doe currently read data raw end result prefetched dnode block read twice disk decrypted raw data patch corrects issue adding flag appropriate reviewed matt ahrens matt delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7362,,
2586,77d8a0f1a4d0b2f59cee63088f7987cb38e66538,OLi <loli10K@users.noreply.github.com>, 2018-03-30 21:10:01 +0200,7343, fix hung z_zvol task zfs receive receive operation wait needlessly prefetch thread share task queue result hung task info task z_zvol 5541 blocked 120 second tainted 3.16.0 amd64 echo proc sys kernel disables message first z_zvol 5541 zvol_task_cb waiting long running 260 root linux cat proc spl taskq taskq act nthr spwn maxt pri mina 100 active 260 zfs wait 5541 spl_delay_taskq 100 delay spa_deadman zfs z_zvol 120 active 5541 zvol_task_cb zfs pend zvol_task_cb zfs change add dedicated per pool prefetch taskq prevent traverse code monopolizing global limited system_taskq inappropriately scheduling long running task reviewed albert lee trisk forkgnu.org signed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6330 close 6890 close 7343,,
2587,2f291ebaed21090afd784f3b376dcb11465a37df,eorgy Yakovlev <168902+gyakovlev@users.noreply.github.com>, 2018-03-30 11:05:24 -0800,7347, zfs function skip line mntpnt none fix zfs mount initscript trying mount swap volume filesystems anything none mountpoint etc fstab additionally fix trying mount swap volume filesystem rhel rhel defines mountpoint swap swap reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed georgy yakovlev sysdump.net close 7346 close 7347,,
2588,5e00213e430fe9103e263514490d55d10075908e,ndriy Gapon <avg@FreeBSD.org>, 2018-02-21 14:55:55 +0200,7336, openzfs 9164 assert newds os_dsl_dataset authored andriy gapon avg freebsd.org reviewed matt ahrens mahrens delphix.com reviewed brady don.brady delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported giuseppe natale dinatale2 llnl.gov porting note enabled tweaked test case successfully run minute openzfs issue http www.illumos.org issue 9164 openzfs commit http github.com openzfs openzfs commit 0e776dc06a close 6112 close 7336,,
2589,99f505a4d743976d8879595d20beb66a6cbc3af1,on Brady <don.brady@delphix.com>, 2018-03-29 18:43:25 -0600,7356, add support nvme based devids add devid nvme device similar bus scsi sata usb devids generated devid resides name value pair leaf vdevs zpool config reviewed tony hutter hutter2 llnl.gov reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7356,,
2590,32dce2da0c0d30321ccbddcfcb3f3238cd96f744,om Caputi <tcaputi@datto.com>, 2018-03-29 20:40:34 -0400,7338, resolve qat issue incompressible data currently zfs want accelerate compression qat pass destination buffer size source buffer unfortunately data incompressible qat actually compress data larger source buffer happens qat driver return failed error code print warning dmesg patch fix issue providing qat driver additional buffer work even completely incompressible source data cause overflow patch also resolve error handling issue incompressible data attempt compression twice qat software fix issue new fake error code added calling code correctly account difference hardware failure data simply compressed reviewed brian behlendorf behlendorf1 llnl.gov reviewed weigang weigang.li intel.com signed tom caputi tcaputi datto.com close 7338,,
2591,13a2ff2727dd5fb46b08570279689373a7d5b26a,om Caputi <tcaputi@datto.com>, 2018-03-28 21:30:44 -0400,7353, fix assert dsl_scan_fini cleanup comment patch fix issue might add prefetch prefetch queue prefetching completed happening code checking scn scn_suspending instead scn occasionally triggered assert ztest run dsl_scan_fini code attempted destroy avl tree still entire patch also includes number spelling correction comment cleanup throughout dsl_scan.c reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7353,,
2592,d2812de6f7e115d205f4fb730db2d134f362e0e7,ony Hutter <hutter2@llnl.gov>, 2018-03-28 12:08:21 -0700,7327, chmod etc init.d zfs .in automake file clear executable bit zfs import.in zfs mount.in zfs share.in zfs zed.in automake file marked executable fix rpm build error fedora reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7355 close 7327,,
2593,b2ab468dded24a090dba9fc8396b3d394011ce14,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-28 10:19:22 -0700,7339, fix mmap libaio deadlock calling uiomove mappedread page lock result deadlock user space page need faulted resolve issue dropping page lock uiomove inode range lock protects concurrent update via zfs_read zfs_write reviewed albert lee trisk forkgnu.org reviewed chunwei chen david.chen nutanix.com signed brian behlendorf behlendorf1 llnl.gov close 7335 close 7339,,
2594,668173b5764386b47de0beb7c57ff8ce8f68f983,eHackEd <DeHackEd@users.noreply.github.com>, 2018-03-27 19:51:33 -0400,7351, remove libattr requirement rhel centos support sys xattr.h eliminating need libattr devel dependency reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 7344 close 7351,,
2595,5152a740885dd7784681b5080735f941d993aa5f,llan Jude <allanjude@freebsd.org>, 2018-02-20 00:31:14 -0500,7333, openzfs 9321 increment wrong value authored allan jude allanjude freebsd.org reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov approved garrett amore garrett damore.org ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 9321 openzfs commit http github.com openzfs openzfs commit 92b05f3a18 close 7333,,
2596,9ea6c3d39def9a1e25d2b8bc327667cf45d67409,ony Hutter <hutter2@llnl.gov>, 2018-03-25 15:00:47 -0700,7328, fedora fix macro _dracutdir empty body run configure config srpm trigger user script populate dracut udev directory cause build error fedora 28. make dracut udev line conditional get around reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7326 close 7328,,
2597,157ef7f6a527239e3cb3afa3be2acf502794a5d4,om Caputi <tcaputi@datto.com>, 2018-03-24 00:35:19 -0400,7334, count embedded bps read stats currently zfs track statistic call arc_read via proc spl kstat zfs pool read file debugging unfortunately file currently count embedded bps disk read since technically processed zio layer pollutes log since arc never cache embedded bps patch corrects issue preventing logging embedded read reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7334,,
2598,387b6856d6d6997ae5849b8ad9155433fff6f077,aul Dagnelie <pcd@delphix.com>, 2017-03-23 15:28:22 -0700,7230, openzfs 9193 bootcfg work given empty string rootds value bootcfg fails error message could set nextboot invalid name allowed represents clearing nextboot configuration authored paul dagnelie pcd delphix.com reviewed chris williamson delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 9193 openzfs commit http github.com openzfs openzfs commit 504645d227 close 7230,,
2599,910f3ce7395bdf83c431a962e34d932c3b77224c,eter Ashford <pashford@users.noreply.github.com>, 2018-03-22 15:12:08 -0700,7318, clarify zpool action intent log device updated intent log section zpool manual page properly reflect action may performed reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed peter ashford ashford accs.com close 6938 close 7318,,
2600,05747eca5b29696ae74532196d8fdc3edff36939,pande <github@tripleback.net>, 2018-03-22 13:14:29 -0400,7322, modprobe zfs dracut mount resolve importing root pool boot dracut case inadvertently broken module autoloading change 7287 reviewed matthew thode prometheanfire gentoo.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed kash pande kash tripleback.net close 7322,,
2601,2fd92c3d6c7fba9a28ce4779ff6623dc911e7b78,atthew Ahrens <mahrens@delphix.com>, 2018-03-21 15:37:32 -0700,7314, enable zfs_dbgmsg default without dprintf zfs_dbgmsg record message default general principal message verbose furthermore amount memory used limited 4mb default dprintf record message debug build set zfs_flags flag set default even debug build message extremely verbose sometimes nontrivial compute set_error record message set zfs_flags flag set default even debug build brings behavior line illumos note message format unchanged including file line function even though recorded illumos reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed prakash surya prakash.surya delphix.com signed matthew ahrens mahrens delphix.com close 7314,,
2602,8d9e7c8fbe6e131fac64c16c0714e5120d012daa,om Caputi <tcaputi@datto.com>, 2018-03-21 11:42:13 -0400,7319, fix spelling error comment patch simply corrects spelling grammar error qat encryption code comment functional change reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tom caputi tcaputi datto.com close 7319,,
2603,c66e54e9dce9244e8565425a457c3b0428fcdece,imor <timor.dd@googlemail.com>, 2018-03-21 16:35:20 +0100,7304, add support nvme disk detection treat dev nvme device way dev ... device motivation behind whole disk detection work nvme ssds without dkc_unknown returned device perhaps separate dkc_ type know enough code know implication reviewed brady don.brady delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed timor timor.dd googlemail.com close 7304,,
2604,089fbf313c59b178c11614b2aed78efc46d60499,om Caputi <tcaputi@datto.com>, 2018-03-20 14:55:21 -0400,7313, add comment portable dnode objset flag patch add comment describing purpose portable dnode objset flag clear new flag added repective flag mask patch includes functional change reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7313,,
2605,272b5d730f9ddd1db7cd7511da7bba75d6bd2450,lek P <alek-p@users.noreply.github.com>, 2018-03-19 15:40:58 -0400,7281, add json output support channel program change piggyback json output support top channel program 6558 way json output support targeted scripting use case easily maintainable since really touch one function patch port joyent json nvlist library illumos enable easy json printing channel program output nvlist keep delta small also took advantage fact printing almost always done exiting program reviewed matt ahrens mahrens delphix.com reviewed tony hutter hutter2 llnl.gov reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed alek pinchuk apinchuk datto.com close 7281,,
2606,a76f3d0437e5e974f0f748f8735af3539443b388,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-16 16:46:06 -0700,7307, fix deadlock pipeline zio_execute bypass called vdev queue lock result deadlock shown stack trace drop vdev queue lock walk parent aggregate determine list component bypassed done safely without holding io_lock since new aggregate yet returned parent change thread arc_read zio_nowait  vdev_queue_io mutex_enter vq_lock   zio_execute  mutex_enter zio io_lock thread inverse order arc_read mutex_enter zio zio_lock mutex_enter vq_lock reviewed tom caputi tcaputi datto.com reviewed brady don.brady delphix.com signed brian behlendorf behlendorf1 llnl.gov close 7307,,
2607,17dd88352e655afe1d09e8e75ca1415e79c3510a,om Caputi <tcaputi@datto.com>, 2018-03-16 19:02:49 -0400,7305, allow qat handle non page aligned buffer patch add handling qat acceleration function allows handle buffer aligned page cache moment never happens since caller happen work page aligned buffer code prevent headache always true future patch also add cleanup align qat compression code encryption checksumming code reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com signed tom caputi tcaputi datto.com close 7305,,
2608,cec3a0a1bb08574260a9e39301a24ce79dbfb69a,laf Faaland <faaland1@llnl.gov>, 2018-03-15 10:56:55 -0700,7296, report pool suspended due mmp pool suspended record whether due error due mmp writes failing succeed within required time change spa_suspended uint8_t store reason userspace query pool status via spa_tryimport report reason pool suspended new key  libzfs interpreting returned config nvlist report suspension due mmp new pool status enum value  status_callback generates emits message zpool status executed add case print appropriate message new pool status enum value reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed olaf faaland faaland1 llnl.gov close 7296,,
2609,38742209322b5b3d93635a4820b2f9c755aadee8,om Caputi <tcaputi@datto.com>, 2018-03-15 13:53:58 -0400,7295, sha256 qat acceleration patch enables acceleration sha256 checksum using intel quick assist technology patch also fix refactors code qat encryption make behavior consistent reviewed brian behlendorf behlendorf1 llnl.gov signed chengfeix zhu chengfeix.zhu intel.com signed weigang weigang.li intel.com signed tom caputi tcaputi datto.com close 7295,,
2610,8a2a9db8df7d421aedeababf7b1ecbb51642f16c,tephen Blinick <stephen.blinick@delphix.com>, 2018-02-11 16:11:59 -0700,7302, openzfs 9076 adjust perf test concurrency setting zfs performance test concurrency lowered better latency work stephen blinick nightly performance run typically consist two level concurrency fairly high since run zfs filesystem within zpool based variable number vdev amount driven device variable additionally different device type hdd ssd etc generally handle different amount concurrent saturating nevertheless practice appears test well past concurrency saturation point therefore perform throughput maximum device queuedepth device high however latency much higher best possible throughput increase linearly increase concurrency mean change code impact latency normal operation saturation may apparent large component measured latency sitting queue serviced therefore changing concurrency setting recommended authored stephen blinick stephen.blinick delphix.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed dan kimmel dan.kimmel delphix.com reviewed john wren kennedy jwk404 gmail.com ported john wren kennedy jwk404 gmail.com openzfs issue http www.illumos.org issue 9076 openzfs commit http github.com openzfs openzfs pull 562 upstream bug dlpx 45477 close 7302,,
2611,1a2342784aeb15049a3d4926615adf3b85f0bce4,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-03-15 13:29:51 -0400,7300, receive_spill doe byte swap spill content zfs receive function receive_spill account spill block endian conversion defensive measure reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed paul zuchowski pzuchowski datto.com close 7300,,
2612,de4f8d5d2620b550b99a7bdbfbeb49214a38dc79,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-13 10:52:48 -0700,7273, openzfs 9188 increase size dbuf cache reduce indirect block decompression compressed arc bug 6950 use cpu decompress indirect block workload random cached read reduce decompression cost would like increase size dbuf cache indirect block stored uncompressed caching entire large file recordsize indirect block use 64th much memory data block assuming compression ratio suggest making dbuf cache 32nd memory scenario able keep indirect block decompressed dbuf cache want 64th indirect block would use need cache stuff dbuf cache well real world workload help dramatically example think still worth risk decreasing performance low potential negative performance impact slightly reducing size arc porting note added module option zfs module parameters.5 man page preserved scaling based target arc size rather max arc size authored george wilson george.wilson delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed paul dagnelie pcd delphix.com reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 9188 openzfs commit http github.com openzfs openzfs pull 564 upstream bug dlpx 46942 close 7273,,
2613,a6cc97566c54255c98612c801f2c9d9be2d0e8f8,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-13 10:45:55 -0700,7287, add kernel module auto loading historically dynamic misc minor number registered dev zfs device order prevent minor number collision fine prevented able use kernel module auto loaded requires known reserved value resolve issue adding configure test find available misc minor number used build time adding alias zfs kmod added list known static node systemd tmpfiles setup dev service create dev zfs character device boot time turn allows update zfs.rules file make aware static node upshot whenever process zpool zfs zed open dev zfs kmods automatic loaded even work unprivileged user longer need manually load module boot time additional bonus zed longer need start zfs import.service since trigger module load unlikely event minor number selected conflict another tree unregistered minor number code fall back dynamically allocating case module must manually loaded note due change method registering minor number zimport.sh test case may incorrectly fail static node installed package created instead dynamic one issue transiently impact zimport.sh single commit transition mixing matching method reviewed fabian grã¼nbichler f.gruenbichler proxmox.com signed brian behlendorf behlendorf1 llnl.gov yes close 7287,,
2614,02638a30efb0e9800fdc8834d5b7ab66432db00a,im Chase <tim@chase2k.com>, 2018-03-13 12:43:14 -0500,7293, add tunable set dtl range cleared even scan scrub error allows work around resilver scrub upon import pool error reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 7293,,
2615,83362e8e676a3ffae6b3b21f350f9b999a068605,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-03-12 18:24:08 -0400,7271, destroy make full snap list destroying change zfs destroy logic destroying begin entire list snapshot built reviewed loli10k ezomori.nozomu gmail.com reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 7271,,
2616,9470cbd4f95ecd730d18f7dadd56bcf54c6711b0,hunwei Chen <tuxoko@gmail.com>, 2018-03-12 11:27:02 -0700,7291, fix race trace point zrl_add_impl hit illegal memory access zrlock trace point problem zrl zr_owner zrl zr_caller assigned locklessly zrl zr_owner got assigned longer string __string calculate strlen __assign_str doe strcpy copy overflow buffer  example initial condition zrl zr_owner zrl zr_caller abc thread thread  zrl zr_owner dtrace_probe2 __string strlen zrl zr_caller allocate buf  zrl zr_owner zrl zr_caller abcd __assign_str strcpy buf zrl zr_caller buffer overflow  dereferencing zrl zr_owner pid may also problematic zrl zr_owner got changed task task exit freeing task_struct unlikely task need zrl_remove exit dereferencing zr_owner zr_owner pid nevertheless deal well fix zrl zr_caller issue instead copy string content copy pointer safe always point __func__ static zrl zr_owner issue pas curthread instead using zrl zr_owner reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen nutanix.com close 7291,,
2617,b7eec00f9fc05e883b0dadb231251b5996d02e3e,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-12 11:26:05 -0700,7289, fix mmp write frequency large pool single pool contains vdevs config_hz kernel mmp thread delay properly switch using handle higher resolution delay issue reported arch linux default 100 could fairly easily reproduced reasonably large pool distribution kernel set config_hz 250 config_hz 1000 thus unlikely impacted reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7205 close 7289,,
2618,743253df70e9d9772cf98fcdd0fb7f42398d4ff8,laf Faaland <faaland1@llnl.gov>, 2018-03-08 15:39:07 -0800,7286, hold scl_vdev counting leaf config lock held walk tree otherwise pointer reference may become invalid walk scl_vdev minimal lock provided case reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed olaf faaland faaland1 llnl.gov close 7286,,
2619,ebed90a598677dfba76c95cf184549dbc1cb6be5,laf Faaland <faaland1@llnl.gov>, 2018-03-08 15:21:54 -0800,7286, handle zio_resume mmp multihost disabled pool pool resumed via zpool clear within single cycle mmp thread loop e.g cv_timedwait call mmp_last_write mmp_delay updated original code mistakenly treated two case could occur time reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed olaf faaland faaland1 llnl.gov close 7286,,
2620,5ee220ba5c825263ce6f77106914bda35e60ef06,omohiro Kusumi <kusumi.tomohiro@osnexus.com>, 2018-02-23 02:31:34 +0900,7216, document allowed pool name 7208 patch allow non reserved pool name begin mirror raidz spare equal however rather document man page compatibility openzfs implementation avoid pool name may work non linux platform reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7216,,
2621,c45c6d921293084f9b2ecedfef4965fa726f8c07,OLi <loli10K@users.noreply.github.com>, 2018-03-09 22:52:37 +0100,7284, fix zfs kmod build using rpm 4.14 rpm software management rpm 5e94633 package version containing invalid character commonly double cause kmod package generation terminate error change take advantage newly introduced rpm macro allow kmod package built reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7284,,
2622,43983eb2024ec6b3280e6e06a6fb621ee3bb2a41,OLi <loli10K@users.noreply.github.com>, 2018-03-09 22:51:31 +0100,691, fix spl kmod build using rpm 4.14 rpm software management rpm 5e94633 package version containing invalid character commonly double cause kmod package generation terminate error change take advantage newly introduced rpm macro allow kmod package built reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 691,,
2623,6b8655ad3fe070089b690b95d8485e41b3e7e67e,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-03-10 06:47:32 +0900,7285, change function return literal return const char return string literal read thus return const char return non const string successful lookup return string literal otherwise since function designed used read purpose return type also const char reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7285,,
2624,cf63739191b6cac629d053930a4aea592bca3819,om Caputi <tcaputi@datto.com>, 2018-03-09 16:37:15 -0500,7282, qat support aes gcm patch add support acceleration aes gcm encryption intel quick assist technology reviewed brian behlendorf behlendorf1 llnl.gov signed chengfeix zhu chengfeix.zhu intel.com signed weigang weigang.li intel.com signed tom caputi tcaputi datto.com close 7282,,
2625,8e5d14844d2f22997b3a41d8e2357e8f30c5d5dd,aul Zuchowski <31706010+PaulZ-98@users.noreply.github.com>, 2018-03-07 20:03:33 -0500,7261, zdb inuse test pas real disk due zpool create auto partioning linux i.e sdb1 certain utility need use parition sdb1 others use whole disk name sdb reviewed brian behlendorf behlendorf1 llnl.gov signed paul zuchowski pzuchowski datto.com close 6939 close 7261,,
2626,0e85048f53e46f30f26540fe3f6ae755d4d52ad1,olfgang Bumiller <Blub@users.noreply.github.com>, 2018-03-08 00:40:42 +0100,7270, take user namespaces account policy check change file related check use user namespaces make sure involved uids gids mappable current namespace note check without file ownership information still take user namespaces account handled via zfs allow otherwise root user namespace could issue command zpool export also add initial user namespace regression test setgid bit loss user_ns_exec helper usable test additionally configure check required user namespace related feature added ns_capable kuid user_ns cred_t reviewed brian behlendorf behlendorf1 llnl.gov signed wolfgang bumiller w.bumiller proxmox.com close 6800 close 7270,,
2627,434a3375ce84db2f86808875fb85f5afa1e84750,rian Behlendorf <behlendorf1@llnl.gov>, 2018-03-07 09:55:54 -0800,7277, zts fix send test could fail attempting write newly created volume missing device node resolve issue calling block udev creates needed entry reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7276 close 7277,,
2628,a07ad58847158fcd90a2a98f1476a81bfcd3c3ac,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-03-07 09:53:04 -0800,7266, fix implement new helper test value within range target dbufstats dbufs kstat file read slightly different time possible stats slightly use determine value close enough target reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 7239 close 7266,,
2629,639b18944a6a3483c02039621c02dac08a954a90,ony Hutter <hutter2@llnl.gov>, 2018-03-06 15:41:52 -0800,7260, allow limit zed syslog chattiness usage pattern like send recv replication stream produce large number event case current syslog.sh zedlet hold name flood log mostly redundant information two mitigate situation changeset introduces new variable  zed.rc give control event class end syslog reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov signed daniel kobras d.kobras science computing.de close 6886 close 7260,,
2630,d2160d053838e36df83e5fe3a9ca20abad588a4c,laf Faaland <faaland1@llnl.gov>, 2018-02-26 20:32:49 -0500,7212, record skipped mmp writes per pas mmp thread loop vdev tree walked find suitable leaf write next mmp block leaf found thread sleep resume top loop add entry leaf found record reason error column error code entry bitfield displayed hex 0x1 least one vdev interior leaf writeable 0x2 least one writeable leaf vdev found pending mmp write timestamp time second since epoch leaf could found originally duration time mmp block written reason doe include preceeding inter write period following inter write period vdev_guid number sequential cycle mmp thread looop occurred sample output truncated fit record skipped mmp writes right column vdev_path reported txg timestamp error duration mmp_delay vdev_guid ... 936 1520036441 146264 891422313 1740883117838 ... 937 1520036441 163956 888356657 7320395061548 ... 938 1520036442 130690 885314969 7320395061548 ... 939 1520036442 2001068577 882296582 1740883117838 ... 940 1520036443 161806 882296582 7320395061548 ... 941 1520036443 0x2 998020546 ... 942 1520036444 136585 998020546 7320395061548 ... 943 1520036444 0x2 998020257 ... 944 1520036445 2002662964 994160219 1740883117838 ... 945 1520036445 0x2 998073118 994160219 ... 946 1520036447 247136 994160219 7320395061548 ... reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 7212,,
2631,14c240cede5b38a761deedc2e23821a3f983da00,laf Faaland <faaland1@llnl.gov>, 2018-02-20 17:33:51 -0800,7212, detect long config lock acquisition mmp something hold config lock writer long mmp fail issue mmp writes timely manner result either pool suspended extreme case pool protected time acquire config lock exceeds minimum report zfs debug log reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 7212,,
2632,c7b55e71b0c24b836f8de56554cd1b0270c363ff,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-03-06 14:54:57 -0800,7267, introduce destroy_dataset helper datasets busy calling zfs destroy introduce helper function destroy datasets use destroy datasets  reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 7224 close 7246 close 7249 close 7267,,
2633,2705ebf0a74f15bb246fb899f19b0ee17aa1c4b5,asf-Fan <fan.yong@intel.com>, 2018-03-06 04:56:27 +0800,7265, misc fix cleanup project quota coverity scan report issue project quota patch including 1.1 directly const quota type value condition check wrong 1.2 may cause dnode dn_newgid overwritten dnode dn_oldprojid patch fix related issue also enhances logic avoid buffer overflow skip project quota ability check doe change project quota related thing flag otherwise cause chattr non project quota flag operation failed project quota disabled reviewed brian behlendorf behlendorf1 llnl.gov signed fan yong fan.yong intel.com close 7251 close 7265,,
2634,dd3e1e3083e6b80ac7cc4dabfbf9b5036b7a889d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-03-05 12:44:35 -0800,7264, linux 4.16 compat http github.com torvalds linux commit fb6d47a get_disk add configure check determine need use reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 7264,,
2635,80d52c3919b8cbf1cf21be07037335a22922440f,ony Hutter <hutter2@llnl.gov>, 2018-03-04 17:34:51 -0800,7252, change checksum delay ratelimit value change checksum delay ratelimit threshold sec sec allows zed actually trigger bunch event arrive short period time zed threshold event sec previously say 100 checksum error sec would get ratelimited sec trigger zed fault drive also convert checksum delay threshold module params easy testing reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 7252,,
2636,5666a994f2b17f1d720efa83d4c64b1ed7bb53d0,hrisrd <chris@onthe.net.au>, 2018-03-03 05:01:53 +1100,7176, increment properly zil_lwb_commit tx_write copy log write record lrw log write block lwb send using zil_lwb_add_txg also wr_need_copy additionally copy lwr data lwb sent lwr data fit lwb send lrw much data fit dnow byte back remaining data time loop sending dnow data byte i.e incremented dnow reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 6988 close 7176,,
2637,d0f6fbaff383d0ea0b11f4e4547d6b062ef7ddad,hrisrd <chris@onthe.net.au>, 2018-03-03 04:57:29 +1100,7258, zts fix spurious failure mv_files test could fail race condition file generated background attempting move file wait file generation complete trying move file around also clean waiting wait command without argument wait child pid reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 7220 close 7242 close 7258,,
2638,e086e717c3fc2c5b0867ee4b5ec07200a53b8dac,ohn Wren Kennedy <jwk404@gmail.com>, 2018-02-28 10:38:37 -0800,7225, add zfs perf test dbuf cache change add test sequential read dbuf cache essentially copy using smaller data set sequential read test renamed differentiate authored dan kimmel dan.kimmel delphix.com reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed john wren kennedy john.kennedy delphix.com close 7225,,
2639,d699aaef09fd8d71ad72c92f18219e97dc1f45e6,ohn Eismeier <32205350+jeis2497052@users.noreply.github.com>, 2018-02-28 11:57:10 -0500,7237, fix typo reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed john eismeier john.eismeier gmail.com close 7237,,
2640,d72cd017dd339b5d916cbcdacd885b3b78ac5d74,omohiro Kusumi <kusumi.tomohiro@gmail.com>, 2018-03-01 01:54:53 +0900,7244, fix zpool list example match actual format a05dfd00 illumos 5147 swapped frag expandsz natural modify example zpool list head name size alloc free expandsz frag cap dedup health altroot  reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 7244,,
2641,19528cf9490bf4519d70028cc794e438303baf12,cot W. Stevenson <scot.stevenson@gmail.com>, 2018-02-28 17:52:34 +0100,6892, add python rewrite arc_summary.py add new script arc_summary3.py complete rewrite arc_summary.py tool see issue 6873 add new option graph display crude graphic representation arc status quit raw print available information minimally formatted list grep section print single section replaces page kept backwards use marked depreciated add new section information zil spl notify user section l2arc vdev skipped instead failing silently add warning page option depreciated developed python 3.5 reviewed richard laager rlaager wiktel.com reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6873 close 6892,,
2642,3e9c9d8a89c8665fc585db88fa911ce60533e79f,ony Hutter <hutter2@llnl.gov>, 2018-02-27 09:31:27 -0800,7178, add smart self test result zpool status add smart self test result zpool status iostat work sata drive also add plumbing allow smart script take smartctl output directory output text file instead running vdevs reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7178,,
2643,095495e0081c16a18641fc60e7c9872123a4f83e,om Caputi <tcaputi@datto.com>, 2018-02-27 12:04:05 -0500,7236, raw drr_object record must write raw data b1d21733 made possible empty metadnode block compressed hole fixing bug would cause invalid metadnode mac send stream attempted free object allowing block reclaimed longer needed however patch also introduced race condition txg sync occurred record received object added metadnode block would compressed hole lose encryption parameter would cause subsequent drr_object record fail attempted write data unencrypted block patch defers handling receive_object encryption parameter set object written block reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7215 close 7236,,
2644,8b5814393f43d7eb7e4319120529d957a5f7bf8e,im Chase <tim@chase2k.com>, 2018-02-26 16:20:12 -0600,7234, incorrect maximum dva value dde_get_ndvas conditional reversed caused garbage value used calculating dds_ref_dsize reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed matthew ahrens mahrens delphix.com signed tim chase tim chase2k.com close 7234,,
2645,4af6873af6f8e9f6355e4962262c06d449664d26,OLi <loli10K@users.noreply.github.com>, 2018-02-26 18:55:18 +0100,7229, fix segfault zfs_do_bookmark invoked wrong parameter zfs bookmark fails gracefully validate user input crash regression accidentally introduced 587e228 commit add additional test zfs test suite exercise codepath reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed kireinahoro jsteward.moe signed loli10k ezomori.nozomu gmail.com close 7228 close 7229,,
2646,2a0428f16b93b7d5160c277dd678e65ad27d996f,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-24 10:07:12 -0800,7226, zts fix zfs_share_ test case failure prevent false positive running zfs_share_ test case due leftover stale var lib nfs etab entry starting test group synchronize var lib nfs etab file etc export point testing additional zfs share entry add reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 7226,,
2647,3673d032850c3b54b8b2cc74cf1782a75cc9b2a9,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-24 10:05:37 -0800,687, fix cstyle warning patch contains functional change solely intended resolve cstyle warning order facilitate moving spl source code zfs repository reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 687,,
2648,41532e5a29a85de180f1bc6b6c605cedb44b0806,ash Pande <kash@tripleback.net>, 2018-02-21 20:54:54 -0500,7214, shellcheck cleanup initrd script reviewed brian behlendorf behlendorf1 llnl.gov authored kash pande kash tripleback.net authored matthew thode mthode mthode.org signed kash pande kash tripleback.net signed matthew thode mthode mthode.org close 7214,,
2649,7280d581973e923c6492b59803246a94347a47b8,ash Pande <kash@tripleback.net>, 2018-02-20 13:13:20 -0500,7214, enable booting nested encrypted datasets enable booting nested encrypted datasets fix plymouth boot splash passphrase entry optimize unlock process authored kash pande kash tripleback.net authored matthew thode mthode mthode.org signed kash pande kash tripleback.net signed matthew thode mthode mthode.org close 7214,,
2650,bf95a000c432dc92591432bfd2b7943cbbfb6708,ony Hutter <hutter2@llnl.gov>, 2018-02-23 11:38:05 -0800,7086, add scrub resilver zed script add zed script kick scrub resilver script disabled default add optional path option zed allow use custom path zedlets needed running zed zts local workspace update test script copy debug.sh syslog.sh default optionally copied part zed_setup script slow zed considerably heavy event load cause event dropped delivery delayed causing sporadic failure fault test reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed tony hutter hutter2 llnl.gov close 4662 close 7086,,
2651,e9a77290081b578144e9a911ad734f67274df82f,hrisrd <chris@onthe.net.au>, 2018-02-24 03:50:06 +1100,7170, fix free memory calculation v3.14 provide infrastructure auto configure enum api change global page stats used free memory calculation arc_free_memory broken since api change linux v3.14 2016 v4.8 599d0c95 vmscan move lru list node 2016 v4.8 75ef7184 vmstat add infrastructure per node vmstats commits moved api change particularly egregious instead breaking old code silently wrong thing continued using using thus indexing wrong array via  api change along way 2017 v4.13 385386cf vmstat move slab statistic zone node counter 2017 v4.14 c41f012a rename  ... various incomplete turn attempt accomodate change zol 2017 2209e409 linux 4.8 compatibility fix stats 2017 787acae0 linux 3.14 compat acct etc 2017 661907e6 linux 4.14 compat acct etc config infrastructure provided resolve issue going back original api change v3.14 robust linux change area reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed chris dunlop chris onthe.net.au close 7170,,
2652,7088545d0166aa05b2c783f18aa821d95a1f023d,laf Faaland <faaland1@llnl.gov>, 2018-02-22 15:34:34 -0800,7190, report duration error mmp_history entry mmp write completes update relevant mmp_history entry time submission completion error status write faaland1 toss3a zfs cat proc spl kstat zfs pool multihost 0x01 100 8800 69147946270893 72723903122926 txg timestamp error duration mmp_delay vdev_guid 10607 1166 1518985089 138301 637785455 4882 ... 10608 1166 1518985089 136154 635407747 1151 ... 10609 1166 1518985089 803618560 633048078 9740 ... 10610 1166 1518985090 144826 633048078 4882 ... 10611 1166 1518985090 164527 666187671 1151 ... duration error zio io_error reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 7190,,
2653,0d398b25644ff1eb67141629bc6e5aead95edeba,laf Faaland <faaland1@llnl.gov>, 2018-02-22 09:14:46 -0800,7182, initiate mmp writes pool suspended pool suspended host may imported host host continued write mmp block would blindly overwriting mmp block written host block written host would outdated txg information reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 7182,,
2654,a5369b61a24cf75d8188af8ee554123cf7fae14c,ony Hutter <hutter2@llnl.gov>, 2018-02-22 09:02:06 -0800,7211, linux 4.16 compat use correct _dec_and_test use 4.16 kernel older kernel http lwn.net article 714974 reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 7179 close 7211,,
2655,f8478fc2ca8d62f9562a4284426e8d3bd41c0cf0,om Caputi <tcaputi@datto.com>, 2018-02-22 11:50:14 -0500,7210, fix bound check current bound check doe properly handle possible size objset_phys_t therefore read outside buffer memory memory happened match check actually looking objset would fail owned complaining mac invalid reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7210,,
2656,378c6ed549e7d68eebb4b0bd37a09e66f70c647b,omohiro Kusumi <kusumi.tomohiro@osnexus.com>, 2018-02-19 20:40:38 +0900,686, fix function name typo vn_init vn_fini renamed 12ff95ff 2011 reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 686,,
2657,68386b05031a70f7f135481307318ef04c2f30e0,omohiro Kusumi <kusumi.tomohiro@osnexus.com>, 2018-02-19 19:23:53 +0900,686, staticize used via ks_update kstat_t exported header prototype reviewed brian behlendorf behlendorf1 llnl.gov signed tomohiro kusumi kusumi.tomohiro osnexus.com close 686,,
2658,09302a4ca86df2a758c5b883e28b0952cfa31ff7,oomas Soome <tsoome@me.com>, 2017-07-01 10:13:08 +0300,7206, openzfs 9035 zfs statement may fall authored toomas soome tsoome me.com reviewed yuri pankov yuripv yuripv.net reviewed andy fiddaman omnios citrus it.co.uk reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 9035 openzfs commit http github.com openzfs openzfs commit 46ac8fdfc5 close 7206,,
2659,2b5cd5990f587dedf5cfe3f857105af70c7a21ed,eHackEd <DeHackEd@users.noreply.github.com>, 2018-02-21 17:54:26 -0500,685, fix multiple evaluation verify assert failure reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 684 close 685,,
2660,a2819058f5c2dc03f34114aa716ec5a5db7f07bd,atthew Thode <mthode@mthode.org>, 2018-02-21 22:45:35 +0000,7174, allow modprobe fail called within systemd allows system zfs built kernel manually run service otherwise service fail start reviewed loli10k ezomori.nozomu gmail.com reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov signed matthew thode mthode mthode.org close 7174,,
2661,ca0b37660486e417e8067edc23b4b7e9e1ff71e8,under2015 <omfgbunder@gmail.com>, 2018-02-21 16:52:47 -0500,7193, add smart attribute ssd nvme add smart attribute required probe samsung ssd nvme possibly others disk using zpool status command reviewed loli10k ezomori.nozomu gmail.com reviewed giuseppe natale dinatale2 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 7183 close 7193,,
2662,26cb4b87917f81e8fcb34070cccf57b83109c424,hrisrd <chris@onthe.net.au>, 2018-02-22 07:35:59 +1100,7202, allow make checkstyle paxscript build dir reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed chris dunlop chris onthe.net.au close 7202,,
2663,faa97c1619e5d7b51b2077db18fb92c5279b9db3,OLi <loli10K@users.noreply.github.com>, 2018-02-21 21:32:06 +0100,7156, want zfs send change implement zfs send used send received property value whether overridden local setting useful restore operation backup pool allows send property value originally sent backup source even though later modified destination either zfs set operation explicit zfs inherit overridden receive process via zfs receive reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7156,,
2664,b0918402dc9a0f81dd52880fbd4e4f4f2133764b,om Caputi <tcaputi@datto.com>, 2018-02-21 15:31:03 -0500,7200, raw receive change key atomically currently raw zfs sends transfer encrypted master key objset_phys_t encryption parameter drr_begin payload send file processed soon read dmu_recv_stream meaning new key set new snapshot received addition fact change user key dataset earlier might expect key never reset originally event receive failed patch split processing objset handling key handling later moved dmu_recv_end key change done atomically reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7200,,
2665,4a385862b7a9c62f5ec46462e92db48c3c5ec7d9,om Caputi <tcaputi@datto.com>, 2018-02-21 15:30:11 -0500,7199, prevent raw zfs recv dataset unencrypted current design zfs encryption allows dataset one dsl crypto key time result important zfs receive code ensures one key use time given dsl directory zfs receive complicates since new dataset received clone existing one atomic switch done end prevent confusion dataset actually encrypted check added ensure encrypted datasets use zfs recv completely replace existing datasets unfortunately check take account unencrypted datasets overriden encrypted one case along line code also failed ensure raw recieves could done top existing unencrypted datasets cause amny problem since new stream decrypted reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7199,,
2666,b1d217338a51b025b802ebf6a759f45dcd8e3b4c,om Caputi <tcaputi@datto.com>, 2018-02-21 15:28:52 -0500,7198, raw receives must compress metadnode block currently dmu relies zio layer compression free dnode block longer object however raw receives disable compression meaning block never freed addition obvious space concern could also cause incremental raw receives fail mount since mac hole different completely zeroed block patch corrects issue adding special case attempt compress block hole even set patch also remove tunable since tuning could cause issue reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7198,,
2667,5121c4fb0c25a369d2e6f61e5b0a79969f0b75b5,om Caputi <tcaputi@datto.com>, 2018-02-21 15:26:51 -0500,7197, remove unnecessary txg syncs receive_object 1b66810b introduced serveral change improved reliability zfs sends large dnodes involved however fix required adding call txg_wait_synced drr_object handling code although currently necessary patch allows code continue without waiting case  reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7197,,
2668,478b3150dea216d73e3d65749c8d6ccd365efef4,om Caputi <tcaputi@datto.com>, 2018-02-21 15:24:37 -0500,7196, add omitted set one line patch add add set omitted code updated 1b66810 without code instance could attempt write raw encrypted data regular unencrypted data without key loaded triggering assert zio_encrypt reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 7196,,
2669,f2c0dee23b65fb2581a0257bdaaecf892ca800c1,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-02-20 16:28:52 -0800,7191, correct mmp.kshlib log_must call causing return uberblock count remove log_must since logging sleep reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed giuseppe natale dinatale2 llnl.gov close 7191,,
2670,163a8c28dd7084bd85a32968c2b7941e99ead161,om Caputi <tcaputi@datto.com>, 2018-02-20 19:27:31 -0500,7163, zil claiming start user accounting currently zil claiming dirties objsets cause dsl_pool_sync attempt perform user accounting cause problem encrypted datasets raw received system went offline since perform user accounting key loaded trigger assert zio_encrypt since encryption added code depends fact data written objsets owned patch add check ensure useraccounting done objsets actually owned write part work zfsvfs zvol code updated longer lie owning objsets readonly reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6916 close 7163,,
2671,cbce58135341d470c3a57e343bebe253384e1198,on Brady <don.brady@delphix.com>, 2018-02-20 12:19:42 -0700,7181, fix coverity defect zfs channel program cid 173243 173245 memory corruption overrun added size argument lcompat_sprintf avoid use int_max cid 173244 integer handling issue added cast uint64_t avoid bit overflow warning cid 173242 integer handling issue conditionally removed unused luai_numisnan floating point check cid 173241 resource leak resource_leak added missing close error path cid 173240 uninit fixed uninitialized variable cid 147560 null pointer dereferences null_returns cleaned bad code merge cid 28475 memory illegal access overrun fixed lcompat_sprintf use size paramater cid 28418 28422 error handling issue checked_return added function result cast void avoid warning cid 23935 28411 28412 memory corruption added cast avoid exposing result array reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 7181,,
2672,7b30ee6bafe91ebd3b34433ef3b943fd07a98cea,om Caputi <tcaputi@datto.com>, 2018-02-20 12:41:07 -0500,7177, project dnode protected local mac patch corrects small security issue 9c5167d1 project dnode added objset_phys_t included local mac cryptographic protection allowing attacker modify data without consent key holder patch doe represent disk format change anyone using project dnodes encrypted dataset signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 7177,,
2673,e921f6508b212c61fcedd0eeb2f9cf9da1abc4d1,hrisrd <chris@onthe.net.au>, 2018-02-16 07:58:23 +1100,7169, fix config issue frame size header various debug tracing kernel option enabled possible struct inode struct super_block exceed default frame size leaving error like config.log build conftest.c 116 error frame size 1048 byte larger 1024 byte werror frame larger fix removing frame size warning config check without correct header included possible declaration missed leaving error like config.log build conftest.c 131 error struct nameidataâ declared inside parameter list werror fix adding appropriate header note issue result silent config failure compile failure taken mean option supported kernel rather something wrong config test lead something merely annoying compile failure something potentially serious miscompiled misused kernel primitive function e.g fix included resulted additional defines zfs_config.h linux v4.14.19 also drive whitespace fix config file mention gnu one look imported elsewhere leave alone reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 7169,,
2674,62d5c5531334c25918dad7f2b303eefe33da4f5a,on Brady <dev.fs.zfs@gmail.com>, 2018-02-15 10:53:04 -0700,7173, address objtool check failure lua module use void __attribute__ noreturn kernel build causing lot warning active remove attribute achieve clean build lua module significant increase time run full channel_program zts test reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed brady don.brady delphix.com close 7173,,
2675,ec7c1b914c096ff0ca95c8b04af07ca6d2be3c7a,laf Faaland <faaland1@llnl.gov>, 2018-02-15 09:50:06 -0800,7172, clarify zinject explanation error injection eio enxio simply set zio io_error value rather preventing read write occurring important information affect probe must used reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed olaf faaland faaland1 llnl.gov close 7172,,
2676,ddc751d56beee8bf79d352ca3d8253d6238b2dc2,eorge Wilson <george.wilson@delphix.com>, 2018-02-08 15:04:14 -0500,7168, openzfs 8857 panic due already destroyed parent zio problem  possible parent zio complete even though child completed result following panic  vpanic mutex_panic 0x58 0x347 0x50  zio_done 0x390 zio_execute 0x78 taskq_thread 0x2d0 thread_start status debugging crash dump vmcore.2 bit batfs0390 operating system 5.11 i86pc image uuid set panic message mutex_enter bad mutex owner thread dump content kernel page problem dbuf_prefetch along l2arc create zio tree confuses parent zio allows complete child still exist scenario zio tree pio lio parent zio pio entered zio_done stage begin check child see still completed zio_done child checked following order zio zio_child_vdev zio_wait_done zio zio_child_gang zio_wait_done zio zio_child_ddt zio_wait_done zio zio_wait_done pio find child completed stop executing sleep call grab io_lock checking particular child scenario pio completed first call check zio_child_vdev child since zio zio tree right logical zio lio completes call prepares check next child type meantime lio completes callback creates child vdev zio cio zio tree look like zio tree pio lio cio lio grab parent io_lock remove zio tree pio cio pio continues run already completed check zio_child_vdev erroneously complete child zio cio completes panic system trying reference parent zio destroyed solution  fix rework logic accept bitfield child type interested checking io_lock held entire time check child type since function accepts bitfield simple zio_child_bit macro provided allow conversion zio_child type bitfield used logic authored george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org reviewed youzhong yang youzhong gmail.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd omniti.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8857 openzfs commit http github.com openzfs openzfs commit 862ff6d99c issue 5918 close 7168,,
2677,4411de2116bbe46633746a163c54445db9e786d4,oli10K <ezomori.nozomu@gmail.com>, 2017-12-31 00:25:56 +0100,7171, openzfs 8940 sending intra pool resumable send stream may result exdev resuming token requires guid snapshot mapping walk whole dataset hierarchy find right snapshot send source destination exists incremental resumable stream libzfs get confused pick wrong snapshot send result attempting send destination snap1 source snap2 instead source snap1 source snap2 fails invalid cross device link error exdev fix adjusting logic behind dataset traversal pick right snapshot send additionally update dry run zfs send print output stderr consistent dry run command patch note reconciled difference openzfs  authored loli10k ezomori.nozomu gmail.com reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved han rosenfeld rosenfeld grumpf.home 2000.org ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8940 openzfs commit http github.com openzfs openzfs commit 9f7867c206 close 7171,,
2678,9c5167d19fe02e44ba09c6d0282363c19781b19d,asf-Fan <fan.yong@intel.com>, 2018-02-14 06:54:54 +0800,6290, project quota zfs project quota new zfs system space object usage accounting enforcement mechanism similar user group quota project quota another dimension system quota base new object attribute project project numerical value indicate project object belongs object belong one project though object owner privileged user change object project via chattr zfs project explicitly object also inherit project parent created parent project inherit flag set via chattr zfs project accounting space object belong project know many space object used project set upper limit control space object consumed project useful multiple group user cooperate project user group need participate multiple project support following command functionality zfs set projectquota project zfs set projectobjquota project zfs get projectquota project zfs get projectobjquota project zfs get projectused project zfs get projectobjused project zfs projectspace zfs allow projectquota zfs allow projectobjquota zfs allow projectused zfs allow projectobjused zfs unallow projectquota zfs unallow projectobjquota zfs unallow projectused zfs unallow projectobjused chattr chattr project_id lsattr patch also support tree quota based project quota via zfs project command set following zfs project file directory ... zfs project file directory ... zfs project file directory ... zfs project file directory ... dir command set inherit project flag dir proejct obj quota obj used value dir project shown total free avail resource keep behavior ext4 xfs doe reviewed andreas dilger andreas.dilger intel.com reviewed ned bass bass6 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed fan yong fan.yong intel.com zol 0.6.1 zol 0.6.2 master change close 6290,,
2679,c03f04708caecf9a4a4ce2134aaa6a8cabe499c9,OLi <loli10K@users.noreply.github.com>, 2018-02-12 21:28:59 +0100,7154, zfs receive fails dataset busy receiving incremental stream interrupted zfs receive fails message dataset busy still hidden clone recv resumable receive improve error message suggesting existence partially complete resumable stream zfs receive either aborted zfs receive resumed zfs send reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 7129 close 7154,,
2680,a893627fac8d4ed37cf00e671322dfdaa02d4f1c,OLi <loli10K@users.noreply.github.com>, 2018-02-12 20:40:00 +0100,7158, contrib initramfs add missing conf.d zfs upgrading distribution provided zfs initramfs package root zfs ubuntu debian system may fail boot change add missing initramfs configuration file reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed loli10k ezomori.nozomu gmail.com close 7158,,
2681,918dbe35b50649edfce85d61b122be1510152433,anjeevbagewadi <sanjeev.bagewadi@gmail.com>, 2018-02-13 01:00:38 +0530,7155, mmp use fixed tag spa_config lock mmp_write_done tag  reviewed olaf faaland faaland1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed sanjeev bagewadi gmail.com close 6530 close 7155,,
2682,ba779f7f7102bf9cc96eb7c7ba577e283d1a0f63,ohn Wren Kennedy <john.kennedy@delphix.com>, 2018-01-29 15:33:57 -0700,7149, openzfs 9004 zfs test used file removed bit kernel authored john wren kennedy john.kennedy delphix.com reviewed igor kozhukhov igor dilos.org reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 9004 openzfs commit http github.com openzfs openzfs commit fafe9b241f close 7149,,
2683,13342832252c43a0b372b41cb6319377d160bc15,ndriy Gapon <avg@FreeBSD.org>, 2017-07-27 15:58:52 +0300,7150, openzfs 8520 lzc_rollback 8520 lzc_rollback_to support rolling back origin 7198 libzfs gracefully handle einval lzc_rollback lzc_rollback_to support rolling back clone origin current check would allow origin snapshot belongs different filesystem overly restrictive check introduced 7600 regression none existing tool provided way rollback origin authored andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8520 openzfs issue http www.illumos.org issue 7198 openzfs commit http github.com openzfs openzfs commit 78a5a1a25a close 7150,,
2684,cc63068e95ee725cce03b1b7ce50179825a6cda5,anjeevbagewadi <sanjeev.bagewadi@gmail.com>, 2018-02-09 23:45:53 +0530,7054, handle zap_add failure mixed case mode casesensitivity mixed zap_add could fail number file directory name varying case exceed capacity leaf node fatzap result assert failure zfs_link_create doe expect zap_add fail fix handle failure rollback transaction reviewed matt ahrens mahrens delphix.com reviewed chunwei chen david.chen nutanix.com reviewed brian behlendorf behlendorf1 llnl.gov signed sanjeev bagewadi gmail.com close 7011 close 7054,,
2685,eb9c4532dda34bcf0612c2c797cb3fcab9a21b4f,hunwei Chen <david.chen@nutanix.com>, 2018-02-01 16:36:40 -0800,6464, fix zdb objset exported pool zdb objset exported pool would failed failed dataset fs0 file directory reason zdb pas objset name spa_import name create spa later dmu_objset_own try lookup spa using real pool name find one fix make sure pas pool name rather objset name spa_import reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099 close 6464,,
2686,5e3bd0e684a3c32bd22647938247ac3699c5372a,hunwei Chen <david.chen@nutanix.com>, 2018-02-01 16:28:11 -0800,7099, fix zdb segfault large stack reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099,,
2687,950e17c215be4e6da72a61b0431337643a82b509,hunwei Chen <david.chen@nutanix.com>, 2018-02-01 16:19:36 -0800,4984, fix zdb decompression issue zdb decompression implementation first zle easily decompress non zle stream add zdb_no_zle env make zdb skip zle second random byte appended pabd pbuf2 stuff serve purpose byte read decompression anyway instead randomize lbuf2 make sure decompression fill exactly lsize bcmp lbuf lbuf2 last one condition detect fail wrong reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099 close 4984,,
2688,0c0b0ad48addf342fcff29253a40282c00d5ce65,hunwei Chen <david.chen@nutanix.com>, 2018-02-01 15:42:41 -0800,7099, fix racy assignment zcb_haderrors modified zdb_blkptr_done asynchronous must move assignment zio_wait reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099,,
2689,f108a49236ee21bab807c0c6750409b6912ef05e,hunwei Chen <david.chen@nutanix.com>, 2018-02-01 15:41:05 -0800,7099, fix zle_decompress bound access reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099,,
2690,d3190c5f2914b7265f130dc44b868634877a8d7e,hunwei Chen <david.chen@nutanix.com>, 2018-01-30 13:39:11 -0800,7099, fix zdb traverse stop damaged objset root corruption happens root block objset zdb correctly report error traverse datasets come doe callback reset error traverse_hard skipped traversing zil failed traverse_impl example zdb elcc command look like pool damaged objset root patch traversing block verify checksum ... error count errno count block traversal size 379392 alloc 33987072 unreachable 33607680 count 172 ganged count logical 1678336 avg 9757 physical 130560 avg 759 compression 12.85 allocated 379392 avg 2205 compression 4.42 deduped ref deduplication 1.00 spa allocated 33987072 used 0.80 additional non pointer bps type dittoed block vdev 101 patch traversing block verify checksum ... zdb_blkptr_cb got error reading skipping error count errno count  block traversal size 33963520 alloc 33987072 unreachable 23552 count 447 ganged count logical 36093440 avg 80745 physical 33699840 avg 75391 compression 1.07 allocated 33963520 avg 75981 compression 1.06 deduped ref deduplication 1.00 spa allocated 33987072 used 0.80 additional non pointer bps type dittoed block vdev 115  reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen nutanix.com close 7099,,
2691,35e0202fd729a7a162d92b4939f1fe26cb31e454,ohn Wren Kennedy <john.kennedy@delphix.com>, 2018-01-31 13:20:18 -0700,7145, openzfs 8965 fails due longer supported grep regex test used detect end string longer work use work well since string end line anyway authored john wren kennedy john.kennedy delphix.com reviewed akash ayare aayare delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed yuri pankov yuripv icloud.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8965 openzfs commit http github.com openzfs openzfs commit cb1204e444 close 7145,,
2692,f54976dc881549cc3222887188b110f2e8d05f0b,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-08 14:31:08 -0800,7148, linux 4.11 compat avoid refcount_t name conflict related commit 4859fe796 directly using kernel refcount function kernel compatibility code map refcount_t zfs_refcount_t lead type mismatch longer term consider renaming refcount_t zfs_refcount_t zfs code base reviewed olaf faaland faaland1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed chunwei chen david.chen nutanix.com signed brian behlendorf behlendorf1 llnl.gov close 7148,,
2693,18f57327e0c2c669034e1fff1260877fd70c3038,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-08 14:27:59 -0800,7148, linux 4.16 compat new interface added manipulate version field inode add wrapper older kernel use new interface available i_version field dropped trace point due switch atomic64_t i_version type reviewed olaf faaland faaland1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed chunwei chen david.chen nutanix.com signed brian behlendorf behlendorf1 llnl.gov close 7148,,
2694,5b72a38d68453c91bf57cba11789a240199b695d,erapheim Dimitropoulos <serapheim@delphix.com>, 2018-02-08 09:35:09 -0700,6558, openzfs 8677 open context channel program authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed chris williamson delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved robert mustacchi joyent.com ported brady don.brady delphix.com want able run channel program outside synching context would greatly improve performance channel program gather information wait synching context anymore implemented feature introduces following new command line flag zfs program specify intention run open context option new flag option within channel program ioctl selects context appropriate error handling whenever try channel program open context contains zfs.sync expression documentation new feature manual page handle zfs.sync function open context function found interpreter running open context abort script spit descriptive runtime error example given script ... arg ... arg argv err msg destroying err err return msg run open context get back following error channel program execution failed string channel program running function zfs.sync submodule requires passing sync true i.e specify command line argument stack traceback function destroy string channel program main chunk testing introduced new wrapper channel program test run channel program startard open context expect appropriate behavior depending program using zfs.sync module openzfs issue http www.illumos.org issue 8677 openzfs commit http github.com openzfs openzfs commit 17a49e15 close 6558,,
2695,8d103d88565efa90e545de57210c12edef77c938,erapheim Dimitropoulos <serapheim@delphix.com>, 2018-02-08 09:32:45 -0700,8604, openzfs 8604 simplify snapshot unmounting code authored serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed andy stormont astormont approved robert mustacchi joyent.com ported brady don.brady delphix.com every time want unmount snapshot happens snapshot deletion renaming unnecessarily iterate mountpoints vfs layer see zfs_get_vfs current patch completely get rid code change approach keeping behavior code path specifically put hold dataset snapshot get vfs resource reference directly instead linearly searching reference exists attempt amount  change became obvious nvlist manipulation add_boolean add_nvlist take significant amount time ensuring uniqueness every new element even though thus updated patch nvlists trying enforce uniqueness element complete analysis problem solved patch found http post snap unmount perf openzfs issue http www.illumos.org issue 8604 openzfs commit http github.com openzfs openzfs commit 126118fb,,
2696,fc5d4b6737b810be88d60ca5fa9de7e2fba4e26d,on Brady <don.brady@delphix.com>, 2018-02-08 09:31:15 -0700, , increase code coverage lua library add test coverage lua library remove dead code lua implementation signed brady don.brady delphix.com,,
2697,ee00bfb2e6d50b75b045a37eae5b85a048a05aa7,on Brady <don.brady@delphix.com>, 2018-02-08 09:27:00 -0700, , add basic functional test zcp user property signed brady don.brady delphix.com,,
2698,234c91c50848fa74bd72efff4e555331a25d9fe1,hris Williamson <chris.williamson@delphix.com>, 2018-02-08 09:24:39 -0700,8600, openzfs 8600 zfs channel program snapshot authored chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brad lewis brad.lewis delphix.com approved robert mustacchi joyent.com ported brady don.brady delphix.com zfs channel program able create snapshot addition base snapshot functionality entail extra logic handle edge case formerly possible creating destroying snapshot transaction sync openzfs issue http www.illumos.org issue 8600 openzfs commit http github.com openzfs openzfs commit 68089b8b,,
2699,af0736898669eabe31e47405023c80b9a58e5e6c,rad Lewis <brad.lewis@delphix.com>, 2018-02-08 09:20:33 -0700,8592, openzfs 8592 zfs channel program rollback authored brad lewis brad.lewis delphix.com reviewed chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com ported brady don.brady delphix.com zfs channel program able perform rollback openzfs issue http www.illumos.org issue 8592 openzfs commit http github.com openzfs openzfs commit d46b5ed6,,
2700,475eca4908731a87fff1be500ba4d7b011d392e4,hris Williamson <chris.williamson@delphix.com>, 2018-02-08 09:17:52 -0700,8605, openzfs 8605 zfs channel program fix zfs.exists authored chris williamson delphix.com reviewed paul dagnelie pcd delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matt ahrens mahrens delphix.com approved robert mustacchi joyent.com ported brady don.brady delphix.com zfs.exists channel program return result man page entry patch corrects zfs.exists return value indicating dataset exists also add documentation man page openzfs issue http www.illumos.org issue 8605 openzfs commit http github.com openzfs openzfs commit 1e85e111,,
2701,d99a015343425a1c856c900aa8223016400ac2dc,hris Williamson <chris.williamson@delphix.com>, 2018-02-08 09:16:23 -0700,7431, openzfs 7431 zfs channel program authored chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com approved garrett amore garrett damore.org ported brady don.brady delphix.com ported john kennedy john.kennedy delphix.com openzfs issue http www.illumos.org issue 7431 openzfs commit http github.com openzfs openzfs commit dfc11533 porting note cli long option argument parse linux switched kmem_alloc vmem_alloc zcp_lua_alloc lua implementation built module zlua.ko lua header consumed directly zfs code moved include sys lua native setjmp longjump available stock linux kernel brought implementation illumos freebsd adapted due vfs platform difference use inline function lua parser reduce stack usage per call skip zfs test suite zcp test sparc64 avoid stack overflow,,
2702,8824a7f133e4402f7176115cf8efd535c8cbdab2,HR <msl0000023508@gmail.com>, 2018-01-14 23:57:54 +0300,7141, openzfs 8966 source file zfs_acl.c function contains use end lifetime local variable authored whr msl0000023508 gmail.com reviewed matt ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov approved richard lowe richlowe richlowe.net ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8966 openzfs commit http github.com openzfs openzfs commit c95549fcdc close 7141,,
2703,6f259b59cf16f3c859caa64ce5fe55aa39481bad,atthew Thode <mthode@mthode.org>, 2018-02-08 02:31:54 +0000,7140, run pre mount hook zfs load key systemd reviewed kash pande kash tripleback.net reviewed bunder2015 omfgbunder gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed matthew thode mthode mthode.org close 7136 close 7140,,
2704,9ca25e709b904ab9669724d53eb50ee074c09705,OLi <loli10K@users.noreply.github.com>, 2018-02-07 21:43:24 +0100,7131, verify zfs test suite script executability change add make target testscheck verifies ksh test script part zfs test suite executable bit set avoid adding new test script executed test runner.py would result following warning message warning test removed testgroup failed verification also verifies .cfg .kshlib file used zfs test suite executable reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7131,,
2705,6b810d04bda3f274c7835e313a0dfc6938487772,ichard Elling <Richard.Elling@RichardElling.com>, 2018-02-07 11:54:20 -0800,7135, remove deprecated remove doc module parameter reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov richard elling richard.elling close 7135,,
2706,48ef8ba07094afcd67355940ca8db92d76f7c096,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-07 11:50:24 -0800,682, split spl build.m4 split kernel interface configure check seperate macro file intended facilitate moving spl source code zfs repository reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 682,,
2707,5461eefe50427a8f8caf0b92f0195c754bed8ec6,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-07 11:49:38 -0800,681, fix cstyle warning patch contains functional change solely intended resolve cstyle warning order facilitate moving spl source code zfs repository signed brian behlendorf behlendorf1 llnl.gov close 681,,
2708,6d82b79699a40c9b8934286fabdcba5a68ee5bd6,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-06 16:39:18 -0800,7134, add zfs load key.sh .gitignore generated zfs load key.sh file added .gitignore file part commit 7da8f8d8 generated file included repo reviewed matthew thode prometheanfire gentoo.org reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7134,,
2709,0cf3430d2dfca4045ac89b18c65cdef40a4ff907,eHackEd <DeHackEd@users.noreply.github.com>, 2018-02-06 19:35:16 -0500,7133, fix zpool status overflow fast scrub reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed richard elling richard.elling reviewed george melikov mail gmelikov.ru signed dhe git dehacked.net close 7133,,
2710,3d25488afbc2eeaa92b12f7f8b6d686e7ef342eb,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-05 20:42:52 -0800,7101, fix default libdir debian ubuntu distribution provided architecture specific rpm macro file x86_64 architecture debian ubuntu specify wrong default libdir install location building deb package override _lib correct location reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7083 close 7101,,
2711,2b84817f66468da11d5c4373602a0044af46b572,om Caputi <tcaputi@datto.com>, 2018-02-05 19:57:53 -0500,7126, adjust arc prefetch tunables match doc currently arc expose tunables documented specified millisecond however code actually value though second patch adjusts code match name documentation tunables reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed tom caputi tcaputi datto.com close 7126,,
2712,60b82074968e8503bedf35bf2d3e975a1867177e,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-05 12:00:26 -0800,7111, set persistent ztest failure mode order reliably detect deadlock create import path ztest set failure mode property ensures pool always using correct failmode behavior removed insidious use local variable maxfaults macro converted verify verify0 appropriate reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 7111,,
2713,f6b58faaa618256bf7e2ac690dbfe5d4cfb5e976,li5 <weigang.li@intel.com>, 2018-02-06 02:26:27 +0800,7125, bug fix qat_compress.c vmalloc addr check remove unused vmalloc address check function mem_to_page handle non vmalloc address map physical address reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com close 7125,,
2714,0d23f5e2e4532718ce26ec8411140759cf2367e2,rian Behlendorf <behlendorf1@llnl.gov>, 2018-02-04 14:07:13 -0800,7115, fix hash_lock lock inversion held performing drop lock reading disk update code first successful caller add key improve error handling reviewed thomas caputi tcaputi datto.com reviewed rageltman rageltman sempervictus signed brian behlendorf behlendorf1 llnl.gov close 7112 close 7115,,
2715,fbd42542686af053f0d162ec4630ffd4fff1cc30,OLi <loli10K@users.noreply.github.com>, 2018-02-02 22:50:42 +0100,7100, fix systemd_ rpm macro usage debian based distribution debian based distribution seem provide rpm macro dealing systemd pre post install action result error installing upgrading .deb package resulting control script contain following unresolved macro systemd_post systemd_preun systemd_postun fix providing default value postinstall preuninstall postuninstall script macro defined reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7074 close 7100,,
2716,1b66810bad0a893031c6d49613aa83dc359bf034,om Caputi <tcaputi@datto.com>, 2018-02-01 15:37:24 -0500,6864, change work per txg currently single boolean used determining whether next call dmu_objset_sync write objset_phys_t raw buffer since boolean associated txg work simply happens next txg necessarily correct one current implementation issue misdiagnosed resulting small hack dmu_objset_sync seemed resolve problem patch change array booleans one txg txg_off remove hack reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 6864,,
2717,047116ac76526d869e3f347afb5d81cc2b156fdf,om Caputi <tcaputi@datto.com>, 2018-01-19 04:19:47 -0500,6864, raw sends must able decrease nlevels currently raw zfs send file includes drr_object record would decrease number level existing object object reallocated creates new dnode using old object nlevels non raw sends really matter raw sends require nlevels receive side match send side checksum mac tree properly maintained patch corrects issue freeing object completely allocating case patch also corrects several issue dnode_hold_impl related function prevented dnodes particularly multi slot dnodes reallocated properly due fact existing dnodes fully cleaned freed patch add test make sure zfs recv function properly incremental stream containing dnodes different size reviewed matthew ahrens mahrens delphix.com reviewed jorgen lundman lundman lundman.net signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 6821 close 6864,,
2718,d53bd7f5244a1cd0009d2f90d3ec9df22352fbb3,om Caputi <tcaputi@datto.com>, 2017-12-04 14:10:31 -0500,6916, fix recovery import encrypted pool performing zil_claim pool import time important encrypted datasets set writing zil_header_t prevents code attempting authenticate objset_phys_t writes unnecessary zil_header_t protected either objset mac impossible since key loaded yet unfortunately one code path set flag cause failed asserts zpool import patch corrects issue reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 6864 close 6916,,
2719,ae76f45cda0e0857f99e53959cf71c7a5d66bd8b,om Caputi <tcaputi@datto.com>, 2017-11-08 14:12:59 -0500,7052, encryption stability disk format fix disk format encrypted datasets protects encrypted authenticated block also order interpretation block order make work maintaining ability raw sends indirect bps maintain secure checksum mac block along field determine data interpreted unfortunately current disk format erroneously includes field portable thus support raw sends possible easily work around issue due separate much smaller bug cause indirect block encrypted dnodes compressed conflict previous bug addition current code generates incompatible disk format big endian little endian system due issue block pointer authenticated finally raw send stream currently include dn_maxblkid sending metadnode normal dnodes needed order ensure correctly maintaining portable objset mac patch zero offending field computing mac ensures mac always calculated little endian order regardless host system byte order patch also register erratum old disk format detect adding version field newly created dsl crypto key allow datasets without version version mounted read easily migrated also include dn_maxblkid raw send stream ensure mac maintained correctly patch also contains minor bug fix cleanup reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed tom caputi tcaputi datto.com close 6845 close 6864 close 7052,,
2720,4c46b99d24a6e71b3c72462c11cb051d0930ad60,r. AndrÃ¡s Korn <korn-github.com@elan.rulez.org>, 2018-01-30 11:34:39 +0100,7096, tx_waited trace_dmu.h change missed reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed andrã korn korn github.com elan.rulez.org close 7096,,
2721,a73c94934f6176f63c3ec4c216a84066e9b65465,om Caputi <tcaputi@datto.com>, 2018-01-31 18:17:56 -0500,7108, change movaps movups aes code currently icp contains accelerated assembly code used specifically cpu aes enabled code make heavy use movaps instruction assumes provided aes key byte aligned assumption seems hold illumos linux kernel option slub_debug violate patch change instance instruction movups except handle unaligned memory patch also add flag accidentally never given assembly compiler resulting objtool warning reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed nathaniel lewis linux.robotdude gmail.com signed tom caputi tcaputi datto.com close 7065 close 7108,,
2722,f90a30ad1b32a971f62a540f8944e42f99b254ce,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-31 09:33:33 -0800,7098, fix txg_sync_thread hang scan_exec_io scn initialized possible hang condition variable scan_exec_io issue uncovered ztest possible deduplication enabled following call path txg_sync_thread spa_sync ddt_sync_table ddt_sync_entry    scan_exec_io cv_wait resolve issue always initializing reasonable minimum value value recalculated dsl_scan_sync pick change addition removal vdevs reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 7098,,
2723,1d8a71b603769214a73bc9720107c4bd97206bff,atthew Thode <mthode@mthode.org>, 2018-01-30 23:58:19 +0000,7089, remove pool without bootfs bootfs variable use method used zfs load key reviewed brian behlendorf behlendorf1 llnl.gov reviewed llewelyn trahaearn woefulderelict gmail.com signed matthew thode mthode mthode.org close 7089,,
2724,bee7e4ff12c7170671606bcea33a6eef6cad5d58,OLi <loli10K@users.noreply.github.com>, 2018-01-31 00:54:33 +0100,7088, fix zfs receive used used conjunction one zfs receive option none property requested set actually applied caused wrong assumption made toplevel dataset zfs_receive_one fix correctly detecting toplevel dataset reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 7088,,
2725,405ec516abbae42f205328ffc1bd7b38cbdd45da,under2015 <omfgbunder@gmail.com>, 2018-01-29 18:10:32 -0500,7093, fix zpool feature large_block inconsistency large_blocks feature activation consistent man page erroneously stated feature active recordsize increased past stock 128kb actually becomes active data written dataset reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 6275 close 7093,,
2726,63f88c12b41a9a51f5693efce408960664fdbe16,OLi <loli10K@users.noreply.github.com>, 2018-01-30 00:05:03 +0100,7087, fix style issue man page command help remove zfs snap zfs help message openzfs sync update zfs suggest snap used alias snapshot enforce column limit help message remove zfs module parameter expose kernel module parameter reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed loli10k ezomori.nozomu gmail.com close 7087,,
2727,5e021f56d3437d3523904652fe3cc23ea1f4cb70,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2018-01-29 10:24:52 -0800,6906, add dbuf hash dbuf cache kstats introduce kstats dbuf hash dbuf cache make easier inspect state help debugging understanding portion codebase correct format dbuf kstat file introduce dbc column dbufs kstat indicate dbuf dbuf cache introduce field filtering dbufstat python script introduce header option dbufstat python script introduce test case test basic mru mfu list movement arc reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6906,,
2728,0735ecb33485e91a78357a274e47c2782858d8b9,rakash Surya <prakash.surya@delphix.com>, 2018-01-08 13:45:53 -0800,7084, openzfs 8997 ztest assertion failure problem  dmu_tx_assign called possible either erestart eio returned erestart returned cause assertion fail directly code assumes return value eio dmu_tx_assign return non zero value occur spa suspended dmu_tx_assign called often occurs running zloop eio returned cause assertion fail elsewhere zil code example contains following logic lwb_t nlwb zilog lwb assert3s lwb lwb_state case dmu_tx_assign returned eio within lwb variable passed issued disk thus lwb_state field remain assertion fail assumes call lwb issued disk handle case true i.e handle case dmu_tx_assign return eio solution  change modifies dmu_tx_assign function txg_how bitmask rather txg_how_t enum type previous txg_waited semantics used via txg_nothrottle along specifying either txg_nowait txg_wait semantics previously txg_waited specified txg_nowait semantics automatically invoked ideal using txg_waited within leading problem described rather want achieve semantics txg_wait also preventing penalized via dirty delay throttling change acheive semtantics requires passing value txg_wait txg_nothrottle dmu_tx_assign consumer dmu_tx_assign wishing achieve old txg_waited semantics pas value txg_nowait txg_nothrottle authored prakash surya prakash.surya delphix.com approved robert mustacchi joyent.com reviewed matt ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org ported brian behlendorf behlendorf1 llnl.gov porting note additionally updated zfs_tmpfile use txg_nothrottle openzfs issue http www.illumos.org issue 8997 openzfs commit http github.com openzfs openzfs commit 19ea6cb0f9 close 7084,,
2729,522db29275b81c18c2bf53a95efa1aedeb13b428,hunwei Chen <tuxoko@gmail.com>, 2018-01-26 10:49:46 -0800,7077, zpool import specify device path know device pool looking sometime better directly pas device path zpool import instead letting search unrelated stuff might take lot time hundred disk patch allows option dev_path zpool import multiple pair dev_path zpool import search device example zpool import dev sda dev sdb reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen nutanix.com close 7077,,
2730,f55a8757a6be24c36c25e24ab5c30dcddf2ad954,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-26 09:55:16 -0800,7080, update fix several typo grammar reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed arno van wyk avw1987 signed brian behlendorf behlendorf1 llnl.gov close 7080,,
2731,cd0a89ded96d9cedbf20c70b533b616770ca4831,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-22 12:48:39 -0800,6999, extend zloop.sh automated testing order debug issue encountered ztest automated testing important much debugging information possible dumped time failure following change extend zloop.sh script order make easier integrate buildbot add maximum core option zloop.sh place limit number core dump generated default existing behavior maintained limit set add option create ztest.core.n symlink current directory core directory functionality provided primarily buildbot expects log file well known name rename ztest.ddt ztest.zdb extend dump additional basic information failure latter analysis reviewed tim chase tim chase2k.com reviewed thomas caputi tcaputi datto.com reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6999,,
2732,bb253625538824d8acae6ef62f5cdc7b1a525633,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-08 16:15:23 -0800,6999, prevent zdb occasionally hanging zdb command may terminate case pool get suspended caller zio_wait blocking outstanding read never complete turn cause ztest block indefinitely despite deadman resolve issue setting default failure mode zdb panic user space always want command terminate forward progress longer possible reviewed tim chase tim chase2k.com reviewed thomas caputi tcaputi datto.com reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6999,,
2733,8fb1ede146426e2217b35a254b4660e264854fa1,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-18 17:06:07 -0500,6999, extend deadman logic intent patch extend existing deadman code flexible enough used ztest production system proposed change include added new module option used dynamically control behavior deadman loosely modeled independant pool failmode property set wait continue panic wait wait hung default continue attempt recover hung panic panic system added new module option analogous except instead applying pool txg sync applies zio_wait default value 300s used define hung zio ztest deadman thread enabled default aligned upstream openzfs code extended terminate process take significantly longer complete expected option added ztest print internal debug log fatal error encountered option previously added zdb commit fa603f82 update zloop.sh unconditionally pas obtain additional debugging event previously posted deadman detect hung pool replaced new dedicated event proposed recovery logic attempt restart hung zio calling zio_interrupt outstanding leaf zios may want restrict zios either stage calling zio_interrupt expected useful case submitted physical device reasonable completion callback called lower layer possible observed may caused kernel driver bug default value reduced 1000 600s depending ztest fails may cache file move considered fatal collect log available carry add deadman test case spa_deadman zio_wait increase default reviewed tim chase tim chase2k.com reviewed thomas caputi tcaputi datto.com reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6999,,
2734,1b18c6d791d567499daa2c35467897d950a698e6,ndriy Gapon <avg@FreeBSD.org>, 2017-10-26 18:55:19 +0300,7079, openzfs 8731 assert3u nui64s uint16_max fails large block authored andriy gapon avg freebsd.org approved dan mcdonald danmcd joyent.com reviewed matthew ahrens mahrens delphix.com reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8731 openzfs commit http github.com openzfs openzfs commit 4c08500788 close 7079,,
2735,cf232b53d5deb8fba4665ce4fd039b444eb3201a,iuseppe Di Natale <dinatale2@llnl.gov>, 2018-01-24 16:19:55 -0800,7079, revert remove wrong assert annotate_ecksum reverts commit reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 7079,,
2736,23602fdb39e1254c669707ec9d2d0e6bcdbf1771,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-24 11:33:47 -0800,674, add cv_timedwait_io add missing helper function cv_timedwait_io used waiting specified timeout reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 674,,
2737,6bc4a2376c694f813d2ee78af3d749aa2684f391,llan Jude <allanjude@freebsd.org>, 2017-10-31 21:41:46 -0400,7063, openzfs 8972 zfs hold scripted mode pad column space authored allan jude allanjude freebsd.org approved dan mcdonald danmcd joyent.com reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8972 openzfs commit http github.com openzfs openzfs commit 3aace5c077 close 7063,,
2738,916384729e5d828e578c8f5c3003742360fb89ea,lexander Motin <mav@FreeBSD.org>, 2017-11-20 19:56:01 +0200,7062, openzfs 8835 speculative prefetch zfs working misaligned read case misaligned sequential request detected due overlap logical block sequence dmu_zfetch 27347 dmu_zfetch 27355 dmu_zfetch 27363 dmu_zfetch 27371 dmu_zfetch 27379 dmu_zfetch 27387 patch make single block overlap counted stream hit improving performance several time authored alexander motin mav freebsd.org approved gordon ross gwr nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed allan jude allanjude freebsd.org reviewed gvozden neskovic neskovic gmail.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8835 openzfs commit http github.com openzfs openzfs commit aab6dd482a close 7062,,
2739,31864e3d8c9fc762d4c30324d9a061f4ed009446,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-19 09:22:37 -0800,7061, openzfs 8652 tautological comparison zprop_inval usr src common sys zfs.h change zprop_inval zprop_cont macro enum value clang gcc prefer use unsigned ints store enums causing tautological comparison warning likely eliminating error handling code compile time whenever zfs_prop_t zpool_prop_t compared zprop_inval zprop_cont making error flag explicity enum value force enum type signed zprop_inval also compared two different enum type change name whenever compared zpool_prop_t still place zprop_inval zprop_cont compared plain int code know whether int storing zfs_prop_t zpool_prop_t usr src common zfs spa.c zprop_inval authored alan somers asomers gmail.com approved gordon ross gwr nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8652 openzfs commit http github.com openzfs openzfs commit c2de80dc74 close 7061,,
2740,1574c73bd0680cf3141e26627191120daba3fe8d,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-19 09:20:58 -0800,7060, openzfs 8641 zpool clear zinject work spare replacing vdevs add spare replacing list interior vdev type alongside existing mirror raidz fix running zinject zpool clear spare replacing vdevs authored alan somers asomers gmail.com reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru approved gordon ross gwr nexenta.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8641 openzfs commit http github.com openzfs openzfs commit 9a36801382 close 7060,,
2741,7da8f8d81bf1fadc2d9dff10f0435fe601e919fa,atthew Thode <mthode@mthode.org>, 2018-01-18 18:20:34 +0000,7004, run zfs load key needed dracut zfs load key called needed dataset needed boot doe key loaded home directory example boot still continue zfs auto working via dracut still need generator script thing reviewed richard yao ryao gentoo.org reviewed manuel amador rudd rudd rudd o.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed matthew thode mthode mthode.org close 6982 close 7004,,
2742,79c3270476b7140220c7946dd0a709a31bb9ed1b,OLi <loli10K@users.noreply.github.com>, 2018-01-18 19:15:41 +0100,7058, fix debian packaging armv7 arm64 building package debian based system specify target architecture used alien convert .rpm package .deb avoids detecting incorrect value result following error package .aarch64.rpm architecture aarch64 package built system package .armv7l.rpm architecture armel package built system reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 7046 close 7058,,
2743,fb79036f288ea60b59d21fe250bc17445cf69f37,OLi <loli10K@users.noreply.github.com>, 2018-01-18 19:14:18 +0100,678, fix debian packaging armv7 arm64 building package debian based system specify target architecture used alien convert .rpm package .deb avoids detecting incorrect value result following error package .aarch64.rpm architecture aarch64 package built system package .armv7l.rpm architecture armel package built system reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close zfsonlinux zfs 7046 close 678,,
2744,51d1b58ef3467c3a9711c65458f93063dd17354f,ohn L. Hammond <35266395+jhammond-intel@users.noreply.github.com>, 2018-01-17 14:24:42 -0600,7048, emit error message mmp suspends pool mmp_thread emit mmp specific error message calling zio_suspend administrator understand pool suspended reviewed olaf faaland faaland1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed john hammond john.hammond intel.com close 7048,,
2745,43cb30b3ce6ee3c3041276c93594ae61e7daaf86,ean Eric Fagan <sef@ixsystems.com>, 2017-11-06 15:13:23 -0800,7049, openzfs 8959 add notification scrub paused resumed authored sean eric fagan sef ixsystems.com reviewed alek pinchuk pinchuk.alek gmail.com reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov approved gordon ross gwr nexenta.com ported giuseppe natale dinatale2 llnl.gov porting note brought defines eventdefs.h line zfs linux format updated zfs events.5 new event openzfs issue http www.illumos.org issue 8959 openzfs commit http github.com openzfs openzfs commit c862b93eea close 7049,,
2746,3da3488e6339ff2dc5c7f3da8c8a0c552d018d68,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-17 10:17:16 -0800,7040, fix shellcheck v0.4.6 warning resolve new warning reported upgrading shellcheck version 0.4.6. patch contains functional change egrep non standard deprecated use grep instead sc2196 check exit code directly e.g mycmd indirectly sc2181 suppressed reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 7040,,
2747,d658b2caa95726c13d99123874910cdedc7ce866,eHackEd <DeHackEd@users.noreply.github.com>, 2018-01-16 13:18:08 -0500,7043, remove zfs module parameter parameter removed d3c2ae1c0806 openzfs 6950 arc cache compressed data reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 7043,,
2748,c10cdcb55f81ea773486161b31bc91bb7b58b4c8,atthew Thode <mthode@mthode.org>, 2018-01-12 17:39:36 +0000,7037, fix copy builtin work asan patch commit fed90353 fully update copy builtin script needed perform kernel build add missing option flag reviewed brian behlendorf behlendorf1 llnl.gov signed matthew thode mthode mthode.org close 7033 close 7037,,
2749,e1a0850c3570ae53df5779bc656f17b98b86f160,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-12 09:36:26 -0800,7036, force ztest always use dev urandom ztest solely testing using pseudo random entirely reasonable using dev urandom ensures system entropy pool get depleted thus stalling testing particular problem testing vms reviewed tim chase tim chase2k.com reviewed thomas caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 7017 close 7036,,
2750,6df9f8ebd73c05da627144bcc3823e6fe980cd75,uri Pankov <yuri.pankov@nexenta.com>, 2017-12-06 08:19:31 +0300,7032, openzfs 8899 zpool list property documentation match actual behaviour authored yuri pankov yuri.pankov nexenta.com reviewed alexander pyhalov alp rsu.ru reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8899 openzfs commit http github.com openzfs openzfs commit b0e142e57d close 7032,,
2751,bcb1a8a25e4ee9a94478378710de53b45a9b1517,uri Pankov <yuri.pankov@nexenta.com>, 2017-12-06 08:19:31 +0300,7031, openzfs 8898 creating checksum skein boot pool fails ungracefully authored yuri pankov yuri.pankov nexenta.com reviewed toomas soome tsoome me.com reviewed andy stormont astormont reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8898 openzfs commit http github.com openzfs openzfs commit 9fa2266d9a close 7031,,
2752,8198c57b21d5e503f7e72221aa714aaabb2079cc,uri Pankov <yuri.pankov@nexenta.com>, 2017-12-11 10:11:25 +0300,7030, openzfs 8897 zpool online fails assertion run non leaf vdevs authored yuri pankov yuri.pankov nexenta.com reviewed toomas soome tsoome me.com reviewed igor kozhukhov igor dilos.org reviewed george melikov mail gmelikov.ru approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8897 openzfs commit http github.com openzfs openzfs commit 9a551dd645 close 7030,,
2753,6a2185660d000c99b14556c7eb1108c5609faf41,ndriy Gapon <avg@FreeBSD.org>, 2017-09-12 16:35:48 +0300,7029, openzfs 8930 zfs_zinactive remove node filesystem readonly authored andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru approved gordon ross gwr nexenta.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8930 openzfs commit http github.com openzfs openzfs commit 93c618e0f4 close 7029,,
2754,fed90353d799acbc5e81b0dfadc6d649b0f2e8b5,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-10 10:49:27 -0800,7027, support fsanitize address enable asan enable asan provided configure build user space component fsanitize address kernel support use linux kasan feature instead http github.com google sanitizers wiki using gcc version 4.8 test case intentionally generates core dump fail using enable asan default behavior disable core dump newer version allow behavior controled run time asan_options environment variable additionally patch includes build system cleanup rules.am updated set minimum am_cflags am_cppflags am_ldflags additional flag added per makefile basic enable debug enable asan option apply user space binary library compiler check consolidated always compiler options.m4 renamed consistency fstack check compiler flag removed functionality provided asan configured enable asan split debug_cflags debug_cflags debug_cppflags debug_ldflags moved default kernel build flag module makefile.in split flag set standard ccflags kbuild mechanism wframe larger check applied binary library include source file built user space kernel space restriction relaxed user space utility wno unused set variable applied libzfs libzpool remaining warning result assert using variable always declared d__extensions__ dropped solaris specific thus needed ensure gdb defined gdb default zloop.sh signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 7027,,
2755,7e7f5132779a04da0070cf6e6ffd8e9b5f7692de,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-10 10:41:30 -0800,7028, disable history_004_pos occasionally observed failure history_004_pos due test case 100 reliable order prevent false positive disable test case made reliable reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 7026 close 7028,,
2756,1d53657bf561564162e2ad6449f80fa0140f1dd6,ichard Yao <ryao@gentoo.org>, 2018-01-09 19:18:19 -0500,7021, fix incompatibility reiser4 patched kernel zfsonlinux source build system self contained need make change linux kernel source reiser4 hand exists solely kernel tree patch opts make change kernel rather adapt linux 4.1 made vfs change replaced new_sync_read do_sync_read reiser4 maintainer decided modify kernel vfs export old function caused autotools check misidentify kernel api predating linux 4.1 kernel patched reiser4 support break build reiser4 really patched stop let modify check strict help affected user filesystems also checking type argument return value new_sync_read new_sync_write let fix reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed richard yao ryao gentoo.org close 6241 close 7021,,
2757,3910184d9ecf187f5f229798bab688d754fa1e30,lex Zhuravlev <alexey.zhuravlev@intel.com>, 2018-01-08 10:57:47 -0800,7019, use zap_count instead cached z_size unlink performance optimization lustre doe strictly update sa_zpl_size adding removing non directory entry result entry removed zpl layer even though zap empty safe remove resolve issue checking zap_count directly instead relying cached sa_zpl_size micro benchmark show significant performance impact due additional overhead using zap_count reviewed olaf faaland faaland1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed alex zhuravlev intel.com signed brian behlendorf behlendorf1 llnl.gov close 7019,,
2758,cba6fc61a2898395c47380a0c2303f19842a2ff0,athaniel Wesley Filardo <VP331RHQ115POU58JFRLKB7OPA0L18E3@cmx.ietfng.org>, 2018-01-09 17:46:52 -0500,7023, revert raidz_map _col structure type part refactoring several uint64_t uint8_t changed type caused zol github issue 6981 overflow size_t bit arm machine absense strong motivation type change simply put back modulo change accumulated abd compile tested amd64 run tested armhf reviewed brian behlendorf behlendorf1 llnl.gov reviewed gvozden neskovic neskovic gmail.com signed nathaniel wesley filardo nwf cs.jhu.edu close 6981 close 7023,,
2759,bfe27ace0de64838d50ff351396423a481de6c84,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-07 17:12:40 -0500,6941, fix unused variable warning resolved unused variable warning observed restricting wno unused set variable libzfs libzpool reviewed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 6941,,
2760,06401e42221d2f5130065caf70f8276ba4d19acd,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-06 18:30:15 -0500,6941, fix test case must held order safely verify unused bonus space reviewed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 6941,,
2761,460f239e6999195dbcf9b8443c029f07765b21e9,HE <git@dehacked.net>, 2017-11-18 18:21:09 -0500,6941, fix fsanitize address memory leak kmem_alloc ... userspace return leakable pointer reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net issue 6941,,
2762,be54a13c3e7db423ffdb3f7983d4dd1141cc94a0,eorge Amanakis <g_amanakis@yahoo.com>, 2018-01-09 14:51:11 -0500,7018, fix percentage styling zfs module parameters.5 replace percent add bold default value reviewed bunder2015 omfgbunder gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed george amanakis gamanakis gmail.com close 7018,,
2763,b02becaa00aef3d25b30588bf49affbf1e9a84a4,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-09 11:15:55 -0800,7025, reduce codecov comment attempt reduce number comment posted codecov request based codecov documenation setting require_changes yes behavior result single comment circumstance http docs.codecov.io v4.3.6 doc pull request comment signed brian behlendorf behlendorf1 llnl.gov issue 7022 close 7025,,
2764,8b20a9f996b90abe439ce14303fc440f26390e38,athaniel Wesley Filardo <VP331RHQ115POU58JFRLKB7OPA0L18E3@cmx.ietfng.org>, 2018-01-09 14:14:45 -0500,7016, zhack fix getopt return type fix zhack command processing arm arm char unsigned promotion int never compare equal reviewed brian behlendorf behlendorf1 llnl.gov signed nathaniel wesley filardo nwf cs.jhu.edu close 7016,,
2765,0873bb6337452e3e028e40f5dad945b30deab185,rian Behlendorf <behlendorf1@llnl.gov>, 2018-01-08 09:52:36 -0800,6989, fix arc hit rate compressed arc feature added commit d3c2ae1 method reference counting arc modified part accounting change arc_buf_add_ref function removed entirely would fine arc_buf_add_ref function served second undocumented purpose updating arc access information taking hold dbuf without logic place cached dbuf would migrate associated arc_buf_hdr_t mfu list would negatively impact arc hit rate particularly system small arc change reinstates missing call arc_access dbuf_hold implementing new arc_buf_access function reviewed giuseppe natale dinatale2 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed tim chase tim chase2k.com reviewed george wilson george.wilson delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6171 close 6852 close 6989,,
2766,390d679acdfa6a2498280a4dcd33b7600ace27ce,OLi <loli10K@users.noreply.github.com>, 2017-12-28 19:15:32 +0100,6996, fix zpool add handling nested interior vdevs replacing faulted device previously handled spare multiple level nested interior vdevs present pool configuration following example illustrates one possible situation name state read write cksum testpool degraded raidz1 degraded spare degraded replacing degraded var tmp fault dev unavail open var tmp replace dev online var tmp spare dev1 online var tmp safe dev online spare var tmp spare dev1 inuse currently use safe allowed get_replication need handle situation gracefully let zpool add new device pool reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6678 close 6996,,
2767,2fe61a7ecc507d031451c21b3077fae549b58ec3,rakash Surya <prakash.surya@delphix.com>, 2017-12-07 11:26:32 -0800,6940, openzfs 8909 8585 cause use free kernel panic authored prakash surya prakash.surya delphix.com reviewed john kennedy jwk404 gmail.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed brad lewis brad.lewis delphix.com reviewed igor kozhukhov igor dilos.org reviewed brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com ported prakash surya prakash.surya delphix.com problem  race condition exists zil_free_lwb race either  example panic due bug status debugging crash dump vmcore.0 bit 110 205 operating system 5.11 dlpx 5.2.2.0_2017 32b6ba51fb i86pc image uuid 4af0edfb e58e 6ed8 cafc d3e9167c7513 panic message bad trap type page fault addr occurred module zfs due null pointer dereference dump content kernel page  zio_shrink 0x12 0x30d 0xa2 0xf3 zil_commit 0x80 9a9 zfs_write 0xc34 fop_write 0x5b write 0x250 2000 sys_syscall 0x177 outstanding lwb waiting timeout waiting waiter must sure call zil_free_lwb end calling zil_free_lwb lwb may freed result use free situation stale lwb pointer stored structure thread waiting waiter used similar situation occur lwb issued disk thus state zil_free_lwb called disk servicing lwb situation lwb freed zil_free_lwb result use free situation lwb zio completes called race condition prevented zil_close calling zil_commit zil_free_lwb called ensure outstanding i.e lwb lwb_state_open state reach lwb_state_done state lwb freed zil_commit return untill lwb lwb_state_done race condition prevented zil_sync calling zil_free_lwb lwb lwb_buf pointer set lwb lwb_state_done state non null value pointer pointer cleared point lwb state changed lwb_state_done race present zil_suspend leading bug first glance would appear though would true zil_suspend call zil_commit like zil_close problem zil_suspend set zilog zl_suspend field prior calling zil_commit zil_commit zl_suspend set zil_commit take special branch logic use txg_wait_synced instead performing normal zil_commit logic call txg_wait_synced might good enough data reach disk safely return doe ensure outstanding lwb reach lwb_state_done state return lwb stuck waiting lwb timeout maintain non null value lwb_buf field thus zil_sync free lwb thus even though lwb data already disk lwb left lingering waiting eventually timeout issued disk even though write unnecessary zil_commit called zil_suspend incorrectly assume outstanding lwb proceed free lwb found zilog lwb list result free lwb later used solution  solution ensure outstanding lwb complete calling zil_free_lwb via zil_destroy zil_suspend patch accomplishes goal forcing normal zil_commit logic called zil_sync zil_suspend call zil_commit_impl always use normal logic waiting issuing lwb disk return result lwb outstanding zil_commit_impl called guaranteed reach lwb_state_done state time return new lwb created via zil_commit since zilog zl_suspend flag set force new caller zil_commit use txg_wait_synced instead creating issuing new lwb thus lwb left zilog lwb list zil_destroy called lwb_state_done state avoid race condition openzfs issue http www.illumos.org issue 8909 openzfs commit http github.com openzfs openzfs commit ece62b6f8d close 6940,,
2768,823d48bfb182137c53b9432498f1f0564eaa8bfc,idongyang <gnaygnodil@gmail.com>, 2017-12-23 05:19:51 +1100,6986, call commit callback tail list zfs backed lustre mdt soft lockup heavy metadata workload handling transaction callback osd_zfs problem zfs taking advantage fast path lustre trans callback handling lustre skip call already saw higher transaction number patch corrects also positive impact metadata performance lustre osd_zfs plus cleanup header similar issue ext4 ldiskfs described http browse 6527 reviewed olaf faaland faaland1 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed dongyang dongyang.li anu.edu.au close 6986,,
2769,44b61ea506212c287333e03d2cf8933216810800,om Caputi <tcaputi@datto.com>, 2017-12-22 13:17:48 -0500,6990, remove empty file accidentally added a8b2e306 patch simply remove empty file accidentally added part scrub priority patch reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed tom caputi tcaputi datto.com close 6990,,
2770,c9821f1ccc647dfbd506f381b736c664d862d126,ony Hutter <hutter2@llnl.gov>, 2017-12-21 10:56:32 -0800,671, linux 4.15 compat timer update use timer_setup macro new timeout function definition reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 670 close 671,,
2771,a8b2e30685c9214ccfd0181977540e080340df4e,om Caputi <tcaputi@datto.com>, 2017-12-21 12:13:06 -0500,6926, support prioritizing asynchronous prefetches sequential scrub merged call arc_read including prefetch given unfortunately behaves badly existing issue prefetch prioritized issue result synchronous read end vdev_queue scrub workload multiple second latency patch incorporates change first ensures scrub given allow vdev_queue code differentiate user prefetches second patch introduces provide missing capability upgrade zio priority reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6921 close 6926,,
2772,993669a7bf17a26843630c547999be0b27483497,imon Guest <simon.guest@tesujimath.org>, 2017-12-21 06:42:07 +1300,6956, vdev_id new slot type extends vdev_id support new slot type scsi enclosure service slot type disk slot number determined using device slot number reported sg_ses device matching address found querying available enclosure primarily use system deficient driver omitting support bay_identifier sys device testing found existing slot type port stable across disk replacement alternative required reviewed brian behlendorf behlendorf1 llnl.gov signed simon guest simon.guest tesujimath.org close 6956,,
2773,89a66a0457cd392ab8c6ad6d9c138fedaa425067,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-12-19 13:19:24 -0800,6969, handle broken pipe arc_summary using command similar arc_summary.py head cause broken pipe exception gracefully exit case broken pipe arc_summary.py reviewed richard elling richard.elling reviewed loli10k ezomori.nozomu gmail.com signed giuseppe natale dinatale2 llnl.gov close 6965 close 6969,,
2774,c4ba46deade0a14d089228a56a5d0aa0ffd5fadd,OLi <loli10K@users.noreply.github.com>, 2017-12-19 22:02:40 +0100,6983, handle invalid option arc_summary invalid option provided arc_summary.py handle error thrown getopt python module print usage help message reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6983,,
2775,2e7c1bb35a9858eff93feaf9132d3d89e756f6e0,ominik Hassler <hadfl@omniosce.org>, 2017-11-09 15:22:07 +0100,6973, openzfs 8794 cstyle generates warning recent perl authored dominik hassler hadfl omniosce.org reviewed andy fiddaman andy omniosce.org reviewed igor kozhukhov igor dilos.org reviewed toomas soome tsoome me.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8794 openzfs commit http github.com openzfs openzfs commit 578f67364c close 6973,,
2776,c30e34faa12e4b6e190edcccd4b2db185a286680,OLi <loli10K@users.noreply.github.com>, 2017-12-19 19:49:33 +0100,6977, zts fix create o_ashift test case function fill uberblock ring buffer every device label reworked avoid occasional failure caused race condition prevents zpool sync writing uberblock sequentially happens pool sync ioctl dispatch code call txg_wait_synced already waiting txg sync reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6924 close 6977,,
2777,bbffb59efc49baba1d131d497202e8cda0068c3d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-18 10:28:27 -0800,6971, fix multihost stale cache file import multihost property enabled impossible import active pool even using force option patch prevents forced import succeeding importing stale cache file root cause problem kernel module trusted hostid provided configuration always correct configuration generated scanning pool however using existing cache file hostid could stale would result activity check skipped resolve issue always using hostid read label configuration best uberblock found reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6933 close 6971,,
2778,e2d936e0f893084384a0d29ddf2edfd9f68deaf2,OLi <loli10K@users.noreply.github.com>, 2017-12-17 23:14:07 +0100,6962, honor mounthelperdir applicable reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6962,,
2779,ee410eefc2a9c0f0e77bd765894ee7767af647ea,OLi <loli10K@users.noreply.github.com>, 2017-12-17 23:08:48 +0100,6963, fix systemd debian based distribution 6963 change propagate systemd configure option rpm spec file allowing debian based distribution package systemd related file signed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6591 close 6963,,
2780,516c09d0d59585157e0804649aac7a675515fa7c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-17 14:02:29 -0800,6972, remove lib libspl include sys frame.h functionality provided header required zfs user space code minimal functionality provided commit c28a677 added include sys frame.h reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6960 close 6972,,
2781,f6940bb9ea1ad6905101ba143859983189d32ac5,avid Qian <david.qian@intel.com>, 2017-12-07 16:43:13 +0800,6932, enable qat support zfs dkm rpm enable qat accelerated gzip compression zfs dkm rpm package environment variant icp_root set qat drive source code folder qat hardware presence otherwise use default gzip compression reviewed george melikov mail gmelikov.ru reviewed david qian david.qian intel.com signed brian behlendorf behlendorf1 llnl.gov close 6932,,
2782,9920950ccbe032507663f5879721a80f14a83627,alufu <Lalufu@users.noreply.github.com>, 2017-12-14 02:09:22 +0100,6955, add zfs import.target service spec file add missing zfs import.target list systemd service zfs rpm spec file reviewed niklas wagner skaro skaronator.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ralf ertzinger ralf skytale.net issue 6953 close 6955,,
2783,4e9b156960562373e005798575a3fbc6d66e32ff,OLi <loli10K@users.noreply.github.com>, 2017-12-09 01:58:41 +0100,6858, various zed fix teach zed handle spare usingi configured ashift zpool ashift property set zed use value kicking hotspare change 512e disk used spare vdevs created ashift even zfs natively detects block device introduce additional auto_spare test case verifies face multiple device failure appropiate number spare kicked fix zed_stop libtest.shlib correctly wait target pid fix zed crashing startup caused race condition libzfs used multi threaded context convert zed using tpool library already present illumos fma code reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 2562 close 6858,,
2784,3ab3166347b84c6004002f9a6d06f7a87fe1cd4a,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-07 16:43:59 -0800,6936, disable occasionally observed failure due test case 100 reliable order prevent false positive disable test case made reliable reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 6935 close 6936,,
2785,c28a67733c68b5540968136a7aca9633146afaf9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-07 10:28:50 -0800,6928, suppress incorrect objtool warning suppress incorrect warning version objtool aware x86 evex prefix instruction used avx512 module zfs warning objtool func offset find jump dest instruction .text reviewed brady don.brady delphix.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6928,,
2786,674b89342e43bd83659285d730b5b6a98f8b4b48,ony Hutter <hutter2@llnl.gov>, 2017-12-06 11:43:07 -0800,6872, fix segfault zpool iostat adding vdevs fix segfault running zpool iostat adding vdev reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6748 close 6872,,
2787,1b2b0acab54ad4320e9fab9f46612fdb2a71cf87,rakash Surya <prakash.surya@delphix.com>, 2017-09-01 11:04:26 -0700,6927, openzfs 8603 rename zilog zl_writer_lock zl_issuer_lock purely cosmetic change zilog zl_writer_lock field renamed zl_issuer_lock try make code easier understand change made authored prakash surya prakash.surya delphix.com reviewed fraire cfraire me.com approved dan mcdonald danmcd joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8603 openzfs commit http github.com openzfs openzfs commit 2daf06546b close 6927,,
2788,0c415a93d286ced3c552b671228e7d5d6c49d472,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-06 10:13:54 -0800,6925, disable create o_ashift occasionally observed failure create o_ashift due test case 100 reliable order prevent false positive disable test case made reliable reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 6924 close 6925,,
2789,1ce23dcaff6c3d777cb0d9a4a2cf02b43f777d78,rakash Surya <prakash.surya@delphix.com>, 2017-12-05 09:39:16 -0800,6566, openzfs 8585 improve batching done zil_commit authored prakash surya prakash.surya delphix.com reviewed brad lewis brad.lewis delphix.com reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd joyent.com ported prakash surya prakash.surya delphix.com problem  current implementation zil_commit introduce significant latency beyond inherent due latency underlying storage additional latency come two main problem outstanding zil block written i.e already writer thread progress new call zil_commit block waiting currently oustanding zil block complete block written writer thread coined batch ever single batch written time batch written new zil transaction wait next batch written occur current batch finish result underlying storage may used efficiently possible new thread enter zil_commit blocked waiting next batch possible underlying storage fully utilized current batch zil block case better allow new thread generate issue new zil block could serviced underlying storage concurrently zil block serviced call zil_commit must wait zil block batch complete prior zil_commit returning size given batch proportional number zil transaction queue time batch start processing queue occur previous batch completes thus lot transaction queue batch could composed many zil block call zil_commit wait writes complete even thread calling zil_commit cared one transaction batch complicate situation two issue result following side effect given batch take longer complete normal result larger batch size take longer complete drive latency zil_commit occur number reason including limited transient change workload storage latency irregularites solution  solution attempted change following goal disk change maintain current disk format modify batch size equal zil block size allow new batch generated issued disk already batch serviced disk allow zil_commit wait zil block possible use zil block possible amount zil transaction without introducing significant latency individual zil transaction i.e use fewer larger zil block theory goal met new allgorithm allow following improvement new zil block generated issued already oustanding zil block serviced storage latency zil_commit proportional underlying storage latency rather incoming synchronous workload porting note  due change made commit 119a394ab0 lifetime itx structure differs openzfs specifically itx structure kept around data associated itx considered safe disk itx callback called data committed stable storage since openzfs itx callback mechanism able destroy itx structure immediately itx committed lwb lwb written disk support difference ensure itx callback still called itx data disk change made list itxs added lwb structure list contains itxs committed lwb callback itxs called data itxs committed disk list itxs added stack function nolwb_itxs list circumstance itx may committed lwb e.g allocating next zil block disk fails list used keep track itxs fall state callback called zil writer pipeline stalled logic actually call itx callback moved zil_itx_destroy function since consumer zil_itx_destroy effectively performing logic i.e callback non null call callback seemed like useful code cleanup consolidate logic single function additionally existing linux tracepoint infrastructure dealing zil probe structure updated reflect code change specifically zil__cw1 zil__cw2 probe removed removed trace_zil.h well zilog structure field removed affected tracepoint definition structure new tracepoints added following new probe    openzfs issue http www.illumos.org issue 8585 openzfs commit http github.com openzfs openzfs commit 5d95a3a close 6566,,
2790,7b3407003fde9eb78ea8ce5ce9165cef7e4795f3,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-04 11:55:57 -0800,6910, fix nfs sticky bit permission denied error originally adapted linux typo made altered intended behavior described block comment intended behavior permission granted entry regular file write access s_isreg used instead s_isdir restricting permission regular file made good sense older system setting bit executable file would instruct system save program text segment swap device modern system behavior replaced sticky bit acting restricted deletion flag plain file restriction relaxed reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6889 close 6910,,
2791,9717fe052b6b7a43e497974817e392dffd8b939b,KDingwall <james@dingwall.me.uk>, 2017-12-04 19:53:57 +0000,6913, add usr bin env copy_exec_list initramfs hook 5dc1ff29 changed user space program mount zfs snapshot bin usr bin env executable present initramfs snapshot automounted reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com reviewed giuseppe natale dinatale2 llnl.gov signed james dingwall james.dingwall zynstra.com close 5360 close 6913,,
2792,ea39f75f64ff72e30900a36e00632f180f5f6676,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-04 11:50:35 -0800,6911, fix zpool create add replication level check pool configuration contains hole due previous device removal ignore top level vdev failure result current configuration assessed non uniform replication level expected warning disabled test case extended cover scenario reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6907 close 6911,,
2793,72841b9fd957a392bb621393685b06dc042d4523,rian Behlendorf <behlendorf1@llnl.gov>, 2017-12-04 11:44:39 -0800,6912, preserve itx alloc size using allocate itx may unsafe itx field constant allocation free using different itx size result allocation returned wrong kmem cache issue avoided entirely storing allocation size itx itx_size using reviewed prakash surya prakash.surya delphix.com signed brian behlendorf behlendorf1 llnl.gov close 6912,,
2794,d4677269f286005768ae1a0fcd3389aa6015c4c7,om Caputi <tcaputi@datto.com>, 2017-11-30 12:40:13 -0500,6909, unbreak scan status abi d4a72f23 merged pss_pass_issued incorrectly added middle structure instead end patch simply corrects issue reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tom caputi tcaputi datto.com close 6909,,
2795,ed15d544812eb720d2fbec55d27e749d7a805bf6,OLi <loli10K@users.noreply.github.com>, 2017-11-29 20:59:22 +0100,6908, fix zfs get user group objused functionality fix regression accidentally introduced 1b81ab4 prevents zfs get user group objused correctly reporting requested value update verify functionality reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6908,,
2796,56d8d8ace4724bde16145be25b75d8f551961813,ark Wright <markwright@internode.on.net>, 2017-11-29 10:33:48 +1100,6903, linux 4.14 compat fix build error gcc 7.2.0 gentoo kernel 4.14 built module nvpair nvpair.c 2810 error positional initialization field struct declared designated_init attribute werror designated init   reviewed brian behlendorf behlendorf1 llnl.gov signed mark wright gienah gentoo.org close 5390 close 6903,,
2797,48ac22d8559313b2a33a80b9690aeea9acb9976c,ichard Laager <rlaager@wiktel.com>, 2017-11-23 23:08:02 -0600,6897, initramfs honor canmount initramfs script honoring canmount change doe administrator asked filesystem mounted honored exception initramfs script ignores canmount rootfs rootfs canmount set either however mounting anyway seems harmless asked explicitly point exception avoid risk breaking existing system case someone canmount set rootfs initramfs still mount filesystems canmount noauto necessary typical set rootfs cloned without canmount noauto clone duplicate mountpoints would conflict remainder fix http github.com zfsonlinux pkg zfs issue 221 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard laager rlaager wiktel.com close 6897,,
2798,bd2958dea02f1126c4e907ab55c385ef24431f15,ichard Laager <rlaager@wiktel.com>, 2017-11-23 21:54:48 -0600,6897, initramfs honor mountpoint none legacy filesystems child rootfs mountpoint none mountpoint legacy initrafms script would assume mountpoint based dataset path given rootfs mountpoint mountpoint inheritance default behavior zfs behavior seems unnecessary event turn mountpoint none remove option administrator someone doe work expected worse yet mountpoint directory doe exist typical case mountpoint none mounting thus boot process fail case mountpoint legacy assumed mountpoint may correct value set etc fstab change make initramfs script mount filesystem either case mountpoint none mean correctly honoring setting mountpoint legacy two scenario canmount filesystem mounted normal mechanism later boot process canmount noauto filesystem mounted unless administrator done something special something special want mounted initramfs simply set mountpoint legacy part fix http github.com zfsonlinux pkg zfs issue 221 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard laager rlaager wiktel.com close 6897,,
2799,1c68856bcaad053bb21acdde4ca952b764edd664,eHackEd <DeHackEd@users.noreply.github.com>, 2017-11-28 12:10:52 -0500,6894, zpool fix zpool import reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed dhe git dehacked.net close 6894,,
2800,94183a9d8a1133ff0d29666a86f84c24f2c4083c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-18 14:08:00 -0800,6879, update cppcheck v1.80 resolve new warning error cppcheck v1.80 lib libshare libshare.c 543 warning possible null pointer dereference protocol lib libzfs 2323 warning possible null pointer dereference srctype lib libzfs libzfs_import.c 318 error uninitialized variable link module zfs abd.c 353 error uninitialized variable module zfs abd.c 353 error uninitialized variable module zfs abd.c 385 error uninitialized variable module zfs abd.c 385 error uninitialized variable module zfs abd.c 553 error uninitialized variable module zfs abd.c 553 error uninitialized variable module zfs abd.c 763 error uninitialized variable module zfs abd.c 763 error uninitialized variable module zfs abd.c 305 error uninitialized variable tmp_page module zfs zpl_xattr.c 342 warning possible null pointer dereference value module zfs zvol.c 208 error uninitialized variable convert following suppression inline module zfs zfs_vnops.c 840 error possible null pointer dereference aiov exclude have_dnlc analysis since macro never defined functionality implemented reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6879,,
2801,8d187769736688044c3c58a6a56069a54210a656,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-18 23:07:04 +0100,6883, fix data evict_skips arc_summary.py display correct data kstat arcstats evict_skips currently repeating data mutex_misses fix 6882 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6882 close 6883,,
2802,da5d4697a84f0baf7d8fb9dbdf2e1312a370c075,eHackEd <DeHackEd@users.noreply.github.com>, 2017-11-17 18:11:39 -0500,6877, fix arc pointer overrun access b_crypt_hdr field arc header content encrypted reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed dhe git dehacked.net close 6877,,
2803,d4a72f23863382bdf6d0ae33196f5b5decbc48fd,om Caputi <tcaputi@datto.com>, 2017-11-15 20:27:01 -0500,6256, sequential scrub resilvers currently scrub resilvers take extremely long time complete largely due fact zfs scan process pool logical order determined block bookmark make sense simplicity perspective block zfs often scattered randomly across disk particularly due zfs copy write mechanism patch improves performance splitting scrub resilvers metadata scanning phase issuing phase metadata scan read structure pool gather memory queue sorted size offset disk issuing phase issue scrub sequentially possible greatly improving performance patch also update clean scan code updated several year reviewed brian behlendorf behlendorf1 llnl.gov authored saso kiselkov saso.kiselkov nexenta.com authored alek pinchuk apinchuk datto.com authored tom caputi tcaputi datto.com signed tom caputi tcaputi datto.com close 3625 close 6256,,
2804,ed19bccfb651843fa208232b3a2d3d22a4152bc8,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-15 17:19:23 -0800,667, linux 4.14 compat vfs_read vfs_write kernel_read kernel_write function always wrapped vfs_read vfs_write function respectively however could used vn_rdwr since offset passed pointer prevented able properly update file offset linux 4.14 unexported vfs_read vfs_write also changed signature kernel_read kernel_write provide needed functionality use updated function available reviewed pritam baral pritam pritambaral.com signed brian behlendorf behlendorf1 llnl.gov close 656 close 667,,
2805,e301113c17673a290098850830cf2e6d1a1fcbe3,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-15 19:28:11 +0100,6869, minor code cleanup arc_python.py remove unused library associated variable kstat_pobj add note documentation start program required support old version python change variable format built function fmt reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6869,,
2806,454365bbaacc153f98d2a3adaf33b13a6183d45d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-15 10:19:32 -0800,6867, fix dirty check dmu_offset_next correct way determine dnode dirty check dn_dirty_link active relying solely dn_dirtyctx result dnode mistakenly reported clean reviewed chunwei chen tuxoko gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 3125 close 6867,,
2807,13589da974e4e808b16d7dd280744277bb8d079b,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-15 09:12:52 -0800,6868, disable automatic dependency zfs test package zts test script specify bin ksh interpreter unfortunately fedora usr bin ksh provided package manager rather change script accommodate latest fedora disable automatic dependency zfs test package functionally cause problem since bin symlink usr bin reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6868,,
2808,71788d91f432e3b633fa26375ec13265882c9e3f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-13 16:26:15 -0800,6862, disable bit system occasionally observed failure due test case taking long complete disable test case improved reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5848 close 6862,,
2809,99834d1950f654d08585b61a1b0b4458d3d9e100,OLi <loli10K@users.noreply.github.com>, 2017-11-13 18:24:26 +0100,6819, fix truncate mtime ctime handling linux ftruncate always change file timestamps even file size changed however case successfull truncate timestamps updated file size change translates vfs calling zfs posix layer setattr function zpl_setattr attr_mtime attr_ctime unconditionally set iattr mask ftruncate truncate left filesystem implementation dealt behaviour consistent posix 2004 susv3 specification explicit requirement file size change update timestamps ftruncate http onlinepubs 009695399 function truncate.html http onlinepubs 009695399 function ftruncate.html later updated posix 2008 susv4 truncate ftruncate mention size change requirement http view.php 489 http onlinepubs 9699919799 function truncate.html http onlinepubs 9699919799 function ftruncate.html unfortunately linux vfs still calling zpl without attr_mtime attr_ctime set truncate case fix explicitly updating timestamps detecting attr_size bit always set do_truncate iattr mask reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6811 close 6819,,
2810,13042a6ccdf3450a758511c4b64e800a371bb891,eorge Melikov <mail@gmelikov.ru>, 2017-11-13 20:18:18 +0300,6829, add .travis.yml travis builder maximum work time minute use builder spread zts using test group tag reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 6829,,
2811,5277f208f290ea4e2204800a66c3ba20a03fe503,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-12 05:27:43 +0100,6850, fix arc_summary.py crash python3 prevents arc_summary.py crashing called parameter long form description python3 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6849 close 6850,,
2812,7c351e31d5961a65ebf8ba2110f941391834df55,enrubson <ben.rubson@gmail.com>, 2017-11-02 16:01:56 +0100,7531, openzfs 7531 assign correct flag prefetched buffer reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com authored abraunegg alex.braunegg gmail.com approved dan mcdonald danmcd joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7531 openzfs commit http github.com openzfs openzfs commit 468008cb,,
2813,c0daec32f839f687a7b631ea8c292dfb2637478a,rkadiusz BubaÅa <arkadiusz.bubala@open-e.com>, 2017-11-10 22:37:10 +0100,6837, long hold dataset upgrade receive rollback performed filesystem upgrading objset may evicted lead null pointer dereference upgrade try access evicted objset commit add long hold dataset whole upgrade process receive rollback return ebusy error upgrade finished reviewed brian behlendorf behlendorf1 llnl.gov signed arkadiusz bubaå open e.com close 5295 close 6837,,
2814,62df1bc813e6972130fffa91c6999a8e5ef80afd,om Caputi <tcaputi@datto.com>, 2017-11-08 18:25:30 -0500,6848, fix encryption root hierarchy issue recursive raw receive zfs userspace performs final pas adjust encryption root hierarchy needed unfortunately force_inherit ioctl bug caused encryption root always assigned direct parent instead inheriting parent patch simply fix issue reviewed brian behlendorf behlendorf1 llnl.gov reviewed alek pinchuk apinchuk datto.com signed tom caputi tcaputi datto.com close 6847 close 6848,,
2815,71a24c3c52f6223f54e6351b57e089791aa3b2f1,im Chase <tim@chase2k.com>, 2017-11-08 15:32:15 -0600,6797, handle compressed buffer buffer currently syncing still referenced db_data copy made case dirtied txg previously buffer copy simply allocated arc_alloc_buf handle compressed encrypted buffer special case compressed buffer result typically invalid memory access newly allocated buffer uncompressed size commit fix problem handling compressed case encrypted unencrypted respectively  although using proper allocation function fix invalid memory access allocating buffer compressed size another unrelated issue made impossible properly detect compressed buffer first place header compression flag set arc_write possible attached buffer actually compressed commit add logic set non zio_raw case wil handle case compressed buffer encrypted unencrypted reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 5742 close 6797,,
2816,eef005d882dfaa2ffddfeea5d70ff27aadee344a,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-11-08 11:09:30 -0800,6846, refresh test file include new variable add missing variable control test reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6846,,
2817,80b485246ab1acf5e2c5373c2739851aeb693fb4,ntonio Russo <antonio.e.russo@gmail.com>, 2017-11-08 12:39:15 -0500,6822, cleanup systemd dependency redundancy present systemd dependency noticed 6764. existing setup might rely quirk cleanup moved development branch reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed antonio russo antonio.e.russo gmail.com close 6822,,
2818,011ef12c7a8d10da64d477d44a361de08e2d42e9,OLi <loli10K@users.noreply.github.com>, 2017-11-08 18:16:37 +0100,6841, fix undefined systemd_svcs rpm scriptlets allows rpm based system properly control package installation removal using systemd reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6838 close 6841,,
2819,d8fdfc2d657b2926cf8d7ceb9675ff0df7265858,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-08 09:09:45 -0800,6842, openzfs 8607 variable set used reviewed yuri pankov yuripv gmx.com reviewed igor kozhukhov igor dilos.org reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com authored toomas soome tsoome me.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8607 openzfs commit http github.com openzfs openzfs commit b852c2f5 close 6842,,
2820,87fbf4363631abb513f43ff4c02655828e8b561d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-11-07 15:06:27 -0800,6830, provide tag perf regression.run prior commit changed test runner enable tagging testgroups within test suite runfile must specified runfile update runfile performance regression properly tagged reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6830,,
2821,271955da3eec30da42f0e67b63cd9ef5f003c55b,OLi <loli10K@users.noreply.github.com>, 2017-11-07 23:55:31 +0100,6826, fix zfs tests.sh single test functionality without tag specified runtime generated runfile test runner execute test provided command line fix adding tag information custom runfile reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6826,,
2822,cb3b0419baeecd15cc6891cdccfe0d5d815edd36,OLi <loli10K@users.noreply.github.com>, 2017-11-07 23:53:57 +0100,6761, contrib initramfs switch automake use automake build initramfs script hook reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6761,,
2823,a3df7fa79d7db857f67a38ced033764bd684ca71,li5 <weigang.li@intel.com>, 2017-11-08 06:51:30 +0800,6827, bug fix qat_compress.c compressed size 4kb 128kb block compressed 4kb pointer footer end compressed buffer header offset added twice case gap footer compressed buffer always compute footer pointer address start last page remove used workaroud code verified fixed latest driver fix reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed weigang weigang.li intel.com close 6827,,
2824,681957fe2efc6a15b9675387075514957cbcd821,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-07 23:50:15 +0100,6828, sort output tunables arc_summary.py sort list tunables printed alphabetically reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6828,,
2825,12954494a1bfe4c115332049cca1704d865f72d0,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-07 10:59:27 -0800,6835, disable automatic dependency dkm package default additional dependency generated automatically package normally good thing help ensure thing work make sense dkm package requires minimal dependency easily listed reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 6467 close 6835,,
2826,31df97cdab40545e2d854a9c4ce2fece29e3951b,on Brady <dev.fs.zfs@gmail.com>, 2017-11-07 11:42:15 -0700,6832, build regression c89 cleanup fixed build regression non debug build recent cleanup c89 workarounds reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady delphix.com close 6832,,
2827,b58b73ce74b032184a089f7084c638f71453bdfa,eorge Melikov <mail@gmelikov.ru>, 2017-11-07 21:32:04 +0300,6840, disable rarely observed failure automated testing due timeout disable test case improved reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru issue 6839 close 6840,,
2828,23ea00a1fe9cafa081f910a8326b8f41cfb9f8d4,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-05 22:11:37 +0100,6818, add documentation string arc_summary.py include docstrings pep8 pep257 module function separately remove outdated section comment start module separately remove unused global constant usetunable reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6818,,
2829,2df9ad1c075cfca3cf5acb64950a91e2284f6338,eorge G <gg7@users.noreply.github.com>, 2017-11-05 21:09:56 +0000,6786, fix column alignment long zpool name zpool status normally aligns name state etc column name state read write cksum dummy online mirror online tmp dummy long 1.bin online tmp dummy long 2.bin online mirror online tmp dummy long 3.bin online tmp dummy long 4.bin online however zpool name longer zvol name alignment issue arise name state read write cksum dummy long zpool name online mirror online tmp dummy 1.bin online tmp dummy 2.bin online mirror online tmp dummy 3.bin online tmp dummy 4.bin online zpool iostat zpool import also affected capacity operation bandwidth pool alloc free read write read write  dummy 104k 1.97g 152 9.84k dummy long zpool name 152k 1.97g 144 13.1k  dummy long zpool name online mirror online tmp dummy 1.bin online tmp dummy 2.bin online mirror online tmp dummy 3.bin online tmp dummy 4.bin online reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george gaydarov git gg7.io close 6786,,
2830,cd1813d36e78ce21fa0b0e48b050e0493f9f6c93,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-04 21:33:28 +0100,6815, rewrite fhits arc_summary.py unit complete rewrite fhits move unit non standard english abbreviation unit thereby avoiding confusion long scale short scale number remove unused parameter decimal add function string aim confirm pep8 reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6815,,
2831,1c27024e22af4386b592b30d40e6a0820ceb48c1,on Brady <dev.fs.zfs@gmail.com>, 2017-11-04 14:25:13 -0600,6816, undo c89 workarounds match upstream 5756 zfs module support c99 remaining past c89 workarounds undone reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed brady don.brady delphix.com close 6816,,
2832,df1f129bc4150fd6ea3f23a01154a71ffa48bf12,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-11-03 23:43:53 +0100,6802, minor code cleanup arc_summary.py simplify inline single use function div1 inline twice used function div2 add function comment zfs_header replace variable unused get_kstat following convention reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6802,,
2833,34c2b3680bd705c3eabe32442c0d3c9ca82628b5,rian Behlendorf <behlendorf1@llnl.gov>, 2017-11-03 15:38:52 -0700,6807, initramfs fix initramfs fix inconsistent whitespace initramfs fix spelling error initramfs set elevator noop rpool disk reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard laager rlaager wiktel.com close 6807,,
2834,9a810efb02a646c59cd69e639d057022ccf3a9a9,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-11-03 09:53:32 -0700,6788, allow test runner filter test group tag enable test runner accept list tag identify test group user wish run also allow test runner perform multiple iteration test run reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6788,,
2835,4fc411f7a3ecee8a70fc8d6c687fae9a1cf20b31,ichard Laager <rlaager@wiktel.com>, 2017-11-01 21:54:56 -0500, , initramfs set elevator noop rpool disk zfs already set elevator noop wholedisk vdevs pool typical root zfs installation use partition set elevator noop disk root pool ubuntu 16.04 16.10 lost 17.04 due debian switching upstream initramfs script signed richard laager rlaager wiktel.com,,
2836,11b9dcfb2d30a8d05a424bb2a9a6d26ef39aabbb,ichard Laager <rlaager@wiktel.com>, 2017-11-01 21:54:28 -0500, , initramfs fix spelling error fix typo comment signed richard laager rlaager wiktel.com,,
2837,4767c7a14e3b5f242746755d33d69edf81c6194f,ichard Laager <rlaager@wiktel.com>, 2017-11-01 21:53:22 -0500, , initramfs fix inconsistent whitespace fix one instance inconsistent whitespace signed richard laager rlaager wiktel.com,,
2838,c9427c4696a244bc0d1bdecc37be320bb57ce54d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-30 16:21:24 -0700,6801, add badge readme include status badge top level readme reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6801,,
2839,f3c8c9e6f0e5e2ce6a1cba31db0422d8585e8c7c,ason King <jason.brian.king@gmail.com>, 2017-06-13 04:16:45 -0500,6796, openzfs 640 duplicated several command porting note openzfs patch added nicenum_scale nicenum library used zfs rather pull new dependency version nicenum lib libzpool util.c simply replaced new one reviewed sebastian wiedenroth wiedi frubar.net reviewed robert mustacchi joyent.com reviewed yuri pankov yuripv gmx.com approved dan mcdonald danmcd joyent.com authored jason king gmail.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 640 openzfs commit http github.com openzfs openzfs commit 0a055120 close 6796,,
2840,47c8e7fd97d8406f3fe51882a4a2787103012a82,cot W. Stevenson <scot.stevenson@gmail.com>, 2017-10-25 08:29:02 +0200,6784, rewrite function fbytes arc_summary.py replace elif else construction shorter loop remove unused parameter decimal centralize format string add function documentation string conform pep8 reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed scot stevenson scot.stevenson gmail.com close 6784,,
2841,5c2552c56456191e8038efe25ed66270c3f1501a,ntonio Russo <antonio.e.russo@gmail.com>, 2017-10-30 16:18:26 -0400,6764, systemd zfs import.target documentation zfs import cache scan .service must complete mounting filesystems occur simplify dependency create target reached systemd sense pool imported additionally recommend legacy zfs mount use option zfs import.target codify requirement reviewed fabian grã¼nbichler f.gruenbichler proxmox.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed antonio russo antonio.e.russo gmail.com close 6764,,
2842,ca85d690974c4c1e12f1bd5eadfa47806ba01f89,braunegg <alex.braunegg@gmail.com>, 2017-10-31 07:15:10 +1100,6785, update zfs module parameter man5 update zfs module parameter man5 missing parameter detail multiple tuning reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed alex braunegg alex.braunegg gmail.com close 6785,,
2843,35a44fcb8d6e346f51be82dfe57562c2ea0c6a9c,ames Cowgill <jcowgill@users.noreply.github.com>, 2017-10-30 18:16:56 +0000,665, remove spin_is_locked call system config_smp turned spin_is_locked always return false causing assertion fail remove suggested zfsonlinux zfs 6558 reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed james cowgill james.cowgill mips.com close 665,,
2844,f4ae39a19da8a5756cc1287a426e1c8a62eeaaac,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-27 15:52:03 -0700,6794, fix status command option zpool zpool status command support option printing full path name doe support parsable option printing exact value reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6792 close 6794,,
2845,8be368899918e2786f2fed84dc746de1894b06c1,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-27 15:49:14 -0700,661, remove vn_rename vn_remove vn_rename vn_remove historically problematic implement reliably rather fixing yet removed reviewed arkadiusz bubala open e.com signed brian behlendorf behlendorf1 llnl.gov close 648 close 661,,
2846,8fc533725f378d992b683a19cbed1ce513962fcf,braunegg <alex.braunegg@gmail.com>, 2017-10-28 09:46:34 +1100,664, update spl module parameter man5 missing parameter detail update spl module parameter man5 following missing parameter detail spl_panic_halt reviewed brian behlendorf behlendorf1 llnl.gov signed alex braunegg alex.braunegg gmail.com close 664,,
2847,867959b5887c5211c520ad10ef8d12990a6d79fa,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-27 12:46:35 -0700,6787, openzfs 8081 compiler warning zdb fix compiler warning zdb change freebsd compile zdb compiler warning enabled save wunused parameter usr src cmd zdb zdb.c usr src cmd zdb zdb_il.c usr src common zfs sys sa.h usr src common zfs sys spa.h fix numerous warning including const correctness shadowing global definition signed unsigned comparison missing prototype missing static declaration unused variable function unreadable array initialization missing struct initializers usr src cmd zdb zdb.h add header file declare common symbol usr src lib libzpool common sys zfs_context.h usr src common zfs arc.c usr src common zfs dbuf.c usr src common zfs spa.c usr src common zfs txg.c add function prototype ensure every callback supplied function actually match prototype usr src cmd ztest ztest.c usr src common zfs sys zil.h usr src common zfs zfs_replay.c usr src common zfs zvol.c add function prototype ensure every function type actually match prototype usr src common zfs sys refcount.h change ftag discard constness __func__ necessary since existing apis expect passed void porting note many fix already applied linux consistency openzfs version change applied warning addressed equivalent different fashion reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com authored alan somers asomers gmail.com approved richard lowe richlowe richlowe.net ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8081 openzfs commit http github.com openzfs openzfs commit 843abe1b8a close 6787,,
2848,a94d38c0f382c16244912de83a7356ae35e63322,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-27 09:52:18 -0700,6790, correct make mancheck recipe current make recipe mancheck silently ignores error correct recipe error cause mancheck recipe fail zpool reopen command zpool.8 manpage bullet list without .el reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed giuseppe natale dinatale2 llnl.gov close 6790,,
2849,ee45fbd89465f12b39e97173a088175d4b712b5f,OLi <loli10K@users.noreply.github.com>, 2017-10-27 01:58:38 +0200,6760, zfs send fails dump object larger 128pib dumping object larger 128pib possible do_dump miscalculate free_record offset due integer overflow condition prevents receiving end correctly restoring dumped object reviewed brian behlendorf behlendorf1 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com signed loli10k ezomori.nozomu gmail.com close 6760,,
2850,88f9c9396bcce596db56dc880260f95c49a51d67,OLi <loli10K@users.noreply.github.com>, 2017-10-27 01:49:33 +0200,6762, allow zpool event filtering pool name additionally add four new test verify zpool event functionality verify command line option argument verify zpool event verify event filtering pool name reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 3285 close 6762,,
2851,a032ac4b3819408b2e17085224290b6a762de79a,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-26 12:57:53 -0700,6779, openzfs 8558 8602 lwp_create return eagain 8558 lwp_create return eagain system 80k zfs filesystems system 80k zfs filesystems seen case lwp_create start fail returning eagain problem 80k zfs filesystems taskq created dataset part zil dataset porting note new nomem taskq kstat dropped added module option documentation new tuning   reviewed george wilson george.wilson delphix.com reviewed sebastien roy sebastien.roy delphix.com approved robert mustacchi joyent.com authored prakash surya prakash.surya delphix.com reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8558 openzfs commit http github.com openzfs openzfs commit 216d772 8602 remove unused field dsl_pool structure reviewed serapheim dimitropoulos serapheim delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com authored prakash surya prakash.surya delphix.com reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 8602 openzfs commit http github.com openzfs openzfs commit 2bcb545 close 6779,,
2852,d3f2cd7e3b70679f127dd471ea6d37ece27463f2,rkadiusz BubaÅa <arkadiusz.bubala@open-e.com>, 2017-10-26 21:26:09 +0200,6746, added flag zpool reopen added flag zpool reopen allows running scrub operation continue device dirty time log default component device dtl zpool reopen executed running scan operation restarted added functional test zpool reopen test cover following scenario zpool reopen without argument zpool reopen pool name argument zpool reopen scrubbing zpool reopen scrubbing zpool reopen resilvering zpool reopen bad argument reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed arkadiusz bubaå open e.com close 6076 close 6746,,
2853,3ad59c015dce45965fa309a0364a46c6f8bdda9f,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-10-26 21:18:49 +0200,6775, arcstat flush stdout outfile line otherwise arcstat get interrupted desired number iteration reached output file empty set via via shell redirection reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 6775,,
2854,69b229bd60135838d606f5da41831d409d11de2d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-26 10:23:58 -0700,6780, commitcheck multiple openzfs port commit allow commitcheck.sh handle multiple openzfs port single commit useful case change upstream bug fix make sense port original patch reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed giuseppe natale dinatale2 llnl.gov close 6780,,
2855,8dcaf243d77b21c49092a4ffd3a641ac3407217c,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-26 10:17:00 -0700,6777, add coverity defect fix commit checker support enable commitcheck.sh test commit message expected format coverity defect fix reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6777,,
2856,64b8c58e3e49dcca107c2f53dd5cc7208ee6f405,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-23 14:18:12 -0700,6770, ensure arc_size_break filled arc_summary.py use mfu_size mru_size pulled arcstats kstat file calculate mfu mru percentage arc size breakdown reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed andcycle andcycle andcycle.idv.tw signed giuseppe natale dinatale2 llnl.gov close 5526 close 6770,,
2857,63e5e960bad6f6c7d8eeb8273988ec7fd10f0a60,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-23 14:01:43 -0700,6776, correct flake8 error style builder update fix new flake8 error related bare excepts ambiguous variable name due style builder update reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6776,,
2858,d9daa7abcf04f75ba013ec954c4f2d4854ba1cbc,avid Quigley <dpquigl@users.noreply.github.com>, 2017-10-23 12:42:37 -0600,6280, zts add auto spare test zed expected automatically kick hot spare device one available pool sufficient number read error encountered use zinject simulate failure condition verify hot spare used read error vdev faulted read checksum error vdev degrade reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed david quigley david.quigley intel.com close 6280,,
2859,f8cd871a01a5e38e35cb4d44768dce09265265f4,disbladis <adis@blad.is>, 2017-10-24 02:00:45 +0800,6774, use ashift default ssdsc2bw48 disk currently 480gb model disk use ashift default ssdsc2bw48 also optimized block reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed adisbladis adis blad.is close 6774,,
2860,70c8a79446ce74db93f492312f4ce0a825c4dbf5,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-10-23 09:47:16 -0700,6771, provide commit message format coverity defect provide detail commit message format coverity defect fix submitted reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6771,,
2861,d5e024cba215ddbe433658e2d19e611eab33e2c9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-23 09:45:59 -0700,6486, emit history event zpool create history command event suppressed zpool create command since history object yet exist create object earlier history get lost split pool_destroy event pool_destroy pool_export may distinguished updated events_001_pos events_002_pos test case check expected history event reworked reliable reviewed nathaniel clark intel.com reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6712 close 6486,,
2862,1cfdb0e6e401087778712fa893777b064a8afb6b,li5 <weigang.li@intel.com>, 2017-10-21 02:11:25 +0800,6767, support integration new qat product support integration new qat product intel c62x chipset atom c3000 processor product family soc detect new file name auto conf change max_instances change num_inst u16 clean build warning reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com close 6767,,
2863,6044cf59cdf80d4ba94a7b6c6736cace8a7de9db,ohn <johnramsden@users.noreply.github.com>, 2017-10-19 11:18:42 -0700,6308, add convenience zfs_get function add get function match existing one reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed john ramsden johnramsden riseup.net close 6308,,
2864,bbf1ad67cd0d6f3bc1e22a8a0c7448c15409d007,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-19 10:06:55 -0700,6753, remove vn_rename vn_remove dependency place vn_rename vn_remove used writing updated pool configuration file truncating file instead renaming removing avoid implement interface entirely functionally empty cache file treated missing cache file particularly advantageous linux kernel never provided way reliably implement vn_rename vn_remove test case updated understand empty cache file missing one zfs import systemd service file updated use place mean exporting pool rebooting new pool scanned next boot small change impact normal usage since pool exported part normal shutdown documentation updated accordingly reviewed george melikov mail gmelikov.ru reviewed arkadiusz bubaå open e.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 648 close 6753,,
2865,35df0bb5565c81ba52de430108b37eced9de0606,om Caputi <tcaputi@datto.com>, 2017-10-18 13:08:36 -0400,6766, fix assert small patch fix issue call dnode_hold freeing dnode line reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6766,,
2866,ca9b8e8797dbb7109a052bd3d7316ef27081531c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-18 10:07:02 -0700,6765, update codecov.io behavior update codecov.yml included repository behave originally intended refined needed always post coverage result github two build uploaded normal case since build uploaded kernel user coverage result adjust red yellow green coloring web interface due number unlikely error condition hard force consider coverage excellent level coverage allow variance coverage test run approximately 10x larger typical variance observed leaf reasonable margin prevent false positive always post new smaller comment doe include file list old coverage report removed reviewed prakash surya prakash.surya delphix.com signed brian behlendorf behlendorf1 llnl.gov close 6765,,
2867,c721ba435fc7d2fb61a6e586c5cc11c27f67b480,obin Harding <me@tobin.cc>, 2017-10-18 03:37:50 +1100,6755, fix coverity defect cid 161388 cid 161388 resource leak reasource_leak jump errout file descriptor get closed returning function reviewed brian behlendorf behlendorf1 llnl.gov signed tobin harding tobin.cc close 6755,,
2868,ced28193b06b3d93f404a5d67713c124731a2a0d,obin Harding <me@tobin.cc>, 2017-10-17 09:32:48 +1100,6745, fix coverity defect 147480 147584 cid 147480 logically dead code deadcode remove non null check subsequent function call add assert future proof code usage label jumped zhp initialized cid 147584 bound access overrun subtract length current string buffer length size argument snprintf starting address write start buffer current string length need subtract string length else risk buffer overflow reviewed brian behlendorf behlendorf1 llnl.gov signed tobin harding tobin.cc close 6745,,
2869,7670f721fc82e6cdcdd31f83760a79b6f2f2b998,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2017-10-15 16:00:44 -0400,6731, add dkm package debian based distribution config deb.am enable building dkm package debian rpm generic zfs dkms.spec.in adjust spec debian compatible condition kernel devel req rpm distros adjust dkm req minimum version ensure used non rpm distros config deb.am drop config_kernel config_user guard makefile.am add pkg dkm target reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa datto.com close 6044 close 6731,,
2870,28920ea3346c1c905c5f727ea3e54297e6257568,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2017-10-15 15:58:12 -0400,657, add dkm package debian based distribution config deb.am enable building dkm package debian rpm generic spl dkms.spec.in adjust spec debian compatible condition kernel devel requires rpm distros ensure used non rpm distros config deb.am drop config_kernel config_user guard makefile.am add pkg dkm target reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa datto.com close 657,,
2871,c616dcf8bc3b2cb2dddc9b8f8bc64f307c9fb938,obin Harding <me@tobin.cc>, 2017-10-14 06:42:04 +1100,6754, fix function documentation correctly mirror code currently function documentation state two string allocated outdated one char parameter passed function clearly pointer single string returned need free reviewed brian behlendorf behlendorf1 llnl.gov signed tobin harding tobin.cc close 6754,,
2872,aea899a6fabbd8d0daf25a23ba114804b022529b,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-13 12:39:39 -0700,6758, increase default zloop.sh vdev size default 128m vdev size used zloop.sh always large enough result enospc failure suspend pool increase default size 512m provide option used specify alternate size doe increase free space requirement run zloop.sh however since vdevs sparse space required reviewed brady don.brady delphix.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6758,,
2873,21a932b83c3e0c6fe5f42f874fd3664e67f374c7,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-13 10:02:39 -0700,6595, post encryption followup includes fix bug documentation issue found encryption patch merged general code improvement long term maintainability reviewed jorgen lundman lundman lundman.net reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 6526 close 6639 close 6703 cloese 6706 close 6714 close 6595,,
2874,cdc15a76045fa70743fb95a1fd450229e2b73fd3,amian WojsÅaw <damian@wojslaw.pl>, 2017-10-13 02:10:38 +0200,6273, typo dsl_dataset.h parameter dsl_dataset_t function prototype renamed dsl_dataset_t reviewed brian behlendorf behlendorf1 llnl.gov signed damian wojså damian wojslaw.pl close 6756 close 6273,,
2875,e0922b0421697294583804f00a67d10a77ecd6c6,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-12 09:51:56 -0700,6750, fix sparc support current code base almost compiles sparc fix required code compile work efficiently code come openzfs project initially dropped porting crypto framework reviewed brian behlendorf behlendorf1 llnl.gov signed pengcheng jsteward.moe close 6733 close 6738 close 6750,,
2876,085b501fb81654171bcc2ed76bff64eea408ca20,ntonio Russo <antonio.e.russo@gmail.com>, 2017-10-12 12:39:45 -0400,6751, explicitly depend icp module initramfs hook automatic dependency resolution unreliable many system follow suit existing code explicitly include icp module dependency reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 6751,,
2877,9bae371ce69187f14e15129173ba0b138a965ada,om Caputi <tcaputi@datto.com>, 2017-10-05 13:43:34 -0400,6714, fix 6714 line patch fix possible integer overflow reported grsec signed tom caputi tcaputi datto.com,,
2878,2637dda8f80dbd49dd0512c74108ff977dfb8c7b,om Caputi <tcaputi@datto.com>, 2017-10-03 13:18:45 -0400,6706, fix 6706 patch resolve issue raw sends would fail send encryption parameter wrapping key unloaded reloaded data sent dataset encryption root code attempted lookup value wrapping key initialized upon reload change force code lookup correct value encryption root dsl crypto key unfortunately issue led disk dsl crypto key non encryption root datasets left zeroed encryption parameter however present problem since value never looked overrwritten upon changing key patch also fix issue raw resumable sends cleaned appropriately invalid dsl crypto key received signed tom caputi tcaputi datto.com,,
2879,b135b9f11ad15823d92f8ca3f40fcdd91690677d,om Caputi <tcaputi@datto.com>, 2017-10-02 21:55:39 -0400,6703, fix 6703 patch resolve issue incorrectly recursed clone dsl directory recursively rewrapping encryption key clone share key origin logic incorrect signed tom caputi tcaputi datto.com,,
2880,440a3eb939441a42ab5029e5e64498d802fa276b,om Caputi <tcaputi@datto.com>, 2017-09-28 11:49:13 -0400,6639, fix 6639 several issue uncovered running stress test zfs encryption raw sends particular issue associated fix follows arc_read_done ability chain several request block data via arc_callback_t struct case arc would use first request dsobj bookmark decrypt data problematic first request might prefetch zio able handle key loaded second might use different key sure work fix pas dsobj individual arc_callback_t request attempt decrypt data separately drr_free drr_freeobject record send file transaction properly tagged raw raw sends caused panic dbuf code attempted decrypt block properly set issuing prefetch added asserts code cleanup ensure issue detectable future signed tom caputi tcaputi datto.com,,
2881,4807c0badb130ae70cf6f0887b4be1648f217f1a,om Caputi <tcaputi@datto.com>, 2017-09-12 16:15:11 -0400,6526, encryption patch follow pbkdf2 implementation changed openssl implementation hkdf implementation moved file test added ensure correctness removed libzfs unnecessary dependency libzpool libicp ztest create test encrypted datasets currently disabled issue 6526 resolved otherwise function advertised several small bug fix discovered enabling ztest run encrypted datasets fixed coverity defect added encryption patch updated man page encrypted send receive behavior fixed bug encrypted datasets could receive record minor code cleanup consolidation signed tom caputi tcaputi datto.com,,
2882,94d49e8f9bd2e58a783066327c84b7d3b605ac0f,om Caputi <tcaputi@datto.com>, 2017-10-11 12:12:48 -0400,6526, relax assert 6526 patch resolve minor issue assert applies non weight based metaslabs erroneously applied metaslabs signed tom caputi tcaputi datto.com,,
2883,d9ee0e2621d79c121b37e0a359d58834f37fbc78,ireinaHoro <i@jsteward.moe>, 2017-10-12 01:42:05 +0800, , remove useless am_ccasflags cppascompile ltcppascompile include hence unnecessary add includes signed pengcheng jsteward.moe,,
2884,e102b1b51521f8444b5512796dca92e1c0518d1f,ireinaHoro <i@jsteward.moe>, 2017-10-11 13:36:26 +0800, , fix libspl assembler flag respect cpu type important respect user cflags mismatched mcpu directly result assembler able produce correct code fix 6733 signed pengcheng jsteward.moe,,
2885,a7ec8c47e21c76624149beb1c9490c0e1bedf2a8,ireinaHoro <i@jsteward.moe>, 2017-10-11 13:16:46 +0800, , sparc optimization encode normally sparc processor run big endian mode save extra labor needed little endian machine target big endian one sparc signed pengcheng jsteward.moe,,
2886,46d4fe880e15848b272593ae68333577206d9c5b,ireinaHoro <i@jsteward.moe>, 2017-10-11 13:09:43 +0800, , sparc optimization sha1transform passing argument explicitly sha1transform increase number register abailable compiler hence leaving local register available missing symbol sha1_consts prevents compiling sparc added back speed process utilizing relative constant fix 6738 signed pengcheng jsteward.moe,,
2887,d4404c3fdbe11f5220fd6ab429bb2f12ac93d1f4,un <spamtoaun@gmail.com>, 2017-10-11 20:06:20 +0300,6747, fix boot zfs issue correct zfs snapshot listing disable lvm available message quiet boot reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed alar aun spamtoaun gmail.com close 6700 close 6747,,
2888,29e07af5ae77e0ddf9ccfb77684f9713627b2ceb,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-11 09:15:44 -0700,6749, fix chattr cleanup failure chattr cleanup step may fail delete user still active process running user retry userdel occurs eliminate spurious false positves error userdel quser1 exited userdel user quser1 currently used process 26814 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6749,,
2889,523d5ce0f48a1b7127345d830e5a34079cace322,obin Harding <me@tobin.cc>, 2017-10-11 10:41:47 +1100,6723, fix coverity defect cid 147474 cid 147474 logically dead code deadcode remove ternary operator return error directly currently return value derived ternary operator conditional always true ternary operator therefore redundant i.e dead code reviewed brian behlendorf behlendorf1 llnl.gov signed tobin harding tobin.cc close 6723,,
2890,829e95c4dc74d7d6d31d01af9c39e03752499b15,abian GrÃ¼nbichler <f.gruenbichler@proxmox.com>, 2017-09-26 14:03:21 +0200,6616, skip freeobjects object exist sending incremental stream based snapshot receiving side must base snapshot thus need send freeobjects record object past maximum one exists locally allows send incremental stream older zfs implementation e.g zol 0.7 actually try free object freeobjects record instead bailing early reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 5699 close 6507 close 6616,,
2891,48fbb9ddbf2281911560dfbc2821aa8b74127315,abian GrÃ¼nbichler <f.gruenbichler@proxmox.com>, 2017-09-29 12:00:29 +0200,6616, free object receiving full stream clone object last written freed object supposed exist receiving stream free accordingly freeobjects record included stream reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 5699 close 6507 close 6616,,
2892,aee1dd4d983c64db3c3155290d48f05243e85709,OLi <loli10K@users.noreply.github.com>, 2017-10-11 00:22:05 +0200,6623, fix intra pool resumable zfs send token resuming token requires guid snapshot mapping walk whole dataset hierarchy find right snapshot send source destination exists incremental resumable stream libzfs get confused pick wrong snapshot send result attempting send destination snap1 source snap2 instead source snap1 source snap2 fails invalid cross device link error exdev fix adjusting logic behind dataset traversal pick right snapshot send additionally update dry run zfs send print output stderr consistent dry run command reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6618 close 6619 close 6623,,
2893,70f02287f86db33950eba9ceeb4f4c07c23131e0,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-10 15:19:19 -0700,6734, fix arc behavior bit system addition abd change consumption virtual address space greatly reduced exposed issue config_highmem system free memory calculated incorrectly functionally cause major problem prior abd lack available virtual address space used indicator low memory patch make following change address issue process realigns code openzfs substantive change behavior bit system added config_highmem case arc_all_memory arc_free_memory function consider low memory page config_highmem system arc_free_memory function updated return byte instead page consistent helper function user space make reasonable value since currently testing performed context add three new value arcstats kstat provide visibility arc assessment memory situation  added kmem_reap call bit build realign code openzfs reduced size test file speed test case multiple txgs still required move vdevs used test_base_dir location speed test case reviewed david quigley david.quigley intel.com signed brian behlendorf behlendorf1 llnl.gov close 5352 close 6734,,
2894,0cefc9dbcd9de8a35c51e172edabf2f2ecf15f92,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-10 08:59:17 -0700,660, add parenthesis btop ptob macro add missing parenthesis around btop ptob macro ensure operation ordering preserved expansion reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 660,,
2895,4f23c5d0c45649ba2bb7679c86561b006aee2dfe,rivb0x23 <privb0x23@users.noreply.github.com>, 2017-10-09 21:34:26 +0000,6715, fix inclusion libgcc_s.so void void linux x86_64 musl libgcc_s.so located usr lib found dracut produce error add simple additional path check usr lib libgcc_s.so install initramfs reviewed brian behlendorf behlendorf1 llnl.gov signed privb0x23 privb0x23 close 6715,,
2896,ce319db57b1662a21d60550e546592c96c3da7a1,laf Faaland <faaland1@llnl.gov>, 2017-10-05 12:42:20 -0400, , make include linux conform zfs style standard semantic change fix following type style issue blank preprocessor define followed space instead tab improper first line block comment indent space instead tab last line file blank missing blank open comment missing space left brace non continuation indented space space instead tab unparenthesized return expression signed olaf faaland faaland1 llnl.gov,,
2897,4b393c50ae0e74b351534030d8b87f1967832d09,laf Faaland <faaland1@llnl.gov>, 2017-10-04 12:33:43 -0400, , make file header conform zfs style standard semantic change change        signed olaf faaland faaland1 llnl.gov,,
2898,57f4ef2e819670f8b28760b32745e0729f8d80d7,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-06 11:23:12 -0700,6721, fix abdstats kstat bit system decrementing struct_size kstats value need cast int bit system reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6721,,
2899,a0430cc5a913406cf471bcafac31c5118d89843f,obin Harding <me@tobin.cc>, 2017-10-06 13:38:55 +1100,6722, use bitwise instead logical make two instance change change bitwise logical  currently code bitwise two boolean value first instance first operand flag bitwise combined bit mask get boolean value whether file group write permission set second operand used struct member intended boolean flag bit mask second instance argument except world write permission instead group write s_iwoth s_iwgrp reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed tobin harding tobin.cc close 6684 close 6722,,
2900,d95a59805f8f00046bb449fb12161e1f0caf65fb,obin Harding <me@tobin.cc>, 2017-10-06 13:33:44 +1100,6719, remove unnecessary equality check currently statement includes assignment function return value equality check parenthesis incorrect place currently code clobber function return value fix simplifying statement foo succinctly expressed foo remove equality check add parenthesis correct statement reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed chris dunlop chris onthe.net.au signed tobin harding tobin.cc close 6685 close 6719,,
2901,eea2e2413220b34a3da0911dee554df20bdd0c47,saac Huang <he.huang@intel.com>, 2017-10-05 20:30:02 -0600,6713, use linear abd function use allocate ub_abd abd_to_buf ub_abd used later reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 6718 close 6713,,
2902,c11f1004d19dd74e4be8869d211639413293dea0,rian Behlendorf <behlendorf1@llnl.gov>, 2017-10-05 19:28:00 -0700,6716, remove dead code avl tree avl_update_ function never used zfs therefore removed barely even used illumos additionally simplify avl_add using verify produce exactly behavior linux reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6716,,
2903,39f56627ae988d09b4e3803c01c22b2026b2310e,ed Bass <bass6@llnl.gov>, 2017-10-02 15:36:04 -0700,6695, skip freeing object receiving freeobjects record incorrectly skip freed object case specifically happens first object range freed exist second object doe leaf object allocated disk receiving side unallocated sending side may cause receiving subsequent incremental stream fail bug caused incorrect increment object index variable current object freed exist increment incorrect incrementing object index handled call dmu_object_next increment portion loop statement add test case expose bug reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 6694 close 6695,,
2904,01ff0d7540b21c461c19b90b1e715df26cba3ff2,lek P <alek-p@users.noreply.github.com>, 2017-09-29 15:58:52 -0700,6691, update default zfs_txg_history often useful access txg history debugging purpose patch change default 100 txgs worth history preserved reviewed matthew ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard elling richard.elling reviewed prakash surya prakash.surya delphix.com reviewed george melikov mail gmelikov.ru signed alek pinchuk apinchuk datto.com close 6691,,
2905,e71cade67d48495db46fb6eed29b88b895bcb2d8,hrisrd <chris@onthe.net.au>, 2017-09-30 08:49:19 +1000,6561, scale dbuf cache arc_c commit d3c2ae1 introduced dbuf cache default size minimum 100m maximum arc size figure may adjusted using dbuf cache counted metadata purpose arc size calculation 1gb box arc maximum size default c_max 493m give dbuf cache default minimum size 15.4m arc metadata default minimum 16m i.e dbuf cache significant proportion minimum metadata size overhead involved actually mean arc metadata get minimum patch dynamically scale dbuf cache target arc size instead statically scaling maximum arc size scale still set maximum size still fixed using target arc size rather current arc size done help arc reach target rather simply focusing current size reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed chris dunlop chris onthe.net.au issue 6506 close 6561,,
2906,b59b22972db5913000ca157c24a254182df8d957,OLi <loli10K@users.noreply.github.com>, 2017-09-28 22:04:14 +0200,6686, add zfs diff coverage zfs test suite change add four new test zts verify type change diplayed verify command line option argument verify zfs diff zfs_diff_types verify type object file dirs pipe ... reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com signed loli10k ezomori.nozomu gmail.com close 6686,,
2907,269db7a4b3ef2bc14f3c2cf95f050479cbd69e72,imon Guest <simon.guest@tesujimath.org>, 2017-09-28 06:39:47 +1300,6592, vdev_id extension new scsi topology system scsi rather disk topology change enables vdev_id script match block device path therefore create vdev alias dev disk vdev reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed simon guest simon.guest tesujimath.org close 6592,,
2908,0c484ab5677ffaa3e0e2371456deb4f8eb370388,rakash Surya <prakash.surya@delphix.com>, 2017-09-26 12:29:32 -0700,6675, run ztest longer coverage builder reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 6675,,
2909,7e98073379353a05498ac5a2f1a5df2a2257d6b0,eHackEd <DeHackEd@users.noreply.github.com>, 2017-09-25 13:38:27 -0400,6672, fix printk call missing log level reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 6672,,
2910,3fd3e56cfd543d7d7a1bf502bfc0db6e24139668,OLi <loli10K@users.noreply.github.com>, 2017-09-25 19:32:34 +0200,6632, fix zfs test suite issue add zfs bookmark coverage add openzfs 8166 coverage fix busy failure fix bootfs_003_pos bootfs_004_neg zdb_005_pos local cleanup update usage keep variable add get_all_pools function enable history_008_pos rsend_019_pos non 32bit builder enable update local cleanup fix large_dnode openzfs 8199 fix use dataset name mountpoint unmount update work properly disk use test_base_dir instead hardcoded var tmp file vdevs update usage dev random dev urandom reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com issue 6086 close 5658 close 6143 close 6421 close 6627 close 6632,,
2911,e8474f9ad3b3d23c3277535c4f53f8fd1e6cbd74,ichard Elling <Richard.Elling@RichardElling.com>, 2017-09-25 10:02:24 -0700,651, pool stat show wlentime instead rlentime reviewed tim chase tim chase2k.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling close 652 close 651,,
2912,b33d668ddb005b1072c26d36e1abff53aa39ca98,laf Faaland <faaland1@llnl.gov>, 2017-09-23 09:28:18 -0700,6666, fix zts mmp test ztest behavior quote mmp_import_msg passed argument multi word string test passing grep testing first word correct message expected hostid set test attempt enable multihost match actual output situation disable ztest_reguid ztest invoked option ztest performs reguid concurrent import attempt may fail error one device currently unavailable guid sum calculated original device guids compared guid sum ztest wrote based new device guids reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6666,,
2913,7a6acb31b7a5bcc27a9b0313e46c411d2af353db,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-22 22:16:18 -0700,6674, fix enable code coverage debug build enable code coverage provided result ndebug defined controlled enable debug signed brian behlendorf behlendorf1 llnl.gov close 6674,,
2914,bb2773b358561145457670f2feb8c7c85b861711,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-22 18:54:34 -0700,6669, update codecov.yml update codecov.yml make following functional change require testing pas posting result set red yellow green coverage percent 100 allow drop coverage still considered pas reduce size comment posted issue additionally top level readme.markdown updated include codecov.io badge project summary reworded reviewed prakash surya prakash.surya delphix.com signed brian behlendorf behlendorf1 llnl.gov close 6669,,
2915,acf044420b134b022da5c866b19df69934ad3778,rakash Surya <prakash.surya@delphix.com>, 2017-09-22 18:49:57 -0700,6670, add support enable code coverage option change add support new option passed configure script enable code coverage enable gcov option removed new option provides functionality plus using new option following make target available check code coverage code coverage capture code coverage clean note make target run root project reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 6670,,
2916,d410c6d9fd4db812a1009e1603c89f1e222e1875,laf Faaland <faaland1@llnl.gov>, 2017-09-22 14:29:26 -0700,6665, reimplement rename rename mmp_random_leaf since defined mmp.c earlier implementation could end spinning forever pool vdev marked writeable none whose child writeable also guarantee writeable leaf vdev existed would found reimplement recursively walk device tree select leaf search entire tree return value null indicates usable leaf pool either writeable pending mmp writes still chooses starting child randomly level tree pool device healthy mmp writes random leaf even distribution verified testing using enabled reviewed thomas caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed olaf faaland faaland1 llnl.gov close 6631 close 6665,,
2917,5df5d06a8d86af475e90fe7dd86ea044f937be66,on Brady <dev.fs.zfs@gmail.com>, 2017-09-21 11:17:56 -0600,6663, cleanup zloop working directory pas reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed john kennedy jwk404 gmail.com reviewed olaf faaland faaland1 llnl.gov signed brady don.brady delphix.com issue 6595 close 6663,,
2918,4ce3c45a5e30a6ee698ea60be381c774050093ed,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-20 09:36:17 -0700,6659, increase default arc_c_min increase default arc_c_min value whichever larger either 32m total system memory advantageous system memory performance issue may occur arc allowed collapse minimum size time want use bare minimum value still functional filesystem used low memory environment reviewed tim chase tim chase2k.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6659,,
2919,848259c10f08694fd57c005aeb5ca8d724f046b6,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-20 09:30:24 -0700,6660, export symbol symbol needed lustre reason needed zpl exported original patch merged reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed alex zhuravlev bzzz whamcloud.com signed brian behlendorf behlendorf1 llnl.gov close 6660,,
2920,18a2485fc8061f7393ca19f7291366bc46fe9bf7,eng Sun <loyou85@gmail.com>, 2017-09-20 03:19:08 +0800,6658, misc fix meaningless value reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com signed feng sun loyou85 gmail.com close 6658,,
2921,34d00e7aba13076e47dbd1791bd955c1e2f7b0c9,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-09-19 12:17:29 -0700,6653, correct cppcheck error zfs buildbot style builder moved ubuntu 17.04 newer version cppcheck handle new cppcheck error uu_ function removed commit unused effectively dead code retired reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6653,,
2922,8e2dddab421e7131b7bd7eadd517fb36b59b2ddd,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-19 10:09:37 -0700,6654, zts fix failure test case fail pool layered file filesystem doe support discard avoid issue creating pool using disk either loopback device real disk reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6654,,
2923,a9a2bf71520ffb5668c9204db5c7df0445dc912a,avid Quigley <dpquigl@users.noreply.github.com>, 2017-09-18 18:06:40 -0600,6641, remove fru libtopo support fru libtopo support illumos feature ported linux make code complicated necessary commit make way cleanup zed fma code reviewed brian behlendorf behlendorf1 llnl.gov signed david quigley david.quigley intel.com close 6641,,
2924,ea49beba66106dcb272b43323fad147df1df13fd,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-09-18 14:23:09 -0700,6647, correct shellcheck error zfs buildbot moved using ubuntu 17.04 style builder newer version shellcheck correct new issue discovers reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6647,,
2925,a35b4cc8cca6eed5e93d54aa9ca2c72273a8943b,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-16 19:36:44 -0700,6651, zts fix failure fix spurious events_002_pos failure waiting longer grabbing log check resilver_finish event would better rework logic wait long needed rather fixed timeout reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6651,,
2926,787acae0b5cd139ea0f9fa60558cca28d4673b23,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-09-16 11:00:19 -0700,6635, linux 3.14 compat acct etc master branch linux kernel requires request_queue provided move logic freemem spl arc_free_memory arc.c take advantage interface check zfs upstream kernel replaced struct block_device struct gendisk struct bio determine function bio_set_dev exists configure zfs use exists bio_set_dev http github.com torvalds linux commit 74d4699 http github.com torvalds linux commit 75ef718 acct http github.com torvalds linux commit d62e26b reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6635,,
2927,90cdf2833d163dd4db31aded1e6940cc9edb67f6,OLi <loli10K@users.noreply.github.com>, 2017-09-16 19:51:24 +0200,6646, add mdoc style checker add new make mancheck target mandoc tlint verify manpage file currently zfs zpool zdb zgenhostid supported additionally fix outstanding manpage formatting issue reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6646,,
2928,1f4e2c88fd6ca44ec50f178ca8baa18a9c764a98,avid Quigley <david.quigley@intel.com>, 2017-09-13 14:48:05 -0400,6640, ztest always enable asserts build ztest always enabled debug information doe enable asserts unless enable debug used always enable asserts ztest code reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed david quigley david.quigley intel.com close 6640,,
2929,7c9abcf88781947d02863b81ae98c58b18ed71d0,eorge Melikov <mail@gmelikov.ru>, 2017-09-15 23:13:52 +0300,8435, openzfs 8435 zpool.1m zfs.1m minor cleanup 3796 listsnapshots documented zpool man page authored george melikov mail gmelikov.ru reviewed matt ahrens mahrens delphix.com reviewed yuri pankov yuripv gmx.com approved dan mcdonald danmcd joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 8435 openzfs commit openzfs openzfs a058d1c porting note openzfs review applied zol change reverted see http github.com openzfs openzfs pull 415,,
2930,6384cf4132a39dd0ada7991d551554b718041da9,rakash Surya <prakash.surya@delphix.com>, 2017-09-15 11:47:11 -0700,6605, make fno inline compile option accessible function inlined make system much difficult instrument using tool ftrace bpf crash etc thus aid development increase system observability enable debuginfo flag specified fno inline compilation option used userspace kernel module reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 6605,,
2931,d9ec8b9b2a3880a1a2b68e57a25833486c3b164d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-15 10:24:13 -0700,6642, add configure option enable gcov analysis add configure option enable gcov analysis includes minor ctime fix add codecov.yml configuration reviewed prakash surya prakash.surya delphix.com signed brian behlendorf behlendorf1 llnl.gov close 6642,,
2932,0107f69898e3b6d39d974b272da1739cb2f39027,aurav Kumar <gaurkuma@users.noreply.github.com>, 2017-09-13 12:20:07 -0700,6586, modifying xattrs doesnt change ctime changing metadata modify ctime reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed gaurkuma gauravk.18 gmail.com close 3644 close 6586,,
2933,b1490dd43e3c98649c7d23928d908f5bb019411b,avid Quigley <dpquigl@users.noreply.github.com>, 2017-09-13 12:45:04 -0600,6636, fix bug distclean remove needed file running distclean remove following file error makefile.am deleted test zfs test include commands.cfg deleted test zfs test include libtest.shlib deleted test zfs test include math.shlib deleted test zfs test include deleted test zfs test include reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed david quigley david.quigley intel.com close 6636,,
2934,ded8f06a3cfee60b3a8ea5309e9c4d0e567ed3b5,OLi <loli10K@users.noreply.github.com>, 2017-09-12 20:33:22 +0200,6610, relax ref reservation constraint zvols change allow ref reservation set larger current zvol size safe normally set refreservation volsize zvol creation time account metadata reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed richard elling richard.elling reviewed matthew ahrens mahrens delphix.com signed loli10k ezomori.nozomu gmail.com close 2468 close 6610,,
2935,d9549cba9640cd3b09d76b8cbd54387728b7be24,rkadiusz BubaÅa <arkadiusz.bubala@open-e.com>, 2017-09-11 19:25:01 +0200,6617, fix false event pool import old cache file removed event generated zpool export always remove cache file happens every export import sequence reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed giuseppe natale dinatale2 llnl.gov signed arkadiusz bubaå open e.com close 6617,,
2936,835db58592d7d947e5818eb7281882e2a46073e0,OLi <loli10K@users.noreply.github.com>, 2017-09-09 00:24:31 +0200,6601, add vnp support zfs send bookmark leverage functionality introduced cf7684b expose verbose dry run parsable zfs send option bookmark reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 3666 close 6601,,
2937,57858fb5ca4b1d0f28b054cb5e15aaf3bc54c99e,ike Swanson <mikeonthecomputer@gmail.com>, 2017-09-08 15:21:58 -0700,6614, recommend compression zfs dedup section compression lz4 depends lz4 feature enabled compression let zfs use either lzjb lz4 appropriate also allows documentation date zfs pick new default future reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed mike swanson gmail.com close 6614,,
2938,5c214ae318cbca37285ec38e6a2044a7002d31e9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-08 15:07:00 -0700,6615, fix volume wr_indirect log replay portion handler responsible replaying indirect log record reason never existed result indirect log record correctly replayed went largely unnoticed since majority zvol log record type wr_copied wr_need_copy prior openzfs 7578 patch update correctly handle log record add new test case verifies volume replay prevent regression existing test case verified replay filesystem renamed clarity reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 6603 close 6615,,
2939,e0dd0a32a8c8db725be673153b09bee0ca9adcf2,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-07 09:48:26 -0700,6576, revert handle new dnode size incremental ... reverts commit comprehensive fix finalized stricter interior dnode detection new test case added patch revealed issue resizing dnodes receiving incremental backup stream signed brian behlendorf behlendorf1 llnl.gov issue 6576,,
2940,4c5b89f59e4e5c8f5b4680040118ebde09598bbe,laf Faaland <faaland1@llnl.gov>, 2017-09-05 16:15:04 -0700,6564," improved dnode allocation dmu_hold_impl refactor dnode_hold_impl simplify code fix error introduced commit dbeb879 6117 interacting badly large dnodes improve performance allocating new dnode update percpu object core metadnode chunk immediately eliminates lock contention taking hold creating dnode correct detection chunk boundary work properly large dnodes separate dmu_hold_impl code free case code allocated case make easier read fully populate dnode handle array immediately reading block metadnode disk subsequently dnode handle array provides enough information determine dnode slot use free add several kstats allow behavior code examined verify dnode packing since test purely creates leave hole metadnode add test performs concurrent creates deletes complement existing test doe creates fix little contention test 200,000 racing dnode allocation produced test  name type data   3804690 216     203105       dnode_allocate 203154  dnode_buf_evict 23918 4887   performance slightly improved concurrent creates thread unchanged low thread count signed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5396 close 6522 close 6414 close 6564",,
2941,65dcb0f67a4d72ee4e1e534703db5caacf1ec85f,ed Bass <bass6@llnl.gov>, 2017-09-05 16:09:15 -0700,6576, handle new dnode size incremental backup stream receiving incremental backup stream call object dnode size differs incremental source target otherwise may appear dnode shrunk still occupying slot fact free cause failure receive new object occupy free slot add test case verify incremental stream containing object changed dnode size received without error test case fails without change reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 6366 close 6576,,
2942,c8811dec7044a126650c7e2d9f3404680ae115b5,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-09-05 22:50:35 +0200,6599, add man page reference systemd unit reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 6599,,
2943,2917956841362b10af8b3afe7274968ddcc3f6e2,under2015 <omfgbunder@gmail.com>, 2017-09-05 16:45:18 -0400,6590, zfs manpage correction corrected indent note located bottom option zfs send well remove extra whitespace reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed bunder2015 omfgbunder gmail.com close 6590,,
2944,e771de534ff88a72b0531a85abc04ffb4333da53,rian Behlendorf <behlendorf1@llnl.gov>, 2017-09-05 13:41:32 -0700,6573, trim new line add helper function trim tailing new line use new hook immediately apply new scheduler reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3356 close 6573,,
2945,cf7684bc8d57ace26d086027e8059c725fd9ff92,OLi <loli10K@users.noreply.github.com>, 2017-08-31 18:00:35 +0200,6029, retire send space estimation via zfs_ioc_send add small wrapper around libzfs_core lzc_send_space libzfs every legacy zfs_ioc_send consumer along userland counterpart estimate_ioctl leverage request send space estimation legacy functionality zfs_ioc_send left untouched compatibility purpose reviewed thomas caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6029,,
2946,1afc54f7f4f88902d0a3a3d88f6c7c6311c886ee,ichard Lowe <richlowe@richlowe.net>, 2012-07-08 19:01:30 +0100,6582, openzfs 2976 remove useless offsetof macro authored richard lowe richlowe richlowe.net reviewed josef jeff sipek jeffpc josefsipek.net reviewed igor kozhukhov ikozhukhov gmail.com reviewed andy stormont andyjstormont gmail.com approved dan mcdonald danmcd omniti.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 2976 openzfs commit http github.com openzfs openzfs commit 5c5f137 close 6582,,
2947,d22323e89f13975e1a60860aa78609584f00a606,vozden Neskovic <neskovic@gmail.com>, 2017-08-30 21:09:18 +0200,6575, dmu_objset release bonus buffer failure path reported kmemleak testing new patch  unreferenced object size 1024 comm z_upgrade pid 17842 jiffy 4296870904 age 8746.268s backtrace kmemleak_alloc 0x7a 0x100 __kmalloc_node 0x26c 0x510 0x39 0xa0 zfs dmu_zfetch_init 0x73 0xe0 zfs dnode_create 0x12c 0x3b0 zfs dnode_hold_impl 0x1096 0x1130 zfs dnode_hold 0x23 0x30 zfs 0x6b 0x370 zfs dmu_bonus_hold 0x1e 0x30 zfs 0x114 0x310 zfs 0xd8 0x150 zfs 0x136 0x1e0 zfs kthread 0x119 0x150  reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed gvozden neskovic neskovic gmail.com close 6575,,
2948,74ea6092d0693b6e1c6daaee0fdc79491697996c,li Rosenthal <eli.rosenthal@delphix.com>, 2016-06-02 21:06:18 -0700,6583, openzfs 7028 support emptying destroying avl tree authored eli rosenthal eli.rosenthal delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved gordon ross gordon.ross nexenta.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7028 openzfs commit http github.com openzfs openzfs commit 86f617e close 6583,,
2949,de327eccbb063c2321a40e167ad5c5b54ce2c227,teve Dougherty <sdougherty@barracuda.com>, 2015-11-10 19:41:10 -0500,6581, openzfs 6447 handful nvpair cleanup authored steve dougherty sdougherty barracuda.com reviewed josef jeff sipek jeffpc josefsipek.net reviewed andy stormont astormont reviewed garrett amore garrett damore.org approved robert mustacchi joyent.com reviewed brady dev.fs.zfs gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 6447 openzfs commit http github.com openzfs openzfs commit 759e89b close 6581,,
2950,ecaebdbcf693d9f08844e04dc97f6859b7c37c80,ndriy Gapon <avg@icyb.net.ua>, 2015-11-12 11:23:37 -0800,6580, openzfs 5778 doe recognize authored andriy gapon avg icyb.net.ua reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com approved dan mcdonald danmcd omniti.com reviewed brady dev.fs.zfs gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 5778 openzfs commit http github.com openzfs openzfs commit bf4d553 close 6580,,
2951,24ded86e8dd528b056d73630ff33e526f9540dbc,atthew Ahrens <mahrens@delphix.com>, 2016-08-04 16:16:29 -0700,6579, openzfs 7261 nvlist code enforce name length limit authored matthew ahrens mahrens delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed george wilson george.wilson delphix.com reviewed robert mustacchi joyent.com approved dan mcdonald danmcd omniti.com reviewed brady dev.fs.zfs gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7261 openzfs commit http github.com openzfs openzfs commit 48dd5e6 close 6579,,
2952,006309e8d75b22efc7418095e408b3b3774ef8ea,atthew Ahrens <mahrens@delphix.com>, 2017-04-03 09:47:11 -0700,6578, openzfs 8375 kernel memory leak nvpair code authored matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed prashanth sreenivasa pks delphix.com reviewed robert mustacchi joyent.com approved dan mcdonald danmcd joyent.com reviewed brady dev.fs.zfs gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8375 openzfs commit http github.com openzfs openzfs commit 843c211 close 6578,,
2953,1ea8942faa90c1787f3ad1bda44dc26bfc3186da,laviss <alaviss@users.noreply.github.com>, 2017-08-30 00:17:49 +0700,6571, libtpool clone affinity supported pthread_attr_ get set affinity_np glibc commit disable code path use function non glibc system fix following building musl libzfs.so undefined reference libzfs.so undefined reference reviewed brian behlendorf behlendorf1 llnl.gov signed leorize alaviss close 6571,,
2954,0d3980acbcca00f495926a1d6b0886e0ea1f6589,ichard Yao <richard.yao@clusterhq.com>, 2014-09-23 14:29:30 -0400,2734, implement enable debuginfo force debuginfo inspection ubuntu 14.04 x64 system revealed config file used build kernel image differs config file used build kernel module presence insufficient show kernel built debuginfo cursory analysis debuginfo provided size kernel strongly suggests built module installing linux image uname dbgsym obvious effect debuginfo provided either module kernel consequence issue report distribution ubuntu derivative build kernel module without debuginfo contain nonsensical backtraces therefore desireable force generation debuginfo implement enable debuginfo since build system build userspace component kernel module generic enable debuginfo option force debuginfo however also support enable debuginfo kernel enable debuginfo user finer grained control enabling debuginfo kernel module work injecting make environment enables generation debuginfo kernel build system linux kernel build environment slightly different int hat cpp adding would fix would also cause build failure kernel already set would complicate use dkm environment support range kernel therefore undesireable could write compatibility shim enable explicitly disabled forgo unnecessary nothing zol kernel cpp time unlikely change enabling debuginfo userspace component done injecting cppflags necessary build system honor environment cppflags appending actual cppflags used supported consistency reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao richard.yao clusterhq.com close 2734,,
2955,6f174823cef105860a11f757f092942653c17869,ichard Yao <richard.yao@clusterhq.com>, 2014-09-23 13:31:33 -0400,2734, make enable debug fail given bogus args currently bogus option enable debug become disable debug mean passing enable debug true analogous disable debug result switch as_case allow fail given bogus option also modify text printed clarify enable debug enables assertion reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao richard.yao clusterhq.com close 2734,,
2956,1e0457e7f5384b0328ea499083120dd191d80c90,atthew Ahrens <mahrens@delphix.com>, 2017-08-29 09:00:28 -0700,6551, enhance comment large dnode project fix nit comment large dnodes also import commit message comment code making accessible reviewed rottegift reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george wilson george.wilson delphix.com signed matt ahrens mahrens delphix.com close 6551,,
2957,2209e40981e887c773914ec0f3b73cedf45ddb7d,bavatar <dbavatar@gmail.com>, 2017-08-24 13:48:23 -0400,6528, linux 4.8 compatibility fix stats vm_node_stat must used instead vm_zone_stat unfortunately old code still compiles potentially leading silent failure  akamai 3816601 regression zfs dropcache test reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen tuxoko gmail.com signed debabrata banerjee dbanerje akamai.com close 6528,,
2958,076e9b946ef7a706ce2926c29912c467cdeddab6,eorge Melikov <mail@gmelikov.ru>, 2017-08-24 20:36:17 +0300,6553, remove copyright duplicate zpool man page reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 6553,,
2959,2fb1a234ab6912399336c8d459b1e40f67bc823e,hrisrd <chris@onthe.net.au>, 2017-08-25 03:31:59 +1000,6552, dbuf_cons deduplicate remove harmless duplicate introduced commit d3c2ae1 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chris dunlop chris onthe.net.au close 6552,,
2960,d7323e79a61fa7c6dd0b4bbcf4e5658c4fbea3dd,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-08-24 10:30:42 -0700,6549, openzfs 8547 update mandoc 1.14.3 authored yuri pankov yuri.pankov nexenta.com reviewed robert mustacchi joyent.com approved richard lowe richlowe richlowe.net reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8547 openzfs commit http github.com openzfs openzfs commit c66b804 close 6549,,
2961,e4b6b2db124eac51580833d45d83dfde05cbc55c,lek P <alek-p@users.noreply.github.com>, 2017-08-24 10:27:20 -0700,6538, openzfs 8414 implemented zpool scrub pause resume authored alek pinchuk apinchuk datto.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed brad lewis brad.lewis delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed matt ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov approved dan mcdonald danmcd joyent.com ported alek pinchuk apinchuk datto.com openzfs issue http www.illumos.org issue 8414 openzfs commit http github.com openzfs openzfs commit c29616076 close 6538,,
2962,9b8407638da71ea9f4afb21375f991869f19811f,om Caputi <tcaputi@datto.com>, 2017-08-23 19:54:24 -0400,6545, send recv fix following b52563 patch fix several issue discovered encryption patch merged fixed bug encrypted datasets could attempt receive embedded data record fixed bug dirty record created recv code properly setting dr_raw flag fixed typo dmu_tx_commit changed dmu_tx_abort fixed error handling bug unrelated encryption patch dmu_recv_stream reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6512 close 6524 close 6545,,
2963,db4c1adaf82db7815baa675d7df3952f46b07ae9,OLi <loli10K@users.noreply.github.com>, 2017-08-22 20:53:40 +0200,6535, add support dmu_otn_ type dbufstat.py reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6535,,
2964,05f85a6a64e999748ffbdf7a76b406f0f0ceb8b3,hunwei Chen <tuxoko@gmail.com>, 2017-08-21 13:11:11 -0700,6529, fix use fnvlist use fnvlist user input would allow user easily panic zfs reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed alek pinchuk apinchuk datto.com signed chunwei chen david.chen osnexus.com close 6529,,
2965,551905dd475c6b4c4fa87d7734f018084a755af8,vozden Neskovic <neskovic@gmail.com>, 2017-08-04 12:23:10 +0200,6461, vdev_mirror kstat observables preferred vdev reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 6461,,
2966,d6c6590c5dd727832a58e77f7830049631b0c266,vozden Neskovic <neskovic@gmail.com>, 2017-08-04 11:29:56 +0200,6461, vdev_mirror load balancing fix vdev_queue track last position vdev including size order detect linear access following zio remove duplicate vq_lastoffset vdev_mirror correctly calculate zio offset signedness issue deprecate add zio offset leaf vdevs reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 6461,,
2967,133a5c6598ddc858f5b7ecedaf1364fcfe2e477f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-21 10:00:12 -0700,6520, zimport.sh allow custom pool create option allow custom option passed zpool create creating new pool normally zimport.sh intented prevent accidentally introduced incompatibility want default behavior however introducing known incompatibility feature flag need way disable feature adding line like following commit message feature disabled allowing pool compatibile older version feature encryption disabled additionally fix dev nul dev null typo minor white space formating issue updated fail function print message exit use buildbot silence warning zlib_inflate zlib_default module exist happen build kernel reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6520,,
2968,9000a9fac950d2e2c9578d760dd775ac1ceaa507,OLi <loli10K@users.noreply.github.com>, 2017-08-21 18:31:54 +0200,6437, disable mount canonical path do_mount default mount command invoked zfs mount try resolve path parameter canonical form could lead mount failure cwd contains symlink name dataset mounted fix explicitly disabling mount path reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 1791 close 6429 close 6437,,
2969,f763c3d1df569a8d6b60bcb5e95cf07aa7a189e6,OLi <loli10K@users.noreply.github.com>, 2017-08-21 17:59:48 +0200,6477, fix range locking zil commit codepath since openzfs 7578 1b7c1e5 zvol logbias throughput force wr_indirect itxs zvol_log_write setting itx itx_lr offset length offset length bio zvol_write zvol_log_write offset length later used take range lock zillog zl_get_data function zvol_get_data suppose zvol blocksize push writes offset range locking 4096. mean assertion make dbuf_unoverride longer valid dmu_sync called zilog get_data function holding partial lock dbuf fix taking range lock whole block zvol_get_data reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6238 close 6315 close 6356 close 6477,,
2970,08de8c16f5d322fb594742ea78958385d8ee5b50,OLi <loli10K@users.noreply.github.com>, 2017-08-17 23:28:17 +0200,6515, fix remounting snapshot read write enough preserve restore ms_rdonly superblock flag avoid remounting snapshot read write explicit intention vfs layer readonly bit updated correctly do_remount_sb reviewed chunwei chen tuxoko gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6510 close 6515,,
2971,a1f3a1c05fa9cb06334189813d0e0d556d479620,tbN <btbn@btbn.de>, 2017-08-17 00:51:51 +0200,6519, use sbin openrc run openrc init script using sbin runscript deprecated throw warning still used init script reviewed bunder2015 omfgbunder gmail.com signed btbn btbn btbn.de close 6519,,
2972,c8f9061fc714696a53cf4d14a4567f0a83dbf862,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-15 17:26:38 -0700,6509, retire legacy test infrastructure removed zpios kmod utility header man page removed unused script zpios profile zpios test zpool config smb.sh zpios sanity.sh zpios survey.sh zpios.sh zpool create.sh removed zfs script config.sh.in building make generates common.sh tree path information common.sh.in template file sourced test script used tree testing included package building package make install template create new common.sh appropriate packaging removed unused function variable script common.sh.in minimal path information configuration environment variable remain removed unused script script directory remaining shell script script directory updated cleanly pas shellcheck added checked script renamed test test runner cmd test test runner bin match install location name removed last trace enable debug dmu configure option retired time ago reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6509,,
2973,70322be8dc160f003fa95e034462ad625b325568,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-15 16:40:04 -0700,6516, fix zts grow_pool setup addition test case run right one exposed racy behavior grow_pool setup.sh ubuntu kmemleak builder creating partition device destroying existing one error set_partition 100mb loop0 exited reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6499 close 6516,,
2974,d49d9c2bdc31263536d3b714d7e393b66321886a,ckobras <sckobras@users.noreply.github.com>, 2017-08-15 00:18:26 +0200,6484, vdev_id implement slot numbering port hpe hardware hpsa driven adapter single phy reported individual per port phys phy entry port_dir break topology detection current sas_handler code instead slot information derived directly port number change implement new slot keyword port similar lun assumes default phy port individual phy entry found allows use sas_direct topology current hpe dxxxx apollo 45xx jbods reviewed brian behlendorf behlendorf1 llnl.gov signed daniel kobras d.kobras science computing.de close 6484,,
2975,d977122da92e870a6a8990437ced845a04c39cfc,on Brady <dev.fs.zfs@gmail.com>, 2017-08-14 18:17:15 -0400,6345, add corruption failure option zinject added corrupt error option flip bit data read operation useful generating checksum error device layer mirror config example also used validate diagnosis checksum error zfs diagnosis engine reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 6345,,
2976,42a76fc8d757ab82fc1ce8e5e1f2079e07a5b9d4,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-08-14 19:56:04 +0200,6491, dracut make module setup.sh shebang explicit source dracut bash script practical difference small correct bin bash system e.g debian derivative use bin dash bin default reviewed brian behlendorf behlendorf1 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 6491,,
2977,b52563034230b35f0562b6f40ad1a00f02bd9a05,om Caputi <tcaputi@datto.com>, 2017-08-14 13:36:48 -0400,5769, native encryption zfs linux change incorporates three major piece first change keystore manages wrapping encryption key encrypted datasets command mostly involve manipulating new dsl crypto key zap object live encrypted dataset dsl crypto key protected user key level indirection allows user change key without encrypting entire datasets change implement new subcommands zfs load key zfs unload key zfs change key allow user manage encryption key setting addition several new flag property added allow dataset creation make mounting unmounting convenient second piece patch provides ability encrypt decyrpt authenticate protected datasets object set maintains merkel tree message authentication code protect lower layer similarly checksum maintained part impact zio layer handle actual encryption generation mac well arc dmu need able handle encrypted buffer protected data last addition ability raw encrypted sends receives idea send raw encrypted compressed data receive exactly backup system mean dataset receiving system protected using user key use sending side datasets efficiently backed untrusted system without fear data compromised reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed jorgen lundman lundman lundman.net signed tom caputi tcaputi datto.com close 494 close 5769,,
2978,376994828fd3753aba75d492859727ca76f6a293,hunwei Chen <tuxoko@gmail.com>, 2017-08-11 08:57:54 -0700,6494, fix null pointer o_sync read snapshot read file open o_sync trigger zil_commit however snapshot zil reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed chunwei chen david.chen osnexus.com close 6478 close 6494,,
2979,761b8ec6bf98f39550353173ad7bec5306073f9c,aurkuma <gaurkuma@users.noreply.github.com>, 2017-08-11 08:56:24 -0700,6481, allow longer spa name stats pool name 256 char long today proc spl kstat zfs name limited character change allows bigger pool name reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed gaurkuma gauravk.18 gmail.com close 6481,,
2980,9df9692637aeee416f509c7f39655beb2d35b549,aurkuma <gaurkuma@users.noreply.github.com>, 2017-08-11 08:53:35 -0700,641, allow longer spa name stats reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed gaurkuma gauravk.18 gmail.com close 641,,
2981,c25b8f99f8dcbe898b81728e6a9dab107df4fc0b,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-11 08:51:44 -0700,6495, simplify thread mutexs rwlocks simplify thread mutexs rwlocks update function use trick illumos specifically cast new pthread_t void pointer return kthread_t avoids issue associated managing wrapper structure safe long caller never attempt dereference update function prototype passed pthread_create match expected prototype getting away since function explicitly cast replaced direct call thread_create code consistency consumer libzpool use proper wrapper mutex_held call converted mutex_held removed mutex_owner call retired interface instead use mutex_held provides information allows implementation detail hidden case use pthread_equals function kthread_t kmutex_t krwlock_t krwlock_t type non essential field removed case kthread_t kcondvar_t could directly typedef pthread_t pthread_cond_t respectively removed extra asserts thread mutex rwlock wrapper function practice pthreads already provides vast majority check long check return code removing code wrapper help readability added ts_joinable state flag pas request joinable rather detached thread standard thread_create state least invasive way pas information used ztest 3600 chunwei chen tuxoko gmail.com reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 4547 close 5503 close 5523 close 6377 close 6495,,
2982,21df134f4cb1c1e05eb89992b71573843df62b27,anjeevbagewadi <sanjeev.bagewadi@gmail.com>, 2017-08-11 04:23:40 +0530,6384, allow zinjected zio fault injection enabled could set generate fma event update stats hence ignore flag process zios better fix would add another flag zio_t indicate zio failed zinject rule however considering fact debug bit could crude check using global flag set zinject record added reviewed brian behlendorf behlendorf1 llnl.gov signed sanjeev bagewadi gmail.com close 6383 close 6384,,
2983,b58237e769a4fa57ab8846b61ce59e5c73035b26,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-08-11 00:45:25 +0200,6492, man page fix ztest.1 man page fix typo zfs module parameters.5 man page fix grammar reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed fabian grã¼nbichler f.gruenbichler proxmox.com close 6492,,
2984,bbefaeba2966512080541dac3c10589327686c1a,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-08-11 00:23:43 +0200,644, make module spl spl kmem.c non executable probably accidentally committed  fix handle null case reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed gvozden neskovic neskovic gmail.com signed fabian grã¼nbichler f.gruenbichler proxmox.com close 644,,
2985,945b7f1c63e3a12d08349afb986b7dfaca370222,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-08-11 00:22:31 +0200,643, spl module parameters.5 manpage fix macro .sh macro troff groff man .sh section header assume .sp line break intended like rest man page reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov close 643,,
2986,a02fa347b75266f40c8f571d7d63a21ec7f6f13d,abian-Gruenbichler <f.gruenbichler@proxmox.com>, 2017-08-11 00:21:54 +0200,642, splat.1 manpage fix spelling hexadecimal reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov close 642,,
2987,4334df53539c280f847350cb5b11180993229ef9,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-08-10 07:53:10 -0700,6487, disable rsend_024_pos test case frequently hang buildbot test builder disable reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6487,,
2988,46364cb2f35545a7fc915df9593b719a94c43a83,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-09 15:31:08 -0700,6442, add libtpool thread pool openzfs provides library called tpool implement thread pool user space application porting library mean zpool utility longer need borrow kernel mutex taskq interface libzpool code updated use tpool library behaves similar fashion porting libtpool relatively straight forward minimal modification needed core change fully convert library use pthreads updated signal handling lmalloc lfree converted calloc free implemented portable function finally update build system libzpool.so longer linked zfs zpool etc required libzfs zcommon soures added way always removing libzpool dependency resulted several build issue needed resolved moved zfeature support module zcommon moved ratelimiting module zfs zfs_ratelimit.c moved lib libspl gethostid.c removed use cmn_err zcommon source removed dprintf_setup call zpool_main.c zfs_main.c removed highbit lowbit removed unnecessary library dependency makefiles removed fletcher kstat user space added sha2 support explicitly libzfs added highbit64 lowbit64 zpool_util.c reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6442,,
2989,5146d802b4e371cab1d6db79bea482c056be7bf2,oris Protopopov <bprotopopov@users.noreply.github.com>, 2017-08-09 14:10:47 -0400,6342, zv_suspend_lock zvol_open zvol_release acquire zv_suspend_lock first open last close reviewed brian behlendorf behlendorf1 llnl.gov signed boris protopopov actifio.com close 6342,,
2990,520faf5ddcb1a9536f53438963d1c96678040466,aurkuma <gaurkuma@users.noreply.github.com>, 2017-08-09 11:04:41 -0700,6463, crash dbuf_evict_one dtrace_probe update tracepoint safely handle null dmu_buf_impl_t pointer reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed gaurkuma gauravk.18 gmail.com close 6463,,
2991,6a8ee4f71dd957096922a50e318fd5350d2e9061,ed Bass <bass6@llnl.gov>, 2017-08-08 08:41:31 -0700,6465, add debug log entry failed receive record log content receive record error occurs writing pool may help determine cause backup stream rejected invalid reviewed matthew ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 6465,,
2992,9631681b75336ec6265d8fa5cecb353687c1f373,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-08 08:38:53 -0700,6439, fix dnode allocation race performing concurrent object allocation using new multi threaded allocator large dnodes possible allocate overlapping large dnodes case handled detecting error returned dnode_hold_impl logic checked returned dnp null dnp variable reset null retrying resolve issue properly checking return value dnode_hold_impl additionally possible dnode_hold_impl would misreport dnode free fact use could occurs two reason per slot zrl_lock must held entire critical section includes alloc free new dnode assigned children_dnodes additionally zrl_lock range must held protect moving dnodes dn_ot_type solely relied upon check type allocating new dnode type dmu_ot_none dnode_create latter dnode_allocate called transition new type mean window allocating mistaken free dnode reviewed giuseppe natale dinatale2 llnl.gov reviewed ned bass bass6 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6414 close 6439,,
2993,9243b0fb4784803720a0a5336cc3ded969a779e6,oris Protopopov <bprotopopov@users.noreply.github.com>, 2017-08-08 11:31:52 -0400,609, add assert lock detect case dispach preallocated taskq work item one queue concurrently also please see discussion zfsonlinux zfs 3840 reviewed brian behlendorf behlendorf1 llnl.gov signed boris protopopov actifio.com close 609,,
2994,d19a6d5c80fb24451a7d76716eaf38d3a3f933c7,arsten Kretschmer <kkretschmer@gmail.com>, 2017-08-04 20:14:48 +0200,6452, dracut install command required vdev_id vdev_id script requires awk grep head use dracut_install ensure command available initrd environment reviewed brian behlendorf behlendorf1 llnl.gov signed karsten kretschmer kkretschmer gmail.com close 6443 close 6452,,
2995,cce83ba0ecacc45c79709e8b3def8dc8a046fffe,hunwei Chen <tuxoko@gmail.com>, 2017-08-04 09:57:58 -0700,640, fix use free walk tq_active_list show tqent_func tqent_arg however likely task entry freed function call cause use free bug fix duplicate task entry stack struct assign instead tqt_task way tq_lock alone guarantee safety reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 638 close 640,,
2996,6ecfd2b55333dbaf8755bcab53ae9d37b6bca7c1,hunwei Chen <tuxoko@gmail.com>, 2017-08-03 10:41:42 -0700,636, add __divmoddi4 __udivmoddi4 bit arch gcc seems use __udivmoddi4 bit division bit arch patch implement get undefined reference error reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed chunwei chen david.chen osnexus.com close zfsonlinux zfs 6417 close 636,,
2997,1e1c398033384106c8ee96435ba0683797b41a46,en Haerens <sen@senhaerens.be>, 2017-08-03 18:56:15 +0200,6445, fix zpool event scripted mode tab separator reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed sen haerens sen senhaerens.be close 6444 close 6445,,
2998,b0bd8ffecd70b46e584e2e52ea74f2373b544217,OLi <loli10K@users.noreply.github.com>, 2017-08-03 18:43:17 +0200,6449, fix parsable zfs get compressratios consistent change introduced bc2d809 zpool get dedupratio doe add trailing output reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6436 close 6449,,
2999,e3bdcb8ad88e7a90726193c9afe96a713729c928,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-08-03 08:57:43 -0700,6418, retry zfs destroy busy rsend test rsend test test suite frequently create destroy datasets possible zfs destroy return error code indicating dataset busy simply use log_must_busy case retry destroying datasets fix rsend test case avoid unmounting remounting filesystems cleanup reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6418,,
3000,ecb2b7dc7f8f7273c215fb30c984bde08e75b852,ed Bass <bass6@llnl.gov>, 2017-08-02 21:16:12 -0700,6441, use set_error constant non zero return code update many return assignment statement follow convention using set_error macro returning hard coded non zero value function aid debugging recording error code debug log reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed ned bass bass6 llnl.gov close 6441,,
3001,98cdcb8286db2dadf369a22d33a53e49b11e3288,leg Drokin <green@linuxhacker.ru>, 2017-08-02 14:45:16 -0400,632, remove misguided check take plain unsafe peek inside kernel mutex structure make assumption kernel doe internal field like owner kernel happy stop expected thing like tracing lock owner load tainted module like spl zfs gpl get instant assertion failure like verify3 volatile typeof zo_lock m_mutex owner zo_lock m_mutex owner void failed null panic zfs_onexit.c 104 showing stack process 3626 cpu pid 3626 comm mkfs.lustre tainted 3.10.0 debug hardware name red hat kvm bios 0.5.1 2011 call trace dump_stack 0x19 0x1b spl_dumpstack 0x44 0x50 spl spl_panic 0xbf 0xf0 spl 0x17c 0x280 zfs zfsdev_release 0x48 0xd0 zfs reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com reviewed gvozden neskovic neskovic gmail.com signed oleg drokin green linuxhacker.ru close 639 close 632,,
3002,261a3151e16851304eb3e36af2681d1d1579b08f,vozden Neskovic <neskovic@gmail.com>, 2017-08-03 05:42:58 +0200,637, spl mutex fix race mutex_exit prevent race accessing kmutex_t mutex embedded ref counted structure reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed gvozden neskovic neskovic gmail.com close zfsonlinux zfs 6401 close 637,,
3003,549423c0d4b8176110283a5cf90c6393b2a537d4,rian Behlendorf <behlendorf1@llnl.gov>, 2017-08-02 15:07:11 -0400,633, revert remove misguided check reverts commit introduced build failure need resolved merged signed brian behlendorf behlendorf1 llnl.gov issue 633,,
3004,d89616fda88bc030aaff758d37ede7d35e58841a,leg Drokin <green@linuxhacker.ru>, 2017-08-02 14:45:16 -0400,633, remove misguided check plain unsafe peek inside kernel mutex structure make assumption kernel doe internal field like owner kernel happy stop expected thing like tracing lock owner load tainted module like spl zfs gpl get instant assertion failure like verify3 volatile typeof zo_lock m_mutex owner zo_lock m_mutex owner void failed null panic zfs_onexit.c 104 showing stack process 3626 cpu pid 3626 comm mkfs.lustre tainted 3.10.0 debug hardware name red hat kvm bios 0.5.1 2011 call trace dump_stack 0x19 0x1b spl_dumpstack 0x44 0x50 spl spl_panic 0xbf 0xf0 spl 0x17c 0x280 zfs zfsdev_release 0x48 0xd0 zfs reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed oleg drokin green linuxhacker.ru close 632 close 633,,
3005,6710381680b0f551c37627e3a5a4886ccf99983f,ony Hutter <hutter2@llnl.gov>, 2017-08-02 09:08:38 -0700,6440, record zio io_delay read writes investigating http github.com zfsonlinux zfs issue 6425 noticed ioctl zios setting zio io_delay correctly would set start time never set end time since ioctls skip straight zio_done causing spurious delayed event appear would eventually get rate limited displayed missed event message zed get around problem patch set zio io_delay read write zios since care anyway reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6425 close 6440,,
3006,af0f842883ceb7e88b8f4d1fe6ad80b6ad951827,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-31 16:54:34 -0700,6419, use kstat uberblock count use kstat get accurate count uberblock update using loop zdb potentially miss uberblocks reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6407 close 6419,,
3007,c7a7601c08d3f7db42dfca46e0ad8aa287df43da,OLi <loli10K@users.noreply.github.com>, 2017-07-31 20:07:05 +0200,6426, fix volmode none property behavior import time import time spa_import call directly current implementation way avoid device node creation volmode none fix enforcing volmode none directly zvol_alloc reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6426,,
3008,1e0565d10a5f75bd15104df3db3264554e8b2dd1,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-29 13:25:53 -0700,6424, fix aarch64 build add aarch64 list architecture sanitize ldflags environment see fb963d33 detail signed brian behlendorf behlendorf1 llnl.gov close 6424,,
3009,eed143dfa6af0e004d0239bd3297b30e45b8c4d3,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-29 13:24:39 -0700,635, fix aarch64 build add aarch64 list architecture sanitize ldflags environment see e0aacd9b detail signed brian behlendorf behlendorf1 llnl.gov close 635,,
3010,c1dd2f783a30d001f79648dab5ae5bbfe5614759,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-28 22:37:27 -0700,6422, disable test case regularly killed test runner zfs test buildbot disable investigation done reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6422,,
3011,650258d7c786b8e62ca847a926f6f038cd3e5d94,OLi <loli10K@users.noreply.github.com>, 2017-07-28 23:12:34 +0200,6339, zfs promote rename ... recv error middle incremental zfs receive child ... recv exist run zfs promote ... recv work zfs get confused status new dataset attempting promote error similarly renaming ... recv datasets allowed reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 4843 close 6339,,
3012,f06f53fa3f566056fd3a03737032f1bd6bcf48bc,ndriy Gapon <avg@FreeBSD.org>, 2017-02-28 23:32:55 +0200,6375, openzfs 7915 check l2arc_evict could use cleaning authored andriy gapon avg freebsd.org reviewed dan kimmel dan.kimmel delphix.com reviewed prakash surya prakash.surya delphix.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7915 openzfs commit http github.com openzfs openzfs commit 836a00c close 6375,,
3013,e98b6117252acb4931bbcc0ff6b164269273de4e,ndriy Gapon <avg@FreeBSD.org>, 2017-07-17 15:31:30 +0300,6403, openzfs 8373 txg_wait zil commit path authored andriy gapon avg freebsd.org reviewed prakash surya prakash.surya delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8373 openzfs commit http github.com openzfs openzfs commit 7f04961 close 6403,,
3014,0f69f42b43637548bec225ed25fa71b032de114e,under2015 <omfgbunder@gmail.com>, 2017-07-27 22:06:34 -0400,6410, correct man page generation reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed bunder2015 omfgbunder gmail.com close 6409 close 6410,,
3015,ccad64314ab55963c1a0731ff62c8cf6c6976f28,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-26 10:10:28 -0700, , tag zfs 0.7.0 meta file changelog updated signed brian behlendorf behlendorf1 llnl.gov,,
3016,1f2671b9c9108add67bae998e7a4e41352c2a12f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-26 10:08:57 -0700, , tag spl 0.7.0 meta file changelog updated signed brian behlendorf behlendorf1 llnl.gov,,
3017,bff245dd342f7318bfa88e471e584c2c46f8c4db,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-26 09:44:21 -0700,6404, openzfs 8508 mounting zpool bit platform panic authored justin hibbits chmeeedalf gmail.com reviewed matt ahrens mahrens delphix.com approved dan mcdonald danmcd joyent.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8508 openzfs commit http github.com openzfs openzfs commit 15fc257 close 6404,,
3018,8740cf4a2f5f7ff7fb6c214e0baf06356b2870b8,ed Bass <bass6@llnl.gov>, 2017-07-25 23:09:48 -0700,6400, add line info set_error zfs debug log redefine set_error macro term __dprintf error return code get logged tracepoint event tracepoints enabled zfs debug log entry also allows use definition set_error kernel user space define new debug flag 512 may bitwise zfs_flags setting flag enables dprintf set_error message debug log setting  equivalent done sake simplicity leaving unset suppresses set_error message help avoid cluttering log enable set_error logging run echo sys module zfs parameter echo 512 sys module zfs parameter zfs_flags remove tracepoints event class since set_error __dprintf sacrifice bit granularity selecting individual tracepoint event enable make code simpler include file function line number information debug log entry information added message buffer __dprintf result tracepoints event class changed parameter interface single parameter reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 6400,,
3019,410f7ab5943684ef74be0e58ae17d3a0278ad0be,leg Drokin <green@linuxhacker.ru>, 2017-07-26 02:03:12 -0400,634, module parameter enable spl_panic panic kernel unattended operation often useful node panic reboot encounter problem opposed sit indefinitely waiting somebody discover implement spl_panic_crash module parameter set nonzero cause spl_panic call panic reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed oleg drokin green linuxhacker.ru close 634,,
3020,9ff13dbe921c7177faee3f10c832e88bded39920,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-25 18:57:00 -0700,6402, fix zpool features.5 indentation feature described zpool features.5 man page incorrectly indented fix reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6402,,
3021,73aac4aa410121ddcc08bd7fd15d987caf101584,ed Bass <bass6@llnl.gov>, 2017-07-25 18:52:40 -0700,6396, additional send stream validity checking check dmu whether object record send stream received contains unsupported dnode slot count return error doe failure catch unsupported dnode slot count would result panic spa attempt increment reference count large_dnode feature pool feature disabled normally issue well formed send stream would flag set contains large dnodes rejected unsupported required feature disabled change add missing object record field validation add missing stream feature flag check  consolidate repetitive comment block update zstreamdump print dnode slot count dn_slots object record running verbose mode reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed matthew ahrens mahrens delphix.com signed ned bass bass6 llnl.gov close 6396,,
3022,3f759c0c736d3a636614406ac0d6f9335819d6e9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-25 12:20:52 -0700,6399, fix zpool clear suspended pool zpool clear able resume suspended otherwise healthy pool 4a283c7 accidentally introduced new code path call txg_wait_synced suspended pool chance resume via zio_resume result zpool clear command hanging indefinitely waiting txg synced fix avoiding call txg_wait_synced reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6399,,
3023,f269060a24d1f43a30d647e0835ca4fcaac6bae9,ustin BedÅ <cu@cua0.org>, 2017-07-26 03:30:20 +1000,6398, fix autoconf detection previous autoconf test presence invocation incorrect type signature producing warning compiler test run get elevated error compiling werror format security causing autoconf falsely infer present update testing code match invocation used include linux vfs_compat.h reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed justin bedo cua0.org close 6398,,
3024,e889f0f520971fc2688189cdbe0efde2ccc8ec65,laf Faaland <faaland1@llnl.gov>, 2017-07-14 18:15:00 -0700,6388, report immediately need perform activity check detecting user must set system hostid pool multihost property spa_get_hostid returned initial call provided information required reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6388,,
3025,0582e403221008480657a88e8f50aecc88397c80,laf Faaland <faaland1@llnl.gov>, 2017-07-20 17:54:26 -0700,6387, add callback add callback wake running mmp thread changed necessary interval changed large value significantly lower one pool imported multihost property enabled without commit mmp thread doe wake detect new interval waited old multihost interval time user monitoring mmp writes via provided kstat would led believe changed setting work added test zts mmp verify new functionality working added test ztest start stop mmp thread call code signal sleeping mmp thread test deadlock similar locking issue reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6387,,
3026,60f510344596b1f2f890df2e96282d586edf6aaf,laf Faaland <faaland1@llnl.gov>, 2017-07-14 16:32:55 -0700,6389, skip activity check zhack import zhack feature stat performs read import mmp activity check necessary reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6388 close 6389,,
3027,b9373170e3e346733f5666dd80727cb6e05cd5d3,laf Faaland <faaland1@llnl.gov>, 2017-07-18 18:11:08 -0700,6379, add zgenhostid utility script turning multihost property requires hostid set allow zfs determine foreign system attemping import pool error message instructing user set hostid refers genhostid genhostid available suse linux commit add script modeled genhostid user zgenhostid check etc hostid file doe exist creates one store value user provided hostid argument value used otherwise random hostid generated stored differs centos version genhostid overwrite etc hostid file even though manpages state otherwise man page zgenhostid added one genhostid put zgenhostid believe appropriate mmp test modified use zgenhostid set hostid instead using spl_hostid module parameter zgenhostid replace existing etc hostid file new call required reviewed giuseppe natale dinatale2 llnl.gov reviewed andreas dilger andreas.dilger intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6358 close 6379,,
3028,ffb195c256f8a74a87c3834258ec90c513d66adb,laf Faaland <faaland1@llnl.gov>, 2017-07-24 08:48:28 -0700,6394, release scl_state map_write_done config lock must held duration mmp write since executed via map_nowait done function place know write completed since scl_state taken reader overlapping create deadlock refcount simply increased new queued decreased complete test case added exercise probe call path verify fix prevent regression reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 6394,,
3029,f43615d0cc22d7db496c1291c84e64e269ca51d9,laf Faaland <faaland1@llnl.gov>, 2017-07-18 11:43:55 -0700, , revert fix vdev_probe call wrt scl_state_all reverts commit cc9c6bc causing intermittent test failure buildbot correct fix locking issue applied separate patch reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov,,
3030,f6837d9b53d44547d640040d5db9e7d152664d4f,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-24 13:02:42 -0700,6395, increase delay zed log event test zed event test case brief delay introduced allow event make zed log least one buildbot builder second delay long enough therefore increasing delay ensure zed enough time write log reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6395,,
3031,871e07321cc66fcea4dccc88fd2a754959ffa679,OLi <loli10K@users.noreply.github.com>, 2017-07-24 21:56:49 +0200,6374, fix buffer overflow creating pool version v11 need account additional space needed origin dataset also snapshotted poolname origin origin reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed loli10k ezomori.nozomu gmail.com close 6374,,
3032,83a5e4d6b9c2509efa25ea4cfceba3cd313bf920,hunwei Chen <tuxoko@gmail.com>, 2017-07-24 12:49:27 -0700,6369, fix zero_label replace spare replacing disk non wholedisk spare zero_label wholedisk case already skip fact zero_label function fail saying device busy already opened exclusively since error checking replace command succeed causing great confusion reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 6369,,
3033,d6bcf7ff5e97df3195d34269b1b72952b4a00778,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-24 11:53:59 -0700,6359, restrict zpool iostat status search path zpool iostat status supposed restricted search path currently prevent arbitrary script executed disallow command reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed ned bass bass6 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6353 close 6359,,
3034,b6e5c40382a52206f48cb26cc20ed85294e1b0a9,laf Faaland <faaland1@llnl.gov>, 2017-07-24 11:22:10 -0700,6360, use correct macro mmp.c commit 379ca9c multi modifier protection mmp used convert nanosecond tick use cv_timedwait ddi_get_lbolt correct macro defined within spl kernel space within zfs_context.h user space reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed olaf faaland faaland1 llnl.gov close 6357 close 6360,,
3035,802ae562ed817af978e2636806db1952d29ee86d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-24 11:16:58 -0700,6352, fix coverity defect cid 165755 cid 165755 division modulo zero divide_by_zero reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed olaf faaland faaland1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6352,,
3036,39554216dff2c8bd4a2fa296644b5e3723ce8ed3,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-24 11:10:25 -0700,6382, use log_must_busy cleanup use log_must_busy destroying snapshot dataset cleanup reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6382,,
3037,0c656a964da7993847943c438c5abee7f46aa06d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-24 11:03:50 -0700,6362, disable nbmand test kernel support change allows send c_props run linux kernel support mandatory locking linux kernel version greater equal 4.4 longer support mandatory locking test suite account reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6346 close 6347 close 6362,,
3038,c89a02a26ae8f314c621ffd5542a3502a196b7d0,ony Hutter <hutter2@llnl.gov>, 2017-07-24 10:58:14 -0700,6350, add new fsck return code failing fedora newer version fsck returning different code previous version new fsck error code valid added test patch reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed olaf faaland faaland1 llnl.gov signed tony hutter hutter2 llnl.gov close 6350,,
3039,cd47801828c760efebbbb1fad7f7899369d8bce7,OLi <loli10K@users.noreply.github.com>, 2017-07-24 19:52:53 +0200,628, avoid warn procfs kstat collision load zfs pool spa_name equal existing kstat would create duplicate entry procfs like instance zfs pool named zil would kstat txgs module zfs zil intalled proc spl kstat zfs zil unfortunately already kstat named zil module zfs installed procfs location avoid issue skipping duplicate entry creation procfs reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 628,,
3040,829f9251cf03f1b385a46960539380dd70555270,erapheim Dimitropoulos <serapheim@delphix.com>, 2017-07-13 07:32:53 -0700,6390, openzfs 8491 uberblock disk padding reserve space smoothly merging zpool checkpoint mmp zfs zpool checkpoint feature dxos added new field uberblock multi modifier protection pull request zol add three new field uberblock reference http github.com zfsonlinux zfs pull 6279 two change come two different source upstreamed deployed introduce incompatibility want upstream change reserve padding integration smoothly everyone get feature porting note preserved mmp comment uberblock struct authored serapheim dimitropoulos serapheim delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed olaf faaland faaland1 llnl.gov approved gordon ross gwr nexenta.com ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8491 openzfs commit http github.com openzfs openzfs commit d84fa5f close 6390,,
3041,36ba27e9e07b35340ba388e6624e65995595ed92,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-23 19:37:12 -0700,6351, linux 4.13 compat bio bi_status blk_status_t commit torvalds linux 4e4cbee9 bio bi_error field replaced bio bi_status enum describes possible error type reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 6351,,
3042,944117514d2aba081b15faad741e7d0c6b1465c8,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-23 19:32:14 -0700,629, linux 4.13 compat wait queue commit torvalds linux ac6424b9 renamed struct wait_queue struct commit torvalds linux 2055da97 renamed wait_queue_head task_list wait_queue_head head renamed task_list entry reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 629,,
3043,7a8ed6b8b7bb5dde7b5713c75f99aee9bfbc12f2,ed Bass <bass6@llnl.gov>, 2017-07-20 17:04:35 -0700,6370, minor fix zpool iostat documentation 6370 use nested notation denote optional script list element fix space comma smarctl fix typo formatting error reference option fix spelling error reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed tony hutter hutter2 llnl.gov signed ned bass bass6 llnl.gov close 6370,,
3044,4265a9293e49008bf0393fe678c8e8d53429aa1f,eorge Melikov <mail@gmelikov.ru>, 2017-07-14 19:34:35 +0300,6348, fix coverity defect cid 165757 cid 165757 control flow issue missing_break reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 6348,,
3045,ff1cb6bf26cd7d16c6f846ea9199e734025c6d6d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-13 12:08:53 -0700, , tag 0.7.0 rc5 fifth release candidate signed brian behlendorf behlendorf1 llnl.gov ,,
3046,ae42190b7917d5aaa8ec0c0951ff65e8df6fa601,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-13 12:07:59 -0700, , tag 0.7.0 rc5 fifth release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3047,cc9c6bcb7341cf37ccd4dfc939ec2abd4872e4bb,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-11 20:35:34 -0400,6279, fix vdev_probe call outside scl_state_all lock fails call vdev_probe determine health vdev safe long original zio submitted zio_wait hold scl_state_all lock operation zio_no_wait used done callback submit probe outside scl_state_all lock hit assert zio_create assert spa_config_held spa scl_state_all rw_reader resolve issue allowing vdev_probe called waiter indicating caller using zio_wait assumes caller still holding scl_state_all issue mmp specific surfaced testing without patch reproduced running zpool set multihost pool zinject vdev write pool uber reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 745 close 6279,,
3048,379ca9cf2beba802f096273e89e30914a2d6bafc,laf Faaland <faaland1@llnl.gov>, 2017-07-07 20:20:35 -0700,6279, multi modifier protection mmp add multihost pool property control mmp enabled new thread writes uberblocks last slot label set frequency indicate host pool actively imported uberblocks last synced uberblock updated timestamp property default tryimport find best uberblock newest txg timestamp repeatedly checking change found uberblock include result activity test config returned tryimport result reported user zpool import allow user control period mmp writes duration activity test import via new module parameter period specified millisecond activity test duration calculated value mmp_delay best uberblock found initially add kstat interface export statistic multiple modifier protection mmp update include last synced txg number timestamp delay since last mmp update vdev guid vdev label received last mmp update vdev path abbreviated output cat proc spl kstat zfs mypool multihost 0x01 880 105092382393521 105144180101111 txg timestamp mmp_delay vdev_guid vdev_label vdev_path 20468 261337 250274925 68396651780 dev sda 20468 261339 252023374 6267402363293 dev sdc 20468 261340 252000858 6698080955233 dev sdx 20468 261341 251980635 783892869810 dev sdy 20468 261342 253385953 8923255792467 dev sdd 20468 261344 253336622 042125143176 dev sdab 20468 261345 253310522 1200778101278 dev sde 20468 261346 253286429 0950576198362 dev sdt 20468 261347 253261545 96209817917 dev 20468 261349 253238188 8555725937673 dev sdb add new tunable specify number mmp update store history default set zero meaning mmp statistic stored using ztest generate activity automated test mmp function test function interfere test example pool exported run zdb imported add new ztest function alter ztest behavior prevent add new test verify new functionality test provided giuseppe natale reviewed matthew ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed ned bass bass6 llnl.gov reviewed andreas dilger andreas.dilger intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 745 close 6279,,
3049,34ae0ae1749f297c23c3c1680ea552df94ae2122,laf Faaland <faaland1@llnl.gov>, 2017-05-25 13:32:06 -0700,6279, make hostid consistent user kernel space spl_hostid set etc hostid file existed user kernel would different value hostid kernel would user space would depend libc implementation system glibc would generated value probably first byte address see man gethostid comment hostid_read spl detail cause hostid stored label pool config match hostid userspace obtains  since kernel way know libc generated hostid value serf purpose zfs use value patch change user space conform kernel method first checking spl_hostid via sysfs reading etc hostid directly doe look spl_hostid_path set file pointed exists spl_hostid reflect content eliminates call libc gethostid reviewed matthew ahrens mahrens delphix.com reviewed giuseppe natale dinatale2 llnl.gov reviewed ned bass bass6 llnl.gov reviewed andreas dilger andreas.dilger intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 745 close 6279,,
3050,c93d9dff36470434a3677225b820c14986075706,rian Behlendorf <behlendorf1@llnl.gov>, 2017-07-10 15:24:52 -0400,626, cache system hostid historically spl cached system hostid first time accessed done speed subsequent access practice system host rarely accessed inconvenient promptly detect etc hostid configuration change therefore zone_get_hostid updated always refresh system hostid reported reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 626,,
3051,dfbd813ec7b452884f91f134b82f30c6bdcd670c,rakash Surya <prakash.surya@delphix.com>, 2017-07-10 12:44:23 -0700,627, add assert3b verify3b usec2nsec nsec2usec macro reviewed brian behlendorf behlendorf1 llnl.gov signed prakash surya prakash.surya delphix.com close 627,,
3052,12fa0466df8773fc6151e8b55367a1c4f76ec407,ave Eddy <dave@daveeddy.com>, 2017-05-30 11:39:17 -0700,6328, openzfs 6939 add sysevents zfs core command authored dave eddy dave daveeddy.com reviewed patrick mooney patrick.mooney joyent.com reviewed joshua clulow jmc joyent.com reviewed josh wilsdon jwilsdon joyent.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling reviewed alan somers asomers gmail.com reviewed andrew stormont andyjstormont gmail.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 6939 openzfs commit http github.com openzfs openzfs commit ce1577b close 6328,,
3053,314be68aa93a543f89d7c0137f25848e4c692653,om Caputi <tcaputi@datto.com>, 2017-07-12 20:15:24 -0400,6343, fixed verify3_impl bug 682ce104 verify3_impl adjusted 682ce104 value operand omitted variadic argument list patch simply corrects reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tom caputi tcaputi datto.com close 6343,,
3054,cf8738d85374f51298a0872bcd58257bbb4fda6d,OLi <loli10K@users.noreply.github.com>, 2017-07-12 22:05:37 +0200,6233, add port freebsd volmode property volmode property may set control visibility zvol block device allow switching zvol three mode full existing fully functional behaviour default dev hide partition zvol block device none exposing volume outside zfs additionally new zvol_volmode module parameter used control default behaviour functionality used instance backup pool avoid cluttering dev unneeded device original patch mav mav freebsd.org reviewed brian behlendorf behlendorf1 llnl.gov ported loli10k ezomori.nozomu gmail.com signed loli10k ezomori.nozomu gmail.com freebsd commit http github.com freebsd freebsd commit dd28e6bb close 1796 close 3438 close 6233,,
3055,e19572e4cc0b8df95ebf60053029e454592a92d4,uri Pankov <yuri.pankov@nexenta.com>, 2017-06-12 20:16:28 -0700,6326, openzfs 5428 provide reallocarray strtonum authored yuri pankov yuri.pankov nexenta.com reviewed robert mustacchi joyent.com approved joshua clulow josh sysmgr.org reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov porting note hunk unrelated zfs dropped openzfs issue http www.illumos.org issue 5428 openzfs commit http github.com openzfs openzfs commit 4585130 close 6326,,
3056,b24827ac1e327f763a8dd4ed60c44c2a5d918b42,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-07-07 17:07:40 -0700,6325, exit test runner non zero test killed fe46eeb introduced non zero exit code test runner non zero exit code returned test runner decided kill test mark killed reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6325,,
3057,dda82a2eabefcf3e044c5d3bbe78954dfc0e4248,OLi <loli10K@users.noreply.github.com>, 2017-07-08 00:45:29 +0200,6323, fix chattr_001_pos command eval involve shell redirection otherwise end writing log_ function message output reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed loli10k ezomori.nozomu gmail.com close 6300 close 6323,,
3058,2ade4a99f0b995df6fb45138d04a0209b959ef63,atthew Ahrens <mahrens@delphix.com>, 2017-03-20 15:38:11 -0700,6314, openzfs 8126 ztest assertion failed dbuf_dirty due dn_nlevels changing sync thread concurrently modifying dn_phys dn_nlevels dbuf_dirty trying assert something without holding necessary lock need move assertion function acquired authored matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed serapheim dimitropoulos serapheim delphix.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8126 openzfs commit http github.com openzfs openzfs commit 0ef125d close 6314,,
3059,a896468c7872dc7277fd0171c65bd2c185bfcaab,atthew Ahrens <mahrens@delphix.com>, 2017-05-01 11:06:07 -0700,6319, openzfs 8067 zdb able dump literal embedded block pointer authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed alex reece alex delphix.com reviewed yuri pankov yuri.pankov gmail.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8067 openzfs commit http github.com openzfs openzfs commit 8173085 close 6319,,
3060,c34efbebd577644674a7cf543b3e0540c9f0fa9f,ntonio Russo <antonio.e.russo@gmail.com>, 2017-07-07 13:45:17 -0400,6106, prevent dependency debianized package call dpkg shlibdeps argument excluding debianized package lib uutil1 nvpair1 zfs2 zpool2 linux auto generated dependency generated .debs shim dh_shlibdeps call real dh_shlibdeps corresponding argument installed temporary directory turn pre pended path alien call working around alien inability directly alter dependency output deb resolve 6106 signed brian behlendorf behlendorf1 llnl.gov signed antonio russo antonio.e.russo gmail.com close 6309 close 6106,,
3061,92e43c17188d47f47b69318e4884096dec380e36,OLi <loli10K@users.noreply.github.com>, 2017-07-07 19:39:53 +0200,6306, fix zpool clear readonly pool illumos 4080 inadvertently allows zpool clear readonly pool fix reintroducing check zfs_ioc_clear registration code signed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6306,,
3062,0ea05c64f8d08c20439dd2a06e949a2aa4115101,lek P <alek-p@users.noreply.github.com>, 2017-07-06 22:16:13 -0700,6167, implemented zpool scrub pause resume currently way pause scrub pausing may useful pool busy preserve bandwidth patch add ability pause resume scrubbing achieved maintaining persistent disk scrub state state paused scrub block however perform regular scan housekeeping freeing async destroyed deadlist block paused reviewed matthew ahrens mahrens delphix.com reviewed thomas caputi tcaputi datto.com reviewed serapheim dimitropoulos serapheimd gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed alek pinchuk apinchuk datto.com close 6167,,
3063,94b25662c51696ec081494e69efb5896566dede2,rkadiusz BubaÅa <arkadiusz.bubala@open-e.com>, 2017-07-06 17:38:24 +0200,6312, reschedule process erestartsys single core machine system may hang acquisition fails zvol_first_open function return erestartsys error cause endless loop __blkdev_get function reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed arkadiusz bubaå open e.com close 6283 close 6312,,
3064,9c3dcab5e229723ba41c67926223e942794a9ab2,eorge Melikov <mail@gmelikov.ru>, 2017-07-05 20:46:52 +0300,6303, zts replace command run_user function needed path variable passed posix test fixed need investigation enabled reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 6303,,
3065,478e3ecf8bc98687a336a64214c0e5e122454f52,laviss <alaviss@users.noreply.github.com>, 2017-07-06 00:39:13 +0700,6310, musl libc fix musl libc stdio.h include stdarg.h cause va_start va_end end undefined symbol reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed leorize alaviss close 6310,,
3066,688c94c5c03c693f91d48adcf4b8826f8e16c6fd,laviss <alaviss@users.noreply.github.com>, 2017-07-06 00:38:20 +0700,6311, clang fix clang support comment assembly patch replaces  reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed leorize alaviss close 6311,,
3067,02dc43bc4615537e8e198170a0711e317c8e6dda,atthew Ahrens <mahrens@delphix.com>, 2017-04-14 12:59:18 -0700,6293, openzfs 8378 crash due memory modification nopwrite block authored matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov problem zfs_get_data supply stale zgd_bp dmu_sync nopwrite zfs_get_data hold dmu related lock copy db_blkptr zgd_bp could change db_blkptr dbuf_write_done could remove dirty record dmu_sync see stale dbuf dirty eligible nop writing fix dmu_sync copy db_blkptr zgd_bp acquiring db_mtx could still see stale db_blkptr stale dirty record still exist thus attempt nopwrite openzfs issue http www.illumos.org issue 8378 openzfs commit http github.com openzfs openzfs commit 3127742 close 6293,,
3068,8ca78ab00278332a877d7d95e057c0b4aca5f9ad,ndriy Gapon <avg@FreeBSD.org>, 2017-03-11 20:26:47 +0200,6292, openzfs 7600 zfs rollback pas target snapshot kernel authored andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov existing kernel side code provides method rollback latest snapshot whatever happens time rollback actually done could unsafe confusing environment concurrent dsl change possible resulting state could correspond newer older snapshot originally requested one change allows amend method rollback performed latest snapshot specific name new snapshot concurrently created target snapshot destroyed rollback done exdev error returned new libzfs_core function lzc_rollback_to provided new functionality libzfs changed use lzc_rollback_to implement zfs rollback command perhaps return different error distinguish case desired snapshot exists latest snapshot case desired snapshot doe exist openzfs issue http www.illumos.org issue 7600 openzfs commit http github.com openzfs openzfs commit 3d645eb close 6292,,
3069,018503911c3a4d01768270c69e6ec87b3034e86f,ndriy Gapon <avg@FreeBSD.org>, 2017-03-11 19:48:35 +0200,6291, openzfs 7910 may write beyond target_sz authored andriy gapon avg freebsd.org reviewed george wilson george.wilson delphix.com reviewed dan kimmel dan.kimmel delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7910 openzfs commit http github.com openzfs openzfs commit cb6af4b close 6291,,
3070,23873bbb5f887785b5589664673d347a77236e03,arcel Telka <marcel@telka.sk>, 2017-06-22 15:30:49 +0200,6305, openzfs 8418 call authored marcel telka marcel telka.sk reviewed vitaliy gusev gusev.vitaliy icloud.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8418 openzfs commit http github.com openzfs openzfs commit e09ba01 close 6305,,
3071,27ef66ef19020dcdcda7b6f64a2f92cac9674565,eorge Melikov <mail@gmelikov.ru>, 2017-07-04 00:21:12 +0300,6298, zts minor typo old default value reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 6298,,
3072,fe46eebe6b6f75a006a295db1f14c9c9f02751c1,lek P <alek-p@users.noreply.github.com>, 2017-06-30 14:14:26 -0400,6285, failure test runner non zero exit right test runner always exit helpful zfs tests.sh provide different exit value depending everything passed use common shell cmds run test failure reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed alek pinchuk apinchuk datto.com close 6285,,
3073,b81a1c61ec6c70586e56d29b66b261dadf1d4fe8,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-30 11:12:29 -0700,6281, print fail message callback test suite reorder operation _endlog failure message get printed prior performing callback cleanup help clarify test failed place message closer point incident resulting log reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6281,,
3074,aa6e82a6a55d6fde7a8dc1c21bf952df69ef9a20,owrabha Gopal <sowrabha.gopal@delphix.com>, 2017-06-01 13:27:02 -0700,6289, openzfs 8430 properly handle error fdopendir authored sowrabha gopal sowrabha.gopal delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed igor kozhukhov igor dilos.org approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov immediately return fdopendir fails close dirfd happens openzfs issue http www.illumos.org issue 8430 openzfs commit http github.com openzfs openzfs commit e165e20 close 6289,,
3075,1579dcbc9176d3875f3ce8926076e46a87d8e8ed,ndriy Gapon <avg@FreeBSD.org>, 2017-06-21 23:47:54 +0300,6288, openzfs 8416 abd.h friendly authored andriy gapon avg freebsd.org reviewed igor kozhukhov igor dilos.org reviewed dan kimmel dan.kimmel delphix.com reviewed alek pinchuk pinchuk.alek gmail.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8416 openzfs commit http github.com openzfs openzfs commit 589c189 close 6288,,
3076,2a53d6a12a27b757d1d8867b2e02369fbc046cab,ndriy Gapon <avg@FreeBSD.org>, 2017-06-26 13:46:45 +0300,6287, openzfs 8426 mark immutable buffer argument abd.h authored andriy gapon avg freebsd.org reviewed matt ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8426 openzfs commit http github.com openzfs openzfs commit 37359a6 close 6287,,
3077,c6f6767eea2179689873efdad4929f73f7f2b10b,atthew Ahrens <mahrens@delphix.com>, 2017-04-14 12:52:43 -0700,6286, openzfs 8377 panic bookmark deletion authored matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov problem executed open context pre check fill dbda_success based existence bookmark bookmark containing filesystem case destroyed get syncing context run syncing context add deleted bookmark dbda_success intending process bookmark still dbda_success open context call try destroy fix modify dbda_success called open context openzfs issue http www.illumos.org issue 8377 openzfs commit http github.com openzfs openzfs commit b0b6fe3 close 6286,,
3078,817b1b6e7b6f9b8890a550c7c7efabdba41dd352,atthew Ahrens <mahrens@delphix.com>, 2017-06-29 10:18:03 -0700,6262, clean large dnode code resolve issue discovered porting openzfs lint warning made dnode_move_impl large dnode aware functionality currently unused linux reviewed ned bass bass6 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 6262,,
3079,b8a97fb101555797400c3a275e67820c5d689802,hrisrd <chris@onthe.net.au>, 2017-06-30 02:57:27 +1000,6269, set arc_meta_limit arc_dnode_limit change make behave would expect zfs module parameters.5 recalculate arc_meta_limit change recalculate arc_dnode_limit change correctly set arc_meta_limit arc_dnode_limit zfs_arc_max change reviewed tim chase tim chase2k.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 6269,,
3080,44f09cdc59fd89f9bc935b4d36b7ed15d21ddeb3,rian Behlendorf <behlendorf1@llnl.gov>, 2017-06-29 09:55:30 -0700,6282, convert man zfs.8 mdoc openzfs sync fixed typo additional description command argument text reworked sync openzfs added linux .os type reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6282,,
3081,7a35f2b49581894cde93c356fd9372ff3246d344,hunwei Chen <david.chen@osnexus.com>, 2017-06-19 11:02:20 -0700,622, fix check failed initialize dummy_lock fix build error gcc 7.1.1 error dummy_lockâ used uninitialized function reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 622,,
3082,682ce104cdd80db4b67eea09eb0a90324c5f98ee,ony Hutter <hutter2@llnl.gov>, 2017-06-28 10:05:16 -0700,6253, gcc 7.1 fix gcc 7.1 warn checking snprintf return code case buffer could truncated patch either check snprintf return code applicable simply disables warning ztest.c reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6253,,
3083,cda0317e4d2a1277b328e4fc42ee3699bbe46c12,eorge Melikov <mail@gmelikov.ru>, 2017-06-18 21:27:06 +0300,6245, convert man zpool.8 mdoc openzfs sync fixed typo additional description command argument listsnapshots remained text reworked sync openzfs added linux .os type updated zpool event section updated zpool iostat status section added zed reference see also reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 6245,,
3084,5b7bb98387e77259aab50a8c081e4c527a60b58e,ony Hutter <hutter2@llnl.gov>, 2017-06-27 12:00:27 -0700,6271, fix rhel 7.4 build error rhel 7.4 include linux bio.h includes macro conflict ifndef zfs include linux blkdev_compat.h patch fix build reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 6234 close 6271,,
3085,2d678f779aba26a93314c8ee1142c3985fa25cb6,rian Behlendorf <behlendorf1@llnl.gov>, 2017-06-27 10:09:16 -0700,6270, cap maximum aggregate size commit 8542ef8 allowed optional aggregated beyond specified aggregation limit since aggregation limit also used enforce maximum block size setting 16777216 could result attempt allocate abd larger 16m reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6259 close 6270,,
3086,47770d30f205b81ece1f60760f3edb5c04574e6e,under2015 <omfgbunder@gmail.com>, 2017-06-27 13:06:07 -0400,6272, fix linux existence block device etc fstab sufficient prevent use force flag without force flag warning printed device filesystem given type providing force option overwrite filesystem long actively mounted reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov tested bunder2015 omfgbunder gmail.com signed bunder2015 omfgbunder gmail.com close 6267 close 6272,,
3087,58404a73db9e245778aa7fd7028fbf742f8b815b,oris Protopopov <boris.protopopov@actifio.com>, 2017-06-13 12:03:44 -0400,6226, refine use zv_state_lock use zv_state_lock protect member zvol_state structure add relevant assert take zv_suspend_lock zv_state_lock hold zv_state_lock across suspend resume reviewed brian behlendorf behlendorf1 llnl.gov signed boris protopopov actifio.com close 6226,,
3088,82710e993a3481b2c3cdefb6f5fc31f65e1c6798,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-26 17:32:43 -0700,6260, openzfs 5220 l2arc doe support device provide 512b access authored andriy gapon avg freebsd.org reviewed george wilson george.wilson delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed saso kiselkov saso.kiselkov nexenta.com approved dan mcdonald danmcd joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 5220 openzfs commit http github.com openzfs openzfs commit 403a8da close 6260,,
3089,d12f91fde3c6a7d1aa71967b3480faac6c853051,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-26 16:56:09 -0700,6254, openzfs 8264 want support promoting datasets libzfs_core authored andrew stormont astormont reviewed andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd kebe.com approved dan mcdonald danmcd kebe.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8264 openzfs commit http github.com openzfs openzfs commit a4b8c9a close 6254,,
3090,7517376f939d788a2622c84fe1f502799a74a0ae,under2015 <omfgbunder@gmail.com>, 2017-06-26 17:48:54 -0400,6268, fix arithmetic error message line 234 zfs_maxproplen arithmetic syntax error reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed bunder2015 omfgbunder gmail.com close 6268,,
3091,03928896e114cfc4752c089727474134a2b0204b,oris Protopopov <bprotopopov@users.noreply.github.com>, 2017-06-26 17:36:49 -0400,5887, call cv_signal mutex held bqueue_dequeue call cv_signal bq_lock held enable rsend_009_pos test fix reviewed brian behlendorf behlendorf1 llnl.gov signed boris protopopov actifio.com close 5887,,
3092,7e35ea783e55eaa4f0721d34077652b874f979d8,ndrew Stormont <astormont@racktopsystems.com>, 2017-06-12 17:56:09 +0100,6255, openzfs 8331 zfs_unshare return wrong error code smb unshare failure authored andrew stormont astormont reviewed marcel telka marcel telka.sk reviewed toomas soome tsoome me.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8331 openzfs commit http github.com openzfs openzfs commit 4f4378c close 6255,,
3093,29eb4942856da942f1482cba9326698f91eb8c1c,ony Hutter <hutter2@llnl.gov>, 2017-06-22 09:39:01 -0700,6210, dash zero latency value zpool iostat print dash instead zero zero latency value zpool iostat get zero latency reported disk idle technically zero latency invalid since measure latency nothing reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 6210,,
3094,d9ad3fea3bd0368b6af0b08ccc4de1b080e2bcb7,organ Jones <mjones@rice.edu>, 2017-06-19 16:43:16 +0000,6239, add enable around cpu_seqid zfs dmu_object icp core kcf_sched cpu_seqid macro surrounded kpreempt_enable call avoid linux kernel bug warning code path use cpuid minimize lock contention safe reschedule process different processor time reviewed brian behlendorf behlendorf1 llnl.gov signed morgan jones numin.it close 6239,,
3095,0241e491a08ffa471a08ceaa0b0943999d775cbe,on Brady <don.brady@intel.com>, 2017-06-16 18:21:11 -0600,6227, inject zinject percentage amount dev errs original form device error injection nothing situation help simulate intermittent error condition specify real number percentage value also useful zfs fault diagnosis testing injecting intermittent error load testing reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 6227,,
3096,05a5357a6c63b8c83062c1b295ee98d14f8e85aa,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-15 17:52:18 -0700,6235, provide link info zfs buildbot option add link information zfs buildbot option contributing guideline template reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6235,,
3097,ef4be34a64010fb57632e1bc317810c86feacc67,oris Protopopov <boris.protopopov@actifio.com>, 2017-06-14 16:18:36 -0400,6226, avoid queue locked warning pool import use zvol_alloc reviewed brian behlendorf behlendorf1 llnl.gov signed boris protopopov actifio.com issue 6226,,
3098,97f8d7961e0b6e282f5296c20d5af9746c9db688,OLi <loli10K@users.noreply.github.com>, 2017-06-15 20:08:45 +0200,6213, fix zvol_state_t zv_open_count race 5559ba0 added zv_state_lock protect zvol_state_t internal data however guard zv_open_count zv_disk private_data fix taking zv_state_lock check zv_open_count z_zvol systemd udevd   zv_open_count zvol_open mutex_enter zv_state_lock zv_open_count mutex_exit zv_state_lock mutex_enter zv_state_lock zvol_remove mutex_exit zv_state_lock zv_disk private_data null zvol_free assert zv_open_count zvol_release disk private_data assert zv_open_count  assert fails reviewed boris protopopov bprotopopov hotmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6213,,
3099,627791f3c0f27322d7d5dd99630f03759278d824,hrisrd <chris@onthe.net.au>, 2017-06-15 06:23:02 +1000,6228, fix manual description arc_evict_state start pruning arc_dnode_size arc_dnode_limit i.e arc_dnode_limit ceiling rather floor reviewed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 6228,,
3100,8f7933fec906f14c40af297d2c89fc2567a39a1e,ichard Yao <richard.yao@prophetstor.com>, 2017-05-20 14:01:55 -0400, , fix zvol_init error handling reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao richard.yao prophetstor.com,,
3101,5228cf011626081ee5dd4b6ce6fd31857d494e93,ichard Yao <ryao@gentoo.org>, 2017-06-13 12:18:08 -0400,6058, make zvol operation use _by_dnode routine continues started fully converting zvols avoid unnecessary dnode_hold call save small amount cpu time slightly improves latency operation zvols reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao richard.yao prophetstor.com close 6058,,
3102,1fbfcf115979c707e636167fac6c10fec4ff5657,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-13 09:05:55 -0700,6198, fix cleanup longer use device test meant test zpool import longer requiring device number dependency longer necessary reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6198,,
3103,419c80e6dc2cd83372a77dfaf6f04e446d1f0267,eHackEd <DeHackEd@users.noreply.github.com>, 2017-06-12 14:41:03 -0400,6219, reduce stack usage buildbots zfs test regularly see kilobyte stack usage function convert self call iteration reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 6219,,
3104,851aa99c899e5d7ddc937e223359b8892eeeca5d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-06-12 09:45:32 -0700,6217, use log_must_busy destroy_pool log function log_must_busy added commit e623aea2 purpose update destroy_pool use reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6217,,
3105,88c30122e5ccb343c5675f4429ee29fc5ba224a0,pande <github@tripleback.net>, 2017-06-09 12:51:13 -0400,6203, add missing invalid optionusage output reviewed brian behlendorf behlendorf1 llnl.gov reviewed dhe git dehacked.net reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed jack draak jackdraak gmail.com signed kash pande kash tripleback.net close 6203,,
3106,dd429b46b7b8990f48c0276abe8080f626f415cb,aul Dagnelie <pcd@delphix.com>, 2016-07-07 15:00:51 -0700,6205, openzfs 8056 zfs send size estimate inaccurate zvols authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved robert mustacchi joyent.com reviewed kash pande kash tripleback.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov send size estimate zvol low size record header significant portion size typically case data highly compressible especially embedded block problem assumes block size recordsize property 128kb however zvols block size volblocksize property 8kb therefore estimate 16x record header really fix check type object set whether zvol pick appropriate property addition also add size begin end record estimate openzfs issue http www.illumos.org issue 8056 openzfs commit http github.com openzfs openzfs commit faf09cd close 6205,,
3107,38240ebd7a35269e8ce74dc133b34120d707cd6f,atthew Ahrens <mahrens@delphix.com>, 2017-03-28 15:31:49 -0700,6204, openzfs 8156 doe need dbuf_evict_lock authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov hold dbuf_evict_lock checking eviction evict thread able keep result massive lock contention necessary hold lock make wrong choice occasionally nothing bad happen commit result performance improvement arc cached sequential read openzfs issue http www.illumos.org issue 8156 openzfs commit http github.com openzfs openzfs commit f73e5d9 close 6204,,
3108,dbeb8796996b4a342f7de2b3eb4ea5b86ac260f9,atthew Ahrens <mahrens@delphix.com>, 2016-05-12 21:16:36 -0700,6117," openzfs 8199 multi threaded single threaded multiple thread creating file single filesystem spend lot time waiting os_obj_lock improve performance multi threaded file creation must make typically grab filesystem wide lock solution next object allocate cpu next object different block dnode object concurrent allocation hold dnodes different dbufs thread next object reach end chunk object default block worth 128 dnodes reset per objset os_obj_next increased chunk object 128 manipulating os_obj_next need grab os_obj_lock decrease lock contention dramatically thread need grab os_obj_lock briefly per 128 allocation result performance improvement multi threaded object creation thread creating object directory 67,000 sec 115,000 sec cpu work sponsored intel corp authored matthew ahrens mahrens delphix.com reviewed ned bass bass6 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported matthew ahrens mahrens delphix.com signed matthew ahrens mahrens delphix.com openzfs issue http www.illumos.org issue 8199 openzfs commit http github.com openzfs openzfs pull 374 close 4703 close 6117",,
3109,1b7c1e5ce90ae27d9bb1f6f3616bf079c168005c,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-09 09:15:37 -0700,6191, openzfs 7578 fix improve aspect zil writing zil change year ago zil_slog_limit got partially broken due zl_itx_list_sz updated async itx upgraded sync actually change time zl_itx_list_sz really required implement functionality patch remove unneeded broken code variable original idea zil_slog_limit reduce chance slog abuse single heavy logger increased latency latency critical logger pushing heavy log main pool instead slog beside huge latency increase heavy writer implementation caused double write data since log record explicitly prepared slog since scheduler found much efficient reduce priority heavy logger slog writes still leave slog existing zil implementation problem space efficiency write large chunk data log block limited size case efficiency stopped almost low case zil stored spinning rust also reduced log write speed half since head uselessly fly allocated written area change improves situation offloading problematic operation _log_write zil_lwb_commit know real situation log block allocation split large request piece much efficiently also side effect remove one two data copy operation done zil code wr_copied case untangle unify code _log_write function also zfs_log_write alike zvol_log_write handle writes crossing block boundary may also improve efficiency zpl made sponsored ixsystems inc authored alexander motin mav freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed andriy gapon avg freebsd.org reviewed steven hartland steven.hartland multiplay.co.uk reviewed brad lewis brad.lewis delphix.com reviewed richard elling richard.elling approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard yao ryao gentoo.org ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7578 openzfs commit http github.com openzfs openzfs commit aeb13ac close 6191,,
3110,82644107c4e7f3e899ebde18f65cbac7c604583c,atthew Ahrens <mahrens@delphix.com>, 2017-03-23 09:07:27 -0700,6200, openzfs 8155 simplify handling pre compressed buffer authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov writing pre compressed buffer arc_write requires compression algorithm used compress buffer match compression algorithm requested zio_prop_t set make caller bit complicated simplify making arc_write trust caller supply type pre compressed buffer want write override compression setting zio_prop_t openzfs issue http www.illumos.org issue 8155 openzfs commit http github.com openzfs openzfs commit b55ff58 close 6200,,
3111,4070bfd85282eda582cd0050367478da5e29ca2e,rian Behlendorf <behlendorf1@llnl.gov>, 2017-06-07 10:59:44 -0700,6199, add ms_mandlock mount failure message commit torvalds linux 9e8925b6 allowed kernel built without support mandatory locking ms_mandlock result zfs mount failing nbmand property set kernel built without unfortunately reliably detect prior mount system call kernel built support best check mount failed eperm passed mand mount option print useful error message e.g filesystem tank nbmand property set mount option may disabled kernel use zfs set nbmand disable option try mount filesystem additionally switch default error message case use strerror produce human readable message reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4729 close 6199,,
3112,829aaf280171db85fcc96bb19c1f403ee05b334a,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-06 22:04:01 -0400,6195, skip test slow bit builder slow buildbot bit builder skip test case bit builder reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6195,,
3113,ca8b210744ab7507cf7a27aeb246520d377f2fce,rian Behlendorf <behlendorf1@llnl.gov>, 2017-06-06 11:30:47 -0700,6192," reduce memory requirement number block freed per txg controlled module option default 100,000 speed test case reduce memory requirement creating txgs worth block freed reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5479 close 6192",,
3114,6eb6073a044653016013b1a72de03a1257e899c5,Ã¥kan Johansson <f96hajo@chalmers.se>, 2017-06-05 22:53:09 +0200,6181, allow add raidz mirror redundancy allow new member added pool mixing raidz mirror vdevs without giving long matching redundancy case missed 5915 handled zpool create add zfstest test zpool create followed zpool add mixed raidz mirror vdevs add mixed raidz mirror case reviewed brian behlendorf behlendorf1 llnl.gov signed haakan johansson f96hajo chalmers.se issue 5915 close 6181,,
3115,9f7b066bd901128f0a5e481e3c23ae9857b1263e,OLi <loli10K@users.noreply.github.com>, 2017-06-05 20:26:25 +0200,6189, linux 4.9 compat fix zfs_ctldir xattr handling since torvalds linux d0a5b99 iop_xattr used indicate inode xattr support clear ctldir inodes avoid eio error reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6189,,
3116,099700d9dff46309cdd16f4c4331daddb70d8570,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-05 13:52:15 -0400,6153, zpool iostat status improvement user provide script run zpool iostat status user script placed .zpool.d included zpool default search path provide script used zpool iostat status return type device hdd sdd file provide script get various value smartctl using zpool iostat status allow user define environment variable used override default zpool iostat status search path allow environment variable enable disable zpool status iostat functionality use new smart script provide serial command install etc sudoers.d zfs file contains sudoer rule smartctl sample allow zpool iostat status test run tree reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6121 close 6153,,
3117,92aceb2a7ee8c9367fdc901fed933f6f258173e0,OLi <loli10K@users.noreply.github.com>, 2017-06-02 16:17:00 +0200,6176, fix snapdev property issue inheriting snapdev property always call prevents device node created certain situation snapdev special property also inheritable need call even reverting received value zfs inherit additionally fix null pointer dereference accidentally introduced 5559ba0 triggered setting snapdev property value hidden twice finally add new test case zfs test suite reviewed boris protopopov bprotopopov hotmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6131 close 6175 close 6176,,
3118,b870c4b5d716d87ddfb29f28745e639dd635fd5f,hunwei Chen <david.chen@osnexus.com>, 2017-05-25 15:56:12 -0700,6158, fix import wrong spare device path change example aux device dev sdc aux device removed dev sdc point device zpool import still use device corrupt problem spa_import rather validate disk label would actually write label disk remove since spa_load_ spare l2cache seems everything need would actually validate disk label reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 6158,,
3119,2e9c8dbddfa5d53aa2f9c508e3dc1263d89466ad,hunwei Chen <david.chen@osnexus.com>, 2017-05-24 15:11:23 -0700,6158, fix import finding spare l2cache path change spare l2cache device path change zpool import fix path like normal vdev issue supply pool name argument zpool import use filter device pool name label since spare l2cache device never label always get filtered fix making sure never filter spare l2cache device reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 6158,,
3120,b568efec526d9336292b37faae951aa9cfb4484c,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-06-01 09:24:28 -0400,6186, retire filebench testing longer perform automated filebench testing remove reference automated testing reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 6186,,
3121,3f7d0418dc663e3a968cf0b28b45f6ef5b83bb06,OLi <loli10K@users.noreply.github.com>, 2017-05-31 21:52:12 +0200,6177, fix memory leak move kmem_free called every error path preferred making doi local accommodate older kernel limited stack reviewed boris protopopov bprotopopov hotmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6177,,
3122,434c76ca91e9def899355914473a03441697b896,pande <github@tripleback.net>, 2017-05-31 10:30:07 -0400,6183, explain reason signed contributing reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed haakan johansson f96hajo chalmers.se signed kash pande kash tripleback.net close 6183,,
3123,2d82116e80ba88fb8efbc3e573ee8a924323b32a,oris Protopopov <bprotopopov@users.noreply.github.com>, 2017-05-26 20:50:25 -0400,6172, fix ida leak added missing error handling path reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed boris protopopov actifio.com close 6159 close 6172,,
3124,9210e43a1660bd1b742e80bfc121b86e2cfad57a,lek P <alek-p@users.noreply.github.com>, 2017-05-26 08:42:10 -1000,6164, dirty bpobj entry certain case dsl_scan_sync one may end calling bpobj_iterate empty bpobj even though end modifying bpobj still get dirtied causing unneeded writes pool patch add early bail bpobj empty prevent unneeded writes reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed alek pinchuk apinchuk datto.com close 6164,,
3125,261c013fbf79431ac79def2cdf56d9d82009cd4d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-26 11:40:44 -0700,6131, revert fix snapdev property inheritance behaviour reverts commit issue uncovered new test case need investigated resolved reviewed loli10k ezomori.nozomu gmail.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6174 issue 6131,,
3126,bda77af11cc4041b2be39b7d02705bc8cec4cb2b,uri Pankov <yuri.pankov@nexenta.com>, 2017-05-24 07:11:47 -0400,6163, openzfs 8077 zfs test suite fails authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy jwk404 gmail.com approved richard lowe richlowe richlowe.net reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported bunder2015 omfgbunder gmail.com porting note also corrected quoting mistake found copy openzfs issue http www.illumos.org issue 8077 openzfs commit http github.com openzfs openzfs commit 481467d close 6163,,
3127,ff770130538c2ca38a4ce041e0102b699fdd7608,uri Pankov <yuri.pankov@nexenta.com>, 2017-05-24 07:01:49 -0400,6162, openzfs 8076 zfs test suite fails authored yuri pankov yuri.pankov nexenta.com reviewed john kennedy jwk404 gmail.com reviewed prakash surya prakash.surya delphix.com approved richard lowe richlowe richlowe.net reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported bunder2015 omfgbunder gmail.com openzfs issue http www.illumos.org issue 8076 openzfs commit http github.com openzfs openzfs commit ab3407e close 6162,,
3128,ea8c83fdda344943bf80533f18d30bc95d414612,uri Pankov <yuri.pankov@nexenta.com>, 2017-05-24 06:46:28 -0400,6161, openzfs 8071 zfs test 7290 missed case authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy jwk404 gmail.com approved richard lowe richlowe richlowe.net reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported bunder2015 omfgbunder gmail.com openzfs issue http www.illumos.org issue 8071 openzfs commit http github.com openzfs openzfs commit e84991e close 6161,,
3129,00710365261a89abc127efa7fae5fe36d0fae7d1,lan Somers <asomers@gmail.com>, 2017-05-24 06:34:56 -0400,6160, openzfs 8070 add zfs comment authored alan somers asomers gmail.com reviewed yuri pankov yuri.pankov gmail.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported bunder2015 omfgbunder gmail.com openzfs issue http www.illumos.org issue 8070 openzfs commit http github.com openzfs openzfs commit 40713f2 close 6160,,
3130,959f56b99366c8727647b5b19fb3d47555c96cf3,OLi <loli10K@users.noreply.github.com>, 2017-05-26 01:43:46 +0200,6131, fix snapdev property inheritance behaviour inheriting snapdev property always call prevents device node created certain situation snapdev special property also inheritable need call even reverting received value zfs inherit reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6131,,
3131,7bc181e6db7e844981b75ae628a97e8f27628025,uri Pankov <yuri.pankov@nexenta.com>, 2017-05-16 11:22:23 -0700,6137, openzfs 8072 zfs test several test case incorrectly spell testpool authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy jwk404 gmail.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8072 openzfs commit http github.com openzfs openzfs commit 56e4733 close 6137,,
3132,1d8da991714dd78ea2540005ca57792832152c9c,hunwei Chen <david.chen@osnexus.com>, 2017-05-24 16:02:04 -0700, , config allow linux without linux obj use uname determine kernel build directory user specified kernel source linux otherwise user forced use linux obj even directory  signed chunwei chen david.chen osnexus.com requires spl ref pull 617 head,,
3133,952e490b1b243c1203fe94f4614ab1e46a52237d,hunwei Chen <david.chen@osnexus.com>, 2017-05-24 15:56:10 -0700, , improve gitignore ignore exclude makefile.in module also ignore .patch .orig file signed chunwei chen david.chen osnexus.com,,
3134,ac48361c0c16f36407643f931f92162145618865,hunwei Chen <david.chen@osnexus.com>, 2017-05-24 15:42:34 -0700, , config allow linux without linux obj use uname determine kernel build directory user specified kernel source linux otherwise user forced use linux obj even directory  signed chunwei chen david.chen osnexus.com,,
3135,3bda331ba8a609cd72be8f67946e12ffe1fcf4f2,hunwei Chen <david.chen@osnexus.com>, 2017-05-24 15:23:37 -0700, , improve gitignore exclude makefile.in module fix gitignore cmd also ignore .patch .orig file signed chunwei chen david.chen osnexus.com,,
3136,2ded1c7eff76f9f53b179659f25f3868b6a354ec,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-25 10:01:44 -0700,616, fix cv_timedwait timeout perform already past expiration time check updating cvp cv_mutex provided mutex check depends local state first ensures cvp cv_mutex updated timeout case ever called expire_time reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 616,,
3137,3e6c9433474f0b6fc4880549c851bfb151c8c719,OLi <loli10K@users.noreply.github.com>, 2017-05-25 18:55:55 +0200,6147, linux 4.12 compat fix call provide format parameter create duplicate name device virtual bdi sysfs namespace would prevent mounting one zfs filesystem time reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6147,,
3138,4358afa0f2cd7629de9916ce69c5e7cdd85f6803,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-19 13:08:23 -0400,6128, retire zconfig.sh test coverage provided script handled part zfs test suite remove signed brian behlendorf behlendorf1 llnl.gov close 6128,,
3139,3f03fc8df3e74b3d9ee6eb3bd8bb656898ed7272,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-18 15:57:21 -0400,6128, add zpool event test events_001_pos verify expected event generated invoking various zpool sub command event must appear zpool event consumed zed events_002_pos verify zed consumes event generated running started additionally verify event processed part change default.cfg used test suite changed default.cfg.in file needed install location zed script enabled one could reliably determined signed brian behlendorf behlendorf1 llnl.gov close 6128,,
3140,5a6d6cf839fe547f2007912f60eac23827b4a8de,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-18 20:22:04 -0400,6128, enable xattr test updated helper function use attr command linux manipulate xattrs added xattr.cfg file reworked user group functionality consist existing delegate test case intent test case preserved xattr_001_pos xattr_002_neg updated verity xattr xattr sytle xattrs xattr_003_neg use user_run helper instead xattr_004_pos updated work ext2 xattrs xattr_007_neg updated use attr instead runat xattr_008_pos xattr_010_neg test case disables since applicable linux xattr_011_pos updated expected behavior gnu version tested utility xattr_012_pos updated use xattrtest create many small xattrs instead single large one xattr_013_pos updated use attr instead runat signed brian behlendorf behlendorf1 llnl.gov close 6128,,
3141,95401cb6f7aa9ec3dd2d61335d2dcc9459c2661c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-18 20:21:15 -0400,6128, enable remaining test enable remaining test case previously disabled required fix follows cache_001_pos change required cache_010_neg updated use losetup linux loopback cache device allowed zvols cache device disabled builder pas reliably  set set_device_dir path cachefile.cfg updated cpath1 cpath2 reference unique file wait udev create volume updated mount option expected linux name change required  updated expect unmount busy mount point linux rsend_019_pos observed occasionally take long time bit system kmemleak builder switched sync sync_pool devices_001_pos devices_002_neg updated create_dev_file helper linux fixed mmap_exec.c preserve errno updated test case expect eperm linux described mmap adding missing setup.ksh cleanup.ksh script openzfs added missing slice_ variable history_004_pos history_006_neg history_008_pos fixed previous commits enabled change required added missing space assorted zfs command inuse_ illumos dump device test skipped remaining test case updated correctly create required partition fixed largest_file.c accept einval well efbig described write link_count_001 added nproc required command umountall_001 updated use umount pull openzfs change file_trunc.c make option run test loop included file test case updated use rename_dir test binary pkill restricted exact match total runtime reduced slog_013_neg change required updated use losetup linux zed running manually degrade damaged vdev expected nopwrite_volume forced pool sync sync_pool ensure date property value fixed typo zed log message refactored zed_ helper function resolve syslog exit error zedlog zfs_get_004_pos  clone_001_pos skip layering pool zvols solid limited 7eb pool maximum supported size 8eb linux requires additional support zed updated skip reason properly cleanup busy mount point linux test loop  skip log_unsupported change required increased limit 512k added sync_pool avoid false positive signed brian behlendorf behlendorf1 llnl.gov close 6128,,
3142,f871ab6ea2dd9a3b9fae157ff0a7665bb269c565,eng Sun <loyou85@gmail.com>, 2017-05-20 04:45:46 +0800,5973, fix caused panic sync kernel patch lz4 http git.kernel.org pub scm linux kernel git stable linux stable.git log lib lz4 4a3a99 lz4 add overrun check d5e7ca lz4 fix data abort issue bea2b5 lib lz4 pull constant table 99b7e9 lz4 fix system halt boot kernel x86_64 reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed feng sun loyou85 gmail.com close 5975 close 5973,,
3143,bec1067d54a004cb52a4a6762bfa1d4a30300865,lek P <alek-p@users.noreply.github.com>, 2017-05-19 12:33:11 -0700,6122, implemented zpool sync command addition enable sync open txg main pool demand functionality similar sync zpool sync return data hit main storage instead potentially zil case sync cmd reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed alek pinchuk apinchuk datto.com close 6122,,
3144,4a283c7f77eb5065e9f03b122bf8ead4f4a1e2be,ony Hutter <hutter2@llnl.gov>, 2017-05-19 12:30:16 -0700,6094, force fault vdev zpool offline patch add option zpool offline fault vdev instead bringing offline unlike offline state faulted state trigger fma code allowing thing like autoreplace triggering slot fault led fault persist across import unless set temporary flag persistent temporary fault cleared zpool clear reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6094,,
3145,a32df59e187a6187eb96c52b93cf02e8af51f327,om Caputi <tcaputi@datto.com>, 2017-05-18 20:35:49 -0400,6140, fixed small memory leak ereport handling one pre check called nvlists allocated simply corrects issue reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6140,,
3146,a9f0d7dd89fd9e09ef41ca98d6ba06bbd3d6ea88,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-18 10:02:16 -0700,6139, fix large dnode send stream flag conflict bit send stream flag inadvertently used two different feature concurrent development avoid future compatibility problem large dnode flag switched bit unused large dnode feature present pre release zol dnodesize default legacy compatible existing openzfs implementation user dnodesize auto needing use zfs send recv must update zol source destination system reviewed matthew ahrens mahrens delphix.com reviewed ned bass bass6 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6139,,
3147,331ec1a1ad8c920fd3ddd98964a155c84db852b8,ustin Lecher <jlec@gentoo.org>, 2017-05-17 01:00:16 +0100,6132, compatibilty glibc 2.23 glibc 2.23 sys sysmacros.h automatically included sys types.h need explicitely include http sourceware.org libc alpha 2015 msg00253.html reviewed brian behlendorf behlendorf1 llnl.gov signed justin lecher jlec gentoo.org close 6132,,
3148,5559ba094feff560abe00afd31ab99dd1f70698c,oris Protopopov <boris.protopopov@actifio.com>, 2017-05-10 13:51:29 -0400,6134, introduce zv_state_lock lock designed protect internal state zvol_state_t avoid taking e.g dmu_objset_own code path holding zvol_stat_lock refactor code accordingly signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 3484 close 6065 close 6134,,
3149,07783588bcb513a3a1f4d995b5d4685a9cfc89e5,oris Protopopov <boris.protopopov@actifio.com>, 2017-05-11 16:40:33 -0400,6134, revert commit 1ee159f4 fix lock order inversion zvol_open account use zvols vdevs latter use case resulted lock order inversion deadlock involved bdev bd_mutex signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov issue 6065 issue 6134,,
3150,3d6da72d183dc655a7dc8fd59f57748fc5c1806c,saac Huang <he.huang@intel.com>, 2017-05-12 18:28:03 -0600,5316, skip spurious resilver raidz vdev raidz vdev block doe span child vdevs excluding skip sector may affected child vdev outage failure case block doe need resilvered however current resilver algorithm simply resilvers block degraded raidz vdev spurious wasteful also add risk overwriting good data patch eliminates spurious reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com signed isaac huang he.huang intel.com close 5316,,
3151,8c54ddd33af92e5defc587a10914493ca85ad60c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-11 14:27:57 -0700,6095, enable additional test case enable additional test case case required minor modification test script case real bug uncovered fixed handful case pool layered pool test case skipped supported detail test case skip test linux adding zvols pool fully supported deadlock free skip dumpadm portion test relevant linux find_vfstab_dev find_mnttab_dev save_dump_dev function updated accordingly linux add o_excl use check prevent force option working mounted filesystems improve resulting error update test case depend nested pool switch truncate mkfile reduce space requirement speed test case speed test case filling filesystem capacity use sparse file file vdevs order avoid increasing partition size 6ba1ce9 allows raidz mirror configs similar redundancy updating valid_args forced_args case disable overlapping partition portion fix correctly create extra partition modified zpool_vdev.c use fstat64_blk wrapper includes st_size even block device updated properly find swap device updated use swap_setup swap_cleanup wrapper right thing linux illumos removed option succeeds linux due difference use check skipped test case useful added missing cleanup function remove cache file prior test ensure clean environment avoid false positive removed test case creates pool zvol likely deadlock linux never completely supported platform zpool destroy unsupported linux mount point must busy order unmount handle ebusy error occur volume racing udev skip test linux adding zvols pool fully supported deadlock free test could modified use loop back device would preferable use test case improved coverage updated test case depend nested pool normal file vdev var tmp fine updated skip partition known slice illumos prevents overwriting default testpool causing failure change needed change needed root cause addressed upstream openzfs commit 3b7f360 disabled test case due known failure opened issue http github.com zfsonlinux zfs issue 6112 updated use ext2  moved skip list test case could updated use linux crash dump facility zvol_swap_ updated use swap_setup swap_cleanup helper file creation switched tmp var tmp enabled minimal useful test linux skip test case applicable reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 3484 issue 5634 issue 2437 issue 5202 issue 4034 close 6095,,
3152,4747a7d3d48ee307176dbd4a70c3be42b9f10dc0,atthew Ahrens <mahrens@delphix.com>, 2017-04-24 09:34:36 -0700,6109, openzfs 8063 verify attempt access inactive txg authored matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru standard practice zfs keep track per txg state active txg open quiescing syncing different value state assert attempt modify inactive txg porting note assertv added unused variable openzfs issue http www.illumos.org issue 8063 openzfs commit http github.com openzfs openzfs commit 01acb46 close 6109,,
3153,335b251ac1a1f8ba8434450dc0f24986bc44f688,atthew Ahrens <mahrens@delphix.com>, 2017-05-10 10:32:40 -0700,6103, openzfs 8166 zpool scrub think repaired offline device authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov ported matthew ahrens mahrens delphix.com scrub leaf device offline via zpool offline inadvertently clear dtl dirty time log offline device even though still damaged device come back online incompletely resilver thinking scrub repaired block written scrub started incomplete resilver lead data loss subsequent failure different leaf device fix never clear dtl offline device note device onlined scrub progress scrub restarted problem worked around running zpool scrub zpool online openzfs issue http www.illumos.org issue 8166 openzfs commit http github.com openzfs openzfs pull 372 close 5806 close 6103,,
3154,f486f58440cc6bf7e699aa2870da142a83cac04e,om Caputi <tcaputi@datto.com>, 2017-05-10 13:25:27 -0400,6105, add missing arc_free_cksum arc_release arc layer track checksum data arc header ensure buffer changed supposed checksum maintained uncompressed buffer still attached header unfortunately missing call arc_free_cksum arc_release trigger asserts common issue checksum maintained debug build triggering bug requires writing block therefore calling arc_release compressed buffer still used debug build simply corrects issue reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com close 6105,,
3155,2946a1a15aab874107b4425513c1bf805e730803,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-10 09:30:48 -0700,6114, linux 4.12 compat current_time removed linux 4.9 added current_time preferred interface get filesystem time current_time retired linux 4.12 reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 6114,,
3156,a3eeab2de68670a4481eab3d086982aff23b6906,OLi <loli10K@users.noreply.github.com>, 2017-05-10 01:21:09 +0200,5349, add property overriding zfs receive allows user specify property value override property exclude property receiving zfs send stream native user property specified useful using zfs send receive periodic backup replication let user change property canmount mountpoint compression without modifying source reference http www.illumos.org issue 2745 http www.illumos.org issue 3753 reviewed matthew ahrens mahrens delphix.com reviewed alek pinchuk apinchuk datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 1350 close 5349,,
3157,305bc4b370b20de81eaf10a1cf724374258b74d1,hristian Schwarz <me@cschwarz.com>, 2017-05-10 00:36:53 +0200,6102, make createtxg guid property public document existence createtxg guid native property man page zfs command output one great feature zfs incremental replication snapshot possibly pool different machine shell script commonly used auomate procedure find recent common snapshot side perform incremental send recv currently script rely sorting order zfs list default createtxg assumption snapshot name either side change making createtxg guid part public zfs interface script enabled use createtxg determine logical temporal order snapshot creation property equivalent substitute since multiple snapshot may created within one second guid uniquely identify snapshot independent current display name potential making script safer correct reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed dhe git dehacked.net reviewed richard laager rlaager wiktel.com signed christian schwarz cschwarz.com close 6102,,
3158,78d95eaa732f074a6351045e59cd974380ad50ab,OLi <loli10K@users.noreply.github.com>, 2017-05-10 00:22:46 +0200,6096, fix null pointer dereference zfs create race condition zpool export zfs create crash latter never check libzfs zpool_open return value libzfs zfs_create reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6096,,
3159,4e3de24b61b9116f0138d22ec687d0a759b29967,OLi <loli10K@users.noreply.github.com>, 2017-05-09 20:51:40 +0200,6108, fix zfs .deb package warning prerm script debian zfs package generated alien call prerm script rpm preun integer first parameter result following warning zfs.prerm line remove integer expression expected modify condition avoid warning reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 6108,,
3160,3e2ecae01c6de6f885eca2ea78f00db2d21065ef,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-05-09 11:34:19 -0700,6111, fix coverity defect cid 161638 cid 161638 resource leak resource_leak ensure string array freed case error reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6111,,
3161,e624cd1959904735eda81f1a9a45d99848bb3503,hunwei Chen <tuxoko@gmail.com>, 2017-05-09 10:38:46 -0700,6113, linux 4.12 compat pf_fstrans removed zfsonlinux spl 8f87971 added xfs related check use accordingly reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 6113,,
3162,8f87971e1fd11e3bca034dff2cbc0e884381c350,hunwei Chen <tuxoko@gmail.com>, 2017-05-09 10:36:54 -0700,614, linux 4.12 compat pf_fstrans removed change spl_fstrans optionally contains pf_fstrans also add check specifically pf_fstrans reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 614,,
3163,a0e84010c94570fd2b6c8b43da49f0cd3e1a8e09,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-05 10:33:40 -0700, , tag 0.7.0 rc4 fourth release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3164,1eab430af7828cc1f85a7c26ef37d5da88884977,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-05 10:17:32 -0700, , fix unused variable warning remove lz4_ac local variable resolve following unused variable warning non debug build dmu.c function dmu.c 1892 warning unused variable lz4_acâ wunused variable boolean_t lz4_ac os_spa signed brian behlendorf behlendorf1 llnl.gov,,
3165,3665037f301b83144d198676f06a782f3273676f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-05 09:23:03 -0700, , tag 0.7.0 rc4 fourth release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3166,c17486b2178fc545c50d48effd4be47d33208933,vozden Neskovic <neskovic@gmail.com>, 2016-11-26 21:30:44 +0100,5428, add missing _destroy _fini call proposed debugging enhancement zfsonlinux spl 587 identified following missing _destroy _fini call reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 5428,,
3167,8fa5250f5d779e577406c581fc2d7fbf0baceea5,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-02 17:37:14 -0700,5902, default change default zvol behavior request handled asynchronously behavior functionally zfs 0.6.4 release reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 5902,,
3168,bc17f1047a83cc8c4065e0ef84333a0d9b9d73aa,ichard Yao <ryao@gentoo.org>, 2014-07-11 14:35:58 -0400,5902, enable linux read ahead single page zvols linux read ahead logic designed accelerate sequential workload zfs read ahead logic called zprefetch operates zvols datasets two prefetchers active time cause overprefetching unnecessarily reduces iop performance cow filesystems like zfs testing show entirely disabling linux prefetch result significant performance penalty read commensurate benefit seen random writes appears read ahead benefit inversely proportional random write benefit single page linux layer read ahead appears offer middle ground workload reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 5902,,
3169,5731140eaf4aaf2526a8bfdbfe250195842e79eb,ageLtMan <rageltman [at] sempervictus>, 2017-03-18 00:51:36 -0400,5902, disable write merging zvols current zvol implementation doe explicitly set merge option zvol device queue result default merge behavior explicitly set zvol queue allowing zio pipeline work initial benchmark tiotest o_direct show random write performance going almost zvols even significant rewrite logical space allocation reviewed richard yao ryao gentoo.org reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed rageltman rageltman sempervictus issue 5902,,
3170,4cb932d95140e358426cb7ca8505ee5e66939bcc,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-04 14:32:43 -0700,6088, update rsend_014_pos send c_volume test case send c_volume test case observed occasionally fail bit system issue fully understood disable test case rsend_014_pos test case occasionally fail due ebusy export lead subsequent test failure resolve issue retrying export ebusy additionally remove gratuitous use eval reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 6088,,
3171,35b7842f6821ecbf019e64204730cc0425ecc331,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-03 18:27:59 -0700,6091, enable zfs_destroy test case unable reproduce failure locally enabled determine observed buildbot failure rate updated expected linux behavior busy mount point even snapshot expected fail resolved transient ebusy retry reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov issue 5635 issue 5893 close 6091,,
3172,dddef7d600580ea35177299fe8394f665cc13387,OLi <loli10K@users.noreply.github.com>, 2017-05-03 18:31:05 +0200,5763, ashift improvement commit allow higher ashift value zpool create ashift value previously limited block b41c990 limited number uberblocks could fit statically sized 128k vdev label ring buffer could prevent ability safely roll back pool recover since b02fe35 largest uberblock size support allow store minimum number uberblocks vdev label even higher ashift value additionally change ashift pool property behaviour set used default hint value subsequent vdev operation zpool add attach replace custom ashift value still specified command line desired finally fix bug add o_ashift.ksh caused missing variable reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 2024 close 4205 close 4740 close 5763,,
3173,9d3f7b87919b7d0d869153ca72844f565cd0bf52,laf Faaland <faaland1@llnl.gov>, 2017-05-02 13:55:24 -0700,5108," write label 2,3 uberblocks vdev expands vdev_psize increase location label change location relative end device configs label written next spa_sync vdev added dirty config list however uberblock ring written new location leaving device vulnerable beginning device overwritten damaged patch copy uberblock ring label label new location next sync vdev_psize increase also add test confirm uberblocks copied reviewed bearbabyliu liu.huang zte.com.cn reviewed andreas dilger andreas.dilger intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5108",,
3174,e7fbeb606a18b9f04daadddc19b9c4f9a9b34841,OLi <loli10K@users.noreply.github.com>, 2017-05-02 22:43:53 +0200,6032, add zfs_nicebytes print human readable size add zfs_nicebytes print human readable size zfs zpool zdb output string confusing user unit specified add new used print byte human readable form additionally update test case use machine parsable zfs get reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 2414 close 3185 close 3594 close 6032,,
3175,03b60eee78b0bf1125878dbad0fcffd717def61f,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 21:34:56 -0400,6035, allow scaling arc proportion pagecache multiple filesystems use memory pressure cause arc_cache collapse minimum allow arc_cache maintain proportional size even hit rate via evictable size kernel shrinker thus effect memory pressure akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com close 6035,,
3176,4149bf498a3490a8ab506109e3893087f35fd23f,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 21:01:31 -0400,6035, correct signed operation could return wrong page value akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3177,44813aefad9a685be92214a331f413806974a419,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 19:31:56 -0400,6035, run reaper shrink cache calling nothing evictable cause extra kswapd cpu also shrink unlikely memory reap likely called microsecond ago exception direct reclaim see hard hit kswapd light test workload 34.95 zfs 5.40 spl 3.79 kernel _raw_spin_lock 2.86 spl 2.70 kernel 1.93 kernel 1.55 kernel __wake_up_bit 1.20 kernel 1.20 kernel zfs mounted ext4 pagecache memory pressure still consumes excessive cpu 12.69 kernel 10.76 kernel 7.98 kernel drop_buffers 7.31 kernel 6.44 zfs 4.19 kernel 4.00 kernel __slab_free 3.95 kernel 3.09 kernel pagecache workload patch series 11.58 kernel 11.20 kernel drop_buffers 9.67 kernel 8.44 kernel 4.86 kernel 4.43 kernel 4.00 kernel __slab_free 3.44 kernel sample perf akamai zfs 3695042 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3178,1a31dcf53cd71c3c71db343fc4c9ab1dfa326d3f,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 19:30:29 -0400,6035, wakeup waiter actually done work akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3179,2e91c2fb1a47f98c2dc06725c284db16d852a618,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 18:50:32 -0400,6035, stop kernel shrinker lock contention lock contention indicate stop condition kernel slab shrinker cause stall kernel trying free large part cache done drop_caches also perhaps spinlock code eliminated akamai zfs 3593801 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3180,b855550c336c04b2bde85d9ffbd893b196fdd7b5,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 18:46:46 -0400,6035, stop double reclaiming reclaiming move increment direct call busy exit wihout anything data reclaimed reclaim thread previous location meant reclaim memory thread also schedule amount memory reclaim arc_reclaim effectively doubling requested reclaim akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3181,30fffb90218fd44466288d3a3d359271504c4f76,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-15 18:39:40 -0400,6035, make arc_need_free update atomic ensures proper accounting byte requested free akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3182,9b50146dc444239112610284a0872310701289c4,ebabrata Banerjee <dbanerje@akamai.com>, 2017-02-26 20:32:13 -0500,6035, report ghost buffer evictable mem ghost meta data buffer actually allocated akamai zfs 3695072 reviewed tim chase tim chase2k.com reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com issue 6035,,
3183,2b91b5119c16539a074ae08e0998e2b527a976b4,xiong <jinshan.xiong@gmail.com>, 2017-05-02 10:06:18 -0700,6057, minor improvement abd_free_pages need loop free page single scatterlist entry single compound page page freed one invocation __free_pages case reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard yao ryao gentoo.org signed jinshan xiong jinshan.xiong gmail.com close 6057,,
3184,24fa20340dda244270a1382bfdb8d94f579ae7df,xiong <jinshan.xiong@gmail.com>, 2017-05-02 10:04:30 -0700,6084, guarantee pagesize alignment large zio buffer current implementation zio buffer 16kb bigger guaranteed pagesize alignment break lustre since assumes arc_buf_t b_data must page aligned zio buffer greater equal pagesize patch make zio buffer pagesize aligned size pagesize change may cause little bit memory waste fine abd introduced zio buffer used hold data temporarily live memory short reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed jinshan xiong jinshan.xiong gmail.com signed jinshan xiong jinshan.xiong intel.com close 6084,,
3185,7dae2c81e7b2e68a596c5b431444be0fae308156,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-02 09:46:18 -0700,6089, linux 4.12 compat filesystems converted dynamically allocated bdis destruction structure handled part super block destruction refactor code abstract away detail creating destroying bdi reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 6089,,
3186,153b2285545509c082be56dbf3ba5041de5d6e48,uri Pankov <yuri.pankov@nexenta.com>, 2017-04-26 14:55:10 -0400,6074, openzfs 7786 zfs vdev_online need better notification state change authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved albert lee trisk forkgnu.org reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov ported bunder2015 omfgbunder gmail.com openzfs issue http www.illumos.org issue 7786 openzfs commit http github.com openzfs openzfs commit db8498f close 6074,,
3187,e99932f7dec6efeb006e225e0bf0901c30345cac,rian Behlendorf <behlendorf1@llnl.gov>, 2017-05-01 13:01:39 -0700,6081, limit reinstate default limit reviewed giuseppe natale dinatale2 llnl.gov reviewed chunwei chen david.chen osnexus.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 6072 close 6081,,
3188,692e55b8fea00a0d0bd46188d68031292f04e4a8,hunwei Chen <david.chen@osnexus.com>, 2017-02-22 16:08:04 -0800,5824, reinstate zvol_taskq fix aio zvol commit 37f9dac removed zvol_taskq processing zvol request removed part switching make_request_fn motivated concern time dispatch latency however also made bio request synchronous caused serious performance issue bio submitter would wait every bio submitted effectively making depth patch reinstate zvol_taskq make sure overlapped ordered properly take range lock zvol_request pas along bio function zvol_ write discard read order facilitate benchmark module option added switch sync async request handling moment default behavior synchronous likely change pending additional testing reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5824,,
3189,e815485fe9e1716d92e0e0e1e6e4ce1b95d3bb00,im Chase <tim@chase2k.com>, 2017-04-24 23:01:04 -0500,6064, update documentation documented related actually related also expand documentation describe allocation throttle introduced part openzfs 7090 3dfb57a reviewed richard yao ryao gentoo.org reviewed reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 6064,,
3190,a7004725d0ad52fa005c29f68ce55273f11d95ac,an Kimmel <dan.kimmel@delphix.com>, 2017-04-11 21:56:54 +0000,6067, openzfs 7252 compressed zfs send receive openzfs 7252 compressed zfs send receive openzfs 7628 create long version zfs send receive option authored dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed david quigley dpquigl davequigley.com reviewed thomas caputi tcaputi datto.com approved dan mcdonald danmcd omniti.com reviewed david quigley dpquigl davequigley.com reviewed loli10k ezomori.nozomu gmail.com ported bunder2015 omfgbunder gmail.com ported brady don.brady intel.com ported brian behlendorf behlendorf1 llnl.gov porting note 7252 already picked abd work commit represents gap final commit openzfs fixed check do_dump alternate version function implemented linux doe depend fio behavior fio differs significantly based exact version mkholes replaced truncate linux openzfs issue http www.illumos.org issue 7252 openzfs commit http github.com openzfs openzfs commit 5602294 close 6067,,
3191,7a25f0891eef4adbe00dd03e26b6128dc99e170d,li5 <weigang.li@intel.com>, 2017-04-26 08:41:58 +0800,6051, change u16 u32 due run long time qat compression variable inst_num overflow cause neighbor variable overwritten change definition u16 u32 reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com close 6051,,
3192,603a1784792f61e79f8b53d707a46d99cfc927e6,under2015 <omfgbunder@gmail.com>, 2017-04-24 13:56:44 -0400,6054, fix typo zfs module parameter man page fix typo zfs module parameter man page reviewed richard laager rlaager wiktel.com reviewed mike mcquaid mike mikemcquaid.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed gvozden neskovic neskovic gmail.com reviewed neal gompa ngompa13 gmail.com reviewed jason zaman jason perfinion.com reviewed ned bass bass6 llnl.gov reviewed jorgen lundman lundman lundman.net reviewed prakash surya prakash.surya delphix.com reviewed hajo ller dasjoe gmail.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed richard yao ryao gentoo.org reviewed tim chase tim chase2k.com reviewed dhe git dehacked.net reviewed matthew thode prometheanfire gentoo.org reviewed thomas caputi tcaputi datto.com reviewed george melikov mail gmelikov.ru reviewed kerneloftruth kerneloftruth gmail.com reviewed kash pande kash tripleback.net reviewed ilovezfs ilovezfs icloud.com reviewed jwittlincohen reviewed jack draak jackdraak gmail.com reviewed ptx0 reviewed giuseppe natale dinatale2 llnl.gov reviewed kokokokoka reviewed jcount jcount hush.ai signed bunder2015 omfgbunder gmail.com close 6054,,
3193,a00433837236507e6ce90c22bf09e6699deef991,atthew Ahrens <mahrens@delphix.com>, 2017-04-13 14:35:00 -0700,6048, openzfs 8025 dbuf_read creates unnecessary zio_root bonus buf authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed prashanth sreenivasa pks delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov dbuf_read creates zio_root track wait zio may happen part call however blkptr_t buffer null hole create zio zio_root unnecessary always case calling dbuf_read bonus buffer blkptr part containing dnode workload read lot bonus buffer e.g file creation removal creating destroying unnecessary zio decrease performance around fix create destroy zio_root dbuf_read blkptr null hole porting note error handling dbuf_read_impl fails originally added commit 5f6d0b6f5 preserved openzfs issue http www.illumos.org issue 8025 openzfs commit http github.com openzfs openzfs commit 8ec5c7c close 6048,,
3194,321204bec61042d7785e1aa3c3362529e8e8373b,eHackEd <DeHackEd@users.noreply.github.com>, 2017-04-24 13:34:37 -0400,6061, typo zfs module parameter reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 6061,,
3195,5034557bdd5f770ce67143600a98fad3114ff3bd,eHackEd <DeHackEd@users.noreply.github.com>, 2017-04-24 13:33:28 -0400,6060, fix zpool iostat cache log output fix formatting error commit d6418de057 reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed tony hutter hutter2 llnl.gov signed dhe git dehacked.net close 6060,,
3196,e102363a663802082775edf2460d4af7e7fd6e47,on Brady <don.brady@intel.com>, 2017-04-24 11:31:45 -0600,6059, fixed zdb regression active cacheless pool zdb active cache pool fails sudo zpool create cachefile none basic mirror sdk sdl sudo zdb basic zdb open basic file directory recent regression introduce commit c30d8de reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 6059,,
3197,6e03ec4fa26110dcdf817401a375399f3432ae21,bavatar <dbavatar@gmail.com>, 2017-04-24 12:38:31 -0400,6053, fix lseek result dnode dirty fixup commit 66aca24 equivalent return value advance end file reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov tested bunder2015 omfgbunder gmail.com signed debabrata banerjee dbanerje akamai.com close 6050 close 6053,,
3198,b717b11cb0267a024ece6dc424b6575c685196fc,ony Hutter <hutter2@llnl.gov>, 2017-04-24 09:31:39 -0700,6055, fix shellcheck warning pre baked script reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 6055,,
3199,0091d66f4ebfeb83f70212ab92a4d5a8e4a9c4dc,laf Faaland <faaland1@llnl.gov>, 2017-04-21 14:26:43 -0700,5983, correct lock asserts vdev_label_read write existing assertion vdev_label_read testing config lock held incorrect assertion test lock exceed required safety vdev_label_ read write changed assert scl_state held rw_reader rw_writer safe change vdev tree occur scl_all rw_writer via spa_vdev_enter spa_vdev_exit change vdev state occur scl_state_all rw_writer via  therefore new assertion guarantee vdev change zio specified leaf vdev label safe furthermore consistent spa locking discussion spa_misc.c zio operation take explicit vdev_t argument ... zio_read_phys zio_write_phys ... scl_state reader suffices reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5983,,
3200,d6418de057ecb71fb4cdc1b0a89d5265d13d121a,ony Hutter <hutter2@llnl.gov>, 2017-04-21 09:27:04 -0700,5852, prebaked script zpool status iostat patch update zpool status iostat command run pre baked script etc zfs zpool.d directory wherever install script run unprivileged user unless environment var set root done encourage script written way normal user use cautious script need run privileged command consider adding appropriate line etc sudoers see zpool example  patch also allows script output custom column name script output line like name value name used column name value value multiple column specified outputting multiple line column name value space value empty dash printed instead name value line read zpool take next next line output print without column header line processed useful printing error lastly patch also disables option latency request size histogram since produced awkward output made code harder maintain reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tony hutter hutter2 llnl.gov close 5852,,
3201,038091fd4f8d24f308708987192065e55574bbe9,OLi <loli10K@users.noreply.github.com>, 2017-04-20 21:12:50 +0200,6028, documentation fix zfs zfs binary bookmark supported sending intermediary snap add missing compressed option zfs help manpage reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed loli10k ezomori.nozomu gmail.com close 6028,,
3202,2a152383a2bc54d43a7b478bd3c868b7165f2dca,ed Bass <bass6@llnl.gov>, 2017-04-20 12:10:55 -0700,6039, vdev_id fix failure due multipath bug udev may fail create expected symbolic link dev disk vdev system device mapper multipath 0.4.9 100.el6 package installed affect rhel 6.9 possibly downstream distribution version multipath command may incorrectly list drive state unkown instead running issue introduced patch http show_bug.cgi 1401769 vdev_id udev helper state reported multipath detect online component disk multipath device order resolve physical slot enclosure changing command invocation multipath work around issue causing multipath consult additional source information determine drive state reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed ned bass bass6 llnl.gov close 6039,,
3203,587e228a6fcc03aa1135fda368666841dcb0e4c8,OLi <loli10K@users.noreply.github.com>, 2017-04-20 21:09:40 +0200,6027, allow bookmark short name zfs bookmark let user create bookmark command line name without need specify dataset path extacted snapshot parameter command equivalent zfs bookmark poolname snap poolname bookmark zfs bookmark snap poolname bookmark zfs bookmark poolname snap bookmark reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 3665 close 6027,,
3204,3e67c38c3457989fc212bea8361adf9f38a51452,eorge Melikov <mail@gmelikov.ru>, 2017-04-20 23:05:39 +0400,6023, change argument command written create hole file additionally stride argument understood replaced seek equivilant result single whole sufficient test case finally conv notrunc added avoid truncating file reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 6023,,
3205,ad7e908ad52b96edf52167670b970483c3c2b95a,im Crawford <crawfxrd@users.noreply.github.com>, 2017-04-19 19:36:32 -0400,6034, fix leak send_iterate_fs fix leak generating replication stream cloned dataset reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed tim crawford tcrawford datto.com close 6034,,
3206,066753103feac707b1b6b0e0032a0ca9b0f764ea,ichard Yao <ryao@gentoo.org>, 2017-04-13 14:28:46 -0700,6020, openzfs 6392 zdb introduce verbatim import authored richard yao ryao gentoo.org approved dan mcdonald danmcd omniti.com reviewed yuri pankov yuri.pankov gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov porting note already implemented zfs linux patch resolved delta present version openzfs issue http www.illumos.org issue 6392 openzfs commit http github.com openzfs openzfs commit 9bb97de close 6020,,
3207,f995e5ec43aa25c3e131e431606d141e121786f0,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-18 09:45:45 -0700,6021, clean correctly ensure zinject get called whenever exit reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov issue 5444 close 6021,,
3208,6faad211e348e565a2725278cf5edb7fec7eaf4b,eorge Melikov <mail@gmelikov.ru>, 2017-04-18 20:44:17 +0400,6024, zfstest add dmesg command path error example sudo dmesg command found reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 6024,,
3209,06226b5936eefa16372cc370c584f4287bbc58c4,HE <git@dehacked.net>, 2017-03-25 22:36:28 -0400,5926, increase resilver operation frequently cause small amount dirty data written disk time resulting scheduler issue write time resilvering disk rotational medium drive often travel past next sector written receiving write command zfs significantly delaying write next sector raise drive kept fed resilvering reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net issue 4825 close 5926,,
3210,f6d4ce8e34e8b051ccc8823604b53b5b27ba6407,atthew Ahrens <mahrens@delphix.com>, 2017-04-13 14:38:16 -0700,6017, openzfs 8061 sa_find_idx_tab declared type safely authored matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reviewed george wilson george.wilson delphix.com reviewed chris williamson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov sa_find_idx_tab declared taking returning void parameter declared specific type openzfs issue http www.illumos.org issue 8061 openzfs commit http github.com openzfs openzfs commit 4e64aff close 6017,,
3211,a5c3a1efaf8a47b0988a27ae429c4b28467abae3,lan Somers <asomers@gmail.com>, 2017-04-13 14:22:32 -0700,6016, openzfs 7900 zdb print path znode verbosity authored alan somers asomers gmail.com approved dan mcdonald danmcd omniti.com reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov two reason finding znode path slower printing znode information verbosity corrupted pool like one mentioned zdb crash try determine znode path patch zdb still extract useful information pool openzfs issue http www.illumos.org issue 7900 openzfs commit http github.com openzfs openzfs commit 2b0dee1 close 6016,,
3212,87a275d97aa5b7bb47c0601c8b005e8ae85be2f7,ndriy Gapon <avg@FreeBSD.org>, 2017-04-13 14:32:08 -0700,6015, openzfs 6101 attempt lzc_create filesystem volume result panic authored andriy gapon avg freebsd.org approved dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov querying zpl property verify objset type dmu_ost_zfs openzfs issue http www.illumos.org issue 6101 openzfs commit http github.com openzfs openzfs commit ce2243a close 6015,,
3213,31b6bc74b91ba659689dab1d316d72af27625e4d,ndriy Gapon <avg@FreeBSD.org>, 2017-04-14 01:42:15 -0400,6014, openzfs 8026 retire authored andriy gapon avg freebsd.org approved richard lowe richlowe richlowe.net reviewed matthew ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8026 openzfs commit http github.com openzfs openzfs commit 9b33e07 close 6014,,
3214,66aca24730adfb2e3875e5148a03dd1fb435d438,ebabrata Banerjee <dbanerje@akamai.com>, 2017-03-24 17:28:38 -0400,5962, seek_hole block txg_wait_synced force flushing txg painfully slow competing disk since process meant execute asynchronously optimize path via allowing data hole seeking file clean dirty fall back old logic compromise disabling feature entirely reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed debabrata banerjee dbanerje akamai.com close 4306 close 5962,,
3215,a44e7faa6c63998a4c058901a5c587706abe56ab,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-13 09:40:56 -0700,6006, openzfs 6410 teach zdb perform object lookup path authored yuri pankov yuri.pankov nexenta.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andrew freebsd.org approved dan mcdonald danmcd omniti.com ported brian behlendorf behlendorf1 llnl.gov porting note replaced zdb.8 upstream mdoc zdb.1m version updated include linux specific feature verbatium import improved label printing minor change zdb output honor character limit openzfs issue http www.illumos.org issue 6410 openzfs commit http github.com openzfs openzfs commit ed61ec1 close 6006,,
3216,e550644f0cdd5c3f312e8fc92846b8b1fc4290f2,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-13 09:40:00 -0700,6007, openzfs 5120 zfs allow large block gzip raidz boot pool loader project authored toomas soome tsoome me.com reviewed george wilson george.wilson delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed andrew stormont andyjstormont gmail.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brady don.brady intel.com ported brian behlendorf behlendorf1 llnl.gov porting note grub 2.02 beta2 422 gcad5cc0 includes support large block commit 8aab121 allowed gzip grub allows pool multiple top level vdevs openzfs issue http www.illumos.org issue 5120 openzfs commit http github.com openzfs openzfs commit c8811bd close 6007,,
3217,a167aa7cd45b045047a75c07e06f3697bed8440c,iuseppe Di Natale <dinatale2@llnl.gov>, 2017-04-12 15:49:31 -0700,6009, invalidate cache zpool labelclear sure invalidate vdev cache performing zpool labelclear case cache stale operation bypassed since open o_rdwr invalidate safe reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 6009,,
3218,00481e7dad1d5608ae244eb053517e2c36d9a6de,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-12 13:36:48 -0700,6002, openzfs 7503 zfs test tail zfs_dbgmsg test failure authored pavel zakharov pavel.zakharov delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matt ahrens mahrens delphix.com approved gordon ross gordon.w.ross gmail.com reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov porting note enable internal log debug build zfs tests.sh callback zfs_dbgmsg.ksh dump interal log via kstat callback zfs_dmesg.ksh dump dmesg log default.cfg test suite specific command dropped openzfs issue http www.illumos.org issue 7503 openzfs commit http github.com openzfs openzfs commit 55a1300 close 6002,,
3219,120ff39a75ad52efc359308a5e128a58998dd2f3,ichard Yao <ryao@gentoo.org>, 2017-04-08 12:51:04 -0400,5993, fix header inclusion standard conformance musl sys errno.h literally warning redirecting incorrect include sys errno.h errno.h include errno.h doe sys poll signal rather noisy building zol musl musl also correct pointing correct header outside sys according single unix specification http onlinepubs 7908799 xsh errno.h.html http onlinepubs 7908799 xsh poll.h.html http onlinepubs 7908799 xsh signal.h.html let implement sys version header redirect proper userland one building userspace silence warning also instance include incorrectly sys outside sys userspace code instance let fix includes directly reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard yao ryao gentoo.org close 5993,,
3220,281f1fa30ac3558d0e5e1573bdb9113291815bcd,ichard Yao <ryao@gentoo.org>, 2017-04-09 15:00:03 -0400,5993, fix zpool iostat musl building gentoo musl gcc complains timestamp.c function timestamp.c warning passing argument nl_langinfoâ make integer pointer without cast define _date_fmt  timestamp.c note expansion macro _date_fmtâ fmt nl_langinfo _date_fmt  error wrapped meet comment style requirement code used zpool iostat print date upon testing see date printed let use d_t_fmt something get printed d_t_fmt avaliable fall back  reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard yao ryao gentoo.org close 5993,,
3221,bc482ac2ed80d77cf0186ccf670e02545f4ba883,ichard Yao <ryao@gentoo.org>, 2017-04-08 13:14:14 -0400,5993, add missing includes zed_log.c gcc 4.9.4 complains implicit function declaration building musl gentoo zed_log.c function zed_log.c warning implicit declaration function getpidâ int getpid  zed_log.c warning implicit declaration function pipeâ pipe _ctx.pipe_fd  zed_log.c function zed_log.c warning implicit declaration function closeâ close _ctx.pipe_fd  zed_log.c function zed_log.c 141 warning implicit declaration function readâ read _ctx.pipe_fd sizeof wimplicit function declaration end warning removed meet comment style requirement man page say include sys types.h unistd.h silence warning reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed richard yao ryao gentoo.org close 5993,,
3222,dd49132a1d727c7363bbad82f390c06c40d140c6,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-12 08:47:42 -0700,5979, openzfs 7535 need test resumed send top filesystem authored john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net ported brian behlendorf behlendorf1 llnl.gov porting note older version exportfs match multiple export share common prefix reorder list unshares occur least unique enabled updated linux openzfs issue http www.illumos.org issue 7535 openzfs commit http github.com openzfs openzfs commit ac89d1e close 5979,,
3223,17b43f96f9cfeb0deef7350cc016a8e28c500867,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-11 18:37:45 -0700,5998, skip rate limiting event event rate limiting event immediately return processing done reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5998,,
3224,dbb38f660509073f43284c6c745a4449ffd46385,uri Pankov <yuri.pankov@nexenta.com>, 2017-01-13 09:25:15 -0800,5981, openzfs 6865 want zfs test case zpool labelclear command authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com approved robert mustacchi joyent.com reviewed loli10k ezomori.nozomu gmail.com ported brian behlendorf behlendorf1 llnl.gov porting note updated zpool labelclear zdb attempt find vdev given solely short name behavior consistent upstream openzfs code test case depend actual implementation differs slightly due device naming convention linux add o_ashift test case updated expect failure label exists read_efi_label read operation use o_rdonly open time enforce write partition information using o_direct fsync page cache invalidation ensure consistent view device dump_label zdb invalidate page cache order get authoritative label disk openzfs issue http www.illumos.org issue 6865 openzfs commit http github.com openzfs openzfs commit c95076c close 5981,,
3225,047187c1bd4a893e7a89e8795fa8f4ecc3eb0732,OLi <loli10K@users.noreply.github.com>, 2017-04-11 00:28:21 +0200,5941, fix size inflation try assign new transaction txg must know beforehand sufficient free space disk decide dmu_tx_assign reject enospc rely inflate size logical writes factor calculated spa_dvas_per_bp problem current implementation take account happens small writes vdevs large physical block size consider case writes dataset recordsize 512 copy vdev ashift usually ssd block size every logical end allocating 24k disk 512 byte multiplied double size account allow kind writes assigned possible pool almost full trigger allocation failure enospc zio pipeline turn result whole pool suspended bug fixed using max value chosen logical size zfs_write maximum physical block size used among vdevs reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5941,,
3226,8542ef852aabf63e8a951aa2a8dfd612b0fea597,atthew Ahrens <mahrens@delphix.com>, 2017-04-10 15:21:45 -0700,5931, openzfs 8005 poor performance 1mb writes certain raid configuration authored matt ahrens mahrens delphix.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed brady don.brady intel.com ported matt ahrens mahrens delphix.com raid requires space allocated multiple sector minimum size block required amount parity thus block raidz1 must allocated multiple sector raidz2 multiple raidz3 multiple sector unit ashift byte typically 512b 4kb satisfy constraint allocation size rounded proper multiple resulting pad sector end block content pad sector used need read write sector however storage hardware performs much worse around fast mostly contiguous writes small gap non overwritten data writes therefore zfs creates optional zio writing raid block include pad sector writing pad sector fill gap two required writes issue optional zio thus doubling performance gap filling performance improvement introduced july 2009 writing optional zio done aggregation code vdev_queue.c problem also subject limit size aggregate writes default 128kb given block amount data plus padding written leaf device exceeds optional zio written resulting performance degradation problem occurs certain value ashift compressed block size raid configuration number parity data disk occur default recordsize 128kb compression enabled configuration recordsize 1mb larger impacted degree problem notably occurs recordsize 1mb compression disk raidz2 raidz3 group 512b 4kb sector therefore problem known 1mb wide raidz2 problem problem also occurs following configuration recordsize 512kb 256kb compression problem occurs rarely used configuration wide raidz1 recordsize 512kb ashift 4kb sector wide raidz2 either recordsize either ashift wide raidz2 recordsize 512kb either ashift wide raidz2 recordsize 512kb either ashift recordsize 1mb compression ashift 512b sector raidz1 disk raidz2 disk raidz3 disk recordsize 1mb compression ashift 4kb sector raidz1 disk raidz2 disk raidz3 disk recordsize 2mb larger selected changing kernel tunables many configuration affected including higher number disk disk recordsize 2mb increase allow optional zio aggregated thus eliminating problem setting 256kb fix commonly used configuration solution aggregate optional zio regardless aggregation size limit analysis sponsored intel corp openzfs issue http www.illumos.org issue 8005 openzfs commit http github.com openzfs openzfs pull 321 close 5931,,
3227,42db43e982a243342a38e13f513513bb164d45e3,iuseppe Di Natale <dinatale2@llnl.gov>, 2017-04-06 08:25:47 -0700,5216, openzfs 2932 support crash dump raidz etc pool authored bill pijewski wdp joyent.com reviewed jerry jelinek jerry.jelinek joyent.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 2932 openzfs commit http github.com openzfs openzfs commit 810e43b close 5984 close 5216,,
3228,a8d6ae1e16b253ac2bdb362b9a76945627faa7db,eorge Melikov <mail@gmelikov.ru>, 2017-04-10 03:17:55 +0400,5996, zfstest replace dircmp diff dircmp exist linux diff already used zfstests platform reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com signed george melikov mail gmelikov.ru close 5996,,
3229,f94a5dccf76a68a8a3a6bf7914474a5e401fdb8a,eorge Melikov <mail@gmelikov.ru>, 2017-04-10 03:15:44 +0400,5997, zfstest missed backslash reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 5997,,
3230,3b7f360c9606079c518829c5bd82fe8f8a89e3c0,eorge Wilson <george.wilson@delphix.com>, 2017-04-07 13:50:18 -0700,5991, openzfs 8023 panic destroying metaslab deferred range tree authored george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reviewed brad lewis brad.lewis delphix.com reviewed matt ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov want dirty data final txgs pool export logic change introduces check make sure data dirtied certain point also address culprit specific bug space map upgraded final stage pool export encounter space map want upgraded phase simply ignore request get retried next time set fragmentation metric metaslab openzfs issue http www.illumos.org issue 8023 openzfs commit http github.com openzfs openzfs commit 2ef00f5 close 5991,,
3231,4c3c6b6c73e31c789a2c0ce2a70912c077f15421,ndriy Gapon <avg@FreeBSD.org>, 2017-04-07 13:54:29 -0700,5990, openzfs 5380 receive send stream need try renaming snapshot authored andriy gapon avg freebsd.org approved dan mcdonald danmcd omniti.com reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov take care thing like removing datasets removed sending side detecting renamed datasets ensuring datasets affected hierarchy property counterpart sending side necessary receiving stream single dataset generated zfs send stream includes property zfs_receive_one already take care applying property received datasets openzfs issue http www.illumos.org issue 5380 openzfs commit http github.com openzfs openzfs commit b8ab927 close 5990,,
3232,f9ea47db3d2e9494321131f789e8e5e9513b26dc,edro Giffuni <pfg@freebsd.org>, 2017-04-07 13:36:06 -0700,5989, openzfs 8046 let calloc multiplication authored pedro giffuni pfg freebsd.org approved robert mustacchi joyent.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8046 openzfs commit http github.com openzfs openzfs commit 3a3c0d5 close 5989,,
3233,c0c8cc7b4359b2f6e9c08a4bf56f0be377e3995b,ndriy Gapon <avg@FreeBSD.org>, 2017-04-07 13:52:26 -0700,5988, openzfs 8027 tighten authored andriy gapon avg freebsd.org approved dan mcdonald danmcd omniti.com reviewed matt ahrens mahrens delphix.com reviewed serapheim dimitropoulos serapheim delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 8027 openzfs commit http github.com openzfs openzfs commit 642668d close 5988,,
3234,316da928253005187cd487b38d2c43dacef8eddd,eorge Melikov <mail@gmelikov.ru>, 2017-04-10 03:01:54 +0400,5995, local typeset change ksh typeset local bash analog reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com signed george melikov mail gmelikov.ru close 5995,,
3235,d3b1783e445485ae1ee47e144160ac8852a7a246,eorge Melikov <mail@gmelikov.ru>, 2017-04-10 03:00:43 +0400,5994, zfstests cli_user misc setup.ksh space missed ksh syntax requires space statement reviewed brian behlendorf behlendorf1 llnl.gov reviewed john wren kennedy john.kennedy delphix.com signed george melikov mail gmelikov.ru close 5994,,
3236,8aab12182184802afb3937f1fa35be4368a45f0d,oomas Soome <tsoome@me.com>, 2016-12-02 23:13:44 -0800,5982, openzfs 7404 bootfs_006_pos bootfs_008_neg test fail loader project bit authored toomas soome tsoome me.com reviewed igor kozhukhov igor dilos.org reviewed marcel telka marcel telka.sk reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov porting note removed gzip zle compression restriction bootfs datasets grub added support long ago version grub understands lz4 also support enabled rootpool test runfile skipped default setup linux since modify rootpool striped pool allowed bootfs openzfs issue http www.illumos.org issue 7404 openzfs commit http github.com openzfs openzfs commit 55a424c close 5982,,
3237,10f251191f16d53d8a64a934e83c3bfe6cd9195f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-07 09:30:05 -0700,5980, openzfs 7629 fix 7290 neglected remove escape sequence authored john wren kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov porting note multiple change commit applied c1d9abf openzfs issue http www.illumos.org issue 7629 openzfs commit http github.com openzfs openzfs commit f5fb56d close 5980,,
3238,7469863167a111516303670d936ead4edec7026b,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-06 17:16:41 -0700,5976, correct shellcheck make recipe consolidated shellcheck call make recipe single call shellcheck corrected script error skipped corrected script error introduced make reporting error shellcheck reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5976,,
3239,bbfd6354a893775f7f1456b2d91479716a507be0,rian Behlendorf <behlendorf1@llnl.gov>, 2017-04-06 17:15:30 -0700,5977, skip xfstests amazon linux zfs enabled version xfstests fails build cleanly amazon linux issue resolved rebasing zfs patch latest xfstests pushing patch upstream would allow use unmodified xfstests reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5481 close 5977,,
3240,f02ad0dc751662dd15537c54c3e25bca9ccefa6c,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-06 13:18:22 -0700,5974, fix coverity defect cid 161288 cid 161288 null pointer dereferences reverse_inull ensure physpath null strcmp reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5974,,
3241,c1d9abf9059a19c2b48eaa645dbce2e1fba3e0b1,ohn Wren Kennedy <john.kennedy@delphix.com>, 2017-04-05 20:18:22 -0400,5903, openzfs 7290 zfs test suite need control utility run authored john wren kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com approved gordon ross gordon.w.ross gmail.com ported brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru porting note utility available linux removed sudo default secure path behavior path must explicitly reset top libtest.shlib avoids need user customize secure path system updated zol infrastructure manage constrained path updated test case check permission usergroup test testing tree create link bin update fault cleanup missing file cleanup fatal configure environment constrained path openzfs issue http www.illumos.org issue 7290 openzfs commit http github.com openzfs openzfs commit 1d32ba6 close 5903,,
3242,7a4500a10102c00a67442628df2ac2395484757e,ydney Vanda <sydney.m.vanda@intel.com>, 2017-03-02 09:47:26 -0700,5944, added auto replace fma test zfs test suite also included update auto online test automated auto replace test along zed fma integration 4673 auto replace_001.pos work using scsi_debug device usable virtual device currently due whole_disk var needing set functionality automated fma auto replace test work scsi_debug devs functionality exception needed added automation auto replace work correctly test alias vdev_id rule added scsi_debug device set phys_path scsidebug udevadm trigger command symlink created vdev_id.conf file etc zfs default used tree test suite var tmp zfs vdev_id.conf script zfs helpers.sh need run fault test zts use udev rule tree reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady intel.com reviewed david quigley david.quigley intel.com signed sydney vanda sydney.m.vanda intel.com close 5944,,
3243,6ba1ce9ee9741b1ce65f4a71549099d94392012e,Ã¥kan Johansson <f96hajo@chalmers.se>, 2017-04-06 00:21:13 +0200,5915, accept raidz mirror similar redundancy allow pool created raidz mirror member without giving long matching redundancy reviewed brian behlendorf behlendorf1 llnl.gov signed haakan johansson f96hajo chalmers.se close 5915,,
3244,177c91d06e493c436315e324fc7a3ac32ffa2ca7,on Brady <don.brady@intel.com>, 2017-04-05 15:24:26 -0600,5965, fix regression bit platform spa_state bit without cast thus caused null pointer dereference treated 64bit var arg accidentally introduced bcdb96a reviewed brian behlendorf behlendorf1 llnl.gov reviewed nathaniel clark intel.com signed brady don.brady intel.com close 5966 close 5965,,
3245,6b0ecd2f2f069769218d3001998a78ed8d0a19bc,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-05 13:21:10 -0700,5964, fix coverity defect cid 161264 cid 161264 uninitialized variable uninit handling using i64 throughout entire case reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed brady don.brady intel.com signed giuseppe natale dinatale2 llnl.gov close 5964,,
3246,2e215fecbe97167cd5408cea19aa50b80601248c,teven Hartland <steven.hartland@multiplay.co.uk>, 2017-04-03 16:38:51 -0700,5963, openzfs 7885 zpool list report 16.0e expandsz authored steven hartland steven.hartland multiplay.co.uk reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved gordon ross gordon.w.ross gmail.com member raidz replaced device smaller original top level vdev report expand size 16.0e reduced child asize cause raidz vdev_asize lower vdev_max_asize result underflow calculation parent expand size fix updating vdev_asize shrink already protected check vdev_min_asize always safe also raidz vdevs ensure sum child vdev_min_asize always greater parent vdev_min_size reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7885 openzfs commit http github.com openzfs openzfs commit bb0dbaa close 5963,,
3247,d456708525b9c12b0416bdfd68f2ecec5121c78e,om Matthews <tomtastic@users.noreply.github.com>, 2017-04-04 19:03:33 +0100,5959, list prop alloc free used avail manpage suggests zpool list property include used available invalid property name use alloc free place  zpool list name size used head bad property list invalid property used zpool list name size avail head bad property list invalid property avail zpool list name size available head bad property list invalid property available zpool list name size alloc free name size alloc free apool 464m 203m 261m bpool 3.62t 1.97t 1.65t  reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed tom matthew tom axiom partners.com close 5959,,
3248,bcdb96a3e197ebe64048464c19f505637b8bb7ba, Clark <Nathaniel.Clark@misrule.us>, 2017-04-03 17:23:02 -0400,5942, additional information zedlets add zpool pool state zfs_post_common allow differentiation export destroy zedlets add pool name standard export ensures pool name exported zedlets reviewed tony hutter hutter2 llnl.gov reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed nathaniel clark intel.com close 5942,,
3249,3f2da6cb739f9d288f81abebb0f4bf94d266075d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-04-03 14:20:01 -0700,5952, prevent commitcheck.sh running twice stray semicolon causing commitcheck.sh run twice running make checkstyle updated regexes matching tagged line reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 5952,,
3250,481762f6a903dd87fb2f166cce6ab8058b00f734,laf Faaland <faaland1@llnl.gov>, 2017-04-03 13:33:49 -0700,610, glibc 2.25 compat remove assert assert related definition glibc 2.25 altered warn assert wparentheses used see http abi laboratory.pro tracker changelog glibc 2.25 log.html lib list.c used construct set value magic field defined debugging replaced assert ifndef endifs reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 610,,
3251,e55ebf6afdebec0e48c49ba912e02166bd6a3bc9,eorge Melikov <mail@gmelikov.ru>, 2017-04-03 22:06:04 +0400,5957, fix typo function must end reviewed marcel telka marcel telka.sk reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 5957,,
3252,cb524aa23aa6f5bc4242e3b585a58bdd3292ae0f,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-31 09:33:38 -0700,5943, commit message format contributing guideline add need commit message specific format contributing guideline provide script help enforce commit message style reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 5943,,
3253,10cb2e0a19e46ecfe1378ccf79e71d986936f17e,laf Faaland <faaland1@llnl.gov>, 2017-03-31 09:32:00 -0700,5945, glibc 2.5 compat use correct header makedev glibc 2.5 makedev major minor defined sys sysmacros.h also defined types.h backward compatability using definition trigger compile warning break zfs build build werror autoconf email thread indicate macro may defined sys mkdev.h case commit add configure check detect makedev defined sys sysmacros.h sys mkdev.h assumes major minor defined place libspl types.h includes sys sysmacros.h preferred sys mkdev.h 2nd choice one defines makedev done including system types.h alternative would remove major minor makedev instead comparing st_dev returned stat64 configure check would unnecessary change revealed __noreturn defined unnecessarily libspl include sys sysmacros.h definition removed file __noreturn used include types.h get definition provided feature_tests.h reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5945,,
3254,8be64caabc662aaf332fd16c7b81d0dfe58fde69,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-31 09:25:23 -0700,5947, fix add o_ashift.ksh permission test case must executable skipped reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 5947,,
3255,84c07adadb2486e4049032e43e1f38650ca75289,vozden Neskovic <neskovic@gmail.com>, 2017-01-05 14:10:07 -0500,5668, remove dependency linear abd wherever possible best avoid depending linear abd update code accordingly following area vdev_raidz zio zio_checksum zfs_fm change use abd_alloc reviewed david quigley david.quigley intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 5668,,
3256,2035575fd67fd7dd14f072e1cb6f4bae8ca62c7d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-28 17:22:46 -0700,5939, openzfs 7990 libzfs snapspec_cb doe need call zfs_strdup authored marcel telka marcel telka.sk reviewed yuri pankov yuri.pankov gmail.com reviewed toomas soome tsoome me.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7990 openzfs commit http github.com openzfs openzfs commit d8584ba close 5939,,
3257,ff61d1a4959065aa99d52489438f6737765987c6,OLi <loli10K@users.noreply.github.com>, 2017-03-29 02:21:11 +0200,5878, check ashift validity zpool add df83110 added ability specify custom ashift value command line zpool add zpool attach commit add additional check provided ashift prevent invalid value used could result disastrous consequence whole pool additionally provide ashift_max ashift_min definition spa.h reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5878,,
3258,12aec7dcd9b1f4c86eb71d5b9dc737433ee93167,hunwei Chen <tuxoko@gmail.com>, 2017-03-28 11:06:22 -0700,5936, fix wrong offset args offset argument wrong changing abd_copy_off a6255b7 reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed gvozden neskovic neskovic gmail.com signed chunwei chen david.chen osnexus.com close 5932 close 5936,,
3259,7c4f1514ff65c547d6cab6d0720bf0678a59eec9,en Haerens <sen@senhaerens.be>, 2017-03-28 19:47:50 +0200,5933, fix undefined reference xdr_control building raidz_test cmd reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed senh sen senhaerens.be close 5933,,
3260,4ffeb12fa845996f6f22c6d7fc4bb8ace8ddea31,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-28 09:58:23 -0700,5934, disable rsend_009_pos test rsend_009_pos observed fail pretty frequently testing using kmemleak enabled kernel moment disable test case underlying issue resolved reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5887 close 5934,,
3261,39ccc909677b3e13c05ec7942a3219a1565f1d44,li5 <weigang.li@intel.com>, 2017-03-28 03:33:57 +0800,5914, update documentation new parameter zfs_qat_disable update documentation zfs module parameters.5 new parameter zfs_qat_disable introduced 5846 reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed weigang weigang.li intel.com close 5914,,
3262,06480b2790e4a07fefa5a2bbaaf1e26d1eb00d33,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-27 12:31:15 -0700,5919, allow c99 building zfs kernel tree commit 4a5d7f82 enabled building c99 kernel tree however building part kernel different makefiles used std gnu99 must additionially added reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5919,,
3263,7b0dc2a317a3d149d396bc48dae7b8e9bf1a1a6b,OLi <loli10K@users.noreply.github.com>, 2017-03-24 02:57:54 +0100,5917, fix zdb segmentation fault fix regression accidentally introduced openzfs 7280 ed828c0 since whether accept null valid first parameter strchr implementation specific add additional check avoid crashing reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5917,,
3264,8d703987407acfcbd992ba4a7926f2d76ca3779c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-23 18:26:50 -0700,5908, retry zfs_znode_alloc zfs_mknode historical reason zfs_mknode written could never fail pose problem linux since zfs_znode_alloc could potentually failure due low memory handle gracefully retrying zfs_znode_alloc succeeds direct reclaim eventually able allocate memory reviewed george melikov mail gmelikov.ru reviewed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 5535 close 5908,,
3265,b25c5b0639e0d2281ccbd3b5766762dc3bebfc02,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-23 18:24:09 -0700,5909, fix undefined reference add trivial function used have_libtopo defined caller find_vdev function never reached search_fru must null unless have_libtopo defined rename _has_fmd_topo existing have_libtopo originally added purpose macro never defined reviewed tony hutter hutter2 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5402 close 5909,,
3266,55922e73b4294fc6c3014be27b61201b7962088c,eorge Wilson <george.wilson@delphix.com>, 2016-11-05 20:43:56 -0700,5905, openzfs 3821 race rollback zil close zil flush authored george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed andriy gapon avg freebsd.org approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 3821 openzfs commit http github.com openzfs openzfs commit 43297f9 close 5905,,
3267,56a6054d553fd7f1cf7d7c86bf4b33951e1d009f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-22 18:08:55 -0700,5907, fix zpool status error message pool suspended impossible read list damaged file disk would result generic misleading insufficient permission error message update use standard zpool error logging function generate useful error message case error list error unavailable pool currently suspended patch doe address related issue potentially able resume suspend pool underlying device name changed additionally remove error handling zfs_alloc readability since function never fail reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 4031 close 5731 close 5907,,
3268,6a9d6359982cbff298dd17f68c3103d1269602fa,li5 <weigang.li@intel.com>, 2017-03-23 08:58:47 +0800,5846, gzip compression offloading qat accelerator patch implement hardware accelerator method gzip compression zfs zfs pool enabled gzip compression compression api automatically transferred hardware accelerator free cpu resource speed compression time enable intel qat hardware acceleration zol need qat hardware driver installed qat hardware dh8950 http ark.intel.com product 79483 intel quickassist adapter 8950 qat driver http 01.org intel quickassist technology start qat driver system service qat_service start enable qat zfs e.g configure qat qat driver path qat1.6 make set gzip compression zfs dataset zfs set compression gzip dataset get qat hardware statistic cat proc spl kstat zfs qat disable qat zfs insmod zfs.ko zfs_qat_disable reviewed brian behlendorf behlendorf1 llnl.gov reviewed jinshan xiong jinshan.xiong intel.com signed weigang weigang.li intel.com close 5846,,
3269,d48be524ce96a1a6011bb658985c5b7087d576d2,ohn Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>, 2017-03-23 01:55:00 +0100,5913, libspl fix incorrect use platform defines sparc64 libspl try detect sparc64 checking whether __sparc64__ defined unfortunately assumption correct sparc64 doe define __sparc64__ defines __sparc__ __arch64__ instead lead sparc64 detected bit sparc build fails _ilp32 _lp64 defined case fix problem remove check __sparc64__ check __arch64__ sparc host previously detected __sparc__ reviewed brian behlendorf behlendorf1 llnl.gov signed john paul adrian glaubitz glaubitz physik.fu berlin.de close 5913,,
3270,64fc776208ad14b0078b89317b0f3b24338e10c1,atthew Ahrens <mahrens@delphix.com>, 2017-03-20 18:36:00 -0700,5752, openzfs 7968 multi threaded spa_sync reviewed pavel zakharov pavel.zakharov delphix.com reviewed brad lewis brad.lewis delphix.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov ported matthew ahrens mahrens delphix.com spa_sync iterates dirty dnodes process calling dnode_sync many dirty dnodes e.g created removed lot file single thread spa_sync calling dnode_sync become bottleneck additionally many dnodes dirtied concurrently open context e.g due concurrent file creation os_lock experience lock contention via dnode_setdirty solution track dirty dnodes multilist_t spa_sync use separate thread process sublists multilist openzfs issue http www.illumos.org issue 7968 openzfs commit http github.com openzfs openzfs commit 4a2a54c close 5752,,
3271,a3478c074752610814f894375c3d947ece4938fe,laf Faaland <faaland1@llnl.gov>, 2017-03-20 17:51:16 -0700,5875, linux 4.11 compat iops.getattr friend torvalds linux a528d35 change getattr family function struct kstat interface .getattr .getattr simple_getattr interface changed int getattr const struct path struct dentry struct kstat u32 request_mask unsigned int query_flags request_mask argument indicates field caller intends use field caller specified via request_mask may set returned struct anyway value may approximate query_flags argument indicates whether filesystem must update attribute backing store currently field ignored possible getattr related function within zfs could optimized based request_mask struct kstat includes new field u32 result_mask field user got u64 attribute see statx_attr_ flag struct timespec btime file creation time field attribute btime cleared result_mask reflects appear optional based simple_getattr vfs_getattr within kernel take approach reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5875,,
3272,bf8abea4dade111bdf3aeae30bd4bd75d49aca70,laf Faaland <faaland1@llnl.gov>, 2017-03-13 10:37:10 -0700,608, linux 4.11 compat remove stub kernel 2.6.29 credential embedded task_structs zfs case one thread would need refer credential another thread forcing take hold foreign thread task_struct ensure freed since 2.6.29 credential moved task_struct cred_t addition mainline kernel originally export rhel5 kernel according zfsonlinux spl e811949a570 2.6.39 mainline kernel export longer zfs code take release hold task_struct longer reference affect linux 4.11 kernel prototype new include file linux sched task.h config check failed detect exported symbol removing unnecessary stub corresponding config check work kernel since oldest one currently supported 2.6.32 shipped centos rhel reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 608,,
3273,9a054d54fb6772305fdbe0bb5b312cf051331726,laf Faaland <faaland1@llnl.gov>, 2017-03-07 15:33:50 -0800,608, linux 4.11 compat add linux sched signal.h linux 4.11 torvalds linux 2a1f062 signal handling related function moved sched.h sched signal.h add configure check detect include new file needed reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 608,,
3274,94b1ab2ae01e9ee642aee87dd1a73e8d63629372,laf Faaland <faaland1@llnl.gov>, 2017-03-07 13:18:53 -0800,608, linux 4.11 compat vfs_getattr take args change vfs_getattr torvalds linux a528d35 new interface int vfs_getattr const struct path path struct kstat stat u32 request_mask unsigned int query_flags request_mask argument indicates field caller intends use field caller doe specify via request_mask may set returned struct anyway value may approximate query_flags argument indicates whether filesystem must update attribute backing store patch query_flags result vfs_getattr behaving argument version kernel provided linux 4.11 member blksize block always size regardless arch match size equivalent member vnode_t configure check modified ensure appropriate vfs_getattr interface used complete fix removing zfs dependency vfs_getattr entirely deferred much larger project reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 608,,
3275,f974e414268448fbb5507e91ed98be7fdf45054b,eHackEd <DeHackEd@users.noreply.github.com>, 2017-03-20 18:14:28 -0400,5906, zfs fix documentation fix zfs white space issue userused user property section zfs send support using bookmark origin snapshot reviewed ned bass bass6 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed dhe git dehacked.net close 5906,,
3276,9522bd24297620b0b5a6f96231c59875363194c1,atthew Ahrens <mahrens@delphix.com>, 2017-03-15 08:49:59 -0400,5894, openzfs 7801 add dnode routine lint authored matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7801 openzfs commit http github.com openzfs openzfs commit f25efb3 close 5894,,
3277,8614ddf9b42d7aca60f7a4218b62f3c5957fe5a0,atthew Ahrens <mahrens@delphix.com>, 2016-05-10 20:49:02 -0700,5888, openzfs 6874 rollback receive need reset zpl state disk authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com ported brian behlendorf behlendorf1 llnl.gov clone swap caused zfs rollback zfs receive zpl completely reload state dmu value remain cached zfsvfs_t openzfs issue http www.illumos.org issue 6874 openzfs commit http github.com openzfs openzfs commit 1fdcbd0 close 5888,,
3278,09ec770c2cfdb105e1d4a6e7470f2456d37c65e0,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-13 15:08:40 -0700,5876, align mount option handling type function name openzfs refactor temporary mount option way minimizes difference upstream additionally replace zfs_sb_t type zfsvfs_t rename several function consistent upstream name reviewed george melikov mail gmelikov.ru reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 5876,,
3279,1c2555ef926521671eaca918f0aaaa97dbef02af,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-08 19:56:09 -0500, , restructure mount option handling restructure handling mount option consistent upstream openzfs required making following change zfs_mntopts_t renamed vfs_t adjusted provide minimal needed functionality includes pointer back associated zfsvfs_t plus made possible revert zfsvfs_create back original prototype zfs_mnt_t structure added sole purpose providing structure pas osname raw mount pointer zfs_domount without copy mount option parsing moved zpl_ wrapper function zfs_ function allowed code simplied similar functionality appears platform signed brian behlendorf behlendorf1 llnl.gov,,
3280,f298b24ddf9695fb74603a257e2a58dd7baf0159,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-08 17:56:19 -0500, , rename zfs_ function several function renamed zfs originally ported linux revert code original name minimize delta upstream openzfs zfs_sb_teardown zfsvfs_teardown zfs_sb_create zfsvfs_create zfs_sb_setup zfsvfs_setup zfs_sb_free zfsvfs_free get_zfs_sb getzfsvfs zfs_sb_hold zfsvfs_hold zfs_sb_rele zfsvfs_rele linux zfs_sb_prune zfs_prune linux align zfs_vnops.h zfs_vfsops.h upstream much possible several prototype removed remain reordered move export_symbol line end source file consistency source file signed brian behlendorf behlendorf1 llnl.gov,,
3281,0037b49e833a7073bee0ef3f6680f330f727769e,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-07 19:21:37 -0500, , rename zfs_sb_t zfsvfs_t use zfs_sb_t instead zfsvfs_t result unnecessary conflict upstream source change instance zfs_sb_t zfsvfs_t including updating variable name whenever possible code updated consistent hope appears upstream openzfs source signed brian behlendorf behlendorf1 llnl.gov,,
3282,ef1bdf363c021525c1db9630647dea73498c6bfd,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-09 17:43:36 -0800,5879, fix zvol blkflsbuf ioctl blkflsbuf ioctl expected two thing flush dirty page stable storage invalidate clean page unfortunately existing implementation blkflsbuf zvol_ioctl flush page part current txg disk may additional dirty page page cache yet submitted dmu therefore part txg furthermore zvol_ioctl return generic blkdev_flushbuf doe invalidate page cache resolve issue moving bdev_flush zvol_ioctl explicitly waiting full txg sync invalidate page cache associated arc buffer need evicted since bypassed using o_direct reviewed chunwei chen david.chen osnexus.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5871 close 5879,,
3283,589bb918ef39058b1f06da72092e895835a7aaff,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-09 17:40:21 -0800,5882, suppress cppcheck nullpointer error zfs_write newer version cppcheck find potential null pointer bug zfs_write function difficult refactor without extensive work suppress potential null pointer error occur reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5882,,
3284,c3d043817305efebce89db5d9146e70807c4043b,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-09 10:21:59 -0800,5881, correct arc_summary dbufstat python style arc_summary dbufstat two space last function definition reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5881,,
3285,c552fbc5f025f3c1e74b85c1c0d536ee272defd0,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-09 10:20:15 -0800,5812, enable shellcheck run select script enable shellcheck run zed script paxcheck.sh zfs tests.sh zfs.sh zloop.sh reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5812,,
3286,9b77d1c9585572b7ce3af204d40278752d5f5842,hunwei Chen <tuxoko@gmail.com>, 2017-03-08 09:26:33 -0800,5833, fix nfs snapdir automount current implementation allowing nfs access snapdir buggy special snapdirs next time nfsd doe fh_to_dentry actually return root inode inside snapshot nfsd never know cross mountpoint problem nfsd hold reference vfsmount snapshot cause auto unmounter unmount snapshot even though nfs still holding dentries fix return inode snapdirs however also trigger automount upon fh_to_dentry return estale nfsd revalidate see mountpoint crossmnt nfsd aware different filesystems user must add crossmnt export option access snapshot directory reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 3794 close 4716 close 5810 close 5833,,
3287,463009865fb4398b32a825d7c00cd8a942637fae,ony Hutter <hutter2@llnl.gov>, 2017-03-08 09:20:21 -0800,5828, fix harmless barrier deprecated kernel warning centos 6.8 one time warning module load barrier deprecated seen heavily patched 2.6.32 centos 6.8 kernel seems kernel old barrier newer flush fua interface defined fix warning prefering newer flush fua interface available reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5739 close 5828,,
3288,423e7b62613d0a359e488cf2599a44174d073805,ndriy Gapon <avg@FreeBSD.org>, 2017-02-27 14:47:33 -0800,5874, openzfs 7867 arc space accounting leak reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed tim chase tim chase2k.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7867 openzfs commit http github.com openzfs openzfs commit aa1f740d close 5874,,
3289,db4ed56538db7fa3ec63bf279b8a2a1311991bed,under2015 <omfgbunder@gmail.com>, 2017-03-07 16:01:39 -0500,5873, corrected highlight zpool man page already highlighted tag break highlighting prematurely removing tag highlight entire line reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 5873,,
3290,650383f2838d5864f127e9d8595b97ad024c9648,vozden Neskovic <neskovic@gmail.com>, 2017-03-07 21:59:31 +0100,5041, icp fpu asm cleanup linux properly annotate function data section objtool doe complain enabled pas kernelcppflags assembler use kfpu_begin kfpu_end protect simd region linux kernel reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 5872 close 5041,,
3291,5fc73c46f9f94d2697b77a830dd9fb8a85368d23,under2015 <omfgbunder@gmail.com>, 2017-03-07 12:54:55 -0500,5860, fix multi line error message blkdev_compat.h fix multi line error message blkdev_compat.h changing error generating multi line error message single line error reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 5860,,
3292,3ec3bc2167352df525c10c99cf24cb24952c2786,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-07 09:51:59 -0800,5804, openzfs 7793 ztest fails assertion reviewed steve gonczi steve.gonczi delphix.com reviewed george wilson george.wilson delphix.com reviewed pavel zakharov pavel.zakharov delphix.com ported brian behlendorf behlendorf1 llnl.gov background information assertion tx_space_ verifies dirtying stuff thought would needâ know much dirty check fail transaction enospc edquot dmu_tx_assign transaction open i.e dmu_tx_assign dmu_tx_commit typically millisecond call dbuf_dirty exact block modified happens temporary accounting tx_space_ unnecessary know exactly block newly dirtied call track exact accounting fundamental problem causing bug dmu_tx_hold_ relies current state dmu e.g dn_nlevels predict much dirtied transaction state change actually perform transaction i.e call dbuf_dirty bug fixed removing assertion tx_space_ accounting perfectly accurate i.e never dirty predicted dmu_tx_hold_ removing requirement accounting perfectly accurate also vastly simplify e.g removing logic dmu_tx_count_ new space accounting approximate may actually dirtied still used determine transaction put quota transaction marked excepted check wonâ make attempt determine much space freed transaction rarely accurate enough determine transaction permitted quota introduced 2014 also wonâ attempt give creditâ overwriting existing block block may freed allows remove logic dbuf_dirty associated routine logic attempted predict disk txg syncs know overwritten block freed i.e exists snapshot openzfs issue http www.illumos.org issue 7793 openzfs commit http github.com openzfs openzfs commit 3704e0a upstream bug dlpx 32883a close 5804 porting note dnode_size replaced dnode_min_size using default dnode size would slightly better debug_dmu_tx wrapper configure option removed resolved _by_dnode conflict change yet applied openzfs,,
3293,e2fcb562759f32d3ca6f3764914222132ce2cfd9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-07 09:47:40 -0800,5868, openzfs 7843 get_clones_stat suboptimal lot clone reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7843 openzfs commit http github.com openzfs openzfs commit 4d519e7 close 5868,,
3294,3c9e0d673e1d47622e6be0bdb06d53fa8655cdf3,laf Faaland <faaland1@llnl.gov>, 2017-03-06 16:01:45 -0800,5738," dump unique configuration uberblocks zdb zdb detect configuration nvlist label configuration already dumped dump make similar check dumping uberblocks zdb check whether label already dumped contains identical uberblock dump uberblock dumping configuration uberblock state label found example label detecting redundant uberblocks configuration accomplished calculating checksum uberblocks packed nvlists containing configuration nothing unique dumped label configuration uberblocks checksum matching already dumped print nothing label additional increase verbosity follows dump unique configuration indicate label appears addition dump label space usage stats lll dump every configuration unique dump unique valid uberblock indicate label appears addition state slot invalid uuu dump every uberblock unique uuuu dump uberblock blockpointer used uuu make exit value conform manual page failing unpack configuration nvlist considered error well failing open read device add three test zdb_00 3,4,5 _pos verify functionality example output  label  version 5000 name pool state txg 880 ... redacted ...  com.delphix hole_birth com.delphix embedded_data label uberblock magic version 5000 txg guid_sum timestamp 1487715500 utc tue feb 2017 label uberblock magic version 5000 txg 772 guid_sum timestamp 1487727291 utc tue feb 2017 label ... redacted ...  label  version 5000 name pool state txg ... redacted ... com.delphix embedded_data label uberblock magic version 5000 txg guid_sum timestamp 1487727521 utc tue feb 2017 label ... redacted ... reviewed tim chase tim chase2k.com reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5738",,
3295,7a789346afec87a89c4cde465faf9be4996db556,hunwei Chen <tuxoko@gmail.com>, 2017-03-06 09:20:20 -0800,5855, fix loop device becomes read commit 933ec99 remove read write f_op vfs layer select iter_write aio_write automatically however linux 4.0 loop_set_fd actually check f_op write set read exists patch add back use generic do_sync_ read write aio_ read write new_sync_ read write read write _iter reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5776 close 5855,,
3296,fb963d33ee0dd350143ba1c9cd35d5f7d86910d2,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-06 09:17:24 -0800,5856, fix powerpc build unlike architecture sanitize ldflags environment arch arch makefile powerpc makefile allows ldflags passed resulting following build failure usr bin unrecognized option relro ldflags set usr lib rpm redhat macro default clear environment variable building kmods powerpc additionally ppc64le exists longer safe assume powerpc system big endian rely endianness provided compiler reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5856,,
3297,e0aacd9b9767a877ad61b74cf87c0da856bb1e8a,rian Behlendorf <behlendorf1@llnl.gov>, 2017-03-06 09:16:22 -0800,607, fix powerpc build unlike architecture sanitize ldflags environment arch arch makefile powerpc makefile allows ldflags passed resulting following build failure usr bin unrecognized option relro ldflags set usr lib rpm redhat macro default clear environment variable building kmods powerpc reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 607,,
3298,ebd9aa8c17596db4990979bb2f0df3f23d438115,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-03-01 12:58:12 -0800,5845, reduce size zvol enforce blocksize zvol test bit builder buildbot trouble completing enospc testing timeout reduce zvol size use block size reduce read modify writes particularly expensive bit system due reduced maximum arc size reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov reviewed kash pande kash tripleback.net signed giuseppe natale dinatale2 llnl.gov close 5845,,
3299,d25534f875ba302fab8fcce3c21d7ddd9e775fbf,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-02-28 18:02:48 -0800,5844, bug fix single test run zfs test correctly remove temporary runfile single test run cleanup setup script relative test suite location correct look script reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5844,,
3300,ec0e24c232cac7afa801ca8d247f212c24eb02a3,ydney Vanda <sydney.m.vanda@intel.com>, 2016-09-23 13:51:08 -0700,5774, add auto online test zed fma part zts automated auto online test along zed fma integration 4673 work real device mpath non real block device loop adding scsi_debug device pool note order test group run zed must currently running kernel 3.16.37 higher needed scsi_debug work properly timeout occurs test using scsi_debug device error noticed ubuntu system reboot might needed order test pas investigation also suppressed output is_real_device is_loop_device is_mpath_device making log file cluttered useless error message dev mapper sdc block device previous patch reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed david quigley david.quigley intel.com signed sydney vanda sydney.m.vanda intel.com close 5774,,
3301,4859fe796c5b03687a7b2ab3735b882c4f5cad66,laf Faaland <faaland1@llnl.gov>, 2017-02-28 16:10:18 -0800,5842, linux 4.11 compat avoid refcount_t name conflict linux 4.11 introduces new type refcount_t conflict type name defined within zfs rename zfs type zfs_refcount_t within zfs code use macro cause reference refcount_t changed zfs_refcount_t compile time reduces conflict later landing openzfs patch reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5823 close 5842,,
3302,912e2ba92f45b61df476e7e15da33e0ea3eb0ae5,att Kemp <matt@mattikus.com>, 2017-02-27 14:03:23 -0600,5834, fix initramfs hook merged usr lib lib merged lib usr lib render lib symlink find lib type name libgcc_s.so.1 return result find traverse symlink modifying find lib type name libgcc_s.so.1 work symlinked non symlinked lib directory reviewed brian behlendorf behlendorf1 llnl.gov signed matt kemp matt mattikus.com close 5834,,
3303,66eead53c9d2480f2a464ef170920953431ad200,atthew Ahrens <mahrens@delphix.com>, 2017-02-24 13:34:26 -0800,5805, clean dnode code dmu_tx.c http github.com zfsonlinux zfs commit introduced change slightly improved style porting illumos also one minor error handling fix zap_add zap may become null case error opening zap originally suggested http github.com openzfs openzfs pull 276 reviewed brian behlendorf behlendorf1 llnl.gov reviewed pavel zakharov pavel.zakharov delphix.com signed matthew ahrens mahrens delphix.com close 5805,,
3304,f7e76821c525a7764a01f4a0e16aa9e2b77e3170,saac Huang <he.huang@intel.com>, 2017-02-24 13:05:42 -0700,5802, abd style cleanup commit removed assertion help catch error improve code readability also duplicated two conditionals unnecessary made code confusing read patch clean reviewed david quigley david.quigley intel.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 5802,,
3305,384328e544b1847236a07df231e1b7b10e4cc6ce,im Crawford <crawfxrd@users.noreply.github.com>, 2017-02-24 14:29:47 -0500,5830, fix checksumflags assignment cksummer incorrectly set reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed tim crawford tcrawford datto.com close 5830,,
3306,3ae35478d75c3a94d3b23e2dd5e826a5ed9b6057,hmed G <ahmedg@delphix.com>, 2017-01-17 16:53:31 -0800,5827, openzfs 7736 zfs performance test log fio summary output authored ahmed ahmedg delphix.com reviewed john kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed stephen blinick stephen.blinick delphix.com approved dan mcdonald danmcd omniti.com reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov porting note using fio 7290 ported openzfs issue http www.illumos.org issue 7736 openzfs commit http github.com openzfs openzfs commit 7a61309 close 5827,,
3307,9e2c3bb4b977bb6c5091b63bf6a736466ba25d1a,aniel Hoffman <dj.hoffman@delphix.com>, 2017-02-17 11:48:20 -0800,5822, openzfs 7812 remove gender specific language authored daniel hoffman dj.hoffman delphix.com reviewed matt ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed chris williamson delphix.com reviewed george wilson george.wilson delphix.com reviewed igor kozhukhov igor dilos.org reviewed dan mcdonald danmcd omniti.com reviewed robert mustacchi joyent.com reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru change remove gendered language refer specifically individual person pet convention taken use variation referring user human using referring code function library additionally took liberty fix whitespace issue found file already modified openzfs issue http www.illumos.org issue 7812 openzfs commit http github.com openzfs openzfs commit ad626db close 5822,,
3308,cbeeb4afb35ecd77e70f5019ac4f3f0f88fb8df6,rakash Surya <prakash.surya@delphix.com>, 2017-01-11 16:36:58 -0800,5818, openzfs 7761 bootfs_005_neg pool destruction must handle ebusy authored prakash surya prakash.surya delphix.com reviewed yuri pankov yuri.pankov gmail.com reviewed john kennedy john.kennedy delphix.com reviewed matt ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7761 openzfs commit http github.com openzfs openzfs commit ad309d3 close 5818,,
3309,0efd97912a14bcbc9dceae3de70b9ceaafcb12a9,ndriy Gapon <andriy.gapon@clusterhq.com>, 2016-11-21 15:09:54 -0800,5817, openzfs 7199 may try free already free block 7200 block must born txg snaphot created authored andriy gapon andriy.gapon clusterhq.com reviewed matthew ahrens mahrens delphix.com reviewed brad lewis brad.lewis delphix.com approved gordon ross gordon.w.ross gmail.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7199 openzfs commit http github.com openzfs openzfs commit bfaed0b close 5817,,
3310,409b4127eea9bcf276f3bdaf5c2b8a907ccd1d59,atthew Ahrens <mahrens@delphix.com>, 2016-09-23 20:44:15 -0700,5800, openzfs 7337 inherit_001_pos occasionally time authored matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7337 openzfs commit http github.com openzfs openzfs commit b021ac0 close 5800 porting note additional code refactor better zol openzfs codebase sync,,
3311,d8fa599fab81109c22253fbe0946cbe0f98ea1c4,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-02-24 10:59:24 -0800,5775, allow zfs test run single test add flag zfs test allow user run single test providing path test relative stf_suite reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5775,,
3312,6d82f98c3d9f83045a801df60f904421b101faa9,saac Huang <he.huang@intel.com>, 2017-02-23 11:32:15 -0700,5770, fix incorrect spare vdev state replacing hot spare replaces offline vdev new parent spare vdev state set incorrectly offline correct state degraded incorrect offline state prevent top level vdev reading spare vdev thus causing unnecessary reconstruction reviewed george melikov mail gmelikov.ru reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 5766 close 5770,,
3313,8d5feecacfdcca29336209bdccd6493a5fa53576,laf Faaland <faaland1@llnl.gov>, 2017-02-23 09:52:08 -0800,603, linux 4.11 compat set_task_state removed replace set_task_state current state state linux 4.11 torvalds linux 642fa44 set_task_state removed spl form set_task_state current state state equivalent available since linux 2.2.26 furthermore state already used location within spl change impact removing unnecessary dependency reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 603,,
3314,100790a8dd7c7cbbcf35871d7361429e2ae09435,hristopher Voltz <cjunk@voltz.ws>, 2017-02-16 15:41:48 -0600,5795, retry setting led led accessed another process try update update lost add retry loop read state led update led correct state number time occur limited ensure zedlet hang zed refactor remove duplication setting led occurs one place cleanup couple warning generated shellcheck result specific choice author several note warning still present removing would make code clear require adding line tell shellcheck ignore warning remove documentation top file appears typographic error reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed christopher voltz hpe.com close 5795,,
3315,43bd43f9ce3bb690be3bc83f9797c7fce01c6047,ans Rosenfeld <hans.rosenfeld@nexenta.com>, 2016-05-26 17:32:26 +0200,5801, openzfs 7001 zvol_misc test depend sbin usr sbin path authored han rosenfeld hans.rosenfeld nexenta.com reviewed toomas soome tsoome me.com reviewed igor kozhukhov ikozhukhov gmail.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7001 openzfs commit http github.com openzfs openzfs commit 258c9c7 close 5801 porting note change previously applied,,
3316,906091718936ded06aeef49096964b6fba1e2475,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-08-30 12:01:41 -0700,5799, openzfs 7248 large block support break rsend_009_pos 7249 rsend_015_pos produce false failure due race 7250 testrunner miss option specific individual test runfiles authored john wren kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7248 openzfs commit http github.com openzfs openzfs commit f9a78bf close 5799,,
3317,ce456d483c6a30223bbbfd2308f44945d34dec8d,rakash Surya <prakash.surya@delphix.com>, 2017-01-17 17:08:12 -0800,5798, openzfs 7762 avoid division zero authored prakash surya prakash.surya delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matt ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7762 openzfs commit http github.com openzfs openzfs commit ebaf15cb close 5798,,
3318,c30e58c4628de46c36870cdedea9052711092a85,atthew Ahrens <mahrens@delphix.com>, 2017-02-15 15:49:33 -0800,5764, common multilists global tunable used arc dbuf cache user planned change tunable common multilists tuning may overridden per multilist basis reviewed pavel zakharov pavel.zakharov delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 5764,,
3319,3d3fe9f9bb4364718cb8c54d8c86bccc84ae3141,atthew Ahrens <mahrens@delphix.com>, 2016-05-15 08:09:13 -0700,5792, openzfs 6404 occasionally fail due swaplen authored matthew ahrens mahrens delphix.com 6405 zvol test setup non deterministic reviewed george wilson george.wilson delphix.com reviewed john kennedy john.kennedy delphix.com reviewed andrew freebsd.org approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6404 openzfs commit http github.com openzfs openzfs commit 24e268f close 5792 porting note converted zfs zfs openzfs 7290 ported openzfs openzfs 1d32ba6,,
3320,f9caf08a7497d3ad64bd4878c0fd8b5c78d21751,hristopher Voltz <cjunk@voltz.ws>, 2017-02-15 13:15:38 -0600,5797, fix broken url google moved style guide github update shell style guide url new location reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed christopher voltz hpe.com close 5797,,
3321,2171eb71122933c5fd07a0ec192bb7d6a9e11ace,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-08-08 09:41:07 -0700,5794, openzfs 7260 disable libdiskmgmt zfstest unless required authored john wren kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed yuri pankov yuri.pankov nexenta.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7260 openzfs commit http github.com openzfs openzfs commit 447b1e1 close 5794 porting note library libdiskmgmt specific illumos change currently impact linux mechanism could potentially leveraged future,,
3322,a454868b0c631bb37e4ffb7a0b7cd672c2ae4c22,laf Faaland <faaland1@llnl.gov>, 2017-02-13 15:30:22 -0800,5757," use file based pool zpool_expand test 002 enable use flag get_pool_prop numeric property size compared zpool_expand test suite currently one get_pool_prop numeric property add tempfile tempfile 0,1,2 default.cfg test must build pool top file one expansion necessary entry disk may point entity expanded base pool used testing file type vdevs instead using zvols within underlying pool avoid issue come pool backed pool remove shell variable ex_1gb ex_2gb used recognize correct expansion instead calculate appropriate value based variable used control file volume size org_size exp_size change also made test 001 although test enabled depends fma finally enable reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5757",,
3323,6dd95a910a258c38f239785d7275cd93ab29da37,kash Ayare <aayare@delphix.com>, 2016-06-02 21:00:23 -0700,5778, openzfs 7027 make unreasonable assumption metadata space usage reviewed prakash surya prakash.surya delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved gordon ross gordon.ross nexenta.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7027 openzfs commit http github.com openzfs openzfs commit 48cb8b9 issue 2441 close 5778,,
3324,8db2dc32cdd50c5517851eab33bc31756e78975c,uri Pankov <yuri.pankov@gmail.com>, 2016-03-19 00:11:23 +0300,5787, openzfs 6754 zfs test get_substr function redundant authored yuri pankov yuri.pankov gmail.com reviewed john kennedy john.kennedy delphix.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6754 openzfs commit http github.com openzfs openzfs commit 01ff411 close 5787 porting note acl test case used function dropped zol since linux used posix style acls functional acl nontrivial functional acl nontrivial functional acl nontrivial,,
3325,501558ee6e7465533cb6740fd643c0ec362f28d9,eorge Melikov <mail@gmelikov.ru>, 2017-02-13 23:02:22 +0300,5785, disable racy sometimes zfstests check freed space zfs destroy snapshot get wrong output space freed asynchronously background reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru issue 5740 issue 5784 close 5785,,
3326,0dc8347c30475c9b50061343e15bab428a2005ee,gor Kozhukhov <ikozhukhov@gmail.com>, 2016-06-09 16:38:35 -0400,5783, openzfs 7036 test failed authored igor kozhukhov ikozhukhov gmail.com reviewed john kennedy john.kennedy delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7036 openzfs commit http github.com openzfs openzfs commit 3f85b2a close 5783,,
3327,37bb2fc7dc794536dbdad0375557cdb48924519b,arcel Telka <marcel@telka.sk>, 2016-09-22 15:36:32 +0200,5782, openzfs 7398 zfs test zfs_get_005_neg doe work expected authored marcel telka marcel telka.sk reviewed yuri pankov yuri.pankov nexenta.com reviewed john kennedy john.kennedy delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7398 openzfs commit http github.com openzfs openzfs commit 4220fdc close 5782,,
3328,94cc33f017b45dfdc137672e8e6feddc5ff56a9e,arcel Telka <marcel@telka.sk>, 2016-10-19 10:50:39 -0700,5780, openzfs 7103 failed test cli_root zfs_snapshot authored marcel telka marcel telka.sk reviewed igor kozhukhov ikozhukhov gmail.com reviewed yuri pankov yuri.pankov nexenta.com reviewed john kennedy john.kennedy delphix.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7103 openzfs commit http github.com openzfs openzfs commit 3bfdbb4 close 5780,,
3329,a115cf35f8b4a85907e9879a18476e9b89b3c981,atthew Ahrens <mahrens@delphix.com>, 2016-07-19 16:10:27 -0700,5779, openzfs 7162 intermittent failure reviewed john kennedy john.kennedy delphix.com reviewed dan kimmel dan.kimmel delphix.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7162 openzfs commit http github.com openzfs openzfs commit 9ec0cbeb close 5511 close 5779,,
3330,544596c59e49b25584c58007d04b94097e8a8292,im Chase <tim@chase2k.com>, 2017-02-13 12:59:05 -0600,5788, fix parameter description likely cut paste error caused description applied  reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 5788,,
3331,8b2174b9a492d620d7bef45e5fb661b9f18c51a9,uri Pankov <yuri.pankov@gmail.com>, 2016-04-09 09:36:54 -0700,5789, openzfs 6580 zfs test use undefined variable wrapper authored yuri pankov yuri.pankov gmail.com reviewed john kennedy john.kennedy delphix.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6580 openzfs commit http github.com openzfs openzfs commit 9498083 close 5789 porting note deleted zol functional utils_test,,
3332,510e66db854633aed7a05ee865c140384b2dec87,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-11-05 20:32:44 -0700,5781, openzfs 7496 cmp_ds_cont never worked authored john wren kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved gordon ross gordon.w.ross gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7496 openzfs commit http github.com openzfs openzfs commit 5dc1fd7 close 5781,,
3333,717afc132631155beae9b8da183a4734b859140d,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-02-24 21:13:41 -0800,5777, openzfs 6642 testrunner output displayed wrong order 6643 zfstest enforce required privilege running reviewed george wilson george.wilson delphix.com reviewed jonathan mackenzie delphix.com reviewed yuri pankov yuri.pankov nexenta.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed john kennedy john.kennedy delphix.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6642 openzfs commit http github.com openzfs openzfs commit 412db4e close 5777 porting note 6643 change dropped different version script used configure environment linux,,
3334,d6df043c530e850e907a8391025c2989eb7a9949,hunwei Chen <tuxoko@gmail.com>, 2017-02-11 12:42:17 -0800,5768, fix one zpl_lookup following command would return success zfs creating orphan object touch seq 256 printf done funny thing work directory upgraded fzap zfs_lookup would fail properly since additional length check signed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov close 5768,,
3335,b291029e8661dfc2f03118921e854eec4e5bbb75,ony Hutter <hutter2@llnl.gov>, 2017-02-10 16:09:45 -0800,5751, enclosure led fix pas zpool iostat status include enclosure led sysfs path set led correctly import includes clearing erroniously set led prior import setting led unavail drive include symlink vdev_attach led.sh makefile.am print vdev path syslog.sh fix pool guid actually print reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5716 close 5751,,
3336,65a736bc0df16561bac14bee6bf9a6752cf8bc39,ony Hutter <hutter2@llnl.gov>, 2017-02-10 15:18:31 -0800,5773, clear enclosure sysfs path vdev label sysfs path present clear label vdev sys class block dev device path present important case disk labeled pulled put another enclosure case possible old sysfs path would used turn fault led disk old slot postion assuming new slot led sysfs entry reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5524 close 5773,,
3337,449705dbef3008f1cf69ea59276bd07720e4beb2,imon Klinkert <simon.klinkert@gmail.com>, 2015-03-11 11:02:08 +0100,5767, openzfs 5704 libzfs handle 255 file descriptor authored simon klinkert simon.klinkert gmail.com reviewed josef jeff sipek josef.sipek nexenta.com reviewed john kennedy john.kennedy delphix.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov reviewed ned bass bass6 llnl.gov reviewed chunwei chen david.chen osnexus.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 5704 openzfs commit http github.com openzfs openzfs commit bde3d61 close 5767,,
3338,d7958b4cda27b82bd24dd4d4b2a539e26c62a409,atthew Ahrens <mahrens@delphix.com>, 2016-07-13 16:48:01 -0700,5679, openzfs 7104 increase indirect block size authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed dan mcdonald danmcd omniti.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7104 openzfs commit http github.com openzfs openzfs commit 4b5c8e9 close 5679,,
3339,df7eeccc7597980efd3cb1efd9377ad5e0483042,atthew Ahrens <mahrens@delphix.com>, 2017-02-09 10:19:12 -0800,5762, panic bpobj_space null pointer dereference race condition deadlist code thread executing administrative command hold lock whole deadlist_t protect access entry deadlist contains avl tree sync thread trying insert new entry deadlist dle_enqueue hold deadlist lock moment dle_bpobj empty bpobj sentinel value close reopen two operation possible thread dereference bpobj null window thread hold deadlist dl_lock manipulate internal data scenario like one avoided reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed matthew ahrens mahrens delphix.com close 5762,,
3340,b0eac56a4d69c6f2ae7cb1937cf59e05c52e3a60,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-07 20:12:53 -0500,5758, move ziltest.sh zts framework ziltest.sh script test case designed verify correct functioning zil historical reason never added test suite always run independantly change rectifies existing ziltest.sh translated added existing slog test case reviewed brady don.brady intel.com reviewed chunwei chen david.chen osnexus.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5758,,
3341,ea7e86d8dbbfbaa96a3b018a80397cb24befcb72,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-07 18:57:50 -0500,5758, fix iput call within explicitly stated section programming rule comment top zfs_vnops.c must call iput within use zfs_iput_async move iput call dmu_tx_commit dmu_tx_abort possible possible convert iput call zfs_iput_async reviewed brady don.brady intel.com reviewed chunwei chen david.chen osnexus.com reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5758,,
3342,d834b9ce5ba6be96ce13c31351cf92c89f7762fe,eorge Melikov <mail@gmelikov.ru>, 2017-02-09 02:27:37 +0300,5740, add wait_freeing helper function zts sometimes zts check freed space zfs destroy snapshot get unexpected value space freed asynchronously case like add wait_freeing function block pool freeing property drop zero reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 5740,,
3343,d32d25c5c26c8d1e254bc0fcb8a8ae059e95cebc,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-08 10:17:29 -0800,5719, fix zfs mount.service failure boot mount command helpfully try resolve device name passed doe applying simple heuristic passing along registered mount helper normally fine however one heuristic prepend current working directory passed device name resulting directory name exists mount perform mount system call never invoke helper utility since cwd systemd running system instance root directory default mount point created zfs cause mount failure change avoids issue explicitly setting cwd different path performing mount signed brian behlendorf behlendorf1 llnl.gov close 5719,,
3344,97dde9211d95bbd219b3fac38ff60615e80c0ac1,eorge Melikov <mail@gmelikov.ru>, 2017-02-08 21:06:02 +0300,5759, fix coverity defect cid 155964 155965 cid 155964 missing break switch cid 155965 missing break switch reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 5759,,
3345,4a5d7f82679d848bcfb95d6c841f0418b24bfeab,atthew Ahrens <mahrens@delphix.com>, 2017-02-08 09:27:48 -0800,5756, allow c99 code compile add appropriate compiler flag accept c99 code help minimize difference upstream aid porting change one change necessary zvol.c define_ida macro doe work new compiler flag reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com reviewed george melikov mail gmelikov.ru signed matthew ahrens mahrens delphix.com close 5756,,
3346,23d70cdef108005ecf4d862e0af01d08dabbc9c7,eorge Melikov <mail@gmelikov.ru>, 2017-02-08 01:02:27 +0300,5741, openzfs 6931 lib libzfs cleanup gcc warning authored igor kozhukhov ikozhukhov gmail.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6931 openzfs commit http github.com openzfs openzfs commit 88f61de close 5741,,
3347,bef78122e606945efbf2e08845e7d5e8ead93c3c,avid Quigley <dpquigl@users.noreply.github.com>, 2017-02-07 10:44:03 -0700,5750, add missing module_param code added tunable exposed via module params also documented patch change type uint32 ulong done percentage tunables also document zfs module parameter man page reviewed brian behlendorf behlendorf1 llnl.gov signed david quigley david.quigley intel.com close 5750,,
3348,cd5083c00c6215f4f15c04e30feeb5f9457ec896,on Brady <don.brady@intel.com>, 2017-02-07 10:29:47 -0700,5749, fix coverity defect cid 155928 cid 155928 integer handling issue divide_by_zero current vdev label leaf count always non zero hurt check count future proofing reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 5749,,
3349,582cc0141699991da38ba8bfc8eb938ecb2d9856,OLi <loli10K@users.noreply.github.com>, 2017-02-06 19:08:10 +0100,5743, fix zfs test suite failure caused ksh brace expansion feature reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5669 close 5743,,
3350,298ec40b6d9edcbde7b1fbbf172bd05be0eb9b97,eorge Melikov <mail@gmelikov.ru>, 2017-02-04 20:23:50 +0300,5737, openzfs 7448 zfs notice disk vdevs write cache authored han rosenfeld hans.rosenfeld nexenta.com reviewed dan field dan.fields nexenta.com reviewed alek pinchuk alek.pinchuk nexenta.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reviewed brady don.brady intel.com reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7448 openzfs commit http github.com openzfs openzfs commit 295438b close 5737,,
3351,0a252daed3bafb71740ed37bd039bd421277bc82,eorge Melikov <mail@gmelikov.ru>, 2017-02-04 20:21:25 +0300,5736, openzfs 7504 kmem_reap hang spa_sync administrative task authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed tim chase tim chase2k.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7504 openzfs commit http github.com openzfs openzfs commit 405a5a0 close 5736,,
3352,2e0e443ac40c7e825a02519a497328226bd866ff,eorge Melikov <mail@gmelikov.ru>, 2017-02-04 20:10:24 +0300,5689, openzfs 7247 zfs receive deduplicated stream fails authored chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com approved robert mustacchi joyent.com reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7247 openzfs commit http github.com openzfs openzfs commit 2ad25b4 close 5689 porting note test zfs test test functional cli_root zfs_receive renamed used openzfs test always used bit build,,
3353,57c6a9174d9e1d3844181267e34d9510b1250b4a,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-03 19:00:00 -0800,5728, disable sparse_001_pos bit system commit 539d33c seems significantly increased run time test case bit system likely due dirty block free deferred later txgs moment resulting frequent failure bit builder disable test case issue analyzed resolved reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5727 close 5728,,
3354,35a357a9efe1be317d41f926732e38e18644a830,on Brady <don.brady@intel.com>, 2017-02-03 15:18:28 -0700,5730, openzfs 6866 zdb non zero status label authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported brady don.brady intel.com openzfs issue http www.illumos.org issue 6866 openzfs commit http github.com openzfs openzfs commit 3e4fae5 close 5730 porting note omitted illumos specific dev dsk dev rdsk path conversion since apply linux,,
3355,dffaa61ded206d620a0db88231e56aece56b8422,laf Faaland <faaland1@llnl.gov>, 2017-02-03 13:42:49 -0800,5735, add tmpfile_003_pos .gitignore earlier commit added test created tmpfile_003_pos add appropriate .gitignore ace1eae add support o_tmpfile fix omission reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov signed olaf faaland faaland1 llnl.gov close 5735,,
3356,d21d5b8248cf38d1518c9beccc350bc9081ff6be,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-02-03 13:24:44 -0800,5674, openzfs 4521 zfstest trying execute evil zfs unmount authored yuri pankov yuri.pankov nexenta.com reviewed andriy gapon avg freebsd.org reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov porting note correctly set inherit_001_pos openzfs issue http www.illumos.org issue 4521 openzfs commit http github.com openzfs openzfs commit 8808ac5 close 5674,,
3357,9b7b9cd370ed2ec4c8ee346bcb95cb30ba7e9ba9,eorge Melikov <mail@gmelikov.ru>, 2017-02-03 01:13:41 +0300,5725, openzfs 1300 filename normalization work remove authored kevin crowe kevin.crowe nexenta.com reviewed yuri pankov yuri.pankov nexenta.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 1300 openzfs commit http github.com openzfs openzfs commit 8f1750d close 5725 porting note zap_micro.c mt_exact replaced,,
3358,96f1b347f8f726163c105704576110a4a8be4b84,on Brady <don.brady@intel.com>, 2017-02-02 15:03:48 -0700,5724, add nvlist payload stats zdb dump dumping zfs vdev label zdb also dump nvlist stats help analyze current footprint reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed brady don.brady intel.com close 5724,,
3359,c7af63d62aba273554d6c8457e26c870ed207b40,hunwei Chen <tuxoko@gmail.com>, 2017-02-02 09:43:42 -0800,5726, fix write return zero bug 933ec99 args exit return zero mean count zero however case args zero mean error reviewed brian behlendorf behlendorf1 llnl.gov reviewed haakan johansson f96hajo chalmers.se signed chunwei chen david.chen osnexus.com close 5720 close 5726,,
3360,fc386db1916dd946512d9b965d4d354582be1f9e,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-02-01 16:47:04 -0800,5722, remove lint ifdef check zdb dbuf effectively dead code linux implementation removed improve readability want linter check real production debug build much possible reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed giuseppe natale dinatale2 llnl.gov close 5722,,
3361,8eecd4a2de217b3f7a40982dcf7765bc0c4104ba,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-01 16:28:01 -0800,5714, fix reservation test case large disk convert explicit typeset typeset declaration typeset order prevent bit overflow occurs disk  reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5715 close 5714,,
3362,0f676dc228862ce0b4f9e27d06d394e9cbaa32e3,eorge Melikov <mail@gmelikov.ru>, 2017-02-02 00:14:02 +0300,5694, openzfs 7072 zfs fails expand lun added shutdown state authored george wilson george.wilson delphix.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed alex reece alex delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7072 openzfs commit http github.com openzfs openzfs commit c39a2aa close 5694 porting note vdev.c vdev_get_stats change moved vdev_disk.c ignored linux specific code different,,
3363,3b6425cb5bfd0fc2a14eee451ba36873318a96d9,rian Behlendorf <behlendorf1@llnl.gov>, 2017-02-01 09:36:47 -0800,5717, fix atomic_sub_64 i386 assembly implementation atomic_sub_64 use sbbl instead adcl user space atomics used statistic tracking critical explain overlooked kernel space implementation atomics layered architecture specific implementation provided kernel reviewed stefan ring stefanrin gmail.com reviewed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 5671 close 5717,,
3364,2fe36b0bfb80a4955f6ff42b2448f432223f6011,avid Quigley <dpquigl@users.noreply.github.com>, 2017-02-01 10:34:22 -0700,5589, use fletcher_4 routine natively patch add necessary infrastructure abd make use vectorized fletcher routine export abd compatible interface fletcher_4 add abd fletcher_4 test data metadata abd type reviewed brian behlendorf behlendorf1 llnl.gov original patch gvozden neskovic neskovic gmail.com signed david quigley david.quigley intel.com close 5589,,
3365,544b8053dbb03de69950c232d1f1970bc36535b6,im Crawford <crawfxrd@users.noreply.github.com>, 2017-01-31 17:47:32 -0500,5703, match word excluding pool test running test locally failing cleanup script due pool named pool match word cleanup logic cleanup testpool ignoring pool reviewed loli10k ezomori.nozomu gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed tim crawford tcrawford datto.com close 5703,,
3366,539d33c791da2f970cfa5a1bddf0533b23146265,eorge Melikov <mail@gmelikov.ru>, 2017-02-01 01:44:03 +0300,5706, openzfs 6569 large file delete starve write ops authored alek pinchuk alek nexenta.com reviewed matt ahrens mahrens delphix.com reviewed sanjay nadkarni sanjay.nadkarni nexenta.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru tested kerneloftruth kerneloftruth gmail.com openzfs issue http www.illumos.org issue 6569 openzfs commit http github.com openzfs openzfs commit 1bf4b6f2 close 5706,,
3367,a873815b95a4a66294c31db70cdce0e1a6ff650f,eorge Melikov <mail@gmelikov.ru>, 2017-02-01 01:41:23 +0300,5702, openzfs 7742 zfs send wrong error message invalid long opts two case invalid flag passed valid flag given parameter case flag either short long short flag optopt contains character flag long contains zero access long flag using argv optind case flag short optopt contains character flag flag long value 4th column long_options table flag returned could case value could simply use argv optind note case something like resume also returned argument provided error message say argument provided similar could fixed making long short option use character flag combining switch case statement think ugliness code would worth small usability enhancement authored paul dagnelie pcd delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7742 openzfs commit http github.com openzfs openzfs commit 6d69b40 close 5702,,
3368,d69a321e567bf57c08f243969031545866abaf9d,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-01-31 14:36:35 -0800,5701, openzfs 7545 zdb disable reference tracking authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov porting note moved outside zfs_debug openzfs issue http www.illumos.org issue 7545 openzfs commit http github.com openzfs openzfs commit 4dd77f9 close 5701,,
3369,3d91261599447833fb96e99055d1108ea2b0c171,ron Xu <happyaron@users.noreply.github.com>, 2017-02-01 06:25:49 +0800,5712, contrib dracut fix syntax error module setup.sh dracut module setup.sh.in syntax error make script unusable posix compliant shell like dash debian based system reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed aron happyaron.xu gmail.com close 5712,,
3370,b81a3ddc3207dd832bd236f2ff20d409a0aee0b4,im Chase <tim@chase2k.com>, 2017-01-31 16:19:08 -0600,5695, update deadman operation better align upstream openzfs deadman zol behave quite upstream openzfs addition purpose openzfs used parameter zol also used determine frequently deadman would fire triggered patch add parameter control frequently subsequent check performed deadman disabled suspended pool case unlike upstream openzfs zol panic hung detected module parameter documentation upated include new parameter better describe operation deadmen reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru signed tim chase tim chase2k.com close 5695,,
3371,97048200f888afc0b1387bff75049cf37e9715bd,hunwei Chen <tuxoko@gmail.com>, 2017-01-31 13:44:01 -0800,599, use kernel slab vn_cache vn_file_cache resolve false positive kmemleak checker shifting kernel slab show vn_file_cache using kmc_kmem directly allocated using automatically tracked kmemleak reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 599,,
3372,e24548975ccda48907bd7661ac0ef96b396c6d73,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 21:48:45 +0300,5698, openzfs 7745 print error lzc_ called problem consumer libzfs_core forget call calling function library hard time realizing mistake library internal file descriptor declared global static initialized explicitly therefore default valid file descriptor explicitly initializes correct skipped ioctl function return error anything libzfs_core problem actually located even though assertion existed within libzfs_core debug build never enabled ddebug flag missing compiler flag patch applies following change add ddebug debug build libzfs_core libzfs enable assertion debug build corrects assertion within libzfs function spelled incorrectly nobody knew ddebug flag missing preprocessor taking part code away library internal initialized verify assertion placed check equal issuing ioctl important note verify assertion exist debug non debug build make sure never increment refcount also reset one refers reason rare case consumer close reference call one library function without using first mean time previous call open decided reuse previous scenario would passed assertion non debug build assertion macro enabled two test test suite failing check within dump_record zero kernel filled checksum read cksummer except one type drr_begin considered making assertion available debug non debug build figured would appropriate example outside consumer libzfs_core suddenly trigger assertion failure happened call even previously reference counter therefore reference counter related assertion enabled debug build related assertion enabled debug non debug build porting note assert3s g_refcount added recv_impl lib libzfs_core libzfs_core.c authored serapheim dimitropoulos serapheim delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7745 openzfs commit http github.com openzfs openzfs commit 7e3139a close 5698,,
3373,43b857fddb0aa0a2fef1e00c696a80056c6367a8,avid Quigley <dpquigl@users.noreply.github.com>, 2017-01-31 11:36:18 -0700,598, add pageshift definition reviewed brian behlendorf behlendorf1 llnl.gov signed david quigley david.quigley intel.com close 598,,
3374,005e27e3b3086a65499d81923551be68e8c3400a,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 21:24:23 +0300,5709, openzfs 7019 zfsdev_ioctl skip secpolicy fkioctl set authored alex wilson alex.wilson joyent.com reviewed robert mustacchi joyent.com reviewed richard lowe richlowe richlowe.net reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7019 openzfs commit http github.com openzfs openzfs commit 45b1747 close 5709,,
3375,6325e48f950a9e6dcfaeac248f8a8f2e4404867f,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 21:19:36 +0300,5691, openzfs 7136 ought always include vdev information authored alan somers asomers gmail.com 7115 6922 generates bit often reviewed george wilson george.wilson delphix.com reviewed josef jeff sipek jeffpc josefsipek.net approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7136 openzfs commit http github.com openzfs openzfs commit b72b6bb close 5691 porting note functionally patch behaves openzfs version adapted zol illumos sysevent_t infrastructure functionality,,
3376,ed828c0c375477ff27d5fa9a7bf46ae6b6f2e57a,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 21:13:10 +0300,5676, openzfs 7280 allow changing global libzpool variable zdb ztest command line authored pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7280 openzfs commit http github.com openzfs openzfs commit 0e60744 close 5676,,
3377,41425f79dabc58e5ddb16cc701cc435a5480e56a,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 04:12:58 +0300,5693, openzfs 7490 real checksum error silenced zinject authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7490 openzfs commit http github.com openzfs openzfs commit 6cedfc3 close 5693,,
3378,e2da829cc1a92b9f0ebd1eeefc6fadc1ec9f325a,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 02:33:46 +0300,5690, openzfs 6922 emit removing aux device authored alan somers asomers gmail.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6922 openzfs commit http github.com openzfs openzfs commit 63364b0 close 5690,,
3379,28b40c8a6e31308531de0ab128887e65c28d891c,eorge Melikov <mail@gmelikov.ru>, 2017-01-31 00:20:55 +0300,5704, openzfs 7541 zpool import tryimport ioctl return enomem authored pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com refresh_config call kernel ioctl return config pool buffer pre allocated userland original estimate size conservative since account large size vdev stats added config returning fix simply increase size buffer passed result speed zpool import process spam zfs_dbgmsg reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7541 openzfs commit http github.com openzfs openzfs commit a3c7690 close 5704,,
3380,456079d48dcc3e1394d1f519a17abae2177c5ffa,eorge Melikov <mail@gmelikov.ru>, 2017-01-30 22:34:36 +0300,5677, openzfs 7502 ztest run zdb debug mode authored pavel zakharov pavel.zakharov delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com approved gordon ross gordon.w.ross gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7502 openzfs commit http github.com openzfs openzfs commit c3c65d1 close 5677,,
3381,fa603f823331a948038dd8e56113df36d7293932,eorge Melikov <mail@gmelikov.ru>, 2017-01-28 23:16:43 +0300,5684, openzfs 7277 zdb able print zfs_dbgmsg porting note reintroduced userspace authored pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7277 openzfs commit http github.com openzfs openzfs commit 29bdd2f close 5684,,
3382,a32494d22ac25c35c5d26eb0b2607ea68adb93cd,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-28 12:13:34 -0800, , fix suspend godfather io_reexecute bit resuming pool godfather zio could bit set occur child zios set set godfather zio inherit flag child zios assigned flag removed godfather child list added spa child list child zios bit set remain monitored godfather zio godfather zio executes zio_done presence bit result io_reexecute cleared child zios executed instead destroyed lost straight forward way address situation clear bit leave bit set reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn,,
3383,3130b84e94717fe9aad67a14defe79bb7f10fa9f,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-28 12:12:25 -0800,5686, add wno declaration statement kernelcppflags disable warning regarding iso c90 forbidding mixed declaration code functionality introduced part c99 gcc doe allow c90 mode extension http gcc.gnu.org onlinedocs gcc mixed mixed declaration allowing usage help minimize change required porting patch openzfs downside functionality specific gcc reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5686,,
3384,721ed0ee86463cb3e4a562d86783fd1372182367,eorge Melikov <mail@gmelikov.ru>, 2017-01-28 23:11:09 +0300,5678, openzfs 7580 ztest failure dbuf_read_impl authored george wilson george.wilson delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7580 openzfs commit http github.com openzfs openzfs commit 3105d95 close 5678,,
3385,160af771081bc21313ad0c111d66b348932fe5d2,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 22:47:54 +0300,5681, openzfs 7340 receive manual origin override automatic origin authored paul dagnelie pcd delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7340 openzfs commit http github.com openzfs openzfs commit ed4e7a6 close 5681,,
3386,a08abc1bb3e354d8c352c91d22cc733a84fafb50,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 22:46:39 +0300,5680, openzfs 7301 zpool export able interrupt file freeing authored alek pinchuk alek nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed sanjay nadkarni sanjay.nadkarni nexenta.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed john kennedy john.kennedy delphix.com approved gordon ross gordon.ross nexenta.com reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7301 openzfs commit http github.com openzfs openzfs commit eb72182 close 5680,,
3387,cc9bb3e58e926d4e056a89046301c1349755957b,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 22:43:42 +0300,5670, openzfs 7254 ztest failed assertion dirobjs usedobjs authored paul dagnelie pcd delphix.com reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed matthew ahrens mahrens delphix.com reviewed steve gonczi steve.gonczi delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7254 openzfs commit http github.com openzfs openzfs commit c166b69 close 5670,,
3388,687e612f9a56763d82c78ed75656896ce9cace17,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 22:10:10 +0300,5575, add realloc success check correctly handle unlikely case memory buffer resized reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov signed george melikov mail gmelikov.ru close 5575,,
3389,933ec999511f3d29de005bfa8966ae007b161c0f,hunwei Chen <tuxoko@gmail.com>, 2017-01-27 10:43:39 -0800,5673, retire .write .read file operation .write .read file operation callback retired since support .read_iter .write_iter .aio_read .aio_write added vfs_write vfs_read entry function select correct interface kernel desirable vfs write read operation rely common code change also add generic write check make sure ulimits enforced correctly write signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5587 close 5673,,
3390,986dd8aacc9a00ceedf61f63cbe641786f540611,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-27 10:40:02 -0800,5672, openzfs 5561 support root pool efi gpt partitioned disk reviewed jean mccormack jean.mccormack nexenta.com reviewed josef jeff sipek josef.sipek nexenta.com approved dan mcdonald danmcd omniti.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 5561 openzfs commit http github.com openzfs openzfs commit 1a902ef close 5672,,
3391,258553d3d79252030421b93d23cbce4d84a42dbb,im Chase <tim@chase2k.com>, 2017-01-26 17:27:19 -0600,5598, openzfs 7613 ms_freetree used syncing context metaslab_t ms_freetree txg_size used syncing context replace two tree freeing tree range freeing syncing txg freed tree range freed txg authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed alex reece alex delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported tim chase tim chase2k.com openzfs issue http www.illumos.org issue 7613 openzfs commit http github.com openzfs openzfs commit a8698da2 close 5598,,
3392,9c9531cb6f085174e90d1262aba177ffb8b88753,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 02:15:48 +0300,5639, openzfs 7500 simplify dbuf_free_range removing authored stephen blinick stephen.blinick delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com approved gordon ross gordon.w.ross gmail.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7500 openzfs commit http github.com openzfs openzfs commit 653af1b close 5639,,
3393,39efbde7c551ae0edcd57db3aab28fd7f2d29d18,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 01:43:28 +0300,5667, openzfs 6676 race unique_insert unique_remove cause zfs fsid change authored josef jeff sipek josef.sipek nexenta.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed sanjay nadkarni sanjay.nadkarni nexenta.com reviewed dan vatca dan.vatca gmail.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed sebastien roy sebastien.roy delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6676 openzfs commit http github.com openzfs openzfs commit 40510e8 close 5667,,
3394,aeacdefedc31b498cfccc0026b83be0bab197a3b,eorge Melikov <mail@gmelikov.ru>, 2017-01-27 01:42:15 +0300,5666, openzfs 7386 zfs get doe work properly bookmark authored marcel telka marcel telka.sk reviewed simon klinkert simon.klinkert gmail.com reviewed paul dagnelie pcd delphix.com approved matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7386 openzfs commit http github.com openzfs openzfs commit edb901a close 5666,,
3395,0a3d2673de4958094b5c178efd7bd991bcd84f3f,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:47:40 +0300,5663, openzfs 5142 libzfs support raidz root pool loader project authored toomas soome tsoome me.com reviewed george wilson george.wilson delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed andrew stormont andyjstormont gmail.com reviewed albert lee trisk omniti.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 5142 openzfs commit http github.com openzfs openzfs commit d5f26ad close 5663,,
3396,1149ba6478a498de65d6a8b9a289e45015a1409c,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:46:02 +0300,5662, openzfs 7606 take long time importing pool importing pool large number filesystems within parent filesystem see take long time called place spa_check_logs spa_load_verify several way improve performance really need spa_check_logs pool closed cleanly spa_load_verify check datasets long name slow sibling datasets determine name dsl_dir opened case actually know name opening provide avoid lookup change implement fix list i.e make provide name dataset search authored matthew ahrens mahrens delphix.com reviewed steve gonczi steve.gonczi delphix.com reviewed george wilson george.wilson delphix.com reviewed prashanth sreenivasa prashksp gmail.com reviewed david quigley david.quigley intel.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7606 openzfs commit http github.com openzfs openzfs commit cac6bab close 5662,,
3397,89d43feb0ba1fb86ca67b215c1449b28008a4709,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:42:48 +0300,5659, openzfs 6412 zfs receive ignored sometimes authored andriy gapon andriy.gapon clusterhq.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6412 openzfs commit http github.com openzfs openzfs commit 9185393 close 5659,,
3398,d96e5439541bce02c44efa56800c022ec9b43aa7,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-01-26 12:40:22 -0800,5655, openzfs 7348 cstyle handle ellipsis continuation line authored han rosenfeld hans.rosenfeld nexenta.com reviewed yuri pankov yuri.pankov nexenta.com reviewed jason king gmail.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed robert mustacchi joyent.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed george melikov mail gmelikov.ru ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 7348 openzfs commit http github.com openzfs openzfs commit c667d21 close 5655,,
3399,d4e004078176e3c48fda891a62fc5dc48ca314c8,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2017-01-26 12:36:56 -0800,5653, openzfs 6999 fix use uninitialized value picky numeric cstyle authored richard palo richard netbsd.org reviewed garrett amore garrett damore.org approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed brian behlendorf behlendorf1 llnl.gov ported giuseppe natale dinatale2 llnl.gov openzfs issue http www.illumos.org issue 6999 openzfs commit http github.com openzfs openzfs commit 002ec3e close 5653,,
3400,2014c09f64a484b8fc3690f1a4c1e749f5fdda48,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:34:29 +0300,5661, openzfs 7163 ztest failure due excess error injection authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7163 openzfs commit http github.com openzfs openzfs commit f34284d close 4484 close 5661,,
3401,dc1fbc43be19d69a39b3e5374b106d6b0474958f,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:32:36 +0300,5660, openzfs 7253 ztest failure name 0x10 0x0 file ztest.c line 3235 5660 authored chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7253 openzfs commit http github.com openzfs openzfs commit 754998c close 5660,,
3402,546d32ca102675caed534075f9e7517890707d7b,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-26 12:30:43 -0800,5652, openzfs 7147 ztest fails assertion reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7147 openzfs commit http github.com openzfs openzfs commit aab80726 close 5652,,
3403,774ee3c7cec223521f41a4c533f2561da43ee425,eorge Melikov <mail@gmelikov.ru>, 2017-01-26 23:28:29 +0300,5651, openzfs 7336 vfork o_cloexec cause zfs_mount ebusy porting note statvfs64 replaced statfs64 zfs_super_magic definition moved include sys zfs.h share user kernel space authored prakash surya prakash.surya delphix.com reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7336 openzfs commit http github.com openzfs openzfs commit dd862f6d close 5651,,
3404,f925de3a20e97d3b9ee854c8435c6f3d8d17e02c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-26 12:25:35 -0800,5649, refresh linux test suite runfile associate disabled test case existing open issue update comment consistent disable additional test case goal enabled test pas 100 reliably following test case disabled due infrequent failure automated testing several test case previous disabled kmemleak builder subsequently observed automated builder http github.com zfsonlinux zfs issue 5635 http github.com zfsonlinux zfs issue 5647 http github.com zfsonlinux zfs issue 5648 http github.com zfsonlinux zfs issue 5634 http github.com zfsonlinux zfs issue 5646 http github.com zfsonlinux zfs issue 5642 http github.com zfsonlinux zfs issue 5513 rsend_022_pos http github.com zfsonlinux zfs issue 5654 rsend_024_pos http github.com zfsonlinux zfs issue 5665 history_008_pos http github.com zfsonlinux zfs issue 5658 history_006_neg http github.com zfsonlinux zfs issue 5657 history_008_pos http github.com zfsonlinux zfs issue 5658 http github.com zfsonlinux zfs issue 5669 reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5649,,
3405,935550f1bb12f9f461e662181aa2febbc94ffde7,eorge Melikov <mail@gmelikov.ru>, 2017-01-24 20:23:34 +0300,5640, openzfs 6872 zfs library allow uninitialized variable porting note many change already made zol d4ed66734 authored paul dagnelie pcd delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed yuri pankov yuri.pankov nexenta.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6872 openzfs commit http github.com openzfs openzfs commit f83b46b close 5640,,
3406,7e8dbd93e214566c4955933990f78f78b6c88d74,eorge Melikov <mail@gmelikov.ru>, 2017-01-24 20:15:35 +0300,5638, openzfs 7571 non present readonly numeric zfs prop default value authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7571 openzfs commit http github.com openzfs openzfs commit ad2760a close 5638,,
3407,e2a65adbb83ddad0d8a97dd1415ad30850216336,eorge Melikov <mail@gmelikov.ru>, 2017-01-24 20:13:49 +0300,5621, openzfs 6871 libzpool implementation thread_create enforce length porting note several direct caller passing ts_run length len state inverted commit fix authored eli rosenthal eli.rosenthal delphix.com reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6871 openzfs commit http github.com openzfs openzfs commit 8fc9228 close 5621,,
3408,9ef3906a5ab1185e9941bca252c87105fdf77a94,Ã¥kan Johansson <f96hajo@chalmers.se>, 2017-01-24 18:09:02 +0100,5645, minor man page formatting fix zpool.8 property cachefile zfs module parameters.5 three fix argument diff inherit zfs.8 reviewed brian behlendorf behlendorf1 llnl.gov reviewed loli10k ezomori.nozomu gmail.com signed haakan johansson f96hajo chalmers.se close 5645,,
3409,a39ce906602ce721774f4e17671c05bd5c710d1e,eorge Melikov <mail@gmelikov.ru>, 2017-01-24 19:59:08 +0300,5641, openzfs 6880 zdb incorrectly report feature count mismatch feature disabled authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6880 openzfs commit http github.com openzfs openzfs commit c5d1600 close 5641,,
3410,e82dbae1ee33170ed3924c5229db651caf384333,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-24 08:50:15 -0800,5644, fix build compilation regression accidentally introduced 4ea3f86 begin cstyle block appear half way continued define reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5643 close 5644,,
3411,e85d62faaea9871293c1c26675ee665ebe3733e4,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-23 17:04:26 -0800,5637, fix test case volume creation wait new block device settled destroying failure result ebusy returned test case failing reviewed george melikov mail gmelikov.ru signed brian behlendorf behlendorf1 llnl.gov close 5636 close 5637,,
3412,3d43125fd465d869c813eb30a0233c0b6aae1209,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 22:22:11 +0300,5629, openzfs 7604 volblocksize property default display rather authored matthew ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed paul dagnelie pcd delphix.com reviewed john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7604 openzfs commit http github.com openzfs openzfs commit 586fd65 close 5629,,
3413,b87baa7ed2374bf8138f2c9f6b260498c0252eb6,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 22:13:15 +0300,5628, openzfs 6428 set canmount unmounted filesystem try unmount child authored andriy gapon andriy.gapon clusterhq.com reviewed matthew ahrens mahrens delphix.com approved gordon ross gordon.w.ross gmail.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6428 openzfs commit http github.com openzfs openzfs commit c079fa4 close 5628,,
3414,ec923db25c823dd460fdb5db44a5a202a0975f27,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 21:53:46 +0300,5627, openzfs 7180 potential race zfs_suspend_fs zfs_resume_fs zfs_ioc_rename authored andriy gapon andriy.gapon clusterhq.com reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7180 openzfs commit http github.com openzfs openzfs commit 690041b close 5627,,
3415,cffd6e116711640d070d9690480b95c5a6de7154,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 21:35:58 +0300,5625, openzfs 3746 zrls racy authored andrew freebsd.org reviewed boris protopopov bprotopopov hotmail.com reviewed pavel zakharov pavel.zakha gmail.com reviewed yuri pankov yuri.pankov gmail.com reviewed justin gibbs gibbs scsiguy.com approved matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 3746 openzfs commit http github.com openzfs openzfs commit 260af64 close 5625,,
3416,911c41af2d7642fd25b563315c8d9e79b2dd1511,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 21:17:35 +0300,5624, openzfs 7304 zfs filesystem snapshot count read authored jerry jelinek jerry.jelinek joyent.com reviewed garrett amore garrett damore.org reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7304 openzfs commit http github.com openzfs openzfs commit 007a6c1 close 5624,,
3417,3cbe6b29f5832ef350b0ec4ecbba882e5210b56b,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 21:07:09 +0300,5623, openzfs 7233 dir_is_empty open directory cloexec authored alex reece alex delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7233 openzfs commit http github.com openzfs openzfs commit d420209 close 5623,,
3418,e67a7ffb5d1f4255a89d7511ea3554c7c7488e5a,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 20:49:57 +0300,5622, openzfs 6052 decouple lzc_create implementation detail authored andriy gapon andriy.gapon clusterhq.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6052 openzfs commit http github.com openzfs openzfs commit 26455f9 close 5622,,
3419,f85c06bedfd2a60f5b5d6a7492ed847c2bffd9fe,eorge Melikov <mail@gmelikov.ru>, 2017-01-23 20:36:24 +0300,5600, openzfs 7054 dmu_tx_hold_t use refcount_t track space authored igor kozhukhov ikozhukhov gmail.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7054 openzfs commit http github.com openzfs openzfs commit 0c779ad close 5600,,
3420,4ea3f86426f76e59244ec6f66504da688d90193c,eorge Melikov <mail@gmelikov.ru>, 2017-01-21 00:17:55 +0300, , codebase style improvement openzfs 6459 port,,
3421,ec441a9c534815b379468a2d349011cbd5bcd884,aul Dagnelie <pcd@delphix.com>, 2017-01-18 01:47:50 +0300,6459, openzfs 6459 cstyle detect opening brace line function header authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed alex reece alex delphix.com reviewed albert lee trisk omniti.com reviewed dan mcdonald danmcd omniti.com approved robert mustacchi joyent.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6459 openzfs commit http github.com openzfs openzfs commit c4567a6 porting note change adopted zol codebase many false positive warning,,
3422,bb7ffdaf5ad1c7e65af598830957b6b19835f93f,eorge Melikov <mail@gmelikov.ru>, 2017-01-21 22:33:11 +0300,5620, openzfs 7729 libzfs_core lzc_rollback leak result nvl authored yuri pankov yuri.pankov nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7729 openzfs commit http github.com openzfs openzfs commit 882877e close 5620,,
3423,1b61fa935ca0543ecb2beb8f2cb567bba28a426e,hunwei Chen <tuxoko@gmail.com>, 2017-01-21 10:54:06 -0800,5613, partial revert disable slow test kmemleak enable inherit_001_pos longer slow also disable fail often reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5613,,
3424,10a3f8885904558c2a406151c4cf960371c34934,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-20 10:18:28 -0800, , tag 0.7.0 rc3 third release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3425,f5c5286daa5f76532d7a8a7988d6a42cfd58038c,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-20 10:16:32 -0800, , tag 0.7.0 rc3 third release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3426,beabc5e46c7bbe4f1ab3f6ed7b92dc9a7a314c99,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-19 17:09:04 -0800,5616, fix unused variable warning local variable unused non debug build wrap variable assertv present debug build introduced openzfs 7303 reviewed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 5616,,
3427,2d4d81c485bd5ed3ccaf1580c4efdc0ecdbc52ee,lefru <clemens@endorphin.org>, 2017-01-19 23:41:38 +0100,593, reimplement rt_mutex_owner fix build debug preempt_rt_full rt_mutex_owner internal kernel locking inaccessible spl via public kernel header way accessing owner stable since least 3.13 masking lowest bit owner pointer rt_mutex  http lxr.free electrons.com source kernel locking 3.13 l99 http lxr.free electrons.com source kernel locking 4.9 l78 reviewed brian behlendorf behlendorf1 llnl.gov signed clemens fruhwirth clemens endorphin.org close 593,,
3428,5cb44271b4c0b01afe5b84366e247f6d087df399,eorge Melikov <mail@gmelikov.ru>, 2017-01-20 01:32:45 +0300,594, remove identical statement module spl spl vnode.c reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 594,,
3429,040dab993936d832df4c7624bbcdb71c3fb9b34b,hunwei Chen <tuxoko@gmail.com>, 2017-01-19 13:56:36 -0800,5609, suspend resume zvol recv rollback recv rollback called swap ds_objset old one however currently zv_objset swapped accordingly anyone currently hold zvol risk hitting use free fix introducing suspend resume mechanism zsb recv rollback use zvol_suspend block access zv_objset shut recv rollback use zvol_resume swap zv_objset new ds_objset unblock access reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4866 close 5609,,
3430,76fe529b392068dfb7575739542cd4f69d2d4343,eorge Melikov <mail@gmelikov.ru>, 2017-01-20 00:50:22 +0300,5606, openzfs 6529 properly handle update variably sized entry porting note issue first fixed zol commit d862cb0d fix modified equivalent version patch landed upstream code base additional detail see discussion http github.com openzfs openzfs pull commit aligns zol openzfs codebase authored andriy gapon avg icyb.net.ua reviewed brian behlendorf behlendorf1 llnl.gov reviewed matthew ahrens mahrens delphix.com reviewed ned bass bass6 llnl.gov reviewed tim chase tim chase2k.com approved gordon ross gwr nexenta.com ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6529 openzfs commit http github.com openzfs openzfs commit e7e978b close 5606,,
3431,4faf8b6f6f1edeb2ef0fed31c74ab0b321a11f2d,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-19 10:24:27 -0800,5614, disable racy test case following test case may currently fail benign reason disable updated run reliably recently enabled ce43e88 nopwrite_volume signed brian behlendorf behlendorf1 llnl.gov close 5614,,
3432,34a6b4284495b979c923e056b23d87fd6c20f380,eorge Melikov <mail@gmelikov.ru>, 2017-01-19 02:10:35 +0300,5603, openzfs 7659 missing thread_exit dmu_send.c two thread end thread_exit mostly cosmetic issue illumos authored jorgen lundman lundman lundman.net reviewed paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7659 openzfs commit http github.com openzfs openzfs commit a569268 close 5603,,
3433,a0aacd3741530ac20e796cb471ab1e35b3929704,eorge Melikov <mail@gmelikov.ru>, 2017-01-18 02:30:01 +0300,5608, openzfs 7257 zfs manpage user property length need updated since zpool version limit actually 8192 character additionally limit actually 8192 byte support utf authored eli rosenthal eli.rosenthal delphix.com reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed robert mustacchi joyent.com approved richard lowe richlowe richlowe.net reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7257 openzfs commit http github.com openzfs openzfs commit 3bc7169 close 5608,,
3434,7330fc57b738e9d3bdd57eb4e1b4505bed1a9d16,eorge Melikov <mail@gmelikov.ru>, 2017-01-18 02:22:56 +0300,5604, openzfs 7235 remove unused func authored matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed alex reece alex delphix.com reviewed prakash surya prakash.surya delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7235 openzfs commit http github.com openzfs openzfs commit bd56f80 close 5604,,
3435,61ca48ff382b56894ec4b6fa9aeba60c278512b1,eorge Melikov <mail@gmelikov.ru>, 2017-01-18 02:18:59 +0300,5601, openzfs 7256 low probability race zfs_get_data authored andriy gapon andriy.gapon clusterhq.com reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7256 openzfs commit http github.com openzfs openzfs commit 6ed18a8 close 5601,,
3436,e88551d52f0490578ec6d2aa2c36563dfdbdd3b3,eorge Melikov <mail@gmelikov.ru>, 2017-01-18 01:52:17 +0300,5597, openzfs 7071 lzc_snapshot doe fill errlist enoent authored igor kozhukhov ikozhukhov gmail.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed george wilson george.wilson delphix.com reviewed dan kimmel dan.kimmel delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7071 openzfs commit http github.com openzfs openzfs commit 25f7d99 close 5597,,
3437,cf7d1484bf5bd94aa248babade69226b6dc4c0e2,eorge Melikov <mail@gmelikov.ru>, 2017-01-18 01:49:24 +0300,5596, openzfs 7082 bptree_iterate pass wrong args zfs_dbgmsg authored igor kozhukhov ikozhukhov gmail.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved dan mcdonald danmcd omniti.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7082 openzfs commit http github.com openzfs openzfs commit 10e67aa close 5596,,
3438,832805d9515894a6567abcb95359f41f4cc61bfc,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-17 14:46:28 -0800,5592, openzfs 6586 whitespace inconsistency spa feature dependency array porting note preserved static const spa_feature_t hole_birth_deps authored ilovezfs ilovezfs icloud.com reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6586 openzfs commit http github.com openzfs openzfs commit 22b6687 close 5592,,
3439,648a09adc25cc1b8b9bec72130ab219a3e544b56,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-17 14:45:02 -0800,5591, openzfs 6550 cmd zfs cleanup gcc warning porting note many fix proposed patch already applied case different equivalent fix made code updated openzfs version minimize difference authored igor kozhukhov ikozhukhov gmail.com reviewed matthew ahrens mahrens delphix.com reviewed andy stormont astormont approved dan mcdonald danmcd omniti.com reviewed george melikov mail gmelikov.ru ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6550 openzfs commit http github.com openzfs openzfs commit c16bcc4 close 5591,,
3440,8e896579562385b76fd44b7c86084f452043e7fd,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-17 14:42:56 -0800,5590, openzfs 6551 cmd zpool cleanup gcc warning porting note many fix proposed patch already applied case different equivalent fix made code updated openzfs version minimize difference function previously removed commit 235db0a authored igor kozhukhov ikozhukhov gmail.com reviewed matthew ahrens mahrens delphix.com reviewed andy stormont astormont approved robert mustacchi joyent.com reviewed george melikov mail gmelikov.ru reviewed haakan johansson f96hajo chalmers.se ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6551 openzfs commit http github.com openzfs openzfs commit b327cd3 close 5590,,
3441,0194e4a03c394f0bb85cba78ac12f10c480c5670,evin Tanguy <kevin.tanguy@ovh.net>, 2017-01-17 21:05:14 +0100,595, add support recent slab_usercopy flag used indicate pax kill copy kernel userland recent grsecurity patchset enables zfs would panic handle newer api keeping old one functional tested rageltman rageltman sempervictus reviewed spendergrsec spender grsecurity.net reviewed brian behlendorf behlendorf1 llnl.gov signed kevin tanguy kevin.tanguy ovh.net close 595,,
3442,2dbf1bf8296f66f24d5e404505c991bfbeec7808,lefru <clemens@endorphin.org>, 2017-01-14 00:57:34 +0100,5552, hardcode perl path use env instead also replace deprecated argument use warning otherwise env would invoke command called perl reviewed brian behlendorf behlendorf1 llnl.gov signed clemens fruhwirth clemens endorphin.org close 5552,,
3443,08f0510d87186575db00269fff17a3409de5ceb6,OLi <loli10K@users.noreply.github.com>, 2017-01-14 00:47:34 +0100,5532, fix unallocated object detection large_dnode datasets fix dmu_object_next correctly handle unallocated object large_dnode datasets implement scanning dnode block find correct offset used necessary assume objectp hole even dmu_object_info return enoent fix couple issue zfs receive large_dnode datasets reviewed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5027 close 5532,,
3444,5043684ae51195fc8b7ce7ff15241f17fe23d993,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-13 15:33:14 -0800,5586, openzfs 7603 xuio_stat_wbuf_ declared void porting note include sys dmu.h prototype already updated 0bc8fd7 authored prashanth sreenivasa pks delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed robert mustacchi joyent.com reviewed giuseppe natale dinatale2 llnl.gov approved richard lowe richlowe richlowe.net ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7603 openzfs commit http github.com openzfs openzfs commit 99aa8b5 close 5586,,
3445,9775e98844c393229183ebbbd75a877cd8a3a293,rian Behlendorf <behlendorf1@llnl.gov>, 2017-01-13 15:29:32 -0800,5585, openzfs 7181 race zfs_mount authored andriy gapon andriy.gapon clusterhq.com reviewed matthew ahrens mahrens delphix.com approved gordon ross gordon.w.ross gmail.com reviewed richard yao ryao gentoo.org reviewed giuseppe natale dinatale2 llnl.gov ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7181 openzfs commit http github.com openzfs openzfs commit 90f2c09 close 5585,,
3446,e254c8d8ee8783fd547165d4a754f9d8d9d386c4,Ã¶rg Thalheim <joerg@higgsboson.tk>, 2017-01-14 00:18:34 +0100,5548, module makefile.in use relative assuming bin cause problem system bin nixos reviewed brian behlendorf behlendorf1 llnl.gov signed joerg thalheim joerg higgsboson.tk close 5548,,
3447,0eef1bde31d67091d3deed23fe2394f5a8bf2276,zzz77 <bzzz.tomas@gmail.com>, 2017-01-14 01:58:41 +0300,4802, add _by dnode routine add _by_dnode routine accessing object given dnode_t efficient accessing object objset_t uint64_t object change convert existing consumer performance sensitive code path discovered converted use routine reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed alex zhuravlev bzzz whamcloud.com close 5534 issue 4802,,
3448,120faefed90aa4c276a3db45525dc5c804cb1a00,ageLtMan <sempervictus@users.noreply.github.com>, 2017-01-13 17:12:42 -0500,597, update struct member intializers c89 building spl within kernel tree c99 initializers cause build failure need converted c89 kernel cflags specify std gnu89 fix provided behlendorf 595 discussion note manually implemented current master revision reviewed brian behlendorf behlendorf1 llnl.gov signed rageltman rageltman sempervictus close 597,,
3449,38640550f28c5acd94621f3452fab428df469bdb,on Brady <don.brady@intel.com>, 2017-01-13 14:50:22 -0700,5582, openzfs 7743 per vdev zap init path upgrade authored paul dagnelie pcd delphix.com reviewed matt ahrens mahrens delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed george wilson george.wilson delphix.com reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed joe stein jas14 cs.brown.edu ported brady don.brady intel.com loading pool created existance per vdev zap system know per vdev zap per vdev zap allocated initialized appears logic would done reached normal operation reached non empty fix add another avz_action_ enum allow code reached detect loading old pool even dirty configs openzfs issue http www.illumos.org issue 7743 openzfs commit http github.com openzfs openzfs commit e2d29d0 close 5582,,
3450,fdbaf44ffbff109613fee5a04f190df5a34fdfcc,eorge Melikov <mail@gmelikov.ru>, 2017-01-14 00:31:29 +0300,5549, openzfs 7276 zfs manpage could better describe space property authored pavel zakharov pavel.zakharov delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 7276 openzfs commit http github.com openzfs openzfs commit d750135 openzfs commit http github.com openzfs openzfs commit 29c6739 close 5549,,
3451,181bd8cf5360d55ba5b2b7290669e3eac539da94,OLi <loli10K@users.noreply.github.com>, 2017-01-13 22:24:17 +0100,5559, fix zfs share systemd unit file use system bin directory rather package install bindir allows prefix usr local work intended reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5559,,
3452,0bc63d83f62374f688366caed69946a93e29f57d,eorge Melikov <mail@gmelikov.ru>, 2017-01-12 22:58:04 +0300,5573, openzfs 6603 verify implies authored ilovezfs ilovezfs icloud.com reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6603 openzfs commit http github.com openzfs openzfs commit 0803e91 close 5573,,
3453,4e21fd060a567a9c8a1bd0e640985412181c1e33,on Brady <don.brady@intel.com>, 2017-01-12 12:52:56 -0700,5404, openzfs 7303 dynamic metaslab selection change introduces new weighting algorithm improve metaslab selection new weighting algorithm relies feature result metaslab weight encodes type weighting algorithm used size based segment based porting note metaslab allocation tracing code conditionally removed linux dependent mdb debugger authored george wilson george.wilson delphix.com reviewed alex reece alex delphix.com reviewed chris siden delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed pavel zakharov pavel.zakharov delphix.com reviewed prakash surya prakash.surya delphix.com reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov ported brady don.brady intel.com openzfs issue http www.illumos.org issue 7303 openzfs commit http github.com openzfs openzfs commit d5190931bd close 5404,,
3454,5727b00e06a4208a7040489d582f13bc3c183384,eorge Melikov <mail@gmelikov.ru>, 2017-01-12 22:25:27 +0300,5572, openzfs 6637 replacing dontclose should_close authored david schwartz dschwartz783 gmail.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov ported george melikov mail gmelikov.ru find lot easier read close somewhat tough eye openzfs issue http www.illumos.org issue 6637 openzfs commit http github.com openzfs openzfs commit d189620 close 5572,,
3455,e9aa730c49b91694b146e0cd28192f1aaf843d0e,eorge Melikov <mail@gmelikov.ru>, 2017-01-12 20:42:11 +0300,5579, openzfs 6328 fix cstyle error zfs codebase authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed alex reece alex delphix.com reviewed richard elling richard.elling reviewed jorgen lundman lundman lundman.net approved robert mustacchi joyent.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru openzfs issue http www.illumos.org issue 6328 openzfs commit http github.com illumos illumos gate commit 9a686fb close 5579,,
3456,42b64e50c093a4ad499458a6258254e399a4de52,eorge Melikov <mail@gmelikov.ru>, 2017-01-04 00:01:48 +0300,5542, work github usability issue template make issue template obvious importance searching issue tracker first wrap log appropriately reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov close 5542,,
3457,5eac94bffd3b98c585eecfbf3fbf444362573142,ohnny Stenback <github@jstenback.com>, 2017-01-03 10:29:23 -0800,5538, fix typeerror unorderable type str int arc_summary.py running arc_summary.py l2arc cache device around produce following error traceback recent call last file usr bin arc_summary.py line 1148 module main file usr bin arc_summary.py line 1144 main page kstat file usr bin arc_summary.py line 724 _l2arc_summary arc l2_arc_evicts reading typeerror unorderable type str int due arc l2_arc_evicts lock_retries arc l2_arc_evicts reading string returned fhits earlier rather adding checking result check either string reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov close 5538,,
3458,24d42e22211b68f3a6fa514c28ffdfe265d44fef,eorge Melikov <mail@gmelikov.ru>, 2017-01-03 21:03:05 +0300,5544, openzfs 7259 unused authored matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed prakash surya prakash.surya delphix.com reviewed dan mcdonald danmcd omniti.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed brian behlendorf behlendorf1 llnl.gov ported george melikov mail gmelikov.ru macro unused since integration patch 241b541 illumos 5959 clean per dataset feature count code patch simply remove macro dsl_dataset.h openzfs issue http www.illumos.org issue 7259 openzfs commit http github.com openzfs openzfs commit faa8036 close 5544,,
3459,4e33ba4c389f59b74138bf7130e924a4230d64e9,a7 <ka7@la-evento.com>, 2017-01-03 18:31:18 +0100,5543, fix spelling reviewed brian behlendorf behlendorf1 llnl.gov reviewed giuseppe natale dinatale2 llnl.gov reviewed george melikov mail gmelikov.ru reviewed haakan johansson f96hajo chalmers.se close 5547 close 5543,,
3460,a5e046eaacad20487188c9eef231554e1401d8c9,im Chase <tim@chase2k.com>, 2016-12-30 16:03:59 -0600,5499, 4.10 compat bio flag change others bio req_op enum changed req_opf update linux 4.8 api autotools check use int determine whether various req_op value defined work properly kernel 4.8 bio inline function detected ifdef add configure check determine whether defined move local definition vdev_disk.c blkdev_compat.h consistency related compability shim bio read write flag modifier including write_flush write_fua write_flush_fua removed fs.h add new bio_set_flush compatibility wrapper replace set flag appropriately supported kernel version vfs function made static .readlink null used zol typo completely unrelated 4.10 compat fix typo check proper macro defined  reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed tim chase tim chase2k.com close 5499,,
3461,3500a145952e0dfb7b7efe1c6b7856319815628c,OLi <loli10K@users.noreply.github.com>, 2016-12-22 19:39:00 +0100,5515, persist temporary pool name device fix regression accidentally introduced e0ab3ab additionally add new script zfs test suite exercise zpool import functionality reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5466 close 5515,,
3462,547c5936613ef296559eda5177b6391cfbbfb5c6,eLiXin <ge.lixin@zte.com.cn>, 2016-12-22 03:27:24 +0800,5297, fix coverity defect cid 147587 cid 147587 bound read future change may cause array overrun 4096 byte byte offset 4096 dereferencing pointer dstp adding additional check ensures correctness reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5297,,
3463,53ed2db212320e99e1426be832f4968eb7c42adf,under2015 <omfgbunder@gmail.com>, 2016-12-21 14:06:02 -0500,5508, remove extra zfs man page reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 5508,,
3464,da8f51e16aa4e1832f8c1a9ddc3082e4469b4485,hunwei Chen <tuxoko@gmail.com>, 2016-12-21 10:47:15 -0800,5495, use dedicated taskq vdev_file introduction parallel zvol prefetch cause deadlock using vdev_file spa_async txg_wait_synced wait txg_sync txg_sync zio_wait wait system_taskq system_taskq spa_open_common wait fix using dedicated taskq vdev_file change originally made commit bc25c93 reverted commit aa9af22 dynamic taskqs added reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 5506 close 5495,,
3465,5f1346c29997dd4e02acf4c19c875d5484f33b1e,OLi <loli10K@users.noreply.github.com>, 2016-12-21 03:46:59 +0100,5497, fix work nested nvlist iterating input nvlist preserve nvpair name looking zprop_value later process nvpair_name always value actual property name fix couple bug zfs_ioc_recv received property restored correctly failing receive incremental send stream received property completely replaced new one successfully receiving incremental send stream reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 5497,,
3466,a3823f428deb8f15dd383dc6210b2e16926f4217,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-19 13:01:10 -0800,5469, fix file attribute branch contains following fix improvement fix setting i_flags fix wrong operator xvattr.h fix fchange macro added configure check use inode_set_flags added test case chattr better test coverage reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5486 close 5470 close 5469,,
3467,8e99d66b0555fe3d6f5b028e8f03883dbf1399bc,lemens Fruhwirth <clemens@endorphin.org>, 2016-12-17 17:09:57 +0100,308, add support semaphore preempt_rt_full main complication patch set semaphore lock change read lock rwsem taken single thread thread locked single thread take read lock multiple time though underlying implementation change mutex additional read_depth count implementation best understood inspecting patch rwsem_rt.h rt.c give best insight rwsem work implementation basically inversion found rt.c please see comment code unfortunately drop splat rwlock test4 completely test try take multiple lock different thread rwsems support otherwise splat zconfig.sh zpios sanity.sh zfs tests.sh pas debian testing kernel linux image 4.8.0 amd64 tested kerneloftruth kerneloftruth gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed clemens fruhwirth clemens endorphin.org close zfsonlinux zfs 5491 close 589 close 308,,
3468,6d064f7a07fe8366e113f45931e5f2921dcabda2,lemens Fruhwirth <clemens@endorphin.org>, 2016-12-17 17:10:25 +0100,589, remove stale comment rw_tryupgrade commit removed comment longer relevant reviewed brian behlendorf behlendorf1 llnl.gov signed clemens fruhwirth clemens endorphin.org issue 589,,
3469,58bf046ab304482775355b21eacd9f9ccbf62c12,ao <cao.xuewen@zte.com.cn>, 2016-12-20 02:26:15 +0800,5500, fix coverity defect cid 155008 cid 155008 resource leak resource_leak reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov reviewed tony hutter hutter2 llnl.gov reviewed gvozden neskovic neskovic gmail.com signed cao.xuewen cao.xuewen zte.com.cn close 5500,,
3470,6c01a4af2b5466fbdceba7304fa8b0dfb0dac839,hunwei Chen <tuxoko@gmail.com>, 2016-12-19 09:46:29 -0800,5496, fix zmo leak zfs_sb_create fails zfs_sb_create would normally take ownership zmo freed zfs_sb_free however zfs_sb_create fails need explicit free reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5490 close 5496,,
3471,1528bfdb148b44eaa0522109fee1ab61f4f3214b,ony Hutter <hutter2@llnl.gov>, 2016-12-16 16:10:45 -0800,5443, run zpool iostat cmd command vdevs vdevs specified zpool iostat allows specify certain vdevs display currently run zpool iostat cmd vdev1 vdev2 ... specific vdevs actually run command vdevs display result vdevs specify patch corrects behavior run command specified vdevs also enables test reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5443,,
3472,b4d8e2be036891dcf2fdb510571bdeb9f2c64faa,hunwei Chen <david.chen@osnexus.com>, 2016-12-16 15:15:48 -0800, , add test chattr signed chunwei chen david.chen osnexus.com,,
3473,a5248129b865d9b9675a6952c40a9f68e0374b83,hunwei Chen <david.chen@osnexus.com>, 2016-12-16 13:54:51 -0800, , use inode_set_flags available signed chunwei chen david.chen osnexus.com,,
3474,c360af541117a0978b7fe146b59c12ad2f80d162,hunwei Chen <david.chen@osnexus.com>, 2016-12-16 12:41:56 -0800, , fix fchange fchange detecting flag change however incorrect would always fail detect flag change set unset causing user without able unset flag signed chunwei chen david.chen osnexus.com,,
3475,81eb8a1fbb5dae86bebdc6c518071ae3ab062e3f,ao <cao.xuewen@zte.com.cn>, 2016-12-17 01:11:17 +0800,5467, fix coverity defect cid 147534 cid 147534 negative array index read reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5467,,
3476,01017962908392b83764f29b21e687844636eed6,vozden Neskovic <neskovic@gmail.com>, 2016-12-16 02:31:33 +0100,5477, abd adapt avx512bw raidz assembly adapt avx512bw implementation use abd buffer mul2 implementation rewritten take advantage instruction set reviewed brian behlendorf behlendorf1 llnl.gov reviewed romain dolbeau romain.dolbeau atos.net signed gvozden neskovic neskovic gmail.com close 5477,,
3477,9c9ad845ef372a4c47a01c20e939fd2c40bc7ac6,hunwei Chen <david.chen@osnexus.com>, 2016-12-14 18:24:47 -0800, , refactor splat macro function refactor code making splat_test_ init fini init fini function reason macro would bloated inline every call signed chunwei chen david.chen osnexus.com,,
3478,71a3c9c45d7829994d3d66f014410f7c223f88f7,hunwei Chen <david.chen@osnexus.com>, 2016-12-15 11:12:50 -0800, , fix splat memleak splat_test_fini call kfree causing memleak signed chunwei chen david.chen osnexus.com,,
3479,05100ec8f06589896fcd2a847a12c5b6fcb67b81,hunwei Chen <david.chen@osnexus.com>, 2016-12-14 14:53:56 -0800, , fix wrong operator xvattr.h signed chunwei chen david.chen osnexus.com,,
3480,7bb1325f95d0c11a2145ff99ae15057adfbae0ac,hunwei Chen <david.chen@osnexus.com>, 2016-12-14 14:18:53 -0800, , fix i_flags issue caused 64c688d fix zfs_xvattr_set set s_immutable s_append flag correctly reinstate use zfs_xvatter_set also setting inode zfs_znode_alloc zfs_rezget signed chunwei chen david.chen osnexus.com,,
3481,f2d8bdc62ef779a632615b8a4be90009517f457a,hunwei Chen <tuxoko@gmail.com>, 2016-12-14 09:41:39 -0800,5484, add ida_destroy zvol_fini fix memleak user ida need call ida_destroy using otherwise ida free_bitmap stuff may leak reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5484,,
3482,db2c364ffde84125de5aceb0c3eb6062abb0199c,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-14 09:36:14 -0800,5482, skip xfstests ubuntu 16.04 centos zfs enabled version xfstests fails build cleanly ubuntu 16.04 centos issue resolved rebasing zfs patch latest xfstests pushing patch upstream would allow use unmodified xfstests reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 5481 close 5482,,
3483,c6ced7261c1986aac7ced7f46a960025a4e053a2,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-14 09:33:07 -0800,5480, skip slow test kmemleak enabled running zfs test suite kmemleak enabled kernel following test case run far slower usual may hit timeout threshold skip following test case test cli_root zfs_get zfs_get_009_pos run root test cli_root zpool_clear run root test cli_root zpool_create run root test feature async_destroy run root test inheritance inherit_001_pos run root reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 5479 close 5480,,
3484,f974e25dc14e8b611d792839bffabd09b9f74b43,under2015 <omfgbunder@gmail.com>, 2016-12-13 17:21:02 -0500,5475, fix typo dbuf.c remove two large whitespaces modinfo zfs well correcting couple typo reviewed brian behlendorf behlendorf1 llnl.gov signed bunder2015 omfgbunder gmail.com close 5475,,
3485,02730c333c4fce8c0ead1f7f3404caca5cdb3936,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-12 10:46:26 -0800,5465, use cstyle cpp make cstyle check enable picky cstyle check resolve new warning vast majority change needed handle minor issue whitespace formatting patch contains functional change non whitespace change follows time loop fix missing cmd zed agent zfs_diagnosis.c comment confim confirm change endline cmd zpool zpool_main.c number begin cstyled end cstyled block cstyled marker change ulong unsigned long module zfs dsl_scan.c rearrangement module_param line module zfs metaslab.c add block around statement reviewed giuseppe natale dinatale2 llnl.gov reviewed kan johansson f96hajo chalmers.se signed brian behlendorf behlendorf1 llnl.gov close 5465,,
3486,d57f03e40ec3bbf109e75b83699b58157b9a867d,eorge Melikov <mail@gmelikov.ru>, 2016-12-09 20:48:12 +0100,5361, add contributing information template guideline developer user describing participle project reviewed manuel mendez mmendez534 gmail.com reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed george melikov mail gmelikov.ru close 672 close 4776 close 5361,,
3487,00155d395f4154b5de2526bbc0c8a679282cfaee,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-12-10 02:59:36 +0800,5421, fix coverity defect cid 147475 cid 147475 logically dead code deadcode reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn close 5421,,
3488,a806cb6a89589d4e1e57a01161b4ce0e2d53523a,hunwei Chen <tuxoko@gmail.com>, 2016-12-09 10:52:08 -0800,5456, count dataset namelen snapshot count dataset namelen snapshot fix making pool unimportable dataset namelen 255 add test file zfs create name length 255 reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5432 close 5456,,
3489,c077090a9b11d42c0734f0741ca08d0c9b6b37b0,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-12-09 05:48:09 +0800,5437, fix coverity defect cid 154617 cid 154617 memory illegal access uninit value need initialized make coverity happy dsize value irrelevant address accessed used arithmetic dsize zero either dabd null code column longer current data column reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5437,,
3490,f95e64789157c2fa373cb424f2b5713be4c8a639,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-08 14:05:02 -0700,5433, speed zvol import export speed speed import export speed add system delay taskq parallel prefetch zvol dnodes parallel zvol_free reduce list linear search using ida hash reviewed boris protopopov actifio.com reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5433,,
3491,f200b836734550ba258a0d7e05381dc8cebf80f4,hunwei Chen <tuxoko@gmail.com>, 2016-12-08 13:00:20 -0800,588, add long delay add dedicated long delay like spa_deadman allow use system_taskq manner dispatch multiple task call reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 588,,
3492,27f2b90d3e365dbe20d736792b390674e8236b17,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-08 13:57:42 -0700,5457, revert disable default enable default subsequent testing unable reproduce suspected regression tested kerneloftruth kerneloftruth gmail.com reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov reverts 5335 close 5289 close 5457,,
3493,e8a2014436147d07442e52f854e197082748fca6,vozden Neskovic <neskovic@gmail.com>, 2016-12-03 00:59:35 +0100,5425, cache value ddt change save reuse ddt dspace calculation ddt change avoids unnecessary traversal 168kib ddt histogram reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 5425,,
3494,baf67d15a59025fb53fc60bf439ef291397366e8,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-02 16:57:49 -0700,5412, refactor txg history kstat observed even txg history disabled setting zfs_txg_history txg_sync thread still fetch vdev stats unnecessarily patch refactors code vdev_get_stats longer called zfs_txg_history reduces difference upstream zol txg_sync_thread function reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5412,,
3495,899662e344b150037180a6f61acd186fec773c5f,hunwei Chen <david.chen@osnexus.com>, 2016-11-30 13:56:50 -0800, , parallel zvol_free kernel version put_disk wait 10ms pool lot zvols easily wait min zvol_free sequentially signed chunwei chen david.chen osnexus.com requires spl ref pull 588 head,,
3496,7ac557cef18a23269b76a63924ae866c7e9de668,hunwei Chen <david.chen@osnexus.com>, 2016-11-30 13:56:50 -0800, , parallel prefetch parallel prefetch zvol dnodes actually creating individual greatly reduce import time lot zvols disk slow signed chunwei chen david.chen osnexus.com,,
3497,6c09d3e5a04db023536aab467064cad3f7858776,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-12-03 02:20:57 +0800,5410, enable update test case correctly interpret linux report mount option reviewed brian behlendorf behlendorf1 llnl.gov signed chaoyuzhang zhang.chaoyu zte.com.cn close 5410,,
3498,4dec26e49a8c2fefb357158a87c9756f14c31697,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-02 10:10:23 -0700,5445, skip bit system test case currently fails testing bit system conditionally skip test case bit system root cause identified resolved signed brian behlendorf behlendorf1 llnl.gov issue 5444 close 5445,,
3499,b0319c1faae5a77e553ae74bf899efbc6629674d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-12-01 16:50:11 -0700,5382, openzfs 7143 dbuf_read creates unnecessary zio_root bonus buf dbuf_read creates zio_root track wait zio may happen part call however blkptr_t buffer null hole create zio zio_root unnecessary always case calling dbuf_read bonus buffer blkptr part containing dnode workload read lot bonus buffer e.g file creation removal creating destroying unnecessary zio decrease performance around fix create destroy zio_root dbuf_read blkptr null hole change sponsored intel corp authored matthew ahrens mahrens delphix.com reviewed alex zhuravlev intel.com ported brian behlendorf behlendorf1 llnl.gov issue openzfs openzfs 137 close 4803 close 5382,,
3500,ba712624d6a0df121d5dfc5440ba83cf53224916,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-12-02 07:45:16 +0800,5438, fix incorrect operator is_metadata set correctly reviewed dan kimmel dan.kimmel delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5438,,
3501,e2c7d3785ad97399478421293121d7853463a3e4,ao <cao.xuewen@zte.com.cn>, 2016-12-02 07:39:06 +0800,5440, remove unused look like functionality added original implementation never needed safely removed easily added back find use reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5440,,
3502,6a8fd57fa7f76e07172aa2c517f2c79296ba322e,ao <cao.xuewen@zte.com.cn>, 2016-12-02 07:36:25 +0800,5439, compile zio.h zio_impl.h mutual include zio.h includes zio_impl.h zio_impl.h also includes zio.h header file contain get rid zio_impl.h include zio.h update zio_inject.c include zio.h instead zio_impl.h reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5439,,
3503,d45e010dceffc3bf86600787f4d116f891b8bf23,hunwei Chen <david.chen@osnexus.com>, 2016-11-30 13:56:50 -0800, , zvol reduce linear list search use kernel ida generate minor number use hash table find zvol name signed chunwei chen david.chen osnexus.com,,
3504,57ddcda1647daac93057dd520a9dc5187c643264,hunwei Chen <david.chen@osnexus.com>, 2016-11-30 13:56:50 -0800, , use long delay task use spa_deadman free system_taskq long delay task allow system_taskq without blocked forever making system_taskq generic useful signed chunwei chen david.chen osnexus.com,,
3505,493492559e32aa77ff8a5b32572afab5b848a53b,hunwei Chen <tuxoko@gmail.com>, 2016-12-01 10:06:27 -0800,586, limit number task shown taskq proc prevent holding tq_lock long zfsonlinux zfs 8e71ab9 hogging delay task cat proc spl taskq would easily cause lockup bug fixed probably still good idea case task list grow large reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 586,,
3506,5f20c145df3ca45f86cd1892137edb117d4c8a82,Ã¥kan Johansson <f96hajo@chalmers.se>, 2016-12-01 01:46:16 +0100,5401, force max_width force max_width instead add relevant call max_width first location max_width added show_import followed print_logs print child vdev name retrieved using explicit added second location status_callback followed print_logs print_l2cache print_spares l2cache spare matter mirror raidz involved retrieves name using explicit calling print child call max_width get_namewidth changed used zpool_do_iostat followed print_iostat doe add overall consider adding relevant name_flags cb_name_flags field remove explicit adding called routine reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed haakan johansson f96hajo chalmers.se close 5401,,
3507,a3fd9d9e1525d5df18b7f8c2895270689d292ec2,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-30 16:18:20 -0700,5409, convert zio_buf_alloc consumer multiple case zio_buf_alloc used instead kmem_alloc vmem_alloc often done allocation could large easy use zfs_buf_alloc ideal allocation small short lived case better use kmem_alloc vmem_alloc possible want avoid case slab allocated kmem cache rarely used note small allocation vmem_alloc internally converted kmem_alloc therefore long large allocation infrequent short lived penalty using vmem_alloc small reviewed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 5409,,
3508,7657defc48b7c47a8bf0c8f21c78783d293dc5ed,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-30 14:48:16 -0700,5135, introduce arc buffer data abd zfs currently arc buffer backed virtual memory functional major problem approach observed openzfs platform abd designed address issue includes contribution openzfs developer multiple platform openzfs platform benefit abd functionality critical linux unlike openzfs platform linux kernel discourages extensive use virtual memory provided interface optimized frequent allocation virtual address space maintain good performance kmem cache used contains relatively long lived slab backed virtual memory downside approach slab become highly fragmented resulting inefficient use memory another issue bit system available virtual address space kernel small fraction total system memory mean arc size highly constrained hurt performance make allocating memory difficult ooms likely abd designed address issue using scatter list page data buffer remove need slab resolve fragmentation issue also allows high memory page allocated alleviates virtual address space pressure bit system metadata buffer small linear abds allocated slab preferable many place code expect able read given offset buffer using linear abds mean none code need modified majority buffer allocated kmalloc minimal impact virtual address space tested kash pande kash tripleback.net tested kerneloftruth kerneloftruth gmail.com tested rageltman rageltman sempervictus tested dhe git dehacked.net reviewed chunwei chen david.chen osnexus.com reviewed dan kimmel dan.kimmel delphix.com reviewed david quigley david.quigley intel.com reviewed gvozden neskovic neskovic gmail.com reviewed tom caputi tcaputi datto.com reviewed isaac huang he.huang intel.com reviewed jinshan xiong jinshan.xiong intel.com signed brian behlendorf behlendorf1 llnl.gov close 3441 close 5135,,
3509,ce43e88dd65509a4cf62c4acc76619e571d8518a,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-12-01 02:27:04 +0800,5419, enable script disabled avail used space changed slightly add sync_pool short delay snapshot created ensure everything flight written reviewed brian behlendorf behlendorf1 llnl.gov signed chaoyuzhang zhang.chaoyu zte.com.cn close 5201 close 5419,,
3510,2d44b04b79317df32b509a381d023ba2d5b80f39,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-12-01 01:48:01 +0800,5435, fix coverity defect cid 154591 cid 154591 incorrect expression sizeof_mismatch reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5435,,
3511,982957483450d53683681f456d1c84cfeb56afad,hunwei Chen <david.chen@osnexus.com>, 2016-10-26 00:32:23 -0400, , abd optimized page allocation code convert abd use linux kernel scatterlist implementation instead hand rolled one illumos scatter abds preferentially populated higher order compound page single zone allocation size progressively decreased satisfied without performing reclaim compaction alternate page allocator provided kernel older 3.6 config_highmem system allocator designed fallback maximum compatibility extended abdstats provide visibility allocator add cached value pagesize userspace contribution chunwei chen david.chen osnexus.com gvozden neskovic neskovic gmail.com jinshan xiong jinshan.xiong intel.com isaac huang he.huang intel.com david quigley david.quigley intel.com brian behlendorf behlendorf1 llnl.gov,,
3512,4f60152910c6bbc1c7975409f852af7ef11c7007,hunwei Chen <david.chen@osnexus.com>, 2016-09-27 17:30:02 -0400, , abd kmap kmap_atomic convert usage kmap kmap_atomic correctly saving irq state,,
3513,88cc2352eaf6bdd87be8349097b4a3784aeafc51,omain Dolbeau <romain.dolbeau@atos.net>, 2016-11-22 08:38:34 +0100, , abd raidz neon support port neon implementation raid function abd signed roomain dolbeau romain.dolbeau atos.net,,
3514,65d71d4212a813937f2eba36981b236cdba292f7,vozden Neskovic <neskovic@gmail.com>, 2016-11-20 06:01:31 +0100, , abd raidz avx512f support implement shift based multiplication 512f higher ipc lookup based method yield better performance current hardware result xeon phi cpu 7210 implementation gen_p gen_pq gen_pqr rec_p rec_q rec_r rec_pq rec_pr rec_qr rec_pqr original 142232671 24411492 12948205 283053705 22348167 4215911 9171609 2265548 2378370 1648495 scalar 295711162 49851491 33253815 293198109 88179448 61866752 27941684 25764416 17384442 12138153 sse2 410055998 199642658 117973654 406240463 152688682 121092250 84968180 79291076 47473657 20779719 ssse3 411641595 199669571 117937647 406211024 137638508 117050346 81263322 76120405 46281559 32696722 avx2 616485806 311515332 188595628 605455115 260602390 230554476 148198817 138800254 92273356 62937819 avx512f 832191523 408509425 253599522 810094481 404325734 317590971 218235687 197204920 133101937 94001219 fastest avx512f avx512f avx512f avx512f avx512f avx512f avx512f avx512f avx512f avx512f signed gvozden neskovic neskovic gmail.com,,
3515,cbf484f8ad26b84a17c5308af47d2c202e1dc9e9,vozden Neskovic <neskovic@gmail.com>, 2016-08-24 15:51:33 +0200, , abd vectorized raidz enable vectorized raidz code abd buffer avx512f avx512bw neon aarch64_neonx2 disabled commit exception avx512bw implementation updated abd subsequent commits signed gvozden neskovic neskovic gmail.com,,
3516,a206522c4fd31f03f14ba174d6159b72acfae0a9,vozden Neskovic <neskovic@gmail.com>, 2016-08-24 15:42:51 +0200, , abd change vectorized raidz userspace aligned buffer minimum 32b alignment needed avx2 kernel buffer aligned 512b add interface abd_iter_map fix calculation iter_mapsize add signed gvozden neskovic neskovic gmail.com,,
3517,b0be93e81a4ace96a799d3705da6832633eb4325,saac Huang <he.huang@intel.com>, 2016-08-31 00:26:43 -0600, , abd page support vdev_disk.c signed isaac huang he.huang intel.com,,
3518,a6255b7fce400d485a0e87cbe369aa0ed7dc5dc4,avid Quigley <david.quigley@intel.com>, 2016-07-22 11:52:49 -0400, , dlpx 44812 integrate 220 large memory scalability,,
3519,616fa7c02b0cc373f011998f56ed53bb37742d13,im Chase <tim@chase2k.com>, 2016-11-29 15:47:05 -0600,5411, zstreamdump need initialize fletcher support otherwise checksum function pointer initialized reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 5411,,
3520,8720e9e7482fa2dce4f34c56d3c7451833413d7d,ony Hutter <hutter2@llnl.gov>, 2016-11-29 13:45:38 -0800,5368, add zpool iostat status run command patch add command option zpool status zpool iostat option allows run arbitrary command vdev display first line output zpool status iostat environment var vdev_path vdev_upath set vdev path underlying path running command device mapper multipath partitioned vdevs vdev_upath actual underlying dev disk useful command running requires dev device patch also sys block dev slave lookup underlying device instead using libdevmapper remove libdevmapper requirement build time also allows resolve device mapper device without root mean udev_upath get set correctly running zpool status iostat unprivileged user example zpool status echo vdev_path vdev_upath name state read write cksum mypool online mirror online mpatha online dev mapper mpatha dev sdc sdb online dev sdb1 dev sdb reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5368,,
3521,2f71caf2d926249920d1b9162550c56715cc6461,OLi <loli10K@users.noreply.github.com>, 2016-11-29 20:22:38 +0100,5367, allow zfs unshare protocol allow zfs unshare protocol command share unshare datasets given protocol nfs smb additionally enable zfs test suite zfs_share zfs_unshare test case work around illumos specific functionality share unshare function wrapper added around finally fix issue would leave smb share exported invoking zfs unshare reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com signed loli10k ezomori.nozomu gmail.com close 3238 close 5367,,
3522,251cb8dfacb51b9ad7a0e3da305c0bc5bbc1cb9e,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2016-11-28 16:24:47 -0800,5407, ensure perf regression test cleanup properly test performance regression test suite creates pool dataset use unfortunately test cleanup pool dataset correctly complete test kill fio iostat destroys dataset finally destroys pool test also trap sigterm signal handle case test runner kill test reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov requires builder close 5407,,
3523,ce4197c1ca987dad9cd1d65fc8c50226dd19d863,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-11-19 08:25:06 +0800,5406, enable pass expected reviewed brian behlendorf behlendorf1 llnl.gov signed chaoyuzhang zhang.chaoyu zte.com.cn close 5406,,
3524,7ca25051b6470e8471b4ed454d8c66ff21338de3,eHackEd <DeHackEd@users.noreply.github.com>, 2016-11-15 12:20:46 -0500,5393, kernel 4.9 compat file_operations aio_fsync removal linux kernel commit 723c038475b78 removed field reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 5393,,
3525,6146e17ebe48da1be8b4e2bf38c879273b7c34e5,eHackEd <DeHackEd@users.noreply.github.com>, 2016-11-14 20:03:57 -0500,5397, fix man page formatting zfs module parameter bold normal code mixed place resulting bad highlighting reviewed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net close 5397,,
3526,1c9116125830fa4734422cfd7dcdd2f3d333b5c5,Ã¥kan Johansson <f96hajo@chalmers.se>, 2016-11-14 18:47:49 +0100,5394, repair indent zpool.8 man page repair indent zpool.8 man page zpool labelclear detail accidentally introduced 193a37cb2 git bisect reviewed brian behlendorf behlendorf1 llnl.gov signed haakan johansson f96hajo chalmers.se close 5394,,
3527,c30d8ded0c8c64a9a144cf478502bb4e512ab9fa,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-14 09:40:18 -0800,5387, fix zpool import detection issue adding entry configuration verify device opened exclusively ensures long multipathd running underlying multipath device otherwise appear identical dev mapper counterpart pruned configuration failure result result vdev appearing unavail vdev path provided kernel opened exclusively check would normally performed zpool_open_func placing would result false positive called concurrently many device reviewed olaf faaland faaland1 llnl.gov reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5387,,
3528,0df15db98f185c948239c236c9e51d7ce14adb71,on Brady <don.brady@intel.com>, 2016-11-10 14:52:59 -0700,5383, add statechange notify zedlet zed internal fault diagnosis statechange event generated faulted state replace notify checksum notify zedlets one based statechange reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 5383,,
3529,32dec7bd1a0bce6039a65768ed8552164a0130bf,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-11-11 00:50:32 +0800,5326, fix coverity defect cid 147503 cid 147503 dereference null check forward_null reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5326,,
3530,3bfd95d5898b1318f9a5c36d1cc43cf23d004f64,ao <cao.xuewen@zte.com.cn>, 2016-11-10 09:35:26 +0800,5379, fix coverity defect cid 147540 147542 cid 147540 cast nsec int32_t properly detect expected overflow cid 147542 intval never defined zero remove useless check reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5379,,
3531,7e5ea7be7f69231b66c1affddb870fcea8c3a4d8,vozden Neskovic <neskovic@gmail.com>, 2016-11-09 22:53:13 +0100,5378, fix check pas acl_type_access type parameter set_cached_acl avoid removal dead code bug compile time tested 3.2.0 kernel introduced 3779913 reviewed massimo maggi massimo maggi.eu reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed gvozden neskovic neskovic gmail.com close 5378,,
3532,126ae9f4e9a8e39f65fcd55e3e1cf90d4e9c6f56,xiong <jinshan.xiong@gmail.com>, 2016-11-09 13:51:12 -0800,5385, export symbol used lustre determine objset upgraded inline version work exported reviewed brian behlendorf behlendorf1 llnl.gov signed jinshan xiong jinshan.xiong intel.com close 5385,,
3533,0420c126ce11432590bce1da651334ca07223185,uxoko <tuxoko@gmail.com>, 2016-11-09 10:37:17 -0800,5375, linux 3.14 compat assign inode set_acl linux 3.14 introduces inode set_acl normally acl modification come setxattr handle acl xattr_handler already handle well however nfsd directly call inode set_acl return error exists reviewed tim chase tim chase2k.com reviewed massimo maggi massimo maggi.eu reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5371 close 5375,,
3534,66f801f00acbc83206b5c2af9e44de45da2602a3,laf Faaland <faaland1@llnl.gov>, 2016-11-09 10:19:43 -0800,5384, fix symlinks vdev_clear statechange led.sh named zed makefile.am vdev_clear blinkled.sh statechange blinkled.sh causing bad symlinks created reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 5384,,
3535,010782be9197c8e1131be6220fff682c692a23eb,ao <cao.xuewen@zte.com.cn>, 2016-11-09 09:33:23 +0800,5364, fix coverity defect cid 147586 cid 147586 function allow_usage type bound read reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5364,,
3536,acc6d0e223e5dcff183a5dd52019cea1dabd981b,ao <cao.xuewen@zte.com.cn>, 2016-11-09 08:41:31 +0800,5376, fix coverity defect cid 147629 cid 147629 type dereference null check reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5376,,
3537,70df4c21c0da3baacb6601d924dd1fb2b3cad1b3,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-11-09 06:34:52 +0800,5380, fix coverity defect 154021 cid 154021 null pointer dereference reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5380,,
3538,a36cc8d2428259f5cfefb653bff39ca7afc66518,ao <cao.xuewen@zte.com.cn>, 2016-11-09 06:28:17 +0800,5304, fix coverity defect cid 147626 147628 cid 147626 type dereference null check cid 147628 type dereference null check reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed cao.xuewen cao.xuewen zte.com.cn close 5304,,
3539,ffb78320c8040e10e754f1358476beb04c943510,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-08 13:57:17 -0800,5381, skip test suite bit test builder ztest filebench xfstests zfsstress test suite skipped testing bit platform pas reliably signed brian behlendorf behlendorf1 llnl.gov close 5381,,
3540,976246fadde25790cec3de50c01c689d98d84e0c,on Brady <don.brady@intel.com>, 2016-11-07 16:01:38 -0700,5343, add illumos fmd zfs logic zed phase phase work primarily entail diagnosis engine retire agent module also includes infrastructure support crude fmd environment host module diagnosis engine consumes checksum ereports feed serd engine generate corres ponding fault diagnosis serd engine fire diagnosis state data collected case one case per vdev tracked retire agent responds diagnosed fault isolating faulty vdev notify zfs kernel module new vdev state degraded faulted agent also responsible managing hot spare across pool encounter device fault device removal replaces device appropriate spare available reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 5343,,
3541,f4bae2ed6361917660f5238cd35672ad18d7babc,ao <cao.xuewen@zte.com.cn>, 2016-11-08 06:54:32 +0800,5365, fix coverity defect cid 147575 147577 147578 147579 cid 147575 type unintentional integer overflow cid 147577 type unintentional integer overflow cid 147578 type unintentional integer overflow cid 147579 type unintentional integer overflow reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5365,,
3542,3779913b35634d9d34ac9eb709203275b28050c2,hunwei Chen <david.chen@osnexus.com>, 2016-11-01 17:19:52 -0700, , use set_cached_acl possible originally two function inline usability tied however since linux 3.14 became export_symbol always use patch create independent test two function use possible signed chunwei chen david.chen osnexus.com,,
3543,8e71ab99dc4a591d41ab0d9255ddca3e914f47e4,hunwei Chen <david.chen@osnexus.com>, 2016-10-28 13:37:00 -0700, , batch free currently every call schedule delayed task delayed task add timer used fine except possibly bad performance impact however linux 4.8 new timer wheel implementation introduced new implementation larger delay accuracy timer flood timer expire time couple fact task_expire linear search lock held cause extreme amount contention inside interrupt would actually lockup system fix batch free prevent flood delayed task every call put posix_acl freed lockless list every batch window sec fire free every posix_acl passed grace period list way one delayed task every second http lwn.net article 646950 signed chunwei chen david.chen osnexus.com,,
3544,83bf769d500a231eac023c9f9f88719ad205694e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-07 10:28:57 -0800,5359, fix zpool import detection issue patch address multiple zpool import block device indentification problem likely occur system configured use blkid by_vdev path multipath failover symptom commonly observed import different path name import pool would normally expected using blkid identify vdevs listed device may added cache order order apply preferred search order heuristic zfs_path_order function added calculate order given full path name since possible multiple block device different vdev guids refer slice cache must indexed guid name avoiding collision preferred ordering maintaining even multiple block device claim preferred sorting partition never benefitial linux system removed part change adding entry blkid cache avl_find avl_insert used instead avl_add collision possible must handled gracefully pool using multipath device minimum three device vdev label may read device underlying dev device due way block cache implemented device may different cached copy vdev label result ghost pool appear persist even zpool labelclear done device order prevent vdev label read o_direct order bypass caching get disk version opening block device verify vdev guid read disk match expected vdev guid allows bad label filtered reviewed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5359,,
3545,34328f3cf8a4ca9441a1609878500ef1ff2eeb16,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-05 04:54:48 +0000, , allow 16m zio buffer user space restrict maximum zio alloc size bit kernel space virtual address space limitation apply user space resolve memory allocation failure raidz_test expects able exercise valid zio size signed brian behlendorf behlendorf1 llnl.gov,,
3546,61f9b2cd12a34dcc98e1c94d2988d561ff847b7b,rian Behlendorf <behlendorf1@llnl.gov>, 2016-11-04 21:10:17 +0000, , replace isainfo is_32bit function isainfo utility used zfs test suite determine running bit platform non portable check replaced is_32bit helper function getconf getconf utility available linux freebsd illumos signed brian behlendorf behlendorf1 llnl.gov,,
3547,1ad9de6d08f8c0261094d322a4507a5cbbb53e66,ony Hutter <hutter2@llnl.gov>, 2016-11-04 13:34:13 -0700,5363, allow autoreplace even enclosure led sysfs entry exist previous autoreplace code assumed using autoreplace also enclosure driver loaded could lead autoreplace working driver loaded creating proper symlinks happened patch remove assumption reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 5363,,
3548,7f3194932d22c667026aff1b263ceaa1ebd012ee,omain Dolbeau <romain.github@dolbeau.name>, 2016-11-04 18:53:03 +0100,5317, add superscalar fletcher4 fletcher4 algorithm implemented pure using multiple counter using algorithm identical used sse neon avx2 allows faster execution core strong superscalar capability weak simd capability reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau atos.net close 5317,,
3549,ace1eae84cca8579596f46262d99df19f6d7e963,hunwei Chen <david.chen@osnexus.com>, 2016-01-26 12:29:46 -0800, , add support o_tmpfile linux 3.11 add o_tmpfile open allow creating unlinked file supported filesystem basically open unlink atomically filesystem support added i_op tmpfile basically copy create operation except get rid link name related stuff add new node unlinked set also add support linkat link tmpfile however since previous file operation skip zil force txg_wait_synced make sure sync safe signed chunwei chen david.chen osnexus.com,,
3550,987014903f9d36783547188b6ad00f01d9a076bd,hunwei Chen <david.chen@osnexus.com>, 2016-10-12 17:30:46 -0700, , fix unlinked file xattr operation currently thing like fsetxattr unlinked file result enodata two place cause zfs_dirent_lock zfs_zget fix zfs_dirent_lock pretty straightforward zfs_zget though need return error unlinked pretty big change behavior skimming caller think change would cause problem also nothing preventing z_unlinked set z_lock mutex dropped zfs_zget return anyway rest stuff make sure log xattr stuff owner unlinked signed chunwei chen david.chen osnexus.com,,
3551,7f547f85fe783a6ac69ce250b361436b9c4888a6,omain Dolbeau <romain.github@dolbeau.name>, 2016-11-02 20:40:23 +0100,5219, add parity generation rebuild using avx 512 x86 avx512f work avx512 hardware since foundation instruction avx512bw faster hardware supporting avw512bw extension use full width pshufb instead relying 256 bit avx2 pshufb side effect code also unrolled reviewed richard laager rlaager wiktel.com reviewed gvozden neskovic neskovic gmail.com reviewed jinshan xiong jinshan.xiong intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.github dolbeau.name close 5219,,
3552,6d4210052be6c63032d693aa487f84955b0dae44,earBabyLiu <liu.huang@zte.com.cn>, 2016-11-03 03:34:10 +0800,5320, fix memory leak error doe free nvlist allocates behavior may intentional originally written atypical often confusing since caller rely behavior function updated always free nvlist error reviewed brian behlendorf behlendorf1 llnl.gov signed bearbabyliu liu.huang zte.com.cn close 5320,,
3553,e676a196249b5e8d23c036548f189cad60d5cd2a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-31 21:16:37 +0000,5347, skip bit system test case currently hang testing bit system conditionally skip test case bit system root cause identified resolved reviewed tom caputi tcaputi datto.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 5352 issue 5347,,
3554,9edb36954a0d11ca867d49e23b6b3bd4d1d16c5d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-31 19:24:54 +0000,5347, use vmem_size bit system bit linux system use vmem_size correctly size arc better determine throttle due low memory bit system change effect since virtual address space available far exceeds physical memory available reviewed tom caputi tcaputi datto.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 5347,,
3555,82ec9d41d85b1643402493bf72a7e7d2896b7310,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-28 23:53:24 +0000,5347, fix bit maximum volume size limit 1tb exists zvols bit system update code correctly reflect limitation similar manor openzfs implementation reviewed tom caputi tcaputi datto.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 5347,,
3556,4990e576c6aa18048dd2341a736118383a5f063d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-28 22:42:56 +0000,2002, enable .zfs snapshot bit system originally .zfs snapshot directory disabled bit system bit inode number supported longer case functionality enabled default reviewed tom caputi tcaputi datto.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 5347 close 2002,,
3557,48d3eb40c71e5840e4d9e9af7addcfef7c382511,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-28 22:40:14 +0000,5347, add taskqid_invalid add taskqid_invalid macro update caller use macro instead testing functional change even though function zfs_ctldir.c incorrectly used instead reviewed tom caputi tcaputi datto.com reviewed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 5347,,
3558,b3c159fee4ab92832e6a735431b8b5f930665fab,eal Gompa (ãã¼ã«ã»ã´ã³ã) <ngompa13@gmail.com>, 2016-11-02 13:56:36 -0400,5356, process systemd service systemd scriptlets patch ensures systemd service processed systemd scriptlets service properly configured per preset file installed package without zfs.target set none service enabled per preset file meaning automounting filesystems work box reviewed brian behlendorf behlendorf1 llnl.gov signed neal gompa ngompa13 gmail.com close 5356,,
3559,cbba7146676dd145f373bcbe4f4f435d9100ddbb,buntu <ubuntu@ip-172-31-16-145.us-west-1.compute.internal>, 2016-10-28 21:23:30 +0000, , add taskqid_invalid taskqid_initial macro add taskqid_invalid taskqid_initial macro update taskq implementation test case use solely purpose readability introduces functional change signed brian behlendorf behlendorf1 llnl.gov,,
3560,1b457bcbe502eb29333a34b0518c1dca0e2ee974,buntu <ubuntu@ip-172-31-16-145.us-west-1.compute.internal>, 2016-10-28 20:56:38 +0000, , fix vmem_size add minimal implementation vmem_size account virtual memory usage spl kmem cache functionality useful bit system small virtual address space following assumption made major spl consumer virtual memory kmem cache memory allocated vmem_alloc short lived ignored allow 4mb floor generous pad given normal consumption contends cache create destroy signed brian behlendorf behlendorf1 llnl.gov,,
3561,51c9163f98f60f585906a2ddec376924ad142f78,ao <cao.xuewen@zte.com.cn>, 2016-11-03 01:26:12 +0800,5354, fix use array_size replace magic value array_size correctly handle sa_legacy_attrs array size change reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5354,,
3562,981b21260e7ad35b59cee2989477276109b6b3a2,ao <cao.xuewen@zte.com.cn>, 2016-11-02 01:20:24 +0800,5305, fix coverity defect cid 147553 cid 147553 type dereference null return value reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5305,,
3563,2bac68145f94012d6e41dffb9f4a7faf80a8e107,ao <cao.xuewen@zte.com.cn>, 2016-11-01 07:56:10 +0800,5321, fix coverity defect cid 147548 cid 147548 type dereference null return value reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5321,,
3564,b182ac00aa60d1b61d92d70ea399cd39f966fb31,ao <cao.xuewen@zte.com.cn>, 2016-11-01 07:23:56 +0800,5322, fix coverity defect cid 152975 cid 152975 type dereference null return value reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5322,,
3565,4aafab91c5033e35217209d121f4c2fb83a8f690,eLiXin <ge.lixin@zte.com.cn>, 2016-11-01 07:04:01 +0800,5319, fix coverity defect cid 147509 cid 147509 explicit null dereferenced fragile relied caller much reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5319,,
3566,9f38f81ca38e62bc31af1d4086e0f7a963644d38,egend-hua <liu.hua130@zte.com.cn>, 2016-11-01 05:55:40 +0800,5315, update migration test due instability migration test test skip migration test focus migrating test file zfs create zpool ext2 directly loop device rather set_partition reviewed sydney vanda sydney.m.vanda intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed legend hua liu.hua130 zte.com.cn close 5315,,
3567,f26eb428622a6f3dc613d81faf905958e231e8b1,ason Zaman <jasonzaman@gmail.com>, 2016-10-29 07:10:00 +0800,5338, add paxcheck make lint target scanelf pax utils check issue binary currently check executable stack textrels check script extended easily future check executable stack textrels frequently caused issue asm file lead security perf problem reviewed brian behlendorf behlendorf1 llnl.gov signed jason zaman jason perfinion.com close 5338,,
3568,c6a89b58a997a2b2c672542542e675447efcf4e4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-26 10:36:33 -0700, , tag 0.7.0 rc2 second release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3569,e02aaf17f15ad274fa1f24c9c826f1477911ea3f,ajo MÃ¶ller <dasjoe@users.noreply.github.com>, 2016-10-26 19:30:43 +0200,5336, fix lookup_bdev ubuntu ubuntu added support checking inode permission lookup_bdev kernel commit merged 4.4.0 6.21 upstream bug http ubuntu source linux bug 1636517 patch add test ubuntu variant lookup_bdev configure call function correct way reviewed brian behlendorf behlendorf1 llnl.gov signed hajo ller dasjoe gmail.com close 5336,,
3570,76a87a902ef031432a855fb341cf35291e2be2b6,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-26 09:13:43 -0700,5289, disable default determined definitively performance regression introduced accidentally 3dfb57a functionality disabled default enabled setting signed brian behlendorf behlendorf1 llnl.gov close 5335 issue 5289,,
3571,e4010f2719e3381ae15563d50b99e51ffe2b2168,OLi <loli10K@users.noreply.github.com>, 2016-10-26 01:17:47 +0200,5324, allow feature feature disabled command line sometimes desirable specifically disable one several feature directly zpool create command line zpool create feature feature disabled ... original patch turbo fredriksson turbo bayour.com reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 3460 close 5142 close 5324,,
3572,16fa68f07d268192552693f83a747c9141ea726b,xiong <jinshan.xiong@gmail.com>, 2016-10-26 04:21:05 +0800,5328, upgrade userobj accounting snapshot dataset zfs recv could disown living objset without calling cause problem objset would released upgrading thread still running patch avoids problem checking dataset snapshot calling snapshot immutable therefore make sense update reviewed brian behlendorf behlendorf1 llnl.gov signed jinshan xiong jinshan.xiong intel.com close 5295 close 5328,,
3573,7b25c48e6ec6aa55bd5fead2d57ade01bfb0777b,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-25 13:13:49 -0700, , tag 0.7.0 rc2 second release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3574,6568379eea8f01ad87a6cbcb66111112a1b5665f,ony Hutter <hutter2@llnl.gov>, 2016-10-25 11:05:30 -0700,5331, fix statechange led.sh unnecessary libdevmapper warning fix autoreplace behaviour statechange led.sh script zed sends following event auto replace statechange disk unavail online statechange disk online unavail vdev_attach disk online event happen zed first attempt auto online fails zed try auto replace generating vdev_attach event previous code statechange led looking unavail online transition turn led ignored online unavail transition assuming old vdev going offline problematic drive online unavail malfunctioning want ignore new patch correctly turn fault led every time drive becomes unavail also monitor vdev_attach event trigger turning led auto replaced disk come online remove unnecessary libdevmapper warning config kernel fix unnecessary libdevmapper warning building config kernel kernel code doe use libdevmapper warning needed reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 2375 close 5312 close 5331,,
3575,402c7c27b02ce7c62e1d108f4316a8faadb5f806,ason Zaman <jasonzaman@gmail.com>, 2016-10-26 01:44:09 +0800,5332, icp mark asm file noexec stack similar commit a3600a106 asm file need explicit note require executable stack reviewed brian behlendorf behlendorf1 llnl.gov signed jason zaman jason perfinion.com close 5332,,
3576,9fa4db44b76716352b994abd7668bc9565466f7f,uxoko <tuxoko@gmail.com>, 2016-10-24 16:41:56 -0700,5330, fix cred leak caught kmemleak running reviewed tim chase tim chase2k.com reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5244 close 5330,,
3577,66392d81f5ba103fc89cd7bb3b99bea76a650d45,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-24 16:39:47 -0700,4034, disable test case test case frequently trigger issue 4034. exists fix process upstreamed fix available disable test case reviewed george wilson george.wilson delphix.com signed brian behlendorf behlendorf1 llnl.gov close 5329 issue 4034,,
3578,aed0e9f3e4db75f4b622e1f0623fe61a94a43dc2,ao <cao.xuewen@zte.com.cn>, 2016-10-25 04:37:38 +0800,5306, fix coverity defect cid 147511 147513 cid 147511 type dereference null check cid 147513 type dereference null check reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5306,,
3579,13d9a004fe533df8613888687650b1b0e272b67d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-24 13:28:58 -0700,4637, fix taskq creation failure creating destroying pool tight loop possible exhaust number allowed thread system result taskq_create failling null dereference resolve issue falling back opening vdevs synchronously reviewed denys rtveliashvili denys reviewed kan johansson f96hajo chalmers.se signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 521 close 4637,,
3580,1bbd8770490f0e5b8c575865ab70f6853bca2a2a,ony Hutter <hutter2@llnl.gov>, 2016-10-24 10:45:59 -0700,2375, turn enclosure slot fault led even disk present previously drive faulted statechange led.sh script would lookup drive led sysfs entry sys block device turn testing noticed pulled drive drive badly broken longer appeared linux sys block path would removed script could lookup led entry fix patch look disk persistent sys class enclosure slot led sysfs path pool import pass path statechange led script use rather script look fly allows script turn slot led even drive missing close 5309 close 2375,,
3581,a85cefa35c00ab4999038fbed69a6c28d0244366,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2016-10-24 10:24:10 -0700,5314, change location current symlink created test runner test runner creating current symlink directory output directory previous commit current symlink placed current working directory could inaccessible likely output directory always accessible needed without deterministic way get path zfs test suite result test suite started make difficult buildbot follow log file reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5314,,
3582,24cdeaf12e9e546621902449699fc6d664aeac2b,omain Dolbeau <romain.github@dolbeau.name>, 2016-10-21 19:55:49 +0200,5248, fletcher4 algorithm implemented pure neon aarch64 armv8 bit useful micro architecture weak neon implementation bit native version slower byteswap barely faster scalar a53 a57 small improvement scalar byteswap result a53 system 0x01 implementation native byteswap scalar 1008227510 755880264 aarch64_neon 1198098720 1044818671 fastest aarch64_neon aarch64_neon result a57 system 0x01 implementation native byteswap scalar 2302071241 1124873346 aarch64_neon 2542214946 2245570352 fastest aarch64_neon aarch64_neon reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau atos.net close 5248,,
3583,e4ffa98dcaf2208c742609f0ab2bdb343071446a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-21 08:23:27 -0700,5313, fix function avl tree compare function requires either returned however strcmp function guarantee negative zero positive value returned therefore return value strcmp need sanitized avl_isign initially overlooked x86_64 implementation strcmp happens return allowed value observed aarch64 platform behaves correctly differently described reviewed jinshan xiong jinshan.xiong intel.com reviewed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 5311 close 5313,,
3584,9523b15ac1881946a7a6b7a145c8e2bb622dc56c,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-21 02:54:02 +0800,5310, fix coverity defect cid 153459 cid 153459 null pointer dereferences forward_null accidentally introduced 5159 reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5310,,
3585,9d01680430377b39dc34aaaf6ef315c49b3943cc,ao <cao.xuewen@zte.com.cn>, 2016-10-21 02:49:50 +0800,5279, fix coverity defect cid 147551 147552 cid 147551 type dereference null return value cid 147552 type dereference null return value reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5279,,
3586,5a6765cf8cad21d22dc172b4089b655c9270d16a,ao <cao.xuewen@zte.com.cn>, 2016-10-21 02:24:01 +0800,5288, fix coverity defect cid 147472 cid 147472 type constant variable guard dead code reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5288,,
3587,1f72394443f710a0be11232b557b8a698693668d,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-21 02:09:39 +0800,5298, fix coverity defect cid 150919 150923 cid 150919 buffer null terminated cid 150923 buffer null terminated reviewed brian behlendorf behlendorf1 llnl.gov reviewed tom caputi tcaputi datto.com signed luozhengzheng luo.zhengzheng zte.com.cn close 5298,,
3588,381823d6d2f1b3bcd0ef6a4f391396e5d9406036,egend-hua <liu.hua130@zte.com.cn>, 2016-10-21 02:04:30 +0800,5300, update log function log_fail rather log_failed reviewed brian behlendorf behlendorf1 llnl.gov signed legend hua liu.hua130 zte.com.cn close 5300,,
3589,72ac461cbe30cc4b9221e96b909f60ca1cb4a534,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-20 09:55:03 -0700,5308, fix make distclean makefile.am removal file test zfs test test stress makefile.am get mistakenly removed distclean target empty adding subdirs line prevents removal directory preserved location add assorted stress test may include limited http cking stress http github.com zfsonlinux zfsstress signed brian behlendorf behlendorf1 llnl.gov close 5308,,
3590,3b0ba3ba99b8a3af0fb532bf264629436b1abd84,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-18 23:49:23 +0000, , linux 4.9 compat inode_change_ok renamed setattr_prepare torvalds linux 31051c8 inode_change_ok function renamed setattr_prepare updated take dentry ratheri inode update code call setattr_prepare add wrapper function call inode_change_ok older kernel signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com requires spl ref pull 581 head,,
3591,0fedeedd309eca62d15fffd8bd811e2b12660e21,hunwei Chen <david.chen@osnexus.com>, 2016-10-19 11:19:17 -0700, , linux 4.9 compat remove iop set get remove xattr linux 4.9 torvalds linux fd50eca iop set get remove xattr generic_ set get remove xattr removed xattr operation directly s_xattr signed chunwei chen david.chen osnexus.com,,
3592,b8d9e26440ade0edebfa98af8cb9371810c1aeaf,hunwei Chen <david.chen@osnexus.com>, 2016-10-19 11:19:01 -0700, , linux 4.9 compat iop rename want flag linux 4.9 torvalds linux 2773bf0 iop rename iop rename2 merged together iop rename want flag signed chunwei chen david.chen osnexus.com,,
3593,8ba3f2bf6a66378b36acd70e5616a78396030984,hunwei Chen <david.chen@osnexus.com>, 2016-10-19 11:12:20 -0700, , remove dir inode operation operation dir specific point putting regular file signed chunwei chen david.chen osnexus.com,,
3594,ae7eda1dde8aebc298a013254dcd90f7fa42171a,hunwei Chen <david.chen@osnexus.com>, 2016-10-18 17:30:41 -0700,581, linux 4.9 compat group_info change linux 4.9 torvalds linux 81243ea group_info changed array via block array via gid change spl cred function accordingly reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 581,,
3595,87063d7dc392cb710c70dba49021d6e4ec8961a9,hunwei Chen <david.chen@osnexus.com>, 2016-10-18 17:29:26 -0700,556, fix splat cred.c cred usage need crhold current_cred fix possible leak reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 556,,
3596,9ba3c01923d45a19003641ceab311150752ed491,hunwei Chen <david.chen@osnexus.com>, 2016-10-18 15:52:30 -0700,556, fix crgetgroups bound misc cred fix init_groups nblocks therefore calling current crgetgroups init_groups would result bound access fix returning null nblocks cap crgetngroups since crgetgroups return block also remove get_group_info cred already hold reference group_info cred mutable reason hold extra reference hold cred reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 556,,
3597,9d70aec6fde90112b5b5610ab5c17b6883b97063,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-19 14:29:33 -0700,5299, update .gitignore two additional file recently introduced ignored git signed brian behlendorf behlendorf1 llnl.gov close 5299,,
3598,6078881aa18a45ea065a887e2a8606279cdc0329,ony Hutter <hutter2@llnl.gov>, 2016-10-19 12:55:59 -0700,5159, multipath autoreplace control enclosure led event rate limiting enable multipath autoreplace support fma extends fma autoreplace work multipath disk requires libdevmapper installed build time turn fault led vdevs become degraded faulted online set zed.rc zed turn enclosure led drive drive becomes faulted degraded enclosure must supported linux driver work enclosure led script work multipath device well script clear led fault cleared rate limit zio delay checksum event flood zed zio delay checksum event rate limited sec zfs module reviewed richard laager rlaager wiktel.com reviewed brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 2449 close 3017 close 5159,,
3599,7c502b0b1de8d3d341c026760df5915ad4be794a,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-19 02:32:59 +0800,5272, fix coverity defect cid 150926 cid 150926 unchecked return value checked_return case occur given existing taskq implementation flag passed task_dispatch reviewed chunwei chen david.chen osnexus.com reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5272,,
3600,6d00b5e13699c946a3f78c73defe5ff1e18264a3,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-18 10:44:44 -0700,5284, fix unused variable accidentally introduced 3dfb57a building debugging disabled several variable unused resolve wrapping assertv remove non debug build reviewed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 5284,,
3601,66826e2285d6ef8162e5cb8e727da5ea2d9f33f2,eLiXin <ge.lixin@zte.com.cn>, 2016-10-19 01:43:22 +0800,5283, fix coverity defect cid 147643 152204 49339 cid 147643 type string null terminated make sure string null terminated strlen fprintf cid 152204 type copy fixed size buffer since strlcpy availabe use strncpy terminate string manually cid 49339 type buffer null terminated since strlcpy availabe terminate string manually fprintf reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5283,,
3602,1b81ab46d060257288ee9739f7e9c5199deb901b,ao <cao.xuewen@zte.com.cn>, 2016-10-19 01:31:57 +0800,5296, fix coverity defect cid 49339 153393 cid 49339 type buffer null terminated cid 153393 type buffer null terminated reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5296,,
3603,df7492240ab628f245a5400086ab898c8e33b3da,iuseppe Di Natale <dinatale2@users.noreply.github.com>, 2016-10-18 10:19:28 -0700,5293, create symlink current test runner output generate symlink current working directory test runner.py output make easier zfs buildbot collect log reviewed john kennedy john.kennedy delphix.com reviewed brian behlendorf behlendorf1 llnl.gov signed giuseppe natale dinatale2 llnl.gov close 5293,,
3604,b60eac3d1a7b74e54ac8af9d533ff423c8ce9f8f,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-18 03:03:52 +0800,5278, fix coverity defect cid 150924 cid 150924 unchecked return value checked_return taskq_dispatch failure reference must dropped entry safely skipped case impossible existing implementation handled regardless reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5278,,
3605,f8e87e205c745c1e360230ac9c7631eb4632acfa,udd-O <rudd-o@rudd-o.com>, 2016-10-17 18:51:15 +0000,5287, properly use dracut cleanup hook order pool shutdown dracut start need determine whether pool remain hanging open system shuts case code clean pool using previous export work must invoked since dracut recent change make mount zfs.sh simply run root dataset already mounted must use cleanup hook order dracut shutdown cleanup important note code accomplish stated goal bug fixed http show_bug.cgi 1385432 bug impact zfs impact luks dmraid unmount poweroff fedora wide bug reviewed brian behlendorf behlendorf1 llnl.gov signed manuel amador rudd rudd rudd o.com close 5287,,
3606,fea33e4e5010e209a4d05fa3f59b7155859e1593,Ã¥kan Johansson <f96hajo@chalmers.se>, 2016-10-17 20:46:35 +0200,5259, pas status_cbdata_t friend first rename spare_cbdata_t spare_cb free using structure remove explicit parameter namewidth name_flags several function also use status_cbdata_t simplifies print_logs remove parameter verbose print_logs doe really mean verbose selected path selection done cb_print_config spare_cbdata_t reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed kan johansson f96hajo chalmers.se close 5259,,
3607,7e8a2d0b755ea67291d3f576069706e43abc5e31,udd-O <rudd-o@rudd-o.com>, 2016-10-16 03:30:53 +0000,5238, use export pool dirty device label reviewed brian behlendorf behlendorf1 llnl.gov signed manuel amador rudd rudd rudd o.com close 5228 close 5238,,
3608,dabb6f4fab38f5a729e8241425a5394ae7fd96d4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-14 16:11:16 -0700,5266, allow partition alias vdev_id.conf 5266 pool assembled partition vdev_id.conf alias work directory dev disk vdev created associated udev rule parsing vdev_id.conf never called extend logic match disk partition patch proposed sparksh reviewed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3859 close 5266,,
3609,b6ca6193f7678a9d8790f4319c982cc34b59f150,ao <cao.xuewen@zte.com.cn>, 2016-10-15 02:00:47 +0800,5237, fix coverity defect cid 147488 147490 cid 147488 type explicit null dereferenced cid 147490 type dereference null return value reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5237,,
3610,3691598e26a878df792480e0a97ea5c2bf012e49,kash Ayare <aayare@delphix.com>, 2016-04-19 21:07:54 -0700,5275, openzfs 6877 fails due missing zvol snapshot device file authored akash ayare aayare delphix.com reviewed john kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed luozhengzheng luo.zhengzheng zte.com.cn reviewed yuxiang guo.yong33 zte.com.cn ported brian behlendorf behlendorf1 llnl.gov bug caused due change functionality point zfs snapshot longer created associated device file used test resolve issue clone snapshot produced also create expected device file test behave historically openzfs issue http www.illumos.org issue 6877 openzfs commit http github.com openzfs openzfs commit 2200f27 close 5275 porting note hardcoded dev zvol rdsk changed zvol_rdevdir compatibility enabled linux runfile,,
3611,7305538de316c89e68f2c0977ea8dabe14d0f065,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-13 16:00:26 -0700,5275, enable test pas updated wait udev create expected linked dev zvol reviewed luozhengzheng luo.zhengzheng zte.com.cn reviewed yuxiang guo.yong33 zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5275,,
3612,9a875c6c5dd1e7cb0dad56d593a428d570ea5111,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-15 00:40:08 +0800,5267, fix coverity defect cid 150921 150927 cid 150921 unchecked return value checked_return cid 150927 unchecked return value checked_return reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5267,,
3613,21237e916713e1c53c6314cd86ed0742baf4bbbb,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-10-15 00:33:51 +0800,5269, enable quota_002_pos quota_004_pos quota_005_pos test command used print testfile size block environment variable block_size set command detected output block count number 8192 block rather change variable name added force return block additional advantage behaving consistently across platform additional detail gnu behavior regarding block size http www.gnu.org software coreutils manual html_node block size.html reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn close 5269,,
3614,5f014a0cc464a6bf91094c530f938dd7d85f26f3,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-14 09:17:56 -0700,5276, enable test enabled openzfs 6562 merged reviewed giuseppe natale dinatale2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 5276,,
3615,3dfb57a35e8cbaa7c424611235d669f3c575ada1,on Brady <don.brady@intel.com>, 2016-10-13 18:59:18 -0600,5258, openzfs 7090 zfs throttle allocation openzfs 7090 zfs throttle allocation authored george wilson george.wilson delphix.com reviewed alex reece alex delphix.com reviewed christopher siden delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed prakash surya prakash.surya delphix.com reviewed sebastien roy sebastien.roy delphix.com approved matthew ahrens mahrens delphix.com ported brady don.brady intel.com reviewed brian behlendorf behlendorf1 llnl.gov write issued issued block order zio pipeline drive asynchronously allocation stage result block allocated order would nice preserve much logical order possible addition allocation equally scattered across top level vdevs top level vdevs created equally pipeline able detect device capable handling allocation allocate block device allows dynamic allocation distribution device imbalanced fuller device tend slower empty device change includes new pool wide allocation queue would throttle order allocation zio pipeline queue would ordered issued time offset would provide initial amount allocation work top level vdev allocation logic utilizes reservation system reserve allocation performed allocator allocation successfully completed scheduled given top level vdev top level vdev maintains maximum number allocation handle pool wide reserved allocation top level distributed across top level vdevs metaslab group round robin across eligible metaslab group distribute work top level complete work receive additional work pool wide allocation queue allocation queue emptied openzfs issue http www.illumos.org issue 7090 openzfs commit http github.com openzfs openzfs commit 4756c3d7 close 5258 porting note maintained minimal stack zio_done preserve linux specific size added module params documentation updated use optimize avl cmp macro,,
3616,a85a90557dfc70e09475c156a376f6923a6c89f0,ao <cao.xuewen@zte.com.cn>, 2016-10-14 05:38:59 +0800,5252, fix coverity defect cid 147692 147693 147694 cid 147692 type uninitialized scalar variable cid 147693 type uninitialized scalar variable cid 147694 type uninitialized scalar variable reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5252,,
3617,3f93077b024d6e7658e655d3b897bcd3bb57504f,ao <cao.xuewen@zte.com.cn>, 2016-10-14 05:30:50 +0800,5255, fix coverity defect cid 150943 150938 cid 150943 type unintentional integer overflow cid 150938 type explicit null dereferenced reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5255,,
3618,05852b3467b44cdf88541ec67624cd1f5f2ded1d,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-14 05:25:05 +0800,5268, fix coverity defect cid 147571 147574 cid 147571 unintentional integer overflow cid 147574 unintentional integer overflow reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5268,,
3619,e8d3dcdfb15cdbd946407f6d8f0131e88ff05011,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-10-14 05:21:15 +0800,5273, enable test case pas without modification reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn close 5273,,
3620,45cb520b9d1b8200992f879d1ed6f472e94c6c6b,eLiXin <ge.lixin@zte.com.cn>, 2016-10-14 05:02:07 +0800,5253, fix coverity defect cid 147654 147690 coverity scan cid 147654 type copy fixed size buffer string operation may write past end fixed size destination buffer coverity scan cid 147690 type uninitialized scalar variable call zfs_prop_get first case use sourcetype without initialization reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5253,,
3621,1f51b525ff67e2c5cc26d968287bd9a7579acebd,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-13 04:24:03 +0800,5263, fix coverity defect cid 153394 coverity scan cid 153394 type string overflow reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5263,,
3622,ef78750d98f7389b05567c5abe95aacaece91736,om Caputi <tcaputi@datto.com>, 2016-10-12 15:52:30 -0400,5265, fix icp memleak introduced 4760 icp requires destructors crypto module added necessarily exist illumos assume module never unloaded kernel cleanup code missed 4760 merged resulting leak patch simply fix reviewed tony hutter hutter2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 4760 close 5265,,
3623,06cf4d989058a65f72b140d85e2c21effd3b3834,ao <cao.xuewen@zte.com.cn>, 2016-10-13 02:16:47 +0800,5245, fix coverity defect cid 147606 147609 coverity scan cid 147606 type resource leak coverity scan cid 147609 type resource leak reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5245,,
3624,af4db70f368d0e9c9ad90f0837a77e511a77b0a7,ao <cao.xuewen@zte.com.cn>, 2016-10-12 02:32:34 +0800,5264, fix coverity defect cid 147452 147447 147446 coverity scan cid 147452 type unchecked return value library coverity scan cid 147447 type unchecked return value library coverity scan cid 147446 type unchecked return value library reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5264,,
3625,fad5fb01adaf34602969dd3b3ffe250c2cf273cc,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-12 01:24:18 +0800,5262, fix memory leak recv_skip exception branch exit buf leaked reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5262,,
3626,1697d2dcf1735e6f2493abff1da01001637f14bf,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-11 09:56:28 -0700,4377, fix mount issue fix use free use usr bin env instead bin fix shell code injection flaw allow use grsecurity reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed stian ellingsen stian plaimi.net close 5250 close 4377,,
3627,52f1fe3cfd35b9414568046ad7456bfbc80a9354,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-11 09:32:31 -0700,5260, enable 5260 test case doe use nested pool safely enabled test case also passing without modification reviewed richard laager rlaager wiktel.com reviewed giuseppe natale dinatale2 llnl.gov reviewed chaoyuzhang zhang.chaoyu zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5260,,
3628,45c90a6348f227b1864846c75ba106711dc01a69,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-10-12 00:28:49 +0800,5254, enable enable test case passing reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn close 5254,,
3629,8c8cf8a2d8567d00a93963b1d59a7bdc8cede06a,eLiXin <ge.lixin@zte.com.cn>, 2016-10-11 06:30:22 +0800,5198, fix coverity defect cid 147639 array passed parameter degenerate pointer sizeof path always get return value instead string length want reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5198,,
3630,d33931a83a33db4034186dfda6dcdd294ace2c75,im Chase <tim@chase2k.com>, 2016-10-10 17:19:14 -0500,5236, write issue taskq dynamic much upstream compatibility bit performance gain illumos taskq implemention allow type dynamic fact enforces much assert performance taskq dynamic cause excessive contention tq_lock thread created destroyed see burst many thousand task short time particularly heavy high concurrency zvol write workload reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 5236,,
3631,57f16600b981f38585a956ae674488640424f711,om Caputi <tcaputi@datto.com>, 2016-10-10 14:34:57 -0400,5251, porting icp code missed 4760 4760 merged test added ensure new checksum working properly however functionality sha2 function ported resulting coverity defect code would unstable needed future patch simply port missing code fix defect process reviewed brian behlendorf behlendorf1 llnl.gov signed tom caputi tcaputi datto.com issue 4760 close 5251,,
3632,502291b32c311a6b5cfbb5d4717bf9d8d4901f3d,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-10-10 08:50:16 +0800, , enable enable test passing reviewed brian behlendorf behlendorf1 llnl.gov signed chaoyuzhang zhang.chaoyu zte.com.cn,,
3633,7515f8f63d1f001adb0e752f9a0f3550e16a6315,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-08 14:57:56 -0700,5241, fix file permission following new test case need execute permission set userquota userquota userquota upgrade upgrade setup.ksh upgrade cleanup.ksh following source file accidentally marked executable lib libzpool kernel.c lib libshare nfs.c lib libzfs lib libzfs libzfs_util.c test zfs test cmd test zfs test cmd dir_rd_update dir_rd_update.c cmd zed zed_exec.c module icp core kcf_sched.c module zfs dsl_pool.c module zfs arc.c module nvpair nvpair.c man man5 zfs module parameters.5 reviewed gelixin ge.lixin zte.com.cn reviewed andreas dilger andreas.dilger intel.com reviewed jinshan xiong jinshan.xiong intel.com signed brian behlendorf behlendorf1 llnl.gov close 5241,,
3634,5dc1ff29ec385bc58d76e76bb367d4391c6ee155,tian Ellingsen <stian@plaimi.net>, 2016-10-06 20:03:41 +0200, , use env mount call mount umount via usr bin env instead bin  change fix shell code injection flaw call bin passed mountpoint unescaped surrounded single quote mountpoint containing one single quote would cause command fail potentially execute arbitrary shell code change also provides compatibility grsecurity patch grsecurity allows use helper binary certain path usr bin allowed bin,,
3635,00b65db711021d60cc4df57f327d1443ea54a9e1,tian Ellingsen <stian@plaimi.net>, 2016-10-06 19:53:27 +0200, , fix use free,,
3636,690fe6479e43cb89d5c48ab8981409eef8940e49,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-07 21:02:24 -0700,5239, rename hole_birth tunable match openzfs openzfs decided imprecise incorrect name went rename zol keeping name pointing variable existing consumer reviewed giuseppe natale dinatale2 llnl.gov reviewed brian behlendorf behlendorf1 llnl.gov signed rich ercolani rincebrain gmail.com close 5239,,
3637,0d267566650d89bde8bd5ec4665749810d5bafc7,uxoko <tuxoko@gmail.com>, 2016-10-07 20:59:46 -0700,578, fix bound per_cpu spl_random_init iterating per_cpu value need use nr_cpus indicates number cpu supported kernel might initialize kernel decides possible use reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 578,,
3638,2529b3a80e1bf1713c0ecbedb246654a0968b4d2,uxoko <tuxoko@gmail.com>, 2016-10-07 20:53:58 -0700,577, linux 4.8 compat fix rw_read_held linux 4.8 starting torvalds linux 19c5d690e set owner read held instead leave null change condition rw_owner rwp rw_read_held reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close zfsonlinux zfs 5233 close 577,,
3639,4770aa0643a7fc62f81b2d60e4a46de4bfd1aa04,Ã¥kan Johansson <f96hajo@chalmers.se>, 2016-10-07 22:25:35 +0200,5162, fix vdev_open_child race updating vdev_parent vdev_nonrot updating vdev_parent vdev_nonrot vdev_open_child race vdev_open_child called many child task queue vdev_open_child called let latter update parent vdev_nonrot member update already done twice previously thus using logic end update vdev_nonrot either vdev_uses_zvols reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov signed haakan johansson f96hajo chalmers.se close 5162,,
3640,ccc92611b1bd0a78a72f553472a91ef1e83b06c5,ao <cao.xuewen@zte.com.cn>, 2016-10-08 04:19:43 +0800,5166, fix coverity defect cid 147565 147567 coverity scan cid 147567 type dereference null return value coverity scan cid 147566 type dereference null return value coverity scan cid 147565 type dereference null return value reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5166,,
3641,482cd9ee69e88710e9241fac220501ea4e101d19,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-07 12:44:12 -0700,5164, fletcher4 incremental update ctx calculation fix abi issue fletcher4 code add support incremental update add ztest method testing reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed gvozden neskovic neskovic gmail.com close 5164,,
3642,48f783de792727c26f43983155bac057c296e44d,OLi <loli10K@users.noreply.github.com>, 2016-10-07 19:05:06 +0200,4338, fix uninitialized variable zfs_receive_one variable never initialized property applied received snapshot additionally add script zfs test suite exercise zfs receive functionality user property reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 4338,,
3643,910a571578b0627bf9a1f2a99d89260132f3cba8,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-07 09:54:02 -0700,5230, add python style checking introduce make recipe flake8 enable python style checking ensure python script pas flake8 return error code arcstat.py dbufstat.py add test case python script reviewed richard laager rlaager wiktel.com reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed ian lee ianlee1521 gmail.com close 5230,,
3644,9b7a83cbb6cae54c127fde4c83e73505ad9c9e73,inshan Xiong <jinshan.xiong@intel.com>, 2016-09-21 13:49:47 -0700,4642, openzfs 6988 spa_sync spends half time using benchmark creates million file one txg observe thread running spa_sync cpu almost entire time syncing therefore performance bottleneck time spa_sync problem call every file modified created benchmark file owned user group million call modifying entry zap issue exists  keep memory map user space delta syncing finish iterate memory map modify zap per entry reduces number call number object modified number owner group modified file reduced time spent spa_sync file create benchmark second second upstream bug dlpx 44799 ported ned bass bass6 llnl.gov openzfs issue http www.illumos.org issue 6988 zfsonlinux issue http github.com zfsonlinux zfs issue 4642 openzfs commit unmerged porting note added curly brace around declaration cache quiet compiler warning handled userobj accounting way proposed path signed jinshan xiong jinshan.xiong intel.com,,
3645,1de321e6260f5b83eb943b6ce2166a3879f42df4,inshan Xiong <jinshan.xiong@intel.com>, 2016-10-04 11:46:10 -0700,3500, add support user group dnode accounting quota patch track dnode usage user group dmu_user zap zap entry dedicated dnode accounting key prefixed obj followed uid gid string format done block accounting new spa feature added dnode accounting well new zpl version spa feature must enabled pool upgrading zfs filesystem zfs version upgrade quotacheck executed marking dnode dirty zol bug http github.com zfsonlinux zfs issue 3500 signed jinshan xiong jinshan.xiong intel.com signed johann lombardi johann.lombardi intel.com,,
3646,70c7714dca90d01b83a29d15c67e65ff93d034d4,iuseppe Di Natale <dinatale2@llnl.gov>, 2016-10-04 15:13:42 -0700, , introduce test python script implement test ensure python script distributed zfs continue minimum run without error help prevent accidental breaking script signed giuseppe natale dinatale2 llnl.gov,,
3647,46bb91e19307982c2dc829e0d88b012c5f571b8c,iuseppe Di Natale <dinatale2@llnl.gov>, 2016-10-06 10:50:15 -0700, , introduce make recipe flake8 add make recipe enable developer easily run flake8 available help enforce good python coding standard signed giuseppe natale dinatale2 llnl.gov,,
3648,e169749fc0b87904cb48e8cca0c87501eb46ebac,iuseppe Di Natale <dinatale2@llnl.gov>, 2016-10-05 08:41:26 -0700, , correct exit code dbufstat arcstat script returning error code using argument exit error code signed giuseppe natale dinatale2 llnl.gov,,
3649,af322debaa11b22c4fe7b6bc8941e562694eabb2,arcel Huber <marcelhuberfoo@gmail.com>, 2016-10-06 19:31:42 +0200,5234, add icp kernel module dkm build added new section build icp module reviewed richard laager rlaager wiktel.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov close 5232 close 5234,,
3650,b0f578a8073da49dd0af879944a1b8e8dfd6db56,udd-O <rudd-o@rudd-o.com>, 2016-10-06 17:26:47 +0000,5204, use different technique detect whether mount zfs behavior dracut module wrong correct behavior initramfs run zfs mount completion two generator file exist however one missing indicates one three case kernel command line specify root zfs file system another dracut module already handling root mount via systemd mount zfs run nothing systemd run sysroot.mount begin mount zfs must run root parameter zfs auto run sysroot.mount mount zfs must run three case safe run zfs mount completion zfs mount must also delete determines run else dracut insane thing running literally definition insanity thing work expecting different result may great result race device appearing pool mounted mount zfs tasked full responsibility importing needed pool nowadays wrong behavior suppressed deduced self deletion correct thing looking dracut code fully aware dracut entirely ahem implementation defined tested wphilips reviewed brian behlendorf behlendorf1 llnl.gov signed manuel amador rudd rudd rudd o.com close 5157 close 5204,,
3651,9285493adfab4c3f33ffbdb63f16c8c65bdeb8f1,iuseppe Di Natale <dinatale2@llnl.gov>, 2016-10-06 10:11:06 -0700, , correct style test runner correct test runner.py pass flake8 python style checking signed giuseppe natale dinatale2 llnl.gov,,
3652,0bde1f7cb5e6d5db9b2e8afd66f49239a73e950b,iuseppe Di Natale <dinatale2@llnl.gov>, 2016-10-06 10:04:54 -0700, , correct style arcstat arc_summary fix arcstat arc_summary pas flake8 python code style check signed giuseppe natale dinatale2 llnl.gov,,
3653,64c688d7161daac0a799b11b40cb791f6fd264db,orddoskias <lorddoskias@gmail.com>, 2016-10-06 00:47:29 +0300,5223, refactor updating immutable appendonly flag move synchronization inode znode i_flgas pflags respective internal zfs function mostly mechanical work introduce functional change reviewed brian behlendorf behlendorf1 llnl.gov signed nikolay borisov n.borisov.lkml gmail.com issue 227 close 5223,,
3654,5bf703b8f381b6a8a89a2c251ba04dc9db59bcd6,vozden Neskovic <neskovic@gmail.com>, 2016-09-25 00:56:22 +0200, , fletcher4 save reload implementation context init compute fini method changed work internal context object necessary abi doe guarantee simd register preserved function call technically case linux kernel kfpu_begin kfpu_end break user space test kernel require disabling preemption using simd osx use scalar compute method place small buffer buffer size doe meet simd size alignment signed gvozden neskovic neskovic gmail.com,,
3655,37f520db2d19389deb2a68065391ae2b229c6b50,vozden Neskovic <neskovic@gmail.com>, 2016-09-23 03:52:29 +0200, , fletcher4 incremental using simd combine incrementally computed fletcher4 checksum checksum combined posteriori allowing parallel computation chunk implemented required algorithm general doe add change simd implementation new test ztest verifies incremental fletcher computation checksum combining matrix two buffer respective fletcher4 checksum cab combined checksum size buffer divided sizeof uint32_t cab cab cab cab note calculation overflow larger buffer thus internally calculation performed 8mib chunk signed gvozden neskovic neskovic gmail.com,,
3656,e2c292bbfc9f1133c3faa46ac88f794b64da7ce2,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-05 09:15:57 +0800,5209, fix coverity defect cid 150953 147603 147610 coverity scan cid 150953 type uninitialized scalar variable coverity scan cid 147603 type resource leak coverity scan cid 147610 type resource leak reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5209,,
3657,341dfdb3fd44048a3149e8376b2a0f94da56f01a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-04 17:26:36 -0700,576, fix initializer due change task_struct following warning occurs initializing global since structure exists address taken initialize manor sensitive internal change structure module spl spl generic.c error missing brace around initializer werror missing brace signed brian behlendorf behlendorf1 llnl.gov close 576,,
3658,5cc78dc81232bc474d25ccfcacb42d80d83c5310,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-04 11:20:38 -0700,4760, merge openzfs 4185 openzfs 4185 add new cryptographic checksum zfs sha 512 skein edon reviewed chunwei chen david.chen osnexus.com reviewed tom caputi tcaputi datto.com reviewed david quigley david.quigley intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 4760,,
3659,0c313d2f7451041e9cc952fe68fb500efef52fe1,vozden Neskovic <neskovic@gmail.com>, 2016-10-04 00:42:13 +0200,5215, zloop check core file generated zdb run gdb core file inspection correct program reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 5215,,
3660,7d75815dc950bdce3fd03cc40a3352d93c270e0f,ony Hutter <hutter2@llnl.gov>, 2016-08-15 19:34:02 -0400, , use 100mb pool checksum test part test wipe entire vdev create checksum error patch setup cleanup script scrub_mirror test create custom 100mb pool rather using entire device size passed zfs tests.sh default 2gb speed buildbot test also make possible someone use real disk say 1tb without test taking insanely long amount time,,
3661,125a406e24fbfaec29557e88746210b9f18f646c,lovezfs <ilovezfs@icloud.com>, 2016-01-28 04:51:19 -0800,6585, openzfs 6585 sha512 skein edonr unenforced dependency extensible dataset authored ilovezfs ilovezfs icloud.com reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com approved robert mustacchi joyent.com ported tony hutter hutter2 llnl.gov pool without extensible dataset feature flag already enabled creating dataset dedup set use one new checksum would result following panic soon data added panic cpu0 thread spa feature refcount 0x30 0x30 file common zfs zfeature.c line 390 inpsection showed feature fi_feature value spa_feature enum commit add extensible dataset dependency sha512 edonr skein feature flag prevents panic openzfs issue http www.illumos.org issue 6585 openzfs commit http github.com illumos illumos gate commit porting note code originally illumos actually ported openzfsonosx zfs b62a652,,
3662,4a2e9a17d5b81ae97b2a1b72437def9ed4996aca,lovezfs <ilovezfs@icloud.com>, 2016-01-25 23:41:11 -0800,6541, openzfs 6541 pool feature flag check defeated verify included dedup property value authored ilovezfs ilovezfs icloud.com reviewed matthew ahrens mahrens delphix.com reviewed richard laager rlaager wiktel.com approved robert mustacchi joyent.com ported tony hutter hutter2 llnl.gov expects zio_checksum enum raw property intval new checksum detected flag got way given pool without feature sha512 zfs create dedup sha512 naughty would fail expected since raw intval would indeed equal  however zfs create dedup sha512 verify naughty would incorrectly succeed would way raw intval would member enum would return result would never called first detected edonr since case verify required commit clear flag calling using verifies applied caller attempt prevent bug occurring future openzfs issue http www.illumos.org issue 6541 openzfs commit http github.com illumos illumos gate commit porting note code originally illumos actually ported openzfsonosx zfs bef06e1,,
3663,3c67d83a8afb391f20bc53d36a0cebea6897b3e2,ony Hutter <hutter2@llnl.gov>, 2016-06-15 15:47:05 -0700,4185, openzfs 4185 add new cryptographic checksum zfs sha 512 skein edon reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed richard lowe richlowe richlowe.net approved garrett amore garrett damore.org ported tony hutter hutter2 llnl.gov openzfs issue http www.illumos.org issue 4185 openzfs commit http github.com openzfs openzfs commit 45818ee porting note code ported top illumos crypto framework code http github.com zfsonlinux zfs pull 4329 commits list porting change includes copied module icp include sha2 sha2.h directly illumos removed module icp algs sha2 sha2.c pragma inline sha256init sha384init sha512init added ctx lib libzfs since take extra parameter added ctassert assert.h module zfs edonr_zfs.c added skein edonr libicp makefile.am added sha512.s generated sha512 x86_64.pl illumos updated ztest.c new fletcher_4_ args used null new ctx argument icp algs edonr removed defined __linux section include non existant endian.h skein_test.c renane null test vector array entry get around compiler warning fixup test file rename sys varargs.h varargs.h strings.h string.h remove note.h define note nop define u_longlong_t rename usr bin ksh bin ksh rename null test vector array entry get around compiler warning remove isa isainfo stuff add update makefiles add userspace header like stdio.h stdlib.h place sys types.h export_symbol _init _update _final ... routine icp module update script zfs2zol patch.sed include sys sha2.h sha2_impl.h add sha2.h include sys makefile.am add skein edonr dirs icp makefile add new checksum zpool_get.cfg move checksum switch block  fix wuninitialized error ppc fix stack frame size error arm32 unroll loop skein bit save stack space add memory barrier sha2.c bit save stack space add checksum sanity test add option write psudorandom data file_write utility,,
3664,dc03fa3092472c40bf1b6c7d7ea3170e3ffa9e38,vozden Neskovic <neskovic@gmail.com>, 2016-09-25 10:35:12 +0200, , fletcher4 init libzfs_init user fletcher4 method must call fletcher_4_init _fini benchmarking overhead called user space signed gvozden neskovic neskovic gmail.com,,
3665,62a65a654e15a1388bfb571727e69b46e7cc07ab,omain Dolbeau <romain.github@dolbeau.name>, 2016-10-03 18:44:00 +0200,4801, add parity generation rebuild using 128 bit neon aarch64 use framework established sse2 ssse3 avx2 however gcc using register aarch64 unlike sse avx2 rely register left alone asm statement instead neon code variable gcc extended asm syntax note since kernel explicitly disable vector register locally enabled explicitly use variable number define symbolic name gcc allow duplicate symbolic name number unique even code going used e.g case register using macro actually used variable declared otherwise build fails debug mode requires replacement xor syntax new zero macro doe thing without repeating argument perhaps someday machine efficient way zero register xor affect scalar sse2 ssse3 avx2 need new macro possible write faster implementation different scheduling different unrolling interleaving neon scalar ... various core one advantage fitting current state code thus likely easier review check merge difference aarch64 neon aarch64 neonx2 aarch64 neonx2 unroll function reviewed gvozden neskovic neskovic gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed romain dolbeau romain.dolbeau atos.net close 4801,,
3666,d1502e9ed05e0acf46172a4c9791d353f810ea8c,ichard Laager <rlaager@wiktel.com>, 2016-10-02 13:34:17 -0500,5213, correct error message error message said top level device could removed never true reported colin ian king colin.king canonical.com reviewed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 4506 close 5213,,
3667,aecdc70604df56d010f99f3ba1c0780d242ac357,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-10-03 02:24:54 +0800,5206, fix coverity defect cid 147448 147449 147450 147453 147454 coverity scan cid 147448 type unchecked return value coverity scan cid 147449 type unchecked return value coverity scan cid 147450 type unchecked return value coverity scan cid 147453 type unchecked return value coverity scan cid 147454 type unchecked return value reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5206,,
3668,6c2a66bfa816793fbdcede8854816d526c925574,rian Behlendorf <behlendorf1@llnl.gov>, 2016-10-01 18:33:01 -0700,574, fix aarch64 type warning explicitly cast type splat rwlock.c test case silence following warning warning format ldâ expects argument type long intâ argument type intâ signed brian behlendorf behlendorf1 llnl.gov close 574,,
3669,0ca5261be44abd9f6587792df1dc0c8ff73d2f7c,andychencan <chen.can2@zte.com.cn>, 2016-10-01 07:04:43 +0800,5134, fix null deref default case function must return avoid dereferencing prov_mech null reviewed tom caputi tcaputi datto.com reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed candychencan chen.can2 zte.com.cn close 5134,,
3670,0a8f18f9327a6275759393c5fc2f14664f172add,ao <cao.xuewen@zte.com.cn>, 2016-10-01 06:56:17 +0800,5168, fix coverity defect cid 147563 147560 coverity scan cid 147563 type dereference null return value coverity scan cid 147560 type dereference null return value reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5168,,
3671,470f12d631764d3706e2702762e9f3ae924cab43,eLiXin <ge.lixin@zte.com.cn>, 2016-10-01 06:47:57 +0800,5176, fix coverity defect cid 147531 147532 147533 147535 coverity scan cid 147531 type argument negative may copy data negative size coverity scan cid 147532 type resource leak may close negative coverity scan cid 147533 type resource leak may call pwrite64 negative size coverity scan cid 147535 type resource leak may call fdopen negative reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5176,,
3672,ed3ea30fb9341c860c94bf71e771f115ee4801ea,eLiXin <ge.lixin@zte.com.cn>, 2016-10-01 06:40:07 +0800,5185, fix coverity defect cid 147536 147537 147538 coverity scan cid 147536 type argument negative may write close negative coverity scan cid 147537 type argument negative may call dup2 negative coverity scan cid 147538 type argument negative may read fchown negative reviewed brian behlendorf behlendorf1 llnl.gov signed gelixin ge.lixin zte.com.cn close 5185,,
3673,292d573e70d254f5011f20f0c4882e928fac594b,vozden Neskovic <neskovic@gmail.com>, 2016-10-01 00:19:51 +0200,5190, raidz_test respect wall time timeout specified stop worker thread middle work unit reviewed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com issue 5180 close 5190,,
3674,2db28197feb44d102f55e49d8193444ec6f47d29,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-30 15:04:21 -0700,5203, fix cppcheck warning buf_init cppcheck 1.63 erroneously complains uninitialized value buf_init newer version cppcheck 1.72 handle correctly initialize value anyway silence warning reviewed richard elling richard.elling signed brian behlendorf behlendorf1 llnl.gov close 5203,,
3675,f4ce6d464c218eb4dc1fc94c8931a1e76b6742c5,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-30 12:12:53 -0700,5194, disable test case fail percentage time resulting automated testing failure disable offending test made reliable signed brian behlendorf behlendorf1 llnl.gov issue 5201 issue 5202 close 5194,,
3676,8047715ab40836a27b742a808d6c2a0496478bd4,ao <cao.xuewen@zte.com.cn>, 2016-10-01 01:49:16 +0800,5097, fix coverity defect cid 147707 coverity scan cid 147707 type double free reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5097,,
3677,ec009855c4a43c83837741f787ab26cb7f8edfdc,atthew Ahrens <mahrens@delphix.com>, 2016-09-29 21:01:50 -0700,5178, add script change file name upstreaming openzfs illumos add script change file name upstreaming openzfs illumos reviewed reviewed prashanth sreenivasa prashksp gmail.com reviewed brian behlendorf behlendorf1 llnl.gov signed matt ahrens mahrens delphix.com close 5178,,
3678,6ca636a1526ea08a7e0a972fa164b22815529d4b,vozden Neskovic <neskovic@gmail.com>, 2016-09-02 15:10:34 +0200,4883, avoid undefined shift overflow avoid calculating lh_prefix_len semantics method remain  assert lh_prefix_len zap_expand_leaf detect possibly problem issue 4883 signed gvozden neskovic neskovic gmail.com,,
3679,4ca9c1de129f8250c446c2355349e6b300d84586,vozden Neskovic <neskovic@gmail.com>, 2016-09-02 15:07:00 +0200,4883, explicit integer promotion bit shift operation explicitly promote variable correct type undefined behavior reported length int well defined standard issue 4883 signed gvozden neskovic neskovic gmail.com,,
3680,031d7c2fe6afaa78943bd0a563b91fc84ace42d7,vozden Neskovic <neskovic@gmail.com>, 2016-08-31 10:12:08 +0200,4883, fix shift exponent large undefined operation reported running ztest zloop compiled gcc error happens top level dnode indirection large enough offset value logically left shift operation would work bit shift semantics limitation uint64_t produce desired result issue 5059 4883 signed gvozden neskovic neskovic gmail.com,,
3681,0b78aeae927833de580e140375a15ea5ea9d924a,earBabyLiu <liu.huang@zte.com.cn>, 2016-09-30 04:33:09 +0800,5165, fix coverity defect cid 147443 147656 147655 147441 147653 coverity scan cid 147443 type buffer null terminated coverity scan cid 147656 type copy fixed size buffer coverity scan cid 147655 type copy fixed size buffer coverity scan cid 147441 type buffer null terminated coverity scan cid 147653 type copy fixed size buffer reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed liuhuang liu.huang zte.com.cn close 5165,,
3682,e8ac4557af67a46a2cb90bd7db4d426c0b358d51,saac Huang <he.huang@intel.com>, 2016-09-29 14:13:31 -0600,5181, explicit block device plugging submitting multiple bios without plugging default noop scheduler merge bios part large zio reviewed andreas dilger andreas.dilger intel.com reviewed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 5181,,
3683,8a1cf1a5608151635b67d89613e51427b177dab0,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-09-30 04:08:44 +0800,5154, fix verify zfs clone property display right macro zfs_maxproplen used function print_dataset differs platform set appropriately calculate expected number pass reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed yuxiang guo.yong33 zte.com.cn close 5154,,
3684,db6597c6ea17ecaeb46423003cc33a79df28b8d7,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-09-30 03:56:48 +0800,5183, enable onoffs_001_pos enable onoffs_001_pos pas reliably reviewed brian behlendorf behlendorf1 llnl.gov signed chaoyuzhang zhang.chaoyu zte.com.cn close 5183,,
3685,f25bc4938d8b2ac30fcbaaaf80d7867362b2095c,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-09-30 03:46:13 +0800,5167, fix verify space used multiple copy default blocksize linux 1024 due gnu ism setting expected blocksize resolve issue mentioned alternate solution would set posixly_correct reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed yuxiang guo.yong33 zte.com.cn close 5167,,
3686,9ec0403d6acd3ab362905b74c5db6aaf31c71f47,ao <cao.xuewen@zte.com.cn>, 2016-09-30 03:11:44 +0800,5143, fix coverity defect cid 147610 147608 147607 coverity scan cid 147610 type resource leak coverity scan cid 147608 type resource leak coverity scan cid 147607 type resource leak reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5143,,
3687,c9d61adbf8f422fe8d3bda45d9de9e82c757d0b0,ao <cao.xuewen@zte.com.cn>, 2016-09-30 03:06:14 +0800,5160, fix coverity defect 147658 147652 147651 coverity scan cid 147658 type copy fixed size buffer coverity scan cid 147652 type copy fixed size buffer coverity scan cid 147651 type copy fixed size buffer reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5160,,
3688,12fa7f3436fbd89f4d6b00c2c076405e7a21d62f,orddoskias <lorddoskias@gmail.com>, 2016-09-28 00:08:52 +0300,5158, refactor inode i_mode management refactor code way inode i_mode set time z_mode changed effect keeping sync without relying reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed nikolay borisov n.borisov.lkml gmail.com close 5158,,
3689,df7c4059cb9ace35dfcbe37c68d27614191d0ef0,andychencan <chen.can2@zte.com.cn>, 2016-09-28 02:49:45 +0800,5175, enable reviewed brian behlendorf behlendorf1 llnl.gov reviewed richard laager rlaager wiktel.com signed candychencan chen.can2 zte.com.cn close 5175,,
3690,680eada9b05415a8e564eb345f062f357d66f0f1,ao <cao.xuewen@zte.com.cn>, 2016-09-26 06:08:28 +0800,5161, fix coverity defect cid 147650 147649 147647 147646 coverity scan cid 147650 type copy fixed size buffer coverity scan cid 147649 type copy fixed size buffer coverity scan cid 147647 type copy fixed size buffer coverity scan cid 147646 type copy fixed size buffer reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5161,,
3691,92bc9278689fcce48183182f2488ead42a9eb790,ao <cao.xuewen@zte.com.cn>, 2016-09-24 06:43:46 +0800,5155, fix coverity defect cid 147602 147604 coverity scan cid 147604 type resource leak coverity scan cid 147602 type resource leak reason safe_malloc calcvs goto child free calcvs reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5155,,
3692,7571033285e2f83bf163e0cec31fd2b352beed30,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-23 10:55:10 -0700,5152, fix memory leak arc_state_fini arc_l2c_only arcs_list multilists must destroyed accidentally regressed d3c2ae1c reviewed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov issue 5151 close 5152,,
3693,d0662a1beb03033480dc0ac36e905b607e1e8eb8,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-09-24 00:10:50 +0800,5150, fix coverity defect cid 147613 147614 147616 147617 coverity scan cid 147617 type resource leak coverity scan cid 147616 type resource leak coverity scan cid 147614 type resource leak coverity scan cid 147613 type resource leak reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5150,,
3694,d5b897a6a1da2f031a708fd267b4de2cc9b7a6e2,uxoko <tuxoko@gmail.com>, 2016-09-22 19:09:16 -0700,5148, linux 4.7 compat fix deadlock lookup case insensitive must use d_add_ci dentry already real name otherwise d_add_ci find lookup hash wait causing deadlock tested satmandu reviewed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 5124 close 5141 close 5147 close 5148,,
3695,6635624020506a76cb79c65c7ff5a580c4685a0b,"ernelOfTruth aka. kOT, Gentoo user <kerneloftruth@gmail.com>", 2016-09-23 02:22:37 +0200,5110, openzfs 6111 zfs send ignore datasets created ending snapshot authored alex deiter alex.deiter gmail.com reviewed alex aizman alex.aizman nexenta.com reviewed alek pinchuk alek.pinchuk nexenta.com reviewed roman strashkin roman.strashkin nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed brian behlendorf behlendorf1 llnl.gov approved garrett amore garrett damore.org ported kerneloftruth kerneloftruth gmail.com openzfs issue http www.illumos.org issue 6111 openzfs commit http github.com illumos illumos gate commit 4a20c933 close 5110 porting note change upstream due following commits zfs send send property snapshot actually sent http github.com zfsonlinux zfs commit produce full snapshot list zfs send http github.com zfsonlinux zfs commit implement openzfs 2605 http github.com zfsonlinux zfs commit openzfs 6314 buffer overflow zfs_maxnamelen changed used since http github.com zfsonlinux zfs commit,,
3696,51907a31bc20a6697ec9a92a58c163a0c0df5de7,"ernelOfTruth aka. kOT, Gentoo user <kerneloftruth@gmail.com>", 2016-09-23 01:01:19 +0200,5112, openzfs 7230 add assertion dmu_send_impl verify stream includes begin end record authored matt krantz matt.krantz delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed brian behlendorf behlendorf1 llnl.gov approved robert mustacchi joyent.com ported kerneloftruth kerneloftruth gmail.com openzfs issue http www.illumos.org issue 7230 openzfs commit http github.com illumos illumos gate commit 12b90ee2 close 5112,,
3697,5df39c1e43e8d903ef4317e505cf85e64ef7e172,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-09-23 06:55:41 +0800,5130, fix coverity defect 1.coverity scan cid 147445 function zfs_do_send zfs_main.c buffer null terminated 2.coverity scan cid 147443 function zfs_do_bookmark zfs_main.c buffer null terminated 3.coverity scan cid 147660 function main zinject.c passing string argv unknown size strcpy way leak g_zfs fixed 4.coverity scan cid 147442 function make_disks zpool_vdev.c buffer null terminated 5.coverity scan cid 147661 function main dir_rd_update.c passing string cp1 unknown size strcpy reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5130,,
3698,3ec68a4414ececbae227a508bcc7e236c358e64c,ao <cao.xuewen@zte.com.cn>, 2016-09-23 06:28:34 +0800,5068, update zfs destroy test script update enable zfs_destroy_0 .ksh reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5068,,
3699,160987b5762946a2d03fb608149fdc2224ec55d1,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-09-22 09:09:00 +0800,5144, fix coverity defect coverity scan cid 147633 type sizeof portable coverity scan cid 147637 type sizeof portable coverity scan cid 147638 type sizeof portable coverity scan cid 147640 type sizeof portable particular case sizeof happens equal sizeof portable assumption reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5144,,
3700,84347be0986fc0ba99ebb577357328c1e3f50a68,andychencan <chen.can2@zte.com.cn>, 2016-09-22 04:51:53 +0800,5132, fix due linux vfs designed busy mount point destroyed even given force option update test case expect behavior running linux reviewed brian behlendorf behlendorf1 llnl.gov signed candychencan chen.can2 zte.com.cn close 5132,,
3701,66e93f5e4e1a6c573fc57f9f76eb09c6cffd085e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-21 13:45:21 -0700,5140, fix automatically generated release number building head branch release number automatically generated git describe using last tag branch base work last tag branch need predictable given current meta file logic accidentally broken rcx tag added branch update search version version release tag reviewed chris siebenmann cks.git01 cs.toronto.edu signed brian behlendorf behlendorf1 llnl.gov close 5105 close 5140,,
3702,8acfb2bcc118555fed2c0902c33d300a57630368,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-21 13:44:32 -0700,572, fix automatically generated release number building head branch release number automatically generated git describe using last tag branch base work last tag branch need predictable given current meta file logic accidentally broken rcx tag added branch update search version version release tag reviewed chris siebenmann cks.git01 cs.toronto.edu signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 5105 close 572,,
3703,da8d57488b6cf6078ccb53a6f559a2f64bba7264,saac Huang <he.huang@intel.com>, 2016-09-21 14:37:20 -0600,5146, reduce noise tracing log dbuf_read_impl return set_error err err add lot noise tracing log reviewed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 4430 close 5146,,
3704,70cc394d919fb576bc23d3dc2552a55a4c9d1c24,oritz Maxeiner <moritz@ucworks.org>, 2016-09-21 22:35:16 +0200,5138, fix regression broke dracut initramfs generation based upon ryao initial fix one also command instead type additionally applies fix close zfsonlinux zfs 4749 libgcc_s.so.1 included dracut automatically verified whether zpool link directly libgcc_s.so well change fallback option match libgcc_s.so tested ben jencks ben bjencks.net reviewed brian behlendorf behlendorf1 llnl.gov signed moritz maxeiner moritz ucworks.org close 5089 closed 5138,,
3705,609603a5d3356c2c69c926038eee6755e0183d27,earBabyLiu <liu.huang@zte.com.cn>, 2016-09-21 10:09:22 +0800,5131, fix coverity defect coverity scan cid 147504 type explicit null dereferenced reason passing null pointer reviewed brian behlendorf behlendorf1 llnl.gov signed bearbabyliu liu.huang zte.com.cn close 5131,,
3706,9911a9c4c9501112dcb2a64a5195820068676e62,egend-hua <liu.hua130@zte.com.cn>, 2016-09-21 09:36:24 +0800,5133, remove script printed file directory executing script zfs test.sh script symlink zfs script config.sh delete symlink directly source srcdir zfs script config.sh exists default.cfg.in reviewed brian behlendorf behlendorf1 llnl.gov signed legend hua liu.hua130 zte.com.cn close 5133,,
3707,884385a0b25dc36b622e5e427bf29281c3dbca06,ao <cao.xuewen@zte.com.cn>, 2016-09-21 08:45:45 +0800,5137, fix coverity defect fix coverity defect coverity scan cid 147623 type resource leak coverity scan cid 147622 type resource leak reason zpool_open zhp zpool_close zhp resource leak coverity scan cid 147621 type resource leak coverity scan cid 147620 type resource leak reason do_write do_read open file exception close delete unuse definition reviewed brian behlendorf behlendorf1 llnl.gov signed cao.xuewen cao.xuewen zte.com.cn close 5137,,
3708,d2a6f65cfb65ec3079f843542a156704264260be,andychencan <chen.can2@zte.com.cn>, 2016-09-21 02:27:15 +0800,5136, fix strncpy taskq_create assign copy length taskq_namelen name length equal taskq_namelen final tq_name preserved reviewed brian behlendorf behlendorf1 llnl.gov signed candychencan chen.can2 zte.com.cn close 5136,,
3709,792517389fad5c495a2738b61c2e9c65dedaaa9a,lashdd <eric.desrochers@canonical.com>, 2016-09-20 13:07:58 -0400,5029, change etc mtab proc self mount fix misleading error message dev zfs device missing must created etc mtab missing reviewed richard laager rlaager wiktel.com reviewed brian behlendorf behlendorf1 llnl.gov signed eric desrochers eric.desrochers canonical.com close 4680 close 5029,,
3710,25e2ab16be74cb37934e6736a1dc10fd50a00c56,im Chase <tim@chase2k.com>, 2016-09-19 11:28:35 -0500,5129, fix type adjustmnt erroneously changed unsigned compressed arc code ported result unsigned balanced metadata eviction logic would evict non metadata reviewed chris severance github.severach spamgourmet.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed david quigley david.quigley intel.com signed tim chase tim onlight.com close 5128 close 5129,,
3711,a34f7ab332a66c2857b212abb6082fcc0e762519,egend-hua <liu.hua130@zte.com.cn>, 2016-09-18 06:20:10 +0800,5101, fix use randfree_file.c flag introduced 2.6.38 kernel prevent breaking build older system wrap use conditional available return non zero status error message reviewed brian behlendorf behlendorf1 llnl.gov signed legend hua liu.hua130 zte.com.cn close 5101,,
3712,30f3f2e13c01bf1c881b2f3bb1236fca9f87a8e5,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-09-18 06:08:54 +0800,5103, fix coverity defect cid 147659 150952 147645 reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5103,,
3713,cb81c0c5887ffd6d862b13bca594d522e3f8673c,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-16 17:10:36 -0700,571," increase limit order support abd large block limit need increased 64k 16m block requires pointer stored 4096 page x86_64 system pointer byte requiring allocation 4096 32,768 byte addition small header structure push allocation default 32k warning threshold addition fix small bug max used instead min setting default ensures reasonable limit still set system page size larger reviewed david quigley david.quigley intel.com signed brian behlendorf behlendorf1 llnl.gov close 571",,
3714,9ea9e0b9a1f15b1e3b6b89bbc29d2a68df87ab3c,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-16 14:05:30 -0700,5099, enable module option default enable default known hole birth bug resolved relevant test case added reviewed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov issue 4809 close 5099,,
3715,f448f8cddd710686e9e17e3e53ac3917f2546e5d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-16 13:25:46 -0700,5120, disable test case test cause frequently trigger issue 4034. disable test case root cause issue addressed reviewed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 4034 close 5120,,
3716,49fbac3acecf384454aa8a6e9604a311848d864e,egend-hua <liu.hua130@zte.com.cn>, 2016-09-15 08:17:00 +0800,570, fix spl check.sh script update splat_cmd reference correct location splat utility reviewed brian behlendorf behlendorf1 llnl.gov signed liu hua liu.hua130 zte.com.cn close 570,,
3717,4329bd5b73e37073f01e848ccc9eb78a8fc1bcbc,uxoko <tuxoko@gmail.com>, 2016-09-14 16:59:31 -0700,569, cleanup cred.h remove code make sense reviewed brian behlendorf behlendorf llnl.gov signed chunwei chen david.chen osnexus.com close 569,,
3718,87f9371aefca857e7091dfdee3ec2d36b0de54c4,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-09-12 22:35:56 +0300,4916, simplify time handling logic zfs_settattr simplify time handling zfs_setattr mimicking logic setattr_copy linux kernel order achieve case zfs log replayed necessary unconditionally set ctime also use timespec_trunc function assigning value generic inode struct currently noop since zfs set s_time_gran however future rule precision might change reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed nikolay borisov n.borisov.lkml gmail.com close 4916,,
3719,9f5f0019ab3c03f59060d752b0be69290ec1abb9,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-08-01 23:02:25 +0300,4916, refactor generic inode time updating zfs provide custom update_time method meaning delegate job generic vfs layer time need set various time value inode marshalled disk moving relevant code zfs_node_alloc zfs_rezget result change longer necessary multiple version function nuke leave one reviewed brian behlendorf behlendorf1 llnl.gov reviewed chunwei chen david.chen osnexus.com signed nikolay borisov n.borisov.lkml gmail.com issue 227 close 4916,,
3720,524b4217b866b4b9385bc3c4e80acf4f77459a89,an Kimmel <dan.kimmel@delphix.com>, 2016-07-13 17:17:41 -0400,5078, dlpx 44733 combine arc_buf_clone authored dan kimmel dan.kimmel delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov ported david quigley david.quigley intel.com issue 5078,,
3721,c4434877ae449a637d0f302eca80fcaad354874f,an Kimmel <dan.kimmel@delphix.com>, 2016-06-12 22:47:35 -0400,5078, remove lint suppression dmu.h unnecessary dmu.h include spa.h authored dan kimmel dan.kimmel delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov ported david quigley david.quigley intel.com issue 5078,,
3722,c17bcf83da14f7f05641dfabb7160025a93641c1,om Caputi <tcaputi@datto.com>, 2016-09-12 21:34:19 -0400,5078, enable raw writes perform dedup verification reviewed dan kimmel dan.kimmel delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed david quigley david.quigley intel.com signed tom caputi tcaputi datto.com issue 5078,,
3723,2aa34383b9362200e19b22ca4a22ea97d70d9ddf,an Kimmel <dan.kimmel@delphix.com>, 2016-07-11 13:45:52 -0400,5078, dlpx 40252 integrate 476 compressed zfs send receive authored dan kimmel dan.kimmel delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov ported david quigley david.quigley intel.com issue 5078,,
3724,d3c2ae1c0806b183a315e3d43cc8018cfdca79b5,eorge Wilson <george.wilson@delphix.com>, 2016-06-02 00:04:53 -0400,5078, openzfs 6950 arc cache compressed data authored george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed tom caputi tcaputi datto.com reviewed brian behlendorf behlendorf1 llnl.gov ported david quigley david.quigley intel.com review cover reading writing compressed arc header sharing data arc_hdr_t arc_buf_t implementation new dbuf cache keep frequently access data uncompressed added new member arc hdr called b_pdata b_pdata always hang arc_buf_hdr_t hdr use point physical block dva physical block may may compressed compressed arc enabled block disk compressed b_pdata match block disk remain compressed memory block disk compressed neither b_pdata lastly compressed arc disabled b_pdata always uncompressed version disk block typically arc cache arc_buf_hdr_t aggressively evict arc_buf_t longer referenced mean arc primarily compressed block arc_buf_t considered overhead always uncompressed consumer read block first look see arc_buf_hdr_t cached hdr cached allocate new arc_buf_t decompress b_pdata content arc_buf_t b_data hdr already arc_buf_t allocate additional arc_buf_t bcopy uncompressed content first arc_buf_t new one writing compressed arc requires first discard b_pdata since physical block rewritten new data content passed via arc_buf_t uncompressed pipeline stage copy physical block content newly allocated b_pdata l2arc inuse also take advantage b_pdata l2arc always write content b_pdata l2arc mean compressed arc enabled l2arc block identical stored main data pool provides significant advantage since leverage checksum reading l2arc determine content valid compressed arc disabled must first transform read block look like physical block main data pool comparing checksum determining valid openzfs issue http www.illumos.org issue 6950 openzfs commit http github.com openzfs openzfs commit 7fc10f0 issue 5078,,
3725,b8eb3c4e3cbdf284087ea0eda58a2681ab3e8e11,aul Dagnelie <pcd@delphix.com>, 2016-09-02 21:07:15 -0700,5080, openzfs 7262 remove seq authored paul dagnelie pcd delphix.com reviewed john wren kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd omniti.com ported candychencan chen.can2 zte.com.cn openzfs issue http www.illumos.org issue 7262 openzfs commit http github.com illumos illumos gate commit b868f5d close 5080,,
3726,a425f5bff92f2db78f588543f49ce3abbd98a7f9,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-09-01 10:23:10 +0800,5056, fix memleak zfs_do_ zpool_do_ reviewed brian behlendorf behlendorf1 llnl.gov signed luozhengzheng luo.zhengzheng zte.com.cn close 5056,,
3727,e33da554c5daf0103b093f44ab5b90ad6c064c3f,oli10K <ezomori.nozomu@gmail.com>, 2016-09-07 19:34:20 +0200,5072, allow zvol bookmark listed recursively reviewed brian behlendorf behlendorf1 llnl.gov signed loli10k ezomori.nozomu gmail.com close 4503 close 5072,,
3728,43924bfeaa3e027b26af826ce2b7d6ed3288550c,im Chase <tim@onlight.com>, 2016-09-09 11:03:03 -0500,5081, remove redundant assignment arc_c several assignment arc_c effect ultimately initialized arc_c_max aligns zol better upstream code removed assignment time ago reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim onlight.com close 5081,,
3729,67d60824946ade6b1b71a98dbfbfca5949aee425,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-09-10 23:06:17 +0300,5087, refactor make build happy case sav sav_config null body function would skip iteration cache device cleanup old device however obvious since null check performed loop body old device cleaned refactor code obvious iteration l2cache device skipped fix following cppcheck warning module zfs spa.c 1552 error possible null pointer dereference newvdevs reviewed brian behlendorf behlendorf1 llnl.gov signed nikolay borisov n.borisov.lkml gmail.com close 5087,,
3730,20aa7a4e319ddf53e4e2dcc5fa9b3b1645e982e3,im Chase <tim@chase2k.com>, 2016-09-10 10:16:13 -0500,5086, free property name spa_strfree rather strfree since allocated spa_strdup freed spa_strfree proper length buffer freed reviewed richard yao ryao gentoo.org reviewed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 5082 close 5086,,
3731,bd296705d5b6a8d3fb03d93cb2e341ea04c3809f,iuhuang <liu.huang@zte.com.cn>, 2016-09-11 04:41:19 +0800,5085, fix memory leak check_file is_spare reviewed brian behlendorf behlendorf1 llnl.gov signed liuhuang liu.huang zte.com.cn close 5085,,
3732,89f67518e1c25a586ba2663210ec9791f12f1fba,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-09 11:01:22 -0700, , fix make lint target error detected make lint return non zero error code value chosen indicate warning fatal signed brian behlendorf behlendorf1 llnl.gov,,
3733,8516203d53380bc32f62827afd0c13d16337c4e6,oritz Maxeiner <moritz@ucworks.org>, 2016-09-01 18:29:31 +0200,5058, zfs dracut module assume systemd presence signed moritz maxeiner moritz ucworks.org reviewed brian behlendorf behlendorf1 llnl.gov close 4749 close 5058,,
3734,61c73494394fc9de9283b3fd4f00bcdf4bd300a7,oritz Maxeiner <moritz@ucworks.org>, 2016-09-01 18:15:10 +0200,5058, adapt genkernel fix zfsonlinux zfs 4749 zfs dracut module signed moritz maxeiner moritz ucworks.org reviewed brian behlendorf behlendorf1 llnl.gov close 4749 close 5058,,
3735,679d73e98bf5e51a02bc8d550253e4a3f15d58ca,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-08-03 21:26:15 +0000,4929, openzfs performance regression suite zfstest author john wren kennedy john.kennedy delphix.com reviewed prakash surya prakash.surya delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matt ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed brady don.brady intel.com reviewed richard elling richard.elling reviewed brian behlendorf behlendorf1 llnl.gov reviewed david quigley david.quigley intel.com approved richard lowe richlowe richlowe.net ported brady don.brady intel.com openzfs issue http www.illumos.org issue 6950 openzfs commit http github.com openzfs openzfs commit dcbf3bd6 delphix commit http github.com delphix delphix commit 978ed49 close 4929 zfs test suite performance regression test pulled openzfs via compressed arc featureand separated zfsonlinux separate pull request 4768 originally came 4903 delphix john kennedy expected usage disk sdb sdc sdd zfs tests.sh perf regression.run porting note added assertion setup script make sure required tool fio mpstat ... present config.json generation perf.shlib used arcstats binary instead dtrace query value perf data collection use zpool iostat lpvyl instead io.d dtrace script currently collecting zfs_read write latency stats mpstat iostat take different argument prefetch_io.sh placeholder arcstats instead dtrace build machine require fio mdadm sysstat pakage ymmv future work need way measure zfs_read zfs_write latency per pool need tool take two set output display graph difference bring additional regression test delphix,,
3736,7050a65d5c760aa039d195fe0b6773a20a81048b,ydney Vanda <sydney.m.vanda@intel.com>, 2016-07-22 15:07:04 +0000,5074, real disk partitioning enabled test suite linux using real device specify disk sdb sdc sdd opposed dev sdb zfs tests.sh otherwise error directory name disk name registering dev dev sdb test mpath disk mpatha mpathad mpathb expected usage disk sdb sdc sdd zfs tests.sh slice_prefix set loop device loop0p2 real device sdb2 either multipath device mpatha1 mpath1p1 instead default note kpartx partitioning currently supported patch partx may need disabled debian distribution function added determining test directory dev dev mapper well slice prefix determined exported mostly cfg file test group directory currently zpools created whole mpath device partitioned order fix test either revised use partition instead size constraint pool need created whole disk partition deleted device multipath device functionality added default_cleanup individual cleanup script non default cleanup method used max partition currently set account test thus far patch change generally encompassed is_linux construct signed sydney vanda sydney.m.vanda intel.com reviewed john salina john.salinas intel.com reviewed brian behlendorf behlendorf1 llnl.gov reviewed david quigley david.quigley intel.com close 4447 close 4964 close 5074,,
3737,4fd75d35af1f101ad2ab3e98220f4e52a24532f6,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-07 10:33:21 -0700, , tag 0.7.0 rc1 first release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3738,178acea364bc19da6cd30c6aaa7147f9a14fdb5a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-09-07 10:30:52 -0700, , tag 0.7.0 rc1 first release candidate signed brian behlendorf behlendorf1 llnl.gov,,
3739,d02ca379795a37b8541da5a1b37528f7130de1e6,on Brady <don.brady@intel.com>, 2016-08-31 15:46:58 -0600,4673, bring illumos zfs fma logic phase first phase brings zfs slm module zfs_mod.c handle auto operation response disk event disk event monitoring provided libudev generates expected payload schema zfs_mod work leverage recently added devid phys_path string vdev label signed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com signed tony hutter hutter2 llnl.gov close 4673,,
3740,0b284702b75aa712a7d1353b93e19d5b2c783f27,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-08-31 19:07:36 +0800,5055, delete unreferenced function signed luozhengzheng luo.zhengzheng zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5055,,
3741,ca8587a5172628e282b5b0ac1b2165b212e35601,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-08-31 09:32:02 +0800,5048, kmem_zalloc km_sleep never return null allocation never fail leaving error handling code give impression removed signed luozhengzheng luo.zhengzheng zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5048,,
3742,2d96d7aa56ea4a95206478474b2244be67a71853,ao <cao.xuewen@zte.com.cn>, 2016-08-31 18:35:52 +0800,5054, fix zfs_unmount leak always free mnpt memory failure zfs_unmount function function mountpoint const assigned signed cao.xuewen cao.xuewen zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5054,,
3743,ee36c709c3d5f7040e1bd11f5c75318aa03e789f,vozden Neskovic <neskovic@gmail.com>, 2016-08-27 20:12:53 +0200,5033, performance optimization avl tree comparator function perf 2.75x faster first 256bits ddt_key_t block checksum expected close random data hence average comparison need look first byte key reduce number conditional jump instruction result computed sign memcmp sign integer obtained computed efficiently synthetic performance evaluation original new algorithm random key 2.6ghz intel xeon cpu 2660 old 6.85789 new 2.49089 perf 2.8x faster compute result directly instead using conditionals perf speedup 1.1x 2.5x depending compiler version optimization level perf bcmp suitable comparator use use memcmp instead perf 2.8x faster perf 2.8x faster zil_bp_compare perf 2.8x faster mze_compare perf faster dbuf_compare perf faster compare spa_misc perf 2.8x faster perf 2.8x faster perf libzfs faster avl tree comparators perf guid_compare perf perf perf faster perf faster unique_compare perf faster vdev_cache _compare perf faster perf faster fuid _compare perf faster signed gvozden neskovic neskovic gmail.com signed richard elling richard.elling gmail.com signed brian behlendorf behlendorf1 llnl.gov close 5033,,
3744,9d69e9b268a1a0af3117871608fd3a87db1ce586,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-30 18:56:36 -0700,5047, fix zhack argument processing argument processing zhack make assumption getopt permute argv true gnu implementation getopt unless optstring prefixed case equivalent setting posixly_correct environment variable addition update usage optstrings reflect existing supported option signed brian behlendorf behlendorf1 llnl.gov signed liaoyuxiangqin guo.yong33 zte.com.cn close 5047,,
3745,3f10fe07d645166d7513448feedd8e3ef3111a12,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-30 18:50:11 -0700,5047, update older version blkid may promptly detect zfs label located partition order ensure test pass reliably always perform scan default search path signed brian behlendorf behlendorf1 llnl.gov signed liaoyuxiangqin guo.yong33 zte.com.cn close 4987 close 5047,,
3746,82ab6848ccff8fa42da56a2b5c74c767f8ad8fb0,ajo MÃ¶ller <dasjoe@gmail.com>, 2016-01-05 22:46:54 +0100,4170, fix zpool get guid freeing leaked source zpool get guid freeing leaked show source default prop editable changed code overwrite src stay zprop_src_none make src const avoid future mistake signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4170,,
3747,8fe453b6718c089fdd248f45fd0adee26bd42b66,ao <cao.xuewen@zte.com.cn>, 2016-08-23 10:12:41 +0800,5012, update script issue linux executing destroy error key issue illumos kernel treat case differently linux kernel illumos unmount destroy filesystem busy consumer get eio linux expected behavior prevent unmount destroy cause analysis create file system mount file system mntp mntp linux allow destroy mount content matter destroy parameter solution log_mustnot zfs destroy olddir destroy signed caoxuewen cao.xuewen zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5012,,
3748,43cb1c1212be430f1a94307ac8be1737ca564e58,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-08-22 10:27:06 +0800,5002, update script run successfully linux add linux.run file increase test scene signed chaoyuzhang zhang.chaoyu zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5002,,
3749,e623aea2ec11b4e3da8ddec50634be6e0be14eaf,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-20 14:28:51 -0700,5002, add log_must_ retry busy helper add helper automatically retry provided command error message match provided keyword provides easy way handle asynchronous nature zfs command example zfs destroy command may need retried case block device unexpected busy accomplished follows log_must_busy zfs destroy ... signed brian behlendorf behlendorf1 llnl.gov issue 5002,,
3750,2158b165ed02178a58540b55eca828d32977147c,iuhuang <liu.huang@zte.com.cn>, 2016-08-22 07:40:54 +0800,5000, update update reflect expected linux behavior is_linux wrapper used test case may used linux non linux platform signed liuhuang liu.huang zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5000,,
3751,8f50bafb04658911a1c2a6be3a969b726cc527c4,ao <cao.xuewen@zte.com.cn>, 2016-08-30 19:32:22 +0800,5042, delete unused declaration defined zfs 0.6.3. zfs 0.6.5.7 declaration remains even though implementation removed commit 278bee93 removed also unused signed caoxuewen cao.xuewen zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5042,,
3752,db707ad094431a8869123cb2389a4b768d5583a0,imon Klinkert <simon.klinkert@gmail.com>, 2016-08-30 15:03:05 +0200,5044, openzfs 6940 unlink directory quota user perspective would expect zfs always able remove file directory even quota exceeded authored simon klinkert simon.klinkert gmail.com reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6940 openzfs issue http www.illumos.org issue 6334 openzfs commit http github.com illumos illumos gate commit 9918916 close 5044,,
3753,755065f3dce1123eac03e2b25c81647026b8e49b,lexander Motin <mav@freebsd.org>, 2016-08-29 23:36:39 +0200,5040, openzfs 6322 zfs indirect block predictive prefetch quite time thinking possibility prefetch zfs indirection table sequential read writes recent change predictive prefetcher made much easier test zvol 16kb block size striped mirrored pool disk show almost double throughput sequential read almost tripple sequential rewrite read alike effect received increasing maximal prefetch distance though higher memory cost rewrite solution far authored alexander motin mav freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6322 openzfs commit http github.com illumos illumos gate commit cb92f413 close 5040 porting note change upstream module zfs dbuf.c int dbuf_read due commit 5f6d0b6 handle block pointer corrupt logical size difference upstream module zfs dmu_zfetch.c uint32_t unsigned int variable initialized beginning function void dmu_zfetch resemble order occurrence account c99 c11 mode error,,
3754,98ace739bd89b541af30d9d627ee42622fbbd861,atthew Ahrens <mahrens@delphix.com>, 2016-08-29 11:40:16 -0700,5039, openzfs 7086 ztest attempt embedded blockpointer dbuf_dirty need grab looking db_blkptr prevent changed syncing context reviewed prakash surya prakash.surya delphix.com reviewed george wilson george.wilson delphix.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7086 openzfs commit http github.com openzfs openzfs commit 98fa317 close 5039,,
3755,c40db193a5e503fffacf6d96a7dd48a0f1b36601,eLiXin <ge.lixin@zte.com.cn>, 2016-08-25 16:40:20 +0800,5022, fix build warning different gcc optimization level debug mode fix resolve warning reported compiling different gcc optimization level debug mode test tool gcc version 4.4.7 20120313 red hat 4.4.7 gcc linux version 2.6.32 red hat enterprise linux server release 6.1 santiago list warning cflags configure enable debug make module icp core kcf_sched.c function kcf_aop_doneâ module icp core kcf_sched.c 499 error fgâ may used uninitialized function module icp core kcf_sched.c 499 note fgâ declared cflags configure enable debug make function 1575 error nvl_lenâ may used uninitialized function signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5022,,
3756,67925abb5e12c003e959c87ddec19a3842fe5976,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-25 20:24:01 +0000,5024, fix user space implementation always passing relative time absolute time expected accidentally introduced commit 206971d2 replace two magic value corresponding preprocessor macro signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 5024,,
3757,9907cc1cc8c16fa2c7c03aa33264153ca2bdad6c,eLiXin <ge.lixin@zte.com.cn>, 2016-08-11 11:15:37 +0800,4957, add tunable arc evict meta buffer exceed arc_meta_limit investigating whether take special protection meta buffer tunable make arc_meta_limit adjustable different workload people set value insmod zfs.ko range check added guarantee suitable arc_meta_limit suggested tim chase changed percent style tunable well signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4957,,
3758,3e635ac15c093ad9f1ee263ac8e4b45917a1449c,im Chase <tim@chase2k.com>, 2016-08-21 08:22:32 -0500,4998, prevent reclaim case deep stack caused traversal require disabling reclaim send traverse thread also similar problem observed signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4912 close 4998,,
3759,23827a4ca1fbbc95d58398a2ff65dc73e4605ab8,eLiXin <ge.lixin@zte.com.cn>, 2016-08-22 11:20:22 +0800,5003, fix array bound read loop index come zfs_get_ncols cbp cb_columns actually read data cbp cb_colwidths mean array subscript array bound luckily cbp cb_colwidths always seems looped enough time exceed array bound far really secluded risk someday signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 5003,,
3760,9cc1844a1dab9cb62743f1f31eca73fcc6aaf0c4,vozden Neskovic <neskovic@gmail.com>, 2016-08-21 21:29:49 +0200,5001, linux compat grsecurity kernel api change module parameter set get method take const parameter grsecurity kernel v4.7.1 signed gvozden neskovic neskovic gmail.com signed jason zaman jason perfinion.com signed brian behlendorf behlendorf1 llnl.gov close 4997 close 5001,,
3761,2bce8049c3d782f4feb72493564754c0595606bf,atthew Ahrens <mahrens@delphix.com>, 2016-07-20 15:42:13 -0700,4972," openzfs 7004 dmu_tx_hold_zap doe dnode_hold object using benchmark thread creating million file directory machine cpu core observed poor performance noticed dmu_tx_hold_zap using cpu dnode_hold time object zap object held dmu_tx_hold_zap keep hold dnode_t entire time running dmu_tx_hold_t txh_dnode would nice use dnode_t already hand rather repeatedly calling dnode_hold need pas dnode_t intermediate call dmu_tx_hold_zap make making routine take dnode_t rather objset_t uint64_t object number particular following routine need analogous _by_dnode variant created  dmu_buf_hold zap_lookup zap_lookup_norm zap_count_write zap_lockdir zap_count_write improve performance benchmark described 100 30,000 file creation per second 60,000. improvement top provided working around object allocation issue peak performance 90,000 creation per second observed cpu adding cpu past decreased performance due lock contention cpu used dmu_tx_hold_zap reduced 340 cpu second cpu second sponsored intel corp signed matthew ahrens mahrens delphix.com signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7004 openzfs commit http github.com openzfs openzfs pull 109 close 4641 close 4972",,
3762,8bea9815048e4b1a85905e0b381865dedd266f2d,atthew Ahrens <mahrens@delphix.com>, 2016-07-20 15:39:55 -0700,4972, openzfs 7003 zap_lockdir tag hold zap_lockdir zap_unlockdir take void tag argument tag hold zap help diagnose programming error misuse hold zap sponsored intel corp signed matthew ahrens mahrens delphix.com signed pavel zakharov pavel.zakha gmail.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7003 openzfs commit http github.com openzfs openzfs pull 108 close 4972,,
3763,ee6370a7a48e416cbd44819d007fdaba120a328d,eary-cao <cao.xuewen@zte.com.cn>, 2016-08-06 15:08:51 +0800,4940, fix spa config generate memory leak spa_load_best function spa retry load succeeds spa recovery requested may leak spa_load_best function always free generated config assigned spa signed cao.xuewen cao.xuewen zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4940,,
3764,aeb9baa618beea1458ab3ab22cbc0f39213da6cf,eLiXin <ge.lixin@zte.com.cn>, 2016-08-19 14:50:21 +0800,567, fix handle null case enabled spl keep tracking buffer alloced kmem_alloc kmem_zalloc null pointer indicates track info spl passed ignore signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 4967 close 567,,
3765,5a5170884a6131c9f4346dd130d50a945d425853,haoyuZhang <zhang.chaoyu@zte.com.cn>, 2016-08-17 08:57:25 +0800,4978," update zfs_create_ 009,010 _neg.ksh cleanup new created test found true signed chaoyuzhang zhang.chaoyu zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4978",,
3766,32d41fb73a0d04a1d864e7602595b4c6e0d16c10,aul Dagnelie <pcd@delphix.com>, 2016-08-09 23:06:39 +0200,7176, openzfs 7176 yet another hole birth issue another bug long line hole birth related issue particular case discovered previous hole birth fix illumos bug 6513 commit bc77ba73 cover many case thought issue worked case hole punching writing zero large part file deal truncation writing beyond new end file problem dbuf_findbp return enoent block trying find beyond end file happens assume birth time lose information write new blkptrs teach dbuf_findbp look thing beyond current end beyond absolute end file authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com ported kerneloftruth kerneloftruth gmail.com signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 7176 openzfs commit http github.com openzfs openzfs pull 173 commits 8b9f3ad upstream bug dlpx 46009 porting note fix iso c90 mixed declaration error dbuf.c int nlevels epbs keep previous position initialization,,
3767,8658115c19f84b30d68402c32a33a2157c97e4f1,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-08-16 23:00:16 +0300,4977, fix do_link portion ctime test man page dirname dirname basename may modify content path may desirable pas copy calling one function fact linux using dirname actually change content passed parameter evident following failure running ctime test link root zfs mount root zfs mount link_file fix creating copy input parameter passing dirname thus compromising original parameter allowing creation hard link succeed signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4977,,
3768,d9eea113f8b8988a8ec4f9c73b717c7311322348,atthew Ahrens <mahrens@delphix.com>, 2016-07-20 22:50:26 -0700,4974, necessary zero struct workload make heavy use dbuf_hold noticed considerable amount time spent dbuf_hold_impl due call kmem_zalloc sizeof struct around 2kib structure used stack limit size stack dbuf_hold call recursively make recursive call hold parent dbuf requested dbuf found vast majority time parent grandparent indirect dbuf cached number recursive call low however initialize entire array every call dbuf_hold improve performance commit change dbuf_hold use kmem_alloc instead kmem_zalloc changed initialize member struct used observed performance improvement workload creates many file signed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 4974,,
3769,f0c26069bdf4ec675c840f0932fcfe7d4036d06f,vozden Neskovic <neskovic@gmail.com>, 2016-08-04 16:23:35 +0200,4883, zdb fencepost error erroneous access detected gcc zdb.c 2424 runtime error index 112 bound type uint64_t 112 fix increase histogram size accommodate possible size signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4934 issue 4883,,
3770,fc897b24b2efafccb5c9e915b81dc5f797673e72,vozden Neskovic <neskovic@gmail.com>, 2016-07-12 17:50:54 +0200,4952, rework fletcher_4 module benchmark memory block increased 128kib reflect real block size accurately measurement include three stage needed checksum generation i.e init compute fini inner loop repeated multiple time offset overhead time function fastest implementation selects native byteswap method independently benchmark support new function pointer init_byteswap fini_byteswap introduced implementation mutex lock replaced atomic variable save time benchmark executed userspace instead highest supported implementation used fastest default userspace selector still cycle byteswap method use incremental method finish calculation data size multiple vector stride currently 64b added special purpose method use buffer size known advance method doe enforce alignment buffer size ignore last size byte data buffer benchmark kstat changed match one vdev_raidz show throughput supported implementation native byteswap well code fastest running example running intel xeon cpu 2660 2.60ghz implementation native byteswap scalar 4768120823 3426105750 sse2 7947841777 4318964249 ssse3 7951922722 6112191941 avx2 13269714358 11043200912 fastest avx2 avx2 example running intel xeon phi cpu 7210 1.30ghz implementation native byteswap scalar 1291115967 1031555336 sse2 2539571138 1280970926 ssse3 2537778746 1080016762 avx2 4950749767 1078493449 avx512f 9581379998 4010029046 fastest avx512f avx512f signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4952,,
3771,70b258fc962fd40673b9a47574cb83d8438e7d94,vozden Neskovic <neskovic@gmail.com>, 2016-07-06 13:42:04 +0200,4952, fletcher4 implementation using avx512f instruction set algorithm run parallel sum consuming uint32_t element per loop iteration size alignment main fletcher4 method adjusted accordingly new implementation called avx512f note byteswap method implemented efficiently avx512bw hardware becomes available currently slower native method table show result full native fletcher4 calculation different buffer size fletcher4 4kb 16kb 64kb 128kb 256kb 1mb 16mb  scalar 1213 1228 1231 1231 1225 1200 1160 sse2 2374 2442 2459 2456 2462 2250 2220 avx2 4288 4753 4871 4893 4900 4050 3882 avx512f 5975 8445 9196 9221 9262 6307 5620 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4952,,
3772,32ffaa3de58981814342fe6d3556c03d41d121f8,vozden Neskovic <neskovic@gmail.com>, 2016-07-01 18:33:04 +0200,4952, add support avx 512 family instruction set patch add compiler runtime test user kernel following instruction set avx512f avx512cd avx512er avx512pf avx512bw avx512dq avx512vl avx512ifma avx512vbmi note linux support avx 512f foundation instruction set started linux v3.15 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4952,,
3773,6d836e6f8b358270d55a57ad8e8868c957f15bf3,ich Ercolani <rincebrain@gmail.com>, 2016-07-08 16:51:50 -0400,4833, add tunable ignore hole_birth add module option disables hole_birth optimization responsible several recent bug including issue 4050 original patch http gist.github.com pcd1193182 signed rich ercolani rincebrain gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4833,,
3774,e35c5a8265e791d5856ef24e567cde5879844dc5,eLiXin <ge.lixin@zte.com.cn>, 2016-08-09 17:49:51 +0800,4948, fix incorrect pool state import import raidz pool vdev bad label zpool status show right state dev wrong state pool pool state degraded online examine label vdev_validate spa_load_impl bad label detected propagate state parent chance propagate state following vdev_load failed load dtl pool raidz1 tolerate faulted disk lost last chance correct pool state propagate leaf vdev state parent label corrupted done elsewhere vdev_validate signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 4948,,
3775,fb390aafc8338c62115e611dbe1917bbe7435eef,ans Rosenfeld <hans.rosenfeld@nexenta.com>, 2016-07-27 15:29:15 -0700,5997, openzfs 5997 fru field set pool creation never updated authored han rosenfeld hans.rosenfeld nexenta.com reviewed dan field dan.fields nexenta.com reviewed josef sipek josef.sipek nexenta.com reviewed richard elling richard.elling gmail.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com signed brady don.brady intel.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 5997 openzfs commit http github.com openzfs openzfs commit 1437283 porting note addition openzfs change patch realigns event found openzfs event would logged sysevents illumos mapped sysevent class linux addition several subclass name changed match used openzfs case mean changed subclass script provided zol updated however user provide script following event need rename based new subclass name             ,,
3776,834f1e426caf4e752d2411be6f1c6138f479c96d,uozhengzheng <luo.zhengzheng@zte.com.cn>, 2016-08-12 17:41:28 +0800,4961, fix typo zil write handling comment following comment zil.h wr_copied know immediately committing transaction fsync fdsync allocate larger log record data copy data word signed luozhengzheng luo.zhengzheng zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4961,,
3777,a3600a106deead9ef33466ab95a87cb64e7b995b,ason Zaman <jason@perfinion.com>, 2016-08-11 23:59:03 +0800,4962, icp mark asm file noexec stack explicit note file obj file mark requiring executable stack unneeded cause issue hardened system info http wiki.gentoo.org wiki hardened signed jason zaman jason perfinion.com signed brian behlendorf behlendorf1 llnl.gov close 4947 close 4962,,
3778,a9947ce77175234fa4e26afc663a75041b37f8f0,ason Zaman <jason@perfinion.com>, 2016-08-10 00:56:56 +0800,4962, icp add no_const pax compat constify plugin automatically constify class type contain function pointer icp structs fail build enabled following error no_const attribute make plugin skip structs module icp spi kcf_spi.c function module icp spi kcf_spi.c error assignment read location dst_ops dst ops src ops  module icp spi kcf_spi.c note expansion macro src_ops dst_ops co_control_ops  signed jason zaman jason perfinion.com signed brian behlendorf behlendorf1 llnl.gov close 4947 close 4962,,
3779,6eb73b00466b4d72c9e0f0df8e000ef68b757c99,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-11 14:58:13 -0700,4959, reorder have_bio_rw_ check have_bio_rw_ ifdef must appear req_ ifdef bio_is_flush bio_is_discard macro linux 2.6.32 era kernel defined value have_bio_rw_ must used case resulted panic zconfig test signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4951 close 4959,,
3780,169ab07cc8b7417c4a93b4496ef4a11e049b5cdc,atthew Ahrens <mahrens@delphix.com>, 2016-01-13 10:45:08 -0800,7263, openzfs 7263 deeply nested nvlist overflow stack nvlist_pack nvlist_unpack implemented recursively cause stack overflow deeply nested nvlist i.e nvlist contains nvlist contains nvlist ... unprivileged user pas nvlist kernel via certain ioctls dev zfs kernel unpack without additional permission checking validation therefore unprivileged user cause kernel stack overflow panic ideally function would implemented non recursively quick fix patch limit depth recursion return error attempting pack unpack deeply nested nvlist signed adam leventhal ahl delphix.com signed george wilson george.wilson delphix.com signed brian behlendorf behlendorf1 llnl.gov ported prakash surya prakash.surya delphix.com openzfs issue http www.illumos.org issue 7263 openzfs commit http github.com openzfs openzfs commit 0511d6d ,,
3781,b320dd91a9262633200c9570442659989a677f0c,hunwei Chen <david.chen@osnexus.com>, 2016-08-10 16:28:58 -0700,4956, fix infinite loop zdb flag also print decompress progress stderr pollute raw output flag signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4956,,
3782,d9c97ec08b995f1a36657accc4bbc6057645a72c,hen Haiquan <oc@yunify.com>, 2016-08-04 23:57:35 +0800,4935, use file_dentry file_inode wrapper fix bug due kernel change torvalds linux 4bacc9c9234c overlayfs make f_path always point overlay f_inode underlay problem crash system use zfs layer overlayfs signed chen haiquan yunify.com signed brian behlendorf behlendorf1 llnl.gov close 4914 close 4935,,
3783,d5884c3453c5de5892eaae672c5186ed02846113,eLiXin <ge.lixin@zte.com.cn>, 2016-08-08 16:00:08 +0800,4941, fix indefinite article indefinite article nvlist nvlist nvlist comment stay strict filesystem signed gelixin ge.lixin zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4941,,
3784,e5fe9ddeec55e3f7f8348330b3d414244f2d0670,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-09 11:53:48 -0700,4951, remove custom root pool import code non linux openzfs implementation require additional support used root pool code simply removed avoid confusion improve readability signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4951,,
3785,cf41432c70c2df282f0f4ed7647154f3f4972d34,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-09 11:22:30 -0700,4951, linux 4.8 compat fix removal bio bi_rw member user bio bi_rw replaced compatibility wrapper allows kernel specific logic abstracted away supported case documented wrapper updated interface follows void struct request_queue bool bool boolean_t bio_is_flush struct bio boolean_t bio_is_fua struct bio boolean_t bio_is_discard struct bio boolean_t struct bio  signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4951,,
3786,689f093ebcfa0d57895495050d2b470ed2bef52e,vozden Neskovic <neskovic@gmail.com>, 2016-07-26 21:08:51 +0200,4937, build user space different gcc optimization level fix resolve warning reported compiling user space library different gcc optimization level tested gcc version 4.9.2 debian 6.1.1 fedora patch enables use following opt level ofast list warning gcc 4.9.2 3726 error clp may used uninitialized function werror maybe uninitialized gcc 4.9.2 fs_fletcher.c 323 error idx may used uninitialized function werror maybe uninitialized dsl_dataset.c 1290 error atp may used uninitialized function werror maybe uninitialized gcc 4.9.2 ofast u8_textprep.c 1310 error 3ul may used uninitialized function werror maybe uninitialized u8_textprep.c 177 error u8t 0ul may used uninitialized function werror maybe uninitialized dsl_dataset.c 2089 error hdsâ may used uninitialized function werror maybe uninitialized dsl_dataset.c 3216 error dsâ may used uninitialized function werror maybe uninitialized dsl_dataset.c 1591 error dsâ may used uninitialized function werror maybe uninitialized dsl_dataset.c 3341 error dsâ may used uninitialized function werror maybe uninitialized vdev_raidz.c 1153 error dcount may used uninitialized function werror maybe uninitialized vdev_raidz.c 1167 error dst may used uninitialized function werror maybe uninitialized kernel.c 1005 error residâ may used uninitialized function werror maybe uninitialized 2826 error valâ may used uninitialized function werror maybe uninitialized 3056 error valâ may used uninitialized function werror maybe uninitialized 1584 error valâ may used uninitialized function werror maybe uninitialized 3056 error valâ may used uninitialized function werror maybe uninitialized 1792 error valâ may used uninitialized function werror maybe uninitialized 3986 error valâ may used uninitialized function werror maybe uninitialized gcc 6.1.1 resolved 4907 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4937,,
3787,afb6c031e87d511abd9f0f4ec629ab1972490269,hunwei Chen <david.chen@osnexus.com>, 2016-08-08 17:26:21 -0700,4946, linux 4.7 compat fix zpl_get_acl return invalid acl pointer starting linux 4.7 get_acl set acl cache pointer temporary sentinel value calling i_op get_acl therefore compare acl_not_cached return since linux 3.14 get_acl already check cache disable zpl_get_acl linux 4.7 also doe set_cached_acl disable zpl_get_acl signed chunwei chen david.chen osnexus.com signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4944 close 4946,,
3788,88c4c7a0671afef9016446e0132ba86622929092,eLiXin <ge.lixin@zte.com.cn>, 2016-08-02 10:58:42 +0800,4919, fix call zfs_get_name invalid parameter zfs_get_name expects parameter type zfs_handle_t zhp get invalid parameter type zfs_handle_t zhp actually may trigger coredump called working normally far caller give datasets type compared mountpoint return luckily signed gelixin ge.lixin zte.com.cn signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4919,,
3789,4b908d32200b6e5c7b5115322b6c8d25e770daa0,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-02 11:11:45 -0700,4922, linux 4.8 compat posix_acl_valid posix_acl_valid function updated require user namespace filesystem caller normally provide user_ns super block associcated acl wrapper added purpose see http github.com torvalds linux commit 0d4d717f complete detail signed brian behlendorf behlendorf1 llnl.gov signed nikolay borisov n.borisov.lkml gmail.com signed chunwei chen david.chen osnexus.com close 4922,,
3790,e85a6396b0f7f3cb5a76cf88e47fc1334f9162b7,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-02 10:50:52 -0700,4922, retire remove configure check supported kernel provide functionality signed brian behlendorf behlendorf1 llnl.gov signed nikolay borisov n.borisov.lkml gmail.com signed chunwei chen david.chen osnexus.com close 4922,,
3791,64aefee1b847b747147016c039f5b0e276a9e1b7,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-08-04 00:31:08 +0300,4928, fix interaction userns uid gid uid gid change handled zfs_setattr want actually adjust user passed uid kuid write disk trace point use i_uid member without translation since already performed use kuid signed nikolay borisov n.borisov.lkml gmail.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4928,,
3792,938cfeb0f27303721081223816d4f251ffeb1767,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-08-03 20:19:04 +0300,4928, linux 4.8 compat new s_user_ns member struct super_block kernel 4.8 paved way enabling mounting file system inside non init user namespace facilitate s_user_ns member added holding userns filesystem instance mounted enables uid gid translation relative particular username space default init_user_ns signed nikolay borisov n.borisov.lkml gmail.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4928,,
3793,cf2731e65b2015988b2cae7970886279e11b013f,aurav Kumar <gaurav.kumar@nutanix.com>, 2016-07-27 14:27:31 -0700,4893, arc_meta_limit updated arc_max changed arc_max increased arc_meta_limit updated new arc_c_max value done originally preserve existing maximum value turned counter intuitive user fix change behavior non default picked later arc tuning function signed gaurav kumar gaurav.kumar nutanix.com signed brian behlendorf behlendorf1 llnl.gov close 4893,,
3794,f3c9cac14355ba45b4ceced4df32c18bfc2518ed,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-01 17:42:04 +0000,4907, fix gcc warray bound check dump_object zdb gcc 6.1.1 20160621 red hat 6.1.1 array bound warning detected zdb dump_object function analysis correct difficult interpret implemented macro rework zdb_ot_name function remove case detected gcc side effect dmu_ot_is_valid macro zdb.c function dump_objectâ zdb.c 1931 288 error array subscript outside array bound werror array bound signed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 4907,,
3795,efe7978d89f84f08afd9a3bf84a293773b66632d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-29 17:10:11 -0700,4907, fix gcc self comparison warning gcc 6.1.1 20160621 red hat 6.1.1 self comparison detected gcc metaslab_alloc resolve warning passing physical size bp_set_birth done caller module zfs metaslab.c function metaslab_allocâ module zfs metaslab.c 2575 184 error self comparison always evaluates true werror tautological compare signed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com issue 4907,,
3796,5b1bc1a1d8ae284f834f239ab0309c6ce96ab74f,hunwei Chen <david.chen@osnexus.com>, 2016-07-29 16:35:33 -0700,4908, set proper dependency string replacement target lot string replacement target dependency incorrect dependency setup proper dependency pattern rule signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4908,,
3797,b64e02e5805e84dcaa4b0820b555b9f90aa5afea,rian Behlendorf <behlendorf1@llnl.gov>, 2016-08-01 18:00:47 +0000,4915, add make lint target add make lint target map cppcheck target shellcheck target run cppcheck installed allows make lint build check incrementally added automated testing distribution provide cppcheck signed brian behlendorf behlendorf1 llnl.gov close 4915,,
3798,4eb0db42d30b2ea8bed018f2227ebafd3ce35c9c,ony Hutter <hutter2@llnl.gov>, 2016-08-01 17:32:18 -0700,4917, fix possible vdev stats array overflow fix possible vdev statistic array overflow zios complete signed tony hutter hutter2 llnl.gov signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4883 close 4917,,
3799,e24e62a948e1519fb4c1bfc40d9d51e36fbbe63e,iaoyuxiangqin <guo.yong33@zte.com.cn>, 2016-07-30 11:03:01 +0800,4910, fix memory leak function add_config config hot spare l2cache device leak memory function add_config start function dealing config belongs hot spare currently use l2cache device config freed signed liaoyuxiangqin guo.yong33 zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4910,,
3800,576865be20ce4a0d4365cd62a589edec070fe08c,im Chase <tim@chase2k.com>, 2016-08-01 08:19:19 -0500,566, fix test kernel prior 4.6 recent 4.x kernel prior 4.6 require include spinlock.h order get definition used define_mutex signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 566,,
3801,4b9dddf43084306de34394d666b874b912ca42ca,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-07-29 18:48:33 +0300,565, add handling kernel 4.7 kernel 4.7 added option trim unused exported symbol testing showed problematic since pde_data function considered unused trimmed turn caused respective test spl configure stage falsely detect pde_data defined turn caused build failure later handle situation adding detection whether enabled refuse build kernel enabled signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 565,,
3802,fb833883872ba17f1f04f99741b6f47cf404c340,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-07-29 18:48:04 +0300,565, add gitignore entry spl .o.d file signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 565,,
3803,df053d67a9c07a9763a4c04468083644eb9aa234,vozden Neskovic <neskovic@gmail.com>, 2016-07-28 22:10:05 +0200,4896, ztest memory leak reported leak reported using gcc 6.1.0 direct leak 4097 byte object allocated 0x414f73 process_options cmd ztest ztest.c 721 direct leak 5440 byte object allocated 0x41bfd5 umem_alloc lib libspl include umem.h 0x41bfd5 cmd ztest ztest.c 4659 0x4163a8 ztest_execute cmd ztest ztest.c 5907 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4896,,
3804,78867a0a0a47eafbf4d02ddb12a84ef86cd7a07a,vozden Neskovic <neskovic@gmail.com>, 2016-07-28 22:27:56 +0200,4897, libzfs_import.c uninitialized pointer read read uninitialized pointer target coverity 150966 found static analysis coverityscan 0.8.5 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4897,,
3805,b264d9b3e5b2b5b8eaeef7b34eb7b1b6caf4e4fb,olin Ian King <colin.king@canonical.com>, 2016-07-29 12:40:30 +0100,4900, libzfs fix missing va_end call enospc edquot case switch statement function enospc edquot case return immediately unlike case switch doe perform va_end call perform break end calling va_end rather returning immediately found static analysis coverityscan 0.8.5 signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 4900,,
3806,ba2fe6affb98543d8c3786fb47e49653391a3405,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-07-29 20:02:59 +0300,4906, move assignment i_blkbits field currently i_blkbits always set every time called since value never change move assignment inode creation time signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4906,,
3807,e334e828a6d8bbcff51b61acb0f7b4d238a28089,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-07-29 19:43:23 +0300,4905, unify license icp module rest zfs newly added icp module hardcoded value cddl license however local development one might want change something else order facilitate compiling lock debugging enabled kernel module zfs use zfs_meta_licnse string replaced value held meta file one modify value meta file rerun configure module license changed change icp module license string fall paradigm signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4905,,
3808,9f3d1407dcfa7a8548b17d36ef501dd72a215560,eary-cao <cao.xuewen@zte.com.cn>, 2016-07-27 14:58:17 +0800,4872, fix null dereference function tsd_set function called null cause run case passed value null normally entirely safe strfree map directly kfree may passed null however since alternate implementation strfree may handle gracefully add check null observed embedded linux 2.6.32.41 kernel running automated testing running zfs test suite signed caoxuewen cao.xuewen zte.com.cn signed brian behlendorf behlendorf1 llnl.gov close 4872,,
3809,3b86aeb2952c91aeb8ed0ebf9d5e43119fa537a0,hunwei Chen <david.chen@osnexus.com>, 2016-07-27 17:55:32 +0000,4899, linux 4.8 compat req_op new req_op_ definition introduced separate write read discard operation flag included changing encoding bi_rw place req_op_ high order bit stuff low order bit encoding done new helper function complete detail refer http github.com torvalds linux commit f215082 http github.com torvalds linux commit 4e1b2d5 signed tim chase tim chase2k.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4892 close 4899,,
3810,76e5f6fe10ab8c9c8ae13e4c33ecb68f3d0ce5dc,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-27 18:06:17 +0000,4899, linux 4.8 compat req_preflush req_flush flag renamed req_preflush avoid confusion req_op_flush see http github.com torvalds linux commit 28a8f0d3 complete detail signed tim chase tim chase2k.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4892 issue 4899,,
3811,bbb1b6cea75ff8ff27742ce778664ddeec371a01,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-27 02:23:53 +0000,4899, linux 4.8 compat submit_bio argument removed submit_bio submit_bio_wait caller expected set bio bi_rw instead passing see http github.com torvalds linux commit 4e49ea4a complete detail signed tim chase tim chase2k.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4892 issue 4899,,
3812,b7c7008ba28ca926fbda929aec52f3761d72cffe,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-26 23:37:46 +0000,563, linux 4.8 compat rw_semaphore atomic_long_t count non rwsem spinlocks count member changed long atomic_long_t type configure check added detect change along new version function rwsem_count macro see http github.com torvalds linux commit 8ee62b18 complete detail signed tim chase tim chase2k.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 563,,
3813,f26b4b3c8a0db1b215caeeb80868381bc324d449,ichard Yao <richard.yao@clusterhq.com>, 2016-02-17 16:16:25 -0500,4333, txg visibility code execute tc_open_lock memory allocation locking potentially block txg_hold_open arbitrarily long period time signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 4333,,
3814,fcf64f45d9bf4270f6c6bfe9df6ef253a7bfc766,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-29 13:59:51 -0700,4479, fix zdb crash device problem native device userland linux using o_direct buffer must aligned fail einval causing zdb others coredump since userland probably need optimized buffer cache force alignment everything signed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com close 4479,,
3815,a0cacb760a0d9de2be3f2f569cb0febd77d7064a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-26 11:15:46 -0700,4882, enable history test case updated test case run tree original test case assumed usr sbin zfs usr sbin zpool valid location utility modification already made failing test case history_010_pos result linux suffix appended checking long output test case signed brian behlendorf behlendorf1 llnl.gov close 4882,,
3816,bf18fd89f983e86e070cdda2c6ac6d9db4f48cc2,olin Ian King <colin.king@canonical.com>, 2016-07-27 09:26:38 +0100,4889, void integer overflow computation refquota_slack dmu_max_access cast uint64_t otherwise multiplication dmu_max_access bit may lead overflow currently dmu_max_access 1024 1024 lead overflow found static analysis coverityscan 0.8.5 cid 150942 unintentional integer overflow  potentially overflowing expression 67108864 type int bit signed evaluated using bit arithmetic used context expects expression type uint64_t bit unsigned signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 4889,,
3817,8a39abaafad51861daf197b0e9809dfcf77fd3cf,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-23 15:25:17 -0700,4794, multi thread zpool import blkid commit 519129f added support multi thread zpool import case block device scanned dev commit generalizes logic applies case device name acquired libblkid  function create avl tree containing device name entry tree dispatched taskq function zpool_open_func validates device opening reading label may result additional entry added tree device path verified largely upstream openzfs code behaves due significant difference non linux code dropped readability additionally code make use taskqs kmutexs normally available command line tool special care taken allow use import function signed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 4794,,
3818,a64f903b06e9135c07f20bc6f8196e2879d2cf57,vozden Neskovic <neskovic@gmail.com>, 2016-07-19 18:24:24 +0200,1392, fix issue found cppcheck tool patch fix small number error false positive reported cppcheck static analysis tool cppcheck 1.72 cppcheck force quiet cmd zfs zfs_main.c 4444 error possible null pointer dereference who_perm cmd zfs zfs_main.c 4445 error possible null pointer dereference who_perm cmd zfs zfs_main.c 4446 error possible null pointer dereference who_perm cmd zpool zpool_iter.c 317 error uninitialized variable nvroot cmd zpool zpool_vdev.c 1526 error memory leak child lib libefi rdwr_efi.c 1118 error memory leak efi_label lib libuutil uu_misc.c 207 error va_list args opened closed va_end lib libzfs libzfs_import.c 1554 error dangerous usage diskname strncpy always null terminate lib libzfs 3279 error dereferencing deallocated released test zfs test cmd file_write file_write.c 154 error possible null pointer dereference operation test zfs test cmd randfree_file randfree_file.c error memory leak buf cmd zinject zinject.c 1068 error uninitialized variable dataset module icp sha2_mod.c 698 error uninitialized variable signed gvozden neskovic neskovic gmail.com signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 1392,,
3819,25458cbef9e59ef9ee6a7e729ab2522ed308f88f,im Chase <tim@chase2k.com>, 2016-07-13 07:42:40 -0500,4858, limit amount dnode metadata arc metadata intensive workload cause arc become permanently filled dnode_t object pinned vfs layer subsequent data intensive workload may benefit potential arc arc_c_max arc_meta_limit order help track metadata usage precisely other_size metadata arcstat replaced dbuf_size dnode_size bonus_size new tunable default defines minimum number byte desirable consumed dnodes attempt evict non metadata trigger async prune task space used dnodes exceeds limit new tunable specifies amount excess dnode space attempted pruned percentage amount exceeded default try unpin dnodes problem dnode metadata pinning observed following testing procedure example zfs_arc_max set 4gib create large number small file arc_meta_used exceeds arc_meta_limit 3gib default tuning arc_prune start increasing create 3gib file observe arc_mata_used still around 3gib repeatedly read 3gib file observe arc_meta_limit continue stay around 3gib modification space 3gib file gradually made available subsequent demand arc made previous behavior restored setting value  signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 4345 issue 4512 issue 4773 close 4858,,
3820,e6603b7c1fc7ac01f8891b11df34d943812153e9,im Chase <tim@chase2k.com>, 2016-07-08 10:33:01 -0500,4858, fix sync behavior disk vdevs prior b39c22b first generally available 0.6.5 release b39c22b zol never actually submitted synchronous read write request linux block layer mean function always returned false therefore completion never actually used b39c22b synchronous zio operation translated synchronous bio request follow commits 5592404 aa159af fixed several problem introduced b39c22b particular 5592404 introduced new flag parameter wait zol since never actually used wait flag always zero new code effect cause bug use fixed aa159af original rationale introducing synchronous operation b39c22b hurry certains request bio layer would otherwise subject unplug timer would increase latency behavior unplug timer however went away transition plug unplug system kernel 2.6.32 2.6.39 handle unplug timer behavior 2.6.32 2.6.35 kernel bio_rw_unplug flag used hint suppress plugging behavior kernel 2.6.36 2.6.38 req_unplug macro available ise used purpose signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4858,,
3821,273ff9b5ccc438e3099809c43229cc75503cff68,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-25 14:15:01 -0700, , fix uninitialized variable avl_add silence following warning compiling gcc 5.4.0 specifically gcc ubuntu 5.4.0 6ubuntu1 16.04.1 5.4.0 20160609 module avl avl.c function avl_addâ module avl avl.c 647 warning whereâ may used uninitialized function wmaybe uninitialized avl_insert tree new_node signed brian behlendorf behlendorf1 llnl.gov,,
3822,2c6abf15ff5bcc979653eef0131f90d4f0fede21,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-05-22 14:15:57 +0300,227, remove znode z_uid z_gid member remove duplicate z_uid z_gid member also held generic vfs inode struct done first removing member struct znode using kuid_to_suid kgid_to_sgid macro access respective member struct inode case uid gids marshalled disk use newly introduced zfs_ uid gid read write function properly save uids rather internal kernel representation signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4685 issue 227,,
3823,82a1b2d6289f9ceae0bee6f1e71d3bc29a8c5d16,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-05-30 20:37:36 +0300,227, check whether kernel support i_uid gid_read write helper since concept kuid need translate ordinary integer type added kernel version 3.5 implement necessary plumbing able detect condition compile time kernel support kuid fall back directly accessing respective struct inode member signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4685 issue 227,,
3824,77943bc1dc39315feb335b0882dd6c91041538a3,om Caputi <tcaputi@datto.com>, 2016-07-22 16:19:29 -0400,4267, fix assert failure currently issue unmarks fastwrites vdev_t never fastwrites marked fastwrite mark essentially count outstanding byte written vdev used syncing context problem stem fact field transferred replacing top level vdev result metaslab marked fastwrite old vdev unmarked new one brings fastwrite count zero fix simply assigns old vdev new one count lost signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 4267,,
3825,20da056688ef9b41ed4c0a9ee9ff4cd36949c3d8,vozden Neskovic <neskovic@gmail.com>, 2016-07-24 21:55:48 +0200,4874, zloop print backtrace core file find core file using proc sys kernel core_pattern signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4874,,
3826,f4bc1bbe11042de49226c69f0334c77af30024b4,om Caputi <tcaputi@datto.com>, 2016-07-20 23:29:51 -0400,4329, fix compilation error using kernel config_lockdep signed tom caputi tcaputi datto.com signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov issue 4329,,
3827,0b04990a5de594659d2cf20458965277dd6efeb1,om Caputi <tcaputi@datto.com>, 2016-05-12 10:51:24 -0400,4329, illumos crypto port module added enable native encryption zfs port illumos crypto framework linux kernel module found module icp needed actual encryption work use linux kernel built crypto api exported gpl licensed module icp also mean crypto code run kernel openzfs ended porting internals framework mean porting api call need fairly easy specifically ported api function related encryption digest mac crypto template icp able use assembly accelerated encryption amd64 machine aes instruction intel chip support place holder directory similar assembly optimization architecture although written signed tom caputi tcaputi datto.com signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 4329,,
3828,d2f97b2a2651d8e1a6e9e1dcb07cfe8570efcfff,om Caputi <tcaputi@datto.com>, 2016-07-14 15:51:24 -0400,562, added highbit lowbit macro signed tom caputi tcaputi datto.com signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 562,,
3829,be88e733a634ad0d7f20350e1a17ede51922d3ff,hunwei Chen <david.chen@osnexus.com>, 2016-07-19 12:02:33 -0700,4854, fix null pointer zfs_preumount 1d9b3bd zfs_domount fails zsb freed caller mount_nodev get_sb_nodev call zfs_preumount order make sure touch nonexistent stuff must make sure s_fs_info null fail path zfs_preumount easily check signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4867 issue 4854,,
3830,26a08b5ca94ffc96add1d2d9dfe7dc78a0945ef2,vozden Neskovic <neskovic@gmail.com>, 2016-07-18 15:10:17 +0200,4860, raidz parity kstat rework print table speed method implementation last line describes content fastest selection signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4860,,
3831,c9187d867fee3972de48b71762407ae7dabb2563,vozden Neskovic <neskovic@gmail.com>, 2016-07-17 19:41:11 +0200,1392, fix enhancement simd raidz parity implementation lock replaced atomic variable trailing whitespace removed user specified parameter enhance experience using command add newline e.g echo raidz_test remove dependency getrusage rusage_thread issue 4813 silence cppcheck vdev_raidz partial solution issue 1392 minor fix cleanup enable use original parity method fastest configuration new opaque original ops structure representing native method added supported raidz method original parity method executed selected implementation null pointer signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4813 issue 1392,,
3832,1d9b3bd8fb2b633b7523d9f39149d76e24ffb535,hunwei Chen <david.chen@osnexus.com>, 2016-07-14 17:31:00 -0700,4854, wait iput_async evict_inodes prevent race wait iput_async entering evict_inodes reason must finish evict_inodes lazytime zfs_purgedir call zfs_zget iput would bump i_count would race i_count check evict_inodes mean could destroy inode still using signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4854,,
3833,b756ff2445e932a48b3a8a33ca6a0df630c8fc15,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-15 14:30:52 -0700,4695, update arc_summary.py prefetch change commit 7f60329 removed several kstats arc_summary.py read remove kstats arc_summary.py way handled freenas freenas commit http github.com freenas freenas commit 3901f73 signed brian behlendorf behlendorf1 llnl.gov close 4695,,
3834,3d11ecbddd535e37eeb751a830fb5a897881d25d,yler J. Stachecki <stachecki.tyler@gmail.com>, 2016-07-18 17:38:55 -0400,4862, prevent segfaults sse optimized fletcher case compiler respecting gnu aligned attribute stack variable 35a76a0 resulting segfault centos 6.7 host using gcc 4.4.7 17. issue fixed gcc 4.6 prevent occurring use unaligned load store stack global memory reference sse optimized fletcher code disable zimport testing master flaw exists installed signed tyler stachecki stachecki.tyler gmail.com signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4862,,
3835,1b87e0f53249a17f2fbb1d5ca725e65add391ace,oman Strashkin <roman.strashkin@nexenta.com>, 2016-07-12 20:53:53 +0300,4818, fix filesystem destroy possible given may hidden child recv datasets leftover resulting previously interrupted zfs receieve try remove hidden child recv try remove target dataset hidden child recv doe exist original error eexist returned signed roman strashkin roman.strashkin nexenta.com signed brian behlendorf behlendorf1 llnl.gov close 4818,,
3836,35a76a0366372d89a0f1ac3cebd5bc7646aadec3,yler J. Stachecki <stachecki.tyler@gmail.com>, 2016-06-23 23:32:40 -0400,4789, implementation sse optimized fletcher build 1eeb4562 implementation avx2 optimized fletcher commit add another implementation fletcher algorithm automatically selected module load benchmark higher available implementation module benchmark also amended analyze performance byteswap version fletcher well non byteswaped version average performance two used select fastest implementation available host system add pair field existing zcommon module parameter str sse2 new sse2 implementation available ssse3 new ssse3 implementation available signed tyler stachecki stachecki.tyler gmail.com signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4789,,
3837,dfbc86309fd8ebb70a55cafa876320dc1ea8e833,hris Dunlop <chris@onthe.net.au>, 2016-07-15 00:44:38 +1000,227, use native inode i_nlink instead znode z_links mostly mechanical change taking account i_nlink bit zfs bit disk link count revert xattr dir get purged iput ddae16a linux integrated fix issue addition setting initial link count new node changed setting one required zfs_mknode incrementing correct count zfs_link_create somewhat bizarre first place setting correct count zfs_mknode incrementing zfs_link_create mean longer set link count sa_bulk_update twice initial incorrect count correct count well adhering linux requirement incrementing zero link count without i_linkable see linux commit f4e0c30c signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4838 issue 227,,
3838,02de3e3c5d54bd545b34cccfd35ace80edd1f864,hunwei Chen <david.chen@osnexus.com>, 2016-07-12 12:23:43 -0700,4846, fix race dropping dbuf_hash_mutex walking hash list unsafe dbuf freed time signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4846,,
3839,8887c7d778dce8cadee422de97e557a224555bdf,im Chase <tim@chase2k.com>, 2016-07-10 09:09:02 -0500,4837, prevent null dereferences accessing dbuf kstat arc_buf_info arc_buf_t may header try fetch arc buffer stats instead zero null dereferences observed accessing dbuf kstat awk system million small file created order overflow system metadata limit signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4837,,
3840,8d9e12451530418778f57315717e35cc5868d98d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-14 09:27:33 -0700,4852, enable zpool_upgrade test case creating pool striped rather mirrored configuration provides enough space upgrade test run test case still fails must investigated left disabled signed brian behlendorf behlendorf1 llnl.gov close 4852,,
3841,ae25d222354a8074a4db0d85992fc049e2da3089,vozden Neskovic <neskovic@gmail.com>, 2016-06-28 19:49:53 +0200,4783, add raid routine sse2 instruction set x86_64 mode patch cover low end older x86 cpu parity generation equivalent ssse3 implementation reconstruction somewhat slower previous sse implementation renamed ssse3 indicate highest instruction set used benchmark result scalar_rec_p 720476442 scalar_rec_q 187462804 scalar_rec_r 138996096 scalar_rec_pq 140834951 scalar_rec_pr 129332035 scalar_rec_qr 81619194 scalar_rec_pqr 53376668 sse2_rec_p 2427757064 sse2_rec_q 747120861 sse2_rec_r 499871637 sse2_rec_pq 522403710 sse2_rec_pr 464632780 sse2_rec_qr 319124434 sse2_rec_pqr 205794190 ssse3_rec_p 2519939444 ssse3_rec_q 1003019289 ssse3_rec_r 616428767 ssse3_rec_pq 706326396 ssse3_rec_pr 570493618 ssse3_rec_qr 400185250 ssse3_rec_pqr 377541245 original_rec_p 691658568 original_rec_q 195510948 original_rec_r 26075538 original_rec_pq 103087368 original_rec_pr 15767058 original_rec_qr 15513175 10746357 signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4783,,
3842,1bf3bf0e2986ac0b8be18b2e2952f39353cc5daa,vozden Neskovic <neskovic@gmail.com>, 2016-07-09 18:37:11 +0200,4829, fix handling error nvlist changed always allocate error nvlist caller responsible freeing signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4829,,
3843,81edd3e83409218879e7af293daa86b0c40eb015,eng <peng.hse@xtaotech.com>, 2016-06-08 15:22:07 +0800,3937, fix panic bad dva following scenario result garbage dn_spill field db_blkptr must set null clear ensure dn_spill field cleared current txg new spill buffer created dbuf initialized db_blkptr null dirtied current txg spill buffer modified marked dirty txg additional change make spill buffer unnecessary xattr fit bonus buffer removed dbuf undirtied txg still referenced destroyed current txg start syncing txg dbuf_sync_leaf called spill buffer since db_blkptr null called dbuf start written reach ready state done yet new change make spill buffer necessary end calling dbuf_find locate dbuf find old dbuf destroyed yet destroyed previous write done reference old dbuf db_blkptr null txg write complete dbuf released however still referenced destroyed current txg start syncing txg dbuf_sync_leaf called bonus buffer content directly copied dnode overwriting blkptr area txg bonus buffer big enough hold entire xattr point db_blkptr spill buffer used txg get corrupted signed peng peng.hse xtaotech.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3937,,
3844,62b2d54b2b44d5b37ffebdc43cc736860bbee3d8,rian Behlendorf <behlendorf1@llnl.gov>, 2016-07-12 15:21:37 -0700, , fix raidz_test test remove stray trailing prevented raidz stress test running tree signed brian behlendorf behlendorf1 llnl.gov,,
3845,31b6111fd92a6bc79a34cb18fd919a29c407ff67,hunwei Chen <david.chen@osnexus.com>, 2016-07-05 17:24:36 -0700,4827, kill z_xattr_parent prevent pinning z_xattr_parent pin parent cause huge issue unlink file xattr unlinked file pinned never get purged immediately xattr stuff never marked unlinked whole unlinked stuff stay shrink cache umount change partially reverts e89260a safe z_xattr_parent optimization removed still called zpl outside inode lock signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au issue 4359 issue 3508 issue 4413 issue 4827,,
3846,ddae16a9cf0ba84fab4f7f4542efaf68dc87415b,hunwei Chen <david.chen@osnexus.com>, 2016-07-05 12:39:47 -0700,4827, xattr dir get purged iput need set inode i_nlink zero iput purge without get purged shrink cache umount would likely result deadlock due zfs_zget waiting forever child dispose_list thread signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au issue 4359 issue 3508 issue 4413 issue 4827,,
3847,6c2530647ce3f1fe92075b7ed96144fa3541d8f5,hunwei Chen <david.chen@osnexus.com>, 2016-07-08 14:51:42 -0700,4828, fh_to_dentry return estale generation mismatch generation mismatch usually mean file pointed file handle deleted return estale indicate return enoent zfs_vget since convert estale signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4828,,
3848,d4701011efe9c8268dfc3af8d174a16aa6334a9b,hunwei Chen <david.chen@osnexus.com>, 2016-07-06 17:07:45 -0700,4828, add configure result xattr_handler signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4828,,
3849,bffb68a2b863bc43c42b53ba56d3ee7a4a45ca96,hunwei Chen <david.chen@osnexus.com>, 2016-07-06 17:06:17 -0700,4752, fix large kmem_alloc allocation way 1mb use vmem_alloc instead kmem_alloc large kmem_alloc 1430784 0x1000 please file issue ... call trace spl_kmem_zalloc 0xef 0x160 spl 0x9d 0x1f0 zfs vdev_load 0xc0 0xd0 zfs vdev_load 0x33 0xd0 zfs spa_load 0xfc4 0x1b60 zfs spa_tryimport 0x98 0x430 zfs 0x41 0x80 zfs zfsdev_ioctl 0x4a9 0x4e0 zfs do_vfs_ioctl 0x2cf 0x4b0 sys_ioctl 0x81 0xa0 signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4752,,
3850,7938c2aca741f350921377d0f939e177bc7e84ad,hunwei Chen <david.chen@osnexus.com>, 2016-07-06 16:54:19 -0700,4828, allow accessing xattr via export handle allow accessing xattr export handle bad idea would allow user write whatever want field otherwise could signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4828,,
3851,061460dfe222e01f258db7f6bad689c1ebd2634e,hunwei Chen <david.chen@osnexus.com>, 2016-07-08 16:59:54 -0700, , fix get_zfs_sb race concurrent umount certain ioctl operation call get_zfs_sb hold active count without checking whether active result use free fix using make sure got active   s_active zfs_sb_hold get_zfs_sb s_active zpl_kill_sb zpl_put_super zfs_umount zfs_sb_free zsb zfs_sb_rele zsb signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov,,
3852,590c9a09946939a389e1f01dadd27efb4b2fe8fd,vozden Neskovic <neskovic@gmail.com>, 2016-06-29 22:31:25 +0200,4799, allow building cflags compiled gcc stack frame coalescing wframe larger 1024 triggered debug mode starting gcc 4.8 new opt level introduced debugging doe trigger warning fix bench zio size using signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4799,,
3853,5c27b296055301f13103ca0aa98c2ded01dcd9a0,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-29 11:26:30 -0700,4742, merge branch illumos 2605 add support resuming interrupted zfs send stream include related send recv bug fix upstream openzfs unlike upstream implementation branch doe change existing ioctl interface instead new ioctl added support resuming zfs send stream done applying original upstream patch reverting ioctl change follow patch reason handful commits relevant patch branch interoperable done make easier extract new submit upstream signed brian behlendorf behlendorf1 llnl.gov close 4742,,
3854,0dab2e84fcecff2806287efacb7c6205f346f69d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-28 13:31:21 -0700,4330, vectorized fletcher_4 must 128 bit aligned function may safely use vectorized implementation buffer 128 bit aligned avx2 sse implementation process four bit word per iteration fallback scalar implementation process single bit word unaligned buffer signed brian behlendorf behlendorf1 llnl.gov signed gvozden neskovic neskovic gmail.com issue 4330,,
3855,d1d19c785497fafb5e239f67006f534651ed2f27,aul Dagnelie <pcd@delphix.com>, 2016-06-15 14:51:27 -0700,6876, openzfs 6876 stack corruption importing pool long name reviewed prakash surya prakash.surya delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed yuri pankov yuri.pankov nexenta.com ported brian behlendorf behlendorf1 llnl.gov calling dataset 256 byte buffer asking trouble check every dataset import using 1024 byte buffer checking time see dataset new name longer 256 byte openzfs issue http www.illumos.org issue 6876 openzfs commit http github.com openzfs openzfs commit ca8674e,,
3856,eca7b76001a7d33f78bd98884aef8325bdbf98e7,gor Kozhukhov <ikozhukhov@gmail.com>, 2016-06-15 14:28:36 -0700,6314, openzfs 6314 buffer overflow reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed igor kozhukhov ikozhukhov gmail.com approved dan mcdonald danmcd omniti.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6314 openzfs commit http github.com openzfs openzfs commit d6160ee,,
3857,43e52eddb13d8accbd052fac9a242ce979531aa4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-09 17:04:12 -0700, , implement openzfs 2605 add resumable stream preserve legacy zfs_ioc_recv user kernel interface new interface support stream option currently used resumable stream way updated user space utility interoperate older kernel module modeled existing handler non linux openzfs platform opted change legacy interface incompatible fashion instead adding new ioctl signed brian behlendorf behlendorf1 llnl.gov,,
3858,8c62a0d0f39c450d1fdb001b8073193f89611f56,an McDonald <danmcd@omniti.com>, 2016-06-09 12:29:09 -0700,6562, openzfs 6562 refquota receive account overage authored dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed toomas soome tsoome me.com approved gordon ross gwr nexenta.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6562 openzfs commit http github.com openzfs openzfs commit 5f7a8e6,,
3859,671c93546cc0471ff3b4039e82d6f2a77de6d413,an McDonald <danmcd@omniti.com>, 2016-06-09 12:24:29 -0700,4986, openzfs 4986 receiving replication stream fails snapshot exceeds refquota authored dan mcdonald danmcd omniti.com reviewed john kennedy john.kennedy delphix.com reviewed matthew ahrens mahrens delphix.com approved gordon ross gordon.ross nexenta.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 4986 openzfs commit http github.com openzfs openzfs commit 5878fad,,
3860,f8866f8ae3ad987e8ef4a68ea0066639b5f69bcd,li Rosenthal <eli.rosenthal@delphix.com>, 2016-06-09 12:07:01 -0700,6738, openzfs 6738 zfs send stream padding need documentation authored eli rosenthal eli.rosenthal delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed paul dagnelie pcd delphix.com reviewed dan mcdonald danmcd omniti.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6738 openzfs commit http github.com openzfs openzfs commit c20404ff,,
3861,b607405fea86c1cbeb6d1f27d919b315f35d27c9,ndrew Stormont <astormont@racktopsystems.com>, 2016-06-09 11:46:42 -0700,6536, openzfs 6536 zfs send want way disable setting authored andrew stormont astormont reviewed anil vijarnia avijarnia reviewed kim shrier kshrier reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6536 openzfs commit http github.com openzfs openzfs commit 880094b,,
3862,e6d3a843d6ced970cbc74a3f809d744c30a7ec7c,aul Dagnelie <pcd@delphix.com>, 2016-06-09 11:18:16 -0700,6394, openzfs 6393 zfs receive full send clone authored paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6394 openzfs commit http github.com openzfs openzfs commit 68ecb2e,,
3863,fd41e93563b0543e2a2bdc17bceb731ed22a04b4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-16 10:01:33 -0700,6051, openzfs 6051 lzc_receive allow caller read begin record reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6051 openzfs commit http github.com openzfs openzfs commit 620f322,,
3864,47dfff3b86c67c6ae184c2b7166eaa529590c2d2,atthew Ahrens <mahrens@delphix.com>, 2016-01-06 22:22:48 +0100,6980, openzfs 2605 6980 6902 2605 want resume interrupted zfs send reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed richard elling richard.elling reviewed xin delphij freebsd.org reviewed arne jansen sensille gmx.net approved dan mcdonald danmcd omniti.com ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 2605 openzfs commit http github.com openzfs openzfs commit 9c3fd12 6980 6902 cause zfs send break due bit bit struct mismatch reviewed paul dagnelie pcd delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6980 openzfs commit http github.com openzfs openzfs commit ea4a67f porting note rsend snapshop test enabled updated linux fix misuse input argument fix iso c90 warning error fix gcc missing brace around initializer struct send_thread_arg to_arg warning replace argument argument version change made openzfs 4185 ported part section zfs receive zfs send rewritten reordered approximate upstream fix mktree xattr creation user prefix required minor fix newly enabled test case long hold volume allowed receive minor registration,,
3865,669cf0ab298dd66e512b37f6c4a42aee2d767b80,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-24 14:50:20 -0700,4795, sync flag flag used openzfs flag must shifted reserved upstream openzfs implementation signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 4795,,
3866,50c957f702ea6d08a634e42f73e8a49931dd8055,ed Bass <bass6@llnl.gov>, 2016-03-16 18:25:34 -0700,3542, implement large_dnode pool feature justification  feature add support variable length dnodes motivation eliminate overhead associated using spill block spill block used store system attribute data i.e file metadata doe fit dnode bonus buffer allowing larger bonus buffer area use spill block avoided spill block potentially incur additional read every dnode dnode block worst case example reading dnodes 16k dnode block spill block could issue separate read suppose dnodes size 1024 therefore need spill block worst case number block read reduced two one per dnode block practice spill block may tend located disk dnode block reduction would drastic badly fragmented pool however improvement could significant zfs linux system make heavy use extended attribute would benefit feature particular zfs linux support xattr dataset property allows file extended attribute data stored dnode bonus buffer alternative traditional directory based format workload selinux lustre distributed filesystem often store enough xattr data force spill bock xattr effect large dnodes may therefore provide performance benefit system use case may benefit feature include file large acls symbolic link long target name furthermore feature may desirable platform case future application feature developed could make use larger bonus buffer area implementation  size dnode may multiple 512 byte size dnode block currently 16384 byte dn_extra_slots field added current disk dnode_phys_t structure describe size physical dnode disk bit field taken zero filled dn_pad2 field field represents many extra dnode_phys_t slot dnode consumes dnode block convention result value 512 byte dnodes preserve disk format compatibility older software similarly memory dnode_t structure new dn_num_slots field represent total number dnode_phys_t slot consumed disk thus dn_num_slots greater corresponding dnp dn_extra_slots difference convention adopted unlike disk structure backward compatibility concern memory object used natural way represent size dnode_t default size newly created dnodes determined value new dnodesize dataset property default property set legacy compatible older software setting property auto allow filesystem choose suitable dnode size currently set default dnode size future code improvement could dynamically choose size based observed workload pattern dnodes varying size coexist within dataset even within dnode block example enable automatically sized dnodes run zfs set dnodesize auto tank fish user also specify literal value dnodesize property currently limited power two 16k power limitation simplicity user interface internally implementation handle multiple 512 16k consumer dmu api specify legal dnode value size new dnode determined object allocation time stored new field znode memory structure new dmu interface added allow consumer specify dnode size newly allocated object use existing interface unchanged avoid update every call site preserve compatibility external consumer lustre new interface name given version function take dnodesize parameter call _dnsize version dnodesize mean use legacy dnode size new dmu interface    new zap interface      constant dn_max_bonuslen renamed function used determine maximum bonus length pool noteworthy change key function prototype dnode_hold_impl take slot parameter flag set parameter used ensure hole specified object offset large enough hold dnode created slot parameter also used ensure dnode doe span multiple dnode block case failure occurs enospc returned keep mind failure case possible using flag set slot must dnode_hold_impl check requested dnode already consumed extra dnode slot large dnode case return enoent function advance next dnode block dnode_hold_impl return error requested object beginning next dnode block location safely assume either hole valid starting point dnode function iterate dnode block may longer use simple array indexing scheme use current dnode dn_num_slots field advance next dnode block ensure properly skip current dnode bonus area interpret valid dnode zdb  zdb command updated display dnode size dnsize column object dumped zil create log record zdb display slot count object ztest  ztest chooses random dnodesize every newly created object random distribution heavily weighted toward small dnodes better simulate real world datasets unused bonus buffer space filled non zero value computed object number dataset offset generation number help ensure dnode traversal code properly skip interior region large dnodes interior region overwritten data belonging dnodes new test visit object dataset verifies actual dnode size match stored ztest block tag created also verifies unused bonus buffer space filled expected data pattern zfs test suite  added six new large dnode specific test integrated dnodesize property existing test zfs allow send recv send receive  zfs send stream datasets containing large dnodes received pool support large_dnode feature send stream large dnodes set flag unrecognized incompatible receiving pool zfs receive fail gracefully implemented may possible generate backward compatible send stream dataset containing large dnodes implementation may tricky however send object record large dnode would need resized 512 byte dnode possibly kicking spill block process mean would need construct new layout possibly register layout object layout normally sent ordinary object record constructing new layout generating send stream build layout object dynamically send end stream sending receiving pool support large dnodes drr_object send record type extended new field store dnode slot count field repurposed unused padding structure zil replay  dnode slot count stored uppermost bit lr_foid field bit unused object currently capped bit resizing dnodes  possible resize dnode dirtied current dnodesize dataset property differs dnode size functionality currently implemented clearly dnode grow sufficient contiguous unused slot dnode block always possible shrink dnode growing dnodes may useful reduce fragmentation pool many spill block use shrinking dnodes may useful allow sending dataset pool support large_dnode feature feature reference counting  reference count large_dnode pool feature track number datasets ever contained dnode size larger 512 byte first time large dnode created dataset dataset converted extensible dataset one way operation way decrement feature count destroy dataset even dataset longer contains large dnodes complexity reference counting per dnode basis high chose track per dataset basis similarly large_block feature signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3542,,
3867,68cbd56e182ab949f58d004778d463aeb3f595c6,ed Bass <bass6@llnl.gov>, 2016-05-17 01:02:29 +0000, ," backfill metadnode intelligently attempt backfill lower metadnode object number least 4096 object freed since last rescan per transaction group avoids pathology caused behavior create heavy workload substantially improves object creation rate summarized mahrens 4636 normally object allocator simply check see next object available slow call happened check see backfill lower object number happens every time move new indirect block i.e every 128 4096 object checking lower object number use disk fill count blkptr_t blk_fill quickly skip indirect block donâ enough free dnodes defined least 393,216 524,288 dnodes free therefore may find block dnodes low zero fill count yet canâ allocate dnodes allocated memory yet written disk case hold dnodes notice allocated memory end result allocating object txg require cpu usage proportional add tunable define number object must freed rescan performed bother export module option testing show compelling reason change vast majority performance gain come limit rescan per txg signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov",,
3868,81285582b9898374e98d1d6d55ccac8340408d72,ed Bass <bass6@llnl.gov>, 2015-04-10 15:17:30 -0700, , xattrtest allow verify improvement use fixed buffer random byte random xattr value effect eliminates potential performance bottleneck reading dev urandom file also allows verify xattrs random value mode show rate operation per second addition elapsed time phase test may useful benchmarking set default xattr size verify fail user specify size need least six byte store leading size string used verification allow user execute one phase test acceptable value meaning run create phase run setxattr phase run getxattr phase run unlink phase signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
3869,d14fa5dba1ad0e68e803435ac48ec1ea78121699,mh <smh@FreeBSD.org>, 2016-06-24 00:45:19 +1000,4790, freebsd rs271776 persist change persist change avoid panic caused validation value previous resilver authored smh smh freebsd.org ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 5154 freebsd issue http rs271776 freebsd commit http github.com freebsd freebsd commit c3c60bf close 4790,,
3870,784d15c14c3ce033f863c36299292f40a4c41641,av Ravindranath <nav@delphix.com>, 2016-06-23 18:39:40 +1000,4787, openzfs 6878 add scrub completion info zpool history reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com approved dan mcdonald danmcd omniti.com authored nav ravindranath nav delphix.com ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6878 openzfs commit http github.com openzfs openzfs commit 1825bc5 close 4787,,
3871,391bba1d28d006586bd8dccbde395c5c81f0476e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-24 12:44:02 -0700,4754, revert add test case ztest reverts commit introduced new test case ztest failing occasionally automated testing change reverted issue fully investigated signed brian behlendorf behlendorf1 llnl.gov issue 4754,,
3872,5ad98ad0978d43b41180018536ce5efdaa4ea546,ony Hutter <hutter2@llnl.gov>, 2016-06-14 17:36:39 -0700,561, add isa_defs.h checksum need defined isa_defs.h order port illumos checksum code zol 4185 add new cryptographic checksum zfs sha 512 skein edon openzfs issue http www.illumos.org issue 4185 openzfs commit http github.com openzfs openzfs commit 45818ee signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 561,,
3873,d0de2e82df579f4e4edf5643b674a1464fae485f,oris Protopopov <boris.protopopov@actifio.com>, 2015-12-16 22:09:13 -0500,4754, add test case ztest signed boris protopopov bprotopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 4754,,
3874,bc77ba73fec82d37c0b57949ec29edd9aa207677,aul Dagnelie <pcd@delphix.com>, 2016-05-15 08:02:28 -0700,6513, openzfs 6513 partially filled hole lose birth time reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed boris protopopov bprotopopov hotmail.com approved richard lowe richlowe richlowe.net ported boris protopopov bprotopopov actifio.com signed boris protopopov bprotopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6513 openzfs commit http github.com openzfs openzfs commit 8df0bcf0 zfs object contains hole level one data block created level underneath block hole created however hole birth time property set result incremental sends send hole fix modify dbuf_read code fill birth time data,,
3875,100a91aa3e9773f2a2a373c5cb066b52c780716c,hunwei Chen <david.chen@osnexus.com>, 2016-06-17 17:36:01 -0700,4758, fix nfs credential commit f74b821 caused regression creating file nfs always create file owned root patch enables ksid code would use euid egid current process however linux use fsuid fsgid file operation original behaviour revert part code patch also enables since also used file operation change use fsuid fsgid signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4772 close 4758,,
3876,ab9f4b0b824ab4cc64a4fa382c037f4154de12d6,vozden Neskovic <neskovic@gmail.com>, 2016-04-25 10:04:31 +0200,4328, simd implementation vdev_raidz generate reconstruct routine new implementation raidz1 routine using x86_64 scalar sse avx2 instruction set included parity generation routine pqr reconstruction routine raidz level module load quick benchmark supported routine select fastest operation used runtime original implementation still present selected via module parameter patch contains specialized gen rec routine raidz level new scalar raidz implementation unrolled two x86_64 simd implementation sse avx2 instruction set fastest routine selected module load benchmark cmd raidz_test verify benchmark implementation added raidz_test zfs test suite new zfs module parameter str selects implementation use module load parameter accept first option implementation set module finished loading possible value option fastest use fastest math available original use original raidz code scalar new scalar impl sse new sse impl available avx2 new avx2 impl available see content sys module zfs parameter get list supported value implementation supported system shown currently selected option enclosed signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4328,,
3877,09fb30e5e91d9f2ed622db6b616084ce1d073384,im Chase <tim@chase2k.com>, 2016-06-16 10:19:32 -0500,4726, linux 4.6 compat fall back d_prune_aliases necessary 4.6 icache dcache lrus memcg aware insofar kernel per superblock shrinker concerned effect dcache icache entry added task non root memcg scanned shrinker context root null memcg defeat attempt zfs_sb_prune unpin buffer allow metadata grow uncontrollably patch reverts d_prune_aliaes method case kernel per superblock shrinker able free anything signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4726,,
3878,46ab35954c7a7e4dc6591593c14f672bceee042d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-15 14:44:14 -0700,4766, remove libzfs_graph.c libzfs_graph.c source file removed 330d06f entirely unused signed brian behlendorf behlendorf1 llnl.gov close 4766,,
3879,f74b821a6696fef9e9953aae05941e99bf83800e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-07 09:16:52 -0700,4487, add zfs allow zfs unallow support zfs allows specific permission delegated normal user zfs allow zfs unallow command addition non privileged user able run following command zpool list iostat status get zfs list get historically functionality available linux order add secpolicy_ function needed implemented mapped equivalent linux capability could permission dev zfs relaxed internal zfs permission check used even change limitation remain linux root user allowed modify namespace unless private namespace mean mount mountpoint canmount unmount remount delegation supported existing code may possible add functionality future functionality validated cli_user delegation test case zfs test suite test exhaustively verify supported permission delegated ensures authorized user perform two minor bug fix required test running.py first timer object safely created try block unconditional finally block reference second running normal user also check script using .ksh .sh suffix finally existing user simulating delegation setting group permission dev zfs device revert customization updating version change signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 362 close 434 close 4100 close 4394 close 4410 close 4487,,
3880,2627e7524581f5189599df6daccf830e23e89a69,olin Ian King <colin.king@canonical.com>, 2016-06-06 22:45:26 +0100,4728, fix minor spelling mistake trivial spelling mistake fix error message text fix spelling mistake adminstrator administrator fix spelling mistake specificed specified fix spelling mistake interperted interpreted signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 4728,,
3881,f866a4ea1f188a3a7c4b828f42080089703779c9,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-03 09:08:14 -0700,4723, fix cstyle.pl warning perl v5.22.1 following warning generated redundant argument printf script cstyle.pl line 194 unescaped left brace regex deprecated passed regex marked script cstyle.pl line 608 addressed escaping left brace providing correct number argument printf based fmt specifier set verbose option signed brian behlendorf behlendorf1 llnl.gov close 4723,,
3882,1eeb4562a72ab29345572609e1e4315ecd26c5a1,inshan Xiong <jinshan.xiong@intel.com>, 2015-12-09 15:34:16 -0800,4330, implementation avx2 optimized fletcher new functionality preserve existing scalar implementation add avx2 optimized fletcher computation fastest routine selected module load benchmark test case fletcher added ztest new zcommon module parameter str selects implementation use fastest use fastest version available cycle cycle trough available impl ztest scalar use original version avx2 new avx2 implementation available performance comparison intel cpu 1mb data buffer scalar 4216 avx2 14499 see content sys module zcommon parameter get list supported value implementation supported system shown currently selected option enclosed signed jinshan xiong jinshan.xiong intel.com signed andreas dilger andreas.dilger intel.com signed brian behlendorf behlendorf1 llnl.gov close 4330,,
3883,8fbbc6b4cf13f73d517ec4e826a7069a958fa5ba,rian Behlendorf <behlendorf1@llnl.gov>, 2016-06-01 18:10:06 -0700,4665, linux 4.7 compat handler set take dentry inode counterpart fd4c7b7 approach taken resolve compatibility issue signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 4717 issue 4665,,
3884,16fc1ec3ba0438b1d657b421923b3969031f2678,inshan Xiong <jinshan.xiong@intel.com>, 2016-05-19 10:59:40 -0700,551, improve spl slab cache alloc policy try allocate km_nosleep lead memory allocation gfp_atomic fails launch taskq expand slab space way able get better numa memory locality reduce overhead context switch signed jinshan xiong jinshan.xiong gmail.com signed brian behlendorf behlendorf1 llnl.gov close 551,,
3885,6a7967253064a0b8711ca746a1296ee6439d36e6,hunwei Chen <david.chen@osnexus.com>, 2016-05-27 15:48:02 -0700,4708, fix memleak copy content nvx need free unreferenced object size comm zpool pid 3398 jiffy 4295007406 age 214.180s hex dump first byte ..... .... ........ ..... backtrace kmemleak_alloc 0x4e 0xb0 __kmalloc_node 0x17d 0x310 0xac 0x180 spl spl_vmem_alloc 0x19 0x20 spl 0x1f 0x30 znvpair 0x27 0xc0 znvpair nvlist_alloc 0x3d 0x40 znvpair fnvlist_alloc 0x2c 0x80 znvpair 0x83 0x370 zfs 0x4e3 0x650 zfs 0x20b 0x4b0 zfs spa_tryimport 0xc4 0x430 zfs 0x68 0x110 zfs zfsdev_ioctl 0x646 0x7a0 zfs do_vfs_ioctl 0xa1 0x5b0 sys_ioctl 0x79 0x90 signed chunwei chen david.chen osnexus.com signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4707 issue 4708,,
3886,06ee0031a6d658bbf4ab953070ff4cdf4af64496,hunwei Chen <david.chen@osnexus.com>, 2016-05-27 15:44:52 -0700,4708, fix memleak strsep advance tmp_mntopts change null last iteration cause strfree tmp_mntopts free anything unreferenced object size comm mount.zfs pid 3361 jiffy 4294931877 age 1482.408s hex dump first byte  fsutil.mntpoint backtrace kmemleak_alloc 0x4e 0xb0 __kmalloc 0x16c 0x250 strdup 0x3b 0x60 spl 0x56 0x300 zfs zpl_mount 0x36 0x80 zfs mount_fs 0x38 0x160 vfs_kern_mount 0x67 0x110 do_mount 0x250 0xe20 sys_mount 0x95 0xe0 0x1e 0xa8  signed chunwei chen david.chen osnexus.com signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4706 issue 4708,,
3887,540c39279322cb278ad45840f260fe4b92c3c8b7,hunwei Chen <david.chen@osnexus.com>, 2016-05-27 15:39:34 -0700,4708, fix bound access zfs_fillpage original code bound access last iteration  bug kasan stack bound zfs_getpage 0x14c 0x2d0 zfs read size task tmpfile 7850 page count mapcount mapping null index 0x0 flag page dumped kasan bad access detected cpu pid 7850 comm tmpfile tainted 4.6.0    call trace dump_stack 0x63 0x8b 0x528 0x560 0x5f0 0x5f0 kasan_report 0x58 0x60 zfs_getpage 0x14c 0x2d0 zfs __asan_load8 0x5e 0x70 zfs_getpage 0x14c 0x2d0 zfs zpl_readpage 0xd1 0x180 zfs sys_execve 0x3a 0x50 do_syscall_64 0xef 0x180 0x25 0x25 memory state around buggy address        signed chunwei chen david.chen osnexus.com signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4705 issue 4708,,
3888,ea5f1a200b974c8fdd51993c282d8ae0dc2aa871,hunwei Chen <david.chen@osnexus.com>, 2016-05-27 17:28:12 -0700,557, fix use free splat_vprint using tq_arg name tq_arg freed signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 557,,
3889,f58040c0fc8bc6490fcc75db7fc3e709dfc3c656,hunwei Chen <david.chen@osnexus.com>, 2016-05-25 16:35:42 -0700,554, implement proper rw_tryupgrade current rw_tryupgrade doe rw_exit rw_tryenter rw_rwiter doe rw_enter rw_reader fails violate assumption rw_tryupgrade atomic could cause extra contention even lock inversion patch implement proper rw_tryupgrade rwsem spinlock take spinlock check rwsem count rwsem wait_list normal rwsem use cmpxchg rwsem count change value single reader single writer signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close zfsonlinux zfs 4692 close 554,,
3890,c60a51b640bab61c54f370752750841675730899,unQiang Su <syq@debian.org>, 2016-05-28 19:30:36 +0800,558, add isa_defs mips gcc mips defines _lp64 64bit _ilp32 defined 32bit signed yunqiang syq debian.org signed brian behlendorf behlendorf1 llnl.gov close 558,,
3891,2493dca54e18b24bcd8b7ff5432f4dc51dddc472,unQiang Su <syq@debian.org>, 2016-05-28 20:33:15 +0800,4712, add isa_defs mips gcc mips defines _lp64 64bit _ilp32 defined 32bit signed yunqiang syq debian.org signed brian behlendorf behlendorf1 llnl.gov close 4712,,
3892,b7faa7aabd420b056c9b9cbf6ab8849130385dca,eLiXin <47034221@qq.com>, 2016-05-21 11:34:06 +0800,4652, fix self healing prior dsl_pool_init completion async writes triggered self healing may issued pool finish process initialization result null dereference spa spa_dsl_pool george wilson recommended addressing issue initializing passed dsl_pool_t prior since caller passing spa spa_dsl_pool effect ensuring initialized however since depends caller knowing must pas spa spa_dsl_pool additional null check added guard future restructuring code might result dsl_pool_init called differently signed gelixin 47034221 qq.com signed brian behlendorf behlendorf1 llnl.gov close 4652,,
3893,92547bc45ca9a2114662d9343ae53e5098acb627,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-25 10:48:12 -0700,4699, systemd configuration fix disable zfs import scan.service default ensures pool automatically imported unless appear cache file service explicitly enabled pool imported cachefile none property set prevents creation update existing cache file systemctl list unit file grep zfs zfs import cache.service enabled zfs import scan.service disabled zfs mount.service enabled zfs share.service enabled zfs zed.service enabled zfs.target enabled change service dynamic static adding install section adding wantedby tag favor requires tag allows easier customization boot behavior start zfs import cache.service root pivot cache file available standard location start zfs mount.service systemd remount fs.service ensure root writeable zfs filesystems create mount point change default behavior load zfs kernel module zfs import .service blkid detects pool user wish unconditionally load kernel module must uncomment list module lib module load.d zfs.conf reviewed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 4325 close 4496 close 4658 close 4699,,
3894,26ef0cc7db03be6f7a5c2d06c7ecdb2449bfa9e1,ony Hutter <hutter2@llnl.gov>, 2016-05-23 10:41:29 -0700,6531, openzfs 6531 provide mechanism artificially limit disk performance reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com ported tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6531 openzfs commit http github.com openzfs openzfs commit 97e8130 porting note added new delay tracepoints moved common zio tracepoint macro new trace_common.h file used zio_delay_taskq place openzfs timeout_generic function updated zinject man page updated zpool_scrub test file,,
3895,7e945072d18541fb0c30e05b46cce14d01fea8aa,ony Hutter <hutter2@llnl.gov>, 2016-05-25 14:21:35 -0700,4659, add request size histogram zpool iostat minor man page fix add option zpool iostat print request size histogram leaf zios includes histogram individual zios ind aggregate zios agg stats useful seeing well zfs aggregator working zpool iostat mypool sync_read sync_write async_read async_write scrub req_size ind agg ind agg ind agg ind agg ind agg  512 530 260 116 246 431 107  16k 32k 64k 128k 256k 512k   155 811 16m  also rename stray man page latency histogram signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 4659,,
3896,4442f60d8e959e9983e58ff534e7302ebf2f9d7e,hunwei Chen <david.chen@osnexus.com>, 2016-05-23 11:58:21 -0700,4690, fix arc_prune_task use free arc_prune_task refcount protect arc_prune_t prevent underlying zsb disappearing concurrent umount fix force caller wait arc_prune_taskq finish signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4687 close 4690,,
3897,b3a22a0a005eef22d696cc77baa26ef80d1bdc0c,hunwei Chen <david.chen@osnexus.com>, 2016-05-23 14:12:22 -0700,553, fix evaluate tq_next_id wait_event macro current implementation cause evaluation tq_next_id every time wake would cause equivalent taskq_wait signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 553,,
3898,5ce028b0d4b650b42cb81b3fdf71b517adce4552,hunwei Chen <david.chen@osnexus.com>, 2016-05-20 18:04:03 -0700,550, fix race taskq_destroy dynamic spawning thread taskq_destroy would wait dynamic_taskq finish task doe implies thread spawned running cause taskq freed thread exit fix using tq_nspawn indicate many thread spawned inserted thread list taskq_destroy wait drop zero signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 553 close 550,,
3899,872e0cc9c7334f7aedca05f41eca5ddecf6ff72b,hunwei Chen <david.chen@osnexus.com>, 2016-05-20 16:35:52 -0700,553, restore 39cd90e mistakenly disabled ability using absolute expire time quite sure let restore signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 553,,
3900,83426735026cefc9d8d566615064faaf55074897,HE <git@dehacked.net>, 2015-12-30 12:44:46 -0500,4671, improve zfs module parameter various rewrite description module parameter corrects spelling mistake make description user friendly describes zfs quirk understood changing parameter value signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 4671,,
3901,cbecb4fb228bbfedec02eb0a172c681b4338d08f,hunwei Chen <david.chen@osnexus.com>, 2016-05-19 17:04:27 -0700,4672, skip ctldir znode zfs_rezget fix snapdir issue skip ctldir zfs_rezget otherwise always get invalidated cause funny behaviour mounted snapdirs especially linux 3.18 d_invalidate detach mountpoint prevent anyone automount long someone still using detached mount signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4514 close 4661 close 4672,,
3902,de0ef912ecea3d6c039760525c9195f174db7b93,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-20 13:50:31 -0700,4676, add missing rpm buildrequires libudev libattr recommended build requirement development header list rpm spec file dependency pulled building rpm package signed brian behlendorf behlendorf1 llnl.gov close 4676,,
3903,3491d6eb06c3e2e6f337bd57b6137ccff4b8c077,hrister Ekholm <che@chrekh.se>, 2016-05-23 19:20:42 +0200,4682, consistently use parsable instead parseable purely cosmetical change consistently prefer one two acceptable choises word parsable documentation code really care use acording wiktionary http wiki parsable english parsable preferred signed brian behlendorf behlendorf1 llnl.gov close 4682,,
3904,9baaa7deae45c8556dfd79b2011234da5cb37b3a,hunwei Chen <david.chen@osnexus.com>, 2016-05-18 14:30:20 -0700,4665, linux 4.7 compat use iterate_shared concurrent readdir register iterate_shared exists kernel used shared lock allowing concurrent readdir also use shared lock llseek seek_data seek_hole allow concurrent seeking signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4664 close 4665,,
3905,e42d46664e81136f3e9b7030fe77f0550e615c3f,hunwei Chen <david.chen@osnexus.com>, 2016-05-18 13:48:08 -0700,4665, fix config gpl test gpl test include linux module.h also run test exists signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4665,,
3906,68e8f59afb0fa1b388c7dbb8720ac6756d390146,hunwei Chen <david.chen@osnexus.com>, 2016-05-18 13:45:39 -0700,4665, linux 4.7 compat replace blk_queue_flush signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4665,,
3907,fd4c7b7a73fda391f94f58530c86ffa5b2ef8e6f,hunwei Chen <david.chen@osnexus.com>, 2016-05-18 13:44:13 -0700,4665, linux 4.7 compat handler get take dentry inode signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4665,,
3908,fdbc1ba99d1f4d3958189079eee9b6c957e0264b,hunwei Chen <david.chen@osnexus.com>, 2016-05-18 11:28:46 -0700,549, linux 4.7 compat inode_lock friend linux 4.7 change i_mutex i_rwsem used inode_lock exclusive shared lock respectively use spl_inode_lock _shared hide difference note older kernel always take exclusive lock also add inode_lock friend nested user explicitly call correct subclass signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 4665 close 549,,
3909,278f2236688e70f4097e62ae93537c69968be027,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-04-18 22:08:53 +0300,4654, kill znode z_gen field field duplicate inode i_generation kill signed nikolay borisov n.borisov.lkml gmail.com signed chunwei chen tuxoko gmail.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4538 close 4654,,
3910,bc2d809387debb95d82f47185d446f328da4d147,hrister Ekholm <che@chrekh.se>, 2016-05-16 21:29:54 +0200,4657, make zpool list print individual vdev size parsable add argument format use call instead zfs_nicenum print fragmentation capacity percent value call print_one_colum made zfs_nicenum_raw cb_literal zpool list called also zpool_get_prop modified add literal signed christer ekholm che chrekh.se signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 4657,,
3911,81b4c075eca2c4c4129933a012cd354f75201f69,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-17 15:31:03 -0700,4631, remove additional cruft manpages change part original 930b0d4 commit overlooked 193a37c yet merged original change ported signed brian behlendorf behlendorf1 llnl.gov issue 4631,,
3912,ada8258141f16da6647fd65aa8721d7ce2c02769,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-17 11:44:50 -0700,3878, revert zhack add feature disable command reverts commit broke build patch apply cleanly passed previous test run need updated account change made commit signed brian behlendorf behlendorf1 llnl.gov issue 3878,,
3913,2587cd8f93ec2ec774e49aafbf536b918f77cff2,arcel Huber <marcelhuberfoo@gmail.com>, 2016-05-11 21:23:42 +0200,4632, fix subtle bug fixed bug introduced commit c35b1882 hinted gcc zio_inject.c function zio_inject.c 382 warning ifâ clause doe guard ... wmisleading indentation handler  zio_inject.c 384 note ... statement latter misleadingly indented guarded ifâ continue  signed marcel huber marcelhuberfoo gmail.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4632,,
3914,ebecfcd6991bebe71511cb8fd409112798f203b2,rian Behlendorf <behlendorf1@llnl.gov>, 2015-10-01 16:37:02 -0700,3878, zhack add feature enable force option add force option allow zhack add feature part known set supported feature default disabled signed brian behlendorf behlendorf1 llnl.gov issue 3878,,
3915,83025286175d1ee1c29b842531070f3250a172ba,rian Behlendorf <behlendorf1@llnl.gov>, 2015-10-01 16:32:49 -0700,3878, zhack add feature disable command signed brian behlendorf behlendorf1 llnl.gov issue 3878,,
3916,72c407f8272a4d534da4ecc2c374fd13a49629cc,rian Behlendorf <behlendorf1@llnl.gov>, 2015-10-01 16:39:25 -0700,3878, zhack fix feature ref comparison check signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 3878,,
3917,e3a07cd033920c2266a1ffdb8cfae951dfee3bf4,oris Protopopov <boris.protopopov@actifio.com>, 2016-01-05 15:47:58 -0500,4024, use zfs range lock ztest zfs range lock interface longer tightly depends znode_t therefore used ztest allows previous ztest specific implementation removed additional test coverage shared version signed chunwei chen david.chen osnexus.com signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov issue 4023 issue 4024,,
3918,d88895a069765bc3c6119ac1a3c8ea9edec7a370,hunwei Chen <david.chen@osnexus.com>, 2016-04-11 14:53:48 -0700,4510, remove dummy znode zvol_state struct zvol_state contains dummy znode around 1kb x64 zfs_range_lock reality z_range_lock z_range_avl zfs_range_lock need znode regular file mean add 1kb structure gain nothing patch remove dummy znode zvol_state order also need refactor zfs_range_lock bit move z_range_lock z_range_avl pair znode_t form zfs_rlock_t new struct replaces znode_t main handle inside range lock function also add pointer z_size z_blksz z_max_blksz range lock code depend znode_t allows non zpl consumer like lustre use range lock equivalent znode_t structure signed chunwei chen david.chen osnexus.com signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 4510,,
3919,61a3d06f8414ae1eb8b278be8776a6b30b351549,ichard Laager <rlaager@wiktel.com>, 2016-05-16 16:19:57 -0500,4655, zfs.8 relative path must start simply containing slash enough presumably foo bar could either dataset mountpoint signed brian behlendorf behlendorf1 llnl.gov signed richard laager rlaager wiktel.com close 4655,,
3920,ee8e9d49fc86a0081691a57b8fc2003063552024,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-16 12:26:42 -0700,4651, merge branch man page fix collection correction various improvement man page signed brian behlendorf behlendorf1 llnl.gov close 4631 close 4651,,
3921,c5ee75139497374fbcfadf15ece39973e6886e10,atthew Ahrens <matt@delphix.com>, 2016-05-11 13:46:14 -0500,1644, illumos 1644 add zfs clone property reviewed richard lowe richlowe richlowe.net reviewed george wilson gwilson zfsmail.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 1644 ported richard laager rlaager wiktel.com signed richard laager rlaager wiktel.com,,
3922,930b0d4c77b9dfdfbc48e7789233b758560e7d84,ichard Laager <rlaager@wiktel.com>, 2016-05-11 14:16:21 -0500,1502, illumos 1502 remove conversion cruft manpages reviewed alexander eremin nexenta.com reviewed gordon ross gordon.w.ross gmail.com reviewed garrett amore garrett.damore gmail.com reference http www.illumos.org issue 1502 ported richard laager rlaager wiktel.com signed richard laager rlaager wiktel.com conflict man man8 zpool.8,,
3923,32a6c3d7568a83582feb4387557ab7bc54a9f90c,uben Kerkhof <ruben@rubenkerkhof.com>, 2016-05-16 14:14:32 +0200, , zfs.8 mount.zfs.8 fix typo filesytem filesystem defntext defcontext signed ruben kerkhof ruben,,
3924,d919da83faf14a46e20b7974e64617ee65d975d1,ichard Laager <rlaager@wiktel.com>, 2016-05-11 13:21:06 -0500, , zfs.8 zpool.8 standardize property value order default value always listed first signed richard laager rlaager wiktel.com,,
3925,8fd888baa7be971233a72331f2ae7bc15087a4c8,ichard Laager <rlaager@wiktel.com>, 2016-05-11 13:19:31 -0500, , zfs.8 zpool.8 various documentation edits signed richard laager rlaager wiktel.com,,
3926,8e07f9a916c206833b94f047d834bc791661a3ed,ichard Laager <rlaager@wiktel.com>, 2016-05-11 13:05:33 -0500, , zfs.8 improve zfs upgrade documentation signed richard laager rlaager wiktel.com,,
3927,9ef21991f392630dc5c29384fadc0e4ce701cac2,ichard Laager <rlaager@wiktel.com>, 2016-05-11 13:04:02 -0500, , zfs.8 cleanup stray code bad copy paste signed richard laager rlaager wiktel.com,,
3928,8c5edae99353bc24b83a3ec7da11607e149b3ae5,ichard Laager <rlaager@wiktel.com>, 2016-05-11 11:38:51 -0500, , zfs.8 zpool.8 drop legal illegal convention documentation word used mean invalid signed richard laager rlaager wiktel.com,,
3929,9bb3e153c4de16b3abc913719fbdd7c688466e28,ichard Laager <rlaager@wiktel.com>, 2016-05-11 11:27:00 -0500, , zfs.8 fix minor typo like commit contains trivial change signed richard laager rlaager wiktel.com,,
3930,879dbef094af81e38aecb8246921dfdc6260f9b8,ichard Laager <rlaager@wiktel.com>, 2016-05-11 11:20:14 -0500, , zfs.8 rework native user property signed richard laager rlaager wiktel.com,,
3931,6a107f419978e3fb151291c40f6c987864ec5f26,ichard Laager <rlaager@wiktel.com>, 2016-05-11 11:11:02 -0500, , zfs.8 zpool.8 linux solaris difference signed richard laager rlaager wiktel.com,,
3932,a5eb2d874692ef82e58bd0672e8f1ac5ad268bdc,ichard Laager <rlaager@wiktel.com>, 2016-05-11 11:02:17 -0500, , zfs.8 improve mount option documentation change primarily adding inline reference property section traditional mount option name editorial change signed richard laager rlaager wiktel.com,,
3933,7e0754c675b2d29cf2ca79ad7cebf4ce623f42cf,ichard Laager <rlaager@wiktel.com>, 2016-05-11 10:54:27 -0500, , zfs.8 improve consistency size documentation signed richard laager rlaager wiktel.com,,
3934,cab1aa295e5202aa248d0b5fe3ecda80914e7e39,ichard Laager <rlaager@wiktel.com>, 2016-05-11 10:40:42 -0500, , zfs.8 drop reference oracle documentation signed richard laager rlaager wiktel.com,,
3935,76281da4eb07ae2e1e3f0fdb37c04911fcc24e40,ichard Laager <rlaager@wiktel.com>, 2016-05-11 08:15:20 -0500, , zfs.8 zfs get zfs list accept mountpoints signed richard laager rlaager wiktel.com,,
3936,206971d234431e7599249a2688c4fcea5395acb0,enys Rtveliashvili <denys@rtveliashvili.name>, 2016-05-15 22:18:25 +0000,6739, openzfs 6739 assumption userland version always assumes absolute time reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com reviewed robert mustacchi joyent.com approved robert mustacchi joyent.com ported denys rtveliashvili denys signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6739 openzfs commit http github.com illumos illumos gate commit 41c6413 porting note ported change revealed number problem linux specific code expecting incorrect return code pthread_ function reviewed improved usage pthread_ function lib libzpool kernel.c,,
3937,dabe1c42f9724ab030dea7fc1db1c924d21a8a6a,yxent <jordanp@gmail.com>, 2016-05-13 21:44:03 -0600,4645, fix test use variable signed manuel amador rudd rudd rudd o.com signed brian behlendorf behlendorf1 llnl.gov close 4645,,
3938,a9bb2b682785d48b4bcdaca9d382fc87bbf6e2fb,hunwei Chen <david.chen@osnexus.com>, 2016-05-11 16:55:48 -0700,4634, use originally using interruptible changed uninterruptible ae6d0c6 use _sig_hires instead allow interruptible sleep signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4633 close 4634,,
3939,39cd90ef08bb6817dd57ac08e9de5c87af2681ed,hunwei Chen <david.chen@osnexus.com>, 2016-05-11 16:51:29 -0700,548, add allow interruptible sleep signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 548,,
3940,d402c18dd60124525b253b27c5018f54a030928d,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2016-04-24 11:35:44 +0000,4562, collection dracut fix older system without sysroot.mount import dracut mount enable old dracut mount hook rootflags must present even administrator neglected specify explicitly check mount.zfs exists sbindir remove awk head unused requirement add grep install right mount.zfs eliminate one use grep dracut use accurate grepping statement identify zfsutil rootflags ensure pooldev nonempty properly handle dev device use new get list zpool device bail generator zfs auto root command line ignore error systemctl trying load sysroot.mount care output determine one correct initqueuedir run time add compatibility getargbool detection setup script update dracut .gitignore file signed matthew thode mthode mthode.org signed brian behlendorf behlendorf1 llnl.gov close 4558 close 4562,,
3941,8adb798aa50849cc3f6e099fcae7c29db1b83e39,an McDonald <danmcd@omniti.com>, 2016-05-11 12:03:51 -0700,4630, openzfs 6093 6093 vn_rele zfs_zget success reviewed gordon ross gwr nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6093 openzfs commit http github.com openzfs openzfs commit 0f92170 close 4630 function always implemented slightly differently linux therefore never suffered issue patch updated applied cleanup order minimize difference upstream openzfs code,,
3942,c15706490e5d018542ab4bef1a5ab83122a4b351,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-12 13:31:55 -0700,4538, revert kill znode z_gen field reverts commit i_generation field inode bit code expects bit fixed value revert optimization cleanly addressed signed brian behlendorf behlendorf1 llnl.gov issue 4538,,
3943,193a37cb2430960ce759daf12ce5cc804818aba1,ony Hutter <hutter2@llnl.gov>, 2016-02-29 10:05:23 -0800,4433, add lhhpw option zpool iostat avg latency histogram queue update zfs module collect statistic average latency queue size keep internal histogram latency along update zpool iostat new option print stats include average latency stats total_wait disk_wait syncq_wait asyncq_wait scrub read write read write read write read write wait  41ms 2ms 46ms 4ms 5ms 1ms 1us 4ms 5ms 1ms 1us 4ms  49ms 2ms 47ms  2ms 1ms 1ms  1ms 1ms 1ms 413us 16us 25us 5ms 1ms 1ms 1ms 413us 16us 25us 5ms 2ms 1ms 2ms 412us 26us 25us 5ms 1ms 413us 25us 5ms 1ms 460us 29us 5ms 196us 1ms 196us 370us 7us 23us 5ms  print latency histogram sdb total disk sync_queue async_queue latency read write read write read write read write scrub  1ns ... 33us 66us 107 2486 788 131us 797 359 4499 558 184 184 262us 801 264 1563 286 287 287 524us 575 52086 1063 136 136 1ms 152 1190 41292 1693 252 252 141 2ms 245 2018 50007 2322 371 371 220 4ms 189 7455 162957 3912 6726 6726 199 8ms 108 9461 102320 5775 2526 2526 17ms 11287 37142 8043 1813 1813 34ms 14725 24015 11732 3071 3071 67ms 23597 7914 18113 5025 5025 134ms 33798 254 25755 7326 7326 268ms 51780 41593 10002 10002 537ms 77808 64255 13120 13120 105281 83805 20841 20841 88248 73772 14006 14006 47266 29783 17176 17176 10460 4130 6295 6295  34s 69s 137s  help scripted mode display header separate field single tab instead arbitrary space include current number entry sync async read write queue scrub queue syncq_read syncq_write asyncq_read asyncq_write scrubq_read pend activ pend activ pend activ pend activ pend activ          227 394 227 394 108     display number parseable exact value also update iostat syntax allow user specify specific vdevs show statistic three option choosing pool vdevs display list pool zpool iostat ... pool ... display list vdevs specific pool zpool iostat ... pool vdev ... display list vdevs pool zpool iostat ... vdev ... lastly allow zpool command interval value floating point zpool iostat 0.5 signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4433,,
3944,20c901dc7a96a5f156d28bfb26d9f82026a4fcfb,arcel Huber <marcelhuberfoo@gmail.com>, 2016-05-11 21:28:33 +0200,4632, fix bug fix_paths fix bug introduced commit 7d90f569a hinted gcc libzfs_import.c function fix_pathsâ libzfs_import.c 602 warning self comparison always evaluates true wtautological compare best ne_num_labels best ne_num_labels signed marcel huber marcelhuberfoo gmail.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 4632,,
3945,04bc461062df8e272aa11268668140c2976ac823,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-05-09 22:15:30 +0300,4620, reduce stack usage dmu_recv_stream function receive_arg structure become large zfs compiled debugging enabled result gcc throwing error excessive stack usage module zfs dmu_send.c function module zfs dmu_send.c 2502 error frame size 1256 byte larger 1024 byte werror frame larger fix allocating function heap rather stack patch dmu_send.c 2350 dmu_recv_stream 240 static without patch dmu_send.c 2350 dmu_recv_stream 1336 static signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4620,,
3946,2a8b84b747cb27a175aa3a45b8cdb293cde31886,dam Stevko <adam.stevko@gmail.com>, 2016-05-09 14:03:18 -0700,4700, openzfs 3993 4700 3993 zpool zfs support list get 4700 zpool get support option reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com ported tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 3993 openzfs issue http www.illumos.org issue 4700 openzfs commit http github.com openzfs openzfs commit c58b352 porting note removed zol favor zpool_get_prop ... boolean_t literal since openzfs functionality,,
3947,f00828e5d94d4ee386d362aee4e1b37900b1322c,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-06 10:24:06 -0700,4607, add zfs helpers.sh script add script designed facilitate tree development testing installing symlinks system refer tree helper utility helper utility must installed order exercise zfs functionality using symbolic link keeping script tree development easily modified change tracked signed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close 4607,,
3948,32c8c946ea3228de86946fdd637c85eeeff1726a,hunwei Chen <tuxoko@gmail.com>, 2016-03-25 15:21:56 -0400,4615, openzfs 6842 fix empty xattr dir causing lockup reviewed brian behlendorf behlendorf1 llnl.gov reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com ported denys rtveliashvili denys signed brian behlendorf behlendorf1 llnl.gov initial version patch applied commit 29572cc subsequently refined upstream since implementation conflict left applied openzfs issue http www.illumos.org issue 6842 openzfs commit http github.com openzfs openzfs commit 02525cd close 4615,,
3949,b3744ae611a1920aa37b44aa3b37f02c7f23a5ba,hris Williamson <chris.williamson@delphix.com>, 2016-04-19 20:45:04 -0700,4614, openzfs 6873 leak errlist authored chris williamson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com ported denys rtveliashvili denys signed brian behlendorf behlendorf1 llnl.gov return nvlist errlist nvlist_free returning openzfs issue http www.illumos.org issue 6873 openzfs commit http github.com openzfs openzfs commit ee06391 close 4614,,
3950,9f8026c802bf3ed23c66295ac4a0b07aa2cba528,enys Rtveliashvili <denys@rtveliashvili.name>, 2016-05-09 19:22:00 +0100,4613, openzfs 6879 incorrect endianness swap authored dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com ported denys rtveliashvili denys signed brian behlendorf behlendorf1 llnl.gov incorrect endianness swap instead assigning result byteswap openzfs issue http www.illumos.org issue 6879 openzfs commit http github.com openzfs openzfs commit 74c8720 close 4613,,
3951,33cf67cd9ab2edef003ad4c64d12f5a2372c8938,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-06 18:14:03 -0700,4515, wrap zfs_debug commit e0ab3ab introduced two block code needed debugging enabled block wrapped zfs_debug clarity prevent unused variable warning production build signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 4515,,
3952,d5167616bbe090d5050b4a6a4c26662c88230e14,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-06 18:13:17 -0700,4515, per vdev zap test must use zpool zdb commit e0ab3ab introduced new per vdev zap test used zpool zdb variabled test passed automated testing since utility running tree new test fail signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 4515,,
3953,ae6d0c601eb863f8275bf4ec841fbebf774c3d65,avid Quigley <dpquigl@users.noreply.github.com>, 2016-05-06 12:35:52 -0400,4600, openzfs 6672 use gethrtime 6672 use gethrtime instead ddi_get_lbolt reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed josef jeff sipek jeffpc josefsipek.net reviewed robert mustacchi joyent.com approved dan mcdonald danmcd omniti.com ported david quigley dpquigl davequigley.com signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6672 openzfs commit http github.com openzfs openzfs commit 571be5c close 4600,,
3954,4b2a3e0c9d6bcdec1fd279e9bb3b7c4628cd7ba6,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-05 16:19:12 -0700,4585, openzfs 6286 zfs internal error set large block bootfs 6286 zfs internal error set large block bootfs reviewed paul dagnelie pcd delphix.com reviewed george wilson george.wilson delphix.com reviewed andriy gapon avg freebsd.org approved robert mustacchi joyent.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6286 openzfs commit http github.com openzfs openzfs commit 6de9bb5 close 4585,,
3955,5e39e4f0b26551769e0cfc50987cbb8cdef5fbcf,avid Quigley <dpquigl@users.noreply.github.com>, 2016-05-05 19:10:46 -0400,546, add macro convert second nanosecond vice versa required infrastructure zfsonlinux zfs 4600 signed brian behlendorf behlendorf1 llnl.gov close 546,,
3956,f7c63cda908ac10ecf11e4c3314011eedfbd9e42,ony Hutter <hutter2@llnl.gov>, 2016-05-05 09:30:05 -0700,4595, openzfs 6544 incorrect comment libzfs.h offline status 6544 incorrect comment libzfs.h offline status reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com ported tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 6544 openzfs commit http github.com openzfs openzfs commit cb605c4 close 4595,,
3957,3ac2794cbf7eb6ae76311701ac755fc39616c8ac,rian Behlendorf <behlendorf1@llnl.gov>, 2016-05-05 09:27:55 -0700,4594, openzfs 5669 altroot set zpool create 5669 altroot set zpool create specified reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com approved dan mcdonald danmcd omniti.com ported brian behlendorf behlendorf1 llnl.gov openzfs issue http www.illumos.org issue 5669 openzfs commit http github.com openzfs openzfs commit c423721 close 4594,,
3958,498056ab1e8b9cf9d124b75d72e24a097bac5b90,enys Rtveliashvili <denys@rtveliashvili.name>, 2016-05-05 17:24:12 +0100,4593, taskq_create call thread_create wrong argument correct argument passed thread_create signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 4593,,
3959,e0ab3ab553e36595344d9cbdc240d380ad203b60,oe Stein <joe.stein@delphix.com>, 2016-04-11 16:16:57 -0400,4515, openzfs 6736 zfs per vdev zap 6736 zfs per vdev zap reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com reviewed brady don.brady intel.com reviewed dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6736 http github.com openzfs openzfs commit 215198a ported brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 4515,,
3960,4cd77889b684fd0dd1a0a995b692dda3db76a9ac,ikolay Borisov <n.borisov.lkml@gmail.com>, 2016-04-18 22:08:53 +0300,4538, kill znode z_gen field field duplicate inode i_generation kill signed nikolay borisov n.borisov.lkml gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4538,,
3961,ddab862d4cb860c6067b50ed2d040ac6d0f96b65,im Chase <tim@chase2k.com>, 2016-05-02 12:00:50 -0500,4554, enable pf_fstrans ioctl secpolicy callback 4571 least ioctl security policy callback call require freeing memory therefore enter zfs patch enables pf_fstrans security policy callback similarly manner enabled actual ioctl callback signed brian behlendorf behlendorf1 llnl.gov close 4554,,
3962,ef1c27117beae38fb87372b914ed9898ba7ef748,itaut Bajaryn <vitaut.bayaryn@gmail.com>, 2016-05-02 18:07:04 +0200,4580, module .gitignore add .dwo 4580 file get generated enabled linux .config signed brian behlendorf behlendorf1 llnl.gov close 4580,,
3963,874bd959f4f15b3d4b007160ee7ad3f4111dd341,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-30 12:21:51 -0700,4177, fix user namespaces uid gid mapping described torvalds linux 5f3a4a2 init_user_ns current user_ns passed conveniently init_user_ns available init credential kcred signed brian behlendorf behlendorf1 llnl.gov signed massimo maggi massimo maggi.eu close 4177,,
3964,1ab3678b5d671b4561a2d63958d56b2f7ca1b69e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-26 17:24:41 -0700,4559, add support libtirpc opensolaris libc glibc include xdr support musl libc doe favor depending bsd licensed libtirpc library adding support simple matter detecting library including header linking default libtirpc checked available used otherwise configure fall back using xdr implementation provided libc available option tirpc without tirpc used disable checking addition xdr_control function simplied handle zfss specific use case original patch stf ctrlc.hu original patch richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed signed carlo landmeter clandmeter gmail.com close 2254 close 4559,,
3965,463a8cfe2b293934edd2ee79115b20c4598353d6,lex Reece <alex@delphix.com>, 2016-04-21 11:23:37 -0700,4548, illumos 6844 detect fictional hole 6844 detect fictional hole reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed brian behlendorf behlendorf1 llnl.gov used variety place iterate hole allocated block dnode operates premise iterate blockpointers dnode open context holding reader unfortunately premise doe hold create zio dbuf pas actual block pointer indirect block dbuf later zero directly modifying state inconsistent perspective appear hole finally finish filling meantime detect hole dnode none exists able experimentally demonstrate behavior following setup create file million dbufs create thread randomly dirties block writing first block observe waiting skip hole middle file loop skip non existent hole fix ensure valid iterate indirect block dnode holding passing zio copy updating actual holding lock reference http www.illumos.org issue 6844 http github.com openzfs openzfs pull dlpx 35372 ported brian behlendorf behlendorf1 llnl.gov close 4548,,
3966,8a5fc74880251aa651306d1dbcc60715698996f0,osef 'Jeff' Sipek <jeffpc@josefsipek.net>, 2016-03-31 23:54:07 -0400,4566, illumos 6659 nvlist_free null 6659 nvlist_free null reviewed toomas soome tsoome me.com reviewed marcel telka marcel telka.sk approved robert mustacchi joyent.com reference http www.illumos.org issue 6659 http github.com illumos illumos gate commit aab83bb ported david quigley dpquigl davequigley.com signed brian behlendorf behlendorf1 llnl.gov close 4566,,
3967,16794374b37fb22c32616fe1f40ade1304628ff9,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-25 11:50:39 -0700,4560, fix call creating destroying volume order make operation synchronous expected test case signed brian behlendorf behlendorf1 llnl.gov close 4560,,
3968,ea2633ad264912788428213607f8298c0aeafec4,im Chase <tim@chase2k.com>, 2016-04-26 06:33:52 -0500,4529, clear pf_fstrans problem described 2a5d574 also applies xfs file inode fallocate method path may trigger writeback expose issue see full stack layered xfs warning emitted centos7 entering either file inode fallocate method pf_fstrans already set avoid triggering error pf_fstrans cleared reset vn_space warning xfs xfs_aops.c 982 0x58b 0x5d0 call trace 0x95 0xe0 0x1a 0x20 0x58b 0x5d0 xfs __writepage 0x17 0x40 0x251 0x530 0x51 0x80 0x60 0x80 xfs do_writepages 0x20 0x30 0xb5 0x100 0x8b 0xd0 0xf4 0x520 xfs 0x19e 0x2c0 xfs vn_space 0x3c 0x40 spl 0x207 0x260 zfs 0xad 0x2d0 zfs zio_execute 0x82 0xe0 zfs taskq_thread 0x28d 0x5a0 spl kthread 0xd7 0xf0 ret_from_fork 0x3f 0x70 signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed nikolay borisov kernel kyup.com close zfsonlinux zfs 4529,,
3969,3bf657b90c792ff4539a75d3b66593de556580c0,im Chase <tim@chase2k.com>, 2016-04-24 18:29:03 -0500,543, use vmem_free dfl_free add dfl_alloc change lost somehow e5f9a9a since array rather large need allocated vmem_zalloc via dfl_alloc freed vmem_free via dfl_free new dfl_alloc function used allocate object type order allocated vmem signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed nikolay borisov kernel kyup.com close 543,,
3970,cdd39dd2457ac57622339669db0536a580374bd3,hunwei Chen <david.chen@osnexus.com>, 2016-04-12 12:05:14 -0700,540, use kernel provided mutex owner reduce mutex footprint detect existence owner kernel mutex rely exists note linux 3.0 mutex owner type thread_info also note linux 3.18 condition owner changed config_smp  signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 540,,
3971,325414e483a7858c1d10fb30cefe5749207098f4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-20 10:17:01 -0700,3043, fix zpool import blkid device name importing pool using blkid cache device node path added list known path device result zpool import always using sdx name preference path name stored label fix issue blkid import path updated add path devid devname name label known path sanity check done ensure path refer device identified blkid signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 4523 close 3043,,
3972,b8faf0cba87f90126e591d354945c79e7e7e3c6e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-20 11:39:15 -0700,4523, disable efi_debug enable debug build disable additional efi debugging build user run debug build production extra log message cause confusion beyond log message rarely useful signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov close 4523,,
3973,2d82ea8b111103b28b8c9ad0f69dd88736248804,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-19 11:19:12 -0700,4517, use udev partition detection zfs partition block device must wait udev create device node device symlinks process take variable length time depends factor many link must created complexity rule etc complicating situation uncommon udev create remove link multiple time processing udev rule given existing scheme waiting expected partition appear name 100 reliable point udev may still remove recreate think link resulting kernel module unable open device order address function updated use libudev registered system device acknowledges fully initialized function wait fully initialized device link checked allowed settle 50ms make far likely device node exist kernel module need open system without libudev alternate updated include settle time addition kernel module updated include retry logic enoent case due improved check utility unlikely logic invoked however rare event needed prevent failure signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov signed richard laager rlaager wiktel.com close 4523 close 3708 close 4077 close 4144 close 4214 close 4517,,
3974,5b4136bd499a892f65c86af8fd39fa21e05c9148,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-13 14:50:16 -0700,4517, create unique partition label partitioning device name may specified partition internally zfs use partition name anything always set zfs however optimal udev create symlinks using name dev disk partlabel name unique link created therefore random bit value added partition label i.e zfs additional information could encoded since partition may reused might result confusion decided signed brian behlendorf behlendorf1 llnl.gov signed tony hutter hutter2 llnl.gov signed richard laager rlaager wiktel.com close 4517,,
3975,a5a370227eb0a3daf8992a38920d54eb3b7b3c25,atthew Thode <mthode@mthode.org>, 2016-03-30 18:59:15 -0500,4478, fix booting via dracut generated initramfs dracut systemd updated integrate current integration stopped working around time 4.1.13 came patch address issue get booting  thanks rudd work get dracut working letting submit behalf signed manuel amador rudd rudd rudd o.com signed matthew thode mthode mthode.org close 3605 close 4478,,
3976,232604b58e8579501c5a260ad3a7b71a239dd546,hunwei Chen <david.chen@osnexus.com>, 2016-04-21 17:19:07 -0700,4537, linux 4.5 compat use xattr_handler name acl linux 4.5 added member name xattr_handler xattr_handler match whole name rather prefix use name instead prefix otherwise kernel return einval try resolve handler also remove strcmp check xattr_handler name check signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4549 close 4537,,
3977,da5e151f207ff1bc4972ce74a3a85e442ffd5a03,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-13 08:55:35 -0700,4522, add pn_alloc pn_free function order remove have_pn_utils wrapper pn_alloc pn_free function must implemented existing illumos implementation used purpose flag argument used place wrapped have_pn_utils condition beed added back zfs_remove zfs_link function remove small point divergence zol code upstream signed brian behlendorf behlendorf1 llnl.gov close 4522,,
3978,8fc5674c522e22f0b97e4714bf5410e24d481afa,ikolay Borisov <n.borisov@siteground.com>, 2016-04-13 09:40:42 +0300,4438, rework zpool import excluded device check current zpool import code skip directory entry prefix similar system file linux core etc however mean one one zpools hosted inside file named e.g core furthermore apart string check already make zpool_open_func work regular file block device fix problem remove check since redundant leave check hpet watchdog name furthermore change check strcmp albeit safe strncmp allows device whose name prefixed hpet watchdog signed nikolay borisov kernel kyup.com signed brian behlendorf behlendorf1 llnl.gov close 4438,,
3979,98f03691a4c08f38ca4538c468e9523f8e6b24be,ed Bass <bass6@llnl.gov>, 2016-04-15 18:55:03 +0000,4520, fix zpl miswrite default posix acl commit 4967a3e introduced typo caused zpl store intended default acl access acl due caching problem may become visible filesystem remounted inode evicted cache fix typo add regression test signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4520,,
3980,4903926f892ee10ead9571334efd43e80347b6f1,olin Ian King <colin.king@canonical.com>, 2016-04-14 08:58:09 +0100,4507, fix inverted logic none elevator comparison commit cstyle resolve style issue inverted logic none elevator comparison fix make cstyle warning clean signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 4507,,
3981,edd770ebfb8e389474be41070fc72a066bbcdaa4,inshan Xiong <jinshan.xiong@intel.com>, 2016-04-12 15:27:47 -0700,4516, remove sanity check replacement test replacement test spawn process truncate file background make sure process exists second later however process may finished work exited therefore chance report false alarm patch removed sanity check signed jinshan xiong jinshan.xiong intel.com signed brian behlendorf behlendorf1 llnl.gov close 4516,,
3982,e61237961448ab1fedf7975715fac753ccc7acef,inshan Xiong <jinshan.xiong@intel.com>, 2016-04-06 09:48:10 -0700,4495, make zfs test easier run local install zfs installed make install program installed usr local zfs test script locate program zpool caused test failure fix typo help message add sanity check ksh generate useful error message signed jinshan xiong jinshan.xiong intel.com signed brian behlendorf behlendorf1 llnl.gov close 4495,,
3983,2b54cb14517b8b3877716dbe02fe75f12a47eb5e,hunwei Chen <david.chen@osnexus.com>, 2016-04-05 17:32:23 -0700,4482, add zfs test relatime add atime_003_pos test relatime twice first time success second time fail also modify atime_001_pos twice time succeed signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4482,,
3984,676007719462edf6ae1f0779252b99a0cb86b630,hunwei Chen <david.chen@osnexus.com>, 2016-04-01 13:12:06 -0700,4482, make zfs mount according relatime config dataset also enable lazytime mount.zfs signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4482,,
3985,704cd0758a1a4ecef47b0dfa097acd94c8e4f57d,hunwei Chen <david.chen@osnexus.com>, 2016-03-31 16:52:03 -0700,4482, enable lazytime semantic atime linux 4.0 introduces lazytime idea update atime delay writing disk long reasonably possible lazytime enabled dirty_inode called i_dirty_time flag whenever i_atime updated condition set z_atime_dirty write disk file closed inode evicted setattr called ideally also write whenever going updated left future improvement one thing take care allow i_atime dirty original implementation whenever modified called overwrite every thing inode cause dirty i_atime discarded fix overwrite i_atime overwrite i_atime allocating new inode zfs_rezget signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4482,,
3986,0df9673f01e8c52d882502d62789fa66efc327e2,hunwei Chen <david.chen@osnexus.com>, 2016-03-29 17:53:34 -0700,4482, fix atime handling relatime problem atime place atime inode i_atime znode z_atime handling mess huge part mess regarding atime come zfs_getattr behave inconsistently three value clear z_atime_dirty unconditionally long pas attr_atime mean every write operation update ctime mtime cause atime change written disk also write replace inode i_atime inside stale touch z_atime read write i_atime stale z_atime new stale z_atime_dirty stat zfs_getattr actually replace i_atime inside z_atime i_atime new z_atime new stale z_atime_dirty gone umount leave stale atime problem relatime relatime config inside zfs dataset interact mount flag ms_relatime well defined seems wanted relatime mount option override dataset config showing temporary zfs get time zfs set relatime would also seems want override mount option mention ms_relatime flag actually never passed zfs never really worked linux handle atime linux kernel actually handle atime completely vfs except writing disk remove atime handling zfs thing would work matter strictatime relatime noatime even o_noatime whenever vfs update i_atime notify underlying filesystem via dirty_inode also one thing note atime flag like ms_relatime flag like ms_nodev etc mount point flag rather filesystem flag since native linux filesystem mounted multiple place time different atime setting flag never passed filesystem driver patch try remove znode z_atime since gain anything remove atime handling leave vfs thing atime write dirty_inode setattr called also add file_accessed zpl_read since provided vfs_read patch ms_relatime flag effect setting dataset anything make zfstuil mount zfs ms_relatime set according setting dataset future patch signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4482,,
3987,8b1899d3fbab354dfe57b2293216a76579e5d805,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-05 12:39:37 -0700,4489, linux 4.6 compat page_cache_size removal described torvalds linux 4a2d057e macro page_cache_ size shift mask align macro originally introduced make possible add bigger chunk page cache never panned therefore removed kernel zfs updated use page_ size shift mask align macro call replaced put_page need introduce configure check interface existed long time signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4489,,
3988,63e0828c174e84ec583d34327b3fc1c5f53fa39c,rian Behlendorf <behlendorf1@llnl.gov>, 2016-04-01 08:49:19 -0700,4416, fix configure error accidentally introduced commit e4023e4 am_conditional located invoked conditionally config user case relocate top level zfs_ac_config macro along am_conditionals signed brian behlendorf behlendorf1 llnl.gov issue 4416,,
3989,f7b939bdbcd5d6fd11a638316138d1752acae78e,olin Ian King <colin.king@canonical.com>, 2016-03-30 23:00:23 +0100,4477, add support bit fs_ioc32_ get set flag compat ioctls need bit userspace compat ioctls system powerpc64 use normal compat ioctl idiom used variety file system provide support signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 4477,,
3990,e4023e42a8cb0d267870db82f75e23d4efb9fbd9,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-31 14:50:16 -0700,4416, build devname2devid libudev header available accidentally introduced commit 39fc0cb devname2devid utility depends libudev must built libudev header available accomplished am_conditional signed brian behlendorf behlendorf1 llnl.gov issue 4416,,
3991,39fc0cb5577e409f415e25d35a452b46996c08b1,on Brady <don.brady@intel.com>, 2016-03-14 10:04:21 -0600,4416, add support devid phys_path key vdev disk label foundational work zed update leaf vdev persistent device string linux platform applies dedicated leaf vdev aka whole disk updated pool create add attach import used matching device matching auto online expand replace stored leaf disk config label i.e alongside path nvp opt using env var yes example path dev sdb1 devid scsi part1 phys_path pci 0000 00.0 lun path dev mapper mpatha devid uuid mpath signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 2856 close 3978 close 4416,,
3992,bebd73f2c3822a86863e7508e7a3e2929d871113,ndriy Gapon <andriy.gapon@clusterhq.com>, 2016-03-25 16:29:35 +0200,4452, expand edquot variable result failure ksh version 93v 2014 25. appears issue ksh version 93u 2012 01. expanded version work correctly signed andriy gapon andriy.gapon clusterhq.com signed brian behlendorf behlendorf1 llnl.gov close 4452,,
3993,88cfff182432e4d1c24c877f33b47ee6cf109eee,avel Boldin <boldin.pavel@gmail.com>, 2016-03-28 01:28:32 +0300,4440, zfs_main fix zfs userspace squashing unresolved entry zfs userspace squash entry unresolved numeric value single output entry due comparsion always made string name empty case unresolved fix falling numerical comparison either one string value found compare numerical value name resolved signed pavel boldin boldin.pavel gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4440,,
3994,726c4a25659bfc0b3458da48a115dad67ddcb2ab,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-01 15:45:43 +0100,4449, remove complicated libspl assert wrapper effectively provide version assert verify use user space minimizes dependency aligns user space assertion handling used kernel signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4449,,
3995,e3e7cf6026f0761c155ae7920b03fb76c7ad5df8,HE <git@dehacked.net>, 2016-03-27 15:58:27 -0400,4465, gcc build error wbool compare metaslab.c debugging enabled recent version gcc tested 5.3.0 dva_set_gang dva flag fails assertion cause comparison technically boolean integer signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 4465,,
3996,c35b188246899714c156a52fdea179eab3717e92,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-26 14:17:26 -0700,4450, fix zpool_scrub_ test case zpool_scrub_002 zpool_scrub_003 zpool_scrub_004 test case fail reliably running small pool fast storage occurs scrub resilver operation completes subsequent command run one second delay added zio order ensure scrub resilver operation run least several second signed brian behlendorf behlendorf1 llnl.gov close 4450,,
3997,967798d04afc801e70bb12590e8325a32fb998dd,arlo Landmeter <clandmeter@gmail.com>, 2016-03-01 15:23:09 +0100,4453, use correct macro include backtrace execinfo.h backtrace gnu extension provided glibc gcc see http www.gnu.org software libc manual html_mono libc.html backtraces signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4453,,
3998,1ad32f0a18657b3905bb127463e1a0653e0ef4ad,arlo Landmeter <clandmeter@gmail.com>, 2016-03-25 13:21:53 +0100,4459, move hrtime_t timestruc_t timespec_t hrtime_t timestruc_t timespec_t originally included sys time.h let move longlong_t defined standard change long long signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4459,,
3999,43148eaef2819eeda68e6846c03f0bd4672245a7,arlo Landmeter <clandmeter@gmail.com>, 2016-03-01 16:23:12 +0100,4458, set _date_fmt defined libspl timestamp.c signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4458,,
4000,1a01c207cbf12a4a7934e327b94104ed4f8edb47,arlo Landmeter <clandmeter@gmail.com>, 2016-03-01 15:32:52 +0100,4454, ensure correct return value type compiling musl libc return type incorrect signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4454,,
4001,6d723925cf7d4d489f87d55c4907cbb9e6257196,arlo Landmeter <clandmeter@gmail.com>, 2016-03-25 20:47:03 +0100,4456, add missing fcntl.h includes mount_zfs.c needed musl libc signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4456,,
4002,fc46c795e1b5474569eab71e038dfbd03a30fc31,arlo Landmeter <clandmeter@gmail.com>, 2016-03-01 15:56:26 +0100,4454, include sys types.h devid.h needed musl libc signed carlo landmeter clandmeter gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4454,,
4003,1c0120832c31f6424a6179e17f072612e448355b,ichard Laager <rlaager@wiktel.com>, 2016-03-28 17:13:42 -0500,4471, correct typo doc signed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov close 4471,,
4004,9c13b489879beadc3eab04ebf16434477b3081db,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-25 12:40:58 -0700,4441, zloop.sh requires bash zloop.sh script requires bash require improvement compatible alternative dash resolve ztest failure observed ubuntu automated tested signed brian behlendorf behlendorf1 llnl.gov close 4441,,
4005,72a780cd1ceb94ee4fa226bf9a8948f3dd0e2d95,ndriy Gapon <andriy.gapon@clusterhq.com>, 2016-03-25 16:32:11 +0200,4446, write_dirs set_partition expects zero based partition indeces ... despite partition name based based signed andriy gapon andriy.gapon clusterhq.com signed brian behlendorf behlendorf1 llnl.gov close 4446,,
4006,647cb8545d92fab4cbbf2ffb94a458c1fced68b3,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-25 11:51:01 -0700, , zfs_copies do_vol_test must wait device occasionally zfs_copies_ test rely do_vol_test fail udev yet created minor device wait signed brian behlendorf behlendorf1 llnl.gov,,
4007,541a09016d652d92a9a665a3e62d83907b8b9941,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-22 18:08:59 -0700,4441, add zloop.sh test script add chris williamson new zloop script may intergated zols automated testing original script may found openzfs build repository github minor modification made script run directly zol source tree installed package additionally updated use gdb instead mdb extact debugging information core dump reference http github.com openzfs openzfs build commit 7fb5d8b http github.com openzfs openzfs build blob master ansible role openzfs jenkins slave file usr local zloop.sh signed brian behlendorf behlendorf1 llnl.gov close 4441,,
4008,505d9655c9e759a145b4812c654c51c34dbe3425,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-17 15:32:33 -0700,4331, fix zdb zhack thread_init issue caused calling thread_init thread_fini multiple time resulting kthread_key invalid resolve issue explicit call thread_init thread_fini required zpool command moved command consumer zdb zhack perform initialized kernel_init kernel_fini resolving issue allows multiple additional test case enabled signed brian behlendorf behlendorf1 llnl.gov signed signed chunwei chen tuxoko gmail.com signed tim chase tim chase2k.com close 4331,,
4009,fc0c72b1670156622af26562030e84bd56d4cdfb,vozden Neskovic <neskovic@gmail.com>, 2016-02-29 19:42:27 +0100,4381, support vectorized algorithm x86 initial support x86 vectorized implementation zfs parity checksum algorithm compilation phase configure step check toolchain support relevant instruction set implementation must ensure code passed compiler relevant instruction set supported purpose following new defines provided instruction set supported have_sse have_sse2 have_sse3 have_ssse3 have_sse4_1 have_sse4_2 have_avx have_avx2 detecting instruction set used runtime following function provided include linux simd_x86.h           function called module load initialization safe use user kernel space implementation using single instruction set compiler runtime support relevant instruction set checked kernel fpu method kfpu_begin kfpu_end use __get_cpuid_max __cpuid_count cpuid.h gcc clang support also handle ebx register case used pic code signed gvozden neskovic neskovic gmail.com signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4381,,
4010,e853ba351935135487621f79211e87d5f2e39205,ichard Yao <ryao@gentoo.org>, 2016-03-15 13:28:07 -0400,4426, cleanup linking noticed code review zfsonlinux zfs 4385 author commit peppered various makefile.am file tirpc_libs putting lib libspl makefile.am sufficed upon examination seems copied zlib also bit ldl unfortunately wrong let fix set good example future contributor addition multiple luuid passed compiler ac_check_lib add libs somewhat annoying see switch ac_search_libs avoid consistent recommendation use ac_search_libs ac_check_lib autotools upstream http www.gnu.org software autoconf manual autoconf 2.66 html_node libraries.html ideal world would translate improvement elf dt_needed entry case couple bug libtool first bug cause libtool overlink using static link dependency dynamic linking http wiki.mageia.org libtool_issues workaround pas needed ldflags lead second bug libtool pass ldflags library specified honor needed library specified http 2011 asneeded doesnt work expected library autotools project possible workarounds second bug one either patch compiler spec file specify needed pas needed via like gcc needed specified early another patch ltmain.sh like gentoo doe http repo gentoo.git tree eclass elt patch needed without one workarounds cleanup provides benefit term dt_needed entry generation still improvement nicely simplifies code encouraging good habit patching autotools script signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4426,,
4011,a1bc34c0a7929130577e4c9dd418845674dd35c3,imitri John Ledkov <xnox@ubuntu.com>, 2016-03-16 21:53:20 +0000,4425, add support s390 signed dimitri john ledkov xnox ubuntu.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4425,,
4012,99d0a9c39ea655fe4545bee31235cd91f2908763,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-17 09:47:54 -0700, , disable test case test case add zvol vdev existing pool use case currently known racy signed brian behlendorf behlendorf1 llnl.gov,,
4013,224817e2a81912b46453a96b9eec4804856c801b,imitri John Ledkov <xnox@ubuntu.com>, 2016-03-16 21:32:08 +0000,537, add support s390 signed dimitri john ledkov xnox ubuntu.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 537,,
4014,7bb5d92de8c4d795e9b393aa5ea9c9ad3e43b199,im Chase <tim@onlight.com>, 2016-02-08 13:20:05 -0600,530, allow spawning new thread tq_noqueue dispatch dynamic taskq tq_noqueue dispatch done dynamic taskq allow another thread spawned cause tq_noqueue behave similarly doe non dynamic taskqs add support tq_noqueue signed tim chase tim onlight.com signed brian behlendorf behlendorf1 llnl.gov close 530,,
4015,6bb24f4dc7b7267699e3c3a4ca1ca062fe564b9e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-01 15:23:09 -0700,1534, add zfs test suite add zfs test suite test runner framework illumos continuation work done turbo fredriksson port zfs test suite linux work originally conceived stand alone project integrating directly zol source tree several advantage allows zfs test suite packaged zfs test package facilitates easy integration testing user locally run zfs test suite validate zfs testing done dedicated test system zfs test suite current form destructive allows zfs test suite run directly zol source tree enabled developer iterate quickly development developer easily add modify test framework feature added functionality changed test always sync implementation full documentation run zfs test suite available test readme.md file warning test suite designed run dedicated test system make modification system including limited following adding new user adding new group modifying following proc file proc sys kernel core_pattern proc sys kernel core_uses_pid creating directory note test case expected pas default test case disabled failure primarily due assumption made illumos invalid linux updating test case done generic way possible patch submitted back upstream existing library function updated linux aware following function variable added function is_linux used wrap linux specific section wait block device added dev variable linux illumos zvol_devdir dev zvol dev zvol dsk zvol_rdevdir dev zvol dev zvol rdsk dev_dskdir dev dev dsk dev_rdskdir dev dev rdsk ext2 ufs many disabled test case fail zfs zpool destroy return ebusy largely cause asynchronous nature device handling linux expected impacted test case need updated handle several test case disabled trigger deadlock primary example recursively create zpools within zpools test disabled root issue addressed illumos specific utility mkfile added test zfs test cmd directory custom program required test script also added selinux either permissive mode disabled running test test case updated conform standard policy redundant test functionality removed zfault.sh existing test script zconfig.sh migrated use framework consistency ease testing disk environment variable currently support loopback device zfs test suite expects partition named etc support must added generate correct partition name based device location name zfs test suite part illumos code base http github.com illumos illumos gate tree master usr src test original patch turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov signed olaf faaland faaland1 llnl.gov close close 1534,,
4016,887d1e60ef1f20a1b13e7c7b0d208f10b13b9cbe,lex Wilson <alex.wilson@joyent.com>, 2016-03-12 00:25:32 +0100,4406, illumos 6681 zfs list burning lot time dodefault via dsl_prop_ 6681 zfs list burning lot time dodefault via dsl_prop_ reviewed patrick mooney patrick.mooney joyent.com reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 6681 http github.com illumos illumos gate commit d09e447 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4406,,
4017,d76d9c696a79b07a4d874f20855d8828d84f03f6,ordan Bobic <gordan@redsleeve.org>, 2016-03-15 17:17:51 +0000,4420, fix aarch64 compilation sys param.h depends type defined sys types.h hrtime_t timestruc_t signed gordan bobic gordan redsleeve.org signed christopher morrone morrone2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4420,,
4018,c352ec27d5c5ecea8f6af066258dfd106085eaac,aul Dagnelie <pcd@delphix.com>, 2016-02-25 20:45:19 -0500,4050, illumos 6370 zfs send fails transmit hole 6370 zfs send fails transmit hole reviewed matthew ahrens mahrens delphix.com reviewed chris williamson delphix.com reviewed stefan ring stefanrin gmail.com reviewed steven burgess sburgess datto.com reviewed arne jansen sensille gmx.net approved robert mustacchi joyent.com reference http www.illumos.org issue 6370 http github.com illumos illumos gate commit 286ef71 certain circumstance zfs send incremental send produce stream result incorrect sparse file content target problem manifest region received file sparse read zero filled actually contain data file deleted happened share file object note happen filesystems zvols free thus reuse object note happen since incremental source fromsnap file deleted another file created new file sparse i.e area never written implicitly zero filled suspect introduced 4370 applies hole_birth feature enabled made worse 5243 applies hole_birth feature disabled never send hole bug caused hole birth feature object deleted replaced hole object birth time zero however zfs send tell hole new since file replaced send incremental result end invalid data receive incremental send stream short term fix always send hole birth time unless zvol dataset guarantee object reused ported steven burgess sburgess datto.com signed brian behlendorf behlendorf1 llnl.gov close 4369 close 4050,,
4019,a9977b37ca7bd27ff28de435f8666e253ff6330e,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-17 10:46:46 -0700,2274, relax mbr partition scanning requirement checking whole disk see safely added pool variety check done one check attempt determine partition information scan partition existing filesystems since zol contains efi library partition scanning easy gpt partitioned disk however non gpt partitioned disk mbr ebr thing bit harder lack convenient library mean non gpt partitioned disk partition checked reason default behavior require force option example invalid vdev specification use override following error dev vdb doe contain gpt label may contain partition information mbr however practice requiring force option case counter intuitively safe reason first error returned passing force option suppress first warning potentially others aware therefore patch inverts default behavior non gpt formated disk unformatted mbr ebr etc gpt table detected file system detected provided block device assumed block device safe use longer term would nice see mbr ebr scanning added utility fairly straight forward however day somewhat critical linux default gpt partition table device 2tb larger signed brian behlendorf behlendorf1 llnl.gov close 2660 close 2274,,
4020,a6ae97caed620b0e9e0575346062c751f6f15483,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-09 14:20:48 -0800,534, add rw_tryupgrade implementation rw_tryupgrade behaves slightly differently counterpart platform drop rw_reader lock acquires rw_writer lock leaving small window lock held platform lock never released upgrade process necessary linux kernel doe provide upgrade function currently caller zfs code change behavior problem fact case code already written upgrade fails rw_reader lock dropped caller block waiting acquire lock rw_writer signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed matthew thode prometheanfire gentoo.org close zfsonlinux zfs 4388 close 534,,
4021,1ee159f423b5eb3c4646b0ba2dd0fb359503ba90,oris Protopopov <boris.protopopov@actifio.com>, 2015-09-23 12:34:51 -0400,3681, fix lock order inversion zvol_open zfsonlinux issue 3681 lock order inversion zvol_open dsl_pool_sync ... remove trylock longer needed zvol minor operation performed separate context prior locking state longer held bdev bd_mutex zfs_state_lock might taken code path originating zvol minor operation callback signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 3681,,
4022,a0bd735adb1b1eb81fef10b4db102ee051c4d4ff,oris Protopopov <boris.protopopov@actifio.com>, 2014-03-22 05:07:14 -0400,3681, add support asynchronous zvol minor operation zfsonlinux issue 2217 zvol minor operation check snapdev property traversing snapshot dataset zfsonlinux issue 3681 lock order inversion zvol_open dsl_pool_sync ... create per pool zvol taskq asynchronous zvol task key design decision aware taskq must single threaded ensure task always processed order dispatched taskq per pool order keep pool independent way one pool suspended impact another preferred location dispatch zvol minor task sync task context easy access spa_t minimal error handling required sync task must succeed support asynchronous zvol minor operation address issue 3681 signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 2217 close 3678 close 3681,,
4023,47f98247814fff50d02ddc0772197842c57cdc3a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-10 09:10:29 -0800, , remove rpm package restriction zfs linux regularly tested arm ppc ppc64 i686 x86_64 architecture given artificial architecture restriction packaging removed signed brian behlendorf behlendorf1 llnl.gov,,
4024,eb0856779f7b57162c9179f238104f6d6e150745,rian Behlendorf <behlendorf1@llnl.gov>, 2016-03-10 09:14:27 -0800, , remove rpm package restriction zfs linux regularly tested arm ppc ppc64 i686 x86_64 architecture given artificial architecture restriction packaging removed signed brian behlendorf behlendorf1 llnl.gov,,
4025,f764edf01634444e1615a0350834ffe568f7f82f,im Chase <tim@chase2k.com>, 2016-03-07 07:35:29 -0600,4393, change km_sleep tq_sleep spa_deadman since evaluate zero semi cosmetic change latter proper value use argument  signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4393,,
4026,95003f709859fd104aad258e56bcc4dc5c8cfcf0,hijs Cramer <thijs.cramer@gmail.com>, 2016-02-04 22:34:49 +0100,3892, updated path scan importing zpool added partlabel partuuid default device search path made made device name label preferable signed thijs cramer thijs.cramer gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3892,,
4027,7d11e37e5502e4dc473a9fe073779823d6ca2495,rian Behlendorf <behlendorf1@llnl.gov>, 2016-02-19 15:43:43 -0800,2448, require libblkid historically libblkid support detected part configure optionally enabled done time support detecting zfs pool vdevs added libblkid updated package yet part many distribution longer case reasonably current distribution ship version libblkid detect zfs pool vdevs patch make libblkid mandatory build time libblkid preferred method scanning zfs pool distribution include modern version libblkid change behavior explicitly scanning default search path still supported enabled command line option additionally making libblkid mandatory mean zpool create command reliably detect specified device existing non zfs filesystem ext4 xfs print warning signed brian behlendorf behlendorf1 llnl.gov close 2448,,
4028,048bb5bd4950b9cb5368ed93d273f0f36e439122,hris Dunlap <cdunlap@llnl.gov>, 2016-03-01 12:23:55 -0800,4384, ensure zed leaf fds open zed dev null open onto temporary file descriptor dup onto stdin stdout stderr file descriptor already open start function temporary file descriptor fall within range inadvertently closed function clean commit add check prevent inadvertently closing presumably temporary file descriptor signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4384,,
4029,272be6834c3989f13c51f65eba6ec1d776a0ad43,ony Hutter <hutter2@llnl.gov>, 2016-03-02 12:57:06 -0800,4387, fix zpool iostat bandwidth ops calculation subtracts old bandwidth ops stats new stats calculate bandwidth ops number zpool iostat however txg number change stats incorrectly assign null old stats cause use zero old bandwidth ops number resulting inaccurate calculation fix allows calculation happen even txgs change signed tony hutter hutter2 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4387,,
4030,c53fb0113cc372ed8df3c08f59f83cb3ceee849b,arlo Landmeter <clandmeter@gmail.com>, 2016-03-01 16:36:28 +0100,4386, add support alpine linux alpine linux gentoo use openrc share logic signed carlo landmeter clandmeter gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4386,,
4031,513168abd267f84ebcb688b4e1d42a2abd4fedce,b-oe <arkadiusz.bubala@open-e.com>, 2016-02-26 08:33:44 +0100,4116, make zvol update volsize operation synchronous race condition new transaction group added list zap_update meanwhile dirty data synchronized receive process cause executed finally dirty data going synchronized synchronization end null pointer dereference error signed open e.com signed brian behlendorf behlendorf1 llnl.gov close 4116,,
4032,9f500936c82137ef3a57c53013894f622dcec14e,mh <smh@FreeBSD.org>, 2016-02-12 20:47:22 -0500,4334, freebsd r256956 improve zfs way mirror read performance using load locality information existing algorithm selects preferred leaf vdev based offset zio request modulo number member mirror assumes device equal performance spreading request randomly drive sufficient saturate practice result leaf vdevs utilized new algorithm take following additional factor load vdevs number outstanding request locality last queued new request within locality calculation additional knowledge underlying vdev considered device backing vdev rotating medium device result performance increase across board well significant increase predominantly streaming load configuration evenly performing device following result setup way mirror ssd basic test running multiple parrallel pre fetch disabled stripe balanced default read 15360mb using 1048576 reader took 161 second load balanced zfslinux read 15360mb using 1048576 reader took 297 second load balanced locality freebsd read 15360mb using 1048576 reader took second 284 pre fetch enabled stripe balanced default read 15360mb using 1048576 reader took second 168 load balanced zfslinux read 15360mb using 1048576 reader took 108 second 142 load balanced locality freebsd read 15360mb using 1048576 reader took second 320 addition performance change code also restructured help justin gibbs provide logical flow also ensures vdevs load calculated set valid candidate following additional sysctls added allow administrator tune behaviour load algorithm      change based work started zfsonlinux developer http github.com zfsonlinux zfs pull 1487 reviewed gibbs mav mfc week sponsored multiplay reference http github.com freebsd freebsd 5c7a6f5d http github.com freebsd freebsd 31b7f68d http github.com freebsd freebsd e186f564 performance testing http github.com zfsonlinux zfs pull 4334 issuecomment 189057141 porting note tunables adjusted zol style name code modified use zol vd_nonrot fix done make cstyle.pl happy merge conflict handled manually freebsd freebsd collegue andriy gapon included applied perfectly added cstyle regression replaces entirely typo corrected say description new tunables added man man5 zfs module parameters.5 ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4334,,
4033,a77f29f93c8d016f17d9b77f39662e311774aaae,rian Behlendorf <behlendorf1@llnl.gov>, 2016-02-26 08:57:30 -0800,4368, change full path subcommand flag commit d2f3e29 introduced option output full path vdevs multiple zpool subcommands merged conflict flag letter however certain conflict parsable flag used subcommands therefore changed avoid signed brian behlendorf behlendorf1 llnl.gov close 4368,,
4034,d2f3e292dccab23e47ade3c67677a10f353b9e85,ichard Yao <ryao@gentoo.org>, 2013-12-29 13:40:46 -0500,4341, add glp zpool subcommands alt vdev name following option added zpool add iostat list status split subcommands default behavior modified zfs display vdev guids instead normal short device name guids used place device name zpool detach offâ line remove replace command display real path vdevs resolving symbolic link used lookup current block device name regardless dev disk path used open display full path vdevs instead last component path used conjunction flag behavior may also enabled using following environment variable    change based worked originally started richard yao add option extended ilovezfs add option openzfsonosx change merged factored option added extended relevant zpool subcommands original patch richard yao ryao gentoo.org extended ilovezfs ilovezfs icloud.com extended brian behlendorf behlendorf1 llnl.gov signed ilovezfs ilovezfs icloud.com signed brian behlendorf behlendorf1 llnl.gov close 2011 close 4341,,
4035,18d2f56176494a14437f18cd8482d151d634cc18,om Caputi <tcaputi@datto.com>, 2016-02-18 18:24:29 -0500,533, change support zfs encryption unused modlinkage struct removed ntohll function added signed tom caputi tcaputi datto.com signed brian behlendorf behlendorf1 llnl.gov close 533,,
4036,e79a6bacc6666233e109513b614d19d9d7742820,rischa Zengel <github.zfsonlinux@zengel.info>, 2016-02-19 19:20:55 +0100,4350, add nfs kernel server debian debian based system use nfs kernel server service name list nfs server.service nfs kernel server.service service work multiple distribution signed grischa zengel zengel.info signed brian behlendorf behlendorf1 llnl.gov close 4350,,
4037,8a09d5fd463120ee5d527b4d40d029b37a0b8d6e,rian Behlendorf <behlendorf1@llnl.gov>, 2016-02-10 10:42:01 -0800,4323, add tunable set limit largest compressed block written l2arc device default limit set 16m change behavior signed brian behlendorf behlendorf1 llnl.gov signed richard elling richard.elling signed tim chase tim chase2k.com close 4323,,
4038,5428dc51fb55145fbac1c142402dafc11d1e7d28,oris Protopopov <boris.protopopov@actifio.com>, 2016-02-16 14:52:55 -0500,4344, make zvol minor functionality robust close race window zvol_open prevent removal zvol_state first open code path move call zvol_state_lock make sure called invoked positive zv_open_count skip opened zvols removing minor set private_data null zvols use whose minor removed indicate zvol_open state gone skip opened zvols renaming minor avoid modifying zv_name might use e.g zvol_ioctl drop zvol_state_lock calling add_disk creating minor avoid deadlock zvol_open wrap dmu_objset_find spl_fstran_mark unmark signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 4344,,
4039,19a47cb1c2be6da9b9d4a395a7afc07da4813a5f,ichard Yao <ryao@gentoo.org>, 2016-02-05 23:10:13 -0500,4316, call zvol_read difference dmu_read_uio former take hold latter existing hold zfs_read zpl use analogous zvol_write use apparent reason inherited zvol_read function opensolaris doe dmu_read_uio illumos gate also still dmu_read_uio day let switch performant signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com close 4316,,
4040,a765a34a3142a1dcedd256e076a54e6ae61953ca,ichard Yao <ryao@gentoo.org>, 2016-02-05 20:36:07 -0500,4316, clean zvol request processing pas uio fix porting regression illumos gate zvol_read zvol_write passed uio_t rather bio_t since translating bio uio might well unify logic code similar illumos counterpart time fix regression occurred versus original code illumos gate refactor zvol_write take uio also correct following problem dnode_hold already hold would attempt send writes exceeded dmu_max_access dmu could call zil_commit twice case linux write function send flush aggregate flush write synchronous write occurred flush effectively flushed twice need zvol_read also suffers first two problem platform suffer first leave second patch discrete patch cherry pick signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com close 4316,,
4041,c7e7ec1997d65ea173d943289feb4d07d414c905,laf Faaland <faaland1@llnl.gov>, 2016-01-20 14:01:28 -0800,4251, make configure error clearer failing find spl signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 4251,,
4042,093911f1945b5c164a45bb077103283dafdcae0c,hunwei Chen <david.chen@osnexus.com>, 2016-01-22 12:23:55 -0800,4257, remove wrong assert annotate_ecksum using large block like uint16_max qwords one block assert would also possible histogram overflow cap uint16_max prevent signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4257,,
4043,0b43696e6676391e5bee8ba49e76e599bac1d89d,ichard Yao <ryao@gentoo.org>, 2014-07-11 18:36:28 -0400,372, need provide cryptographic strength entropy perf profiling zvol revealed system spent 3.16 time spl consumer need cryptographic strength entropy reduce overhead changing implementation utilize fast prng linux kernel export suitable prng function exported get_random_int linux 3.10. could implement autotools check use available even try access symbol older kernel exported using fact exported newer one justification instead implement pseudo random data generator purpose written one based 128 bit pseudo random number generator proposed paper sebastiano vigna based work late george marsaglia http ftp paper profiling benchmark earlier variant patch used slightly different generator roughly number instruction author showed time spent dropped 0.06 factor improvement particular generator algorithm also well known fast http speed benchmark number state run 1.12ns bit 7.14 gbps throughput intel core 4770 presumably single threaded context using manner probably reach level performance fairly high many time higher linux function use run 16.3 intel xeon 1276v3 processor measured using dev urandom also putting generator seed per cpu variable allows eliminate overhead spin lock cpu memory barrier numa friendly could alternatively modified consumer use something like gethrtime suggested matthew ahrens tim chase potential problem approach avoids switching gethrtime hot code path today requires diverging illumos gate doe nothing potential future patch illumos gate call slow different hot code path reimplementing per cpu prng avoids thing entirely mean work future looking code implement gethrtime think unlikely faster per cpu prng implementation would best something fast point revisiting performance perspective gethrtime vary behavior system system based kernel version architecture clock source comparison per cpu prng line code behave consistently across system regardless kernel version system architecture machine clock source unlikely would ever need revisit per cpu prng said gethrtime gethrtime cpu memory barrier maybe atomic instruction depending clock source replacing gethrtime hot code path could still require future person working numa scalability reimplement anyway per cpu prng would virtue using neither cpu memory barrier atomic instruction note check various clock source presence atomic instruction simply much code read given drawback versus per cpu prng point certain heard instance poor quality pseudo random number caused problem hpc code way took year identify remedied switching higher quality source pseudo random number filesystems different hpc code think impossible instance poor quality pseudo random number cause problem opting well studied prng algorithm pass test statistical randomness changing caller use gethrtime bypass need think whether poor quality pseudo random number cause problem statistical quality number gethrtime gethrtime call getrawmonotonic seqlocks probably huge issue anyone using kgdb would never able step seqlock critical section problem either per cpu prng http wiki seqlock downside see code memory requirement nr_cpus versus current code gethrtime problem seed use 64kb memory high end i.e nr_cpu 4096 byte memory low end i.e nr_cpu either case use hundred byte code text especially since spl_rand_jump inlined spl_random_init removed early boot part freeing unused kernel memory either case memory requirement minuscule signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 372,,
4044,eea9309423d577d62cf62d1f98444e22e264ef15,rian Behlendorf <behlendorf1@llnl.gov>, 2016-02-05 18:41:22 -0500,4312, prevent zpool_find_vdev truncating vdev path extracting token string strtok allowed modify passed buffer therefore function must make copy passed string passing strtok signed brian behlendorf behlendorf1 llnl.gov signed brady don.brady intel.com close 4312,,
4045,6b42ea85903b5d96eddbe364e71636e6802d8da0,aul Dagnelie <pcd@delphix.com>, 2016-02-05 13:47:48 -0800,5809, illumos 5809 blowaway full receive pool cause kernel panic 5809 blowaway full receive pool cause kernel panic reviewed matthew ahrens mahrens delphix.com reviewed alex reece alex delphix.com reviewed andrew freebsd.org approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5809 http github.com illumos illumos gate commit f40b29c ported brian behlendorf behlendorf1 llnl.gov,,
4046,8e4c5c9a9406f4708f2f05ab711a82c0465a0ebb,ohn Wren Kennedy <john.kennedy@delphix.com>, 2016-02-05 13:31:34 -0800,5767, illumos 5767 fix several problem zfs test suite 5767 fix several problem zfs test suite reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5767 http github.com illumos illumos gate commit 52244c0 porting note update zpool_main.c kept zfs test suite currently part zol source tree test suite updated include latest version test running every commit fix zpool list output ported brian behlendorf behlendorf1 llnl.gov,,
4047,8f3b403a73fa9b1db06050edf737e1f051b05070,hunwei Chen <david.chen@osnexus.com>, 2016-01-27 16:55:14 -0800,529, allow kicking taskq spawn thread patch add module parameter spl_taskq_kick writing non zero value scan taskq taskq contains task pending second forced spawn new thread use emergency recovery deadlock general solution signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 529,,
4048,007595564ea8e28ca2e91e523f744821d021c465,oshua M. Clulow <josh@sysmgr.org>, 2016-01-30 21:20:58 +0100,4448, illumos 4448 zfs diff misprint unicode character 4448 zfs diff misprint unicode character reviewed igor kozhukhov ikozhukhov gmail.com reviewed toomas soome tsoome me.com approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 4448 http github.com illumos illumos gate commit b211eb9 porting note lib libzfs libzfs_diff.c 38145d6 ensure zfs diff print unicode safely 141b638 change digit octal escape digit one ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4049,e989f19cba2beffb03351842c2da1409f68e4466,im Chase <tim@chase2k.com>, 2016-02-03 10:07:34 -0600,4304, correctly parse flag argument currently flag take argument offset block blkptr decoded index flag string needed updated parsing argument signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4304,,
4050,7c9abfa7ab0bc88e059800c6a5f8d2c2ebb62588,ary Mills <gary_mills@fastmail.fm>, 2016-02-02 16:23:21 -0800,6537, illumos 6537 panic zpool scrub debug kernel 6537 panic zpool scrub debug kernel reviewed steve gonczi gonczi comcast.net reviewed dan mcdonald danmcd omniti.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed matthew ahrens mahrens delphix.com approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 6537 http github.com illumos illumos gate commit 8c04a1f ported brian behlendorf behlendorf1 llnl.gov,,
4051,a4d179efa98f7fd3a54d2cf056b1ab3d86f14d50,an McDonald <danmcd@omniti.com>, 2016-02-02 16:34:23 -0800,6096, illumos 6096 need cleanup better 6096 need cleanup better reviewed matthew ahrens mahrens delphix.com reviewed gordon ross gordon.w.ross gmail.com reviewed george wilson gwilson zfsmail.com approved robert mustacchi joyent.com reference http www.illumos.org issue 6096 http github.com illumos illumos gate commit 8f5190a5 ported brian behlendorf behlendorf1 llnl.gov,,
4052,b77222c87333f67c29ce954a59ba8cbe8c713c3f,atthew Ahrens <mahrens@delphix.com>, 2016-01-30 21:40:28 +0100,6450, illumos 6450 scrub resilver unnecessarily traverse snapshot 6450 scrub resilver unnecessarily traverse snapshot created scrub started reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed richard elling richard.elling approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 6450 http github.com illumos illumos gate commit 38d6103 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4053,9d36cdb65089954baf649a8963f2129654c0b0b2,ichard Sharpe <rsharpe@samba.org>, 2016-01-24 11:36:51 -0800,4243," handling negative dentries file system case insensitive file system must avoid creating negative entry dentry cache must also pas fignorecase zfs_lookup special file handled correctly must also prevent negative dentries created file unlinked tested running fsstress ltp loop process 10,000 ops also tested printks removed ensure lookup come zpl_lookup negative exist test file.txt touch file.txt file.txt ensure error touch file.txt file.txt file.txt ensure last show log message showing lookup went way zpl_lookup thanks tuxoko helping get correct signed richard sharpe gmail.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4243",,
4054,4b9ed698b4838a36daa591d08728a692095f8f01,orgen Lundman <lundman@lundman.net>, 2016-01-26 18:02:04 -0800,6527, illumos 6527 possible access beyond end string zpool comment 6527 possible access beyond end string zpool comment reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 6527 http github.com illumos illumos gate commit 2bd7a8d ported brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com,,
4055,e56766360bd392bf9b8e5b9c2285ed35e1a066ea,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-26 17:54:45 -0800,6495, illumos 6495 fix mutex leak 6495 fix mutex leak reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved albert lee trisk omniti.com reference http www.illumos.org issue 6495 http github.com illumos illumos gate commit 2bad225 ported signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com,,
4056,b6fcb792ca2dad7fb2d190efa416ad8b718675b4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-26 17:27:46 -0800,6414, illumos 6414 could simpler 6414 could simpler reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reference http www.illumos.org issue 6414 http github.com illumos illumos gate commit eb5bb58 ported brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com,,
4057,1a04bab34808694f3bf1cef3dc208c9499d103aa,imon Klinkert <simon.klinkert@gmail.com>, 2016-01-22 16:00:59 -0800,6334, llumos 6334 unlink file quota 6334 unlink file quota reviewed matthew ahrens mahrens delphix.com reviewed toomas soome tsoome me.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6334 http github.com illumos illumos gate commit 6575bca ported brian behlendorf behlendorf1 llnl.gov,,
4058,a966c5640e432f723753e63354394406a7c3dcf8,ernelOfTruth <kerneloftruth@gmail.com>, 2015-08-21 03:43:10 +0200, , reintroduce zfs_remove synchronous deletes reintroduce slightly adapted version illumos logic synchronous unlinks basic idea file smaller 20480 block deleted synchronously unlinking larger file handled asynchronously minimize impact caller accomplish iput responsible calling linux called delete_now path otherwise zfs_async_iput used allows last reference dropped taskq thread effectively making removal asynchronous porting note add module option performance analysis default value upstream reducing value mean smaller file unlinked asynchronously like large file occurrence zfsvfs change zsb ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4059,460a021391d32b7f2e9eb05a9a01946714174e3b,an McDonald <danmcd@nexenta.com>, 2015-08-02 08:01:14 -0500, , log zvol truncate discard operation comment zvol_discard suggested discard operation could logged zil port relevant code nexenta added 701 unmap support comstar attributed author commit reference http github.com nexenta illumos nexenta commit b77b923 http github.com zfsonlinux zfs blob 089fa91b module zfs zvol.c l637 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4060,d112232f5ec4b25e8446f9a2430d1a63908e6e5a,hip Parker <aparker@enthought.com>, 2016-01-25 19:13:50 -0600,526, ensure spl occurs core update copy builtin may run multiple time kernel source tree change make sed discriminating ensure spl occurs core signed chip parker aparker enthought.com signed brian behlendorf behlendorf1 llnl.gov close 526,,
4061,d93b45aefc74b9c345ba3cdf3a227ee979a990cd,hristian Neukirchen <chneukirchen@gmail.com>, 2016-01-23 21:37:35 +0100,4222, mount.zfs use getopt_long instead getopt guarantee permutation argv mount.zfs called convention util linux argument last i.e mount.zfs dataset mountpoint option problem glibc since gnu getopt reorder argument however alternative libc musl libc glibc posixly_correct set permute argv fail parse option use getopt_long musl permute argument signed christian neukirchen chneukirchen gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4222,,
4062,91d888437f729e0dce042d49b36063affb4f3af9,atthew Ahrens <mahrens@delphix.com>, 2016-01-22 17:06:14 -0800,6451, illumos 6451 ztest fails due checksum error 6451 ztest fails due checksum error reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed jorgen lundman lundman lundman.net approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6451 http github.com illumos illumos gate commit f9eb9fd ported brian behlendorf behlendorf1 llnl.gov,,
4063,ba5ad9a48d720c5d13e1b70e779d8e3af7199195,eorge Wilson <george.wilson@delphix.com>, 2016-01-22 16:41:02 -0800,6251, illumos 6251 add tunable disable free_bpobj processing 6251 add tunable disable free_bpobj processing reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed simon klinkert simon.klinkert gmail.com reviewed richard elling richard.elling reviewed albert lee trisk omniti.com reviewed xin delphij freebsd.org approved garrett amore garrett damore.org reference http www.illumos.org issue 6251 http github.com illumos illumos gate commit 139510f porting note added module option declaration added zfs module parameters.5 man page ported signed brian behlendorf behlendorf1 llnl.gov,,
4064,0a1f8cd9994427286c4663cccdeeae0de10cea19,im Chase <tim@chase2k.com>, 2016-01-24 13:11:15 -0600,4268, set arc_c_min properly userland build since set arc_c_max must set arc_c_max set also added protection falling maxblocksize userland build signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 4268,,
4065,1b8951b319b7bcddfe0cc2408b7717f9ce3d758b,im Chase <tim@chase2k.com>, 2016-01-22 07:37:37 -0600,4161, prevent arc_c collapse adjusting arc_c directly racy happen context multiple thread always maxblocksize set known valid value rather adjusting directly addition refactor arc_shrink simpler structure protect underflow calculation new arc_c value signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov reverts 935434ef close 3904 close 4161,,
4066,6b38e7510fbeb64785c7e042d8384f2141e9c557,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-23 11:13:08 -0800,513, remove rlim64_infinity assert vn_rdwr previous commit be29e6a updated kobj_read_file longer unconditionally pass rlim64_infinity vn_rdwr function need updated accordingly signed brian behlendorf behlendorf1 llnl.gov issue 513,,
4067,957dc93242bfa5c94b3ffecfb02c5f758cf82f37,ichard Yao <richard.yao@clusterhq.com>, 2015-12-11 19:47:47 -0500,4104, kobj_read_file return vn_rdwr error llvm static analyzer showed could subtract using uninitialized value error vn_rdwr correct behavior return error let instead signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4104,,
4068,be29e6a6e682123a009d20b2c5ab0b5393f43a8b,ichard Yao <richard.yao@clusterhq.com>, 2015-12-15 11:48:19 -0500,513, kobj_read_file return vn_rdwr error noticed spl implementation kobj_read_file correct comparing userland implementation kobj_read_file zfsonlinux zfs 4104 note longer pas rlim64_infinity vn_rdwr implementation support anyway difference signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 513,,
4069,ee42b3d6c3e4bd16d87b75e92a2bdec5cb85cd77,ndrew Stormont <andyjstormont@gmail.com>, 2016-01-20 16:37:10 -0800,1778, illumos 1778 assertion failed rn_nozpool b_false 1778 assertion failed rn_nozpool b_false reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed richard elling richard.elling approved gordon ross gordon.ross nexenta.com reference http www.illumos.org issue 1778 http github.com illumos illumos gate commit bd0f709 ported brian behlendorf behlendorf1 llnl.gov,,
4070,0fdd8d6482661047e3fabea72e8168abd945a7ec,arcel Telka <marcel.telka@nexenta.com>, 2016-01-20 16:31:44 -0800,5518, illumos 5518 memory leak libzfs import implementation 5518 memory leak libzfs import implementation reviewed dan field dan.fields nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed serghei samsi sscdvp gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5518 http github.com illumos illumos gate commit 078266a porting note one hunk change already applied independently commit 4def05f ported brian behlendorf behlendorf1 llnl.gov,,
4071,519129ff4e717f3026ae70b58d2db59d937aef06,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-20 15:58:29 -0800, , illumos 6815179 6844191 6815179 zpool import large number luns slow 6844191 zpool import scanning disk multi threaded reference http github.com illumos illumos gate commit 4f67d75 porting note change originally never ported linux due dependence thread pool interface patch solves issue switching code use existing taskq implementation provides basic functionality however order work properly thread_init thread_fini must called around taskq consumer perform needed thread initialization check_one_slice check_slices function disabled linux difficult possible implement linux due partition get name since optimization code added latter date signed brian behlendorf behlendorf1 llnl.gov,,
4072,19d55079aecb5c022c1c09e0eace4f7da7381a62,atthew Ahrens <mahrens@delphix.com>, 2014-07-07 11:49:36 -0800,4950, illumos 4950 file sometimes removed full filesystem 4950 file sometimes removed full filesystem reviewed adam leventhal adam.leventhal delphix.com reviewed george wilson george.wilson delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed boris protopopov bprotopopov hotmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4950 http github.com illumos illumos gate commit 4bb7380 porting note zol currently doe log discard zvols portion patch modifies discard logging mark freeing space discarded may_delete_now removed zfs_remove zol reintroduced try emulate vnodes following line valid linux mutex_enter v_lock may_delete_now v_count mutex_exit v_lock replaced mutex_enter z_lock may_delete_now atomic_read i_count z_is_mapped mutex_exit z_lock ported richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov,,
4073,7323da1b2f337f5dab52452e7b765f4a0bc99b78,laf Faaland <faaland1@llnl.gov>, 2016-01-19 10:15:24 -0800,4224, create spl kmod debuginfo rpm redhat spec file correct redhat specfile working debuginfo rpm created kernel module generic specfile already doe right thing signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 4224,,
4074,dfe0d027344b8534c69cc902c71ae912d8759e12,laf Faaland <faaland1@llnl.gov>, 2016-01-19 17:48:17 -0800,4224, create zfs kmod debuginfo rpm redhat spec file correct redhat specfile working debuginfo rpm created kernel module generic specfile already doe right thing signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4224,,
4075,37c56346cca55f60e36bb584e00966bba24af327,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-19 10:41:21 -0800,4124, close possible zfs_znode_held race check lock held holding z_hold_locks lock prevents possible use free bug caller holding lock currently caller cause problem today fixed regardless signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4244 issue 4124,,
4076,16522ac29023d94bc29e97761b01b252117cbbfe,hunwei Chen <david.chen@osnexus.com>, 2015-12-02 14:52:46 -0800,505, use tsd store taskq_member prevent taskq_member holding tq_lock linear search thus causing contention store taskq pointer thread belongs tsd way taskq_member need touch tq_lock tsd per slot spinlock contention reduced greatly signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 500 close 504 close 505,,
4077,de77e245902cc5bb6c22591d54e31c7647ff912f,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-19 08:59:47 -0800,524, linux 4.5 compat pfn_t typedef pfn_t typedef inherited illumos never directly used spl consumer cause issue linux 4.5 kernel introduced typedef name see torvalds linux commit 34c0fd54 patch remove unused illumos version prevent conflict signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com close 524,,
4078,d348f23a6a9b3017524b66c9f7c9d32ec283e178,hunwei Chen <david.chen@osnexus.com>, 2016-01-18 14:41:45 -0800,523, turn pf_fstrans b4ad50a abandoned favor earlier kernel turn __gfp_fs however newer kernel would prefer would work allocation kernel control otherwise patch turn pf_fstrans signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 523,,
4079,ae3a373566042ad086b51dce66059c8cae321faf,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-19 09:04:44 -0800,4228, linux 4.5 compat pfn_t typedef pfn_t typedef inherited illumos never directly used libspl consumer cause issue user space consistency kernel build removed see torvalds linux commit 34c0fd54 signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com issue 4228,,
4080,4967a3eb9d9de0295626fc7a3c1d1da52ea1498d,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-14 18:01:24 -0500,4228, linux 4.5 compat xattr list handler registered xattr .list handler simplified 4.5 kernel perform permission check given dentry file must return boolean indicating name visible differs slightly previous apis also required function copy name provided list return size responsibility caller straight forward change make zol since always required caller make copy however slightly complicated need support older apis yes 2.6.32 4.5 version interface therefore functional change patch small includes significant cleanup make code understandable maintainable change include improved configure check .list .get .set interface interface checked newest oldest strict checking possible known interface configure fails known interface available have_ _xattr_list renamed consistency similar iop fop configure check default access removed forcing caller move replacement default access compatibility wrapper added old kernel added behaves existing zpl_xattr_ get set wrapper inode guaranteed valid pointer passing null list name variable allowed must checked .list function updated use wrapper aid readability updated use .list function permission check consistent updated linux 4.5 interface .list function registered return indicate name skipped registered function name added additional documentation xattr describing correct behavior namespace added relevant handler signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com issue 4228,,
4081,beeed4596b192f879fbb13e656cc6458ccde1193,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-14 13:25:10 -0500,4228, linux 4.5 compat get_link put_link follow_link interface retired favor get_link process phasing get_link linux kernel went two different version first depended put_link final version delayed done function improved configure check .follow_link .get_link .put_link interface checked newest oldest strict checking possible known interface configure fails known interface available version .get_link detected supported well two previous version .follow_link signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com issue 4228,,
4082,bc89ac8479c0b265c539b579fda2bef1997d423c,osef 'Jeff' Sipek <josef.sipek@nexenta.com>, 2016-01-13 16:37:41 -0800,4220, illumos 5045 use atomic_ inc dec instead atomic_add_ 5045 use atomic_ inc dec instead atomic_add_ reviewed matthew ahrens mahrens delphix.com reviewed garrett amore garrett damore.org approved robert mustacchi joyent.com reference http www.illumos.org issue 5045 http github.com illumos illumos gate commit 1a5e258 porting note change non zfs file dropped change zfs_vfsops.c dropped illumos specific ported brian behlendorf behlendorf1 llnl.gov close 4220,,
4083,e3e670d0061ff121293dafb37d1f14a7069d49d5,atthew Ahrens <mahrens@delphix.com>, 2016-01-13 16:10:38 -0800,4219, illumos 4953 4954 4955 4953 zfs rename snapshot need involve libshare 4954 zfs create need involve libshare sharing 4955 libshare get_zfs_dataset need sort datasets reviewed george wilson george.wilson delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed dan mcdonald danmcd omniti.com reviewed gordon ross gordon.ross nexenta.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4953 http www.illumos.org issue 4954 http www.illumos.org issue 4955 http github.com illumos illumos gate commit 33cde0d porting note dropped qsort libshare_zfs.c hunk equivalent zol code ported brian behlendorf behlendorf1 llnl.gov close 4219,,
4084,812e91a7e3abe59565462e4bb2a01724afddb042,arcel Telka <marcel.telka@nexenta.com>, 2016-01-13 15:35:55 -0800,4218, illumos 4039 zfs_rename zfs_link need stronger test xdev 4039 zfs_rename zfs_link need stronger test xdev reviewed gordon ross gordon.ross nexenta.com reviewed kevin crowe kevin.crowe nexenta.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4039 http github.com illumos illumos gate commit 18e6497 porting note check updated linux similar fashion early port therefore patch reorder function update comment flow way upstream code ported brian behlendorf behlendorf1 llnl.gov close 4218,,
4085,82f6f6e654a51b47f9f2d642197852ced80487ee,oe Stein <joe.stein@delphix.com>, 2016-01-13 15:05:59 -0800,4217, illumos 6298 6298 need updated large block support reviewed matthew ahrens mahrens delphix.com reviewed john kennedy john.kennedy delphix.com approved robert mustacchi joyent.com reference http www.illumos.org issue 6298 http github.com illumos illumos gate commit e9316f7 ported brian behlendorf behlendorf1 llnl.gov close 4217,,
4086,59d4c71cca3bd6a1f122129ebb001089f903f182,eorge Wilson <george.wilson@delphix.com>, 2016-01-13 14:37:39 -0800,4217, illumos 3557 3558 3559 3560 3557 dumpvp_size updated correctly dump zvol size changed 3558 setting volsize dump device doe return back enospc 3559 setting volsize larger space available sometimes succeeds 3560 dumpadm able remove dump device reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com approved albert lee trisk nexenta.com reference http www.illumos.org issue 3559 http github.com illumos illumos gate commit c61ea56 porting note internal zvol.c change applied due implementation difference external interface behavior already consistent latest upstream code retired 2.6.28 configure check supported kernel 2.6.32 newer provide interface ported brian behlendorf behlendorf1 llnl.gov close 4217,,
4087,21f604d4607e9e76a632438ee9274d3a8ce3180d,hunwei Chen <david.chen@osnexus.com>, 2015-12-30 15:47:11 -0800,4153, prevent duplicated xattr dir replacing xattr would cause overflowing would fallback xattr dir however current implementation clear one would end duplicated example running following script xattr filesystem would cause duplicated user.1 dup_xattr.sh begin randbase64  dev urandom count dev null openssl enc  file touch file setfattr user.1 randbase64 5000 file setfattr user.2 randbase64 20000 file setfattr user.3 randbase64 20000 file setfattr user.1 randbase64 20000 file getfattr file dup_xattr.sh end also filesystem switch xattr xattr never modify would cause strange behavior like delete xattr setxattr would cause duplicate result would match getxattr example following shell sequence shell begin sudo zfs set xattr fs0 touch zzz setfattr user.test asdf zzz sudo zfs set xattr fs0 setfattr user.test zzz setfattr zzz attribute getfattr zzz user.test asdf setfattr user.test zxcv zzz getfattr zzz user.test asdf user.test asdf shell end fix behavior first finding xattr resides setxattr successfully updated xattr one location clear location note update clear single could still end duplicated xattr setxattr fixed signed chunwei chen david.chen osnexus.com close 3472 close 4153,,
4088,546f38433a870a2cf9907c6c61daad22a289fe39,ichard Yao <ryao@gentoo.org>, 2016-01-12 21:01:14 -0500,4212, set_error print string debugging tracepoints see string pointer zfs 3017 006 8878.728915 zfs zfs_set__error 3013 error 0x2 spa_open_common lib module 3.12.21 gentoo extra zfs zfs.ko spa_open lib module 3.12.21 gentoo extra zfs zfs.ko zfs_ioc_stable lib module 3.12.21 gentoo extra zfs zfs.ko zfsdev_ioctl lib module 3.12.21 gentoo extra zfs zfs.ko do_vfs_ioctl kernel.kallsyms sys_ioctl kernel.kallsyms kernel.kallsyms 7ff7d8be69c7 __gi___ioctl lib64 libc 2.19.so 7ff7d90cac53 lib64 unknown unknown printing actual string convenient zfs 3461 001 10599.847692 zfs zfs_set__error spa.c 3013 spa_open_common error 0x2 spa_open_common lib module 3.12.21 gentoo extra zfs zfs.ko spa_open lib module 3.12.21 gentoo extra zfs zfs.ko zfs_ioc_stable lib module 3.12.21 gentoo extra zfs zfs.ko zfsdev_ioctl lib module 3.12.21 gentoo extra zfs zfs.ko do_vfs_ioctl kernel.kallsyms sys_ioctl kernel.kallsyms kernel.kallsyms 7f11b843c9c7 __gi___ioctl lib64 libc 2.19.so 7f11b8920c53 lib64 unknown unknown tracepoints string well switch printing actual string value time signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4212,,
4089,b10695c8f1ce317cd24d99af7998741a35a5ce48,ichard Yao <richard.yao@clusterhq.com>, 2015-07-28 10:22:56 -0400,3643, remove fastwrite mutex fast write mutex intended protect accounting redundant accounting performed atomic operation also serializes metaslab behind mutex introduces theoretical scaling regression illumos developer like showed removing make selection metaslab_group lock free illumos selection quite without lock loop race completion imbalance caused likely corrected subsequent metaslab group selection signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3643,,
4090,c96c36fa22ab97f6b3025b356bfca8d9e030d002,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-22 13:47:38 -0800,4106, fix zsb z_hold_mtx deadlock function used serialize access znode buffer object created destroyed kind locking would normally reside znode case impossible znode buffer may yet exist therefore locking handled externally array mutexs avls tree contain per object lock per object lock created needed inserted correct avl tree finally per object lock held process reversed per object lock released removed avl tree destroyed waiter scheme two important property memory allocation performed holding one z_hold_locks ensures evict called direct memory reclaim never block waiting z_hold_locks happens hashed index lock used serialize access object per object never shared minimizes lock contention without creating large number dedicated lock downside doe require znode_lock_t structure frequently allocated freed however backed kmem cache short lived cost minimal signed brian behlendorf behlendorf1 llnl.gov issue 4106,,
4091,0720116d4dd7a62d2097863fc4c32c3cbd11aefa,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-18 12:19:14 -0800,4106, add module option add module option facilitate resizing per dataset znode mutex array increasing value may help make deadlock described 4106 common proper fix patch primarily aid debugging analysis signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 4106,,
4092,d21f279a94994f65e6bdcbbca9fd2eb552a0d604,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-13 11:39:25 -0800,4216, illumos 3465 3466 3467 3468 3470 3473 3465 walk ... dcmd misinterprets input symbol name 3466 tsd handle missing null value better 3467 mdb_ctf_vread could useful 3468 mdb enhancement zfs development 3470 whatis doe print caller kmf_lite 3473 mdb_get_module return wrong module reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed robert mustacchi joyent.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3468 http github.com illumos illumos gate commit 28e4da2 porting note portion patch applies zol small change type used refcount structure ported brian behlendorf behlendorf1 llnl.gov close 4216,,
4093,89666a8e1cfe8691a31fa8ca33c55362e959e2ed,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-13 10:41:24 -0800,4215, increase default user space stack size rhel6 centos6 default stack size must increased 32k prevent overflowing stack running ztest issue distribution due either version pthreads perhaps compiler doubling stack size resolve issue safely distribution leaf headroom sudo ztest 300 var tmp vdevs datasets thread 300 second ... loading space map vdev metaslab ... ... loading space map vdev metaslab ... child died signal exited ztest error signed brian behlendorf behlendorf1 llnl.gov close 4215,,
4094,e843553d0341c4edd880f5ad40da8211669348bd,hunwei Chen <tuxoko@gmail.com>, 2016-01-06 19:05:24 -0800,4106, hold mutex release cv_wait thread holding mutex cv_destroy might end waiting thread cv_wait waiter would wake trying aquire mutex cause deadlock solve move mutex_enter bottom cv_wait waiter release first allowing cv_destroy succeed chance free mutex would create race condition cv_mutex use xchg set check ensure harmed race would result cv_mutex debugging becomes best effort also change reveals race unlikely call mutex_destroy test thread still holding mutex use kthread_stop make sure thread exit mutex_destroy signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue zfsonlinux zfs 4166 issue zfsonlinux zfs 4106,,
4095,d297a5a3a1cfa6341ef301780b4fd0545c851bdc,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-14 09:59:28 -0800,512, add man page entry module option accidentally omitted documentation add signed brian behlendorf behlendorf1 llnl.gov close 512,,
4096,e6cfd633be909956c8a6998f478ceb32558c210c,ill Andrews <willa@spectralogic.com>, 2015-12-31 17:38:59 +0100,3749, illumos 3749 zfs event processing work root filesystems 3749 zfs event processing work root filesystems reviewed matthew ahrens mahrens delphix.com reviewed eric schrock eric.schrock delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3749 http github.com illumos illumos gate commit 3cb69f7 porting note include sys spa_impl.h ffe9d38 add generic erratum infrastructure 1421c89 add visibility arc_read include sys zfs.h 2668527 add linux event 6283f55 support custom build directory move includes module zfs spa_config.c updated spa_config_sync match illumos exception linux specific block ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4097,7ea4f88f8f94f6071f8533e85555139c81ddd647,arcel Telka <marcel.telka@nexenta.com>, 2016-01-10 23:35:29 +0100,6280, illumos 6280 libzfs unshare_one could fail 6280 libzfs unshare_one could fail reviewed toomas soome tsoome me.com reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 6280 http github.com illumos illumos gate commit d1672ef ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4098,d25b4497b7c7c209cbe28d31189bd7b2489b3d2f,atthew Ahrens <mahrens@delphix.com>, 2016-01-09 19:33:11 +0100,5141, illumos 5141 zfs minimum indirect block size 5141 zfs minimum indirect block size reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5141 http github.com illumos illumos gate commit e94f268 porting note grub grand unified bootloader change merged applicable ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4099,ee3a23b84e7f635b9b32448909f1b780d0c156bf,ustin Gibbs <gibbs@scsiguy.com>, 2016-01-09 18:29:05 +0100,5438, illumos 5438 continue 5438 continue reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed xin delphij freebsd.org approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5438 http github.com illumos illumos gate commit 5897eb4 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4100,fc581e05072c21d82729091ebe34248fd0777460,osef 'Jeff' Sipek <josef.sipek@nexenta.com>, 2016-01-09 18:37:15 +0100,5515, illumos 5515 dataset user hold reject empty tag 5515 dataset user hold reject empty tag reviewed matthew ahrens mahrens delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed saso kiselkov saso.kiselkov nexenta.com approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 5515 http github.com illumos illumos gate commit 752fd8d ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4101,a6fb32b85acb2245260aa1cbe396aea1f16b9dd3,eorge Wilson <george.wilson@delphix.com>, 2016-01-09 17:19:10 +0100,6281, illumos 6281 prefetching apply 1mb read 6281 prefetching apply 1mb read reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com reviewed alexander motin mav freebsd.org reviewed dan mcdonald danmcd omniti.com reviewed justin gibbs gibbs scsiguy.com reviewed xin delphij freebsd.org approved gordon ross gordon.ross nexenta.com reference http www.illumos.org issue 6281 http github.com illumos illumos gate commit 6328027 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4102,fe467e06fd700707501e7e53cf0292149e308684,an Vatca <dan.vatca@gmail.com>, 2016-01-09 18:42:21 +0100,6358, illumos 6358 faulted pool unavailable vdevs 6358 faulted pool unavailable vdevs trigger assertion failure libzfs reviewed matthew ahrens mahrens delphix.com reviewed andrew stormont andyjstormont gmail.com reviewed serban maduta serban.maduta gmail.com approved dan mcdonald danmcd omniti.com reference http illumos.org issue 6358 http github.com illumos illumos gate commit b289d04 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4103,adfe9d932bb5a4d367f7abe2e3b33fc0363dc815,aso Kiselkov <skiselkov@gmail.com>, 2015-12-23 21:02:43 +0100,6367, illumos 6367 incorrectly handle multiple lock case 6367 incorrectly handle multiple lock case reviewed alek pinchuk alek.pinchuk nexenta.com reviewed josef jeff sipek josef.sipek nexenta.com reviewed prashanth sreenivasa prashksp gmail.com reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com reviewed steven hartland steven.hartland multiplay.co.uk approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 6367 http github.com illumos illumos gate commit e495b6e ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4104,5f3d9c69d1dda5dce7dc0e4dd007b51a66177f1c,oe Stein <joe.stein@delphix.com>, 2015-12-23 20:51:02 +0100,6295, illumos 6295 dbgmsg include vdev 6295 dbgmsg include vdev reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org reviewed xin delphij freebsd.org reviewed justin gibbs gibbs scsiguy.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 6295 http github.com illumos illumos gate commit daec38e ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4105,616a57bea8a9b419a77853a29516507c16c09d90,oshua M. Clulow <josh@sysmgr.org>, 2015-11-12 03:33:52 +0100,6268, illumos 6268 zfs diff confused moving file another directory 6268 zfs diff confused moving file another directory reviewed matthew ahrens mahrens delphix.com reviewed justin gibbs gibbs scsiguy.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6268 http github.com illumos illumos gate commit aab0441 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4106,0eb21616fabc46ca39b67fb3890637484dbf55c6,ustin T. Gibbs <gibbs@scsiguy.com>, 2015-11-05 00:00:58 +0100,3464, illumos 6171 slows dataset eviction 6171 slows dataset eviction reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6171 http github.com illumos illumos gate commit 03bad06 porting note conflict 3558fd7 prototype structure update linux 2cf7f52 linux compat 2.6.39 mount_nodev 13fe019 illumos 3464 241b541 illumos 5959 clean per dataset feature count code preserved tree consumer like lustre transition fixing space tab end line include sys dsl_dataset.h ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4107,5a28a9737ade6a9c1014d8e7f286431fad9f382e,atthew Ahrens <mahrens@delphix.com>, 2015-11-04 21:37:33 +0100,6288, illumos 6288 could faster 6288 could faster reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com reviewed justin gibbs gibbs scsiguy.com reviewed richard elling richard.elling approved robert mustacchi joyent.com reference http www.illumos.org issue 6288 http github.com illumos illumos gate commit 0f2e7d0 porting note module zfs dbuf.c fix warning iso c90 forbids mixed declaration code moving start code block ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4108,2e8efe1befcbfb7bd832bf9717a2db95a420ba1c,eorge Wilson <george.wilson@delphix.com>, 2015-11-04 21:12:40 +0100,6292, illumos 6292 exporting pool async destroy 6292 exporting pool async destroy running leave entry deferred tree reviewed paul dagnelie pcd delphix.com reviewed matthew ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org reviewed fabian keil fabiankeil.de approved gordon ross gordon.ross nexenta.com reference http www.illumos.org issue 6292 http github.com illumos illumos gate commit a443cc8 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4109,5511754b4fa6b105941ec4e19a3b1c2b34bb7452,atthew Ahrens <mahrens@delphix.com>, 2015-11-04 21:19:17 +0100,3449, illumos 6319 assertion failed zio_ddt_write blk_birth txg 6319 assertion failed zio_ddt_write blk_birth txg reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 6319 http github.com illumos illumos gate commit b39b744 porting note enabled ztest centos test slave ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3449,,
4110,7f60329a261bd48558a498fb10e9b29638eab33b,atthew Ahrens <mahrens@delphix.com>, 2015-12-26 22:10:31 +0100,5987, illumos 5987 zfs prefetch code need work 5987 zfs prefetch code need work reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie pcd delphix.com approved gordon ross gordon.ross nexenta.com reference http www.illumos.org issue 5987 zfs prefetch code need work illumos illumos gate cf6106c 5987 zfs prefetch code need work porting note module zfs dbuf.c 5f6d0b6 handle block pointer corrupt logical size module zfs dmu_zfetch.c c65aa5b fix gcc missing parenthesis warning 428870f update core zfs code build 121 build 141 79c76d5 change km_pushpage km_sleep b8d06fc switch km_sleep km_pushpage account iso c90 mixed declaration code warning module parameter new changed replaced max byte prefetch per stream default 8mb 1024 1024 preserved int consistency existing linux module option include sys trace_arc.h added new tracepoints   man man5 zfs module parameters.5 updated man page ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4111,ab5cbbd1078bf007b50b084bb31fd58c7c5652f4,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-11 13:52:17 -0800,6293, illumos 6293 ztest failure error 0xc 0x1c ztest_tx_assign 6293 ztest failure error 0xc 0x1c ztest_tx_assign reviewed george wilson george.wilson delphix.com reviewed prakash surya prakash.surya delphix.com reviewed richard elling richard.elling approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 6293 http github.com illumos illumos gate commit 8fe00bf ported brian behlendorf behlendorf1 llnl.gov,,
4112,4d6369c1678d94422cb2fe92c333eb3083191f33,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-11 13:23:04 -0800,5039, illumos 5039 ztest default larger device size 5039 ztest default larger device size reviewed george wilson george.wilson delphix.com reviewed max grossman max.grossman delphix.com reviewed christopher siden delphix.com reviewed saso kiselkov skiselkov.ml gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5039 http github.com illumos illumos gate commit 539eed8 ported brian behlendorf behlendorf1 llnl.gov,,
4113,b870c7e5f4fe4520a32277bcc57b10a200a390aa,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-11 13:46:29 -0800, , revert illumos 3749 zfs event processing work root filesystems reverts commit introduced regression ztest cmd ztest ztest vdevs datasets thread 300 second ... error rpool home behlendo src git zfs cmd ztest .libs ztest double free corruption fasttop,,
4114,928c58dd0f297024363f8703cc57670fa9c96db7,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-11 14:09:00 -0800, , fix vn_rdwr compiler warning kernel.c function vn_rdwr kernel.c 736 warning unused variable status wunused variable signed brian behlendorf behlendorf1 llnl.gov,,
4115,b858767a31bc80cc9a65d1e7af70213916bfa34a,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-11 13:33:28 -0800, , fix prevsnap property build failure fix build failure accidentally introduced 1715493. result failure debugging disabled dsl_dataset.c function dsl_dataset.c 1698 error undeclared first use function signed brian behlendorf behlendorf1 llnl.gov,,
4116,1715493f38b0732b4bb23077d680e3a325a9096e,atthew Ahrens <mahrens@delphix.com>, 2016-01-01 14:15:31 +0100,4929, illumos 4929 want prevsnap property 4929 want prevsnap property reviewed adam leventhal adam.leventhal delphix.com reviewed matt amdur matt.amdur delphix.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed boris protopopov bprotopopov hotmail.com reviewed richard lowe richlowe richlowe.net approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4929 http github.com illumos illumos gate commit b461c74 porting note include sys zfs.h f67d70 create overlay property 11b9ec add full selinux support zfs dsl_dataset.c increase stack size nothing changed shown issue ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4117,9867e8be2a7182ce9b5eb28ed1d142e2ee60d69d,atthew Ahrens <mahrens@delphix.com>, 2016-01-01 14:42:58 +0100,4891, illumos 4891 want zdb option dump metadata 4891 want zdb option dump metadata reviewed sonu pillai sonu.pillai delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com reviewed richard lowe richlowe richlowe.net approved garrett amore garrett damore.org like way zdb dump metadata machine readable format bring back customer site house diagnosis think crash dump zpools used post mortem analysis malfunctioning pool reference http www.illumos.org issue 4891 http github.com illumos illumos gate commit df15e41 porting note cmd zdb zdb.c a5778ea zdb introduce verbatim import main getopt opt variable removed code brought back line illumos lib libzpool kernel.c 1e33ac1 fix solaris thread dependency using pthreads f0e324f update utsname support 4d58b69 fix vn_open vn_rdwr error handling vn_open allocate dumppath heap instead stack properly handle dump_fd error path free realpath added vn_dumpdir_code block ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4118,f3c9dca0937a7ca4fde2e47093cdae69f92dfb07,arcel Telka <marcel.telka@nexenta.com>, 2016-01-10 23:31:24 +0100,4638, illumos 4638 panic zfs via rfs3_setattr rfs3_write dirtying snapshot 4638 panic zfs via rfs3_setattr rfs3_write dirtying snapshot reviewed alek pinchuk alek.pinchuk nexenta.com reviewed ilya usvyatsky ilya.usvyatsky nexenta.com reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com reviewed garrett amore garrett damore.org approved garrett amore garrett damore.org reference http www.illumos.org issue 4638 http github.com illumos illumos gate commit 2144b12 porting note module zfs zfs_vnops.c 3558fd7 prototype structure update linux 2cf7f52 linux compat 2.6.39 mount_nodev use zfs_is_readonly wrapper remove first line comment apply ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4119,53e0313506a4df6a39e9ac64e25f1e45e14af36a,athancheek <myself@nathancheek.com>, 2016-01-08 13:45:40 -0500,4184, man page whitespace signed nathancheek nathancheek.com signed brian behlendorf behlendorf1 llnl.gov close 4184,,
4120,b47637ecdc7b647ec5bd9dfca888179eecfaa72d,ill Andrews <willa@spectralogic.com>, 2015-12-31 17:38:59 +0100,3749, illumos 3749 zfs event processing work root filesystems 3749 zfs event processing work root filesystems reviewed matthew ahrens mahrens delphix.com reviewed eric schrock eric.schrock delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3749 http github.com illumos illumos gate commit 3cb69f7 porting note include sys spa_impl.h ffe9d38 add generic erratum infrastructure 1421c89 add visibility arc_read include sys zfs.h 2668527 add linux event 6283f55 support custom build directory move includes module zfs spa_config.c updated spa_config_sync match illumos exception linux specific block ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4121,e9e3d31d2c141af15518ce6578ef26480fe97878,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-08 19:21:56 -0500, , allow 16m send recv block fix one error introduced fcff0f3 trigger assertion 16m block used send recv fix intentionally folder illumos commit easily cherry picked upstream signed brian behlendorf behlendorf1 llnl.gov,,
4122,fcff0f35bd522076bdda7491c88a91cc0aa531a3,aul Dagnelie <pcd@delphix.com>, 2015-12-22 02:31:57 +0100,5925, illumos 5960 5925 5960 zfs recv prefetch indirect block 5925 zfs receive origin reviewed prakash surya prakash.surya delphix.com reviewed matthew ahrens mahrens delphix.com reference http www.illumos.org issue 5960 http www.illumos.org issue 5925 http github.com illumos illumos gate commit a2cdcdd porting note lib libzfs b8864a2 fix gcc cast warning 325f023 add linux kernel device support 5c3f61e increase linux pipe buffer size zfs receive module zfs zfs_vnops.c 3558fd7 prototype structure update linux c12e3a5 restructure zfs_readdir fix regression module zfs zvol.c function zvol_map_block needed zol 9965059 prefetch start end volume module zfs dmu.c fixed iso c90 mixed declaration code function dmu_prefetch int initialized following code block c90 vs. c99 module zfs dbuf.c fc5bb51 fix stack dbuf_hold_impl 9b67f60 illumos 4757 4913 34229a2 reduce stack usage recursive module zfs dmu_send.c fixed iso c90 mixed declaration code b58986e use large stack available 241b541 illumos 5959 clean per dataset feature count code 77aef6f use vmem_alloc nvlists 00b4602 add linux kernel memory support ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4123,00af2ff6f219b4f73aebaaf9496cf5ea4b6728a3,rian Behlendorf <behlendorf1@llnl.gov>, 2016-01-06 16:32:32 -0500, , add missing option zdb add missing getopt specifier zdb verbatim option set flag correct bitwise operator signed brian behlendorf behlendorf1 llnl.gov,,
4124,466bcf3be5040e161219a7aab14b618a672d4402,lex McWhirter <alexmcwhirter@triadic.us>, 2016-01-08 03:55:57 -0500,520, _ilp32 always defined sparc signed alex mcwhirter alexmcwhirter triadic.us signed brian behlendorf behlendorf1 llnl.gov close 520,,
4125,c5d0287011679d76288c2617c409252245172a32,ichard Sharpe <rsharpe@samba.org>, 2015-12-27 16:08:05 -0800,4136, fix casesensitivity insensitive deadlock casesensitivity insensitive set file system deadlock rename user different case path example rename file.txt file.txt simple test mkdir dir zfs file system touch dir file.txt dir file.txt dir file.txt last request deadlock trying relock i_mutex inode parent directory solution use d_add_ci zpl_lookup file system casesensitivity insensitive attribute set patch check working case insensitive file system allocates storage case insensitive name pass zfs_lookup call d_add_ci instead d_splice_alias performance impact seems minimal even though introduced kmalloc kfree lookup path problem found running microsoft fsct samba top zfs linux signed richard sharpe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 4136,,
4126,7cf2ffa02065fe0cbec13bfb7bf4fcfaabb3d40a,ajo MÃ¶ller <dasjoe@gmail.com>, 2016-01-01 02:20:43 +0100, , make arc_summary.py dbufstat.py compatible python3 make arc_summary.py dbufstat.py compatible python3 minor fix required done automatically 2to3 arc_summary.py 2to3 dbufstat.py signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov signed reviewed richard laager rlaager wiktel.com,,
4127,074348589b3de871a719173bef1ea4d01ffe66eb,atthew Ahrens <mahrens@delphix.com>, 2015-12-31 16:57:11 +0100,3604, illumos 3604 zdb print bpobjs verbosely fix zdb hang 3604 zdb print bpobjs verbosely fix zdb hang reference http github.com illumos illumos gate commit 7706186 http www.illumos.org issue 3604 http pipermail svn src vendor 2015 august 002411.html http pipermail svn src head 2015 august 075195.html porting note zol 5810 zdb print detail bpobj merged prior change must applied new location ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4128,b23ad7f350222ac439a679d99bd8b0aa27604aef,eremy Jones <jeremy@delphix.com>, 2015-12-31 16:41:52 +0100,3139, illumos 3139 zdb try determine path unlinked file 3139 zdb try determine path unlinked file reviewed matt ahrens matthew.ahrens delphix.com reviewed christopher siden chris.siden delphix.com reviewed eric schrock eric.schrock delphix.com approved dan mcdonald danmcd nexenta.com reference http github.com illumos illumos gate commit 1ce39b5 http www.illumos.org issue 3139 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4129,cfe86c01d5b3eec4a490de16a1db79c1244395ed,ilan Jurik <milan.jurik@xylab.cz>, 2015-12-30 14:43:27 -0800,2077, illumos 2077 lot unreachable break illumos gate 2077 lot unreachable break illumos gate reviewed dan mcdonald danmcd nexenta.com reviewed garrett amore garrett damore.org approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 2077 http github.com illumos illumos gate commit 33f5ff1 porting note one file original patch applied zfs minor formating change align copyright block upstream ported brian behlendorf behlendorf1 llnl.gov,,
4130,37f8a8835a88da6122e2526d6aaeeef75556a7bd,atthew Ahrens <mahrens@delphix.com>, 2015-07-06 05:20:31 +0200,3611, illumos 5746 checksumming zfs send 5746 checksumming zfs send reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed bayard bell gmail.com approved albert lee trisk omniti.com reference http www.illumos.org issue 5746 http github.com illumos illumos gate commit 98110f0 http github.com zfsonlinux zfs issue 905 porting note minor conflict due http github.com zfsonlinux zfs commit 2024041 http github.com zfsonlinux zfs commit 044baf0 http github.com zfsonlinux zfs commit 88904bb fix iso c90 warning werror declaration statement arc_buf_t abuf dmu_buf_t bonus zio_cksum_t cksum_orig zio_cksum_t cksump fix format llx format specifier warning align message zstreamdump safe_malloc upstream ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3611,,
4131,43b4935e5358806de18461f3ee92e07c67071eb5,ed Bass <bass6@llnl.gov>, 2015-12-29 18:41:22 -0800,4150, prevent length overflow function sa_update accepts bit length parameter assigns bit field sa_bulk_attr_t potentially truncating passed value could lead corrupt system attribute record getting written pool add verify sa_update detect case overflow would occur length limited bit value disk format defined sa_hdr_phys_t function vulnerable bug unpacked nvlist xattrs 64k size packed size greater 64k fix appropriately checking size packed nvlist calling sa_update add error handling keep cached list based xattrs consistent data disk lastly call dmu_tx_abort assigned transaction sa_update return error dmu allows unassigned transaction aborted wrap sa_update call verify0 remove transaction abort call dmu_tx_commit unconditionally consistent practice caller sa_update signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 4150,,
4132,23de906c72946da56a54f75238693e186d44d6e2,hris Williamson <chris.williamson@delphix.com>, 2015-07-06 01:11:09 +0200,3574, illumos 5745 zfs set allows one dataset property set time 5745 zfs set allows one dataset property set time reviewed christopher siden delphix.com reviewed george wilson george delphix.com reviewed matthew ahrens mahrens delphix.com reviewed bayard bell gmail.com reviewed richard palo richard netbsd.org reviewed steven hartland killing multiplay.co.uk approved rich lowe richlowe richlowe.net reference http www.illumos.org issue 5745 http github.com illumos illumos gate commit 3092556 porting note fix missing brace around initializer zfs_cmd_t remove extra format argument zfs_do_set declare top zfs_prop_t prop nvpair_t elem nvpair_t next int additionally initialize int added_resv zfs_prop_t prop assign install null uint64_t type zc_nvlist_conf zc_nvlist_src zc_nvlist_dst ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3574,,
4133,f5f087eb8800a9b3c7a8d7e5a96c095eff68b097,hunwei Chen <tuxoko@gmail.com>, 2015-12-21 11:57:18 -0800,2861, make xattr dir truncate remove one need truncate remove zfs_rmnode xattr dir otherwise truncate crash end inconsistent zap object delete queue skipping let work signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4114 issue 4052 issue 4006 issue 3018 issue 2861,,
4134,29572ccdeff7ddb1211b0f26dea69e0a2f262faf,hunwei Chen <david.chen@osnexus.com>, 2015-12-18 11:39:41 -0800,2861, fix empty xattr dir causing lockup zfs_rmnode xattr dir system crash would get empty xattr dir delete queue would cause blkid passed zfs_purgedir mount would try rw_enter wrong structure cause system lockup fix returning enoent blkid zero signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4114 close 4052 close 4006 close 3018 close 2861,,
4135,2ebc7b72b3989ac53c1753f79eaf71d95419c103,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-21 09:27:24 -0800,4121, fix z_xattr_lock z_teardown_lock inversion exists lock inversion z_xattr_lock z_teardown_lock resolve taking z_teardown_lock registered xattr callback prior taking z_xattr_lock ensures lock always taken order thus preventing deadlock note z_teardown_lock taken zfs_lookup safe z_teardown lock entrant read reader writer lock process zpl_xattr_get take z_xattr_lock __zpl_xattr_get zfs_lookup take zsb z_teardown_lock zfs_enter macro process zfs_ioc_recv take zsb z_teardown_lock zfs_suspend_fs zfs_resume_fs zfs_rezget take z_xattr_lock signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 3943 close 3969 close 4121,,
4136,228b461b564532123efbf3f6c595494c8cbe7793,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-21 09:12:37 -0800, , revert fix z_xattr_lock z_teardown_lock lock inversion reverts commit,,
4137,151f84e2c32f690b92c424d8c55d2dfccaa76e51,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-21 17:02:22 -0500,4129, fix ztest truncated cache file commit efc412b updated linux 4.2 kernel truncate overwrite rather rename cache file correct fix applied kernel build user space rename needed ztest depends cache file signed brian behlendorf behlendorf1 llnl.gov close 4129,,
4138,2a552736b7fc2bcb810cc520abd2ff9e229a9904,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-22 09:26:10 -0800,516, fix do_div type condvar timeout do_div macro expects unsigned type detected powerpc implementation do_div signed brian behlendorf behlendorf1 llnl.gov close 516,,
4139,448d7aaabc55b43663c597b91b221bed982d81dd,laf Faaland <faaland1@llnl.gov>, 2015-10-15 13:08:27 -0700,3895, identify lock flagged lockdep running kernel config_lockdep lockdep report possible recursive locking case possible circular locking dependency others within spl zfs module patch mutex type defined spl mutex_nolockdep mark mutexes initialized mutex type cause attempt take release lock wrapped lockdep_off lockdep_on call silence dependency checker allow use lock_stats examine contention lock analogous lock type rw_nolockdep goal lock ultimately changed back type mutex_default rw_default lock annotated reflect relationship e.g z_name_lock real problem lock dependency fixed affected lock tc_open_lock  array lock name txg_quiesce must take order move txg next state default lockdep class lockdep appears recursive z_name_lock  zfs_rmdir dzp znode directory input zfs_dirent_lock znode entry removed output zfs_dirent_lock zfs_rmdir zfs_dirent_lock take z_name_lock dzp zfs_rmdir take z_name_lock since dzp type znode_t lock default class lockdep considers possible recursive lock attempt l_rwlock  zap_expand_leaf sometimes creates two new zap leaf structure via call path zap_deref_leaf zap_leaf_open zap_expand_leaf zap_create_leaf zap_expand_leaf zap_create_leaf zap_leaf_open zap_create_leaf initialize l_rwlock separate leaf structure lockdep class linux kernel belief might lock emits possible recursive lock warning signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3895,,
4140,e0553a74adf1b1035e1ae25ca7feacacdeb93931,laf Faaland <faaland1@llnl.gov>, 2015-11-06 09:38:27 -0800,3895, add lock type rw_nolockdep mutex_nolockdep lock type introduced spl allow lock taken released linux lockdep turned see spl commit detail add new lock type zfs_context.h allow user space compilation depends spl commit 692ae8d spl pull request ref pull 480 head signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3895,,
4141,76d5bf196cf6e5625f884a9ebbdaf53873a5a979,amil DomaÅski <kamil@domanski.co>, 2015-12-16 17:24:28 +0100,4107, skip gpl symbol test cross compiling signed kamil domaå ski kamil domanski.co signed brian behlendorf behlendorf1 llnl.gov close 4107,,
4142,dcb6bed1dfc7ca6221a556f19d4252272ccfda33,HE <git@dehacked.net>, 2015-12-16 14:22:32 -0500,4110, make user configurable add exported module parameter allowing user modify module load time signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 4110,,
4143,82dba185c8780e439958d1524f91167a2920d76c,enjamin Albrecht <git@albrecht.io>, 2015-11-20 17:48:54 +0100,4029, activate lvm volume group looking zpools original patch jgoerzen signed benjamin albrecht git albrecht.io signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux pkg zfs 102 close 4029,,
4144,6b4e21c60eda9d9e514c933de7cbe214aa77f7f4,ed Bass <bass6@llnl.gov>, 2015-12-16 17:45:15 -0800,4115, man page white space spelling correction correct misspelled word grammatical error remove trailing white space man page signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4115,,
4145,a58df6f53687ac6d1dee21f60de41b2552a43201,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-17 09:26:05 -0800, , fix bound checking update bound checking floor zero maximum value supported block size pool additionally add early return equal zero disable aggregation fast solid state memory device may expensive perform aggregation issue immediately signed brian behlendorf behlendorf1 llnl.gov,,
4146,6fe53787f38f10956b8d375133ed4559f8ce847b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-16 11:28:15 -0800,3867, fix deadlock deadlock may manifest slightly different way core caused memory allocation blocking file system reclaim zio pipeline normally impossible zio_execute disables filesystem reclaim setting pf_fstrans thread however kmem cache allocation may still indirectly block file system reclaim holding critical vq_lock shown resolve issue introduced allocation flag passed used km_nosleep allocating aggregate buffer since aggregating purely performance optimization want either succeed fail quickly trying hard allocate memory vq_lock negatively impact performance result deadlock z_wr_iss  vdev_queue_io take vq_lock   zio_buf_alloc waiting spl_kmem_cache process z_wr_int   mutex_lock waiting vq_lock held z_wr_iss txg_sync spa_sync dsl_pool_sync zio_wait waiting zio handled z_wr_int spl_kmem_cache  kv_alloc spl_vmalloc ... evict zpl_evict_inode zfs_inactive dmu_tx_wait txg_wait_open waiting txg_sync signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com signed tim chase tim chase2k.com close 3808 close 3867,,
4147,b4ad50ac5f16de9220452f0da493e67c060d701b,hunwei Chen <david.chen@osnexus.com>, 2015-12-17 18:31:58 -0800,4111, use instead earlier version kernel turn __gfp_io leaf __gfp_fs untouched direct reclaim would cause thread direct reclaim zfs cause deadlock instead stick using since would explicitly turn __gfp_io __gfp_fs allocation work every version kernel impact kernel version 3.9 3.17 see upstream kernel commit torvalds linux 934f307 reference signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 515 issue zfsonlinux zfs 4111,,
4148,a8ad3bf02cace90c45bc25df1bff1089d19e79f1,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-16 14:17:49 -0800,3969, fix z_xattr_lock z_teardown_lock lock inversion exists lock inversion z_xattr_lock z_teardown_lock detect case return ebusy zfs_resume_fs mark inode stale safely revalidated next access process zpl_xattr_get take z_xattr_lock __zpl_xattr_get zfs_lookup take zsb z_teardown_lock zfs_enter macro process zfs_ioc_recv take zsb z_teardown_lock zfs_suspend_fs zfs_resume_fs zfs_rezget take z_xattr_lock signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 3969,,
4149,200366f23f1a16874d78a07936c5a33f2d488022,im Chase <tim@chase2k.com>, 2015-10-19 07:47:52 -0500,491, provide kstat taskqs patch provides new kstats display task queue proc spl taskqs display task queue proc spl taskqs display active task queue task queue considered active currently active running thread pending priority delay waitq list empty task queue running thread display thread function address symbolically possibly argument task queue non empty list pending priority delayed task queue entry taskq_ent_t display entry thread function address arguemnt task queue waiter display waiting task pid note patch also update comment taskq.h referred taskq_t referred taskq_ent_t signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 491,,
4150,2727b9d3b63a938c1797d31378e6a5a1dcd43573,hunwei Chen <david.chen@osnexus.com>, 2015-12-08 12:37:24 -0800,4078, use uio zvol_ read write since uio support bvec convert bio uio reuse dmu_ read write _uio way remove duplicate code signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4078,,
4151,502923bb447cdf4f9bc1271a46dfc11d5e0f2e9b,hunwei Chen <david.chen@osnexus.com>, 2015-12-08 12:26:18 -0800,4078, fix length iovec userspace freely pas whatever iovec feel like perfectly legal pas iovec contains zero length segment current implementation would touch bound byte last byte logic probably cause critical error would like able continue gracefully signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4078,,
4152,eba9e745dcfce252fc6c451cdf07c55bf975f1f6,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-11 11:09:41 -0800,4089, handle damaged blk_birth bit cleared blk_birth txg birth lower txg_birth deadlist entry tree impossible regardless error handling code added case default left fatal case blk_birth logged however setting zfs_recover cause placed start deadlist even though contains invalid blk_birth signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4086 close 4089,,
4153,1cdb86cba2750f6da468e021a5ae2ba9a24530df,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-09 11:00:35 -0800,4080, handle block pointer corrupt logical size commit 5f6d0b6 originally added gracefully handle block pointer damaged logical size however incorrectly assumed passed arc_done_func_t could handle null arc_buf_t signed brian behlendorf behlendorf1 llnl.gov close 4069 close 4080,,
4154,a6c6e0f5837402ec82e4c8bd49c867a1d1dd5376,laf Faaland <faaland1@llnl.gov>, 2015-12-11 17:56:44 -0800,4096, remove index column dbufstat.py commit ca0bf58d address arcs_mtx contention removed column index output kstats dbuf dbufstat.py updated reflect cause crash run remove index hardcoded list column signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 4096,,
4155,799402d8c79d3fb3ef75e181a5abed1af8ccc242,ichard Yao <ryao@gentoo.org>, 2015-12-11 18:42:42 -0500,4095, revert switch ztest mmap asserts verifys reverts commit longer necessary pas ddebug unconditionally signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 4095,,
4156,27075111ed93f5290fbb5d801964aa20ed7a9d35,ichard Yao <ryao@gentoo.org>, 2015-12-11 18:40:05 -0500,4095, unconditionally build zdb ztest ddebug illumos unconditionally build zdb ztest ddebug help catch bug eliminates need commits like changed asserts verifys following file illumos tree show usr src cmd zdb makefile.com usr src cmd ztest makefile.com given usefulness early failure tool  signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 4095,,
4157,245b7ab3d1c06efe5b76a9412996fac50aa77f72,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-14 10:59:25 -0800, , hold zfs_snapentry_t dispatch exceptionally unlikely cause problem zfs_snapentry_t hold taken dispatch prevent possibility task processed hold signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com,,
4158,199766017076de5bddd0dad4f95f29361fc04169,hunwei Chen <david.chen@osnexus.com>, 2015-12-11 15:24:34 -0800, , fix snapshot automount race cause eremote concorrent mount finish calling return eisdir vfs return eremote instead return vfs may retry would likely notice dentry alreadly mounted inline usermode helper return ebusy signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov,,
4159,5ed27c572cbb051cbed91a9cce1355312fa7913b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-10 15:53:37 -0800, , change mutex lock changing mutex lock function allowed run concurrently reduce latency fh_to_dentry lookup zfs snapshot accessed nfs signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com,,
4160,f22f900f15c28ebd8b8b764ee6229a7069c74a13,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-10 15:47:18 -0800,3997, fix deadlock function must called currently holding result deadlock safe call directly function already reference zfs_snapentry_t signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com close 3997,,
4161,5e94284fe57ba0b3b5825676e3fd498c8b4b8115,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-10 15:23:26 -0800, , set disable auto unmount case desirable auto mounted snapshot expire fixed duration unmounted filesystem snapshot unmounted signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen david.chen osnexus.com,,
4162,e0ed96fa43e1d34751ef8a750a7816852b1d09b3,amil Domanski <kamil@domanski.co>, 2015-12-12 13:35:49 +0100,4075, skip gpl symbol test cross compiling signed kamil domaå ski kamil domanski.co signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 507 close zfsonlinux zfs 4075,,
4163,cb877e0ff2648085c56ab78f15740f2b64bab849,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-11 16:57:05 -0800,507, revert skip gpl symbol test cross compiling reverts commit older version autoconf 2.63 support cross compile argument ac_run_ifelse signed brian behlendorf behlendorf1 llnl.gov issue 507,,
4164,2c4332cf793e7c9ca5b2b9b0e6f31c3e41bbc1b1,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-11 16:15:50 -0800, , fix cstyle issue spl taskq.c taskq.h patch address issue identified style checker contains functional change signed brian behlendorf behlendorf1 llnl.gov,,
4165,066b89e68545e1f774124969d0dd7b36ccb04112,hunwei Chen <david.chen@osnexus.com>, 2015-12-03 15:06:03 -0800,506, use tq_lock_flags flag argument modified side spin_lock context use shared variable like tq_lock_flags patch remove local variable flag signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 506,,
4166,326172d8549e0a34a8e4ef4665d8bdfcf7aeda6e,laf Faaland <faaland1@llnl.gov>, 2015-10-13 16:56:51 -0700,480, subclass tq_lock eliminate lockdep warning taskq_dispatch call create new thread taskq linux lockdep warns possible recursive locking false positive one call chain follows taskq need thread taskq_dispatch taskq_dispatch initial taskq_dispatch hold tq_lock taskq needed worker thread later call taskq_dispatch take dynamic_taskq tq_lock without subclassing lockdep belief could potentially lock complains similar case occurs taskq_dispatch call task_alloc patch taking tq_lock one two new lock subclass subclass taskq tq_lock_dynamic dynamic_taskq tq_lock_general signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 480,,
4167,628fc52137fc14377eba46c66b57d8d094e88507,laf Faaland <faaland1@llnl.gov>, 2015-10-13 23:08:44 -0700,480, fix lockdep warning spl_inode_ lock unlock spl_inode_ lock unlock triggering possible recursive locking warning lockdep warning false positive lock used protect parent directory delete add operation used zfs writing removing cache file inode lock taken parent inode file inode vfs provides enum subclass lock patch change spin_lock call _nested version provided enum signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 480,,
4168,692ae8d3981e4ef20c0cd0cc229ec31753d220a6,laf Faaland <faaland1@llnl.gov>, 2015-10-06 14:01:46 -0700,480, add new lock type mutex_nolockdep rw_nolockdep running kernel config_lockdep lockdep report possible recursive locking case possible circular locking dependency others within spl zfs module lockdep detects condition disables lock analysis lock cause proc lock_stats reflect full information lock contention even lock without dependency issue commit creates new type mutex mutex_nolockdep mutex type cause subsequent attempt take release lock wrapped lockdep_off lockdep_on commit also creates rw_nolockdep type analagous mutex_nolockdep mutex_nolockdep rw_nolockdep also defined zfs commit repo userspace build signed olaf faaland faaland1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 480,,
4169,61bbbd9a775a5517af513e5014edbdd73a32f7e4,amil DomaÅski <kamil@domanski.co>, 2015-12-10 11:14:08 +0100,4075, skip gpl symbol test cross compiling test depends able execute resulting binary impossible cross compiling instead make worst case assumption allows build continue recommended autoconf manual http www.gnu.org savannah checkout gnu autoconf manual autoconf 2.69 html_node runtime.html signed kamil domaå ski kamil domanski.co signed brian behlendorf behlendorf1 llnl.gov signed tuxoko tuxoko gmail.com close zfsonlinux spl 507 close zfsonlinux zfs 4075,,
4170,0da84d1574a9900b8a0a9b73cdc2588407262dfd,gock <zgock@nuc.base.zgock-lab.net>, 2015-12-10 19:20:33 +0900,510, fix build issue configured kernel spl fails build configured kernel opensuse xen kernel change make binary compiler optimization signed zgock zgock nuc.base.zgock lab.net signed brian behlendorf behlendorf1 llnl.gov close 510,,
4171,a22502c9e6656e8d19e43de7f983588afc719ec5,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-09 14:58:29 -0800,4048, either _ilp32 _lp64 must defined arm powerpc sparc platform possible neither _ilp32 _lp64 would defined update isa_defs.h header explicitly set macro generate compile error case neither defined signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 4048,,
4172,225c110675631ddb0673323ee33818586c25cd67,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-09 14:46:59 -0800,4048, either _ilp32 _lp64 must defined arm powerpc sparc platform possible neither _ilp32 _lp64 would defined update isa_defs.h header explicitly set macro generate compile error case neither defined signed brian behlendorf behlendorf1 llnl.gov signed tuxoko tuxoko gmail.com issue zfsonlinux zfs 4048,,
4173,c5a8b1e163179cadcf2c5f81b000bf7f86f41369,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-08 17:04:31 -0800,500, revert make taskq_member use journal_info reverts commit using journal_info like cause bug kernel jbd2 transaction.c 425 signed brian behlendorf behlendorf1 llnl.gov issue 500,,
4174,24ef51f660b0eb4e1507c440f4bcf0c6b38f31d0,hunwei Chen <david.chen@osnexus.com>, 2015-12-07 15:43:53 -0800,3887, use spa key besides objsetid snapentry objsetid unique across pool using solely key would cause panic automounting two snapshot different pool objsetid fix adding spa pointer additional key signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 3948 issue 3786 issue 3887,,
4175,a430c11f0b1ef16ca5edf3059e4082709277376c,ichard Yao <richard.yao@clusterhq.com>, 2015-12-03 14:15:16 -0500,500, make taskq_member use journal_info journal_info pointer task_struct reserved use filesystems kernel multiple file system stack due direct reclaim filesystem touch journal_info callback function save value start frame restore end frame allows safely use journal_info store pointer taskq struct taskq thread zfs code path detect presence taskq could break zfs code use taskq_member context direct reclaim however manner safe eliminates list traversal spinlock unlocked pointer comparison signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed tuxoko tuxoko gmail.com signed tim chase tim chase2k.com close 500,,
4176,b58986eebf3c47c946393da4b968ee33edaea99e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-02 11:53:37 -0800,4059, use large stack available stack size vary architecture historically defaulted x86_64 system however linux 3.15 default thread stack size increased 16k kernel default non enterprise distribution mean longer need assume stack patch take advantage fact appropriately reverting stack conservation change made ensure stability change may negative impact performance certain workload also side effect bringing code slightly line upstream signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 4059,,
4177,f40926795c1a1d3750e2a6f6904061cfa68715df,able2999 <cable2999@users.noreply.github.com>, 2015-10-16 12:06:33 -0500,3931, update arcstat.py remove deprecated rmis reference running arcstat.py currently throw keyerror due rmis absent removed commit ca0bf58 signed cable2999 cable2999 signed brian behlendorf behlendorf1 llnl.gov close 3931,,
4178,25df831b8140883ac2759552d857149eadfd81f8,lovezfs <ilovezfs@icloud.com>, 2015-12-03 02:40:27 -0800,4062, fix cstyle issue 7a02327 continuation indented four space signed ilovezfs ilovezfs icloud.com signed brian behlendorf behlendorf1 llnl.gov close 4062,,
4179,241b5415748859a3c272fc8f570f2368e93adde9,atthew Ahrens <mahrens@delphix.com>, 2015-07-24 09:53:55 -0700,3965, illumos 5959 clean per dataset feature count code 5959 clean per dataset feature count code reviewed toomas soome tsoome me.com reviewed george wilson george delphix.com reviewed alex reece alex delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5959 http github.com illumos illumos gate commit ca0cc39 porting note illumos code check returning enotsup mean feature disabled zdb zfsonlinux added check http github.com zfsonlinux zfs commit 784652c due 3468. check reintroduced ported witaut bajaryn vitaut.bayaryn gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3965,,
4180,072484504fa3c905f5d3712abff765cf33c1e72d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-09 14:51:20 -0700,4061, add zap_prefetch interface provide generic interface prefetch zap entry name functionality added external consumer lustre based existing version used deduplication code signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 4061,,
4181,917b8c5cec074869a0bf4e9956b7d24f14221d84,lovezfs <ilovezfs@icloud.com>, 2015-11-22 04:06:21 -0800,4016, ext4 typical gpt partition type recognized adding additional entry efi conversion array help prevent overwriting gpts disk use file system case notably add partition type 8300 linux filesystem 0fc63daf 8483 4772 8e79 3d69d8477de4 often used ext4 btrfs among others commit doe nothing address underlying problematic behavior check_slice called partition unrecognized type even contain currently mounted file system additional entry derived two resource http wiki http sourceforge.net gptfdisk code master tree parttypes.cc signed ilovezfs ilovezfs icloud.com signed brian behlendorf behlendorf1 llnl.gov issue 4016,,
4182,fc80384923dde365ad40c6b6f5a7daa3e556b1e5,uri Pankov <yuri.pankov@nexenta.com>, 2012-02-23 07:11:44 +0400,4016, illumos 934 freebsd gpt recognized reviewed alexander eremin gmail.com reviewed garrett amore garrett damore.org reviewed andrew stormont andrew.stormont nexenta.com reviewed richard elling richard.elling approved gordon ross gwr nexenta.com reference http www.illumos.org issue 934 http github.com illumos illumos gate commit e21ea67 ported ilovezfs ilovezfs icloud.com signed brian behlendorf behlendorf1 llnl.gov issue 4016,,
4183,1683e75edc1fdca1eba53f16ca08ce32c5e736d1,ichard Yao <richard.yao@clusterhq.com>, 2015-11-04 16:41:13 -0500,492, fix race getf areleasef vnode released asynchronously areleasef possible user process reuse file descriptor areleasef called happens getf return stale reference operation kernel file descriptor fail closed operation meant never occur userspace perspective correct detecting condition getf putf old file handle updating file descriptor proceeding everything fine areleasef done harmlessly decrement reference counter illumos file handle signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 492,,
4184,b22e2797970b44e6b9d1e4624a5ede935c851010,ichard Yao <richard.yao@clusterhq.com>, 2015-11-25 10:39:57 -0500,4043, trigger set_error tracepoint event error currently set_error tracepoint trigger regardless whether error illumos set_error trigger actual error avoids irrelevant noise linux 2.6.38 added support conditional tracepoints modify set_error use avaliable functionality equivalent illumos functionality signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 4043,,
4185,a179a3aa35125e1e98ad0e92527c0cf9e3038fac,hunwei Chen <david.chen@osnexus.com>, 2015-11-20 15:47:37 -0800,4020, fix zdb_dump_block little endian system dumping block little endian system data must byte swapped display correctly example incorrect output echo aaa zdb 1ee00 200 1ee00 200  000000 000010 signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4020,,
4186,90aa094d6d77bf6f17a671ff76a84ae8232267d8,hunwei Chen <david.chen@osnexus.com>, 2015-11-20 15:50:06 -0800,3126, fix zdb calling behavior ztest current zdb calling behaviour really fragile guaranteed segfault ztest installed either sbin usr sbin patch ztest try call zdb following order use environmental variable zdb_path provided ztest resides build tree guess tree zdb path pas zdb popen let search path signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 3126,,
4187,b0fe1adeb1f24192c9a3358a4c9a29a34b9537fe,uxoko <tuxoko@gmail.com>, 2015-11-19 17:42:41 -0800,4027, prevent module make install originally somehow changed working anymore cause following error modprobe error libkmod libkmod.c 506 could open builtin file lib module 4.2.0 generic signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4027,,
4188,d28c5c4f0472e9674d34f8237ba14187669dad7c,uxoko <tuxoko@gmail.com>, 2015-11-19 17:39:56 -0800,501, prevent module make install originally somehow changed working anymore cause following error modprobe error libkmod libkmod.c 506 could open builtin file lib module 4.2.0 generic signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 501,,
4189,5578f58bdc65d8a2d49b34be21f979bd1fcb0093,oris Protopopov <boris.protopopov@actifio.com>, 2015-06-30 17:47:15 -0400,460, add script display spl slab cache statistic useful looking info zfs spl related memory consumption signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 460,,
4190,e5f9a9afd27ce78ee9c08c24f63ad48dfc9ea8de,im Chase <tim@chase2k.com>, 2015-07-24 15:36:59 -0500,469, additional dkio support trim discard replace dkioctrim dkiocfree add additional support required nextenta trim support signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 469,,
4191,9f456111ab761a25191db16eabca6ed4cb6bb615,imitri John Ledkov <dimitri.j.ledkov@intel.com>, 2015-11-25 13:35:22 +0000,502, spl kmem cache include linux prefetch.h prefetchw needed architecture builtin prefetchw signed dimitri john ledkov xnox ubuntu.com signed brian behlendorf behlendorf1 llnl.gov close 502,,
4192,60bd953ca4905e8720513d2d9e12932c0ea9cc83,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-01 18:24:40 -0800,498, fix enable linux builtin adding vpath support commit 47a4a6f required src obj line added top makefiles must removed makefiles builtin signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux spl 481 issue zfsonlinux spl 498,,
4193,4e6f996cdd6e2cf6f1935ccdc35609c7d850ab98,rian Behlendorf <behlendorf1@llnl.gov>, 2015-12-01 18:18:14 -0800,498, fix enable linux builtin adding vpath support commit 37d7cd9 required src obj line added top makefiles must removed makefiles builtin code add spl directory top level makefile failing due addition cert path search pattern adjusted tolerant signed brian behlendorf behlendorf1 llnl.gov issue 481 issue 498,,
4194,61d482f7cd1687177185140699c6843c904b38d4,hunwei Chen <david.chen@osnexus.com>, 2015-11-23 15:06:46 -0800,4021, linux 4.4 compat xattr operation take xattr_handler xattr_hander list get set changed take xattr_handler handler_flags argument removed accessed handler flag signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4021,,
4195,1a093716788a08b5d038c49ab99a6e9363c97a64,hunwei Chen <david.chen@osnexus.com>, 2015-11-23 14:47:29 -0800,4021, linux 4.4 compat make_request_fn return blk_qc_t part block polling support linux 4.4 make_request_fn return cookie value type blk_qc_t make zvol_request always return blk_qc_t_none ass whether want support block polling signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 4021,,
4196,43518d92fd9200aa07a871604a682e0dc7dff981,uxoko <tuxoko@gmail.com>, 2015-10-30 16:10:01 -0700,3973, fix overflow bit bit calculation phymem overflow causing smaller cause txg delayed one write disk end result horrendous write speed ram bit patch simple result 7mb reach speed par bit signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3973,,
4197,d0c614ecf9eb0b5f5c5d75316c2faeff63e03c4e,uxoko <tuxoko@gmail.com>, 2015-10-30 14:34:22 -0700,3973, fix null pointer bit bit system zio_buf_cache limit larger null need avoid reaping signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 3973,,
4198,d287880afd843bd8c0cbcabe514b65083d1a0090,hunwei Chen <david.chen@osnexus.com>, 2015-11-16 16:39:52 -0800,4018, fix snapshot automount behavior concurrent fail concurrent thread accessing snapdir one succeed user helper mount others get ebusy however original code treat ebusy thread success cause repeated avl_add thus panic also snapshot already mounted somewhere else thread accessing snapdir also get ebusy user helper mount cause strange thing follow_down_one fail follow_up jump mountpoint filesystem confuse hell vfs patch fix behavior returning immediately ebusy thread note side effect second case vfs retry several time returning eloop signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close 4018,,
4199,5c790678f1a5231b75be174eb8a02e15dfe9b4d5,ason Zaman <jason@perfinion.com>, 2015-10-24 14:01:08 +0800,3949, sysmacros make p2roundup trigger int overflow original p2roundup p2roundup_typed macro contain trigger pax integer overflow detection unsigned integer replace macro equivalent version doe trigger overflow axiom two complement morgan law law excluded middle proof align original align align align align q.e.d signed jason zaman jason perfinion.com reviewed chris dunlop chris onthe.net.au reviewed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3949,,
4200,27a19a0d5a5297f399eaa6eca86dc4047e484078,rian Behlendorf <behlendorf1@llnl.gov>, 2015-11-16 09:47:43 -0800, , zimport.sh add configure make option support allow following environment variable control build behavior zimport.sh script useful want debug build require specific build option default value config_options make_options nproc signed brian behlendorf behlendorf1 llnl.gov,,
4201,3d8d245fb3f1724488c972658da2aab9e8528210,rian Behlendorf <behlendorf1@llnl.gov>, 2015-11-16 15:00:38 -0800, , follow convention module load error error module load rare went unnoticed possible positive errno returned would result module loaded nothing initialized system panic shortly thereafter causing hard failure automated testing signed brian behlendorf behlendorf1 llnl.gov,,
4202,e7b75d9b46fcfea149bf7fd1f53d40379e3c7b5d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-11-16 14:45:42 -0800, , limit maximum object size kmem test limit maximum object size 128 total system memory kmem cache test large value result memory error system 512m memory additionally use known number object per slab calculating number object use test signed brian behlendorf behlendorf1 llnl.gov,,
4203,256fa983f46603df3f26c1508ca3a09f6316f36d,ndCycle <andcycle@andcycle.idv.tw>, 2015-11-10 22:01:26 +0800,4001, obey arc_meta_limit default size changing arc_max decreasing maximum arc size preserve default ratio arc_meta_limit otherwise arc_meta_limit may set arc_max signed andcycle andcycle andcycle.idv.tw signed brian behlendorf behlendorf1 llnl.gov close 4001,,
4204,31f24932a4052c1802f56e44b8e5194f4e7910ab,oli10K <ezomori.nozomu@gmail.com>, 2015-11-13 20:00:05 +0100,499, remove superfluous newline character remove superfluous newline character module parameter description signed loli10k ezomori.nozomu gmail.com signed brian behlendorf behlendorf1 llnl.gov close 499,,
4205,8fc851b7b5315c9cae92557be6c32e1ee236201f,ason Zaman <jason@perfinion.com>, 2015-10-24 14:15:58 +0800,488, sysmacros make p2roundup trigger int overflow original p2roundup p2roundup_typed macro contain trigger pax integer overflow detection unsigned integer replace macro equivalent version doe trigger overflow axiom two complement morgan law law excluded middle proof align original align align align align q.e.d signed jason zaman jason perfinion.com reviewed chris dunlop chris onthe.net.au reviewed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 2505 close 488,,
4206,f5f2b87df0362242b13b8183a2a8d88be63b0e73,uxoko <tuxoko@gmail.com>, 2015-11-06 15:00:55 -0800,496, fix taskq dynamic spawning currently taskq_dispatch spawn new task condition caller also member taskq however condition still cause deadlock task tq1 waiting another thread trying dispatch task tq1 patch remove check example zfs send fs0 001 zfs recv fs0_copy easily deadlock patch also move seq_task check taskq_thread used caller taskq_dispatch signed chunwei chen david.chen osnexus.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 496,,
4207,3e7e6f34d0b39b210de68fd69a0c08c6d21227a5,hunwei Chen <david.chen@osnexus.com>, 2015-10-23 17:17:57 -0700,487, call shrinker linux slab automatically free empty slab number partial slab min_partial need explicitly shrink fact calling shrinker cause heavy contention kmem_cache_node list_lock point might cause __slab_free livelock see zfsonlinux zfs 3936 signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 3936 close 487,,
4208,f3e2a7accdd33b5e1f9367d97f4f2177962c5567,rian Behlendorf <behlendorf1@llnl.gov>, 2015-11-05 08:13:52 -0800, , add test configuration file buildbot test file provided hint automated test infra structure control regression test run run file along line commit message start test_ sourced test script used override default value complete detail see http github.com zfsonlinux zfs buildbot signed brian behlendorf behlendorf1 llnl.gov,,
4209,98401d23611905e08d4c449d46c15e85d44cff72,rian Behlendorf <behlendorf1@llnl.gov>, 2015-11-09 12:10:02 -0800, , fix maybe uninitialized gcc 5.1.1 20150618 red hat 5.1.1 werror maybe uninitialized check detects snapname may initialized explicitly initialize variable resolved warning function 2019 error snapnameâ may used uninitialized void snprintf buf sizeof buf fsname snapname signed brian behlendorf behlendorf1 llnl.gov,,
4210,b23d54305a6d4c00e7c815b15703ccd5ab180f2f,urbo Fredriksson <turbo@bayour.com>, 2015-10-05 20:28:32 +0200, , remove shareiscsi description example zfs signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov,,
4211,291b06c37ef0918f3173a9048b905f47021dd88e,urbo Fredriksson <turbo@bayour.com>, 2015-10-04 14:03:46 +0200,3762, unmount part shutdown process boot process signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3762,,
4212,07d63f0cb953b7a0e5a88820e7cc2341d6e1d79e,hunwei Chen <david.chen@osnexus.com>, 2015-10-09 12:27:01 -0700,3899, fix fail path zfs_znode_alloc sa_bulk_lookup fails spit warning also recursive deadlock zfs_zinactive since never call fail path i_new never set inode never hashed safely remove set z_sa_hdl null fail path iput path stop zfs_inactive without entering zfs_zinactive way avoid deadlock prevent double signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 3899,,
4213,aa159afb568fff01bb9f427c16b406c5d29664c7,hunwei Chen <david.chen@osnexus.com>, 2015-10-13 14:13:52 -0700,3880, fix use free currently try wake waiter without first checking existence creates race window complete called freed add dr_wait dio_request indicate existence waiter also remove dr_rw since one using reorder dr_ref make struct compact 64bit signed chunwei chen david.chen osnexus.com signed brian behlendorf behlendorf1 llnl.gov issue 3917 issue 3880,,
4214,bc4501f75a04ddf9c04cef8332d12b41c35863d5,ustin T. Gibbs <gibbs@FreeBSD.org>, 2015-10-13 14:09:45 -0700,3443, illumos 6267 dn_bonus evicted early 6267 dn_bonus evicted early reviewed richard yao ryao gentoo.org reviewed xin delphij freebsd.org reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 6267 http github.com illumos illumos gate commit d205810 signed brian behlendorf behlendorf1 llnl.gov ported ned bass bass6 llnl.gov issue 3865 issue 3443,,
4215,33df62d052bad11a1ebb220810672fcfba2a8d86,ames Lee <jlee@thestaticvoid.com>, 2015-09-19 22:00:36 -0400,3526," zfs import perform verbatim import using cache file change modifies import service use default cache file perform verbatim import pool boot fix code search device imported visible pool using cache file keeping way zfs always worked solaris illumos freebsd systemd performs import written man page zpool 1m,8 pool cache automatically imported system boot importantly cache contains important information importing multipath device help control pool get imported dynamic environment like sans may thousand visible constantly changing pool variable equipped handle verbatim import prevent rogue pool automatically imported mounted change also stop service exporting pool shutdown exporting pool meant performed explicitly administrator system old behavior searching importing visible pool preserved switched heeding warning toggling variable etc default zfs signed james lee jlee signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3777 close 3526",,
4216,2986b3fd2587b1da5b6047a5c0b6bbb0b6d9c47e,im Chase <tim@onlight.com>, 2015-10-09 13:28:12 -0500,3905, zdb segfault avoid buffer overrun zero bpobj subobjects using signed array index also fix type cast printf argument signed tim chase tim onlight.com signed brian behlendorf behlendorf1 llnl.gov close 3905,,
4217,385f9691c46811e5e04626ef879bf7061a4009ed,HE <git@dehacked.net>, 2015-10-11 11:42:42 -0400,3911, libzfs handle edom error edom may occur user try set recordsize large without use zfs set demonstrated zpool create testpool recordsize 32m dev ... signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3911,,
4218,9b13f65d284d3a6b455df3199ffc83fd18bbdded,rian Behlendorf <behlendorf1@llnl.gov>, 2015-10-12 12:31:05 -0700,482, fix cpu hotplug allocate kmem cache magazine every possible cpu might added system ensures one cpu enabled safely used immediately many system number online cpu identical number present cpu doe imply increased memory footprint fact dynamically allocating array magazine pointer instead using worst case nr_cpus end decreasing memory footprint signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 482,,
4219,935434ef01fc067f3b4bc26be6378f8f1d89734a,rian Behlendorf <behlendorf1@llnl.gov>, 2015-10-13 09:17:01 -0700,3904, fix arc_c arc_c_min panic strictly enforce keeping arc_c arc_c_min asserts left place catch debug build logic added gracefully handle production build signed brian behlendorf behlendorf1 llnl.gov issue 3904,,
4220,8f90f7372a1b456ec6ede5e5464ffa23273a7a99,urbo Fredriksson <turbo@bayour.com>, 2015-09-23 23:04:17 +0200,3837, rename zed.service zfs zed.service consistency systemd unit file init script share name prevents issue zed started twice system systemd sysv infrastructure installed concurrently backward compatibility zed alias added allows user interact service using either name zed zfs zed signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue 3837,,
4221,374303a3c9f7783e2b8122f5dcf2c1d053cf13f7,hunwei Chen <tuxoko@gmail.com>, 2015-09-02 00:02:55 +0800,473, use tab indent rwlock.h signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 473,,
4222,a00b3eb58fbcedf29c7426cc1300549d6b72b52c,hunwei Chen <tuxoko@gmail.com>, 2015-09-01 23:28:02 +0800,473, rwsem use kernel provided owner possible defined rw_semaphore owner field need signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 473,,
4223,4f8e643afe9d8cc558566e1dda05ef597cb2526e,hunwei Chen <tuxoko@gmail.com>, 2015-09-01 21:55:06 +0800,473, take spin lock rwlock owner spin lock around rw_owner completely unnecessary reason modified down_write context race another thread modifying mean holding rwlock taking spin lock eliminate race also check rw_owner rw_write_held unnecessary might need take spin lock signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 473,,
4224,3ef005c674e3207e8c6fba5d65a76468f97084ae,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-30 20:36:18 -0400,3862, fix zfs dkm uninstall update modern version dkm cleanup build directory installing resulted dkm uninstall never running check added commit 866c162 verifies existance zfs.release build product would never true patch resolve issue updating conditional check explicitly installed zfs_config.h file version signed brian behlendorf behlendorf1 llnl.gov close 3862,,
4225,3e1e4c735c4452c137443d7e7dfbe75447dc8e00,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-30 09:26:21 -0700,478, fix spl dkm uninstall update modern version dkm cleanup build directory installing resulted dkm uninstall never running check added commit 4cdcdbf verifies existence spl.release build product would never true patch resolve issue updating conditional check explicitly installed spl_config.h file version signed brian behlendorf behlendorf1 llnl.gov close 478,,
4226,919efe93cb1263a3cfa1b8edf4b0a636a9e579cd,ichard Yao <ryao@gentoo.org>, 2015-09-30 13:25:11 -0400,3858, call spinlock never block holding spin lock block critical section spin lock zrl_add mutex_enter signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 3858,,
4227,bc8ffb2d0855b76dd0f8f0993cadf8ef0dfe0f0a,ichard Yao <ryao@gentoo.org>, 2015-09-29 18:28:47 -0400,3858, remove obsolete zv_lock user zv_lock removed 37f9dac forgot remove let remove clean signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 3858,,
4228,57732964d35616d6c93b8377b1ed72c485d9d73d,urbo Fredriksson <turbo@bayour.com>, 2015-09-22 09:56:28 +0200,3816, init script fix fix regression overlay_mounts fix update rc.d command postinst thanx subzero79 github fix make sure filesystem exists trying mount mount_fs fix local variable usage fix read_mtab strip control character space 040 proc mount globaly first occurrence replace unprintable character use variable name underscore need remove together add check_boolean check user configure option set yes yes yes combination anything else considered unset add zfs_pool_import default config semi colon separated list pool import intended system lot_ pool san example would many put variable add config option adding additional option zpool import add documentation chance overriding zpool_cache variable config file remove sort find_pools sometimes available really necessary signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 3816,,
4229,45838e3a414a7a1a5fb49dc528dee1d22449599b,hunwei Chen <tuxoko@gmail.com>, 2015-09-29 00:02:31 -0700,3850, fix uioskip crash skip end uioskip skip iovec end current loop condition falsely check pas end iovec fix checking uio_iovcnt first signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3806 close 3850,,
4230,2ebe396046c99ea191a51f24658273fd860b88c4,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-28 09:08:11 -0700,3796, fix pax patch grsec slab_usercopy panic support grsecurity pax kernel configuration enabled kernel option enabled slab used copy user kernel space must created slab_usercopy stock linux kernel slab_usercopy definition cause change behavior non pax enabled kernel verified wuffleton null wuffleton.com signed brian behlendorf behlendorf1 llnl.gov issue 2977 issue 3796,,
4231,b815ec32b3ba04ad7307ca8945a865eec0ec766b,ichard Yao <ryao@gentoo.org>, 2015-09-21 19:08:26 -0400,3792, userspace pas zero length segment via writev readv userspace trigger assertion passing zero length segment assertion enabled 27961.614792 verify3 skip iov iov_len failed 27961.614795 panic zfs_uio.c 187 27961.614805 call trace 27961.614811 dump_stack 0x45 0x57 27961.614830 spl_dumpstack 0x44 0x50 spl 27961.614834 spl_panic 0xbb 0x100 spl 27961.614908 0x134 0x140 zcommon 27961.614930 zfs_write 0x1fd 0xe80 zfs 27961.615014 0x7f 0x110 zfs 27961.615035 zpl_iter_write 0xa0 0xd0 zfs 27961.615037 0x59 0x80 27961.615063 do_readv_writev 0x11b 0x260 27961.615098 vfs_writev 0x39 0x50 27961.615100 sys_writev 0x4a 0xe0 27961.615103 0x16 0x6e solution delete assertion could potentially occur uiomove well contains analogous assertion appear similarly unnecessary remove well reported jonathan vasquez jvasquez1011 gmail.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 3792,,
4232,a3000f9358159d761bdf59bd1c4d318f7ec71815,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-25 11:15:02 -0700,3789, revert dn_bonus unsafely reverts commit determined patch introduced quota regression described 3789 signed tim chase tim chase2k.com signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 3443 issue 3789,,
4233,5592404784d3125cbeb6df002674867c009c8b48,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-24 16:32:25 -0700,3870, fix synchronous behavior commit b39c22b set read_sync write_sync flag bio based zio_priority_ flag passed unnoticed side effect making synchronous certain turn resulted able dispatch zio would result rcu stall disk removed system additionally could negatively impact performance explains performance regression reported 3829 3780 patch resolve issue making blocking behavior dependent wait flag passed rather overloading passed bio flag finally write_sync read_sync behavior restricted non rotational device benefit queuing aggregate signed brian behlendorf behlendorf1 llnl.gov issue 3652 issue 3780 issue 3785 issue 3817 issue 3821 issue 3829 issue 3832 issue 3870,,
4234,ef5b2e1048eeeb7a81d932d38e52d897b33fca54,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-23 15:59:04 -0700,3822, avoid blocking described comment critical reclaim thread careful blocking like must never wait hash lock must never wait task turn wait deadlock see issue 3822 full backtraces showing problem resolve issue updated use asynchronous arc prune function mean arc_prune_async may called still outstanding arc_prune_tasks however problem arc_prune_async already keep reference count preventing multiple outstanding task per registered consumer functionally behavior counterpart illumos function signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 3808 issue 3834 issue 3822,,
4235,04870568e6dae66d79ca144b0dcfa001324c562d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-23 14:28:43 -0700,3719, disable callback function disabled current code provide critical functionality may result deadlock certain circumstance however expect need hook future code entirely removed signed brian behlendorf behlendorf1 llnl.gov issue 3719,,
4236,d4787d55ad65f517d8bdf12b73b296b27ca42e3a,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-23 13:00:28 -0700,3794, allow nfs activity defer snapshot unmounts accessing snapshot via nfs cause auto unmount snapshot deferred time snapshot idle analogous zpl_revalidate logic employed locally mounted snapshot signed brian behlendorf behlendorf1 llnl.gov issue 3794,,
4237,784a7fe5d9a0c02e96f3ae019a08ecebee2a7018,ukas Wunner <lukas@wunner.de>, 2015-09-23 17:55:15 +0200,3799, linux 4.3 compat bio_end_io_t bio_uptodate commit torvalds linux block add bi_error field struct bio dropped error argument bio_endio favor newly introduced bio bi_error also replaces bio bi_flags value bio_uptodate bio_endio argument function linux 2.6.24 made argument function prototype changed yet argument function support pre 2.6.24 kernel already dropped 37f9dac592bf zvol processing use struct bio assumed argument version zvol_request remaining code support argument version hereby removed signed brian behlendorf behlendorf1 llnl.gov signed lukas wunner lukas wunner.de issue 3799,,
4238,4a4809faab83be1bc723086ad44816bacf646ae3,uina822 <ayuichi@club.kyutech.ac.jp>, 2015-09-14 15:11:12 +0900,3773, fixed signal typo signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 3773,,
4239,e2ede4721bc224052f30fcff7a244276b5e01c6f,uina822 <ayuichi@club.kyutech.ac.jp>, 2015-09-14 15:07:16 +0900,3773, add reload function default signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 3773,,
4240,56b3986316365d997cb381d3295b99612e18ab6e,on Brady <don.brady@intel.com>, 2015-09-17 17:55:22 -0600,2071, add large block support zpios benchmark part large block support effort make sense add support large block zpios specifying zfs block size zpios optional default 128k block size specified zpios ... size blocksize size ... use size zfs block test specified comma delimited list optional unit suffix supported range power two 128k 16m range block size tested follows example run non realistic result output abbreviated space  regioncount 750 regionsize chunksize offset threaddelay cleanup human readable verbose cleanup blocksize cnt cnt blksz data data  750 128k 90.06m 93.37m 750 256k 79.71m 99.81m 750 512k 42.20m 93.14m 750 35.51m 89.36m 750 128k 85.49m 90.81m 750 256k 61.42m 99.24m 750 512k 49.09m 108.78m 750 128k 86.28m 88.73m 750 256k 64.34m 93.47m 750 512k 68.84m 124.47m 750 53.97m 97.20m   signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3795 close 2071,,
4241,e7a05183c49fc897fe56e060fcbfbc20a41bf9f0,emy Blank <remy.blank@pobox.com>, 2015-09-13 13:41:16 +0200,3769, tab indent continuation line scan section zpool status section use tab make easy parse scan section continuation line indented four space make consistent others signed remy blank remy.blank pobox.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 3769,,
4242,3af56fd95fbe8b417d7ed7c9c25ef59d6f1ee161,ed Bass <bass6@llnl.gov>, 2015-09-16 02:49:09 -0700,3787, honor xattr dataset property zfs incorrectly directory based extended attribute even xattr specified dataset property mount option support honor temporary mount option including xattr added commit two issue mount option handling libzfs historically included xattr list default mount option override dataset property dataset always configured use directory based xattrs even xattr dataset property set address removing xattr set default mount option libzfs way enable system attribute based extended attribute using temporary mount option add mount option saxattr dirxattr enable xattr behavior name suggest approach advantage mirroring valid xattr dataset property value following existing convention mount option name signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3787,,
4243,66aad10ce88f2a599365322a79f20d02f3c64393,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-19 12:32:38 -0700,3771, fix null mount syscall data parameter passing null mount data result einval treated empty string passed succeed signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 3771,,
4244,f52ebcb3eb1630694648237ad6d439c226c3dd99,ichard Yao <ryao@gentoo.org>, 2015-09-18 08:32:52 -0400,3798, discard zvols exceed length block replaced end start calculation cached value neglected update discard operation cause discard data requested causing data loss zvols reported richard connon richard.connon zynstra.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3798,,
4245,7a27ad00ae142b38d4aef8cc0af7a72b4c0e44fe,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-09 15:25:52 -0700, , tag zfs 0.6.5 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4246,4e0f33ffe018b07021f627328f0a207550d1b374,rne Jansen <arne@die-jansens.de>, 2015-09-11 09:18:56 -0700,3757, illumos 6214 zpools going south 6214 zpools going south reviewed igor kozhukhov ikozhukhov gmail.com reviewed george wilson george.wilson delphix.com reviewed dan mcdonald danmcd omniti.com reviewed saso kiselkov skiselkov.ml gmail.com reference http www.illumos.org issue 6214 http cr.illumos.org webrev sensille porting note reintroduce b_compress l2arc_buf_hdr_t commit b9541d6 compression flag moved generic b_flags arc_buf_hdr_t problem may manipulate compression flag done safely hash lock held see illumos 6214 detailed analysis race macro removed arc_buf_info ported brian behlendorf behlendorf1 llnl.gov close 3757,,
4247,f17d005bcc9b7edeb15b10bf947379a504b2d9f7,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-09 15:22:31 -0700, , tag spl 0.6.5 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4248,9965059ab9991a5fc7df9a489021e73880b3bcc0,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-18 13:51:20 -0700,3659, prefetch start end volume adding zvol system prefetch start end volume prefetching region volume desirable likely accessed immediately blkid kernel scanning partition table another task probe device signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 3659,,
4249,d4bf6d8429371634b0c6bcc14b5868d849b7c07d,ichard Yao <ryao@gentoo.org>, 2015-09-07 12:35:21 -0400,474, disable direct reclaim taskq worker thread linux 3.9 illumos doe direct reclaim code run inside taskq worker thread designed deal allowing direct reclaim inside worker thread therefore deadlock set indicate kernel reclaim code inside context memory allocation allowed block filesystem activity signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1274 issue zfsonlinux zfs 2390 close 474,,
4250,8198d18ca7e05ec30139e10d658a8b06c0ec4c55,ichard Yao <ryao@gentoo.org>, 2015-09-07 12:03:19 -0400,3741, reintroduce accounting zvols linux 3.19 zfsonlinux zfs caused lose accounting zvols originally wrote last year symbol needed maintain accounting gpl exported torvalds linux provided suitable symbol restoring functionality month later call restore accounting linux 3.19 later well older kernel patch backported signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3741,,
4251,1e17e910ea315c0c3f732a7e8d31229dbd1e6069,enH <sen@senhaerens.be>, 2015-09-08 09:45:22 -0700,3747, force create run sendsigs.omit.d link starting zed resolve following error restarting zed force creating run sendsigs.omit.d zed link sudo etc init.d zfs zed restart stopping zfs event daemon starting zfs event daemon failed create symbolic link run sendsigs.omit.d zed file exists signed senh sen senhaerens.be signed brian behlendorf behlendorf1 llnl.gov close 3747,,
4252,3b36f8319d56842c85782e7842218a7499f3cf16,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-01 13:19:10 -0700,3728, add dbgmsg kstat internally zfs keep small log facilitate debugging default log disabled enable set content log accessed reading proc spl kstat zfs dbgmsg file writing proc file clear log echo sys module zfs parameter echo proc spl kstat zfs dbgmsg zpool import tank cat proc spl kstat zfs dbgmsg 0x01 2492357525542 2525836565501 timestamp message 1441141408 spa tank async request task 1441141408 txg open pool version 5000 software version 5000 ... 1441141409 spa tank async request task 1441141409 txg import pool version 5000 software version 5000 ... 1441141414 command zpool import tank note zfs_dbgmsg dprintf function mapped log mentioned kernel debug log accessed though proc spl kstat zfs dbgmsg kstat user space consumer log message immediately written stdout applying zfs_debug environment variable zfs_debug cmd ztest ztest signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 3728,,
4253,0500e835af3ea1f3abe27a572f7b2328b4cde386,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-28 14:54:32 -0700,616, support accessing .zfs snapshot via nfs patch based previous work done andrey yshui trigger automount using kern_path traverse known snapshout mount point snapshot mounted nfs access content snapshot allowing nfs client access .zfs snapshot directory would normally mean root user client mounting export no_root_squash would able use mkdir rmdir manipulate snapshot server prevent configuration mistake module option added disables mkdir rmdir functionally system administators desiring functionally must explicitly enable signed brian behlendorf behlendorf1 llnl.gov close 2797 close 1655 close 616,,
4254,aa9b27080b3411cddf93391bef3090a1a3fcaccc,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2013-07-30 12:59:34 +0300, , fix invalid fileid snapshot root dentry prevents nfs client detection different fileids snapshot root dentry snapshot mount signed andrey vesnovaty gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4255,e20cd6f7a8922709b1aa2ecefd783390102d79e0,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-04 13:02:48 -0700,3720, merge branch zvol performance improvement zvols signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3720,,
4256,d60328645d34be592e41e8319138e5d14cc258f7,ichard Yao <ryao@gentoo.org>, 2014-09-14 23:41:15 -0400, , remove autotools check autotools check never needed check existence kernel header also comment config kernel blk queue nonrot.m4 incorrect linux 2.6.28 api change linux 2.6.27 api change signed richard yao ryao gentoo.org,,
4257,d677203a9b38b389184a4e2c43c6cd8f8e5b20d4,ichard Yao <ryao@gentoo.org>, 2014-09-14 23:39:03 -0400, , remove autotools check autotools check never needed check existence kernel header signed richard yao ryao gentoo.org,,
4258,7d6e2adb4e4a60efe2a906faf00d134c0403dda5,ichard Yao <ryao@gentoo.org>, 2014-07-06 21:06:43 -0400, , remove blk_rq_bytes blk_rq_sectors autotools check signed richard yao ryao gentoo.org,,
4259,f952eaa7ec48eb72ccff31ce74e4699caebf565d,ichard Yao <ryao@gentoo.org>, 2014-07-06 21:05:40 -0400, , remove blk_rq_pos autotools check signed richard yao ryao gentoo.org,,
4260,f8c56b405d24d8b1342e2b7409de1b1f4548d4ca,ichard Yao <ryao@gentoo.org>, 2014-07-06 20:40:04 -0400, , remove autotools check signed richard yao ryao gentoo.org,,
4261,e8c6be131cfd2ed87a1584e53e7702f8681efefa,ichard Yao <ryao@gentoo.org>, 2014-07-06 20:38:45 -0400, , remove autotools check signed richard yao ryao gentoo.org,,
4262,dd6f9fe61b522d878ab29a119e5fe9dab5b9f7d5,ichard Yao <ryao@gentoo.org>, 2014-07-06 20:34:51 -0400, , remove blk_end_request autotools check signed richard yao ryao gentoo.org,,
4263,65f340e72579cf43ec30d9b265b0d3e1f5955bd5,ichard Yao <ryao@gentoo.org>, 2014-07-06 20:31:41 -0400, , remove rq_is_sync autotools check signed richard yao ryao gentoo.org,,
4264,9ddf9b8e1587ec7112913a6b5e1f82e468a891b6,ichard Yao <ryao@gentoo.org>, 2014-07-06 20:30:33 -0400, , remove autotools check signed richard yao ryao gentoo.org,,
4265,fa56567630cfad95b77dee507595d77f24e99cb9,ichard Yao <ryao@gentoo.org>, 2014-10-10 11:23:23 -0400, , support secure discard zvols linux 2.6.36 introduced req_secure indicate discard must processed optimization like block alignment consequently discard semantics prior 2.6.36 require always process unaligned discard previously would optimization regardless patch change thing correctly restrict optimization situation req_secure exists included flag signed richard yao ryao gentoo.org,,
4266,37f9dac592bf5889c3efb305c48ac39b4c7dd140,ichard Yao <ryao@gentoo.org>, 2014-07-04 18:43:47 -0400, , zvol processing use struct bio internally zvols file exposed block device api intended reduce overhead thing require block device however zol zvol code emulates traditional block device top half bottom half unnecessary source overhead doe exist openzfs platform doe patch remove early user patch reported double digit performance gain iop zvols range comment code suggest current implementation done obtain merging linux elevator however dmu already doe write merging arc_read implicitly merge read thread permitted fetch buffer arc addition commercial zfsonlinux distribution report regular file performant zvols current implementation main consumer zvols vms iscsi target elevator merge minor refactoring allows register zfs_request make_request handler place function eliminates layer code broke request zvols top half bottom half several benefit per zvol spinlocks redundant elevator processing interrupt disabled actually necessary redispatching taskq thread busy linux page routine properly block many autotools check become obsolete unfortunate consequence eliminating layer longer call instrumentation hook block accounting hook gpl exported call consequently lose ability monitoring via iostat since zvols internally file mapped block device okay anyone willing accept performance penalty block layer accounting could use loop device zvol consumer alternatively perf ftrace likely could used also tool like latencytop still work tool latencytop sometimes provide better view performance bottleneck traditional block accounting tool  lastly direct reclaim occurs spacemap loading swap zvol code deadlock deadlock could already occur sync always zvols given swap zvols yet production ready blocker signed richard yao ryao gentoo.org,,
4267,dca8c34da4212ed85a92111f26bd3a3cd782f270,im Chase <tim@chase2k.com>, 2015-09-03 07:13:15 -0500,3733, prevent reclaim traverse prefetch thread reclaim traverse prefetch thread run system taskq overrun stack signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 3733,,
4268,0282c4137e7409e6d85289f4955adf07fac834f5,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-31 16:46:01 -0700,3351, add temporary mount option add required kernel side infrastructure parse arbitrary mount option enables support temporary mount option largely way handled platform see temporary mount point property section zfs complete detail signed brian behlendorf behlendorf1 llnl.gov close 985 close 3351,,
4269,782b2c326ea445c5cab0c1b0373d64d5e83cc5d4,ichard Yao <ryao@gentoo.org>, 2015-08-31 11:36:32 -0400, , vdev_req_fua mapped req_fua pre 2.6.37 kernel support req_fua request flag bio flag zvols consumer vdev_req_fua since passed request obey req_fua flag like later kernel optimization matter 2.6.36 2.6.37 zvol rework change thing use bio longer able distinguish earlier kernel signed richard yao ryao gentoo.org,,
4270,69de34219af4a4d100cc5ed155a68ab03393fca4,im Chase <tim@chase2k.com>, 2015-08-30 20:59:23 -0500,3721, dbuf hash table sized arc hash table commit added parameter allow control size arc hash table dbuf hash table size determined similarly signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3721,,
4271,6cde64351e236712a17d41c1578d5843a0f006e4,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-01 09:45:10 -0700,3724, add spa_slop_shift module option allow easy turning pool reserved free space previous version zfs v0.6.4 earlier held pool capacity reserve commits 3d45fdd 0c60cc3 increased setting spa_slop_shift restore previous default setting signed brian behlendorf behlendorf1 llnl.gov close 3724,,
4272,3f1cc17c9005d19faba91fe7236332ed502b1a3f,ames Lee <jlee@thestaticvoid.com>, 2015-08-30 14:36:41 -0400,3513, reorder zfs service allow var separate dataset zed depends var var separate dataset must mounted starting zed change move zfs zed service starting first starting zfs mount zfs share discussed issue 3513 zed doe need start first order consume event made zfs import zfs mount service event queued handled later boot process zed may however handle sharing future started zfs share service commit also stop zfs import service writing temp file var tmp shutdown corrects return code openrc service openrc specific change noted issue 3513 reitereated issue 3715 committed da619f3 signed james lee jlee signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3513,,
4273,fb40095f5f0853946f8150481ca22602d1334dfe,ichard Yao <ryao@gentoo.org>, 2015-08-29 12:01:07 -0400,3712, disable lba weighting file ssds lba weighting make sense rotational medium outer track twice bandwidth inner track however detrimental nonrotational medium solid state disk effect ensure metaslabs enter best fit allocation behavior sooner detrimental performance also make sense file underlying filesystem arrange thing however want signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3712,,
4274,cafbd2aca3fd17be78577348d9661f4142d1eb70,uxoko <tuxoko@gmail.com>, 2015-09-01 20:02:48 +0800,2869, check rw_write_held zfs_inactive read locking need check already write lock otherwise would deadlock ourself rollback  zfs_suspend_fs rw_writer zfs_resume_fs zfs_rezget zfs_iput_async iput ... zfs_inactive rw_reader signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2869,,
4275,97771edaca2cac5905571f1355dd2b6256a306b4,ichard Yao <ryao@gentoo.org>, 2015-08-31 16:11:45 -0700, , remove autotools check needed supporting kernel earlier 2.6.30. support kernel dropped safely remove check signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
4276,3c119330a6b4e166f85c3b07ae011231f9253dee,ichard Yao <ryao@gentoo.org>, 2015-08-31 12:21:21 -0400, , remove autotools check needed supporting kernel earlier 2.6.30. support kernel dropped safely remove check signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
4277,324dcd373371fbc2855406444c1c106722970c18,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-01 09:23:02 -0700, , linux 4.2 compat misc_deregister misc_deregister function changed void return type rather add compatibility code detect change simply ignore return code kernel used log informational error message real value signed brian behlendorf behlendorf1 llnl.gov,,
4278,4fa4cab972899ecf6266c23986159a109dbcac5b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-09-01 09:17:24 -0700, , linux 4.2 compat misc_deregister misc_deregister function changed void return type rather add compatibility code detect change simply ignore return code kernel used log informational error message real value signed brian behlendorf behlendorf1 llnl.gov,,
4279,a64e55752f4e88dcb544f2480100dcd6f6be3277,im Chase <tim@chase2k.com>, 2015-08-27 11:13:20 -0500,472, create new thread recursive taskq dispatch necessary dynamic taskq enabled thread taskq occupied recursive dispatch cause deadlock calling thread depends recursively dispatched thread return condition patch attempt create new thread recursive dispatch none available signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 472,,
4280,801b56090b42763d1d3b2593bb8d731d0d8fef22,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-31 17:00:17 -0700,472, revert create new thread recursive taskq dispatch necessary reverts commit 076821e due locking issue uncovered subsequent testing assert hit due tq_nspawn updated outside lock patch need reworked verify3 tq_nspawn failed signed brian behlendorf behlendorf1 llnl.gov issue 472,,
4281,076821eaff146a56aa6a66916d70eda7db3347ed,im Chase <tim@chase2k.com>, 2015-08-27 11:13:20 -0500,472, create new thread recursive taskq dispatch necessary dynamic taskq enabled thread taskq occupied recursive dispatch cause deadlock calling thread depends recursively dispatched thread return condition patch attempt create new thread recursive dispatch none available signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 472,,
4282,278bee9319ba5947b995673d2c76e0333f2d33d4,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-24 16:21:13 -0700,2841, linux 3.18 compat snapshot auto mounting factor .zfs snapshot auto mouting code take account change made upstream kernel lay groundwork enabling access .zfs snapshot via nfs client patch make following core improvement actively auto mounted snapshot tracked two global tree indexed snapshot name objset respectively allows fast lookup auto mounted snapshot regardless without needing access parent dataset snapshot entry added tree however removed tree context unmount process eliminates need complicated error logic handle unmount failure reference taken snapshot entry tree ensure always remain valid task outstanding mnt_shrinkable flag set snapshot vfsmount_t right auto mount succeeds allows kernel unmount idle auto mounted snapshot needed removing need function snapshot active use automatically unmounted long least one dentry revalidated every second auto unmount expiration timer extended commit torvalds linux bafc9b7 caused snapshot auto mounted zfs immediately unmounted dentry revalidated consequence zfs invaliding snapdir dentries ensure negative dentries mask new snapshot patch modifies behavior negative dentries invalidated solves issue may result performance improvement signed brian behlendorf behlendorf1 llnl.gov close 3589 close 3344 close 3295 close 3257 close 3243 close 3030 close 2841,,
4283,b23975cbe0f249671c131b0d6e4ae1bb10594440,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2013-08-12 21:47:04 +0300,2797, zfsctl need sync ctldir inodes metadata write disk ctldir inodes check inode belongs ctldir return immediately signed andrey vesnovaty gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 2797,,
4284,c6a3a222d3a1d2af94205a218c0ba455200fb945,ichard Yao <ryao@gentoo.org>, 2015-08-29 12:49:55 -0400,3713, clear zvols zvols entropy source kernel disable consistent upstream kernel torvalds linux signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3713,,
4285,3757bff3b155a4234905560167a0031cc4b0f746,oli10K <ezomori.nozomu@gmail.com>, 2015-08-29 21:52:44 +0200,3714, fix small typo add missing space module parameter description signed loli10k ezomori.nozomu gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3714,,
4286,da619f3a199d938168079e153360b280dc45268a,ichard Yao <ryao@gentoo.org>, 2015-08-29 18:45:56 -0400,3715, openrc dependency logic belongs mount dependency handling zfs belong mount script zed script signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3715,,
4287,36b454ab4c33fef59c9cb25ff09c2454dcd4aa04,im Chase <tim@chase2k.com>, 2015-08-27 14:50:39 -0500,3709, initialize taskq entry embedded within struct vdev part stack reduction effort zio_t containing taskq_ent added struct vdev_queue part struct vdev taskq entry initialized currently done zio_create newly created bare zio_t object rationale described signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3709,,
4288,bba365cfc810161cf63b6e07100b7a6bd082ee6d,ndreas Buschmann <andreas.buschmann@tech.net.de>, 2015-08-19 13:01:40 +0200,3693, add extra keyword slot vdev_id.conf add new keyword slot vdev_id.conf selects get slot number sata disk needed enable access physical position disk supermicro 2027r ar24nv signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 3693,,
4289,d439f63ff5ebc3ce0c96e8a284e9c642c4b7663c,im Chase <tim@chase2k.com>, 2015-08-23 09:58:11 -0500,3705, allow recovery corrupted snapshot map zap object containing snapshot map corrupted due unrecoverable checksum error otherwise normally panic system due verify patch attempt allow recovery avenue situation manufacturing descriptive snapshot name ignoring error scrubbing pool type corruption show affected object error list rather panicking recovery code enabled zfs_recover module parameter set signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3705,,
4290,4cb7b9c5d42c831878e0cf90c845ed52a2a34d72,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-24 14:18:48 -0700,3591, check large block feature flag volume since zol allows large block used volume unlike upstream illumos feature flag must checked prior volume creation critical unlike filesystems volume create object large block part create therefore safely checked dataset created addition patch update relevant error message use zfs_nicenum print maximum blocksize signed brian behlendorf behlendorf1 llnl.gov close 3591,,
4291,c495fe2c1c6b1c63aefcd832e2e0eb0a20d4c4dc,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-27 17:01:59 -0700,3684, limit 16m support large block added dmu_max_access increased allow block 16m fit transaction handle side effect increasing volume scaled dmu_max_access 64m 10m issue volume default use block size result allocating 64k array dbufs solution restore maximum size 10m patch specifically change 16m close enough signed brian behlendorf behlendorf1 llnl.gov close 3684,,
4292,5475aada9474464f973788c1b2fc6216486fb303,hunwei Chen <tuxoko@gmail.com>, 2015-07-30 22:24:36 +0800,3640, linux 4.1 compat loop device zfs starting linux 4.1 allows iov_iter bio_vec passed iter_read iter_write notably loop device pas bio_vec backend filesystem however current zfs code assumes iovec without check always crash using loop device restructured uio_t safely pas bio_vec uio_t uio_bvec set uio function modified handle bio_vec case separately const uio_iov cause warning xuio related stuff explicit convert non const signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3511 close 3640,,
4293,17888ae30d6111f1fe25087a256724ee9b1a0a84,hunwei Chen <tuxoko@gmail.com>, 2015-05-11 22:22:56 +0800, , add compatibility layer kmap kunmap _atomic starting linux 2.6.37 kmap kunmap _atomic take argument instead use zfs_ kmap kunmap _atomic wrapper always take argument ignore 2nd newer kernel signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4294,ae89cf0f34de323c4a7c39bfd9b906acc2635a87,hunwei Chen <tuxoko@gmail.com>, 2015-07-30 22:19:01 +0800,468, restructure uio accommodate bio_vec starting linux 4.1 bio_vec allowed pas filesystem via iter_read iter_write add bio_vec field uio_t hold use uio_bvec segflg determine vec also consistent newer kernel make iovec bio_vec immutable make uio act iterator new uio_skip field indicating number byte skip first segment signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 3511 issue zfsonlinux zfs 3640 close 468,,
4295,efc412b645cbb209e42983a9dcb9d3c9427c5495,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-28 16:45:17 -0700,3653, linux 4.2 compat vfs_rename function relies classic method making sure update etc zfs zpool.cache file atomic writes temporary version file vn_rename switch place way never exist partial version file nothing conceptually good strategy make good sense platform easy rename within kernel unfortunately linux one platform even basic file system within kernel strongly discouraged order support vn_rename implementation end complex fragile fragile recent linux 4.2 change broken possible update vn_rename work latest kernel better long term strategy stop using vn_rename entirely complex fragile code removed achieving straight forward config_write consumer vn_rename patch reworks update cache file place file truncated written synced disk error encountered file unlinked leaving system consistent state doe expose tiny tiny tiny window system could crash exactly wrong moment could leave partially written cache file however highly unlikely cache file infrequently updated kilobyte size written single vn_rdwr call somehow happen pose risk pool simply removing cache file allow pool imported cleanly going forward even issue intend disable use cache file default bottom line using vn_rename allows make zol robust upstream kernel change signed brian behlendorf behlendorf1 llnl.gov close 3653,,
4296,ebc2c9374bde0c53837e7c909809697088615a88,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-19 14:48:21 -0700,3653, linux 4.2 compat vfs_rename attempting perform vfs_rename linux 4.2 newer kernel result eacces error rather attempting add maintain ugly compatibility code best retire interface first step splat test disabled linux 4.2 newer kernel vn_rename failed vn_rename tmp vn.tmp.1 tmp vn.tmp.2 signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 3653,,
4297,ff9b1d07256c57b607cc6ad3448c1fb2487305d6,rian Behlendorf <behlendorf1@llnl.gov>, 2015-08-18 11:20:22 -0700,3370, handle zap_lookup failure ddt_object_load failing lookup name result panic ddt_object_load error safely returned caller handling resulting useful user error message signed brian behlendorf behlendorf1 llnl.gov close 3370,,
4298,9f5ba90f9fb0aa39de35afaf6e9f385c4ddd8865,ichard Yao <richard.yao@clusterhq.com>, 2015-07-14 14:28:29 -0400,3595, fix zvol detection zpool create subcomand return error debug build userland tool given zvols signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3595,,
4299,6d79eabf9ff19b5c04fba735802b417389bdfa38,uxoko <tuxoko@gmail.com>, 2015-08-17 14:55:52 +0800,3685, add parenthesis ternary operator without parenthesis particular assert evaluate rw_reader zap zap_ismicro fatreader rw_reader lti signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3685,,
4300,851a549305ad9001e7a6dfbf735f501b286e9d08,im Chase <tim@chase2k.com>, 2015-08-12 09:57:35 -0500,471, include source freeable memory freemem calculation prevents arc collapse non zfs filesystems block layer memory consumer use lot reclaimable memory page cache signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close zfsonlinux zfs 3680 close 471,,
4301,9d4f86e82562960520ff8f05e85faeb9b417f5e8,hris Dunlop <chris@onthe.net.au>, 2015-08-09 22:03:30 +1000,3673, fix build failure linux 4.1 ftrace see also 3546 commit c1718e9 signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3673,,
4302,302f31ffc7586de8537e5570e7a77c839f09ad75,hris Dunlop <chris@onthe.net.au>, 2015-08-09 22:38:18 +1000,3671, linux 4.1 compat configure pull struct stack linux 4.1 grown past 1024 byte stack frame warning limit resulting incorrect configure result signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 3671,,
4303,6bec4351f5877f3f20dc9d7730aba7b1df983ecd,im Chase <tim@chase2k.com>, 2015-07-29 23:11:32 -0500,3649, ztest display non index property properly verbose level verbosity level greater attempt display value property indexed value regardless whether property indexed value simply indexed integer patch cause numeric value property displayed fails signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3649,,
4304,69520d6855d962885e9ec4e2614575bb39c6326b,hris Dunlap <cdunlap@llnl.gov>, 2015-07-28 15:52:40 -0700,3631, rework configurable prog opts commit reworks function allow configuration mail executable command line argument zed_email_prog specifies name path executable responsible sending notification via email variable default mail zed_email_opts specifies command line option passed zed_email_prog following keyword substitution performed address replaced recipient email address subject replaced notification subject variable default subject address zed_email_addr replaces zed_email although latter retained backward compatibility variable contain multiple address long delimited whitespace signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3634 close 3631,,
4305,6f1eccff2c264bf44c63ca40a9279fffc3b5d5b5,hris Dunlap <cdunlap@llnl.gov>, 2015-07-28 15:52:18 -0700, , fix whitespace zed_log_err commit fix two adjacent space appear zed_log_err message zevent_eid undefined signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4306,7e8bddd01952722b8f8bda773b3c96cb49b2e2bc,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-28 11:30:00 -0700,3637, update check pageout brings behavior back sync illumos updated memory throttling policy roughly like never throttle memory free threshold configurable module option minimize throttling kswapd even free memory set threshold allow write page quickly possible help alleviate memory pressure delay thread free memory set threshold order avoid compounding memory pressure buffer evicted arc reduce issue linux specific module option removed favor existing tuning setting effect therefore redundant signed brian behlendorf behlendorf1 llnl.gov close 3637,,
4307,11f552fa9074a94dac3463300e369013ec2f1544,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-27 13:17:32 -0700,3637, update check freemem linux provide detailed information state doe provide total free page information incorporated calculation rather solely relying signal direct reclaim conceptually brings back sync illumos also desirable target amount free memory tunable system default value expected work well workload may case custom value needed module option added purpose target number byte arc leave free memory system value checked proc spl kstat zfs arcstats setting module option override default value signed brian behlendorf behlendorf1 llnl.gov close 3637,,
4308,8ac6ffecaf6dacfec6c5cb24d0bc8b3d40db63ef,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-27 15:05:47 -0700,3637, remove needfree desfree lotsfree defines patch reverts 77ab5dd possible upstream refactored arc way value used key place place subsequently updated use linux equivalent linux functionality signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 3637,,
4309,6339c1b9dce9f7cf4b7269d588d7a9c3bf338ebb,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-27 11:55:03 -0700,3614," bound zvol_threads module option zvol_threads module option bounded reasonable range taskq must least thread 1,024 default value reasonable default signed brian behlendorf behlendorf1 llnl.gov close 3614",,
4310,21a96fb635fb14a59efe44d7ea6767c5f9a586bc,hunwei Chen <tuxoko@gmail.com>, 2015-03-05 11:52:26 -0800,3075, fix bug bad page state caused writeback flag commit d958324 fixed deadlock page lock range lock unlocking page lock acquiring range lock however created new issue 3075 problem set write back bit releasing page lock process unaware page active write back may therefore truncate page invalidate page honor sync semantics workaround problem dirty page dropping page lock prevent page truncated doe ensure invalidated range lock page lock reacquired correct deadlock free order lock safely held page state rechecked well page expect state dirty bit removed write back bit set page removed skip count page handled appropriate signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3075,,
4311,c1718e9580b9b6222be19c1691d3d7b61e503754,rÃ©dÃ©ric VANNIÃRE <f.vanniere@planet-work.com>, 2015-07-28 14:42:14 +0200,3546, fix build failure linux 4.1 ftrace signed frã ric vanniã f.vanniere planet work.com signed brian behlendorf behlendorf1 llnl.gov close 3546,,
4312,9dc5ffbec845ec9c4d9b109c85569345c0c11766,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-24 10:32:55 -0700,3607, invert minclsyspri maxclsyspri linux meaning process priority inverted respect illumos high value linux indicate _low_ priority high value illumos indicate _high_ priority order preserve logical meaning minclsyspri maxclsyspri macro used illumos wrapper function value inverted way change merged upstream illumos need remember invert macro could also lead confusion note change also reverts priority change prior commit 62aa81a rational follows spl_kmem_cache high priority may result blocked memory allocs may perform file backed vdevs new taskq thread spawned promptly signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue zfsonlinux zfs 3607,,
4313,1229323d5f82bcb0525b312c80330968cd41466e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-24 10:08:31 -0700,3607, align thread priority linux default linux filesystem thread responsible handling normally created maximum priority non filesystem process run default priority zfs adopt priority scheme linux maintain good performance complete fairly linux filesystems active priority updated following elo rtprio pid pri nice cmd egrep spl_ zvol arc dbu meta 10743 spl_kmem_cache 10744 spl_system_task 10745 spl_dynamic_tas 10764 dbu_evict 10765 arc_prune 10766 arc_reclaim 10767 arc_user_evicts 10768 l2arc_feed 10769 z_unmount 10770 zvol 11011 z_null_iss 11012 z_null_int 11013 z_rd_iss 11014 z_rd_int_0 11022 z_wr_iss 11023 z_wr_iss_h 11024 z_wr_int_0 11032 z_wr_int_h 11033 z_fr_iss_0 11041 z_fr_int 11042 z_cl_iss 11043 z_cl_int 11044 z_ioctl_iss 11045 z_ioctl_int 11046 metaslab_group_ 11050 z_iput 11121 z_wr_iss note linux meaning process priority inverted respect illumos high value linux indicate _low_ priority high value illumos indicate _high_ priority order preserve logical meaning minclsyspri maxclsyspri macro used illumos wrapper function value inverted way change merged upstream illumos need remember invert macro could also lead confusion patch depends http github.com zfsonlinux spl pull 466 signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 3607,,
4314,c97d30691c0d599e80370090988a79dd8175b5a8,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-24 12:08:53 -0700,3445, check null null never passed dnode_t pointer function regardless reported occurrence let add error handling catch better report reasonable error caller panic system signed brian behlendorf behlendorf1 llnl.gov issue 3445,,
4315,21d41d6806edce8217dfd5d16e74a6a8a4f5fe1b,urbo Fredriksson <turbo@bayour.com>, 2015-07-27 17:09:02 +0200,3636, make sure pool_imported set unset checked appropriate unset find_rootfs pool imported point looking rootfs find_rootfs find rootfs pool exported remember unset pool_imported set pool_imported pool imported import_pool improve backup import one using cache file signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3636,,
4316,48511ea6454224bc96ac518501a89ba52d7a5102,urbo Fredriksson <turbo@bayour.com>, 2015-07-24 12:49:03 +0000,3626, fix minor issue sysv init initramfs script minor fix commits  make sure alien ate new initramfs rpm package well rpm package build correctly alien run create deb copying file copy_file_list make sure destdir dir exists include lib udev vdev_id file initrd initrd need use sbin modprobe instead modprobe need use load_module well make sure load_module used globaly instead calling sbin modprobe place make sure parameter module check signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3626,,
4317,4699d76d19f1ff4a59c16c10b2aedab6f5054a73,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-23 13:45:31 -0700,463, remove skc_ref alloc free path described skc_ref count added address case cache reap grow racing destroy strictly needed alloc free path consumer cache responsible using destroyed removing code desirable evidence contention atomic negative impact performance large scale numa system signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 463,,
4318,62aa81a5776c0bc35f05f8923ea3e293527b5264,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-23 11:21:08 -0700, , add defclsyspri macro add new defclsyspri macro used request default linux scheduler priority neither minclsyspri maxclsyspri map default linux kernel thread priority make awkward create taskqs run priority rest kernel thread system lead performance issue spl caller previously used minclsyspri maxclsyspri changed use defclsyspri vast majority caller part test suite external impact place could impact performance change maxclsyspri defclsyspri make likely process scheduled may help performance facilitate performance analysis module option added disabled newly created kernel thread use default kernel thread priority enabled specified taskq priority used default value enabled signed brian behlendorf behlendorf1 llnl.gov,,
4319,96c080cb9c2c1c4e669bdc6930128bc676bc5552,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-29 10:02:03 -0700,3533, minor style cleanup address minor difference style upstream zol patch contains functional difference solely designed minimize delta upstream signed brian behlendorf behlendorf1 llnl.gov issue 3533,,
4320,3056818343048a7406f34a0a050d6b2733d8a813,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-29 11:56:02 -0700,3533, remove double counting hdr_l2only_size commit d962d5d quite properly resolve hdr_l2only_size accounting accounting performed constructor destructor nice simplification removed create destroy function brings back sync upstream signed brian behlendorf behlendorf1 llnl.gov issue 3533,,
4321,8c8af9d807cfed74c786c076ef4f708b7ccdc51b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-29 10:34:47 -0700,3533, add hdr_recl reclaim callback originally removed required linux however may still utility signaling arc reclaim thread linux via reclaim already happened mean harmless reduces another point divergence upstream signed brian behlendorf behlendorf1 llnl.gov issue 3533,,
4322,728d6ae91e5381cda813672c9e9f66a269f58368,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-26 15:59:23 -0700,3533, reinstate commit f521ce1 removed minimum value arc_p allowing drop zero grow arc_c done improve specific workload constantly dirties new metadata also frequently touch small amount mfu data e.g mkdir change may still desirable need investigated context recent arc change upstream therefore code restored facilitate benchmarking setting easily compare performance signed brian behlendorf behlendorf1 llnl.gov issue 3533,,
4323,36da08ef9bd655b6748ac253a43e28218a5cd759,rakash Surya <prakash.surya@delphix.com>, 2015-06-26 15:14:45 -0700,3533, illumos 5817 change type arcs_size uint64_t refcount_t 5817 change type arcs_size uint64_t refcount_t reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed adam leventhal ahl delphix.com reviewed alex reece alex delphix.com reviewed richard elling richard.elling approved garrett amore garrett damore.org reference http www.illumos.org issue 5817 http github.com illumos illumos gate commit 2fd872a ported brian behlendorf behlendorf1 llnl.gov issue 3533,,
4324,500445c04698aad356f7b1757b61c5f9eebf7060,rakash Surya <prakash.surya@delphix.com>, 2015-06-26 14:54:17 -0700,3533, illumos 5445 add visibility via arcstats 5445 add visibility via arcstats specifically arc_state_t stats differentiate data metadata reviewed basil crow basil.crow delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed bayard bell bayard.bell nexenta.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5445 http github.com illumos illumos gate commit 4076b1b porting note patch improved version cc7f677 previously merged zol patch incorporates additional improvement made upstream ported brian behlendorf behlendorf1 llnl.gov issue 3533,,
4325,ca67b33abadd2893755735130c11faa5df756989,atthew Ahrens <mahrens@delphix.com>, 2015-06-26 11:28:18 -0700,2167, illumos 5376 result clearing arc_no_grow 5376 result clearing arc_no_grow reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed steven hartland killing multiplay.co.uk reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5376 http github.com illumos illumos gate commit 2ec99e3 porting note good news many recent change made upstream arc tackled issue previously observed zol similar solution bad news solution identical one applied patch designed split difference apply much upstream work possible function removed previous zol due upstream change make sense add back function customized linux used determine low memory provides basic functionality illumos version allowing minimize change rest code base exact mechanism used detect low memory state remains unchanged change significant might first appear patch includes long standing fix arc_shrink originally proposed 2167. since related change function made sense include work arc_init function factored set sane default value arc call apply user specific tuning made via module option function called periodically apply change tuning made normal operation ported brian behlendorf behlendorf1 llnl.gov close 3616 close 2167,,
4326,3b79cef21294f3ec46c4f71cc5a68a75a4d0ebc7,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-20 13:16:16 -0700,3617, set default _initconfdir directory _initconfdir macro normally provided global rpm macro file use spec file however older distribution centos define prevent build failure case spec file updated use reasonable default value undefined signed brian behlendorf behlendorf1 llnl.gov close 3617,,
4327,9eb361aaa537724c9a90ab6a9f33521bfd80bad9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-20 12:18:56 -0700,463, default disable debug kmem default kmem debugging enable debug kmem severely impact performance large scale numa system due atomic operation used memory accounting thread fio test running core thread system performing 100 cached read kmem debugging enabled read 177071mb aggrb 2951.2mb minb 2951.2mb maxb 2951.2mb disabled read 271454mb aggrb 4524.4mb minb 4524.4mb maxb 4524.4mb signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 463,,
4328,53b1d9794efc1dc5467a624e1d5c4cad662a3858,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-13 14:51:59 -0700,3548, add logic try recover inode invalid mode inode detected invalid mode bit safe thing panic system indicates problem content dnode never possible default behavior unfortunately due flaw system attribute implementation platform possible zfs could create damaged dnode rare issue impacted dnodes used spill block normally symlinks file acls would require spill block however dataset xattr property set extended attribute used problem could occur 0.6.4 tag root cause issue fixed pool exhibiting damage zfs_recover module option may set cause zfs interpret dnode invalid mode bit normal file may allow file accessed recovery purpose signed brian behlendorf behlendorf1 llnl.gov close 3548,,
4329,47a4a6fd5fa1f1f60bcf6af19e453ecf0292f7d1,urbo Fredriksson <turbo@bayour.com>, 2014-06-09 23:55:31 +0200,1082, support parallel build tree vpath build build product tree build written relative build directory source referred location source directory accomplished adding src obj variable module makefile.am using relative path reference source file setting vpath source file located makefile enables following mkdir build build configure spl home src git spl spl obj home src git spl build make change also advantage resolving following warning generated modern version automake makefile.am warning source file xxx subdirectory makefile.am option subdir object disabled signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1082,,
4330,37d7cd94f326896ffbd3f7609a20562c000cd4c8,urbo Fredriksson <turbo@bayour.com>, 2014-06-11 03:57:48 +0200,1082, support parallel build tree vpath build build product tree build written relative build directory source referred location source directory accomplished adding src obj variable module makefile.am using relative path reference source file setting vpath source file located makefile enables following mkdir build build configure make change also advantage resolving following warning generated modern version automake makefile.am warning source file xxx subdirectory makefile.am option subdir object disabled signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1082,,
4331,2a53e2dacc7a7c0a8c63ff2eef3aff95f6ac80b1,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-16 13:35:04 -0700,3601, update inode range lock successful write inode must updated range lock updated dropping lock exists race znode inode wile disagree file size could result narrow window time read able access data beyond fstat report file size signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 3601,,
4332,bd29109f1ac5be68f7f7c8bcb49e1b706fe899f0,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-15 10:54:26 -0700,3596, linux 4.2 compat follow_link put_link linux 4.2 kernel completely retired nameidata structure one remaining consumer interface follow_link put_link callback patch add required check configure detect interface change update function accordingly migrating interface considered decided ironically due increased complexity also noted kernel follow_link put_link interface change several time 4.1 4.2. mean narrow range kernel commits never appear official tag linux kernel zol build signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 3596,,
4333,7eb333fbdde32dbebdcc88c35610159e207237c9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-14 14:57:55 -0700,3596, linux 4.2 compat remove bio bi_cnt access linux 4.2 commit torvalds linux dac5621 renamed bio bi_cnt bio __bi_cnt value used block debug code simplest remove panic knowledge debugging never hit proved useful great loss signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 3596,,
4334,e80da86447174b583e4b6cebedae2956fac926ee,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-14 14:15:13 -0700,3596, linux 4.2 compat vfs_compat.h header include linux backing dev.h header depends bdi_ function defined previous kernel header indirectly included prevented build failure signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 3596,,
4335,905edb405da278ccb019c656408f82796a344510,atthew Ahrens <mahrens@delphix.com>, 2015-07-11 02:19:41 +0200,3586, illumos 5347 idle pool may run space 5347 idle pool may run space reviewed alex reece alex.reece delphix.com reviewed george wilson george.wilson delphix.com reviewed steven hartland killing multiplay.co.uk reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit 231aab8 http github.com illumos illumos gate commit 4a92375 3642 http www.illumos.org issue 5347 http github.com zfsonlinux zfs commit 89b1cd6 partial commit fix http github.com zfsonlinux zfs commit fbeddd6 illumos 4390 http github.com zfsonlinux zfs commit 2696dfa illumos 3642 3643 porting note completing partial fix freebsd ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3586,,
4336,93f6d7e2e5050ee8894c0ae5e7c91aa74187cd86,anoj Joseph <manoj.joseph@delphix.com>, 2015-07-11 01:54:52 +0200,3585, illumos 5764 zfs send directs output stderr 5764 zfs send directs output stderr reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed basil crow basil.crow delphix.com reviewed steven hartland killing multiplay.co.uk reviewed bayard bell gmail.com approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit dc5f28a http www.illumos.org issue 5764 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3585,,
4337,1cddb8c9ff072643a9d9f8726f0480b5a57d9bcd,lexander Eremin <a.eremin@nexenta.com>, 2015-07-11 01:45:01 +0200,3584, illumos 5610 zfs clone different source target pool produce coredump 5610 zfs clone different source target pool produce coredump reviewed josef jeff sipek josef.sipek nexenta.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit 03b1c29 http www.illumos.org issue 5610 http www.illumos.org issue 5824 http github.com zfsonlinux zfs issue 2911 http github.com zfsonlinux zfs commit 9063f65 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3584,,
4338,eaa52d32b0784b1d6ceb1299bb520300506f58bf,rasad Joshi <prasadjoshi124@gmail.com>, 2015-07-05 01:35:26 +0200,3562, illumos 1765 assert triggered libzfs_import.c 1765 assert triggered libzfs_import.c trying import pool name beginning number reviewed garrett amore garrett damore.org reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reference http github.com illumos illumos gate commit 9edf9eb http www.illumos.org issue 1765 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3562,,
4339,0de7c552b69f2bb3e16f023007f049cb3c8e9afd,ichard Yao <richard.yao@clusterhq.com>, 2015-07-03 12:20:17 -0400,3575, failure userland copy return efault many key internal function pas system return code safe return userland case ddi_copyin error pass documentation state clearly driver pas efault userland happens http illumos.org man ddi_copyin doe happen zfs source code believe changed pas efault caught writing man page libzfs_core api signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3575,,
4340,b39c22b73c0e8016381057c2240570f7af992def,oris Protopopov <boris.protopopov@actifio.com>, 2015-06-25 15:42:51 -0400,3529," translate sync zio sync bio translate zio request synchronous bio request setting read_sync write_sync flag specifically write_sync flag turn pronounced effect writing ssd based slog write_sync set write set instead block trace slog device look follows ... 130,96 0.008968390 830464 136 130,96 0.011999161 830720 136 130,96 0.023955549 831744 136 130,96 0.024337663 19775 832000 136 130,97 829952 130,96 0.024338823 19775 832000 136 z_wr_iss 130,96 0.024340523 19775 832000 136 z_wr_iss 130,96 0.024343187 19775 z_wr_iss 130,96 0.024344120 19775 832000 136 z_wr_iss 130,96 0.026784405 swapper 130,96 0.026805339 202 kblockd 130,96 0.026807199 202 832000 136 kblockd 130,96 0.026966948 832000 136 130,96 0.000449358 19788 829952 136 130,97 827904 130,96 0.000450951 19788 829952 136 z_wr_iss 130,96 0.000453212 19788 829952 136 z_wr_iss 130,96 0.000455956 19788 z_wr_iss 130,96 0.000457076 19788 829952 136 z_wr_iss 130,96 0.002786349 swapper ... 130,197 partition created log device adding pool whereas base device 130,96. one see writes slog marked synchronous missing next queue unplugs occur based timer event resulting slightly msec latency writes result sub par performance single stream synchronous writes limited latency slog write_sync set similar trace look follows ... 130,96 0.000000000 70714 4280576 136 130,97 4278528 130,96 0.000000832 70714 4280576 136 null 130,96 0.000002109 70714 4280576 136 null 130,96 0.000003394 70714 null 130,96 0.000003846 70714 4280576 136 null 130,96 0.000004854 70714 4280576 136 null 130,96 0.000354487 70713 4280832 136 130,97 4278784 130,96 0.000355072 70713 4280832 136 null 130,96 0.000356383 70713 4280832 136 null 130,96 0.000357635 70713 null 130,96 0.000358088 70713 4280832 136 null 130,96 0.000359191 70713 4280832 136 null 130,96 0.000159539 4280576 136 130,96 0.000742108 70718 4281088 136 130,97 4279040 130,96 0.000743197 70718 4281088 136 z_wr_iss 130,96 0.000744450 70718 4281088 136 z_wr_iss 130,96 0.000745817 70718 z_wr_iss 130,96 0.000746705 70718 4281088 136 z_wr_iss 130,96 0.000747848 70718 4281088 136 z_wr_iss 130,96 0.000604063 4280832 136 130,96 0.000899858 4281088 136 one see writes synchronous completion e.g issue completion take 160 250 usec 10x faster since write_sync read_sync flag among several factor considered processing bio request seems prudent mark zio request synchronous priority read write_sync flag make eligible consideration linux block layer signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 3529",,
4341,2b7b78fa5d794d0bd6b0beb2b8b7f98f7b1071f9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-13 12:59:38 -0700, , fix switch bool warning gcc version 5.1.1 new warning added detect use boolean switch statement wswitch bool resolve warning explicitly casting value integer type zfs 0.6.4 module zfs zvol.c function zvol_request error switch condition boolean value werror switch bool signed brian behlendorf behlendorf1 llnl.gov,,
4342,c2d17fd891add689786c569d7b5ea66d60d69b9b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-13 12:30:02 -0700, , disable gcc bool compare warning gcc version 5.1.1 new boolean comparison warning introduced warning harmless triggered several place zfs code base warning promoted error building debugging enabled necessary disable warning using version gcc automatically enabling check signed brian behlendorf behlendorf1 llnl.gov,,
4343,5970eb3d60346d385d0910c00ed5199b9af223c8,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-13 10:30:22 -0700, , use truncate instead fallocate ziltest.sh purpose creating sparse file truncate command preferable fallocate generic sparse file widely supported older platform specifically debian wheezy based 2.6.32 kernel used ext3 default time support signed brian behlendorf behlendorf1 llnl.gov,,
4344,541da9935d07ad40fb5e000114d9c904c2dde632,ichard Yao <ryao@gentoo.org>, 2015-07-06 11:20:11 -0400,3576, fix xen virtual block device detection fail make partition xvd xen virtual block device also cause debug build zpool create return error given xen virtual block device device given treatment kvm virtual block device adjust relevant code path signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3576,,
4345,98cb3a76559cb1187f77af1d6a08d4f9b7b14aa0,ill Andrews <will@freebsd.org>, 2015-07-06 04:13:12 +0200,3572, illumos 5813 handle errno value e2big 5813 handle errno value e2big reviewed paul dagnelie paul.dagnelie delphix.com reviewed matthew ahrens mahrens delphix.com reviewed prakash surya prakash.surya delphix.com reviewed richard elling richard.elling approved garrett amore garrett damore.org reference http github.com illumos illumos gate commit 6fdcb3d http www.illumos.org issue 5813 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3572,,
4346,99197f034ea0a7e227116e0cec00fe55061bffa7,ustin T. Gibbs <justing@spectralogic.com>, 2015-07-06 03:55:32 +0200,3571, illumos 5661 zfs compression use lz4 feature enabled 5661 zfs compression use lz4 feature enabled reviewed matthew ahrens mahrens delphix.com reviewed josef jeff sipek jeffpc josefsipek.net reviewed xin delphij freebsd.org approved robert mustacchi joyent.com reference http github.com illumos illumos gate commit db1741f http www.illumos.org issue 5661 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3571,,
4347,15cfbb38fd6248529bf16f0cdc4ebb7adf38ab98,an Kryl <jan.kryl@nexenta.com>, 2015-07-05 23:51:53 +0200,3569, illumos 5427 memory leak libzfs rollback 5427 memory leak libzfs rollback reviewed michael tsymbalyuk mtzaurus gmail.com reviewed steven hartland killing multiplay.co.uk approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit b7070b7 http www.illumos.org issue 5427 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3569,,
4348,de0a9d763075cc688d6cb75c94d62dde912ed669,asil Crow <basil.crow@delphix.com>, 2015-07-05 21:17:49 +0200,3567, illumos 5118 verifying creating storage pool error message show one device 5118 verifying creating storage pool error message show one device reviewed adam leventhal adam.leventhal delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matt ahrens mahrens delphix.com reviewed boris protopopov me.com approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit 75fbdf9 http www.illumos.org issue 5118 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3567,,
4349,3e43edd2c5b40d49bae9881566570a5fb7c2c181,eorge Wilson <george.wilson@delphix.com>, 2015-07-05 21:00:34 +0200,3566, illumos 4966 zpool list iterator doe update output 4966 zpool list iterator doe update output reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com approved garrett amore garrett damore.org reference http github.com illumos illumos gate commit cd67d23 http www.illumos.org issue 4966 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3566,,
4350,411bf201f5703aa34392f4872ea01bf54c7d3076,osef 'Jeff' Sipek <josef.sipek@nexenta.com>, 2015-07-05 20:54:17 +0200,3565, illumos 4745 fix avl code misspelling 4745 fix avl code misspelling reviewed matthew ahrens mahrens delphix.com reviewed richard lowe richlowe richlowe.net approved robert mustacchi joyent.com reference http github.com illumos illumos gate commit 6907ca4 http www.illumos.org issue 4745 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3565,,
4351,02f8fe42606c6d7657a7dace24c8efc9b245e500,osef 'Jeff' Sipek <josef.sipek@nexenta.com>, 2015-07-05 01:54:29 +0200,3563, illumos 4626 libzfs memleak zpool_in_use 4626 libzfs memleak zpool_in_use reviewed tony nguyen tony.nguyen nexenta.com reviewed saso kiselkov saso.kiselkov nexenta.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit fb13f48 http www.illumos.org issue 4626 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3563,,
4352,cc49250563b65c80d87afa5273ae350d06aa8d3b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-07-09 11:41:14 -0700, , move dracut directory contrib dracut code analogous initramfs code located contrib initramfs consistency signed brian behlendorf behlendorf1 llnl.gov,,
4353,2cac7f5f11756663525a5d4604d9f0a3202d4024,urbo Fredriksson <turbo@bayour.com>, 2014-01-30 16:26:48 +0000,2114," initramfs script zol support booting zfs snapshot cloning snapshot dataset resulting dataset already exists destroy mount root snapshot doe exist use base dataset part boot filesystem instead snapshot specified root kernel command line get list snapshot filesystem ask user use clone mountpoint none canmount noauto mount manually explicitly sub filesystems mountpoint property set use org.zol mountpoint keep track mountpoint allow rollback snapshot instead clone boot clone allow mounting root subfs mountpoint legacy set allow mounting filesystem using nativ encryption support currently used kernel command line argument different distribution standard specify kernel command line boot zfs filesystem extra option zfsdebug yes,1 show extra debugging information zfsforce yes,1 force import pool rollback yes,1 rollback instead clone snapshot try import pool already imported negate need force import pool exported cleanly support exclusion pool import setting etc default zfs support additional configuration variable mount additional filesystems located root dataset include etc modprobe.d zfs spl .conf initrd exist include udev rule use vdev pool import include etc default zfs file initrd try dev disk initrd use_disk_by_id set use dev disk vdev anything add dev last ditch attempt fallback using cache file exist nothing else worked use sbin modprobe instead built busybox modprobe get rid message modprobe load module zcommon thanx pcoultha finding signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2116 close 2114",,
4354,1cd777340bb2feaedbbdb48cab27ce5ffa14c353,im Chase <tim@chase2k.com>, 2015-07-03 09:24:24 -0500, , prevent reclaim metaslab preload thread reclaim metaslab preloading cause deadlock involving znode z_lock arc buffer header ht_lock signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3532,,
4355,e16b3fcc610fab2dcf3381486b2640dc2a2213cb,lexander Motin <mav@freebsd.org>, 2014-07-18 08:53:38 -0800,3555, illumos 5008 lock contention rrw_exit running read load 5008 lock contention rrw_exit running read load reviewed matthew ahrens matthew.ahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed richard yao ryao gentoo.org reviewed saso kiselkov skiselkov.ml gmail.com approved garrett amore garrett damore.org porting note patch ported perfectly cleanly zol testing 100 cached small block read extreme contention noticed rrl rr_lock rrw_exit due frequent entering leaving zpl illumos picked patch freebsd also help linux minute cached read test fio process pinned single socket socket thread per socket numa system contention rrl rr_lock reduced 508799 43085 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3555,,
4356,4bda3bd0e72d582a785b6552ce16b99e04414fbe,atthew Ahrens <mahrens@delphix.com>, 2015-07-02 18:23:20 +0200,3554, illumos 5911 zfs hang deleting file 5911 zfs hang deleting file reviewed bayard bell gmail.com reviewed alek pinchuk alek nexenta.com reviewed simon klinkert simon.klinkert gmail.com reviewed dan mcdonald danmcd omniti.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5911 http github.com illumos illumos gate commit 46e1baa porting note resolved iso c90 forbids mixed declaration code wanting function ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3554,,
4357,5e8cd5d17f21200beb5f6fae8e8be64c0491195d,rne Jansen <jansen@webgods.de>, 2015-07-02 17:58:17 +0200,3553, illumos 5981 deadlock 5981 deadlock reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5981 http github.com illumos illumos gate commit 1d3f896 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3553,,
4358,71e2fe41be982076f14fe5d39bcf5f7051a937f0,ndriy Gapon <avg@freebsd.org>, 2015-07-02 16:04:35 +0300,3552, illumos 5946 5945 5946 must check firstsnap lastsnap refer snapshot 5945 must ensure fromsnap refers snapshot reviewed steven hartland killing multiplay.co.uk reviewed matthew ahrens mahrens delphix.com approved gordon ross gordon.ross nexenta.com reference http www.illumos.org issue 5946 http www.illumos.org issue 5945 http github.com illumos illumos gate commit 24218be ported andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 3552,,
4359,b6640117f07c50f5fc3093c6b50de988cf332e72,ndriy Gapon <avg@freebsd.org>, 2015-07-02 16:03:58 +0300,3551, illumos 5870 leak origin_head hold error happens drc_force branch 5870 leak origin_head hold error happens drc_force branch reviewed matthew ahrens mahrens delphix.com reviewed andrew stormont andyjstormont gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5870 http github.com illumos illumos gate commit beddaa9 ported andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 3551,,
4360,fec417097b0289fb7c1c34cc919fefa48786d20c,ndriy Gapon <avg@freebsd.org>, 2015-07-02 16:04:17 +0300,3550, illumos 5909 ensure shared snap name become long promotion 5909 ensure shared snap name become long promotion reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5909 http github.com illumos illumos gate commit cb5842f ported andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 3550,,
4361,cf50a2b08ff66114a72f6d6d12f13439cd5c5b99,ndriy Gapon <avg@freebsd.org>, 2015-07-02 16:03:31 +0300,3549, illumos 5912 full stream force received dataset snapshot 5912 full stream force received dataset snapshot reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie pcd delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5912 http github.com illumos illumos gate commit 5bae108 ported andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 3549,,
4362,a7b10a931911d3a98a90965795daad031c6d33a2,lek Pinchuk <alek@nexenta.com>, 2015-07-01 17:18:08 +0200,3545, illumos 6033 arc_adjust search mfu list 6033 arc_adjust search mfu list oldest buffer adjusting mfu size reviewed saso kiselkov saso.kiselkov nexenta.com reviewed xin delphij delphij.net reviewed prakash surya approved matthew ahrens mahrens delphix.com reference http www.illumos.org issue 6033 http github.com illumos illumos gate commit 31c46cf ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3545,,
4363,8f3439733f72a0836b764427efdf524b9bf98ac4,olin Ian King <colin.king@canonical.com>, 2015-07-01 12:42:35 +0100,3544, man fix spelling mistake manual minor mistake fixed zpool compatability compatibility zfs accessable accessible availible available zfs event availible available zfs module parameter proceding proceeding signed colin ian king colin.king canonical.com signed brian behlendorf behlendorf1 llnl.gov close 3544,,
4364,804e050457f1755cc37f39ef1f88786ba7e688d5,atthew Ahrens <mahrens@delphix.com>, 2015-06-16 23:06:27 +0200,3392, illumos 5175 implement improve cached read performance 5175 implement improve cached read performance reviewed adam leventhal ahl delphix.com reviewed alex reece alex.reece delphix.com reviewed george wilson george delphix.com reviewed richard elling richard.elling gmail.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5175 http github.com illumos illumos gate commit f8554bb porting note patch include change comstar common multiprotocol scsi target since available zol http 2010 setting solaris comstar and.html ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3392,,
4365,d6c9ff0a6be1e4b87f71a641a8973070ec46d01b,urbo Fredriksson <turbo@bayour.com>, 2015-06-27 14:31:43 +0200,3536, add dev mapper list possible source pool device especially needed using luks backed pool signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3536,,
4366,77ab5dd33a99bdf7fb062f0ea327582236a225b3,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-29 09:25:29 -0700, , add memory compatibility wrapper function global variable needfree desfree lotsfree used upstream variable meaning linux defined avoid needing make additional change arc code signed brian behlendorf behlendorf1 llnl.gov,,
4367,84045c2ddfacd451cadfa0ea97617909c0137841,im Chase <tim@chase2k.com>, 2015-06-26 22:15:27 -0500,3534, remove l2ad_evict illumos 5701 zpool list report incorrect alloc value cache device removed l2ad_evict l2arc_dev_t also removed event class signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3534,,
4368,a254ecfc8b5b8fdd02a1bb88a0b2aa43bad183e9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-25 17:00:39 -0700,3531, add ziltest.sh ziltest.sh script test case designed verify correct functioning zil added script directory easily added automated regression testing general idea build intent log bunch diverse user command without actually committing file system copy file system replay intent log compare file system copy ported brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3531,,
4369,017da6f063861a1dc3eea5a41c3de8b879d579bd,on Brady <don.brady@intel.com>, 2015-06-24 12:17:36 -0600,3522, fix recent zdb crash seg fault allocating stack bad idea even old 128k size use malloc instead allocating temporary block buffer memory signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3522,,
4370,784652c1f034bf5bf25d22b5b4056a6955331734,on Brady <don.brady@intel.com>, 2015-06-24 22:05:32 -0600,3468, zdb false positive warning feature large_blocks disabled skip large block feature refcount checking feature disabled signed brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3468,,
4371,16421a1dc837eae4cc0b353e7f6616bc6202c013,urbo Fredriksson <turbo@bayour.com>, 2015-06-19 16:22:14 +0200,3514, additional sysv init script fix read_mtab fix problem mount file record rpool rpool 0401 instead rpool 00401 seems correct least far printf concerned use using external echo command one built shell internal one would interpret backslash code incorrectly giving instead remove longer needed gentoo use eend eerror requires error message signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3488 close 3509 close 3514,,
4372,216f9d04a651a6b692de9933cc37ee238267a617,urbo Fredriksson <turbo@bayour.com>, 2015-06-19 16:21:30 +0200,3509, revert additional sysv init script fix reverts commit 3509 came commit accepted related original problem commit supposed fix need solve problem another way signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov,,
4373,c52fca13a08f6a5c1f14a44d6f3707a48a27a1d0,atthew Ahrens <mahrens@delphix.com>, 2015-06-24 15:49:08 -0700,5368, illumos 5368 arc cache metadata 5368 arc cache metadata reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5368 http github.com illumos illumos gate commit 3a5286a porting note vast majority patch already merged context 06358ea change small hunk missed ported brian behlendorf behlendorf1 llnl.gov,,
4374,669dedb33f4bf68ba75089f1e7b279932c9580a7,eorge Wilson <george.wilson@delphix.com>, 2015-06-24 15:48:22 -0700,5163, illumos 5163 arc reap range_seg_cache 5163 arc reap range_seg_cache reviewed christopher siden delphix.com reviewed matthew ahrens mahrens delphix.com reviewed richard elling richard.elling gmail.com reviewed saso kiselkov skiselkov.ml gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5163 http github.com illumos illumos gate commit 83803b5 porting note added wrapped suppress unused variable warning user space build ported brian behlendorf behlendorf1 llnl.gov,,
4375,aa9af22cdf8d16c197974c3a478d2053b3bed498,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-03 11:43:30 -0700,3507, update default taskq setting year default value taskqs used linux differed slightly illumos vast majority case done avoid creating obnoxious number idle thread would pollute process listing addition support dynamic taskqs multi threaded queue created dynamic taskqs allows get best world illumos default value pipeline restored value known work well workload exception zio write interrupt taskq changed zti_p least linux thread shown improve performance see commit 7e55f4e reduces number idle thread system heavy load maximum number thread created required remove vdev_file_taskq rely system_taskq instead dynamic may thread brings back inline upstream task dispatched allowed use dynamic taskqs linux taskq implementation support signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 3507,,
4376,ef56b0780c80ebb0b1e637b8b8c79530a8ab3201,ndriy Gapon <avg@freebsd.org>, 2015-06-12 21:20:29 +0200,3451, account ashift gathering buffer written l2arc device account might end overwriting disk area buffer evicted yet l2arc_evict operates term disk address discrepancy write size calculation actual increment l2ad_hand introduced commit 3a17a7a9 change introduced l2ad_hand alignment almost correct write size accumulated sum rounded buffer size see commit illumos illumos gate e14bb32 also consistently use asize a_sz allocated size psize p_sz physical size latter account possible size reduction compression whereas former account possible subsequent size expansion alignment requirement code still assumes either underlying storage subsystem hardware able read modify write l2arc buffer size multiple disk block size true 4kb sector disk provide 512b sector emulation may true general word currently code make sure l2arc buffer whether compressed used physical suitable size note currently cache device utilization calculated based physical size allocated size applies l2_asize kstat wrong commit doe fix accounting problem introduced partially commit 3a17a7a9 partially 3038a2b accounting became consistent favour wrong size porting note reworked c90 compatible write_psize variable removed unused reference http 229 http d2764 ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3400 close 3433 close 3451,,
4377,d962d5dad9dae20dec096abe73f22a4c813199fd,rakash Surya <prakash.surya@delphix.com>, 2015-06-16 01:12:19 +0200,5701, illumos 5701 zpool list report incorrect alloc value cache device 5701 zpool list report incorrect alloc value cache device reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed alek pinchuk alek.pinchuk nexenta.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5701 http github.com illumos illumos gate commit a52fc31 porting note hdr_l2only_size correctly placed arc_buf_hdr_t hdr ported kerneloftruth kerneloftruth gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4378,3c82160ff2feb86fb7275fd941d203167340a187,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-24 09:53:47 -0700,458, set taskq_dynamic kmem system taskqs add taskq_dynamic flag kmem_cache system taskqs reduce number idle thread system additional thread created demand previous maximum thread count minimal impact performance make system taskq consistent illumos always created dynamic taskq thread task limit kmem_cache increased avoid unnessisary throttling keep larger reserve task_t structure free list signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 458,,
4379,f7a973d99b5e272f4a6223b8fb7db4fc6d363b41,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-08 14:36:27 -0700,458, add taskq_dynamic feature setting taskq_dynamic flag create taskq dynamic semantics initially single worker thread created service task dispatched queue additional thread needed dynamically spawned max number specified nthreads thread longer needed taskq empty automatically terminate due low cost creating destroying thread linux default new thread spawned terminated aggressively two module option tuned adjust behavior needed number sequential task without interruption needed handled worker thread new worker thread spawned default provides ability completely disable use dynamic taskqs system provided purpose debugging troubleshooting default enabled behavior fundamentally consistent dynamic taskq implementation found illumos freebsd signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 458,,
4380,fa720217b9765303aaa882a9ccdf70c185acc53d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-24 13:54:06 -0700, , add imply equiv macro added upstream compatibility form imply equiv signed brian behlendorf behlendorf1 llnl.gov,,
4381,5acb2307b2edc55335996bf0ff78f6bdca24a98d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-24 14:44:47 -0700, , add imply equiv macro added upstream compatibility form imply equiv signed brian behlendorf behlendorf1 llnl.gov,,
4382,72540ea3148a2bc03860d7d59b2b5fdc9a5cdee7,ichard Yao <richard.yao@clusterhq.com>, 2015-04-16 09:20:02 -0400,3506, zfsdev_getminor check invalid file handle unit testing clusterhq found passing invalid file handle zfs_ioc_hold result null pointer dereference system without assertion zfsdev_getminor 0x10 0x20 zfs call trace 0x20 0x40 zfs zfs_ioc_hold 0x93 0xd0 zfs zfsdev_ioctl 0x200 0x500 zfs assertion would caught enabled something kernel module handle without failing resolve searching linked list ensure file handle private_data point valid zfsdev_state_t signed richard yao ryao gentoo.org signed andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 3506,,
4383,99b14de42104021f6b7d88118db010d8246bc0c0,tienne Dechamps <etienne@edechamps.fr>, 2015-05-10 16:40:20 +0100, , make module parameter seems generally useful zfs allocation granularity roughly equivalent called stripe size traditional raid array seems relevant performance tuning signed etienne dechamps etienne edechamps.fr signed brian behlendorf behlendorf1 llnl.gov,,
4384,e8fe6684a5128427e6ad1e75eb548b9fd0c482aa,tienne Dechamps <etienne@edechamps.fr>, 2015-05-10 16:37:22 +0100, , document signed etienne dechamps etienne edechamps.fr signed brian behlendorf behlendorf1 llnl.gov,,
4385,bb3250d07ec818587333d7c26116314b3dc8a684,tienne Dechamps <etienne@edechamps.fr>, 2015-05-10 15:39:18 +0100,3389, allocate disk space fairly presence vdevs unequal size metaslab allocator device selection algorithm contains bias mechanism whose goal achieve roughly equal disk space usage across top level vdevs seems initial rationale code allow newly added empty vdevs come speed faster attempt make pool quickly converge steady state vdevs equally utilized code seems work reasonably well use case another scenario algorithm fails miserably case top level vdevs size capacity zfs allows good feature user simply want build pool disk happen lying around even disk heteregenous size script simulates pool two vdevs one larger  dev zero tmp count seek 134217728 dev zero tmp count seek 536870912 zpool create testspace tmp tmp dev zero testspace foobar count 256 zpool iostat testspace commit script would output following capacity pool alloc free  testspace 252m 375m tmp 104m 18.5m tmp 148m 356m  demonstrates current code handle situation poorly show usage despite pool full quite saturated point slowing entire pool due saturation fragmentation like contrast result code commit capacity pool alloc free  testspace 252m 375m tmp 56.7m 66.3m tmp 195m 309m  look much better used close overall pool utilization code still result perfectly balanced allocation probably way mg_bias applied doe guarantee perfect accuracy still much better  signed etienne dechamps etienne edechamps.fr signed brian behlendorf behlendorf1 llnl.gov close 3389,,
4386,218b4e0a7608f7ef37ec72042a68c45e539a5d1c,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-18 09:21:19 -0700,3501, add function kernel implement per suberblock shrinker older linux 3.1 function used attempt reclaim dentries found entirely reliable could lead performance issue older kernel running meta data heavy workload address issue function added implement functionality relies traversing list znodes filesystem adding private list reference held private list safely walked outside z_znodes_lock prune dentires drop last reference inode freed provides synchronous behavior per filesystem shrinker advantage depending long standing interface signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 3501,,
4387,4c6a70091030847ca5d6933916255194483ce91f,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-18 09:17:42 -0700, , increase number iput taskq thread number thread iput taskq increased speed number iputs handled observed improve meta data reclaim regardless zfs_sb_prune implementation use taskq also renamed z_iput consistency rest pipeline taskqs named signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com,,
4388,57ae840077e6c061bc57fb4860491f50b604d360,atus Kral <matuskral@me.com>, 2015-05-12 01:26:18 +0200,3352, linux 4.1 compat use read_iter write_iter linux 3.15 commit torvalds linux 293bc98 introduced two new method read_iter write_iter method designed replace aio_read aio_write interface interface preserved several kernel release order migrate existing consumer new interface linux 4.1 legacy interface retired zfs code must updated use new interface signed brian behlendorf behlendorf1 llnl.gov close 3352,,
4389,ec1c11d5ee1a90ab4d5f544143bcf5a6c2455800,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-17 22:11:36 +0100,3109, update dracut readme include information zfs lib.sh.in mention possible set bootfs attribute entire pool signed ren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov close 3109,,
4390,01d01ef0babe0af113fef6bc52f99e5dbf5a5b3d,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-16 10:16:46 +0100,3109, source lib dracut lib.sh far signed ren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov issue 3109,,
4391,edbaf2455cd63a2724558a8d8ff824a2f47fcdf9,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-16 09:56:04 +0100,3109, force export failed first time signed ren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov issue 3109,,
4392,eda3d4e1de94cd3a9247bb90a64413a89e736847,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-15 20:28:42 +0100,3109, refactor dracut module provide lib dracut zfs lib.sh utility function signed ren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov issue 3109,,
4393,036391c980c1e6504352b770eb385806a951b1cb,urbo Fredriksson <turbo@bayour.com>, 2015-06-11 23:03:04 +0200,3488, additional sysv init script fix use mount command instead proc mount get list matching filesystems proc mount report pool space rpool rpool 0401 space encoded digit octal legal however printf use filter illegal character slash space etc properly interpret expects digit octal get instead space expected correct value rpool 00401 note additional leading zero use mount interprets backslash escape correctly instead signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3488,,
4394,5d6a46036277e472433416dda06a0299c339ae08,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-29 09:27:03 -0700,3459, unify mount share zfs create clone zfs create zfs clone command expected automatically mount share new filesystems since common functionality moved shared helper function signed brian behlendorf behlendorf1 llnl.gov close 3459,,
4395,90947b2357157a376fdd23dadbcfedad82652525,im Chase <tim@chase2k.com>, 2015-06-14 11:19:40 -0500,3495, 3.12 compat numa aware per superblock shrinker kernel 3.12 numa aware superblock shrinker used zol zfs_sb_prune patch call shrinker line numa node order memory freed one signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3495,,
4396,410921241d00d9e6e48d6e544ab5fbf2f642a72d,ajo MÃ¶ller <dasjoe@gmail.com>, 2015-05-24 20:22:55 +0200,3439, add option zpool iostat sysstat iostat omits first report option used patch add functionality omits first report statistic since system boot signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3439,,
4397,8e70975f905935df2a68fb242570056035a52948,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-09 16:39:25 -0700,3402, wait interruptibly prefetch thread linux kernel watchdog automatically dump backtrace process sleep 120 uninterruptible state solution prefetch thread sleep interruptible state way existing code written safe woken always reevaluate conditional general rule preferable sleep interruptible possible signed brian behlendorf behlendorf1 llnl.gov close 3450 close 3402,,
4398,b64ccd6c52cfb34d7b92715baef5ebd9305de6d1,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-11 10:47:19 -0700,3402, rename cv_wait_sig counterpart zfsonlinux spl 2345368 replaces function cv_wait_sig functional change patch merely brings function name sync maximize portability signed brian behlendorf behlendorf1 llnl.gov issue 3450 issue 3402,,
4399,06358ea16e2ff256acc6376c71539f7211851404,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-11 10:27:36 -0700,3481, merge branch lock contention arcs_mtx final signed tim chase tim chase2k.com signed brian behlendorf close 3115 close 3481,,
4400,121b3cae742a0670d902a51bc61d49dc4a3e4445,im Chase <tim@chase2k.com>, 2015-06-04 08:06:27 -0500, , increase arc_c_min allow safe operation arc_adapt zol lowered minimum arc size 4mib better accommodate tiny system raspberry however addition large block support arc_adapt function depends arc_c 32mib  patch raise minimum arc size 32mib add verify test arc_adapt future proofing signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4401,f6046738365571bd647f804958dfdff8a32fbde4,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-30 09:57:53 -0500, , make arc_prune asynchronous described comment critical function never sleep holding hash lock behavior possible linux implementation arc_prune logic implemented synchronous illumos analogous function asynchronous address function reworked two new function follows arc_prune_async asynchronous implementation dispatch prune callback run system taskq make suitable use context arc_prune synchronous implementation depends arc_prune_async implementation block outstanding callback complete used safe expected memory freed patch additionally add module option allows meta reclaim strategy configured default balanced strategy proved work well linux illumos meta strategy enabled signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4402,c5528b9ba622421a213e128704de4090fa0db773,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-05 11:26:35 -0700, , use function replace taskq_wait way caller block previously submitted task completed previous behavior task_wait prior introduction really functionalty change caller signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4403,4f34bd9792bad1affe5b93aeef406fd7dc2df0f8,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-04 16:25:37 -0700, , add function spl commit behlendorf spl 9cef1b5 add interface see commit log full justification addition patch add required user space counterpart signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com,,
4404,ca0bf58d65f77e944b9905571df9a2eae647aeca,rakash Surya <prakash.surya@delphix.com>, 2015-01-12 19:52:19 -0800, , illumos 5497 lock contention arcs_mtx reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com porting note significant code change illumos 5368 patch arc cache metadata never picked zol mostly reverted patch since zol relies kernel asynchronously calling shrinker actually reap memory shrinker wake every time run function longer call since newly added call periodically notable conflicting zol commits conflicted patch whose effect either duplicated done patch 302f753 integrate arc tightly linux 39e055c adjust arc_p based byte arc_shrink f521ce1 allow arc_p drop zero grow arc_c 77765b5 remove arc_meta_used arc_adjust calculation 94520ca prune metadata ghost list arc_adjust_meta trace support added produce following output fio 12498 077 .... 112936.448324 offset 240 numsublists sublistidx fio 12498 077 .... 112936.448347 offset 240 numsublists sublistidx following arcstats removed recycle_miss used arcstat.py arc_summary.py updated appropriately  following arcstats added number time arc_evict_state unable evict enough buffer reach target amount evict_l2_skip number time arc_evict_hdr skipped eviction written l2arc replaces number time failed acquire hash_lock try arc_meta_min show value module parameter see index column dbuf kstat removed since direct analog new multilist scheme additional multilist related stats could added future would likely require extension mulilist api following module parameter added number arc header free per sub list moving next sub list enforce floor amount metadata arc number multilist sub list per arc state control amount arc must exceed target size considered overflowing ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4405,b9541d6b7d765883f8a5fe7c1bde74df5c256ff6,hris Williamson <Chris.Williamson@delphix.com>, 2014-12-29 19:12:23 -0800, ," illumos 5408 managing zfs cache device requires lot ram 5408 managing zfs cache device requires lot ram reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com reviewed brady dev.fs.zfs gmail.com reviewed josef jeff sipek josef.sipek nexenta.com approved garrett amore garrett damore.org porting note due restructuring arc related structure patch conflict least following existing zol commits  fix inaccurate calculation arc_space_hdrs constant longer exists somewhat equivalently replaced hdr_l2only_size  add visibility cached dbufs new layering 1,2 arc_buf_hdr_t within arc_buf_hdr struct requires additional structure member name used referencing inner item also presence inner member indicated flag using new hdr_has_l 1,2 hdr macro ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov",,
4406,2a4324141f4a0811ba29dfef123fe5dad2ca1b03,eorge Wilson <george.wilson@delphix.com>, 2014-12-06 09:24:32 -0800, , illumos 5369 arc flag enum 5369 arc flag enum 5370 consistent arc_buf_hdr_t naming scheme reviewed matthew ahrens mahrens delphix.com reviewed alex reece alex.reece delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed richard elling richard.elling approved richard lowe richlowe richlowe.net porting note zol moved arc definition arc_impl.h signed brian behlendorf behlendorf1 llnl.gov ported tim chase tim chase2k.com,,
4407,ad4af89561eb16e45df37f3ce242679042718e0e,im Chase <tim@chase2k.com>, 2015-01-24 12:40:59 -0600, , partially revert add ddt ddt_entry l2arc_hdr cache reverts l2arc_hdr part commit preparation illumos 5497 lock contention arcs_mtx patch doe thing newer two level arc structure following illumos 5408 managing zfs cache device requires lot ram patch signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4408,97639d0a528fea141574c65241be686e9f8d5c72,im Chase <tim@chase2k.com>, 2015-01-23 08:08:14 -0600, , revert allow arc_evict_ghost evict meta data illumos 5497 lock contention arcs_mtx reworks eviction obviates need signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4409,f6b3b1f5d68a98b71ef5759b83eec15cd0e7a89f,im Chase <tim@chase2k.com>, 2015-02-15 22:28:32 -0600, , revert fix l2arc compression buffer leak reverts commit preparation illumos 5497 lock contention arcs_mtx patch includes fix problem zol picked subset illumos 5497 patch deal l2arc compression buffer leak signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4410,7807028ccd0a36038aa7b996daacd79d4c9c49cb,im Chase <tim@chase2k.com>, 2015-05-10 18:34:05 -0500, , revert arc_evict arc_evict_ghost reduce stack usage using kmem_zalloc reverts commit preparation illumos 5497 lock contention arcs_mtx patch eliminates marker within arc code signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4411,44de2f02d6b1365240f66fd5f3794ccbebd61a60,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-11 10:17:59 -0700,3432, remove unused variable vdev_add_child commit c3520e7 restructured vdev_add_child way spa variable unused non debug build consistent upstream illumos code zol unlike illumos built compiler warning enabled cause legitimate warning revert hunk patch keep build clean signed brian behlendorf behlendorf1 llnl.gov issue 3432,,
4412,2345368646151718fa59986d9e2d9d38bcdecb2c,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-10 09:35:20 -0700,456, rename cv_wait_sig commit f752b46e added function allow condition variable woken signal function timed wait counterpart named cv_wait_sig match illumos interface provides functionality patch renames symbol leaf define compatibility wrapper place zfs code moved correct name patch also make small number cosmetic change make condvar source header cstyle clean signed brian behlendorf behlendorf1 llnl.gov close 456,,
4413,86c16c59fe0d78d44e9f3ebb10ee740bb1028045,rian Behlendorf <behlendorf1@llnl.gov>, 2015-06-03 10:42:36 -0700,454, retire rwsem_is_locked compat stock linux 2.6.32 earlier kernel contained broken version rwsem_is_locked could return incorrect value compatibility code added detect broken implementation replace needed fix issue merged mainline linux kernel 2.6.33 major enterprise distribution based 2.6.32 backported fix therefore longer need carry code removed signed brian behlendorf behlendorf1 llnl.gov close 454,,
4414,c3520e7f1f567bd4e6a28eff4867c70850e8a854,atthew Ahrens <mahrens@delphix.com>, 2015-05-19 22:14:01 -0600,3432, illumos 5818 zfs ref compressratio incorrect sector size 5818 zfs ref compressratio incorrect sector size reviewed alex reece alex delphix.com reviewed george wilson george delphix.com reviewed richard elling richard.elling reviewed steven hartland killing multiplay.co.uk approved albert lee trisk omniti.com reference http www.illumos.org issue 5818 http github.com illumos illumos gate commit 81cd5c5 ported brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3432,,
4415,9c43027b3f18769f2ace16eaa222ac8b301501f4,rne Jansen <jansen@webgods.de>, 2015-05-06 09:07:55 -0700,3396, illumos 5269 zpool import slow 5269 zpool import slow reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed dan mcdonald danmcd omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5269 http github.com illumos illumos gate commit 12380e1e ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3396,,
4416,a876b0305e94eea9505e7ecbae93cf7a1d24f743,hris Dunlop <chris@onthe.net.au>, 2015-05-14 12:26:51 -0700,455, make taskq_wait block queue empty illumos taskq_wait return task queue behavior differs zol freebsd taskq_wait return task queue beginning taskq_wait call complete new task added whilst taskq_wait running ignored difference semantics make possible new subtle issue could introduced porting change illumos avoid possibility taskq_wait function updated block queue empty previous behavior remains available interface note function previously called taskq_wait_all renamed avoid confusion signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 455,,
4417,d050c627b5fdfaf72eac90bc07e03fcb2d8a123f,urbo Fredriksson <turbo@bayour.com>, 2015-06-08 15:48:30 +0200,3467, improve zfs event documentation add information zpool event command zpool event payload defined zfs event stage flag section added remove unused legacy zio_deadline payload define signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3467,,
4418,5f8e1e850522ee5cd37366427da4b4101a71c8a8,ed Bass <bass6@llnl.gov>, 2015-05-28 16:14:19 -0700,3443, dn_bonus unsafely function check dn_bonus outside dnode freed bonus dbuf may process getting evicted case race may cause access dbuf destroyed prevent ensure using bonus dbuf either holding reference taken signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3443,,
4419,d617648c7fc6904261f3ae8f2e3726c5c1838508,ed Bass <bass6@llnl.gov>, 2015-05-28 16:14:19 -0700,3443, minor bug fix check bb_blkid use blkid argument instead checking db_blkid may unsafe since yet hold dbuf validity unknown call mutex_exit found_db since certain point dbuf mutex taken found_db signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 3443,,
4420,4f38c25910b445277acb9513c36de8305f9457c6,urbo Fredriksson <turbo@bayour.com>, 2015-06-02 16:02:31 +0200,3457, sysv init script fix change order function library check load redhat based system _can_ lib lsb init function file redhat lsb core package partially use instead look file last giving script chance catch real distribution file filter dash dot dataset name read_mtab get rid awk entirely usually usr might availible get rid find dev disk find usr might availible instead use echo loop rebuild script .in file changed move sed part filter duplicate inside check valid variable signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3463 close 3457,,
4421,2a34db1bdbcecf5019c4a59f2a44c92fe82010f2,urbo Fredriksson <turbo@bayour.com>, 2015-04-23 20:35:45 +0200,2107, base init script sysv system based init script included debian gnu linux take code already existing one trying merge one set script work everyone better maintainability add configurable variable control working init script  set sleep time load module used primarily initrd script allow slower medium usb device etc availible load zfs module  set timed sleep initrd load zfs module  allow mounting additional datasets initrd primarily used initrd script allow filesystem needed boot usr opt var etc directly root dataset  exclude pool imported initrd init script  set control dkm build dkm package  set path zpool import import pool previously job use_disk_by_id still used backwards compatibility renamed allow better control import path old use_disk_by_id set new set sane default safe side zed_args allow local option zed without change init script import function do_import import pool name instead better control pool import use_disk_by_id set backwards compatibility yes ignore pool found simple zpool import seen happen try looking dev disk exists duplicate pool found command filtered found extra pool way must force use_disk_by_id first simple zpool import pool able find fallback importing pool using cache file exists simple import either built default work export function do_export export pool imported except root pool one zed script debian gnu linux package added refreshed zed init script behlendorf 5e7a660 portable may used lsb redhat style system pool imported zed successfully shut unload zfs module function library file zol init script installed etc init.d zfs function four init script etc default sysconfig conf.d zfs config file well common function library tagged config noreplace rpm rule file make sure replaced automatically locally modifed pitfals workarounds running init remove stale etc dfs sharetab importing pool zfs import init script debian gnu linux sendsigs script kill basically everything quite early shutdown phase zed stopped much later want zed among one killed add zed pid list pid sendsigs ignore centos echo_success echo_failure print status command turn echo 0xx etc move cursor choose colour etc work modified ifs variable need use zfs import reason work around define zfs_log_ end failure _msg redhat derivative distribution script pass shellcheck one false positive do_mount signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov reviewed richard yao ryao gentoo.org reviewed chris dunlap cdunlap llnl.gov close 2974 close 2107,,
4422,544f7184f8541bbfd7c739f7e01fc9b5b6e57c5e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-26 14:06:36 -0700,3440, use execstartpre load zfs module commit 87abfcb broke systemd import service treating execstart line shell command could executed way systemd work correct way handle case execstartpre patch update zfs import service file accordingly signed brian behlendorf behlendorf1 llnl.gov signed steven noonan steven uplinklabs.net signed chris siebenmann cks.git01 cs.toronto.edu close 3440,,
4423,65037d9b25c2bfa98d0aa5c9e34678127c03b345,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-20 14:39:52 -0700, , add function fprintf error message moved libzfs_init library function never belonged first place function added provide useful error message common cause failure additionally variable renamed error consistency rest code base signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov signed richard yao ryao gentoo.org,,
4424,87abfcba2283bfeb6636caf9aa2a72186d7708c4,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-20 14:36:37 -0700,2556, wait libzfs_init dev zfs device module loading synchronous creation dev zfs device dev zfs typically created udev rule module registered presented user space sysfs small window module loading device creation result spurious failure libzfs_init patch close race extending libzfs_init detect module loaded required wait dev zfs device created allows script reliably use following shell construct without need additional error handling sbin modprobe zfs sbin zpool import minimize potential time waiting libzfs_init strategy similar adaptive mutexes employed function busy wait 10ms based expectation module loaded therefore dev zfs created imminently take longer fall back polling second behavior customized degree setting following new environment variable functionality provided backwards compatibility existing script depend module auto load behavior default module auto loading disabled yes yes attempt load module second second wait dev zfs zfs import systemd service file updated call sbin modprobe zfs longer rely legacy auto loading behavior signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov signed richard yao ryao gentoo.org close 2556,,
4425,dc5e8b70416e5d511bc361309bd426c767177723,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-21 09:57:35 -0700, , add boot_ncpus macro compatibility define boot_ncpus num_online_cpus signed brian behlendorf behlendorf1 llnl.gov,,
4426,c11cd7f9348005232ca62ccbeabbd30e396861ac,urbo Fredriksson <turbo@bayour.com>, 2015-05-18 20:49:24 +0200,3428, style check shell script command shellcheck exists find shell script run shellcheck use gcc format shellcheck exclude zfs script config.sh really script signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3428,,
4427,141b6381d38a16a6178edcec8ace28d1f23b884e,ajo MÃ¶ller <dasjoe@gmail.com>, 2015-05-15 23:14:56 +0200,3417, change digit octal escape digit one prefixing octal value leading zero standard way disambiguate change impact zfs diff output therefore limited scope signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3417,,
4428,01fcbec52d2e808e7122d70218ecf1fbc94ed9b3,urbo Fredriksson <turbo@bayour.com>, 2015-05-18 14:30:32 +0000,3426, mount helper mount.zfs must sbin sbindir commit 60e9f69 added mounthelperdir option gentoo process accidentally modified default installation location security reason mount expects installed sbin signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3426,,
4429,f467b05a265abcfb8e5a3269f79d08f36a58646a,im Chase <tim@chase2k.com>, 2015-05-16 10:40:45 -0500,3419, initialize dbu_tqent dbu_evict_taskq added 0c66c32d invoked via case zol implementation taskqs requires entry initialized first taskq_init_ent order among thing embedded spinlock initialized properly signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3419,,
4430,7fec46b9d8967109ad289d208e8cf36a0c16e40c,lexander Eremin <a.eremin@nexenta.com>, 2015-05-13 15:15:56 -0700,3412, illumos 5847 libzfs_diff check zfs_prop_get return 5847 libzfs_diff check zfs_prop_get return reviewed matthew ahrens mahrens delphix.com reviewed albert lee trisk omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5847 http github.com illumos illumos gate commit 8430278 ported brian behlendorf behlendorf1 llnl.gov close 3412,,
4431,e5fd1dd6820d6ebca470990e433dfa9f60afc5f7,atthew Ahrens <mahrens@delphix.com>, 2015-05-14 17:41:29 -0600,3414, illumos 5243 zdb could much faster 5243 zdb could much faster reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5243 http github.com illumos illumos gate commit f7950bf ported brady don.brady intel.com signed brian behlendorf behlendorf1 llnl.gov close 3414,,
4432,b1b85c8772ed28d2c8227e6d32905740817ae2c3,im Chase <tim@chase2k.com>, 2015-05-14 12:45:56 -0500,3415, zdb able open root dataset pool dataset command line argument specified trailing slash example tank interpreted root dataset signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3415,,
4433,79065ed5a454d36492a3006fec69f14ddf83a88f,an Sanislo <oystr@cs.washington.edu>, 2015-05-12 13:30:19 -0700,3224, return estale force lookup missing nfs file handle seems annoying problem using nfsv4 access zfs file system certain circumstance easily reproduced nfs_client1 mount server export mnt nfs_client1 mnt nfs_client1 echo foo junk nfs_client1 cat junk foo different nfsv4 client nfs_client2 mount server export mnt nfs_client2 mnt nfs_client2 junk make change mnt junk save change inode associated mnt junk back original client nfs_client1 cat junk cat junk file directory admittedly nfsv4 advertised cluster file system maintains completely coherent view data across multiple node doe mechanism built try deal situation like namely employ specialized file handle lookup routine return estale file handle contains non existant inode value estale return trigger return full file path lookup client determine file actually gone away cached file handle longer valid zfs behavior brought line file system e.g. ext4 applying following patch signed brian behlendorf behlendorf1 llnl.gov close 3224,,
4434,7290cd3c4ed19fb3f75b8133db2e36afcdd24beb,ntonio Russo <antonio.e.russo@gmail.com>, 2015-05-13 07:16:42 -0700,2081, relax restriction iteration per documentation dnode.c txg parameter specifies lower bound transaction dnode found interested dnodes removed first last transaction snapshot need created snapshot correspond removed file fact behavior zfs diff test case exactly match transaction created data deleted snapshot produced snapshot definitely predating first transaction snapshot signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase tim onlight.com close 2081,,
4435,fd0fd6467bb8638b1496ad5a63b74f19fbd607df,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-13 10:50:35 -0700,3410, remove unused dsl_pool_t variable asserts compiled using disable debug configure option local variable dsl_pool_t unused generate compiler warning since variable used assert replace ds_dir dd_pool additional advantage potentially saving byte stack depending gcc decides compile function issue noticed immediately automated builder use enable debug make testing rigorous possible signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov close 3410,,
4436,5dc8b7365ff1932bfd969bc71cd49db9b3a6dc87,ax Grossman <max.grossman@delphix.com>, 2015-04-08 11:37:13 -0700,3397, illumos 5765 add support estimating send stream size lzc_send_space source bookmark 5765 add support estimating send stream size lzc_send_space source bookmark reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com reviewed steven hartland killing multiplay.co.uk reviewed bayard bell gmail.com approved albert lee trisk nexenta.com reference http www.illumos.org issue 5765 http github.com illumos illumos gate commit 643da460 porting note unused variable recordsize dropped ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3397,,
4437,19b3b1d2a256ecac1f27278c593983f772322f09,ustin T. Gibbs <justing@spectralogic.com>, 2015-05-12 10:23:45 -0700,3403, illumos 5393 spurious failure 5393 spurious failure reviewed matthew ahrens mahrens delphix.com reviewed andrew willa reviewed prakash surya prakash.surya delphix.com reviewed steven hartland killing multiplay.co.uk approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5393 http github.com illumos illumos gate commit e1f3c20 ported brian behlendorf behlendorf1 llnl.gov close 3403,,
4438,63b33e878af4aa1027e4a7ffa99085cca11e665b,ustin T. Gibbs <justing@spectralogic.com>, 2015-01-09 19:45:41 -0700,3388, illumos 5562 zfs sa_handle violate kmem invariant debug kernel panic boot 5562 zfs sa_handle violate kmem invariant debug kernel panic boot reviewed matthew ahrens mahrens delphix.com reviewed robert mustacchi fingolfin.org reviewed george wilson george delphix.com reviewed rich lowe richlowe richlowe.net approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5562 http github.com illumos illumos gate commit 0fda3cc5 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3388,,
4439,252e1a54ab59bd579f6b29cfd0acc74323e72f0c,atthew Ahrens <mahrens@delphix.com>, 2015-04-26 15:27:36 -0700,3387, illumos 5810 zdb print detail bpobj 5810 zdb print detail bpobj reviewed prakash surya prakash.surya delphix.com reviewed alex reece alex delphix.com reviewed george wilson george delphix.com reviewed andrew freebsd.org reviewed simon klinkert simon.klinkert gmail.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5810 http github.com illumos illumos gate commit 732885fc ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3387,,
4440,10400bfeac5922f6d9f8ade4e6df71fb79977c66,atthew Ahrens <mahrens@delphix.com>, 2015-05-07 03:38:29 +1000,3383, illumos 5351 5352 scrub pause 5351 scrub extra second txg 5352 scrub pause dirty data author matthew ahrens mahrens delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5351 http github.com illumos illumos gate commit 6f6a76a ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3383,,
4441,08dc1b2ddd3526bf6c495403b62d2e5a7ddc1b3b,atthew Ahrens <mahrens@delphix.com>, 2015-05-07 03:24:09 +1000,3382, illumos 5350 clean code dnode_sync author matthew ahrens mahrens delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5350 http github.com illumos illumos gate commit e651831 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3382,,
4442,7224c67fea3c427ab0d5bafb6d7fba32a7a592d9,lex Reece <alex@delphix.com>, 2015-05-07 03:08:25 +1000,3381, illumos 5422 preserve avl invariant dn_dbufs author alex reece alex delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed josef jeff sipek josef.sipek nexenta.com reviewed albert lee trisk nexenta.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5422 http github.com illumos illumos gate commit a846f19 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3381,,
4443,e48533383b6ba1737245ac4338c492865a97b0e9,im Chase <tim@onlight.com>, 2015-05-08 15:49:56 -0500,3386, linux 2.6.36 compat use remove pre 2.6.36 support commit added support new autoconf test use preprocessor macro name code effect failfast mode enabled zol post 2.6.35 kernel retire interface used pre 2.6.28 kernel raise error condition failfast interface detected signed tim chase tim onlight.com signed brian behlendorf behlendorf1 llnl.gov close 3386,,
4444,492b1d2ef0aa14c22a8f075d948950d072970c17,hris Dunlap <cdunlap@llnl.gov>, 2015-05-06 15:56:03 -0700,3384, update zed copyright boilerplate commit update copyright boilerplate within zed subtree instruction appending contributor copyright line removed manually maintaining copyright notice manner error prone imprecise file scope granularity oftentimes inaccurate line become pernicious source merge conflict commit log better suited maintaining information consequently line added boilerplate refer git commit log authoritative copyright attribution account scenario file may become separated codebase commit history i.e. copied somewhere else line added identify file origin http resource 2012 signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3384,,
4445,214806c7e9833fb525a78a335b56fff5e863942e,avid Lamparter <equinox@diac24.net>, 2014-07-02 23:47:02 +0200,2445, safely handle security acl failure security acl operation performed atomically accomplish would need significant invasive change made common code base moment desirable compatibility reason avoid therefore code updated attempt unwind operation case failure rather panic signed brian behlendorf behlendorf1 llnl.gov close 2445,,
4446,76d520675e8ba0f7760fb5eefe2492fabf7a2335,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-29 12:45:40 -0800,354, ztest randomly change recordsize improve large block feature test coverage extending ztest frequently change recordsize specificially designed catch corner case might otherwise unnoticed signed brian behlendorf behlendorf1 llnl.gov issue 354,,
4447,f1512ee61e2f22186ac16481a09d86112b2d6788,atthew Ahrens <mahrens@delphix.com>, 2014-11-03 12:15:08 -0800,354, illumos 5027 zfs large block support 5027 zfs large block support reviewed alek pinchuk pinchuk.alek gmail.com reviewed george wilson george.wilson delphix.com reviewed josef jeff sipek josef.sipek nexenta.com reviewed richard elling richard.elling reviewed saso kiselkov skiselkov.ml gmail.com reviewed brian behlendorf behlendorf1 llnl.gov approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5027 http github.com illumos illumos gate commit b515258 porting note included patch tiny isp2 cleanup zio_init illumos 5255 unlike upstream illumos commit patch doe impose arbitrary 128k block size limit volume volume like filesystems limited module option default maximum record size limited module option value may safely increased 16m largest block size supported disk format moment block clearly offer significant performance improvement benefit going beyond majority workload clear illumos version patch increased dmu_max_access 32m determined large enough using 16m block function fail efbig assigning immediately observed linux newly created file must security xattr created failing therefore set dmu_max_access 64m bit platform hard limit set block due limited virtual address space able relax one abd patch merged ported brian behlendorf behlendorf1 llnl.gov close 354,,
4448,3df293404a102398445fc013b67250073db9004e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-11 12:05:05 -0700, , fix type mismatch bit system function assume void type bit bit platform rather complicating assert handle simply removed additionally format specifier assumed imply bit value fix using llu format specifier always atleast bit explicitly casing variable u_longlong_t issue handled way many part code signed brian behlendorf behlendorf1 llnl.gov,,
4449,f9cab372917983805e14154df0720d21333326c3,rian Behlendorf <behlendorf1@llnl.gov>, 2015-05-07 17:12:49 -0700, , remove module option option longer used code functionality removed commit f3a7f66 module option dropped time signed brian behlendorf behlendorf1 llnl.gov,,
4450,16fcdea36340c658b4557fd34a74915fd618f7a6,hris Dunlop <chris@onthe.net.au>, 2015-05-06 09:59:17 +1000,3377, arc_evict arc_evict_ghost reduce stack usage using kmem_zalloc debugging enabled depending kernel config size arc_buf_hdr_t blow stack arc_evict arc_evict_ghost greater 1024 byte let avoid signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3377,,
4451,63e3a8616b200dc36fe9d298a466bb5c25b58132,atthew Ahrens <mahrens@delphix.com>, 2014-11-26 09:57:30 -0800,3373, illumos 5349 verify block pointer plausible reading 5349 verify block pointer plausible reading reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com reviewed george wilson george.wilson delphix.com reviewed richard lowe richlowe richlowe.net reviewed xin delphij freebsd.org reviewed josef jeff sipek josef.sipek nexenta.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5349 http github.com illumos illumos gate commit f63ab3d5 porting note several variable declaration moved due style need ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3373,,
4452,f0da4d15082be83547e5370e4479d3c04b56451d,hris Dunlop <chris@onthe.net.au>, 2015-05-02 15:47:06 +1000,3281, wait znodes released tearing superblock time tearing superblock vfs started releasing inodes znodes work may handed iput taskq need wait work complete however iput taskq result additional work added taskq  iput iput_final evict destroy_inode   zfs_iput_async ztoi z_xattr_parent taskq_dispatch ... iput ... let wait znodes released signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3281,,
4453,7a3066ffddcf4f87470e33a1cd414e558b90249c,atthew Ahrens <mahrens@delphix.com>, 2014-11-22 19:24:52 -0800,3372, illumos 5348 fill info ecksum 5348 fill info ecksum reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed steven hartland killing multiplay.co.uk approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5348 http github.com illumos illumos gate commit 373dc1cf ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3372,,
4454,f3c517d814f0155407d50a22b2f9b2b936260b7a,atthew Ahrens <mahrens@delphix.com>, 2015-04-11 11:35:03 -0700,3364, illumos 5820 verify failed zio_done bp_equal io_bp_orig 5820 verify failed zio_done bp_equal io_bp_orig reviewed alex reece alex delphix.com reviewed george wilson george delphix.com reviewed steven hartland killing multiplay.co.uk approved garrett amore garrett damore.org reference http www.illumos.org issue 5820 http github.com illumos illumos gate commit 34e8acef00 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3364,,
4455,36c6ffb6b6a4a77e7133b0f84a5aeccf0aa25499,atthew Ahrens <mahrens@delphix.com>, 2015-04-26 15:24:34 -0700,3369, illumos 5808 spa_check_logs necessary readonly pool 5808 spa_check_logs necessary readonly pool reviewed george wilson george delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed simon klinkert simon.klinkert gmail.com reviewed andrew freebsd.org approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5808 http github.com illumos illumos gate commit 23367a2f ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3369,,
4456,50f9ea01499be508918e33923e004bf5dcf390e3,ill Andrews <will@freebsd.org>, 2015-04-26 15:30:46 -0700,3368, illumos 5814 close refcount leak iterating sublist 5814 close refcount leak iterating sublist reviewed prakash surya prakash.surya delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed simon klinkert simon.klinkert gmail.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5814 http github.com illumos illumos gate commit b67dde11 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3368,,
4457,859735c0954e89dd329729c6959df7cbaca1fdcc,urbo Fredriksson <turbo@bayour.com>, 2015-03-20 23:29:14 +0100,3203, add option zpool export support exporting imported pool one using zpool export accomplished moving export part zpool_do_export new function for_each_pool function used enumerate list pool exported passing argc implies function called pool signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3203,,
4458,0c60cc326bdb44f7eea61e62c6183822d0bd9cf0,hristopher Siden <chris@delphix.com>, 2014-11-04 09:35:37 -0800,4951, illumos 4951 zfs administrative command fix 4951 zfs administrative command use reserved space fail enospc approved christopher siden delphix.com reference http www.illumos.org issue 4951 http github.com illumos illumos gate commit c39f2c8 ported brian behlendorf behlendorf1 llnl.gov,,
4459,3d45fdd6c0d5b4c8e42b6a2cda00bf6f22c9f2bf,atthew Ahrens <mahrens@delphix.com>, 2014-11-03 12:28:43 -0800,4373, illumos 4951 zfs administrative command use reserved space 4951 zfs administrative command use reserved space enospc reviewed john kennedy john.kennedy delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4373 http github.com illumos illumos gate commit 7d46dc6 ported brian behlendorf behlendorf1 llnl.gov,,
4460,cfec5b17b3b04f07381cc705eaf733794d034065,ax Grossman <max.grossman@delphix.com>, 2014-11-03 11:44:19 -0800,4373, illumos 4373 add block content print zstreamdump 4373 add block content print zstreamdump reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com reviewed josef jeff sipek jeffpc josefsipek.net approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4373 http github.com illumos illumos gate commit 994fb6b ported brian behlendorf behlendorf1 llnl.gov,,
4461,a0c9a17aefb6959a50a5c3572544b955dcf715a9,erry Jelinek <jerry.jelinek@joyent.com>, 2015-01-28 15:21:33 -0800,4901, illumos 4901 zfs filesystem snapshot limit leak 4901 zfs filesystem snapshot limit leak reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4901 http github.com illumos illumos gate commit adf3407 ported brian behlendorf behlendorf1 llnl.gov,,
4462,83017311e4a64bc49d43d1f8c93fc0e2263bb41b,atthew Ahrens <mahrens@delphix.com>, 2014-11-03 11:12:40 -0800,3656," illumos 3654,3656 3654 zdb print number ganged block 3656 remove unused function reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd nexenta.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3654 http www.illumos.org issue 3656 http github.com illumos illumos gate commit d5ee8a1 porting note 3655 3657 part commit hunk dropped since apply mdb ported brian behlendorf behlendorf1 llnl.gov",,
4463,6102d0376ecfbcc1f63819bc1046ee78b7f3d4fc,uxoko <tuxoko@gmail.com>, 2015-05-01 11:11:01 +0800,3349, add cond_resched zfs_zget prevent infinite loop reported thread would loop infinitely inside zfs_zget speculated cause inode marked evict zfs_zget would see loop however looping thread yield inode may chance finish evict thus causing infinite loop patch solve issue add cond_resched zfs_zget making looping thread yield needed tested jlavoy jalavoy gmail.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3349,,
4464,c9520ecc0f4693cf6fbc3f678555268dc2b91089,ason Zaman <jason@perfinion.com>, 2015-04-30 16:20:38 +0400,3333, dmu fix integer overflow params function uint64_t offset memcpy bcopy calculated using 32bit ints patch change also uint64_t isnt overflow pax size overflow caught formatting zvol gentoo bug 546490 pax offset 1ffffb000 db_offset 1ffffa000 db_size 2000 size 5000 pax size overflow detected function dmu_read var tmp portage sys zfs kmod 0.6.3 work zfs zfs 0.6.3 module zfs module zfs dmu.c 781 cicus.366_146 max count cpu pid 2236 comm zvol tainted 3.17.7 hardened call trace 0x9d58 0x343ce zfs dump_stack 0x4e 0x7a 0x1aa9a 0x343ce zfs 0x36 0x40 dmu_read 0x52b 0x920 zfs zrl_is_locked 0x7d1 0x1ce0 zfs zil_clean 0x9d2 0xc00 zfs zil_commit 0x21 0x30 zfs zrl_is_locked 0xce1 0x1ce0 zfs __schedule 0x547 0xbc0 taskq_cancel_id 0x2a6 0x5b0 spl wake_up_state 0x20 0x20 taskq_cancel_id 0x110 0x5b0 spl kthread 0xc4 0xe0 0x170 0x170 ret_from_fork 0x74 0xa0 0x170 0x170 signed jason zaman jason perfinion.com signed brian behlendorf behlendorf1 llnl.gov close 3333,,
4465,98b254188a730553361adfabca9f658421be2b82,eorge Wilson <george.wilson@delphix.com>, 2014-10-20 22:07:45 +0000,2828, illumos 5244 zio pipeline caller explicitly invoke next stage 5244 zio pipeline caller explicitly invoke next stage reviewed adam leventhal ahl delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed matthew ahrens mahrens delphix.com reviewed richard elling richard.elling gmail.com reviewed dan mcdonald danmcd omniti.com reviewed steven hartland killing multiplay.co.uk approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5244 http github.com illumos illumos gate commit 738f37b porting note unported 2932 support crash dump raidz etc pool caused merge conflict due copyright difference module zfs vdev_raidz.c unported 4128 disk zpools never away pulled additional linux specific change caused merge conflict module zfs vdev_disk.c ported richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov close 2828,,
4466,8dd86a10cf836d64cddd9c8693f449686e35788c,atthew Ahrens <mahrens@delphix.com>, 2015-04-26 15:29:43 -0700,3357, illumos 5812 assertion failed zrl_tryenter zr_owner null 5812 assertion failed zrl_tryenter zr_owner null reviewed george wilson george delphix.com reviewed alex reece alex delphix.com reviewed andrew freebsd.org approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5812 http github.com illumos illumos gate commit 8df1730 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3357,,
4467,6186e2975316e6693d576ab9eec8289c806e38a9,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 23:00:07 +1100,5592, illumos 5592 null pointer dereference 5592 null pointer dereference author justin gibbs justing reviewed dan mcdonald danmcd omniti.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed andrew freebsd.org approved robert mustacchi joyent.com reference http www.illumos.org issue 5592 http github.com illumos illumos gate commit 9d47dec ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4468,6ebebaceb1091142b81430291c610d79b6a3073e,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 22:59:15 +1100,5531, illumos 5531 null pointer dereference dsl_prop_get_ds 5531 null pointer dereference dsl_prop_get_ds author justin gibbs justing reviewed matthew ahrens mahrens delphix.com reviewed dan mcdonald danmcd omniti.com reviewed george wilson george delphix.com reviewed bayard bell gmail.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5531 http github.com illumos illumos gate commit e57a022 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4469,0c66c32d1d8b64a261cceb5f50a9e86777c5d0b2,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 14:44:32 +1100,5056, illumos 5056 zfs deadlock db_mtx dn_holds 5056 zfs deadlock db_mtx dn_holds author justin gibbs justing reviewed andrew willa reviewed matt ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5056 http github.com illumos illumos gate commit bc9014e porting note  original patch includes otherwise unmentioned fix possible usage uninitialised variable  illumos list_link_init filling list_node_t null notice miss list_link_init zero containing structure e.g allocated kmem_zalloc linux much uninitialised list_node_t boom time later used destroyed  reduce stack usage using kmem_alloc ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4470,d683ddbb7272a179da3918cc4f922d92a2195ba2,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 02:14:34 +1100,5314, illumos 5314 remove dbuf phys db_data pointer alias zfs 5314 remove dbuf phys db_data pointer alias zfs author justin gibbs justing reviewed andriy gapon avg freebsd.org reviewed matthew ahrens mahrens delphix.com reviewed andrew willa approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5314 http github.com illumos illumos gate commit c137962 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4471,945dd93525d6e33f822beb44e3a3076c8bc89f86,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 02:13:28 +1100,5310, illumos 5310 remove always true test non null ds_phys 5310 remove always true test non null ds_phys author justin gibbs justing reviewed matthew ahrens mahrens delphix.com reviewed andrew willa reviewed andriy gapon avg freebsd.org approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5310 http github.com illumos illumos gate commit d808a4f ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4472,9925c28cdec943a6ffa81219cb469b727decf111,lex Reece <alex@delphix.com>, 2015-04-02 02:10:58 +1100,5095, illumos 5095 panic adding duplicate dbuf dn_dbufs 5095 panic adding duplicate dbuf dn_dbufs author alex reece alex delphix.com reviewed adam leventhal adam.leventhal delphix.com reviewed george wilson george.wilson delphix.com reviewed mattew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed dan mcdonald danmcd omniti.com reviewed josef sipek jeffpc josefsipek.net approved robert mustacchi joyent.com reference http www.illumos.org issue 5095 http github.com illumos illumos gate commit 86bb58a ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4473,5aea3644d6aef3fe636053d6924bc0803fbd75b5,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-02 02:09:20 +1100,5038, illumos 5038 remove old style flexible array usage zfs 5038 remove old style flexible array usage zfs author justin gibbs justing reviewed matthew ahrens mahrens delphix.com reviewed josef jeff sipek jeffpc josefsipek.net approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5038 http github.com illumos illumos gate commit 7f18da4 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4474,8951cb8dfb8dcf410a237656c1f9c9767e4a9e6c,lex Reece <alex@delphix.com>, 2015-04-03 14:14:28 +1100,4873, illumos 4873 zvol unmap call take long time larger datasets 4873 zvol unmap call take long time larger datasets author alex reece alex delphix.com reviewed george wilson george delphix.com reviewed matthew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed basil crow basil.crow delphix.com reviewed dan mcdonald danmcd omniti.com approved robert mustacchi joyent.com reference http www.illumos.org issue 4873 http github.com illumos illumos gate commit 0f6d88a porting note dbuf_free_range reduce stack usage using kmem_alloc sorted avl tree handle spill block case correctly without special handling loop ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4475,58c4aa00c65e09f254de0b939b2c1aa720c204a1,orgen Lundman <lundman@lundman.net>, 2015-04-02 00:49:14 +1100,4975, illumos 4975 missing mutex_destroy call zfs 4975 missing mutex_destroy call zfs author jorgen lundman lundman lundman.net reviewed matthew ahrens matthew.ahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed rich lowe richlowe richlowe.net reviewed seth nimbosa darth.serious gmail.com reviewed dan mcdonald danmcd omniti.com reviewed brady dev.fs.zfs gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4975 http github.com illumos illumos gate commit d2b3cbb ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4476,ca227e54a89e0797ca99063a326f01633267a44a,lex Reece <alex.reece@delphix.com>, 2015-04-02 00:10:21 +1100,3897, illumos 3897 zfs filesystem snapshot limit fix leak 3897 zfs filesystem snapshot limit fix leak author alex reece alex.reece delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3897 http github.com illumos illumos gate commit fb7001f ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4477,788eb90c4ca64beaf85ef542bb22c64fcb50993a,erry Jelinek <jerry.jelinek@joyent.com>, 2015-04-02 00:07:48 +1100,3897, illumos 3897 zfs filesystem snapshot limit 3897 zfs filesystem snapshot limit author jerry jelinek jerry.jelinek joyent.com reviewed matthew ahrens mahrens delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3897 http github.com illumos illumos gate commit a2afb61 porting note reduce stack usage using kmem_alloc ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
4478,308a451f7f5ecded4f194a50abab5ca123b6d397,atthew Ahrens <mahrens@delphix.com>, 2014-09-06 00:03:09 +0200,2669, illumos 5134 zfs_debug debug set libzpool enable debug print 5134 zfs_debug debug set libzpool enable debug print reviewed adam leventhal adam.leventhal delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed saso kiselkov skiselkov.ml gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org project illumos gate issue 5134 http github.com illumos illumos gate commit 7fa49ea porting note added dprintf_setup main zfs_main.c zpool_main.c ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2669,,
4479,ecfb0b5f42c3662e36d5cd444c0aa2ebc8501589,uxoko <tuxoko@gmail.com>, 2015-04-26 16:09:41 +0800,2060, fix misuse input argument input argument dnp modified middle point temporary buffer originally matter user traverse_post dereferences however fbeddd6 piece code added dereferencing dnp modification creating possible bug fix creating new local variable cdnp dmu_ot_dnode case modify input argument also introduce different local variable dmu_ot_objset case prevent confusion input argument signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2060,,
4480,52d5a1cc57820adda5499c537c553bc4f2e7976a,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-27 12:15:42 -0700,3327, merge branch zed pushbullet patch stack begin cleaning existing zedlets refactoring common code block zed functions.sh adopting consistent coding style updating exit code etc script run cleanly shellcheck old email zedlets replaced new notify zedlets notification sent via email pushbullet additional notification method likely added future pushbullet notification enabled setting optionally zed.rc pushbullet implementation requires awk curl sed executables installed standard path signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3327,,
4481,ce119da33daa9c51b55fb27ea30a1495a4e73885,hris Dunlap <cdunlap@llnl.gov>, 2015-03-25 13:10:32 -0700, , combine data notify.sh notify.sh data notify.sh zedlet serf similar purpose notify.sh namely generate notification response particular error event initially data notify.sh separated notify.sh since data zevent doe understand pertain specific vdev device stand contrast checksum zevents handled notify.sh attributed specific vdev time seemed simpler handle two case separate script commit add support data zevent notify.sh symlinks notify.sh data notify.sh also add count  notification message signed chris dunlap cdunlap llnl.gov,,
4482,090b19158a7f776586369a593b271392cabbf175,hris Dunlap <cdunlap@llnl.gov>, 2015-03-19 17:40:54 -0700, , add notification spare.sh spare.sh zedlet doe generate notification failing device replaced hot spare maybe tell someone commit add notification message spare.sh zedlet notification triggered failing device successfully replaced hot spare encountering checksum error signed chris dunlap cdunlap llnl.gov,,
4483,a0d065fa922d2ce2e07785eb3d35757763c644bf,hris Dunlap <cdunlap@llnl.gov>, 2015-02-26 16:26:48 -0800, , add support pushbullet notification commit add function hook zed_notify thereby integrating existing notify zedlets enables zed push notification desktop computer mobile device configured variable zed.rc http makefile install data local target replaced install data hook local target particular guarantee execution order zed.rc potentially containing sensitive information i.e. pushbullet access token recommended permission changed 0600. hook target always executed main rule work done thus chmod always take place zed.rc file installed http www.gnu.org software automake manual automake.html extending signed chris dunlap cdunlap llnl.gov,,
4484,20967ff1a4c2ff3f706505222dd66b3b15645596,hris Dunlap <cdunlap@llnl.gov>, 2015-02-26 16:26:25 -0800, , replace email zedlets notify zedlets several zedlets already exist sending email reponse particular zevent email ubiquitous alternative method may better suited configuration instead duplicating email zedlets every future notification method preferable abstract notification method function added benefit reducing amount code duplicated zedlets allowing related bug fixed single location commit replaces existing email zedlets corresponding notify zedlets addition zedlet code sending email message moved function added generic zed_notify function sending notification via available method configured commit also change couple related zed.rc variable changed changed note zed_email remains unchanged use solely email notification method signed chris dunlap cdunlap llnl.gov,,
4485,aded9a6814c9f6260437bc186ad08debc5d0b6c8,hris Dunlap <cdunlap@llnl.gov>, 2015-02-17 17:23:54 -0800, , cleanup zedlets commit factor several common zedlet code block zed functions.sh shortens length script thereby hopefully making easier understand maintain addition commit revamps coding style used script consistent hopefully maintainable mostly follows google shell style guide tried assimilate following resource google shell style guide http google svn trunk shell.xml dash bin http wiki.ubuntu.com dashasbinsh filename pathnames shell correctly http essay filename shell.html common shell script mistake http programming finally commit update exit code used zedlets consistent one another script run cleanly shellcheck http script tested bash dash signed chris dunlap cdunlap llnl.gov,,
4486,0336f3d001c76625281919bcf9e534d1976f3c36,saac Huang <he.huang@intel.com>, 2015-04-25 22:25:45 -0600,3262, remove useless variable required linux port kernel track module busy prototype spa_busy also removed since definition already removed signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 3262,,
4487,c5656c4cfc28ecf9daf0a8df527b1bf0900c1f80,saac Huang <he.huang@intel.com>, 2015-04-25 22:08:29 -0600,3264, memory leak make_root_vdev newroot nvlist freed returning signed isaac huang he.huang intel.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3264,,
4488,ec8501ee1274205f277a7287c3de8119d361afaf,ustin T. Gibbs <justing@spectralogic.com>, 2015-04-11 14:51:06 -0400,3280, 5313 allow aggregated across zio priority class reviewed andriy gapon avg freebsd.org reviewed andrew willa reviewed matt ahrens mahrens delphix.com reviewed george wilson george delphix.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5313 http github.com illumos illumos gate commit fe319232 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3280,,
4489,0bf8501ae1f7c995d54c6061d8da29419ec4fed0,aul B. Henson <henson@acm.org>, 2014-12-31 17:44:52 -0800,3279, 5410 document option zfs inherit 5410 document option zfs inherit 5412 mention option zfs inherit fails quota reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5410 http github.com illumos illumos gate commit 5ff8cfa9 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3279,,
4490,4eb30c68644c0aacbed9e10d94eff071b2cd76f8,ed Bass <bass6@llnl.gov>, 2015-04-23 12:32:59 -0700,3335, serialize access spa spa_feat_stats nvlist function manipulates shared nvlist spa spa_feat_stats unsafe concurrent manner add mutex protect list signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3335,,
4491,7008109646446a3f9dda36bfbd3a526f4f8810ae,burroughs <chris.burroughs@gmail.com>, 2015-04-24 14:03:26 -0400,3341, align manpage reality default changed 2820 signed cburroughs chris.burroughs gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3341,,
4492,07012da668c2fa50ff469137e71262d45e0cd16e,hunwei Chen <tuxoko@gmail.com>, 2015-04-02 02:18:05 +0800,3247, fix kernel panic due tsd_exit zfs_exit zsb following panic would occur certain heavy load 4692.202686 kernel panic syncing thread terminating rrw lock held 4692.228053 cpu pid 6250 comm mmap_deadlock tainted 3.18.10 culprit zfs_exit zsb would call tsd_exit every time would purge tsd data thread however zfs_enter designed reentrant allow zfs_exit blindly purge tsd data instead rely new behavior tsd_set null passed new value tsd_set automatically remove tsd entry specified key current thread rrw_tsd_key already call tsd_set key null done zfs_fsyncer_key relied zfs_exit zsb call tsd_exit clean explicitly call tsd_set key null signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3247,,
4493,62e2eb2329d99f7c39bcda47bc9ecb2887608fa5,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-24 14:22:27 -0700, , fix cstyle issue spl tsd.c patch address issue identified style checker spl tsd.c contains functional change signed brian behlendorf behlendorf1 llnl.gov,,
4494,3d39d0afab44b217d51f7fbd97c3561d39e80f0c,hunwei Chen <tuxoko@gmail.com>, 2015-04-02 01:50:48 +0800,443, make tsd_set key null remove tsd entry current thread prevent leaking tsd entry make tsd_set key null remove tsd entry current thread alright since tsd_get return null entry exist signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 443,,
4495,d3c677bcd330423c72cd4d4100727e5c1e8c1f38,ichard Yao <richard.yao@clusterhq.com>, 2015-02-17 10:12:56 -0500,449, implement areleasef signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 449,,
4496,313b1ea622275e24c3046c3b04a98a933b18f8de,ichard Yao <richard.yao@clusterhq.com>, 2015-04-16 10:29:41 -0400,450, vn_getf vn_releasef accept negative file descriptor type coercion rule require negative number converted positive number via wraparound negative becomes positive cause vn_getf return file handle return null whenever positive file descriptor existed value check negative file descriptor return null instead caught clusterhq unit testing reference http question 50605 signed unsigned conversion always safe signed richard yao ryao gentoo.org signed andriy gapon avg freebsd.org signed brian behlendorf behlendorf1 llnl.gov close 450,,
4497,59199d90832a7e99ff73f8e75e33d74e12ddcf93,im Chase <tim@chase2k.com>, 2015-04-18 23:57:36 -0400,3313, support version property volume via api commit volume posse version property existing openzfs implementation zpool upgrade code however fetch version property child pool semantics function however demand used known valid property return garbage value volume patch cause version volume appear caller using api default zpl version implementation future volume gain property actual value used signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov fix 3313,,
4498,a438ff0e85c36c2e31873b3a46d85e5e3593fab9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-23 10:09:19 -0700,3331, extend pf_fstrans critical region additional testing shown region covered pf_fstrans need extended cover init_acl function zpl_mark_dirty function also recurse therefore must always protected signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org close 3331,,
4499,614e598c88446df9a6e2b59ba8ad0919628935b8,HE <git@dehacked.net>, 2015-04-18 07:07:53 -0400,3312, fix formatting error zfs commit accidentally introduced intentation error zfs receive zfs allow detailed documentation section signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3312,,
4500,de6d1976835959275fbdc00d74bb8fb86071f079,hris Dunlap <cdunlap@llnl.gov>, 2015-04-10 12:56:21 -0700,3310, fix spare.sh work disk vdevs zpool status output show full pathname file type vdevs basename component disk type vdevs commit bee6665 basename command dropped altering vdev name used searching zpool status output consequently hot disk sparing disk vdevs broke since zpool status output searched full pathname disk vdev parsing zpool status output manner rather brittle would preferable search vdev based guid happens commit add back basename command fix vdev name breakage signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3310,,
4501,7fad6290eb3aefc9cbb6a64e4cbe5371af53f726,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-14 10:25:50 -0700,3225, mark additional function pf_fstrans prevent deadlock disabling direct reclaim nfs xattr ctldir super function call related 40d06e3 signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 3225,,
4502,b467db454ea6507c4b9adf29c8083f860bfda2c1,urbo Fredriksson <turbo@bayour.com>, 2015-04-09 06:18:01 +0200,3268, document bookmark little better zfs add basic summary zfs describing bookmark signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3268,,
4503,9012354bf0be8f0a0d8162c651b8edb149a63224,HE <git@dehacked.net>, 2015-04-10 11:14:47 -0400,3273, rebuild init script source file update resulting script removed make clean rebuilt source file changed user long standing git tree may find init script date signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 3273,,
4504,5074bfe8ade40ddc64cba5526eb1333a73621e92,im Chase <tim@chase2k.com>, 2015-04-14 01:06:40 -0400,3283, allocate zfs_znode_cache linux slab linux slab general performs better spl slab case lot object allocated fragmentation likely present patch fix pathologically bad behavior case arc filled mostly metadata user program need allocate dirty enough memory would require insignificant amount arc reclaimed zfs_znode_cache spl slab system may spin long time trying reclaim sufficient memory linux slab behavior observed much predictible memory reclaimed efficiently signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 3283,,
4505,d07a16360c1ee219b8820f80d035e56a18c58b84,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-08 20:16:45 -0700, , tag zfs 0.6.4 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4506,cd69f020e4b0f9c416dd07a264e48c9488a7633f,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-08 14:02:36 -0700, , tag spl 0.6.4 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4507,f42d7f4111f754b0f77e5982278fc79d31408d8c,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-03 09:12:02 -0700,3251, use vmem_alloc packed nvlist allocated may exceed warning threshold large configuration use vmem interface short lived allocation signed brian behlendorf behlendorf1 llnl.gov close 3251,,
4508,2a5d574ecae612a3e3ec488841b40d262184a7a3,rian Behlendorf <behlendorf1@llnl.gov>, 2015-04-07 10:05:17 -0700, , clear pf_fstrans vfs_sync layered xfs following warning emitted centos7 entering vfs_fsync pf_fstrans already set issue stock linux file system warning removed newer kernel however avoid triggering error pf_fstrans cleared reset vn_fsync warning xfs xfs_aops.c 968 0x5ab 0x5c0 call trace 0x61 0x80 0x5ab 0x5c0 xfs __writepage 0x13 0x50 0x251 0x4d0 0x4d 0x80 0x43 0x50 xfs do_writepages 0x1e 0x40 0x65 0x80 0x2a 0x70 xfs_file_fsync 0x66 0x1f0 xfs vfs_fsync 0x2b 0x40 vn_fsync 0x2d 0x90 spl spa_config_sync 0x503 0x680 zfs 0x134 0x170 zfs 0x10a 0x170 zfs spa_import 0x5bf 0x7b0 zfs 0x104 0x150 zfs zfsdev_ioctl 0x4cf 0x5c0 zfs 0xf0 0xf0 zfs do_vfs_ioctl 0x2e5 0x4c0 sys_ioctl 0xa1 0xc0 0x16 0x1b signed brian behlendorf behlendorf1 llnl.gov,,
4509,40d06e3c78c23b199dfd9284809e710fab549391,im Chase <tim@chase2k.com>, 2015-03-30 22:43:29 -0500,3225, mark zpl ioctl function pf_fstrans prevent deadlock disabling direct reclaim zpl ioctl call well l2arc adapt arc thread obviates need mutex_fstrans previous definition eliminated signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3225,,
4510,ae26dd003911277e0c7134b3e4e3a41c300a2fd5,im Chase <tim@chase2k.com>, 2015-03-31 07:49:15 -0500,446, allow shrinking pf_fstrans context avoid deadlock entering shrinker pf_fstrans context patch also reverts commit d0d5dd7 added mutex_fstrans use deprecated within zfs ineffective mechanism eliminate deadlock among thing introduced need strict ordering mutex locking unlocking order pf_fstrans flag set incorrectly signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 446,,
4511,c0899611103c76bb975c7bab5063d937f76e61e6,hris Dunlop <chris@onthe.net.au>, 2015-04-02 23:17:26 +1100,444, add crgetzoneid stub illumos 3897 introduces dependency crgetzoneid stub time zone implemented reference http www.illumos.org issue 3897 http github.com illumos illumos gate commit fb7001f signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 444,,
4512,74aa2ba259e61512bd029c9e8f857f0611a80bbd,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-31 11:51:37 -0700, , update default zfs commit b738bc5 updated default value zfs man page correct default value 1024 1024 signed brian behlendorf behlendorf1 llnl.gov,,
4513,0f7d2a4b3d2d7fc0975a7ef53bd3c4700d47c51b,atthew Ahrens <mahrens@delphix.com>, 2015-03-27 17:11:50 +1100,3231, illumus 5693 ztest fails dbuf_verify buf due dedup bp_override 5693 ztest fails dbuf_verify buf due dedup bp_override reviewed george wilson george delphix.com reviewed christopher siden delphix.com reviewed bayard bell gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5693 http github.com illumos illumos gate commit 7f7ace3 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3231,,
4514,b738bc5a0f8ccd0281ed06831c34fbe31d2b2138,eorge Wilson <george.wilson@delphix.com>, 2015-03-27 15:31:52 +1100,3230, illumos 5694 doe prefetch enough 5694 doe prefetch enough reviewed matthew ahrens mahrens delphix.com reviewed alex reece alex delphix.com reviewed christopher siden delphix.com reviewed josef jeff sipek josef.sipek nexenta.com reviewed bayard bell gmail.com approved garrett amore garrett damore.org reference http www.illumos.org issue 5694 http github.com illumos illumos gate commit 34d7ce05 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3230,,
4515,ee2f17aa2af3d8620470c3bbbe6f9dac9449d546,hris Dunlop <chris@onthe.net.au>, 2015-03-27 15:04:12 +1100,3230, align code illumos align code illumos preparation applying illumos 5694 functional change use temporary variable replace multiple occurrence td_pfd increase stack use slightly normal function called recursively signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov issue 3230,,
4516,a4069eef2e403a3b2a307b23b7500e2adc6ecae5,rakash Surya <prakash.surya@delphix.com>, 2015-03-27 13:03:22 +1100,3229, illumos 5695 dmu_sync hole retain birth time 5695 dmu_sync hole retain birth time reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed christopher siden delphix.com reviewed bayard bell gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5695 http github.com illumos illumos gate commit 70163ac ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 3229,,
4517,9540be9b23fd6f8b5bf7d81853c251010d9b7205,ed Bass <bass6@llnl.gov>, 2015-03-26 12:10:26 -0700,3227, zpool import honor overlay property make zpool import command honor overlay property allow filesystems mounted non empty directory stand property checked zfs mount command move check zfs_mount libzpool property honored caller signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3227,,
4518,95a6990d9a77a56eb97b76f2880f95f0f42f4fe0,ed Bass <bass6@llnl.gov>, 2015-03-24 17:22:21 -0700,3220, add null guard event class owner field could null case add guard shorten __entry field name fit assignment statement column signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov fix 3220,,
4519,fade6b00b61e71f4332d274b9a5e0528764df5fb,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-27 14:23:27 -0700, , add rhel style kmod package provide redhat specific spl kmod.spec file old style kmods kmods2 packaging using provided kmodtool script package built support weak module allows kernel updated without rebuild spl kernel module package rhel centos toss use spec file built follows configure spec redhat make rpm signed brian behlendorf behlendorf1 llnl.gov,,
4520,ee2ca1db28a0910770b8bd504cf021199f583047,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-25 16:59:17 -0700, , add rhel style kmod package provide redhat specific zfs kmod.spec file old style kmods kmods2 packaging using provided kmodtool script package built support weak module allows kernel updated without rebuild zfs kernel module package rhel centos toss use spec file built follows configure spec redhat make rpm signed brian behlendorf behlendorf1 llnl.gov,,
4521,d820d2e9cf27678dd07b86f8fdd4635162371a37,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-27 14:30:23 -0700, , remove rpm fedora directory originally thought custom spec file might required fedora happily turn case since directory contains symlinks generic spec file removed signed brian behlendorf behlendorf1 llnl.gov,,
4522,72998c2c9db99a7589cfd4696bd11042e262297d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-27 14:22:38 -0700, , remove rpm fedora directory originally thought custom spec file might required fedora happily turn case since directory contains symlinks generic spec file removed signed brian behlendorf behlendorf1 llnl.gov,,
4523,7d90f569b3f05def7cbd0a52ce8ac3040364d702,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-20 15:10:24 -0700,3107, check vdev label zpool import using zpool import scan available pool prefer vdev name reference vdevs valid label two label start device two label end device label missing device damaged way incomplete preferring name fully intact label help weed bad path improves likelihood able import pool behavior applies scanning dev valid pool cache file exists pool described cache file used signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov close 3145 close 2844 close 3107,,
4524,58806b4cdc32e6f4e4a214cfba3b62a24efb34b7,ed Bass <bass6@llnl.gov>, 2015-03-24 17:00:08 -0700,3222, dbuf_free_range overzealously free dbufs called free spill block dnode dbuf_free_range bug result dbufs dnode getting freed variety problem may result bug common one zap lookup tripping assert zap buffer zeroed could happen dataset xattr set extended attribute written removed directory concurrently file directory signed ned bass bass6 llnl.gov signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov fix 3195 fix 3204 fix 3222,,
4525,ded576e28fe70a40e78a90e4668de8130d599380,im Chase <tim@chase2k.com>, 2015-03-23 12:10:19 -0500,3212, set maximum zvol transfer size correctly zol setting max_sectors uint_max linux 3.19 kernel artifically capped 1024 cap removed torvalds linux 34b48db patch change dmu_max_access sector also change assert allow maximum transfer size signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3212,,
4526,a4f54cf036d9a966ff87abe9a0063f2b457c2389,ajo MÃ¶ller <dasjoe@gmail.com>, 2015-03-12 23:41:24 +0100,438, fix warning argument automake 1.14.2 currently shipped ubuntu 14.04 automake warns one argument configure.ac warning two three argument form deprecated info see configure.ac http www.gnu.org software automake manual automake.html modernize invocation commit fix warning following link advice am_init get called package name version defined meta file parsing grep cut note autoconf 1.14 supporting m4_esyscmd_s m4_esyscmd used modified truncate newlines signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 438,,
4527,7b4536c710adea88f160c6f9ae140ae5279c8183,ordan Bobic <gordan@steel.shatteredsilicon.net>, 2015-03-23 16:17:56 +0000,3213, execute udevadm settle trying import pool execute udevadm settle trying import pool otherwise disk device node may ready import time analogous behavior init script systemd unit signed gordan bobic gordan signed pavel snajdr snajpa snajpa.net signed brian behlendorf behlendorf1 llnl.gov close 3213,,
4528,abb642b9a971e6c1a15816f9332da89eaebac9c1,im Chase <tim@chase2k.com>, 2015-03-22 21:43:21 -0500,440, set correctly 1024 kernel lock debugging enabled fs_struct structure exceeds typical 1024 byte limit enabled otherwise signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 440,,
4529,e89bd69775d5379f6835dade1e14005aa17f4903,saac Huang <he.huang@intel.com>, 2015-03-21 23:32:54 -0600,3199, module option zio_inject.c keep counter fault handler exported user space module option several export_symbols moved zio.c zio_inject.c symbol defined signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 3199,,
4530,d07b7c7f210e3f92775ad93a7306812edf524bfc,hris Dunlop <chris@onthe.net.au>, 2015-03-16 12:21:21 +1100,3178, reduce size zfs_sb_t allocate z_hold_mtx separately zfs_sb_t grown point using kmem_zalloc allocation triggering 32k warning threshold safely convert entire allocation use vmem_alloc instead kmem_alloc structure embedded depends bit_waitqueue function behave properly given virtual address instead use vmem_alloc allocate z_hold_mtx array separately signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 3178,,
4531,79a0056e137c9cc540eb9ff7327c85ac8d094e6c,im Chase <tim@onlight.com>, 2015-03-20 14:03:26 -0500,439, add map also add support name parameter mutex_init name allows better diagnostics namely proc lock_stats lock debugging enabled nested mutexes necessary support zol use class argument convey locking hierarchy signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 439,,
4532,bc88866657979c5658441e201e19df365c67ddfe,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-17 15:08:22 -0700,3160, fix arc_adjust_meta behavior goal function evict enough meta data buffer arc order enforce arc_meta_limit achieving slightly complicated appears common data buffer hold meta data buffer addition dnode meta data buffer held dnodes block preventing freed mean simply traverse arc expect always find enough unheld meta data buffer release therefore function updated make alternating pass arc releasing data buffer newly unheld meta data buffer ensures forward progress maintained arc_meta_used decrease normally sufficient required arc call registered prune callback causing dentry inodes dropped vfs cache make dnode meta data buffer available reclaim number total restarts limited prevent spinning rare case meta data pinned signed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net issue 3160,,
4533,2cbb06b561f500732de2214eb590149d0c4f3cf5,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-17 15:07:47 -0700,3160, restructure per filesystem reclaim originally arc prune callback introduced idea register single callback zpl arc could invoke call back needed zpl drop dentries inodes cache object might pinning buffer arc zpl would iterate zfs super block perform reclaim part design worked well due limitation 2.6.35 earlier kernel problem patch designed address issue provided kernel make impossible safely iterate zpl_fs_type filesystems single callback straight forward portable way resolve register callback per filesystem mount arc_ _prune_callback function always supported multiple callback functionally small change commit 050d22b removed non portable function replace equivalent functionality meant linux 3.1 older kernel arc mechanism drop dentries inodes cache needed patch add missing functionality calling release dentries may pinning inodes result unused cache entry dropped bit heavy handed interface available old kernel zpl_drop_inode callback registered kernel older 2.6.35 support .evict_inode callback ensures last reference inode dropped immediately removed cache done inode end global unused lru mechanism available zfs drop since arc buffer dropped hottest inodes still recreated without performing disk signed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net issue 3160,,
4534,596a8935a140d3238b46d9858de7a727524c2b51,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-17 15:04:27 -0700,3160, fix arc_meta_max accounting arc_meta_max value increased space consumed returned ensure arc_meta_max always date signed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net issue 3160,,
4535,5c3f61eb498e8124858b1369096bf64b86a938e7,ichard Yao <richard.yao@clusterhq.com>, 2015-03-11 14:24:46 -0400,1161, increase linux pipe buffer size zfs receive noticed reviewing documentation possible user space use fctnl f_setpipe_sz unsigned long size change kernel pipe buffer size linux increase pipe size value specified proc sys pipe max size user using mbuffer improve zfs recv performance piping network seems advantageous integrate functionality directly zfs recv tool avoids addition two buffer two copy one buffer mbuffer add another additional pipe efficient could made configurable could changed value back original done file descriptor see strong case either went simple implementation signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1161,,
4536,b1a3e93217e6e474e86345010469994c066cf875,urbo Fredriksson <turbo@bayour.com>, 2015-03-17 23:29:27 +0100,3194, move duplicate information zfs send option extra one zfs receive command relevant instead still zfs send option signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3194,,
4537,40749aa7a6318e5588d4be1c40165e8d0ef6c44f,hunwei Chen <tuxoko@gmail.com>, 2015-03-16 23:54:57 -0700,3160, use mutex_fstrans use mutex_fstrans prevent following deadlock scenario arc_release hash_lock direct reclaim hash_lock signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov signed signed tim chase tim chase2k.com issue 3160,,
4538,a1d3450e947c4399cfa9cd3b0840de55d63b3023,ajo MÃ¶ller <dasjoe@gmail.com>, 2015-03-12 19:09:19 +0100,3174, fix warning argument automake 1.14.2 currently shipped ubuntu 14.04 automake warns one argument configure.ac warning two three argument form deprecated info see configure.ac http www.gnu.org software automake manual automake.html modernize invocation commit fix warning following link advice am_init get called package name version defined meta file parsing grep cut note autoconf 1.14 supporting m4_esyscmd_s m4_esyscmd used modified truncate newlines signed hajo ller dasjoe gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3174,,
4539,e023409500ea1ccf8e6f69b03aa44dc96bf05920,ill McGonigle <bill-github.com-public1@bfccomputing.com>, 2015-03-13 09:44:42 -0700,3141, linux 4.0 compat __must_check explicitly disable unused variable warning setting __attribute__ unused required function defined __must_check attribute signed bill mcgonigle bill github.com public1 signed brian behlendorf behlendorf1 llnl.gov close 3141,,
4540,4c7b7eedcde7fababf457ca04445e6d9d1617e29,ustin T. Gibbs <justing@spectralogic.com>, 2015-03-12 11:10:35 +1100,3172, illumos 5630 stale bonus buffer recycled dnode_t lead data corruption 5630 stale bonus buffer recycled dnode_t lead data corruption author justin gibbs justing reviewed matthew ahrens mahrens delphix.com reviewed george wilson george delphix.com reviewed andrew freebsd.org approved robert mustacchi joyent.com reference http www.illumos.org issue 5630 http github.com illumos illumos gate commit cd485b4 ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 3172,,
4541,73ad4a9f3cfc2e830de45c2a8be2823d01ab07a6,osef 'Jeff' Sipek <josef.sipek@nexenta.com>, 2015-03-12 11:03:31 +1100,3172, illumos 5047 use atomic_ _nv discard return value 5047 use atomic_ _nv discard return value author josef jeff sipek josef.sipek nexenta.com reviewed garrett amore garrett damore.org reviewed jason king gmail.com reviewed matthew ahrens mahrens delphix.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5047 http github.com illumos illumos gate commit 640c167 porting note several hunk original patch specific zfs thus dropped ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 3172,,
4542,7f3e4662832269b687ff20dafc6a33f8e1d28912,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-09 13:57:22 -0700,3163, mark zfs_inactive pf_fstrans allowing direct reclaim enter vfs zfs_inactive call path historically problematic zol therefore order avoid entire class current future issue caused pf_fstrans set zfs_inactive caller signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3163,,
4543,6184b3a6a0c76c68bc980cd8a34acc22ee5fa1e4,ajo MÃ¶ller <dasjoe@users.noreply.github.com>, 2015-03-09 21:51:31 +0100,3162, actually source etc sysconfig zfs instead etc default zfs signed hajo ller dasjoe signed brian behlendorf behlendorf1 llnl.gov close 3162,,
4544,417104bdd3c7ce07ec58674dd078f9891c3bc780,ed Bass <bass6@llnl.gov>, 2015-02-26 12:24:11 -0800,3082, use cached feature info avoid issuing pool retrieving feature flag information trying read zap disk mean zpool clear would hang pool suspended recovery would require reboot keep feature stats resident memory hang cached nvlist spa built disk first time called refreshed thereafter using cached feature reference count get called pool import time sure cached nvlist available pool later suspended signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3082,,
4545,0e86d309ccc53e7d6093f8cf2bb09858f63267ac,hris Dunlap <cdunlap@llnl.gov>, 2015-03-05 13:11:05 -0800,3153, add zed zfs.redhat.in script commit update zfs.redhat.in script start stop zed signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 3153,,
4546,a7b9d0c3a0a8df42d557eb7ffa4e959c25debe69,rian Behlendorf <behlendorf1@llnl.gov>, 2015-03-04 11:09:17 -0800,3153, replace zfs.redhat.in zfs.lsb.in init script commit replaces zfs.redhat.in init script slightly modified version existing zfs.lsb.in init script done minimize functional difference platform lsb version script choosen heavily tested provides functionality change made rhel system configuration etc default zfs etc sysconfig zfs lsb function lib lsb init function etc rc.d init.d function logging log_begin_msg log_end_msg action feature lsb rhel use_disk_by_id use name verbose_mount verbose mount default overlay mount default generic extra option existing rhel feature removed automatically mounting zvols listed etc fstab signed brian behlendorf behlendorf1 llnl.gov issue 3153,,
4547,02bd676df1c260262d2e4c5618a42783fba52006,urbo Fredriksson <turbo@bayour.com>, 2015-03-02 22:28:57 +0100,3147, install arc_summary.py add arc_summary makefile build system script properly included distribution tarball installed signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 3147,,
4548,989fd514b1053d5443b4e6155af9c8d863f5f0f2,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-27 12:53:35 -0800,1445, change assert ... cmn_err ce_panic ... handful assert ... throughout code base case impossible patch convert use cmn_err ce_panic ... ensure always enabled additional debugging logged occur signed brian behlendorf behlendorf1 llnl.gov issue 1445,,
4549,8c45def24a5c640a3b44ce38cc3482b9c89a3b1d,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-27 16:09:52 -0800,3128, linux 4.0 compat capability argument passed removed file system longer pas purpose mean three different interface must handled wrapper function introduced provide single interface zpl code 2.6.32 2.6.33 exported 2.6.34 3.19 take argument 4.0 x.y take argument also taken opportunity remove have_bdi kernel older 2.6.32 longer supported kernel newer one interface signed brian behlendorf behlendorf1 llnl.gov signed chunwei chen tuxoko gmail.com close 3128,,
4550,4ec15b8dcf8038aeb15c7877c50d0fa500b468c6,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-26 15:29:33 -0800,2983, use mutex_fstrans mutex type region zfs code desirable able set pf_fstrans specific mutex held zfs code could updated set clear flag correct place undesirable reason would require change significant amount zfs code would complicate applying patch upstream would easy accidentally miss critical region initial patch future change introduce new one concern addressed using new mutex type responsible managing pf_fstrans support added spl commit zfsonlinux spl 9099312 merge branch kmem rework signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 3050 close 3055 close 3062 close 3132 close 3142 close 2983,,
4551,6ab08667a44458f775da9f0ecceddbcea1275746,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-26 16:12:55 -0800,435, reduce stack frame size slightly increasing size kmutex_t caused exceed stack frame warning size address tq_args moved heap cc1 warning treated error spl 0.6.3 module splat splat taskq.c 358 error frame size 1040 byte larger 1024 byte signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 435,,
4552,d0d5dd714424365a4da0d887cb641cb2f0ae8844,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-25 10:29:02 -0800,435, add mutex_fstrans mutex type region zfs code desirable able set pf_fstrans specific mutex held zfs code could updated set clear flag correct place undesirable reason would require change significant amount zfs code would complicate applying patch upstream would easy accidentally miss critical region initial patch future change introduce new one concern addressed adding new mutex type responsible managing pf_fstrans support added spl commit 9099312 merge branch kmem rework signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 435,,
4553,5f920fbee1fd1838bad2d5a262041a3a171b6834,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-25 10:23:49 -0800,435, retire mutex_owner check minimize size kmutex_t mutex_owner check added allowed kmutex_t wrapper leverage mutex owner already stored mutex certain kernel configuration upside reduced size kmutex_t wrapper structure size task_struct pointer byte downside two mutex implementation needed maintained depending exact kernel configuration correct one would selected year solution worked could fragile since depending heavily assumed kernel mutex implementation detail example configure check needed added kernel changed owner stored also made code complicated needed therefore name simplicity portability optimization retired slightly increase memory requirement kmutex_t slightly signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 435,,
4554,a900e28e71d51687e64761e981b953bd1d80f85c,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-25 09:20:38 -0800,435, fix cstyle issue mutex.h patch address issue identified style checker mutex.h contains functional change signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com issue 435,,
4555,d14cfd83dae0b1a261667acd416dba17a98d15fa,saac Huang <he.huang@intel.com>, 2015-02-26 22:46:45 -0700,2034, fix deadlock zpool export zfs list pool reference count checked pool imported readonly i.e spa spa_sync_on false zpool export zfs list may deadlock pool imported readonly zpool export zfs list run concurrently zfs command get reference spa hold dbuf meta dnode zpool command grab try evict dbufs meta dnode dbuf held zfs command evicted reference count zpool command block waiting meta dnode reference count drop held zfs command try get reference spa held hold dbuf meta dnode zpool command zfs command deadlock also zfs zpool command block forever fix always check pool reference count matter whether pool imported readonly signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 2034,,
4556,87a63dd702370c00322e8d1d84102075c775324b,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-27 14:35:56 -0800,2878, prevent zpool destroy export suspended cleanly destroying exporting pool requires pool suspended therefore set flag ioctls utility output descriptive error message rather block signed brian behlendorf behlendorf1 llnl.gov issue 2878,,
4557,fdc5d98253c60e45be7efe62ed428d4c2344e394,im Chase <tim@chase2k.com>, 2015-02-24 12:53:31 -0600,3130, avoid dladdr ztest linux least dladdr reliably work function dso add function name ztest_info signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3130,,
4558,c1bc8e610be8bf1cc8170f788a89a9ee257eb51f,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-18 15:24:15 -0800,2985, retire spl_module_init spl_module_fini original implementation spl wrapper provided module initialization cleanup done abstract away compatibility code might needed spl turned significant compatibility issue default pwd module load differed illumos linux since minor thing wrapper complicate code retired signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 2985,,
4559,8bdcfb53966313e9ff747e3028390c207cfdbe9a,hrister Ekholm <che@chrekh.se>, 2015-02-19 22:44:53 +0100,3122, fix possible future overflow zfs_nicenum function zfs_nicenum convert number human readable output index string letter patch limit index length string signed christer ekholm che chrekh.se signed brian behlendorf behlendorf1 llnl.gov close 3122,,
4560,b4f3666a16a61aa2ac7dca0b199e7ce51edbcd60,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-18 15:39:05 -0800,2985, retire spl_module_init spl_module_fini original implementation spl wrapper provided module initialization cleanup done abstract away compatibility code might needed spl turned significant compatibility issue default pwd module load differed illumos linux since minor thing wrapper complicate code retired signed brian behlendorf behlendorf1 llnl.gov close 2985,,
4561,1efdc45ea805e61de2c54736cd1b2a4a5f48a913,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-20 10:28:25 -0800,3124, fix o_append open flag described flag section open o_append file opened append mode write file offset positioned end file lseek o_append may lead corrupted file nfs filesys tems one process appends data file nfs doe support appending file client kernel simulate done without race condition issue originally overlooked normally generic vfs code handle filesystem however zfs explictly register zpl_write function responsible seek signed brian behlendorf behlendorf1 llnl.gov close 3124,,
4562,1d966336f5095c7e0345360c3862577642670d2d,teffen MÃ¼thing <steffen.muething@iwr.uni-heidelberg.de>, 2015-02-16 04:13:26 +0100,3110, fix error dracut script using zfs root booting zfs parse zfs.sh fails unset variable signed steffen thing iwr.uni heidelberg.de signed brian behlendorf behlendorf1 llnl.gov issue 3110,,
4563,1543b20a87979782d67f7ccfc845e8a918efc3b3,teffen MÃ¼thing <steffen.muething@iwr.uni-heidelberg.de>, 2015-02-16 04:08:04 +0100,3110, add required file initramfs dracut module installs udev rule vdev_id utility creating dev disk vdev name omits additional utility config file required vdev_id signed steffen thing iwr.uni heidelberg.de signed brian behlendorf behlendorf1 llnl.gov issue 3110,,
4564,1611bb7b4fb06cfe43730222e40ef6a109138f12,an Swartzendruber <dswartz@druber.com>, 2014-10-09 16:45:46 -0400,2820, set default value loading zfs kernel module populate spa namespace using cache file behavior consistent linux kernel module need move away removing make whole startup process predictable four basic step driven init system modprobe zpool import zfs mount zfs share change also help lay groundwork eventually removing kobj_ compatibility code kernel side may need preserved userspace libzfs_init depends conditional must wrapped ifdef _kernel signed dan swartzendruber dswartz druber.com signed brian behlendorf behlendorf1 llnl.gov close 2820,,
4565,7d2868d5fc88a4c30769b44f56a3a88a4277a9ab,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-12 15:05:21 -0800,2720, skip bad dvas free setting zfs_recover bad dva encountered system treat fatal indicates somehow damaged dva written disk impossible however seen handful report year pool somehow damaged way since damage render otherwise intact pool unimportable consequence skipping bad dva leaked free space make sense provide mechanism ignore bad dva setting zfs_recover module option cause dva ignored may allow pool imported since zfs_recover default pool attempting free bad dva treat fatal error preserving current behavior signed brian behlendorf behlendorf1 llnl.gov close 3099 issue 3090 issue 2720,,
4566,cbedd7b03443f5cf7db142908251251c765ce3a5,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-10 21:12:27 +0100,3093, write directly initdir simplify install removing need temp file signed soeren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov issue 3093,,
4567,cfbaa3c830e34b1c8920a48fd5e7196287f674eb,Ã¶ren Tempel <soeren+git@soeren-tempel.net>, 2015-02-10 20:12:13 +0100,3093, use test proper way use correct operator check expected data type signed soeren tempel soeren git soeren tempel.net signed brian behlendorf behlendorf1 llnl.gov issue 3093,,
4568,e02b533e746403743297020591e4b80d614a3aae,im Chase <tim@chase2k.com>, 2013-10-22 16:51:17 -0500,1106, enhancement zpool dry run mode dry run mode zpool display proposed pool configuration zpool add commit add support displaying cache device signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 1106,,
4569,340dfbe193193be6a3d301d8111de232cd537ddd,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-30 11:11:00 -0700,2027, change verify assert mutex_destroy multiple report zdb tripping verify mutex_destroy return ebusy exactly happen still need explained strictly need fatal non debug build therefore patch convert verify assert root cause determined resolved signed brian behlendorf behlendorf1 llnl.gov issue 2027,,
4570,5f15fa22167ff665d0db0159551eb90759683984,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2013-10-08 10:28:40 +0200,2930, fix readdir .zfs snapshot directory store index next snapshot entry offp argument dir_emit result one error therefore temporary variable used regression introduced commit zfsonlinux zfs 0f37d0c signed andrey vesnovaty gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2930,,
4571,3941503c0a26467fc4da63d4ee190c96edd8d0fd,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-30 11:25:19 -0800,3063, retire zio_cons zio_dest zio_cons constructor zio_dest destructor exist upstream illumos code introduced workaround avoid issue 2523. since issue resolved code reverted bring zol back sync illumos signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 3063,,
4572,6442f3cfe3454b458456823fff49a14bf0badf65,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-06 13:37:02 -0800,3063, retire zio_bulk_flags long ago zio_bulk_flags module parameter introduced facilitate debugging profiling zio_buf_caches today code work well compelling reason keep functionality fact preferable revert code consistent zfs implementation signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 3063,,
4573,534759fad30ca55608bcd42a0af5a87c8c4feb36,Ã¶rg Thalheim <joerg@higgsboson.tk>, 2015-02-07 13:41:01 +0100,3084, linux 3.19 compat file_inode added struct access f_dentry d_inode replaced accessor function file_inode signed joerg thalheim joerg higgsboson.tk signed brian behlendorf behlendorf1 llnl.gov close 3084,,
4574,77aef6f60ea29f6d3769addc778db6328ac85755,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-05 12:43:37 -0800,3081, use vmem_alloc nvlists several nvlist function may perform allocation larger 32k warning threshold convert use vmem_alloc best allocator used commit efcd79a retired km_nodebug used suppress large allocation warning concurrently large allocation warning threshold increased 32k goal identify remaining location one allocation larger 32k patch expected fine tuning resulting kmem rework change see commit 6e9710f signed brian behlendorf behlendorf1 llnl.gov close 3057 close 3079 close 3081,,
4575,afe373260ebf96ca5482b9ccbcef5915c47d18f7,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-09 16:53:42 -0800, , revert read space map import readonly pool reverts commit accidentally introduced ztest failure ztest usr sbin zdb bcc var tmp zpool.cache ztest exit code child exited code signed brian behlendorf behlendorf1 llnl.gov,,
4576,e890dd85a7522730ad46daf68150aafd3952d0c1,im Chase <tim@chase2k.com>, 2014-11-16 22:27:58 -0600,2907, produce full snapshot list zfs send order accelerate zfs receive operation face many property containing snapshot commit 0574855 changed header nvlist send stream exclude snapshot part stream however would cause zfs receive erroneously remove snapshot would remove snapshot listed header nvlist patch restores full list snapshot snap still suppresses property non sent snapshot also remove consistency check error raised listed snapshot doe property snapprops 0574855 commit also introduced bug zfs send complete stream zfs send pool snap would exclude snapshot property snapprops patch detects last snapshot series snapshot specified includes property signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2907,,
4577,7fc8c33ede10f7104ca0e91d690d3ebb5236887b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-18 17:29:04 -0500,2831, read space map import readonly pool normally importing pool space map top level vdevs read disk space map required latter allocation performed free block need located however pool imported readonly guaranteed allocation occur case space map need loaded similar argument made dtls dirty time log pool import fail space map read ability safely ignore make likely damaged pool imported readonly recover content signed brian behlendorf behlendorf1 llnl.gov issue 2831,,
4578,bf5efb5c66ac30442bded92c3299db36fe21d92f,ukas Wunner <lukas@wunner.de>, 2015-02-07 11:34:22 +0100,3083, fix dracut script allow blank pool dataset name ability use blank documented zpool implemented module zcommon zfs_namecheck.c valid_char signed lukas wunner lukas wunner.de signed brian behlendorf behlendorf1 llnl.gov close 3083,,
4579,293d141ae4f6b2345249020b656cfc0ce007b9fa,ukas Wunner <lukas@wunner.de>, 2015-02-04 10:45:19 +0100,3083, fix loop dracut shutdown script shell executes command pipeline subshell thus ret always value loop loop http bashfaq 024 signaling success even zpools could exported signed lukas wunner lukas wunner.de signed brian behlendorf behlendorf1 llnl.gov close 3083,,
4580,33b4de513ee81c2a87e1b954a9544a5eec1f8f94,ustin T. Gibbs <justing@spectralogic.com>, 2014-11-22 19:14:24 -0800,2970, illumos 5311 traverse_dnode may report success 5311 traverse_dnode may report success reviewed matthew ahrens mahrens delphix.com reviewed andriy gapon avg freebsd.org reviewed andrew willa approved dan mcdonald danmcd omniti.com reference http github.com illumos illumos gate commit 2a89c2c http www.illumos.org issue 5311 ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 2970,,
4581,a62d1b02e372e63862cee276185f2763f641ff10,ed Bass <bass6@llnl.gov>, 2015-02-04 13:57:50 -0800,3070, fix header size accounting function sa_find_sizes sa_build_layout fail account additional byte header space calculating whether variable size attribute might spill may consequently determine attribute fit bonus buffer along spill block pointer reality attribute would partially overwritten spill block pointer spill occurs also cause inconsistency header size number variable size attribute layout tripping assertion debugging following reproducer demonstrates problem perl print file setfattr trusted.foo perl print 200 file even though sa_find_sizes computes index attribute spill occur discard result recomputes turn function get wrong since computation awkward history shown easy screw let one place patch fix bug sa_find_sizes update sa_build_layout use result computed also improve comment sa_find_sizes signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 3070,,
4582,e2c4acde55931ae58d5bf5fd394567a96e942a5c,rian Behlendorf <behlendorf1@llnl.gov>, 2015-02-05 17:00:05 -0800,2495, skip evicting dbufs walking dbuf hash dbuf db_evicting state may longer dn_dbufs list case unsafe call db_dnode_enter therefore dbuf found safe must skipped signed brian behlendorf behlendorf1 llnl.gov close 2553 close 2495,,
4583,aa506dcb3d2ec4a26d0e20854fa0bf370738a422,hunwei Chen <tuxoko@gmail.com>, 2015-02-06 15:22:10 +0800,3080, fix build error make deb 53698a4 following error occurs make deb ccld zed lib libzfs .libs libzfs.so undefined reference add libzpool.la zed makefile.am fix signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3080,,
4584,53698a453d1cc318f99477fef596c476b4b0cb47,hunwei Chen <tuxoko@gmail.com>, 2015-01-23 16:05:04 +0800,3034, read spl_hostid module parameter gethostid spl_hostid set via module parameter likely different gethostid therefore userspace tool read first falling back gethostid signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 3034,,
4585,086476f92005506cb07e75f889e8ddb69026e842,hunwei Chen <tuxoko@gmail.com>, 2015-01-23 15:01:03 +0800,427, fix spl_hostid module parameter currently spl_hostid module parameter anything always overwritten calling hostid_read instead call hostid_read spl_hostid zero comment describes signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 427,,
4586,aa2ef419e46b3ad7c2ad8848b7a308a5a949aba7,im Chase <tim@chase2k.com>, 2015-02-02 23:55:20 -0600,3072, spurious enomem return reading dbufs kstat commit fixed improper snprintf however return value snprintf propagated caller caused spurious enomem error reading dbufs kstat commit cause actual number character written returned signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3072,,
4587,037763e44e0f6d7284e9328db988a89fdc975a4e,vg <avg@FreeBSD.org>, 2014-11-06 11:08:02 +0000,3029, fix l2arc compression buffer leak commit log freebsd observed arc_release called concurrently l2arc flight write also observed arc_hdr_destroy called arc_write_done zio flag similar circumstance previously l2arc header would freed leaking associated compression buffer buffer placed list delayed freeing similar already done arc buffer supposed freed concurrently flight writes buffer addition fixing discovered leak change also add protective code assert compression buffer associated l2arc header never leaked new kstat added keep count delayed compression buffer free previously would leak tested vitalij satanivskij satan ukr.net requested many mfc week sponsored hybridcluster clusterhq reference http illumos.org issue 5222 http github.com freebsd freebsd commit b98f85d http 155757 focus 155781 http lists.open zfs.org pipermail developer 2014 january 000455.html http lists.open zfs.org pipermail developer 2014 february 000523.html ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 3029,,
4588,19ea3d25df99995d2e62592cd6bc74f883f0e8e0,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-29 15:09:51 -0800,3059, use zio buffer zil_itx_create zil_itx_create function vmem_alloc allocator buffer logging write buffer may large 64k non optimal may need allocate many buffer interface potential slow instead use specifically designed able efficiently allocate wide range buffer size addition cleanup use zil_itx_destroy function always free itx structure way always sure right allocation function used notice current code kmem_free vmem_free used happened work wrapper map internal spl function identified potential problem low end memory constrained system began logging following warning deadlock repeated allocation failure resulting increased latency possible memory allocation deadlock size 65792 lflags 0x42d0 pid 20118 comm kvm tainted 3.2.0 0.bpo.4 amd64 call trace 0x115 0x127 spl 0x9 0x36 spl zil_itx_create 0x2d 0x59 zfs zfs_log_write 0x13a 0x2f0 zfs zfs_write 0x85b 0x9bb zfs zpl_aio_write 0xca 0x110 zfs 0xa3 0xde do_readv_writev 0xaf 0x125 sys_pwritev 0x55 0x9a 0x16 0x1b signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 3059,,
4589,c7db36a3c4ac768a74bd86778cc3535bdcb8d526,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-29 16:08:25 -0800,428, optimize vmem_alloc retry path performance reason reworked kmem code map vmem_alloc kmalloc_node allocation allows concurrency system contention virtual address space generally good thing however case kmalloc_node fails make little sense retry using kmalloc_node likely fail exactly way smarter strategy abandon optimization retry using spl_vmalloc likely succeed signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 428,,
4590,2c41df5bf8327f3bc6ee25cf2aa570bb159cb348,hris Dunlap <cdunlap@llnl.gov>, 2015-01-14 16:31:21 -0800,3042, cleanup updated common routine adding zedlet environment variable additional snprintf added processing nvpair commit change directly call nvpair non array type thereby removing superfluous call snprintf consistency helper function converting nvpair array type similarly adjusted add variable function moved file since forward declaration used change made function signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3042,,
4591,854f30a91fc6a2accc6bf49cb7fcc52b498fda2a,hris Dunlap <cdunlap@llnl.gov>, 2014-10-19 12:05:07 -0700,3042, protect adding duplicate string zed zed_strings container store string avl doe check duplicate string added within avl string indexed string value avl_add requires node added must already exist tree assert case cause problem practice zed container two place zed_conf.c used store name enabled zedlets zed scan zedlet directory listing duplicate entry occur since duplicate name occur within directory zed_event.c used store environment variable name value string passed zedlets duplicate string never happen unless bug resulting duplicate nvpair environment variable commit protects adding duplicate zed_strings container first checking string added removing previous entry one exist implement last one win policy commit also change prototype zed_strings_add allow string key indexed avl differ string value adding zedlet environment variable using variable name key multiple add variable name result last value stored finally commit route addition zedlet environment variable updated ensures zedlet environment variable name properly converted signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 3042,,
4592,0365064a9726f6bb6e148611a6e42fa80302d083,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-08 10:48:18 -0800,1343, handle closing unopened zvol thank commit correctly returning erofs opening zvol read pool unfortunately look like cause trigger unexpected behavior __blkdev_get failure case possible __blkdev_get call __blkdev_put bdev never successfully opened result trying close device hitting null dereference signed brian behlendorf behlendorf1 llnl.gov close 1343,,
4593,a127e841dee20340b300e98b6d4b62f9ad41a47b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-19 16:28:48 -0800,1343, add zvol_open error handling readonly property rather assert reason readonly property zvol read cleanly handle failure signed brian behlendorf behlendorf1 llnl.gov close 1343,,
4594,f9f431cd28ed6a78a2659758ce4a83c4c76fc3a1,ichard Yao <ryao@gentoo.org>, 2014-07-18 18:32:13 -0400,3054, use void memcpy void memcpy caught clang clearly intent code explicitly ignore return value signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 3054,,
4595,6466b61db6b4def6b077882ebbd4c3e83e917613,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-30 13:17:33 -0700,2080, make zpool import behave consistently importing pool zpool import inconsistent behavior dev disk another path etc zfs zpool.cache difference behavior caused returning empty nvlist_t pool import return null situation behavior arguably correct allows returning null used error case empty set change resolve issue updating get_configs return empty set instead null config found updated behavior always return case zpool import echo pool available import  zpool import var tmp echo pool available import  zpool import etc zfs zpool.cache echo pool available import  signed brian behlendorf behlendorf1 llnl.gov close 2080,,
4596,a485efc4cd7589ec7993aee4b0746a05f42409d5,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-28 11:06:14 -0800,2920, merge branch add port arc_summary.py zfs linux arc_summary.py standard tool freebsd illumos version script used port originally came freenas signed brian behlendorf behlendorf1 llnl.gov signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov close 2920,,
4597,a6445855492faf94b393e8b6cf7d00f6c8c895f0,yle Blatter <kyleblatter@llnl.gov>, 2015-01-12 13:31:24 -0800, , replace sysctl summary tunables summary original script displayed tunable parameter using sysctl call patch modifies displaying tunable parameter found sys module zfs parameter modinfo call used capture description signed brian behlendorf behlendorf1 llnl.gov signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4598,65dc685a1db00d741bf75d9df98c8e0e25bf2a71,yle Blatter <kyleblatter@llnl.gov>, 2015-01-13 10:28:55 -0800, , force line column ensure script conforms project style guideline limiting line length column signed brian behlendorf behlendorf1 llnl.gov signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4599,6427f39fe08a14e30525b060d606c59d257af94a,yle Blatter <kyleblatter@llnl.gov>, 2014-12-04 11:31:54 -0800, , add help option usage information add basic help option usage description consistent arcstat.py dbufstat.py also add support long opts signed brian behlendorf behlendorf1 llnl.gov signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4600,3bfc7f1b2052a794ffceb6a33f5b21f613a479dc,yle Blatter <kyleblatter@llnl.gov>, 2014-11-05 10:08:45 -0800, , refactor arc_summary simplify processing option used specify specific page output displayed omitted output page would displayed arc_summary stood really kludgy processing code processing option relied try except block treated statement normal operation would fail time user specify option command line exception thrown script would display output page happened whether option omitted malformed thus principle use case exception would raised order run script desired except code would called regardless exception however malformed argument would also cause script execute additionally required function handle case output page displayed _call_all potentially called several location within main commit refactors option processing code simplify make easier catch runtime error script done specializing try except block exception argument malformed option correctly selected user call function unsub array directly display one page output finally context refactoring page break removed page seem added output freenas version script patch remove page output closely resemble freebsd version script signed brian behlendorf behlendorf1 llnl.gov signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4601,53dc1139e7de76045b73ff9c72d75b81653b7012,burroughs <chris.burroughs@gmail.com>, 2014-02-11 10:14:55 -0500, , modified arc_summary.py run linux comment stat section whose kstats currently available port arc_summary use spl kstats enable l2arc stats include compressed l2size minor style fix cleanup signed brian behlendorf behlendorf1 llnl.gov signed cburroughs chris.burroughs gmail.com signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4602,edd5b80d07544961f8bd184b2d5cc726ea71f5d0,burroughs <chris.burroughs@gmail.com>, 2014-02-11 09:15:50 -0500, , add arc_summary.py freenas arc_summary script useful utility administrator zfs platform provides quick easy way get high level view current arc state historically perl script rewritten python freenas decided adopt python version instead perl version reason zol existing perl dependency doe python dependency script arcstat.py dbufstat.py using python arc_summary.py help minimize dependency major linux distribution already depend heavily python core infrastructure mean likely available even early boot process original source http github.com freenas freenas blob master gui tool arc_summary.py signed brian behlendorf behlendorf1 llnl.gov signed cburroughs chris.burroughs gmail.com signed kyle blatter kyleblatter llnl.gov signed ned bass bass6 llnl.gov,,
4603,b0cf0676c0beb5dcb149774a3264580a18304ac1,im Chase <tim@chase2k.com>, 2014-10-18 22:50:01 -0500,3028, fix removal sa_modify_attrs sa_modify_attrs function add remove replace main loop function index iterate existing index writing new buffer via write index incremented remove sa_remove operation lead corruption new buffer patch remove increment sa_remove operation signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed ned bass bass6 llnl.gov close 3028,,
4604,841c9d43c725334a0a4b6174b6e1adea24f16cdd,ichard Yao <ryao@gentoo.org>, 2014-10-11 11:01:37 -0400,2781, use kmem_vasprintf log_internal attempt debug zfsonlinux zfs 2781 revealed code could simplified using kmem_asprintf clear switching kmem_asprintf address zfsonlinux zfs 2781. however switching kmem_asprintf cleanup simplifies debugging would become clear bug glibc issue persist also brings function almost back sync illumos possible due recently reworked kmem code allows use km_sleep fashion illumos signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2791 issue 2781,,
4605,54cccfc2e30fa84463c056e8ad04b2be9448999e,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-21 09:21:51 -0800,426, fix gfp_kernel allocation flag kmem_vasprintf kmem_vsprintf kobj_open_file vn_openat function use function generate gfp_ flag ensures safely called context correct flag used signed brian behlendorf behlendorf1 llnl.gov close 426,,
4606,3c832b8cc13bb4e570b317c30b146bb072e08f58,im Chase <tim@chase2k.com>, 2014-12-18 10:08:47 -0600,2975, linux 3.12 compat split shrinker s_shrink split count scan shrinker callback introduced 3.12 broke test have_shrink effectively disabling per superblock shrinkers patch enables per superblock shrinkers split shrinker callback detected signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2975,,
4607,6e9710f7c33a7440904b39fb4e6b68b3325cfeca,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-16 14:42:46 -0800,2918, merge branch kmem rework core motivation behind change minimize memory management difference zfs linux platform simplifies process porting change linux platform good code quality expected reduce number defect accidentally introduced due porting following key linux specific change reverted km_pushpage changed back km_sleep context unsafe perform marked pf_fstrans context specific mechanism used exclusively km_pushpage mechanism retired km_nodebug flag retired allocation larger 32k use vmem_alloc vmem_free depending size allocation either kmalloc vmalloc used internally warning printed pre allocated vdev buffer dedicated spill block cache retired safe reliable allocate buffer needed size without fear deadlocking reduces memory footprint pave way larger block size depends zfsonlinux spl 414 signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org signed tim chase tim chase2k.com close 2918,,
4608,81971b137ada2097ed73a4364cb896a99d71f578,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-16 11:44:24 -0800, , revert spill block cache spill_cache originally introduced avoid need perform large kmem vmem allocation instead small dedicated cache preallocated buffer kept solution viable maximum block size limited 128k planned increase maximum block size 16m caller need migrate zio_buf_alloc however aware interface expected change zio buffer fully backed scatter gather list alternately caller know buffer never large infrequently accessed may kmem_alloc vmem_alloc needed temporary space change additional benegit bringing code back inline upstream illumos source signed brian behlendorf behlendorf1 llnl.gov,,
4609,285b29d959d3792e45d75c2ce228552d396b445f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-12 16:40:21 -0800, , revert pre allocate vdev buffer commit 86dd0fd added preallocated buffer longer required recent kmem change designed make memory allocation interface behave like found illumos deadlock situation longer possible however allocation still potential expensive potential future optimization might perform km_nosleep either succeed fail quicky either case acceptable safely abort aggregation signed brian behlendorf behlendorf1 llnl.gov,,
4610,60e1eda929b04445a0ab0451674f83b86c6ec347,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-08 19:03:50 -0500, , add kmem_cache.h include default context part spl kmem vmem refactoring kmem_cache_ function split kmem_cache.h header done part kmem_ consumer would forced include kmem_cache_ function mask several linux slab slab function much explicitly include kmem_cache.h zfs_context.h however consumer lustre need access km_flags kmem_cache_ function safely include kmem.h signed brian behlendorf behlendorf1 llnl.gov,,
4611,79c76d5b65b19a602d4c7a340da7bf90d4a0c4f8,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-20 19:09:39 -0500, , change km_pushpage km_sleep marking dmu transaction processing context pf_fstrans revert km_pushpage km_sleep change brings back line upstream case mean simply swapping flag back others fnvlist_alloc replaced nvlist_alloc ... km_pushpage must reverted back fnvlist_alloc assumes km_sleep one place km_pushpage kept allocating arc buffer allows dip reserved memory upstream signed brian behlendorf behlendorf1 llnl.gov,,
4612,efcd79a883caddea4a20bfc771da31ecc6ce4ca2,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-03 14:56:32 -0500, , retire km_nodebug caller kmem_alloc passed km_nodebug flag suppress large allocation warning replaced vmem_alloc appropriate updated vmem_alloc call print warning regardless size allocation careful reader notice caller changed vmem_alloc km_nodebug flag removed possible default warning threshold increased 32k desirable minimizes need linux specific code change signed brian behlendorf behlendorf1 llnl.gov,,
4613,71f8548ea443718a5afb1598f1f3a27a369ccd8b,ichard Yao <ryao@gentoo.org>, 2014-11-03 09:42:44 -0500, , use is_vmalloc_addr vdev_disk.c initial port zfs linux required way identify virtual memory make virtual memory backed slab work kmem_virt created linux 2.6.25 introduced is_vmalloc_addr logically equivalent kmem_virt support kernel 2.6.26 later dropped recently support kernel linux 2.6.32 dropped retire kmem_virt favor is_vmalloc_addr cleanup code signed brian behlendorf behlendorf1 llnl.gov,,
4614,92119cc259ee2f9ebde14145f549d6313f557759,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-13 14:35:19 -0400, , mark pipeline pf_fstrans order avoid deadlocking pipeline critical pageout avoided direct memory reclaim ensures pipeline thread always make forward progress never end blocking dmu transaction reason linux provides pf_fstrans flag may set process context signed brian behlendorf behlendorf1 llnl.gov,,
4615,9099312977e994f8638eb1d93fd92a5cd66b8ea6,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-16 13:59:18 -0800,414, merge branch kmem rework core motivation behind change minimize memory management difference zfs linux platform simplifies process porting change linux platform good code quality expected reduce number defect accidentally introduced due porting key reason possible due addition linux feature thread specific pf_fstrans bit introduced xfs patch stack also performs refactoring cleanup designed make code maintainable understandable finally context making testing change several bug identified resolved resulting robust implementation signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org signed tim chase tim chase2k.com close 414,,
4616,ee33517452020c3cd630c432038c735ea41bd1c9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-15 15:11:45 -0800, , use emergency object function must used place kmalloc ensure __gfp_comp strictly honored due kmalloc layered generic linux slab cache recently cache created using __gfp_comp mean possible kmalloc passed __gfp_comp flag returned non compound allocation signed brian behlendorf behlendorf1 llnl.gov,,
4617,436ad60faa971dc62f30ebd5c79fa55722234147,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-09 14:00:34 -0800, , fix kmem cache deadlock logic kmem cache implementation always add new slab dispatching task spl_kmem_cache taskq perform allocation done large slab must allocated using vmalloc possible allocation block gfp_noio flag honored result deadlock therefore deadlock detection strategy implemented deal case determined timeout spl_kmem_cache thread deadlocked attempting add new slab caller attempting allocate cache fall back using kmalloc doe honor passed flag logic correct optimization code allowed deadlock slab backed vmalloc deadlock way described optimization made invoke deadlock detection code vmalloc backed cache advantage making easy distinguish object freed strictly safe spl_kmem_cache thread end deadlocked grow cache either result deadlock memory need allocated one cache ensure forward progress fix remove optimization limit fall back allocation stratagy vmalloc backed cache mean may need take cache lock call path small cost mitigated ignoring object virtual address good measure default number spl_kmem_cache thread increased made tunable alone resolve original issue since still possible thread deadlocked however doe help responsiveness ensuring single deadlocked spl_kmem_cache thread block allocation cache timeout reached signed brian behlendorf behlendorf1 llnl.gov,,
4618,3018bffa9b8bfd8d24010407c8a07c25b44c010e,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-15 14:06:18 -0800, , refine slab cache sizing change designed improve memory utilization slab carefully setting size way code currently work problematic slab contain large object 1mb due slab unconditionally rounded power two may result unused space end slab reason existing code round every slab assumes backed buddy allocator since buddy allocator performs power two allocation desirable avoids wasting space however logic break slab backed vmalloc operates page level granularity case optimal thing calculate minimum required slab size given certain constraint object size alignment object slab etc therefore patch reworks spl_slab_size function size kmc_kmem slab differently kmc_vmem slab kmc_kmem slab rounded nearest power two kmc_vmem slab allowed minimum required size change also reduces default number object per slab reduces much memory single cache object pin result significant memory saving highly fragmented cache depending workload may result slab allocated freed frequently practice shown better default workload also maximum slab size reduced 4mb bit system due limited virtual address space critical frugal possible limit still let reasonably comfortably allocate limited number 1mb object finally kmem slab_small kmem slab_large splat test extended provide better test coverage various object size alignment cache created random parameter basic functionality verified allocating several slab worth object signed brian behlendorf behlendorf1 llnl.gov,,
4619,e50e6cc958a85e010d996ca80cf20d48c51103d3,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-15 16:02:48 -0800, , reduce kmem cache deadlock threshold reduce threshold detecting kmem cache deadlock 10x 10. reduced value still several order magnitude large enough avoid triggered incorrectly reducing allow system resolve issue quickly signed brian behlendorf behlendorf1 llnl.gov,,
4620,b1c3ae48a7d1ec40d86218e60c928f093a898238,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-05 18:31:24 -0500, , update spl module parameter man page spl module parameter kept date refresh man page list possible module option describes justify default value set way signed brian behlendorf behlendorf1 llnl.gov,,
4621,1a20496834f4f270a45c68fd67ade7643442652f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-05 17:11:18 -0500, , make slab reclaim aggressive many people noticed kmem cache implementation slow release memory patch make reclaim behavior aggressive immediately freeing slab empty unused object cached magazine still prevent slab freed signed brian behlendorf behlendorf1 llnl.gov,,
4622,a988a35a93671c086c38ce5b71b6badb59a9c2de,ichard Yao <ryao@gentoo.org>, 2014-12-04 18:47:51 -0500, , enforce architecture specific barrier around clear_bit comment linux 3.16 kernel clear_bit state  clear_bit clear bit memory bit clear addr address start counting  clear_bit atomic may reordered however doe contain memory barrier used locking purpose call order ensure change visible processor  comment doe make sense context x86 x86 map operation barrier compiler barrier however doe make sense consider architecture reorder around atomic instruction situation processor allowed execute wake_up_bit clear_bit race architecture suffer issue situation processor would wake see bit still taken sleep one responsible waking assume job continue patch implement wrapper map smp_mb__ _atomic smp_mb__ _clear_bit older kernel change code leverage manner consistent mainline kernel signed brian behlendorf behlendorf1 llnl.gov,,
4623,c2fa09454ef322a34df58655978e79c1c7fab641,ichard Yao <ryao@gentoo.org>, 2014-07-13 14:45:20 -0400, , add hook disabling direct reclaim port xfs linux introduced thread specific pf_fstrans bit used mark context processing transaction set allocation context dip kernel memory reserve avoid deadlock writeback linux 3.9 provided additional disabling __gfp_io page allocation xfs began using 3.15 patch implement hook marking transaction via pf_fstrans allocation performed context pf_fstrans km_sleep allocation transparently converted gfp_noio allocation additionally using linux 3.9 newer kernel set prevent direct reclaim entering pageout km_pushpage km_nosleep allocation effectively allows spl_vmalloc helper function used safely thread responsible signed brian behlendorf behlendorf1 llnl.gov,,
4624,c3eabc75b1ea41a12e3fec06db74a2995bda7514,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-08 15:37:14 -0500, , refactor generic memory allocation interface patch achieves following goal replaces preprocessor kmem flag gfp flag mapping proper translation logic eliminates potential surprise previously possible kmem flag mapped gfp flag map vmem_alloc allocation kmem_alloc allocation sized equal newly added parameter ensures small allocation contend single global lock large allocation still handled potentially limited virtual address space squandered behavior entirely different illumos due different memory management strategy employed respective kernel however functionally provides semantics required disable debug kmem enable debug kmem default enable debug kmem tracking allocator unified single allocation function done simplify code make maintainable improve portability exposing implementation memory allocation function safely used way used illumos specifically caller may safely use km_sleep context perform filesystem allows eliminate entire class linux specific change previously required avoid deadlocking system change largely transparent existing caller caveat header refactored extraneous includes removed caller may find need explicitly add additional includes particular kmem_cache.h must explicitly includes access spl kmem cache implementation behavior different illumos done avoid always masking linux slab function kmem.h included caller like lustre made assumption definition km_sleep km_nosleep km_pushpage need updated caller zfs require change km_pushpage longer overloaded imply gfp_noio retains original meaning allowing allocation access reserved memory km_pushpage caller converted back km_sleep km_nodebug flag retired default warning threshold increased 32k kmem_virt function removed caller need distinguish physical virtual address use is_vmalloc_addr signed brian behlendorf behlendorf1 llnl.gov,,
4625,b34b95635a99223b6bff5437fb389e9340dc7dcd,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-08 13:35:51 -0500, , fix kmem cstyle issue address cstyle issue kmem vmem kmem_cache source header done make easier review subsequent change rework kmem vmem implementation signed brian behlendorf behlendorf1 llnl.gov,,
4626,e5b9b344c728bb0d9304f1a143db9255901dc5fe,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-08 13:04:42 -0500, , refactor existing code change introduces functional change memory management interface restructures existing code separating kmem vmem kmem cache implementation separate source header file splitting functionality separate file required addition spl_vmem_ init fini spl_kmem_cache_ initi fini function additionally several minor change include required accommodate removal extraneous header kmem.h large patch introduces functional change signed brian behlendorf behlendorf1 llnl.gov,,
4627,6ecf6d7228fbb29cfe6a335f5afc20f75493a791,ichard Yao <ryao@gentoo.org>, 2014-04-17 10:59:00 -0400, , revert add pf_nofs debugging flag reverts commit preperation updating kmem vmem infrastructure use pf_fstrans flag signed brian behlendorf behlendorf1 llnl.gov,,
4628,47af4b76ffe72457166e4abfcfe23848ac51811a,im Chase <tim@chase2k.com>, 2015-01-11 10:37:43 -0600,3006, use time compatibility wrapper since linux kernel utimens family function need context zfs else discrepencies timestamps backward userland code doe creat fname 0600 void futimens null getnstimeofday function generally return slightly lower time value signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 3006,,
4629,d958324f97f4668a2a6e4a6ce3e5ca09b71b31d9,rian Behlendorf <behlendorf1@llnl.gov>, 2015-01-06 16:54:57 -0800,2976, fix zfs_putpage lock inversion follow commit 74328ee correctly resolved lock inversion zfs_putpage zfs_free_range unfortunately process accidentally introduced another inversion zfs_putpage zfs_read page must unlocked taking range lock patch corrects issue addition locking rule subtle block comment added clearly explaining ordering critical signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 2976,,
4630,33b6dbbc51c790fc8048e2e18cd9bc10be384233,ed Bass <bass6@llnl.gov>, 2014-12-22 16:54:43 -0800,2988, document zfs_flags module parameter add table describing debugging flag set zfs_flags module parameter also change module_param type uint user shown negative value updated man page text reproduced convenience zfs_flags int set additional debugging flag following flag may bitwise together  value symbolic name description   enable dprintf entry debug log   enable extra dbuf verification   enable extra dnode verification   enable snapshot name verification   check illegally modified arc buffer  zfs_debug_spa enable spa_dbgmsg entry debug log   enable verification block free  128 enable extra spacemap histogram verification  requires debug build default value signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2988,,
4631,03a783534ad9ea1db71d978f9f850f9dd13ccd51,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-19 20:01:20 -0500,424, fix debug object stack warning running splat test kernel enabled following warning generated odebug object stack annotated warning lib debugobjects.c 300 0x221 0x480 caused test case placing debug object stack rather heap harmful since small object make happy object relocated heap impacted taskq test signed brian behlendorf behlendorf1 llnl.gov close 424,,
4632,4e30e68cafdd558463be2352849e707bcc36aa3c,ed Bass <bass6@llnl.gov>, 2014-12-15 13:53:00 -0800,2953, use ac_lang_source conftest.h source using ac_lang_source version autoconf problematic given source written header file version assume content written conftest.c generate shell code effect content test program detect support linux tracepoints consequently malformed containing source conftest.h build system incorrectly disabled tracepoints support fix passing header source directly signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2953,,
4633,49ee64e5e6ec7240bc63d96064f2feeb8f84ed9d,ed Bass <bass6@llnl.gov>, 2014-12-12 18:07:39 -0800,2953, remove duplicate typedefs trace.h older version gcc e.g gcc 4.4.7 rhel6 allow duplicate typedef declaration type trace.h header contains typedefs avoid unknown type error file declared type question cause build failure file already declared type newer version gcc e.g v4.6 allow duplicate typedefs type unless pedantic error checking force support older version need remove duplicate typedefs removal typedefs mean built tracepoints code using type unless required header included facilitate tracepoint event declaration moved trace.h separate header new header explicitly included file event defined therein trace.h header still indirectly included form zfs_context.h provides implementation dprintf dbgmsg set_error interface make interface readily available throughout code base macro redefine dtrace_probe use linux tracepoints also still provided trace.h prerequisite trace_ header new linux implementation specific header introduce small divergence upstream zfs several core file present significant maintenance burden signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2953,,
4634,74328ee18f94d27f9c802d29fdd311018dab2adf,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-19 12:57:54 -0800,2976, fix zfs_putpage lock inversion exists lock inversion involving zfs range lock individual page writeback bit result deadlock prevent must always manipulate writeback bit holding range lock exact deadlock follows process process zpl_writepages zpl_fallocate  zpl_putpage zfs_space zfs_putpage set bit zfs_freesp zfs_range_lock wait lock zfs_free_range take lock yet initiated bit cleared wait bit signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed richard yao richard.yao clusterhq.com issue 2976,,
4635,2d9d57b0fbe17b56a1bdd09505400144778cb189,ed Bass <bass6@llnl.gov>, 2014-12-17 11:01:42 -0800,2965, vdev_id use mawk compatible regular expression slot mapping vdev_id work system using mawk awk alternative regular expression map_slot contains unquoted empty string following alternation operator result missing operand error mawk solution rearrange expression alternation two operand signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux pkg zfs 136 close zfsonlinux zfs 2965,,
4636,5c7afad448325b5761601f574fc937476d3a77d1,rian Behlendorf <behlendorf1@llnl.gov>, 2014-12-19 11:57:52 -0800, , fix cstyle issue c66989b commit c66989b accidentally introduced cstyle issue went unnoticed tiny patch corrects oversight signed brian behlendorf behlendorf1 llnl.gov,,
4637,9063f65476b7b7d78ccf096fec890b8727117e2a,oris Protopopov <boris.protopopov@actifio.com>, 2014-11-19 12:08:08 -0500,2911, correct error return unify cross pool operation error handling signed boris protopopov actifio.com signed brian behlendorf behlendorf1 llnl.gov close 2911,,
4638,a3c1eb77721a0d511b4fe7111bb2314686570c4b,hunwei Chen <tuxoko@gmail.com>, 2014-12-19 11:31:59 +0800,421, mutex force serialization mutex_exit fix race known mutexes linux safe using synchronize freeing object mutex embedded http lwn.net article 575477 known place zfs suspected suffer race condition zio io_lock dbuf db_mtx zio zio io_lock zio io_cv synchronize freeing zio_wait zio_done dbuf dbuf db_mtx protect reference counting patch fix kind race forcing serialization mutex_exit spin lock making mutex safe sacrificing bit performance memory overhead issue commonly manifest deadlock zio pipeline caused process spinning damaged mutex similar deadlock reported dbuf db_mtx mutex also cause null dereference bad paging request right circumstance issue many like linked zfsonlinux zfs 2523 issue specifically fix resolve least following outstanding issue zfsonlinux zfs 401 zfsonlinux zfs 2523 zfsonlinux zfs 2679 zfsonlinux zfs 2684 zfsonlinux zfs 2704 zfsonlinux zfs 2708 zfsonlinux zfs 2517 zfsonlinux zfs 2827 zfsonlinux zfs 2850 zfsonlinux zfs 2891 zfsonlinux zfs 2897 zfsonlinux zfs 2247 zfsonlinux zfs 2939 signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 421,,
4639,c0ba93dee6cb62ccbb2c9b3103f15ddbf4680d6e,ndy Bakun <github@thwartedefforts.org>, 2014-12-14 20:23:25 -0800,2961, fix typo post scriptlet line missing space made post directive part package description post scriptlet defined signed andy bakun github signed brian behlendorf behlendorf1 llnl.gov close 2961,,
4640,c66989baaeee5bb4ac06cebfad513e1253f22564,acek FefliÅski <feflik@gmail.com>, 2014-12-10 13:24:14 +0100,2955, zpool upgrade return error stderr instead stdout signed jacek feflinski feflik gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2955,,
4641,1b95fd5d708bcf7de79740a0cd08de43caa0d847,an Swartzendruber <dswartz@druber.com>, 2014-12-07 12:23:00 -0500,2883, improve systemd script leave stale sharetab systemd script zfs share.service doe zfs share share required datasets unfortunately etc dfs sharetab stale previous boot delete share signed dan swartzendruber dswartz druber.com signed brian behlendorf behlendorf1 llnl.gov close 2883,,
4642,c944be5d7e619ad7259fdb5802f0f9bd90a22488,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-20 14:37:47 -0700,2812, fix snapshot dirty inodes filesystems mounted read immutable snapshot must allowed dirty inode result write correctly cause kernel panic filesystem must immutable signed brian behlendorf behlendorf1 llnl.gov close 2812,,
4643,52479ecf58fa89190e384edcf838fecccc786af5,ed Bass <bass6@llnl.gov>, 2014-11-14 10:18:05 -0800,411, remove compat includes sys types.h include compatibility code linux _compat.h public header sys types.h cause problem external code base includes zfs header conflicting compatibility code lustre particular defined shrink_stop compatibility pre 3.12 kernel way conflicted spl definition lustre zfs osd includes zfs header fails build due shrink_stop redefined compiler warning avoid conflict include compat header file private header also consistency include sys linux sort header name signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 411,,
4644,8d9a23e82cea5d897e9357d569ef364106703d5a,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-05 17:30:35 -0500,408, retire legacy debugging infrastructure spl originally written linux tracepoints still infancy therefore entire debugging subsystem added facilite tracing served well many year linux tracepoints matured provide functionality previous tracing subsystem rather maintain parallel functionality make sense fully adopt tracepoints therefore patch retires legacy debugging infrastructure see zfsonlinux zfs bc9f413 tracepoint change signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 408,,
4645,80c50365c21ea98ae78150f32c3f35e075815c44,an Swartzendruber <dswartz@druber.com>, 2014-11-13 14:49:51 -0500,2893, fix systemd config zfs share.service zfs share.service rule need modified ensure doe execute zfs mount.service signed dan swartzendruber dswartz druber.com signed brian behlendorf behlendorf1 llnl.gov signed ralf ertzinger ralf skytale.net close 2893,,
4646,29b763cd2c13e355b60fa095a6f20cf8a38f8651,saac Huang <he.huang@intel.com>, 2014-10-21 12:20:10 -0600,2703, bio_alloc __gfp_wait never return null mark error handling branch unlikely current kernel interface never return null however want keep error handling case behavior change futre plus fix small style issue signed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 2703,,
4647,aaed7c408c0bd72c6f9437793a98542972f0a8fd,ed Bass <bass6@llnl.gov>, 2014-11-14 10:21:53 -0800,2898, explicitly include spl compat header inclusion spl compatibility header moved public header sys types.h avoid conflict external package include compatiblity header explicitly cope change also sort linux specific inclusion alphabetically signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2898,,
4648,7b2d78a046aa4695d434478a439a9438521d73af,ed Bass <bass6@llnl.gov>, 2014-11-06 18:18:32 -0800,2875, fix improper null byte termination handling fix case null byte termination string done unnecessarily incorrectly snprintf function always produce null byte terminated string non negative return value necessary write null byte separate step also unsafe use return value snprintf offset placing null byte output truncated return value number byte _would_ written enough space available therefore return value may index beyond array boundary finally snprintf account null byte limiting output size need pas size parameter one buffer size signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2875,,
4649,89b1cd6581528c576bd4ff7f713f671b23b051b5,mh <smh@FreeBSD.org>, 2014-10-16 02:23:27 +0000,2896, prevent zfs leaking pool free space processing async destroys zfs would leak space every txg timeout second default writes occurred pool totally full point would unfixable without pool recreation addition machine rebooted pool situation would fail import boot hanging indefinitely import process requires ability write data pool attempt query pool status hung import would return import hold pool lock way import pool would specify readonly zpool import zdb pool used check deferred free size lost space counted reference http github.com freebsd freebsd commit 48431b7 http base view revision revision 273158 http 132 porting note issue filed illumos 5347 comprehensive fix review change finalized integrated meanwhile freebsd fix merged prevent issue ported tim chase tim chase2k.com signed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 2896,,
4650,4254acb05743dc2175ae76f6e15b0785d4b688fd,im Chase <tim@chase2k.com>, 2014-11-10 23:26:33 -0600,2884, undirty freed spill block spill block dbuf yet written spill block freed unwritten version still written patch handle case spill block dbuf freed undirties prevent written common case could happen xattr used long xattr immediately replaced short xattr setfattr user.test very_very_very ... _long_value file setfattr user.test short_value file first value must sufficiently long spill block generated second value must short enough require spill block practice would typically happen due internal xattr operation result setting acltype posixacl signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2663 close 2700 close 2701 close 2717 close 2863 close 2884,,
4651,bc9f4131a15a177f1d355ad1c5c844e0ab9a505a,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-17 11:14:24 -0800,2874, merge branch b_tracepoints signed prakash surya surya1 llnl.gov signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2874,,
4652,0b39b9f96f1170523ad6e4a3e8319198a574de27,rakash Surya <surya1@llnl.gov>, 2014-06-13 10:54:48 -0700, , swap dtrace_probe linux tracepoints patch leverage linux tracepoints within zfs linux code base also refactors debug code bring back sync illumos information exported via tracepoints used variety reason e.g debugging tuning general exploration understanding etc advantageous use linux tracepoints mechanism export kind information opposed something else number reason number external tool make use tracepoints automatically e.g perf systemtap tracepoints designed extremely cheap disabled one accepted way export kind information many kernel subsystem use tracepoints unfortunately though caveat well linux tracepoints appear available gpl licensed module due way certain kernel function exported thus actually make use tracepoints introduced patch one might patch compile kernel exporting necessary function non gpl module prior upstream kernel version v3.14 rc6 g66cc69e linux tracepoints available unsigned kernel module tracepoints get disabled due module taint thus one either sign zfs kernel module prior loading use kernel versioned v3.14 rc6 g66cc69e newer assuming two requirement satisfied let look example patch used information expose command run root list zfs tracepoints available sys kernel debug tracing event zfs enable filter zfs_arc__delete zfs_arc__evict zfs_arc__hit zfs_arc__miss zfs_l2arc__hit zfs_l2arc__miss zfs_l2arc__read  enable zfs tracepoints clear tracepoint ring buffer echo sys kernel debug tracing event zfs enable echo sys kernel debug tracing trace import zpool called tank inspect tracepoint data line truncated long commit message otherwise zpool import tank cat sys kernel debug tracing trace head n35 tracer nop  entry buffer entry written 1219 1219  irqs need resched hardirq softirq preempt depth delay task pid cpu timestamp function  zpool 30132 003 .... 91344.200050 zfs_arc__miss hdr ... z_rd_int 30156 003 .... 91344.200611 ... zpool 30132 003 .... 91344.201173 zfs_arc__miss hdr ... z_rd_int 30157 003 .... 91344.201756 ... zpool 30132 003 .... 91344.201795 zfs_arc__miss hdr ... z_rd_int 30158 003 .... 91344.202099 ... zpool 30132 003 .... 91344.202126 zfs_arc__hit hdr ... zpool 30132 003 .... 91344.202130 zfs_arc__hit hdr ... zpool 30132 003 .... 91344.202134 zfs_arc__hit hdr ... zpool 30132 003 .... 91344.202146 zfs_arc__miss hdr ... z_rd_int 30159 003 .... 91344.202457 ... zpool 30132 003 .... 91344.202484 zfs_arc__miss hdr ... z_rd_int 30160 003 .... 91344.202866 ... zpool 30132 003 .... 91344.202891 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.203034 zfs_arc__miss hdr ... z_rd_iss 30149 001 .... 91344.203749 ... zpool 30132 001 .... 91344.203789 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.203878 zfs_arc__miss hdr ... z_rd_iss 30151 001 .... 91344.204315 ... zpool 30132 001 .... 91344.204332 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.204337 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.204352 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.204356 zfs_arc__hit hdr ... zpool 30132 001 .... 91344.204360 zfs_arc__hit hdr ... highlight kind detailed information exported using infrastructure taken first tracepoint line output reformatted fit column zpool 30132 003 .... 91344.200050 zfs_arc__miss hdr dva 0x1 0x40082 birth 15491 cksum0 0x163edbff3a flag 0x640 datacnt type size 2048 spa state_type access mru_hits mru_ghost_hits mfu_hits mfu_ghost_hits l2_hits refcount  dva0 0x1 0x40082 dva1 0x1 0x3000e5 dva2 0x1 0x5a006e cksum 0x163edbff3a 0x75af30b3dd6 0x1499263ff5f2b lsize 2048  objset object level blkid  specific tracepoint shown zfs_arc__miss data exported detailing arc_buf_hdr_t hdr blkptr_t zbookmark_t caused arc miss exact dva kind precise detailed information extremely valuable trying answer certain kind question anybody unfamiliar looking build found xfs source code along following three web link extremely helpful http lwn.net article 379903 http lwn.net article 381064 http lwn.net article 383362 also node boring aspect patch autoconf macro modified support sixth paramter parameter used populate content new conftest.h file sixth parameter provided conftest.h empty autoconf macro introduced macro nearly identical macro except support fifth option passed sixth parameter autoconf change needed test availability linux tracepoint macro due odd nature linux tracepoint macro api separate must created path filename used internally kernel define_trace.h file autoconf macro introduced determine safely enable linux tracepoint functionality need selectively disable tracepoint code due kernel exporting certain function gpl without check build process fail link time addition set_error macro modified tracepoint well sdt.h file moved include sys directory contains userspace portion kernel space portion dprintf zfs_dbgmsg interface implemented tracepoint well signed prakash surya surya1 llnl.gov signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4653,5024046763f02c11b94b832c5f54e23411949e90,ed Bass <bass6@llnl.gov>, 2014-11-06 13:34:17 -0800, , cstyle allow right paren line make style checker script accept right parenthesis line motivated linux tracepoints macro  code within tp_fast_assign parameter normal assignment terminated semicolon style checker forbids following semicolon non blank preceding right parenthesis white space therefore closing parenthesis must next line yet style checker foribs indenting readability relaxing non blank semicolon rule would open door many bad style practice instead relax white space right paren rule parenthesis line relaxation overriden option still way catch misuse style signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4654,29e57d15c8cdd5d1d7905c9045e8f40c6f9b72f4,ed Bass <bass6@llnl.gov>, 2014-10-23 16:59:27 -0700, , fix dprintf format specifier fix dprintf format specifier disagreed argument type came light compiler error converting dprintf use linux trace buffer previously problem presumably spl debug logging vsnprintf must perform automatic type conversion signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4655,59ec819a0c616fe2ac2b28829086568353a7d7fe,ed Bass <bass6@llnl.gov>, 2014-10-21 17:59:33 -0700, , move internal arc strucutres arc_impl.h add new file named arc_impl.h move internal arc structure definition file needed order allow linux tracepoint function grub around internals structure signed prakash surya prakash.surya delphix.com signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4656,33c08194254d42342d1c4e323eb0058df38d15b6,andall Mason <ClashTheBunny@gmail.com>, 2014-11-07 12:34:11 +0200,2877, fix small spelling mistake recieve becomes receive signed randall mason clashthebunny gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2877,,
4657,fb42a4932886656a5e3a8a4cde6ea76ca7fbae7c,rakash Surya <surya1@llnl.gov>, 2014-10-06 16:32:36 +0200,2745, illumos 5213 panic metaslab_init due space_map_open returning enxio 5213 panic metaslab_init due space_map_open returning enxio reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reference http www.illumos.org issue 5213 http 110 porting note linux port km_sleep replaced km_pushpage ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2745,,
4658,a82db4e15fcd882898595a40bba0d3b08548cd95,saac Huang <he.huang@intel.com>, 2014-10-28 21:35:10 -0600,2847, print header properly terminal resizes added handler sigwinch one header printed per screen even terminal resizes signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 2847,,
4659,1c49ac575d26a072b53c93fcdf6bd0655343ef22,saac Huang <he.huang@intel.com>, 2014-10-30 13:29:58 -0600,2842, fix inaccurate field description field description arcstat.py demand access inaccurate begin demand data yet field actually covered demand data demand meta data access signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 2842,,
4660,b31d8ea77cd91dce29acf3ec448180f3715cca13,hris Wedgwood <cw@f00f.org>, 2014-10-23 16:00:41 -0700,1291, reduce buf dbuf mutex contention due evidence contention buf_hash_table dbuf_hash_table size increased 256 8192 increase hash table size add approximating 0.5m fixed memory footprint relatively small increase expected cause problem even low memory machine footprint also become dynamic persistent l2arc support finalized meanwhile small change significantly reduces contention certain workload signed chris wedgwood f00f.org signed brian behlendorf behlendorf1 llnl.gov signed pavel snajdr snajpa snajpa.net close 1291,,
4661,0f69910833f4918283bad1ce9e23b701fc6edb6b,lex Zhuravlev <alexey.zhuravlev@intel.com>, 2014-11-13 10:09:05 -0800,2892, export symbol zil interface symbol needed consumer i.e lustre wish integrate zil addition prototype removed implementation function removed long ago signed alex zhuravlev intel.com signed brian behlendorf behlendorf1 llnl.gov close 2892,,
4662,5f91bd3dea49a529e87e0aa39595f074fd09736a,an Swartzendruber <dswartz@druber.com>, 2014-10-28 21:29:53 -0400,2834, improve zvol symlink handling change zvol helper program replace embedded space pool dataset name ensure valid symlinks character choosen valid character dataset name allowed udev ensures dataset name embedded space translated unique dev zvol symlink signed dan swartzendruber dswartz druber.com signed darik horn dajhorn vanadac.com signed brian behlendorf behlendorf1 llnl.gov close 2834,,
4663,917fef273295616c563bbb0a5f6986cfce543d2f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-11-03 13:50:39 -0800, , lower minimum object slab threshold long fit minimum one object slab reason prevent creation cache effectively push maximum object size 32mb splat cache test extended accordingly verify functionality signed brian behlendorf behlendorf1 llnl.gov,,
4664,7f118e836e3533d85aa0f859eb463cf9e54dc3fc,arcel Wysocki <maci.stgn@gmail.com>, 2014-10-31 16:26:29 -0700, , add config compile config .gitignore file may added automake therefore added config .gitignore full list possible auxiliary program see full automake documentation http www.gnu.org software automake manual automake.html auxiliary program signed marcel wysocki maci.stgn gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
4665,11662bf969b3503b66d5ccd81d024c0f4473100c,arcel Wysocki <maci.stgn@gmail.com>, 2014-10-29 12:11:43 +0100,2848, add config compile config .gitignore file may added automake therefore added config .gitignore full list possible auxiliary program see full automake documentation http www.gnu.org software automake manual automake.html auxiliary program signed marcel wysocki maci.stgn gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2848,,
4666,3f4a13c49709ab4bc6abb6b3159be77ce168a5e0,lexander Pyhalov <apyhalov@gmail.com>, 2014-10-28 09:48:50 -0700,2822, fix module installation directory building zfs module kernel compiled deb.src packaging process end installing module wrong place signed alexander pyhalov apyhalov gmail.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 2822,,
4667,bb9d808c5a942111addef033bd50bff86d1a5cc7,lexander Pyhalov <apyhalov@gmail.com>, 2014-10-22 22:02:45 +0400,2822, fix module installation directory building zfs module kernel compiled deb.src packaging process end installing module wrong place signed alexander pyhalov apyhalov gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2822,,
4668,b76707027ceca056f8630cbc6660b8e9aa0a8f37,ichard Yao <richard.yao@clusterhq.com>, 2014-09-18 09:47:16 -0400,2641, make systemd module load.service file directory configurable installing outside prefix permissible gentoo prefix package manager cause installation process fail see could handle disabling systemd support prefix systemd doe check path gentoo council decided small file installed mean disabling systemd support prefix acceptable workaround consequence need way control directory file installed making configurable increase compliance freedesktop.org specification allows file installed etc module load.d http software systemd man module load.d.html signed richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov issue 2641,,
4669,60e9f69c975b1ee40de2f91783e2817be44ec8a7,ichard Yao <richard.yao@clusterhq.com>, 2014-08-29 14:16:41 -0400,2641, make directory mount.zfs installed configurable installing outside prefix permissible gentoo prefix package manager cause installation process fail see could script workaround inside ebuild seemed make sense make configurable signed richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov issue 2641,,
4670,d8d78267214b17ffa5f1f0ae0695d69bb8d6b767,ichard Yao <richard.yao@clusterhq.com>, 2014-08-29 13:09:52 -0400,2641, search usr local src spl object directory since changed default location kernel header respect prefix spl must search location prevent user build breaking signed richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov issue 2641,,
4671,3cd33ffc3ba1ebbc90eab280d87d6ac096be92f9,ichard Yao <richard.yao@clusterhq.com>, 2014-08-29 11:53:09 -0400,2641, kernel header installation respect prefix upstream component work enables preliminary support building gentoo zfs packaging linux system via gentoo prefix signed richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov issue 2641,,
4672,ed6e9cc235b47b5c940178926715f871bd36dc5e,im Chase <tim@chase2k.com>, 2014-10-02 07:21:08 -0500,2837, linux 3.12 compat shrinker semantics new shrinker api linux 3.12 modifies struct shrinker replacing shrink callback pair count_objects scan_objects also requires return value count_objects return number object actually freed whereas previous shrink callback returned number remaining freeable object patch add support new scan_objects return value semantics signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 2837,,
4673,fd05dde75d1abbb3dd906f9efa298b12ffc9d7d7,ichard Yao <richard.yao@clusterhq.com>, 2014-08-29 11:12:47 -0400,384, kernel header installation respect prefix upstream component work enables preliminary support building gentoo zfs packaging linux system via gentoo prefix signed richard yao richard.yao clusterhq.com signed brian behlendorf behlendorf1 llnl.gov close 384,,
4674,ad9863e80be35825229d0638c5e69c0ea30f82de,ichard Yao <ryao@gentoo.org>, 2014-06-17 19:37:02 -0400,369, kmem_cache call constructor destructor alloc free benefit first fix regression rework generic memory allocation interface appears triggered splat slab_reap slab_age test second make porting code illumos zfsonlinux easier third side effect making reclaim slab cache specify reclaim function order magnitude faster splat slab_reap test usually took second change take signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 369,,
4675,802a4a2ad53f6844ce2dbbf219a5e373ebd24688,im Chase <tim@chase2k.com>, 2014-10-02 07:40:05 -0500,403, linux 3.12 compat shrinker semantics new shrinker api linux 3.12 modifies struct shrinker replacing shrink callback pair count_objects scan_objects also requires return value count_objects return number object actually freed whereas previous shrink callback returned number remaining freeable object patch add support new scan_objects return value semantics update splat shrinker test case appropriately signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 403,,
4676,9635861742c6ac334877f944e17948aa11c2e57a,atthew Ahrens <mahrens@delphix.com>, 2014-09-13 15:40:05 +0200,2697, illumos 5164 5165 space map fix 5164 cause panic doe work 5165 zdb fails assertion run pool recently enabled space map_histogram feature reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed saso kiselkov skiselkov.ml gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5164 http www.illumos.org issue 5165 http github.com illumos illumos gate commit b1be289 porting note hunk dropped patch already resolved commit 8b0a084 comment modified metaslab.c updated use correct variable name space_map_blksz upstream commit incorrectly used ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2697,,
4677,b02fe35d3743c92e26f4158938e94093a2309a92,lex Reece <alex@delphix.com>, 2014-09-23 01:42:03 +0200,2697, illumos 4958 zdb trip assert pool ashift 0xe 4958 zdb trip assert pool ashift 0xe reviewed matthew ahrens mahrens delphix.com reviewed max grossman max.grossman delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4958 http github.com illumos illumos gate commit 2a104a5 porting note keep define feature present linux yet bsd ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2697,,
4678,adc90e9d946b53cb3eba963a2e2b1331cba0e7b5,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-23 15:26:49 -0700, , fix zdb segfault bit system setting zfs_arc_max 256m zdb result following segmentation fault rather reverting 0ec0724 introduced flaw code used bit build segmentation fault core dumped ztest sbin zdb bcc var tmp zpool.cache ztest exit code 139 child exited code signed brian behlendorf behlendorf1 llnl.gov,,
4679,0ec072487b678bb2bda110304e8efccbc7df8713,atthew Ahrens <mahrens@delphix.com>, 2014-09-16 22:24:48 +0200,2707, illumos 5169 5171 zdb fix 5169 zdb limit arc size 5170 zdb create scrub default 5171 zdb print status loading metaslabs leak detection reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed bayard bell bayard.bell nexenta.com approved robert mustacchi joyent.com reference http www.illumos.org issue 5169 http www.illumos.org issue 5170 http www.illumos.org issue 5171 http github.com illumos illumos gate commit 06be980 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2707,,
4680,acf58e706ce447f5d344896dc523e9d393d66f35,atthew Ahrens <mahrens@delphix.com>, 2014-09-17 09:14:39 +0200,2713, illumos 5178 zdb vvvvv old format pool fails dump_deadlist 5178 zdb vvvvv old format pool fails dump_deadlist reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard lowe richlowe richlowe.net reviewed saso kiselkov skiselkov.ml gmail.com reviewed richard elling richard.elling gmail.com reviewed alek pinchuk alek.pinchuk nexenta.com approved garrett amore garrett damore.org reference http www.illumos.org issue 5178 http github.com illumos illumos gate commit 90c76c6 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2713,,
4681,023bbe6f017380f4a04c5060feb24dd8cdda9fce,lovezfs <ilovezfs@icloud.com>, 2014-10-03 22:20:43 -0700,2760, fix zpool create enoent bug userland need switch temporary name pool created otherwise root dataset mount error open the_real_name dataset doe exist printed signed ilovezfs ilovezfs icloud.com signed brian behlendorf behlendorf1 llnl.gov close 2760,,
4682,5f6d0b6f5aa9af2ee5be74ac415a574b732c2c0f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-10 11:59:03 -0700,2678, handle block pointer corrupt logical size general strategy used zfs verify block valid checksum everything advantage extremely robust generically applicable regardless content block block checksum valid content trusted higher layer system work exceptionally well long bad data never written valid checksum doe somehow occur due software bug memory bit flip non ecc system may result kernel panic one place could occur somehow logical size stored block pointer exceeds maximum block size result attempt allocate buffer greater maximum block size causing system panic prevent happening arc_read function updated detect specific case block pointer invalid logical size passed treat block contained checksum error signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2678,,
4683,bc151f7b312dea09c6ec5b9a320e65140789643a,ed Bass <bass6@llnl.gov>, 2014-10-16 13:52:56 -0700,2804, remove check mandatory lock linux vfs handle mandatory lock generically need check conflicting lock zfs_read zfs_write zfs_freesp linux 3.18 removed lock_may_read lock_may_write interface relying purpose rather emulating interface remove redundant check signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2804,,
4684,88904bb3e3f4a385108343aee1ac7ee0d83e25dc,atthew Ahrens <mahrens@delphix.com>, 2014-09-13 16:02:18 +0200,2696, illumos 5162 zfs recv use loaned arc buffer avoid copy 5162 zfs recv use loaned arc buffer avoid copy reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed bayard bell bayard.bell nexenta.com reviewed richard elling richard.elling gmail.com approved garrett amore garrett damore.org reference http www.illumos.org issue 5162 http github.com illumos illumos gate commit 8a90470 porting note fix spelling error arena area dmu.c restore_write declare bonus abuf top function ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2696,,
4685,4b20a6f50999366b9ea17180838235c7733e5a53,atthew Ahrens <mahrens@delphix.com>, 2014-09-12 05:45:50 +0200,2690, illumos 5150 zfs clone defer_destroy snapshot cause strangeness clone created snapshot marked deferred destroy zfs destroy clone inherits defer_destroy flag origin snapshot clone inherit defer_destroy flag clone cause strange situation clone snapshot marked defer_destroy hold clone clone snapshot get hold clone deleted honor incorrectly set defer_destroy flag delete snapshot step reproduce zpool create test c1t1d0 zfs create test zfs snapshot test zfs clone test test clone zfs destroy test zfs clone test test clone2 zfs snapshot test clone2 zfs hold hld test clone2 zfs release hld test clone2 zfs list test test clone2 destroyed noticed cause dcenter get confused treat snapshot marked defer_destroy existing see snapshot clone marked defer_destroy 5150 zfs clone defer_destroy snapshot cause strangeness reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed max grossman max.grossman delphix.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed richard elling richard.elling gmail.com approved robert mustacchi joyent.com reference http www.illumos.org project illumos gate issue 5150 http github.com illumos illumos gate commit 42fcb65 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2690,,
4686,6c59307a3c52535513e1ea3b612dac5a594c5b5d,atthew Ahrens <mahrens@delphix.com>, 2014-09-12 05:28:35 +0200,2689, illumos 3693 restore_object least two transaction restore object restore_object use two transaction restore object one transaction used another transaction used set compression checksum importantly bonus data furthermore internally multiple transaction free chunk separate transaction executed distinct transaction fact dnode_allocate executed one transaction bonus population executed different transaction may lead violation zfs consistency assertion transaction assigned different transaction group also first transaction group successfully written permanent storage second transaction lost invalid dnode may created stable storage 3693 restore_object least two transaction restore object reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed andriy gapon andriy.gapon approved robert mustacchi joyent.com original author matthew ahrens andriy gapon reference http www.illumos.org issue 3693 http github.com illumos illumos gate commit e77d42e ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2689,,
4687,356d9ed4c81dbb1c52627d1af242f4d9f66b67af,im Chase <tim@chase2k.com>, 2014-10-07 08:01:01 -0500,1264, perform acl mode translation empty acl zfs_mode_comput function used create traditional mode value based acl acl exists processing done problem caused evident version filesystems system attribute also frequently empty acls filesystems performing chown operation could effect dirtying mode bit memory file system follows create file typical mode 664 echo test test chown anyuser test test mode show zero unmounting mounting exporting importing filesystem reveal proper mode signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1264,,
4688,62bdd5eb7a35288cc25c5ae968bcd0f08889f986,aniil Lunev <d.lunev.mail@gmail.com>, 2014-10-18 11:58:11 -0400,1540, illumos 4924 lz4 compression metadata reviewed matthew ahrens mahrens delphix.com reviewed saso kiselkov skiselkov.ml gmail.com approved christopher siden delphix.com reference http github.com illumos illumos gate commit b8289d2 http www.illumos.org issue 3756 porting note static function removed change remove caller function removed illumos instead left dead code however keep gcc happy removed linux may easily restored needed ported dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 1540,,
4689,ba232d8aead62e2af9c195c2802b89dbc891d5ef,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-08 17:10:45 -0700,2774, suppress aio kmem warning new zpl_aio_write zpl_aio_read function use kmem_alloc allocate enough memory hold vectorized allocation small observed practice sometimes slightly exceed warning threshold kilobyte therefore km_nodebug flag added suppress warning signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 2774,,
4690,46c936756ea26a52945eb8e8756e7c44ea9fc125,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-19 14:42:10 -0700,395, merge branch cleanup year spl code base accumulated compatibly code allow build wide range linux kernel general desirable make code flexible however support old kernel longer needed longer actively tested removed help keep code simple understandable spl 0.6.x release supported kernel way back 2.6.26. patch stack move cut 2.6.32 newer kernel ensures still support major enterprise distribution largely locked 2.6.32 based kernel time shed large amount compatibility code simplifies maintenance new development signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 395,,
4691,dcf91382b9cfad776f4de9458e53319e5a106331,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 14:52:47 -0400, , remove vfs_fsync wrapper vfs_fsync function available since linux 2.6.29 longer need maintain compatibility code however check left place since change occured 2.6.32 signed brian behlendorf behlendorf1 llnl.gov,,
4692,599662c538d06054608b16a1d6a3ce10f4fdd08c,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 14:48:23 -0400, , remove kern_path wrapper kern_path function available since linux 2.6.28 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4693,3d5392cefabc1a9b7dd9c853439d3262c5374829,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 14:42:26 -0400, , remove kvasprintf wrapper kvasprintf function available since linux 2.6.22 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4694,0fac9c9e6d8d74f56be09cd84ffb30197d2dcaad,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 14:15:19 -0400, , remove proc_handler wrapper linux 2.6.32 proc handler updated expect five argument therefore longer need maintain compatibility code infrastructure simplified signed brian behlendorf behlendorf1 llnl.gov,,
4695,e03119e86f695851f68b9a52de64075a89fb41bd,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 13:59:26 -0400, , update put_task_struct comment update comment correctly reflect interface added signed brian behlendorf behlendorf1 llnl.gov,,
4696,68a829b29d50b2a0e83222e93cf4897527673a41,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 13:41:09 -0400, , remove credential configure check groups_search function never exported mainline kernel therefore drop compatibility code always provide implementation additionally cred_t structure available since 2.6.29 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4697,e39174ed56acd418ef744d43876fc8cf6e9823ab,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 12:59:38 -0400, , add vfs_unlink vfs_rename comment consistency autoconf check small comment block added check signed brian behlendorf behlendorf1 llnl.gov,,
4698,137af025f687dd19994666a6c7d38661c209f0c9,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-02 12:47:09 -0400, , remove set_fs_pwd configure check function never exported mainline briefly available rhel5 therefore check removed code update always use wrapper function next step eliminate code zfs updated assume pwd would need signed brian behlendorf behlendorf1 llnl.gov,,
4699,3c49a1698986861d76dc2c08dcce8774bde36e25,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 20:14:15 -0400, , remove user_path_dir wrapper user_path_dir function available since linux 2.6.27 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4700,44778f41100f88e7458d4deb2335ad09ce0bd0ea,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 19:58:11 -0400, , remove wrapper removable unused global memory variable optional dcache icache shrinkers longer need kallsyms compatibility code allows eliminate another brittle area code removing kernel upcall functionality depended older kernel signed brian behlendorf behlendorf1 llnl.gov,,
4701,89a461e70c13c860d336dc36358bb02172ed6346,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 19:27:29 -0400, , remove shrink_ node_cache wrapper optional functionality may may useful zfs using older kernel never hard requirement therefore functionality removed spl simpler slimmed version added zfs signed brian behlendorf behlendorf1 llnl.gov,,
4702,8bbbe46f8680389888d6111f8d81429dcc5defac,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 18:34:41 -0400, , remove global memory variable platform illumos freebsd historically provided global variable summerize memory state system linux otherhand expose information kernel module entirely different mechanism memory management order simplify original zfs port linux global variable emulated spl benefit zfs zol matured year moved steadily away interface longer depends therefore patch completely remove global variable availrmem minfree desfree lotsfree needfree swapfs_minfree swapfs_reserve greatly simplifies memory management code eliminates common area confusion signed brian behlendorf behlendorf1 llnl.gov,,
4703,e1310afae3bdb17628b40c35561f2daedfaf4062,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 18:05:39 -0400, , remove wrapper function used back vmem_size function always problematic resulted brittle code kernel never provided clean interface module however turn caller function zfs determine total virtual address space size determined easily without vmem_size updated take approach allows shed dependency signed brian behlendorf behlendorf1 llnl.gov,,
4704,50e41ab1e12f0b007239c55bfa77d02f6e8ba890,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 17:35:41 -0400, , remove on_each_cpu wrapper on_each_cpu function available since linux 2.6.27 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4705,b652d169b05cc1c75fdb04421feb83713a0e36c4,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 17:31:53 -0400, , remove wrapper function available since linux 2.6.18 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4706,2bc5666f53685c6631f9a5d1d8beebdf1325f8e0,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 17:07:46 -0400, , remove i_mutex configure check inode structure used i_mutex internal locking primitive since 2.6.16. compatibility code check previous semaphore primitive removed however wrapper function kept entirely possible primitive change allow finer grained locking signed brian behlendorf behlendorf1 llnl.gov,,
4707,9f36cace4154f7dd855c42aae2eb13a6e1d79362,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 16:58:57 -0400, , remove kmalloc_node compatibility code kmalloc_node function available since linux 2.6.12 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4708,d227e114edd65356c928b660c19d6f1f471c9f8d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 16:40:37 -0400, , remove linux uaccess.h header check uaccess header available location since linux 2.6.18. longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4709,e5b65e317948926f082740a331900eb9aaddc624,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 16:35:11 -0400, , remove uintptr_t typedef uintptr_t typedef available since linux 2.6.24 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4710,ff0582cb395a8fd9be61926023a3923b9a908cc2,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 16:31:11 -0400, , remove atomic64_xchg wrapper atomic64_xchg function available since linux 2.6.24. longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4711,82f2f1a3af28d8ceadab53aeba3e94ab02138f85,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 18:48:25 -0400, , simplify time compatibility wrapper many time function grown overly complex order handle kernel compatibility issue however linux 2.6.26 required functionality available allows retire numerous configure check greatly simplify time compatibility wrapper signed brian behlendorf behlendorf1 llnl.gov,,
4712,87f8055a91940e6408420091e1a1601113f7912e,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 18:07:07 -0400, , map highbit64 fls64 fls64 function available since linux 2.6.16 used implemented highbit64 allows provide optimized implementation simplify code signed brian behlendorf behlendorf1 llnl.gov,,
4713,9c91800d199c65c7d893445bae9b9a9a5590c335,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 18:15:22 -0400, , remove ctl_unnumbered sysctl interface support ctl_unnumbered sysctl interface removed linux 2.6.19. longer reason maintain compatibility code also issue reason keep around ctl_name macro helper retired signed brian behlendorf behlendorf1 llnl.gov,,
4714,b38bf6a4e3bb321b1e4fad1be5a77faf22dcdcbc,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 17:10:35 -0400, , remove register_sysctl compatibility code register_sysctl interface stable since linux 2.6.21 longer need maintain compatibility code signed brian behlendorf behlendorf1 llnl.gov,,
4715,bb4dee3df2a191032201ce7f367be12fd898e08d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-17 15:10:19 -0700, , remove utsname wrapper longer need wrap utsname provided kernel called directly require small change zfs code utsname expected global structure function signed brian behlendorf behlendorf1 llnl.gov,,
4716,aa363c5c0507ed660f57655211df1fe2c30b380e,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 14:51:53 -0400, , remove assumption generic spl cache shrinkers make assumption cache contain vfs cache data therefore scaled based strictly true assumed removing tuning impact stock behavior 100 default mean scaling take place signed brian behlendorf behlendorf1 llnl.gov,,
4717,a80d69caf0daa28d661c88cb699bee02de2e312d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-29 16:48:35 -0400, , remove adaptive mutex implementation since linux 2.6.29 kernel mutexes adaptive mutexs longer point keeping code removed simplify code signed brian behlendorf behlendorf1 llnl.gov,,
4718,56cfabd3e8ceac79703edd4453c2c2d89a15ff6f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-29 16:34:45 -0400, , remove patch directory longer need carry stale patch spl source tree signed brian behlendorf behlendorf1 llnl.gov,,
4719,3a9253056345e27cd79433a52a63929d6bef907b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-29 19:42:15 -0400, , update code use misc_register misc_deregister spl originally written designed use device_create device_destroy function unfortunately function changed considerably year making difficult rely turn better choice would use misc_register misc_deregister function interface registering character device remained stable simple provides everything need therefore code reworked use interface higher level zfs code always depended interface also step towards minimizing kernel dependency signed brian behlendorf behlendorf1 llnl.gov,,
4720,0cb3dafccdffd00167275416730332cd5570a07a,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-29 18:00:46 -0400, , update splat use kmutex_t portability consistency throughout code update splat infrastructure use wrapped mutex interface signed brian behlendorf behlendorf1 llnl.gov,,
4721,62032954383dc6d1200890f07f56bb0ad85451be,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-29 16:01:22 -0400, , make license compatibility check consistent apply license specified meta file ensure compatibility check performed consistently signed brian behlendorf behlendorf1 llnl.gov,,
4722,d94fd5f0def2fbcb720647acac79ae75e2b9fa3b,arik Horn <dajhorn@vanadac.com>, 2014-10-12 22:57:49 -0500,2794, let zpool import ignore missing hostid record change zpool program skip hostid mismatch check way libzfs already doe invoked import fail nvpair missing etc zfs zpool.cache file happen etc hostid deprecation commit zfsonlinux spl signed darik horn dajhorn vanadac.com signed brian behlendorf behlendorf1 llnl.gov close 2794,,
4723,33074f2254db76f7237e5a29877558ef920ae325,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-10 18:12:47 -0700,1744, handle null mirror child vdev selecting mirror child possible map allocated contains null child vdev case child skipped read issue another member mirror signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 1744,,
4724,f0e324f25d5ada5da5f8930fc1789af6896c72b4,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-01 15:02:12 -0400,2757, update utsname support modify code use utsname kernel function rather global variable result cleaner portable code utsname already provided kernel easily emulated user space via uname mean behave consistently context also benefit allows removal _kernel pre processor condition also pre requisite proper fuse port need provide valid utsname finally allows remove functionality spl related compatibility code signed brian behlendorf behlendorf1 llnl.gov issue 2757,,
4725,050d22b06834876c3b0554647108f06a05b3ba96,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-03 13:00:53 -0700,2757, remove functionality optional linux 3.0 provided per filesystem shinkers never reasonable interface therefore functionality dropped earlier kernel signed brian behlendorf behlendorf1 llnl.gov issue 2757,,
4726,60bba628149439c4d36c6d75f726f0e3fabdbb4f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 19:24:04 -0400,2757, update code use misc_register misc_deregister zpios originally written designed use device_create device_destroy function unfortunately function changed considerably year making difficult rely turn better choice would use misc_register misc_deregister function interface registering character device remained stable simple provides everything need therefore code reworked use interface higher level zfs code always depended interface also step towards minimizing kernel dependency signed brian behlendorf behlendorf1 llnl.gov issue 2757,,
4727,e33045ee98611b30bbe2f174a709f470f9201171,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-03 10:58:47 -0700,2757, make license compatibility check consistent apply license specified meta file ensure compatibility check performed consistently signed brian behlendorf behlendorf1 llnl.gov issue 2757,,
4728,e82cdc3acc4afe52c3ddc3fe9e4f456fdef80f41,ed Bass <bass6@llnl.gov>, 2014-10-10 18:05:54 -0700,2788, ztest print backtrace sigsegv sigabrt add signal handler print backtrace crash assert signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2788,,
4729,bf2850de82af89b6d56fbbe9ee99bd9f09c628dc,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-13 10:35:01 -0700,2776, fix source_tree variable dkm build source_tree variable previous commit extra remove source_tree expanded properly identical fix applied original patch stable branch signed brian behlendorf behlendorf1 llnl.gov close 2776,,
4730,f178adea810bbeff938f279460f26aed9a1993c5,om Prince <tom.prince@ualberta.net>, 2014-10-09 14:24:03 -0300,2776, point dkm build installed source tree rather build directory signed tom prince tom.prince clusterhq.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2776,,
4731,fee48fd22c76f30796f524749e5be7b92ed2eda5,om Prince <tom.prince@ualberta.net>, 2014-10-09 14:22:59 -0300,2776, install header post build rather post install new version dkm clean build directory installing appears always intended path build note quote prevented working also build step already installing stuff directory file installing stuff part build rather install make sense signed tom prince tom.prince clusterhq.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2776,,
4732,de2a22fcb3e7e8d7c4f695aeb0caf9cdc8f82c9a,om Prince <tom.prince@clusterhq.com>, 2014-10-09 14:08:00 -0300,399, install header post build rather post install new version dkm clean build directory installing appears always intended path build note quote prevented working also build step already installing stuff directory file installing stuff part build rather install make sense signed tom prince tom.prince clusterhq.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 399,,
4733,971808ec9f62bc3f8e0347ebace6a19429d4e61d,urbo Fredriksson <turbo@bayour.com>, 2014-10-02 16:09:51 +0200,2754, add stern warning dedup user intending use dedup clearly advised memory requirement risk involved thanx sachiru comment suggestion signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2754,,
4734,e6659763c6069af794d66997a7f992dcdffa21b0,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-03 16:24:34 -0700,1440, improve verify error dmu_write debug patch designed ensure error code logged console verify hit signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 1440,,
4735,8878261fc9447592844db5f7eb3df9ed3b088871,rian Behlendorf <behlendorf1@llnl.gov>, 2014-10-07 13:20:49 -0700,2769, fix cpu_seqid use preemptible context commit e022864 introduced regression kernel built use cpu_seqid preemptible context cause zio_nowait trigger bug since cpu_seqid simply used random index usage safe resolve issue preempt disable calling cpu_seqid signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 2769,,
4736,a215ee16c06b3adbd00e9e69931ddcb71c2fb680,urbo Fredriksson <turbo@bayour.com>, 2014-10-01 16:24:54 +0200,2762, add example zfs bookmark example section signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2762,,
4737,e022864d19ee124c88f6fb9018e4b2d2cec76a08,atthew Ahrens <mahrens@delphix.com>, 2014-09-17 08:59:43 +0200,2711, illumos 5176 lock contention godfather zio 5176 lock contention godfather zio reviewed adam leventhal ahl delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling gmail.com reviewed bayard bell bayard.bell nexenta.com approved garrett amore garrett damore.org reference http www.illumos.org issue 5176 http github.com illumos illumos gate commit 6f834bc porting note linux max_ncpus defined largest number cpu might available life time system boot value larger number present cpu defined ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2711,,
4738,07a3312f170ac56cb480b0df9fdf4c83f116b59b,ukas Wunner <lukas@wunner.de>, 2014-10-06 13:08:33 +0200,2766, amend dracut module export zfs root shutdown make use dracut ability restore initramfs shutdown pivot allowing clean unmount export zfs root need force import every reboot anymore signed lukas wunner lukas wunner.de signed brian behlendorf behlendorf1 llnl.gov issue 2195 issue 2476 issue 2498 issue 2556 issue 2563 issue 2575 issue 2600 issue 2755 issue 2766,,
4739,8ac9b5e6b5b59ad3bf7a65f9de3c8ed46ba4240e,hris Dunlap <cdunlap@llnl.gov>, 2014-10-01 14:56:52 -0700,2756, cleanup struct zed_conf var reset struct zed_conf file descriptor close pointer null free signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2756,,
4740,56697c42646f002c4f52f9569a8cb75b45f704d8,hris Dunlap <cdunlap@llnl.gov>, 2014-10-01 14:56:07 -0700,2756, obtain advisory lock zed pid file zed advisory lock state file protect multiple instance running concurrently however work planned move state information kernel zed still need protect starting multiple instance commit add advisory lock pid file protect starting multiple instance lock failure overridden force command line option advisory lock state file retained long state information stored state file signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2756,,
4741,81857a34d1d767abf40aea7e6db074d8cbf7b49f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-30 17:47:10 -0400, , fix bug splat taskq front running splat kernel enabled taskq front flagged test might sleep unsafe context specifically splat_vprint function internally take mutex called spin lock moving log function outside spin lock cleanly solves issue signed brian behlendorf behlendorf1 llnl.gov,,
4742,057485504e3a4502c265813ab58e9ec8ffc2a3be,ndriy Gapon <avg@icyb.net.ua>, 2014-05-15 11:42:19 +0300,2210, zfs send send property snapshot actually sent ... opposed sending property snapshot relevant filesystem previous behavior result property set snapshot receiving side quite slow behavior zfs send changed reference http gmane.comp.file 346 ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2729 issue 2210,,
4743,7509a3d29963882a0c7fa9e703085c3a6a2ced65,mh <smh@FreeBSD.org>, 2012-12-13 22:03:07 +0000,2729, freebsd kern 172259 fix zfs receive error freebsd kern 172259 fix zfs receive error caused snapshot replication processed random order instead creation order eliminates needle filesystem renames caused removed parent snapshot subsequently cause many error kern 172259 submitted steven hartland reviewed pjd mentor approved pjd mentor mfc week reference http github.com freebsd freebsd commit 4995789 porting note minor whitespace fix made conform style requirement lib libzfs 2269 indent space instead tab lib libzfs 2270 indent space instead tab ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2729,,
4744,83e9986f6eefdf0afc387f06407087bba3ead4e9,ichard Yao <ryao@gentoo.org>, 2014-06-20 19:00:11 -0400,2417, implement option zpool create temporary pool name creating virtual machine rootfs zfs host rootfs zfs cause spa namespace collision standard name rpool used solution either give guest pool name unique host always desireable boot environment containing iso image install cumbersome introduced zpool import ... simplify situation host must access guest pool spa namespace conflict build upon introduce zpool import tname ... allows create pool whose core name tname whose disk name normal name specified simplifies creation machine image use rootfs zfs benefit real world deployment also zfsonlinux development decreasing time needed perform rootfs zfs experiment signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2417,,
4745,00d2a8c92f614f49d23dea5d73f7ea7eb489ccf1,ichard Yao <ryao@gentoo.org>, 2014-06-23 14:26:47 -0400,2417, zpool import update cachefile zpool import parameter intended use operating pool belong system like pool imported way update cachefile unless explicitly requested initial implementation allowed cachefile updated used went uncaught testing implicitly disabled use cachefile signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2417,,
4746,2f3ec9006146844af6763d1fa4e823fd9047fd54,ichard Yao <ryao@gentoo.org>, 2014-06-23 14:12:53 -0400,2417, add helper adding property list existing value used twice zpool create zpool import zpool create zpool import also need let refactor helper function make code readable signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2417,,
4747,aa0ac7caa438bf3981456c559d4224be104ccc7d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-25 15:15:45 -0700,2293, make user stack limit configurable aid detecting debugging stack overflow issue make user space stack limit configurable via new zfs_stack_size environment variable value assigned zfs_stack_size used default stack size byte mainly useful debugging aid conjunction ztest stack limit disabled default see ztest man page additional detail using zfs_stack_size environment variable signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 2743 issue 2293,,
4748,cb08f063074a5363810a39775fd90a4d214c5d87,im Chase <tim@chase2k.com>, 2014-09-25 23:40:41 -0500,2733, perform whole page page truncation hole punching range lock attempt perform page truncation optimally hole punching support added truncated performed operation two step first sub page stub zeroed range lock zfs_free_range using new function whole page truncated within zfs_freesp left window opportunity full page could touched patch close window moving whole page truncation zfs_free_range range lock signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2733,,
4749,dcca723acee9803561dd7ef456a28c4684c28e86,hris Dunlap <cdunlap@llnl.gov>, 2014-09-19 11:10:28 -0700,2735, refer zed script zedlets executables invoked zed response given zevent generically referred script convention script aimed bin compatible reason portability however zed requires executable ideally capable reading environment variable script referred zedlets zfs event daemon linkage executable task signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2735,,
4750,8cb8cf91df8a4902025d814b62b9332ad1b291c7,hris Dunlap <cdunlap@llnl.gov>, 2014-09-22 13:22:48 -0700,2736, replace zed use malloc calloc zed allocates memory via malloc typically follows memset however calloc implementation often perform optimization zeroing memory http question 2688466 mallocmemset slower calloc commit replaces zed use malloc calloc signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2736,,
4751,bee6665b88fca3b5e70e8b3c8f6281975721c7be,hris Dunlap <cdunlap@llnl.gov>, 2014-09-11 15:41:35 -0700,2536, fix zed spare.sh dash incompatibility zed spare.sh script defines vdev_status function query zpool status output obtaining status specified vdev function contains small awk script parameter expansion parameter pattern string supported bash dash dash fails bad substitution error commit replaces awk script hopefully portable sed script tested bash dash signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2536,,
4752,36283ca23346061cb653dc7b6bd583d1cf772808,ax Grossman <max.grossman@delphix.com>, 2014-09-07 17:06:08 +0200,2581," illumos 5138 add tunable maximum number block freed one txg reviewed adam leventhal adam.leventhal delphix.com reviewed mattew ahrens mahrens delphix.com reviewed josef jeff sipek jeffpc josefsipek.net reviewed richard elling richard.elling gmail.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5138 http github.com illumos illumos gate commit af3465d porting note support exposing uint64_t parameter added v3.17 rc1 variable declared unsigned long already far larger required allows avoid additional autoconf compatibility code default value set 100,000 linux instead ulong_max used illumos done limit number outstanding system snapshot destroyed help ensure individual txg sync time kept reasonable memory wasted managing huge backlog outstanding ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2675 close 2581",,
4753,acbad6ff6768b0ccfb3c319e981ec211dcecc277,lex Reece <alex@delphix.com>, 2014-07-18 07:08:31 -0800,2716, illumos 4753 increase number outstanding async writes sync task waiting reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4753 http github.com illumos illumos gate commit 73527f4 comment matt ahrens issue tracker sync task waiting txg complete hurry along increasing number outstanding async writes i.e make return larger number initially might tunable minimum async writes synctask waiting set ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2716,,
4754,1f6f97f3049706aa7ca95636fd587ae5f3d531a9,atthew Ahrens <mahrens@delphix.com>, 2014-09-17 17:41:51 +0200,2715, illumos 5116 zpool history infinite loop 5116 zpool history infinite loop reviewed christopher siden delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling gmail.com reviewed boris protopopov me.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5116 http github.com illumos illumos gate commit 3339867 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2715,,
4755,ab2894e66f40785b7d56d54f71158d6bf5b31b9a,atthew Ahrens <mahrens@delphix.com>, 2014-09-12 18:26:53 +0200,2693, illumos 5135 use fnvlist_ reviewed christopher siden delphix.com reviewed max grossman max.grossman delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5135 http github.com illumos illumos gate commit b18d6b0 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2693,,
4756,d97aa48f7c53e851675ad5d250daecee1bac81c1,atthew Ahrens <mahrens@delphix.com>, 2014-09-17 17:25:10 +0200,2714, illumos 5139 seek_hole failed report hole end file 5139 seek_hole failed report hole end file reviewed adam leventhal adam.leventhal delphix.com reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed max grossman max.grossman delphix.com reviewed peng dai peng.dai delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5139 http github.com illumos illumos gate commit 0fbc0cd ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2714,,
4757,843b4aad504b791eb1e8dfe6772a55d4da090b65,ichard Yao <ryao@gentoo.org>, 2014-04-29 20:47:47 -0400,2330, lib libzpool kernel.c assert owner rw_destroy intended cause ztest fail rw_destroy called rwlock owner signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2330,,
4758,485c581c41c4da15a17f045605ce5a7562b3b8a2,ichard Yao <ryao@gentoo.org>, 2014-04-22 23:18:17 -0400,2330, fix function call uninitialized value vdev_inuse llvm static analyzer reported could pas uninitialized pool_guid spa_by_guid vdev_inuse upon review correct attempt repurpose spare l2arc drive exported pool cause pool_guid passed spa_by_guid unintialized information stack cause non deterministic behavior since reason repurpose disk modify vdev_inuse avoid calling spa_by_guid detected signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2330,,
4759,928ee9fe184572a50e686b0c5173edb1b538c627,ichard Yao <ryao@gentoo.org>, 2014-04-22 20:25:39 -0400,2330, properly null terminate string utility cppcheck caught signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2330,,
4760,a05dfd0028fa0c49dec3ceea48995b4d6fe274ca,eorge Wilson <george.wilson@delphix.com>, 2014-09-12 05:07:20 +0200,2688, illumos 5147 zpool list show individual disk capacity zpool list command display lot info excludes capacity disk added 5147 zpool list show individual disk capacity reviewed adam leventhal adam.leventhal delphix.com reviewed christopher siden delphix.com reviewed matthew ahrens matthew.ahrens delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 5147 http github.com illumos illumos gate commit 7a09f97 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2688,,
4761,b8bcca18f709abd3d1b7649ebdcb4aeab1e2eb61,atthew Ahrens <mahrens@delphix.com>, 2014-09-13 16:13:00 +0200,2698, illumos 5161 add tunable number metaslabs per vdev 5161 add tunable number metaslabs per vdev reviewed alex reece alex.reece delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed richard elling richard.elling gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 5161 http github.com illumos illumos gate commit bf3e216 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2698,,
4762,e3020723dc43af2bc22af0d68571a61daf9b44d0,urbo Fredriksson <turbo@bayour.com>, 2014-09-14 15:47:22 +0000,386, linux 3.16 compat smp_mb__ _clear_bit function renamed smp_mb__ _atomic rather adding compatibility function handle code updated use smp_wmb advantage stable functionally equivalent interface many architecture expands smp_wmb others might able something slightly efficient safe correct signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 386,,
4763,ebcf49365a05fc064bfe6534c2997f3ad6c339e3,atthew Ahrens <mahrens@delphix.com>, 2014-09-17 09:07:28 +0200,2712, illumos 5177 remove dead code dsl_scan.c 5177 remove dead code dsl_scan.c reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed richard elling richard.elling gmail.com reviewed richard lowe richlowe richlowe.net approved robert mustacchi joyent.com reference http www.illumos.org issue 5177 http github.com illumos illumos gate commit 5f37736 porting note local variable buf removed part original patch ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2712,,
4764,64dbba36794422aaed5177203edd0dd7aee77de7,dam Leventhal <adam.leventhal@delphix.com>, 2014-09-17 08:53:02 +0200,2710, illumos 5174 add sdt probe blocked read dbuf_read 5174 add sdt probe blocked read dbuf_read reviewed basil crow basil.crow delphix.com reviewed matthew ahrens mahrens delphix.com reviewed steven hartland killing multiplay.co.uk reviewed richard elling richard.elling gmail.com reviewed boris protopopov bprotopopov hotmail.com reviewed steven hartland killing multiplay.co.uk reviewed garrett amore garrett damore.org approved robert mustacchi joyent.com reference http www.illumos.org issue 5174 http github.com illumos illumos gate commit f6164ad ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2710,,
4765,cfd3549a532d3f3551ac2bfd7badbfe2617b0e1f,ed Bass <bass6@llnl.gov>, 2014-09-19 11:42:13 -0700,2722, remove obsolete comment guard page remove obsolete comment refers code removed commit 79c6e4c4 code comment related space consumed guard page user space stack longer take account signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2722,,
4766,5043deaa4077fc4bf748469fc8e89a422c7a5aef,hris Dunlap <cdunlap@llnl.gov>, 2014-09-10 14:22:39 -0700,2695, remove reverse indentation zed comment remove occurrence reverse indentation zed comment consistency within project code base signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2695,,
4767,6d9036f35049f0917748c89114bac58a5029e989,atthew Ahrens <mahrens@delphix.com>, 2014-09-07 17:37:25 +0200,2676, illumos 5140 message recv could opened printed booting crash reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed max grossman max.grossman delphix.com reviewed richard elling richard.elling gmail.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org project illumos gate issue 5140 http github.com illumos illumos gate commit 2243853 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2676,,
4768,71bd0645554d8bd94bdadaf270ab67f629ad9fa0,urbo Fredriksson <turbo@bayour.com>, 2014-09-12 15:44:04 +0200,2691, document environment variable zdb zfs zinject zpool signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2691,,
4769,2d501583430e54be39c6aed033fc6f841e469f23,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-08 18:31:27 -0700,2670, fix deadlock rolling back mounted filesystem zfs_suspend called acquires lock dropped filesystem rolled back resumed zfs_resume_fs therefore must call iput lock may result inode evict handler called also take lock instead use zfs_iput_async ensure dropping last reference deferred run safe context signed brian behlendorf behlendorf1 llnl.gov close 2670,,
4770,52dd454d05a14813ed74e93dfca6ac2994333c4d,im Chase <tim@chase2k.com>, 2014-09-09 07:23:29 -0500,2682, document readonly pool property documentation based freebsd zpool man page signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2682,,
4771,223df0161fad50f53a8fa5ffeea8cc4f8137d522,im Chase <tim@chase2k.com>, 2014-08-20 17:35:13 -0500,2619, implement fallocate add support mode fallocate mimic behavior native file system ext4 case file might extended offset beyond end file return success without changing file extent punched hole would extend file existing tail file punched add function modeled update_page handle zeroing partial page hole punching operation must used range lock requested region order arc page cache stay sync move existing page cache truncation via zfs_freesp better source structure compatibility upstream code add page cache truncation zfs_freesp zfs_free_range handle hole punching signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 2619,,
4772,4f68d7878fbed9e225022a1d435cfb7177234110,eorge Wilson <george.wilson@delphix.com>, 2014-09-05 02:50:36 +0200,2662, illumos 5117 spacemap reallocation cause corruption 5117 space map reallocation cause corruption reviewed matthew ahrens mahrens delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed richard elling richard.elling gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org project illumos gate issue 5117 http github.com illumos illumos gate commit e503a68 ported turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2662,,
4773,ceb49b0acd21ed44aa8e4d1464447eef071d3bab,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-29 12:24:26 -0700,2602, add object type checking zap_lockdir non zap object passed zap_lockdir treated valid zap object result zap_lockdir attempting read belief leaf block invalid disk location scsi layer eventually generate error bogus caller hang good news situation occur unless pool damaged bad news report freebsd solaris damaged pool specifically normal file filesystem reference another normal file parent since pool like known exist zap_lockdir function updated verify type object non zap object passed einval returned immediately signed brian behlendorf behlendorf1 llnl.gov issue 2597 issue 2602,,
4774,cd3939c5f06945a3883a362379d0c12e57f31a4d,ichard Yao <ryao@gentoo.org>, 2014-08-04 07:09:32 -0400,2373, linux aio support nfsd do_readv_writev implement fop read fop write do_readv_writev attempt read write using fop aio_read fop aio_write fallback fop read fop write aio available however fallback perform call individual data page since default recordsize 128kb sequential operation nfs generate dmu transaction transaction needed unnecessary overhead implement fop aio_read fop aio_write eliminate zfs originated opensolaris aio api entirely implemented userland libc intelligently mapping vop_write vop_read vop_fsync linux implement aio inside kernel linux filesystems therefore must implement aio logic nearly implement fop aio_write synchronously consequently implement aio_fsync however since zpl work mapping linux vfs call function implementing illumos vfs operation instead implement aio kernel mapping operation vop_read vop_write vop_fsync equivalent therefore implement fop aio_fsync one might inclined make fop aio_write implementation synchronous make software expects behavior safe however several reason platform implement aio_write synchronously since majority userland software using aio cross platform expectation synchronous behavior problem would hurt performance program use posix interface properly simultaneously encouraging creation non compliant software broader community concluded userland software patched properly use posix interface instead implementing hack filesystems cater broken software concept best described o_ponies debate making asynchronous write synchronous non sequitur software dependent synchronous aio_write behavior suffer data loss zfsonlinux kernel panic system failure zfs_txg_timeout second default second seems like reasonable consequence using non compliant software noted also problem kernel nfsd doe pas o_sync file opened instead relies open write close enforce synchronous behavior flush guarenteed last close exporting filesystem doe implement aio via nfs risk data loss event kernel panic system failure something else also accessing file exporting file system implement aio way patch doe bear similar risk however seems reasonable forgo crippling aio implementation favor developing patch fix problem linux nfsd reason stated earlier interim risk remain failing implement aio change problem nfsd created reason nfsd mistake block implementation aio also noted aio_cancel always return aio_notcanceled implementation possible implement aio_cancel deferring work taskqs use set callback function cancelling work sent taskqs simpler approach allowed specification  operation cancelable implementation defined  http onlinepubs 009695399 function aio_cancel.html program system capable using aio_cancel qemu beecrypt fio use according recursive grep system usr src debug suggests aio_cancel user rare implementing aio_cancel left future date clear consumer benefit implementation justify work lastly important know handling iovec update differs illumos linux implementation read write linux vfs responsibility whle illumos filesystem responsibility take intermediate solution copying iovec zfs code update like solaris leaving original alone imposes overhead could always revisit profiling show allocation problem signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 223 close 2373,,
4775,1ca56e603395b2d84c8043d5ff18f2082f57e6f1,lovezfs <ilovezfs@icloud.com>, 2014-09-04 23:06:55 -0700,2664, fragmentation display disabled com.delphix disabled value fragmentation printing uint64_max print issue caused small mistake merge 4980 metaslabs fragmentation metric upstream http github.com illumos illumos gate commit 2e4c998 zol http github.com zfsonlinux zfs commit f3a7f66 problem handling pool property added wrong section particular section zpool_get_state zhp lower already determined pool fact available upstream illumos correctly  thanks lundman helping track bug signed jorgen lundman lundman lundman.net signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2664,,
4776,f38dfec3fd3757fd02d8c7bb46fecdfc427678ce,lex Reece <alex@delphix.com>, 2014-09-04 16:08:28 -0700,2636, illumos 5049 panic removing log device reviewed george wilson george.wilson delphix.com reviewed mattew ahrens mahrens delphix.com reviewed paul dagnelie paul.dagnelie delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed saso kiselkov skiselkov gmail.com approved rich lowe richlowe richlowe.net reference http www.illumos.org issue 5049 http github.com illumos illumos gate commit 2986efa ported brian behlendorf behlendorf1 llnl.gov close 2636,,
4777,2078f21015b1f33329849997c9f918e5196806bd,tanislav Seletskiy <s.seletskiy@gmail.com>, 2014-09-03 16:41:10 +0700, , fix invalid locking order rename operation commit prevent deadlock running zfs rename ensuring called lock signed stanislav seletskiy s.seletskiy gmail.com signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2652 close 2525,,
4778,4f6a14798d43e20e50dac015e332328ec3eae36f,lteriks <alteriks@gmail.com>, 2014-07-26 18:45:15 +0200,1474, import zfs pool cryptsetup zfs import cache.service zfs import scan.service started cryptsetup ensure luks device opened signed alteriks alteriks gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1474,,
4779,0dfc732416922e1dd59028fa900d38d04dceaa12,lexey Smirnoff <fling@member.fsf.org>, 2014-08-30 09:13:26 +0700,2639, change default value give huge performance improvement operation deduped datasets especially bottleneck amount ram available zfs signed brian behlendorf behlendorf1 llnl.gov close 2639,,
4780,287be44f536e27d377518badd2bd8e2758db2be6,an Swartzendruber <dswartz@druber.com>, 2014-08-29 15:12:21 -0400,2616, improve handling filesystem version change mount code diagnose filesystem version supported current implementation change upgrade code likewise refuse upgrade pool filesystems version supported current implementation signed brian behlendorf behlendorf1 llnl.gov signed dan swartzendruber dswartz druber.com close 2616,,
4781,bcd9624d0f941bebf732f61bcb7bdbd223b0d396,ouwrentius <louwrentius@gmail.com>, 2014-08-30 00:14:20 +0200,2645, change delimiter zed email script 3600 option set zed.rc configuration file notification email rate limited rate limiting accomplished maintaining colon delimited state file includes device name unfortunately valid device name include colon therefore prevent rate limiting working properly reason delimiter changed semi colon signed louwrentius louwrentius gmail.com signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov close 2645,,
4782,76c3a616420c2b16c117adf8c845cc1e0d262301,alf Ertzinger <ralf@skytale.net>, 2014-04-12 13:51:29 +0200,2252, change startup mode zed change startup mode zed non forking systemd track process detach terminal fine running process non forking mode preferred mode operation also remove user group definition root root default signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2252,,
4783,8125fb71905cd97a5954db34014a455eb2c1c3d2,hris Dunlap <cdunlap@llnl.gov>, 2014-08-28 14:39:48 -0700,2252, cleanup zed logging set minor cleanup change related zed logging remove program identity prefix message written stderr since systemd already prepends output program name replace copy program identity string ptr reference replace pid pid consistency comment string rename zed_log.c struct _ctx component level priority add log_pid option message written syslog signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2252,,
4784,5a8855b716ad9177ed393769834ce9e08d2a3cfe,hris Dunlap <cdunlap@llnl.gov>, 2014-08-27 13:18:01 -0700,2252, fix race condition zed pidfile creation zed started forking daemon default race condition exists parent process terminate pidfile created grandchild process invoked type forking systemd service result following systemd starting zfs event daemon zed ... systemd pid file var run zed.pid readable yet start commit add daemonize pipe allow grandchild process signal parent process initialization complete pidfile created parent process wait notification exiting signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2252,,
4785,6c3c3387b1cc81bb428a934a8a97c3c583fb1280,rian Behlendorf <behlendorf1@llnl.gov>, 2014-09-02 14:16:37 -0700, , add missing author email address author file missing trailing patch fix typo signed brian behlendorf behlendorf1 llnl.gov,,
4786,c3f8dc2a48e0c310abb7b58019fbcf944fa2697c,urbo Fredriksson <turbo@bayour.com>, 2014-06-07 01:23:22 +0200,585, add pkgconfig file providing pkg config file make easy 3rd party application link libzfs library also allows libzfs developer modify list required library cflags without breaking existing application following example illustrates pkg config used pkg config cflags libs libzfs myapp myapp.c  myapp.c  void main  libzfs_handle_t hdl hdl libzfs_init hdl libzfs_fini hdl  signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 585,,
4787,9ad656b2d025a23ba27a4bc482638e753e62d947,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-27 14:12:18 -0700,585, retire have_ioctl_ configure check have_ioctl_ configure check originally added compatibility ancient version glibc support additional complexity longer needed therefore removed signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com close 585,,
4788,dea377c0d9d92bd7d10c0e2f006efa11ab28060a,atthew Ahrens <mahrens@delphix.com>, 2014-07-15 10:58:41 -0800,2598, illumos 4970 4974 extreme rewind enhancement 4970 need control issued zpool import 4971 zpool import accept hex value 4972 zpool import implies extreme rewind thus scrub 4973 spa_load_retry retries txg 4974 spa_load_verify read data twice reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com reviewed george wilson george.wilson delphix.com approved robert mustacchi joyent.com reference http www.illumos.org issue 4970 http www.illumos.org issue 4971 http www.illumos.org issue 4972 http www.illumos.org issue 4973 http www.illumos.org issue 4974 http github.com illumos illumos gate commit e42d205 note set patch add set tunable parameter extreme rewind mode pool import allows control traversal performed import ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2598,,
4789,49ddb315066e372f31bda29a5c546a9eccc8b418,atthew Ahrens <mahrens@delphix.com>, 2014-08-20 10:09:40 -0700,2615, illumos 5034 arc buf_hash_table small 5034 arc buf_hash_table small reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed richard elling richard.elling gmail.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 5034 http github.com illumos illumos gate commit 63e911b ported brian behlendorf behlendorf1 llnl.gov close 2615,,
4790,d09a99f96b4399cb0e2611b4b57c9e64d6097e19,ndrew Hamilton <ahamilto@tjhsst.edu>, 2014-08-13 10:58:08 -0400,2493, 2493 change efi_rescan wait longer change efi_rescan loop time instead ebusy sleep end loop help instance kernel doe reload partition table fast enough zfs detect signed andrew hamilton ahamilto tjhsst.edu signed brian behlendorf behlendorf1 llnl.gov close 2493,,
4791,0426c16804e572f088dd293029ab39fa75e1e203,saac Huang <he.huang@intel.com>, 2014-03-03 20:00:11 -0700,2158, fixed memory leak zevent handling nvlist_t could leaked error handling path also make sure argument zfs_zevent_post cannnot null signed isaac huang he.huang intel.com signed brian behlendorf behlendorf1 llnl.gov close 2158,,
4792,bd089c547784a4ab23fa20f307e8b23b0a622525,atthew Ahrens <mahrens@delphix.com>, 2014-07-15 03:43:18 -0400,2480, illumos 4631 zvol_get_stats triggering many read 4631 zvol_get_stats triggering many read reviewed adam leventhal ahl delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed matt ahrens mahrens delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4631 http github.com illumos illumos gate commit bbfa8ea ported boris protopopov bprotopopov hotmail.com signed brian behlendorf behlendorf1 llnl.gov close 2612 close 2480,,
4793,2fe5011008641d34d34ca9aabd27e2cfbf207e03,ichard Yao <ryao@gentoo.org>, 2014-08-14 14:59:12 -0400,2601, drive database update intel s3500 intel s3700 optimized handle 4kb sector well despite 8kb page size move new category enterprise drive receive ashift 12. joined intel 730 series disk controller well san disk enterprise drive drive two obtained drive_id utility drive 240gb intel 730 model extrapolated drive 480gb model lastly also add western digital mobile drive ryuo zfsonlinux freenode obtained ata wdc wd2500bevt running drive_id hardware additional drive family extrapolated identifer signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2601,,
4794,f9bde4f74be5e5030571415d9c869400dff3eda6,tf <s@ctrlc.hu>, 2014-08-17 00:16:08 +0200,382, avoid pagesize redefinition add ifndef pagesize avoid redefinition warning platform value already provided signed stf ctrlc.hu signed brian behlendorf behlendorf1 llnl.gov close 382,,
4795,8b0a0840b405c67d7a2d4a78c9ebeb04fcb9d988,im Chase <tim@chase2k.com>, 2014-08-14 07:01:20 -0500,2595, upgrade metaslab pool writable illumos 4982 added code proactively update space map feature enabled happen pool writeable reference http www.illumos.org issue 4982 http github.com illumos illumos gate commit 2e4c998 signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2595,,
4796,f3a7f6610f2df0217ba3b99099019417a954b673,eorge Wilson <george.wilson@delphix.com>, 2014-07-19 12:19:24 -0800,2595, illumos 4976 4984 metaslab improvement 4976 zfs avoid writing failing non redundant top level vdev 4978 ztest fails 4979 extend free space histogram device pool 4980 metaslabs fragmentation metric 4981 remove fragmented ops vector block allocator 4982 space_map object proactively upgrade feature enabled 4983 need collect metaslab information via mdb 4984 device selection use fragmentation metric reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal adam.leventhal delphix.com reviewed christopher siden delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4976 http www.illumos.org issue 4978 http www.illumos.org issue 4979 http www.illumos.org issue 4980 http www.illumos.org issue 4981 http www.illumos.org issue 4982 http www.illumos.org issue 4983 http www.illumos.org issue 4984 http github.com illumos illumos gate commit 2e4c998 note zdb option tasked display new metaslab fragmentation metric new zdb option used control maximum number flight new fragmentation metric derived space map histogram rolled vdev pool level presented user via zpool list add number module parameter related new metaslab weighting logic ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2595,,
4797,f67d709080f3d4a247191f0d25cbedc5da103f78,urbo Fredriksson <turbo@bayour.com>, 2014-07-25 12:42:00 +0200,2503, create overlay property add new overlay property default control whether filesystem mounted even mountpoint busy fail mountpoint empty overlay mount default mount behavior linux zfs decided following zfs behavior default overlay allows site administrator override decision per dataset basis signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2503,,
4798,194e56234a58fa39c22aada5210f06ddf62c69d5,ichard Yao <ryao@gentoo.org>, 2014-06-20 13:23:15 -0400,2411, include sys taskq.h linux vfs_compat.h included sys taskq.h directly use taskq code instead file included sys taskq.h also include sys kmem.h happened include sys taskq.h sys kmem.h longer doe must define include done first place signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2411,,
4799,dc55d791011b31317ad57ecb36be0a27b7647ef2,van Susarret <evansus@gmail.com>, 2014-03-20 16:21:34 -0400,2196, correct autodetection bootfs property remove line contain hyphen match instead root hyphen name fedora root fedora20 dev detected sed eliminated line output zpool list bootfs signed evan susarret evansus gmail.com signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2196,,
4800,ec18fe3ce8f27cfd86743f091d2d57e78dd8a5af,ichard Yao <ryao@gentoo.org>, 2014-06-29 01:00:02 -0400,370, cleanup vn_rename vn_remove zfsonlinux spl implemented linux 3.6 support adding duplicate vn_rename vn_remove function new one cleaner duplicate function made codebase maintainable add compatibility shim allow retire older vn_rename vn_remove favor new one old kernel result net 143 line reduction line code cleaner codebase signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 370,,
4801,449e75d76816a0074fef8f8962f5f91a51dd007e,lec Salazar <alec.j.salazar@gmail.com>, 2014-08-05 10:53:16 -0400,2588, avoid pagesize redefinition add ifndef pagesize avoid redefinition warning platform value already provided signed alec salazar alec.j.salazar gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2588,,
4802,22a11a5b5abc6b82972f8c6fa1d9b6efab3a4ab5,lec Salazar <alec.j.salazar@gmail.com>, 2014-08-05 09:10:54 -0400,2588, replace __va_list va_list code base already va_list specified iso gcc glibc provides typedef __gnuc_va_list va_list using gcc glibc expect find __gnuc_va_list signed alec salazar alec.j.salazar gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2588,,
4803,0d5c500d6cf4dd9e133cbffd82440c95d89478a4,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-31 11:19:47 -0700,2240, revert revert revert fix unlink xattr deadlock reverts commit 7973e46 brings basic flow code back line zfs implementation possible due following related change e89260a directory xattr znodes hold reference parent 6f9548c fix deadlock zfs_zget 0a50679 add zfs_iput_async interface 4dd1893 avoid 128k kmem allocation mzap_upgrade signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 457 close 2058 close 2128 close 2240,,
4804,0a50679ce9eb8ded7bf20685e9d32724ded9cb8d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-04 13:30:20 -0700,457, add zfs_iput_async interface handle iputs zfs_purgedir asynchronously prevent deadlock iputs allowed run synchronously destroy call path deadlock xattr directory inodes parent file inodes possible signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 457,,
4805,4dd18932ba4cfdcf9b16609f6a80c2d6c239cb15,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-05 13:46:49 -0700,2580, avoid 128k kmem allocation mzap_upgrade originally implemented mzap_upgrade function perform allocation using kmem_alloc large allocation potentially block indefinitely contiguous memory available since allocation done zap zap_rwlock appear deadlock zap_lockdir shown optimal fix would rework mzap_upgrade large allocation required could done would result diverging implementation therefore opted unless becomes absolutely necessary instead mzap_upgrade updated use zio_buf_alloc reliably provide buffer signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 2580,,
4806,2fc44f66ec9b83069593d87cf311069458c0d5ae,ed Bass <bass6@llnl.gov>, 2014-08-08 17:41:22 -0700,378, linux 3.17 compat remove wait_on_bit action function linux kernel 3.17 remove action function argument wait_on_bit add autoconf test compatibility macro support new interface former wait_on_bit interface required action function provided doe actual waiting function kernel many identical though case satisfied one two function one io_schedule one schedule api change made consolidate redundant wait function reference torvalds linux 7431620 signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 378,,
4807,50b25b2187134ac7b19cf93bd35a420223f1d343,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-05 13:57:59 -0700,2572, avoid dynamic allocation search zio part commit e8b96c6 search zio used function moved heap minimize stack usage functionally fine maximize performance best minimize number dynamic allocation avoid allocation temporary space search zio reserved vdev_queue structure access must serialized vq_lock signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 2572,,
4808,f2297b5a8932594a45c99d3d01b0d53a16ea9753,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-07 16:23:04 -0700,379, set 16384 default small object linux slab allocator used make efficient use memory however large object supported linux slab therefore spl implementation preferred cutoff 16k determined optimal architecture using page signed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net issue 356 close 379,,
4809,c1aef26944ca8bc18e9f46f464c2957890c707e9,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-07 16:14:41 -0700,379, set default reinstate correct default behavior returning number object cache reclaim behavior disabled recent release occasional report spinning shrink_slabs issue resolved longer reproduced see commit 376dc35 signed brian behlendorf behlendorf1 llnl.gov signed dhe git dehacked.net issue 358 close 379,,
4810,ab6f407faa0188219fb4852ac5e05f1934c985ee,rian Behlendorf <behlendorf1@llnl.gov>, 2014-08-06 09:59:01 -0700,2569, use km_pushpage function executed txg_sync context prevent potential deadlock due direct memory reclaim must use km_pushpage introduced recent zfs bookmark feature commit da53684 signed brian behlendorf behlendorf1 llnl.gov signed eric dillmann eric jave.fr close 2569,,
4811,1ffe90c5d3b63d2e7f9fab02da20671965e1d7b4,urbo Fredriksson <turbo@bayour.com>, 2014-07-19 01:45:49 +0200,1588, add bash completion aneurin price manually installed needed end user added repository kept date latest code signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1588,,
4812,5dbd68a352a04672c2f88654d1652cdf12f66708,atthew Ahrens <mahrens@delphix.com>, 2014-06-25 10:37:59 -0800,2558, illumos 4914 zfs disk bookmark structure named _phys_t 4914 zfs disk bookmark structure named _phys_t reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed richard lowe richlowe richlowe.net reviewed saso kiselkov skiselkov.ml gmail.com approved robert mustacchi joyent.com reference http www.illumos.org issue 4914 http github.com illumos illumos gate commit 7802d7b porting note number zfsonlinux specific zbookmark_t needed updated reduce likelihood problem like issue 2094 occurring ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2558,,
4813,1fa8f795d586208defe2ed499c691c5bc2e28eee,atthew Ahrens <mahrens@delphix.com>, 2014-06-05 13:34:21 -0800,2547, illumos 4881 zfs send performance regression embedded data 4881 zfs send performance degradation embedded block pointer encountered reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4881 http github.com illumos illumos gate commit 06315b7 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2547,,
4814,3bec585e6c86de869ba1bf132567ed2a01d6a15b,aso Kiselkov <saso.kiselkov@nexenta.com>, 2014-05-22 10:11:57 +0100,2555, illumos 4897 space accounting mismatch l2arc zpool 4897 space accounting mismatch l2arc zpool reviewed matthew ahrens mahrens delphix.com reviewed boris protopopov bprotopopov hotmail.com approved dan mcdonald danmcd omniti.com illumos issue tracker l2arc vdev space usage statistic calculated delta maximum minimum vdev offset ever written l2arc fill thread inform user much space two offset actually taken cached buffer fix change vdev space usage stats l2arc device accurately track volume buffer stored allowing user see exact l2arc usage zpool iostat reference http www.illumos.org issue 4897 http github.com illumos illumos gate commit 3038a2b ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2555,,
4815,fbeddd60b79690b6a6ececc9b00b6014d21405aa,atthew Ahrens <mahrens@delphix.com>, 2014-06-05 13:20:08 -0800,2545, illumos 4390 error corrupt space map deleting vol 4390 error deleting filesystem zvol lead space map corruption reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed adam leventhal ahl delphix.com reviewed dan mcdonald danmcd omniti.com reviewed saso kiselkov saso.kiselkov nexenta.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4390 http github.com illumos illumos gate commit 7fd05ac porting note previous stack reduction effort traverse_visitb caused fair number mergable piece code patch reduce stack footprint bit new local bptree_add dynamically allocated using kmem_zalloc purpose stack reduction new global defined integer rather boolean_t case related zfs_recover global also definition inserted zfs_debug.c consistency existing definition zfs_recover illumos placed spa_misc.c ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2545,,
4816,9b67f605601c77c814037613d8129562db642a29,atthew Ahrens <mahrens@delphix.com>, 2014-06-05 13:19:08 -0800,2544, illumos 4757 4913 4757 zfs embedded data block pointer zero block compression 4913 zfs release subject space check reviewed adam leventhal ahl delphix.com reviewed max grossman max.grossman delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4757 http www.illumos.org issue 4913 http github.com illumos illumos gate commit 5d7b4d4 porting note compatibility fastpath code zio_done function needed updated embedded data block pointer require dvas allocated associated vdevs marked therefore unmarked ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2544,,
4817,faf0f58c69607a15e2d1563567afb815842805de,atthew Ahrens <mahrens@delphix.com>, 2014-05-23 08:21:07 -0800,2542, illumos 3835 zfs need store copy metadata reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed dan mcdonald danmcd omniti.com approved richard lowe richlowe richlowe.net description matt ahrens bug report delphix add new zfs property value default current behavior setting cause store copy level indirect block user data file additional note new man page section property state exact behavior metadata block stored redundantly may change future release  set zfs store extra copy type metadata improve performance random writes metadata must written current implementation described matt blog controlled new global integer currently initialized set indirect block specified level higher additional ditto block created ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2542,,
4818,603cb25ca51ff89366886f9a4ed58f68b6aba2da,im Chase <tim@chase2k.com>, 2014-06-15 08:47:40 -0500,2534, zed need libzfs_core recent group illumos delphix update zed need libzfs_core order resolve likely function going forward signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2534,,
4819,672692c7b77cfcf1d7abbdec2388a08741a32c57,eorge Wilson <george.wilson@delphix.com>, 2014-04-18 08:35:03 -0800,2533, illumos 4754 4755 4754 issued near full luns even setting noalloc threshold 4755 longer needed reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com reviewed dan mcdonald danmcd omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4754 http www.illumos.org issue 4755 http github.com illumos illumos gate commit b6240e8 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2533,,
4820,9bd274ddd846cd4024ebe3253c7b2d4f3b6f9dc0,atthew Ahrens <mahrens@delphix.com>, 2014-04-15 19:40:22 -0800,2531, illumos 4374 4374 dn_free_ranges use range_tree_t reviewed george wilson george.wilson delphix.com reviewed max grossman max.grossman delphix.com reviewed christopher siden delphix.com reviewed garrett amore garrett damore.org reviewed dan mcdonald danmcd omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4374 http github.com illumos illumos gate commit bf16b11 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2531,,
4821,da536844d55b2f3aaefdaebd36fb97bb867494aa,atthew Ahrens <mahrens@delphix.com>, 2013-12-11 14:33:41 -0800,2530, illumos 4368 4369 4369 implement zfs bookmark 4368 zfs send filesystems readonly pool reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4369 http www.illumos.org issue 4368 http github.com illumos illumos gate commit 78f1710 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2530,,
4822,b0bc7a84d90dcbf5321d48c5b24ed771c5a128b0,ax Grossman <max.grossman@delphix.com>, 2013-12-09 10:37:51 -0800,2529, illumos 4370 4371 4370 avoid transmitting hole zfs send 4371 dmu code clean reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed josef jeff sipek jeffpc josefsipek.net approved garrett amore garrett damore.org reference http www.illumos.org issue 4370 http www.illumos.org issue 4371 http github.com illumos illumos gate commit 43466aa ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2529,,
4823,2bf35fb7547f2b66a1905b5ee86b467ff2d3c4b6,im Chase <tim@chase2k.com>, 2014-07-25 23:45:26 -0500,377, add atomic_swap_32 atomic_swap_64 atomic_swap_32 function map atomic_xchg atomic_swap_64 function map atomic64_xchg signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 377,,
4824,fa86b5dbb6d33371df344efb2adb0aba026d097c,atthew Ahrens <mahrens@delphix.com>, 2013-10-08 09:13:05 -0800,2528, illumos 4171 4172 4171 clean spa_feature_ interface 4172 implement feature use zpool feature reviewed max grossman max.grossman delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed jerry jelinek jerry.jelinek joyent.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4171 http www.illumos.org issue 4172 http github.com illumos illumos gate commit 2acef22 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2528,,
4825,62b693930876ba8d929632e1ba0ae5dc48a85001,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-25 12:22:45 -0700, , remove patch directory support zfs merged blkid grub therefore longer need carry stale patch zfs source tree signed brian behlendorf behlendorf1 llnl.gov,,
4826,79eb71dc6ca16d57893fb06ad6f8b73656651c60,urbo Fredriksson <turbo@bayour.com>, 2014-07-23 12:14:09 +0200,2522, support scripted mode zpool get functionality already available zfs get providing zpool get useful good consistency signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2522,,
4827,a60e668bd2d4c91ce1398bcf2f51636973abdd19,urbo Fredriksson <turbo@bayour.com>, 2014-06-03 16:36:14 +0200,2357, initial attempt document event payload way complete trial error deducing could mean need information someone know code better start lay basic structure adding additional detail signed turbo fredriksson turbo bayour.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2357,,
4828,093219a6b333d9e04dde3cbb282d262016ad5ef6,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-22 14:43:22 -0700,2524, zpool create.sh allow feature disabled zimport.sh script make use zpool create.sh script construct test pool importing older version zol desirable way disable feature new pool imported older code simplest flexible way achieve merge verbose_flag force_flag single zpool_flags variable content variable used zpool create allowing easily pas arbitrary flag signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 2524,,
4829,1139491da702a160a2ea927d1d737a2cb45e51e8,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-18 12:22:40 -0700,2010, revert disable gccs aggressive loop optimization reverts commit signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2010,,
4830,aca19e063b5126aab797f5739faaf3ddc82bd587,an Engelhardt <jengelh@inai.de>, 2014-07-18 20:00:27 +0200,2010, attempt access beyond declared end dn_blkptr array loop dnp dn_nblkptr blk_fill dnp dn_blkptr .blk_fill invokes _undefined behavior_ common case dn_nblkptr therefore compiler free whatever want optimizing away otherwise messing expections fix honest array size signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2511 close 2010,,
4831,7f23e0010977ffa492d6df57aee0c97ce8e74278,im Chase <tim@chase2k.com>, 2014-04-26 20:56:03 -0500,363, add function macro used upstream added highbit64 howmany used recent upstream code highbit highbit64 point factored use optimized fls64 function signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov signed tim chase tim chase2k.com close 363,,
4832,377e12f14a2c3694c3a733782b91ae7beecc44f3,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-16 14:00:57 -0700,374, rate limit debugging stack trace issue past excessive debug logging console resulted significant performance impact vast majority case stack trace required diagnose issue therefore stack trace dumped console limited every signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 374,,
4833,7a8f0e80eae9053ebe6a3c5ce5f3360e8df8de2f,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-21 10:19:25 -0700,2488, zfs_trunc use dmu_tx_assign txg_wait part write throttle schedule performance work zfs_trunc function updated use txg_wait using txg_wait ensures part next txg txg_nowait used retried erestart error suffer starvation signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 2488,,
4834,080b3100155c472f8c8a380db2458bf70bd13279,eorge Wilson <george.wilson@delphix.com>, 2014-06-12 15:29:11 -0800,2488, illumos 4756 fix deadlock 4756 could deadlock reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd omniti.com reviewed saso kiselkov saso.kiselkov nexenta.com approved garrett amore garrett damore.org function grab mg_lock later try grab metaslab lock lock ordering may lead deadlock since consumer mg_lock grab metaslab lock first reference http www.illumos.org issue 4756 http github.com illumos illumos gate commit 30beaff ported prakash surya surya1 llnl.gov signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2488,,
4835,3c51c5cb1f1c6097ecbfd18aa1177ba0f67c215e,eorge Wilson <george@delphix.com>, 2014-05-19 12:04:04 -0800,2488, illumos 4730 destroy metaslab group taskq 4730 metaslab group taskq destroyed reviewed alex reece alex.reece delphix.com reviewed matthew ahrens mahrens delphix.com reviewed sebastien roy sebastien.roy delphix.com reviewed rich lowe richlowe richlowe.net reviewed dan mcdonald danmcd omniti.com approved dan mcdonald danmcd omniti.com reference http www.illumos.org issue 4730 http github.com illumos illumos gate commit be08211 porting note zfsonlinux one effect destroying taskq zdb would never exit due spl taskq implementation ported tim chase tim chase2k.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2488,,
4836,93cf20764a1be64a603020f54b45200e37b3877e,eorge Wilson <george.wilson@delphix.com>, 2013-10-01 13:25:53 -0800,2488, illumos 4101 4102 4103 4105 4106 4101 metaslab_debug allow fine grained control 4102 space_maps store information 4103 space map object blocksize increased 4105 removing mirrored log device result leaked object 4106 asynchronously load metaslab reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com reviewed sebastien roy seb delphix.com approved garrett amore garrett damore.org prior patch space_maps preferred solely based amount free space left unfortunately heuristic contain information make free space meant could keep preferring loading highly fragmented space map actually enough contiguous space satisfy allocation unloading space_map repeating process change modifies space_map store additional information contiguous space space_map use information make better decision space_map load requires reallocating space_map object increase bonus buffer size size enough fit new metadata feature enabled via new feature flag introduced change com.delphix addition patch allows space_map block size increase currently block size set size certain implication including following sector device see compression benefit large space_maps require metadata disk large space_maps require time load typically random read space_map block size adjust needed maximum size set via variable bug fixed resulted potentially leaking object removing mirrored log device previous logic vdev_remove deal removing top level vdevs interior vdevs i.e mirror correctly problem would occur removing mirrored log device result dtl space map object leaked top level vdevs dtl space map object associated reference http www.illumos.org issue 4101 http www.illumos.org issue 4102 http www.illumos.org issue 4103 http www.illumos.org issue 4105 http www.illumos.org issue 4106 http github.com illumos illumos gate commit 0713e23 porting note handful kmem_alloc call converted kmem_zalloc also km_pushpage tq_pushpage flag used necessary ported tim chase tim chase2k.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2488,,
4837,1be627f5c28a355bcd49e4e097114c13fae7731b,rakash Surya <surya1@llnl.gov>, 2014-07-11 13:03:29 -0700, , move call change move called function original placement call within appears simple mistake introduced aligns closely upstream illumos code base signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
4838,1e8db7710220332808920a582e5794d6fc37b109,rian Behlendorf <behlendorf1@llnl.gov>, 2014-07-15 13:29:57 -0700,2405, fix zil_commit null dereference update current code ensure inodes never dirtied part read file system snapshot somehow get dirtied attempt make made write disk case snapshot zil result null dereference zil_commit signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2405,,
4839,a5778ea2427bd340e3b4f697d9b6e1452bd71909,ichard Yao <ryao@gentoo.org>, 2014-06-08 14:10:14 -0400,2372, zdb introduce verbatim import given pool name via zdb would attempt import failed would attempt verbatim import behavior always desirable switch added zdb control behavior specified verbatim import done otherwise behavior previously except verbatim import done failure signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2372,,
4840,2fbc542ebdee773ab45fd0d35029d6978aa5900b,eorge Wilson <george.wilson@delphix.com>, 2013-10-04 14:13:23 -0800,2467, illumos 4168 4169 4170 ztest zdb zhack fix 4168 ztest assertion failure dbuf_undirty 4169 verbatim import cause zdb segfault 4170 zhack leaf pool active state reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4168 http www.illumos.org issue 4169 http www.illumos.org issue 4170 http github.com illumos illumos gate commit 7fdd916 porting note particular interest troubleshooting corrupted pool commonly used zdb operation may perform verbatim import furthermore soon direct support verbatim import via new option 4169 fix eliminates common segfault case try access opened dsl_pool_t ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2451 close 2283 close 2467,,
4841,f4a4046bd60523c2d5d9c3ed85e74c3d08638393,im Chase <tim@chase2k.com>, 2014-07-09 22:36:03 -0500,2483, convert module parameter document parameter added illumos issue 4081 committed zfsonlinux patch document parameter allows set module parameter signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2483,,
4842,d5869641416362c82bb7f090d13af4b86a7270f9,atthew Ahrens <mahrens@delphix.com>, 2013-03-24 13:24:51 -0800,2456, illumos 3641 compressed block histogram zdb patch zdb extension option producing histogram physical compressed block size per dmu object type disk bbbb option zdb uncover new feature example usage new pool snippet output generates zpool create tank dev dev urandom tank 1kfile count dev urandom tank 3kfile count 64k dev urandom tank 64kfile count zdb bbbb tank ... 68.0k 68.0k 68.0k 22.7k 1.00 34.26 zfs plain file psize 512 byte sector number block       ... 127 128 ... block also broken indirection level expanding example zfs set recordsize tank dev urandom tank 2x1kfile count zdb bbbb tank ... 16k 16.00 1.02 zfs plain file psize 512 byte sector number block  70.0k 70.0k 70.0k 14.0k 1.00 35.71 zfs plain file psize 512 byte sector number block       ... 127 128 86.0k 71.0k 72.0k 12.0k 1.21 36.73 zfs plain file psize 512 byte sector number block       ... 127 128 ... single block indirect block needed 2x1kfile file created well two block file used get distribution block size used within pool per object type basis reference http illumos.org issue 3641 http github.com illumos illumos gate commit 490d05b ported tim chase tim chase2k.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed boris protopopov me.com close 2456,,
4843,61e99a73bc34d602639c5a991abdc1e011a52d8d,ndrew Barnes <barnes333@gmail.com>, 2014-06-10 16:29:12 +1000,1208, preserve asize last mirror child promoted top level vdev smaller different sized child vdev mirrored vdev detached pool autoexpand property set remaining larger vdev promoted top level vdev fails retain asize original top level mirror vdev therefore partially autoexpands partially autoexpanded state leaf new vdev large mirror adding smaller vdev back pool fails utilize space next imported autoexpand property set child vdev grows size promoted top level vdev expected commit cause remaining child mirror retain asize old parent mirror vdev autoexpand property set allows smaller vdev added required vdev told expand required usual using zpool online signed brian behlendorf behlendorf1 llnl.gov signed andrew barnes barnes333 gmail.com signed george wilson george.wilson delphix.com close 1208,,
4844,f6a869614e5bdf9a3819a845f7a90d8c9ede0fc3,im Chase <tim@chase2k.com>, 2014-06-18 15:22:50 -0500,367, safer debugging assertion macro spl debugging assertion macro macro used typical form else friendliness however limit use context loop valid within another multi statement style macro following macro converted use panic assert assertf verify verify3_impl panic converted wrapper around new spl_panic function macro converted use operator branch predicition conditional also use spl_panic __assert macro touched used debugging infrastructure code including macro retired tracepoint patch merged signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 367,,
4845,b8fce77b08d110e5f1b8d3161b888b3e6f8e750c,arrison Jensen <garrison.jensen@gmail.com>, 2014-06-15 10:17:45 -0700,2402, fix comment spelling error signed garrison jensen garrison.jensen gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2402,,
4846,52e68edc2d486f530610ed0fe14f80cf50b31067,im Chase <tim@chase2k.com>, 2014-06-21 09:38:32 -0500,2416, document optional device argument zpool split zfs implementation seemed missed bit documentation additional text based freebsd man page signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2416,,
4847,09c0b8fe5e95935d529e6b5d1135f66b232d271d,im Chase <tim@chase2k.com>, 2014-06-13 07:45:08 -0500,2320, return default value numeric property failing head check update referenced fix caused numeric property lookup consider type parent head dataset checking validity case caller expects see property default value even lookup invalid one case true change_one part renaming infrastructure may look zoned snapshot volume valid expects see default value false may yet unidentified case used technically invalid property expect property default value returned signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov turbo fredriksson turbo bayour.com close 2320,,
4848,ee4712284cd6c0532b6fb78e23a3799f4ccdd675,an McDonald <danmcd@omniti.com>, 2014-06-23 22:25:02 -0400,2429, illumos 4936 fix potential overflow lz4 4936 lz4 could theoretically overflow pointer certain input reviewed saso kiselkov skiselkov.ml gmail.com reviewed keith wesolowski joyent.com approved gordon ross gordon.ross nexenta.com ported tim chase tim chase2k.com reference http illumos.org issue 4936 http github.com illumos illumos gate commit 58d0718 porting note fix widely reported year old vulnerability lzo lz4 implementation inherited said bug reference implementation signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2429,,
4849,4240dc332d2ca41c31d95a81d9217c1b311666ff,im Chase <tim@chase2k.com>, 2014-06-28 09:08:44 -0500, , comment lack added several comment regarding removal exists reference implementation removed since used signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov,,
4850,d4aae2a05475ed7a9b39bd0c6b4fe99085a1cbd5,rian Behlendorf <behlendorf1@llnl.gov>, 2014-06-26 16:36:13 -0700,2421, improve differing sector size error adding replacing vdev different sector size error message useful addition describing problem provide hint ashift option used override optimal default value since using non optimal value may incur significant performance penalty issue error numerous reason administrator may wish anyway signed niklas edmundsson znikke github signed brian behlendorf behlendorf1 llnl.gov close 2421,,
4851,628668a39f48e836260965e5b33e101c78f16b79,urbo Fredriksson <turbo@bayour.com>, 2014-06-25 13:59:32 +0200,2024, add information option zpool replace user need aware replacing device existing pool may need override automatically detected ashift value depend exact hardware using signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue 2024,,
4852,1567e0758b1674ff06ca1eaaaf4a3bbd04fb201e,enH <sen@senhaerens.be>, 2014-06-26 15:26:21 -0700,2419, fix man zpool property feature_guid property name get mangled explanation due property length fixed putting explanation next line  unsupported feature_info rmation unsupported feature enabled pool see zpool feature detail  unsupported feature_guid information unsupported feature enabled pool see zpool feature detail signed senh sen senhaerens.be signed brian behlendorf behlendorf1 llnl.gov close 2419,,
4853,07dabd234dd51a1e5adc5bd21cddf5b5fdc70732,rian Behlendorf <behlendorf1@llnl.gov>, 2014-06-12 11:55:52 -0700, , tag zfs 0.6.3 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4854,5d2107d82b21e81d718f3381d8eb572429b72e61,rian Behlendorf <behlendorf1@llnl.gov>, 2014-06-12 13:11:26 -0700,2310, fix zfs.spec.in default commit 2ee4e7da accidentally introduced two issue occur rebuilding zfs source rpm outside zfs build system _dracutdir _udevdir _udevruledir macro must checked using undefined keyword overlooked patch review doe cause failure using make pkg value provided make target default _udevruledir path included typo signed brian behlendorf behlendorf1 llnl.gov issue 2310,,
4855,31cb5383bff0fddc5058973e32a6f2c446d45e59,rian Behlendorf <behlendorf1@llnl.gov>, 2014-06-12 11:32:38 -0700, , tag spl 0.6.3 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
4856,2ee4e7da9081207e847088be682c0eee48a2284a,urbo Fredriksson <turbo@bayour.com>, 2014-06-06 16:07:58 +0200,1680, accept udev dracut path specified configure two common location udev dracut component commonly installed building package using make rpm deb target check common location pas rpmbuild non standard configuration value provided following configure option udevdir dir install udev helper default check udevruledir dir install udev rule udevdir rules.d dracutdir dir install dracut helper default check rebuilding using source package per distribution default value specified spec file used preferred way build package distribution ability override default provided convenience signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2310 close 1680,,
4857,7f6884f419f822f89609f6ed7595f78d12c31834,rian Behlendorf <behlendorf1@llnl.gov>, 2014-06-10 14:37:13 -0700,2384, revert fix __zio_execute asynchronous dispatch reverts commit limited asynchronous dispatch kernel space want two reason slightly headroom user space excessively deep stack observed running ztest see 2293 removing conditional make pipeline behave consistently regardless executing kernel space user space way likely uncover subtle issue ztest signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2384,,
4858,0f629346bb335d8521600ae1491884fe8a8a2d27,urbo Fredriksson <turbo@bayour.com>, 2014-06-09 23:27:09 +0200,306, set lang reasonable default set lang calling rpmbuild avoid rpmbuild failing translated date string changelog signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 306,,
4859,1e929b97ac3fd0aa752feba9f08caeb5356e9a43,urbo Fredriksson <turbo@bayour.com>, 2014-06-09 23:35:42 +0200,306, set lang reasonable default set lang calling rpmbuild avoid rpmbuild failing translated date string changelog signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 306,,
4860,21b446a79e2ebd372d34c81a1d97f5f4519ebea9,urbo Fredriksson <turbo@bayour.com>, 2014-06-06 20:58:58 +0200,1130, document option zpool import option existed long time historically undocumented guaranteed safe used last resort attempting recover damaged pool signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1130,,
4861,27b293be8af2cd83ae26ef50e6ee12600dce1d5b,im Chase <tim@chase2k.com>, 2014-06-04 07:23:31 -0500,2361, expand description scan related parameter document scan related parameter fact applicable scrub resilver operation appropriate expand prefetch related description add clarification module parameter signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2361,,
4862,beb4be77b706ea48a02da581f80e36660692b2f5,urbo Fredriksson <turbo@bayour.com>, 2014-06-06 19:41:18 +0200,1641, man page update zfs share remove reference share unshare dfstab since applicable linux add exact exportfs command line used setting sharenfs signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue 1641,,
4863,022f7bf68e2868890a4b1957d5ee0a67909dfd1a,urbo Fredriksson <turbo@bayour.com>, 2014-06-06 18:47:10 +0200,2024, document fact ashift vdev specific pool global user need aware adding device existing pool may need override automatically detected ashift value depend exact hardware using signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2024,,
4864,480f62655d2a4c8fa9e3cf12f1245b455edac349,urbo Fredriksson <turbo@bayour.com>, 2014-06-06 16:59:11 +0200,2241, automatically mount clone canmount according man page noauto option set dataset mounted unmounted explicitly dataset mounted automatically dataset created imported .... cloning dataset canmount property honored patch add required check achieve behavior described man page signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2241,,
4865,7a870db1b90db4ca31b67fbe856fd426431fa8b5,erek Dai <daiderek@gmail.com>, 2014-06-02 01:27:58 +0800,2353, export pool prevent cache removed signed derek dai daiderek gmail.com signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2353,,
4866,69c7bdb6e70644bb2efebcee4bf109ace08eb0be,urbo Fredriksson <turbo@bayour.com>, 2013-11-16 03:29:53 +0000,1874, accept kernel source dir specified configure add ability set location kernel via defines building spec file useful building kernel installed non standard location signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1874,,
4867,8b974ba036972d601542deec08d68a422a70c9f6,en Allen <bsallen@alcf.anl.gov>, 2014-06-02 20:04:57 +0000,2355, update spec file enable systemd rhel7 signed ben allen bsallen alcf.anl.gov signed brian behlendorf behlendorf1 llnl.gov close 2355,,
4868,c9b5cc8c00bd702d675108bb03365091fc9138a5,urbo Fredriksson <turbo@bayour.com>, 2014-05-17 13:20:59 +0200,2145, move library separate package day one various zfs library placed sub package primarily allows multiple major version library concurrently installed also facilitates smaller build environment minimizing required dependency specific change required split library utility follows libzpool2 libnvpair1 libuutil1 libzfs2 package added contain versioned shared library fedora packaging guideline discourage providing static library included package http wiki packaging guideline zfs devel package renamed libzfs2 devel new package obsoletes old zfs devel package package includes required header libzpool2 libnvpair1 libuutil1 libzfs2 library respective unversioned shared library package eventually split individual lib devel package still take work cleanly separate therefore libzfs2 devel package provides expected lib devel package proper dependency still created http wiki packaging guideline devel_packages moved sbin ldconfig execution zfs packge new library package described packaging guideline http wiki packaging guideline usr share doc file moved libzfs2 devel package updated config deb.am aware packaging change ensures deb utils make target convert resulting package generated rpm utils target signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2329 close 2341 issue 2145,,
4869,2024041b6c5134a925a33c10eff24a47ecb541a6,ichard Yao <ryao@gentoo.org>, 2014-04-23 00:04:41 -0400,2330, remove superfluous statement clang static analyzer reported value assigned pcksum never used initialize pcksum pcksum fairly pointless however effect generating false positive clang static analyzer since noise false positive obscure real issue fix anyway signed richard yao ryao gentoo.org signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2330,,
4870,4def05f8a68f7255dfb88606a9b475314c828a06,ichard Yao <ryao@gentoo.org>, 2014-04-22 23:35:38 -0400,2330, fix memory leak clang static analyzer reported memory leak upon review turn right short lived leak daemon use functionality doe preclude possibility third party daemon use let fix good samaritan signed richard yao ryao gentoo.org signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2330,,
4871,62a05896e8a438a980912236bc2b00fcce71c015,hris Wedgwood <cw@f00f.org>, 2014-05-26 17:09:45 -0700,2349, allow building without acls kernel definition buried inside ... endif logic acls acls available definition get lost causing build fail signed chris wedgwood f00f.org signed brian behlendorf behlendorf1 llnl.gov close 2349,,
4872,866c162340f3ff3810e2c5fcfd05f95446abd6c2,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-29 13:36:24 -0700, , fix dkm package upgrade packager running yum upgrade zfs dkm package could appear work properly still leave zfs module installed occur zfs release version incremented may case fast moving zfs testing repository upgrade process dkm realize zfs x.y.z already installed remove dkm correctly build new module zfs x.y.z however final step old zfs x.y.z removed preun script run remove newly build module handle case preun script updated run installed version exactly match full spec file version change also updated changelog section based dkm reference spec file signed brian behlendorf behlendorf1 llnl.gov,,
4873,4cdcdbff636763fbdae72e2f7e1f9e7971649cca,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-29 14:06:32 -0700, , fix dkm package upgrade packager running yum upgrade spl dkm package could appear work properly still leave spl module installed occur spl release version incremented may case fast moving spl testing repository upgrade process dkm realize spl x.y.z already installed remove dkm correctly build new module spl x.y.z however final step old spl x.y.z removed preun script run remove newly build module handle case preun script updated run installed version exactly match full spec file version change also updated changelog section based dkm reference spec file signed brian behlendorf behlendorf1 llnl.gov,,
4874,79aada6105f3aa3698df28cc10fe30a51c5b47aa,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-29 15:03:43 -0700, , restrict release number meta version creating package git repository release number automatically set git describe normally work well repository newer tag match form name version release may incorrectly calculated prevent match patten restricted content meta file name version signed brian behlendorf behlendorf1 llnl.gov,,
4875,c4f38ddd8003ef51e7f4e92607b1838216650730,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-29 14:55:40 -0700, , restrict release number meta version creating package git repository release number automatically set git describe normally work well repository newer tag match form name version release may incorrectly calculated prevent match patten restricted name version signed brian behlendorf behlendorf1 llnl.gov,,
4876,6795a698f4ec2f49abef843d5de8f7b55abdfffe,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-14 18:17:39 -0700,2337, use default slab type override default memory type kmem cache done previously force certain object slightly object size limit cut kmc_kmem cache better performance zfsonlinux spl 356 patch slightly increase default cut 511 byte 1024 byte x86_64 mean long longer need override default cache since default value used new tunables apply kmem cache following list cache impacted object size forced type default type  dnode_t 936 byte kmc_kmem kmc_kmem zio_cache 1104 byte kmc_kmem kmc_vmem zio_link_cache byte kmc_kmem kmc_kmem zio_vdev_cache 131088 byte kmc_vmem kmc_vmem zio_buf_512 512 byte kmc_kmem kmc_kmem 512 byte kmc_kmem kmc_kmem zio_buf_1024 1024 byte kmc_kmem kmc_kmem 1024 byte kmc_vmem kmc_kmem cache memory type change kmc_kmem kmc_vmem cache memory type change kmc_vmem kmc_kmem patch remove another slight point divergence zol illumos signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 2337,,
4877,376dc35e228498da7703e7ca4c2b75d16763c23b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-16 09:29:21 -0700,358, add module option correct behavior registered shrinkers return number object cache theory allows linux balance memory reclaim across registered cache commit b9b3715 behavior disabled favor returning notifies additional object available reclaim done workaround resolve thrashing shrink_slabs could occur memory low numerous core reclaim unfortunately observed increase likelihood oom event spl slab consumer responsible consuming majority memory therefore patch make behavior tunable setting module option 0x1 result shrinker called default behavior signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 358,,
4878,a073aeb0604b7d410be58135fb9d5c43671af263,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-08 17:01:45 -0500,356, add kmc_slab cache type small object linux slab allocator several advantage counterpart spl include memory efficient pack object tightly continually tuned maximize performance therefore make sense layer spls slab allocator top linux slab allocator allows leverage advantage preserving illumos semantics depend however thing need careful linux slab allocator never designed work well large object spl slab must still handle use case cut limit added transition linux slab backed object kmem vmem backed slab object equal size byte backed linux slab default value zero disables linux slab functionality reasonable value cut limit range 4096 16386 byte object equal size byte backed kmem slab object size vmem backed instead value default page 512 byte x86_64 architecture aware using linux slab may inadvertently introduce new deadlock care taken previously ensure allocation occur write path use gfp_noio however may internal allocation performed linux slab honor flag case deadlock may occur path forward definitely start relying linux slab happen need start building confidence unexpected surprise lurking ideally need move completely away using spls slab large memory allocation patch first step note kmc_nomagazine flag leveraged support linux slab backed cache supported kmem vmem backed cache regardless spl_kmem_cache_ _limit setting cache may explicitly set given type passed kmc_kmem kmc_vmem kmc_slab flag cache creation constructor destructors reclaim callback functional called regardless cache type kmc_slab cache appear proc spl kmem slab due issue involved presenting correct object accounting instead appear proc slabinfo name several kmem splat test needed fixed relied incorrectly internal kmem slab accounting updated test case splat test pas expected autoconf test added ensure __gfp_comp flag correctly added default flag used allocating slab required ensure page higher order slab properly refcounted see ae16ed9 using slub allocator need attempt set __gfp_comp flag default behavior slub since linux 2.6.25 using slub may desirable set slub_nomerge kernel parameter prevent cache merged original patch dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov signed tim chase tim chase2k.com signed dhe git dehacked.net signed chunwei chen tuxoko gmail.com close 356,,
4879,58bd7ad060b4675c47389844da25f7c25a209704,arcel Huber <marcelhuberfoo@gmail.com>, 2014-05-21 11:17:23 +0200,2345, omit compiler warning sticking raii resolve gcc 4.9.0 20140507 warning uninitialized ptr using wmaybe uninitialized first two case appears appear legitimate second two general good practice initialized signed marcel huber marcelhuberfoo gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2345,,
4880,5f3c101b8ff05a5af9e83a5e86b5019bd6b02a3c,ohn Albietz <inthecloud247@gmail.com>, 2014-03-11 16:39:35 -0700,2184, added intel ssd 530 series intel ssd 530 series ... ssdsc2bw24 signed john albietz inthecloud247 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2184,,
4881,f9a1ac4d59c2a7b0d0065eccd1d68fcc32541f5b,C <mmttdebbcc@yahoo.com>, 2014-05-14 20:58:11 -0400,2336, honor file vdevs consistency disk vdevs honor tunable setting available primarily debugging performance analysis signed mmttdebbcc yahoo.com signed brian behlendorf behlendorf1 llnl.gov close 2336,,
4882,83021b47c2870c0ba948cbcfe08f41bd7730f5fb,im Chase <tim@chase2k.com>, 2014-05-10 20:13:12 -0500,2343, calculate header size correctly sa_find_sizes case variable sized overlap spill block pointer new variable sized added header size improperly calculated include moved problem could reproduced xattr enabled follows perl print 120 blah setfattr blahblah blah symlink large enough interfere spill block pointer typical registration follows shown modified zdb dddd attr layout obj format ... zpl_dacl_count zpl_dacl_aces zpl_symlink adding xattr attempt extend registration ... zpl_dacl_count zpl_dacl_aces zpl_symlink zpl_dxattr since zpl_symlink interferes spill block pointer must also moved spill block registration zpl_symlink zpl_dxattr commit update extra_hdrsize condition occurs allowing hdrsize subsequently decreased appropriately signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov issue 2214 issue 2228 issue 2316 issue 2343,,
4883,3937ab20f32fc7b79cacfd91c0891f4e1b4ab2de,im Chase <tim@chase2k.com>, 2014-05-08 09:51:01 -0500,2301, allow lock free reading restructure allow lock free reading converting simple singly linked list item never deleted forward iteration performed depends among thing atomicity accessing zs_minor integer zs_next pointer fix lock inversion used sync task txg_sync indirectly user program dev zfs zfsdev_release method lock block sync task typical failure scenerio occurs sync task cleaning user hold various concurrent zfs command progress neither illumos solaris affected issue use ddi interface provides lock free reading device state via function signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2301,,
4884,1cbae971c5ef215d1036b65511a839879e446c4c,ichard Yao <ryao@gentoo.org>, 2014-05-17 09:35:10 -0400,2342, handle zpool status verbatim import cause hostid mismatch thing otherwise work zpool status doe handle fail assertion enabled  zpool cmd zpool zpool_main.c 4418 status_callback assertion reason zpool_status_ok failed program received signal sigabrt aborted  let instead add case display informative message  pool rpool state online status mismatch pool hostid system hostid imported pool pool previously imported system different hostid verbatim imported system action export pool system imported import correct mismatch see http zfsonlinux.org msg zfs 8000 scan scrub repaired 0h8m error thu apr 2014 config name state read write cksum rpool online sda online error known data error  signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2342,,
4885,bc25c9325b0e5ced897b9820dad239539d561ec9,hunwei Chen <tuxoko@gmail.com>, 2014-05-13 10:36:35 +0800,2270, use dedicated taskq vdev_file originally vdev_file used system_taskq would cause deadlock especially system cpu reason prefetcher thread system_taskq sometimes blocked waiting finish prefetcher thread consume task system_taskq served thus result deadlock fix creating dedicated vdev_file_taskq vdev_file signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2270,,
4886,ad3412efd7cc2debb0f9f354d3f5e105a99d97e1,hunwei Chen <tuxoko@gmail.com>, 2014-05-07 10:54:37 -0700,355, linux 3.15 vfs_rename added flag argument detect updated vfs_rename interface call extra flag argument reference torvalds linux 520c8b1 signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 355,,
4887,1538f4b6e3cc08c334f58b0025aa7de1d6c97e1a,hunwei Chen <tuxoko@gmail.com>, 2014-05-07 10:57:19 -0700,355, linux 3.15 compat nice_to_prio prio_to_nice macro exposed make available part kernel module reference torvalds linux 6b6350f signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 355,,
4888,2c33b9127569ad62b4cfe7dd4f651ceeee3d005c,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-05 11:28:12 -0700,1891, handle vdev_lookup_top failure function incorrectly assumes call vdev_lookup_top fail however null dereference clearly show certain circumstance possible note offset 0x570 1376 map expected bug unable handle kernel null pointer dereference 00000570 crash struct vdev struct vdev uint64_t vdev_id ... ... 1376 uint64_t given happen patch add required error handling case vdev_lookup_top fails assume deflation occur dva use asize signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed alexey zhuravlev intel.com close 1707 close 1987 close 1891 signed brian behlendorf behlendorf1 llnl.gov,,
4889,962d52421236fc9cd61d59b4f18cff3276077da9,im Chase <tim@chase2k.com>, 2014-04-21 13:22:08 -0500,2265, check dataset type rigorously fetching property fetching property value snapshot check head dataset type must performed previously additional check performed fetching version normalize utf8only case caused zpl property acltype exec device nbmand setuid xattr erroneously displayed meaningless value snapshot volume also allow display volsize snapshot volume patch add headcheck flag paramater indicate check done head dataset type order property valid snapshot handled correctly allows head check performed fetching property snapshot signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2265,,
4890,1ce0457348aeb26754ced9b575aa374fcd8dff8b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-06 10:35:54 -0700, , fix style minor style issue accidentally introduced aa7d06a change resolve style problem signed brian behlendorf behlendorf1 llnl.gov,,
4891,aa7d06a98a2b3b0d864aadd310113c52b946b842,eorge Wilson <george.wilson@delphix.com>, 2014-03-31 17:22:55 -0700,2227, illumos 4101 finer grained control metaslab_debug today metaslab_debug logic performs two task load metaslabs import open unload metaslabs end spa_sync change provides knob independently reference http illumos.org issue 4101 http github.com illumos illumos gate commit 0713e23 note small piece metaslab improvement patch illumos worth bringing rest since low risk useful fragmented pool e.g lustre mdts would give performance benefit old metaslab_debug option without causing unwanted delay pool import ported ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2227,,
4892,cc79a5c263802b58de62b190e264c7f61b6235c9,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-02 12:26:47 -0700,2294, treat spill block dbufs meta data system attribute object exceed stored bonus area dnode spill block allocated spill block currently considered data block however accounted meta data effectively extension dnode may seem like minor accounting issue broader implication key thing aware spill block hold reference parent dnode dnode turn hold reference dbuf dnode object mean single 512 byte data buffer spill block pin 16k meta data analogous small file situation described 2b13331 relatively small number data buffer cause arc exceed meta limit however unlike small file case spill block legitimately considered meta data changing spill block meta data dropped cache meta limit reached allows dnodes dbufs spill block pinning released signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 2294,,
4893,51268f31a8a5d5c7a48a449437001f77591587f2,rian Behlendorf <behlendorf1@llnl.gov>, 2014-05-01 16:22:01 -0700,2166, remove selinux enforcing check init script default selinux policy rhel fedora updated include zfs list filesystems support xattrs therefore longer need detect init script reference http show_bug.cgi 811532 http show_bug.cgi 816543 signed brian behlendorf behlendorf1 llnl.gov close 2166,,
4894,7809eb8b65bec8e8ea09b2ea645d320e0b3a1710,ichard Yao <ryao@gentoo.org>, 2014-04-30 12:51:28 -0400,1970, ztest switch lwp rwlock interface ztest intended subject zfs code userland stress able withstand failure occur running failure likely would occur inside kernel however userland much easier debug practice prevents large number problem reaching production code design decision made original author ztest make distinction userland locking primitive kernel locking primitive ztest code call userland locking primitive kernel code run userland call emulated kernel locking primitive wrap userland locking primitive ztest first ported linux decision made use emulated kernel interface everywhere effect userland rw_rdlock rw_wrlock became kernel rw_enter userland rw_unlock became kernel rw_exit caused regression assertion rw_enter catch recursive locking permitted userland kernel consequently ztest code doe recursive read locking use emulated kernel interface consequently caused following failure ztest lib libzpool kernel.c 384 assertion rwlp rw_owner 0x1c87150 0x1c87150 failed occurs take read lock call call ztest_io take readlock asked triggered assertion pthreads rwlock interface based lwp rwlock interface implemented illumos libc luckily enough subset used ztest almost identical solve problem switching lwp thread rwlock interface ztest eliminates point divergence illumos make code sharing slightly easier signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1970,,
4895,3af3df905fb43dd3a3957f3daea7777a434fee05,ichard Yao <ryao@gentoo.org>, 2014-04-30 13:12:27 -0400,1970, libspl implement lwp rwlock interface implement subset lwp rwlock interface wrapping equivalent posix thread interface superset feature needed ztest missing bit rw_read_held rw_write_held signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1970,,
4896,c6e924fea8fd2abc1359ad08e51bf326cbeb3ed4,ichard Yao <ryao@gentoo.org>, 2014-04-28 19:27:58 -0400,2288, fix libblkid zfs detection making new pool zfsonlinux zfs fixed particular string overlooked signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2288,,
4897,12f9a6a3f954b3bb8de94e3bfc072d42b7231abc,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-28 13:56:47 -0700,2287, dmu_tx_assign return enomem described comment dmu_tx_assign function must fail pool space reason assigned memory pressure erestart must returned alternately eagain could returned inject delay required caller block condition variable waiting next txg  assign transaction group txg_how one  txg_wait current open txg full wait new one used holding lock fail truly space quota ...  signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 2287,,
4898,9d317793aa66d05a8c44410ea24a9a4166a89bbd,ichard Yao <ryao@gentoo.org>, 2011-07-01 15:56:35 -0700,1691, implement file attribute support add support lsattr chattr resolve regression caused broke python xattr.list changet broke gentoo portage feature xattr depended python xattr.list attribute common solaris linux supported linux lsattr chattr command file attribute exclusive solaris present zfs code accessed modified method case prior patch resolution issue zfsonlinux zfs 229 implement method permit access modification solaris specific attribute reference http bugs.gentoo.org show_bug.cgi 483516 original patch brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1691,,
4899,3b4f425a5a321c02f6cf10e2ffba891ff79b80c6,ichard Yao <ryao@gentoo.org>, 2014-04-29 22:42:09 -0400,1691, refactor autotools check need zfs file attribute addition xattrs file move file change comprehensive fail known good api detected signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1691,,
4900,78597769b488633c9b61ded8ede0c8790b849b75,lovezfs <ilovezfs@icloud.com>, 2014-04-29 22:47:14 -0700,2284, fill mountpoint buffer using error fill mountpoint buffer upstream need called mountpoint buffer used error message particular return zfs_error_fmt hdl dgettext text_domain mount mountpoint come call signed brian behlendorf behlendorf1 llnl.gov signed ilovezfs ilovezfs icloud.com close 2284,,
4901,17584980b9ca6fc1aecb520ffc520cd306624854,hunwei Chen <tuxoko@gmail.com>, 2014-04-24 11:11:02 +0800,2277, add assertion catch count page network related block device tcp_sendpage behave well using count page add assertion catch runtime dependency zfsonlinux spl ae16ed9 fix crash using zfs ceph rbd signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2277,,
4902,cdf37f0c596bbdca8464ccf99482725507724fae,orgen Lundman <lundman@lundman.net>, 2014-04-16 12:20:31 +0900,2260, add support aarch64 armv8 using arm reference simulation fast model foundation cross compiled spl zfs confirm work armv8 bit arm architecture called aarch64 linux based previous arm porting resulting patch disappointingly small little code fix compile issue light testing done signed jorgen lundman lundman lundman.net signed brian behlendorf behlendorf1 llnl.gov close 2260,,
4903,703371d8c734bc2cc6350f1bca014f08245dcc69,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2013-08-28 05:09:25 +0300,336, evenly distribute taskq thread across available cpu problem described commit however instead disabling binding cpu altogether keep last cpu index across call taskq_create thus achieve even distribution taskq thread across available cpu implementation based assumption task queue initialization performed serial manner signed andrey vesnovaty gmail.com signed andrey vesnovaty andreyv infinidat.com signed brian behlendorf behlendorf1 llnl.gov close 336,,
4904,ae16ed992bd0ef5a55b04d9edaaa6456674315f9,hunwei Chen <tuxoko@gmail.com>, 2014-04-22 16:45:36 +0800,251, fix crash using zfs ceph rbd using get high order memory first page _count set internal page get passed rbd eventully tcp_sendpage called get_page put_page get freed erroneously _count jump back solution problem use compound page page high order compound page share single _count get_page put_page tcp_sendpage cause _count jump signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 251,,
4905,d6e6e4a98eef03971213044d4277edd56dda61ab,orgen Lundman <lundman@lundman.net>, 2014-04-16 12:18:38 +0900,351, add support aarch64 armv8 using arm reference simulation fast model foundation cross compiled spl zfs confirm work armv8 bit arm architecture called aarch64 linux based previous arm porting resulting patch disappointingly small little code fix compile issue light testing done signed jorgen lundman lundman lundman.net signed brian behlendorf behlendorf1 llnl.gov close 351,,
4906,de39ec11b885f97e6256324ee89eaf75af9852f6,ed Bass <bass6@llnl.gov>, 2014-04-18 13:29:43 -0700,1965, fix lz4 endianness autodetection endianness detection lz4 broken user space build bug corrupts compressed data manifest several ztest failure lz4 originally ported illumos zfs proper check linux stripped linux port inherited remaining detection code work illumos linux current lz4 endianness check misuse condition defined __big_endian indicate big endian system linux __big_endian defined uncondtionally user space header usr include endian.h regardless endianness system kernel doe use header user space build affected could fix restoring upstream lz4 endianness detection code reliable check already exist libspl include sys isa_defs.h change libspl result replace word size endianness check lz4 simplifying code reducing duplication signed ned bass bass6 llnl.gov signed chunwei chen tuxoko gmail.com signed dhe git dehacked.net signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov fix 1963 fix 1964 fix 1965,,
4907,4fd762f8ad59f5840c790357a0e50f15cc9ccc08,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-17 10:06:37 -0700,2262, fix zfsdev_ioctl kmem leak warning due asymmetry kmem accounting memory leak reported accounting issue memory allocated kmem_alloc must released kmem_free properly accounted case code used strfree release memory allocated kmem_alloc presumably done size memory region available memory needed freed resolve issue code updated use strdup instead kmem_alloc allocate memory like strfree strdup integrated memory accounting mean use strfree release like illumos spl kmem leaked 4368729 byte address size data func line zzzzzzzzzz zfsdev_ioctl 5655 signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed chunwei chen tuxoko gmail.com close 2262,,
4908,e0b8f6290216a3d10af008a160617d89517fc631,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-16 16:06:24 -0700, , various zimport.sh fix splsrc srcdir changed src_dir vestige earlier version script missed updated additionally ensure directory created fail function take integer argument error code return otherwise success mistakenly returned error incorrectly suppressed error code meaningful enough determine script failed signed brian behlendorf behlendorf1 llnl.gov,,
4909,b066274a773b8dcac329786f95a2e4ea52a291a1,im Chase <tim@chase2k.com>, 2014-04-14 10:33:16 -0500,2257, report atime relatime property actual value neither atime relatime considered temporary mount point property semantics enforced completely within zfs also correctly documented temporary mount point property signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2257,,
4910,2dbedf5484bd81dde024eeca80e172af8ad871ac,HE <git@dehacked.net>, 2014-04-15 19:50:56 -0400,2259, uninitialized variable spa_autoreplace used caught ztest valgrind signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 2259,,
4911,89aa97059d7ddad668a5118aef7914743162a5e8,ichard Yao <ryao@gentoo.org>, 2013-08-04 19:48:24 -0400,349, change default setting behavior consistent way memory reclaim expected work linux signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 349,,
4912,0b75bdb369df4e0dab96b2778a6421773268df21,hunwei Chen <tuxoko@gmail.com>, 2014-02-25 17:32:21 +0800,2142, use ddi_time_after friend compare time also make sure use clock_t ddi_get_lbolt prevent type conversion screwing thing signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2142,,
4913,bdfbe594a109933e72103bd720d2c6aa560dc400,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2014-02-06 12:08:46 +0200,337, expose max min objs per slab max slab size default maximal number object slab exceed slab size exceed 32m today high end server couple hundred ram available arc may run trouble virtual memory restriction mentioned  problem reason high number virtual memory allocation real slab size small relative size entire ram slab allocated virtual memory fill entire arc result high number allocated virtual memory range hundred range virtual memory subsystem manages high number range performance become poor freeze time time solution number object per slab increased taking account maximal slab size also increased needed signed andrey vesnovaty gmail.com signed brian behlendorf behlendorf1 llnl.gov close 337,,
4914,545e9ac00a813ed13d6b67c86d058c9048d78552,hunwei Chen <tuxoko@gmail.com>, 2014-02-25 17:16:55 +0800,335, add ddi_time_after friend comparing time gotten ddi_get_lbolt take account wrap around jiffy therefore use instead use patch add ddi_time_after friend address issue strict type restriction clock_t vanilla int64_t version prevent type conversion screwing thing signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 335,,
4915,6c48cd8ac223eb00cb4dadebcbe4ce1dfdfc6b76,uxuan Shui <yshuiv7@gmail.com>, 2013-11-02 00:14:05 +0800,303, patch add ctassert macro compile time assertion macro make compile spit mixed definition code warning find way avoid patch lay groundwork persistent l2arc feature see http www.illumos.org issue 3525 signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 303,,
4916,acf0ade362cb8b26d67770114ee6fa17816e6b65,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-11 21:16:36 -0400,224, simplify hostid logic plenty compatibility code hw_hostid used anything time apparently issue current hostid logic coredumb zfsonlinux freenode reported fedora change hostid every boot required force importing pool suggestion wca adopt freebsd behavior treat hostid zero etc hostid doe exist adopting freebsd behavior permit eliminate plenty code including userland helper invokes system hostid fallback signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 224,,
4917,3ceb71e8966e5f1895885eeaaa9354ffd940b490,im Chase <tim@chase2k.com>, 2014-04-11 08:55:10 -0500,347, call kthread_create correctly fixed argument kernel kthread_create function defined ... va_list variant moment task name pre formatted local buffer passed kthread_create fixed argument signed chunwei chen tuxoko gmail.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 347,,
4918,888f7141a3fcb73e2ec254de7628eee12022c4fc,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-10 16:03:33 -0700, , make zimport.sh bash dependency explicit unfortunately zimport.sh test script really doe depend bash moving bin possible shared infrastructure script depends made portable signed brian behlendorf behlendorf1 llnl.gov,,
4919,b761912b3473f09a642eea21d609ce9bc1c91546,hunwei Chen <tuxoko@gmail.com>, 2014-03-29 20:26:17 +0800,2124, linux 3.14 compat dmu_req_copy changed taking bio_vec taking bio_vec provide take signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2124,,
4920,22760eebeff0e0ad826132b1be1113eecb39938a,hunwei Chen <tuxoko@gmail.com>, 2014-03-29 19:50:30 +0800,2124, revert fix zvol btrfs hang dmu_req_copy change bi_io_vecs touched longer needed reverts commit signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2124,,
4921,215b4634c77b7914078baad9260ea854af85ec33,hunwei Chen <tuxoko@gmail.com>, 2014-03-29 19:49:55 +0800,2124, refactor dmu_req_copy immutable biovec change originally dmu_req_copy modifies bv_len bv_offset bio_vec continue subsequent pass however immutable biovec change linux 3.14 allowed instead tell dmu_req_copy many byte already copied skip right spot accordingly signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2124,,
4922,d4541210f3e07930dfefb6723d21cd8b313bb156,hunwei Chen <tuxoko@gmail.com>, 2014-03-28 15:08:21 +0800,2124, linux 3.14 compat immutable biovec change vdev_disk.c bi_sector bi_size bi_idx moved bio bio bi_iter patch creates bio_bi_ bio macro hide difference signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2124,,
4923,408ec0d2e13188f6f500f7010b5bc5bc5bf5bb9c,hunwei Chen <tuxoko@gmail.com>, 2014-03-28 12:59:36 +0800,2124, linux 3.14 compat posix_acl_ create chmod posix_acl_ create chmod changed __posix_acl_ create_chmod signed chunwei chen tuxoko gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2124,,
4924,443c3f73321d18d0092b11390e628e3de9d15d7c,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-10 10:44:00 -0700, , improve zfs.sh error message ensure error message logged zfs.sh script fails either load module udev fails create dev zfs device error message missing kernel_modules suppressed functionality may built kernel signed brian behlendorf behlendorf1 llnl.gov,,
4925,ed650dee76e928ce266e9d204637516d3a375b77,im Chase <tim@onlight.com>, 2014-04-09 13:40:12 -0500,346, inline function defined static inline variable argument cause gcc generate error distros signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 346,,
4926,6ac770b1961b9468daf0c69eae6515c608535789,hris Dunlap <cdunlap@llnl.gov>, 2014-04-08 15:31:36 -0700,2248, replace mkdirp processing directory component starting root dir contained bug checking return value mkdir typo made test mkdir_errno eexist erroneously written mkdir_errno eexist leading directory component already existed bug would cause routine exit creating remaining directory component instead fixing mkdir_errno test commit replaces mkdirp cleanup already planned existed realize mkdirp already tree time signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2248,,
4927,7368eb621e6c94dd8fd37020568f32c120afabf9,hris Dunlap <cdunlap@llnl.gov>, 2014-04-08 15:31:11 -0700,2248, set errno mkdirp called null path ptr mkdirp called null ptr path arg return errno unchanged unexpected since error return set errno one error value listed mkdir commit set errno enoent null ptr case accordance error specified mkdir enoent component path prefix doe exist null pathname signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2248,,
4928,cc9ee13e1a36511decb526bf84146e20a846b3d6,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-08 16:46:13 -0700,2249, dynamically create loop device several tree regression test depend availability loop device reason loop device available test fail normally issue linux distribution create loop device default enough purpose however recent fedora release creating single loop device lead failure alternately something else system using loop device may see failure fix update support script dynamically create loop device needed script need create node dev loop driver create minor behavior supported loop driver age additionally patch update cleanup loop device already file store deleted help prevent stale loop device accumulating system due test failure signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close 2249,,
4929,787c455ed7a519bbf2e56140621259eb7b23b6fb,ichard Yao <ryao@gentoo.org>, 2014-01-09 12:52:10 -0500,2175, improve partition detection lesser used device format string efi_get_info intended extract main device partition number however done correctly device format string ram loop device misparse input cause partition device incorrectly labelled main device partition labelled reported ilovezfs ilovezfs icloud.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2175,,
4930,17a527cb0f44cef6582583e502621541061d8817,im Chase <tim@chase2k.com>, 2014-03-26 08:29:24 -0500,339, support post 3.13 kthread_create semantics provide wrapper kernel kthread_create provide pre 3.13 semantics try call interrupted would returned enomem otherwise return null signed chunwei chen tuxoko gmail.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 339,,
4931,e19101e08f25708b03e5ff98a4da5756cfd709f7,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-07 14:31:21 -0700, , splat cred groupmember fix false positive due certain assumption made cred groupmember test could result false positive run specific distribution solely bug test case groupmember function test case validating prevent future false positive test case rewritten rigerous make fewer assumption system minor style cleanup done groupmember function signed brian behlendorf behlendorf1 llnl.gov,,
4932,668d2a0da5d542983ab200b35732d44c8b724305,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-07 15:40:20 -0700, , splat kmem slab_reclaim test cleanup setting __gfp_noretry kernel memory reclaim logic allowed abort early dump falled allocation stack console since done tight loop fill memory could result large number stack dumped console turn slowed test sufficiently exceeded time limit failed resolve issue __gfp_noretry flag removed called originally ensure simulating behavior caller use gfp_kernel flag addition reclaim granularity 1000 object far coarse realistic test kmem slab_reclaim might thousand object total cache therefore constant test lowered cause reclaim callback run frequently make better test case frequency cache reaping kmem slab_reap increased accommodate reduced number object released reclaim change impact test case done remove false positive caused test case signed brian behlendorf behlendorf1 llnl.gov,,
4933,b79e1f1f27e72e0603beb176c9d8e4c78bc62c95,urbo Fredriksson <turbo@bayour.com>, 2014-02-03 21:54:40 +0000,2103, allow specifying opts default init script signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue 2103,,
4934,e37212f9a28e2b74f9d7ba6c0845a309ed49366a,urbo Fredriksson <turbo@bayour.com>, 2014-02-03 21:52:50 +0000,2103, support using overlay mount default init script signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov issue 2103,,
4935,cbca6076b33e3d1af330e0e1f00cbf1baaf26d82,ohn M. Layman <jml@frijid.net>, 2014-03-26 13:17:17 -0400,1611, fix reading etc mtab continuation etc mtab updated linux done atomically rename new mtab written existing mtab unlinked new mtab renamed etc mtab mean must close old file open new file get updated content using rewind move file pointer back start file freopen close open file commit rewind call replaced freopen allow updated mtab entry picked immediately signed john layman jml frijid.net signed brian behlendorf behlendorf1 llnl.gov close 2215 issue 1611,,
4936,f3ad9cd67ae57760a7ec9e8cdb0e33aa8bbea4d0,ichard Yao <ryao@gentoo.org>, 2014-03-25 17:49:47 -0400, , fix locking order zfs_zget signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
4937,6f9548c487dbcf958f2f226c5f1eac2b85f8f78e,ichard Yao <ryao@gentoo.org>, 2014-03-25 15:41:18 -0400,180, fix deadlock zfs_zget zfsonlinux zfs 180 occurred race inode eviction zfs_zget zfsonlinux zfs 36df284 tried address making call vfs learn whether inode evicted evicted operation retried dropping reacquiring relevant resource unfortunately introduced another deadlock info task kworker u24 891 blocked 120 second tainted 3.13.6 echo proc sys kernel disables message kworker u24 891 0x00000000 workqueue writeback flush zfs    call trace schedule 0x24 0x70 0x99 0xc0 find_inode_fast 0x78 0xb0 ilookup 0x65 0xd0 zfs_zget 0xdb 0x260 zfs zfs_get_data 0x46 0x340 zfs zil_add_block 0xa31 0xc00 zfs zil_commit 0x12 0x20 zfs zpl_putpage 0x174 0x840 zfs do_writepages 0x1c 0x40 0x3b 0x2b0 0x247 0x420 wb_writeback 0xe3 0x320 0xfe 0x490 0x16c 0x490 worker_thread 0x113 0x390 kthread 0xdf 0x100 patch implement original fix slightly different manner order avoid deadlock instead relying call ilookup block return value igrab used give information ilookup provided without risk deadlock alternately race could closed registering sop drop_inode callback callback would need detect active hold thereby informing vfs inode evicted signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 180,,
4938,8ac67298b175f98de07e040456d0fe7b1841a5eb,rian Behlendorf <behlendorf1@llnl.gov>, 2014-04-03 14:26:16 -0700, , revert fixed use free bug zfs_zget reverts commit signed brian behlendorf behlendorf1 llnl.gov,,
4939,7c05c6185bd77a4b7f4e111d581d9ca70b30eab9,hris Dunlap <cdunlap@llnl.gov>, 2014-04-02 15:41:47 -0700,2, merge branch zed initial zed monitor zfs event zevent posted zed run script enabled corresponding zevent class multiple script may invoked given zevent zevent nvpairs passed script environment variable refer zed manpage detail event processed synchronously single thread maximum timeout script execution consequently misbehaving script delay forever block processing subsequent zevents plan address future commits eid event identifier added event uniquely identify throughout lifetime loaded zfs kernel module monotonically increasing integer reset time module loaded initial script developed log zevents syslog automatically rebuild hot spare device send email response checksum data resilver.finish scrub.finish zevents enable email notification configure zed_email zed.rc serving config file sort proper configuration file implemented enable hot sparing uncomment zed.rc note autoexpand property yet supported zed work progress signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
4940,518eba14928ddf2c1871d33d4b0cdff7ec45bc23,hris Dunlap <cdunlap@llnl.gov>, 2014-04-01 14:21:56 -0700,2, replace check _posix_memlock have_mlockall zed support cmdline opt lock page memory via mlockall _posix_memlock define checked determine whether function supported current test assumes mlockall supported _posix_memlock non zero however test insufficient according mlock sysconf _posix_memlock mlockall supported _posix_memlock availability must checked runtime commit add autoconf check mlockall user.m4 zed code block mlockall guarded test have_mlockall defined mlockall called runtime availability checked via return value signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
4941,904ea2763e6576f6971be4a684e6765aaea5221c,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-24 15:47:46 -0800,2, add automatic hot spare functionality vdev start getting checksum error possible automatically rebuild hot spare device cleanly support functionality shell script additional information added zevent ereports include vdev cover checksum zevents may used script illumos fma solution information required retrieved libzfs library interface specifically following member added list vdev path hot spare list vdev guids hot spare read error problematic vdev write error problematic vdev checksum error problematic vdev default required hot spare script installed functionality disabled enable hot sparing uncomment  etc zfs zed.d zed.rc configuration file script add support autoexpand property minimum requires adding new udev rule detect new device added system also requires autoexpand policy ported illumos see http github.com illumos illumos gate blob master usr src cmd syseventd module zfs_mod zfs_mod.c support detecting correct name vdev whole disk added turbo fredriksson signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov signed turbo fredriksson turbo bayour.com issue,,
4942,d21705eab952e5aa1c0bcf920b76e8428384d80b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-24 15:43:07 -0800,2, add missing output functionality always missing zevents included array string missed however changed ensure information output correctly zpool event implemented signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov issue,,
4943,1a5c611a2281b792634672a267b9c9cd7b60ef12,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-24 15:27:59 -0800,2, make command line guid parsing tolerant several zfs utility allow pas vdev guid rather device name however utility consistent parse guid example zinject expects guid passed hex value zpool replace want decimal user forced know format use patch improve thing making parsing tolerant strtol called using base rather say accept hex decimal octal input based prefix man page base zero string may include prefix number read base otherwise zero base taken decimal unless next character case taken octal note may additional conversion caught patch signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov issue,,
4944,11a7043324b3df606b7d7e8f214cbe2eba076446,hris Dunlap <cdunlap@llnl.gov>, 2014-03-11 12:33:32 -0700,2, add systemd unit file zed commit add systemd unit file zed.service integrates zfs.target commit 881f45c signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2108 issue,,
4945,9e246ac3d8ef9ff8aed86ecf277eea2cae3a79d3,hris Dunlap <cdunlap@llnl.gov>, 2014-01-21 13:30:03 -0800,2, initial implementation zed zfs event daemon zed monitor zfs event zevent posted zed run script enabled corresponding zevent class multiple script may invoked given zevent zevent nvpairs passed script environment variable event processed synchronously single thread maximum timeout script execution consequently misbehaving script delay forever block processing subsequent zevents plan address future commits initial script developed log event syslog send email response checksum data error resilver.finish scrub.finish event default email sent zed_email variable configured zed.rc serving config file sort proper configuration file implemented signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
4946,8c7aa0cfc47578d1d38f80ecb7c66eed7cde5c59,hris Dunlap <cdunlap@llnl.gov>, 2014-02-12 10:30:18 -0800,2, replace block parm flag called blocking mode specifying non zero value block parameter however design zfs event daemon zed requires additional functionality instead adding additional argument function make sense use flag bitwise together commit replaces int block parameter unsigned bitwise flag parameter also defines zevent_none specify default behavior since non blocking mode specified existing zevent_nonblock flag default behavior becomes blocking mode effect inverts previous use block parameter existing caller modified check zevent_nonblock flag signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
4947,07917db9908516aa3fd55d39d2c1792aca8bebcd,hris Dunlap <cdunlap@llnl.gov>, 2014-01-06 16:15:45 -0800,2, add defs makefile installation dir var add macro definition am_cppflags propagate makefile installation directory variable libexecdir runstatedir sbindir sysconfdir http www.gnu.org software autoconf manual autoconf 2.69 html_node installation directory variables.html corollary use variable except makefiles instance instead trying evaluate datadir configure hard coding makefiles using e.g. datadir datadir data directory add ddatadir datadir makefile definition cppflags am_cppflags also using automake runstatedir directory installing data file program modify run pertain one specific machine need persist longer execution program http www.gnu.org prep standard html_node directory variables.html defined autoconf 2.70 later default localstatedir run http gitweb autoconf.git commit signed chris dunlap cdunlap llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
4948,9b101a73203faecdc6d466fe446d787bc341ee14,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-22 16:00:39 -0800,2, clarify comment due poorly chosen argument name cleanup_fd completely unclear file descriptor used track current cursor location file descriptor created opening zfs_dev private cursor created kernel returned file descriptor subsequent call require file descriptor argument reposition cursor file descriptor closed kernel state tracking cursor destroyed patch contains functional change change variable name clarifies documentation signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov issue,,
4949,75e3ff58feda2d836c4546c5dc2e98fcd2d1a67b,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-22 14:52:16 -0800,2, add functionality ioctl added allow user space caller seek around zevent file descriptor eid specific eid passed exists cursor positioned eid longer cached kernel enoent returned caller may also pas zevent_seek_end seek respective location signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov issue,,
4950,a2f1945ee3ce8eba02ef54168c72f3be8f2cebdc,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-22 11:20:41 -0800,2, add unique eid value zevents tagging zevent unique monotonically increasing eid event identifier provides required infrastructure user space daemon reliably process zevents writing eid persistent storage daemon safely resume left event stream restarted signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov issue,,
4951,4d8c78c84445c099873c77c9fa20287dca982ed5,unnar Beutner <gunnar@beutner.name>, 2014-03-21 13:27:18 +0100,2201, remount datasets zfs inherit changing property zfs inherit cause datasets remounted ensures modified property value propagated filesystem namespace enforced change modeled identical fix made zfs_prop_set signed gunnar beutner gunnar beutner.name signed brian behlendorf behlendorf1 llnl.gov close 2201,,
4952,1de1488fdc0b0f54e7ac05fadae1902df104cba3,ichard Yao <ryao@gentoo.org>, 2014-03-21 11:10:36 -0400,2135, linux 3.13 compat handle __must_check torvalds linux added __must_check caused autotools check break zfsonlinux zfs intended correct depended wno unused result unrecognized older gcc version commit reverted favor solution doe require wno unused result signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2102 close 2135,,
4953,6b6b8d10418bc0679cecac7885a1e6d6ba4967a1,ichard Yao <ryao@gentoo.org>, 2014-03-21 11:07:28 -0400,1906, revert properly ignore return value older gcc version obey wno unused result reverts commit favor solution doe require wno unused result signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1906,,
4954,0ed212dc0e858a68c912b517e7c63fa9d0dc2701,oris Protopopov <boris.protopopov@nexenta.com>, 2014-03-20 16:55:09 -0700,2198, illumos 4089 null pointer dereference arc_read 4089 null pointer dereference arc_read reviewed matthew ahrens mahrens delphix.com reviewed saso kiselkov skiselkov.ml gmail.com reviewed garrett amore garrett damore.org approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4089 illumos illumos gate signed brian behlendorf behlendorf1 llnl.gov issue 2171 issue 2165 close 2198,,
4955,d3773fda1434e02587d4848aa18f9657cbfca5bd,uri Pankov <yuri.pankov@nexenta.com>, 2014-03-20 15:21:37 -0700,2152, illumos 3120 zinject hang zfsdev_ioctl due uninitialized 3120 zinject hang zfsdev_ioctl due uninitialized reviewed richard lowe richlowe richlowe.net reviewed eric schrock eric.schrock delphix.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3120 illumos illumos gate ported brian behlendorf behlendorf1 llnl.gov close 2152,,
4956,a15dac42df202bf9e6825a62b81a36ad449ef53f,hunwei Chen <tuxoko@gmail.com>, 2014-03-15 14:24:40 +0800,2191, config compile test rather run test testing compiler flag need compile test otherwise configure fail configure error run test program cross compiling cross compiling signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2191,,
4957,26b42f3f9d03f85cc7966dc2fe4dfe9216601b0e,ichard Yao <ryao@gentoo.org>, 2013-07-01 10:57:04 -0400,2189, implement option zpool import temporary pool name originally user handle spa namespace collision either exporting already imported pool specifying new name pool conflicting name case root pool virtual guest neither approach collision resolution reasonable addressed extending new name syntax option specify new name temporary specified set internal flag passed kernel tell label update refer name used original label consequently original pool name retained export signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2189,,
4958,8959b29e31975a281acc411e9f60203f09716e79,ichard Yao <ryao@gentoo.org>, 2014-01-20 19:47:21 -0500,2174," assert alignment valgrind suggests address returning properly aligned let add assertion 87740 address 0x1012a22a 554 byte inside block size 4,096 alloc 87740 0x4c2bba0 memalign usr lib64 valgrind amd64 linux.so 87740 0x4c2bcc7 posix_memalign usr lib64 valgrind amd64 linux.so 87740 0x52fa845 zio_buf_alloc umem.h 101 87740 0x52f6226 zil_alloc_lwb zil.c 463 87740 0x52f8559 zil_commit zil.c 566 87740 0x40611d ztest_freeze ztest.c 5909 87740 0x4066a7 ztest_init ztest.c 6048 87740 0x407af4 main ztest.c 6226 signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2174",,
4959,312f82ce65f37ed60f440194623fe38cdb1f601d,saac Huang <he.huang@intel.com>, 2014-03-11 17:05:46 -0600,2179, sighandler take argument stopping arcstat.py always end error typeerror sighandler take argument given since special signal handling done sighandler simpler set sigint handler sig_dfl terminates script signed brian behlendorf behlendorf1 llnl.gov signed isaac huang he.huang intel.com close 2179,,
4960,d9119bd66df789cbd43d0f6aef4cd43b6baba58c,rian Behlendorf <behlendorf1@llnl.gov>, 2014-03-20 11:02:26 -0700,2182, revert sighandler take argument reverts commit favor cleaner implementation signed brian behlendorf behlendorf1 llnl.gov issue 2182,,
4961,00fcdee1f88f5f1413913f26ebd1cc43107e82e0,ndrey Vesnovaty <andrey.vesnovaty@gmail.com>, 2013-11-26 16:21:23 +0200,2156, fix regression introduced port illumos 3744 remove redundant call done char array freed fix upstream regression introduced commit zfsonlinux zfs ported illumos 3744 change signed andrey vesnovaty gmail.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 2156,,
4962,e2282ef57edc79cdce2a4b9b7e3333c56494a807,ichard Yao <ryao@gentoo.org>, 2013-07-01 10:06:59 -0400,2178, remove unused option zpool import signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2178,,
4963,202619623022722f30c2ee49931a4fa6896421c7,ichard Yao <ryao@gentoo.org>, 2013-12-26 15:51:35 -0500,2177, switch ztest mmap asserts verifys small bit cleanup ensure ztest fails early system mmap functioning automated testing primary consumer ztest functional change debugging always enabled signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2177,,
4964,85802aa42bf8f878022ec73ddde6bf3702f67d01,ichard Yao <ryao@gentoo.org>, 2014-01-20 20:30:04 -0500,2174, free prop ztest_init valgrind complained absolutely right prop nvlist freed ztest_init signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 2174,,
4965,0bb89b6c594259829556f6dea5a89e722f214fd3,saac Huang <he.huang@intel.com>, 2014-03-10 23:16:33 -0600,2182, sighandler take argument stopping arcstat.py always end error typeerror sighandler take argument given patch corrects error updating signal handler take correct number argument signed isaac huang he.huang intel.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2182,,
4966,4e1c9f9c48186f61b5fbe1dd8bc150d48a9b9431,saac Huang <he.huang@intel.com>, 2014-03-10 23:27:56 -0600,2183, make arcstat.py default one header per screen today arcstat.py print one header every hdr_intr default line would consistent utility like vmstat hdr_intr defaulted terminal window size i.e one header per screenful output signed isaac huang he.huang intel.com signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2183,,
4967,4e26f2fccd8935c35017a18b0b5ae90464e6b8fe,urbo Fredriksson <turbo@bayour.com>, 2014-03-05 11:07:02 +0100,2161, fix name section manpages zhack fsck.zfs debian gnu linux program called linitian used make sure package conforms debian gnu linux packaging guide line fix problem reported zfsutils manpage bad whatis entry usr share man man1 zhack.1.gz zfsutils manpage bad whatis entry usr share man man8 fsck.zfs.8.gz something zol need addhere every man page name section special way two well signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2161,,
4968,47fe91b54c9c2d844059d50cb9622d7bbde9da27,oris Protopopov <boris.protopopov@nexenta.com>, 2013-08-30 12:12:45 -0700,2162, illumos 4088 use free arc_release 4088 use free arc_release reviewed matthew ahrens mahrens delphix.com reviewed garrett amore garrett damore.org reviewed saso kiselkov skiselkov.ml gmail.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4088 illumos illumos gate illumos issue race induced use free occurs arc_release arc header used outside critical section protected hash_lock ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 2162,,
4969,a45fc6a677bee01c0461b848e6e47ac3cb7797df,im Chase <tim@chase2k.com>, 2014-03-08 17:01:16 -0600,2168, use km_pushpage spa_add nvlist used sync context pool version upgrade signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2168,,
4970,e74400155f40f21361e9e3015396c3b0152a33fd,rian Behlendorf <behlendorf1@llnl.gov>, 2014-03-07 09:57:28 -0800, , export symbol dsl_sync_task _nowait needed consumer i.e lustre wish perform callback syncing context blocking non blocking version available caller signed brian behlendorf behlendorf1 llnl.gov,,
4971,a77c4c8332ea17293bb6565409f8c04a6dd2135b,ed Bass <bass6@llnl.gov>, 2014-02-28 15:07:00 -0800,1915, improve reporting assignment wait time caller dmu_tx_assign use txg_nowait flag call dmu_tx_wait retrying assignment fails wait time caller accounted dmu_tx_assign kstat histogram histogram record time spent dmu_tx_assign change move histogram update dmu_tx_wait properly account time spent one downside approach possible call dmu_tx_wait multiple time successfully assigning transaction case cumulative wait time would recorded however case often arise practice caller currently use one form dmu_tx_assign txg_wait dmu_tx_assign waited txg_waited txg_nowait first form make one call dmu_tx_delay inside dmu_tx_assign second form retries txg_waited first assignment fails incurs delay case waiting performed therefore transaction delay normally occur one call dmu_tx_wait histogram fairly accurate another possible downside approach histogram longer record overhead outside dmu_tx_wait aware reason concern point conceivable lock contention long list traversal etc could cause assignment delay would reflected histogram therefore histogram strictly used visibility normal delay mechanism profiling tool code performance signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1915,,
4972,3ccab25205cc8836ceb79bbd164208021468233a,ed Bass <bass6@llnl.gov>, 2014-02-27 16:32:36 -0800,1696, replace nreserved ndirty txgs kstat nreserved column txgs kstat file always contains following write throttle restructuring commit  prior commit nreserved column showed number byte temporarily reserved pool transaction group sync time new write throttle away temporary reservation amount dirty data instead approximate old output txgs kstat number dirty byte per txg passed nreserved value approach work intended per txg dirty value decremented data written disk zero time call fix save number dirty byte calling spa_sync pas value  also since name nreserved misnomer column heading labeled ndirty signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 1696,,
4973,3d920a1567d550273413a741c5fbece42cea6f00,ed Bass <bass6@llnl.gov>, 2014-02-27 16:11:11 -0800,1914, dmu_tx kstat cleanup counter dmu_tx kstats obsolete longer bumped properly sync task restructuring commit removed code bumpted dmu_tx_quota counter bumped two case instead one case result call second case check requested reservation actual pool size implicit quota sort write throttle restructuring commit make dmu_tx_how dmu_tx_inflight obsolete removed signed kohsuke kawaguchi kohsuke.org signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1914,,
4974,cecb7487fc8eea3508c3b67810ba5f0e2a265ba1,ichard Yao <ryao@gentoo.org>, 2014-02-27 14:03:39 -0500,2150, invalidate linux buffer cache vdevs upon flush userland tool blkid grub2 probe zdb buffer cache however zfs submit_bio bypass buffer cache performing operation vdevs efficiency purpose permit disk state buffer cache fall synchronization cause seemingly random failure tool reading stale metadata buffer cache try access reference data longer particularly bad failure cause involves grub2 probe used grub2 mkconfig ordinarily rootfs might called rpool root gentoo however failure occurs grub2 probe grub2 mkconfig generate configuration file containing root gentoo omits pool name cause boot failure avoidable calling invalidate_bdev flush simple way ensure non dirty page wiped since userland tool rarely access vdevs directly fancy noop 99.999 time little impact could tried finer grained approach rare instance vdevs accessed frequently userland however would require consideration corner case worth effort memory wise would better use linux kernel api hook disable buffer cache device provides way opt approach instead revisit idea future higher priority issue tackled signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2150,,
4975,b42b812efbbe5f9c9a8a2f2cb787e95aa09e158d,ichard Yao <ryao@gentoo.org>, 2013-12-09 20:22:13 -0500,2148, inform openrc zfs mtab p_l zfsonlinux reported issue mounting filesystems resolved adding rc_need mtab etc init.d zfs closer inspection revealed race clear race caused mounting fail clear race fixed let add proper use mtab line handle signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2148,,
4976,36f92e93e5dcd88efd74522ac0efd237168c1dfd,lexander Stetsenko <astetsenko@racktopsystems.com>, 2014-02-05 21:34:18 +0400,2147, illumos 4574 get_clones_stat doe call zap_count non debug kernel 4574 get_clones_stat doe call zap_count non debug kernel reviewed matthew ahrens mahrens delphix.com reviewed marcel telka marcel telka.sk approved gordon ross gwr nexenta.com reference http www.illumos.org issue 4574 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2147,,
4977,13a7ba1c2c5572391094800472f4a78899b4b843,im Chase <tim@chase2k.com>, 2014-02-24 13:42:36 -0600,2141, fix zap_lookup length number integer argument passed zap_lookup wrong likely result performing stack reduction function signed tim chase tim chase2k.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2141,,
4978,e78b6da3d06d754e70a02580481275ee8558cd29,burroughs <chris.burroughs@gmail.com>, 2014-02-12 15:44:07 -0500,2122, include l2asize arcstat consistency upstream pull l2asize update reworking perl python reference http github.com mharsch arcstat pull http github.com mharsch arcstat pull signed cburroughs chris.burroughs gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2122,,
4979,1ba1615925895ebd49d76d8c6ef8d06717515003,ndrew Barnes <barnes333@gmail.com>, 2014-01-20 15:39:28 +1100,2069, remove recursion remove recursion reduce stack usage issue stack overflow observed zfs recv zvols likelihood overflow proportional depth dataset recurses parent datasets signed andrew barnes barnes333 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 2069,,
4980,0ad85ed91e2e68f0ba377e7c3d2cef45241eeeef,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-21 16:14:53 -0800,2110," merge branch arc change stack patch empirically shown drastically improve hit rate arc certain workload result fewer read disk required generally good thing drastically improve performance workload disk limited impatient summarize result test performed test creating many empty directory test saw 99.9 fewer read 12.8 inodes created running change test creating many empty file test saw fewer read inodes created running change test creating many kib file test saw 96.7 fewer read 4.9 inodes created running change test creating many 4096 kib file test saw 99.4 fewer read inodes created took 6.9 fewer second complete running change test rsync ing dataset many empty directory test saw 36.2 fewer read 66.2 inodes created running change test rsync ing dataset many empty file test saw 30.9 fewer read inodes created took 24.3 fewer second complete running change test rsync ing dataset many kib file test saw 30.8 fewer read 173.3 inodes created running change patient following consists detailed description test performed result gathered test run using identical machine pool consisting mirror pair 2tb 7200 rpm disk test run twice without set patch set patch highlight performance change introduced first four workload tested note none test run completion ran set amount time terminated hit enospc creating many empty directory fdtree 111,111,111 directory file kib file data creating many empty file fdtree 10000 111,111 directory 1,111,110,000 file kib file data creating many kib file fdtree 10000 111,111 directory 1,111,110,000 file 4,444,440,000 kib file data creating many 4096 kib file fdtree 1024 10000 111,111 directory 1,111,110,000 file kib file data result first four test time inodes read writes  test 65069 37845363 831975 3214646 test 65069 42703608 778 3327674  test 65073 54257583 208647 2413056 test 65069 54255782 200038 2533759  test 65068 49857744 487130 5533348 test 65071 52294311 16078 5648354  test 34854 2448329 385870 162116572 test 32419 2448329 2339 162175706  time run time test second inodes number inodes created test read number read performed test writes number writes performed test see table running patch stack significantly reduced number read performed test due improved arc hit rate addition test described specifically targeted creates three workload tested additional test targeting rsync performance datasets created previous test brief description workload result test note aside test run completion ran set amount time terminated rsync dataset created test new dataset rsync tank test tank test rsync dataset created test new dataset rsync tank test tank test rsync dataset created test new dataset rsync tank test tank test result test time inodes read writes  test 93041 17921014 47632823 4094848 test 93029 29785847 30376206 4484459  test 15290 54264474 6018331 733087 test 11573 54260826 4155661 617285  test 93057 10093749 41561635 3659098 test 93045 27587043 28773151 5612234  time run time test second inodes number inodes created test read number read performed test writes number writes performed test signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2110",,
4981,2b13331d62a58e3efaecd0b7ab884c45c52b8d3b,rakash Surya <surya1@llnl.gov>, 2014-02-03 12:21:51 -0800,2110, set arc_meta_limit arc_c_max default unfortunately change cheap attempt work around pathological workload arc real solution still need fleshed patch intended alleviate situation meantime let try describe problem data buffer residing dbuf hash table dbuf cache keep hold respective dnode dnode turn keep hold backing dbuf physical block dnode object backing since dnode hold backing dbuf arc buffer dbuf unevictable essentially boil data buffer potential pin metadata arc result dnode object buffer unevictable scenario becomes real problem workload consists many small file e.g creating million file workload arc arc_meta_used space get filled buffer resident directory well buffer objset dnode object arc_meta_limit reached directory buffer evicted unevictable dnode object buffer reside workload simply creating new small file dnode object buffer never even needed whereas directory buffer used constantly creates move new directory arc_c arc_meta_limit sized appropriately situation wont occur data buffer accumulate arc_size eventually approach arc_c arc_meta_used reach arc_meta_limit point data buffer evicted release hold dnode release hold dnode object dbuf allows buffer evicted arc preference useful metadata side step issue simply need ensure arc_size reach arc_c arc_meta_used reach arc_meta_limit order pick proper limit math make thing little easier follow assumed single data buffer per file probably always case small file anyways based current internals arc file residing dbuf cache pin single dnode buffer i.e dnodes share physical dnode object block following amount arc_meta_used space consumed 16k dnode object block 16384 byte sizeof dnode_t 928 byte sizeof arc_buf_t byte sizeof arc_buf_hdr_t 264 byte sizeof dmu_buf_impl_t 280 byte simplify file pin following amount arc_meta_used space unevictable pinned arc_meta_used byte 16384 928 264 280 pinned arc_meta_used byte 17000 1544 pinned space regardless size file dependent number pinned dnodes sharing physical block i.e example 512b file sharing single dnode object block would consume arc_meta_used space file sharing single dnode object block given file size determine total amount space consumed arc total 17000 1544  metadata data given formula generate table state ratio pinned metadata total arc meta data using different value number pinned dnodes per pinned physical dnode block size file file size 512 1024 2048 4096 8192 16384  0.973132 0.947670 0.900544 0.819081 0.693597 0.530921 0.951497 0.907481 0.830632 0.710325 0.550779 0.380051 0.918807 0.849809 0.738842 0.585844 0.414271 0.261250 0.877541 0.781803 0.641770 0.472505 0.309333 0.182965 0.835819 0.717945 0.559996 0.388885 0.241376 0.137253 0.802106 0.669597 0.503304 0.336277 0.202123 0.112423 see wanted support absolute worst case dnode per physical dnode block 512b file would set arc_meta_limit something greater 97.3132 arc_c_max point essentially defeat purpose arc_meta_limit patch change default value arc_meta_limit arc_c_max good enough workload think signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4982,cc7f677c1610bd4ae11676ba02ec8987c347b83d,rakash Surya <surya1@llnl.gov>, 2014-02-03 12:41:47 -0800,2110, split data_size meta data previously data_size field arcstats kstat contained amount cached metadata data arc problem made difficult extract metadata size data size make easier distinguish two value data_size modified count buffer type arc_bufc_data meta_size added count buffer type one want old data_size value simply sum new data_size meta_size value signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4983,da8ccd0ee0d4eed08200e706cb2ca1da3bdfb5cf,rakash Surya <surya1@llnl.gov>, 2013-12-30 09:30:00 -0800,2110, prioritize metadata arc size limit new buffer added data evicted recycled arc make room new buffer far tell try keep arc stepping bound i.e keep size limitation placed make sense conceptually appears subtle flaw current implementation resulting metadata buffer throttled evicts arc list also pass type remove buffer type adding problem size limit hit ratio metadata data contained arc essentially becomes fixed example consider following scenario size arc capped 10g meta_limit capped arc contains data arc contains metadata every time new metadata buffer created added arc older metadata buffer removed arc preserving data metadata ratio place size limit reached occurs even though amount metadata far metadata limit result arc behaving pathologically certain workload fix function modified evict data arc even adding metadata buffer unless metadata limit addition arc_evict closely resembles arc_evict_ghost evicting data arc may make second pas arc list evict metadata meet eviction size first time around signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4984,77765b540b79bdc42d4f25f174004bbbd06b0a32,rakash Surya <surya1@llnl.gov>, 2014-01-03 10:11:14 -0800,2110, remove arc_meta_used arc_adjust calculation using arc_meta_used determine arc mru list target value arc_p seem correct size mru list value arc_meta_used although related completely independent buffer contained arc_meta_used may even contained arc mru list patch remove arc_meta_used calculation arc_adjust signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4985,94520ca4626c7b01340473bccdaa3ed038a85a8f,rakash Surya <surya1@llnl.gov>, 2014-01-03 11:40:52 -0800,2110, prune metadata ghost list arc_adjust_meta maintain strict limit metadata contained arc preventing arc buffer header completely consuming arc_meta_used space need evict metadata buffer arc ghost list along regular list change modifies arc_adjust_meta closely model adjustment made arc_adjust arc_meta_used used similarly arc_size arc_meta_limit used similarly arc_c testing metadata intensive workload e.g creating copying removing million small file directory shown change make dramatic improvement hit rate maintained arc think still room improvement big step right direction addition made yet sure properly implement function signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4986,1e3cb67b53fba067fd7bf9a13d21b53de4626dc1,rakash Surya <surya1@llnl.gov>, 2013-12-23 11:34:20 -0800,2110, revert return reverts commit memory event fixed reverting patch signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4987,624227854e619d1bf555445f3bc38730fb9278c4,rakash Surya <surya1@llnl.gov>, 2014-01-03 10:36:26 -0800,2110, disable arc_p adapt dampener default unclear adjustment arc_p need dampened arc_adjust said removal significantly improves arc ability warm given workload thus disabling default usefulness better understood signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4988,f521ce1b9c6102f9175f26548d4c521e115f8d60,rakash Surya <surya1@llnl.gov>, 2014-01-03 10:20:21 -0800,2110, allow arc_p drop zero grow arc_c setting limit minimum value arc_p shown detrimental effect arc hit rate certain metadata intensive workload specifically exhibited workload constantly dirties new metadata also frequently touch small amount mfu data e.g mkdir seen new anon data throttle mfu list negligible size arc_p anon mru even though mfu ghost list receives constant stream hit remedy arc_p allowed drop zero algorithm deems necessary signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4989,89c8cac493687875eecc80a4a03f667d98dd82d0,rakash Surya <surya1@llnl.gov>, 2013-12-11 09:40:13 -0800,2110, disable aggressive arc_p growth default specific workload consisting mainly mfu data new anon data buffer aggressive growth arc_p found function detrimental effect mfu list size ghost list hit rate running workload consisting two process process creating many small file process tar ing directory consisting many small file seen arc_p mru grow maximum size mru ghost list receives 100k time fewer hit mfu ghost list ideally mfu ghost list receives hit arc_p driven size mfu increase given specific workload testing mfu list size grow point almost mfu ghost list hit would occur unfortunately doe happen newly dirtied anon buffer constancy drive arc_p maximum value keep effectively prioritizing mru list starving mfu list negligible size logic increment arc_p within function introduced many year ago upstream commit commit author maybee none none date wed dec 2006 0800 6505658 target mru size arc.p need adjusted aggressively since fully understand motivation change reluctant completely remove way test removal might affect performance disabled code default left tunable via module option thus removal found grossly detrimental certain workload enabled fly without code change signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4990,39e055c44b3025d9ef87f6c6178ef5ae5e2a55c6,rakash Surya <surya1@llnl.gov>, 2013-12-11 12:25:30 -0800,2110, adjust arc_p based byte arc_shrink attempt prevent arc_c collapsing fast arc_shrink function updated take byte parameter change commit author brian behlendorf behlendorf1 llnl.gov date tue mar 2012 0700 integrate arc tightly linux unfortunately change failed make similar change way arc_p updated still exists possibility arc_p collapse near kernel start calling arc shrinkers change attempt fix decrementing arc_p byte parameter way arc_c updated addition minimum value arc_p attempted maintained similar way minimum arc_p value maintained arc_adapt signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 2110,,
4991,914158259225d9723bbb288457797936b41d3c9a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-23 15:33:23 -0700,2110, set zfs_arc_min 4mb decrease mimimum arc size total system memory 64mb much smaller 4mb large system 1tb memory deployed reserving memory 32gb mimimum requirement overkill tiny system like raspberry may 256mb memory case 64mb far large arc reclaimable vfs determines need memory purpose want ensure arc never completely reclaimed due memory pressure may still set larger value zfs_arc_min signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov issue 2110,,
4992,3965d2e6ee3ce3ef646c29736ce311695fd8ebc3,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-21 12:12:20 -0800,2094, merge branch issue 2094 patch stack designed accomplish following cleanly address pool incompatibility accidentally introduced post 0.6.2 pre 0.6.3. required adding infrastructure used notify system administrator erratum affect pool add additional automated regression testing ensure type compatibility issue caught prior change merged signed brian behlendorf behlendorf1 llnl.gov close 2094,,
4993,4f2dcb3eee0e6c922f1f54955c3e15fd20b3b4f6,ichard Yao <ryao@gentoo.org>, 2014-02-20 20:28:33 -0800,2094, add erratum issue 2094 zol commit 1421c89 unintentionally changed disk format forward compatible backward compatible way accomplished adding entry zbookmark_t included couple disk structure lead creation pool incorrect dsl_scan_phys_t object could imported version zol containing commit pool imported version zfs past version zol additional field removed previous commit however affected pool must imported scrubbed using version zol commit applied return pool state may imported implementation zpool import zpool status command used determine pool impacted message similar one following mean pool must scrubbed restore compatibility zpool import pool zol 0.6.2 173  state online status erratum detected action pool imported using name numeric identifier however compatibility issue corrected running zpool scrub see http zfsonlinux.org msg zfs 8000 config ... zpool status pool zol 0.6.2 173 state online scan pool compatibility issue detected see http github.com zfsonlinux zfs issue 2094 action correct issue run zpool scrub config ... async destroy progress zpool import prevent pool imported advice proceed provided error message follows zpool import pool zol 0.6.2 173  state online status erratum detected action pool imported version zfs due active asynchronous destroy revert earlier version allow destroy complete updating see http zfsonlinux.org msg zfs 8000 config ... pool affected damaged dsl_scan_phys_t detected prior upgrade running following command root zdb dddd poolname grep tscan sed scan note poolname must replaced name pool wish check value indicates dsl_scan_phys_t damaged value indicates dsl_scan_phys_t normal value indicates never scrub run pool regression caused change zbookmark_t never made tagged release gentoo backports ubuntu debian fedora epel stable respositorys using head version directly github 0.6.2 0.6.3 tag affected patch doe one limitation mentioned detect erratum pool unless erratum also present expected significant problem pool impacted erratum high probably impacted erratum end user ensure hit unlikely case waiting asynchronous destroy operation complete updating zol presence background destroys imported pool checked running zpool get freeing root display non zero value pool active asynchronous destroy lastly expected user data lost result erratum original patch tim chase tim chase2k.com reworked brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 2094,,
4994,ffe9d38275f63dbd0e6a23f3dd310249684ad518,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-20 19:57:17 -0800,2094, add generic erratum infrastructure time time may necessary inform pool administrator erratum impact pool erratum shown administrator zpool status zpool import output appropriate erratum must clearly describe issue detected pool impacted action taken resolve situation additional information erratum provided http zfsonlinux.org msg zfs 8000 accomplish patch add required infrastructure allow kernel module notify utility erratum detected done uint64_t added pool configuration nvlist add new erratum following change must made new erratum identifier must assigned adding new enum value zpool_errata_t type new enums must added end preserve existing ordering code must added detect issue doe strictly need done pool import time make erratum visible zpool import well zpool status detected spa spa_errata member set new enum possible code added clear spa spa_errata member erratum resolved show_import status_callback function must updated include informational message describing erratum include action message describing administrator address erratum documentation http zfsonlinux.org msg zfs 8000 must updated describe erratum space used provide much additional information needed fully describe erratum link documentation automatically generated output zpool import zpool status original idea tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed richard yao ryao gentoo.or issue 2094,,
4995,731782ec316656c0d1b78d6c9f0194d35ebb7eff,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-20 19:42:15 -0800,2094, use expected zpool_status_t type function return zpool_status_t enum explicit type used rather generic int type patch make functional change considered code cleanup happens done context 2094 noticed issue signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed richard yao ryao gentoo.or issue 2094,,
4996,ed9e8368d3e6ed565174270bd7f5fb7caeac9727,ichard Yao <ryao@gentoo.org>, 2014-02-05 17:15:35 -0500,2094, revert change zbookmark_t commit added field zbookmark_t unintentinoally caused disk format change negatively affected backward compatibility platform portability therefore field removed function field permitted left unimplemented later patch reimplement field way doe affect disk format signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue 2094,,
4997,a16bc6bdd9613c38cc9ceb6041e733b77435d476,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-04 16:10:38 -0800,2094, add zimport.sh compatibility test script verify assortment known good reference pool imported using different version zol code default reference pool major zfs implementation checked recent zol tag master development branch alternate tag branch may verified src tag option passing keyword installed instruct script test whatever version installed preferentially reference pool used test however one doe exist pool tag match one src tag new reference pool created using binary source build particularly useful need test change opening pull request new reference pool may added placing bzip2 compressed tarball pool script zpool example directory passing pool tag option increase test coverage reference pool collected major zfs implementation pool easily available also helpful developer care taken run test kernel supported listed tag otherwise build failure cause false positive example following example verify zfs 0.6.2 tag master branch installed zfs version correctly import listed pool note reference pool available master installed binary available one automatically constructed working directory also preserved run preventing need rebuild source multiple run zimport.sh var tmp zimport zfs 0.6.1 zfs 0.6.2 master installed master installed zfs linux source version zfs 0.6.1 zfs 0.6.2 master 0.6.2 180  clone spl skip skip skip skip clone zfs skip skip skip skip build spl skip skip skip skip build zfs skip skip skip skip  zevo 1.1.1 pas pas pas pas zol 0.6.1 pas pas pas pas zol 0.6.2 173 fail fail pas pas zol 0.6.2 pas pas pas pas master fail fail pas pas installed pas pas pas pas signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed richard yao ryao gentoo.org issue 2094,,
4998,98fad862937cddc3aeb4d527e357cd7265eae91b,im Chase <tim@chase2k.com>, 2014-02-11 07:34:17 -0600,2117, propagate error registering relatime property callback various error occur registering property callback author comment indicate code paranoid preserving first seen error registering callback patch cause error seen registering relatime callback clobber previously seen error reported jorgen lundman lundman lundman.net signed brian behlendorf behlendorf1 llnl.gov close 2117,,
4999,99d3ece84797086407fbb4d94d3817f2dc891af0,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-04 16:09:55 -0800,2120, add default filedir path zpool config script allow caller zpool create.sh script override default path file vdevs created allows greated flexibilty scripting additionally update default path tmp var tmp day tmp likely ramdisk even though file sparse may grow large case backed physical device signed richard yao ryao gentoo.org signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2120,,
5000,f12971e6f5cf0e84e385eb9636fbe2ae313ab257,alf Ertzinger <ralf@skytale.net>, 2014-02-08 22:48:53 +0100,1866, add explicit conflict zfs fuse package zfs fuse provides command man page name zol changing name either side would make incompatible existing documentation zfs providing bit identical file possible due differing codebases signed richard yao ryao gentoo.org signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1866,,
5001,0820ec65c4027b878894776a0fbbeac271e87803,rian Behlendorf <behlendorf1@llnl.gov>, 2014-02-07 10:54:11 -0800, , fix zconfig.sh test commit ba6a240 adjusted behavior zfs create caller longer guaranteed udev finished creating dev entry time command exit therefore required explicitly block waiting udev settle test run reliably signed brian behlendorf behlendorf1 llnl.gov,,
5002,881f45c6a8f44486f76c4713ecef0d533d6601e8,alf Ertzinger <ralf@skytale.net>, 2014-01-19 15:36:49 +0100,2108, add systemd unit file zfs startup add systemd unit file replacing functionality offered sysv init script found etc init.d developed tested fedora fedora opensuse 13.1 four unit file one target offered zfs import cache.service import pool etc zfs zpool.cache unit wait udev settle zfs import scan.service import pool scanning dev disk zvols unit run etc zfs zpool.cache present unit wait udev settle zfs mount.service mount zfs native filesystems contains dependency loaded local fs.target zfs share.service share nfs smb filesystems unit contains dependency cause restarted whenever smb nfs server unit restarted restoring share added zfs.target target pull unit order start zfs unit enabled disabled service static pulled dependency honour zfs zfs option kernel command line signed brian behlendorf behlendorf1 llnl.gov close 2108,,
5003,c5cb66addcb947ae8843c40c6db134ccd821adb7,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-31 16:35:53 -0800,1990, fix corrupted l2_asize arcstats commit e0b0ca9 accidentally corrupted l2_asize displayed arcstats caused changing member int uint32_t type place code field cast uint64_t resulting b_hits member treated part b_asize resolve issue type changed uint64_t b_hits member placed enum prevent size structure increasing good example exactly bad idea use ambiguous type int structure signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov close 1990,,
5004,2e7b7657cdb9ad02c0e0fcf6c8b2bb1c58d1273a,atthew Ahrens <mahrens@delphix.com>, 2014-02-01 02:52:11 +1100,2091, 4188 assertion failed dn_datablkshift reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com approved garrett amore garrett damore.org refences http www.illumos.org issue 4188 illumos illumos gate ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 2091,,
5005,8b4646494c23fc17c7cc5f7a857e27c463540098,atthew Ahrens <mahrens@delphix.com>, 2014-01-24 09:54:37 -0600,2079, illumos 4504 visit group user 4504 visit reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reference http illumos.org issue 4504 http illumos 4504 http base view revision revision 260812 signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com close 2079,,
5006,6d111134c0d1eb9b179eb9fddf26a31d5d45ae22,im Chase <tim@chase2k.com>, 2014-01-18 13:00:53 -0600,1917, implement relatime add relatime property set file atime updated existing atime least day old existing ctime mtime updated since last access behavior compatible linux relatime mount option signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2064 close 1917,,
5007,2278381ce2a820afe76dd9650298858d7037a01b,atrik Greco <sikevux@sikevux.se>, 2014-01-24 19:19:34 +0100,2072, fix error message zpios chunksize must always strictly smaller regionsize signed andrew uselton intel.com signed brian behlendorf behlendorf1 llnl.gov close 2072,,
5008,01b738f457f2a406fb6b4b264fb7a947b9b9989b,yril Plisko <cyril.plisko@mountall.com>, 2014-01-15 11:26:12 +0200,2075, call gethrtime per new txg creation transitioning current open txg quiesce state opening new one txg_quiesce call gethrtime mark birth time new txg record spa txg history kstat implicitely inside timestamps practically first one used instead two visible difference inside time spent kmem_zalloc counted towards opened txg since point new txg already exists tx_open_txg already incremented actually correct accounting case extra work happening spa_txg_history kstat activated i.e zfs_txg_history affect normal processing way signed cyril plisko cyril.plisko mountall.com issue 2075,,
5009,478d64fdaeb89c8f029f3dd1969447317eedaa6e,gor Lvovsky <ilvovsky@gmail.com>, 2014-01-16 11:41:27 +0200,2075, add additional state txg several case digging kstats found two txgs sync state e.g txg birth state nreserved nread nwritten ... 985452 258127184872561 373948416 2376272384 ... 985453 258129016180616 378173440 28793344 ... 985454 258129016271523 ... 985455 258130864245986 ... 985456 258130867458851 ... however first txg 985454 really syncing moment one 985455 marked synced actually post quiesced state waiting start sync new state added reveal situation txg birth state nreserved nread nwritten ... 1086896 235261068743969 163577856 8437248 ... 1086897 235262870830801 280625152 822594048 ... 1086898 235264172219064 ... 1086899 235264936134407 ... 1086900 235264936296156 ... signed igor lvovsky ilvovsky gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 2075,,
5010,93292b308178cb885e1b11ca1a270c36f5b08a23,hen Yan <shenyanxxxy@qq.com>, 2014-01-22 12:44:35 +0800,2068, use enum type zfetch_dirn_t instead fix code zfetch_dirn_t readable clear signed brian behlendorf behlendorf1 llnl.gov close 2068,,
5011,4461aa6118fa55dc83f5d75c6d428767c3634fba,im Chase <tim@chase2k.com>, 2014-01-18 10:46:43 -0600,2029, allow chown chgrp acl exist comment commit zfs implementation zevo create neither znode_acl dacl_aces case enoent returned located allow chown chgrp succeed case rather returning error make sense context caller signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov issue zfs osx zfs close 1911 close 2029,,
5012,04aa2de8f788654dda15e0b598fc874915b0fc06,ed Bass <bass6@llnl.gov>, 2014-01-15 13:52:57 -0800,1928, use taskq_dispatch tq_pushpage function may processing zio txg_sync thread waiting case safe perform memory allocation may generate new since could cause deadlock avoid call taskq_dispatch tq_pushpage instead tq_sleep signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 1928,,
5013,4c995417bc4207118eb9ae4848086c89bf1132f7,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-17 11:40:59 -0800, , remove incorrect use extra_dist man page setting dist_ prefix correct way instruct automake include file distribution extra_dist variable reserved file covered automatic rule http www.gnu.org software automake manual automake.html basic signed brian behlendorf behlendorf1 llnl.gov,,
5014,3566d5c7c3cb415a53218251fc0247da55dfde46,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-17 11:21:48 -0800, , remove incorrect use extra_dist man page setting dist_ prefix correct way instruct automake include file distribution extra_dist variable reserved file covered automatic rule http www.gnu.org software automake manual automake.html basic signed brian behlendorf behlendorf1 llnl.gov,,
5015,09d0b30fd1ba08a95e86909d2e1abb2997b0a871,ed Bass <bass6@llnl.gov>, 2014-01-13 13:32:41 -0800,2056, vdev_id support per channel slot mapping vdev_id udev helper currently applies slot renumbering rule every channel jbod system inflexible system non homogeneous storage topology slot keyword take optional third parameter name channel mapping apply third parameter omitted rule applies channel first specified rule match slot take precedence therefore channel specific rule given slot generally appear generic rule slot number way custom slot mapping applied particular channel default mapping applied rest signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2056,,
5016,35d3e32274ff05d9b080ea0a77ade1f9c9d7bafc,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-13 14:27:33 -0800,2039, use long hold linux function originally written use dmu_objset_hold dmu_objset_rele subsequently dmu_objset_own interface added zvol code updated take advantage never issue dsl_pool_config change code take config lock twice cleanest solution shift using dmu_objset_own take long hold dataset doe hold dsl pool lock patch also slightly restructures existing code closely resembles upstream illumos code signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 2039,,
5017,0f62f3f9abc4bfa0bcafee9bfa3d55e91dcb371d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-14 09:39:13 -0800,2051, disable gccs aggressive loop optimization gcc 4.8 aggressive loop optimization break iterators dn_blkptr pseudo array dnode_phys since dn_blkptr defined single element array gcc belief iterator access index unroll loop single iteration one way resolve issue would cast array pointer fix iterators might break loop known cause problem loop dnp dn_nblkptr blk_fill dnp dn_blkptr .blk_fill common case dn_nblkptr loop executed single time equal following loop specific breakage caused problem blk_fill root block pointer set properly one blkptr use indrect block needed simple reproducing sequence zpool create tank tank.img zdb ddddd tank notice fill however two indirect block fill count rather 31. problem cause assert hit simple zdb tank built enable debug however approach taken need absolutely sure catch instance unwanted optimization therefore build system updated detect gcc support aggressive loop optimization doe optimization explicitly disabled using fno aggressive loop optimization option original fix tim chase tim chase2k.com signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 2010 close 2051,,
5018,cbe8e6198cb167f34adc30c6993032a4f4491397,ichard Yao <ryao@gentoo.org>, 2014-01-11 16:07:27 -0500,2038, properly link zpool command libblkid incorrectly removed libblkid cmd zpool makefile.am meant toolchain given lblkid resulted following build failure ubuntu 13.10 usr bin zpool_vdev.o undefined reference symbol blkid_put_cache blkid_1.0 lib x86_64 linux gnu libblkid.so.1 error adding symbol dso missing command line collect2 error returned exit status commit reworked various makefile.am follow best practice reintroduce libblkid manner consistent rather explicitly reverting change reproduction issue done gentoo linux system executing following command zfs create mountpoint mnt ubuntu 13.10 rpool root ubuntu 13.10 debootstrap variant buildd arch amd64 saucy mnt ubuntu 13.10 http ubuntu mount bind dev mnt ubuntu 13.10 dev mount bind proc mnt ubuntu 13.10 proc mount bind sys mnt ubuntu 13.10 sys etc resolv.conf mnt ubuntu 13.10 etc mnt ubuntu 13.10 root git clone git github.com zfsonlinux zfs.git chroot mnt ubuntu 13.10 apt get install git autoconf libtool zlib1g dev uuid dev libblkid dev apt get install alien fakeroot vim root zfs autogen.sh configure config user prefix usr make create ubuntu 13.10 chroot fetch source build test point cmd zpool makefile.am modified following command run verify build issue resolved git clean xdf autogen.sh configure config user prefix usr make although shown absence libblkid dev enables zfs build successfully without patch could explain escaped detection recently test without libblkid dev done verify patch cause regression absence libblkid apt get remove libblkid dev git clean xdf autogen.sh configure config user prefix usr make additionally command tested live system within chroot ensure basic functionality live system corresponding kernel module already installed basic command zpool list zfs list worked without incident lastly patch also build tested gentoo linux caused problem time writing step used reproduce result modern linux system debootstrap installed gentoo installing debootstrap done emerge dev util debootstrap current zfsonlinux head revision writing fixed head either revision another fix needed reproduce issue lastly remains seen toolchains system performing regression test catch zfs specific issue something want explore future signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 2038,,
5019,741304503a28fc51a6c0a14a0f3c1c88cc825979,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-13 13:02:59 -0800,2041, prevent duplicate mnttab cache entry linux possible mount filesystem multiple time namespace done either bind mount simply multiple mount point unfortunately mnttab cache code implemented using avl tree doe support duplicate entry avoid issue patch update code check duplicate entry adding new one signed brian behlendorf behlendorf1 llnl.gov signed michael martin mgmartin.mgm gmail.com close 2041,,
5020,d58a99af2f308dde912639c66af7f9c2cb9e8680,arku89 <mar42@kola.li>, 2014-01-07 20:33:19 +0100,317, define needed isa type sparc add minimum required isa type support sparc architecture signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li close 317,,
5021,fd23720ae14dca926800ae70e6c8f4b4f82efc08,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-08 10:25:42 -0800,1988, drain iput taskq outside z_teardown_lock unsafe drain iput taskq holding z_teardown_lock writer last reference inode dropped may still page need written disk done zpl_writepages acquire z_teardown_lock reader zfs_enter therefore holding lock writer zfs_sb_teardown unmount deadlock signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au close 1988,,
5022,4fcc43790c872139a2e318ebe4100e8404f841c0,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-08 00:24:30 +0100,1700, force sparc change proposed sparc clear required proper support exists lz4 code detect endianness required builtins available gcc still including patch impact sparc may resolve case occured  signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li issue 1700,,
5023,b585bc4afaf37b744acba6be87f5909b4564b845,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-08 00:17:24 +0100,1700, fix type sparc blksize bit value cast incorrectly bit value big endian system result incorrect value blksize resolve problem local variable correct size used assigned blksize signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li issue 1700,,
5024,aa0218d6a12814fac50b287214f9f3b0b99e11b1,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-07 23:24:37 +0100,1700, fix nvlist bus error sparc aligned memory access cause bus error architecture sparc fully byte addressible avoid issue care taken avoid dereferencing potentially aligned packed nvlist_t signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li issue 1700,,
5025,7f89ae6ba0f4e3c1b3e62272bbaa8228afdb020d,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-07 23:16:46 +0100,1700, use local variable read z_mode accessing z_mode bulk interface expect bit available hold result however bit platform mode_t bit pas instead local uint64_t variable must used result assigned z_mode went unnoticed bit little endian platform byte happen end correct bit big endian platform like sparc z_mode always end set zero signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li issue 1700,,
5026,d7ec8d4fd9b704f6bc1220e6a79472ad9b3af0c8,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-07 23:14:33 +0100,1700, define needed isa type sparc add minimum required isa type support sparc architecture signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed marku89 mar42 kola.li issue 1700,,
5027,aeeb4e0c0ae75b99ebbaa3056f0afc8e12949532,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-06 16:31:49 -0800,325, remove default taskq thread cpu binding code written appears assumed every taskq would large number thread case would make sense attempt evenly bind thread available cpu however failed consider creating taskqs small number thread cause cpu lower become subscribed reason kthread_bind call removed leaving kernel schedule thread see fit signed brian behlendorf behlendorf1 llnl.gov close 325,,
5028,2f117de8beca7da1d22103df4630e9298afae370,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-06 15:08:35 -0800,291, include linux vmalloc.h arm sparc related issue 257 added linux 3.10 compatibility arm sparc architecture must explicitly include linux vmalloc.h header ensure vmalloc_info structure always defined available signed brian behlendorf behlendorf1 llnl.gov issue 257 close 291,,
5029,ecf3d9b8e63e5659269e15db527380c65780f71a,ohn Layman <jlayman@sagecloud.com>, 2013-11-19 16:34:46 -0500,1893, add ddt ddt_entry l2arc_hdr cache back allocation ddt table entry l2arc header kmem cache reduce cost allocating commonly used structure allow greater visibility proc spl kmem slab interface signed john layman jlayman sagecloud.com signed brian behlendorf behlendorf1 llnl.gov close 1893,,
5030,4dad7d91e24875f077e26808fec900224e97dcb2,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-07 09:31:38 -0800,845, remove unconditional sharetab update remove unconditional sharetab update running zfs command mean sharetab might become date user manually adding removing share exportfs punish caller zfs order handle unlikely case unlikely event observe issue always added back share unshare call path need date sharetab signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com signed chris dunlop chris onthe.net.au issue 845,,
5031,e07306687d0862e8d43b5a0e32003748dedcfa3b,rian Behlendorf <behlendorf1@llnl.gov>, 2014-01-07 09:21:20 -0800,845, enable etc mtab cache improve performance enable etc mtab cache prevent zfs command repeatedly open read etc mtab file instead avl tree mounted filesystems created used vastly speed lookup mean non zfs filesystems mounted concurrently zfs mount immediately detect practice rarely happen even doe absolute worst case would failed mount originally disabled abundance paranoia note may still part code consult mtab cache updated check mtab cache discovered problem signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com signed chris dunlop chris onthe.net.au issue 845,,
5032,8c091798f26e7c1e6fd105e90065ebe12d97dfc2,urbo Fredriksson <turbo@bayour.com>, 2013-12-24 16:18:00 +0000,2003, add unsharing filesystems exporting pool stop action ensure filesystem unshared unmounted case additionally export pool may cleanly imported different host signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 2003,,
5033,fb8e608d9dacf2f6703da8c853f6086e4dd79824,im Chase <tim@chase2k.com>, 2013-12-23 14:06:34 -0600,1998, fix creation zpool_hist_cmd pool history entry move libzfs_fini call zpool_hist_cmd entry get written fix handling saved_poolname zfsdev_ioctl broken part stack reduction work  since zol destroys tsd data previously successful ioctl pool name stored following every vop ioctl important restriction successfully write long entry following successful ioctl intervening vops performed zfs subcommands perform intervening vops logging moment create clone subcommands modified appropriately signed tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1998,,
5034,5d862cb0d9a4b6dcc97a88fa0d5a7a717566e5ab,im Chase <tim@chase2k.com>, 2013-12-19 00:30:56 -0600,1978, properly handle update variably sized entry update process sa_modify_attrs size existing variably sized entry obtained sa_lengths case variably sized replaced neglected increment index sa_lengths subsequent variable length would rewritten wrong length patch add missing increment operation variably sized entry stored correct length previously size changing update variably sized occurred variably sized bonus buffer would cause subsequent corrupted common case would occur mode change caused zpl_dacl_aces entry change size zpl_dxattr xattr entry already existed following sequence would caused failure xattr force would corrupt bonus buffer open filename o_wronly o_creat 0600 ... lsetxattr filename ... create xattr chmod filename 0650 enlarges acl signed chris dunlop chris onthe.net.au signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1978,,
5035,ac0340970c8f548a97f3c3c1e9c6fc7b60efd824,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-19 14:30:11 -0800,1937, register correct handler nvlist_ dup pack unpack change related commit 81eaf15 ensured correct allocation handler installed nvlist_alloc nvlist function nvlist_dup nvlist_pack nvlist_unpack suffer issue updated accordingly signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 1937,,
5036,11b9ec23b98eefe1e7bde0033dc8285f94cb0b90,atthew Thode <mthode@mthode.org>, 2013-12-19 00:24:14 -0600,1504, add full selinux support four new dataset property added support selinux context fscontext defcontext rootcontext map directly context option described mount one property set something none string passed verbatim mount option given context filesystem mounted example wanted rootcontext filesystem set system_u object_r fs_t would set property follows zfs set rootcontext system_u object_r fs_t storage pool medium ensure filesystem automatically mounted rootcontext equivalent manually specifying rootcontext option like zfs mount rootcontext system_u object_r fs_t storage pool medium default four context set none information selinux context detailed mount selinux man page signed matthew thode prometheanfire gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 1504,,
5037,d1d7e2689db9e03f11c069ebc9f1ba12829e5dac,ichael Kjorling <michael@kjorling.se>, 2013-11-01 20:26:11 +0100,1821, cstyle resolve style issue vast majority change linux specific code result automated style checker validate code originally written others caused common code slightly adjusted linux patch contains functional change refreshes code conform style guide everyone submitting patch inclusion upstream run make checkstyle resolve warning prior opening pull request automated builder updated fail build make checkstyle detects issue signed brian behlendorf behlendorf1 llnl.gov close 1821,,
5038,8ffef572ed2ba97e0c2d6a8aa2240012e611dc6f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-17 13:30:44 -0800,1821, cstyle allow space comment update cstyle.pl script allow picture comment header comment recent change illumos d3cc8b1 relocated various picture standard block comment make code readable signed brian behlendorf behlendorf1 llnl.gov issue 1821,,
5039,351a26ddc0a1ec85886fc961612f05686cce82e6,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-17 16:11:57 -0800,1821, cstyle exclude several file make checkstyle zfs_config.h header .mod.c file product build process must excluded style check part pristine source signed brian behlendorf behlendorf1 llnl.gov issue 1821,,
5040,2820bc49c5b7d63aa3941b8e173005f17dd0cee4,ohn Wren Kennedy <john.kennedy@delphix.com>, 2013-12-18 15:09:45 -0800,1986, illumos 4208 4208 typo zfs_main.c posxiuser reviewed sonu pillai sonu.pillai delphix.com reviewed guyette will.guyette delphix.com reviewed eric diven eric.diven delphix.com reviewed christopher siden delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 4208 illumos illumos gate ported brian behlendorf behlendorf1 llnl.gov close 1986,,
5041,fd8febbd1e6ff3d3eec6b9d395ab65400769da19,urbo Fredriksson <turbo@bayour.com>, 2013-12-17 21:53:52 +0000,1897, add module option tuning setting ignore read checksum error sending data signed turbo fredriksson turbo bayour.com signed brian behlendorf behlendorf1 llnl.gov close 1982 issue 1897,,
5042,4788a01dbd11b8fd22e0ff95a197a753778e04ca,aron Fineman <abyxcos@mnetic.ch>, 2013-12-18 02:33:40 +0000,1984, cause zfs.spec place dracut file properly extension commit ffb2111 fedora conditional added allows centos rhel fall back proper directory usr share dracut signed brian behlendorf behlendorf1 llnl.gov close 1984,,
5043,a5f3665168946318c98ed5407b9314d400bd6dde,enelson <bnelson@nelsonbe.com>, 2013-12-17 10:44:23 -0800,1968, handle acl flag util linux mount command add acl noacl posixacl option_map avoiding enoent error case mount util linux 2.24 exec mount.zfs flag signed brian behlendorf behlendorf1 llnl.gov signed renelson bnelson nelsonbe.com issue 1968,,
5044,758d35520b7e15fd6db2e8c8f45294a9cf0514cb,enelson <bnelson@nelsonbe.com>, 2013-12-17 10:38:28 -0800,1968, fix grammar parse_options error message minor grammar error corrected parse_options error handling enoent case signed brian behlendorf behlendorf1 llnl.gov signed renelson bnelson nelsonbe.com issue 1968,,
5045,7dc71949f2f013a7bf744230d60770893ce23a6a,hunwei Chen <tuxoko@gmail.com>, 2013-12-17 10:18:25 -0800,1962, fix z_sync_cnt decrement zfs_close comment zfs_close state linux zfs_close hook symmetric zfs_open true zfs_open zfs_close associated every successful struct file creation deletion always balanced example wrong process open o_sync z_sync_cnt open o_sync z_sync_cnt close z_sync_cnt z_sync_cnt even still file o_sync also move call zfs_open ensure case fails z_sync_cnt incremented safe side effect signed chunwei chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 1962,,
5046,c2d439dffd4c404d39e82e5b174a338515080f26,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-13 11:29:06 -0800,1972, silence e2fsck warning zconfig.sh running zconfig.sh test cause following warning printed console caused snapshoting mounted ext2 filesystem clean state expected since guarentees disk consistency filesystem ext2 warning mounting unchecked running e2fsck recommended silence warning preserve intent test case updated unmount filesystem prior snapshoting ensures ext2 filesystem consistent state snapshot taken signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 1972,,
5047,ce37ebd2ebcbc8ec6bbaa56cd22e6e807b6d36f3,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-12 13:04:40 -0800,1821, cstyle zvol.c update zvol.c conform style guideline verified running cstyle.pl source file patch contains functional change signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed tim chase tim chase2k.com issue 1821,,
5048,d17eab9ce0437d99e165c8d9758a9d0e2c029bdf,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-12 14:55:19 -0800,1921, update zfs snapshot section snapshot section zfs man page incorrect updated part 1312. snapshot volume accessed independently visibility determined snapdev hidden visible property analogous existing snapdir hidden visible property signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed tim chase tim chase2k.com close 1921,,
5049,2e0358cbcab49f7be18762e8cb51e642188709e7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-13 14:49:33 -0800,1973, sync dev zfs ioctl ordering order minimize future disruption caused addition removal dev zfs ioctls patch make following change sync zol ioctl ordering match illumos historic reason ioctls order move linux freebsd specific ioctls reserved range allows preserve existing ordering new ioctls added either illumos freebsd ioctl longer needed retired place change alters zfs user kernel abi make sure rebuild user kernel module however allow much stabler interface going forward signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 1973,,
5050,ba6a24026c6eb910188c24b5c921fb793d3c998e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-06 14:20:22 -0800,1969, remove zfc_ioc_ _minor ioctl early version zfs coordinated creation destruction device minor userspace inherently racy late 2009 ioctl removed leaving everything kernel significantly simplified code however never picked change zol since already significantly adjusted code linux patch aim rectify finally removing zfc_ioc_ _minor ioctl moving functionality kernel since cleanup change kernel user abi done tag previous libzfs_core abi change minimize eliminate disruption end user merged zol illumos freebsd basically back sync regard handling zvols common code platform must custom zvol.c implemenation interface provided consistent note patch introduces one subtle change behavior could easily avoided prior change caller zfs create ... guaranteed upon exit dev zvol block device link would created error returned longer case utility longer block waiting symlink created caller responsible blocking udev_wait call added label function script common.sh read behavior zvol solely depends zvol_rdonly bit set zv_flags redundant policy setting gendisk structure removed simplifies code allows safely leverage set_disk_ro issue kobj_change uevent see comment code futher detail zvol_alloc may called sync task must use km_pushpage reference illumos illumos gate signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov signed tim chase tim chase2k.com close 1969,,
5051,dda12da9f1ec714af0e468aa03c24f402961f135,eorge Wilson <george.wilson@delphix.com>, 2013-12-12 10:19:54 -0800,1863, illumos 4121 vdev_label_init read 4121 vdev_label_init treat request succeeded pool read reviewed christopher siden delphix.com reviewed matthew ahrens mahrens delphix.com reviewed saso kiselkov skiselkov.ml gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 4121 illumos illumos gate ported brian behlendorf behlendorf1 llnl.gov close 1863,,
5052,84b0aac5fdab6daf8c4179dfba4abeb47e0d8b8e,im Chase <tim@chase2k.com>, 2013-12-10 16:36:42 -0600,1949, fix atime handling previously atime modifying vnops called followed update atime however since atimes cached znode delayed writing function would effectively ignore cached atime reading  commit move updating atime inode called macro eliminates call atime modifying vnops possible thing could done directly sure safe case called effect atime handling strictatime selected even filesystem mounted relatime signed brian behlendorf behlendorf1 llnl.gov issue 1949,,
5053,5cb65efe2c3d4aaa77a5881be364c443c859bbc8,hen Yan <shenyanxxxy@qq.com>, 2013-12-10 14:58:53 +0800,1946, fix zstream_t incorrect type dmu zfetch code organizes stream list avl tree avl_node_t mistakenly used list_node_t zstream_t type incorrect harmless unnoticed list function explicitly cast value preventing warning sizeof avl_node_t sizeof list_node_t overrun occurs calculated offset regardless type signed brian behlendorf behlendorf1 llnl.gov close 1946,,
5054,be5db977eaffd11ae52ddcbb0b64b53ec000082a,avid.chen <tuxoko@gmail.com>, 2013-12-09 15:55:01 +0800,1941, remove max initializing arc_c_max max initializing arc_c_max make sense set anywhere though arc_c_max implicitly set zero initializing arc_stats max make difference max mistakenly left place illumos default value changed linux signed david.chen tuxoko gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1941,,
5055,383efa5743ecf05e11b859e2dcc0133ceab8b458,imon Guest <Simon Guest simon.guest@agresearch.co.nz>, 2013-12-09 17:20:20 +1300,1692, fix multipath bug vdev_id caused inconsistent field numbering bug caused multipath output like mb3000fcwdh size 2.7t feature hwhandler policy round robin prio status active sdq active undef running policy round robin prio status enabled sdfp 130 176 active undef running note pipe symbol mean field numbering different sdq sdfp line fix edits pipe symbol signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1692,,
5056,b6e335bfc489c08bb92a8667e71fa7f69e87d960,ed Bass <bass6@llnl.gov>, 2013-12-06 15:56:22 -0800,1648, revert use directory xattrs symlinks reverts commit proper fix issue 1648 landed issue 1890 longer needed signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1648,,
5057,472e7c60853af099fbdf9d52162fd39818884f4f,ames Pan <jiaming.pan@yahoo.com>, 2013-12-06 14:16:40 -0800,1890, sa_find_sizes may compute wrong header size right condition sa_find_sizes compute incorrect size system attribute header cause failed assertion test return false may lead corruption data bug present two variable length right size fit bonus buffer dnode existing logic fails account header space needed store size variable length reproducer possible linux setting xattr dataset property storing xattrs symbolic link issue 1648 note corrupt link target name zfs set xattr tank fish tank fish link setfattr link setfattr link link lrwxrwxrwx root root dec link commit worked around bug forcing xattr symlinks stored directory format change implement proper fix workaround reverted reference link contains reproducer freebsd reference http lists.open zfs.org pipermail developer 2013 november 000306.html ported ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1890,,
5058,921a35adeb9ccfa123add942bfe20837454138fa,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-04 10:14:14 -0800,1923, add module versioning use standard linux module_version macro expose installed spl splat module version also automatically add checksum file header srcversion see sys module spl version sys module spl srcversion sys module splat version sys module splat srcversion signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1923 signed brian behlendorf behlendorf1 llnl.gov,,
5059,c1ab64d3931cbab45fbb197588cb27cb6fd10c33,urbo Fredriksson <turbo@bayour.com>, 2013-12-05 11:37:25 +0000,1929, update init script allow verbose mount allow verbose mount make easier monitor progress mounting large number filesystems functionality disabled default signed brian behlendorf behlendorf1 llnl.gov close 1929,,
5060,fc220e9ea536ea7a5bcdd231c8ae36e8fef18cfa,urbo Fredriksson <turbo@bayour.com>, 2013-12-05 11:36:58 +0000,1929, update init script allow dev disk import many people prefer use import time instead using cache file much better solution cache file environment adding infrastructure allow functionality disabled default signed brian behlendorf behlendorf1 llnl.gov close 1929,,
5061,90ee9ed32faa31174c673165c876b92272a93c72,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-04 13:50:34 -0800,481, fix zfs diff share error creating dataset zol zsb z_shares_dir zap object created share unimplemented instead zol set zsb z_shares_dir zero indicate share however import pool created different zfs implementation share zap object may exist code added handle case clearly sufficiently tested zfs pool bug function passed wrong inode case share zap object doe exist cause eio returned stat64 turn cause zfs diff fail fix pas correct inode sucessful zfs_zget additionally put away reference able get one signed brian behlendorf behlendorf1 llnl.gov signed graham booker http github.com gbooker signed timemaster67 http github.com timemaster67 close 1426 close 481,,
5062,99e349db92008ee61dad5a612056cf0fdecb3896,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-04 10:32:08 -0800,1923, add module versioning use standard linux module_version macro expose installed zavl znvpair zunicode zcommon zfs zpios module version also automatically add checksum file header srcversion see sys module zavl version sys module zavl srcversion sys module znvpair version sys module znvpair srcversion sys module zunicode version sys module zunicode srcversion sys module zcommon version sys module zcommon srcversion sys module zfs version sys module zfs srcversion sys module zpios version sys module zpios srcversion signed brian behlendorf behlendorf1 llnl.gov close 1923,,
5063,e8b96c6007bf97cdf34869c1ffbd0ce753873a3d,atthew Ahrens <mahrens@delphix.com>, 2013-08-28 20:01:20 -0700,1913, illumos 4045 write throttle scheduler performance work 4045 zfs write throttle scheduler performance work zfs scheduler vdev_queue.c divide class sync read sync write async read async write scrub resilver scheduler issue number concurrent class device class selected selected class using either elevator algorithem async scrub class fifo sync class number concurrent async write tuned dynamically based load achieve good sync latency high load writes good write throughput see block comment vdev_queue.c reproduced detail write throttle rewritten produce much consistent delay constant load new write throttle based amount dirty data rather guess future performance system lot dirty data transaction e.g write syscall delayed small amount eliminates brick wall wait old write throttle could hit causing transaction wait several second next txg open one key new write throttle decrementing amount dirty data completes rather end spa_sync note write throttle applied scheduler issuing maximum number outstanding async writes see block comment dsl_pool.c dmu_tx_delay reproduced detail diff several effect including commonly tuned global variable removed use per class zfs_vdev_ _max_active value instead size txg meaning amount dirty data written thus time take write controlled differently longer explicit time goal primary determinant amount dirty data system light medium load often see txg always syncing impact performance e.g read latency minimal tune control use cpu compression checksum etc improves latency allowing cpu intensive task consume cpu machine least cpu percentage rounded matt appendix problem current scheduler current zfs scheduler vdev_queue.c deadline based problem always pending certain class see long delay example always synchronous read outstanding async writes serviced become past due one symptom situation pas txg sync take least several second typically second many become past due deadline past must service overdue new happens enqueue batch async writes txg sync deadline 2.5 second future complete 2.5 second e.g always read pending become past due must service async writes could hundred megabyte service read introducing considerable latency synchronous read zil writes note porting zfs linux zio_t gained new member io_physdone object cache linux port call constructor allocation time object may contain residual data retrieved cache therefore zio_create updated zero two new field relied depth per vdev pending queue vq_pending_tree select least busy leaf vdev read tree replaced vq_active_tree used purpose vdev_queue_init used value determine number vdev buffer pre allocate global longer exists instead use sum _max_active value five class described illumos implementation dmu_tx_delay delay transaction sleeping condition variable embedded thread curthread t_delay_cv equivalent use linux change replaced delay logic wrapper called zfs_sleep_until wrapper could adopted upstream downstream port abstract away operating system specific delay logic tunables added module parameter description added zfs module parameters.5 man page                      zfs_delay_scale latter four type unsigned long whereas uint64_t illumos accommodates linux module_param supported type mean may overflow bit architecture value likely overflow bit system since express physical ram size byte fact illumos initializes doe overflow resolve port instead initializes arc_init physical ram add tunable override percentage solution completely avoid overflow issue reasonable default system minority affected system work around issue overriding default fixed reversed logic comment zfs_delay_scale declaration clarified comment vdev_queue.c regarding per queue minimum take effect replaced dmu_tx kstat file first count many time transaction delayed pool dirty data exceeded latter count many time pool dirty data exceeded expect never happen original patch would regressed bug fixed zfsonlinux zfs c418410 prevented user setting tuning larger similar fix added dynamically allocate zio_t search heap instead stack linux afford large structure stack reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed ned bass bass6 llnl.gov reviewed brendan gregg brendan.gregg joyent.com approved robert mustacchi joyent.com reference http www.illumos.org issue 4045 illumos illumos gate ported ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1913,,
5064,384f8a09f8423d951bb81d9ca945e588de14f95f,atthew Ahrens <mahrens@delphix.com>, 2013-11-22 15:13:18 -0800,4347, illumos 4347 zpl use dmu_tx_assign txg_wait fix lock contention issue allowing thread holding zpl lock block waiting assign transaction porting note zfs_putpage still txg_nowait unlike upstream version case may contention point like zfs_write however safe block since may called memory reclaim reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed dan mcdonald danmcd nexenta.com reviewed boris protopopov nexenta.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4347 illumos illumos gate ported ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5065,729210564a5325e190fc4fba22bf17bacf957ace,ichard Yao <ryao@gentoo.org>, 2013-11-25 12:21:21 -0500,1906, properly ignore return value broke compilation linux 3.13 gcc 4.7.3 signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1906,,
5066,2e40f094109c2b345447351f07b0b525f44988d2,rian Behlendorf <behlendorf1@llnl.gov>, 2013-12-02 10:26:21 -0800,1536, remove incorrect assert zfs_sb_teardown part zfs_sb_teardown assertion inodes part zsb z_all_znodes list least one reference always true standard unmount case two case strictly true common case result fact unmounting filesystem normal unmount ms_active flag cleared super block causing iput_final evict inode reference count drop zero however rollback ms_active remains set since rolling back live filesystem need preserve existing super block allows inodes zero reference count stay cache thereby violating assertion destroy_inode zfs_sb_teardown exists small race dropping last reference inode removing zsb z_all_znodes list unlikely occur could also trigger assertion incorrect inode may safely zero reference count case since allowing zero reference count inode expected safe case simplest thing remove assert code enabled default build removing entirely safe change signed brian behlendorf behlendorf1 llnl.gov signed chris dunlop chris onthe.net.au signed tim chase tim chase2k.com close 1417 close 1536,,
5067,c8c8d1e7e5dd156ac0c268895edcd9e552a3adea,ichard Yao <ryao@gentoo.org>, 2013-11-13 09:30:21 -0500,1907," drive database update added adata s396 obtained drive_id apple macbookair3,1 ssd obtained drive_id apple macbookpro10,1 ssd obtained drive_id intel 510 obtained drive_id intel 710 obtained drive_id intel s3500 obtained drive_id netapp lun obtained illumos user sd.conf ocz agility obtained drive_id ocz vertex obtained drive_id samsung pm800 obtained drive_id sandisk u100 obtained drive_id sun comstar obtained illumos user sd.conf note entry intel s3500 extrapolated 800gb model entry ata intel ssdsc2bb80 entire intel 710 extrapolated 120gg model entry ata intel ssdsa2bz12 entire intel 510 extrapolated 250gb model entry ata intel ssdsc2mh25 entire apple macbookpro10,1 ssd extrapolated 512gb model entry ata apple ssd sm512e google search suggest rebadged samsung 830 entire apple macbookair3,1 ssd extrapolated 128gb model entry ata apple ssd ts128c google search suggest rebadged kingston ssdnow 100 based toshiba sun comstar iscsi target tell correct sector size method list reference purpose commented similarly clear right thing netapp comment signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1907",,
5068,f707635fa5a0a687f243a9b0976d7296955744d9,im Chase <tim@chase2k.com>, 2013-11-20 07:56:56 -0600,1855, nvlist allocation hold processing need use km_pushpage hopefully catch rest allocation user hold release processing missed commit  signed brian behlendorf behlendorf1 llnl.gov close 1852 close 1855,,
5069,50a0749eba31e821a7edf286f1e3b149f7d13c59,ichard Yao <ryao@gentoo.org>, 2013-11-25 11:22:33 -0500,312, linux 3.13 compat pas null new delegated inode argument check originally added sles10 a093c6a check struct vfsmount argument added however since sles10 based 2.6.16 kernel longer supported functionality dropped check refactored support linux 3.13 without concern historical version signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 312,,
5070,3e96de17d723d6f6c9e2fd04b059b50d4e0bbef0,ichard Yao <ryao@gentoo.org>, 2013-08-08 04:30:55 -0400,312, linux 3.13 compat remove unused flag variable __cv_init gcc 4.8.1 complained unused flag variable building linux 2.6.26.8 var tmp portage sys kernel spl 9999 work spl 9999 module spl module spl spl condvar.c function __cv_initâ var tmp portage sys kernel spl 9999 work spl 9999 module spl module spl spl condvar.c error variable flagsâ set used werror unused set variable int flag km_sleep  cc1 warning treated error additionally superfluous code preempt_count variable longer available linux 3.13. deleting unnecessary code fix linux 3.13 compatibility issue signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 312,,
5071,119a394ab0eee137a5198ad3fffab45fb11ef108,tienne Dechamps <etienne@edechamps.fr>, 2013-11-10 15:00:11 +0000,907, commit zil zpl_writepages msync case currently using msync result following code path sys_msync zpl_fsync zpl_writepages zpl_putpage code path zil_commit called part zpl_putpage mean page write handed dmu zil committed move next page one might imagine result atrocious performance large number page write instead committing batch writes commits containing one page extreme case result msync 700 time slower well inefficient use zil resource patch fix issue making sure requested writes batched committed unfortunately implementation somewhat non trivial way run sync mode get page without making wait writeback tag page solution implemented composed two part added new callback system zil allows caller notified itx get written stable storage one nice thing callback called zil_commit zil_sync well mean caller care whether write ended zil dmu get notified soon safe period improvement used previously support dmu writes rationale change allow zpl_putpage notified zil commit completed without block zil_commit zpl_writepages call non sync mode prevent blocking zpl_putpage issuing zil commits zpl_writepages issue commit instead relying zpl_putpage thus nicely batching writes note however still call sync mode edge case documented implementation whereas give dirty page running non sync mode thus need run least sync mode make sure honor persistency guarantee happens page modified time msync running rare case additional page second call nothing note change also fix bug related 907 whereas calling msync page already handed dmu previous writepages call would make msync block next txg sync instead returning soon zil commit complete new callback system fix problem signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1849 close 907,,
5072,30607d9b7b82dcb50eebe15d5b78cfd6deef07a5,urbo Fredriksson <turbo@bayour.com>, 2013-11-18 13:46:10 +0000,1856, document spl module parameter first draft spl module parameter man page extracted parameter name description modinfo checked source type default value need work preferably someone actually know value use similar zfsonlinux zfs 1856 spl signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1856,,
5073,14cecbb159a45c37f84948c758db1009dda49c62,rey Dockendorf <treydock@gmail.com>, 2013-11-15 13:36:24 -0600,1873, change zfs dkm requirement version 2.2.0.3 dkm epel fedora repository added necessary patch support zol therefore zfs dkm requirement dkm set match version higher allows drop custom dkm build zol epel fedora repository reference http show_bug.cgi 1023598 signed brian behlendorf behlendorf1 llnl.gov close 1873,,
5074,54d5378faea6861156fe94b4cd8d817836ed0242,uri Pankov <yuri.pankov@nexenta.com>, 2013-11-19 16:41:37 +0100,937, illumos 2583 2583 add parsable option zfs list reference http www.illumos.org issue 2583 illumos illumos gate ported gregor kopka gregor kopka.net signed brian behlendorf behlendorf1 llnl.gov close 937,,
5075,e3dc14b86182a82d99faaa5979846750d937160e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-15 09:59:09 -0800,1275, add read write accounting zfs bypass page cache inherit per task accounting free however linux kernel doe provide helper function allow perform accounting commonly used direct also bypass page cache used common read write call path well signed pavel snajdr snajpa snajpa.net signed brian behlendorf behlendorf1 llnl.gov close 313 close 1275,,
5076,29714574fa17291d8427f9a45b109292166d5551,urbo Fredriksson <turbo@bayour.com>, 2013-11-16 06:52:54 +0000,1856, document zfs module parameter first draft zfs module parameter man page extracted parameter name description modinfo checked source type default value need work preferably someone actually know value use signed brian behlendorf behlendorf1 llnl.gov close 1856,,
5077,539defc873dd1b53d7fc483947e56cbfaeebeee8,aximilian Mehnert <maximilian.mehnert@gmx.de>, 2013-11-17 11:47:50 +0100,1841, add missing libzfs_core makefiles platform symbol provided libzfs_core used libzfs available linker avoid issue libzfs_core added list required library building utility depend libzfs handled properly libtool still entirely clear platform signed brian behlendorf behlendorf1 llnl.gov close 1841,,
5078,e5bacf2109943b813e77185cffb7db07747a6d9c,teven Hartland <smh@freebsd.org>, 2013-11-20 00:48:28 +1100,1886, illumos 4322 4322 zfs deadlock reviewed matthew ahrens mahrens delphix.com reviewed ilya usvyatsky ilya.usvyatsky nexenta.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4322 illumos illumos gate ported chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 1886,,
5079,fd2366300025ef7b836d80d629bd505c10693b4f,HE <git@dehacked.net>, 2013-11-19 19:00:43 -0500,1889, fix typo commit missing semicolon equal sign first hunk commit config kernel bdi.m4 result test always failing effect noticed rrdtool tool modifies file mmap msync would data never get saved disk spite file working mounted filesystem remains mounted signed dhe git dehacked.net signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close 1889,,
5080,64ad2b26e24ae9f70d3a41c786144552c2e6ac12,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-14 14:22:52 -0800,1631, remove slog restriction bootfs pool linux restriction doe apply access required device signed brian behlendorf behlendorf1 llnl.gov close 1631,,
5081,28967367c9e1e97bbd9745da21e26650b508f6f8,yril Plisko <cyril.plisko@mountall.com>, 2013-08-26 09:04:38 +0300,1677, tighten zfs dependency zfs kmod make zfs depend version zfs kmod rather better yum repository contains number version dependency resolution break trying install non latest version signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 1677,,
5082,227bc96951c020a6ea16dbb244901d65d5ee4ba1,atthew Thode <mthode@mthode.org>, 2013-11-06 15:54:54 -0600,1832, fix extends support selinux xattrs inode type properly initialize selinux xattrs inode type initial implementation accidentally file signed brian behlendorf behlendorf1 llnl.gov close 1832,,
5083,a16878805388c4d96cb8a294de965071d138a47b,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-13 11:05:17 -0800,1778, reduce stack recursion pool import stack overflow may still occur due potentially deep recursion likely occur additional layer added block device stack multipath minimize stack usage call path following change made added keywork noinline vdev_ _map_alloc function prevent inlined gcc reduced stack usage 208 128 byte 144 128 byte saved_poolname charater array zfsdev_ioctl moved stack heap reduced stack usage zfsdev_ioctl 368 112 byte major saving came slimming 224 144 byte since function called recursively byte saved per invokation add following change made hard local variable replaced td_hard macro local variable replaced td_pfd reference zbookmark_t moved heap doe cost additional memory allocation per recursion cost still minimal cost could reduced adding dedicated zbookmark_t slab cache variable declaration bp_get_level restructured use minimum amount stack includes removing cbp local variable overall offending use case roughly 1584 total stack space saved enough avoid overflowing stack stock kernel stack see 1778 additional detail signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 1778,,
5084,dd33a169ef1e071c2eb777328fe91df30ce542ae,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-14 14:05:45 -0800,306, retroactively fix bogus changelog date new version rpmbuild detect invalid date added incorrectly changelog silence noise fix signed brian behlendorf behlendorf1 llnl.gov close 306,,
5085,9bd8cbc53d46c09d2f465d4207eaa00c26e29fc5,yril Plisko <cyril.plisko@mountall.com>, 2013-11-14 13:58:35 -0800,1677, tighten spl dependency spl kmod make spl depend version spl kmod rather better yum repository contains number version dependency resolution break trying install non latest version signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1677,,
5086,65c67ea86e9f112177f1ad32de8e780f10798a64,im Chase <tim@chase2k.com>, 2013-11-10 09:00:54 -0600,1855, nvlist allocation hold processing need use km_pushpage commit restructured hold release processing moved work sync task number nvlist allocation need use km_pushpage signed brian behlendorf behlendorf1 llnl.gov close 1852 close 1855,,
5087,2008e9209f2ec37321ec06de4988c5c7f9a015b8,im Chase <tim@chase2k.com>, 2013-11-09 19:22:06 -0600,1861, fix rollback mounted filesystem regression illumos 3875 patch reverted part zol 7b3e34b added special case error handling zfs_rezget error handling dealt case one object number ended passed dnode_hold causing einval returned zfs_rezget signed brian behlendorf behlendorf1 llnl.gov close 1859 close 1861,,
5088,09d672d331377e5764bc94b3362c35481ae96a52,atthew Thode <mthode@mthode.org>, 2013-11-08 15:53:54 -0600,1838, python fix future proofing compatibility newer version python signed matthew thode prometheanfire gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1838,,
5089,23bc1f91fc5694699750be6343070e0d16fbe4ea,atthew Thode <mthode@mthode.org>, 2013-11-08 15:52:06 -0600,1838, pep8 code readability change update code follow pep8 style guide reference http www.python.org dev pep pep 0008 signed matthew thode prometheanfire gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1838,,
5090,7a4f54688ee9503c5bf9fcd7a88c4b4b33c36572,assu <bassu@phi9.com>, 2013-11-09 02:16:38 +0500,1847, explain zfs list snap name name speedup commit 0cee240 freebsd dramatically speed zfs list performance assuming interested dataset name optimization mentioned man page allow end user take advantage signed brian behlendorf behlendorf1 llnl.gov close 1847,,
5091,760ec997dfde8cf7dcbe1f367456423668e0cf76,atthew Thode <mthode@mthode.org>, 2013-11-06 16:56:50 -0600,1837, updating init script robust grepping previous pattern could accidentally match thing like real_root zfs node02 zp00 root rootfs due zfs substring signed matthew thode mthode mthode.org signed brian behlendorf behlendorf1 llnl.gov close 1837,,
5092,fd4f76160cb34539f875781fe7f2dea4b937ace5,im Chase <tim@chase2k.com>, 2013-11-06 23:55:18 -0600,1819, handle concurrent snapshot automounts failing due ebusy current snapshot automount implementation possible multiple mount attempted concurrently one mount succeed fail failed mount cause eremote propagated back application commit work around problem adding new exit status mount_busy mount.zfs program used underlying mount call return ebusy zfs code detects condition treat mount succeeded signed brian behlendorf behlendorf1 llnl.gov close 1819,,
5093,b1d13a60d12a7df0f2e1bed6405529790213a6cb,im Chase <tim@chase2k.com>, 2013-11-07 22:45:39 -0600,1839, document dedupditto pool property signed brian behlendorf behlendorf1 llnl.gov close 1839,,
5094,c3d9c0df3ee8d43db22815ebbfbe8b803fa46e46,ichard Yao <ryao@gentoo.org>, 2013-11-05 11:35:54 -0500,307, linux 3.12 compat new shrinker api torvalds linux 24f7c6 introduced new shrinker api torvalds linux a0b021 dropped support old shrinker api patch add support new shrinker api wrapping old one new one change also reorganizes autotools check shrinker api configure script fail early unknown api encountered future support set_shrinker api used linux 2.6.22 older dropped general rule compatibility maintained back linux 2.6.26 signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1732 close zfsonlinux zfs 1822 close 293 close 307,,
5095,b695c34ea4ca3037cfbc0fe7a9283334b761abc1,assimo Maggi <me@massimo-maggi.eu>, 2013-11-03 00:40:26 +0100,1825, honor kernel option required posix acl interface available kernel defined therefore enable posix acl support kernel major distribution kernel enable default kernel doe support posix acls following warning printed zfs module load time zfs posix acls disabled kernel signed massimo maggi massimo maggi.eu signed brian behlendorf behlendorf1 llnl.gov close 1825,,
5096,78e2739d3c9e433c92cd1623a510edb2c83a97d9,atthew Ahrens <mahrens@delphix.com>, 2013-08-12 12:53:33 -0400,1650, 26126 panic system rather corrupting pool hit bug 26100 reference delphix delphix ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1650,,
5097,2517c8ee08ef21ba112c00a94070302cdca04a58,rian Behlendorf <behlendorf1@llnl.gov>, 2013-11-05 10:32:39 -0800,1775, switch allocation km_sleep km_pushpage couple kmem_alloc allocation using km_sleep sync thread context accidentally introduced recent set illumos patch solution switch km_pushpage promote_hold snaplist_make kmem_alloc sizeof snap km_sleep  kmem_alloc sizeof km_sleep signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5098,1ca546b33888b8f4c7e737faf8f038732926fd6e,aso Kiselkov <skiselkov.ml@gmail.com>, 2013-10-14 18:29:45 -0400,1775, illumos 3995 3995 memory leak compressed buffer reference http illumos.org issue 3995 ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1688 issue 1775,,
5099,43a696ed38cae25ec2d7b6466ab4a99eb86df7bd,eorge Wilson <george.wilson@delphix.com>, 2013-10-04 14:13:23 -0800,1775, illumos 4168 4169 4170 4168 ztest assertion failure dbuf_undirty 4169 verbatim import cause zdb segfault 4170 zhack leaf pool active state reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4168 http www.illumos.org issue 4169 http www.illumos.org issue 4170 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5100,92bc214c2e00bd4a430eac1629f1bcf2fc590d51,atthew Ahrens <mahrens@delphix.com>, 2013-08-30 01:19:35 -0800,1775, illumos 4082 4082 zfs receive get efbig reviewed eric schrock eric.schrock delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 4082 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5101,ac72fac3eaa569902cad88053167f7d74e7fe7e4,eorge Wilson <george.wilson@delphix.com>, 2013-08-29 10:56:49 -0800,1775, illumos 3954 4080 4081 3954 metaslabs continue load even hitting limit 4080 zpool clear fails clear pool 4081 need reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3954 http www.illumos.org issue 4080 http www.illumos.org issue 4081 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5102,a169a625a6d57ae0a92147cfde0da69235b2d4f1,atthew Ahrens <mahrens@delphix.com>, 2013-08-22 09:51:47 -0800,1775, illumos 4046 4046 dsl_dataset_t ds_dir dd_lock highly contended reviewed eric schrock eric.schrock delphix.com reviewed george wilson george.wilson delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 4046 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note commit removed illumos appears removed zfsonlinux earlier commit,,
5103,8ce0af07bb3227c152d32e74683d1fdc1869246c,arcel Telka <marcel.telka@nexenta.com>, 2013-08-15 22:33:42 -0400,1775, illumos 4061 4061 libzfs memory leak reviewed jeffry molanus jeffry.molanus nexenta.com reviewed boris protopopov nexenta.com reviewed andy stormont andyjstormont gmail.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4061 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5104,b663a23d36d805dd5e9d1b4663dbf5966944002d,atthew Ahrens <mahrens@delphix.com>, 2013-08-20 20:11:52 -0800,1775, illumos 4047 4047 panic dbuf_free_range dmu_free_object zfs receive reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 4047 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note exported symbol dmu_free_object renamed illumos,,
5105,46ba1e59d3ae7e374c7a98f15f4bef21ee3fcded,atthew Ahrens <mahrens@delphix.com>, 2013-08-14 11:42:31 -0800,1775, illumos 3996 3996 want libzfs_core api rollback latest snapshot reviewed christopher siden delphix.com reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com reviewed andy stormont andyjstormont gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3996 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5106,5d1f7fb647e8923d154901ef3e19676e7bf3d345,eorge Wilson <george.wilson@delphix.com>, 2013-08-07 12:16:22 -0800,3962, illumos 3956 3957 3958 3959 3960 3961 3962 3956 vdev work pipeline 3957 ztest update cachefile killing 3958 multiple scan lead partial resilvering 3959 ddt entry always resilvered 3960 dsl_scan skip dedup block physical birth logical birth 3961 freed gang block resilvered cause pool suspend 3962 ztest print zfs debug buffer exiting reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3956 http www.illumos.org issue 3957 http www.illumos.org issue 3958 http www.illumos.org issue 3959 http www.illumos.org issue 3960 http www.illumos.org issue 3961 http www.illumos.org issue 3962 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov porting note used userland since mdb linux doe make sense make available kernel mean build failure occur future kernel patch depends however unlikely given functionality added support zdb invoked vvv greater log level preserve existing behavior minimal noise running  call nvlist_alloc changed fnvlist_alloc must pas km_pushpage txg_sync context,,
5107,621dd7bb2c970838bcf2226ac365c517af7a4bb1,eorge Wilson <george.wilson@delphix.com>, 2013-08-07 10:24:34 -0800,1775, illumos 3949 3950 3952 3953 3949 ztest fault injection avoid resilvering device 3950 ztest deadman fire scan 3951 ztest hang running dedup test 3952 ztest ztest_reguid test place nice together reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3949 http www.illumos.org issue 3950 http www.illumos.org issue 3951 http www.illumos.org issue 3952 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note deadman thread removed ztest original port depended solaris thr_create interface functionality reintroduced using portable pthreads,,
5108,383fc4a9970ede483dc4bd7579f1c62942d1312f,atthew Ahrens <mahrens@delphix.com>, 2013-08-07 10:32:46 -0800,1775, illumos 3955 3955 ztest failure assertion refcount_count delta reviewed adam leventhal ahl delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed george wilson george.wilson delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3955 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5109,9554185d90a9f833c023c1bb8bc35779b8fd1b10,teven Hartland <smh@freebsd.org>, 2013-08-06 09:50:40 -0800,1775, illumos 3973 3973 zfs_ioc_rename alters passed zc_name reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3973 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5110,6389d42205f56083b7658b2c67f117a244f13e52,teven Hartland <smh@freebsd.org>, 2013-07-29 11:36:31 -0800,1775, illumos 3909 3909 zfs send doe work reviewed matthew ahrens mahrens delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3909 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5111,ea97f8ce35a8a515610e52b7e4744549f9c510f4,atthew Ahrens <mahrens@delphix.com>, 2013-07-29 10:58:53 -0800,1775, illumos 3834 3834 incremental replication holey file system slow reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3834 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5112,2883cad5b747b5e4e2164fbe3236451d5b43f333,atthew Ahrens <mahrens@delphix.com>, 2013-07-03 08:13:38 -0800,1775, illumos 3836 3836 zio_free processed immediately common case reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3836 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5113,498877baf5038b32c1531e5ec96b435023200f4d,atthew Ahrens <mahrens@delphix.com>, 2013-05-16 14:18:06 -0700,1489, illumos 3112 3113 3114 3112 ztest doe honor zfs_debug 3113 ztest use watchpoints protect frozen arc bufs 3114 leaked nvlists zfsdev_ioctl reviewed adam leventhal ahl delphix.com reviewed matt amdur matt.amdur delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden chris.siden delphix.com approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 3112 http www.illumos.org issue 3113 http www.illumos.org issue 3114 illumos illumos gate proc self cmd watchpoint interface specific solaris therefore 3113 implementation reworked use portable mprotect system call page watched marked read protection write protected address range immediately trigger sigsegv page marked writable unwatched ported brian behlendorf behlendorf1 llnl.gov issue 1489,,
5114,03c6040bee6c87a9413b7da41d9f580f79a8ab62,eorge Wilson <george.wilson@delphix.com>, 2013-05-10 12:47:54 -0700,1489, illumos 3236 3236 zio nop write reviewed matt ahrens matthew.ahrens delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden chris.siden delphix.com approved garrett amore garrett damore.org reference illumos illumos gate http www.illumos.org issue 3236 porting note patch merged dispite increased instance http www.illumos.org issue 3113 triggered ztest ported brian behlendorf behlendorf1 llnl.gov issue 1489,,
5115,831baf06efb3023ddee7ed41800d3b44521bf2ee,eith M Wesolowski <wesolows@foobazco.org>, 2013-07-27 10:50:07 -0700,1775, illumos 3875 3875 panic zfs_root failed rollback reviewed jerry jelinek jerry.jelinek joyent.com reviewed matthew ahrens mahrens delphix.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 3875 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5116,19580676295b4e271da63dce145bb17c3731d069,atthew Ahrens <mahrens@delphix.com>, 2013-07-29 10:55:16 -0800,1775, illumos 3888 3888 zfs recv destroy snapshot created since incremental source reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed peng dai peng.dai delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3888 illumos illumos gate porting note commit wrapped declaration assertv assertv local variable removed avoid unused variable warning signed brian behlendorf behlendorf1 llnl.gov ported richard yao ryao gentoo.org issue 1775,,
5117,96c2e961938d4018ddb393fa60e004d8a91a58e9,eith M Wesolowski <wesolows@foobazco.org>, 2013-07-27 10:51:50 -0700,1775, illumos 3894 3894 zfs allow snapshot inconsistent dataset reviewed matthew ahrens mahrens delphix.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 3894 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5118,1a077756e8ba946a55f999fa1cb5f0e7dcb9aa81,atthew Ahrens <mahrens@delphix.com>, 2013-06-20 14:43:17 -0800,1775, illumos 3829 3829 fix 3740 changed behavior zfs destroy hold release ioctl reviewed matt amdur matt.amdur delphix.com reviewed christopher siden delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3829 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5119,34ffbed88c949bc4c8b52691e548db16a6e6816a,teven Hartland <smh@freebsd.org>, 2013-06-18 22:36:40 -0800,1775, illumos 3818 3818 zpool status report pool removed l2arc device reviewed saso kiselkov skiselkov.ml gmail.com reviewed george wilson gwilson zfsmail.com approved christopher siden delphix.com reference http www.illumos.org issue 3818 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5120,95fd54a1c5b93bb2aa3e7dffc28c784b1e21a8bb,teven Hartland <smh@freebsd.org>, 2013-05-25 02:06:23 +0000,1775, illumos 3740 3740 poor zfs send receive performance due snapshot hold release processing reviewed matthew ahrens mahrens delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3740 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note introduced merge conflict variable moved outside preprocessor directive made previous merge conflict worse switching km_sleep km_pushpage notable commit refactors code adding new km_sleep allocation clear whether converted km_pushpage merge conflict copyright notice several small c99 compatibility fixed made,,
5121,7bc7f25040e68d6094a6c46fc300a3c4d66d2970,ill Andrews <will@firepipe.net>, 2013-06-11 09:13:47 -0800,1775, illumos 3745 3811 3745 zpool create treat mountpoint 3811 zpool create altroot xyz mountpoint mnt ignores mountpoint option reviewed matthew ahrens mahrens delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3745 http www.illumos.org issue 3811 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5122,d09f25dc66774959499a89bf3680d09c6e541ce8,ill Andrews <will@firepipe.net>, 2013-06-11 09:13:43 -0800,1775, illumos 3744 3744 zfs ignore error unmounting snapshot reviewed matthew ahrens mahrens delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3744 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note clear way distinguish failure tried unmount snapdir zvol doe exist failure try unmount snapdir dataset change dropped favor altered linux function unconditionally return,,
5123,3a84951d7dfb5357509a1ed1699f80b71f87982a,ill Andrews <will@firepipe.net>, 2013-06-11 09:13:38 -0800,1775, illumos 3743 3743 zfs need refcount audit reviewed matthew ahrens mahrens delphix.com reviewed eric schrock eric.schrock delphix.com reviewed george wilson george.wilson delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3743 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5124,d3cc8b152edc608fa4b73d4cb5354356da6b451c,ill Andrews <will@firepipe.net>, 2013-06-11 09:12:34 -0800,1775, illumos 3742 3742 zfs comment need cleaner consistent style reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed eric schrock eric.schrock delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3742 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note change zfs_vfsops.c dropped involves doe exist linux port,,
5125,e49f1e20a09181d03382d64afdc4b7a12a5dfdf1,ill Andrews <will@firepipe.net>, 2013-06-11 09:12:34 -0800,1775, illumos 3741 3741 zfs need better comment reviewed matthew ahrens mahrens delphix.com reviewed eric schrock eric.schrock delphix.com approved christopher siden delphix.com reference http www.illumos.org issue 3741 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5126,b1118acbb16ec347f6a3eb091d9b7097d12b8d54,artin Matuska <mm@FreeBSD.org>, 2013-05-23 13:07:25 -0400,1775, illumos 3699 3739 3699 zfs hold release non existent snapshot doe output error 3739 set zfs quota reservation pool version reviewed matthew ahrens mahrens delphix.com reviewed eric shrock eric.schrock delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3699 http www.illumos.org issue 3739 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5127,63fd3c6cfd264cab94dc186fe8cceecac8bc0d50,dam Leventhal <ahl@delphix.com>, 2013-08-28 16:05:48 -0700,1775, illumos 3582 3584 3582 zfs_delay support variable resolution 3584 dtrace sdt probe zfs txg state reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd nexenta.com reviewed richard elling richard.elling dey sys.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3582 illumos illumos gate 0689f76 ported ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5128,c1fabe7961b100a7dfd77cddba1650d9a6580dc0,ark Shellenbaum <Mark.Shellenbaum@Oracle.COM>, 2010-08-18 13:59:31 -0600,1775, 6977619 null pointer deference reference illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5129,c0ebc844c78cd40c086dd145dc129b73f17af21b,ark Shellenbaum <Mark.Shellenbaum@Sun.COM>, 2010-04-05 19:59:44 -0600,1775, 6939941 problem moving file zfs reference illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note commit old two line applied modern code base,,
5130,184c6873874c350bfb0b74f9e08ec8d89750d603,ed Bass <bass6@llnl.gov>, 2013-11-01 13:37:58 -0700,304, emulate illumos interface needed illumos 3582. interface supposed support variable resolution timeout nanosecond granularity implementation round microsecond resolution nanosecond precision timing rarely needed real world performance tuning may incur unnecessary busy waiting usleep_range used available otherwise udelay msleep used depending length delay interval add flag sys callo.h used control behavior specifically  normally expiration passed timeout api function expiration interval flag specified interpreted expiration time  roundup expiration time next resolution boundary flag specified expiration time rounded reference http www.illumos.org issue 3582 illumos illumos gate 0689f76 signed brian behlendorf behlendorf1 llnl.gov close 304,,
5131,2696dfafd9ebce5e3aa227c630b13f2c5b26bce9,eorge Wilson <george.wilson@delphix.com>, 2013-04-23 09:31:42 -0800,1775, illumos 3642 3643 3642 dsl_scan_active issue determine async destroying active 3643 txg_delay hold tc_lock reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 3642 http www.illumos.org issue 3643 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note alignment assumption tx_cpu structure assume kmutex_t byte true linux tc_pad adjusted anyway consistency since structure never carefully aligned zol careful alignment doe impact performance significantly reworked portable,,
5132,7ec09286b761ee1fb85178ff55daaf8f74d935be,atthew Ahrens <mahrens@delphix.com>, 2013-04-10 13:54:56 -0800,1775, illumos 3645 3692 3645 dmu_send_impl possibilty pool hold leak 3692 panic zfs receive recursive deduplicated stream reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed dan mcdonald danmcd nexenta.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3645 http www.illumos.org issue 3692 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1792 issue 1775,,
5133,2e528b49f8a0f8f2f51536a00fdf3ea9343bf302,atthew Ahrens <mahrens@delphix.com>, 2013-03-08 10:41:28 -0800,1775, illumos 3598 3598 want dtrace error generated zfs reviewed dan kimmel dan.kimmel delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3598 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 porting note include sys zfs_context.h modified render new macro inert dtrace available linux linux specific change adapted use set_error happy change doe nothing ugly code linux unfortunately need take avoid merge conflict future brian,,
5134,7011fb6004b2227ff9e89894ed69ab83d36c1696,uri Pankov <yuri.pankov@nexenta.com>, 2013-03-06 17:57:09 -0800,1775, illumos 3517 3517 importing pool autoreplace hole vdevs crash syseventd reviewed albert lee trisk nexenta.com reviewed jeffry molanus jeffry.molanus nexenta.com reviewed george wilson gwilson zfsmail.com approved christopher siden delphix.com reference http www.illumos.org issue 3517 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5135,d1fada1e6d953e32de4080bd366df17c640de191,atthew Ahrens <mahrens@delphix.com>, 2013-07-05 15:37:16 -0400,1775, illumos 3603 3604 bobj improvement 3603 panic 3604 zdb print bpobjs verbosely 3871 gcc 4.5.3 doe like issue 3604 patch reviewed henrik mattson henrik.mattson delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com reviewed garrett amore garrett damore.org approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3603 http www.illumos.org issue 3604 http www.illumos.org issue 3871 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775 note patch illumos issue 3871 accepted illumos time writing something wrote porting documentation illumos issue,,
5136,24a64651b4163d47b1187821152d762e9a263d5a,atthew Ahrens <mahrens@delphix.com>, 2013-02-22 01:23:09 -0800,3588, illumos 3588 3588 provide zfs property logical uncompressed space used referenced reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com reviewed dan mcdonald danmcd nexenta.com reviewed richard elling richard.elling dey sys.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3588 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
5137,c2e42f9d53bec422abb71efade2c004383345038,eorge Wilson <george.wilson@delphix.com>, 2013-02-20 13:30:36 -0800,3579, illumos 3578 3579 3578 transferring freed map defer map constant time 3579 ztest trip assertion metaslab_weight reviewed matthew ahrens mahrens delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed richard elling richard.elling dey sys.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3578 http www.illumos.org issue 3579 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
5138,23c0a1333c09f353ec872fb9eca2d36f6214cedc,eorge Wilson <george.wilson@delphix.com>, 2013-02-17 12:00:54 -0800,3116, illumos 3561 3116 3561 arc_meta_limit exposed via kstats 3116 zpool reguid may log negative guids internal spa history reviewed matthew ahrens mahrens delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden delphix.com reviewed gordon ross gordon.ross nexenta.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3561 http www.illumos.org issue 3116 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov porting note spa change accidentally included libzfs_core merge add missing arcstats already implemented kstats year ago,,
5139,330847ff36146a427a48e79a9733dda3828284e8,atthew Ahrens <mahrens@delphix.com>, 2013-08-26 17:09:29 -0700,3537, illumos 3537 3537 want pool kstats reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed kiselkov skiselkov.ml gmail.com reviewed garrett amore garrett damore.org reviewed brendan gregg brendan.gregg joyent.com approved gordon ross gwr nexenta.com reference http www.illumos.org issue 3537 illumos illumos gate c3a6601 ported cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov porting note patch restructured take advantage existing spa statistic infrastructure accomplish kstat moved spa io_stats init destroy code moved spa_stats.c kstat simply named pool conflicted pool directory already created therefore renamed pool update handler added allow kstat zeroed,,
5140,a117a6d66e5cf1e9d4f173bccc786a169e9a8e04,eorge Wilson <george.wilson@delphix.com>, 2013-02-10 22:21:05 -0800,3522, illumos 3522 3522 zfs module allow uninitialized variable reviewed sebastien roy seb delphix.com reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3522 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov porting note zfsonlinux already addressed many issue use wall however manner addressed differed illumos fix replace one previously made zfsonlinux reduce code difference part upstream patch made small change arc.c might address zfsonlinux zfs 1334 initialization aclsize zfs_log_create differs vsecp null pointer zfsonlinux change dropped diverged need resynced,,
5141,a35beedfb3f25596b4ec9122742c1337083118f5,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-30 11:19:53 -0700, , add cstyle.pl utility cstyle.1 man page cstyle source style checker used illumos since original zfs source written using style guideline must also followed zol consistency checker added script directory may run per file basis new patch careful avoid introducing new style warning additionally checkstyle target added top level makefile used check entire source tree zol historically attempted follow sunos style guide lack rigorous style checker allowed various warning introduced currently 2211 reported style violation want gradually eliminate tree note cstyle.1 man page provided man man1 cstyle.1 since developer utility installed along man page signed brian behlendorf behlendorf1 llnl.gov,,
5142,495b25a91a8f29aeec9e2965752a1fc9b9569583,ichard Yao <ryao@gentoo.org>, 2013-10-08 22:37:38 -0400, , add missing code zfs_debug required make illumos 3962 merge signed richard yao ryao gentoo.org,,
5143,632a242e8352f0a4684f41286a288689f97e504b,ichard Yao <ryao@gentoo.org>, 2013-10-07 06:53:58 -0400,1775, add missing copyright notice illumos resolve merge conflict merging illumos 3588 illumos 4047 signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5144,20f04f08aa5032f1e958ba38654d9ed833b6b636,ichard Yao <ryao@gentoo.org>, 2013-10-08 17:59:42 -0400,1775, fix incorrect usage strdup modifying length string returned strdup incorrect strfree allowed use strlen determine slab cache used allocation signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5145,8c8417933f11d2bda734056f34f5d7c982acbcec,ichard Yao <ryao@gentoo.org>, 2013-10-07 07:30:22 -0400,1775, fix order function call zio_free_sync resolution merge conflict merging illumos 3464 caused invert order couple function call zio_free_sync versus illumos signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5146,9cac042cfeccb2d3ecc5a96c0c2ba9afe631338b,ichard Yao <ryao@gentoo.org>, 2013-09-02 00:22:30 -0400,1775, reintroduce accidentally removed overzealous commenting signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1775,,
5147,023699cd62eb033ebed5e5fae4e13acaba4c5461,assimo Maggi <me@massimo-maggi.eu>, 2013-10-28 09:22:15 -0700,170, posix acl support change add support posix acls storing xattr common practice many linux file system since posix acl stored xattr overwrite existing zfs nfsv4 acls may set posix acl also non functional platform although may visible xattr platform understands based xattrs default posix acls disabled may enabled new aclmode noacl posixacl property set property posixacl enable zfs nfsv4 acl support ever added appropriate acltype added change pass posix test suite cleanly exception xacl 00.t test incorrect linux ext4 fails http www.tuxera.com community posix test suite signed massimo maggi massimo maggi.eu signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 170,,
5148,7c2448a33ee71be1671c158a167559d1320ff839,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-28 11:57:15 -0700,170, improve xattr property documentation extend xattr property section zfs cover style supported xattr short discussion benefit drawback type presented allow user make informed choice signed massimo maggi massimo maggi.eu signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 170,,
5149,fc9e0530c9b1be00c122f88d9e4c8c329f2d5d26,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-28 09:07:00 -0700,170, prevent xattr remove creating xattr directory attempting remove xattr file doe contain directory based xattrs would result xattr directory created behavior non optimal result write operation pool addition expected error returned prevent flag passed setting non null xattr value addition zpl_xattr_set updated similarly return immediately passed xattr name exist null value signed massimo maggi massimo maggi.eu signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 170,,
5150,37fd6e00a699aff3fea24199497e9484cd218a84,rakash Surya <surya1@llnl.gov>, 2013-08-26 09:23:09 -0700,1679, add script fix file name upstream patch added simple sed script search replace illumos zfs file name replace zfs linux equivalent example usage replace illumos path linux path script zfs2zol patch.sed arc.c.patch ensure script worked expected diff arc.c.patch apply patch using linux path patch signed richard yao ryao gentoo.org signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1679,,
5151,c12e3a594a49ed10b7870d950c1f336f78f136cb,ichard Yao <ryao@gentoo.org>, 2013-10-02 11:22:53 -0400,1750, restructure zfs_readdir fix regression doe following creates uint8_t type value initialized dt_dir dot directory zfs_dirent_type otherwise resolve regression return unintialized value directory entry type dot directory accidentally introduced commit restructures zfs_readdir code use uint64_t offset like illumos instead loff_t resolve regression negative zap cursor treated dot directory restructures function closely match structure zfs_readdir illumos remove unused variable outcount used illumos signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1750,,
5152,d65e73810938e5619b72591d3438063b00949e77,alf Ertzinger <ralf@skytale.net>, 2013-10-23 10:50:48 +0200,1813, add switch zpool get work switch zfs get displaying full resolution value appropriate attribute signed brian behlendorf behlendorf1 llnl.gov close 1813,,
5153,8b921f667afc86c452242be0b6d3b257472ebe76,alf Ertzinger <ralf@skytale.net>, 2013-10-23 10:33:33 +0200,1813, introduce interface change introduces expanded version zpool_get_prop taking one additional boolean parameter parameter set b_false behave identically zpool_get_prop setting b_true return full precision number following property zpool_prop_size  zpool_prop_free    also introduced wrapper function zpool_get_prop making use background signed brian behlendorf behlendorf1 llnl.gov issue 1813,,
5154,157c9b6981ab6203550e8857144ac49e1e867fb7,teven Hartland <steven.hartland@multiplay.co.uk>, 2013-10-24 00:45:45 +0100,1805, corrected zfs list type syntax man page command help signed brian behlendorf behlendorf1 llnl.gov close 1805,,
5155,8eaf9f3543aa6843aa276010768cce8c0626e2d8,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-25 15:22:34 -0700, , merge branch kstat branch update several zfs kstats take advantage improved raw kstat functionality addition two new kstats script called dbufstat.py introduced updated new kstats dbufs stats dbufs dbuf_hash pool txgs stats last txgs synced disk pool read stats rhe last read issue arc pool dmu_tx_assign histogram assign time signed brian behlendorf behlendorf1 llnl.gov,,
5156,d738d34da5b25b5e5daef966c29386468fd16263,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-25 13:58:45 -0700, , add dbufstat.py command dbufstat.py command added provide conveniant way easily determine zfs caching script consumes raw proc spl kstat zfs dbufs kstat data consolidates human readable form designed primarily tool aid developer may also useful advanced user want visibility arc caching run without option dbufstat.py default showing list object least one buffer present cache total cache space consumed object printed right along object type similar arcstats.py command option may used display additional field two mode operation also supported dbufstat.py expectation additional display mode may added needed option summerize total number byte cached object type option show every dbuf currently cached script designed consistent arcstat.py includes option funcationality signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5157,e0b0ca983d6897bcddf05af2c0e5d01ff66f90db,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-02 17:11:19 -0700, , add visibility cached dbufs currently mechanism inspect dbufs cached system coarse counter arcstats give rough idea cached patch aim improve current situation adding new dbufs kstat read new kstat walk cached dbufs linked dbuf_hash dbuf dump detailed information buffer also dump additional information referenced arc buffer related dnode provides complete view exactly cached generic infrastructure place utility written post process data understand exactly caching working example data could processed show list cached dnodes much space consuming similar list could generated based dnode type many way interpret data exist based kind question trying answer signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov,,
5158,2d37239a28b8b2ddc0e8312093f8d8810c6351fa,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-02 11:43:52 -0700, , add visibility dmu_tx_assign time change add new kstat gain visibility amount time spent call dmu_tx_assign histogram exported via new dmu_tx_assign file information contained histogram frequency dmu_tx_assign took complete given interval range signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5159,0b1401ee911c5a0c0bdb7a8e6ad36840cea3af24,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-01 09:50:50 -0700, , add visibility txg sync behavior change attempt add visibility txgs formed system real time list added memory spa data structure pool element list corresponding txg entry exported kstat interface interpreted userspace txg following information exported unique txg number uint64_t time txd born hrtime_t wall clock time relative entry list current txg state pen uiescing yncing ommitted number reserved byte txg uint64_t number byte read txg uint64_t number byte written txg uint64_t number read operation txg uint64_t number write operation txg uint64_t time txg closed hrtime_t time txg quiesced hrtime_t time txg synced hrtime_t note raw kstat store relative hrtimes open quiesce sync time relative time used calculate long state took delta printed output handler signed brian behlendorf behlendorf1 llnl.gov,,
5160,1421c89142376bfd41e4de22ed7c7846b9e41f95,rakash Surya <surya1@llnl.gov>, 2013-09-06 16:09:05 -0700, , add visibility arc_read change attempt add visibility arc_read call occurring system real time list added memory spa data structure pool element list corresponding call arc_read entry exported kstat interface interpreted userspace arc_read call following information exported unique identifier uint64_t time entry added list hrtime_t wall clock time relative entry list objset uint64_t object number uint64_t indirection level uint64_t block uint64_t name function originating arc_read call char arc_flags arc_read call uint32_t pid reading thread pid_t command name thread originating read char exported information one see real time exactly read function generating read whether read found already cached still work done serve good starting point specifically dbuf_read accounted currently exported information thus follow patch probably added export call never call arc_read hit dbuf hash table addition might nice create utility similar arcstat.py digest exported information display readable format perhaps log information allow replayed later time signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5161,76463d4026e0fa4b3d7b96acd58cb5fb79c49af7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-30 11:51:20 -0700, , revert add txgs pool kstat file reverts commit,,
5162,98ab38d1096079d82247350f526f0d7268956fb5,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-30 11:45:58 -0700, , revert add new kstat monitoring time dmu_tx_assign reverts commit signed brian behlendorf behlendorf1 llnl.gov,,
5163,0f4b9a58063d95b4da26c64dab4054d6272e0973,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-25 13:50:07 -0700, , merge branch kstat branch update existing kstat infrastructure flexible particular extends kstat_type_raw type may used generate dynamic kstats without need additional custom type signed brian behlendorf behlendorf1 llnl.gov,,
5164,f483a97a417ca7292d6a7d516a72558d385f2370,ed Bass <bass6@llnl.gov>, 2013-08-26 16:42:11 -0700,3537, 3537 add friend kstat interface required port illumos 3537 want pool kstats zfs linux    kstat_runq_exit additionally zero ks_data buffer __kstat_create kstat_io_t counter initialized zero signed brian behlendorf behlendorf1 llnl.gov,,
5165,ffbf0e57c2ad9e72ab437c7982f443926cb26325,yril Plisko <cyril.plisko@infinidat.com>, 2013-08-13 15:15:36 +0300,286, kstat use private lock default porting illumos 3537 found ks_lock member kstat_t structure different illumos spl pointer kmutex_t illumos mutex lock spl apparently illumos kstat api allows consumer override lock required spl implementation possible anymore thing alright first attempt actually override lock porting illumos 3537 introduced code first time order provide solaris illumos like functionality convert ks_lock kmutex_t ks_lock create new field kmutex_t ks_private_lock kstat_create ks_lock ks_private_lock thus consumer care still internal lock use however consumer doe care chance set ks_lock anything else calling kstat_install rest code use ks_lock regardless origin signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 286,,
5166,11cb9d773f48830cf3ff718861c070a8937c6a03,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-11 14:24:18 -0700,1646, increase default udev wait time creating new pool adding replacing disk existing pool partition table automatically created device normal circumstance take second udev create expected device file dev however observed system heavy concurrently udev may take far longer also throw cheap dodgy hardware may take even longer prevent zpool command failing due default wait time udev increased second impact normal usage increase timeout noticed udev rule incorrectly configured signed brian behlendorf behlendorf1 llnl.gov close 1646,,
5167,b3c49d3df82466646bde9beebce7bbf0b3c41853,ichard Yao <ryao@gentoo.org>, 2013-10-05 17:55:24 -0400,1789, linux 3.11 compat rename lz4 symbol linus torvalds merged lz4 linux 3.11. cause conflict whenever set kernel .config rename symbol avoid conflict signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1789,,
5168,2e2ddc30b47c174d95c2eb491452a7587e3e129f,im Chase <tim@chase2k.com>, 2013-10-13 11:36:15 -0500,1786, dedup related documentation addition zpool zdb document option optional interval count zpool status also zpool man page use consistent order various option match program help output document effect additional option zdb signed brian behlendorf behlendorf1 llnl.gov close 1786,,
5169,fbcb768c8fd1f32653f46ed4a8a9ceafe139087b,im Chase <tim@chase2k.com>, 2013-10-12 17:33:28 -0500,1785, add missing dsl pool configuration lock semantics introduced restructured sync task illumos 3464 require lock calling pool locked unlocked iteration reduce chance long running lock accidentally missed original port zol control directory code linux specific different file illumos signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1785,,
5170,7a6144076166944655d86f1449be8566d1a3c71a,eorge Wilson <george.wilson@delphix.com>, 2013-02-21 13:58:29 -0800,1747, illumos 3552 3552 condensing one space map burn second cpu spa_sync thread fix race condition reference http www.illumos.org issue 3552 illumos illumos gate ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov porting note fix upstream regression introduced commit zfsonlinux zfs ported illumos 3552 change fix added upstream rather quickly time port one spotted race rare enough passed regression test discovered comparing metaslab.c illumos metaslab.c without change possible consume large amount cpu time since occurs mutex rcu critical section kernel log console self detected cpu stall follows info rcu_sched self detected stall cpu 60000 jiffy 11431890 11431889 18271 close 1687 close 1720 close 1731 close 1747,,
5171,ce07767f79c926acdbdf7bb272f05e89820f31c3,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-30 11:32:42 -0700,296, revert add kstat_type_txg type reverts commit favor using generic kstat_type_raw callback advantage approach arbitrary type added without need add spl signed brian behlendorf behlendorf1 llnl.gov issue 296,,
5172,09f38b7e60eea27637780822f86f80da8938bb1f,rakash Surya <surya1@llnl.gov>, 2013-09-24 16:11:56 -0700,296, add wrapper accessing pid command info change add simple wrapper accessing thread pid command character string signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 296,,
5173,56d40a686b0504042a088943154ba7b0dde36d51,rakash Surya <surya1@llnl.gov>, 2013-09-12 16:14:51 -0700,296, add callback displaying kstat_type_raw kstats current implementation displaying kstats type kstat_type_raw rather crude patch attempt enhance handling allowing kstat user register formatting callback optionally used callback allow user implement function interpreting data transposing character buffer buffer containing string representation raw data displayed current proc textual interface additionally kstats made writable possible provide useful handler via existing ks_update interface signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 296,,
5174,a6ce1eae54ca048ae7e7dfdcad05c5565a129226,ichard Yao <ryao@gentoo.org>, 2013-09-26 13:44:10 -0400,1751, fix libzfs_core change follow gnu libtool guideline gnu libtool documentation state start version rather illumos name consistent http www.gnu.org software libtool manual libtool.html updating version info gnu libtool documentation also provides guidence version information incremented doe soname bump libzfs libzpool library particularly important gentoo soname bump enables portage retain older library package link rebuilt main example grub2 grub2 mkconfig break unless rebuilt new library signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1751,,
5175,31fc19399e597e3391f19f1392ab120f1de0d5f2,ichard Yao <ryao@gentoo.org>, 2013-09-26 13:42:41 -0400,1751, generate library correct dt_needed entry library depend library list elf dt_needed field program linking need specify library unless depend well case current code consequence anything need library must know dependency fragile caused grub2 configure script break dependency added libblkid libzfs resolve problem using libadd ldadd specify library makefile.am instead ldflags ensures proper dt_needed entry generated prevents grub2 configure script breaking presence libblkid dependency also remove unneeded dependency various file signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1751,,
5176,1db7b9be75a225cedb3b7a60028ca5695e5b8346,ichard Yao <ryao@gentoo.org>, 2013-08-28 16:17:47 -0400,1751, fix libblkid support libblkid support dormant autotools check broken liblkid identifies zfs vdevs zfs_member zfs fix change first fix libblkid autotools check thing make 64mb file minimum size zfs permit make fake uberblock entry make libblkid check succeed return upon success make autotools use success case include stdlib.h avoid implicit declration free check zfs_member zfs make blkid disable autotools check avoids gentoo sandbox violation pas lblkid correctly using libs ldflags second change libblkid support scan zfs_member zfs make blkid work gentoo signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1751,,
5177,65ee05acd773beafd03bfedf96a092dd08cb2739,eil Stockbridge <neil@dist.ro>, 2013-10-09 18:58:30 +1300,1776, update detach section zpool detach section zpool man page suggests offline command using offline may appropriate certain situation signed brian behlendorf behlendorf1 llnl.gov close 1776,,
5178,40a806df259c0b826b8e962579dff64e8dfbf0d7,ed Bass <bass6@llnl.gov>, 2013-09-30 16:29:37 -0700,1762, export symbol enter exit needed consumer i.e lustre wish use interface register callback pool property interest change interface requires dsl pool configuration lock held called signed brian behlendorf behlendorf1 llnl.gov close 1762,,
5179,4768c0d0a61497f2f3a52678154f2742a355618f,ichard Yao <ryao@gentoo.org>, 2013-10-05 22:19:05 -0400, , define set_error signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
5180,429fe89ceefa033120f220787265eb10d77991e7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-25 14:52:29 -0700, , consistently use observed local_irq_save save interrupt state local variable would normally fine except call enables interrupt possible interrupt enabled process rescheduled different cpu disable could result restoring saved interrupt state one cpu another consequence perfectly clear clearly bug potential cause issue code updated use avoid signed brian behlendorf behlendorf1 llnl.gov,,
5181,6a696939617503e5c34dbb88ba62d556ce994bf1,ohsuke Kawaguchi <kk@kohsuke.org>, 2013-09-22 09:45:54 -0700,294, document run splat signed brian behlendorf behlendorf1 llnl.gov close 294,,
5182,3ecf2d2bb66b36917520c9b66154547f3510a66a,ed Bass <bass6@llnl.gov>, 2013-08-28 20:08:03 -0700,286, add kpreempt compatibility macro needed illumos 4045 write throttle patch used arc eviction code avoid blocking arc activity sitting arcs_mtx long signed brian behlendorf behlendorf1 llnl.gov issue 286,,
5183,df2c0f18498d1c98e4f211fdb623376b18f18134,ichard Yao <ryao@gentoo.org>, 2013-08-18 10:51:06 -0400,279, replace getnstimeofday used splat meant performance measurement modify splat use getnstimeofday equivalent gethrestime function solaris additionally update gethrestime invoke getnstimeofday signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 279,,
5184,222b94805903dfa6879565ab9b1c8e3b0d70cbdf,rian Behlendorf <behlendorf1@llnl.gov>, 2013-10-02 10:00:04 -0700, , fix memory leak false positive log_internal building spl enable debug kmem tracking memory leak detected log_internal happens false positive memory freed using strfree instead kmem_free kmem_alloc must released kmem_free ensure correct accounting spl kmem leaked 135 5641311 byte address size data func line 135 log_internal 456 signed brian behlendorf behlendorf1 llnl.gov,,
5185,3549721c9e1f737fb7ba83d1fd52f396fd16889c,ichard Yao <ryao@gentoo.org>, 2013-09-05 15:23:24 -0400,1752, update drive database add corsair force drive obtained drive_id add kingston hyperx obtained drive_id add ocz vertex drive obtained drive_id add samsung sm843t enterprise drive obtained drive_id add entry additional size intel 320 330 335 520 series add cruical c400 obtained illumos user sd.conf add toshiba ssd obtained illumos user sd.conf add samsung first slc ssd obtained drive_id add ocz core series obtained drive_id add intel s3700 obtained drive_id note drive identifer obtained samsung sm843t mz7wd480 rest extrapolated additional entry checked google verify drive exist wild additional entry intel drive extrapolated existing entry additional entry checked google verify drive exist wild ata c400 mtfddac512m ata toshiba thnsnh51 entry sd.conf gcbirzan freenode additional entry extrapolated checked google obtained samsung mccoe64g entry actual drive samsung mccoe32g entry extrapolated checked google obtained ssdsc2ba10 100gb intel s3700 drive extrapolated entry additional model signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1752,,
5186,36342b13d9973a8c4e83f7c702545494aa5b80b4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-25 09:33:00 -0700, , export addition dsl_prop_ symbol recent sync task restructuring 13fe019 introduced several new symbol exported use consumer lustre signed brian behlendorf behlendorf1 llnl.gov,,
5187,8769db396691978a48abee1d1855709d7b01d4d0,im Chase <tim@onlight.com>, 2013-09-20 09:30:04 -0500,1737, allocate ioctl output nvlist km_pushpage zfs error certain snapshot failure occur sync task context may require additional memory allocation initial nvlist must allocated km_pushpage signed brian behlendorf behlendorf1 llnl.gov issue 1746 issue 1737,,
5188,c5322236eccc7c5e1d23983c78928ad566685e7c,im Chase <tim@chase2k.com>, 2013-09-14 22:09:09 -0500,1737, fix several new km_sleep warning handful allocation occur sync path need use km_pushpage introduced commit 13fe019 signed brian behlendorf behlendorf1 llnl.gov issue 1746 issue 1737,,
5189,cbfa294de4937ae1af5845e9f765a3dc188cbcef,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-25 09:29:30 -0700,1749, fix spa_deadman tq_sleep warning spa_deadman spa_sync function run spa_sync context therefore use tq_pushpage instead tq_sleep signed brian behlendorf behlendorf1 llnl.gov close 1734 close 1749,,
5190,f9f3f1ef983e987a2e09a49c3684405561fed634,regorKopka <mailfrom-github@kopka.net>, 2013-09-19 16:42:17 +0200,1739, removing unneeded mutex reading vq_pending_tree size locking mutex vq_lock unneeded data modified vq_pending_tree read case garbage returned vq_pending_tree updated read made worst case would single read could queued mirror side busy thought benefit change streamlining code path since taken every mirror member every read signed brian behlendorf behlendorf1 llnl.gov close 1739,,
5191,77831e17385ba822fe70436d862c0e14df5d67b2,ohsuke Kawaguchi <kk@kohsuke.org>, 2013-09-25 15:14:47 -0700,1726, reduce stack usage doe recursion recursion deep overrun linux kernel stack size 8kb seen happen actual deployment subsequently confirmed running test workload custom built kernel 32kb stack see following stack trace example case would run 8kb stack kernel depth size location entry  11192 __kmalloc 0x2e 0x240 11120 144 0x20e 0x500 10976 dbuf_hold_impl 0x4a 0xa0 10904 120 dbuf_prefetch 0xd3 0x280 10784 0x10f 0x180 10704 240 dmu_zfetch 0x5f7 0x10e0 10464 168 dbuf_read 0x71e 0x8f0 10296 104 dnode_hold_impl 0x1ee 0x620 10192 dnode_hold 0x19 0x20 10176 dmu_buf_hold 0x42 0x1b0 10088 144 zap_lockdir 0x48 0x730 9944 128 0x1c4 0x2f0 9816 392 0xab 0x190 9424 392 0x10c 0x190 9032 392 0x10c 0x190 8640 392 0x10c 0x190 8248 392 0x10c 0x190 7856 392 0x10c 0x190 7464 392 0x10c 0x190 7072 392 0x10c 0x190 6680 392 0x10c 0x190 6288 392 0x10c 0x190 5896 392 0x10c 0x190 5504 392 0x10c 0x190 5112 392 0x10c 0x190 4720 392 0x10c 0x190 4328 392 0x10c 0x190 3936 392 0x10c 0x190 3544 392 0x10c 0x190 3152 392 0x10c 0x190 2760 392 0x10c 0x190 2368 392 0x10c 0x190 1976 392 0x10c 0x190 1584 392 0x10c 0x190 1192 232 0x311 0xf60 960 0x12f 0x230 888 168 dsl_pool_sync 0x48b 0x5c0 720 184 spa_sync 0x417 0xb00 536 184 txg_sync_thread 0x325 0x5b0 352 0x7a 0x90 304 128 kthread 0xc0 0xd0 176 176 ret_from_fork 0x7c 0xb0 change reduces stack usage allocating structure heap stack fundamental fix one create arbitrary large data set run fixed size stack make problem far likely signed brian behlendorf behlendorf1 llnl.gov signed kohsuke kawaguchi kohsuke.org close 1726,,
5192,34d5a5fd03210d9efdd5966070df1f71c0dbef96,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-13 13:20:15 -0700,1717, fix zpl_mknod return value zpl_mknod function incorrectly negating return value cause problem success case doe prevent returning correct error code failure implementation function consistent zpl_ function signed brian behlendorf behlendorf1 llnl.gov close 1717,,
5193,17897ce2c88476f6fb7413f05e183694cb7482ef,rian Behlendorf <behlendorf1@llnl.gov>, 2013-09-13 13:10:36 -0700,1716, fix uninitialized variable compiling arm device using gcc 4.7.3 several variable function flagged uninitialized resolve warning explicitly initialize zero signed brian behlendorf behlendorf1 llnl.gov close 1716,,
5194,b83e3e48c9b183a80dd00eb6c7431a1cbc7d89c9,ichard Yao <ryao@gentoo.org>, 2013-09-10 15:13:44 -0400,1433, stop runtime pointer modification autotools check meant eliminate runtime function pointer modification autotools check prone false negative kernel hardened pax project unfortunately missed xattr_handler super_block s_bdi autotools check recent change pax constified xattr_handler get set lead discover oversight signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1433,,
5195,4cf652e5d4becca29df8c961daaa68f9c9c81245,im Chase <tim@chase2k.com>, 2013-09-11 11:47:43 -0700,1711, fix km_sleep warning restructuring 13fe019 zfs rename command result km_sleep called sync context may deadlock due reclaim changed km_pushpage signed brian behlendorf behlendorf1 llnl.gov close 1711,,
5196,13fe019870c8779bf2f5b3ff731b512cf89133ef,atthew Ahrens <mahrens@delphix.com>, 2013-09-04 07:00:57 -0500,1495, illumos 3464 3464 zfs synctask code need restructuring reviewed dan kimmel dan.kimmel delphix.com reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com approved garrett amore garrett damore.org reference http www.illumos.org issue 3464 illumos illumos gate ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1495,,
5197,6f1ffb06655008c9b519108ed29fbf03acd6e5de,atthew Ahrens <mahrens@delphix.com>, 2013-08-28 06:45:09 -0500,1293, illumos 2882 2883 2900 2882 implement libzfs_core 2883 changing canmount property always remount dataset 2900 zfs snapshot able create multiple arbitrary snapshot reviewed george wilson george.wilson delphix.com reviewed chris siden delphix.com reviewed garrett amore garrett damore.org reviewed bill pijewski wdp joyent.com reviewed dan kruchinin dan.kruchinin gmail.com approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 2882 http www.illumos.org issue 2883 http www.illumos.org issue 2900 illumos illumos gate ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1293 porting note warning patch change user kernel abi mean zfs zpool utility built master compatible 0.6.2 kernel module ensure load matching kernel module master updating utility otherwise zfs zpool command unable interact pool see error similar following zpool list failed read pool configuration bad address pool available zfs list datasets available add zvol minor device creation new function remove logging release operation logging caused null dereference ds_dir zeroed logging function try get name via function got idea particular code would worked illumos code subsequently completely reworked illumos commit 3b2aab1 3464 zfs synctask code need restructuring squash may used uninitialized warning erorrs fix printf format warning lld llu apply spa_writeable change made illumos illumos illumos gate.git cd1c8b8 part 3112 3113 3114 3115 fix add missing call fnvlist_free nvl log_internal added illumos fix issue 3085 ported zol time zfsonlinux zfs 9e11c73 depended future work,,
5198,0c28fb480836ab7bb1bbf8de6e572d2443273396,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-16 15:20:07 -0700, , tag zfs 0.6.2 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
5199,6a7c0ccca44ad02c476a111d8f7911fc8b12fff7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-22 13:06:33 -0700,1468, use directory xattrs symlinks currently subtle bug implementation crop prevents safely using multiple variable length one object fortunately existing use case symlinks based xattrs therefore root cause code identified fixed prevent adding xattrs symlinks signed brian behlendorf behlendorf1 llnl.gov issue 1468,,
5200,c273d60d80958dea8edc3c6f5702c9c81ffbd8ea,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-22 12:14:26 -0700,1660, revert evict meta data ghost list l2arc header reverts commit introduced regression honoring meta limit signed brian behlendorf behlendorf1 llnl.gov close 1660,,
5201,bff32e0972bbc07ba5f2b9ce5b965813d8edcf78,ichard Yao <ryao@gentoo.org>, 2013-08-10 08:24:40 -0400,1652, implement database workaround misreported physical sector size implement alters detected sector size device listed database drive known lie physical sector size based 6931570 add flash device vid pid disk table advertising physical sector size open solaris sg_simple4.c sg3_utils two dozen line taken sg_simple4.c gplv2 licensed however sg_simple4.c analogous hello world program safe use requested douglas gilbert author sg_simple4.c confirm case cutdown version response follows  would consider scsi inquiry example using linux driver interface also written equivalent hello world program  database created help freenode zfsonlinux community note following drive confirmed lie via report irc contain capacity information identifier intel ssdsa2m080 intel ssdsa2m160 ct256m4ssd2 wdc wd15ears 00s wdc wd15ears 00z wdc wd20ears 00m identifier different capacity model extrapolated added assumption model also lie google used verify extrapolated drive identifier existed prior inclusion ocz vertex2 3.5 identifer applies two drive differ solely page size slightly capacity one 4096 byte page 8192 byte page set use 8192 byte page could detect page size checking capacity would unnecessarily complicate code possible updated drive firmware correctly report sector size report advanced format drive one report stated vendor changed identification string another unclear report involved wdc model google used determine size page listed flash device report 8192 byte page took precedence report 4096 byte page device behind usb adapter identification string altered identification string obtained across usb adapter omitted attempt made correct alteration made usb adapter comparison database two entry open solaris database appear altered usb adapter omitted signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1652,,
5202,e90856f1d2ac1c5135802b802a66e60439b2ac1a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-16 15:14:17 -0700, , tag spl 0.6.2 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
5203,0f37d0c8bed442dd0d2c1b1dddd68653fa6eec66,ichard Yao <ryao@gentoo.org>, 2013-08-07 08:53:45 -0400,1591, linux 3.11 compat fop iterate commit torvalds linux replaced readdir iterate struct file_operations filesystems must use new iterate method handle code reworked use new iterate interface care taken keep majority change confined zpl layer already linux specific however minor change required common zfs_readdir function compatibility older kernel accomplished adding version trivial dir_emit helper function also various _readdir function reworked wrapper create dir_context structure pas new _iterate function unfortunately new dir_emit function prevent passing private pointer filldir function xattr directory code leveraged ability zfs_readdir generate list xattr name since longer use zfs_readdir simplified function added perform task signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1653 issue 1591,,
5204,34e143323e359b42bc9d06dd19cc4b1f13091283,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-14 16:18:58 -0700,1455, fix z_wr_iss_h zio_execute import hang need frugal stack usage linux __zio_execute function modified dispatch zios zio_taskq_issue thread context known stack heavy two context sync thread ever thread performing spa initialization unfortunately change introduced unlikely bug result zio dispatched indefinitely never executed spa initialization handle zio moved high priority queue __zio_execute called zio interpret context dispatch system get stuck spinning dispatching zio making forward progress fix rare issue __zio_execute updated dispatch zios either zio_taskq_issue task queue practice issue rarely reported usually fixed rebooting system importing pool signed brian behlendorf behlendorf1 llnl.gov close 1455,,
5205,0bc7a7a75429f3f5dc68e57dfad4c5fb84a48558,urbo Fredriksson <turbo@bayour.com>, 2013-06-04 03:54:44 +0200,1498, specifically open etc mtab done libzfs_init line share open file handle signed brian behlendorf behlendorf1 llnl.gov issue 1498,,
5206,abbfdca483897d4406889e3517e77baf07573ecb,urbo Fredriksson <turbo@bayour.com>, 2013-06-04 03:56:04 +0200,1498, point rewind mtab really reading file instead use doe nessesary freopen signed brian behlendorf behlendorf1 llnl.gov issue 1498,,
5207,f9e459d1435832caa69fdaf236ebaeacd93f1b3e,urbo Fredriksson <turbo@bayour.com>, 2013-06-04 03:55:28 +0200,1498, use setmntent fopen reason used libzfs_init overlooked zinject get minimal use signed brian behlendorf behlendorf1 llnl.gov issue 1498,,
5208,fb5c53ea65b75c67c23f90ebbbb1134a5bb6c140,ohn Layman <jlayman@sagecloud.com>, 2013-08-13 15:24:58 -0400,1611, fix reading etc mtab zfs_is_mounted etc mtab updated linux done atomically rename new mtab written existing mtab unlinked new mtab renamed etc mtab mean must close old file open new file get updated content using rewind move file pointer back start file freopen close open file signed brian behlendorf behlendorf1 llnl.gov close 1611,,
5209,105afebb1529c21c3fb1ef7101918ed9fb704942,uri Pankov <yuri.pankov@nexenta.com>, 2013-07-16 15:54:29 -0500,1596, illumos 3098 zfs userspace groupspace fail 3098 zfs userspace groupspace fail without saying run non root reviewed eric schrock eric.schrock delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3098 illumos illumos gate ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1596,,
5210,cb682a173a84813b2aeb5d18f58cff1a07531fb3,atthew Ahrens <mahrens@delphix.com>, 2013-03-21 14:47:36 -0800,1643, illumos 3618 zio dcmd doe show timestamp data 3618 zio dcmd doe show timestamp data reviewed adam leventhal ahl delphix.com reviewed george wilson gwilson zfsmail.com reviewed christopher siden delphix.com reviewed garrett amore garrett damore.org approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3618 illumos illumos gate note porting zfs linux original changeset mostly deal mdb zio dcmd however order provide requested functionality modifies vdev zio structure keep timing data nanosecond instead tick change ported commit hand one visible change commit default value tunable changed    original value inherited opensolaris subotimal since shifted raw tick value compensate different tick frequency linux opensolaris former 1000 latter 100 led interesting performance anomaly non trivial load deadline scheduler delay according priority lower priority deadline set delay measured unit shifted tick since value time higher delay unit time shorter thus really low priority like resilver delay unit scrub delay unit scheduled much sooner intended overall effect resilver scrub consumed bandwidth expense bookkeeping done nanosecond shift behaves correctly tick frequency ported cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 1643,,
5211,570d6edf1d94917aab49c5755027d05b3c7bcd43,ichard Yao <ryao@gentoo.org>, 2013-07-14 12:59:24 -0400,1589, linux 3.8 compat support enabled uid_t git_t replaced kuid_t kgid_t structure instead integral type cause code integral type fail build user namespace functionality introduced linux 3.8 requires could build kernel supported resolve converting new kuid_t kgid_t structure original uid_t gid_t type signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1589,,
5212,f7fd6ddd96fae173d64bf2982ba4ceda28db56e2,ichard Yao <ryao@gentoo.org>, 2013-07-13 16:34:56 -0400,260, linux 3.8 compat use kuid_t kgid_t required enabled uid_t git_t replaced kuid_t kgid_t structure instead integral type cause code integral type fail build user namespace functionality introduced linux 3.8 requires could build kernel supported resolve converting new kuid_t kgid_t structure original uid_t gid_t type original patch dhe rewrite richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 260,,
5213,fadd0c4da1e2ccd6014800d8b1a0fd117dd323e8,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-25 10:39:31 -0700, , evict meta data ghost list l2arc header meta limit exceeded arc evicts meta data buffer mfu mru list unfortunately meta data heavy workload possible buffer accumulate ghost list arc_c exceed arc_size handle case arc_adjust_meta entended explicitly evict meta data buffer ghost list proportion evicted mfu mru list insufficient request vfs release inodes dentries result release dnodes counted metadata signed brian behlendorf behlendorf1 llnl.gov,,
5214,68121a03daf58a7d5b9351f110196b8ce806e1fa,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-25 10:28:45 -0700, , allow arc_evict_ghost evict meta data default behavior arc_evict_ghost start evicting data buffer requested number byte evict satisfied data buffer move meta data buffer ideal honoring arc_c since preferable keep meta data cached however trying free memory arc honor meta limit problem need discard data get meta data avoid issue arc_evict_ghost passed fourth argumented describing buffer type start arc_evict function already behaves exactly like reason consistent existing code existing caller updated pas arc_bufc_data patch introduces functional change new caller may pas skip immediately evicting meta data leaving normal data untouched signed brian behlendorf behlendorf1 llnl.gov,,
5215,4e59f475118b7081a3f950ebf7c70b5bfc7c9778,aso Kiselkov <skiselkov@gmail.com>, 2013-08-08 13:33:18 -0700,1379, illumos 3964 l2arc always compress metadata buffer 3964 l2arc always compress metadata buffer reviewed matthew ahrens mahrens delphix.com reviewed brian behlendorf behlendorf1 llnl.gov reference http www.illumos.org issue 3964 ported brian behlendorf behlendorf1 llnl.gov close 1379,,
5216,3a17a7a99a1a6332d0999f9be68e2b8dc3933de1,aso Kiselkov <skiselkov@gmail.com>, 2013-08-01 13:02:10 -0700,1379, illumos 3137 l2arc compression 3137 l2arc compression reviewed george wilson george.wilson delphix.com reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference illumos illumos gate http www.illumos.org issue 3137 http display illumos l2arc compression note linux port module option added prevent compression l2arc buffer regardless dataset compression property set allows legacy behavior preserved ported james james kagisoft.co.uk signed brian behlendorf behlendorf1 llnl.gov close 1379,,
5217,e3c4d44886a8564e84aa697477b0e37211d634cd,ichard Yao <ryao@gentoo.org>, 2013-03-27 11:33:14 -0400,225, pax grsecurity linux 3.8.y compat use __no_const struct ctl_table pax team started constifying struct ctl_table linux 3.8.0 patchset lead zfsonlinux spl 225 gentoo bug 463012 investigating option learned preprocessor directive called constify_plugin use detect presence pax change adjust code accordingly pax team suggested adopting supporting older kernel required declaring whenever constify_plugin set future compiler change could potentially cause break presence werror instead define spl_ctl_table typdef use compatible pax kernel introduces linux kernel version number check prevent build failure version pax gcc plugin existed kernel linux 3.8.0. affected version pax plugin trigger compiler error see no_const cast non constified structure ordinarily would need autotools check catch however safe kernel version check instead autotools check specific instance affected version pax gcc plugin exist linux kernel 3.8.0 constification struct ctl_table pax developer occurs linux 3.8.0 later signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 225,,
5218,c11a12bc3b2e5ee9a6bd74e26f1a396b6025fbd4,ichard Yao <ryao@gentoo.org>, 2013-08-04 19:13:15 -0400,1579, return analogous spl commit zfsonlinux spl b9b3715 clear evidence system getting caught indefinately like spl ensures never happen signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1579,,
5219,251e7a779ba5d4b5e46c42d8b792c481380da28b,ichard Yao <ryao@gentoo.org>, 2013-08-04 19:35:08 -0400,274, fix race current code contains race condition trigger bit set invoked another thread concurrently accessing magazine currently invokes spl_cache_flush magazine thread bit set unsafe one magazine per cpu magazine lockless impossible guarentee another cpu using magazine function called solution touch local cpu magazine leave cpu magazine cpu reported dhe signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 274,,
5220,ba062980728bbd09c4b829f5d801a773af7381cf,ichard Yao <ryao@gentoo.org>, 2013-08-07 04:50:04 -0400,273, linux 3.11 compat replace num_physpages totalram_pages num_physpages removed torvalds linux let replace totalram_pages bug fix much compatibility fix num_physpages reflect number page actually available kernel http hypermail linux kernel 0908.2 01001.html also known issue memory calculation zfs xen dom0 chance using totalram_pages could resolve conjecture untested time writing signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 273,,
5221,8170d281263e52ff33d7fba93ab625196844df36,ichard Yao <ryao@gentoo.org>, 2013-08-04 14:58:45 -0400,1624, return correct type offset zfs_readdir zfs_readdir used getdents provides list file directory type offset used llseek seek next directory entry solaris first two directory entry respectively offset zfs file rather large number currently zfsonlinux giving offset entry large number first entry next entry offset point cause software llseek conjunction getdents filesystem navigation enter infinite loop offset used directory entry filesystem specific platform fix adopting solaris behavior also currently report directory entry type wrong better getdents solaris doe appear provide information doe linux mac zfs provides easy access type information zfs_readdir patch provides well reported andrey andrey kudinov.su signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1624,,
5222,c61f97f426b7e0bc106b7e6795d4ea2ecbd2384d,eorge Wilson <george.wilson@delphix.com>, 2013-07-05 15:14:17 -0400,3639, illumos 3639 zpool.cache skip readonly pool 3639 zpool.cache skip readonly pool reviewed eric schrock eric.schrock delphix.com reviewed adam leventhal ahl delphix.com reviewed basil crow basil.crow delphix.com approved gordon ross gwr nexenta.com reference illumos illumos gate http www.illumos.org issue 3639 normally list pool imported read cache file however accidentally get one cache file importing exporting read write pool read pool imported zpool import readonly test1 zpool import test2 zpool export test2 zdb problem machine reboots import pool cache file read write ported richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
5223,78d7a5d780d44708a6e8835a0f1e185cc8ee3dfb,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-26 10:38:49 -0700, ," write dirty inodes close property atime set operation access inode cause atime update however turn dirty inodes updated atimes written disk inodes get evicted cache somewhat surprisingly source suggests zol specific issue behavior may part explain zfs reclaim logic observed slow reclaiming inodes likely dirty atime force write disk obviously want force write disk every atime update need batched right way fully implement .dirty_inode .write_inode callback however right requires proper unification field znode inode could mark inode dirty leave vfs call .write_inode periodically work get done settle middle ground simplest safest thing write dirty inode last close prevent majority inodes cache dirty atimes drastically increase number writes rudimentally testing show long take drop 500,000 inodes cache show promising result expected longer lot part eviction done earlier close patch drop 500,000 inodes drop_caches patch drop 500,000 inodes drop_caches signed brian behlendorf behlendorf1 llnl.gov",,
5224,e0fd27870850d7beef9f01f93f30b7255338f4b0,teven Burgess <sburgess@dattobackup.com>, 2013-08-07 15:52:55 -0400,1634, fix man page sync property help output zfs set get say sync one standard always disabled man page claim sync default always disabled accepted value standard change manpage give correct value signed steven burgess sburgess dattobackup.com signed brian behlendorf behlendorf1 llnl.gov close 1634,,
5225,e43b290fdb61fc9533af96fab48515dec0333a2f,assimo Maggi <me@massimo-maggi.eu>, 2013-08-07 10:42:23 +0200,1628, fix default checksum algorithm manpage manpage report fletcher2 zio.h defined signed massimo maggi massimo maggi.eu signed brian behlendorf behlendorf1 llnl.gov close 1628,,
5226,0b15402db3819115953127078192d804ff36b27f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-27 02:37:38 -0700, , add kmod repo integration kmod packaging infrastructure originally added dependency rpmfusion yum repository disabled done time favour getting local build working time come conditionally enable functionality properly provide binary kmod package configure config srpm make define repo rpmfusion srpm kmod mock rebuild spl kmod x.y.z r.el6.src.rpm one nice benefit finishing work generic fedora spl kmod spec file merged signed brian behlendorf behlendorf1 llnl.gov,,
5227,cb79a4e8bb19908235d3cb646506530457341b76,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-27 04:42:57 -0700, , add kmod repo integration kmod packaging infrastructure originally added dependency rpmfusion yum repository disabled done time favour getting local build working time come conditionally enable functionality properly provide binary kmod package configure config srpm make define repo rpmfusion srpm kmod mock rebuild zfs kmod x.y.z r.el6.src.rpm one nice benefit finishing work generic fedora spl kmod spec file merged signed brian behlendorf behlendorf1 llnl.gov,,
5228,57b650b86f15793195f9bf2185e1161c7c67904d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-08-01 09:39:46 -0700, , export additional dmu symbol dmu_prefetch dmu_free_object dmu_prealloc dmu_sync symbol exported may used module signed brian behlendorf behlendorf1 llnl.gov,,
5229,7d63721118a82a29649a3d8ae4b4522afdad1449,athaniel Clark <Nathaniel.Clark@misrule.us>, 2013-07-23 13:32:57 -0400,1610, dmu_tx fix possible null pointer dereference return null error check condition prior dereferencing pointer occur passed object invalid unallocated signed nathaniel clark nathaniel.clark misrule.us signed brian behlendorf behlendorf1 llnl.gov close 1610,,
5230,cb543e6b5e98546a5caec29ca4b25abec98560a2,ichard Yao <ryao@gentoo.org>, 2013-07-09 10:45:30 -0400,1614, remove b_thawed arc_buf_hdr_t code involving b_thawed appears dead let discard signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1614,,
5231,3f4058cd15545a83b4e6e50cd7e29af45b54054a,ichard Yao <ryao@gentoo.org>, 2013-07-07 13:39:59 -0400,1614, remove function used neither illumos zfsonlinux appear replaced arc_buf_alloc arc_buf_free let remove  signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1614,,
5232,4edbd2f79a95ac608155bf518ea7253c8a0a61fe,ichard Yao <ryao@gentoo.org>, 2013-07-07 11:54:51 -0400,1614, remove zio_alloc_arena declare zio_alloc_arena using extern doe appear exist anywhere code permit undefined behavior let remove  signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 1614,,
5233,bce45ec9fb7bcdd8c306ccc7fc1ecc7f29cecbf5,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-24 10:14:11 -0700, , make arc l2arc module option writable l2arc module option made safely writable allows option changed without unloading loading module signed brian behlendorf behlendorf1 llnl.gov,,
5234,ceb387282577b872264143515fc4f55043368b0f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-19 14:39:35 -0700,266, fix kmc_offslab type cache spl_slab_size always returning enospc cache type kmc_offslab cache could never created additionally slab size rounded page kv_alloc expects kv_alloc code minimally allocate page kmc_offslab case could reduced basic regression test kmem slab_small kmem slab_large kmem slab_align regression updated test kmc_offslab signed brian behlendorf behlendorf1 llnl.gov signed ying zhu casualfisher gmail.com close 266,,
5235,b9b3715346b2748b2e512099862f1eabf076cf51,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-23 15:52:11 -0700,1432, return generic kmem cache shrinker observed possible get state shrink_slabs spin repeated invoking generic kmem cache shrinker fails detect making forward progress reclaiming cache give ensure never occurs unconditionally return reclaiming  signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org close zfsonlinux zfs 1276 close zfsonlinux zfs 1598 close zfsonlinux zfs 1432,,
5236,c93504f03a0881992689069a8f78e17933dcd5b3,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-24 09:57:56 -0700, , change l2arc_norw default zero day modern ssds efficiently service concurrent read writes flag added really case variety ssd controller set default value take advantage parallelism disable needed specific troublesome hardware signed brian behlendorf behlendorf1 llnl.gov,,
5237,6e1d7276c94cbd7c2e19f9232f6ba4bafa62dbe0,ing Zhu <casualfisher@gmail.com>, 2013-06-22 20:35:18 +0800, , fix inaccurate calculation based comment arc.c know buffer exist arc l2arc circumstance arc_buf_hdr_t l2arc_buf_hdr_t allocated however current logic care memory l2arc_buf_hdr take buffer state transfer arc_l2c_only cause obvious deviation illumos zfs version since sizeof l2arc_buf_hdr larger zol implement calcuation following simple way allocate l2arc_buf_hdr_t add memory consumption instantly subtract free evict l2arc buf according buffer stay l2arc also add memory arc_buf_hdr_t consumes need add hdr_size since already concerned l2hdr_size step transfering arc bufs l2arc state testbox core intel xeon cpu 2.13ghz 16gb memory test set upped following way fdisked sata disk two partition one partition zpool storage one used cache device generated file occupying 14gb altogether zpool prepared step using iozone read using md5sum watched l2arc related statistic proc spl kstat zfs arcstats reading ended l2_hdr_size l2_size shown like l2_size 4403780608 l2_hdr_size weird applying patch reran step result following l2_size 4306443264 l2_hdr_size 535600 number made sense bit system sizeof l2arc_buf_hdr_t byte assue block cached l2arc 128kb 535600 128 1024 4387635200 since block equal sized theoretical result little bigger see since familiar systemtap instrumentation tool used examine happened script looked like probe module zfs .function arc_chage_state  new_state arc_l2_only printf change arc buf arc_l2_only  print information time call funciton arc_chage_state argument new_state arc_l2_only gathered trace log found none arc bufs ran arc state arc_l2_only test running reason l2_hdr_size step arc bufs fell arc_l2_only pool filesystem offlined signed ying zhu casualfisher gmail.com signed brian behlendorf behlendorf1 llnl.gov,,
5238,cd72af9c681779cc88af389bd227a655e776476c,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-23 12:37:14 -0700,1605, fix zpool list error code due uninitialized variable possible command zpool list return non zero error pool signed brian behlendorf behlendorf1 llnl.gov close 1605,,
5239,da91c90154f32c56225e44b63aedf7c8d393f38c,hrister Ekholm <che@chrekh.se>, 2013-07-21 00:04:33 +0200, , add missing usage help zpool list signed brian behlendorf behlendorf1 llnl.gov,,
5240,6e1b9d03342309358e58e99ac41e2e8e599d31ba,hrister Ekholm <che@chrekh.se>, 2013-07-19 00:19:32 +0200, , add documentation interval zpool list zpool list option repeating zpool iostat documented patch add documentation signed brian behlendorf behlendorf1 llnl.gov,,
5241,dba1d705669cf0e33091622d0e950b9459b20e2e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-15 13:37:51 -0700,790, fix arc_adapt spinning function introduced 3.0 kernel supposed provide safe way call arbitrary function super block specific type unfortunately list_head used bug introduced made possible get stuck spinning super block deactivated occur list head removed fs_supers list reinitialized point function happened processing removed list_head get stuck spinning list_head bug fixed 3.3 kernel converting list_head hlist_node however resolve issue existing 3.0 3.2 kernel detect list_head used prevent spinning occurring .next pointer set fs_supers list_head ensures function always terminate signed brian behlendorf behlendorf1 llnl.gov close 1045 close 861 close 790,,
5242,c9ada6d5a00ba66fd54d62b4a1684e561fe2c9a4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-17 09:15:46 -0700,1338, fix read pool hang unmount mount filesystem dataset would ms_rdonly bit incorrectly cleared even entire pool read existing code handle case run property callback registered resolve issue move read code callback registration signed brian behlendorf behlendorf1 llnl.gov close 1338,,
5243,c47efbc7fda5eaed9b60b3767347d9f88553309b,ames H <james@kagisoft.co.uk>, 2013-07-13 21:25:04 +0100,255, modify gethrestime use allows get nanosecond resolution also mean use time source utimensat etc signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 255,,
5244,76351672c222f28ea1b681097a9eff58a6791555,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-11 14:11:32 -0700,1527, fix deadlock possible automounted snapshot expiring deadlock manual unmount snapshot occur taskq_cancel_id block task currently executing completes never complete holding zsb z_ctldir_lock must acquire z_unmount 2153 mutex_lock blocking zsb z_ctldir_lock   taskq_thread zfs 10690 taskq_wait_id waiting z_unmount exit taskq_cancel_id  take zsb z_ctldir_lock   zfsdev_ioctl do_vfs_ioctl resolve deadlock dropping zsb z_ctldir_lock calling lock prevent concurrent modification zsb z_ctldir_snaps avl tree moreover careful remove zfs_snapentry_t avl tree dropping lock ensures task find failure added back tree signed brian behlendorf behlendorf1 llnl.gov signed chris dunlap cdunlap llnl.gov close 1527,,
5245,f7f344f1b099732908f47232858e68518bb4393a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-11 16:07:15 -0700,1448, improve build instruction make clear building directly git tree configure script must manually generated running autogen.sh script requires gnu autotools package installed distribution signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1448,,
5246,e34f17a8dfc0ef7650ba489f9772c2c20dc8bec4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-11 15:33:10 -0700,1466, add dkms_version conditional adding dkms_version conditional possible specify exact version dkm used fedora epel yum repository ensure patched version dkm provided repository installed patched version dkm ensures spl module built zfs module signed brian behlendorf behlendorf1 llnl.gov close 1466,,
5247,556011dbec2d10579819078559a77630fc559112,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-31 12:07:59 -0700,1461, improve way mirror performance read bandwidth way mirror increased iop carefully selecting preferred leaf vdev existing algorthm selects perferred leaf vdev based offset zio request modulo number member mirror assumes drive equal performance spreading request randomly drive sufficient saturate practice result leaf vdevs utilized utilization improved preferentially selecting leaf vdev least pending prevents leaf vdevs starved compensates performance difference disk mirror faster vdevs sent work mirror performance limitted slowest drive common case pending queue full single least busy leaf vdev batching stratagy employed least busy vdevs one selected equal probability preferred vdev microsecond compared randomly selecting vdev break tie batching request greatly improves odds merging request linux elevator testing result show significant performance improvement four workload tested workload generated using fio benchmark follows 1mb sequential read thread file 4kb sequential read thread file 1mb random read thread file iop 4kb random read thread file iop pristine 1461 sequential random sequential random 1mb 4kb 1mb 4kb 1mb 4kb 1mb 4kb   striped 226 243 304 222 255 299 way mirror 302 324 534 433 448 571 way mirror 429 458 714 648 648 808 way mirror 562 601 849 816 828 926 signed brian behlendorf behlendorf1 llnl.gov close 1461,,
5248,92334b14ec378b1693573b52c09816bbade9cf3e,rakash Surya <surya1@llnl.gov>, 2013-07-10 15:53:48 -0700,1584, add new kstat monitoring time dmu_tx_assign change add new kstat gain visibility amount time spent call dmu_tx_assign histogram exported via new poolname file information contained histogram frequency dmu_tx_assign took complete given interval range example given histogram file cat proc spl kstat zfs tank 0x01 1536 19792068076691 20516481514522 name type data 859 252 171     128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 1073741824 2147483648 one see call dmu_tx_assign completed 32us outlier specifically call took 262144us 131072us information difficult impossible gather without change signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1584,,
5249,bf89c19914c66b030333460952dbdfabf9ff527e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-10 15:13:09 -0700,1555, log pool suspension warning console event pool get suspended log information console critical information want make sure get logged signed brian behlendorf behlendorf1 llnl.gov close 1555,,
5250,ab4e74cc38359a1e909febe31e8440a2908bd10e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-10 15:04:07 -0700,1569, fix bogus kmem leak warning commit 5c7a036 correctly relocated creation taskq registraction initialization kmem tracking code however cleanup structure done leak check spl_kmem_fini resulted incorrect kmem leaked warning even though actual leak signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1569,,
5251,abc41ac7c78c6f218a226a746f5d92a41fe53285,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-10 14:09:08 -0700,1508, use gfp_noio avoid potential deadlock using zvol swap device prevent performing bio_alloc signed brian behlendorf behlendorf1 llnl.gov close 1508,,
5252,ff3510c1a562914902d78f3d56552e126103f5a4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-09 15:13:40 -0700, , fix function subtly broken due difference behavior fstat64 solaris linux solaris block device stat st_size field contain size device byte linux true regular file symlinks compatibility function called fstat64_blk added used solaris behavior required flaw never noticed time would need use device size first two label damaged noticed issue adding function similar design doe require write label signed brian behlendorf behlendorf1 llnl.gov,,
5253,131cc95ca78b8552c13555d2cded791808008ff3,mitry Khasanov <pik4ez@gmail.com>, 2013-07-05 18:01:44 +0700,1126, add freebsd zpool labelclear command freebsd implementation zfs add zpool labelclear command since functionality helpful straight forward add included zol reference freebsd freebsd ported dmitry khasanov pik4ez gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1126,,
5254,51a3ae72d23d89d35a4a67059b39e870d66a2495,mitry Khasanov <pik4ez@gmail.com>, 2013-07-05 17:44:53 +0700,1126, readd opensolaris patch restores function opensolaris removed commit d603ed6 clear use zol however functionality prerequisite adding zpool labelclear command freebsd part bringing change function changed use fstat64_blk compatibility linux signed brian behlendorf behlendorf1 llnl.gov issue 1126,,
5255,50210587563bb37c48d2624d11e158ab3ad30715,im Chase <tim@chase2k.com>, 2013-07-09 07:15:26 -0500,1581, zdb enhancement display xattrs znode xattrs display following standard attribute format used similar used listing content zap follows zdb vvv pool dataset object ... xattrs size byte number entry name1 value1 name2 value2 ... signed brian behlendorf behlendorf1 llnl.gov close 1581,,
5256,5d3dc3fb72518a4c191e3a014622b74365eb3a74,ike Leddy <mike.leddy@gmail.com>, 2013-07-04 01:02:05 -0300,1570, avoid abort vn_rdwr libzpool kernel.c make sure buffer aligned 512 byte linux pread call combined o_direct doe return einval signed brian behlendorf behlendorf1 llnl.gov close 1570,,
5257,b4f7f105275d996fbcb6abd65760307d2153a89b,ing Zhu <casualfisher@gmail.com>, 2013-06-29 15:03:49 +0800,1557, improve code remove reference arc bufs arc_anon state take header hash_lock postpone really need avoid unnecessary invocation function buf_hash signed ying zhu casualfisher gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1557,,
5258,8e07b99b2f5e1e281af72e07dee87301c8872f56,hen Yan <shenyanxxxy@qq.com>, 2013-07-03 10:00:16 +0800,1566, update zio.c cv_wait_io used account time instead cv_wait signed brian behlendorf behlendorf1 llnl.gov close 1566,,
5259,e77aa730bc9d7ac80aac56b68f9cf7d51b275a29,hen Yan <shenyanxxxy@qq.com>, 2013-07-03 09:55:16 +0800,1566, fix comment zfs.h path code also changed zfsonlinux signed brian behlendorf behlendorf1 llnl.gov issue 1566,,
5260,31455ab13056da037410353f10c484dfca3d3ebc,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 09:55:39 -0700,330, add tunable time desirable zfs automatically populate spa namespace module load time using pool etc zfs zpool.cache file module option added control behavior signed brian behlendorf behlendorf1 llnl.gov issue 330,,
5261,b1424adda53eba1b6342aab4547330acc6d783fd,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 10:14:35 -0700,256, fix enable debug kmem tracking option code gotten something stale longer build cleanly modern kernel two issue addressed follows hlist_ _rcu interface kernel relatively unstable since performance critical code use long standing hlist_ variant older kernel hash_ptr function take void newer kernel expects const void silence compiler warning explicitly cast void memset function similar case always expects void signed brian behlendorf behlendorf1 llnl.gov close 256,,
5262,50fe577d1f3bd06e15fe2006459debd9fdffd04a,raig Loomis <cloomis@astro.princeton.edu>, 2013-07-05 10:51:36 -0400,1568, explicitly flush output end zevent zpool event flush stdout ensure last zevent always printed immediately signed brian behlendorf behlendorf1 llnl.gov close 1568,,
5263,a1d9543a39942be56879ca9338078afc77c25cea,hris Dunlop <chris@onthe.net.au>, 2013-06-03 16:58:52 +1000,1494, 3.10 api change release return void linux kernel commit torvalds linux db2a144 changed return type release void detect expected prototype defined callout accordingly signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 1494,,
5264,5bc941f3cd1142abc3d7d2261a7a077bfe949367,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-08 15:26:59 -0700,257, merge branch linux 3.10 signed brian behlendorf behlendorf1 llnl.gov close 257,,
5265,f2a745c41df44c32149abb27b80e92cede772551,ichard Yao <ryao@gentoo.org>, 2013-07-03 16:34:52 -0400,257, linux 3.10 compat rely struct proc_dir_entry definition linux kernel commit torvalds linux 59d8053f moved definition struct proc_dir_entry include linux proc_fs.h private header proc internal.h spl relied map solaris kstat entry proc spl kstat since proc_dir_entry structure private safe thing wrap opaque proc handle structure actually end simplify code good move away depending implementation detail proc signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 257,,
5266,79a7ab25812d2701230aaff62904570ef7dbecef,uxuan Shui <yshuiv7@gmail.com>, 2013-05-14 08:40:20 +0800,257, linux 3.10 compat add missing include linux slab.h linux kernel commit torvalds linux 0d01ff2 change includes depending linux proc_fs.h signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 257,,
5267,1ddf9722dcb6429d38fcbc5ff791779ec89be9fc,uxuan Shui <yshuiv7@gmail.com>, 2013-05-14 08:39:26 +0800,257, linux 3.10 compat replace pde data pde_data linux kernel commit torvalds linux d9dda78b renamed pde pde_data handle detect prefered interface define pde_data wrapper consistency signed yuxuan shui yshuiv7 gmail.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov issue 257,,
5268,c02ab72fb9d557e8d98c5e089faa6557b6d83127,uxuan Shui <yshuiv7@gmail.com>, 2013-05-14 08:31:53 +0800,257, linux 3.10 compat struct vmalloc_info moved linux kernel commmit torvalds linux db3808c1 moved vmalloc_info structure private public header available kernel module use signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 257,,
5269,168d056cf8ed073e17f008b9109ad3d37e63f172,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 21:38:45 -0700,1376, add conditional chkconfig packaging unconditionally exit zero avoid returning failure scriptlets part previous ba661a6 commit signed brian behlendorf behlendorf1 llnl.gov close 1376,,
5270,ba661a6e3f118fbf66ac11dafbe4cb7ac3fa51bd,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 16:12:37 -0700,1376, add conditional chkconfig packaging prior adopting kmod style packaging zfs package would conditionally invoke sbin chkconfig create proper link init script done conditionally many distribution moving away sysv style init script want cause error signed brian behlendorf behlendorf1 llnl.gov close 1376,,
5271,e9832eb2721ce1695fa8bdaa908cdde9690f95df,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 14:22:34 -0700,1395, remove zfs dracut zfs test dependency remove zfs package depenencies zfs dracut zfs test subpackages neither package required normal operation bring many unnecessary dependency installation signed brian behlendorf behlendorf1 llnl.gov close 1395,,
5272,91604b298c24c84fe03bc6c028abb961ca3e6fcf,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-02 11:59:51 -0700,1234, open pool asynchronously module load one side effect calling zvol_init pool listed cache file opened depending state content pool operation take considerable length time load time undesirable kernel holding global module lock prevents module loading serialize otherwise parallel boot process module also reduces chance accidentally introducing race module init ensure dev zvol pool dataset device still automatically created module load completes udev rule added udev notice dev zfs device create zpool list command run cause pool listed zpool.cache file opened process driven asynchronously udev risk problem downstream distribution signed brian behlendorf behlendorf1 llnl.gov issue 756 issue 1020 issue 1234,,
5273,2a3871d4bcc65dff7be4c9b55cb863421ddc8c3a,ichard Yao <ryao@gentoo.org>, 2013-07-02 11:59:10 -0700,11, cleanup zvol initialization code following error occur possibly kernel blk_init_queue try take spinlock initialize bug spinlock bad magic cpu zpool 4054 lock .magic 00000000 .owner none .owner_cpu pid 4054 comm zpool tainted 3.9.3 call trace spin_dump 0x8c 0x91 spin_bug 0x21 0x26 0x127 0x130 0x21 0x30 cfq_init_queue 0x1fe 0x350 elevator_init 0x78 0x140 0x87 0xb0 0x35 0x70 blk_init_queue 0xe 0x10 0x24b 0x620 0x24 0x30 0xea 0x510 0x191 0x510 0x92 0x180 spa_open_common 0x250 0x380 spa_open 0xe 0x10 0x1e 0x80 zfsdev_ioctl 0x155 0x190 do_vfs_ioctl 0x325 0x5a0 sys_ioctl 0x40 0x80 do_page_fault 0x9 0x10 0x16 0x1b zd0 unknown partition table fix calling spin_lock_init blk_init_queue manner zvol_init initializes structure suspectible race initialization probe zvol reorganize zvol_init prevent signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov,,
5274,526af78550eb5ccf80ce11e7a9c26f203ae671b0,awel Jakub Dawidek <pjd@FreeBSD.org>, 2013-05-28 07:50:38 -0400,599, call spa_open_common initializing pool extremely odd bug cause zvols fail appear system others recently able consistently reproduce issue period month issue disappeared applied change freebsd freebsd pool version import occurred revision 219089 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 441 issue 599,,
5275,c76955eaa5477a71f711e6865a923e7055f8b3cb,rian Behlendorf <behlendorf1@llnl.gov>, 2013-07-03 09:16:46 -0700,1560, fix parse_dataset error handling mount failure accidentally introduced commit 0c1171d reworked parse_dataset function read pool name device error case label read device pool name value pair exist handled properly case fall back previous behavior signed brian behlendorf behlendorf1 llnl.gov close 1560,,
5276,294f68063b49c06d3118d51016811063e69cf97a,eorge Wilson <george.wilson@delphix.com>, 2013-07-02 13:26:24 -0700,1249, illumos 3498 panic arc_read 3498 panic arc_read pbuf b_hdr b_refcnt reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference illumos illumos gate http www.illumos.org issue 3498 ported brian behlendorf behlendorf1 llnl.gov close 1249,,
5277,96b89346c074516a9bb130907646814208035ca8,atthew Ahrens <mahrens@delphix.com>, 2013-07-02 13:20:02 -0700,1565, illumos 3122 zfs destroy filesystem prefetch block 3122 zfs destroy filesystem prefetch block reviewed christopher siden chris.siden delphix.com reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com approved garrett amore garrett damore.org reference illumos illumos gate http www.illumos.org issue 3122 ported brian behlendorf behlendorf1 llnl.gov close 1565,,
5278,3db3ff4a787acf068b122562fb5be5aecec2611f,ichard Yao <ryao@gentoo.org>, 2013-07-02 00:07:15 -0400,1480, use maxpathlen instead sizeof snprintf silence gcc 4.8.0 warning fixing programming error caught static analysis cmd ztest ztest.c function cmd ztest ztest.c 2584 error argument sizeofâ snprintfâ call expression destination mean provide explicit length werror sizeof pointer memaccess void snprintf path sizeof path  signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1480,,
5279,29dee3ee9ac68d8a75c0d518b1342f447cd2ddc0,yril Plisko <cyril.plisko@mountall.com>, 2013-06-04 12:25:22 +0300,1562, add zfs_sync_pass_ tunable parameter commit backport upstream change replaced three hardcoded constant define defer free pas define compress pas define rewrite new bps pas tunable parameter int defer free starting pas int compress starting pas int rewrite new bps starting pas commit make tunables available module parameter linux used performance analysis changing result subtle pathological performance problem signed brian behlendorf behlendorf1 llnl.gov close 1562,,
5280,802e7b5feb0135483de119eac1da192404eb5bb7,i Dongyang <dongyang.li@anu.edu.au>, 2013-06-13 13:51:09 -0400,1384, add seek_data seek_hole lseek llseek approach taken rework zfs_holey little possible wrap code needed ensure correct locking error handling tested xfstests 285 286. test pas except 285 try reserve block first via fallocate fail fallocate yet supported note filp f_lock spinlock exist prior linux 2.6.30 avoid need autotools check virtue fact seek_data seek_hole support added linux 3.1 autoconf check added lseek_execute currently private function expectation exported perhaps early linux 3.11 reviewed richard laager rlaager wiktel.com signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 1384,,
5281,cf91b2b6b2baaca1e56f23c985e3261cd98bd3f0,atthew Ahrens <mahrens@delphix.com>, 2013-07-01 09:24:43 -0700,1384, readd zfs_holey opensolaris patch restores zfs_holey function opensolaris removed commit 3558fd7 clear use zol however functionality prerequisite adding seek_data seek_hole support zpl signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao gentoo.org issue 1384,,
5282,0a6bef26ec80ee4db5f5340bbc007a45311e0415,henyan1 <shenyanxxxy@qq.com>, 2013-06-29 19:07:45 +0800,1558, kmem_zalloc ... km_sleep never fail definitition allocation never fail consistency rest code remove dead error handling code signed brian behlendorf behlendorf1 llnl.gov close 1558,,
5283,ab68b6e5db29abcd20c0c7b12a8c2fa570031c8b,im Chase <tim@chase2k.com>, 2013-06-24 22:03:56 -0500,1543, fix zfs_sb_teardown zfs_resume_fs null dereference fix pair condition concurrent umount cause null pointer dereferences zfs_sb_teardown prevent null dereference calling dmu_objset_pool null z_os zfs_resume_fs try unmount null z_os change make zol code consistent illumos freebsd signed brian behlendorf behlendorf1 llnl.gov close 1543,,
5284,64d7b6cf75e52a4698d9bdec61745573c39d2e5a,yril Plisko <cyril.plisko@mountall.com>, 2013-06-24 09:45:20 +0300,1545, override default spa config location via environment using zdb non default spa config file convenient add non default config file path time commit introduces support setting overriding spa config location via environment variable spa_config_path flag specified command line override value usual signed brian behlendorf behlendorf1 llnl.gov close 1545,,
5285,20c17b96c91f1231c59009236afd4277cbc253a8,yril Plisko <cyril.plisko@mountall.com>, 2013-06-24 09:10:56 +0300,1545, add absent end help text line signed brian behlendorf behlendorf1 llnl.gov issue 1545,,
5286,e2e229eb180fce8a67ba62c0e404d47e82c4c24d,teven Burgess <sburgess@dattobackup.com>, 2013-06-27 20:35:11 -0400,1553, formating change zpool manpage entry hidden signed brian behlendorf behlendorf1 llnl.gov close 1553,,
5287,bbb75c11908d1009b6749b797b3a763558bbaaaf,aron Fineman <abyxcos@gmail.com>, 2013-06-27 15:19:25 -0400,1541, add error message missing etc mtab zpool command silently fail etc mtab file doe exist occur initramfs environment etc mtab file yet generated signed brian behlendorf behlendorf1 llnl.gov close 1541,,
5288,c12936b141e7479a1402561e9e528731d763747e,ing Zhu <casualfisher@gmail.com>, 2013-06-27 19:41:30 +0800,1551, fix module probe failure bit system previous commit caused module probe failure bit system dmesg showed unknown symbol __moddi3 caused modulo operation gethrtime tqs stqs_count committed code instead implementing __moddi3 bit system behlendorf advised cast return value gethrtime uint64_t since gethrtime doe return negative value circumstance need care potential overflow signed ying zhu casualfisher gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1551,,
5289,88c283952f0bfeab54612f9ce666601d83c4244f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-06-26 12:53:04 -0700,229, return eopnotsupp zfs_ioc_ get set flag hook fully implemented return expected eopnotsupp error indicate functional allows test suite xfstests cleanly skip testing functionality implemented signed brian behlendorf behlendorf1 llnl.gov issue 229,,
5290,0c1171dcb5c50f3a03c60f4346209c23a2b5ef86,rian Behlendorf <behlendorf1@llnl.gov>, 2013-06-25 15:43:09 -0700, , allow fetching pool device mount simplify integration xfstests test suite mount.zfs helper extended passed block device dev sdx mount instead pool dataset pool name read existing zfs label used allows mount root dataset zfs filesystem specifing member vdevs signed brian behlendorf behlendorf1 llnl.gov,,
5291,389cf730cedd42dd1ef653e9358635c114e458d5,athaniel Clark <Nathaniel.Clark@misrule.us>, 2013-04-18 16:57:29 -0400,1486, make spl directory setable building rpm add buildroot add ability set location spl via defines building spec file useful build system build spl zfs together without installing actual rpm signed nathaniel clark nathaniel.clark misrule.us signed brian behlendorf behlendorf1 llnl.gov close 1486,,
5292,485b471eb29cfa3a6dbac7de8fda5e020068044a,athaniel Clark <Nathaniel.Clark@misrule.us>, 2013-05-03 08:23:20 -0400,242, add buildroot option kmod build allows rpmbuild define buildroot point kernel data located signed brian behlendorf behlendorf1 llnl.gov close 242,,
5293,991857cac5929fa149820722b8e8cd90f874670c,atthew Thode <mthode@mthode.org>, 2013-06-21 14:55:07 -0400,253, copy spl.release.in kernel dir required compiling zfs kernel signed brian behlendorf behlendorf1 llnl.gov close 253,,
5294,ab0fdfef52b4770f8039c0871ff514e079a09a4c,rian Behlendorf <behlendorf1@llnl.gov>, 2013-06-21 10:02:26 -0700,246, fix assert0 verify0 macro typo ensure value cast long long printing purpose expectation assert0 verify0 mostly used validating return value thus may commonly negative signed brian behlendorf behlendorf1 llnl.gov issue 246,,
5295,81eaf151071eadbb3fba74d74324a0921c5fdb5f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-06-18 10:15:33 -0700,249, register correct handler nvlist_alloc non blocking allocation handler nvlist_alloc would mistakenly assigned flag km_sleep passed meant nvlists allocated km_pushpush km_ debug flag effectively always using atomic allocation failure unlikely could lead assertion km_pushpage allocation particular guaranteed succeed block must never fail since existing api doe allow pas allocation flag private allocator cleanest thing add km_pushpage allocator signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 249,,
5296,df4474f92d0b1b8d54e1914fdd56be2b75f1ff5e,atthew Ahrens <mahrens@delphix.com>, 2013-06-06 18:46:55 -0400,1503, illumos 3805 arc cache freed block 3805 arc cache freed block reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed richard elling richard.elling dey sys.com reviewed andrew firepipe.net approved dan mcdonald danmcd nexenta.com reference illumos illumos gate http www.illumos.org issue 3805 zfs proactively evict freed block cache dcenter saw caching 256gb metadata pool 4gb metadata disk wasting half system ram 252gb block freed even though freed block never used thus eventually evicted cause use memory inefficiently reason block freed chance accessed kept memory preferentially block accessed thus older freed thus least chance accessed partition arc several bucket user data accessed mru metadata accessed mru user data accessed mfu metadata accessed mfu user data metadata split somewhat arbitrary primary control much memory used cache data metadata simply try keep proportion past bucket evicts secondary control evict data evicting metadata bucketing may end one bucket mostly containing freed block old another bucket recently accessed still allocated block data useful bucket still allocated block may evicted preference data useless bucket old freed block dcenter saw mfu metadata bucket 230mb mfu data bucket 27gb mru metadata bucket 256gb however vast majority data mru metadata bucket 256gb freed block thus useless meanwhile mfu metadata bucket 230mb constantly evicting useful block soon needed problem cache segmentation larger problem need investigation however stop caching freed block reduce impact fundamental issue ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1503,,
5297,6822a0d0582f580a21f70615f29ffe2869be8265,ing Zhu <casualfisher@gmail.com>, 2013-06-15 22:25:48 +0800,1520, fix compile warning bit system definition zfs_vdev_holder cast vdev_holder function pointer passing linux kernel block layer function however current vdev_holder defined wider bit compiler warns potential overflow instead specifying different value bit bit system using ifdefs choose common factor bit address redefine vdev_holder 0x2401de7 zholder signed ying zhu casualfisher gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1520,,
5298,e51be06697762215dc3b679f8668987034a5a048,eorge Wilson <george.wilson@delphix.com>, 2013-06-14 22:30:35 -0500,1513, illumos 3552 3564 3552 condensing one space map burn second cpu spa_sync thread 3564 spa_sync spends time metaslab_sync condensing reviewed adam leventhal ahl delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed matthew ahrens mahrens delphix.com approved richard lowe richlowe richlowe.net reference illumos illumos gate http www.illumos.org issue 3552 http www.illumos.org issue 3564 ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1513,,
5299,c99c90015ece64746e20b74245caca41d1dbefe1,adhav Suresh <madhav.suresh@delphix.com>, 2013-05-10 14:17:03 -0700,1509, illumos 3006 3006 verify assert frequently check first argument zero reviewed matt ahrens matthew.ahrens delphix.com reviewed george wilson george.wilson delphix.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate http illumos.org issue 3006 requires zfsonlinux spl ported tim chase tim chase2k.com signed brian behlendorf behlendorf1 llnl.gov close 1509,,
5300,9eaf0832ad945fb8584c39fb9aeb5e8578912aeb,ichard Yao <ryao@cs.stonybrook.edu>, 2013-05-28 20:08:15 -0400,1479, improve openrc init script current zfs openrc script dependency cause openrc attempt unmount zfs filesystems shutdown thing still using would fail cosmetic issue still addressed probably doe affect system rootfs legacy filesystem system rootfs zfs need run zfs init script system ready shutdown filesystems openrc shutdown process occurs reverse order startup process therefore running zfs shutdown procedure filesystems ready unmounted requires running startup procedure fstab patch change dependency script expliclty run fstab boot rootfs zfs run fstab boot whenever rootfs zfs cover use case case covered well system legacy root filesystems people want configure fstab mount non zfs filesystem zvol possibly also system whose pool stored network block device former requires zfs script run fstab could cause zfs datasets mount early appear fstab mount point latter requires zfs script run networking start precludes ability store system information zfs additional openrc script could written handle non root pool network block device depend user demand developer time signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1479,,
5301,fb02fabf9b8045d6a1ddedf3f79171f69633162d,hrist Schlacta <aarcane@aarcane.info>, 2013-06-06 21:33:01 -0700,1506, modified arcstat.py run linux modified kstat_update read arcstats proc fix shebang added makefile.am entry arcstat.py signed brian behlendorf behlendorf1 llnl.gov close 1506,,
5302,7634cd54db25a69e00aaab6448ad710441bd8e7d,hrist Schlacta <aarcane@aarcane.info>, 2013-06-06 21:31:18 -0700,1506, added arcstat.py freenas original source http browser nanobsd file usr local bin arcstat.py signed brian behlendorf behlendorf1 llnl.gov issue 1506,,
5303,da29fe63f04aab286cfbfadefa12bb58389748c2,ed Bass <bass6@llnl.gov>, 2013-05-13 19:48:24 -0700,1457, leak mount flag kernel calling mount care must taken avoid passing flag used user space utility otherwise may stomp flag reserved purpose kernel particular opensuse 12.3 kernel added new ms_richacl super block flag whose value conflict ms_comment flag cause incorrect behavior umask ignored ms_comment flag essentially serf placeholder option_map data structure zfs_mount.c value never used therefore avoid conflict defining ms_users ms_owner ms_group flag also conflict reserved flag kernel known caused problem nevertheless incorrect purpose mount.zfs helper user owner group option serve hint set additional implied option therefore define associated mount flag term option imply rather giving unique value signed brian behlendorf behlendorf1 llnl.gov close 1457,,
5304,fb827006163574fddb7fa837109d228dacd2ebf6,teven Burgess <sburgess@dattobackup.com>, 2013-05-12 13:14:44 -0400,1456, add zpool split man page add zpool split documentation zpool man page documented option could get work documented sun blog device specified split able get work testing signed brian behlendorf behlendorf1 llnl.gov close 1456,,
5305,1c6d149feb4033e4a56fb987004edc5d45288bcb,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-10 14:27:30 -0700,246, add assert0 verify0 macro illumos code introduced assert0 verify0 macro used instead assert3s verify3s signed brian behlendorf behlendorf1 llnl.gov signed tim chase tim chase2k.com signed madhav suresh madhav.suresh delphix.com close 246,,
5306,5c7a0369e225d306e53bd8011c58fa0f5e827865,im Chase <tim@chase2k.com>, 2013-05-30 21:52:36 -0500,243, fix enable debug kmem tracking option order initialization spl_kmem_init allow kmem tracing work spl_kmem_init function call taskq_create prior initializing tracking calling since taskq_create kmem_alloc null dereferences occur global kmem_list next prev pointer initialized yet commit move call earlier spl_kmem_init function order subsequent kmem_alloc call taskq_create work properly signed brian behlendorf behlendorf1 llnl.gov close 243,,
5307,0377189b884fab7db02a95088e05712c7cf336f7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-08 09:20:04 -0700,1437, check directory xattr enoent xattrs enabled fallback checking directory xattrs name found xattr otherwise error returned caller overwritten directory xattr error positive return value indicating success also immediately returned case 1437 erange error correctly returned overridden enoent returned subsequent unnessisary call signed brian behlendorf behlendorf1 llnl.gov close 1437,,
5308,4f34b3bdf4ced8f808f6cd928b87bd42ea3039fe,yril Plisko <cyril.plisko@mountall.com>, 2012-10-24 12:26:56 +0200,1444, zfs_scrub_limit tunable used anywhere part scrub resilver tuning zfs_scrub_limit fell use definition variable remained place moreover various guide still misleadingly mention way influence resilver scrub behavior commit remove finally signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 1444,,
5309,ee664d463189d6302877461967afe21ce9d861a0,ing Zhu <casualfisher@gmail.com>, 2013-04-30 11:15:12 +0800,1436, fix incorrect assertion ddt_phys_decref ddt_sync_entry assertion ddt_phys_decref ddt_sync_entry cast ddp ddp_refcnt uint64_t int64_t reference count bigger e.g reference count zero block commonly available spare file may mistakenly hit assertations drop type conversion signed ying zhu casualfisher gmail.com signed brian behlendorf behlendorf1 llnl.gov close 1436,,
5310,044baf009aac4935eca0f96477eb3c43e95d758a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-03 14:17:21 -0700,1423, use taskq dump_bytes vn_rdwr function performs calling vfs_write vfs_read function function reside system call layer expectation almost entire stack space work fact certain layered configuration ext lvm multipath require majority stack avoid stack overflow avoid posibility vn_rdwr call dump_bytes moved zio_type_free taskq ensures performed majority stack space available end similiar issued via sys_write sys_read signed brian behlendorf behlendorf1 llnl.gov close 1399 close 1423,,
5311,7ef5e54e2e28884a04dc800657967b891239e933,dam Leventhal <ahl@delphix.com>, 2013-05-06 12:24:30 -0700,1327, illumos 3581 spa_zio_taskq zio_type_free zio_taskq_issue tq_lock contention 3581 spa_zio_taskq zio_type_free zio_taskq_issue tq_lock piping hot reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed christopher siden delphix.com reviewed gordon ross gordon.ross nexenta.com approved richard lowe richlowe richlowe.net reference illumos illumos gate ec94d32 http illumos.org issue 3581 note linux port earlier commit 08d08eb reduced contention taskq lock simply reducing number z_fr_iss thread 100 one per cpu also optimized taskq implementation zfsonlinux spl 3c6ed54 change significantly improved unlink performance acceptable level patch reduces time spent spinning lock randomly dispatching work item multiple independent task queue illumos zfs developer stated lock contention arose 3329 spa_sync spends time landed clear 3329 affect linux port see show oprofile session unlinking large file may used right test case tested unlinking data without patch observe meaningful difference elapsed time however oprofile showed percent time spent taskq_thread reduced aside possible slight performance benefit may worth landing sake maintaining consistency upstream ported ned bass bass6 llnl.gov close 1327,,
5312,55d85d5a8c45c4559a4a0e675c37b0c3afb19c2f,eorge Wilson <george.wilson@delphix.com>, 2013-05-06 10:14:52 -0700,3335, illumos 3329 3330 3331 3335 3329 spa_sync spends time 3330 space_seg_t kmem_cache 3331 deferred free happen sync_pass 3335 make sync_pass_ constant tunable reviewed adam leventhal ahl delphix.com reviewed matt ahrens matthew.ahrens delphix.com reviewed christopher siden chris.siden delphix.com reviewed eric schrock eric.schrock delphix.com reviewed richard lowe richlowe richlowe.net reviewed dan mcdonald danmcd nexenta.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate http www.illumos.org issue 3329 http www.illumos.org issue 3330 http www.illumos.org issue 3331 http www.illumos.org issue 3335 ported brian behlendorf behlendorf1 llnl.gov,,
5313,5853fe790d1df58c5dd85ea52c5e165b6d43013c,eorge Wilson <george.wilson@delphix.com>, 2013-05-02 16:36:32 -0700,1354, illumos 3306 3321 3306 zdb able issue read parallel 3321 zpool reopen command documented man page help reviewed adam leventhal ahl delphix.com reviewed matt ahrens matthew.ahrens delphix.com reviewed christopher siden chris.siden delphix.com approved garrett amore garrett damore.org reference illumos illumos gate http www.illumos.org issue 3306 http www.illumos.org issue 3321 vdev_file.c implementation patch diverges significantly upstream version consistenty vdev_disk.c code upstream version leverage illumos bio interface make sense illumos zol two reason vdev_disk.c code zol rewritten use linux block device interface differ significantly illumos therefore updating vdev_file.c use illumos interface get consistency vdev_disk.c using upstream patch would requiring implementing compatibility code solaris block device interface user kernel space additional complexity could lead confusion buy anything reason opted simply move existing vn_rdwr taskq function advantage low risk easy understand moving vn_rdwr function taskq thread also neatly avoids possibility stack overflow finally additional work handled free taskq number thread increased thread count illumos default 100 decreased commit 08d08e due contention increase contention address porting illumos 3581 ported brian behlendorf behlendorf1 llnl.gov close 1354,,
5314,99c452bbbaeaa8fae498da1774d81e146bdd45ed,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-29 13:47:59 -0700, , fix taskq_wait_id existing taskq_wait_id function incorrectly block indefinitely reimplement simply using wait_event similar fashion taskq_wait_all flaw uncovered context moving vn_rdwr taskq previously taskq_wait_id consumer outside splat task framework issue went unnoticed signed brian behlendorf behlendorf1 llnl.gov,,
5315,5165473737e488447edfe25209c68704e08b3a2d,arlos Alberto Lopez Perez <clopez@igalia.com>, 2013-04-27 20:18:11 +0200,1431, ensure spl timeout wait spl_config.h symvers previous code waiting symver file postinst target dkm script spl create symvers file also header spl_config.h waiting configure script zfs spl symvers file also need wait spl_config.h otherwise configure script abort spl_config.h yet available top function moved end function zfs_ac_spl allow check share spl timeout parameter signed brian behlendorf behlendorf1 llnl.gov close 1431,,
5316,a4914d38a794915c774670307d6f61480eba2046,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-29 14:07:46 -0700, , silence old_umask uninit variable warning recent change caused older version gcc mistakenly flag old_umask vn_open unitialized variable silence warning initialize kernel.c function vn_open kernel.c 525 error old_umask may used uninitialized function signed brian behlendorf behlendorf1 llnl.gov,,
5317,937210a54b9c2d3dddc7221e31d5695e9720a055,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-01 09:38:49 -0700, , fix zinject list handler zfs_fd must opened calling ioctl used zfs control device brings zinject code back sync illumos implementation signed brian behlendorf behlendorf1 llnl.gov,,
5318,cc92e9d0c3e67a7e66c844466f85696a087bf60a,eorge.Wilson <george.wilson@delphix.com>, 2013-04-29 15:49:23 -0700,1396, 3246 zfs deadman thread reviewed matt ahrens matthew.ahrens delphix.com reviewed eric schrock eric.schrock delphix.com reviewed christopher siden chris.siden delphix.com approved garrett amore garrett damore.org note patch reworked original following way accomidate linux zfs implementation usage cyclic interface replaced delayed taskq interface avoids need implement new compatibility code allows rely existing taskq implementation extern added sys dsl_pool.h declaring extern source file done original patch plain wrong instead panicing system deadman trigger zevent describing blocked vdev first pending posted panic behavior desired linux provides generic method panic system thread observed hang reference delay zios second testing use zinject follows zinject vdev d30 pool reference illumos illumos gate http www.illumos.org issue 3246 ported brian behlendorf behlendorf1 llnl.gov close 1396,,
5319,ab59be7bc752481db64df07c821e2ae6bf2ae71b,rian Behlendorf <behlendorf1@llnl.gov>, 2013-05-01 16:20:28 -0700, , fix delay somewhat amazingly went unnoticed delay function actually cause task block since task state never changed task_running scheduler allows task continue running without delay using resolve issue correctly setting signed brian behlendorf behlendorf1 llnl.gov,,
5320,f6437b60c2b2bf514a0c2e82f51fde5803b57b93,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-30 09:46:33 -0700, , add msec usec nsec tick convertor add wrapper solaris msec_to_tick usec_to_tick nsec_to_tick conversion function mapped directly linux counterpart exception nsec_to_tick use exported kernel signed brian behlendorf behlendorf1 llnl.gov,,
5321,57f5a2008e2e6acf58934cf43c5fdca0faffa73e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-25 16:29:22 -0700,1274, fix txg_quiesce thread deadlock deadlock accidentally introduced commit e95853a occur system memory pressure happens txg_quiesce thread holding tx_cpu lock enters memory reclaim context memory reclaim issue synchronous zvol swap device txg_quiesce thread holding tx_cpu lock new txg opened handle deadlock fix straight forward move memory allocation outside critical region tx_cpu lock held good measure change offending allocation km_pushpage ensure never attempt issue reclaim signed brian behlendorf behlendorf1 llnl.gov issue 1274,,
5322,0c15bf16f1050e710cad1783d15eea63cca792c0,urbo Fredriksson <turbo@bayour.com>, 2013-04-13 21:38:37 +0200,1402, ignore deb rpm tar.gz file top directory build product ignored signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com issue 1402,,
5323,e013670550641610dc09b6b58f0ea9fd00169d07,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-23 16:40:47 -0700,1402, set option kmod packaging introduced ability pas enable debug enable dmu option configure way make rpm deb accidenally lost update zfs_ac_rpm explicitlu set rpmbuild defines signed brian behlendorf behlendorf1 llnl.gov issue 1402,,
5324,1a33036df9de8f95aea38ec0d9e483106d1abaa4,urbo Fredriksson <turbo@bayour.com>, 2013-04-13 18:59:19 +0200,928, add bump alien preserve release field creating debian package keep version option used result failure git commit hash syntax used release valid character rpm package deb signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com issue 1402 issue 928,,
5325,d012ba3832e11511451ff71c1c45f4f64c3b759c,urbo Fredriksson <turbo@bayour.com>, 2013-04-20 07:24:15 +0200,1402, support .nogitrelease file building custom release git tree provide ability prevent release field overwritten git describe output signed brian behlendorf behlendorf1 llnl.gov issue 1402,,
5326,382c4e5184c9caa25e85f277564657243db2a150,urbo Fredriksson <turbo@bayour.com>, 2013-04-14 17:41:51 +0200,1402, possibility disable start zfs bootup signed brian behlendorf behlendorf1 llnl.gov issue 1402,,
5327,c4933aade7ecf8a933c4404ea3f99cac5820bd57,tienne Dechamps <etienne@edechamps.fr>, 2013-04-21 20:03:12 +0100,1416, fix various generic kmod rpm spec issue number issue generic kmod rpm spec current state __id_u macro seems available system e.g debian squeeze appears deprecated use __id instead way linux configure option generated non rhel fedora case completely wrong various newline escaping issue also kernel_version available generator context second issue made generator shell snippet almost silently fail specific circumstance result broken build wrong kernel source signed brian behlendorf behlendorf1 llnl.gov close 1416,,
5328,8bbda8df3ea618cd994d477d6d5c0e0acec80089,urbo Fredriksson <turbo@bayour.com>, 2013-04-23 16:49:06 -0700,1402, ignore deb rpm tar.gz file top directory build product ignored signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com issue zfsonlinux zfs 1402,,
5329,16253cff43bf4865be01fb6f0b03cc7eeb1ece1b,urbo Fredriksson <turbo@bayour.com>, 2013-04-23 16:45:45 -0700,928, add bump alien preserve release field creating debian package keep version option used result failure git commit hash syntax used release valid character rpm package deb signed brian behlendorf behlendorf1 llnl.gov signed turbo fredriksson turbo bayour.com issue zfsonlinux zfs 1402 issue zfsonlinux zfs 928,,
5330,2c213707465e8e904064f97ead08a23ed51b79b9,urbo Fredriksson <turbo@bayour.com>, 2013-04-23 15:35:37 -0700,1402, support .nogitrelease file building custom release git tree provide ability prevent release field overwritten git describe output signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1402,,
5331,c1b20ce32084fa946f446400a66c4b606d7649d7,tienne Dechamps <etienne@edechamps.fr>, 2013-04-21 19:54:29 +0100,231, fix various generic kmod rpm spec issue number issue generic kmod rpm spec current state __id_u macro seems available system e.g debian squeeze appears deprecated use __id instead way linux configure option generated non rhel fedora case completely wrong various newline escaping issue also kernel_version available generator context second issue made generator shell snippet almost silently fail specific circumstance result broken build wrong kernel source signed brian behlendorf behlendorf1 llnl.gov close 231,,
5332,f706421173c571371afff5e2a2ee0784c5e3f95d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-17 13:07:36 -0700,1408, correctly return erange getxattr according getxattr man page erange errno returned size value buffer small hold result prior patch implementation would truncate value size byte signed brian behlendorf behlendorf1 llnl.gov close 1408,,
5333,254255f735c4187f00df6d230b80cae508308f31,hris Dunlop <chris@onthe.net.au>, 2013-04-18 11:49:25 +1000,1411, trivial spelling fix signed brian behlendorf behlendorf1 llnl.gov close 1411,,
5334,8f1e11b6105bf46a4258958eb3dcae2ab21ed8b2,aleb James DeLisle <calebdelisle@lavabit.com>, 2013-04-16 05:23:39 -0400,1404, remove .readdir table zpl_readdir function registered part table must part table removing callback vfs correctly return enotdir calling getdents file signed brian behlendorf behlendorf1 llnl.gov close 1404,,
5335,b28e57cb82c5d5a992b90c56f67dd7dbf9b6f296,artin Matuska <martin@matuska.org>, 2013-04-12 10:26:03 -0700,548, allow setting lower ashift ashift previous patch allowed set increased ashift avoid 512b sector device however possible set ashift lower reported physical sector size even smaller logical size supported practice several case settong lower ashift useful modern drive correctly report physical sector size cause zfs correctly default using sector size ashift however usage model new default ashift value cause unacceptable increase space usage filesystems many small file may see total available space reduced unacceptable replacing drive existing pool created ashift modern sector drive used zpool replace command issue error new drive incompatible sector alignment however allowing ashift manual specified smaller non optimal value device may still safely used signed brian behlendorf behlendorf1 llnl.gov close 1381 close 1328 issue 967 issue 548,,
5336,295304bed6fa6744b8d011e36b9c2180311cedb2,eorge Wilson <george.wilson@delphix.com>, 2013-04-10 16:58:22 -0700,1390, illumos 3422 3425 3422 zpool create syseventd race yield non importable pool 3425 first write new zvol fail efbig reviewed adam leventhal ahl delphix.com reviewed matthew ahrens mahrens delphix.com approved garrett amore garrett damore.org reference illumos illumos gate http www.illumos.org issue 3422 http www.illumos.org issue 3425 ported brian behlendorf behlendorf1 llnl.gov close 1390,,
5337,352bd194827fc0b6425bf701b095969f9fb80b4f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 13:56:28 -0700,1380, add additional dependency dkm package dkm package successfully build kernel devel header must included along gcc make perl spl code never directly invokes perl kernel build system depends signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1380,,
5338,9d248f73a4941a5c5fdf5d701bee159aa6bdfa24,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 13:35:32 -0700,1380, add additional dependency dkm package dkm package successfully build kernel devel header must included along gcc make perl zfs code never directly invokes perl kernel build system depends signed brian behlendorf behlendorf1 llnl.gov close 1380,,
5339,d17eeafbf0c680c154ed83cec60112a0b28ae985,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 13:31:42 -0700,1380, replace zfs_ac_meta perl dependency awk remaining perl dependency part zfs_ac_meta macro eliminating replacing awk avoid need pull perl rebuild package signed brian behlendorf behlendorf1 llnl.gov issue 1380,,
5340,c8122d2504e215170b900f955f0fda19ecfe6f04,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 14:37:47 -0700, , require spl devel kmod version commit introduced idea working build work correctly however zfs kmod depends specific spl devel kmod version release package release component unique dependency never satisfied requires line introduced ensure correct version spl always used context version number required release component dropped satisfy dependency signed brian behlendorf behlendorf1 llnl.gov,,
5341,5b5a65b02225e6281b42b12a4d87bb210334b714,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 15:16:39 -0700, , automake 1.10.1 compat am_silent_rules part automated testing involves building source debian lenny ship ancient version automake 1.10.1 historically caused non fatal warning am_silent_rules defined autogen.sh script updated use autoreconf warning became fatal configure.ac warning macro am_silent_rules found library autoreconf running usr bin autoconf force configure.ac error possibly undefined macro am_silent_rules token others legitimate please use resolve build issue call am_silent_rules wrapped m4_ifdef prevents macro expanded platform undefined signed brian behlendorf behlendorf1 llnl.gov,,
5342,7fd629d4304d1335963e61802c38c9ab3856c171,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 14:05:23 -0700,1380, replace spl_ac_meta perl dependency awk remaining perl dependency part spl_ac_meta macro eliminating replacing awk avoid need pull perl rebuild package signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1380,,
5343,c76b1dab8d24a833f0867b69e6c8576a1b6b28e4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-04-02 15:09:29 -0700, , automake 1.10.1 compat am_silent_rules part automated testing involves building source debian lenny ship ancient version automake 1.10.1 historically caused non fatal warning am_silent_rules defined autogen.sh script updated use autoreconf warning became fatal configure.ac warning macro am_silent_rules found library autoreconf running usr bin autoconf force configure.ac error possibly undefined macro am_silent_rules token others legitimate please use resolve build issue call am_silent_rules wrapped m4_ifdef prevents macro expanded platform undefined signed brian behlendorf behlendorf1 llnl.gov,,
5344,83918aebe5547370b6d377aa2d17f378c44054b7,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:33:09 +0100, , build call boilerplate ourself rationale see section 3.5 using autoreconf update configure script autoconf manual signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5345,a9e86ac4fd080328742a52362110c1d344fb2799,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:31:52 +0100, , gitignore anchor entry respective directory .ko specific module .m4 config etc signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5346,92c4ea38c9bd4dc619e4e82bb15c30618878793a,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:30:25 +0100, , build use cppflags preprocessor flag preferably appropriate variable signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5347,7a8a639390c290a9351943b42216bea64d92e77d,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:27:50 +0100, , build resolve orthographic grammatical error signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5348,8c3926294579f64f6ebe09b0ddaed5dd9cbd48ef,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:33:09 +0100, , build call boilerplate ourself rationale see section 3.5 using autoreconf update configure script autoconf manual http www.gnu.org software autoconf manual autoconf 2.67 html_node autoreconf invocation.html signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5349,ea0fcfc8752f96ad518793f946b84394a679640c,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:31:52 +0100, , gitignore anchor entry respective directory .ko specific module .m4 config etc signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5350,ecf76e36767cbd5f320d49c9902def14ff89c4a0,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:30:25 +0100, , build use cppflags preprocessor flag preferably appropriate variable signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5351,4e95cc99b029f519ec1d3fd86df2910e7cb0d156,an Engelhardt <jengelh@inai.de>, 2013-03-30 03:27:50 +0100, , build resolve orthographic grammatical error signed jan engelhardt jengelh inai.de signed brian behlendorf behlendorf1 llnl.gov,,
5352,4a5b1218088842cd5004d167da25ea96eb9a1a11,urbo Fredriksson <turbo@bayour.com>, 2013-04-02 10:36:25 -0700,1170, man page update smb update manpage information acl guest access samba need able authenticate user add information net used modify share zfs sharing undone zfs unshare give example mount smb filesystem shared via zfs signed brian behlendorf behlendorf1 llnl.gov close 1181 issue 1170,,
5353,be8bc8c0d3ff16888f046e8523051b514ad285e0,urbo Fredriksson <turbo@bayour.com>, 2013-04-02 09:27:52 -0700,1124, add smb_available sanity check basic sanity check smb_available verify net command usershare directory exists signed brian behlendorf behlendorf1 llnl.gov close 1124,,
5354,b5d8c5fb08d596d598d86afce479be7e8b9bc700,ick Garvey <garvey.nick@gmail.com>, 2013-03-26 17:52:22 -0300,1373, correct typo renaming example signed brian behlendorf behlendorf1 llnl.gov close 1373,,
5355,36c0b62799554d0a41fc0a65602de3b50f9f6409,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-25 13:46:37 -0700, , tag zfs 0.6.1 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
5356,b7f59425f93c8fd7392da903f4a292fff1154dad,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-26 08:40:44 -0700, , include init script package distribution specific init script excluded packaging reworked intention replace systemd equivilants however work yet done init script still useful added back packaging signed brian behlendorf behlendorf1 llnl.gov,,
5357,6385874dbfe0478a5f3d70c5e5983e800b038d49,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-25 13:46:47 -0700, , tag spl 0.6.1 meta file release log updated signed brian behlendorf behlendorf1 llnl.gov,,
5358,8636968f9a24e4a1cce1753ca68631a0ae2ced71,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-25 11:18:11 -0700, , provide kmodname devel kmod yum builddep order ensure yum builddep pull build requirement generic kmodname devel kmod provides line added allows version development header included without requiring knowledge kernel version important unlike rpmbuild doe correctly expand source rpm spec file yum builddep doe without generic provides line mock relies yum builddep unable automatically satisfy dependency signed brian behlendorf behlendorf1 llnl.gov,,
5359,0df23ca9a18bcc3b76319a3c0b93359a5468d016,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-25 11:28:18 -0700, , provide kmodname devel kmod yum builddep order ensure yum builddep pull build requirement generic kmodname devel kmod provides line added allows version development header included without requiring knowledge kernel version important unlike rpmbuild doe correctly expand source rpm spec file yum builddep doe without generic provides line mock relies yum builddep unable automatically satisfy dependency signed brian behlendorf behlendorf1 llnl.gov,,
5360,c14183adcabd020b72c29f224f94bd90f9cead12,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-22 11:27:20 -0700,111, use git describe working build building arbitrary commit git tree useful resulting package uniquely identifiable therefore build system updated detect compiling git tree building git tree commits last annotated tag hash component git describe used overwrite release field meta file tricky part ensure make dist tarball built using correct release dist hook added top level make file rewrite meta file using correct release signed brian behlendorf behlendorf1 llnl.gov close 195 issue 111,,
5361,f6fb7651a0d05b357dc179cc4853263ce15da6ed,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-22 14:46:11 -0700, , use git describe working build building arbitrary commit git tree useful resulting package uniquely identifiable therefore build system updated detect compiling git tree building git tree commits last annotated tag hash component git describe used overwrite release field meta file tricky part ensure make dist tarball built using correct release dist hook added top level make file rewrite meta file using correct release signed brian behlendorf behlendorf1 llnl.gov,,
5362,feaf1e321da97ab0aaa60edc121fb6aa2d03952d,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-21 13:21:11 -0400, , call cond_resched calling cond_resched object freed slab freed cause slab object live excessive period time following reclaimation interferes kernel memory management called kswapd cause direct reclaim occur response memory pressure resolved signed richard yao ryao,,
5363,09fb1ec48a38ad3ade722a1ad39f9ac73ea2b308,arik Horn <dajhorn@vanadac.com>, 2013-03-20 22:52:53 -0500,1366, fix minor typo update marketing copy correct spelling mistake author disclaimer file update readme.markdown file credit illumos mention zpl finished readme.markdown file also first impression handful new user discover zol web search double splash page github repository build blurb therefore removed people encouraged visit regular home page installing product signed brian behlendorf behlendorf1 llnl.gov close 1366,,
5364,352b557bd61e07f173c36d481df3408645e19599,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 15:15:05 -0700, , use requested kernel dkm build linux linux obj option must specified part dkm build otherwise package built running kernel signed brian behlendorf behlendorf1 llnl.gov,,
5365,ae0f0ba950bed72be0635c29d3dfecb5a811f121,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 11:01:48 -0700, , use build_depends option dkm build support added dkm build dependency specified allows ensure spl package always built zfs package patch yet merged upstream available zfsonlinux dkm repository signed brian behlendorf behlendorf1 llnl.gov,,
5366,7865606a6a02daf8b4b20fc95dc02eec100a0523,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 11:28:00 -0700, , remove zfs dkm conflict zfs kmod zfs dkm package also provides zfs kmod zfs user package yum flag conflict avoid problem remove conflict tag zfs dkm rely one zfs kmod zfs dkm 0.6.0 installed conflict zfs kmod zfs dkm 0.6.0 signed brian behlendorf behlendorf1 llnl.gov,,
5367,b9676003665ceee5a859253dde3305eecc215016,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 11:25:50 -0700, , refresh dracut module setup zpool.rules retired time ago favor vdev.rules additionally guarentee zpool.cache file exists install conditionally upon existance signed brian behlendorf behlendorf1 llnl.gov,,
5368,68a2e016c8314caaf149c78f76dfb2ae139ab377,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-19 19:25:01 -0700, , add missing dependency spl zfs test zfs dracut package pulled core zfs package allows required zfs package installed yum repository running yum install zfs signed brian behlendorf behlendorf1 llnl.gov,,
5369,bef14fbc8c29fb07a34fc3ac7f70ef8c2f8d1c0e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 15:11:24 -0700, , use requested kernel dkm build linux linux obj option must specified part dkm build otherwise package built running kernel signed brian behlendorf behlendorf1 llnl.gov,,
5370,19e9d8fd618e7cc6385911b5cf329d2f00c2b638,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-20 11:33:15 -0700, , remove spl dkm conflict spl kmod spl dkm package also provides spl kmod spl user package yum flag conflict avoid problem remove conflict tag spl dkm rely one spl kmod spl dkm 0.6.0 installed conflict spl kmod spl dkm 0.6.0 signed brian behlendorf behlendorf1 llnl.gov,,
5371,c0c3d83ccb3ff89c6183a3f160c05adad5805148,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-19 15:55:44 -0700, , add spl dkm dependency zfs dkm adding spl dkm version dependency zfs dkm package ensures spl installed zfs cleanly handle initial yum localinstall case however doe address dkm rebuilds caused new kernel installed still rely clunky spl timeout timeout configure option allows zfs compilation briefly delayed spl component built signed brian behlendorf behlendorf1 llnl.gov,,
5372,407482090470bfb25d508595116995aad88cd55a,arik Horn <dajhorn@vanadac.com>, 2013-03-15 12:25:32 -0700, , create splat man page automake template updated install man page existing packaging updated include signed brian behlendorf behlendorf1 llnl.gov,,
5373,ac826e16682114ee7a41b7a4ca3d8fdde59d29dc,arik Horn <dajhorn@vanadac.com>, 2013-03-16 15:54:32 -0500,518, create fsck.zfs zhack man page automake template updated install existing packaging automatically include signed brian behlendorf behlendorf1 llnl.gov supplement 518,,
5374,5dc6af0eec29b119b731c793037fd77214fc9438,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-19 12:05:08 -0700,1308, add zio_ddt_free ddt_phys_decref error handling assumption zio_ddt_free ddt_phys_select must always find match however fails due damaged ddt reason code null dereference ddt_phys_decref never happen observed various platform result unless willing patch zfs code pool inaccessible therefore choosing gracefully handle case rather leave fatal http pipermail zfs discus 2012 february 050972.html signed brian behlendorf behlendorf1 llnl.gov close 1308,,
5375,30b92c1de68ced4bee235f879791ee316314a197,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-18 13:03:09 -0700, , add metaslab_debug option enabling metaslab debugging prevent space map automatically unloaded significantly increase memory footprint able dynamically control helpful debugging certain performance testing signed brian behlendorf behlendorf1 llnl.gov,,
5376,f3757573a677e8662e268f0bb8e5ffe750013088,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-17 12:10:17 -0800,1341, refresh rpm packaging refresh existing rpm packaging conform fedora packaging guideline includes adopting kmods2 packaging standard used fod kmods distributed rpmfusion fedora rhel http wiki packaging guideline http rpmfusion.org packaging kernelmodules kmods2 spec file entirely rewritten user perspective major change fedora package build dependency rpmfusion repository generic kmod package also new dependency kmodtool 1.22 bundled source rpm additional package needed kernel binary module package renamed zfs module kmod zfs specificed kmods2 common kmod zfs devel package addition per kernel devel package common package contains development header per kernel package contains kernel specific build product signed brian behlendorf behlendorf1 llnl.gov close 1341,,
5377,493972c8964174d0ec767c4e780bb3add71363fe,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-08 11:02:08 -0800,222, refresh rpm packaging refresh existing rpm packaging conform fedora packaging guideline includes adopting kmods2 packaging standard used fod kmods distributed rpmfusion fedora rhel http wiki packaging guideline http rpmfusion.org packaging kernelmodules kmods2 spec file entirely rewritten user perspective major change fedora package build dependency rpmfusion repository generic kmod package also new dependency kmodtool 1.22 bundled source rpm additional package needed kernel binary module package renamed spl module kmod spl specificed kmods2 common kmod spl devel package addition per kernel devel package common package contains development header per kernel package contains kernel specific build product signed brian behlendorf behlendorf1 llnl.gov close 222,,
5378,4a6d8d2c3e72345463de1db97d7d016c95443679,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-20 13:58:05 -0800, , change spl kmod devel install path install common spl kernel development header usr src spl version rather kernel specific directory kernel specific build product spl_config.h modules.symvers left installed usr src spl version kernel done consistent dkm expects kernel module source packaged also allows common spl kmod devel package includes header per kernel spl kmod devel kernel package signed brian behlendorf behlendorf1 llnl.gov,,
5379,5c30c47a4542a58ae6c94bdee15f4691affa2a17,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-14 10:43:46 -0700,221, merge branch linux 3.9 signed brian behlendorf behlendorf1 llnl.gov close 221,,
5380,4a31e5aa9be561a450a2741f5305932e0b9df241,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-04 15:17:03 -0500, , linux 3.9 compat switch hlist_for_each _rcu torvalds linux changed _rcu take argument instead handle switching hlist_for_each _rcu work across supported kernel signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5381,8274ed598801255626b8c1648c3a4cdfea07b738,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-11 22:02:45 -0400, , drop support argument version set_fs_pwd suggestion brian behlendorf made reviewing early pull request linux 3.9 support commit made intentionally easy revert ever reason reintroduce support older kernel signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5382,a54718cfe0d8e8a4b124f176f0d5c94141f9aea0,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-04 00:24:04 -0500, , linux 3.9 compat set_fs_root take const struct path torvalds linux enforces const correctness passing struct path signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5383,2a305c34c8876c06f55475e5ff5163923baa5491,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-04 00:02:43 -0500, , linux 3.9 compat vfs_getattr take two argument function prototype vfs_getattr previoulsy took struct vfsmount struct dentry argument would always defined together struct path torvalds linux modified vfs_getattr take struct path taken argument instead signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5384,bc90df66887af63bd67223616f9084c4e9567056,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-03 23:45:33 -0500, , linux 3.9 compat depend f_vfsmnt torvalds linux removed preprocessor definition f_vfsmnt ability access mountpoint via f_path.mnt stable long time switch signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5385,10087fe1fa3e4aa4b6722a1d27a47853ebdf47c8,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-03 23:42:32 -0500, , linux 3.9 compat include linux sched rt.h linux 3.9 reorganized sched.h splitting numerous file torvalds linux moved max_prio max_rt_prio linux sched rt.h signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5386,9b2af9a097c119b818bd584eb89ca51ba475c7f2,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-22 15:50:00 -0800, , configure spl obj auto detect cleanup install location spl zfs devel header changed need refresh auto detect code note packaging already explicitly call spl obj nothing changed updated code structured like zfs_ac_kernel cleaner easier maintain addition stricter detecting valid source object directory requires source directory contains file spl.release object directory contains file spl_config.h following path checked notice var lib usr src path require spl zfs version matched done prevent accidentally mixing release dnl var lib dkm spl version build dnl usr src spl version kernel version dnl usr src spl version dnl spl dnl usr src kernel kernel version signed brian behlendorf behlendorf1 llnl.gov,,
5387,775f2d34a3ccd5f866cfa04be76f83cb562f3881,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-21 15:10:11 -0800, , change zfs kmod devel install path install common zfs kernel development header usr src zfs version rather kernel specific directory kernel specific build product zfs_config.h modules.symvers left installed usr src zfs version kernel done consistent dkm expects kernel module source packaged also allows common zfs kmod devel package includes header per kernel zfs kmod devel kernel package signed brian behlendorf behlendorf1 llnl.gov,,
5388,d69b2dee714f732300c6db12b7af48b4f86d67ee,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-08 13:06:04 -0800, , remove copying reason keep file around redundant copyright file cause lintian emit extra license file warning signed brian behlendorf behlendorf1 llnl.gov,,
5389,cf2129e6dc567004fb5246ae67248de030d9520b,arik Horn <dajhorn@vanadac.com>, 2013-03-12 14:40:55 -0500,518, create mount.zfs zinject zpios man page update automake template install signed brian behlendorf behlendorf1 llnl.gov close 518,,
5390,5cd0add2149e63cf962cc715338e41a611b8c0aa,ichael Gebetsroither <michael@mgeb.org>, 2013-03-12 15:26:50 -0500,518, import ztest.1 man page create nroff man page zol http grml.org online doc ztest.1.html derived http opensolaris.org community zfs ztest signed brian behlendorf behlendorf1 llnl.gov issue 518,,
5391,ea5c4389fb7183f036b38e5ba171ac5a05798c4d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-06 15:49:57 -0800, , merge branch build system,,
5392,1c24b699b0c7590e135f4701b50a4c933ebe0499,ichard Yao <ryao@cs.stonybrook.edu>, 2013-03-04 15:52:11 -0500,1339, linux 3.9 compat undefine gcc_version mainline kernel started defining gcc_version commit torvalds linux unfortunately lz4 also defines macro two defintions incompatible undefine gcc_version lz4.c handle signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1339,,
5393,7c72f8e391e3fc54a9c5be54083b541cb2951780,rian Behlendorf <behlendorf1@llnl.gov>, 2013-03-06 15:47:38 -0800, , merge branch build system,,
5394,2016ff96d1739b5ced1d37e7266720e7531b8212,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-22 11:28:28 -0800, , fix zdb.8 macro warning detected rpmlint rpool export home section interpretted troff undefined macro resulted rpool export home output omitted man zdb caused starting line character moving next line able fix zfs.x86_64 manual page warning usr share man man8 zdb.8.gz 450 warning macro rpool export home defined signed brian behlendorf behlendorf1 llnl.gov,,
5395,92db59ca3b42eb0aa3fbdcac689cc49878438177,ed Bass <bass6@llnl.gov>, 2013-02-17 11:31:20 -0800, , refresh link web site file still refer behlendorf private fork github use primary web site url instead two typo also corrected signed brian behlendorf behlendorf1 llnl.gov,,
5396,e07b579b1b487eec772ec9394eefaad264c779fb,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-17 11:16:22 -0800, , retire zfs.release file zfs.release file originally added document version opensolaris zol code based however longer particularly important useful likely never see new onnv_ drop solaris even zol change extensive enough could easily applied treat illumos official upstream cherry pick patch need signed brian behlendorf behlendorf1 llnl.gov,,
5397,0da31cd6ca0dedbf0ceb7118d2cede2e97e73c14,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-17 11:11:41 -0800, , remove arch packaging kernel module available arch user repository aur via zfs since packaging maintained superior removed tree http index.php zfs various distribution picking package eventually able remove infrastructure packaging belongs distribution upstream signed brian behlendorf behlendorf1 llnl.gov,,
5398,ffb21118add1a2e6cec2ce401c333b4a4e76d9a3,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-22 10:16:16 -0800, , add dracutdir configure option standard dracut directory moved usr share dracut usr lib dracut ensure dracut module get installed correct location provide dracutdir configure option set path default install location updated usr lib dracut used current version fedora however default overriden rpm packaging consistency signed brian behlendorf behlendorf1 llnl.gov,,
5399,d09f98a9a688905a06a4bd2a92752bebe0f28e63,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-17 11:05:11 -0800, , add kmoddir install target provide mechanism control directory name module installed kernel privdes install_mod_dir hardcoded addon zfs add kmoddir variable passed make install override default directory name change default addon zfs extra kernel.org default signed brian behlendorf behlendorf1 llnl.gov,,
5400,fd2b4aa71a53f3565522675de97b872c104383f4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-08 13:51:27 -0800, , fix zfs_config.h install permission default permission used install 755. since file executable 644 appropriate signed brian behlendorf behlendorf1 llnl.gov,,
5401,48c028f5a5558894f8d94652050bc8e644760b9a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-08 10:01:41 -0800, , replace libexecdir datadir according fhs testing script example architecture independent installed subdirectory usr share http fhs 2.2 fhs 4.11.html signed brian behlendorf behlendorf1 llnl.gov,,
5402,0b4d1b5853791e1e447d74f0b229800d65b53071,ric Dillmann <eric@jave.fr>, 2013-02-14 00:11:59 +0100,756, add snapdev hidden visible dataset property new snapdev dataset property may set control visibility zvol snapshot device default value set hidden prevent zvol snapshot appearing dev zvol dev dataset set visible zvol snapshot dataset visible functionality largely added automatic snapshoting enabled large number read zvol snapshot created creating device kernel attempt read partition table blkid attempt identify filesystems partition lead variety issue zvol partition table read context modprobe zfs automatically imported pool undesirable done asynchronously reducing number visible device help udev expects able complete work new block device fairly quickly many zvol device added time longer true lead udev timeouts missing dev zvol link simply lot device dev aukward management standpoint hidding device unlikely ever use help snapshot device needed made visible changing snapdev property note patch change default behavior zvols effectively snapdev visible signed brian behlendorf behlendorf1 llnl.gov close 1235 close 945 issue 956 issue 756,,
5403,3d6af2dd6d598bebf6ab04d0e2b6f6ba6e5d0f00,ed Bass <bass6@llnl.gov>, 2013-03-04 17:26:55 -0800, , refresh link web site update link refer official zfs linux website instead behlendorf personal fork github signed brian behlendorf behlendorf1 llnl.gov,,
5404,5f0a4b0847ae19a5e647734cb3ca1c5af8bd9cf9,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-16 15:32:08 -0800, , remove arch packaging kernel module available arch user repository aur via zfs since packaging maintained superior removed tree http index.php zfs various distribution picking package eventually able remove infrastructure packaging belongs distribution upstream signed brian behlendorf behlendorf1 llnl.gov,,
5405,a4430fce691d492aec382de0dfa937c05ee16500,eorge Wilson <George.Wilson@Sun.COM>, 2013-03-03 00:57:39 -0500,1333, merge zvol.c change psarc 2010 306 read zfs pool change zvol.c never merged last onnv_147 bulk update zvol.c largely rewritten linux making fairly easy miss sort change cause regression importing zpool zvols read doe impact pool contain filesystem datasets reference illumos illumos gate f9af39b signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1332 close 1333,,
5406,b01615d5ac86913da1e092d0378bfb8f0e72af30,ichard Yao <ryao@cs.stonybrook.edu>, 2013-02-14 23:37:43 -0500,1300, constify structure containing function pointer pax team modified kernel modpost report writeable function pointer section mismatch potential exploit target could ignore warning presence obscure actual issue proper const correctness also catch programming mistake building kernel module pax grsecurity patched linux 3.4.2 kernel report 133 section mismatch prior patch patch eliminates 130 quantity writeable function pointer eliminated constifying structure follows vdev_opts_t    space_map_ops_t  remaining writeable function pointer addressed patch zpl_fs_type kernel sget function requires non const final writeable function pointer created kernel set_shrinker remove_shrinker function also require non const signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1300,,
5407,c38367c73f592ca9729ba0d5e70b5e3bc67e0745,ichard Yao <ryao@cs.stonybrook.edu>, 2013-02-14 18:54:04 -0500,1300, eliminate runtime function pointer mod autotools check pax grsecurity patched kernel implement dialect relies gcc plugin enforcement basic idea dialect function pointer structure change runtime cause code modifies function pointer runtime fail compile many instance autotools check rely whether small test case compile given kernel autotools check assume default case case fail one autotools check test pax grsecurity patched kernel modifying function pointer runtime default case used early detection situation possible relying compiler warning compiler error enable debug used unfortunately people build zfs enable debug common situation issue manifest runtime failure form null pointer exception previous patch addressed issue pax grsecurity compatibility largely relied rewriting autotools check avoid runtime function pointer modification addition pax grsecurity specific check patch take previous work logical conclusion eliminating use runtime function pointer modification permit removal pax specific autotools check favor one work across supported kernel resolve issue reported occur pax grsecurity patched linux 3.7.5 kernel gentoo linux http bugs.gentoo.org show_bug.cgi 457176 able prevent future regression pax grsecurity compatibility ensuring change zfsonlinux avoid runtime function pointer modification time doe solve issue silent failure triggering default case autotools check permitted regression become runtime failure first place need addressed future patch reported marcin miroså bug mejor.pl signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1300,,
5408,d1142fbffe720cd5f82691d7a00816ce72f4e2b2,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-13 14:01:00 -0800, , remove custom install data local header rather use custom install target cleaner define kerneldir set kernel_headers appropriately allows leverage standing configure install support additionally took opertunity add missing make file include subdirectory signed brian behlendorf behlendorf1 llnl.gov,,
5409,0298f3d67ff4971513ff848d640ca431a983de43,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-12 15:56:02 -0800, , add kmoddir install target provide mechanism control directory name module installed kernel privdes install_mod_dir hardcoded addon spl add kmoddir variable passed make install override default directory name change default addon spl extra kernel.org default signed brian behlendorf behlendorf1 llnl.gov,,
5410,fea77534f0a865bad1c7456bd9fceb1f54976988,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-08 13:54:24 -0800, , fix spl_config.h install permission default permission used install 755. since file executable 644 appropriate signed brian behlendorf behlendorf1 llnl.gov,,
5411,8adf71e9b0e20d9f1ec2b3bc308db206cb6ceed7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-08 12:17:18 -0800, , remove install generic install instruction safely dropped signed brian behlendorf behlendorf1 llnl.gov,,
5412,8128bd89fb487d91a3335605b009ac2b7d5aecd3,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-26 17:02:27 -0800,250, fix hot spare issue hot spare zol open leaf vdevs exclusively o_excl linux exclusive open cause subsequent exclusive open fail ebusy could resolved opening device exclusively illumos doe additional protection offered exclusive open desirable cleanly prevents accidentally adding use non zfs device pool fix slightly relaxed usage o_excl following way function open device read o_excl flag removed updated use o_rdonly common holder added vdev disk code allow zfs code internally open device multiple time non zfs caller may exception added make_disks hot spare creating partition table hot spare device already opened exclusively skip creating partition table must already done disk originally added hot spare additional minor change include fixing check_in_use use partition instead slice suffix is_spare moved make_disks avoid adding forward reference signed brian behlendorf behlendorf1 llnl.gov close 250,,
5413,bd99a7584a3d93cffd6c57ef7b9c80ffd953d913,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-26 11:28:14 -0800, , remove wholedisk check vdev_disk_open described comment enforced assertion vdev_wholedisk never wholedisk handling performed user space utility prevent confusion dead code removed signed brian behlendorf behlendorf1 llnl.gov,,
5414,0d8103d9561bd2314da320dd5d43f9d5e044b64d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-26 11:25:55 -0800, , leaf vdevs reopened vdev_disk.c implemented linux failed handle reopen case according vdev_reopen comment leaf vdevs closed opened vdev_reopening set linux would always close open device issue noticed zpool scrub command run leaf vdev device name dev disk vdev missing scrub command call vdev_reopen caused vdevs closed reopened due missing link result vdevs marked unavailable pool halted due failmode wait patch add missing functionality similiar fashion illumos code signed brian behlendorf behlendorf1 llnl.gov,,
5415,c5b247f3354d5c9e24577af997c84d90625620a6,im Connors <tconnors@rather.puzzling.org>, 2013-02-26 08:00:45 +1100,1319, warn old disk format unavailable feature zpool status flag error pool unavailable imported fine using latest feature available code error signed brian behlendorf behlendorf1 llnl.gov close 1319,,
5416,d9b0ebbe824469d178a05b0fb9004e4afce86009,tienne Dechamps <etienne@edechamps.fr>, 2013-02-24 11:22:07 +0000,1318, remove check determine whether kernel capable handling empty barrier bios check presence macro introduced 2.6.24. macro defined flush disk vdevs flushing disabled unfortunately macro removed 2.6.37 even though kernel still capable handling empty barrier bios result flushing effectively disabled kernel 2.6.37 meaning starting kernel version zfs use barrier guarantee disk data consistency quite bad lead potential data corruption power failure patch fix issue removing configure check support kernel 2.6.24 anymore thanks richard kojedzinszky catching nasty bug signed brian behlendorf behlendorf1 llnl.gov close 1318,,
5417,d75af3c0ebb4e31ece087aeecfeff282cb6f1361,tienne Dechamps <etienne@edechamps.fr>, 2013-02-24 12:42:28 +0000,1317, use werror kernel configure test matter fact already using werror test bug kernel bio empty barrier.m4 set werror without reverting afterwards meant test ran one using werror patch simply make clear using werror make code readable predictable signed brian behlendorf behlendorf1 llnl.gov close 1317,,
5418,546c978bbd3f132a88609cab15ec0e954eaa62b8,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-21 12:14:44 -0800,938, enable default module option introduced commit resolve memory miscalculation could result txg_sync thread spinning first introduced default behavior left unchanged enough real world usage confirmed unexpected issue reached point linux direct reclaim working expected enabling behavior default help pave way retire functionality spl layer caller signed brian behlendorf behlendorf1 llnl.gov issue 938,,
5419,73a046cc8c863fd2ae5bcff3461005c4ecdcaec7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-07 16:33:06 -0800,1058, fix broken rpath spec file rather setting _prefix override default install location cleaner understandable leave prefix usr override _sbindir _libdir fix three issue command longer get built incorrect rpath library good fixing sort thing required fedora packaging guideline http wiki packaging guideline beware_of_rpath various author copyright etc file correctly installed usr share doc instead share doc _libexecdir handled properly distribution fedora rhel usr libexec opensuse sle usr lib debian usr lib rpm signed brian behlendorf behlendorf1 llnl.gov close 1058,,
5420,8dca0a9a386a7e435889e7d621e5029a15dad612,ichard Yao <ryao@cs.stonybrook.edu>, 2013-02-09 19:25:55 -0500,1282, make spa.c assertion catch unsupported pre feature flag pool version couple assertion spa.c designed prevent use invalid pool version written assumption valid pool spa_version since feature flag jumped 5000 number range 5000 non inclusive fail trigger switch new macro correct signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1282,,
5421,9878a89d7ab05ffcdcdbf80233d02e30eea511be,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-11 12:55:24 -0800,1279, add explicit maxnamelen check turn linux vfs strictly handle case component path name exceeds maxnamelen doe however appear correctly handle maxpathlen right way handle appears add explicit check zpl_lookup function several tree filesystems handle case way signed brian behlendorf behlendorf1 llnl.gov close 1279,,
5422,52768784e66a7b3ca493d907e86ee674ca50193c,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-07 14:15:53 -0800,1189, update zfs.8 zfs volume swap section 0.6.0 rc11 using zfs volume linux swap device supported swapping file zfs filesystems signed brian behlendorf behlendorf1 llnl.gov close 1189,,
5423,ed2e157605ba0bbce954174e49c6a76682d564b9,ed Bass <bass6@llnl.gov>, 2013-02-06 10:15:13 -0800,1268, switch km_sleep km_pushpage two location km_sleep used call must use km_pushpage found using zpool upgrade command see commit b8d06fc additional detail also make small correction comment block  signed brian behlendorf behlendorf1 llnl.gov close 1268,,
5424,4bf3909e5186a978ea9bf5fb1409aa9777d40a35,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-05 15:59:36 -0800, , disable automatic log dumping long ago infrastructure added spl keep internal debug log last second activity helpful early development day longer needed resort debug buffer resolve issue several year today better generic tool like systemtap ftrace evolved point used purpose along stack trace dumped system console rare case crash dump almost always debug need therefore disabling code automatically dump log disk assertion except case set disabled default viewed first step towards either retiring infrastructure complexity entirely integrating logging properly ftrace part change also removing package undocumented spl utility used decode binary log signed brian behlendorf behlendorf1 llnl.gov,,
5425,a0625691b39468d04eb716919e237f96a3987b48,ichard Yao <ryao@cs.stonybrook.edu>, 2013-02-05 16:42:29 -0500, , fix autotools check ppc64 fails ppc64 following error error current undeclared first use function include linux sched.h ensure current available signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5426,02a946ce10671478e3394180b84f3af4de48c59d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-05 15:07:09 -0800,1265, remove unused machelf.h header machelf.h header never included anything zfs build process effectively dead code safely removed signed brian behlendorf behlendorf1 llnl.gov close 1265,,
5427,399f60c8b47f7513d078a7c181ff132e2cafdd15,ichard Yao <ryao@cs.stonybrook.edu>, 2013-02-05 18:14:30 -0500,1267, fix function relocation libzpool binutils 2.23.1 fails situation generate function relocation powerpc possibly architecture cause linking libzpool fail depends libnvpair add dependency libnvpair lib libzpool makefile.am correct signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1267,,
5428,dd3678fc29d75286b57e705454bbd7e60e1b44e0,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-05 09:35:43 -0800,1254, fix atomic64_ autoconf check  directly including asm atomic.h header linux 3.4 header removed result build failure right thing include linux atomic.h however safely exist 2.6.26 kernel therefore include linux fs.h turn includes correct atomic header regardless kernel version incorrect apis used zfs following build failure result arc.c 791 warning __ret may used uninitialized function wuninitialized arc.c 791 1875 error call declared attribute error bad argument size cmpxchg since linux 2.6.24 compatibility code argument made removed kernel old supported however close release going leave place signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 814 close zfsonlinux zfs 1254,,
5429,dd26aa535b395735ca61ea2a3e618aded45eb05e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-04 16:35:54 -0800, , cast zfs bad bloc ull x86 explicitly case value unsigned long long bit system inform compiler long type used otherwise get following compiler error dmu_send.c 376 error integer constant large longâ type signed brian behlendorf behlendorf1 llnl.gov,,
5430,a31770283a682384f477e864628d5a1a975c60ff,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-04 12:35:25 -0800,1184, fix reference zpool features.5 zpool feature man page reference linux zfs zpool man page convention used linux signed brian behlendorf behlendorf1 llnl.gov close 1184,,
5431,3795ae5ed7a82aef8a1f2b19f871503fe8cfe3d8,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-04 12:08:25 -0800,1262, add zpool feature man page zpool feature man page accidentally omitted build target feature flag merged result get installed part make install none package include man page signed brian behlendorf behlendorf1 llnl.gov close 1262,,
5432,a997dfbaf0c7b95700dedbfe0e704c8cab9f2a34,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-01 11:26:55 -0800, , zfs 0.6.0 rc14,,
5433,869f30f1aecbb9fbd03c43980beb2ee16975f2a4,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-01 11:24:54 -0800, , spl 0.6.0 rc14,,
5434,0c5493d47059f25ce9dbf20c9fe87655f55102a1,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-01 09:33:04 -0800,938, add module option way virtual box memory throw free memory calculation result txg_sync thread effectively spin waiting memory released even though lot memory system handle case adding module option largely virtual box user setting option disables free memory check allows txg_sync thread make progress default option disabled preserve current behavior however linux support direct memory reclaim doubtful throttling due perceived memory pressure ever good idea enable option default done enough real world testing convince ourselve unexpected side effect signed brian behlendorf behlendorf1 llnl.gov close 938,,
5435,1f7c30df8fe2ca778a83a83ba7f98de883881d42,rian Behlendorf <behlendorf1@llnl.gov>, 2013-02-01 09:18:45 -0800, , add module option commit 1eb5bfa introduced new tunable made available module option original patch overlooked signed brian behlendorf behlendorf1 llnl.gov,,
5436,6ef94aa67a48792d98b76152661743e42c23a03f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-31 12:59:39 -0800,174, fix tsd_get set race tsd_exit destroy tsd_exit tsd_destroy function remove entry hash bin without taking hash bin lock take table lock tsd_get tsd_set take hash bin lock allow maximum concurency result tsd_get tsd_set traversing hash bin list modified another thread happens hash value avoid add needed locking tsd_exit tsd_destroy signed brian behlendorf behlendorf1 llnl.gov close 174,,
5437,f52b31eaf0301feeb308fbc46f696eb44d0ae523,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-31 11:02:21 -0800, , honor character limit zpool status minor nit second line action message need upgrade pool support feature flag exceeds standard character limit fix moving word feature third line signed brian behlendorf behlendorf1 llnl.gov,,
5438,36f86f73f68548f46eb3229c8adf583d59fa9988,ed Bass <bass6@llnl.gov>, 2013-01-30 09:48:57 -0800,1250, fix mismatch header size layout system attribute layout created inconsistency may occur system attribute header sa_hdr_phys_t size variable sized attribute count stored layout inconsistency result following failed assertion return false splerror 11315 sa.c 1541 sa_find_idx_tab assertion is_sa_bonustype bonustype hdr is_sa_bonustype bonustype is_sa_bonustype bonustype hdr sa_layout_info failed bug originates snippet sa_find_sizes is_var_sz var_size p2roundup hdrsize sizeof uint16_t total full_space hdrsize sizeof uint16_t assumes current variable sized attribute stored current buffer account space needed store size sa_hdr_phys_t however next attribute spill need store blkptr_t end bonus buffer point spill block current attribute way blkptr_t relocated spill block since already accounted header size get inconsistency described  avoid record index last variable sized attribute prompted hdrsize increase reverse increase later determine attribute relocated spill block signed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 1250,,
5439,67629d0f082b1267fdddb23065813814ab55f57b,ed Bass <bass6@llnl.gov>, 2013-01-29 15:49:15 -0800,1240, fix rounding discrepancy sa_find_sizes rounding discrepancy exists sa_find_sizes calculate spill block need kicked result narrow size range belief must spill block allocated due discrepancy panic occurs hdl sa_spill null pointer dereferenced following reproducer bug isolated truncate 128m tmp tank zpool create tank tmp tank zfs create xattr tank fish perl print tank fish setfattr trusted.foo perl print x45 tank fish test result roughly following system attribute layout 176 byte standard byte name symbolic link target 100 byte xdr encoded nvlist xattr  317 byte total 317 dn_max_bonuslen 320 sa_find_sizes decides spill block needed round computing space requirement try switch spill block note able reproduce bug using combination symbolic link linux specific xattr dataset property issue technically linux specific may difficult impossible hit narrow size range needed reproduce platform fix discrepancy round running total sa_find_sizes byte boundary accounting since stored bonus possibly spill buffer make intent code clear explicitly assert key assumption expected alignment data whether spill occur signed matthew ahrens mahrens delphix.com signed brian behlendorf behlendorf1 llnl.gov close 1240,,
5440,89103a264343b0fed763a4ed0cc331b7233bef0d,dam H. Leventhal <ahl@delphix.com>, 2013-01-30 08:54:17 -0800,3447, illumos 3447 improve comment txg.c 3447 improve comment txg.c reviewed matthew ahrens mahrens delphix.com reviewed richard lowe richlowe richlowe.net reviewed garrett amore garrett damore.org reviewed richard elling richard.elling dey sys.com approved dan mcdonald danmcd nexenta.com reference illumos illumos gate http www.illumos.org issue 3447 ported brian behlendorf behlendorf1 llnl.gov,,
5441,de081a2ab4e911d2308b4f4055558f1d666f6b63,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-29 16:13:07 -0800,6, check kallsyms check configure time kernel built kallsyms support kernel config_kallsyms defined module still compile cleanly loadable really want catch early configure note require may safely defined signed brian behlendorf behlendorf1 llnl.gov close,,
5442,dbf763b39b232996f0d6bb0022e4446643c18e05,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-29 10:53:19 -0800,981, retire zpool_id infrastructure interest maintaining one udev helper give vdevs user friendly name zpool_id zpool_layout infrastructure retired superseded vdev_id incorporates previous functionality documentation new vdev_id helper configuration file vdev_id.conf found respective man page several useful example file installed etc zfs etc zfs etc zfs etc zfs etc zfs signed brian behlendorf behlendorf1 llnl.gov close 981,,
5443,79c6e4c44538414340a43c065f850d11cb0203af,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-29 10:35:02 -0800, , remove commit increased user space stack resolve certain stack overflow longer make sense worry single extra page might might part process stack ample headroom normal usage eliminating configure check also resolving following segfault intentionally occurs configure time may logged dmesg conftest 22156 segfault 7fbf18a47e48 error conftest 400000 1000 signed brian behlendorf behlendorf1 llnl.gov,,
5444,3cbfd259b709e3561b4b407d4a27eeec6dc201d0,ric Dillmann <eric@jave.fr>, 2013-01-28 23:48:11 +0100, , define be_in16 be_in32 lz4 compression new lz4 compression algorithm zfsonlinux zfs 9759c60 requires generic be_in16 be_in32 function added spl consumer take advantage signed brian behlendorf behlendorf1 llnl.gov,,
5445,9759c60f1a1503e48dc5c45a209c3edd5758319f,ric Dillmann <eric@jave.fr>, 2013-01-23 10:54:30 +0100,1217, illumos 3035 lz4 compression support zfs grub 3035 lz4 compression support zfs grub reviewed matthew ahrens mahrens delphix.com reviewed christopher siden delphix.com reviewed george wilson george.wilson delphix.com approved christopher siden csiden delphix.com reference illumos illumos gate http www.illumos.org issue 3035 http display illumos lz4 compression zfs patch slightly modified upstream illumos version compatible linux due limited stack space kernel lz4 workspace kmem cache used since using gcc also able take advantage gcc optimized __builtin_ctz function support grub dropped patch code available change need made upstream grub package lastly several hunk dead code dropped clarity include function visual studio specific hunk wrapped _msc_ver ported eric dillmann eric jave.fr signed brian behlendorf behlendorf1 llnl.gov close 1217,,
5446,ff5b1c8065c8a43add534892172f0aa5aba90f3d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-28 14:49:12 -0800, , quiet mkfs.ext2 output option quiet mkfs.ext2 output certain version e2fsprogs appear ignore result extra done message test output keep noise distracting direct stdout dev null signed brian behlendorf behlendorf1 llnl.gov,,
5447,2b7ab9d4d9b307c354795e2805ff313ddd01985d,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-28 14:15:39 -0800,1205, linux 2.6.26 compat lookup_bdev doubtful many people impacted commit 6c28567 accidentally broke zfs build 2.6.26 earlier kernel commit depends lookup_bdev function exists 2.6.26 exported 2.6.27 availability function critical wrapper introduced return err_ptr enotsup function defined effect causing zvol_is_zvol always fail 2.6.26 kernel turn mean vdevs always get opened concurrently good normal usage become issue using zvol vdev another pool case really using newer kernel anyway signed brian behlendorf behlendorf1 llnl.gov close 1205,,
5448,930b6fec210d828cb3755f8756dbbbf3001cccae,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-28 13:39:40 -0800,1113, stop using bin source zconfig.sh test zconfig.sh use bin source random directory file test lead unexpected test failure total size bin test system checked entirely possible larger target filesystem resolve issue create somewhat random collection file directory var tmp use average expect 5mb data worst case 20mb large enough interesting small enough always fit default test datasets signed brian behlendorf behlendorf1 llnl.gov close 1113,,
5449,14ee71efbc28086406bb255f2292b9535d845625,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-28 09:53:51 -0800,1231, use strerror strerror_r differ function used strerror_r instead strerror allowed error message directly copied buffer cause two issue linux two version strerror_r available xsi compliant version return int error code gnu specific version return char resulting error string int strerror_r int errnum char buf size_t buflen xsi char strerror_r int errnum char buf size_t buflen gnu recent version strerror_r annotated attribute cause following warning since upstream implementation cast result void warning ignoring return value strerror_r declared attribute wunused result cleanest way resolve problem use strerror make copy result buffer resolve issue instance strerror_r code base signed brian behlendorf behlendorf1 llnl.gov close 1231,,
5450,0936c3449fc81caeed49d23e1705a9decd964700,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-18 15:44:27 -0800,210, add module option cache aging implemented part default solaris kmem_cache behavior idea per cpu object accessed several second returned cache hand linux slab never move object back slab unless memory pressure system behavior configurable module option value bit mask following meaning 0x1 solaris style cache aging eviction enabled 0x2 linux style low memory eviction enabled method may safely enabled simultaneously default disabled never clear kmem cache aging around day one actually doe good however source numerous bug mind retiring entirely signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 1227 close 210,,
5451,ddc07fa57a2e002822ae30f2e18c5427f4e3eb74,hris Wedgwood <cw@f00f.org>, 2013-01-25 18:19:45 -0800,1244, avoid gcc werror maybe uninitialized warning explicitly set acl detail zero silence gcc sure set acl_count aclsize normally suppressing warning setting zero declaration time bad idea instance hard avoid fairly safe signed brian behlendorf behlendorf1 llnl.gov close 1244,,
5452,6772fb679a4205427a385d174359b2a5826da613,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-25 14:57:53 -0800,1238, use retire dmu_snapshot_id function introduced initial .zfs control directory implementation already existing doe exactly need dmu_snapshot_id function implemented racy http github.com zfsonlinux zfs issue 1215 issuecomment 12579879 signed brian behlendorf behlendorf1 llnl.gov close 1238,,
5453,ba43f4565aa151065dd2b64c1aab8f1051ce1295,ed Bass <bass6@llnl.gov>, 2013-01-24 14:19:03 -0800,1239, vdev_id improve keyword parsing flexibility vdev_id udev helper strictly requires configuration file keywords always anchored beginning line followed space character however user may prefer use indentation tab delimitation improve flexibility simply requiring keyword first field line signed brian behlendorf behlendorf1 llnl.gov close 1239,,
5454,e528c9b461df83eddc89c65d707d8674b4940314,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-24 13:54:58 -0800, , fix zconfig.sh partitioning error parted version 3.0 allow specify start end percentage 100 respectively result error location 100 outside device dev zd0 therefore change syntax end device signed brian behlendorf behlendorf1 llnl.gov,,
5455,563103decdca7c06850ca0909e5c8f8b4b0c0fe5,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-24 13:49:17 -0800, , fix test script error code exit command int term exit trap overwritting expected error code error code fix issue removing exit important preserve original error code failure easily noticed signed brian behlendorf behlendorf1 llnl.gov,,
5456,bf01b5e6161b4aa94c69792e50de4102a033be09,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-22 16:14:43 -0800,1230, add d_clear_d_op compatibility added d_clear_d_op helper function clear flag registered dentry d_op table required d_set_d_op issue warning dentry operation table already set .zfs control directory work properly must able override default operation table register custom .d_automount .d_revalidate callback signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 1230,,
5457,1305d33a4b0f8b10cea61989330cc5d059cfa7cb,ed Bass <bass6@llnl.gov>, 2013-01-22 14:33:01 -0800,97, drop l_rwlock caller zap_deref_leaf must careful drop leaf l_rwlock since function return lock held success caller drop lock correctly seems doe may block writer cause verify failure lock freed signed brian behlendorf behlendorf1 llnl.gov close 1215 close zfsonlinux spl 143 close zfsonlinux spl,,
5458,09a661e960df49f1256ba4c5ae15f6956d27df84,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-22 09:05:49 -0800,1226, fix zpl_revalidate null deref zpl_revalidate possible nameidata null kernel still accept parameter particular lookup_one_len call d_revalidate null nameidata resolve issue checking null nameidata case set flag signed brian behlendorf behlendorf1 llnl.gov close 1226,,
5459,ee93035378ff1f0769bb4216dc35057a2f14f9b9,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-18 14:11:40 -0800,1223, use s_d_op default dentry operation linux 2.6.37 right way register custom dentry operation use super block s_d_op field older kernel registered part lookup operation signed brian behlendorf behlendorf1 llnl.gov close 1223,,
5460,babf3f9b6d9294b0a88457941d60af5d9d7b744d,assimo Maggi <massimo@mmmm.it>, 2013-01-18 09:44:09 -0800,1220, fix zpool zvol deadlock commit fix lock inversion bdev bd_mutex first user dmu_objset_own later get acquired though dsl_prop_get spa_open spa_open_common without protection moving mutex release second use even acquisition lock protected erestartsys trick signed massimo maggi massimo maggi.eu signed brian behlendorf behlendorf1 llnl.gov close 1220,,
5461,84dd1f4f158c2da72f50d5ee5cd798197303ab23,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-17 11:33:24 -0800,795, remove functionality longer required zfs see commit zfsonlinux zfs since consumer add additional autoconf complexity must maintained function removed signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 795,,
5462,7973e464de4f93b6e669f7f04a316e013767224e,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-17 10:05:42 -0800,457, revert revert fix unlink xattr deadlock reverts commit effectively reinstating asynchronous xattr cleanup code linux change reverted testing careful contemplation convinced due commit longer required unfortunately deadlock described 1176 case considered mount occur unlink list znodes effectively random order safe reason safe originally revert change could guarantee vfs would always prune xattr leaf parent therefore cleanly resolve deadlock case need keep change spite xattr unlink performance penalty associated signed brian behlendorf behlendorf1 llnl.gov close 1176 issue 457,,
5463,7b3e34ba5a7ee8d0fda44d214f6f11eb16cdb26f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-15 16:41:09 -0800,795, fix zfs rollback mounted file system rolling back mounted filesystem open file handle cached dentries inodes never worked properly zol major issue linux provides easy mechanism module invalidate inode cache file system possible inode previous filesystem would get properly dropped cache rolling back new inode inode number would create collide existing cached inode ideally would trigger verify practice error handled would null reference luckily issue resolved sprucing existing solaris zfs_rezget functionality linux vfs way work file system rolled back cached inodes traversed refetched disk version cached inode exists disk core copy updated accordingly match object disk unhashed inode cache marked stale effectively make inode unfindable lookup allowing inode number immediately recycled inode accessible cached dentries subsequent dentry lookup reference stale inode result dentry invalidated invalidated dentry drop reference inode allowing safely pruned cache special care taken negative dentries since reference inode dentires invalidate based added dentry cache entry added last rollback invalidate prevent masking real file dataset two nice side effect fix remove dependency safely removed spl choose zfs_znode_alloc longer requires dentry passed effectively reverts portition code upstream counterpart dentry instantiated correctly linux zpl layer signed brian behlendorf behlendorf1 llnl.gov signed ned bass bass6 llnl.gov close 795,,
5464,f1a05fa11484d67161606fd1ecf50bf2abc25ced,ed Bass <bass6@llnl.gov>, 2013-01-14 13:59:14 -0800,1192, fix false enoent snapshot control dentries lookup snapshot control directory existing snapshot fail enoent earlier lookup failed snapshot created earlier lookup cause negative dentry cached never invalidated bug reproduced follows second succeed tank .zfs snapshot access tank .zfs snapshot file directory zfs snap tank tank .zfs snapshot access tank .zfs snapshot file directory remedy always invalidate cached dentries snapshot control directory since entry never exist disk significant performance penalty extra lookup signed brian behlendorf behlendorf1 llnl.gov close 1192,,
5465,94a9bb4709111f5fadb434cce1af6ccb6534e241,ed Bass <bass6@llnl.gov>, 2013-01-16 12:44:25 -0800,1210, fix quoting error unmount command misplaced single quote caused umount command fail syntax error unmounting snapshot .zfs snapshot control directory signed brian behlendorf behlendorf1 llnl.gov close 1210,,
5466,38145d612963d0a5b80017d5d1d49c1d4f9637c2,arik Horn <dajhorn@vanadac.com>, 2013-01-14 19:27:39 -0600,1172, ensure zfs diff print unicode safely stream_bytes library function used zfs diff explicitly cast byte input string unsigned character linux fprintf correctly escape octal doe mangle output signed brian behlendorf behlendorf1 llnl.gov close 1172,,
5467,b077fd4c4e16d372ef81035199e132687dbcf0e3,hristopher Siden <chris.siden@delphix.com>, 2013-01-14 10:29:55 -0800,3189, illumos 3189 kernel panic test 3189 kernel panic zfs test suite reviewed matthew ahrens mahrens delphix.com reviewed arne jansen sensille gmx.net approved dan mcdonald danmcd nexenta.com reference illumos illumos gate changeset 13818 e9ad0a945d45 http www.illumos.org issue 3189 ported brian behlendorf behlendorf1 llnl.gov,,
5468,ff80d9b142826c15fa84e3c4b9ef1795fd6e9485,rne Jansen <sensille@gmx.net>, 2013-01-14 10:26:31 -0800,1862, illumos 1862 incremental zfs receive fails sparse file 8pb 1862 incremental zfs receive fails sparse file 8pb reviewed matt ahrens matthew.ahrens delphix.com reviewed simon klinkert klinkert webgods.de approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos changeset 13789 f0c17d471b7a http www.illumos.org issue 1862 ported brian behlendorf behlendorf1 llnl.gov,,
5469,d4899f4747fd03be748fd1a589b9db5786fa1375,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-11 14:29:32 -0800,1193, kmem cache fix slab ageing soft lockup commit slightly reworked slab ageing code longer dependent linux delayed work queue interface good portability performance requires use on_each_cpu function execute function mean function executing interrupt context whereas scheduled normal process context mean need slightly careful locking interrupt handler reworked code possible holding skc skc_lock interrupted handle irq result deadlock soft lockup error unless careful detect contention avoid taking lock interupt handler patch doe alternately slightly conventionally could used prevent race entirely perfer avoid disabling interrupt much possible due performance concern absolutely penalty aging object magazine due contention signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov close zfsonlinux zfs 1193,,
5470,a94addd9749e8272664a2476460e75829626a465,atthew Ahrens <mahrens@delphix.com>, 2013-01-14 09:31:53 -0800,1136, illumos 3208 cross endian incorrect user group accounting 3208 moving zpool cross endian result incorrect user group accounting reviewed adam leventhal ahl delphix.com reviewed christopher siden chris.siden delphix.com approved richard lowe richlowe richlowe.net reference illumos illumos gate illumos changeset 13835 eea81edc4f14 http www.illumos.org issue 3208 ported brian behlendorf behlendorf1 llnl.gov close 627 close 1136,,
5471,e6f7d015028a21d81d9f119928221c69d03c95be,hristopher Siden <chris.siden@delphix.com>, 2013-01-11 16:42:50 -0800,3398, illumos 3397 3398 3397 zdb pool objnum output verbose 3398 zdb dump feature flag zap object reviewed matt ahrens matthew.ahrens delphix.com reviewed george wilson george.wilson delphix.com reviewed dan kimmel dan.kimmel delphix.com reviewed eric schrock eric.schrock delphix.com reviewed richard lowe richlowe richlowe.net approved dan mcdonald danmcd nexenta.com reference illumos illumos gate http www.illumos.org issue 3397 http www.illumos.org issue 3398 ported brian behlendorf behlendorf1 llnl.gov,,
5472,5990da81a798c087d323ba9104a6696bef2d275f,uri Pankov <yuri.pankov@nexenta.com>, 2013-01-10 14:25:47 -0800,1194, illumos 1884 3028 3048 3049 3060 3061 3093 1884 empty used field zfs space command 3028 zfs group user space print null instead numeric gid uid 3048 zfs user group space broken 3049 zfs user group space really filter result 3060 zfs user group space output tab delimited 3061 zfs user group space use specified field order 3093 zfs user group space noop reviewed garry mill gary_mills fastmail.fm reviewed eric schrock eric.schrock delphix.com approved richard lowe richlowe richlowe.net reference illumos illumos gate illumos changeset 13803 b5e49d71ff0e http www.illumos.org issue 1884 http www.illumos.org issue 3028 http www.illumos.org issue 3048 http www.illumos.org issue 3049 http www.illumos.org issue 3060 http www.illumos.org issue 3061 http www.illumos.org issue 3093 ported brian behlendorf behlendorf1 llnl.gov close 1194,,
5473,240245896aad46d0d41b0f9f257ff2abd09cb29b,uri Pankov <yuri.pankov@nexenta.com>, 2013-01-11 09:11:09 -0800,1337, illumos 1377 zpool status tell ddt entry 1337 zpool status tell ddt entry reviewed eric schrock eric.schrock delphix.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed george wilson gwilson zfsmail.com approved albert lee trisk nexenta.com reference illumos illumos gate illumos changeset 13432 d1ad8d106d64 http www.illumos.org issue 1337 ported brian behlendorf behlendorf1 llnl.gov,,
5474,844793c3cc6ebf8e850057e41497089131569be0,arrett D'Amore <garrett@damore.org>, 2013-01-11 09:04:23 -0800,1557, illumos 1557 assertion failed userland taskq_destroy 1557 assertion failed userland taskq_destroy reviewed richard lowe richlowe richlowe.net reviewed george wilson gwilson zfsmail.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos changeset 13597 3eac1e8e0f4c http www.illumos.org issue 1557 ported brian behlendorf behlendorf1 llnl.gov,,
5475,5c839890712c216aa657d8e3f5a25dca1469157d,art Coddens <bart.coddens@gmail.com>, 2013-01-11 08:54:18 -0800,2618, illumos 2618 arc.c mistypes comment 2618 arc.c mistypes comment reviewed jason king gmail.com reviewed josef sipek jeffpc josefsipek.net approved richard lowe richlowe richlowe.net reference illumos illumos gate illumos changeset 13721 5b51a16a186f http www.illumos.org issue 2618 ported brian behlendorf behlendorf1 llnl.gov,,
5476,e191b54ecfbd2af619d5cb4b3a0f298305c2145a,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-10 16:09:31 -0800,1004, use gcc wunused set variable available certain version gcc generate unrecognized command line option error message wunused set variable used unconditionally turn cause several autoconf test misdetect interface use wunused set variable autoconf test introduced commit b9c59ec8 address gcc 4.6 compatibility problem really need pas option version gcc known support therefore test updated use result existing determines gcc support option signed brian behlendorf behlendorf1 llnl.gov close 1004,,
5477,9566fb1a7b360c44e66475f933ebde106d9a0f0d,teven Burgess <sburgess@dattobackup.com>, 2012-12-28 16:53:18 -0500,1187, zfs send man page sync illumos move option one position list match illumos documentation move option one position refreshed match illumos documentation move option one position refreshed match illumos documentation add documentation found zfs receive zfs send belongs signed brian behlendorf behlendorf1 llnl.gov close 1187,,
5478,17836f0956b83a2850b5cf86af909abf4036758f,teven Burgess <sburgess@dattobackup.com>, 2012-12-28 16:36:10 -0500,1186, zfs receive man page sync illumos valid option vnfu one seem misplaced zfs send option remove signed brian behlendorf behlendorf1 llnl.gov close 1186,,
5479,a1e147eef8f61f3fcac742952d56b1f9d6c2703b,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-09 12:51:29 -0800,964, add sbin fsck.zfs helper fsck helper accomidate distribution expect able execute fsck filesystem type currently script doe nothing could extended act compatibility wrapper zpool scrub signed brian behlendorf behlendorf1 llnl.gov close 964,,
5480,87bdc45ccbf6f1d57a278c2026e60fc5f3af7598,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-09 11:56:37 -0800,1153, report realpath error rather reporting failure include passed mount point error number signed brian behlendorf behlendorf1 llnl.gov close 1153,,
5481,761394b3af152895ac68a970a91a4f8a917c547b,ed Bass <bass6@llnl.gov>, 2013-01-09 15:46:31 -0800,816, wait process linux 3.4 umh_wait_ constant renumbered particular meaning changed umh_wait_proc wait process complete umh_wait_exec wait exec process number call site used number instead constant name behavior expected kernel change one visible consequence change process accessing automounted snapshot received eloop error failed wait zfs.mount complete signed brian behlendorf behlendorf1 llnl.gov close 816,,
5482,8842263bd0f3c2f78c9cd52be8a74d4376396501,ed Bass <bass6@llnl.gov>, 2013-01-09 16:09:47 -0800, , wait process linux 3.4 umh_wait_ constant renumbered particular meaning changed umh_wait_proc wait process complete umh_wait_exec wait exec process number call site used number instead constant name behavior expected kernel change signed brian behlendorf behlendorf1 llnl.gov,,
5483,42b3ce622f53001d819e6c8eabe4576e6dd38913,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-09 15:26:46 -0800,582, check zlib_inflate zlib_deflate check configure time kernel built zlib support enabled support may either configured module builtin kernel missing build fail best catch early signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 582,,
5484,1c50c992bafd96773dc3950d382a89806df8cc9c,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-09 11:09:06 -0800,816, revert avoid eloop auto mounted snapshot reverts commit accidentally introduced regression .zfs snapshot directory updated code still doe correctly mount requested snapshot update vfsmount reference original dataset vfsmount result snapshot visible signed brian behlendorf behlendorf1 llnl.gov issue 816,,
5485,4cec9b2dc79c8132ef9093921a0c14529cde775f,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-08 16:16:46 -0800, , reduce __zio_execute stack usage kernel space related need careful overrunning stack kernel space however user space already allowing slightly larger stack stack usage optimization required signed brian behlendorf behlendorf1 llnl.gov,,
5486,050cd84e628e5d827a0b345cda12b97253fccd37,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-07 14:09:09 -0800,204, linux compat 3.7.1 on_each_cpu kernel require include linux irqflags.h header check otherwise function defined prototype misdetected four argument version change actually include linux interrupt.h turn includes linux irqflags.h generic possible additionally passing null function result gcc error on_each_cpu macro executes unconditionally make test robust pas dummy function signed brian behlendorf behlendorf1 llnl.gov close 204,,
5487,c1cdd9900b7b676fd1d1952125a5acd3435db5d7,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-08 10:59:05 -0800,778, merge branch feature flag feature flag support zfs ported illumos minimal compatibility change made required accomidate linux detailed description feature flag see original proposal zfs discus conceptually similar linux ext 234 style feature flag http pipermail freebsd 2011 may 011568.html note branch update default pool version new pool 5000. version pool may still created compatibility solaris using version option zpool create version ... existing pool must manually upgraded using zpool upgrade zpool upgrade ... signed brian behlendorf behlendorf1 llnl.gov close 778,,
5488,1eb5bfa3dcdaecb19543d9df13131374a7a42947,eorge Wilson <george.wilson@delphix.com>, 2012-12-21 14:57:09 -0800,1137, illumos 3145 3212 3145 single copy arc 3212 ztest race condition vdev_online spa_vdev_remove reviewed matt ahrens matthew.ahrens delphix.com reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed justin gibbs gibbs scsiguy.com approved eric schrock eric.schrock delphix.com reference illumos gate commit illumos changeset 13840 97fd5cdf328a http www.illumos.org issue 3145 http www.illumos.org issue 3212 ported brian behlendorf behlendorf1 llnl.gov close 989 close 1137,,
5489,753c38392ddff9d3cf140bb4d28f3bfba52c92d2,atthew Ahrens <mahrens@delphix.com>, 2012-12-23 15:57:14 -0800,3104, illumos 3104 eliminate empty bpobjs 3104 eliminate empty bpobjs reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed christopher siden chris.siden delphix.com reviewed garrett amore garrett damore.org approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos changeset 13782 8f78aae28a63 http www.illumos.org issue 3104 ported brian behlendorf behlendorf1 llnl.gov,,
5490,91579709fccd3e55a21970742b66c388fb1403db,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-17 16:23:27 -0800, , fix __zio_execute asynchronous dispatch save valuable stack zio made asynchronous tgx_sync_thread context pool initialization see commit 2fac4c2 original patch motivation unfortuantely change made feature flag broke logic causing __zio_execute dispatch infinitely called pool initialization commit refines existing logic specificly target two case care signed brian behlendorf behlendorf1 llnl.gov,,
5491,ea0b2538cd5967fcdf26b7b7c01859a060fef3e3,eorge Wilson <george.wilson@delphix.com>, 2012-12-14 16:28:49 -0800,3349, illumos 3349 zpool upgrade bump disk version number 3349 zpool upgrade bump disk version number leaf core version reviewed adam leventhal ahl delphix.com reviewed christopher siden chris.siden delphix.com reviewed matt ahrens matthew.ahrens delphix.com reviewed richard lowe richlowe richlowe.net approved dan mcdonald danmcd nexenta.com reference illumos illumos gate http www.illumos.org issue 3349 ported brian behlendorf behlendorf1 llnl.gov,,
5492,29809a6cbae9869ca6ee026337981b2c9771650a,atthew Ahrens <mahrens@delphix.com>, 2012-12-14 16:13:40 -0800,3086, illumos 3086 unnecessarily setting async 3086 unnecessarily setting async destroyed datasets reviewed christopher siden chris.siden delphix.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos changeset 13776 cd512c80fd75 http www.illumos.org issue 3086 ported brian behlendorf behlendorf1 llnl.gov,,
5493,b9b24bb4ca45f2d903efadba44d10dfd182f62ac,hristopher Siden <chris.siden@delphix.com>, 2012-12-14 15:00:45 -0800,2762, illumos 2762 zpool command better support feature flag 2762 zpool command better support feature flag reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate http www.illumos.org issue 2762 ported brian behlendorf behlendorf1 llnl.gov,,
5494,3bc7e0fb0f3904eaf41e0b9768ebe2d042ae98aa,eorge Wilson <george.wilson@delphix.com>, 2012-12-14 12:38:04 -0800,939, illumos 3090 3102 3090 vdev_reopen reguid cause vdev treated corrupt 3102 vdev_validate may read wrong label reviewed matthew ahrens mahrens delphix.com reviewed christopher siden chris.siden delphix.com reviewed garrett amore garrett damore.org approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos changeset 13777 b1e53580146d http www.illumos.org issue 3090 http www.illumos.org issue 3102 ported brian behlendorf behlendorf1 llnl.gov close 939,,
5495,5ac0c30a94a0804080f0a89c9b7a31f8d4ab5708,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-14 12:24:04 -0800,997, revert temporarily disable reguid test reverts commit since feature flag merged apply real upstream fix illumos signed brian behlendorf behlendorf1 llnl.gov issue 997,,
5496,9ae529ec5dbdc828ff8326beae58062971d74b2e,hristopher Siden <chris.siden@delphix.com>, 2012-12-13 15:24:15 -0800,2747, illumos 2619 2747 2619 asynchronous destruction zfs file system 2747 spa versioning zfs feature flag reviewed matt ahrens mahrens delphix.com reviewed george wilson gwilson delphix.com reviewed richard lowe richlowe richlowe.net reviewed dan kruchinin dan.kruchinin gmail.com approved eric schrock eric.schrock delphix.com reference illumos illumos gate illumos illumos gate illumos changeset 13700 2889e2596bd6 http www.illumos.org issue 2619 http www.illumos.org issue 2747 note grub specific change ported change must made linux grub package ported brian behlendorf behlendorf1 llnl.gov,,
5497,1c7b3eaf87492e875d7ad05f183e98fa306e48c2,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-08 09:42:49 -0800, , rhel 6.4 compat fallocate upstream kernel define introduced fallocate function moved file_operations structure therefore spl code assumed defined safe use f_ops fallocate unfortunately rhel6.4 kernel backported define fallocate change address compatibility issue helper function added properly detect interface available signed brian behlendorf behlendorf1 llnl.gov,,
5498,15313c5e1866e81e2f4a30d2c50b43b5435e547a,ominik Honnef <dominikh@fork-bomb.org>, 2013-01-04 20:09:20 +0100,1177, fix duplicate word zpool.8 remove duplicate word zpool.8 man page signed brian behlendorf behlendorf1 llnl.gov close 1177,,
5499,462ee8e3f3f1e48c857d070fa5abaf4a72246344,ill Rouesnel <w.rouesnel@gmail.com>, 2012-12-28 01:44:16 +1100,1167, allow fake mount succeed non legacy filesystems mountall debian depends able pas parameter mount specifies fake mount update mtab currently mount.zfs fail request passed zfsutil patch allows fake mount non legacy filesystem succeed manner remount doe thus enabling mountall work correctly signed brian behlendorf behlendorf1 llnl.gov close 1167,,
5500,37f000c5aa76613e644cf3e5b1ec7bd2df6f7451,ed Bass <bass6@llnl.gov>, 2012-12-26 14:56:41 -0800,950, fix gcc array subscript bound warning debug build certain gcc version flag array bound warning code dnode_sync.c else int assert dn_next_nblkptr txgoff dnp dn_nblkptr blkptrs losing better unallocated dn_next_nblkptr txgoff dnp dn_nblkptr assert bp_is_hole dnp dn_blkptr usage fact safe since assert ensures index doe exceed maximum possible number block pointer however gcc determine assignment dn_next_nblkptr txgoff fall within array bound issue warning avoid initialize zero make gcc happy skip element dn_next_nblkptr txgoff loop body since dnode contains block pointer overhead negligible signed brian behlendorf behlendorf1 llnl.gov close 950,,
5501,e44056fcb644496b4dee4847164afe0bb2e04e5b,rian Behlendorf <behlendorf1@llnl.gov>, 2013-01-07 10:54:56 -0800,1175, merge branch io_schedule currently zfs show time top wait proc pid stat blkio_ticks using io_schedule instead schedule zio_wait cv_wait correct way fix  signed brian behlendorf behlendorf1 llnl.gov close 1158 close 1175,,
5502,72938d6905d9dcd60f7a5ff68ae469e74c248228,att Johnston <matt@fugro-fsi.com.au>, 2012-12-21 10:40:20 +0800, , use cv_wait_io account iowait update zio_wait use cv_wait_io ensure iowait time properly accounted signed brian behlendorf behlendorf1 llnl.gov,,
5503,72f53c5694bfd57b56e79fc3b7c4390bce4072d2,att Johnston <matt@fugro-fsi.com.au>, 2012-12-21 10:15:34 +0800, , revert part log longer zio_delay_max default reverts commit originally introduced debug occasional slow would complete eventually observed take several 100 second root cause issue cfq scheduler certain condition excessively delay issued device issue mitigated somewhat commit ensures elevator get changed even style device change way harmful doe conflict required change properly account wait time linux doe export function must instead rely io_schedule via cv_wait_io additional debugging information added delay event intentionally left place signed brian behlendorf behlendorf1 llnl.gov,,
5504,46a75aadb7c08085a4ad2e55dcf5b6fb387c1253,att Johnston <matt@fugro-fsi.com.au>, 2012-12-21 10:29:16 +0800,206, add cv_wait_io account time linux task waiting call io_schedule function proper accounting solaris cv_wait function provides way specify waiting therefore cv_wait_io introduced signed brian behlendorf behlendorf1 llnl.gov close 206,,
5505,15f9d4e1c2b0ee26546e79d599df1b2adc2e5026,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-20 11:02:24 -0800, , zfs 0.6.0 rc13,,
5506,02d25048d293a44001de6967872476f7d78e2397,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-20 11:01:47 -0800, , spl 0.6.0 rc13,,
5507,65d56083b4617a4cade0cff68cbbaf68114169d6,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-19 13:51:44 -0800,612, fix zpool zvol lock inversion deadlock one case taken bdev bd_mutex lock linux __blkdev_get function call fop open bdev bd_mutex lock held must somehow still safely acquire avoid potential lock inversion deadlock preemptively try take normally contended safe spa_open_common handle case caller already hold contended risk lock inversion block waiting lock luckily __blkdev_get function allows return erestartsys result bdev bd_mutex dropped reacquired fop open called process repeated safely lock acquired signed brian behlendorf behlendorf1 llnl.gov signed jorgen lundman lundman lundman.net close 612,,
5508,d5446cfc528262ae3a41da31a8524c9d2e793f45,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-20 09:55:47 -0800, , revert remove tsd zfs_fsyncer_key reverts commit back original code fsync performance regression addressed signed brian behlendorf behlendorf1 llnl.gov,,
5509,23e3c743f6e36768b97234c3de18f4682111e6c3,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-19 09:47:25 -0800, , refresh author author file getting stale refresh content using author listed git commit log signed brian behlendorf behlendorf1 llnl.gov,,
5510,5b2fdbb69cedd22fcb489b0cc28d36ee08992c31,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-19 09:37:24 -0800, , refresh author author file getting stale refresh content using author listed git commit log signed brian behlendorf behlendorf1 llnl.gov,,
5511,dd5b6d96f1952df2f99486fbf0d665a43e92bbe3,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-19 09:28:18 -0800, , remove changelog changelog retired long ago git commit log authoritative avoid confusion remove changelog signed brian behlendorf behlendorf1 llnl.gov,,
5512,840222eb0bb519a55c6aa2bfe550ff9d213b272c,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-19 09:22:07 -0800, , remove changelog changelog retired long ago git commit log authoritative avoid confusion remove changelog signed brian behlendorf behlendorf1 llnl.gov,,
5513,31f2b5abdf95d8426d8bfd66ca7f62ec70215e3c,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-13 12:21:11 -0800,174, remove tsd zfs_fsyncer_key understanding zfs_fsyncer_key tsd added performance omtimization reduce contention zl_lock zil_commit issue manifested long 100 fsync system call time fsync heavy workload however linux seeing contention originally described therefore removing code order ween dependence tsd original performance issue reappears linux revisit fixing without resorting tsd leaf one small zfs tsd consumer cleanly removed code able shed spl tsd implementation entirely signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 174,,
5514,034f1b331e2c152e8e8954d715fa9a84f7b48d64,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-18 17:02:27 -0800,859, fix panic due buffering helper may return successfully proc handler chance execute catch case wait second verify updated non symbol_poison value signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 699 close zfsonlinux zfs 859,,
5515,84daaddedbfc9cf4bd1490d8a6f4b2967051e308,rakash Surya <surya1@llnl.gov>, 2012-12-14 16:16:35 -0800,1149, set elevator device despite vdev_wholedisk current state udev devicer mapper device make difficult construct mapping partition underlying device example dev directory following content dev dev dev dev dev immediately apparent completely separate device partition real device intermixed contrast scsi device would appear dev dev sda dev sda1 dev sdb dev sdb1 one immediately determine two device sda sdb containing single partition lack predictable consistent mapping device device partition make difficult user space process device way doe scsi device result zfs utility partition device instead set vdev_wholedisk label treat partition side effect even zfs sole ownership device scheduler modified treated partition change add exception device allowing elevator modified even though vdev_wholedisk property set signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1149,,
5516,6c2856726fbae681649930d9620d9087080e58fc,orgen Lundman <lundman@lundman.net>, 2012-12-17 10:33:57 +0900,1131, fix using zvol slog device original zol port vdev_uses_zvols function disabled could properly implemented prevented zpool use zvol slog device patch implement missing functionality adding zvol_is_zvol function zvol.c given full path device lookup device verify major number registered zvol major number system match know device zvol signed brian behlendorf behlendorf1 llnl.gov close 1131,,
5517,30196bfd42567a9bc3fccac8650dc2cd9f0f7c0a,ichard Yao <ryao@cs.stonybrook.edu>, 2012-12-17 09:43:45 -0800, , use kernel_dir env var makefile.am gentoo user reported issue build system would attempt recurse kernel source tree kernel_dir set environment kernel_dir environment variable used kernel source non standard location necessary stop relying prevent issue http bugs.gentoo.org show_bug.cgi 433946 signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5518,5e6320cd1262de6eada39751807c31c059517d01,assimo Maggi <massimo@mmmm.it>, 2012-12-16 14:33:51 +0100,1147, fix get set user group quota prop via numeric fix setting getting user group quota property numeric identifier support accidentally disabled original port applying have_idmap wrapper macro broadly fix obtained moving ifdef have_idmap exclude part code really need idmap zfs get set user group quota 1000 work expected signed massimo maggi massimo mmmm.it signed brian behlendorf behlendorf1 llnl.gov close 1147,,
5519,fd7fd5ebcf6cceb107dd27592a9bd7d60f93738f,ichard Yao <ryao@cs.stonybrook.edu>, 2012-12-16 00:35:16 -0500, , use kernel_dir env var makefile.am gentoo user reported issue build system would attempt recurse kernel source tree kernel_dir set environment kernel_dir environment variable used kernel source non standard location necessary stop relying prevent issue http bugs.gentoo.org show_bug.cgi 433946 signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5520,8780c53961e668211682d40ad36946294c3145d8,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-11 16:58:44 -0800,1140, update inode dirtied revert portion commit d3aa3ea always resulted update mmap file closed change accidentally resulted unexpected ctime update upset tool like git always horrible hack happy never make tagged release right fix something initially resisted worried additional overhead however hindsight overhead bad feared patch implemented sop dirty_inode callback unsurprisingly called inode dirtied leverage callback keep znode strictly sync inode however going slowly avoid introducing new unexpected issue updating atime mtime ctime cover callpath concern update_time dirty_inode signed brian behlendorf behlendorf1 llnl.gov close 764 close 1140,,
5521,bd192c4f4831fae78f9dc3264b8c1a9b6dc85307,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-14 11:45:41 -0800, , update vdev.rules .gitignore commit 2957f38 renamed vdev.rules vdev.rules failed update .gitignore file reflect change signed brian behlendorf behlendorf1 llnl.gov,,
5522,7afcf5b1da83549bfba70a61fae7a00eaa63c2b0,ed Bass <bass6@llnl.gov>, 2012-12-12 15:55:51 -0800,816, avoid eloop auto mounted snapshot ensure path member pointer associated newly mounted snapshot return otherwise function may called repeatedly leading incorrect eloop error return problem observed many level symbolic link error user space command accessing unmounted snapshot .zfs snapshot directory signed brian behlendorf behlendorf1 llnl.gov close 816,,
5523,2ae10319624869eef0954cdfcdb6f5e33cba2e09,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 10:15:12 -0800,1053, linux 3.7 compat linux kernel commit d8e794d accidentally broke delayed work apis non gpl caller apis schedule delayed work item still available caller longer possible initialize delayed work item cautiously optimistic could get exported caller upstream kernel frankly compatibility code use kernel interface always problematic therefore patch abandon direct use linux kernel interface favor new delayed taskq interface provides roughly functionality delayed work queue stable interface control signed brian behlendorf behlendorf1 llnl.gov close 1053,,
5524,18e0c500a759e0131b446bfe685cd1969656e7f5,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-12 10:45:11 -0800,199, merge branch taskq signed brian behlendorf behlendorf1 llnl.gov close 199,,
5525,eb0be2ed46d3f0eb01378458f421a88798608592,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 13:53:25 -0800, , removed check consumer kernel delayed work queue shifted rely taskq implementation compatibility code removed new caller need functionality use taskq interface delayed work item signed brian behlendorf behlendorf1 llnl.gov,,
5526,33e94ef1dd2678e28a5fbdb80f4ce35fd8c85974,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 13:40:03 -0800, , kmem cache use taskq async allocation shift asynchronous allocation use taskq interface allows abandon kernel delayed work queue interface compatibility code requires code never actually used delay functionality done way leverage existing compatibility code required thread context perform allocation thing clever change take advantage preallocated task queue entry avoid memory allocation signed brian behlendorf behlendorf1 llnl.gov,,
5527,a10287e00d13c4c4dbbff14f42b00b03da363fcb,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 10:53:46 -0800, , kmem cache use taskqs ageing shift cache magazine ageing functionality new delayed taskq interface allows abandon kernel delayed work queue interface compatibility code requires however delayed taskq interface doe allow schedule task specfic cpu ageing code slightly reworked magazine ageing delay directly linked cache ageing function spl_cache_age function invokes on_each_cpu order run cpu block waiting complete promptly reclaims free slab restructing code primary goal think new code far understable maintainable also help minimize magazine thrashing free slab immediately released magazine aged signed brian behlendorf behlendorf1 llnl.gov,,
5528,296a8e596dac344cf3af5e7f2dff5be12c979d80,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 11:01:08 -0800, , kmem cache may always sleep code originally written went overboard allowed possibility creating cache atomic context practice caller ever make sense since cache design long lived data structure prevent abuse function going forward removing code supported handle atomic context allocator updated use km_sleep might_sleep debug macro added immediately detect atomic caller signed brian behlendorf behlendorf1 llnl.gov,,
5529,a5a98e72605c071f94b9fdc4bf1811f8ed8d7f32,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 15:27:05 -0800, , splat taskq front reduce stack frame slightly increased size taskq_ent_t debugging enabled pushed taskq front splat test frame size limit resolve dynamically allocate taskq_ent_t structure part heap instead stack function error frame size 1648 byte larger 1024 byte signed brian behlendorf behlendorf1 llnl.gov,,
5530,94ff5d38e30e5c79a45099413ac642c94b55a619,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-10 15:24:39 -0800, , splat taskq order reduce stack frame slightly increased size taskq_ent_t debugging enabled pushed taskq order splat test frame size limit resolve dynamically allocate taskq_ent_t structure part heap instead stack function error frame size 1680 byte larger 1024 byte signed brian behlendorf behlendorf1 llnl.gov,,
5531,3238e717631c68f6f44907b46733f4ae70452d3b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-06 15:42:32 -0800, , splat taskq cancel add test case add test case taskq_cancel_id verify working properly like taskq delay start dispatching 100 task however time task use taskq_dispatch run immediately use idea create busy taskq active pending delayed task item successfully dispatched test begin randomly canceling known task second randomly canceling task sleeping millisecond task canceled may already run still pending list may currently executed worker thread idea ensure catch subtle race condition non canceled task completed cross check number task ran number task successfully canceled additionally verify taskq_cancel_id function never block longer needed time bounded longest run time task dispatched signed brian behlendorf behlendorf1 llnl.gov,,
5532,2f357826208085bacce9e0a29972c2e5728d5420,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-06 14:52:35 -0800, , splat taskq delay add test case add test case verify working properly test dispatch 100 task taskq random expiration time spread second task expires get executed worker thread verifies run correct time delayed task executed double check dispatched task successful signed brian behlendorf behlendorf1 llnl.gov,,
5533,d9acd930b52503582425c6398fc8dbc1d7d4a01b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-06 12:38:19 -0800, , taskq delay cancel functionality add ability dispatch delayed task taskq desired behavior task queued executed worker thread expiration time reached achieve two new function added  function behaves exactly like taskq_dispatch however take third expire_time argument caller pas desired time task executed absolute value jiffy task guarenteed run time may run slightly latter worker thread busy taskq_cancel_id given task attempt cancel task get executed primarily useful canceling delay task used canceling previously dispatched task three possible return value task found canceled executed enoent task found either already run invalid task supplied caller ebusy task currently executing may canceled function block task completed taskq_wait_all taskq_wait_id function renamed taskq_wait_all clearly reflect actual behavior curreny used splat taskq regression test taskq_wait_id historically difference function taskq_wait passed task function would block lower task executed semantically correct could slow particularly delay task submitted better accomidate delay task function reimplemnted block passed task completed actually fairly low risk change reason new zfs caller make use new interface little common code changed support new function existing taskq_wait implementation changed slightly refactored newly optimized taskq_wait_id implementation never used zfs accidentally introduce new bug note functionality doe exist illumos taskqs signed brian behlendorf behlendorf1 llnl.gov,,
5534,aed8671cb0bfc18f6cd034ecad2e9cf49536d965,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-06 13:04:27 -0800, , taskq style remove define wrapper taskq implementation originally written wrapped api function define done preventative measure ensure taskq symbol never conflicted existing kernel symbol however practice taskq symbol never conflicted major conflict occured kmem cache api since added layer obfuscation never bought anything taskq removing signed brian behlendorf behlendorf1 llnl.gov,,
5535,472a34caff3bc8b0f65e7cdb4b5960b0e2d616c2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-06 12:57:42 -0800, , taskq style convert space soft tab update taskq implementation conform style used throughout rest code functional change commit signed brian behlendorf behlendorf1 llnl.gov,,
5536,794f145bf9f39a0aad44ae66d379104a3dcd8984,teven Johnson <sjohnson@sakuraindustries.com>, 2012-12-04 08:41:10 +0800, , splat linux shrinker fix fail safe ensure fail safe reset successive test signed brian behlendorf behlendorf1 llnl.gov,,
5537,ca072ee70f7beccd33c0363dc7951a10492b4782,teven Johnson <sjohnson@sakuraindustries.com>, 2012-12-03 16:16:17 +0800,182, splat linux shrinker fix race condition ensure test thread block shrinker completed work done putting test thread sleep waking time shrinker callback run shrinker size drop zero time test allowed proceed signed brian behlendorf behlendorf1 llnl.gov close close 125 close 182,,
5538,576ec6aac4a4a15754892824643cedb30d652c39,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-07 09:53:55 -0800, , splat command verbose behavior splat command take verbose option set print internal debug log every test helpful tracking common failure rare failure volume log data distracting therefore verbose option adjusted allow printing debug log failure legacy behavior still available specifying verbose option twice example splat never print debug log splat print debug log failure splat always print debug log signed brian behlendorf behlendorf1 llnl.gov,,
5539,e4d89e9cfc605dc59df57d89818868e033e59cfb,ichard Yao <ryao@cs.stonybrook.edu>, 2012-12-08 08:38:13 -0500,1138, switch km_sleep km_pushpage writes zvols invoke zil called allocates memory using km_sleep triggering warning switch km_pushpage silence warning see commit additional detail signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1138,,
5540,53c7411919a64d6f0889aa0d6974610f6cd35744,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-05 13:00:49 -0800,457, revert fix unlink xattr deadlock reverts commit longer needed due change force xattr znodes hold reference parent ensures prune_icache never attempt evict parent child concurrently effectively prevents deadlock condition ever occuring therefore safely revert back upstream synchronous cleanup code nice keep code base closer upstream resolve performance issue introduced original deadlock fix signed brian behlendorf behlendorf1 llnl.gov close 457,,
5541,d3aa3ea96e02547166563bbd60bc8581567a140a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-04 12:11:02 -0800,764, preserve inode mtime ctime .writepage updating file via mmap preserve mtime ctime updated page made writable generic callback importantly preserving exact time add missing call sa_bulk_update ensures znode modification written disk part transaction without inode may mistaken rollback previous disk znode state additionally mmap znodes explicitly set atime mtime ctime close using date value inode critical writepage may occur close close need ensure value correct original patch richard yao ryao signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 764,,
5542,9b88fa165f320d9fc19d965f0f918511fca460a9,teven Johnson <sjohnson@sakuraindustries.com>, 2012-12-05 11:39:32 +0800,130, splat taskq front fix race taskq front test race condition task race complete due incorrectly calculated set delay factor task win actually finish first verification order completion fail delay calculated order task completion take account terminal line table factor cause task queue finish sooner expected accumulated error root cause task racing complete first change actual table look like commented 130 changed table comment correctly reflect test factor timing needed individual task delay factor task every average reduced 100ms 50ms half duration test make remaining raciness likely cause failure cause test fail simplified delay factor logic using table look instead switch added task started message possible see order task started moved task completed message inside spinlock message truly reflects absolute order completion guaranteed spinlock signed brian behlendorf behlendorf1 llnl.gov close 130,,
5543,53c2ec1d1b3ffdc90c1c6516558e6b4da77c2446,orgen Lundman <lundman@lundman.net>, 2012-11-29 14:56:07 +0900,1118, fix zpool create segfault due bad syntax incorrect syntax never cause segfault case listing multiple comma delimited option triggered problem example zpool create ashift listsnaps patch resolve issue wrapping call use hdr null test signed brian behlendorf behlendorf1 llnl.gov close 1118,,
5544,2957f38d78d376431ab18d2f576099d682d7a711,ed Bass <bass6@llnl.gov>, 2012-11-29 11:08:37 -0800,981, vdev_id support device link alias add vdev_id feature map device name based already defined udev device link increase odds vdev_id run rule depends increase vdev.rules rule number 69. change vdev_id provides functionality analogous zpool_id zpool_layout paving way retire tool defined alias take precedence topology derived name two naming method otherwise coexist example one might name drive jbod sas_direct topology naming internal l2arc device alias example following line vdev_id.conf result creation link dev disk vdev pointing target device link specified third field vdev name fully qualified base name device link alias dev disk wwn alias wwn also perform minor vdev_id cleanup removal unused command line option signed brian behlendorf behlendorf1 llnl.gov close 981,,
5545,e89260a1c8851ce05ea04b23606ba438b271d890,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-29 16:10:03 -0800,671, directory xattr znodes hold reference parent unlike normal file directory znodes xattr znode guaranteed single parent therefore take refernce parent provided create time cache additionally take care cache subsequent zfs_zaccess parent provided optimization allows avoid needing zfs_zget setting selinux security xattr create path critical hash lookup directory deadlock since locked call also moved zpl layer ensure create required xattrs performed create otherwise run risk deadlocking open create ideally security xattr fully constructed new inode unlocked however would require far extensive change zfs change may also benefitial side effect ensuring xattr directory znodes evicted cache normal file directory znodes due extra reference signed brian behlendorf behlendorf1 llnl.gov close 671,,
5546,053678f3b0572db442551dfa547dea939f45c96b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-12-03 12:01:28 -0800,187, handle error linux 3.6 compatibility code added commit bcb1589 entirely new vn_remove implementation added function properly handle error would result panic patch address issue returning error caller signed brian behlendorf behlendorf1 llnl.gov close 187,,
5547,645fb9cc214c79c77378dd1e1fd2e3ef668bc848,urbo Fredriksson <turbo@bayour.com>, 2012-02-04 21:08:53 +0100,493, implemented sharing datasets via smb using libshare add initial support smbshare option using existing libshare infrastructure implementation relies usershares samba version 3.0.23 required signed brian behlendorf behlendorf1 llnl.gov close 493,,
5548,b84412a6e8a1d22780a8203e00049c6e43efacac,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-30 15:46:30 -0800,194, linux compat 3.7 kernel_thread preferred kernel interface creating thread kthread_create long time however several splat test still use legacy kernel_thread function finally dropped mostly update condvar rwlock splat test use modern interface frankly something done long time ago signed brian behlendorf behlendorf1 llnl.gov close 194,,
5549,4588bf57017f5d2693cd7b3f763640fe8cfe5909,yril Plisko <cyril.plisko@mountall.com>, 2012-11-30 23:13:28 +0200,566, make zpool attach ashift ... actually work commit missed update getopt call delivering rest commit add getopt signed brian behlendorf behlendorf1 llnl.gov issue 566,,
5550,c3275b56a1470ed255441df6ff105d0c3c095d8b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-30 11:23:38 -0800,1120, add load_nvlist error handling add missing error handling load_nvlist good reason need fatal caller load_nvlist correctly handle error condition preferable error returned allow zpool import safely attempt rollback previous txgs looking good one signed brian behlendorf behlendorf1 llnl.gov close 1120,,
5551,c372b36e3eba18d1a8747b8375e3e7c049d40c89,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-06 11:33:24 -0800,1077, allow gpt efi vdevs root pool commit 57a4edd allows bootfs property set pool however many zpool command still prevent using efi labeled device root pool example zpool attach rpool dev sda dev sdb label sdb efi labeled device supported root pool root device non solaris build linux disable error signed brian behlendorf behlendorf1 llnl.gov close 1077,,
5552,004324ecc646ae909e721dc9eda8b1f57e9db71b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-30 10:31:54 -0800,1101, disable page allocation warning super block due slightly increased size zfs super block caused 30315d2 allocation warning allocation size still small super block rarely allocated suppress warning signed brian behlendorf behlendorf1 llnl.gov issue 1101,,
5553,56a517ae3ab9b2d848a5e671d276396970ed4718,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-29 20:19:25 -0800,162, verify linux source directory exists previously check performed configure attempting autodetect kernel source directory also handle case linux provided obviously wrong way catch error invoking make compiling source incorrect autoconf result signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux spl 162,,
5554,251677e98fd41170a885095626a9247d609661b0,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-29 19:26:19 -0800,162, verify linux source directory exists previously check performed configure attempting autodetect kernel source directory also handle case linux provided obviously wrong way catch error invoking make compiling source incorrect autoconf result signed brian behlendorf behlendorf1 llnl.gov close 162,,
5555,38b344d22a80a173e50ab992f81b57b872e6da7c,yril Plisko <cyril.plisko@mountall.com>, 2012-11-29 15:40:26 +0200,1119, vdev_id fails handle complex device topology expanding positional parameter shell requires non single digit enclosed brace topology non trivial number positional parameter generated internally vdev_id script using set ... easily cross single digit limit vdev_id fails generate link signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 1119,,
5556,a6ef9522eae9be2c2cb40731a8afb0a90f05d7ae,ed Bass <bass6@llnl.gov>, 2012-09-19 11:44:12 -0700,870, make vdev_id posix compatible full bash may available environment udev helper run initial ramdisk avoid breakage case remove use bash specific feature variable array declare keyword vdev_id script signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 870,,
5557,f74a147c022f79916e8525c2c16b1603f91202aa,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-27 14:02:49 -0800,1109, fix null deref zvol_alloc fails zvol_alloc fails set null dereferenced avoid entirely objset line moved success block original patch jorgen lundman lundman lundman.net signed brian behlendorf behlendorf1 llnl.gov close 1109,,
5558,30315d237bb23226476b348bc591589c80597351,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-27 13:32:57 -0800,1101, increase zfs_obj_mtx_sz 256 increasing limit cost 6144 byte memory per mounted filesystem small price pay accomplishing following allows 256 way concurreny performing lookup help performance large number process minimizes likelyhood encountering deadlock described issue 1101. vmalloc strictly honor __gfp_fs still remote chance deadlock see zfsonlinux spl 043f9b57 commit signed brian behlendorf behlendorf1 llnl.gov close 1101,,
5559,043f9b57247eafb8e28e7b9465470ece87090228,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-26 16:52:28 -0800,1101, disable reclaim allocating new slab allowing function reclaim inodes allows two unlikely deadlock therefore clear __gfp_fs allocation two deadlock holding zsb obj1 lock function call happens need allocate new slab allocate new slab enter level reclaim attempt evict several inodes evict inodes need take zsb obj2 lock happens obj1 obj2 use hashed lock similar first case however instead getting blocked hash lock block txg_wait_open waiting next txg coming txg_sync thread blocked note 100 fix vmalloc strictly honor __gfp_fs however practice sufficient several unlikely thing must occur concurrently signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 1101,,
5560,0e20a31b4bb7f9745fe6d5cafe513c9c1df3e933,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-19 13:48:06 -0800,408, recreate minor renaming zvols zvol snapshot renamed device file dev zvol renamed patch resolve problem destroying recreating minor new name link recreated udev original patch suman chakravartula schakrava gmail.com signed brian behlendorf behlendorf1 llnl.gov close 408,,
5561,33364b15d302abfb2945129994b9cf42e61dc302,ordaux <nordaux@gmail.com>, 2012-02-13 05:44:20 +0200,573, mount.zfs canonicalize mount point mtab canonicalize mount point passed mount.zfs helper way clean path always added mtab ensures umount properly locate remove entry test case mkdir mnt foo mount zfs zpool foo mnt mnt foo umount mnt foo cat etc mtab grep zpool foo zpool foo mnt mnt foo zfs signed brian behlendorf behlendorf1 llnl.gov close 573,,
5562,54602c37718eca0dbeb668321edf5dfc41dcbe93,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-15 11:43:54 -0800, , merge branch ashift branch add overdue ashift improvement add ashift zpool add zpool attach improve hard disk detection allow zpool import handle increase ashift signed brian behlendorf behlendorf1 llnl.gov,,
5563,df83110856950c8e7b16a7e94cdf42b8531b9cc8,yril Plisko <cyril.plisko@mountall.com>, 2012-11-06 14:39:00 +0200,566, add ashift zpool add zpool attach adding device existing pool ashift property auto detected however property overridden pool creation time i.e zpool create ashift tank ... may user want commit let user specify value ashift property used newly added drive example zpool add ashift tank disk1 zpool attach ashift tank disk1 disk2 signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 566,,
5564,2404b01499019f6a8589cec79201b8871ec48081,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-02 16:34:12 -0700,916, improve hard disk detection use interface determine minimize write size issued without incurring read modify write operation used set ashift correctly prevent performance penalty using hard disk unfortunately interface entirely reliable uncommon disk misreport value reason may still need manually set ashift zpool create ashift ... solution upstream illumos source add white list known offending drive maintaining list burden still may worth detect large number drive considered future work reported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 916,,
5565,32a9872bbae90a7cd9793c371f558701ec268976,eorge Wilson <gwilson@delphix.com>, 2012-05-03 05:49:19 -0700,955, illumos 2671 zpool import fail vdev ashift increased reviewed adam leventhal ahl delphix.com reviewed eric schrock eric.schrock delphix.com reviewed richard elling richard.elling reviewed gordon ross gwr nexenta.com reviewed garrett amore garrett damore.org approved richard lowe richlowe richlowe.net refererces illumos issue http www.illumos.org issue 2671 patch slightly modified upstream illumos version upstream implementation warning message logged console prevent pointless console noise notification posted event event indicates non optimial entirely safe ashift value used create pool depending workload may impact pool performance unfortunately way correct issue recreate pool new ashift note unrelated fix comment zpool_main.c appears upstream commit preserved consistnecy ported cyril plisko cyril.plisko mountall.com reworked brian behlendorf behlendorf1 llnl.gov close 955,,
5566,3997bc74351d608e1a09f8ba8d58fb1c12fff331,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-13 14:35:44 -0800, , zfs 0.6.0 rc12,,
5567,e71a4534b340228d2e73bdadacaff570ade5ab6a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-13 14:28:25 -0800, , spl 0.6.0 rc12,,
5568,2af96a5df53cfc281dc5c5f72eac5bb2b1739733,ichard Yao <ryao@cs.stonybrook.edu>, 2012-11-12 12:34:45 -0500,1085, fix hard coded path vdev.rules.in udev data directory hard coded vdev.rules.in cause problem distribution change location directory issue past virtually distribution used path beginning change following decision systemd developer change directory location reflect take udev maintainership testing branch gentoo linux adopted change enabled hardcoded directory location trigger regression signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 1085,,
5569,4c837f0d931546e656b832caf11b8d4c2063d905,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-31 10:06:34 -0700,541, fix allocating allocated segment panic gunnar beutner hard work one correctly identifying issue race dmu_sync dbuf_dirty case caller responsible preventing race making sure zfs_range_lock held dirtying buffer may referenced log record mmap case relies zfs_putpage taking range lock code accidentally dropped function rewritten linux vfs patch add required range locking zfs_putpage also add missing zfs_enter zfs_exit macro strictly required due vfs holding reference however make code consistent upsteam code harm extra careful original patch gunnar beutner gunnar beutner.name signed brian behlendorf behlendorf1 llnl.gov close 541,,
5570,e26ade5101ba1d8e8350ff1270bfca4258e1ffe3,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-08 14:18:22 -0800,469, fix zvol btrfs hang using zvol back btrfs filesystem btrfs mount would hang due bio completion callback used btrfs assuming lower level driver would never modify bio bi_io_vecs submitted via bio_submit modified btrfs miscalculate page need unlocked resulting hang worth mentioning file system ext 234 xfs work fine make assumption bio completion callback straight forward way fix issue present semantics expected btrfs done cloning bios attached request using clone bvecs perform required accounting clone freed read write original unmodified bios linked back request signed chris wedgwood f00f.org signed brian behlendorf behlendorf1 llnl.gov close 469,,
5571,366346c56592b1ff13020460dcbdd607c70ac7f1,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-08 11:00:23 -0800,922, merge branch kmem cache optimization branch contains kmem cache optimization designed resolve lockup reported zfsonlinux zfs 922. lockup largely result spin lock contention slab low memory condition fundamentally change designed minimize contention though variety method improved vmem cached deadlock detection track emergency object rbtree optimize never spin signed brian behlendorf behlendorf1 llnl.gov zfsonlinux zfs 922,,
5572,dc1b30224f9b1587dbe383d9c8e16caa4b1f71d3,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-05 13:54:20 -0800, , never spin reaping cache concurrent allocation occurs caller must block reaping complete signaled clearing kmc_bit_reaping bit otherwise caller tight loop take release skc skc_cache lock multiple concurrent caller system thrash lock appear lock signed brian behlendorf behlendorf1 llnl.gov,,
5573,a1af8fb1eaa08e55f6e0799779a89f455a5017f2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-30 11:21:42 -0700, , optimize virtual slab may emergency object object guaranteed physical address easily determined passed object virtual slab object emergency object allows completely optimize emergency object free case common free path signed brian behlendorf behlendorf1 llnl.gov,,
5574,ed3163484d2e70df8d9c50bad9678891b26c0fa0,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-30 10:45:50 -0700, , track emergency object rbtree initial implementation emergency object tracked per cache list assumption normal operation would never allocate handful object cost walking list free expected negligible however real world usage shown emergency object tend allocated batch deadlock detected several thousand emergency object allocated original blocked slab allocation complete therefore original list replaced red black tree sorted memory address allocated object bound worst case insertion removal time log minimize contention assoicated spin lock signed brian behlendorf behlendorf1 llnl.gov,,
5575,165f13c33abadc06ccaea1c4f654fddfa316a80f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-29 16:51:59 -0700, , improved vmem cached deadlock detection entire goal performing slab allocation asynchronously able detect vmalloc deadlock case case want start allocating emergency object trick minimize false positive overhead tracking emergency object far higher normal slab object goal mind code reworked sensitive slow allocation increasing wait time cache marked deadlocked subsequent allocation satisfied existing cache object immediately allocate new emergency object behavior persists asynchronous allocation completes clear deadlocked flag result tweak far fewer emergency object get created important minimizes cost releasing latter kmem_cache_free signed brian behlendorf behlendorf1 llnl.gov,,
5576,65c2fc5a2ed3a60711cc63e53b3ab01e9d5095ae,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-06 14:49:11 -0800, , merge branch splat additional debugging cleanup assortment fix splat test infrastructure full detail individual patch signed brian behlendorf behlendorf1 llnl.gov,,
5577,1112486356252d4bd1f9d62b3931314e7dc05a32,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-02 16:13:50 -0700, , splat kmem slab_overcommit disabled disable test may result oom event system result test infrastructure killed signed brian behlendorf behlendorf1 llnl.gov,,
5578,b8296bf3e664f1e583335c2ca3287199eb4e3863,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-02 14:14:53 -0700, , splat atomic bit create thread outside spin lock fedora 3.6 debug kernel identified following issue create thread spin lock safe sleeping could result deadlock therefore lock changed mutex safe sleep bug sleeping function called invalid context slub.c 930 in_atomic irqs_disabled pid 10583 name splat lock held splat 10583 signed brian behlendorf behlendorf1 llnl.gov,,
5579,0e149d42049a0fc89c9ecdac428dbdfc6fd4e20a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-02 15:31:04 -0700, , splat fix log buffer locking fedora 3.6 debug kernel identified following issue call copy_to_user spin lock used safe older kernel longer appears true spin lock changed mutex none code performance critical allowing process sleep harmless signed brian behlendorf behlendorf1 llnl.gov,,
5580,df870a697fc8669d63534b27a108335269a7884f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-02 15:29:44 -0700, , splat cleanup header restructure splat header test includes minimal set header requires signed brian behlendorf behlendorf1 llnl.gov,,
5581,d2733258d09b02fac76af0df9921e369d33e9642,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-05 09:04:50 -0800, , condition variable reference count reference count every entry exit condition variable function cv_wait cv_wait_timeout cv_signal cv_broadcast allows safely block cv_destroy consumer scheduled longer accessing condition variable memory addition poison magic value start cv_destroy ensure never new caller cv_destroy called consumer responsible ensuring never occurs signed brian behlendorf behlendorf1 llnl.gov,,
5582,87efc30b270454a372e18f236491b4f0e5bcc30d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-06 14:48:33 -0800, , merge remote branch eris stats bring support new kstat_type_txg type allows additional visibility txg handling signed brian behlendorf behlendorf1 llnl.gov,,
5583,bbf8c748051294b104678f101ba1162632099b07,rian Behlendorf <behlendorf1@llnl.gov>, 2012-11-06 14:44:07 -0800, , merge remote branch eris stats bring support new kstat_type_txg type allows additional visibility txg handling signed brian behlendorf behlendorf1 llnl.gov,,
5584,9dcb97198338ba2d8764dd5604b278118612f74d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-25 13:02:31 -0700,930, log longer zio_delay_max default report zfs deadlocking due appears lost patch addes debugging determine exact state neither completed failed timed zio_delay_max second information logged using zfs fma infrastructure delay event posted internal zevent log default last event kept log limit configurable via module option dump content log use zpool event command look event include various information pool vdev zio may shed light issue context change 120 second kernel blocked thread watchdog disabled synchronous signed brian behlendorf behlendorf1 llnl.gov issue 930,,
5585,e95853a331529a6cb96fdf10476c53441e59f4e1,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-23 13:48:22 -0700, , add txgs pool kstat file create kstat file contains useful statistic last txgs processed helpful analyzing pool performance new kstat_type_txg type added purpose track following statistic per txg txg unique txg number state state pen uiescing yncing ommitted birth creation time nread byte read nwritten byte written read iop read writes iop write open_time length nanosecond txg open quiesce_time length nanosecond txg quiescing sync_time length nanosecond txg syncing signed brian behlendorf behlendorf1 llnl.gov,,
5586,dba79fcbf2cc50be5caef84ae01657e884ac5d89,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-22 16:57:27 -0700, , add kstat_type_txg type add new kstat type tracking useful statistic txg new kstat_type_txg type used track following statistic per txg txg unique txg number state state pen uiescing yncing ommitted birth creation time nread byte read nwritten byte written read iop read writes iop write open_time length nanosecond txg open quiesce_time length nanosecond txg quiescing sync_time length nanosecond txg syncing signed brian behlendorf behlendorf1 llnl.gov,,
5587,e8fd45a0f975c6b8ae8cd644714fc21f14fac2bf,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-26 10:01:49 -0700,910, add error handling interface ddt_zap_count function assumes never fail however internally ddt_zap_count implemented zap_count potentially fail way return error caller verify used ensure case never happens unfortunately observed pool damaged way zap_count fails result pool imported without hitting verify crashing system patch reworks error safely caught returned caller allows pool damaged way safely rewound import signed brian behlendorf behlendorf1 llnl.gov close 910,,
5588,178e73b376297be44253f7655cd8cba3cf082171,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-24 15:22:31 -0700,1065, revert ashift align vdev read request reverts commit accidentally introduced regression real sector device see issue 1065 detail signed brian behlendorf behlendorf1 llnl.gov issue 1065,,
5589,71c9f0b00307e6ee703eef9eba91e7640731c458,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-23 09:17:29 -0700, , make kstat.ks_update callback atomic move kstat ks_update callback ks_lock enables dynamically sized kstats without modification kstat api create kstat flag register ks_update callback doe free existing ks_data buffer set ks_data_size kstat array size set ks_data allocated buffer size ks_data_size populate array buffer required data buffer allocated ks_update callback guaranteed remain allocated valid proc sequence handler iterates buffer lock dropped kstat_seq_stop function run making safe concurrent access allow ks_update callback perform memory allocation lock changed mutex signed brian behlendorf behlendorf1 llnl.gov,,
5590,f21e5c6a17ee7c1a27fdcb93d29d8b7b5a158053,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-22 10:07:24 -0700, , remove resized bio dio warning following warning originally added provide visibility often dio get heavily fragmented bios happen due constraint imposed block device may negitive impact performance otherwise harmless prevent needle confusion worry message removed kernel warning resized bio dio signed brian behlendorf behlendorf1 llnl.gov,,
5591,30b937ee15589126b4e4576d09d664b93897fc25,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-18 21:36:07 -0700,725, update spare cache device name import zpool import name supposed updated fix_paths happening spare cache device proper name getting filtered pool_list_t name interestingly name filtered spare cache device contain pool name vdev label fix exclude device path list valid key label pool name doe match specified pool name since label valid doe properly store vdev guid correctly assembled without pool name signed brian behlendorf behlendorf1 llnl.gov close 725,,
5592,eac4720465e54c86ae814667985c8a013ec45b85,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-17 16:58:54 -0700,976, allow zpool replace use short device name zpool replace command would fail given short name unlike platform short name expanded single path multiple path prefix must checked addition partition suffix whole disk determined prefix handle complexity function added take either short fully qualified device name short name expanded using prefix default import search path environment variable defined posible expansion compared comparison path care taken strip redundant slash ensure legitimate match missed context work existing function extended consider set interface also simplified take single buffer vast majority change rework existing linux specific code originally written accomidate udev however minimal cleanup remove illumos specific code done improve readability basic flow intent upstream code maintained change logical conclusion previos work adjust zpool import search behavior see commit 44867b6a signed brian behlendorf behlendorf1 llnl.gov close 544 close 976,,
5593,1e0c2c2ccfb720be81051a43c405fad173775963,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-18 12:37:32 -0700,183, linux 3.7 compat removed commit torvalds linux b8318b0 moved function include linux fdtable.h file.c making unavailable spl turn used function tear test infrastructure vn_getf vn_releasef splat regression test rather implement even autoconf compatibilty code handle remove test case also allows drop three existing autoconf test doe mean splat test longer verify function historically never problem feel absolutely need test coverage sure portable version test case could added signed brian behlendorf behlendorf1 llnl.gov close 183,,
5594,c7dfc086297b6e7768e94d1eef3afaa58beeb5ec,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-17 13:23:09 -0700,1027, quote snapshot mountpoint .zfs automount automounting snapshot .zfs snapshot directory make sure quote dataset name mount point ensures either component contains space allowed get handled correctly signed brian behlendorf behlendorf1 llnl.gov close 1027,,
5595,658a0140f3d27f04fb789f5a0fe8ea00773a210a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-17 08:57:14 -0700,1013, merge branch zil performance brnach brings zil performance optimization significant increase synchronous write performance workload pool configuration see individual commit message detail signed brian behlendorf behlendorf1 llnl.gov close 1013,,
5596,5d7a86d114c2706a8d14d94b71f81ad5cdf066c5,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-06-28 12:30:07 +0200,1013, use slog even logbias throughput current code logbias throughput implies following synchronous writes logged indirect mode slog used make sense avoids writing data twice obviously good thing user want maximum pool throughput however surprising decision considering writes indirect log record contain actual data pointer dmu block result log record written logbias throughput mode quite small make sense write main pool since slogs usually optimized small synchronous writes fact current behavior actually harmful performance log block data block dmu_sync seldom allocation size result usually allocated different metaslabs mean spindle write log block dmu block likely happen heavy load seek two allocating log block slog pool instead main pool avoids unnecessary seek commit make zfs use slog datasets logbias throughput real life performance testing show synchronous write performance increase large commit size negative effect case signed brian behlendorf behlendorf1 llnl.gov issue 1013,,
5597,920dd524fb2997225d4b1ac180bcbc14b045fda6,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-06-27 15:20:20 +0200,1013, add fastwrite algorithm synchronous writes currently zil block spread vdevs using hint block pointer managed zil commit code passed metaslab_alloc spreading log block accross vdevs important performance indeed using mutliple disk parallel decrease zil commit latency main performance metric synchronous writes however current implementation suffers following issue would best zil module aware low level detail handled zio metaslab module hint block pointer managed per log simultaneous commits multiple log might use vdevs time inefficient dmu_write doe honor block pointer hint indirect writes spread naive solution rotating metaslab rotor time block allocated zil dmu_sync work practice first zil block written actually allocated previous commit consequently metaslab_alloc decides vdev block bunch allocation happening time dmu_sync zils mean vdev block chosen random next commit happens high chance especially number block per commit slightly number disk one disk write two block potential seek disk sitting idle defeat spreading increase commit latency commit introduces new concept metaslab allocator fastwrites basically top level vdev maintains counter indicating number synchronous writes dmu_sync zil allocated yet completed metaslab called fastwrite flag choose vdev least amount pending synchronous writes multiple vdevs value first matching vdev starting rotor used metaslab_alloc decided vdev block allocated update fastwrite counter vdev rationale like allocation done fastwrite reserve vdev data written future allocation naturally avoid vdev even full rotation rotor result pending synchronous writes given point time nicely spread vdevs contrast previous algorithm based implicit assumption block written instantaneously allocated used manually increase decrease fastwrite counter respectively used caution per tracking fastwrite information leak double unmarks possible however assert vdev teardown code fire fastwrite counter zero pool exported vdev removed note stated marking also done implictly metaslab_alloc zio also got new fastwrite flag used zio pas metaslab allocating assuming zio doe allocation true case dmu_sync flag also trigger unmark zio_done fire side effect new algorithm zil stop used last block stay pending state allocated yet written long time polluting fastwrite counter avoid implemented somewhat crude working solution unmarks pending block zil_sync thus guaranteeing linguering fastwrites get pruned sync event best performance improvement observed pool using large number top level vdevs heavy synchronous write workflow especially indirect writes concurrent writes multiple zils real life testing show 200 300 performance increase indirect writes various commit size signed brian behlendorf behlendorf1 llnl.gov issue 1013,,
5598,142e6dd100eb70ef06f39015a2e54cbd74172f8b,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-06-27 10:26:49 +0200,1013, add atomic_sub_ function libspl spl zfs libspl export atomic_ function except atomic_sub_ function exported spl libspl patch remedy implementing atomic_sub_ function libspl signed brian behlendorf behlendorf1 llnl.gov issue 1013,,
5599,82f46731fd5a9eef4f87530e94922664b58a6138,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-17 08:47:07 -0700,1048, merge branch condvar auditing code verify instance cv_signal cv_broadcast called proper associated mutex turned several race none conclusively seen wild following patch set resolve reference cv_signal man page cv_signal signal condition wake one blocked thread blocked thread unblocked calling cv_broadcast must acquire mutex passed cv_wait calling cv_signal cv_broadcast signed brian behlendorf behlendorf1 llnl.gov close 1048,,
5600,a298dbde92c68022a06ef51f2bb559b0975e4920,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-15 13:41:44 -0700, , condition variable usage _cv following incorrect usage cv_broadcast caught code inspection cv_broadcast function must called associated mutex preventing racing cv_wait signed brian behlendorf behlendorf1 llnl.gov,,
5601,8c0712fd88d3cf60dc9db5392b005583d540dc69,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-15 13:40:07 -0700, , condition variable usage zilog zl_cv_batch following incorrect usage cv_signal cv_broadcast caught code inspection cv_signal cv_broadcast function must called associated mutex preventing racing cv_wait signed brian behlendorf behlendorf1 llnl.gov,,
5602,99db9bfde70440475a37c0e1b985efbec4850a8c,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-15 13:36:26 -0700, , condition variable usage zevent_cv following incorrect usage cv_broadcast caught code inspection cv_broadcast function must called associated mutex preventing racing cv_wait signed brian behlendorf behlendorf1 llnl.gov,,
5603,6cb7ab069d9079a5b4b955da883d5ab804c91319,ndrew Reid <ColdCanuck@nailedtotheperch.com>, 2012-10-13 12:03:59 -0300,797, return dev loop control function usr libexec zfs common.sh return dev loop control first call device loop device http github.com torvalds linux commit 770fe30 control device turn cause script zconfig.sh fail zpool create.sh error creating tmp zpool vdev0 dev loop control loopback patch make function return dev loop loop device signed andrew reid coldcanuck signed brian behlendorf behlendorf1 llnl.gov close 797,,
5604,6f53a6a2299688b092f8183354a4cc159e3eed20,assimo Maggi <massimo@mmmm.it>, 2012-10-12 00:55:42 +0200,1038, switch km_sleep km_pushpage particular instance allocation occurred context sys_msync ... zpl_putpage must careful initiate additional signed massimo maggi massimo mmmm.it signed brian behlendorf behlendorf1 llnl.gov close 1038,,
5605,c418410393325eb01be5b6cc5ff0e6e8aa24af93,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-15 09:27:48 -0700,520, limit prevent user setting tuning larger signed brian behlendorf behlendorf1 llnl.gov close 520,,
5606,45ca2d91cb14bcbe7a06eea6e6d24ae71f1c54bf,uxuan Shui <yshuiv7@gmail.com>, 2012-10-14 17:01:26 +0800,626, return positive error number otherwise cause return invalid pointer error occurs signed brian behlendorf behlendorf1 llnl.gov signed yuxuan shui yshuiv7 gmail.com close 626 885 947 977,,
5607,26099167e6b39d719ade3be2b5e087e29f1121cd,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-14 19:21:49 -0700,1018, disable ztest deadman timer ztest deadman timer causing false positive testing vms make easier spot possible regression disabling timer buildbot test infrastructure still mark ztest instance take long complete failure signed brian behlendorf behlendorf1 llnl.gov issue 1018,,
5608,ee7913b644a2c812a249046f56eed39d1977d706,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-14 16:27:22 -0700,873, merge branch linux 3.6 branch add required compatibility code support linux 3.6 kernel signed brian behlendorf behlendorf1 llnl.gov close 873,,
5609,bcb15891ab394e11615eee08bba1fd85ac32e158,uxuan Shui <yshuiv7@gmail.com>, 2012-10-11 22:41:33 +0800,154, linux 3.6 compat added function removed linux 3.6 observed caller want parent dentry simpler function replaces doe lookup holding i_mutex lock good news implementation remove need handle locking however make harder implement single readable vn_remove vn_rename function usually prefer therefore implement new version vn_remove vn_rename linux 3.6 newer kernel allows leave existing working implementation untouched add simpler version newer kernel long term would much like see code removed since code enabled generally frowned upon kernel happen util either abondon zpool.cache file implement alternate infrastructure update correctly user space signed yuxuan shui yshuiv7 gmail.com signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 154,,
5610,95f5c63b47d8f8294b38843f9ba710e97b749b63,ichard Yao <ryao@cs.stonybrook.edu>, 2012-08-16 19:31:54 -0400,873, linux 3.6 compat iop mkdir use .mkdir instead .create 3.3 compatibility check linux 3.6 modifies create function prototype cause autotools linux 3.3. compatibility check function prototype change create mkdir mknode fail since mkdir mknode unchanged modify check examine instead signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 873,,
5611,558ef6d0805457654938dbe56c9a19b0121a712d,uxuan Shui <yshuiv7@gmail.com>, 2012-10-12 23:20:58 +0800,873, linux 3.6 compat iop create linux commit struct nameidata longer passed iop create instead result inamedata flag lookup_excl passed zfs like almost linux fileystems never made use prototype need wrapped compatibility signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 873,,
5612,8f195a908ffaa8faf8f4c8a0e701e44ae3859e33,uxuan Shui <yshuiv7@gmail.com>, 2012-10-12 22:41:06 +0800,873, linux 3.6 compat iop lookup linux commit struct nameidata longer passed iop lookup instead inamedata flag passed zfs like almost linux fileystems never made use prototype need wrapped compatibility signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 873,,
5613,3c203610756f98f275c7c9f731d67a38b1111509,uxuan Shui <yshuiv7@gmail.com>, 2012-10-12 21:40:53 +0800,873, linux 3.6 compat sget linux commit mount flag passed sget used initializing new superblock zfs never sget fashion simply pas zero add zpl_sget compatibility wrapper signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 873,,
5614,af26c4d4ab545767456d8c21ed48e9e01ce6a3e7,uxuan Shui <yshuiv7@gmail.com>, 2012-10-13 18:44:15 -0700,873, linux 3.6 compat sop write_super removed .write_super callback removed structure linux commit file system expected self manage writing dirty state assoicated super block zfs never made use callback simply removed structure signed yuxuan shui yshuiv7 gmail.com signed brian behlendorf behlendorf1 llnl.gov issue 873,,
5615,a5c20e2a0a9046c06d86615fbf51dc04f12bba14,tienne Dechamps <e-t172@akegroup.org>, 2012-10-07 21:30:23 +0200,1022, ashift align vdev read request currently size read write request vdevs aligned according vdev ashift allocating new zio buffer padding need make sense write request prevent read modify write write happens smaller device internal block size read however rationale clear seems original code aligns read solaris device driver outright refuse unaligned request issue linux indeed linux block device able accept request size take care alignment issue  result point enforcing alignment read request linux nice optimization opportunity two reason remove memory allocation heavily used code path request get aligned lowest layer possible shrink path additional useless padding data travel example using sector drive lie sector size using 512b read request instead mean data traveling ata scsi interface even though drive actually read platter exception raidz raidz need read whole allocated block parity patch remove alignment enforcement read request except raidz note also remove assertion check aligning top level vdev case anymore repair writes result failed read signed brian behlendorf behlendorf1 llnl.gov close 1022,,
5616,b68503fb30dfed0823b1fe7d547d82c3df04d187,ichard Yao <ryao@cs.stonybrook.edu>, 2012-10-11 15:51:25 -0700,831, remove vmem_size consumer currently three vmem_size consumer part arc implemention however since expected behavior linux solaris virtual memory subsystem different behavior instance need reevaluated actually dead code arena support never added spl zio_arena always null support needed simply remove dead code solaris virtual memory constitutes almost address space reasonably expect fairly large amount free however linux default 100mb total heavily used arc expectation linux usually small value therefore remove vmem_size check i386 system expectation arc_init vmem_size used initially size arc since arc currently backed virtual address space make sense use limit arc bit system code removed arc backed page cache signed brian behlendorf behlendorf1 llnl.gov close 831,,
5617,dea3505dff1252b337eb1cb8744626fb0f796d86,assimo Maggi <massimo@mmmm.it>, 2012-10-11 16:19:48 -0700, , switch km_sleep km_pushpage particular instance allocation occurred context sys_msync ... zpl_putpage must careful initiate additional signed massimo maggi massimo mmmm.it signed brian behlendorf behlendorf1 llnl.gov,,
5618,87d98efe9ea7dd1e464f38fc5e39f0d08191d3be,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-11 13:56:32 -0700, , fix zfs_txg_timeout module parameter allow zfs_txg_timeout variable dynamically tuned run time pulling variable declaration evaluted time loop zfs_txg_timeout variable declared extern common sys txg.h header rather locally dsl_scan.c prevents potential type mismatch global variable need used elsewhere move module_param code source file zfs_txg_timeout declared logical location signed brian behlendorf behlendorf1 llnl.gov,,
5619,7df05a4266fe8549cedb9a2d71bb8bff6ab11112,ichard Yao <ryao@cs.stonybrook.edu>, 2012-10-10 23:57:45 -0400,749, fix integer size mismatch bit system commit introduced number module parameter required several type changed accomidate required module parameter linux macro unfortunately arc.c contained extern definition variable type updated consistent dsl_pool.c counterpart variable properly marked extern common header gcc would generated warning would slipped result arc unconditionally expected bit unfortunately largest size integer module parameter linux support unsigned long varies size depending host system native word size effect bit system arc incorrectly performed bit operation bit value reading neighboring bit upper bit bit value correct changing extern declaration use unsigned long type move extern definition common arc.h header make arc correctly treat bit value bit system reported jorgen lundman lundman lundman.net signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 749,,
5620,15fd274973be58f2851bf9d8e8d913b4c10151a6,yril Plisko <cyril.plisko@mountall.com>, 2012-10-08 20:02:20 +0200,1032, make module paramater variable tunable lack proper module_param instrumentation signed brian behlendorf behlendorf1 llnl.gov close 1032,,
5621,5b7e5b5ab980ecfce7381820a1b952dc1af5a7bb,yril Plisko <cyril.plisko@mountall.com>, 2012-10-09 05:58:35 +0200,1030, txg spelled tgx place term transaction group commonly abbreviated txg zfs source place linux specific macro incorrectly spelled tgx signed brian behlendorf behlendorf1 llnl.gov close 1030,,
5622,c8f259182d72f8ded5b9fbc4198f41782a7cbf77,ORN Andras <korn@elan.rulez.org>, 2012-10-09 10:26:38 +0200,1026, zfs.8 add missing info dedup mlslabel section missing zfs.8 man page add signed brian behlendorf behlendorf1 llnl.gov close 1026,,
5623,beb999445adaa6d794f0d706ca8a0c835cb1468c,assimo Maggi <massimo@mmmm.it>, 2012-10-07 21:54:06 +0200,1023, switch km_sleep km_pushpage prevent snapshot_check initiate memory allocation signed massimo maggi massimo mmmm.it signed brian behlendorf behlendorf1 llnl.gov close 1023,,
5624,7bd04f2d7d99780f190d4027e6e81fc0df11ba95,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-05 10:39:35 -0700,1017, set default zvol elevator noop make sense zvol use default system scheduler virtual device therefore change default scheduler noop zvols provided elevator_change function available interface available since linux 2.6.36 appears rhel 6.x kernel deliberately implement method older kernel racy could result system crash better simply manually tune scheduler kernel signed brian behlendorf behlendorf1 llnl.gov close 1017,,
5625,bbdc6ae49518a4be7230ab673370e9231e2f72e7,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-03 14:56:26 +0200,168, add interface file hole punching add interface punch hole deallocate space vfs file interface identical solaris vop_space interface interface necessary trim support file vdevs implemented using linux fallocate introduced 2.6.38. brief time 2.6.38 done using truncate_range inode operation quickly deprecated patch support add support truncate_range inode operation vop_space file hole punching api deprecated removed 3.5 useful old kernel tmpfs truncate_range inode operation translates unfortunately function expects end offset inclusive aligned end page kernel stop bug_on patch fix issue adapting constraint set forth  signed brian behlendorf behlendorf1 llnl.gov close 168,,
5626,089fa91bc51dc10da5a75a6d9fff77f186fccb23,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-10-04 10:38:55 +0200,1010, align discard request zvols currently processing discard request zvol_discard call precise offset size request unfortunately optimal request aligned zvol block boundary indeed case unaligned range zero unaligned part useless since freeing space also slow translates read modify write operation patch fix issue rounding discard start offset next volume block boundary rounding discard end offset previous volume block boundary signed brian behlendorf behlendorf1 llnl.gov close 1010,,
5627,31ab19429787d04d2291851b8178bcee817c15ca,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-04 14:37:53 -0700, , merge branch illumos ztest branch port ztest backwards compatibility testing option includes original upstream illumos patch plus several followup patch address concern original change signed brian behlendorf behlendorf1 llnl.gov,,
5628,ae380cfa76e4d61bc6373b6b4e97bc3cac0a3a6e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-04 12:54:47 -0700, , realpath arg must minimum path_max realpath function expects buffer passed resolved_path least path_max length buffer overflow may occur therefore passed buffer size changed maxnamelen maxpathlen also take opertunity dynamically allocate buffer keep stack warning call declared attribute warning second argument realpath must either null least path_max byte long buffer enabled default signed brian behlendorf behlendorf1 llnl.gov,,
5629,5be98cfe2fd81145c9c16ddbe3b4d7d52f687157,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-04 12:30:16 -0700, , verify return value function linux following function flagged attribute trigger warning ever used without checking return value handle case check result verify better detect immediately failure rather segfault farther function cmd ztest ztest.c 6033 warning ignoring return value asprintf declared attribute wunused result cmd ztest ztest.c 739 warning ignoring return value realpath declared attribute wunused result signed brian behlendorf behlendorf1 llnl.gov,,
5630,facbbe436670b4910475fb937a26468f7178b541,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-04 11:36:52 -0700, , replace tempnam mkstemp use tempnam racy avoided favor mkstemp according linux tempnam man page although tempnam generates name difficult guess nevertheless possible time tempnam return pathname time program open another program might create pathname using open create symbolic link lead security hole avoid possibility use open o_excl flag open pathname better yet use mkstemp tmpfile issue flagged gcc ztest.o function setup_data_fd cmd ztest ztest.c 5822 warning use tempnam dangerous better use mkstemp signed brian behlendorf behlendorf1 llnl.gov,,
5631,483106eb71b1886c824951b3a35d89d47d41405e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-10-04 11:14:04 -0700, , minimize ztest stack frame size ensure ztest behaves similarly possible kernel implementation zfs attempt honor kernel stack limit includes keeping individual stack frame size size currently use gcc detect enforce limit therefore get building cleanly full debugging enabled stack usage following function reduced moving buffer heap signed brian behlendorf behlendorf1 llnl.gov,,
5632,9d81146b015e8f4f611357c4cef17fbfb2f4bd54,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-10-04 16:09:12 +0200, , use dynamic file descriptor number ztest currently ztest expects get file descriptor data random file respectively quite fragile break easily ztest run file descriptor already opened e.g complex shell script patch fix issue removing assumption file descriptor number open return random file dev urandom new code rely shared file descriptor instead reopens file child data file new code writes file descriptor number ztest_fd_data environment variable recovered execv call signed brian behlendorf behlendorf1 llnl.gov,,
5633,22257dc0d5582035347320130e9ee03b33dffb6f,hristopher Siden <chris.siden@delphix.com>, 2012-05-21 12:11:39 -0700, , fix mmap usage ztest illumos illumos gate illumos changeset 13700 2889e2596bd6 note partial port aforementioned illumos changeset reviewed matt ahrens mahrens delphix.com reviewed george wilson gwilson delphix.com reviewed richard lowe richlowe richlowe.net reviewed dan kruchinin dan.kruchinin gmail.com approved eric schrock eric.schrock delphix.com ported zfsonlinux etienne dechamps ovh.net,,
5634,c242c188fd7df8ecdb793a3d12ed584cbe3ff424,hris Siden <chris.siden@delphix.com>, 2012-01-23 18:43:32 -0800, , illumos 1950 ztest backwards compatibility testing option illumos illumos gate illumos changeset 13571 a5771a96228c 1950 ztest backwards compatibility testing option reviewed george wilson george.wilson delphix.com reviewed adam leventhal ahl delphix.com reviewed matt ahrens matt delphix.com reviewed richard lowe richlowe richlowe.net reviewed robert mustacchi joyent.com approved eric schrock eric.schrock delphix.com ported etienne dechamps ovh.net signed brian behlendorf behlendorf1 llnl.gov,,
5635,d75d6f294e0e011e53913803db70f8096f5fd630,hris Dunlop <chris@onthe.net.au>, 2012-10-04 16:19:17 +1000,1002, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit b8d06fc additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov close 1002,,
5636,04434775b7f3aa55fbbcf2064cfb9f5f5c436e64,atthew Ahrens <mahrens@delphix.com>, 2012-08-24 07:12:46 -0700,995, illumos 3100 zvol rename fails ebusy dirty illumos illumos gate illumos changeset 13780 6da32a929222 3100 zvol rename fails ebusy dirty reviewed christopher siden chris.siden delphix.com reviewed adam leventhal ahl delphix.com reviewed george wilson george.wilson delphix.com reviewed garrett amore garrett damore.org approved eric schrock eric.schrock delphix.com ported etienne dechamps ovh.net signed brian behlendorf behlendorf1 llnl.gov close 995,,
5637,0677cb6f52a1df13976fa144e46f07af2f48b6b9,ichard Lowe <richlowe@richlowe.net>, 2012-08-16 13:08:53 -0400,940, illumos 2399 zfs manual page doe document use zfs diff illumos illumos gate illumos changeset 13773 00c2a08cf1bb 2399 zfs manual page doe document use zfs diff reviewed joshua clulow josh sysmgr.org reviewed matt ahrens mahrens delphix.com reviewed yuri pankov yuri.pankov nexenta.com reviewed dan mcdonald danmcd nexenta.com approved robert mustacchi joyent.com ported etienne dechamps ovh.net signed brian behlendorf behlendorf1 llnl.gov close 940,,
5638,65947351e71bec2ec5673bf0c3ad02f2c2b96b6c,eorge Wilson <george.wilson@delphix.com>, 2012-09-01 16:44:00 -0400,994, illumos 3129 3130 illumos illumos gate illumos changeset 13794 7c5e0e746b2c 3129 zpool reopen restarts resilvers 3130 ztest failure assertion failed name b_false 0x0 0x10 reviewed eric schrock eric.schrock delphix.com reviewed matt ahrens matthew.ahrens delphix.com reviewed christopher siden chris.siden delphix.com reviewed adam leventhal ahl delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 3129 http www.illumos.org issue 3130 ported etienne dechamps ovh.net signed brian behlendorf behlendorf1 llnl.gov close 994,,
5639,d13524579162b35189804c357a63993be758b84c,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-28 15:55:03 +0200,997, temporarily disable reguid test currently ztest fails following error error pool ztest encountered uncorrectable failure failure mode property pool set panic know fix see issue 939 may take time get around merging fix heavy dependency mean time ideal unable use ztest small isolated issue patch work around problem disabling reguid test temporary hack keep ztest usable reguid test enabled proper fix merged signed brian behlendorf behlendorf1 llnl.gov close 997,,
5640,6aec1cd5a674d7ee9917a75fee9a82fc97cfdf77,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-10-01 16:34:52 +0200,989, fix ztest vdev file path currently several instance ztest generates vdev file path using statement similar snprintf path sizeof path ... worked fine changed path pointer heap instead array allocated stack change sizeof path would return size array return size pointer instead result aforementioned sprintf statement wrong size truncates vdev file path first byte depending architecture typically default setting file path become tmp instead test ztest.xxx issue exists explains ztest fail right away signed brian behlendorf behlendorf1 llnl.gov issue 989,,
5641,274091c07482773c7e81cbe70f0b46b4606048d0,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-27 16:05:15 +0200,989, fix vop_close userspace currently unknown reason vop_close userspace cause file descriptor leak especially problematic long ztest run since zpool.cache opened repeatedly never closed resulting resource exhaustion emfile error patch fix issue making vop_close supposed  signed brian behlendorf behlendorf1 llnl.gov issue 989,,
5642,0aebd4f9e3223e8f1e09de7b29bba4f375db840c,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-27 13:31:46 +0200,989, create thread detached state userspace currently thread_create called userspace creates joinable i.e detached thread pthread default unfortunately doe reproduce kthreads behavior kthreads always detached addition contradicts original solaris code creates userspace thread detached mode joinable thread never joined lead leakage pthread thread object zombie thread turn result excessive ressource consumption possible ressource exhaustion extreme case e.g long ztest run patch fix issue creating userspace thread detached mode exception ztest worker thread meant joinable signed brian behlendorf behlendorf1 llnl.gov issue 989,,
5643,6d1d976b2c2c6b80de75a480c998466068066846,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-27 03:38:06 +0700,906, modify use elevator_change linux 2.6.36 elevator_change interface added commit update use interface available otherwise fall back usermodehelper method original patch foobarz sysop xeon none signed brian behlendorf behlendorf1 llnl.gov close 906,,
5644,2f342404c157f130129784f2592eaadf0930beab,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-20 12:00:50 +0200,979, force blocksize testing ext2 zvol currently mkfs.ext2 zconfig.sh zvols try use blocksize probably default zvol expose optimal size unfortunately ext2 blocksize supported kernel resulting filesystem unmountable patch fix issue making sure blocksize use force else mkfs.ext2 allow use blocksize smaller optimal size signed brian behlendorf behlendorf1 llnl.gov close 979,,
5645,393b44c7112854fc11dc97885a87f666780cc9fe,yril Plisko <cyril.plisko@mountall.com>, 2012-09-16 09:03:04 +0300,969, implement hook nfs export order implement synchronous nfs metadata semantics zfs need provide hook take make sure change committed zil fortunately zfs_fsync doe simply calling doe trick signed brian behlendorf behlendorf1 llnl.gov close 969,,
5646,23a61ccc1b89fa5b89b5d8383d57cf5152406cfc,hris Wedgwood <cw@f00f.org>, 2012-09-24 10:30:18 -0700,730, zvol_probe return null device found previously returned err_ptr enoent rest kernel expect oops signed chris wedgwood f00f.org signed brian behlendorf behlendorf1 llnl.gov close 949 close 931 close 789 close 743 close 730,,
5647,37abac6d559a1da8ab8e5379442f491b73998f6a,ill Pijewski <wdp@joyent.com>, 2012-05-09 15:05:14 -0700,2703, illumos 2703 add mechanism report zfs send progress reviewed matt ahrens matt delphix.com reviewed robert mustacchi joyent.com reviewed richard lowe richlowe richlowe.net approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 2703 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5648,1bd201e70d57464fd26bf9089ea4b44fd49e4f2d,hris Siden <chris.siden@delphix.com>, 2012-01-23 18:43:32 -0800,685, illumos 1948 zpool list show detailed pool info reviewed adam leventhal ahl delphix.com reviewed matt ahrens matt delphix.com reviewed eric schrock eric.schrock delphix.com reviewed richard lowe richlowe richlowe.net reviewed albert lee trisk nexenta.com reviewed dan mcdonald danmcd nexenta.com reviewed garrett amore garrett damore.org approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 1948 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 685,,
5649,95fd8c9a7f979e4c4941d329e6457cc84a81edfa,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-19 11:50:22 -0700,973, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 973,,
5650,0a2f7b3662fd10e7ac56a4b2859248eb98e31d6d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-18 12:33:00 -0700,974, seg fault zpool import dev disk introduced commit course check ensure best null attempting dereference signed brian behlendorf behlendorf1 llnl.gov close 974,,
5651,211204bed39a9652c95269cfef13be57d1507b71,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-18 11:30:24 -0700, , zfs 0.6.0 rc11,,
5652,a6c6839a88b7dc344f3cd8e875a01802b34645cd,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-18 11:28:57 -0700, , spl 0.6.0 rc11,,
5653,dd4769adc05c7614c879f0a854e243d15eae6786,ichard Lowe <richlowe@richlowe.net>, 2012-02-04 05:44:53 +0000,682, illumos 2088 zdb could use reasonable manual page reviewed yuri pankov yuri.pankov nexenta.com reviewed garrett amore garrett damore.org reviewed george wilson gwilson zfsmail.com reviewed steve gonczi gonczi comcast.net reviewed richard elling richard.elling approved garrett amore garrett damore.org reference http www.illumos.org issue 2088 ported cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 682,,
5654,44867b6d6effc1628dd00c36821ab044f89fb988,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-15 13:25:21 -0700,965, improve zpool import search behavior goal change make zpool import prefer use peristent dev mapper dev disk path far preferable device dev name persistent determined order device detected patch improves thing changing default search path top level dev directory order dev disk vdev custom rule use first exist dev disk zpool custom rule use first exist dev mapper use multipath device component dev disk uuid single unique entry persistent dev disk may multiple entry persistent dev disk path encodes physical location persistent dev disk label custom persistent label dev unsafe device name change default search path overriden setting environment variable must colon delimited list path searched vdevs zpool import option specified listed path searched finally multiple path device found one path exact match path used last time import pool used exact match prefered path determined provided search order mean still import pool force specific name providing path option prefered name persist long path exist system signed brian behlendorf behlendorf1 llnl.gov close 965,,
5655,ba367276d84e126dc3a13677c286539d0019e3b8,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-17 11:22:23 -0700,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5656,49d39798f286cce2497a87fc06d78c051ca87570,yril Plisko <cyril.plisko@mountall.com>, 2012-09-13 23:25:15 +0300,933, zfs replay transaction error replay tx_write record zil call perform actual write return number byte written similar write system call negative error however code expects positive return value residual counter thus successfully completes mistakenly considered partial write error code delivered point zil processing aborted famous zfs replay transaction error error message given message buffer fix compare return value buffer size flag error disagree signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 933,,
5657,8312c6df55c1fb2ad3536fc3bc7ae93c429b85aa,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-14 09:36:40 -0700,961, clear pg_writeback sync error case commit accidentally introduced issue conditionally registering commit callback async case error handing code dmu_tx_assign failure case relied always registered commit callback clear pg_writeback bit since longer strictly true synchronous case must explicitly invoke callback signed brian behlendorf behlendorf1 llnl.gov close 961,,
5658,8e8e7f35b71e7aa88f5e45bf1594bcc75526227d,yril Plisko <cyril.plisko@mountall.com>, 2012-09-12 12:15:40 +0300,962, fix zdb printf format string zil data block without fix zdb printout zil data block look full due printf handling argument int default output fix tx_write len 4136 txg 1093817 seq 149231 foid 4242 offset length f68  ffffffc3 fix tx_write len 4136 txg 1093817 seq 149231 foid 4242 offset length f68 8e8791cc 1cafc9baz signed brian behlendorf behlendorf1 llnl.gov close 962,,
5659,5915791096e6b5be0bad7d2e3f683b4e7908cf19,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-12 11:16:08 -0700,782, move iput replaying unlink remove operation via zfs_rmdir object removed instantiated call zfs_dirent_lock mean single reference protecting object right call reference dropped may cause object destroyed result null dereference shown stack trace issue 782 likely issue normal operation always additional reference held object vfs signed brian behlendorf behlendorf1 llnl.gov close 782,,
5660,3050c9314faf95a63f000577a1d9feebb86b26d9,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-12 12:24:41 -0700, , switch km_sleep km_pushpage certain circumstance following function may called context km_sleep unsafe result deadlocked system avoid problem unconditional km_sleeps converted km_pushpages prevent attempting initiate direct reclaim change originally part cd5ca4b reverted 330fe01 always commit exactly reason signed brian behlendorf behlendorf1 llnl.gov,,
5661,9b51f218410ccdeb69a85d99bd5f09051ec2def1,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-12 11:31:39 -0700,171, remove tq_sleep km_sleep mapping taskq code originally written seemed like good idea simply map tq_sleep km_sleep unfortunately assumed tq_ flag would never confict linux gfp_ flag adding tq_pushpage support commit cd5ca4b invariant accidentally broken therefore support tq_pushpage needed linux prevent confusion removed direct mapping tq_sleep tq_nosleep tq_pushpage longer defined term km_ counterpart instead simple mapping function introduce convert tq_ km_ needed signed brian behlendorf behlendorf1 llnl.gov issue 171,,
5662,330fe010e42fcdbc70832583f95248b9227ac2c4,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-12 10:06:13 -0700, , revert switch km_sleep km_pushpage reverts commit due conflict higher tq_ bit caused incorrect behavior signed brian behlendorf behlendorf1 llnl.gov,,
5663,cda4db408c28a29438ba702e2018bd0d5dd0cc03,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-11 11:26:25 -0700,955, revert improve hard disk detection reverts commit accidentally introduced issue 955 pool using drive originally created sector size 512 byte correctly detected physical sector size 4096. desirable new pool however existing pool abruptly changing sector size cause problem reason change reverted additional logic added detect existing pool case existing pool must use ashift size stored label regardless disk report critical compatibility signed brian behlendorf behlendorf1 llnl.gov issue 955,,
5664,27ccd4147bd29e9334c57a08d99481447a19c82f,yril Plisko <cyril.plisko@mountall.com>, 2012-09-05 19:44:53 +0300, , avoid running exportfs zfs zpool command invocation delay executing exportfs command result actually required signed cyril plisko cyril.plisko mountall.com signed gunnar beutner gunnar beutner.name signed brian behlendorf behlendorf1 llnl.gov,,
5665,af909a1089b35ae527a90c222453c977c4beff62,yril Plisko <cyril.plisko@mountall.com>, 2012-08-08 09:59:53 +0300,3064, illumos 3064 usr src cmd zpool zpool_main.c misspells successful reviewed andrew stormont andrew.stormont nexenta.com reviewed kartik mistry kartik.mistry gmail.com reviewed matthew ahrens mahrens delphix.com reference http www.illumos.org issue 3064 signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov,,
5666,fff276419e329c72f5b4a33091e123bbf2215acb,hris Dunlop <chris@onthe.net.au>, 2012-09-11 10:14:26 -0700, , remove autotools product spl_config.h.in generated file remove .gitignore signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
5667,dd87332f478b2a55c007aae568dd242fb2a34602,hris Dunlop <chris@onthe.net.au>, 2012-09-11 16:48:01 +1000, , remove autotools product spl_config.h.in generated file remove .gitignore signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov,,
5668,b815ff9a8f3ed0b87fc24517fd01a867ec07b424,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-10 16:23:21 +0200,951, silence setting dataset sync always message ztest ztest output message testing sync always matter verbosity level point outputting message low verbosity level patch message displayed verbosity level result output pollution signed brian behlendorf behlendorf1 llnl.gov close 951,,
5669,4ca9a43644cf651ed3bb533d183cf33525a9fc4a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-07 16:04:22 -0700,903, remove zvol device node zfs destroy change 330d06f disrupted zvol device get removed zol however basically boil fact longer reliably calling via therefore add missing call handle thing similarly existing case ideally would check type dmu_ost_zfs dmu_ost_zvol right thing zfs_ioc_destroy however look like would fairly expensive get type harmless simply attempt umount minor removal also issue latest freebsd illumos code tracked following issue may want refresh code settle want upstream http www.illumos.org issue 3170 signed brian behlendorf behlendorf1 llnl.gov issue 903,,
5670,3c60f5054cf567ddc4a87e72d16d0a425721e422,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-07 11:05:46 -0700,943, debug cv_destroy mutex held still appears race condition variable cv_mutex set woken cv_destroy wait queue might possible cv_destroy called immediately cv_broadcast trouble previously may still small race see commit d599e4f following patch close one small race improves asserts log offending value signed brian behlendorf behlendorf1 llnl.gov zfsonlinux zfs 943,,
5671,95331f4437d57f0d0a719d38355159b90a52f40d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-07 14:28:07 -0700,917, set kmc_noemergency zlib workspace workspace required zlib perform compression roughly 512mb order allocation large never attempt directly kmalloc emergency object far preferable asynchronously vmalloc additional slab case needed simply block waiting existing object released new slab allocated accomplished disabling emergency slab object passing kmc_noemergency flag slab creation time signed brian behlendorf behlendorf1 llnl.gov zfsonlinux zfs 917,,
5672,cb5c2acebb86da5b50f099b39209d22845eda8c7,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-07 14:24:17 -0700, , add kmc_noemergency slab flag provide flag disable use emergency object specific kmem cache may instance circumstance kmalloc emergency object example cache contains large object 128k signed brian behlendorf behlendorf1 llnl.gov,,
5673,1ecc6d1265ccffe387780f13f33142fb0961cb0f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-06 14:21:59 -0700, , add zstreamdump .gitignore zstreamdump merged commit b79fc3f failed add needed .gitignore file signed brian behlendorf behlendorf1 llnl.gov,,
5674,04f9432d3bcb15ff8ed6ddc2dc377a4c0264340d,yril Plisko <cyril.plisko@mountall.com>, 2012-08-24 15:38:55 +0300,888, make zfs filesystem persistent across different machine use zfs dataset fsid guid unique file system similar done illumos opensolaris signed cyril plisko cyril.plisko mountall.com signed brian behlendorf behlendorf1 llnl.gov close 888,,
5675,4b2f65b253952c5103311cc8bb4b8cdc6836fd7e,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-09-06 11:06:05 +0200, , increase stack space userspace maximum stack size userspace tool set mimic available kernel stack size unfortunately due difference stack used userspace kernel space spurious stack overflow could occur userspace tool due limited stack size especially true ztest debugging enabled patch multiplies userspace stack size fix stack overflow issue come price able catch stack size issue userspace previous solution proved unreliable anyway signed brian behlendorf behlendorf1 llnl.gov fix 934,,
5676,ebcfc8a53450fd71443668191507770e17c409bd,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-04 19:00:59 -0700,465, disable page allocation warning arc buffer buffer arc normally backed spl virtual slab however memory low slab object available new slab quickly constructed new emergency object directly allocated object large order system page allocated km_pushpage avoid potential deadlock allowed initiate satisfy allocation result occasional allocation failure however since allocation allowed block perform operation memory compaction eventually succeed since unexpected unlikely behavior patch disables warning allocation failure signed brian behlendorf behlendorf1 llnl.gov issue 465,,
5677,fc24f7c887a040b6dc9f2a3dd3d5ae0c03a5d639,ichael Martin <mgmartin.mgm@gmail.com>, 2012-09-05 09:46:29 -0700,57, fix missing vdev name zpool status output commit 858219c make sense verbose section code initially buf path never point location path buf set raidz vdev code may drop verbose section depending verbose flag using tmpbuf make sense since buf path issue doe occur upstream solaris code implementation snprintf allow buf path address signed brian behlendorf behlendorf1 llnl.gov close,,
5678,cafa9709f3271fe345b571c2feff8d2dc034ed49,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-04 19:54:20 -0700,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5679,0ef0ff546eeab2f85690d59ee23fe30fa634dd38,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-04 15:52:36 -0700,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5680,395350c85d9903beba43bac7ae79092ae25f1526,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-02 16:34:12 -0700,916, improve hard disk detection use interface determine minimize write size issued without incurring read modify write operation used set ashift correctly prevent performance penalty using hard disk unfortunately interface entirely reliable uncommon disk misreport value reason may still need manually set ashift zpool create ashift ... solution upstream illumos source add list known offending drive maintaining list burden still may worth detect large number drive considered future work reported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 916,,
5681,594b4dd82a6ba6b046b894a24986ce727f4d7391,rian Behlendorf <behlendorf1@llnl.gov>, 2012-09-03 13:05:19 -0700,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5682,ba7dbeb22e4b0f2d4c2b805abfee8d663e0f779d,tienne Dechamps <e-t172@akegroup.org>, 2012-09-02 22:09:01 +0200,926, add libnvpair mount_zfs dependency commit added libzpool mount_zfs dependency brought nvpair symbol used libzpool resolve include libnvpair library mount_zfs even though mount_zfs directly require symbol signed brian behlendorf behlendorf1 llnl.gov close 926,,
5683,b79fc3fea9e9f26e0e65665243d569d8907ac279,artin Matuska <martin@matuska.org>, 2012-08-29 21:23:12 +0200,905, add zstreamdump command examine zfs send stream obtained illumos gate revision 11935 538c866aaac6 source ssh anonhg hg.illumos.org illumos gate signed brian behlendorf behlendorf1 llnl.gov close 905,,
5684,ac8ca67a88bdb8be08456785116a8824fba735df,tienne Dechamps <e-t172@akegroup.org>, 2012-09-01 15:02:25 +0200,167, add dkioctrim trim support see dechamps zfs detail harmless addition merged simplify testing zfs trim support patch signed brian behlendorf behlendorf1 llnl.gov close 167,,
5685,20a083cbe29b5eb082c577e9c0194d036effaa59,hris Dunlop <chris@onthe.net.au>, 2012-09-01 14:44:13 +1000,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed chris dunlop chris onthe.net.au signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5686,b404a3f07f430710b92a380cd24dd2d48443d2f4,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-31 07:45:27 -0700,917, switch km_sleep km_pushpage warning indicates incorrect use km_sleep call path must use km_pushpage avoid deadlocking direct reclaim see commit additional detail spl fixing allocation task txg_sync 6093 used gfp flag 0x297bda7c pf_nofs set signed brian behlendorf behlendorf1 llnl.gov issue 917,,
5687,46b3945d5da42fe8bf3c9ff8e28dbb8cb88095b9,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-30 20:56:22 -0700,93, suppress large allocation warning various kernel debuging option enabled allocation may larger usual shown following warning way harmful suppress warning spl large kmem_alloc 40960 0x80d0 358 76495 76495 signed brian behlendorf behlendorf1 llnl.gov close,,
5688,2b2861362f7dd09cc3167df8fddb6e2cb475018a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-29 11:52:47 -0700,907, clear pg_writeback zil_commit sync writing via writepage writeback bit always cleared part txg commit callback however also written synchronsously zil immediately clear bit need wait subsequent txg sync since data already safe stable storage observed reduce msync delay second miliseconds one workload expected benefit intermittent samba hand described issue 700 signed brian behlendorf behlendorf1 llnl.gov close 700 close 907,,
5689,e6f290535c2fff8b940c4eacb1c90cbc2cfc7508,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-08-30 12:15:10 +0200, , fix mount_zfs dependency libzpool mount_zfs depends libzpool since unfortunately makefile mount_zfs modified reflect result libtool know dependency may result wrong libzpool used build e.g libzpool system instead libzpool build directory patch add dependency fix issue signed brian behlendorf behlendorf1 llnl.gov fix 909,,
5690,efcd0ca32d099b0dcb556617c82403c150e6018b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-26 13:34:06 -0700, , enhance splat kmem slab_overcommit test emergency slab object merged started observing timeout failure kmem slab_overcommit test due ineffecient way slab_overcommit reclaim function implemented due additional cost potentially allocating ten thousand emergency object tracking single list patch address first concern enhansing test case trace allocation object linked list allows cleaner version reclaim function simply release object since touch common code test share data structions also updated making change slab_overcommit reliably passing however certainly additional cleanup could done signed brian behlendorf behlendorf1 llnl.gov,,
5691,b8d06fca089fae4680c3a552fc55c512bfb02202,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-07 13:49:51 -0400,726, switch km_sleep km_pushpage difference paging done solaris linux cause deadlock km_sleep used following context txg_sync thread zvol write discard thread zpl_putpage vfs callback km_sleep allow direct reclaim may result calling back filesystem block layer write page lock held operation potential exists deadlock system ensure forward progress memory allocation context must km_pushpage disables performing accomplish memory allocation previously behavior acheived setting pf_memalloc thread however resulted unexpected side effect exhaustion page zone_dma approach touch zfs code consistent right way handle case linux patch lay ground work able safely revert following commits used pf_memalloc 21ade34 disable direct reclaim z_wr_ thread cfc9a5c fix zpl_writepage deadlock eec8164 fix assertion tx_pool signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 726,,
5692,991fc1d7ae2589c01a939a9cbd0e866c90fdd03b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-21 20:53:01 -0700, , mzap_upgrade must use kmem_alloc allocation mzap_update used kmem_alloc changed vmem_alloc due size allocation however since turn function may called context txg_sync thread must changed back use kmem_alloc ensure km_pushpage flag honored signed brian behlendorf behlendorf1 llnl.gov,,
5693,8630650a8d9cfba379a5b73bd95e903d577e0d8d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 11:17:23 -0700, , annotate km_pushpage call path pf_nofs txg_sync zfs_putpage zvol_write zvol_discard call path must use km_pushpage avoid potential deadlock direct reclaim patch annotates call path accidental use km_sleep quickly detected interest stability debugging disabled offending allocation gfp flag automatically corrected debugging enabled misuse treated fatal error patch entirely debugging careful become dependant fixing incorrect allocation signed brian behlendorf behlendorf1 llnl.gov,,
5694,86dd0fd9222b6103c6533036c47b908ece944460,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-19 17:17:02 -0700, , pre allocate vdev buffer vdev queue layer may require small number buffer attempting create aggregate request rather attempting allocate global zio buffer slow memory pressure make sense pre allocate ... buffer short lived required life single point used next maximum number concurrent buffer needed vdev small roughly limited tunable default keeping small list buffer per vdev ensure one always available need significantly reduces contention vq_lock longer need perform slow allocation lock particularly important memory already low system would probably wise extend use buffer beyond aggregate raidz implementation inability quickly allocate buffer parity stripe could result similiar problem signed brian behlendorf behlendorf1 llnl.gov,,
5695,44f21da41c441bfceec7b825991b6e68321d78a2,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-16 18:16:02 -0400,726, revert disable direct reclaim z_wr_ thread commit used pf_memalloc prevent memory reclaim deadlock however commit eliminated invocation __cv_init cause deadlock pf_memalloc side effect permitting page zone_dma allocated use pf_memalloc found cause stability problem swap zvols since technique known cause problem longer fix anything revert signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 726,,
5696,62c4165a1bbfb7d68f8ebf93d32a6fc8ea4d4e33,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-07 14:14:45 -0400,726, revert fix zpl_writepage deadlock commit fix deadlock zpl_writepage relied pf_memalloc effect disabling direct reclaim path allocation originating call function failed address actual cause deadlock led deadlock observed swap zvols swap loop device exercise code use pf_memalloc also side effect permitting allocation made zone_dma instance require contributes possibility panic caused depletion page zone_dma revert patch favor proper fix issue signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 726,,
5697,b876dac776afc8ea2c598eac53b9903de01c6172,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-15 23:19:32 -0400,726, revert fix assertion tx_pool commit worked around issue involving direct reclaim use pf_memalloc since reworking thing use km_pushpage swap work revert patch favor use km_pushpage affected area signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 726,,
5698,cd5ca4b2f86a606aa6ed68341a3672fdde1c9856,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-23 15:36:28 -0700, , switch km_sleep km_pushpage certain circumstance following function may called context km_sleep unsafe result deadlocked system avoid problem unconditional km_sleeps converted km_pushpages prevent attempting initiate direct reclaim signed brian behlendorf behlendorf1 llnl.gov,,
5699,3e904f40b4f24db61798ca8c8a9027731cf2ced6,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-19 12:10:19 -0700, , mutex assert self deadlock generate assertion going deadlock system attempting acquire mutex process already holding currently known instance normal operation _might_ possible using zvol swap device want ensure catch immediately occur signed brian behlendorf behlendorf1 llnl.gov,,
5700,eb0f407a2b9089113ef6f2402ebd887511315b43,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 12:42:28 -0700, , add pf_nofs debugging flag pf_nofs per process debug flag set current flag detect process performing unsafe allocation task pf_nofs set must strictly use km_pushpage allocation enter direct reclaim initiate may deadlock debugging disabled incorrect usage detected call stack warning printed console flag automatically corrected allow safe execution debugging enabled treated fatal condition avoid risk conflicting existing pf_ flag pf_nofs bit shadow rarely used pf_mutex_tester bit set know bit unused pf_nofs bit valid happily existing distribution ship kernel disabled signed brian behlendorf behlendorf1 llnl.gov,,
5701,500e95c884f711883e094b48b58450ce2d80f2ea,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 11:06:21 -0700, , revert disable vmalloc direct reclaim reverts commit use pf_memalloc flag always hack work around memory reclaim deadlock issue believed resolved workaround safely reverted signed brian behlendorf behlendorf1 llnl.gov,,
5702,617f79de6aff55213bf233cf90d4425507acf56e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 11:05:53 -0700, , revert fix null deref balance_pgdat reverts commit use pf_memalloc flag always hack work around memory reclaim deadlock issue believed resolved workaround safely reverted signed brian behlendorf behlendorf1 llnl.gov,,
5703,bc03e07a7c43b134c7936bba5e87fb8a526b6692,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 11:01:22 -0700, , revert detect kernel honor gfp flag passed vmalloc reverts commit longer required spl code place safely handle deadlock kernel patch designed address therefore unconditionally use vmalloc drop pf_memalloc code signed brian behlendorf behlendorf1 llnl.gov,,
5704,d47e664ad4b7468c43a97aa6d299d8756571155d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-18 10:56:17 -0700, , revert add taskq_noreclaim flag reverts commit use pf_memalloc flag always hack work around memory reclaim deadlock issue believed resolved workaround safely reverted signed brian behlendorf behlendorf1 llnl.gov,,
5705,e2dcc6e2b818d6f996203c9f1b4dfaf449554790,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-07 16:59:50 -0700,26, emergency slab object patch designed resolve deadlock occur __vmalloc based slab issue linux kernel doe honor flag passed __vmalloc make unsafe use writeback context unfortunately use case zfs depends correct operation fixing issue upstream kernel pursued patch available resolve issue http bugs.gentoo.org show_bug.cgi 416685 however change rejected upstream felt using __vmalloc context writeback never done solution rewrite part zfs accomidate linux probably right long term solution something want pursue trivial task likely destabilize existing code work planned 0.7.0 release meanwhile want improve spl slab implementation accomidate expected zfs usage accomplished performing __vmalloc asynchronously context work queue prevent posibility worker thread deadlocking however caller safely block wait queue slab allocation complete normally occur reasonable amount time caller woken new slab available object get cached per cpu magazine everything proceed usual however __vmalloc deadlock reason described slow caller wait queue timeout rare situation occurs attempt kmalloc single minimally sized object using gfp_noio flag allocation deadlock kmalloc honor passed flag caller able make forward progress long forward progress maintained even worker thread deadlocked critical thread make progress eventually allow deadlocked worker thread complete normal operation resume emergency allocation likely slow since require contiguous page however use rare impact expected minimal turn case practice optimization possible one additional concern emergency object long lived right simply tracked list must walked object freed accumulate system list grows freeing object become expensive could handled relatively easily using hash instead list optimization needed left follow patch additionally emeregency object could repacked existing slab object freed functionality implemented see issue http github.com zfsonlinux spl issue full detail work would also help reduce zfs memory fragmentation problem proc spl kmem slab file two new column added end emerg column report current number emergency object use cache following max column show historical worst case value give good idea often object needed based value real use case tune default behavior lastly side benefit using single work queue slab allocation reduce cpu contention global virtual address space lock manifest reduced cpu usage system signed brian behlendorf behlendorf1 llnl.gov,,
5706,587045a6386d1e7a6256eb6ef825e046beabd9a3,rakash Surya <surya1@llnl.gov>, 2012-08-22 13:16:02 -0700,164, remove autoconf macro since removing check config_preempt consumer macro reason keep around signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 164,,
5707,f86373f5b2bac3e7cf17a766af5caa5bb7cf8c7a,rakash Surya <surya1@llnl.gov>, 2012-08-24 11:37:44 -0700,83, remove autoconf check config_preempt autoconf macro failed config_preempt set kernel config removed inclusion previous patch targeting support preempt enabled kernel safe run kernel config option enabled signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5708,e3a436070283596bae22773fee3b56d846ab6cec,rakash Surya <surya1@llnl.gov>, 2012-08-22 13:07:05 -0700, , revert make config_preempt fatal reverts commit signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5709,ca8b5af89d2c5826af7385bf18f3b377b0efde11,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-26 18:10:24 -0700,718, remove autotools product remove generated autotools product repository update .gitignore file accordingly signed brian behlendorf behlendorf1 llnl.gov close 718,,
5710,c638e9ad047f5192ee131ed8ec3d9851fbbedd2e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-26 17:38:40 -0700,718, remove autotools product remove generated autotools product repository update .gitignore file accordingly signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 718,,
5711,cd38ac58a36e51cb3d627da57bfb5246e70f276d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-25 15:01:39 -0700,895, rmdir return enotempty solaris behavior rmdir return eexist directory still contains entry however linux enotempty expected return value eexist technically allowed according rmdir enotempty pathname contains entry pathname final component posix.1 2001 also allows eexist condition signed brian behlendorf behlendorf1 llnl.gov close 895,,
5712,c90ea65511b93027dcf7b370457fcbda14103e19,ichard Yao <ryao@cs.stonybrook.edu>, 2012-08-25 17:16:23 -0400,897, consistent menuconfig name make name linux menuconfig consistent filesystems signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 897,,
5713,074e72953cb3229e270e384f4dabd6d05c836060,ichard Yao <ryao@cs.stonybrook.edu>, 2012-08-25 18:32:54 -0400,896, check kernel source directory spl zfs fails build spl built kernel unless spl path kernel source specified fallback kernel source directory spl found elsewhere resolve  signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov closed 896,,
5714,9e11c7eee232b73600c2590c8c3326b2725daba5,hristopher Siden <chris.siden@delphix.com>, 2012-08-24 15:10:22 +0200,3085, illumos 3085 zfs diff panic panic loop booting reviewed matt ahrens matthew.ahrens delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 3085 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5715,c578f007ff9d8ee3d5070960f787fa48d46b7c3c,imon Klinkert <klinkert@webgods.de>, 2012-06-22 10:17:50 -0400,2901, illumos 2901 zfs receive fails exabyte sparse file reviewed matthew ahrens mahrens delphix.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 2901 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5716,a47587389e98820ea194fd16cd658491f8e4ee31,aven Wu <wu.javen@gmail.com>, 2012-08-24 19:24:48 -0700,513, drop spill buffer reference calling sa_update friend possible spill buffer needed accomidate update happens hold taken new dbuf hold must released calling dmu_tx_commit failing release hold cause copy dbuf made dbuf_sync_leaf done ensure update dbuf never sneak syncing txg could left sa_update caller caller would need aware internal implementation detail therefore preferable handle internally implementation signed brian behlendorf behlendorf1 llnl.gov close 503 close 513,,
5717,f828e63a0d408160cff9403f1c8991609f17011d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-23 20:46:38 -0700,727, revert use sa_hdl_private xattrs reverts commit caused consistency problem shared private handle reverting change resolve issue 709 727. also reintroduce arc_anon memory leak addressed next commit signed brian behlendorf behlendorf1 llnl.gov close 709 close 727,,
5718,45324c7c419b70397cae31b9f2b90ca0a97c9d77,rakash Surya <surya1@llnl.gov>, 2012-08-24 10:42:12 -0700,98, add kpreempt_ dis able macro sys disp.h support preempt enabled kernel zfs linux couple place zfs code need disable interrupt change add solaris preempt function map equivalent zfs function allowing zfs make use signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5719,15a9e03368d8f186751a432740a5a281f45d712d,rakash Surya <surya1@llnl.gov>, 2012-08-23 17:45:31 -0700,83, wrap kpreempt_ dis able surveying code place used deemed safe use preempt enabled kernel core logic changed call site simply wrapped prevent linux kernel emitting scary warning signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao issue,,
5720,08850eddcb128cbdca584255324d71dfee2ccba9,rakash Surya <surya1@llnl.gov>, 2012-08-23 14:00:58 -0700,98, avoid calling function implied assumption remain current cpu execution order support preempt enabled kernel assumption removed structure hold cpu cpu local allows use field scheduling work done magazine local cpu signed brian behlendorf behlendorf1 llnl.gov issue,,
5721,52cd92022eaf8f105510df708d234012cbe5078d,assimo Maggi <massimo@mmmm.it>, 2012-08-23 14:52:45 +0200,884, fix snapshot automounting grsecurity constify plugin configure erroneously detects absence dops d_automount built grsecurity patched kernel summerized error message found config.log checking whether dops d_automount exists ... function main ... error constified variable dops local dops variable local variable moved global scope test also fails prototype dops d_automount function pointer changed signed massimo maggi massimo mmmm.it signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao close 884,,
5722,15d0411297113cb2681f5522ed373d4d37fcf132,ichard Yao <ryao@cs.stonybrook.edu>, 2012-08-16 14:55:42 -0400,152, remove makefile non toplevel .gitignore file building spl support kernel copy builtin copy non toplevel .gitignore file file list makefile cause git archive omit module spl splat makefile absence file result build failure spl selected zfs unaffected put makefile toplevel .gitignore copied fix spl emulating behavior reported fabio erculiani lxnay gentoo.org signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 152,,
5723,08b1b21d58b1ae8a67fec38ccda02489c4aa8115,arrett D'Amore <garrett@damore.org>, 2012-06-06 10:01:43 -0700,2803, illumos 2803 zfs get guid pretty print output reviewed eric schrock eric.schrock delphix.com reviewed richard elling richard.elling gmail.com reviewed alexander eremin nexenta.com approved dan mcdonald danmcd nexenta.com reference http www.illumos.org issue 2803 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5724,e956d6510699b0c1aa757b1fb0c1ee9feb7419f7,hristopher Siden <chris.siden@delphix.com>, 2012-07-12 05:32:45 -0700,2957, illumos 1796 2871 2903 2957 1796 zfs hold used zfs send read pool 2871 support used zfs test suite 2903 zfs destroy doe work 2957 zfs destroy sometimes fails removing defer destroyed snapshot reviewed matthew ahrens mahrens delphix.com reviewed george wilson george.wilson delphix.com approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 1796 http www.illumos.org issue 2871 http www.illumos.org issue 2903 http www.illumos.org issue 2957 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5725,db49968e5ca7814bf833477f27c148208a835a7d,ric Schrock <Eric.Schrock@delphix.com>, 2012-04-27 11:14:46 -0700,717, illumos 2635 zfs rename perform force unmount reviewed matt ahrens matt delphix.com reviewed george wilson george.wilson delphix.com reviewed bill pijewski wdp joyent.com reviewed richard elling richard.elling approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 2635 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 717,,
5726,e346ec25af02c6a7820e7c2a0da71b451a4be70f,ndrew Stormont <andrew.stormont@nexenta.com>, 2012-02-16 22:14:36 +0000,681, illumos 1936 add support datatype argument zfs get reviewed kartik mistry kartik nexenta.com reviewed dan mcdonald danmcd nexenta.com reviewed richard elling richard.elling gmail.com reviewed garrett amore garrett damore.org approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 1936 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 681,,
5727,684e8c06431df0f8cb67b98330ff89ff4f69d95e,lexander Eremin <a.eremin@nexenta.com>, 2011-11-28 02:13:54 -0800,1726, illumos 1726 removal pyzfs broke delegation volume reviewed andrew stormont andyjstormont googlemail.com reviewed garrett amore garrett nexenta.com reviewed richard lowe richlowe richlowe.net reviewed albert lee trisk nexenta.com approved garrett amore garrett nexenta.com reference http www.illumos.org issue 1726 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5728,79e722432f92df5db2db99ca113d6052937eb637,lexander Eremin <a.eremin@nexenta.com>, 2012-01-16 17:07:04 +0400,1977, illumos 1977 zfs allow argument parsed correctly pyzfs removal reviewed garrett amore garrett.damore gmail.com reviewed albert lee trisk nexenta.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 1977 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov,,
5729,9baf44bc17ddbc01dae4feacda32e04aac73f730,rakash Surya <surya1@llnl.gov>, 2012-08-22 12:30:59 -0700,160, wrap trace_ get put _tcd properly support config_preempt enabled kernel must refrain using cpu index preemption enabled result change move call call within trace_get_tcd trace_put_tcd disable enable preemption respectively signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 160,,
5730,039bae18ca3037124cd99384e782e3a2dc3e13f7,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-23 09:46:38 -0700,159, add copy builtin extra_dist copy builtin script accidentally included tarballs signed brian behlendorf behlendorf1 llnl.gov close 159,,
5731,56b45e698d454150d88368427fad97fc0a726014,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-23 09:49:54 -0700,880, add copy builtin extra_dist copy builtin script accidentally included tarballs signed brian behlendorf behlendorf1 llnl.gov close 880,,
5732,cf997d797b49384572c23b6b605bf72bd1415b35,artin Matuska <martin@matuska.org>, 2012-08-21 23:42:00 +0200,876, properly initialize free destroydata regression accidentally introduced commit due zol specific code fix simply ensure passed nvlist initialized freed signed brian behlendorf behlendorf1 llnl.gov close 876,,
5733,4276c6f576d396b8c902da6cb168e64b2cff233e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-13 10:20:51 -0700, , zfs 0.6.0 rc10,,
5734,4047414a6a340dff5fd52d48b163991bc9760ad2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-14 08:35:32 -0700, , export dmu_buf_rele symbol like remove various pragmas module zfs dbuf.c consumer lustre still depend dmu_buf_ version symbol consumer converted use dbuf_ name leave symbol exported signed brian behlendorf behlendorf1 llnl.gov,,
5735,9ca431763e2db4c05858ed7dc578a8d6dbcc54d6,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-13 15:47:18 -0700, , cleanly remove zfs module devel header add usr src zfs version release kernel directory zfs module devel package ensures directory removed package removed include higher level usr src zfs version release directory since may build multiple kernel instead postun rmdir added attempt remove directory succeed last zfs module devel package specific release removed signed brian behlendorf behlendorf1 llnl.gov,,
5736,3a9c241e555e98d364f1152c6cf22d091b7288b6,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-13 10:19:22 -0700, , spl 0.6.0 rc10,,
5737,36798290928c4643f1be5e9d300f02846de12480,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-13 16:23:45 -0700, , cleanly remove spl module devel header add usr src spl version release kernel directory spl module devel package ensures directory removed package removed include higher level usr src spl version release directory since may build multiple kernel instead postun rmdir added attempt remove directory succeed last spl module devel package specific release removed signed brian behlendorf behlendorf1 llnl.gov,,
5738,bafc4e9e2ac3b4783a598afb1d2f048ab30c903c,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-10 16:39:39 -0700,628, suppress zfs_sb_create memory warning mutex debugging enabled kernel increased size mutex structure push zfs_sb_t type beyond warning threshold harmful suppress warning case signed brian behlendorf behlendorf1 llnl.gov close 628,,
5739,bb8b81ec6250086dd022d49c603104274ce08e09,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-10 16:30:13 -0700,683, illumos 1888 zfs mention zfs recv reviewed garrett amore garrett damore.org reviewed eric schrock eric.schrock delphix.com reviewed gordon ross gordon.w.ross gmail.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 1888 ported brian behlendorf behlendorf1 llnl.gov close 683,,
5740,246b0f5a1658de4a8caf75c2e0712633e97b25dc,ed Bass <bass6@llnl.gov>, 2012-08-10 11:47:07 -0700,353, fix man page installation path rpm version 4.8 4.9 differ definition macro _mandir rpm version rpm showrc grep ._mandir rpm version 4.9.0 _mandir _prefix share man rpm version rpm showrc grep ._mandir rpm version 4.8.0 _mandir usr share man zfs.spec.in defines _prefix man page end getting installed share man rpm 4.9 system fix define _mandir relative _datadir spec file signed brian behlendorf behlendorf1 llnl.gov close 353,,
5741,8f576c232106b2278f03be06554044eed762641b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-08-10 16:28:37 -0700, , export dbuf_ symbol export symbol may used zfs consumer besides zpl remove three stale prototype definites dbuf.h actual implementation function removed renamed long ago would good long term remove existing pragmas inherited solaris simply use dbuf_ name signed brian behlendorf behlendorf1 llnl.gov,,
5742,26e08952e6ad113b91ae7d31263b6a4fd3a5a09f,rakash Surya <surya1@llnl.gov>, 2012-08-07 13:13:17 -0700,535, support building zfs module dkm sub package commit add support building zfs module dkm sub package built around dynamic kernel module support allow building package using dkm infrastructure intended ease burden kernel version change upgrade etc default zfs module dkm sub package built part make rpm target alternately build dkm module package using make rpm dkm target example build packaged binary well dkm package configure make rpm build packaged binary utility dkm package configure make rpm utils rpm dkm note rhel chaos fedora distribution supported building dkm sub package signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 535,,
5743,5085d55817f67e2333366e517c6cc7a6fdda50f7,rakash Surya <surya1@llnl.gov>, 2012-08-07 17:07:55 -0700, , add spl timeout option checking spl module.symvers file timeout passed pause configure step wait file generated default configure behavior unchanged timeout used positive number second passed configure wait number second module.symvers file moving main motivation change support parallel execution configure make spl zfs package preparation supporting dkm based package signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5744,d83d25c2f81b2f7771d338ae03ea184b9e7ac40f,rakash Surya <surya1@llnl.gov>, 2012-08-07 13:57:03 -0700,535, support building spl module dkm sub package commit add support building spl module dkm sub package built around dynamic kernel module support allow building package using dkm infrastructure intended ease burden kernel version change upgrade etc default spl module dkm sub package built part make rpm target alternately build dkm module package using make rpm dkm target example build packaged binary well dkm package configure make rpm build packaged binary utility dkm package configure make rpm utils rpm dkm note rhel chaos fedora distribution supported building dkm sub package signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 535,,
5745,d96eb2b1538db13ee7a716ec0e1162f5735edc12,an McDonald <danmcd@nexenta.com>, 2011-11-15 14:01:27 -0500,678, illumos 1693 persistent comment field zpool reviewed george wilson gwilson zfsmail.com reviewed eric schrock eric.schrock delphix.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 1693 ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 678,,
5746,ee5fd0bb80d68ef095f831784cbb17181b2ba898,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-08-01 10:29:59 +0200,862, set zvol volblocksize currently zvols discard granularity set suggests upper layer discard request arbirarily small size alignment made efficiently practice however zfs doe handle unaligned discard request efficiently indeed unable free part block write zero specified range instead useless inefficient see patch zvol block device expose volblocksize discard granularity upper layer aware supposed send discard request smaller volblocksize signed brian behlendorf behlendorf1 llnl.gov close 862,,
5747,9a512dca97fec1afa5068b53621ce1dd7dbef578,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-29 05:43:57 -0400,854, add missing dependency copy builtin zfs depends efi_partition zlib_deflate zlib_inflate zfs integrated kernel source tree menuconfig doe enforce dependency cause build failure case zlib_deflate zlib_inflate symbol found also cause runtime failure case efi_partition kernel understand gpt partition creating pool raw disk solve making menuconfig aware dependency signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 854,,
5748,476ff5a4daf804c28c87a0bb4a833e09eb01a050,tienne Dechamps <e-t172@akegroup.org>, 2012-08-02 15:33:31 +0200,148, handle prototype comment commit mmatuska reported test broken take two argument patch fix issue resorting another approach detecting simply check defined macro concludes available continue work even prototype change time signed brian behlendorf behlendorf1 llnl.gov close 148,,
5749,6576a1a70dedfc7d5a5e1533a9e3e56074de4c79,ichard Yao <ryao@cs.stonybrook.edu>, 2012-08-01 02:00:40 -0400, , fix incorrect type parameter preprocessor definition render harmless however good idea change consistent signed richard yao ryao,,
5750,7c0e570888532b3cecf66459e55688df18946be0,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-31 10:45:37 +0200,858, limit number block discard number block discarded one blkdiscard ioctl zvol currently unlimited application mkfs discard whole volume use maximum possible discard size result several gigabyte discard request uncommon unfortunately large amount data allocated zvol zfs quite slow process discard request especially true volblocksize low e.g default result large discard request take long time second minute heavy load complete cause number problem notably zvol accessed remotely e.g via iscsi case client high probability timing request patch solves issue adding new tunable module parameter indicates maximum possible range zvol block one discard operation set default 16384 block appears good tradeoff using default volblocksize equivalent 128 using maximum volblocksize 128k equivalent signed brian behlendorf behlendorf1 llnl.gov close 858,,
5751,330d06f90d143b41b276796526a66a1c1fff046d,atthew Ahrens <matt@delphix.com>, 2011-11-17 10:14:36 -0800,664, illumos 1644 1645 1646 1647 1708 1644 add zfs clone property 1645 add zfs written written ... property 1646 zfs send estimate size stream 1647 zfs destroy determine space reclaimed destroying multiple snapshot 1708 adjust size zpool history data reference http www.illumos.org issue 1644 http www.illumos.org issue 1645 http www.illumos.org issue 1646 http www.illumos.org issue 1647 http www.illumos.org issue 1708 commit modifies user kernel space ioctl abi extra care taken updating ensure kernel module utility updated change reordered new ioctl end list help minimize issue future reviewed richard lowe richlowe richlowe.net reviewed george wilson gwilson zfsmail.com reviewed albert lee trisk opensolaris.org approved garrett amore garret nexenta.com ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 826 close 664,,
5752,7eebaff409d969394dccb9b12e30aef466cc04b2,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2012-07-23 12:26:17 -0700,847, adding grub2 mkconfig support patch added simply convenience equivilant change merged upstream grub2 source signed brian behlendorf behlendorf1 llnl.gov issue 847,,
5753,c171ea71bbedde9c30c39ce96d555bfd585e49a2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-30 15:38:02 -0700,847, allow remount non legacy datasets done compatibility existing linux infrastructure particular using zfs root filesystem init script part shutdown remount root read also new systemd infrastructure used fedora expects able remount file system read write signed brian behlendorf behlendorf1 llnl.gov issue 847,,
5754,4ab8a725ce8a2bcf26a9df6902f8ee893e62fe6e,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-26 15:37:13 -0700,851, merge branch builtin clean support tree builtin module building commits add support compiling zfs module built kernel module copying module code kernel source tree procedure create kernel configuration .config file usual done first zfs configure script able detect kernel feature correctly run make prepare script inside kernel source tree run configure enable linux builtin linux usr src linux ... inside zfs directory run copy builtin usr src linux ... inside zfs directory kernel source tree enable config_zfs option e.g using make menuconfig note option depends config_spl see zfsonlinux spl build kernel usual zfs module parameter set boot time using following syntax kernel command line parameter_value note also need rebuild userspace tool see zfsonlinux zfs signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5755,744038069d3dc65e721b5b8cc5c37d8c7fcbd8c0,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-26 15:30:47 -0700,851, merge branch builtin clean support tree builtin module building commits add support compiling spl module built kernel module copying module code kernel source tree procedure create kernel configuration .config file usual done first spl configure script able detect kernel feature correctly run make prepare script inside kernel source tree run configure enable linux builtin linux usr src linux ... inside spl directory run copy builtin usr src linux ... inside spl directory kernel source tree enable config_spl option e.g using make menuconfig build kernel usual spl module parameter set boot time using following syntax kernel command line parameter_value signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5756,a9f2397ee9f8c1e2c18072361f1f819155242ed2,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-05 09:22:03 +0200,851, determine hostid demand currently spl try determine hostid module load hostid usually determined running userland program hostid module initialization unfortunately module initializes may way soon able run userland program especially true module compiled directly inside kernel built case spl would try run hostid kernel still initializing course doomed fail patch fix issue deferring hostid generation something actually need hostid zone_get_hostid called thus switching initialization model demand lazy loading model zfs need hostid pool operation requested always happens way kernel finished initialization thus solving problem signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5757,c167aadb27d51b7be9ee7bd582e2795061a68480,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-09 11:10:31 +0200,851, add script builtin module building commit introduces copy builtin script designed prepare kernel source tree building spl builtin module script make full copy needed file thus making kernel source tree fully independent spl source package achieve compilation flag include moved module makefile makefile used compiling external module compiling builtin module kbuild file generated configure builtin script used instead make sure makefiles inside kernel source tree doe contain reference spl source package signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5758,723aa3b0c2eed070f7eeadd2ce2d87f46da6d0f8,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-16 17:04:05 +0200,851, checking symbol export try compiling patch add new autoconf function new function doe following call specified parameter unsuccessful return false successful configuring enable linux builtin return true else call specified parameter return result call converted test work even configuring builtin kernel loadable module support built yet exception even public header include test case okay considering symbol ignored fine legacy api 2.6.18 kernel since kernel old longer supported arguably removed entirely build system note also checking correct prototype actual call case however complicated test case like multiple symbol version e.g vfs_fsync stick original behavior check function existence signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5759,df7cc5bc7111ab7cef6e89522685c6b8dd4bb95c,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-16 09:29:05 +0200,851, fake modpost stage linux_compile currently building test case compiling entire linux module beginning end includes modpost stage generates conftest.mod.c file boilerplate module declaration code pose problem configuring built kernel loadable module support disabled case conftest.mod.c referencing disabled code resulting compilation failure thus breaking test patch fix issue faking modpost stage enable linux builtin option provided doe forcing modpost command bin true using empty conftest.mod.c file test module still compiles fine although result loadable really care point note important preserve modpost stage building tree allows posibility configure check leverage phase identify gpl symbol signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5760,0408008b33049dde7e1ec16af7806d2e57bab064,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-16 16:34:43 +0200,851, make configure builtin aware patch add new option configure enable linux builtin option used following happens compilation kernel module disabled failure find uts_release followed suggestion run make prepare kernel source tree patch also add new test try compile empty module basic toolchain sanity test fails option specified error followed suggestion run make script kernel source tree signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5761,38b5ff4d07146ad2359018c3f4707125d38c421f,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-16 16:33:40 +0200,851, fix undefined reference commit changed set condition would implemented function changing sys mutex.h corresponding implementation file spl mutex.c however updated reflect change result undefined reference error following condition config_smp have_task_curr patch fix issue using sys mutex.h spl mutex.c signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5762,016432fbeb625f3588039017c682f5df260c86d4,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-17 10:08:22 +0200,851, build package selected currently configure config used selective compilation effective simple make case package builder e.g make rpm still build everything utils module patch fix  patch also drop duplicate rpm module build target signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov issue zfsonlinux zfs 851,,
5763,94aac9c9bcd1a222ac87d7452afa5284c16229bc,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-05 10:23:42 +0200,851, use module variable module makefile like zfs zfs module makefile contains module variable contains name module following declaration reference variable spl module variable never used rename module use like zfs improves consistency two build system signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 851,,
5764,f09398cec665259a4c2f96726680fbd3b0a3bac3,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-04 15:56:40 +0200,851, use sys module instead proc module libzfs check module loaded currently read proc module search line matching module name unfortunately module included kernel built module proc module list libzfs wrongly conclude module loaded thus making zfs userspace tool unusable fortunately loaded module appear directory sys module even built one thus use sys module lieu proc module fix issue bonus code checking becomes much simpler signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5765,2ee4a18b2ac9c155e099db06cec320bd8cee3150,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-09 11:23:00 +0200,851, add script builtin module building commit introduces copy builtin script designed prepare kernel source tree building zfs builtin module script make full copy needed file thus making kernel source tree fully independent zfs source package achieve compilation flag include moved module makefile makefile used compiling external module compiling builtin module kbuild file generated configure builtin script used instead make sure makefiles inside kernel source tree doe contain reference zfs source package signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5766,705741827ab55e7d92c3eb74f332a5ddd24971b5,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-25 14:38:58 -0700,851, checking symbol export try compiling patch add new autoconf function new function doe following call specified parameter unsuccessful return false successful configuring enable linux builtin return true else call specified parameter return result call converted test work even configuring builtin kernel loadable module support built yet signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5767,fc88a6dda92a4fc00491a8afa24d144cc94063e4,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-16 09:37:38 +0200,851, fake modpost stage linux_compile currently building test case compiling entire linux module beginning end includes modpost stage generates conftest.mod.c file boilerplate module declaration code pose problem configuring built kernel loadable module support disabled case conftest.mod.c referencing disabled code resulting compilation failure thus breaking test patch fix issue faking modpost stage enable linux builtin option provided doe forcing modpost command bin true using empty conftest.mod.c file test module still compiles fine although result loadable really care point note important preserve modpost stage building tree configure check depend identify gpl symbol signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5768,319a99a3d440480fe9c37f637cb9cac8e0f20ded,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-17 10:36:43 +0200,851, make configure builtin aware patch add new option configure enable linux builtin option used following happens compilation kernel module disabled failure find uts_release followed suggestion run make prepare kernel source tree patch also add new test try compile empty module basic toolchain sanity test fails option specified error followed suggestion run make script kernel source tree signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5769,b2c5198b1996c9053c1bae38755f76125c8cb169,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-17 11:23:09 +0200,851, build package selected currently configure config used selective compilation effective simple make case package builder e.g make rpm still build everything utils module patch fix  signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 851,,
5770,739a1a82e0f366923e8d9bc8f9ad4b1c680a780b,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-23 11:39:25 -0700,784, linux 3.5 compat end_writeback changed clear_inode end_writeback function changed moving call inode_sync_wait earlier evict effecitvely change ordering sync doe impact detail zfs implementation however part change end_writeback renamed clear_inode reflect new semantics change doe impact clear_inode map end_writeback kernel prior 3.5 signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 784,,
5771,ea1fdf46e2d37e9eb048f9add0fb06e77e9ee6e2,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-23 11:11:25 -0700,784, linux 3.5 compat iop truncate_range removed support removed kernel favor using fallocate method file_operations table signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 784,,
5772,756c3e5a9ce36461939a8dc421918e1c3a379fa6,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-23 10:55:48 -0700,784, linux 3.5 compat eops encode_fh take inodes member encode_fh updated take child parent inodes interface used take child dentry bool describing parent needed note updating code noticed currently cleanly handle case passed connectable parent code audited make sure right thing signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 784,,
5773,ed3fc80048f1d11f0b77382f5c378bb4c11787fd,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-19 18:37:56 -0400,809, fix null pointer dereference pax grsecurity patched linux 3.3 later kernel support pax grsecurity patched kernel developed linux 3.2. unfortunately autotools check introduced linux 3.3 api fails pax grsecurity patched kernel cause module built linux 3.2 abi result null pointer dereference runtime signed brian behlendorf behlendorf1 llnl.gov signed richard yao ryao close 794 close 809,,
5774,fc173c85892841c283aac4e5174d6d8762463062,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-19 14:50:25 -0700, , disable .zfs directory bit system .zfs control directory implementation currently relies fact direct mapping object inode number work well long system bit value store inode number unfortunately linux kernel defines inode number unsigned long type mean bit system bit inode number still bit object problem particularly acute .zfs directory leverage upper bit done avoid conflicting object allocated monotonically starting likely also problem datasets bit system billion file right long term fix must remove simple mapping done safe thing disable .zfs directory bit system signed brian behlendorf behlendorf1 llnl.gov,,
5775,e8267acd25ad566218187716739f0aec5d442e3f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-20 11:12:19 -0700, , bit compat hostid_read explicitly cast sizeof hostid_read prevent following compiler warning bit system module spl spl generic.c 490 error format expects argument type long unsigned int argument type unsigned int werror format signed brian behlendorf behlendorf1 llnl.gov,,
5776,2a4a9dc2f09d7672268af4a4f70e1a26b481b5e9,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-19 14:50:25 -0700, , add ddt_object_load error handling add missing error handling ddt_object_load good reason need fatal preferable error returned allow zpool import safely attempt rollback previous txgs looking good one signed brian behlendorf behlendorf1 llnl.gov,,
5777,10be533e3344f523e1b8d6ab4f0658897a95ac02,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-18 16:56:24 -0700, , add inline keyword __attribute__ always_inline doe strictly imply inline newer version gcc detect misuse issue following warning including missing inline resolve build warning module zfs dsl_scan.c 758 error always_inline function might inlinable werror attribute signed brian behlendorf behlendorf1 llnl.gov,,
5778,0a6b03d3b87cf17ac6159395df93ba3fcfdddc45,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-30 23:25:31 -0400,484, fix build failure pax grsecurity patched kernel gentoo hardened kernel include pax grsecurity patch use dialect relies gcc plugin particular struct file_operations marked do_const pax grsecurity dialect cause gcc consider instance const caused failure autotools check zfs source code address modify autotools check take account difference pax dialect regular dialect also modify struct zfs_acl z_ops member pointer function pointer table lastly modify zpl_put_link address pax change function prototype nd_get_link avoids compiler error pax grsecurity dialect note change zpl_put_link cause warning becomes build failure debugging enabled fixing warning requires ryao spl signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 484,,
5779,b5a28807cdec3c05aa69cbe4689cd914dc94783a,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-11 15:06:32 +0200,808, move partition scanning userspace module currently zpool online dynamic vdev expansion work whole disk invoking ioctl blkrrpart userspace zfs still partition open disk result ebusy patch move blkrrpart invocation zpool utility module specifically done opening device vdev_disk_open called inside vdev_reopen requires jumping hoop get disk device partition device make sure still open partition blkrrpart call note new code path triggered dynamic vdev expansion action like creating new pool unchanged still call blkrrpart userspace change also depends api change available 2.6.37 latter kernel build system updated detect compatibility mode older kernel mean online expansion available older kernel however still possible expand vdev offline signed brian behlendorf behlendorf1 llnl.gov close 808,,
5780,d503b971f4848f1b9d654684f1b3c864baad5d88,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-13 12:49:40 -0700, , optimize compatibility function observed hot spot root cause must check rwsem activity rwsem wait_lock avoid race lock busy significant contention occur upstream kernel fix race insight using contention could avoided lock contended reasonable return locked change update spls implemention like upstream kernel since kernel code use year low risk change signed brian behlendorf behlendorf1 llnl.gov,,
5781,fb7eb3e3e9f8e611a34192ceb5c2d2e849ca6de8,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-12 12:21:25 -0700, , move zfs.release generation configure step previously zfs.release file created make install time slightly problematic file needed without running make install step creating file removed make install replaced appropriate zfs.release.in file result zfs.release file created earlier part configure step opposed make install step signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5782,d801db1487205365b268efab4700e3541adab493,rakash Surya <surya1@llnl.gov>, 2012-07-11 15:47:56 -0700,135, move spl.release generation configure step previously spl.release file created make install time slightly problematic file needed without running make install step creating file removed make install replaced appropriate spl.release.in file result spl.release file created earlier part configure step opposed make install step signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 135,,
5783,7535251dcf39cc648ea303ee52e128ad967fad85,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-12 11:34:43 -0700, , add powerpc supported vtocs code inherited solaris careful define expected vtoc various supported architecture check may made sense something able safely drop linux however quite ready yet moment safe thing adding powerpc supported type signed brian behlendorf behlendorf1 llnl.gov,,
5784,cee43a7477501669920445f29990443679142336,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-11 17:47:10 +0200,808, fix efi_nparts 128 commit e5dc681a changed efi_numpar 128. mean disk efi label efi_nparts 128 instead index reserved partition however still break efi_nparts index reserved partition commit fix index reserved partition efi_nparts rewrite algorithm make robust using order partition instead numbering assumes last non empty partition reserved partition non empty partition data partition signed brian behlendorf behlendorf1 llnl.gov issue 808,,
5785,7608bd0dd01829a130cd8a4d244e197ce8fa590a,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-06 16:22:03 +0200,808, use right device path relabeling currently call short partition device name obviously wrong expects full absolute path use open efi_write must called opened disk device partition device patch get called full disk device path path determined using algorithm zpool_find_vdev signed brian behlendorf behlendorf1 llnl.gov issue 808,,
5786,8adf48642253c2ef9571ece5b233e0bf1f0217a8,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-07-06 15:44:14 +0200,808, fix error handling zpool online error handling code around either inexistent wrong function call checked generating error message unitialized buffer  zpool online homez sdb echo relabel sdb1 unable open device   zpool online homez sdb echo expand sdb relabel sdb1 unable open device  signed brian behlendorf behlendorf1 llnl.gov issue 808,,
5787,c7f2d69de397b02cc803f541dd2d405e0c284e76,eorge Wilson <george.wilson@delphix.com>, 2012-07-11 13:02:44 -0700,665, illumos 1949 1953 1949 crash reguid cause stale config 1953 allow unallow missing zpool history since removal pyzfs reviewed adam leventhal ahl delphix.com reviewed matt ahrens matt delphix.com reviewed eric schrock eric.schrock delphix.com reviewed bill pijewski wdp joyent.com reviewed richard lowe richlowe richlowe.net reviewed garrett amore garrett.damore gmail.com reviewed dan mcdonald danmcd nexenta.com reviewed steve gonczi gonczi comcast.net approved eric schrock eric.schrock delphix.com reference http www.illumos.org issue 1949 http www.illumos.org issue 1953 ported brian behlendorf behlendorf1 llnl.gov close 665,,
5788,3541dc6d02592bd0939ea2d35b50c2bbdcc4cd0e,arrett D'Amore <garrett@nexenta.com>, 2011-11-11 14:07:54 -0800,665, illumos 1748 desire support reguid zfs reviewed george wilson gwilson zfsmail.com reviewed igor kozhukhov ikozhukhov gmail.com reviewed alexander eremin nexenta.com reviewed alexander stetsenko nexenta.com approved richard lowe richlowe richlowe.net reference http www.illumos.org issue 1748 commit modifies user kernel space ioctl abi extra care taken updating ensure kernel module utility updated user space component updated zpool event command zpool reguid command work kernel module updated ported martin matuska martin matuska.org signed brian behlendorf behlendorf1 llnl.gov close 665,,
5789,36811b4430aaea8c8b91bbe7d812a26799865499,ichard Yao <ryao@cs.stonybrook.edu>, 2012-06-06 22:38:12 -0400,126, detect kernel honor gfp flag passed vmalloc zfsonlinux spl used pf_memalloc workaround bug linux kernel allocation honor gfp flag passed vmalloc unfortunately pf_memalloc side effect permitting allocation allocate page outside zone_normal observed result depletion zone_dma32 kernel patch available gentoo bug tracker issue http bugs.gentoo.org show_bug.cgi 416685 negates benefit pf_memalloc provides introduce autotools check disable use pf_memalloc system patched kernel signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 126,,
5790,ba9b5428fd1d7bab68138a1442cd918d0f90200c,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-10 09:27:09 -0400,819, relicense zfs.gentoo.in gplv2 clause bsd gentoo sys zfs maintainer receive license compatibility question time question harassing feel presence gpl gentoo package metadata promotes question zfs.gentoo.in gplv2 licensed file zfs taken liberty contacting contributor file request permission relicense contributor file agreed relicense clause bsd license added signed offs commit order first contribution thank everyone understanding signed devsk devsku gmail.com signed alexey shvetsov alexxy gentoo.org signed brian behlendorf behlendorf1 llnl.gov signed andrew tselischev gmail.com signed zachary bedell zac thebedells.org signed gunnar beutner gunnar beutner.name signed kyle fuller inbox signed richard yao ryao close 819,,
5791,a3873583c2128c6a41e640fe35f544f8c54848d8,ichard Yao <ryao@cs.stonybrook.edu>, 2012-07-09 19:41:28 -0400,813, use ull suffix constant lack ull suffix cause warning following bit system function zfs 0.6.0 module zfs zfs_ctldir.c 151 warning integer constant large long type add ull suffix fix signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 813,,
5792,973e8269bd99f9440149892d598f8914113d0278,ichard Yao <ryao@cs.stonybrook.edu>, 2012-06-25 13:22:21 -0400,131, constify memory management function prevents warning zfs caused change necessary support pax patched kernel debugging enabled warning become build failure signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 131,,
5793,42d3b990cfba9906e25bbf6b60e96389244f8082,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-03 14:47:57 -0700, , update incorrect ddt_zap_lookup assertion ddt_zap_lookup function updated dynamically allocate memory cbuf variable save stack space csize sizeof cbuf assertion updated result size pointer used comparison rather buffer size signed brian behlendorf behlendorf1 llnl.gov signed prakash surya surya1 llnl.gov,,
5794,33f507c0f3fb9976274bcf081bc0ce6fc3d5a771,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-02 11:27:45 -0700, , remove chaos 4.x rpm support chaos 4.x distribution based rhel 5.x longer supported zol since 2.6.18 kernel signed brian behlendorf behlendorf1 llnl.gov,,
5795,fa881d4addb7baa44c69350b91bdf0503221d7af,rian Behlendorf <behlendorf1@llnl.gov>, 2012-07-02 15:16:05 -0700, , remove chaos 4.x rpm support chaos 4.x distribution based rhel 5.x longer supported zol since 2.6.18 kernel signed brian behlendorf behlendorf1 llnl.gov,,
5796,1a3a73d5d3910bc5b1231c1c3c6b813cec5089a6,rakash Surya <surya1@llnl.gov>, 2012-05-11 12:12:08 -0700, , support debug debug devel sub package commit add support building debug debug devel sub package zfs module main package allow building package built debug kernel default package built regular non debug kernel toggled passing kernel debug parameter rpmbuild example build package non debug kernel rpmbuild rebuild kernel without kernel debug srpm build package debug kernel rpmbuild rebuild without kernel kernel debug srpm build package debug non debug kernel rpmbuild rebuild kernel kernel debug srpm note rhel chaos fedora distribution supported building debug debug devel package signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5797,92c2f755ee063f3a010b47577c3479ad42f6e368,rakash Surya <surya1@llnl.gov>, 2012-05-07 11:26:05 -0700,115, support debug debug devel sub package commit add support building debug debug devel sub package spl module main package allow building package built debug kernel default package built regular non debug kernel toggled passing kernel debug parameter rpmbuild example build package non debug kernel rpmbuild rebuild kernel without kernel debug srpm build package debug kernel rpmbuild rebuild without kernel kernel debug srpm build package debug non debug kernel rpmbuild rebuild kernel kernel debug srpm note rhel chaos fedora distribution supported building debug debug devel package signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue 115,,
5798,44e406d712bedc893e053ab3a7db8ff8a8be0790,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-29 11:54:52 -0700,119, powerpc compatibility usage get_current supported across architecture correct interface use define current map appropriate function usually signed brian behlendorf behlendorf1 llnl.gov close 119,,
5799,b6ad9671acdd245385744bcc1fe6c0f21f252570,tienne Dechamps <etienne.dechamps@ovh.net>, 2012-06-15 16:22:14 +0200,786, add zil statistic performance zil usually main bottleneck dealing synchronous write heavy workload e.g database understanding behavior zil required diagnose performance issue workload tune zil parameter like zil_slog_limit accordingly commit add new kstat page dedicated zil counter hopefully scheds light zil  currently statistic available proc spl kstat zfs zil description field found zil.h signed brian behlendorf behlendorf1 llnl.gov close 786,,
5800,7164d092210f122a4564ab37fb4fce476ec4485f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-14 11:46:40 -0700, , zfs 0.6.0 rc9,,
5801,50fe7a010c085f672d8dc6b8ef44fcadf4f704b0,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-14 11:45:11 -0700, , spl 0.6.0 rc9,,
5802,0cee24064a79f9c01fc4521543c37acea538405f,awel Jakub Dawidek <pawel@dawidek.net>, 2012-05-29 10:50:50 -0700,450, speed zfs list snapshot name name freebsd xxx dramatically optimize listing snapshot user request snapshot name want sort name executes zfs list snapshot name name name needed read snapshot property find long doe take list 34509 snapshot single disk pool change cold warm cache  time zfs list snapshot name name dev null cold cache 525s warm cache 218s  time zfs list snapshot name name dev null cold cache 1.7s warm cache 1.1s note patch appears freebsd illumos pick change may want drop patch adopt version however address real issue ported brian behlendorf behlendorf1 llnl.gov issue 450,,
5803,74497b7ab6af69434453e03c755d3f6e6e655aee,arik Horn <dajhorn@vanadac.com>, 2012-06-01 20:49:10 -0500, , add module option zol create zvols runtime configured system start hang init stack reboot slow system hundred zvols udev fork bomb system start spend much time device detection routine upstart kill zfs_inhibit_dev option allows affected system rescued skipping dev creation thereby avoiding udev overload zvols made inaccessible option set zfs destroy zfs send command still work zfs filesystems mounted signed brian behlendorf behlendorf1 llnl.gov,,
5804,bc98d6c80944dcd920d1147e6bff2192e886a2f5,ichard Yao <ryao@cs.stonybrook.edu>, 2012-04-24 15:13:47 -0400, , make print useful error message signed brian behlendorf behlendorf1 llnl.gov,,
5805,e0093fea58f2ce2764b0b43337c960ed4a5d1b73,ichard Yao <ryao@gentoo.org>, 2012-06-06 16:51:53 +0000,124, linux 3.4 compat replaces fd_clr torvalds linux introduced replacement fd_clr commits appear removed fd_clr linux source tree cause following failure error implicit declaration function __fd_clr werror implicit function declaration correct update code use current interface readability introduce autotools check determine available define compatibility logic used older fd_clr interface signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 124,,
5806,eaac9ba5102797e0a7e5a1eedb43d792a44770c8,rian Behlendorf <behlendo@fedora-17-amd64.(none)>, 2012-06-13 13:43:29 -0700, , fix uninit variable slab reclaim test gcc version 4.7.0 report delta.tv_sec slab reclaim test potentially unitialized practice never occur keep gcc happy initialize variable zero signed brian behlendorf behlendo fedora amd64 none,,
5807,d53574e568d70fc8c3d77cc711c306f91fd6abe8,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-13 12:58:27 -0700,486, mark zdev.conf config file prevent rpm uvh .rpm automatically replacing vdev.conf file flagging non replacable config file signed brian behlendorf behlendorf1 llnl.gov close 486,,
5808,fe2fc8f6d383f1621446f98bb277c12f6b457b8f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-13 11:21:16 -0700,569, workaround failing zvol_id proper fix workaround stack smashing detected gcc zvol_id simply disable gcc stack protector building zvol_id udev helper root cause resolved patch reverted signed brian behlendorf behlendorf1 llnl.gov issue 569,,
5809,ee191e802c515ae509aec382cac33c9d89235dc5,tienne Dechamps <e-t172@akegroup.org>, 2012-06-12 11:40:36 +0200,783, make zil_slog_limit tunable module parameter zil_slog_limit specifies maximum commit size written separate log device larger commits bypass separate log device directly data device optimal value zil_slog_limit directly depends latency throughput characteristic separate log device data disk small synchronous writes faster low latency separate log device e.g ssds whereas large synchronous writes faster high latency data disk e.g spindle higher throughput especially large array point line small large synchronous writes scenario heavily dependent hardware used made configurable signed brian behlendorf behlendorf1 llnl.gov close 783,,
5810,c6327b63e6d3a11bb333829a8341d572e2fa7d9f,aniel Verite <daniel@verite.pro>, 2012-06-09 04:16:11 +0200,692, retry removal busy minor failing remove zvol device link busy wait bit retry loop instead giving immediately technique similar loop goal waiting asynchronous udev process finish work signed brian behlendorf behlendorf1 llnl.gov close 692,,
5811,92e91da20839ee50536223bedf2ba4fb7d2fae71,aniel Verite <daniel@verite.pro>, 2012-06-08 22:30:39 +0200,724, include locale.h avoid error lc_all undeclared compiling zfs cflags trigger following error resolve issue properly including locale.h cmd mount_zfs mount_zfs.c function main cmd mount_zfs mount_zfs.c 318 warning implicit declaration function setlocale wimplicit function declaration cmd mount_zfs mount_zfs.c 318 error lc_all undeclared first use function signed brian behlendorf behlendorf1 llnl.gov close 724,,
5812,6a0936babc14a44986265a12f206c41999bd48c3,ichard Yao <ryao@gentoo.org>, 2012-06-06 17:08:00 +0000,776, linux 3.4 compat d_make_root replaces d_alloc_root torvalds linux introduced introduced d_make_root replacement d_alloc_root commits appear removed d_alloc_root linux source tree cause following failure error implicit declaration function d_alloc_root werror implicit function declaration correct update code use current d_make_root interface readability introduce autotools check determine d_make_root available define compatibility logic used older d_alloc_root interface signed richard yao ryao gentoo.org signed brian behlendorf behlendorf1 llnl.gov close 776,,
5813,ab85f8455b995741c479f1cdcf21304de87fdaa8,tienne Dechamps <e-t172@akegroup.org>, 2012-06-06 11:30:24 +0200,774, honor logbias writing zvols logbias option taken account writing zvols fix using logic zfs filesystem write code see zfs_log.c signed brian behlendorf behlendorf1 llnl.gov close 774,,
5814,cac1f230e0537ceddead464dbd140e23a0556be6,ed Bass <bass6@llnl.gov>, 2012-06-05 12:45:37 -0700,773, improve error message configure script error message kernel built may give impression issue strictly license compliance avoid confusion add word indicating linking stage fail build continues signed brian behlendorf behlendorf1 llnl.gov close 773,,
5815,2371321e8a3d29e19cbc3a280f48636211abb480,rian Behlendorf <behlendorf1@llnl.gov>, 2012-06-11 09:12:37 -0700,771, fix invalid context bug module unload path vm_file_cache destroyed spin lock operation might sleep possible although unlikely could result deadlock issue indentified using linux debug kernel fixed moving spin lock need lock operation signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 771,,
5816,abe5b8fb669dfb30134e09d797665bb43b60fc2a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-31 12:42:51 -0700, , improve zpool import ebusy error message device already open o_excl another process zpool import correctly fail however default failure message helpful may fact harmful take advise destroy pool import tank pool busy destroy create pool backup source improve error message ebusy case simply print message indicating device current use user need manually identify process device open exclusively signed brian behlendorf behlendorf1 llnl.gov,,
5817,b04c9fc009ca0a0cabb7550625ff273b9edd9729,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-25 14:52:56 -0700, , add dev mapper search path creating pool short device name may used device appear certain well known location dev change add dev mapper list signed brian behlendorf behlendorf1 llnl.gov,,
5818,821b683436423593a1f3ee597f40a61bd4569bdd,ed A. Bass <bass6@zeno1.(none)>, 2012-04-20 17:32:30 -0700,713, add vdev_id jbod friendly udev alias vdev_id par file etc zfs vdev_id.conf map physical path storage topology channel name channel name combined disk enclosure slot number create alias reflects physical location drive particularly helpful come task like replacing failed drive slot number may also mapped case default numbering unsatisfactory drive alias created symbolic link dev disk vdev currently supported topology sas_direct sas_switch sas_direct channel uniquely identified pci slot hba port sas_switch channel uniquely identified switch port multipath mode supported mpath device handled examining first running component disk reported multipath multipath mode configuration file contain channel definition name path given enclosure vdev_id replace existing zpool_id script system storage topology conforms sas_direct sas_switch script could extended support topology well advantage vdev_id driven single static input file shared across multiple node common storage toplogy zpool_id hand requires unique etc zfs zdev.conf per node separate slot mapping file however zpool_id provides flexibility using device name show dev disk path may still needed system vdev_id functionality subsumes sas_switch_id script unlikely anyone using sas_switch_id removed finally dev disk vdev added list directory zpool import scan signed brian behlendorf behlendorf1 llnl.gov close 713,,
5819,e5b85622771090b7529cffdd38c0402a544609ef,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-21 12:59:58 -0700, , extend check check configure time added detect mutex_lock defined gpl symbol however check written inferred configuration setting never actually checked change introduces missing check prevent false positive signed brian behlendorf behlendorf1 llnl.gov,,
5820,93b0dc92eab55f8729b4798b383d4670073ebddc,orgen Lundman <lundman@lundman.net>, 2012-05-15 05:45:09 +0000,706, fix arm bit division correctly implementating bit division arm requires providing __aeabi_ldivmod symbol need implemented way quotient remainder left specific register division operation completes change update wrapper function accomplish according official arm run time abi signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 706,,
5821,38d31a1e576fd7c6393b3039ad04b8be2ee95f81,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-10 16:25:23 -0700,109, remove solaris module emulation originally believed interface would needed however practice turned straight forward maintainable use native linux interface dead code safely removed signed brian behlendorf behlendorf1 llnl.gov close 109,,
5822,f90096c9056b5d3c653c53181a64f5ea6794163f,ichard Yao <ryao@cs.stonybrook.edu>, 2012-05-01 09:34:39 -0400,105, modify km_pushpage use gfp_noio instead gfp_nofs resolution issue made km_pushpage imply gfp_nofs done prevent situation filesystem operation holding lock enter direct reclaim attempt reaquire lock clearly result deadlock work datasets implemented term filesystem operation unfortunately swapping zvol encounter many deadlock gfp_nofs prevent appropriate extend km_pushpage use broader gfp_noio mask handle non filesystem case signed brian behlendorf behlendorf1 llnl.gov issue zfsonlinux zfs 342 close 105,,
5823,a9a7a01cf5a61fe170569ebb44d288111d0ddbeb,rakash Surya <surya1@llnl.gov>, 2012-04-30 15:37:49 -0700,107, add splat test exercise slab direct reclaim test designed verify direct reclaim functioning expected allocate large number object thus creating large number slab apply memory pressure expect direct reclaim path easily recover slab registered reclaim function free object slab shrinker call repeatedly least single slab freed note may possible reclaim every last slab via direct reclaim without failure shrinker_rwsem may contended reason quickly reclaiming slab considered success possible within second reference system memory test take roughly 0.2 second run may take longer larger memory system still easily complete alloted second signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 107,,
5824,b78d4b9d98b8486199ba9072d7fc345121a4601f,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-01 14:27:29 -0700,107, ensure minimum one slab reclaimed minimize chance triggering oom direct reclaim kmem cache improved make best effort reclaim least one slab reclaim function registered help avoid case object released spread multiple slab memory get reclaimed care taken avoid deadlocking reclaim function unable make forward progress additionally reclaim function may skipped entirely already free slab safely reaped signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 107,,
5825,06089b9e1929440e07a9eb7a11e68197a4ab40f2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-05-01 15:49:07 -0700,107, ensure direct reclaim forward progress linux direct reclaim path band value determine forward progress made normally incremented kmem_freepages part various linux slab implementation however since using none infrastructure responsible incrementing count forward progress detected subsequent allocation fails oom killer invoked forward progress additional reclaim attempted via page cache registerd shrinker allocation succeeds signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 107,,
5826,c0e0fc14e3e65e519849dd9fbfb94a6c79d0d149,rakash Surya <surya1@llnl.gov>, 2012-04-27 12:43:49 -0700,102, ignore slab cache age delay direct reclaim memory pressure trigger direct memory reclaim slab age delay prevent freed patch ensures value ignored allowing empty slab freed code path matter value age delay prevents needle scanning partial slab observed significantly reduce total cpu usage addition allow snappier reclaim memory pressure signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 102,,
5827,cef7605c342a87eb108b6eac919cae737c08a230,rakash Surya <surya1@llnl.gov>, 2012-04-27 15:10:02 -0700,101, throttle number freed slab based nr_to_scan previously spl tried maintain solaris semantics freeing available empty slab slab cache shrinker called desirable running linux make spl shrinker linux friendly actual number freed slab slab cache derived nr_to_scan skc_slab_objs additionally accounting bug fixed could cause reclaim one slab requested signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 101,,
5828,c421831192e4015c300239d862c5b9d47088ecd1,orgen Lundman <lundman@lundman.net>, 2012-04-28 06:31:20 +0000, , define needed isa type arm add minimum required isa type support arm architecture signed brian behlendorf behlendorf1 llnl.gov,,
5829,ef6f91ce0c96f7440a6fab23cb605a7f67185790,orgen Lundman <lundman@lundman.net>, 2012-05-02 00:15:28 +0000, , add missing bit divide bit arm leverage existing generic bit division operation originally implemented x86 support arm required make symbol available linker expected name signed brian behlendorf behlendorf1 llnl.gov,,
5830,cb75844e859f1b97294f53e8370d8e5110b14779,orgen Lundman <lundman@lundman.net>, 2012-04-28 06:29:25 +0000, , define needed isa type arm add minimum required isa type support arm architecture signed brian behlendorf behlendorf1 llnl.gov,,
5831,710114089fd7032125b6a2c24b24483c90a87907,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-30 14:24:39 -0700,710, revert disable direct reclaim zvols reverts commit change observed cause problem using zvol back 2.6.32.59 kernel issue filed 710 signed richard yao ryao signed brian behlendorf behlendorf1 llnl.gov issue 342 issue 710,,
5832,3462fa279c7e821e3afdb02bf687a779a82a38ee,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-30 13:31:05 -0700,690, add mdadm dependency zfs test package additionally depends mdadm run zfault.sh test signed brian behlendorf behlendorf1 llnl.gov close 690,,
5833,b39d3b9f7be925ba9314c336099f31f508e1d940,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-30 12:01:49 -0700,701, linux 3.3 compat iop create mkdir mknod mode argument iop create mkdir mknod changed int umode_t prevent compiler warning autoconf check added detect api change correctly set zpl_umode_t typedef functional change signed brian behlendorf behlendorf1 llnl.gov close 701,,
5834,ce90208cf9e04df966429f115d8831371ea9afce,ichard Yao <ryao@cs.stonybrook.edu>, 2012-04-16 06:56:20 -0400,342, disable direct reclaim zvols previously possible direct reclaim path invoked write zvol made zvol used swap device often cause swap request depend additional swap request deadlock address disabling direct reclaim path zvols signed brian behlendorf behlendorf1 llnl.gov close 342,,
5835,05b8f50c3318cc904059a6f36d83730790d7d9fe,rakash Surya <surya1@llnl.gov>, 2011-12-15 13:48:37 -0800,65, update comment reflect new taskq internals removal taskq work list made commit commit author prakash surya surya1 llnl.gov date mon dec 2011 0800 replace tq_work_list tq_threads taskq_t lay ground work introducing interface tq_work_list tq_threads field replaced new alternative taskq_t structure comment incorrect change attempt bringing description line current implementation essentially reference old task work list updated reference new taskq thread active list signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5836,518b4876022eee58b14903da09b99c01b8caa754,ichard Yao <ryao@cs.stonybrook.edu>, 2012-04-12 17:22:08 -0400,660, update arc memory limit account slub internal fragmentation updated arc memory limit memory 4gb unfortunately value assume zero internal fragmentation slub allocator reality internal fragmentation could high effectively doubling memory usage pose clear safety issue permit size arc exceed system memory patch change default value arc_c_max always system memory effectively limit arc memory system physically installed signed brian behlendorf behlendorf1 llnl.gov close 660,,
5837,302f753f1657c05a4287226eeda1f53ae431b8a7,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-13 14:29:16 -0700, , integrate arc tightly linux solaris arc designed stay one step ahead subsystem would attempt recognize low memory situtions occured evict data cache would also make assessment enough free memory perform specific operation possible solaris expose fairly decent view memory state system kernel thread linux hand doe make information easily available avoid extensive modification arc spl attempt provide interface work ideal problem arise arc linux different idea memory manifested past spinning patch abandon emulated solaris interface favor prefered linux interface mean moving bulk memory reclaim logic evict driven shrinker callback linux call function need memory arc responsible attempting free requested amount memory possible several interface modified accomidate approach however basic user space implementation remains following change almost exclusively apply kernel implementation removed hdr_recl reclaim callback redundant broader reduced arc_grow_retry second 60. used internally arc arc_no_grow indicate direct reclaim recently performed typically indicates rapid change memory demand kswapd thread unable keep ahead long direct reclaim happening every second arc growth paused avoid contributing existing memory pressure common indirect reclaim path set arc_no_grow arc_shrink extended take number byte arc_c reduced allows granual reduction arc target since kernel provides reclaim value value used instead removed used determine system memory pressure relied extensively solaris specific interface case new code check arc_no_grow indicates within last arc_grow_retry second direct memory reclaim occurred updated always include amount evictable memory arc page cache free space calculation space largely available call path due direct memory reclaim solaris pageout code also removed avoid confusion always disabled due proc_pageout defined null linux port signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5838,afec56b43fd84edd69cb7f32030578bb35e5e1ea,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-27 16:20:31 -0700, , add module option expose variable module option used disable compression zfs meta data enabled default need tuned workload however may specific instance make sense trade disk capacity extra cpu cycle signed brian behlendorf behlendorf1 llnl.gov,,
5839,ad60af8e1bfe7ccdbc41f754023e06fa4e2699bc,ichard Lowe <richlowe@richlowe.net>, 2012-04-24 06:51:02 -0400,2067, illumos 2067 uninitialized variable zfs may make snapshot undestroyable reviewed joshua clulow josh sysmgr.org reviewed milan jurik milan.jurik xylab.cz reviewed igor kozhukhov ikozhukhov gmail.com reviewed garrett amore garrett damore.org reviewed matt ahrens mahrens delphix.com reviewed steve gonczi gonczi comcast.net approved garrett amore garrett damore.org reference http www.illumos.org issue 2067 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5840,95bcd51ecc3685111e03f407fa7ce40970f99aee,rederik Wessels <wessels147@gmail.com>, 2012-04-24 07:59:56 -0400,1946, illumos 1946 incorrect formatting listing output multiple pool zpool iostat reviewed richard elling richard.elling reviewed joshua clulow josh sysmgr.org approved richard lowe richlowe richlowe.net reference illumos issue http www.illumos.org issue 1946 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov,,
5841,187632dcef255acfbeff203d96b00904eb1e1c0a,ike Harsch <mike@harschsystems.com>, 2012-04-23 17:52:50 -0400,607, illumos 952 separate intent log obvious zpool iostat output reviewed adam leventhal ahl delphix.com reviewed matt ahrens mahrens delphix.com reviewed eric schrock eric.schrock delphix.com reviewed dan mcdonald danmcd nexenta.com reviewed garrett amore garrett nexenta.com approved eric schrock eric.schrock delphix.com refererce illumos issue http www.illumos.org issue 952 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 607,,
5842,ebf8e3a237d4720e3a85fb3a168917ead4ba25d1,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-19 15:55:28 -0700,680, illumos 1909 disk sync write perf regression slog used post oi_148 reviewed matt ahrens matt delphix.com reviewed eric schrock eric.schrock delphix.com reviewed robert mustacchi joyent.com reviewed bill pijewski wdp joyent.com reviewed richard elling richard.elling reviewed steve gonczi gonczi comcast.net reviewed garrett amore garrett.damore gmail.com reviewed dan mcdonald danmcd nexenta.com reviewed albert lee trisk nexenta.com approved eric schrock eric.schrock delphix.com refererces illumos issue http www.illumos.org issue 1909 signed brian behlendorf behlendorf1 llnl.gov close 680,,
5843,409dc1a570a836737b2a5bb43658cdde703c935e,rakash Surya <surya1@llnl.gov>, 2012-04-10 10:55:17 -0700, , use km_pushpage potential deadlock l2arc_feed thread km_pushpage used allocation made specifically km_pushpage used allocation possible reclaim triggered cause l2arc_feed thread deadlock arc_mru mutex example demonstrated following backtrace l2arc_feed thread crash 4123 pid 4123 task cpu command l2arc_feed schedule  mutex_lock arc_evict zfs arc_adjust zfs arc_shrink zfs zfs zfs shrink_slab    kmem_getpages fallback_alloc  __kmalloc spl zfs spl kthread kernel_thread signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5844,cf81b00a73fe47fdb21586ac1cc179b734540973,.SCH <p88@yahoo.com>, 2012-04-09 09:05:54 +0300,640, zfs list snapshot property alias add support zfs list snap alias available oracle solaris signed brian behlendorf behlendorf1 llnl.gov close 640,,
5845,10b75496bb0cb7a7b8146c263164adc37f1d176a,.SCH <p88@yahoo.com>, 2012-04-05 16:03:21 +0300,640, zfs snapshot alias consistency handy add zfs snap alias introduced oracle solaris 11. includes update man page reflect available alias snap umount recv signed brian behlendorf behlendorf1 llnl.gov close 640,,
5846,7d5cd71da6987565d19701b1d102f882f659b815,artin Matuska <mm@FreeBSD.org>, 2012-04-08 13:16:46 -0400,647, illumos 1346 zfs incremental receive may leave behind temporary clone 1356 zfs dataset prefetch code working reviewed matthew ahrens matt delphix.com reviewed dan mcdonald danmcd nexenta.com approved gordon ross gwr nexenta.com reference illumos issue http www.illumos.org issue 1346 http www.illumos.org issue 1356 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 647,,
5847,22cd4a465349618a415802f28146653a93bb4594,lbert Lee <trisk@nexenta.com>, 2012-04-08 13:10:49 -0400,648, illumos 1475 zfs spill block hold access invalid spill blkptr reviewed dan mcdonald danmcd nexenta.com reviewed gordon ross gwr nexenta.com reviewed matthew ahrens mahrens delphix.com reviewed george wilson gwilson zfsmail.com approved garrett amore garrett nexenta.com reference illumos issue http www.illumos.org issue 1475 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 648,,
5848,5ffb9d1d05d7c512b987dff51f587466d537770f,eorge Wilson <gwilson@zfsmail.com>, 2012-04-08 13:23:08 -0400,650, illumos 1951 leaking vdev removing l2cache device 1952 memory leak adding file based l2arc device 1954 leak zfs reviewed adam leventhal ahl delphix.com reviewed matt ahrens matt delphix.com reviewed eric schrock eric.schrock delphix.com reviewed bill pijewski wdp joyent.com reviewed dan mcdonald danmcd nexenta.com approved eric schrock eric.schrock delphix.com reference illumos issue http www.illumos.org issue 1951 http www.illumos.org issue 1952 http www.illumos.org issue 1954 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 650,,
5849,b129c6590e07edcc95f3b64ec210d94cf885c192,artin Matuska <mm@FreeBSD.org>, 2012-04-08 13:18:48 -0400,652, 926 zfs panic change appears exclusive smartos present illumos gate add needed error handling clearly preferable simply asserting would occur prior patch reviewed jerry jelinek jerry.jelinek joyent.com reviewed matt ahrens matt delphix.com ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 652,,
5850,3adfc400f5f6c8b24b825cbe91c14b7d58f3c7fc,ndriy Gapon <avg@FreeBSD.org>, 2012-04-09 13:01:46 -0400,655, illumos 1680 zfs validate vdev using vdev_tsd vdev_tsd null certain vdev state least userland testing ztest reference illumos issue http www.illumos.org issue 1680 ported richard yao ryao signed brian behlendorf behlendorf1 llnl.gov close 655,,
5851,109491a8976ec6f3fef74ee16bc16f64c34332af,ichard Laager <rlaager@wiktel.com>, 2012-04-09 16:59:37 -0500, , improve error message consistency signed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov,,
5852,f4605f07a2901566c9d4ae84e7c17e3ba827ce8a,ichard Laager <rlaager@wiktel.com>, 2012-04-10 20:03:26 -0500, , document zle compression algorithm signed richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov,,
5853,f0fd83be65152a218c7daa1d006b53fb4b79bdce,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-04 13:46:55 -0700, , export additional dsl symbol principly symbol exported get access function allow cleanly register callback called dataset property modified signed brian behlendorf behlendorf1 llnl.gov,,
5854,b29012b99994ece46019b664d67dace29e5c2586,rian Behlendorf <behlendorf1@llnl.gov>, 2012-04-06 11:29:23 -0700, , remove condition variable name long ago added support spl condition variable name thought might needed turn fact official solaris cv_init man page discourages use kernel cv_init parameter name descriptive string obsolete null non null string legal waste kernel memory therefore removing spl reclaim memory adding assert ensure new consumer added make use name signed brian behlendorf behlendorf1 llnl.gov,,
5855,1f0d8a566f0251ff9404b98233ae8d5406c6d308,unnar Beutner <gunnar@beutner.name>, 2012-04-05 10:30:10 +0200,639, fixed null pointer dereference bug zfs_preumount zpl_fill_super zfs_domount fails e.g dataset destroyed could successfully mounted subsequent call zpl_kill_sb zfs_preumount would derefence null pointer bug reproduced using shell script bin  true zfs create mountpoint legacz tank bar zfs destroy tank bar done   true mount zfs tank bar mnt umount mnt done  signed brian behlendorf behlendorf1 llnl.gov close 639,,
5856,2ce9d0ec61706e56abd4c56fe78bfe11365ad130,ichard Yao <ryao@cs.stonybrook.edu>, 2012-04-03 00:21:22 -0400,636, make gentoo initscript use modinfo parameter modprobe removed latest upstream code change entered gentoo using modinfo substitute address signed brian behlendorf behlendorf1 llnl.gov close 636,,
5857,847de12271af349bba07027dbcbc83aaa53b4b1a,ichard Yao <ryao@cs.stonybrook.edu>, 2012-04-02 20:44:42 -0400,633, print human readable error message enoent cryptic error code printed mounting legacy dataset non existent mountpoint patch change behavior print mount point doe exist similar error message printed mounting procfs single quote added consistent existing ebusy error message difference error message one printed condition occurs mounting procfs signed brian behlendorf behlendorf1 llnl.gov close 633,,
5858,fc41c6402b46d928dcc0a07435da1716b3a33c7c,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-27 10:10:26 -0700, , properly expose mfu ghost list kstats due typo mru ghost list stats accidentally exposed mfu ghost list stats harmless confusing since memory usage could reported signed brian behlendorf behlendorf1 llnl.gov,,
5859,9fc60702c6679803c77939db732c294b6b6952d2,raig Sanders <github@taz.net.au>, 2012-03-27 21:37:41 +1100, , remove hard coded column output stdout detected tty use number column specified terminal fails fall back default column width non tty case allow 999 column line signed brian behlendorf behlendorf1 llnl.gov,,
5860,8920c6918a984a9624c853460fe00e9a200bbd48,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-26 11:57:13 -0700, , spl 0.6.0 rc8,,
5861,2008ab88dd19ae3947b30b4e933fbf2273300aa2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-26 11:55:16 -0700, , zfs 0.6.0 rc8,,
5862,f47e1351db9f2e8bb769dd683801710cff988011,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-26 10:34:55 -0700,620, fix executable permission caught lint permission change accidentally introduced commit restore correct permission add missing whack bang config ltmain.sh lint executable elf script zpool_main.c zfs_main.c signed brian behlendorf behlendorf1 llnl.gov close 620,,
5863,1c5de20ae2511124613926e4f780572634818218,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-20 16:00:17 -0700, , add enable debug dmu configure option allow rigorous expensive validation enabled disabled indepentantly standard zfs debugging enabled check ensure constructed properly dbuf never dirtied without taking correct hold checking particularly helpful adding new dmu consumer like lustre however established consumer zpl known outstanding construction problem overhead enable debug dmu enable disable validation disable debug dmu constructed default validation disabled due performance concern signed brian behlendorf behlendorf1 llnl.gov,,
5864,99ea23c583b272470a21e0ac7caa1f485f6b1125,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-12 12:38:00 -0700, , enhance assertion following assertion good validate correctness new dmu consumer quite provide enough information slightly rework assertion hit actual offending value included output splerror 4787 dmu_tx.c 828 assertion null dn_assigned_txg tx_txg failed signed brian behlendorf behlendorf1 llnl.gov,,
5865,4b5d425f14673bfb228699cbafca7609cf30a7da,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-23 11:59:47 -0700, , add module load unload message include module load unload message clearly indidcate exactly version zfs loaded signed brian behlendorf behlendorf1 llnl.gov,,
5866,0835057ee7ab61b3e0c794a70da984712fce4384,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-23 12:03:57 -0700, , add module load unload message include module load unload message clearly indicate exactly version spl loaded signed brian behlendorf behlendorf1 llnl.gov,,
5867,9ed86e7cc7d0880c35f675efc2177012f01f5678,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-22 14:47:29 -0700,617, account .zfs ctldir inodes .zfs ctldir inodes backed physical storage use different create path properly accounting used could result returning cause divide zero error prune_super option kernel bug allows happen either checking adding like correctly earlier function signed brian behlendorf behlendorf1 llnl.gov close 617,,
5868,ebe7e575eae1e03b1faa545a424f008faeac589d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-11 12:45:53 +0530,173, add .zfs control directory add support .zfs control directory accomplished leveraging much existing zfs infrastructure posible updating linux required bulk core functionality following limitation .zfs snapshot directory automount support requires 2.6.37 newer kernel exception rhel6.2 backported d_automount patch creating destroying renaming snapshot mkdir rmdir .zfs snapshot directory work expected however functionality available root zfs delegation finished mkdir create snapshot rmdir destroy snapshot rename snapshot following issue known defeciences expect addressed future commits add automount support kernel older 2.6.37. possible using follow_link linux accessing .zfs snapshot directory via nfs yet possible majority ground work complete however finishing work require resolving lingering integration issue linux nfs kernel server .zfs share directory exists futher smb functionality yet implemented contribution rohan puri rohan.puri15 gmail.com contributiobs andrew barnes barnes333 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 173,,
5869,49be0ccf1fdc2ce852271d4d2f8b7a9c2c4be6db,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-23 15:32:51 -0800,496, add zio constructor destructor add standard zio constructor destructor normally done reduce cost allocating new structure reducing expensive operation memory allocation however case none operation moved zio_create really expensive change principly made debug patch workaround zio_destroy race good evidence zio_create reinitializing mutex really still use another thread would completely explain observed symptom issue report patch fix root cause race make likely initializing mutex constructor also particular flaw might gone unnoticed zfs implementation due specific implementation detail linux ticket spinlocks real root cause determined resolved change safely reverted help workaround issue signed brian behlendorf behlendorf1 llnl.gov issue 496,,
5870,c8df41538db3723edf3536379a78fbaf68f037d0,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-21 11:51:27 -0700,604, revert add zio constructor destructor patch slightly flawed allowed zio io_logical potentially reinitialized new zio could lead assertion failure specific case debugging enabled enable debug error encountered may also caused problem issue logical since want make sure workaround easily removed future real fix reverting change applying new version patch includes zio io_logical fix reverts commit signed brian behlendorf behlendorf1 llnl.gov issue 602 issue 604,,
5871,5d139aaa2b0d7c635e1f3ea0423dc428e844896a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-16 11:28:28 -0700, , spl 0.6.0 rc7,,
5872,43c8454724e0ba70b13e40cd2f63ad0d68942776,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-16 11:11:40 -0700, , zfs 0.6.0 rc7,,
5873,77a405ae52e4a902f7cc3790e2a73d044c66d962,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-14 12:36:49 -0700,594, add missing null helper function expects registered list xattr handler null terminated null accidentally missing could result null dereference interestingly issue manifested certain bit system presumably bit kernel always happen get lucky memory following structure zeroed signed brian behlendorf behlendorf1 llnl.gov issue 594,,
5874,42cb3819f1a1f536105faac81ffc150f3da90a80,regor Kopka <mailfrom-github.com@kopka.net>, 2012-03-14 14:34:00 +0100,581, use stderr pool datasets available error zfs list zpool list command output message datasets pool available stdout stderr available datasets pool stdout returning nothing stdout expected behavior nothing list signed brian behlendorf behlendorf1 llnl.gov close 581,,
5875,0ece356db51e225c3d4a26dff7cf67c99b6b9c55,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-05 15:14:15 -0800, , add sa_spill_rele interface add interface allows release spill block handle without destroying handle useful ensure copy dirty spill block made sync time due extra hold susequent call sa_update sa_lookup transparently refetch spill block dbuf arc hash signed brian behlendorf behlendorf1 llnl.gov,,
5876,2c6d0b1e07b0265f0661ed7851d3aa8d3e75e7a9,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-23 15:32:51 -0800,496, add zio constructor destructor add standard zio constructor destructor normally done reduce cost allocating new structure reducing expensive operation memory allocation however case none operation moved zio_create really expensive change principly made debug patch workaround zio_destroy race good evidence zio_create reinitializing mutex really still use another thread would completely explain observed symptom issue report patch fix root cause race make likely initializing mutex constructor also particular flaw might gone unnoticed zfs implementation due specific implementation detail linux ticket spinlocks real root cause determined resolved change safely reverted help workaround issue signed brian behlendorf behlendorf1 llnl.gov issue 496,,
5877,a3a69b74cdeb955b6924a534b809810e831b94fa,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-05 10:22:23 -0800, , fix distribution detection improve distribution detection moving test distribution specific file first ubuntu debian check left last least likely unique particularly true case debian since many distribution based debian since currently used identify correct packaging method system result many instance simply cosmetic signed brian behlendorf behlendorf1 llnl.gov,,
5878,76c2b24c613ddac896ee67250b467fd40d6a5689,ichard Yao <ryao@cs.stonybrook.edu>, 2012-02-28 16:23:16 -0500, , fix distribution detection improve distribution detection moving test distribution specific file first ubuntu debian check left last least likely unique particularly true case debian since many distribution based debian since currently used identify correct packaging method system result many instance simply cosmetic signed brian behlendorf behlendorf1 llnl.gov,,
5879,613d88eda89945bb0011ddc05d3bd064bf1a8e1b,ed Bass <bass6@llnl.gov>, 2012-02-29 10:08:20 -0800,574, align parition end mib boundary device exhibited sensitivity ending alignment partition particular even first partition begin mib seen many driver task abort error certain ssds first partition end mib boundary occurs vdev label read pool creation importation cause delay second per device also simulated pool imported dev sda1 dev null 262144 count record problem observed smartmod sg9xca2e200ge01 200gb ssds unfortunately good explanation behavior seems something highly fragmented single sector request issued device may support end aligned partition least page sized request queued issued driver according blktrace case aligning partition end fairly innocuous work around wasting mib space signed brian behlendorf behlendorf1 llnl.gov close 574,,
5880,ec2626ad3f695a2ced3946c4197ef64cbcac4959,rian Behlendorf <behlendorf1@llnl.gov>, 2012-03-02 10:35:50 -0800,513, use sa_hdl_private xattrs private handle must used ensure drop dbuf hold spill block prior calling dmu_tx_commit call dmu_tx_commit hold trigger copy dbuf made done prevent data leaking syncing txg result original dirty spill block remain cached additionally relying shared z_sa_hdl unsafe xattr context znode may asynchronously dropped cache far safer simpler use private handle xattrs plus additional overhead offset avoidance previously mentioned memory copy forever dirty buffer noticed arcstats anon_size quiescent system value zero without fix xattr write workload see anon_size increase eventually enough dirty data build system appear hang occurs dmu allow new assigned dirty data flushed part assigned aside typically see anon_size lurk around 16k think another place code need similar fix however value grow time critical signed brian behlendorf behlendorf1 llnl.gov issue 503 issue 513,,
5881,3c208a5480960c9610676dbabeee35fd8b8bb3d8,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-27 10:42:07 -0800, , cleanly support debug package allow source rpm rebuilt debugging enabled avoids need manually modify spec file default debugging still largely disabled enable specific debugging feature use following option rpmbuild debug enables asserts debug log enables internal debug log debug kmem enables basic memory accounting debug kmem tracking enables detailed memory tracking example rpmbuild rebuild debug spl module 0.6.0 rc6.src.rpm signed brian behlendorf behlendorf1 llnl.gov,,
5882,4b787d75c869a7f633607ecb17f3a7c482a553d2,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-27 10:12:40 -0800, , cleanly support debug package allow source rpm rebuilt debugging enabled avoids need manually modify spec file default debugging still largely disabled enable specific debugging feature use following option rpmbuild debug enables asserts example rpmbuild rebuild debug zfs module 0.6.0 rc6.src.rpm additionally zfs_config added zfs_config.h package build header critical ensure zfs dependant package using prototype structure definition signed brian behlendorf behlendorf1 llnl.gov,,
5883,570827e129ed81e066e894530bbe24642f473154,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-20 10:58:57 -0800, , add dmu_tx kstats entry keep counter various reason thread may end txg_wait_open waiting new txg useful attempting determine particular workload performing signed brian behlendorf behlendorf1 llnl.gov,,
5884,13be560d89e9de63bdf63e8187af2ceb90cf094d,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-30 13:28:40 -0800, , add arc_state_t stats arcstats ensure arc behaving properly need greater visibility exactly managing system memory patch take one step direction adding current arc_state_t anon mru mru_ghost mfu mfs_ghost list arc_state_t already well represented arcstats signed brian behlendorf behlendorf1 llnl.gov,,
5885,3a4f6caf08c095397f87f8e6fc5d734a56fff9c9,ed Bass <bass6@llnl.gov>, 2012-02-24 16:37:41 -0800, , return success check_slice device exist creating new pool make_root_vdev call check_in_use ensure none consituent disk use disk contains valid vdev label read retrieve list child vdevs checked recursively however partition stored vdev label longer exist example partition table since altered case would want pool creation proceed change remove check check_slice return error device exist added assurance solaris implementation also return sucess enoent signed brian behlendorf behlendorf1 llnl.gov,,
5886,a473d90ceeb57a7e63b35fdc82486251b162df0e,lex Zhuravlev <bzzz@whamcloud.com>, 2012-02-17 12:09:21 -0800, , export symbol zero copy export additional symbol make use dmu zero copy api allows external module move data arc without incurring cost memory copy signed brian behlendorf behlendorf1 llnl.gov,,
5887,b41c9906dcc0d75099cba8374420a513a253beff,ichard Yao <ryao@cs.stonybrook.edu>, 2012-02-13 10:38:58 -0500,565, support ashift 8kb ssd block size new ssds available use internal block size make sure zfs get maximum performance device increasing maximum ashift 8kb value still small enough fit uberblocks vdev ring label however want increase futher limit ability safely roll back pool recover signed brian behlendorf behlendorf1 llnl.gov close 565,,
5888,d2e032ca9cd62fd0e80cdce30c6d1c40421bf754,urbo Fredriksson <turbo@bayour.com>, 2012-02-13 10:27:01 +0100,570, add fsid mount option allowed option resolve nfs utils 1.0.x compatibility issue requires fsid set export option exportfs warning tank dir requires fsid nfs export signed brian behlendorf behlendorf1 llnl.gov close 570,,
5889,b10c77f70acc188f979ef85e922e854822ac0705,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-10 11:53:09 -0800, , export symbol zero copy exported required symbol make use dmu zero copy api allows external module move data arc without incurring cost memory copy signed brian behlendorf behlendorf1 llnl.gov,,
5890,feedc4360114941021ff0053a8f979235dd673da,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-09 16:38:42 -0800, , add missing spl_debug_ helper building spl disable debug log __sdebug macro spl_debug_ helper function undefined change add missing function upper layer compiling spl need aware spl built signed brian behlendorf behlendorf1 llnl.gov,,
5891,a31acb462d70aea9bbd5f0c96f7df109e2dde5aa,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-09 16:33:55 -0800, , use spl_debug_ helper configuring spl debug log support use provided wrapper function ensures disable debug log used buiding spl function effect signed brian behlendorf behlendorf1 llnl.gov,,
5892,30930fba219642cb1dadf1c8ef60ff799e3dc424,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-02 15:23:12 +0200, , add support discard zvols discard req_discard blkdiscard useful thin provisioning allows zvol client discard unmap trim block range zvol thus optimizing disk space usage allowing zvol shrink instead grow use zfs_space zfs_freesp since function work regular file volume fortunately use low level function doe exactly want currently discard operation added log big deal since losing discard request result data corruption would however result disk space usage higher thus adding log support zvol_discard probably good idea future improvement signed brian behlendorf behlendorf1 llnl.gov,,
5893,cb2d19010d8fbcf6c22585cd8763fad3ba7db724,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-02 09:42:07 +0200,334, support fallocate file operation currently flag combination supported since one match behavior zfs_space make pretty much useless current form start support flag combination would need modify zfs_space make flexible emulate desired functionality zpl_fallocate signed brian behlendorf behlendorf1 llnl.gov issue 334,,
5894,aec69371a6a2e94534809c5e9ba22e7b0e276937,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-02 09:37:53 +0200,334, check permission zfs_space done solaris zfs_space called opened file handle since addition case anymore need enforce access right signed brian behlendorf behlendorf1 llnl.gov issue 334,,
5895,5cb63a57f8d2d1a94e65b4710bfbb221b1a71700,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-01 13:59:41 +0200,334, implement truncate_range inode operation operation allows hole punching zfs file solaris done via vop_space system call map zfs_space function need write wrapper around zfs_space note work regular file zvols currently insecure implementation without permission checking although big deal since truncate_range even callable userspace signed brian behlendorf behlendorf1 llnl.gov issue 334,,
5896,93648f314c258897a0fa72b0d0b164e1937a5b63,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-09 10:38:03 -0800, , fix zconfig.sh non optimal alignment recent zvol improvement changed default suggested alignment zvols 512b default zvol blocksize zconfig.sh test create paritions generating warning non optimal alignment change update need zconfig.sh test partition properly aligned process shift using sfdisk utility parted utility create partition also move creation label partition filesystems generic function common.sh.in signed brian behlendorf behlendorf1 llnl.gov,,
5897,dde9380a1bf9084d0c8a3e073cdd65bb81db1a23,tienne Dechamps <e-t172@akegroup.org>, 2012-02-08 22:41:41 +0100,392, use default number zvol thread currently zvol_threads variable control number worker thread process item zvol queue set number available cpu choice seems based assumption zvol thread cpu bound necessarily true especially synchronous writes consider situation described comment zil_commit called inside zvol_write synchronous writes itxs committed batch heavily stressed zil commit writer thread writing bunch itxs log set committing thread cthreads batch writer cthreads waiting batch  also different growing batch thread waiting commit qthreads committing batch completes transition occurs cthreads exit qthreads become cthreads one new cthreads becomes writer thread batch new thread arriving become new qthreads easily deduce case zvols maximum zvol_threads cthreads qthreads default value zvol_threads typically way low case mean lot small commits zil inefficient compared big commits especially since wait data stable storage increasing number thread increase amount data waiting commited thus size individual commits system context disk image storage lot small synchronous writes increasing zvol_threads result increase sequential synchronous write performance choose sensible default zvol_threads unfortunately optimal value difficult determine automatically since depends synchronous write latency underlying storage device case hardcoded value would probably better current situation lot zvol thread seem real downside anyway signed brian behlendorf behlendorf1 llnl.gov fix 392,,
5898,34037afe24e0bff97cf5262f8f1a76f5e0815dc1,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-05 15:15:45 +0200,361, improve zvol queue behavior linux block device queue subsystem expose number configurable setting described linux block blk settings.c default setting tuned hard drive optimized zvols proper configuration option would allow upper layer scheduler take better decision write merging ordering detailed rationale max_hw_sectors set unlimited uint_max zvol_write able handle writes size reason impose limit let upper layer decide max_segments set unlimited zvol_write copy request content dbuf anyway number size segment irrelevant let upper layer decide io_opt set zvol block size potential somewhat alleviate issue 361 zvols warning upper layer writes smaller volume block size slow nonrot flag set indicate rotational device although backing zpool might composed rotational device resulting zvol often exhibit behavior due cow mechanism used zfs setting flag prevent upper layer making useless decision reordering writes based incorrect assumption behavior zvol signed brian behlendorf behlendorf1 llnl.gov,,
5899,b18019d2d810585185493c62e9567fa85e51692c,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-05 11:11:38 +0200, , fix synchronicity zvols zvol_write assumes write request must written stable storage rq_is_sync true unfortunately assumption incorrect indeed sync doe mean think mean context linux block layer well explained linux fs.h write normal async write device plugged write_sync synchronous write identical write pass hint someone waiting shortly write_flush like write_sync preceding cache flush write_fua like write_sync data guaranteed non volatile medium completion word sync doe mean write must stable storage completion mean someone waiting complete write request thus triggering zil commit sync write request zvol unnecessary harmful performance make matter worse zvol user way express actually want data written stable storage mean zil broken zvols request stable storage expressed fua flag must commit zil write fua flag set addition must commit zil write flush flag set also must inform block layer actually support flush fua signed brian behlendorf behlendorf1 llnl.gov,,
5900,56c34bac44d47898809c46db3e5444511bbe0ef6,tienne Dechamps <etienne.dechamps@ovh.net>, 2011-09-02 09:57:35 +0200, , support sync always zvols currently sync always property work regular zfs datasets zvols patch remedy signed brian behlendorf behlendorf1 llnl.gov fix 374,,
5901,e67329d8e0befe79016bd3e4d52435552c554a52,arik Horn <dajhorn@vanadac.com>, 2012-02-04 20:54:43 -0600,560, let libnvpair linked independently libzfs autoconf fail detect zol libnvpair system implicitly link library runtime dependency anything gcc 4.5 dco update build libuutil libnvpair put ldadd line libnvpair automake template signed brian behlendorf behlendorf1 llnl.gov close 560,,
5902,47621f3d76abf63e178b95a446134565cc553b1a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-02-02 11:55:48 -0800,549, linux 3.3 compat sop show_options second argument sop show_options changed struct vfsmount struct dentry add autoconf check detect api change conditionally define expected interface either case interested zfs_sb_t signed brian behlendorf behlendorf1 llnl.gov close 549,,
5903,9a8b7a7458a3d76d35b26e7f2b737abd9ab4c6ef,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-30 12:15:31 -0800,84, add basic dynamic kstat support add bare minimum functionality support dynamic kstats complete kstat implementation done part issue signed brian behlendorf behlendorf1 llnl.gov issue,,
5904,4b2220f0b937018b79154ac368c845e6176a8a66,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-20 16:39:12 -0800, , add enable debug log configure option notion internal debug logging infrastructure conflated enabling assert patch clarifies thing cleanly breaking two subsystem apart result following behavior enable debug enable disable code wrapped assert disable debug assert used check invariant never required correct operation disabled default may impact performance enable debug log enable disable debug log infrastructure disable debug log infrastructure allows spl code consumer log message kernel log granularity logging controlled debug mask default mask disables debug message resulting negligible performance impact debug log enabled default signed brian behlendorf behlendorf1 llnl.gov,,
5905,d7e398ce1a3e6f9c705af43955a684685a798c32,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-20 15:02:57 -0800, , cleanup zfs debug infrastructure historically internal zfs debug infrastructure scattered throughout code since expect start making use code patch performs cleanup consolidate zfs debug infrastructure zfs_debug file includes moving zfs_flags zfs_recover variable plus moving function remove existing unused functionality zfs_debug.c replace code correctly utilized spl logging infrastructure remove __dprintf function zfs_ioctl.c dead code dprintf functionality kernel relies spl log support remove dprintf hdr_recl particularly useful missing required format specifier anyway subsequent patch unify dprintf zfs_dbgmsg function signed brian behlendorf behlendorf1 llnl.gov,,
5906,0c5dde492ff4fadcc9c43477c81b3d3824ac41db,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-27 13:43:23 -0800, , allow multiple value per directory entry using zfs back lustre filesystem advantageous store fid object directory zap technical impediment zpl code expects single value zap per directory entry change relaxes requirement multiple entry allowed provided first one object zpl code ignore additional entry allows zol count mount datasets used lustre server backends upstream feature flag support merged change updated read feature occurs zfs implementation able read zfs filesystems created lustre signed brian behlendorf behlendorf1 llnl.gov,,
5907,e29be02e46ba2470795c9ab12e6da12d58ff2e5a,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-27 09:15:42 -0800, , export symbol zfs_attr_table export zfs_attr_table symbol may used non zpl consumer still interested writing zpl compatible dataset e.g lustre signed brian behlendorf behlendorf1 llnl.gov,,
5908,3c6ed5410beb7a4f9e0c042229eb63c4c11a5fc9,ed Bass <bass6@llnl.gov>, 2012-01-19 10:33:19 -0800,32, taskq locking optimization testing shown tq_lock highly contended large number small work item dispatched lock hold time reduced following change use exclusive thread work_waitq single work item dispatched need wake single thread service current implementation non exclusive thread thread woken dispatcher call wake_up large number thread queue overhead become non negligible conditionally add remove thread work waitq taskq thread need add work wait queue pending work item signed brian behlendorf behlendorf1 llnl.gov issue,,
5909,0bb43ca2823ab55a74565f6e17e2c36749cff3b9,ed Bass <bass6@llnl.gov>, 2012-01-19 11:36:27 -0800,32, revert taskq locking optimization reverts commit race condition introduced wake_up call lost taskq thread determines pending work item leading deadlock taksq thread enables interrupt dispatcher thread run queue work item call wake_up taskq thread run add self waitq sleep could easily happen interrupt completion outstanding point taskq thread reenables interrupt call handler would run immediately within race window signed brian behlendorf behlendorf1 llnl.gov issue,,
5910,ff998d804ff2fec3adc91fd0e78d25998094aca9,rakash Surya <surya1@llnl.gov>, 2012-01-18 15:31:52 -0800,536, ignore dataset dds_type dmu_ost_other since zpios potentially zfs test use dmu_ost_other type label datasets zpool zfs command gracefully handle type encountered patch modifies command behavior ignore datasets dds_type dmu_ost_other signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 536,,
5911,b4b599d2508296a9dac0abe29532fc0884f299b7,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-17 16:20:43 -0800, , fix rpm dependency change update rpm spec file strictly correct package dependency mean thing zfs module package tied specific build spl module package based kernel version ensures correct spl module package always get installed newest zfs package requires zfs module spl package thus yum install zfs pull minimal set package required functional system zfs devel package require zfs package installed normal behavior devel package remove redundant distribution release extension already added part kernel package release name signed brian behlendorf behlendorf1 llnl.gov,,
5912,b40a77aefca3d0832396edd35f597100d152f163,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-17 16:19:43 -0800, , add release component header original build system code added release component accidentally omited development header install path patch add missing path component always clear exactly release compiling signed brian behlendorf behlendorf1 llnl.gov,,
5913,87d112392415df7604888cf343df4e48a3404513,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-17 16:14:59 -0800, , fix rpm dependency change update rpm spec file strictly correct package dependency mean thing add dependency spl package spl module package ensures running yum install spl newest version spl module installed remove redundant distribution release extension already added part kernel package release name signed brian behlendorf behlendorf1 llnl.gov,,
5914,a2eda2ff48e6c38788d48b121f36ff7d280d569b,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-17 16:14:35 -0800, , add release component header original build system code added release component accidentally omited development header install path patch add missing path component always clear exactly release compiling signed brian behlendorf behlendorf1 llnl.gov,,
5915,f783130a1f11616632a7a6f519140f97389688a6,arik Horn <dajhorn@vanadac.com>, 2012-01-18 12:28:11 -0600, , allow gpt efi vdev replacement boot pool commit zfsonlinux zfs allows bootfs property set pool doe accommodate subsequent vdev change example zpool replace rpool dev sda dev sdb operation supported type pool property bootfs supported efi labeled device non solaris build disable check emits error signed brian behlendorf behlendorf1 llnl.gov,,
5916,ec2b41049f7f576aaa772b326d083e5971212d33,ed Bass <bass6@llnl.gov>, 2012-01-17 15:34:55 -0800,32, taskq locking optimization testing shown tq_lock highly contended large number small work item dispatched lock hold time reduced following change use exclusive thread work_waitq single work item dispatched need wake single thread service current implementation non exclusive thread thread woken dispatcher call wake_up large number thread queue overhead become non negligible conditionally add remove thread work waitq outside tq_lock taskq thread need add work wait queue pending work item furthermore add remove function call made outside taskq lock since wait queue protected concurrent access spinlocks call wake_up outside tq_lock wait queue protected spinlock dispatcher function drop tq_lock calling wake_up new splat test taskq contention added prior commit measure impact change following table summarizes result using data kernel lock profiler tq_lock time diff wall clock diff original 39117614.10 41.72 exclusive thread 31871483.61 18.5 34.2 18.0 unlocked add waitq 13794303.90 64.7 16.17 61.2 unlocked wake_up 1589172.08 95.9 16.61 60.2 row reflects average result test run proc lock_stats zeroed collected run column cumulative hold time microsecond tq_lock test cumulative row reflects code change previous row diff calculated respect original 100 orig new orig although calling wake_up outside taskq lock dramatically reduced taskq lock hold time test actually took slightly wall clock time point contention shift taskq lock wait queue lock change still seems worthwhile since remove taskq implementation bottleneck assuming small increase wall clock time statistical noise signed brian behlendorf behlendorf1 llnl.gov close,,
5917,cf5d23fa1e953db970b04f593f83d7ffa9e9e0df,ed Bass <bass6@llnl.gov>, 2012-01-17 14:23:58 -0800,32, add taskq contention splat test add test designed generate contention taskq spinlock using large number thread 100 perform large number 131072 trivial work item single queue simulates condition may occur zio free taskq 1tb file removed zfs filesystem example test always pas purpose provide benchmark easily measure effectiveness taskq optimization using statistic kernel lock profiler signed brian behlendorf behlendorf1 llnl.gov issue,,
5918,750562833f5009e1602e3b7d8f10497ee683f611,arik Horn <dajhorn@vanadac.com>, 2011-12-31 17:30:52 -0600,430, combine library spl avl efi share unicode library artifact zol development process conflict package already distribution libspl spl programming language libavl avl linux libefi grub library potential conflict libshare linux mount manager libunicode perl python recompose five zol component four library conventionally provided solaris freebsd system libnvpair libuutil libzpool libzfs change resolve name conflict make zol compatible existing software autotools detect zfs allows pkg zfs better reflect official debian kfreebsd packaging signed brian behlendorf behlendorf1 llnl.gov close 430,,
5919,57a4eddc4d5e1e6c10d8d7dcf87a9fc27398adcd,ichard Laager <rlaager@wiktel.com>, 2012-01-13 16:24:15 -0600,317, allow setting bootfs pool restriction longer necessary recent grub2 code freebsd implemented change except moved solaris comment inside ifdef __sun__ block signed brian behlendorf behlendorf1 llnl.gov issue 317,,
5920,966e5200d35a2c38cdb9e14bfaf698a10b31603b,arik Horn <dajhorn@vanadac.com>, 2012-01-13 22:20:07 -0600, , fix make distclean config user apply fix spl applied zfs earlier zfsonlinux zfs additionally quote linux_symbols null substitution configuration result expression incorrectly evaluates true configure config user make distclean making distclean module make entering directory spl module make subdirs pwd clean make entering unknown directory make subdirs spl module file directory stop signed brian behlendorf behlendorf1 llnl.gov,,
5921,08d08ebba2247ad404001785a890de4281d0a362,ed Bass <bass6@llnl.gov>, 2012-01-13 13:51:39 -0800,458, reduce number zio free thread described issue 458 258 unlinking large amount data cause thread zio free wait queue start spinning reducing number z_fr_iss thread fixed value 100 per cpu signficantly reduces contention taskq spinlock improves throughput instrumenting taskq code showed spend long time holding tq_lock large number thread queue turn time spent wake_up scale linearly number thread queue large number short work item dispatched seems case unlink worker thread drain queue faster dispatcher fill pile work wait queue wait new work item 100 thread queue wake_up take 100 time long woken thread spin dispatcher release lock reducing number thread help symptom get root problem would seem wake_up scale linearly time queue depth particularly trying wake one thread vein tried making waiting process exclusive prevent scheduler iterating entire list still saw linear time scaling investigation needed meantime reducing thread count easy workaround signed brian behlendorf behlendorf1 llnl.gov issue 258 issue 458,,
5922,a8783adf24a8c40dcae0fbfa90eb231212f26884,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-13 11:35:05 -0800,514, increase link count limit originally per file link limit set 65536 exact linux vfs limit unclear internally zfs able support bit link count careful investigation limit safely raised signed brian behlendorf behlendorf1 llnl.gov close 514,,
5923,0b14b9f32729f0e4b2c9da8b19a2bd848781d683,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-13 09:08:12 -0800,517, run spl_ac_pacman vendor arch unfortunately arch package manager pacman share name popular arcade video game thus order refrain executing video game mean execute package manager spl_ac_pacman run vendor determined arch signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close zfsonlinux zfs 517,,
5924,58d956b085c31bde695d03dbf415e118cd350e0f,rakash Surya <surya1@llnl.gov>, 2012-01-12 17:24:05 -0800,517, run zfs_ac_pacman vendor arch unfortunately arch package manager pacman share name popular arcade video game thus order refrain executing video game mean execute package manager zfs_ac_pacman run vendor determined arch signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 517,,
5925,e18be9a637088911d2b618788cd45982986e63cb,uman Chakravartula <suman@gogrid.com>, 2012-01-11 16:48:02 -0800,473, add overlay mount option support linux support mounting non empty directory default solaris case option required zfs mount mount zfs filesystem non empty directory compatibility added support option mount zfs filesystems non empty directory user want like solaris defined ms_overlay record flag variable option supplied flag variable pass function checked performing empty directory check zfs_mount function given check performed signed brian behlendorf behlendorf1 llnl.gov close 473,,
5926,96b91ef0d6b289037c4d54357901e4b694e08f02,arik Horn <dajhorn@vanadac.com>, 2012-01-05 14:27:36 -0600, , apply zol coding standard zpl_xattr.c make indenting zpl_xattr.c file consistent sun coding standard removing soft tab signed brian behlendorf behlendorf1 llnl.gov,,
5927,166dd49de0272e6f179e5fd6a41eebb4880a1154,rian Behlendorf <behlendorf1@llnl.gov>, 2012-01-12 13:59:44 -0800,516, linux 3.2 compat api changed include filesystem specific callback write security extended attribute done support initialization multiple lsm xattrs evm xattr change update code use new api available otherwise fall back previous implementation addition autoconf test made rigerous passing expected type done ensure always properly detect correct form api signed brian behlendorf behlendorf1 llnl.gov close 516,,
5928,2932b6a8004df8417036894d7d2e7e151cc95434,ichard Laager <rlaager@wiktel.com>, 2012-01-09 16:50:26 -0600, , treat dev whole disk correctly detect dev device whole disk attempt create efi partition table signed brian behlendorf behlendorf1 llnl.gov,,
5929,588d900433b03e33e4bbbfee7309bd15f71148fb,arik Horn <dajhorn@vanadac.com>, 2012-01-11 11:44:34 -0600,463, linux 3.2 compat raw wait_lock member rw_semaphore struct became raw_spinlock_t linux 3.2 torvalds linux wrap spin_lock_ function call new spl_rwsem_ interface ensure type safety raw_spinlock_t becomes architecture specific satisfy compiler warning warning passing argument spinlock_checkâ incompatible pointer type enabled default note expected struct spinlock_t argument type struct raw_spinlock_t signed brian behlendorf behlendorf1 llnl.gov close close zfsonlinux zfs 463,,
5930,b97f368d047943607b5b263331d7e2075ab3ffe8,arik Horn <dajhorn@vanadac.com>, 2011-12-30 14:18:58 -0600,259, avoid using awk zpool_id script implementation awk incorrectly parse regex symbol use read loop regular globbing instead signed brian behlendorf behlendorf1 llnl.gov close 259,,
5931,ab26409db753bb087842ab6f1af943f3386c764f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-12-22 12:20:43 -0800,292, linux 3.1 compat super_block s_shrink linux 3.1 kernel introduced concept per filesystem shrinkers directly assoicated super block prior change one shared global shrinker zfs code relied able call global shrinker arc_meta_limit exceeded would cause vfs drop reference fraction dentries dcache arc could safely reclaim memory used entry honor arc_meta_limit unfortunately per filesystem shrinkers added old interface made unavailable change add support use new per filesystem shrinker interface continue honor arc_meta_limit major benefit new interface target zfs filesystem dentry inode pruning thus minimize impact caching filesystems context making change several important issue related managing arc addressed include function called arc drop dentries posix layer replaced generic zfs_prune_t callback zpl layer register callback drop dentries removing layering violation date back solaris code callback also used arc consumer lustre   module option changed arc_meta_prune clarity dnlc function specific solaris vfs already largely eliminated already replacement tunable represents number byte prune callback request invoked aggressively invoke prune callback used call whenever exceeded arc_meta_limit however strictly correct since result zeleous reclaim dentries inodes called arc_meta_limit exceeded every effort made evict data arc cache promptly manage exceeding arc_meta_limit reading meta data cache buffer unable recycled notify arc_reclaim thread invoke required prune added arcstat_prune kstat incremented arc forced request consumer prune cache remember occur arc choice evict buffer safely without invoking prune callback  change also expected resolve unexpect collapse arc cache would occur exceeded arc_meta_limit reclaim presure would excerted arc_c value via arc_shrink effectively shrunk entire cache really needed reclaim meta data signed brian behlendorf behlendorf1 llnl.gov close 466 close 292,,
5932,5f6c14b1eda9c7b47d11a3b90e78dea6a7f429e0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-12-21 14:22:45 -0800,58, proxmox kernel compat proxmox kernel contains patch renames function process add check argument define compatibility wrapper legacy caller therefore either function exported safely used signed brian behlendorf behlendorf1 llnl.gov close,,
5933,8eaa020b46e80b09cc5f924b90809e219ce08e75,rakash Surya <surya1@llnl.gov>, 2011-12-16 22:32:54 -0800, , move arch linux vendor check ubuntu lsb release package installed arch linux distribution configure step incorrectly detect running distribution ubuntu result distribution providing etc lsb release file ubuntu vendor check performed first since arch linux test check file specific arch linux distribution moving arch linux vendor check unbuntu check provides quick easy solution signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
5934,cd2817f8a6a3c0f7675c3ce954800c29eade5319,rakash Surya <surya1@llnl.gov>, 2011-12-16 22:16:47 -0800,72, move arch linux vendor check ubuntu lsb release package installed arch linux distribution configure step incorrectly detect running distribution ubuntu result distribution providing etc lsb release file ubuntu vendor check performed first since arch linux test check file specific arch linux distribution moving arch linux vendor check unbuntu check provides quick easy solution signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5935,afd7da0ce72c3b3554079644d73e90fe6d2bf955,arik Horn <dajhorn@vanadac.com>, 2011-12-16 19:02:41 -0600, , add libselinux regenerating autotools configuration debian ubuntu system cause compilation fail error message cmd mount_zfs cmd mount_zfs mount_zfs.c 403 undefined reference automake template set ... libselinux sbin mount.zfs utility linked libselinux signed brian behlendorf behlendorf1 llnl.gov,,
5936,28eb9213d89cb25438fcecb86e735cc3edc26ea4,arik Horn <dajhorn@vanadac.com>, 2011-12-16 15:15:12 -0600,462, linux 3.2 compat set_nlink directly changing inode i_nlink deprecated linux 3.2 commit sha use new set_nlink kernel function instead signed brian behlendorf behlendorf1 llnl.gov close 462,,
5937,8f2503e0af490ea253d6db1a15b4901437171cc1,rakash Surya <surya1@llnl.gov>, 2011-12-16 14:57:31 -0800,71, store copy tqent_flags prior servicing task preallocated taskq_ent_t tqent_flags must checked prior servicing taskq_ent_t preallocated taskq entry serviced ownership entry handed back caller taskq_dispatch thus entry content potentially mangled particular problem case preallocated taskq entry serviced caller clear tqent_flags field thus function return task_done called look though entry preallocated task fact preallocated task situation task_done place preallocated taskq_ent_t structure onto taskq_t free list huge mistake taskq_ent_t freed caller taskq_dispatch taskq_t free list hold pointer garbage data even worse nothing written freed memory pointer dereferenced may still look though point valid list_head belonging taskq_ent_t structure thus task entry flag copied prior servicing task copy checked see preallocated task determine entry need passed task_done function signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5938,e6101ea87f5127c549d520aad124290857218fa5,arik Horn <dajhorn@vanadac.com>, 2011-12-16 14:17:00 -0600,438, update character class zpool man page zol solaris derivative allow pool name contain colon space character update man page reflect current behavior signed brian behlendorf behlendorf1 llnl.gov close 438,,
5939,e7e5f78e7bf6dc86337483f4d9f01becc017d185,rakash Surya <surya1@llnl.gov>, 2011-12-16 09:44:31 -0800,71, swap taskq_ent_t taskqid_t taskq_thread_t taskq_t active thread list sorted based tqt_ent tqent_id field list kept sorted solely inserting new taskq_thread_t correct sorted location mean used mean inserted taskq_thread_t tqt_ent tqent_id field change list run risk longer sorted prior introduction interface problem taskq_ent_t actively serviced old interface always static tqent_id field thus taskq_thread_t added taskq_t active thread list taskq_thread_t tqt_ent tqent_id field would remain constant longer case currently using interface given taskq_ent_t actively serviced _may_ tqent_id value incremented happens preallocated taskq_ent_t structure recursively dispatched thus taskq_thread_t could potentially tqt_ent tqent_id field silently modified foot happen taskq_thread_t taskq_t active thread list would compromise integrity order list list _may_ longer sorted get around taskq_thread_t taskq_ent_t pointer replaced static copy tqent_id taskq_ent_t pulled taskq_t pending list static copy tqent_id made copy used sort active thread list using static copy key ensuring integrity order active thread list even underlying taskq_ent_t recursively dispatched tqent_id modified static copy stored inside taskq_thread_t remain constant signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5940,6ba3b44614fa6482bd2d7363964b65f0289b0f4f,rakash Surya <surya1@llnl.gov>, 2011-12-07 17:02:42 -0800,491, add make rule building arch linux package added necessary build infrastructure building package compatible arch linux distribution one run configure make pkg alternatively one run make arch well arch linux machine create two binary package compatible pacman package manager one zfs userland utility another zfs kernel module new package installed running pacman addition source package suitable arch linux chroot environment remote builder also build using sarch make rule note since source dist tarball created fly head build tree md5 hash signature continually influx result md5sum variable intentionally omitted pkgbuild file skipinteg makepkg option used may may serious security implication source tarball downloaded outside source signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 491,,
5941,c2dceb5cd5221f7e1bde915218f5d2cf69920959,rakash Surya <surya1@llnl.gov>, 2011-12-06 17:33:51 -0800,68, add make rule building arch linux package added necessary build infrastructure building package compatible arch linux distribution one run configure make pkg alternatively one run make arch well arch linux machine create two binary package compatible pacman package manager one spl userland utilties another spl kernel module new package installed running pacman addition source package suitable arch linux chroot environment remote builder also built using sarch make rule note since source dist tarball created fly head build tree md5 hash signature continually influx result md5sum variable intentionally omitted pkgbuild file skipinteg makepkg option used may may serious security implication source tarball downloaded outside source signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5942,a38718a63d79116d6cb614dd2821e2a3955e5c8c,arrett D'Amore <garrett@nexenta.com>, 2011-11-07 16:26:52 -0800,482, illumos 734 use interface observed hottest lock zio taskqs contention lock limit rate zios dispatched limit performance upstream change illumos new interface taskqs allow utilize prealloc taskq_ent_t remove need perform allocation dispatch time holding contended lock effect improving system performance reviewed albert lee trisk nexenta.com reviewed richard lowe richlowe richlowe.net reviewed alexey zaytsev alexey.zaytsev nexenta.com reviewed jason brian king gmail.com reviewed george wilson gwilson zfsmail.com reviewed adam leventhal ahl delphix.com approved gordon ross gwr nexenta.com reference illumos issue http www.illumos.org issue 734 ported prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 482,,
5943,699d5ee8a99471b49b07e69108045301b865b0d6,rakash Surya <surya1@llnl.gov>, 2011-12-06 10:11:36 -0800,65, exercise new taskq interface splat taskq test splat taskq test function slightly modified exercise new taskq interface addition old interface old interface pass test new interface exercised sub test old interface new interface must pas test whole pas signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5944,44217f7aad12225c09e5fefbbce97ac6bf2f2d16,rakash Surya <surya1@llnl.gov>, 2011-12-06 10:04:51 -0800,65, implement interface patch implement interface introduced following illumos gate commit allows preallocated taskq_ent_t used dispatching item taskq eliminates memory allocation help minimize lock contention taskq dispatching function commit author garrett amore garrett nexenta.com date wed jul 2011 0700 734 desired 943 zio_interrupt end calling taskq_dispatch tq_sleep signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5945,ac1e5b6033811e15f6e471e720bf506e4e3b4a08,rakash Surya <surya1@llnl.gov>, 2011-12-06 09:48:06 -0800,65, add test single task queue recursive dispatch added another splat taskq test ensure task recursively submitted single task queue without issue interface introduced use case potentially cause deadlock taskq_ent_t dispatched tqent_list field empty _should_ never problem existing taskq_dispatch interface signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5946,2c02b71b1411176905228666abf7a50a2e5f85dc,rakash Surya <surya1@llnl.gov>, 2011-12-05 17:32:48 -0800,65, replace tq_work_list tq_threads taskq_t lay ground work introducing interface tq_work_list tq_threads field replaced new alternative taskq_t structure tq_threads field replaced tq_thread_list rather storing pointer taskq kernel thread array stored list addition laying ground work interface change could also enable taskq thread dynamically created destroyed thread added removed list relatively easily tq_work_list field replaced tq_active_list instead keeping list taskq_ent_t currently serviced list taskq_threads currently servicing taskq_ent_t kept free taskq_ent_t tqent_list field serviced i.e taskq_ent_t serviced tqent_list field empty signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5947,046a70c93b2951bd4c705fb09592d2555a8858f0,rakash Surya <surya1@llnl.gov>, 2011-11-11 15:06:35 -0800,65, replace struct spl_task struct taskq_ent spl_task structure renamed taskq_ent field renamed prefix tqent rather align naming convention zfs code assumes previously field private name never mattered signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov issue,,
5948,ed948fa72b28b0769758081d71d5ce5d30b428f9,rakash Surya <surya1@llnl.gov>, 2011-12-02 14:05:06 -0800,64, add splat_test_fini call change add neglected splat_test_fini call done splat_taskq_ test signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5949,93806f58a620e3e0fabd75db538c789cdc653afe,rakash Surya <surya1@llnl.gov>, 2011-12-12 15:37:30 -0800,70, fix usage mutex macro call site mutex macro incorrectly placed closing parenthesis causing two parameter passed rather one change move misplaced parenthesis fix typographical error signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close,,
5950,791dc876eb59f1543fee0bcfc1a97691c643ea3c,hris Dunlop <chris@onthe.net.au>, 2011-12-06 15:29:58 +1100,487, allow bit timestamps set bit kernel zfs bit linux perfectly capable dealing bit timestamps zfs deliberately prevents setting adjust spl always assume bit value instead use correct value kernel build effectively allows bit timestamps bit system signed brian behlendorf behlendorf1 llnl.gov close zfs issue 487,,
5951,30a9524e45f76d4c7860bcbf5567aeaa8aeb7a82,rian Behlendorf <behlendorf1@llnl.gov>, 2011-12-07 09:23:44 -0800,392, set zvol_major zvol_threads permission zvol_major zvol_threads module option created permission bit prevented listed sys module zfs parameter directory although visible modinfo zfs patch fix issue updating permission bit 0444. moment option must read used module initialization signed brian behlendorf behlendorf1 llnl.gov issue 392,,
5952,23bdb07d4e4c435205d25d3efdb5fef2d089ce5e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-12-05 10:08:29 -0800,75, update default arc memory limit upstream opensolaris zfs code maximum arc usage limited memory 1gb whichever larger linux subsystem organized default proven large lead stability issue avoid making everyone manually tune arc default changed memory 4gb rational follows desktop system 8gb memory limiting arc memory desirable desktop system highly dynamic memory requirement example launching web browser suddenly result demand several gigabyte memory memory must reclaimed arc cache take time user experience reclaim time sluggish system poor interactive performance thus case preferable leave memory free available immediate use server system 8gb memory using 4gb memory arc preferable server system system often run minimal user interaction long running daemon relatively stable memory demand system benefit much data cached memory possible value work well configuration however desktop system 8gb memory may wish restrict arc still accomplished setting zfs_arc_max module option additionally keep mind currently hard limit arc based slab implementation suffer memory fragmentation fragmentation visible arc may believe within specified limit actually consuming slightly memory much memory get consumed determined badly fragmented slab long term mitigated slab defragmentation code opensolaris solution preferably using page cache back arc linux would even better see issue benefit tightly integrating page cache change also fix issue default arc max set incorrectly machine 2gb memory constant arc_c_max comparison must explicitly cast uint64_t type prevent overflow wrong conditional branch taken failure typically observed vms commonly created 2gb memory signed brian behlendorf behlendorf1 llnl.gov issue,,
5953,660cbada0fca3b5504562adcf21a35f9195f46a0,arik Horn <dajhorn@vanadac.com>, 2011-12-04 15:32:18 -0600,439, quote variable zfs.lsb script consistency safety quote variable zfs.lsb script protects unlikely case file name contain whitespace signed brian behlendorf behlendorf1 llnl.gov issue 439,,
5954,c2d9c41d5084db354d80c03fea4fb0bb97327c0a,arik Horn <dajhorn@vanadac.com>, 2011-12-04 14:18:28 -0600,371, source etc default zfs setting default let administrator override script variable sourcing etc default zfs file default value set spelling mistake old path name make unlikely bug affected user signed brian behlendorf behlendorf1 llnl.gov close 371,,
5955,db7c1771da2634af4e2a4323759656c7f0afe689,arik Horn <dajhorn@vanadac.com>, 2011-12-04 14:01:58 -0600, , demote whackbang zpool_id script zpool_id script posixly correct doe use bash feature change whackbang bin bash bin debian policy also stipulates system script dash compatible signed brian behlendorf behlendorf1 llnl.gov,,
5956,87193e2b6111d6080df90c2c8e03ce49b14e031a,arik Horn <dajhorn@vanadac.com>, 2011-12-04 13:58:53 -0600, , demote egrep grep zpool_id script direct invocation gnu egrep deprecated man page argument zpool_id script extended expression signed brian behlendorf behlendorf1 llnl.gov,,
5957,04bf5ecc1f04ed5955ab9951c833d6b08db57356,arik Horn <dajhorn@vanadac.com>, 2011-12-04 13:50:27 -0600,439, quote variable zpool_id script consistency safety quote variable zpool_id script accomodates config parameter value whitespace path name also fix typo usage synopsis signed brian behlendorf behlendorf1 llnl.gov issue 439,,
5958,9c8254f6f95b2b08e2031b2682a632e0df45cefb,arik Horn <dajhorn@vanadac.com>, 2011-12-04 13:10:46 -0600,429, support path_id change udev 174 lib udev path_id helper became builtin command udev 174 release test whether path_id external zpool_id script signed brian behlendorf behlendorf1 llnl.gov close 429,,
5959,590338f63ee0db6f1fc7e6b5b23744d3944777b2,unnar Beutner <gunnar@beutner.name>, 2011-12-03 23:01:06 +0100, , added comment libshare nfs function function purpose immediately obvious without additional explanation commit add missing comment signed brian behlendorf behlendorf1 llnl.gov,,
5960,b9c59ec83ab50e1cd097f067461e34a5750694c8,rakash Surya <surya1@llnl.gov>, 2011-11-29 14:31:20 -0800,459, fix configure test play nice gcc 4.6 gcc 4.6 specific kernel 2.6.32 header file compile cleanly without warning one specific example arch x86 include asm percpu.h file thus configure test getting hung wno unsued set variable compile option introduced signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 459,,
5961,f31b3ebe6e6c9de4db30bf752c09a8300b305258,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-29 09:05:04 -0800,272, allow xattrs symlinks solaris version zfs doe allow xattrs set symlinks due way implemented attropen system call linux however implement xattrs lgetxattr lsetxattr system call limitation reason always worked zfs linux xattr handler registered symlink type inodes done simply consistent solaris behavior upon futher reflection believe allowed linux ill effect would xattrs symlinks visible pool imported solaris system also benefit allows selinux style security xattr labeling expects able set xattrs inode type signed brian behlendorf behlendorf1 llnl.gov close 272,,
5962,82a37189aac955c81a59a5ecc3400475adb56355,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-24 16:55:20 -0700,443," implement based xattrs current zfs implementation store xattrs disk using hidden directory directory file name represents xattr name file context xattr binary data approach flexible allows arbitrarily large xattrs however also suffers significant performance penalty accessing single xattr requires three disk seek lookup dnode object lookup dnodes xattr directory object lookup xattr object directory avoid performance penalty linux filesystems ext3 xfs try store xattr part inode disk xattr large store inode single external block allocated practice xattrs small approach work well addition system attribute zfs provides clean way make optimization dataset property xattr set xattrs preferentially stored system attribute allows tiny xattrs 100 byte stored dnode 64k xattrs stored spill block additional xattr space required unlikely linux stored using traditional directory approach optimization result roughly performance improvement accessing xattrs brings zfs roughly parity ext4 xfs see table multiple xattrs stored per file performance improvement even greater xattrs stored spill block cached however default based xattrs disabled linux port maximize compatibility implementation enable based xattrs visible platform support feature  time second get set one xattr byte 100,000 file  setxattr getxattr byte ext4 xfs zfs dir zfs ext4 xfs zfs dir zfs  2.33 31.88 21.50 4.57 2.35 2.64 6.29 2.43 2.79 30.68 21.98 4.60 2.44 2.59 6.78 2.48 256 3.25 31.99 21.36 5.92 2.32 2.71 6.22 3.14 1024 3.30 32.61 22.83 8.45 2.40 2.79 6.24 3.27 4096 3.57 317.46 22.52 10.73 2.78 28.62 6.90 3.94 16384 2342.39 34.30 19.20 45.44 145.90 7.55 65536 2941.39 128.15 131.32 141.92 256.85 262.12 legend ext4 stock rhel6.1 ext4 mounted user_xattr xfs stock rhel6.1 xfs mounted default option zfs dir directory based xattrs zfs prefer spill directory needed trailing indicates overflow directory occured note ext4 support 4096 byte xattr name value pair per file note xfs zfs limit xattr name value pair per file note linux limit individual name value pair 65536 byte note setattr getattr done dropping cache note test run single hard drive signed brian behlendorf behlendorf1 llnl.gov issue 443",,
5963,e89236fd28cbe8585146b8b5d0ced1f8d4aa8431,rakash Surya <surya1@llnl.gov>, 2011-11-24 16:37:27 -0800,464, autoconf v2.68 ac_lang_program must quoted change update ac_lang_program autoconf macro invocation wrapped quote autoconf version 2.68 quote necessary prevent warning appearing specifically autoconf v2.68 forward porting note specifies important note need ensure call ac_lang_source quoted expanded otherwise cause warning appear nonetheless finally additional quoting drop extra quota used autoconf check signed brian behlendorf behlendorf1 llnl.gov close 464,,
5964,e05bec805b066e72266281a03e57e61e7dd53264,rakash Surya <surya1@llnl.gov>, 2011-11-18 14:27:37 -0800,61, fix typo referencing incorrect symbol function incorrectly referencing splat_taskq test13_func symbol meant using symbol signed brian behlendorf behlendorf1 llnl.gov close,,
5965,ada8ec1ec5b0bfdab74bafda49e2f7a67dc7101d,uman Chakravartula <schakrava@gmail.com>, 2011-11-19 11:53:12 -0800,428, allow leading digit userquota groupquota name setting getting userquota groupquota property input treated possible username groupname leading digit useradd linux recommends regexp enforced cause problem usernames leading digit need able support getting setting property unconventional possible input category updated code validate username groupname directly via api also note moved validation beginning check sid name also support usernames character valid input valid username interpreted potential sid name signed brian behlendorf behlendorf1 llnl.gov close 428,,
5966,ca5fd24984624146ebd1460d7554f42b0572e45f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-11 14:50:15 -0800,425, limit maximum ashift value initially allowed set ashift large actually unsafe considered time uberblock written vdev label ring buffer size buffer statically sized 128k need able fit several uberblocks large ashift becomes problem therefore reducing maximum configurable ashift value large enough sector drive small enough still keep recent uberblock vdev label ring buffer signed brian behlendorf behlendorf1 llnl.gov close 425,,
5967,1114ae6ae74a287478cd8a34770fc4a907f84134,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-11 09:03:31 -0800,56, prepend spl_ init fini function bit cleanup meaning get reduce chance type conflict well conflict finally occurred kstat_init function conflict function 2.6.32 pve kernel signed brian behlendorf behlendorf1 llnl.gov close,,
5968,948914d2f10f6bf274bb51b96dd5337f01165b45,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-10 10:36:21 -0800, , fix depmod warning depmod utility module init tool 3.12 pre3 generates warning option used without observed opensuse 11.4. resolve issue exact system.map kernel found fallback generic safe sbin depmod warning need signed brian behlendorf behlendorf1 llnl.gov,,
5969,09559cdd150fa0b610dd4f816292fd90f50fd0cb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-10 10:22:39 -0800, , fix depmod warning depmod utility module init tool 3.12 pre3 generates warning option used without observed opensuse 11.4. resolve issue exact system.map kernel found fallback generic safe sbin depmod warning need signed brian behlendorf behlendorf1 llnl.gov,,
5970,adcd70bd1af405464d6dbc6b2057594cddda7a24,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-09 20:47:59 -0800,445, linux 3.1 compat fop fsync linux 3.1 kernel updated fop fsync callback yet pas requested range delegate responsibility calling callback addition imutex longer held caller callback responsible taking lock required commit update code provide zpl_fsync function updated api implementation previous two apis also maintained compatibility signed brian behlendorf behlendorf1 llnl.gov close 445,,
5971,fe71c0e5677d35cbdb3a6bf0a81c71d12a2aff4a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-09 16:31:03 -0800,52, linux 3.1 compat shrink_ cache_memory linux 3.1 function removed task accomplished cleanly per super block shrinkers unfortunately leaf easy way support function support always entirely optional reasonable interface available allow function effectively become downside change prevent zfs arc meta data limts enforced however current zfs implementation regard already flawed need reworked arc need enfore meta data limit need extended coordinate directly zpl allow drop compatibility code get fine grained control cache management signed brian behlendorf behlendorf1 llnl.gov issue,,
5972,0d0b523728b348b2d762fd9b27511ed9b138607b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-09 12:45:35 -0800,52, linux 3.1 compat vfs_fsync preferentially use vfs_fsync function function initially introduced 2.6.29 took three argument 2.6.35 dentry argument dropped function older kernel fall back using file_fsync also took three argument including dentry signed brian behlendorf behlendorf1 llnl.gov issue,,
5973,12ff95ff579d0203790aff69632c7ab12ce56140,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-09 12:29:51 -0800,52, linux 3.1 compat prior linux 3.1 symbol exported use kernel module linux 3.1 longer easily available handle case spl dynamically look address missing symbol module load time signed brian behlendorf behlendorf1 llnl.gov issue,,
5974,8c19f5b407132b7ee1d6b7dc7c763f2ae80be976,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-08 11:07:02 -0800, , suppress packaging warning ubuntu lucid rpm packaging step mistakenly add following file twice package lib naming convention harmless result warning buildot flag failure suppress warning warning file listed twice lib udev rules.d warning file listed twice lib udev rules.d zpool.rules warning file listed twice lib udev rules.d zvol.rules warning file listed twice lib udev rules.d zfs.rules warning file listed twice lib udev sas_switch_id warning file listed twice lib udev zpool_id warning file listed twice lib udev zvol_id signed brian behlendorf behlendorf1 llnl.gov,,
5975,5547c2f1bf49802835fd6c52f15115ba344a2a8b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-07 16:39:03 -0800,367, simplify bdi integration update code use helper simplify bdi integration code updated code register bdi mount destroys unmount complication 2.6.32 2.6.33 kernel helper available case zfs code must provide luckily function trivial signed brian behlendorf behlendorf1 llnl.gov close 367,,
5976,591fb62f19ee2431983a4cbeb0d200b1b8e7daf5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-07 16:25:49 -0800, , disown dataset zfs_sb_create fix unlikely failure cause zfs_sb_create could leave dataset owned error thus unavailable reboot disown dataset expected fact missing signed brian behlendorf behlendorf1 llnl.gov,,
5977,ae6ba3dbe618bb7dbc46f2a3fb54c58243835d6b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-01 16:56:48 -0700,258, improve meta data performance profiling system meta data intensive workload creating removing million file revealed system cpu bound large fraction cpu time spent waiting virtual address space spin lock turn caused certain heavily used kmem_caches backed virtual memory default kmem_cache dynamically determine type memory used based object size large object virtual memory usually preferable small object physical memory better choice see spl_slab_alloc function longer discussion however certain amount gray area defining large object following cache turn line dnode_cache zio_cache zio_link_cache   know lot churn cache know slab still reasonably sized safely request kmc_kmem flag cache backed physical memory address entirely avoids need serialize virtual address space lock bonus also reduces vmalloc usage good bit kernel small virtual address space also probably good interactive performance since unrelated process could also block global lock finally may see cpu time burned arc_reclaim  signed brian behlendorf behlendorf1 llnl.gov issue 258,,
5978,6a95d0b74c2951f0dc82361ea279f64a7349f060,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-01 13:07:41 -0700,287, fix null deref balance_pgdat careful unconditionally clear pf_memalloc bit task structure may already set entering zpl_putpage case must remain set exit particular kswapd thread pf_memalloc set order prevent entering direct reclaim clearing allow following null deref potentially occur bug unable handle kernel null pointer dereference null balance_pgdat 0x25b 0x4ff signed brian behlendorf behlendorf1 llnl.gov issue 287,,
5979,a7b125e9a577cbf66ddbd7cf9701028ff150ee8e,unnar Beutner <gunnar@beutner.name>, 2011-11-03 06:48:13 +0100,431, fix race condition missing lock zfs superblock could result clearing z_sa_hdl member accessing znode result would usually panic signed brian behlendorf behlendorf1 llnl.gov fix 431,,
5980,b8b6e4c453929596b630fa1cca1ee26a532a2ab4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-11-01 13:35:12 -0700,287, fix null deref balance_pgdat careful unconditionally clear pf_memalloc bit task structure may already set entering kv_alloc case must remain set exit particular kswapd thread pf_memalloc set order prevent entering direct reclaim clearing allow following null deref potentially occur bug unable handle kernel null pointer dereference null balance_pgdat 0x25b 0x4ff signed brian behlendorf behlendorf1 llnl.gov close zfs issue 287,,
5981,c47516762758c989a443c0a6a9e38ae8fb46e6f1,in Li <delphij@FreeBSD.org>, 2011-10-21 16:39:53 -0700,426, illumos 1661 fix flaw sa_find_sizes calculation calculating space needed sa_bonus buffer hdrsize always rounded next aligned boundary however two place round done sum total plus hdrsize hand hdrsize increment time mean certain condition would end returning will_spill total hdrsize larger full_space leading failed assertion invalid dmu_set_bonus reviewed matthew ahrens matt delphix.com reviewed dan mcdonald danmcd nexenta.com approved gordon ross gwr nexenta.com reference illumos issue http www.illumos.org issue 1661 signed brian behlendorf behlendorf1 llnl.gov close 426,,
5982,3cee2262a6efd06031a2ff511f66e6a51f743e6a,arik Horn <dajhorn@vanadac.com>, 2011-10-22 10:44:03 -0500, , change sun.com url zfsonlinux.org zfs contains error message point defunct www.sun.com domain currently offline change error message use zfsonlinux.org mirror instead commit depends zfsonlinux signed brian behlendorf behlendorf1 llnl.gov,,
5983,3bb1ac69942b7c1a89d741733b4a55b2facba420,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-19 11:43:11 -0700, , include distribution release common practice include distribution package release signed brian behlendorf behlendorf1 llnl.gov,,
5984,16952a68f25d55da21578f562b3813559fd01c6b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-19 11:23:38 -0700, , include distribution release common practice include distribution package release signed brian behlendorf behlendorf1 llnl.gov,,
5985,f5e76dea03453c72fb46ad90dd2e01c73b70654f,unnar Beutner <gunnar@beutner.name>, 2011-10-19 18:04:40 +0200, , cleaned mutex define old define assumed specific layout kmutex_t struct patch make macro independent actual struct layout signed brian behlendorf behlendorf1 llnl.gov,,
5986,66cdc93b8c030db70a50563ac26f02301dde30ff,unnar Beutner <gunnar@beutner.name>, 2011-10-18 02:54:35 +0200, , remove spinlocks mutex_enter mutex_exit m_owner variable protected mutex reading variable guaranteed atomic due word sized reference access_once take care read cache effect signed brian behlendorf behlendorf1 llnl.gov,,
5987,3160d4f56bf35492e9c400094f8c1ff2066d4459,unnar Beutner <gunnar@beutner.name>, 2011-10-18 02:32:50 +0200,167, fix race condition mutex_exit kernel mutex_exit clear mutex owner releasing mutex would cause mutex_owner return incorrect owner another thread managed lock mutex mutex_exit chance clear owner signed brian behlendorf behlendorf1 llnl.gov close zfs issue 167,,
5988,f3989ed3223363330af014062caeeb1afbd0503f,unnar Beutner <gunnar@beutner.name>, 2011-10-12 12:49:18 +0200,391, vn_rdwr properly advance file position would cause problem using zfs send file target rather pipe socket usually case write destination offset file would signed brian behlendorf behlendorf1 llnl.gov close zfs issue 391,,
5989,6f2255ba8ac93a86ec217775e8f9fc145bc52b39,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-18 14:51:03 -0700,412, set mtime symbolic link register setattr getattr callback symlinks without generic inode_setattr function used setattr case result inode updated memory dirty_inode callback would also normally run none registered zfs straight forward fix set setattr getattr callback symlinks handled like file directory signed brian behlendorf behlendorf1 llnl.gov close 412,,
5990,8d35c1499de42a1910ac1bb3a9c537ddc43c7d4d,lexander Stetsenko <ams@nexenta.com>, 2011-10-16 08:41:05 +0200,372, illumos 755 dmu_recv_stream build incomplete guid_to_ds_map incomplete guid_to_ds_map would cause fail receiving duplicated backup stream reviewed matthew ahrens mahrens delphix.com reviewed garrett amore garrett nexenta.com reviewed gordon ross gwr nexenta.com approved gordon ross gwr nexenta.com reference illumos issue patch http www.illumos.org issue 755 http github.com illumos illumos gate commit ec5cf9d53a signed gunnar beutner gunnar beutner.name signed brian behlendorf behlendorf1 llnl.gov close 372,,
5991,b385d7da6e3d21f0c0c23bf85212fe48758758c9,ed Bass <bass6@llnl.gov>, 2011-10-17 11:43:55 -0700,422, use zfs_meta license spec.in file zfs.spec.in zfs modules.spec.in license field incorrectly set license causing generated rpm package report invalid license string fix using signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 422 signed brian behlendorf behlendorf1 llnl.gov,,
5992,a49bc996897fb0f4c38ea6d3bbeafbe27dc82e72,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-17 16:40:38 -0700, , fix package url use github repository url field spl module spl package spec file updated point zfs linux repository hosted github signed brian behlendorf behlendorf1 llnl.gov,,
5993,5cbf6db937a304c4d2b60878a2405a1e2900abdf,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-11 14:36:42 -0700, , disable zfs.rules test suite running zconfig.sh zpios sanity.sh zfault.sh installed package zfs.rules cause failure occur test suite assumes full control loading unloading module stack stack get asynchronously loaded udev rule test suite treat failure resolve issue disabling offending rule test enabling exit signed brian behlendorf behlendorf1 llnl.gov,,
5994,ecc39810077bbf3836fe9be0800c0d7668e33fc4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-11 10:11:26 -0700, , fix various typo comment clean typo spelling mistake comment spl kmem.c signed brian behlendorf behlendorf1 llnl.gov,,
5995,86f35f34f419f6eaff53b25f463c13f72186b103,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-10 10:42:59 -0700, , export symbol vfs api export symbol already marked extern zfs_vfsops.h header several non static symbol also added header exportewd allows external module easily create manipulate properly created zfs filesystem type datasets rename zfsvfs_teardown zfs_sb_teardown export done simply consistency rest code base zfsvfs_ function already renamed signed brian behlendorf behlendorf1 llnl.gov,,
5996,8d177c181fb21c7cedd41e27aec2072ef2aed42e,unnar Beutner <gunnar@beutner.name>, 2011-10-11 10:03:29 -0700, , fixed typo spl_slab_alloc typo effect apart negligible performance impact skc skc_flags kmc_offslab always non null least one bit skc skc_flags set signed brian behlendorf behlendorf1 llnl.gov,,
5997,64c075c3f4381df02d206008b94498248cc49324,unnar Beutner <gunnar@beutner.name>, 2011-10-11 09:59:02 -0700,418, properly destroy work item non debug build assert would optimized away could cause pending work item cancelled must also use rather actually wait work item completed otherwise might accidentally access free memory signed brian behlendorf behlendorf1 llnl.gov close zfs bug 279 363 418,,
5998,763b2f3b57af1febb0fd72c4976992e672a350b4,unnar Beutner <gunnar@beutner.name>, 2011-10-11 09:50:52 -0700,386, fixed invalid resource use file_find file descriptor per process resource descriptor different process refer different file find_file incorrectly assumed file descriptor globally unique signed brian behlendorf behlendorf1 llnl.gov close zfs issue 386,,
5999,3646c3f2b5c2c54b3aef448aa136e04f85c6c656,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-07 09:14:12 -0700, , add provides lustre backend rpm lustre package satify backend requirement checking lustre backend provided update zfs packaging accordingly signed brian behlendorf behlendorf1 llnl.gov,,
6000,4a777c028c7e52ccfc1fb721448c84e10b9ee0f8,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-06 14:07:00 -0700, , prep spl 0.6.0 rc6 tag create sixth 0.6.0 release candidate tag rc6,,
6001,6b3b569df30d13ed7bbbff877cffc71290a52f12,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-06 14:55:17 -0700, , remove etc hostid missing warning longer print following warning console etc hostid file missing expected default behavior keeping hostid sync initramfs accomplished creating etc hostid initramfs system spl etc hostid file found signed brian behlendorf behlendorf1 llnl.gov,,
6002,620c7598e4df6756238c56aec79601408822e44d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-10-06 14:10:45 -0700, , prep zfs 0.6.0 rc6 tag create sixth 0.6.0 release candidate tag rc6,,
6003,e45aa452988f721e458fa3abe54669bdf9377352,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-30 10:33:26 -0700, , export symbol full api export symbol system attribute api allows external module cleanly manipulate associated dnode documention api found module zfs sa.c source change also remove prototype function dropped time ago signed brian behlendorf behlendorf1 llnl.gov,,
6004,e8753fb4f03aaa371028aaec145449f2610229cf,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-30 10:33:26 -0700,399, synchronize initramfs system hostid relying etc hostid file installed system image break diskless system share image certain cluster infrastructure mpi relies node unique hostid however still must careful ensure hostid syncronized initramfs system image using zfs root filesystems accompish automatically created etc hostid file removed spl rpm packaging etc hostid file dynamically created initramfs part dracut install process avoids need install actual system image change also resolve spl_hostid parameter handling dracut signed brian behlendorf behlendorf1 llnl.gov close 398 close 399 signed brian behlendorf behlendorf1 llnl.gov,,
6005,39a87c69211aceef23889ceb4a33291e476237b9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-30 09:36:35 -0700, , revert stabilize hostid rpm installation creating etc hostid file part rpm post install cause problem diskless system sharing image still critical ensure hostid change zfs root filesystems done setting etc hostid initramfs created dracut reverts commit,,
6006,6ebd8ef103c3ed4739987f36d77874f6953af89f,leg Stepura <oleg@stepura.com>, 2011-09-29 23:59:07 +0300,416, fix unexpected operator bashism operator specific bash replace correct operator bug prevent correct booting using zfs root pool signed brian behlendorf behlendorf1 llnl.gov close 416,,
6007,baab0630167f7539483af0f277aa6eeff39490d6,ndreas Dilger <adilger@whamcloud.com>, 2011-09-16 03:22:00 -0600,400, zpl fix better free inodes value due confusion linux statfs f_frsize f_bsize block count changed unit z_max_blksize instead platform however free file calculation zfs_statvfs limited free block count since dnode consumes one block sector provided reasonable estimate free inodes linux meant free inodes count underestimated large amount since 256 512 byte dnodes fit 128kb block max blocksize increased 1mb larger also use semantically incorrect since dnode_size may change value may even change per dataset device large sector setting ashift also use larger blocksize correct f_ffree calculation use availbytes dnode_shift accurately compute maximum number dnodes created signed andreas dilger adilger whamcloud.com signed brian behlendorf behlendorf1 llnl.gov close 413 close 400,,
6008,c70602f1eada6ae9d2c3442e3d469c7227d019ab,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-27 16:32:53 -0700, , fix uninitialized varible compiling debian lenny gcc version 4.3.2 debian 4.3.2 1.1 following warning occurs quiet warning initialize error zero newer version gcc correctly determine uninitialized varible impossible known greater zero cmd zfs zfs_main.c 2377 warning error may used uninitialized function signed brian behlendorf behlendorf1 llnl.gov,,
6009,dee28b070057224dec67b779e80be14493a4ffb7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-27 16:07:35 -0700, , export symbol full zap api export symbol zap api allows external module cleanly interface zap type object previously subset functionality exposed documention zap api found sys zap.h header change also remove duplicate prototype signed brian behlendorf behlendorf1 llnl.gov,,
6010,7a0232735d7527b08e02196762727994aa6065f9,achary Bedell <zac@thebedells.org>, 2011-09-18 21:35:42 -0400,344, make libefi created gpt compatible gptfdisk gpt created libefi set headersize attribute gpt header 512 size gpt header including 420 padding byte end tool set size size actual header excluding padding tool check recorded headersize verifying crc gptfdisk hardcodes thus report crc verification problem full disk vdevs created zpool create pool sdc commit change libefi behavior gpt creation also fix several edge case libefi behavior similar though incompatible manner gptfdisk libefi assumed headersize always 512 even gpt recorded different value sanity check gpt headersize read disk added applying checksum calculation prevent segfault case bogus disk value zpools created resuling libefi verified correct parted gptfdisk also pool tested import correctly zfs linux well solaris express livecd signed zachary bedell zac thebedells.org signed brian behlendorf behlendorf1 llnl.gov close 344,,
6011,c39b2786ac98ab87d6dda00aa83b399ed175055a,achary Bedell <zac@thebedells.org>, 2011-09-17 23:42:43 -0400,402, fix boot failure dracut script mount zfs.sh script incorrectly parsed result zpool list correct bootfs attribute found system single pool bootable pool name alphabetized pool name boot failed bootable pool name came pool rpool mypool would fail find bootfs rpool patch correctly discard pool whose bootfs attribute blank signed zachary bedell zac thebedells.org signed brian behlendorf behlendorf1 llnl.gov close 402,,
6012,f021fe194fec75ba1196638ca00301ba3b54ae85,ed Bass <bass6@llnl.gov>, 2011-09-22 15:36:42 -0700,410, use automatic variable makefile written init_scripts rule etc init.d makefule.am would work expected init_scripts variable contain element zfs fix replacing hard coded zfs reference signed ned bass bass6 llnl.gov signed brian behlendorf behlendorf1 llnl.gov close 410,,
6013,97fd6a07c2c2fd1d27fc79938eb1a451c92fbfc4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-19 13:35:03 -0700, , fix check gcc 4.1.2 older version gcc gcc 4.1.2 treat incompatible pointer type warning instead error result defined incorrectly failure mode observed using rhel6 2.6.32 based kernel rhel5.5 contains old version gcc resolve issue warning explicitly promoted error signed brian behlendorf behlendorf1 llnl.gov,,
6014,fa6e5ced2fba92555019c7bc09b4c4b98c1a5323,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-15 20:23:50 -0700, , suppress kmem_alloc warning suppress warning large kmem_alloc far warning threshhold short lived signed brian behlendorf behlendorf1 llnl.gov,,
6015,a65666f63856653faa9e4a7f35690b73512641ce,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-12 11:42:33 -0700, , install zfs devel header usr include zfs devel header file linking libspl libzfs library installed usr include include ensure correct install location used building rpm package signed brian behlendorf behlendorf1 llnl.gov,,
6016,2708f716c0f009bad754b8b94063526fab2048e9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-09-09 10:24:55 -0700, , fix usage zsb free caught code inspection variable zsb referenced freed move kmem_free end function signed brian behlendorf behlendorf1 llnl.gov,,
6017,185853d9f202b306d9c316b66b774c498ed6577c,eremy Gill <jgill@parallax-innovations.com>, 2011-08-26 13:55:26 -0400,377, ensure fc15 boot zfs used boot partition seems dracut version 009 013 boot correctly zfs dracut rpm package installed root zfs used boot commandline example package installed system _doesn boot zfs filesystem signed jeremy gill jgill parallax innovations.com signed brian behlendorf behlendorf1 llnl.gov close 377,,
6018,7cdac8b8533c662155248eb2ea672a1e803ab634,rakash Surya <surya1@llnl.gov>, 2011-08-25 15:20:25 -0700, , fix zfs.spec.in use license variable zfs.spec.in file license field hard coded specify cddl changed use license variable maintaining consistency zfs modules.spec.in file signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
6019,2e79a04a58bf85dbc18d420cc614100df0d1555a,rakash Surya <surya1@llnl.gov>, 2011-08-25 15:09:24 -0700, , fix package url use github repository url field zfs module zfs package spec file updated point zfs linux repository hosted github signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
6020,8366cd6a83ab76885c89f57285e13428e4644ac0,rakash Surya <surya1@llnl.gov>, 2011-08-24 09:52:16 -0700, , convert statement as_if kernel.m4 statement found kernel.m4 converted use portable alternative provided autoconf as_if macro signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
6021,2984e0bb0c1dd3b96166b4c3ab99771e8712f686,rakash Surya <surya1@llnl.gov>, 2011-08-24 09:23:44 -0700, , fix minor autoconf error message inconsistency autoconf error message inconsistent rest build system specific inconsistency addressed commit following second line error message config_preempt check missing third asterisk error message prefixed two tab whereas majority error message prefixed single tab signed prakash surya surya1 llnl.gov signed brian behlendorf behlendorf1 llnl.gov,,
6022,1a2e6a635f9ca259c687d062a133fb972c5d84c5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-22 15:58:54 -0700,370, fix incorrect zpool_cache substitution regression accidentally introduced commit aa2b489 attempting simplify init script accidentally confused etc init.d etc zfs path change reverts init script modification signed brian behlendorf behlendorf1 llnl.gov close 370,,
6023,fd1cd4888a197256d18a877c7fcf259e50ccd65f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-22 09:25:30 -0700,356, merge branch udev merge remaining udev restructuring change cleanup signed brian behlendorf behlendorf1 llnl.gov signed kyle fuller inbox signed zachary bedell zac thebedells.org close 356,,
6024,aa2b4896c93bbb2652ddc5e10e66175e54ff56c8,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-09 16:49:18 -0700, , fix autoconf variable substitution init script change variable substitution init script template according method described autoconf manual chapter 4.7.2 installation directory variable signed brian behlendorf behlendorf1 llnl.gov,,
6025,f0102d6e75d51b8d92624ba054a3fa54c807fb7f,yle Fuller <inbox@kylefuller.co.uk>, 2011-08-09 22:39:47 +0100, , make dracut module setup.sh autoconf config file ensures module setup.sh script always able install required dracut component regardless zfs package configured signed brian behlendorf behlendorf1 llnl.gov,,
6026,146cde8f4acd52d258ba80817dd1134702a91954,yle Fuller <inbox@kylefuller.co.uk>, 2011-08-06 18:28:16 +0100, , move zfs udev rule dracut udev rules.d rule doe need dracut specific automatically loading zfs module stack zfs device detected usually desirable concern might cause trouble large pool want automatically import pool disk available however cross bridge come signed brian behlendorf behlendorf1 llnl.gov,,
6027,9c4f40b894dd5b5c2ef18546d23d7e91095ac509,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-02 13:20:00 -0700, , buildbot suppression rule warning listed suppression file suppressed flagged regular buildbot build warning expected harmless obscure real issue unless suppressed signed brian behlendorf behlendorf1 llnl.gov,,
6028,4c069d349440cbf1ebe234d65b53ab41eaea5569,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-19 16:24:04 -0700, , fixed uninitialized variable warning accidentally introduced commit fix simply initialize variable cmd zfs zfs_main.c 4460 warning who_type may used uninitialized function signed brian behlendorf behlendorf1 llnl.gov,,
6029,29b35200a7b3b0b803b69bb18f8435f4b9e66151,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-19 15:12:44 -0700, , fix missing format argument warning accidentally introduced commit fix simply add missing format specifier cmd zfs zfs_main.c 4565 warning format string literal format argument signed brian behlendorf behlendorf1 llnl.gov,,
6030,95d9fd028b9a27294a1b807915de17877563bd6d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-19 14:49:49 -0700, , fix incompatible pointer type warning warning accidentally introduced commit updated .readpages implementation fix simply cast helper function appropriate type passed signed brian behlendorf behlendorf1 llnl.gov,,
6031,b740d602bdeca757180a7098be28701a7cde7fbd,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-21 12:39:42 -0700,329, disable zfs etc mtab update completely disable zfs binary attempting directly update etc mtab linux port relies entirely mount.zfs helper safely update etc mtab left etc mtab update zfs binary could race concurrent non zfs mount routing everything system mount command ensures etc mtab update locked properly signed brian behlendorf behlendorf1 llnl.gov issue 329,,
6032,ddd052aa8311f846e3d3f7a9ddf1a21d317fb04a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-05 16:55:04 -0700,296, improve check hardened gentoo kernel defines super block operation callback const prevents autoconf test assigning callback result false negative moving assignment declaration avoid issue get correct result patched kernel signed brian behlendorf behlendorf1 llnl.gov close 296,,
6033,de0a1c099b7dc6722eb428838e893a4d9490a21e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-08 14:50:36 -0700, , autogen refresh udev change run autogen.sh using autotools version upstream autoconf 2.63 automake 1.11.1 libtool 2.2.6b,,
6034,12d06bac9b22b11d8a322dfea4bdb50b106c254f,yle Fuller <inbox@kylefuller.co.uk>, 2011-08-05 20:22:58 +0100,356, move udev rule etc udev lib udev change move default install location zfs udev rule etc udev lib udev correct convention rule provided package installed lib udev etc udev directory reserved custom rule local override additionally patch clean abuse bindir install location adding udevdir udevruledir install directory allows revert default bin install location udev install directory set following new option udevdir dir install udev helper eprefix lib udev udevruledir dir install udev rule udevdir rules.d signed brian behlendorf behlendorf1 llnl.gov close 356,,
6035,f3ab88d6461dec46dea240763843f66300facfab,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-04 16:25:43 -0700,355, correctly lock page .readpages unlike .readpage callback passed single locked page populated .readpages callback passed list unlocked page marked read ahead pg_readahead set responsibly .readpages ensure page properly locked populated prior change requested read ahead page would updated outside page lock unsafe unlocked page would unlocked harmless immediately detected bug unfortunately newer kernel failed detect issue check done vm_bug_on disabled default luckily old debian lenny 2.6.26 kernel caught simply bug_on straight forward fix update .readpages callback use helper function helper function ensure page list properly locked passed .readpage callback addition resolving bug result nice simplification existing code downside change instead passing one large read request dmu multiple smaller one submitted request however marked readahead lower layer issue large regardless thus request hit arc cache futher optimization code done future perform analysis determines worthwhile moment preferable code correct understandable signed brian behlendorf behlendorf1 llnl.gov close 355,,
6036,76659dc110ef2ada13bcb8e4e2ec60d8216c6836,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-01 18:24:40 -0700,174, add per filesystem long time kernel moving away using pdflush daemon write old dirty page disk primary reason pdflush daemon single threaded limiting factor performance since pdflush sequentially walk dirty inode list super block delay processing slow dirty page writeback filesystems replacement pdflush called bdi backing device info bdi system involves creating per filesystem control structure private set queue manage writeback advantage greater parallelism improves performance prevents single filesystem slowing writeback others long time system existed kernel strictly required implement bdi scheme however linux 2.6.36 kernel pdflush functionality retired since zfs already bypass page cache issue mmap writes must page cache even adding missing support newer kernel overlooked mechanism trigger writeback however one critical case implementing bdi functionality cause problem application handle page fault enter callpath result application hanging number dirty page system drop dirty ratio without registered filesystem dirty page get written thus application hang mentioned issue older kernel pdflush would eventually write dirty page change add structure zfs_sb_t already allocated per super block registered filesystem mounted unregistered unmount registered mounted snapshot read change result flush pool thread dynamically created destroyed per mounted filesystem writeback signed brian behlendorf behlendorf1 llnl.gov close 174,,
6037,3c0e5c0f455576d045fa443cbab74834d70ded55,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-01 21:28:51 -0700, , cleanup mmap writes existing implementation .writepage zpl_putpage functional entirely correct particular would move dirty page clean state simply copying arc cache would result page lost system crash enough though linux vfs believed safe stable storage since moment virtually except mmap bypass page cache bad sound however hopefully start using page cache getting right becomes important good improve patch take big step direction updating code correctly move dirty page writeback phase marked clean dirty page copied arc set writeback completion callback registered transaction page stay writeback dmu run completion callback indicating page stable storage point page safely marked clean process normally entirely asynchronous repeated every dirty page may initially sound inefficient page end txgs mean eventually written disk nicely batched however room improvement may still desirable batch page larger writes dmu would reduce number callback small buffer required arc finally caller requires done synchronously setting wb_sync_all zfs_sync_always set trigger zil_commit flush data stable storage point registered callback run leaving date safe disk marked clean returning .writepage signed brian behlendorf behlendorf1 llnl.gov,,
6038,ddd0fd9ef64648333b79b4cc8a13216399cefec9,unnar Beutner <gunnar@beutner.name>, 2011-07-29 10:17:50 +0200,190, use libshare simplify code bit using existing code fork exec process signed brian behlendorf behlendorf1 llnl.gov issue 190,,
6039,3132cb397ad1b60cac548b35ad8bbd4c7183fde4,unnar Beutner <gunnar@beutner.name>, 2011-07-29 10:17:46 +0200,190, use dev null stdout stderr simply closing stdout stderr file descriptor child process bad side effect example child writes stdout stderr open ing file open call might returned file descriptor one would usually expect stdout stderr thereby causing directed writes signed brian behlendorf behlendorf1 llnl.gov issue 190,,
6040,5333eb0b3b18d345052b8cfaf41b90a0c5781fb8,ames H <james@kagisoft.co.uk>, 2011-07-26 11:47:20 +0100,341, call exportfs nfs share moment call exportfs every time check whether nfs share active happens every time run zfs zpool command making extremely slow lot export time taken approx number share commit store output exportfs temporary file use speed subsequent access mechanism still slow ten thousand nfs share still painful running zfs zpool command signed gunnar beutner gunnar beutner.name signed brian behlendorf behlendorf1 llnl.gov close 341,,
6041,77999e804fff35782ab4b578d2cecf064c54a841,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-01 12:10:54 -0700,340, merge branch illumos merge ten upstream fix already made illumos freebsd zfs implementation brings date latest zfs change illumos credit martin matuska freebsd project posting excellent summary upstream patch missing illumos 1313 integer overflow txg_delay illumos 278 get rid zfs python pyzfs dependency illumos 1043 recursive zfs snapshot destroy fails illumos 883 zil reuse remount corruption illumos 1092 zfs refratio property illumos 1051 zfs handle illumos 510 zfs get enhancement mountpoint argument illumos 175 zfs vdev cache consumes excessive memory illumos 764 panic zfs dbuf_sync_list illumos xxx zdb vvv broken zfs diff integration signed brian behlendorf behlendorf1 llnl.gov close 340,,
6042,cddafdcbc55a38cdbdd3dc8c58f447b22bd847ee,artin Matuska <mm@FreeBSD.org>, 2011-08-01 10:34:06 -0700,352, illumos 1313 integer overflow txg_delay function txg_delay used delay txg transaction group thread zfs timeout value function calculated using int timeout ddi_get_lbolt tick later actual wait performed ddi_get_lbolt timeout tx_syncing_txg txg txg_stalled void cv_timedwait tx_sync_lock timeout ddi_get_lbolt ddi_get_lbolt function return current uptime clock tick typed clock_t clock_t type bit architecture int64_t timeout variable overflow depending tick frequency e.g 1000 overflow 28.855 day make expression ddi_get_lbolt timeout always false txg thread delayed anymore lead slowdown zfs writes attached patch initializes timeout clock_t match return value ddi_get_lbolt signed brian behlendorf behlendorf1 llnl.gov issue 352,,
6043,0b7936d5c2337bc976ac831c1c38de563844c36b,lexander Stetsenko <ams@nexenta.com>, 2011-07-26 15:44:36 -0700,160, illumos 278 get rid zfs python pyzfs dependency remove python pyzfs dependency consistency ensure full functionality even mimimalist environment reviewed gordon.w.ross gmail.com reviewed trisk opensolaris.org reviewed gmail.com reviewed jerry.jelinek joyent.com approved garrett nexenta.com reference illumos issue patch http www.illumos.org issue 278 http github.com illumos illumos gate commit 1af68beac3 signed brian behlendorf behlendorf1 llnl.gov issue 340 issue 160 signed brian behlendorf behlendorf1 llnl.gov,,
6044,ca5252204aa25f81e9f19084917e0a46fdd470b0,artin Matuska <mm@FreeBSD.org>, 2011-07-26 13:08:02 -0700,340, illumos 1043 recursive zfs snapshot destroy fails prior revision 11314 user recursively destroying snapshot dataset target dataset required exist function introduced security check target dataset since target dataset doe exist recursive destroy performed 11314 delete permission check snapshot master dataset performed step reproduce zfs create pool zfs snapshot pool zfs destroy pool therefore suggest fallback old security check target snapshot doe exist continue destroy reference illumos issue patch http www.illumos.org issue 1043 http www.illumos.org attachment 217 signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6045,3e31d2b080b4e6665a93691d171a13d7e29a768a,ric Schrock <Eric.Schrock@delphix.com>, 2011-07-26 12:41:53 -0700,340, illumos 883 zil reuse remount corruption moving zil_free cleanup zil_close prevents problem occurring first place good description issue fix illumus 883 reviewed matt ahrens matt.ahrens delphix.com reviewed adam leventhal adam.leventhal delphix.com reviewed albert lee trisk nexenta.com reviewed gordon ross gwr nexenta.com reviewed garrett amore garrett nexenta.com reivewed dan mcdonald danmcd nexenta.com approved gordon ross gwr nexenta.com reference illumos issue patch http www.illumos.org issue 883 http github.com illumos illumos gate commit c9ba2a43cb signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6046,f5fc4acaa77e2c1782a9495bbf1a39884b4c3940,att Ahrens <Matt.Ahrens@delphix.com>, 2011-07-26 12:23:00 -0700,340, illumos 1092 zfs refratio property add refratio property compression ratio based data referenced snapshot compressratio filesystems volume compressratio based data used includes block child block shared origin needed figure much space filesystem would use compressed ignoring snapshot reviewed george wilson george.wilson delphix.com reviewed adam leventhal adam.leventhal delphix.com reviewed dan mcdonald danmcd nexenta.com reviewed richard elling richard.elling reviewed mark musante mark.musante oracle.com reviewed garrett amore garrett nexenta.com approved garrett amore garrett nexenta.com reference illumos issue patch http www.illumos.org issue 1092 http github.com illumos illumos gate commit 187d6ac08a signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6047,6d974228ef05366c546bb04198dafcb38785c16d,eorge Wilson <George.Wilson@delphix.com>, 2011-07-26 12:08:52 -0700,340, illumos 1051 zfs handle imbalanced luns today zfs try allocate block evenly across device mean device imbalanced zfs use lot cpu searching space device tend pretty full instead fail quickly full luns move onto device availability reviewed eric schrock eric.schrock delphix.com reviewed matt ahrens matt.ahrens delphix.com reviewed adam leventhal adam.leventhal delphix.com reviewed albert lee trisk nexenta.com reviewed gordon ross gwr nexenta.com approved garrett amore garrett nexenta.com reference illumos issue patch http www.illumos.org issue 510 http github.com illumos illumos gate commit 5ead3ed965 signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6048,bb939d10859e4f56bc793c4d5077e680a8c6c3aa,hampavman <sham.pavman@nexenta.com>, 2011-07-26 11:53:09 -0700,340, illumos 510 zfs get enhancement mountpoint argument zfs get command able deal mountpoint argument already work zfs list command zfs list export home estibi name used avail refer mountpoint rpool export home estibi 1.14g 3.86g 1.14g export home estibi fails zfs get zfs get export home estibi open export home estibi invalid dataset name reviewed eric schrock eric.schrock delphix.com reviewed deano deano reviewed garrett amore garrett nexenta.com approved garrett amore garrett nexenta.com reference illumos issue patch http www.illumos.org issue 510 http github.com illumos illumos gate commit 5ead3ed965 signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6049,2cc6c8db12eaf8d1a1c17a13fbc6d25d8244486e,arrett D'Amore <garrett@nexenta.com>, 2011-04-22 00:49:41 -0700,340, illumos 175 zfs vdev cache consumes excessive memory note current zfs code turn vdev cache helpful case actually harmful better disable time passed actually remove simplify code disable setting zero note solaris made change reference illumos issue patch http www.illumos.org issue 175 http github.com illumos illumos gate commit b68a40a845 reviewed george wilson george.wilson delphix.com reviewed eric schrock eric.schrock delphix.com approved richard lowe richlowe richlowe.net signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6050,ef3c1dea7024b07b4ace6115de9f22a99c1394d8,ordon Ross <gwr@nexenta.com>, 2011-07-26 11:37:06 -0700,340, illumos 764 panic zfs dbuf_sync_list hypothesis going time past something i.e call one dbuf_rm_spill  dbuf_rm_spill dnode_t dmu_tx_t dbuf_free_range dmu_spill_blkid dmu_spill_blkid dbuf_undirty currently dbuf_undirty leave spill block put previously dbuf_dirty free sometime later dbuf_sync_list trip reference free typically reused memory also dbuf_undirty call bogus block need test dmu_spill_blkid similar called dbuf_dirty reference illumos issue patch http www.illumos.org issue 764 http github.com illumos illumos gate commit 3f2366c2bb reviewed george wilson gwilson zfsmail.com reviewed mark.maybe oracle.com reviewed albert lee trisk nexenta.com approved garrett amore garrett nexenta.com signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6051,7b8518cb8d39aa340fecf559143763b27b212b0d,im Haley <Tim.Haley@Sun.COM>, 2011-07-26 16:38:27 -0700,340, illumos xxx zdb vvv broken zfs diff integration reference illumos issue patch http github.com illumos illumos gate commit 163eb7ff signed brian behlendorf behlendorf1 llnl.gov issue 340,,
6052,bfb73f92773dc3471e3a6274970c02e0700b6c7d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-08-01 10:27:54 -0700, , add .gitignore zfs distro init script treat automatically generated zfs distro init script build product adding directory specific .gitignore file,,
6053,5faa9c0367e8d6b1ee1c45f1ebeffd3e53ef35e8,yle Fuller <inbox@kylefuller.co.uk>, 2011-07-25 01:00:53 +0100,336, turn init.d script autoconf config file change ensures path used provided init script always reference prefix provided configure time sbindir sysconfdir prefix correctly replaced build time signed brian behlendorf behlendorf1 llnl.gov close 336,,
6054,7f4afd300b753ee7e0ce1f8d12c098119193001b,achary Bedell <zac@thebedells.org>, 2011-07-31 00:21:40 -0400,347, wrap dracut script char signed brian behlendorf behlendorf1 llnl.gov close 347,,
6055,7304278d7f087846392d6efc8802da48811476f2,yle Fuller <inbox@kylefuller.co.uk>, 2011-07-25 01:36:37 +0100, , make autogen.sh executable signed brian behlendorf behlendorf1 llnl.gov,,
6056,a4719e54e8628564ffda33cffee59812b61f273b,achary Bedell <zac@thebedells.org>, 2011-07-24 16:53:15 -0400, , catch return error zpool command fix bug effect first reboot install using dracut dracut module check return value several call function resulted using pool available root boot zfs module auto import pool likely happen initial restart fresh install requires juggling dracut emergency holographic shell fix patch check return code output zpool list related function correctly fall explicit zpool import code branch module import pool load signed brian behlendorf behlendorf1 llnl.gov,,
6057,1ef5e8296a07a0d208d0663ae966c8b0206f7e6a,achary Bedell <zac@thebedells.org>, 2011-07-24 16:46:16 -0400, , soft hard tab consistency upstream source rest project use hard instead soft tab signed brian behlendorf behlendorf1 llnl.gov,,
6058,beb982690293310b14a4835d3ffeb883ba03cc0a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-22 13:55:27 -0700, , fix txg_sync_thread deadlock update two kmem_alloc dbuf_dirty use km_pushpage function called txg_sync_thread must ensure reenter zfs filesystem code via .writepage callback would result deadlock deadlock rare observed abusive mmap write workload signed brian behlendorf behlendorf1 llnl.gov,,
6059,f7ef846ea19809b2f373c0542741ac04c65a07cb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-22 13:56:03 -0700, , add missing pool option bootfs example dracut documentation sightly incorrect lacked trailing required pool argument add signed brian behlendorf behlendorf1 llnl.gov,,
6060,0da78696904f6e0e7cfedd2a0296879f47717f4f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-22 14:10:38 -0700,320, fix configure config_ option detection latest kernel longer define used detect new style autoconf.h kernel configure option result config_ check always failing incorrectly newer kernel fix simplification testing method rather attempting explicitly include renamed config header simpler unconditionally include linux module.h must pick correctly named header signed brian behlendorf behlendorf1 llnl.gov close 320,,
6061,c064bdee95583102e216354bbdece4818d59b644,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-22 14:23:12 -0700,320, fix configure config_ option detection latest kernel longer define used detect new style autoconf.h kernel configure option result config_ check always failing incorrectly newer kernel fix simplification testing method rather attempting explicitly include renamed config header simpler unconditionally include linux module.h must pick correctly named header signed brian behlendorf behlendorf1 llnl.gov close 320,,
6062,22872ff5da0d12fe393e40d3e4b3c5a58d93e360,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-20 16:50:22 -0700,116, use zfs_mknode create dataset root long long long ago effort port zfs begun zfs_create_fs function heavily modified remove vfs dependency allowed lustre use dataset without spend time porting required vfs code fast forward several year vfs code place still relying modified zfs_create_fs required anymore use zfs_mknode create root znode filesystem commit reverts content zfs_create_fs largely match upstream opensolaris code minor modification accomidate linux vfs code fix issue 116 bootstraping enough vfs data structure rely zfs_mknode create root directory ensures created properly support system attribute previously behaved differently directory modified signed brian behlendorf behlendorf1 llnl.gov close 116,,
6063,9fd91daeef4df4e2bc66f54bb97c88225c6dd2c7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-20 13:10:07 -0700,262, honor setgit bit directory newly created file always created fsuid fsgid current user credential correct except case parent directory set setgit bit case according posix newly created file directory inherit gid parent directory additionally case subdirectory also inherit setgit bit finally commit performs little cleanup vattr_t initialization moving common helper function signed brian behlendorf behlendorf1 llnl.gov close 262,,
6064,fe0ed8f910c1e4288dc190546cfe98ecf545b547,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-19 21:44:07 -0700,328, fix make install overly broad running make install without destdir set module install rule would mistakenly destroy module file installed kernel could lead non functional system alternate kernel depmod run kernel compiled issue would impact anyone using make deb rpm pkg build target build install package fix issue remove extraneous build product destdir set almost exclusively indicates building package installed build product temporary staging location additionally limit removal unneeded build product target kernel version signed brian behlendorf behlendorf1 llnl.gov close 328,,
6065,e80cd06b8e0428f3ca2c62e4cb0e4ec54fda1d5c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-19 21:06:50 -0700,328, fix make install overly broad running make install without destdir set module install rule would mistakenly destroy module file installed kernel could lead non functional system alternate kernel depmod run kernel compiled issue would impact anyone using make deb rpm pkg build target build install package fix issue remove extraneous build product destdir set almost exclusively indicates building package installed build product temporary staging location additionally limit removal unneeded build product target kernel version signed brian behlendorf behlendorf1 llnl.gov close 328,,
6066,cfc9a5c88f91f7b4d606fce89505e1f404691ea5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-19 11:48:46 -0700,327, fix zpl_writepage deadlock disable normal reclaim path zpl_putpage ensures memory allocation call path never enter direct reclaim happen might try write additional page calling zpl_putpage resulting deadlock sitution typically handled linux marking offending allocation gfp_nofs however since much code used common make sense use pf_memalloc flag entire call tree alternately code could updated pas needed allocation flag invasive change following example described deadlock triggered test 074 xfstest suite call trace down_write 0x32 0x40 dnode_new_blkid 0x94 0x2d0 zfs dbuf_dirty 0x556 0x750 zfs 0x81 0xd0 zfs dmu_write 0x90 0x170 zfs zfs_putpage 0x2ce 0x360 zfs zpl_putpage 0x1e 0x60 zfs zpl_writepage 0x12 0x20 zfs writeout 0xa7 0xd0 0x13b 0x170 migrate_pages 0x434 0x4c0 compact_zone 0x4fb 0x780 0xa1 0xe0 0x11c 0x190 0x5eb 0x8b0 0xaa 0x110 0xe 0x50 kv_alloc 0x3f 0xb0 spl 0x339 0x660 spl dbuf_create 0x43 0x370 zfs 0x241 0x480 zfs dbuf_hold_impl 0x86 0xc0 zfs dbuf_hold_level 0x1f 0x30 zfs 0x4e 0x110 zfs 0x359 0x6f0 zfs 0x4f 0x70 zfs zfs_putpage 0x23d 0x360 zfs zpl_putpage 0x1e 0x60 zfs 0x1c9 0x4a0 zpl_writepages 0x18 0x20 zfs do_writepages 0x21 0x40 0xdd 0x2c0 0xce 0x180 0xab 0x1b0 wb_writeback 0x29b 0x3f0 wb_do_writeback 0xbb 0x240 bdi_forker_task 0x6a 0x310 kthread 0x96 0xa0 signed brian behlendorf behlendorf1 llnl.gov close 327,,
6067,abd39a8289c3bc2766f281933689d5140445aa85,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-19 09:31:23 -0700,291, fix zio_execute deadlock avoid deadlocking system crucial memory allocation performed zio_execute call path marked km_pushpage gfp_nofs ensures z_wr_iss thread processing syncing transaction group doe enter filesystem code deadlock call trace cv_wait_common 0x78 0xe0 spl txg_wait_open 0x7b 0xa0 zfs dmu_tx_wait 0xed 0xf0 zfs zfs_putpage 0x219 0x360 zfs zpl_putpage 0x1e 0x60 zfs zpl_writepage 0x12 0x20 zfs writeout 0xa7 0xd0 0x13b 0x170 migrate_pages 0x434 0x4c0 compact_zone 0x4fb 0x780 0xa1 0xe0 0x11c 0x190 0x5eb 0x8b0 kmem_getpages 0x62 0x170 fallback_alloc 0x1ba 0x270 0x99 0x160 __kmalloc 0x189 0x220 0xeb 0x130 spl dnode_hold_impl 0x46a 0x550 zfs dnode_hold 0x19 0x20 zfs dmu_read 0x33 0x180 zfs space_map_load 0xfd 0x320 zfs 0x10c 0x170 zfs metaslab_alloc 0x469 0x800 zfs 0x6c 0x2f0 zfs zio_execute 0x99 0xf0 zfs taskq_thread 0x1cc 0x330 spl kthread 0x96 0xa0 signed brian behlendorf behlendorf1 llnl.gov issue 291,,
6068,a140dc5469399eaf2347ee7db503275f38f5dc12,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-18 20:06:32 -0700,302, fix mmap write read deadlock modifing overlapping region file using mmap write read possible deadlock due lock inversion zfs_write zfs_read hook first take zfs range lock lock individual page conversely using mmap zpl_writepage hook called individual page lock already taken zfs_putpage take zfs range lock straight forward fix simply take zfs range lock mmap case individual page still locked thus serializing access updating region file write mmap always dodgy thing change minimum ensures deadlock consistent existing linux semantics enforced vfs issue solaris range locking performed zfs range lock filesystem perform file locking linux vfs provides many service may possible desirable latter date entirely dump existing zfs range locking rely linux vfs page lock however safest perform layer locking zfs tightly integrated page cache signed brian behlendorf behlendorf1 llnl.gov issue 302,,
6069,7f9d9946f88a37954ac208272bee0d4b3988da7f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-19 11:22:29 -0700, , update zpool import man page following supported option missing zpool.8 man page opensolaris man page originally used simply date code zpool import recovery mode allow missing log device import mount determine recoverable signed brian behlendorf behlendorf1 llnl.gov,,
6070,61f218b0900194edfb2e67739221e49c46fc5ee0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-15 16:15:27 -0700,319, fix send recv dataset busy error commit fix regression accidentally introduced linux 2.6.39 compatibility chanages part change instead holding active reference namepsace longer posible reference taken super block reference ensures super block remains valid use handle unlikely race condition filesystem unmounted concurrently start zfs send recv code updated take super block reference existing reference indicates filesystem active use unfortunately zfs recv case case newly created dataset super block without active reference result dataset busy error straight forward fix simply update code always take reference even zero may expose unlikely concurrent umount send recv case consequence minor close 319,,
6071,615ab66d18f74b3f4979c06192e1aa1082523dd3,yle Fuller <inbox@kylefuller.co.uk>, 2011-07-10 16:57:33 +0100,322, provide rc.d script archlinux unlike linux distribution archlinux installs init script etc rc.d insead etc init.d commit provides archlinux rc.d script zfs extends build infrastructure ensure get installed correct place signed brian behlendorf behlendorf1 llnl.gov close 322,,
6072,057e8eee35d4cc06cc4edd6e8239d28a4122cf71,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-09 15:44:16 -0700, ," improve fstat performance factor performance improvement using linux helper however use safely need ensure value cached inode kept rigerously date unfortunately case blksize block atime field moment authoritative value still stored znode patch introduces optimized call idea use date value inode blksize block atime field znode latter date able strictly use inode value improve performance remaining overhead call attributed take znode mutex overhead unavoidable inode kept strictly date careful reader notice use customary zfs_enter zfs_exit macro macro designed ensure filesystem torn middle operation however case vfs holding reference active inode know impossible performance test test call fstat system call 10,000,000 time open file description tight loop test result show zfs stat performance slower ext4 2.5x improvement clear long term plan get parity ext4 filesystem test test test average time ext4  ext4 7.785s 7.899s 7.284s 7.656s 1.000x zfs 0.6.0 rc4 24.052s 22.531s 23.857s 23.480s 3.066x zfs faststat 9.224s 9.398s 9.485s 9.369s 1.223x second test run copy usr tree contains 110514 file test run multiple time using cold cache proc sys drop_caches hot cache expected change signigicantly improved zfs hot cache performance quite bring zfs parity ext4 little surprisingly zfs cold cache performance better ext4 probably attributed zfs allocation policy locating meta data disk minimizes seek time default ext4 allocator spread data entire disk locating directory filesystem cold hot  ext4 13.318s 1.040s zfs 0.6.0 rc4 4.982s 1.762s zfs faststat 4.933s 1.345s",,
6073,abd8610cd5ffd04f0fa07297f53852e744ea389e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-08 12:41:57 -0700,316, add l2arc tunables performance l2arc tweaked number tunables may necessary different workload l2arc_write_max max write byte per interval extra write byte device warmup skip caching prefetched buffer l2arc_headroom number max device writes precache l2arc_feed_secs second l2arc writing min feed interval millisecond turbo l2arc warmup l2arc_norw read writes signed brian behlendorf behlendorf1 llnl.gov close 316,,
6074,e0f86c98620bbc085a7edddd8f6dbf82e4783a46,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-08 12:16:09 -0700,311, update zfs send documentation option missing manpage commit add documentation feature close 311,,
6075,1fa3bb750d0418dc4a5a3abd2bd8cce9c205c9e1,ajar A. Nugraha <github@fajar.net>, 2011-07-07 14:25:53 +0700,314, remove zfs service uninstall upgrade caused problem upgrade using rpm new version run chkconfig add effect since service already added old version run chkconfig del caused zfs service removal run chkconfig del complete uninstall checking value preun uninstall upgrade http www.rpm.org max rpm rpm inside scripts.html signed brian behlendorf behlendorf1 llnl.gov close 314,,
6076,3af2ce4d6883ab96814fb1d0bc01368bb06c5343,ajar A. Nugraha <github@fajar.net>, 2011-07-07 14:22:19 +0700,315, check udevadm settle udevsettle rhel5 doe udevadm fix initscript accordingly signed brian behlendorf behlendorf1 llnl.gov close 315,,
6077,341b5f1d4c03c0f318218346154e2fb79a8acb92,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-06 11:36:54 -0700, , update ztest path unfortunately ztest hard coded export zdb utility installed certain location packaging updated install zdb sbin ztest broken fix updating ztest check common install path,,
6078,b1c932d318ae604b6968ffef136952af4e80a407,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-05 12:12:08 -0700, , add proper library versioning zfs library never properly versioned since api remained static quite time never issue however going forward versioned commit version library 1.0.0. version must updated reflect change library,,
6079,8b0cf399ff9e764a08faea654bd30043a861cb09,unnar Beutner <gunnar@beutner.name>, 2011-07-03 02:43:25 +0200, , updated init script enable automatic sharing zfs datasets relevant init script updated automatically share zfs datasets using zfs share boot time signed brian behlendorf behlendorf1 llnl.gov,,
6080,3c9609b322db2925aff628217eca9297d6fb569b,unnar Beutner <gunnar@beutner.name>, 2011-07-02 21:34:12 +0200, , renamed have_share ifdefs have_smb_share remaining code guarded have_share ifdefs related .zfs share functionality currently available linux solaris .zfs share directory used set permission smb share signed brian behlendorf behlendorf1 llnl.gov,,
6081,52e7c3a2e503f78a44fbe5fd9299b11c3aa98651,unnar Beutner <gunnar@beutner.name>, 2011-07-02 21:34:08 +0200, , link libshare directly libzfs drop usage dlopen dlsym libshare need zfs package provide libshare unlike solaris guaranteed available avoids possible problem hardcoding libshare path code e.g user specify different install path via configure option additionally simplifies code good maintainability signed brian behlendorf behlendorf1 llnl.gov,,
6082,46e18b3f0fc13aa0859d0fef7dc829db20491ab6,unnar Beutner <gunnar@beutner.name>, 2011-07-02 21:34:05 +0200, , implemented sharing datasets via nfs using libshare sharenfs sharesmb property depend libshare library export datasets via nfs smb commit implement base libshare functionality well support managing nfs share signed brian behlendorf behlendorf1 llnl.gov,,
6083,dc2a4a9136ab5f6e56f9ca8581ec1535adce6c36,achary Bedell <zac@thebedells.org>, 2011-07-04 14:38:10 -0400, , document initramfs process add documentation dracut initramfs process includes detailing basic boot process option available signed brian behlendorf behlendorf1 llnl.gov,,
6084,fde4ce992db516796df3a7d1c0e018c5f8c537f6,achary Bedell <zac@thebedells.org>, 2011-07-04 13:25:31 -0400, , update dracut 010 update dracut module dracut 010 fix race condition caused boot fail system add support zfs_force flag parsing spl_hostid kernel command line signed brian behlendorf behlendorf1 llnl.gov,,
6085,e93ced48475b697734ae4fbc65c4e600b9752849,achary Bedell <zac@thebedells.org>, 2011-07-04 14:58:51 -0700, , update zfs.gentoo zfs.lsb init script update path zpool zfs tool log non error condition fatal umount fails shutdown final init remount take care usr use signed brian behlendorf behlendorf1 llnl.gov,,
6086,c8082367cfe9954f0e932fb1513b518d8b84022d,unnar Beutner <gunnar@beutner.name>, 2011-07-03 02:38:50 +0200, , removed erroneous backticks zfs.lunar init script backticks would cause output zfs command evaluated input construct rather exit status signed brian behlendorf behlendorf1 llnl.gov,,
6087,0f4524cca43b1718d54970fcaf0201541733903c,unnar Beutner <gunnar@beutner.name>, 2011-07-03 02:35:58 +0200, , fixed indentation zfs.lunar init script one block init script indented properly signed brian behlendorf behlendorf1 llnl.gov,,
6088,5a52105925e461e45f4948fc77695b25d3fa3009,rasad Joshi <pjoshi@stec-inc.com>, 2011-07-04 23:45:35 +0100,306, use consistent error message zpool sub command zpool sub command like iostat list status display consistent message given pool unavailable pool present change unifies default behavior follows root prasad zpool list pool available pool available root prasad zpool iostat pool available pool available root prasad zpool status pool available pool available root prasad zpool list tan open tan pool root prasad zpool iostat tan open tan pool root prasad zpool status tan open tan pool reported rajshree thorat rthorat stec inc.com signed prasad joshi pjoshi stec inc.com signed brian behlendorf behlendorf1 llnl.gov close 306,,
6089,b59322a0d8919cc0ed5982f5a869e9e022645515,ndrew Tselischev <andrewtselischev@gmail.com>, 2011-07-04 01:49:41 -0700, , fix rc_parallel yes error rc_parallel yes zfs start localmount lead file directory error system usr separate partition signed brian behlendorf behlendorf1 llnl.gov,,
6090,b2f25e00ec993e0cefcc70f0ccf00cf746fc1739,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-01 15:24:34 -0700, , prep zfs 0.6.0 rc5 tag create fifth 0.6.0 release candidate tag rc5,,
6091,d9365224ea04562af1b0cf2a1c2e84ab429a13b2,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-01 15:23:17 -0700, , prep spl 0.6.0 rc5 tag create fifth 0.6.0 release candidate tag rc5,,
6092,285226eff39b807c154748a75cef57ddff08a352,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-30 09:38:52 -0700, , always allow non user xattrs linux may disable user xattrs security system trusted xattr namespaces must always available xattrs supported filesystem enforcement user xattrs performed zpl_xattr_user_ handler solaris single xattr namespace managed globally,,
6093,f2cfee80e3f94cd9d67c3f1abec97c9a5a5ecc17,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-29 15:03:36 -0700, , fix implicit declaration mkdirp lib libspl include libgen.h header file mistakenly left make dist tarball happens cause build failure creating package system libgen included instead simply result following warning due missing forward declaration mkdirp lib libzfs libzfs_mount.c 417 warning implicit declaration function mkdirp wimplicit function declaration,,
6094,a89c3e0bd509267225b5699c65aaf39acf2fce18,ohan Puri <rohan.puri15@gmail.com>, 2011-06-29 11:00:58 -0700,253, support mandatory lock nbmand linux kernel already support mandatory locking change replaces solaris mandatory locking call linux equivilants fact look like code could removed entirely checking already done generically linux vfs however leave place even redundant case missed something original patch update code support mandatory locking done rohan puri patch updated version compatible previous mount option handling change original patch rohan puri rohan.puri15 gmail.com signed brian behlendorf behlendorf1 llnl.gov close 222 close 253,,
6095,2cf7f52bc42f215d4ef27d0fd75fc1b1417cb841,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-19 11:44:07 -0700,231, linux compat 2.6.39 mount_nodev .get_sb callback replaced .mount callback structure using new interface caller must use mount_nodev helper unfortunately new interface longer pass vfsmount zfs layer pose problem existing implementation currently save pointer super block latter use provides entry point namespace layer manipulating certain mount option needed done originally allow command like zfs set atime tank work properly also allowed keep original solaris code unmodified solaris mapping mount point file system fairly natural thing however linux many multiple entry namespace reference filesystem thus keeping back reference filesystem namespace complicated rather introduce ugly hack get vfsmount continue leveraging api change update zfs code thing natural way linux upside resolve compatibility issue long term fix several minor bug reported commit update code remove vfsmount back reference entirely modification filesystem mount option passed kernel via remount expected linux mechanism allows namespace properly handle option apply passing file system aside fixing compatibility issue removing vfsmount benefit simplifying code change fairly involved turned nicely close 246 close 217 close 187 close 248 close 231,,
6096,5c03efc379693f992ebe39c6a00c7297c4a304ea,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-19 12:47:32 -0700,187, linux compat 2.6.39 function take additional qstr argument must passed dentry available passing null safe qstr available relevant security check skipped close 246 close 217 close 187,,
6097,bd2f5ac97f4265523fb1397d845eabb8647c79e4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-16 12:14:33 -0700, , avoid rpm bug make pkg rpm version 4.9.0 observed generate extra debug message certain case debug message prevent cleanly acquiring architecture clearly upstream rpm bug get fixed safe solution pipe result tail grab architecture bit care example rpm spl 0.6.0 rc4.src.rpm arch output freeing read lock locker 0x166 28031 47480843735008 freeing read lock locker 0x168 28031 47480843735008 x86_64,,
6098,e2e7aa2df88708cdcae87688a69ba3f5d1cc43ed,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-01 11:25:07 -0700, , add zfs specific mmap check linux vfs handle virtually mmap access check filesystem specific check left handled .mmap hook normally arn however zfs provides attribute influence mmap behavior honored note currently code modify attribute implemented linux zfs_immutable zfs_readonly zfs_appendonly attribute set file may mmaped write access set file file may mmaped read exec access signed brian behlendorf behlendorf1 llnl.gov,,
6099,f0b2486034f6a4d8cd1a139ff4604e6b9629a64e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-07-01 09:16:15 -0700, , remove unused mmap function following function required opensolaris mmap implementation linux vfs doe heavy lifting required removed keep code clean easy understand  zfs_frlock zfs_no_putpage signed brian behlendorf behlendorf llnl.gov,,
6100,dde471ef5a07bd569deeadd3e9a88655db3e10ab,rasad Joshi <pjoshi@stec-inc.com>, 2011-05-28 02:53:07 +0100,255, mmap optimization enable zfs_getpage zfs_fillpage zfs_putpage zfs_putapage function function modified make linux friendly zfs function read write mmapped page using readpage writepage result clear code patch also add readpages writepages interface function read write list page one function call code change handle first mmap optimization mentioned http github.com behlendorf zfs issue 225 signed prasad joshi pjoshi stec inc.com signed brian behlendorf behlendorf llnl.gov issue 255,,
6101,2a005961a48e748632e96272915192dab6ce9401,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-30 14:45:33 -0700, , ensure block device available day disk driver probe device asynchronously mean possible zfs init script run required block device may yet discovered result pool may fail cleanly import boot time particularly common large number device fix init script block udev settle longer detecting new device system settled zfs module loaded pool automatically imported,,
6102,218b8eafbdcb9bc19fc5a252fdd411fde11bca48,rasad Joshi <pjoshi@stec-inc.com>, 2011-06-25 15:06:37 +0100,255, use zfs_setattr according linux kernel commit 2c27c65e using setattr simplifies code therefore patch replaces call vmtruncate zfs_setattr zfs_freesp free disk space belonging file may release page cache flushing dirty data disk must called zfs_freesp suggested brian behlendorf behlendorf1 llnl.gov signed prasad joshi pjoshi stec inc.com close 255,,
6103,b312979252c5b566d2f59febcda67f309637e18c,rasad Joshi <pjoshi@stec-inc.com>, 2011-06-25 13:30:29 +0100,255, tear flush mmap region inode eviction unmap page associated inode page also flushed disk avoid data loss therefore use evict_inode release pagecache api added 2.6.35 kernel ensure compatibility old kernel patch defines function signed prasad joshi pjoshi stec inc.com close 255,,
6104,86fd39f354778eb10e77a7c1660b59ca16ffcc16,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-24 11:57:14 -0700, , linux 2.6.39 compat mutex owner prior linux 2.6.39 defined kernel stored thread_info pointer mutex owner could get pointer current task_struct compare get_current linux 2.6.39 behavior changed mutex store pointer task_struct commit detects type pointer stored mutex adjusts mutex_owner mutex_owned function perform correct comparision,,
6105,79593b0dec57ee94c5bb56cdc2770ebde81ecea9,arik Horn <dajhorn@vanadac.com>, 2011-06-23 22:10:27 -0500, , stabilize hostid rpm installation zfs requires stable hostid recognize foreign pool import hostid linux system change etc hostid file missing particularly dhcp lease update ensure system hostid stable creating etc hostid file output usr bin hostid utility sbin genhostid utility provided initscripts package used creates random hostid break upgrade system already spl module installed external printf used dash builtin lack byte format convenience like hostid substring range sed one liner similarly avoided,,
6106,0d54dcb56685ac58e68e46b7848f0f2c2863dc6e,arik Horn <dajhorn@vanadac.com>, 2011-06-20 14:53:56 -0500, , read etc hostid file directly deprecate usr bin hostid call reading etc hostid file directly add spl_hostid_path parameter override default etc hostid path rename set_hostid function hostid_exec better reflect actual behavior complement new hostid_read function use spl_hostid sentinel value zero seems valid gethostid result linux,,
6107,560bcf9d14a63e2cef4dd49d61399c8a865c1348,ed A. Bass <bass6@llnl.gov>, 2011-06-21 16:18:27 -0700, , multipath device manageability improvement update udev helper script deal device mapper device created multipathd enhancement targeted particular storage network topology evaluation llnl consisting two switch providing redundant connectivity multiple server node disk enclosure key making system manageable create shortnames disk conveys physical location drawer direct attached topology infer disk enclosure pci bus number hba port number path name provided udev switched topology however multiple drawer accessed via single hba port therefore resort assigning drawer identifier based switch port drive enclosure connected information available sysfs add option zpool_layout generate etc zfs zdev.conf using symbolic link dev disk form label uuid switch port slot label string depends subsystem created link default uuid mpath prefix used multipathd uuid unique identifier disk typically obtained scsi_id program denote switch port disk slot number respectively add callout script sas_switch_id use multipathd help create symlinks form described update zpool_id udev zpool rule file handle multipath device conventional drive,,
6108,7e7baecaa321ce4e96938a02b87ab22a7939e422,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-21 14:26:51 -0700, , linux 3.0 compat shrinker compatibility accomindate updated linux 3.0 shrinker api spl shrinker compatibility code updated unfortunately done cleanly without slightly adjusting comapt api see spl commit commit update zfs code use slightly modified api must use latest spl building zfs,,
6109,bf0c60c060ac58c9bb835cb62b49f0cb68bb68e4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-21 10:57:48 -0700, , add linux compatibility test splat test originally designed stress test solaris primatives extending include kernel compatibility test certain linux apis changed frequently test ensure added compatibility working properly unnoticed regression slipped test add basic regression test simply functional test ensure call function safely checking correct behavior difficult since running process influence behavior however function provided kernel successfully call assume working correctly test check shrinker function registered called correctly linux 3.0 shrinker api changed four different time felt need add trivial test case ensure variant work expected,,
6110,a55bcaad181096d764e12d847e3091cd7b15509a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-16 15:39:08 -0700, , linux 3.0 shrinker compatibility update wrapper macro memory shrinker handle 4th api change callback function take shrink_control structure certainly step right direction annoying accomidate yet another version api,,
6111,b00131d43ca344d4b205a03ab3eb771a060e5087,unnar Beutner <gunnar@beutner.name>, 2011-06-20 10:36:58 -0700,266, fix unlink xattr deadlock problem prune_icache try evict delete xattr directory inode well least one xattr inode contained directory happens file created xattr created file behind scene xattr directory file xattr directory created file deleted xattr directory inode least one xattr inode directory evicted prune_icache prune_icache acquires lock inodes call evict inodes xattr directory inode evicted zfs_zinactive attempt delete xattr file contained directory enumerating file zfs_zget called obtain reference xattr file znode try lock xattr inode however xattr inode already locked prune_icache call stack thus leading deadlock reliably reproduced like touch test attr test test echo proc sys drop_caches patch fix deadlock moving zfs_purgedir call instead zfs_rmnode check whether xattr dir empty leaf xattr dir unlinked set find xattrs ensure never access stale super block zfsvfs_teardown update block iput taskq drained avoids potential race file xattr directory removed file system immediately unmounted signed brian behlendorf behlendorf1 llnl.gov close 266,,
6112,6f0cf71e0d191abb850a45f6d216cb5af158a6dd,unnar Beutner <gunnar@beutner.name>, 2011-06-16 20:59:56 +0200,282, removed erroneous call zfs_rmnode iput_final already call zfs_zinactive thus making sure inode properly cleaned call zfs_rmnode would lead double free fix 282,,
6113,df30f56639f96175ba71d83b4456ccf410c46542,hristian KohlschÃ¼tter <christian@kohlschutter.com>, 2011-06-16 21:56:38 +0200,280, add ashift property zpool create disk internal sector larger 512 byte e.g. suffer bad write performance ashift configured correctly caused disk reporting actual sector size sector size 512 byte drive may behave way compatibility reason example wdc wd20ears disk known exhibit behavior creating zpool zfs take wrong sector size set ashift property accordingly 512 whereas set sector 4096 patch allows adminstrator manual specify known correct ashift size zpool create time significantly improve performance certain case however impact total pool capacity see updated ashift property description zpool.8 man page additional detail valid value ashift property range 512b 128kb additionally may set ashift wish auto detect sector size based disk report default behavior common ashift value example zpool create ashift tank raidz2 sda sdb sdc sdd close 280 original patch richard laager rlaager wiktel.com signed brian behlendorf behlendorf1 llnl.gov,,
6114,96801d290652812780cf6c070729154d4af8e1ce,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-16 20:20:22 +0200,281, linux 2.6.37 compat write_flush_fua write_flush write_fua write_flush_fua flag introduced replacement write_barrier done allow richer semantics expressed block layer block layer responsibility choose correct way implement semantics change simply update bio use new kernel api absolutely safe however since zfs depends entirely working designed correctness want careful close 281,,
6115,db97f88646b0d59e8e3db9144006491fb2192854,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-17 11:47:45 -0700, , update rpm deb package fhs compliant change first step towards updating default rpm deb package fhs compliant accomplishes passing following option configure ensure zfs build product installed fhs compliant location configure prefix bindir lib udev libexecdir usr libexec datadir usr share core zfs utility zfs zpool zdb installed sbin core library lib udev helper zpool_id zvol_id lib udev udev helper remaining file zfs package remain previous location usr,,
6116,b772aedeeca32d56ee1509128aa34b7209c01fb7,arik Horn <dajhorn@vanadac.com>, 2011-06-17 10:12:25 -0700, , autogen refresh run autogen.sh using autotools version upstream autoconf 2.63 automake 1.11.1 libtool 2.2.6b,,
6117,47a2455fbc10254ef38622b838d2dd8575709726,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-17 12:23:21 -0700, , use datadir datarootdir dracut zfs dracut module installed datadir datarootdir path oversight original makefile.am change _datadir set safely zfs.spec file make install location consistent location expected spec file,,
6118,b9f27ee76582fa7826ca930889f8c281430c6b7a,arik Horn <dajhorn@vanadac.com>, 2011-06-17 10:02:36 -0500, , fix autoconf variable substitution udev rule change variable substitution udev rule template according method described autoconf manual chapter 4.7.2 installation directory variable udev rule improperly generated bindir parameter override prefix parameter configure example configure prefix usr local bindir opt zfs bin udev helper installed opt zfs bin zpool_id corresponding udev rule different path usr local etc udev rules.d zpool.rules env devtype disk import program usr local bin zpool_id bindir variable expands exec_prefix bin used instead prefix directly also applies zvol_id helper close 283,,
6119,a32661a6c976c1d8100ddd8e60c958ae8db98747,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-16 11:49:38 -0700, , avoid rpm bug make pkg rpm version 4.9.0 observed generate extra debug message certain case debug message prevent cleanly acquiring architecture clearly upstream rpm bug get fixed safe solution pipe result tail grab architecture bit care example rpm spl 0.6.0 rc4.src.rpm arch output freeing read lock locker 0x166 28031 47480843735008 freeing read lock locker 0x168 28031 47480843735008 x86_64,,
6120,e130330a874f4dec6628c094455180d4113c6aa1,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-14 16:25:29 -0700,270, handle etc mtab proc mount symlink fedora etc mtab symlink proc mount default etc mtab symlink mount.zfs helper update code place handle case used stat traverse link issue stat proc mount need use lstat prevent link traversal instead stat etc mtab close 270,,
6121,2e08aedba456dccddf6418908a55014e56cad226,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-14 15:09:05 -0700, , always check wno unused set variable gcc support previous commit quite right check applies user kernel space build must make sure run regardless config option set example config kernel autoconf test doe run generate build warning compiling kernel package,,
6122,8a7e1ceefa430988c8f888ca708ab307333b4464,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-14 11:02:13 -0700, , check wno unused set variable gcc support gcc version 4.3.2 earlier support compiler flag wno unused set variable lead build failure older linux platform debian lenny since optional build argument change add new autoconf check option supported installed version gcc used otherwise omited see commit reason wno unused set variable option originally added,,
6123,10715a018760e1d862b8348e31dc505e832a0904,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-11 22:48:49 -0700, , add default stack checking kernel built kernel stack tracing enabled debugfs filesystem mounted zfs.sh script clear worst observed kernel stack depth module load check worst case usage module removal stack depth ever exceeds 7000 byte full stack printed debugging dangerously close overrunning default stack additional advisory debugging particularly valuable running regression test kernel built 16k stack case almost matter bad stack overrun see able get clean stack trace debugging since worst case stack usage highly variable helpful always check worst case usage,,
6124,da88a7fbe8876437c25f1006f91ca5595659b8d2,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-10 11:20:34 -0700, , pas option import pool cleanly exported passing flag may required zpool import time since test simply validating pool successfully imported absense cache file always pas ensure succeeds failure observed rhel6.1,,
6125,1b9d8c340f89ca00b0bc99bb0f8a532e2e7a3a1d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-09 13:41:55 -0700,268, fix zfs send segfault sending pool dedup result segfault due solaris portability issue solaris pipe library call creates bidirectional data channel unfortunately linux pipe call creates unidirection data channel fix use socketpair function create expected bidirectional channel seth heeren original leg work issue zfs fuse finally rediscovered portability issue dfurphy able point original issue fix close 268,,
6126,cbc6fab65c201e44de9bda083cfaab209c6b4f7a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-03 15:08:49 -0700, , sanatize zpios sanity.sh environment like zconfig.sh zpios sanity.sh test run sanatized environment ensures never conflict installed etc zfs zpool.cache file commit additionally improves cleanup option remove module stack loaded destroys relevant device behavior identical zconfig.sh,,
6127,608860b6d06aaaa647e03fc3f3fc1b49f025155e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-03 14:13:25 -0700, , delay destroying loopback device generally approve adding arbitrary delay avoid problem case going let slide may need delay briefly zpool destroy return ensure loopback device closed closed losetup able destroy unfortunately easy state check make due simple delay,,
6128,36391312afdfac5584ca40ef1af7721108ce4c20,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-02 10:25:35 -0700, , always unload zpios.ko exit always unload zpios.ko exit ensures subsequent call zfs.sh utility able unload module stack properly cleanup important cleanup option passed zconfig.sh zfault.sh,,
6129,2ea9dc40f88ed84bc3e8022b91dd33cbce94653f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-06-02 10:13:15 -0700, , fix zpios sanity.sh return code zpios sanity.sh script return failure individual zpios.sh test fail previous code would always return success suppressing real failure,,
6130,e95b3bdcbbc64ea502349413234e7c71563e7115,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-25 13:56:40 -0700, , fix stack stack usage reduced 524 byte byte large stack allocation significantly contributed likelyhood stack overflow scrubbing resilvering dedup pool,,
6131,5b8c7bbcea7ad9ecd5f329d2d736cba8402ee781,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-25 14:13:18 -0700, , fix stack ddt_zap_lookup stack usage ddt_zap_lookup reduced 368 byte 120 byte large stack allocation significantly contributed likelyhood stack overflow scrubbing resilvering dedup pool,,
6132,c7f8f831a463e9d7d16e43323b71d9e9e187a4c7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-25 16:09:57 -0700, , revert fix stack abomination longer required zio issued recursive call path handled asynchronously taskq thread pool reverts commit,,
6133,2fac4c2a74f1abc54d82068e3ae9a62e9a0468b0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-25 15:22:04 -0700, , make tgx_sync_thread zio async majority recursive operation performed dsl done either context tgx_sync_thread pool import recursive operation contribute greatly stack depth recursion coupled synchronous context overflow becomes possible previously handle case focused keeping individual stack frame light possible good idea long done way overly complicate code however better solution treat zio issued tgx_sync_thread async use tgx_sync_thread stack recursive part zio_ thread part effectively double available stack space drawback small delay schedule however practice scheduling time much smaller actual time issue another benefit making zio async zio pipeline parallel mean cpu intensive pipeline compression dedup performance may improved change place worst case stack usage observed far 6902 byte still higher like significantly improved additional change specific function improve change allows revent commit 6656bf5 horrible thing recursive callpath name saving stack,,
6134,f74fae8b305ce3b264489e71adb49c2e4e9e33db,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-26 16:48:16 -0700,256, fix sector support yesterday ran across 3tb drive exposed sector linux thought gotten support correct turn subtle bug prevented working sudo cmd zpool zpool create large sector dev sda create large sector one device currently unavailable first issue possible bdev_capacity would return number 512 byte sector rather number 4096 sector internally certain linux function operate 512 byte sector need careful avoid confusion future updated bdev_capacity simply return device partition capacity byte higher level zfs want value byte anyway cleaner creating bio bi_sector count must always expressed 512 byte sector existing code would scale byte offset logical sector size always 512 never caused problem trying sector drive clearly exposed issue problem fixed hard coding 512 byte sector exactly bio code doe internally change able create zfs pool using sector drive issue observed fairly extensive testing also low risk change using 512b sector device none logic change close 256,,
6135,2b8cad61590d38f70ebf8734484204d7da2da937,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-20 14:23:18 -0700, , use vmem_alloc default buffer size requesting multiple quota entry 100 time zfs_useracct_t size practice work exactly 27200 byte since short lived buffer non performance critical path preferable vmem_alloc needed memory,,
6136,4804b739e1e851f21f8e98c99275af2570c44a15,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-20 10:25:41 -0700, , default internal zfs userspace implementation never bring pyzfs.py helper script solaris linux instead missing functionality directly integrated zfs command library avoid confusion remove warning missing pyzfs.py utility simply use default internal support illumous developer mind proposed initial patch integrated allow development branch additional testing code merged master right long term solution,,
6137,f01b360e67696fff002f5e2b9cf6eedf5ff84f4a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-20 10:12:25 -0700, , pas caller credential zfsdev_ioctl initially zfsdev_ioctl ported linux credential support implemented time simply passed null much problem since secpolicy code disabled however one exception quota handling doe require credential proper credential supported safely start passing caller credential also initial step towards fully implemented zfs secpolicy,,
6138,3fd70ee6b0bc9fa74b7ef87657b9cc3b0304f689,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-09 12:18:46 -0700,243, fix negative object delete warning normally function called return value indicate number freeable object cache indicate cache skipped however shrinker callback called nr_to_scan equal zero caller simply want number freeable object cache must never return patch reorder first two conditionals ensure behavior patch also explictly cast arc_size arc_c_min signed int64_t type max work expected unsigned type would never see negative value defeated purpose max lower bound broke shrinker logic finally nr_to_scan non zero explictly prevent reclaim arc_c_min done prevent linux page cache completely crowding arc limit tunable experimentation likely going required set exactly right sticking opensolaris default close 218 close 243,,
6139,d9bfe0f57a82fd1a02e93309912008ed1aa83e04,lexey Shvetsov <alexxy@gentoo.org>, 2011-05-14 18:25:37 +0400,244, fix distribution detection gentoo also may fix distros also provide etc lsb release ubuntu close 244,,
6140,e814770f2ed14808c7ea8cf8cea034aacb20564a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-13 08:16:10 -0700,237, update synchronous open zfs_close comment comment zfs_close pertaining decrementing synchronous open count need updated linux code already updated correct comment missed misleading linux zfs_close hook called final reference dropped differs solaris zfs_close called close close 237,,
6141,6f582dc708e713f1d5e1c6871657ac726873b4bf,lexey Shvetsov <alexxy@gentoo.org>, 2011-05-12 14:54:03 -0700, , remove root mount workaround workaround introduced workaround issue 164. issue fixed commit 5f35b19 workaround safely dropped zfs.fedora zfs.gentoo init script,,
6142,06abcdd3f44999f694766b22a5fc42d125aa9bef,lexey Shvetsov <alexxy@gentoo.org>, 2011-05-11 00:22:35 +0400, , fix zfs.gentoo init script logic fix zfs.ko module check check zfs umount return value,,
6143,04c22478a7365622a8f3c7fd7d0046fe41813075,lexey Shvetsov <alexxy@gentoo.org>, 2011-05-10 23:45:19 +0400, , make zfs.gentoo init script gentoo style improved compatibility openrc removed lockfile improved checksystem function remove etc mtab check general cleanup,,
6144,c91d2298096cfe376000ee3e63b73b92bafae2e9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-09 16:41:28 -0700,235, merge pull request 235 nedbass rdev store rdev fifo socket,,
6145,aa6d8c10864dd532b1577a84a22da2eaee10fcfd,ed A. Bass <bass6@llnl.gov>, 2011-05-09 12:31:56 -0700,216, store rdev fifo socket update handling named pipe socket consistent platform regard rdev attribute zfs ipmlementations store rdev device file system attribute case fifo socket indeed linux always pass rdev mknod fifo socket value needed add assert rdev fifo socket detect expected behavior ever change close 216,,
6146,21ade34764d11498abece590b965ce766f31de88,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-06 15:12:15 -0700,232, disable direct reclaim z_wr_ thread direct reclaim path z_wr_ thread must disabled ensure forward progress always maintained txg processing ensures txg never get stuck waiting entered following memory reclaim callpath prune_icache dispose_list zpl_clear_inode zfs_inactive dmu_tx_assign dmu_tx_wait tgx_wait_open would preferable target exact code path kernel offer way without custom patch avoid forced disable reclaim thread necessary thread hold txg open close 232,,
6147,372c2572336468cbf60272aa7e735b7ca0c3807c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-06 15:21:58 -0700, , add taskq_noreclaim flag become necessary able optionally disable direct memory reclaim certain taskqs support taskq_noreclaim flag added set pf_memalloc bit thread taskq,,
6148,3117dd0b9005eb76e483b9772c493883b82998bb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-06 12:23:34 -0700,230, handle null nfsd .fsync hook nfsd handle .fsync changed couple time recent kernel basically three case need consider linux 2.6.12 2.6.33 .fsync hook take argument nfsd call .fsync null file struct pointer linux 2.6.34 .fsync hook take argument nfsd longer call .fsync instead used sync_inode linux 2.6.35 2.6.x .fsync hook take argument nfsd longer call .fsync instead used sync_inode look like gotten lucky first two case actually collased one stop using file struct pointer entirely since dentry still passed case possible last case safely handled unconditionally using dentry file struct pointer know nfsd caller removed close 230,,
6149,6ee44e32be259706aed9b1439b71971a165b198c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-06 10:16:04 -0700, , fix awk usage zpool_id zpool_layout helper script updated use common usr bin awk symlink fedora redhat system bin awk usr bin awk symlinks installed version awk debian ubuntu system usr bin awk symlink exists additionally add token beginning regex pattern prevent partial match pattern appears work gawk despite mawk man page claiming support extended regex thus need gawk installed use optional helper script comment added script reflect reality,,
6150,34b84cb831695b276788493048ea34f8af8d5bdf,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-06 09:59:52 -0700, , use vmem_alloc default buffer size requesting history 128k far large kmem_alloc instead use slower vmem_alloc path performance concern buffer immediately free content copied user space buffer,,
6151,3613204cd7e3ab1ae658e31dac875e58827a6655,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-05 09:40:57 -0700, , allow mounting read snapshot addition mount helper accidentally regressed ability manually mount snapshot commit update mount helper expect possibility snapshot automatically treated legacy type mount mounted manually,,
6152,c409e4647f221ab724a0bd10c480ac95447203c3,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-03 15:09:28 -0700, , add missing zfs tunables commit add module option existing zfs tunables ideally average user never need modify value however practice sometimes need tweak value one reason another case nice resort rebuilding source tunables visable modinfo list follows modinfo module zfs zfs.ko filename module zfs zfs.ko license cddl author sun microsystems oracle lawrence livermore national laboratory description zfs srcversion depends spl znvpair zcommon zunicode zavl vermagic 2.6.32 smp mod_unload modversions parm zvol_major major number zvol device uint parm zvol_threads number thread zvol device uint parm enable fault injection int parm zio_bulk_flags additional flag pas bulk buffer int parm zio_delay_max max zio millisec delay posting event int parm prioritize requeued bool parm disable intent logging replay int parm disable cache flush bool parm byte read per chunk long parm max pending per vdev int parm min pending per vdev int parm max vdev aggregation size int parm deadline time shift vdev int parm exponential issue ramp rate int parm aggregate read gap int parm aggregate write gap int parm scheduler charp parm inflate read small max int parm total size per disk cache int parm shift size inflate read int parm zfs_scrub_limit max scrub resilver per leaf vdev int parm zfs_recover set attempt recover fatal error int parm spa_config_path spa config file etc zfs zpool.cache charp parm max event queue length int parm zfs_zevent_cols max event column width int parm log event console int parm max per top level int parm number tick delay resilver int parm zfs_scrub_delay number tick delay scrub int parm zfs_scan_idle idle window clock tick int parm min millisecs scrub per txg int parm min millisecs free per txg int parm min millisecs resilver per txg int parm zfs_no_scrub_io set disable scrub bool parm set disable scrub prefetching bool parm zfs_txg_timeout max second worth delta per txg int parm disable write throttling int parm log2 fraction memory per txg int parm target millisecond tgx sync int parm min tgx write limit ulong parm max tgx write limit ulong parm inflated tgx write limit ulong parm override tgx write limit ulong parm disable zfs prefetching int parm max number stream per zfetch uint parm min time stream reclaim uint parm max number block fetch time uint parm number byte array_read ulong parm zfs_pd_blks_max max number block prefetch int parm enable prefetching dedup blks int parm zfs_arc_min min arc size ulong parm zfs_arc_max max arc size ulong parm meta limit arc size ulong parm meta reclaim percentage int parm second growing arc size int parm log2 fraction arc reclaim int parm arc_c shift calc min max arc_p int,,
6153,dde6b7b137f56894a45723e7b49227629cfd3bd5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-03 10:31:12 -0700, , prep spl 0.6.0 rc4 tag create fourth 0.6.0 release candidate tag rc4,,
6154,8db77dd7edb5ac98812d3f8632da44018c1c8330,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-03 10:29:05 -0700, , prep zfs 0.6.0 rc4 tag create fourth 0.6.0 release candidate tag rc4,,
6155,712f8bd87b2d3799107e102652875996fa59647b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-02 15:39:59 -0700, , add gentoo lunar redhat init script every distribution slightly different requirement init script zfs package contains several init script various distribution script contributed supported larger zfs community init script gentoo lunar redhat contributed gentoo devsk devsku gmail.com lunar jean michel bruenn jean.bruenn minds.de redhat fajar nugraha list fajar.net,,
6156,5f35b190071048f25d66db81ce9763ecd0c1760e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-05-02 14:04:19 -0700,164, fully update inode created new znode inode pair created znode inode immediately updated correct value done znode value inode normally problem subsequent operation would cause inode immediately updated change ensures inode fully updated inserted inode hash close 116 close 146 close 164,,
6157,df554c148ecfdfb7e597f8ab7eee71388b24a19d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-25 14:36:01 +0700,84, fix zfs set volsize pool dataset change fix kernel panic would occur resizing dataset open objset_t stored zvol_state_t set null block device closed avoid issue pas correct objset_t third arg code also updated correctly notify kernel block device capacity change 2.6.28 newer kernel capacity change immediately detected earlier kernel capacity change detected device next opened known limitation older kernel online ext3 resize test case pass 2.6.28 kernel dev zero tmp zvol count seek 1023 zpool create tank tmp zvol zfs create 500m tank zd0 mkfs.ext3 dev zd0 mkdir mnt zd0 mount dev zd0 mnt zd0 mnt zd0 zfs set volsize 800m tank zd0 resize2fs dev zd0 mnt zd0 original patch fajar nugraha github fajar.net close close,,
6158,e90a3de3e8b52061aeb0717b031a956cc1e705d5,lejandro R. SedeÃ±o <asedeno@mit.edu>, 2011-04-29 22:13:23 -0400, , add zpl_export.c list target,,
6159,94e954257acadca5d858741457282c63bb18c442,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-29 14:03:12 -0700,165, correct maxuid uid_t system fact unsigned bit value almost always correct however could compile kernel use unsigned bit value uid_t practice never encountered distribution doe willing overlook corner case close 165,,
6160,c1f95c2b94c0ee71b1fe1f71fd5e471802ffd73d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-29 13:58:45 -0700, , correct maxuid uid_t system fact unsigned bit value almost always correct however could compile kernel use unsigned bit value uid_t practice never encountered distribution doe willing overlook corner case,,
6161,055656d4f4dfc1a85646a2c0cc10b9dce86da72b,unnar Beutner <gunnar@beutner.name>, 2011-04-28 18:35:50 +0200, , implemented nfs implemented required nfs operation exporting zfs datasets using kernel nfs daemon,,
6162,9d4b7c17a0820a1bf48a7a3fd9dfb6e87b0306dd,unnar Beutner <gunnar@beutner.name>, 2011-04-24 10:19:28 +0200, , renamed struct fid nfs renamed struct fid name conflict another struct linux kernel header fid_t typedef remains unchanged intentionally,,
6163,5476e6952c1ecbd2debe977eb5c3ec88dfdfea5b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-27 09:32:51 -0700, , suppress memory warning function observed allocate larger chunk however much larger doe infrequently allowed warning supressed,,
6164,40a39e1103bbbd6908bc1b5cf4af953c7e4706ad,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-26 14:56:04 -0700,174, conserve stack dsl_scan_visit dsl_scan_visit function little heavy weight taking 464 byte stack easily reduced little cost moving zap_cursor_t zap_attribute_t stack heap change dsl_scan_visit reduced size 320 byte change made reduce stack usage dsl_scan_sync callpath recursive observed overflow stack issue 174,,
6165,b81c4ac9af4f9e8b8c27d8011e3ce608cd04737b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-26 15:43:07 -0700,174, conserve stack function called recursively everything possible must done limit stack consumption dprintf_bp debugging function add byte local variable function afford commenting debugging save byte per recursion depth uncommon yeilds total stack saving 390 byte stack issue 174,,
6166,7a060636b05655cccd87ce74d70e5957bb234e5e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-22 10:12:49 -0700,174, conserve stack recursive call chain observed consume considerable stack resulting stack overflow cleanest way see fix minimal impact existing flow code fewest performance concern always inline increase function size 4660 byte also reduces stack requirement removing function call overhead issue 174,,
6167,44e9e3479388ee16f39253e8c3f8f6625324dfc6,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-26 13:30:27 -0700,212, merged pull request 212 dajhorn hostid use gethostid linux convention,,
6168,701b1f8168ebb0ad6b6958b9593488c17adebb44,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-26 12:56:35 -0700,191, fix zvol deadlock possible zvol_write thread enter direct memory reclaim holding open transaction group result system attempting write data disk free memory unfortunately succeed thread reclaim holding open txg must closed synced disk prevent offending allocation marked km_pushpage prevent attempting writeback close 191,,
6169,4c16d2471ac3ada642db156df1f0f4444fa1c336,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-25 14:51:48 -0700,40, merged pull request dajhorn spl proc typo correct typo spl proc handler,,
6170,492b8e9e7b6f3df55eed04f7288db6b62c17c668,arik Horn <dajhorn@vanadac.com>, 2011-04-25 10:18:07 -0500, , use gethostid linux convention disable gethostid override solaris behavior linux system implement posix standard way allows negative result mask gethostid result lower four byte like coreutils doe usr bin hostid prevent junk bit sign extension system eight byte long type cause spurious hostid mismatch prevents zpool import bit system,,
6171,c95b308d12be1a7f317d5b280a9f14e7d0b1f104,arik Horn <dajhorn@vanadac.com>, 2011-04-24 20:48:56 -0500, , correct typo spl proc handler correct format typo cause proc sys kernel spl hostid return decimal number instead hexadecimal number,,
6172,a1cc0b3290dcf1b5cf759c89352d8bdb44ee41e6,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-22 16:21:26 -0700,81, fix bit maxoffset_t definition maxoffset_t defined 0x7fffffffl artificially limiting maximum file size bit system reality maxoffset_t used working long long type define llong_max resolve 2gb file size limit file additionally allows zvols greater 2gb bit system close 136 close,,
6173,d837ae395b3368bcdc13a7ef1ad8abfc8d24e88f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-22 16:17:13 -0700, , fix bit maxoffset_t definition correct definition maxoffset_t solaris reality tied maximum size long long type mind maxoffset_t defined llong_max ensures correct value used bit bit system,,
6174,e2448b0e62f73f8b9574d74c5b327707b67b703a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-22 13:50:17 -0700,169, fix spurious efault setting scheduler occasionally would see efault returned setting scheduler vdev caused improperly formatted user mode helper command commit restructures command something simpler allocates space dynamically save stack remove retry logic longer needed close 169,,
6175,6a8f9b6bf0de3e3d09fcfa32e129c978e7641a8f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-30 18:59:17 -0700,193, enforce arc meta data limit change ensures arc meta data limit enforced without enforcement meta data grow consume arc cache pushing data hurting performance cache aggressively reclaimed soft hard limit cache may exceed set limit briefly brought control default arc capacity used meta data limit tuned setting module option limit exceeded meta data reclaim occur percent chunk may tuned using close 193,,
6176,36df284366caa77cb40083d2e6bcce02274e2f05,unnar Beutner <gunnar@beutner.name>, 2011-04-14 22:07:24 +0200,180, fixed use free bug zfs_zget fixed bug zfs_zget could access stale znode pointer inode already removed inode cache via iput iput_final ... zfs_zinactive corresponding handle still alive signed brian behlendorf behlendorf1 llnl.gov close 180,,
6177,5b8f76ea16f5634c6a28490f149e699afce09cdf,arik Horn <dajhorn@vanadac.com>, 2011-04-21 10:11:45 -0500, , make spl kernel message consistent zfs change spl kernel message module loading module unloading similar zfs kernel message signed brian behlendorf behlendorf1 llnl.gov,,
6178,ad35b6a6e99a0e0962d6a33e181784cada44c3c0,arik Horn <dajhorn@vanadac.com>, 2011-04-14 14:01:22 -0500, , remove gawk dependency reverts commit demote gawk call back awk ensure stderr attached gnu gawk tolerates missing stderr handle many utility could regular awk call unexplainably failing system use argv instead sh_path consistency internally linux driver signed brian behlendorf behlendorf1 llnl.gov,,
6179,fa6f7d8f9d4760975ea5fe116a7366604f286195,arik Horn <dajhorn@vanadac.com>, 2011-04-11 14:49:50 -0500, , import spl_hostid module parameter provide alternative letting hostid passed module parameter like modprobe spl spl_hostid 0x12345678 internally change spl_hostid variable unsigned long type coreutils usr bin hostid return move hostid command get_hostid_cmd consistency similar invocation use argv instead sh_path consistency internally linux driver signed brian behlendorf behlendorf1 llnl.gov,,
6180,3dfc591ac4003d1c92159b5dfe8970f24e008f81,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-20 14:22:35 -0700, , linux 2.6.39 compat function take argument done avoid always allocate maximum size workspace 268k caller specific windowbits memlevel compression parameter get smaller workspace purpose introduce wrapper accepts argument two argument version available argument passed assume worst case maximally sized workspace used,,
6181,b1cbc4610c8b5a9b5de80cb850a6eb58bb811a1d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-20 12:25:59 -0700, , linux 2.6.39 compat path_lookup function renamed flag argument removed behavior offered lookup_parent spl already always passed flag dropping flag doe impact,,
6182,83c623aa1a8895879f03f07b060e1c53a9757f71,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-20 12:01:11 -0700, , linux 2.6.39 compat define_spinlock long due compatibility change way way way back 2007 push remove consumer finally 2011 2.6.39 consumer updated removed time use new api well change doe exactly define_spinlock available far back 2.6.12 need additional autoconf foo change,,
6183,d247f2a3cc24e8127ec1c5055bf0cd6c39c09add,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-20 10:18:56 -0700,178, suppress zfs receive memory warning part zfs_ioc_recv zfs_cmd_t allocated kernel 17808 byte size sort thing general avoided however since infrequent event allow simply suppress warning km_nodebug flag revisited latter becomes issue close 178,,
6184,9caef54224f8a0df2fdf6a16bbdf4037ee7e7a50,niruddha Shankar <k@191a.net>, 2011-04-20 06:15:21 +0530,208, added required runlevel info init debian signed brian behlendorf behlendorf1 llnl.gov close 208,,
6185,3fce1d0962dd28d094589f6d5c3f88a1db12b7cb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 16:14:15 -0700,207, update zconfig.sh use new zvol name change occured commited new udev rule zvols basically test script date need update use dev zvol device name expect common partn suffix added udev_trigger call ensure udev rule run ensures device available subsequent command close small race finally forced added small sleep test 10. observing occassional failure due device still claiming busy delaying betwen various method adding removing vdev avoids issue close 207,,
6186,18f42382777b23bf84a698dea7861c943ebd5639,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 15:01:37 -0700,206, add parted lsscsi dependency zfs test zfault.sh zconfig.sh test script requires parted utility lsscsi utility scsi_debug module ensure utility available added dependency zfs test package checking scsi_debug little problematic missing need build clarity documention updated mention close 205 close 206,,
6187,cbb1e401f94d1f597274464951e5effdbc7e6887,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 14:12:08 -0700, , add gunnar beutner author contribution,,
6188,bec30953cdbbb03d2a3791bd1ffe5b062bad0ec3,unnar Beutner <gunnar@beutner.name>, 2011-04-17 20:31:33 +0200,203, truncate xattr znode updating existing attribute attribute new value shorter old one old code would leave part old value xattr znode signed brian behlendorf behlendorf1 llnl.gov close 203,,
6189,274b7e79f3baece5ab28331e73629f6e81fdb5ca,unnar Beutner <gunnar@beutner.name>, 2011-04-17 19:42:33 +0200,202, added missing initialization va.va_dentry without may mistakenly believe dentry try d_instantiate result following bug important note xattr directory inode assoicated never create dentry kernel bug dcache.c 1418 signed brian behlendorf behlendorf1 llnl.gov close 202,,
6190,826ab7ad1931eb8351af1f4f4b7a65f8b0c45839,ichard Laager <rlaager@wiktel.com>, 2011-04-10 18:08:53 -0500, , support iec base prefix signed brian behlendorf behlendorf1 llnl.gov,,
6191,4da4a9e1a78e14112225fb73de5e465395c9a425,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:54:47 -0500, , cleanup various sun solaris ism signed brian behlendorf behlendorf1 llnl.gov,,
6192,251eb26d17adbdbeec65c8e8c70bcabbeb97959a,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:51:04 -0500, , update version zpool upgrade example signed brian behlendorf behlendorf1 llnl.gov,,
6193,3b2041509f667b5706f669d72adddb03179a2111,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:47:11 -0500, , normalize deferred destruction language signed brian behlendorf behlendorf1 llnl.gov,,
6194,0d122e21ff432aafb0cfc6dd0e3e64c40dc69cb1,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:41:40 -0500, , improve wording hot spare signed brian behlendorf behlendorf1 llnl.gov,,
6195,6b92390fe8c017674e3d15c2426bc5f6b7c499bf,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:39:36 -0500, , improve quoting consistency signed brian behlendorf behlendorf1 llnl.gov,,
6196,577468215b714cddea60239192a457130bb44574,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:37:37 -0500, , remove stray tab signed brian behlendorf behlendorf1 llnl.gov,,
6197,25d4782bac28c96770f71d2ac2c4b3cea3df6296,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:34:37 -0500, , linux partition slice signed brian behlendorf behlendorf1 llnl.gov,,
6198,54e5f2264dbd0895339ad7ab31a7c03d970906b3,ichard Laager <rlaager@wiktel.com>, 2011-04-08 22:27:25 -0500, , use linux disk name zpool.8 signed brian behlendorf behlendorf1 llnl.gov,,
6199,1dc3fea59e8fbcf81515a3bc616566e880181161,ichard Laager <rlaager@wiktel.com>, 2011-04-08 21:54:05 -0500, , correct example zpool.8 signed brian behlendorf behlendorf1 llnl.gov,,
6200,1fe2e23771113fd66442b11017b619aacc07bac1,ichard Laager <rlaager@wiktel.com>, 2011-04-08 21:45:13 -0500, , change dev dsk dev man page signed brian behlendorf behlendorf1 llnl.gov,,
6201,2d1b7b0b97d2a75bfeeca3fbdc0682c0176a38da,ichard Laager <rlaager@wiktel.com>, 2011-04-08 21:31:11 -0500, , correct man page section number linux signed brian behlendorf behlendorf1 llnl.gov,,
6202,12c1acde76683108441827ae9affba1872f3afe5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 10:39:31 -0700, , set wno unused set variable globally gcc 4.6 option wunused set variable enabled default useful warning numerous place zfs code variable set checked assert avoid update every instance code set wno unused set variable suppress warning additionally building enable debug werror set warning also become fatal reevaluate suppression error later time becomes issue basically reverting previous gcc behavior,,
6203,79713039a2b6e0ed223d141b4a8a8455f282d2f2,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 10:02:21 -0700,176, fix gcc configure warning newer version gcc getting smart enough detect sloppy syntax used autoconf test generating warning unused undeclared variable newer version gcc even wunused set variable option set default problem except werror set get promoted error case autoconf test return incorrect result result build failure latter handle tightening many autoconf test explicitly mark variable unused suppress gcc warning remember autoconf code never actually run want get clean build error detect apis available never using variable absolutely fine close 176,,
6204,98e2afd1c5fc491413a80c7ef005127ac3add5d9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 09:45:36 -0700, , fix unused variable flagged default wunused set variable gcc option running fedora 15. since correct variable entirely unused commit remove,,
6205,03318641afc3e2d6dc18614aaa75d6a0125cb933,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-19 09:26:48 -0700, , fix gcc configure warning newer version gcc getting smart enough detect sloppy syntax used autoconf test generating warning unused undeclared variable newer version gcc even wunused set variable option set default problem except werror set get promoted error case autoconf test return incorrect result result build failure latter handle tightening many autoconf test explicitly mark variable unused suppress gcc warning remember autoconf code never actually run want get clean build error detect apis available never using variable absolutely fine,,
6206,9b0f9079d22f5a13903d3da4d94e8e306cfa40dd,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-18 13:47:43 -0700, , linux 2.6.39 compat resolve potiential filesystem corruption issue second argument added argument control whether dirty inodes dropped treated busy invalidating super block legacy api available second argument dropped compatibility,,
6207,03514b01109e0a6ef4eee4914ba7442c380fa6b4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-18 16:44:22 -0700, , fix gcc compiler warning parse_option compiling zfs user space gcc 4.6.0 correctly identifies variable value set never used generates warning build failure using enable debug correct reluctant remove value breaking string name value pair used good chance soon rather reinvent suppress warning verify observed fedora cmd mount_zfs mount_zfs.c function parse_optionâ cmd mount_zfs mount_zfs.c 112 error variable valueâ set used werror unused set variable,,
6208,0fe3d820f5be0cc5733f08aa4a57093c7b8febe6,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-18 16:27:45 -0700, , fix gcc compiler warning dsl_pool_create compiling zfs user space gcc 4.6.0 correctly identifies variable set never used generates warning build failure using enable debug however code correct want use kernel space build suppress warning call wrapped verify nice side effect ensuring actually never null observed fedora module zfs dsl_pool.c function module zfs dsl_pool.c 229 error variable osâ set used werror unused set variable,,
6209,e30c0ada6d0174e044b96fbedf5946c3be66e956,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-18 14:12:28 -0700, , linux 2.6.39 compat update code use wrapper hide complexity determining exported prototype second argument determined behavior dirty inodes handled passing zero indicated want inodes treated busy skipped,,
6210,cbf81d4c3b1344145519c4187e10251822204889,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-18 12:48:44 -0700, , autogen refresh kernel insert inode locked.m4 several makefile.in accidentally updated kernel insert inode locked.m4 check added change simply refreshes missed file,,
6211,0f6fd32927aa2b9c63d1b527824705924a5a21ca,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-08 10:22:42 -0700, , fix rebuildable rpm el6 ch5 rebuilding source rpm el5 need append target_cpu however el6 ch5 thing packaged correctly arch already part kver reason also need stripped kver setting kverpkg,,
6212,96cdefab84061e807f54ed17b93e0586393f9448,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-08 10:20:08 -0700, , fix rebuildable rpm el6 ch5 rebuilding source rpm el5 need append target_cpu however el6 ch5 thing packaged correctly arch already part kver reason also need stripped kver setting kverpkg,,
6213,38baef530de4961390d5862e29cc1a85a3dcefa3,ed Bass <bass6@llnl.gov>, 2011-04-08 09:41:41 -0700, , align closing mount zfs.sh,,
6214,c4803a966367517d56d7b7a6becef841e44dabbd,ed Bass <bass6@llnl.gov>, 2011-04-07 13:45:57 -0700, , use consistent indentation mount zfs.sh,,
6215,f1329923610fb6281bdde1d99484e636d8de4ed9,ichard Laager <rlaager@wiktel.com>, 2011-04-06 23:47:02 -0700, , fix couple comment signed brian behlendorf behlendorf1 llnl.gov,,
6216,0d3ac5e7356d29fbb7d2880c0a0c457656355ca0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-07 14:23:45 -0700, , linux 2.6.29 compat credential .sync_fs fix applied use updated spl credential api broke build debian lenny change applies needed fix use portable api original credential change part commit,,
6217,9b1d6001bcfc065e32942c0c3af9f56cc0c26eb7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-07 10:49:55 -0700, , prep zfs 0.6.0 rc3 tag create third 0.6.0 release candidate tag rc3,,
6218,f5ef7150ead1f6234e18eb3bda0299f34209bbb8,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2011-04-07 10:34:20 -0700, , update zfs.fedora init script apply rudd change fedora init script initial init script one threw together based rudd original work worked flaw rudd invested considerable time updating significantly smarter handle using zfs root filesystem plus various quirk since familiar right way thing fedora tested init script integrating change signed brian behlendorf behlendorf1 llnl.gov,,
6219,6583dcacdcca2aad7eaec51f31797a3533845099,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2011-04-06 09:52:58 -0700, , permit mountpoint legacy mountpoint initrd signed brian behlendorf behlendorf1 llnl.gov,,
6220,8610b52bd432b7c1eb3da5e67ce4820da82ae638,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2011-03-22 22:18:07 -0700, , added .gitignore mount.zfs zvol_id signed brian behlendorf behlendorf1 llnl.gov,,
6221,eec8164771bee067c3cd55ed0a16dadeeba276de,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-31 10:05:58 -0700, , fix assertion tx_pool disable normal reclaim path txg_sync thread ensures thread never enter dmu_tx_assign otherwise occur due direct reclaim allowed happen system deadlock direct reclaim call path prune_icache dispose_list clear_inode zpl_clear_inode zfs_inactive dmu_tx_assign,,
6222,7cb67b45f33fd7a61af24c675c7347eb5264b38c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-29 18:08:59 -0700, , add direct indirect arc reclaim opensolaris memory reclaim done asyncronously linux memory reclaim done asynchronously _and_ synchronously process allocates memory gfp_kernel explicitly allows kernel reclaim behalf satify allocation gfp_kernel allocation fails kernel may take drastic measure reclaim memory killing user space process observed happen zfs arc could consume large fraction system memory synchronous reclaim could performed result gfp_kernel allocation could fail resulting oom event moment latter arc_reclaim thread would free unused memory arc change leaf arc_thread place manage fundamental arc behavior add synchronous direct reclaim path arc called memory badly needed also add asynchronous indirect reclaim path called much frequently prune arc slab cache,,
6223,1834f2d8b715d25bafbb0e4a099994f45c3211ae,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-24 12:13:55 -0700, , add missing arcstats following useful value missing arcstats change add provide greater visibility arc behavior arc_no_grow arc_tempreserve  arc_meta_used 624774592 arc_meta_limit 400785408 arc_meta_max 625594176,,
6224,c85b224fafacafa49817101f26f0a9760a8d05d1,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-29 23:04:39 -0700, , call d_instantiate unlocking inode linux dentry referencing inode must instantiated inode unlocked accomplish without overly modifing core zfs code dentry passed via vattr_t case replay dentry available case obviously initialized inode creation time dentry needed spliced required via d_lookup,,
6225,a40c3fca6f6c8765c09d007283d0957a0b71dead,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-06 20:10:57 -0700, ," prep spl 0,6,0 rc3 tag create third 0.6.0 release candidate tag rc3",,
6226,e76f4bf11d54479fe767d9647a10e8b98d7ffc4f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-30 17:44:35 -0700, , add support provide function attempt prune cached entry dcache icache entry pruned slab may using reaped note api take reclaim percentage easy access total number cache entry calculate reclaim count however practice need exactly correct simply need reclaim useful fraction cache caller determine need done,,
6227,83150861e610701d44510816e2062bcf407f51ab,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-29 22:38:53 -0700, , decrease target object per slab decreasing number target object per slab increase likelyhood slab freed reduces level fragmentation slab observed problem certain workload penalty also decrease speed need object allocated,,
6228,3336e29cc2e328c6e665de9f4563aa8a4b874194,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-26 00:03:32 -0700, , add slab usage summeries proc one common thing want know looking slab much memory used information available proc spl kmem slab per slab basis commit add following proc sys kernel spl kmem slab entry make total slab usage easily available glance slab_kmem_total total kmem slab size slab_kmem_avail alloc kmem slab size slab_kmem_max max observed kmem slab size slab_vmem_total total vmem slab size slab_vmem_avail alloc vmem slab size slab_vmem_max max observed vmem slab size note slab_ _max value expected report show maximum value since boot current value,,
6229,d0a1038ff39a082a098fc710dc16f8125369d084,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-25 21:50:40 -0700, , update proc spl kmem slab output slab_fail slab_create slab_destroy column slab output removed virtually always zero useful much useful size alloc column added show total slab size much total size allocated object finally formatting updated much human readable still friendly tool like awk parse,,
6230,495bd532ab4aaef46b57094d59707bad91e6ec25,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-23 15:45:55 -0700, , linux shrinker compat linux shrinker gone three api change since 2.6.22 rather force every caller understand three apis change consolidates compatibility code compat.h header caller use single spl provided shrinker api doe right thing kernel nr_to_scan gfp_mask shrinker_struct seek shrinker_struct shrinker_struct shrinker_struct nr_to_scan gfp_mask,,
6231,91cb1d91a4cf0dfa360f09747915699d0bef3d6f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-29 22:46:38 -0700, , add .va_dentry helper extra structure memory doe exist solaris needed linux pas dentry allows dentry easily instantiated inode unlocked,,
6232,d433c206515e567c52ce09589033405a0ae3716e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-04-05 13:13:01 -0700, , fix make distclean configure config user making distclean module make entering directory zfs module make subdirs pwd clean make entering unknown directory make subdirs zfs module file directory stop using config user distclean target would fail assumes kernel configuration infrastrure set case doe need config user option prune entire module subtree subdirs prevents build rule operating module directory however dist rule still traverse directory listed dist_subdirs correct need ensure dist rule package directory content regardless configuration dist rule correct way handle invoke kernel build system part clean rule set initial fix provided darik horn dajhorn vanadac.com commit slightly refined form original,,
6233,fa417e57a68b7aa026ec5fd8c0471b6c60ca109f,ed Bass <bass6@llnl.gov>, 2011-04-01 09:47:05 -0700, , call udevadm trigger safely udev hook designed idempotent calling udevadm trigger outside distribution initialization script unexpected potentially dangerous side effect example system time may change device may appear multiple time see ubuntu launchpad bug 320200 mailing list post detail http archive ubuntu devel 2009 january 027260.html avoid problem call udevadm trigger action change subsystem match block first argument tell udev refresh device make sure everything second argument limit scope block device device belonging subsystem affected fix problem older udev implementation provide udevadm instead udevtrigger standalone program case option available way call call udevtrigger safely live since issue exists optional test helper script zfs linux user running newer system anyways,,
6234,34e4864009d32da5fe29393082a56b5272f65faa,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-31 13:43:49 -0700, , update chaos packaging chaos kernel packaged identially rhel6 kernel therefore simply use rhel6 rule spec file building package,,
6235,af67391e45967dfa63346fe5cc8d2748e79b8406,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-31 13:43:49 -0700, , update chaos packaging chaos kernel packaged identially rhel6 kernel therefore simply use rhel6 rule spec file building package,,
6236,e88b041ed6a7ce358df25a7af057ea5c76dd1c2a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-31 12:16:24 -0700,181, fix libzpool cv_ build error build failure accidentally introduced previous commit bfd214a fixed load average unfortunately wrapper available zfs_context.h user compatibility code failed notice rebuild everything cleanly committing undefined reference collect2 returned exit status close 181,,
6237,bfd214af01dd360417b1331d903655244979fe0f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-31 17:07:12 -0700,175, fix inflated load average kernel thread sleep uninterruptibly linux marked state thread usually process performing thus counted load average txg_quiesce txg_sync thread always sleeping uninterruptibly thus inflating load average change make sleep interruptibly care required however thread may woken early signal case caller careful check required condition met waking woken early due signal simply back sleep case change safe close 175,,
6238,1f5fd9d47815770fc8e0fea7028229fd0826871c,ajar A. Nugraha <github@fajar.net>, 2011-03-25 10:01:28 -0700, , spec file compat datadir dracut change caused error make rpm cause simple rhel5 doe recognize datarootdir macro zfs.spec changed datadir fix build signed brian behlendorf behlendorf1 llnl.gov,,
6239,1d82906dea5eb698a854d992e445e794fb5a0880,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-24 11:34:41 -0700, , set cmd path udev rule using prefix udev rules.d script must use absolute path support binary however binary get installed depends prefix set package configured change make udev rules.d helper .in file processed configure allows dynamically updated include specified prefix additionally change update zvol.rules handle add change action ensures valid zvol device correctly linked,,
6240,a5729f7b22e14aed657bd716f3ee98b02f7e7c41,ajar A. Nugraha <github@fajar.net>, 2011-03-24 15:22:52 +0700, , fix enable zvol symlink creation commit fix issue http github.com behlendorf zfs issue issue 172 change update blkzname use _ior instead _io kernel 2.6.32 allows read parameter copy_to_user _io newer kernel tested archlinux 2.6.37 kernel enforces _ior correct fix return code message error signed brian behlendorf behlendorf1 llnl.gov,,
6241,734fcac78d8c430aeb3731590b77dfcfa6de224f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 11:18:15 -0700, , add crgetfsuid crgetfsgid helper solaris credential fsuid fsguid field linux credential handle case solaris api modestly extended include crgetfsuid crgetfsgid helper function addititionally crget helper implemented identically regardless moved outside ifdef common code simplification mean one version helper keep date,,
6242,9b0c3b2aa87610690cf6e1a792ff1484274a392d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-21 16:32:29 -0700, , load zlib_inflate.ko certain stock kernel debian lenny built zlib_inflate.ko kernel module ensure make check work tree load module loading spl module required zlib splat regression test,,
6243,7a1cdc0775aa4405501e64ebf0bfd998e723f2d7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 11:22:49 -0700, , linux 2.6.29 compat .freeze_fs .unfreeze_fs .freeze_fs .unfreeze_fs hook added linux 2.6.29 since hook currently unused removed allow support older kernel,,
6244,81e97e21872a9c38ad66c37fafe1436ee25abee3,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 11:13:41 -0700, , linux 2.6.29 compat credential linux 2.6.29 clean credential api added linux kernel previously credential embedded task_struct spl already considerable support handling api change zpl code updated use solaris credential api,,
6245,bdf4328b04544ac3759d689d0a68e514b6df1025,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 09:55:09 -0700, , linux 2.6.28 compat added helper function prior caller used older method check collision inode_hashtable still acceptible use fallback using unavailable,,
6246,3517f0b7e928e1a8e7634828fb92d194ea35004d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 09:26:38 -0700, , linux 2.6.27 compat queue flag added 2.6.27 handle stacking driver prior request stacking driver detected checking request_fn null earlier kernel revert legacy behavior,,
6247,1073d746d6421eb5faf8a3cf8534d82a2beb0512,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-21 16:54:59 -0700,95, linux compat umount2 flag older glibc sys mount.h header define available umount2 flag mnt_force mnt_detach supported kernel back 2.4.11 define correctly missing close,,
6248,d6bd8eaae4bdbce8e162414bb6c84ac95fd456b4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-21 10:19:30 -0700, , fix evict deadlock km_sleep defined gfp_nofs possibility synchronous reclaim deadlock deadlock never existed original opensolaris code memory reclaim solaris done asyncronously linux doe synchronous direct asynchronous indirect reclaim commit address deadlock caused inode eviction km_sleep allocation may trigger direct memory reclaim shrink inode cache occur mutex array zfs_obj_hold mutexes held evict zfs_inactive zfs_zinactive call path mutex may reacquired resulting deadlock avoid deadlock process must reacquire mutex already holding reasonable fix longer term zfs_obj_hold mutex locking reevaluated infrastructure already prevents ever using linux lock dependency analysis tool may limit scalability,,
6249,691f6ac4c2858d64afc2a0dc1bd2b8c041d68502,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-19 14:34:30 -0700, , use km_pushpage instead km_sleep used case km_sleep allocation gfs_nofs unfortunately often resulted kernel unable reclaim arc inode dentry cache timely manor fix make km_sleep gfp_kernel allocation spl however increase posibility deadlocking system zfs write thread zfs write thread attempt perform allocation may trigger synchronous reclaim reclaim may attempt flush dirty data inode disk free memory unforunately write finish write thread would handle holding previous transaction open deadlock avoid allocation zfs write thread path must use km_pushpage prohibits synchronous reclaim thread way forward progress ensured risk change missed updating allocation write thread leaving increased posibility deadlock deadlock remain unlikely make sure get fixed,,
6250,f47c42e2143ccf83bb5ddca4251c9db14859a0b5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-22 12:13:04 -0700, , merge branch dracut,,
6251,2092cf68d89a51eb0d6193aeadabb579dfc4b4a0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-20 15:03:18 -0700, , disable vmalloc direct reclaim part vmalloc allocation may occur internal allocation doe honor gfp flag passed vmalloc mean even vmalloc gfp_nofs called possible synchronous reclaim occur reclaim trigger file result deadlock issue avoided explicitly setting pf_memalloc process subvert synchronous reclaim vmalloc called __gfp_fs example stack deadlock found along upstream kernel bug original bug discussion linux mailing list code properly autoconf upstream bug fixed http github.com behlendorf zfs issue label vmalloc issue 133 http show_bug.cgi 30702 http marc.info linux 128942194520631,,
6252,cb255ae57278be3206693b5116eff95e612e809a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-19 13:49:14 -0700, , remove default gfp_nofs allocation originally described commit done prevent certain deadlock occuring system however suspected price proved high hard time effectively reclaiming memory thus reverting change however still need fundamentally handle issue solaris km_pushpage mask used commonly path ensure memory allocation succeed leverage fact redefine km_pushpage include gfp_nofs ensures common path trigger additional reclaim minimizes change solaris code,,
6253,716895b161e31e4db559566fa1dddc3d8d8c64c0,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-18 14:47:19 -0700,162, fix ldflags needed build error compiling ldflags needed exposed fact library linking problem introduced mount_zfs particular libzfs library doe use nvpair symbol mount_zfs contains dependency libzpool close 161 close 162,,
6254,ec49a5f0ec020fa1b0d3e915e2ffb10bbed97599,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-18 13:54:27 -0700, , fix getcwd warning new version glibc declare getcwd attribute result warning updated mount helper checking return value issue fixed checking return type case error simply returning passed dataset one possible unlikely error would cwd directory unlinked mount command running cmd mount_zfs mount_zfs.c function parse_datasetâ cmd mount_zfs mount_zfs.c 223 error ignoring return value getcwdâ declared attribute,,
6255,ae26d0465a234d7b340566287908c78fe24901e1,anuel Amador (Rudd-O) <rudd-o@rudd-o.com>, 2011-03-17 15:18:13 -0700, , add dracut support simplify process using zfs root filesystem zfs drucat sub package added sub package add zfs dracut module allows initramfs rebuilt zfs support process still complicated clearly interest community getting working well documented help lay groundwork longer term change pushed upstream dracut package occurs subpackage longer required new system however may want conditionally build package future system running older dracut version signed brian behlendorf behlendorf1 llnl.gov,,
6256,01c0e61da027925b71c923a2b3896abf458b45a9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-17 15:02:28 -0700, , add init script support automatically mounting zfs filesystem boot basic init script needed unfortunately every distribution idea _right_ way thing rather write one complicated portable init script would invariably replaced distribution anyway instead added support provide multiple distribution specific init script correct init script distribution selected set make install correct script system installed zfs etc init.d usual etc init.d zfs location currently zfs.fedora generic zfs.lsb init script hopefully distribution maintainer know best want init script function feedback approved version included project change doe consider upstart job opposed add sort thing,,
6257,0de19dad9cbca9ac89aea1c7742f131713ef8012,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-15 12:41:19 -0700, , register .remount_fs handler register missing .remount_fs handler handler strictly required vfs doe pretty good job updating ms_ flag however harm using hook call registered zpl callback various ms_ flag additionaly allows lay ground work complicated argument parsing future,,
6258,03f9ba9d990efb911026ebee0902671915db01a3,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-15 12:03:42 -0700, , register .sync_fs handler register missing .sync_fs handler noop case usual requirement sync initiated part dmu normal transaction processing txgs frequently synced however wait flag set requirement .sync_fs must return data safe disk addition .sync_fs handler properly implemented,,
6259,3aff775555a40fe3e5193f1309ba6e80312be5ff,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-15 11:17:33 -0700, , strip zfsutil remount etc mtab updating etc mtab careful strip certain option particular need strip zfsutil mount utility helpfull provide mount helper issue mount subverts check caller zfs mount,,
6260,093aa692861d0c91fd29979c13fc188760a3985b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-15 09:34:56 -0700, , always allow remount allow mount utility always operate datasets remounting read critical rc.sysinit umountroot remount root filesystem read shutdown ensure everything correctly flushed disk fix minor typo check set zfsutil use bitwise must accidentally hit adjacent obviously neither compiler code review caught fix,,
6261,04516a45b27144cf42bec005ef2de6d505d236a5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-10 13:34:17 -0800,152, set scheduler partition zfs change scheduler disk ownership whole disk basically logic adjusting write cache behavior disk change update vdev disk code skip partition setting scheduler close 152,,
6262,a6cba65ccae5a5458f9ab4ac11020716d30ea7f7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-10 12:58:44 -0800,148, check trailing mount.zfs run root cwd mount.zfs helper would strip also next character dataset name example tank changed ank instead tank originally done tmp cwd case needed strip following cwd example tmp tank needed remove tmp cwd plus character change fix problem checking cwd end doe strip extra character otherwise strip next character believe ever true root directory close 148,,
6263,3eae80100bb32140aaa76864af636ea165584446,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-09 15:17:28 -0800, , prep zfs 0.6.0 rc2 tag create second 0.6.0 release candidate tag rc2,,
6264,9ac97c2a939aef0f9899244920007c605387949a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 10:10:20 -0800,107, print mount umount error dependent system mount umount utility ensure correct mtab locking suppress error output successful mount umount silent failure error message print sure way know mount failed mount return code doe contain result system call issued way clearly idenify thing failed rely error message printed tool longer term libmount available issue mount umount system call within tool still ensured correct mtab locking closed 107,,
6265,d53368f6755ff67342f68e2e536c4157409fd047,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-04 15:14:46 -0800,119, fix mount helper several issue related strange mount umount behavior reported commit address original idea put place zfs mount helper mount.zfs helper used enforce legacy mount behavior perform extra mount argument processing selinux zfsutil etc helper ready 0.6.0 rc1 release change functional need extensively tested change address following open issue close 101 close 107 close 113 close 115 close 119,,
6266,181a9b89988a00a3faa06203b94cc155f10fe1e7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-09 15:16:10 -0800, , prep spl 0.6.0 rc2 tag create second 0.6.0 release candidate tag rc2,,
6267,adf2e8778e66e6a749cec981da00463b342bd563,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-09 13:20:28 -0800,126, fix o_append corruption due uninitialized variable file opened o_append may overwrite start file rather append introduced accidentally removed solaris vnodes function used key z_vnode determine znode_t zvol zpl object removal vnodes replaced flag z_is_zvol flag used control append behavior range lock unfortunately value never properly initialized vnode removal however memory usually zero happened set correctly time making bug appear racy properly initializing z_is_zvol zero completely resolve problem o_append close 126,,
6268,17c37660a14cc5e26cc668fdb285933fee4b6cf4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-09 10:48:49 -0800, , conserve stack zfs_setattr move bulk xattr_bulk stack heap minimize stack space usage two array consumed 448 byte stack replaced two byte point total stack space saving 432 byte zfs_setattr path previously observed overrun stack certain circumstance,,
6269,450dc149bd5afdddad724a6eff7ff741fa8fdf11,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-08 12:17:35 -0800,142, range lock performance improvement original range lock implementation modified commit 8926ab7 unsafe linux particular calling cv_destroy immediately cv_broadcast dangerous waiter may still asleep thus following cv_destroy free memory may still use fixed updating cv_destroy block waiter turn introduced deadlock deadlock resolved use taskq move offending free outside range lock worked well using taskq free resulted serious performace hit somewhat ironic time felt using taskq might improve thing making free asynchronous patch refines original fix move free taskq private free list item must free simply inserted list range lock dropped safe free item list walked rl_t entry freed change improves small cached read performance 26x expected small read number locking call significantly surprisingly change significantly improves large cache read performance probably attributable better cpu memory locality likely processor allocated memory freeing ext3 zfs zfs fix faster  512 435 26x 820 160 22x 1536 305 21x 2764 572 20x 3788 1024 20x 16k 4300 1843 21x 32k 4505 138 2560 18x 64k 5324 252 3891 15x 128k 5427 276 4710 17x 256k 5427 413 5017 12x 512k 5427 497 5324 10x 5427 521 5632 10x close 142,,
6270,126400a1ca656d41dea9d2ad88afbec3ed32d391,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-08 11:04:51 -0800, , add zfs_open zfs_close original implementation zfs_open zfs_close hook dropped simplicity functional 100 correct expected zfs sematics updating adding zfs_open zfs_close hook resolve following issue zfs_appendonly file attribute honored still linux tool set clear attribute behave correctly minimal virus scan file attribute hook added support disabled infrastructure back place importantly correctly handle assigning file opened syncronously intent log without change o_sync modification could lost system crash even though marked synchronous,,
6271,53cf50e0816a89749b3ea4d51d5d9c9605bcc3e8,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 16:06:22 -0800,140, set stat st_dev statfs f_fsid filesystems like zfs must use kernel call anonymous super block basically filesystem backed single block device normally block device dev_t stored super block anonymous super block unique reserved dev_t assigned part get_sb s_dev must set returned stat structure stat st_dev allows userspace utility easily detect boundries specific filesystem tool depend proper accounting additionally opensolaris statfs f_fsid set device preserve consistency opensolaris also set fsid device linux filesystem ext set fsid unique value determined filesystems uuid value unique maintains relationship device may desirable exporting nfs filesystem minimizes chance client observing fsid two different server close 140,,
6272,6788762766d137754d164ced45d1e80540391531,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 13:52:00 -0800, , linux 2.6.31 compat include linux seq_file.h explicitly include linux seq_file.h header vfs.h header required sequence handler included indirectly newer kernel,,
6273,a60b1c0a8e7e760088c51717614205bd5e43f560,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 13:03:48 -0800,127, make missing modules.symvers fatal detect early configure modules.symvers file missing without file build failure later best catch early provide useful error case likely problem kernel devel package installed may also possible using unbuilt custom kernel case must build kernel first close 127,,
6274,912fd84d13e2aa539695598df4daffeeec549c43,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 12:59:30 -0800, , make missing modules.symvers fatal detect early configure modules.symvers file missing without file build failure later best catch early provide useful error case likely problem kernel devel package installed may also possible using unbuilt custom kernel case must build kernel first,,
6275,15805c7711a69a293d7ab974a7e8f19c388836b4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 10:59:26 -0800, , make config_preempt fatal support added preemptible kernel detect configure time make fatal otherwise possible successful build kernel module flakey behavior,,
6276,7731d46b69bd893d515c55e87ffa8a9bd2ddfb38,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-07 10:58:07 -0800, , make config_preempt fatal support added preemptible kernel detect configure time make fatal otherwise possible successful build kernel module flakey behavior,,
6277,5075c7ea69cc66fa5031ab8d562a66274300ced6,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-03 15:45:28 -0800, , add missing libspl libzpool libs libzfs libspl libzpool library missing libzfs makefile.am explicitly listed avoid build issue compiling static library binary additionally ensure libzpool built libzfs libzfs dependent libzpool also exposed issue forcing static linking,,
6278,6742abf9ec5a2c0ca132951efa0dee85698ff9b8,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-03 11:29:15 -0800, , use linux attr_ version at_ version macro used solaris map linux equivilants code updated use attr_ version,,
6279,f4ea75d492139f397866b64512803191103d69bb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-02 14:18:40 -0800, , conserve stack zfs_setattr move tmpxvattr stack heap minimize stack space usage enough get 1024 byte stack frame warning however still large stack frame reduced moving bulk xattr_bulk sa_bulk_attr_t variable heap future patch,,
6280,5484965ab650a56871a62a3373859a7a36ddafcb,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-01 12:24:09 -0800,111, drop have_xvattr macro began work posix layer immediately became clear integrate cleanly linux vfs certain solaris specific thing would one thing elimate many solaris specific type zpl layer possible would replaced linux equivalent would good performance general readability health code solaris linux vfs different beast treated code remains common constructing transaction subtle important differenced need repsected policy went quite certain type vnode_t initially seemed working well vattr_t relatively small amount related xvattr_t code forced comment have_xvattr look hard come back soon replace native linux type however going path xvattr distance clear code woven zpl deeply thought particular hook went deep zpl replay code replacing would easy originally thought rather continue persuing replacing removing code taken step back reevaluted thing commit reverts many previous commits removed xvattr related code restores much code original upstream state relies improved xvattr_t support zfs package result much code commented accidentally broke thing like replay back place working however may small performance impact getattr setattr operation require translation native linux solaris type price willing pay everything completely functional revisting issue removing vattr_t xvattr_t type close 111,,
6281,321a498b95f4a43a5553f53b435497f89fefc599,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-01 16:24:39 -0800, , add xvattr support removal minimal xvattr support spl support need replaced zfs package fairly easily accomplished directly adding portion sys vnode.h header opensolaris xvattr addition placed sys xvattr.h header file included needed simply sys vnode.h included additon xvattr type helper macro two function also included xva_init xva_getxoptattr function included static inline function xvattr.h simple enough simpler place rather file,,
6282,9623f736d958b4a28613177e03095dbdde0cc4af,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-01 16:24:21 -0800, , remove remove remaining caller type removed needed linux port,,
6283,47995fa691a789132373acaedf1e2a64cf213be1,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-01 14:02:06 -0800, , remove xvattr support xvattr support spl always simply consisted defining couple structure defines enough enable compilation code passed xvattr type around enough effectively manipulate change remove even minimal support leaving package leverage spl prove full xvattr support removing spl ensure conflict higher level package leaf minimal vnode support basical manipulation file code doe proper support function spl set regression test additionally change removed unused type replaces void,,
6284,a4a1e1ecb42c3a0d9a25b5b0e0b400147b91bdb3,rian Behlendorf <behlendorf1@llnl.gov>, 2011-03-01 15:21:38 -0800, , add helper add helper macro allow easy checking timespec overflow,,
6285,a23cc0a443e3da417cc1894cd3e86946f1ff3add,arik Horn <dajhorn@vanadac.com>, 2011-02-28 10:15:05 -0600, , add zpool filesystem version print supported zpool filesystem version module load time change remove ambiguity add information system administrator care phrase zfs pool version zpool upgrade operator familiar message zfs loaded module v0.6.0 zfs pool version zfs filesystem version zfs unloaded module v0.6.0 signed brian behlendorf behlendorf1 llnl.gov,,
6286,19c1eb829d014cc64a5742710dae042bdaef25ae,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-25 15:48:18 -0800, , add zlib regression test zlib regression test added verify correct behavior z_uncompress test case simply take 128k buffer compress buffer uncompresses buffer finally compare buffer transform buffer match everything fine data lost performs test zlib compression level,,
6287,5c1967ebe2ad28f3c3229cba85159ccbd4dfe93a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-25 13:26:19 -0800, , fix zlib compression portion code needed support z_uncompress place reality current implementation non functional compilable critical missing component setup workspace compress uncompress stream structure use kmem_cache added workspace area require large chunk memory avoids need continually alloc free memory vmap page slow several object reside per cpu kmem_cache making quick acquire release optimization would adjust implementation additional ensure memory local cpu currently may case,,
6288,fdcd952b4d93f9c9d9ec89a95ef6e2964c27da95,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-25 11:26:41 -0800, , fix set block scheduler warning two case attempting set vdev block device scheduler would cause console warning first case vdev used loop ram device support configurable scheduler case attempting set scheduler pointless safely skipped secord case slightly troubling seeing transient case setting elevator would return efault retry everything fine appears small window possible handle case silently retry three time reporting warning case warning harmless worse may see slightly different performance characteristic one vdevs,,
6289,4c0d8e50b99b4f3b4a9b7bc67ac7fc4e406f5755,ajar A. Nugraha <github@fajar.net>, 2011-02-22 17:58:44 +0700, , use udev create dev zvol dataset_name link commit allows zvols name longer character fix issue http github.com behlendorf zfs issue issue 102 change include use dev device name zvol device minor include sys zfs.h module zfs zvol.c add blkzname ioctl get dataset name userland include sys zfs.h module zfs zvol.c cmd zvol_id add udev rule create dev zvol dataset_name legacy dev dataset_name symlink partition zvol create dev zvol dataset_name part etc udev rules.d zvol.rules cmd zvol_id signed brian behlendorf behlendorf1 llnl.gov,,
6290,61da501f9d93f305d21d5d61fa3ecd476bdbac93,arik Horn <dajhorn@vanadac.com>, 2011-02-24 11:08:35 -0600, , add new blkdev_compat.h header dist target signed brian behlendorf behlendorf1 llnl.gov,,
6291,dc1d7665c54de024cf5ded1b835482dbc5f1ae38,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 15:13:03 -0800, , remove rdev packing remove custom code pack unpack dev_t linux dev_t unsigned bit value even bit platform lower bit used minor number upper major number mean importing pool solaris may get strange major minor number really matter even add compatibility code translate encoded solaris major minor good linux still need recreate dev_t major minor map reserved major number used linux dropping code also resolve bit build removing offending bit compatibility code,,
6292,99c564bc48710ff2a6edbfcad16d3c3b89773111,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 15:03:30 -0800, , use correct assert3 variant assert3p used instead assert3u comparing pointer using assert3u cast cause compiler warning bit build fatal enable debug,,
6293,5a52a782a0a04efee3846e1a8f0bb4796930e0e4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-20 14:02:48 -0800, , use linux flock struct rather defining structure conflict linux version building bit simply setup typedef always use correct linux version bit build,,
6294,05ff35c602827a0f03659ec974c67b3fb5bf1c0b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 13:57:50 -0800,112, increase fragment size block size underlying storage pool actually multiple block size solaris frsize fragment size reported smallest block size support bsize block size filesystem maximum block size unfortunately linux fragment size block size often used interchangeably thus forced report filesystem maximum block size close 112,,
6295,f6dcdf13f80ee039141ab92ae506bd4443111662,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 13:03:19 -0800, , fix statement effect warning secpolicy_ macro currently defined caller function doe check return code compiler complains statement effect correct ok. suppress warning explictly cast result void,,
6296,718d77f622463e1763c4f6d5cbfb7740d7e6968d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 12:57:25 -0800, , fix uninitialized variable possible unitialized parse_options function triggered compiler warning ensure always initialized,,
6297,a31a70bbd1c3d6b27a68280e53103c5b9a8ebd65,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 12:50:05 -0800, , fix enum compiler warning generally good idea use enums switch statement case cause warning enum really set flag flag together case resulting value part original enum cause compiler warning invalid case error case value 33â enumerated type zprop_source_tâ handle simply case enum int switch statement leaf enum type checking place effectively disabled warning,,
6298,914b063133365a17b1f607cbe96102259e497753,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-23 12:25:45 -0800, , linux compat 2.6.37 2.6.37 kernel function longer exported use module memory management functionality needed invalidate inodes attached super block without unmounting filesystem function still exists kernel prototype available common header strictly need symbol address address obtained using assigned variable define used replace instance call acquired address complexity hidden behind used usual long term try get another interface made available module,,
6299,45066d1f20a582fc8229776503b1cdd554d7fde4,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-22 14:55:35 -0800,114, linux 2.6.38 compat function replaced generic function additionally counterpart function replaced blkdev_put function generic version function replaced compatibility macro must add fmode_excl mask ensure exclusive close 114,,
6300,61e909608d15dc6900a710a0ceab6e101a68ac5a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-22 12:15:13 -0800, , linux 2.6.x compat blkdev_compat.h legacy reason zvol.c vdev_disk.c linux compatibility code ended sys blkdev.h sys vdev_disk.h header worse place code live linux blkdev_compat.h header change move block device linux compatibility code linux blkdev_compat.h header update correct include location functional change bug fix code cleanup,,
6301,bf665d4075e9777af089e669c65f72d5d652f26e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-18 09:20:02 -0800, , prep spl 0.6.0 rc1 tag create first 0.6.0 release candidate tag rc1,,
6302,075cf6cb72a460d884c29085413c3ea16a62d32d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-18 09:33:12 -0800, , prep zfs 0.6.0 rc1 tag create first 0.6.0 release candidate tag rc1 posix layer functional pass fstest several test suite cleanly need release candidate tag broaden test coverage release official zfs 0.6.0,,
6303,5d0265c0dd54d798a35babe587ad5138392fe807,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-18 09:31:25 -0800, , merge branch zpl,,
6304,037849f854c511d86e3564ed7000e6c6472d6f70,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-17 14:17:44 -0800, , use provided uid gid setattr changing uid gid file via zfs_setattr use posix passed iattr ia_uid gid zfs_fuid_create code already fuid support disabled linux returning uid gid credential change chown command relies setxattr working properly also remove little stray white space front call end zfs_setattr,,
6305,efd1832bc615a4e32259e31d1c7ff0af14f5c1b2,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-17 11:26:51 -0800,96, fix symlink inode reference count linux sys_symlink result inode created one reference inode second reference inode held new dentry solaris appears case zfs_symlink handler drop inode reference returning result linux reference count symlinks always one smaller result bug symlink unlinked handle linux port keep inode reference differs solaris behavior result correct reference count close,,
6306,5095000169f695ea6b65d74da917c3f465d05aab,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-17 09:48:06 -0800, , use zfs_readlink error zfs_readlink function return solaris positive error value need converted linux negative error value case nothing would actually wrong still incorrect fixed reason clarity,,
6307,f03e41e8da6d184039ea3b03ba4937f4786a3f22,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-17 09:21:39 -0800,98, improve zpool import safety three improvement zpool import proposed fajar github issue 98. good commiting three add description hpet core blacklist entry add core blacklist described issue accessing device crash xen dom0 refine probing behavior use fstatat64 allows determine device block device regular file without open safest appraoch probing dev simple act opening device may unexpected consequence close,,
6308,8b4f9a2d55fc5ee28f69b29f2fece7d8e2cb5c7a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 15:54:55 -0800, , fix readlink patch address three issue related symlinks revert zfs_follow_link function modified version original zfs_readlink change original opensolaris version relate using linux type moment mean vnode zfsvfs_t caller zpl_follow_link also updated accordingly change reverted slightly gratuitious update zpl_follow_link use local variable link buffer forgotten iov.iov_base updated uiomove call zfs_readlink longer used need private copy link pointer allocate maxpathlen instead maxpathlen default maxpathlen 4096 byte full page adding one push slightly page mean likely end allocating page wasteful memory possibly slightly slower,,
6309,54a179e7b80413bd48cd2cd259110fb493d0215e,icardo M. Correia <ricardo.correia@oracle.com>, 2011-01-21 14:35:41 -0800, , add api wait pending commit callback add api wait pending commit callback already synced transaction finish processing needed dmu osd lustre device finalization callback may still called lead non zero reference count error see lustre.org bug 23931,,
6310,b9f6a49025809d658754c758dc7e2a81ee41271b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 11:10:31 -0800, , update zfs.sh umount zfs filesystems safe unload zfs module stack mounted zfs filesystems must unmounted unmounted reference held module stack removed handle zfs.sh used test script umount zfs filesystem attempting unload module stack,,
6311,07bd86718b74b2d8e0f633f1b80e976892eaf329,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 11:05:55 -0800, , suppress share error mount code added support automatically sharing datasets return success instead failure prevents command line tool returning non zero error code user likely notice test script like zconfig.sh correctly fail,,
6312,a6695d83b763aaeeeeb6d4bdb57ed59a384106f7,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 09:55:53 -0800, , add get setattr get setxattr hook attr xattr hook already place regular file hook also apply directory special file typically used way supported patch register additional callback directory special inode type,,
6313,d8fd10545b677cb4b770674372c1e116b7c22c64,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 09:51:44 -0800, , fix fifo socket handling linux creating fifo socket type device zfs filesystem critical rdev stored already correctly done character block device logic needed extended include fifo socket patch take care device creation follow patch may still required verify dev_t correctly packed unpacked,,
6314,d5674448094cec6eb3563afb63cc1e096bc5b280,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-16 09:40:29 -0800,96, create minor zvols noticed zvols multiple datasets zvol device created module load time fajarnugraha leg work identify root cause bug non zero return value returning non zero value callback function result aborting processing remaining child dataset since want ensure callback run child regardless error simply unconditionally return zero callback function solely used purpose surpressing error safe close,,
6315,2c395def2763ccc7a549d297f7f11bd304caaeae,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-11 13:46:10 -0800, , linux 2.6.36 compat sop evict_inode new prefered inteface evicting inode inode cache evict_inode callback replaces delete_inode clear_inode callback previously used,,
6316,f9637c6c8b9c452c440a366aa937b363f027d95e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-11 10:33:01 -0800, , linux 2.6.33 compat get set xattr callback xattr handler prototype sanitized idea handler could used multiple method result inode type change dentry get set hook handler_flags argument added list callback similiarly effected autoconf check added use list callback,,
6317,7268e1bec8478639b7a1047e02ab931f30bc2f92,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-11 08:58:55 -0800, , linux 2.6.35 compat fop fsync fsync callback file_operations structure used take argument callback take argument dentry argument determined unused consumer handle compatibility prototype added ensure right prototype used implementation never used dentry argument either matter using right prototype,,
6318,777d4af89137907adc91377327505f40c296035d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-10 16:16:52 -0800, , linux 2.6.35 compat const struct xattr_handler const keyword added struct xattr_handler generic linux super_block structure handle define appropriate xattr_handler_t typedef used preferred solution keep code clean readable,,
6319,1b94c25ceb12649b4b2ffb9a016e4f51cfa91736,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-10 14:54:33 -0800, , prefer lib module uname link preferentially use lib module uname source lib module uname build link neither link exist fallback alternate method deducing kernel build resolve need manually specify linux linux obj debian system,,
6320,22ccfaa8b5f6a6e8a770667a9d412828906a4332,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-10 14:40:57 -0800, , prefer lib module uname link preferentially use lib module uname source lib module uname build link neither link exist fallback alternate method deducing kernel build resolve need manually specify linux linux obj debian system,,
6321,afffb5cd102f340f3879f4d7af8988dd209b9b72,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-10 12:11:05 -0800, , ms_dirsync ms_rec compat turn older version glibc header properly define ms_dirsync despite explicitly mentioned man page instead call s_write system correct defined map ms_dirsync s_write time commit ubuntu lucid debian squeeze use date glibc header ms_rec field also available older header since obvious mapping case simply disable recursive mount option used,,
6322,1ac0ea38a5b19771b0dfbc6b2244c4f674ef1a31,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-10 10:57:29 -0800, , add missing ldl linker option inclusion dlsym dlopen dlclose symbol require link library careful add flag libzfs library command depend library,,
6323,6c9e06f14de1ed27e6032be2197b8f4cbec7405a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-08 15:40:52 -0800, , update author file file gotten stale needed updated individual deserve recognized contribution project done best assemble name commit log submitted patch list may comprehensive feel overlooked contribution please let know get name added,,
6324,6839eed23e3c9d85cf0de767be32af0759e5bf2d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-07 13:54:59 -0800, , use noop scheduler initial testing shown right scheduler use linux noop strike ideal balance allowing zfs elevator request ordering prioritization allowing linux elevator maximum front back merging allowed physical device yield largest possible request device lowest total overhead noop right system choose different scheduler option may set value standard linux scheduler noop cfq deadline anticipatory addition choose none zfs attempt change scheduler block device,,
6325,4db77a74a6a26c57a04f98c4a23b9fda9319ba9f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-07 12:21:29 -0800,1, suppress large kmem_alloc warning following warning observed normal operation fatal something addressed long term flag offending allocation km_nodebug suppress warning flag call site spl showing stack process 21761 pid 21761 comm iozone tainted 2.6.32 call trace 0x27 0x40 spl 0x11d 0x130 spl 0xa6 0x4e0 zfs 0x65 0x90 zfs dmu_read_uio 0x41 0xd0 zfs zfs_read 0x147 0x470 zfs zpl_read_common 0x52 0x70 zfs zpl_read 0x43 0x70 zfs vfs_read 0xb5 0x1a0 sys_read 0x51 0x90 0x16 0x1b,,
6326,f44b46a632d5b332d993faaeb16fe30650619803,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-07 12:09:23 -0800, , update meta 0.6.0 roll version forward 0.6.0 addition posix layer warrents updating major version number,,
6327,ceb43b935d6c4f4f6509623c7498d5dcc40ea813,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-04 16:54:34 -0800, , invalidate dcache inode cache performing zfs rollback critical invalidate previous dcache inode cache stale cache entry accessed result eios,,
6328,b3b4f547f9243c0c1a446c74574a1f737e29dee6,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-04 16:17:54 -0800, , remove useless libefi warning two warning libefi serve real purpose running without debug already supressed even debug enabled indicate device already efi label linux machine probably common case,,
6329,8926ab7a50d60d855e4d49d2ed7bdef49dd56149,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-04 14:38:11 -0800, , move cv_destroy outside z_range_lock recent spl change d599e4fa force cv_destroy block waiter woken unsafe call cv_destroy z_range_lock used condition variable mutex waiter cv_destroy block wake aquire mutex however never aquire mutex cv_destroy return allowing caller drop lock deadlock avoid cv_destroy run asynchronously taskq solves two problem longer run z_range_lock deadlock since cv_destroy may block want slowing throttling system much issue opensolaris cv_destroy implementation doe anything however risk bad paging request cv_destroy return memory holding condition variable free waiter wake try reference small unlikely race possible,,
6330,c0d35759c5ab1abaa6b72062cc4ecd0d86628de8,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-03 10:34:05 -0800, , add mmap support worth taking moment describe mmap implemented zfs differs considerably linux filesystems however issue handled way opensolaris issue design zfs bypass linux page cache leaf caching arc shown work well common read write case however mmap problem relies tightly integrated page cache handle cache mmap file twice arc second time page cache code careful keep copy synchronized file mmap region written using write data arc existing page page cache updated read data read first page cache arc needed neither write read ever result new page added page cache new page added page cache via .readpage called vfs need read page disk back virtual memory region page may modified without notifying arc written periodically via .writepage occur due either sync usual page aging behavior note read mmap file always check page cache first even arc date correct data still returned implementation ensures correct behavior doe drawback obvious increase required memory footprint access mmap file also add additional complexity code keeping cache synchronized longer term may possible cleanly resolve wart mapping page cache page directly arc buffer linux address space operation flexible enough allow selection page back particular index trick would working detail subsystem charge arc page cache may also prove helpful move arc buffer scatter gather list rather vmalloc region additionally zfs_write read_common used readpage writepage hook fairly easy however would better update zfs_fillpage zfs_putapage linux friendly use instead,,
6331,cc5f931cfd623c50f283fa5cf1bc21cfd7e5c703,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:10:01 -0800, , add hook linux xattr operation linux specific xattr operation located file zpl_xattr.c function primarily rely reworked zfs_ function job also responsible converting possible solaris style error code negative linux error,,
6332,51f0bbe425f7313a19ee54ccd3d67ed8ba686567,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:09:10 -0800, , add hook linux super block operation linux specific super block operation located file zpl_super.c function primarily rely reworked zfs_ function job also responsible converting possible solaris style error code negative linux error,,
6333,ee154f01bf0bdb5e85524c518c19964272d33cd9,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:08:24 -0800, , add hook linux inode operation linux specific inode operation located file zpl_inode.c function primarily rely reworked zfs_ function job also responsible converting possible solaris style error code negative linux error,,
6334,1efb473f8919c5f195e127136b79c6d3b1eb1c81,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:03:58 -0800, , add hook linux file operation linux specific file operation located file zpl_file.c function primarily rely reworked zfs_ function job also responsible converting possible solaris style error code negative linux error first zpl_ commit also includes common zpl.h header minimal entry register linux specific hook also add new zpl_ file makefile.in standalone commit required following zpl_ commits,,
6335,633e8030b3582f3579a457a803c1382fc81f56e5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-08 11:33:08 -0800, , wrap have_xvattr moment exactly handle xvattr clear change largely consists code comment offending bit something reasonable done,,
6336,3c4988c83e4f278cd6c8076f6cdb8e4858d05840,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-08 11:29:50 -0800, , add z_is_zvol flag new flag required zfs_rlock code determine operation zvol zpl dataset used keyed z_vnode hack begin removal vnodes needed dedicated flag,,
6337,3558fd73b5d863304102f6745c26e0b592aca60a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-08 11:16:06 -0800, , prototype structure update linux appologize advance many thing ended commit could seperated whole series commits teasing apart would take considerable time sure much merrit summerize intent change partly commit broadly intent remove much solaris specific code possible replace native linux equivilants specifically replace instance zfsvfs_t zfs_sb_t type largely calling private super block data rather zfsvfs consistent linux name non critical make code easier read thinking linux friendly vfs term replace vnode_t struct inode linux vfs notion vnode absolutely good reason create one fact several good reason remove add overhead linux manage one conplicates code likely lead bug good change date code updated remove need type replace vtype_t umode type along shift type mode bit solaris code would pas vtype redundant linux mode update code use linux mode macro remove redundancy remove using vn_ helper replace needed inode helper big example creating iput_aync replace vn_rele_async helper addressed needed emulated solaris vfs ism simply replaced linux equivilants update znode alloc free code linux common embed inode specific data inode remove need extra memory allocation zfs information called znode embeds inode allocator updated accordingly minimal integration vfs flag setting super block handling mount option added code need refined functionally first last large review commits,,
6338,6149f4c45fc905761a6f636ea9e14ff76ce6c842,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-08 10:39:06 -0800, , remove dmu_write_pages support moment use dmu_write_pages write page directly dmu object may required point future simplest cleanest drop easily readded needed,,
6339,eb28321e2d8952290db7dceb66d7761d528788e3,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:49:58 -0800, , create root znode without vfs dependency portability reason handy able create root znode basic filesystem component without requiring full cooperation vfs committing simply filesystem creation code,,
6340,bcf308227c9aa51ef9d5a1fe3f2f1342ff2aee94,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-26 12:45:24 -0800, , remove zfs_ctldir code used snapshot heavily leverage solaris functionality want reimplement file removed including reference replaced zfs_snap.c zpl_snap.c implementation handle snapshot,,
6341,b516a07b997a8c3006788963f6b6128e505cf56c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 14:53:21 -0800, , disable fuid feature feature probably enabled linux zpl code disabling clear need done,,
6342,d5e53f9d06d149fbb62920bb5af766059dc35341,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 14:07:41 -0800, , disable zfs_sync oops panic minor update ensure zfs_sync disabled kernel oops panic triggered comment say data integrity job one change could done defining panicstr spl felt better use native linux api since clear,,
6343,acb53769403aa896b022129f1bdb3d845a4d0201,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 16:38:30 -0800, , disable shutdown reboot support disable have_shutdown support point adding needed reboot notifiers,,
6344,cb28b3494e88e0e43c43588fccfa6526344b9a64,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 14:15:48 -0800, , remove sync_attr check flag doe need support linux comment say support fsflush old filesystem like ufs needed linux,,
6345,e15c02301489477c9201a80afac46791d20bd070,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 12:56:48 -0800, , remove mount option mount option parsing still linux specific handled zfs filesystem layer honoring mount option set course responsibility lower layer,,
6346,d7cafa8e3e8973bca6b2ebabafb669508031075e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 17:00:34 -0800, , remove variable used ensure zfs module never removed filesystem mounted generic linux vfs handle case removed,,
6347,42ab36aa368b09dfec7214cc884b004ee934b2df,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 16:56:49 -0800, , remove unused mount function function zfs_mountroot zfs_mount needed already handled generic linux vfs layer call zfs_domount creates actual dataset caller library call zpl layer responsible left,,
6348,c0b3dc7d0797ce2d08df7e07fff15298e957270c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 16:24:57 -0800, , remove zfs_major zfs_minor zfsfstype linux need reserve major minor number filesystem rely vfs handle colisions without handled lower zfs layer additionally need keep zfsfstype around limited linux opensolaris infrastructure needed upper zpl layer specify filesystem type,,
6349,4b3f12ecd5a641b182609d7fe78313d53f6e8976,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 14:46:59 -0800, , remove solaris vfs hook zfs code restructured act library stand alone module allows leverage existing code minimal modification also mean need drop solaris vfs vnode function replaced linux equivilants updated linux friendly,,
6350,960e08fe3e2cdf5217996b9f42a01f7e20f2b97a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 14:27:30 -0800, , vfs add helper moment left zfs unchanged update many value part znode however value set inode moment handled adding function called update inode based znode considered workaround systematically zfs code directly update inode point dropped entirely keeping two copy data inefficient breeding ground bug,,
6351,7304b6e50f656fbf4b126a4e94deac174133851c,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-05 13:16:12 -0800, , vfs integrate zfs_znode_alloc linux convention filesystem specific data structure embed along generic vfs data structure differs significantly solaris since want integrates cleanly linux vfs possible change modifies zfs_znode_alloc allocate znode embedded inode use generic vfs done calling iget_locked allocate new inode needed calling alloc_inode function allocates enough memory znode_t return pointer inode structure linux vfs function also responsible setting callback znode used register correct handler inode,,
6352,10c6047ea56445a87d8ce1397ac2d2caa97719ca,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-21 16:28:11 -0800, , enable zfs_znode compilation basic compilation bulk zfs_znode.c enabled much consideration decided convert existing vnode based interface friendly linux interface following commits systematically replace update requiter interface course pro con decision pro simplifies intergration linux long term longer need manage vnodes foreign concept linux vfs improved long term maintainability minor performance improvement removing vnode overhead con added work short term modify multiple zfs interface harder pull change ever see new code solaris mixed solaris linux interface zfs code,,
6353,a405c8a665bf7d96880c97bcb783cf84d04e3e76,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 15:21:18 -0800, , acl related change small collection acl related change related supporting fuid mapping whole need closely investigated,,
6354,3fc050aaf2bc2e11844268ae0c091e6eb56108e5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 15:26:17 -0800, , init destroy tsd add missing tsd_destroy call rrw_tsd_key avoid leak,,
6355,8299a1f41eb4761cd25ea821830295a6f32be581,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-18 11:42:25 -0800, , add linux compat infrastructure lay initial ground work include linux compatibility directory critical past bulk zfs code consumes solaris api via spl api stable bulk linux api difference handled spl however addition full posix layer written directly linux apis going need compatibility code make sense code cleanly located one place subsequent patch move existing zvol vdev_disk compatibility code directory,,
6356,ab892c5f0ad7c2ee291693cf61dfc9601a2472d0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-22 10:07:03 -0800, , replace vop_ call direct zfs_ call generic solaris wrapper longer required simply directly call correct zfs function clarity,,
6357,590329b50cda53cad87a4222d55cdbb35bfcf494,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-22 12:13:57 -0800, , add basic uio support code originates opensolaris modified infotech compatible linux supporting uios short term useful get something working abstraction want keep code expected short lived removed soon remaining uio based apis updated,,
6358,538f669f63e43b1d2a288c872a66b9d18b4a4bee,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 12:51:48 -0800, , add trivial acl helper zfs acl code make use two opensolaris helper function since called zfs_acl.c brought opensolaris added static function file way need reimplement functionality scratch spl long term take careful look acl implementation may case function really needed turn case removed,,
6359,c60bc1fbf0760c9797411e10c05426fc41052f0a,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-21 14:38:27 -0800, , remove dead acl code following code unused caused gcc complain since deadcode simply removed,,
6360,4e1b54fdde35e952ea7084a4640e08c6e42f8a94,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 16:49:45 -0800, , remove support remove unneeded bootfs function support required linux port even would need reworked integrate cleanly linux,,
6361,9ee7fac5312f9c6b33155aed77e50b0dfd68a77d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-07 11:51:27 -0800, , vfs wrap have_share certain nfs smb share functionality yet place function used wrapped generic have_zpl prevent compiled still want compiled working toward eliminating use have_zpl renaming wrapper have_share still compiled share issue worked share support last missing piece zfs_ioctl.c,,
6362,bc3e15e386a62c29e10194e5fae3c4f8a76337df,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-06 16:47:31 -0800, , wrap have_mlslabel function part have_mlslabel support previously commented have_zpl check since still deciding label wrap preexisting macro keep compiled,,
6363,5649246dd3ba02041c83f7bab1c19c5815f9b771,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-07 12:40:30 -0800, , remove znode move functionality unlike solaris linux implementation embeds inode znode use vnode true fragmention znode cache may occur worse linux inode cache proven problem added complexity need,,
6364,f30484afc32b6040a15fabfc697cfb76116e468f,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-07 13:47:47 -0800, , conserve stack zfs_mkdir move sa_attrs array stack heap minimize stack space usage,,
6365,1ee1b76786aebc6eed546c6e869cc88f1e318890,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 14:21:46 -0800, , conserve stack zfs_sa_upgrade always linux stack space premium relocate two element sa_bulk_attr_t array zfs_sa_upgrade stack heap,,
6366,e5c39b95a7ccc19ce7a3af8d8d09f0b8959a3991,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 11:18:08 -0800, , export required vfs symbol,,
6367,72d5e2da3e45a6865806f1be908232f5fea8787b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 14:04:40 -0800, , add have_scanstamp functionality supported linux perhaps day decided useful,,
6368,0d33908cdfb5502e35717adc14d2a0db8b596cd5,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-07 16:41:08 -0800, , update meta 0.6.0 roll version forward 0.6.0. major change really warrant want keep version step zfs spl consumer,,
6369,872e8d26978a8e1caa1ca7d931db7f95d987a3e7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-17 09:14:38 -0800, , add initial rw_uio function dmu function dropped originally felt would need rewritten anyway avoid using uios however patch readds dea reworked uio bit dropped,,
6370,b4ead57cfb410247eee4d2a8a6e488cf4542ac77,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 15:11:40 -0800, , remove have_zpl command library thanks previous commits build user space command library support zpl,,
6371,9a616b5d17185c7fa5cd0d39ff8bc101cad8466d,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 15:43:37 -0800, , documentation update minor linux specific documentation update comment man page,,
6372,c5d915f4237bbd1f5623b5044a1924a3cb91852b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 13:47:30 -0800, , minimal libshare infrastructure zfs even solaris doe strictly require libshare available current implementation attempt dlopen library access needed symbol fails libshare support simply disabled mean linux need minimal libshare implementation fact enough prevent build failing longer term decide want implement libshare library like solaris best would abstraction layer zfs nfs smb alternately drop libshare entirely directly integrate zfs linux nfs smb finally bare bone user libshare.m4 test dropped decide implement libshare point surely part package check needed,,
6373,3fb1fcdea167d705e050a0383ec61b95fbe8a0ed,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 16:16:25 -0800, , add zfs mount support design zfs utility supposed handle mounting unmounting zfs filesystem could allow zfs directly system call available mount umount filesystem library call available manipulate etc mtab couple good reason take appraoch ... instead directly calling system library call mount filesystem fork exec mount process principle reason delegate responsibility locking updating etc mtab mount ensures maximum portability ensures right locking scheme version mount used would resort autoconf test determine locking mechanism used downside using mount instead mount lose exact errno returned kernel return code mount provides insight went wrong quite good moment translated best guess errno higher layer zfs long term shared library called libmount development provides common api address locking errno issue standard mount utility updated use library leverage safe solution http www.kernel.org pub linux utils util linux libmount doc index.html,,
6374,d599e4fa793b304609d32e336c668b70831b6b3b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-02-04 14:09:08 -0800, , block cv_destroy waiter previously would assert cv_destroy ever called active waiter however seen several instance opensolaris code following cv_broadcast cv_destroy leaf time active waiter woken scheduled trip assert observed issue opensolaris cv_destroy basically doe nothing still run risk memory free cv_destroy hitting bad paging request practice race small unlikely either happen unlikely doe happen root cause yet identified rather risk issue code change update cv_destroy block waiter woken scheduled may take time waiter must acquire mutex change may impact performance frequently created destroyed condition variable however price worth paying avoid crashing system performance issue observed addressed caller,,
6375,feb46b92a7619a3bb67b925e24184fe70464d261,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 15:47:40 -0800, , open recently helper function added libzfs_util load kernel module execute process initially functionality limited libzfs become clear consumer change open interface may used appropriate,,
6376,95c4cae39fd77b5b00810eb976c9a6462d86ccd4,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 12:56:10 -0800, , disable umount.zfs helper moment advantage registering umount helper would automatically unshare zfs filesystem since linux would unexpected nice behavior harm disabling desirable zfs unmount path invokes system umount done ensure correct mtab locking side effect umount.zfs helper would called exists default helper call back zfs unmount solaris want linux libmount available safe way correctly lock update etc mtab file reconsider need umount helper using libmount prefered solution,,
6377,3b8cfee8af1d966eea75389e2a2e53a5a8dca600,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-08 16:40:11 -0800, , enable mount.zfs helper strictly required mount zfs filesystem using mount helper certain advantage first need want honor mount behavior found solaris part mount need validate dataset legacy mount property set using mount instead zfs mount secondly using mount helper automatically load zpl kernel module way issue mount zfs mount work finally give common hook user space add zfs specific mount option might want moment infrastructure least place,,
6378,b3259b6a2ba29595dc5f2df0f6def8c7fc6bcb98,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 14:26:08 -0800, , autoconf selinux support libselinux detected system configure time link allows use library call detect selinux enabled pas mount option context system_u object_r file_t required none existing selinux policy aware zfs filesystem type properly enable xattr based labeling even though zfs support required hook distro add zfs known xattr friendly type must use mntpoint labeling alternately end user could modify existing selinux policy little guidance,,
6379,0aff071d18bbef2fb6b2ab41f60ab3b957ae58c7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-22 13:45:02 -0800, , minor policy interface simply add policy function wrapper completely non functional always return everything simplify compilation dependent package removed security policy dependent application completely understood intergrade appropriate linux,,
6380,ef57fb98e4525e57973cbbe7279e39f0e7fef451,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-22 13:41:57 -0800, , add missing header dependent package require following missing header simplify compilation header basically stubbed minimal content required,,
6381,3fc97f93359ed6a74ea7165b102995cfe5d2c16d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 11:34:07 -0800, , add vsa_ace_ max_acl_entries defines following flag use get proper mask getting setting acls hopeful largely away point also add define maximum number acl entry max_acl_entries used maximum number entry type,,
6382,e2b25f698cecc7ab3a3073861ab81a8258644f89,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 11:29:17 -0800, , add maxuid define linux maximum uid vary depending kernel built linux kernel still compiled uids gids although aware major distribution doe maybe embedded one given caviot reasonably safe define maxuid 2147483647,,
6383,5f46a517f17affc89591f0130870bca48a5b093e,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 11:27:07 -0800, , add fignorecase define fignorecase case define needed place related flag,,
6384,3e5d3d32858683d3410a63c712412167c345853b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 11:25:20 -0800, , add ksid_index_t ksid_t type add ksid_index_t enum ksid_t type use type used package depend spl,,
6385,d700637207b7e3870badcdb8389646a865835627,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-12 11:22:34 -0800, , minimal vfs addition patch simply remove place holder vfs_t type includes generic linux vfs header also make minor fid_t addition compatibility,,
6386,647fa73cf33930f36259d00fd86c52b8e8113c30,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 11:46:49 -0800, , remove vn_hold vn_rele vop_putpage previously defined noops rather give misleading impression actually implemented removing type entirely clarity,,
6387,bd6ac72b03701a3f37e6c8e706cec16192f873cd,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 12:00:35 -0800, , add additional vnode defines additional constant user dependant package,,
6388,a5b40eed179887d8486c1831008400ec316c81cf,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 11:57:02 -0800, , make vn_cache vn_file_cache kmem cache cache previously allowed either vmem kmem cache based size object involved since know object large performce much better kmem cache kmem backed,,
6389,dcd9cb5a17014b39a4440b26df1dbf78c0dde637,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 11:56:00 -0800, , clean vattr_t vsecattr_t type minor cleanup vattr_t vsecattr_t type,,
6390,1b439713f127db3ef5aad60aac63aad9b8384f6d,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 11:54:21 -0800, , frsync use o_sync solaris frsync map logically linux o_sync o_rsync linux noticed recently,,
6391,4295b530eeb68aaacbbeb5b2197ed14bf9295c2b,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-11 11:53:05 -0800, , add vn_vtype to_mode helper add simple helper convert vnode v_type inode i_mode used sparingly handy,,
6392,3f688a8c381d298062467a318994bb5849b1c8c1,eependra Khare <neependra@kqinfotech.com>, 2010-12-06 17:05:58 +0530, , add function cv_timedwait function definition must wait unconditionally cv_signal cv_broadcast waking cause process state increase load average load average summation process state run queue avoid desirable sleep interruptibly process count load average may woken signal caller determine process woken may one three reason cv_signal cv_broadcast timeout expired signal received signed brian behlendorf behlendorf1 llnl.gov,,
6393,6bf4d76f4782a13f3ed378d77a0bc17967c3642a,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-10 12:35:22 -0800, , linux compat inode i_mutex i_sem create spl_inode_lock compability macro simply access inode mutex sem avoids need ugly code required define every call site moment spl one place higher layer benefit macro,,
6394,95c73795b001267d6b683b71e8abe51de4b0c938,rian Behlendorf <behlendorf1@llnl.gov>, 2011-01-07 12:24:03 -0800, , fix zvol rename minor device rename need careful destroy create new minor zvol _only_ rename succeeded previous code would destroy minor device unconditionally would also fail create new minor device success,,
6395,149e873ab174ded1f632f2b2eb2267593517c7ca,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-16 14:05:42 -0800, , fix minor compiler warning compiler warning introduced code previously ifdef have_zpl added use posix layer following change obviously correct cause semantic change,,
6396,683fe41fc718fd43f57aa9ca76457fe34e62057c,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-10 12:54:30 -0800, , add missing mkdirp prototype mkdirp built part libspl however protoype never added libgen.h went unnoticed enabling mount support mkdirp,,
6397,5b63b3eb6f42f3d9f6a19b22c3f10f72927eeacc,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-10 12:00:00 -0800, , use arc issue cv_timedwait sleep uninterruptibly block signal avoid waking early linux count load average keeping artificially high change allows arc sleep interruptibly mean may woken early due signal normally mean extra care must taken handle potential signal arc usage cv_timedwait harm waking timeout expires extra handling required,,
6398,8d4e8140ef67fa9c8fa0b1d0f5b1d5d36c747969,icardo M. Correia <ricardo.correia@oracle.com>, 2010-12-14 09:50:37 -0800, , fix block device related issue zdb specifically fix two following error zdb pool composed block device value large defined data type running zdb dataset character device required running zdb block device signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6399,a7dc7e5d5a5c4a68266b3d9ce89c6c53c04b1741,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-07 16:05:25 -0800, , enable rrwlock.c compilation addition thread specific data interface spl safe enable compilation enterant read reader writer lock,,
6400,135cf6a8ae587855c8df803549c81dc60ccc12b5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-07 15:33:12 -0800, , refresh autogen.sh product refresh autogen.sh product based version installed default rhel6.0 release autoconf gnu autoconf 2.63 automake gnu automake 1.11.1 ltmain.sh gnu libtool 2.2.6b,,
6401,b7dc3138375ed4c73f55183371b48db4e6e25d79,rian Behlendorf <behlendorf1@llnl.gov>, 2010-12-03 15:49:57 -0800, , add thread specific data tsd regression test validate correct behavior tsd interface important add regression test test designed minimally exercise fundamental tsd behavior doe attempt validate potential corner case test first create key via tsd_create register common destructor next wait thread created set verify random value key block waiting released control thread meanwhile control thread verifies none destructors run prematurely next phase test create exit thread set verify random value key immediately exit designed verify tsd_exit called via thread_exit must result registered destructors run memory tsd free tsd_destroy verified destroying key must see expected number destructors run tsd memory free point blocked thread released exit calling tsd_exit little since tsd already destroyed without hitch test pass ensure memory leaked manually verified spl module unload memory reported leaked,,
6402,9fe45dc1ac5d0292a69cc91f951b984f21ae0aaa,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-30 09:51:46 -0800, , add thread specific data tsd implementation thread specific data implemented using hash table avoids need add member task structure allows maximum portability kernel implementation optimized keep tsd_set tsd_get time small possible majority entry hash table specific tsd entry entry hashed product key pid design key pid guaranteed unique product also desirable properly uniformly distributed hash bin providing neither pid key zero linux zero pid always init process thus used implementation careful never assign zero key default hash table sized 512 bin expected sufficient light moderate usage thread specific data hash table contains two additional type entry first type entry called key entry added hash tsd_create used store address destructor function used anchor point tsd entry use key linked entry used tsd_destory quickly call destructor function tsd associated key key entry may looked tsd_hash_search passing key wish lookup dtor_pid constant pid second type entry called pid entry added hash first time process set key pid entry also used anchor tsd process linked list using tsd_exit ensure registered destructors run process pid entry may looked tsd_hash_search passing pid_key constant key process pid note tsd_exit called thread_exit using solaris thread api need call tsd_exit directly,,
6403,8beea9ac2428bd3b4652e484f46726e0a261523a,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-30 10:36:58 -0800, , refresh autogen.sh product refresh autogen.sh product based version installed default rhel6.0 release autoconf gnu autoconf 2.63 automake gnu automake 1.11.1 ltmain.sh gnu libtool 2.2.6b,,
6404,c2f997b0b3b9a79b7146c8883aa09326e5def253,icardo M. Correia <ricardo.correia@oracle.com>, 2010-11-22 00:20:58 -0800, , make kmutex_t typesafe case config_smp defined kmutex_t typedef struct mutex generally downside make mistake mutex_lock kmutex_var pas unnoticed someone compiles code without config_smp case kmutex_t real struct note correct api call mutex_enter rather mutex_lock prevent kind mistake making kmutex_t real structure one field make kmutex_t typesafe impact generated assembly code signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6405,058de03caaefe63086559662f2abaed1edf0e086,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-23 10:56:55 -0800, , clear cv_mutex use debugging purpose condition varaibles keep track mutex used wait idea validate caller always use mutex unfortunately seen case caller reuses condition variable different mutex way known safe reading man page suggests always cv_destroy cv_init new mutex however overhead doe appear allowed solaris accomidate behavior cv_wait_common __cv_timedwait modified clear associated mutex last waiter dropped ensures condition variable use incorrect mutex case detected also allows condition variable safely recycled without requiring overhead cv_destroy cv_init long currently use finally spin lock cv_lock removed required condition variable used properly caller always holding mutex spin lock redundant lock originally added expected need protect cv_mutex turn case signed brian behlendorf behlendorf1 llnl.gov,,
6406,31165fd9aacefb0f606ced8265de34247e9f9bc5,ed Bass <bass6@llnl.gov>, 2010-11-23 11:19:57 -0800, , remove partition vdev name zfault.sh 0.5.2 tag name whole disk vdevs must specified command line tool without partition identifier commit fix zpool online command zfault.sh incorrectly includes partition vdev name causing test fail signed brian behlendorf behlendorf1 llnl.gov,,
6407,5e7affae52365f9f329cc63a53ae570352c4d993,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-12 09:33:17 -0800, , skip dev hpet zpool import libblkid doe contain zfs support zpool import scan block device dev determine one component zfs filesystem doe opening device stat ing determine one block device device turn block device skipped usually whole process pretty harmless although slow certain device dev must handled specific way system may crash example dev watchdog simply opened watchdog timer started system panic timer expires turn dev hpet cause similiar problem although accessed virtual machine reason accessing dev hpet cause qemu crash address issue commit add dev hpet device blacklist skipped solely based name,,
6408,e0f3df67e5174cd51284f0c26779046facfc95e0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-11 10:22:36 -0800, , add option zconfig.sh zfault.sh usage adding functionality originally option run specific test conversely skip specific test omitted usage page commit add missing documentation,,
6409,7dc3830c0f591ae8dfe349cf67c0c61cc8602dc8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-11 10:17:02 -0800, , remove spl zfs module part cleanup idea behind flag cleanup everything previous test run might cause test script fail also include removing previously loaded module make little easier run zconfig.sh however remember test script take zpools offline purpose test notion also extended default make check behavior,,
6410,cf47fad67d798f42e6d2edc8b0e9f9b43175703b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-11 10:00:39 -0800,78, unconditionally load core kernel module loading unloading zlib module part zfs.sh script proven little problematic reason first kernel may need load either zlib_inflate zlib_deflate functionality may built directly kernel depends entirely distribution decided right thing second even manage load correct module may able unload may consumer module reference preventing unload avoid issue test script updated attempt unconditionally load module listed kernel_modules module successfully loaded must needed module loaded almost certainly mean either built kernel already used another consumer case issue move spl zfs module finally removing kernel module module list ensure never unloaded zfs.sh avoids issue script failing another consumer using module aware word script restricts unloading module spl zfs module close,,
6411,e06be586410cdad14d2dce76af4f2d43eebe7c83,ed Bass <bass6@llnl.gov>, 2010-11-10 13:36:18 -0800,66, fix access beyond end device error commit fix sign extension bug affecting l2arc device extremely large offset may passed low level block device driver read generating error similar attempt access beyond end device sdbi1 want limit 125026959 unwanted sign extension occurrs function arc_read_nolock store offset daddr_t bit signed int type linux kernel offset passed zio_read_phys uint64_t argument causing sign extension value 0x80000000 greater avoid store offset uint64_t change also change daddr_t struct member uint64_t libspl header avoid similar bug cropping future also add assert check invalid offset close signed brian behlendorf behlendorf1 llnl.gov,,
6412,1f30b9d432dd48826cd562757d19c2771b0973e8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-10 16:44:20 -0800, , linux 2.6.36 compat use fop unlocked_ioctl linux 2.6.36 last tree consumer fop ioctl removed thus fop ioctl also removed replacement hook fop unlocked_ioctl existed kernel since 2.6.12. since zfs code contains support back 2.6.18 vintage kernel adding autoconf check simply moving everything use fop unlocked_ioctl,,
6413,8326eb4605a3d7c87cac15d5d11316fb99cd9ab0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-10 16:38:14 -0800, , linux 2.6.36 compat blk_ macro removed blk_ macro removed 2.6.36. ostensibly done improve readability allow easier grepping however portability stand point macro helpful therefore needed macro redefined missing kernel,,
6414,675de5aa379bfceb0258a20c4ccd1414e4798ee6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-10 15:49:40 -0800, , linux 2.6.36 compat synchronous bio flag name flag used mark bio synchronous changed 2.6.36 kernel due unification bio_rw_ req_ flag new flag called req_sync simplify checking flag introduced helper function based result several new autoconf test correct mask check synchronous bio preferred interface flagging synchronous bio 2.6.12 2.6.29 bio_rw_sync 2.6.30 2.6.35 bio_rw_syncio 2.6.36 2.6.xx req_sync,,
6415,f4af6bb783b0b7f2a6075cb1c74c225db8a157b2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-10 14:40:38 -0800, , linux 2.6.36 compat use linux 2.6.36 bio_rw_failfast req_failfast flag unified req_ name flag always kept sync nice step forward unfortunately mean need careful use new unified flag bio_rw_ flag defined additional autoconf check added ever unclear method use flag set safe may result longer delay disk failed perferred interface setting failfast bio 2.6.12 2.6.27 bio_rw_failfast 2.6.28 2.6.35 dev transport driver 2.6.36 2.6.xx req_failfast_ dev transport driver,,
6416,b04cffc9b03db08148f19bfbc92a53e5dc7b30d5,ed Bass <bass6@llnl.gov>, 2010-11-09 14:20:01 -0800, , remove inconsistent use eopnotsupp commit changed enotsup return value one location enotsupp fix user program seeing invalid ioctl error code however use enotsup widespread zfs module instead changing fixed enotsup definition spl consistent user space changed return value commit therefore longer needed commit revers maintain consistency signed brian behlendorf behlendorf1 llnl.gov,,
6417,00ba7ef9002a7dc7919260240f58fd8f31cea24f,ed Bass <bass6@llnl.gov>, 2010-11-09 14:06:13 -0800, , give enotsup valid user space error value zfs module return enotsup several error condition operation yet supported spl defined enotsup term enotsupp internal linux kernel error code seen user program result zfs utility print confusing error message unsupported operation attempted internal error unknown error 524 aborted change defines enotsup term eopnotsupp consistent user space signed brian behlendorf behlendorf1 llnl.gov,,
6418,8655ce492fff8ebcc432cd841411634510ca09ac,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-10 12:58:07 -0800, , linux 2.6.36 compat use fop unlocked_ioctl linux 2.6.36 last tree consumer fop ioctl removed thus fop ioctl also removed replacement hook fop unlocked_ioctl existed kernel since 2.6.12. since spl contains support back 2.6.18 vintage kernel adding autoconf check simply moving everything use fop unlocked_ioctl,,
6419,9b2048c26b2579f2de40a185dc56261dd98e7ea3,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-09 11:15:32 -0800, , linux 2.6.36 compat fs_struct lock type change linux 2.6.36 kernel fs_struct lock changed rwlock_t spinlock_t kernel would export set_fs_pwd symbol default would caused issue forced add new autoconf check set define spinlock_t used correctly use either spin_lock write_lock custom set_fs_pwd implementation,,
6420,a50cede3880ca0f7f7f10acc01bebd8617fc48ad,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-09 10:34:10 -0800, , linux 2.6.36 compat wrap rlim64_infinity linux 2.6.36 rlim64_infinity defined linux resource.h handled conditionally defining rlim64_infinity spl kernel doe provide,,
6421,1e18307b6109a5b2491cd519a312b870b2e7522b,rian Behlendorf <behlendo@myhost.(none)>, 2010-11-08 21:32:47 -0800, , fix incorrect krw_type_t type flagged default compile option archlinux 2010.05 using krw_t type krw_type_t type private data module splat splat rwlock.c function module splat splat rwlock.c 432 warning case value enumerated type krw_type_tâ,,
6422,8c3ab23f4be92a4e55f07f8c1bb467b851ed3e54,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-05 12:29:58 -0700, , add lustre zpios test workload lustre zpios test simulates reasonable lustre workload create 128 thread lustre 4096 individual object object 16mib size written read 1mib random thread fundamentally expect lustre behave large intensive workload,,
6423,a8179b513904f4e11eb1299f70869d15ee577139,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-05 11:51:24 -0700, , prep 0.5.2 tag update meta file prep 0.5.2 tag,,
6424,cb39a6c6aa91531a641232e7d0c6a4d63836b0cc,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-05 11:43:20 -0700, , replace custom zpool configs generic configs streamline testing past added several custom configs zpool config directory change reverts custom configs replaces three generic config thing generic config behavior set setting various environment variable calling either zpool create.sh zpios.sh script example wanted create test single disk raid configuration using disk dedicated zil l2arc device could run following zil log l2arc cache rank channel level zpool create.sh zpool raidz zpool status tank pool tank state online scan none requested config name state read write cksum tank online raidz2 online online online online online log online cache online error known data error,,
6425,3ee56c292bbcd7e6b26e3c2ad8f0e50eee236bcc,ed Bass <bass6@llnl.gov>, 2010-10-29 15:27:03 -0700, , make rollback fail gracefully support rolling back datasets require functional zpl currently zfs command doe check zpl support attempting rollback preparation rolling back zvol remove minor node device prevent zvol device node disappearing failed rollback operation change wrap zfs_do_rollback function ifdef have_zpl return enosys absence zpl consistent behavior zpl dependent command mount orginal error message observed bug rather confusing internal error unknown error 524 aborted return enotsup have_zpl linux actually error code instead return eopnotsupp enotsup defined user space would gotten somewhat helpful message rollback tank fish unsupported version rather moot point change since longer make ioctl call without zpl change update error code case signed brian behlendorf behlendorf1 llnl.gov,,
6426,7e55f4e00cefd7bf5ff7753759c42c5af19ba710,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-28 10:42:38 -0700, , increate zio write interrupt thread count increasing default zio_wr_int thread count improves write performence large system testing need done suspect ideal tuning zti_batch minimum thread,,
6427,451041db531dfec52c9e70fbd5d4179e30d61e2f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-28 10:36:50 -0700, , shorten zio_ thread name linux kernel thread name expected short change shortens zio thread name character leaving chracters append cpuid thread bound example z_wr_iss,,
6428,c11908c75d72d291ea451fb2c35f05dafc8c9647,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-05 11:52:46 -0700, , prep 0.5.2 tag update meta file prep 0.5.2 tag,,
6429,8294c69bb759d2a4dc2e73f164cb37c297722ada,rian Behlendorf <behlendorf1@llnl.gov>, 2010-11-03 15:56:53 -0700, , clear owner dropping mutex important clear owner calling mutex_unlock defined mutex owner verified mutex_unlock set null check fails lockdep support immediately disabled,,
6430,b1c58213751141f28793e723017d4064893d819a,ed Bass <bass6@llnl.gov>, 2010-10-29 12:13:52 -0700, , fix panic mounting unformatted zvol older kernel i.e 2.6.18 may get passed null file pointer user try mount zvol without filesystem change add check prevent null pointer dereference close signed brian behlendorf behlendorf1 llnl.gov,,
6431,23aa63cbf5e712493d9439f888e426f89bb97857,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-22 14:16:43 -0700, , fix 2.6.35 shrinker callback api change linux 2.6.35 shrinker callback api take additional argument shrinker struct passed callback user embed shrinker structure private data use container_of access remove need always use global state shrinker handle add autoconf check properly detect api simply setup callback function correct number argument make use new 3rd argument,,
6432,6ee71f5ce39885969f986f3092fed00f41667963,ed Bass <bass6@llnl.gov>, 2010-10-22 11:13:16 -0700, , call modprobe absolute path sudo configuration may include sbin path currently doe call modprobe absolute path may fail configuration called sudo change add absolute path modprobe longer rely path set signed brian behlendorf behlendorf1 llnl.gov,,
6433,d877ac6bfefaf09f0399888df1fc88bd4b4419d0,ed Bass <bass6@llnl.gov>, 2010-10-21 17:08:30 -0700, , fix intermittent zpool add failure creating whole disk vdevs intermittently fail udev managed symlink disk partition already place avoid remove symlink partitioning disk make truly wait new link show instead returning find old link still place otherwise window udev deletes recreates link access attempt fail enoent also clean comment waiting udev create symlinks longer need describe special case link name since handled separate helper function signed brian behlendorf behlendorf1 llnl.gov,,
6434,d4055aac3c4fdb6c1b5b1a7b73d20ff716e0a711,ed Bass <bass6@llnl.gov>, 2010-10-18 11:07:20 -0700, , add zconfig test adding removing vdevs test performs sanity check zpool add remove command test adding removing cache disk log disk zpool usage shorthand device path full path covered test scsi_debug device disk added removed done zpool see whole disk partition doe currently done loopback device want verify manipulation done whole disk path hide parition information doe break add remove interface signed brian behlendorf behlendorf1 llnl.gov,,
6435,4682b8c14efdeae26808195422a763b896fef037,ed Bass <bass6@llnl.gov>, 2010-10-18 11:26:04 -0700, , remove solaris specific code make_leaf_vdev portability solaris linux really issue anymore removing section like one help simplify code signed brian behlendorf behlendorf1 llnl.gov,,
6436,a2c6816c34952eb6dad51248d31172189fba9126,ed Bass <bass6@llnl.gov>, 2010-10-13 17:27:41 -0700, , support shorthand name zpool remove zpool status display abbreviated vdev name without leading path component case whole disk without partition information also zpool subcommands create add support using shorthand device name without qualified path prior change however removing device generally required specifying name stored vdev label zpool status might list cache disk name like a16 removing would require full path dev disk zpool a16 part1 non intuitive change add support shorthand device name remove subcommand one simply type example zpool remove tank a16 consequence change including partition information removing whole disk vdev result error arguably correct behavior departure zpool previously worked project change remove reference ctd_check_path function also removed avoid compiler warning signed brian behlendorf behlendorf1 llnl.gov,,
6437,79e7242a91c17f50c857b53d2a7313cf363ea535,ed Bass <bass6@llnl.gov>, 2010-10-13 16:16:25 -0700, , add helper function manipulating device name change add two helper function working vdev name path resolve shorthand vdev name absolute path file dev dev disk dev disk label dev disk path dev disk uuid dev disk zpool previously done function need general helper function implement shorthand name additional zpool subcommands like remove accordingly updated call helper function minor change way test file exists effectively used open stat64 test file existence since scope includes testing device whole disk collecting file status information hand access test existence leaf caller perform additional file operation seemed like general lightweight approach still preserve semantics appends partition suffix device path used generate name whole disk stored vdev label user visible name whole disk contain partition information name vdev label doe code lifted function make_disks call helper function helper function support general handling shorthand name user interface signed brian behlendorf behlendorf1 llnl.gov,,
6438,0ee8118bd31d1c160123d0aac9c55455706d5975,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-28 16:32:12 -0700, , add zfault zpool configuration test eleven new zpool configuration added allow testing various failure case first zpool configuration leverage faulty device type allow simuluate error block layer last zpool configuration leverage scsi_debug module provided modern kernel device allows create virtual scsi device backed ram disk setup verify full stack injecting fault lowest layer method fault injection important verifying stack zfs code also provides mechanism error injection via zinject command line tool also take advantage appraoch validate code doe address linux integration issue concerning moment trusting upstream solaris guy running zinject would caught internal zfs logic error currently test case layered top faulty device include writes test soft transient error hard permenant error writes error device matching read test soft transient error hard permenant error fixable read error write although last case zfs anything special seventh test case verifies zfs detects corrects checksum error case one drive extensively damaged ing large section ensure zfs log issue correctly rebuilds damage next test case use scsi_debug configuration injects error bottom scsi stack ensures find flaw scsi midlayer usage plus stress device specific retry timeout error handling outside zfs control eighth test case verify system correctly handle intermittent device timeout scsi_debug device drop request resulting retry either block level zfs code doe specify failfast option turn case linux stack still retry command failfast logic located doe seem apply simply timeout case appears targeted specific device transport error lower layer ninth test case handle persistent failure device removed system linux test verifies failure detected device made unavailable successfully add brought back online additionally ensures error event logged correct place data corruption occured due failure,,
6439,baa40d45cbb336765b2f89d934cd9ea690e4f7c9,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-04 16:21:04 -0700, , fix missing zpool event turn zpool event 1024 byte size silently dropped discovered writing zfault.sh test validate common failure mode could occur zfs interface passing arbitrary size nvlist_t ioctl provide buffer packed nvlist usually big enough case 1024 byte default kernel determines buffer small return enomem minimum required size nvlist_t working properly case zpool event event stream advanced dispite error thus retry bigger buffer would succeed would skip previous event fix pas size zfs_zevent_next determine removing event list fit preferable checking event returned avoids need rewind stream,,
6440,a69052be7f9a4008e2b09578e9db5fdebc186111,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-01 16:54:52 -0700, , initial zio delay timing right maximum timeout disk start laying ground work measure long take practice change simply measure time exceeds event posted zpool event value carefully selected device implies least one timeout sd_timeout occured unfortunately even failfast set may retry request get error behavior strongly dependant device driver hooked scsi error handling stack however setting limit log event even error returned slightly longer term start recording delay perhaps simple power two histrogram histogram reported part zpool status command given command line option none code change internal behavior zfs currently simply reporting excessively long delay,,
6441,2959d94a0a53612cc1ca9ce9d17df26c3d69a513,rian Behlendorf <behlendorf1@llnl.gov>, 2010-10-01 10:57:56 -0700, , add failfast support zfs work best notified soon possible device failure occurs allows immediately start recovery action may needed theory linux support flag set bio called failfast provides quick notification disabling retry logic lower scsi layer theory least practice turn flag exists oddly set bio_rw_ahead flag even set may get retries low level driver decides right behavior get right error code reported scsi midlayer unfortunately without additional kernel patch much done improve basically mean may take minute zfs notified properly device failed improved suspect submitting patch upstream handle,,
6442,c5343ba71b9fea6e3636be25a16173092f2042ba,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-28 16:30:54 -0700, , fix zpool event formatting awk make zpool event output simple parse awk extra newline embedded nvlists dropped allows entire event parsed single whitespace seperated record option added operate scripted mode zpool event command mean print header usage consistent scripted mode zpool command,,
6443,312c07edfdbdbabfab7f721797bba8eade5dcdeb,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-27 16:55:05 -0700, , generate zevents speculative soft error default solaris code doe log speculative soft error either zpool status post event linux want change expected behavior zpool status error still suppressed however since need know event linux fma zpool event interface new post event addition zio_flags field posted event contain enough information user space consumer identify discard event see fit,,
6444,d148e95156b98ac226013d24962d1afa4a51c712,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-27 15:30:14 -0700, , fix negative zio io_error must positive upper layer zfs expect zio io_error positive careful missed one instance could return negative error ensure case always caught additionally added assert check zio_interpret finally debugging aid zfs build enable debug error backing block device reported console error message like zfs zio error type offset 4217856 size 8192 flag 60440,,
6445,398f129ca36b211b19b98ca16aff1d7e91ee2949,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-27 15:04:24 -0700, , suppress large kmem_alloc warning observed failure mode testing allocates 73920 byte way limit wise kmem_alloc probably moved slab flagging km_nodebug quiet error revisited,,
6446,5c1bad0013204d70c5b60713af977bdaa5df1302,ed Bass <bass6@llnl.gov>, 2010-10-11 14:48:52 -0700, , fix undersized buffer string array char dirs small accomodate terminating nul character label change add needed additional byte signed brian behlendorf behlendorf1 llnl.gov,,
6447,4b1abce9f5c20e298ddaa3368b3fb6a529c71459,ed Bass <bass6@llnl.gov>, 2010-10-06 18:00:55 -0700, , make command load zfs module demand commit modifies libzfs_init attempt load zfs kernel module already loaded done simplify initialization letting user simply import zpools without first load module signed brian behlendorf behlendorf1 llnl.gov,,
6448,83c62c939938ca5915a61022208a31c4ab3faa1c,ed Bass <bass6@llnl.gov>, 2010-10-01 12:00:58 -0700, , strip partition device name whole disk solaris slice number chopped displaying device name vdev whole disk linux similarly discard partition number commit add logic perform name truncation device ending partx xpx string digit second case handle device like md0p0 third case limited scsi ide disk i.e beginning order avoid stripping number name like loop0 commit remove solaris specific code removing slice since longer reasonably expect change merged upstream partition stripping code moved helper function improve readability signed brian behlendorf behlendorf1 llnl.gov,,
6449,3a7381e531f55929f894fa2e81b79e1980de6f22,ed Bass <bass6@llnl.gov>, 2010-10-04 13:08:24 -0700, , use stored whole_disk property opening vdev commit fix bug vdev_disk_open whole_disk property getting set disk device even stored zpool created whole_disk property let detect partition suffix stripped device name cli output also used determine writeback cache set device existing zpool imported configuration read vdev label user space whole_disk property saved nvlist get passed kernel turn get saved vdev struct vdev_alloc therefore value available vdev_disk_open overridden checking provided device path since path likely point partition check return wrong result also add assert whole_disk property set aware case vdev_disk_open called config property set assert debugging enabled identify legitimate case missing never hit assert point remove along conditional whole_disk check signed brian behlendorf behlendorf1 llnl.gov,,
6450,0151834d65bb05f02a43c7f1b6128030aa3e76c4,icardo M. Correia <ricardo.correia@oracle.com>, 2010-10-04 10:19:17 -0700, , register space accounting callback even zpl callback needed properly accounting per uid per gid space usage even zpl still need callback order proper disk zpl compatibility able use lustre quota fortunately callback zpl vfs dependency move ifdef have_zpl signed brian behlendorf behlendorf1 llnl.gov,,
6451,858219cc4e44aea8373c56a94380f5be53026b38,ed Bass <bass6@llnl.gov>, 2010-09-22 18:53:59 -0700,57, fix missing vdev name zpool status output top level vdev name zpool status output follow type naming convention case raidz device type portion name missing commit fix bug zpool_vdev_name snprintf call void snprintf buf sizeof buf llu path u_longlong_t buf path may point location result buf end containing part occurred raidz device code appending parity level type string stored result buf set path point fix allocate new temporary buffer stack instead reusing buf signed brian behlendorf behlendorf1 llnl.gov close,,
6452,368f4c10aec9da58738750cf33de6d12e4fcb500,icardo M. Correia <ricardo.correia@oracle.com>, 2010-09-17 16:07:24 -0700, , export zfs symbol needed lustre required db_dnode_enter db_dnode_exit helper signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6453,1e411a4c12b95b1a18028585ae7fd5e51030b25e,icardo M. Correia <ricardo.correia@oracle.com>, 2010-09-17 16:08:56 -0700, , quiet frequent large allocation warning zfs machine dnode_hold_impl allocates 9992 byte debug mode cause large stream stack trace log instead use km_nodebug quiet known large alloc signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6454,12f30129745a3da85b6bbc31e24d3738ff007d9b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-17 16:22:08 -0700, , add missing makefile.in zpool_layout commit script zpool layout makefile.in file generated autogen.sh accidentally omitted previous commit add,,
6455,a68d91d770c0d4b8b72d9d07e65a79f3f99f03c6,icardo M. Correia <ricardo.correia@oracle.com>, 2010-09-17 16:03:15 -0700, , atomic_ _nv function need return new value atomically local variable must used return value avoid potential race spin lock dropped signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6456,a5b4d63582005300c4526c7c15b63294e5408534,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-15 15:32:27 -0700, , add map option zpool_layout default zpool_layout command would always use slot number assigned linux generating zdev.conf file reasonable default case make sense remap slot assigned linux using custom mapping commit add support zpool_layout provide custom slot mapping file file contains first column linux slot second column custom slot mapping passing map file map zpool_config mapping applied generating zdev.conf additionally two sample mapping added reflect different way map slot dragon drawer,,
6457,bbf3a3575c0b5795d3e4ddc27523258dc61ffa88,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-15 09:09:37 -0700, , fix markdown rendering two line rendered incorrectly github site fix issue need leading whitespace line ensure command rendered line configure make pkg,,
6458,d5fcc5f51c9c3f65db5d521c53b696c074b92247,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-15 09:05:34 -0700, , fix markdown rendering two line rendered incorrectly github site fix issue need leading whitespace line ensure command rendered line configure make pkg,,
6459,b1aa38137f7085cfce5d76c3d28b8dabdac1830e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-14 15:58:25 -0700, , reference new zfsonlinux.org website wiki content converted html made available new home http zfsonlinux.org wiki also disabled html page official documentation,,
6460,4bc4f6d854ed783dcd40d4dc95f3f862ba063774,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-14 15:54:15 -0700, , reference new zfsonlinux.org website wiki content converted html made available new home http zfsonlinux.org wiki also disabled html page official documentation,,
6461,2c4834f87af4beec4b16157622c85d2850cce25f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-10 21:44:17 -0700, , wait timeout second udev device occasional failure observed zconfig.sh udev could delayed second handle wait_udev function added wait timeout second expected device returning error default caller currently use second timeout much longer udev ever need long worry test suite hung,,
6462,ac063c48ae12061bbe0f66b3a9d641239782ae62,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-10 21:35:27 -0700, , reduce volume size zconfig.sh due occasional enospc failure certain platform reduced size zvol 400m 300m zvol ext2 clone test,,
6463,e32f7d6162296de70cab5a6b298bfe2618d657ef,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-10 12:33:31 -0700, , use top level object directory zfs module.spec commit updated _almost_ everything use correct top level object directory done correctly supporting building custom directory unfortunately missed one instance zfs module.spec.in rpm spec file fix,,
6464,d9400aede6ad32dde7021c739f0e8c7b570432af,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-10 11:43:12 -0700, , exclude atomic.s source dist rule zfs package support option config srpm used bootstrap configure allow make srpm target work advantage allowing creation source rpm without devel package installed source package feed back automated build farm installs required package listed srpm ensures proper dependency expressed source package get configure build failure trouble config srpm prevents architecture check running resulting target_asm_dir set default asm generic make dist rule fails asm generic atomic.s file generated build time handle added empty file asm generic atomic.s simply place holder make dist,,
6465,e37e1d3040edac06a0d4380f7eaaa7a69892c7c6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-10 09:36:39 -0700, , use linux __kernel__ define previously project contained zfs_context.h file one user space build one kernel space build responsibility source including file ensure right one included based order include path way done opensolaris purpose felt overly obscure user kernel zfs_context.h file combined single file define determines get user kernel context issue used _kernel macro defined part spl defined build include right zfs_context safer use __kernel__ macro automatically defined part kernel build process passed command line compiler option always defined building kernel never user space,,
6466,8ec8000f95d60daa51f670fd46930a2cec6accae,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-08 21:39:28 -0700, , fix format string literal warning ubuntu 10.04 default compiler flag include wformat wformat security cause warning particular case forgotten part format specifier http wiki.ubuntu.com compilerflags,,
6467,6283f55ea1b91e680386388c17d14b89e344fa8d,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-04 13:26:23 -0700, , support custom build directory move includes one neat trick autoconf style project capable allow configurion building directory source directory major advantage build project various different way making change single source tree example project designed work various different linux distribution work slightly differently mean change need verified supported distribution perferably change committed public git repo using nfs custom build directory make much easier single source tree nfs mounted several different system running supported distribution make change source base suspect may break thing concurrently build source system subdirectory wget http github.com downloads behlendorf zfs zfs x.y.z.tar.gz tar xzf zfs x.y.z.tar.gz zfs run concurrently ubuntu system fedora system debian system rhel6 system mkdir ubuntu mkdir fedora mkdir debian mkdir rhel6 ubuntu fedora debian rhel6 configure configure configure configure make make make make make check make check make check make check change also move many include header individual incude sys directory module directory single top level include directory advantage making build rule cleaner logically make bit sense,,
6468,a7958f7eef5ba55987810336d887437767941d26,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-02 12:12:39 -0700, , support custom build directory one neat trick autoconf style project capable allow configurion building directory source directory major advantage build project various different way making change single source tree example project designed work various different linux distribution work slightly differently mean change need verified supported distribution perferably change committed public git repo using nfs custom build directory make much easier single source tree nfs mounted several different system running supported distribution make change source base suspect may break thing concurrently build source system subdirectory wget http github.com downloads behlendorf spl spl x.y.z.tar.gz tar xzf spl x.y.z.tar.gz spl run concurrently ubuntu system fedora system debian system rhel6 system mkdir ubuntu mkdir fedora mkdir debian mkdir rhel6 ubuntu fedora debian rhel6 configure configure configure configure make make make make make check make check make check make check something project almost supported long time finishing support save lot time,,
6469,5e6121455c0b941f4612ceb2c1f312d527534b46,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-02 20:44:41 -0700, , fix spl version check spl_config.h file checked determine spl version however zfs code looking source directory build directory,,
6470,d8a1b739359b04f016e2b81844a29c4d0de60bd8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-02 13:15:20 -0700, , remove spl x.y.z.zip creation make dist create spl x.y.z.zip file part make dist simply create standard spl x.y.z.tar.gz file,,
6471,73fc084e9272e773efa4194bc5ead654f44c4846,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-02 15:39:08 -0700, , move vendor check spl build.m4 check previously done hack config.guess however since new config.guess copied place forcing full autoreconf change easily lost never good idea commit also update autoconf style support script config,,
6472,8160dd9a74b5b5eb3439d4aa0f0bc50e3400c123,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-02 13:18:17 -0700, , remove zfs x.y.z.zip creation make dist create zfs x.y.z.zip file part make dist simply create standard zfs x.y.z.tar.gz file,,
6473,7d06aee0965d66e6e5eb413c2b3ddfc049398ee0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 11:23:32 -0700, , prep zfs 0.5.1 tag,,
6474,f5e79474f07ec7a2035da2e139885a046ad70066,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 15:58:09 -0700, , fix case config_compat case fix compatibility function name caught chaos4.3 builder,,
6475,1ae93745d2eadcdfdf1ab677180f28922e7c7d26,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 12:54:51 -0700, , minor packaging fix git file removed tree stopped using topgit must also removed top level makefile.am zfs.spec.in file referenced fix type lib libzpool makefile.am preventing needed zrlock.h header included make dist simply name wrong makefile.am regenerated autogen.sh build product signed brian behlendorf behlendorf1 llnl.gov,,
6476,9691eb9fee92301869ae34f750279f93504f7db1,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 12:50:44 -0700, , remove script common.sh script dynamically generated configure time script common.sh.in change made commit accidentally kept common.sh file around signed brian behlendorf behlendorf1 llnl.gov,,
6477,34bc5537e574ac8fa7c7818e48529710e4fb83f6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 11:23:13 -0700, , add quick build instruction full update date build information stay wiki harm adding bare bone instruction readme change reasonable quick start signed brian behlendorf behlendorf1 llnl.gov,,
6478,6295556b716df883ca719d24838281ccbcce5c44,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 10:24:44 -0700, , prep spl 0.5.1 tag,,
6479,53be2266e198134014a859fa0bb6e90196c9df0c,rian Behlendorf <behlendorf1@llnl.gov>, 2010-09-01 10:23:05 -0700, , add quick build instruction full update date build information stay wiki harm adding bare bone instruction readme change reasonable quick start,,
6480,e70e591c51177d202396b1b0c5de04a7664d45cf,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 12:28:14 -0700, , add initial autoconf product add initial product autogen.sh product updated incrementally point development occurs signed brian behlendorf behlendorf1 llnl.gov,,
6481,0e8d1b2d8b5f8515aada6b43e68483bcd96db85e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:59:11 -0700, , add linux ztest support minor change ztest environment including updating ztest run local development tree well relocating local variable function heap signed brian behlendorf behlendorf1 llnl.gov,,
6482,302ef1517e5769cbe6a12d94c89f44a90721bfd4,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:58:00 -0700, , add linux zpios support linux kernel implementation pios test app signed brian behlendorf behlendorf1 llnl.gov,,
6483,9b020fd97a3dc449a94baec028b30b1fe3c2d5bc,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:57:29 -0700, , add linux user util support topic branch contains required change user space utility allow integrate cleanly linux signed brian behlendorf behlendorf1 llnl.gov,,
6484,d603ed6c278f9c25b17ba8e75e9bce6e5d715ac0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:56:53 -0700, , add linux user disk support topic branch contains change needed integrate user side zfs tool linux style device primarily includes fixing solaris libefi library linux friendly integrating libblkid library provided e2fsprogs signed brian behlendorf behlendorf1 llnl.gov,,
6485,f1fb119f6bb0c3185ec88912e4488fdd9ec08ab2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:55:32 -0700, , add linux unused code tracking track various large hunk dropped simply relevant port signed brian behlendorf behlendorf1 llnl.gov,,
6486,6b003d7cda153c58bb5faab62c5e5a7aab780715,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:55:19 -0700, , add linux topology support solaris recently introduced idea drive topology drive located doe matter already handled udev blkid integration linux hopeful case simply removed stubbed needed libspl commented rest signed brian behlendorf behlendorf1 llnl.gov,,
6487,054bc00b4c0c257f6baf6d7145b270c7283fe51e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:54:51 -0700, , add linux compatibility resolve minor linux compatibility issue signed brian behlendorf behlendorf1 llnl.gov,,
6488,7b89a549965e50f4f80e41b804bfbc3c09bbddca,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:52:20 -0700, , add linux spa thread support disable spa thread linux implemented signed brian behlendorf behlendorf1 llnl.gov,,
6489,9c905c550bb9cb095a5d9707bc7cf72d3f2562af,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:52:05 -0700, , add linux sha2 support upstream zfs code correctly moved faster native sha2 implementation unfortunately linux going little problematic revert code portable version contained earlier zfs release using native sha2 implementation linux possible api slightly different kernel version user space depending library used ideally need fast implementation sha256 build part zfs hard take effort signed brian behlendorf behlendorf1 llnl.gov,,
6490,a26baf285f71eb95f1eace8c79d12d647a694488,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:50:56 -0700, , add linux libspl support change needed libspl layer includes modification file directly copied opensolaris addition new file needed fill gap signed brian behlendorf behlendorf1 llnl.gov,,
6491,c28b227942b421ebdc03c9df9a012642fb517223,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:49:16 -0700, , add linux kernel module support setup linux kernel module support includes zfs context kernel user kernel module build system integration kernel module macro kernel module symbol export kernel module option signed brian behlendorf behlendorf1 llnl.gov,,
6492,00b46022c676e402e3f33ce93ee2983bbad2c46f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:46:09 -0700, , add linux kernel memory support required kmem vmem change signed brian behlendorf behlendorf1 llnl.gov,,
6493,60101509ee73c6e61e50c0a4079097f31bb39f4b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:45:02 -0700, , add linux kernel disk support native linux vdev disk interface signed brian behlendorf behlendorf1 llnl.gov,,
6494,325f023544bbec6a478882c442e15304ee379759,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:44:39 -0700, , add linux kernel device support branch contains majority change required cleanly intergrate linux style special device dev zfs mainly mean dropping solaris style callback replacing linux equivilants patch also add onexit infrastructure needed track minimal state ioctls linux would easy simply using file private_data solaris apparent need pas file descriptor part ioctl data perform lookup kernel keep code change minimum implemented solaris solution signed brian behlendorf behlendorf1 llnl.gov,,
6495,47d0ed1e6f8a8ee67492ec63173a27df8e4ca059,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:44:12 -0700, , add linux spl debug support use spl debug have_spl defined signed brian behlendorf behlendorf1 llnl.gov,,
6496,2eadf037f5ae2735bcbc61e3bb2974c6d3235b8e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:43:58 -0700, , add linux mntent support use mount entry have_setmntent defined signed brian behlendorf behlendorf1 llnl.gov,,
6497,d2c15e84e9c37f9c3d10dfffc9bd6be4600bf924,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:43:42 -0700, , add linux mlslabel support zfs update onnv_141 brought support security label attribute called mlslabel feature depends zone work correctly thus disabling linux equivilant functionality could added point future signed brian behlendorf behlendorf1 llnl.gov,,
6498,be160928b79888fc8b4ce8122435f3f633f01ead,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:43:07 -0700, , add linux idmap support use idmap service available signed brian behlendorf behlendorf1 llnl.gov,,
6499,266852767f42781821c1d62544c9b9e985828304,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:42:43 -0700, , add linux event topic branch leverage solaris style fma call point zfs create user space visible event notification system linux new system called zevent unifies previous solaris style ereports sysevent notification linux specific scheme sysevent ereport event occurs nvlist describing event created look almost exactly like solaris ereport event queued kernel occur conditionally logged console user space application consume event whatever like make possible existing dev zfs abi extended two new ioctls behave follows  get next pending event kernel keep track last event consumed file descriptor provide next one available new event available ioctl block waiting next event ioctl may also called non blocking mode setting zc.zc_guid zevent_nonblock non blocking case event available enoent returned possible eshutdown returned ioctl called module unloading progress finally enomem may occur provided nvlist buffer large enough contain entire event  clear event queued kernel kernel keep fairly large number recent event queued use ioctl clear kernel list effect user space process consuming event zpool command extended use event abi event subcommand may run zpool event output verbose log recent event similar solaris fmdump command key difference also includes would considered sysevents solaris may also run follow mode option clear kernel event queue use option sudo cmd zpool zpool event time class may 2010 15.777711000 class ena detector embedded nvlist version 0x0 scheme zfs pool end detector time 0x4bec8bc3 0x2e5aed98 pool zpios pool_guid pool_context 0x0 zpool event command handy interactive debugging expected primary consumer zevents abi primarily added facilitate addition user space monitoring daemon daemon would consume event posted kernel based type event perform action event simply forwarding syslog likely enough interface also cleanly allows sophisticated action taken generating email failed drive signed brian behlendorf behlendorf1 llnl.gov,,
6500,c9c0d073da561bcbefbdf09c87fc75b227415619,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:22:58 -0700, , add build system add autoconf style build infrastructure zfs tree includes autogen.sh configure.ac macro script makefiles core zfs component,,
6501,40b84e7aec6392187722e61e5a4a853b530bf60f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:13:05 -0700, , fix stack ztest ztest doe run user space run stack restriction would kernel space ensures stack related issue would hit kernel caught debugged user space instead patch first pas limit stack usage every ztest function 1024 byte subsequent update reduce signed brian behlendorf behlendorf1 llnl.gov,,
6502,6656bf56216f36805731298ee0f4de87ae6b6b3d,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 16:48:18 -0700, , fix stack due limited stack space recursive function frowned upon linux kernel however often elegant solution problem following code preserve recursive function move local variable function argument heap minimize stack frame size enough space initially allocated stack level recursion change doe ugly code reduces worst case usage roughly 4160 byte 960 byte x86_64 arch signed brian behlendorf behlendorf1 llnl.gov,,
6503,da6b4005c92ce02359aabae6549f1031ad1fe41c,ed Bass <bass6@llnl.gov>, 2010-08-26 11:38:38 -0700, , fix stack zio_execute implement zio_execute wrapper around static function __zio_execute force __zio_execute inlined reduces stack overhead important __zio_execute called recursively several zio code path zio_execute inlined externally visible signed brian behlendorf behlendorf1 llnl.gov,,
6504,c776b317e44a64d53217d34c3fa61d36fd5a32d5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:04:17 -0700, , fix stack zio_done eliminated local variable pointing member zio struct refer struct member directly saved byte per call function called recurisvely level deep potentially save 608 byte signed brian behlendorf behlendorf1 llnl.gov,,
6505,5ae4e2c2c660269d87dd5bbac6f590f69d0c7d8c,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:03:04 -0700, , fix stack vn_open put maxpathlen buffer stack instead locate heap even user space run ztest stack verify correctness signed brian behlendorf behlendorf1 llnl.gov,,
6506,5fed499defe68b57fab349ac945a84416fb024ba,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 11:00:46 -0700, , fix stack vdev_cache_read moving struct ve_search stack heap save 100 byte signed brian behlendorf behlendorf1 llnl.gov,,
6507,47050a88ac1445f3557030d0d7e61b8a397a5476,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:58:47 -0700, , fix stack traverse_impl stack use reduced 560 byte 128 byte signed brian behlendorf behlendorf1 llnl.gov,,
6508,60948de1ef976aabaa3630707bcc8b5867508507,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:58:36 -0700, , fix stack noinline certain function must never automatically inlined gcc stack heavy called recursively patch flag function found noinline prevent gcc making optimization signed brian behlendorf behlendorf1 llnl.gov,,
6509,18a89ba43d3e5e8a31d50838c93ec26d1cb27429,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:58:19 -0700, , fix stack lzjb reduce kernel stack usage lzjb_compress moving uint16 array stack heap exact performance implication measured absolutely need keep stack usage minimum becomes issue optimize signed brian behlendorf behlendorf1 llnl.gov,,
6510,bf701a83c5ec192be6d3afe87ebeee45ce9127f4,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:58:00 -0700, , fix stack inline decrease stack usage various call path forcing certain function inlined inlining function overhead new stack frame removed cost increased code size signed brian behlendorf behlendorf1 llnl.gov,,
6511,161ce7ce3cfc7ec1cd3c93d27f25a94b7408588f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:53:43 -0700, , fix stack reduce stack overhead topic branch move 128 byte blkptr_t data strucutre heap signed brian behlendorf behlendorf1 llnl.gov,,
6512,fcf37ec6c28f3d62773097c2fd0d5d56c4b2f2ff,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:53:31 -0700, , fix stack reduce stack usage 256 byte moving buf char array stack heap signed brian behlendorf behlendorf1 llnl.gov,,
6513,48c67dc8f8d822dbd2fec51d5e46cdb445f66814,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:53:19 -0700, , fix stack dsl_deleg_get reduce stack usage dsl_deleg_get gcc flagged consuming whopping 1040 byte potentially stack patch move large structure buffer stack heap includes zap_cursor_t structs byte size zap_attribute_t structs 280 byte size 256 byte char array total save stack 880 byte account new pointer added also source buffer length increased maxnamelen maxnamelen strlen mos_dir_name described comment dsl_dir_name buffer overrun may possible slightly smaller buffer signed brian behlendorf behlendorf1 llnl.gov,,
6514,81a4966389518651823deec8719fbf98df002102,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:52:40 -0700, , fix stack move dsl_dataset_t local variable stack heap reduces stack usage function 2048 byte 176 byte x84_64 arch signed brian behlendorf behlendorf1 llnl.gov,,
6515,a8ac8e715e50e56b5e907007ef70f39301a4d984,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:52:23 -0700, , fix stack reduce stack usage 276 byte moving snaparg struct stack heap limited stack space must waste signed brian behlendorf behlendorf1 llnl.gov,,
6516,fc5bb51f08a6c91ff9ad3559d0266eeeab0b1f61,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:52:00 -0700, , fix stack dbuf_hold_impl commit preserve recursive function dbuf_hold_impl move local variable function argument heap minimize stack frame size enough space initially allocated stack level recursion technique based commit reduced stack usage  signed brian behlendorf behlendorf1 llnl.gov,,
6517,5ac1241a9527df92f6631459127d8b2a985a8f29,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 10:55:07 -0700, , fix dnode_move scope dnode_move functionality used kernel build careful wrap related code ifdef _kernel avoid gcc warning unused code,,
6518,1e33ac1e2677c898a0b5ef6207048c692cb51bf4,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:43:27 -0700, , fix solaris thread dependency using pthreads portability change remove dependence solaris thread library location solaris thread api used replaced equivilant solaris kernel style thread call user space kernel style threading api implemented term portable pthreads library includes thread mutexs condition variable reader writer lock taskqs signed brian behlendorf behlendorf1 llnl.gov,,
6519,8a8f5c6b3ca44248b47a4a65515d7828803c71ff,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:34:33 -0700, , fix interestingly look like upstream bug well reason unable get zvols statistic perhaps zpool hopelessly corrupt would trigger verify commit add proper error handling propagate error back user space user space tool still must handle properly worst case tool crash perhaps missing output far far better crashing host signed brian behlendorf behlendorf1 llnl.gov,,
6520,5cc556b447380bf5fed181d3aa5f138618cd69c8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:32:23 -0700, , fix use tq_nosleep function may called interrupt time critical never sleep additionally wrap taskq_dispatch loop may fail non optimal signed brian behlendorf behlendorf1 llnl.gov,,
6521,2a442d1629e5405efe82b832d06f69e8d1360cc7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:31:53 -0700, , fix strncat usage look like typo intention use strlcat however strncat used instead accidentally may lead buffer overflow caught gcc signed brian behlendorf behlendorf1 llnl.gov,,
6522,ef5319df8e1272f6d89e3b79e248c34f286ae049,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:30:13 -0700, , fix rw_init usage properly initialize rwlock primitive signed brian behlendorf behlendorf1 llnl.gov,,
6523,eaa8687be33318ae07d61a91e0069244b326f450,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:29:11 -0700, , fix zmod.h usage userspace use zmod.h userspace also filed zfs team make userspace libzpool code use zlib api instead solaris non standard zmod.h zlib api almost identical facto standard brainer signed brian behlendorf behlendorf1 llnl.gov,,
6524,3f504482929e4c4e098ec00b335ddc45509be716,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:28:31 -0700, , fix missing newlines add missing dprintf signed brian behlendorf behlendorf1 llnl.gov,,
6525,22c81dd8a9ec5177a65808c1d782599402b40233,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:27:53 -0700, , fix metaslab going allow one allocator used defined compile time point including others build patch could refined linux make metaslab configurable run time might bit tricky however since would need quiese short making configurable module load option would reasonable compromise signed brian behlendorf behlendorf1 llnl.gov,,
6526,98f72a539c8ca2ba1ca7fc8cac44018ade96065c,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:26:44 -0700, , fix list handling use api remove instance list handling api used instead list data member directly accessed sort thing bad portability additionally ensure list_link_init called newly created list node ensures node properly initialized doe rely assumption zero ing list_node_t via kmem_zalloc proper initialization signed brian behlendorf behlendorf1 llnl.gov,,
6527,59e6e7ca85e984433fc9c929dd0d474579bb88a5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:26:05 -0700, , fix kstat xuio move xiou stat structure header dmu.c source done kstat interface information local dmu.c registered xuio kstat stay way signed brian behlendorf behlendorf1 llnl.gov,,
6528,754c6663a36b9801b391a9659319416ecd79d9d2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:24:44 -0700, , fix dbuf eviction assertion replace non fatal assertion warning observed testing fatal signed brian behlendorf behlendorf1 llnl.gov,,
6529,4d58b69de8a6e2dc77b73e113d2c7847d389f456,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-08-26 10:21:44 -0700, , fix vn_open vn_rdwr error handling vn_open fstat64 returned error real errno obscured calling close add error handling pwrite64 call vn_rdwr signed ricardo correia sun.com signed brian behlendorf behlendorf1 llnl.gov,,
6530,235db0aceaa01638d3cd7d041ac968c3faa3a691,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:19:48 -0700, , fix deadcode remove deadcode possible code use somewhere source code laid currently  signed brian behlendorf behlendorf1 llnl.gov,,
6531,753972fccf7d3d5c9406edbd5281950681e0f606,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:19:04 -0700, , fix leak fix two leak signed brian behlendorf behlendorf1 llnl.gov,,
6532,5631c038895ea97fde261831887226ee56d06dd5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:18:06 -0700, , fix variable named current linux kernel current defined mean current process never used local variable function simply replace usage current curr function signed brian behlendorf behlendorf1 llnl.gov,,
6533,090ff0929ec7a2e2e65efaaddb9981d15964f7d9,icardo M. Correia <ricardo.correia@oracle.com>, 2010-08-26 10:17:18 -0700, , fix commit callback upstream commit code bug argument list_move_tail call reversed mistake caused commit callback called ztest bug error initialized correctly seems caused test always take simulated error code path made ztest unable detect whether commit cbs called transaction successfuly complete ztest another bug commit threshold compared correctly commit taskq using max_ncpus maxalloc argument taskq_create could caused unnecessary delay txg sync thread signed brian behlendorf behlendorf1 llnl.gov,,
6534,a6098088eb706f643a726f71f22ea7126fcd822e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 10:10:35 -0700, , fix minor acl issue minor fix newly introduced acl support signed brian behlendorf behlendorf1 llnl.gov,,
6535,d4ed667343c3dac114642b9f6cb4f7baa3ff7334,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:58:04 -0700, , fix gcc uninitialized variable warning gcc wall warn uninitialized variable signed brian behlendorf behlendorf1 llnl.gov,,
6536,1fde1e37208c2f56c72c70a06676676f04b65998,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:53:00 -0700, , fix gcc unused variable warning gcc wall warn unused variable signed brian behlendorf behlendorf1 llnl.gov,,
6537,c65aa5b2b9c48375ea1c451f252f0056e16f4e49,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:42 -0700, , fix gcc missing parenthesis warning gcc wall warn missing parenthesis signed brian behlendorf behlendorf1 llnl.gov,,
6538,e75c13c353571efaa9b4e047f16969ec13a518f5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:41 -0700, , fix gcc missing case warning gcc assert missing case impossible signed brian behlendorf behlendorf1 llnl.gov,,
6539,2598c0012dc33496539ce893a0af601c66cbb7e2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:41 -0700, , fix gcc missing brace warning resolve compiler warning concerning missing brace signed brian behlendorf behlendorf1 llnl.gov,,
6540,0bc8fd7884fc603eb7646c43b1fc0b18e37e7d62,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:41 -0700, , fix gcc invalid prototype warning gcc wall warn invalid prototype signed brian behlendorf behlendorf1 llnl.gov,,
6541,0ccd9d24e4fdbe9cd07f838d0a62083e8eca95f2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:40 -0700, , fix gcc init pragma warning use constructor attribute non solaris platform pragma init fini __attribute__ constructor destructor conversion upstream signed brian behlendorf behlendorf1 llnl.gov,,
6542,e5dc681a50a41d42c18b52abc8d5a3c2a357bdaa,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-08-26 09:52:40 -0700, , fix gcc ident pragma warning remove ident pragmas unknown gcc signed brian behlendorf behlendorf1 llnl.gov,,
6543,0e5b68e0159e071dae2cac01c2b6783b8e926133,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:40 -0700, , fix gcc fortify source warning resolve issue uncovered default redhat macro file add option cflags cause warning following type designed keep developer honest warning ignoring return value foo declared attribute short term fix wrap call verify check return code code already assusing would never fail signed brian behlendorf behlendorf1 llnl.gov,,
6544,f709a82dc11fe9bad4953e9cfb0a78f71c859ff0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:40 -0700, , fix gcc useless debug warning gcc useless debugging signed brian behlendorf behlendorf1 llnl.gov,,
6545,b8864a233c569edcc57c686f3ea8cd1ae3b89153,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:39 -0700, , fix gcc cast warning gcc wall warn lack cast gcc wall warn comparison pointer integer signed brian behlendorf behlendorf1 llnl.gov,,
6546,d6320ddb78fa89c4d0fc2af00ae53c7c70992f96,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 09:52:39 -0700, , fix gcc c90 compliance warning fix non c90 compliant code part change simply deal particular variable declared c90 must alway done start block signed brian behlendorf behlendorf1 llnl.gov,,
6547,8371f981f172426271635adf0e37b2b4aeccbe0e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 13:51:25 -0700, , add function function swap new item place old item list caller responsibility ensure list involved locked properly,,
6548,d85e28ad69d87e63894308c34739da59420a582d,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 13:36:24 -0700, , add mutex_not_held function simply implement missing mutex_not_held function using mutex_held construct,,
6549,2b3543025cb2e61c55b4ba79a524d10fe951e3be,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 13:28:10 -0700, , stub kmem cache defrag api point going need implement kmem cache move callback allow kmem cache defragmentation commit simply lay small part api ground work doe actually implement feature safe move callback optimization even registered ever really call,,
6550,8dbd3fbd5e7b66eb68447a9cef44d7c4542a8867,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-27 12:36:31 -0700, , add missing atomic function function previous needed added add full set    ,,
6551,c5b3a7bbcc321846bb15ff73c6fd6f1c483b6aa6,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-08-26 09:52:39 -0700, , fix gcc bit constant warning add ull suffix bit constant signed brian behlendorf behlendorf1 llnl.gov,,
6552,572e285762521df27fe5b026f409ba1a21abb7ac,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 14:24:34 -0700, , update onnv_147 last official opensolaris tag public development tree closed,,
6553,1980602bfae0605d3231e79627b3e25c07991b0e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-26 13:45:31 -0700, , remove git note note describe use topgit repo point topgit longer used note removed signed brian behlendorf behlendorf1 llnl.gov,,
6554,1db69544ccbbb923a419757bc8b3d1a1e8c2ef0f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-08-13 09:33:50 -0700, , prep spl 0.5.0 tag,,
6555,4be55565fe550febc92af2e26db7d5125f58d3b5,i Wei <W.Li@Sun.COM>, 2010-08-12 09:24:31 -0700, , fix stack overflow vn_rdwr due memory reclaim unless __gfp_io __gfp_fs removed file mapping gfp mask may enter memory reclaim case shrink_slab entered another file system notoriously hungry stack additional stack usage may cause stack overflow patch remove __gfp_io __gfp_fs mapping gfp mask file vn_open avoid reclaim vn_rdwr path original mask restored vn_close time hat loop driver doe something similiar reason ... shrink_slab 0xdc 0x153 0x1da 0x2d7 __alloc_pages 0x1d7 0x2da 0x2c9 0x36f file_read_actor 0x0 0x145 0x14f 0x19b 0x34 0x39 do_sync_read 0xc7 0x104 vfs_read 0xcb 0x171 spl vn_rdwr 0x2b8 0x402 zfs 0xad 0xe1 ... signed brian behlendorf behlendorf1 llnl.gov,,
6556,46aa7b3939bbbac86d2a4cfc556b33398ec12d08,ed Bass <bass6@llnl.gov>, 2010-08-10 11:01:46 -0700, , correctly handle rwsem_is_locked behavior race condition rwsem_is_locked fixed linux 2.6.33 fix backported rhel5 kernel 2.6.18 190.el5 detail found http show_bug.cgi 526092 race condition fixed kernel acquiring semaphore wait_lock inside rwsem_is_locked spl worked around race condition acquiring wait_lock calling function fix place must commit implement autoconf test detect whether fixed version rwsem_is_locked present previous version rwsem_is_locked inline static function new version exported symbol check module.symvers depending result correctly implement needed compatibility macro proper spinlock handling finally right thing spin lock rw_ _held using new compatibility macro acquire semaphore wait_lock calling rwsem_is_locked doe try acquire lock new overhead small harmless race introduced change rw_read_held rw_write_held acquire release wait_lock twice call rwsem_is_locked call rw_owner avoided calling rwsem_is_locked take wait_lock recent kernel case occurs legacy kernel could optimized taking lock done prior commit however decided performance gain probably significant enough justify messy special case required function used enable afore mentioned optimization since longer used removed signed brian behlendorf behlendorf1 llnl.gov,,
6557,5ec44a37c3857b178a958352d63c5367133526e1,ed Bass <bass6@llnl.gov>, 2010-08-06 14:04:00 -0700, , correctly detect support rhel5 2.6.18 194.7.1.el5 kernel added asm x86_64 atomic.h macro defined term cmpxchg provided asm system.h however asm system.h included atomic.h kernel autoconf test test failed implicit declaration function cmpxchg lead build system erroneously conclude kernel doe define enable built definition turn produce redefined build warning fatal building enable debug commit fix including asm system.h autoconf test signed brian behlendorf behlendorf1 llnl.gov,,
6558,26f7245c7cfa77f25aedf1a500db689343644ead,icardo M. Correia <ricardo.correia@oracle.com>, 2010-08-02 09:24:01 +0000, , fix taskq code drop task tq_sleep used tq_sleep used taskq_dispatch always succeed even number pending task tq_maxalloc semantic similar km_sleep kmem allocation also always succeed however block forever otherwise risk deadlock therefore still allow number pending task tq_maxalloc tq_sleep may sleep second per task dispatch thereby throttling task dispatch rate one existing splat test also augmented test scenario test would fail previous implementation succeeds signed brian behlendorf behlendorf1 llnl.gov,,
6559,41f84a8d56c00f3c95a4bf0b6027bedd7abb5b15,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-30 22:20:58 -0700, , strfree call kfree kmem_free using kmem_free result deducting byte memory accounting enable debug set unfortunately currently counterpart kmem_asprintf friend properly account memory allocated must free end negative number lost byte reported module unloaded better long term fix would add accounting allocation side project another day,,
6560,099dc9c2d275b4475f130f3d03bab88516101b36,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-28 13:59:18 -0700, , add uninstall makefile target extend makefiles uninstall target cleanly remove package installed make install additionally ensure depmod run part install update module dependency information,,
6561,287b2fb117f1ce964dc79c1f694e7d473a6b9db0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-27 10:19:44 -0700, , add debian slackware style packaging via alien long term fix debian slackware style packaging add native support building package unfortunately large chunk work time right said would nice least basic package distribution quick short medium term solution settled using alien convert rpm package deb tgz style package build system updated following build target first build rpm package convert needed target package type make rpm create .rpm package make deb create .deb package make tgz create .tgz package make pkg create right package type distribution solution come lot caveat mileage may vary basically big limitation resulting package correct dependency information include kernel version release handle difference distribution resulting package easy install remove system take care running depmod said top right long term solution upstream distribution maintainer want jump help right distribution love help,,
6562,10129680f860168a61932f0011d9ab864286bfcd,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-26 15:47:55 -0700, , ensure kmem_alloc vmem_alloc never fail solaris semantics kmem_alloc vmem_alloc must never fail called km_sleep may fail called km_nosleep otherwise must block memory available quite different linux memory allocator work linux memory allocation failure always possible must dealt one point past kmem code properly implement behavior however code evolved behavior overlooked place patch three implementation kmem vmem allocation function ensures block km_sleep case memory available may still fail km_nosleep case case caller responsible handling failure special care taken vmalloc_nofail avoid thrashing system virtual address space spin lock side course see failure unlikely bit system allocation delay entire second still preferable locking system best given constraint additionally code cleaned much readable comment added describe various kmem debug configure option default configure option remain enable debug kmem disable debug kmem tracking,,
6563,849c50e7f2487dd3f1dce1417e51dff3a12338d6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-26 10:24:26 -0700, , fix two minor compiler warning cmd splat.c comparison __u32 int resolve issue simply use __u32 strtoul converting provided user string module spl spl vnode.c explicitly cast last.name const char expected prototype,,
6564,8b0eb3f0dcf293467ddfd4b0f0d7e757f2369452,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-21 16:31:42 -0700, , remove deadcode caused removal format1 arg commit removed never used format1 argument spl_debug_msg turn resulted deadcode removed since useless,,
6565,15b52c083ee886d9cb102655b4313ae7c027784a,icardo M. Correia <ricardo.correia@oracle.com>, 2010-07-20 15:44:28 -0700, , fix max_ncpus definition defined constant first changed nr_cpus instead however nr_cpus large value recent kernel 4096 may cause large kmem allocation happen therefore use return typically small value represents maximum number cpu brought online running hardware value determined boot time arch specific kernel code signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6566,81672c012249f1ba81a27a1ff8f9b19b4a8048a8,icardo M. Correia <ricardo.correia@oracle.com>, 2010-07-20 15:25:45 -0700, , display debug keyword module load enable debug used signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6567,2c762de8303e441154a0c38c0cf78170b5d45013,icardo M. Correia <ricardo.correia@oracle.com>, 2010-07-20 13:51:42 -0700, , fix buggy kmem_ asprintf function kvasprintf call fails reset argument calling va_start va_copy va_end inside loop otherwise try read argument rather starting reading beginning signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6568,9dd5d138b2326201f4258b126f2bfdb0b4c6138d,icardo M. Correia <ricardo.correia@oracle.com>, 2010-07-20 13:48:51 -0700, , fix bcopy allow memory area overlap solaris bcopy allows overlapping memory area must use memmove instead memcpy signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6569,22cd0f19b170394ac98ca3984e8f5b119fa32c7e,icardo M. Correia <ricardo.correia@oracle.com>, 2010-07-20 13:47:37 -0700, , fix compilation error due undefined access_once macro turned rhel5 kernel config mutexes store owner debugging purpose therefore spl enable however spl code access_once access owner macro defined rhel5 kernel therefore define include linux signed ricardo correia ricardo.correia oracle.com signed brian behlendorf behlendorf1 llnl.gov,,
6570,b17edc10a9c66543bef54b08e4655832aefe8939,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-20 11:55:37 -0700, , prefix spl debug macro avoid conflict symbol defined dependent package debugging symbol prefixed spl dependent package needing integrate spl debug include spl debug.h header use prefixed macro must also build debug defined,,
6571,55abb0929e4fbe326a9737650a167a1a988ad86b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-19 14:16:05 -0700, , split sys debug.h header avoid symbol conflict dependent package debug header must split several part sys debug.h header contains solaris macro assert verify spl debug.h header contain spl specific debugging infrastructure included package need use spl logging finally spl trace.h header contains internal data structure used log facility included anythign spl debug.c way dependent package include standard solaris header without picking spl debug macro however dependant package want integrate spl debugging subsystem explicitly include spl debug.h along change dropped check_stack macro upstream linux kernel much better stack depth checking built need complexity additionally sbug replaced panic provided part solaris macro set solaris version really panic conflict linux kernel make due panic rarely called directly prefered usage would assert verify lot change cleanup overdue,,
6572,8f813bb168eb21cd5d64b930ee015dcf93575331,ed Bass <bass6@llnl.gov>, 2010-07-15 09:49:38 -0700, , proposed fix oops sigint splat atomic bit test thread splat atomic bit test share data structure atomic_priv_t life kernel stack splat user space utility splat terminates thread access memory location thread become invalid splat synchronizes thread call ap.ap_waitq apparently sigint wake terminates splat prematurely gpfs bad thing happen thread subsequently access commit prevents using uninterruptible form wait_event ap.ap_waitq,,
6573,d0bd694ca93b7e43dc6aa87a2dd39d51ee3478ea,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-14 11:53:57 -0700, , fix werror format security compiler option noticed ubuntu kernel build passing format specifier string string,,
6574,f0ff89fc86873a96a3f60e86e1694775b664663e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-14 11:26:54 -0700, , linux 2.6.35 compat filp_fsync dropped stuct dentry prototype filp_fsync drop unused argument stuct dentry fixed adding needed autoconf check moving filp related function file_compat.h simplify handling api change future,,
6575,82b8c8fa64737edfb203156b245b48840139d2c1,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-13 21:30:56 -0700, , proposed fix low memory zfs deadlock deadlock zvol observed one zfs thread performing try allocate memory system low memory low memory condition cause dirty page synced zvol progress original thread blocked waiting memory allocation thus end deadlocking proper solution proposed wizeman change km_sleep gfp_kernel top gfp_nofs prevent memory allocation trying allocate memory forcing sync zvol pageout side using pretty big hammer changing km_sleep change mean zfs memory allocation trigger dirty data synced caller still able reclaim memory various slab cache totally dependent kernel process happen running small number asynchronous reclaim thread trigger reclaim dirty data page think may see slightly longer allocation time memory pressure shall see,,
6576,a4bfd8ea1b58d8797ec91b18982de243675e63bc,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-12 12:38:34 -0700, , add __divdi3 remove __udivdi3 kernel dependency spl consumer attempted perform signed bit division need support changed adding bit division support bit platform signed implementation based unsigned version since several bug report past concerning correct bit division bit platform added long due regression test much surprise unsigned bit division regression test failed surprising __udivdi3 implemented simply calling div64_u64 provided kernel meant linux kernel bit division algorithm bit platform flawed investigation turned exactly case forced abandon kernel helper instead fully implement bit division spl several published implementation properly settled one proposed book hacker delight proposed algoritm freely available without restriction modified linux kernel friendly update implementation passed unsigned signed regression test functional fast good enough purpose want fast strongly suggest upgrade bit platform also reported kernel bug see get fixed stream,,
6577,d466208f1e76c80fe14751739273b1932c4329f3,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-02 14:41:54 -0700, , update config.guess recognize additional distros following distros added redhat fedora debian ubuntu sle slackware gentoo,,
6578,dbe561d8ab3c4787e8d7f1233e6013d9c79bfbcd,ars Johannsen <laj@it.dk>, 2010-07-01 10:38:32 +0159, , allow config build work autoconf 2.65 autoconf 2.65 ac_lang_source source macro longer includes confdef.h result expanded handle simply explicitly include confdef.h conftest.c cause two copy confdef.h added test earlier autoconf version harmful signed brian behlendorf behlendorf1 llnl.gov,,
6579,1814251453c8140f50170ad29d9105c1273d7e08,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-01 16:20:11 -0700, , require gawk usermode helper fails awk reason awk invoked usermode helper command always fails interestingly gawk doe suffer problem never observed failure since distro tested gawk installed instead awk anyway simplest thing make gawk mandatory added configure check gawk specifically updated command call gawk awk,,
6580,7119bf704490bcb9abca9fa80214313024d381a2,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-01 13:37:43 -0700, , add configure check user_path_dir notice time user_path_dir introduced time set_fs_pwd change lumped two together fact user_path_dir introduced 2.6.27 set_fs_pwd taking args introduced 2.6.25. mean build 2.6.25 2.6.26 kernel broken fix added check user_path_dir longer assume set_fs_pwd take args user_path_dir also available,,
6581,e2d28a3743807c8708727cf51b94e4e8407bea65,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-01 13:27:30 -0700, , use target_cpu instead arch using arch reason first might installed system secondly may trying cross compile,,
6582,8fd4e3af2e7e4d7c45288f9dad1290b7532d7dc9,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-01 13:25:34 -0700, , check sourcelink set passing readlink source found expected path treat fatal provide user hint ,,
6583,55f10ae5e91817e339f89e312a747ef6bc2dde66,ed Bass <bass6@llnl.gov>, 2010-06-30 17:34:57 -0700,5, implementation regression test tq_front use thread task dispatch final task tq_front first three task keep worker thread busy stuff queue use msleep force known execution order assuming tq_front properly honored verify expected completion order occurs function may useful one test commit generalizes renaming function adding name argument instead assuming test name documentation splat taskq regression test swap two required completion order diagram commit corrects error signed brian behlendorf behlendorf1 llnl.gov,,
6584,1a73940d39f07332921a7f78eaca9bd9266c5c7a,ed Bass <bass6@llnl.gov>, 2010-07-01 10:12:57 -0700, , initialize dev splatctl device buffer open initialize buffer spl version string user space splat utility expects find spl version string open read dev splatctl signed brian behlendorf behlendorf1 llnl.gov,,
6585,f0d8bb26b492dca0da1faff50b097b1665143bf4,ed Bass <bass6@llnl.gov>, 2010-07-01 10:07:51 -0700, , implementation tq_front flag add task queue receive task dispatched tq_front worker thread pull task high priority queue default pending queue executing task fifo order potentially break taskq_lowest_id preserve ordering work list taskqid therefore instead always appending work list search appropriate place insert task common case append list make operation efficient searching work list reverse order signed brian behlendorf behlendorf1 llnl.gov,,
6586,c2688979a4ee3b9c0b1d00e94ce2a37ba71b6af6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-07-01 09:40:29 -0700, , remove ac_define debug ndebug whoop momentarilly forgot explicitly set option dependent package need include spl_config.h would end defined result accidentally hanging debug enabled best build failure worst,,
6587,c950d1480dc2bf72b4ea69f32976be016c66135f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-30 17:05:36 -0700, , make compiler warning fatal enable debug theory like idea compiler warning always fatal practice cause problem small harmless error cause build failure end user handle updated build system werror used enable debug passed configure always build developing catch build warning end user get stuck minor issue,,
6588,6801b7154ccd8df47564d0f888166f3da931f3ff,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-30 10:47:36 -0700, , linux 2.6.33 compat o_dsync flag added prior linux 2.6.33 o_dsync semantics implemented used o_sync flag linux 2.6.33 behavior properly split o_sync o_dsync respectively,,
6589,79a3bf130b78cae41be339917788dde0b45c7d84,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-30 10:36:20 -0700, , linux 2.6.33 compat .ctl_name removed struct ctl_table linux 2.6.33 ctl_name member ctl_table struct entirely removed upstream code updated depend entirely procname member handle reference ctl_name wrapped ctl_name macro simply expands nothing newer kernel older kernel supported expand .ctl_name,,
6590,fd921c2e0c36c0c658031bc8bf4a3f912a3349f7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-30 09:47:57 -0700, , linux 2.6.33 compat check generated utsrelease.h uts_release seems upstream community moved definition uts_release yet linux 2.6.33. update build system check three possible location kernel version may defined kernelbuild include linux version.h kernelbuild include linux utsrelease.h kernelbuild include generated utsrelease.h,,
6591,b3c82b1b18b5935fdc2f69d6e2c85331589eeac5,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-29 14:35:21 -0700, , add basic readme simple readme short summary project link directing people online documentation,,
6592,1e48754059046c01ac8e35c8686e2d1940d984f9,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-29 14:13:07 -0700, , add basic readme simple readme short summary project link directing people online documentation,,
6593,ede0bdffb6d36915ad610b0bdf7d790f858f448c,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-28 12:48:20 -0700, , treat mutex owner volatile defined directly accessing mutex owner treat volative access_once helper without may get stale cached value accessing different cpu result incorrect behavior mutex_owned mutex_owner problem case case access covered spin lock similarly gaurentees accessing stale data secondly check config_smp allowing access mutex owner see non smp setup kernel doe track owner rely thirdly check defined defined surprisingly mutex owner cleared mutex_exit case spl need make sure ensure mutex_held behaves expected certainly assert mutex_destroy finally improve mutex regression test mutex_owned minimally check behaves correctly checked owner thread non owner thread subtle behaviour bit like catch early next time reappears mutex_owned regression test additonally verify mutex owner always cleared mutex_exit,,
6594,616df2dd8bf76e6eb73b546d75e4c4291e104ecf,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-28 12:34:20 -0700, , fix subtle race thread test case call wake_up must moved spin lock drop lock may longer valid creating thread exited basic thread implementation correct simply flaw test case,,
6595,5be4767ae1cc1b864faad47eda7009193a60759e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-28 11:39:43 -0700, , accept ignore taskq_dc_batch tq_front moment spl accepts taskq_dc_batch tq_front flag however get silently ignored harmless moment doe need implemented point,,
6596,e6de04b73cfaa1b17eee531d472cbbd37c247502,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-24 09:41:59 -0700, , add kmem_vasprintf function might well asprintf variant allows safely pas va_list several level stack using va_copy instead va_start,,
6597,438683c0a9c9a045106f27aca85dc1855d926497,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-21 10:19:44 -0700, , revert support tq_front flag used taskq_dispatch reverts commit,,
6598,3cb77549d1bbfd246e6321d8fe34dce480f31eda,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-16 15:57:04 -0700, , update warning kmem debug code fix long overdue ground work laid long ago include exact function line number error message issue memory allocation call however probably due lack time moment informatin never made error message patch fix try standardize kmem debug message well,,
6599,8ffef449efa88c7d22d3235fe98ae30c1cdc4ef3,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-14 14:20:31 -0700, , add missing header util sscanf.h,,
6600,def465ad4bfdddaf0e2f776f524fa596defcb4ea,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-14 14:18:48 -0700, , include kstat.h kmem.h turn solaris incidentally includes kstat.h kmem.h side effect certain higher level file explicitly include kstat.h happen get via kmem.h make like easier everyone,,
6601,eb12b3782c94113d2d40d2da22265dc4111a672b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:53:23 -0700, , support tq_front flag used taskq_dispatch allow taskq_dispatch insert work item head queue instead tail passing tq_front flag,,
6602,32c6147dee702e6033a9f3b4999a0b9025a88260,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:57:49 -0700, , minor cleanup solaris api addition minor formatting cleanup api addition int8_ min max int16_ min max macro id_t typedef ddi_get_lbolt ddi_get_lbolt64 function,,
6603,b868e22f05fd85be16afee800207f72b8e310d32,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:48:18 -0700, , add kmem_asprintf strfree strdup minor cleanup patch add three missing solaris function kmem_asprintf strfree strdup implemented thin layer call linux counterpart part autoconf check kvasprintf added doe appear older kernel kernel doe provide spl generic implement additionally dead code removed clean thing make kmem.h little readable,,
6604,bb1bb2c4c49659b47d65beb8ac24dc2c86989553,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 15:02:24 -0700, , add xuio_ structure typedefs add basic xuio structure typedefs solaris style zero copy decent chance way handle linux providing basic type simplifies thing,,
6605,750a7101f8deecc4e8187f16c880cded2667cef8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:45:42 -0700, , stub additional missing header,,
6606,ae4c36adce9228eb444c1d5e19f00e83303dbeee,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:37:46 -0700, , cleanly split linux proc.h conflicting solaris proc.h process linux proc.h header proc filesystem solaris proc header process patch correctly move linux proc functionality linux proc_compat.h header leaf sys proc.h use solaris minor update required call site included course,,
6607,71b1242e677d1e44d9273f9bbe1206a2184eabf8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-06-11 14:42:16 -0700, , update meta version 0.5.0,,
6608,1b4ad25e2f29172c86d3293b61f0c5232d4a2da8,lex Zhuravlev <Alex.Zhuravlev@Sun.COM>, 2010-06-02 22:01:14 -0700, , stack overflow bit modulus operation bit architecture running zpool create bit machine spl compiled gcc 4.4.4 led stack overlow turned due sort optimization gcc uint64_t __umoddi3 uint64_t dividend uint64_t divisor  return dividend divisor dividend divisor  code supposed using __udivdi3 implement gcc instead implemented via __umoddi3 signed brian behlendorf behlendorf1 llnl.gov,,
6609,428870ff734fdaccc342b33fc53cf94724409a46,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-28 13:45:14 -0700, , update core zfs code build 121 build 141,,
6610,8a1c9a02fb66ac5885990ec4d82faf03f820085b,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-23 09:51:17 -0700, , minor bit fix cast hrtime_t mutliply important cast hrtime_t multiply ts.tv_sec type bit need promote bit,,
6611,49638d838846b551f033037c2ff13368e6fdd166,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-21 15:52:06 -0700, , refresh autogen.sh product automake 1.11.1,,
6612,3cca28a7859b78ec9add4e38c3c12cf1527e3e87,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-21 14:17:44 -0700, , prep 0.4.9 tag fix updated changelog,,
6613,edbbb609bd4418997282e4fe7110eb8073dd66cb,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-21 11:53:49 -0700, , minor spec file cleanup rhel6 package dependency,,
6614,32f5faff694b30c7992181057e3028571f834d41,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-20 14:20:34 -0700, , simplify rwlock implementation remove rw_count rwlock implementation idea could used generic wrapper getting internal state rwlock good idea proven problematic keep correct multiple arch internal implementation change short worth trouble simplicity mind thing updated use rwsem_is_locked function instead rw_count rw_ _held function rw_upgrade remains implemented generic rwsem implemenation remains determined worth effort adding custom implementation arch,,
6615,23d91792efdc42779605025e15b03d63226cff6a,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-20 14:16:59 -0700, , use km_nodebug macro preference __gfp_nowarn,,
6616,3626ae6a7008b2d4d16ddd01defd45a8d7aac3b8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-20 10:15:51 -0700, , disable default may prefer system panic sbug get crash dump analysis suspect people system configured crash dump best thing simply halt thread print error console way good chance actually saving stack trace debug log,,
6617,e0dcb22e4ee6b7205e7cc1acd6de24d02509e9cc,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-20 09:52:37 -0700, , adjust large object size kmem slab_large test 64k object large kmem based slab slab object large vmem cased slab 32m slab,,
6618,5198ea0e713895efc06f1254e009e2271436fc6f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-19 16:53:13 -0700, , remove interface replace __gfp_nowarn flag remove hack used kmem splat regression test per allocation flag called __gfp_nowarn match lower level linux flag similar slightly different function idea explicitly set flag request know breaking max rule need want anyway currently used regression test intentionally push thing limit want log noise additionally forced use default nr_cpus large easy way handle finally added stack_dump call warning trigger make clear exactly allocation taking place,,
6619,627a74972c23ddd2d27163213317cdfa878eb4d7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-19 16:17:06 -0700, , set default debug log patch tmp spl log using tmp preferable default always overriden using module option case case basis additionally standardize log message based default log level used kernel,,
6620,6119cb885a976e175a6e827894accf657ff1984f,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-18 14:55:01 -0700, , add author master branch,,
6621,fa94cf43b915fbb13e039886a572682d48365ac8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-18 14:25:28 -0700, , update copyright reference zpios cddl exception,,
6622,94d52d93d9efbdad47a3923277a417c88a3c9de6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-18 11:06:56 -0700, , update copyright include release llnl code 403049,,
6623,91ac110c9ce29fcf81625cea81876b958564d384,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-18 10:32:23 -0700, , update copyright disclaimer update copyright disclaimer attempt clear copyright licensing issue,,
6624,99879b257c509a1571dc412128b9b2cfbaac8ba4,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-18 09:18:20 -0700, , minor spec file cleanup srpm case ensure kdevpkg defined srpm case using define devel_requires macro interestingly issue rpm 4.7.1 rpm 4.4.2.3,,
6625,de7cc348212af1b6bdc836be61943ba9e9cfcea7,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-17 15:47:24 -0700, , prep 0.4.9 tag updated meta changelog,,
6626,716154c5926eb391eb8178203496430ffa7ebed8,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-17 15:18:00 -0700, , public release prep updated author copying disclaimer install file added standardized header source file clearly indicate copyright license give credit credit due,,
6627,8e2140b770152df7aa91e495f11a73308bfc6c13,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-14 09:42:53 -0700, , add missing typedefs add processorid_t pc_t index_t,,
6628,a76df2dc0fde313d1ecaab61d0dcd46c3cdd6151,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-14 09:40:52 -0700, , add console_ printf function add support missing console_vprintf console_printf function,,
6629,6020190e8f5a94bee7e65a787a1b784cb0f4c4d0,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-14 09:31:22 -0700, , use described comment doe incur slightly overhead using gethrtime described existing comment,,
6630,f752b46eb3c3b889d62465ea800cf17c980becd1,rian Behlendorf <behlendorf1@llnl.gov>, 2010-05-14 09:24:51 -0700, , add function minor extension condition variable api allow reasonable signal handling linux cv_wait function definition must wait unconditionally cv_signal cv_broadcast waking make impossible woken signal sigterm function added handle case behaves identically cv_wait exception wait interruptibly allowing signal wake mean need careful check issig waking,,
6631,3affbe6d7e23f26ef9b4e70043b9fb93bfe9ea32,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-29 11:59:41 -0700, , update nvpair include nv_alloc_fixed support,,
6632,fa42225a3d5daa58704bdb920ec92cd95c274011,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-29 10:37:15 -0700, , add solaris fma style support,,
6633,97f8f6d78999ab41d23cf5942d55ea3ad0ca4f3e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-23 15:55:02 -0700, , dump log current process required dumping debug log first check safe create new thread block waiting atomic context irqs disabled safe sleep must write debug log current process,,
6634,d05ec4b45f77c0f401098d88b5299ef090c73ca9,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-23 14:39:47 -0700, , assume tq_sleep explicitly specified,,
6635,663e02a135953a432c8497916657a29cbcd93c01,icardo Correia <Ricardo.M.Correia@Sun.COM>, 2010-04-23 12:19:10 -0700, , handle fappend option vn_rdwr signed brian behlendorf behlendorf1 llnl.gov,,
6636,82a358d9c0750a84232adf5c092aeec339c9dd3a,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-22 12:48:40 -0700, , update vn_set_pwd allow user kernal address filename module init spl_setup vn_set_pwd failing efault user_path_dir __user_walk expect filename user space address case handle data segment size increased ensure doe fail efault additionally added printk warning catch log console ever reoccurs thought everything working properly consequence failing subtle usually non critical,,
6637,ef6c1368848f364ac08ccba60bb88010548d9930,rian Behlendorf <behlendorf1@llnl.gov>, 2010-04-20 15:16:27 -0700, , disable rw_tryupgrade newer kernel kernel using implementation nothing changed kernel building arch specific rwsems rw_tryupgrade disabled implemented correctly particular x86 implementation leverage atomic primatives serialization rather spinlocks get working need implemented cmpxchg x86 likely something similiar arch interested safest simply disable,,
6638,8934764e6049d1eebae3eca8af99b8ee7140c0ab,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-26 15:21:06 -0700, , add support make silent build cleanest way set am_libtoolflags silent however am_libtoolflags honored automake 1.9.6 2.1 using cleanly handle updating automake 1.11 look like lot churn makefiles,,
6639,16b719f0066047aaf404756a0b4fe8c74eec6a2a,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-22 14:45:33 -0700, , allow spl_config.h included dependant package updated need dependent package able include spl_config.h build properly partially solved commit 0cbaeb1 using ah_bottom undef common defines package version etc autoconf always add easily removed solution work long spl_config.h included project config.h turn easier said done particular problem package includes config.h using include gcc option ensures first thing included config.h handle case cleanly removed ah_bottom hack replaced command command run immediately spl_config.h written little awk foo strip offending defines file eliminates problem entirely make header safe inclusion also change removed place code spl_config.h included added gcc compile line ensure config result always available finally also disabled verbose kernel build want back always build make since thing working need default,,
6640,aa600d8a3843755be1dd621ecd00401f26f3bb49,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-18 13:39:51 -0700, , reduce max kmem based slab size allowing max_order sized allocation kmem based slab observed result deadlock help prvent limit max kmem based slab size max_order record caller creating slab like still handle safely,,
6641,c5c3d402f7109e37eeee54cd69d15c8d6cabf5d6,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-11 15:36:50 -0800, , prep 0.4.8 tag updated meta changelog,,
6642,6f088fde276e75c3b1cc824024f712c55d450651,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-11 14:29:17 -0800, , ignore unsigned module build product along addition signed kernel module newer kernel new build product need ignore lklm whole thread interested http lkml.org lkml 2007 164,,
6643,414f1f975e5c8ac0e9a399e992e46f517ab59828,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-11 09:53:59 -0800, , rename update zfs.sh zfs update.sh consistency,,
6644,774f7c02b181f6e18b91ebdd3092df57151da3e3,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-09 14:14:09 -0800, , ignore unsigned module build product along addition signed kernel module newer kernel new build product need ignore lklm whole thread interested http lkml.org lkml 2007 164,,
6645,3cce0f13652dd3476cb6939df2656631b2dee4b8,rian J. Murrell <brian@sun.com>, 2010-03-08 15:12:22 -0800, , fix definition unknown distro installation distro installation really unsupported i.e unknown make look like known distribution i.e rhel complete dependency rpm trying find kenrel source standard location additionally add prefix kernel requires consistency,,
6646,534c4e38cb2e070e8502798e3eecf297ff82f480,rian J. Murrell <brian@sun.com>, 2010-03-08 14:19:30 -0800, , kernel source pointed first attempt use lib module uname source likely fail building mock http wiki project mock chroot environment since uname report running kernel likely kernel chroot cleanly handle fallback using first kernel chroot kernel devel package contains kernel header build product module.symver required full source needed,,
6647,21006d08af406344fafc97d2eb43b73e781e49ff,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-08 13:08:09 -0800, , remove module.markers module.symver clean target split module clean makefile target allow cleanly remove module build product make clean,,
6648,3977f8370f8caf57600deff6795894410f0e715e,rian Behlendorf <behlendorf1@llnl.gov>, 2010-03-04 12:14:56 -0800, , linux 2.6.32 compat proc_handler api change linux 2.6.32 struct file filp argument dropped proc_handle prototype apparently unused _almost_ everywhere kernel simply cleanup added new autoconf check proper compat macro correctly define prototype helper function pretty api compat change rarely,,
6649,4cd8e49a69db0c3058c03f2541175985f07ff5c1,rian Behlendorf <behlendorf1@llnl.gov>, 2010-01-08 11:35:17 -0800, , add .gitignore file exclude build product,,
6650,694921bc49b3267b3fc0bc3a9e753fbc206e1a61,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-01-08 01:19:49 +0000, , sun misc gitignore add .gitignore file signed ricardo correia sun.com,,
6651,f7e8739c940c4175b5298de9a00c8c7974aff489,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-01-07 16:58:30 +0000, , sun fix whitespace whitespace fix signed ricardo correia sun.com,,
6652,b520b14305975bc8b18d3b8e3844ba6c4e119a0d,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2010-01-07 16:58:29 +0000, , sun fix panic str fix panic string used format string instead already formatted string signed ricardo correia sun.com,,
6653,5562e5d105aa5120a828b38c5d1a635d852bcdde,rian Behlendorf <behlendorf1@llnl.gov>, 2010-01-05 13:34:09 -0800, , added splat taskq task ordering test case test case verifies correct behavior taskq_wait_id particular ensure following two case handled properly task larger waited task run complete long available worker thread task lower waited one must complete unblocking even waited task completed,,
6654,82387586af283ac5fa6cde5d316f7ed4c587efec,rian Behlendorf <behlendorf1@llnl.gov>, 2010-01-04 15:52:26 -0800, , optimize lowest outstanding taskqid calculation taskq_lowest_id initial version taskq_lowest_id entire pending work list locked tq_lock determine lowest outstanding taskqid time done rushed wanted make sure right ... fast secondary well fast important carefully thought pending work list management convinced safe correct simply check first entry added large comment source explain basically long careful ensure pending work list stay sorted safe fast motivation chance observing much total cpu time waiting tq_lock pending list long resolve problem free cpu time something useful,,
6655,ef1c7a069131512458be75aae1e4857fcd8f133b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-23 12:57:10 -0800, , strip __gfp_zero kmalloc available older kernel needed avoid bug_on rhel5.4 kernel 2.6.18 164.6.1 since __gfp_zero valid flag kmalloc,,
6656,641bebe35f0675489357fd2db5d20e1bfc055648,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-23 12:46:11 -0800, , fix kmem slab_overcommit regression test locking regression test could crash due race slab relclaim normal exiting thread specifically kct structure could free thread performing allocation reclaim function also working thread kct structure simplest fix extend kcp kcp_lock reclaim prevent kct freed better fix would ref count structure since regression locking change enough surprisingly observed commonly rhel5.4 platform could hit,,
6657,3a03ce5cbf61def830905dfab0f43d5b6074f921,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-17 11:57:44 -0800, , check changed gaurd macro 2.6.28 rwsem implementation part 2.6.28 cleanup moved linux include asm header linux arch guard header many header file changed i386 rwsem implementation key header ensure internal member rwsem structure interpreted correctly change check new guard macro addition one implementation rwsem changed i386 safe correct,,
6658,058ac9ba7811baea78a47ba1ead8acd7512684b6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-11 16:15:33 -0800, , pull latest man page part update zfs.sh script updated download latest documentation package solaris extract needed zfs man page still need little markup handle change solaris linux version zfs howver pretty minor tried hard keep interface additional script update zdb zfs zpool man page added repo,,
6659,242f539a2ea886769a6408192a6a263fb2a45eaf,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-11 11:20:08 -0800, , add skc_flags full header proc spl kmem slab,,
6660,f60a5f5221c594372d96767d9859a334ed0a80a6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-10 15:06:07 -0800, , splat vnode test must return negative error code must hurry wrote vnode regression test error code handling correct solaris vnode api return positive errno need converted negative errno linux passed back user space otherwise test hardness report failure errno set correct error code additionally test may fail test file already exists avoid false positive user mode helper added remove test file tmp running actual test,,
6661,d04c8a563c09d6449d5663aa2b57840653defae5,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-04 15:54:12 -0800, , atomic64 compatibility bit system without kernel support patch another step towards updating code handle bit kernel regularly testing change really impact common case expected latest kernel running x86_64 arch linux 2.6.31 kernel x86 arch support bit atomic operation additionally new atomic_compat.h support case wrong embedded spinlock atomic variable must always bit total handle bit issue simply fall back enable atomic spinlock implementation kernel doe provide bit atomic funcs second issue patch address debug_kmem assumption always atomic64 funcs available bit arch may true actually fine case kernel never able allocate bit worth anyway check atomic64 funcs available mean bit machine safely use atomic_t instead,,
6662,db1aa22297d50fa19939e487b5cc7d1f5088c64e,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-01 15:53:28 -0800, , correctly handle division bit rhel5 system returning dividend,,
6663,5652e7b497256647cdcd4d5825cdb23b1b797dd0,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-01 15:47:27 -0800, , using x86 specific rwsem correctly intepret rwsem count,,
6664,4e5691faf69cd5a3db5c7d6c12c5dc588f9e4b3d,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-01 11:40:47 -0800, , run kmem overcommit test bit system,,
6665,a5d6f6020aeeebfabd0bb5e48d8736d63b44b875,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-01 10:15:27 -0800, , add missing atomic64 compat helper bit system use function added recent atomic work tested bit system add missing compat function atomic64_inc atomic64_dec ,,
6666,6ff686c44dbc39f12cb57e930fb20199203514d9,rian Behlendorf <behlendorf1@llnl.gov>, 2009-12-01 10:14:01 -0800, , type long expected explicitly cast bit system,,
6667,f6ea161924b3fe4166faa1de709fce0049bf4b11,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-24 15:24:36 -0800, , spl module devel package must depend exact version kernel devel package built,,
6668,c1541dfef13041f945aa21985249bd24ee5449e0,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-24 14:21:45 -0800, , add srpm config option creation spec file,,
6669,ea385742dbe619f25d5a2b80aee9c9fd35ef2eed,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-24 13:15:35 -0800, , add chaos5 rhel6 macro spl modules.spec.in,,
6670,958dc9e737ffe14e6253479a903700e5e8416580,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-20 16:52:29 -0800, , prep 0.4.7 tag updated meta changelog,,
6671,fe883092b937eb574fd748174e951b52244813e3,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-20 16:01:00 -0800, , ensure .order .markers build product removed distclean rule,,
6672,0aa61e8427c63e835d9159d3b497591b0691dfe8,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-15 16:20:01 -0800, , remove zvol.c updating update zfs.sh linux version available,,
6673,0a6c005959c168262cc9e146c0b66b64ba5d94d3,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-15 15:04:33 -0800, , ensure spl_config.h include spl generic.c,,
6674,1273cf284b4e916fdf6dfbdf1fdb720d62738663,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-15 15:04:02 -0800, , always use generic mutex_destroy,,
6675,05b48408fb8bc420908d93d97231bb6727b17e9a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-15 14:27:15 -0800, , add wrapper symbol used gpl module use spl handle case call path take two different lock name needed avoid false positive lock checker,,
6676,8b45dda2bc82ee821992b928ea9d7278a953e8f9,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-13 11:12:43 -0800, , linux 2.6.31 kmem cache alignment fix cleanup big fix removal kmalloc kv_alloc used true previous kernel kmallocs page_size would always page aligned longer true atleast 2.6.31 longer alignment expectation since kv_alloc requires resulting address page align either directly allocate page kmc_kmem case directly call __vmalloc always return page aligned address additionally avoid wasting memory size always power two cleanup several helper function introduced calculate aligned size various data structure help ensure case accidentally missed alignment need taken account helper use p2roundup_type instead p2roundup safer since type explict longer count compiler auto promote type hopefully expected always wnforce minimum maximum page_size alignment restriction cache creation time use splat alignment test,,
6677,c89fdee4d3530e22270ec2b700f697c5e0d46d71,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-12 15:11:24 -0800, , remove __gfp_nofail kmem retry internally 2.6.31 clear __gfp_nofail longer used may disappear kernel time handle simply added _nofail wrapper kmem implementation perform retry non atomic allocation linux 2.6.31 page_alloc.c 1166  __gfp_nofail used new code  __gfp_nofail caller fixed properly detect handle allocation failure  definitely want caller attempting allocate greater order page unit __gfp_nofail  warn_on_once order,,
6678,baf2979ed35c1a9c2e90e84416e220ab3d25140a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-10 14:06:57 -0800, , linux 2.6.31 compatibility update macro updated explicitly include linux fs_struct.h dropped linux sched.h min_wmark_pages low_wmark_pages macro introduced newer kernel older kernel mm_compat.h introduced define needed direct mapping per zone min_pages low_pages max_pages,,
6679,f97cd5fd875e8c28c6411ef86845ad0ec283f115,rian Behlendorf <behlendorf1@llnl.gov>, 2009-11-02 10:24:12 -0800, , prep 0.4.6 tag updated meta changelog,,
6680,055ffd98cf80bfc72c28d730753c7d139b704d44,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-30 13:58:51 -0700, , autoconf enable debug cleanup cleanup enable debug configure option pending quite time glad finally got summerize spl_ac_debug_ macro updated autoconf friendly mainly involved shift gnu approved usage ac_arg_enable ensuring as_if used rather directly using test construct enable debug kmem yes default simply enabled keeping running tally total memory allocated freed reporting memory leak one module unload additionally ensure proc spl kmem slab exist default handy overhead low impact performance enable debug kmem tracking default option added provide configure option enable detailed memory allocation tracking support always know turn default support disabled known badly hurt performence however invaluable chasing memory leak enable debug kstat removed reflection see would ever really want turn support always nice side effect simplifying proc handling code spl proc.c always assume top level directory  enable debug callb removed never really anything put provisionally might needed turn removing prevent confusion,,
6681,302b88e6abc3efe86411f9622b0a27a5b8b1f417,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-30 13:53:17 -0700, , add autoconf check atomic64_xchg function exist arch prior 2.6.24. patch addes autoconf test detect add needed autoconf check needed instead ifndef modern kernel atomic64_ cmp xchg implemented inline function define,,
6682,5e9b5d832b228b0628a61c9c1c9bf0b05d2fe122,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-30 10:55:25 -0700, , use linux atomic primitive default previously solaris style atomic primitive implemented simply wrapping desired operation global spinlock easy implement time 100 sure could safely layer solaris atomic primatives linux counterpart however likely good performance investigation however doe appear solaris primitive layered linux fairly safely linux atomic_t type really wrap long simply cast solaris unsigned value either atomic_t atomic64_t lingering problem implementation solaris provides atomic read function mean reading bit value bit arch result word breaking concerned initially upon reflection limitation solaris api really bug bug compatible change default implementation layered top linux atomic type however assuming lot internal implementation type made easy fall back generic approach simply build enable issue encountered new implementation,,
6683,2b5adaf18fde25b963a9d21407773544f2cbed6f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-27 16:17:06 -0700, , removed important,,
6684,4bd577d069985e7b79357cb9744a46b03cdf881b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-27 15:54:45 -0700, , rebase cmn_err vcmn_err warn missing cmn_err vcmn_err function layered top debug system usually expects newline end however really need newline fact ce_cont case let drop warning also make half hearted attempt handle leading mean send syslog console case send debug log console,,
6685,5c36312909256a886495b56fb0cd75ebaa25615b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-09 15:37:29 -0700, , script update zfs.sh updated include libefi library,,
6686,f44078fad5a941f2489ce0bbb8ed2c521f13f26e,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-05 12:51:58 -0700, , remove usage __id_u macro portability macro removed default rpm macro file interestly arch specific macro add back based distro counted however __id still exists command line args historically fairly stable directly use __id get user name,,
6687,39ab544079015f2b7ad854ef9c8815290d971f17,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-02 16:21:59 -0700, , use increased portability 2.6.25 kobj k_name replaced kobj name distros rhel5 2.6.18 add patch prevent problem older distros sles10 2.6.16 avoid whole issue updating code use doe want existed way back 2.6.11,,
6688,51a727e90f1dd11194737e64e85ca09d34be5d8b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-10-01 16:06:15 -0700, , set cwd process executing insmod ricardo pointed solaris cwd set module load linux set caller cwd handle cleanly reworked module _init _exit macro call _setup _cleanup function spl dependent module loaded unloaded give chance perform needed modification process case changing cwd also handily provides way avoid creating wrapper init exit function solaris linux prototype differ slightly dependent module call spl helper macro spl_module_ init exit instead native linux version unfortunately appears linux consistent api kernel set cwd module add autoconf magic like however done correct tested rhel5 sles11 fc11 chaos kernel addition change rootdir type void correct vnode_t type set rootdir non null value,,
6689,0e77fc118e2c105af0df5d1c7aa6627ed601bfa1,rian Behlendorf <behlendorf1@llnl.gov>, 2009-09-29 03:19:09 -0700, , expand sem outside init_rwsem directly call __init_rwsem need directly call __init_rwsem name get expanded sem lock name safe correct support arch x86 x86_64 ppc ppc64,,
6690,4d54fdee1d774ddaef381893434a3721067e2c56,rian Behlendorf <behlendorf1@llnl.gov>, 2009-09-25 14:47:01 -0700, , reimplement mutexs linux lock profiling analysis generic explanation mutexs needed reimplemented work kernel lock profiling see commits   specific change made mutex implemetation follows linux mutex structure directly embedded kmutex_t allows kmutex_t directly case mutex struct passed directly linux primative like rwlocks critical function implemented defines ensure location information preserved preprocessor direct replacement solaris primative linux primative rwlocks need track lock owner thing get little interesting depending kernel version built kernel linux may already running 2.6.29 newer kernel smp system lock owner tracked added linux support adaptive mutexs shortly alternately kernel might track lock owner set kernel build neither thing true kernel kmutex_t type include track lock owner ensure correct behavior handled new autoconf check called concerning adaptive mutexs recent development make either latest fc11 sles11 kernel ideally love see kernel change appear one distros doe help performance linux kernel commit  testing ingo test mutex application ... gave 345 boost vfs scalability testbox however want backport change still simply export task_curr symbol kmutex_t implementation use symbol available provide adaptive mutexs finally debug_mutex support removed including proc handler done cleanly integrated kernel profiling information much much available debug kernel build code redundant update mutexs validated sles10 ppc64 sles11 x86_64 chaos4.2 x86_64 rhel5.3 x86_64 rhel6 x86_64 fc11 x86_64,,
6691,d28db80fd0fd4fd63aec09037c44408e51a222d6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-09-25 14:14:35 -0700, , update rwlocks track owner ensure correct semantics behavior rw_ _held updated quite right sufficient return non zero lock help must current task holder mean need track lock owner something tracked linux semaphore experimentation solution settled embed linux semaphore start larger krwlock_t structure includes owner field maintains good performance allows cleanly intergrate kernel lock analysis tool reason placing linux semaphore start krwlock_t simply cast krwlock_t rw_semaphore pas linux kernel allows use defines preprocessor direct replacement solaris primative linux equivilant important maintains location information rw_ call point additionally adding owner krwlock_t keep needed extra information adjacent lock remove need fancy lookup get owner optimal performance also leverage existing spin lock semaphore ensure owner updated correctly helper function need strictly implemented define preserve location information done static inline function adding owner krwlock_t allows remove memory allocation done lock initialization good obvious reason give ability specific lock name linux profiling tool stringify lock name used code via preprocessor use update rwlocks validated sles10 ppc64 sles11 x86_64 chaos4.2 x86_64 rhel5.3 x86_64 rhel6 x86_64 fc11 x86_64,,
6692,e811949a57044d60d12953c5c3b808a79a7d36ef,rian Behlendorf <behlendorf1@llnl.gov>, 2009-09-18 16:09:47 -0700, , reimplement rwlocks linux lock profiling analysis turn previous rwlock implementation worked well integrate properly upstream kernel lock profiling analysis tool major problem since would awfully nice able use automatic lock checker profiler problem upstream lock tool use pre processor create lock class uniquely named locked since rwsem embedded wrapper structure name always effect ended one lock class entire spl caused lock dependency checker flag nearly everything possible deadlock solution directly map krwlock linux rwsem using typedef eliminating wrapper structure done initially rwsem implementation specific arch fully implement solaris krwlock api using provided rwsem api possible done directly accessing internal data member rwsem structure example linux api provides different function dropping reader writer lock whereas solaris api function caller doe pas type lock mean properly drop lock need determine lock currently reader writer lock need call proper linux api function unfortunately provided api must extracted information directly arch specific lock implementation able doe complicate thing considerably good news addition profiling benefit change may see performance improvement due slightly reduced overhead creating rwlocks manipulating function forced sacrafice rw_owner information simply stored anywhere rwsem luckily appears commonly used function solaris understanding mainly used debugging anyway addition core rwlock change extensive update made rwlock regression test class test extended provide api coverage rigerous checking misbehavior pretty significant change mind careful validate several platform committing full splat regression test suite run numberous time following platform includes various kernel ranging 2.6.16 2.6.29 sles10 ppc64 sles11 x86_64 chaos4.2 x86_64 rhel5.3 x86_64 rhel6 x86_64 fc11 x86_64,,
6693,45d1cae3b8c949ecc391dd7a5b81963b34c71c29,rian Behlendorf <behlendorf1@llnl.gov>, 2009-08-18 11:43:27 -0700, , rebase master b121,,
6694,73358d5a1dc6278fd20eed0a9872c0b1572caacc,rian Behlendorf <behlendorf1@llnl.gov>, 2009-08-14 14:09:16 -0700, , various spec file tweak handle rpm building several distros supported tested distros include sles10 sles11 chaos 4.x rhel5 fedora 11. update mainly address rebuildable kernel module rpm correct rpm dependency distro,,
6695,26d77c4493b631b7faa26da50be120c9dabb3a60,rian Behlendorf <behlendorf1@llnl.gov>, 2009-08-13 15:02:34 -0700, , explicit check requires_ rpm defines due different distros version rpm mishandling shorthand syntax simply use longer version get interpreted correctly,,
6696,68ada11e5ccd5aab3485d77953b446937d12852b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-08-04 12:22:33 -0700, , tag spl 0.4.5 update changelog summary change since last release update meta file reflect new version number,,
6697,16f4a92c1019229c50d43adcc9141eb46a75f20d,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-31 12:44:34 -0700, , required missing symbol fc11 kernel 2.6.29.4 167.fc11.x86_64,,
6698,c65d62d8bfbc3e800e17a580267fa77de5d01d6b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-30 13:52:11 -0700, , disable stack overflow checking default run time stack overflow checking disabled default safe use 2.6.29 latter kernel kernel stack overflow checking support become redundant anyway enabled older kernel arch without stack overflow checking redefining check_stack,,
6699,6ae7fef5b94275e50cc1dcd48c4ecf3b70d7f9d9,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-28 15:06:42 -0700, , update support 2.6.29 kernel basically everything need monitor global memory state system cleanly available via problem interface still fairly recent one change page state enum need handle change basically boil following available use several autoconf check added detect correct enum name available check see get_zone_counts symbol available use get_zone_counts symbol exported choice dynamically aquire load time absolute last resort old kernel want patch cleanly export symbol,,
6700,6b09f739398a644384bfbab87792e4681707aef1,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-28 15:04:21 -0700, , remove get put_task_struct available sles11 interface going away caller actually use crhold crfree working credential okay taking reference task structure odds going away working credential pretty small,,
6701,ec7d53e99aee17ae1500701520649d3b54b31676,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-27 17:18:59 -0700, , add basic credential support splat test previous credential implementation simply provided needed type couple dummy function needed update correctly tie basic solaris credential api one two linux kernel apis prior 2.6.29 linux kernel embeded credential task structure kernel pas around entire task struct credential use helper function extract credential related bit 2.6.29 new credential type added fairly cleanly layer top helper function nicely hide implementation detail caller three test added splat test framework verify basic correctness extended needed need credential function added,,
6702,3d0cb2d31dbeef37382249ceb9f16a46c2ccd819,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-27 09:52:01 -0700, , remove linuxinclude autoconf wrapper break 2.6.28 kernel modern kernel build system least post 2.6.16 set properly fact post 2.6.28 include header moved arch guess make completely wrong letting kernel build system set ensure correct,,
6703,7064b767c22eba639ef20180f03b6a25b40ff2e1,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-23 16:14:52 -0700, , positive solaris ioctl return code need negated use libc,,
6704,3c9ce2bf695a70887b4391a268e6f6c6f7868b91,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-23 13:50:53 -0700, , allow kmem vmem based slab slab_lock slab_overcommit test slab_overcommit test case could hang system fragmented memory creating kmem based slab 256k object avoid removed kmc_kmem flag allows slab decide kmem vmem backed based object side slab_lock test share code also effected point two test stress cache locking memory overcommit type slab critical fact allowing slab default smart thing preferable,,
6705,2141116167c36051f757f426f1fb2242ab85d2a4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-22 14:28:19 -0700, , compat macro used,,
6706,749e5eb1edaa86b60e3b0c925a587925873ec560,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-22 06:59:28 -0700, , check arch default path detecting kernel object sle still preferentially use arch arch looking native version fails acceptable use default,,
6707,78d6de97bd0749b03af86ff5f76edae4bfb18b42,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-21 10:13:58 -0700, , register basic compat ioctl handler bit compat simply pas ioctl normal handler ioctl helper macro used correctly safe handle packing unpacking data encoded ioctl command actually caller doe use macro pass small value probably well get trouble try use upper bit endianness really concern pretty much assumed user kernel match,,
6708,ac95d0974bb36000b979f5b2dd404638ea87baf7,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-07-14 15:24:59 -0700, , fixed null dereference tcd_for_each kmalloc call module spl spl debug.c 1163 return null signed brian behlendorf behlendorf1 llnl.gov,,
6709,e004f04c8b110ee598baa6b86148c8148d737a44,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-07-14 15:23:25 -0700, , prevent integer overflow 164 day uptime signed brian behlendorf behlendorf1 llnl.gov,,
6710,b11b08ed641b8c677b529e108c2b28dc0183d34c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-14 14:28:04 -0700, , add little paranoia ensure endianess set correctly,,
6711,06dea103807ed57621d5711edafc4da2f2d9bbc6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-10 10:58:06 -0700, , add basic groupmember function sup group,,
6712,d3126abe75a6502d55bfa2339b48d4fa263e1b02,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-10 10:56:32 -0700, , add ddi_copyin ddi_copyout support fake kernel originated ioctls,,
6713,2a734e9c266f5fd31db84153a61263b529167732,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-09 15:00:25 -0700, , define ace_all_perms use acls,,
6714,c18cbcfe66880f17408ad252e77947669e12975a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-09 14:59:41 -0700, , define fkioctl used solaris mark kernel ioctl,,
6715,3a68dc5374dd864726ae23389f03c5ca69af7c95,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-09 12:15:23 -0700, , add assertv macro simplify removing variable assertv used assert,,
6716,915404bd509e5231c134042560d86e3ac86c1ab4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-09 10:07:52 -0700, , add basic support taskq flag used scale number thread based number online cpu cpu added removed rescale thread count appropriately currently done create,,
6717,9babb37438b58e77bad04e820d5702e15b79e6a6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-02 15:44:48 -0700, , rebase master b117,,
6718,aaad2f7226d26c8ca3575830d07aa08363f346b3,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-02 14:19:11 -0700, , update changelog,,
6719,bb339d067054174f218ead91105472558f278fc2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-02 10:47:28 -0700, , cleanly handle linux none option used generate source rpm fatal actually need build source rpm mock build important dependent rpm installed specificed source rpm spec file,,
6720,86933a6e510bb00edb097095ffe3deb7a4fbe533,rian Behlendorf <behlendorf1@llnl.gov>, 2009-07-01 14:37:44 -0700, , simplify rpm build rule added config rpm.am distro friendly change kernel module packaged seperately,,
6721,5c3c70adece1ea8724cae0cf0c6cd164a4439f19,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-29 16:41:21 -0700, , add spl.release spl devel simply dependent package version check,,
6722,f4f9cd75a1e4654bf50cac6dbb5496ba93bb1662,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 16:30:44 -0700, , install spl devel product usr src spl spl_version linux_version remove spl symlink confusing,,
6723,c0517c35d244beea61ff443f1e6e7229ef6337fe,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 13:10:52 -0700, , use do_div older kernel do_div64 exist,,
6724,155189d4a72da0aee986193826ceb2cf602c690e,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 12:43:27 -0700, , additional tuning get buildrequires right case pl.spec,,
6725,ac12b26284a15ba8985c845a0511448435c3f065,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 11:37:06 -0700, , simplify kernel depenency logic,,
6726,af971a8594bd8c472b301c0d194addae5fc56397,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 10:34:40 -0700, , spec file update reason following shorthand syntax failing replaced longer version foo define foo bar changed undefined foo define foo bar endif,,
6727,e28bc9160d4dd0706f9c65bf35062bea41f20ebb,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-26 09:40:14 -0700, , srpm build farm mock itergration,,
6728,07114bdee9012057c26c17ebe70ab0d9d05c4154,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-25 16:11:13 -0700, , build farm integration ensure buildrequires correct,,
6729,31b2e0b070d99681d189951557d2344dc2b63dbf,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-25 15:31:53 -0700, , packaging fix kernel module built using linux_obj makefiles linux makefiles ensure proper install path used install module addon spl ensure additional kernel module build product packaged simplified spl.spec.in support rhel chaos sle fedora,,
6730,762b96f6c6dd6feb2407bf484685b4ac70ab8fcd,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-22 15:31:40 -0700, , update changelog high level summary change 0.4.3 0.4.4 prior tagging full detail found git commit history,,
6731,2e0e7e69769eb0f5ceda102e575da79288d05127,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-16 11:34:28 -0700, , packaging improvement rhel sle part allow checking exported symbol module.symvers module.symvers stock sle kernel ship object directory module.symvers yet produce module.symvers local build directory,,
6732,39a3d2a421bf067329bae352866a5d1fccbcee70,rian Behlendorf <behlendorf1@llnl.gov>, 2009-06-16 10:44:59 -0700, , packaging improvement rhel sle properly honor prefix build system rpm spec file add define require_kdir spec file support building rpm kernel source installed non default location add define require_kobj spec file support building rpm kernel object installed non default location stop suppressing error autogen.sh script improved logic detect missing kernel object located source common case sle well tree chaos kernel build done simply support multiple arch moved spl devel build product usr src spl version spl symlink created reference last installed version,,
6733,e554dffa6031a2cf37537fc8451f757d5ae9e46f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-21 10:56:11 -0700, , sles10 fix part proper ioctl bit binary compatibility need ensure ioctl data always packed bit binary additionally correct thing encode size byte part command using _ioc_size minor formatting change respect character limit move defines splat ctl.h increase getting close accidentally using real registered subsystem,,
6734,9593ef76d9ab2290a4fee7f97651dfa1f57185e6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 16:33:08 -0700, , sles10 fix part add compat_ioctl handler default bit sle system build bit elf binary bit binary pas ioctl information bit kernel compatibility handler need registered case additional conversion needed convert bit ioctl command bit command call default handler,,
6735,124ca8a5a98a5e64e6a221b5f30c48361dac6f24,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 15:30:13 -0700, , sles10 fix part initial sle testing uncovered long standing bug debug tracing tcd_for_each macro expected null terminate trace_data array ever true due luck trace_data iterators properly capped tcd_type_max splat_major 229 conflicted hvc device sle system since always arbitrary choice picked something else have_pgdat_list case set pgdat_list_addr value stored address memory location returned,,
6736,5232d256b45b3c48dd96d30b5907c0205192197b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 14:23:13 -0700, , sles10 fix part prior 2.6.17 _pgdat helper function mmzone.c instead for_each_zone operated directly pgdat_list may may exported depending kernel compiled new configure check determine helper needed symbol exported exported dynamically aquired runtime,,
6737,3731931529df2bff63ca3d62e387d4e602de7cb2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 12:23:24 -0700, , powerpc fix part enable build powerpc isa type add div_round_up roundup macro unavailable cast bit value lld format string long long quiet compile warning,,
6738,fe4573928fc73590373a074ef9b068c6286d9a26,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 11:54:40 -0700, , sles10 fix part fix incorrect mapping prefered api 2.6.13 2.6.17 based kernel,,
6739,a093c6a49927912642ccc35e99f74ecf37d00334,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 11:31:55 -0700, , sles10 fix part configure check sle specific api change vfs_unlink vfs_rename added struct vfsmount argument something called linux security module appears never adopted upstream,,
6740,6c9433c150ad12d01f7ea4cfc72c8647a08ac5fc,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 10:56:13 -0700, , sles10 fix part configure check function introduced part mutex validator 2.6.18 unavailable safe fallback plain mutex_lock,,
6741,96dded38442684319305082aa2ac7e25f7f414da,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-20 10:08:37 -0700, , sles10 fix part configure check div64_64 function renamed div64_u64 2.6.26 configure check fuction introduced 2.6.18 kernel earlier 2.6.16 based sles10 must try use thankfully get_zone_counts still available simplify debugging poison symbol aquired dynamically using symbol_poison add console message user mode helper fail use bit shift instead division monotonic clock unavailable __gethrtime must perform division unsigned long long spl implement __udivdi3 __divdi3 long long division bit arch,,
6742,bf338d8d09b410884be526ed4f11b6030244dbfa,rian Behlendorf <behlendorf1@llnl.gov>, 2009-05-19 11:42:39 -0700, , sles10 fix part exclude obj detecting installed kernel source detect obj directory tree kernel build allow kernel build system set ensure m64 set properly issue bit sle system default always build bit binary unlike rhel fedora default bit,,
6743,f8b2932a43d955d804731c3ad03c7a47177f481c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-20 14:48:30 -0700, , prep spl 0.4.3 tag,,
6744,759dfe7d4366c60cba2693902396fc70b06d176f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-19 21:40:07 -0700, , add list_move_tail function,,
6745,c388a3ab26bdd19a10c02dbb24981e6f482d0958,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-18 11:56:42 -0700, , remove useless eol white space padding splat command,,
6746,f250d90b5f1586cdee79d1612a1a4361ab69afe2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-18 11:56:00 -0700, , fix vmem leak kmem_cache_test missing,,
6747,0cbaeb117ae0e77d05c7709a4f5dbfad9daa799f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-17 14:55:59 -0700, , allow spl_config.h included dependant package need dependent package able include spl_config.h leverage configure check spl done important several spl header need result check work properly unfortunately autoheader build product always private particular build defined certain common thing package version etc prevents package also use autoheader include definition conflict avoid problem spl build system leverage ah_bottom include spl_unconfig.h botton autoheader build product custom include undefs known shared symbol prevent confict doe however mean definition also availble spl package either spl package therefore equivilant spl_meta_ definition,,
6748,e11d6c5f50ff1cb9a75f5c6a6895846f73564422,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-17 12:16:31 -0700, , fc10 i686 compatibility update 2.6.27.19 interest portability added fc10 i686 box list development platform hope allow keep current upstream kernel api change time ensure accidentally break x86 support patch resolve remaining issue observed environment autoconf check added 2.6.21 kernel added clean api module get global count free inactive active page spl attempt detect api available directly map full api available implemented thin layer get value via get_zone_counts symbol available new kmem vmem_size regression test added validate correct vmem_size functionality test case acquires current global vmem state allocates vmem region verifies allocation correctly reflected vmem_size stats change always use kmc_kmem based memory x86 system limited virtual address space failure resulted due exhaustig address space test really need problem exhausting memory system thus need use physical address space change kmem slab_lock cap memory usage availrmem instead using native linux nr_free_pages provides additional test coverage spl linux integration change kmem slab_overcommit perform allocation 256k instead x86 based system possible create kmem backed slab entire size compensate number allocation performed increased additional autoconf documentation proposed upstream api change make additional symbol available module console error message added fails locate expected symbol cause module fail load need know exactly symbol available,,
6749,7257ec41856cf54d47a85f786f06e5a3c330acfc,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-15 15:13:49 -0700, , fix taskq_wait waiting bug surprised surfaced taskq_wait implementation work wait successfully first time called subsequent usage taskq_wait taskq would wait issue caused tq_lowest_id set max_int first wait completed caused subsequent wait check waiting lowest taskq always succeed fix ensure tq_lowest_id never set larger tq_next.id additional fix added patch include fix race placing tq_lock spinlock taskq_wait wait largest outstanding multiple spelling correction added taskq wait regression test validate correct behavior,,
6750,5b5f5685033b60cbd698c68b11d67150426587f5,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-15 15:05:38 -0700, , mutex test updated use task queue instead work queue mainly portability reason rebased mutex test solaris taskqs instead linux work queue linux workqueue api changed post 2.6.18 kernel using task queue avoids conditionally detect workqueue api use additionally basically free additional testing task queue much surprise updating test case expose long standing bug taskq_wait implementation patch doe address issue followup patch doe,,
6751,8123ac4f0d7409cae209858d01803fb2744b51b6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-13 13:38:43 -0700, , added autoconf configure check 2.6.27 kernel device_create api changed include private data argument check detects version device_create function kernel properly defines use correct prototype,,
6752,a0b5ae8acaaf63fa2378a6d062e66fdf99387625,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-03-12 21:23:34 +0000, , fix truncation hw_serial converting integer string writing proc sys kernel spl spl_hostid fix hostid mismatch lead assertion failure hostid hw_serial character decimal number zpool status pool lustre state online zpool zpool_main.c 3176 status_callback assertion reason zpool_status_ok failed zsh 5262 abort zpool status,,
6753,6c33eb816268ef3fef9bb8ca9079bb46aad26605,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-03-11 05:39:03 +0000, , minor bug fix xdr code introduced last minute change landing removed xdr_bytesrec typedef consumer add also probably xdr_bytesrec_t,,
6754,f48b61938a7efc427946418e987ce751ca6160c7,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-03-10 19:51:45 +0000, , add xdr implementation added proper xdr implementation lustre bug 17662 needed disk compatibility platform different endianness,,
6755,0c617c9a63c733643019a8d930d902ce56b153cc,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-10 10:57:52 -0700, , build system cleanup undefine non unique entry spl_config.h minor makefile cleanup use includedir proper kernel header install,,
6756,d4326403de5f1fe9634c3d9468a51076eff702b6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-09 16:50:37 -0700, , build system default kernel update method used determining kernel build specified previous uname used make assumption running kernel one want use often case better examine usual kernel devel install location select one installed kernel,,
6757,c5f704607bbdc5e6a89b4ac088dff16a6c1eeb5e,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-05 09:08:07 -0800, , build system packaging rpm support update build system properly support commonly used makefile target include make build everything make install install everything make clean clean build product make distclean clean everything make dist create package tarball make srpm create package source rpm make rpm create package binary rpm make tag create ctags etags everything extra care taken ensure source rpm fully rebuildable fedora rhel chaos kernel build binary rpm source rpm system simply run rpmbuild rebuild spl x.y.z 1.src.rpm produce two binary rpm correct requires dependency kernel one contain spl module support utility devel package compiling additional kernel module dependant spl spl x.y.z kernel version .x86_64.rpm spl devel x.y.2 kernel version .x86_64.rpm,,
6758,32f74c5280ca9a753991b97370e7c4c1a4e34ede,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-02-26 18:05:39 +0000, , xxx temporarily disable vmem_size,,
6759,04fa349d697f1e28e498059d730c7d810710739a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-03-04 10:19:41 -0800, , merge branch kallsyms,,
6760,d1ff2312b05852d2190afd1da216b4e0e1b0c7d4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-25 13:20:40 -0800, , linux integration cleanup remove instance function reimplemented spl prototype available linux header function address exported use find address function name become define call function pointer preferable reimplementing function spl ensures get correct version function running kernel actually pretty safe prototype defined header know calling function properly patch also includes rhel5 kernel patch export needed symbol need use autoconf check detect symbol exported use directly add patch stock upstream kernel needed reason easily track additional symbol needed exported patch also used anyone willing rebuild kernel requirement rhel5 version export symbol patch applied chaos kernel additional fix implement vmem_size function using macro updated use linux_obj instead linux module.symvers build product linux_obj linux properly detect exported symbol macro updated add include2 linux include search path allow proper compilation kernel target build directory source directory,,
6761,eb7c7f44e8b7630f027cf92e0490062428f7fced,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-02-25 21:06:15 +0000, , changed ptob btop mult div bit shift added necessary include page_shift,,
6762,7819a92a9bb9e1bc5dd9f50bc644baf39f2946c9,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-02-22 03:05:40 +0000, , added btop moved ptob include sys param.h,,
6763,4327ac3ff93b7aa47d20c184d34fb1f2202b7ab5,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-02-22 03:35:51 +0000, , changed z_uncompress prototype match one solaris fix compilation warning,,
6764,a1cf80b493137b00d9111d4d15405a12237ea9bd,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-19 12:28:10 -0800, , matching kmem_free fix use free case see commit full description issue addressed commit slipped mind,,
6765,99639e4a13306c3809b52e487d4343d756fad2e2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-19 11:26:17 -0800, , add zone_get_hostid function minimal support added zone_get_hostid function global zone supported therefore function must called null argumment additionally added hw_hostid_len define updated instance hard coded magic value used good riddance bad rubbish,,
6766,d164b2093561a9771db07346e6fffc9ca19427a2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-18 12:51:31 -0800, , rebase master b108,,
6767,63a93055fb6cfddebe31c791f7df86b14942ca9d,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-18 10:16:26 -0800, , coverity 9657 resource leak accidentally leaked list item error path fix adjust error path ensure allocated list item yet added list get freed simply add new goto label slightly earlier use existing cleanup logic minimize number unique return point,,
6768,02c7f164946e86048721a8c1af6ada3f25c3a78c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-18 10:09:01 -0800, , coverity 9656 forward null false positive callpath walked impossible function ensure kcp kcp_kcd initialized null however harm making explicit test case adding line clearly set correct analysis,,
6769,1315c884379965af367d1a38c695f73ad7d6e0c1,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-18 09:48:07 -0800, , coverity 9649 9650 9651 uninit check originally added detect double initialization mutex type find unfortunately coverity right small chance could trigger assertion accident uninitialized stack variable happens contain mutex magic particularly unlikely since poison mutexs destroyed still possible therefore simply removing assertion,,
6770,bb01879ebe5ba5d8e2c2177d3b1ce0272c17ce07,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-17 16:41:08 -0800, , coverity 9654 9654 use free vmem_free implemented macro using operator evaluate argument performed free evaluating size would deference free pointer resolve problem invert ordering evaluate size first evaluated caller passed function ensure caller something reckless like performing assignment part size argument still perform simply get removed macro course nobody sort thing case,,
6771,15dc8b072e77cf69b36e3df94782af4801d5e8cc,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-17 16:30:58 -0800, , coverity 9652 9653 effect removed assert effect definition size_t always unsigned type thus always,,
6772,014b1d6f54dc7236a7572533f9e72ec459f1abd4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-17 16:24:26 -0800, , coverity 9641 buffer size splat_test_init initialized short short test name overran static length buffer splat_name_size fixed increasing buffer length byte,,
6773,9b1b8e4c2459a02fc230cdda65b13908f263fd36,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-17 15:52:18 -0800, , kmem slab magazine ageing deadlock previous magazine ageing sceme relied on_each_cpu function call cpu turn could deadlock also relies ipi based on_each_cpu avoid problem per magazine delayed work item created indepentantly scheduled correct cpu removing need on_each_cpu additionally two unused field removed type hold previous cleanup struct work_struct work struct timer_list timer,,
6774,1a944a7d0b1d9e62c7ac34d9041300007a656a17,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-13 10:28:55 -0800, , kmem slab fix continue changed back break commit original correct added comment ensure doe happen optimized moving destructor call spl_slab_free outside skc skc_lock minimizes length time spin lock held allows destructors invoked concurrently different object bonus make safe although unwise sleep destructors,,
6775,fce5ef8306f0413c1cede818fd6534c5b3dd1771,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-12 15:04:36 -0800, , build system update added default build flag kernel module wstrict prototype werror,,
6776,f6c5d4ff88937fd69c938e0bc6ea11ad541e0a48,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-12 14:45:22 -0800, , build system update added default build flag wall wstrict prototype werror wshadow added missing makefile include subdirectory,,
6777,37db7d8cf9936e6d2851a4329c11efcd9f61305c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-12 13:32:10 -0800, , kmem slab fix default changed match solaris aged slab checking occurs every skc skc_reap tunable added whichs allows caller cap number slab reclaimed solaris eligible slab always reclaimed still default behavior however suspect always wise reason next comment added cond_resched walking slab object free list soft lockup observed freeing large number vmalloc slab objets sks sks_ref check change incorrect break continue ensure slab checked spl_cache_age reworked avoid deadlock occured slept waiting completion spl_cache_age waiting magazine reclamation finish required longer wait shifted back using instead spl_on_each_cpu approach course bad idea due memory allocation ricardo pointed,,
6778,f500ccff35a55d04e7f6b8ddb54ff6e54e9c5d70,icardo M. Correia <Ricardo.M.Correia@Sun.COM>, 2009-02-07 00:53:39 +0000, , minor bug fix due maxoffset_t constant large bit system,,
6779,e50ad76da5379916a2b2942e4617c6670fb43b27,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-05 13:34:51 -0800, , prep 0.4.2 tag,,
6780,4ab13d3b5c2d0724632dd29c0970ff7df00985f5,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-05 12:26:34 -0800, , additional linux integration added support solaris swapfs_minfree swapfs_reserve tunables additional availrmem available return reasonable value reasonably analogous solaris meaning linux return sun free inactive page since easily reclaimable tunables available proc sys kernel spl may need little adjusting observe real behavior default mapped similar linux counterpart others straight opensolaris default,,
6781,36b313dacf2f60f526fe98b7e9d1a6bbcbb250d2,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-04 15:15:41 -0800, , linux integration device special file support added provide reasonable value global solaris variable minfree desfree lotsfree needfree value set sum per zone linux counterpart close enough solaris consumer non gpl app link spl use udev interface mean non device special file created added poor man udev cause spl invoke upcall create basic device minor registered minor unregistered use vnode interface unlink special file,,
6782,31a033ecd49c2f691d6a377db2882ed941f47481,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-02 15:12:30 -0800, , 2.6.27 portability change added configure check determine older argument version on_each_cpu used new argument version retry argument dropped new api never used anyway updated work queue compatibility wrapper old way worked pas data point initialized workqueue new api assumed work item embedding structure container_of find data pointer updated skc skc_flags unsigned long type checked bit operation silence warning updated autogen product splat test accordingly,,
6783,f220894e1fc86cbfaf073dc4cca519887c41e78e,rian Behlendorf <behlendorf1@llnl.gov>, 2009-02-02 08:53:53 -0800, , make number system taskq thread based node core node done linux system task,,
6784,10a4be0f0369b80c44e013513acf7ad36f64cfaa,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-30 21:24:42 -0800, , update thread test max_time,,
6785,416bae036bd1113a6102be4589dd47cee8d2b08a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-30 21:11:42 -0800, , add new workqueue header,,
6786,ea3e6ca9e595ebfba82b964ee2eaf1ddd7076f0f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-30 20:54:49 -0800, , kmem_cache hardening performance improvement added slab work queue task gradually age free slab cache used recently optimized slab packing algorithm ensure slab contains maximum number object without create large slab fix deadlock never call kv_free skc_lock unlink object slab cache attach private work list content list subsequently freed outside spin lock move magazine create destroy operation local cpu performace optimization minimize usage large per cache skc_lock includes addition kmc_bit_reaping bit mask used prevent concurrent reaping defer new slab creation reaping occuring add bit mask set cache destroyed used catch task accessing cache destroyed add comment function additional comment try make everything clear possible major cleanup addition splat kmem test rigerously stress cache implementation look problem includes correctness performance test updated portable work queue interface,,
6787,c65e71073f45e6e549c825969740cb15a96ea547,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-26 21:58:32 -0800, , refresh type topgit git reference,,
6788,34e71c9e97f4d0d2b3ede850d016a7de558b0f3c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-26 20:10:23 -0800, , remove debug check accidentally left place prevent slab cache working system core,,
6789,0f233eac33e40d58386a8faa5656ee59bbfccfce,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-26 16:47:49 -0800, , pull blkdev header sunldi useful structure definition helper function,,
6790,48e0606a525527bef5b50172b4967a3f6cf1aa4d,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-26 09:02:04 -0800, , implement kmem cache alignment argument,,
6791,e4f3ea278e05b5b23e857cf6cf061caddf5ce148,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-23 08:59:11 -0800, , remove stray macro,,
6792,3f4126739dc5c2a0b10ec1f6143ec43028755aa4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-22 09:58:48 -0800, , sleep uninteruptibly waking early may result crash,,
6793,511176398c81136786d5f6a955dcc6509f98f573,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-22 09:41:47 -0800, , update debug.h standardize verify3_impl error message debug non debug mode,,
6794,064bbffb633dfbc85a29843b421925214742c7e4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-21 11:46:02 -0800, , prep 0.4.1 tag,,
6795,4710ede86aa9ea299e58e8f7293ee7c493a53ce0,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-20 15:43:44 -0800, , add git master,,
6796,b6b2acc66e9621ec8c218875b2e5395d0d1841fe,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-20 13:39:35 -0800, , minor fix compiler warning kmem_tracking enabled,,
6797,ae3b87f908fe67f8be739b7f7c71bb5fdd742552,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-20 12:47:53 -0800, , kmem_tracking turned missing free list test fix leak,,
6798,15270e003ed666ad965ab9f73b390846823998fd,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-20 11:59:47 -0800, , ensure ndebug doe get added spl_config.h set build option allows kernel module use spl_config leverage reset config check without getting confused debug option,,
6799,fb5f0bc83330c8a0236c4d34a23723ac1974971a,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-15 13:59:39 -0800, , rebase master b105,,
6800,5566ec0959a17776265204d24a186ffeb09cee7f,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-15 10:47:24 -0800, , refresh libtool,,
6801,617d5a673cd16aa91fa9668b94cc385094fae852,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-15 10:44:54 -0800, , rename module module update reference,,
6802,f6a19c0d37992755ed6b1b50344047537a1efe5c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-13 11:45:02 -0800, , make splat load message cap consistency,,
6803,b172b6dfdec0c14ddd5bf3b1d6a81b07c63788c5,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-13 11:43:05 -0800, , taskq_dynamic yet support create global taskq flag crash debug enabled also bother dumping debug debugging diabled pointless,,
6804,b871b8cdef68bdfa99e0fdc45734af810b75e998,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-13 09:30:59 -0800, , rework ddi_strtox call native implementation actuall support einval erange error handling plus add regression suite ensure got atleast mostly right,,
6805,1e4ed6c9907570d5844186b3f559665bef8ff041,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 16:04:44 -0800, , add missing stub header,,
6806,121d48c97d9ad4455062bc289d78a872a7e021b7,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 15:30:53 -0800, , add basic ksiddomain_rele support allocation,,
6807,f590d7d37469a45f3da17bd30c3c0b0396004ac1,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 14:30:30 -0800, , make sure export,,
6808,0e4141494611ec11b08c411e25d1fd878691de56,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 14:04:13 -0800, , add two new stub header,,
6809,97735c39e37f1b644ba09755173dd2b3de95ab47,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 13:59:39 -0800, , add vop_seek,,
6810,d83ba26e1819ca3c0fcfc8e108db86f4c78a5d54,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 10:49:47 -0800, , add missing policy includes add missing sun ddi bit,,
6811,70997fb4b1d6e7601209f1dfc3ec27d0dd379be6,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 10:06:18 -0800, , add share.h stub,,
6812,71c8ab9c685f85f75d451cc98e18bc83565addd3,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 10:05:03 -0800, , drat fix missing,,
6813,23f5c4c2814caabd446a16d1d18df2f156465e72,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 10:03:37 -0800, , add missing fid_t type,,
6814,703e7a3cf413265bda05349aa95919e3d42582ae,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-09 09:47:27 -0800, , add stub three includes,,
6815,434d1d0f8f099747b275de1668f7522491e248f5,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-07 13:48:36 -0800, , add active test splat list test,,
6816,d702c04ff190b17d0f3f1dbee23e769398b82c39,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-07 12:54:03 -0800, , add splat test list handling,,
6817,4c18c39ecb2b1876ca067969f245bffdff6da56b,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-06 09:47:00 -0800, , add include sys compress.h header,,
6818,160c63ab763f620592fbdc8271a3f7b66e080b74,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-06 09:23:13 -0800, , add p2boundary macro,,
6819,7adbea4141d9ac2df0a1fc622747090d6ea91c32,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 16:14:38 -0800, , pull default page typedefs,,
6820,0f372044172b3793a32f88741baaea146614023d,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 16:09:21 -0800, , add dtrace_probe,,
6821,b53c565e6513547b6d4da9cee47b5a82d6422d47,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 15:37:07 -0800, , stub u8_textprep.h inclusion purpose,,
6822,e9cb2b4f6458220c8b2ff1317caa022ac2ead3d4,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 15:08:03 -0800, , add system taskq support,,
6823,42bcb36c8987b0b11411ce6cf8339694b624a17c,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 12:03:23 -0800, , add unicode library,,
6824,8a2b328b18f52ff411ba6b223a3b11461c841135,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 11:32:08 -0800, , remove u8_textprep implementing nightmare yet,,
6825,36b849fa517f04d9145aa6874e5398bb01cef4d7,rian Behlendorf <behlendorf1@llnl.gov>, 2009-01-05 11:10:13 -0800, , remove zdump unrelateds command added simply due command convention,,
6826,f3fc90c249268f888a105cbcaab05821f875bb4a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 16:48:15 -0800, , include header,,
6827,925ca8cc011007ef56e497607a466c0696595775,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 16:27:36 -0800, , add sys thread.h,,
6828,bb9cfc6cc3918a2458a92d38e926fd5b04efa817,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 15:59:36 -0800, , define needfree,,
6829,2b88beb74f0654a229d13b191bde441c4a3f4a5a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 15:40:20 -0800, , add timer.h header,,
6830,bbdec3be06d38b2cf4fd83043b9424e0a240976a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 15:38:15 -0800, , add stub,,
6831,de79fdd3a83acb63c2aedddb4b67f0c9379dd608,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:32:07 -0800, , move sunddi include,,
6832,9d457afd1b39e6bb5eccf0de80d82ef08b7c190b,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:30:04 -0800, , add sunddi uio,,
6833,dc0f920710ecaa023df893216987c318c2e2b721,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:25:52 -0800, , minor update,,
6834,926e2b6058867123809979c2e6bf5dbcc13fa4a2,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:18:39 -0800, , pull lock type,,
6835,c1d42c2f1db1b9c7e89bfbfd79a52ca9de78a404,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:05:50 -0800, , add header,,
6836,f5b92a66adc809499972a4012a9cccdd2a2fd6ef,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-23 13:03:09 -0800, , add missing header upstream stock kernel context expects,,
6837,810db7e0a2186eaedf888ab12283f2d796d9c5e9,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-12 13:41:20 -0800, , remove zcommon reference merged zpool,,
6838,6b2c60acca39ef3468797095d3a4162e6ce69786,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 15:38:59 -0800, , moving lib libspl linux libspl branch,,
6839,a4076c7544bdbdc0ac0fe20f4ef86c2aa06862fb,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 14:21:14 -0800, , script update,,
6840,c4911ece249bad4329e1ed6a9de6fba51bd06f1f,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 14:16:55 -0800, , move library file lib,,
6841,b453b61272db34cd097f8636f57033785b00d932,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 11:22:02 -0800, , fix libspl move wrong place,,
6842,4b7ee081ce0c36750d8039ec98c160a0a1ec471b,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 11:16:38 -0800, , fix typo,,
6843,77755a5771c339a1d96c36ab1a8f1e41e14507f0,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 11:14:49 -0800, , add missing file,,
6844,172bb4bd5e4afef721dd4d2972d8680d983f144b,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-11 11:08:09 -0800, , move world zfs seperate module build tree,,
6845,9e8b1e836caa454586797f771a7ad1817ebae315,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-10 12:43:20 -0800, , remove libumem try remove dependency entirely best move simply use official library build convenience library,,
6846,5e97ed8493584c0d331592894de401edd89f5bab,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-09 14:14:00 -0800, , move vmem libumem,,
6847,48343be6a309efe3787ed8c539f10b376ece5ef8,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-09 13:32:01 -0800, , temporarily move taskq util libzpool directory broken lib module,,
6848,2f40ac4d9e154f1d1ca4073ef8c3bfba92093c86,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-08 16:38:46 -0800, , minor tweak update script,,
6849,2b67f51fb663abe1a4a5cb969c73d0e10bcafe84,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-08 16:20:25 -0800, , attempt move kernel.c topgit,,
6850,2ee63a549ae18875ded60ec2f0fc7315e076c326,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-05 16:23:57 -0800, , add struct ddi_strtox function,,
6851,857c63f413b16f723ebd408b3b753d1a45bff924,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-05 16:20:09 -0800, , refresh,,
6852,96072c88e22486c05a0bfc6c490d9e0c59fbd7e8,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-03 15:43:56 -0800, , add userspace zfs_context file,,
6853,b128c09fbee863d15be744a2ce602b514eddbe3a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-03 12:09:06 -0800, , rebase opensolaris b103 process removing code originate opensolaris source change reintroduced topic branch easier tracking,,
6854,b6097ae55adc8edb7149c4d433fa45a6ea3c45e7,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-02 08:47:21 -0800, , remove stray stub kernel file brought linux kernel module patch,,
6855,7ebbc0c799748b8e13cdfcf7c96e11b3d331549b,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-01 16:15:29 -0800, , finish removing non upstream bit master,,
6856,ef76e2f5ea42f9fab723ee79d17d69fe7caf1e13,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-01 15:41:33 -0800, , removed build system master branch relocate linux zfs branch,,
6857,42baae9615b86e48e0c8c37eb83b409b8afa5e76,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-01 15:38:41 -0800, , removed build system master branch relocate linux zfs branch,,
6858,fe441a9050c2309b222976a70385e19fafa1d569,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-01 15:34:53 -0800, , relocate copying copyright remove readme cruft,,
6859,ef2e1711d2d515ce48fd0bf4e070ed60d610f4a9,rian Behlendorf <behlendorf1@llnl.gov>, 2008-12-01 14:49:34 -0800, , add cddl license file,,
6860,100eb88b46781b3777b59a81cc2e800ff386d9f3,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 15:48:14 -0800, , update zpios trivial workload,,
6861,62b749c8c846442f37f41c8ae5c612d75308c046,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 15:32:39 -0800, , working version macro config,,
6862,f0e648ca02f55bb2c4bc328656769a0c529f683a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 14:29:45 -0800, , make everything macro cleaner way,,
6863,e833fd4a5c1fc22077c36782070837553f60b258,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 14:06:23 -0800, , additional buidl system cleanup starting move kernel specific build info config kernel likewise user specific build flag config user seems like reasonable way,,
6864,dbceaca71db4d7989acdef950ae23d4c92a55b67,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 13:28:44 -0800, , prefix meta_alias zfs_,,
6865,72e7de60262b8a1925e0a384a76cc1d745ea310e,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 13:26:05 -0800, , prefix meta_alias spl_,,
6866,cb9c044bf698cc063b986baa7f25cfcf4c76f54e,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 13:11:33 -0800, , add spl prefix meta_ defines,,
6867,abc3ca149d719cca5c807f38030d01f61e97d87d,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 13:09:37 -0800, , prefix meta_ defines spl prevent colisions include spl_config.h dependent package may leverage autoconf check already run aganst kernel,,
6868,c9a913795679c3f5895de8258f31269530c5eaed,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 12:53:24 -0800, , first step meta build system cleanup,,
6869,895ff83c08b99755d1817b71489f486212b6ad14,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-26 09:57:29 -0800, , rebase git svn version 0.4.0,,
6870,7860010a723224a36a904005205a59bbb9efab4a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-26 17:44:40 +0000, , tag spl 0.3.5 git svn http svn spl tag spl 0.3.5 184 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6871,02a794ae3ffa15c8cfd7e95b5365651e2306127e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-26 17:43:44 +0000, , add libtool script git svn http svn spl trunk 183 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6872,7212e2cd2710338f326f0347d987f761bade4d58,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-26 17:07:59 +0000, , add missing autogen product git svn http svn spl trunk 182 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6873,dd529a30accac95bf738e369d72c825fcb25686e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-26 17:01:45 +0000, , include meta file support git svn http svn spl trunk 181 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6874,bf9f3bac95bfccbc765f09f5b372197184cce8d7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-24 23:49:18 +0000, , add autogen.sh product configure.ac use put autoconf product auotconf autogen.sh use copy avoid symlinks remove error redirection run aclocal libtoolize git svn http svn spl trunk 180 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6875,536640fe2908070f22d340ec23cfa9224df97aa3,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-24 11:56:48 -0800, , minor autoconf build fix fixed builddir config added missing macro removed autoconf makefile,,
6876,22b47b55363f41ce526225e8e1d22aebc84442dc,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-24 11:29:11 -0800, , use config directory enable maintainer mode,,
6877,a54f863a14edbbd2c5bd14774c8f1ead32ed7bf5,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-24 11:16:19 -0800, , restructure autoconf around config directory,,
6878,5b1a72b34269450274b6901b81eeb35f8cbf2f82,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-21 10:55:10 -0800, , update git doc removing remaining patch soon applies topic branch,,
6879,9fc325737bd0fc5f5539763570cdde792859326a,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-20 16:54:29 -0800, , update git documentation describe new dac setup,,
6880,34dc7c2f2553220ebc6e29ca195fb6d57155f95f,rian Behlendorf <behlendorf1@llnl.gov>, 2008-11-20 12:01:55 -0800, , initial linux zfs git repo,,
6881,6a1c3d418a94bd98ef47e6bedb15c85a31398d6f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-13 21:43:30 +0000, , include sys sunddi.h module spl spl module.c removed default udev support sunddi implementation gpl symbol support optionally available spl consumer define license module gpl using module_license gpl macro git svn http svn spl trunk 179 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6882,5457aee1a3912396a8b63d4491724a51187c598c,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-06 00:51:31 +0000, , prep spl 0.3.4 tag git svn http svn spl trunk 177 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6883,83e5edb47db1eafdb320790e4937e7aa3005a296,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-05 22:06:56 +0000, , remove instance unused variable git svn http svn spl trunk 176 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6884,7ea1cbf5b2b5489ce1a5f408d3e101e0e7447205,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-05 21:43:37 +0000, , add proper error handling case thread created instead asserting simply abort test wait task created finish return esrch back user space component git svn http svn spl trunk 175 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6885,36833ea4e40833811269d86112043cf1db933009,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-05 21:27:31 +0000, , slightly increase splat_name_size ensure string always null terminated git svn http svn spl trunk 174 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6886,ac569b72a10d5676a5a572a8aa44bfab9b29cbac,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 23:38:29 +0000, , fix small corner case test infrastructure might end non null terminated buffer test name desc long copy byte git svn http svn spl trunk 173 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6887,12018327f5a42304971b816d64756a47cb1bed9f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 23:30:15 +0000, , minor fixups sprintf used instead snprintf known max length additionally function return value cast void make explicit value needed git svn http svn spl trunk 172 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6888,0498e6c5853a37b2d41e043fd566a752281f2185,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 23:18:31 +0000, , removed useless check fix forward null splat kmem_cache test ctors dtors git svn http svn spl trunk 171 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6889,3bc9d50eaa95af0c5de6e5408bf91b0001b56280,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 22:51:31 +0000, , add missing error handling case memory allocation fails git svn http svn spl trunk 170 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6890,8e80a04c043244eb2fdf0541b5ed86bd53d71736,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 22:42:58 +0000, , simple ignore return type never used cast void git svn http svn spl trunk 169 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6891,55c59e6153509887463d258c41c87c100f7f851f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 22:39:29 +0000, , add proper error handling one atomic test case event kernel thread properly spawned git svn http svn spl trunk 168 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6892,b02e9b2415d1888222927ace7416821873d4b0cf,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 22:24:55 +0000, , add missing initializer needed unlikely error case git svn http svn spl trunk 167 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6893,b07335c1a77c6eb2b208a604ea97d3a438c69ec1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-04 00:00:16 +0000, , ensure gpl symbol exported gpl remove gpl symbol __gethrtime git svn http svn spl trunk 166 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6894,c8e60837b78501851b19e1d02ed78e165c7c4103,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 22:02:15 +0000, , spl fix kmem track oops.patch fix oops unloading module case memory tracking enabled memory leak comment code explains problem spl fix assert verify ndebug.patch fix assert verify macro non debug build verify macro supposed check condition panic even production build assert macro need evaluate argument also bit fix git svn http svn spl trunk 165 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6895,c22e7a427bfbea456e783c918fad817f3c4f34ce,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 21:51:33 +0000, , solaris km_sleep ensures success least hang forever said working finite resource like memory failure really always possibility would far better longer term zfs code could weened assumption properly handle case allocation fails still applied patch spl 0.3.4 since layer supposed emulate solaris closely possible git svn http svn spl trunk 164 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6896,a0f6da3d9590ece3c7a056f235aab28880dbd67c,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 21:06:04 +0000, , add test configure system already supprt atomic64_t type spl kmem cleanup.patch move debugging code sys kmem.h spl kmem.c huge macro hard debug bloating function allocated memory also fixed minor problem including bit fix reported memory leak due using wrong free function git svn http svn spl trunk 163 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6897,550f1705259c9b97ad158354a921003bbbfe819f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 20:34:17 +0000, , apply two nice improvement caught ricardo spl div64.patch much intrusive fix undefined bit division symbol compiling dmu bit kernel spl atomic64.patch workaround bit kernel atomic64_t git svn http svn spl trunk 162 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6898,749045bbfa3302f8917ef681373775245b241698,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 20:21:08 +0000, , apply nice fix caught ricardo spl fix taskq spinlock lockup.patch fix deadlock bio completion handler due taskq code prematurely enabling interrupt another spinlock disabled ide irq handler git svn http svn spl trunk 161 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6899,f6c81c5ea7ba171bdb9e6d3a29c9e2a7fa6896ad,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 20:07:20 +0000, , reviewed applied spl gpl symbol ricardo remove dependency gpl symbol using symbol simpler name portability adopting spinlock based solution remove dependency git svn http svn spl trunk 160 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6900,d50bd9e22179ec4c687bcb0d296a90c8039eeaae,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-11-03 19:53:23 +0000, , reviewed applied spl gpl symbol ricardo remove dependency gpl symbol needed panic time notifier funcationality never used improves portability git svn http svn spl trunk 159 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6901,e73187714d0a6b726d059e3aef426bc7a8efeea4,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-12 05:18:41 +0000, , minor tweak handle system restrictive udev rule older system using udev git svn http svn spl trunk 158 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6902,25557fd8842deca017f8da05da22e1352389f736,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 23:47:44 +0000, , sigh compat fix almost right 2.6.9 2.6.26 kernel git svn http svn spl trunk 157 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6903,b61a6e8bdc5ca52a09ff02a6ce2e92742725f8cc,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 22:42:04 +0000, , pull initial bit support patch git svn http svn spl trunk 156 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6904,3d061e9d1092364be132fc3f6c478add94b4e482,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 22:13:47 +0000, , commit bulk remaining 2.6.9 2.6.26 compat change git svn http svn spl trunk 155 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6905,322640b7b5a5336e4681d77778736339164a4501,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 19:10:14 +0000, , include linux uaccess.h compat change git svn http svn spl trunk 154 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6906,86de8532a9106c28167eac07f1fd32758e5555dd,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 17:56:40 +0000, , 2.6.26 compat change git svn http svn spl trunk 153 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6907,6a6cafbe8dd1e33530e726ee7d1c3acc340c6c15,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 17:20:11 +0000, , pull timespec list type compat change support building wider range kernel git svn http svn spl trunk 152 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6908,86149aa255dcfb145bb4f2ad66b80dce4d620f34,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-11 16:11:37 +0000, , resolve incomplete type building 2.6.26 git svn http svn spl trunk 151 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6909,46c685d0c47df8c6271c8914a03d256a5b1f7bd3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-10 03:50:36 +0000, , add class device portability code two autoconf test added cover possible apis 2.6.9 2.6.26. attempt use newest interface available fallback oldest rework change proposed ricardo rhel4 git svn http svn spl trunk 150 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6910,877a32e91eb69b15744aa85ad22db385bd522b60,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-06 04:52:39 +0000, , pull fls64 compat change spl rhel4 compat.patch allow greater compatibility kernel pre 2.6.16 git svn http svn spl trunk 149 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6911,7afde631f6483cc5e2da95a84a98085e7453cf52,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-05 04:16:09 +0000, , start bringing ricardo spl rhel4 compat.patch chunk time audit chunk finish moving spl entirely linux slab spl implementation differs slightly proposed version spl continues export solaris type function conflict linux slab module using interface must include spl slab also intend use linux slab must explcitly undef macro remap functioin spl_ equivilants nice side effect dropping entire linux slab need autoconf check anymore kept messing slab api endlessly git svn http svn spl trunk 148 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6912,73035a29eb2cea265de650e26be3cc5a0e3efcb0,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-08-04 23:59:08 +0000, , apply ricardo spl condvar poison.patch fix early memory poisoning condvars git svn http svn spl trunk 147 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6913,5587df4d8ea903cd0a6b0e61e6b1abf969e10681,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-07-09 19:11:29 +0000, , trivial commit remove whitespace git svn http svn spl trunk 146 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6914,97f274d46d8eb330f806cd445cfd186446aeb1de,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-07-07 22:15:04 +0000, , fix race kmem_locking test reduce max memory usage kmem_locking test low memory machine git svn http svn spl trunk 145 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6915,f78a933f8ad5fa39c8af08d4ff792a387b906baf,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-07-01 04:06:09 +0000, , two easy fix caught debug enabled git svn http svn spl trunk 143 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6916,3ba97a6743ee69ada9032cc4b111bca25989638a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-07-01 03:42:24 +0000, , update info prep tag well something embarased distrubute tommorow git svn http svn spl trunk 142 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6917,a1502d76aef90d32ac779c1ae3cf89a80d9d591d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-07-01 03:28:54 +0000, , remove hash functionality slab favor direct lookup based spl_kmem_obj_t tacked end object actually back allocing large chunk slab partitioning ton wasted space may suffer performance hit however due alignment issue remove remaining depenancies linux slab implementation standing better worse rework slab either kmem vmem based neither kmc_vmem kmc_kmem specified make decent guess work best based object size additionally provide kmem_virt function caller use see virtual physical address minor fixups test suite git svn http svn spl trunk 141 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6918,1c3832576db0f692ec066b4059feb4a9a695a575,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-28 20:03:11 +0000, , remove stray call spl_cache_free remove cycle count costing overhead hurting performance pretty badly heavily used cache also thinking hash may hurting well might worth sticking pointer little space alloced object git svn http svn spl trunk 140 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6919,fece7c99bf18c04993b679c6fca0dd4669361716,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-28 05:04:46 +0000, , victory reworked cache large object based vmalloc memory alloc slab roughly spl_obj_size block memory place slab descriptor slab object descriptor object greatly reduces vmalloc lock contention still minor cleanup remains fine tuning working pretty well git svn http svn spl trunk 139 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6920,ff449ac40691903c7f49cb89b1a02696b6c37aa7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-27 21:40:11 +0000, , slab improvement getting close something work well expected workload improvement commit include added define optionally set debug_kmem defined per allocation tracking allows get lightweight kmem debugging enabled default pretty light weight looking memory leak briefly enable per alloc tracking added spl simply using timespec primatives within module added per spinlock cycle counter slab attempt run lock contention issue contended lock vmalloc going leave cycle counter place little convinced arn locking improvement possible slab added proc interface slab export per slab cache statistic proc spl kmem slab analysis reworked spl_slab_alloc function allocate kmem small allocation vmem large allocation improved thing considerably futher work needed git svn http svn spl trunk 138 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6921,e9d7a2bef56cf159d0f876efc38209a496dd0b66,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-26 19:49:42 +0000, , fix memory corruption caused overruning magazine repopulating plus fixed suble race part code catching finally fixed small race kmem_test8 git svn http svn spl trunk 137 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6922,4afaaefa050f02b6b993468aafdfc457dd508b2a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-25 20:57:45 +0000, , implement per cpu local cache seems bough another factor 10x improvement smp system due reduced lock contention may put ballpark needed still improve thing numa system creating additional cache per memory node instead current global pool luck needed also take another look locking everything working good chance tighten little bit improve thing little kmem_lock time sec slab objs hash kmem_lock tot max calc tot max calc size depth kmem_lock 0.000999926 192 192 32768 kmem_lock 0.000999926 128 128 32768 kmem_lock 0.000999926 128 128 128 32768 kmem_lock 0.000999926 128 128 256 32768 kmem_lock 0.000999926 128 128 512 32768 kmem_lock 0.000999926 128 128 1024 32768 kmem_lock 0.000999926 128 128 2048 32768 kmem_lock 0.000999926 128 256 256 4096 32768 kmem_lock 0.003999704 256 768 736 8192 32768 kmem_lock 0.012999038 512 1408 1312 16384 32768 kmem_lock 0.051996153 1024 3072 2976 32768 32768 kmem_lock 0.181986536 187 184 2048 5984 5888 65536 32768 kmem_lock 0.655951469 342 339 4096 10944 10848 131072 32768 git svn http svn spl trunk 136 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6923,d46630e0f316a39899fa8ee02365e015303f2a5d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-24 17:18:15 +0000, , first locking issue due semaphore used trying overly clever context switch semaphore busy destroying performance converting simple spin lock bough factor said still good enough test show bad performance still cpu bound logical fix need implement per cpu hot cache minimize smp contention linux solaris hoping without look like kmem_lock time sec slab objs hash kmem_lock tot max calc tot max calc size depth kmem_lock 0.022000000 224 177 2048 32768 kmem_lock 0.039000000 128 416 404 4096 32768 kmem_lock 0.079000000 256 736 672 8192 32768 kmem_lock 0.158000000 512 1536 1504 16384 32768 kmem_lock 0.345000000 105 105 1024 3360 3358 32768 32768 kmem_lock 0.760000000 202 200 2048 6464 6400 65536 32768 git svn http svn spl trunk 135 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6924,44b8f1769f532ecc9e469511a469f58f0c065877,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-23 23:54:52 +0000, , add another kmem test check lock contention slab allocator serious contention issue needed way easily measure much following batch change improve thing currently thing quite bad allocator highly contended interestingly seems get worse non linear fashion ... sure yet figure tomorrow kmem kmem_lock pas kmem_lock time sec slab objs kmem_lock tot max calc tot max calc kmem_lock 0.061000000 2400 1894 2048 kmem_lock 0.157000000 134 125 128 4288 3974 4096 kmem_lock 0.471000000 263 249 256 8416 7962 8192 kmem_lock 2.526000000 518 499 512 16576 15957 16384 kmem_lock 14.393000000 990 978 1024 31680 31270 32768 git svn http svn spl trunk 134 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6925,5cbd57fa91076a8001dff0fb6e864147d3a7c286,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-13 23:56:26 +0000, , fix minor chaos fc9 kernel discrepencies build git svn http svn spl trunk 133 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6926,2fb9b26a85ce63dab740821382f1208c8fed6262,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-13 23:41:06 +0000, , module sys kmem slab.c implemented slab longer based linux slab complete implementation new slab behaves much like solaris slab linux slab git svn http svn spl trunk 132 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6927,cfe5749941bafbc0bfc069aff00fa0b930d741fa,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-06 23:11:34 +0000, , minor tweak ensure kstat value printed correctly x86_64 least additionally fix minor typo .ul ulong case git svn http svn spl trunk 131 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6928,c58f753ddb2e8079a349d50682a73513f433315d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 23:28:29 +0000, , prep 0.3.2 tag git svn http svn spl trunk 129 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6929,41cf38df92127eba2b0f51812bcd16279daa42bf,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 22:52:13 +0000, , add missing quiet warning ndebug case git svn http svn spl trunk 128 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6930,3ce1bc96f9c21b8ee22562fc175d8fb59e86a51d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 21:25:57 +0000, , fix bad grammer git svn http svn spl trunk 127 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6931,475cdc788e2ab926b4604724f3c7b4c65d5c1345,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 21:09:25 +0000, , use config_slub detect slub use add assertf ndebug build fix minor issue various debug build flag git svn http svn spl trunk 126 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6932,a02118a89d5121b7c81827d4fdba770136896b35,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 06:09:16 +0000, , whoop fix minor proc issue slipped recent change ensure top level spl removed git svn http svn spl trunk 125 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6933,c30df9c8630b3b05cfbbf5c1700030f47e5b77c7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-04 06:00:46 +0000, , fix ensure mutex_init never fails case enomem retrying forever think ever seen happen clear code inspection would immediately crash enable full debugging check.sh sanity test might well get much debug case failure reworked list kmem cache tracked spl hash key based address kmem_cache_t speed constructor destructor shrinker lookup needed newer kernel removed destructor support updated handle case config_slub defined slub would occasionally merge slab cache resulted non unique key hash lookup fix detect slub enabled set needed flag prevent merging ever occuring new kernel removed proc_dir_entry pointer item registered sysctl mean long sneaky manually insert thing sysctl tree simply walking proc tree forced create seperate tree thing easily support via sysctl interface like git svn http svn spl trunk 124 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6934,691d2bd73332fcff869860b3e6a2e37a04f737f2,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-03 21:20:18 +0000, , update utsname use proper compatible interface avoid api issue git svn http svn spl trunk 123 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6935,684f787474561bb28e1217c5ae2d897aa80e1d87,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-03 20:58:55 +0000, , fix missing return resulting double unlock file file_lock hang subsequent sys_close quite sure fedora kernel caught bug chaos kernel glad convert remaining bug_on asserts git svn http svn spl trunk 122 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6936,fe81cb1c435e59c2f2a1d0ea210b24230cc8f22b,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-02 19:45:04 +0000, , add minimal set kernel patch need spl hopefully even needed next week git svn http svn spl trunk 121 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6937,f93f7c8dbe6b7bfd778f96f73f4f6e5c5e107254,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-02 18:41:30 +0000, , part previous autoconf commit git svn http svn spl trunk 120 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6938,57d862349b074974825e1228b7b51ac72e4ba2b3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-06-02 17:28:49 +0000, , breaking world little bit anyone going continue working branch next day suggested work 0.3.1 tag following change fairly extensive designed make spl compatible kernel range 2.6.18 2.6.25. relevant api change release added needed autoconf test check however tested extensively sort breakage fedora core rhel5 week              git svn http svn spl trunk 119 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6939,65a045dace36f9083b728aef731a56b789287a2a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-26 05:01:15 +0000, , make tag release cea urcl git svn http svn spl trunk 115 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6940,715f6251462d89be6473a37d0829f31cbb7b63a8,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-26 04:38:26 +0000, , add header proper ucrl number git svn http svn spl trunk 114 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6941,b2585b36d353dd537dcbe08992c2384214d6f103,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-21 21:11:47 +0000, , prep 0.3.0 tag tag used performance result date git svn http svn spl trunk 112 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6942,cc7449ccd612ed8567e7a8a8574ea6df1d5faa7d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-19 02:49:12 +0000, , properly fix debug support assert verifies etc compiled performance run bite bullet fully autoconfize debug option configure time parameter default debug support disable core spl build available module enable building spl enable particular spl debug support use follow configure option enable debug internal asserts enable debug kmem detailed memory accounting enable debug mutex detailed mutex tracking enable debug_kstat kstat info exported proc enable debug callb additional callb debug git svn http svn spl trunk 111 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6943,6ab69573ffc79db6fcd0539218e96ded41fcafc1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-15 23:39:19 +0000, , spl addition increase support updated zfs build git svn http svn spl trunk 110 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6944,56f924533023e39edfda09cf1a9c47b4abfe57c7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-15 17:32:41 +0000, , disable adaptive mutexs default always sleep add module option easy tuning git svn http svn spl trunk 109 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6945,4efd41189af62958f2aa5cf48941dd718d563d11,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-15 17:10:30 +0000, , rework condition variable implementation consistent primitive implementation additionally ensure gfp_atomic use allocation interrupt context git svn http svn spl trunk 108 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6946,a97df54e839fa7f823fdca2a814427c9e4db204f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-12 18:54:08 +0000, , enhanse thread interface something quasi inteligent function name passed used thread name leaving trailing _thread redundant strip make thread name far readable use strncpy spl mutex safe git svn http svn spl trunk 107 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6947,8464443f8d57a56da6cf4aac727374b8fbd9cd1a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-12 16:53:41 +0000, , add comment remember fix git svn http svn spl trunk 106 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6948,c6dc93d6a8814198165e28364c2941cd55a071a6,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-09 22:53:20 +0000, , default disable extra kmem mutex debugging aid performance easily enabled new stability issue uncovered git svn http svn spl trunk 105 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6949,5c2bb9b2c314bcac7579b13a99127eb7050a7b90,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-09 21:21:33 +0000, , stability hack solaris km_sleep set may fail get behavior added retry shim layer even though abusive least prevent crash additionally added proc counter easily check often happening fairly rare likely get worse worse longer machine git svn http svn spl trunk 104 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6950,04a479f7066ccdaa23a6546955303b172f4a6909,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-08 23:21:47 +0000, , add almost feature complete implemenation kstat chose support flag assert used add libkstat interface instead exported everything proc easy access git svn http svn spl trunk 103 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6951,d4c540de38a669851ccfde7a2d094621757c5995,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-07 20:12:44 +0000, , deal zfs quite stable tag git svn http svn spl trunk 101 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6952,427a782d7dde286857044515efa99d465ccf2516,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-07 19:33:01 +0000, , decrease kmem warnign threshold back page worse stack git svn http svn spl trunk 100 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6953,13cdca65ec6882df57ec06f8f9be14b2b3668a5d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-07 18:54:32 +0000, , add vmem memory accounting git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6954,404992e31ab16e5d128f73c6d716952a4eda463f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-07 17:58:22 +0000, , relocate stats_per proper proc sys spl mutex directory shift spinlock mutex list addition removal git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6955,4f86a887d88ef2d28fb14a020f91e0cd8757ed21,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-06 23:19:27 +0000, , remaining issue fixed reenabled mutex debugging ensure mutex_stats_sem initialized spin mutex_init git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6956,e8b31e84825d14d98930f165707687fad961b88a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-06 23:00:49 +0000, , updated rwlock reside file instead static inline updated rwlock safely initialized ctors git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6957,d6a26c6a328f811deee16a567b176cd5bcb882e4,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-06 20:38:28 +0000, , lot fix detailed kmem memory allocation tracking get spl module unload list memory allocation free original alloc e.g spl 15554 632 spl kmem.c 442 kmem_fini kmem leaked 319332 byte spl 15554 648 spl kmem.c 451 kmem_fini address size data func line spl 15554 648 spl kmem.c 457 kmem_fini spl 15554 648 spl kmem.c 457 kmem_fini tl_lock spl 15554 648 spl kmem.c 457 kmem_fini spl 15554 648 spl kmem.c 457 kmem_fini tl_lock shift using rwsems kmem implmentation simply locking improve concurency shift using rwsems mutex implementation additionally ensure never sleep init function non zero preempt_count interrupt disabled happen slab cache ctor dtor minor formating fix todo finish vmem memory allocation tracking vet spl primatives potential sleeping _init suspect rwlock implemenation doe fix like mutex implemenation git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6958,9ab1ac14ad955800ca070abc11dd031244efb65f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-05-05 20:18:49 +0000, , commit adaptive mutexes seems introduced new crash clear yet problem mutex implementation zfss usage minor taskq fix add new task end pending list minor enhansements debug infrastructure git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6959,bcd68186d8009957b751720a801e4c16bb272e83,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-25 22:10:47 +0000, , new improved taskq implementation spl allows configurable number thread like solaris version almost option supported unfortunately appears made absolutely difference performance number need keep looking bottle necking git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6960,839d8b438e1d877fb4a625eed51f556433cbd6b6,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-24 20:21:07 +0000, , update kmem.h properly use new debug subsystem git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6961,3561541c244da5ff6b0ded99a22bd1541bdb2a11,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-24 17:41:23 +0000, , prep 0.2.1 tag minor fix header use debug macro added proc sys spl version git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6962,1bac409fa3a7c0b4e09e43776ac063ef50efcfd6,artens2 <wartens2@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-24 17:24:02 +0000, , forgot update changelog git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6963,8100fe56f1d249afbb0232ac0a8ee6d598ad9e5f,artens2 <wartens2@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-24 17:07:56 +0000, , make sure calling __vmem_alloc __gfp_zero set memory allocated zero memory __gfp_zero passed __vmem_alloc git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6964,6e605b6e5824c300b9e1953fe4ac9c8fc15d695f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-23 21:19:47 +0000, , minor improvement taskq handling small step towards dynamic taskqs still need fully implemented git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6965,18c9eadf976dda5c4b36f86290e674ec3e85f7dc,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-22 22:22:02 +0000, , careful never use debug infrastructure either debug subsystem fully set debug subsystem torn git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6966,7e4e211333888ab99f32a75691e1f146597832ca,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-22 20:10:55 +0000, , give real version tag git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6967,b831734a4360aa7ae34a36e55bbe6a1c9a40b01e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-22 16:55:26 +0000, , stack usage enemy trade cpu cycle debug code ensure never add anything stack absolutely need debug code could removed production build anyway worried performance impact may also consider revisting mutex condvar implementation ensure additional stack used initial indication reduced worst case stack usage 9080 byte still large default stack forced run 16k stack reduce worst offender git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6968,7fea96c04f87a02efc27207629d13f9b2a14ac55,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-21 22:44:11 +0000, , fix ensure get good debug log even process destroying stack threshhold set fairly aggressively top stack usage git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6969,e5bbd245e351f3973017ce7c6006db206e4c1960,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-21 18:43:02 +0000, , added missing subsystem flag git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6970,a8ac0b89668dabce252a80e10785cac876e98a34,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-21 18:16:04 +0000, , whoop missed instance could recursively stack check ... bad git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6971,892d51061e041e48e36267d33bdb3bb575c6768e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-21 18:08:33 +0000, , handful minor stack checking fix git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6972,937879f11db15a4842306f9da4b4a3e60cf073b7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-21 17:29:47 +0000, , update spl use new debug infrastructure mean replacing bug_on proper assert using entry exit goto return macro instument call path git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6973,2fae1b3d0af1caa2aaa77552a0c96f121016381d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-19 00:02:11 +0000, , frist minor batch fix catch dropped use sbug instead bug git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6974,ce86265693be95e6e2213c18c0d310088c8dccbb,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-18 23:42:45 +0000, , whoop need git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6975,57d1b1885897c9b079a6355a6d54d684ad003d46,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-18 23:39:58 +0000, , first commit lustre style internal debug support change bring everything lustre debugging two exception dropped debug daemon upcalls made thing little easier readded easily enough feel needed everything compiles seems work first inspection suspect handful issue still lingering sorting right away wanted get change commited safe getting little paranoid losing git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6976,55152ebbb46fb8e382ed18e58cc570c61e224c21,artens2 <wartens2@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-16 16:37:51 +0000, , module spl spl kmem.c make sure disable interrupt necessary avoid deadlock seeing deadlock calling interrupt forced end calling caused deadlock git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6977,d61e12af5af3ca6ba92a1b208e33c4e6cb99c9a3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-15 20:53:36 +0000, , add spinlocks cover private data mutex think fix anything good idea regardless drop lock calling construct destructor slab otherwise sleep constructor destructor long running function may nmi something braindead safe console debug log git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6978,c5fd77fcbf20f19a4690c535be494dcf474a0649,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-14 18:37:20 +0000, , cleanup error case avoid overspamming console get stack bug reason dump twice git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6979,f23e92fabf091e3b86005e4dd194702aa8f7535d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-12 04:27:59 +0000, , add hw_serial support based usermodehelper run spl module load time call hostid resolved hostid fed back proc entry latter use pretty thing work hw_serial required thing zpool status work git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6980,12ea923056d9d3c54e4a2d1a5095ca11784dd2a5,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-11 22:49:48 +0000, , adjust condition variable simply sleep uninteruptibly way contend superious wakeups appears zfs careful handle anyway probably best git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6981,115aed0dd8eae514d0cfaa37436a66c52926e3be,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-11 17:03:57 +0000, , add strict in_atomic checking mutex entry function extra safety paranoid rewrite thread shim take full advantage new kernel kthread api greatly simplifies thing add new regression test thread_exit ensure properly terminates thread immediately without allowing futher execution thread git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6982,79f92663e36969c0b6b1f8520b1171285ae3e1d3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-07 23:54:34 +0000, , fix race rwlock implementation occur task rescheduled different cpu taken lock calling rw_lock_held called need spinlock ensure wmb git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6983,728b9dd80074bedef6136b6acf5cb86d707172ea,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-04 17:08:12 +0000, , fix write behavior open ensure least write splat test fix return code vn_ solaris doe use negative return code kernel linux errno must inverted git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6984,968eccd1d1cb7a43a7f05050d7b645da79966e6d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-04 04:44:16 +0000, , update thread shim use current kernel threading api need use kthread_create reason first old kernel_thread api functioin going away secondly importantly use kthread_create properly implement thread_exit function terminates kernel thread point do_exit fix cleanup bug caused dropping mutex twice thread_exit really exit git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6985,996faa68697ec79f37e44999b901f07d6c8f94a2,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-03 21:48:57 +0000, , correctly implement atomic_cas_ptr function ideally atomic operation rewritten anyway correct arch specific assembly today git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6986,0a6fd143fd6d2eaac4c364b1da88bf1ce65618d2,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-03 16:33:31 +0000, , remapped ldi_handle_t struct block_device much useful added liunx block device header sunldi.h made safe interrupt context turn need useing fixed null const dest bug kmem slab cache place debug __dprintf debugging message safe use interrupt handler debugging git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6987,0998fdd6dba7a360131c2addecc8b2d4dc9b7f4a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-01 17:00:06 +0000, , apparently done null clear solaris man page anyway since apparently usage accectable updated function handle git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6988,6a585c61de0f3fa369ed7a011e27f94226232562,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-01 16:09:18 +0000, , double large kmalloc warning size page page ideally dropped one page short term able easily live page allocation fix nvlist bug turn user space side thing packing nvlists correctly little endian kernel space side thing due missing define unpacking big endian git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6989,e966e04fd52e0a80ec191b8f784d84b436877667,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-04-01 03:24:17 +0000, , ensure file ops pointer null may end calling garbage pointer open close etc get look like random crash git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6990,4fd2f7eea565ee473ac433f28c1b309999abbd19,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-31 23:04:07 +0000, , add vmem_zalloc support git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6991,8d0f1ee907d425e71e34e1aea9c1b5465f8cd4d1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-31 20:42:36 +0000, , add crude debugging support leaf alot desired allow easy kernel debugging git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6992,e487ee08fb0bf55ac20f9d0779f602b5b543b3bf,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-28 18:22:29 +0000, , fixed git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6993,9f4c835a0efd55139f878c8ed4746cd7da815658,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-28 18:21:09 +0000, , correctly functioning bit atomic shim layer would call effecient doe advantage correct need right added regression test well git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6994,4a4295b26736a651a16a2d291868028dbd7cf91b,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-27 23:40:09 +0000, , remove minor lingering cddl tait copied header required header rewritten include minimally need git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6995,d429b03d85eee5652a8a3a1c093489a55cf9458d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-27 22:06:59 +0000, , thinko fix spl module interface enhanse verify support output value failed compare expected crashing make debugging much much much easier git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6996,8ac547ec4c968620a8a7c3f7bbe5f9163a450638,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-27 17:58:10 +0000, , relocated zfs repo git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6997,336bb0c0c1e0a6035c62531381001a4a8299e79d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-21 19:16:25 +0000, , two fix module interface could worse git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6998,4e62fd4104e968a4ee224117e266720f2ec7afbb,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-20 23:30:15 +0000, , first reasonable attempt solaris module chdev shim layer handle absolute minimum need zfs register chdev right callback generic registered linux callback find right registered solaris callback function munge args right passing work untested compiled expect bug git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
6999,e4f1d29f89b70a06197f86640c9544ffff07920b,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-18 23:20:30 +0000, , pretty substantial rework merged spl file stuff inclused getf releasef vnode area really used call allow user grab open file struct given known open particular user context zfs make use bit tricky test within kernel since already need file open know basically spook system call setup environment need splat test case verify given know get file create needed vnode use vnode interface usual read write hacking away also noticed null termination issue second kobj test case fixed fact fixed thing well best git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7000,5d86345d3753fd6d873ba40480e1121eb7c28e21,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-18 04:56:43 +0000, , initial pas file api getf releasef hook git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7001,1ec74a114cc4ec5055e7bc45cffda483505d8aba,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-17 18:29:57 +0000, , minimal signal handling interface git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7002,2bdb28fbe07d0f74c38fb0a3231d8425fdc75777,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-15 00:05:38 +0000, , missing header minor fix git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7003,c19c06f3b05a220cb638050c0e06578a09ad64ad,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-14 20:56:26 +0000, , fix kmem memory accounting adjust kmem slab interface make copy slab name passing linux slab free latter git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7004,79b31f3601af530f64b3f2ae87233b3fa5271df1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-14 19:04:41 +0000, , fix kmem_debug support enable default add vmem_alloc vmem_free support test case add missing time function git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7005,af828292e585781b2e186f47074a3e1a3baa5094,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-14 00:04:01 +0000, , add missing header rework vnodes based slab cache like solaris git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7006,ea19fbed0538d0e13549ff9753533fe4f9edeffd,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-13 22:52:23 +0000, , add missing header git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7007,8ddd0ee4154e7e785f07400c113c7465906c97b9,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-13 20:41:29 +0000, , add two missing header git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7008,73e540a0d1cc4fa686de9bd14875cb218d6a9bb1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-13 19:49:09 +0000, , drop unicode support provided zfs tree libport update uio support git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7009,36e6f86146432207789a0e2027edf8d52326bad7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-12 23:48:28 +0000, , add missing header map be_ byteorder macro linux version minor vnodes fix git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7010,2f5d55aac5bfe0931a92f222ebc68c1546b227d9,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-12 21:33:28 +0000, , add copyin copyout mapping fix vnode type git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7011,4b17158506d5f3bb7e71111f5b6287f19bf20190,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-12 20:52:46 +0000, , implemented vnode interface test case test suite implmented kobj support based vnode support add test option check.sh removed delay module load git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7012,9490c148359332d797e4fc250812bd7a5fd131b1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-11 20:54:40 +0000, , apply fix bug239 rwlock deadlock update check.sh script take env var run verbosely follows chasing something sudo make check add new kobj api needed regression test allow reading file within kernel normally thats something support spa layer need support config file add missing stub header git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7013,b123971fc2f951cc95c8f75db68adf05d3a1d1aa,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-11 02:08:57 +0000, , two gpl symbol moved helper function spl module git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7014,ee4766827a6e19a97fe3cb423ea3220039240c4f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-10 21:38:39 +0000, , remap gethrestime define new symbol export new symbol avoid direct use gpl symbol git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7015,51f443a0741b5a74ecb078ab16d3eac489c90fd1,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-10 19:25:20 +0000, , add typedefs make clearer passing function add fm_panic define add another bad atomic hack need right git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7016,4098c921b68edd5ae03f5213f08fd1b99cd05211,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-10 19:04:14 +0000, , fix systemic naming mistake git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7017,6adf99e7d6c179039482e5341a907488d3a33ea7,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-10 17:05:34 +0000, , add missing header git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7018,12472b242dc32f681a0d30efe97359ce67959e58,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-08 00:58:32 +0000, , filling env git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7019,05ae387b5024b6b7014287e09ed9ce74befe91a3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-08 00:18:21 +0000, , add somre debugging support git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7020,0b3cf046cb5b65ccaf22687e105a4380533c0305,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-07 23:07:02 +0000, , add initial vestigates vnode support git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7021,3b3ba48fe9a639d5a3cd1b8960deabefd35310be,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-07 20:48:44 +0000, , add missing cred.h function resolve compiler warning kmem_free unused len add stub byteorder.h add zlib shim compress2 uncompress function git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7022,b0dd3380aae2a976d4d3afa4d3b2aff820c36f23,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-07 00:28:32 +0000, , minor atomic cleanup need done right fixed bug timer code added missing macro git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7023,ed61a7d05eb95ab453a95baf52d6af7b0c60a132,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-06 23:42:37 +0000, , add missing rw_lock symbol git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7024,77b1fe8fa86809b7d2bc82abfe7e74fc047bedfe,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-06 23:12:55 +0000, , add highbit func add sloopy atomic declaration need fixed eventually fill solaris hook adjust create_thread function git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7025,a713518f5d9e4f7b1c361035f1f3ef79869a960f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-05 00:58:54 +0000, , checkpoint night added stub header fleshed stub header added fixme file added various compatibility macro git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7026,23f28c4f75b6a7583ac706db331211baa055ca5d,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-04 20:06:29 +0000, , remove spl.h include header need add stub git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7027,48f940b9439902c2974c705e8fbec3b0a73ffacd,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-04 19:38:27 +0000, , fix type git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7028,14c5326ccd05d3741271219510138880575a5d81,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-04 18:22:31 +0000, , stub header moved generic sysmacros added macro kernel compatibility git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7029,dbb484ec6002723fc89e2231436c2c7ef51d83d3,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-01 18:30:12 +0000, , stub missing header expected fill content need encounter warning missing prototype symbol git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7030,d5f087adef0e5f62f565998a8d54d7cb3c3fe2fa,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-01 00:51:41 +0000, , remaining lose end git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7031,ea70970ff5a372a9d8d9dd960c555a9e4186f04a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-01 00:47:23 +0000, , almost dropped git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7032,f4b377415b4b53722addedc10801db24ad4e6f23,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-03-01 00:45:59 +0000, , reorganize include add sys way need muck includes existing solaris style source get find right stuff git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7033,09b414e880b0c2e4ae08d82354bbae034dafdd9e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-28 00:52:31 +0000, , minor nit solaris spl git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7034,596e65b4e8e98e46705cb470deb72dbf8702b8c2,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-28 00:48:31 +0000, , think last major cleanup restructuring dropped linux prefix file favor spl make sense cleaned includes everybody including dependency properly module want use spl support need include spl.h ensure access module.symvers git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7035,07d339d467337b07ff078d4f2bb81c00388c7565,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-28 00:16:24 +0000, , add top level make check target run validation suite careful right one test still cause lockup node happened move zfs repo new issue git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7036,7c50328b40df4733f31d0fb1ef2056581ff71d4e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 23:42:31 +0000, , cleanup removed reference kzt replaced splat moved portion include file need available source file local.h file proper source subdirs git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7037,70eadc19583d4c90f59bd1a78350657aa3f4afc9,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 21:56:51 +0000, , build ... module load ... cleanup remove remaining vestages time life zfs code git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7038,e4009e98c75612fcd75a1f142dfc37fea4b5ac4a,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 20:55:24 +0000, , quiet libtool git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7039,a0aadf5666d5070e55ab1a6fd58eddf06494010c,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 20:52:44 +0000, , everything build initial intent place directory top level proved troublesome kernel buildsystem autoconf conflicting much resolve issue moved kernel bit module directory use kernel build system pas along likely make target kernel build system git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7040,1735fa73f4ac6935e5029fbf5c3ce9e7c9617f8f,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 20:28:52 +0000, , new approach git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7041,032d12a90053bf86648a91384d39d27e4a3da7c2,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 19:36:31 +0000, , move dir git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7042,d01858a1ca786b85baff93976f7d300ea542b1a6,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 19:36:20 +0000, , move dir git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7043,ce58df922657572db62ec0e0a526d39ee6f17df6,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 19:36:07 +0000, , move dir git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7044,15821fd660fde934ddd06e49b1333185a45bc586,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 19:35:54 +0000, , move dir git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7045,f1b59d2620ae2bd977e67e292f9bebc43049872c,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 19:09:51 +0000, , lot build fix turning good idea since forcefully codifing abi since shim layer longer linked build time test suite cut corner get away everything working exception sorting setting module.symvers properly may take little makefile reorg git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7046,3d4ea0ced6c2400d2b7d62d4f90b1a69d7e1a04e,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-27 00:59:48 +0000, , build fix kernel module almost building feeling lot sane cleaner linuxy may finish tonight git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7047,564f6d1509f71f14e0bd9631363995b7f193d758,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-26 23:20:41 +0000, , user space build fix add list handling compatibility library drop uu_ list handling favor local list implementation libtoolize generic makefile cleanup git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7048,8f48c2c853b65d300c951028ae1eb15ccf52e928,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-26 20:37:43 +0000, , whoop knew miss something small build system fix  git svn http svn spl trunk 7e1ea52c 4ff2 0310 8f11 9dd32ca42a1c,,
7049,f1ca4da6f79730bad6d0ad75db567881c96a5e51,ehlendo <behlendo@7e1ea52c-4ff2-0310-8f11-9dd32ca42a1c>, 2008-02-26 20:36:04 +0000, ,,,
