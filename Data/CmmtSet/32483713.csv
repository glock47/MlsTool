id,sha,author,date,issue,message,file,content
0,851bebe119e79b98e999eec706b237243cdd2305,ebecca Chen <rechen@google.com>, 2021-07-30 12:08:20 -0700,968, merge pull request 968 google google_sync google sync,,
1,abf837aaec6c93726555f783e4c9dffd865590c2,ytype Team <pytype@googlegroups.com>, 2021-07-29 13:10:45 -0700, , add member dataclass overlay dataclass protocol used write type annotation match dataclass instance dataclass class instance class also support generic argument example dataclass whose key strs matched see docstring detail also fix bug rechen thank much help piperorigin revid 387652898,,
2,cbf4f68ce209c8b3e470a42b271c289cfca1e8b7,echen <rechen@google.com>, 2021-06-09 09:13:39 -0700, , modernize super call piperorigin revid 378420868,,
3,33f34c27050ce220feb31268a8e3ea465cc4e03e,echen <rechen@google.com>, 2021-07-29 16:51:01 -0700, , fix bug pytd printer sometimes spawn new printer inside printer new printer always setting old one led bug existed class called union file sometimes mistakenly printed union instead typing.union meant latter piperorigin revid 387698183,,
4,d2831975898dc3dba625f3ce3ff44d5447cf05d2,palaguachi <rpalaguachi@google.com>, 2021-07-29 15:21:11 -0700, , internal change piperorigin revid 387680530,,
5,b455ebe860f8c5b63483d242499333004b4e10de,palaguachi <rpalaguachi@google.com>, 2021-07-29 14:33:07 -0700, , final adjustment protocol namedtuple test fixed dictionary iteration typo protocol updated error message expectation namedtuple updated builtins.pytd allow iter some_string globally enabled enforce noniterable string test piperorigin revid 387670285,,
6,b0f01f0190f46c55dd2e708cd82c2fa7f5986237,demello <mdemello@google.com>, 2021-07-29 13:40:47 -0700, , fix constant folding handle stack underflow literal constructor span several block fix handling string piperorigin revid 387659056,,
7,5db6f723e0c5aee06efda5c77cf556ad33a46605,ytype Team <pytype@googlegroups.com>, 2021-07-29 13:10:45 -0700, , add member dataclass overlay dataclass protocol used write type annotation match dataclass instance dataclass class instance class also support generic argument example dataclass whose key strs matched see docstring detail also fix bug rechen thank much help piperorigin revid 387652898,,
8,436d5281fe4be8b173b42c55588aae8e213870d2,sudol <tsudol@google.com>, 2021-07-29 11:58:06 -0700, , lookup value work pas enum member also update enum.pytd modern syntax piperorigin revid 387636624,,
9,fe2d75cdd49c7f876481fa204825f9e1d160e69f,demello <mdemello@google.com>, 2021-07-28 19:30:40 -0700, , fix bug partially constructed constant getting cleaned correctly find non constant middle literal want add stack anyway build operation right number argument available pop piperorigin revid 387491392,,
10,774aa2cfcdd442ca4b1fa1d91f4b61c8589f21f5,echen <rechen@google.com>, 2021-07-27 18:57:11 -0700, , fix yet another protocol matching bug sometimes dropping generic type parameterized value therefore catching mismatch side note also spent long time trying find easier way construct complex abstract value best could ... piperorigin revid 387247202,,
11,7d1a8bf260b87d825b71a66c2d1468adc406760f,echen <rechen@google.com>, 2021-07-27 18:33:15 -0700, , add toc typing_faq.md restore deleted paragraph faq.md piperorigin revid 387243902,,
12,fbb972322a5ff16c63e01a1550621ae215688e5f,demello <mdemello@google.com>, 2021-07-27 17:59:42 -0700, , add typing faq piperorigin revid 387238981,,
13,08bab668d3c7ab286fcfd3781dd226159d369230,echen <rechen@google.com>, 2021-07-27 14:18:12 -0700, , switch supported yet error invalid annotation piperorigin revid 387194451,,
14,fcee95e32837b9c808e55fdc4b1d4d00c05d7a87,sudol <tsudol@google.com>, 2021-07-27 12:34:47 -0700, , add name value enum type stub bitwise ops auto originally removed name value enum type stub bypassing enum overlay however turn problem using name value enum type stub greatly simplifies several usage enums additionally flag enum member defined using bitwise ops pytype attempt resolve earlier python doe leading unsupported operand issue simplest fix define enum.auto major trade auto set create say string instead ints pytype detect even though python complain test ran usual pytd change piperorigin revid 387171130,,
15,65b636e5f166aa1f2eb193b46075ae744b5e53cd,ebecca Chen <rechen@google.com>, 2021-07-27 12:11:27 -0700,967, merge pull request 967 google google_sync google sync,,
16,3d883fd7daeccac56572a993cdc1325b91aba282,echen <rechen@google.com>, 2021-07-27 11:41:38 -0700, , prepare pypi release piperorigin revid 387159439,,
17,334af221f2a590d5be9fcc50c4bae2d7476f4638,echen <rechen@google.com>, 2021-07-27 11:29:41 -0700, , fix bad test base class piperorigin revid 387156618,,
18,730b29f1ebd79e8e27bcd5f63aafc906253bde98,echen <rechen@google.com>, 2021-07-26 21:02:22 -0700, , skip failing python 3.8 test test pass 3.6 3.7 3.9 fails 3.8. even reproduce failure locally python 3.8 install broke python3 changed point 3.9 month ago point inclined skip test piperorigin revid 387022361,,
19,6859e088999ee3dadf6577d0741616412cd512f2,echen <rechen@google.com>, 2021-07-26 20:41:39 -0700, , output detailed name error message name error reported loop outer frame see find definition name error one three cause name defined outer frame later current frame case output hint use global nonlocal access outer name error class attribute e.g class  def self print name error case output hint use c.x access attribute error attribute class yet defined time attribute access e.g class  class print name error far tell easy fix case output short explanation fails piperorigin revid 387019978,,
20,92bb49b4ed0bbc3f880f60723e5c2c6f316d7f21,demello <mdemello@google.com>, 2021-07-26 20:34:15 -0700, , add support attr converter code def ... attr.s class foo attr.ib converter generate signature class foo  def __init__ self piperorigin revid 387019120,,
21,7e14957dcd35810e6344f8eb6cf5a972675e68f5,echen <rechen@google.com>, 2021-07-26 18:32:50 -0700, , fix python 3.8 setup_finally bug setup_except removed 3.8 instead figure setup_finally used set except piperorigin revid 387005435,,
22,d3ee7c32a15f1371f77bbe65d309e0fdab37fb5e,palaguachi <rpalaguachi@google.com>, 2021-07-26 14:50:52 -0700, , adjustment py2 test_builtins non iterable string behavior removed test match new behavior allowing accidental string iteration builtin function iter zip dict.from_keys sorted filter also raised enforce noniterable string flag true adjusted test piperorigin revid 386964849,,
23,a15d3ab45f036986b51f45046fa4d65ef56dead8,palaguachi <rpalaguachi@google.com>, 2021-07-26 13:43:06 -0700, , adjustment test_builtins2 non iterable string behavior updated test match new behavior allowing accidental string iteration builtins reduce tuple frozenset iter also raised enforce noniterable string flag true adjusted test piperorigin revid 386949903,,
24,c4a2426d880f9eab9698dc3824ee70cd3215ec88,palaguachi <rpalaguachi@google.com>, 2021-07-26 11:29:56 -0700, , adjustment test_builtins non iterable string behavior updated test match new behavior allowing accidental string iteration builtin function iter zip dict.from_keys sorted filter piperorigin revid 386920735,,
25,151a48fc0a440f6577e1d51ca49e5e7ecb1de1bc,echen <rechen@google.com>, 2021-07-26 11:03:40 -0700, , fix bug attribute matching generic protocol matching class rather instance class generic protocol broken generic protocol defined file class matched fixed updating get type parameter value class well instance class different file need take type parameter value account converting protocol abstract value piperorigin revid 386914661,,
26,67e10338deb3f6921566e193a75bc0d10500b97b,echen <rechen@google.com>, 2021-07-26 10:55:29 -0700, , fix typevar substitution bug piperorigin revid 386912435,,
27,a93c0d639edfd07643175baeeb896d4865f577cc,echen <rechen@google.com>, 2021-07-26 10:48:10 -0700, , fix another try except finally bug also rebuckets test realized wrong place running opensource test make sure work 3.9 piperorigin revid 386910555,,
28,e6bdd134e2447677a8ac8e6127f2e17cd909203c,echen <rechen@google.com>, 2021-07-23 23:53:29 -0700, , fix bug pytype handle block fix 2000 breakage appeared today build failure table piperorigin revid 386597832,,
29,fe93c9fd8e75014e18393b03d077225c208443b4,palaguachi <rpalaguachi@google.com>, 2021-07-23 14:35:23 -0700, , support star unpacking behavior string star unpacking acceptable behavior string python however error value unpacked str since prime example accidental string iteration piperorigin revid 386533484,,
30,581f2c62ca700c5629dded0732911247b7b196c3,palaguachi <rpalaguachi@google.com>, 2021-07-23 14:24:58 -0700, , implementation non iterable python string added new check prevent accidental string iteration within matching process piperorigin revid 386531344,,
31,953e6ba7a3c9e008c78ddb3a8d8298b42f9138c8,palaguachi <rpalaguachi@google.com>, 2021-07-23 14:12:23 -0700, , included new feature flag non iterable string integrated new feature flag enforce noniterable string default value false pytype config prevent breaking change piperorigin revid 386528856,,
32,6a2e47b4da4c52dea798d391866a895b49b700a9,ebecca Chen <rechen@google.com>, 2021-07-22 22:22:08 -0700,965, merge pull request 965 google google_sync google sync,,
33,37f098cb9f2fc4ba9ed1c86ac62d31a997d71bff,ebecca Chen <rechen@google.com>, 2021-07-22 20:34:46 -0700, , allow typing import line char,,
34,497752995a92cda9e2146ef87a2303013fb33c0a,echen <rechen@google.com>, 2021-07-22 17:57:59 -0700, , avoid infinite recursion bug add check matcher.py refer sure got state first place least prevents pytype crashing piperorigin revid 386361554,,
35,0869b494a700693636bc285be2d49cfc6f8bea51,echen <rechen@google.com>, 2021-07-22 16:09:52 -0700, , fix recursion error piperorigin revid 386343502,,
36,c331398ddfc124ed63f2373a3f733dbc1c4e615b,palaguachi <rpalaguachi@google.com>, 2021-07-22 13:27:24 -0700, , feature test non iterable python string test cover newly added behavior enforcing accidental string iteration piperorigin revid 386310074,,
37,9b97daf1fb45fae31ea25ea095e84330e6761d6f,echen <rechen@google.com>, 2021-07-22 12:58:21 -0700, , fix another protocol matching bug hopefully finally got right piperorigin revid 386303677,,
38,71fbb6e4f88142870eafdda57f03e8f833662bd3,demello <mdemello@google.com>, 2021-07-22 11:22:22 -0700, , track frame state within try except finally block exit frame within setup ... end_finally block need propagate exit condition e.g exception return end_finally opcode continue executing next block piperorigin revid 386282843,,
39,0dd2a61eb82691c917eff3a1e1a7732458a3ab08,echen <rechen@google.com>, 2021-07-22 10:21:14 -0700, , make pytype main_test little faster test run locally using subprocess.poll make slowest test twice fast piperorigin revid 386268586,,
40,53fa6b208e483cbe5c5aef0728931761b712b913,echen <rechen@google.com>, 2021-07-21 19:45:37 -0700, , fix protocol matching bug piperorigin revid 386147935,,
41,2cc35d9f3aa86a7169fe4fadbafcab39b5a74285,sudol <tsudol@google.com>, 2021-07-21 15:07:18 -0700, , subclass enummeta make dynamic enums typical reason subclassing enummeta dynamically add member enums easiest way pytype handle case treating enums dynamic i.e set piperorigin revid 386104813,,
42,e62dc430984a9d3f2fc203f9415b3344ccd3745a,echen <rechen@google.com>, 2021-07-21 13:41:42 -0700, , get rid spurious appear signature typevar error note fix depends closure attribute holding instance self function nested inside instance method always case nested function annotation reference class type parameter since get value type parameter without accessing self piperorigin revid 386086421,,
43,76160103d2e16e02c5d107b9639606cc40009d86,palaguachi <rpalaguachi@google.com>, 2021-07-21 12:29:54 -0700, , regression test non iterable python string newly written test ensure old iterable string behavior backslide cover intended string iteration union str iterable str similar cover unintended string iteration well removed test moved old failing behavior new corrected behavior analyzed piperorigin revid 386070561,,
44,4577d7402701cc22b9226aef378b16423c8be3bc,sudol <tsudol@google.com>, 2021-07-21 11:43:57 -0700, , small bugfixes enums analyzing __getitem__ ensure error message make sense using instantiate add _name_ _value_ enum member piperorigin revid 386059967,,
45,f3d044d1c80aaecb0c7852a8ece4afb520381625,echen <rechen@google.com>, 2021-07-21 11:30:52 -0700, , silence module attr finding debug.py reason opensource pytype complains line used block disable avoid triggering line long lint warning piperorigin revid 386056841,,
46,eeb5900e3449021308a55fa3476a53e141669b25,echen <rechen@google.com>, 2021-07-21 08:46:55 -0700, , fix crash metaclass.py happened notice working something else piperorigin revid 386020757,,
47,58ec39f0b440891a69008b9b9c4ef144da9a53a0,ebecca Chen <rechen@google.com>, 2021-07-20 20:25:40 -0700,964, merge pull request 964 google google_sync google sync,,
48,c4c63d4f6a18babf70d0afbe6394c9f28df9f759,ebecca Chen <rechen@google.com>, 2021-07-20 19:05:28 -0700, , disable pytype error debug,,
49,10038df2a4fba142fccc66e5b34b8276353fc205,ebecca Chen <rechen@google.com>, 2021-07-20 18:38:05 -0700, , add dependency tabulate,,
50,9226f1e5913b12d1e01471e3ca286b77796f6029,sudol <tsudol@google.com>, 2021-07-20 15:21:37 -0700, , handle type stub use enum enum member value type see test example enum like piperorigin revid 385882840,,
51,f0257e49db71454c5a2301b61a8831096fff418a,sudol <tsudol@google.com>, 2021-07-20 14:41:47 -0700, , handle subclass enummeta better also take care making abstract.py able detect enum piperorigin revid 385874461,,
52,8b1b3b5aba8967bae347aa3b6dd201ce547a479f,echen <rechen@google.com>, 2021-07-19 22:06:31 -0700, , support generic namedtuples add ability generate mutation __new__ method since namedtuple __new__ rather __init__ pass list base generic base detected ensures class __annotations__ dict initialized properly somewhat tricky namedtuple constructed via function call done existing code handling generic class kick take care rest side note using generic namedtuples seems rather inadvisable since whether work runtime change version version fails python 3.6 typing import generic namedtuple typevar typevar class foo namedtuple generic ... ... traceback recent call last file stdin line module typeerror metaclass conflict metaclass derived class must non strict subclass metaclasses base succeeds 3.7 broken 3.9 traceback recent call last file stdin line module file usr lib python3.9 typing.py line 1881 raise typeerror multiple inheritance namedtuple supported typeerror multiple inheritance namedtuple supported outside control someone really determined create generic namedtuple type_checking block piperorigin revid 385710726,,
53,c6754997ca47161fa453bab5f466c214043d7572,demello <mdemello@google.com>, 2021-07-19 18:03:30 -0700, , add pretty printer sample output   arg tgt btgt next extra  block  setup_except load_const hello return_value  block  dup_top load_global exception compare_op  piperorigin revid 385682167,,
54,72089b4fc7591d59f21703c178a353ce79ae5b03,echen <rechen@google.com>, 2021-07-19 15:38:34 -0700, , finish removing check parameter type piperorigin revid 385656504,,
55,2b27bab6ec5251582d162d49f59a054d20708a42,echen <rechen@google.com>, 2021-07-19 13:07:29 -0700, , improve name error message add skipped test future work local variable name shadow global one add explanation name error message explaining name referenced locally defined also add skipped test case yet add explanation since yet figured look name outer class function scope piperorigin revid 385624371,,
56,4c154fbd350fbdf208f4f2b020fa82b952deb38d,ebecca Chen <rechen@google.com>, 2021-07-19 13:09:27 -0700,963, merge pull request 963 google google_sync google sync,,
57,c9b2e3b2d86a50e0e023d692819324e37c917904,sudol <tsudol@google.com>, 2021-07-19 11:41:02 -0700, , resolve error intenum intflag able trace exactly creating intenum intflag class caused pytype complain wrong args passed __new__ despite __new__ never directly called piperorigin revid 385604689,,
58,10902d4c57d505da4d27f3eacf568962de212680,echen <rechen@google.com>, 2021-07-19 12:37:35 -0700, , prepare pypi release piperorigin revid 385617218,,
59,f8954515f08a0985bf4b88b08df732a7f5611bd5,echen <rechen@google.com>, 2021-07-19 11:23:48 -0700, , fix pytype crash fix following crash traceback recent call last ... file ... pytype matcher.py line 454 elif attributeerror empty object attribute piperorigin revid 385600564,,
60,130d69a86d4618f2892c171ffc8a51a133e0466f,echen <rechen@google.com>, 2021-07-19 08:22:37 -0700, , fix enum.__new__ signature fix 450 build failure along line import enum class someenum enum.enum  def someenum return someenum line file xxx line bad return type bad return type expected someenumtype actually returned type enum.enum piperorigin revid 385558878,,
61,fe193c930d504f640f2f44e9e0b685133d75d37a,echen <rechen@google.com>, 2021-07-16 14:02:45 -0700, , slightly reword ninja macos installation note reworded make clear checking cmake installation troubleshooting suggestion need paid attention installation fails piperorigin revid 385219409,,
62,1f5f8f5ddb967306e86e74282eb3c52b05612134,ebecca Chen <rechen@google.com>, 2021-07-16 15:16:37 -0700,962, merge pull request 962 google google_sync google sync,,
63,681de0716bfc52f68264c77fc3f44958ea3b5410,echen <rechen@google.com>, 2021-07-16 13:28:35 -0700, , add note readme macos installation issue piperorigin revid 385212776,,
64,45f018a3ffedf487af7646b24b8acf84792ee0b2,sudol <tsudol@google.com>, 2021-07-16 11:11:06 -0700, , fix return type value lookup enum.__new__ piperorigin revid 385184917,,
65,a0099e83ef55dd83d2e6c02efb9c165f9eec9073,echen <rechen@google.com>, 2021-07-15 18:53:24 -0700, , fix goofy looking error message would print line piperorigin revid 385054619,,
66,a9fcb666b2df527c8df65b07979acc6fdade4f91,ebecca Chen <rechen@google.com>, 2021-07-15 15:35:23 -0700,961, merge pull request 961 google google_sync google sync,,
67,6a61266f651c78434b8a4bfc3c392ea6cb3d2758,echen <rechen@google.com>, 2021-07-15 15:07:55 -0700, , rebucket test type annotation piperorigin revid 385018670,,
68,2d150133882ae7df8634d76bc9a969ccce105607,echen <rechen@google.com>, 2021-07-14 19:33:23 -0700, , handle union correctly dealing exception type piperorigin revid 384836149,,
69,40da92f2d4a8e4768184eb0bade63c4dec6a4be0,sudol <tsudol@google.com>, 2021-07-14 15:56:17 -0700, , add support data base type enums useful supporting intenum intflag along wild test pas change enum.pytd piperorigin revid 384804301,,
70,415bb7779b2cc95e786b7541c7e7b168955cf7aa,demello <mdemello@google.com>, 2021-07-13 14:11:38 -0700, , fix block target pruning block nested finally block piperorigin revid 384548845,,
71,4d818bd9fcb0606f31c2c07500848fc373b33439,demello <mdemello@google.com>, 2021-07-12 18:48:46 -0700, , fix false positive block target pruning note still issue heuristic added skipped test pruning block target piperorigin revid 384364444,,
72,f5ab973abd981e37f76eb1b2e0610bacfc570305,sudol <tsudol@google.com>, 2021-07-12 11:57:59 -0700, , enum doe fact two __new__ signature enum_overlay longer assumes enum one __new__ signature enum_overlay functional api specifically functional api __new__ signature type checking fixed bug object created set kwonly_params instead tuples test_enum test ran piperorigin revid 384284721,,
73,6cab813c22c9f031ef4561bf2118b7a96dca6516,ebecca Chen <rechen@google.com>, 2021-07-10 00:14:25 -0700,959, merge pull request 959 google google_sync google sync,,
74,2b9da9ac588b88aa96043482d00b98306dbdbfa6,echen <rechen@google.com>, 2021-07-09 22:27:18 -0700, , bring back fix attribute foo typevar error seeing realized better way implementation deformalize generate type error going wait cleared release backlog piperorigin revid 383978671,,
75,3609e881a2f25afa7744e3de6ffaa334d4e229f4,echen <rechen@google.com>, 2021-07-09 14:47:19 -0700, , update doc mark fresh remove 2and3 reference piperorigin revid 383927594,,
76,98e78a31daa9618213efdfb30fb016b83a8276d1,sudol <tsudol@google.com>, 2021-07-09 14:35:25 -0700, , enable basic subclassing enums perform validation needed e.g enums subclassed define member test run enum.pytd change piperorigin revid 383925189,,
77,3f4fc28ef31efac1b72d32deea1e049b66c1726b,sudol <tsudol@google.com>, 2021-07-09 10:28:51 -0700, , add couple test prove name value treated enum member tested enum.pytd change piperorigin revid 383874428,,
78,f99ff5186a0142e0b5704ebebc58541fa89a550a,echen <rechen@google.com>, 2021-07-09 00:15:50 -0700, , allow typevars passed function get rid pas typevar function error favor replacing typevars object matcher let handle typevars minimal change matching code let delete code put work around typevar error getting rid also exposed bug allow annotation like sequence object instantiated fixed improving http github.com google pytype issue 717 fix invalid typevar error reported issue callable one piperorigin revid 383791092,,
79,46af2999367b3368c2e53cf2c0d9aa0ce30ee361,sudol <tsudol@google.com>, 2021-07-08 15:32:49 -0700, , add name value pytdclass enum member ensures canonical member behave like real member though slightly type accuracy tested required change enum.pytd piperorigin revid 383728402,,
80,211820f4866e59e53d84b8797126de4390be3835,echen <rechen@google.com>, 2021-07-08 15:14:34 -0700, , fix python 3.7 test failure piperorigin revid 383725158,,
81,f97d2b4f3fc8d3f2551b3845779d05935d249b3f,echen <rechen@google.com>, 2021-07-08 12:55:14 -0700, , allow attr.ib type argument contain typevars piperorigin revid 383695930,,
82,6fc61ca95d2ec9b2ceb489cf9329293732fef999,sudol <tsudol@google.com>, 2021-07-07 16:21:24 -0700, , add support enums method used enum.auto generate next enum value assume used relatively simple case simply using inferred return type adequate test pas change enum.pytd piperorigin revid 383515747,,
83,d2c900f2404053faef4bf7d3c50b1f785123b476,sudol <tsudol@google.com>, 2021-07-07 14:40:17 -0700, , fix document crash pytd enums turn convert handle empty pytd type well tested required change enum.pytd piperorigin revid 383496301,,
84,a8fd5741ffba558e58b078bcb47cb5154b89f90f,demello <mdemello@google.com>, 2021-07-07 13:05:07 -0700, , fix adding typing.mapping chex.dataclass base class class already parent mapping base list insert mapping said parent otherwise mro inconsistent piperorigin revid 383476772,,
85,054e84796a778f5f2ac2402f1a4aa1f1f12fa1be,ebecca Chen <rechen@google.com>, 2021-07-07 13:09:34 -0700,956, merge pull request 956 google google_sync google sync,,
86,2c596bcf682b284a8c4e4e39f087412a1ccf2737,echen <rechen@google.com>, 2021-07-07 12:15:13 -0700, , get rid incorrect appears signature typevar error typevar function signature also appears signature nested function variable annotation function body pytype complain typevar appearing signature resolve 379 511 piperorigin revid 383466181,,
87,939749b149cc5f44e9156b0a7d5476cd0fbe2305,sudol <tsudol@google.com>, 2021-07-02 14:58:48 -0700, , add basic support enum.auto full support requires calling bit complex deserves test run change enum.pytd piperorigin revid 382819444,,
88,6d465e1bc7e37f66cf30a998a17749831fc89c6e,ebecca Chen <rechen@google.com>, 2021-07-02 13:51:39 -0700,955, merge pull request 955 google google_sync google sync,,
89,3db160f3e6fead76ec1816b81a4010e0a5be1e92,echen <rechen@google.com>, 2021-07-02 13:20:05 -0700, , fix bug frame.substs ignored instance method piperorigin revid 382801341,,
90,8bc4ceafd00f07ad131b38a6a694891a737c3399,echen <rechen@google.com>, 2021-07-02 13:04:22 -0700, , fix pyi error caused recognizing imported typevars resolve http github.com google pytype issue 952 piperorigin revid 382798437,,
91,2e2fcbff990d64409af5437894e2cea5013dae59,ebecca Chen <rechen@google.com>, 2021-07-01 16:59:54 -0700,953, merge pull request 953 google google_sync google sync,,
92,6e78db35d1a79f9a6eb3c7d47a15a8fad172e921,echen <rechen@google.com>, 2021-07-01 16:31:04 -0700, , allow passing typevars typing.cast pull part new method typing.cast use handle typevars properly added rather ugly temporary argument cast ahead use correct error class invalid annotation reporting error related invalid typevars annotation variable annotation continue use supported yet resolve http github.com google pytype issue 932 piperorigin revid 382628995,,
93,6f9aba857446edc46d5940461e8de33c25f1c589,echen <rechen@google.com>, 2021-07-01 16:26:25 -0700, , use assertfalse instead assertempty skip two failing 3.9 test assertempty appears internal addition unittest considered instead rewriting assertempty assertfalse copy.bara.sky issue transformation easily reversible would wrong rewrite assertfalse call assertempty importing piperorigin revid 382628192,,
94,51f24c922faac5190ff51ef95f124ef42f571ae3,echen <rechen@google.com>, 2021-07-01 16:17:59 -0700, , allow case valid typevars variable annotation change pytype allows typevars appear variable annotation following case typevar appears callable e.g callable variable body function typevar appears function signature def ... piperorigin revid 382626727,,
95,e5978607306f74d116a3f7d9e0498d13a54f0889,echen <rechen@google.com>, 2021-07-01 15:37:42 -0700, , make couple improvement handling generic variable annotation make easier fix linked bug instead storing allowed type parameter frame store substs type parameter name cfg.variable mapping previous type_params field reconstructed substs storing substitution information make considerably easier support using type parameter function signature variable annotation instead setting generic attribute value empty yet know value instantiate anyway replace instantiated value precise one attribute.py accidentally replace annotation like callable empty piperorigin revid 382619427,,
96,89de9c9e9e0fd4f6c1a20fb02ecc64f273eb5cc7,echen <rechen@google.com>, 2021-07-01 15:24:50 -0700, , fix lint error latest pylint version seems gained new check http github.com google pytype run 2966874086 true biggest change complains change parameter name overridden method piperorigin revid 382616917,,
97,a11e49d46d9d5527f2a643fa443949534f8962fe,palaguachi <rpalaguachi@google.com>, 2021-07-01 13:58:31 -0700, , extra check match bound class method object bound class method like myclass .my_method previously angered pytype attempting match object make sense since anything match object piperorigin revid 382598970,,
98,c2eb9409946a3442d7e9db7f7de6af8591e46321,sudol <tsudol@google.com>, 2021-07-01 12:04:09 -0700, , use enum.__new__ instead __init__ functional api __init__ return none functional call seemed miss enummeta metaclass entirely sure going wrong auto needed simplified unfortunately covered overlay soon enough tested test_enum test enabled piperorigin revid 382574899,,
99,082854c6e7de04bfac055b8bfc45266048f2a5ec,demello <mdemello@google.com>, 2021-06-30 12:59:29 -0700, , fix reraising exception via function call setup_finally block exit early mark target block unreachable piperorigin revid 382367343,,
100,39bf306935c12b6bddbfc376bcb8f7e93327a21f,palaguachi <rpalaguachi@google.com>, 2021-06-28 16:12:19 -0700, , fixed typo showed wrong bucket count test list show logical bucket preceding text promise bucket piperorigin revid 381966964,,
101,fd22ee4866a6b151db59c59ac18b327fd49d0972,echen <rechen@google.com>, 2021-06-28 14:44:07 -0700, , default check parameter type true piperorigin revid 381950075,,
102,1ca05e3e255fb0ad7719971edf168f1f7f2ddf62,demello <mdemello@google.com>, 2021-06-28 13:00:44 -0700, , track construct python value list dicts track per element type list dicts call converter function concrete abstract.list abstract.dict construction building type fix block rewriting bug opcode target could refer folded away opcode folded constant end block would get lost existing unit test pas constant folding enabled except one error message changing piperorigin revid 381928673,,
103,688b500520f25b448859e2d7ff64f32315bc0877,ebecca Chen <rechen@google.com>, 2021-07-01 15:01:37 -0700,954, merge pull request 954 google pylintrc disable deprecated module warning,,
104,5ee9df8bd4b8c4ec4503d13b37662ecf3d2026cf,ebecca Chen <rechen@google.com>, 2021-07-01 14:57:19 -0700, , disable deprecated module warning,,
105,4bbc5650898433753075bda9dc6638d33d2ea340,ebecca Chen <rechen@google.com>, 2021-06-24 16:12:08 -0700,951, merge pull request 951 google google_sync take advantage submodule version information typeshed stdlib veâ,,
106,f02baa9a5eb5a2e937466636cca0521739042d64,echen <rechen@google.com>, 2021-06-24 15:42:31 -0700, , take advantage submodule version information typeshed stdlib version previously version contained two entry like importlib 3.6 3.7 pytype would use importlib entry importlib change pytype recognizes available 3.6 tested change manually since copy typeshed doe yet submodule version fix http github.com google pytype issue 923 piperorigin revid 381352853,,
107,ea9fc9a307d4bfdea952364e1268be6401951601,ebecca Chen <rechen@google.com>, 2021-06-24 13:22:18 -0700,950, merge pull request 950 google google_sync google sync,,
108,44fb53d1ae22d8f8ca947ca8cdc0890fb50eb02b,echen <rechen@google.com>, 2021-06-24 12:53:54 -0700, , add protocol support module also rebuckets protocol test realized added wrong file finally declare protocol support complete fix http github.com google pytype issue 789 piperorigin revid 381318276,,
109,da5893f3fcba802c69d01955b259d1e6b993fc9c,echen <rechen@google.com>, 2021-06-24 11:54:47 -0700, , allow anything match empty protocol corner case rare pytype take protocol attribute account strictly speaking everything allowed match empty protocol fix http github.com google pytype issue 523 piperorigin revid 381304801,,
110,4ed936dcffaf2385d7f9dc78de2732c0301ed4f7,echen <rechen@google.com>, 2021-06-24 11:25:42 -0700, , update protocol section support.md piperorigin revid 381298442,,
111,02fd983655318fcac84b62834fd8e5dffbc231d9,echen <rechen@google.com>, 2021-06-24 11:23:21 -0700, , fix protocol matching property pytype allowing property always match property regardless returned never match anything else latter behavior also meant matching behavior changed property written constant pyi file piperorigin revid 381297952,,
112,455f57b9d6b67a48cdad0f8f4a602e91604d06f7,echen <rechen@google.com>, 2021-06-23 20:32:16 -0700, , print detail protocol mismatch error message error involve protocol add new line end message missing attribute attribute protocol foo implemented bar wrongly typed attribute attribute protocol foo wrong type bar expected int got str piperorigin revid 381170791,,
113,d1f5b4262eafcc41b7cfc9223873876485e4e12c,ebecca Chen <rechen@google.com>, 2021-06-23 15:49:07 -0700,949, merge pull request 949 google google_sync google sync,,
114,8c4cc4147fd4af8417ef3fe306525943d27777f4,ebecca Chen <rechen@google.com>, 2021-06-23 15:18:35 -0700, , disable lint warning many boolean expression,,
115,386c4d3dee8955c0138cd4053db5ba2c47be9ea7,echen <rechen@google.com>, 2021-06-23 14:59:18 -0700, , simplify matcher storing current node instance attribute piperorigin revid 381122083,,
116,4e6151ada6cbfdc8faebaa89cf7c703547996482,echen <rechen@google.com>, 2021-06-23 14:39:41 -0700, , support non method attribute typing.protocol change pytype detects enforces non method attribute protocol one remaining piece work add detail error message make obvious something match protocol somewhat surprisingly change appears cause one new finding need feature flag piperorigin revid 381117986,,
117,def9860a9e38b48368783bff65dd50d71c3c8cd8,echen <rechen@google.com>, 2021-06-23 13:16:47 -0700, , get rid unnecessary method simplifies matcher code slightly passing around left instance calling get_class whenever need class rather passing around instance class one tricky point making sure handle super_obj super_cls  piperorigin revid 381101047,,
118,0a711824041db096654759d2afb19d0440a2e74a,echen <rechen@google.com>, 2021-06-22 21:00:02 -0700, , remove create pyi dataclasses completely piperorigin revid 380951115,,
119,621813cb1b8a766ccf0ad0170ccb68c808cbcb7a,echen <rechen@google.com>, 2021-06-22 16:45:50 -0700, , rename method reference protocol matching attribute adding matching logic non method attribute seems easiest rename everything one piperorigin revid 380920022,,
120,e5394c6cd802ced64551f7c7055f4dbc6d3c0941,echen <rechen@google.com>, 2021-06-22 16:20:08 -0700, , clean protocol matching code make easier extend get rid mostly duplicated logic already present attribute.py updated is_callable account way get_method differed slightly normal attribute fetching reuses instead partially reimplementing reworks use rather method lookup add todo bug exposed change protocol matching correctly reject non method matched method erroneously accepts method mismatched signature piperorigin revid 380915256,,
121,2a7499381412f8727b4de84ef709c2104340593f,sudol <tsudol@google.com>, 2021-06-22 16:11:13 -0700, , add support enum functional api basically indirect overlay though call __init__ note basic support full verification input yet handle type parameter piperorigin revid 380913609,,
122,e7130ca2de014e534f5fa5aa0f5071583c8adb27,demello <mdemello@google.com>, 2021-06-22 11:29:00 -0700, , try dead block elimination within try except block block ordering code setting outgoing edge try block based purely whether last opcode connected next block ignored fact setup_except target pointing except block piperorigin revid 380853665,,
123,bbcc1174605e3eab3e9aa4d5c133868daaef0038,echen <rechen@google.com>, 2021-06-21 15:58:12 -0700, , move output top class _level_ignore abstract_utils allows used couple place previously incompletely redefining _ignored_locals enum_overlay seem used anywhere yet piperorigin revid 380683438,,
124,ffd38ef6d2435a076aea58719c605701183a43d8,echen <rechen@google.com>, 2021-06-21 11:02:00 -0700, , default create pyi dataclasses true piperorigin revid 380618264,,
125,19a04b721b499728349710d487c41496975cdd70,sudol <tsudol@google.com>, 2021-06-21 09:53:54 -0700, , accept byte piperorigin revid 380601121,,
126,d1c562859946e8682b2c81e7648c2f93945b9916,echen <rechen@google.com>, 2021-06-21 08:15:01 -0700, , remove obsolete key error disables piperorigin revid 380581037,,
127,8559b0c7a95e9f7476ecef4dbe6f76864a4653e4,demello <mdemello@google.com>, 2021-06-18 17:46:43 -0700, , keep original bytecode around ordered code object temporary workaround bug block collection algorithm piperorigin revid 380296348,,
128,9cde48ae56d6ebfdfb81416f7cbf4898339fcdb3,echen <rechen@google.com>, 2021-06-18 17:39:40 -0700, , fix pytype crash python 3.7 fix traceback ... file ... pytype overlay line 108 decorate __init__ cls.members self.args init typeerror nonetype object subscriptable piperorigin revid 380295659,,
129,9d77006492d4af5753e88b73870207702f07f524,ebecca Chen <rechen@google.com>, 2021-06-23 15:07:45 -0700,948, merge pull request 948 google google_sync google sync,,
130,8e414ef392d3bcc74669b704cb930a521a1b153b,echen <rechen@google.com>, 2021-06-18 16:42:46 -0700, , take account protocol matching fix http github.com google pytype issue 754 piperorigin revid 380288225,,
131,e1edb22fc8f3ce85e88c3645ff02adbf77013f6f,sudol <tsudol@google.com>, 2021-06-18 16:21:54 -0700, , make strict piperorigin revid 380285045,,
132,94bafc70435fa0d55004b29dc01693e2cb3c1254,sudol <tsudol@google.com>, 2021-06-18 16:05:20 -0700, , fix __contains__ handling error occur python check y.__contains__ exist fall back y.__iter__ y.__getitem__ pytype instead falling back whenever __contains__ raised error also renames cmp_in args easier follow piperorigin revid 380282457,,
133,8818a139c2fbe30dc5cdbebe90d5775e5aa19d42,sudol <tsudol@google.com>, 2021-06-18 14:12:33 -0700, , add test enum.enummeta feature note __contains__ doe work entirely correctly due piperorigin revid 380261796,,
134,633d77d7bb8002ff0169e56ef3922b93f1d2ca37,sudol <tsudol@google.com>, 2021-06-18 13:10:43 -0700, , add support equality check enums support check fail either defined like i.e __eq__ method analyze test pas change enum.pytd includes fix test pass track enum member type piperorigin revid 380249842,,
135,8e5adff2b9dc61f15e88bc73bb234d67fa2f5bb5,demello <mdemello@google.com>, 2021-06-17 15:34:43 -0700, , replace reordered code.co_code block keep block single source opcodes iterate block order reconstruct flat list co_code needed piperorigin revid 380060277,,
136,a99dcc0ef668c5a6d0d22963b885e2420c28bc9b,ebecca Chen <rechen@google.com>, 2021-06-17 14:07:08 -0700,947, merge pull request 947 google google_sync google sync,,
137,9dc584d52e6fbbe2a05a4dff4f94d7a4ff4e1033,echen <rechen@google.com>, 2021-06-17 13:33:26 -0700, , prepare pypi release include enums constant folding changelog entry since understand neither feature ready use yet piperorigin revid 380033505,,
138,6b325b7b17b073641280a38811f54a781c324750,sudol <tsudol@google.com>, 2021-06-16 16:47:44 -0700, , add support looking enum member value complex support check exact match possible really quite complex work well enum member value basic type like int str explore adding full support later desired test pas enum.pytd change piperorigin revid 379839862,,
139,664ed392c63df892f37cb6a07e22de302b602073,echen <rechen@google.com>, 2021-06-16 13:40:20 -0700, , remove key_error catch many useful error generates many false positive piperorigin revid 379801114,,
140,cba138300cde4290b01f16600ed88071bd46569d,ebastian Rittau <srittau@rittau.biz>, 2021-06-16 13:15:41 -0700,944, work new typeshed structure 944 possible third party package python2 directory stub top level mean python even corresponding metadata.toml key set resolve 944 piperorigin revid 379795409,,
141,4d6fe04f20b390fbd675ec654ca6ac3b63379ebf,ebecca Chen <rechen@google.com>, 2021-06-15 21:02:28 -0700,946, merge pull request 946 google google_sync google sync,,
142,a90144f936ab970edee37183a0e9c661fda618fe,echen <rechen@google.com>, 2021-06-15 20:02:50 -0700, , support protocol ... shorthand generic protocol class parent pep 544 allows writing class foo protocol ... mean class foo protocol generic ... resolve 792 piperorigin revid 379630156,,
143,af5b395926a5a70b259ccadc5850fb1a7a4fb447,demello <mdemello@google.com>, 2021-06-15 17:35:57 -0700, , preserve python value folded constant value written opcode yet used constructing abstract type piperorigin revid 379613108,,
144,7e21b623bceae696110db2701a4011ddf174ac0f,sudol <tsudol@google.com>, 2021-06-15 15:41:17 -0700, , add support enum __getitem__ test pas change enum.pytd piperorigin revid 379590020,,
145,e5d059e426ac404a6c7343958c553550942dad6f,ebecca Chen <rechen@google.com>, 2021-06-15 14:10:19 -0700,945, merge pull request 945 google google_sync google sync,,
146,34c7af17f6df3cc5da741016ac9558778e136a89,echen <rechen@google.com>, 2021-06-15 11:40:13 -0700, , rebucket test type annotation piperorigin revid 379537765,,
147,cf9dcd380298f791be860cd29ae518a72a1b1449,echen <rechen@google.com>, 2021-06-14 20:30:03 -0700, , fix failure 3.8 test failure version pytype support tested default internally ... something piperorigin revid 379404879,,
148,30ca00f85af97a7cc408fbdb7cef12fcac56bc0e,demello <mdemello@google.com>, 2021-06-14 19:18:52 -0700, , disable constant folding test 3.9 python compiler changed optimise creation constant list piperorigin revid 379397880,,
149,73c7d41db2e0f6ed1ca90a57a83089160f4c8623,echen <rechen@google.com>, 2021-06-14 19:00:21 -0700, , fix two bug triggered accessing property class calling property __get__ method set self wrong type returned result calling property rather property object piperorigin revid 379395561,,
150,ed8b2338451a8c56d757853695460710feccd8b4,demello <mdemello@google.com>, 2021-06-14 17:27:59 -0700,321, add support multiple chained assignment pyi file fix http github.com google pytype issue 321 piperorigin revid 379382674,,
151,f8bb6ce0f848374ca9629912d309bd3576561691,sudol <tsudol@google.com>, 2021-06-14 15:52:36 -0700, , fix bug related empty starstarargs dicts pytype properly treat empty starstarargs dicts actually empty let accurately typecheck function call also stop attr.ib call swallowing default args along simplify course piperorigin revid 379365436,,
152,b7e9eee1087a1c6c12261264356a3cc5b8fc1e9b,sudol <tsudol@google.com>, 2021-06-14 13:03:40 -0700, , rollback change enum type stub piperorigin revid 379336558,,
153,b6c3d768d4a2ce681db70aab7e89432876837b68,demello <mdemello@google.com>, 2021-06-10 20:18:29 -0700, , fix python 3.7 nested tuples loaded single constant piperorigin revid 378791674,,
154,4f2a3794cff8758db3cd37ed6078f96390e90b55,echen <rechen@google.com>, 2021-06-10 18:01:22 -0700, , add internal bug link support.md piperorigin revid 378776086,,
155,def6af297104ff96f1ea0860ccf5a2a201c53958,demello <mdemello@google.com>, 2021-06-10 15:50:10 -0700, , add constant folding optimisation running bytecode optimisation collapse bytecode construct literal constant single opcode type literal attached corresponding code convert literal type put stack work progress major missing feature preserving actual python value constant piperorigin revid 378752757,,
156,0ab638e8f4e02cb126d39391cab0b966c1404243,sudol <tsudol@google.com>, 2021-06-10 11:54:53 -0700, , add basic support enums since may break target use enums locked behind use enum overlay feature flag piperorigin revid 378702063,,
157,a33fff17ffe435c9bd0730fed6a715fcace3640c,ebecca Chen <rechen@google.com>, 2021-06-09 15:11:40 -0700,943, merge pull request 943 google google_sync removed sorted call since py3,,
158,5ff04747886b3f713c4e447fb173fb1ddb1e72e0,palaguachi <rpalaguachi@google.com>, 2021-06-09 14:32:08 -0700, , removed sorted call since py3 piperorigin revid 378500623,,
159,df9f5724056b160d90c321e512218cbb563c9484,ebecca Chen <rechen@google.com>, 2021-06-09 12:25:30 -0700,942, merge pull request 942 google google_sync google sync,,
160,7409375752f361c5cff587c40b0aba8b67f89bb8,echen <rechen@google.com>, 2021-06-08 20:04:44 -0700, , make sure precise type stub inferred noticed playing around assert_type work open source pytype change fix piperorigin revid 378306254,,
161,f51bf7285753ef6c88ded02a0cf58389713ce860,demello <mdemello@google.com>, 2021-06-08 15:43:58 -0700, , document form assert_type matching piperorigin revid 378263593,,
162,6f73a67179922fde21ee101d0208a3bbf707cbc5,ebecca Chen <rechen@google.com>, 2021-06-08 16:57:42 -0700,941, merge pull request 941 google extension add linting testing type checking,,
163,425f118ffd0a7711c6717acb7092412a41c11427,ebecca Chen <rechen@google.com>, 2021-06-08 16:22:52 -0700, , add linting testing type checking,,
164,b209a96e2b85a342a06c882df330025d9e378686,ebecca Chen <rechen@google.com>, 2021-06-08 16:09:55 -0700,940, merge pull request 940 google google_sync google sync,,
165,070c36d5d8525cd0b64c9e471fda6683bcb14d80,echen <rechen@google.com>, 2021-06-08 15:07:16 -0700, , modify running open source test suite check presence __future__ import stripping make test code py3 satisfy open source linter make __init__.py py3 yet test already using python_version py3 test class subclass since test use type annotation piperorigin revid 378255488,,
166,bb957cefebf8ae9b7edfd64f302eda8b6867ebd0,demello <mdemello@google.com>, 2021-06-08 14:29:36 -0700, , move assert_type type checking time assert_type called either builtin support use temporary assert_type debugging without pull required following change make builtinfunction add assert_type builtins stub add pytype extension overlay add ability special builtins aliased module piperorigin revid 378246069,,
167,5da88fd3c7236e4c1c58dda432c3c8b5ad564ce7,echen <rechen@google.com>, 2021-06-08 14:42:33 -0700, , fix bug caused self typed property body resolve http github.com google pytype issue 516 piperorigin revid 378249380,,
168,75b44867dbc04d00b7ca7710654d5e41d83e141c,demello <mdemello@google.com>, 2021-06-08 14:29:36 -0700, , move assert_type type checking time assert_type called either builtin support use temporary assert_type debugging without pull required following change make builtinfunction add assert_type builtins stub add pytype extension overlay add ability special builtins aliased module piperorigin revid 378246069,,
169,36ea0a3a69f3513f131feb0bafad2885a1c4699e,sudol <tsudol@google.com>, 2021-06-07 11:49:49 -0700, , allow subclass make_class intended used overlay need define behavior piperorigin revid 377969349,,
170,5916b3a40ff654e3635e6fa8060325947968534f,demello <mdemello@google.com>, 2021-06-04 14:41:55 -0700, , non string type passed assert_type instantiate matching piperorigin revid 377593278,,
171,0841af95d67c9b066f922a54822385be7b85a855,ebecca Chen <rechen@google.com>, 2021-06-08 14:47:01 -0700,939, merge pull request 939 google extension make pip install also install,,
172,f59a1c9d5d5b193a02c63356f9b3b4f6fb8e85f2,ebecca Chen <rechen@google.com>, 2021-06-08 14:23:27 -0700, , make pip install also install,,
173,7901c8bb79628ad858d1be0f399bd7250846fe42,ebecca Chen <rechen@google.com>, 2021-06-04 14:53:09 -0700,937, merge pull request 937 google google_sync remove __future__ import,,
174,b7262f082e8b647c59f41fef0fa5078df2d46db8,echen <rechen@google.com>, 2021-06-04 13:49:56 -0700, , remove __future__ import seems like still straggler using py2 delete line altogether instead modified copybara config remove export piperorigin revid 377582188,,
175,67a3c050cdbf6c1caeb6f83c82bef67d56327678,ebecca Chen <rechen@google.com>, 2021-06-04 14:31:34 -0700,936, merge pull request 936 google google_sync google sync,,
176,ccc486472e86bc36b0138c00992477473f6a9b27,ebecca Chen <rechen@google.com>, 2021-06-04 14:06:23 -0700, , rename cmakelists.txt piperorigin revid 377584748,,
177,51a504e0d556cd7bdd5d1ee1bec0afc98b4a4be0,ematre <Sematre@gmx.de>, 2021-06-04 13:46:48 -0700,935, fix dead link importlab readme 935 importlab http github.com google importlab seems moved travis github action source http github.com google importlab commit link readme still pointing wrong address resolve 935 piperorigin revid 377581530,,
178,0fd27627f082b72856a0f2b4c175bba3db73839b,echen <rechen@google.com>, 2021-06-04 11:49:23 -0700, , make inheriting subclass work properly tried idea discussed last meeting init_subclass loop entire mro looking overlay object rather already loaded one somewhat surprise work one annoying thing filter name parent attribute auto added module think better way added rather ugly implicit_fields check abstract.py piperorigin revid 377557208,,
179,51a55214bd82157e2ed4570c0973ec0809a9d11a,echen <rechen@google.com>, 2021-06-03 22:38:31 -0700, , load_pytd tweak called log warning module found cause test failure try import latest version typeshed single_test expects stderr clean want remove altogether sometimes found output useful past log anything case finding module fine expected piperorigin revid 377444785,,
180,849d64dfe3ea52e3a8f97e99536d43aaa8b10f2f,ebecca Chen <rechen@google.com>, 2021-06-03 12:21:16 -0700,934, merge pull request 934 google google_sync google sync,,
181,007ea5fa76e32a95d66d88669d434c09d9a09d4f,ebecca Chen <rechen@google.com>, 2021-06-03 11:46:28 -0700, , rebucket test type annotation fix test failure http github.com google pytype run 2739710376 true piperorigin revid 377337700,,
182,bb795c4616af1f12b693ed9273aeafa63e95a1b3,ebecca Chen <rechen@google.com>, 2021-06-03 11:08:03 -0700, , address unnecessary pas lint warning http github.com google pytype run 2739568438 true piperorigin revid 377329362,,
183,693a13d7fb66c1abaff042b713934e40bd92c9e4,demello <mdemello@google.com>, 2021-06-01 14:19:06 -0700, , add assert_type statement assert pytype view expression type two form assertion assert_type type test type type assert_type test inferred assertion match string representation type roughly pytype would write .pyi file piperorigin revid 376917137,,
184,cd45bc455e72b2212ac3f3168c7a0741c26e39ce,echen <rechen@google.com>, 2021-06-01 14:15:58 -0700, , make dict.copy work subclass piperorigin revid 376916497,,
185,cfd14c4ea24a1a60dd42f86e514666f603134bdf,echen <rechen@google.com>, 2021-05-25 14:41:55 -0700, , fix descriptor __get__ bug piperorigin revid 375799084,,
186,0c2809888ac18367377c84b9bdf5133a59d18514,ebecca Chen <rechen@google.com>, 2021-06-03 10:40:13 -0700,933, merge pull request 933 google google_sync add initial copybara config,,
187,ff2d34278d5725e50179b462fb2f6ac97918f968,echen <rechen@google.com>, 2021-06-03 10:04:22 -0700, , add initial copybara config export new directory pytype github repo config branched pytype copy.bara.sky piperorigin revid 377313194,,
188,5a00cf4f5e05b0411ea3feb6ebd2dbcba72c09cd,ebecca Chen <rechen@google.com>, 2021-05-25 12:10:25 -0700,929, merge pull request 929 google google_sync prepare pypi release,,
189,6fb016d249802942a09e5e0194a012dd495e54d7,echen <rechen@google.com>, 2021-05-25 11:21:54 -0700, , prepare pypi release piperorigin revid 375751835,,
190,c3ee9dc1da346f697333e4551622da46bebf3635,ebecca Chen <rechen@google.com>, 2021-05-25 11:01:00 -0700,928, merge pull request 928 google google_sync google sync,,
191,1345c36e9a8416dd652b799de5e0a072fdd9c110,echen <rechen@google.com>, 2021-05-24 16:29:20 -0700, , add explanatory comment piperorigin revid 375582785,,
192,6ba494cdd40753c9eea8f593a3d9765ee59216b2,echen <rechen@google.com>, 2021-05-24 15:26:23 -0700, , add support generic dataclasses attrs pytype support generic dataclasses e.g  class foo generic  generic attrs use type comment pep 526 style annotation e.g attr.s class foo generic attr.ib  attr.s class foo generic attr.ib type mean following doe work supported yet attr.s class foo generic attr.ib type doe add support generic namedtuples supported yet class foo namedtuple generic  piperorigin revid 375570822,,
193,3de3ff71f91b551c6ec61c8754cd4cb3bc22ed3d,echen <rechen@google.com>, 2021-05-24 14:29:24 -0700, , add support referencing class scoped typevars variable annotation add support code like class foo generic  piperorigin revid 375558168,,
194,58135f2bddb5fd007714f32b05174e4aab3a9360,echen <rechen@google.com>, 2021-05-24 13:22:45 -0700, , add type annotation realized working different change somewhat difficult figure argument local.__init__ take added annotation piperorigin revid 375543658,,
195,0c8529ba6bb4cc590ebd37bc2ddafa1fe7a4b864,echen <rechen@google.com>, 2021-05-23 22:31:00 -0700, , export change user guide piperorigin revid 375415121,,
196,b6f843294948f4031adb4fd5fb2f66db7d5a7e2e,ebecca Chen <rechen@google.com>, 2021-05-20 15:08:01 -0700,927, merge pull request 927 google google_sync google sync,,
197,15ca0e6ced34a9befc437550c61a8f30cd1eedd2,echen <rechen@google.com>, 2021-05-20 14:16:38 -0700, , internal change piperorigin revid 374948330,,
198,dbed64f2c01d2af153afa2f80e2636bf289ebe79,echen <rechen@google.com>, 2021-05-20 13:04:10 -0700, , generate mutation __init__ parameter annotation stub fix longstanding bug type parameter filled nothing rather value passed via __init__ piperorigin revid 374934200,,
199,103e55b9ea68e4e562ed546680d392dfea33750a,echen <rechen@google.com>, 2021-05-20 12:37:11 -0700, , fix performance regression pytype pytd typeshed.py fix performance regression caused http github.com google pytype pull 906 calling repeatedly quite slow .par file caught release issue appears pytype run .par file usually load typeshed pickle never load increase time needed pickling barely noticeable however pytype.par run take longer analyze simple file due issue fix test timeout attached bug piperorigin revid 374928257,,
200,e0fd90e2a00f5a0beb54115dd1494a84632001dc,echen <rechen@google.com>, 2021-05-19 15:26:56 -0700, , add assertflags method make easier default temporary flag true removing providing easy way filter piperorigin revid 374742264,,
201,c515174e999af3187c105ae388bf362fb784915a,ebecca Chen <rechen@google.com>, 2021-05-19 15:30:30 -0700,926, merge pull request 926 google google_sync google sync,,
202,b493d30377e5b62a5f87c7f4f86c3bfbf40fbaae,echen <rechen@google.com>, 2021-05-19 14:47:23 -0700, , prepare pypi release piperorigin revid 374734140,,
203,f9c0b5f7bf9f928d210cd70c4e150bfee6c8b14a,echen <rechen@google.com>, 2021-05-18 16:20:37 -0700, , fix circular import issue pytd loader fix issue came typeshed touched module involved bunch import cycle later modified avoid triggering pytype bug fixing still valuable see http github.com python typeshed pull 5382 piperorigin revid 374528422,,
204,c6d671fc00d80023c80404c660810d897b689d8c,echen <rechen@google.com>, 2021-05-17 14:59:02 -0700, , get rid noticed special builtin longer needed pytype support filtering none type annotation via optional trick let filter support iterable type one enumerated  change exposed weird bug classtype none reference generated pytd codegen crash convert.py previous classtype none pointer filled _convert_cache fixed manually looking piperorigin revid 374287388,,
205,378d019e1c6bd89e29465d01a618624f39e8e3e6,ebecca Chen <rechen@google.com>, 2021-05-17 14:28:27 -0700,925, merge pull request 925 google google_sync add support pep 604 union stub file 924,,
206,505e14b2364b463374d4a535609054000b8d1750,elle Zijlstra <jelle.zijlstra@gmail.com>, 2021-05-17 13:35:42 -0700,924, add support pep 604 union stub file 924 part 785 though complete fix allow syntax runtime think resolve 924 piperorigin revid 374269437,,
207,7c16e7e389032c81bef22e79f28728b5c0b6cb64,ebecca Chen <rechen@google.com>, 2021-05-14 18:43:29 -0700,922, merge pull request 922 google google_sync cleanup refactoring prepare generic bug fix,,
208,e74ff5a5847a68c9a418345f250d478534e22c15,echen <rechen@google.com>, 2021-05-14 17:04:45 -0700, , cleanup refactoring prepare generic bug fix trying add support pytype annotating class attribute typevars class generic also partially fix generic container bug usual change got much large part user visible effect pull various piece code abstract.py method later extended reused move signedfunction base class also used simplefunction amazingly work change simplefunctions replaces is_var argument tell pytype type parameter scope allowed used annotation come two source currently pass new type_params field frame also currently always empty get rid unused property abstract_utils replaces take manipulates class rather returning member calling code add class add special logic type parameter piperorigin revid 373893819,,
209,aa31696c0d2689f4351f94465f5960666fa0c903,ebecca Chen <rechen@google.com>, 2021-05-14 15:56:51 -0700,921, merge pull request 921 google google_sync google sync,,
210,1318ea257d126d9f330ab3429b14edd62b6ec207,sudol <tsudol@google.com>, 2021-05-14 11:20:24 -0700, , add support calling metaclasses overlay needed pytype_enums may entirely necessary pas name class object passed first argument full list base absolutely needed e.g enums process list base use constructing enum still clear last argument needed piperorigin revid 373828024,,
211,a8e33fb5fd06ca4d4691d903b8c75afe83ce0af9,echen <rechen@google.com>, 2021-05-14 13:56:13 -0700, , prepare pypi release release get typeguard __path__ change piperorigin revid 373860248,,
212,f603f93781cd683695e7ab9dabb9d7cdaea69185,ebecca Chen <rechen@google.com>, 2021-05-13 19:59:17 -0700,920, merge pull request 920 google google_sync google sync,,
213,7c9ad9ae00aa504d3c08d95f720c6092fd5eb2aa,demello <mdemello@google.com>, 2021-05-13 18:37:16 -0700, , add replace method flax dataclasses piperorigin revid 373700643,,
214,d2b61edfc24d245a2d241118bc50fee6b34ac301,echen <rechen@google.com>, 2021-05-13 17:45:48 -0700,918, change type __path__ iterable list technically wrong __path__ custom iterable namespace package http docs.python.org reference import.html namespace package typeshed changed claim accepts list http github.com python typeshed commit need change avoid pytype erroring basic path manipulation fix http github.com google pytype issue 918 piperorigin revid 373694139,,
215,9383df5f0e4c65d268a1ec2feac942774bc9c0b2,ebecca Chen <rechen@google.com>, 2021-05-13 16:47:57 -0700,919, merge pull request 919 google google_sync google sync,,
216,b684d0342334cb3110621ad37cbfea9a0e137fbb,echen <rechen@google.com>, 2021-05-13 16:16:59 -0700, , allow used type stub http github.com google pytype issue 916 piperorigin revid 373679585,,
217,cea2616c4bf8f6041ed26df244ab11ed9f377736,echen <rechen@google.com>, 2021-05-13 15:17:24 -0700, , add github issue link type guard piperorigin revid 373668728,,
218,ac837b1c31e44be9c69428f424854b2880912939,demello <mdemello@google.com>, 2021-05-13 12:41:07 -0700, , fix order inherited attribute dataclasses dataclasses attrs follow different scheme collecting mro attribute taken attrs behaviour default piperorigin revid 373636215,,
219,834428630b0db9fb0a29ce79de31fcc57464b2f7,echen <rechen@google.com>, 2021-05-12 13:04:08 -0700, , remove unnecessary pytype disable test_base.py  piperorigin revid 373433996,,
220,82fb52e8487402ffa4fb7cc970b21f53ab84758a,ebecca Chen <rechen@google.com>, 2021-05-11 13:42:53 -0700,917, merge pull request 917 google google_sync google sync,,
221,e609fd1b0484197cb70256fdeef480281b277dd0,echen <rechen@google.com>, 2021-05-11 13:16:14 -0700, , rebucket pytype test type annotation piperorigin revid 373218681,,
222,1e8adfc2585c800db9e5b451df99a4f4c97ed330,echen <rechen@google.com>, 2021-05-11 12:56:17 -0700, , prepare pypi release also updated changelog entry previous release include typeshed update forgot piperorigin revid 373214411,,
223,e4dceda4273ae7cc690ed6f0e8db79c3e881d3d2,ytype Team <pytype@googlegroups.com>, 2021-05-11 06:22:47 -0700, , internal change piperorigin revid 373136481,,
224,540b461b987896aee8fa53b1190db5fb8073ce5a,ebecca Chen <rechen@google.com>, 2021-05-10 16:31:31 -0700,915, merge pull request 915 google google_sync google sync,,
225,3cde1c4e8c86d780dde83784bdfcfc6be42b29cf,ebecca Chen <rechen@google.com>, 2021-05-10 16:03:31 -0700, , fix pytype error output.py introduced type error previous change caught attempted github export thanks pytd fully analyzed internally note issue resolved adding overload pytype skip abstract.py incorrectly match overload reference abstract.py type piperorigin revid 373031044,,
226,a2c025b96b6c51e32624c3d61a3957df44152f85,echen <rechen@google.com>, 2021-05-10 14:27:45 -0700, , make importing typeddict supported yet error instead import error add typing stub typeshed reference fail also happens fix error pytype gave weird error message typeddict import resolve http github.com google pytype issue 832 piperorigin revid 373012582,,
227,92d89b306ed522178814c596876ac72c6e7f303c,echen <rechen@google.com>, 2021-05-10 12:34:33 -0700, , fix bug attribute lookup need check base class let get rid disable pytype code http github.com google pytype blob pytype test test_base.py l165 piperorigin revid 372988488,,
228,2f6e834776a00980d4039a7a51c357e8f973ebae,echen <rechen@google.com>, 2021-05-10 12:02:21 -0700, , fix generic bug pytype inferring weird type self generic class typevar constraint class subclass defined file fixed filtering call record introduces bad type rather recording call first place pytype sometimes doe sometimes want record method call subclass tell collected call record also fixed small bug pytd printer sometimes adding unnecessary import triggered new test added change piperorigin revid 372981555,,
229,5f083e75a8a86927ab5bb66a1f81a2018ef0b210,echen <rechen@google.com>, 2021-05-10 11:40:38 -0700, , cleanup remove unnecessary pytype disables piperorigin revid 372976550,,
230,9bc3db8f5291d8c63a5563c29e75742b7418d83e,ebecca Chen <rechen@google.com>, 2021-05-10 11:50:04 -0700,913, merge pull request 913 google google_sync google sync,,
231,613ee0911344a22bf99f4ddd9679b7f7c8aa6a2e,ebecca Chen <rechen@google.com>, 2021-05-10 11:19:17 -0700, , fix raise missing lint warning seen http github.com google pytype run 2532612035 true piperorigin revid 372966143,,
232,ee1b1cd8f7c557922fb17aa5900869afb61063c1,echen <rechen@google.com>, 2021-05-07 17:30:02 -0700, , update doc update support level generic type alias refresh everything piperorigin revid 372658154,,
233,a03fb262c1e5c2fdef7de9aa2b14263d501fb745,echen <rechen@google.com>, 2021-05-07 16:28:26 -0700, , fix python 3.7 failure typeshed test pytype_test.py failure triggered load load multiprocessing able resolve reference yet instead directly look reference ast unfortunately able construct local test case error seems depend pytype_test loading file specific order code path exercised test enabled 3.7 piperorigin revid 372649664,,
234,5d65762a9c63d01dded424c33d05c6f948c3fbb4,echen <rechen@google.com>, 2021-05-07 14:44:24 -0700, , pytd populated mutated_type annotated self parameter recent typeshed update change fill type parameter via annotation self class generic anystr def __init__ self str ... none ... add support pytype pattern change pytype pyi function.py add extra mutator self detected generic annotation fix test case pytype pytd expect self annotation copied mutated_type improves mutation generation pytype function.py handle type piperorigin revid 372631910,,
235,b7d6a6732321ba42970665e20efb1540135d3242,demello <mdemello@google.com>, 2021-05-07 12:22:34 -0700, , preserve kw_only attribute inheriting attrs different module piperorigin revid 372605266,,
236,5a850af6a141a99c2077d308cc088bdd1fcdf781,demello <mdemello@google.com>, 2021-05-06 15:46:18 -0700, , add state allow recursive construction pytd value needed single use case dataclass code generation imported pytdclass hard handle recursive field annotation way also remove class visitor earlier attempt handle recursion cover corner case piperorigin revid 372440646,,
237,f5fb43a589e64f1d52988fa123aa8b927316a854,ebecca Chen <rechen@google.com>, 2021-05-07 16:13:58 -0700,912, merge pull request 912 google attrs require attrs 21.2.0,,
238,3ed288364fefbace4683eccde4ce87e44cf44b92,ebecca Chen <rechen@google.com>, 2021-05-07 14:24:15 -0700, , require attrs 21.2.0 see http github.com google pytype issue 909,,
239,507ddf763e4a33a9c466c4016c5e81b81ef0cb92,ebecca Chen <rechen@google.com>, 2021-05-06 14:33:06 -0700,911, merge pull request 911 google google_sync google sync,,
240,b554faeb158e7e0f0e44efbb6a1b3de0e48708eb,echen <rechen@google.com>, 2021-05-06 11:19:11 -0700, , another pypi release push couple bug fix piperorigin revid 372384526,,
241,00c5dc840e39479c28a53c96d61c89c086546965,echen <rechen@google.com>, 2021-05-05 16:00:30 -0700, , add typing._alias used typeshed see http github.com python typeshed pull 5345 piperorigin revid 372226096,,
242,d980a7df2d919e936fea70bfd825798f6aff14be,ebecca Chen <rechen@google.com>, 2021-05-06 10:50:54 -0700,910, merge pull request 910 google attrs pin attrs 20.3.0,,
243,733f63e7e49a3e5954d4ea3b76da0ff3e62bb2cf,ebecca Chen <rechen@google.com>, 2021-05-06 09:48:25 -0700, , pin attrs 20.3.0 http github.com google pytype issue 909,,
244,b578f1230630ead785c05c69bc6e30af1442d932,ebecca Chen <rechen@google.com>, 2021-05-05 11:30:00 -0700,908, merge pull request 908 google update typeshed,,
245,cac8b943b49f664a427c86fedfe1b9eef095a834,ebecca Chen <rechen@google.com>, 2021-05-05 11:01:25 -0700, , update typeshed,,
246,93c778f867155e032a517b3f5a8228b12ac3c966,ebecca Chen <rechen@google.com>, 2021-05-04 15:25:18 -0700,907, merge pull request 907 google google_sync google sync,,
247,b4993030668e9bd609a389cbcc442777b559e3a7,echen <rechen@google.com>, 2021-05-04 14:43:06 -0700, , prepare pypi release piperorigin revid 371998798,,
248,277b881b8eb737b62a85da903f1bc0fc338763fc,elle Zijlstra <jelle.zijlstra@gmail.com>, 2021-05-04 14:35:13 -0700,906, fix handling stdlib python2 906 related python typeshed 5329 set 2.7 minimum version version library existed 2.7. tested running pytype_test.py typeshed resolve 906 piperorigin revid 371997182,,
249,bd35b346dfd6df06f00192b9fa9aa52cd41ed930,demello <mdemello@google.com>, 2021-05-03 17:19:38 -0700, , add stub piperorigin revid 371811591,,
250,3ebb39781a86638d40338f80aed427dcef8c8cf3,ebecca Chen <rechen@google.com>, 2021-05-03 15:18:39 -0700,905, merge pull request 905 google google_sync google sync,,
251,d70ae7a77f215648f0b13d97dd08295588495480,ebastian Rittau <srittau@rittau.biz>, 2021-05-03 14:42:50 -0700,903, support max version typeshed version file 903 discussed python typeshed 5304. please note mostly untested hope pass resolve 903 piperorigin revid 371781551,,
252,66514ee82f3c8b86152232efbed08399c8e3a603,echen <rechen@google.com>, 2021-04-30 23:49:02 -0700, , internal change piperorigin revid 371461419,,
253,db842fa85f161393e952c2c128a92b812f99f453,demello <mdemello@google.com>, 2021-04-30 15:41:26 -0700, , output classvars pyi file also handle inherited classvars dataclasses correctly piperorigin revid 371418465,,
254,3e3d8a3095d4bb8096aa44dd1c0c9ad8c5016dea,ebecca Chen <rechen@google.com>, 2021-04-29 18:21:47 -0700,902, merge pull request 902 google google_sync google sync,,
255,658b48e833644baa1ae66e05829f543113648b75,echen <rechen@google.com>, 2021-04-29 17:16:08 -0700, , fix accidental typevar name reuse chex_overlay piperorigin revid 371237148,,
256,5267d02bedd0c22c0a116d59c407a5eb3a01d09e,echen <rechen@google.com>, 2021-04-28 20:24:27 -0700, , add overlay third party chex.dataclass decorator see linked bug begin_interal sample 40k target change caused breakage file ocl 369786366 base 370826609 1619585495126 6d6b446b enough warrant feature flag end_internal piperorigin revid 371040126,,
257,82ceff46544ad7b26e6ac5bfa96d0bee205d6e4c,echen <rechen@google.com>, 2021-04-28 12:19:04 -0700, , remove pytype flag enabled default piperorigin revid 370958672,,
258,d4f97e1f75232c21bee88e73e3362cc7405bef78,ebecca Chen <rechen@google.com>, 2021-04-27 17:09:28 -0700,901, merge pull request 901 google google_sync google sync,,
259,842f7a273c4a38fb5c6784e2dd237e32d25e31cf,ebecca Chen <rechen@google.com>, 2021-04-27 16:34:01 -0700, , renable consider using lint check,,
260,55c27090253335b757031c274b341735ac8d6918,echen <rechen@google.com>, 2021-04-27 16:25:43 -0700, , switch using statement resource allocating operation update pytype code satisfy new lint check consider using disabled check place immediately obvious update code piperorigin revid 370786571,,
261,8fc23b83eadaa83bd325656570beb3f8bac69dbb,ebecca Chen <rechen@google.com>, 2021-04-26 17:24:38 -0700,900, merge pull request 900 google google_sync google sync,,
262,80f1a117b922d3d1ab8d96a54471c8919020c6dd,echen <rechen@google.com>, 2021-04-26 16:38:43 -0700, , prepare pypi release piperorigin revid 370568391,,
263,e4522a258b57dd2cd71a2025351b2c91552780ba,echen <rechen@google.com>, 2021-04-26 15:58:45 -0700, , support nested type parameter generic type alias pytype support alias like list dict previously dict would mistakenly treated single type parameter piperorigin revid 370560643,,
264,1a5d4d9655ffb1308a244eef7558af3981f85959,demello <mdemello@google.com>, 2021-04-23 17:11:33 -0700, , use __init__ function source truth pyi dataclass field inheriting pyi dataclass __init__ signature contain field want inherit subclass __init__ full list class attribute might contain classvars non dataclass attribute generated source file piperorigin revid 370185847,,
265,27786b0db113342aff6d34be99d4e021026ab67f,ebecca Chen <rechen@google.com>, 2021-04-26 16:57:56 -0700,899, merge pull request 899 google lint disable lint warning consider using,,
266,129cc7ffc5ab34a93cc12ba19e841b327e15891a,ebecca Chen <rechen@google.com>, 2021-04-26 16:20:00 -0700, , disable lint warning consider using warning seems useful may reenable later change needed satisfy obviously safe disabling,,
267,951a14344fed1f73fc807b29fc46a80b192cfccd,ebecca Chen <rechen@google.com>, 2021-04-23 19:56:43 -0700,898, merge pull request 898 google google_sync google sync,,
268,57213404ea5d7cf2d708b85cb1fdb7fd5ea4ea91,ebecca Chen <rechen@google.com>, 2021-04-23 17:10:49 -0700, , fix trailing newlines error github export http github.com google pytype run 2424143159 true piperorigin revid 370185478,,
269,6ae87b2d81d8d6c844a156ef5f07dc01f86170c5,echen <rechen@google.com>, 2021-04-23 15:22:51 -0700, , fix bug nested support due fully qualified name matching class name vm.local_ops detecting namedtuple field piperorigin revid 370169068,,
270,7a25418d16f86461f80baa1de4f4d8e4481c62f3,demello <mdemello@google.com>, 2021-04-23 14:52:50 -0700, , remove recursive type definition constructing pyi dataclasses also move pytdclass specific code class_mixin piperorigin revid 370163419,,
271,c478573a198c7a7ff6dafd078b363254d2427f98,echen <rechen@google.com>, 2021-04-23 14:44:46 -0700, , method aliasing pyi file consider base class lookup see http github.com python typeshed pull 5231 context piperorigin revid 370161921,,
272,362c3a2b25e582b2f2490b7b356b7255ee19650e,demello <mdemello@google.com>, 2021-04-22 19:53:20 -0700, , put pyi dataclass creation behind feature flag continue output decorator pyi file flag false reading back construct dataclass piperorigin revid 370001616,,
273,18f8d913da346700f3723600cec822302ba4ecf4,echen <rechen@google.com>, 2021-04-22 19:22:34 -0700, , set check variable type default true piperorigin revid 369998884,,
274,31009ab9b8cd43bdd81441c93ba8ae3bd93a44bb,echen <rechen@google.com>, 2021-04-22 16:34:31 -0700, , fix pytype crash generic protocol piperorigin revid 369975384,,
275,8a18a1dc24d8eea7419e7fcb9182a65a77c11646,ebecca Chen <rechen@google.com>, 2021-04-22 01:54:16 -0700,897, merge pull request 897 google google_sync google sync,,
276,fb4423fa49291db91a8f8a894f0b0d703936714b,echen <rechen@google.com>, 2021-04-21 19:18:31 -0700, , add callable support better error handling generic type alias add support using typing.callable generic type alias including use case involving typevar repated multiple time reported recent issue improves error reporting missing extra parameter piperorigin revid 369783775,,
277,ca91ddb05bab3cc448fc0c887b46a28422d3ad94,demello <mdemello@google.com>, 2021-04-21 19:17:46 -0700, , fix set recursive type annotation pyi dataclass __init__ args yet fully handle recursive type like dataclass class optional pyi file hack set recursive type annotation setting metadata imported dataclass affect dataclasses inheriting imported class piperorigin revid 369783683,,
278,c8d8de81373fe2b90342a889fccca83b9d5460f9,echen <rechen@google.com>, 2021-04-21 11:42:48 -0700, , detect apply pep 526 style variable annotation attribute somewhat embarrassingly silently ignoring change need feature rollout process piperorigin revid 369700373,,
279,75f83c5d589ff87a58577828c82341b165eaa068,ebecca Chen <rechen@google.com>, 2021-04-21 12:05:35 -0700,896, merge pull request 896 google google_sync google sync,,
280,c515db93d99d26e808d40a61a5675af75594a3a9,ebecca Chen <rechen@google.com>, 2021-04-21 11:27:37 -0700, , fix unnecessary comprehension lint warning seen http github.com google pytype run 2395958856 true reasoning behind check seems http github.com pycqa pylint issue 2905. entirely convinced comprehension readable easy enough change piperorigin revid 369695810,,
281,df886df995d2c355543dc73836acbbd830e381a8,echen <rechen@google.com>, 2021-04-20 17:24:02 -0700, , add support union generic type alias get union int def ... working also deleted literal test realized typevars literal illegal http www.python.org dev pep pep 0586 illegal parameter literal type check time piperorigin revid 369554166,,
282,c9ef3b8cae2176ab5ef08e13e0f7e3b2af8a5d5a,echen <rechen@google.com>, 2021-04-20 17:07:51 -0700, , add fix suggestion annotation type mismatch none value code like def int none ... pytype report file foo.py line module type annotation doe match type assignment annotation type mismatch annotation int mean typing.optional int assignment none piperorigin revid 369551536,,
283,6f98aee8da8f8a4e98fc8b46df08583510a0d9a9,demello <mdemello@google.com>, 2021-04-20 14:07:18 -0700, , output class decorator pyi file allows inheritance dataclasses attrs across module boundary preserve class decorator writing pyi output preserve class attribute order dataclasses attrs sort record initvars initvar typ rather typ override explicit __init__ method pyi dataclasses piperorigin revid 369516540,,
284,465b056b299555db0f20d76113c474df79241fbe,echen <rechen@google.com>, 2021-04-20 13:41:51 -0700, , fix invalid namedtuple arg error resolve http github.com google pytype issue 894 piperorigin revid 369511371,,
285,fb07ba26d33aee1a2336a9203ed9358098f73861,ebecca Chen <rechen@google.com>, 2021-04-20 13:50:03 -0700,895, merge pull request 895 google google_sync google sync,,
286,6e9862c97fbd224982c24f28fa9a78a641069fd3,ebecca Chen <rechen@google.com>, 2021-04-20 00:19:55 -0700, , move incorrectly bucketed pytype test oops piperorigin revid 369357812,,
287,de083502ee26961119d21b48a02fd7a2db494301,echen <rechen@google.com>, 2021-04-19 19:25:12 -0700, , lose track attribute typing.final used previously decorating __init__ typing _extensions .final would generate supported yet error cause pytype unable find attribute defined decorated __init__ change pytype report supported yet treat final identity function piperorigin revid 369352587,,
288,a7d6df9b14cea066fe7bff016097a1c23ec8b611,echen <rechen@google.com>, 2021-04-19 18:33:04 -0700, , clear temporary blocklists flip associated flag default two blocklists empty deleted third one file left piperorigin revid 369346594,,
289,562a0973470892ff1ccb08a98f4dec6ea9887d3a,demello <mdemello@google.com>, 2021-04-16 12:42:24 -0700, , default leave annotated initvar doe change existing behaviour annotated type output pyi required round tripping cross module inheritance dataclasses initvars piperorigin revid 368900418,,
290,6779582d8e41e7d592964b5a82d030246441500b,echen <rechen@google.com>, 2021-04-15 22:35:51 -0700, , substitute right typevar value child generic class non generic class inherits generic one child doe non empty template one parent doe logic substitute right typevar value method call work temporarily setting self annotation template present need walk class mro looking generic parent piperorigin revid 368782058,,
291,d928a89749964a0ef5b12977c384a37e4102bdc3,ebecca Chen <rechen@google.com>, 2021-04-15 17:58:47 -0700,892, merge pull request 892 google version bundle typeshed metadata file setup.py,,
292,3faf7b0cd174daa030a314c1774e17d46d74792a,ebecca Chen <rechen@google.com>, 2021-04-15 17:29:16 -0700, , bundle typeshed metadata file setup.py,,
293,5daee9dc12fb0bee78c9a0d92e79accdbbf43306,ebecca Chen <rechen@google.com>, 2021-04-15 16:48:33 -0700,891, merge pull request 891 google google_sync google sync,,
294,ed192c8aad1dd77a61f1b5ee0f3652dad8e7b19f,echen <rechen@google.com>, 2021-04-15 15:54:24 -0700, , prepare pypi release piperorigin revid 368734644,,
295,28af06f62e67ae840e5db516288df4d9eef73450,echen <rechen@google.com>, 2021-04-15 13:32:46 -0700, , add support generic type alias change generic type alias working container type dict list tuple etc still work special container typing_overlay callable literal union added skipped test tested rebuilt pytype par ran tgp ocl 368552652 base 368554562 1618479527787 c523ed86 piperorigin revid 368707443,,
296,b5811e8e430dcd95f15370c37b5d50556f3d5328,echen <rechen@google.com>, 2021-04-15 12:01:50 -0700, , drop support old typeshed directory structure piperorigin revid 368688457,,
297,51611f0c9368d256ea1c0324c660b53634d986fd,demello <mdemello@google.com>, 2021-04-14 16:16:17 -0700, , add link tale two type system paper piperorigin revid 368529046,,
298,92e6f130098f51b218760be576152ea298c7206d,echen <rechen@google.com>, 2021-04-14 11:47:39 -0700, , fix bug using generic type alias involving typing.tuple piperorigin revid 368475359,,
299,55e2f82a5431e9c0a2337691033f1645c477ab8f,echen <rechen@google.com>, 2021-04-14 10:19:32 -0700, , add builtins stub piperorigin revid 368455832,,
300,b26782003b4262e34b50cd1f265c34a7f2266ad8,ebecca Chen <rechen@google.com>, 2021-04-14 16:59:04 -0700,888, merge pull request 888 google py310 grab typed_ast fix python 3.10,,
301,ef9334558d32c56c5b126c23c43c176c87b487bf,ebecca Chen <rechen@google.com>, 2021-04-13 18:17:34 -0700, , grab typed_ast fix python 3.10,,
302,d9dcbc8786895b7f4ee6104c2405474c21557013,ebecca Chen <rechen@google.com>, 2021-04-13 13:43:43 -0700,887, merge pull request 887 google google_sync google sync,,
303,a31957c8d30119286bb2f3d08644d3c49599b55f,ebecca Chen <rechen@google.com>, 2021-04-13 13:19:20 -0700, , fix setup.py typeshed content check,,
304,8c2cbaac8608c5fd35769ed32d2183005b5290d3,ebecca Chen <rechen@google.com>, 2021-04-13 13:09:55 -0700, , update typeshed,,
305,c7b396c12e77a1250e0624c27488193c36af84f6,echen <rechen@google.com>, 2021-04-13 01:04:36 -0700, , update typeshed update typeshed commit directory structure completely overhauled change type information piperorigin revid 368166631,,
306,ff30c6bbd76493979b98efc1ccc5aeb9e9be4ddf,ebecca Chen <rechen@google.com>, 2021-04-12 17:48:10 -0700,886, merge pull request 886 google google_sync google sync,,
307,2ab2492210ba9b066314a4f742e2d050b5c40d48,echen <rechen@google.com>, 2021-04-12 16:54:59 -0700, , add typing import overload statement using overload fix http github.com google pytype issue 884 piperorigin revid 368112558,,
308,973352af9bc4f45885ad1eee20b790210be341e2,echen <rechen@google.com>, 2021-04-12 15:08:11 -0700, , delete check nonnull parameter type flag piperorigin revid 368093518,,
309,acc07dd891e531b29cea38722f1af90d8aa4a9c3,echen <rechen@google.com>, 2021-04-12 11:21:59 -0700, , fix typeshed handling .par pytype installation pytype packaged .par os.path.exists os.listdir work breaking handling new typeshed structure change believe everything finally working par non par installation ran test confirmed right number typeshed module loaded built pytype target dev mode rebuilt par add _file_exists _list_files method work par non par pytype installation reworks single recursive walk file stub par installation efficiently listdir directory get name immediately directory tweak remove complexity calling _build_lister wrapper build lister function instead internal lister function used directly handle typeshed pytype stub path separately make file handling code simpler deal typeshed path piperorigin revid 368044952,,
310,5f1c3cf25f518baa682666bc36c514aa68123572,echen <rechen@google.com>, 2021-04-12 11:19:35 -0700, , add pep 647 user defined type guard support.md piperorigin revid 368044464,,
311,17c374dbecd00adbad32ed112791aeafc87e455b,sudol <tsudol@google.com>, 2021-04-09 15:24:23 -0700, , simplify pytype bool definition need add special definition dunder method differ int mostly boolean method piperorigin revid 367714860,,
312,6314ee9b1069067455f54d8d32f3ece0fe48f3f0,ebecca Chen <rechen@google.com>, 2021-04-09 15:04:06 -0700,885, merge pull request 885 google google_sync google sync,,
313,8ef2fd1b55d8fd446414ec5314ab25439b303100,echen <rechen@google.com>, 2021-04-09 14:01:01 -0700, , prepare pypi release piperorigin revid 367699491,,
314,d5a77f444d07dba0fea4fad3a24a860b8442ef69,sudol <tsudol@google.com>, 2021-04-09 12:33:54 -0700, , add gi_ field generator ideally gi_code gi_frame would specific type impossible import type typing builtins fortunately field widely used piperorigin revid 367683134,,
315,f169fd5fd4b02b1253675627aeeea073953caf4f,ebecca Chen <rechen@google.com>, 2021-04-08 18:02:43 -0700,883, merge pull request 883 google google_sync google sync,,
316,a6570e9d9552355cbf9b5509af95063c73b37bf8,echen <rechen@google.com>, 2021-04-08 17:35:28 -0700, , fix error message pyi classdef.py string pytype would unhelpfully report parseerror must str type rather real error piperorigin revid 367540826,,
317,febc0c1e4531d7b5705a74aedfb8ce7ee004c09f,echen <rechen@google.com>, 2021-04-08 16:51:55 -0700, , support using inside class named annotated fix type checking failure http github.com google pytype run 2293903496 true surprisingly difficult add label class alias etc distinguish import redefinition typing name current module inlines working realized _fromtyping confusing fix bug import typing would sometimes unnecessarily added make work properly module member prefixed module name piperorigin revid 367534170,,
318,bc1d8b41afe474e1df837825616c3177271c928a,demello <mdemello@google.com>, 2021-04-07 20:03:45 -0700, , output property annotated property pytd file property still treated constant tagged property round tripping doe lose fact property piperorigin revid 367348049,,
319,cff3ad27b92a3707886f9b218e720722d23c1919,demello <mdemello@google.com>, 2021-04-07 19:11:23 -0700, , filter property class attribute constructing dataclasses convert pyi property annotated type property parse time add method get filtered list class attribute filter property dataclass init field piperorigin revid 367343353,,
320,d0e3f0d205188023bedb338b69a7f8691f1fc530,demello <mdemello@google.com>, 2021-04-07 19:00:18 -0700, , add support pyi file currently supported form annotated type string annotated file annotation string dropped brings pyi file behaviour par file support using annotation possibly round tripping added later piperorigin revid 367341965,,
321,16410c54a2a883a40d546fe3f33c94d34eb1c2cb,echen <rechen@google.com>, 2021-04-07 13:34:34 -0700, , remove set flag default true last three entry file view modify accidentally listed twice ... probably bad merge point moved error_blocklist get rid pytype release flag default change able remove check nonnull parameter type features.bzl remove flag altogether piperorigin revid 367287464,,
322,af3861f9d2b5ec54b19d57c326ff3c67dfb6a380,echen <rechen@google.com>, 2021-04-07 12:25:09 -0700, , make fix pytype typeshed handling code test pas using new directory structure improves check whether file path treated module given python version particular need check stdlib version target python always add stdlib python2 list path search case top level module present stdlib stdlib python2 happens add missing module search path unless confirmed missing.txt otherwise accidentally grab module support specified python version fix logic computing module name missing.txt entry fix typeshed_test use tuples instead list python version test 3.6 rather 3.5. 3.5 test technically wrong module checked supported typeshed 3.6 piperorigin revid 367273220,,
323,df142875b9f55b005217ffc25b5f9010a5d75c0a,demello <mdemello@google.com>, 2021-04-06 14:49:18 -0700, , stop using directly piperorigin revid 367090295,,
324,ca6d249f36dca047f6e915cabff907b2d000894f,ebecca Chen <rechen@google.com>, 2021-04-06 12:46:48 -0700,881, merge pull request 881 google google_sync google sync,,
325,ecad51ed52069841acd242be72dda92b2f3aefb7,sudol <tsudol@google.com>, 2021-04-06 11:41:46 -0700, , make sure always accepts kwargs piperorigin revid 367050678,,
326,af0afbc8cce03ec8b0e03915aab8f55d404d31cb,echen <rechen@google.com>, 2021-04-06 11:25:46 -0700, , fix bug actually trying update third_party typeshed use new directory structure typeshed switched january found bug handle new structure piperorigin revid 367047298,,
327,02e69f562be873ce0acd03c28347cef6f1139421,sudol <tsudol@google.com>, 2021-04-06 11:13:25 -0700, , check starargs starstarargs gathering typevars function sigs gathering mutation also make sure every typevar variable otherwise mutation cause crash piperorigin revid 367044624,,
328,9a62359b55c78c4493a74f17f2b5b9b69791b33d,ebecca Chen <rechen@google.com>, 2021-04-02 16:15:24 -0700,880, merge pull request 880 google google_sync google sync,,
329,402bd168e208affaecdf3f2f2facf93b6f5d7c01,echen <rechen@google.com>, 2021-04-02 01:43:31 -0700, , fix minor bug pytype expansion protocol inheriting protocol shorthand inheriting protocol generic handling case properly typing.protocol  context http github.com python typeshed pull 5172 piperorigin revid 366414389,,
330,cadff0cbaf1a7e31b7f05810a4a2aea18c4d34c8,demello <mdemello@google.com>, 2021-04-01 20:17:41 -0700, , fix crash analysed code accessed undefined closure cell variable outer scope used function keyword argument defined yet pytype would raise exception correctly return name error undefined variable piperorigin revid 366383653,,
331,69f02ef191d3c06c695fe7e76b9d95dfa7d44fcd,ebecca Chen <rechen@google.com>, 2021-04-01 18:08:06 -0700,879, merge pull request 879 google google_sync add minimal support pep 612 type stub,,
332,0f1033eff27c208307e9f70a8cf070574b38fefe,echen <rechen@google.com>, 2021-04-01 15:25:33 -0700, , add minimal support pep 612 type stub pytype gracefully fall back used first argument callable type stub allowing typeshed start using pep 612. custom generic class parameterized paramspec still supported pytype reporting weird bad unpacking error parser.py kept adding ast3.ast annotation went away also fixed bug printvisitor caused print import alias rather import http github.com google pytype issue 786 piperorigin revid 366342708,,
333,22150dd56c2a11f3d385a1cbb28eed985df31d72,ebecca Chen <rechen@google.com>, 2021-04-01 16:31:24 -0700,878, merge pull request 878 google google_sync prepare 2021 pypi release joke really,,
334,cd24214c74fb8a1eefb404be93aad9a356b6e33d,echen <rechen@google.com>, 2021-04-01 13:36:57 -0700, , prepare 2021 pypi release joke really piperorigin revid 366320741,,
335,a5943856bd357de40b3e15bd6108ff460b8531ce,ebecca Chen <rechen@google.com>, 2021-03-31 15:46:15 -0700,877, merge pull request 877 google google_sync google sync,,
336,90a4ac1dae7bf86726dc29006b98dbb91b7e30ec,demello <mdemello@google.com>, 2021-03-31 14:38:16 -0700, , minor pytd visitor code cleanup move printvisitor module delete unused visitor piperorigin revid 366118732,,
337,026ccfbd7eac409311b2259f04d17754f9d6180f,echen <rechen@google.com>, 2021-03-30 16:02:25 -0700, , update doc indicate python 3.9 support piperorigin revid 365916973,,
338,34e157299e990d833a0ba17aa7d0924b9378ace8,ebecca Chen <rechen@google.com>, 2021-03-30 19:17:36 -0700,876, merge pull request 876 google google_sync google sync,,
339,283415bdc3f737083d334c78517cfb40767691c2,ebecca Chen <rechen@google.com>, 2021-03-30 16:34:17 -0700, , work around typed_ast installation failure python 3.10,,
340,e91a1b4b5aa0b82efd1803796e4cd940aae39670,ebecca Chen <rechen@google.com>, 2021-03-30 15:25:57 -0700, , move python 3.9 test experimental add 3.9 wheel,,
341,763443af37e2fe9c15ad68ecf8f8e000dc0aa7bd,echen <rechen@google.com>, 2021-03-30 14:42:44 -0700, , finish adding basic python 3.9 support 3.9 test pas add 3.9 supported version utils.py fix turn opcode replacement compare_op cmp_exc_match jump sequence older version need copy compare_op behavior fixing top stack pushing indefinite bool update list_extend take advantage existing splat handling code one tricky point longer convenient distinction function non function splat provided look ahead opcodes determine splat handled http github.com google pytype issue 749 piperorigin revid 365900445,,
342,85b6e907801117b9c29fb56a38416541d5c2a1dc,demello <mdemello@google.com>, 2021-03-30 14:22:45 -0700, , rollback changelist 365646551 reason rollback many new breakage original change description convert property constant write property pyi file decorated method parse property decorator pyi file tested calling property imported class still work  piperorigin revid 365895863,,
343,fa69eba8d711925af7090bda391d8592e02b7460,echen <rechen@google.com>, 2021-03-29 17:38:48 -0700, , add is_concrete method often check determine pythonconstant truly concrete value abstract value previously concrete helper method make easier piperorigin revid 365703609,,
344,b8278703e33a3e63e841e924dc9a9a1fdb65589c,ebecca Chen <rechen@google.com>, 2021-03-30 00:03:38 -0700,875, merge pull request 875 google pylint ignore pylint warning,,
345,18382caad99ac0320cb0ea708cb18e508308dc08,ebecca Chen <rechen@google.com>, 2021-03-29 23:27:00 -0700, , ignore pylint warning warning new 3.9 test doe seem useful,,
346,1c85afaa18f8bb39ad10b088c480bfa0cf9688c9,ebecca Chen <rechen@google.com>, 2021-03-29 18:04:37 -0700,874, merge pull request 874 google google_sync google sync,,
347,a4ac046dae01d434b6540d1f5b31c431cdd66b38,echen <rechen@google.com>, 2021-03-29 16:45:34 -0700, , improve pytype implementation new python 3.9 opcodes brings number failing test note list_extend dict_update realize two implementation look extremely similar try reduce code duplication one remaining test failure list unpacking expect change list_extend quite bit anyway http github.com google pytype issue 749 piperorigin revid 365693907,,
348,327bb96247add4521ff6f5bb854d3385caed5e2d,echen <rechen@google.com>, 2021-03-29 16:25:53 -0700, , improve pytype handling set remove frozenset pytype list primitive create frozenset instance properly parameterized element type necessary python 3.9 constant set primitive treated frozensets hood add precise set.update overload needed properly implement new set_update opcode 3.9 http github.com google pytype issue 749 piperorigin revid 365689956,,
349,615621a90e9891fabaccbf1f79d9670a1c1364f4,echen <rechen@google.com>, 2021-03-29 15:08:23 -0700, , python 3.9 related cleanup change make number small improvement came course adding py3.9 support none user visible effect fix typo change util_test test case unsupported python version 3.9 3.42 keep updating test new version factor common pattern vm.py load_attr followed _call helper method replaces reference deprecated  http github.com google pytype issue 749 piperorigin revid 365673783,,
350,4ca41d8fd82e7ddbea4e5ab668bd7baaf222559a,demello <mdemello@google.com>, 2021-03-29 13:07:01 -0700, , convert property constant write property pyi file decorated method parse property decorator pyi file tested calling property imported class still work piperorigin revid 365646551,,
351,fc73441edb60c35dea0e378e8c7c084ef79e2de1,echen <rechen@google.com>, 2021-03-25 17:51:52 -0700, , add temporary flag help check parameter type rollout add check nonnull parameter type flag enabled type check non none function parameter default annotation let split check parameter type rollout two part note name went nonnull nonnone looked little funny piperorigin revid 365162161,,
352,6a2d018e1c0626f93bd319a22b59a949fdb68f94,ebecca Chen <rechen@google.com>, 2021-03-25 17:47:14 -0700,872, merge pull request 872 google google_sync google sync,,
353,1cdb71c7c1ed02de4a6a3c62233cfacdcc86ab8e,demello <mdemello@google.com>, 2021-03-25 12:44:29 -0700, , rework method signature merging pyi file clean allow overloaded property decorator remove name.getter mistakenly added list property decorator piperorigin revid 365102494,,
354,93cf33625c14f091a64cbc6886d839248b39c904,echen <rechen@google.com>, 2021-03-25 11:58:41 -0700, , implement new python 3.9 opcodes add first pas implementation new opcodes introduced python 3.9 brings number 3.9 test failure based implementation http github.com python cpython blo python ceval.c http github.com google pytype issue 749 piperorigin revid 365092342,,
355,1b4526797e593bea36519f49486e046fb8e12e4f,echen <rechen@google.com>, 2021-03-24 19:35:10 -0700, , cleanup use new method simplify code piperorigin revid 364945175,,
356,3a30b81520223a33eb3a5e898ba862b2d1b9f2a2,ebecca Chen <rechen@google.com>, 2021-03-24 17:22:30 -0700,871, merge pull request 871 google google_sync google sync,,
357,0a50abf95a21b7d9211c5eb4805f5bc544c58b2e,echen <rechen@google.com>, 2021-03-24 13:11:02 -0700, , fully support method aliasing stub file resolve http github.com google pytype issue 761 piperorigin revid 364874822,,
358,a20a5bbb5ef816da5a14aa8bd781ba7ebc35722a,demello <mdemello@google.com>, 2021-03-23 20:40:10 -0700, , add namespace class pytd method flag type piperorigin revid 364711144,,
359,315f6845f6037b468b58906b2184a97f64928b52,echen <rechen@google.com>, 2021-03-23 20:28:34 -0700, , allow reassigning annotated parameter name check parameter type contained two kind check checking parameter annotation match default checking annotated parameter reassigned new value still match annotation frequently requested something definitely want disruptive actually asked user removed may may want add check road think part check parameter type especially since already cause 1000 new finding kept behavior parameter annotated type stay rather union new type assigned function body since explicit annotation often indicates user want override inference piperorigin revid 364709605,,
360,7e32f843ebcb63f6c534b0794885d917f383029c,ebecca Chen <rechen@google.com>, 2021-03-23 14:56:38 -0700,870, merge pull request 870 google google_sync google sync,,
361,c5e102afd6f85714f99cbf631bb7bde101913b82,echen <rechen@google.com>, 2021-03-22 15:27:55 -0700, , prepare pypi release piperorigin revid 364422203,,
362,6285b0c379f6972891c3d13fe3137de399970bb5,echen <rechen@google.com>, 2021-03-22 10:33:18 -0700, , fix two bug piperorigin revid 364352006,,
363,874b02097314558e13c2394deda409af11507265,echen <rechen@google.com>, 2021-03-19 15:04:47 -0700, , expand type parameter instance unpacking tuples matcher fix unpacking produced change unpacked union tuple element type causing new error fixed using get tuple value inside want parameter value non empty otherwise end wrong number value data stack piperorigin revid 363978769,,
364,a8c1522b7f44245ce38e9ac4ed7da84455fb5ba0,ebecca Chen <rechen@google.com>, 2021-03-19 17:42:48 -0700,868, merge pull request 868 google google_sync google sync,,
365,bcc3ba0ab641a713580b6d161f89731ea389501b,echen <rechen@google.com>, 2021-03-19 14:32:30 -0700, , fix python 3.8 test failure caused opcode line number change see http github.com google pytype run 2145268308 true piperorigin revid 363971919,,
366,9f1f870be795b060bf923984d46d1969bdb12d6b,demello <mdemello@google.com>, 2021-03-19 11:44:22 -0700, , allow visitor skip specific child node add additional return type enternode return type false visit node subtree key ... visit node descend node.key key skip set none visit node child piperorigin revid 363937121,,
367,2e06642430ffa21e169c8af1ffa4246736b930fe,echen <rechen@google.com>, 2021-03-18 19:28:51 -0700, , pas ninja relative path instead absolute one fix http github.com google pytype issue 863 whatever path passed ninja printed entering directory ... message linked issue point user may want username etc. appear log file piperorigin revid 363800779,,
368,9160ef4cffb2a6e59224480cbba4ccda59c9dd12,echen <rechen@google.com>, 2021-03-18 18:09:36 -0700, , allow annotation type mismatch directive put sensible line cleaning check parameter type finding try bring number finding something manageable release issue come several time confusing disable directive appears middle function signature since misleads reader thinking directive applies parameter line change allows directive put line line make_function opcode inclusive line next opcode exclusive piperorigin revid 363790579,,
369,df121d387bfed587afa7f2b6dd48992b370ba0cb,echen <rechen@google.com>, 2021-03-18 16:58:47 -0700, , fix bug matching pytdclass piperorigin revid 363778803,,
370,a7e558c17456d109478bbd02fef1e50a410c60ca,ebecca Chen <rechen@google.com>, 2021-03-17 22:46:22 -0700,864, merge pull request 864 google google_sync google sync,,
371,808074a22f057701c5d91084e9fcf7ce2d62a420,echen <rechen@google.com>, 2021-03-17 16:08:26 -0700, , fix pylint trailing newlines error see http github.com google pytype run 2135247887 true piperorigin revid 363529887,,
372,4387788012ee6cd800f32ae400fb1a908810bb3a,echen <rechen@google.com>, 2021-03-17 15:56:51 -0700, , manual import http github.com google pytype pull 862 piperorigin revid 363527471,,
373,4e4e0ff1aee80eaa88d66f3ea6499e549c285682,echen <rechen@google.com>, 2021-03-17 15:27:56 -0700, , fix pyi type attribute annotated class type parameter previously case like class foo generic def __init__ self self.x type attribute emitted type stub change ensures instantiated instance foo rather immediately evaluated passing foo instance container instantiating add _scopes attribute output.py track conversion convert typeparameter parameter template class converted fix bug isinstance check work piperorigin revid 363521328,,
374,ba3373a3fbd5d0dc58b7bc5b7f80ea0c324c0bf5,echen <rechen@google.com>, 2021-03-17 15:08:24 -0700, , non user facing typevar fix cleanup add container input usually type parameter aliased type parameter ignored case like class foo generic def __init__ self list ... list instantiated want instantiated pas instance foo container check foo template typeparameter bound generic class instantiated unknown mutates value typeparameter bound constraint previously mutated unknown led value basically treated move apply_mutations call earlier mutation taken account analyzing current method improves reveal_type descend rather outputting attribute.py skip value visible current node piperorigin revid 363517195,,
375,2827f3bf99ecd54358ac3c88d00650020846db18,echen <rechen@google.com>, 2021-03-17 11:38:34 -0700, , discard container argument creating instance create pytype need container object bind instance often throwing away container instantiate piperorigin revid 363468073,,
376,ac65c7f855662418b89c03583d330b4358244fd8,echen <rechen@google.com>, 2021-03-17 11:29:05 -0700, , track instance class created analyze.py custom generic class attribute annotated class type parameter analyzing like class foo generic def __init__ self self.x def foo foo return foo.x want ignore instance foo created inferring type otherwise end incorrect type union int piperorigin revid 363465617,,
377,9d06b1373bbb43f10ae8e0e16d39bb8a98e2c1c8,echen <rechen@google.com>, 2021-03-17 09:53:16 -0700, , add missing method piperorigin revid 363442063,,
378,482ac4f18f70de706c7b538468b2a7b4a54fbcaf,echen <rechen@google.com>, 2021-03-17 09:52:33 -0700, , add test case module package sharing name pytype doe right thing case obvious added test case make intended behavior clear piperorigin revid 363441886,,
379,5ae371ebee4a34b7098b865161b2b800d59d1f08,demello <mdemello@google.com>, 2021-03-15 15:32:04 -0700, , extend dataclass code generation support attrs well attrs pyi file implicit auto_attribs true piperorigin revid 363044985,,
380,c1e90c79bd00108a50a269ea6d836e1d8ec65fde,echen <rechen@google.com>, 2021-03-15 15:21:56 -0700, , save first arg even non positional mostly unify first_posarg self_var variable method also fix rather obscure contrived bug piperorigin revid 363042829,,
381,ab6edb872c6d5bcf7819eed8678a341251de14ad,echen <rechen@google.com>, 2021-03-15 11:05:56 -0700, , fix crash caused instantiating value typeparameter value annotated type typevar get instantiated cause abstract matcher crash piperorigin revid 362982552,,
382,7e22dcfa713f0b3dd0f149b42b4360f3475dcd47,demello <mdemello@google.com>, 2021-03-12 15:27:23 -0800, , move dataclass code generation support inheritance move pytd code generation directly pytd codegen decorate since want dataclass like decorator right attrs use code add support one pyi dataclass inheriting another validates pyi dataclasses parser code pretty specific dataclass use case generating __init__ function field collected parent dataclasses generalised ever want support pyi decorator need inherited attribute code generation doe need inherited attribute continue done parser e.g namedtuples code pretty hacky due difficulty generating final pytd subtrees without going loader piperorigin revid 362612365,,
383,acccb78f0034314fd2756e674c923ae67fb8d09f,echen <rechen@google.com>, 2021-03-11 16:25:07 -0800, , check attribute value type pyi file trying check attribute type real code think checking pyi type aggressive since end enforcing inferred type often narrow piperorigin revid 362402433,,
384,0eb9b55fbcf8fbfb77231577db79c172ca175bde,demello <mdemello@google.com>, 2021-03-11 13:29:28 -0800, , add store_deref list class definition opcodes piperorigin revid 362364847,,
385,824b22e0e8d493faa470c61bdaf715786a0c9442,demello <mdemello@google.com>, 2021-03-10 11:46:01 -0800, , support inheritance dataclasses defined pyi file move metadata key computation class_mixin add method init attribute metadata pytd constant initializes attribute metadata constructing pytdclass piperorigin revid 362104624,,
386,5d24ebdbbc6a1f109b7bc1fbfd987db7db497e57,ebecca Chen <rechen@google.com>, 2021-03-17 15:53:44 -0700,862, merge pull request 862 xiaoxiae master fix dead pyi example link user_guide.md,,
387,0937673aa6f3ff70d07e42a9000fd17d99c21a33,iaoxiae <tomas.slama.131@gmail.com>, 2021-03-17 12:56:58 +0100, , fix dead pyi example link user_guide.md,,
388,315773df0148480d824b5ebda5a4732496c5308d,ebecca Chen <rechen@google.com>, 2021-03-11 10:56:31 -0800,858, merge pull request 858 sethvargo patch improve action hygiene,,
389,930277f7476cea5d0e842e8407d95a74c440016e,eth Vargo <seth@sethvargo.com>, 2021-03-10 17:24:54 -0500, , improve action hygiene hello fellow googler work project leverage github action recently noticed large increase queue time tracked limit 180 concurrent job http docs.github.com action reference usage limit billing administration organization help better citizen proposing change across repository reduce github action hour consumption hope change reasonable happy talk detail already thank run github action push main branch repository team forking model change affect team push branch repository directly change action run primary branch open pull request primary branch long running job especially test added cancel previous workflow helpful prevent large queue backlog rapid development pushing multiple commits without github action default behavior run action commits change could make depending project expert test run subset code change consider gating workflow particular file path example job terraform linting run terraform file changed http github.com google exposure notification verification server blob .github workflow terraform.yml l11 hopefully change controversial also hopefully see would reduce action consumption good citizen fellow googlers question feel free respond ping chat thank,,
390,9109328c841fc216b5fb97ae80778be8d358c815,ebecca Chen <rechen@google.com>, 2021-03-10 13:49:38 -0800,857, merge pull request 857 google google_sync prepare pypi release,,
391,673703d83ed6669a4fe12331517994418b3271aa,echen <rechen@google.com>, 2021-03-10 11:37:06 -0800, , prepare pypi release piperorigin revid 362102388,,
392,3e13f9e10ce9030ca6d4e283edf0c6eebee374bd,ebecca Chen <rechen@google.com>, 2021-03-09 19:39:59 -0800,856, merge pull request 856 google google_sync google sync,,
393,c8de59e0e62c0024b5275d5b86d8b0128fc73984,ebecca Chen <rechen@google.com>, 2021-03-09 16:21:47 -0800, , remove legacy parser extension,,
394,68fe604f4ecf5d2b71c0cb425b779b4b4c5e4d0b,demello <mdemello@google.com>, 2021-03-09 15:49:46 -0800, , get rid legacy pyi parser deletes old parser code pyi move pyi typed_ast upwards pyi renames ast_parser parser copy ast_parser_test parser_test deletes typeshed parsing diff test update documentation referred old parser piperorigin revid 361915877,,
395,c32cb48e473ad026f374483e2d667ffa69425db4,ebecca Chen <rechen@google.com>, 2021-03-09 16:17:14 -0800,855, merge pull request 855 google google_sync google sync,,
396,d2e4dc6fcd62c738e7c437d27064826c0114a98f,echen <rechen@google.com>, 2021-03-09 14:42:40 -0800, , enable check attribute type piperorigin revid 361901535,,
397,ffe0d11431d9cf3bb524bb0d42c58b8195f9c738,igge <rigge@google.com>, 2021-03-09 14:12:36 -0800, , remove trailing period printing documentation link trailing period url make copy paste difficult select entire line without picking period break anchor link piperorigin revid 361894925,,
398,5e91be8bf589249785e4dd307103f972d4d6b879,echen <rechen@google.com>, 2021-03-09 13:33:04 -0800, , fix caching bug caused incorrect function parameter default piperorigin revid 361885519,,
399,1e88e14ae3dc75147ac2fef5e7b45d075ee76e81,echen <rechen@google.com>, 2021-03-08 15:57:16 -0800, , make inherit bool white lie let comparison method return notimplemented prevents propagation problematic inferred type union bool piperorigin revid 361677968,,
400,5284070075ea30b8119045855f06fa822be7dc19,demello <mdemello@google.com>, 2021-03-08 12:20:29 -0800, , move class metadata code overlay class_mixin piperorigin revid 361627376,,
401,0e99bad17389a428d6a49868506e403416e28cde,ebecca Chen <rechen@google.com>, 2021-03-06 00:25:03 -0800,852, merge pull request 852 google google_sync google sync,,
402,211d8cb0be21a0a84828c8050a76ddc1d1ac06bb,ebecca Chen <rechen@google.com>, 2021-03-06 00:01:27 -0800, , fix type error pytype pytd codegen piperorigin revid 361236353,,
403,4efe3c1560c47c47157cad7600a1efc0e70e9eb9,echen <rechen@google.com>, 2021-03-05 14:29:39 -0800, , fix circular import error fix import error pyi file caused deleting entry import map instead deleting pyis change check specifically case __init__ file looking submodules ignores __init__ file incomplete pyi case resolve http github.com google pytype issue 760 tested built pytype par ran tgp  two new finding legitimate piperorigin revid 361225796,,
404,fff79250cc59b154f17cd65e5299b3a73db2baae,demello <mdemello@google.com>, 2021-03-04 18:08:48 -0800, , move mixin.class module piperorigin revid 361046070,,
405,bef12292094f616f1c927acb059a60ff93164f3d,demello <mdemello@google.com>, 2021-03-04 03:08:13 -0800, , update doc freshness piperorigin revid 360872705,,
406,ffa4da794bfdfcb711144e756c8ec33f244fb088,demello <mdemello@google.com>, 2021-03-03 14:14:05 -0800, , basic support defining dataclasses pyi file let dataclass defined class variable annotation dataclass decorator inheritance supported yet piperorigin revid 360754606,,
407,dbfa996c83302239d3a2161d4ea1b924d3c3206a,ebecca Chen <rechen@google.com>, 2021-03-03 16:07:39 -0800,851, merge pull request 851 google google_sync prepare pypi release,,
408,b36674f2a60736207d39c12d305a5b877315df1c,echen <rechen@google.com>, 2021-03-03 14:06:19 -0800, , prepare pypi release also modified changelog entry 2021.02.23 realized forgot include typeshed update piperorigin revid 360752807,,
409,02cf301b8de7a02ebe49ef738ae22a3ccb2ad4ed,ebecca Chen <rechen@google.com>, 2021-03-02 14:16:07 -0800,850, merge pull request 850 google google_sync google sync,,
410,8c22d1953877193e4f61404c6a3ae2b1b70e7b90,demello <mdemello@google.com>, 2021-03-02 11:34:25 -0800, , fix initialization union type forward reference lateannotation alias union type initialized resolved set instance.cls crash attribute system let resolved annotation match later code path piperorigin revid 360476268,,
411,cc241b380fb06af2e68c6059d286d78f15bccc83,echen <rechen@google.com>, 2021-03-01 17:58:46 -0800, , update pytype faq check variable type check container type enabled default internally silence spurious error heterogeneous dicts user add local variable annotation piperorigin revid 360319490,,
412,f80ed0017d2182cabd458c0b237a7524d4cde4cb,echen <rechen@google.com>, 2021-03-01 17:51:13 -0800, , enable part check attribute type change pytype replace user annotated attribute type inferred type already ran tgp patched everything turned  piperorigin revid 360318328,,
413,4109225011ddde177ee32af7da5832babaa52220,ebecca Chen <rechen@google.com>, 2021-02-26 16:26:39 -0800,849, merge pull request 849 google google_sync google sync,,
414,1445d68d1636bab5e10b4ded3072c379f460cc73,echen <rechen@google.com>, 2021-02-26 15:06:58 -0800, , fix caching bug surprised code worked well ... piperorigin revid 359847379,,
415,cbc3c5f1cf99172a1eac6db8e0c66b6fc22bf188,echen <rechen@google.com>, 2021-02-26 14:56:37 -0800, , fix bug multiple definition typevar could end stub using set avoid adding multiple copy typevar inferred stub however still ending two copy anystr slightly different typeparameter anystr constraint classtype str classtype byte typeparameter anystr constraint namedtype str namedtype byte fixed using typevar name check duplicate rather entire typevar object fix http github.com google pytype issue 847 piperorigin revid 359845246,,
416,a54591e6eef1af2c3663b0f130545b3cf6183d7e,echen <rechen@google.com>, 2021-02-26 14:21:11 -0800, , use typeshed stub preference empty stub load_pytd logic use default stub def __getattr__ name better stub found typeshed however logic take account empty stub created imports_info contains entry submodule parent module fix http github.com google pytype issue 846 piperorigin revid 359837989,,
417,d92ce82414af6362828767fa9c775954b23b3305,ebecca Chen <rechen@google.com>, 2021-02-25 15:37:13 -0800,848, merge pull request 848 google google_sync google sync,,
418,24b0588661f356d792c97a07fa757ec0042a7ac9,echen <rechen@google.com>, 2021-02-25 14:17:29 -0800, , take typevar bound account instantiating attribute.py noticed working something else accidentally ignoring _filter_var attribute.py piperorigin revid 359611226,,
419,b85c5d6fed81604525061b42915610819038e9cc,echen <rechen@google.com>, 2021-02-25 12:02:37 -0800, , report instantiable instantiating abstract annotation pytype helpfully report instantiable try create instance abstract class however error helpful abstract class come type abstractclass annotation common pattern annotate function accepting type abstractclass pas non abstract subclass suddenly occurred today fixing bug trivial attribute piperorigin revid 359580391,,
420,a5cf1a003e5481bcfa9491817a5349721f96890a,echen <rechen@google.com>, 2021-02-24 15:36:15 -0800, , add method pyi typed_ast definitions.py helpful method change pull pytd_utils used elsewhere also add capability handle tuple name since common check whether node name match typing.x piperorigin revid 359385571,,
421,128524fba433159c6e95f3438c999824dbf7a5ea,demello <mdemello@google.com>, 2021-02-24 14:42:34 -0800, , add value field pytd.constant default none also fix ancestormap optimisation still assuming node type could string piperorigin revid 359373986,,
422,7b033a8484661e61f94643a2fe34fcd5c8380498,ebecca Chen <rechen@google.com>, 2021-02-23 22:48:54 -0800,844, merge pull request 844 google google_sync allow builtins.tuple used heterogeneous tuple annotation,,
423,ba6f25be3823bca5efc2b678134b8b58e5406d98,echen <rechen@google.com>, 2021-02-23 22:23:21 -0800, , allow builtins.tuple used heterogeneous tuple annotation fix http github.com google pytype issue 839 piperorigin revid 359212099,,
424,4a75f92ec20b73329e15daa14d91e1d73aec3c71,ebecca Chen <rechen@google.com>, 2021-02-23 19:15:48 -0800,843, merge pull request 843 google google_sync allow callable constant match protocol method,,
425,1fd7b5d33ceeed8a9bf7ced304c3d73b065a080e,echen <rechen@google.com>, 2021-02-23 18:29:16 -0800, , allow callable constant match protocol method previously pytype took method account protocol matching class constant whose type __call__ method constant allowed satisfy method protocol fix http github.com google pytype issue 753 piperorigin revid 359181707,,
426,8704a6eeb61dbb28640716c22fc956877efb9fa2,ebecca Chen <rechen@google.com>, 2021-02-23 12:26:03 -0800,842, merge pull request 842 google google_sync google sync,,
427,c4ed01739761995620697ad6f995995ac57fe6f1,echen <rechen@google.com>, 2021-02-23 11:56:57 -0800, , prepare pypi release like get fix piperorigin revid 359099307,,
428,bc9ccb5c87ebbc0034d999ba70486f1bce4698e3,echen <rechen@google.com>, 2021-02-23 11:44:12 -0800, , support using type stub see http github.com python typeshed pull 5055 typeshed moving toward using type builtins collections.abc rather typing pep 585 mostly work pytype since rewrite typing.x builtins.x anyway collections.abc type represented alias typing one however typing.callable pytd node type need special case parser since tuple also special node type added test tuple well appears already working piperorigin revid 359096397,,
429,52f3332dc79393755b5213e9d97d3f7773ab4ce6,echen <rechen@google.com>, 2021-02-22 17:19:50 -0800, , apply type_checking fix bug could used function class body type_checking could piperorigin revid 358938622,,
430,1271985199fe62a3fe95361a8e16b0d66d23524e,echen <rechen@google.com>, 2021-02-22 16:18:00 -0800, , mark pytype able run python 3.9 piperorigin revid 358928183,,
431,9cd7844923872a988458b95968849dbe5f4c6b6c,ebecca Chen <rechen@google.com>, 2021-02-22 17:48:18 -0800,840, merge pull request 840 google py39 allow pytype installed python 3.9,,
432,30bba407c58f6347d32fad29acae2754f14e1c58,ebecca Chen <rechen@google.com>, 2021-02-22 14:24:56 -0800, , allow pytype installed python 3.9 http github.com google pytype issue 749 manually ran pytype test host version 3.9 target 3.8 confirm pytype yet analyze 3.9 code trouble running 3.9 change ensures user attempting install pytype 3.9 get latest version currently get version 2020.2.6 old little broken see e.g. http github.com google pytype issue 834 allows user run pytype 3.9 analyze 3.5 3.8 code specifying python_version arguably useful since pytype able resolve pip installed dependency may good enough small self contained project,,
433,1429e9b65304d95ad8a061331fde1bb6949fa499,ebecca Chen <rechen@google.com>, 2021-02-22 16:16:49 -0800,841, merge pull request 841 google google_sync google sync,,
434,186c12312e1e8d72bf3258d604b1411d0655fea8,demello <mdemello@google.com>, 2021-02-22 15:16:32 -0800, , replace generic terminology load_pytd precise name piperorigin revid 358914822,,
435,5876a33bdadfdfd5235269d3c828d15191f4fc56,demello <mdemello@google.com>, 2021-02-22 15:11:32 -0800, , use stack int piperorigin revid 358913680,,
436,8510c8697e87d7d792343610a53f84e1de779b2f,echen <rechen@google.com>, 2021-02-22 14:57:53 -0800, , fix opensource lint error pytype pyi typed_ast pylint started reporting consider using generator finding new release yesterday http pypi.org project pylint history showed failure http github.com google pytype pull 840 piperorigin revid 358910501,,
437,e2536c3ff12fd502897d1fe0d9824ea04ad731a6,echen <rechen@google.com>, 2021-02-22 14:27:13 -0800, , fix bug pytype pyc pyc_test ago changed python_exe argument list str instead str missed updating test issue went unnoticed long time python_exe unused host version target version also fixed lint error piperorigin revid 358903954,,
438,d8cabf86dedbde4a1b6b8f1355c11752d7f39a28,echen <rechen@google.com>, 2021-02-22 11:50:50 -0800, , fix couple crash check container type ran another tgp look like fix last crash caused change piperorigin revid 358869886,,
439,b578f7aafaaeebc380f21589b1dc1a08e8061140,demello <mdemello@google.com>, 2021-02-19 20:44:51 -0800, , move ast resolution main loader class add _resolver class hold ast resolution verification method access loader state main motivation make loader code easier follow ultimately add better tracking life cycle loaded module use consistent name various asts passed around mod_ast current module ast constructed resolved verified lookup_ast supplementary ast look symbol mod_ast dep_ast ast dependency mod_ast likewise lookup_ast_name mod_name ast name override also move builtin pytd file loading loader minor code cleanup piperorigin revid 358533893,,
440,0f47a044be299d42c92c7af11a2f5eb7bccf4490,demello <mdemello@google.com>, 2021-02-19 20:43:47 -0800, , cache import_name call piperorigin revid 358533840,,
441,8257781ced108f1e081a360f3af6edc6dbe80252,ebecca Chen <rechen@google.com>, 2021-02-19 20:27:34 -0800,838, merge pull request 838 google update typeshed,,
442,70c2dc840a53a7658192715bd3fe1aa01d076bf6,ebecca Chen <rechen@google.com>, 2021-02-19 17:35:07 -0800, , update typeshed,,
443,b2e49d23571226d5c3a5bcb2de6107e2c70bf019,ebecca Chen <rechen@google.com>, 2021-02-19 17:34:06 -0800,837, merge pull request 837 google google_sync use check visibility,,
444,df7efc206251d7044585913ee61f9722f3702aed,echen <rechen@google.com>, 2021-02-19 15:35:56 -0800, , use check visibility error fix http github.com google pytype issue 835 piperorigin revid 358496262,,
445,1e9b36506c6b0753e6b3333fd0a64d01ea8c63f5,ebecca Chen <rechen@google.com>, 2021-02-19 13:57:46 -0800,836, merge pull request 836 google google_sync google sync,,
446,318bb2527c0503b20670066669801dd87dd1d5f7,echen <rechen@google.com>, 2021-02-19 11:59:13 -0800, , prepare pypi release build failure table empty except couple py2 py3 issue good time pypi release piperorigin revid 358453668,,
447,81545918e012e1888a725145fbb215647ebbedf7,demello <mdemello@google.com>, 2021-02-18 23:14:58 -0800, , start refactoring loader split module filepath lookup pathfinder class split module_name module cache modulemap class factor common code top level import_ method piperorigin revid 358343857,,
448,cd7406fd4bcd85a98918f29b535db492cc58cbe5,echen <rechen@google.com>, 2021-02-18 12:04:01 -0800, , fix crash caused passing incomplete view debugging crash also noticed previous change caused extra work case two different view produce mutation fixed well piperorigin revid 358232746,,
449,6512407c1f3ad62445c81f8dfebb35a7fbc5c3bb,echen <rechen@google.com>, 2021-02-18 11:25:05 -0800, , fix bug pytype detects nested generic class previously pytype checking function local treating found definition nested class meant reference generic incorrectly treated definition whose template needed checked instead check local class stored name piperorigin revid 358223202,,
450,c9257a25b660287864ab6c54edf16ee67954b317,echen <rechen@google.com>, 2021-02-17 11:28:07 -0800, , use instead match_from_mro fix bug noticed tgp container mutation check taking protocol account piperorigin revid 357993867,,
451,962a1ac118a4daa660170a54cad5ce3ad86a1c1f,ebecca Chen <rechen@google.com>, 2021-02-16 20:28:20 -0800,833, merge pull request 833 google google_sync google sync,,
452,39caf35a11e06d1fff1727a10362c2b2364a3b35,echen <rechen@google.com>, 2021-02-16 11:46:17 -0800, , fix type annotation pytype pytd codegen realized pytype analyzing internally using pyx_extension export github node doe get analyzed get new type error piperorigin revid 357770063,,
453,33bfb9b634d3563a0c81fa3f28665d46e51eb8f1,echen <rechen@google.com>, 2021-02-16 09:39:10 -0800, , fix splitting bug mostly ignoring cycle cfg element added container followed element added loop pytype would forget none check done first element reason additional element added none option first element copied one node loop binding loop considered always solvable treated origin fixed ignoring cycle except possible origin fix user reported issue piperorigin revid 357738294,,
454,f2fea9cc506bc2a7cb00bce886a046ce6deb4a58,echen <rechen@google.com>, 2021-02-12 18:25:23 -0800, , fix several case class type parameter instantiated incorrectly analyzing method generic class pytype temporarily annotates self make sure class type parameter taken account instance generic class sometimes represented instance sometimes instance pytype failing annotate self second case adding scope type parameter tupleclass causing class type parameter substituted properly ambiguous argument passed constructor generic class class type parameter unambiguously declared user pytype merging declared type ambiguous argument matcher losing precise type information piperorigin revid 357304507,,
455,8e96542ddc8c2121082b318d4bb0a673093f93c8,demello <mdemello@google.com>, 2021-02-12 13:05:52 -0800, , move pytd namedtuple code generation pytd tree create pytd codegen copy pytd generation code pyi typed_ast pytd codegen refactor pyi typed_ast use new code location modify parser error handling wrap exception parseerror piperorigin revid 357252743,,
456,0b34dbe88b9143ba418f8107fd1a032db250bf4c,echen <rechen@google.com>, 2021-02-10 18:05:17 -0800, , fix nothing parameter inference self argument custom generic class logic printvisitor drop type self match class name broken generic piperorigin revid 356872128,,
457,acaa04a6006d94782dac98548623af64f0c6153e,sudol <tsudol@google.com>, 2021-02-10 15:19:40 -0800, , outputting cfg typegraph wait dot complete instead writing directly proc.stdin use send dot file stdin wait proc complete piperorigin revid 356838356,,
458,eb09d3b575351e445b16dfe35a6394f960b3443a,sudol <tsudol@google.com>, 2021-02-09 15:54:12 -0800, , use text mode subprocess debug.py program_to_do since pytype longer support host python need six instead explicitly use stringio analyze.py use force text mode subprocesses piperorigin revid 356611608,,
459,3e77b70c305def258b0917babc72d3bb1e081c69,ebecca Chen <rechen@google.com>, 2021-02-09 14:51:21 -0800,830, merge pull request 830 google google_sync google sync,,
460,8b8508c5ae452e2aa852517efe62795e9d4f60a1,echen <rechen@google.com>, 2021-02-09 14:17:44 -0800, , prepare pypi release piperorigin revid 356589503,,
461,4746358f4e501bb9c4f9b050a76c398fbe7829ba,echen <rechen@google.com>, 2021-02-09 12:01:08 -0800, , resolve pytype finding pytype source code tried local export pytd namedtuple attrs change opensource pytype reported number new finding know caught internally two incorrect annotation pytd.py incorrect along switch attrs allowed pytype catch also two place pytype understand check restricted object type piperorigin revid 356558085,,
462,10e22d67099affd1ac1846d1b4b4de0850cbb851,demello <mdemello@google.com>, 2021-02-09 00:46:34 -0800, , replace namedtuples attrs pytd representation fairly straightforward translation minimise diffs attrs chosen dataclasses support feature like slot converter hash caching convert pytd class attrs rewrite node base visitor class work attrs remove code worked old namedtuple precondition system piperorigin revid 356445164,,
463,86581191f9411cae12c3792f9240688b6811cbc9,ebecca Chen <rechen@google.com>, 2021-02-08 21:57:58 -0800,829, merge pull request 829 google google_sync google sync,,
464,21ea32ec7427bbc819c04903cfb915888bba021f,demello <mdemello@google.com>, 2021-02-08 18:48:47 -0800, , add note using anystr annotation expr involving anystr add note anystr typevar use union str byte typing.text string type piperorigin revid 356403618,,
465,7661b7c47a5f061d11103a73f5115fd1896abebc,sudol <tsudol@google.com>, 2021-02-08 18:19:47 -0800, , fully qualify std size_t avoid platform incompatibility standard requires cstddef put size_t std namespace however implementation also put size_t global namespace backwards compatibility since guaranteed always using std size_t also fix int64_t qualified file piperorigin revid 356399686,,
466,8c4481cea029698ba8190f8c03a71473c6056e3b,echen <rechen@google.com>, 2021-02-08 18:12:29 -0800, , fix test using python syntax ellipsis piperorigin revid 356398594,,
467,bb4995a9affc8cd8b7cf6b9cc4aa80f4d5eede16,atyabhama-Reddy <satyabhamareddy@gmail.com>, 2021-02-08 15:13:26 -0800,825, adding isascii attribute str byte bytearray 825 pull request issue false positive str.isascii missing attribute 493 resolve 825 piperorigin revid 356363565,,
468,304685ddbafe4f1248ce5303e82e82baafa92871,echen <rechen@google.com>, 2021-02-08 14:29:02 -0800, , fix isinstance bug moving annotationclass check _flatten pytype recognizing isinstance ... sequence check turned annotationclass sequence sequence need happen flatten tuples piperorigin revid 356354044,,
469,0318e97d2003dba41984f4cd9a1d9615a9cc6209,echen <rechen@google.com>, 2021-02-03 21:00:28 -0800, , partially support wrapping attr.s change pytype recognize wrapper attr.s long used file defined checked args.simplify realized typically simplify argument matching previous dataclasses change fixed well piperorigin revid 355544594,,
470,edd2b0fbeca7d773d4397a506567eb34dc232ef2,echen <rechen@google.com>, 2021-02-02 14:40:27 -0800, , internal change piperorigin revid 355255836,,
471,851586750e57b83a6e07821a0221421bc57d11cd,echen <rechen@google.com>, 2021-02-02 10:59:19 -0800, , internal change piperorigin revid 355205803,,
472,fc96224fd3923433bdfca63592d57406abb792a3,ebecca Chen <rechen@google.com>, 2021-02-01 14:42:45 -0800,827, merge pull request 827 google google_sync google sync,,
473,92da0fc1f5b4d039daae0aaecd5c4a5a515678d0,echen <rechen@google.com>, 2021-02-01 14:04:52 -0800, , call args.simplify kwargs forwarding work resolve http github.com google pytype issue 822 piperorigin revid 355022035,,
474,bb4c64aca5489364d4feb6a4fa8b64b176386838,echen <rechen@google.com>, 2021-02-01 12:36:03 -0800, , define deleted always return still report error attribute access name error deleted name report follow error attribute used piperorigin revid 355001984,,
475,1789a8a733937c3219dd47c7f1a9e842da1dba59,echen <rechen@google.com>, 2021-01-29 13:57:08 -0800, , allow typing.anystr used without imported first redefines imported typevars builtins importing anystr led pytype thinking anystr defined builtins piperorigin revid 354604929,,
476,2b87d9222d6547b2fdc916c49dedafcfd29ae34d,ebecca Chen <rechen@google.com>, 2021-01-28 13:42:00 -0800,824, merge pull request 824 google google_sync google sync,,
477,41d4b6c5e94e5967543fa6c6468f8a7271d1aba7,echen <rechen@google.com>, 2021-01-28 13:13:55 -0800, , update __version__ changelog pypi release double checked new failure due attr change split changelog entry new feature bug fix let know think old format better piperorigin revid 354378386,,
478,7776c9c9a32e50f813693855e796b1dafa758c72,echen <rechen@google.com>, 2021-01-27 13:55:51 -0800, , mark pep 593 supported piperorigin revid 354166162,,
479,f2d0adf65497641c61726e17ef25d69ba3775420,ebecca Chen <rechen@google.com>, 2021-01-27 12:41:18 -0800,821, merge pull request 821 google typeshed add toml dependency,,
480,207dbde5cf1dbc6bd92d8ec803d90f9995662ef3,ebecca Chen <rechen@google.com>, 2021-01-27 01:44:36 -0800, , add toml dependency http github.com google pytype issue 820,,
481,e72b21d11d1fae1c57e4ab7f6f181ae09c138afe,ebecca Chen <rechen@google.com>, 2021-01-27 12:18:26 -0800,823, merge pull request 823 google google_sync google sync,,
482,4a40c69bcdc7ccad3d071ba8b332cc34815f82eb,echen <rechen@google.com>, 2021-01-27 11:52:17 -0800, , support typeshed new directory structure see http github.com google pytype pull 821 linked issue context typeshed directory structure changing significantly need update pytype accordingly http github.com python typeshed issue 2491 issuecomment 758772838 contains nice diagram new structure note first developed change github imported asking review import rather import contains additional build file change especially third_party toml see diffbase piperorigin revid 354138398,,
483,8137bd1dd3e58da0b5dd6190b81d2e41e73d007a,levesquedion <mlevesquedion@google.com>, 2021-01-27 11:42:19 -0800,819, implement basic support pep 593 819 implement basic support pep 593 relevant issue 791 resolve 819 piperorigin revid 354136230,,
484,8835a01ef45a8aff629d06e19fc093716c9994b5,echen <rechen@google.com>, 2021-01-26 19:52:17 -0800, , tweak error message container type mismatch container type mismatch error report actual code seem rather verbose example line doe illegal mutation decoded_data ordering error message pytype produce new container type decoded_data doe match type annotation container type mismatch annotation mutablemapping str union int mutablemapping type parameter mutablemapping contained type union dict nothing nothing mutablemapping mutablemapping str union sequence str str int new contained type union dict nothing nothing list nothing change message becomes new container type decoded_data doe match type annotation container type mismatch container mutablemapping allowed contained type annotation mutablemapping str union int mutablemapping union int mutablemapping new contained type list nothing difference first detail line show typevars contained type moved parenthetical end next line allowed contained type print type annotation rather actual value mutation new contained type print new mutation value sure terse particular omitting contained type showing entire mutated value decision went back forth think piperorigin revid 354007003,,
485,a01d2b3b103b53c01fa2d3e318e6390ea76cf8a9,echen <rechen@google.com>, 2021-01-26 16:02:37 -0800, , make check variable type compatible attr.attrib bug turned ran tgp check variable type attr.ib check variable type work together fine attr.attrib triggering annotation type mismatch error also added attr.attrs alias attr.s piperorigin revid 353971666,,
486,5eb5a2de2b2474017d394d14134dfa0c6a8bbc41,echen <rechen@google.com>, 2021-01-26 15:39:49 -0800, , fix crash checking container type none able isolate test case ran crash due issue running tgp check container type piperorigin revid 353966698,,
487,7056acd733ea88eef084c90b6bb8c56d74c7096d,ebecca Chen <rechen@google.com>, 2021-01-21 20:06:50 -0800,817, merge pull request 817 google typeshed update typeshed,,
488,7277354e36438692d29895ace47c2070b1a5e588,ebecca Chen <rechen@google.com>, 2021-01-21 19:14:41 -0800, , update typeshed,,
489,f0dca43207ed8e5bcaa7c9249c1f1d8e64970ecc,ebecca Chen <rechen@google.com>, 2021-01-21 13:03:59 -0800,815, merge pull request 815 google google_sync pypi release new pyi parser,,
490,3b6d3ea546b35b210c49af246fa6cfbe4cb39789,echen <rechen@google.com>, 2021-01-21 11:58:47 -0800, , pypi release new pyi parser build failure table look good ... piperorigin revid 353069312,,
491,9a436bdefc93c38a86bcee616033fb0b99924056,ebecca Chen <rechen@google.com>, 2021-01-20 22:21:06 -0800,814, merge pull request 814 google google_sync google sync,,
492,c7675be8823b4bbe4cefb5202a2a9c3cb11eb403,ebecca Chen <rechen@google.com>, 2021-01-20 21:50:27 -0800, , depend dataclasses backport python 3.6,,
493,18c8097fb536d34a61d54b7fc08252d4cf1dfd28,echen <rechen@google.com>, 2021-01-20 20:37:18 -0800, , prepare new pyi parser pypi release add cmakelists.txt file regenerate file fix typo missing pytype pyi cmakelists.txt add pyi typed_ast __init__.py setup.py recognizes subpackage fix parsing typeshed stdli zoneinfo __init__.pyi support 3.9 yet simple fix piperorigin revid 352933251,,
494,00ed29e7b0abb43c7d94b6a913aaf5f61aee76df,demello <mdemello@google.com>, 2021-01-20 17:00:02 -0800, , super list comprehension need look enclosing frame piperorigin revid 352906072,,
495,63fd5e59a0d3fbe86c218f747de769288c369a40,demello <mdemello@google.com>, 2021-01-20 14:07:43 -0800, , merge typed ast parser replace main entry point existing parser call typed ast parser leaving old parser code around run regression test needed add cmakelists file pyi typed_ast fix bunch test conform valid pyi syntax comment test parser_test longer describe behaviour new parser piperorigin revid 352871829,,
496,644f04dc7cdd3ccb836e5758f175b12028fbb888,ebecca Chen <rechen@google.com>, 2021-01-20 11:33:36 -0800,813, merge pull request 813 google google_sync export typed_ast pyi parser github,,
497,1c4540c1a751e85bbd4a70ede945f8f7477b0477,ebecca Chen <rechen@google.com>, 2021-01-19 19:54:46 -0800, , exclude pytype pyi typed_ast type checking trying type check directory produce sort error,,
498,e1277ab60198af010354889cc66c45c04ebd0732,demello <mdemello@google.com>, 2021-01-19 15:39:24 -0800, , export typed_ast pyi parser github parser intended drop replacement current yacc based parser rather maintaining grammar standard typed ast library parse pyi file python3 code converting pytype internal data structure fix several issue pytype parsing construct typeshed help track future python syntax change lot easily since several conflict existing parser developed internally separate branch merged unit add detailed documentation internals developer doc piperorigin revid 352670366,,
499,eaaf385f020a5c385a97b8936e060ef618888ef2,ebecca Chen <rechen@google.com>, 2021-01-19 13:34:39 -0800,812, merge pull request 812 google google_sync google sync,,
500,02baf16beca54766a11508c63cfd5f876f0d02aa,aram Patidar <parmeshpatidar888@gmail.com>, 2021-01-19 12:47:42 -0800,811, get line number first line function body 811 resolve 783 resolve 811 piperorigin revid 352632205,,
501,0e5a6f7d07332ea9e712052e651b412360d4fac6,echen <rechen@google.com>, 2021-01-15 16:07:01 -0800, , add short paragraph issue tracker claim close bug piperorigin revid 352102308,,
502,237bcd23569ef2ab4815248b8bbd3e207017b75b,ebecca Chen <rechen@google.com>, 2021-01-14 18:45:49 -0800,806, merge pull request 806 google import bump required importlab version pick bug fix,,
503,4dcf88f8b55b39641e4860b5fb1e6f278662e693,ebecca Chen <rechen@google.com>, 2021-01-14 18:45:16 -0800,807, merge pull request 807 google google_sync assertionerror know match class,,
504,d8c43e2e3d15e81ab778252b7afe7c2b58610060,alinda Dilhara <malinda.dilhara@gmail.com>, 2021-01-14 15:32:01 -0800,803, assertionerror know match class 803 dtype class resolve 803 piperorigin revid 351889719,,
505,05ab56a3672b38cb5f938b7d913df1450fd249fe,ebecca Chen <rechen@google.com>, 2021-01-14 18:05:30 -0800, , bump required importlab version pick bug fix resolve http github.com google pytype issue 794,,
506,6d16d4ca80c8fe351ddc02d88cd57465d1c6fe81,ebecca Chen <rechen@google.com>, 2021-01-14 16:20:11 -0800,804, merge pull request 804 google google_sync google sync,,
507,8486a9e99bd0ccb4a910675dfe3564727ea6b66a,echen <rechen@google.com>, 2021-01-14 14:04:18 -0800, , support redefining namedtuple old pyi parser change almost pointless given new parser handle fine merged trivial fix unbreak google opensource project noticed longer type check removal backticks plus test good piperorigin revid 351872790,,
508,c8733b806dc8d76e540efa36181f99f2b582929e,echen <rechen@google.com>, 2021-01-14 13:57:13 -0800, , pypi release piperorigin revid 351871206,,
509,d8ef658ba6e945cb0e1de2e0f7e5e66f2b53d8bc,echen <rechen@google.com>, 2021-01-14 02:45:52 -0800, , minor update overlays.md following build file restructuring piperorigin revid 351761078,,
510,54f27762a5156db420b9f1f6a9a4af17f39314f6,echen <rechen@google.com>, 2021-01-13 19:10:45 -0800, , add empty pytype ast __init__.py file ast directory seem get packaged released version pytype otherwise fix http github.com google pytype issue 801 piperorigin revid 351712251,,
511,bac47da726b409f75299990cc84e7fb514ce6eb1,ebecca Chen <rechen@google.com>, 2021-01-14 15:41:29 -0800,805, merge pull request 805 google macos fix macos wheel build,,
512,672b0e3cf8442694f89b2038ae50f2e04824a08a,ebecca Chen <rechen@google.com>, 2021-01-14 14:48:08 -0800, , fix macos wheel build homebrew recently updated http github.com action virtual environment issue 2415 introducing bug related 2to3 http github.com action virtual environment issue 2428. applid workaround recommended issue,,
513,18d28bab9e61ee38b30f8b04df599a77e1d68154,ebecca Chen <rechen@google.com>, 2021-01-13 15:18:26 -0800,800, merge pull request 800 google google_sync google sync,,
514,35f3aeac768917202c2215e2f16d53b363a53a30,aram Patidar <parmeshpatidar888@gmail.com>, 2021-01-13 14:46:53 -0800,771, add importerror attribute name path python 3.3 771 fix 769 resolve 771 piperorigin revid 351669571,,
515,460722b5d3e2510ea91c1bc2221981a054b8e1e3,demello <mdemello@google.com>, 2021-01-11 16:49:14 -0800, , fix corner case unpacking function args need implicit unpacking function args opcodes add marker tuple tell constructed via function arg unpacking unpack starargs unpacking variable several definite tuple binding merge definite tuple union typed field function sig args fill remaining required posargs final splat set starargs none also fill type expanding splat pas function signature args.simplify calling callable piperorigin revid 351263995,,
516,1b13a04b9f982bc4d4fb538b96902c8a0a4dbeea,ebecca Chen <rechen@google.com>, 2021-01-11 12:43:34 -0800,799, merge pull request 799 google google_sync google sync,,
517,9afb2b4041361e702fecf56016712621b17c5214,ebecca Chen <rechen@google.com>, 2021-01-11 12:02:28 -0800, , pylintrc allow multiple space url,,
518,344e1dd9a5ad7a8d41cacd79081cb934b58a5313,echen <rechen@google.com>, 2021-01-11 11:21:33 -0800, , ensure pytd node name attribute let access name without using isinstance getattr made generictype name property return name base type since access .base_type.name quite often change exposed small bug printvisitor needlessly imported typing.any callable ... present fixed piperorigin revid 351196205,,
519,78e87f61ec9cadd47492105fb97d8c3bdd28e3d4,echen <rechen@google.com>, 2021-01-11 10:19:08 -0800, , internal change piperorigin revid 351181399,,
520,c1207c6bb7fcd6360dfcffea39929068f187d094,ebecca Chen <rechen@google.com>, 2021-01-08 15:51:44 -0800,797, merge pull request 797 google google_sync google sync,,
521,4225f7b31d0ceba500d1e761180289543526f7d6,echen <rechen@google.com>, 2021-01-08 15:06:33 -0800, , pypi release piperorigin revid 350843919,,
522,80983b960a96dd3d5babd2ca9ea55aa48250e1f7,echen <rechen@google.com>, 2021-01-08 13:25:16 -0800, , add support.md sitemap forgot previous change piperorigin revid 350824993,,
523,dd7c5af683271cb51c1d8e7e8eb7cbab8868ca62,ebecca Chen <rechen@google.com>, 2021-01-08 13:38:04 -0800,796, merge pull request 796 google google_sync google sync,,
524,bfc1dee450bfd51513b6f8c1b5f90a88fbee591c,echen <rechen@google.com>, 2021-01-08 13:12:52 -0800, , minor improvement support.md add freshness stanza add link pep piperorigin revid 350822829,,
525,0a5f4223db5661254cb0d514b25b8bf93054c2fc,echen <rechen@google.com>, 2021-01-08 12:58:37 -0800, , add support page showing typing feature pytype support feature support partially support includes link relevant github buganizer issue little painful see far behind supporting new pep ... also replaced 2020 roadmap readme.md summary promised pytype charter 2021 updated language index.md diverged readme.md time piperorigin revid 350820183,,
526,31f898c3ae405a3f43a1632c9147dd0ca5affecc,sudol <tsudol@google.com>, 2021-01-07 11:46:14 -0800, , add __init__ __contains__ dict view class adapted http github.com python typeshed blob master stdli typing.pyi l249 l262 piperorigin revid 350607376,,
527,663153f4beab244cdb0d66328e0e5a21412a3d55,demello <mdemello@google.com>, 2021-01-06 23:39:00 -0800, , allow python keywords pytd file list left place printer longer surround keywords backticks pyi file using keyword name generate parser error new parser deployed piperorigin revid 350498330,,
528,6e0ceedf9f181df15214afc722caa2b1e17361b5,ebecca Chen <rechen@google.com>, 2021-01-06 14:59:46 -0800,784, merge pull request 784 google google_sync google sync,,
529,d2687bca6742f144eb9ece9732d587ba03216b3d,echen <rechen@google.com>, 2021-01-06 14:03:50 -0800, , represent empty tuples tupletype previously represented generictype tuple nothing led subtle bug one linked issue empty tuples detected resolve http github.com google pytype issue 767 piperorigin revid 350423620,,
530,dec00261a26c1c3975dea35e857fcee5a0690148,echen <rechen@google.com>, 2021-01-06 11:49:07 -0800, , reorganize last pytype build file reorganizes pytype pytype pytd pytype pytd parse pytype tool xref breaking multi file library target private single file target providing following non private target public pytype api pytype pytd api pytype tool xref indexer visible pytype code pytype libvm pytype utils pytype pytd pytd pytype pytd parse parse pytype pytd parse visible pytype code outside target immediate directory pytype pytd pytd_for_parser visible pytype pyi ... latter depend pytype pytd pytd circular dep target pytype build visible pytype overlay since two directory tightly coupled renamed pytd command line tool pytd tool avoid conflicting new pytype pytd pytd target piperorigin revid 350397951,,
531,d8e04dc3100ffd3613a7b87c1323dad39305c8e4,echen <rechen@google.com>, 2021-01-05 19:20:39 -0800, , infer callable parameter kwonly params previously ignoring kwonly parameter generating callables wrong number parameter since kwonly params fixed order best callable ... ret present piperorigin revid 350266497,,
532,10febcd2402a05cfda6f00bcd1cb7a7f80a29233,ebecca Chen <rechen@google.com>, 2021-01-05 17:03:00 -0800,782, merge pull request 782 google google_sync google sync,,
533,ca5fb57b2498ae3a79bc5c22823c0a041d587fcf,echen <rechen@google.com>, 2021-01-05 12:42:41 -0800, , cleanup move pytd parse builtins pytd builtins make sense builtins.py pytd depends bunch stuff pytd piperorigin revid 350198684,,
534,5a47fd51c39e50684237899a094c5b4feca9ef53,echen <rechen@google.com>, 2021-01-05 12:28:30 -0800, , internal change piperorigin revid 350195888,,
535,8f6701a857d343cc1695c6238738c72b658941ce,ebecca Chen <rechen@google.com>, 2021-01-04 18:00:40 -0800,780, merge pull request 780 google google_sync google sync,,
536,ec5ddbd7471be80e25763def8a970f39410b88e0,ebecca Chen <rechen@google.com>, 2021-01-04 17:07:25 -0800, , increase type checking coverage,,
537,083e9eac87cd0f358e3097500b49a88019d08eb5,echen <rechen@google.com>, 2021-01-04 15:32:35 -0800, , cleanup restructure build file pytype subdirectory piperorigin revid 350050078,,
538,864b22a8aa5634e90c4f4e3d856780348f5900cc,echen <rechen@google.com>, 2021-01-04 15:20:13 -0800, , enable strictdeps type checking pytype change py_tests py_strict_tests creates two macro run pytype strictdeps pytype source code naively turning pytype target pytype_strict target lead circular import issue macro create vanilla target shadow whose name _internal suffix run build_cleaner fix import make strictdeps happy run gen_cmake update cmakelists.txt file cmake file pyi typegraph manually updated piperorigin revid 350049225,,
539,e5138b7258a5402d44df8fded1fc77d3c951b937,echen <rechen@google.com>, 2020-12-29 14:23:30 -0800, , resolve type error pytype code resolve various error pytype flag source code run pytype change error cleanup follow enable type checking piperorigin revid 349469894,,
540,ff8856ec73d6480078375aa48f67a651e0ec031d,ebecca Chen <rechen@google.com>, 2020-12-28 17:22:30 -0800,778, merge pull request 778 google google_sync google sync,,
541,d556b4ddd468f1501f023d39f59c2355a21c527d,ebecca Chen <rechen@google.com>, 2020-12-28 16:07:35 -0800, , add type checking,,
542,718e6c2c17f897812f0f76f05aa8e839696216b1,echen <rechen@google.com>, 2020-12-28 15:57:11 -0800, , update pytype build file update pytype stub pytype tool analyze_project pytype tool annotate_ast pytype tool trace consistently use pytype strictdeps tighten visibility clean deps build_cleaner split multi file library target piperorigin revid 349342636,,
543,02fed1d8b3e1c0939116bde199ee9e1403658dac,ebecca Chen <rechen@google.com>, 2020-12-28 15:27:46 -0800,776, merge pull request 776 google typecheck type check file already type checked internally,,
544,307f97cb14f2f5ff0e5fd093c4499eb1ebd5b540,ebecca Chen <rechen@google.com>, 2020-12-28 15:27:23 -0800,777, merge pull request 777 google google_sync google sync,,
545,0af0b23940f181f20822dbd282cc5bfef3abe2df,echen <rechen@google.com>, 2020-12-28 14:16:55 -0800, , update pytype build rule reflect current best practice piperorigin revid 349330545,,
546,59b05b79e0e4152d038f5f35c3f349111e81ece0,echen <rechen@google.com>, 2020-12-28 11:03:16 -0800, , shorten name commonly used thing fix something mildly annoyed long time pytype object really unwieldy name renamed thing using sed ran fix reformat file used codesearch verify reference name outside third_party pytype renames vm.root_node basevalue simplevalue concretevalue basevalue concretevalue also changed article wherever noticed wrong one used piperorigin revid 349306008,,
547,e39ffa53ff757e5d662aae1301c78c946bd7bbf1,ebecca Chen <rechen@google.com>, 2020-12-28 14:45:31 -0800, , type check file already type checked internally,,
548,2f1d1a357bada38e8969782a2f9bc59c20a79bc8,ebecca Chen <rechen@google.com>, 2020-12-23 20:31:29 -0800,773, merge pull request 773 google google_sync automatically added git ignore file sub directory 770,,
549,9423cf566772d919e4ad52e67086030c9ac13ab5,riel Martinez <57372467+UrielMaD@users.noreply.github.com>, 2020-12-23 16:01:17 -0800,770, automatically added git ignore file sub directory 770 automatically creates .gitignore file output directory pytype tool analyze_project main.py resolve 770 piperorigin revid 348859523,,
550,dd36558be056a901ef563072975a9cc7f79891c2,ebecca Chen <rechen@google.com>, 2020-12-23 14:16:55 -0800,772, merge pull request 772 google google_sync google sync,,
551,be2cabe132b1587a2abab0507d3304aa43ad2e51,echen <rechen@google.com>, 2020-12-23 13:38:14 -0800, , pypi release latest pytype change clean tgp good place one last pypi release 2020 piperorigin revid 348841360,,
552,73686cd4f60edbfbac79ae7417119fb594ce4c2c,echen <rechen@google.com>, 2020-12-23 12:13:23 -0800, , fix attribute type obtained attr.ib default type currently tuple tuple ... piperorigin revid 348830040,,
553,b3bc4080dab60de625b2de31b0d73de1c46bc5b7,ebecca Chen <rechen@google.com>, 2020-12-21 16:31:48 -0800,768, merge pull request 768 google google_sync google sync,,
554,29971aad62bb032d8667d85eb0a26ab2eba332cf,echen <rechen@google.com>, 2020-12-21 16:06:20 -0800, , support using union filter type type parameter function signature like def optional ... expect pas value none none filtered possible return value instead pytype allowing none match none annotation fixed allowing value match type parameter non type parameter resolve http github.com google pytype issue 752 piperorigin revid 348543825,,
555,c1646cc7dfa2da13e02a088a48404fefd84a69d6,demello <mdemello@google.com>, 2020-12-21 13:43:25 -0800, , fix merge_variables always create new variable merge list one variable still return copy otherwise modification merged variable modify original piperorigin revid 348521183,,
556,f69780a95f6bc8cb3a3e04cef63eaa8b139cede2,demello <mdemello@google.com>, 2020-12-18 00:19:59 -0800, , minor refactoring variable unpacking code separating subsequent editing code nicer diffs piperorigin revid 348157532,,
557,51e930ca7d29a73ede531129111fb600e761c8cc,ebecca Chen <rechen@google.com>, 2020-12-16 15:05:29 -0800,766, merge pull request 766 google google_sync pypi release,,
558,2a15a802de711f1512969938cd540abb7f16b4a9,echen <rechen@google.com>, 2020-12-16 13:43:15 -0800, , pypi release piperorigin revid 347889139,,
559,7531e1f2172107def1e4a674dafe6ea4a7d099d9,ebecca Chen <rechen@google.com>, 2020-12-15 23:17:40 -0800,765, merge pull request 765 google google_sync google sync,,
560,173fdb63f18e1ba4f935e96e80f43df3c50df9c9,ebecca Chen <rechen@google.com>, 2020-12-15 22:16:10 -0800, , remove brew untap workaround workflow reporting available tap local openssl assume mean bad tap removed,,
561,f8ac8aae81fc4f744ed17ac214fc81ed97a809b0,echen <rechen@google.com>, 2020-12-15 18:56:29 -0800, , fix crash caused trying unpack namedtuple causing last closure lookup failed error first glance look like namedtuple bug instance type parameter ought populated think adding binding approach least likely break anything trying get release door piperorigin revid 347736406,,
562,ac06ec9ae80733999a25c8c87ea07fea2db5110f,echen <rechen@google.com>, 2020-12-15 18:07:55 -0800, , support alias method class module pyi parser http github.com google pytype issue 761 piperorigin revid 347731418,,
563,61ec0e56559050e63bde5ea55b0e6113f251bc4a,demello <mdemello@google.com>, 2020-12-15 14:21:09 -0800, , fix convert splat whenever matched single param piperorigin revid 347691950,,
564,a0a50cb4f4ad32fa9ec239c8234b815372f19d35,demello <mdemello@google.com>, 2020-12-14 23:20:30 -0800, , add abstract.splat class keep explicit track unpacked iterables tgp piperorigin revid 347548197,,
565,3ad145cd11325a7218122b5add31c16ff556ad34,echen <rechen@google.com>, 2020-12-14 15:10:06 -0800, , support using annotationclass isinstance check http github.com google pytype issue 533 issuecomment 744656935 piperorigin revid 347478634,,
566,25eb59fb5414849636c49700b8e22d3cece752ab,ebecca Chen <rechen@google.com>, 2020-12-14 15:33:07 -0800,762, merge pull request 762 google google_sync google sync,,
567,eecd9407ba973a7bd424d7166549cc0feb4b399d,ebecca Chen <rechen@google.com>, 2020-12-14 14:16:31 -0800, , fix opensource opensource test always set typeshed_home environment variable populates need unset _env_home test typeshed._root piperorigin revid 347460650,,
568,260f93bd175e53baeb6789794fdc78eea503eb13,echen <rechen@google.com>, 2020-12-14 12:20:44 -0800, , strip carriage return file read byte pyi parser like python read file text mode automatically convert loader protocol directly get underlying data byte used re.sub achieve effect also changed return pyi content text lone holdout still returning byte top level file loading method load_text_file try reduce confusion string type passing around resolve http github.com google pytype issue 751 piperorigin revid 347442138,,
569,e319bfa8db42896a4bdf8114a119025116621c0a,echen <rechen@google.com>, 2020-12-14 11:54:01 -0800, , fix unpacking bug exposed opensource gen_cmake.py also fix typo vm.py piperorigin revid 347436296,,
570,3d30c66f6dc309c14746600459ff7802576c8c7f,echen <rechen@google.com>, 2020-12-14 10:23:55 -0800, , fix name error caused bad regex check expecting name list comprehension listcomp python name scope prefixed name list comprehension inside module level function foo foo local listcomp due recognizing list comprehension analyze stand alone function mean linked issue get analyzed del num run leading name error fixed using re.search instead re.match check name end listcomp rather entire name listcomp fix http github.com google pytype issue 750 piperorigin revid 347414681,,
571,971bff4aa99c0ddb63d4fda6e064a1001740570f,echen <rechen@google.com>, 2020-12-13 19:35:14 -0800, , add test enforce freshness cmakelists.txt file gen cmake part piperorigin revid 347304465,,
572,381a36418e5dcc73cd073f35195e6d3b64d8ad73,demello <mdemello@google.com>, 2020-12-11 16:17:07 -0800, , rework unpacking function arg matching add indefinite_list indefinite_set builder add typing.iterable list indefinite sequence remove __builtin__.str list indefinite sequence separate building function call allow concrete tuple add function arg matching splat middle invocation list match final args args even overloaded piperorigin revid 347096245,,
573,22545931decb6e14a63e1ed66c81899c9277203b,ebecca Chen <rechen@google.com>, 2020-12-10 19:43:08 -0800,758, merge pull request 758 google google_sync google sync,,
574,b67e60d8874ea841f1aaae28840ba9efe6df5e9a,ebecca Chen <rechen@google.com>, 2020-12-10 18:56:20 -0800, , fix pytype error circular import pytd_visitors pep484 untangled pytype check opensource test failing know visitor old_node attribute piperorigin revid 346910260,,
575,482cab4232a315c6535449b603feac9e7c76c5fb,echen <rechen@google.com>, 2020-12-10 17:22:48 -0800, , copy change contributing.md thought file tracked github actually tracked internally oops piperorigin revid 346898992,,
576,cde1e48b1c9ad12c928c5231aaad942600e06016,ytype Team <pytype@googlegroups.com>, 2020-12-09 21:41:31 -0800, , enable python type checking reduce execution time piperorigin revid 346704945,,
577,52b2894d58787b2763147760848bf122eaa85856,echen <rechen@google.com>, 2020-12-09 10:58:01 -0800, , clean import top lint warning remove disable needed handle python runtimes tracemalloc available pytype longer run py2 split pytd visitor module get rid circular import allowing imported normally pytd_visitors visitor piperorigin revid 346589356,,
578,2738f3e3c811c9f26f5cc1328ff003f4e30032e7,echen <rechen@google.com>, 2020-12-09 10:55:15 -0800, , finish outstanding dev guide todos update sitemap group dev doc workflow program analysis data representation category add metadata entry enforce doc need freshness bylines reviewed year move typegraph specific section index.md typegraph.md add basic concept overview tweak process.md better coordinate contributing.md see http github.com google pytype pull 756 resolve http github.com google pytype issue 570 piperorigin revid 346588735,,
579,b851210e35d3a6d0fa78dc33ea20d3d76e4eed15,echen <rechen@google.com>, 2020-12-08 18:17:57 -0800, , forgot update doc grr piperorigin revid 346453201,,
580,12547344a297e90e22d8543047ffbd173dca66fc,demello <mdemello@google.com>, 2020-12-08 17:08:34 -0800, , automatically promote classmethod piperorigin revid 346442595,,
581,49a61d38fbf3ddd2dc5c5fa95559dff979d85f3b,ebecca Chen <rechen@google.com>, 2020-12-08 20:38:02 -0800,756, merge pull request 756 google contributing add information contributing.md,,
582,e4125e45c9b32dfa631f90ae0ea2da0a1bd85fbb,ebecca Chen <rechen@google.com>, 2020-12-08 19:22:41 -0800, , add information contributing.md add command pip installing source link dev guide command also running pylint pytype pytype source addition test http github.com google pytype issue 570,,
583,9794ec259342fd96fd92629b195caa50acce5ff0,ebecca Chen <rechen@google.com>, 2020-12-08 14:46:03 -0800,755, merge pull request 755 google google_sync google sync,,
584,8bea1cdc8307dfc4c3732e09aad8fecffc10fca4,ebecca Chen <rechen@google.com>, 2020-12-08 13:59:22 -0800, , fix setup.py look pytype stub,,
585,b4a2fc73869b5025ed222e9aec4693bcfc5c20ed,echen <rechen@google.com>, 2020-12-07 20:57:33 -0800, , fix typo remove completed todo piperorigin revid 346241925,,
586,134cb221357f0045faa58838b3e05b30ae23173b,demello <mdemello@google.com>, 2020-12-07 17:09:34 -0800, , document config system piperorigin revid 346212542,,
587,36d5b874c48175498f368d381c44a2e07f7b22f7,echen <rechen@google.com>, 2020-12-04 17:13:03 -0800, , tie loose end dev doc add example import map look like add link pytype bzl code add link teddy excellent copybara documentation piperorigin revid 345787383,,
588,5a9e3158ec399bcc7ae7f9e814161041433600b1,echen <rechen@google.com>, 2020-12-04 15:23:16 -0800, , fix outdated flag description pickle output used accept value would destination pickled file boolean flag output used specify destination piperorigin revid 345768177,,
589,178f8a141ece4d9f752b6684799da5ff26695383,demello <mdemello@google.com>, 2020-12-03 15:43:10 -0800, , add list module always load typeshed ignoring import map add list even source tree dependency want use typeshed pyi rather generating one piperorigin revid 345551461,,
590,6b8fb334c2ce9faaa81095ae4a20834bc9dc3116,echen <rechen@google.com>, 2020-12-03 13:46:45 -0800, , recognize non tuple sequence indefinite args piperorigin revid 345526461,,
591,6305569fd2bb131b88e27135010c0cceafb5be14,echen <rechen@google.com>, 2020-12-03 11:36:04 -0800,2, attempt move pytype .pytd file stub directory original plus change updated third_party numpy __init__.pyi symlink updated symlinks devtools python blaze pytype started train run piperorigin revid 345497968,,
592,1d72cd63fb1fcb187f1a094074a648a4fe0a5292,echen <rechen@google.com>, 2020-12-03 11:00:20 -0800, , treat class whose metaclass inherits type protocol abstract see linked bug motivation first tried changing definition protocol typing.pytd include new _protocolmeta metaclass broke lot test protocol base class many typing object custom metaclass screwed attribute handling corner case special casing protocol accessing type __class__ invasive change piperorigin revid 345489232,,
593,13cd909cd4eeda56d0f0d53191279b1c191ecbe5,echen <rechen@google.com>, 2020-12-02 19:48:12 -0800, , support newtype stub started attempt support stub added pytype exclude list http github.com python typeshed pull 4785. stub turned bit hairball supporting newtype seems useful anyway resolve http github.com google pytype issue 597 piperorigin revid 345364292,,
594,866f1a0cdcc27899adc71312507199b6def08a7d,echen <rechen@google.com>, 2020-12-02 14:17:30 -0800, , rollback changelist 345305285 reason rollback broke numpy __init__.pyi symlink original change description move pytype .pytd file stub directory  piperorigin revid 345311117,,
595,797b10a0a02545dc86a9998b4862de4f45ee211c,echen <rechen@google.com>, 2020-12-02 13:50:52 -0800, , move pytype .pytd file stub directory piperorigin revid 345305285,,
596,c3ac859fad40a3fac03317189eaa137cbf9469ed,demello <mdemello@google.com>, 2020-12-02 12:24:17 -0800, , pytdfunction overloaded use signature args.simplify also fix arg unpacking matching indefinite tuple final arg function call always get assigned args piperorigin revid 345287750,,
597,0790b3f0c1600d21a7d7a917eb408e29d772c365,ebecca Chen <rechen@google.com>, 2020-12-02 13:02:25 -0800,748, merge pull request 748 google google_sync pypi release,,
598,df189686d5c1912311c15b86296b5128c975c176,echen <rechen@google.com>, 2020-12-02 11:42:41 -0800, , pypi release piperorigin revid 345278241,,
599,9ec841f9d7dadd389aa4c6f47b36ac3725c89fbc,ebecca Chen <rechen@google.com>, 2020-12-01 19:55:04 -0800,747, merge pull request 747 google google_sync google sync,,
600,def7044f216077b999b434d649f6f4869aca20c0,demello <mdemello@google.com>, 2020-12-01 14:36:47 -0800, , flatten nested literal parsing pyi file handle arbitrarily nested literal current parser raise error literal literal literal seemed reason allow also raise error unrecognised literal type line old parser piperorigin revid 345102440,,
601,01fe4b0d2f7531f5b5f4ad6f07208588356f57be,echen <rechen@google.com>, 2020-12-01 13:21:51 -0800, , move pytype typegraph target directory piperorigin revid 345086109,,
602,7c131acf6583363744d6be5390c2edcfee99ed16,echen <rechen@google.com>, 2020-12-01 11:35:46 -0800,743, copy relevant part 743 internally .travis.yml deleted test readme badge renamed show result new github action workflow rather old travis test piperorigin revid 345064511,,
603,d693e4bf41504cb697fd2beb543ae25cd4112add,echen <rechen@google.com>, 2020-12-01 10:18:51 -0800, , update version upgrade doc switch github action piperorigin revid 345047056,,
604,40b3afbf59c0ab63f8345954b973301d577651bc,echen <rechen@google.com>, 2020-11-30 20:47:02 -0800, , improve bad return type error message previous message return annotation foo returned value type union foo bar bad option return type bad return type expected foo actually returned bar new message bad option bar return type bad return type expected foo actually returned union foo bar previous message return annotation foo returned value type bar bad option return type bad return type expected foo actually returned bar new message bad return type bad return type expected foo actually returned bar piperorigin revid 344943186,,
605,d09c020572342f0b5214c72ee93b3cc3e74a77cb,echen <rechen@google.com>, 2020-11-30 20:44:11 -0800, , move target pytype tool directory move target containing src file pytype tool pytype tool analyze_project pytype tool merge_pyi build cmakelists.txt file respective directory one directory pytype typegraph plus rename pytype stub deal piperorigin revid 344942930,,
606,0ebf7b5c6779136f362023e293dddf4000dd2985,demello <mdemello@google.com>, 2020-11-30 15:50:33 -0800, , allow class register additional initializers add setup init method flax dataclasses modifies special casing reguister setup instead piperorigin revid 344904956,,
607,010b32c0c78087eb624c13dab4ead42324e3e97f,ebecca Chen <rechen@google.com>, 2020-12-01 14:54:57 -0800,746, merge pull request 746 google travis improve github action workflow,,
608,fe57d4bc0a450924d7614ca3b80990d5df04be15,ebecca Chen <rechen@google.com>, 2020-12-01 10:23:29 -0800, , tweak workflow run run push master manually triggered,,
609,3112c0b69c012e32a227338e40625e37d870d875,ebecca Chen <rechen@google.com>, 2020-12-01 09:59:59 -0800, , rename travis_script ci_script follow http github.com google pytype pull 743. longer using travis,,
610,a2ce16edc0ee992f97b328ce752b51318a00d513,ebecca Chen <rechen@google.com>, 2020-12-01 09:49:24 -0800,743, merge pull request 743 mraarif github action added github workflow use github action replace travis,,
611,2f3e0938a3a0f599d915d06a16292bb30a5d88d4,arif <mraarif@outlook.com>, 2020-11-29 12:36:47 +0500, , added github workflow replace travis,,
612,d895ddac8983ed8b2ff0ef8b7eefffa807074935,ebecca Chen <rechen@google.com>, 2020-12-01 08:48:37 -0800,745, merge pull request 745 google google_sync google sync,,
613,f13dfcf979df5944f881f03980d4f4318326218f,echen <rechen@google.com>, 2020-11-30 15:48:44 -0800, , update cmakelists.txt file following pytype pytd restructuring piperorigin revid 344904591,,
614,968b4b872f731e61a31957fa9a2fb45a28e05921,echen <rechen@google.com>, 2020-11-30 14:40:15 -0800, , allow protocol use abstractmethod tested rebuilt tool python pytype .par ran tgp breakage one already build failure table  piperorigin revid 344891703,,
615,b16d667927e066c602112c1917187283246bbe05,echen <rechen@google.com>, 2020-11-30 11:34:30 -0800, , use instead typeshed typeshed blacklist renamed exclude_lists update script failed remove old file change manually deletes fix pytype also get rid unused piperorigin revid 344854155,,
616,b87fac64d71b5efdcb579be18d625ad3fbe5bd5f,echen <rechen@google.com>, 2020-11-25 13:01:59 -0800, , move pytype pytd parse target directory one series break unwieldy third_party pytype build file move target whose srcs reference file pytype pytd parse pytype build new pytype pytd parse build file piperorigin revid 344303602,,
617,28810410df249c5474f29745b9b607e7f09a56aa,echen <rechen@google.com>, 2020-11-25 11:19:29 -0800, , update typeshed includes fix pytype test broken update tested ran two tgps one typeshed update one tool python pytype .par rebuilt use new typeshed typeshed update pytype rebuilt piperorigin revid 344285987,,
618,24c1d33065518be90548cd4557cff2f416f2ad97,echen <rechen@google.com>, 2020-11-24 14:29:45 -0800, , move pyi target directory move pyi pyi typed_ast target directory renaming dependency needed fix test broken previous pyc move update pytype pytd parse node.py longer need excluded pyi typed_ast added since longer able use pytype_library replaces old pyi parser due circular deps running define pytype dev piperorigin revid 344132734,,
619,de355bd953225066385450d001109824f39efa09,echen <rechen@google.com>, 2020-11-24 12:54:36 -0800, , move pytype pyc test pytype pyc directory piperorigin revid 344115215,,
620,d18e5dbb13df0fac10afedd8900fbdb8bf715045,ebecca Chen <rechen@google.com>, 2020-11-30 14:22:18 -0800,744, merge pull request 744 google update typeshed,,
621,79a055108e74dba49a98189412040feb60bdc018,ebecca Chen <rechen@google.com>, 2020-11-25 16:18:56 -0800, , use instead typeshed,,
622,3d5f8b081fe60d664465f08674be902e2d14b0e0,ebecca Chen <rechen@google.com>, 2020-11-25 15:50:40 -0800, , fix test broken typeshed update,,
623,51f7a01ed36b086219527254fd3cff747fe93fe8,ebecca Chen <rechen@google.com>, 2020-11-25 15:50:04 -0800, , update typeshed,,
624,fdc9ea17d2f541027f6b4044880b9c166df3d1a9,ebecca Chen <rechen@google.com>, 2020-11-24 14:38:03 -0800,741, merge pull request 741 google type_check stop excluding pytd parse node.py type checking,,
625,f319c5ddf195c93c6a667c64e03a4627545df29e,ebecca Chen <rechen@google.com>, 2020-11-24 14:13:26 -0800, , stop excluding pytd parse node.py type checking,,
626,95fa56429ca323d4770cf8ac56876bc7f53db777,ebecca Chen <rechen@google.com>, 2020-11-24 13:15:03 -0800,740, merge pull request 740 google google_sync google sync,,
627,7ed7b0f1548cd9d8231402ca038bf086bac0fd3b,echen <rechen@google.com>, 2020-11-24 11:52:15 -0800, , create pytype overlay target pull pytype overlay .py libvm target creates one target per file overlay piperorigin revid 344103417,,
628,367c82a5b7aca8a9f65b63d43ac90c87cd600709,demello <mdemello@google.com>, 2020-11-24 00:11:29 -0800, , fix make always full_name since reexports always want identify latter type piperorigin revid 344001674,,
629,1b275130c6718b811a1fea9806b07b606c8799cd,echen <rechen@google.com>, 2020-11-24 00:10:22 -0800, , start moving pytype target subdirectory source file move pytype ast target directory split file overlay depend target future change move pytype overlay .py libvm file analyze.py vm.py  convert.py  matcher.py output.py overlay_dict.py piperorigin revid 344001525,,
630,687b83ae2d6c9410a76667e1f4a6b295b3a8033a,demello <mdemello@google.com>, 2020-11-23 18:32:44 -0800, , fix relative import module overlay_dict working properly handle redirects overlay import bar .bar import bar baz import foo.bar also add fix reexported flax_overlay unit test test relative import overlay module since independent test overlay machinery piperorigin revid 343968471,,
631,9fa32857fa09762d1f5f929bbf6ddaa3af2cb69a,echen <rechen@google.com>, 2020-11-23 18:06:35 -0800, , respect attribute annotation instance pytd class fix bug exposed updating typeshed annotated pytype setting type whatever value last set test code piperorigin revid 343965377,,
632,0d8cbf6952f90dded81846c70fb4aa983c51ff53,demello <mdemello@google.com>, 2020-11-23 14:56:38 -0800, , fix check local.last_op none using piperorigin revid 343934724,,
633,a86100c037c32c1f9cdf500a9446e8de046b7638,echen <rechen@google.com>, 2020-11-23 14:42:59 -0800, , finish writing features.md piperorigin revid 343932342,,
634,d1d1906730ef96d2af94a7f6ef4eb28d4055979a,demello <mdemello@google.com>, 2020-11-23 12:20:35 -0800, , add flax.linen overlay support inheriting define dataclasses add field name str parent automatically raising error field defined explicitly subclass piperorigin revid 343903817,,
635,d3960d8d70673aa27878bf24feb55af694fb6a7e,ebecca Chen <rechen@google.com>, 2020-11-23 14:40:06 -0800,738, merge pull request 738 google google_sync google sync,,
636,9738514b03a7c2fea2d24065a011492755fe45ae,echen <rechen@google.com>, 2020-11-23 08:59:07 -0800, , pypi release build failure table show one new finding head finding point real type error code good pypi release piperorigin revid 343861263,,
637,b171d87c45f7833f6290eaec658073c1080aad47,echen <rechen@google.com>, 2020-11-23 02:17:41 -0800, , remove code highlight break github markdown piperorigin revid 343809972,,
638,ffc6aab636329075ee2d9cd443e83d0f790a9b4c,ebecca Chen <rechen@google.com>, 2020-11-22 20:14:10 -0800,737, merge pull request 737 google google_sync google sync,,
639,283f243273a370d3df21ba54aa43ee379f9ab8c7,echen <rechen@google.com>, 2020-11-20 16:30:47 -0800, , remove another finished todo piperorigin revid 343586601,,
640,bedf0c46bc062d462079bfadd845a0841be431bc,sudol <tsudol@google.com>, 2020-11-20 16:23:19 -0800, , add doc explaining two pas analysis piperorigin revid 343585518,,
641,81db44b8efe17a2017510343c5b293884461d56b,echen <rechen@google.com>, 2020-11-20 15:45:59 -0800, , remove fixed todo piperorigin revid 343579437,,
642,11fb1a7e1765beff5efe78ef61db37dcf33ad360,sudol <tsudol@google.com>, 2020-11-20 11:10:41 -0800, , remove unnecessary todo piperorigin revid 343527166,,
643,74033c2c1d08aa2183e06d3a9fc8e2a33447597c,echen <rechen@google.com>, 2020-11-19 22:14:45 -0800, , fix splitting bug implementation compare_op looping possible binding left right side calling comparison magic method left binding could matched definitely entire right variable left side filtering right binding already matched piperorigin revid 343433846,,
644,747154987ab3665af16f262f7c758cf5bbd7d452,echen <rechen@google.com>, 2020-11-19 21:17:51 -0800, , cleanup create lazymembers mixin logic lazy attribute loading defined class lazy class contained bunch code irrelevant functionality split lazy loading code new lazymembers mixin also allowed get rid is_lazy attribute favor isinstance check also got rid usage six mixin.py replaced another attribute can_be_abstract isinstance check well piperorigin revid 343427297,,
645,1302248c52f650b1350c3cfce5a05e29b33a1cc8,echen <rechen@google.com>, 2020-11-19 18:25:32 -0800, , pretty print union literal literal literal piperorigin revid 343410131,,
646,2683c5a1f175a9698d11dcc53c609a5e7bf372d8,echen <rechen@google.com>, 2020-11-19 15:11:01 -0800, , small fix literal look base class caller implement __eq__ __hash__ instantiate __hash__ implementation assumes constant always represented instance made sure code outside convert.py directly construct change matcher copy literal parameter directly matching tuples ultimate effect literal value preserved iterating tuple list literal surprised discover list test_iterate get turned tuple hood passed function expects literal piperorigin revid 343379049,,
647,3e02bfeaa13e15acf68dfb1c436e65ccc695ce56,echen <rechen@google.com>, 2020-11-19 12:11:13 -0800, , take classmethods staticmethods account protocol unexpected consequence supporting suddenly analyze bunch code previously silently passed type checking due use runtime protocol runtime protocol also classmethod caused bunch false positive due pytype inconsistently ignoring classmethods time piperorigin revid 343342498,,
648,de5ea5232078f76004d531b3b2ee50aec8b4d52c,echen <rechen@google.com>, 2020-11-18 19:43:44 -0800, , fix rely module attribute module check broke user code importing typing member exporting parameterized version name side note noticed pytype infers type typingcontainer object try fix since think good reason want export typing member module use instead using typing directly piperorigin revid 343207525,,
649,a5b6267bf80761c2b3a363856a5f701495ceea2b,ebecca Chen <rechen@google.com>, 2020-11-19 21:27:34 -0800,735, merge pull request 735 google requirement copy version requirement setup.cfg,,
650,b469d1ca203c5c5ea78606c95062b79c447d9625,ebecca Chen <rechen@google.com>, 2020-11-19 21:00:55 -0800, , copy version requirement setup.cfg,,
651,50fa680368b59c5c4ea7add257a6792ecb455d46,ebecca Chen <rechen@google.com>, 2020-11-18 19:58:44 -0800,734, merge pull request 734 google google_sync make testing supporting upcoming python version easier,,
652,ed2b53c40ff50a8da087a88ca5befce2c021f1df,echen <rechen@google.com>, 2020-11-18 19:13:32 -0800, , make testing supporting upcoming python version easier currently pytype python 3.9 travis test pretty useless since doe repeatedly print python version 3.8 yet supported make test actually useful added hacky attribute utils.py disables upper bound version check detects pytype test running added 3.9 opcodes magic number wrote little script diffs opcode mapping two version piperorigin revid 343204278,,
653,3e643963a3b5ed80ba1ecdf522df274ea16e6425,ebecca Chen <rechen@google.com>, 2020-11-18 02:40:53 -0800,733, merge pull request 733 google google_sync google sync,,
654,287c3e80baba51f0972d016fd359d7ae282104ce,echen <rechen@google.com>, 2020-11-18 01:34:08 -0800, , support typing.literal bool int str byte source code add support typing.literal one caveat support enums still end going mark tracking literal bug fixed open one specifically enum support make bunch tweak annotation substitution error printing error show expected literal actual literal rather previous unhelpful expected literal str actual str fix bug pytd function module name prepended twice fix bug still detect alias typing member belonging typing add logic converting pytd.literal add construct literal fix bug pyi parser flatten nested literal allowed literal illegal value fix bug pytd printing boolean literal close http github.com google pytype issue 521 piperorigin revid 343034907,,
655,316c2383da105f903d6f2e738de7494a46a2a6fb,echen <rechen@google.com>, 2020-11-17 14:27:07 -0800, , document lazy attribute loading explaining _convert_member previous change made realize probably document doe supposed used piperorigin revid 342946579,,
656,3dfe52c44c1a3d34eeea707ad2bdd1c23cc77af5,echen <rechen@google.com>, 2020-11-17 13:45:37 -0800, , minor fix cleanup module handling change _convert_member method creates abstract value module member take instance rather member name instance requires making bunch small change overlay overall look cleaner imo deletes unused node parameter get rid used record data typing module member created look member using typing_overlay fix bug member converted using overlay.items stored member map piperorigin revid 342937335,,
657,e1b8090af0b1605d6064a62045482e882646d7d3,echen <rechen@google.com>, 2020-11-17 13:29:18 -0800, , replace overlay deletes pytd aliased member counterpart typing mapped everything else instead typeshed add overlay fix following issue aliased directly pytd value typing.literal bypassing overlay unsupported member like typeddict silently mapped  piperorigin revid 342933754,,
658,3cd132764f856ef21e86b5e38c65c5a6e47339eb,ebecca Chen <rechen@google.com>, 2020-11-16 20:54:20 -0800,732, merge pull request 732 google google_sync google sync,,
659,249fe166c31d7f1a121c4a2b84a5f5fefd2951fd,demello <mdemello@google.com>, 2020-11-16 18:14:24 -0800, , raise exception unexpected function body currently strip bare string theory docstrings function processed added redundant check function body anyway case stop piperorigin revid 342763706,,
660,0e29f3d5735556fcfac65d66808fab6f9acd06f3,demello <mdemello@google.com>, 2020-11-16 16:19:14 -0800, , move ast visitor tool trace main pytype piperorigin revid 342745230,,
661,6fef1e517795563f0e87f9579c006f9fe7b24cc2,demello <mdemello@google.com>, 2020-11-16 15:00:25 -0800, , fix bunch test conform valid pyi syntax piperorigin revid 342728475,,
662,6c2a7ed211281a6de95c98008492d8e9f25f5642,echen <rechen@google.com>, 2020-11-16 11:37:25 -0800, , remove stale todos piperorigin revid 342682992,,
663,0b162ab411be29606ac79b1e55f60ea981673f49,echen <rechen@google.com>, 2020-11-16 11:22:55 -0800, , start doc supporting new typing feature piperorigin revid 342679472,,
664,8533af1fe525254957d84f600024b9d81791150e,sudol <tsudol@google.com>, 2020-11-16 10:51:03 -0800, , forgot update opensource doc piperorigin revid 342671689,,
665,68665a42d8601d1c08fb2cd69a975b8274aa8887,sudol <tsudol@google.com>, 2020-11-16 10:23:21 -0800, , finish overview typegraph member piperorigin revid 342665371,,
666,a0d4776369b72705bd19f15b90e5683dba26bb13,echen <rechen@google.com>, 2020-11-13 17:08:10 -0800, , add bit information tool readme also remove last todo developer index little anal even piperorigin revid 342366524,,
667,074badb0b2a046863daa928359d65bab061d2775,echen <rechen@google.com>, 2020-11-13 14:15:54 -0800, , always treat module hashable yet another bug exposed typeshed update piperorigin revid 342336512,,
668,6a7eea95a99b986602786792894f811b92ec0c68,echen <rechen@google.com>, 2020-11-13 11:57:52 -0800, , add one anal todo piperorigin revid 342309279,,
669,3b7fb11829ef193ab016b1e87ccf5086dffef9b7,echen <rechen@google.com>, 2020-11-13 11:45:29 -0800, , update todos index.md piperorigin revid 342306299,,
670,757f27304ddcc4c952d99ee6f1c020a784ad8ab6,echen <rechen@google.com>, 2020-11-13 11:39:16 -0800, , internal change piperorigin revid 342304809,,
671,793623e2f8db70967b8e35a4411c6c6835a67c03,ebecca Chen <rechen@google.com>, 2020-11-12 19:33:23 -0800,730, merge pull request 730 google google_sync pypi release,,
672,8a896b5c2497a033745d79855342e7b34e216f65,echen <rechen@google.com>, 2020-11-12 10:59:37 -0800, , pypi release build failure table still almost suspiciously empty great time release piperorigin revid 342085198,,
673,afc1fde2b1254fb48ea9c39f854f39687ade7387,ebecca Chen <rechen@google.com>, 2020-11-12 00:11:27 -0800,729, merge pull request 729 google google_sync google sync,,
674,6c37c3c1a535e00d8aa664700326ad93e6e65e51,ebecca Chen <rechen@google.com>, 2020-11-11 23:46:52 -0800, , fix travis opensource test seem require test name match path http travis ci.org github google pytype job 743119164 piperorigin revid 341988790,,
675,79b728d31812fdeb83135ea38f0d4ad8a621ba6f,ebecca Chen <rechen@google.com>, 2020-11-11 23:08:05 -0800, , fix travis lint error seen http travis ci.org github google pytype job 743080653 piperorigin revid 341954573,,
676,ce4a913c158f7db1e99deb120fc5f11d354223ab,ebecca Chen <rechen@google.com>, 2020-11-11 23:05:58 -0800, , add missing doc _layouts dev_guide piperorigin revid 341950433,,
677,07e8a3fb9dda73a028a877da909f55bd1ef0f5ed,echen <rechen@google.com>, 2020-11-11 17:48:09 -0800, , support type ignore errorcode ... pyi file came http github.com python typeshed pull 4758 mypy support error code bracket type ignore http github.com python mypy blob master mypy errorcodes.py http mypy 730 release precise error location display error code seems error code look like error code include multiple separating comma change also allow type ignore think fine piperorigin revid 341947562,,
678,666fa2e6f0b5de239bcc60cf04d59bbfced43a0b,echen <rechen@google.com>, 2020-11-11 17:19:32 -0800, , always allow class match typing.hashable fix another bug exposed upgrading typeshed piperorigin revid 341942698,,
679,b964b6a94066566bc7e76141e5f12dcb4a598617,demello <mdemello@google.com>, 2020-11-11 16:14:20 -0800, , allow ... ... piperorigin revid 341931368,,
680,ca6a6191237a17fb081f5bb4e436b5886be39b7b,echen <rechen@google.com>, 2020-11-11 11:06:43 -0800, , fix bug pytype handling literal str constant type literal str imported pyi file pytype failed strip quotation mark prefix hand thing properly stripped literal str annotation leading matching failure change stripping always happen noticed part test case accidentally commented test file modifying fixed piperorigin revid 341867333,,
681,79bdd34b4b7a5194530d261b269e48ecf1185234,echen <rechen@google.com>, 2020-11-09 13:48:19 -0800, , fix typo implememt implement piperorigin revid 341477728,,
682,34f83d3c46160177549d7e837afa0cd5856d68fd,echen <rechen@google.com>, 2020-11-09 13:32:43 -0800, , add documentation optimize.py convert.py also collect remaining action item aware single todo index page add missing newline sitemap piperorigin revid 341474335,,
683,d206eb858c6c058a9778027a1c08f3cf927aa2b5,demello <mdemello@google.com>, 2020-11-09 13:06:41 -0800, , move overlay alongside piperorigin revid 341469185,,
684,e695e65f9b4ae1b5cc97a6234f709cabaf75fbc3,demello <mdemello@google.com>, 2020-11-09 12:00:09 -0800, , add basic documentation tool piperorigin revid 341455646,,
685,f3a41ba56075d72ebb9cdf41cf11b61fa6b4d9f5,sudol <tsudol@google.com>, 2020-11-09 11:54:55 -0800, , add note solver algorithm piperorigin revid 341454439,,
686,392d45a547837f566ebfe891b4b3b97366e93440,demello <mdemello@google.com>, 2020-11-05 16:03:47 -0800, , move namedtuple name generation pytd escape.py piperorigin revid 340946123,,
687,c7010e69899b46148e1e358f048e5d39fd5a0f12,demello <mdemello@google.com>, 2020-11-05 12:00:46 -0800, , fix test definition conform proper syntax pyi sample mostly make following change def ...  def args ... tested temporarily enabling new parser running unit test piperorigin revid 340900181,,
688,7d41c8ebda1a605d6cdc153ee4309cda2af65275,echen <rechen@google.com>, 2020-11-05 09:30:54 -0800, , fix typo typegraph.md piperorigin revid 340868319,,
689,26b604f969cd1ac4cf301bdc5d628a10d8f75c8e,demello <mdemello@google.com>, 2020-11-04 10:28:14 -0800, , replace union throughout mostly straightforward search replace added wrapper automatically insert union import needed since every pytd needed one test skipped pytd piperorigin revid 340680281,,
690,2f03a3d634d825558226259a1cfedc335145c42a,demello <mdemello@google.com>, 2020-11-03 17:02:56 -0800, , replace test inline pyi fragment piperorigin revid 340553204,,
691,0dfb73931ce65de4ec304a1d70eb8e19c14a3667,demello <mdemello@google.com>, 2020-11-03 16:41:08 -0800, , allow prefix partial unknown changed fix place unknown hardcoded experimentally changing escape.partial lead test breakage piperorigin revid 340550142,,
692,70215e185f17d2611ea4230eb1375c17712560fe,ebecca Chen <rechen@google.com>, 2020-11-04 15:32:04 -0800,726, merge pull request 726 google manifest fix pip install error,,
693,5dd02dd239768595e32549be7cd26d869eb8e568,ebecca Chen <rechen@google.com>, 2020-11-03 20:24:23 -0800, , use plain parser extension reason mysterious using lead error importerror dynamic module doe define module export function even set false,,
694,ffe3c8931384f0866b19d84a766fc6fe6b5d3c81,ebecca Chen <rechen@google.com>, 2020-11-03 19:57:43 -0800, , add pytype typegraph manifest.in getting error cfg_logging.h missing trying test new release change seems fix issue still seeing odd dynamic import failure python3.7 machine also appears half broken right idea issue pytype code environment,,
695,a1a6c24a3dce6f4453b42e0bd2b4d224e6e262b6,ebecca Chen <rechen@google.com>, 2020-11-03 14:47:41 -0800,725, merge pull request 725 google google_sync pypi release,,
696,3b2c5f9ed194a7a9ee1d907e28b10de1b59964b9,echen <rechen@google.com>, 2020-11-03 14:03:58 -0800, , pypi release piperorigin revid 340520728,,
697,7755e3cf823e855439b6e297f57be6cd3c321c5d,ebecca Chen <rechen@google.com>, 2020-11-02 20:26:45 -0700,724, merge pull request 724 google google_sync google sync,,
698,9327ad1673b2574e9b99b7129790387c6fddfb3b,ebecca Chen <rechen@google.com>, 2020-11-02 19:00:39 -0800, , remove trailing newline end parser.py extra newline displeases pylint http travis ci.org github google pytype job 741022897 piperorigin revid 340360158,,
699,a51a99f96bdabddd3ddff6ed3940eb5e1f065239,sudol <tsudol@google.com>, 2020-11-02 15:39:28 -0800, , add doc reachability.h piperorigin revid 340330922,,
700,9dbc716bd2d1fecc552ddad7e628dddb5265c5ed,demello <mdemello@google.com>, 2020-11-02 12:00:48 -0800, , start collecting partial name mangling e.g unknown1 single place ultimately want replace legal python character piperorigin revid 340286094,,
701,8c22d47efffad159809931c40b4aadc0fae52d7b,demello <mdemello@google.com>, 2020-11-02 11:48:03 -0800, , use legal character generated namedtuple name need able round trip pyi file new parser piperorigin revid 340283188,,
702,1457a62ca7b50a9fab45b92430e58d7844dfc22a,sudol <tsudol@google.com>, 2020-10-30 13:35:53 -0700, , remove reachability metric reachability metric originally recorded cachemetrics however reachability mechanism actually cache dynamically grown adjacency matrix idea cache hit miss relevant piperorigin revid 339931062,,
703,b12a7e732bbfbb487f6cf5daf578bfec30364018,demello <mdemello@google.com>, 2020-10-29 12:22:58 -0700, , fix attrs pytd file compatible new parser piperorigin revid 339721735,,
704,2e5a4fef9835974ba4316977dd3dfe945597129e,sudol <tsudol@google.com>, 2020-10-28 15:31:37 -0700, , add metric solver query piperorigin revid 339551003,,
705,3eae8e35e038bfe48dcb58498772711f96476879,demello <mdemello@google.com>, 2020-10-26 16:33:39 -0700, , fix xref crash class declared global piperorigin revid 339143448,,
706,9ed9c4713ed34258ce49a10380512d445b8d39c6,demello <mdemello@google.com>, 2020-10-23 14:40:38 -0700, , fix last pytd issue pytd .pytd parsing except shadowed module attr __init__.pytd piperorigin revid 338747733,,
707,1a45c250e735d3c0a98e167c1e57022604b56721,demello <mdemello@google.com>, 2020-10-23 14:15:26 -0700, , fix _pathlike protocol piperorigin revid 338742906,,
708,774ec679edbd004186406ec748d4cc75b7ccc7b9,demello <mdemello@google.com>, 2020-10-23 11:27:15 -0700, , account args args build_class piperorigin revid 338711741,,
709,8844048f3d0499cbe04e49cb0459f7ace8a55ef9,demello <mdemello@google.com>, 2020-10-22 12:50:10 -0700, , parse keyword constant like true python parser module name __builtin__ add true false none __debug__ manually constant list parsing pyi file also add minor fix convert namedtype nothing nothingtype fix noncompliant def piperorigin revid 338530575,,
710,b3c6da890aa0a32dcc3263e32942c88699eac0e8,ebecca Chen <rechen@google.com>, 2020-11-02 19:19:25 -0700,723, merge pull request 723 google google_sync google sync,,
711,652f5e4b20d35a2acea9674347062ea0e37d846d,hane Harvey <shane.harvey@mongodb.com>, 2020-10-20 13:20:26 -0700,713, merge pyi support import collections.abc abc style import 713 fix http github.com google pytype issue 706 resolve 713 piperorigin revid 338124126,,
712,8ad2f951c62e9adff596b7af893054b8f3374fc2,echen <rechen@google.com>, 2020-10-15 17:19:06 -0700, , allow ... default parameter value empty method overload method basically stub ... valid default value hard identify overload type checking default value allowed ... whenever method body empty piperorigin revid 337414973,,
713,fd587469f88708d23f743075632d26515fcfd227,ebecca Chen <rechen@google.com>, 2020-11-02 18:48:01 -0700,720, merge pull request 720 google brew fix build macos wheel action,,
714,6762f92dd5e43d24a209a58b0ead1c180642ff0f,ebecca Chen <rechen@google.com>, 2020-10-20 14:22:05 -0700, , try fix build wheel failing error http github.com action virtual environment issue 1811 issuecomment 708461086 attempting workaround http github.com action virtual environment issue 1811 issuecomment 708480190,,
715,a4d56ef763eb4a29b5db03a2013c3373f9f46146,eddy Sudol <tsudol@google.com>, 2020-10-19 10:10:07 -0700,718, merge pull request 718 google google_sync google sync,,
716,e34b2d19d5ca2ca8c83158560209a4113a4ee7e6,sudol <tsudol@google.com>, 2020-10-15 11:10:40 -0700, , fix bug argument self.fail piperorigin revid 337345364,,
717,6e332cdc3ac059060473ae597948273a8950790b,sudol <tsudol@google.com>, 2020-10-14 13:25:36 -0700, , disable cfg_py cmakelists piperorigin revid 337159163,,
718,4c402698634114591e481d825fedefa7a7a2c20d,sudol <tsudol@google.com>, 2020-10-13 13:55:44 -0700, , add pybind11 top level cmakelists.txt enables used piperorigin revid 336949158,,
719,1d7771303116df7d84d8685a1fd006e65cdb56aa,sudol <tsudol@google.com>, 2020-10-13 12:12:25 -0700, , fix cfg rule name cmakelists piperorigin revid 336927800,,
720,afe8e974a65ac1d7eb6e031cb11da395ed1255b3,echen <rechen@google.com>, 2020-10-12 17:48:14 -0700, , add test confirming get_attribute handling valself shockingly docstring appears completely accurate piperorigin revid 336782243,,
721,dbb762a91f03392ff7a38695fc4d2925345bbd06,demello <mdemello@google.com>, 2020-10-12 17:24:07 -0700, , add type annotation handling developer doc piperorigin revid 336778714,,
722,6de3d47c9fe8608ecb7db75d1e8fe1fc8c1d142a,sudol <tsudol@google.com>, 2020-10-12 16:00:05 -0700, , prepare opensourcing new pybind11 dependent code piperorigin revid 336763262,,
723,2b787651a021b57c68750d0bc91c7b66dd77a38e,echen <rechen@google.com>, 2020-10-12 11:26:08 -0700, , fix definition bytestring byte shorthand represent byte bytearray memoryview byte serving shorthand three type appears parameter annotation simplest way cheat slightly represent bytestring union instead single type make byte shorthand work properly also add logic matcher deduplicating compatible builtins matching typevars piperorigin revid 336705554,,
724,6c9b3d4b306b7141db877b63aa12ec40da1817b9,echen <rechen@google.com>, 2020-10-10 22:09:24 -0700, , support creating ints class implement __trunc__ __index__ python version support int called class defines __trunc__ 3.8 also called class defines __index__ piperorigin revid 336506983,,
725,7133b630b83fb2dbb09990f4d89394959df453f7,echen <rechen@google.com>, 2020-10-10 22:04:12 -0700, , allow function match hashable bug found trying upgrade typeshed function treated hashable piperorigin revid 336506537,,
726,67ea190683a8418d6da77943be579133c9ccef7a,sudol <tsudol@google.com>, 2020-10-09 15:08:39 -0700, , add missing piperorigin revid 336373705,,
727,ce2ce21180daa512b67daf93fecdfed3bbb37a3d,echen <rechen@google.com>, 2020-10-08 18:38:49 -0700, , update doc reflect removal host 3.5 support http github.com google pytype issue 677 piperorigin revid 336207143,,
728,f850d42827e83c5c712d85c9a82f2d91dd833ed5,sudol <tsudol@google.com>, 2020-10-08 17:07:35 -0700, , add pybind11 based glue code new typegraph metric piperorigin revid 336195189,,
729,1c4ac1a16e98aeacd1a5786b68944a15f7b7468a,enry Schreiner <HenrySchreinerIII@gmail.com>, 2020-10-16 20:19:38 -0400, , fix simplifiy pybind11 usage 716 fix simplifiy pybind11 usage fix allow overriding pybind11 update rc3 fix review point,,
730,35fb32dc6e4c388bd57f01bfee9625fdca826be0,eddy Sudol <tsudol@google.com>, 2020-10-13 14:54:23 -0700, , add pybind11 submodule 708 necessary order use pybind11 cmake rule,,
731,2bf08c79e5148732eed5234fae1703b76b9b267b,eddy Sudol <tsudol@google.com>, 2020-10-12 15:43:43 -0700, , prepare use pybind11 707,,
732,96ce3cd01b47cf48300d891b5522551c42a1bf6e,ebecca Chen <rechen@google.com>, 2020-10-12 11:06:30 -0700,705, merge pull request 705 mraarif simplify travis file updated travis configuration simplify dependency,,
733,238c2799cc6a7d084a8535ea3fca97883b56239f,arif <mraarif@outlook.com>, 2020-10-11 12:59:43 +0500, , updated travis configuration simplify dependency intstallation make readable,,
734,0beea117ff7ef7928e446347344363a0deee3ec7,ebecca Chen <rechen@google.com>, 2020-10-09 12:04:48 -0700,703, merge pull request 703 google drop35 drop support running pytype python 3.5,,
735,c3358c100391444c472e0f87bf8042a8a7307270,ebecca Chen <rechen@google.com>, 2020-10-08 18:27:35 -0700,702, merge pull request 702 google env migrate away set env,,
736,2eae4125707f5f82787bdac903715815b4fcc06d,ebecca Chen <rechen@google.com>, 2020-10-08 18:20:07 -0700, , remove unused cmake_version,,
737,2f9a1a8acb10c4a135b52d420a9f655ac3f805cc,ebecca Chen <rechen@google.com>, 2020-10-08 18:13:50 -0700, , drop support running pytype python 3.5 moving 3.5 allow write code using string variable annotation continue analyzing 3.5 code user pin pytype 2020.10.08 run pytype 3.6 3.8 interpreter pas 3.5 latter option need find way tell pytype third party package located silence import error http github.com google pytype issue 677,,
738,60480cf2c601318cafaabe121988dcc65ec03e1b,ebecca Chen <rechen@google.com>, 2020-10-08 17:36:58 -0700, , migrate away set env latest build wheel run included deprecation warning http github.com google pytype action run 296426515 non deprecated way set environment variable http docs.github.com free pro team latest action reference workflow command github action setting environment variable,,
739,5c65f4fd94819259c5c48dc1d8d992e22914cf1a,ebecca Chen <rechen@google.com>, 2020-10-08 15:27:56 -0700,701, merge pull request 701 google google_sync pypi release,,
740,c52433c6d0a48b0af9e7412a34f50777cbc6a89a,echen <rechen@google.com>, 2020-10-08 14:11:30 -0700, , pypi release piperorigin revid 336162067,,
741,2ebc17179b00b16c0fcc1c0f19bc56f7fcb51f89,ebecca Chen <rechen@google.com>, 2020-10-06 14:40:29 -0700,700, merge pull request 700 google google_sync google sync,,
742,75d7f80b1d2640cc5bd9c98e75cc91022cdece35,echen <rechen@google.com>, 2020-10-06 14:08:14 -0700, , add typing.pytd see http github.com python typeshed pull 4618 piperorigin revid 335717282,,
743,177943d02b42375c43d10ed2b3a9cc5ba479060c,echen <rechen@google.com>, 2020-10-05 13:57:11 -0700, , copy new diagram doc piperorigin revid 335492778,,
744,85242f88c86434b8069fbd3fde01167926e69968,ebecca Chen <rechen@google.com>, 2020-10-06 14:09:49 -0700,699, merge pull request 699 google google_sync google sync,,
745,ea678384f1585d253a1cb58e1b1ebfb4c74278e7,echen <rechen@google.com>, 2020-10-05 13:37:38 -0700,695, update contributing.md copy 695 weird dance keep internal external doc sync additional cleanup author spotted piperorigin revid 335489084,,
746,677e4b234042c12d26dc457442054fa8a5383cf4,echen <rechen@google.com>, 2020-10-05 12:43:36 -0700, , add flowchart description get_attribute set_attribute piperorigin revid 335477295,,
747,3f119a48c690175b64f604c154eb538946c7951f,ebecca Chen <rechen@google.com>, 2020-10-06 12:39:31 -0700,698, merge pull request 698 google cmake stop manually downloading cmake fix manylinux wheel build,,
748,e1c96ec0cc86c947c5a9cbbcbff6299a60101423,ebecca Chen <rechen@google.com>, 2020-10-06 12:02:36 -0700, , stop manually downloading cmake manylinux wheel build failing failed create symbolic link usr local bin cmakeâ file exists,,
749,3482fcc12268162cc95ce59a6bc5c9b2ac46d359,ebecca Chen <rechen@google.com>, 2020-10-05 13:30:47 -0700,695, merge pull request 695 josalmi contri requirement mention contrubuting guide,,
750,1a2c9bb4e2106f81c85c6f80ac851c69cc6ce7d9,oni Salmi <josalmi@google.com>, 2020-10-03 01:24:44 +0200, , mention contrubuting guide,,
751,919b6d9eced13335a46e745743a26297ceb3f151,ebecca Chen <rechen@google.com>, 2020-10-04 20:43:32 -0700,696, merge pull request 696 josalmi dockerfile add dockerfile development,,
752,641692b814fa8135f4c112146138363df1d9d1be,oni Salmi <josalmi@google.com>, 2020-10-03 11:07:52 +0200, , add dockerfile development,,
753,e760fd4c9f4fbfc2626db0f9a959d556e026b856,ebecca Chen <rechen@google.com>, 2020-10-02 11:48:31 -0700,694, merge pull request 694 google google_sync use list comprehension flattening 693,,
754,0167d720953a0b511378028a9286776fd042c076,ukas Geiger <lukas.geiger94@gmail.com>, 2020-10-02 11:12:52 -0700,693, use list comprehension flattening 693 change visitor typegraph utils use list comprehension flattening nested sequence instead sum ... slow large input improve readability also slightly improve performance resolve 693 piperorigin revid 335062627,,
755,9a128c6f0900e28b7a20d7f35cbd9d1aef898121,ebecca Chen <rechen@google.com>, 2020-09-29 13:31:28 -0700,692, merge pull request 692 google google_sync pypi release,,
756,a2baa7fddab91fe5e06681b74632728fe2936b97,echen <rechen@google.com>, 2020-09-29 11:16:43 -0700, , pypi release piperorigin revid 334421091,,
757,00ecaea6afe8f6e813af3ad4925a517785f1e04b,ebecca Chen <rechen@google.com>, 2020-09-28 20:34:02 -0700,691, merge pull request 691 google google_sync google sync,,
758,5bad7b68e1e41e258038b3678efca5b166cfcd2c,echen <rechen@google.com>, 2020-09-28 17:22:07 -0700, , use x.y instead pythonx.y window although pytype support window typeshed pytype_test used work window python_exe could used pas path python interpreter broke test removed flag oops attempting fix sys.platform check using python launcher window http docs.python.org using windows.html python launcher window tested bit window able get pytype single completely working window kept running parser error think caused either setting extension built window weird encoding ... something test file worked well enough sure pytype able find python interpreter change close http github.com google pytype pull 682 piperorigin revid 334270850,,
759,de2b5d7ef9592fd6e1a735599d7829cc138a15ce,echen <rechen@google.com>, 2020-09-28 12:50:11 -0700, , fix bug attaching function type comment opcodes type comment variable annotation sandwiched one line function docstring function pytype mistakenly treated function type comment due thinking second function docstring belonged first function fix http github.com google pytype issue 683 piperorigin revid 334218626,,
760,43079afe8d50cbcc12503f2cf6e12fb78f942e97,echen <rechen@google.com>, 2020-09-28 11:05:51 -0700, , start attributes.md checking meet personal goal finishing something tangible every friday even though still quite drafty also added tip abstract_values access attribute handler others attribute abstract value piperorigin revid 334195995,,
761,75b8e3c316489d9ba5d5567b770eff42491ba8c2,echen <rechen@google.com>, 2020-09-25 12:02:27 -0700, , revert previous super fix build failure table actually cleaner without change since namedtuple subclass name parent common pattern think live obscure bug piperorigin revid 333779948,,
762,584fdb02b944b3cbf366684412c1e8799b33a5ee,echen <rechen@google.com>, 2020-09-24 14:29:24 -0700, , fix bug pytype handling class name piperorigin revid 333598812,,
763,62b9bd1d636965e695bd2e735244be47168dc5b0,ebecca Chen <rechen@google.com>, 2020-09-24 17:04:47 -0700,690, merge pull request 690 google ninja require ninja 1.10.0.post2,,
764,bd60b2ebd07da3fff7474cc7794f56d4152cf8eb,ebecca Chen <rechen@google.com>, 2020-09-24 16:18:12 -0700, , require ninja 1.10.0.post2 pytype requires version ninja couple week ago forgot include version requirement setup.cfg result user end broken state install pytype environment already older ninja version installed http github.com google pytype issue 685,,
765,604c802eb58c8143091738dc533aaae003e3a217,ebecca Chen <rechen@google.com>, 2020-09-24 14:20:46 -0700,689, merge pull request 689 google google_sync pypi release,,
766,75f8d58753991be3595a0a317a42098a9af5ad27,echen <rechen@google.com>, 2020-09-24 11:12:24 -0700, , pypi release although still one obscure super bug think good enough release plus might break thing attempting fix bug already week since last release piperorigin revid 333554732,,
767,cc2024501e0b1503e6f02a9fc7c68c6d9719d07d,ebecca Chen <rechen@google.com>, 2020-09-24 10:41:26 -0700,688, merge pull request 688 google google_sync google sync,,
768,17dceb18d252b72b4d275f9a04bf59e1cc2c3616,echen <rechen@google.com>, 2020-09-23 19:30:59 -0700, , fix copybara export attr setters.pytd piperorigin revid 333424219,,
769,be34e171e7a7426ac0772e6027c41874b2e8ac22,echen <rechen@google.com>, 2020-09-23 18:24:56 -0700, , fix super bug caused wrong ordering condition found last well hopefully last super bug build failure table since class mro need check mro check piperorigin revid 333415983,,
770,1684a3609895a073d4e43fafd6d14b372bf47cf2,demello <mdemello@google.com>, 2020-09-23 15:25:24 -0700, , update attrs pytd file support version 20.2.0 piperorigin revid 333385138,,
771,f74547e82a3cc57058d70516e5b75fea41f64974,echen <rechen@google.com>, 2020-09-22 17:31:21 -0700, , fix super bug improve check whether super called classmethod handle ambiguous superclass better fix broken equality check calculating class skip piperorigin revid 333194394,,
772,5174cc5bee69c94d145a308a529da307b082f595,sudol <tsudol@google.com>, 2020-09-21 18:25:25 -0700, , create metric class class discussed design doc next step writing python class wrap adding cfg.cc plumbing metric gathering code solver piperorigin revid 332980833,,
773,2c7f04100744f87a6214ae21016844cff5185597,sudol <tsudol@google.com>, 2020-09-21 15:53:39 -0700, , fix inconsistency typegraph stylistic reachable.h use size_t num_nodes_ size_ problematic next_binding_id look like getter actually mutates two different function piperorigin revid 332953498,,
774,dc4f93eafc0ef512865d5d4aa5a8ce799bfb743e,demello <mdemello@google.com>, 2020-09-21 14:01:25 -0700, , document special builtins piperorigin revid 332928299,,
775,54dad9110e3647465d80f70e96b88f7e9ed3eeb9,echen <rechen@google.com>, 2020-09-21 13:16:34 -0700, , fix super bug piperorigin revid 332918205,,
776,906910bd31c427877f40254c3f3e943566cf2dd6,echen <rechen@google.com>, 2020-09-20 18:45:33 -0700, , add doc overlay work step adding new one although special builtins doc exist yet assumed called update link needed piperorigin revid 332763133,,
777,49951f31f778cd152de83d9a20cbf1a6f6bd5a11,echen <rechen@google.com>, 2020-09-18 11:17:24 -0700, , fix crash caused trying use none piperorigin revid 332488538,,
778,2cb2548beb5f2178006c4588766c49165f4a0d4c,echen <rechen@google.com>, 2020-09-17 17:26:34 -0700, , update readme add 3.8 range supported version piperorigin revid 332351043,,
779,4a9e3d2bd858a7f2f2e876b6407819fb99ae0bad,ebecca Chen <rechen@google.com>, 2020-09-24 09:58:10 -0700,686, merge pull request 686 google focal switch travis build environment focal fossa,,
780,b47cbe11dc21652f5155fe497b4fa64118b547f7,ebecca Chen <rechen@google.com>, 2020-09-24 00:42:22 -0700,687, merge pull request 687 google log improve travis log ninja build failure,,
781,cd817e9af399add0dbf9010be5ce47f636c2bdb5,ebecca Chen <rechen@google.com>, 2020-09-23 23:36:06 -0700, , improve travis log ninja build failure already print test failure build failure cause test fail without even generating log still lead terse uninformative log remedy printing relevant line ninja.log,,
782,1982d50e228513e1940f5c7c517b00f813f1daca,ebecca Chen <rechen@google.com>, 2020-09-23 19:56:29 -0700, , switch travis build environment focal fossa previous cmake change worked fine locally failed travis tried pull srcs cc_library turn cmake version travis build environment quite old focal fossa nice modern modern need separately install python 3.6 3.7 need install 2.7,,
783,5c2836ee559e7ef17d269dc145d886270adff17e,ebecca Chen <rechen@google.com>, 2020-09-23 19:33:01 -0700,684, merge pull request 684 google fix cmake error triggered cc_library srcs,,
784,c1a3e3e6c3351d74c6b164e08a6d31c5a10ca842,ebecca Chen <rechen@google.com>, 2020-09-23 18:52:24 -0700, , fix cmake error triggered cc_library srcs srcs made cmake unhappy remove requirement srcs non empty specify linker language since cmake figure automatically .cc file,,
785,2f2a1483751171421490c352f05955655ea572fa,ebecca Chen <rechen@google.com>, 2020-09-18 00:55:29 -0700,678, merge pull request 678 google py38 declare python 3.8 support whoo add 3.9 testing matrix,,
786,2d224b2f576babf270349325a56d0052409b5365,ebecca Chen <rechen@google.com>, 2020-09-17 16:54:18 -0700, , declare python 3.8 support whoo add 3.9 testing matrix python 3.9 3.9 dev travis http travis ci.community python support 6703 flag manylinux python tag dropped 3.8 http github.com pypa manylinux blob master readme.rst manylinux2014 since trivial also silenced incorrect lint error show 3.9 value union unsubscriptable unsubscriptable object sometimes optional http github.com google pytype issue 440,,
787,b2cd0ca9d6396f519dbe4396462f3322e42e9219,ebecca Chen <rechen@google.com>, 2020-09-17 16:48:45 -0700,676, merge pull request 676 google google_sync google sync,,
788,76d8df9dc26e2a973b37c3a96a81fb60e12db1e8,echen <rechen@google.com>, 2020-09-17 14:55:31 -0700, , remove no_next flag end_async_for opcode test failing due end_async_for prematurely ending block honestly probably made mistake happen cancel given weird thing going hey test pas weirdness end_async_for doe no_next flag despite documentation saying may reraise exception end_async_for call_finally empty implementation setup_finally push two copy exception http github.com google pytype issue 440 piperorigin revid 332322752,,
789,917e9b1e99d96210400cd5b140b208dc6d477a1a,echen <rechen@google.com>, 2020-09-17 12:29:55 -0700, , respect typing reexports pyi parser previously respected typing import ignored typing import effect second pyi tried import exported name parse due found investigating http github.com python typeshed pull 4000 piperorigin revid 332290196,,
790,9ae9d92c156c267968a1d3313ad98ca7162d96c5,echen <rechen@google.com>, 2020-09-17 12:18:31 -0700, , make two test pas 3.8 vm_test opcode line number change 3.8 test_exceptions test dead block detection fails believe due bytecode change rather pytype bug four failure two test file http github.com google pytype issue 440 piperorigin revid 332287597,,
791,65ac5cc5e3cc127cdf4ecc4157ce107cd4d571cc,echen <rechen@google.com>, 2020-09-17 10:05:40 -0700, , support tuple slicing pytype handle thing like fix http github.com google pytype issue 473 startblock 2020 google mtv piperorigin revid 332257990,,
792,4b5912cecde2c87b615e8d681305a2b89d596b31,echen <rechen@google.com>, 2020-09-17 10:01:13 -0700, , fix bug involving multiple super call analyzing chain super call pytype would look wrong class multiple inheritance present piperorigin revid 332256929,,
793,1a03331c43e0820e26b1394946d276c5c481f4c0,ebecca Chen <rechen@google.com>, 2020-09-16 17:02:51 -0700,675, merge pull request 675 google google_sync google sync,,
794,d5993af72416a96725174b8d268ce0c223e5d787,echen <rechen@google.com>, 2020-09-16 15:44:04 -0700, , prepare pypi release piperorigin revid 332105347,,
795,9c5ef731b27df277be3ddb9a4668d7085347a3cd,demello <mdemello@google.com>, 2020-09-16 14:48:30 -0700, , port function signature code parser.py typed_ast parser also fix bug updating array node trace visitor.py fix function xref relying buggy behaviour right testing comparing output two parser add unit test typed ast parser complete finalised design piperorigin revid 332093271,,
796,8e6206eb7b66aae127c3f1216a0d7c6356eb8b86,echen <rechen@google.com>, 2020-09-16 10:51:30 -0700, , convert binding list cfg.py currently return different type depending whether using extension python implementation typegraph fix http github.com google pytype issue 669 piperorigin revid 332040477,,
797,c33ed27dd411437167d4be5c9d84c9501b066463,ebecca Chen <rechen@google.com>, 2020-09-16 14:28:04 -0700,674, merge pull request 674 google google_sync google sync,,
798,f71834cdb382556bd6062ff0ca18b183ccaea831,echen <rechen@google.com>, 2020-09-15 16:52:45 -0700, , crash processing pyi containing __all__ type checker rely actual value __all__ sometimes included pyi file pytype crashing due knowing process alias whose type literal list discovered investigating pytype failed http github.com python typeshed pull 4000 piperorigin revid 331886378,,
799,1a6d0b3481c7e5bfa9d53658282fb27081a4a74a,echen <rechen@google.com>, 2020-09-15 16:37:21 -0700, , call python ninja instead ninja see linked issue change allows pytype run without activating virtualenv installed http github.com google pytype issue 642 piperorigin revid 331883368,,
800,9078692144b3bb195b215d1f6991b405b9678421,echen <rechen@google.com>, 2020-09-15 15:02:22 -0700, , try another fix parser submodule import bug turn previous attempt broke code import collections.abc module import import object defined collections.pyi wrong assume import format submodules piperorigin revid 331863613,,
801,bc7154887f379825757de127ec398fba8a83876d,echen <rechen@google.com>, 2020-09-15 13:08:55 -0700, , fix vm_test failure 3.8 fix egregious failure vm_test dis.opmap setup_loop doe exist http github.com google pytype issue 440 piperorigin revid 331837381,,
802,e2a5a3fc59e95ae35eb6389db7172e564d6a664e,echen <rechen@google.com>, 2020-09-15 11:35:32 -0700, , remove longer necessary pytype disable piperorigin revid 331816233,,
803,c728b563bc3be775e264738026a0f83d18d8ec95,demello <mdemello@google.com>, 2020-09-14 16:41:39 -0700, , clean unused field vm.block piperorigin revid 331655926,,
804,686aa42ad905af14bd03bbb9bcb2afcf4865abd4,echen <rechen@google.com>, 2020-09-14 15:08:30 -0700, , fix parser bug importing exporting submodule load_pytd distinguishes name defined package __init__ file submodules based whether submodule name present __init__ break submodule exported name __init__ contains alias namedtype easiest fix create alias first place treating export name simple import debugging noticed bug handled renamed module incorrectly fixed well piperorigin revid 331637694,,
805,59ef8a2fc18a1ab433af197ce08b5bf24843c450,ebecca Chen <rechen@google.com>, 2020-09-16 13:55:53 -0700,673, merge pull request 673 google ninja switch fully pip installing ninja,,
806,489270b9920336bf14d4380d6d094989968f47b8,ebecca Chen <rechen@google.com>, 2020-09-15 17:15:50 -0700, , switch fully pip installing ninja http github.com google pytype issue 642,,
807,1ba0d20b0e7db625502f3d03776647fd91c7847c,ebecca Chen <rechen@google.com>, 2020-09-14 16:54:36 -0700,671, merge pull request 671 google linter enable python lint error,,
808,ee7c28621cebece534814c182ea845dd5c48ef9b,ebecca Chen <rechen@google.com>, 2020-09-14 16:07:06 -0700, , enable python lint error fix http github.com google pytype issue 656,,
809,553dd7c1b6308f64bf296b3d2ecacafdd513100d,ebecca Chen <rechen@google.com>, 2020-09-14 14:02:46 -0700,670, merge pull request 670 google google_sync google sync,,
810,e4703a989ac8c4cbc0510c776f9dd601c2f42bb0,echen <rechen@google.com>, 2020-09-14 13:32:06 -0700, , prepare pypi release piperorigin revid 331618002,,
811,b0fb2b28a3c34292ed9cd41f9670bebc97db1ffd,echen <rechen@google.com>, 2020-09-14 13:04:33 -0700, , fix raise missing pylint error http github.com google pytype issue 656 piperorigin revid 331612255,,
812,5f54f3a6965836d57d0e42ad16f5b3e59e0dd1e6,demello <mdemello@google.com>, 2020-09-14 12:38:00 -0700, , document block stack piperorigin revid 331606391,,
813,eaef425fe13fcd399a13c956f607b987beca35b3,echen <rechen@google.com>, 2020-09-14 12:26:55 -0700, , make sure doc date piperorigin revid 331603980,,
814,3de7c578f0cc120e4288d3c9432caaf505d2840a,sudol <tsudol@google.com>, 2020-09-14 11:34:16 -0700, , ensure github link used open source doc also remove backticks set unordered set section reason correctly copied code tag toc open source version piperorigin revid 331591845,,
815,07bd652a8a7a337aec96107705d8fd087cbfb7b3,sudol <tsudol@google.com>, 2020-09-11 16:52:17 -0700, , add program default data set developer doc piperorigin revid 331249691,,
816,82560f6cb56f2e970faf30ac013241e0805a9ce8,echen <rechen@google.com>, 2020-09-11 16:10:56 -0700, , add hint implementing bytecode change piperorigin revid 331242719,,
817,702b8c99d5151795e623965084e321c9c1c42821,echen <rechen@google.com>, 2020-09-11 16:00:25 -0700, , update faq tip pytype slow repeated tip time might well put faq piperorigin revid 331240749,,
818,66d160c7fb153a1b944ab4ccd503690ecb42938e,echen <rechen@google.com>, 2020-09-11 15:37:21 -0700, , support tuple check use slicing change pytype understand check like  still underestand check like  due slice value recorded http github.com google pytype issue 473 piperorigin revid 331236869,,
819,20ddebbbcce3ba46c1b211ad45d41daf5fc13df8,echen <rechen@google.com>, 2020-09-11 15:26:30 -0700, , fix bug caused wrong ordering setup_finally python version 3.8 setup_except setup_finally treated opcode ordering code block piperorigin revid 331234868,,
820,dfb85daf19783e9515b46181ab9d8517f129d6c0,echen <rechen@google.com>, 2020-09-11 14:26:09 -0700, , comparison related code cleanup slightly refactors compare.py add convenient alias compare_test modernizes bit test code syntax test_splits piperorigin revid 331222583,,
821,f47c027d5a2f47230435accafcdf4a127b940351,ebecca Chen <rechen@google.com>, 2020-09-11 10:58:29 -0700,668, merge pull request 668 google google_sync google sync,,
822,49996d85670ac0e4a78d3cc4cc32b1ab09b3f8e5,echen <rechen@google.com>, 2020-09-10 14:57:48 -0700, , fix variable annotation test python 3.8 change pass 3.8 adjusts directors.py handle opcode line number change flip order map_add pop data stack http github.com google pytype issue 440 piperorigin revid 331023641,,
823,73ce325ffa11a17b51e4856423c61bc77b641481,echen <rechen@google.com>, 2020-09-10 13:49:35 -0700, , add python 3.8 support change crash pytype 3.8 test gone handful normal failure left gone circle bit may notice reverted part couple earlier change given test much better state hopeful finally got thing correct one oddity setup_finally appears need push exception onto value stack twice consistent issue seeing crashing due rot_four one value rotate got idea push extra three value exception seeing cpython code doe http github.com python cpython blo python ceval.c l3736 appears happen 3.7 well could totally base http github.com google pytype issue 440 piperorigin revid 331009065,,
824,cf969bca963c56fabbf9cdc2ed39548c843979dc,ebecca Chen <rechen@google.com>, 2020-09-09 12:08:39 -0700,666, merge pull request 666 google google_sync google sync,,
825,4521f773f58e9504ea4ada359f2c91a33dee12ae,echen <rechen@google.com>, 2020-09-08 18:26:34 -0700, , print leaving directory ninja command ninja print entering directory directory doe actually change cause problem emacs user want keep ninja output since includes status update build easiest way fix print leaving directory fix http github.com google pytype issue 659 piperorigin revid 330629292,,
826,e16861749ca8737bbcee06361e26abcd9061ee09,demello <mdemello@google.com>, 2020-09-03 17:12:45 -0700, , replace internal iterator class like dictionary keyiterator iterator piperorigin revid 330023182,,
827,70046645f05d726e7af252f2f71a30551a548e6a,demello <mdemello@google.com>, 2020-09-02 19:27:55 -0700, , replace ... union ... pytd file also fix leftover def issue pytd file pas python parser except dictionary keyiterator friend piperorigin revid 329836304,,
828,1976e9891e8c8a4123455bcc32ed35833af41c0c,demello <mdemello@google.com>, 2020-09-02 17:26:59 -0700, , fix newline end file piperorigin revid 329821518,,
829,326266cb8a30c0ebc13d795001e6a27cbd2e44cb,demello <mdemello@google.com>, 2020-09-02 16:57:08 -0700, , fix python incompatible syntax pytd file  def ret def ret ... ... signature args kwargs piperorigin revid 329816286,,
830,ca96d09fa72e0cd2f04d2dc59c8fb85d5bcf3c4f,demello <mdemello@google.com>, 2020-09-02 14:16:07 -0700, , strip embedded copyright comment file also fix file empty line top leftover previous cleanup piperorigin revid 329786062,,
831,b0e4285c43acd02cb1e2fb9df730107e714bfcba,echen <rechen@google.com>, 2020-09-02 13:49:02 -0700, , require typing import map python 3.5 piperorigin revid 329780486,,
832,256dfb2bb3dfb189eb328917ba5f5d2982e36d73,ebecca Chen <rechen@google.com>, 2020-09-02 14:12:50 -0700,663, merge pull request 663 google google_sync google sync,,
833,ccc74c4e94970778df87b2220c0ac025dda6e0e4,demello <mdemello@google.com>, 2020-09-02 12:25:20 -0700, , run py2and3 py3 script fix breakage script reverted test testdata path since script converting code within string fixed one buggy conversion function.py six.viewkeys dict set changed dict set rather dict.keys set fixed random lint error touched code fixed case file left starting blank line gave piperorigin revid 329763944,,
834,a5681c2b35e482e8fe7c64f5937f58dedc4cd014,echen <rechen@google.com>, 2020-09-02 12:04:26 -0700, , fix setup_finally bug python 3.8 3.8 setup_except removed setup_finally doe job setup_except old setup_finally figure call based whether opcode target except finally block since opcode refers block orderedcode maintains block dictionary rather list block http github.com google pytype issue 440 piperorigin revid 329759870,,
835,2273e5389b4b15845882ff9e8b3af3e542c7ef7e,demello <mdemello@google.com>, 2020-09-01 14:51:26 -0700, , fix python syntax error typing.pytd piperorigin revid 329586772,,
836,ce8b352fa3b5479550742b06fbfaa6c83e4c399d,echen <rechen@google.com>, 2020-09-01 11:59:11 -0700, , add section abstract_values matcher.py piperorigin revid 329552645,,
837,009cad93690ff69272bd2b862555e3e0611860ab,sudol <tsudol@google.com>, 2020-08-31 12:00:23 -0700, , add progress developer doc typegraph internals piperorigin revid 329348858,,
838,fbbeea14b4d96a59c3ddc797fc564d87c1df6c27,echen <rechen@google.com>, 2020-08-29 02:27:48 -0700, , quick cleanup fix typo mark code snippet python piperorigin revid 329078363,,
839,c17482a5af7bf97c9f2446919729a19345f6d7af,echen <rechen@google.com>, 2020-08-28 15:24:06 -0700, , update load_pytd diagram piperorigin revid 329019842,,
840,1a4e2d5dacc988b5fea8a5480007874c1f1f5b19,echen <rechen@google.com>, 2020-08-28 13:38:08 -0700, , pas around used place builtins.open add open_function option config.options set drop replacement builtins.open used everywhere pytype read writes filepath provided user added couple spot test open_function used various place test exhaustively piperorigin revid 329000803,,
841,189dede453bd78b81b6fd1b760ac8ecc275dd228,echen <rechen@google.com>, 2020-08-28 13:24:08 -0700, , raise error passed unrecognized option piperorigin revid 328998408,,
842,816954e42da3adbd0aac876e012dbbf2a829e5cd,echen <rechen@google.com>, 2020-08-28 13:12:34 -0700, , distinguish carefully command line library option config.options object used parse store command line library option mattered two set option like add library option ability replace builtins.open custom open function change command line utility expected construct option object option argv command_line true library expected use options.create input_filename option piperorigin revid 328996421,,
843,25c27c1e6b83aa91b6594c9462be677e4bfb473d,echen <rechen@google.com>, 2020-08-28 13:04:44 -0700, , check_py generate_pyi accept source string instead filename make flexible since caller filename always read file pas source would inconvenient caller source string create file piperorigin revid 328995003,,
844,9ec2625143a68a87b8c1f6e873dbfe80f4acaca8,echen <rechen@google.com>, 2020-08-28 12:53:56 -0700, , update readme requirement section piperorigin revid 328992904,,
845,288c973108a9c97c76bd1a8452a5e3f4f9ed065a,echen <rechen@google.com>, 2020-08-28 12:49:34 -0700, , drop python_exe option came across old todo bug reference long closed piperorigin revid 328992098,,
846,e014db05580f051d5f08b6ce8535a1e56f85c3a8,echen <rechen@google.com>, 2020-08-28 12:41:21 -0700, , cleanup delete code used class python use stdlib piperorigin revid 328990514,,
847,3c7a3a0142bd5877ac34ec828c740450fb3d7822,ebecca Chen <rechen@google.com>, 2020-08-28 12:33:37 -0700,660, merge pull request 660 google google_sync google sync,,
848,c8bbde93d4248c5b023cfcf940249e7c862b0e5b,echen <rechen@google.com>, 2020-08-28 12:04:55 -0700, , prepare pypi release build failure table look good might well set release piperorigin revid 328983682,,
849,8c85603de83470b2725aeeba068ff7f7f72ca181,ytype Team <pytype@googlegroups.com>, 2020-08-27 11:35:30 -0700, , small refactoring parser.py patch read file cns want run pytype generating pyi file tree cns work known historical snapshot generated pyi file snapshot keep forever least change code built python open read cns patch read function use gfile.open drop replacement like  piperorigin revid 328780052,,
850,dcebc4af6875f199c10f390b18edd5ef37c990ec,ebecca Chen <rechen@google.com>, 2020-08-28 11:50:17 -0700,658, merge pull request 658 google google_sync google sync,,
851,e63f511940719be9d4c82181274736e6cefb9b8a,echen <rechen@google.com>, 2020-08-26 17:06:48 -0700, , clean bunch lint error http github.com google pytype issue 656 leave due still one py2 rdep maybe piperorigin revid 328639524,,
852,0a40a887c45826f14e4f83efd2d853c3a40b2ecb,demello <mdemello@google.com>, 2020-08-24 14:17:28 -0700, , document data stack piperorigin revid 328208540,,
853,7628a7e9248fd60880722ccbe84fb198f83590b3,echen <rechen@google.com>, 2020-08-24 12:07:01 -0700, , clean doc organization bit add instruction adding doc entirely confident relative image reference work github.io site hurt try also added missing line break dev_guide.html tempted call updating developer guide section dev guide guide instead piperorigin revid 328184996,,
854,8677da878b1b1eecebbdb9f7caf62bf6194d1d86,echen <rechen@google.com>, 2020-08-21 17:13:51 -0700, , check load_pytd.svg piperorigin revid 327900098,,
855,53be821c54829f11d66c6104b71f21e3bdb3d3a2,echen <rechen@google.com>, 2020-08-21 17:02:59 -0700, , add diagram load_pytd png tried svg first none text label rendered clue export issue rendering issue piperorigin revid 327898790,,
856,3efc42c584ec3fcc4281b77d6a27ed5d08d81d0c,echen <rechen@google.com>, 2020-08-21 12:18:39 -0700, , allow multiple pytdfunction signature match args kwargs present noticed trying switch overlay literal overload opaque args kwargs present match first overload allowing multiple match piperorigin revid 327852763,,
857,80e95781dda427e3dd273f6ff948f13466525341,ebecca Chen <rechen@google.com>, 2020-08-26 16:48:57 -0700,657, merge pull request 657 google lint clean lint error,,
858,af85939703bc07b21acf59c04fe8e2cb62a9e9ee,ebecca Chen <rechen@google.com>, 2020-08-26 16:10:20 -0700, , clean lint error disable three new error extension member seem useful super argument raise missing ready assume python build_scripts py3 fixed instance super argument http github.com google pytype issue 656,,
859,f22ef2b4e535915a2a25d001f7e62a2966cd104e,ebecca Chen <rechen@google.com>, 2020-08-20 18:12:13 -0700,649, merge pull request 649 google google_sync google sync,,
860,381a74c8dfebf604cc7e8d44436925d8835e4007,echen <rechen@google.com>, 2020-08-20 13:02:08 -0700, , fix test broken python 3.8 test broken opcode line number changed 3.8 additionally 3.8 test test_decorators running target python skip method check host version since py2 test one host target simply moved test rather attempting fix skip logic 440 piperorigin revid 327682525,,
861,2d85858cae13a524f41db28547980355f6ac9429,demello <mdemello@google.com>, 2020-08-19 13:50:57 -0700, , convert decorator namedtypes external name get qualified piperorigin revid 327499977,,
862,cc89de3471286ea783fdfb798a65c3fb23d05992,demello <mdemello@google.com>, 2020-08-18 16:38:04 -0700, , add check method decorator like property used class also fix broken test piperorigin revid 327332463,,
863,6b899bff28230017368f184494ff836ddcca9897,ebecca Chen <rechen@google.com>, 2020-08-17 17:52:05 -0700,647, merge pull request 647 google google_sync support typeddict function based syntax pyi file,,
864,0b036d97b963fd0ebca7dc82eacd13518fb811c1,echen <rechen@google.com>, 2020-08-17 17:16:32 -0700, , support typeddict function based syntax pyi file since support typeddict yet parser simply rewrite typeddict dict str fix http github.com google pytype issue 637 piperorigin revid 327131566,,
865,ccaf6f7e34d6535fc72b524cde4295bffd588ff1,ebecca Chen <rechen@google.com>, 2020-08-17 15:09:16 -0700,646, merge pull request 646 google google_sync google sync,,
866,64bfc2eb87cceec6c1a93f3bfa938e6561520a08,echen <rechen@google.com>, 2020-08-17 14:00:26 -0700, , use googletest.skip avoid duplicate unittest import otherwise import unittest twice parser.py second one coming copybara rewrite googletest leading lint error piperorigin revid 327093560,,
867,451657bedf3b8bbf9dc04ca79022a51c3d2aecf6,demello <mdemello@google.com>, 2020-08-17 13:35:47 -0700, , start documenting frame frame stack piperorigin revid 327088390,,
868,7eccf5dbb19570c5cc06240905a7c9927447b9df,echen <rechen@google.com>, 2020-08-17 13:18:33 -0700, , prepare pypi release release pyi parser fix piperorigin revid 327084848,,
869,365023a1a4307d5e7a0c06dee663d3a1e3278423,echen <rechen@google.com>, 2020-08-17 12:46:53 -0700, , allow type ignore place pyi file linked issue alias also added support type ignore __slots__ definition fix http github.com google pytype issue 644 piperorigin revid 327078292,,
870,264012bd1dc08a3fa59cc3910bcb3de6c67eac93,echen <rechen@google.com>, 2020-08-14 20:33:56 -0700, , write remaining section type_stubs piperorigin revid 326775582,,
871,629aa68504a92647639946f80e6a31e25451310b,echen <rechen@google.com>, 2020-08-14 12:58:09 -0700, , copy call_function opcode flag call_method find documentation flag call_function call_method similar enough seems reasonable flag fix following 3.7 bug class whose initializer set attribute none attribute used another method called set true non none value pytype hit maximum call depth skip method think attribute value still none check filter none value avoiding spurious error 3.7 fails filter none method called via call_method rather call_function call_method different flag cause method evaluate false leading pytype failing add extra node cfg method called mess reachability query piperorigin revid 326713243,,
872,aedd9a92996ce7c3ba5cdb5c3a249682aa9bbfdd,demello <mdemello@google.com>, 2020-08-12 18:31:56 -0700, , preserve class decorator reading writing pyi file drop type_check_only preserve existing behaviour silently ignores decorator piperorigin revid 326357555,,
873,60728773a2ec32547bfbbabf8733b768eab87533,echen <rechen@google.com>, 2020-08-11 12:34:31 -0700, , enable yet check variable type default already cleaned new finding generated change piperorigin revid 326078090,,
874,c8153d9f89c815f8656b3620e52d33be5aade2cc,echen <rechen@google.com>, 2020-08-10 14:31:44 -0700, , reorder str.join overload better error message pytype get expected type error message function first overload iterable nothing produce confusing message iterable str much better piperorigin revid 325888614,,
875,e73fb38f0304c5fe843d7e29dc279d23fbf05692,demello <mdemello@google.com>, 2020-08-10 13:30:32 -0700, , document bytecode opcodes pipeline piperorigin revid 325876145,,
876,0206bf70c0ebc6e2ab3db12e35045aa05ff0ae02,ebecca Chen <rechen@google.com>, 2020-08-10 12:39:00 -0700,643, merge pull request 643 google google_sync google sync,,
877,085b2fb8fdaa45d109358a4a5d409a37ef82302e,echen <rechen@google.com>, 2020-08-10 12:02:02 -0700, , prepare pypi release might well release since clean version piperorigin revid 325856623,,
878,329b89fb6add85e55e06fa1ac6f3e442ac72c085,echen <rechen@google.com>, 2020-08-08 21:40:02 -0700, , write import parser section type_stubs doc piperorigin revid 325647909,,
879,92d2d63f437de7e5e2f4906e1af46b162c8c909b,echen <rechen@google.com>, 2020-08-07 13:48:18 -0700, , start developer type_stubs add type_stubs doc outline filled introduction piperorigin revid 325501011,,
880,80f9eeaf7744d605b0bcb24622fc0a24b00118bb,echen <rechen@google.com>, 2020-08-07 12:40:41 -0700, , slightly anal cleanup use consistent capitalization dev doc piperorigin revid 325487950,,
881,3f54dc541c6d5ea185d271bafc956f7dc21b4ce9,demello <mdemello@google.com>, 2020-08-06 12:11:48 -0700, , support kw_only arg attr.ib piperorigin revid 325281694,,
882,9a609eb56991f385dc1f23c8e9f52e5a38550e5a,demello <mdemello@google.com>, 2020-08-05 12:29:08 -0700, , add developer doc director.py piperorigin revid 325076471,,
883,2d8c8960ce8621c9c3d883d44eb3fc219355bd2b,ebecca Chen <rechen@google.com>, 2020-08-04 15:08:00 -0700,639, merge pull request 639 google google_sync google sync,,
884,6401b36ba24a8736010a31f444ab755d110d71a0,echen <rechen@google.com>, 2020-08-04 14:32:56 -0700, , entering callabletype tupletype increase generic level piperorigin revid 324891454,,
885,d0b736a8dafd6e45aa36bba0d104e17f5a106dcd,echen <rechen@google.com>, 2020-08-03 14:33:13 -0700, , fix weird bug involving calling __getitem__ union support union type macro caused bizarre bug union.set_slot __getitem__ call getattribute union __getitem__ creating extra node causing tuple annotation containing forward referenced imported type evaluated wrong node leading generation extra late annotation imported module finally producing invalid type annotation instance module type error place pb2 enum annotation since always quoted resolved special casing attribute.py extra node generated also noticed type macro produced corner case calling __getitem__ union option value annotated type union ... annotation union type type ... inferred type still correct imprecise documented behavior test rather trying fix piperorigin revid 324684760,,
886,c4c06a95b0e98b18a57887575b0b6241197f9117,demello <mdemello@google.com>, 2020-08-03 11:12:13 -0700, , fix crash nested namedtuple subclass hit max depth piperorigin revid 324641138,,
887,1889ee043e96de1ecd0be677f135acc705fbcedd,demello <mdemello@google.com>, 2020-07-31 15:10:34 -0700, , support alias union type parameter currently work within file following code foo union list foo int generated pyi code contain foo union int list int concrete instantiation alias correctly used exported alias exported piperorigin revid 324293324,,
888,e2d73f1e0be6f1c6a22f040e785e5e2e348d0cf5,ebecca Chen <rechen@google.com>, 2020-07-30 17:08:36 -0700,636, merge pull request 636 google google_sync pypi release,,
889,15a88d2177216acc1e09466fb2e3cd660e09b11e,echen <rechen@google.com>, 2020-07-30 16:14:58 -0700, , pypi release yet another pyi parser fix http github.com google pytype issue 626 piperorigin revid 324104646,,
890,75e64fb93cbcb19d8e362590fed7a522b0e9c755,ebecca Chen <rechen@google.com>, 2020-07-30 16:03:52 -0700,635, merge pull request 635 google google_sync raising supported yet alias union ... set typeâ,,
891,7f0b940b52047dc9d23fdc6801a27e5a676b2f30,demello <mdemello@google.com>, 2020-07-29 14:01:06 -0700, , raising supported yet alias union ... set type allows following alias union int alias float raise error alias defined used piperorigin revid 323862871,,
892,95e5e8fd2e5799ab1950ab2e5720be0eecf8910a,ebecca Chen <rechen@google.com>, 2020-07-29 15:16:21 -0700,633, merge pull request 633 google google_sync make work custom tmpdir value,,
893,d291a250fbff67f6ab86fc8d8c20b28be22148ae,echen <rechen@google.com>, 2020-07-29 13:23:12 -0700, , make work custom tmpdir value fix http github.com google pytype issue 629 piperorigin revid 323855323,,
894,b5ca345770533656b62a3f739091877642c4cb57,ebecca Chen <rechen@google.com>, 2020-07-29 12:25:40 -0700,632, merge pull request 632 google google_sync google sync,,
895,c8676809381f156686ada1bab2df9029f266dacb,ebecca Chen <rechen@google.com>, 2020-07-29 11:54:32 -0700, , move test containing parameter annotation test test py3 piperorigin revid 323835475,,
896,e2700f19c5a7aa92cc337d7fc92e8c673a7f1728,echen <rechen@google.com>, 2020-07-29 10:45:09 -0700, , support imported type macro pyi file previously pytype crashed type macro used outside file defined http github.com google pytype issue 626 piperorigin revid 323819758,,
897,ceeb07fa5ef4f19363441a8ebb6da28f6a435825,demello <mdemello@google.com>, 2020-07-28 18:34:36 -0700, , fix occasionally reusing exhausted generator union constructor piperorigin revid 323697283,,
898,44479701bcdab87be218d3aea3709ac0ca2d1fd9,ytype Team <pytype@googlegroups.com>, 2020-07-28 15:14:20 -0700, , automated rollback changelist 323639433 reason rollback breaking abuse logica pod_pools go_lampreys original change description preserve class decorator reading writing pyi file drop type_check_only preserve existing behaviour silently ignores decorator  piperorigin revid 323663791,,
899,d69ee04e612f9d3a3703c00443b0187b4943c2ff,demello <mdemello@google.com>, 2020-07-28 13:18:21 -0700, , preserve class decorator reading writing pyi file drop type_check_only preserve existing behaviour silently ignores decorator piperorigin revid 323639433,,
900,09d6e265ced8610c337c228bfde00699027de60c,echen <rechen@google.com>, 2020-07-27 17:25:21 -0700, , fix allow typing.anystr used parameterize custom generic class previously trying caused pytype crash piperorigin revid 323475858,,
901,b1f27ecaa005e2d15f4dec20dd2b5b2d74087218,ebecca Chen <rechen@google.com>, 2020-07-24 15:15:17 -0700,627, merge pull request 627 google google_sync google sync,,
902,35f4e51475b84bf6921c137b8f3eacf5aca4714f,echen <rechen@google.com>, 2020-07-24 14:39:59 -0700, , pypi release pyi parser fix piperorigin revid 323074844,,
903,52b56781500b56eb2d484093f9ed249090a88a64,echen <rechen@google.com>, 2020-07-24 13:25:45 -0700, , pyi parser allow alias inside class value outside class resolve properly reason people trying use lot typeshed recently let set alias 612 piperorigin revid 323060647,,
904,b4e6142fdc1eada133938b3dd4f5766631f2c5a2,echen <rechen@google.com>, 2020-07-23 19:44:27 -0700, , fix copy annotation instead modifying adding scope fix bug type alias containing type parameter used generic class generic function would scope changed messing type parameter count use report appears signature invalid annotation error piperorigin revid 322919782,,
905,4750f7dab082d463df909024211efedfb7b632b4,echen <rechen@google.com>, 2020-07-23 09:54:35 -0700, , fix typo pytype slot clot piperorigin revid 322806644,,
906,e3e63776baad9f7568c2d8c16617fb2d593e1103,ytype Team <pytype@googlegroups.com>, 2020-07-22 10:12:24 -0700, , add function def annotate_ast.py piperorigin revid 322599520,,
907,b774ae4c4b25e808835c8e2f0681a8b1889e3c8a,ytype Team <pytype@googlegroups.com>, 2020-07-22 10:11:39 -0700, , simplify assertion logic piperorigin revid 322599333,,
908,61820fc0e313a7c2890dcff0fd8e1af8ddf554a3,echen <rechen@google.com>, 2020-07-21 13:25:26 -0700, , fix make self.__class__ return __init__ previously made type self return __init__ avoid spurious error class non instantiable copy workaround __class__ piperorigin revid 322429519,,
909,de46258ff1b9de64ef9804a5aefb67f86061b3aa,echen <rechen@google.com>, 2020-07-21 13:24:58 -0700, , fix change state node new node managed cause lot crash filtering fix yesterday piperorigin revid 322429418,,
910,5b4c21ec22754e7a2cad4c4f4bfd5c65c654af76,echen <rechen@google.com>, 2020-07-20 14:19:22 -0700, , fix check object visibility setting attribute also deletes obsolete test happened notice piperorigin revid 322223756,,
911,dc1f04d836a8feb41458eba84d0d05d1726851ed,ebecca Chen <rechen@google.com>, 2020-07-20 20:28:12 -0700,625, merge pull request 625 google docker remove longer necessary docker installation step,,
912,3ee2cacbe9bb26cad39c22d4996338f349a98636,ebecca Chen <rechen@google.com>, 2020-07-20 18:24:32 -0700, , remove longer necessary docker installation step,,
913,c0f4fd2a6f45896226d7d4931f69f61d86e5a5ca,ebecca Chen <rechen@google.com>, 2020-07-20 14:30:18 -0700,624, merge pull request 624 google google_sync google sync,,
914,6b463ad7dd7291e7467c37954c04c39515fd62bd,echen <rechen@google.com>, 2020-07-20 13:57:44 -0700, , prepare another pypi release like release pyi parser fix order remove file typeshed pytype exclude list piperorigin revid 322219322,,
915,38a9ade373dc814d440f9db124f06fe087b3b7bb,echen <rechen@google.com>, 2020-07-15 17:10:52 -0700, , add trivial readme trace piperorigin revid 321468598,,
916,c59a6a68713552c6c49957468bacd9550808c7ec,echen <rechen@google.com>, 2020-07-15 12:14:35 -0700, , pyi parser allow total false previous change actually fix pytype bug trying fix typeshed rather 613 piperorigin revid 321412207,,
917,2432f595d07d3a00ed15a49b516883044de0a03c,echen <rechen@google.com>, 2020-07-15 09:24:57 -0700, , remove duplicate dict.update overload piperorigin revid 321374726,,
918,1264ba38151d99a8b1353b6e9e032eb256ebf0b3,ebecca Chen <rechen@google.com>, 2020-07-15 11:50:40 -0700,621, merge pull request 621 google travis add job auto travis script pytype run,,
919,db7a605fb87ac51476853ac45d48ddc46e012db9,ebecca Chen <rechen@google.com>, 2020-07-14 19:20:09 -0700, , add job auto travis script pytype run least locally make pytype run lot faster,,
920,db2fcbc3a450156d1780309de48e02caa5bf4411,ebecca Chen <rechen@google.com>, 2020-07-14 18:49:42 -0700, , add new 3.8 needed use typeshed 3.8 stub refer supportsindex github 440 originally 321253731 manually exported,,
921,5187e3e90208ff1e415627f79207cec3591d2f43,ebecca Chen <rechen@google.com>, 2020-07-14 18:49:22 -0700, , add overload dict.update stop crashing args passed also make annotation dict.update overload consistent originally 321243130 manually exported,,
922,aceef82d534b49e6cc3f9eb21eef7cc8e4dbf428,ebecca Chen <rechen@google.com>, 2020-07-14 17:58:43 -0700,620, merge pull request 620 google google_sync google sync,,
923,01d3bbb6187c4f001765ec18beed6acf42c3e981,ebecca Chen <rechen@google.com>, 2020-07-14 17:29:20 -0700, , fix xref bug method detected attribute 3.7 exposed recent change added attribute matching annotate_ast broke github export piperorigin revid 321267019,,
924,11700264a6157185cffb84d449ddaf09e00b1de0,echen <rechen@google.com>, 2020-07-14 14:49:05 -0700, , internal change piperorigin revid 321239884,,
925,13acae0763855940f50118def50ef13df17c6e15,echen <rechen@google.com>, 2020-07-14 14:35:13 -0700, , update pytype __version__ changelog pypi release ran tgp found new finding head look reasonable glance timeouts ooms piperorigin revid 321237176,,
926,01c2a5ad27d5a371787c912c5031f90bf3d6b235,demello <mdemello@google.com>, 2020-07-10 14:28:12 -0700, , start documenting abstract.py abstract value system piperorigin revid 320676553,,
927,ce1149cfe4254ad847ff05f49b53cffdd8423af9,echen <rechen@google.com>, 2020-07-10 13:38:10 -0700, , fix compare unresolved late annotation using expression previously compared using type unresolved annotation always unsolvable check like lateannotation expr type none lateannotation expr type none would incorrectly succeed piperorigin revid 320666829,,
928,545ae5c1691e93b819192b37f671542e679f9239,echen <rechen@google.com>, 2020-07-09 18:42:59 -0700, , fix spurious error caused calling get_class without fix pytype report invalid typevar trying call foo.foo calling .items ordereddict str foo produce tuples first argument foo end .get_class instead resolve immediately piperorigin revid 320523343,,
929,25f2f18dd17fa87e504be34bc1e7012588546e5a,echen <rechen@google.com>, 2020-07-09 18:41:40 -0700, , hide new behavior behind check attribute type two change generate new finding expected hide behind flag clean pytype head piperorigin revid 320523068,,
930,f5d94cd9987b7ffe05fe93922c43e74c4be57d1c,echen <rechen@google.com>, 2020-07-09 18:24:07 -0700, , add missing file mode builtins.open piperorigin revid 320515581,,
931,dc445e095f443627894453c67491843d50787ce8,ytype Team <pytype@googlegroups.com>, 2020-07-09 09:52:39 -0700, , internal change piperorigin revid 320416259,,
932,9db32fb42014ea47883a22514593eb265163e449,ebecca Chen <rechen@google.com>, 2020-07-08 16:39:18 -0700,618, merge pull request 618 google google_sync google sync,,
933,3a1f73aa12543f52386bb276b4246672d0917fb6,echen <rechen@google.com>, 2020-07-08 16:03:41 -0700, , add fix opcodes python 3.8 based http docs.python.org library dis.html ran opensource test 3.8 fixed crash http github.com google pytype issue 440 piperorigin revid 320284609,,
934,45f3b6067c22a55351da039629c7406b98c5cf62,echen <rechen@google.com>, 2020-07-01 15:12:35 -0700, , copy relevant part http github.com google pytype pull 593 piperorigin revid 319305380,,
935,255d1166a1c4378d3fd7ff1c5568a60cbf6d024f,echen <rechen@google.com>, 2020-07-01 11:12:10 -0700, , make behavior io.open match builtins.open io.open alias builtins.open pytype treating differently builtins.open implemented using overlay turn overlay needed pytype would incorrectly match constant literal non literal annotation change improves pytype literal matching allowing remove overlay fix buggy behavior io.open piperorigin revid 319260037,,
936,84dfd93bfba8510d4002caab06fdd4fa1ae6a613,sudol <tsudol@google.com>, 2020-06-30 14:49:25 -0700, , make reversible note add bit weirdness typeshed typing member alias collection member pytype take opposite approach make reversible fine added 3.7 piperorigin revid 319103569,,
937,d10c4abff4be6cc0d5694d1683c3c5c325ea84c1,ebecca Chen <rechen@google.com>, 2020-07-01 15:07:04 -0700,593, merge pull request 593 bsolomon1124 wheel wheel,,
938,5f975acd608e850d0897890267b7b1930a908577,ebecca Chen <rechen@google.com>, 2020-06-29 17:18:58 -0700,614, merge pull request 614 google google_sync google sync,,
939,5786fae5565114538bb3c4714819ec2a9726d98e,echen <rechen@google.com>, 2020-06-29 16:40:37 -0700, , pyi parser allow total keyword subclass typeddict http github.com google pytype issue 613 piperorigin revid 318919337,,
940,4acb36448baa17d94c5051be9aff805edfea4c4e,echen <rechen@google.com>, 2020-06-29 12:05:10 -0700, , fix crash none set none late annotation evaluated accidentally add late annotation never evaluated mean whenever attribute accessed none check needed piperorigin revid 318863903,,
941,18cdaea8fbe9c98ff502e9c9488449eeb9a5e43f,lebedev <slebedev@google.com>, 2020-06-27 00:07:11 -0700, , fixed edge case pytype indexer piperorigin revid 318602067,,
942,9f1af77f9223af3ad5a386f8ae6763b512f7e696,echen <rechen@google.com>, 2020-06-26 15:30:29 -0700, , log supported yet soon recursive type alias defined union object annotation regular runtime object thus process soon stored catching issue recursive alias definition time rather usage time piperorigin revid 318555214,,
943,c477819b23cad3287a0bad4871aa140409e60c73,echen <rechen@google.com>, 2020-06-26 15:22:54 -0700, , add mixin working improvement type alias noticed many method iterate  union.options added common interface piperorigin revid 318554046,,
944,bc068681dba92489e883b926b00618cf348ebfb6,echen <rechen@google.com>, 2020-06-26 15:16:22 -0700, , partial rollback changelist 318522426 reason rollback pypi release revert temporary change made release original change description pypi release parser fix http github.com google pytype issue 608 fixed pyi parser issue two week ago need release typeshed use fix feel confident releasing head many finding click check new crash obvious bug etc plan temporarily roll back change generates vast majority new finding release pypi reapply change  piperorigin revid 318553012,,
945,e9ff94330c567703a6281671607f85c7b35a65ee,ebecca Chen <rechen@google.com>, 2020-06-26 13:39:59 -0700,609, merge pull request 609 google google_sync google sync,,
946,f3f5f04df6bdd771c842eb1eaaa2464867ee6d91,ebecca Chen <rechen@google.com>, 2020-06-26 12:50:52 -0700, , fix changelog date derped put june instead june piperorigin revid 318525801,,
947,d477f91cbca6614fad3f8ae12f961df3e92519cb,echen <rechen@google.com>, 2020-06-26 12:31:28 -0700, , pypi release parser fix http github.com google pytype issue 608 fixed pyi parser issue two week ago need release typeshed use fix feel confident releasing head many finding click check new crash obvious bug etc plan temporarily roll back change generates vast majority new finding release pypi reapply change piperorigin revid 318522426,,
948,a35c05fc5a999f432cd76d02dc52e716531569ce,echen <rechen@google.com>, 2020-06-25 18:28:21 -0700, , fix crash object without default piperorigin revid 318389448,,
949,819c7c10d10f1d6def7be533705b053f9d616c55,echen <rechen@google.com>, 2020-06-25 13:05:54 -0700, , fix choke instance attribute annotated multiple time tgp turned code doe thing like class foo def __init__ self self.x type list def reset self self.x type list due weirdness around hashing parameterized class store two binding annotation leading spurious must constant error later fixed ignoring second annotation piperorigin revid 318332546,,
950,7f6df736352f84d8648d96127ca227d4ccdc7b64,ebecca Chen <rechen@google.com>, 2020-06-23 15:25:10 -0700,607, merge pull request 607 google google_sync google sync,,
951,a26daae9400b18d8d6161329777a0bb4089b1df7,echen <rechen@google.com>, 2020-06-23 12:58:16 -0700, , fix python 3.5 travis test failure piperorigin revid 317925038,,
952,274cb2748224dd4a37e4d3ae1c6a18bd06fa3894,ukas Geiger <lgeiger@users.noreply.github.com>, 2020-06-23 12:57:07 -0700,605, autodetect number job job auto 605 add possibility autodetect number job based number available cpu core host system using pytype job auto allows usage similar pytest xdist http github.com pytest dev pytest xdist speed test run sending test multiple cpu useful using pytype script might run different system resolve 605 piperorigin revid 317924811,,
953,28a24270f3756f8586bf9e656e5ddec3c162fbef,ukas Geiger <lgeiger@users.noreply.github.com>, 2020-06-22 11:44:38 -0700,604, replace list comprehension generator expresion calling 604 allows return early without needing iterate entire list resolve 604 piperorigin revid 317701319,,
954,5e4f3cd35deaa354c2577a9e4f2c5fd4fb6dc2c9,echen <rechen@google.com>, 2020-06-18 17:47:02 -0700, , type check assignment annotated function parameter name little different 113372317 asks spirit allow def int 0.0 ... would allow def int 0.0 plus enforcing annotation strictly everywhere else would confusing lenient piperorigin revid 317218197,,
955,c03b1c6f1a5c1d5d0011d190840bb94d8a4fcd96,echen <rechen@google.com>, 2020-06-18 17:35:16 -0700, , type check parameter default annotation feature hidden behind yet another flag check parameter type also bit cleanup removed unnecessary lint version directive extraneous argument super call fixed method signature matched superclass signature changed check existence annotation precise check existence parameter annotation piperorigin revid 317216325,,
956,7c6b3e20ee941aefc76529e42de696cd0696747b,lebedev <slebedev@google.com>, 2020-06-18 12:30:30 -0700, , allowed importing symbol module example sys import path correctly reference sys.path piperorigin revid 317157234,,
957,350d2d784b289e1c56fc732507dbc7e70e3c2731,lebedev <slebedev@google.com>, 2020-06-18 12:29:14 -0700, , first step towards better import support xref imported name create binding aliased alias subkind import connected imported name definition via alias edge imported name connected corresponding definition via ref import edge see testdata imports.py example note import currently restricted submodules importing anything else e.g sys import version doe produce ref another limitation subpackages import foo.bar.boo  foo.bar import boo produce ref neither foo foo.bar piperorigin revid 317156912,,
958,91d274c9c903f2c35f07ff5457621ff56a3716f5,demello <mdemello@google.com>, 2020-06-17 19:55:56 -0700, , display type dataclass fieldinstance correctly piperorigin revid 317018641,,
959,e43c0c1f1e98a3610c45b17b1d1b94bf0789443e,echen <rechen@google.com>, 2020-06-17 17:48:23 -0700, , dedup type annotation using opcodes piperorigin revid 317002471,,
960,c99fe8b816c110ef00b80441157b7d86f450a21b,echen <rechen@google.com>, 2020-06-16 16:08:43 -0700, , finish implementation check attribute type make annotation always take precedence inferred type stub store annotation declared instance attribute allows type checking annotation declared __init__ __new__ piperorigin revid 316777060,,
961,cfb0f73be339c88a5c51361ac4e030a40a3abeda,demello <mdemello@google.com>, 2020-06-16 13:55:23 -0700, , clean todos test piperorigin revid 316751830,,
962,9d943a7bc76e2cc229476f59c71706a1aef241cb,sudol <tsudol@google.com>, 2020-06-16 13:08:25 -0700, , change todos point bug piperorigin revid 316742617,,
963,64430c2bd6eb5ea44947019b16534512c2fb56be,sudol <tsudol@google.com>, 2020-06-16 12:02:50 -0700, , add python test vararg annotation piperorigin revid 316729481,,
964,93220f05dfbf7b9e21994aae9a6b0cbd93b5479c,demello <mdemello@google.com>, 2020-06-15 19:11:42 -0700, , convert test todos bug also added two relatively complex example bug suppressed warning unused dep import annoying remember readd every time want test bug dependency piperorigin revid 316593129,,
965,02f36ea59963fbf6304cdde1e381c678c95a0c11,sudol <tsudol@google.com>, 2020-06-15 17:20:23 -0700, , clean todos typegraph code piperorigin revid 316578057,,
966,228095bfdd8544f97a78e3593a435288fc040bdc,echen <rechen@google.com>, 2020-06-15 17:20:04 -0700, , clean todos visitors.py piperorigin revid 316578011,,
967,7f7e314b62c5e4a2c55860e24ece6885b1cb1f40,sudol <tsudol@google.com>, 2020-06-15 16:08:54 -0700, , add bug todo piperorigin revid 316565368,,
968,9c7725b0d3b22033831330f9b177014a242a5eea,echen <rechen@google.com>, 2020-06-15 16:08:44 -0700, , resolve todos pytype pyi resolved todo keep one copy pytd typeshed_test pyi deleting latter based file history pytd typeshed_test one actively maintained removed todos likely worth especially since want eventually replace parser piperorigin revid 316565341,,
969,d66ada59705470f5cc2ecb30f907e3f4213070ed,sudol <tsudol@google.com>, 2020-06-15 15:48:45 -0700, , remove obsolete todos piperorigin revid 316561475,,
970,3a0ea94bec805ef8b89714066ff2abca0718b821,demello <mdemello@google.com>, 2020-06-15 15:35:30 -0700, , clean old todos abstract.py piperorigin revid 316559066,,
971,fade7ee772f97fc184ec5b97e4159dd103958c41,echen <rechen@google.com>, 2020-06-15 15:25:49 -0700, , remove old todo pivot seems like reasonable name piperorigin revid 316557183,,
972,687c66164dbd8bec34ad99943cb24becbef8737e,sudol <tsudol@google.com>, 2020-06-15 14:47:39 -0700, , clean todos piperorigin revid 316549161,,
973,8b439917400e4fdf16911e4c1a0f025e4ada469d,echen <rechen@google.com>, 2020-06-15 14:38:47 -0700, , remove old todos convert.py piperorigin revid 316547257,,
974,dad045ecbcc2fa7cc828e56ee762f2976a3923f7,sudol <tsudol@google.com>, 2020-06-15 14:38:09 -0700, , remove stale todos piperorigin revid 316547125,,
975,ed6e9aa49f4c60298bc4bb1a7d867590cf9e7b73,sudol <tsudol@google.com>, 2020-06-15 14:00:00 -0700, , map todos bug large small cleanup single bug suffices piperorigin revid 316539007,,
976,334ffbe6c670a0d7bd5469c964a8568dab947061,echen <rechen@google.com>, 2020-06-15 13:50:26 -0700, , change todo kramm todo bug output.py piperorigin revid 316537199,,
977,57f7b9e78f636501e5732e391fe14cef34626423,sudol <tsudol@google.com>, 2020-06-15 13:41:59 -0700, , clean todos piperorigin revid 316535617,,
978,4d1f8f5ffeb40dfd55a68c42c4e1141f0cc3962f,sudol <tsudol@google.com>, 2020-06-15 13:29:24 -0700, , update todo better testing also fix linter error piperorigin revid 316533249,,
979,2357128af6122434bcccf0f08dc9010424527bf0,echen <rechen@google.com>, 2020-06-15 13:17:06 -0700, , remove old todo load_pytd piperorigin revid 316530837,,
980,08afafe23718af733c4a364bfb127b1ab018594b,echen <rechen@google.com>, 2020-06-15 13:05:08 -0700, , remove old todos analyze.py implementing node todo led failing test removed figure record meant removed todo alias instead documented handled piperorigin revid 316528462,,
981,9c2120f31570a4a8361f462bf3e56845ac204f9a,demello <mdemello@google.com>, 2020-06-15 12:57:48 -0700, , clean old todos removed several todos obsolete overly complicated benefit would provide converted todos bug comment code matcher.py cmakelists.txt mixin.py piperorigin revid 316526842,,
982,b38a4fafab2d2f1058aa16b0a023c2ab8d28652c,echen <rechen@google.com>, 2020-06-15 12:18:58 -0700, , scrub todos function.py add bug one todo remove another leaf informational comment instead piperorigin revid 316518934,,
983,bafa333218c00318508c388685a586e750295c9e,sudol <tsudol@google.com>, 2020-06-15 12:03:43 -0700, , remove unneeded todo need raise error piperorigin revid 316515728,,
984,f17636fd66bd22a9e6c30de4f0c77c321f6090a9,echen <rechen@google.com>, 2020-06-15 12:01:40 -0700, , scrub todos vm.py remove obsolete directly actionable todos resolve todo memoizing method convert todos todo person todo bug piperorigin revid 316515198,,
985,4ef9c8215178e6a4494e5ea1e603fa1a73e64826,demello <mdemello@google.com>, 2020-06-15 11:59:31 -0700, , add test piperorigin revid 316514740,,
986,0b66acaaa5759e0423dd9c3413b28d435587896b,sudol <tsudol@google.com>, 2020-06-15 11:57:01 -0700, , add bug investigating max_depth see 159041279 bit piperorigin revid 316514137,,
987,d6d090b0b65e23c806314ea889a778ee08da2822,sudol <tsudol@google.com>, 2020-06-15 11:33:11 -0700, , update todo related _methodname csv output piperorigin revid 316508846,,
988,89cba91d48e3c0cc5e5dbf4e1d8a9264f8b392bb,sudol <tsudol@google.com>, 2020-06-15 11:25:16 -0700, , change todo kramm todo bug piperorigin revid 316507034,,
989,52fa28df85360c533fa6346c74b9a00470a3f173,sudol <tsudol@google.com>, 2020-06-15 11:15:44 -0700, , change todo kramm todo bug piperorigin revid 316504732,,
990,dc08be9570b34fae86af03f9389a4d40bc05887e,sudol <tsudol@google.com>, 2020-06-15 11:07:25 -0700, , resolve todo moving test higher file piperorigin revid 316502772,,
991,83b620fc60bd36b5ad9bfd679f19915f575f7450,echen <rechen@google.com>, 2020-06-12 17:34:34 -0700, , make couple quick fix check container type playing around new feature noticed couple bug element type annotated stay from_annotation needed set couple additional place piperorigin revid 316208219,,
992,fa17f20b28a3ce69d3707e8e9082952b82d65840,demello <mdemello@google.com>, 2020-06-12 14:26:46 -0700, , check container type mutation multiple binding self fix false positive mutate container multiple annotated type e.g def foo list int list str    else  foo x.append piperorigin revid 316177667,,
993,284d0f0edb3c60cf02367645bf8a8d055ca50fe9,ebecca Chen <rechen@google.com>, 2020-06-12 16:59:49 -0700,600, merge pull request 600 google google_sync google sync,,
994,f6af86e0a0c388738a2e293fe7386d6d228989d4,echen <rechen@google.com>, 2020-06-12 13:55:46 -0700, , allow type ignore opening parenthesis function def http github.com python typeshed pull 4224 really need better pyi parser ... piperorigin revid 316171517,,
995,f8f80789702b9af660a0db8821bc59201bcf7e1d,echen <rechen@google.com>, 2020-06-12 13:48:43 -0700, , enable check variable type change int  also error already cleaned new finding introduced change week ago piperorigin revid 316170169,,
996,c62829d9e158d455395a8d08af84c130f3abfdf4,demello <mdemello@google.com>, 2020-06-12 11:16:12 -0700, , basic support flax dataclasses piperorigin revid 316139475,,
997,4acdac9f997397743a9f90cde1aeab93417c435f,lebedev <slebedev@google.com>, 2020-06-12 10:24:16 -0700, , fixed import importfrom location matching prior change produced false positive match name matched occurred prefix imported name e.g import foo piperorigin revid 316128150,,
998,03e281f2051dd4a4ef1c0cbbba90d967d97a0582,demello <mdemello@google.com>, 2020-06-11 13:42:23 -0700, , populate arg classmethods class type piperorigin revid 315968839,,
999,4027dcfeac50498246cf36d2979253001c484244,lebedev <slebedev@google.com>, 2020-06-11 13:26:22 -0700, , renamed testdata import.py testdata imports.py import keyword therefore valid module name python piperorigin revid 315965683,,
1000,d4263e4b22d5e276805f2c07652b7acea8fb784e,demello <mdemello@google.com>, 2020-06-09 14:45:47 -0700, , fix test function add attr callgraph piperorigin revid 315564137,,
1001,44da154d69b8888559131f0330bdd86ae3f12c40,demello <mdemello@google.com>, 2020-06-09 12:39:16 -0700, , class argument foo.__new__ treat foo ambiguous allows fact __new__ might called subclass foo checking base class common idiom piperorigin revid 315538618,,
1002,53d0670dd4fdc53ad39b1fa4dca31a984979976b,echen <rechen@google.com>, 2020-06-08 12:15:12 -0700, , fix bool iterable either true false piperorigin revid 315326106,,
1003,6456c2f89848da7c07a9ebb0fbdf6d678463a841,echen <rechen@google.com>, 2020-06-04 15:22:45 -0700, , fix crash caused overrides_bool existing non class object showed attempting analyze apps intelligence cody tool codylab testit piperorigin revid 314814112,,
1004,d4d0252f2e05298fcb247070c0abc761221a77b0,demello <mdemello@google.com>, 2020-06-04 13:21:19 -0700, , preserve variable name type annotation applied used error message reporting container type annotation mismatch piperorigin revid 314791344,,
1005,7c209d107b445638a154e476812727e5c54381e0,demello <mdemello@google.com>, 2020-06-04 11:06:24 -0700, , check function signature annotation mutating argument corner case alias point two separate annotated args via different code path left todo piperorigin revid 314763912,,
1006,770c2b5cdaccbadeed06a5bbc071bbb354a28ac0,echen <rechen@google.com>, 2020-06-03 00:38:15 -0700, , type check class attribute annotation add new option check attribute type make pytype type check attribute assignment annotation e.g. class foo int def foo self self.x hello world annotation type mismatch left couple feature future making annotation take precedence instance attribute value generating pyi file handling attribute type comment __new__ __init__ also put container mutation checking behind flag check container type rather reusing check variable type many flag rather ugly redundant away release various thing make release process bit easier piperorigin revid 314483072,,
1007,52b641d67c531d57d7e05a7e419740d6e7ae2891,demello <mdemello@google.com>, 2020-06-02 16:03:51 -0700, , group multiple container type error single object one error new output format example file third_party pytype bug mutation.py line module new container type doe match type annotation container type mismatch annotation dict str str type parameter dict contained type str str new contained type union int str union float str piperorigin revid 314422487,,
1008,becf9f89704e5d5d2f63f3374ecc204841375327,demello <mdemello@google.com>, 2020-06-02 13:12:30 -0700, , treat object true boolean context unless explicitly overridden exception treated ambiguous booleans numeric type class overriding __bool__ __nonzero__ python2 class overriding __len__ provably empty builtin container continue treated false piperorigin revid 314390311,,
1009,41a828ef6e3881b6590acfb234ae14847fa815cb,demello <mdemello@google.com>, 2020-06-01 17:48:54 -0700, , check mutating container doe violate annotated type set following code fail list int a.append hello also add test case bug mutation.py todos piperorigin revid 314239043,,
1010,9d2a869365a720ab6cbef4d6d71b4dcc91f8a4db,echen <rechen@google.com>, 2020-06-01 17:14:17 -0700, , enable checking assignment line pep 526 style annotation change pytype report error str default erroring type str  str  still require check variable type flag piperorigin revid 314234094,,
1011,5665e272d7ffdd8358c17029babb2862eb17c875,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:27:00 -0400, , apply shfmt,,
1012,7dd6bd164e07d8f888a1cc51717eca0aa7e9948c,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:16:56 -0400, , remove comment delegate calling yaml config,,
1013,f0a80bd13cea6887c3640121d8ca6f0b92bfe4bd,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:15:55 -0400, , wheel badge use pypi metadata,,
1014,702a2a6844b6fbe902dd47bb9996ceb5964e5c1f,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:10:15 -0400, , fix directory name drop verbose flag wheel,,
1015,7e901622fd91f46ffb41a13174402a3bb2777437,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:01:36 -0400, , add badge github action wheel,,
1016,1d4e5d6446fed5667e1f8a60f98f82b03f6d17a6,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 10:01:15 -0400, , add back existing travis config,,
1017,b6f13df1edc841321032c94f50fd3490902508e2,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 09:55:25 -0400, , need set env set var step use ref http help.github.com action configuring managing workflow using environment variable,,
1018,a65bb313f1ea848318b73c9399f884801be52843,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 09:46:24 -0400, , fixups,,
1019,0f93b66f81e0d89944f81d3710fdcd4e6d0ced42,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 09:45:07 -0400, , remove pyenv ref,,
1020,7c7fbd5f4673158696eeee0ab3f922f40007a9e0,rad Solomon <bsolomon@protonmail.com>, 2020-06-02 09:35:04 -0400, , workflow syntax matrix sits strategy,,
1021,5fa701aa9826133e3a43847460d435ca5be8ad1a,rad Solomon <bsolomon@protonmail.com>, 2020-06-01 23:52:03 -0400, , remove travis config,,
1022,c1a60bad901239422ac9c401d460a6a7e89bf4fb,rad Solomon <bsolomon@protonmail.com>, 2020-06-01 23:50:40 -0400, , first cut travis github action,,
1023,3610c139d522056b0f40c3bee74c4e3369a0bbaf,ebecca Chen <rechen@google.com>, 2020-06-01 15:00:27 -0700,599, merge pull request 599 google google_sync update __version__ changelog pypi release,,
1024,b290b2797c34b30afeae4c91d8419df652a143eb,echen <rechen@google.com>, 2020-06-01 14:16:44 -0700, , update __version__ changelog pypi release piperorigin revid 314201645,,
1025,552fbe0658a8c7215b552530e61673a2e6d8e651,ebecca Chen <rechen@google.com>, 2020-06-01 13:09:38 -0700,598, merge pull request 598 google google_sync google sync,,
1026,d2208d8bd0bfa4b42a7db38166c94584009a5677,mmar Askar <ammar_askar@hotmail.com>, 2020-05-28 15:08:19 -0700,587, add minimum change required py3.8 support 587 continuation pganssle work 559 resolve 587 piperorigin revid 313667711,,
1027,4800e652b1a1afa6fd7aeaab0e88d09f30acbb9d,ytype Team <pytype@googlegroups.com>, 2020-05-27 18:57:25 -0700, , internal change piperorigin revid 313506426,,
1028,39afb063945fed8afe3d844bbc315d03a0a98034,mmar Askar <ammar_askar@hotmail.com>, 2020-05-27 17:12:19 -0700,559, import github 587 add minimum change required py3.8 support http github.com google pytype pull 587 merge github_pr_body continuation pganssle work 559 beyond making compile also add newer marshaling stuff positional argument also address add test 3.6 feature allows line number opcode table lnotab non monotonic remaining failing test  pytype.vm_test              take look later someone else carry either way like land first make review manageable  pganssle noted weird behavior going test cause fail produce output console log file upon investigation caused segmentation fault cfg.cc python 3.8 changed error type reference count greater passed http github.com python cpython blame 3.8 object structseq.c l396 l400 error silently swallowed assuming running successfully problem using initializes refcount http github.com python cpython blob include object.h l83 l85 fixed actual output test run hopefully work easier continue others  note workflow paul mentioned workflow open source end pytype pretty bespoke friendly would recommend using tox separating googletest based test python one build_scripts folder lot magic mask detail build system work underneath cmake currently used build extension run python test run test building testing cmake forte lot code handle discovery running python test might done keep symmetry py_test build rule internally completely alien open source python developer instead using something like builtin unittest module pytest drive python test would comfortable experience example one issue figuring make cmake use locally compiled python 3.8 build passing custom argument cmake nearly impossible due build_scripts recommend debian based distro add deadsnakes ppa similar use shell sudo apt install python3.7 python3.7 dev python3.7 venv python3.7 venv venv venv bin activate python3.7 build_scripts build.py python3.7 build_scripts run_tests.py  swap 3.7 whatever host python version want test next debugging issue like mysterious failing test without output important file ninja.log actually show command invoked run test exact incantation seems typeshed_home home aaskar workspace pytype typeshed home aaskar workspace pytype venv bin python3.8 home aaskar workspace pytype build_scripts test_module.py home aaskar workspace pytype pytype test test_basic.log home aaskar workspace pytype failing test also run unittest instead custom runner workflow repeatedly check log file making change like typeshed_home pwd typeshed python3.8 unittest piperorigin revid 313493580,,
1029,61149f70c776683d75cc5e93dfc252edd7bf31fd,rad Solomon <bsolomon@protonmail.com>, 2020-05-28 09:29:06 -0400, , replace bdist_wheel pep 517 build front end suggested pganssle pip wheel currently invokes bdist_wheel http pip.pypa.io stable reference pip_wheel intent separate build backend frontend,,
1030,f56f46518d191e12ae8b8d1456b3e420fb6debbf,ebecca Chen <rechen@google.com>, 2020-05-27 16:21:32 -0700,596, merge pull request 596 google google_sync google sync,,
1031,cfd9b6f03bbadb451554e15f81709e9bb588f61b,echen <rechen@google.com>, 2020-05-27 14:06:53 -0700, , global class member always prefer use annotation pyi otherwise case like float  end generating int piperorigin revid 313460210,,
1032,ca0c886ddba57ace4322be1d64f44a520efcb71c,echen <rechen@google.com>, 2020-05-27 12:23:01 -0700, , replaces value variable annotated general use annotation replace value mess thing like splitting specifically case variable annotated gotten bug report suggest surprising user pytype build union ... based assignment variable piperorigin revid 313439881,,
1033,616298feed3c3b4066feb50597bdfd3660229e5d,echen <rechen@google.com>, 2020-05-26 15:54:04 -0700, , update view type checking dataclass field fix crash found testing rollout check variable type piperorigin revid 313283303,,
1034,c79ff0f8f00369518c8b446c776c01de229a5d57,demello <mdemello@google.com>, 2020-05-21 16:50:49 -0700, , document corner case disable bad return type also update doc freshness side effect running update_docs pyfixit piperorigin revid 312766397,,
1035,670812ef180a52f69f78cb84af655b0292ad71d4,echen <rechen@google.com>, 2020-05-21 14:03:20 -0700, , fix allow noreturn match piperorigin revid 312736847,,
1036,5747b14ab444a907df912a7a785b65f8963bb58c,demello <mdemello@google.com>, 2020-05-20 19:10:53 -0700, , get rid optimisation optimisation removed method signature corresponding method base class unfixable corner case multiple inheritance abstract class piperorigin revid 312600095,,
1037,7320fd7bcd75e9e6aa253477559458e4d6bfc95f,demello <mdemello@google.com>, 2020-05-20 13:53:32 -0700, , fix preserve overridden method generic class subclass explicitly override method generic class output pyi file prevents method lookup falling back base class even signature changed pyfixit piperorigin revid 312548900,,
1038,03dc220d5cffd1e0dbef89a54ffc894cccf3031f,ytype Team <pytype@googlegroups.com>, 2020-05-19 16:58:04 -0700, , fix annotation float.fromhex change pytype would accept calling str python python accepts drop support calling float.fromhex byte bytearray python bytearray python python doe support piperorigin revid 312383190,,
1039,a855a23ba97dd7eeb9e832a6b4cb029740292c07,sudol <tsudol@google.com>, 2020-05-19 16:37:00 -0700, , make unsolvable empty etc proper singleton pyfixit piperorigin revid 312379359,,
1040,d8005c21389a06dee9ca790670ce10f2ae4b0b1d,echen <rechen@google.com>, 2020-05-19 16:29:34 -0700, , target python default instead python pytype test creates class set python_version host python version everywhere test target python unless particular reason use python pyfixit piperorigin revid 312377825,,
1041,bf33b1ae4b29e5b6bd2d3e4a1b599380b3c0c020,sudol <tsudol@google.com>, 2020-05-19 14:37:48 -0700, , treat noreturn singleton preventing several check vm.py returning true due comparing noreturn instance noreturn noreturn returned function call pyfixit piperorigin revid 312355551,,
1042,e00af14034db34ffde685a65092a379dd13a2df6,demello <mdemello@google.com>, 2020-05-19 13:47:54 -0700, , internal change piperorigin revid 312345571,,
1043,d2821ea623194a9abd24278a3eca610d445939cb,echen <rechen@google.com>, 2020-05-19 11:42:05 -0700, , fix bug type set found trying run tgp check variable type piperorigin revid 312320921,,
1044,c88a3f023c510301e9f8e79614fd33a185679780,echen <rechen@google.com>, 2020-05-19 10:01:57 -0700, , fix crash trying match function non class test example quite contrived found user code doe somehow end matching function empty therefore crashing piperorigin revid 312300631,,
1045,15c5f711aaa993a60dd7a792d66930e53163338b,ytype Team <pytype@googlegroups.com>, 2020-05-18 18:51:26 -0700, , internal change piperorigin revid 312197285,,
1046,549363be84eb85817c201e96d74226e96f3fdce9,ebecca Chen <rechen@google.com>, 2020-05-26 12:20:43 -0700,594, merge pull request 594 bsolomon1124 gitignore cmake ignore cmake generated file,,
1047,3699e400453a231d773ec90e953acbb09e7871db,rad Solomon <bsolomon@protonmail.com>, 2020-05-25 17:04:53 -0400, , redirect bdist_wheel output log file really helpful kicked,,
1048,483031aee57ade93d1bf51c72c76c08ee692da9f,rad Solomon <bsolomon@protonmail.com>, 2020-05-25 17:04:01 -0400, , remove install comment instruction i686,,
1049,f9b52487d12aa6a4a6be5dc9e246a2efb48720d1,rad Solomon <bsolomon@protonmail.com>, 2020-05-25 16:27:08 -0400, , install bison project root really matter server annoying building local host since git try pick result,,
1050,3d0d12b418b4926bba0fe2aab5995336e6a83165,rad Solomon <bsolomon@protonmail.com>, 2020-05-25 16:20:02 -0400, , ignore cmake generated file,,
1051,e9b1e2b3ddbf14f32398d788291c387686714199,rad Solomon <bsolomon@protonmail.com>, 2020-05-24 13:58:43 -0400, , attempt build macos manylinux2014 wheel,,
1052,590058a161a6a705fef979059a817009c9c113cb,rad Solomon <bsolomon@protonmail.com>, 2020-05-23 09:28:25 -0400, , wip manylinux build script,,
1053,41d04dfd52ae7f205efe954a2fe8aba66e63b317,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 17:27:45 -0400, , show dist successful bdist_wheel,,
1054,e6a1c8bd595afd4104068723e934a8cdbf39a533,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 17:26:16 -0400, , allow_failure yet unsupported python 3.8,,
1055,ee9cbee6d4fb1819088208cf4d96da77430fe462,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 16:59:33 -0400, , brew exit pkg already installed,,
1056,710534bb5f6abab5ddbcfc120d505605686cae87,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 16:44:51 -0400, , update pyenv via brew latest python version,,
1057,fb388d785c413a714b26d18ea2aa902af43a66ad,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 16:31:26 -0400, , make sure pyenv_version active,,
1058,740ec3c749e92507f089401609dad821297b549d,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 16:26:19 -0400, , correct python version,,
1059,5da2d105ffdd5d621c2765f99e6665dcc1c28bd2,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 16:25:44 -0400, , attempt use pyenv workaround support python macos,,
1060,91c561d4f19e45a18ef3c6143d2f302de29c89b3,rad Solomon <bsolomon@protonmail.com>, 2020-05-20 15:28:57 -0400, , squashme build macos wheel,,
1061,22e3687752d1c1164f5a29c11fcf17019c9dc511,ebecca Chen <rechen@google.com>, 2020-05-18 17:31:39 -0700,591, merge pull request 591 google update typeshed,,
1062,2e820695104dd5e93d2297fd12c1e26a5c43b3df,ebecca Chen <rechen@google.com>, 2020-05-18 16:09:33 -0700, , update typeshed,,
1063,74321527bdeb340d1c779dc6e2304a4d135cee64,ebecca Chen <rechen@google.com>, 2020-05-18 17:05:01 -0700,592, merge pull request 592 google google_sync google sync,,
1064,efcc9a11c192c5ffdea8318f21b0ed522a8fb354,echen <rechen@google.com>, 2020-05-18 16:15:38 -0700, , rebucket test containing type annotation sigh piperorigin revid 312174723,,
1065,dd4712df9a72322ed1af2bd38f84abdbf42daf18,echen <rechen@google.com>, 2020-05-18 15:01:36 -0700, , support callback protocol support matching class function protocol define __call__ method matching suffers pre existing limitation matcher overly permissive class function signature expressed callables feature needed order import newest version typeshed piperorigin revid 312161014,,
1066,3841ae95cd20e9dcdd5d0509d09e1f800aaa124e,demello <mdemello@google.com>, 2020-05-18 14:51:12 -0700, , serialize metric json rather yaml add custom serialization deserialization code taking advantage fact instance var metric thing json serialize need write custom jsonencoder jsondecoder class per metric subclass also add validation metric name read file remove six dependency metrics_test piperorigin revid 312158876,,
1067,ff3834cbc371238c93e1168a545da37f81a6c904,sudol <tsudol@google.com>, 2020-05-18 12:00:43 -0700, , print assignment type error message interesting pyfixit piperorigin revid 312125913,,
1068,36a66b3c19b50f6358014cb0acd64f08bd02716c,echen <rechen@google.com>, 2020-05-18 10:42:03 -0700, , fix python class parent implicitly inherit object found bug trying import new version typeshed also added information assertionerror convert.py make debugging easier pytd node improperly constructed pyfixit piperorigin revid 312109396,,
1069,d254b5f72459f51a0f03df3cf5224baae01d9a60,echen <rechen@google.com>, 2020-05-15 15:29:22 -0700, , fix recursion error caused calling str dict piperorigin revid 311812581,,
1070,871fadb1d8e570e5fbcf4cef93eef34f12bfa836,echen <rechen@google.com>, 2020-05-15 13:51:53 -0700, , fix handle typing.type convert.py module export type another one other_mod.x end written pyi file type other_mod.x pytype crashing reproduce problem locally might something pickling late type confirmed crash disappears fix piperorigin revid 311795396,,
1071,ead900833408aa1547672a929435053f79712892,echen <rechen@google.com>, 2020-05-15 08:31:58 -0700, , print errorlog self.infer find unexpected error self.check already doe able see unexpected error without grepping stderr log lot nicer piperorigin revid 311734437,,
1072,1def3fe37edfc775f35ad2b96f6776268a5e689e,ebecca Chen <rechen@google.com>, 2020-05-14 17:39:00 -0700,588, merge pull request 588 google google_sync google sync,,
1073,1d2ecacd7b434938c826def183bc6eee7d7ee639,echen <rechen@google.com>, 2020-05-14 17:09:12 -0700, , internal change piperorigin revid 311635407,,
1074,9de3c4625381638edb2458865a67f216ba7b8f7d,echen <rechen@google.com>, 2020-05-14 15:37:29 -0700, , use __annotations__ dict tracking annotation __annotations__ change creates special dict subclass annotationsdict __annotations__ doe track annotation member doe keep reference annotation tracked single place also available __annotations__ also remove favor keeping classvar annotation replacing contained type instantiated pyi output since replacing classvar reference attrs_overlay could process remove clearer call followed init_class rather __annotations__ build class piperorigin revid 311618699,,
1075,bef6b3f837553bea4742b5c6d82a402bce316021,ebecca Chen <rechen@google.com>, 2020-05-14 16:07:25 -0700,559, merge pull request 559 pganssle initial stab python 3.8 support,,
1076,4448668c6a688c03adc398ec1fa218b089daf5dd,ebecca Chen <rechen@google.com>, 2020-05-13 15:08:24 -0700,586, merge pull request 586 google google_sync prepare pypi release,,
1077,0ef0c13f8ac3e7f08c70fa42d06a551b1db748c0,echen <rechen@google.com>, 2020-05-13 14:28:02 -0700, , prepare pypi release new version pytype look good waiting rosie submitted releasing internally ahead pypi release piperorigin revid 311404665,,
1078,f385144047bf2b94edb78b428f0a4cca4e51e3d4,ebecca Chen <rechen@google.com>, 2020-05-13 14:04:00 -0700,585, merge pull request 585 ammaraskar patch add top level .gitignore,,
1079,59440a9ce0002d7ffe41df1d60c0b5f4655202ee,mmar Askar <aaskar@google.com>, 2020-05-13 10:27:43 +0000, , add top level .gitignore,,
1080,b0fb966a00e0556b5f1a25c752a1776ab350b51e,ebecca Chen <rechen@google.com>, 2020-05-11 16:44:52 -0700,584, merge pull request 584 google google_sync google sync,,
1081,35faee5068a07d93f310d4f09919cf545d4873a7,echen <rechen@google.com>, 2020-05-11 16:09:15 -0700, , fix travis test error ellipsis doe exist external py2 piperorigin revid 311014291,,
1082,b00b03dd31bc7f31a304a513a58531724c00a028,echen <rechen@google.com>, 2020-05-11 15:49:02 -0700, , internal change piperorigin revid 311010341,,
1083,835cf1754468bc871bc17f40082260eb017c4da2,echen <rechen@google.com>, 2020-05-11 15:04:50 -0700, , add new pytype flag check variable type mode enabled pytype check variable value annotation implemented calling bad_matches every time annotated value stored using look annotation since dataclasses part stdlib modified matcher handle dataclass type checking mostly handled like normal variable checking none still special kept logic third party attrs library overlay enabled default test help avoid behavior regression likely lengthy release process attrs dataclasses test disabled order test checking module continues work expected even without punted couple thing class attribute still type checked case annotation probably replace inferred value example class foo float def __init__ self self.v foo.v get type float int type stub none ... complicated thing pytype infers wrong type treated type union wrong thing change increase type checking time sample file blobstore2 access signature testdata  http github.com google pytype issue 323 piperorigin revid 311001938,,
1084,69cf1adc98f4a09563ec7ac67b9f04e6cdc805c6,echen <rechen@google.com>, 2020-05-11 14:25:11 -0700, , fix crash caused passed empty type piperorigin revid 310993259,,
1085,1681fe44c11afdaf7bdd12a9ea4a9991183b08b0,echen <rechen@google.com>, 2020-05-11 13:12:03 -0700, , report precise line number annotation type mismatch piperorigin revid 310977453,,
1086,7c3d6559a2fc2aea806a0bee51093d6c000ba359,echen <rechen@google.com>, 2020-05-11 13:03:48 -0700, , turn vm.local.typ variable let track change annotation handle variable annotation well behaved attrs dataclasses annotation using blobstore2 access signature testdata file happens contain lot local variable annotation check worst case performance impact change one increase checking time due creation additional variable piperorigin revid 310975815,,
1087,ac3f596ccbfa12d0c31f0443ea8af823223523af,echen <rechen@google.com>, 2020-05-09 00:07:38 -0700, , record annotation instead instantiated value make little easier reason piperorigin revid 310692264,,
1088,a0cfeddca279765663c3f0eecf6fbadf79625a70,echen <rechen@google.com>, 2020-05-08 14:46:42 -0700, , small cleanup around annotation handling update date comment local_ops add property easier access current frame local slight refactor remove layer nesting attrs.decorate consistently use orig instead value refer thing type annotation exists overwrite cls.members name default default annotation already instantiated stored remove unnecessary default value attrib field instance constructor move classgen attr_overlay instead use default directly make module level method called attribinstance remove typ field fieldinstance piperorigin revid 310632912,,
1089,db32c3acf56928dad238c6e7823f8cd4ef30deee,demello <mdemello@google.com>, 2020-05-07 17:52:07 -0700, , fix attr default value check default declared type default decorated method call use return type also fix test mixed signature x.default x.validator piperorigin revid 310471924,,
1090,38e78f7f8c88634d9cadacd14718305cea5f73f3,demello <mdemello@google.com>, 2020-05-07 15:03:30 -0700, , use typeshed definition sum version used typevar bound complex allow class implementing __add__ function typeshed version generic typevar want add supportsadd protocol probably upstream first pull piperorigin revid 310444131,,
1091,3769e8fa54324051f5f33378d2959423e23691f2,ebecca Chen <rechen@google.com>, 2020-05-07 13:33:01 -0700,582, merge pull request 582 google google_sync google sync,,
1092,d8c2e38aa19b5baa37885f8c0d678e15b4047c15,echen <rechen@google.com>, 2020-05-07 13:05:43 -0700, , prepare pypi release piperorigin revid 310421416,,
1093,9e9c93aae34efcbec71b3c7c9a5bc11e896d7c0f,echen <rechen@google.com>, 2020-05-06 15:07:07 -0700, , undo optimization based mistaken assumption piperorigin revid 310235574,,
1094,0b3226b8217ffd2338c5e2b55c2f2aeb43caaa78,echen <rechen@google.com>, 2020-05-06 11:56:57 -0700, , refactor annotation processing code move must constant using type parameter variable annotation check happen annotation first processed rather whenever get around instantiating latter add is_var parameter indicate whether annotation variable annotation previously implicitly assumed variable annotation call make return single value rather variable renames method reflect change deletes since previous change turned trivial wrapper around vm.init_class piperorigin revid 310198547,,
1095,e29074ddaa18cb9e4a0e6f8a03424a3c4142326b,echen <rechen@google.com>, 2020-05-06 11:46:24 -0700, , cleanup always use report ambiguous annotation sometimes using sometimes log invalid annotation error always using keep format consistent piperorigin revid 310196409,,
1096,a31f36920ceb6fc6c34435e6d73f524fe4f2fdb6,echen <rechen@google.com>, 2020-05-06 11:36:19 -0700, , cleanup use .formal check presence type parameter realized .formal attribute tell whether annotation contains type parameter need call also improved docstrings piperorigin revid 310194384,,
1097,a21ebd3387b34af45f0f877e4dcb048f5873e3e7,echen <rechen@google.com>, 2020-05-05 15:59:14 -0700, , make bad_matches expensive linked bug want call bad_matches lot frequently order type check assignment value annotation bad_matches using slow defers calling bad match possibly found potential slowness occurs error case skip hascombination variable one binding rare variable completely unreachable avoids using bad_matches purpose error logging piperorigin revid 310038493,,
1098,c3cf02e1c3fc49c1be9494822fa4248f40532e61,ebecca Chen <rechen@google.com>, 2020-05-04 21:47:20 -0700,579, merge pull request 579 google google_sync google sync,,
1099,4ec8cbb5d237c7c5c1ac878f28bf929b19ae6975,echen <rechen@google.com>, 2020-05-04 18:18:28 -0700, , add test annotated decorator also serve example creates suite test ensuring pytype pass function class annotated decorator expected also point user test documentation annotate decorator piperorigin revid 309858745,,
1100,ee90a8d63bf0141e30d3272665595098bf9adc8f,echen <rechen@google.com>, 2020-05-01 13:07:18 -0700, , fix crash caused attr.s passed decorated class piperorigin revid 309459874,,
1101,3b98201cd915d5bd8c41d1c2ecec5e79e055b23c,echen <rechen@google.com>, 2020-05-01 12:49:00 -0700, , improve annotated decorator handling class change annotated decorator pas class module like function decorating class different module already worked correctly piperorigin revid 309456542,,
1102,3ddef87fb5bc912280d9b3b0d3721b824ff9e598,demello <mdemello@google.com>, 2020-04-30 17:12:25 -0700, , remove target python 3.4 support also remove bunch trivial check opcodes_test need verify every entry map spot check enough piperorigin revid 309329124,,
1103,7e8dd17dec0a10b497b16c31882d3fbf884bc9d5,echen <rechen@google.com>, 2020-04-30 16:26:48 -0700, , fix make_function opcode error triggered overload reason overloaded function make_function opcode seems line def class opening rather last significant line decorator piperorigin revid 309321787,,
1104,91319e7da3a05757b478a692b8ac70af40cbfb54,echen <rechen@google.com>, 2020-04-30 15:13:48 -0700, , fix crash typing.overload inference output.py using signature function implementation generate pytd output overload leading crash overload signature differed significantly implementation fixed iterating overload output.py rather since moving loop outward mean entire function replaced overload change let stop saving passing around signature various place since get directly function also fixed place noticed using self.signature rather signature current overload piperorigin revid 309308762,,
1105,9c6e5f1bdbb037f25cb84475a7ccafa5b2b14988,ebecca Chen <rechen@google.com>, 2020-04-30 15:32:41 -0700,577, merge pull request 577 google google_sync google sync,,
1106,5d9e3494ee20bae9532424fe8ee871266e4102d9,sudol <tsudol@google.com>, 2020-04-30 14:37:02 -0700, , make sure args.posargs unpacked filter prevents crash posargs e.g filter args kwargs piperorigin revid 309301817,,
1107,796b4f0040ccd108759f6279277c2fb1f0221b59,echen <rechen@google.com>, 2020-04-30 12:21:57 -0700, , move skipped test bug creates bug macro save typing piperorigin revid 309275841,,
1108,cd8a5fca22486d871457dfa8316574799233d1af,echen <rechen@google.com>, 2020-04-30 12:11:51 -0700, , internal change piperorigin revid 309273794,,
1109,0971e8f549a94322a0a96d31389c702c6dd5c096,echen <rechen@google.com>, 2020-04-29 19:09:59 -0700, , internal change piperorigin revid 309144265,,
1110,7518263f82342d7935e055c3c1e5bc99085439af,demello <mdemello@google.com>, 2020-04-29 18:03:43 -0700, , fix need check view get_views contain piperorigin revid 309136217,,
1111,ce7920db698561b37ef600aa9604eb0720d8cc5d,demello <mdemello@google.com>, 2020-04-29 17:36:16 -0700, , fix crash abstract.empty passed piperorigin revid 309132232,,
1112,ee51995a1c5937cb4ebee291acb2e049fb0f81cc,ebecca Chen <rechen@google.com>, 2020-04-27 16:18:12 -0700,576, merge pull request 576 google test use dir instead __dict__ find test method,,
1113,5785a59e191a79afa8618c7b624b9ad2af2b3cd4,ebecca Chen <rechen@google.com>, 2020-04-27 15:53:16 -0700, , add back deleted file added 569 accidentally deleted commit 40aea2a due bad google3 github export configuration,,
1114,9788f9c66bc2e96351ec9fe2ee0420edfc1db20d,ebecca Chen <rechen@google.com>, 2020-04-27 15:48:03 -0700, , use dir instead __dict__ find test method __dict__ used subclass pick inherited test method since subclass test class add python testing bug meant whole bunch 2and3 test running python,,
1115,5c499b1f9154d26e8220fe26432c1a94766650c0,ebecca Chen <rechen@google.com>, 2020-04-27 15:42:32 -0700,575, merge pull request 575 google google_sync google sync,,
1116,749713dd943a4eff021c99de3b671498c04b8e6f,echen <rechen@google.com>, 2020-04-27 15:15:53 -0700, , fix bucket test use type annotation due bug open source test method run python travis change fix test would fail bug fixed follow add back missing testing piperorigin revid 308708365,,
1117,281331aba0acb3e0ab95e0efa352673c68c3846f,demello <mdemello@google.com>, 2020-04-27 15:13:53 -0700, , add special builtins support filter none remove none literal list tuples union type parameter piperorigin revid 308708003,,
1118,975d517aa018969e926b160ada30573ee1e4e02a,echen <rechen@google.com>, 2020-04-27 13:06:50 -0700, , copy whitespace fix 569 piperorigin revid 308682365,,
1119,64cd9a5872c0b3294e57f3af20046540f948a29a,echen <rechen@google.com>, 2020-04-27 12:58:05 -0700, , confuse inner dataclasses name instead using defaultdicts local_ops set empty value frame created way second frame created name doe accidentally retain value first fix http github.com google pytype issue 572 piperorigin revid 308680692,,
1120,ee11c9445e1de6ca78f425ed33c45d66f0bbb625,echen <rechen@google.com>, 2020-04-27 10:10:21 -0700, , add __matmul__ friend numpy.ndarray fix http github.com google pytype issue 571 piperorigin revid 308644229,,
1121,5f75cdbe204e88a71eaf917d11be99f8c723f72e,echen <rechen@google.com>, 2020-04-23 11:40:36 -0700, , stop hardcoding python 3.6 devtools python blaze pytype piperorigin revid 308097089,,
1122,40aea2a5092e4570c60ef83317be1695e7115019,demello <mdemello@google.com>, 2020-04-23 11:07:25 -0700, , fix display helpful error rather crashing returning typevar checking def return raise error bad option return type bad return type expected actually returned typevar piperorigin revid 308089963,,
1123,42609a00e024a0caa5cac149338c87ca8449d2ec,ebecca Chen <rechen@google.com>, 2020-04-26 10:09:41 -0700,569, merge pull request 569 google req add,,
1124,0af87e06282e6189ea698adad83d22812239bef2,ebecca Chen <rechen@google.com>, 2020-04-23 14:51:31 -0700, , add run pip install get dependency building testing github code locally previously looking .travis.yml every time figure install based http discussion install requires requirement setup.py accomplish different purpose tried keep sync also hoping adding file fix broken dependency graph currently show dependency dependent http help.github.com github visualizing repository data graph listing package repository depends also deleted stray newline contributing.md,,
1125,584c8726c62abd15aed2699700179f891ceaeb79,ebecca Chen <rechen@google.com>, 2020-04-22 16:48:34 -0700,567, merge pull request 567 google google_sync google sync,,
1126,60f4e968a7b6852acf2b4ad7f3d9a846fdef51d8,echen <rechen@google.com>, 2020-04-22 15:56:56 -0700, , prepare pypi release piperorigin revid 307920522,,
1127,5d60ea19c00af79f653b45ac317755f66060528f,echen <rechen@google.com>, 2020-04-22 13:44:53 -0700, , make test method snake case fix minor annoyance mine single test file camel case snake case test name couple year ago tried fix problem updating test file used whatever style previously prominent file regressed time maybe thing stay consistent everything style made change replacing uppercase letter underscore followed lowercase letter test method manually editing silly thing like test_m_r_o remove unnecessary underscore also fixed lint error lint warns unreachable code test pretty cool piperorigin revid 307889586,,
1128,ec312daf3c123fb361e84aec5a7daf36c1e7e511,ebecca Chen <rechen@google.com>, 2020-04-21 18:31:48 -0700,566, merge pull request 566 google google_sync google sync,,
1129,d897b3fdd05edb99efdb37d70c0156e16cdc0d03,echen <rechen@google.com>, 2020-04-21 17:03:46 -0700, , report invalid typevar type called typevar type called value instantiated annotation end passing typevar function trigger invalid typevar error avoid typenew remove typevars return value type already similar logic refactored place use code improved lose container type fix http github.com google pytype issue 209 piperorigin revid 307710392,,
1130,e9b6cb2588462a9dda8d5b38e415ab916be0288c,echen <rechen@google.com>, 2020-04-21 13:20:39 -0700, , add missing callable attribute replace callable latter need declare everything list attribute already object http github.com python typeshed blob stdlib types.pyi l26 l34 piperorigin revid 307667936,,
1131,93c7791397e290ebcd05f3f80c5b8f6f71020014,echen <rechen@google.com>, 2020-04-21 12:40:28 -0700, , fix another place strict false accidentally dropped piperorigin revid 307660540,,
1132,c12ac83b8bf068715d3a0674ac614ae64f6d87fc,demello <mdemello@google.com>, 2020-04-20 17:28:59 -0700, , fix crash indexer crash pytype emits duplicate opcode trace class def crash callgraph get function type str pytdclass str test unable get minimal repro either case piperorigin revid 307509651,,
1133,f07490dbbd3702421627d567814deca20c9b19b4,echen <rechen@google.com>, 2020-04-20 15:36:18 -0700, , allow function match also copy instantiating functiontype still work piperorigin revid 307490233,,
1134,492b5d9637a933e8a1b9adc794e4245248b9d125,ebecca Chen <rechen@google.com>, 2020-04-20 15:49:29 -0700,565, merge pull request 565 google google_sync google sync,,
1135,b0ee0821fb0ce8f8ab5a2f7e2aa62b7e2c5520e5,echen <rechen@google.com>, 2020-04-20 14:44:48 -0700, , fix python 3.7 failure vm_test ran travis test change except last two today course one fails test due bytecode change 3.7 piperorigin revid 307480258,,
1136,dce4ff4be89374c72e05010ced56a9ca79d34ba5,echen <rechen@google.com>, 2020-04-20 13:41:22 -0700, , fix couple travis test failure googletest unittest different length caused lint error wrong indentation variable annotation test run 3.5 discovered unittest.skip used entire class removed ugly del hack unusual way travis test set http github.com google pytype pull 564 needed make class level skipping work externally opensource test pas machine fix piperorigin revid 307467280,,
1137,e8c894abaabeb9738c6676c73afa82404d9c7157,echen <rechen@google.com>, 2020-04-20 12:58:23 -0700, , use bytecode adjust type comment decorator line number fix old bug open ignored type comment error caused various corner case little late project probably reason use type comment instead pep 526 style annotation anymore still nice finally get right changing blocks.py keep working accidentally got function type comment line def working well added test piperorigin revid 307459132,,
1138,f135836859e1c7856565ecf19a3ed3102f2a2797,echen <rechen@google.com>, 2020-04-20 12:18:40 -0700, , fix make class attribute filtering strict faster deleted accidentally changed def ... value strict false yield value false def _class_to_def ... value is_annotation ...  def _class_to_def ... value node two undesirable effect overly strict filtering causing attribute error slight performance regression piperorigin revid 307451149,,
1139,baf29b07434f4f4cbadb7fd4016ef837f8836bd1,ourav Badami <souravbadami@gmail.com>, 2020-04-17 15:01:31 -0700,563, stray nothing type empty tuple inference 563 fix 549 resolve 563 piperorigin revid 307121340,,
1140,801e7c4afe382f68761733286025322dc222f8fd,echen <rechen@google.com>, 2020-04-17 14:30:02 -0700, , improve detection variable annotation using token type instead matching regex detects variable annotation checking name colon annotation equal end gave supporting thing like __random__ int introduced many false positive piperorigin revid 307115591,,
1141,257b8ea64bf14d3b5568778272ecc1d32bc8aa22,echen <rechen@google.com>, 2020-04-17 13:30:41 -0700, , fix appears signature error bitten fact look like shortening fact place operation piperorigin revid 307104858,,
1142,36be34f45cb00a692c6cb5c278cc98500c252a13,echen <rechen@google.com>, 2020-04-17 13:05:57 -0700, , fix distinguish one line function docstring function previously one line function followed docstring one def pas def docstring associated docstring type comment docstring function function piperorigin revid 307100532,,
1143,963002f55aa0e747edd44bf07a32b07f2e881dcc,echen <rechen@google.com>, 2020-04-15 16:09:17 -0700, , fix two bug variable annotation handling else annotated assignment multiline assignment need line number adjusted side note like method adjusting line number better previous regex based solution followup see use type comment decorator well piperorigin revid 306739518,,
1144,95bbb6d8ba9af21ea8a5e07554843260b1a9d142,echen <rechen@google.com>, 2020-04-14 19:58:44 -0700, , unify pytype two way handling variable annotation change support variable annotation inside function two overlapping way handling variable annotation annotated assignment matched recorded annotation operation applied annotation type comment annotation outside function body used record annotation operation apply annotation annotation matched regex outside function body ended recorded applied twice change annotated assignment handled _pop_and_store ignored bare annotation still handled effect change rely __annotations__ dict value variable determining type deleted tweaked code assumed type would derived __annotations__ fixed couple inconsistency handle error vs. fixed handle annotation pattern piperorigin revid 306565563,,
1145,b57cc280959d570ec9607ae029597793fff703cf,echen <rechen@google.com>, 2020-04-14 14:13:58 -0700, , track variable annotation addition type comment director variable annotation inside function body appear bytecode accidentally ignoring fix track variable annotation directors.py reusing much logic tracking type comment make type comment specific name general reflect also handling variable annotation remove invalid type comment error class favor invalid annotation piperorigin revid 306512035,,
1146,2597b884e735e564723cf5d7cf3c99afd44fc406,echen <rechen@google.com>, 2020-04-14 13:31:42 -0700, , clean refactor director related code renames map line number code comment tuple remove code unused refactors split line token processing several section remove redundant suffix suffix line errors.py print_function import unneeded python simplifies convoluted set construction vm.py piperorigin revid 306503871,,
1147,4557bd8a5e8ed0480316805b229f5ebe505e501d,demello <mdemello@google.com>, 2020-04-13 20:08:51 -0700, , track function class decorator applied also fix director allow whitespace isolated closing bracket decorator corresponding function piperorigin revid 306363644,,
1148,eb1f7216ea29b92d05c1d426ebb93d9b23910e89,demello <mdemello@google.com>, 2020-04-13 15:42:28 -0700, , order match bytecode need associate decorator last significant line def class declaration decorates piperorigin revid 306323648,,
1149,5c2be2e4b578e1f0aad5ad8c72c07dbc00109622,demello <mdemello@google.com>, 2020-04-13 11:39:30 -0700, , track decorator director first step towards better decorator support next step add is_decorator annotation object using director confirm something decorator since bytecode doe retain information piperorigin revid 306275265,,
1150,4772ad6fe89f4df75ae3d08e7374f68074175d4a,ebecca Chen <rechen@google.com>, 2020-04-17 18:28:51 -0700,564, merge pull request 564 google skip support skipping entire testcase,,
1151,dde53620e9f47a43bd02a3e2c9472d6c64800468,ebecca Chen <rechen@google.com>, 2020-04-17 18:06:55 -0700, , support skipping entire testcase class skippable like method http docs.python.org library unittest.html skipping test expected failure make feature work unusual test setup,,
1152,804fa97e7f9208df2711976085a96f756b3949e6,ebecca Chen <rechen@google.com>, 2020-04-11 12:32:19 -0700,560, merge pull request 560 google google_sync google sync,,
1153,e2c654874350d21bfea47814e2fb987696555d56,ourav Badami <souravbadami@gmail.com>, 2020-04-10 15:59:09 -0700,556, skip built function merging pyi 556 fix 550 resolve 556 piperorigin revid 305960694,,
1154,8e3363e1f1d06ea296c2f615b8421e92e29774c3,echen <rechen@google.com>, 2020-04-10 14:32:32 -0700, , add test discovered adding test still needed add feature internal __future__.pytd modernized syntax pytd file piperorigin revid 305945714,,
1155,cc1432c32b2843231ca03914bf57fde71f352fe4,echen <rechen@google.com>, 2020-04-09 22:35:23 -0700, , make func work properly file previously function annotated like annotation worked properly function used different file file changed file linting py3 could use super argument fixed couple new warning deprecated inspect method piperorigin revid 305828065,,
1156,c0b543007d03f86f5ba102c129035fe615a0ede3,echen <rechen@google.com>, 2020-04-09 10:08:42 -0700, , fix recursion error tracking seen annotation piperorigin revid 305706859,,
1157,31d97c41f41c9cdfe0a1351602b8dde133634551,echen <rechen@google.com>, 2020-04-07 17:30:26 -0700, , add new python 3.7 piperorigin revid 305374392,,
1158,0a83538e2318352e197fe5a2f02ea2a2f40d24f3,aul Ganssle <paul@ganssle.io>, 2020-04-09 14:47:38 -0400, , move pylint disable comment reason unclear python 3.8 longer understands inline disabling comment old position move immediately method definition,,
1159,cde5e9c4b0413d8123d64c0d4400efe91e8e64e5,aul Ganssle <paul@ganssle.io>, 2020-04-09 14:10:13 -0400, , fix type definition python 3.8 vectorcall pep 590 unused tp_print slot repaced see http www.python.org dev pep pep 0590 change pytypeobject struct,,
1160,95e6be276e5792753bf6005d6485615868ac1f35,aul Ganssle <paul@ganssle.io>, 2020-04-09 14:09:10 -0400, , fix visitor test 3.8 see bpo 32892 http bugs.python.org issue32892,,
1161,dad0f2d7537702db47b6391922fe99631bed50c8,aul Ganssle <paul@ganssle.io>, 2020-04-09 14:07:31 -0400, , change required python 3.9,,
1162,a78ce595ab680aeda443f414dde2185f2a7e3bd6,aul Ganssle <paul@ganssle.io>, 2020-04-09 14:19:58 -0400, , test 3.8 master allowed failure add non required job test 3.8 master branch make easier determine need done add support python version note currently always fail trivially excluded python_requires still beneficial non maintainer modify setup.cfg branch modify .travis.yml better long term solution would add workaround allows installing package nominally unsupported version python,,
1163,d5588991f7ce15a3a5f0221194f1f37b03ed9388,ebecca Chen <rechen@google.com>, 2020-04-08 16:22:47 -0700,554, merge pull request 554 google typecheck call sys.exit return code build_scripts pyexe,,
1164,f7d434deb4ca9f47596470cde29acff91cc6a390,ebecca Chen <rechen@google.com>, 2020-04-07 15:03:40 -0700, , call sys.exit return code build_scripts pyexe fix travis script report type checking failure,,
1165,7a9b91e9e1c66edb8eb8e81f84abc748476f8f81,ebecca Chen <rechen@google.com>, 2020-04-07 15:01:20 -0700,553, merge pull request 553 google google_sync google sync,,
1166,c5d9659316f2901e7e618ccdf76db0f6e91f9ba9,echen <rechen@google.com>, 2020-04-07 14:29:41 -0700, , make fix travis test type checking step broken notice build_scripts pyexe.py swallowing return code target python 3.5 test need work pas previously host python 3.5 test targeting 3.6 3.7 first merge http github.com google pytype pull 552 export change finally send another fix build_scripts pyexe.py travis test good shape http github.com google pytype issue 545 piperorigin revid 305341333,,
1167,2103d546e86666e23e5361b92ff1384393a99d87,ytype Team <pytype@googlegroups.com>, 2020-04-06 10:04:27 -0700, , internal change piperorigin revid 305055448,,
1168,e4dfc7f72b0a1057e30892b9f43e9112aaab0084,echen <rechen@google.com>, 2020-04-04 21:42:39 -0700, , add skip unless test utility use make test pas 3.7 replaces 3.7 specific skip method test_utils generic skip method let specific sequence python version test run new skip method make pytype test pas python 3.7. skipped failing test tool xref verifier_test piperorigin revid 304848267,,
1169,b230058414e793c2c8de7e3c04425fe6f7960900,echen <rechen@google.com>, 2020-04-04 17:38:37 -0700, , remove dependency unnecessary python3_binary pytype longer host python test need custom python binary noticed missing cmakelists.txt added change work confirmation managed migrate fully python http github.com google pytype issue 545 piperorigin revid 304831817,,
1170,c67cae8f555cd9da450bd54b35eec2618ee8e690,echen <rechen@google.com>, 2020-04-04 17:29:34 -0700, , make pytype functional test target host python version change test use following version host target mean host python version 2.7 2.7 2.7 annotation backport  target version tracking host version make testing new python version extremely easy one thing lose testing different python minor version e.g. 3.6 3.7 think big loss need test internally externally using different host target version seems rare still 2.7 verifying cross version analysis work http github.com google pytype issue 545 piperorigin revid 304831205,,
1171,3e1659b21c59fbc4216e77fed2682c3c5251402a,echen <rechen@google.com>, 2020-04-03 18:40:21 -0700, , stop hardcoding python minor version place test code allows passing major version int python_version remove reference 3.6 migrates test python needed keep passing systematic migration later http github.com google pytype issue 545 piperorigin revid 304732420,,
1172,7079edb05b5d85ddcc14517903e02f9aa0060477,echen <rechen@google.com>, 2020-04-03 17:23:25 -0700, , cleanup use python_version python_version using three various place test code piperorigin revid 304723681,,
1173,0f012bf67f7124193380fddaa545d072b4e93d2e,demello <mdemello@google.com>, 2020-04-02 16:37:22 -0700, , add timestamp log option pytype apply pytype run command line used library piperorigin revid 304502949,,
1174,cdec8b19545a02761bf1bcfc6a4bc0796c34f2ff,echen <rechen@google.com>, 2020-04-01 18:28:42 -0700, , internal change piperorigin revid 304303629,,
1175,35e00a532a0e56826e12fbbc42dc784e6750332f,demello <mdemello@google.com>, 2020-04-01 18:08:43 -0700, , raise supported yet error aliasing union ... piperorigin revid 304301112,,
1176,bc2a9e1fc85dc431d5948dc907b5b69332056dc0,ebecca Chen <rechen@google.com>, 2020-04-07 14:14:06 -0700,552, merge pull request 552 google drop_py2 drop host python support,,
1177,fcb4557d9ae98d0337adc10b05e996d211179942,ebecca Chen <rechen@google.com>, 2020-04-06 16:42:39 -0700, , drop host python support http github.com google pytype issue 545,,
1178,51bcd3a2d7be9db0af39a64074cd5ea4917eee4c,ebecca Chen <rechen@google.com>, 2020-04-01 18:08:48 -0700,543, merge pull request 543 google google_sync google sync,,
1179,430779a8afdd6c7c4281a39b25c2864ed54b3f5b,echen <rechen@google.com>, 2020-04-01 17:03:57 -0700, , add key argument avoid type error sorting annotation 3.5 ughhh piperorigin revid 304291925,,
1180,729fc21acee22ae6e467b5205c7e4a99649066cb,echen <rechen@google.com>, 2020-04-01 14:20:54 -0700, , fix two test failure doe exist python dictionary insertion ordered python 3.5 piperorigin revid 304261311,,
1181,6142b608e8a37d887885aa61d48942e647ee33f9,echen <rechen@google.com>, 2020-04-01 13:31:08 -0700, , pypi release normal release despite date piperorigin revid 304251409,,
1182,422b2f07146ef58081a75bc373cd5aedade0991a,echen <rechen@google.com>, 2020-03-31 14:10:11 -0700, , unskip test python 3.7 issue caused test skipped fixed fix one test stop returning awaitable __aiter__ http www.python.org dev pep pep 0492 aiter doe return awaitable http docs.python.org library dis.html opcode get_aiter piperorigin revid 304042948,,
1183,ee0e1fd24bcfea95f7ad2bf88236e8b95635a84c,echen <rechen@google.com>, 2020-03-31 13:27:44 -0700, , use instead latter available python sigh increased shard count test timed piperorigin revid 304034251,,
1184,0e19be9e3937e320103c0ebd32ee3ffe688de0c1,echen <rechen@google.com>, 2020-03-31 12:29:00 -0700, , cleanup remove backslashes pytype test also remove unnecessary backslash continuation suppression fix generic assert error pytype errors_test piperorigin revid 304021801,,
1185,485a68c999084171a047131c7f11bb979b226188,rad Solomon <bsolomon@protonmail.com>, 2020-03-31 12:22:31 -0700,541, note install broken alpine linux 541 related resolve 541 piperorigin revid 304020432,,
1186,57c88d75a2435d078cc1b2575e85f935c518b5a5,echen <rechen@google.com>, 2020-03-30 18:15:36 -0700, , migrate piperorigin revid 303864672,,
1187,f01905b530ff0893a5e695d77b81a1558714525b,echen <rechen@google.com>, 2020-03-30 18:07:29 -0700, , expected error checking check infer witherrors comment based error checking really wanted able insert expected error test code checked without needing call separate assert method afterwards fix couple case error reported non deterministic order mark always associated right error checkwitherrors inferwitherrors call errorlog forbids adding expected error comment check infer inferfromfile accidentally use one method expected error silently ignored replaces method called want check mark make simplification line number handling error matching code possible removal doe pas test follow migrate wait reviewed submit quick succession piperorigin revid 303863481,,
1188,b8fdc568ff51696b0f2cab8f400574e7b987b780,echen <rechen@google.com>, 2020-03-30 12:35:25 -0700, , cleanup use regex instead regexp deprecated favor assertregex python renamed 3.2. consistency also changed reference regexp could find lastly fix two missing super call lint warning piperorigin revid 303799439,,
1189,22c472452d13ecaf091b71e0393593f5c1e21439,ytype Team <pytype@googlegroups.com>, 2020-03-30 11:50:41 -0700, , fix documentation snippet demonstrating usage mixins piperorigin revid 303789067,,
1190,a7ae6abd6b36fdd41cc0c7e5dc037f5f887517d7,ebecca Chen <rechen@google.com>, 2020-04-01 13:25:10 -0700,542, merge pull request 542 google lint disable lint error iterable,,
1191,c290162f0659710f2ba333664c8e468562e6a00e,ebecca Chen <rechen@google.com>, 2020-03-31 12:43:31 -0700, , disable lint error iterable error reported http travis ci.org github google pytype job 669392038. look like false positive,,
1192,3f46c16d16c1b597ffd9be69254a4d3004c10428,ebecca Chen <rechen@google.com>, 2020-03-27 16:39:13 -0700,539, merge pull request 539 google google_sync google sync,,
1193,43addced6d51c9b21733b1ec3aaebab2d3c40c54,echen <rechen@google.com>, 2020-03-27 12:50:15 -0700, , internal change piperorigin revid 303387879,,
1194,9f6f25741192c22014290dd5e634bfc442f64396,demello <mdemello@google.com>, 2020-03-23 13:40:31 -0700, , report name error accessing unbound closure variable fix pytype crash hit case pyfixit piperorigin revid 302507132,,
1195,30c2e1943a0a57336b985e9dbd285ebf4f83fb4f,echen <rechen@google.com>, 2020-03-23 12:46:43 -0700, , internal change piperorigin revid 302495703,,
1196,81f63fcafe27f00c82cab4f7eef6686a2b60be66,ebecca Chen <rechen@google.com>, 2020-03-23 12:02:00 -0700,536, merge pull request 536 google google_sync google sync,,
1197,0774f1f9a91aedf6bbfca71603b76bb29e007399,echen <rechen@google.com>, 2020-03-23 11:14:40 -0700, , use instead test_base_test travis test unhappy latter python piperorigin revid 302474915,,
1198,7f67e43cb39df2922473e57c0730b525d9464ccd,demello <mdemello@google.com>, 2020-03-20 14:55:17 -0700, , move expected error matching testerrorlog piperorigin revid 302104556,,
1199,9d4ede665c5695614da67833f5d84a674002c545,echen <rechen@google.com>, 2020-03-20 14:43:26 -0700, , use devtools python launcher python3_binary directly pytype change allows get rid one copy python interpreter also make version upgrade easier pytype follow runtime python version rather pinned whatever recently copied thing python2_binary type annotation backport requires binary built opt startblock 147668882 fixed piperorigin revid 302102449,,
1200,83449e2668de3fc8ecb1e89a30598e435cc609a4,demello <mdemello@google.com>, 2020-03-20 12:21:29 -0700, , add user friendly error log matcher add new matcher args allows comment form line code expected error assert line contains error without needing add args  line code .mark refer line lineno via .mark matcher pyfixit piperorigin revid 302076400,,
1201,d22208419d5ffe5ad060e7250024a83981d26835,echen <rechen@google.com>, 2020-03-20 10:18:35 -0700, , update pytype doc piperorigin revid 302051529,,
1202,0d85aef905b7b2c737528caeee945241a1bf5f1b,echen <rechen@google.com>, 2020-03-20 10:13:49 -0700, , move development process file since section pretty long cleaner put file pyfixit piperorigin revid 302050516,,
1203,9cb61542266487ae2e532b29ab9db6b827c2b1cc,ebecca Chen <rechen@google.com>, 2020-03-19 16:02:27 -0700,532, merge pull request 532 google google_sync google sync,,
1204,094bda69638fffac01ce29745ffe084eca64ef79,echen <rechen@google.com>, 2020-03-19 15:22:37 -0700, , pypi pytype release piperorigin revid 301906667,,
1205,04a6f0dbcaea73d420cc933895a4480ced700182,echen <rechen@google.com>, 2020-03-13 17:29:46 -0700, , add signature binaryio.write work around pytype bug piperorigin revid 300857322,,
1206,b790777ca9fb796095423a96b091cd52d7a4a704,echen <rechen@google.com>, 2020-03-13 17:01:55 -0700, , make signature io.write lenient python came across rosie releasing fix attached bug python write unicode string str object piperorigin revid 300853464,,
1207,52fb99ac1ec45e2095ac1aba2fd17625062633cc,echen <rechen@google.com>, 2020-03-13 14:02:07 -0700, , fix pytype crash found murali piperorigin revid 300822593,,
1208,22354148a7c89abd89a65a8a81819e8a98ce9d16,ebecca Chen <rechen@google.com>, 2020-03-11 18:38:25 -0700,530, merge pull request 530 google google_sync google sync,,
1209,e4ae4b20bf38bb4b9d09d20f9d3aab049e1112de,echen <rechen@google.com>, 2020-03-11 17:06:26 -0700, , update doc piperorigin revid 300439156,,
1210,421d210f47890a560a9f439ef009960e96a20d74,echen <rechen@google.com>, 2020-03-11 12:54:26 -0700, , internal change piperorigin revid 300388213,,
1211,08b752a125d0d870d13669bd00c47af99af22402,ebecca Chen <rechen@google.com>, 2020-03-10 15:47:39 -0700,529, merge pull request 529 google google_sync google sync,,
1212,bdcc58fe74314a1e0ed2e20b64f9b2f9e15fca7c,echen <rechen@google.com>, 2020-03-10 14:30:27 -0700, , dev guide useful bit open source piperorigin revid 300178491,,
1213,4928447bbf525ff605b69b37f6612a281c482829,echen <rechen@google.com>, 2020-03-10 14:22:24 -0700, , flesh development process section dev guide piperorigin revid 300176834,,
1214,a50b3f4a8e59b631a832ce14bc8e8735b9e2c824,demello <mdemello@google.com>, 2020-03-04 16:22:21 -0800, , fix io.write take string argument also fixed test validating wrong behaviour piperorigin revid 298968030,,
1215,348b45fcfa0d169861eae6357d70e411210c3373,ebecca Chen <rechen@google.com>, 2020-03-03 14:19:33 -0800,520, merge pull request 520 google google_sync google sync,,
1216,b26e81e0c817c2a52b281e9cd513575d7cd0bbc5,echen <rechen@google.com>, 2020-03-03 11:20:00 -0800, , cleanup silence lint error noticed importing 519 piperorigin revid 298649713,,
1217,e6d84530c4c7f9517aaf3fc76c01c4aa8d02f291,une Tynan <runetynan@gmail.com>, 2020-03-03 11:17:22 -0800,519, add lexing base literal 519 alters lexer.lex add test new numeric type close 494 resolve 519 piperorigin revid 298649098,,
1218,62f39e3ce9721c10058aad6811878c38c5b42634,demello <mdemello@google.com>, 2020-02-27 15:27:22 -0800, , fix convert line bytestrings calculating byte offset piperorigin revid 297702793,,
1219,5dd6807a905aa07fecc230ecdea9127e9f646a08,ebecca Chen <rechen@google.com>, 2020-02-25 17:45:43 -0800,518, merge pull request 518 google google_sync google sync,,
1220,6f04c0c2d6a5d8addd3965eac402ee2254591029,echen <rechen@google.com>, 2020-02-25 17:00:06 -0800, , add missing python ascii builtin also took function end list function builtins inserted alphabetical order piperorigin revid 297237855,,
1221,fc1cfdbc3614c8631d529b89e98e70b7be1d13f0,demello <mdemello@google.com>, 2020-02-25 16:10:36 -0800, , fix crash false case need generate unsolvable binding binary operator even suppressed error reporting piperorigin revid 297227987,,
1222,ce8f767846d79d0452735475e116901ba73aaf1b,ebecca Chen <rechen@google.com>, 2020-02-20 14:36:55 -0800,517, merge pull request 517 google google_sync pypi release implicit optional change,,
1223,19e3ea0e92f4769b65b5ec7ba13f76453985d369,echen <rechen@google.com>, 2020-02-20 13:53:54 -0800, , pypi release implicit optional change piperorigin revid 296289579,,
1224,8979502a0967aeafb90c0a92819664193b4c84c0,ebecca Chen <rechen@google.com>, 2020-02-19 10:33:16 -0800,515, merge pull request 515 google google_sync google sync,,
1225,926228d3239ca58d85fda2bbf2c4830bf34aa711,echen <rechen@google.com>, 2020-02-18 11:00:18 -0800, , add start stop step attribute range python also noticed http github.com google pytype issue 513 piperorigin revid 295773632,,
1226,3b2a30309a81ae5ac867af0c163dbc2075cf4d14,echen <rechen@google.com>, 2020-02-18 09:24:58 -0800, , allow match parameterized class piperorigin revid 295750288,,
1227,17944bb5c8d23da3d1e7c00913febf75effc7791,ebecca Chen <rechen@google.com>, 2020-02-18 09:39:22 -0800,514, merge pull request 514 google google_sync allow range sliced python,,
1228,9dc544b7cea1cd2d15dbc7ef5d3087f37422bf64,echen <rechen@google.com>, 2020-02-14 15:36:37 -0800, , allow range sliced python resolve http github.com google pytype issue 513 piperorigin revid 295241887,,
1229,07640ec06bf0c21406ba283b3410be00ba8bc221,ebecca Chen <rechen@google.com>, 2020-02-12 12:58:12 -0800,512, merge pull request 512 google google_sync remove pytype support implicit none annotation,,
1230,52c415571de728914b5c8d6fd2bd1f4f78d98c3d,echen <rechen@google.com>, 2020-02-06 18:10:51 -0800, , remove pytype support implicit none annotation piperorigin revid 293721487,,
1231,d896984a4e4a3d8b88fd274142eaf4d83ac45ccb,aul Ganssle <paul@ganssle.io>, 2020-02-10 16:52:54 -0500,372, modernize python build system 509 replace conditional logic environment marker pep 496 introduced environment marker allow declare dependency conditional environment package installed among thing useful cross compilation add python 3.7 trove classifier add python_requires matching test matrix prevent pip finding version pytype support given version python unfortunately python_requires declaration made default acceptable version without yanking old version pip install pytype unsupported version simply fall back latest release without python_requires declaration ala still seems like win add python 3.5 trove classifier move static build option setup.cfg using declarative build file declarative option current best practice since make much easier parse metadata project without executing arbitrary code change minimum required version setuptools 30.4 released december 2016 add pyproject.toml file build system declares build system python dependency required build project trigger pep 517 build present pip installs add pyproject.toml manifest.in include pyproject.toml sdists trigger pep 517 build installing sdist add license build metadata use find_packages populate package list prevent issue like 372 though technically 372 would still caused problem __init__.py missing add project_urls allows pypi give multiple link various aspect project see example render urllib3 pypi page http pypi.org project urllib3 1.25.8 move version setup.cfg importing fixed module built capability declarative build file need invent,,
1232,54f7f3691a616ff428f23757eac4c252988ab401,ebecca Chen <rechen@google.com>, 2020-02-06 16:07:20 -0800,510, merge pull request 510 google google_sync add __init__ file two tool module 508,,
1233,543dba08f24ce4e45a44c749f44a0d75a5fcbcd4,aul Ganssle <p.ganssle@gmail.com>, 2020-02-06 15:25:50 -0800,508, add __init__ file two tool module 508 two module declared module __init__.py missing python compensates considering namespaces annotate ast command probably others broken python 2.7 due lack __init__.py resolve 508 piperorigin revid 293690334,,
1234,a735b1109229cacfcbbf183d1ea85d2c31065d70,ebecca Chen <rechen@google.com>, 2020-02-05 20:36:11 -0800,506, merge pull request 506 google google_sync google sync,,
1235,73d609529496c6b63b070456a34322b33fc2ea20,echen <rechen@google.com>, 2020-02-05 17:50:08 -0800, , pypi release typeshed update piperorigin revid 293493488,,
1236,8bdba58ea14342ceece37cb93659d9e9d847eb6e,echen <rechen@google.com>, 2020-02-03 11:46:21 -0800, , let string match supportsint supportsfloat fixed bug python typeshed str.__int__ str.__float__ defined python piperorigin revid 292969221,,
1237,de3a1740fa4a48d05ea236193e54de6674bd3b2c,demello <mdemello@google.com>, 2020-01-27 15:24:30 -0800, , fix recognise trailing comma nested multiline literal recognises line lone closing bracket  adjusts typecomments accordingly piperorigin revid 291812672,,
1238,baab89445d667952051ab30c5504e5c455941b03,ebecca Chen <rechen@google.com>, 2020-01-28 15:37:50 -0800,502, merge pull request 502 google update typeshed,,
1239,de85b201b87fee2cc086dcce4050fb59fda05d3b,ebecca Chen <rechen@google.com>, 2020-01-28 15:06:34 -0800, , update typeshed external copy internal typeshed update,,
1240,9e315b940720c5734bcf8c7d683c310202938199,ebecca Chen <rechen@google.com>, 2020-01-24 14:36:12 -0800,498, merge pull request 498 google google_sync google sync,,
1241,0b8eff3d5a76aa15e25c0e715499ad908837061d,echen <rechen@google.com>, 2020-01-24 11:47:29 -0800, , prepare pypi release piperorigin revid 291413279,,
1242,3679960f84dc858da298d0153204189d9d761d70,echen <rechen@google.com>, 2020-01-24 10:10:13 -0800, , update opensource doc piperorigin revid 291393495,,
1243,cee54de620e07f5163661052f8b45775ea7921ee,demello <mdemello@google.com>, 2020-01-23 11:49:53 -0800, , add object signature http github.com google pytype issue 255 piperorigin revid 291213163,,
1244,526c5a3e3531d848660a721055882bdc2ec29faa,ebecca Chen <rechen@google.com>, 2020-01-23 11:49:35 -0800,497, merge pull request 497 google google_sync google sync,,
1245,26829d6c0e2f5bff6d091819f1ea3c59d6619c76,idi Zheng <lidiz@google.com>, 2020-01-23 10:25:42 -0800,496, supporting multiple disabled rule .cfg file 496 currently .cfg file documentation mentioning set multiple disable rule experiment found valid way resolve 496 piperorigin revid 291194196,,
1246,f1bb740f62c39de454c539515ca2ea2c2116a11f,demello <mdemello@google.com>, 2020-01-21 14:39:05 -0800, , update attrs constructor signature reflect latest version piperorigin revid 290825533,,
1247,1d516c6bd52ed0af99c9a771ab43a98d1d25f12e,echen <rechen@google.com>, 2020-01-17 14:47:20 -0800, , allow proto_to_pyi run python figured proto_to_pyi running python meantime workaround get rid pytypeproto failure piperorigin revid 290346123,,
1248,0c2db36d180709586ce779d6eadc76c577071d3a,ytype Team <pytype@googlegroups.com>, 2020-01-17 12:52:48 -0800, , error print expected actual comparison align value clarity old expected self ticket label bgcolor subgraph_name str ... actually passed self ticket label bgcolor subgraph_name none ... new expected self ticket label bgcolor subgraph_name str ... actually passed self ticket label bgcolor subgraph_name none ... piperorigin revid 290324236,,
1249,453b6233045f3da78e2195b05392e9dda23be7ba,echen <rechen@google.com>, 2020-01-17 12:49:16 -0800, , fix python string encoding bug fix status dashboard pytypecheck failure piperorigin revid 290323650,,
1250,0af98bdc871cc5eb911a3447b02a22efa4dd7493,echen <rechen@google.com>, 2020-01-16 15:35:55 -0800, , stop pinning proto_to_pyi python 3.6 change proto_to_pyi take single major python version int rather major minor version tuple stop hardcoding 3.6 requires making entire directory py3 since pytype find python minor version piperorigin revid 290159720,,
1251,a699ebaf565a6d767347d68b9464b028843d2c7d,echen <rechen@google.com>, 2020-01-15 16:25:56 -0800, , track type lambda tyre fix bug python3_convert would put six.ensure_str around lambda piperorigin revid 289961105,,
1252,79d59aeefa8fcb90c6f69d8bf4a50ab7d803d9af,echen <rechen@google.com>, 2020-01-14 18:03:57 -0800, , fix name error type type decorator instantiating function return value call __init__ type parameter value work well module level class decorator since class defined yet reference __init__ end name error luckily actually need call __init__ class since instantiating piperorigin revid 289770640,,
1253,fd7ddc8252971c2168b658bc3c9208897d9fc193,ytype Team <pytype@googlegroups.com>, 2020-01-14 16:46:10 -0800,485, fail mypy style type ignore code ... comment fix http github.com google pytype issue 485 piperorigin revid 289758806,,
1254,f777035042ef1c4aa291a4598a0a3a6264b1eb0c,echen <rechen@google.com>, 2020-01-11 20:33:41 -0800, , avoid analyzing function like object twice comprehension generator look like function pytype need analyzed standalone function piperorigin revid 289289484,,
1255,ce086c5c6ef55364dac96a3c1e97a4a21b1aefeb,ebecca Chen <rechen@google.com>, 2020-01-08 15:35:52 -0800,490, merge pull request 490 google google_sync another pypi release typeshed bug fix,,
1256,0eea6bb623c7c03861318446433b83440aa3b147,echen <rechen@google.com>, 2020-01-08 13:39:28 -0800, , another pypi release typeshed bug fix piperorigin revid 288765173,,
1257,030c013239b9c0e68b612a0d0b68fa5bf57478e7,ebecca Chen <rechen@google.com>, 2020-01-07 14:41:57 -0800,489, merge pull request 489 google google_sync google sync,,
1258,c59d2b3324d45808e7da988153d5a2adf3f0421b,echen <rechen@google.com>, 2020-01-07 14:12:05 -0800, , support type_check_only pyi file since pytype anything decorator parse discard decorator allowed class function http docs.python.org library typing.html http github.com python typeshed pull 3584 piperorigin revid 288569410,,
1259,575389999d39c91e39035acf4b023c7673c8f9f9,demello <mdemello@google.com>, 2020-01-07 11:56:02 -0800, , mark str hashable py3 piperorigin revid 288543043,,
1260,c87d3e297bc594bbd226c4e204de4ba539231021,echen <rechen@google.com>, 2020-01-07 11:37:42 -0800, , fix return bool generator fix http github.com google pytype issue 486 piperorigin revid 288539281,,
1261,469971b878d7b7227ec29c661e75820075a4daa3,echen <rechen@google.com>, 2020-01-07 10:06:23 -0800, , add empty pytype dev guide add developer guide fill throughout quarter piperorigin revid 288519205,,
1262,ca2ea4a5f39cd214735cd481c5017a78617810ca,ebecca Chen <rechen@google.com>, 2020-01-07 10:28:45 -0800,487, merge pull request 487 google google_sync update pytype changelog __version__ pypi release,,
1263,8788b4139fd5079e2e37ca140fa6a61af74eee8f,echen <rechen@google.com>, 2020-01-07 08:33:43 -0800, , update pytype changelog __version__ pypi release piperorigin revid 288503087,,
1264,40580a7a973d7b19b7346d65ab4e8bdc0a292b5b,ebecca Chen <rechen@google.com>, 2019-12-19 15:29:39 -0800,479, merge pull request 479 google google_sync google sync,,
1265,30d72f8afc790ab355bd1040ca3df4e448267078,echen <rechen@google.com>, 2019-12-19 14:51:51 -0800, , bring pytype opensource doc date piperorigin revid 286468588,,
1266,8480c0ecdf061e756932c72697dc37472ee08713,echen <rechen@google.com>, 2019-12-19 14:45:37 -0800, , update roadmap section pytype readme remove window support put thing realistically think time piperorigin revid 286467520,,
1267,955b0e372b16547129c7c4b5fd1d23b94b3d1d57,echen <rechen@google.com>, 2019-12-19 11:26:08 -0800, , late annotation error keep much annotation currently eval_expr produce error entire late annotation evaluated replaced regular annotation part error becomes change eval_expr match regular behavior piperorigin revid 286429562,,
1268,69598de0223ab1d6a2c7224aa1cd5ba2c5f7cf6b,echen <rechen@google.com>, 2019-12-17 15:06:07 -0800, , late annotation wrap eval_expr error invalid annotation currently something like def undefined ... log name error def undefined ... log invalid annotation message body copied name error since annotation eventually quoted log name error case piperorigin revid 286068606,,
1269,2a4a47fbb8b9134d9f7c5bd089b92a2a776a8854,ebecca Chen <rechen@google.com>, 2019-12-17 13:35:40 -0800,478, merge pull request 478 google google_sync google sync,,
1270,6c585bc4af871780957e176610c9da558c9e7669,echen <rechen@google.com>, 2019-12-17 11:50:47 -0800, , prepare pypi release piperorigin revid 286026650,,
1271,69043cf031eeb45720f7ffdccaa35f5ba4095bba,ytype Team <pytype@googlegroups.com>, 2019-12-17 03:11:24 -0800,408, python3 kw_only argument optional default specified may affect library use overlay_utils specifically attr fix http github.com google pytype issue 408 piperorigin revid 285946628,,
1272,fee56b6aa6debb08ee9ecf7e6edd2ef8df1f9fa7,ebecca Chen <rechen@google.com>, 2019-12-12 17:10:35 -0800,477, merge pull request 477 google pypi fix broken link pytype pypi description,,
1273,891378fa337164ba6b79a73a15c342b6abf20013,ebecca Chen <rechen@google.com>, 2019-12-12 16:25:01 -0800, , fix broken link pytype pypi description fix http github.com google pytype issue 239,,
1274,15ec10ec9862281ff19d0c26bd3f57833a7becea,ebecca Chen <rechen@google.com>, 2019-12-11 18:36:04 -0800,476, merge pull request 476 google lint make pytype work recent version pylint,,
1275,7ce1fa11e08f73507a2f3230c7b1d928c26e4172,ebecca Chen <rechen@google.com>, 2019-12-11 16:41:19 -0800, , make pytype work recent version pylint fix http github.com google pytype issue 423,,
1276,f200c4c6803097c0af1c5a8580589ac6bbdcb570,ebecca Chen <rechen@google.com>, 2019-12-11 16:39:26 -0800,475, merge pull request 475 google google_sync remove unnecessary list comprehension,,
1277,27d1efbaff25a02642bdbb37136779714e02f196,echen <rechen@google.com>, 2019-12-11 15:02:05 -0800, , remove unnecessary list comprehension unnecessary comprehension flagged recent upstream release pylint http github.com google pytype issue 423 piperorigin revid 285068776,,
1278,64a04d6f40da82465616fb01cd79dbc1de4d2b67,ebecca Chen <rechen@google.com>, 2019-12-10 14:29:54 -0800,474, merge pull request 474 google google_sync fixed attributeerror python 3.8 466 471,,
1279,cb6953b90ccef8188111e928be1178706ad1e927,r Bin <orbin50@gmail.com>, 2019-12-10 13:17:12 -0800,471, fixed attributeerror python 3.8 466 471 fixed seems close 466 resolve 471 piperorigin revid 284834257,,
1280,a40fb8e07d54aa16a18b09efe6ec5774cf119264,ebecca Chen <rechen@google.com>, 2019-12-10 13:03:44 -0800,472, merge pull request 472 google google_sync google sync,,
1281,e9096a54593932d898b83fbba7cc4f688c9a8b7d,demello <mdemello@google.com>, 2019-12-10 11:53:49 -0800, , refactoring move abstract_utils piperorigin revid 284817437,,
1282,0e46a58333e8b9f7a47fd95326cd52ad01dc5c18,demello <mdemello@google.com>, 2019-12-10 11:45:18 -0800, , add support decorator set attrs default validator property piperorigin revid 284815593,,
1283,56d132da134acf7fd502a8bdc5803cb2f6cfd978,echen <rechen@google.com>, 2019-12-10 11:38:33 -0800, , make two fix lateannotation implementation want touch change anymore since already large found two issue testing incorrect late annotation encountered set none caused crash fixed immediately reporting name error instead function type comment previously supported unquoted late annotation support quoted late annotation initially wanted force quoting late annotation function type comment would make release difficult existing comment fixed instead new implementation also supported unquoted late annotation piperorigin revid 284814174,,
1284,dd0158d2b1089936d716faa68240b0a9c0713fbc,demello <mdemello@google.com>, 2019-12-10 11:37:17 -0800, , fix dataclasses overwrite explicit __init__ method fix http github.com google pytype issue 469 piperorigin revid 284813884,,
1285,414433e3cf5b43c7c78a448f2b295d3deec878a4,demello <mdemello@google.com>, 2019-12-10 11:27:14 -0800, , add support typing.classvar classvars recorded replaced inner type class created also add dataclass attrs support classvar piperorigin revid 284811600,,
1286,895eeaf026e71dc3814c18e6d0447dd43f3144e6,demello <mdemello@google.com>, 2019-12-10 11:20:39 -0800, , internal change piperorigin revid 284810023,,
1287,bb23799e775d2cca857da837d945833324041630,echen <rechen@google.com>, 2019-12-09 18:27:07 -0800, , overhaul lateannotation implementation significantly change forward reference implemented reducing number place need special cased fixing number bug edge case unfortunately avoid breaking existing forward reference support make change apology mega way new late annotation work forward reference encountered immediately evaluate set special flag tell generate lateannotation object instead reporting name error whenever new global defined resolve late annotation refer globals defined resolve remaining annotation real name error still reported lateannotation class defines allowing pretend unsolvable resolution resolved type afterwards expect change break bunch target type error forward reference function type comment submit sorted typeshed update fix http github.com google pytype issue 420 startblock 143674618 fixed piperorigin revid 284678790,,
1288,5c206c276f961cec4ae19be35f60697e2896031e,echen <rechen@google.com>, 2019-12-09 13:35:09 -0800,444, allow typing.anystr used type parameter type macro fix http github.com google pytype issue 444 piperorigin revid 284623803,,
1289,16c4bd78cbdc6a9d9a1c1326421c54cdfec0be43,echen <rechen@google.com>, 2019-12-09 09:43:30 -0800, , support pyfixit piperorigin revid 284572815,,
1290,7744aed8138b548424b7c4a501528b78dff8e61e,ebecca Chen <rechen@google.com>, 2019-12-06 12:56:13 -0800,468, merge pull request 468 google google_sync google sync,,
1291,166427ce3240672f644b94807f0d3abe834110ed,echen <rechen@google.com>, 2019-12-06 10:57:11 -0800, , prepare pypi release typeshed update piperorigin revid 284218861,,
1292,f760609aa071ae8438f059dcff0dbf8c58e17225,echen <rechen@google.com>, 2019-12-05 15:01:31 -0800, , internal change piperorigin revid 284061171,,
1293,aba5cf8d3a9aa3c3f8f81c743e920730e71bfa0b,echen <rechen@google.com>, 2019-12-04 15:53:04 -0800, , allow explicitly passing custom template previously always read template base class typing.generic implemented temporarily changing template pytdclass generic needed explicitly passing template clearer error prone piperorigin revid 283854396,,
1294,35f00a5f436c605f9748519b2862fa2160822d10,echen <rechen@google.com>, 2019-12-03 20:06:39 -0800, , optimize bytecode compilation host target python version match currently want compile source code write temporary file spawn subprocess call read file host target python version match call directly bypassing file write read subprocess call pyfixit piperorigin revid 283675427,,
1295,60d5245d730293732ed57f16133ca79f76f06fe1,ebecca Chen <rechen@google.com>, 2019-12-05 19:31:21 -0800,467, merge pull request 467 google update typeshed,,
1296,618c191287cb25fc44b1ca61bd67448cc771eab7,ebecca Chen <rechen@google.com>, 2019-12-05 18:49:40 -0800, , update typeshed,,
1297,158e593987af245fc2b9eb7b55902ffb6167d4b4,ebecca Chen <rechen@google.com>, 2019-12-03 18:40:06 -0800,465, merge pull request 465 google google_sync google sync,,
1298,0f4b75e9ad289ad65a5993d1ef270cc35058e008,demello <mdemello@google.com>, 2019-12-03 12:21:44 -0800, , fix dataclass.field init true default none set default piperorigin revid 283597323,,
1299,920536a67ca80bb1a116e9344bfb1678eea043c4,echen <rechen@google.com>, 2019-12-02 13:38:54 -0800, , clean refactor code around late annotation collection small improvement mostly late annotation expect break anything pave way substantial change deal late annotation addition trivial change fix typo remove extra whitespace etc. standardized error message wording ambiguous annotation always say must constant previously sometimes used constant sometimes used unambiguous type fixed guard infinite recursion moved node parameter front parameter list method take node made return full error rather message added detail property evaluationerror get message fixed bug copy keyword attribute replaced errorlog.save revert_to easier use contextmanager simplified vm.simple_stack convert current frame refactored little easier understand piperorigin revid 283407413,,
1300,dc86e0e7263fa08c1f233bb53e9ae78f834bfb54,ebecca Chen <rechen@google.com>, 2019-11-29 11:25:18 -0800,463, merge pull request 463 google setup remove pyi_checker pytype setup.py,,
1301,9e16d4a9f80c7289fea1f5228a886602b5e464a8,ebecca Chen <rechen@google.com>, 2019-11-27 13:38:45 -0800,458, merge pull request 458 dlax main pytype single python pytype.single,,
1302,4534334765a1ee71c397bbfba9d6a7f14be82aee,ebecca Chen <rechen@google.com>, 2019-11-27 13:18:38 -0800, , remove pyi_checker pytype setup.py,,
1303,2e27ddea3428b64e0985b708e561b6392b842d1f,ebecca Chen <rechen@google.com>, 2019-11-27 12:50:10 -0800,462, merge pull request 462 google google_sync google sync,,
1304,cacfe7b84e6114cfb4e4afa8a17105e7a294e057,echen <rechen@google.com>, 2019-11-27 10:41:48 -0800, , update pypi version changelog open source release tomorrow fix couple attrs dataclass bug caused refactor yesterday assuming build failure table clean tomorrow morning pypi release otherwise probably get another thanksgiving updating release date piperorigin revid 282796667,,
1305,1c2c3b0997c7950d687b70a2018c8ed23851dde3,echen <rechen@google.com>, 2019-11-27 10:39:22 -0800, , move directory since pytype depend vice versa better pyi_checker project piperorigin revid 282796195,,
1306,a384401e49234d47a7943ad21bcbf0844bb6e23c,enis Laxalde <denis@laxalde.org>, 2019-11-26 22:39:53 +0100, , handle sys.executable possibly none fall back pytype single executable possible use python pytype.single sys.executable none,,
1307,0ee615c4c6fe179e8c2630370e116d1de2155d39,ebecca Chen <rechen@google.com>, 2019-11-26 17:00:55 -0800,461, merge pull request 461 google google_sync google sync,,
1308,6e20ce6aed5ccf86b1f37b0663a3de1a3ed073eb,echen <rechen@google.com>, 2019-11-26 16:18:53 -0800, , make new kwargs copy attrs dataclass decorated class fix attrs bug caused auto_attribs detected piperorigin revid 282660472,,
1309,a1b7b1ed8a152e7e2827eaa7a2ae81d3dedb0ba2,enis Laxalde <denis@laxalde.org>, 2019-11-26 15:17:22 -0800,457, fix argument_parser option 457 except clause refers argument_parser resolve 457 piperorigin revid 282649565,,
1310,21d8b54a60a3532f5f1882c88788b65f316b1662,echen <rechen@google.com>, 2019-11-26 14:36:17 -0800, , fix bug defined dictionary frame name dictionary attribute name value used dictionary attribute name value led weird error attribute name reused dataclasses piperorigin revid 282642110,,
1311,482a6029dea81239cac1d9b123d5857647bd6fcc,demello <mdemello@google.com>, 2019-11-25 16:04:15 -0800, , detect raise error recursive type alias rather crashing due way handle annotation error occurs type alias used rather defined piperorigin revid 282453014,,
1312,b2bcbf0431ef944087df3bcad917d07e8ea06efb,echen <rechen@google.com>, 2019-11-25 11:48:43 -0800, , simplify vm.local_traces previously vm.local_traces used get attribute order dataclasses also recorded attribute value used kept right order attrs instead vm.local_traces changed vm.local_ops record variable name operation annotate assign order done changed unordered dict variable name value take new argument ordering used request either attrs dataclasses ordering also fixed bug behavior attr.s auto_attribs true annotated attribute picked follow dataclasses ordering piperorigin revid 282402682,,
1313,885cb4214c0f7cbc4f4e2546af9791c5c0907990,enis Laxalde <denis@laxalde.org>, 2019-11-21 16:06:03 -0800,454, add job option pytype 454 option simply passed ninja thus enabling parallel build resolve 454 piperorigin revid 281854519,,
1314,96cf3aabe03fee951e14baa86b4097e6dd9824fb,enis Laxalde <denis@laxalde.org>, 2019-11-17 15:40:01 +0100, , use python pytype.single executable ninja command ensures pytype single run interpreter pytype invoked,,
1315,2f47feb8bdfade69db2ec9c402c98d8c0346b2e2,enis Laxalde <denis@laxalde.org>, 2019-11-23 20:48:14 +0100, , rename pytype.main pytype.single pytype.main actually running pytype single somewhat confusing situation remains time pytype executable pytype single see e.g commit 3de77436 pytype.single module clarifies situation underlying motivation make possible run pytype single python pytype.single following move pytype executable commit,,
1316,929295e92251bc78d4487dedd5c027948f996c7c,ebecca Chen <rechen@google.com>, 2019-11-19 21:33:33 -0800,456, merge pull request 456 google google_sync google sync,,
1317,79f8d35d93f8798d3bf7be0120c8a058a8af5280,enis Laxalde <denis@laxalde.org>, 2019-11-19 15:01:32 -0800,453, add top level __main__.py module 453 allows running pytype python pytype resolve 453 piperorigin revid 281386933,,
1318,214eaccc8a5a901fd2ad34fa901e0f29fd187d87,echen <rechen@google.com>, 2019-11-19 14:34:53 -0800, , fix unittest pickle usual idea fix work tried random thing main_test stopped failing piperorigin revid 281381444,,
1319,bea9ebe957abb5755621f6f3144a589345806851,echen <rechen@google.com>, 2019-11-19 11:31:57 -0800, , cleanup reduce number public method making instance thing counted eight different method variation task change remove three make private make private renames inlines improves documentation rest piperorigin revid 281340069,,
1320,b348b37c84bbcf2e13c19da6f59511485609b937,echen <rechen@google.com>, 2019-11-18 14:30:33 -0800, , bit cleanup around pytype late annotation support poking around pytype handle late annotation noticed minor thing could cleaned default new_locals parameter false since used bool f_globals f_locals parameter vm.make_frame passed caller need optional f_locals check unnecessary one line function name imo clear inlining function make behavior obvious piperorigin revid 281154376,,
1321,e3a41fb38517a1969be7582e7e93c59d674f2f50,ebecca Chen <rechen@google.com>, 2019-11-13 15:25:06 -0800,452, merge pull request 452 google google_sync google sync,,
1322,19c49443e57333c820d75b342ab54df21a9b72b2,echen <rechen@google.com>, 2019-11-12 16:29:28 -0800, , revert problematic pickle change change likely caused become flaky piperorigin revid 280082228,,
1323,0d8c18f332b08d3a88037401be9ae201bc5c13d7,echen <rechen@google.com>, 2019-11-11 14:29:20 -0800, , enable ignored metaclass also fix lint error test py3 test_classes backslash line continuation sure lint complained line countless others pretty much thing piperorigin revid 279817795,,
1324,bdd600e5658f30206571d4799d95a77ae756a331,ebecca Chen <rechen@google.com>, 2019-11-08 15:02:26 -0800,451, merge pull request 451 google google_sync google sync,,
1325,52d716b167f3473a6cb4e1b6d35e92ce4fae4341,echen <rechen@google.com>, 2019-11-08 14:02:04 -0800, , add short readme annotate ast note incomplete resolve http github.com google pytype issue 419 piperorigin revid 279385767,,
1326,ac7719bc098d1c95f40e6bea828474260fdaa8d4,echen <rechen@google.com>, 2019-11-08 13:34:24 -0800, , stop pinning clif_to_pyi python 3.6 part 3.6 3.7 upgrade work fixing place pytype related tool assume 3.6 python version clif_to_pyi easy case doe use minor version set python_version flag take single int major version instead major.minor tuple tricky bit call pytype pyi parser requires major minor python version since ultimately want give pytype ability take major version well say python_version pytype use whatever latest runtime version pas major version pytype added new utils method convert major minor version method requires host python work completely optimistically pytype running python default time rest upgrade work done hardcode python version method return python also removed old unnecessary logic parser set python version default version none passed piperorigin revid 279379968,,
1327,560445f529f508fae680677fb92213a8a9c60623,echen <rechen@google.com>, 2019-11-07 10:11:12 -0800, , make dataclass checking none stricter squeegee piperorigin revid 279112115,,
1328,744d427c6eb8592481e920bf973fb0fd74d41b25,ytype Team <pytype@googlegroups.com>, 2019-11-07 09:36:17 -0800, , internal change piperorigin revid 279104554,,
1329,459ea901e0118cfbad5a7808622a4cc240498ac2,ebecca Chen <rechen@google.com>, 2019-11-06 13:23:23 -0800,447, merge pull request 447 google google_sync google sync,,
1330,059d213832e60f6db6faf4cad76e7724f3b6b653,ytype Team <pytype@googlegroups.com>, 2019-11-04 10:48:36 -0800, , use tuple none default value next call result next unpacked tuple fail unpack default value none returned piperorigin revid 278415824,,
1331,8957d69f30b7d1bd2980bd594141e457b3d103aa,urali <murali@google.com>, 2019-10-31 09:52:26 -0700, , internal change piperorigin revid 277742269,,
1332,7f9cc669d6bbb5749744ebda464dc4e7315cdad2,echen <rechen@google.com>, 2019-10-30 10:13:19 -0700, , use pickle protocol instead pytype python introduced new pickle protocol highest protocol however still need python compatible piperorigin revid 277530228,,
1333,07eb441dbd2473de2b88aecff523ba8d009be201,echen <rechen@google.com>, 2019-10-28 17:39:38 -0700, , fix crash caused empty arg passed function via starargs piperorigin revid 277179811,,
1334,957bc69ace836632f98be635fc30bc03ac6d8d80,echen <rechen@google.com>, 2019-10-28 14:51:30 -0700, , temporarily make dataclass error checking lenient none piperorigin revid 277148225,,
1335,2d22181b26d78979feeb4d6548614882c30039dc,echen <rechen@google.com>, 2019-10-28 14:21:36 -0700, , check attribute value dataclasses full annotation previously annotation like optional str turned variable value none str value checked none also removed unused node parameter merge_classes piperorigin revid 277141785,,
1336,ba56c97748dba890afc00e9f40f4f85e1319258b,echen <rechen@google.com>, 2019-10-28 11:20:44 -0700, , handle non utf8 string literal without crashing pytype host py3 piperorigin revid 277105148,,
1337,55dcaa09d1973f17cef60b29392857be46f9fa59,ebecca Chen <rechen@google.com>, 2019-10-28 12:01:45 -0700,442, merge pull request 442 google google_sync google sync,,
1338,b7306328bd899c5fa0bf5127160960e8607e1ad6,echen <rechen@google.com>, 2019-10-28 11:13:28 -0700, , move test py3 piperorigin revid 277103388,,
1339,506874843dde928a9bf0ec9d4accb085fa56be9b,echen <rechen@google.com>, 2019-10-25 13:29:51 -0700, , upgrade typed_ast latest github version upgrade done qu4 checkout followed qu4 pop revert patch removing operation newest typed_ast version copybara config copybara third_party typed_ast copy.bara.sky destination upgrade qu4 push qu4 push fix code qu4 refresh necessary patch reapplied piperorigin revid 276749507,,
1340,0bedef4e6a04c255fd66ca5ec614781dd374769c,echen <rechen@google.com>, 2019-10-24 16:50:53 -0700, , slightly reformat annotation type mismatch noticed error formatted msg annotation blah assignment blah annotation type mismatch change formatted msg annotation type mismatch annotation blah assignment blah piperorigin revid 276594456,,
1341,04c348564a222df7f5cc26a14a57004907a8abfd,ytype Team <pytype@googlegroups.com>, 2019-10-23 14:49:05 -0700, , change builtin stdlib builtins kythe sense rather part python standard library piperorigin revid 276356037,,
1342,fa38994ba3fc35810b90714fb187d4e77b1ea9fe,sudol <tsudol@google.com>, 2019-10-23 14:03:23 -0700, , unknown function default use variable instead raw unsolvables reason show class syntax namedtuples sure piperorigin revid 276346568,,
1343,e901ca3773d9b3879729c10f85a7d8087193ee0e,sudol <tsudol@google.com>, 2019-10-23 10:35:25 -0700, , make typing.counter generic pytd definition typing.counter used instead type var class could specialized fix small error pytd def counter also add test typing.counter ensure new pytd def work correctly piperorigin revid 276303583,,
1344,e49f7350d4932e6a4ab5185a17927879e686ae8a,demello <mdemello@google.com>, 2019-10-22 13:03:39 -0700, , temporarily disable ignored metaclass error release piperorigin revid 276126622,,
1345,eef238b37ba5e7ce30bbdbf3f57dc278a286d5b1,ebecca Chen <rechen@google.com>, 2019-10-17 16:02:08 -0700,439, merge pull request 439 google google_sync google sync,,
1346,7bcb44d7ed07a8f30f4fea51848fd06595795c46,echen <rechen@google.com>, 2019-10-17 15:11:46 -0700, , fix pytype crash caused adding late annotation class.members piperorigin revid 275348523,,
1347,3abb10baa897ba1e9f584dff51bd501cc247b6ca,echen <rechen@google.com>, 2019-10-17 14:19:36 -0700, , update pytype __version__ changelog pypi release piperorigin revid 275337350,,
1348,03b9bcfa2cfea394c97834af3ead7765876fb0c6,ytype Team <pytype@googlegroups.com>, 2019-10-17 12:02:46 -0700, , change pytype kythe builtins corpus name generic pybuiltins process fix bug language omitted stdlib vnames piperorigin revid 275308594,,
1349,852cd2d10ee29538b5e5c440c045fd441f9e68fe,echen <rechen@google.com>, 2019-10-16 16:26:47 -0700, , change subprocess call handle space python exe path also cleaned old cruft accumulated pytype.pyc touch often fix lint error test pass along command line argument python exe need separate list rather string remove python_version argument argument needed case python_exe none passed place pyc_test better test construct correct python_exe argument remove unused method fix http github.com google pytype issue 437 piperorigin revid 275138827,,
1350,32e48826a4eeaf2a5964aab51bc111c280d0a0dc,ebecca Chen <rechen@google.com>, 2019-10-16 16:36:25 -0700,438, merge pull request 438 google google_sync documentation edits wording grammer cleanup 431,,
1351,7b04bee96711f4d1f1138255353ccc5f4c52c31c,ictoria Zhong <SemicolonExpected@users.noreply.github.com>, 2019-10-16 15:46:11 -0700,431, documentation edits wording grammer cleanup 431 need meaning replace semicolon inferred static analyzer dont execute code run resolve 431 piperorigin revid 275130550,,
1352,d1a8e6277c4a350b83d93b09dc1619cab10b90a7,ebecca Chen <rechen@google.com>, 2019-10-15 17:43:35 -0700,436, merge pull request 436 google google_sync update readme.md 433,,
1353,d00b44148ad6a8826e7cfa4cd6c46ec79917d48e,lan Yee <alanyee@users.noreply.github.com>, 2019-10-15 16:31:48 -0700,433, update readme.md 433 add link license file resolve 433 piperorigin revid 274914616,,
1354,46a743a6a1061a84e408e6f96beb2094fcd82a15,ebecca Chen <rechen@google.com>, 2019-10-15 16:16:42 -0700,435, merge pull request 435 google google_sync google sync,,
1355,24de68be825bb6bdb93b5a78eb4b317c44e676c0,echen <rechen@google.com>, 2019-10-15 15:38:44 -0700, , add missing main field sorry missing previous unlike py_binary always requires main field piperorigin revid 274903831,,
1356,2b6fdec769163ecf9019b5b0f55a015aad4d75b3,echen <rechen@google.com>, 2019-10-15 14:35:39 -0700, , fix incorrect cmake rule name py_binary piperorigin revid 274889925,,
1357,95274983cd539c82b517abe5f739fce9d6922beb,echen <rechen@google.com>, 2019-10-15 14:20:26 -0700, , support pep 484 empty tuple syntax pyi file fix http github.com google pytype issue 432 piperorigin revid 274886637,,
1358,85fd95882df4671898fae8cf06dfc6f4d4ea3a7d,echen <rechen@google.com>, 2019-10-15 13:56:24 -0700, , fix pyi parser handle trailing comma namedtuple definition fix http github.com google pytype issue 434 piperorigin revid 274881013,,
1359,4703f217e055d13c5ac016c04c010accc7314d6b,echen <rechen@google.com>, 2019-10-15 12:09:02 -0700, , fix handling nested class inside inactive condition http github.com python typeshed pull 3346 piperorigin revid 274858854,,
1360,9dd7db015535fbf1b0b391db81a9902ed16a0619,demello <mdemello@google.com>, 2019-10-15 10:35:00 -0700, , fix record dataclass attrib field cls.members piperorigin revid 274836283,,
1361,6546f25c5694f4cf9b8101244ecac19cd912fcac,echen <rechen@google.com>, 2019-10-14 13:52:29 -0700, , add simple binary trace tyre make debugging easier piperorigin revid 274652772,,
1362,be7a93f43d0fe7d694d03dd0d1d2999b52bbea24,echen <rechen@google.com>, 2019-10-14 12:48:25 -0700, , clean cruft pytype verbosity change set verbosity early possible doe logging remove unnecessary logic save restore verbosity py3checker piperorigin revid 274637960,,
1363,ab9ee4bf901bddf854c5a50ea912e707452ea028,echen <rechen@google.com>, 2019-10-11 23:22:38 -0700, , permanently change logging level pytype called library previously creating config.options object default option changed logging level change logging level changed pytype start running original logging level restored afterwards verbosity workaround removed also fixed couple lint error confirmed setting verbosity still work pytype python3_convert modernize show info log tyre piperorigin revid 274311693,,
1364,c4bfbefe390bf7d978a6b76c722f1524ab83986f,ebecca Chen <rechen@google.com>, 2019-10-10 13:19:27 -0700,430, merge pull request 430 google google_sync google sync,,
1365,1ce66a7a0062747b409ee5e75beb27ced17a2d55,echen <rechen@google.com>, 2019-10-10 10:13:38 -0700, , support additional syntax pyi parser http github.com python typeshed pull 3321 piperorigin revid 273980958,,
1366,a82f8b0505429272e4889ec6e0ba144430c8afb5,demello <mdemello@google.com>, 2019-10-08 14:58:55 -0700, , fix remove classmethods staticmethods auto_attribs piperorigin revid 273612569,,
1367,86f97029d6d3a179d3aeca7180322fd19aad181a,echen <rechen@google.com>, 2019-10-07 16:44:58 -0700, , fix crash caused call method piperorigin revid 273406727,,
1368,5a229d408843ef4100f9358b0bb6e969e7b7c4cb,echen <rechen@google.com>, 2019-10-07 15:37:54 -0700, , fix crash using looking status dashboard noticed crash caused trying match type none piperorigin revid 273392251,,
1369,cac39cb36a123084aeb5f926fe2ff0988cb9d57c,ebecca Chen <rechen@google.com>, 2019-10-07 16:03:08 -0700,429, merge pull request 429 google google_sync google sync,,
1370,59a005df34d91dea2e1e4e5b775c2c79de8baec0,demello <mdemello@google.com>, 2019-10-04 14:08:55 -0700, , allow type comment pytype directive without space accepts following pytype disable foo type bar well variant space piperorigin revid 272954398,,
1371,e5c52b6d767f6c8fe94ee2c55be852f053b6b4d9,echen <rechen@google.com>, 2019-10-03 16:42:53 -0700, , bind instance attribute node first accessed getting odd error first time attribute accessed place reachable later access easiest fix bind attribute root node always visible piperorigin revid 272769229,,
1372,7d956cf4271b534f39a980f6a2e8580dfa05eaad,echen <rechen@google.com>, 2019-09-30 15:20:18 -0700, , look ahead line trace match piperorigin revid 272077490,,
1373,b44ee4770d32f9e752901feb4d2617b4e3ea14e2,ebecca Chen <rechen@google.com>, 2019-09-27 16:45:55 -0700,427, merge pull request 427 google google_sync copy numpy stub pytype used externally,,
1374,45f5bc24d704500d5dc8227bd7015859efa5097a,echen <rechen@google.com>, 2019-09-27 15:01:42 -0700,391, copy numpy stub pytype used externally attr stub keep two copy one pytype opensource user one third_party order import path resolve properly fix http github.com google pytype issue 391 well part anything piperorigin revid 271654867,,
1375,786460a925e3caebd61107dc198ad1e4b021e599,ebecca Chen <rechen@google.com>, 2019-09-27 14:52:50 -0700,426, merge pull request 426 google google_sync google sync,,
1376,2973d065d44ab63e9e14c9c7241a856512282d86,echen <rechen@google.com>, 2019-09-26 13:26:22 -0700, , add skipped test showing pytype bug piperorigin revid 271417853,,
1377,e8e72516d4453eddb12d3631364065dac3fbece7,demello <mdemello@google.com>, 2019-09-25 12:47:03 -0700, , constructing method overlay validate signature note resubmitting rollback reproduce failure piperorigin revid 271184242,,
1378,b1d95a01adc0b38cee56ce6a02973c6245000052,ebecca Chen <rechen@google.com>, 2019-09-27 13:42:38 -0700,425, merge pull request 425 google google_sync resolve todos pytype,,
1379,c18ee628431c2a94a078a9702eae7ef607176c99,echen <rechen@google.com>, 2019-09-24 12:15:12 -0700, , resolve todos pytype todo errors.py allow filename none longer necessary fix use filename sorting error used outside pytype pytd doe make sense move pytd_utils remove todo referencing longer existing name remove todos review improve pytd file active use long enough pretty sure reasonable move py2 test whose corresponding py3 bug fixed target independent remove look already fulfilled todo py3 py2 vs. py3 test bucketization long done complete related todo remove todo cfg.py basically reference file point since real code ported also fixed lint error encountered squeegee piperorigin revid 270959139,,
1380,a100d25110b0c87b2108275984f3581a0fe8d7db,ebecca Chen <rechen@google.com>, 2019-09-27 12:20:30 -0700,424, merge pull request 424 google pylint temporarily pin older version pylint,,
1381,2a902abd73f60aa60dfc28f59a4c526e18686598,ebecca Chen <rechen@google.com>, 2019-09-27 11:38:38 -0700, , previous fix wrong try quote instead okay getting embarrassing,,
1382,3813b78893b83afde726b81a6cc67cb5ea0dd5d9,ebecca Chen <rechen@google.com>, 2019-09-27 11:29:12 -0700, , fix version range syntax,,
1383,94fbf426388fe62c4ca03f9b15b8722319df833d,ebecca Chen <rechen@google.com>, 2019-09-27 11:23:41 -0700, , request range version rather exact one,,
1384,087c9e33f4874fd9442fe476e8d03ca421b74da2,ebecca Chen <rechen@google.com>, 2019-09-27 11:16:33 -0700, , temporarily pin older version pylint see http github.com google pytype issue 423,,
1385,c9f8e0e44785f3b02fda54b642da68c51d9e5f6c,ebecca Chen <rechen@google.com>, 2019-09-23 13:39:37 -0700,421, merge pull request 421 google google_sync google sync,,
1386,74896cc387cc1b46872db2c7548d895800cdc279,echen <rechen@google.com>, 2019-09-23 11:34:01 -0700, , remove unused import overlay_utils opensource linter unhappy import piperorigin revid 270722708,,
1387,88d0044d0e9e4dd8969037f82d5bf513d4930fad,demello <mdemello@google.com>, 2019-09-20 14:51:51 -0700, , automated rollback changelist 270313313 reason rollback broke tap original change description constructing method overlay validate signature  piperorigin revid 270355446,,
1388,e52d87eadc623a6dc3bf0967d5a5ce14784e5652,demello <mdemello@google.com>, 2019-09-20 11:25:54 -0700, , constructing method overlay validate signature piperorigin revid 270313313,,
1389,9911f65f2283d3183e093c72e81a4b332fd212b5,demello <mdemello@google.com>, 2019-09-19 17:03:06 -0700, , support setting default check type default factory match annotated type also add new error annotation type mismatch pyfixit piperorigin revid 270157816,,
1390,13687d1d41908ec680ff0c2a86fd2690242c5dc4,echen <rechen@google.com>, 2019-09-19 16:19:58 -0700, , improve error reporting python metaclasses discussed pytype meeting still respect __metaclass__ avoid weird follow error report error attribute definition pyfixit piperorigin revid 270149405,,
1391,6eeac23625397557fa1298406f1f82265bb2767e,echen <rechen@google.com>, 2019-09-19 13:16:01 -0700, , fix matching anystr type parameter function accepts callable containing single type parameter pytype would allow anystr match type parameter fixing bug allows remove unnecessary overload builtins pyfixit squeegee piperorigin revid 270109463,,
1392,bcc86d81512008e6d3d7f7cf3ff23b1f10590b72,demello <mdemello@google.com>, 2019-09-18 18:36:42 -0700, , separate constructing applying class decorator make abstract decorate method modifies pytype class object place also add support argument dataclass pyfixit piperorigin revid 269936625,,
1393,c9671038fb53796c6818d28fd17bb9c974f9782a,demello <mdemello@google.com>, 2019-09-18 16:49:59 -0700, , add dataclass overlay factor base class attr_overlay modifies vm.py trace annotation variable pyfixit piperorigin revid 269920349,,
1394,01316989d11b140a57e6a761d046aafa5ce8bb5e,ebecca Chen <rechen@google.com>, 2019-09-19 17:08:23 -0700,418, merge pull request 418 google google_sync google sync,,
1395,75c9fa73a8654e70ff4cb5d9439b89e0a132bed7,echen <rechen@google.com>, 2019-09-18 15:32:43 -0700, , add support operator trace tyre operator needed get type string interpolation since supporting binary operator generally complicated punt operator returning notimplemented match_binop pyfixit piperorigin revid 269905235,,
1396,eb443792ece4e1017133cf2d223948ee802f9595,echen <rechen@google.com>, 2019-09-18 12:38:58 -0700, , keep going pytype analysis recursion encountered previously time function called pytype would analyze code occurred self call bug manifested adding six.ensure_str around str str construction occurred right recursive call fix catch recursion error immediately occurs return unsolvable previously catching stack aborting analysis early pyfixit piperorigin revid 269866945,,
1397,1778f6d96b834961ac5a5243941d3391eeee7ff0,echen <rechen@google.com>, 2019-09-17 17:06:03 -0700, , look ahead line tracing function call line number call_ opcode last line call second last last contains closing parenthesis line number ast node first line easiest workaround look ahead line opcode picked attribute lookahead value seemed good pyfixit piperorigin revid 269687977,,
1398,08fb467644de421eb74929a1bab38b50e89e258a,echen <rechen@google.com>, 2019-09-17 15:35:02 -0700, , add missing __qualname__ attribute function pyfixit piperorigin revid 269669953,,
1399,bf322fa72e8ce6f731d77c2fd39ec6c87a7c4948,echen <rechen@google.com>, 2019-09-17 15:34:17 -0700, , recognize py2 metaclass syntax py3 previously pytype recognized __metaclass__ ... setting metaclass python even though doe nothing useful fixing issue one line change rest shuffle test around tweak documentation pyfixit piperorigin revid 269669807,,
1400,ccb1e81a7110c7a6df9b5d70bcc2f59b6957ea37,ebecca Chen <rechen@google.com>, 2019-09-17 15:01:48 -0700,415, merge pull request 415 google setup add pytype overlay new subpackage,,
1401,49e6c735d23d044d69acd73be1ac16fe4781ea26,ebecca Chen <rechen@google.com>, 2019-09-17 15:01:35 -0700,416, merge pull request 416 google google_sync google sync,,
1402,44f122935d682a3af3e1c2a5b6f7a2b7a77ef9fb,echen <rechen@google.com>, 2019-09-17 13:44:30 -0700, , make pytype overlay work opensource build edits cmakelists.txt file make test pas add empty overlay __init__.py subpackage recognition python also opened http github.com google pytype pull 415 list overlay setup.py package piperorigin revid 269645358,,
1403,6964cb0b3033cdb09db032a56f5f7a2936c8339d,echen <rechen@google.com>, 2019-09-17 11:23:47 -0700, , update pytype __version__ changelog pypi release http dashboard pytype_status look good piperorigin revid 269613231,,
1404,034863163714c15736b562392fce4b3af345c826,demello <mdemello@google.com>, 2019-09-16 15:46:59 -0700, , move overlay subdirectory note due circular import issue moved build target piperorigin revid 269438897,,
1405,103f53d172885f1da6c54fc29980dd9ec086b8b9,iotr DomaÅski <6.domandinho@gmail.com>, 2019-09-16 13:27:46 -0700,412, temporary fix sorting error 412 alternative way avoid exception sorting error resolve 412 piperorigin revid 269407191,,
1406,bc7c5858f86a659c970ad12ef8709f9c3b4e7465,demello <mdemello@google.com>, 2019-09-11 11:18:07 -0700, , fix xref issue exposed third_party aimee clara2_labs core clara_slots fix pytype trace lateannotations handle multiline function definition handle class definition within function body crash callgraph generator pytype annotated traced function properly piperorigin revid 268500582,,
1407,c3528038d08a395276c66c0dd0a210346905f28c,ebecca Chen <rechen@google.com>, 2019-09-17 12:33:34 -0700, , add pytype overlay new subpackage,,
1408,95ebca39d72567ef5e8a4be86f1787893a39184d,ebecca Chen <rechen@google.com>, 2019-09-06 17:01:30 -0700,404, merge pull request 404 google update typeshed,,
1409,435f9be361213b7bc2d0e628f166c53c8e972fe1,ebecca Chen <rechen@google.com>, 2019-09-06 14:36:04 -0700,389, update typeshed update contains fix http github.com google pytype issue 389 tempfile change help pytype distinguish bytesio textio test,,
1410,db1fca13dd8da76841aafbee25302bd35a83cbdf,ebecca Chen <rechen@google.com>, 2019-09-06 14:13:03 -0700,403, merge pull request 403 google google_sync google sync,,
1411,4694eb08680a573412f28af4a6d7b42f785a6245,echen <rechen@google.com>, 2019-09-06 11:37:34 -0700, , update pytype __version__ changelog pypi release piperorigin revid 267640611,,
1412,95ee65b562157e413c1c6ef15f4cb8b915445736,anujdhir <tanujdhir@google.com>, 2019-09-03 11:16:18 -0700, , update write return int return number byte written see also http github.com python typeshed blob b294782183 stdlib typing.pyi l470 piperorigin revid 266973062,,
1413,5e8fb38a0c7f086098682fefe57b36051c361507,demello <mdemello@google.com>, 2019-08-29 16:22:29 -0700, , fix proto1_convert disable callgraph generation developing feature fix leftover item piperorigin revid 266254339,,
1414,2edda9afc476879f6d19232c006d9e6914b41ddf,ebecca Chen <rechen@google.com>, 2019-09-05 15:18:40 -0700,402, merge pull request 402 google update typeshed,,
1415,e1dc0c70ec8c624d5431a5377855576de1f8be4a,ebecca Chen <rechen@google.com>, 2019-09-05 12:27:31 -0700, , update typeshed,,
1416,5445b20ec169b3d6f0aa8cbf8d567183f0a6ceec,ebecca Chen <rechen@google.com>, 2019-08-29 15:32:44 -0700,399, merge pull request 399 google google_sync update pytype __version__ changelog pypi release,,
1417,8aa6ff32ff5433685f054d117ada38d9fe0f0cb7,echen <rechen@google.com>, 2019-08-29 14:44:57 -0700, , update pytype __version__ changelog pypi release http dashboard pytype_status show handful failure none look like pytype bug piperorigin revid 266233511,,
1418,2e89a7bafc40f32fe3f5b151368180fad3da6889,ebecca Chen <rechen@google.com>, 2019-08-28 17:51:15 -0700,398, merge pull request 398 google update typeshed,,
1419,3d82d9be742b6197e79805090c9a3bf0e70f2646,ebecca Chen <rechen@google.com>, 2019-08-28 17:13:58 -0700, , update typeshed,,
1420,a5c85aaca0534730974c1c6fe6f625b1e413fa7c,ebecca Chen <rechen@google.com>, 2019-08-28 16:51:43 -0700,397, merge pull request 397 google google_sync google sync,,
1421,afdbe75ebad61ceacef45f35ce61bf0965e043e2,echen <rechen@google.com>, 2019-08-28 14:47:26 -0700, , use instead six.ensure_str open source test complaining six.ensure_str existing python version since already compat function doe thing easier switch figure going six piperorigin revid 265998386,,
1422,80d1ff28ae460a5681850e2273cbf34b2f12919d,echen <rechen@google.com>, 2019-08-28 12:17:15 -0700, , move type annotated test appropriate bucket piperorigin revid 265965570,,
1423,fca9a22b5a683fead5adcda4b525b21099a8384c,echen <rechen@google.com>, 2019-08-28 11:58:10 -0700, , fix crash caused variable binding piperorigin revid 265961535,,
1424,b70b072c2a5c6696d6e25eba499e9afa3c9e0b4d,demello <mdemello@google.com>, 2019-08-28 11:50:49 -0700, , use first line class body end classdef class definition lot corner case rather try account simply bound end def class statement first line body piperorigin revid 265959920,,
1425,f463ac43935be5a1ac7892e9d173c12447f5169b,demello <mdemello@google.com>, 2019-08-28 10:47:53 -0700, , use function call record infer type parameter piperorigin revid 265944009,,
1426,63d198868bf991e026246b50cf8558a8a63f7051,demello <mdemello@google.com>, 2019-08-27 11:25:57 -0700, , fix property generic class able annotated class type params piperorigin revid 265727845,,
1427,33cb76fbffe3d749926f0682faeeae88c6797f77,echen <rechen@google.com>, 2019-08-26 15:26:22 -0700, , trace binding function call together change allows better handle multiple named function call line piperorigin revid 265553790,,
1428,76ea6e6637392c1dc63efd863b5f3dc3f017a97b,echen <rechen@google.com>, 2019-08-26 13:53:43 -0700, , implement subscript access add method avoid tracing function call binary operation also noticed hack used avoid tracing function call property broken replaced hack one change _get_traces match either single symbol tuple symbol match __getitem__ __getslice__ move attribute matching test test case piperorigin revid 265533024,,
1429,3ce6717939a17d2ac54ff0b162ba1056280d3605,echen <rechen@google.com>, 2019-08-26 12:07:35 -0700, , add experimental precise return mode pytype mode cause pytype use first return type find case failed function call rather immediate purpose improve opcode tracing type error immediately cause type information lost also potential pytype improvement worth experimenting piperorigin revid 265510179,,
1430,33f1cc5cf5d1ae2343d47e24e7c9964d975209b2,echen <rechen@google.com>, 2019-08-23 15:13:05 -0700, , support matching typing.literal function parameter change able support literal typeshed involve enums squeegee piperorigin revid 265144891,,
1431,0a5639e764bee28b8064e1a080925f0d82c8f01b,echen <rechen@google.com>, 2019-08-23 13:24:25 -0700, , rewrite google_utils utils file pytype tool xref found one test failure also python test passing locally failing even start travis hopefully transient issue piperorigin revid 265121559,,
1432,519ba5d5fc50b092f39491d402feff0d8600b63d,echen <rechen@google.com>, 2019-08-23 11:11:27 -0700, , copybara ignore pytype cmake change directory closely tied pytype build_scripts already ignored affect open source test piperorigin revid 265093693,,
1433,0e8e75a651c2ae9a88632d6d35d452de948939d6,ebecca Chen <rechen@google.com>, 2019-08-28 15:39:26 -0700,396, merge pull request 396 google travis add verbose mode print failing test log stderr,,
1434,98c568ef8693dd2e58c239a64d3166af64e14905,ebecca Chen <rechen@google.com>, 2019-08-28 15:00:01 -0700, , print log stderr rather stdout,,
1435,40af9428d0e85e74b9192d92da93286eb3431a2a,ebecca Chen <rechen@google.com>, 2019-08-28 14:41:04 -0700, , add verbose mode print failing test log stdout currently test fails travis get information except test name path log file access instead print log file stdout,,
1436,09648a9b088d244da86e0548ca4ea417c3de8c49,ebecca Chen <rechen@google.com>, 2019-08-23 18:20:27 -0700,395, merge pull request 395 google google_sync google sync,,
1437,a7aa8fc5e1104d333177348d1b390a74efde86e5,echen <rechen@google.com>, 2019-08-23 10:17:21 -0700, , remove unused import version check hack xref import change get open source test passing also requires http github.com google pytype pull 394. longer need version check test piperorigin revid 265080707,,
1438,bd9263f5431293dc5bba8f168bc30591063744f7,echen <rechen@google.com>, 2019-08-22 18:57:17 -0700, , import readme change piperorigin revid 264968002,,
1439,0f7f3b5d6d5c8e28eea5b0642f5885a9770acf80,demello <mdemello@google.com>, 2019-08-22 16:59:37 -0700, , refactor callgraph generator additional change add slot top level module function augments functiondef node pytype function signature piperorigin revid 264950633,,
1440,61e8cebd5576579ed8979dc5b4d83b0b6bf2c461,echen <rechen@google.com>, 2019-08-22 13:34:17 -0700, , rename class pytdclass tupleclass ... callable piperorigin revid 264907730,,
1441,7600b61bf8d2ad4f5ade875c8475856eb40fd2e9,demello <mdemello@google.com>, 2019-08-22 12:10:28 -0700, , move kythe indexvisitor generate kythe fact postprocessing indexer increasingly used application make sense decouple code indexing kythe fact generation much possible piperorigin revid 264890164,,
1442,21e0c1058082f16ec19a3401bef3510dd3b7508b,echen <rechen@google.com>, 2019-08-19 16:07:12 -0700, , improve tracing literal add match method literal add test decorator make easier run different test different host version tweak _get_node_name avoid case method called literal piperorigin revid 264264816,,
1443,3f24ab0703ab020517387b08014be4785583cd13,echen <rechen@google.com>, 2019-08-19 14:46:11 -0700, , count trace keep track already matched one matchastvisitor fix match_attr bug letting trace match multiple node remove need break statement adding maxmatch parameter _get_traces change mro accommodate fact define enter_module also resolve lint warning xref.indexer squeegee piperorigin revid 264246775,,
1444,9304a28854a3b90ae35a4977f862b4c3c578bd78,demello <mdemello@google.com>, 2019-08-19 13:31:11 -0700, , proto1to2 use xref indexer rather detect_usage reworks detect_usage pytype_indexer allow overriding process_file remove unpicklable stuff index add true creating pickled index testing piperorigin revid 264229285,,
1445,b6c8792cb161c07562249691e3f4cf66b5841a98,echen <rechen@google.com>, 2019-08-19 11:55:28 -0700, , parse string literal pyi file turn bytestring unicodestring unprefixed string previously treated name string object stop supporting quoted forward reference since pyi file natively support forward reference never necessary quote anyway wanted continue supporting quoted reference either allow string everywhere type allowed manually copy every rule involving type create equivalent one string first option make postprocessing lot harder point new type created know whether keep string prefix quote use literal throw away use name second option ugly thus inclined drop support instead typeshed still par make couple tweak avoid parsing conflict allows list string literal __slots__ syntax simplifies handling parser.py doe allow list type e.g. int str top level type squeegee piperorigin revid 264208245,,
1446,648d09cc18ac94314454ce247a9533965ae3966b,echen <rechen@google.com>, 2019-08-19 11:17:01 -0700, , update pytype changelog fix cmake bug node_utils.py still indexer target moved target pytype.pytd_lib exist cmake empty srcs piperorigin revid 264198994,,
1447,f825fd9513049b6638c2d3c23d8636ca1ee02b1c,demello <mdemello@google.com>, 2019-08-15 17:07:09 -0700, , fix xrefs multiline class definition statement e.g class   ... squeegee piperorigin revid 263673986,,
1448,00e18151fe419c14737f7bd048056193c57a531b,demello <mdemello@google.com>, 2019-08-15 16:09:08 -0700, , add method deletes pytype data index piperorigin revid 263662799,,
1449,0aaf3f4bb38b22fd32471ea81453491818e59985,demello <mdemello@google.com>, 2019-08-15 16:01:38 -0700, , migrate xref indexer namedtuples attrs primary motivation mutable object attrs nicer anyway piperorigin revid 263661084,,
1450,18c4d15499b5357eb412379da82854db40ae8f25,demello <mdemello@google.com>, 2019-08-14 17:37:23 -0700, , generate callgraphs within process_file need preserve piperorigin revid 263467264,,
1451,8f3eef0ae36feaee2d42d3a7e6428057fa7e3da4,demello <mdemello@google.com>, 2019-08-14 16:20:42 -0700, , get rid global ast variable xref also move utility function shared callgraph node_utils piperorigin revid 263453217,,
1452,ba5acc06de9fcfaba8d16629eed16b2ae15b12ee,ebecca Chen <rechen@google.com>, 2019-08-23 10:12:51 -0700,394, merge pull request 394 google test lint test xref python,,
1453,7ab82d77d1175f59c9421f41c8124712669417e5,ebecca Chen <rechen@google.com>, 2019-08-22 20:11:36 -0700, , lint test xref python,,
1454,00d01da75ea6bf44afb09eb8d2f688d12245a4ea,ebecca Chen <rechen@google.com>, 2019-08-22 18:46:36 -0700,392, merge pull request 392 caleb15 patch add wsl direction,,
1455,2c3c2393b5133a4c89d779cabaf3a9ea736dd5cb,aleb Collins-Parks <46505081+caleb15@users.noreply.github.com>, 2019-08-22 17:05:09 -0700, , use code block consistent,,
1456,104e23d59852ea944dff9603897c3e47f7497ea3,aleb Collins-Parks <46505081+caleb15@users.noreply.github.com>, 2019-08-21 14:37:25 -0700, , add wsl direction install pytype use wsl window,,
1457,dce214e93259e4f121366683a0a12a790b994b33,artin DeMello <mdemello@google.com>, 2019-08-15 16:59:04 -0700, , add attrs dependency 390,,
1458,500b568b0ecc79fa76a163ed4c4ad03325726028,ebecca Chen <rechen@google.com>, 2019-08-14 18:49:56 -0700,388, merge pull request 388 google google_sync google sync,,
1459,9728259b7a4283607867db926a8c3c5a0b0ea1d3,echen <rechen@google.com>, 2019-08-14 15:47:08 -0700, , callgraph_test also exclude typed_ast import lower version forgot first time around piperorigin revid 263446233,,
1460,d36b0d17ef2ff4a131267ad436ed068dd64b411d,echen <rechen@google.com>, 2019-08-14 14:47:03 -0700, , run python 3.5 workaround ugly dug bit opensource test run alternative think change http github.com google pytype blob cmake module l40 add separate test_all_27 ... test_all_37 target omit certain test seems pretty terrible well piperorigin revid 263433508,,
1461,6863eaab660bc9dcac9e8081bae5877fb9da99d2,echen <rechen@google.com>, 2019-08-14 13:32:01 -0700, , improve usability pytype.io make loader object optional public function io.py since expose load_pytd module reorder parameter order always option loader make errorlog returned value instead parameter passed modified better design make config object optional check_py generate_pyi make default option easier use expose error module part io_lib since public function return errors.errorlog object piperorigin revid 263417060,,
1462,f0649af9818b54cce5edff8e38222b95c18c2181,echen <rechen@google.com>, 2019-08-14 12:59:22 -0700, , add missing attribute fix http github.com google pytype issue 367 piperorigin revid 263410172,,
1463,4b8ec8595c48ae246572bd6c75e5ba8a19e9b515,demello <mdemello@google.com>, 2019-08-13 16:46:36 -0700, , capture function parameter annotated type callgraph piperorigin revid 263243809,,
1464,b91597500c159ba6cb0df6b4ecbac67e2370d617,demello <mdemello@google.com>, 2019-08-12 14:43:08 -0700, , add basic callgraph functionality track outgoing method function call within function body track function parameter return type currently parameter typed typing.any due way opcode trace work need adjusted based eventual type function pytype completes inference design doc http docs.google.com document 1zc edit usp sharing piperorigin revid 263008743,,
1465,ae5e632bd85f57f73630bef9932e05a9d84fa98f,ebecca Chen <rechen@google.com>, 2019-08-09 17:37:08 -0700,382, merge pull request 382 google google_sync google sync,,
1466,8c0141ecdbca487156d57a647b99d685f3542e3e,echen <rechen@google.com>, 2019-08-09 16:57:14 -0700, , fix parse error caused typing.literal typeshed started using typing.literal attempt partially support causing parse error think pypi release finally actually ready ... piperorigin revid 262661172,,
1467,f0ed8c871abfbb83db91f824a65e7833f7f19edd,echen <rechen@google.com>, 2019-08-09 15:34:53 -0700, , remove description.rst http github.com google pytype pull 381 update pytype directly use readme.md pypi description longer need file piperorigin revid 262647283,,
1468,27b3da49c2aea5549ab21c4f5a8c38a0c544114c,echen <rechen@google.com>, 2019-08-09 12:27:47 -0700, , update readme include current pytype subtools piperorigin revid 262610790,,
1469,2d17f71cd8bca39a9d4ad30385f2dbfe2ad8ff99,echen <rechen@google.com>, 2019-08-09 12:10:41 -0700, , make pytd_utils publicly available immediate motivation making public want use tyre thinking make sense make pytd utility public since definition already untangling pytd_utils pytd_for_parser also allowed break circular dependency pytd pytd_utils removing pytd.print move pytd.print creates new target pytd_utils parse_constants add pytd_utils public target pytd_lib turn asteq astdiff method function pytd_utils instead astdiff need moved depends moved asteq well consistency deletes pytd.print move three visitor pytd_utils depends printvisitor pytd_visitors since pytd_utils depend visitor alphabetizes visitor pytd_visitors easier future maintenance corrects lint error squeegee piperorigin revid 262607897,,
1470,b3a5c16dc0e547f1f58bbd8b7085e36dd8bd9a13,echen <rechen@google.com>, 2019-08-09 11:52:21 -0700, , cleanup pytype build cmake file remove stray srcs entry pytd reorder cmakelists.txt follow build file piperorigin revid 262604270,,
1471,2afef389eacd5693fd23033f2cacd7ee5a70c979,ebecca Chen <rechen@google.com>, 2019-08-09 15:56:38 -0700,381, merge pull request 381 google desc use readme.md pypi description,,
1472,e88aba7643195fc95906e252f451a9577e7e9bbb,ebecca Chen <rechen@google.com>, 2019-08-09 15:21:42 -0700, , use readme.md pypi description turn happy unicode character since march 2018 pypi allowed using markdown long description work http test.pypi.org project pytype,,
1473,8de2b5f55ecc45b13ae48fc6935482b8899e1a79,ebecca Chen <rechen@google.com>, 2019-08-09 12:46:14 -0700,380, merge pull request 380 google annotate add entrypoint annotate ast setup.py,,
1474,de095ad6147be48075159bb25cbff2b70a9daa96,ebecca Chen <rechen@google.com>, 2019-08-09 12:06:02 -0700, , add entrypoint annotate ast setup.py,,
1475,46156ac857ae1f14a467d51b86512ff81f890735,ebecca Chen <rechen@google.com>, 2019-08-09 12:02:20 -0700,378, merge pull request 378 google google_sync google sync,,
1476,b930c654290a3299ebc06946f3eb04c7eeab37ec,ebecca Chen <rechen@google.com>, 2019-08-09 11:26:24 -0700, , fix python 3.7 bug trace came opensource test 3.7 new call_method opcode added thought whether traces_test use order test every target python version every host version seems like overkill piperorigin revid 262597779,,
1477,0188636e9ee9de82adfc7735368e627c06669505,echen <rechen@google.com>, 2019-08-08 15:20:04 -0700, , prepare pytype next pypi release update version changelog make xref indexer_test xref parse_args_test runnable travis testing since offer pyxref tool add missing line annotate_ast cmakelists.txt remove unnecessary dep unused library xref build corrects lint warning change exported github follow add entrypoint annotate ast setup.py install typed_ast travis test piperorigin revid 262444374,,
1478,5049102e7c459ffd4d957f7bfe5df824c84bc30b,echen <rechen@google.com>, 2019-08-08 13:54:04 -0700, , implement augments call_function trace include return value add including _get_node_name method get function name node add test involved splitting replacing reduce boilerplate piperorigin revid 262425913,,
1479,3ea8dcb10bf6faadfbfb88b94ddf17664154ebae,demello <mdemello@google.com>, 2019-08-08 13:16:03 -0700, , add pytype data definition indexer first step towards generating typed call graph proto1to2 design doc http docs.google.com document 1zc edit usp sharing piperorigin revid 262418162,,
1480,11263b563f2a18cb64c1918cb20ecd5b6d9a322d,echen <rechen@google.com>, 2019-08-08 11:42:00 -0700, , fix bad function name pytype error message nested class repeating class prefix function name adding test also noticed old test actually running test prefix method name missing fixed also piperorigin revid 262399833,,
1481,4422ac2834deb003033c941e56fdd04182862ceb,demello <mdemello@google.com>, 2019-08-06 15:56:44 -0700, , add small wrapper binary annotate_ast help iterate faster piperorigin revid 262014423,,
1482,a94a785839825e2d207306010144b9eef9034193,echen <rechen@google.com>, 2019-08-05 16:58:56 -0700, , revert tyre change kythe indexer tyre using underlying trace library change make xref.indexer track pytd type longer needed also added trace test converting unknown covered xref.indexer test removing piperorigin revid 261801244,,
1483,7ed58b2bb002846ef0bb9dc741dc91abb1f3e188,echen <rechen@google.com>, 2019-08-05 16:12:26 -0700, , partially support typing.literal matching remove keep_literals test flag convert literal abstract value safe way convert.py converting instance literal work properly converting literal type return type value throwing away fact literal value add test lot todos tweak visitor account pytd.literal natively representing generic type nested constant possible literal true report supported yet creating literal source file allows importing literal typing easier implement also make pytype change easier literal make move typing sqeegee piperorigin revid 261792433,,
1484,6c663ada592a039e9a1f766d95437b4cfcb2204a,echen <rechen@google.com>, 2019-08-05 14:41:28 -0700, , revert annotate_ast change kythe indexer look like earlier iteration pytype tool annotate_ast guessing needed anymore piperorigin revid 261773052,,
1485,cf5fd430c1fc4ad4b1b3c6c5884f29bba880a791,echen <rechen@google.com>, 2019-08-05 13:59:27 -0700, , update annotate_ast use new trace library traces.trace simplify annotate_ast also make two small unrelated fix happened notice filename need separate argument pytype option python version python_version version option object accepted latter happens unrelated option pytype version called version ... piperorigin revid 261763276,,
1486,8a98cfcf9e50713afd0ca9ec0978719b55eafb7f,echen <rechen@google.com>, 2019-08-05 10:19:44 -0700, , implement __build_class__ builtin function creates new class need to_type implementation appears opcode trace piperorigin revid 261712600,,
1487,e4ee23d40c9bc1bff4be83743621e4ab1691cafe,ebecca Chen <rechen@google.com>, 2019-08-08 16:29:01 -0700,377, merge pull request 377 google travis install typed_ast running travis test,,
1488,843c57afc822e76502af295e00989d68a64d8d1d,ebecca Chen <rechen@google.com>, 2019-08-08 15:34:42 -0700, , install typed_ast running travis test,,
1489,bde50055b5baeaa2ded33efb1fb2104a7a92701f,ebecca Chen <rechen@google.com>, 2019-08-07 14:01:40 -0700,373, merge pull request 373 google setup add new pytype tool subdirs package setup.py,,
1490,a18f1222809be2209a87adfc0e0083ec4b803171,ebecca Chen <rechen@google.com>, 2019-08-05 15:39:21 -0700, , add new pytype tool subdirs package setup.py fix http github.com google pytype issue 372,,
1491,3dff6b72160a55825b56fd78e7fba1c9b0f0e715,ebecca Chen <rechen@google.com>, 2019-08-02 18:51:53 -0700,370, merge pull request 370 google google_sync google sync,,
1492,09c064d096a99ec74aaef135b875a1f86d18be8f,echen <rechen@google.com>, 2019-08-02 17:21:44 -0700, , tweak trace get opensource test passing remove google ism test accommodates change ast module 3.7 piperorigin revid 261421809,,
1493,b8a6c775b077ec4f311feddb8547662927bfc77e,echen <rechen@google.com>, 2019-08-02 16:42:34 -0700, , remove deleted pytd file cmakelists.txt piperorigin revid 261416174,,
1494,ae3a08e0ae04f0325a1bdbcb4e6ea4a2c6eb708e,echen <rechen@google.com>, 2019-08-02 15:25:16 -0700, , implement add match_attribute match_import match_name node type one generate reference matchastvisitor produce type indexer currently doe plus type definition new match method xref indexer.py piperorigin revid 261402829,,
1495,06e03ec71a7f820b2d0bb8cce60eba2a934a7c76,echen <rechen@google.com>, 2019-08-02 14:24:29 -0700, , add implement traces.trace method generates pytd trace place method used traces_test make writing test easier piperorigin revid 261391277,,
1496,97ff739a30e61db0e74b4a3cd04432da7ff374aa,echen <rechen@google.com>, 2019-08-02 14:09:15 -0700, , add skeleton add abstracttrace class wrap trace add vmtrace subclass abstracttrace use xref indexer.py move assign lineno tracking new matchastvisitor eventually use information implement match_name add raise every node type piperorigin revid 261388232,,
1497,290290cd66314b9fd1f28668fac03e90d553c65d,echen <rechen@google.com>, 2019-08-01 10:31:18 -0700, , add test add source_test fix one error renames find_text find_first_text add standardizes docstrings piperorigin revid 261148510,,
1498,2408ee54a261fb4b14a4ce2af688726e7d55eecc,echen <rechen@google.com>, 2019-07-31 15:13:19 -0700, , remove pytype workarounds previously missing unparseable stub bothering typeshed added quite new stub year pytype parsing also improved kept around unnecessary stub entry missing.txt clean fix test resolve lint warning test piperorigin revid 261007907,,
1499,3ea98f683f0a092d67eb686bc6be9daa96c9e774,echen <rechen@google.com>, 2019-07-31 15:07:18 -0700, , fix broken pytype test piperorigin revid 261006776,,
1500,f84123b1f5a4976be52a4a9be1e5eabab6e1d551,ytype Team <pytype@googlegroups.com>, 2019-07-31 13:47:53 -0700, , support default kwarg max min builtins one positional argument passed min max allow default keyword argument returned supplied iterable empty two optional keyword argument ... default argument specifies object return provided iterable empty iterable empty default provided valueerror raised new version 3.4 default keyword argument http docs.python.org library functions.html max piperorigin revid 260990884,,
1501,070041ed16ba97e71b39faf8519a76b900179d80,echen <rechen@google.com>, 2019-07-31 13:18:04 -0700, , copy unicode logo opensource doc piperorigin revid 260985665,,
1502,8681c27af4877d1769b66528d37bd2e5826b95c7,ytype Team <pytype@googlegroups.com>, 2019-07-31 13:04:13 -0700, , adopt unicode pytype logo piperorigin revid 260983255,,
1503,e04b09a0fb04a57428601aae49f1595a76f91833,echen <rechen@google.com>, 2019-07-31 10:44:27 -0700, , fix unwrap trace data sure opcode piperorigin revid 260955670,,
1504,5be26144e97876c36485600e50d23d181519f718,echen <rechen@google.com>, 2019-07-30 15:09:50 -0700, , partially support parsing typing.literal pyi file support literal bool literal int literal none literal enum literal none simplified none make literal string half work add comment broken allows importing literal typing rewrite literal ... union literal literal ... raise parse error literal value appear outside literal turn literal node end parsing since none rest pytype support yet piperorigin revid 260804450,,
1505,a62d48a6b0c08e3da0902737470e415788ca0ce1,echen <rechen@google.com>, 2019-07-30 13:53:23 -0700, , start move sourcelocation sourcefile object traces.source simple change bigger change test etc. follow make method used outside sourcefile private renames sourcefile source.code move source.code piperorigin revid 260788163,,
1506,295f8a22386ad632f9efc238e929e80ddfb7f4b0,echen <rechen@google.com>, 2019-07-30 12:33:18 -0700, , give opcode trace data consistent type make sure data always tuple optional list ... tweak code data accordingly piperorigin revid 260772015,,
1507,8f90fdc6a666c5af886d332ac3a5347d21a9a750,ebecca Chen <rechen@google.com>, 2019-07-30 12:40:45 -0700,369, merge pull request 369 google google_sync allow trailing comma list type stub,,
1508,d834cfcec446f629aed02ed8000597cd4687899a,echen <rechen@google.com>, 2019-07-30 11:59:16 -0700, , allow trailing comma list type stub address failing pytype test http github.com python typeshed pull 3149 planning mini external release today fix since internal release includes everything parser change low likelihood breaking anything piperorigin revid 260765164,,
1509,5ccca77bb81f86ed15094dba0d6795d8b99c11ba,ebecca Chen <rechen@google.com>, 2019-07-29 18:13:03 -0700,368, merge pull request 368 google google_sync google sync,,
1510,b6127a92a054eb8b975680d421d86bf243d27bee,echen <rechen@google.com>, 2019-07-29 17:15:39 -0700, , add add basevisitor class visit ast parsed ast like module remove functionality test still pas basevisitor xref indexer.py piperorigin revid 260613464,,
1511,fb621fcd8263f118e50e1ebe928f5150625a805c,echen <rechen@google.com>, 2019-07-29 11:06:38 -0700, , add another faq entry pytype strictness piperorigin revid 260537699,,
1512,10565521c897b13308c0fd22daf280b06d45617f,echen <rechen@google.com>, 2019-07-29 10:00:27 -0700, , add sourcelocation class indexer.py add namedtuple hold line column information make code slightly nicer looking change end behavior piperorigin revid 260522027,,
1513,416089e717a50d4422aaf16cbe693b264202467c,echen <rechen@google.com>, 2019-07-26 17:01:31 -0700, , cleanup remove unnecessary constant pytd.type subclass pytd.type pytd.type latetype functiontype clearly type squeegee piperorigin revid 260240266,,
1514,909be90ec80fe593cad2977a73620717b4150a6a,echen <rechen@google.com>, 2019-07-26 14:44:45 -0700, , fix crash caused overlay always used piperorigin revid 260217282,,
1515,4e5793f391f6ce4ce83eeb1e351c755208c1cf21,echen <rechen@google.com>, 2019-07-26 10:59:52 -0700, , use wherever simplifies option creation noticed recently frequently creating dummy filename option looked making filename required realized already create method solves problem squeegee piperorigin revid 260175088,,
1516,a123f085ac9ae0c1677ce31818042514da6e8f37,ebecca Chen <rechen@google.com>, 2019-07-24 09:50:52 -0700,366, merge pull request 366 google google_sync google sync,,
1517,08fd03a6e149aebb054563d936835a49cb287b1e,echen <rechen@google.com>, 2019-07-23 23:01:12 -0700, , update pytype changelog __version__ friday release piperorigin revid 259679747,,
1518,f8172877b59518e93a17ec778a701449718aef6b,echen <rechen@google.com>, 2019-07-23 20:13:25 -0700, , improve typing python piperorigin revid 259664606,,
1519,d1a4e459b380108c90726e328d09ffb2162eb99c,demello <mdemello@google.com>, 2019-07-18 16:24:26 -0700, , fix clone instance set iterating output.py piperorigin revid 258867359,,
1520,bfd7e6fd241b1b391baa0999ec071cf107185919,demello <mdemello@google.com>, 2019-07-18 16:15:55 -0700, , fix byte unicode issue typechecking pyc.py piperorigin revid 258866009,,
1521,93232912926a7e3fb4fd871dc4cfd5bd1d5c6d09,echen <rechen@google.com>, 2019-07-17 10:28:58 -0700, , fix attr symlinks turn directory list directory every file piperorigin revid 258594470,,
1522,125e99b877f516cdb08f3f3abbf6005310d8857e,ebecca Chen <rechen@google.com>, 2019-07-22 15:36:10 -0700,364, merge pull request 364 google update typeshed,,
1523,09f0832892d56ad45fe94e1a231fabf655add72b,ebecca Chen <rechen@google.com>, 2019-07-22 14:52:26 -0700, , update typeshed also manually copy fix keep pytype building,,
1524,c4b5b7a23fc9698cf927db1cd934789b567600bf,ebecca Chen <rechen@google.com>, 2019-07-16 23:57:32 -0700,361, merge pull request 361 google google_sync google sync,,
1525,ebe91cb35089f0e5a832c01c7d3ceb0b890492f5,ason Cooke <Jason-Cooke@users.noreply.github.com>, 2019-07-16 23:18:25 -0700, , import github 360 doc fix typo http github.com google pytype pull 360 merge piperorigin revid 258507963,,
1526,90a7bd0300d958355aa0abb58994fc23030069b4,echen <rechen@google.com>, 2019-07-16 14:50:41 -0700, , fix accidental string string comparison indexer.py call get_opcode passed single name op_list parameter hard catch testing check like store_name store_name evaluate true piperorigin revid 258445253,,
1527,15bb6fc95e902be4c1fe808b4c60cc48efb5b8eb,ebecca Chen <rechen@google.com>, 2019-07-16 13:12:19 -0700,359, merge pull request 359 google google_sync google sync,,
1528,8dd028db8a808723d4e3f24391997bb3a1ac521f,echen <rechen@google.com>, 2019-07-15 13:32:40 -0700, , output pytd node instead string type pytype indexer fully resolved pytd node provide much better type information string type add resolve_type method load_pytd resolve smaller type unit typedeclunit long ast provided local lookup change indexer use resolve_type output pytd node type piperorigin revid 258226785,,
1529,747aecd963c138f0f441967b6272cf58d960a720,echen <rechen@google.com>, 2019-07-15 10:31:54 -0700, , improve pytype usability library move totype pytd.py make publicly available return parsed ast io.parse_pyi also fix lint warning piperorigin revid 258190789,,
1530,2a00a3bb85156799cf1abb511445545d96138f11,demello <mdemello@google.com>, 2019-07-12 12:19:52 -0700, , fix xref multiline multiple ref scope statement form foo multiline expr index foo correctly variable used multiple time scope instance get indexed piperorigin revid 257846742,,
1531,6d1ccbfe0658c4414f3cacc84f871a4509ede834,demello <mdemello@google.com>, 2019-07-11 16:43:40 -0700, , fix indexing multiline assign statement piperorigin revid 257707287,,
1532,8f26dd9db507d0b0100b61e601e6601ae4b23dba,demello <mdemello@google.com>, 2019-07-11 14:00:23 -0700, , fix indexing class method definition python py2 looking build_class opcode py3 need combination store_name a.foo name foo py3 name a.foo also run verifier test twice v2.7 v3.6 piperorigin revid 257676657,,
1533,44b1f6f7cddccb326abac4c21b4f26688369764e,ebecca Chen <rechen@google.com>, 2019-07-11 11:34:08 -0700,357, merge pull request 357 google google_sync google sync,,
1534,6dd4ff1f6aa8dbf46939ab412ac8d0a9c0581ae6,echen <rechen@google.com>, 2019-07-11 10:41:26 -0700, , update pytype version changelog attempt pypi release end releasing july sure buggy version rollback internal release piperorigin revid 257636810,,
1535,1bb16db539d5034934449086a6528c1ad6973958,echen <rechen@google.com>, 2019-07-11 10:07:52 -0700, , remove unknown indexer type unknownn showing type map since turn unknown typevars would require somehow keeping typevar definition around simplest fix turn also fixed two lint warning indexer_test using assertin piperorigin revid 257629574,,
1536,28234aee0663d7f90b1b93cd0e5a33b354cbafe7,echen <rechen@google.com>, 2019-07-10 20:13:17 -0700, , copy readme change opensource doc piperorigin revid 257534628,,
1537,3953f89b22846dfd6d9859bd81fe7948cd988ad7,echen <rechen@google.com>, 2019-07-10 11:17:41 -0700, , support async def pyi file people starting want use syntax typeshed http github.com python typeshed pull 3088 one odd thing found allowing async.coroutine decorator work make async keyword think decorator supposed async .coroutine anyway piperorigin revid 257443556,,
1538,2f535f5080b3dc795653bf8bdcf1dbadb1f153ae,ytype Team <pytype@googlegroups.com>, 2019-07-10 01:03:48 -0700, , use list comprehension instead list map ... ease understanding example piperorigin revid 257353665,,
1539,4c4f346bf6a8ee04b8b95def1616a23871de5525,demello <mdemello@google.com>, 2019-07-09 13:13:21 -0700, , let typeshed potentially override default pyi blacklisted file piperorigin revid 257256210,,
1540,462ebd0f38855d8f167b345786ec5c9a2744a46a,sudol <tsudol@google.com>, 2019-07-07 00:25:17 -0700, , add allows complex accepted supportscomplex used piperorigin revid 256823711,,
1541,eb28a7fd615851051fa99e88cbcf8998fa8d8264,demello <mdemello@google.com>, 2019-07-03 15:07:18 -0700, , support late annotation field late annotation typed correctly member variable argument __new__ note method returning dict set type str presence late annotation __dict__ _field_defaults _asdict rather str union field_types since late annotation introduces union piperorigin revid 256445795,,
1542,35a3c618acf93a50ddae00c3567e225941c46cf3,ebecca Chen <rechen@google.com>, 2019-07-03 16:24:32 -0700,354, merge pull request 354 google google_sync google sync,,
1543,db884ced5467d2de88fef027f116e6e78c0cef87,echen <rechen@google.com>, 2019-07-03 14:02:36 -0700, , update pypi version external release piperorigin revid 256434307,,
1544,61a45065d65c0886a3d318bb80295e4a80150b8a,echen <rechen@google.com>, 2019-07-01 13:41:40 -0700, , fix pytype latest typeshed update typeshed changed return type function _ast.module _ast.ast back _ast.module modeled class briefly function also run pytype bug involving generic class fix http github.com google pytype issue 322 piperorigin revid 256023613,,
1545,ec3e2e743ff785d07d7164d5cd964743f3b0a626,demello <mdemello@google.com>, 2019-06-28 15:25:44 -0700, , fix function typecomments function body code fix function type def type int none docstring body piperorigin revid 255679175,,
1546,6fd6996ccf3df1d9c15bcb4948fa2e87aa55c260,echen <rechen@google.com>, 2019-06-28 11:32:05 -0700, , update doc piperorigin revid 255637824,,
1547,86c5b0d6c5d931790182809a86b86385b71b7200,ebecca Chen <rechen@google.com>, 2019-07-02 14:40:20 -0700,353, merge pull request 353 google google_sync google sync,,
1548,c2b98cbb6f0af8ffcb70f9cf6f1fcf65f9238bfb,ebecca Chen <rechen@google.com>, 2019-07-02 11:29:18 -0700, , update typeshed,,
1549,9afec7c12c8ffea26fd7428378a2e928a9beda49,echen <rechen@google.com>, 2019-07-01 13:41:40 -0700, , fix pytype latest typeshed update manual copy internal change keep build passing,,
1550,365afbce0b781498fc19898f09ba75f8412cea02,ebecca Chen <rechen@google.com>, 2019-06-27 16:52:30 -0700,352, merge pull request 352 google google_sync google sync,,
1551,e50517d49a0c0d920c59c87f0d9675a4a6a0fbd4,echen <rechen@google.com>, 2019-06-27 16:12:37 -0700, , fix py3 parameter type fix http github.com google pytype issue 349 piperorigin revid 255499321,,
1552,eec098c09812b092b1bd57a99b9a152356d04256,echen <rechen@google.com>, 2019-06-27 15:54:19 -0700, , update pytype pypi version friday release piperorigin revid 255495615,,
1553,f077f259eab60da128a56a42ad3140f65c645ea3,ebecca Chen <rechen@google.com>, 2019-06-26 18:30:23 -0700,351, merge pull request 351 google google_sync google sync,,
1554,f6447141f27d4ea1e6f30b8bf95363e5e4dbafab,echen <rechen@google.com>, 2019-06-24 10:11:44 -0700, , support late annotation type argument attr.ib piperorigin revid 254781566,,
1555,f22fa15d6b6dfa9ee9b7226b505fc92efee880ec,echen <rechen@google.com>, 2019-06-24 00:09:00 -0700, , make except block aware exception type change help pytype detect usage generates lot new finding submit attr change released like get reviewed test start sending patch piperorigin revid 254699453,,
1556,37cb3957370024ab346f88de6bb7ca6034da25a9,demello <mdemello@google.com>, 2019-06-21 14:51:42 -0700, , check function without signature caused transient crash xref longer hit code path seems like better default throwing exception piperorigin revid 254472967,,
1557,a4af0a851cd03367e3f506f5bc028379d53ad5da,demello <mdemello@google.com>, 2019-06-21 12:06:44 -0700, , fix auto attribute generation class member defined twice move end ordered_locals auto attrs include method property piperorigin revid 254443971,,
1558,00cf32efb05ecf762da043f98e3544735e2d52ca,demello <mdemello@google.com>, 2019-06-20 15:41:32 -0700, , fix prevent indexer crash creating ref data literal piperorigin revid 254287040,,
1559,27eb234da9f3477156dc653114867d07fc2353c9,ebecca Chen <rechen@google.com>, 2019-06-19 19:51:11 -0700,346, merge pull request 346 google google_sync google sync,,
1560,b8bf8ded02436577e3ffb69bbed96f74347b064c,echen <rechen@google.com>, 2019-06-19 18:15:52 -0700, , actually make travis happy last time got careless manually tested python course turn test passed python change make py2and3_test also added rlevasseur copybara author list since noticed change unhelpfully exported author pytype team piperorigin revid 254111410,,
1561,4efe67c9ffafa1aa7661d1264fdcec4b6994de3c,echen <rechen@google.com>, 2019-06-19 16:49:53 -0700, , make pas travis typo cmake file test failure complaining assertregex existing piperorigin revid 254098765,,
1562,421e31a34ce46517e83b5df4ef316a13b22bfee8,echen <rechen@google.com>, 2019-06-19 14:53:16 -0700, , fix coroutine bug fix bug implementation get_awaitable opcode handle generator non coroutine awaitables correctly also add detailed comment existing code trouble reasoning corrects typo test name make progress toward http github.com google pytype issue 244 piperorigin revid 254076264,,
1563,d947c46182a8ead78ddb387835af55c28790d9a3,echen <rechen@google.com>, 2019-06-19 14:35:53 -0700, , annotate init argument attr.s attr.ib squeegee piperorigin revid 254072599,,
1564,804226991b2a4217e0209dd319ceb392753c4014,levasseur <rlevasseur@google.com>, 2019-06-19 14:06:35 -0700, , add library add type information ast add basic implementation ast visitor merges pytype inferred type information ast merging node type information two extra attribute resolved_type pytype pytd object describing type string version resolved_type quite match real annotation would pytype internal pytd thing sneak pretty close fixed later currently support name node naive assumption ast opcode line number matching e.g. assignment statement span line likely matched correctly fixed later though library assumes ast object mostly match native ast module interface assume native ast module used alternative ast implementation used need similar enough native ast module object traversal matching happen piperorigin revid 254066694,,
1565,ccf9280326e49cfead5aedfaaae825b28569b1c6,echen <rechen@google.com>, 2019-06-19 11:21:08 -0700, , add temporary pytype stub attr discussion last pytype meeting modifying using typeshed stub realized even easier workaround would use pytype inferred stub advantage approach pytype already tested extensively stub support open source user immediately instead waiting find time test typeshed stub change put unpickled attr stub pytype pytd builtins 2and3 attr minimal change described pytype pytd builtins 2and3 attr __init__.pytd since stub part pytype mean support open source user well updated changelog __version__.py appropriately optimistic estimated pypi release date friday symlinks google override stub using stub internally externally one small annoyance pytype requires .pytd extension override use .pyi file linked renamed individually get rid mini fake stub attr_overlay needed attr stub always available control content neither true anymore another nice thing file using attr analyzed locally previously manually copying attr.pyi every time increase shard count test test_attr timed squeegee piperorigin revid 254035136,,
1566,dfbb4aca5bc067aaf166aa0cc4b59c025e05d494,echen <rechen@google.com>, 2019-06-18 20:00:15 -0700, , copy pytype readme update forgot readme change merged directly github since copying change anyway cleaned bit piperorigin revid 253919598,,
1567,a1663fc4abf6dcd426e35d22c6cbfe7a879e45bf,echen <rechen@google.com>, 2019-06-18 12:02:50 -0700, , fix crash caused nested attr.s usage pytype hitting depth limit creating unsolvable attr_overlay expected class also deleted since forgot remove changing code used piperorigin revid 253838090,,
1568,5e1dc272a2ed6303e3486f79e0f636832fc63d7c,ytype Team <pytype@googlegroups.com>, 2019-06-17 14:27:30 -0700, , collect attribute base class using attr.s piperorigin revid 253661421,,
1569,97e56d23bdc9e29869406a6f22b6201f38d46656,echen <rechen@google.com>, 2019-06-17 14:02:29 -0700, , fix pytype crash caused attr.make_class pytype support yet least crash piperorigin revid 253656189,,
1570,8b676dcc8ad688a4b1faf1899dcc940e75edc1e1,demello <mdemello@google.com>, 2019-06-14 16:30:04 -0700, , create overlay_utils common overlay functionality refactors attrs share method creation code piperorigin revid 253318044,,
1571,ac832535fa0a2b577c87c780ef5d73c2a744ba40,ebecca Chen <rechen@google.com>, 2019-06-17 17:49:47 -0700,343, merge pull request 343 adamcataldo patch update readme.md,,
1572,ee466779f2d5a7aa0ee2bb7ec07b49e547db5ce3,damcataldo <adam.cataldo@gmail.com>, 2019-06-17 16:14:15 -0700, , update readme.md,,
1573,df025a75e9158496013da733ed09cd09776a61a7,damcataldo <adam.cataldo@gmail.com>, 2019-06-17 16:07:36 -0700, , update readme.md,,
1574,7163e85880b52d53d58044e53157e2a21988308e,ebecca Chen <rechen@google.com>, 2019-06-14 18:47:08 -0700,342, merge pull request 342 google google_sync google sync,,
1575,7eeaedc211d73110344d3360c49d74e0bea2b03b,ytype Team <pytype@googlegroups.com>, 2019-06-14 14:19:08 -0700, , add support attr.ib init false piperorigin revid 253294908,,
1576,3acc9e32b2da2f4b5c6cbc3f439e7605f19a4ed1,echen <rechen@google.com>, 2019-06-13 13:17:13 -0700, , respect attr.ib default invalid annotation logged got bunch missing parameter error set default none also changed error ... error ... wherever saw former piperorigin revid 253091625,,
1577,7c777f966c319a9014c7717ecca81dcd275c6cfa,echen <rechen@google.com>, 2019-06-13 12:44:16 -0700, , use appropriate previous change looking whether needed init_class anywhere else realized already exists init_annotation method type check correctly instantiates annotation facepalm piperorigin revid 253085614,,
1578,3fe94d9d0c94beea1488a6fdfe0af80540dfdaf5,echen <rechen@google.com>, 2019-06-12 18:49:18 -0700, , make sure __init__ called initializing late annotation class piperorigin revid 252944153,,
1579,0c77abde2e7dfb4041cb2a7043dba586fb3c57f2,demello <mdemello@google.com>, 2019-06-12 15:31:17 -0700, , show diff disassembled pickle file testing determinism effectively untested course refusing generate diff least broken anything piperorigin revid 252913233,,
1580,9cd1b109be48ecd26ac5cf2039d25cafa9f5dc80,demello <mdemello@google.com>, 2019-06-11 16:32:06 -0700, , check type passed attr.ib actual type piperorigin revid 252723598,,
1581,e881640204b81f075199dabe0dcb5abe263300b9,echen <rechen@google.com>, 2019-06-11 14:26:14 -0700, , still store attribute even attrs report invalid annotation invalid annotation logged seeing lot follow error due attribute added __init__ signature piperorigin revid 252698668,,
1582,51d221612eb1208c5cad28111400f8b91f73ba3e,echen <rechen@google.com>, 2019-06-11 13:35:32 -0700, , fix crash caused passing typing construct attr.ib type ... piperorigin revid 252687777,,
1583,5130a7fc919b551ff2ee482dc42ed7ec78effeb7,echen <rechen@google.com>, 2019-06-10 15:21:48 -0700, , change default attr.ib default none default none know actual type quarter new finding generated pytype head false positive caused assuming none allowed value piperorigin revid 252496853,,
1584,aaf90cb34d2ea5a7096e3f2250d67a509ec32439,echen <rechen@google.com>, 2019-06-10 12:54:16 -0700, , support factory keyword attr.ib tenth new finding generated pytype head false positive caused pytype thinking attribute factory still required args __init__ together default none change cover majority false positive saw spot check new finding hopeful file bug remaining small issue proceed release usual piperorigin revid 252464949,,
1585,df8850fb4ed2533b0d7bff2e61748192ec921e4c,echen <rechen@google.com>, 2019-06-10 12:29:30 -0700, , cleanup remove extraneous typing.any import attr test piperorigin revid 252459634,,
1586,a8d2379236420afda8c4b04466cc692290a32baf,demello <mdemello@google.com>, 2019-06-07 23:51:06 -0700, , add support auto_attribs valid pep526 syntax python 3.6 caveat auto_attribs requires typing.classvar annotation class var want convert attribute support typing.classvar yet pyfixit piperorigin revid 252177415,,
1587,3908bd7409c71c8cf18b8bfd781843769a812b0f,ebecca Chen <rechen@google.com>, 2019-06-08 00:04:53 -0700,341, merge pull request 341 google google_sync google sync,,
1588,6480b0e180d5b35d3ff9ef2c337533890c6f9263,echen <rechen@google.com>, 2019-06-07 23:26:45 -0700, , change ... none test run target py2 piperorigin revid 252176185,,
1589,187795b91302c8119e17f1077e1f10a498b80d6f,echen <rechen@google.com>, 2019-06-07 21:45:08 -0700, , support import combining import merge_pyi instead using touch_import print reparse import statement put multiple import package one line make easy support import done well fix http github.com google pytype issue 330 pyfixit piperorigin revid 252169902,,
1590,1590847453e87b143341568c485bdbb2b945a168,echen <rechen@google.com>, 2019-06-07 21:17:27 -0700, , give long name merge pyi option minor usability improvement piperorigin revid 252168228,,
1591,07eb9dac1923009d4b7de251779981ac075d87f9,demello <mdemello@google.com>, 2019-06-07 21:03:11 -0700, , add support default value attrs default value used infer type type provided generated __init__ function note particular type provided used unconditionally type default checked type attr attr.ib type str default raise error consistent current pytype behaviour variable function params assignment type annotation pyfixit piperorigin revid 252167328,,
1592,259333508913f1ca3ae1d17891b1c2a968f515af,echen <rechen@google.com>, 2019-06-07 15:52:11 -0700,330, clean merge_pyi import handling code started working http github.com google pytype issue 330 realized merge_pyi logic inserting new import somewhat fragile hacky first cleaned move insertion new import top level assignment separate step annotation added previously add_globals ran every time function signature modified attribute used determine whether already run insert import type actually used previously approximated inserting import annotation added import annotation added pyfixit squeegee piperorigin revid 252135431,,
1593,2687702e6fee6b6844fb5ff33cfb7be522cfeca0,demello <mdemello@google.com>, 2019-06-07 15:31:18 -0700, , add support args attr.s currently add init kw_only plus todo auto_attribs remaining args irrelevant typing purpose frozen probably beyond scope pytype could potentially add support slot seems lower value pyfixit piperorigin revid 252131856,,
1594,4b90e304c06b75ed09116c8ad4d9cc1d41724047,sudol <tsudol@google.com>, 2019-06-07 14:37:35 -0700, , differentiate comparison always succeed python python python ordering equality operator etc always succeed python equality operator always succeed technically pyfixit piperorigin revid 252121372,,
1595,c9cda591c339d32dc9c977f2ee188437fbc999ec,demello <mdemello@google.com>, 2019-06-06 17:19:33 -0700, , handle late annotation class variable pyfixit piperorigin revid 251960255,,
1596,81f5970155b85303f4e44a9c89f6127b1d2c55c6,ebecca Chen <rechen@google.com>, 2019-06-07 14:35:01 -0700,339, merge pull request 339 google grammar finish adding merge pyi local copy lib2to3 grammar,,
1597,ec51fda55b846311b59b444d7b696b88a9cad9ce,ebecca Chen <rechen@google.com>, 2019-06-04 23:06:08 -0700, , finish adding merge pyi local copy lib2to3 grammar creates patch local edits put grammar file setup.py data fix http github.com google pytype issue 332,,
1598,89c2dd4adf2842bfd6dcedd8bee041737944b51e,ebecca Chen <rechen@google.com>, 2019-06-06 16:07:34 -0700,338, merge pull request 338 google google_sync google sync,,
1599,171f1eb889be355f7f3b1c3f8443ffcdcc6d5715,echen <rechen@google.com>, 2019-06-06 15:13:48 -0700, , fix merge pyi crash python version 3.6 pyi file always supposed use syntax latest python version lib2to3 grammar file python 3.6 parse type annotation pep 526 variable annotation even confusingly problem show open source test internal copy lib2to3 python grammar file work around issue patching local copy grammar support pep 526. tried bunch different way one found worked apply patch first thing import time since merge_pyi compile bunch pattern etc mean use contextmanager leave lib2to3 permanently changed another issue local grammar support async await since require much extensive change lib2to3 consequently use host python version 3.6 async await still parsed 3.6 follow add patch showing change made grammar add new grammar file setup.py make progress toward http github.com google pytype issue 332 pyfixit piperorigin revid 251936937,,
1600,f37713c80f09a8cb8ffe159e89a2b35bfbf79f88,demello <mdemello@google.com>, 2019-06-06 13:20:59 -0700, , fix attr annotation fix union type add support late annotation due 134687045 late annotation annotated correctly constructor member variable i.e class foo attr.ib type foo annotates class foo  def __init__ foo ... pyfixit piperorigin revid 251913428,,
1601,19b706bf66719010a843d3bc6becaac44bdcabf7,demello <mdemello@google.com>, 2019-06-05 17:18:49 -0700, , add type annotation __init__ method also add fix name mangling __init__ kwargs pyfixit piperorigin revid 251751975,,
1602,ce53168ade6954c7910bdd1cf32c2e38d8666511,echen <rechen@google.com>, 2019-06-05 16:39:39 -0700, , clean user guide section variable annotation copy open source piperorigin revid 251745014,,
1603,c83c0e19c8521ae3b01fdf506a0f3cf3b9802ead,demello <mdemello@google.com>, 2019-06-05 13:53:23 -0700, , add support attrs annotated using pep526 syntax pyfixit piperorigin revid 251711601,,
1604,eb8381dbae517da5129a51a9ea06d7c673c4bec8,demello <mdemello@google.com>, 2019-06-05 11:26:01 -0700, , basic attrs overlay add support basic case attrs defined using attr.ib type ... annotation type comment e.g attr.s class foo attr.ib type bar attr.ib attr.ib type int ... type class foo bar  int ... def __init__ ... none ... pyfixit piperorigin revid 251681823,,
1605,8ca79ea45c4a63310d0d22006e32f20217239694,ebecca Chen <rechen@google.com>, 2019-06-05 11:55:06 -0700,336, merge pull request 336 google google_sync google sync,,
1606,c9432b80cb1676d0050d60ca93f6f0113fda7d33,echen <rechen@google.com>, 2019-06-05 10:36:56 -0700, , add command line arg merge_pyi control logging verbosity previously used logging level debug made stdout output quite noisy change use error default option increase decrease verbosity desired fix http github.com google pytype issue 333 pyfixit piperorigin revid 251671480,,
1607,84312d5eea55b2fca14fb961cf500eb59c0871ca,ytype Team <pytype@googlegroups.com>, 2019-06-05 10:36:27 -0700, , make pytype indexer set resolved type information name node make indexer code modify ast object process set computed type information pytype object fairly internal provide basis additional logic based upon piperorigin revid 251671373,,
1608,cc40699ce5b3771b42d5fcab5148cd93d82adc8f,echen <rechen@google.com>, 2019-06-05 10:33:16 -0700, , clean merge_pyi test add cmake target remove merge_pyi google contained outdated update script google specific test file easily merged main test file set cmakelists.txt entry merge_pyi_test renamed file consistency previously build target merge_pyi_test file test_merge_pyi change test method name run_test test_ whatever make discoverable open source test runner http github.com google pytype pull 334 merged also benefit internal testing name descriptive piperorigin revid 251670725,,
1609,88d2edbc15c3ad8b33049f7439509b73f0ea8765,demello <mdemello@google.com>, 2019-06-04 17:40:15 -0700, , add marker grep debug log opcodes piperorigin revid 251552159,,
1610,5b4201da848b3b2c2de9380bc779c5985475afac,ebecca Chen <rechen@google.com>, 2019-06-05 10:03:55 -0700,334, merge pull request 334 google test support load_tests protocol,,
1611,6507795b9cc11823a187bf895517ea03fbc455a7,ebecca Chen <rechen@google.com>, 2019-06-05 01:44:15 -0700, , support load_tests protocol pytype tool merge_pyi load_tests protocol like able run test externally making change merge pyi,,
1612,ca209874b0a9a785e301ed740e31f8c8670faf9d,ebecca Chen <rechen@google.com>, 2019-06-04 17:06:14 -0700,331, merge pull request 331 google google_sync google sync,,
1613,1de7c0c1ab928dc01a308983cfddd248cba3b665,echen <rechen@google.com>, 2019-06-04 15:41:30 -0700, , fix pytype crash caused str treated sequence badge yet pyfixit piperorigin revid 251531496,,
1614,7fd70bda89ae412f671fa1c4927fcdc750db01f3,echen <rechen@google.com>, 2019-06-04 15:24:30 -0700, , support typing.overload python file support decorating function typing.overload python file decorator used one overload decorated function followed one non overload decorated function name also took opportunity fix lint warning errors.py use new abstract interpreter_ pytd_ function_types constant everywhere pyfixit piperorigin revid 251528058,,
1615,02e591977ca81e0eb383f3e9d0976c94be7324d6,echen <rechen@google.com>, 2019-06-04 12:56:31 -0700, , add missing attribute pyfixit piperorigin revid 251497428,,
1616,5d9926b4de017c8c5f3ffff691f68f8ab28e6633,sudol <tsudol@google.com>, 2019-06-03 14:20:20 -0700, , add overlay pyfixit piperorigin revid 251307039,,
1617,1020628ddeb085c9d164778fb58d2dca883db26f,ebecca Chen <rechen@google.com>, 2019-05-31 14:33:07 -0700,329, merge pull request 329 google google_sync google sync,,
1618,fecfa0fceefb6081beaca71360bb797d2ec42407,echen <rechen@google.com>, 2019-05-31 13:51:26 -0700, , remove type annotation pytype tool xref indexer.py breaking python linting travis bit weird xref work python anyway due typed_ast dependency sort part pytype pytype support python piperorigin revid 250949693,,
1619,9c1bebf3c889fc1ce7a96341c30255815e8d9396,echen <rechen@google.com>, 2019-05-31 12:43:21 -0700, , update pytype version changelog pypi release piperorigin revid 250937593,,
1620,3aeccee8f0fa8b7818eb77e83b9fde5c7928e9af,ytype Team <pytype@googlegroups.com>, 2019-05-30 14:19:59 -0700, , make pytype indexer support custom ast module implementation allows pytype indexer code use passed ast module implementation instead always using typed_ast allow different ast implementation easily used without keep edits indexer.py code around piperorigin revid 250761011,,
1621,ed6b8d255e2d3291577db5ccf618fd24f67ba55a,ebecca Chen <rechen@google.com>, 2019-05-30 13:25:31 -0700,327, merge pull request 327 google google_sync google sync,,
1622,c27fe8a93b4c65f7a03855bb803ef62b157c5d6d,echen <rechen@google.com>, 2019-05-30 10:09:29 -0700, , work around matching bug adding filter overload anystr piperorigin revid 250709838,,
1623,cd4dc9ef75943938dcc87ca703f805ca4438c2d2,echen <rechen@google.com>, 2019-05-28 16:44:36 -0700, , implement implement pytypeindexer method build function type index string source code also added function create location type map indexer object squeegee piperorigin revid 250387902,,
1624,959d49b038b1fb4399a16a24db612f87f241cde8,ebecca Chen <rechen@google.com>, 2019-05-24 12:38:20 -0700,325, merge pull request 325 google google_sync google sync,,
1625,2403c3b2a312b0a8ee05318511f751641f14b891,ebecca Chen <rechen@google.com>, 2019-05-24 12:26:15 -0700,324, merge pull request 324 google setup bump required importlab version,,
1626,ab3dba82f89a5c8c8f2bd2f53d98a72b7f62a8de,echen <rechen@google.com>, 2019-05-24 12:03:19 -0700, , update pytype pypi version changelog release changelog description little premature since http github.com google pytype pull 324 yet problem getting merged today piperorigin revid 249875106,,
1627,031f788f3d8a7feee46006e2df084a929046ac65,echen <rechen@google.com>, 2019-05-23 15:25:18 -0700, , move visitor public pytd_visitors module move  new module ended sticking set visitor already least one interested user rather trying guess additional visitor might useful piperorigin revid 249727174,,
1628,d213853564ecfda4612cb65299201c230cce2420,ytype Team <pytype@googlegroups.com>, 2019-05-23 14:35:23 -0700, , read python source utf8 encoded pytype piperorigin revid 249717143,,
1629,beca1b8875df0f1556956784eb97f80af1aba834,echen <rechen@google.com>, 2019-05-22 21:10:12 -0700, , minor cleanup xref readme visibility update readme reflect xref longer experimental make indexer xref public target change one outside user xref_main_lib use indexer instead turn strict_deps fun piperorigin revid 249577062,,
1630,4d5c12fec9f363680ba361ca5e2ff59fd143c7c9,echen <rechen@google.com>, 2019-05-22 16:52:13 -0700, , break pytype config.py pytype io.py library talked today meeting make library make publicly visible looked pytype tool ... realized pretty useless without ability create option object also pulled config piperorigin revid 249548848,,
1631,228c2ba638ec660211ac6449753801b070ac09d9,echen <rechen@google.com>, 2019-05-22 13:24:15 -0700, , enable accessing pytype type xref indexer completed implement replaces stale reference object string type piperorigin revid 249507489,,
1632,4b32b329b979ae036281f15815fd57e604470d2b,echen <rechen@google.com>, 2019-05-22 11:26:41 -0700, , add flag python3_convert add new flag hide progress pytype work sketch structure leaving todos implementation piperorigin revid 249486121,,
1633,2494b4ff374b16e5e82711316ce54370895f1f29,echen <rechen@google.com>, 2019-05-22 11:16:39 -0700, , internal change piperorigin revid 249484154,,
1634,06d053e66810b5497a34538e9fda327501f4d50a,echen <rechen@google.com>, 2019-05-22 09:45:45 -0700, , fix crash xref caused looking far ahead attribute bound came across playing around getting accurate line column information attribute reference piperorigin revid 249465457,,
1635,45e6bcfad507b8ce66efcd5fbb349cf73b890ccf,ebecca Chen <rechen@google.com>, 2019-05-24 11:49:47 -0700, , bump required importlab version bump version pull fix http github.com google pytype issue 318,,
1636,a913bdaa9a608ab1a097b929547ede023ea5cd28,ebecca Chen <rechen@google.com>, 2019-05-15 13:16:23 -0700,314, merge pull request 314 google google_sync google sync,,
1637,f87729c97f7f37548ec18e101ebb923ec1beae7c,echen <rechen@google.com>, 2019-05-15 10:24:16 -0700, , update pytype version changelog may release typeshed update http github.com google pytype pull 313 piperorigin revid 248356832,,
1638,8e55f2295770df3f2d549a7fb8f241b7406db165,echen <rechen@google.com>, 2019-05-14 16:10:25 -0700, , fix matching recent typeshed update last typeshed update changed class series overload attempt match input function parameter count work well function keyword argument added overlay detects handle case piperorigin revid 248231209,,
1639,32b42c8b433033dee96ee02588975347f518d0d9,ebecca Chen <rechen@google.com>, 2019-05-14 19:53:08 -0700,313, merge pull request 313 google update typeshed,,
1640,a04f973b869cb3a353b573acd7be96d23e24bcd7,ebecca Chen <rechen@google.com>, 2019-05-14 19:10:13 -0700, , update typeshed also update pytype mixin.py test case reflect py3 unittest case.pyi rather unittest __init__.pyi,,
1641,e19aa9ada98f3751c6a25f81704c1760655f1580,ebecca Chen <rechen@google.com>, 2019-05-14 17:03:52 -0700,312, merge pull request 312 google google_sync google sync,,
1642,a96337bcb5944a44e9ace741f2a1676dd517c10d,ytype Team <pytype@googlegroups.com>, 2019-05-13 17:05:29 -0700, , internal change piperorigin revid 248040808,,
1643,b5dd7c7ff57a3127dcba0b67e2006a3035c7596b,echen <rechen@google.com>, 2019-05-13 10:45:41 -0700, , standardize whitespace fix pas pyi file fix two minor annoyance pytype output inconsistent whether trailing newline printvisitor output never printing class pas instead class ... change switch latter recommended style pyi file piperorigin revid 247966685,,
1644,f421b0648ba3001fe09aef618f7c17108a700ccc,ebecca Chen <rechen@google.com>, 2019-05-12 11:18:51 -0700,310, merge pull request 310 google google_sync google sync,,
1645,9023de987897da91baefa576412abdecad4a87a6,echen <rechen@google.com>, 2019-05-12 10:34:05 -0700, , finish supporting nested class pyi file support referencing nested class fully qualified name anywhere bare name inside self resolve properly also fix bug load_pytd resolving deeply nested class make progress towards http github.com google pytype issue 150 make progress towards http github.com google pytype issue 171 piperorigin revid 247839027,,
1646,2d5b4de400295f690c0795aeadf570a3f3489bbc,echen <rechen@google.com>, 2019-05-09 14:42:22 -0700, , support referencing nested class within top level class three missing piece left forward reference fully qualified name nested class referencing nested class inside referencing nested class outside body top level class make progress towards http github.com google pytype issue 150 make progress towards http github.com google pytype issue 171 piperorigin revid 247499367,,
1647,902f9f0768462557bcc317e406ec50c694a07dca,echen <rechen@google.com>, 2019-05-09 14:31:52 -0700, , support nested class lookup .py .pyi file make progress toward http github.com google pytype issue 150 make progress toward http github.com google pytype issue 171 piperorigin revid 247497485,,
1648,4dc645dbb8c71c82eb1882fd1adb289ca11463fd,ebecca Chen <rechen@google.com>, 2019-05-08 22:06:34 -0400,309, merge pull request 309 google google_sync fix bug pytype would fail resolve unused import,,
1649,6dbe855dba25d18a00a3ff8103da38eaf337c3e4,echen <rechen@google.com>, 2019-05-08 18:31:56 -0700, , fix bug pytype would fail resolve unused import problem pyi file doe import intent export pytype would see alias x.y assume module module attribute instead need detect package attempt load pyi x.y lgtm update __version__ changelog current date submitting pypi release unblacklist affected third_party typeshed file make progress toward http github.com google pytype issue 171 piperorigin revid 247335339,,
1650,b88da19c2111c4ee433b9cdf23d91225288c094d,ebecca Chen <rechen@google.com>, 2019-05-08 20:56:32 -0400,308, merge pull request 308 google google_sync google sync,,
1651,6df668e4536a50c48e633ec700c6676225a9f749,ichard <rhshadowgreen@gmail.com>, 2019-05-08 17:21:02 -0700,307, add missing comma 307 added comma separate introductory phrase subject sentence resolve 307 piperorigin revid 247325536,,
1652,90ce4ec74ea34fffa289cc6d70fa11ba01723b00,echen <rechen@google.com>, 2019-05-07 13:32:54 -0700, , add pytype mypy lightning talk faq realistically first question get asked pytype externally want put somewhere easy find sure top faq right place piperorigin revid 247080251,,
1653,834ae1e5497ee1ac87569d1842d21a947ff672c8,ebecca Chen <rechen@google.com>, 2019-05-06 18:29:32 -0400,306, merge pull request 306 google google_sync google sync,,
1654,37bec45b44a92abf075b89b2d0eb5d517c396a95,echen <rechen@google.com>, 2019-05-06 14:50:51 -0700, , fix typo pyi parser respect module alias fix http github.com google pytype issue 274 make progress toward http github.com google pytype issue 171 piperorigin revid 246901870,,
1655,ad8a9cb35939c62b7c3469436efd5195ceb25be2,echen <rechen@google.com>, 2019-05-06 14:42:43 -0700, , support pyi parser treat field type also allows namedtuple used function name continues parse correctly make progress toward http github.com google pytype issue 171 piperorigin revid 246900350,,
1656,633d0d1d48a6564350a76bb52744ce78642ddfab,echen <rechen@google.com>, 2019-05-01 15:57:31 -0700, , add typeshed update upcoming pytype release piperorigin revid 246216188,,
1657,f6c9c8b119622c47315e885d69a5250207a81e5e,echen <rechen@google.com>, 2019-04-30 10:43:10 -0700, , update typeshed typeshed missing.txt change update script format currently make incorrect formatting change every update add two entry missing.txt change stdlib 2.7 stdlib missing.txt corresponding typeshed directory renamed year ago piperorigin revid 245977148,,
1658,91e280973de88f02ffca1cd2c669e55320ba26ae,ebecca Chen <rechen@google.com>, 2019-05-01 15:27:51 -0700,303, merge pull request 303 google update typeshed,,
1659,7f4d463ddf79f00f6316680d16fda0a921a032f0,ebecca Chen <rechen@google.com>, 2019-05-01 14:27:58 -0700, , update typeshed,,
1660,bb1286a1af1ca4337ae1d2be8f5098d8e8e1b20a,ebecca Chen <rechen@google.com>, 2019-04-26 11:55:24 -0700,302, merge pull request 302 google google_sync google sync,,
1661,cf4364a60e0b6ef02fcb6a8831bf477bb093ee09,echen <rechen@google.com>, 2019-04-26 11:21:02 -0700, , update pytype version number pypi release piperorigin revid 245454676,,
1662,d2b430df0cfc14d6a87c03469e5f48db0a7f6369,echen <rechen@google.com>, 2019-04-24 14:25:15 -0700, , performance optimization skip hascombination one combination exists last optimization anyway checked test sample 1600 target half amount time pytype spends hascombination analyzing third_party pytype speed inference sample file convert.py test_data pytree.py piperorigin revid 245116313,,
1663,c4f3f0f4307b16c611fbad260052605d4806e504,echen <rechen@google.com>, 2019-04-24 13:06:12 -0700, , add strict keyword cfg.py still occasionally useful pure python implementation typegraph made optimization change cfg.py well piperorigin revid 245100977,,
1664,8311566a6611c43c0b245b4410a9138c70acd3ef,ebecca Chen <rechen@google.com>, 2019-04-24 12:52:10 -0700,301, merge pull request 301 google google_sync google sync,,
1665,3868814b5b94453f58bbc0e43fd9454450b69e1f,echen <rechen@google.com>, 2019-04-23 15:17:02 -0700, , cleanup factor pyobject_istrue logic helper function piperorigin revid 244935494,,
1666,908321f3e1703fca67fdd4d82120e32d5000ae31,echen <rechen@google.com>, 2019-04-23 14:22:37 -0700, , performance optimization skip pruning binding one applies approximation previously filter eddata binding made sure test sample 1600 target still pas reduces amount time pytype spends binding analyzing third_party pytype total speed checking sample file convert.py test_data pytree.py piperorigin revid 244925022,,
1667,5732708b445cb1211a9e6d551dce1bb0611d3a7e,echen <rechen@google.com>, 2019-04-22 14:34:27 -0700, , add missing python method int _bytes piperorigin revid 244736366,,
1668,1cb56cacfff675ef6dc9aabb65954beb38faa2eb,echen <rechen@google.com>, 2019-04-19 15:18:53 -0700, , performance optimization skip filtering binding one approximation pass test well sample 1600 target reduces amount time pytype spends filter filtereddata analyzing third_party pytype total speed inference two sample file convert.py test_data pytree.py piperorigin revid 244431772,,
1669,e797857f173daa92ce52f58841aae1d7c3d2f8d3,ebecca Chen <rechen@google.com>, 2019-04-19 13:49:07 -0700,298, merge pull request 298 google google_sync google sync,,
1670,5d3e5283e6346bbdde8063e586ab2cb14e112e0c,echen <rechen@google.com>, 2019-04-19 12:10:03 -0700, , update changelog version pypi release also edited changelog line pep 544 looked pep realized protocol also non method attribute support piperorigin revid 244399530,,
1671,7bbee17ade5307ce82a74cf426c711b2c022b7a6,echen <rechen@google.com>, 2019-04-18 15:06:36 -0700, , performance optimization remove extra tuple call node.__hash__ change reduces time spent __hash__ analyzing third_party pytype decrease kessel run runtime also fixed two lint issue piperorigin revid 244266806,,
1672,ddf7631b08f6bd4fd1f3c1f57eca988fcf457e6f,echen <rechen@google.com>, 2019-04-18 13:24:55 -0700, , fix py3 signature piperorigin revid 244246369,,
1673,d42e1e7e7cb8ae1685d22c6630e52f203634c995,ebecca Chen <rechen@google.com>, 2019-04-17 14:40:54 -0700,297, merge pull request 297 google google_sync google sync,,
1674,e55dd55a31d476ca3eed61dc771efa9338562460,echen <rechen@google.com>, 2019-04-17 13:11:38 -0700, , careful type checking protocol method body fix http github.com google pytype issue 214 fix http github.com google pytype issue 296 piperorigin revid 244053077,,
1675,25b6a06eb693308fe1b1c55b977642c75112ffd0,echen <rechen@google.com>, 2019-04-17 13:01:36 -0700, , support using protocol module defines partially address http github.com google pytype issue 296 piperorigin revid 244051213,,
1676,2b3f7386e4191dfceb3af60165b3c060593b0e4c,echen <rechen@google.com>, 2019-04-17 12:14:10 -0700, , support custom protocol pyi file support custom protocol long defined different module used partially address http github.com google pytype issue 296 piperorigin revid 244043001,,
1677,a9cf7868b90e0bbdde2fc8395eda1befa9b3f178,echen <rechen@google.com>, 2019-04-17 11:42:24 -0700, , support importing protocol reality protocol defined hard move definition typing typing depend library except builtins instead import class partially address http github.com google pytype issue 296 piperorigin revid 244037223,,
1678,6aca77f784979af6d47c2bdf4f0f56bdeaa443ed,echen <rechen@google.com>, 2019-04-17 10:48:21 -0700, , cleanup inline method called piperorigin revid 244026076,,
1679,393156b5dcb676ab0d1648fa9da8892870a8a047,ytype Team <pytype@googlegroups.com>, 2019-04-15 14:10:37 -0700, , remove debugging print call make json output stream invalid cause indexer driver fail piperorigin revid 243686045,,
1680,ca93d769a4ef2b7e0ca662fe09d3c9165326ba30,demello <mdemello@google.com>, 2019-04-12 16:39:24 -0700, , link import statement definition anchor word import relies fact one import per line piperorigin revid 243356422,,
1681,36940c00247ec733f7942d9b1ff22709506837dd,ebecca Chen <rechen@google.com>, 2019-04-15 14:11:34 -0700,295, merge pull request 295 google lint enable disabled pylint message,,
1682,7e3fbee518029dce9f4a7f3611be8389c7e9f73c,ebecca Chen <rechen@google.com>, 2019-04-15 13:35:19 -0700, , leave bad name empty allow variable name,,
1683,3cef0ddf1488c9f3887cee9f9430be6fb324d2c6,ebecca Chen <rechen@google.com>, 2019-04-11 20:12:45 -0700, , enable disabled pylint message,,
1684,00b1bc7a9e2757d0b058c3d43bdfe96c4c70d42f,ebecca Chen <rechen@google.com>, 2019-04-12 12:14:32 -0700,294, merge pull request 294 google google_sync google sync,,
1685,02ba2c1376d9930ef24313852dcb8731287261ba,echen <rechen@google.com>, 2019-04-12 11:16:59 -0700, , bump pypi version number friday release piperorigin revid 243298259,,
1686,061ec62854fab956c03369d578b40738b61a6dad,echen <rechen@google.com>, 2019-04-11 20:45:12 -0700, , fix bunch lint finding fix following finding upstream pylint chained comprehension comparison callable consider iterating dictionary len condition misplaced comparison constant value parameter raising format tuple redefined argument local redefined outer name syntax error trailing newlines unnecessary pas also deleted dead code fixed gpylint finding discovered along way mostly complex comprehension piperorigin revid 243196010,,
1687,3e1040d9fd72b99963f7f62823f295a0ddf1d9df,echen <rechen@google.com>, 2019-04-10 21:25:08 -0700, , make pytype readme title lowercase consistency piperorigin revid 242999985,,
1688,17de15cbcde3eed6fb9904100b3fec856361d811,ebecca Chen <rechen@google.com>, 2019-04-11 15:55:24 -0700,293, merge pull request 293 google lint run pylint build_scripts setup.py well,,
1689,1ed2bb5214f67dee9819dc23d25029772dbea029,ebecca Chen <rechen@google.com>, 2019-04-11 12:49:54 -0700, , run pylint build_scripts setup.py well lint rest source file pytype edits file free lint error disables relative import fire 2.7 seem useful tweak pylintrc little easier read maintain move pylint step .travis.yml build_scripts travis_script alphabetizes installs .travis.yml,,
1690,a26457c7820146c82b88650d7736cd48bba92428,ebecca Chen <rechen@google.com>, 2019-04-11 11:43:21 -0700,278, merge pull request 287 hiyashichuka 278_use_pylint add pylintrc 278,,
1691,e4208b3591ce3d15936f582c67c543084ba9fe0c,iyashiChuka <hiyashichuka.oisii@gmail.com>, 2019-04-11 20:14:19 +0900, , add pylintrc remove fixme modify max line length .modify travis.yml want pylint run regularly,,
1692,70b93b360119d2ef62b782ae79c70a046468d091,ebecca Chen <rechen@google.com>, 2019-04-10 15:05:35 -0700,292, merge pull request 292 google google_sync google sync,,
1693,d9ac4914ffb9bb10fdc09edf51de3804f292ab6b,echen <rechen@google.com>, 2019-04-10 14:33:33 -0700, , fix lint error merge_pyi address line long error http github.com google pytype pull 287 found one import file also taking opportunity clean everything flagged gpylint piperorigin revid 242941778,,
1694,991b0ebc06bf8670803190c7e8aded31589377aa,echen <rechen@google.com>, 2019-04-10 11:35:51 -0700, , limit number tracebacks pytype show one error without limit pytype occasionally show pagefuls error piperorigin revid 242908633,,
1695,2bd6ec03ccd78a8e092e65a28f8eb38e39880b46,ebecca Chen <rechen@google.com>, 2019-04-09 17:44:59 -0700,291, merge pull request 291 google google_sync google sync,,
1696,35cb3887ebad5845b362411063e9b7d9090109b8,echen <rechen@google.com>, 2019-04-09 15:47:59 -0700, , update pytype changelog include typeshed update update http github.com google pytype pull 290 piperorigin revid 242755752,,
1697,e0f72a12afe0a9bdb36ef1173702cbca237cecbe,demello <mdemello@google.com>, 2019-04-05 12:51:46 -0700, , fix two primitive object always compared type piperorigin revid 242176474,,
1698,08b623b4aaa93b999e3f3be8085d05d00b0dd678,ebecca Chen <rechen@google.com>, 2019-04-09 17:07:11 -0700,290, merge pull request 290 google update typeshed pin,,
1699,9bcf41a5c04ca62dee08a314fd01ffaed6367ce2,ebecca Chen <rechen@google.com>, 2019-04-09 15:29:17 -0700, , update typeshed pin match internal update yesterday,,
1700,cf4a7aef490fe44e7552698287107bbe8ff87d59,ebecca Chen <rechen@google.com>, 2019-04-05 11:56:45 -0700,289, merge pull request 289 google google_sync bump pytype pypi version number release,,
1701,6abddedd178d2a572017d4fd1910601d4a3ec984,echen <rechen@google.com>, 2019-04-05 11:17:36 -0700, , bump pytype pypi version number release piperorigin revid 242158627,,
1702,3a3d50f3b3fc277c07a32acdda329c7e6d030636,ebecca Chen <rechen@google.com>, 2019-04-04 12:01:09 -0700,288, merge pull request 288 google google_sync google sync,,
1703,c2da1e1c0525f31d80333ae7c4f986ee6ae7407a,echen <rechen@google.com>, 2019-04-04 11:26:57 -0700, , add fix http github.com google pytype issue 286 piperorigin revid 241968511,,
1704,24a738b3e423c4db4c7bdf07a7ae5c79c7d0c10f,ytype Team <pytype@googlegroups.com>, 2019-04-03 14:26:12 -0700, , add signature currently code enum.auto doe type check auto class made inherit intflag attribute enum object type check correctly however __init__ signature auto different typeshed used __init__ signature one point removed mypy seem need http github.com python typeshed pull 1331 commits pytype however seems piperorigin revid 241805634,,
1705,4a6e7bb95a1383dbeb94abfe996c3584c85a809b,echen <rechen@google.com>, 2019-04-03 00:36:31 -0700, , bump pytype pypi version number corresponding http github.com google pytype pull 284 another release today may overly optimistic edit date end wrong piperorigin revid 241678751,,
1706,f943e9823f7770a954a804e35e09685766857513,ebecca Chen <rechen@google.com>, 2019-04-02 19:47:51 -0700,284, merge pull request 284 google setup require typed_ast 3.3,,
1707,675cff96ffea22203809fc5e29838a0cf9aca1fd,ebecca Chen <rechen@google.com>, 2019-04-02 18:31:41 -0700, , require typed_ast 3.3 lower version requirement cause installation failure http travis ci.org google python fire job 514951139,,
1708,fb569926d9614280adc887ae2d8e524ee88c8f22,ebecca Chen <rechen@google.com>, 2019-04-02 15:46:24 -0700,283, merge pull request 283 google setup change development status stable production stable,,
1709,5d5de483f7cf2da9506820666b896fac774cb145,ebecca Chen <rechen@google.com>, 2019-04-02 15:11:28 -0700, , change development status stable production stable pypi seem recognize stable classifer search show project using production stable,,
1710,6c8ee2848e20eb88e5c77fa6bc419b20d58518fb,ebecca Chen <rechen@google.com>, 2019-04-02 15:03:44 -0700,282, merge pull request 282 google google_sync google sync,,
1711,38c72ff627989379189f3e99a105d45881d87402,echen <rechen@google.com>, 2019-04-02 13:51:50 -0700, , bump pytype pypi version number release piperorigin revid 241596631,,
1712,26b1c7a395831d4e9e10a0b5244bb4a7f0110b80,echen <rechen@google.com>, 2019-04-02 13:24:16 -0700, , add anystr overload work around pytype bug piperorigin revid 241591075,,
1713,7cf8bc5af59788414f2ce262435f74ff4cd4919e,demello <mdemello@google.com>, 2019-04-01 16:19:14 -0700, , python3 filter always return iterator technically return filter object behaves iterator practical purpose typeshed list signature iterator follow suit piperorigin revid 241421968,,
1714,f2571fa23e363bc021fbe53daf14f04b087b8b45,ebecca Chen <rechen@google.com>, 2019-04-01 15:42:54 -0700,281, merge pull request 281 google google_sync google sync,,
1715,7016cba6262c2db24fe7c5cf6c072101dc24f6d8,echen <rechen@google.com>, 2019-04-01 14:48:51 -0700, , add missing attribute method typing.chainmap __init__ method take number map type used approach http github.com python typeshed blob stdli itertools.pyi l62 listing common case overload piperorigin revid 241404306,,
1716,13f760f3b2fb333129bdfeac1cfaef64ce014d70,echen <rechen@google.com>, 2019-04-01 13:06:43 -0700, , bring pytype changelog date typeshed update http github.com google pytype pull 279 piperorigin revid 241383755,,
1717,892e2bcbb2772640ed0c093237858d270dd76096,echen <rechen@google.com>, 2019-04-01 12:50:34 -0700, , pytype add cache option put output temp dir fix http github.com google pytype issue 202. make easier play around pytype without leaving extra file lying around quickly repeated clean run debugging piperorigin revid 241380867,,
1718,6077a859393f718aa809c51cc01be2e86483b699,echen <rechen@google.com>, 2019-04-01 12:43:52 -0700, , rename pytype_output .pytype http github.com google pytype issue 202. using hidden directory make sense simplest workflow using pytype type checker advanced user rename directory anyway piperorigin revid 241379637,,
1719,96f562bf3a456055b3703284913c7a439faac86e,echen <rechen@google.com>, 2019-04-01 12:31:03 -0700, , make pytype ninja output readable fix http github.com google pytype issue 277 change pytype intermediate output looked like pytype single lot args path foo bar.py look like check foo.bar  infer foo.bar step fails full command line still printed end build passing cause command line printed every step also rewrite complex comprehension piperorigin revid 241377065,,
1720,cd8a83cb13fa8f6b13858d935062d1bfcb90a06e,echen <rechen@google.com>, 2019-03-29 17:37:04 -0700, , add typing.chainmap typing.counter fix http github.com google pytype issue 242 piperorigin revid 241081214,,
1721,7bb83f2d61024d8773c5148d90e26a436cca3707,echen <rechen@google.com>, 2019-03-29 17:16:06 -0700, , cleanup make typing.pytd little readable move two typing definition version info check order increasing version alphabetizes list collection alias add aesthetically pleasing newline piperorigin revid 241078973,,
1722,c451b179feb5c3a64961a03d973a2ab1dbe2fd73,demello <mdemello@google.com>, 2019-03-29 16:37:19 -0700, , add option xref show tracebacks pytype exception piperorigin revid 241074063,,
1723,a2fabfa889c348a4842d88b7e425dc0899f306ae,artin DeMello <martindemello@gmail.com>, 2019-04-01 13:40:59 -0700, , add dependency typed_ast 280 add dependency typed_ast also upgrade development status stable,,
1724,f39ed384d53116074809193fa7f7b817120257d6,ebecca Chen <rechen@google.com>, 2019-04-01 13:03:56 -0700,279, merge pull request 279 google typeshed update typeshed,,
1725,7317564dcdd539af32e7aa35992bab33ce8f456d,ebecca Chen <rechen@google.com>, 2019-04-01 11:35:17 -0700, , update typeshed,,
1726,31723ada8a73cf9150226c3ce6445790e859e8b8,ebecca Chen <rechen@google.com>, 2019-03-29 16:07:55 -0700,276, merge pull request 276 google google_sync google sync,,
1727,8f830f7ef3abb2fce18ef2a4bbbb3068ae87b53d,artin DeMello <martindemello@gmail.com>, 2019-03-29 15:30:53 -0700,275, merge pull request 275 google xref add executable xref setup.py,,
1728,d0538d1ab71a2e8b63d041f11c4ecf27694546c3,demello <mdemello@google.com>, 2019-03-29 13:58:33 -0700, , add link file anchor import statement piperorigin revid 241045402,,
1729,9d3c00233e136f6189f749700eecfa578620baf8,demello <mdemello@google.com>, 2019-03-29 11:49:54 -0700, , add copybara replacer ast27t ast27 left path _py_files case use typed_ast elsewhere piperorigin revid 241022240,,
1730,1cd14bcdb0aba9d3c0fab0571b1d2a98abfb60a2,demello <mdemello@google.com>, 2019-03-28 15:37:07 -0700, , add module node linked first byte file piperorigin revid 240868346,,
1731,e1bbef05346ab26c350d6f14f2a6b8617b40d86a,artin DeMello <mdemello@google.com>, 2019-03-29 14:52:38 -0700, , sync typeshed back master,,
1732,584b42c654c4371ed931e73029b8b16a868dde14,artin DeMello <mdemello@google.com>, 2019-03-29 14:34:30 -0700, , add executable xref setup.py,,
1733,1f619e0f3af06d4e654d237bc48490347083f65f,ebecca Chen <rechen@google.com>, 2019-03-27 14:17:53 -0700,273, merge pull request 273 google google_sync google sync,,
1734,89cad817d2264288304791ec83de6eb9c8e8f989,echen <rechen@google.com>, 2019-03-27 11:55:17 -0700, , support type ignore import line pyi file parser causing problem http github.com python typeshed pull 2887 issuecomment 476943850 new test call parse_string directly instead using ast contains internal detail like use __package__ current package piperorigin revid 240610622,,
1735,47e2bb1a5969d8309e2e7ec7265eda1b3b354475,echen <rechen@google.com>, 2019-03-27 11:51:52 -0700, , update open source doc piperorigin revid 240610004,,
1736,e7e09520a57f1add8224a9dc8b22eed52be17110,echen <rechen@google.com>, 2019-03-27 11:43:58 -0700, , fix lint warning noticed importing piperorigin revid 240608328,,
1737,43d4a5b8452248d0e308864def54692dc16a717b,amuhey <tamuhey@gmail.com>, 2019-03-27 11:39:49 -0700,272, made python_verision pytype.cfg runtime python version 272 270 resolve 272 piperorigin revid 240607458,,
1738,7913940e257ca9e5f0b141757a93c03e24016a01,demello <mdemello@google.com>, 2019-03-25 14:10:51 -0700, , improve exception error message bad import map piperorigin revid 240214956,,
1739,fddbad8c00a08b5d90acbbea8b25f7407ae619c7,ebecca Chen <rechen@google.com>, 2019-03-26 10:16:34 -0700,271, merge pull request 271 cclauss patch travis sudo tag deprecated,,
1740,b397d5f270a64b0085d848e7fa273bd5a299a8cc,clauss <cclauss@me.com>, 2019-03-26 12:49:55 +0100, , travis sudo tag deprecated travis recommending removing __sudo__ tag http blog.travis ci.com 2018 required linux infrastructure migration _if currently specify __sudo false__ __.travis.yml__ recommend removing configuration_,,
1741,9a2a4eb49449d18020e22d06e5640caee7b196be,ebecca Chen <rechen@google.com>, 2019-03-21 14:54:02 -0700,268, merge pull request 268 google google_sync google sync,,
1742,41433744700e691eadcdb5769c86b0b1d906e43e,echen <rechen@google.com>, 2019-03-21 14:14:48 -0700, , update pytype __version__ changelog pypi release depends typeshed update http github.com google pytype pull 267 piperorigin revid 239670039,,
1743,6d68cf7085bcf48769f9dd930b45a190e2638ead,demello <mdemello@google.com>, 2019-03-20 17:35:42 -0700,184, fix crash call lambda function see http github.com kythe kythe issue 184 piperorigin revid 239510964,,
1744,d326943d56dafd461bfa62a7fc11f2dc26ec946c,demello <mdemello@google.com>, 2019-03-20 16:51:17 -0700, , index import local declaration remote reference also fix case import x.y x.y.foo x.y line indexed within __init__.py rather imported file y.py piperorigin revid 239503865,,
1745,14167bc7fa69bdcc2a4623abf0f8b67b17f935b9,echen <rechen@google.com>, 2019-03-20 10:23:47 -0700, , widen return type ast.parse python test http github.com python typeshed pull 2859 changed return type module subclass ast still correct precise based description change intentional piperorigin revid 239423111,,
1746,b3aedfe86404b940fdc744db2f0219015662f4ec,urali <murali@google.com>, 2019-03-18 14:52:48 -0700, , classname field name namedtuple unicode also piperorigin revid 239066767,,
1747,054ecfe913e4715579567d04a4616bba96c7df64,demello <mdemello@google.com>, 2019-03-18 13:53:01 -0700, , remove pytype disable piperorigin revid 239053983,,
1748,6b2796e71ccad1d00bf1b6113edb6556ea4ea629,ebecca Chen <rechen@google.com>, 2019-03-21 14:07:22 -0700,267, merge pull request 267 google update typeshed pin match internal version,,
1749,58c87c5e7d156322506557a0d1d9da6ba8669491,ebecca Chen <rechen@google.com>, 2019-03-21 12:59:17 -0700, , cherry pick test fix,,
1750,0b367f5fd863acf9cb004bf086910b7958bfca76,ebecca Chen <rechen@google.com>, 2019-03-21 12:43:39 -0700, , update typeshed pin,,
1751,1b0ce4de0df858dbcd03c7d9244d5b7e1cfb2ee9,ebecca Chen <rechen@google.com>, 2019-03-18 13:52:23 -0700,263, merge pull request 263 google google_sync google sync,,
1752,69007bf0db92a12ca77f648405cfa917b2efca32,echen <rechen@google.com>, 2019-03-18 13:16:43 -0700, , add missing python method clear copy bytearray list fix http github.com google pytype issue 243 piperorigin revid 239046899,,
1753,d0b3336de375559a5dc69db05e8fe1881657b19d,echen <rechen@google.com>, 2019-03-18 12:58:36 -0700, , fix visibility variable annotation python 3.7 fix test failure seen http travis ci.org google pytype job 507287176 piperorigin revid 239043386,,
1754,7b2c5a79e06cfa2ea78fa3e50d1d0c926ffc60f7,echen <rechen@google.com>, 2019-03-16 20:22:03 -0700, , tweak sentence readme read naturally piperorigin revid 238836166,,
1755,06daac7b2e18daf2f2d6014b57af4f32dfe1a125,demello <mdemello@google.com>, 2019-03-15 22:19:08 -0700,73, allow late type bound constraint typevars fix http github.com google pytype issue pyfixit piperorigin revid 238762812,,
1756,126800c2aeb0fec6749b802b895bab4abea15fb7,echen <rechen@google.com>, 2019-03-15 17:59:58 -0700, , fix type fix http github.com google pytype issue 127 defined major minor tuple actually major minor micro releaselevel serial namedtuple pyfixit piperorigin revid 238743800,,
1757,d07d882fdc23ea270b353760020d7dd1a65ce9ef,echen <rechen@google.com>, 2019-03-15 17:08:56 -0700, , load overlay module available pyfixit piperorigin revid 238737989,,
1758,a59b100de08512301a6db28470fa35fecacc5eb2,echen <rechen@google.com>, 2019-03-15 15:20:03 -0700, , fix crash isinstance check accessing pyfixit piperorigin revid 238720531,,
1759,5fab9e0a45a730714f47d25d278ef9eec9132e2b,echen <rechen@google.com>, 2019-03-15 14:30:56 -0700, , add missing attribute fix http github.com google pytype issue 225 definition shamelessly stolen http github.com python typeshed blob master stdli and3 builtins.pyi pyfixit piperorigin revid 238711410,,
1760,911b836ce040f44a0afe8a0d466b93ccc7845f4e,echen <rechen@google.com>, 2019-03-15 13:49:23 -0700, , pytype allow overwriting variable annotation pyfixit piperorigin revid 238703730,,
1761,ab4415f899837d778bb2f1b03c2757ea8253f750,ebecca Chen <rechen@google.com>, 2019-03-15 21:02:14 -0700,261, merge pull request 261 google google_sync google sync,,
1762,1ec19df4a0748b9052003648b170a631391855af,echen <rechen@google.com>, 2019-03-15 13:06:11 -0700, , add one line changelog upcoming pypi release piperorigin revid 238696016,,
1763,915e27ca6fe83e47c2cb8339b3a4585bfefdba87,demello <mdemello@google.com>, 2019-03-14 16:11:02 -0700,219, remove kwonly args function call constructing kwargs fix http github.com google pytype issue 219 pyfixit piperorigin revid 238540234,,
1764,06e27c9baf7f603cf5aa1137fb5b08ab8c8affd7,echen <rechen@google.com>, 2019-03-14 13:00:42 -0700, , call verify_ast parse pyi fix http github.com google pytype issue 174 allows typeshed testing catch failure like unresolved import bad container solve recurring problem typeshed update crashing pytype pyfixit piperorigin revid 238501027,,
1765,75b8c30f4b2fa42b70963d6d48566c2b2679fe99,echen <rechen@google.com>, 2019-03-14 11:45:38 -0700, , update pytype version changelog preparation pypi release assuming break anything today planning release tomorrow piperorigin revid 238487256,,
1766,e897518185c63b379e1beeb0e3c342f62c28a2ff,echen <rechen@google.com>, 2019-03-14 10:26:36 -0700, , filter special typing member alias pyi file previous change support aliasing typing member caused spurious typing member supported natively pyi file rather defined typing.pytd aliased pyfixit piperorigin revid 238469422,,
1767,716841f88e5146e867504214ae9300385e51e505,ytype Team <pytype@googlegroups.com>, 2019-03-13 17:27:45 -0700, , __slots__ entry unicode str py2 matching piperorigin revid 238345059,,
1768,4bfe5cc87e66aa6222f29b11203a8ba775b1a63e,echen <rechen@google.com>, 2019-03-13 15:21:38 -0700, , delete pytype unnecessary copy asyncio.tasks stub make progress toward http github.com google pytype issue pyfixit piperorigin revid 238321114,,
1769,1f4730044b4644b885b6214c97abbc16eff3f4a7,echen <rechen@google.com>, 2019-03-12 11:56:47 -0700, , support type macro pyi file add pyi support alias contain type parameter type macro remove another blocker updating typeshed allows start using typeshed asyncio.tasks stub make progress toward http github.com google pytype issue pyfixit piperorigin revid 238065341,,
1770,bdc35c8025974e6cbddd5e7b4fa9be3d1e1f01f6,echen <rechen@google.com>, 2019-03-12 11:44:29 -0700, , partially fix lookup problem caused pyi circular import fix http github.com google pytype issue 227 claimed circular import could trigger lookup problem involving builtin type turn three module involved external type also left unresolved completely solving bug would require incrementally resolving pyi file caching dependency lookup messy also force ast verification happen earlier break test way understand partial fix good enough unblock typeshed upgrade pyfixit piperorigin revid 238062931,,
1771,1a3bf9ce428a4ec2a9d153cf411da0a457d61c01,ebecca Chen <rechen@google.com>, 2019-03-15 13:00:05 -0700,260, merge pull request 260 google setup remove outdated reference asyncio setup.py,,
1772,d89229dd16413c7dd2014fbe50453e209417c41c,ebecca Chen <rechen@google.com>, 2019-03-14 11:24:14 -0700, , remove outdated reference asyncio setup.py,,
1773,666cca911858d571e2b478b0255eb0a37c637669,ebecca Chen <rechen@google.com>, 2019-03-12 18:13:38 -0700,258, merge pull request 258 google google_sync google sync,,
1774,28265b341d0802cd04effa60b8dc9c33edfc3b4c,demello <mdemello@google.com>, 2019-03-11 17:00:15 -0700, , add toplevel function wrap pytype exception single error type also raise single error type xref piperorigin revid 237915116,,
1775,2df98364d64e3bcd70cd84652daed5feb63df02f,ebecca Chen <rechen@google.com>, 2019-03-11 13:16:45 -0700,257, export renamed typing module member 257 need imported exported resolve 257 piperorigin revid 237867524,,
1776,68cee37efb39a54214d40fe2d1b43c9bd84699af,demello <mdemello@google.com>, 2019-03-08 17:12:23 -0800, , fix set python_version python_exe correctly xref piperorigin revid 237547600,,
1777,64a8221acaf730b67960689ee502ce4d106d83a2,echen <rechen@google.com>, 2019-03-08 12:15:31 -0800, , forbid extra parameter optional pyi file also fix two lint error using assertraises piperorigin revid 237496123,,
1778,0409423e72c6955960db643145e51629a5a029e2,echen <rechen@google.com>, 2019-03-08 12:05:38 -0800, , teach pytype function class always evaluate true also tweak test using typex typey example ambiguous type annotation fix http github.com google pytype issue piperorigin revid 237494532,,
1779,2f97d0a6d5407003749a8d0ce487230177e435a6,ebecca Chen <rechen@google.com>, 2019-03-08 12:16:14 -0800,254, merge pull request 254 google google_sync google sync,,
1780,0b18d0dd8b7006346aada48aa89ff51b04c2fa73,echen <rechen@google.com>, 2019-03-08 11:03:14 -0800, , update pypi version number today internal release look good going release version pypi piperorigin revid 237481804,,
1781,bd20861776376af26983a737498f69c9c9baf0e3,echen <rechen@google.com>, 2019-03-07 17:08:30 -0800, , cleanup move compare.py shortens abstract.py make compatible_with easier reason since code one place add another case http github.com google pytype issue piperorigin revid 237358033,,
1782,f38543f286a7e426c7390886421740c808c0ece8,echen <rechen@google.com>, 2019-03-07 11:08:42 -0800, , add builtin fix pytype changelog probably pypi release soon since number small fix past week added line changelog look like empty release piperorigin revid 237282982,,
1783,c044e5e6f292eecf3cac02e240d43de3b25beb9c,echen <rechen@google.com>, 2019-03-06 22:23:26 -0800, , fix bug pytype definition piperorigin revid 237183983,,
1784,9c34acb86b3b490df8a61c540e665a32b7d6b533,ebecca Chen <rechen@google.com>, 2019-03-06 17:39:48 -0800,252, merge pull request 252 google google_sync google sync,,
1785,ddd308e6c216df76c6a40b56a4700b05a6c83e30,ytype Team <pytype@googlegroups.com>, 2019-03-05 11:16:17 -0800, , support lazy loaded attribute checking writable piperorigin revid 236884599,,
1786,04d54448c7366b125d09017a9f35e507e26e3e10,ytype Team <pytype@googlegroups.com>, 2019-03-04 16:10:15 -0800, , github.com google kythe github.com kythe kythe devtools script replace_string github.com google kythe github.com kythe kythe tested found affected target  piperorigin revid 236744922,,
1787,080339b9ea1e434007e3f2261167812321c65f03,ebecca Chen <rechen@google.com>, 2019-03-01 17:06:32 -0800,251, merge pull request 251 google google_sync google sync,,
1788,d7bb2b821d3c78422194f41fd3969cd3af656c8f,ebecca Chen <rechen@google.com>, 2019-03-01 16:01:55 -0800,249, add test_data manifest.in 249 also need imported exported rather merged directly planning use one test import process fix sent resolve 249 piperorigin revid 236395061,,
1789,9a2ef0156299d806b4f279e8e545bfefdd0f6500,echen <rechen@google.com>, 2019-03-01 12:06:09 -0800, , bump pypi version number release piperorigin revid 236353737,,
1790,add70ed8d9d079c2bfdbab402581b03b48c8b70e,echen <rechen@google.com>, 2019-03-01 11:29:52 -0800, , fix deprecated syntax pytype parser applies fix saw deprecation warning built pytype piperorigin revid 236347153,,
1791,1880136724d07835d323344366ba4d39bde2d614,ebecca Chen <rechen@google.com>, 2019-03-01 15:24:40 -0800,250, merge pull request 250 google google_sync google sync,,
1792,33a347112a9f5c6141a12e1ce409fb4e05bfa6f1,echen <rechen@google.com>, 2019-03-01 10:58:20 -0800, , internal change piperorigin revid 236341203,,
1793,67b45d3cf16c1f5501baed9e2c00eaaa4ad33f02,echen <rechen@google.com>, 2019-03-01 10:46:08 -0800, , work around typeshed bug python 3.4 fix http github.com google pytype issue 241 avoided describing change supporting 3.4 would work want put soon deprecated version example add test piperorigin revid 236339038,,
1794,ce86c513b6b6885700ad24328bd822b8345bd1a0,ebecca Chen <rechen@google.com>, 2019-02-27 19:15:19 -0800,248, include license manifest.in 248 need imported exported rather merged directly resolve 248 piperorigin revid 236039039,,
1795,78de3e137bc9d9697d080214a9b747e1ff326ce1,echen <rechen@google.com>, 2019-02-27 15:25:30 -0800, , update first line pytype readme emphasize main selling point piperorigin revid 236003957,,
1796,a861ce3c70e7a3284bcf6281ff94b3ca9a3419e3,ebecca Chen <rechen@google.com>, 2019-02-27 12:30:10 -0800,247, merge pull request 247 google google_sync google sync,,
1797,252cf084d74e8376854951322f682937665a0153,echen <rechen@google.com>, 2019-02-26 15:11:07 -0800, , fix crash caused temporary annotation self pytype allow self annotated __init__ also temporarily annotates self generic class make two behavior play nicely  piperorigin revid 235802451,,
1798,6cc00c16ec521ce2e39339e1652f576c60794a36,echen <rechen@google.com>, 2019-02-26 15:00:04 -0800, , cleanup fix complex comprehension lint error pytype abstract.py piperorigin revid 235800206,,
1799,7116af06b6c2a7397ffad2c18527fd3e1f0f163b,demello <mdemello@google.com>, 2019-02-22 15:47:56 -0800, , fix bad type definition piperorigin revid 235273421,,
1800,3573e89c8b9d469fa653d4b9495cc8babaf872ba,demello <mdemello@google.com>, 2019-02-20 15:59:59 -0800, , recover filepath module within xref piperorigin revid 234887444,,
1801,e0c16d4f5ed367ce4be2612a83d2b114b1884bb1,demello <mdemello@google.com>, 2019-02-20 13:42:26 -0800, , add imports_info support xref piperorigin revid 234860140,,
1802,9e0eb2ef70fac094a2ac53e4438b55b8e8545346,demello <mdemello@google.com>, 2019-02-19 14:55:34 -0800, , fix xref handle debug via pytype option piperorigin revid 234680134,,
1803,95d951491dcee6442c1e188237e639505148263b,echen <rechen@google.com>, 2019-02-14 17:09:06 -0800, , allow aliasing typing module pyi file pytype crash attempting use newest version typeshed one problem ast stub doe import typing _typing change support aliasing typing fix lint error caused complicated list comprehension piperorigin revid 234057345,,
1804,5ec29851706b8d24c09d9a1a1f9883f5e7220e23,ebecca Chen <rechen@google.com>, 2019-02-13 17:23:05 -0800,240, merge pull request 240 google google_sync google sync,,
1805,b4c8e1859bda8c42da8e52901170904800a491b2,echen <rechen@google.com>, 2019-02-13 13:04:11 -0800, , bump pypi version number release piperorigin revid 233813220,,
1806,c0b5ae07ea21549b1636725e6306efa6c6bba58c,echen <rechen@google.com>, 2019-02-12 20:50:12 -0800, , fix pyi circular import bug fix bug pytype would crash two module import member one member contains builtin type fix http github.com google pytype issue 227 allow remove pytype workaround typeshed stub trying construct test case external dependency cause problem think edge case triggered builtin also fixed lint error piperorigin revid 233682385,,
1807,fbcb303d4911fa0fcf219d0aaf111fcbd323d98d,echen <rechen@google.com>, 2019-02-12 09:16:31 -0800, , update pytype error message link point new website update link print end pytype finding think slightly nicer canonical documentation separate source code also make url bit shorter look neater piperorigin revid 233617940,,
1808,4dacbcefa46652fdf8929e6b66a7ff202cefa219,ebecca Chen <rechen@google.com>, 2019-02-11 17:33:03 -0800,238, merge pull request 238 google setup url update pypi url setup.py,,
1809,58ee06a30e7dde7a22286044defaaa185bea942b,ebecca Chen <rechen@google.com>, 2019-02-11 16:59:02 -0800, , update pypi url setup.py update url pypi homepage link left project page http pypi.org project pytype,,
1810,7c7222aa28f0ba4e2bf438b52fd0cdcc62bbe9b3,ebecca Chen <rechen@google.com>, 2019-02-08 17:03:26 -0800, , fix incorrect link pytype website home link worked correctly locally deployed site sending viewer,,
1811,23b342fada523bb56a6b83d02af79b8b11c2241e,ebecca Chen <rechen@google.com>, 2019-02-08 16:54:04 -0800,237, merge pull request 237 google google_sync google sync,,
1812,a4ccca655f2b7347856a89d5abe39cb1533abc5e,echen <rechen@google.com>, 2019-02-08 15:56:16 -0800, , add website file override hover style prevent text bolded hover caused page layout change table content moused add custom page layout order add navigation link side panel remove fixed footer sometimes overlapped navigation depending page size kept theme orderedlist attribution footer moving header removed project maintained google make vertical space original layout http github.com page theme minimal blob master _layouts default.html final effect minus cartoon snake piperorigin revid 233142164,,
1813,66f0afdd922ba0b354c75ee117caff60d28f6668,echen <rechen@google.com>, 2019-02-08 15:14:30 -0800, , add doc index.md page copy readme.md serve home page http pytype piperorigin revid 233135320,,
1814,2864804bd451f4b06951eed243590da50da1fab1,echen <rechen@google.com>, 2019-02-08 15:04:03 -0800, , cleanup pytype doc preparation adding website file start tracking jekyll config file internally otherwise staging various piece site right order pain change opensource update_docs.sh cover description.rst well update team doc piperorigin revid 233133520,,
1815,6e59ae56a1dcb39df830acf7c01052269ba6271a,echen <rechen@google.com>, 2019-02-08 14:44:03 -0800, , update description.rst reflect recent readme.md change piperorigin revid 233129794,,
1816,ff872804216c2d7c5892785af456dd18667db081,echen <rechen@google.com>, 2019-02-08 13:48:46 -0800, , make two tweak readme.md make first section header title move quickstart section earlier highlight installation instruction piperorigin revid 233119722,,
1817,a66db12f7b881d550e1bb3b8e29846b7ec44c902,ebecca Chen <rechen@google.com>, 2019-02-08 13:30:35 -0800,236, merge pull request 236 google google_sync google sync,,
1818,2ad54e70863971bdbb5677957882f90da861ae9e,echen <rechen@google.com>, 2019-02-08 11:09:14 -0800, , fix pytype changelog due merge conflict entry got added 2019.01.30 release belong also forgot add entry recent piperorigin revid 233091910,,
1819,dae1f9f279401e551eae6985116c1ba836db5dfe,ytype Team <pytype@googlegroups.com>, 2019-02-06 13:22:54 -0800, , decorate bytearray float .fromhex classmethod class method piperorigin revid 232733327,,
1820,be50c50a255978eea3b8fc631201884a2dd74e33,demello <mdemello@google.com>, 2019-02-05 16:32:02 -0800, , add argument group support tool arg_parser also add pytype infrastructure args xref debugging purpose piperorigin revid 232581935,,
1821,2c8c1cb5ea1473e2b6d4f0b922599848f7bd29e7,demello <mdemello@google.com>, 2019-02-05 16:20:32 -0800, , internal change piperorigin revid 232580044,,
1822,6fa8d0e813f08daabf81e88ed841c22901cd231f,echen <rechen@google.com>, 2019-02-01 14:32:04 -0800, , remove .good .bad code block pytype doc github markdown recognize suffix notice problem github ignores github page get confused render code incorrectly piperorigin revid 232038963,,
1823,8b078f710db44c52642381c658d45042acb2c69f,demello <mdemello@google.com>, 2019-01-31 15:14:18 -0800, , fix file vname lang signature piperorigin revid 231863583,,
1824,8375df62a1f1bf46049156050b89e1c840e406e0,ivachandra <sivachandra@google.com>, 2019-01-30 14:59:10 -0800, , add new verbosity level imply change existing verbosity piperorigin revid 231673951,,
1825,05f2e3aca63d252a24d38d48b2bfa427d389fb9b,ivachandra <sivachandra@google.com>, 2019-01-30 14:27:16 -0800, , unify options.create flow give benefit option created options.create post processed also help eliminate amount duplicate code around setting python_exe option piperorigin revid 231668239,,
1826,0ddf075afe5138cb346d1f77d5df3f7cb3277ed0,echen <rechen@google.com>, 2019-01-30 14:26:50 -0800, , fix variable annotation support python 3.7 fix http github.com google pytype issue 216 3.7 opcode removed functionality moved store_subscr piperorigin revid 231668171,,
1827,2c2ea9397172170dc72d4bb8a3722cdfdb0bd357,hxun <ahxun@google.com>, 2019-01-30 13:50:51 -0800, , change support annotation asyncgenerator asynciterable asynciterator piperorigin revid 231661484,,
1828,63de7323d0b235d607621c281d9b8efc889b7d73,ebecca Chen <rechen@google.com>, 2019-01-30 13:01:30 -0800,235, merge pull request 235 google google_sync google sync,,
1829,5737efc46c633732f571344a8bc1a6d9bea0fe48,echen <rechen@google.com>, 2019-01-30 09:26:40 -0800, , update pytype pypi version number release piperorigin revid 231608362,,
1830,9b0c38673450b1db396168ae428477d22ed26b10,echen <rechen@google.com>, 2019-01-29 11:20:59 -0800, , fix crash caused calling non class piperorigin revid 231438669,,
1831,25f50ee9032f72e6a1bdfa8d7a326a7b16b54a2a,echen <rechen@google.com>, 2019-01-26 13:56:50 -0800, , call metaclass initializer creating class code diffbase call setattr metaclass also doe normal attribute setting location support latter squeegee piperorigin revid 231067708,,
1832,37e0fbd16b139c6dfa72efd1ef516c9e5300287c,echen <rechen@google.com>, 2019-01-26 13:19:58 -0800, , support metaclasses currently way silence attribute error class attribute trying support code doe class meta type def __init__ ... setattr something class foo metaclass meta ... foo.something piperorigin revid 231066126,,
1833,51d60c7065a50c6b90766a8c56630fc222451ac3,ebecca Chen <rechen@google.com>, 2019-01-28 15:32:06 -0800,233, merge pull request 233 google google_sync google sync,,
1834,7b62e7efb83a4267b1e5897fe6d0249b259508c3,echen <rechen@google.com>, 2019-01-25 13:40:25 -0800, , add support changelog contributed maxvo commit piperorigin revid 230960635,,
1835,9bc1568dd27a22ca1c23f4b31faa2194d64a7ae3,hxun <ahxun@google.com>, 2019-01-24 19:20:37 -0800, , fix coroutine issue support python 3.7 issue description python 3.6 __aiter__ defined like async def __aiter__ python 3.7 allowed define like def __aiter__ detail refer http www.python.org dev pep pep 0492 api design implementation revision 3.5.2 __aiter__ expected return awaitable resolving asynchronous iterator starting 3.5.2 __aiter__ return asynchronous iterators directly old protocol used 3.5.2 python raise cpython 3.6 old __aiter__ protocol still supported raised cpython 3.7 old __aiter__ protocol longer supported runtimeerror raised __aiter__ return anything asynchronous iterator piperorigin revid 230834374,,
1836,1ca6da8536b0d7da9275d289c8b8c3dd80d698d1,ytype Team <pytype@googlegroups.com>, 2019-01-24 08:59:56 -0800, , add pytype overlay piperorigin revid 230730799,,
1837,b206ee489c0a3459fce58dccd67177c554a3597f,echen <rechen@google.com>, 2019-01-23 15:24:15 -0800, , update pytype copy asyncio.tasks fix http github.com google pytype issue 203 piperorigin revid 230614309,,
1838,5f5e4ada0c4a0d86bd1735509ac518c2cc53479c,hxun <ahxun@google.com>, 2019-01-22 20:45:21 -0800, , coroutine annotation support including native coroutine function defined async def ... asynchronous context manager defined async ... asynchronous iterator defined async ... generator based coroutine support decorator types.coroutine awaitable coroutine object piperorigin revid 230463838,,
1839,10189059948e8c9a7eecf64c56cce79c6f0f8651,demello <mdemello@google.com>, 2019-01-22 16:23:55 -0800, , move xref arg parser library client use piperorigin revid 230433629,,
1840,be0f9fd372165f65517a7b38d53d966808f60b9f,demello <mdemello@google.com>, 2019-01-22 15:22:23 -0800, , pas kythe vname field args xref piperorigin revid 230421688,,
1841,8a29e8acad78847f124b49c4f59ab6077582286d,ebecca Chen <rechen@google.com>, 2019-01-18 16:44:34 -0800,231, merge pull request 231 google google_sync google sync,,
1842,bfd5efda15b6823c8c879088ae00b025437e3977,echen <rechen@google.com>, 2019-01-18 14:21:05 -0800, , bump pytype pypi version release piperorigin revid 229993606,,
1843,5e7dd33dac899a823b090bb9fe7b10080c2d83cb,demello <mdemello@google.com>, 2019-01-17 16:56:00 -0800, , move part analyze_project argument parser tool useful tool want process argument pas along pytype_single config file processing left within analyze_project since need config file anything else piperorigin revid 229843677,,
1844,9f17bc679f34b7174fc92fde0a9f69f560cffd93,ebecca Chen <rechen@google.com>, 2019-01-17 16:48:12 -0800,230, merge pull request 230 google google_sync google sync,,
1845,0fc0fd839c9133e2563e942aca7d7710288652aa,echen <rechen@google.com>, 2019-01-17 14:57:51 -0800, , move test type annotation right bucket piperorigin revid 229823713,,
1846,00788c2eea8fb3b80de02d3e9e1a03f367434ac3,effrey Jedele <jeffrey.jedele@gmail.com>, 2019-01-17 11:31:16 -0800,229, 228 fix parsing python version string 229 python distribution like anaconda modify python version resolve 229 piperorigin revid 229786474,,
1847,c5a8d26328a2ceba114b15478fc9c27647a1920f,demello <mdemello@google.com>, 2019-01-15 17:04:17 -0800, , handle attribute access span multiple line also deduplicates list kythe fact opcode trace duplicated kythe fact need unique piperorigin revid 229468796,,
1848,648f6f233312ed2ade1a6b74f0cf8549750c02d9,demello <mdemello@google.com>, 2019-01-15 14:35:31 -0800, , add instruction testing xref kythe integration command line piperorigin revid 229442222,,
1849,35fc64e4e51c6bd89e8e15078475068f0c4128ea,ivachandra <sivachandra@google.com>, 2019-01-15 11:20:10 -0800, , tweak python_exe python_version alone set config.options object also make input filename formal argument piperorigin revid 229406247,,
1850,3df067185f0132d227615c776e92832d4563a815,demello <mdemello@google.com>, 2019-01-14 16:40:20 -0800, , constructing class inheriting call setup calling __init__ piperorigin revid 229280965,,
1851,e40712785939d80437cc9d63a20e2803b5a37c5c,ebecca Chen <rechen@google.com>, 2019-01-12 03:38:10 +0000, , set theme jekyll theme minimal,,
1852,43dd2e94478b4ab3a136e21fbc1af241e6fe5698,ebecca Chen <rechen@google.com>, 2019-01-08 15:51:26 -0800,224, merge pull request 224 google google_sync google sync,,
1853,c7735cfab7ece7638701bfe6d76eb63398b92519,echen <rechen@google.com>, 2019-01-08 14:05:14 -0800, , update broken link github markdown need filename.md section filename section piperorigin revid 228395847,,
1854,613c2985591f044693e6d6f44d156547a2570f28,demello <mdemello@google.com>, 2019-01-08 13:19:30 -0800, , internal change piperorigin revid 228386872,,
1855,f30a091552a0a356538ad05ed4c994a7ba62bdf5,ebecca Chen <rechen@google.com>, 2019-01-08 13:03:14 -0800,223, merge pull request 223 google google_sync google sync,,
1856,16d77b8d5cf18eb501fd61fbd2299db39cc28a63,echen <rechen@google.com>, 2019-01-07 14:29:20 -0800, , fix pytype handling typing.noreturn built two target new finding one crash three build successfully change piperorigin revid 228236436,,
1857,314bd8c3f904dc165aa3e2c63b75d0a1b4ac3779,echen <rechen@google.com>, 2019-01-07 11:55:54 -0800, , update pytype readme use new intro internal landing page incorporate quickstart effectively show easy set pytype piperorigin revid 228208183,,
1858,fdd0456b58f8623eefa0eb44a953bceee3d6fe4f,echen <rechen@google.com>, 2019-01-07 11:37:32 -0800, , internal change piperorigin revid 228204617,,
1859,c189e26100b0887ee889d8bb2c9fbefc9770f639,echen <rechen@google.com>, 2019-01-07 02:22:52 -0800, , update merge pyi readme reflect argparse help change flip .py .pyi file description match actual usage piperorigin revid 228129221,,
1860,48609fd5f42663960f6b32597605b384887d688f,echen <rechen@google.com>, 2019-01-04 20:52:51 -0800, , add link errors.md file github bug piperorigin revid 227952958,,
1861,bdd2d426aa2fa7b71ae6acc44802786d4b572582,echen <rechen@google.com>, 2019-01-04 20:00:52 -0800, , remove pytype faq title redundant piperorigin revid 227949684,,
1862,abfd069f67a7c0fe24f711063080c72897514988,ebecca Chen <rechen@google.com>, 2019-01-04 22:09:20 -0800,222, merge pull request 222 google google_sync google sync,,
1863,15a3e3e47d19ed8c73603ae20d8a95485a26a279,echen <rechen@google.com>, 2019-01-04 17:49:34 -0800, , open source pytype faq fix http github.com google pytype issue 152 piperorigin revid 227940599,,
1864,1c60f309ef9ff64fa1568e44489f319e41f030e7,echen <rechen@google.com>, 2019-01-04 17:47:52 -0800, , internal change piperorigin revid 227940472,,
1865,50109a1f14685bf1754731a4886fb2b82cf10334,echen <rechen@google.com>, 2019-01-04 16:38:13 -0800, , internal change piperorigin revid 227933322,,
1866,9290b2f0c25f421f5fea2f7a30377b3a476c33b7,echen <rechen@google.com>, 2019-01-04 13:13:33 -0800, , internal change piperorigin revid 227902597,,
1867,d44f4c2f967a2536e60f56b9dfa8915540b82499,echen <rechen@google.com>, 2019-01-04 13:02:00 -0800, , fix misleading argparse description merge_pyi fix small issue bothered last time tried use tool order merge pyi foo.py foo.pyi follow help message seems instruct switch .py .pyi file piperorigin revid 227900770,,
1868,c708739e6cc06bbc519103ffc8a03f86c8eacc8b,echen <rechen@google.com>, 2019-01-04 10:18:55 -0800, , deprecate variant unused  piperorigin revid 227874882,,
1869,57d0eddd965b9ce3630502033d71d6747b0d8fd3,echen <rechen@google.com>, 2019-01-03 15:57:30 -0800, , resolve old pytype todo squeegee piperorigin revid 227765325,,
1870,f87099bbe2c81b064d42dedfe524fbc9535138b5,echen <rechen@google.com>, 2019-01-02 12:14:06 -0800, , store variable annotation yet defined object common use variable annotation declare type object yet defined support use case retrieving local variable attribute __annotations__ otherwise found putting __annotations__ item pyi output piperorigin revid 227560239,,
1871,13c4e446a2617f509ebd684eb4bb566493e460aa,demello <mdemello@google.com>, 2019-01-02 11:46:50 -0800, , fix need use string.find string.index piperorigin revid 227555749,,
1872,45153eff38ccbf264a71677da022560af18d425a,echen <rechen@google.com>, 2019-01-02 10:54:10 -0800, , fix bug variable annotation handling fix bug pytype would crash __annotations__ overwritten also doe small cleanup piperorigin revid 227546284,,
1873,06fadb9dfd21783825e83dcdd04b0e5ba44f252f,ebecca Chen <rechen@google.com>, 2018-12-26 10:14:13 -0800,220, merge pull request 220 google google_sync google sync,,
1874,18001c279d2cf3a3f5a0357a908bf147cfc27ab0,echen <rechen@google.com>, 2018-12-21 16:15:31 -0800, , stop special casing unreadable file skip type stub importlab land graph pytype get importlab include unreadable python file type stub thus stop special casing unreadable file main since pytype analyze normally report syntax error need filter .pyi .pytd file pytype_runner fact pytype see type stub make easier implement http github.com google pytype issue 151 also bump version number order release fix http github.com google pytype issue 212 piperorigin revid 226556520,,
1875,161b318059b6dc73e19106d5b5ca69b8c324b6d3,echen <rechen@google.com>, 2018-12-20 12:17:57 -0800, , fix pytype flaky test fix failing half time complaint __builtin__ pickled non piperorigin revid 226374183,,
1876,17d83833871b1c6e00fd8cf88e234e1ce1325a9c,echen <rechen@google.com>, 2018-12-19 15:31:47 -0800, , use hash instead seem fixed flaky test seems like good thing anyway piperorigin revid 226243994,,
1877,c8573cbb40f00a27c88027487f5a9eb77df806f5,ebecca Chen <rechen@google.com>, 2018-12-19 15:42:45 -0800,218, merge pull request 218 google google_sync google sync,,
1878,60e0efc667463f0063ee23436062ad35cfd9034e,ebecca Chen <rechen@google.com>, 2018-12-19 14:41:20 -0800,217, add testing framework target python 3.7 217 fix http github.com google pytype issue 208 resolve 217 piperorigin revid 226236301,,
1879,24be93a0f5d2d83058a83214e8fe70838780ea3e,demello <mdemello@google.com>, 2018-12-18 14:59:28 -0800, , minor refactoring replace creating new unsolvable common enough operation short piperorigin revid 226065691,,
1880,e93af2da12e15785cafc0e584d3471338d793a54,echen <rechen@google.com>, 2018-12-18 14:20:55 -0800, , make attribute.py prefer specific value submodules sometimes __init__.pyi contains submodule module entry also exists submodule.pyi precise information previously using __init__ attribute using submodule pyi instead startblock 2018 mtv piperorigin revid 226058674,,
1881,e09726603f40be9ee212f5d6c2de13719eb4936f,ebecca Chen <rechen@google.com>, 2018-12-18 13:27:01 -0800,213, merge pull request 213 google google_sync remove .py report 204,,
1882,cd29f90d4435c232f3240a6f102b2da20e9046a5,itwik Sharma <ritwik.1204@gmail.com>, 2018-12-18 11:59:15 -0800,204, remove .py report 204 part 111 resolve 204 piperorigin revid 226035107,,
1883,580c2d8333f290ea6b173842cb958a52b5fb1e17,ebecca Chen <rechen@google.com>, 2018-12-17 15:35:13 -0800,210, merge pull request 210 google google_sync google sync,,
1884,69b4635182a3f232d5876016f56e2495706f19a1,echen <rechen@google.com>, 2018-12-17 14:19:56 -0800, , fix lint error exposed importing github import showed case using assertequal rather assertlen internally caused import larger needed also fixed pre existing lint error affected file piperorigin revid 225889017,,
1885,9ad3b3354b108204b6c1f95adabe25adc15f8433,itwik Sharma <ritwik.1204@gmail.com>, 2018-12-17 13:52:55 -0800,205, add 205 change try block continuation 204 resolve 205 piperorigin revid 225883515,,
1886,4714023296fe8bb5cd0e7b8e92cf166e68b90314,ivachandra <sivachandra@google.com>, 2018-12-12 11:02:07 -0800, , remove unnecessary pytype disable wrong arg count comment piperorigin revid 225216688,,
1887,17b72a4c75ccbc64afdf3e74383a0d8a2c44b395,ebecca Chen <rechen@google.com>, 2018-12-12 14:19:30 -0800,201, merge pull request 201 google google_sync google sync,,
1888,bc82692116198f87d005b07ede35522d69ee53c2,echen <rechen@google.com>, 2018-12-11 16:15:59 -0800, , add python 3.7 opcode mapping attempted open source export failing target python version set 3.7 test run host 3.7. could changed test fix problem since want support 3.7 eventually anyway instead added new opcode mapping changed accept 3.7 added 3.7 magic number added stub implementation load_method call_method usual fixed lint error found since end pypi release yesterday bumped version number match release date opcodes checked http docs.python.org library dis.html new 3.7 got numeric code python 3.7.1 import dis class ... def self ... pas ... def ... return ... list instruction opname load_global opcode 116 arg argval argrepr offset starts_line is_jump_target false instruction opname call_function opcode 131 arg argval argrepr offset starts_line none is_jump_target false instruction opname load_method opcode 160 arg argval argrepr offset starts_line none is_jump_target false instruction opname call_method opcode 161 arg argval argrepr offset starts_line none is_jump_target false instruction opname return_value opcode arg none argval none argrepr offset starts_line none is_jump_target false piperorigin revid 225090317,,
1889,1b2e08cf05bfa71403f4cf466541a4c55fe5e691,echen <rechen@google.com>, 2018-12-11 15:57:05 -0800, , resolve two opensource export issue move python test py3 test_errors.py ignore setup.py copybara config piperorigin revid 225086882,,
1890,49ee171d6e6ea3d8608020cb0946db959808fc39,echen <rechen@google.com>, 2018-12-10 11:52:57 -0800, , move incorrectly bucketed test test accidentally put test type annotation file blocking github export piperorigin revid 224854721,,
1891,aabaafe6d1e741fa50674011161319ee50ee7c82,echen <rechen@google.com>, 2018-12-10 11:33:04 -0800, , update pypi version __version__.py changelog piperorigin revid 224850885,,
1892,bcac071141d0a9c872515ecab56f13923ccefd66,echen <rechen@google.com>, 2018-12-06 11:36:20 -0800, , prettify rest operator slots.py add symbol every operator builtin symbol human friendly description get set del item__ __getslice__ squeegee startblock 2018 mtv piperorigin revid 224376610,,
1893,d978620686707fa9b53c04412023cafbbc8845d8,hxun <ahxun@google.com>, 2018-12-05 14:22:28 -0800, , support pep 526 variable annotation syntax piperorigin revid 224220790,,
1894,166936aaf1d3f57a817098927b14ad790b181d75,echen <rechen@google.com>, 2018-12-05 14:09:55 -0800, , remove third_party pytype setup.py file needed open source project internal copy prevents directly accepting touch e.g. http github.com google pytype pull 199 also fix annotation causing build failure piperorigin revid 224218690,,
1895,63b997c42fe16d528d92c92f81cbe3f44d6481fa,sudol <tsudol@google.com>, 2018-12-03 15:41:25 -0800, , handle pointer type hashed data structure std unordered_set replaced std set element set may modified violated std unordered_set contract already support std set pointer value std unordered_map used const cfgnode safely use node hash value piperorigin revid 223876810,,
1896,0934e460a4efb52de1ea7a20a0a2f9b6077dbc4a,sudol <tsudol@google.com>, 2018-12-03 15:16:58 -0800, , add binding binding ordered binding generated program instance get unique allowing easily used ordered data structure piperorigin revid 223872429,,
1897,54ae80151c9229a54b25454409a4ed20c3141af2,sudol <tsudol@google.com>, 2018-12-03 15:08:58 -0800, , refactor set cfgnodes use custom comparator remove undefined behavior typegraph library using cfgnode instead memory address using cfgnode pointer set piperorigin revid 223871080,,
1898,f690f7ed27677dc8ef38ea3536d907a57ac9c01e,echen <rechen@google.com>, 2018-11-30 15:53:19 -0800, , fix definition builtins input raw_input got little bored debugging flaky nondeterminism test piperorigin revid 223588852,,
1899,274ecd6ef4be2790ebaf1aeb96b69e16021fc63e,hxun <ahxun@google.com>, 2018-11-30 15:49:23 -0800, , fix bug class piperorigin revid 223588260,,
1900,91dcc38d2b246b4880827eca91a7c29100c607cd,echen <rechen@google.com>, 2018-11-27 14:39:24 -0800, , set default target python version host version pytype single pytype set default python version also check python_exe specified executable match python version previously simply assumed matched resolve pre existing lint error fix http github.com google pytype issue 192 piperorigin revid 223060355,,
1901,d1b9413529d971a06906e7edb6658ce0c4363921,echen <rechen@google.com>, 2018-11-21 13:52:11 -0800, , improve error message operator currently operator error show either unsupported operand wrong arg type binary operator attribute error unary operator change error always unsupported operand show symbol rather double underscore name change look okay ahead make change remaining operator slots.py piperorigin revid 222455959,,
1902,0b718d6737ce9bc88bdcfe6035865a60a3b19f72,sudol <tsudol@google.com>, 2018-11-21 09:44:25 -0800, , add visitor extracting definition visitor based ast.nodevisitor find variable function class definition source file type hint piperorigin revid 222421647,,
1903,3cfcf04ecb3acf24a2bda605010233e4fbe67fa5,echen <rechen@google.com>, 2018-11-20 23:50:49 -0800, , remove unnecessary traceback fix bug unnnecessary traceback appeared due function caching add regression test another traceback related bug disappeared point piperorigin revid 222361585,,
1904,073a1fd6a1ec78c26788fd2f272f123b38024759,hxun <ahxun@google.com>, 2018-11-20 16:56:44 -0800, , wrong number type parameter generator dict callable print detail error message piperorigin revid 222329401,,
1905,7eeb1dea0fac74039acb6d0eec9edca8d5f18c2c,echen <rechen@google.com>, 2018-11-20 16:43:43 -0800, , cleanup deduplicate code relating reversible operator remove code duplicated code slots.py fix definition __pow__ __rpow__ slot remove unused code slots.py transforms.py piperorigin revid 222327719,,
1906,cd0d50c2f536b51e5feb6f68cb92054c6797a06d,sudol <tsudol@google.com>, 2018-11-20 14:22:55 -0800, , switch class member dicts instead list make member management little easier reflects python pytype handle class piperorigin revid 222306402,,
1907,4351343515d68a2a04ec1af5bcd21574aaacb8d0,echen <rechen@google.com>, 2018-11-19 13:56:56 -0800, , pytype add keep going option change default behavior stop first error option keep going analyze much possible squeegee piperorigin revid 222133400,,
1908,5a383a837e7b6d4c5902bb91a1e8a5a4b92a43ff,echen <rechen@google.com>, 2018-11-19 11:34:04 -0800, , copybara rewrite assertlen assertequal len assertlen method googletest get abseil since gpylint suggests using think rewriting unittest method robust trying remember avoid suppress lint warning piperorigin revid 222109887,,
1909,9e720fbb08f517e27c6902e278b32af00e84d80e,ebecca Chen <rechen@google.com>, 2018-12-05 14:11:15 -0800,199, merge pull request 199 brianquinlan patch use http website url scheme,,
1910,a4264cba712adbf2c8b5742230523c085dba9357,rian Quinlan <brian@sweetapp.com>, 2018-12-04 18:28:02 -0800, , use http website url scheme,,
1911,eae22b48630abf08263e1839aaebd31bd10c8e84,ebecca Chen <rechen@google.com>, 2018-11-19 13:12:12 -0800,196, merge pull request 196 google google_sync google sync,,
1912,23740bf5bb44254e8ba3f5ddac3b65bf393985da,echen <rechen@google.com>, 2018-11-19 11:07:55 -0800, , fix bug generate config small cleanup fix bug generate config produced config containing disable enable make private since realized much better use piperorigin revid 222105208,,
1913,2737e7e69203b1d72f019c5cf2c046057c2f3823,echen <rechen@google.com>, 2018-11-16 11:53:43 -0800, , pytype tool improve status message edits changelog include change xun annotation fix since realized forgot ask entry one print notification importlab run error unparseable input specifies pytype counting number local dependency since skip typeshed pip installed one print completion message pytype merge pyi piperorigin revid 221828874,,
1914,fae7246a5e410b3de3bbda225ceea92b8d95ed0c,hxun <ahxun@google.com>, 2018-11-15 18:47:02 -0800, , forbid callable forbid partially parameterized annotation generator forbid noreturn parameter annotation variable annotation inner type make number allowed parameter interpreter pytype optional piperorigin revid 221728413,,
1915,2984a904ada11fe1d93de859720ed130040622d9,echen <rechen@google.com>, 2018-11-15 17:02:57 -0800, , cleanup part move mixins abstract.py new mixin.py last part abstract.py still 3500 line 4800 piperorigin revid 221715875,,
1916,4c17115e14859b91661734fa1bdafba9d3fa65ae,echen <rechen@google.com>, 2018-11-14 19:52:04 -0800, , cleanup part move function related thing abstract.py function.py also move vm.py function.py need make function py_library renames functionargs args avoid redundant piperorigin revid 221558357,,
1917,5b89bd762fd477b5736f1cda852bf1b799695376,echen <rechen@google.com>, 2018-11-14 17:11:48 -0800, , cleanup part fix import relationship pytd_utils parser previously parser depended pytd_utils build pytd_utils imported parser remove problematic import moving definition jointypes pytd_utils canonical_pyi parser change allow pytd_for_parser depended upcoming target pull parser piperorigin revid 221541060,,
1918,36c8b17dd3909f694394d976b39d0127ac4df640,echen <rechen@google.com>, 2018-11-14 16:59:48 -0800, , require importlab 0.4 greater pytype fix http github.com google pytype issue 194 piperorigin revid 221538762,,
1919,f6b820caf0abeb0f84208360a78f4dc2765f7988,echen <rechen@google.com>, 2018-11-14 16:24:50 -0800, , cleanup part move part abstract.py new also update cmakelists.txt match build pytd.py library build piperorigin revid 221532199,,
1920,b252fb79747eb3c11115181b32070219fecc3671,echen <rechen@google.com>, 2018-11-14 11:01:19 -0800, , cleanup part add bunch isinstance wrapper one common way one abstract.py object depends another isinstance check allowing check happen without importing abstract.py make possible break file piperorigin revid 221474115,,
1921,6215068e74b8d70e51cd21efc763b156cbd026e2,echen <rechen@google.com>, 2018-11-13 21:07:47 -0800, , cleanup part rearrange abstract.py make easier split make every static method non static top level function also extended change needlessly static method loadmarshal.py turn full_type_name top level function merges type parameter name generator.send generator.ret name top file remove chain wrapsdict _get_class first two alias used replaced full name aliased object _get_class replaced similar make merge_values classmethod union method easily moved abstract.py due use union want top level function thing move utility file piperorigin revid 221384997,,
1922,8068504f6c96f2a02819ec7b1f6170a0fea01fe1,echen <rechen@google.com>, 2018-11-13 16:41:14 -0800, , cleanup make classmethod first string aimed breaking abstract.py overall plan make many thing possible stand alone function move everything except subclass abstract.py put mixinmeta subclass new mixin.py function related thing function.py everything else new part first step turning every static method either stand alone function moved class method prove continue abstract.py change turn classmethod fix lint error along way piperorigin revid 221357473,,
1923,8b4c3cf680059a6400ae0145f0c4443441d0c05b,sudol <tsudol@google.com>, 2018-11-13 14:42:49 -0800, , split test helper function library piperorigin revid 221337286,,
1924,59e2107ef6e549659b0cb72444a6547037ae5e43,ivachandra <sivachandra@google.com>, 2018-11-13 14:00:12 -0800, , add enable option pytype single option allows one specify check want pytype perform specifying option enable disable error piperorigin revid 221329067,,
1925,9cb33165eed78fb1df48ba7664b58fdef931670b,sudol <tsudol@google.com>, 2018-11-12 12:28:40 -0800, , add source kind location field definition source source file definition optional typically left blank test location string combining definition source lineno kind kind object definition represents e.g function function class class primarily used error message piperorigin revid 221137200,,
1926,9229add0d3f74c958ee057b90fb6bf02af0f63ea,demello <mdemello@google.com>, 2018-11-12 12:19:19 -0800, , allow source code passed xref string piperorigin revid 221135884,,
1927,1d8dd6216a92d0b68bab9e2e87c6ed8e69f26346,sudol <tsudol@google.com>, 2018-11-12 09:59:17 -0800, , add error class pyi checker also fix couple small error definitions.pyi piperorigin revid 221109621,,
1928,9646d6b022820c1eeedaac2fedc07726ddb75771,hxun <ahxun@google.com>, 2018-11-08 15:02:18 -0800, , make type parameter match type type renaming piperorigin revid 220708292,,
1929,1fac53333aca0e8f3062eef61a71a7304ddce162,sudol <tsudol@google.com>, 2018-11-07 15:48:00 -0800, , fix typo definitions.pyi piperorigin revid 220543676,,
1930,bbcafd66e687eecc38c3dd99c60206629862b68e,ebecca Chen <rechen@google.com>, 2018-11-06 15:28:04 -0800,191, merge pull request 191 google google_sync google sync,,
1931,3eb8f489b23438a516ee839c9dc23d2be30d34d4,echen <rechen@google.com>, 2018-11-06 14:24:11 -0800, , remove pyi_checker tool cmakelist.txt subdirectory sorry noise grepped pyi_checker pytype look like anything else missed piperorigin revid 220351986,,
1932,df3065359ba50dc7147cd408bad63c1feb0ce780,echen <rechen@google.com>, 2018-11-06 14:06:56 -0800, , remove pyi_checker cmakelists.txt exclude metadata check run pytype host version dataclasses even failing 3.7 unknown reason also excludes xref cmakelists.txt check cmake file either piperorigin revid 220348479,,
1933,a46c8b74c673c5226d4efa84b48731b796dbb9b4,echen <rechen@google.com>, 2018-11-06 12:35:03 -0800, , process annotation soon possible type parameter renaming change exposed bug called class annotation used function causing incorrectly store unprocessed annotation instead process annotation soon become available piperorigin revid 220331832,,
1934,ec3b8a90c3e619f18e508de8ca3308cc57eadedb,echen <rechen@google.com>, 2018-11-06 12:24:39 -0800, , report supported yet type parameter name reused instance pattern cropped run unrelated change piperorigin revid 220330024,,
1935,1e0ae3f5f4a08c4b96b62b25b029625ed93604b1,echen <rechen@google.com>, 2018-11-06 12:22:02 -0800, , pytype use imports_info allow pyi file reuse switch pytype use imports_info instead pythonpath make bug fix prevent deletion unrelated map entry stop clearing pytype_output run fix http github.com google pytype issue 173 squeegee meow give moma badge piperorigin revid 220329564,,
1936,5999988ba233569ee393fe5c9231bfb8f032f193,echen <rechen@google.com>, 2018-11-05 20:26:20 -0800, , cleanup rename type_parameters reduce confusion last talked confusing conceptually different attribute named type_parameters change attempt clear confusion following renames      piperorigin revid 220219405,,
1937,35d0cf51a21ce3ecb5d511d12fa2411907b8c736,echen <rechen@google.com>, 2018-11-05 17:28:45 -0800, , make imports_info behavior general imports_info previously one user pytype.bzl soon second one pytype need handle thing carefully remove output check _validate_map believe leftover long gone multifile mode previously load_pytd sometimes used presence imports_map determine whether use typeshed sort worked imports_map user also pre loaded typeshed via instead set use_typeshed false used otherwise always allow loading typeshed fix bug empty imports_map somtimes confused imports_map none piperorigin revid 220202794,,
1938,22cd36f3588fe147b2eed9979965fe74654d82c6,echen <rechen@google.com>, 2018-11-05 13:54:52 -0800, , pytype get precise deps precisely compute module direct dependency rather assuming pytype single action happen sequentially also remove unused attribute duplicate copy make progress toward http github.com google pytype issue 173 squeegee piperorigin revid 220166606,,
1939,bf2d2ccb60d759161785ec0ac15d532a03bb9103,hxun <ahxun@google.com>, 2018-11-05 13:41:28 -0800, , solution type renaming part move logic collecting type parameter information instance base class add scope type parameter change substs data structure aliasingdict matcher.py piperorigin revid 220164169,,
1940,d56178462cabecf2e1bf7d522b75eb34eec8193f,hxun <ahxun@google.com>, 2018-11-05 13:40:37 -0800, , solution type renaming part add unionfind data structure support better type renaming modify add_alias aliasingdict update support type parameter merging piperorigin revid 220164007,,
1941,5c20357487a557631d1b2103f38aa2f546d750d7,echen <rechen@google.com>, 2018-11-02 21:42:56 -0700, , use importlab new trim option pytype squeegee piperorigin revid 219905422,,
1942,ab24f2defcfa108e5ce4a19860cb05a33ce59f92,sudol <tsudol@google.com>, 2018-11-02 13:33:52 -0700, , internal change piperorigin revid 219852148,,
1943,f7d27f7595e50e5ccef3edf56c8fae8ca8535c8a,echen <rechen@google.com>, 2018-11-02 10:43:00 -0700, , populate changelog populates changelog entry pypi release update documentation keep changelog tag date separately pushed github tag release fix http github.com google pytype issue 168 piperorigin revid 219823609,,
1944,591d18d542aed96b7aae69ed1e5d49f27a491235,ebecca Chen <rechen@google.com>, 2018-11-01 15:51:07 -0700,189, merge pull request 189 google google_sync pytype naively generate ninja file,,
1945,d84d3b618a47454d730b52bb8e6bbdd38f4ab759,echen <rechen@google.com>, 2018-11-01 14:47:03 -0700, , pytype naively generate ninja file pytype farm pytype single call ninja via subprocess end change description included short explanation ninja work detail http ninja build.org manual.html called change naive doe avoid clearing pytype_output output reused run generate fine grained dependency info ninja parallelize build improvement future make progress toward 173. fix 169 add change new changelog file discussed starting changelog meeting might well start added single entry recent release show file structured backfill rest file later add ninja setup.py move pyi file subdirectory pytype_output two pyi dirs pyi pyi_1 add method writes pytype single rule build.ninja add method appends single build statement build.ninja add setup_build method writes full build.ninja file using two helper method differs two main way old loop skip useless action count builtin system file progress message second change made pytype file count would line ninja action count add build method call ninja via subprocess ninja work ninja look build.ninja containing number rule build statement example rule infer command pytype single build foo.pyi infer foo.py build bar.pyi infer bar.py foo.pyi defines infer rule statement build foo.pyi bar.pyi second build statement foo.pyi say bar.pyi depends foo.pyi ninja ensure foo.pyi bar.pyi present date executing build statement necessary variable provided default also easy define custom one rule infer command pytype single pythonpath build foo.pyi infer foo.py pythonpath pytype_output pyi tested new existing unit test plus pip installing pytype change running github repos piperorigin revid 219702660,,
1946,9891f3370ab84d1dbe8be7d9c0c88ef651ab5246,artin DeMello <martindemello@gmail.com>, 2018-10-31 18:26:35 -0700,188, merge pull request 188 google email remove custom email notification setting .travis.yml,,
1947,a8616730f80d0193b220622240452e8c1818f3af,ebecca Chen <rechen@google.com>, 2018-10-31 18:08:22 -0700, , remove custom email notification setting .travis.yml based reading http docs.travis ci.com user notification believe without custom setting email frequency email sent author author member pytype repo seems good enough stop spamming external mailing list fix 185,,
1948,6433734bf1bbfad3cff91243f89903a1be4927a7,artin DeMello <martindemello@gmail.com>, 2018-10-30 15:37:36 -0700,187, merge pull request 187 google google_sync google sync,,
1949,edb3093f3093614a6d6585441df522e27c99ca5c,echen <rechen@google.com>, 2018-10-30 14:04:29 -0700, , pytype restructuring cleanup pave way github 173 bump version number release version last one ninja switch update todo main.py include concrete way forward add two todos pruning dependency builtin system file import graph renames two action report_errors check ignore_errors infer check infer make sense name ninja build rule move action generation testable function piperorigin revid 219362003,,
1950,c81921071927f6e1740bcc41a3cb4e08438257fc,echen <rechen@google.com>, 2018-10-29 21:31:32 -0700,173, pytype convert custom option command line format change necessary precursor fixing github 173 build.ninja file need full command line pytype single call nice side effect test custom_options piperorigin revid 219243800,,
1951,e2ce8ae2f789b8556b4c2cb78e78680ce75c3ac7,echen <rechen@google.com>, 2018-10-29 15:29:33 -0700, , cleanup use compute_mro consistently messing around type_parameters noticed mro computing logic could cleaned bit make standalone function _get_mro_bases compute_mro always call extra input_bases argument needed simplifies _get_mro_bases slightly folding base manipulation logic originally compute_mro change set mro via compute_mro subclass override compute_mro rather letting every class directly set attribute move real compute_mro class piperorigin revid 219204464,,
1952,bc639d36bb8021d1f84a659b613092585278804e,echen <rechen@google.com>, 2018-10-29 15:05:51 -0700, , get rid unused remove lazydict change merges dicttemplate aliasingdict piperorigin revid 219200522,,
1953,f694845e92dd63b9e21555c5ad8589b02e529ad2,echen <rechen@google.com>, 2018-10-29 14:45:14 -0700, , get rid lazydict method get rid lazy_eq add_lazy_item goal switching using lazydict type_parameters using regular dict lazily loaded ran change performance impact far tell instantiate rather checking parameter name type_parameters check template accurate avoids using type_parameters fully loaded add __eq__ __hash__ method tuple get rid lazy_eq call improves delay loading type_parameters get rid add_lazy_item call renames match existing compute_ method avoid two _get_template function piperorigin revid 219196752,,
1954,43b6ec9ddbc645e66f94989db91b41d3b019b223,demello <mdemello@google.com>, 2018-10-25 12:20:00 -0700, , improve display tracebacks error message piperorigin revid 218729544,,
1955,60ed766d64d76d99df2b70fd9b5fbc8acac43d94,ivachandra <sivachandra@google.com>, 2018-10-24 11:36:19 -0700, , internal change piperorigin revid 218547630,,
1956,120988ba44e37b30fd1fefe85dd38cbef06579ee,ivachandra <sivachandra@google.com>, 2018-10-22 10:26:49 -0700, , extend support python piperorigin revid 218190433,,
1957,b939a591f8ca8a9963aeaf940745f2acf350f930,echen <rechen@google.com>, 2018-10-18 10:21:24 -0700, , cleanup around module_name documented able return none allow none passed remove old option piperorigin revid 217723988,,
1958,181d4e295e3e3906302e3db32c6bc34b39a772c1,ebecca Chen <rechen@google.com>, 2018-10-28 18:32:45 -0700,186, merge pull request 186 google typeshed update typeshed,,
1959,32b8f3f91bad74ac7e09e320eb35d3d1809b047a,ebecca Chen <rechen@google.com>, 2018-10-27 18:03:31 -0700, , update typeshed,,
1960,4f8103dbb7285be21d0ff67102c49a39f6f3d6d7,artin DeMello <martindemello@gmail.com>, 2018-10-17 11:51:04 -0700,184, merge pull request 184 google google_sync google sync,,
1961,03e25d0373696f86c0f7ffeb788a6515bac7b837,echen <rechen@google.com>, 2018-10-17 10:09:53 -0700, , update cmakelists.txt reflect recent build file change also add metadata check prevent file going sync future piperorigin revid 217539423,,
1962,f7f7a63dcce0b3a7c24cb2bc8da172980f0e64d0,eter Ludemann <peter.ludemann@gmail.com>, 2018-10-16 10:59:35 -0700, , manual import github 147 fix documentation change .pytd .pyi http github.com google pytype pull piperorigin revid 217347716,,
1963,1f73b2920203d1b223e6713847b3fc6e58c39850,echen <rechen@google.com>, 2018-10-15 16:48:48 -0700, , silence incorrect pytype py3 finding pytype piperorigin revid 217231171,,
1964,09e4c68fd424b6cc8d39e11231361fab6dcca127,echen <rechen@google.com>, 2018-10-12 15:40:32 -0700, , handle abstract dicts properly python function call abstract.dict abstract true checking attribute avoid accidentally treating abstract dicts concrete one lead spurious missing parameter error piperorigin revid 216933928,,
1965,a1c35d55cad3f231cc98a00dfdaee53bce42dc1d,echen <rechen@google.com>, 2018-10-12 14:02:46 -0700, , always analyze contructors python python method name may contain class name need split matching constructor name piperorigin revid 216917949,,
1966,61d0a17bebb429136988b8bdf6dd36525b2a57b5,echen <rechen@google.com>, 2018-10-11 17:44:10 -0700, , add diff option show_pickle diff two pickle make non determinism easier debug note show_pickle currently unpickle file generated pytype dev due pytd.class signature change problem resolve tomorrow release piperorigin revid 216790928,,
1967,e2b8a9f1253e8394e18386dabbd02ae3fe7a22d6,demello <mdemello@google.com>, 2018-10-11 15:57:33 -0700, , fix parser treating nested class constant conservative change simply add node.classes field alongside node.constants leaf nested class place existing test pas enough support fix 150 piperorigin revid 216776237,,
1968,c5cb4d8108b41c8503f703d88b26130eeedc800d,demello <mdemello@google.com>, 2018-10-11 14:42:29 -0700, , move implementation add_metaclass with_metaclass module overlay implementation independent six moving module let used library implementing functionality e.g future piperorigin revid 216763783,,
1969,fcdd6e1b1275263b035ac1a9337c9df57dcb8102,echen <rechen@google.com>, 2018-10-10 17:16:32 -0700, , verify pyi_output non empty piperorigin revid 216620864,,
1970,e10e79bf59d360e48b0e8ac1a96045bb07da3188,echen <rechen@google.com>, 2018-10-10 17:09:22 -0700, , fix handle pyi_output none piperorigin revid 216619889,,
1971,f2ec1fef1469731dc28929d0a5a7f748f349ffc5,demello <mdemello@google.com>, 2018-10-10 16:04:49 -0700, , support option parse pyi small piece code useful debugging pyi parsing piperorigin revid 216609912,,
1972,8ef3279ffdf37d69c59e83a1ea6f93508b24d2ea,echen <rechen@google.com>, 2018-10-10 13:11:56 -0700, , filter closure variable load time call variable filtered put closure since analyze closure longer right node filtering also fix load_global bug none loaded exposed change piperorigin revid 216580334,,
1973,cb96458df7967142920ea34e5e732ffa31c87242,sudol <tsudol@google.com>, 2018-10-10 11:07:37 -0700, , add signedfunction allows signedfunctions late annotation every user ensures function except none safe default value piperorigin revid 216559731,,
1974,d2c7b0f8bf2d314159cfea67f33f1c4e84aa808a,demello <mdemello@google.com>, 2018-10-09 15:48:10 -0700, , verify type parameter used mutation scope mutation using invalid typevar fail pyi import time analysing call site piperorigin revid 216437371,,
1975,9f710ae7a3a3e4e97e6a9fe4fafd4eedd15129f7,echen <rechen@google.com>, 2018-10-08 16:39:08 -0700, , cleanup move mutation move mutation boundfunction allows get rid last_substs attribute keep logic together enables pytdfunction use mutation class helper piperorigin revid 216272684,,
1976,b982cb16b931e7cbaee40f1b8cfbb38b0b92c349,echen <rechen@google.com>, 2018-10-08 16:34:19 -0700, , improve handling doe precise comparison order support kind version check previously pytype could handle ... relational operator still support tuple comparison work wanting check minor version rarer pinch major minor version checked separately piperorigin revid 216271911,,
1977,8f3d9f7c2a6c3b54d795170fb80783f79395fbdc,echen <rechen@google.com>, 2018-10-07 00:28:39 -0700, , cleanup add module name object created overlay piperorigin revid 216074685,,
1978,2bf48c67c841d9f20ce19360802cec6c7488f9cd,demello <mdemello@google.com>, 2018-10-05 15:02:48 -0700, , put strict module checking behind flag piperorigin revid 215972193,,
1979,91ea2e13f4e1d749c12b9b17689afdb9b0976943,ebecca Chen <rechen@google.com>, 2018-10-15 17:51:29 -0700,182, merge pull request 182 google typeshed_update update typeshed,,
1980,f4934b4b1f5680eb8803b6c07b999b241054ce5e,ebecca Chen <rechen@google.com>, 2018-10-15 17:16:08 -0700, , update typeshed,,
1981,092c8424a3e5747eeb1a87dc2bf26e495a766552,ebecca Chen <rechen@google.com>, 2018-10-05 18:04:39 -0700,180, merge pull request 180 google setup_cfg turn type checking pytype,,
1982,f25f42353464aa21d85a1476c86adf464006e7be,ebecca Chen <rechen@google.com>, 2018-09-26 17:21:34 -0700, , turn type checking pytype,,
1983,02f94d63b5d9b11001e576c10e9c02278b7f4172,ebecca Chen <rechen@google.com>, 2018-10-05 16:56:09 -0700,179, merge pull request 179 google google_sync google sync,,
1984,71166236eeb06c24ddfbb4a42a6cb2630e0fb6ac,echen <rechen@google.com>, 2018-10-05 13:59:46 -0700, , small cleanup collect dependency late dependency pas noticed always called simplify little combining piperorigin revid 215961751,,
1985,07037d5a6c868136c0085cb9d3a8ba5a29ac54ec,demello <mdemello@google.com>, 2018-10-05 13:13:52 -0700, , add late dependency list module prefix loader piperorigin revid 215954730,,
1986,6a0a124a7238308e93f48fd207cbf820edb4550f,echen <rechen@google.com>, 2018-10-05 12:06:38 -0700, , add slice parameter option fix http github.com google pytype issue 178 piperorigin revid 215944462,,
1987,349735c8b7f0a999316b8cefaed8fb56b1e00304,echen <rechen@google.com>, 2018-10-05 10:32:31 -0700, , make deterministic piperorigin revid 215927527,,
1988,309a87fab8a861241823592157208e65c970f7b6,artin DeMello <martindemello@gmail.com>, 2018-10-04 14:37:40 -0700,177, merge pull request 177 google google_sync google sync,,
1989,da0d1ed6e2211dd582def75521e59b7f791daf99,sudol <tsudol@google.com>, 2018-10-04 11:20:38 -0700, , check recursion paramaterized protocol protocol caching would look neater left needed key easier change interface  piperorigin revid 215771581,,
1990,fc252e17114d56e22fdd8882365ae2880e98775f,echen <rechen@google.com>, 2018-10-03 18:12:28 -0700, , fix crash piperorigin revid 215663895,,
1991,1f8afcc6e7d17b44325531addd0d9b6cd0ba32a2,ivachandra <sivachandra@google.com>, 2018-10-03 16:27:40 -0700, , tweak enum.pytd little match actual behavior piperorigin revid 215649959,,
1992,b975454ec39d2dc463a40879f5f6a99bfa99e549,demello <mdemello@google.com>, 2018-10-03 16:26:58 -0700, , add enum.pytd cmake source piperorigin revid 215649876,,
1993,f3aa2561e13b59bd5475924981fac56e0e8ff3fc,sudol <tsudol@google.com>, 2018-10-03 16:20:13 -0700, , fix default dict class hierarchy subclass subclass typing.dict piperorigin revid 215648899,,
1994,e33d9deb57a3f62484af2b9e997e124d4aa84397,sudol <tsudol@google.com>, 2018-10-03 15:46:01 -0700, , prevent loop matching self referential protocol assumes partially matched protocol match unless non self referential method cause failure unable test piperorigin revid 215643122,,
1995,ff4f3eeca64098dc0fa1a9e27a0b75d2e2d39be7,demello <mdemello@google.com>, 2018-10-03 13:29:31 -0700,175, attempt load submodule explictly imported fix 175 http github.com google pytype issue 175 piperorigin revid 215616894,,
1996,d65cea98011fed66addc2d575833f4879a1acdde,hxun <ahxun@google.com>, 2018-10-02 22:07:42 -0700, , fix bug generic pytdclasses instantiated piperorigin revid 215513507,,
1997,a788f79727f8115931f7eb050d6f444834c7ccd7,echen <rechen@google.com>, 2018-10-02 21:29:26 -0700, , use custom pytd file enum python bug blocking many py2and3 target affect fixed copying custom py2 pyi file adding py3 bit typeshed get rid annoying false positive piperorigin revid 215510764,,
1998,d6b99ee24a52c20f9376daa088f90eb20506333e,demello <mdemello@google.com>, 2018-10-02 14:11:49 -0700,94, allow package name pyi file fix http github.com google pytype issue piperorigin revid 215455800,,
1999,3d12f4eec840ad2edbbf2474011671298d087fad,demello <mdemello@google.com>, 2018-10-02 11:23:08 -0700, , use ast27t xref handle backported type annotation syntax piperorigin revid 215424761,,
2000,ab9493bbac252b5e22594fa5b2b8cc93495b21af,echen <rechen@google.com>, 2018-10-01 16:06:24 -0700, , finish making pickled builtins deterministic remove redundant load_pytd.py actually left incorrect fix kept cleanup test determinism builtins pickle four target host python version combination main_test sort previously set based operation visitors.py tested ran time target host configuration ran video youtube utils types_spy processor twice video youtube src python validation ads_validators twice video youtube src web polymer twice video youtube src python server innertube gaming gaming_util twice devtools python blaze pytype twice piperorigin revid 215297844,,
2001,d7f747890128ad95a27caca60d269897cd5160ac,demello <mdemello@google.com>, 2018-10-01 16:00:22 -0700,159, expand type parameter constraint want float float rewritten float int float rewrite typevar float  fix http github.com google pytype issue 159 piperorigin revid 215296765,,
2002,1cef566e1fc84d9a522c4b880008d841665acabe,echen <rechen@google.com>, 2018-10-01 13:29:12 -0700, , stop adding plistlib blacklist main.py working non determinism bug noticed pytype longer seems trouble file define pytype dev show new finding target failure _link area120 jolonto pipeline notifs main finding piperorigin revid 215270038,,
2003,1687f0348339603c1d814eec10515d5deccb7aa7,ytype Team <pytype@googlegroups.com>, 2018-10-01 12:08:58 -0700, , increase determinism gzip pickle know terminal issue standard procedure gzip may confounding test output additionally set pythonhashseed test since internal representation apparently using dicts set also set .bzl created rule already piperorigin revid 215256689,,
2004,a71a0f427223e189013d579359bad734d93c4b8d,echen <rechen@google.com>, 2018-10-01 11:55:32 -0700, , cleanup remove private attribute access pytype tool xref squeegee piperorigin revid 215254326,,
2005,3a1b6f1091ce8a353ea3cc6ecc6c9c9930907949,echen <rechen@google.com>, 2018-09-27 16:01:51 -0700, , replace contrived example one function type hint piperorigin revid 214851632,,
2006,e2354342621cf34742871dac77f458168c366ddc,echen <rechen@google.com>, 2018-09-27 09:42:42 -0700, , add file add file make sure file type check open source pytype well hence disable tracemalloc import example remove pytype file blacklist pytype skip file instead since blacklist internal follow change setup.cfg change exported piperorigin revid 214788365,,
2007,09b9fac43ac25cd68e20e138d064e543615a6a74,artin DeMello <martindemello@gmail.com>, 2018-09-26 12:54:11 -0700,166, merge pull request 166 google google_sync google sync,,
2008,d380261d5742406b80b1c51a843cbbb9c9741cf5,echen <rechen@google.com>, 2018-09-26 10:01:29 -0700, , pytype run inference pip installed dependency add kind field module pytype_runner field exclude builtin system module inference also get rid longer used preserve_init parameter infer_module bump pypi version number yet piperorigin revid 214621739,,
2009,eb634acbe48484e7caa9382b23065dcad56b1d31,echen <rechen@google.com>, 2018-09-25 21:41:31 -0700, , remove pytype_output start pytype run sorry two step change going log warning come back later turn removing directory let send cleaner api_core pytype_output run piperorigin revid 214552669,,
2010,622c7e9941f46ae2d4e9d278b102b1189cb40e06,demello <mdemello@google.com>, 2018-09-25 14:26:11 -0700, , convert resolved module file path via pytype loader cache continues track unresolved module mostly case want log piperorigin revid 214503760,,
2011,a8df519a7115cb959027985504c4794ae9c3ca76,echen <rechen@google.com>, 2018-09-25 14:09:54 -0700, , print info message analyze_project pytype_output already exists figure problem least log make debugging easier piperorigin revid 214500958,,
2012,1c71d485b7fc31eeec48e9d0cc30a38554d5255c,eddy Sudol <tsudol@google.com>, 2018-09-26 09:10:25 -0700,165, merge pull request 165 google typeshed update typeshed submodule,,
2013,bcc95916fb6768653d3b74238ae370733d6e2ec1,ebecca Chen <rechen@google.com>, 2018-09-25 22:42:58 -0700, , update typeshed submodule,,
2014,89baba6ed3ac063a6776255b91d372d47c8f0dc5,ebecca Chen <rechen@google.com>, 2018-09-25 14:22:50 -0700,164, merge pull request 164 google google_sync google sync,,
2015,bcf0c5cbad54120544a0fcd4e36f51492d5962bd,echen <rechen@google.com>, 2018-09-25 12:56:04 -0700, , bump pypi version number preparing release change adding __path__ attribute fixing python varargs unpacking bug needed  piperorigin revid 214488194,,
2016,201d568c24aabf3000ce34fe9b35414cc19ef5eb,echen <rechen@google.com>, 2018-09-25 12:06:57 -0700, , improve handling build_ list set tuple _unpack partially implement python vararg unpacking order fix bug saw course adding pytype open source project piperorigin revid 214480445,,
2017,f0b76d733ae67e1d04bd9bee90948458a6b87925,ytype Team <pytype@googlegroups.com>, 2018-09-24 23:12:56 -0700, , fix handling variadic positional argument together kwonly argument fix pytype used keyword argument positional argument type specified pyi file example def foo args pas foo function foo got multiple value keyword argument duplicate keyword argument piperorigin revid 214389231,,
2018,6680a548408cf6748b1809b8116c97c51b2eb930,hxun <ahxun@google.com>, 2018-09-24 16:40:29 -0700, , support user defined generic type passed local test future work solve type parameter renaming problem make user defined generic type powerful piperorigin revid 214353902,,
2019,7fe2be4bb41e9309caecf0a3d13ad3fa6bb09c28,ytype Team <pytype@googlegroups.com>, 2018-09-24 11:32:50 -0700, , always pas interpreter used byte compilation avoid influenced environment pythonpath sitecustomize etc piperorigin revid 214301119,,
2020,9d7da61359cae06e361ce3959b9eca219d2fd8ca,echen <rechen@google.com>, 2018-09-21 12:09:10 -0700, , add __path__ global module attribute also alphabetized attribute piperorigin revid 214023812,,
2021,9783e95623bb56efdc6779c5bf2c0766d89c141c,demello <mdemello@google.com>, 2018-09-21 11:24:24 -0700, , fix crash found testing pytype codebase crash namedtuple attr access crash attr access binop e.g .foo piperorigin revid 214016278,,
2022,53e8e1cc857fada80c08c20b3d561c4730b22fc7,echen <rechen@google.com>, 2018-09-20 17:02:25 -0700, , show full sample.cfg wrap work config file bug adding pytype single argument sample.cfg making fully functional sample config file i.e. someone could generate immediately use project also make sure documentation config file date since touching readme moved official google product disclaimer end adam pointed beginning may scaring people piperorigin revid 213909618,,
2023,ec581fdcc4f19a61c8297993b8960cc6c52d04ef,demello <mdemello@google.com>, 2018-09-20 14:59:56 -0700, , get accurate reference class attribute piperorigin revid 213888459,,
2024,2fcbb256847eec1408fb8e01bdf38a6f9044da33,demello <mdemello@google.com>, 2018-09-20 13:09:23 -0700, , move kythe test script directory add script browse multiple file together piperorigin revid 213868348,,
2025,f6ab06f1a9a4ec89b3659b4cd8d958a0560229ac,demello <mdemello@google.com>, 2018-09-20 11:55:04 -0700, , get correct definition anchor import piperorigin revid 213855908,,
2026,652a6750fbbebb7c5c5d132925c0a777c469d7f9,artin DeMello <martindemello@gmail.com>, 2018-09-25 00:14:35 -0700,162, merge pull request 162 google travis move pytype option travis_script setup.cfg,,
2027,8af617bc1385ebc131d9894eb99ff1305ed81fe7,ebecca Chen <rechen@google.com>, 2018-09-20 16:49:37 -0700, , move pytype option travis_script setup.cfg,,
2028,373dbaec4c8faf3aaa3ed7902c26ccd6dac2abd5,ebecca Chen <rechen@google.com>, 2018-09-20 12:59:36 -0700,161, merge pull request 161 google typeshed update typeshed submodule,,
2029,d5a00a23ced5adf45dffd258f4a7cdd44e34a302,ebecca Chen <rechen@google.com>, 2018-09-20 11:55:18 -0700, , update typeshed submodule update submodule latest commit pulled google verified work well pytype,,
2030,1bb6912239d67281d0b76e3292412322bea68b24,ebecca Chen <rechen@google.com>, 2018-09-20 11:51:05 -0700, , revert update typeshed submodule reverts commit accidentally pushed master rather another branch,,
2031,cedf05a8d94e040953201c21276beca9f0db7d19,ebecca Chen <rechen@google.com>, 2018-09-20 11:45:51 -0700, , update typeshed submodule pin submodule typeshed commit using internally verified work well pytype,,
2032,5a6ecdf8692cbec4082cdc3eb83dcf00bb16f4ef,ebecca Chen <rechen@google.com>, 2018-09-20 11:17:30 -0700,160, merge pull request 160 google google_sync google sync,,
2033,9060417f50ab5226686c2347cd83000cb74bd543,echen <rechen@google.com>, 2018-09-20 10:31:23 -0700, , allow pytype input option specified setup.cfg add input config.items includes odd shenanigan parse_args.py argparse treat positional optional argument subtly differently bump version number preparation pypi release exclude fix change piperorigin revid 213838356,,
2034,5087c32311adcc6597265e28a99842086e5da94d,echen <rechen@google.com>, 2018-09-20 10:04:06 -0700, , support hidden file pytype change pytype_runner handle dotted name better computing output path skip hidden file default still analyzed explicitly requesting example pytype home skip home .hidden home .hidden home would pick also get rid collect_files method realized could replaced recursive_glob piperorigin revid 213833679,,
2035,544fba327da9d8790b8a6c41ee6709bde9b4158a,demello <mdemello@google.com>, 2018-09-19 16:06:13 -0700, , capture enclosing scope function call call graph fix reference record enclosing referred scope piperorigin revid 213714931,,
2036,8d08da239e8723a37eefeaf6400a3b7cde6c24c6,echen <rechen@google.com>, 2018-09-19 13:03:29 -0700, , restore old exclude behavior directory change exclude first doe shell expansion recursively collect .py file restores behavior first version exclude accidentally changed shell expansion piperorigin revid 213679537,,
2037,1238e6943338ede2c3bd8f4be93f0b7b5a7bb508,echen <rechen@google.com>, 2018-09-19 11:27:23 -0700, , make exclude set rather list planning make input set file configurable next since two argument similar many way making exclude set well allows code sharing also alphabetized config.items everywhere stay organized add input future option fixed small bug last change introduced file_utils.cd legal piperorigin revid 213662100,,
2038,634c932ee7172989fa2b187a75c4960e95498515,demello <mdemello@google.com>, 2018-09-19 11:18:58 -0700, , add reference class base also fix bug reference pytdclass object piperorigin revid 213660450,,
2039,b15827eccec472b7c22016ee6ec49feeb5c1f290,demello <mdemello@google.com>, 2018-09-18 14:33:11 -0700, , handle class attribute lookup via mro also add fix location information decorated class function piperorigin revid 213518417,,
2040,e39b1eedd1619f8b5ab7db768ab4b3f0dc608f93,ebecca Chen <rechen@google.com>, 2018-09-18 15:21:18 -0700,158, merge pull request 158 google google_sync google sync,,
2041,dfbe136b62f9e3fc4b99a937b6db398bb285894b,echen <rechen@google.com>, 2018-09-18 13:26:28 -0700, , support type ignore end line pyi file http github.com python typeshed pull 2389 initially tried adding constandef constantdef typeignore ... led shift reduce conflict piperorigin revid 213505250,,
2042,bf675a98ede88db2117ee687fa1f25f46fa03750,echen <rechen@google.com>, 2018-09-18 11:39:17 -0700, , support setting pytype exclude argument config file add exclude config.items add function support change also doe two tiny cleanup add newline pytype sample config readability deletes extra whitespace help message verbosity mostly developed feature github project also ran simple example much code felt comfortable linting testing internally piperorigin revid 213486175,,
2043,02c78132e8a50f73a8b2a017fb0b5b6413247205,demello <mdemello@google.com>, 2018-09-17 13:58:09 -0700, , add support annotation inner function piperorigin revid 213332457,,
2044,e993ca12b95a2a3032bdbd0b1804fda06211a19d,demello <mdemello@google.com>, 2018-09-17 12:57:56 -0700, , resolve reference builtins stdlib piperorigin revid 213322199,,
2045,26ac18ce47c79eef1f8b383d28de05a7e6525ac3,demello <mdemello@google.com>, 2018-09-14 15:23:50 -0700, , fix method call anchor remove test indexer_test covered kythe test piperorigin revid 213053562,,
2046,108d4c557d61a075a279053e17797798c07bb714,demello <mdemello@google.com>, 2018-09-14 13:49:18 -0700, , add docstrings kythe graph piperorigin revid 213037052,,
2047,91b4ea12cfa2f7e75130d1ec795779eeaf9a657e,echen <rechen@google.com>, 2018-09-14 10:08:46 -0700, , allow parameterized protocol pyi file another thing popped typeshed since last imported caught due run piperorigin revid 213000778,,
2048,9da1452541f58b5e933fc2c3746d8a335c13a8e5,echen <rechen@google.com>, 2018-09-14 09:15:32 -0700, , support new typeshed pattern catch pattern break pytype parse pyi run check piperorigin revid 212992719,,
2049,bcdac6606a0665be493821871925cc135e701145,demello <mdemello@google.com>, 2018-09-13 16:20:27 -0700, , add precise attribute resolution using pytype derived data also add classmap support nested class class name piperorigin revid 212897965,,
2050,0811af708802a9cb561cf71b71294dd724468e4b,iva Chandra <sivachandra@gmail.com>, 2018-09-13 15:07:37 -0700,156, merge pull request 156 google organize travis command step,,
2051,2d75492ddf424b71fb2b72f1f6921d5ccb3a66db,iva Chandra <sivachandra@google.com>, 2018-09-12 13:27:35 -0700, , organize travis command step three step added build test type check pytype source,,
2052,9a7a048ce54eccfe60a5acc57339940e4b1c817b,iva Chandra <sivachandra@gmail.com>, 2018-09-13 08:46:25 -0700,155, merge pull request 155 google google_sync google sync,,
2053,d34759d69d2322007d744f3fa0937fa3912ce64e,ivachandra <sivachandra@google.com>, 2018-09-12 21:58:27 -0700, , add missing source file cmake target piperorigin revid 212757663,,
2054,ec670a6ae2aad24457d6e161a64c8faaef3646f2,demello <mdemello@google.com>, 2018-09-11 11:36:30 -0700, , add debug flag config.py subtools use piperorigin revid 212489835,,
2055,3ec1912a3fcb3849c137c78884b9b0a57f19e102,sudol <tsudol@google.com>, 2018-09-11 09:25:41 -0700, , move parser memoryleaktest file test fails run blaze coverage zapfhahn run fail moving file easily excluded coverage run error reported zapfhahn piperorigin revid 212464843,,
2056,ad9a1c03789377cae608032ea2ea4073be16deb3,demello <mdemello@google.com>, 2018-09-10 16:59:40 -0700, , search chain nested environment deref variable also move human readable output code debug.py piperorigin revid 212361301,,
2057,46fe52e1469bd5629521e35c87579590d1bd1694,demello <mdemello@google.com>, 2018-09-10 11:19:05 -0700, , add blaze wrapper kythe verifier test piperorigin revid 212300135,,
2058,ffd8ac6f86811f7e9ddc62f808c38faa2af28f0e,iva Chandra <sivachandra@gmail.com>, 2018-09-11 14:51:58 -0700,153, merge pull request 153 google add python3.7 host testing travis matrix,,
2059,184ae8aa3a6264decb4fd1760bd3979d0a40b372,iva Chandra <sivachandra@google.com>, 2018-09-11 14:10:58 -0700, , add python3.7 host testing travis matrix,,
2060,be40e46dd8344d17a64f14aa576e43d13a6dbea3,artin DeMello <martindemello@gmail.com>, 2018-09-07 16:54:43 -0700,149, merge pull request 149 google typeshed_update update typeshed submodule,,
2061,0bc52e19551a828beb03c257ef2cf0f6db3295af,ebecca Chen <rechen@google.com>, 2018-09-07 16:22:26 -0700, , update typeshed submodule,,
2062,9a726e86d32348972c0c30d9a8399af3bde82687,ebecca Chen <rechen@google.com>, 2018-09-07 15:47:54 -0700,148, merge pull request 148 google google_sync google sync,,
2063,5009c7e79b89cb348ce2f6f4ed591cfd458c034b,ebecca Chen <rechen@google.com>, 2018-09-07 15:24:20 -0700,147, add partial support nested class pyi file 147 imported exported rather merged directly resolve 147 piperorigin revid 212045708,,
2064,4d42aea9ddee0eeec8531b087ee879659d00cd2a,demello <mdemello@google.com>, 2018-09-07 13:43:43 -0700, , remove link test since link longer stored indexer test via kythe verifier mechanism instead piperorigin revid 212028985,,
2065,27374b3f87305bb8211042ff2bbdf81e815baab3,iva Chandra <sivachandra@gmail.com>, 2018-09-07 13:58:26 -0700,146, merge pull request 146 google google_sync google sync,,
2066,d11cfcc524b9d062c5ed40ef29c322fbacdeefe2,ivachandra <sivachandra@google.com>, 2018-09-06 18:06:25 -0700, , make utils_test work python 3.7 test method test module assumes expression like evaluates false however python 3.7 seems aggressive constant literal caching make expression evaluate true change essentially making test method evaluate sufficiently complex expression avoid caching piperorigin revid 211901694,,
2067,1a156b541779e058e7494add46dd6a9eb104e97d,demello <mdemello@google.com>, 2018-09-06 16:57:53 -0700, , fix assume current frame piperorigin revid 211893674,,
2068,b4c1f5c7cc9dfbfcadf8b40798c9ec106fce26db,demello <mdemello@google.com>, 2018-09-06 15:18:33 -0700, , record type function call indexer add typemap store symbol type add function method call record add beginning support union type allowing multiple binding per variable also add basic kythe verifier test shell script needed run piperorigin revid 211878602,,
2069,5033965072d5ba3d1cb843cd76830a020d62071f,echen <rechen@google.com>, 2018-09-05 10:46:11 -0700, , rename full_name property already exists rename _full_name reduce confusion piperorigin revid 211659165,,
2070,f6e69f327d3e37659a10c7130aad2a6813f63e83,echen <rechen@google.com>, 2018-09-05 10:33:07 -0700, , update errors.md make clear misspelling intentional piperorigin revid 211656664,,
2071,e5c1b3eb09eea08e222c4675909c9c8d32b814ad,eddy Sudol <tsudol@google.com>, 2018-09-06 23:06:08 -0700,145, merge pull request 145 google add back cpython submodule,,
2072,7352fc781f01de62198e15ee100c70c4c08ca645, Sivachandra Reddy <sivachandra@google.com>, 2018-09-06 22:25:35 -0700, , add back cpython submodule,,
2073,6a74e10fcc9a36a2b98abbc81b3900382be8c03e,eddy Sudol <tsudol@google.com>, 2018-09-04 15:03:18 -0700,144, merge pull request 144 google google_sync future proof _token_re,,
2074,b9aec031754602c73b9741f3a769bffd55db98c3,eddy Sudol <tsudol@google.com>, 2018-09-04 14:20:48 -0700, , internal change piperorigin revid 211523402,,
2075,8f18033a5b311590d0ae619ebbb87868b40d7375,artin DeMello <martindemello@gmail.com>, 2018-09-04 14:05:16 -0700,143, merge pull request 143 google google_sync refactor move kythe graph generation file,,
2076,507b026e1779d2a60d3563517bf8e3de7b03c257,demello <mdemello@google.com>, 2018-08-31 11:20:40 -0700, , refactor move kythe graph generation file piperorigin revid 211114928,,
2077,3c0f80b9a1386932b278f356a7a563a9bb54578e,iva Chandra <sivachandra@gmail.com>, 2018-09-04 13:29:02 -0700,141, merge pull request 141 google add cpython submodule pinned current 2.7 head,,
2078,2c0475acc8ee24c595775899a03f8e0b1fdcc7ed,iva Chandra <sivachandra@google.com>, 2018-08-30 15:26:38 -0700, , add cpython submodule pinned current 2.7 head extended build script build patched python2.7 interpreter option py27 specified standalone script build patched interpreter also added script used cmake target build patched interpreter part run_tests.py flow,,
2079,14217686aa628c4564a50b33d883712625f8b736,eddy Sudol <tsudol@google.com>, 2018-08-29 10:54:17 -0700,139, merge pull request 139 google google_sync google sync,,
2080,b4f06897aa015523c70b20a3bf87fe7f2f6c924b,sudol <tsudol@google.com>, 2018-08-29 09:10:36 -0700, , make load_pyi understand import alias also add test relative import pyi file piperorigin revid 210731580,,
2081,4b397b1b9b9a23053b55bac79987d098edb225c5,demello <mdemello@google.com>, 2018-08-28 13:13:53 -0700, , generate kythe graph output xref piperorigin revid 210592583,,
2082,11899ab93e7627163fe11c41fcd8d74d6c227810,ytype Team <pytype@googlegroups.com>, 2018-08-27 11:43:06 -0700, , update frozenset non operator interface according stdlib doc take iterable object another abstractset http docs.python.org library stdtypes.html frozenset also add missing method piperorigin revid 210403184,,
2083,89ad51623a7170ee9f712c5014031f3014f373f6,demello <mdemello@google.com>, 2018-08-27 09:19:20 -0700, , fix calling wrong full_name repr boundfunction piperorigin revid 210377575,,
2084,58af87c08642afb0f88882dde340e4ac1a21c8d2,demello <mdemello@google.com>, 2018-08-24 15:45:16 -0700, , pull full name calculation repr boundfunction method piperorigin revid 210169959,,
2085,2cf1adfa5076379c7039028c3f50cb9167f44ef7,ivachandra <sivachandra@google.com>, 2018-08-24 11:49:26 -0700, , update contributing.md info run_tests.py also run unit test piperorigin revid 210132792,,
2086,aa23d33e8b6d9378956adc56c042d3e75cd73d93,iva Chandra <sivachandra@gmail.com>, 2018-08-24 12:15:20 -0700,138, merge pull request 138 google adjust run_tests.py reflect fact also run unit test,,
2087,20395e1fe0a79255fcc236ecad3d4a5ea3ec5e3e,iva Chandra <sivachandra@google.com>, 2018-08-24 11:42:24 -0700, , adjust run_tests.py reflect fact also run unit test,,
2088,f13e1adc23b299e3d8fde6c5afeb41f9fbebd915,iva Chandra <sivachandra@gmail.com>, 2018-08-24 07:01:38 +0800,137, merge pull request 137 google google_sync google sync,,
2089,fd27d8b4b09f6d5a7671d1f4e70ae40221926dad,ivachandra <sivachandra@google.com>, 2018-08-23 15:15:04 -0700, , run cc_test binary target built piperorigin revid 210009307,,
2090,c0be2ae2778dc7c048dc8cc733b7b4b5977ab59b,demello <mdemello@google.com>, 2018-08-21 14:18:32 -0700, , add support docstrings also fix test suite use python_version piperorigin revid 209658336,,
2091,c075e5e664be655a47f7d247ff69aa9e0c9487bd,demello <mdemello@google.com>, 2018-08-20 17:04:39 -0700, , handle import statement store import module dict resolving reference check target attribute access imported module piperorigin revid 209511573,,
2092,60130e9675781a222abfd9f8343168fcacbbc198,artin DeMello <martindemello@gmail.com>, 2018-08-23 09:51:54 -0700,136, merge pull request 136 google add simple script run unit test binary,,
2093,de7ff03e55db674ec133024eb56bda5d0e00997f, Sivachandra Reddy <sivachandra@google.com>, 2018-08-20 13:59:14 -0700, , add simple script run unit test binary script called cmake cc_test rule change rule make use script made google internal change exported github,,
2094,df1bf14557ca3c35c1286a6abbb9fb846bfcf9df,iva Chandra <sivachandra@gmail.com>, 2018-08-21 05:41:06 +0800,135, merge pull request 135 google google_sync google sync,,
2095,677977902ee2d819d53223c8f68dab2f2a4abe21,demello <mdemello@google.com>, 2018-08-20 11:45:52 -0700, , use typed_ast xref set xref py3only well since typed_ast python3 library piperorigin revid 209457084,,
2096,147991038dacac16174c1ac6b5eb109ea83b6991,ivachandra <sivachandra@google.com>, 2018-08-18 10:42:56 -0700, , add implementation cc_library cc_test rule use cc_test target pytype typegraph added cmake file building target doe run test yet ability run test added future change however one run test binary manually piperorigin revid 209280766,,
2097,1cdfd4f6b3028f9acfec936a808509c1a1d6b6f3,hxun <ahxun@google.com>, 2018-08-17 15:17:41 -0700, , make class python 3.6 backward compatible old function call usage accept key value pair specify variable name type name subclass provide default value define method piperorigin revid 209215187,,
2098,6438299c78a45812e907f88b4aad8d7753bea81f,demello <mdemello@google.com>, 2018-08-17 14:44:42 -0700, , internal change piperorigin revid 209210186,,
2099,7c1a46106b0d90cf370aec2e384d3c30fd57d356,hxun <ahxun@google.com>, 2018-08-17 14:31:24 -0700, , fix crash prior python 3.6 running typing import namedtuple piperorigin revid 209207900,,
2100,2b6f8afd6192e3c63e5b697c5f972fcd35ae8b60,iva Chandra <sivachandra@gmail.com>, 2018-08-18 05:50:05 +0800, , add back googletest submodule 132,,
2101,9f911bb50cd9ff23fa951062741132f5e8792556,iva Chandra <sivachandra@gmail.com>, 2018-08-18 04:55:07 +0800,131, merge pull request 131 google google_sync google sync,,
2102,0cb7d4099e906914571490436e5cf2da718d3709,ivachandra <sivachandra@google.com>, 2018-08-17 13:15:06 -0700, , internal change piperorigin revid 209195741,,
2103,0595fc431a250762e3b114edc9d73b5b50d3eec4,ivachandra <sivachandra@google.com>, 2018-08-17 13:10:39 -0700, , add missing include piperorigin revid 209195047,,
2104,1074d61fc79af31b60d9af0a9bd2bfb2af8abc80,ivachandra <sivachandra@google.com>, 2018-08-15 11:04:21 -0700, , add info building pytype contributing.md piperorigin revid 208848796,,
2105,8ddc5583509fc08880805403cfbd5f171835f87d,iva Chandra <sivachandra@gmail.com>, 2018-08-16 14:54:33 +0800, , add googletest submodule 130,,
2106,066596205debb85246870e5281add9bc55de5d2b,artin DeMello <martindemello@gmail.com>, 2018-08-14 16:16:57 -0700,129, merge pull request 129 google google_sync google sync,,
2107,cc7f438cefa13fac28defe756cd2317fa62352be,sudol <tsudol@google.com>, 2018-08-13 14:56:52 -0700, , fix str.startswith str.endswith type stub first arg may str tuple str iterable function take start end optional argument piperorigin revid 208547915,,
2108,8ed7ff25584de5fd1d87369996e4dd1f372c872f,sudol <tsudol@google.com>, 2018-08-13 12:56:17 -0700, , fix str.startswith signature accept tuple prefix piperorigin revid 208528404,,
2109,fdf3c85adfddbaaf853d22bf1f2b73958064885b,echen <rechen@google.com>, 2018-08-10 15:27:52 -0700, , fix incorrect parser argument description analyze_project piperorigin revid 208278124,,
2110,d1cb7537171106346956310462641657ec8ffdb1,eddy Sudol <tsudol@google.com>, 2018-08-10 09:22:35 -0700,126, merge pull request 126 google dogfood dogfood open source pytype,,
2111,4af4243a0ad67bbc2850f0df06530f25a99d3287,ebecca Chen <rechen@google.com>, 2018-08-09 19:50:05 -0700, , dogfood open source pytype piggy backed travis easiest way get set pytype failure reported build failure,,
2112,eff72216440abbcac337e941cb218c798faf09a2,artin DeMello <martindemello@gmail.com>, 2018-08-10 01:32:25 -0700,125, merge pull request 125 google google_sync internal copy http github.com google pytype pull 124,,
2113,953672762df62cbf7bde7fffa91fbc5f3182e594,echen <rechen@google.com>, 2018-08-10 01:19:18 -0700, , internal copy http github.com google pytype pull 124 piperorigin revid 208175558,,
2114,33703b987ac5ee25e246b711bc6e78aac2741b6e,artin DeMello <martindemello@gmail.com>, 2018-08-10 00:02:21 -0700,124, merge pull request 124 google exclude support excluding file directory analyze_project,,
2115,d6b862441f75c34f712aba2cdff3d2406b8b2ec5,ebecca Chen <rechen@google.com>, 2018-08-09 23:50:53 -0700, , show helpful error message input parser.error method print usage message error since pytype single say need filename went need input,,
2116,b176a40a4ec39dd17edf60de9965a1c0d49afd89,iva Chandra <sivachandra@gmail.com>, 2018-08-10 14:30:32 +0800, , update type annotation backporting patch 121 applied cleanly cpython 2.7 head tested applying patch current 2.7 head getting clean run cpython test suite,,
2117,c4f742a4c14266dfbc957c8e6e1856912d9d557f,ebecca Chen <rechen@google.com>, 2018-08-09 18:58:11 -0700, , support excluding file directory analyze_project support exclude flag make easy exclude part directory pytype safe e.g. pytype subpackage exclude subpackage _test.py renames filename arg input preparation adding configuration file since filename bit misnomer allow directory well,,
2118,2977ac0ea9e812fcc25d1122620c5b1744e9636b,eddy Sudol <tsudol@google.com>, 2018-08-09 16:21:30 -0700,123, merge pull request 123 google google_sync google sync,,
2119,458cfc4baf5046f0cd04f753bc2c6d2af3017008,sudol <tsudol@google.com>, 2018-08-09 15:56:46 -0700, , fix use free cfgnode name pyobject_str creates new python str object return pointer python object internal buffer buffer deallocated python object deallocated leading use free cfgnode created found running asan cfg_test.py found python version test also fix possible decref null pointer found clang_tidy piperorigin revid 208125733,,
2120,f43d69778c7342c7170e21742a18eb2b17250cc4,iva Chandra <sivachandra@gmail.com>, 2018-08-09 15:51:06 -0700,120, fix compiler warning due assigning const char value char variable 120 change essentially make variable also type const char resolve 120 piperorigin revid 208124908,,
2121,6130e250fbfb237a8e9fcb5ec4fd50f99cb54e5a,eddy Sudol <tsudol@google.com>, 2018-08-09 14:40:23 -0700,122, merge pull request 122 google google_sync allow pytype override existing logging level 117,,
2122,2a77ff871eb02b0063ce24d356fffee109ed3501,ebecca Chen <rechen@google.com>, 2018-08-09 14:22:25 -0700,117, allow pytype override existing logging level 117 pytype called analyze_project need able resolve 117 piperorigin revid 208110379,,
2123,8619e98812b2714430210d240f1e6200fb5f4c7e,eddy Sudol <tsudol@google.com>, 2018-08-09 14:12:17 -0700,119, merge pull request 119 google google_sync google sync,,
2124,4ea712075f4aeed2a1f33513d79bb252226b5ab3,echen <rechen@google.com>, 2018-08-09 11:51:49 -0700, , move generator test py3 test code type annotation need unfortunate way enforce internally piperorigin revid 208086510,,
2125,976d64ce6f8c174f10b67fdddee1f3e1d44a53e3,echen <rechen@google.com>, 2018-08-08 18:53:37 -0700, , rename renames confused new method also creates canonical docstrings method piperorigin revid 207982240,,
2126,157c85fb05bfb0bc5ba8f047fe822645dab5ea99,echen <rechen@google.com>, 2018-08-08 13:23:51 -0700, , prettify attribute handling code addition bunch minor tweak renamings change make callself callcls private field remove unused clsvar return value init_class make get_ instance class module _attribute method private rearranges attribute.py private method come public one change var blah return node var  return node blah 3.mro .mro comment rearranged method otherwise untouched deletes unused piperorigin revid 207936075,,
2127,215486558a86215500c2ced41cd7ef8ff0d150d3,echen <rechen@google.com>, 2018-08-08 13:09:16 -0700, , clean two todos related attribute.py resolve remaining todos change different part attribute handling tightly interconnected put behavior modification change follow one bunch small refactorings aesthetic improvement change reduces number variable created analyzing pytree.py original count along way tried document much possible since came across bunch hidden assumption probably introduced ... change property_get accept one callself argument plus is_class flag rather callself callcls two effectively mutually exclusive unclear change boundfunction friend longer require callcls parameter constructor fix call passing binding instead variable instance parameter deletes unused get rid valcls argument attribute.py replaces logic creating value getter passing simpler approach latter method determine based input getter blacklist three file change cause new finding appear issue pytype already knew catch change probably fixed subtle bug simplifying code squeegee piperorigin revid 207934024,,
2128,42aa5385186ecf94d58119c399cf616a05447062,hxun <ahxun@google.com>, 2018-08-08 13:03:01 -0700, , enable generator type check currently support check yield send ret type generator yield iterator iterable piperorigin revid 207932948,,
2129,3e6e26eeb2da5c30494fdc3a4d5e89c0c8ca3766,echen <rechen@google.com>, 2018-08-08 08:55:59 -0700, , fix bug map none ... signature found testing unrelated change turn pytype interprets tuple ... tuple singleton tuple piperorigin revid 207892007,,
2130,f7ba2c30f54ec7b092d1d85088c7f32cb68a8aca,handarip <bhandarip@google.com>, 2018-08-07 20:37:47 -0700, , run pytype multiple file analysis importlab sorting dependency analysis multiple file done sorted dependency order generated using third_party importlab requires running pytype file twice previous method piperorigin revid 207826658,,
2131,efc79aeae579a390b814d847c7d883659179c717,sudol <tsudol@google.com>, 2018-08-07 14:43:04 -0700, , add type hint py2 map function none ... add special case one two iterators somewhat limited since handle case one iterator shorter others existing definition handle case either piperorigin revid 207782612,,
2132,ae3511285e9b6e10367f86331f62f09ec7b103e2,eddy Sudol <tsudol@google.com>, 2018-08-07 12:07:03 -0700,116, merge pull request 116 google google_sync fix repeated contributing.md,,
2133,23356d75ebfa1854a55c085637d4638269404fd6,osh Holland <anowlcalledjosh@gmail.com>, 2018-08-06 15:28:47 -0700,67, resolve import github fix repeated contributing.md http github.com google pytype pull last section small print repeated covered software grant commit fix merge piperorigin revid 207619395,,
2134,baafe290219506e2b46509309259abc8819fef6c,eddy Sudol <tsudol@google.com>, 2018-08-07 09:45:47 -0700,114, merge pull request 114 google add debug option script build.py run_tests.py,,
2135,5fbe24a055fa22e973d946479e3e71ec0c4be086,eddy Sudol <tsudol@google.com>, 2018-08-06 13:26:35 -0700,112, merge pull request 115 google google_sync google sync resolve 112,,
2136,092a25a5d2d563bf97e5b50c8571155f2552a3ae,ivachandra <sivachandra@google.com>, 2018-08-06 03:19:47 -0700, , put missing quote around cmake variable unblock github http github.com google pytype pull 113 piperorigin revid 207518595,,
2137,31f47d17808b0424c89a0822c13b56d881e8e4dd,echen <rechen@google.com>, 2018-08-06 03:09:58 -0700, , fix matcher crash piperorigin revid 207517711,,
2138,87ced11a74f8b8233f99be081be4ab1f011b9d24,echen <rechen@google.com>, 2018-08-03 15:36:05 -0700, , fix crash matcher.py caused ambiguous base class piperorigin revid 207335329,,
2139,6757b82d576637307b5b8c7619107d7043bcfb22,ebecca Chen <rechen@google.com>, 2018-08-03 15:22:05 -0700, , resolve 112 import github 112 fix typo parser.py http github.com google pytype pull 112 merge piperorigin revid 207333317,,
2140,0b427b1c0747962bf003a076c928570a0b0b0696,echen <rechen@google.com>, 2018-08-03 14:40:23 -0700, , use default parameter one place turn one call site use new argument also fixed bug default behavior added comment make function easier follow squeegee piperorigin revid 207326615,,
2141,b87f0b9480d78b830a070f55396f52115b248211,sudol <tsudol@google.com>, 2018-08-03 13:08:27 -0700, , add pytd readmes copybara export also convert markdown make export rule little cleaner piperorigin revid 207312334,,
2142,23040d21f0b83be8190a5059886ce6c0c765a726,sudol <tsudol@google.com>, 2018-08-03 12:54:15 -0700, , export test_data .pyi file file apparently never exported github main_test.py relies piperorigin revid 207310169,,
2143,71695c2f1ccf4b7717aef38d6f65e5d7788850e1,ivachandra <sivachandra@google.com>, 2018-08-03 11:02:58 -0700, , enable logging debug build change touch cmake side ability make debug build via build script done separate change piperorigin revid 207292323,,
2144,901ff5accadfc51bf3bb9ccda539df8da0bf16f2,echen <rechen@google.com>, 2018-08-03 09:57:38 -0700, , replace get_full_name full_name property abstract.py completes one todos came change exposed bug different squeegee piperorigin revid 207281530,,
2145,69cc4c0c4fa81a940f7ee59df321d09c0fd44013,echen <rechen@google.com>, 2018-08-02 14:57:21 -0700, , make generate builtins deterministic called wrong place regular pickle file canonically ordered builtins pickle file still quite identical though piperorigin revid 207170783,,
2146,f61f2786764b08726347802231427d53c2839c2f, Sivachandra Reddy <sivachandra@google.com>, 2018-08-06 01:48:29 -0700, , fix doc string,,
2147,d2a10652b3e667092d37c427c9234ac879c656a0, Sivachandra Reddy <sivachandra@google.com>, 2018-08-05 12:13:16 -0700, , add debug option script build.py run_tests.py specifying option build pytype target debug mode useful example enable logging,,
2148,0aa330fc105aa294be92e744cfdfe4b9e7fc43c9,iva Chandra <sivachandra@gmail.com>, 2018-08-04 14:22:34 +0800, , add convenience script build pytype target 109 add convenience script build pytype target script expanded later pas add option build executables like pytype pytype single logging enabled,,
2149,3a45a603e06ea2f097d27b8b9189b4e12d2170b5,iva Chandra <sivachandra@gmail.com>, 2018-08-03 10:11:11 +0800,110, merge pull request 110 google google_sync google sync,,
2150,0ab66b87b90161d5b8e5ee4346a9c1b290c2de16,echen <rechen@google.com>, 2018-08-02 09:11:21 -0700, , fix splitting error fix buggy check attribute.py whether variable filtering need done change make noticeable difference number created variable since case check rare piperorigin revid 207110396,,
2151,86001dbfbe2e5429b99470bd5a71cadcc0edc41f,ytype Team <pytype@googlegroups.com>, 2018-08-01 18:16:19 -0700, , include errorlog failure reason failing test checker found error error show message final failure report without scrolling around within raw stdout stderr log  piperorigin revid 207029261,,
2152,3cd8322a699c1a265b2a57e54d24fa5d146613cb,echen <rechen@google.com>, 2018-08-01 10:56:52 -0700, , use typeshed subprocess.pyi python move subprocess.pytd stdli and3 stdli deletes symlink stdli cause pytype use .pytd file python typeshed .pyi file python  target failure _link video youtube log financial data_explainer formulas_lib finding good thing error already present pytype head bad thing caused previous change failed catch time made rookie mistake omitting define pytype dev build_all run piperorigin revid 206955504,,
2153,4ace3bec66fe48d6df28c0324824b90b24ee5116,demello <mdemello@google.com>, 2018-08-01 10:43:58 -0700, , analyze_project set return code piperorigin revid 206953188,,
2154,df75455cd45961b6cfbb629c3753b3698e7074b2,ivachandra <sivachandra@google.com>, 2018-08-01 02:15:16 -0700, , add cmake py_binary target pytype main.py piperorigin revid 206899506,,
2155,66e11c29689d99494c944d2dc9ae29333c480fb2,echen <rechen@google.com>, 2018-07-31 14:03:16 -0700, , switch variable value motivation change reduce number cfg.variables per pytype run since solving typegraph query main performance bottleneck figured shrinking graph might help bit reason variable support setting __class__ extremely rare operation done .07 python file google making value reduces number variable created measured pytree.py also considerably simplifies code change doe bare minimum needed make switch variable value left todos simplification switch enables ran everything look good target failure _link platform testing infra meetup pyclient demo finding piperorigin revid 206822962,,
2156,e498a4e72907cbc0fa4ca931288b5f6189021a7c,sudol <tsudol@google.com>, 2018-07-31 13:19:50 -0700, , remove redundant code block variable prune sure got first place pretty sure compiler would eliminated anyway impact anything piperorigin revid 206815542,,
2157,2d10ec17fdd960fd79512dd76e496de38a578de7,artin DeMello <martindemello@gmail.com>, 2018-07-30 11:21:26 -0700,106, merge pull request 106 google make pytype patch directory toplevel directory,,
2158,03db38af2aff26b00f781a46888aa4cbd0ba276f,artin DeMello <martindemello@gmail.com>, 2018-07-30 11:19:59 -0700,104, merge pull request 104 google add script generate python executables,,
2159,c4406f45b18b9d5c830dd66e86fc576f7bcc5bc5, Sivachandra Reddy <sivachandra@google.com>, 2018-07-30 00:13:19 -0700, , make pytype patch directory toplevel directory,,
2160,992268d70225732315bb91bb551d801e486765aa, Sivachandra Reddy <sivachandra@google.com>, 2018-07-28 21:45:26 -0700, , cleanup,,
2161,3cb887a3c6c1de020eb2820ca45b2783f7dfca8b, Sivachandra Reddy <sivachandra@google.com>, 2018-07-28 06:50:59 -0700, , add script generate python executables script used py_binary target generate executables like pytype single pytype merge pyi etc,,
2162,6bd85c75ad3d62bf36f988f5adcb8052b30bbb7f,iva Chandra <sivachandra@gmail.com>, 2018-07-27 21:44:52 +0800,103, merge pull request 103 google google_sync google sync,,
2163,4cf86d6f774c3f80031a82f102499fddfab61b73,echen <rechen@google.com>, 2018-07-26 16:02:20 -0700, , fix small bug readme example merge pyi saw typo following along user study piperorigin revid 206237149,,
2164,0837eed3fa674625ae7a24cc9ecfd51e076ace70,echen <rechen@google.com>, 2018-07-26 14:19:49 -0700, , fix definition oserror friend python ioerror alias oserror bunch new oserror subclass piperorigin revid 206220352,,
2165,aa87edf9485ac43bf0e2b3ea82d0e811673388a6,ivachandra <sivachandra@google.com>, 2018-07-26 09:10:10 -0700, , add missing include functional piperorigin revid 206168517,,
2166,342e35b46204fd2be24a8ab65b4336e26d0569a9,iva Chandra <sivachandra@gmail.com>, 2018-07-27 08:56:26 +0800,102, merge pull request 102 google google_sync google sync,,
2167,39a78c17a936f94f31229077cc4144423679ddb8,ivachandra <sivachandra@google.com>, 2018-07-25 19:12:06 -0700, , drop python reference binding data program instance away case cfg extension module binding data python object owned binding instance binding data also potentially shared multiple binding instance management ownership cleanup shared binding data case python object drop reference done using std shared_ptrs custom deleters python reference bound python object dropped longer needed piperorigin revid 206093558,,
2168,cc7dc858454ddcef9f630025751623e93eaaf7e1,ivachandra <sivachandra@google.com>, 2018-07-24 16:59:43 -0700, , store weakrefs reference instance virtualmachine class break subtle reference cycle caused due ownership scheme present typegraph extension module important benefit got change running functional test instance created test method functional test cleaned end test method ensures one alive test method running unless test method creates one instance previosly instance created test method getting cleaned leading multiple live instance test method running piperorigin revid 205916197,,
2169,238d4f428404448186215f41511b8efaea8880dd,ivachandra <sivachandra@google.com>, 2018-07-23 20:45:45 -0700, , let cached object hold reference parent program object required prevent subtle reference cycle piperorigin revid 205770270,,
2170,0f281cb153d2ff95de4b3d8efb6cedeb510de56b,demello <mdemello@google.com>, 2018-07-20 12:22:16 -0700, , add readme xref piperorigin revid 205435547,,
2171,24216111e51d2df76ad74ac528e29dea7d3950c7,artin DeMello <martindemello@gmail.com>, 2018-07-20 12:43:18 -0700,101, merge pull request 101 google google_sync google sync,,
2172,beea696ce03053b514db2997e796e79080a625ae,echen <rechen@google.com>, 2018-07-20 12:05:16 -0700, , internal change piperorigin revid 205433152,,
2173,f9be0530ca72acb3eca1407d384de1e934253346,ivachandra <sivachandra@google.com>, 2018-07-19 10:32:51 -0700, , fix reference leak around pylist_append pyset_add piperorigin revid 205262734,,
2174,dbe96e6b0cafc68cb9eeaacaa196853b52c375cb,demello <mdemello@google.com>, 2018-07-18 16:27:30 -0700, , add xref project generate cross reference opcode trace piperorigin revid 205157129,,
2175,0dfac4d6107f36bcde801bed8d286ddca7f66ad8,echen <rechen@google.com>, 2018-07-17 20:28:27 -0700, , slight fix copy.bara.sky stop deleting build_scripts build_scripts still getting deleted change appears make stop piperorigin revid 205019656,,
2176,2bac36d049d81a5bae31ba593d1a436928d06cb0,iva Chandra <sivachandra@gmail.com>, 2018-07-18 15:06:01 -0700, , log cmake ninja output add diagnostic message stdout 100,,
2177,a36cf142f23c455366a547f0a90abd0df3e93727,ebecca Chen <rechen@google.com>, 2018-07-18 11:59:01 -0700,99, merge pull request google google_sync google sync,,
2178,1ba23ab914fb69d3628b4399d4fc2ccfe7cc227c,ivachandra <sivachandra@google.com>, 2018-07-17 13:35:17 -0700, , fix decref add increfs cfg.cc piperorigin revid 204965714,,
2179,c3b2781a71c68cdef3a8fd8e09e57ddc87a62b6c,demello <mdemello@google.com>, 2018-07-17 13:26:16 -0700, , fix fall back none tracing value without data piperorigin revid 204964107,,
2180,c39e9b4f62094bc89ae510d7d55b9dd2aee5ff2f,demello <mdemello@google.com>, 2018-07-17 13:04:57 -0700, , define opcode variable use test piperorigin revid 204960745,,
2181,1728d3c01e199c1d0bd9129ef1f6f8bc93be9f3d,demello <mdemello@google.com>, 2018-07-17 11:19:28 -0700, , add ability record trace data bytecode execution add vm.traces record method append opcodes argument piperorigin revid 204942193,,
2182,a5ac6dcf09884c11250a13550dc62cb9826c34ed,ebecca Chen <rechen@google.com>, 2018-07-17 19:21:31 -0700,98, merge pull request google google_sync google sync,,
2183,b92b1c8c2b1f19e6a01f8a9be5aac077181e5aec,ebecca Chen <rechen@google.com>, 2018-07-17 16:17:42 -0700, , restore build_scripts,,
2184,b5e2b851c94db75460b5dafe5529404341092723,ivachandra <sivachandra@google.com>, 2018-07-16 15:43:28 -0700, , let copybara ignore .travis.yml build_scripts directory piperorigin revid 204820483,,
2185,f03e1e32846b4d71d444fa7193047e3b968ea656,echen <rechen@google.com>, 2018-07-16 15:18:08 -0700, , add test_base dependency typeshed_test martin comment http github.com google pytype pull issuecomment 405393939 realized dependency missing know became problem also know fixing help test failure adding dependency seems like right move anyway piperorigin revid 204816392,,
2186,03477778711d6ac231e70faad39d0c54e0e14a0b,echen <rechen@google.com>, 2018-07-13 20:05:35 -0700, , move file generation setup.py move code creating generated pyi file release build_utils call setup.py change allows setup.py complete pytype installation independent release script useful testing enable http github.com python typeshed blob master requirement test py2.txt back testing pytype head also bump version number pypi release check everything working tested running release script old version number pip install user piperorigin revid 204563486,,
2187,f9063cf0831fd5e0ba544ffab6e530980627a7b0,echen <rechen@google.com>, 2018-07-13 17:17:37 -0700, , cleanup make release script little nicer make reusable remove .gitignore clearing directory remove pytype.egg info dist cleanup second final cleanup tested fashion previous one making release old version number piperorigin revid 204552378,,
2188,4d621cfa2e744cfe1e72047584289fae2ea7adad,echen <rechen@google.com>, 2018-07-13 17:03:20 -0700, , cleanup move top level setup.py code function update first two cleanup split change pytype installation process tested running build_scripts release.py old version number nothing actually uploaded test pypi piperorigin revid 204550660,,
2189,e5dc235e666e64ca85311e16121a330ee0db5a42,echen <rechen@google.com>, 2018-07-12 11:49:14 -0700, , allow generating .pickled file without corresponding .pyi previously generate pickled output pytype called pytype output pickled blah.pickled output blah.pyi allow generating .pickled file changed call pytype output pickled output blah.pickled done rather switching pytype output pickled blah.pickled order preserve assumption pytype inference mode options.output set piperorigin revid 204337054,,
2190,c605d59e599d98c91e1c9134703d5f836965945d,sudol <tsudol@google.com>, 2018-07-12 10:04:00 -0700, , internal change piperorigin revid 204317478,,
2191,17f59464c1d16a9d9eb7fe08d509a300f29efa94,ivachandra <sivachandra@google.com>, 2018-07-11 18:52:25 -0700, , replace base logging wrapper around python logging module piperorigin revid 204228663,,
2192,5afd5a9800724840b0e373d436896943f274e001,sudol <tsudol@google.com>, 2018-07-10 16:38:38 -0700, , remove debug log hack test_base piperorigin revid 204035105,,
2193,a743134f77105c57da2efbe915bb573616277360,sudol <tsudol@google.com>, 2018-07-10 14:41:32 -0700, , rename typing.py also fix lint error output.py adding doc comment piperorigin revid 204015312,,
2194,2a26bbff5381eb7b151021241037b3348e7c71f0,sudol <tsudol@google.com>, 2018-07-10 13:49:22 -0700, , internal change piperorigin revid 204005425,,
2195,c3fb8b8768b75f3ff5adc59f7e48b73e7a3c2910,ivachandra <sivachandra@google.com>, 2018-07-04 16:18:35 -0700, , fix header guard pytype header file piperorigin revid 203311649,,
2196,45c4d02c8d00352156df6e11c582fd90128a48d8,sudol <tsudol@google.com>, 2018-07-03 14:20:44 -0700, , move stripped test documentation internal file piperorigin revid 203182489,,
2197,eafceb3348250ce52c8889c57747cf3e9f670c8b,demello <mdemello@google.com>, 2018-07-03 13:42:56 -0700, , add frozenset primitive class python3 piperorigin revid 203176486,,
2198,4004b1266f1f408f884447530c1a7e906ca3658d,echen <rechen@google.com>, 2018-07-03 12:32:21 -0700, , internal change piperorigin revid 203166070,,
2199,4d9fb0345bbcdd575d4ac18eb5aa6dc120ef9341,ivachandra <sivachandra@google.com>, 2018-07-03 10:29:47 -0700, , add cfg extension module cmake target use piperorigin revid 203144506,,
2200,ce68350ff9ea416a124fad68eedf673b3e28529d,ivachandra <sivachandra@google.com>, 2018-07-02 15:44:36 -0700, , add include algorithm solver.cc piperorigin revid 203025706,,
2201,b20a5807fd3992f6db238f5afc1f8b26f8399258,echen <rechen@google.com>, 2018-07-02 15:44:22 -0700, , internal change piperorigin revid 203025667,,
2202,ac7e6b836d83f92104f0ee3becced38f01d4b1be,sudol <tsudol@google.com>, 2018-07-02 14:26:23 -0700, , replace logging header stripping cassert piperorigin revid 203012510,,
2203,55df9c4c6c900307c86d123c4f4777dc0c68bd62,sudol <tsudol@google.com>, 2018-06-29 15:09:25 -0700, , temporarily strip base logging.h piperorigin revid 202714735,,
2204,984ffaee541de2f76c3d55b747a290adf5f6b95f,sudol <tsudol@google.com>, 2018-06-29 14:23:31 -0700, , delete cfg_assert.h piperorigin revid 202706889,,
2205,e6e3015c3d3e99da7d93595e051e3941b88c69cc,sudol <tsudol@google.com>, 2018-06-29 13:55:38 -0700, , remove stripping output.py piperorigin revid 202702152,,
2206,073d443d43c9c9f91a16dece4b98abd1a07d2fe2,echen <rechen@google.com>, 2018-06-29 13:54:21 -0700, , noticed leftover buildutils reference investigating copybara issue piperorigin revid 202701950,,
2207,b3abb1b60d349e69fd260e6fedfd236954225981,iva Chandra <sivachandra@gmail.com>, 2018-07-17 13:42:04 -0700,96, merge pull request sivachandra master install python3.5 dev python3.6 dev,,
2208,2f4581c2f8fadff4964d93cad756a1b2b6f3e5ef,iva Chandra <sivachandra@google.com>, 2018-07-17 13:09:35 -0700, , install python3.5 dev python3.6 dev required travis virutalenvs setup include directory correctly pytype extension module built pointing header file corresponding correct python version,,
2209,a552094c37a82cb3ab3354ccda354a536ed12c51,ebecca Chen <rechen@google.com>, 2018-06-29 14:14:17 -0700,93, merge pull request google google_sync project import generated copybara,,
2210,cc535a1bf9605c4a55bbd0392f44f843db037b10,ebecca Chen <rechen@google.com>, 2018-06-29 12:48:06 -0700, , project import generated copybara piperorigin revid 202692385,,
2211,066cff5678d145869579ff910e0152ef153b452b,ebecca Chen <rechen@google.com>, 2018-06-21 12:46:12 -0700,91, merge pull request google google_sync report import error due bad deps,,
2212,215079ef5eef4b6df093e0a5392d12b1ee8c238c,ivachandra <sivachandra@google.com>, 2018-06-21 00:23:04 -0700, , report import error due bad deps piperorigin revid 201481602,,
2213,0ae583e15da3bec53df4771fcdad45c84f5c3351,artin DeMello <mdemello@google.com>, 2018-06-20 22:47:07 +0000, , fix copying generated file setup.py  piperorigin revid 201431116 201431116,,
2214,20fd24baa4304f468cb579b90afcee06a9d1751b, Sivachandra Reddy <sivachandra@google.com>, 2018-06-20 18:45:15 +0000, , allow run_tests.py script run test different python version python version run_tests.py script invoked used run test make convenient run test different python version machine  piperorigin revid 201389129 201389129,,
2215,ae8b6505698ca18d1691c07b3848ec5583cd5ad9, Sivachandra Reddy <sivachandra@google.com>, 2018-06-20 18:42:58 +0000, , add pytype travis notification  piperorigin revid 201388759 201388759,,
2216,5208258eb53240480445eec3244d23acdc051669,artin DeMello <mdemello@google.com>, 2018-06-20 18:15:32 +0000, , longer call pytype subprocess pytype_runner check path  piperorigin revid 201383270 201383270,,
2217,8a9d7a129ec81a40c76f073cc1bd4f2f1e77f5f0,ebecca Chen <rechen@google.com>, 2018-06-20 17:18:57 +0000, , change setup.py use entry_points instead script discussed last week pytype meeting change allows keep main.py file instead moving untestable script got rid main.py script move copybara changed pytype main.main accept argument entry_points want replaced script setup.py entry_points removed reference script subdir opensource build_tar.sh made error message analyze_project bit informative printing one line usage message instead nothing made error message merge pyi prettier getting rid custom program name computer absolute path executable tested unpacking blaze bin third_party pytype opensource public tree.tar removing script subdir pip installing  piperorigin revid 201372905 201372905,,
2218,b7eba9b0f069ad93e723887337320f2ac725894e,artin DeMello <mdemello@google.com>, 2018-06-19 23:51:08 +0000, , make public  piperorigin revid 201265514 201265514,,
2219,b227d322c40fc10c62c5688b2e0879f53f176022,ebecca Chen <rechen@google.com>, 2018-06-19 23:42:56 +0000, , update description.rst forgot make change last  piperorigin revid 201264273 201264273,,
2220,189bbb326a91277fbf428994667433961a16b242,ebecca Chen <rechen@google.com>, 2018-06-19 22:54:39 +0000, , tweak installation instruction readme add quickstart guide also bumped version number test pushing new version pypi  piperorigin revid 201256572 201256572,,
2221,dcbc7d52a169c796a1af63baf8a9768dcdda5408,artin DeMello <mdemello@google.com>, 2018-06-18 23:48:44 +0000, , document pytype platform support bump version number  piperorigin revid 201083269 201083269,,
2222,84535afeca10bb4cb54dc31f8c148d0d7d8d3371, Sivachandra Reddy <sivachandra@google.com>, 2018-06-15 23:49:52 +0000, , fix outside  piperorigin revid 200795159 200795159,,
2223,a57f55a051922467723b531fa32407e4e5272630,artin DeMello <mdemello@google.com>, 2018-06-15 22:20:15 +0000, , bump version number  piperorigin revid 200782538 200782538,,
2224,e95822ef03cbfda45ee3a65d169d75b25dc09b70, Sivachandra Reddy <sivachandra@google.com>, 2018-06-15 21:59:04 +0000, , add cmake target test one  piperorigin revid 200779035 200779035,,
2225,75304c124562645cb8daa14e83cbd96ea0b49c2f, Sivachandra Reddy <sivachandra@google.com>, 2018-06-15 21:40:44 +0000, , make work outside  piperorigin revid 200776071 200776071,,
2226,e3b08f361271284a6b5283fee4aec6c1aa6cc689,artin DeMello <mdemello@google.com>, 2018-06-15 20:56:18 +0000, , rework per platform args setup.py fix unistd supported window see http question 2793413 unistd related difficulty compiling bison flex program detail explicitly detect darwin assume clang trying detect clang working update readme add window compiler download instruction  piperorigin revid 200768738 200768738,,
2227,a7e5cd5d45f0c5ea4cb8f196b694cec033b2f1dd,ebecca Chen <rechen@google.com>, 2018-06-15 17:19:31 +0000, , move parser original motivation change mitigate looked like performance regression caused previous change longer sure whether regression real random noise kessel run time make code nicer removing overhead visitor slow least change replaces _qualify_name method parser note builtins rename already accidentally done visitor explicit get rid unused fix lint error tested blaze test third_party pytype ... blaze build third_party pytype define pytype dev blaze test define pytype dev devtools python proto_to_pyi devtools python clif_to_pyi devtools python blaze pytype devtools python blaze pytype script unpacking blaze bin third_party pytype opensource public tree.tar local copy pytype repository pip installing repo running typeshed test pytype_test  piperorigin revid 200734430 200734430,,
2228,e12cb996c5ea2fc8815d2f4450289fdbe5feebf3, Sivachandra Reddy <sivachandra@google.com>, 2018-06-15 05:43:55 +0000, , add python 3.5 travis test matrix  piperorigin revid 200672274 200672274,,
2229,80287014e6bd145a2d795c84751943692d36aec4, Sivachandra Reddy <sivachandra@google.com>, 2018-06-15 00:25:32 +0000, , allow typeshed blacklist loaded even typeshed_home specified  piperorigin revid 200647025 200647025,,
2230,a89ea9912364c4ad9154f7921a06c3680faa8a7f,ebecca Chen <rechen@google.com>, 2018-06-14 12:49:30 -0700,88, merge pull request sivachandra master update typeshed,,
2231,caf536e9721538a04cfd74003549d9b550adb094,iva Chandra <sivachandra@google.com>, 2018-06-14 11:40:14 -0700, , update typeshed,,
2232,f5341002db7a03e305ec9dbc8efa8e617d692188, Sivachandra Reddy <sivachandra@google.com>, 2018-06-14 17:18:47 +0000, , add python 3.6 travis test matrix  piperorigin revid 200576130 200576130,,
2233,dd032ee972fa77bd0a156d69a2ff9753222b09c3, Sivachandra Reddy <sivachandra@google.com>, 2018-06-14 17:18:27 +0000, , protect __dict__ changing iterating __dict__ item  piperorigin revid 200576059 200576059,,
2234,8ee4b56f4b2022d77b11e2b868d939244f283ab4,ebecca Chen <rechen@google.com>, 2018-06-14 01:28:47 +0000, , fix pyi import bug bug preventing pulling updated typeshed also improves error message load_pytd easier debugging  piperorigin revid 200488994 200488994,,
2235,1b521ae7ed1609ab1e2fb10c5879c06001286b53,artin DeMello <mdemello@google.com>, 2018-06-14 01:18:23 +0000, , fix restore util function project depended  piperorigin revid 200487959 200487959,,
2236,2a56a65fad8bb14057fbe2d38cfb73db7e0d7d41,artin DeMello <mdemello@google.com>, 2018-06-14 00:00:30 +0000, , refactor remove moe stripped block aid reversible stripping error url point open source errors.md outside google typeshed set missing_file global typeshed google missing.txt none expose rest mechanism open source code resourceloader general already looking one open source test pas even always look  piperorigin revid 200478222 200478222,,
2237,a20d48aace489ea964002cb427dc52930199a7da,ebecca Chen <rechen@google.com>, 2018-06-13 18:50:53 +0000, , back using union return type unfortunately broke many thing instead call optimize merge return type without creating union possible allowing retain benefit change avoiding false positive also unskips protocol inference test deletes identical testdivmod2  piperorigin revid 200428798 200428798,,
2238,f6b52fd0bbc55801c8179dce28f82099ff85bd3d,ebecca Chen <rechen@google.com>, 2018-06-13 17:45:37 +0000, , support aliasing class member pyi file allows load 2and3 plistlib.pyi signal.pyi re.pyi  piperorigin revid 200415903 200415903,,
2239,81566404b049540b6aa4309db6667e442a16488f, Sivachandra Reddy <sivachandra@google.com>, 2018-06-13 17:33:00 +0000, , add build status image main readme.md file  piperorigin revid 200413747 200413747,,
2240,34871f43c9188c857004d49fa12caf885b6080f3, Sivachandra Reddy <sivachandra@google.com>, 2018-06-13 16:42:49 +0000, , add .travis.yml open source export whitelist  piperorigin revid 200405174 200405174,,
2241,453725b16c8b717f6e9ce48af77d8b5d8dad6208, Sivachandra Reddy <sivachandra@google.com>, 2018-06-13 00:10:26 +0000, , replace  piperorigin revid 200308089 200308089,,
2242,853291fe134ef9fe4c9b33b14b7f2cbc50453e51,ebecca Chen <rechen@google.com>, 2018-06-12 23:32:16 +0000, , cleanup rename latter clearer shorter also fix bug corresponding test  piperorigin revid 200301917 200301917,,
2243,33816acbbb21c66bd7f22f8dc42acdadc8d26f45,artin DeMello <mdemello@google.com>, 2018-06-12 23:19:31 +0000, , add version option pytype  piperorigin revid 200300035 200300035,,
2244,5a005c62a03ab83f73d4e5deff7f9d5cfd8f57bc, Sivachandra Reddy <sivachandra@google.com>, 2018-06-12 22:59:58 +0000, , make script buildutils python friendly  piperorigin revid 200296852 200296852,,
2245,92338c533990ad1b07b49df80653b95a5fa6c304, Sivachandra Reddy <sivachandra@google.com>, 2018-06-12 20:20:58 +0000, , lower required version bunch pytype deps done build script work travis linux vms  piperorigin revid 200268799 200268799,,
2246,d9502a9789c4dea013557ef0f20c055480db9f43,ebecca Chen <rechen@google.com>, 2018-06-12 17:16:01 +0000, , fix crash caused instantiating typeparameter bad container code crashed using anystr incorrectly think need try hard anything sensible long stop crashing open catch incorrect usage  piperorigin revid 200236185 200236185,,
2247,0df66d5b383c04a180ae8a8c726b5ed58ab3bef5, Sivachandra Reddy <sivachandra@google.com>, 2018-06-11 21:50:11 +0000, , move test appropriate bucket  piperorigin revid 200116875 200116875,,
2248,01ceae9e4ee61d4aba31f7080ae56f669db88ceb, Sivachandra Reddy <sivachandra@google.com>, 2018-06-11 21:10:54 +0000, , moe strip see associated bug detail  piperorigin revid 200110024 200110024,,
2249,1394af7983a62af4aa828b79c8182acfb443bcab, Sivachandra Reddy <sivachandra@google.com>, 2018-06-11 20:36:05 +0000, , assume python source always utf text take  piperorigin revid 200103897 200103897,,
2250,8b86bf11ebdef14fe9fceb2da3de05bf4c9fa6e9,ebecca Chen <rechen@google.com>, 2018-06-11 18:46:43 +0000, , improve pytd.union instead abstract.union option converted separate binding change diffbase performance impact minimal fix anystr matching bug broke build includes return type matched signature rather pytdfunction signature expands usage single return allowing get rid try except hack improving inference precision case one unfortunate consequence change detect writable __setitem__ union actually consistent lack strict checking function call  piperorigin revid 200087180 200087180,,
2251,066f066dfb56de05ed2b59e796e4ebf93a3985ae,ebecca Chen <rechen@google.com>, 2018-06-11 18:26:06 +0000, , optimization skip argument view already seen create variable binding view function argument analyze call include every variable may possibly used often generate lot redundant view change track item view actually used see another view contains item skip optimization much average case change kessel run time far tell help lot pathological one example check file release blacklist  piperorigin revid 200083493 200083493,,
2252,ea7b451d1b5e58ef10202e4674ed8d95902483f9,oogler <noreply@google.com>, 2018-06-09 00:46:46 +0000, , rollback commit reason rollback breaking  original change description assume python source always utf text   piperorigin revid 199876882 199876882,,
2253,6d4856fcd63a3fb9ed5ce5473bb2cf3755e9170e, Sivachandra Reddy <sivachandra@google.com>, 2018-06-08 22:41:30 +0000, , assume python source always utf text  piperorigin revid 199862449 199862449,,
2254,dd943f35938a0975bf51516e35a82cf87e636e53,ebecca Chen <rechen@google.com>, 2018-06-08 17:30:51 +0000, , add method abstract.union union instance union need declare option child view computed properly fix   piperorigin revid 199813865 199813865,,
2255,f63af2117cd25b0dfc7c2bc920ab4602f73197da,rashant Bhandari <bhandarip@google.com>, 2018-06-08 00:36:13 +0000, , multiple matching signature combined together union type def __mod__ self unicode unicode def __mod__ self str matching signature return type union str unicode  piperorigin revid 199724843 199724843,,
2256,8d99177916a0eeadf0f2bf465495c704cdb79b72,ebecca Chen <rechen@google.com>, 2018-06-07 23:26:06 +0000, , always discard concrete value creating substitution used keep string value order args kwargs unpacking work correctly longer needed abstract.list abstract.dict define native implementation __getitem__ discarding concrete value prevents list addition blowing number type paramater value causing timeout entirely sure addition __mod__ definition triggered timeout gone change  piperorigin revid 199715864 199715864,,
2257,deeda87a32901e0a7a8b394befbd9d36b30fe223,ebecca Chen <rechen@google.com>, 2018-06-07 22:18:22 +0000, , bring back pytype timeout option think discovered option existed first place proposal pytype thing stalled pytype timeout option pytype dev 9eb4mhpo_ss usq804xlawaj like try reviving restored option  piperorigin revid 199705013 199705013,,
2258,e687bb758a7d8c4aa426e33f711170c714dbc44f,artin DeMello <mdemello@google.com>, 2018-06-07 00:37:06 +0000, , add new return success flag report error return success  piperorigin revid 199561612 199561612,,
2259,ea3b6f492f0f1522ee1050b4029a0682ab1df121,artin DeMello <mdemello@google.com>, 2018-06-06 05:20:25 +0000, , convert pytd tool argparse also reworks parser slightly consistent pytype construct call parse_args explicitly rather wrapping call parse_args function  piperorigin revid 199408651 199408651,,
2260,60ec52dae36a8bb780b9374ea6adb436ba8451e4,eddy Sudol <tsudol@google.com>, 2018-06-05 22:10:01 +0000, , move merge_pyi testdata merge_pyi test_data pytype test_data easier subprojects consistent  piperorigin revid 199365525 199365525,,
2261,2ac6f98edcec464c2748abe8418ec3b5f8daf186, Sivachandra Reddy <sivachandra@google.com>, 2018-06-05 20:31:37 +0000, , move part specific test_stdlib separate test module  piperorigin revid 199348865 199348865,,
2262,f4fe4bf04657fc8e1e6e3ae494bef319ecdd7103, Sivachandra Reddy <sivachandra@google.com>, 2018-06-05 20:10:58 +0000, , sort couple test module bucket completely sorted previous attempt sorting tested open source test script  piperorigin revid 199345960 199345960,,
2263,791baa80e96ef16f0b914fb7a2b72d2e107abb47,artin DeMello <mdemello@google.com>, 2018-06-05 18:40:53 +0000, , bump version number release  piperorigin revid 199332354 199332354,,
2264,79cc418c7ddf3b7b9e9da87f5599671c70e9194a,ebecca Chen <rechen@google.com>, 2018-06-05 01:23:54 +0000, , pytype_runner print filename transient message normal printing noisy addition system import  piperorigin revid 199228106 199228106,,
2265,d0a357cd3b7bc59ebf425365cd243251bc98002f, Sivachandra Reddy <sivachandra@google.com>, 2018-06-04 23:22:57 +0000, , adjust scrubber directive removing __future__ import directive regex directive remove space keyword also keep ending newline character line number preserved scrubber transformation preserving line number required ensure error line number outside  piperorigin revid 199213284 199213284,,
2266,1f61ff109f9f44de9c108beb7e99ab3d6628f898,artin DeMello <mdemello@google.com>, 2018-06-04 22:39:32 +0000, , move function depending __file__ module  piperorigin revid 199206707 199206707,,
2267,6b0e1de1c0631e88c11c73032333620ff606d851, Sivachandra Reddy <sivachandra@google.com>, 2018-06-04 21:26:12 +0000, , replace assert method part unittest module previous change replaced assertlistequal better replacement better replacement also incorporated change  piperorigin revid 199194265 199194265,,
2268,3de774361b2481b55ef493391429e88571f7b9f2,ebecca Chen <rechen@google.com>, 2018-06-04 20:03:13 +0000, , rename pytype pytype single pytype pytype update readmes update readme.md merging stewart draft pytype readme part least confident adding pip install wheel installation instruction using pip install rather setup.py install source removing request example showed obsolete maybe real example better toy one mention lack support part pep 484 python feature regenerates description.rst readme.md move documentation opensource pytype g3doc opensource.md add releasing pypi section currently contains command generating description.rst renames pytype pytype single pytype pytype deletes completely date readme pytd directory tweak merge pyi readme reflect name change merge_pyi  piperorigin revid 199179870 199179870,,
2269,6bb4ff3448cc173657246956c4c0be892d49e37b,ebecca Chen <rechen@google.com>, 2018-06-04 18:20:04 +0000, , increase maximum depth using output analyze annotated pytype analyze annotated check infer type single pas see analyze annotated output need use larger checking maximum depth rather inference one  piperorigin revid 199163492 199163492,,
2270,ebe9687723b908c54cd615b83b0ac1a7bf30a0c9,artin DeMello <mdemello@google.com>, 2018-06-04 17:57:57 +0000, , use system site package dependency found importlab pytype  piperorigin revid 199159148 199159148,,
2271,50f7ed333b547af01b9adfa7f6d4ef64b69081fa,ebecca Chen <rechen@google.com>, 2018-06-03 23:53:48 +0000, , make pytype help message friendlier remove lengthy list option usage replaces filename input since input file directory beginning help message look like usage pytype option input input ... positional argument input file directory process  piperorigin revid 199064452 199064452,,
2272,761d57a64a40ab6ac4014f2009a1b98d60a84cf7,ebecca Chen <rechen@google.com>, 2018-06-02 00:27:47 +0000, , allow pytype single args specified config file tweak make place processing easier add simplenamespace class datatypes since multiple test need ability quickly create namespaces change way config object work variable processing happens separate object final attribute copied config make easier complex processing without e.g. default file option interfering creates class parsing postprocessing initial config file creation step constructing config object follows creates new args object command line value config.items pytype single args config.items converter automatically called part parsing parse_args call postprocess pytype single args new config created populated default config.items converter come free parser method call postprocess pytype single args file option read fileconfig object config.items converter called part read_from_file main.py call postprocess pytype single args fileconfig merged config object args object merged config object reason put bulk new logic parse_args.py rather config.py config imported parse_args want create logical loop passing parser back config  piperorigin revid 198950273 198950273,,
2273,de1c53bb4c8f0acfd12fd0b1dbef5e78f27c527d,ebecca Chen <rechen@google.com>, 2018-06-01 23:44:00 +0000, , add merge_pyi installed script merge pyi also blacklist stuff scrubbing since related error message cluttering test log scrubber complaining able parse various file  piperorigin revid 198945546 198945546,,
2274,815d5233ab1aabfcca01467677af93c05406d68b, Sivachandra Reddy <sivachandra@google.com>, 2018-06-01 23:17:43 +0000, , replace assertlistequal use available unittest module stdlib  piperorigin revid 198942383 198942383,,
2275,cfb7b57d3c3be87555e0ea79b4e5c2e7b525a062, Sivachandra Reddy <sivachandra@google.com>, 2018-06-01 21:55:10 +0000, , add py_test cmake target change doe add corresponding py_test target existing py2and3_test target cmake py_test rule extended example add main option add test target done future number run test without ninja mean sequentially machine took around minute ninja running test parallel take minute  piperorigin revid 198930725 198930725,,
2276,33c7cee60523fa68af0c403c4e9f2d0289639239,eddy Sudol <tsudol@google.com>, 2018-06-01 18:30:08 +0000, , clean opensource failure remove lib2to3 setup.py remove link pycon 2016 slide merge_pyi readme.md  piperorigin revid 198901518 198901518,,
2277,3d4392f078809370af7087681580977a702619d9,ebecca Chen <rechen@google.com>, 2018-05-31 23:52:37 +0000, , expose pytype single option pytype split previously comment based category make_parser separate function including reuse pytype parser side note right pulling check output basic option category useful disable report error protocol set pytype command line quick analyze annotated also available easy get important disable punted next step integrate new variable config set file  piperorigin revid 198801843 198801843,,
2278,24bb42c4cbf31672551d32b80e4815c2365b84fc, Sivachandra Reddy <sivachandra@google.com>, 2018-05-31 23:03:18 +0000, , add script run pytype test script let one run test without interact cmake ninja explicitly new test target currently fails added illustrate failure show output generated script look like currently python buildutils run_tests.py running cmake ... building ... running test ... pas pas fail usr local google home sivachandra lab public_tar pytype test test_dict.log pas pas pas pas pas module failed usr local google home sivachandra lab public_tar pytype test test_dict.log also includes following change turn merge_pyi lib runner add setup.py  piperorigin revid 198795174 198795174,,
2279,6785bcaf7c057072b4569cc2ff6cbf4fb61514df,artin DeMello <mdemello@google.com>, 2018-05-31 02:04:44 +0000, , move module_utils file also clean leftover stuff utils_test  piperorigin revid 198656512 198656512,,
2280,41c0789102ed617a919a1855d89bc205654291f4,ebecca Chen <rechen@google.com>, 2018-05-31 00:17:08 +0000, , move option postprocessing separate class separating postprocessing option class cleaner give flexibility argument parsing particular possible postprocess subset argument use arbitrary namespaces option holder  piperorigin revid 198645836 198645836,,
2281,3b27a22c838a2b9c9933f06916da2efd3aa86194,artin DeMello <mdemello@google.com>, 2018-05-30 21:49:02 +0000, , convert pytype argument parser optparse argparse  piperorigin revid 198623290 198623290,,
2282,4433187c82eb52d0a6eb5c7db0639c20312d41c4,ebecca Chen <rechen@google.com>, 2018-05-30 20:02:59 +0000, , deduplicate  piperorigin revid 198605851 198605851,,
2283,253fc06b7fa24148eaae668e47c37a5bedc4d5a3, Sivachandra Reddy <sivachandra@google.com>, 2018-05-30 03:42:18 +0000, , add py_test rule use create cmake test target script buildutils copy.py renamed buildutils pytype_copy.py name conflict builtin copy module  piperorigin revid 198500446 198500446,,
2284,2836242a0932b6a8f4b10a13fe4a056b42a60181,ebecca Chen <rechen@google.com>, 2018-05-29 20:04:47 +0000, , always reanalyze function traverse deeper previously reanalyze function could traverse deeper previous return value none second heuristic break simple example removed  piperorigin revid 198444329 198444329,,
2285,41020fd7a93452a0283368e0d39dab6b14ac96f8,ebecca Chen <rechen@google.com>, 2018-05-29 20:00:17 +0000, , make quick maximum_depth handling sane add option set quick test method infer simplifies maximum_depth setting logic putting default one place getting rid sys.maxint case  piperorigin revid 198443554 198443554,,
2286,1637dbb218fa20b97a204103a072226ac2fed0e6,artin DeMello <mdemello@google.com>, 2018-05-29 19:47:35 +0000, , define is_lazy class mixing abstract.class  piperorigin revid 198441512 198441512,,
2287,ffcfba02672e417bf2341d2ea0a3bda53b6ea9a5,ebecca Chen <rechen@google.com>, 2018-05-29 19:45:06 +0000, , allow typevar bound constraint change way fetch bound constraint unsolvable allowed addition abstract.class object requires minor tweak convert.py abstract.py tuples type handled properly error message  piperorigin revid 198441150 198441150,,
2288,28dfe65e7db90c9992377839e80291b43b96bc25,ebecca Chen <rechen@google.com>, 2018-05-29 17:42:25 +0000, , get rid trace logging level fix import loop caused using cfg_py  piperorigin revid 198419475 198419475,,
2289,bf755e39f5c3f4e07a4352071fa11e4525f24a6c,ebecca Chen <rechen@google.com>, 2018-05-29 17:38:05 +0000, , create convenience method vm.py2 vm.py3 week ago promised followup little late better never add convenience method quickly checking target python version change make easier check major version minor one python version even cover majority version checking also fix lint error get rid pointless tuple call  piperorigin revid 198418654 198418654,,
2290,8d40142a916acf5bb1beea735fb1d12678e9bb1f,ebecca Chen <rechen@google.com>, 2018-05-27 04:15:46 +0000, , allow specifiying config file variable pytype command line  piperorigin revid 198196850 198196850,,
2291,61dc1c8a1d70f1e00b80eb2e76c3bd8ca22d692e,ebecca Chen <rechen@google.com>, 2018-05-27 03:26:00 +0000, , tweak output_dir pythonpath renames output_dir output intentionally masking pytype single output argument order make future filtering easier make pythonpath separated string path personally find format little ugly widely used consistent pytype single pythonpath option allow user specify pythonpath way command line config file expands default path relative cwd better expand default end mix relative absolute path last would little extra work handle pythonpath previous format change format anyway  piperorigin revid 198194961 198194961,,
2292,2bb9611e42f410ec78e9f1552d162c09d772da69,ebecca Chen <rechen@google.com>, 2018-05-27 02:53:22 +0000, , bug fix expand default path relative config file fix bug config file found pythonpath output_dir would expanded relative file directory regardless whether specified file instead pas expansion function configsection keymap path come configsection expanded change also lay groundwork path expansion command line args  piperorigin revid 198193828 198193828,,
2293,55b0d89eb678e4a846168b79e4b5486a41ddff16,ebecca Chen <rechen@google.com>, 2018-05-27 00:42:18 +0000, , bug fix make tree unresolved generate config mutually exclusive  piperorigin revid 198189364 198189364,,
2294,81ff8053a31d85d0452d79349ea74d7c304f15b7,ebecca Chen <rechen@google.com>, 2018-05-27 00:15:24 +0000, , code health improvement pytype bunch change affect pytype behavior make code nicer well tested easier debug move config.item analyze_project actually used get rid unused add test tool config.py combine config.sample config.default single item dict move change make possible populate config dict like object move config.py add test get rid folding since latter new test cover setup.cfg finding logic move parse_args function new file parse_args.py add test move config creation empty filename check make easier generate configuration debugging  piperorigin revid 198188478 198188478,,
2295,e10ee418e352e9c72ff913533de7e86cae12f59a,ebecca Chen <rechen@google.com>, 2018-05-25 20:51:56 +0000, , fix accidental logging level change pytype_runner change logging level need save original restore afterwards  piperorigin revid 198097342 198097342,,
2296,3a67c29c30e978dda11a44ef7f8867173053f2b8,oogler <noreply@google.com>, 2018-05-25 16:01:04 +0000, , make sure pytype check ancestry abc.abcmeta ness core issue appeared pytype would check see type abc.abcmeta meant case created child abc.abcmeta pytype would complain fix pretty striaghtforward look mro metaclass see child abc.abcmeta  piperorigin revid 198055934 198055934,,
2297,0413418944eff22cfc6d888c82a860253aa2d59c, Sivachandra Reddy <sivachandra@google.com>, 2018-05-24 23:22:23 +0000, , add cmake equivalent py_library filegroup cmake equivalent existing py_library filegroup target added using new rule another rule add_package also added designate directory python package  piperorigin revid 197972945 197972945,,
2298,8e2e4e03b9b8d2a6e2ce4c0f3fa88c06a7cd40ca,artin DeMello <mdemello@google.com>, 2018-05-24 01:08:41 +0000, , add version option display pytype version  piperorigin revid 197822719 197822719,,
2299,c27f6158dd62684d179ef0211e1307d69962aced, Sivachandra Reddy <sivachandra@google.com>, 2018-05-23 18:38:00 +0000, , add convenience script run test module  piperorigin revid 197760434 197760434,,
2300,a849151fbfd8338d948230076bdfeca52dde0791, Sivachandra Reddy <sivachandra@google.com>, 2018-05-23 16:32:07 +0000, , add test .md file opensource export list  piperorigin revid 197738193 197738193,,
2301,aac10d565bc710f6d31e4068ea4de313ca858c82,artin DeMello <mdemello@google.com>, 2018-05-22 22:09:04 +0000, , use different flag compiling gcc clang  piperorigin revid 197630785 197630785,,
2302,2c8c181da711f961daa6e6cfc89d8a1454f0697b,artin DeMello <mdemello@google.com>, 2018-05-22 19:59:42 +0000, , bump version number  piperorigin revid 197609200 197609200,,
2303,29330e39e5df1f891675b8dfd7da2e18e6db885d,artin DeMello <mdemello@google.com>, 2018-05-22 19:40:48 +0000, , add flag building clang mac osx detail http 2012 clang standard library mac  piperorigin revid 197606641 197606641,,
2304,9263c3ff0e303c4aa7bd5e4a731ae6b286a47465,ebecca Chen <rechen@google.com>, 2018-05-22 18:36:05 +0000, , change pytype_runner call pytype approach faster using subprocess measured time pytype request request adapters.py tradeoff need use nofail keep exception pytype crashing pytype easy way generate .errors file  piperorigin revid 197596480 197596480,,
2305,9df3718c86d99f831bf706f78d4d6aa9ab48d71d,ebecca Chen <rechen@google.com>, 2018-05-22 18:21:38 +0000, , pull part pytype.main new module pytype.io change give pytype way call pytype without using subprocess also slightly improves naming documentation check_ function  piperorigin revid 197593804 197593804,,
2306,1a405739cd8699ba0f49ae3def59a218b8be279b,artin DeMello <mdemello@google.com>, 2018-05-22 01:18:02 +0000, , allow pytype accept directory input scan list args filtering non .py file collecting .py file recursively within directory argument  piperorigin revid 197494719 197494719,,
2307,174523202b15d92f516590fa5b4b2386fb2782cd,ebecca Chen <rechen@google.com>, 2018-05-22 00:18:44 +0000, , delete consolidate attribute got rid two attribute accessed vm.options attr well module_name turned unused  piperorigin revid 197487549 197487549,,
2308,8f35f6f1c2bb0a891f353f588639ebbdb7d0bf3e, Sivachandra Reddy <sivachandra@google.com>, 2018-05-21 23:20:22 +0000, , remove unnecessary import  piperorigin revid 197478873 197478873,,
2309,3d62463cc91e14b0b2ea3f57e176064dbbc772dc,artin DeMello <mdemello@google.com>, 2018-05-21 21:58:27 +0000, , deduplicate utility function tool pytype move path function tool utils pytype file_utils deduplicate split_version clean instance leaf _or_die function tool utils generally want behaviour pytype  piperorigin revid 197464561 197464561,,
2310,6eb2b951951de29696c25ac4636caa3bba6d1eca,ebecca Chen <rechen@google.com>, 2018-05-21 17:37:15 +0000, , replacement utils.tempdir guessing unknown commit test toplevel test directory subdirectory run change blaze test third_party pytype ... pass  piperorigin revid 197416151 197416151,,
2311,7f7a16389cbb2e4438c2850ea9b6ecf793472428,oogler <noreply@google.com>, 2018-05-19 02:21:17 +0000, , performing modulus string unicode encoded string parameter result unicode type added function signature split recovery test py2 py3 support change iii made change test broken change  piperorigin revid 197234103 197234103,,
2312,5593b9955e2d9ac8aca6539566c1fa748ede901a,artin DeMello <mdemello@google.com>, 2018-05-19 01:47:44 +0000, , pull file filepath utility file_utils.py  piperorigin revid 197232010 197232010,,
2313,ebc28a3cf02f2406eb0a271d2594dd42eaaf5f47,ebecca Chen <rechen@google.com>, 2018-05-19 00:55:04 +0000, , improve pytype logging converted print statement logging print preceding sys.exit becoming everything else error warning info seemed appropriate reformatting along way since fact log message prefixed level mean multiline message look nice print left print statement following output tree unresolved progress update pytype_runner pytype finding testing logging found place could improve corner case checking fixed well  piperorigin revid 197227736 197227736,,
2314,4963593d772c7c661ba46f20af486522cfb298cb,artin DeMello <mdemello@google.com>, 2018-05-18 23:02:23 +0000, , move cfg variable cfg node specific utility cfg_utils renamed existing function cfg_utils snake case also removed couple unused prettyprinting function cfg_utils break import cycle wrapping equivalent function debug.py fixed existing lint error  piperorigin revid 197214322 197214322,,
2315,5b3f89d6e7d7fc50e053d0a20d9cc29bc649e777, Sivachandra Reddy <sivachandra@google.com>, 2018-05-18 18:26:44 +0000, , make unit test executable via command line unittest command unit test run currently command like python unittest ... change enables one execute unit test command unit test run command currently doe run main test module python script import main test module doe magic test defined module doe work want test_base.main called  piperorigin revid 197175001 197175001,,
2316,0cd85d561d608db93cced0cd057901f80bd5d25b,ebecca Chen <rechen@google.com>, 2018-05-18 18:18:16 +0000, , skip unnecessary error check report error specified skip time intensive check error logging turned via config option change try particularly clever optimization turn obviously expensive solver call since file typically error free probably gain much able find example made obviously faster incredibly simple change see reason  piperorigin revid 197173552 197173552,,
2317,40471d731cacc03dd098a8068997f95b1349d51f,ebecca Chen <rechen@google.com>, 2018-05-18 17:48:39 +0000, , move pytype output.py output.py change move subdir also moved file guess fix issue yet figured test change opensource export without submitting first  piperorigin revid 197168469 197168469,,
2318,4dcd047dca4d295d47b3a3cd193beda2f739eb79,ebecca Chen <rechen@google.com>, 2018-05-18 17:36:45 +0000, , make leak_test happy fix issue leak_test complaining log message stop showing blaze test pytype ... tsudol missing username list also took chance remove pludemannn three scrubber like file extension recognize mapped extension could referencing  told scrubber ignore rest word sketchy considered sensitive changed couple todo pytype todo rechen  piperorigin revid 197166488 197166488,,
2319,f009b01cd7b96b1cf43e8887cd0fbe7d9fdf498a,ebecca Chen <rechen@google.com>, 2018-05-18 07:45:50 +0000, , update pytype_runner behavior update pytype_runner report error file analyzes iff file filename user asked type checking combine project deps option single pythonpath option project needed determine report error change pyi_dir pytype_output rather pytype_output pyi since pytype_output longer contains log file move logic run run_pytype testing sanity sake change pytype path expansion upfront pytype_runner need worry expanding path test know always expansion updating readme noticed section filling config file made seem like package directory pythonpath tweaked language example clearer  piperorigin revid 197109460 197109460,,
2320,03adc696a722ecf2c462294beaf286fd0c34ef8a, Sivachandra Reddy <sivachandra@google.com>, 2018-05-18 06:48:27 +0000, , move directory right place open source tree  piperorigin revid 197105587 197105587,,
2321,68c61d81e55972b8007cb3fd46472c6d0181d372,ebecca Chen <rechen@google.com>, 2018-05-17 23:47:03 -0700,86, merge pull request sivachandra master update typeshed submodule,,
2322,b1854cf5f6fe448f6f5c4fb7f783c454e5d52282, Sivachandra Reddy <sivachandra@google.com>, 2018-05-17 23:41:50 -0700, , update typeshed submodule,,
2323,9fccaabf9807efbc02bbe9f3bdba80c7d2ebfe43,ebecca Chen <rechen@google.com>, 2018-05-18 00:36:22 +0000, , refactoring make pytype_runner easier test move thing around easy create pytyperunner test add test testing get_cmd_options yet change per pytype importlab get rid env argument runner pytyperunner require typeshed object initialization move logging stderr need create log file log source tree main.py allows pas import graph pytyperunner add verbosity option creates output directory initializing pytyperunner pass pytyperunner sorted source file rather full import graph remove quiet needed pytype error get dumped stderr default package output namedtuple pull part run_pytype helper method get_cmd_options easier future testing  piperorigin revid 197078678 197078678,,
2324,2b3570ee5acc27fdd485496359c5da090b5bdf6c,artin DeMello <mdemello@google.com>, 2018-05-18 00:12:35 +0000, , move custom dictionary class utils.py starting clean various utils file scattered around  piperorigin revid 197076135 197076135,,
2325,cfe7e7b28a3252d841366be10aba51933e079bb1,ebecca Chen <rechen@google.com>, 2018-05-17 23:04:19 +0000, , make tool config.py compatible python  piperorigin revid 197067130 197067130,,
2326,796c6143d82320c854de55a0b7f6576309e67878,artin DeMello <mdemello@google.com>, 2018-05-17 21:32:10 +0000, , change pytype config file ini style fall back setup.cfg  piperorigin revid 197052856 197052856,,
2327,5fb9c855d2558bc464faf773b28a1947358273dd, Sivachandra Reddy <sivachandra@google.com>, 2018-05-17 20:12:55 +0000, , add readme.md file directory  piperorigin revid 197039487 197039487,,
2328,599aecb632d83d540aaf3adc8d21089ed4c18639, Sivachandra Reddy <sivachandra@google.com>, 2018-05-17 17:37:47 +0000, , include directory open source export list  piperorigin revid 197014428 197014428,,
2329,1cc86128475b55c34a6a3e9c08fbaebac24bb84d,ebecca Chen <rechen@google.com>, 2018-05-16 22:41:56 +0000, , make command line option option allow pytype inference checking single pas rather analyzing file first output check  piperorigin revid 196901297 196901297,,
2330,2b785d810f0570aa0d4edad9afaf78ae730374e6,ebecca Chen <rechen@google.com>, 2018-05-16 22:37:22 +0000, , fix two bug pytd typeshed.py _pytype_base attribute sometimes initialized get_pytd_paths requires always available testing also uncovered issue _load_files opening file wrong mode  piperorigin revid 196900640 196900640,,
2331,cbe801ab5a1a5fa5504e50912831c733cc31c5f2,ebecca Chen <rechen@google.com>, 2018-05-16 20:17:46 +0000, , remove python executable originally started working due greg report virtualenv issue although closed discovered seem necessary without pytype test still pas blaze integration test pas pyglib retry pytype target __future__ import build pytype dev pytype.par updated  piperorigin revid 196877286 196877286,,
2332,39abfff3bd47949325b019609477f373351e4b65,ebecca Chen <rechen@google.com>, 2018-05-16 00:16:16 +0000, , add pythonpath guessing pytype add function loop input file guess dependency path file directory __init__.py guess path package otherwise guess path file  piperorigin revid 196755832 196755832,,
2333,670a79d327d5f426c40c5e261b40f74662bf11ff,artin DeMello <mdemello@google.com>, 2018-05-15 23:32:52 +0000, , update installation instruction point pip install  piperorigin revid 196749521 196749521,,
2334,f3d37791e2ffc60cc1c7cebfff7251616a09f71b, Sivachandra Reddy <sivachandra@google.com>, 2018-05-15 21:41:42 +0000, , add cmake rule genbison genflex py_extension use build parser_ext directory build output also added one able build extension module pyi parser following step  cmake ninja ninja second third step modified use make follows cmake make  piperorigin revid 196731776 196731776,,
2335,726f8424983e2968605595e971be05db3b1dd185,artin DeMello <mdemello@google.com>, 2018-05-15 20:28:21 +0000, , add manifest.in file file need packaged source distribution  piperorigin revid 196719647 196719647,,
2336,7e46d9c2a9f0e114781c562d9b96bccead048c15,ebecca Chen <rechen@google.com>, 2018-05-15 18:40:18 +0000, , change call os.path.rm os.remove setup.py  piperorigin revid 196703275 196703275,,
2337,cc84bcfbf2b5cdac0dd444860629348dc1093b7b,ebecca Chen <rechen@google.com>, 2018-05-15 05:42:53 +0000, , cleanup organize pytype config option group many many command line option pytype organize logical group change came trying figure option configurable user pytype also deletes following option target_name unused questionably useful since tricorder tool doe patching import error think case want building message timeout unceremoniously kill pytype time limit interesting idea need way say output default pyi approach allow  piperorigin revid 196619287 196619287,,
2338,fe595ba0217d55b491f3d7aadbba1655378870d8,artin DeMello <mdemello@google.com>, 2018-05-15 00:25:12 +0000,78, fix setup.py install window copy typeshed tree pytype typeshed symlink doe work fix issue  piperorigin revid 196594091 196594091,,
2339,9653ea65c546cb944b17999119452bed2e4ca580, Sivachandra Reddy <sivachandra@google.com>, 2018-05-14 22:52:12 +0000, , move flex bison generated file gen directory required generated file interfere open source build  piperorigin revid 196580905 196580905,,
2340,66639e50b6dae9384b59ed340aab57c22b686d50,artin DeMello <mdemello@google.com>, 2018-05-14 22:49:58 +0000, , preparation updating pytype pypi add long description file excerpted readme move version number __version__.py make date based add dependency importlab add trove classifier  piperorigin revid 196580602 196580602,,
2341,c4dd4ccfe8719baa81b8721b79e67b2d6ec454f7,artin DeMello <mdemello@google.com>, 2018-05-11 19:45:22 +0000, , update pytype readme  piperorigin revid 196294445 196294445,,
2342,b9b149fefccb78de72abc61f76f1e165b703165a,eddy Sudol <tsudol@google.com>, 2018-05-10 18:20:32 +0000, , remove dependency absl memory memory.h use make_unique basic case need full power memory.h also remove unnecessary dep build file reachable  piperorigin revid 196144058 196144058,,
2343,552b16f6ed5beae1339901a0df2ff6a4e7616d54,artin DeMello <mdemello@google.com>, 2018-05-10 06:04:52 +0000, , add pytd file importlab path pytype  piperorigin revid 196077210 196077210,,
2344,bcdff0c7addf13c225b2b54a1227adaa56821569,ebecca Chen <rechen@google.com>, 2018-05-09 23:50:58 +0000, , pytype use pytype typeshed class  piperorigin revid 196050515 196050515,,
2345,1b3bd765eb7a0385f23a307b155836fa520e03c4,ebecca Chen <rechen@google.com>, 2018-05-09 23:07:19 +0000, , make pytype typeshed class return full path subdirectory change pytype use class instead creating almost copy pytype change wil later change since change need checked open source export script pick need export test change pytype also fix lint error renames couple thing sensibly e.g. also grabbed module name builtins third_party  piperorigin revid 196044768 196044768,,
2346,fbf2e2d9be244bbf38ff3b4048670a4ef8b73294,ebecca Chen <rechen@google.com>, 2018-05-09 21:39:12 +0000, , replace pytd file original motivation change wanted able get rid .pytd extension longer planning still nice make stub file use valid python syntax  piperorigin revid 196031447 196031447,,
2347,8bda1476f31d37eae2e3e7c202c42d3e2726d2dd,ebecca Chen <rechen@google.com>, 2018-05-09 04:37:27 +0000, , fix print_tree call pytype  piperorigin revid 195921711 195921711,,
2348,6918db37fd95b116098a27edbc15deb1e5ad576a, Sivachandra Reddy <sivachandra@google.com>, 2018-05-07 23:59:51 +0000, , fix leak_test  piperorigin revid 195745739 195745739,,
2349,5a2b4000ab7cdec710526d3e9b2aab6dcbc31976,artin DeMello <mdemello@google.com>, 2018-05-07 23:30:40 +0000, , update pytype reflect change importlab also includes following change add opensource filegroups new blaze package test directory directory subpackage filegroup srcs parent package include file glob directory need add filegroup target subpackage list target srcs field parent package filegroup  piperorigin revid 195741649 195741649,,
2350,140c99eae545928b909c1e79b9513900d0f9d837,ebecca Chen <rechen@google.com>, 2018-05-07 18:39:27 +0000, , dedup mutation apply function call dictionary tuples generates lot view argument matching mean dict.setitem call lead mutation applied repeatedly type parameter creating complicated cfg pytype later choke change build set mutation apply instead list noted problem solver cause much slower cfg.py rare case case well figured happens fix simply avoids creating problematic cfg  piperorigin revid 195695384 195695384,,
2351,a806418d97780c2c44f0781717cee80527f4d53d, Sivachandra Reddy <sivachandra@google.com>, 2018-05-05 06:19:44 +0000, , ensure individual test method set target python_version  piperorigin revid 195517709 195517709,,
2352,4ccb98ec37b602dc17386fcf6aef875f3253ce09,eddy Sudol <tsudol@google.com>, 2018-05-04 22:22:55 +0000, , allow instance attribute shadow visible class attribute  piperorigin revid 195480206 195480206,,
2353,51113701d5cb1206060f049bad058315ead55129,artin DeMello <mdemello@google.com>, 2018-05-04 19:14:55 +0000, , add brief example error suppression errors.md strip link internal index.md doc  piperorigin revid 195452178 195452178,,
2354,94fedb0e3360296a2f8de9e2ca7fd60b3475de07,ebecca Chen <rechen@google.com>, 2018-05-03 00:41:32 +0000, , fix textwrap error pytype sample config generation second line onward comment prefixed meant sample config file broken  piperorigin revid 195181543 195181543,,
2355,19e634292355b544a90648e52ab1913545f01ceb,artin DeMello <mdemello@google.com>, 2018-05-02 23:49:42 +0000, , move doc level add link readme  piperorigin revid 195174699 195174699,,
2356,f992c2d7964de8c7fb7e4d31561a18b31447959c,ebecca Chen <rechen@google.com>, 2018-05-02 23:48:03 +0000, , return version tuple instead version list python interpreter python traceback recent call last file stdin line module typeerror format number required list python python3.6  piperorigin revid 195174456 195174456,,
2357,9b5acf963c9b15926068b1fdca097d6421059226,ebecca Chen <rechen@google.com>, 2018-05-02 23:24:40 +0000, , add pytype tool analyze_project setup.py package list otherwise get error module found try run pytype script also includes following change export errors.md github add shell script copy g3doc errors.md doc errors.md strip google specific bit  piperorigin revid 195170936 195170936,,
2358,f530069cc4a1a52f14ecdc3f13cc08185cbeecee,ebecca Chen <rechen@google.com>, 2018-05-02 22:00:18 +0000, , change loop loop  piperorigin revid 195157537 195157537,,
2359,b13dde99591b9447c2edffd7015cb075b8a6d914, Sivachandra Reddy <sivachandra@google.com>, 2018-05-02 18:58:13 +0000, , sort test_quick.py bucket  piperorigin revid 195128453 195128453,,
2360,74602a65716656ae9579c33501fed868e701b0ff,ebecca Chen <rechen@google.com>, 2018-05-02 18:08:49 +0000, , get rid unnecessary moe stripping got rid anything struck obviously safe remove allow focus actual problem area mostly removed stripping around bug also fix lint error  piperorigin revid 195119783 195119783,,
2361,1ac1f2cc063e16f249a40a511da22e7ba4f540af,ebecca Chen <rechen@google.com>, 2018-05-02 16:32:02 +0000, , analyze closure saving first opcode previously analyzed function rather function object avoid repeatedly analyzing closure also get rids is_closure method longer used anywhere  piperorigin revid 195103697 195103697,,
2362,0aca58c53c8746177f7708d2b0b384c0d0c6b111,ebecca Chen <rechen@google.com>, 2018-05-02 00:40:19 +0000, , trim opensource scrubber replacement dict using scrubber make necessary code replacement sanitize comment remove everything latter category disables leak_test yell write something safe export also fix leaky comment previously scrubbed  piperorigin revid 195026037 195026037,,
2363,eb0c1e27c46bd525ed745f660524e52fcdee7182,ebecca Chen <rechen@google.com>, 2018-05-01 22:00:27 +0000, , remove google specific import ignores google subdirs since exported anyway  piperorigin revid 195002806 195002806,,
2364,f95e340c6dba62b3afc7d3e9bc0d52fdc8431d71,ebecca Chen <rechen@google.com>, 2018-05-01 21:15:32 +0000, , replace third_party pytype typegraph empty string think include third_party pytype typegraph name include name replacement mentioned http github.com google pytype issue  piperorigin revid 194994890 194994890,,
2365,a705d593668d866b16ba4dd15c3a75500b8a7d60, Sivachandra Reddy <sivachandra@google.com>, 2018-05-01 18:52:08 +0000, , sort test_slots.py bucket misssing __slots__ decl added typing.pytd get one test passing python  piperorigin revid 194971132 194971132,,
2366,7ade5e17388eacc0f5a4392e8afa2b11baa4cc32,artin DeMello <mdemello@google.com>, 2018-04-30 21:44:39 +0000, , use setuptools rather distutils pytype setup.py using fallback distutils setuptools installed among thing package installed via distutils uninstalled pretty bad user experience  piperorigin revid 194848397 194848397,,
2367,4153f46057f38f749879698af595b07cc8eea894, Sivachandra Reddy <sivachandra@google.com>, 2018-04-30 17:46:55 +0000, , sort test_methods.py bucket  piperorigin revid 194809076 194809076,,
2368,22b240897ec634bc9e7614e949753106e5ae6609,ebecca Chen <rechen@google.com>, 2018-04-28 02:36:47 +0000, , get rid extraneous variable.data binding call doe possible data node data binding node binding replacement without breaking test fix lint error file touched pytree.py test data change reduces number data binding call 25677 15595 decrease time pytype spends kessel run 300s 240s time spent checking file linked bug drop minute minute  piperorigin revid 194625653 194625653,,
2369,60f48833822d2f2a4370cc95a0b7c2e37f67a70c,artin DeMello <mdemello@google.com>, 2018-04-27 23:03:14 +0000, , add link pytype pytype readme  piperorigin revid 194607305 194607305,,
2370,8df23c4afa884b9a3e141c17fcd2ba62a7e58864,artin DeMello <mdemello@google.com>, 2018-04-27 22:36:39 +0000, , fix want open source export everything tool python file  piperorigin revid 194603556 194603556,,
2371,559a5b5151d25de0649e95abb8e1bcd982aa3d07,artin DeMello <mdemello@google.com>, 2018-04-27 21:31:51 +0000, , minor cleanup convert.py check named pytd.class pyvals block  piperorigin revid 194593999 194593999,,
2372,183da9b436db072f4f958b4dffc6ca95a21cd627,eddy Sudol <tsudol@google.com>, 2018-04-27 21:21:30 +0000, , treat classmethods bound function matching  piperorigin revid 194592451 194592451,,
2373,1ff1a54bf1e4ad4626f5a35f2334cee9810d5733,artin DeMello <mdemello@google.com>, 2018-04-27 20:01:51 +0000, , finish separating pytype importlab importlab library set pytype typeshed dependency pytype creating importlab environment individual path  piperorigin revid 194580969 194580969,,
2374,0301bc7aa3ba159b87f1c5d06ef3b2f07ea8d7c6,ebecca Chen <rechen@google.com>, 2018-04-27 15:38:56 +0000, , fix issue finding rpcserver.pyi sorry second follow made rookie mistake forgot define pytype dev running blaze integration test notice file path wrong  piperorigin revid 194545787 194545787,,
2375,edd96c708fdedecf12e4a2265e0cf3295aae780a,eddy Sudol <tsudol@google.com>, 2018-04-26 23:40:11 +0000, , output underlying method signature converting classmethod staticmethod pyi file  piperorigin revid 194473976 194473976,,
2376,7452ff42799f67a575e559b52a947889956c0ba0, Sivachandra Reddy <sivachandra@google.com>, 2018-04-26 21:31:40 +0000, , sort bucket  piperorigin revid 194454819 194454819,,
2377,27402f226bdc04c4f898fac7d34fdb8f67d0b37b, Sivachandra Reddy <sivachandra@google.com>, 2018-04-25 22:17:27 +0000, , sort test_functions bucket  piperorigin revid 194306048 194306048,,
2378,81c4c64e2ba8b23f7fb8526502a612b6d5efdaf1,eddy Sudol <tsudol@google.com>, 2018-04-25 22:16:31 +0000, , change string std string  piperorigin revid 194305904 194305904,,
2379,cb5ed10baa0c1da31513575959bf64ea9ca78673,ebecca Chen <rechen@google.com>, 2018-04-25 18:46:22 +0000, , stop excluding cfg.py open source export think add file back used cfg import .cc file ignored stay  piperorigin revid 194273810 194273810,,
2380,f039b108522da5d40cb0665e0ee3983bbeb1eb6a,ebecca Chen <rechen@google.com>, 2018-04-24 22:20:06 +0000, , fix crash caused error sure line deleted given test still pas  piperorigin revid 194154799 194154799,,
2381,0c14999390c67320fc5b9cdf8cd2a8d419ee86b6,artin DeMello <mdemello@google.com>, 2018-04-24 00:21:27 +0000, , add pytype analyze project tool move pytype specific code main.py importlab pytype tool  piperorigin revid 194011376 194011376,,
2382,f8da745704d593a2ea0357a6934fb6aaabf4940a, Sivachandra Reddy <sivachandra@google.com>, 2018-04-23 20:55:08 +0000, , create bucket group functional test according target python version two existing test file split new group  piperorigin revid 193979003 193979003,,
2383,61e214dd69f884a0c0170c1b415b18c24428195a,ebecca Chen <rechen@google.com>, 2018-04-20 23:05:07 +0000, , delete stray space moe end_strip  piperorigin revid 193737556 193737556,,
2384,dcabf54dce8006e7223866c7f20faa29a1dfd10c,ebecca Chen <rechen@google.com>, 2018-04-20 22:53:41 +0000, , export typegraph file except cfg.py tried making various change none picked export script maybe really need check change picked  piperorigin revid 193736078 193736078,,
2385,ca771c8645734f610f4b30034feaea09f7974c5b,artin DeMello <mdemello@google.com>, 2018-04-20 20:25:48 +0000, , add utility initializing querying environment initial function cover typeshed python executable  piperorigin revid 193713842 193713842,,
2386,a21a6f4baa24947d8301b6fdd36799749afbe64a,ebecca Chen <rechen@google.com>, 2018-04-20 18:07:51 +0000, , improve support fix bug definition open add special builtin distinguish text mode byte mode python  piperorigin revid 193694088 193694088,,
2387,f169d81ff45ab191f51d98706535eb3371fec8d6,ebecca Chen <rechen@google.com>, 2018-04-20 17:37:24 +0000, , add helper method initializing subclass pytdfunction place better one canonical way also fix tiny inefficiency use existing instead creating new one  piperorigin revid 193688829 193688829,,
2388,9c1339c87c06ae0f108fe8d46a626becf08b6d27,ebecca Chen <rechen@google.com>, 2018-04-19 23:03:20 +0000, , make text alias union str unicode auto promote unicode pep 484 call text simple alias ... unicode also say parameter typed text argument type str well unicode acceptable treating unicode annotation equivalent union str unicode satisfies spec prevents user ever specifying type unicode instead make unicode unicode use text union str unicode  piperorigin revid 193590017 193590017,,
2389,c484d5b6327d576a7e47d8e2d38b50bb1a422c79,ebecca Chen <rechen@google.com>, 2018-04-19 22:38:40 +0000, , rename iterator.next __next__ python  piperorigin revid 193586073 193586073,,
2390,5c3e05213c86d546e70ccffcf21808b56da6a487,ebecca Chen <rechen@google.com>, 2018-04-19 22:26:54 +0000, , support sys six version info check  piperorigin revid 193584351 193584351,,
2391,fdebcd77a50f7ab9150e99ae93d86941a344a6d4,artin DeMello <mdemello@google.com>, 2018-04-19 20:14:39 +0000, , add pytype tool setup.py  piperorigin revid 193563213 193563213,,
2392,994c5f470f9ae8d9dd69554b155daf45fb1ed4fd, Sivachandra Reddy <sivachandra@google.com>, 2018-04-19 18:58:14 +0000, , add blaze package test directory  piperorigin revid 193552297 193552297,,
2393,a2aa6240b0cfdce101a1be945e2d0b4d38e5efff,artin DeMello <mdemello@google.com>, 2018-04-19 18:47:04 +0000, , move support utils running pytype external tool importlab pytype.tools  piperorigin revid 193550356 193550356,,
2394,bca46886ee73235797a56c2df9f58571f2e9e26a,ebecca Chen <rechen@google.com>, 2018-04-19 00:42:10 +0000, , fix issue python  piperorigin revid 193446043 193446043,,
2395,f3f28e71d37184f76164bd5d10b077e201514942,artin DeMello <mdemello@google.com>, 2018-04-19 00:07:05 +0000, , expand readme example open source pytype  piperorigin revid 193442014 193442014,,
2396,022397819f0a7612be74415fc8e2093c6a5cb19f, Sivachandra Reddy <sivachandra@google.com>, 2018-04-18 22:50:01 +0000, , refactor basetest make test config option pivot around pytype config option change test set desired option loader get configured automatically change pave way make python_version attribute instance attribute making instance attribute required create test class run test method different target python version automatically  piperorigin revid 193430694 193430694,,
2397,c16dc8994a550fce198d277e47f207f4b5e844e3,artin DeMello <mdemello@google.com>, 2018-04-18 22:32:30 +0000, , get rid shortn url  piperorigin revid 193427953 193427953,,
2398,f1f03e539cdba9520209bc8b3539d96465fcf8b9,artin DeMello <mdemello@google.com>, 2018-04-18 22:01:19 +0000, , create pytype tool directory contain open source tool  piperorigin revid 193422616 193422616,,
2399,db194d13fffc9220fe20ca69b62934163654b92a,ebecca Chen <rechen@google.com>, 2018-04-18 16:34:04 +0000, , turn type checking pytype source file  piperorigin revid 193369827 193369827,,
2400,860ace1989e8064e3ee5b562443fa8844eb78980,ebecca Chen <rechen@google.com>, 2018-04-17 23:46:08 +0000, , fix crash analyze.py  piperorigin revid 193279205 193279205,,
2401,c89c0eba6faf07705ec34da0a364f71613af2851,ebecca Chen <rechen@google.com>, 2018-04-17 23:07:25 +0000, , make main.py raise exception intead raising assertionerror python three argument raise syntax changed raise   e.__traceback__ raise raise actually preserve traceback want problem old syntax even parseable python use instead raise old exception modified message  piperorigin revid 193273291 193273291,,
2402,bef1f234dd6c463f09d229678f38ff4beca82c23,ebecca Chen <rechen@google.com>, 2018-04-17 21:51:16 +0000, , change another __nonzero__ method __bool__ covered test caught lib2to3  piperorigin revid 193260248 193260248,,
2403,7a29965f44f92547e0545a45bd03311a18648fd8,artin DeMello <mdemello@google.com>, 2018-04-17 20:48:13 +0000, , fix typeshed travis add compiler arg parser extension add back also includes following change tweak opcodes description say tos null call second none none none remove function stack leaving tos interpreted mean first popped none need pushed back exit_func popped set why_silenced stack represents exception think ever doe case top value none deleting line allows end_finally run set thing next block execute also moved right next with_cleanup vm.py got tired scrolling  piperorigin revid 193249710 193249710,,
2404,781bfb3f33851c6b0a09a6122f8d45e992ca92df,artin DeMello <mdemello@google.com>, 2018-04-17 18:03:05 +0000, , fix setting typeshed_home wrong generate user friendly error message assertion failure  piperorigin revid 193223778 193223778,,
2405,652a02d1e8a2e604439b60f26ef5de37e63d4362,artin DeMello <mdemello@google.com>, 2018-04-16 22:49:18 +0000, , update reflect pytype status change readme note pytype work version change setup.py add six requirement python3.6 category get rid python_exe host currently broken anyway  piperorigin revid 193112545 193112545,,
2406,cbe145a080e10eafb5c19da91cc55fc01c54e784,ebecca Chen <rechen@google.com>, 2018-04-16 22:22:21 +0000, , change map zip return iterators python also make small improvement python signature  piperorigin revid 193108658 193108658,,
2407,29c64137a69ab5e843a1e444f23cf4c650d95be2,artin DeMello <mdemello@google.com>, 2018-04-16 21:36:11 +0000, , fix return bytestring show open source version since internally use different mechanism load file  piperorigin revid 193100766 193100766,,
2408,cb49866cd1a150158bc1dd8fe937a06726f716f0,oogler <noreply@google.com>, 2018-04-16 21:12:53 +0000, , pytype allow typevar file today following code fails unexpectedly __future__ import import typing typing.typevar raise error file foo.py line module wrong argument invalid typevar expected name str ... actually passed name unicode fix let annotate typevar taking text instead str tweak typing.py handle type constant  piperorigin revid 193097134 193097134,,
2409,61465f7f5771646e10cfa3fa82fa35804c5b9576, Sivachandra Reddy <sivachandra@google.com>, 2018-04-16 20:02:37 +0000, , update typeshed  piperorigin revid 193085993 193085993,,
2410,7300b47ff7edc6967c224d324c17b46bfe61fb0a,artin DeMello <mdemello@google.com>, 2018-04-16 18:55:08 +0000, , make test_namedtuple compatible add version relying underlying native function also add fix namedtuple signature changing 3.6  piperorigin revid 193075728 193075728,,
2411,8480859fcd784f2ead86c798c5323f532d998979, Sivachandra Reddy <sivachandra@google.com>, 2018-04-16 18:38:32 +0000, , analyze closure already analyzed  piperorigin revid 193072888 193072888,,
2412,3ed5861b8156b550c9b6fd3694a061fca2a2d1f3, Sivachandra Reddy <sivachandra@google.com>, 2018-04-16 16:39:19 +0000, , allow method marked staticmethod pyi file passed callables static method file currently analyzed end value static method pytd pyi file end value value refer underlying hence change essentially making use underlying value perform argument matching  piperorigin revid 193052717 193052717,,
2413,070d3768b48c013c1202fcf19d480ed6fafbd1dc,artin DeMello <mdemello@google.com>, 2018-04-13 23:41:19 +0000, , make opcodes test compatible  piperorigin revid 192842992 192842992,,
2414,e4492c2e8639a87306f92316f6733facce56437f,ebecca Chen <rechen@google.com>, 2018-04-13 21:08:31 +0000, , delete pytd parse decorate.py think right one using file  piperorigin revid 192821241 192821241,,
2415,f1b28665c2c9a96042442429d70200e7ac4939fc,ebecca Chen <rechen@google.com>, 2018-04-13 20:50:22 +0000, , make main_test 2and3  piperorigin revid 192818283 192818283,,
2416,6f608dc46890828c2434fb92babf67c8b5b0ca00,ebecca Chen <rechen@google.com>, 2018-04-13 19:56:58 +0000, , convert test 2and3  piperorigin revid 192810865 192810865,,
2417,b54ce996844914b381b8ee4c233c3f13ea033063,ebecca Chen <rechen@google.com>, 2018-04-13 19:00:55 +0000, , convert test_calls test_checker 2and3 tweak loadmarshal return native string load_string except loading code lnotab field codetype object load_string used byte native string problem also ran converting test_slots although time tried fix problem later accepting byte slot name turned wrong solution  piperorigin revid 192802600 192802600,,
2418,d490963e16b5f7adedb36d3415a0a9c8a322ee19,eddy Sudol <tsudol@google.com>, 2018-04-13 18:28:13 +0000, , special case match.groups called default argument return type union anystr type default argument split case  piperorigin revid 192797563 192797563,,
2419,e6fcf5670b7a32c1db4c7ea6dc2e4b3282b2b9be,ebecca Chen <rechen@google.com>, 2018-04-13 17:48:04 +0000, , move bunch test 2and3  piperorigin revid 192790803 192790803,,
2420,6499da9ed90b5a3808919c7b51ab824e9a8539a2,ebecca Chen <rechen@google.com>, 2018-04-13 17:44:22 +0000, , make test_solver test_slots 2and3 mucking around loadmarshal noticed place could replace code went ahead well  piperorigin revid 192790205 192790205,,
2421,a188879ab41db7ab51176eb856336d609824dd09,artin DeMello <mdemello@google.com>, 2018-04-12 23:48:50 +0000, , move imports_map loader test py2and3 also clean instance open ...  piperorigin revid 192692895 192692895,,
2422,5341050d4652de2a64e49737ecec166200375d77,ebecca Chen <rechen@google.com>, 2018-04-12 22:24:12 +0000, , four 2and3 test test_splits test_super test_tuple test_tracebacks test_splits fix bug initialized  piperorigin revid 192680489 192680489,,
2423,dfe7f311abcc0085b35c6089c0923a25ecd98e94, Sivachandra Reddy <sivachandra@google.com>, 2018-04-12 22:11:18 +0000, , adjust return type match.groups  piperorigin revid 192678336 192678336,,
2424,8b326956e321392e4ceec515649ed06c9a74eb64,artin DeMello <mdemello@google.com>, 2018-04-12 21:43:12 +0000, ," convert following test basic builtins 1,2,3 stdlib  piperorigin revid 192673050 192673050",,
2425,17123d9ff458b9fe3c94fda084a621ca13e1ae82,ebecca Chen <rechen@google.com>, 2018-04-12 20:19:41 +0000, , convert three test 2and3 test_typevar needed change required minor tweak  piperorigin revid 192658978 192658978,,
2426,5a051437f03a37c5058687f5b381145f313062be,ebecca Chen <rechen@google.com>, 2018-04-12 20:00:33 +0000, , make 2and3 test  piperorigin revid 192655875 192655875,,
2427,713f376cde33915f98878874e382179f281ae89c,ebecca Chen <rechen@google.com>, 2018-04-12 18:22:42 +0000, , call pytd type printed error message  piperorigin revid 192640427 192640427,,
2428,ba25ae2426b761e9d6052ec73dd248076eea14a8,ebecca Chen <rechen@google.com>, 2018-04-12 01:24:05 +0000, , convert four test py2and3_test three required change test_typing needed small change output.py addition unicodepy2  piperorigin revid 192541820 192541820,,
2429,3b312bc840e3fb1edcf8490dea087e3486b6ee4b,artin DeMello <mdemello@google.com>, 2018-04-12 00:33:33 +0000, , make compatible  piperorigin revid 192536512 192536512,,
2430,58252d94b9f0923a09179f785eb173c9d903d552,ebecca Chen <rechen@google.com>, 2018-04-11 23:41:13 +0000, , make errors.py compatible  piperorigin revid 192529949 192529949,,
2431,c138c10718c02e9df9c1f4adf6a2736d1c9eb545,artin DeMello <mdemello@google.com>, 2018-04-11 23:06:00 +0000, , change main.py get commandline binary running python3 existing unit test pas blaze build config python3 pytype get pytype binary running python3 run command line test  piperorigin revid 192524711 192524711,,
2432,a40caa55463508189fec794d95f02757a8fdf7c9,ebecca Chen <rechen@google.com>, 2018-04-11 22:34:11 +0000, , fix opensource leak test  piperorigin revid 192519847 192519847,,
2433,cb5fc61cbb2733aceecef35d47af1ed29e8152e7,ebecca Chen <rechen@google.com>, 2018-04-10 22:22:56 +0000, , remove python builtins  piperorigin revid 192355923 192355923,,
2434,dbec6a64c5f44f8c731c66838eee02ce0c9dd3a4,artin DeMello <mdemello@google.com>, 2018-04-10 21:00:44 +0000, , get attribute.py test running make several fix convert.py support primitive class differ   piperorigin revid 192341810 192341810,,
2435,ba098abf88ed8fd3a8c66713836cfcd74c20c5ed,artin DeMello <mdemello@google.com>, 2018-04-10 02:46:11 +0000, , add option print visitor print function argument one line  piperorigin revid 192228008 192228008,,
2436,173a3cf597f5b33f10e59c08fffb2866659fa36d,artin DeMello <mdemello@google.com>, 2018-04-10 02:04:03 +0000, , mark state.py compatible also replace sys.maxint sys.maxsize throughtout two equally suitable purpose  piperorigin revid 192225004 192225004,,
2437,f74e24dfad606b2ac40985c4b3fadb7373fb3f4f,ebecca Chen <rechen@google.com>, 2018-04-10 00:01:36 +0000, , verify debug.py compatible expands debug_test.py cover debug.py change 2and3 test  piperorigin revid 192211670 192211670,,
2438,4a2b585b9e8d8429b330af586e45f42f51893295,artin DeMello <mdemello@google.com>, 2018-04-09 19:19:45 +0000, , add support load_classderef opcode new 3.4  piperorigin revid 192166032 192166032,,
2439,c9b78e8b8b35bc23b9f19303ca36722e868192b6,ebecca Chen <rechen@google.com>, 2018-04-09 19:03:31 +0000, , make pytd main.py compatible also add pytd main_test.py  piperorigin revid 192163613 192163613,,
2440,f66f8a004dbb9674827a9ebafdeafcd598c3b62f,ebecca Chen <rechen@google.com>, 2018-04-09 17:56:02 +0000, , make metric compatible  piperorigin revid 192151645 192151645,,
2441,b0e16954991be10af2f8595c242be324ae34c999,artin DeMello <mdemello@google.com>, 2018-04-09 17:13:19 +0000, , make blocks.py compatible also add compat module function help version compatibility  piperorigin revid 192145033 192145033,,
2442,1524bb3fb3f2d31ebc0fd76085ee9891373a10c1,ebecca Chen <rechen@google.com>, 2018-04-06 23:47:52 +0000, , make pytd slots.py pytd transforms.py compatible  piperorigin revid 191959195 191959195,,
2443,f0be1fc2199eaefbc5b507170147877711f5bfc7,ebecca Chen <rechen@google.com>, 2018-04-06 23:36:48 +0000, , make pytd compatible module access message attribute builtin exception several time created utils.message function access think better use utils.message everywhere rather also mixin thing feel strongly one would prefer keep mixin add back  piperorigin revid 191958081 191958081,,
2444,c88f1f498f68af95eb5fb6a6cbd544887bde510a,ebecca Chen <rechen@google.com>, 2018-04-06 23:20:27 +0000, , mark pytd type_match.py compatible delete pytd demo.py really confused happened last change supposed make type_match_test py2and3_test maybe sent accidentally switched working something else client anyway one actually say also deletes really old file referenced anywhere build file  piperorigin revid 191956267 191956267,,
2445,90bc8e0617aaf1aba06f99b962f01a3e0d69f52f,artin DeMello <mdemello@google.com>, 2018-04-06 22:34:14 +0000, , make directors.py  piperorigin revid 191950308 191950308,,
2446,21559be84e980cd0348add099d15fe39f258f350, Sivachandra Reddy <sivachandra@google.com>, 2018-04-06 22:17:00 +0000, , make pytd typeshed _test .py python2 compatible make pyi also python2 compatible  piperorigin revid 191947950 191947950,,
2447,a4e8a1edb49483f4d1c8a170dbac880a5a76de90,artin DeMello <mdemello@google.com>, 2018-04-06 21:39:54 +0000, , add small config test assert compatibility  piperorigin revid 191942209 191942209,,
2448,2fc4ce16c252eed9a2efc2efed3029721405f8d1, Sivachandra Reddy <sivachandra@google.com>, 2018-04-06 21:00:12 +0000, , make pyi lexer_test.py python2 compatible  piperorigin revid 191936238 191936238,,
2449,a565d3d321ee00b7f4b2bfc24744acf73c5002e5, Sivachandra Reddy <sivachandra@google.com>, 2018-04-06 20:38:57 +0000, , make pyi parser _test .py python2 compatible new mixin used pytype custom exception added mixin give convenience attribute message exception class  piperorigin revid 191933121 191933121,,
2450,869812114486386189def5142e816d885adde3f6, Sivachandra Reddy <sivachandra@google.com>, 2018-04-06 16:51:54 +0000, , make pytd booleq.py python2 compatible change add __hash__ method two class define __eq__ method python3 class defines __eq__ method __hash__ method class get set none  piperorigin revid 191900856 191900856,,
2451,e2e47bebee6c283739cfda6527bd75d930c2b0ba,ebecca Chen <rechen@google.com>, 2018-04-06 06:10:52 +0000, , improve python fix minor annoyance repr sometimes printed two parent class method e.g. rather bar.__init__  piperorigin revid 191849179 191849179,,
2452,4c07c7a43bb5ea6dad166c89ac2bac63e00d1f07,ebecca Chen <rechen@google.com>, 2018-04-05 22:17:58 +0000, , add verify abc_hierarchy compatible  piperorigin revid 191806713 191806713,,
2453,a9f77fc95cfd97e3159ca79b7165887a468d4597,ebecca Chen <rechen@google.com>, 2018-04-05 20:53:56 +0000, , make pytd visitors.py compatible  piperorigin revid 191793083 191793083,,
2454,713ca0a334fa36ee5229399d6bdae383620156fb,ebecca Chen <rechen@google.com>, 2018-04-05 20:11:18 +0000, , make pytd pytd.py compatible  piperorigin revid 191786413 191786413,,
2455,fe6cca6f00b77d5d14aea35609b23d2fe86fa6c8,ebecca Chen <rechen@google.com>, 2018-04-05 19:00:24 +0000, , make pytd optimize.py compatible  piperorigin revid 191776795 191776795,,
2456,13b70bb84661cbea0fd223b4375deb661db076bb, Sivachandra Reddy <sivachandra@google.com>, 2018-04-05 18:38:15 +0000, , convert pytype builtins node precondition _test py2and3_test  piperorigin revid 191773275 191773275,,
2457,b9a1c47154939702e8fe7274081d70074c97359e,artin DeMello <mdemello@google.com>, 2018-04-05 18:10:16 +0000, , make pyc compatible  piperorigin revid 191768358 191768358,,
2458,d2a5f496df6c5e817956d8a6a530fa4e0365b525,ebecca Chen <rechen@google.com>, 2018-04-05 08:28:54 +0000, , make utils compatible realized thing one port without dealing libvm therefore pyc.opcodes bit bullet made miscellaneous change needed make utils_test py2and3_test  piperorigin revid 191708500 191708500,,
2459,22006753aa30756cab435202e1a9f5ce08396144,ebecca Chen <rechen@google.com>, 2018-04-04 23:56:08 +0000, , make pytd_utils compatible make necessary change convert pytd_utils_test py2and3_test also make one change utils blocked looking issue fact utils_test depends pyc.opcodes  piperorigin revid 191669972 191669972,,
2460,73f284b9e8f57175c045191b4add4e172ab048f3, Sivachandra Reddy <sivachandra@google.com>, 2018-03-28 16:58:03 +0000, , support python3 super call without argument implementation mimic cpython bytecode code dance make possible call super without argument cpython comment added explain dance  piperorigin revid 190787120 190787120,,
2461,04b71a40b8826fbf358f6d49a9ded452fc3840c7,ebecca Chen <rechen@google.com>, 2018-03-28 01:02:04 +0000, , implement  piperorigin revid 190705269 190705269,,
2462,0323b5f7b8c9a1520a96675cdf2c5fc71a9bb76e,ebecca Chen <rechen@google.com>, 2018-03-27 23:16:15 +0000, , fix non deterministic hashing node.py  piperorigin revid 190692053 190692053,,
2463,ae7cc42b7d44650fa44fe4fb185dd46929410e93,artin DeMello <mdemello@google.com>, 2018-03-27 18:13:43 +0000, , support del local global variable  piperorigin revid 190642570 190642570,,
2464,e9c5c7932da53a5c6e9cc9bce42477c591bd2c70,artin DeMello <mdemello@google.com>, 2018-03-26 01:04:34 +0000, , conflate empty deleted  piperorigin revid 190404928 190404928,,
2465,17f50d71866bb14b54070e9c89ec5cd9406ba0c4,ebecca Chen <rechen@google.com>, 2018-03-22 01:04:40 +0000, , make memoryview contextmanager  piperorigin revid 189999933 189999933,,
2466,7a2263ca706b2f9d7db1f32a44ae7bd8b3abd210,artin DeMello <mdemello@google.com>, 2018-03-22 00:02:17 +0000, , add support multiple item unpacking python 3.5 example def kwargs print   piperorigin revid 189992704 189992704,,
2467,a8da10fe37e9fa27db1f2ad1c25a08e92edf2ce8,ebecca Chen <rechen@google.com>, 2018-03-21 18:22:06 +0000, , print nested proto class prettier way error message instead printing print great make pytype aware hack used proto_to_pyi seem way make change without error message look really strange  piperorigin revid 189938326 189938326,,
2468,49858b0e8eb3d63bdcc3c1485ed6732496083506,ebecca Chen <rechen@google.com>, 2018-03-20 20:37:45 +0000, , remove obsolete none attr error  piperorigin revid 189800340 189800340,,
2469,033d8ad106bdaf7c1c8273b7bfeac41f592351a8,ebecca Chen <rechen@google.com>, 2018-03-20 20:28:06 +0000, , handling slot name encode byte unicode string also change escape unicode character match happens character read file  piperorigin revid 189798628 189798628,,
2470,4204e61663983cc3cb4b3891e35d454a8382655a, Sivachandra Reddy <sivachandra@google.com>, 2018-03-20 17:58:15 +0000, , add special case converting boolean constant marked bug motivation change consider example def return true python byte code sequence function load_global ... return_value ... python byte code sequence load_const ... return_value ... load_global flow doe use whereas load_const flow doe change add support converting boolean constant  piperorigin revid 189769803 189769803,,
2471,3039156c13e245c1752f0787502e6ca48c952f34,artin DeMello <mdemello@google.com>, 2018-03-19 23:02:12 +0000, , add resourcewarning builtins.pytd  piperorigin revid 189656838 189656838,,
2472,3dbdbe58ac666280f993ae2931106a58baf29dcb,artin DeMello <mdemello@google.com>, 2018-03-19 22:00:37 +0000, , shadow typeshed signal python3  piperorigin revid 189647023 189647023,,
2473,bf525d08bc0c7b412c2c2a435d09944102dc900c,artin DeMello <mdemello@google.com>, 2018-03-19 20:20:08 +0000, , fix crash class constructor skipped due maximum_depth  piperorigin revid 189630739 189630739,,
2474,ce9dc6f84b6ff8919b7e14fe329996d1ac3e3233,oogler <noreply@google.com>, 2018-03-19 16:27:22 +0000, , pytype support unicode annotation python compatibility porting code support python python common add various __future__ declaration including __future__ import make python default string literal unicode instead str better approximates python environment unfortunately string annotation used delayed evaluation pytype annotation get error code like class foo object classmethod def makefoo foo ... pytype think annotation unicode report invalid type annotation foo return invalid annotation fix pytype need understand unicode type python able recognize used annotation literal requires fixing namedtuple code actually handle unicode field name instead silently ignoring unparsable constant  piperorigin revid 189593330 189593330,,
2475,e0b48bb378a432edef941698c5373c975c955b83,artin DeMello <mdemello@google.com>, 2018-03-16 21:36:41 +0000, , fix store_deref access cell var free var fix crash use nonlocal also add partial support calling del cellvar  piperorigin revid 189395103 189395103,,
2476,c1fdb6e2b5ee6f3663a55fe0fa370c9bc4301dda,ebecca Chen <rechen@google.com>, 2018-03-15 23:46:10 +0000, , add regression test python  piperorigin revid 189267450 189267450,,
2477,6e73c5eee7f62ef603c139cd705da013f5dc579a,ebecca Chen <rechen@google.com>, 2018-03-15 23:41:43 +0000, , fix test broken typeshed update  piperorigin revid 189266941 189266941,,
2478,fa4bf8a5af1f31169915a5620d7ac46e76e17600,artin DeMello <mdemello@google.com>, 2018-03-15 22:56:54 +0000, , add couple new python3 exception builtins  piperorigin revid 189260513 189260513,,
2479,e022931292d69c7a9c325150d44a2efa3c6d881f,oogler <noreply@google.com>, 2018-03-15 17:16:52 +0000, , add support newtype  piperorigin revid 189204594 189204594,,
2480,8164860a245041d1eb8a0488260dd333d1c9e909,atthias Kramm <kramm@google.com>, 2018-03-15 00:04:04 +0000, , fix path typeshed open source pytype open source version well within typeshed always directory pytype happens via fileset  piperorigin revid 189110217 189110217,,
2481,df49562cb8b2825a475b692e64fda2acde65be17,artin DeMello <mdemello@google.com>, 2018-03-13 23:45:17 +0000, , hack support implicit creation function annotation dicts python 3.6 typically pas around typevars value one instance need store dicts like arg typeparameter function annotated def arg problem typevar typevar  typevar typevar generate opcode would either need store level context creating const key map hold function annotation special case  piperorigin revid 188951479 188951479,,
2482,790dea85d8bf8853d089f0af8443cc431023eff8,artin DeMello <mdemello@google.com>, 2018-03-13 22:04:15 +0000, , fix function argument handling python 3.6 crash typevar create keyword map via dict abstract.dict variable dict __setitem__ name type crash pas typevar __setitem__  piperorigin revid 188936114 188936114,,
2483,be86f5c37821be2f43f9dea4c73c8ed88b56d34e,ebecca Chen <rechen@google.com>, 2018-03-12 17:38:54 +0000, , pytype print full path name error message change pytype print file c.py ... rather file c.py ... error message fulfills feature request fix bug _patch sometimes tried patch wrong filename  piperorigin revid 188742832 188742832,,
2484,9ce475e4173ac25f4823b8090722d6f77fc6fb3a,oogler <noreply@google.com>, 2018-03-09 18:25:05 +0000, , improve parser_ext error handling calling error set trigger assert python3 save restore error instead bailing early exit calling function set line number restore error unconditionally error called object call raise exception wind clobbering exception empty error stored initially causing systemerror error return without exception set tested  piperorigin revid 188501817 188501817,,
2485,165cdf4b0dca9dbcabbe17790569d4bd23e6b65f,artin DeMello <mdemello@google.com>, 2018-03-09 00:21:29 +0000, , fix handle late annotation python 3.6  piperorigin revid 188408602 188408602,,
2486,b0f9585b7c27446aaec955f4df65c793e7649801,eddy Sudol <tsudol@google.com>, 2018-03-09 00:10:18 +0000, , merge base class pyi subclass pyi base class outputted ensures type information lost base class global scope e.g subclass namedtuple  piperorigin revid 188406993 188406993,,
2487,b97bf303f76536e288904dea51f9462eb72eb3b4,ebecca Chen <rechen@google.com>, 2018-03-08 18:27:56 +0000, , replace class type bounded type params necessary change visitor replace occurrence class typevar bound signature match self ... downside replacement visitor sometimes replace thing issue class define __copy__ method since two common way copying instance type self ... ... latter longer analyze correctly upside simple clean change start inferring right signature  latter happened tweak unbreak test realized tweak actually improved signature _replace think change net improvement  piperorigin revid 188351572 188351572,,
2488,adf5e2ec29c44787d105fcb97ea646ac69ca632b,ebecca Chen <rechen@google.com>, 2018-03-08 18:08:04 +0000, , judicious use adjustself force true previously using force true various place problematic want add annotation like def __enter__ self ... since adjustself would remove custom annotation changed uncovered couple incorrect test fixed also deletes unnecessary call noticed test_base  piperorigin revid 188348139 188348139,,
2489,7d363f2050b500979de18fcf5d373242b95a94fc,ebecca Chen <rechen@google.com>, 2018-03-08 00:06:05 +0000, , rollback commit reason rollback break third_party pytype parser_test original change description improve parser_ext error handling exception occurs called assert fire avoid bailing callobject error set    piperorigin revid 188250289 188250289,,
2490,82846f6df11d5f1b89d9a60f3c77496269847c21,artin DeMello <mdemello@google.com>, 2018-03-07 22:34:06 +0000, , fix erroneous stray type comment error function comment  piperorigin revid 188235205 188235205,,
2491,4869e7fcfd807dbe8821c07b4ab0ac6fbe6f2a86,ebecca Chen <rechen@google.com>, 2018-03-06 02:06:38 +0000, , add __hash__ method base class pytd node  piperorigin revid 187954703 187954703,,
2492,d834e6afebc2a93d594098f5b769af8fa7e501c2,oogler <noreply@google.com>, 2018-03-06 01:19:20 +0000, , improve parser_ext error handling exception occurs called assert fire avoid bailing callobject error set   piperorigin revid 187949520 187949520,,
2493,5c518b2e2a26056da2fba23f55505c1fb2e90b9e,ebecca Chen <rechen@google.com>, 2018-03-05 19:11:23 +0000, , test cleanup mostly python related move python test sensible location ability specify python version per test basis tried move test pretty obviously belong separate file example one pair test thing python deletes unnecessary line break test_import add comment test_stdlib supposed along got lost past sync add lint required blank line change asserttrue ... ... assertin ... merged load_pytd_test  piperorigin revid 187893058 187893058,,
2494,fccd077aaa59226a8e256938fb939b1817b5a83a,ebecca Chen <rechen@google.com>, 2018-03-03 01:43:36 +0000, , print optional instead union none error message  piperorigin revid 187693878 187693878,,
2495,38fb5d8fa66abceb15cf022c16e3d752c91a1eed,ebecca Chen <rechen@google.com>, 2018-03-03 01:28:59 +0000, , rollback commit reason rollback apology churn another hour ago discovered handful issue already time really think change applied pure rollback original change description automated rollback commit reason rollback jumped gun submitting change discovered two bug needed fixed release fixed rollback patched confirm everything look reasonable note quite pure rollback original change contained two lint change kept keep pylint happy original change descripti ...   piperorigin revid 187692578 187692578,,
2496,35be9ce5180b761729932070b31d148fbf49497c,artin DeMello <mdemello@google.com>, 2018-03-02 16:51:30 +0000, , refactor search merge function type comment blocks.py place handle variable type comment  piperorigin revid 187625009 187625009,,
2497,b87b4d7db18f976a87c911c39d96b659a23e0c26,ebecca Chen <rechen@google.com>, 2018-03-02 14:24:49 +0000, , rollback commit reason rollback jumped gun submitting change discovered two bug needed fixed release fixed rollback patched confirm everything look reasonable note quite pure rollback original change contained two lint change kept keep pylint happy original change description make strict_none default submit soon reach state pytype look ready release hopefully current state check left none_attr errors.py realized need delete occurrence removing error user bombarded error message invalid directive also make couple minor change suggested gpylint   piperorigin revid 187612510 187612510,,
2498,23f4bd6d3c743e024931095fd15d8a8508d3092b,ebecca Chen <rechen@google.com>, 2018-03-02 07:52:16 +0000, , special case list mapping protocol matching detecting list mapping especially tricky right method far tell compare __getitem__ self int list __getitem__ self mapping  __iter__ self iterator list __iter__ self iterator mapping notice mapped illegal like insert workaround previous code preventing matching callable generated least false positive tried prepare release  piperorigin revid 187587006 187587006,,
2499,0becac1458dd5e666e04bd9d6fe9ba73fbfd547f,ebecca Chen <rechen@google.com>, 2018-03-02 01:08:27 +0000, , remove object annotation first argument getattr  piperorigin revid 187557754 187557754,,
2500,498714f963ff81880d1f952e3f188757d5fb4ab7,artin DeMello <mdemello@google.com>, 2018-03-02 00:47:03 +0000, , allow multiple pytype directive one line  piperorigin revid 187554755 187554755,,
2501,a6538a0d630c9a2f87a758f53a8fa4032d08c425,ebecca Chen <rechen@google.com>, 2018-03-01 23:46:58 +0000, , make strict_none default submit soon reach state pytype look ready release hopefully current state check left none_attr errors.py realized need delete occurrence removing error user bombarded error message invalid directive also make couple minor change suggested gpylint  piperorigin revid 187546313 187546313,,
2502,3f48a410055b0980f69e46447cc9da4c358c682b,oogler <noreply@google.com>, 2018-03-01 21:58:58 +0000, , use python3 compatible import  piperorigin revid 187529522 187529522,,
2503,69c105e26203513d34577403c5a74d49c0f59f2d,ebecca Chen <rechen@google.com>, 2018-03-01 21:46:46 +0000, , change handle non parameterized tuples dicts turn pyi file shortcut ... indicate args pytd tuple used varargs annotation  piperorigin revid 187527620 187527620,,
2504,734a783848e1aa10b92b5d723e7ccde6d4981dbd,oogler <noreply@google.com>, 2018-03-01 21:26:17 +0000, , make parser_ext build python3 e.g  piperorigin revid 187524585 187524585,,
2505,16e0c829e183d4cf26f07749bd349172e7fa3375,eddy Sudol <tsudol@google.com>, 2018-03-01 20:04:55 +0000, , return varargs kwargs type extra argument allows signedfunctions type check varargs kwargs  piperorigin revid 187512934 187512934,,
2506,046fc40d0d63ba7838b3795f3492cb547886bfb7,ebecca Chen <rechen@google.com>, 2018-02-28 19:00:33 +0000, , change result type self __init__ imperfect solution work __init__ mean splitting longer work thing like def __init__ self type self foo self.x ... else self.x ... however extending solution method __init__ would make code complicated since would longer able take advantage existing callself_stack attribute see way keep splitting  piperorigin revid 187350630 187350630,,
2507,6dd31d9ab23c3e8e21521dd26679df4f3b51ab47,ebecca Chen <rechen@google.com>, 2018-02-28 18:41:10 +0000, , clean todos pytype code base applies todos easy deletes one date update description one squeegee  piperorigin revid 187346577 187346577,,
2508,c831090914a96c02083cdac8edb644ba4bf769bd,eddy Sudol <tsudol@google.com>, 2018-02-28 17:19:52 +0000, , enable type checking args kwargs currently work explicitly pas starargs starstarargs function e.g explicitly passing kwargs dict  piperorigin revid 187334211 187334211,,
2509,477e8abe5f0ead02407dbecfe8be4a26df79fa30,ebecca Chen <rechen@google.com>, 2018-02-27 21:52:52 +0000, , fix crash happens output.py convert instance parameter considered one child appear view need set view none converting instance pytd type  piperorigin revid 187226930 187226930,,
2510,9dbc20007fc8e0e19e7d494661440fd87d405430,ebecca Chen <rechen@google.com>, 2018-02-27 18:16:24 +0000, , relax expected type field arg  piperorigin revid 187193441 187193441,,
2511,2868facee79ee62ba1a1b65d410d1e3cb492a218,ebecca Chen <rechen@google.com>, 2018-02-26 22:27:42 +0000, , fix attribute error message swallow option  piperorigin revid 187080989 187080989,,
2512,2f44d613443d6dba5e410e689f4c1e5c7e8a9775,ebecca Chen <rechen@google.com>, 2018-02-23 18:39:44 +0000, , handle range index  piperorigin revid 186789913 186789913,,
2513,44e625e3a4a7483e6d261c5f862d780dd56fac9c,ebecca Chen <rechen@google.com>, 2018-02-23 02:51:19 +0000, , improve pyi output descriptor type descriptor attribute return type descriptor __get__ method similar property type return type fget  piperorigin revid 186710941 186710941,,
2514,8ba20208bc05289fb3a2626d929c5705df639f3e,ebecca Chen <rechen@google.com>, 2018-02-23 00:46:06 +0000, , add attribute  piperorigin revid 186696263 186696263,,
2515,12ab60b78a856ecd15bd9f7cee08aa5a3c6df2e4,eddy Sudol <tsudol@google.com>, 2018-02-22 23:29:55 +0000, , add __getitem__ __getslice__ slot abstract.list also change convert.py act like isinstance i.e take tuple type  piperorigin revid 186684588 186684588,,
2516,992ac9be4266808acac115f4d3270ac08dea67fb,artin DeMello <mdemello@google.com>, 2018-02-22 23:22:44 +0000, , type comment attached line multiple opcodes select last store_ opcode attach  piperorigin revid 186683467 186683467,,
2517,2b53d64bfe7a43eae5469bed9555996964c1f033,ebecca Chen <rechen@google.com>, 2018-02-22 07:32:47 +0000, , fix corner case could cause infinite recursion class definition like class foo contextmanager foo iterable byte ... contextmanager iterable share type parameter give parameter value using meant evaluated parameter value overwriting foo tried instantiate contextmanager foo crashing pytype instead overwrite dict value directly explicitly using type parameter dict complain replacing variable usually bad idea  piperorigin revid 186573240 186573240,,
2518,6bbdd036f64c48d06bd94e5cfd9d7edc9c4343ef,ebecca Chen <rechen@google.com>, 2018-02-21 21:36:18 +0000, , handle instance dict precisely  piperorigin revid 186511738 186511738,,
2519,2bd67eed228f506dfea805d71a226ac9fbc9bb0e,ebecca Chen <rechen@google.com>, 2018-02-20 20:52:16 +0000, , revert change caused performance regression change caused kessel run number jump 250s 350s  piperorigin revid 186347785 186347785,,
2520,01f0f6a7df2ca46bad8cb9c43a6d3d462efc4860,artin DeMello <mdemello@google.com>, 2018-02-16 23:15:39 +0000, , define common base class special builtin class  piperorigin revid 186053657 186053657,,
2521,6e82bbd95c0cd135e2348f32a4729b27992745e6,eddy Sudol <tsudol@google.com>, 2018-02-16 19:57:44 +0000, , add cfg node storing value store_ bytecodes  piperorigin revid 186026902 186026902,,
2522,7e71aa31a5ad75ea2b855c1c2ededd42aa00994e,ebecca Chen <rechen@google.com>, 2018-02-16 19:56:44 +0000, , add bare bone support typing.classvar add enough support pytype handle classvar gracefully report supported yet usage classvar python file convert classvar pyi file inner type  piperorigin revid 186026782 186026782,,
2523,b6a5ff547fcbd935771aad7baf4638af773696bd,ebecca Chen <rechen@google.com>, 2018-02-16 18:53:49 +0000, , make attribute checking stricter around looking _get_iter noticed handle attribute error strictly normal attribute lookup change fix  piperorigin revid 186017505 186017505,,
2524,33929b9852c0b0892bff5a6768a28be6cf7e4007,ebecca Chen <rechen@google.com>, 2018-02-16 18:49:24 +0000, , fix bug implementation get_iter fetching __iter__ object getting object class  piperorigin revid 186016834 186016834,,
2525,6571daa06cea8a1bd0cf89fce627619a60cb8cb3,ebecca Chen <rechen@google.com>, 2018-02-16 00:22:04 +0000, , check self matching protocol method failed match pytd class parameterized protocol would e.g. match def __iter__ self foo ...  def __iter__ self iterable ... pytype would try enforce contravariance self argument fixing bug flushed another caused think list satisfies mapping protocol added check prevent  piperorigin revid 185920569 185920569,,
2526,92a2a4390c4d7e1d7b433dd94064d9d43bf66613,atthias Kramm <kramm@google.com>, 2018-02-15 23:29:48 +0000, , remove special handling object matcher.py  piperorigin revid 185912150 185912150,,
2527,4346106707ccd61c1e1fc8d7417b70c5e8e0b733,artin DeMello <mdemello@google.com>, 2018-02-15 23:17:33 +0000, , deque fix add initializer typing.deque mark generic  piperorigin revid 185910070 185910070,,
2528,0dbc1f7a5dcd59395d7b42a9f93ea35193da80a0,ebecca Chen <rechen@google.com>, 2018-02-15 22:03:22 +0000, , add attribute always get one value matched getting little silly  piperorigin revid 185896609 185896609,,
2529,613db58365f34b2308f32e20fb89dc65b22e2910,artin DeMello <mdemello@google.com>, 2018-02-15 21:40:17 +0000, , fix descriptor support super add implementation __get__ delegate superclass __get__ remove default implementation super .__set__ raise attribute error instead  piperorigin revid 185892905 185892905,,
2530,0cb10c1fef728aaa5f0cd78676ec2b9f1056de3d,ebecca Chen <rechen@google.com>, 2018-02-15 20:00:27 +0000, , fix pytype handling list.extend empty two bug contained two definition list.extend pytype know one use matched empty container type parameter mutated parameter unsolvable instead empty  piperorigin revid 185877048 185877048,,
2531,801101262fbe846935e41db276224417889cf0d6,atthias Kramm <kramm@google.com>, 2018-02-15 13:56:41 +0000, , use object default type parameter  piperorigin revid 185826571 185826571,,
2532,42287ce295cf405417b812d8e57c07f927ae837b,atthias Kramm <kramm@google.com>, 2018-02-14 22:24:31 +0000, , careful matching type parameter  piperorigin revid 185744669 185744669,,
2533,5dd526d9711943cd5fc03a961a0764d529fc4ced,ebecca Chen <rechen@google.com>, 2018-02-14 02:33:29 +0000, , unbreak pytype test  piperorigin revid 185622116 185622116,,
2534,d125df6686c9c0900ef60a6d7084d95db0c6fe5b,artin DeMello <mdemello@google.com>, 2018-02-14 00:21:18 +0000, , rollback commit reason rollback temporarily roll back releasing new version pytype original change description turn strict_none default false positive rate strict_none latest sample pytype found real user error false positive five already knew   piperorigin revid 185606624 185606624,,
2535,34f4782f9c5721542dde10650d9873381bf03380,ebecca Chen <rechen@google.com>, 2018-02-13 20:06:55 +0000, , check wrong ellipsis annotation container parameter previously tried permissive possible either converting ... stripping end parameter list however variation cause runtime error python make pytype error well  piperorigin revid 185567014 185567014,,
2536,e1aa5d5d989d6c9e8a7d43a0cf738c21c410e7a0,ebecca Chen <rechen@google.com>, 2018-02-13 19:24:09 +0000, , handle python bytestrings properly loadmarshal.py create str subclass bytespy3 mark python bytestrings teach convert.py convert bytespy3 instance also change test python version specified check type comparing string since assertequal treat foo foo equal change catch bug test tested input declared different expected output test vs. test change byte foo utf foo python test used former bug  piperorigin revid 185560192 185560192,,
2537,2124406422d9b4d2afde97e2d44c43c734c492ac,artin DeMello <mdemello@google.com>, 2018-02-13 01:16:24 +0000, , add support decorator also fix bug class abstract property marked abstract  piperorigin revid 185461122 185461122,,
2538,b13feaae0147d7c6da74bb04fe79025721ffcdf6,eddy Sudol <tsudol@google.com>, 2018-02-13 00:03:12 +0000, , use local namespace evaluating type annotation comment  piperorigin revid 185450801 185450801,,
2539,cee0f8401bc73964c4523350abcdb616f0183e86,ebecca Chen <rechen@google.com>, 2018-02-12 19:48:34 +0000, , fix definition str.__new__ python version  piperorigin revid 185410956 185410956,,
2540,93697620fe756f7a384e10b5a493edf49d89047b,ebecca Chen <rechen@google.com>, 2018-02-09 23:05:38 +0000, , move collection test test_python36 test_stdlib  piperorigin revid 185198808 185198808,,
2541,02cdae31abc101eb2e444cd38e85308be8a3d2ee,ebecca Chen <rechen@google.com>, 2018-02-09 22:53:22 +0000, , add python_version option test add python_version optional argument test method move test test_python36 test_exceptions verify argument work  piperorigin revid 185197125 185197125,,
2542,817364cb202fd162b1737fc24c0c41a13ff345d5,artin DeMello <mdemello@google.com>, 2018-02-09 22:48:55 +0000, , make sure pythonpath empty generating exporting builtins  piperorigin revid 185196533 185196533,,
2543,3b9186472b8cae3511e11ef385e9be7e3c076923,ebecca Chen <rechen@google.com>, 2018-02-09 22:37:30 +0000, , refactor code around creation pytd loader adding python_version option test change contains refactorings make addition possible move create_loader associated helper load_pytd set module_name right value config.py instead changing check infer_types set test python_exe attribute setupclass subclass override python_version loader creation test_base new _createloader method get rid unused version argument  piperorigin revid 185194943 185194943,,
2544,5bef1b114917ef458b5c282b16036ba153cc259a,atthias Kramm <kramm@google.com>, 2018-02-09 21:24:52 +0000, , fix ambiguous parameter classmethod  piperorigin revid 185184082 185184082,,
2545,0197629214c878974d47faa5591eaea6eecbb3e0,atthias Kramm <kramm@google.com>, 2018-02-09 19:27:12 +0000, , crash matching method generic class callable  piperorigin revid 185168504 185168504,,
2546,63bcc2d3a4523aa7424123f6e847a08f661d057f,ebecca Chen <rechen@google.com>, 2018-02-09 07:26:38 +0000, , fix behavior involving dict view dict_ key item value inherit appropriate mappingview subclass python iter view key item value exist regular key item value method return view  piperorigin revid 185103640 185103640,,
2547,ad6fdb88db8b7d68dc6bb36d5c40a1238d08d47d,ebecca Chen <rechen@google.com>, 2018-02-09 07:22:36 +0000, , alias class corresponding one typing.pytd  piperorigin revid 185103457 185103457,,
2548,eb4432e147f7b0ddf03e33b8e964b1a3078476c4,artin DeMello <mdemello@google.com>, 2018-02-09 00:09:30 +0000, , pretty print cfg tree list binding node useful trying debug solver issue variable  piperorigin revid 185068389 185068389,,
2549,e06ef8868170317c1880cb4f5e70f07950520eab,ebecca Chen <rechen@google.com>, 2018-02-08 22:54:03 +0000, , add function parameter information init_class instance cache add current function first opcode current parameter name key used init_class identical looking parameter share instance also get rid analyze.py create_argument method argument created overwritten anyway  piperorigin revid 185056571 185056571,,
2550,06bfd1d1c78c040674a3188c23ee36fb4b535ccf,ebecca Chen <rechen@google.com>, 2018-02-08 19:29:06 +0000, , make test file consistent using snake_case vs. camelcase care used small pet peeve mine mix file occurs switch everything style common file  piperorigin revid 185024797 185024797,,
2551,4d5b78c6df13b373b23cf36d605927155430a2d5,eddy Sudol <tsudol@google.com>, 2018-02-08 17:50:48 +0000, , prevent container typevars passed function raise error value containing typevar formal value passed function  piperorigin revid 185009131 185009131,,
2552,7d2b284369e57a0ed80ec4c6aa4cd9e62d8914cc,ebecca Chen <rechen@google.com>, 2018-02-07 23:53:50 +0000, , output generator none none instead generator nothing nothing python send return type non none checked support send return make sense worry type generate case yet  piperorigin revid 184910368 184910368,,
2553,fa7d0bb9a04ebf28d0fbee598323bc5dd23979e9,artin DeMello <mdemello@google.com>, 2018-02-07 23:51:41 +0000, , fix extended arg handling extended_arg opcode marked start opcode applies   piperorigin revid 184910081 184910081,,
2554,01d8f3a565c8f4c6bf77c730c47da6ba6febc75e,atthias Kramm <kramm@google.com>, 2018-02-07 23:18:14 +0000, , expand variable option directly mro chain pick arbitrary deterministic element instead  piperorigin revid 184905025 184905025,,
2555,8b3474492090259a0d73c3f7338d64dad0165bf4,ebecca Chen <rechen@google.com>, 2018-02-07 22:47:49 +0000, , confuse module alias class name used asts parsed pyi file contain module alias ast inferred pytype latter case python file contains foo import bar class foo ... pytype put foo module map even though module foo namespace pytype confuses module foo class foo avoid problem introducing module alias actually inside alias name fully qualified mean ast parsed  piperorigin revid 184899701 184899701,,
2556,939c6de2fbfc4c8cac16438e9781acff609d8eb8,ebecca Chen <rechen@google.com>, 2018-02-07 22:40:48 +0000, , improve output.py convert type parameter value type parameter value unsolvable output.py check class see specific type  piperorigin revid 184898522 184898522,,
2557,cacb7fe668f485d087810d55fe41fb733a2f9ce1,ebecca Chen <rechen@google.com>, 2018-02-07 01:57:12 +0000, , remove full_names option option always set true except test code massage test code work full_names true remove option  piperorigin revid 184770734 184770734,,
2558,a80578d2786a49bdeed2f64ff59b1292d2d9f111,artin DeMello <mdemello@google.com>, 2018-02-06 23:07:12 +0000, , inherit superclass  piperorigin revid 184747476 184747476,,
2559,d8a40d3f63e95763270631e160365347bdd7a757,artin DeMello <mdemello@google.com>, 2018-02-06 22:29:30 +0000, , fix setup.py path package_data need relative pytype  piperorigin revid 184740760 184740760,,
2560,8c367076f13074e29f847104e5f2765d1891436f,ebecca Chen <rechen@google.com>, 2018-02-06 21:03:54 +0000, , delete make private first method longer necessary already initialize unbound type parameter empty variable second method need public since __init__ uninitialized type parameter left use method  piperorigin revid 184726056 184726056,,
2561,6d5e9196299c9bca002f1639c11bcc9bfdaa1024,artin DeMello <mdemello@google.com>, 2018-02-06 19:32:28 +0000, , add support  piperorigin revid 184712540 184712540,,
2562,e9dae2fd56097626d8871f29fa45726a262de14f,ebecca Chen <rechen@google.com>, 2018-02-06 19:13:37 +0000, , always initialize unbound type parameter previous isinstance check workaround remove isinstance check unbound params always initialized instead bunch place since param previously initialized remove call simply set type parameter empty variable initializes unspecified type parameter convert.py along type parameter initially set empty variable get nothing parameter intead forget initialization change test reflect infer generator nothing nothing instead generator bunch place new inference correct  piperorigin revid 184709327 184709327,,
2563,3aa76e6164869fc5eaafad0d2bec6350715f14d7,ebecca Chen <rechen@google.com>, 2018-02-06 19:11:05 +0000, , handle output.py masking problem initializing type parameter upper bound handling bound converting pytd type  piperorigin revid 184708938 184708938,,
2564,672638c943f939bc1e6ddc173410657811f0271f,ebecca Chen <rechen@google.com>, 2018-02-06 19:02:25 +0000, , fix bug error message printing found trying change abstract.list initializes type parameter  lst str lst int printed str int deceptively look correct actually position aware __setitem__ list happening adding int binding pyval entry also bug fixed upcoming change best pytype case instance list type int str  piperorigin revid 184707359 184707359,,
2565,f0f143e8a5bd7ffb7dec0c3411a869575b21f446,artin DeMello <mdemello@google.com>, 2018-02-06 18:57:31 +0000, , handle type annotation assignment cell variable cell variable compile store_deref rather store_name  piperorigin revid 184706462 184706462,,
2566,01ca4ef96d44d520d06e34e388f71a39b1e6647b,ebecca Chen <rechen@google.com>, 2018-02-06 17:39:21 +0000, , delete bit obsolete code convert.py isinstance pytd.class cls.template ... elif isinstance pytd.class ... cls.template ... call unnecessary since call one method deleted  piperorigin revid 184693543 184693543,,
2567,4394cffee2736cc8e270782acd09f4092422a3ca,artin DeMello <mdemello@google.com>, 2018-02-06 00:07:56 +0000, , fix path search pytd file setup.py  piperorigin revid 184601966 184601966,,
2568,284f4f29d6f2c1c816c7fd6a3ab2c0e5b00bfa2a,ebecca Chen <rechen@google.com>, 2018-02-05 19:51:25 +0000, , use handle edge case namedtuple field type pull part new utility function use namedtuple field type tweak assertion error triggered attribute.py print actual class make future debugging easier pytd.print instead test check function signature without type checking entire namedtuple definition well  piperorigin revid 184562716 184562716,,
2569,d66daf988a45c55eaf03eee9379fb358a1b991ac,ebecca Chen <rechen@google.com>, 2018-02-03 19:36:03 +0000, , clean skipped test unskips test unskipped move python test test_python3 deletes test old non protocol inference  piperorigin revid 184404479 184404479,,
2570,7a04b2ea514731d7e0b479e9a8eaceaf4b540383,ebecca Chen <rechen@google.com>, 2018-02-02 17:54:57 +0000, , take non method class attribute account protocol matching list.__hash__ defined python constant value none pytd file well also update protocol matching handle constant  piperorigin revid 184295798 184295798,,
2571,cc7494af491cc20ead9fc2274238e637c0a27783,ebastian Steenbuck <steenbuck@google.com>, 2018-02-02 14:47:51 +0000, , remove non determinism pytypes saving file functionality  mtime argument optional numeric timestamp written stream compressing gzip compressed stream required contain timestamp omitted none current time used module ignores timestamp decompressing however program gunzip make use format timestamp return value time.time st_mtime attribute object returned os.stat pass mtime parameter old stable value use gzip unzip file value therefore never read problem used three run google data project devtools blaze devtools python blaze pytype check fix work actual test used patch make behave like define pytype dev would passed also unknown commit patched  piperorigin revid 184278615 184278615,,
2572,0100595d6b12edaae56c8967169f6f78a80021d2,ebecca Chen <rechen@google.com>, 2018-02-02 00:06:16 +0000, , make attribute error message little nicer attribute foo none pretty unhelpful obvious attribute name type since common none one among multiple option option helpful printing full type attribute foo none optional also fix small bug used attribute_error instead logging attribute error __iter__ renames attribute_error make bug likely future  piperorigin revid 184210218 184210218,,
2573,4ecff01f442b6118333ba14d4938e2407c470503,ebecca Chen <rechen@google.com>, 2018-02-02 00:01:31 +0000, , turn strict_none default false positive rate strict_none latest sample pytype found real user error false positive five already knew  piperorigin revid 184209450 184209450,,
2574,7f30379fcd8943645b445997b0d0f8c1ae50783e,eddy Sudol <tsudol@google.com>, 2018-02-01 23:44:21 +0000, , add support  piperorigin revid 184207070 184207070,,
2575,503fe9857e74183d11c87a290bd88aaf1399ba36,ebecca Chen <rechen@google.com>, 2018-02-01 23:34:56 +0000, , rollback commit reason rollback try except needed typeshed original change description remove try except around tracemalloc import metrics.py   piperorigin revid 184205559 184205559,,
2576,7781feb36226e884cc1b003edad8238bd81c3295,eddy Sudol <tsudol@google.com>, 2018-01-31 20:35:08 +0000, , fix unnecessary typing.any import kwargs annotated also remove extra pytd.print call main.py  piperorigin revid 184030666 184030666,,
2577,4f6c5d9c545447522853ed10180808b95c25cdca,ebecca Chen <rechen@google.com>, 2018-01-31 20:26:27 +0000, , remove redundant __len__ method  piperorigin revid 184029667 184029667,,
2578,3ec374e108fc5f63ec9a9596d741d41fe6b6a9a2,ebecca Chen <rechen@google.com>, 2018-01-31 20:21:46 +0000, , add __setitem__ bytearrays mutable mean __setitem__ python __setslice__ also fix couple bug memoryview doe version check defining __setslice__ mutablesequence make definition __setslice__ little precise corrects inconsistent indentation typing.pytd  piperorigin revid 184029095 184029095,,
2579,872c92f0ce1c7c5b9183ee3db693aa1afe86b81a,artin DeMello <mdemello@google.com>, 2018-01-31 20:16:10 +0000, , mark namedtypes imported external module prefix current module name  piperorigin revid 184028265 184028265,,
2580,6c3af4fd0fdbbdeec2c4a675a7aba747e5efe2af,ebecca Chen <rechen@google.com>, 2018-01-31 20:01:28 +0000, , remove buffer exist python  piperorigin revid 184025812 184025812,,
2581,fb1c7c4268703c916ac00aab831d2dd556347888,ebecca Chen <rechen@google.com>, 2018-01-30 21:55:28 +0000, , add pop slot abstract.dict splitting work pop  piperorigin revid 183886465 183886465,,
2582,bf5af02bf9624b217068314cfdd2f0d3b3b13fe0,ebecca Chen <rechen@google.com>, 2018-01-30 19:47:53 +0000, , add __len__ various builtin class sized.__len__ abstract method need add concrete __len__ instantiable class otherwise possible use multiple inheritance trick pytype thinking subclass builtins instantiable also add __getitem__ dict reason remove iterable parent buffer buffer implement __getitem__ __iter__ confuses pytype  piperorigin revid 183867061 183867061,,
2583,082a67f47a8b7a65397bf763bf68bc49ac8d2a46,eddy Sudol <tsudol@google.com>, 2018-01-30 17:38:28 +0000, , add class needed  piperorigin revid 183844463 183844463,,
2584,7b78db0d7ae15f4a91277b72be1c14e2d0ff673d,artin DeMello <mdemello@google.com>, 2018-01-30 00:05:57 +0000, , fix shift reduce conflict around parsing tuple literal pyi file  piperorigin revid 183744361 183744361,,
2585,6f2473d71a247062abe5d0b3652104923993fa32,eddy Sudol <tsudol@google.com>, 2018-01-29 22:43:11 +0000, , fix supposed tuples param_names kwonly  piperorigin revid 183730677 183730677,,
2586,85e43442940e6d236d2b6ed655181c0fd44850d9,oogler <noreply@google.com>, 2018-01-29 22:32:19 +0000, , cleanup lexer fix usage deprecated bison option fix missing semicolon masked bison 2.x show building bison  piperorigin revid 183728642 183728642,,
2587,9fb9d2e890c4dba8796916ac252867610eb14ff9,ebecca Chen <rechen@google.com>, 2018-01-29 19:25:36 +0000, , remove try except around tracemalloc import metrics.py  piperorigin revid 183697278 183697278,,
2588,34ffdb4ce9eed35faff1dad4e804d80664bf4c5f,ebecca Chen <rechen@google.com>, 2018-01-29 18:26:31 +0000, , delete pytd explain.py code unused outdated  piperorigin revid 183686462 183686462,,
2589,42ce25c650f090e6fd64c748586e989a7c06fa1c,artin DeMello <mdemello@google.com>, 2018-01-27 00:29:49 +0000, , add connectionerror hierarchy builtins.pytd used typeshed http library  piperorigin revid 183464058 183464058,,
2590,3d4e2a51de5b7ac54e41d52ce2615542cbafd700,artin DeMello <mdemello@google.com>, 2018-01-26 23:45:11 +0000, ," add typeshed third_party 2,3 stdlib search path  piperorigin revid 183457602 183457602",,
2591,c53bf0c1797b5d3ead98d013cc91e9ee5b0d25f1,ebecca Chen <rechen@google.com>, 2018-01-26 21:40:57 +0000, , add sized protocol abstractset make pytype stop complaining __len__ present set also remove bunch redundant __len__ definition another error seeing people annotating parameter iterable calling len look like user error iterable actually sized perhaps redirecting user collection  piperorigin revid 183438008 183438008,,
2592,43210c9a6b4e99c5bb27421af2349538a41512b4,artin DeMello <mdemello@google.com>, 2018-01-26 00:34:52 +0000, , add constructor name params let easily create minimal signature error reporting  piperorigin revid 183311291 183311291,,
2593,b4742de888ad59e184cf0ed86aa94ef1b71c41c6,artin DeMello <mdemello@google.com>, 2018-01-26 00:28:31 +0000, , add support decorator add pyi file typeshed third_party six add overlay defer checking class abstract method inheriting abcmeta class decorator applied  piperorigin revid 183310501 183310501,,
2594,5f468fdb31b1916c9505fc5abd7f4bec00195176,artin DeMello <mdemello@google.com>, 2018-01-26 00:09:30 +0000, , friendlier error message builtin function replaces function __builtin__.foo built function foo  piperorigin revid 183307911 183307911,,
2595,742ce759deee8eda6011ece882b3af106f1470ba,artin DeMello <mdemello@google.com>, 2018-01-25 21:15:17 +0000, , add support type tuple literal pyi file example typeshed string_types str unicode parse string_types ... type tuple  piperorigin revid 183278996 183278996,,
2596,afc2146647487f37bb84258dc46d309920551a4f,ebecca Chen <rechen@google.com>, 2018-01-25 17:44:09 +0000, , restrict type object pytype accepts len  piperorigin revid 183251698 183251698,,
2597,7a042606b97036d7c7360faefa963f3b79b6610c,ebecca Chen <rechen@google.com>, 2018-01-25 01:34:27 +0000, , check noreturn return type annotation original motivation adding check causing lot trouble  piperorigin revid 183169664 183169664,,
2598,1dbf7f3d2dd8aab08d32589be16448c10501bd4e,ebecca Chen <rechen@google.com>, 2018-01-24 21:28:01 +0000, , isinstance check accessing is_abstract attribute  piperorigin revid 183131897 183131897,,
2599,ec41271cd7382afb931014fd09d2b42dc3ae5bf0,artin DeMello <mdemello@google.com>, 2018-01-24 19:44:30 +0000, , fix corner case pyi import unused import foo  piperorigin revid 183117600 183117600,,
2600,aae1cd94839f6b8b14dbb5cac6b93ca589c2af7a,ebecca Chen <rechen@google.com>, 2018-01-24 18:16:43 +0000, , discard concrete value module constant analyzing function  piperorigin revid 183102615 183102615,,
2601,550e8183feaee135648dc71da6a0eb7d1fc99847,ebecca Chen <rechen@google.com>, 2018-01-24 05:33:15 +0000, , cleanup use instead mkdtemp nicer generates new temporary directory every time meaning need worry directory test  piperorigin revid 183038217 183038217,,
2602,3251262cdd04f2b88eb944a41830b0da06dc2de1,ebecca Chen <rechen@google.com>, 2018-01-24 05:20:35 +0000, , filtering attribute error take account current function  piperorigin revid 183037463 183037463,,
2603,6a1fea578a3f0549d3d8369dba7bec4001f5aaa0,artin DeMello <mdemello@google.com>, 2018-01-23 22:04:04 +0000, , add exec builtins.pytd  piperorigin revid 182988638 182988638,,
2604,b0b6a27a071a93830f93c37cbfb06a19a7178f68,ebecca Chen <rechen@google.com>, 2018-01-23 18:31:33 +0000, , give abstract method default return value  piperorigin revid 182955168 182955168,,
2605,4f7ea125cb9cbb47a409e422a6bf1a582af9fd51,ebecca Chen <rechen@google.com>, 2018-01-23 03:36:03 +0000, , cleanup use infer inferwitherrors errorlog empty  piperorigin revid 182875135 182875135,,
2606,3f4871902b3abfc61ca80456abefdc17afec0f55,ebecca Chen <rechen@google.com>, 2018-01-22 18:44:08 +0000, , remove strict_none check fix bug arises due interaction late initialization noreturn class foo object def __init__ self self.foo none def get_foo self int self.foo return else raise valueerror without change pytype report bad return type get_foo think return unreachable change main_test necessary real attribute error pytree.py hidden similar late initialization pattern  piperorigin revid 182801442 182801442,,
2607,eec320fcdc12a922bd9f5f55c2e48095349427c3,artin DeMello <mdemello@google.com>, 2018-01-19 23:19:43 +0000, , add support module alias  piperorigin revid 182596944 182596944,,
2608,1798af07f9f748d21ed07bf848ad3e02f541137f,atthias Kramm <kramm@google.com>, 2018-01-19 21:30:08 +0000, , add timeout option pytype  piperorigin revid 182580462 182580462,,
2609,b490159024c33eb7c9f05509c749cb2f29edd7db,ebecca Chen <rechen@google.com>, 2018-01-19 19:13:13 +0000, , report bad return type noreturn one among many option previously put return type checking noreturn immediately exception raised right frame traceback unintentional side effect report bad return type even also found acceptable return value instead save stack information checking know noreturn option  piperorigin revid 182560984 182560984,,
2610,c03455d4e4706e2bc1b228917353da07069f6c2c,ebecca Chen <rechen@google.com>, 2018-01-19 00:02:55 +0000, , make error return function annotated return type move logic reusable function check return value applicable replaces return annotation function used various function call opcodes deletes test class foo object def __new__ foo assert foo instantiable added test saw pattern pytree.py test data thought might want support thought anyone want non instantiable base class use abc.abcmeta  piperorigin revid 182453578 182453578,,
2611,377c92c80a0efc3b45e135d254b2b47854b54447,ebecca Chen <rechen@google.com>, 2018-01-18 01:46:25 +0000, , print noreturn instead nothing bad return type make error message slightly prettier also add unrelated noreturn test  piperorigin revid 182297947 182297947,,
2612,28cb48633ab0500376836c6b7c578d3022a964bb,ebecca Chen <rechen@google.com>, 2018-01-17 23:11:32 +0000, , partially support typing.noreturn adding noreturn allows pytype type check following ... type none    otherwise pytype doe realize none last line  add noreturn typing.pytd infers type noreturn function always raise exception set state.exception true function call another return get type checking noreturn free part noreturn implement verifying noreturn appear place return type function  piperorigin revid 182277755 182277755,,
2613,465022225ab6d26ac164f0d67cf139c5ad0634a6,ebecca Chen <rechen@google.com>, 2018-01-17 21:04:53 +0000, , remove favor abstract.empty cleanup long overdue also keep number nothing increasing adding concept noreturn  piperorigin revid 182257517 182257517,,
2614,fc0985b939451d19fcba96aef4f379a676f445ff,ebecca Chen <rechen@google.com>, 2018-01-17 17:22:55 +0000, , cleanup move visitors.py pytype pytd parse pytype pytd bothered ever since saw refactoring doc also fix linting issue  piperorigin revid 182224802 182224802,,
2615,edf3f07466420677fe0cf1a94aaa9f52804fd045,ebecca Chen <rechen@google.com>, 2018-01-16 19:41:45 +0000, , make test naming test_flow.py consistent noticed test snake_case camelcase changed snake case  piperorigin revid 182087730 182087730,,
2616,1e138fb3fccc2a80a86871d578e4be90812e8b85,ebecca Chen <rechen@google.com>, 2018-01-16 18:22:42 +0000, , get rid exceptions.py still use raised two place abstract.py raised using failed assert vm.py raised whenever argument raise encountered look like intention catch raise none type error actually happened state.exception state.why set error caught run_instruction rather set raise_varargs removing let delete exceptions.py  piperorigin revid 182075142 182075142,,
2617,c587d33248f479517cbb26a1a42f40b79458ad1c,ebecca Chen <rechen@google.com>, 2018-01-16 17:46:45 +0000, , get rid copyvarapprox use instead honest know copyvarapprox longer necessary maybe solver rewrite test used require happy switching also fix simplifies thing  piperorigin revid 182069178 182069178,,
2618,8aaa96dfdba2427ba80c442d4b1eb0e323fd271f,ebecca Chen <rechen@google.com>, 2018-01-13 00:30:08 +0000, , get rid unused method  piperorigin revid 181808372 181808372,,
2619,339eef27acb790be74499eb81436819620714a37,atthias Kramm <kramm@google.com>, 2018-01-13 00:19:29 +0000, , fix splitting bug assumed subclass int never equal instance  piperorigin revid 181807361 181807361,,
2620,bcc8f85bec7f52bed6fdac32269af2d04ca83b63,ebecca Chen <rechen@google.com>, 2018-01-12 23:05:46 +0000, , filter container element carefully inference  piperorigin revid 181798775 181798775,,
2621,c7b0ee82125c6383f760fd79dce3f8b441e9c758,atthias Kramm <kramm@google.com>, 2018-01-12 20:29:57 +0000, , fix assertionerror  piperorigin revid 181777838 181777838,,
2622,abf80986c803bff456b2569eefa8b79eab54d863,ebecca Chen <rechen@google.com>, 2018-01-12 18:29:49 +0000, , changing none keep none binding origin  piperorigin revid 181761056 181761056,,
2623,469769739f67dbcd89454a548edc4b4537bc64c0,ebecca Chen <rechen@google.com>, 2018-01-12 18:29:38 +0000, , fix moe strip_line leak_test complaining presumably directive inside string  piperorigin revid 181761035 181761035,,
2624,ebc5795bebbfe40c9afc09da180d503f3df71f20,atthias Kramm <kramm@google.com>, 2018-01-12 17:11:02 +0000, , make instance class baseclass match everything type_match.py repurposed old nominal matcher dead reason stick broken logic also includes following change add parse pyi flag pytype replaces convert pickle flag removed commit form still need typeshed testing  piperorigin revid 181751695 181751695,,
2625,d5d47b523b94d86e6488cd3996d741aa8a7adc76,ebecca Chen <rechen@google.com>, 2018-01-12 00:09:31 +0000, , reuse property return value possible  piperorigin revid 181676501 181676501,,
2626,65149f2ce73bdf561f9eed9057748fc8860271c3,atthias Kramm <kramm@google.com>, 2018-01-11 15:51:03 -0800, , add parse pyi command line flag,,
2627,33d67eb008076ea120e00860f4037afaa356aee7,artin DeMello <mdemello@google.com>, 2018-01-10 22:11:42 +0000, , add module section  piperorigin revid 181515293 181515293,,
2628,2be5a6b72c327acc97c9a1a89dc05d4b51cf1d0c,atthias Kramm <kramm@google.com>, 2018-01-10 21:50:10 +0000, , remove reference unicode python builtins stdlib  piperorigin revid 181511987 181511987,,
2629,aaf7a69ce6dcc4b27485cd7181060a732e4e5f22,atthias Kramm <kramm@google.com>, 2018-01-10 21:49:39 +0000, , remove unicode python version also make annotation str byte precise  piperorigin revid 181511910 181511910,,
2630,908533de4eebafadbfd902a720bc5b5b6c5203bd,artin DeMello <mdemello@google.com>, 2018-01-09 20:35:43 +0000, , discard type comment embedded larger whole line comment  piperorigin revid 181357930 181357930,,
2631,b562f5c8067b13e6cdbdec79d6e266bc80adeebf,atthias Kramm <kramm@google.com>, 2018-01-09 00:22:05 +0000, , support __loader__ particular enables generate builtins python archive  piperorigin revid 181235596 181235596,,
2632,768b5f98f4b0111c99ba5ef23561901a59d3fc7d,atthias Kramm <kramm@google.com>, 2018-01-08 21:08:58 +0000, , fix file path assertion setup.py see http github.com google pytype pull also includes following change make visitor also report dependency functiontype  piperorigin revid 181207167 181207167,,
2633,b5f99cbfcdca068e2eadef29bd98d67ff7bcc539,atthias Kramm <kramm@google.com>, 2018-01-08 15:56:43 +0000, , roll back support module alias reexports pyi file need different approach problem previous change data duplication module dependency stored implicitly namedtypes well data duplication module dependency alias well module causing confusion test debugging conceptually wrong dependency need resolved lookup ... import dependency stayed ambiguous even incomplete implementation e.g throw away module member performance regression previous change cause load typeshed module take almost twice much time see measuring code  piperorigin revid 181165580 181165580,,
2634,280e092b6624760df6d7ed4786b369663ce1b6ff,ebecca Chen <rechen@google.com>, 2018-01-08 02:09:12 +0000, , keep content origin creating list abstract.list created need keep origin content instead copying value root node side effect change get rid node keep_origins argument change also exposed mistake test test_typing.py fixed  piperorigin revid 181108104 181108104,,
2635,637ab3d5c964a2cb621250eeb3a13dc82b172e64,atthias Kramm <kramm@google.com>, 2018-01-06 00:44:40 +0000, , remove dead code  piperorigin revid 180992006 180992006,,
2636,b45d9224aa3904669bd9028cfc90e2d820e4e69e,atthias Kramm <kramm@google.com>, 2018-01-06 00:08:20 +0000, , fix two issue pytype found some_set exec code namespace afterwards expect namespace contain name added disable  piperorigin revid 180988149 180988149,,
2637,cdb35e6b3dec8c2d61f274b1e16a6c800ab255f5,atthias Kramm <kramm@google.com>, 2018-01-05 23:58:06 +0000, , get rid parsing function pytd parse builtins.py  piperorigin revid 180986837 180986837,,
2638,db73aadb84ab3f2719a091ccd9c160db0b280129,ebecca Chen <rechen@google.com>, 2018-01-05 22:49:36 +0000, , throw away origin information  piperorigin revid 180978429 180978429,,
2639,b933a9b5d8c46a5da2b962b6eb4b6d8049295b48,ebecca Chen <rechen@google.com>, 2018-01-05 21:25:52 +0000, , add test bug fixed diffbase change bit cleanup previous two change chain fixed splitting bug one add test also fix typo solver_test.cc change misleading variable name vm.py  piperorigin revid 180967224 180967224,,
2640,a4172555cc0e08ca458b34888d303aa70517e36e,ebecca Chen <rechen@google.com>, 2018-01-05 21:08:05 +0000, , rewrite solver recurse origin rather goal  piperorigin revid 180965275 180965275,,
2641,e804295d09ce747d3f62d9fe6cfde10aa9719860,atthias Kramm <kramm@google.com>, 2018-01-05 19:38:49 +0000, , remove stale code previous implementation typeshed pickling  piperorigin revid 180954595 180954595,,
2642,af9c0b1cb534bf8b9f3edaaa55beb57ab063737e,atthias Kramm <kramm@google.com>, 2018-01-05 19:38:22 +0000, , take blacklist account precompiling builtins  piperorigin revid 180954539 180954539,,
2643,761b6fd3f23edaedb17433414eefae6ad5e93f28,atthias Kramm <kramm@google.com>, 2018-01-05 19:37:55 +0000, , add member python  piperorigin revid 180954496 180954496,,
2644,34d13c9f7d457c326dc9bac616222c58c8cd0772,atthias Kramm <kramm@google.com>, 2018-01-05 19:37:29 +0000, , python symlink builtins.pytd also includes following change pickle builtins typeshed make generate builtins pickle builtins typeshed instead __builtin__.pyi typing.pyi similarily make precompiled builtins assume pickled entire standard library  piperorigin revid 180954435 180954435,,
2645,efebe3f23dfd64f99ff4c58814d19ead4984dfc0,atthias Kramm <kramm@google.com>, 2018-01-04 22:18:37 +0000, , add support compressed file savepickle loadpickle  piperorigin revid 180844847 180844847,,
2646,c0078a20be191d68405a297ad109abf15bfed07b,atthias Kramm <kramm@google.com>, 2018-01-04 19:03:53 +0000, , new utility function path_to_module  piperorigin revid 180820084 180820084,,
2647,ebf0d651d92a738349bef050779999655219f24d,atthias Kramm <kramm@google.com>, 2018-01-04 19:00:15 +0000, , fix class foo return union type non type  piperorigin revid 180819481 180819481,,
2648,246284bd3e5ce32995721276d9fdf6cd5dbc85e6,atthias Kramm <kramm@google.com>, 2018-01-04 18:56:45 +0000, , make pickle code serialize_ast aware functiontype process reason cause crash swipe lot issue rug print reparse hack soon pickling typeshed however print reparse need stable behavior function pointer  piperorigin revid 180818957 180818957,,
2649,21ef50d78e705bef3a117976905a5ca850e594ba,atthias Kramm <kramm@google.com>, 2018-01-04 18:52:16 +0000, , fix e.g using type annotation  piperorigin revid 180818243 180818243,,
2650,7f36ca755a11245280c53debc31cc401f724c16a,atthias Kramm <kramm@google.com>, 2017-12-23 20:41:04 +0000,70, moe strip import _overlay see http github.com google pytype issue  piperorigin revid 180014320 180014320,,
2651,99403866daccbfa0a9d2712facb7950dfdf035b5,artin DeMello <mdemello@google.com>, 2017-12-22 22:52:29 +0000, , minor refactoring imported module handling  piperorigin revid 179966468 179966468,,
2652,b685d67d24703b879277b8647f72289b61192d87,atthias Kramm <kramm@google.com>, 2017-12-22 22:13:02 +0000, , simplify logic  piperorigin revid 179962438 179962438,,
2653,f0e7aa70ffe6fd5a4e16d39795924afcdbac3555,atthias Kramm <kramm@google.com>, 2018-01-09 06:16:57 -0800, , upgrade typeshed,,
2654,bddf0d70966c15ec920de185a5e78fbbc7aecb00,atthias Kramm <kramm@google.com>, 2017-12-23 06:31:21 -0800, , remove broken line,,
2655,4b9921375a1177e09b1cc671ceecf1f35a20f09c,atthias Kramm <kramm@google.com>, 2017-12-21 19:51:51 +0000, , remove usage require loader instead make code use builtins typing instead statically cached asts builtins  piperorigin revid 179840605 179840605,,
2656,ad2414624c1eda6cdc0deeb0cbe3204a23b9d2d6,artin DeMello <mdemello@google.com>, 2017-12-21 19:23:51 +0000, , shadow stdli asyncio task typeshed let pytype import asyncio add basic support new async feature  piperorigin revid 179837177 179837177,,
2657,fa8d7079037b02bff11531ac14a43b45f757e725,artin DeMello <mdemello@google.com>, 2017-12-21 00:19:33 +0000, , add support mutually recursive import track stack progress import doe final resolution verification pas everything completed fix case two module importing symbol verification fails neither module symbol completely resolved loaded  piperorigin revid 179747902 179747902,,
2658,1110eec3a7a6bea23d460e63c0c8721088b9f82b,atthias Kramm <kramm@google.com>, 2017-12-19 19:58:13 +0000, , allow leading underscore  piperorigin revid 179584830 179584830,,
2659,337c201ef5c6e56fc8072418b3f53d9f4ca49525,ebecca Chen <rechen@google.com>, 2017-12-19 19:53:32 +0000, , define __getitem__ slice __getslice__ bytearray  piperorigin revid 179584301 179584301,,
2660,3dbcd683f4f8c2df4df1acf10e1c22c3bd927acb,ebecca Chen <rechen@google.com>, 2017-12-19 18:46:04 +0000, , define argcount  piperorigin revid 179574630 179574630,,
2661,eb46e595d42ec6ea948506aab0b1bf36b4044925,atthias Kramm <kramm@google.com>, 2017-12-18 19:32:14 +0000, , add current author pytype alumnus author file  piperorigin revid 179448800 179448800,,
2662,6879b217ae5203cfe025e43a04899e8e728123e6,artin DeMello <mdemello@google.com>, 2017-12-16 00:40:15 +0000, , rename field pytd.module consistency  piperorigin revid 179255649 179255649,,
2663,d74a756ffd5f2ac377e5823b14542634e4137a9a,artin DeMello <mdemello@google.com>, 2017-12-15 23:49:23 +0000, , support metaclass argument class constructor python3 fix changed calling convention python3.6 check metaclass keyword argument constructing python3 class  piperorigin revid 179250025 179250025,,
2664,d616536f0fedc9a94f726a6691856be3f95a356f,ebecca Chen <rechen@google.com>, 2017-12-14 05:16:31 +0000, , fix bug solver.cc check goal conflict checking conflict removed goal need also include current goal reason two goal one origin conflict origin removed way find conflict call goalsconflict removed origin conflicting goal  piperorigin revid 178998550 178998550,,
2665,fe732991610ef40283a5407675ab65615fc7d9c5,artin DeMello <mdemello@google.com>, 2017-12-13 22:39:04 +0000, , support module alias reexports pyi file  piperorigin revid 178960029 178960029,,
2666,2250aa306373146bed37474c2e4654bbc788d661,ebecca Chen <rechen@google.com>, 2017-12-11 19:31:41 +0000, , special builtins use matcher match_from_mro special builtins isinstance incomplete mro matching function instead use one matcher.py also renames _match_from_mro match_from_mro allow public use move closer top file next public matcher method add flag pytype mistakenly think example isinstance float true  piperorigin revid 178647239 178647239,,
2667,d0dabcdda02405ad04ed400faa135f0ba8aa75a1,oogler <noreply@google.com>, 2017-12-09 10:25:53 +0000, , fix misleading use dicts third_party pytype context unknown commit code actually doe seem use correctly hard tell apart automatically situation described aforementioned description want risk false negative relaxing check would like change  piperorigin revid 178476579 178476579,,
2668,5cd920e0571632dc52ea65b85497f29ee65ec8b8,ebecca Chen <rechen@google.com>, 2017-12-08 18:13:13 +0000, , update cfg.py cfg_utils.py switch cfg.cc found useful debugging switch back cfg.py order able add print statement run pdb add cfg.py change set.union ... itertools.chain ... cfg_utils.py compatible set frozensets  piperorigin revid 178391563 178391563,,
2669,4fd2ab886ffe5c0a22367afb9e3ca9ff900bf5b7,ebecca Chen <rechen@google.com>, 2017-12-07 21:37:58 +0000, , add skipped test bug generating function arg combination figure fix bug without killing performance add skipped test  piperorigin revid 178287657 178287657,,
2670,e2e334a4bae29342820e41d43e24c17826a7f8b0,ebecca Chen <rechen@google.com>, 2017-12-07 00:47:01 +0000, , add overlay .type_checking  piperorigin revid 178173416 178173416,,
2671,774778326cd4a8d637fd58627ca21b02ef646cc8,ebecca Chen <rechen@google.com>, 2017-12-07 00:20:52 +0000, , clean special casing none vm.py strict_none report actual error none instead none attr also mean get rid method detecting none delete yet marked deprecated  piperorigin revid 178170196 178170196,,
2672,a0e7cf88cd8aa51159097669aebc3e83baa7d578,oogler <noreply@google.com>, 2017-12-06 22:04:00 +0000, , rollback commit reason rollback error pyglib thread_pool build 800 checking type pyglib thread_pool thread_pool.py failed exit pytype.par failed error executing command tool python pytype pytype.par check touch blaze fastbuild bin pyglib thread_pool pytype aspect thread_pool pytype check ... remaining argument skipped ixkm3 file thread_pool.py line 942 _startworkers attribute move module six module attr original change description add support decorator add pyi file typeshed third_party six add overlay defer checking class abstract method inheriting abcmeta class decorator applied   piperorigin revid 178149221 178149221,,
2673,9812e5131cb552c67408d8a9faf27fd08aaeba8d,artin DeMello <mdemello@google.com>, 2017-12-06 21:33:23 +0000, , add support decorator add pyi file typeshed third_party six add overlay defer checking class abstract method inheriting abcmeta class decorator applied  piperorigin revid 178144453 178144453,,
2674,3bbe8bae3629f694fd89400b3a667cdfe6cf7647,artin DeMello <mdemello@google.com>, 2017-12-06 19:28:06 +0000, , shadow typeshed stdli importlib __init__.pyi add support pkg __init__.pytd add stdli importlib __init__.pytd  piperorigin revid 178126337 178126337,,
2675,d080c98662a91a18c63f242ee3b628dbec006548,ebecca Chen <rechen@google.com>, 2017-12-06 00:45:47 +0000, , use strict_none filter retrieved attribute instead error previously strict_none problem pytype infers type something like none def return lose information return type come module level constant get false positive put def none pyi file filter return type function output def try filtering say run sort issue generator container etc instead change load_from _retrieve_attr filter attribute value return nice thing change longer need call error logging since already filtered false positive  piperorigin revid 178031468 178031468,,
2676,ef8592303a990a3844cf9aa286e1a0e0d5f8b6a3,ebecca Chen <rechen@google.com>, 2017-12-06 00:44:13 +0000, , merge need collect origin node iterate change actually speed anything far tell make code nicer  piperorigin revid 178031261 178031261,,
2677,941f257d49d218b096c067888dd4bcd8b454131d,ebecca Chen <rechen@google.com>, 2017-12-05 20:04:30 +0000, , copy function default new variable strict_none know default argument value visible need originate call site  piperorigin revid 177990774 177990774,,
2678,105731aad630dd520791d86e2e4a5023d6a9d561,ebecca Chen <rechen@google.com>, 2017-12-05 20:00:37 +0000, , use strict_none enter  piperorigin revid 177990007 177990007,,
2679,49a97c5267ae9adc7e80bf5af36a4834bd2cc245,atthias Kramm <kramm@google.com>, 2017-12-02 00:24:42 +0000, , allow create without option data structure use load_pytd lot place including several natural way create option dictionary cleaner explicitly pas parameter loader particular enable get rid instead retrieve builtins typing loader  piperorigin revid 177656233 177656233,,
2680,6ca224cb5ec5772adf1619d9d21994f6bda73eaa,artin DeMello <mdemello@google.com>, 2017-12-01 21:15:41 +0000, , typeshed overlay remove os.pytd import typeshed version add multiprocessing pool.pytd  piperorigin revid 177631250 177631250,,
2681,67cf9138c552a9b008586899e7b7f55327fe1356,artin DeMello <mdemello@google.com>, 2017-12-01 19:28:13 +0000, , store is_dir record is_dir along ast parse_time rather passing around load_pytd purely refactoring additional change needed support pickled serialised module done another  piperorigin revid 177617387 177617387,,
2682,38d2da9836c90725b4b8109a385e7c9251acf44e,ebecca Chen <rechen@google.com>, 2017-12-01 17:59:42 +0000, , copy cached return value carefully call use cached return value need thoughtful copy origin bug pytype strict_none expose longest time simply threw origin away recently switched naively copying neither work instead throw away origin within cached call keep one outside  piperorigin revid 177604133 177604133,,
2683,b5fc97e7f5ad6ef53f9357fde243a46f10d8f94d,ebecca Chen <rechen@google.com>, 2017-12-01 17:31:48 +0000, , change strict_none logic filter fewer true positive previous attempt strict_none failed report obvious error like def pas def return .upper  def return def return none .upper problem none binding binding source set need able pas analyze node find change specifically block none binding still skipped due unrelated bug fix separately  piperorigin revid 177601079 177601079,,
2684,448b350ba80bc5bcc81add1e56bf6386469cb6e5,atthias Kramm <kramm@google.com>, 2017-12-01 17:28:25 +0000, , add integration test precompiled builtins  piperorigin revid 177600714 177600714,,
2685,2affd1b2f3da8ca07e491a2379addd4e15a2ade3,artin DeMello <mdemello@google.com>, 2017-11-28 21:53:44 +0000, , allow duplicate type parameter templated class long duplicate generic  piperorigin revid 177212309 177212309,,
2686,ad32a7af6864b8e99f1e9683cb9274bb092fc7a4,artin DeMello <mdemello@google.com>, 2017-11-28 03:10:43 +0000, , importing pyi file resolve external type local one fix case like foo import brings foo.x scope ... type  piperorigin revid 177105163 177105163,,
2687,324cf34899dab2c9422a0485d83d932a823f6937,artin DeMello <mdemello@google.com>, 2017-11-28 00:34:01 +0000, , fix fix corner case importing subdirectory name toplevel package  piperorigin revid 177089521 177089521,,
2688,cdddc41c0af65924d61c9e8431461893164fd596,artin DeMello <mdemello@google.com>, 2017-11-22 22:40:01 +0000, , fork python2 python3 add couple new class __builtin__ get past typeshed error  piperorigin revid 176703099 176703099,,
2689,1b74f923b5d1b7b240474838f98692dfcb675250,artin DeMello <mdemello@google.com>, 2017-11-22 21:44:47 +0000, , rewrite builtins __builtin__ importing pyi file fix issue importing typeshed file reference builtins explicitly  piperorigin revid 176696161 176696161,,
2690,dab7f029df62cdf4ca030e34ff22aeea7c5942b0,ebecca Chen <rechen@google.com>, 2017-11-21 23:44:00 +0000, , copy variable origin reusing cached function return value pretty sure mistaken thinking old origin needed thrown away since reanalyzing call environment origin still valid change needed strict_none depends origin correct formulate test issue strict_none worked  piperorigin revid 176573030 176573030,,
2691,a4b3722f0990a8b5b4ca7b9092a7fcf8c99bcdcb,artin DeMello <mdemello@google.com>, 2017-11-20 23:25:50 +0000, , per python version pytd stdlib  piperorigin revid 176426818 176426818,,
2692,7bed492477861790145f9928e9306063ccce5506,artin DeMello <mdemello@google.com>, 2017-11-20 22:23:14 +0000, , add supportsbytes protocol typing.pytd  piperorigin revid 176416183 176416183,,
2693,4c80ff93a883618a827be76e2ff30aa3ebd63c20,oogler <noreply@google.com>, 2017-11-20 21:23:59 +0000, , remove reference file exist anymore  piperorigin revid 176406787 176406787,,
2694,44e0d0ac147a12a7b4d5ea938703eada0bc1294c,ebecca Chen <rechen@google.com>, 2017-11-20 20:50:15 +0000, , handle filename none case  piperorigin revid 176402028 176402028,,
2695,7d3b0649cfb57fdf2dd21b3ce3ea921f9f4c12c1,artin DeMello <mdemello@google.com>, 2017-11-20 18:49:16 +0000, , fix issue module import set package name correctly importing directory level module handle relative module name alias looking type allow entity imported multiple path without raising name clash error  piperorigin revid 176383502 176383502,,
2696,6be3914c1ab6df8f7d3087638d3edae4b4161dba,ebecca Chen <rechen@google.com>, 2017-11-16 21:05:17 +0000, , add strict_none flag pytype add strict_none flag turn strict attribute checking none flag pytype report attribute error none even possible type present filter false positive reporting error path back none assignment pass inference supernode filtering strategy fails one obvious case def pas def .upper clearly error added skipped test think fix problem adding node connecting fake inference supernode blocking node still need flesh idea  piperorigin revid 176006696 176006696,,
2697,09501b4cfcabbbaf946502954a800d4b93cdb2c1,ebecca Chen <rechen@google.com>, 2017-11-16 01:00:51 +0000, , remove mutation method output.py remove mutation method getting pytd definition output.py approach work generic class handling seems complicated since support inline generic class yet anyway let punt  piperorigin revid 175903747 175903747,,
2698,4f1a77775085ad4ad5f6c529f57b3d095e69fdba,atthias Kramm <kramm@google.com>, 2017-11-16 00:13:13 +0000, , minor tweak blocks.py  piperorigin revid 175897360 175897360,,
2699,34098d4216f31b0d882fac055e257d6c8f143752,atthias Kramm <kramm@google.com>, 2017-11-15 22:15:14 +0000, , fix ... else loop pas control via break  piperorigin revid 175878665 175878665,,
2700,2c999106202f5e3ec1b184f1b78495b369ba68b4,ebecca Chen <rechen@google.com>, 2017-11-15 18:35:17 +0000, , allow type parameter constant created property  piperorigin revid 175845665 175845665,,
2701,39f3015e5017569392405c8582d59ed75814a16a,ebecca Chen <rechen@google.com>, 2017-11-15 18:31:10 +0000, , handle circular tuple type odd stick tuple inside another tuple create enumerate object followed closure tuple pytype end tuple representation contains change set tuple element type detect case  piperorigin revid 175844954 175844954,,
2702,d2a8f72f09f6c4e5ce1dd0f9ec9b87754d710639,atthias Kramm <kramm@google.com>, 2017-11-15 16:56:09 +0000, , disable return type checking inside property  piperorigin revid 175831772 175831772,,
2703,83f580415c3a1b92cd4d75ee0d0a85ae4b6a19f8,artin DeMello <mdemello@google.com>, 2017-11-15 01:01:22 +0000, , fill unbound type parameter instantiating parametrised class  piperorigin revid 175757535 175757535,,
2704,80a1cb92cf0e78ab33d88798d9489281044c10fb,ebecca Chen <rechen@google.com>, 2017-11-14 23:00:45 +0000, , allow property accept kind function fget  piperorigin revid 175740769 175740769,,
2705,9ccec98a05a250b557a4a6db2d726d13fc48c29d,ebecca Chen <rechen@google.com>, 2017-11-14 22:35:51 +0000, , implement to_type  piperorigin revid 175736950 175736950,,
2706,0c35ad0ba1435a27c242e1c7b0d476e4c57b590f,ebecca Chen <rechen@google.com>, 2017-11-14 21:25:41 +0000, , make typing.hashable protocol pep 544 following list typing class protocol http www.python.org dev pep pep 0544 id38 list marked collection hashable reversible protocol change three work protocol checking although inference work collection hashable  piperorigin revid 175725952 175725952,,
2707,653ff04be38d5d10b73c8e748afbc3e45246bf32,ebecca Chen <rechen@google.com>, 2017-11-14 21:17:30 +0000, , make instantiation generic type little precise playing around generic type noticed instantiating constrained bounded type params precise  piperorigin revid 175724895 175724895,,
2708,eeb5b5ce67b3b7d86178abb685ec30896010f063,ebecca Chen <rechen@google.com>, 2017-11-14 16:57:44 +0000, , int class inherit supportsabs int instead redefining __abs__ test_builtins1 already test int.__abs__ also renames builtintests2 builtintests3 name originally copied test_builtins2 without updating number  piperorigin revid 175686754 175686754,,
2709,f81461a2aedcf6a0414a985960cb822c35eb646c,ebecca Chen <rechen@google.com>, 2017-11-14 01:39:51 +0000, , remove builtins node since longer __builtin__.py  piperorigin revid 175615629 175615629,,
2710,23af349fb47b6b97b83f545b7ea34ba71f243ff4,atthias Kramm <kramm@google.com>, 2017-11-14 00:14:55 +0000, , fix scoping setup_loop  piperorigin revid 175604769 175604769,,
2711,47a661b21a24f6f72026e27c35ccb0dc8f5ac481,atthias Kramm <kramm@google.com>, 2017-11-13 21:36:29 +0000, , make blocks.py process code reachable setup_except  piperorigin revid 175580183 175580183,,
2712,ba7703af2c0850063a0320d78a2632b6a12f7d43,atthias Kramm <kramm@google.com>, 2017-11-13 20:06:51 +0000, , make pytd matcher aware latetype  piperorigin revid 175567829 175567829,,
2713,d7c8663631ebca73ca1caa20a19a46b0bcc75492,ebecca Chen <rechen@google.com>, 2017-11-10 21:07:16 +0000, , allow self argument __init__ annotated report invalid annotation find annotation self __init__ python file annotation really make sense since __init__ used specifically initializing class defined change safe make currently code would run afoul new error reported error delete annotation way __init__ call fake args always succeeds remove problematic try except context comment4  piperorigin revid 175325965 175325965,,
2714,5e55eeefa72c2331e5ae57fe2e48d3b82025f397,ebecca Chen <rechen@google.com>, 2017-11-10 20:25:06 +0000, , analyze function used build class build class python first creates run function set local last frame call make class pytype analyzing function loop yet analyzed interpreter function class method sometimes recreated unbound function part analysis leading weird behavior let stop analyzing class building function python detect class building function presence load_locals opcode python function build_class run  piperorigin revid 175321657 175321657,,
2715,4099b52aa0f0cd9ae9041dcfb3ac5f7024fbfe02,ebecca Chen <rechen@google.com>, 2017-11-10 19:23:40 +0000, , hardcode self check abstract method  piperorigin revid 175314248 175314248,,
2716,1fab00340c42f847f0f7d78863cb4d44bfcd185b,atthias Kramm <kramm@quiss.org>, 2017-12-13 15:07:15 -0800, , upgrade typeshed,,
2717,a86093f79e5b63a081339ed814e50c4da27459c5,atthias Kramm <kramm@google.com>, 2017-12-06 10:45:37 -0800, , update typeshed,,
2718,0964db4d6683324035486109a5ea6c210d8b131c,ebastian Steenbuck <steenbuck@google.com>, 2017-11-10 14:19:34 +0000, , add pytype typegraph package list  piperorigin revid 175284713 175284713,,
2719,b8ed178cac72073172db77362d1e662e8191ccfa,ebecca Chen <rechen@google.com>, 2017-11-09 22:37:01 +0000, , remove obsolete raise keyword  piperorigin revid 175214282 175214282,,
2720,1418f8c3d66477248984f1896a7aca0182c759ab,ebecca Chen <rechen@google.com>, 2017-11-09 20:04:52 +0000, , switch default deep argument false true infer call infer call used deep false left used deep true deleted argument specify value deep added deep false make change wrote ran slightly buggy python script  went fixed case script failed example mistakenly turned self.infer ... .format ...  self.infer ... deep true.format ...  piperorigin revid 175192642 175192642,,
2721,9a1b5c14455d8a7ab6c4431b2473cd281b1ad91e,eddy Sudol <tsudol@google.com>, 2017-11-09 19:59:29 +0000, , update documentation small fix updated documentation cfg.cc closer cfg.py removed extraneous addbindings method test replaced pastevariable changed deprecated makeunique make_unique typegraph.cc  piperorigin revid 175191788 175191788,,
2722,cf8b00f1d775f37431aeff881d8998b51899e164,ebecca Chen <rechen@google.com>, 2017-11-09 18:43:45 +0000, , add method argument assertnocrash method caller specify whether assertnocrash run check infer  piperorigin revid 175179483 175179483,,
2723,38d78134c6c67a2e23db0e87f1269d10e2b0ee51,ebecca Chen <rechen@google.com>, 2017-11-09 18:38:32 +0000, , add checkwitherrors test method add checkwitherrors replaces  renames py_src py_filename check_types parameter src filename respectively checkwitherrors inferwitherrors share common code  piperorigin revid 175178607 175178607,,
2724,53fd2e23a474cbdd7769f0e112bb7924eea8f133,atthias Kramm <kramm@google.com>, 2017-11-09 16:12:21 +0000, , try fix opensource export  piperorigin revid 175159532 175159532,,
2725,0692b92cbc9a6755e965428e8498e21bf585af2f,ebastian Steenbuck <steenbuck@google.com>, 2017-11-09 14:33:35 +0000, , always set precondition  piperorigin revid 175150139 175150139,,
2726,4f17bf772abbf9fad02eb01cd7d3121a7ff69bab,ebastian Steenbuck <steenbuck@google.com>, 2017-11-09 14:00:34 +0000, , apply convert_to_pyi  piperorigin revid 175147126 175147126,,
2727,c5afcce62bbf25ac7ec463e5d753a25e8eef15dd,ebecca Chen <rechen@google.com>, 2017-11-09 01:25:00 +0000, , rename inferandcheck inferwitherrors  piperorigin revid 175091651 175091651,,
2728,10ef1d7fe9f0f1e43be8166e37f3b6de2ffceada,ebecca Chen <rechen@google.com>, 2017-11-09 01:21:40 +0000, , rename assertnoerrors check also deletes replacing check  piperorigin revid 175091318 175091318,,
2729,03598dec2a8c6bed97466be8aa167aa81441d701,ebecca Chen <rechen@google.com>, 2017-11-09 01:05:13 +0000, , make trace_unknown trace unknown binding rather variable  piperorigin revid 175089153 175089153,,
2730,c1fb9e5eb1a8390b8de0e7f370fdb72e847474b1,ebecca Chen <rechen@google.com>, 2017-11-09 00:06:21 +0000, , change compute abstract method support multiple inheritance computing class abstract method need entire mro look immediate parent also change attribute set  piperorigin revid 175080893 175080893,,
2731,86e316a60fd10bbe082ceec11e16bea420ae4e63,ebecca Chen <rechen@google.com>, 2017-11-08 21:30:47 +0000, , rename test_inference test_base inferencetest basetest  piperorigin revid 175055161 175055161,,
2732,aaaf9564a29fa29e7858460cd54da6f30661b4bf,ebecca Chen <rechen@google.com>, 2017-11-08 20:51:10 +0000, , rename infer.py analyze.py infer.py checking inference rename seems reasonable also ahead change test_inference something like follow since show change made infer.py infer_test.py due renamed change analyze.py call prefix string argument analyze instead infer docstring changed code generating storing inferred type code checking inferring type analyze_test.py word infer changed analyze everywhere  piperorigin revid 175049130 175049130,,
2733,0e8401778a875c35f3fa79fc3d746caa7fa720b7,ebecca Chen <rechen@google.com>, 2017-11-08 18:38:43 +0000, , fix indentation error matcher.py returning prematurely without checking abstract method thanks return statement accidentally put inside loop fixing bug also exposed one get_method neglected ascend mro find desired method  piperorigin revid 175028124 175028124,,
2734,a024c73dddde5227e3f2154e3b3f1b83dc926909,eddy Sudol <tsudol@google.com>, 2017-11-08 16:46:13 +0000, , enable cfg.cc default typegraph implementation  piperorigin revid 175011925 175011925,,
2735,3a36b6af95ae433c975f831eae4dd10c028cab71,atthias Kramm <kramm@google.com>, 2017-11-08 14:07:03 +0000, , test allow pas pythonpath pas imports_map simplifies self.infer call  piperorigin revid 174996050 174996050,,
2736,fa592b022d5082876f64dafbd7abe4cd3865085e,ebastian Steenbuck <steenbuck@google.com>, 2017-11-07 15:00:32 +0000, , add various python symbol os.pytd drive ordering import  piperorigin revid 174849413 174849413,,
2737,fa19f0b1eb80e6d3bf5c3fbfe7e4547de99852dd,eddy Sudol <tsudol@google.com>, 2017-11-06 21:46:41 +0000, , remove reference debug.py  piperorigin revid 174755460 174755460,,
2738,aa1230419620f3be62d6bedcf7fe3e643027b8e3,ebastian Steenbuck <steenbuck@google.com>, 2017-11-03 14:55:41 +0000, , add infrastructure generate pickle file pyi file consume pickled typeshed file pytype runtime spend parsing processing pyi file typeshed change allows pytype instead read pickled asts easier consume detail add flag pas location typeshed directory add flag convert pyi file pickled asts add infrastructure generate pickled asts pyi file  piperorigin revid 174461305 174461305,,
2739,37661df599517968e2a7ba05d306c4f9e51b5b9e,atthias Kramm <kramm@google.com>, 2017-11-02 18:12:21 +0000, , allow late type exist optimization pass  piperorigin revid 174352281 174352281,,
2740,15082938401e65ba00f2ce17ca985e441d9bc6dc,atthias Kramm <kramm@google.com>, 2017-11-01 23:47:22 +0000, , introduce late type resolution  piperorigin revid 174256997 174256997,,
2741,8f0b9e22911b481a3d24245324c21b6144180396,artin DeMello <mdemello@google.com>, 2017-11-01 22:25:28 +0000, , fix missed one call loadprecompiled signature changed  piperorigin revid 174245026 174245026,,
2742,2e22d51a1fa0edcbc1ba95e269d7e62a1ea89802,artin DeMello <mdemello@google.com>, 2017-11-01 20:06:58 +0000, , create per python version subdirectory pytd builtins easier maintain ifdefs within pytd file closely mirror typeshed current copy file builtins builtins preserve existing behaviour replace file builtins later  piperorigin revid 174224195 174224195,,
2743,4d9030a65e655a6108be3da5e5d6bd27da4180c0,ebecca Chen <rechen@google.com>, 2017-10-31 00:32:31 +0000, , fix corner case still printed inner class error  piperorigin revid 173975922 173975922,,
2744,4a9cbf799cce713391d745f3e0d0fb49685b7d3c,ebecca Chen <rechen@google.com>, 2017-10-30 22:56:50 +0000, , print typevar bound string representation  piperorigin revid 173963466 173963466,,
2745,cea1de29c52b7797577616d3b9b6acee8e4257ee,artin DeMello <mdemello@google.com>, 2017-10-27 18:22:40 +0000, , rename pytd utils pytd_utils also move dictionary invert function abc_hierarchy utils  piperorigin revid 173695204 173695204,,
2746,6de602a32039ddae14f8f44a566fa7ff28bcd98e,artin DeMello <mdemello@google.com>, 2017-10-25 17:51:00 +0000, , add missing test coverage main canonical_pyi  piperorigin revid 173419099 173419099,,
2747,cbe1197e10b2ccee0b5037233a9eb897e25e0081,atthias Kramm <kramm@google.com>, 2017-10-25 16:19:36 +0000, , add pickle integration test  piperorigin revid 173406425 173406425,,
2748,45f3f78f35a2f110538d01caf463673ac2a4d3a6,ebecca Chen <rechen@google.com>, 2017-10-24 20:05:01 +0000, , fix return type  piperorigin revid 173299641 173299641,,
2749,2739125b032fa97342959e95e0b271b0d4b2c9b6,ebastian Steenbuck <steenbuck@google.com>, 2017-10-24 15:53:42 +0000, , fix pickle representation functiontype would fail pickling case appears common probably hidden behind nofail  piperorigin revid 173263260 173263260,,
2750,b75ba4655baab773d009ff68437c25051199f425,ebecca Chen <rechen@google.com>, 2017-10-23 22:08:23 +0000, , add chart showing status pytype test show status tricorder guitar test project stable unstable canary test dashboard  piperorigin revid 173177201 173177201,,
2751,144d8a543bbad2fbb159e7c35051bf3f3179c739,ebecca Chen <rechen@google.com>, 2017-10-21 05:05:07 +0000, , fix couple bug output cfg output typegraph escape output parsing error instead crashing output cfg output typegraph provided make option available checking mode generating graph usr bin dot much testing main_test verify manually option working expected  piperorigin revid 172972162 172972162,,
2752,ad50cb2e4065cb58c3c94cb808cfac4066d9ea67,ebecca Chen <rechen@google.com>, 2017-10-21 04:41:11 +0000, , cleanup use self.tmp_dir instead utils.tempdir main_test  piperorigin revid 172970978 172970978,,
2753,441aa72bbad33f276a8cdf824cab9cea7132f22c,ebastian Steenbuck <steenbuck@google.com>, 2017-10-20 15:10:18 +0000, , add todo todo warning  piperorigin revid 172885273 172885273,,
2754,1f03ff98279fb23ddf0c701d5dd541e0b0f76ca7,ebastian Steenbuck <steenbuck@google.com>, 2017-10-20 15:01:52 +0000, , add infrastructure use proto_to_pyi new dependency missed development proto_to_pyi tool  piperorigin revid 172884381 172884381,,
2755,b3466274199b16d9a2e28566cd90b83e1280aa48,artin DeMello <mdemello@google.com>, 2017-10-19 22:06:52 +0000, , add show config option pytype print full config exit help debugging add mock mode testing  piperorigin revid 172805159 172805159,,
2756,b7fd61d09d27f31b454f79923995b8df2a9feabc,ebastian Steenbuck <steenbuck@google.com>, 2017-10-18 15:02:47 +0000, , remove unused import  piperorigin revid 172602489 172602489,,
2757,bc47da1a50d818e023502c45c27e2f04c70a88df,ebastian Steenbuck <steenbuck@google.com>, 2017-10-18 09:25:49 +0000, , change use str.split instead shlex first string python module name allowed contain whitespaces therefore split first whitespace left approach benefit simpler backwards compatible  piperorigin revid 172578257 172578257,,
2758,d63dd7d11267b84e02c313821326694c77bfc18f,ebastian Steenbuck <steenbuck@google.com>, 2017-10-18 09:05:26 +0000, , mark precompiled module clean local pointer already set avoids unnecessary visitor call  piperorigin revid 172576814 172576814,,
2759,b640a5fc8519b483a871259290f742f78ef5dd75,artin DeMello <mdemello@google.com>, 2017-10-17 19:38:03 +0000, , support one level nested tuples type isinstance issubclass  piperorigin revid 172497378 172497378,,
2760,70274645ed028d3077786c54ce5f899de4b38a45,ebastian Steenbuck <steenbuck@google.com>, 2017-10-17 15:39:38 +0000, , provides code path around shlex shlex large performance impact big imports_info file line becomes one dominant source spend runtime change provides way caller provide separator string used split key value import info file split done string.split free compared state machine used shlex  piperorigin revid 172470484 172470484,,
2761,460933d46dda203a9fec9c222a7869cfe8c5cf05,artin DeMello <mdemello@google.com>, 2017-10-12 23:50:16 +0000, , move version checking validation code utils reused setting version via different entry point  piperorigin revid 172032925 172032925,,
2762,c7b3d17b0bf3878e789ea21d565a47b2359069eb,ebecca Chen <rechen@google.com>, 2017-10-12 18:34:07 +0000, , fix bug caused incorrectly reusing seen set output.py test case set list content tuple twice tuple added seen set twice second time pytype mistakenly think encountered recursive definition copying seen fix problem tuple added copy  piperorigin revid 171987807 171987807,,
2763,57404f35774da4d7c216ec049d3b99e5069f27cd,ebecca Chen <rechen@google.com>, 2017-10-11 23:20:20 +0000, , document verbosity  piperorigin revid 171891576 171891576,,
2764,4f470a09b2dbb9590630cc758f36f3482a51d26f,atthias Kramm <kramm@google.com>, 2017-10-11 22:23:05 +0000, , print error somebody output pickled without output  piperorigin revid 171883940 171883940,,
2765,3d80c08dd12affff50cee8359be2f333626b177d,atthias Kramm <kramm@google.com>, 2017-10-11 20:30:50 +0000, , add  piperorigin revid 171866572 171866572,,
2766,9827e39b9709af03a079672777b666623249c1df,atthias Kramm <kramm@google.com>, 2017-10-11 20:12:52 +0000, , forward cfg node applying inplace operator emulated inplace operator __iadd__ mapping __add__ etc act similarily mutation see abstract.py unlike yet get extra cfg node  piperorigin revid 171864197 171864197,,
2767,8fcbd8eec457671dad2830edcd7dfd03f31584d6,atthias Kramm <kramm@google.com>, 2017-10-11 20:08:41 +0000, , start new cfg node build_list also print empty list list list latter confusing since instance printed name class  piperorigin revid 171863697 171863697,,
2768,489fa95a3ac7c61a7bb5f9a212dc1f75c055a1c9,artin DeMello <mdemello@google.com>, 2017-10-11 18:47:18 +0000, , support pyi file type ignore comment decorator needed typeshed mypy  piperorigin revid 171853110 171853110,,
2769,917fcb53c055e239013b04457a9c93032e29023e,ebecca Chen <rechen@google.com>, 2017-10-11 18:07:00 +0000, , make make_class handle abstract member dictionary correctly  piperorigin revid 171846161 171846161,,
2770,3cf940d5066171dcf9bc42572cb48f9abb3883ac,ebecca Chen <rechen@google.com>, 2017-10-11 00:23:04 +0000, , fix crash  piperorigin revid 171758762 171758762,,
2771,53095acc62896fa5a8dd5f3c02283aac636bc724,artin DeMello <mdemello@google.com>, 2017-10-11 00:04:14 +0000, , add support 0.0 float literal pyi file 0.0 read better ... type float consistent  int literal nice class list mixed int float constant  piperorigin revid 171756521 171756521,,
2772,c5fd84a6df0adc516eacc27837cebb0523151335,artin DeMello <mdemello@google.com>, 2017-10-10 22:31:13 +0000, , fix decorator  piperorigin revid 171744099 171744099,,
2773,e124dcb0ecfa1ea3dff8d0e604374f016e094daa,ebecca Chen <rechen@google.com>, 2017-10-10 21:46:26 +0000, , fix bug looking method left instance looking class caused print nonsensical protocol error detail  piperorigin revid 171737233 171737233,,
2774,fabe340a1fd69f39f0893d78b700d170db0d497a,artin DeMello <mdemello@google.com>, 2017-10-10 20:34:58 +0000, , fix pytd_tool need python_version option  piperorigin revid 171726542 171726542,,
2775,6db0334e7310e129fc1eacc9dd655876f44305d9,ebecca Chen <rechen@google.com>, 2017-10-10 18:49:56 +0000, , cleanup remove  piperorigin revid 171711902 171711902,,
2776,a7a79aa14ba27e6b9bffdcf20e49ae8bb08531e8,ebecca Chen <rechen@google.com>, 2017-10-10 17:48:00 +0000, , fix bug typing.iterator protocol matching since typing.iterator automatically converted need result _get_protocol order get abstract method   piperorigin revid 171700778 171700778,,
2777,32405c239fd684aa741bceeddfe3b93e2947a27b,artin DeMello <mdemello@google.com>, 2017-10-10 00:09:00 +0000, , add support import module pyi file  piperorigin revid 171609404 171609404,,
2778,c3e3bcaabc4ba014d6a3af7cc26c327d86affc86,atthias Kramm <kramm@google.com>, 2017-10-09 23:14:15 +0000, , adjust phrasing protocol error ask user implement method arbitrary class know code control control  piperorigin revid 171602427 171602427,,
2779,2eed314501b3870c02e75dde1b93ce9c41579e4b,atthias Kramm <kramm@google.com>, 2017-10-09 19:30:27 +0000, , get rid field yet seen case useful debugging notation confusing since made look like variable  piperorigin revid 171571459 171571459,,
2780,cf7015706c0ab2e932e49892b3b3ac708e6baa0c,artin DeMello <mdemello@google.com>, 2017-10-07 00:25:29 +0000, , fix breakage caused adding python version pytd parser  piperorigin revid 171369531 171369531,,
2781,311df98fdcf48e9ce0f8e045af8c2adde864a232,artin DeMello <mdemello@google.com>, 2017-10-06 21:04:01 +0000, , pytd builtins keyed python version enforce passing python version parsing entry point add typing builtins python3 version guard  piperorigin revid 171340890 171340890,,
2782,9a029fbbbcba2e9e002abcb96d0f92ae94b2c688,artin DeMello <mdemello@google.com>, 2017-10-04 21:59:26 +0000, , add stub python3 typing class alias everything doe yet version guard builtins loader doe support  piperorigin revid 171068196 171068196,,
2783,ed42a3b187e5156959a38f5351289f30095f8099,artin DeMello <mdemello@google.com>, 2017-10-04 20:17:55 +0000, , allow typing.any take type parameter silently dropped motivation python3 feature like typing.future typeshed yet support pytype adding shim alias let parse pyi file containing infer anything type involved  piperorigin revid 171052578 171052578,,
2784,63cbad5ff2a0d24d14f0245114997561b20c3685,artin DeMello <mdemello@google.com>, 2017-10-03 19:20:58 +0000, , support type ignore first line multiline function definition  piperorigin revid 170894088 170894088,,
2785,88e1160cbe04059bf83826d9a605952e3c323505,artin DeMello <mdemello@google.com>, 2017-10-03 18:12:12 +0000, , support type ignore comment empty class specifically add support pattern class ... type ignore used typeshed  piperorigin revid 170883010 170883010,,
2786,c58db2559ea8e3b4cde5646471c15b5b13a25b1b,artin DeMello <mdemello@google.com>, 2017-10-02 22:47:19 +0000, , allow trailing comma function param list pyi file  piperorigin revid 170766255 170766255,,
2787,0bcbe67c00ca0b5672706bdd5fc3a667213c45ea,artin DeMello <mdemello@google.com>, 2017-10-02 21:59:42 +0000, , fix guard caller passing none empty module name  piperorigin revid 170758488 170758488,,
2788,071ad915ad9a25a5fbf48d3009e190aafc1fef3f,artin DeMello <mdemello@google.com>, 2017-10-02 19:15:54 +0000, , add overload decorator writing pyi file compatibility mypy help eventual goal using pytype generate file typeshed  piperorigin revid 170734217 170734217,,
2789,a9ef8c66403d0359f4dedb659d66a77a3d206ef4,artin DeMello <mdemello@google.com>, 2017-10-02 18:02:56 +0000, , add support package relative import pyi file support declaration form .foo import bar .foo resolved relative package current pyi file  piperorigin revid 170724274 170724274,,
2790,7e691ff2a8430dd7fb7214292047ab13b6a44972,artin DeMello <mdemello@google.com>, 2017-09-28 17:58:18 +0000, , parse coroutine decorator pyi file basic support parse pyi file coroutine async.coroutine check function overload consistent decorator preserve decorator writing pyi back  piperorigin revid 170367134 170367134,,
2791,740fc54968239f5d40d4710ba77e2c2202e69c28,eddy Sudol <tsudol@google.com>, 2017-09-28 16:28:44 +0000, , fix issue blocking integration typegraph includes change side i.e api change changing python interacts cfg  piperorigin revid 170353600 170353600,,
2792,6be8151f6642e183a7fc7aab2bd40645b2540ba8,atthias Kramm <kramm@google.com>, 2017-09-26 00:04:43 +0000, , make subscript operation behave function call used special case subscript complains operation invalid different currently function call function call subscript display error none combination would work  piperorigin revid 169984299 169984299,,
2793,9d0b8df22faf5ca7c0b2b8defcead5cb161ede2c,artin DeMello <mdemello@google.com>, 2017-09-25 20:35:47 +0000, , fix couple moe directive also add http www.gnu.org leakchecker whitelist  piperorigin revid 169953661 169953661,,
2794,8870a6437271e07368732c555fdf5b9dfd057c59,atthias Kramm <kramm@google.com>, 2017-09-22 21:41:11 +0000, , fix subtle import issue module package called foo.bar implemented foo bar __init__.py reference module start foo.bar e.g foo.bar.baz implemented foo bar baz.py make sure rename local module rename reference module current package example rename foo.bar.baz rename foo.bar also includes following change convert property constant module rather class level let precise notion property type depends type variable case leave method resolved use time also clean lot property method splitting code build_class  piperorigin revid 169739601 169739601,,
2795,77c52c62f2c6de9d2e2f90249e6e5f7b734f56a7,eddy Sudol <tsudol@google.com>, 2017-09-21 16:10:37 +0000, , add import pytype.debug back cfg.py one linting tool complained unused import turn debug.py monkeypatches logging  piperorigin revid 169551368 169551368,,
2796,8b27ee973b2f300b227e420fed7b21b836cfbafd,eddy Sudol <tsudol@google.com>, 2017-09-21 15:20:49 +0000, , remove debug function cfgnode  piperorigin revid 169545973 169545973,,
2797,8a6d171aa03181c7150e3afdd325c4ae33989186,atthias Kramm <kramm@google.com>, 2017-09-20 23:30:39 +0000, , fix slice bug correctly falling back __getitem__ trying __getslice__  piperorigin revid 169469411 169469411,,
2798,fabfe29878d363b224f8163940740b9fd923d145,eddy Sudol <tsudol@google.com>, 2017-09-20 22:37:43 +0000, , add cfg_utils cfg function need main cfg api function debugging purpose rarely used change preparation moving cfg.py  piperorigin revid 169461850 169461850,,
2799,cc822765339389ae4112f41ae296132452a2d03d,artin DeMello <mdemello@google.com>, 2017-09-20 21:48:12 +0000, , add support generic property classmethods pyi file support getters classmethods type foo self ... return type depends type class  piperorigin revid 169454204 169454204,,
2800,9c6c50231de3b3126b5a2ac752f2478fa02291ca,atthias Kramm <kramm@google.com>, 2017-09-20 20:34:22 +0000, , explain type match protocol put information error message explaining failed match protocol doe parameter top level type e.g passing list argument list iterable parameter complain missing __iter__  piperorigin revid 169442089 169442089,,
2801,419cb68bf3924800a4b4b2a9b6de6949264ef7fa,eddy Sudol <tsudol@google.com>, 2017-09-20 20:27:58 +0000, , add test cfg.py api  piperorigin revid 169441022 169441022,,
2802,2275d3c00f52bda9bb80a76e2a804049ec2c0f10,atthias Kramm <kramm@google.com>, 2017-09-19 22:36:27 +0000, , enable writable error  piperorigin revid 169312100 169312100,,
2803,56a5614957ec769dc5acea5d073ff23b01e63677,atthias Kramm <kramm@google.com>, 2017-09-19 18:20:50 +0000, , make logging error bit nicer logging location error message display relevant part stack trace  piperorigin revid 169270221 169270221,,
2804,38aab63b3f9bb7243b88aca3a42965300a5127cd,atthias Kramm <kramm@google.com>, 2017-09-19 18:12:11 +0000, , add directive pytype skip file  piperorigin revid 169268647 169268647,,
2805,6ded1e4eedcc7e7ecbc226d206febb625147f467,atthias Kramm <kramm@google.com>, 2017-09-19 18:07:03 +0000, , allow class __getitem__ match iterable protocol  piperorigin revid 169267746 169267746,,
2806,a040ff5cd955251f1879ec8e2394792ea33be2cf,atthias Kramm <kramm@google.com>, 2017-09-19 15:51:29 +0000, , add utility method dummymethod needed protocol upcoming change  piperorigin revid 169247091 169247091,,
2807,cc7930bd5bcf2f5d9b8b61a67140d65a8f50dc6d,ebecca Chen <rechen@google.com>, 2017-09-18 22:25:17 +0000, , remove attribute  piperorigin revid 169156191 169156191,,
2808,0527627ec506737d9679b38132bc1dc909f524ed,ebecca Chen <rechen@google.com>, 2017-09-18 22:13:02 +0000, , make visitor little prettier merge bound_by_class attribute rename clarity also includes following change add support name mangling conjunction __slots__ see http docs.python.org tutorial classes.html private variable class local reference  piperorigin revid 169154105 169154105,,
2809,ba78da172949c8772f0a92c5f7e0ad380c0b7604,atthias Kramm <kramm@google.com>, 2017-09-16 02:12:34 +0000, , minor tweak phrasing readme.md  piperorigin revid 168920784 168920784,,
2810,75d9d5f565e650c25f9181db2e42329e8ee4c957,atthias Kramm <kramm@google.com>, 2017-09-16 01:58:16 +0000, , remove native builtins option also includes following change automatically infer use python exe pytype google  piperorigin revid 168919638 168919638,,
2811,717e479b88f4d790dc5ff13982dcc4822d619f47,ebecca Chen <rechen@google.com>, 2017-09-15 22:30:34 +0000, , fix attribute setting  piperorigin revid 168898095 168898095,,
2812,aa62b4b9a34f3a93cfa4b826a20ecb1c16613924,ebecca Chen <rechen@google.com>, 2017-09-15 22:21:49 +0000, , report writable attempt set attribute super instance  piperorigin revid 168896717 168896717,,
2813,f9ffa42363c1ec9066b0ae864e346161960505b1,atthias Kramm <kramm@google.com>, 2017-09-15 22:16:28 +0000, , get rid cache_unknowns option parameter used true command line false test possibly causing confusion hardcode true remove option  piperorigin revid 168895822 168895822,,
2814,a2c0a2cf97b31c8355b0402b684be289940f7217,atthias Kramm <kramm@google.com>, 2017-09-15 22:03:32 +0000, , temporarily disable writable check outside test also clean configuration passthrough relying kwargs also includes following change complain writable presence __setattr__ descriptor  add empty __slots__ almost builtin class catch bug like foo .bar  add __slots__ declaration namedtuples  check __slots__ assigning attribute  piperorigin revid 168893671 168893671,,
2815,71c03b197e1cbdf014e199b5c87054d384e01f38,ebecca Chen <rechen@google.com>, 2017-09-15 20:19:24 +0000, , improve exception definition __builtin__.pyi add missing attribute merged stdli exceptions.pyi remove redundant occurrence __init__ __getslice__ __unicode__  piperorigin revid 168878153 168878153,,
2816,edea523579e194d5d0c0d32880c17265f1d14fec,ebecca Chen <rechen@google.com>, 2017-09-15 18:12:34 +0000, , take account extracting pythonconstant  piperorigin revid 168859469 168859469,,
2817,f58a5cf0fba01249ec3a35c555386ce920341029,ebecca Chen <rechen@google.com>, 2017-09-14 23:35:02 +0000, , fix bug treated plain tuples heterogeneous  piperorigin revid 168765080 168765080,,
2818,eb810a0080bbc071d3eb930b94513341e64a7651,artin DeMello <mdemello@google.com>, 2017-09-14 21:31:32 +0000, , add method alias pyi parser  piperorigin revid 168745818 168745818,,
2819,58958c8f7199386882b5f9703fe8c3d6da134d1a,ebecca Chen <rechen@google.com>, 2017-09-14 21:26:05 +0000, , add error unpacking tuple wrong number variable  piperorigin revid 168744834 168744834,,
2820,3868937c49ee97460d76669a1fa380587da6c1fa,ebecca Chen <rechen@google.com>, 2017-09-14 18:49:21 +0000, , make objectpredicate inherit builtinfunction fix crash matcher.py since code handle bare know handle also move builtinfunction next earlier file group object predicate class isinstance pytdfunction pytype able infer bit couple test tweaked reflect  piperorigin revid 168721113 168721113,,
2821,302d9a92740afd9d552851b3f3d32c93d0df63d8,artin DeMello <mdemello@google.com>, 2017-09-13 22:11:19 +0000, , add callable also rearrange group similar class  piperorigin revid 168602492 168602492,,
2822,049d859891d84a8a76c142c73fd29e48320f0888,artin DeMello <mdemello@google.com>, 2017-09-13 18:59:40 +0000, , fix unifying type parameter constraint copy pyval two instance parameter  piperorigin revid 168573981 168573981,,
2823,6263503de9a262845f7cc6ec0a29a1ba75904799,ebecca Chen <rechen@google.com>, 2017-09-12 16:45:29 +0000, , remove variable callback computes changestamp sum number variable number variable binding monitordict changestamp change whenever variable binding added fix test test_tracebacks far tell worked previously made unnecessary change changestamp caused called twice argument  piperorigin revid 168388414 168388414,,
2824,ea3f2b5a075ee8346e468724eb89a981c3d649e7,atthias Kramm <kramm@google.com>, 2017-09-12 13:08:50 +0000, , make protocol work even interface implemented superclass  piperorigin revid 168366161 168366161,,
2825,29969505998cd5bc06c09b486ffbdf8c1d105120,artin DeMello <mdemello@google.com>, 2017-09-11 20:15:39 +0000, , fix looking class attribute single binding pas full variable valself  piperorigin revid 168274238 168274238,,
2826,9383601348d40bc6fbc28aa1e351c19e92521a49,ebecca Chen <rechen@google.com>, 2017-09-11 20:10:14 +0000, , start checking indexable tuple test  piperorigin revid 168273552 168273552,,
2827,0e18e87c94fd5e022e7fd69c14a1c6a076743b6a,artin DeMello <mdemello@google.com>, 2017-09-09 00:37:23 +0000, , fix crash reraise python3 code cleanup treat state.exception purely boolean simplify code reflect  piperorigin revid 168069915 168069915,,
2828,d674c47e81326c7571d0b23451dbf539130dc979,artin DeMello <mdemello@google.com>, 2017-09-08 23:18:08 +0000, , add new usage error error class report error command line invocation pytype  piperorigin revid 168061509 168061509,,
2829,40110da53eb15d752b6ff7734a862d95ed7d5d1e,atthias Kramm <kramm@google.com>, 2017-09-08 21:57:59 +0000, , split protocol matching test protocol inference test different file  piperorigin revid 168050652 168050652,,
2830,9b2e6186477eb38d7c41ffb2f9e2acda295a8eca,ebecca Chen <rechen@google.com>, 2017-09-07 20:30:11 +0000, , cleanup add to_binding method  piperorigin revid 167903026 167903026,,
2831,a1c7aed2ddeec3ae9089c43bcb8ad657f303d279,artin DeMello <mdemello@google.com>, 2017-09-07 19:28:02 +0000, , fix add get_class special builtin instance code path matcher call get_class instance property etc. causing assert failure also includes following change output __slots__ information pyi store inferred __slots__ information generated pyi actually use __slots__ yet make sure make pipeline  piperorigin revid 167895230 167895230,,
2832,cecc622b54561fe88e48cf3fb349e48e6fc4e74a,artin DeMello <mdemello@google.com>, 2017-09-01 23:21:13 +0000, , remove support external code function using __builtin__.py removed  piperorigin revid 167338898 167338898,,
2833,1bd55f48ac6432a9dc7c805b70f27a00e54d047a,artin DeMello <mdemello@google.com>, 2017-09-01 23:18:41 +0000, , remove pytd builtins __builtin__.py  piperorigin revid 167338614 167338614,,
2834,f2b9118c7d4bd01be4c2c8dbccc03e09e6b34202,artin DeMello <mdemello@google.com>, 2017-09-01 23:11:52 +0000, , port classmethod pytd builtins  piperorigin revid 167337785 167337785,,
2835,a2fbde7810f488ecef8c08ca8f1036ad8fec4ff2,ebastian Steenbuck <steenbuck@google.com>, 2017-08-31 20:33:31 +0000, , unresolved class could escape pickling code could happen classtype module1 used say signature reference something module2 could resolve something instead replaced classtype anythingtype local reference module1 pointed signature local reference would point unresolved classtype instead anythingtype  piperorigin revid 167182863 167182863,,
2836,fc76d1079c870484c6d3e830087fc397fa38ca7b,atthias Kramm <kramm@google.com>, 2017-08-31 01:27:13 +0000, , support __slots__ pyi  piperorigin revid 167081078 167081078,,
2837,f7c8b5d8726710cfcf34fbd1e25ba222027da607,artin DeMello <mdemello@google.com>, 2017-08-30 22:27:25 +0000, , cleanup constructing need source set  piperorigin revid 167058993 167058993,,
2838,910c7c4ce953426f0d77a3d7cff6a4b5599939f2,artin DeMello <mdemello@google.com>, 2017-08-30 20:29:09 +0000, , port staticmethod pytd builtins  piperorigin revid 167040673 167040673,,
2839,6c13d1d8d3bd3bad91e90607321c8880e017a5c1,ebecca Chen <rechen@google.com>, 2017-08-30 20:07:23 +0000, , remove return type counter operation  piperorigin revid 167037392 167037392,,
2840,d99b79e3c0a40b3adae1e208ac68f0b3a726f69b,atthias Kramm <kramm@google.com>, 2017-08-29 22:19:22 +0000, , add slot attribute pytd.class yet anything  piperorigin revid 166912040 166912040,,
2841,1c8852407382835cab93b84acb461a7bba148a6a,artin DeMello <mdemello@google.com>, 2017-08-29 20:56:40 +0000, , port property pytd builtins combine couple rolled back single reapply also add workaround matcher.py  piperorigin revid 166898414 166898414,,
2842,38cd8ce7d3f1f86c77819776c161f81588a6054e,eddy Sudol <tsudol@google.com>, 2017-08-28 20:13:09 +0000, , conversion reinstantiate pytd.class object template  piperorigin revid 166746384 166746384,,
2843,9ae80ac1bad1fa51b5fa98c16c1190665413ca3b,eddy Sudol <tsudol@google.com>, 2017-08-24 21:04:07 +0000, , add pytype builtin typing.pytd  piperorigin revid 166390943 166390943,,
2844,2ee690368d67223d96f2bcb92207d0b250b0d5b0,atthias Kramm <kramm@google.com>, 2017-08-23 22:18:21 +0000, , add better test case next possibly next attribute  piperorigin revid 166262723 166262723,,
2845,3782b3f7279fb307596adfa711f2c2d3f8173e39,ebecca Chen <rechen@google.com>, 2017-08-23 21:37:37 +0000, , make visitor robust  piperorigin revid 166256347 166256347,,
2846,e31de0c1e9136692a5276d2c2599a1f85b0c017c,atthias Kramm <kramm@google.com>, 2017-08-22 23:11:15 +0000, , fix __abs__ next next root cause latter still unclear since check parameter next trying retrieve next  piperorigin revid 166129289 166129289,,
2847,2e8b0c598030d61061c4c49aa3758573d345feac,artin DeMello <mdemello@google.com>, 2017-08-22 20:02:17 +0000, , fix clean breakage caused rollback  piperorigin revid 166101964 166101964,,
2848,fc7e427e0802e3c9d896923ce0d8b21cf80d638a,artin DeMello <mdemello@google.com>, 2017-08-22 18:17:00 +0000, , rollback commit reason rollback blocking release original change description move property handler pytd builtins   piperorigin revid 166086575 166086575,,
2849,4d87d849875445158b7fe0fc21ceac410c0bb7c2,artin DeMello <mdemello@google.com>, 2017-08-22 18:04:22 +0000, , rollback commit reason rollback blocking release original change description minor refactoring property need convert.py   piperorigin revid 166084538 166084538,,
2850,dbaac1a090bbe68365989d9cd77780bf3a30e71b,atthias Kramm <kramm@google.com>, 2017-08-21 23:59:46 +0000, , always import cfg cfg  piperorigin revid 165995668 165995668,,
2851,0f647479e38a03cd548a66ae20f948c0f26ba740,artin DeMello <mdemello@google.com>, 2017-08-21 20:38:38 +0000, , minor refactoring property need convert.py  piperorigin revid 165968539 165968539,,
2852,f0202f88144be6a3c0c4cee6cadba5769067624d,artin DeMello <mdemello@google.com>, 2017-08-18 22:43:11 +0000, , port next pytd builtins special_builtin  piperorigin revid 165763111 165763111,,
2853,e5e1636b137b3091c92def12f02d8a8d27e0f40a,artin DeMello <mdemello@google.com>, 2017-08-18 22:37:35 +0000, , optimisation remove unnecessary set operation quick profile drop total running time 35k call 35.8s   piperorigin revid 165762477 165762477,,
2854,31b26f864a1bc4b1c8afdcc40c506abb7bde093c,ebecca Chen <rechen@google.com>, 2017-08-18 22:31:54 +0000, , take dummy_container account  piperorigin revid 165761819 165761819,,
2855,6f66800fb09a83bff0b5ece2d048e357fcc92b37,eddy Sudol <tsudol@google.com>, 2017-08-18 22:27:18 +0000, , remove broken staticmethod __init__ test accidentally added fixing argument __init__s  piperorigin revid 165761259 165761259,,
2856,542d97b7fafac6a3a9f378fadfb49143d0fb0a58,eddy Sudol <tsudol@google.com>, 2017-08-18 21:56:04 +0000, , add self arg function take argument also formalize argcount boundfunction used nativefunction supported added function base class pytdfunction  piperorigin revid 165756825 165756825,,
2857,d083798f8f5a323891951bed6de56e44da402f5b,artin DeMello <mdemello@google.com>, 2017-08-18 18:44:13 +0000, , move pytd builtins  piperorigin revid 165732281 165732281,,
2858,c728bfb930d087152b9d7c84c5eff7ef8f9f32d0,artin DeMello <mdemello@google.com>, 2017-08-17 23:35:50 +0000, , move property handler pytd builtins  piperorigin revid 165646557 165646557,,
2859,a59dd7049fe51c693560f49187a891a94bbe1a21,artin DeMello <mdemello@google.com>, 2017-08-17 18:41:43 +0000, , raise python compiler error rather uncaught exception input file read  piperorigin revid 165606261 165606261,,
2860,e1ae197d732cbc0bb57892c125586ae9cf2dd351,ebecca Chen <rechen@google.com>, 2017-08-17 18:39:58 +0000, , check format expected error list passed  piperorigin revid 165605987 165605987,,
2861,97090f518aad96264cc4519edaa431ddeb24efe7,ebecca Chen <rechen@google.com>, 2017-08-14 21:30:56 +0000, , fix main.py exception handling previously pytype crashed exception constructor took one argument instead trying construct another instance caught exception report name message raise assertionerror previously would logged  file foo.py  assertionerror exception file foo.py  piperorigin revid 165229816 165229816,,
2862,daec17fd1e3e07b23dc0321b0aee287496db239b,atthias Kramm <kramm@google.com>, 2017-08-14 16:51:38 +0000, , fix node bug converter.py converting parameter generictype need use current node since might type parameter referring concrete instance declared non root node able reach root node also fixed typo found pylint  piperorigin revid 165190425 165190425,,
2863,04be7ed75f3a294ace0029cded6786f631606821,atthias Kramm <kramm@google.com>, 2017-08-14 16:46:07 +0000, , solving starting cfg node blocked treat  piperorigin revid 165189744 165189744,,
2864,e21970190f6d0454544b6b0193641191b771efd2,ebecca Chen <rechen@google.com>, 2017-08-12 19:13:46 +0000, , analyze decorated class  piperorigin revid 165082362 165082362,,
2865,e9e702de4f1ca6f786c9148b97c691d52cd9b6ca,ebecca Chen <rechen@google.com>, 2017-08-12 19:08:17 +0000, , handle unknown unsolvable value  piperorigin revid 165082228 165082228,,
2866,4378e98f827cc64f67f9d5706f9a2ff19413cb30,eddy Sudol <tsudol@google.com>, 2017-08-08 22:06:19 +0000, , fix _match_args adding extra name function call error message  piperorigin revid 164650938 164650938,,
2867,cbd671b96a4fd48b99e49d2d5cfff5f31fb7dcc8,artin DeMello <mdemello@google.com>, 2017-08-08 19:48:13 +0000, , fix common annoyance trying log uninitialised dict  piperorigin revid 164631286 164631286,,
2868,9b2c8d095f2efc2365dc4ca8a5f80735094efd53,aige Kordas <kordas@google.com>, 2017-08-08 19:46:30 +0000, , added common stringlike protocol  piperorigin revid 164631025 164631025,,
2869,e25665f74687fb9a932a16ef09e713499aeb6e29,ebecca Chen <rechen@google.com>, 2017-08-08 04:01:56 +0000, , add repr method  piperorigin revid 164549848 164549848,,
2870,4282465a6c990a7eef27e0c0c3ca5743c810de6d,ebecca Chen <rechen@google.com>, 2017-08-07 16:50:37 +0000, , rename assertequals assertnotequals drop got tired seeing lint warning deprecation every test file touched went changed  piperorigin revid 164471786 164471786,,
2871,21c67b142f35cd4a9a795ad95c34fc8106af0ab5,ebecca Chen <rechen@google.com>, 2017-08-07 16:41:05 +0000, , move mro related logic file refactoring accomplishes two thing mergesequences longer visitors.py awkward place utility function remove circular import  piperorigin revid 164470656 164470656,,
2872,e29ec01a04b1a0c78ca7eeda17a8eaa0bd5cd762,ebecca Chen <rechen@google.com>, 2017-08-04 23:03:28 +0000, , add test pyi version check look like already done implementing added test  piperorigin revid 164322689 164322689,,
2873,195f6cdf26f5a79d5b4e3fd301e865055fe20842,eddy Sudol <tsudol@google.com>, 2017-08-04 22:41:29 +0000, , add class name reporting function call error method instead append display list.append error message example  piperorigin revid 164320188 164320188,,
2874,6acfdee0e70e9053a91da88b69b9ada99f273bdc,ebecca Chen <rechen@google.com>, 2017-08-04 03:47:21 +0000, , report error definition like class int ... report error type parameter class template also given concrete value change aliasingdict allow turning name value alias class int ... error rather crash also renames asserts corrects typo direction gpylint  piperorigin revid 164220880 164220880,,
2875,ad2a8138f7366cae388c2ca26440a2d845af2284,ebecca Chen <rechen@google.com>, 2017-08-03 20:10:47 +0000, , fix crash instantiating type parameter container argument  piperorigin revid 164169808 164169808,,
2876,4595c3439433f941ddc69739c005763754c7351b,ebecca Chen <rechen@google.com>, 2017-08-03 17:43:09 +0000, , log error abstractmethod used non abstract  piperorigin revid 164145577 164145577,,
2877,9ee51455df5eb2e985f405f603bd4302b4f413ce,ebecca Chen <rechen@google.com>, 2017-08-03 17:38:44 +0000, , infer return type presence parameter annotation  piperorigin revid 164144835 164144835,,
2878,613a914fea174a3273c9eb52cc6feabc964653c2,ebecca Chen <rechen@google.com>, 2017-08-03 17:36:20 +0000, , take is_abstract account visitor  piperorigin revid 164144422 164144422,,
2879,ee7cc5cde54163b15a4bda8e6c98a18d763975e3,aige Kordas <kordas@google.com>, 2017-08-02 23:12:25 +0000, , added support checking parameterized protocol pytype  piperorigin revid 164054024 164054024,,
2880,f761afe20f4d8bbf90eb097e42db7f14e74e0a94,ebecca Chen <rechen@google.com>, 2017-08-02 23:09:36 +0000, , let abstract class instantiated  piperorigin revid 164053599 164053599,,
2881,0b64a23d8aa5a0ac85c02b2239101d1f7ef06beb,ebecca Chen <rechen@google.com>, 2017-08-02 21:46:25 +0000, , allow decorator pyi file also fix lint issue  piperorigin revid 164041275 164041275,,
2882,80852c7341dd35af1a74251b252cf4123fe2f4fa,atthias Kramm <kramm@google.com>, 2017-08-01 21:49:31 +0000, , allow used class module potential cause confusion  piperorigin revid 163890683 163890683,,
2883,4b4f142f144fa425da0a90496f1961911d2a8bf3,ebecca Chen <rechen@google.com>, 2017-08-01 20:19:03 +0000, , fix small bug matching  piperorigin revid 163875649 163875649,,
2884,e536a0ceaee44fa7af3b22bcad023e84c53aaa90,atthias Kramm <kramm@google.com>, 2017-08-01 19:51:56 +0000, , remove _csv.pytd favor _csv.pyi typeshed  piperorigin revid 163872188 163872188,,
2885,9daf80cc02d297146685639f361d6a5e593ed8d5,eddy Sudol <tsudol@google.com>, 2017-08-01 00:21:10 +0000, , improves parameter ordering error message using signature ordering _iter_actual look complicated actually need take account starargs following signature ordering  piperorigin revid 163772571 163772571,,
2886,c3bf2ce47fa2ffa153ed1d98ef584d4b0ffb13ad,ebecca Chen <rechen@google.com>, 2017-07-31 22:55:29 +0000, , rename idea name error first place also fix import order errors.py  piperorigin revid 163761181 163761181,,
2887,fe00b820a7e077ed4e013cf92efe8b64fdda5733,eddy Sudol <tsudol@google.com>, 2017-07-31 19:07:08 +0000, , add type checking argument builtin function _match_args check argument isinstance hasattr issubclass  piperorigin revid 163728173 163728173,,
2888,5e7ac8978b71ece67ab078f4173e4ab88180ddf1,aige Kordas <kordas@google.com>, 2017-07-31 17:32:07 +0000, , corrected docstring pytd.signature  piperorigin revid 163712262 163712262,,
2889,851cbe1553c39b3bd3688ee037663894cb87c096,ebecca Chen <rechen@google.com>, 2017-07-31 17:19:34 +0000, , create directly instead  piperorigin revid 163710290 163710290,,
2890,9e79a408b8d4775048c03909770c01ae52b7fe06,eddy Sudol <tsudol@google.com>, 2017-07-28 22:33:23 +0000, , add typing.typevar keywords lexer small quality life change prevent couple rare parseerrors  piperorigin revid 163527406 163527406,,
2891,bf159802a91ae4e66c8f39e631f27090097ed73f,ebecca Chen <rechen@google.com>, 2017-07-28 22:30:02 +0000, , fix bug reporting supported yet inline generic class reporting supported yet class foo list ...  class foo list str ... even though pytype already handle latter  piperorigin revid 163526989 163526989,,
2892,46c6bc1d280b3d744ee73b38dbcdf7907e25d0d4,ebecca Chen <rechen@google.com>, 2017-07-28 19:57:48 +0000, , delete time.pytd made copy time.pyi temporary workaround upstream version changed use __new__ instead __init__ initializing struct_time change made copy  piperorigin revid 163506771 163506771,,
2893,36fb9e6fde1c1486b688c8ab771e5c1895c3945b,eddy Sudol <tsudol@google.com>, 2017-07-28 19:56:42 +0000, , fix crash calling object  piperorigin revid 163506659 163506659,,
2894,694d66c26bfb29bc571475fb13d4e41d32dba6d0,ebastian Steenbuck <steenbuck@google.com>, 2017-07-28 13:49:31 +0000, , enable cython pytype build implementation one way another possibility would put marker file cfg.pyx node.pyx next file change behavior possibility node supply visitnode implementation removed functionality unused time  piperorigin revid 163463667 163463667,,
2895,7041921d302696913b8c9d8001e9cc6dacd898bb,eddy Sudol <tsudol@google.com>, 2017-07-27 21:50:17 +0000, , slightly improves use .pyi file import map file analyzed need rely import map entry information need updated  piperorigin revid 163391394 163391394,,
2896,4f28ec20caff0a7c42495ada9c575957a5c112a1,aige Kordas <kordas@google.com>, 2017-07-20 01:12:11 +0000, , added capability type check non parameterized protocol  piperorigin revid 162564130 162564130,,
2897,682722e8eaad1b218fd9977b269ed2276f218068,eddy Sudol <tsudol@google.com>, 2017-07-19 22:25:17 +0000, , add support typing.deque  piperorigin revid 162544329 162544329,,
2898,11f15031692e1686e4c7036b7229d3d1c056d4f1,ebecca Chen <rechen@google.com>, 2017-07-19 20:26:27 +0000, , fix logic deciding type check abstract method depending attribute function attribute set properly method return type namedtuple flag set false also change assertequals assertequal place make lint happy  piperorigin revid 162526974 162526974,,
2899,d5f3765fb7ccc9e02f6fb1f59064c08f1c61c3bf,ebecca Chen <rechen@google.com>, 2017-07-19 18:10:39 +0000, , add missing attribute  piperorigin revid 162508652 162508652,,
2900,4c20b3ba4b2bee43639828dc93d2002bcfbd5cc1,artin DeMello <mdemello@google.com>, 2017-07-17 19:07:40 +0000, , debug logging fix enhancement limit recursion depth printing nested binding source set add stack trace log.debug logging error creation  piperorigin revid 162248972 162248972,,
2901,be377fa92f41e33f61516c7b30cbf827a87b15bf,ebecca Chen <rechen@google.com>, 2017-07-17 19:03:25 +0000, , change __any_object__ __random__ incorrectly using __any_object__ instead __random__ condition test __any_object__ creates unknown whereas __random__ creates bool  piperorigin revid 162248264 162248264,,
2902,e6bb706ed4cca690c9f589cee462c42ed778bc46,artin DeMello <mdemello@google.com>, 2017-07-17 18:13:53 +0000, , rename add comment  piperorigin revid 162240014 162240014,,
2903,4534f3f745e784afc319f996b43d2fda120bc4ef,ebecca Chen <rechen@google.com>, 2017-07-15 03:33:45 +0000, , fix bug get need return base class  piperorigin revid 162042509 162042509,,
2904,23ff26d871fcf3f5213d493662f2ee30ca7349c1,ebecca Chen <rechen@google.com>, 2017-07-15 02:48:40 +0000, , instance object match type parameter set  piperorigin revid 162040312 162040312,,
2905,3d61fe30ed864543eb06899f2c83dae573860635,ebecca Chen <rechen@google.com>, 2017-07-13 23:01:08 +0000, , improve handling referenced bug caused small cluster loosely related issue computing bad name set forgot include name ambiguous alias originally referred fixed allowed value overwritten later fixed know handle case type parameter value set root node overwritten later cached function call however convinced case need handled since way able hit buggy handling change fix  piperorigin revid 161878971 161878971,,
2906,f6a21e8af73cb9f4f0f7149e3299099d3bd7b5bf,eddy Sudol <tsudol@google.com>, 2017-07-13 21:30:44 +0000, , add support issubclass  piperorigin revid 161865318 161865318,,
2907,f548173357139e4e8c2eaf1f90e85c3a5a0004db,ebastian Steenbuck <steenbuck@google.com>, 2017-07-13 21:15:33 +0000, , make pytype pickle cache stable  piperorigin revid 161862810 161862810,,
2908,89f854f98ef49e5d94b7b8994af11a8ec0098ce4,artin DeMello <mdemello@google.com>, 2017-07-13 18:56:24 +0000, , longer support commenting type comment remove test  piperorigin revid 161842141 161842141,,
2909,60ab17a25078cf1762e10fba4e9ecaa50ed56273,artin DeMello <mdemello@google.com>, 2017-07-13 18:55:42 +0000, , add pytdclass tuple mro tupleclass support isinstance obj tuple check  piperorigin revid 161842035 161842035,,
2910,6b0b2f325cf2fa3714b45824a86900029ee124e1,eddy Sudol <tsudol@google.com>, 2017-07-13 15:44:46 +0000, , find pytype directive anywhere comment previous behavior required pytype directive e.g type comment disable error first part comment allowed commenting directive deprecated  piperorigin revid 161812235 161812235,,
2911,026cf67b09cc3e8de1786beba7a38b3751981ae5,ebecca Chen <rechen@google.com>, 2017-07-12 23:28:44 +0000, , call __init__ return value instantiated matching matcher.py instantiate rather init_class case correct since creates lot throwaway instance matching occasionally one instance end return value need call __init__ also defines dummy call_init vm.py make abstract_test vm_test happy fix bug change expose sometimes calling without first checking abstract value fact abstract.class  piperorigin revid 161735655 161735655,,
2912,ba61bd56a178fefcea36780e20d095295443d202,artin DeMello <mdemello@google.com>, 2017-07-12 19:23:53 +0000, , create debug library collect inspection logging code one place move existing code debug.py add couple function inspect binding  piperorigin revid 161699529 161699529,,
2913,25ddfea9d318edf44c8fa6f19d39bda2e919bc9d,ebecca Chen <rechen@google.com>, 2017-07-11 22:51:15 +0000, , check whether attribute self value none using  piperorigin revid 161594539 161594539,,
2914,3cdcb05f33a026d7922527e04c49b11d972bc39a,atthias Kramm <kramm@google.com>, 2017-07-11 22:47:32 +0000, , make sure argument combination valid complaining  piperorigin revid 161593977 161593977,,
2915,482c76c8d9e90dc5fb2111e6ee48092c6f92ba70,ebecca Chen <rechen@google.com>, 2017-07-11 22:47:27 +0000, , fix isinstance test abstract_test  piperorigin revid 161593963 161593963,,
2916,69ea4b6e3d818af6667a672a6e72e5f91523711b,atthias Kramm <kramm@google.com>, 2017-07-11 22:42:34 +0000, , ignore typeshed stdli builtin.pytd  piperorigin revid 161593259 161593259,,
2917,87a6bc600efbe42cb0057aed4bbdebf74ae515b6,eddy Sudol <tsudol@google.com>, 2017-07-11 22:14:44 +0000, , handle non constant tuples setting function __defaults__ something like none len x._fields still tuple emit warning even though know many params make optional  piperorigin revid 161589240 161589240,,
2918,2905e9626ed36c77b3c6adb9a76690da28d725fd,artin DeMello <mdemello@google.com>, 2017-07-11 21:56:42 +0000, , add new cfg node special builtins ininstance hasattr fix bug splitting isinstance ...  piperorigin revid 161586468 161586468,,
2919,83af9921e5af85109b0f27c917d23f75b3844b94,atthias Kramm <kramm@google.com>, 2017-07-11 21:22:28 +0000, , allow module level  piperorigin revid 161580880 161580880,,
2920,8fdf04be88f640ad93d222e0dd114d1ea7b03dc6,ebecca Chen <rechen@google.com>, 2017-07-11 18:21:58 +0000, , fix one callable related attribute error add skipped test another  piperorigin revid 161555488 161555488,,
2921,930ccf5da93878f95e56c2a8f43f9b1aa69a77c4,ebecca Chen <rechen@google.com>, 2017-07-11 17:47:50 +0000, , update pytype error add test verifying page current  piperorigin revid 161549673 161549673,,
2922,190e64d1a3531f1a2649dd535eb5705038d91dd2,eddy Sudol <tsudol@google.com>, 2017-07-10 22:56:39 +0000, , add __file__ special global variable  piperorigin revid 161453995 161453995,,
2923,15e0b3eb6e3a3b9e0f4b36e8274ec2e1bbc5bde1,ebecca Chen <rechen@google.com>, 2017-07-10 22:50:57 +0000, , careful type checking abstract method instead skipping analysis altogether abstract method skip checking return type class error still caught skip checking return type method caller abstract abstract class instance abc.abcmeta abstract method  piperorigin revid 161453156 161453156,,
2924,3f535a22a39a9415f6542ec597ba1616dfbb11d9,eddy Sudol <tsudol@google.com>, 2017-07-10 21:58:49 +0000, , add support setting __defaults__ pytdfunctions one ever use assume code plan support __defaults__ non pytdfunctions  piperorigin revid 161445911 161445911,,
2925,2700db2f97b0e7bd51139ad3db27f042bd15c50f,atthias Kramm <kramm@google.com>, 2017-07-10 21:49:01 +0000, , nicer  piperorigin revid 161444281 161444281,,
2926,a5f85c9e050d91992f392754658e3aa5ab999b05,ebecca Chen <rechen@google.com>, 2017-07-10 20:59:27 +0000, , add attribute class  piperorigin revid 161436146 161436146,,
2927,e938de0953e9e37afc85100c8b29ae2a14dc6a86,atthias Kramm <kramm@google.com>, 2017-07-10 18:33:19 +0000, , report none attr code path cause empty binding  piperorigin revid 161418058 161418058,,
2928,ca2f78ab236d39c514bea92ae7e7e4f975d3cd7c,atthias Kramm <kramm@google.com>, 2017-07-10 18:04:48 +0000, , fix bug solver caused spurious none attr error  piperorigin revid 161414343 161414343,,
2929,0aee6bec45083f0685510f5b74dec77a199804e1,atthias Kramm <kramm@google.com>, 2017-07-10 13:06:34 +0000, , fix template related bug run builtins typing  piperorigin revid 161385779 161385779,,
2930,7b7f542ed3bfbb783060c77491c9acff1b3abb63,ebecca Chen <rechen@google.com>, 2017-07-07 22:31:18 +0000, , preserve value is_abstract converting back pytd output  piperorigin revid 161254196 161254196,,
2931,b71465367073b55afa187feed2074ae5d297a725,artin DeMello <mdemello@google.com>, 2017-07-07 21:29:27 +0000, , raise supported error typing.newtype  piperorigin revid 161246358 161246358,,
2932,53c6e76db95b1f73ca0cfa9d3bed655d63932e4a,ebecca Chen <rechen@google.com>, 2017-07-07 19:51:19 +0000, , improve change loop left right side binding determine individually pair value whether call operator reverse operator sometimes try emulate behavior builtins return notimplemented reverse operator tried first right side subclass left override newly defines reverse operator example case bar.__radd__ called class foo object def __add__ self ... class bar foo def __radd__ self ... foo bar bar.__radd__ used case since bar touch __radd__ foo.__add__ called class foo object def __add__ self ... def __radd__ self ... class bar foo ... foo bar foo.__add__ used  piperorigin revid 161234012 161234012,,
2933,2cc4ef71423755f2580b13000acaf5c31f2182b0,aige Kordas <kordas@google.com>, 2017-07-07 16:27:16 +0000, , modified convert.py is_abstract field carried abstract function  piperorigin revid 161209566 161209566,,
2934,006d8e221e51ff1aa37b8fd5130d393a6ca5fe8f,aige Kordas <kordas@google.com>, 2017-07-07 01:09:39 +0000, , modified protocol logic check method marked abstractmethod  piperorigin revid 161156731 161156731,,
2935,17d7d40d6bbaaeb605cdfd6d3464a59743522318,ebecca Chen <rechen@google.com>, 2017-07-06 23:41:49 +0000, , add test attribute lookup namedtuple  piperorigin revid 161148257 161148257,,
2936,f9185154817d9d95e7a1df972b7cec463942e7fd,ebecca Chen <rechen@google.com>, 2017-07-06 21:27:44 +0000, , add test binary operator  piperorigin revid 161131027 161131027,,
2937,c4a154e70de75c5524484196ccdc4fbbfd2a0cc3,ebecca Chen <rechen@google.com>, 2017-07-06 21:11:11 +0000, , implement attribute lookup  piperorigin revid 161128518 161128518,,
2938,a7f1380bb4a38b36a472e90dc9cced684960fe2b,ebecca Chen <rechen@google.com>, 2017-07-06 21:04:24 +0000, , allow local definition shadow import  piperorigin revid 161127510 161127510,,
2939,f1f150b4b68b3a01fedc710e0439915938a70984,ebecca Chen <rechen@google.com>, 2017-07-05 23:22:30 +0000, , change convert.x_type attribute variable abstract value make impossible accidentally change type builtins also change take class value rather class variable call to_variable initialize builtins  piperorigin revid 161020420 161020420,,
2940,cc3b674be4f98ff442abe44c784d1f10d24c009f,aige Kordas <kordas@google.com>, 2017-07-05 22:40:35 +0000, , separated logic solving protocol partial equation added logic join two result  piperorigin revid 161015366 161015366,,
2941,f812d965af4960ec91fb49eb1e4dd0b609f4135c,atthias Kramm <kramm@google.com>, 2017-07-05 20:31:18 +0000, , straighten cfg node logic infer.py never throw cfg node return value away modify cfg node var use node assign new var use node1 node2 ...  piperorigin revid 160997847 160997847,,
2942,1c30dceaa27f035f97c8cbe7cff64fd5d44e61ec,eddy Sudol <tsudol@google.com>, 2017-06-30 22:51:00 +0000, , clean cfg created analysis eliminating redundant edge adding node beginning function new node previous implementation polluted first analysis first opcodes function analyzed could cause issue e.g binding added early function later changed later binding shadowed earlier binding instead vice versa redundant edge add edge last node function body node passed function call also add edge analyze_class modify node given argument return node reason add edge  function return node given even sometimes doe  piperorigin revid 160698697 160698697,,
2943,c228eb22cc8648e83bc245b7095bfba680f3f814,aige Kordas <kordas@google.com>, 2017-06-30 21:40:35 +0000, , added support abstractmethod decorator note abstractmethod counted single decorator pytype allows per function  piperorigin revid 160690661 160690661,,
2944,7eccaac6dae0157eab083737cf7af6bbb4c5aba7,ebecca Chen <rechen@google.com>, 2017-06-30 15:46:10 +0000, , use current node returning init_class rather cache  piperorigin revid 160650245 160650245,,
2945,d40a81e5d99a808e31b70babd93ea2f1065022dd,ebecca Chen <rechen@google.com>, 2017-06-29 21:45:12 +0000, , revert change init_class caching change caused new canary test failure distilled included test case failure spurious name error last line bar.bar  piperorigin revid 160576054 160576054,,
2946,b8f17c078dba61db3daa36e9627fe90d2eb26fbb,ebecca Chen <rechen@google.com>, 2017-06-29 20:20:36 +0000, , implement tuple unpacking  piperorigin revid 160564441 160564441,,
2947,d079f82198baff790f1e42a4567c6fbcfc6956b0,ebecca Chen <rechen@google.com>, 2017-06-29 18:40:36 +0000, , change naming format pyi namedtuples change format name_count namedtuple name count name pyi namedtuples cleaned put error message  piperorigin revid 160552424 160552424,,
2948,0bc4b06b002e1f1ac2a9f6f86aa9e06ee69fae34,ebecca Chen <rechen@google.com>, 2017-06-29 17:55:26 +0000, , remove consecutive duplicate line number error message tracebacks  piperorigin revid 160546225 160546225,,
2949,6a0da847687572e3b00dcd1bf4bf6f041a7e1f92,eddy Sudol <tsudol@google.com>, 2017-06-29 16:16:01 +0000, , change init_class caching use current opcode instead current node  piperorigin revid 160533352 160533352,,
2950,90152e4e17fab9c5a374a05b519b01672282a8c0,aige Kordas <kordas@google.com>, 2017-06-29 15:40:40 +0000, , added intersection type  piperorigin revid 160529722 160529722,,
2951,35753ca32824f2eed79ccaba63895a07e3e3c500,ebecca Chen <rechen@google.com>, 2017-06-29 07:47:49 +0000, , let load_from return empty variable  piperorigin revid 160496605 160496605,,
2952,376453a855df08cae15c3d13a3056d67ad215fb5,ebecca Chen <rechen@google.com>, 2017-06-29 00:11:02 +0000, , add call method  piperorigin revid 160470087 160470087,,
2953,c4b96986c2eeaf90578d29cd1317eb00bc9fd0e4,atthias Kramm <kramm@google.com>, 2017-06-28 20:22:46 +0000, , add debug method reveal_type use reveal_type print type named mypy  piperorigin revid 160443515 160443515,,
2954,fae823e16deb13319c113d873533cfa4fd37a96c,ebecca Chen <rechen@google.com>, 2017-06-28 17:06:23 +0000, , fix two unused value warning change parser.y rebuild pytype following message appear third_party pytype pyi parser.y 331.5 334.5 warning unused value third_party pytype pyi parser.y 335.5 338.5 warning unused value moving bytestring unicodestring list token without pyobject value fix problem  piperorigin revid 160421241 160421241,,
2955,1dad95c288c78eac277d3e9d0fac813399d065cb,atthias Kramm <kramm@google.com>, 2017-06-27 22:26:18 +0000, , make int subclass supportsint  piperorigin revid 160335250 160335250,,
2956,5f302d835dcfa6d57c9349f1bad72345737c9a4c,atthias Kramm <kramm@google.com>, 2017-06-27 22:23:00 +0000, , complain thing like tuple foo  piperorigin revid 160334799 160334799,,
2957,1fd25940fee444a01cd251ff334f7d631c6fe689,aige Kordas <kordas@google.com>, 2017-06-27 21:56:19 +0000, , added parameterized protocol typing.pytd  piperorigin revid 160331067 160331067,,
2958,c5fc99e8f9870f3566617db89011ffb14668f2a8,ebecca Chen <rechen@google.com>, 2017-06-27 20:50:27 +0000, , make itemsview take two type parameter well typeshed stub expects itemsview accept two type parameter  piperorigin revid 160320938 160320938,,
2959,0956f8c23d24148e8bff08ec99a937500cedebb6,ebecca Chen <rechen@google.com>, 2017-06-27 19:56:53 +0000, , make also fill function  piperorigin revid 160313715 160313715,,
2960,2c2b227a91310a951bd0c3177ee741d283088748,ebecca Chen <rechen@google.com>, 2017-06-27 19:53:53 +0000, , make functiontype mutable reason unreplaced namedtype fill classtype pointer replacing old version class leaf functiontype node unchanged even though similarly point old version function make functiontype mutable function attribute overwritten done change  piperorigin revid 160313366 160313366,,
2961,58ccf9894ce998138167741e2fb61d67833d1310,ebecca Chen <rechen@google.com>, 2017-06-27 16:39:43 +0000, , implement import pyi file  piperorigin revid 160285940 160285940,,
2962,481fc5598fa1e23f23f93bfbf9f6f23f3a924945,aige Kordas <kordas@google.com>, 2017-06-23 21:14:29 +0000, , added non parameterized protocol typing.pytd protocol  piperorigin revid 159992226 159992226,,
2963,ad35a8bc3d2a799e5cdfc425ad37b87647e63cc9,eddy Sudol <tsudol@google.com>, 2017-06-23 21:10:26 +0000, , using empty give empty unsolvables calling using empty value return another empty value unsolvable fix testcallempty test_containers  piperorigin revid 159991698 159991698,,
2964,3ee60dd192f98cfe7d582f158ca012779a40d78e,eddy Sudol <tsudol@google.com>, 2017-06-23 20:49:44 +0000, , add node cfg mark beginning node added analysis motivation make cfg somewhat easier read  piperorigin revid 159988516 159988516,,
2965,8eb9eb5d511ed99df18041636abbed6ddaa8b4a8,eddy Sudol <tsudol@google.com>, 2017-06-23 20:49:16 +0000, , move creation cfg node new block block executed  piperorigin revid 159988452 159988452,,
2966,f7339b577f9cd416065c070e80122dcffdce530f,eddy Sudol <tsudol@google.com>, 2017-06-23 20:34:22 +0000, , clarify testset add additional example easy forget build empty dictionary empty set  piperorigin revid 159986666 159986666,,
2967,d0599897faae3761709bacaf684e145a42bff0c6,eddy Sudol <tsudol@google.com>, 2017-06-23 20:34:09 +0000, , add logging error creation sometimes really need know error creatd show debug log  piperorigin revid 159986646 159986646,,
2968,57a017d06c972264b9271b22422d1170941dc3c0,eddy Sudol <tsudol@google.com>, 2017-06-23 15:33:15 +0000, , adjust entry better typing older entry would broken change type parameter mapping subtype iterable come first entry change element type parameter union  piperorigin revid 159951520 159951520,,
2969,89b97b5b78b6685cc1841c03cb23978f70c2e230,ebecca Chen <rechen@google.com>, 2017-06-22 21:25:46 +0000, , allow setting module abstract.module noticed investigating sometimes full name builtins module silly change abstract.module always return none module attribute accessed ignore attempt set module making sure attempted new value something reasonable  piperorigin revid 159876625 159876625,,
2970,4ab6002d651b1668a925b8b0afebdbbcaf73f0b6,ebecca Chen <rechen@google.com>, 2017-06-22 20:42:42 +0000, , check multiple type parameter value although longer allow multiple conflicting type parameter value pyi file still see multiple value type parameter unrelated container happen use type parameter name handle case yet set type parameter  piperorigin revid 159869917 159869917,,
2971,f3cfd0afd37e36d306f6f6134a710646b9ea57d3,artin DeMello <mdemello@google.com>, 2017-06-22 18:47:13 +0000, , rollback commit reason rollback skipped broken test reapplying original original change description automated rollback commit reason rollback break third_party pytype test test_generic.py original change description base hash key module set member name previous strategy hash set lazily loaded member meant act accessing module.member could unexpected side effect    piperorigin revid 159855464 159855464,,
2972,168d7f486094adef03cb3f3b7e421612868a6bdb,ebecca Chen <rechen@google.com>, 2017-06-22 18:40:30 +0000, , skip test_generic.py add working test  piperorigin revid 159854427 159854427,,
2973,9348694faa77b0122483e9cb9355e32fb6be32de,ebecca Chen <rechen@google.com>, 2017-06-22 08:25:44 +0000, , detect typevar conflicting value pyi file  piperorigin revid 159798987 159798987,,
2974,05d867da033d0cfb57eda8e436020f41455b8de1,artin DeMello <mdemello@google.com>, 2017-06-22 01:41:23 +0000, , rollback commit reason rollback break third_party pytype test test_generic.py original change description base hash key module set member name previous strategy hash set lazily loaded member meant act accessing module.member could unexpected side effect   piperorigin revid 159775283 159775283,,
2975,23fbbdc066ee0edd635fe75fbb73f36a20b363f8,atthias Kramm <kramm@google.com>, 2017-06-21 20:51:47 +0000, , make tuple unpacking work splitting bug 62867188 fixed 62867188  piperorigin revid 159738006 159738006,,
2976,17cae5007ad2b2e78c5e36044e0220abfef5114c,artin DeMello <mdemello@google.com>, 2017-06-20 21:16:38 +0000, , base hash key module set member name previous strategy hash set lazily loaded member meant act accessing module.member could unexpected side effect  piperorigin revid 159612161 159612161,,
2977,5cb1b9a517d100903324ce949a4f0cec242dc838,atthias Kramm <kramm@google.com>, 2017-06-20 18:47:23 +0000, , unskip extend test work  piperorigin revid 159591215 159591215,,
2978,57465e6f7c47a619649b76e17d3af61d6faf5002,atthias Kramm <kramm@google.com>, 2017-06-20 17:59:40 +0000, , create new cfg node start every block also fix bug node passing attribute.py exposed  piperorigin revid 159583509 159583509,,
2979,0b9b36451758e1accdf188c32fa850d76d2c7f7b,aige Kordas <kordas@google.com>, 2017-06-20 17:23:30 +0000, , unskipped test already passing  piperorigin revid 159577807 159577807,,
2980,7e6793680a28a187c9589438c32bcbcca5ad9a15,ebecca Chen <rechen@google.com>, 2017-06-20 00:03:59 +0000, , make work properly dict non empty since using aliasingdict combination lazydict add_alias usually called lazy value evaluated assert alias self add_alias always pass even though condition strict modifies assertion allow alias present long key alias map also fix lint warning special method wrong signature adding unused varargs kwargs bunch unimplemented method  piperorigin revid 159500240 159500240,,
2981,4cdc0e5bb47527402ef2641f507550e1b71f44ab,aige Kordas <kordas@google.com>, 2017-06-19 22:00:02 +0000, , added option solve unknown type using protocol  piperorigin revid 159483707 159483707,,
2982,fd1b60c3a39833b42fdd3d6be3a0bd21cdc82fe9,atthias Kramm <kramm@quiss.org>, 2017-06-21 10:33:10 -0700, , upgrade typeshed,,
2983,010f38c627708afa8b612f5ec41c07ca200bb9a2,artin DeMello <martindemello@gmail.com>, 2017-06-20 11:32:27 -0700,52, merge pull request jellezijlstra patch fix installation instruction,,
2984,023e53efec55370e94add777dd77fd95611f4138,oogler <noreply@google.com>, 2017-06-19 20:58:40 +0000, , global cleanup change  piperorigin revid 159473551 159473551,,
2985,0be95902f088be8dacc93a0a331082f7e68c9664,atthias Kramm <kramm@google.com>, 2017-06-19 19:00:29 +0000, , teach parser used typeshed shortcut defining byte unicode string type  piperorigin revid 159457253 159457253,,
2986,69053fa07bb7b4643d49cf49872a24a4a9416380,atthias Kramm <kramm@google.com>, 2017-06-19 18:55:00 +0000, , treat exception return purpose cfg creation  piperorigin revid 159456533 159456533,,
2987,8c15f9f4f2e55c2e641fb8531831c8b2af5a0fdf,eddy Sudol <tsudol@google.com>, 2017-06-19 15:52:54 +0000, , add case min max handle multiple argument type certain common case  piperorigin revid 159432050 159432050,,
2988,4fb4651f760a9595bdc3259c019f3bc6f080d66e,atthias Kramm <kramm@google.com>, 2017-06-17 01:33:51 +0000, , downgrade setting log message warning message appears e.g refer inner class output  piperorigin revid 159300682 159300682,,
2989,08bacdfaced155681483ac097324757e67f6a7cc,atthias Kramm <kramm@google.com>, 2017-06-17 01:30:58 +0000, , speed load_from since always retrieve local globals builtins data structure direct retrieval instead going attribute.py  piperorigin revid 159300537 159300537,,
2990,ed3fc38dc56c43680f215a8d685d05d15d763d2a,oogler <noreply@google.com>, 2017-06-17 00:14:44 +0000, , modified existing pytype test remove solve_unknowns functionality  piperorigin revid 159295509 159295509,,
2991,2eb7c7ac3d1a1ee99d85cd63d7a17f25991356af,atthias Kramm <kramm@google.com>, 2017-06-16 23:44:10 +0000, , create new cfg node mutating type parameter  piperorigin revid 159292638 159292638,,
2992,58aecd56685620e60da97c084e19f6ed38467c91,eddy Sudol <tsudol@google.com>, 2017-06-16 22:49:55 +0000, , report error typing module available target  piperorigin revid 159286922 159286922,,
2993,2f5d1137c4cf8e9987ab8bc35ab07565f547a216,atthias Kramm <kramm@google.com>, 2017-06-16 19:30:13 +0000, , create new cfg node store_fast fix test case test_flow.py prevents solver single stepping variable assignment inside loop note trigger another bug test test_splits.py approximate set true cfg.py need make strict attr checking default applying  piperorigin revid 159260865 159260865,,
2994,65debc72ecfed54a46a2717b8e4f32b13e37ac04,atthias Kramm <kramm@google.com>, 2017-06-16 19:24:19 +0000, , make strict attr checking default  piperorigin revid 159260244 159260244,,
2995,fd5f0a77df73085beafba5dfaefd621b1c6398fe,ebecca Chen <rechen@google.com>, 2017-06-16 19:14:09 +0000, , allow formal type passed function encounter function argument formal type log invalid_typevar error change argument unsolvable matcher crash cover case typevars passed typing.cast longer need specially check allows use setitem_slot instead setitem setting kwargs dictionary since longer worry setitem_slot call call_pytd crashing assertion error also fix couple lint warning test_typing.py  piperorigin revid 159259060 159259060,,
2996,05cf2f3f7c77aa90d97a853fb21306b42c58d419,ebecca Chen <rechen@google.com>, 2017-06-15 21:18:41 +0000, , alias public class instead copying pyi  piperorigin revid 159153195 159153195,,
2997,be442fda5cd11c7fb1e2bb78080e7463775c99ad,artin DeMello <mdemello@google.com>, 2017-06-15 19:47:29 +0000, , fix corner case inference module filepath  piperorigin revid 159140256 159140256,,
2998,e0dbb3e2b5258152fb8a4dfe92470d9fdfde0274,ebecca Chen <rechen@google.com>, 2017-06-15 18:42:24 +0000, , handle unbound super instance better change super.call always check type first argument fix attribute lookup lookup pytdclass super super instance unbound based error message interpreter give super .__new__ subtype super think __new__ method called super.__new__ think lookup need pytdclass super  piperorigin revid 159131784 159131784,,
2999,edebbed791f9f268c72abc435ba5a2654cb500ec,artin DeMello <mdemello@google.com>, 2017-06-15 18:12:38 +0000, , try resolve module alias  piperorigin revid 159127413 159127413,,
3000,f519e1c0183aef407a0f44a5c95b9c3078b1998e,eddy Sudol <tsudol@google.com>, 2017-06-14 21:54:05 +0000, , change generated namedtuple class name displayed error message namedtuple field name display error message instead full field name name generated  piperorigin revid 159029641 159029641,,
3001,e6a759ef2ae1160270770fc0b0b0062cc00a6502,atthias Kramm <kramm@google.com>, 2017-06-14 21:28:59 +0000, , rollback commit reason rollback broke test test_splits.py original change description create new cfg node store_fast fix test case test_flow.py prevents solver single stepping variable assignment inside loop   piperorigin revid 159026042 159026042,,
3002,c4c1cca973ebeee0df86dcedfad4c8656a915932,ebecca Chen <rechen@google.com>, 2017-06-14 21:12:24 +0000, , include name inner class error message  piperorigin revid 159023525 159023525,,
3003,aadeb5f37f5e6f21817f34a9e2ca1e7c28213288,atthias Kramm <kramm@google.com>, 2017-06-14 20:19:34 +0000, , create new cfg node store_fast fix test case test_flow.py prevents solver single stepping variable assignment inside loop  piperorigin revid 159015577 159015577,,
3004,54301ca6259644024f8f66da263e79b61ae4ff19,ebecca Chen <rechen@google.com>, 2017-06-14 18:09:02 +0000, , improve couple error message two error message using to_type directly instead going errorlog print method fix  piperorigin revid 158997573 158997573,,
3005,419c27d3507f6214f139061490e088a2a064746c,atthias Kramm <kramm@google.com>, 2017-06-13 23:18:02 +0000, , x.__new__ return extraneous type instance ignore  piperorigin revid 158914939 158914939,,
3006,4a0624d09927be5e7d8bad190732ba4ff6f38068,artin DeMello <mdemello@google.com>, 2017-06-13 22:59:52 +0000, , fix trying iterate none report none attr attribute error  piperorigin revid 158912560 158912560,,
3007,31efb3730708e50739c5b28cb8ab7fd6ab466307,artin DeMello <mdemello@google.com>, 2017-06-13 22:26:26 +0000, , fix attribute checking none call hascombinations checking is_only_none right thing branch none possibility  piperorigin revid 158907876 158907876,,
3008,32164f13770ab8921d9ef1854db527804fb834fc,atthias Kramm <kramm@google.com>, 2017-06-13 22:22:37 +0000, , add missing attribute int float complex  piperorigin revid 158907364 158907364,,
3009,62730265b32c8646d753ea29b61fe4ba131e74ea,ebecca Chen <rechen@google.com>, 2017-06-13 21:25:40 +0000, , handle bad inplace operator call properly call inplace operator fails log error set return value unsolvable also move right test class  piperorigin revid 158898565 158898565,,
3010,f95f8560db0db8620f5ffebb31fbc78c9e5a2885,ebecca Chen <rechen@google.com>, 2017-06-13 21:18:46 +0000, , set type params unsolvable matching ambiguous empty value  piperorigin revid 158897364 158897364,,
3011,fed034cdb657429c4e588e6c9d59a16be9096af8,eddy Sudol <tsudol@google.com>, 2017-06-13 19:37:16 +0000, , clean closely match documentation default_factory default value none properly assign type argument e.g argument mapping mean resulting defaultdict key value  piperorigin revid 158882486 158882486,,
3012,098fb89fe2db8647a2ca537bb569aa4368fce094,eddy Sudol <tsudol@google.com>, 2017-06-12 22:48:50 +0000, , change take default_factory optional change already present typeshed version collection  piperorigin revid 158776601 158776601,,
3013,cc100eae292a9c6d9232d224198f72370d6cf3a7,ebecca Chen <rechen@google.com>, 2017-06-12 22:33:55 +0000, , catch recursion __init__ fact rather detecting beforehand instead trying guess __init__ called whether call lead simply call catch error guessed beforehand could detect simple case missed complicated one involving subclass  piperorigin revid 158774431 158774431,,
3014,6f4167313fd7ce9e243f622766150ac0410b367d,ebecca Chen <rechen@google.com>, 2017-06-12 21:03:18 +0000, , call __init__ method tell lead recursion error try initialize second instance class node first one first instance incomplete know calling __init__ second instance cause raise instead calling __init__ set true second instance return early call_init also factor code setting true instance type parameter helper method move true line instead isinstance check since subclass attribute  piperorigin revid 158760579 158760579,,
3015,82fcf36246f44229654e56a784630eeaca346094,oogler <noreply@google.com>, 2017-06-12 14:33:40 +0000, , remove mention nocasekeysdict make sense test also found adding call fix test like follows got explanation kramm call infer deep false necessary call method manually  piperorigin revid 158710922 158710922,,
3016,9f1db3d23608e9d2d7fcb3378be5091f2e7c5114,ebecca Chen <rechen@google.com>, 2017-06-09 23:58:35 +0000, , pas container super .instantiate previous change accidentally dropped container argument  piperorigin revid 158581150 158581150,,
3017,7fca89ec5ea7c54c631a4bda2a4319d05eac6cec,ebecca Chen <rechen@google.com>, 2017-06-09 23:42:04 +0000, , fix main_test add two import error caused removal lib2to3 expected error pytree.py print actual error stderr assert regarding errorlog fails  piperorigin revid 158579479 158579479,,
3018,736034442e1243cff307b89b0d3ed435a754bcdc,atthias Kramm <kramm@google.com>, 2017-06-09 22:57:59 +0000, , make parser ignore type ignore class needed file typeshed type ignore mypy parse  piperorigin revid 158574507 158574507,,
3019,1f1889c27efd93c4fdd4212c144714817388bc68,ebecca Chen <rechen@google.com>, 2017-06-09 21:40:07 +0000, , split seen arg analyze_x method two calltracer attribute argument double duty set seen instance set seen function split two private attribute calltracer also includes following change add method ensure __init__ __new__ call always succeed __init__ __new__ call fails report error call made argument simplicity chooses first possible function signature available add test behavior eventually expanded function __new__ __init__ see related bug discussion expanded already short version support keyword argument test assume call fail  piperorigin revid 158564577 158564577,,
3020,26bc65635886223143f1ef42504dc74f823797b4,ebecca Chen <rechen@google.com>, 2017-06-09 18:23:05 +0000, , use instance cache instantiate type type comment instantiated via instantiate performance use instance cache already maintained call  piperorigin revid 158540401 158540401,,
3021,49739eb72c5a116d731e5bc4b4a11c34afb67654,ebecca Chen <rechen@google.com>, 2017-06-09 18:10:54 +0000, , convert def __getattr__ self name allows attribute lookup always succeed add __getattr__ mypy convert moduletype module  piperorigin revid 158538836 158538836,,
3022,aa7ab4bb7c18f595664146321b59343ce9430ab4,oogler <noreply@google.com>, 2017-06-09 17:27:35 +0000, , added protocol class typing.pytd added comment corrected naming  piperorigin revid 158533066 158533066,,
3023,5ed263dbc4226b5ff3febfd07c75c5f07886ecff,ebecca Chen <rechen@google.com>, 2017-06-09 02:23:57 +0000, , isinstance check calling get_full_name cmp_eq get_full_name defined also includes following change try call hasattr non string constant  piperorigin revid 158473263 158473263,,
3024,41a6d1c0fac7570f24ed3bd7e9382277168061f9,ebecca Chen <rechen@google.com>, 2017-06-08 23:16:31 +0000, , tie loose end involving namedtuple get rid invalid namedtuple name longer used add entry invalid namedtuple arg pytype error get rid removed need namedtuple instance protect official name changed convert pytdfunction  piperorigin revid 158456608 158456608,,
3025,ff2b7282dc5ac2042e820cb57954435f5871a763,ebecca Chen <rechen@google.com>, 2017-06-08 22:39:41 +0000, , add missing test add test recently introduced code path realized submission added test also includes following change add support namedtuple subclassing add support thing like class namedtuple ... requires two change giving subclass namedtuple name common rename namedtuple also mean instead generating class tuple ... namedtuple whose official name generate class ...  official name class name longer need namedtuple hidden inside subclass definition appear pyi add namedtuples list generated class separately add computed type  add class capture fact certain case make stronger guarantee object builtin primitive specifically add cmp_eq method take account primitive override __eq__  piperorigin revid 158452106 158452106,,
3026,57b52b4ae25cce66368ab45b5fc5951b73216b31,ebecca Chen <rechen@google.com>, 2017-06-08 22:08:45 +0000, , use parse_string use parse_string create namedtuple instance string long fill class type afterwards namedtuple test little silly since essentially check generated ast equal remaining value verifying absence crash unexpected error  piperorigin revid 158447678 158447678,,
3027,58a6ff31681cfab90599a8f02c5122a976f12af7,ebecca Chen <rechen@google.com>, 2017-06-08 20:15:43 +0000, , add couple namedtuple parsing test add couple parser test use case appear typeshed parser already doe right thing increase test coverage also fix couple typo error message  piperorigin revid 158432091 158432091,,
3028,af9d56c97e57d9377c0de6faf3f05c1575ea5b3f,atthias Kramm <kramm@google.com>, 2017-06-07 00:52:48 +0000, , make io.write accept bytearray  piperorigin revid 158216183 158216183,,
3029,c86eff18be0e8db4f4e5a43ae447e4cb5eec9e61,atthias Kramm <kramm@google.com>, 2017-06-06 23:21:10 +0000, , implement  piperorigin revid 158206313 158206313,,
3030,42141b67537425b96c9129480ab65b3e8ce7a746,ebecca Chen <rechen@google.com>, 2017-06-06 23:11:21 +0000, , make template namedtuple definition test_namedtuple  piperorigin revid 158205149 158205149,,
3031,8af5cefbc9d6de86646bc4ca076042e5c8a119d8,eddy Sudol <tsudol@google.com>, 2017-06-06 22:47:51 +0000, , fix crash setting attribute __new__ motivated setting doe add support __defaults__ fix crash see supporting __defaults__  piperorigin revid 158202223 158202223,,
3032,b4868b37316d1fdd0b927e5e15427c2fac8dd59a,eddy Sudol <tsudol@google.com>, 2017-06-06 22:40:08 +0000, , move is_lazy overlay instead set subclass every overlay is_lazy true really base overlay class also add comment explaining purpose is_lazy  piperorigin revid 158201226 158201226,,
3033,5f7458882e5470b01df9b79fc24ac8c497d3d390,ebecca Chen <rechen@google.com>, 2017-06-06 21:19:33 +0000, , add __new__ back namedtuple instance turn need __new__ since subclass often want override also add time.pytd since typeshed time.pyi defines __init__ instead __new__ struct_time namedtuple pytype unhappy __new__ __init__ signature match  piperorigin revid 158189031 158189031,,
3034,92db770e643c64fa75c549c0f55275dd306cb527,ebecca Chen <rechen@google.com>, 2017-06-06 20:49:40 +0000, , generate type parameter __new__ previously class defined __new__ method called object.__new__ via super ended definition like class object def __new__ issue subclassed another module subclass instantiated since __new__ produce instance particularly troublesome namedtuple class namedtuple ... def __new__ ... ... common pattern namedtuple instance pytdclass x.__new__ behaves _x.__new__ another module fixed inserting bounded type parameter generated pyi __new__ namedtuple pattern still work reason unrelated change also includes following change add hasattr support splitting  add overlay abc module implement decorator add check avoid analyzing abstract method unless called using super  piperorigin revid 158184267 158184267,,
3035,24d9b3675d8d5752d8714544178dc9a729df8752,eddy Sudol <tsudol@google.com>, 2017-06-05 19:26:53 +0000, , add exception handling error raised emit python compiler error raised  piperorigin revid 158046419 158046419,,
3036,f77a62a8431482d3b868a347a2f3927beae8c12a,atthias Kramm <kramm@google.com>, 2017-06-02 15:39:51 +0000, , say unsupported namedtuple  piperorigin revid 157834126 157834126,,
3037,dec8e700059212a94a3574e7568d12b685130cc7,ebecca Chen <rechen@google.com>, 2017-06-02 00:34:54 +0000, , handle class better comparison  piperorigin revid 157786892 157786892,,
3038,d6b058ad1799c43cd57ce9ef92a0afa067758379,atthias Kramm <kramm@google.com>, 2017-06-02 00:25:57 +0000, , allow initialize int float complex unicode string  piperorigin revid 157786056 157786056,,
3039,d477fa0d98fd4d0ceb5adedb33bc4819d19f40ed,ebecca Chen <rechen@google.com>, 2017-06-01 23:37:25 +0000, , add missing attribute namedtuples generated pyi file add proper __init__ well placeholder constant e.g. _fields ... type attribute also includes following change allows union type base class e.g class union considered subclass  piperorigin revid 157780577 157780577,,
3040,f2cc0dc2542242c3f96f9b033925e8b62fd77ded,eddy Sudol <tsudol@google.com>, 2017-06-01 21:03:03 +0000, , change class used namedtuples ensure matching work due caching work namedtuple class matching add kludge allows caching work still giving benefit specialized namedtuple class  piperorigin revid 157758782 157758782,,
3041,2317d379b7941f6e5fd3fb1445908a49624dae50,atthias Kramm <kramm@google.com>, 2017-06-01 20:56:01 +0000, , fix crash retrieving attribute callable also add func_name pytd definition callable since function even lambda seem  piperorigin revid 157757727 157757727,,
3042,e377017c3ddc4401333ca51ff1f3d069d7b2aa08,ebecca Chen <rechen@google.com>, 2017-06-01 20:19:10 +0000, , make use __init__ instead __new__ tuple actually override __new__ __init__ pretend changing tuple constructed tricky due definition def __init__ self iterable _t2 none self tuple _t2 ... write def __new__ iterable _t2 tuple _t2 ... pytype mistakenly creates tuples instantiating subclass tuple override __new__ hand def __new__ type iterable _t2 cause lose _t2 instead pretend namedtuple __init__  piperorigin revid 157752672 157752672,,
3043,04a0a82b052c14c74d52d4bc72d35f5f71ae17c4,ebecca Chen <rechen@google.com>, 2017-05-31 23:33:07 +0000, , directly fill subst matching unknown abstract matcher value left previously instantiating type right continuing matching order fill subst caused problem e.g. tuple str unicode str unicode match tuple anystr anystr instead use method find type parameter need added subst without matching also includes following change handle super ... .__new__ __init__ carefully object.__new__ object.__init__ called via super method accepts ignores number extra argument iff one method overridden example following legal class foo object def __new__ return super foo .__new__ def __init__ self pas following class foo object def __new__ return super foo .__new__ error change add class return either normal pytd definition object.__new__ __init__ nativefunction implementation swallow extra argument also add skipped test generating reloading namedtuple definition work yet tuple definition override object.__init__ need either switch tuple __new__ fix everything switch break would principled thing add __init__ definition incorrect easy maybe good enough  piperorigin revid 157652139 157652139,,
3044,9985bd0c2d526056ae2493b9fee51a4d7df9760b,ebecca Chen <rechen@google.com>, 2017-05-31 21:48:42 +0000, , fix syntax error typing.py  piperorigin revid 157638267 157638267,,
3045,196e358dbb67688aa2ad7f25b7dd1c23d7fb6588,artin DeMello <mdemello@google.com>, 2017-05-31 21:41:17 +0000, , fix tuples contained container tuple element type parameter container type parameter pas container argument instantiating element otherwise earlier always passing container  piperorigin revid 157637195 157637195,,
3046,fb0d8bfbdb13bbcd9f735c75b4bfac65a46bbcf8,eddy Sudol <tsudol@google.com>, 2017-05-31 21:28:40 +0000, , fix bug related multiple binding argument typing.cast  piperorigin revid 157635350 157635350,,
3047,67cb2c3ad674e463ee2495ae8289d7e5c3eef46d,eddy Sudol <tsudol@google.com>, 2017-05-31 20:20:50 +0000, , add check using typevars argument typing.cast  piperorigin revid 157625665 157625665,,
3048,e395d98b49066f8b761fc3d57fb0942ec408a755,ebecca Chen <rechen@google.com>, 2017-05-31 16:40:03 +0000, , cut useless information annotation error message  piperorigin revid 157596566 157596566,,
3049,8a93ce49c0c9fad1af7f6289d709b399d07a6636,ebastian Steenbuck <steenbuck@google.com>, 2017-05-31 12:02:23 +0000, , create index classtype node avoid ast visit create list classtype node ast serialization list used deserialization avoid visit whole ast instead classtype node visited fill .cls pointer one classtypes found changed type visit happen serialization deserialization use different asts dependency whole ast visited visit necessary exchange node without visiting parent  piperorigin revid 157574451 157574451,,
3050,c08ddf963532fe9b2cd6cd9430c0196b32e24fcb,eddy Sudol <tsudol@google.com>, 2017-05-30 20:32:37 +0000, , add pytype builtin typing.pytd  piperorigin revid 157504407 157504407,,
3051,2c0364f3636f779931cdc7fb4bbcbd1cf01ea076,eddy Sudol <tsudol@google.com>, 2017-05-30 17:17:26 +0000, , add newlines field typing.io  piperorigin revid 157478421 157478421,,
3052,70398b3a180b88fd290ab5757445ddbebaf42c52,ebecca Chen <rechen@google.com>, 2017-05-27 01:16:04 +0000, , analyze class even __new__ method contains error sometimes __new__ return something besides instance current class unintentional method contains type error case still want call __init__ analyze class method  piperorigin revid 157284210 157284210,,
3053,699131d6361efc6a4ea8b7fc2067f06c7b4abd60,ebecca Chen <rechen@google.com>, 2017-05-26 23:29:06 +0000, , simplify typenew.call _match_args raised catching calling invokes _match_args raise instead catch first time also includes following change move builtins abstract.py file ideally make single builtins overlay thing pretty messy right three type builtins dictionary normal builtins preloaded builtins __builtin__.py special builtins like clean point moving definition plus typenew separate file also fix simple lint error vm.py  piperorigin revid 157276552 157276552,,
3054,c9c8dcf5570f717ecfd17f7dcb0f31ea93cfb60f,ebecca Chen <rechen@google.com>, 2017-05-26 17:29:38 +0000, , call __new__ instantiating class analysis change ... call class __new__ method instantiation class superclass overridden object.__new__ code needed already exists needed pulled helper method logic detect whether __new__ method equal object.__new__ get_special_new part created dummy method argument called method argument live respectively seen argument added place prevent __new__ analyzed twice type argument x.__new__ longer printed pyi file type type  piperorigin revid 157235182 157235182,,
3055,0e26c4a3cfc001edd4f7ad21aeda44d2769f4db2,ebastian Steenbuck <steenbuck@google.com>, 2017-05-26 15:18:28 +0000, , mark deserialized module clean remove call visitor later control flow cause large percentage visitnode run module many import 100 also includes following change stop treating typingoverlay special case add typing typingoverlay overlay map vm.py change infer.py stop using convert.typing remove add ast attribute abstract.module  piperorigin revid 157221926 157221926,,
3056,26f2a5b67b3dfcc6b72734d03cb033db84799df8,ebecca Chen <rechen@google.com>, 2017-05-25 20:39:02 +0000, , improve definition __builtin__.int int take two argument base specified first argument str unicode http docs.python.org library functions.html int also includes following change add overlay class generalize overlay pattern pytype overlay act layer pytype underlying module providing support member module easily expressed pytd file  piperorigin revid 157146772 157146772,,
3057,b8ee983fc6b10ff94c99458f4b9c3d2a59c894fa,atthias Kramm <kramm@google.com>, 2017-05-25 04:04:16 +0000, , warn code import namedtuple typing  piperorigin revid 157074451 157074451,,
3058,374a8fb903543b1da21ab228a6f378608bde26c9,ebecca Chen <rechen@google.com>, 2017-05-24 21:49:55 +0000, , bit clean infer.py delete unused method_name arg create_argument always put node argument first method remove unused method  piperorigin revid 157040724 157040724,,
3059,5eef528d945397437ba75e1cab83cdec5555bf8b,eddy Sudol <tsudol@google.com>, 2017-05-24 20:21:54 +0000, , fix also includes following change add support add intercept call updated vm.py attribute.py etc use added error mismatched namedtuple name fixed bug output.py related outputting object updated test  make attribute error module module attribute error  piperorigin revid 157028182 157028182,,
3060,182492ece771b005adb5807b2457ea5563821833,ebecca Chen <rechen@google.com>, 2017-05-23 21:44:31 +0000, , set _error_subst attribute instead raising raising exception caused abort matching early type checking union make substitution stored error attribute matcher instead  piperorigin revid 156913762 156913762,,
3061,6b85c8c8f9abe8467f6e96683fd780ab42f372ed,atthias Kramm <kramm@google.com>, 2017-05-23 20:51:59 +0000, , allow call cfg node  piperorigin revid 156906028 156906028,,
3062,951b3e2366224b991d54570095dc59c6cd847d87,ebecca Chen <rechen@google.com>, 2017-05-23 02:08:29 +0000, , use bound rewrite couple definition  piperorigin revid 156817233 156817233,,
3063,30c494ff57ca3860d16ebbd0d75884bfd85233bc,ebecca Chen <rechen@google.com>, 2017-05-23 02:05:56 +0000, , check bound argument typing.typevar bound useful defining __new__ e.g. typevar bound class object def __new__ think need builtins order fix bug involving __new__ __init__ arg count  piperorigin revid 156817064 156817064,,
3064,5f619e2256def4dcbd9d36df785d7dbaef8815cd,ebecca Chen <rechen@google.com>, 2017-05-22 19:26:44 +0000, , instantiate unbound type parameter argument checking  piperorigin revid 156770000 156770000,,
3065,4272c80a69f54d5abb769830caf47869c112c0bf,ebecca Chen <rechen@google.com>, 2017-05-19 23:06:35 +0000, , check type args kwargs argument pytd function function pyi file defined e.g. def args int kwargs float ignoring argument type use type two way function call like key 2.0 check positional args ints named args float call like key 2.0 check args.starargs iterable int mapping str float also fix mistake definition dict.update exposed change  piperorigin revid 156608803 156608803,,
3066,8a754126c8bf6ffdd453ef709c9ed040a8f40905,ebecca Chen <rechen@google.com>, 2017-05-19 19:24:44 +0000, , split several method refactoring preparation better type checking args kwargs argument move code match_args helper method move function tested test_pyi.py testsignature test  piperorigin revid 156582948 156582948,,
3067,717e636c9856704e3abb09c9dbbff7ca2a71d037,ebecca Chen <rechen@google.com>, 2017-05-19 18:54:57 +0000, , always print keyword argument order error message  piperorigin revid 156579475 156579475,,
3068,36e04ea786238f072b59c7b2174e5766d0585746,ebecca Chen <rechen@google.com>, 2017-05-19 18:41:23 +0000, , define one canonical regexp anonymous parameter errors.py pytd type_match.py  piperorigin revid 156577872 156577872,,
3069,91c41826e7c829aa3445f6b02f51cb92127f2145,artin DeMello <mdemello@google.com>, 2017-05-18 00:34:56 +0000, , add testcase failing pytype check  piperorigin revid 156378531 156378531,,
3070,1ee88c8d6f623a032f5b2f3e43ae9c039170109d,ebecca Chen <rechen@google.com>, 2017-05-17 22:45:00 +0000, , print type varargs kwargs change output.py include type varargs kwargs tweak printvisitor tuple dict unnecessarily imported pyi file  piperorigin revid 156365263 156365263,,
3071,a8600524a65387eda458e8770cb7285b78415f8b,ebecca Chen <rechen@google.com>, 2017-05-17 20:04:58 +0000, , handle better compute_mro defines __eq__ __ne__ compute_mro work properly fix couple mro error test fix bug convert.py crashed trying create base class circular inheritance  piperorigin revid 156343264 156343264,,
3072,73b8b90f679f0896fcdea76f72b2989e4a7dd781,ebecca Chen <rechen@google.com>, 2017-05-17 18:31:42 +0000, , fix bug from_pytd need set false parser already change argument type starargs starstarargs argument default none  piperorigin revid 156331768 156331768,,
3073,8f623fdd59b444b1d9545a66e7bca3a3c4947e8d,ebecca Chen <rechen@google.com>, 2017-05-17 17:58:56 +0000, , add stack trace tricorder message  piperorigin revid 156327269 156327269,,
3074,de5ecddf674efc6ef1ae27f5c85f0d7037416376,ebecca Chen <rechen@google.com>, 2017-05-17 17:33:43 +0000, , stop specifying filename test used case omitting filename test could cause spurious name error due type comment attributed wrong file fixed ago stop specifying filename test.py test depended feature test removed entirely  piperorigin revid 156323834 156323834,,
3075,23ab2fe7e2dac0d4aafdce6e600867fe054a5da5,ebecca Chen <rechen@google.com>, 2017-05-17 17:30:03 +0000, , remove switch deletes former also deletes since one use obviated switch  piperorigin revid 156323383 156323383,,
3076,d79255cd32aa1645ebadcf45ec3d980004ad6620,ebecca Chen <rechen@google.com>, 2017-05-15 23:47:23 +0000, , add stack trace error message  piperorigin revid 156122153 156122153,,
3077,41f5a0474c3b5c2e8aed3ae59d8661359d17201d,ebecca Chen <rechen@google.com>, 2017-05-15 22:26:46 +0000, , remove mro.py one function file used anywhere short enough put abstract.py also remove mro_test.py tested unused function  piperorigin revid 156112491 156112491,,
3078,f1353f1a5558ce484d18407907e629a4cc942827,ebecca Chen <rechen@google.com>, 2017-05-15 22:21:02 +0000, , minor cleanup errors.errorlog delete error_names method inline one use make sorted_errors private use filename lineno property sorted_errors instead accessing private attribute directly  piperorigin revid 156111701 156111701,,
3079,4d2afe187044dfac8a53f016940f53c643adb699,ebecca Chen <rechen@google.com>, 2017-05-15 19:51:38 +0000, , remove two unused attribute errors.error  piperorigin revid 156090994 156090994,,
3080,4efc19797b0c626516dca6258c434698fb3eae9f,artin DeMello <mdemello@google.com>, 2017-05-15 19:33:49 +0000, , add support new opcodes python3.6  piperorigin revid 156088858 156088858,,
3081,22f3684703ca31c2b81ae3e9e7a68119cf1d60a4,ebecca Chen <rechen@google.com>, 2017-05-15 18:38:52 +0000, , fix handle multiple error name line change handle errorlog two different error happen share name line number also switch iterating error using better match actual pytype output make assertion error message little prettier  piperorigin revid 156081481 156081481,,
3082,ea6ca355ab9c9499eb82d4445ff7a856ba575f81,ebecca Chen <rechen@google.com>, 2017-05-12 23:45:57 +0000, , fix caching bug buildclass.call fix caching local change expose bug implementation python class built new local dictionary created member f_locals attribute still point old local happen globals top level class analyzed member added globals fix bug buildclass.call set interpreter function f_locals new local  piperorigin revid 155927074 155927074,,
3083,de7d4549a382d2778676a2cd33f637317e878b4e,ebecca Chen <rechen@google.com>, 2017-05-12 22:15:19 +0000, , generate traceback string frame passed generates traceback string information three frame stack save string _traceback attribute unused later added error.__str__ previously thought would need save method name new attribute frame turn method name  piperorigin revid 155917612 155917612,,
3084,89f856d5fa86d6c5db092c79390920b0634317d4,eddy Sudol <tsudol@google.com>, 2017-05-12 19:39:20 +0000, , add additional nested lambda testcase  piperorigin revid 155898745 155898745,,
3085,e6281d3e2b12322d0b0b0359f1fb9268511c6fb4,ebecca Chen <rechen@google.com>, 2017-05-12 19:16:49 +0000, , improve improves setting necesssary handling non dictionary value better remove boolean return value used anything add slot abstract.dict slot call custom update possible otherwise fall back call_pytd  piperorigin revid 155896428 155896428,,
3086,fc87024a233811641d008d4022956492c18e539c,eddy Sudol <tsudol@google.com>, 2017-05-12 19:03:00 +0000, , fix hashing frame local member make_function make unknown produce fullhash member add infinite loop testcase old hash method incorrect non argument non local variable member f_locals hashed  piperorigin revid 155894846 155894846,,
3087,23214bbc0841135d50600f60f29f152ab9f6ade1,ebecca Chen <rechen@google.com>, 2017-05-12 01:11:47 +0000, , handle dictkeymissing error  piperorigin revid 155822159 155822159,,
3088,bce1de7969079732aa85faa8e99a6af97bfe86ae,ebecca Chen <rechen@google.com>, 2017-05-12 00:27:59 +0000, , get rid two unittest.skip slipped crack first time around breaking large change several part forgot include file  piperorigin revid 155818726 155818726,,
3089,e54eeca6b92432d20c70b5a5ce53a3343bff6043,ebecca Chen <rechen@google.com>, 2017-05-12 00:02:31 +0000, , make work constant  piperorigin revid 155816169 155816169,,
3090,2178062dbbd91371cff8b3b1dc2381bd26892780,ebecca Chen <rechen@google.com>, 2017-05-11 21:22:18 +0000, , fix skipped test  piperorigin revid 155796137 155796137,,
3091,73109e905903b6ecdf5b2b5a9f465a6f1cf6ba32,ebecca Chen <rechen@google.com>, 2017-05-11 19:14:58 +0000, , remove  piperorigin revid 155779857 155779857,,
3092,91c2fbc237b19421e92f2023c84e7447550fa9f2,ebecca Chen <rechen@google.com>, 2017-05-10 23:23:16 +0000, , give classmethod staticmethod full pyi output  piperorigin revid 155689849 155689849,,
3093,f4e97a8655c88bd6db913aa6211c4575a126970a,ebecca Chen <rechen@google.com>, 2017-05-10 18:08:29 +0000, , make error take stack frame instead opcode every error previously took opcode take stack frame simply get opcode last frame throw away rest information able pas vm.frames stack almost everywhere exception opcode error current opcode make dummy stack containing single frame error opcode lateannotation make copy stack since vm.frames mutable  piperorigin revid 155650470 155650470,,
3094,ef76ca2ac864e946e05001ce8f15ea4867c8ad04,ebecca Chen <rechen@google.com>, 2017-05-10 07:27:32 +0000, , turn property constant generating pyi turn property constant using return type getter function assumes always convert pytd.function let simplify existing code _class_to_def pull code related return type conversion standalone method reuse  piperorigin revid 155599708 155599708,,
3095,8730da6e156780471bc94ed4519f2bfd0f957bcd,artin DeMello <mdemello@google.com>, 2017-05-09 23:29:12 +0000, , fix running compile_to_pyc subprocess returning error threw encoding exception  piperorigin revid 155568862 155568862,,
3096,b44e5d2e8ba9c0e70244634110d3e58b41284a12,ebecca Chen <rechen@google.com>, 2017-05-09 20:35:00 +0000, , improve way parser.py computes property type previously parser saw foo.setter def foo self str none ... assumed foo type str actually know body method doe argument change parser get property type property foo.getter use union property type see rather taking last one  piperorigin revid 155545055 155545055,,
3097,3756d7d98ab5f4eba8e6713663317b20dfff46da,ebecca Chen <rechen@google.com>, 2017-05-09 20:07:59 +0000, , simplify parser.py code handling method property change _nameandsig store one decorator rather list break piece helper function affec parsing output  piperorigin revid 155541959 155541959,,
3098,cb9bd27085e42993ff0911fac753a48f5fcb64ba,artin DeMello <mdemello@google.com>, 2017-05-09 18:13:37 +0000, , support new wordcode format python3.6  piperorigin revid 155528082 155528082,,
3099,d7e4103cc2847cce87ff2e6c4fcc30afcb5c3d2a,atthias Kramm <kramm@google.com>, 2017-05-08 21:16:32 +0000, , rollback commit reason rollback caused several timeouts ooms original change description copy binding directly instead making origin word creating variable chain throw away old variable need anymore lower number variable keep memory   piperorigin revid 155425948 155425948,,
3100,fbdadc4f66f0de745623ba273bb36a0f82d8a420,atthias Kramm <kramm@google.com>, 2017-05-08 21:15:01 +0000, , rollback commit reason rollback caused together 155260644 several timeouts ooms original change description remove node several pastevariable call   piperorigin revid 155425715 155425715,,
3101,f024377294428f312e6b52674b035ee77129e4ac,ebecca Chen <rechen@google.com>, 2017-05-08 17:49:55 +0000, , move cmp repr __builtin__.py  piperorigin revid 155398038 155398038,,
3102,00dc97d6c13aaa1d7f5c54ec96f0375a5a659ea7,atthias Kramm <kramm@google.com>, 2017-05-08 13:42:19 +0000, , speed test break builtins2.py piece  piperorigin revid 155373330 155373330,,
3103,d473f6feb50dd02386d1b4981543d465b0d8a381,atthias Kramm <kramm@google.com>, 2017-05-06 00:45:07 +0000, , remove node several pastevariable call  piperorigin revid 155260742 155260742,,
3104,5274e45f11204e46ad30ad670270c532fdaa2677,atthias Kramm <kramm@google.com>, 2017-05-06 00:43:32 +0000, , copy binding directly instead making origin word creating variable chain throw away old variable need anymore lower number variable keep memory  piperorigin revid 155260644 155260644,,
3105,3e3983d3d31e688f02753337cb7f21ece3d565a0,ebastian Steenbuck <steenbuck@google.com>, 2017-05-05 13:32:03 +0000, , fix serialize_ast handling __init__.py file relative import pytype expects __init__.py file inferred module name suffix .__init__ marker needed resolution relative import reference resolution __init__.py file expected name module e.g foo instead foo __init__ name change resolved ensurename method far save ast visit name changed serialization  piperorigin revid 155191020 155191020,,
3106,62143b2d53b8dfb5f49d75223a1301b0c6708771,ebastian Steenbuck <steenbuck@google.com>, 2017-05-05 08:46:00 +0000, , extend pickled file detection also recognize file format suffix string format  piperorigin revid 155175922 155175922,,
3107,816fba8fc88f0582a00306185420bc52b18cbefc,ebastian Steenbuck <steenbuck@google.com>, 2017-05-05 08:45:17 +0000, , clarify module name documentation around __init__.py file  piperorigin revid 155175889 155175889,,
3108,07296d12ab6c3d48aec76fac398eee829ccbf8bd,artin DeMello <mdemello@google.com>, 2017-05-04 23:48:23 +0000, , add new opcodes python3 add separate opcode map python3.5 python3.6 potentially incomplete implementation new opcodes  piperorigin revid 155144224 155144224,,
3109,652685e2307b475ee7bad8a9b585b30d8aa2507f,ebecca Chen <rechen@google.com>, 2017-05-04 22:24:03 +0000, , remove couple thing used checking python pyi get rid couple thing forgot first time around missing definition error opcode argument check_return  piperorigin revid 155134704 155134704,,
3110,ac580b9d2a089ecee6648f9fa2c547f55272702d,ebecca Chen <rechen@google.com>, 2017-05-04 21:38:55 +0000, , remove option check python file pyi file  piperorigin revid 155128496 155128496,,
3111,eec2fe5eec5285f41c43972abc4b84cdabaf22b7,ebecca Chen <rechen@google.com>, 2017-05-04 21:33:01 +0000, , unskip couple decorator test work  piperorigin revid 155127650 155127650,,
3112,f5cbe558ed7c9171f98544596643bfb3f26baca4,ebastian Steenbuck <steenbuck@google.com>, 2017-05-03 23:39:07 +0000, , use unpickle change unpickling code use case instead special casing special case know needed discover special case ast structurally modified dependency resolution way predicted inference includes type external dependency changing inference loading inferred ast external module using __getattr__ rule known inference time change performance impact one iteration ast needed due change visitor iteration case structurally modify ast  piperorigin revid 155021669 155021669,,
3113,b16efa2ed10d2748cb1c076f585fc8b137cf4007,ebecca Chen <rechen@google.com>, 2017-05-03 21:47:33 +0000, , handle __get__ properly attribute accessed super  piperorigin revid 155006940 155006940,,
3114,39e40b9ac086c19b4b1fe84c8a27e753f74c7bbe,ebecca Chen <rechen@google.com>, 2017-05-02 22:34:06 +0000, , support iter container support cmp_in cmp_not_in iterable without __contains__ method evaluating operator object without __contains__ attribute interpreter get object iterator doe comparison result calling next simply attempt get iterator return abstract boolean value upon success i.e. skip next call  piperorigin revid 154889660 154889660,,
3115,da0f30c17e2cb352d23c3ef8f8032f539ed744b2,ebecca Chen <rechen@google.com>, 2017-05-02 21:38:35 +0000, , delete use instead  piperorigin revid 154881633 154881633,,
3116,8e63d6e777fd301e96f532a38ed2669653e2640a,atthias Kramm <kramm@google.com>, 2017-05-02 21:35:28 +0000, , make log.trace variable allocation cfg.py consume bit memory  piperorigin revid 154881147 154881147,,
3117,7c3e4a765edbc990ba02d5a341b86f6ebe4fca22,ebastian Steenbuck <steenbuck@google.com>, 2017-05-02 16:23:43 +0000, , rollback commit reason rollback broke pytype original change description use unpickle change unpickling code use case instead special casing special case know needed discover special case ast structurally modified dependency resolution way predicted inference includes type external dependency changing inference loading inferred ast external module using __getattr__ ...   piperorigin revid 154839974 154839974,,
3118,c694317e225238b030365fcba4f3f2661878ca68,ebastian Steenbuck <steenbuck@google.com>, 2017-05-02 15:05:38 +0000, , use unpickle change unpickling code use case instead special casing special case know needed discover special case ast structurally modified dependency resolution way predicted inference includes type external dependency changing inference loading inferred ast external module using __getattr__ rule known inference time change performance impact one iteration ast needed due change visitor iteration case structurally modify ast  piperorigin revid 154832228 154832228,,
3119,6c8f0dba5168608b07b47e0f3f1fbd494415fb7c,atthias Kramm <kramm@google.com>, 2017-05-01 22:36:14 +0000, , remove  piperorigin revid 154770326 154770326,,
3120,3e0cb45795908d6fbfdab4516cf25ccd7d182d8b,atthias Kramm <kramm@google.com>, 2017-05-01 22:28:53 +0000, , fix snapshot metric construction snapshot enabled need make sure constructor argument passed via get_metric match actual constructor  piperorigin revid 154769339 154769339,,
3121,65c4cfdfb74d502b5c51f5a77798c74f2cf88799,atthias Kramm <kramm@google.com>, 2017-05-01 21:41:41 +0000, , log level also log line number current call stack  piperorigin revid 154762679 154762679,,
3122,4683e89a7e1ada2ce193104135968ce2a773ccfb,eddy Sudol <tsudol@google.com>, 2017-05-01 21:07:15 +0000, , add memory snapshot metric pytype enable memory snapshot pytype.bzl must set true pytype must built python mode unstable least tracemalloc accepted main python 2.7 branch add memory snapshot command line option pytype option used enable memory snapshot particular pytype run  piperorigin revid 154757636 154757636,,
3123,4d1d7aa647660185cce2db491fecd0b93796dc30,atthias Kramm <kramm@google.com>, 2017-05-01 18:00:53 +0000, , add needed typeshed sys.pyi  piperorigin revid 154733464 154733464,,
3124,f510671311ba2e35ef00344cb7ea7f44ff0f1403,atthias Kramm <kramm@google.com>, 2017-05-01 17:40:07 +0000, , allow ignore import putting type ignore  piperorigin revid 154730608 154730608,,
3125,8a4a3e01af74480cd62acb8daa0e2c9700dadf09,atthias Kramm <kramm@google.com>, 2017-05-01 16:17:11 +0000, , get rid sys.pytd let use typeshed definition instead  piperorigin revid 154722009 154722009,,
3126,3c74b4880f037a1739e1864e3406af536290c677,ebecca Chen <rechen@google.com>, 2017-04-28 20:33:29 +0000, , add case  piperorigin revid 154576160 154576160,,
3127,14f17fb14a35e1304f6dd2929a85adbacf6e7626,ebecca Chen <rechen@google.com>, 2017-04-28 20:31:10 +0000, , remove subst argument bad_matches previous change introduced bug overwriting subst none bad match found test catch error show iterate view particular order since bad_matches never called subst argument remove  piperorigin revid 154575843 154575843,,
3128,e9cd5cf4dc84d1609ae6a41dc0412b47bb4320ff,ebecca Chen <rechen@google.com>, 2017-04-28 18:04:46 +0000, , catch bad_matches  piperorigin revid 154559112 154559112,,
3129,4fbbfee3b1b65c0ef2f8277b8146394ec855d5d6,ebecca Chen <rechen@google.com>, 2017-04-28 02:01:43 +0000, , check argument calling callable instance add slot __call__ check argument length type positional argument allowed fix bug considered e.g. float str common superclass inherit generic factor snippet get name unnamed positional argument str helper function function.py change return type callable typing.pytd _ret  piperorigin revid 154499190 154499190,,
3130,5b21697b2b815dabe5021d9d2bddbd786ffe7b18,ebecca Chen <rechen@google.com>, 2017-04-27 21:00:23 +0000, , fix optimization handling callabletype  piperorigin revid 154466179 154466179,,
3131,ecfbf5e9e66338839c390fa7e7eb4af9cf86912e,ebecca Chen <rechen@google.com>, 2017-04-27 20:43:19 +0000, , handle better matching function callable deal case matched typeparameter require two parameter match exactly treat argument return type identically case put parameter name message make debugging easier  piperorigin revid 154463891 154463891,,
3132,149d572e4196f759731d611d4e93cd8a936dff26,atthias Kramm <kramm@google.com>, 2017-04-27 20:42:21 +0000, , use approximate splitting solving strict attr checking using best way propage option based hope soon get rid approximate strict attr checking make default false true respectively  piperorigin revid 154463743 154463743,,
3133,6d89429a14cb962a71692509477910b815105a82,ebecca Chen <rechen@google.com>, 2017-04-27 17:48:16 +0000, , make matcher.py deterministic previously result depended order view computed value type parameter say optional str sometimes got str substitution time none  piperorigin revid 154441518 154441518,,
3134,1d1144e2da30f657f1c414d4c3d64fbf646d5805,ebecca Chen <rechen@google.com>, 2017-04-27 17:39:57 +0000, , implement matching type callable also tweak matcher.py match every option union type parameter filled supposed  piperorigin revid 154440290 154440290,,
3135,2e1d41eeca3d216bc7a2269c20ded15f0f99f4fd,ebecca Chen <rechen@google.com>, 2017-04-27 17:36:08 +0000, , finish matching callable instance callable check argument length argument type undoes previous change made instantiate individual argument type callable anticipated would needed matching turned wrong also make small change output.py callable instance continue printed correctly error message  piperorigin revid 154439811 154439811,,
3136,4ebd2315f9e9b46da97c5aa1f9cd483a71463224,atthias Kramm <kramm@google.com>, 2017-04-27 17:31:40 +0000, , fix test broken new typeshed parsing pytree.py expecting two import error module exist typeshed  piperorigin revid 154439224 154439224,,
3137,66829e35576975ed77215e2446cc0900025938a2,ebastian Steenbuck <steenbuck@google.com>, 2017-04-27 14:03:33 +0000, , make namedtuple parsing independent backticks pyi transforms def union inspect argspec tuple list ...  def union inspect tuple list ... notice backticks new pyi inserted printvisitor parser  fix problem deserialization happens serialization code assumes name modified parsing coupling namedtuples backtick removal modified name parsing removing backticks make dedup code work failing alias deduped name without backticks would exist improves pyi readability clearly marking pyi work pytype improves pytype code decoupling namedtuple code backtick removal code parser  piperorigin revid 154418269 154418269,,
3138,3880ba43239d0cdb74e9f432a22fe728b57c50fd,ebecca Chen <rechen@google.com>, 2017-04-26 18:11:34 +0000, , check return type matching callable instance callable also fix bug printing callable instance  piperorigin revid 154319444 154319444,,
3139,d66202b6f2c49f427f6fcf1223b72be4168817c4,ebecca Chen <rechen@google.com>, 2017-04-26 17:41:38 +0000, , use annotation converting boundfunction pytdfunction callable also move get_signatures matcher.py abstract.py output.py use get signature converting function callable object  piperorigin revid 154314948 154314948,,
3140,181b0b5a85054a1284e5e349a92159417ed9838c,ebecca Chen <rechen@google.com>, 2017-04-26 17:33:29 +0000, , use annotation printing callable add method turning used outputting pyi printing error message  piperorigin revid 154313820 154313820,,
3141,594258d2f66d0790577bb94b3f7266b4bd7b2778,artin DeMello <mdemello@google.com>, 2017-04-25 20:05:52 +0000, , add new matrix multiplication opcodes  piperorigin revid 154209945 154209945,,
3142,d678aab0c59159edef83883d1d7613001715eb7b,ebecca Chen <rechen@google.com>, 2017-04-25 20:02:06 +0000, , remove requirement least two params sure thought putting nothing placeholder argument good idea simplifies code removing requirement stop incorrectly simplifying tupletype callabletype parameter length meaningful even parameter  piperorigin revid 154209434 154209434,,
3143,1e53e5c32e40ce28cf009a461ad38a8d708151ff,ebecca Chen <rechen@google.com>, 2017-04-25 00:36:19 +0000, , support matching callable completes todo matcher.py callable stop allowing specifying type self matching boundfunction callable since function actually accept self argument doe matching even annotation exist type parameter filled properly  piperorigin revid 154121665 154121665,,
3144,0fd88bcefac0f376c0573d6ebbc048c7cd523fad,ebecca Chen <rechen@google.com>, 2017-04-24 23:47:11 +0000, , check argument type abstract matcher make matcher.py check argument type matching function callable flip actual expected argument type like type_match.py flip order collect type parameter substitution properly add exception use get right expected type type parameter saving previous subst compute_subst work type parameter appears twice one annotation e.g. def callable  piperorigin revid 154116067 154116067,,
3145,760399144a7dc6b9bd9784caf639c2c674e80a89,artin DeMello <mdemello@google.com>, 2017-04-24 20:14:02 +0000, , add new magic number python 3.5 3.6  piperorigin revid 154086984 154086984,,
3146,d51b9858fe18f4b163704b343504703445f56b8f,ebecca Chen <rechen@google.com>, 2017-04-24 19:50:41 +0000, , add another _convert function matcher_test add another helper function conversion pytd abstract value call every time create pytdfunction testing also make as_instance optional argument  piperorigin revid 154084121 154084121,,
3147,391f392a1658bdbfd06007b8b27e4937291ad860,ebecca Chen <rechen@google.com>, 2017-04-24 16:01:08 +0000, , make abstract matcher check argument length callable matching fails function many required argument e.g. def ... callable enough allowed argument e.g. def none ... callable int int int boundfunction specifying type self callable optional  piperorigin revid 154054739 154054739,,
3148,3a77efe35b991ac1cb1a440cfa6d237d9a8901cf,ebecca Chen <rechen@google.com>, 2017-04-24 15:52:34 +0000, , store abstract version parameter used simpler store make sense switch  piperorigin revid 154054017 154054017,,
3149,ac7df8d2b1225d9989f4b940aaf040c3cabb8b34,ebecca Chen <rechen@google.com>, 2017-04-21 23:57:09 +0000, , bind imported function object  piperorigin revid 153887866 153887866,,
3150,6cd792562f584ee42c53165224f305c6a1d80139,ebecca Chen <rechen@google.com>, 2017-04-21 22:12:06 +0000, , get rid super error report wrong arg count instead  piperorigin revid 153877191 153877191,,
3151,4ad5a5e6f63bc93fbb2ecc352aa9d633947a0b96,ebecca Chen <rechen@google.com>, 2017-04-21 03:43:30 +0000, , implement matching return type pytdfunction add infrastructure needed match function doe one simplest piece matching return type pytdfunction still need matching argument boundfunction well print something better plain callable error message  piperorigin revid 153790077 153790077,,
3152,8b9272cc2952de1abe062839b1890c8a312fdce2,atthias Kramm <kramm@google.com>, 2017-04-20 23:17:02 +0000, , implement clear set dict add skipped test  piperorigin revid 153770916 153770916,,
3153,b1566bc3e31fcbfd1ca7bf4e51515526c3938c07,atthias Kramm <kramm@google.com>, 2017-04-20 23:11:12 +0000, , fix _retrieve_attr vm.py make take node state  piperorigin revid 153770257 153770257,,
3154,2925de659588151911d84a8db2ce68147bb0159b,ebecca Chen <rechen@google.com>, 2017-04-20 22:53:00 +0000, , crash attempt call prevents crash checking whether valself none adding source set still right thing report error generating silly result silly code better face planting  piperorigin revid 153768023 153768023,,
3155,baad9c500623c0c9acb308f49ef561a393273f55,atthias Kramm <kramm@google.com>, 2017-04-20 22:48:07 +0000, , make _retrieve_attr take node state consistency method either take receive state take receive node  piperorigin revid 153767398 153767398,,
3156,59ba0e76f70cfeeb17d76a6a1bd67018ef60e584,ebecca Chen <rechen@google.com>, 2017-04-20 22:20:54 +0000, , convert completes todos convert.py use parameter converting fix bug parsing callable callable args ... treated homogeneous container came test writing  piperorigin revid 153764079 153764079,,
3157,16849fb663caaa66af20e038152181e0271801c4,ebecca Chen <rechen@google.com>, 2017-04-20 21:10:24 +0000, , move custom implementation tuple tupleclass move getitem_slot tuple tupleclass instance subclass tuple namely namedtuple get use tuple_type moved around creation tuple_type requires attribute handler exist set_slot add tuple_length attribute tuple tupleclass keep calling len ...  piperorigin revid 153754795 153754795,,
3158,f28ad4c3a1aff8b0e7994cfacdd0a015674e1960,ebastian Steenbuck <steenbuck@google.com>, 2017-04-20 12:25:12 +0000, , add visitor replace statically known module reference reference  piperorigin revid 153698636 153698636,,
3159,9a5d740114ae3896b1c486119817d48a13bd105b,ebastian Steenbuck <steenbuck@google.com>, 2017-04-20 08:55:29 +0000, , add functionality generate pickled ast representation inference solve runtime overhead dependency already loaded inference reused also add option read generated pyi file compare ast generated pickling option allows easier debugging issue pickling code failure caught saving time instead loading time  piperorigin revid 153685750 153685750,,
3160,a27b60091fdd4e1d28e0547d108f335f601cae11,ebecca Chen <rechen@google.com>, 2017-04-20 01:14:29 +0000, , implement matching implement matching amongst generictype callable callabletype generictype type add args ret property callabletype make easier get argument return type matching move computation t1_parameters t2_parameters method since nested branching getting messy  piperorigin revid 153661034 153661034,,
3161,e6e6c6712fdaebfc8003a7ee4eb2be27a8ae67a0,ebecca Chen <rechen@google.com>, 2017-04-20 00:26:13 +0000, , merge merges change definition super call requires little special handling mix  piperorigin revid 153656523 153656523,,
3162,bc142bd79082b4e3ace111a48826d32a636febc8,ebecca Chen <rechen@google.com>, 2017-04-19 19:04:36 +0000, , remove restriction hasslots added reason check set_slot using requires use instead get_attribute due latter calling would return slot process setting introducing infinite loop issue resolved simply moving get_attribute call slot set  piperorigin revid 153616128 153616128,,
3163,ddfc6f1d5a42c78e4996a016deb6d4f8297f3647,ebecca Chen <rechen@google.com>, 2017-04-18 23:16:14 +0000, , call pytd type error message  piperorigin revid 153525604 153525604,,
3164,0125bdbd90a1e214faef2a5b652d7066c610a157,atthias Kramm <kramm@google.com>, 2017-04-18 18:47:30 +0000, , xrange sequence sized iterable also remove rangeiterator  piperorigin revid 153489850 153489850,,
3165,e920ddd285c383add75fd8566331bf6a73055538,atthias Kramm <kramm@google.com>, 2017-04-18 18:45:03 +0000, , aggressive reporting attribute error  piperorigin revid 153489517 153489517,,
3166,bf456f05943cccb5c85c12a8ccceaccce351c11d,ebecca Chen <rechen@google.com>, 2017-04-18 16:34:36 +0000, , create unknown return value unsubstituted params instead creating unknown set params without substitution empty fix odd bug decorator return type unsubstituted type parameter decorated method class turn unknown causing trace call use call trace generate possibly silly signature  piperorigin revid 153471524 153471524,,
3167,6dd0542794103e7800e56fae5cb27099186ae64a,ebastian Steenbuck <steenbuck@google.com>, 2017-04-18 15:26:50 +0000, , disable wrong wrong arg count warning opcodes.py generates error unstable tested behavior release error file opcodes.py line 1023 _dis function expects arg got wrong arg count expected self index line actually passed self index line correct call guarded elif cls.flags has_argument ensure type opcodewithargs take five argument  piperorigin revid 153464838 153464838,,
3168,d226603299f986dc6b36c1ec7c18580f8c756aa6,ebecca Chen <rechen@google.com>, 2017-04-18 03:41:09 +0000, , take parameter account converting callable callabletype  piperorigin revid 153423458 153423458,,
3169,32a3ea5161aec488c527c09ef236cbfda504931d,ebecca Chen <rechen@google.com>, 2017-04-18 03:35:32 +0000, , add par callable object add support printing callabletype convert.py turn callabletype plain pytdclass callable print callable parameter yet  piperorigin revid 153423155 153423155,,
3170,680fb9dbf4259ff493700a8092d15c8625344a58,atthias Kramm <kramm@google.com>, 2017-04-17 23:49:11 +0000, , run hascombination complaining missing x.__iter__  piperorigin revid 153406524 153406524,,
3171,f775d81d481dd53a8d551566db1953a6537dd333,ebecca Chen <rechen@google.com>, 2017-04-17 21:54:54 +0000, , generate tuple nothing ... rather tuple empty tuple pyi need able recognize callable  piperorigin revid 153392321 153392321,,
3172,75a1674d7b64bec87377c1b00860838fecced068,ebecca Chen <rechen@google.com>, 2017-04-17 20:22:36 +0000, , better printing list dict tuple error message  piperorigin revid 153380109 153380109,,
3173,91d69ceff2eaa5d6af31b8d97a31677afb106106,ebecca Chen <rechen@google.com>, 2017-04-17 18:12:47 +0000, , add class callable annotation argument list  piperorigin revid 153364144 153364144,,
3174,1ebdf8817962ee0f13352c1d32fe6f0e4fb40513,ebecca Chen <rechen@google.com>, 2017-04-17 17:26:28 +0000, , check error parameter passed callable catch error giving single type instead list type _args parameter yet useful matching printing parameter  piperorigin revid 153357932 153357932,,
3175,9e090af8c0fd37f8fdf734b0ca070ce0eaf3d654,ebecca Chen <rechen@google.com>, 2017-04-17 17:12:01 +0000, , refactoring involving typing container refactoring make implementing typing.callable easier make static method annotationclass convert ellipsis instance unsolvable time rather leaving one _build_value deal instead pas _build_value argument pull logic getting parameterized class template parameter value type _get_value_info method subclass overload move code build_container typingcontainer class tuple callable inherit  piperorigin revid 153356059 153356059,,
3176,623fe27bab835d805233973d3afebb85fb629bda,ebecca Chen <rechen@google.com>, 2017-04-14 21:07:00 +0000, , make printing pythonconstants prettier  piperorigin revid 153204562 153204562,,
3177,d8033391eac2e0887647276021434f257886a9c2,ebecca Chen <rechen@google.com>, 2017-04-14 20:56:17 +0000, , add abstract.list remembers initial list content similar abstract.tuple abstract.list store content build_list give since list mutable abstract.list attribute set true called indicate original content longer usable change motivated typing.callable need know position type list argument type get  piperorigin revid 153203247 153203247,,
3178,25e7e736bccecceaa9d4955fb5d1c55b31559143,ebecca Chen <rechen@google.com>, 2017-04-14 17:23:16 +0000, , warn disable ignore directive line middle file  piperorigin revid 153179810 153179810,,
3179,09c5709326aea743cb06b9c4517fa0089a9a61b0,ebecca Chen <rechen@google.com>, 2017-04-13 23:28:59 +0000, , handle type comment value spanning multiple line properly  piperorigin revid 153121503 153121503,,
3180,072197325a6608e8f6c9faf8c60585e7824c828a,atthias Kramm <kramm@google.com>, 2017-04-13 20:53:01 +0000, , bring back setup.py see http travis ci.org python typeshed job 221872253  piperorigin revid 153101959 153101959,,
3181,d1358642ee3e8bdc6a56aa40663009d843df8f6a,ebecca Chen <rechen@google.com>, 2017-04-13 20:48:43 +0000, , type check non test file pytype pyc subdirectory relatively static four month last two change many dependency rest pytype good starting point type checking  piperorigin revid 153101417 153101417,,
3182,ceb35a642ea77057a5a8331374cfe813e62a5991,atthias Kramm <kramm@google.com>, 2017-04-13 19:57:33 +0000, , fix location python stdlib setup.py  piperorigin revid 153094720 153094720,,
3183,5cf36c1a78802f0b8ba1e0cc1b4508ae69dd2805,ebecca Chen <rechen@google.com>, 2017-04-13 18:12:36 +0000, , make definition __builtin__.sum precise  piperorigin revid 153081574 153081574,,
3184,4d8bd2b185e853343acec974c58c583c3d932502,atthias Kramm <kramm@google.com>, 2017-04-13 16:42:00 -0400, , add missing setup.py,,
3185,74dabcac5e75d7386c5ab5e660c815505f28c212,atthias Kramm <kramm@google.com>, 2017-04-13 14:41:25 -0400, , fix setup.py,,
3186,3748622c31fe54fa7542241ae043526ccc71c236,ebecca Chen <rechen@google.com>, 2017-04-13 17:32:18 +0000, , remove types.pytd  piperorigin revid 153075939 153075939,,
3187,20471544325a8850da33002129ab2d128edb1ad2,ebecca Chen <rechen@google.com>, 2017-04-13 16:58:53 +0000, , set logging level correctly handler already present  piperorigin revid 153071725 153071725,,
3188,d6e8b280c62ef64afdc198c764dc610859ab9c9d,atthias Kramm <kramm@google.com>, 2017-04-12 23:57:57 +0000, , upgrade typeshed  piperorigin revid 153006377 153006377,,
3189,faa6524b1e3ca29aefec5c60480f005dd12e8063,ebecca Chen <rechen@google.com>, 2017-04-12 23:44:36 +0000, , allow alias class definition pyi types.pyi doe thing like class ... type int   piperorigin revid 153004902 153004902,,
3190,3a302dac32b38008a39af71d3d1135a128c861be,ebecca Chen <rechen@google.com>, 2017-04-12 21:00:27 +0000, , cleanup config.py add test parse actual argument i.e. input.py input.py output.pyi separately rather trying shoe horn option post processing store value imports_info rather setting value using imports_map check check output present move couple check involving input main.py config.py add test various option combination main_test.py  piperorigin revid 152983545 152983545,,
3191,dae649895092679d2883916837d4c42e12535e62,ebecca Chen <rechen@google.com>, 2017-04-12 17:46:34 +0000, , improve main_test.py error message improves error message printed asserthaserrors error message get main_test.py rather unhelpful especially one unexpected crash something long difficult parse false  piperorigin revid 152957679 152957679,,
3192,1ee6e0fc3d464ac8cdfb531b9e03e6076d611c4f,ebecca Chen <rechen@google.com>, 2017-04-11 22:40:52 +0000, , turn abstract.super pytdclass various thing abstract.super e.g. matching getting class problem solved make inherit pytdclass  piperorigin revid 152870729 152870729,,
3193,0c5a04458c11d75aff61aeabc18abca0bbcdc8d9,ebecca Chen <rechen@google.com>, 2017-04-11 22:03:42 +0000, , support tuples union type parameter class definition pyi previously handled definition like class foo list tuple ... silly incorrect way since tuple formal record alias tuple meant never found substitution instead instantiate tuples type parameter using requires adding container argument know instance belongs well tweaking matcher.py  piperorigin revid 152865805 152865805,,
3194,a115b3a8d3b04405ffdef3127d7e7bb122633ea8,ebecca Chen <rechen@google.com>, 2017-04-11 16:39:38 +0000, , check generator yield type previously checking yield type causing type checked case move checking logic  piperorigin revid 152822244 152822244,,
3195,67b05faad89b0ecc8b6d840a131a4050873f34c0,ebecca Chen <rechen@google.com>, 2017-04-11 16:34:21 +0000, , get rid abort complex option longer used  piperorigin revid 152821651 152821651,,
3196,610cab9653dff3de691923b13da26d3b955ab186,ebecca Chen <rechen@google.com>, 2017-04-10 23:24:30 +0000, , fix handful small bug found trying run pytype amusement ran pytype uncovered bug let know want split separate change use self.get_class instead self.cls load __class__ attribute access __class__ class define get_class super remove one non existent keyword argument fix spelling another call setup.py call rather directly patching add message attribute baseexception handle name clash involving typevar properly  piperorigin revid 152750520 152750520,,
3197,e8964f3ee4892150c822a6d53234e553539ac678,atthias Kramm <kramm@google.com>, 2017-04-10 21:40:43 +0000, , add missing file  piperorigin revid 152736771 152736771,,
3198,89ee5f72dcfbcf86a8c5b292add2bf41ae89902b,ebecca Chen <rechen@google.com>, 2017-04-10 21:27:13 +0000, , put current line number name cfg node set name node current line number vm.py state.py also add line number opcode.__str__ make easier match node opcodes comparing debug output cfg since node name long run problem rendering graph  piperorigin revid 152734762 152734762,,
3199,6519f911f581d85d9c1ce260e5769c21d328ecc0,atthias Kramm <kramm@google.com>, 2017-04-10 20:27:12 +0000, , optionally display target name whenever encounter import error  piperorigin revid 152726289 152726289,,
3200,b5d79e6e449cf6454efb8238f93765a4c72479d4,atthias Kramm <kramm@google.com>, 2017-04-10 19:15:40 +0000, , analyze function even decorated unknown decorator  piperorigin revid 152717621 152717621,,
3201,ac5e0a7c81f33e0fb8ec95b3cdb1f8db240cae5c,atthias Kramm <kramm@google.com>, 2017-04-10 16:18:58 +0000, , allow call addnameprefix visitor resolving  piperorigin revid 152694927 152694927,,
3202,2183d3282c78e8841a51f6a13c4778ed38189402,ebecca Chen <rechen@google.com>, 2017-04-08 02:33:05 +0000, , delay logging key_error sure error change raise dictkeymissing error instead logging key error dict one multiple variable binding error logged prematurely side effect change sometimes log one error e.g. wrong arg type previously would logged unsupported operand  piperorigin revid 152570626 152570626,,
3203,d27f26eca2e80e91399a779cce8d50642441b3dd,ebecca Chen <rechen@google.com>, 2017-04-08 01:49:40 +0000, , add unicode possible argument type typing.match method  piperorigin revid 152568721 152568721,,
3204,a6fe754f5a05c124c1d7017262cfa5c48bce8a2c,ebecca Chen <rechen@google.com>, 2017-04-07 23:58:47 +0000, , improve definition typing.cast make definition typing.cast precise also run first argument appropriate check conversion suggests using type comment forward reference detected  piperorigin revid 152560864 152560864,,
3205,22b9485b03f9caf9ffb64f14bff551e091f99dec,atthias Kramm <kramm@google.com>, 2017-04-07 23:34:18 +0000, , calling solver pas new style class old style class  piperorigin revid 152558609 152558609,,
3206,c2d244f05de60ed02d77b3078dfbd59901858c17,atthias Kramm <kramm@google.com>, 2017-04-07 23:31:55 +0000, , get rid  piperorigin revid 152558339 152558339,,
3207,cdb3cf209200da5d94e4e391f1259734a439ebc5,ebecca Chen <rechen@google.com>, 2017-04-07 22:01:44 +0000, , make output deterministic sorting option  piperorigin revid 152547948 152547948,,
3208,2acbbb138283913daed2be0ae4df750372339038,atthias Kramm <kramm@google.com>, 2017-04-07 21:28:28 +0000, , allow call addnameprefix afer  piperorigin revid 152543830 152543830,,
3209,4668768cb5e297babaa188ab8d04cdc16434450c,atthias Kramm <kramm@google.com>, 2017-04-07 20:43:46 +0000, , simple visitor setting class pointer none  piperorigin revid 152538152 152538152,,
3210,27fae050744de2281331b7ae355d7b7802f45e48,atthias Kramm <kramm@google.com>, 2017-04-07 19:38:58 +0000, , allow custom description ascii_tree  piperorigin revid 152530729 152530729,,
3211,db5f874a0e8874cc53b6cf1b3b75d05f94075949,ebecca Chen <rechen@google.com>, 2017-04-07 19:17:04 +0000, , improve error message regarding variable multiple binding annotation type commments allow multiple binding previously misleading inscrutable error message case def int str ... invalid annotation union int str suggests typing.union allowed annotation def tuple int str ... invalid annotation tuple highlight problematic portion ... int __any_object__ else str get atomic value variable debugging message meant internal use def type int str none debugging message pas change print int str invalid annotation first two case use message must constant third fourth case type comment already printed verbatim need print also set value unsolvable bad type comment  piperorigin revid 152528515 152528515,,
3212,0bef8a98b9c3340c85c96e7537937133f02ce757,ebastian Steenbuck <steenbuck@google.com>, 2017-04-07 14:53:55 +0000, , stopwatch support called recursively multiple time  piperorigin revid 152499687 152499687,,
3213,47007b42af9f8327de74dd1cca6905b1dd09551c,ebecca Chen <rechen@google.com>, 2017-04-07 01:25:18 +0000, , print link error class documentation report_errors true  piperorigin revid 152454796 152454796,,
3214,04f19f5a69df27ee94fd877330461c8d5c40aff7,ebecca Chen <rechen@google.com>, 2017-04-06 23:47:59 +0000, , remove print_errors argument relic pytype removed capability processing multiple file  piperorigin revid 152445689 152445689,,
3215,852fb8b9672f6d69db87c04ec3e6ab54389434ed,ebecca Chen <rechen@google.com>, 2017-04-06 16:51:15 +0000, , rollback commit reason rollback adding link every error message make output overly verbose see discussion unknown commit original change description add documentation link error message   piperorigin revid 152392818 152392818,,
3216,afe22e5ab94231958ec36c5b73b7011456791a8b,ebastian Steenbuck <steenbuck@google.com>, 2017-04-06 16:01:47 +0000, , renamevisitor rename scope typeparameters typeparameters reference local module name node.scope node.name therefore need changed  piperorigin revid 152387590 152387590,,
3217,1484edab33137d047e52bf474d8efb88b90b8c6e,atthias Kramm <kramm@google.com>, 2017-04-05 20:51:12 +0000, , make none generate none attr instead unsupported operand  piperorigin revid 152300603 152300603,,
3218,553d25c6e76475ced050a4b6daf906c1ba0c3442,ebecca Chen <rechen@google.com>, 2017-04-05 20:37:22 +0000, , add documentation link error message  piperorigin revid 152298712 152298712,,
3219,4c23d417e5ab0addf8ac04f6fc9040e0bf6be24c,atthias Kramm <kramm@google.com>, 2017-04-05 17:44:58 +0000, , simplify fix issue fix definition zip one two operand remove superfluous __eq__ __ne__ etc fix combination bytearray unicode actually work  piperorigin revid 152276398 152276398,,
3220,5b11c094419a28f5d782cafb80105d837de89c63,ebecca Chen <rechen@google.com>, 2017-04-05 17:44:18 +0000, , add suggestion type comment none attr message  piperorigin revid 152276302 152276302,,
3221,1638fafcda2ace31dcf8e37d30abdcb63b796211,ebecca Chen <rechen@google.com>, 2017-04-05 08:11:05 +0000, , use anystr  piperorigin revid 152230708 152230708,,
3222,5ca7c87d0f851942367eced733697ddfaf9cb189,ebecca Chen <rechen@google.com>, 2017-04-04 23:50:06 +0000, , make accept unicode everywhere accepts str  piperorigin revid 152198163 152198163,,
3223,3256db0cde5478775ca82d6bdf103497e2fd8357,ebecca Chen <rechen@google.com>, 2017-04-04 23:00:14 +0000, , allow using typevar imported log name error byte_load_name load type parameter builtins since mean type parameter local globals thus imported importing typevar still allowed name prefixed underscore sufficient warning meant public use  piperorigin revid 152192051 152192051,,
3224,163173f851a8b358cd930e7a85802fc0c40c9e59,ebecca Chen <rechen@google.com>, 2017-04-04 22:45:34 +0000, , tweak definition str.__add__ handle bytearray correctly  piperorigin revid 152190324 152190324,,
3225,efccfde124eb477c4c47a8aa696af83f3ba7f790,atthias Kramm <kramm@google.com>, 2017-04-04 20:14:30 +0000, , remove unused file outdated todos  piperorigin revid 152169960 152169960,,
3226,d4a77e7795ce83d63e5844244f5141054c111fee,ebecca Chen <rechen@google.com>, 2017-04-04 19:10:27 +0000, , make typing.pytd typevars except anystr private  piperorigin revid 152161981 152161981,,
3227,97f92a3c13ce1a52e4396a0acfc8552426629756,ebecca Chen <rechen@google.com>, 2017-04-04 19:07:00 +0000, , fix crash related type parameter renaming  piperorigin revid 152161578 152161578,,
3228,6c6872afc39ffdcd734de61f58fc23da92183a5a,atthias Kramm <kramm@google.com>, 2017-04-03 23:55:21 +0000, , make solver remember goal already expanded  piperorigin revid 152076386 152076386,,
3229,cff216141fe9513f4de6fd7e846a3ee3054c044a,atthias Kramm <kramm@google.com>, 2017-04-03 22:23:13 +0000, , clarify error message write invalid type annotation state instead invalid type annotation state   piperorigin revid 152065497 152065497,,
3230,b355f0cbaaa2591bc661ac2c5a74b2a19dd6f855,atthias Kramm <kramm@google.com>, 2017-04-03 19:40:52 +0000, , apply http github.com google pytype pull  piperorigin revid 152043875 152043875,,
3231,e11205940c54aa7cb7e7fd7f1716ed13ff9d925e,ebecca Chen <rechen@google.com>, 2017-04-03 19:18:57 +0000, , try convert abstract value definition __builtin__.py imported step imported user code supply preloaded builtin rather trying convert pytd value crash pytype instance signature  piperorigin revid 152041272 152041272,,
3232,753ea4cd1d4df1daafbeb169ec01fdb9d186a97e,ebecca Chen <rechen@google.com>, 2017-04-03 17:06:49 +0000, , cache value use non root node remove node argument accidentally hide node cached value instead take get_node function return current node define get_node set need_node flag know return value without caching  piperorigin revid 152023011 152023011,,
3233,aeaf3830b985be8c80766f06fb74acd32539ddea,ebecca Chen <rechen@google.com>, 2017-04-03 17:00:54 +0000, , change also ignore call trace  piperorigin revid 152022181 152022181,,
3234,cd8b9b5d4d3b2dfeedf5b86dccf9148e2bc67c65,ebecca Chen <rechen@google.com>, 2017-04-01 20:43:05 +0000, , remove supported yet error typevar importing typevar  piperorigin revid 151923491 151923491,,
3235,c017d3ecbcaa22d430298937a89e0b149f69744d,ebecca Chen <rechen@google.com>, 2017-04-01 20:34:28 +0000, , report error invalid unsupported typevar use case report supported yet type parameter type comment e.g. none type eventually want distinguish bound unbound type parameter report error unbound even inline generic support yet wait report invalid annotation unconstrainted type parameter appear signature def ...  piperorigin revid 151923278 151923278,,
3236,6721a6b2a0927576487bf5a3714269294c625233,ebecca Chen <rechen@google.com>, 2017-04-01 20:27:30 +0000, , process bound covariant contravariant argument typevar  piperorigin revid 151923133 151923133,,
3237,1a151b259b772f13aea5f7afce754c193e8d46f5,ebecca Chen <rechen@google.com>, 2017-03-31 22:59:07 +0000, , remove node argument constructor  piperorigin revid 151879142 151879142,,
3238,5b08fc46024f5d7488c3999347ebf8134c043225,ebastian Steenbuck <steenbuck@google.com>, 2017-03-31 17:46:58 +0000, , add warning untrusted pickled file  piperorigin revid 151840536 151840536,,
3239,d3245d824e1777cc0e6c8c8fe72563f984560cdb,ebecca Chen <rechen@google.com>, 2017-03-31 00:20:31 +0000, , add supported yet error creating generic class python code  piperorigin revid 151771671 151771671,,
3240,83bea9d3562c220a6147280844997d26d56c4341,ebecca Chen <rechen@google.com>, 2017-03-30 20:16:07 +0000, , set filename appropriately analyzing __builtin__.py bug odd one test filename none  check succeeds preloading builtins __builtin__.py thus end analyzing builtins file applying type comment test code usually harmless __builtin__.py docstring end line fourth line test code happens type comment name __builtin__.py import get baffling error test test_typevar.py used testing report error type  piperorigin revid 151740791 151740791,,
3241,e94cbd8ff8808dec2f89bb2b8d143c839d4e72fb,ebecca Chen <rechen@google.com>, 2017-03-30 16:38:32 +0000, , use process type comment  piperorigin revid 151711621 151711621,,
3242,e79b1b3d38ee7cf2c2bb30f0cb3c1c4afd819823,ebecca Chen <rechen@google.com>, 2017-03-30 02:52:01 +0000, , type check type parameter constraint  piperorigin revid 151658065 151658065,,
3243,5b8352d897640e8d99a0d0ba2a6aa6e64f5e1be5,ebecca Chen <rechen@google.com>, 2017-03-30 02:46:58 +0000, , make float compatible complex see http www.python.org dev pep pep 0484 numeric tower requires adding float complex modifying printvisitor delete compatible builtins union right order  piperorigin revid 151657803 151657803,,
3244,ca5833c03d61bdff4ae66e5742a0723e8d4f7e49,ebecca Chen <rechen@google.com>, 2017-03-30 02:43:18 +0000, , call __init__ type type comment initialized  piperorigin revid 151657650 151657650,,
3245,73d68c49bc61a88af436052bf651672f567dfe31,ebecca Chen <rechen@google.com>, 2017-03-30 02:40:54 +0000, , allow type comment  piperorigin revid 151657525 151657525,,
3246,ff78f13d5457aa44251d5a0ac9505ffb0dcb9b21,ebecca Chen <rechen@google.com>, 2017-03-29 17:58:08 +0000, , improve implementation cmp_in cmp_not_in changing cmp_eq cmp_ne made realize could also better cmp_in cmp_not_in  piperorigin revid 151596720 151596720,,
3247,36c76945d3cb01cab9370c484a4eb2e118d053aa,ebastian Steenbuck <steenbuck@google.com>, 2017-03-28 16:16:01 +0000, , read pyi ast information pickled file change add reading pickled ast information .pyi.pickled file considerably faster compared reading pyi information ascii converting usable format  piperorigin revid 151457298 151457298,,
3248,cd5a38f33989273c138c605c665b2ce311169e5f,atthias Kramm <kramm@google.com>, 2017-03-28 14:02:09 +0000, , look local file imports_map  piperorigin revid 151445008 151445008,,
3249,83a2c3c4aa6e17c566e397e706d2078c3c156e74,atthias Kramm <kramm@google.com>, 2017-03-28 13:58:40 +0000, , new function utils.cd  piperorigin revid 151444713 151444713,,
3250,aa7b4d178f5a72076dbb0efb376324c41085e798,atthias Kramm <kramm@google.com>, 2017-03-24 22:40:32 +0000, , ignore code inside block  piperorigin revid 151181122 151181122,,
3251,22eb0d51471e56c4aed95daa2b800335097bdb71,atthias Kramm <kramm@google.com>, 2017-03-24 22:36:23 +0000,53, allow use type ignore function signature see http github.com google pytype issue  piperorigin revid 151180634 151180634,,
3252,adf996487e744ad0b07ac5b0267c32ea54f2c544,atthias Kramm <kramm@google.com>, 2017-03-24 22:32:59 +0000, , re.compile ... .sub allows callable  piperorigin revid 151180264 151180264,,
3253,461f807beb994173e40a672be45fd8bd9e6b3158,ebecca Chen <rechen@google.com>, 2017-03-24 20:01:28 +0000, , smarter evaluation __eq__ primitive tuples dicts  piperorigin revid 151160345 151160345,,
3254,aba02b5db9777e867cc74264921971a5e30b0e5f,atthias Kramm <kramm@google.com>, 2017-03-24 16:32:33 +0000, , allow ast node evaluate false  piperorigin revid 151134269 151134269,,
3255,a7c758e35e1f466b98d3d176236bd377aaa32e26,atthias Kramm <kramm@google.com>, 2017-03-24 16:09:37 +0000, , treat trying call none none attr  piperorigin revid 151132161 151132161,,
3256,376ef88b2293e14e6adf68970e569535de0ebd01,ebecca Chen <rechen@google.com>, 2017-03-23 20:27:56 +0000, , check occurrence type param constraint type  piperorigin revid 151045781 151045781,,
3257,395409921d38849bc2de19f9769845266278b693,ebecca Chen <rechen@google.com>, 2017-03-23 17:59:08 +0000, , cleanup pytd file remove pytd file longer need add todos one eventually remove add justification comment one need keep  piperorigin revid 151025580 151025580,,
3258,a1ec2da48f5b7c6707fc415624248be6e4fad183,ebastian Steenbuck <steenbuck@google.com>, 2017-03-23 17:21:01 +0000, , sort option  piperorigin revid 151019705 151019705,,
3259,23ded5cae9352ef41244a8397826b60284ecbe42,atthias Kramm <kramm@google.com>, 2017-03-22 23:56:56 +0000, , create new variable merging two stack fix splitting bug  piperorigin revid 150947328 150947328,,
3260,0d352bbeaea50f9c34c4edff80d42c7ed30b1110,ebecca Chen <rechen@google.com>, 2017-03-22 22:46:48 +0000, , delete math.pytd  piperorigin revid 150938730 150938730,,
3261,803f440ad4a7d2fcc2543ca7d8eb3a9e21e4c9b0,atthias Kramm <kramm@google.com>, 2017-03-22 22:22:51 +0000, , loading constant put current cfg node also exposed bug cfg solver add new skipped test case introduce new cfg node store_attr work around  piperorigin revid 150935499 150935499,,
3262,d5e1444e56b66d589d04a39be3191891c1ab66c4,atthias Kramm <kramm@google.com>, 2017-03-22 21:16:40 +0000, , infer certain type type parameter change allows pytype e.g infer identity function def return  def ...  help e.g simple function decorator  piperorigin revid 150926252 150926252,,
3263,8ba5898b6eee34733a87c5b7679eb6e6674a8c51,atthias Kramm <kramm@google.com>, 2017-03-22 14:24:25 +0000, , add code pretty print cfg.binding  piperorigin revid 150875288 150875288,,
3264,a3d03a63a3c6ceb07b435f4c07dff11a4eadca54,ebastian Steenbuck <steenbuck@google.com>, 2017-03-22 13:18:55 +0000, , add exception working code break self.cls set code assumes  piperorigin revid 150870874 150870874,,
3265,5d7912dab70a2884ebcbb503cae824db1a442014,atthias Kramm <kramm@google.com>, 2017-03-21 17:14:14 +0000, , make pathfinder modularized rewrite break previous implementation yield various useful function e.g finding shortest path highest reachable weight also pave way optimization since almost cpu time find shortest path  piperorigin revid 150767293 150767293,,
3266,2716a73d0fe5bff7b8b9a7b0a2304f83385c4e27,ebastian Steenbuck <steenbuck@google.com>, 2017-03-21 09:27:12 +0000, , functionality pickle ast disk part fast_pyi fast_pyi_saver know read pyi file write pickled without external reference disk next pyi file behavior enabled flag  piperorigin revid 150730800 150730800,,
3267,5ec24d2e302dc4007ce9879d3579c3ee5f0592de,ebecca Chen <rechen@google.com>, 2017-03-17 08:48:21 +0000, , include expected type bad_param arg invalid parameter error motivation behind change type parameter sometimes expected type want report type signature example def anystr anystr ...  want report expected type str union str unicode catch error yet soon want able generate good error message log wrongargtypes remember name bad parameter also expected type matched expected type type parameter replaced constraint use mechanism supply wrongargtypes expected type case bad super call allows get rid detail field   piperorigin revid 150419206 150419206,,
3268,87d1a159f72bdf4c21a3895809484c0faa749e79,ebecca Chen <rechen@google.com>, 2017-03-17 08:07:11 +0000, , delete method actually exist far tell change earlier today made quick smart enough realize __getattr__ could optimized away class inheriting object disappearance __getattr__ pyi file caused attribute error galore  piperorigin revid 150417310 150417310,,
3269,3e10e422a1667415123b7d3d6995ae066c6bd858,atthias Kramm <kramm@google.com>, 2017-03-16 23:19:48 +0000, , argument always create unknown even quick  piperorigin revid 150383876 150383876,,
3270,93f06955e9e1eb4318c3bdbc65e241ba132126d3,ebecca Chen <rechen@google.com>, 2017-03-16 20:29:09 +0000, , move code processing inline annotation file  piperorigin revid 150360881 150360881,,
3271,81ba610c279a3deac2c4fe833c7df0b97abeb697,ebecca Chen <rechen@google.com>, 2017-03-15 22:31:17 +0000, , tweak matcher use also match subclass already allow e.g. int match float also let bool match float  piperorigin revid 150251367 150251367,,
3272,fee17e02486bb0fde8eaf6519beeb190b3d330f0,ebecca Chen <rechen@google.com>, 2017-03-15 00:25:07 +0000, , log type parameter error closer occur  piperorigin revid 150136598 150136598,,
3273,f1edbbfeab18fe9050a031f7c46d849fad2aeded,atthias Kramm <kramm@google.com>, 2017-03-14 21:42:36 +0000, , remove capability processing multiple file  piperorigin revid 150116134 150116134,,
3274,e0700b8fdf251d43aae282b1ec15110e360c0d41,ebecca Chen <rechen@google.com>, 2017-03-14 20:11:57 +0000, , change __getslice__ accept none argument  piperorigin revid 150103701 150103701,,
3275,372ad03a4689c3067b889daf75b3c2121833f18f,ebecca Chen <rechen@google.com>, 2017-03-13 21:26:54 +0000, , take advantage typeparameter constraint place  piperorigin revid 149990147 149990147,,
3276,84bfdbd2d360c2871c7738f042b4555e2187a2aa,ebastian Steenbuck <steenbuck@google.com>, 2017-03-13 12:01:14 +0000, , manage set ancestor instead finding fly cfg.py dominates runtime spend ingesting pyi file lot runtime function spend finding ancestor node compare binding list supplied binding goal aim reduce lookup time guaranteeing always date guarantee work finding ancestor need done cfg modification chosen approach update self.ancestors child new connection added parent child profiling total runtime file containing many dictionary configuration 0.5 test file took 240seconds 144 0.3s 1.5s total runtime  piperorigin revid 149928477 149928477,,
3277,bc8acd763843412930ae1d99d9ee83d4765d727e,ebecca Chen <rechen@google.com>, 2017-03-11 01:00:57 +0000, , change function callable pytd delete  piperorigin revid 149814624 149814624,,
3278,29b5c49bafd997fefd14cb2e459df7bf8e7c5bc2,ebecca Chen <rechen@google.com>, 2017-03-10 20:43:01 +0000, , define __iadd__  piperorigin revid 149787047 149787047,,
3279,036337a2ee5879f1c378e40fc77fabdb6ea504f7,ebecca Chen <rechen@google.com>, 2017-03-10 17:58:01 +0000, , introduce simple constraint checking typeparameter change matcher check value type parameter constraint adding substition catch error like def anystr anystr ...   def anystr anystr ...  also yet use constraint infer precise type information  piperorigin revid 149768240 149768240,,
3280,9ef59983d1601c46b3f5d9167d62f50f04289622,ebecca Chen <rechen@google.com>, 2017-03-10 17:53:00 +0000, , fix __and__ __contains__ definition  piperorigin revid 149767749 149767749,,
3281,0a2c26b7277f0a960fdee3cfca9b410fce8b4ced,ebecca Chen <rechen@google.com>, 2017-03-10 02:17:00 +0000, , instantiate type unsolvable fix broken canary test issue type instantiated tried match left type matcher asserted non formal type false  piperorigin revid 149717738 149717738,,
3282,091da794869f29ae1dd4d8f9897f1b7060183d36,ebecca Chen <rechen@google.com>, 2017-03-09 21:22:27 +0000, , keep track typeparameter constraint store constraint passed typevar pass abstract pytd layer necessary output printvisitor constraint yet used anything  piperorigin revid 149687431 149687431,,
3283,0cb2118bff2c9eaa4c09a3004ab63ea842e32198,ebecca Chen <rechen@google.com>, 2017-03-09 21:12:47 +0000, , improve parsing typevar definition  piperorigin revid 149686369 149686369,,
3284,dca692c6555f0c88eeb75e0b3947f58b1775ecad,ebecca Chen <rechen@google.com>, 2017-03-09 01:04:01 +0000, , use typeparameter information type checking call function call replaces type parameter annotation concrete substitution computed matcher new test call tested function twice different parameter type make sure substitution sticky get_class defined make play nicely tupleclass  piperorigin revid 149602129 149602129,,
3285,9abf9ecb7b730b05002070a85a5a340dff9f8a21,ebecca Chen <rechen@google.com>, 2017-03-08 22:53:42 +0000, , make work type isinstance check type_param return false instead raising error get rid need pylint disable unidiomatic typecheck union.__eq__  piperorigin revid 149586666 149586666,,
3286,f3f783ef68b257deecd0fc80530fc49ddfbf3779,ebecca Chen <rechen@google.com>, 2017-03-08 01:48:40 +0000, , remove two redundant way fill pointer two visitor lookupfullnames two function filled pointer pytd.classtype object slightly different way change remove lookupfullnames leaving lookupclasses convert namedtype node classtype fill class using global lookup module fill class using name ast map  piperorigin revid 149490703 149490703,,
3287,3663b9381239285e087e76de48899eabea9a1d7a,ebecca Chen <rechen@google.com>, 2017-03-08 01:19:03 +0000, , set official name earlier  piperorigin revid 149487750 149487750,,
3288,847e846e5b99e0e63521031ca0680813d2b49df2,ebecca Chen <rechen@google.com>, 2017-03-07 22:24:02 +0000, , merge  piperorigin revid 149466369 149466369,,
3289,17b49e8ba346f9e23cedce2fe2df4d335ff1c6f2,ebecca Chen <rechen@google.com>, 2017-03-07 19:50:39 +0000, , change typevarfunction allows take advantage argument type checking already rather inventing wheel invalid typevar  piperorigin revid 149446058 149446058,,
3290,d36144609ca375743a419ba77441809b06702adb,ebecca Chen <rechen@google.com>, 2017-03-07 19:08:29 +0000, , add typevars generated ast rather compute_types simplifies code removing need specially trace typevars lose ability track duplicate think fine normal able overwrite thing python code  piperorigin revid 149440136 149440136,,
3291,6d8aab3f02a2d42e084757819059725c62df2a1a,ebecca Chen <rechen@google.com>, 2017-03-07 17:44:58 +0000, , typevar related cleanup delete date comment rename variable used represent abstract value fix outdated syntax docstring move call loop remove reference deleted visitor move typevar test test_errors test_typevar add import statement standardize quotation markes test_typevar  piperorigin revid 149429081 149429081,,
3292,769c3fe8682000f8a96d307e4f29f57b98b2c8dc,ebecca Chen <rechen@google.com>, 2017-03-07 15:24:07 +0000, , get rid name arg var value far tell place argument used recursion error message switched using name pytd value  piperorigin revid 149416316 149416316,,
3293,0470e26ddf64fbdf4153f6056ac40ffbc0040bfc,ebastian Steenbuck <steenbuck@google.com>, 2017-03-06 09:57:36 +0000, , speedup replace tuple set set faster pay constant time lookup line 126 instead linear time profiling tested video youtube src python config shmoovies.py configuration file known slow change 121 second spend change percent load removed total change profiling call took 163 second change speedup factor roughly  show call site updated set instead suspect could well use seen.update save number set investigated changing could change behavior command blaze bin third_party pytype pytype check abort complex report error output imports_info blaze gcc 4.x.y crosstool v18 hybrid grtev4 opt bin video youtube src python config pytype aspect shmoovies pytype check imports_info python_exe third_party pytype google python2.7 module name quick precompiled builtins blaze gcc 4.x.y crosstool v18 hybrid grtev4 opt bin devtools python blaze pytype release video youtube src python config shmoovies.py output test.pyi profile profile2  piperorigin revid 149277428 149277428,,
3294,553eb6fc5f9685315e305429ed9a7cebbc621ec7,ebastian Steenbuck <steenbuck@google.com>, 2017-03-06 09:56:46 +0000, , remove wrong __slots__ statement pytd.py make others effect removed wrong declare instance variable easy fix keeping __slots__ statetement child namedtuple allowed non empty __slots__ statement node.node returned class without __slots__ statement childrens __slots__ statement effectless inheriting class without __slots__ __dict__ attribute class always accessible __slots__ definition subclass meaningless  http docs.python.org reference datamodel.html  piperorigin revid 149277345 149277345,,
3295,929bb1f63b641461fb306d15e7c7396bbf0a6636,ebecca Chen <rechen@google.com>, 2017-03-03 00:02:33 +0000, , consolidate wrongargtype error detail passing around badcall namedtuple well bad_param arg detail arg stuff latter two namedtuple  piperorigin revid 149059110 149059110,,
3296,718d2c7bb8037f23f4b08d15a4cf94a7c16b3f91,ebecca Chen <rechen@google.com>, 2017-03-01 20:35:59 +0000, , remove support old pytd raise syntax stop allowing def ... ... raise switch test pytd file def ... ... raise syntax used typeshed  piperorigin revid 148918092 148918092,,
3297,3bd12f43163f704803b90b74f2bd166e93d6b394,elle Zijlstra <jelle.zijlstra@gmail.com>, 2017-03-13 21:55:45 -0700, , fix installation instruction,,
3298,962a0ebc05bd24dea172381b2bedcc547ba53dd5,ebecca Chen <rechen@google.com>, 2017-02-28 19:07:07 +0000, , handle sys.version indexing slicing pyi parsing  piperorigin revid 148790970 148790970,,
3299,0a38b1202ec9aae42893f0565462dc73d18e0519,ebecca Chen <rechen@google.com>, 2017-02-28 18:52:36 +0000, , fix get_class behavior function function like abstract value implement get_class classmethod staticmethod change typing.callable former longer appear anywhere commit  piperorigin revid 148788954 148788954,,
3300,c4ab15ee71a8524ce7afa8ed38c124174b2c5465,ebecca Chen <rechen@google.com>, 2017-02-28 17:29:29 +0000, , function related cleanup set attribute rather subclass convert.py name_to_value rather combination lookup_builtin bunch test testfunctions testclosures one closure test testfunctions put test right place  piperorigin revid 148778609 148778609,,
3301,aeac1ecc0b61fd6efe042ee86700999bfbc01f7b,ebecca Chen <rechen@google.com>, 2017-02-28 00:26:30 +0000, , handle disjunction parenthesis condition pyi parsing  piperorigin revid 148710197 148710197,,
3302,a06b2569f9566f438e15c5711fe618996a0b90d6,ebecca Chen <rechen@google.com>, 2017-02-24 23:16:52 +0000, , report error calling cmp_in object without __contains__ method  piperorigin revid 148510426 148510426,,
3303,acbe8335981eadcb6c1255c6b59e636a845297a6,ebecca Chen <rechen@google.com>, 2017-02-24 20:25:41 +0000, , print optional instead union none  piperorigin revid 148489230 148489230,,
3304,b83135e318538f18f9374cb9bfa84752d825b7f2,ebecca Chen <rechen@google.com>, 2017-02-24 19:21:40 +0000, , change annotation typing.optional default type none  piperorigin revid 148481538 148481538,,
3305,119f25b429421c99a7a1245b15d8c8abf80b4a47,ebecca Chen <rechen@google.com>, 2017-02-22 23:05:25 +0000, , set expected type parameter default value none  piperorigin revid 148273901 148273901,,
3306,50e219bebdbfba4a3583ca92787631d7bce49db4,oogler <noreply@google.com>, 2017-02-22 18:58:09 +0000, , add explanation surprising behavior  piperorigin revid 148241206 148241206,,
3307,2b83e3aec15bcad576d988f5f8adca687cf54f15,oogler <noreply@google.com>, 2017-02-22 18:56:36 +0000, , fix mro_test actually calling googletest.main unit test never actually running even though blaze test return passing pass binary happily return error status http tested blaze test mro_test  piperorigin revid 148240944 148240944,,
3308,8c91d031b395b59d89e8bd4d146239f477d6a9dc,lvaro Caceres <acaceres@google.com>, 2017-02-21 16:17:54 +0000, , include module name attribute error message involving module  piperorigin revid 148097152 148097152,,
3309,7453fa77b577fd05d8c55704241a5ef518369964,atthias Kramm <kramm@quiss.org>, 2017-02-20 08:09:22 -0800, , fix setup.py,,
3310,108a2cf99e5440ee0d644a0eed1488497deb3c09,ebecca Chen <rechen@google.com>, 2017-02-18 00:02:57 +0000, , improve dict.__init__ definition fix unsolvable tupleclass matching  piperorigin revid 147891078 147891078,,
3311,febb7586db9b7fe3ace4b5c3012e1624b664d48d,lvaro Caceres <acaceres@google.com>, 2017-02-17 21:31:34 +0000, , function type comment bugfix add test  piperorigin revid 147872941 147872941,,
3312,8efb7ccfd231f60153f7d673266a13bf38e82b22,ebecca Chen <rechen@google.com>, 2017-02-17 20:59:28 +0000, , fix matching empty variable tupleclass  piperorigin revid 147869548 147869548,,
3313,85db8b7b50dac183129c73839c9737afdfb9f891,lvaro Caceres <acaceres@google.com>, 2017-02-17 20:50:32 +0000, , drop ply dependency since use anymore  piperorigin revid 147868585 147868585,,
3314,e3b75eb13897f87a51eb73ed7273ad2de419c999,lvaro Caceres <acaceres@google.com>, 2017-02-17 20:49:47 +0000, , bugfix handle space comment based function annotation  piperorigin revid 147868509 147868509,,
3315,8f2f82b6b4a6074e69d44e17dd2c63aa2c0b3aba,atthias Kramm <kramm@google.com>, 2017-02-17 20:48:48 +0000, , apply http github.com google pytype pull guido python.org  piperorigin revid 147868410 147868410,,
3316,2e4d022fdc19a2b55cf55e4aeb2b85fbcd73de22,ebecca Chen <rechen@google.com>, 2017-02-16 20:08:40 +0000, , improve inference initializing dict list tuples  piperorigin revid 147750447 147750447,,
3317,ce8447393238a9ebfbdec2cbb234daebdbc25555,atthias Kramm <kramm@google.com>, 2017-02-16 17:19:58 +0000, , undo aliasing module ended breaking normal import see bug log  piperorigin revid 147728288 147728288,,
3318,99b7ec5b1031f1b5038ab05c123b6c1d47774c96,atthias Kramm <kramm@google.com>, 2017-02-14 16:14:55 +0000, , improve long tail performance splitting fix bug chain condition added goal also add approximation step remove condition seem related current goal consider following code def union int true_or_false  return solve return value say int try trace path back defintion i.e. start function path encounter condition true  add new goal true introduced condition list goal run solver since able expand goal second parallel solver run multiplying solving time two word behavior exponential number nested statement  see add goal true since fulfilled assignment path approximation one hold test case jump remove goal int finish solving  piperorigin revid 147473789 147473789,,
3319,b46d41bf8f5b40c70666f54bd347e3fa22b275ea,atthias Kramm <kramm@google.com>, 2017-02-14 14:45:50 +0000, , fix printing alias  piperorigin revid 147466210 147466210,,
3320,0a804598271167b4fbb1f6a9664faef0918745f4,atthias Kramm <kramm@google.com>, 2017-02-13 22:41:20 -0500, , reapply http github.com google pytype pull,,
3321,df2471dbcfeb388205c1b03fecc4c7d77f71caea,ebecca Chen <rechen@google.com>, 2017-02-13 20:31:56 +0000, , implement get_class  piperorigin revid 147378400 147378400,,
3322,8d6790bbf8baa1ec5916b174b6c358a08a6e13b0,atthias Kramm <kramm@google.com>, 2017-02-10 23:17:22 +0000, , invert precheck cfg.py instead checking whether path without condition check whether path exists running full path finder speed thing roughly solver call trigger inferring httpheaders.py open source pythonpaste.org package  piperorigin revid 147205203 147205203,,
3323,b5e9ef76bdb8526fcb21017e1a4ab5f571765604,atthias Kramm <kramm@google.com>, 2017-02-10 16:49:46 +0000, , simplify pathfinder move state parameter  piperorigin revid 147159791 147159791,,
3324,e2a7a7d2493aeee333c424f1932a0dd12ca8ac44,ebecca Chen <rechen@google.com>, 2017-02-10 02:01:31 +0000, , remove cgi.pytd  piperorigin revid 147106637 147106637,,
3325,5769f29f4c5df99a8dee0cc043aa3a91ab2d7d68,ebecca Chen <rechen@google.com>, 2017-02-10 01:37:48 +0000, , allow type comment initializing instance attribute  piperorigin revid 147104357 147104357,,
3326,69fa2f5566a478a8afbfe64f06f1006226ff6e9c,atthias Kramm <kramm@google.com>, 2017-02-10 00:11:13 +0000, , optimize cfg path finding  piperorigin revid 147095059 147095059,,
3327,9ac2abccb7a91e46e1bfde477dab889c482ec94d,atthias Kramm <kramm@google.com>, 2017-02-09 19:54:35 +0000, , conservative creating new cfg node _jump_if  piperorigin revid 147062443 147062443,,
3328,5a8671d1567563f47d0183b37c95d6e98efef3cb,ebecca Chen <rechen@google.com>, 2017-02-08 22:43:23 +0000, , catch bad __getitem__ call fix bad __getitem__ call reported detects user defined container e.g. def mycustomlist int ... pytype know bad __getitem__ call move abstract.py reflect fact container exist outside typing.pytd add test verify adding __getitem__ subclass type still work expected e.g. class type def __getitem__ self return object type object treated call a.__getitem__ treated container  piperorigin revid 146959419 146959419,,
3329,330a3534794782bbcd3125c7620cd77036337bd7,ebecca Chen <rechen@google.com>, 2017-02-08 00:51:26 +0000, , change valuewithslots mix  piperorigin revid 146853484 146853484,,
3330,54b1e1eabced44d8a083caa84ead37e6a06b9157,ebecca Chen <rechen@google.com>, 2017-02-08 00:40:48 +0000, , inherit rather instance  piperorigin revid 146852178 146852178,,
3331,b8df2ff7bf0f3c865c788b54f3f57029c286740a,atthias Kramm <kramm@google.com>, 2017-02-06 23:03:08 +0000, , improve error message external type resolving find module  piperorigin revid 146715986 146715986,,
3332,ae8e82f54359fe2f090c24f535384b99d752d748,ebecca Chen <rechen@google.com>, 2017-02-06 18:41:40 +0000, , support inlining source code main_test  piperorigin revid 146681640 146681640,,
3333,660a0da455ff2844b319348bdc19d1827501bf09,ebecca Chen <rechen@google.com>, 2017-02-04 03:48:15 +0000, , set python_exe inferencetest rather individual subclass  piperorigin revid 146544260 146544260,,
3334,79143b122f3c988f74dd3027b2ebe700eb481977,atthias Kramm <kramm@google.com>, 2017-02-04 01:52:29 +0000, , flesh typing.pytd  piperorigin revid 146538505 146538505,,
3335,3365cf4d36080ec77cf2511c14509b3c29120dbf,ebecca Chen <rechen@google.com>, 2017-02-03 21:47:32 +0000, , handle error submodules gracefully importing something like foo.bar previously properly catching error foo import bar import foo bar foo.bar pull error handling common method remove  piperorigin revid 146512342 146512342,,
3336,76ff31880c482aecc2b3d1bc8380906c8c4df67b,atthias Kramm <kramm@google.com>, 2017-02-03 18:38:04 +0000, , deprecate simplify  piperorigin revid 146489937 146489937,,
3337,6085e89dbe35cf0cc50d9438a59eaf4bafa5eeb7,atthias Kramm <kramm@google.com>, 2017-02-03 16:31:45 +0000, , simplify name clash detection printvisitor also use typing.x refer thing add test pyi reingestion case work  piperorigin revid 146477518 146477518,,
3338,874a23a1a83ab6d3df327d116fe140e891a85ff8,atthias Kramm <kramm@google.com>, 2017-02-01 22:43:03 +0000, , unskip unittests work  piperorigin revid 146291599 146291599,,
3339,8f68ebbee6d91f4c376c84959ea30247261a3ea9,ebecca Chen <rechen@google.com>, 2017-02-01 21:27:01 +0000, , detect extra keywords call  piperorigin revid 146281544 146281544,,
3340,5f8a2e025d1576969f6d69bcd9ac94672e6c115d,atthias Kramm <kramm@google.com>, 2017-02-01 21:10:50 +0000, , upgrade typeshed version  piperorigin revid 146279801 146279801,,
3341,d9dde32bc3069e8f6f54353348972638772a6e6b,atthias Kramm <kramm@google.com>, 2017-01-31 23:16:27 +0000, , always require import typing used allow referencing identifier typing without module name change always require typing import using pyi code  piperorigin revid 146172830 146172830,,
3342,14c8a7edc5afc5473e562785035e8f7505685782,ave Baum <dbaum@google.com>, 2017-01-31 21:58:27 +0000, , fixed bug load_pytd merging treated dev null module fix recent breakage introduced unknown commit  piperorigin revid 146162085 146162085,,
3343,293ea3d6d70bc3a23dd6afdc575484a2459b3690,ave Baum <dbaum@google.com>, 2017-01-31 18:03:07 +0000, , multiple imports_map entry refer pyi file reuse module rather importing pyi data multiple alias  piperorigin revid 146132204 146132204,,
3344,32111413f3a2f6e6a2daad073235e41d64082d65,ebecca Chen <rechen@google.com>, 2017-01-29 02:42:31 +0000, , take account cmp_in cmp_not_in  piperorigin revid 145902634 145902634,,
3345,a3030596385413292bd080a59bea61109d56f6f5,ebecca Chen <rechen@google.com>, 2017-01-29 02:18:35 +0000, , add constant_type parameter get_atomic_ value python_constant  piperorigin revid 145902065 145902065,,
3346,377750d5ecaf444ad05d9b1234af13b35bc8c7d0,ebecca Chen <rechen@google.com>, 2017-01-27 19:59:24 +0000, , fix typo  piperorigin revid 145820828 145820828,,
3347,d504359778defac2cb85524691413e63c6c076c0,ebecca Chen <rechen@google.com>, 2017-01-26 18:53:30 +0000, , fix attribute lookup super  piperorigin revid 145693326 145693326,,
3348,0f59648bacdf0b0e203281a9969510bbbd90ae72,atthias Kramm <kramm@google.com>, 2017-01-25 22:26:43 +0000, , remove state.condition needed anymore store condition attribute cfgnode see _pathfinder pytd cfg.py  piperorigin revid 145596744 145596744,,
3349,c421ad95d4c4649ba420d229b96ab3e67d748614,ave Baum <dbaum@google.com>, 2017-01-25 19:08:11 +0000, , fix function type comment work decorated function function declaration span multiple line add warning type comment ignored tweaked test infrastructure fail warning generated almost always indicate test testing want fixed one test accidentally generating warning  piperorigin revid 145570245 145570245,,
3350,6e8bd348e960544c1f5d3ff70108d8a014f366f1,ebecca Chen <rechen@google.com>, 2017-01-25 18:33:50 +0000, , improve definition int.__init__  piperorigin revid 145565007 145565007,,
3351,a7e8a660feef6e2ca662d0b4201d30ab876ea80d,oogler <noreply@google.com>, 2017-01-25 14:47:47 +0000, , speed data flow checking remove call sorted mildly complex file visitors.py pytype sorted called million time cost second cost doe need payed well cache one list use instead special order necessary early search exit proving path without condition exist two path exist share node containing condition search aborted  piperorigin revid 145542278 145542278,,
3352,48af3e120025dcf4fd964d085bc1f89ec128eaf7,oogler <noreply@google.com>, 2017-01-25 11:09:13 +0000, , optimize expensive loop loop cause cost inferring visitors.py new loop faster iterating hit happens python land set operation done land changing way seen work save set creation inference visitor.py save 12seconds 50seconds runtime spend method total runtime 110 second  piperorigin revid 145528641 145528641,,
3353,a8d57c3cb808e3a0927dc0d41a957c88b264c413,ebecca Chen <rechen@google.com>, 2017-01-25 00:03:11 +0000, , improve definition first argument unicode __init__ also take encoding optionally error string http docs.python.org library functions.html bytearray  piperorigin revid 145480463 145480463,,
3354,8397103b96a30b163fd5802c98bfb76258ecbdd4,atthias Kramm <kramm@google.com>, 2017-01-24 23:36:49 +0000, , add compile builtins  piperorigin revid 145477178 145477178,,
3355,817dc3337a3d2dbb727c624226c61da0bc91e33e,atthias Kramm <kramm@google.com>, 2017-01-24 23:34:26 +0000, , fix print function mandatory parameter  piperorigin revid 145476912 145476912,,
3356,9f65ba5afd68050e7e6f4418fb8bdcdae840b813,atthias Kramm <kramm@google.com>, 2017-01-24 18:43:42 +0000, , check match none bool  piperorigin revid 145437908 145437908,,
3357,4cbe3ec1f802001cdbd2cbc2f0030279e89b4f9f,oogler <noreply@google.com>, 2017-01-23 16:48:21 +0000, , add documentation visitors.py without documentation unclear work reader need potentially look usage convince code legal  piperorigin revid 145291154 145291154,,
3358,894db22bee908c6326aa3aec6fb5141627bcc0da,ebecca Chen <rechen@google.com>, 2017-01-20 19:04:20 +0000, , handle tuple unpacking better presence multiple binding  piperorigin revid 145104320 145104320,,
3359,83f6f3f8f17be2345f65b11b173499a29b02a546,ebecca Chen <rechen@google.com>, 2017-01-18 23:17:18 +0000, , allow typing container without parameter used base class  piperorigin revid 144889028 144889028,,
3360,5c4979d69bf885e6553745cfc56370ec2d3aa95c,ebecca Chen <rechen@google.com>, 2017-01-18 19:28:04 +0000, , improve  piperorigin revid 144858894 144858894,,
3361,d41b57e96a1dcf76315ea84332492031f5633972,ebecca Chen <rechen@google.com>, 2017-01-18 18:33:15 +0000, , fix issue related tuples inline annotation tuple.cls tupleclass pytdclass tuple boundfunction need define get_class to_type class use rather full_name also move two tuple test test_tuple change check depended tuple.cls  piperorigin revid 144851032 144851032,,
3362,5395d58ecafbe144e405950a8efe6387299186ee,ave Baum <dbaum@google.com>, 2017-01-18 18:20:09 +0000, , scan pytype type comment way doe falsely process string happen look like comment  piperorigin revid 144849331 144849331,,
3363,cdcec4c8b03bd49044693dcc5f6d68d46e0744e2,ebecca Chen <rechen@google.com>, 2017-01-17 23:45:14 +0000, , make take lazy map account instantiating tupleclass instantiate type parameter etc various asserts catch mistake check change fix tuple instantiation issue skipped worked due first problem  piperorigin revid 144766019 144766019,,
3364,a9f4614fcae9eb2feb9ed387c4d533615ffb7dbe,ebecca Chen <rechen@google.com>, 2017-01-17 07:41:18 +0000, , improve handling toocomplexerror since called bad_matches possible _check_return raise toocomplexerror catch test case bug managed trigger experimental change place directly called catch exception soon raised  piperorigin revid 144676410 144676410,,
3365,37fc1392f930febc27e688916e4cb5ea84616345,oogler <noreply@google.com>, 2017-01-16 17:21:42 +0000, , create data flow checking pytype allows pytype understand code like none  return done adding condition attribute cfgnodes set first node branching instruction adding explicit node else branch far code branching instruction would directly point cfgnode containing return statement adding cfgnode guarantee place add condition reachable branch traversed extending solver collect condition way destination node redirecting place first condition defined instead going directly destination  piperorigin revid 144640608 144640608,,
3366,227329cebb9139b7586ec751d265ba87ecb7cf62,ave Baum <dbaum@google.com>, 2017-01-13 22:06:03 +0000, , add option precompiling builtins typing data  piperorigin revid 144482688 144482688,,
3367,72089dce392be99c59d530c02c1f33d818254002,ave Baum <dbaum@google.com>, 2017-01-13 20:31:07 +0000, , improve error message evaluation annotation type comment result name error  piperorigin revid 144472039 144472039,,
3368,750c87a56be0821a6348baffc04199bb849d1f0c,atthias Kramm <kramm@google.com>, 2017-01-13 16:46:22 +0000, , make return mutablemapping  piperorigin revid 144447130 144447130,,
3369,6ada9e0f2549d2cdf4b4bb55f3358f80c5fa2f1e,ebecca Chen <rechen@google.com>, 2017-01-13 02:57:11 +0000, , take tupletype account place type_match.py  piperorigin revid 144399212 144399212,,
3370,ae35dd23852af159b34eee382db7fa35fb3f4a34,ebecca Chen <rechen@google.com>, 2017-01-12 23:43:02 +0000, , crash setdefault called wrong argument inspect module determine setdefault passed wrong number argument raise error confidently else fix argument calling setdefault_slot add name file analysis pytype crash message  piperorigin revid 144380999 144380999,,
3371,2e206ebfa991c26116f5ffd6e9ac0edbd32620f6,ebecca Chen <rechen@google.com>, 2017-01-12 23:22:05 +0000, , make abstract matcher handle instance tuple subclass properly  piperorigin revid 144378689 144378689,,
3372,a898c1b5f086122477812b83f5e18907111fb330,ebecca Chen <rechen@google.com>, 2017-01-12 22:12:31 +0000, , switch expected actual argcounts wrong arg count message report first expected actual everything else consistent make easier write test error since keep referring back error.py  piperorigin revid 144369815 144369815,,
3373,adbbf971a6371cfac29e6e567e6872c11666c678,ebecca Chen <rechen@google.com>, 2017-01-11 23:19:29 +0000, , support abstract matching type tuple parameter  piperorigin revid 144256778 144256778,,
3374,eb20cb350ec2eda615337c97aae8e653690a6cd3,ave Baum <dbaum@google.com>, 2017-01-11 18:57:13 +0000, , process type comment opcode filename match file associated director type comment come  piperorigin revid 144225161 144225161,,
3375,5ab18713d2f7e10db7c2f3e2b08d08a74797465d,atthias Kramm <kramm@google.com>, 2017-01-11 18:39:52 +0000, , add iter view method typing.mapping  piperorigin revid 144222819 144222819,,
3376,5db6d93b78ec5cafc7ff555ddea58747f1d9e31e,ebecca Chen <rechen@google.com>, 2017-01-11 02:22:35 +0000, , support abstract matching heterogeneous tuples  piperorigin revid 144153872 144153872,,
3377,71d53b638256ffce74ae5cc4a932539bf4638953,ebecca Chen <rechen@google.com>, 2017-01-11 02:12:02 +0000, , add tuple.pyval variable considered computing view  piperorigin revid 144153059 144153059,,
3378,b9fca66ae03f9d4d35cb60d5dab79b3caaeb40c0,atthias Kramm <kramm@google.com>, 2017-01-10 23:40:05 +0000, , detect generator correctly even return yielding  piperorigin revid 144137535 144137535,,
3379,b4d683793a7ae1fccb68d31501bb3e32dfd06858,ave Baum <dbaum@google.com>, 2017-01-10 16:58:27 +0000, , adding support attribute type comment  piperorigin revid 144089167 144089167,,
3380,a2f115eb37af7dd7344c4f2a03ac29e9d4675eb9,ebecca Chen <rechen@google.com>, 2017-01-09 18:05:15 +0000, , add heterogeneous tuples  piperorigin revid 143974899 143974899,,
3381,dcb3026982eeaf8bcdee4b7e9e6ea6bbd6c76b5a,ebecca Chen <rechen@google.com>, 2017-01-06 23:17:50 +0000, , move to_type friend output.py move to_type to_pytd_def output.py since infer.py longer use hasattr check to_pytd_def simply try call fall back to_type upon error pytdclass.bases return variable instead list variable data mashed together get interpreter class base  rewritten single long method depend anything private  piperorigin revid 143821937 143821937,,
3382,97a813dd16f73e9a6812b9795cf081df88771bcc,ebecca Chen <rechen@google.com>, 2017-01-06 23:08:08 +0000, , prefer wrong arg type error class logging error  piperorigin revid 143820761 143820761,,
3383,ab20698669ed76b0a1c6debe0a9ad2ad9ef761e1,atthias Kramm <kramm@google.com>, 2017-01-06 19:50:22 +0000, , also display error detail  piperorigin revid 143797802 143797802,,
3384,3684ea374a136583c0792818e55c1b7059f85311,atthias Kramm <kramm@google.com>, 2017-01-06 19:33:59 +0000, , improve pretty print call signature error message instead printing e.g expected self sometype dict unicode iterable int int foo actual self sometype dict tuple str foosubclass print expected self int ... actual self str ... hence making easier spot bad parameter  piperorigin revid 143795901 143795901,,
3385,cc8ad8c9b88266af49e201a2f7fa6974842733bb,ebecca Chen <rechen@google.com>, 2017-01-06 19:07:12 +0000, , simplify  piperorigin revid 143792494 143792494,,
3386,8d48646142fc3d4409cc578359142bdb2c9bd206,atthias Kramm <kramm@google.com>, 2017-01-05 22:38:10 +0000, , fix output cfg output debug  piperorigin revid 143710502 143710502,,
3387,74a7ff3b3c57cb0c95f76012b2dd87b4b83cb170,oogler <noreply@google.com>, 2017-01-05 16:01:52 +0000, , allow working custom loader implementation also let type spy use pytype sub directory need prototype unknown commit  piperorigin revid 143666515 143666515,,
3388,4340c5654ac93e170bb19078cc6a3a7be0cf7f3a,ebecca Chen <rechen@google.com>, 2017-01-05 01:24:36 +0000, , rename method convert.py renames conversion method a_to_b format make easier remember dropped convert_ start name seemed redundant change create_varargs create_kwargs  respectively match format create_ method create_new_x return variable return value also turn private method external code call formerly instead  piperorigin revid 143615808 143615808,,
3389,0bf27f06601653b57ff167256bf062ad9e0819dc,ebecca Chen <rechen@google.com>, 2017-01-04 23:40:16 +0000, , support ... inline annotation  piperorigin revid 143604671 143604671,,
3390,ad3afda0edabca5d9e79dc98dbd7f7b93fc6d564,ebecca Chen <rechen@google.com>, 2017-01-04 21:34:35 +0000, , smarter top level defs ignore pyi generation ignore builtin name code analyzing redefined name typing.pytd ignored pyi file littered list ... type type similar change cause inferred pyi e.g. def pas change typing import def ...  typing import def ... break test unnecessary import removed expected pytd tweak printvisitor omit import case  piperorigin revid 143589706 143589706,,
3391,c1dc89cf08ec03d53102658f1a10336fea897585,ebecca Chen <rechen@google.com>, 2017-01-04 18:05:21 +0000, , fix behavior typing import  piperorigin revid 143565734 143565734,,
3392,4c918d64d32428d9b6507b7c787e37c673eed76c,oogler <noreply@google.com>, 2017-01-04 16:25:19 +0000, , add node name cfg_test make test easier debug  piperorigin revid 143556459 143556459,,
3393,fe19e0c130e0bac49e647c054628569646bdbc6c,atthias Kramm <kramm@google.com>, 2017-01-03 23:35:03 +0000, , create log message every time define new variable  piperorigin revid 143493736 143493736,,
3394,7e1a3cc8c8b602d3b413950e7210fee091cec976,atthias Kramm <kramm@google.com>, 2017-01-03 23:33:27 +0000, , add one extra log level trace logging use log extra low level information particular variable creation cfg construction  piperorigin revid 143493590 143493590,,
3395,b18467f264bdb4549f1c83d36e70975b72e8bff8,ebecca Chen <rechen@google.com>, 2017-01-03 22:59:10 +0000, , better printing tuples error message  piperorigin revid 143489760 143489760,,
3396,9a0cb0dd59f4f65539a447e03c0d7d5c8789a27a,atthias Kramm <kramm@google.com>, 2017-01-03 22:36:27 +0000, , deal code redefines union fix analysis pytype particular importing abstract.py  piperorigin revid 143487101 143487101,,
3397,809a6123ab2299d33312e0399fbd2e80f0909b22,atthias Kramm <kramm@google.com>, 2017-01-03 18:09:57 +0000, , get rid variable.name name pytype variable relict provided little value almost variable abstract item refer e.g position stack temporary result subexpression splitting condition dummy value difficult name name given existing code mostly useless misleading variable name also source bug incorrect name would tend leak analysis result error message inspecting variable debugging much insightful look x.name variable.data also add new logging statement fire whenever new variable introduced make much easier reliable discover origin variable log  piperorigin revid 143456613 143456613,,
3398,aca76314c5bd44750182e77f2ffce91bf6b2e468,atthias Kramm <kramm@google.com>, 2016-12-30 00:28:17 +0000, , allow store typevar  piperorigin revid 143215170 143215170,,
3399,0b3276433f286985ba96f9a8a9efd088b5c4d2c0,atthias Kramm <kramm@google.com>, 2016-12-29 23:40:54 +0000, , support importing anystr allows import anystr matter typevars general module use annotate function however continue generate warning happens  piperorigin revid 143212325 143212325,,
3400,9adbe3942affe282a89f8aeb52d030c8f4b15fc7,ebecca Chen <rechen@google.com>, 2016-12-29 23:33:20 +0000, , make optimization handle tupletype correctly  piperorigin revid 143211952 143211952,,
3401,b042f52ede32080f4bd6d6062031ad4a2601dc59,ebecca Chen <rechen@google.com>, 2016-12-29 18:11:25 +0000, , convert pytd.tupletype abstract.tuple vice versa  piperorigin revid 143191048 143191048,,
3402,38ca6ada45ae3cc269526616cc48c56098589aab,atthias Kramm <kramm@google.com>, 2016-12-29 17:59:07 +0000, , speed improve typeshed_test rather shallow parsing typeshed full parsing lookup subset  piperorigin revid 143190097 143190097,,
3403,79cad75a16a654aeb5ba2b59f06f0c3d369e9d85,atthias Kramm <kramm@google.com>, 2016-12-29 17:57:16 +0000, , rudimentary typevar support enables use typevar instance function annotation way exported pytd typevars yet considered local function call also importing typevar typing continues error test disable supported yet  piperorigin revid 143190001 143190001,,
3404,92421ad41595f94374468f508fd916064b6dd19c,ebecca Chen <rechen@google.com>, 2016-12-28 23:39:19 +0000, , parse heterogeneous tuples pytd.tupletype modifies parser parse heterogeneous tuples correctly change type_match.py handle tupletype convert.py turn pytd.tupletype back homogeneous tuple next step convert abstract.tuple create pytd.tupletype  piperorigin revid 143137620 143137620,,
3405,3a16d3e4d70070a07908446c61a07b15b436e078,atthias Kramm <kramm@google.com>, 2016-12-28 21:56:48 +0000, , unskip unit test work  piperorigin revid 143130548 143130548,,
3406,dcca181335984f7447e8da0e5b4eaa6dd72be1c0,atthias Kramm <kramm@google.com>, 2016-12-28 20:57:28 +0000, , better support dict.setdefault string dictionary  piperorigin revid 143126335 143126335,,
3407,9c8b3c8ec2ac17f83b8cf84d538b47d6d7ad7f3e,atthias Kramm <kramm@google.com>, 2016-12-28 18:08:23 +0000, , export __future__ import  piperorigin revid 143115026 143115026,,
3408,5ce831f2b87e4eb2d121a919b0e76a69d98c68f8,atthias Kramm <kramm@google.com>, 2016-12-28 18:06:52 +0000, , better support late annotation  piperorigin revid 143114948 143114948,,
3409,914159a8fefd064e14d3d22024740f4cd909a11f,atthias Kramm <kramm@google.com>, 2016-12-27 23:14:52 +0000, , dict.update take keyword parameter  piperorigin revid 143060524 143060524,,
3410,6326272450311d10dec62dd7c1140835163b23f0,atthias Kramm <kramm@google.com>, 2016-12-27 20:52:08 +0000, , careful caching unknown attribute  piperorigin revid 143050533 143050533,,
3411,d2549b11a00e7f498177993ca3aafc5d407181f8,atthias Kramm <kramm@google.com>, 2016-12-27 18:11:00 +0000, , make extract_locals default also rename invert  piperorigin revid 143039289 143039289,,
3412,5153034aadc8d2ae4c8447626753c01e6efd44b3,atthias Kramm <kramm@google.com>, 2016-12-27 18:08:26 +0000, , record function call function analyzing  piperorigin revid 143039145 143039145,,
3413,3d6f27cb6291d5d47386db10246e6ced3d9f095d,atthias Kramm <kramm@google.com>, 2016-12-27 15:44:10 +0000, , fix abc.pytd add missing import  piperorigin revid 143030954 143030954,,
3414,85abd98caa7ccf05579656f898d284e0ac4f1d86,ebecca Chen <rechen@google.com>, 2016-12-27 15:37:25 +0000, , add typing import bunch place  piperorigin revid 143030674 143030674,,
3415,5d0178fb5149c18e47195ae9b5ea3603cdfdf392,ebecca Chen <rechen@google.com>, 2016-12-23 01:02:21 +0000, , fix bug need first try use parameter type instance falling back parameter instance none since pytdclass pretty similar changed call common  piperorigin revid 142811300 142811300,,
3416,86a5249352a3928678d0191648be760c4c3c913e,atthias Kramm <kramm@google.com>, 2016-12-22 22:49:16 +0000, , make sure import default pyi generate  piperorigin revid 142801214 142801214,,
3417,9887587a2dee2b440791c44d4b418aabe79c5d31,atthias Kramm <kramm@google.com>, 2016-12-22 22:48:10 +0000, , rename test test_pytype.py main_test.py  piperorigin revid 142801119 142801119,,
3418,30f647d00005230c36d3becbfea4c4397caf3c73,atthias Kramm <kramm@google.com>, 2016-12-22 22:08:29 +0000, , require explicit typing import using  piperorigin revid 142797627 142797627,,
3419,efc42de0c7bd8ec0dccaaa2040bc144c85a2e0d0,oogler <noreply@google.com>, 2016-12-22 20:35:19 +0000, , speedup pytypes removing python land lookup removed hook called access dict class defined utils.py  piperorigin revid 142789560 142789560,,
3420,db094b73123331432aa47ddcc77aca554338d817,ebecca Chen <rechen@google.com>, 2016-12-22 00:11:37 +0000, , implement  piperorigin revid 142712322 142712322,,
3421,01f5c5e08b6c83517cc0d2ba5eb19679a9753f8a,atthias Kramm <kramm@google.com>, 2016-12-21 23:00:41 +0000, , remove program.freeze compressing cfgs important cfgs still long chain singly connected node become much dense without  piperorigin revid 142705126 142705126,,
3422,7bfe566da2b48662e83062d4aa7757d682a0e30d,oogler <noreply@google.com>, 2016-12-21 14:58:14 +0000, , speedup constant processing removing unnecessary calculation  piperorigin revid 142659765 142659765,,
3423,79f4a9d75cb2d7ba88363396d6e67cbbe4b4e38d,oogler <noreply@google.com>, 2016-12-21 14:54:36 +0000, , speed processing pytd.print self.pytd_sig expensive without evaluated often  piperorigin revid 142659560 142659560,,
3424,9f4231b2e6ee3843eed54143c50f9b2c921fa996,ebecca Chen <rechen@google.com>, 2016-12-20 22:27:09 +0000, , add tupletype pytd.py add tupletype use parsing heterogeneous tuples yet use new container type anywhere add pytd.py visitor test printing verifying work expected  piperorigin revid 142596980 142596980,,
3425,130f17cc1b2c094a18d60432e924c074d2b0e0b7,ave Baum <dbaum@google.com>, 2016-12-20 17:21:06 +0000, , merge visitor comprise single visitor improves overall performance pytype written maintain much similarity possible previous code leaving additional optimization later  piperorigin revid 142564388 142564388,,
3426,0cc8b912334c27871b8e7f1c9b8e0c15ef63ce75,atthias Kramm <kramm@google.com>, 2016-12-20 16:01:00 +0000, , remove old pyi parser  piperorigin revid 142557132 142557132,,
3427,bfa56a79763692d3b4e4b656396ffa239c5051e9,atthias Kramm <kramm@google.com>, 2016-12-20 15:11:04 +0000, , remove pytd setup.py  piperorigin revid 142553406 142553406,,
3428,33b767f6fc3ca67d620091962fa70cfa15ead6c5,ebecca Chen <rechen@google.com>, 2016-12-19 22:22:51 +0000, , fix tuple definition pytd file replaces tuple tuple ... tuple tuple def foo tuple tuple  def foo tuple tuple tuple obvious latter intended also collapse couple list set tuple ... type definition iterable deletes tuple nothing appears union homogeneous tuples  piperorigin revid 142486324 142486324,,
3429,be7dcae304f71314021b122e02931cf34150ea19,ebecca Chen <rechen@google.com>, 2016-12-19 19:06:42 +0000, , delete  piperorigin revid 142465001 142465001,,
3430,f3b04d916984a7addc66df306e924cf98bf11191,ebecca Chen <rechen@google.com>, 2016-12-17 01:09:56 +0000, , detect extra parameter generictype  piperorigin revid 142313991 142313991,,
3431,507203452d25a9d4a2c204e9e0f74941424b2210,ebecca Chen <rechen@google.com>, 2016-12-17 00:11:59 +0000, , fix parsing typing.tuple typing.pytd parsing typing.pytd making tuples homogeneous checking name typing.tuple instead tuple change allows delete whose return type tuple hiding incorrect parsing return type tuple corresponding method mutablemapping  piperorigin revid 142309127 142309127,,
3432,b258d1a92a7e392990ebff569de865d0b778fb4d,ebecca Chen <rechen@google.com>, 2016-12-16 18:43:02 +0000, , make homogeneous change parser check addition typing.tuple deciding whether make definition dictionary itemiterator .next previously use tuple tuple parsed heterogeneous tuple causing test_builtins2 fail safe switch slightly better definition  piperorigin revid 142274634 142274634,,
3433,29622afb2ad4b72728247241f55ea4e027b24a87,ave Baum <dbaum@google.com>, 2016-12-16 15:14:11 +0000, , add metric track time spent per visitor class required splitting visiting entry point vs. recurstion entry point remains visit recurtion via visitnode could find one override node.visit test sure whether create metric per visitor class create new mapdistribution metric former easier run use case mapdistribution probably worth refactoring metric two piece one organizes measurement normal vs. map another doe actual measurement counter stopwatch distribution etc seemed like overkill without use case though  piperorigin revid 142257010 142257010,,
3434,cb20525fbfb615a88df9d699a9c4668aaa128b92,ebecca Chen <rechen@google.com>, 2016-12-15 19:40:13 +0000, , improve definition list.__init__ tuple.__init__  piperorigin revid 142167840 142167840,,
3435,3385df2050edf59d29f8a6c1f85f25eb754f1abf,ebecca Chen <rechen@google.com>, 2016-12-15 00:07:13 +0000, , make aware tuple position  piperorigin revid 142077296 142077296,,
3436,a27738e6d4ce9e00e9a6f1513ab65f12ed2d898d,ebecca Chen <rechen@google.com>, 2016-12-14 23:22:19 +0000, , fix typing.pytd matching issue skipping typing native conversion typing.pytd cause fail match generator instance typing.iterator latter converted mro generator typing.iterator ...  piperorigin revid 142071556 142071556,,
3437,01c67ff5db8f5322a8d5ac0a0ff132c3cbc68a49,ebecca Chen <rechen@google.com>, 2016-12-14 20:55:56 +0000, , add byte_get_iter fallback __getitem__ well  piperorigin revid 142052804 142052804,,
3438,49926fe41c6ae8ef738ac04d69b6e5f9e2e0eb17,ebecca Chen <rechen@google.com>, 2016-12-14 19:08:46 +0000, , convert long value instance int convert.py  piperorigin revid 142038696 142038696,,
3439,f1ccba357695b4171dadb6fc0cfa065a26c0706e,ebecca Chen <rechen@google.com>, 2016-12-14 00:37:44 +0000, , improve  piperorigin revid 141956400 141956400,,
3440,831a0eb9bfb85bc0af64142586f4d3eeffc685c8,atthias Kramm <kramm@google.com>, 2016-12-13 23:38:25 +0000, , add support __getslice__  piperorigin revid 141949017 141949017,,
3441,06fe693cbe1f7437509818bead197346ff1bddb1,ebecca Chen <rechen@google.com>, 2016-12-13 22:13:08 +0000, , use member store dict value causing goofy error pytype thought e.g.  attribute  piperorigin revid 141938129 141938129,,
3442,5123062f6f019f98e526a62d16f12d5f8aeff790,ave Baum <dbaum@google.com>, 2016-12-13 21:46:38 +0000, , copy common code legacy parser new parser enables deletion old parser later time also eliminates hack place allow new parser call code old parser mutator copied renamed _mutator copied renamed renamed made function instead method slight code cleanup wrote new test renamed made function adjusted raising error test copied ast_test adjusted work new test framework mergesignatures renamed made function adjusted raising error find clearly delineated test wrote new test cover various code path  piperorigin revid 141934400 141934400,,
3443,9571a0966efbd3380a275393e40722885ce1dfc1,atthias Kramm <kramm@google.com>, 2016-12-13 21:27:42 +0000, , add basic set function typing.mapping  piperorigin revid 141931803 141931803,,
3444,ed829295ec68cf6be54c703c49690436260f73e5,atthias Kramm <kramm@google.com>, 2016-12-13 19:25:33 +0000, , stop code path end_finally exception pending also set default make logging message intuitive  piperorigin revid 141917240 141917240,,
3445,21493d1d64e5e15a0d85f1669845bb17173e2ba9,oogler <noreply@google.com>, 2016-12-13 09:41:12 +0000, , improves is_cmp heuristic around type two thing different type safe assume object identity i.e type type follows  therefore  reverse true  doe follow type type  piperorigin revid 141864390 141864390,,
3446,11361c9316cf05dac30080ad01f1cda5d4199ee2,ebecca Chen <rechen@google.com>, 2016-12-13 00:43:37 +0000, , get rid  piperorigin revid 141827295 141827295,,
3447,5104c02b0e02bd939f905052bda1a721a2e27301,ebecca Chen <rechen@google.com>, 2016-12-10 01:38:24 +0000, , add container typing.pytd typing.py change get rid hard coded list container typing.py instead search pytd file container add member map callable tuple special case need class since doe computation store typingoverlay instance converter rather creating new one every time something imported typing change step toward fixing testbadgetitem since missing container typing.py one main source spurious error found testbadgetitem moved test_errors test_checker original location mistake test_typing test creates annotation using container typing.pytd plus custom container verify encounter error code shared converter typing.py factored helper method  piperorigin revid 141620144 141620144,,
3448,feda274a56788cde0cdf8aabd0b569c7771ad044,ebecca Chen <rechen@google.com>, 2016-12-10 00:09:20 +0000, , make long alias int  piperorigin revid 141611937 141611937,,
3449,99a0d82014ee174675b86d27888b165b84a05d88,ebecca Chen <rechen@google.com>, 2016-12-09 22:58:30 +0000, , change to_pytd_def generate alias previously falling back meant definition like mytype list str putting class mytype pas pyi  piperorigin revid 141604000 141604000,,
3450,ef8f4aa25190e3110aa5fe4b768f60c6ae4f4d0e,atthias Kramm <kramm@google.com>, 2016-12-09 22:43:33 +0000, , better pyi dict.viewkeys  piperorigin revid 141602180 141602180,,
3451,9d9b5869e9ff4a79d33dd663fb68a73d502fa16b,atthias Kramm <kramm@google.com>, 2016-12-09 22:22:39 +0000, , fix typing.text unicode python str  piperorigin revid 141599528 141599528,,
3452,3226bab84bb80c61d87fd63a68689d251c7c4d93,atthias Kramm <kramm@google.com>, 2016-12-09 21:51:02 +0000, , better definition reduce  piperorigin revid 141595233 141595233,,
3453,5bc33af63cb15433063579c1cb45c2423f76400b,ave Baum <dbaum@google.com>, 2016-12-09 20:16:27 +0000, , initial support type comment record type comment director create director rather passing add support type comment line following function  piperorigin revid 141585096 141585096,,
3454,c2644a3d36b207e4595c3f0db7587332d391c3ee,ave Baum <dbaum@google.com>, 2016-12-09 20:14:04 +0000, , replace ply generated precondition parser simple recursive descent parser  piperorigin revid 141584834 141584834,,
3455,63ebb37fab59972df95f3bdcaf6e2db13b14e349,ebecca Chen <rechen@google.com>, 2016-12-09 19:15:35 +0000, , smarter marking incomplete instance init_class  piperorigin revid 141577708 141577708,,
3456,93fa73f21a6a87e0909a824dac0b8e0117820cc0,ebecca Chen <rechen@google.com>, 2016-12-08 22:23:52 +0000, , fix bug empty type parameter view _get_values need check existence binding  piperorigin revid 141483814 141483814,,
3457,519d717700df94a590eb0ed96d975e71b26a201e,ebecca Chen <rechen@google.com>, 2016-12-08 21:15:19 +0000, , call late annotation well  piperorigin revid 141475099 141475099,,
3458,f7049770f523585583bdb2489701c790606151fd,ebecca Chen <rechen@google.com>, 2016-12-08 19:01:17 +0000, , add support passing view to_type unsolvable among possible value parameter fails type matching bad_matches print parameter hiding bad value change add view argument to_type bad_matches specify bad value parameter included converting pytd type  piperorigin revid 141459179 141459179,,
3459,a560c2d7a228a78f5cdd6a4f932768a58001f26c,ebecca Chen <rechen@google.com>, 2016-12-08 18:52:36 +0000, , improve bad return type error message change message expected actual type format used function related error e.g. wrong arg type  piperorigin revid 141457973 141457973,,
3460,013293b81bd3ceeb61bbde960f0a6e8795fdc661,ebecca Chen <rechen@google.com>, 2016-12-07 19:24:15 +0000, , remove pointless assignment convert.py due recent change accidentally setting types.nonetype self.none twice recent assignment one inside loop one want keep since loop update  piperorigin revid 141333495 141333495,,
3461,cdfdcd5181bc4e6cd6a625645db1cc850a609eef,ebecca Chen <rechen@google.com>, 2016-12-07 18:37:46 +0000, , clean code matcher matcher_test fix way formal attribute computed allow formal type left matching make private method matcher since longer used externally kept public matcher_test test move bad_matches matcher method used code compute_subst bad_matches top file make small improvement matcher_test  piperorigin revid 141326624 141326624,,
3462,1f5ed31838eb9346353472e1019ca7083f0e5116,ebecca Chen <rechen@google.com>, 2016-12-07 18:30:49 +0000, , fix small bug fix bug type parameter accidentally set variable rather add assert matcher.py would caught problem assert type parameter value instance lazydict evaluating value __init__ could lead infinite loop  piperorigin revid 141325565 141325565,,
3463,9a9b09ea8f99bd180e39870ce37e5d6a71a607ed,ebecca Chen <rechen@google.com>, 2016-12-07 18:20:24 +0000, , remove extra space newlines string annotation error message  piperorigin revid 141324118 141324118,,
3464,bb96fd9d5823c201bd2aad4125078ff2e77457a9,ebecca Chen <rechen@google.com>, 2016-12-06 20:12:39 +0000, , extract pythonconstant value something like def list rollout ... def ... previously would print invalid type annotation instance str must quote entire annotation invalid type annotation instance int type change print invalid type annotation rollout must quote entire annotation invalid type annotation type  piperorigin revid 141209176 141209176,,
3465,5dcd8b72f1e6cd6a0251956e682a4e9052a26e02,ebecca Chen <rechen@google.com>, 2016-12-06 07:25:59 +0000, , better support typing.type temporarily add type typing.py order flush bug hidden replacement type unsolvable add special case instantiating type implement get_class abstract.union pytype crash type union ... change abstract matcher properly match e.g. pytdclass int type union pytd int pytd str make union.__repr__ print union option instead union  piperorigin revid 141145387 141145387,,
3466,6ea2930da51dd3a7aa99ab410ec9566f8db89f14,ebecca Chen <rechen@google.com>, 2016-12-05 18:39:33 +0000, , move pretty printing abstract value errors.py previously pretty printing logic spread across errors.py vm.py various __str__ method life errors.py refactoring also clean corner case unknown unsolvable print unknown printed unsolvable unsolveable nested class print properly union type int type str say print union type int type str rather union int str invalid annotation message bit friendlier use instead arbitrarily grabbing var.data instance parameter multiple binding  piperorigin revid 141069527 141069527,,
3467,4afa176a5130df4965b71acbaf2a5f8db6b4ac16,atthias Kramm <kramm@google.com>, 2016-12-02 16:54:33 +0000, , setup.py add pytype.pyi package  piperorigin revid 140855109 140855109,,
3468,f76def4e5ca9b6c023f2b07b39a8fe52be01701c,atthias Kramm <kramm@quiss.org>, 2017-02-10 07:08:34 -0800,46, merge pull request gvanrossum fix setup typeshed stdlib 2.7 moved ...,,
3469,bffa86d0f79be7564136dc24763970e06cd30293,uido van Rossum <guido@guido-mbp.corp.dropbox.com>, 2017-02-10 06:57:34 -0800, , typeshed stdlib 2.7 moved ...,,
3470,07027f89249f3a4891d951d04dd2bae5ee8d2e8d,atthias Kramm <kramm@quiss.org>, 2017-02-09 07:33:16 -0800, , update typeshed,,
3471,8d4d07787c0e15ac87244bd1cb439ad29cae5e03,atthias Kramm <kramm@quiss.org>, 2017-02-06 10:42:39 -0800,44, merge pull request nodakai patch use official github url .gitmodules,,
3472,04b8ec9842ea7c06991588f2455c5498535359d1,"ODA, Kai <nodakai@gmail.com>", 2017-02-06 15:32:25 +0800, , use official github url .gitmodules former version problem proxy,,
3473,4e164ccd00572469bd2356881ca9772726bc873a,atthias Kramm <kramm@google.com>, 2016-12-01 15:26:57 -0800, , add missing setup.py entry,,
3474,562b53afaffa9517ef713b8b7fc7f53b35834f0d,ebecca Chen <rechen@google.com>, 2016-12-01 21:49:14 +0000, , improve definition change generator three type parameter send method precise http github.com python typeshed blob master stdli typing.pyi since common specify one parameter generator change also tweak convert.py typing.py support specifying parameter generic filling unsolvable rest  140772693,,
3475,816a4f4182d86064ee293baaef0d7e9968220d97,atthias Kramm <kramm@google.com>, 2016-12-01 21:47:00 +0000, , also allow pep 526 syntax variant type ... see http github.com python typeshed issue 653 issuecomment 264224673  140772362,,
3476,e2ef27b4ef5cc1a1023dd23fa4a44211890ae08f,ebecca Chen <rechen@google.com>, 2016-12-01 21:12:10 +0000, , show helpful error message invalid annotation bad annotation def ... switch reporting int type instance int type  140767517,,
3477,a50bbcf5827e5347de3ddf59678a9cfeb29991a7,ave Baum <dbaum@google.com>, 2016-12-01 20:13:41 +0000, , switch new parser added check new_type fail union optional parameter convert legacy parseerror new parseerror necessary since legacy code still used within parser eventually away supply non none filename _legacy avoid failed assertion switch consumer  140761074,,
3478,68510e6989cfcaba70bf183c21a7b479e879f9c8,atthias Kramm <kramm@google.com>, 2016-12-01 16:18:29 +0000,653, allow pep 526 syntax pyi see http github.com python typeshed issue 653  140732779,,
3479,ce4e2b86b45f0fd017d5eb5cd4a66b5b1f2258fe,ebecca Chen <rechen@google.com>, 2016-11-30 21:43:48 +0000, , fix return checking generator currently pytype actually check return type generator something like def generator int ... return annotation replaced unsolvable generator missing typing.py change add generator typing.py pytype check return fix checking logic also deletes unused generator attribute state.frame  140646039,,
3480,e08541fceac62f829177eb12aa12cb3f04184890,ave Baum <dbaum@google.com>, 2016-11-30 19:52:22 +0000, , small parser fix ignore indentation comment make platform configurable fix bug version tuples normalized build error message parser error syntax error  140632146,,
3481,19ceae0f9c634f671bdcee30dc70136b3b4a4a01,ebecca Chen <rechen@google.com>, 2016-11-30 17:53:22 +0000, , report error union optional without parameter already allow def union ... allow def union ... either  140616043,,
3482,31b86b56b17dad46bbefa474ea2a84654d94d780,ebecca Chen <rechen@google.com>, 2016-11-29 22:36:55 +0000, , allow function annotation  140528357,,
3483,fff7577e746e21704cbab42b634b0ee377b71182,ebecca Chen <rechen@google.com>, 2016-11-29 22:08:26 +0000, , replace class typing.py abstract.py equivalent right typing.py duplicate lot class e.g. exists abstract.union typing.union type list int represented converted pyi typing.list value converted inline annotation change typing.py class build abstract.py equivalent indexed example old behavior typing import union creates typing.union object def union str unicode ... call getitem slot typing.union return new typing.union object use annotation new behavior typing import union creates typing.union object def union str unicode ... call getitem typing.union return abstract.union object use annotation case bare typing.py object used annotation replaces corresponding abstract.py class typing import list creates list object def list ... replaces list list keep various test passing change also move logic setting module convert.py  change matcher allow formal type left tweak handle container instance uninitialized type parameter  140524544,,
3484,506b37d04f934be772e866f2a65048824ce046ba,ave Baum <dbaum@google.com>, 2016-11-29 20:35:16 +0000, , change parsing call use parse_string rather instantiating typedeclparser directly preparation switching new parser  140512490,,
3485,52f5241b59418c9cc308da0a1edb70f3e9a4aa00,ebecca Chen <rechen@google.com>, 2016-11-29 18:56:33 +0000, , pop frame crash  140499612,,
3486,06f743f13ad0e06598b40b6380affcb5220149e0,ebecca Chen <rechen@google.com>, 2016-11-29 17:55:31 +0000, , refine varargs kwargs annotation used argument type checking replacing annotation unsolvables pytype complain e.g. getting list instead tuple varargs change use iterable mapping instead unsolvables also change optimization infer  140490984,,
3487,f84ce9486f0ae2f973a5e1d1d4a8b2bd3ba62b0f,ebecca Chen <rechen@google.com>, 2016-11-22 20:49:39 +0000, , replace hard coded type parameter abstract.py constant  139942685,,
3488,bda827d1ae8f8ff3da8a8aad1d70d308570a7a28,ebecca Chen <rechen@google.com>, 2016-11-22 20:46:53 +0000, , clean odds end related abstract value get rid make sure union non empty drop name argument dict constructor instead aliasing add method lookup_builtin look given type builtins typing  139942398,,
3489,102dbf6f288f44c83ae2ca98b056d99bd086d23c,ebecca Chen <rechen@google.com>, 2016-11-22 20:21:43 +0000, , catch ambiguous annotation inside container also improves invalid annotation error message  139939992,,
3490,ae88562041914dc78f525296a4673fc96732a668,ebecca Chen <rechen@google.com>, 2016-11-22 20:00:00 +0000, , check type parameter matching  139937541,,
3491,08f88ad26dbee464506921e4875713233aabcebb,oogler <noreply@google.com>, 2016-11-22 09:53:16 +0000, , teach pytypes none instance enables code like def foo optional str str none return return working pytypes know nonetype one instance making one instance pythonconstant state.py able know none instance  139883512,,
3492,44607573cd85b746012125fd88db19c1e41e909f,ebecca Chen <rechen@google.com>, 2016-11-21 20:13:09 +0000, , always pop frame push  139815721,,
3493,b7faede1c7df9eaf426cab125729d00fd35f9142,lvaro Caceres <acaceres@google.com>, 2016-11-18 18:54:00 +0000, , added test fails leak term show opensource version also cleaned leak file removed comment json parsed whatever reason also includes following change add parser_ext setup.py include necessary file exported .tar adding genlex genyacc rule source filegroup output file included however output appear genfiles need move build_tar.sh also necessary scrub portion include path line directive remove reference directory structure  139598503,,
3494,6b2e7d62f9ab7326f7032c0212af9ab64092a8ce,ebecca Chen <rechen@google.com>, 2016-11-17 20:50:43 +0000, , make sure __init__ called instantiating annotation  139494987,,
3495,dc3081258270f0dc558b63e53877b16e4b6a9e66,ebecca Chen <rechen@google.com>, 2016-11-17 20:38:57 +0000, , report error recursion caused annotated __init__ args init_class stop logging recursion error construct incompletely initialized instance instead unsolvable upon encountering recursion  139493572,,
3496,266198338ec1a3ad3602321aee64ab421e9ab766,ebecca Chen <rechen@google.com>, 2016-11-17 20:28:57 +0000, , improve check existence annotation consider annotation present annotation dict update appropriate set_annotation called  139492433,,
3497,5709197c8f425e9a424509240fcc089c028b9dc8,ave Baum <dbaum@google.com>, 2016-11-17 20:21:32 +0000, , add test par everything typeshed similar except new parser legacy parser removed need one set test  139491585,,
3498,3e888f5d8282cb926c2d26a24dd6fe6bf814fb5d,ave Baum <dbaum@google.com>, 2016-11-17 20:20:45 +0000, , minor parser cleanup moved refholder include file return lexerror indentation popped correctly ensure error message associated lexerror propagated parser requires stashing error message lexer object way access parser stack within error function enable verbose parser error  139491514,,
3499,18779036e846f0d1ee1ed218d1b6b3c69f64f41c,ave Baum <dbaum@google.com>, 2016-11-17 19:26:37 +0000, , add condition arg load_attr honor enclosing condition  139484835,,
3500,010c6d9b039453757f5550f1fcdd3e2f54f395d4,ave Baum <dbaum@google.com>, 2016-11-17 16:39:28 +0000, , tweaking debug output make little consistent variable always printed using name value text previously true single binding multiple binding used clumsier representation printed binding oversight reworked code back  139464827,,
3501,7af4dac11a84c635ff07f4bd59e83cdc0e760c22,ave Baum <dbaum@google.com>, 2016-11-16 22:43:57 +0000, , added test catching memory leak fixed one leak  139381288,,
3502,2f27531d91c04d25d3a072c4f61cd8709f19da99,ave Baum <dbaum@google.com>, 2016-11-16 15:48:27 +0000, , add support module name pep484 translation  139329824,,
3503,ebdb1fad3ab3f2af85c8b3747833fd574a1495c4,ebecca Chen <rechen@google.com>, 2016-11-15 23:17:10 +0000, , change none nonetype annotation  139254675,,
3504,8858eb92ede75c3e32c749657323e440d1e3c45d,ebecca Chen <rechen@google.com>, 2016-11-15 23:03:18 +0000, , postprocess varargs kwargs annotation give right type given annotated definition like def args kwargs ... type args tuple kwargs dict str postprocesses annotation late annotation fix type  139252643,,
3505,05ab9808e832e1bf0ed5d4a6eb3b95232c4abd18,ave Baum <dbaum@google.com>, 2016-11-15 21:35:29 +0000, , improved error printing parseerrors include filename source text pointer character position caused error  139240699,,
3506,cfc3b33be2670b7f9e8b56b1a2c60a8ff568fc15,ave Baum <dbaum@google.com>, 2016-11-15 20:09:59 +0000, , fix couple lexer bug accept comment disable indent dedent within parenthesis  139231096,,
3507,b39cb7d9b1f7770892a07e09909c7dd56562b52a,ebecca Chen <rechen@google.com>, 2016-11-15 19:57:21 +0000, , fix bug  139229310,,
3508,9938dc88a7d595f477e661c0f4701714b7b7d12c,ave Baum <dbaum@google.com>, 2016-11-15 19:36:09 +0000, , add support statement within class definition  139226425,,
3509,d4b52a4f4aede8a4b93a14cf9fabf0768b025433,ave Baum <dbaum@google.com>, 2016-11-15 17:23:47 +0000, , minor refactor make easier compare profile legacy new parser  139209284,,
3510,fafa1c3db3a60729d0444f62592382f4c2d793f2,oogler <noreply@google.com>, 2016-11-15 16:44:37 +0000, , update exit call definition  139205415,,
3511,08d9fa9c4368c7b0c0bed6780559fa5cbc391bf2,ebecca Chen <rechen@google.com>, 2016-11-14 21:33:14 +0000, , add skipped test bug  139113849,,
3512,c1d978a83cea10650863a333a7a6b07d96f96df6,oogler <noreply@google.com>, 2016-11-14 16:08:14 +0000, , module recognized problem know test test_pyi also pass removed test build removed code therefore believe work fix two issue module module check check therefore dead abstract.module subtype  139074221,,
3513,b4784befb01a61a25668b6f7cf3b0204e5d1b6ad,ebecca Chen <rechen@google.com>, 2016-11-11 22:15:07 +0000, , support args kwargs notation  138917659,,
3514,3c6caf3c028e00e261b2653989f95199fc45d9e3,ave Baum <dbaum@google.com>, 2016-11-11 22:11:59 +0000, , added support typevar fixed bug added test check  138917302,,
3515,fd4e3e437970251ff6134efde43a51b4b313ef00,ebecca Chen <rechen@google.com>, 2016-11-11 20:05:15 +0000, , descend container union pytd template construction  138903583,,
3516,f82e35a52d00d76c2e01c9dab68539152bbd9452,ave Baum <dbaum@google.com>, 2016-11-11 17:28:57 +0000, , dictionary itemiterator inherit iterator  138884494,,
3517,d5c733282dbd725e49fcef5b4edd05760791f51d,ebecca Chen <rechen@google.com>, 2016-11-10 23:44:48 +0000, , conversion  138815717,,
3518,00c812b1af14c95bc2556e1e029ccd231b521b22,ebecca Chen <rechen@google.com>, 2016-11-10 20:29:12 +0000, , give warning type annotation inner string  138791020,,
3519,fdbc2f4faeaaa04bd74c952c287df78495695470,ave Baum <dbaum@google.com>, 2016-11-10 20:13:20 +0000, , implement top level statement  138789449,,
3520,e7c915e89457863c3f8ea691fe666637c4c178e8,ebecca Chen <rechen@google.com>, 2016-11-10 19:12:35 +0000, , refactor return checking logic  138781609,,
3521,d723eae4d8da45dc68eceae13028a2cd49b3249e,ebecca Chen <rechen@google.com>, 2016-11-10 18:55:41 +0000, , replace actual return type annotation  138779376,,
3522,853b236a6ec68b7b4086e342c96f42634ad4d189,ebecca Chen <rechen@google.com>, 2016-11-09 22:57:20 +0000, , remove path.pytd  138689585,,
3523,aee8e8441abd46fb79c8fd8ea95e15822a64ac3e,ebecca Chen <rechen@google.com>, 2016-11-09 19:11:02 +0000, , allow matching empty variable always succeed  138660983,,
3524,3ddb0220fbc321100e09c2517371818283d97132,ebecca Chen <rechen@google.com>, 2016-11-09 18:55:39 +0000, , include optional args argument dictionary  138658920,,
3525,981e13a0cada215def3953bd77943ea167b61fa7,ave Baum <dbaum@google.com>, 2016-11-08 22:57:23 +0000, , use union declare type token nonterminals one stack value type pyobject also let bison distinguish symbol value keywords punctuation etc turn lead meaningful warning value used setting value illegally overall mean little work adding new nonterminals type directive make easier spot legitimately leaked python object lvals case actual python object  138569232,,
3526,6633e090e8f2d2677367ba7e4610ea7d3c6401ca,ebecca Chen <rechen@google.com>, 2016-11-08 19:43:44 +0000, , allow empty variable match class  138544396,,
3527,3c60cc90160c6b5ea2ed78bbf4259f5b4035fe61,ebecca Chen <rechen@google.com>, 2016-11-08 19:13:47 +0000, , make argument checking pytdfunction similar change way argument type checked ... match ... shared logic checking call _match_view two function subclass override moved matcher.py class use move matching logic order matching continue working type typing.py change way passed args printed error binding argument printed first one otherwise testunion test_errors.py break pyi something foo.pyi def str none bar.py __any_object__  else  foo.f pass type checking edited test annotated function behavior increase shard count test_errors.py timed one test run  138540344,,
3528,08bc280bdd9faa3f5a766bb618943f22118fb11e,ebecca Chen <rechen@google.com>, 2016-11-07 23:47:39 +0000, , make attribute error message helpful  138450555,,
3529,60adc43bee526f64777dc74876034c545694bc65,ave Baum <dbaum@google.com>, 2016-11-04 21:38:24 +0000, , support metaclasses original production bit clumsy refactored treat parent list args individual args either parent type keyword tuple lead little checking python side redundant code overall add suggested earlier register class name may shadow pep484 name add test alias used new_type implemented long ago never explicitly tested  138235850,,
3530,d8e29e8566aaf5e47149f908fcacb646e89e5a69,ave Baum <dbaum@google.com>, 2016-11-04 17:11:06 +0000, , basic support class still thing implemented already getting rather large also fixed bug empty return clause anythingtype none object  138202682,,
3531,ea5b99df843bd35c9b07642a4f67e9cade0d7afd,ebecca Chen <rechen@google.com>, 2016-11-04 02:01:28 +0000, , delete cstringio.pytd favor typeshed cstringio.pyi  138147211,,
3532,a304845c43c9dcbcbc9b48fc8e607363de92cb49,ebecca Chen <rechen@google.com>, 2016-11-04 01:29:47 +0000, , warn importing typevar yet supported  138145290,,
3533,112bb5d18d85432d86d356617960c54c074f1966,ebecca Chen <rechen@google.com>, 2016-11-03 21:12:40 +0000, , replace actual argument type annotation calling function  138116116,,
3534,1ad998fd61d08ba218de4af42c4a491d2fdef95f,ave Baum <dbaum@google.com>, 2016-11-03 20:59:14 +0000, , instantiation result multiple binding call __init__ one indepdently fix problem argument type union fully initialized  138114203,,
3535,851e8fb2d0eebc4b84b63e8c35fa93e30085a4a2,ave Baum <dbaum@google.com>, 2016-11-02 20:10:53 +0000, , refactor test separate class method keep test better organized make failure message meaningful  137983184,,
3536,fe57c5fe7311682091774526ab263ff950826519,ebecca Chen <rechen@google.com>, 2016-11-01 21:20:57 +0000, , report attribute error incompletely initialized instance quick sometimes hit maximum depth abort analysis instance completely initialized case instance may attribute know return unsolvables attribute find rather reporting error  137870745,,
3537,38ff664b80257d607aae8ba94b3e7a040b977dbe,ave Baum <dbaum@google.com>, 2016-11-01 20:57:30 +0000, , build list constant func definition instead adding peer preparation adding class require list constant function  137867488,,
3538,253d9e4c6bc60bf4ee8f7e938b093516abe4dd07,ave Baum <dbaum@google.com>, 2016-11-01 20:56:20 +0000, , make unary_not little smarter  137867354,,
3539,01273b4c8be017700f3e216b0b4b5d0f280913d5,ave Baum <dbaum@google.com>, 2016-11-01 20:03:32 +0000, , fix output debug also work check probably broken since infer check refactor  137860425,,
3540,105e68dbe1cc8e71018f0659ddc569258cf47e91,ebecca Chen <rechen@google.com>, 2016-11-01 18:20:17 +0000, , handle recursion gracefully report pytype error rather crashing recursion encountered constructing instantiating class  137847134,,
3541,f1a02f4df51a9416c8ec55ed2f469336dfa8c3e2,ebecca Chen <rechen@google.com>, 2016-10-31 18:29:56 +0000, , analyze __init__ __new__ even type annotation miss lot attribute initialization skip  137726737,,
3542,d31dacc8afcc2537bcedf341e7f3ec2467a7c978,ave Baum <dbaum@google.com>, 2016-10-28 20:37:29 +0000, , added support pythoncode  137547260,,
3543,2022075e4b33635130eba4218a6aaa44cd630424,ave Baum <dbaum@google.com>, 2016-10-28 20:31:56 +0000, , added support namedtuple  137546607,,
3544,74a366f3a2980bf6f3ef161d271b3d19beaa6a0b,ebecca Chen <rechen@google.com>, 2016-10-28 02:03:10 +0000, , better printing abstract.union error message printing thing like union instance nonetype instance int instance str would rather union none int str change also move pretty printing logic errors.py __str__method atomic abstract value  137469743,,
3545,b920ddb29509a470d89a079add29dffb46f3118e,ave Baum <dbaum@google.com>, 2016-10-27 22:25:37 +0000, , filter ignored decorator raise parseerror invalid one  137449127,,
3546,83830b97cb78262506b6fabf4f14a88ef5d29fd0,ebecca Chen <rechen@google.com>, 2016-10-27 18:58:41 +0000, , allow super called class  137422700,,
3547,7afc3d07c736b07ca6bbb66c80ccbd6fe78b9769,ebecca Chen <rechen@google.com>, 2016-10-27 18:54:05 +0000, , prematurely abort type matching upon encountering unknown mro  137422171,,
3548,4cbcbc7a2ffd0c8f012d1f5ad3e70c1bb0ef4f9e,ave Baum <dbaum@google.com>, 2016-10-27 04:02:39 +0000, , add support implied tuples base type specified parameterized type  137354567,,
3549,decbb4853e0c43ebc90a5916fa6e532f9f5216be,ave Baum <dbaum@google.com>, 2016-10-27 00:02:42 +0000, , added support function also fixed bug calling peer twice  137338690,,
3550,787bf1ef50ddb113e14d0104e06302a7e4b43e62,ebecca Chen <rechen@google.com>, 2016-10-26 20:53:46 +0000, , fix definition  137315497,,
3551,489532d91f1b55567e85bee941c3c696d8237913,ebecca Chen <rechen@google.com>, 2016-10-26 20:05:24 +0000, , support setting class metaclass via __metaclass__ attribute also change typenew.call build new style rather old style class bug  137309485,,
3552,1dabd9da21fefd6209f7b5e4478861629256c859,ebecca Chen <rechen@google.com>, 2016-10-25 23:37:08 +0000, , include metaclasses pyi output converting pytd definition set pytd class metaclass field metaclass type inherited also update parser abstract matcher handle union metaclasses e.g. class metaclass ... pytype output  137218444,,
3553,58db831fb3002dc4acdcb508b55dd0bf186b877f,ebecca Chen <rechen@google.com>, 2016-10-25 21:15:10 +0000, , print instance type parameter error message  137201203,,
3554,564255670cf6ec76699402ba0225bfef37577142,ebecca Chen <rechen@google.com>, 2016-10-25 17:50:05 +0000, , add __all__ typing.pytd  137175388,,
3555,173a9f27b98cd1b99b70d6096ffef5ca5b54da46,ebecca Chen <rechen@google.com>, 2016-10-24 17:01:24 +0000, , make type build new class possible also change abstract.dict use member rather _entries make play nicely add skipped test bug caused str.__new__ return type str rather current class  137045278,,
3556,f32d62da726f7269fe6099513f39cec06ccf667b,atthias Kramm <kramm@google.com>, 2016-10-24 14:30:49 +0000, , check return value dict cfg  137027386,,
3557,677b3b9a38889f41ef08460c1d8c5d47d4da3907,ebecca Chen <rechen@google.com>, 2016-10-21 21:47:44 +0000, , refactor matching beginning  136875866,,
3558,a8101926285785c5bf5d09cfdcbc601ce8aa9de8,ave Baum <dbaum@google.com>, 2016-10-21 20:39:55 +0000, , make node visiting efficient visiting portion tree possibly contain type interest visitor relies precondition type checking data establish type may appear various place ast  136867896,,
3559,556b3de4272cf08c6225ad3accb54508db14ab07,atthias Kramm <kramm@google.com>, 2016-10-21 19:15:50 +0000, , fix definition os.environ os.getenv  136859181,,
3560,b0efc26b52960a25fcf004ab6c19f50664751955,atthias Kramm <kramm@google.com>, 2016-10-21 18:07:58 +0000, , adjust definition pathconf  136851749,,
3561,a3684e520a8c7e31eff4c0d8ed46fc74e3451d60,ave Baum <dbaum@google.com>, 2016-10-21 16:37:11 +0000, , first step new parser support constant alias import  136840785,,
3562,c661bd5ae10087a2a9319e95b1b7cbffddca01c8,atthias Kramm <kramm@google.com>, 2016-10-20 23:45:27 +0000, , support main together check  136777030,,
3563,76dc29bde7758729b0fcd6dbe31b69e2727e4936,atthias Kramm <kramm@google.com>, 2016-10-20 21:57:55 +0000, , clean with_cleanup  136764503,,
3564,370b00e61b48428225a589f605c8a75009df45d9,atthias Kramm <kramm@google.com>, 2016-10-20 21:38:03 +0000, , add method typing.io  136761909,,
3565,0a1b8cd6cd342f0bf7b6e50cf2360ac25553bc19,atthias Kramm <kramm@google.com>, 2016-10-20 20:29:25 +0000, , improve handling break continue  136752697,,
3566,f4171b337f6a01d18299c70819938d59e9634e10,ave Baum <dbaum@google.com>, 2016-10-20 20:20:17 +0000, , fix work correctly even first node root  136751550,,
3567,bb47fa7260d857e03432b462cf86095f47e2fd9b,ebecca Chen <rechen@google.com>, 2016-10-20 17:40:54 +0000, , raise toocomplex encounter many combination  136731423,,
3568,fda4180e9fb948caa88b091989e7006d8bd281dd,atthias Kramm <kramm@google.com>, 2016-10-20 16:26:50 +0000, , upgrade typeshed  136722553,,
3569,30ad77f4341fd36b721e3b92edee0f89c54c8faf,ebecca Chen <rechen@google.com>, 2016-10-19 18:39:47 +0000, , use __getattr__ magic method  136621448,,
3570,2308b191d76ec953092c140455a24802d7daa722,ebecca Chen <rechen@google.com>, 2016-10-19 04:13:29 +0000, , support matching abstract.union  136555760,,
3571,faa6478360b984a226e947e6bad441c7022cc35d,ebecca Chen <rechen@google.com>, 2016-10-19 02:19:17 +0000, , allow attribute computation unsolvables  136549550,,
3572,ca74cfdbe5231d61818f8dbaa80668a8c8f5e432,atthias Kramm <kramm@google.com>, 2016-10-18 17:47:09 +0000, , fix super call  136491442,,
3573,ae4b93784d51d5c442f212ebe9a6bea2bea39c96,atthias Kramm <kramm@google.com>, 2016-10-18 17:45:33 +0000, , pas condition call hide impossible combination bad_matches  136491214,,
3574,a3faa27b1849416d6aa542ab792d1c75ff3a32a4,ebecca Chen <rechen@google.com>, 2016-10-18 17:41:50 +0000, , add to_type  136490752,,
3575,30c3758fa13942be166c30cf37a5b84b31a7cb69,ebecca Chen <rechen@google.com>, 2016-10-18 17:04:25 +0000, , make calling type instance return class  136485631,,
3576,89ce8019109065ec48a71f82cec78f50f53b2028,ebecca Chen <rechen@google.com>, 2016-10-18 16:55:38 +0000, , use type default metaclass side effect change therefore valself argument longer needed  136484424,,
3577,4ce433f55ad16c1321a0d9bcecc523ebd79dfb97,ebecca Chen <rechen@google.com>, 2016-10-18 00:20:21 +0000, , treat class like instance  136417679,,
3578,f2f9ead2e2fb5a4389e224663caf9787a6de27b5,ebecca Chen <rechen@google.com>, 2016-10-17 20:02:35 +0000, , partial support analyzing __new__ call __new__ interpreter pytdclass.call ... __new__ interesting i.e. object.__new__ ambiguous empty analyze __new__ infer.py  136385099,,
3579,2b05b83bf2d51b33617d1b53c51630bc7b778835,atthias Kramm <kramm@google.com>, 2016-10-17 18:55:28 +0000, , allow call hascombination program frozen  136377348,,
3580,77e69fec614e43e0f03ea515af765a8a51481b3e,atthias Kramm <kramm@google.com>, 2016-10-17 18:07:15 +0000, , make solver aware conflicting goal hidden origin goal  136370820,,
3581,5226576429a8f018d0367ccda831b407e7bcd241,ebecca Chen <rechen@google.com>, 2016-10-17 17:02:26 +0000, , small miscellaneous fix make definition bytearray.join precise call right argument pytd main.py abstract.py add __repr__ boundfunction tweak __str__ __repr__ write __str__ __repr__ class inherit instance rather everything inherits  136362594,,
3582,0f6ce2fdb19a4bda1c3ec7687ab27cc7c370d1b5,ebecca Chen <rechen@google.com>, 2016-10-14 21:21:33 +0000, , make sure value official name depend order set  136197854,,
3583,09be19bdb1b7779684b9615c795aef5a097ac8e6,atthias Kramm <kramm@google.com>, 2016-10-14 20:34:35 +0000, , increase depth quick check  136192127,,
3584,f0e0f9db917a35916f4584690f2d65cf01962432,atthias Kramm <kramm@google.com>, 2016-10-14 20:31:56 +0000, , improve definition str.join unicode.join allow joining empty list limit allowed type unicode.join  136191837,,
3585,052049947a03bd04671ebd806567fa1c679c6261,atthias Kramm <kramm@google.com>, 2016-10-14 20:31:13 +0000, , type inference analyze method already annotation  136191769,,
3586,21c4ca07b6c0c8605cc08cef4a58283021ad6dbd,atthias Kramm <kramm@google.com>, 2016-10-13 17:39:15 +0000, , remove posix.pytd  136057606,,
3587,6c884008b15fbe4d5c06c76a740f33b983cb8b75,ebecca Chen <rechen@google.com>, 2016-10-13 00:35:36 +0000, , check looking instance member  135984560,,
3588,fd39df12f2a87598480c886d2291a7f36c3c4245,lvaro Caceres <acaceres@google.com>, 2016-10-12 19:58:09 +0000, , replace os.pytd tweaked version typeshed __init__.pyi  135951166,,
3589,5e1fa8817103c2d7651803e0e37d2dc1ea171147,atthias Kramm <kramm@google.com>, 2016-10-12 16:35:36 +0000, , definition str builtin make use basestring  135926142,,
3590,f0bace7e8f126a1a697343e33841d20602c56dbb,ave Baum <dbaum@google.com>, 2016-10-11 21:18:32 +0000, , add pytype enable foo style directive enable disabled error  135840178,,
3591,bb87ec200327f88fb0b369d15416b6040e036389,ebecca Chen <rechen@google.com>, 2016-10-11 06:45:49 +0000, , switch typeshed resource module  135765173,,
3592,f84e0e2eeaa31940819c861676ff1114da36ce47,ebecca Chen <rechen@google.com>, 2016-10-11 00:02:00 +0000, , print better error message invalid function call use first error rather last function multiple signature always print expected actual args  135739438,,
3593,103ab624634465ea8613697407455cf61c76b380,ebecca Chen <rechen@google.com>, 2016-10-07 22:32:05 +0000, , get_type_key assume instance one possible class  135525268,,
3594,403188da8087bada888bec25a65974cdde55f2d2,atthias Kramm <kramm@google.com>, 2016-10-07 21:11:38 +0000, , move matcher.py add matcher_test.py  135515655,,
3595,5be62aec5242e15fb06641bb0fd2938488afe953,ebecca Chen <rechen@google.com>, 2016-10-07 21:03:15 +0000, , include parameter name ignore none passed_args argument wrongargtypes  135514613,,
3596,34805779c8ea04c9eaeecb1ca6cfebcaa5fc319f,ebecca Chen <rechen@google.com>, 2016-10-07 20:06:34 +0000, , make complex error precise report complex error individual line rest program still analyzed  135508379,,
3597,e70b654b22813d9876f17844439446bcd0303ac8,ebecca Chen <rechen@google.com>, 2016-10-07 17:05:49 +0000, , improve definition  135487474,,
3598,b0137b06732c5c070658f013faa86cd969386f55,lvaro Caceres <acaceres@google.com>, 2016-10-07 03:14:52 +0000, , add __debug__ http docs.python.org library constants.html  135437552,,
3599,6254423571bbd6f95e0b619568a7ff04c9b667f4,ave Baum <dbaum@google.com>, 2016-10-06 18:46:04 +0000, , initial version fast pyi lexer parser.y grammer placeholder used token defined  135385392,,
3600,db68fa1d8b2af3c8b6807683274779d801bcf446,atthias Kramm <kramm@google.com>, 2016-10-06 02:40:56 +0000, , make abort complex default  135312825,,
3601,c37003b2ee0cb6e8a15096bbca3d1d73ac226d55,atthias Kramm <kramm@google.com>, 2016-10-06 02:39:08 +0000, , unskip test work  135312752,,
3602,8608f81b445fdd9fed5d0065619d3e91ec489cfc,ebecca Chen <rechen@google.com>, 2016-10-06 01:04:47 +0000, , instantiate type allows pytype analyze thing like def type type  ... type type  effectively also add enum.unique method  135306712,,
3603,c045802226e630b1458f65f80cb74a3c6bef8ad5,ebecca Chen <rechen@google.com>, 2016-10-06 00:32:45 +0000, , add __getattr__ object  135303582,,
3604,5cbc9bab1d0fec36bd924850427beeada024c314,ebecca Chen <rechen@google.com>, 2016-10-06 00:17:53 +0000, , move get_attribute related code separate module  135302083,,
3605,a23ee84133839415e72a1a3db7a8cb80aeeff91f,ebecca Chen <rechen@google.com>, 2016-10-05 22:48:37 +0000, , convert class type ... rather type  135291320,,
3606,78972e25e5b941ab0643a4cd212ff3c57aa39b95,ebecca Chen <rechen@google.com>, 2016-10-05 18:47:00 +0000, , move abstract matching code module match function scattered throughout 3000 line file making hard find thing  135259555,,
3607,28d7b9e761a947d8da96f9460440adc3531bb3a9,oogler <noreply@google.com>, 2016-10-03 14:04:11 +0000, , make fget parameter property optional method defined class property fget fset fdel doc http docs.python.org library functions.html property  134979955,,
3608,56d72d3ce628916f32a9e16d4cdb7f2a4ccfeac7,ebecca Chen <rechen@google.com>, 2016-09-30 23:26:49 +0000, , return unsolvable combination function call  134841416,,
3609,4b70c0f23877205166223cd990af902984e7d52b,atthias Kramm <kramm@google.com>, 2016-09-30 23:12:47 +0000, , add cfg debugging code new method asciitree node object add log module level constant cfg.py improve __str__ __repr__ binding  134839958,,
3610,e325e23a8ded180c98c54ae5f553cc3c7baaeca7,atthias Kramm <kramm@google.com>, 2016-09-30 22:33:56 +0000, , careful caching anything contains variable  134835675,,
3611,d5a7adb6be5ad3fe05044b839b42ea2ccf75e525,atthias Kramm <kramm@google.com>, 2016-09-30 00:49:01 +0000, , filter argument combination current cfg position fix bug call method argument actually visible cfg  134732274,,
3612,e0b66d4fb6c6800689e52fb8f5744deb7424b3b0,atthias Kramm <kramm@google.com>, 2016-09-29 23:31:34 +0000, , skip flaky  134724713,,
3613,ef9dc4fdb547e861cc7813eb00e2c3d2437b26e4,atthias Kramm <kramm@google.com>, 2016-09-29 21:43:36 +0000, , add test case attribute contain __getattr__  134711102,,
3614,6e38e372c5c7e1ddac52679f40327d2dff618817,ebecca Chen <rechen@google.com>, 2016-09-29 18:59:59 +0000, , return none variable find attribute  134689872,,
3615,e42659992908c0c671aa82794ab12e2507aaf6a5,ebecca Chen <rechen@google.com>, 2016-09-29 18:07:53 +0000, , improve definition  134682670,,
3616,5d16e4da39ed1a60131c7b250c14efd636e73e69,ebecca Chen <rechen@google.com>, 2016-09-29 00:43:48 +0000, , improve definition __builtin__.sum  134605447,,
3617,2cdd3c1dce5766098040e888f47072c9d88b9bb1,ebecca Chen <rechen@google.com>, 2016-09-29 00:35:02 +0000, , fix bug method getting argument name function first signature causing two problem signature length different pytype mysteriously crash suppose following signature def str float def int bool long want analyzing true pytype grab first signature second argument accidentally dropped call trace turning int match neither signature flawedquery raised argument name different pytype produce bad result suppose def arg1 str float def arg2 int long want analyze def return pytype grab first signature therefore assumes argument name arg1 leading incorrect inferred signature def str float  anonymizes name positional args resolve problem example true turn int bool  134604517,,
3618,803494f916be3786deac55fcc950b094ac5f494b,ebecca Chen <rechen@google.com>, 2016-09-28 23:42:12 +0000, , fix crash caused missing class method unsolvable move call class method never called unsolvable check object instance class calling  134598782,,
3619,da24805d76e5c29aa8802fd0fac707c189a3735e,atthias Kramm <kramm@google.com>, 2016-09-28 01:18:13 +0000, , fix pretty printing bad return type  134481994,,
3620,eaa545659dc7f5180ab23c28a5d92bdac81b0a91,ebecca Chen <rechen@google.com>, 2016-09-28 01:03:44 +0000, , add instantiate method analyze method infer.py instantiates argument using create instance whose class unknown lead sort wonkiness since unknown define method class expected  134480710,,
3621,af18eaf7683441738f7abb8a7eb11a9817d15326,ebecca Chen <rechen@google.com>, 2016-09-28 00:25:26 +0000, , add another enum override class metaclass attribute lookup get complete control adding metaclass  134476976,,
3622,ff7c244cb224529b1a5f1a15831c54794d606b2c,ebecca Chen <rechen@google.com>, 2016-09-27 23:03:14 +0000, , fix pytype crash due mroerror redefined builtin catch mroerror pytype report mro error rather crashing also make error description helpful add full_names option lookupbuiltins know whether use ast prefix checking local redefinition  134467148,,
3623,631a44739285ec7a4823a4c49b5a8f432c3e36d9,atthias Kramm <kramm@google.com>, 2016-09-27 22:57:00 +0000, , produce pyi file duplicate identifier  134466461,,
3624,13ca84b5577648e8a8509a8b35dcc3008975987a,ebecca Chen <rechen@google.com>, 2016-09-27 22:08:19 +0000, , improve definition dict.fromkeys also fix bug new definition expose  134460231,,
3625,3d5f28f84cabb2afe6f8218fd01e8a5a52a92f33,ebecca Chen <rechen@google.com>, 2016-09-27 19:06:42 +0000, , pick metaclass keyword put metaclass information ast pass yet anything information also make signature to_variable consistent name argument optional required one  134436956,,
3626,f1e777fc05aef4aaabbca5f5d6d20ff8e82df6a2,ebecca Chen <rechen@google.com>, 2016-09-27 01:07:35 +0000, , implement  134351704,,
3627,647fa5f995c73ec79d348e572bc914de67b52ed4,ebecca Chen <rechen@google.com>, 2016-09-27 00:12:40 +0000, , update test_data complex.py change previous program complex enough pytype fail  134347007,,
3628,987851c92b88d93ec0ce1effcc545e69e3ffe5f8,ebecca Chen <rechen@google.com>, 2016-09-26 23:39:16 +0000, , add subprocess based test pytype binary meant replace test_pytype.sh served purpose tested one path main.py test_pytree.py verified pytype ran cleanly piece real code something test effectively deletes optimize option config realized used anywhere looking way test doe restructuring main.py exception handling fix bug discovered check_types infer_types handling python compiler error differently currently tested inference checking simple program one syntax error one pytype error overly complex one passing bad option pytype printing pytype error stderr csv file report error  134343417,,
3629,d92dd2468afa1610e4a5e3dac242cf7122acdc36,atthias Kramm <kramm@google.com>, 2016-09-26 21:55:18 +0000, , better limit number variable combination  134330669,,
3630,33242e75681921aa8e33f040f04b9b6b8521e087,ebecca Chen <rechen@google.com>, 2016-09-26 16:34:47 +0000, , fix matching type warning improves builtins definition exception inherits warning doe better matching class typing.type  134287399,,
3631,a06f18344aa803bf6ed23b857cab9367d4df05ca,ebecca Chen <rechen@google.com>, 2016-09-24 00:36:12 +0000, , delete old method backtrace  134137179,,
3632,b678f5b91f20ab97ad73bdf0bc8a190523365a5a,ebecca Chen <rechen@google.com>, 2016-09-23 23:09:49 +0000, , fix empty matching issue  134129253,,
3633,839cc90d63b834d7dfd869312437c0e6389fb502,ebecca Chen <rechen@google.com>, 2016-09-23 23:01:25 +0000, , support custom reverse operator  134128344,,
3634,d1733e180d5541f725d534b5667dfd783f94c02b,atthias Kramm <kramm@google.com>, 2016-09-23 20:58:07 +0000, , copy source code line error line line  134114198,,
3635,afdd86bfe62befb818bf39f4b6fb22cb6695e049,ebecca Chen <rechen@google.com>, 2016-09-23 15:24:48 +0000, , add frozenset add frozenset list typing name converted corresponding builtins frozenset method work properly also pep484 stub printer use instead different list  134076382,,
3636,7bba1472d1aeb95994705ba1dde1cdf4e2f4cad1,atthias Kramm <kramm@google.com>, 2016-09-23 15:22:46 +0000, , allow disable error message without line number make scoped disable line file also disable error without line number i.e. treat error appearing end file  134076179,,
3637,a38832b68e17b9efc90e2ce387b6a80220794044,ebecca Chen <rechen@google.com>, 2016-09-23 14:53:01 +0000, , crash bad imported name fix typo override  134073377,,
3638,8a67ee57936e7146350fe7863c5aa0d5979ade1e,ebecca Chen <rechen@google.com>, 2016-09-23 14:46:04 +0000, , convert anythingtype unsolvable rather unknown  134072881,,
3639,c41b8e1bfcfdc65fd6ae9a6aff8b7f7c5ac01c5c,ebecca Chen <rechen@google.com>, 2016-09-23 02:17:37 +0000, , crash inherited type parameter matching unknown  134029815,,
3640,3b4f3b5cf191aff13fd2286428f27ae81f95e075,ebecca Chen <rechen@google.com>, 2016-09-22 22:43:05 +0000, , expose class hierarchy information optimize pas complete builtins ast information class hierarchy also make inherit since share much code  134009821,,
3641,7b128289c6458d242fe3baf679cb207512326980,atthias Kramm <kramm@google.com>, 2016-09-22 22:18:54 +0000, , add namedtuple scaffolding  134006856,,
3642,a71634055069f0c2e81eb41f7714daa717d7dc7b,atthias Kramm <kramm@google.com>, 2016-09-22 21:49:42 +0000, , better support property  134002980,,
3643,0788e2375be6742c3223b76f3c6d205ab108b391,oogler <noreply@google.com>, 2016-09-22 20:32:03 +0000, , pytype add support multi argument iter builtin python pre existing iterable function return none end turned proper iterator iter func end_value instead output output ... output could write output iter none  133992737,,
3644,e801c1c332173460bcef1936e34b49678235eb13,ebecca Chen <rechen@google.com>, 2016-09-22 17:27:09 +0000, , catch checking mode  133969367,,
3645,69312e6875e8027a359c6e736a310b8d2b0384ae,lvaro Caceres <acaceres@google.com>, 2016-09-22 12:00:59 +0000, , use read typeshed file typeshed_home specified  133940865,,
3646,3eebeae4a9194e6df388795ce90264d33ce69b64,atthias Kramm <kramm@google.com>, 2016-09-21 23:17:13 +0000, , allow arbitrary large deep cartesian product argument  133889816,,
3647,d872e20db8d55c61e5cfafee9ec5b46c1b814a18,ebecca Chen <rechen@google.com>, 2016-09-21 22:23:50 +0000, , use typeshed itertools stub  133883196,,
3648,036af6761190fe5bf039460eb74c98ccfb03a47b,oogler <noreply@google.com>, 2016-09-21 15:14:00 +0000, , add reload __builtins__  133832937,,
3649,c288d1355987d532fa9c901d5f7bfc9c6a853719,oogler <noreply@google.com>, 2016-09-21 14:13:26 +0000, , support str.translate none first parameter deletechars argument properly also precise str unicode type valid unicode value deletechars result typeerror deletion implemented differently unicode  133828200,,
3650,ddfefdf1f0b9bd686e2290e02d79cd47766cd28a,u Yong Quah <fyquah@google.com>, 2016-09-21 07:52:43 +0000, , add support forwarddecls  133803229,,
3651,fc3e925e4eac473012b0c3910af6de56bad32587,ebecca Chen <rechen@google.com>, 2016-09-21 03:45:07 +0000, , report pyi error rather crashing duplicate type parameter pep 484 specifies type variable argument must distinct http www.python.org dev pep pep 0484 user defined generic type  133789793,,
3652,27d47235cc12ed18e5d9030a2641ca2e29942279,u Yong Quah <fyquah@google.com>, 2016-09-20 18:57:06 +0000, , add bool none support printvisitor  133735267,,
3653,9f7df23d1185508902fe9283a2be234085ad844e,lvaro Caceres <acaceres@google.com>, 2016-09-20 17:28:00 +0000, , send external interpreter stdin instead passing filename  133721845,,
3654,5ae98f1827f7eb2edfe436c35429dbd84cbe8e64,lvaro Caceres <acaceres@google.com>, 2016-09-20 17:21:49 +0000, , move pytd.data_files file reading code utils  133720876,,
3655,a24f5dc20fde87b730faef06ce24e5ba323536eb,lvaro Caceres <acaceres@google.com>, 2016-09-20 16:39:13 +0000, , split non stdlib using part pytype.utils new module allow submodules use without circular dependency  133715668,,
3656,61fbea5f7afba7d34906fc15faf219d1c7869e67,ebecca Chen <rechen@google.com>, 2016-09-20 02:40:07 +0000, , make handful pytd pyi change  133663344,,
3657,c38df36f71f238d576aa794cebbad29a2dc29ab0,atthias Kramm <kramm@google.com>, 2016-09-19 23:53:42 +0000, , add __module__ object  133650039,,
3658,6ef1dbee555c04ef00e59b54e4f9690c303fc05b,ebecca Chen <rechen@google.com>, 2016-09-19 23:51:35 +0000, , handle bad super call gracefully  133649787,,
3659,0c72984204f77042c8c8e1dfe9bc094e536ec8c2,atthias Kramm <kramm@google.com>, 2016-09-19 22:15:49 +0000, , move args kwargs logic vm.py also change posargs list tuple  133638035,,
3660,8b66cb8b2a284a1d080806ac0ad6b6484377ead1,ebecca Chen <rechen@google.com>, 2016-09-19 20:31:32 +0000, , handle unsolvable class  133624537,,
3661,8953358b4ea0fe115c211dd9a620348455a0518a,ebecca Chen <rechen@google.com>, 2016-09-19 20:12:12 +0000, , fix type parameter name collision  133622187,,
3662,c0486161d92f1f49d036b1bca888d38174bd2d53,ebecca Chen <rechen@google.com>, 2016-09-19 17:44:49 +0000, , cleanup pytd type visitor logic remove nativetype scalar redundant check verifyvisitor unneeded option enter instead visit  133602707,,
3663,8dcda660d04f2b09dcbd7b1ed0295262a56e5e21,u Yong Quah <fyquah@google.com>, 2016-09-19 17:29:47 +0000, , merge int float str unicode printvisitor  133600492,,
3664,876cf392abdec5d2f6c3897369af960ffdf3caa3,ebecca Chen <rechen@google.com>, 2016-09-19 16:47:05 +0000, , move addnameprefix call since always want call addnameprefix parsing except test move call parse function forgotten also use scope keyword creating instance  133595038,,
3665,27386a6881a624fa9895bc0b9cbb4f607517963c,u Yong Quah <fyquah@google.com>, 2016-09-19 15:29:34 +0000, , support superinstance correctly  133587526,,
3666,3575890f44dd3ca5445911eb9f69dd80b689c14b,ebecca Chen <rechen@google.com>, 2016-09-19 14:44:48 +0000, , still return something function containing infinite loop  133583691,,
3667,773bee2663a6cf9d1ea87feeb364ab39758576eb,atthias Kramm <kramm@google.com>, 2016-09-19 14:31:53 +0000, , make kwonly parameter accidentally consume posargs  133582886,,
3668,891832608ee65d67a9a7baf9eedb93ceebef1a29,atthias Kramm <kramm@google.com>, 2016-09-19 14:24:05 +0000, , throw dict  133582364,,
3669,9016aa0523aeb7e6d6c96753bcce704096edda82,ebecca Chen <rechen@google.com>, 2016-09-19 14:10:12 +0000, , fix abstract.empty matching  133581407,,
3670,59ae672e754dd19f6066d9e58cae585926be8324,u Yong Quah <fyquah@google.com>, 2016-09-16 18:20:33 +0000, , add name typing.io typing.pytd  133406597,,
3671,4f1482ceacc856cacdd287c2caab18a69466ad3d,atthias Kramm <kramm@google.com>, 2016-09-16 17:00:12 +0000, , throw catch predictable error resolve symbol pyi  133395882,,
3672,f3225d4b9e43e4265a25c18d3b1e0545daaf1b4a,atthias Kramm <kramm@google.com>, 2016-09-16 01:19:47 +0000, , aware item function constant etc looking local identifier  133334334,,
3673,2c6a194b60ab54ff3cdf08fa7e8bfb06fdb4a250,ebecca Chen <rechen@google.com>, 2016-09-15 22:48:10 +0000, , print class name error message bound function also deletes unused attribute pytdsignature check duplicate keywords pyi function  133318567,,
3674,5ec3001da6d713f79aed881a5b9bc07ebe304a25,lvaro Caceres <acaceres@google.com>, 2016-09-15 20:30:45 +0000, , support missing.txt typeshed dir  133300835,,
3675,cf0717ef3819064a76d6fcd6ae862ca5a2ab7f37,ebecca Chen <rechen@google.com>, 2016-09-15 19:44:00 +0000, , pre populate container appropriate  133295208,,
3676,07b61ca85e7a86db1ee646080fa3bfd28bfab97a,ebecca Chen <rechen@google.com>, 2016-09-15 19:30:09 +0000, , catch name error load_fast surface error swallowed load_fast exposed number small issue related empty value  133293686,,
3677,3ef78eb2455814659cdd6ba7230c9ca405acc566,atthias Kramm <kramm@google.com>, 2016-09-15 02:58:04 +0000, , fix definition builtin range  133209043,,
3678,15b0211f9d6dc8b3403d02c763d5038564a5c1c5,ebecca Chen <rechen@google.com>, 2016-09-14 22:40:48 +0000, , allow iterating empty list  133184572,,
3679,419611b4e083f6d980827dfc460fe5f62ffd8a90,ebecca Chen <rechen@google.com>, 2016-09-14 22:31:37 +0000, , implement delete_subscr  133183319,,
3680,ab96f683c59932d410c63e1984d5e1d3619e9062,atthias Kramm <kramm@google.com>, 2016-09-14 22:22:49 +0000, , add test case __init__ check abstract.py  133182096,,
3681,a0ca97ed9107bc6036fda2b7dde4fcec15dadf8f,ebecca Chen <rechen@google.com>, 2016-09-14 22:08:30 +0000, , duplicate top level __getattr__  133179764,,
3682,da5906cba85d42b26d03d54173668dc402498100,ave Baum <dbaum@google.com>, 2016-09-14 20:57:48 +0000, , report compiler error error log rather letting exception escape thus syntax error treated similar error impacted nofail table summarizes change behavior errorfail represents whether error reported csv format report_errors errors_csv_file nofail errorfail old new true true status error log true false error log false true exception status error log false false exception error log  133169887,,
3683,89041c2a8bebbb92849023aa2b3af51286f87764,atthias Kramm <kramm@google.com>, 2016-09-14 17:06:35 +0000, , always call __init__ class analyze  133140089,,
3684,da5e1fe4be916b8b690cc4176261e72fb0780c2e,ave Baum <dbaum@google.com>, 2016-09-13 21:27:59 +0000, , add touch option pytype use pytype.bzl make output check action deterministic  133047834,,
3685,7910c63d467aa296c6ca2bb83e053391fc2115c2,ebecca Chen <rechen@google.com>, 2016-09-13 19:55:49 +0000, , add __getattr__ name ... import fails also fix typo stop printing parameter type  133035730,,
3686,bb3521ab5fa73c414bcb23a9bf4730a328e9c3fe,atthias Kramm <kramm@google.com>, 2016-09-13 17:18:39 +0000, , warn unsupported feature  133014854,,
3687,e259f960660f05a431ef66ab60e740087beaa900,ebecca Chen <rechen@google.com>, 2016-09-13 16:27:48 +0000, , use full name typing module class necessary  133008690,,
3688,0d12a04e11530aa7d0b6b1824aa86334fa405321,ebecca Chen <rechen@google.com>, 2016-09-13 16:19:53 +0000, , allow function constant type  133007846,,
3689,ac05269b8ccac273d9b9806d46b90014302c29f8,ebecca Chen <rechen@google.com>, 2016-09-13 15:56:15 +0000, , fix alias bug add override  133005228,,
3690,7c9f65d45175d0ff06cb88b322e6ef5ea1269467,atthias Kramm <kramm@google.com>, 2016-09-12 21:22:11 +0000, , allow index set frozenset  132918109,,
3691,1f7cf96cf68d22ed19bc296e42ac7a3af7b4a4d9,atthias Kramm <kramm@google.com>, 2016-09-12 21:21:22 +0000, , better support typing.optional  132917991,,
3692,cd0507512533457deacaa6ce31fada68db4c3bc4,lvaro Caceres <acaceres@google.com>, 2016-09-12 21:09:51 +0000, , update typeshed test drop pytype stub codecs keyword logging better version http github.com python typeshed blob master stdli codecs.pyi http github.com python typeshed blob master stdli and3 keyword.pyi http github.com python typeshed tree master stdli and3 logging  132916535,,
3693,07fa9ede4e352b3bd67d87ddc4c449da2c38b8a3,atthias Kramm <kramm@google.com>, 2016-09-12 20:25:10 +0000, , add test case example documentation  132910845,,
3694,e899a8cf1c3889c05073e12846e6feef76a06d57,atthias Kramm <kramm@google.com>, 2016-09-12 19:22:12 +0000, , improve support typing.dict  132903747,,
3695,c98e816b477d0dc6f64a933ce6091641cc1d34c7,ebecca Chen <rechen@google.com>, 2016-09-10 00:02:47 +0000, , support comparison operation object ilk always work http docs.python.org library stdtypes.html comparison  132732898,,
3696,6fe49f2d693331749a8c190f01183bf17350c7a7,atthias Kramm <kramm@google.com>, 2016-09-09 21:22:02 +0000, , add support typing.py  132716045,,
3697,d4ae8b2c592c2ee60a86795968007edd5a0062e7,lvaro Caceres <acaceres@google.com>, 2016-09-12 11:53:02 -0500, , resync,,
3698,f17586118abdb5d375baf47e6a7e710abd472507,atthias Kramm <kramm@google.com>, 2016-09-08 22:22:35 +0000, , new option abort complex  132607948,,
3699,b71740a960de14fc78563dac64e532c1c3b93de9,ebecca Chen <rechen@google.com>, 2016-09-08 22:15:50 +0000, , check none class nonetype compatible false  132607001,,
3700,6290ec5dede1e08e46fdb5b46b2ce522427a8790,ebecca Chen <rechen@google.com>, 2016-09-08 19:08:15 +0000, , add __new__ __builtin__.str add __new__ method couple class missing treat static method without needing explicit decorator  132584185,,
3701,183f2efbc16ebc2aa79489055c4c3db562df7b6d,lvaro Caceres <acaceres@google.com>, 2016-09-08 19:06:16 +0000, , moe scrubbing fix due extension_map moe scrubber ignoring .py file moe strip_line currently leaking perl based stripping begin_strip end_strip block also remove .md extension_map scrubber already know  132583969,,
3702,49d2730ead5e7ce02fdd0bbaf2ce74f997c9b27a,ebecca Chen <rechen@google.com>, 2016-09-08 18:18:36 +0000, , fix definition also includes following change accept str byte unicode int float side effect drop duplicate type union expands existing code allowed accept none bool motivation remove false positive coming typeshed type matching may tightened back future change happens two place long term may possible type comparison logic one  132577949,,
3703,9e36a555a3eb39f6f8540ab3ea83f895ec600c02,ebecca Chen <rechen@google.com>, 2016-09-08 00:58:06 +0000, , fix importing function template  132503313,,
3704,b63bdff8429302f839a897d7095267b6e029ed61,atthias Kramm <kramm@google.com>, 2016-09-07 01:03:10 +0000, , make attribute instance  132384609,,
3705,7cfd1f2f7850cae9139c19f6af1232ce8ae7ba3d,ebecca Chen <rechen@google.com>, 2016-09-07 00:53:48 +0000, , make iterators  132383865,,
3706,8e329db67fb4341dc6548a1a6dabf63d15a10cbb,atthias Kramm <kramm@google.com>, 2016-09-06 21:55:52 +0000, , also export patch  132365964,,
3707,82c39cabc4c166d1ddd6f8618c5b272e9929d9b2,ebecca Chen <rechen@google.com>, 2016-09-03 00:45:29 +0000, , improve  132122065,,
3708,b123e18d867306f3ae64663ee6cc984713098694,ebecca Chen <rechen@google.com>, 2016-09-02 23:20:21 +0000, , fix mro  132115437,,
3709,d654c2ddb1d5f5d5702ec416bc0633c1b2a3a3fe,ebecca Chen <rechen@google.com>, 2016-09-02 20:02:18 +0000, , update used production sisyphus framework rollout.py production sisyphus framework flags.py  132094508,,
3710,9fafa876960153fcdceb24be2117baf6663db5af,atthias Kramm <kramm@google.com>, 2016-09-02 19:02:05 +0000, , add stopwatch metric add distribution counter variable  132088647,,
3711,5da3803c4f66af4a11c715e2838e4cb3fedde2be,ebecca Chen <rechen@google.com>, 2016-09-02 17:46:50 +0000, , allow type matched callable example use case video youtube utils profile_dash diff_pstats.py call int type argument whose type union callable str filetype  132079671,,
3712,327c2caf9199743595fcbe2c7cc4f8ab753cfef3,atthias Kramm <kramm@google.com>, 2016-09-02 16:55:49 +0000, , give nonetype error error class  132073625,,
3713,c837dc23f8cce16975bd73c477d33621145c97b4,ave Baum <dbaum@google.com>, 2016-09-02 15:52:07 +0000, , added mechanism visitor use unchecked node  132067514,,
3714,2fb09b750ce67c8db08698eeece3b73010c44b22,lvaro Caceres <acaceres@google.com>, 2016-09-02 13:57:03 +0000, , update typeshed include update google missing.txt pytype test  132058862,,
3715,4e93221d4ee54107d428b272601070ea7ba1391f,atthias Kramm <kramm@google.com>, 2016-09-01 23:06:49 +0000, , give unresolved type parameter error class  132004992,,
3716,e6932ec41588be5abd042a04d762c754ba21c835,ebecca Chen <rechen@google.com>, 2016-09-01 22:34:13 +0000, , better printing expected string wrong arg type currently print something like following file diff_pstats.py line 100 main function add_argument called wrong argument wrong arg type expected self argumentparser action object 0x2652910 ... nargs object 0x267e610 ... const object 0x2676950 ... default object 0x2676950 ... type callable ... choice iterable typeparameter ... required bool ... help str ... metavar object 0x2676790 ... dest str ... version str ... args kwargs actually passed self argumentparser action str nargs str const unsolveable default int type int choice unsolveable required unsolveable help str metavar unsolveable dest unsolveable version unsolveable change print file diff_pstats.py line 100 main function add_argument called wrong argument wrong arg type expected self argumentparser action union type action str ... nargs union int str ... const ... default ... type callable ... choice iterable ... required bool ... help str ... metavar union str tuple str ... dest str ... version str ... args kwargs actually passed self argumentparser action str nargs str const unsolveable default int type int choice unsolveable required unsolveable help str metavar unsolveable dest unsolveable version unsolveable  132001208,,
3717,9ee899d5980d261f4645b59e5d4c9c5709a70617,ebecca Chen <rechen@google.com>, 2016-09-01 21:48:21 +0000, , load constant instance attribute type constant inside class type parameter constant must instance rather class attribute load  131995423,,
3718,80d3ebd8478daeaf2cbebfb0682e919ec1f52af1,ebecca Chen <rechen@google.com>, 2016-09-01 21:26:19 +0000, , update pytd definition __builtin__.min __builtin__.max  131992670,,
3719,d59e65bcdaa99280053b9e29c90c2e1b13f39400,ave Baum <dbaum@google.com>, 2016-09-01 17:55:51 +0000, , add precondition pytd node add add precondition pytd node fix several bug discovered precondition including one parser one test infrastructure still sloppy added todo fix tighten precondition afterwards  131966965,,
3720,ac92d6d07af03f4f281f8a3fc8ec319310373958,atthias Kramm <kramm@google.com>, 2016-09-01 16:37:10 +0000, , fix builtins allow generator min max make staticmethod classmethod inherit typing.callable  131957473,,
3721,7311a18a0ea87dfeb30717040bd6f066786a0c42,atthias Kramm <kramm@google.com>, 2016-09-01 16:31:20 +0000, , add support elif pyi  131956910,,
3722,c8779c76e79e7aa11647bcf426821e22766e3233,ave Baum <dbaum@google.com>, 2016-08-31 22:05:51 +0000, , change build invalid intermediate ast  131877942,,
3723,4dbdb062b6e5a866d67fb97aed166e8df312cbb8,atthias Kramm <kramm@google.com>, 2016-08-31 20:51:12 +0000, , remove test_tests test_operators includes  131868786,,
3724,b8972fa34421859e236c5ef9c9bc102fdbf1c6fe,atthias Kramm <kramm@google.com>, 2016-08-31 20:45:16 +0000, , use visitor protocol pas intermediate result  printvisitor still pass string  131868097,,
3725,4f72025eabf5535478a05c7e35c9a57c1884488c,atthias Kramm <kramm@google.com>, 2016-08-29 23:08:37 +0000, , basic support super .__str__ super .__get__ super .__set__  131646916,,
3726,9d8202cee43ac831c040cccfac58cf60b37d2653,atthias Kramm <kramm@google.com>, 2016-08-29 22:16:33 +0000, , fix super ... .__setattr__  131641178,,
3727,8ea973bf74a6b834db7ea09cc494bd69004d3ae4,atthias Kramm <kramm@google.com>, 2016-08-29 21:03:39 +0000, , fix signature matching optional parameter  131632356,,
3728,d7f2cb512e6ee073a36912a07705b059847ffdcd,ebecca Chen <rechen@google.com>, 2016-08-29 20:42:38 +0000, , crash substituted type parameter function  131629934,,
3729,2c46efadb542593c7e50de3ab638f73b8a3528cd,ebecca Chen <rechen@google.com>, 2016-08-29 19:20:35 +0000, , refactor pytdfunction signature calling logic  131621292,,
3730,791fbdb47660f5bd17fc7071ec2f4ca4be910d06,u Yong Quah <fyquah@google.com>, 2016-08-29 19:10:39 +0000, , bootstrap clif_to_pyi  131620323,,
3731,e9553f4f68eaf4359eb6308a2571c980502d5da0,ebecca Chen <rechen@google.com>, 2016-08-29 19:01:37 +0000, , move argument abstract.py function functionargs class  131619161,,
3732,265bd08d9f4dc9da7591c26a86a7369846bc1037,ebecca Chen <rechen@google.com>, 2016-08-29 16:26:28 +0000, , update documentation change docstring add test reflect method current behavior disjunction also fix typo typing.py  131600061,,
3733,aba090f8acadd43f943533b35330e6b02ea341e7,ebecca Chen <rechen@google.com>, 2016-08-26 23:13:21 +0000, , detect report bad type parameter usage raise pyi error unbound type parameter appears constant definition attribute error constant whose type contains type parameter instance attribute accessed class attribute  131453521,,
3734,a719a6c55108d420b09bb77af91ef7b0b5c64fdf,atthias Kramm <kramm@google.com>, 2016-08-26 23:08:22 +0000, , anonymous module contain anything make aware  131453011,,
3735,b3cbd88191ffacc7f90be5230b70b67e1c422687,atthias Kramm <kramm@google.com>, 2016-08-26 21:45:46 +0000, , omit slow super call  131444038,,
3736,6e085c7fbaea054c364d3990f88287e650a1f1a3,ave Baum <dbaum@google.com>, 2016-08-26 21:40:51 +0000, , move platform version argument __init__ parse remove kwargs __init__ parse change typedeclparser reuse shared instance  131443468,,
3737,bdd01f5348ccfa72454543286136f9e478589a93,atthias Kramm <kramm@google.com>, 2016-08-26 20:49:45 +0000, , make unsolvable singleton treat special mros  131437272,,
3738,15854d9f1977ee853a0d7b8edfb7a4cd704c0e98,atthias Kramm <kramm@google.com>, 2016-08-26 19:50:43 +0000, , analyze __init__ twice  131430941,,
3739,9dc6869dd4ffa0462ffc83da433bcc6f5e1ffe3a,ebecca Chen <rechen@google.com>, 2016-08-26 17:36:44 +0000, , refactor abstract.py instance matching  131415878,,
3740,21f0d8fe54ad49aba64e45d8612e9544fe2b231a,lvaro Caceres <acaceres@google.com>, 2016-08-26 16:38:02 +0000, , turn noise  131409547,,
3741,f2dfa0229f8683b57a349a6614a68efc48be28aa,ave Baum <dbaum@google.com>, 2016-08-26 15:29:48 +0000, , framework precondition checking node  131404011,,
3742,aa4a427f62d784b733854a8556269154ccecaadd,atthias Kramm <kramm@google.com>, 2016-08-25 22:44:15 +0000, , improve definition type class  131340329,,
3743,ade863a5f2bfa6db14e9e263dbc4aec3c38fda23,lvaro Caceres <acaceres@google.com>, 2016-08-25 22:34:52 +0000, , drop datetime.pytd favor datetime.pyi  131339300,,
3744,fa6b741158793576f4f1c842c2b51f1aa3ac86da,ave Baum <dbaum@google.com>, 2016-08-25 21:24:18 +0000, , change rewrite ast  131330991,,
3745,98dbe664461e11bb666761867cedc75e6303b16d,lvaro Caceres <acaceres@google.com>, 2016-08-25 20:46:58 +0000, , drop time.pytd use time.pyi needed datetime.pyi  131326510,,
3746,cf5e33cdbdd032a51861c76a95b2f5322a14be95,ebecca Chen <rechen@google.com>, 2016-08-25 20:27:29 +0000, , fix infinite loop argument logging  131324365,,
3747,a5593c74f8de2bffc492d67a9d50f04aba9fd6ea,lvaro Caceres <acaceres@google.com>, 2016-08-25 15:33:54 -0500, , moe resync,,
3748,7d7713437363377ae8d1bc72610a762a8028208b,echen <rechen@google.com>, 2016-08-24 17:26:17 -0700, , update typing.pattern typing.match  created moe http github.com google moe 131235681,,
3749,920cb481eec7c0cba2d07f45b3efa97dd49d5152,echen <rechen@google.com>, 2016-08-24 15:27:32 -0700, , call builtins  created moe http github.com google moe 131223328,,
3750,92c37388c6937baac5ebf542e8aa0b0f92839847,echen <rechen@google.com>, 2016-07-11 15:23:07 -0500, , fix couple typo delete redundant pytd method  created moe http github.com google moe 131222844,,
3751,7fc6673ebd16b7fc4009faedae2964c14b6322ad,ramm <kramm@google.com>, 2016-08-24 11:06:46 -0700, , make pytd.signature model function semantics python  created moe http github.com google moe 131193257,,
3752,8bb52da22c370f8350cb34bf5d390be232424f45,echen <rechen@google.com>, 2016-08-23 15:35:37 -0700, , allow container contain lazily evaluate parameter parameterized class instance define thing class manager ... typeshed file need functionality http github.com python typeshed blob stdlib 2and3 contextlib.pyi http github.com python typeshed blob stdlib 2and3 mmap.pyi  created moe http github.com google moe 131105234,,
3753,596183e7d9cda114a138374cf152d70d4efc4499,echen <rechen@google.com>, 2016-08-23 15:01:43 -0700, , insert class template resolving dependency wait complete information type parameter insert class template rather inserting parsing adjusting later change allows easily construct template multiple generictype parent merging template way compute mro  created moe http github.com google moe 131100098,,
3754,60942e3006260ea622b665d67111df254e120c00,echen <rechen@google.com>, 2016-08-22 16:29:47 -0700, , flesh typing.pattern typing.match  created moe http github.com google moe 130996472,,
3755,a193c9faf6bfe2c4d7258d09de48523b0df76e82,ramm <kramm@google.com>, 2016-08-22 11:36:49 -0700, , allow none used boolean  created moe http github.com google moe 130962675,,
3756,8d776bc65eb980f9938b562c8de6e16c40f28a10,ramm <kramm@google.com>, 2016-08-22 11:16:04 -0700, , fix bug analyzing method default parameter annotation  created moe http github.com google moe 130959885,,
3757,4e3babfb34d284c91bcd49fa0a3e5cd436845b65,ramm <kramm@google.com>, 2016-08-19 11:06:47 -0700, , add scope attribute typeparameter  created moe http github.com google moe 130771056,,
3758,0415e76ea37646290d9e643e32c41de8d8adf94a,ramm <kramm@google.com>, 2016-08-19 10:58:47 -0700, , factor view matching logic function also slightly improve error message ambiguous function call  created moe http github.com google moe 130769961,,
3759,75c8dbd4361c30e721e8921d2299218d4ad05883,ramm <kramm@google.com>, 2016-08-19 10:54:35 -0700, , disable remove index error generating many false positive virtually true positive  created moe http github.com google moe 130769442,,
3760,a8a7555e9cdf771c8dcbb1d3cbff58b80d118657,ramm <kramm@google.com>, 2016-08-19 10:50:50 -0700, , report error incorrect return statement  created moe http github.com google moe 130768994,,
3761,ddfd359092d926947671677861de4476ebae0699,yquah <fyquah@google.com>, 2016-08-18 15:01:29 -0700, , fix 30509858  created moe http github.com google moe 130686110,,
3762,e2321f17217fcf0ea052d942d938665cf58fb56f,baum <dbaum@google.com>, 2016-08-18 08:49:08 -0700, , ensure imported class pytd correct mro  created moe http github.com google moe 130644084,,
3763,3455bd2c78d2b69c27d5f3679a8feaacac734ac9,ramm <kramm@google.com>, 2016-08-18 07:20:50 -0700, , merge test_opcodes.py vm_test.py file integration test directory test really unit test disguise  created moe http github.com google moe 130636932,,
3764,f6ab84f5da40179ea0b0a20de4a5377b070faf9a,ramm <kramm@google.com>, 2016-08-17 14:13:00 -0700, , support string annotation fix handling none  created moe http github.com google moe 130561718,,
3765,d5fc91a7de4677f29339e70cb8602824ca618f12,yquah <fyquah@google.com>, 2016-08-16 10:21:54 -0700, , add argument addbinding  created moe http github.com google moe 130416488,,
3766,8f1c05a68bd5490d6a4897c9a2877ea12a8707ab,baum <dbaum@google.com>, 2016-08-10 08:55:22 -0700, , temporary fix infinite loop bug type parameter collide  created moe http github.com google moe 129871073,,
3767,0fffd5c0cea6263900bdff9a2f96e524b8a1fcad,baum <dbaum@google.com>, 2016-08-05 14:30:24 -0700, , get_iter attempt use __getitem__ __iter__ defined  created moe http github.com google moe 129482979,,
3768,71e786422ffcbe2a0c9bccff786dccee1c0fb5b7,baum <dbaum@google.com>, 2016-08-05 13:11:34 -0700, , add function source result  created moe http github.com google moe 129474199,,
3769,7ffb2883cc809222c34e7baab25fb7cd390cc8ec,ramm <kramm@google.com>, 2016-08-05 08:58:08 -0700, , fix syntax error xmlrpclib.pytd  created moe http github.com google moe 129446750,,
3770,8ee73d5f9e5f9173441f65770f397552ae9e785d,ramm <kramm@google.com>, 2016-08-05 08:52:16 -0700, , generate additional cfg node needed splitting  created moe http github.com google moe 129446287,,
3771,bd55bc897b4d2a6457431bc0c04699f4d69f58ff,echen <rechen@google.com>, 2016-08-04 17:33:32 -0700, , attempt define anystr typevar defines anystr typevar typing.pytd import wherever anystr used rather replacing union str unicode  created moe http github.com google moe 129393853,,
3772,5569d09a57960f583c928d2d0862d93c7e869a08,ramm <kramm@google.com>, 2016-08-04 17:11:24 -0700, , make robust  created moe http github.com google moe 129391718,,
3773,325316455397c0cfd5ef68cbe017751d31c1b56b,echen <rechen@google.com>, 2016-08-04 16:34:13 -0700, , handle error discovered gracefully analysis save error keep going produce much useful output check much file possible add error log container error end  created moe http github.com google moe 129387813,,
3774,bdba926711200e5e6baf15e49a4b253e1de8950c,ramm <kramm@google.com>, 2016-08-04 13:25:26 -0700, , ignore mroerror encounter optimization inherited method removed cycle  created moe http github.com google moe 129366138,,
3775,4c36a7c947613328742e92866bb93ce073270e61,ramm <kramm@google.com>, 2016-08-04 13:23:10 -0700, , blow ... import ... hit bad pyi file  created moe http github.com google moe 129365866,,
3776,6667c6372682cca9367ca402c15b1a068a302147,echen <rechen@google.com>, 2016-08-04 11:18:25 -0700, , fix breakage  created moe http github.com google moe 129351788,,
3777,8b53773a4eb72880916e80c8c0f439df3771cb54,echen <rechen@google.com>, 2016-08-03 15:48:38 -0700, , automated rollback changelist 129251060 reason rollback broke original change description define anystr typevar defines anystr typevar typing.pytd import wherever anystr used rather replacing union str unicode   created moe http github.com google moe 129268468,,
3778,79456ff916e39dc71fb313087134d369376e8b47,yquah <fyquah@google.com>, 2016-08-03 15:33:52 -0700, , stop pytype failing invoking type check  created moe http github.com google moe 129266894,,
3779,c61e54432293ce230f67585dc10052a8befcfa57,echen <rechen@google.com>, 2016-08-03 13:28:29 -0700, , define anystr typevar defines anystr typevar typing.pytd import wherever anystr used rather replacing union str unicode  created moe http github.com google moe 129251060,,
3780,1df866c247d112eb42c285334851e5f77d452c20,echen <rechen@google.com>, 2016-08-03 11:34:46 -0700, , get rid support class scoped type parameter  created moe http github.com google moe 129238501,,
3781,38c28aec518c56af62d5b2f310c90bf0a6447999,echen <rechen@google.com>, 2016-08-03 11:22:18 -0700, , remove specialized type parameter class template drop template item typeparameter instance move improves check adjusttemplates illegal container defs use add test visitor fix bad pytd definition caught change since typing.io parameterized stdlib.stringio typeshed parsed  created moe http github.com google moe 129236765,,
3782,727084c597bf253acd6f5118ea8ea518f31f4266,echen <rechen@google.com>, 2016-08-02 17:13:47 -0700, , enable importing type parameter delay creation signature template dependency resolution rewritten use template reset internal state every time enters new signature use type parameter name intead  created moe http github.com google moe 129161388,,
3783,4baad828493948f80f6a61f182af80e30403c370,echen <rechen@google.com>, 2016-08-02 17:05:27 -0700, , include typeparameter instance ast duplicate top level type parameter longer allowed name typedeclunit rather arbitrary prefix lookup function know prefix add type parameter name typevar removed builtins extraordinary number test class named  created moe http github.com google moe 129160471,,
3784,f0bd400bb5d1a6bc71ea609b6ae921b6dcfde377,caceres <acaceres@google.com>, 2016-08-01 13:53:11 -0700, , ignore abstractmethod metaclass pyis  created moe http github.com google moe 129022751,,
3785,e182965a1e427a2e3c262ec048b86bd644d741f1,echen <rechen@google.com>, 2016-08-01 08:18:23 -0700, , examine generictype parent class  created moe http github.com google moe 128986710,,
3786,9ffba335c35b9b6351346a2ece83c38e171a8ee4,caceres <acaceres@google.com>, 2016-07-29 14:28:55 -0700, , use typeshed stub instead module csv functools socket threading xml typeshed version complete case  created moe http github.com google moe 128846980,,
3787,172666c2c9407afa35d30b2ba1b59cfb0f52899f,ramm <kramm@google.com>, 2016-07-29 08:08:32 -0700, , careful kind asts allow optimize call lookupclasses  created moe http github.com google moe 128808475,,
3788,85e01418a59def56d62888b59b51a43b1d7a07e6,caceres <acaceres@google.com>, 2016-07-31 17:26:13 -0500, , add support keyword argument syntax pyis def ... longer throw parse error transformed def ...  created moe http github.com google moe 128760601,,
3789,c6916672c46c07ff9ac0ac38fd69de86d3dcacfa,baum <dbaum@google.com>, 2016-07-28 13:50:17 -0700, , change attribute_error include object name one possible binding  created moe http github.com google moe 128736966,,
3790,777dc743cf9f524f9a5a0044b5adc0fb866cc4f9,caceres <acaceres@google.com>, 2016-07-28 13:12:51 -0700, , partially rollback typeshed longer type ignore inconvenient place need strip kept behavior annotated constant valid equivalent constant annotated  created moe http github.com google moe 128732963,,
3791,674f3143bc5e59cfda70ea3a8d1b8d046aa6ca9d,caceres <acaceres@google.com>, 2016-07-28 13:12:24 -0700, , update typeshed also add 2and3 argparse.pyi pytype typeshed testing blacklist clear sneaked  created moe http github.com google moe 128732907,,
3792,9a922a2598654e0f86eec94dbd3438ae890b4de3,ramm <kramm@google.com>, 2016-07-28 10:55:34 -0700, , support sys.platform check  created moe http github.com google moe 128717231,,
3793,ecc02e18754cf28209a79dd48f7964f83a2289fb,baum <dbaum@google.com>, 2016-07-27 16:58:16 -0700, , fix isinstance check object class  created moe http github.com google moe 128646215,,
3794,83f35175f29f80f05914cb598d6effb7ea5a07fd,echen <rechen@google.com>, 2016-07-27 09:49:46 -0700, , support renaming type parameter make keep track alias key map multiple parameter value whenever come across something like base_cls foo parameter example alias  created moe http github.com google moe 128595917,,
3795,ca0c2663dfe295034bd965372945137d8358a392,echen <rechen@google.com>, 2016-07-27 08:22:04 -0700, , fix abstractset definition minor clean typing.pytd  created moe http github.com google moe 128587344,,
3796,94c29397a2b095fb45a098e63d51c8b907cf9938,yquah <fyquah@google.com>, 2016-07-27 08:11:57 -0700, , add support unevaluated  created moe http github.com google moe 128586407,,
3797,d775e26a981504492019a397f598c5f644afc441,marrow <nmarrow@google.com>, 2016-07-27 07:04:30 -0700, , added abc  created moe http github.com google moe 128581383,,
3798,3f29be6ba5144f0f999746e4dc6d981566acdd3d,ramm <kramm@google.com>, 2016-07-25 16:22:29 -0700, , improve pyi set  created moe http github.com google moe 128412670,,
3799,c35053a7ad6695fc795800c53eacfe9688090f42,caceres <acaceres@google.com>, 2016-07-25 15:18:10 -0700, , allow pytd_tool take second argument sends output stdout  created moe http github.com google moe 128405219,,
3800,cb270dce5ea9daca5fcaf5f92df1511cca261e71,echen <rechen@google.com>, 2016-07-25 14:24:52 -0700, , add basic support specializing generictype parameter  created moe http github.com google moe 128399314,,
3801,7506f596cb6fdae74d301664d86ff5d88fd226e3,ramm <kramm@google.com>, 2016-07-25 10:03:01 -0700, , use different analysis depth module initialization analysis  created moe http github.com google moe 128368689,,
3802,2e9b4594b645f779a2f484a125d06bd2b4f0f715,echen <rechen@google.com>, 2016-07-25 08:11:47 -0700, , refactor pytd slightly avoid circular import  created moe http github.com google moe 128357615,,
3803,9742e120bd3b3cdd01993d734b7a1e31951ecdd4,ramm <kramm@google.com>, 2016-07-22 17:38:55 -0700, , treat typing.py builtin need higher precedence user import since preloaded  created moe http github.com google moe 128229687,,
3804,3d937d1017caad38ce3524b5959b6e6b86a6a022,ramm <kramm@google.com>, 2016-07-22 16:14:23 -0700, , fix bug quick clean command line option  created moe http github.com google moe 128222499,,
3805,5b34fb17d3b71009fb3ab2e3c69f3afb3111650c,echen <rechen@google.com>, 2016-07-22 15:44:12 -0700, , resolve module dependency post processing  created moe http github.com google moe 128219598,,
3806,30ea876117a0d2a3db1e7f866ad5e2e79a4ab251,ramm <kramm@google.com>, 2016-07-22 15:10:04 -0700, , improve handling args  created moe http github.com google moe 128216155,,
3807,5d8cfd99d25dc9b2662a2e170c7eb60cbde4c876,ramm <kramm@google.com>, 2016-07-22 14:52:42 -0700, , fail report error interpreter function arg matching  created moe http github.com google moe 128214243,,
3808,c72690463060fec557c05fa60ad729a16ba77c08,ramm <kramm@google.com>, 2016-07-22 12:04:31 -0700, , minor cleanup convert.py add assert cfg.py compression code  created moe http github.com google moe 128197590,,
3809,0fee10d83a2104ab4d68bf8f58ad83bea5676ec0,ramm <kramm@google.com>, 2016-07-22 09:38:19 -0700, , make sure solve type parameter right node  created moe http github.com google moe 128181685,,
3810,e6695545d6b92006745d493bf7c8fd1f24f413f8,baum <dbaum@google.com>, 2016-07-22 07:57:12 -0700, , output error csv specified exit status even error detected type checking  created moe http github.com google moe 128173782,,
3811,343282c07d32f5ca62c5fc9ada8bcf558bcc76d1,ramm <kramm@google.com>, 2016-07-21 17:05:13 -0700, , merge  created moe http github.com google moe 128123147,,
3812,abfff6ebecaadb99a648482ea02c606213d5253b,ramm <kramm@google.com>, 2016-07-21 14:56:22 -0700, , get rid externaltype  created moe http github.com google moe 128108910,,
3813,488d0f068fd6cbcf971c200a948bc0c57a9e8bcd,yquah <fyquah@google.com>, 2016-07-21 11:54:27 -0700, , add used tricorder analyzer  created moe http github.com google moe 128087575,,
3814,5e8740913be3948b82d47bbb188d168715d07e3f,caceres <acaceres@google.com>, 2016-07-21 07:17:56 -0700, , ignore type ignore type annotation side effect longer throw error annotated constant like ... annotation  created moe http github.com google moe 128058217,,
3815,20ecd041b4bfbb9fe1edb194b458d3ccbceb2ce8,ramm <kramm@google.com>, 2016-07-21 06:02:31 -0700, , configure logging loading imports_info  created moe http github.com google moe 128052847,,
3816,e0b9e93657089bab2527a8d17e4fbdda587385dc,baum <dbaum@google.com>, 2016-07-20 15:02:39 -0700, , fix bug checking file generating pyi output output half src_out none lead exception believe simply ignore case  created moe http github.com google moe 127992994,,
3817,a5c35202de56eafbb818bc38924e740224f9f847,yquah <fyquah@google.com>, 2016-07-20 13:47:53 -0700, , add flag output error csv support pytype  created moe http github.com google moe 127983522,,
3818,b94d441c8448b4c599396260ea49d5d22d075eea,echen <rechen@google.com>, 2016-07-20 09:58:03 -0700, , add test logic inherited method generictype  created moe http github.com google moe 127956697,,
3819,69746917a2a3b8473630dc0002fb207375864db8,ramm <kramm@google.com>, 2016-07-20 08:20:54 -0700, , make pytype return bad exit status case error  created moe http github.com google moe 127947572,,
3820,d1041833239d542a727de90e036f1e06c6af5ad5,echen <rechen@google.com>, 2016-07-19 15:52:24 -0700, , add better support typing.pytd change make pytype actually use type stdlib typing rather immediately replacing builtins instance writing class list list pas cause pytype look typing.list verify subclass generic  created moe http github.com google moe 127884146,,
3821,ef3c4d5428cd43393f6937cfa09faa32791f254c,yquah <fyquah@google.com>, 2016-07-19 15:43:10 -0700, , construct constructor config.options  created moe http github.com google moe 127883137,,
3822,0f1de67b428196768faec492637806d2f7541281,ramm <kramm@google.com>, 2016-07-19 13:19:56 -0700, , fix error checking imports_info option  created moe http github.com google moe 127866006,,
3823,9abd112266a68a30c5f6c14fd0eb3b113d21e814,yquah <fyquah@google.com>, 2016-07-19 09:15:01 -0700, , add property method access self._message bootstrap pytype_runner simple test  created moe http github.com google moe 127838019,,
3824,fe0284b57fed77818b972a9e70ae312b802359d7,ramm <kramm@google.com>, 2016-07-19 09:08:00 -0700, , change command line option control checking inference change pytype file.py type check file.py generate pyi pytype file.py file.pyi pytype file.py file.pyi  finally check file pyi pytype file.py file.pyi   created moe http github.com google moe 127837399,,
3825,851b2a3103a3a9de01b6718981c2a3a0f813d2dd,caceres <acaceres@google.com>, 2016-07-19 07:18:58 -0700, , typevars ignore argument first  created moe http github.com google moe 127828676,,
3826,1243bb4f6c68d0f0ced8502b11fc0ef47a23f741,ramm <kramm@google.com>, 2016-07-18 14:34:41 -0700, , refactor config.py particular split seperate method one per option  created moe http github.com google moe 127759889,,
3827,8d3a80f4116fafcb6725ae1239621dc59b3127fc,caceres <acaceres@google.com>, 2016-07-18 13:55:47 -0700, , add empty pytd stub module giving import error submodules xml added stub one typeshed others like xml.xslt handled xml.pytd  created moe http github.com google moe 127755130,,
3828,d8925d41ba889fb841983fed558f6ce84f50c28f,caceres <acaceres@google.com>, 2016-07-18 11:38:41 -0700, , drop stdlib pytds subprocess urlparse ast typeshed version parsed generally complete  created moe http github.com google moe 127740033,,
3829,7f6b5faac6a1802da44e74e5bf09d8d771d7e5f0,echen <rechen@google.com>, 2016-07-18 11:08:23 -0700, , create unsolvable index error  created moe http github.com google moe 127735994,,
3830,7fa67835606db437b66f386ee3613b728f17da34,ramm <kramm@google.com>, 2016-07-18 10:45:02 -0700, , add topological sort implementation utils.py need new config.py  created moe http github.com google moe 127732797,,
3831,ca1b3246dab8c3505b45468dfd163a3b96d1c690,echen <rechen@google.com>, 2016-07-17 20:06:44 -0700, , import module level __getattr__ wildcard import module top level __getattr__ copy  created moe http github.com google moe 127679866,,
3832,fb5d64add6ece600bfc33e16df4ce836e834edc3,ramm <kramm@google.com>, 2016-07-15 15:22:44 -0700, , add test byte  created moe http github.com google moe 127584972,,
3833,15ae33034ed42a8732ac4a94986d69d385e74700,ramm <kramm@google.com>, 2016-07-15 15:14:13 -0700, , move conversion related code vm.py convert.py  created moe http github.com google moe 127584102,,
3834,9aee6c5162915427a1eb9dcb911984826559b1d9,caceres <acaceres@google.com>, 2016-07-15 12:15:01 -0700, , namedtuple support  created moe http github.com google moe 127565285,,
3835,873cf5719b604d4b8635e4b847d1ebe82d7ad838,caceres <acaceres@google.com>, 2016-07-15 11:35:42 -0700, , allow trailing comma import tuples error typeshed stdlib 2.7 codecs.pyi  created moe http github.com google moe 127561321,,
3836,2aae2258f381c21c2cfff5f381610fe099a16652,caceres <acaceres@google.com>, 2016-07-15 08:48:58 -0700, , update typeshed blacklist  created moe http github.com google moe 127544067,,
3837,ff51665ba357a23b1b21ccdff2471160ae2473c7,ramm <kramm@google.com>, 2016-07-15 07:34:59 -0700, , make version check compatible typeshed  created moe http github.com google moe 127538577,,
3838,9d2141dcd4af00b0ac0f82e68d43c5fc74986829,echen <rechen@google.com>, 2016-07-14 18:00:08 -0700, , simplify generictype instance modify pytd optimize.py simplify generictype instance whose parameter sometimes leaf object constant return type adjust  created moe http github.com google moe 127495343,,
3839,371dcdbfad801a94f1bc98d67fe16a03f4c29d28,echen <rechen@google.com>, 2016-07-14 16:57:41 -0700, , make typing.callable callable since callable generictype addition editing typing.pytd need modify avoid getting type union callable callable first callable second typing.callable  created moe http github.com google moe 127489835,,
3840,1f6802b44552ff39660eb4f737bbf89ee9cb18a3,caceres <acaceres@google.com>, 2016-07-14 11:58:34 -0700, , fix python setup.py install broke install worked pytype left bad state  created moe http github.com google moe 127457446,,
3841,aa33f080b598300d746d292fb9b8bd453ff94211,ramm <kramm@google.com>, 2016-07-13 11:59:09 -0700, , handle pyi dependency error gracefully  created moe http github.com google moe 127343083,,
3842,a25e7d0252413b40ba3d1b12d40f13993d1ffdce,caceres <acaceres@google.com>, 2016-07-13 11:55:40 -0700, , remove recently fixed pyis blacklist  created moe http github.com google moe 127342712,,
3843,c61dc1d1fa550524e587a00a0f64dfa604fa48b9,ramm <kramm@google.com>, 2016-07-13 09:39:52 -0700, , improve behavior alias pyi file  created moe http github.com google moe 127326357,,
3844,116f14fe2697b83f63fb400694d642f2235c0c09,echen <rechen@google.com>, 2016-07-12 17:44:28 -0700, , use mro use method resolution order looking inherited method move code test pytype.utils purpose add couple check bad inheritance pattern  created moe http github.com google moe 127264589,,
3845,b364113fbd97cabb6c282e282eb564dbc05cb24a,echen <rechen@google.com>, 2016-07-12 10:02:30 -0700, , always succeed matching object  created moe http github.com google moe 127211132,,
3846,17b80f81eca6e4f0429d8f46c33039c824f3d5b0,ramm <kramm@google.com>, 2016-07-11 10:23:19 -0700, , use realpath make log output useful  created moe http github.com google moe 127099943,,
3847,eff07596781f6ec0a0ffb9f638bb990eb0f5e210,ramm <kramm@google.com>, 2016-07-11 09:52:40 -0700, , treat anonymous property  created moe http github.com google moe 127096663,,
3848,240362b8d3296155082650765f569f9a4252da60,ramm <kramm@google.com>, 2016-07-08 14:46:27 -0700, , improve printing  created moe http github.com google moe 126949868,,
3849,b95a026033d07b64e47467694dea45bd02ec4d9e,ramm <kramm@google.com>, 2016-07-08 14:43:55 -0700, , allow dict syntax dict border solid height 10px  created moe http github.com google moe 126949584,,
3850,c76ba2417f77ce1686c2200725d78ce694c4bc7d,echen <rechen@google.com>, 2016-07-08 12:34:56 -0700, , update builtins definition  created moe http github.com google moe 126936745,,
3851,90936aa33368f790471e69dd7e6b52e345b02298,ramm <kramm@google.com>, 2016-07-08 12:05:23 -0700, , use typing.callable instead function  created moe http github.com google moe 126934099,,
3852,8b053f16d0b43f3774a8655f8a5e991933f78e27,ramm <kramm@google.com>, 2016-07-08 12:00:44 -0700, , fix matching bound function typing.callable  created moe http github.com google moe 126933625,,
3853,1695f9acf7bb9e60b6f37cf09f756e2209d8d7f3,ramm <kramm@google.com>, 2016-07-08 10:34:18 -0700, , improve printing annotation fix matching bug  created moe http github.com google moe 126924380,,
3854,cc15dea4ceca41b132a918a1f3bc6fcadf513357,echen <rechen@google.com>, 2016-07-08 10:22:47 -0700, , use __getattr__ compute attribute normal attribute lookup fails check __getattr__ method defined use compute attribute fix attribute error caused  created moe http github.com google moe 126923315,,
3855,86b993bc393943a974a11eba4319189e24a53634,caceres <acaceres@google.com>, 2016-07-08 08:55:49 -0700, , adjust setup.py get travis build  created moe http github.com google moe 126915728,,
3856,d8c99c5c0c8d6c0db6ca3f9bf60bf889b4c44cad,baum <dbaum@google.com>, 2016-07-07 13:44:13 -0700, , add splitting support empty list set frozenset  created moe http github.com google moe 126841688,,
3857,c086ac7b677219096ce479ccb148cd62a89c2e92,ramm <kramm@google.com>, 2016-07-07 13:19:24 -0700, , upgrade typeshed version  created moe http github.com google moe 126838810,,
3858,f17740aded9a58dcc865c404d7d15cc98d7e40cc,ramm <kramm@google.com>, 2016-07-07 08:59:27 -0700, , relative import higher priority named import  created moe http github.com google moe 126810729,,
3859,87a02c2e0e079af6992ccf187b571ebd43e83823,yquah <fyquah@google.com>, 2016-07-06 17:10:46 -0700, , add sorted_errors analyzer client access type inferencing checking error  created moe http github.com google moe 126755286,,
3860,1b703b976fd67657d2ef6ac00e2804350ead61ae,ramm <kramm@google.com>, 2016-07-06 16:07:47 -0700, , fix bug delete_global make assertnoerrors testing  created moe http github.com google moe 126749025,,
3861,11f2866660bbe171861c20fc09e72df021e73ad0,baum <dbaum@google.com>, 2016-07-06 12:59:42 -0700, , add splitting support isinstance  created moe http github.com google moe 126728399,,
3862,cfe85be3ee23077e0520a2fa1114a9ae938ff3e1,ramm <kramm@google.com>, 2016-07-01 17:02:50 -0700, , fix error generation invalid super call  created moe http github.com google moe 126461317,,
3863,0a9f6f63d48e6659da534e3e5ab54e99f4bda869,echen <rechen@google.com>, 2016-06-30 17:22:01 -0700, , handle circular reference without blowing  created moe http github.com google moe 126362668,,
3864,cdad91c6cd55c3961d4da574d33277c6d73b047a,ramm <kramm@google.com>, 2016-06-30 10:57:05 -0700, , fix matching involving generic superclass  created moe http github.com google moe 126319939,,
3865,98d7d37e35b963249b431fbcfa73ad1393886f31,baum <dbaum@google.com>, 2016-06-29 14:25:34 -0700, , splitting dicts support pretty minimal dicts either empty ambiguous  created moe http github.com google moe 126232875,,
3866,916ae592b57c4b189289e4e6fce6ea86fdd0e0f6,echen <rechen@google.com>, 2016-06-29 09:20:07 -0700, , fix argument passed __get__  created moe http github.com google moe 126198959,,
3867,1d8e60f62b4f33e57c58b105093ac69713b387b5,baum <dbaum@google.com>, 2016-06-29 08:40:49 -0700, , make true false compatible splitting  created moe http github.com google moe 126195232,,
3868,5b0c7d7b87b5aa5b06464a71aeeda89a2fb66673,ramm <kramm@google.com>, 2016-06-28 12:26:16 -0700, , make typing.io context manager  created moe http github.com google moe 126103853,,
3869,fac6363b98be8c3b724aa72a6381660b28794aaa,ramm <kramm@google.com>, 2016-06-28 12:21:53 -0700, , new error class callable  created moe http github.com google moe 126103431,,
3870,3282ae0189aa81a71a8c923e345974ecf01ef42e,ramm <kramm@google.com>, 2016-06-28 11:30:44 -0700, , remove old pytd smoketest supplanted pytd  created moe http github.com google moe 126097433,,
3871,01ae5ddc62fb5ff946ca768fb471953c1bc24ed7,ramm <kramm@google.com>, 2016-06-28 11:26:22 -0700, , improve sharding typeshed test  created moe http github.com google moe 126096908,,
3872,d905b0aef8c7a316279497e294f0f32b826701df,ramm <kramm@google.com>, 2016-06-28 11:21:00 -0700, , report missing submodules import error attribute error  created moe http github.com google moe 126096158,,
3873,a82d08da4458837438bddb20de475baba3a76f66,ramm <kramm@google.com>, 2016-06-28 10:09:16 -0700, , recover  created moe http github.com google moe 126086571,,
3874,be24f53ca4949b29ea7e873cff2e8ee581834268,ramm <kramm@google.com>, 2016-06-28 10:02:56 -0700, , move builtins namespace __builtin__ fix bug caused naming thing python builtins like module lookuperror type etc  created moe http github.com google moe 126085747,,
3875,e88e944e1a3d0a1bcb9be9a88c1c502cc24e79fe,ramm <kramm@google.com>, 2016-06-23 15:33:19 -0700, , make optimization behave better  created moe http github.com google moe 125726418,,
3876,33cc49207e110d79f85f512b4f0b222ab4349c8b,baum <dbaum@google.com>, 2016-06-23 13:28:24 -0700, , use condition skip dead code  created moe http github.com google moe 125711496,,
3877,40bbb66c1eed5dde1e75330bdbb84360e587097c,baum <dbaum@google.com>, 2016-06-22 13:03:40 -0700, , implement splitting  created moe http github.com google moe 125598948,,
3878,27fa1025d678b9359d1f256be449d8283e027a99,caceres <acaceres@google.com>, 2016-06-21 13:30:42 -0700, , add test pipe typeshed python2 stdlib file parser  created moe http github.com google moe 125488162,,
3879,c65c7edcbe2debed21db62224d036e64c4867fd7,baum <dbaum@google.com>, 2016-06-21 10:28:07 -0700, , use import opcode determine error location pyi_error filename line number underlying pyi error also included message filename truncated basename otherwise long path file tend clutter error log  created moe http github.com google moe 125466494,,
3880,fdafe22b41a4350654c8cb02e6c3ac3a613ad6a9,caceres <acaceres@google.com>, 2016-06-20 15:40:30 -0700, , support class property pyi file class method decorated property foo.setter foo.deleter get parsed ast class attribute support read class property def self int ... equivalent class ... type int  created moe http github.com google moe 125388396,,
3881,645bb5a3d01248c388dfaeeedc6a1416326a43bf,ramm <kramm@google.com>, 2016-06-20 12:44:37 -0700, , parse .pyi leave broken module import cache  created moe http github.com google moe 125368271,,
3882,3432d3a7c4577dbc75aa295e11b7fe84ceffa101,ramm <kramm@google.com>, 2016-06-17 16:09:53 -0700, , add option pytype specifying module name  created moe http github.com google moe 125212676,,
3883,f8f3a52cfb8f850b2d14e7d591d82f46967fffac,caceres <acaceres@google.com>, 2016-06-16 13:41:27 -0700, , pyi parser drop unused rule overload  created moe http github.com google moe 125096963,,
3884,4e840069483ff11ba5026d52dcca704a9758f91e,ramm <kramm@google.com>, 2016-06-16 10:58:48 -0700, , make function subclass callable  created moe http github.com google moe 125078286,,
3885,109d0d2e596efcad26d7332d8f7f87667945d2fc,ramm <kramm@google.com>, 2016-06-16 09:26:14 -0700, , improve support old style class  created moe http github.com google moe 125067949,,
3886,1819a8f607a3112860a39584df50ddfb8454e20d,ramm <kramm@google.com>, 2016-06-15 14:53:13 -0700, , simplify test suite get rid unnecessary block  created moe http github.com google moe 124995611,,
3887,7d7024925d79132941dcaa878f5027c96e41ba2c,caceres <acaceres@google.com>, 2016-06-14 12:35:44 -0700, , look __init__.pyi file loading module stub typeshed  created moe http github.com google moe 124869372,,
3888,46476227fdaf7eb11d42a4cd9169682b63da3778,ramm <kramm@google.com>, 2016-06-13 09:38:47 -0700, , properly infer optional parameter  created moe http github.com google moe 124734510,,
3889,a33f4a3a550ad007b919ad5942aa1e8defd1ca81,ramm <kramm@google.com>, 2016-06-13 09:21:46 -0700, , simplify error message empty container  created moe http github.com google moe 124732904,,
3890,13a335e870a949be97254bef600adf353da5657c,ramm <kramm@google.com>, 2016-06-13 09:21:10 -0700, , improve quick behaviour add test case  created moe http github.com google moe 124732827,,
3891,2e5b7652c09a1e0ff239e31041824bf1fa56b782,ramm <kramm@google.com>, 2016-06-13 09:20:29 -0700, , create new unsolvables import prevent cyclic mros  created moe http github.com google moe 124732769,,
3892,249930af1d719a455766d236bd8e184912134a42,ramm <kramm@google.com>, 2016-06-13 09:19:48 -0700, , fix analyzing bound method variable  created moe http github.com google moe 124732703,,
3893,e1062f2b684692f9350aaf2e1f08418c7b742ef3,ramm <kramm@google.com>, 2016-06-13 09:19:04 -0700, , add pastevariable optimization improve explaining fix bug test output  created moe http github.com google moe 124732630,,
3894,208245cc27279c1dd57b5e7a6f9de712d3a5bd12,ramm <kramm@google.com>, 2016-06-09 14:20:10 -0700, , point readme setup.py pytype need 2.7 run  created moe http github.com google moe 124496655,,
3895,78ec93f6f1ae8166fb8de025dd451439111218b9,baum <dbaum@google.com>, 2016-06-07 08:11:13 -0700, , save metric yaml add support merging multiple metric dump together  created moe http github.com google moe 124245280,,
3896,6985d5052ea369ddb9bf3c0350a449690f406474,caceres <acaceres@google.com>, 2016-05-26 10:25:01 -0700, , add module import generated pyi  created moe http github.com google moe 123331692,,
3897,7724510b4d799221af4280b6331d3f0367ef4d7f,ramm <kramm@google.com>, 2016-05-25 15:42:39 -0700, , fix set inheritance  created moe http github.com google moe 123261815,,
3898,6b3b87bcbe54dbc9c7bbc7d777fce0837e555517,ramm <kramm@google.com>, 2016-05-25 15:40:01 -0700, , improve support typing.sequence  created moe http github.com google moe 123261541,,
3899,15a3650f5af296c67d482867b24ef7c34cbf3493,baum <dbaum@google.com>, 2016-05-25 11:01:58 -0700, , create metric add metric option also added code collect specific metric may helpful splitting though metric subject change mostly wanted something place pytd vmlib order verify build file change  created moe http github.com google moe 123231377,,
3900,4b22844a6fe7f5ff76d256264f7db584eb4959de,ramm <kramm@google.com>, 2016-05-23 17:06:05 -0700, , give __builtin__ class proper typing superclass  created moe http github.com google moe 123054772,,
3901,16f29eebdf69693d50fa56d10b31189d28a78bf1,ramm <kramm@google.com>, 2016-05-20 15:21:03 -0700, , make list subclass iterable  created moe http github.com google moe 122872067,,
3902,69bcd96a850f22c681924201be81070ab9d7e23d,baum <dbaum@google.com>, 2016-05-19 14:27:21 -0700, , add detail field error  created moe http github.com google moe 122769468,,
3903,bde8063a489c690188fda028bf487fece53bb4fe,baum <dbaum@google.com>, 2016-05-19 13:37:21 -0700, , add profile option  created moe http github.com google moe 122764244,,
3904,7d4c834b8b61e82082dc2c4d0204db6db1a7c6cc,ramm <kramm@google.com>, 2016-05-18 13:23:56 -0700, , make import error mention .pyi  created moe http github.com google moe 122661636,,
3905,115d11bb124550b9b3e956630d343b46dc329012,ramm <kramm@google.com>, 2016-07-24 13:22:39 -0700, , simplify readme.md  created moe http github.com google moe 122661511,,
3906,d750d4944ba4a0c000859b7939280649403568ff,ramm <kramm@google.com>, 2016-05-18 13:21:57 -0700, , add command line option  created moe http github.com google moe 122661458,,
3907,04579b326cc6fbee496d70d6b4b51e147408a06b,baum <dbaum@google.com>, 2016-05-12 13:25:04 -0700, , rename value binding term value purged cfg.py external value variable.values etc also changed still many occurences value val local variable file changed needed later affect public api  created moe http github.com google moe 122190667,,
3908,4e87afc8d13112cd9ae0dc4592ba6319ead1c92b,baum <dbaum@google.com>, 2016-05-12 11:09:27 -0700,20, improve pseudocode output sample output none none none none 197 return frame bar 129 v129 str str 256 129 v14 nonetype nonetype 256 v20 int int 257 254 locals.y 129 v129 str str 216 129 v14 nonetype nonetype 216 255 129 v129 str str 254 129 v14 nonetype nonetype 254 256 129 v129 str str 254 129 v14 nonetype nonetype 254 none none none 197 return frame bar 129 v129 str str 256 129 v14 nonetype nonetype 256 v20 int int 257  created moe http github.com google moe 122175763,,
3909,a4479141305c21a7ed64cd3a5fbd27bd8be3b9c7,baum <dbaum@google.com>, 2016-05-04 08:58:02 -0700, , add support disabling error added director class manages support single file support type ignore pytype disable error name added filter errorlogbase allows arbitrary predicate function determine error actually added log make errors.error public since show arg filter function added invalid directive warning catch error detected within pytype comment  created moe http github.com google moe 121485724,,
3910,af17135cc0a9bc25646ca5f5155b71cd4ce65b96,baum <dbaum@google.com>, 2016-04-27 10:42:12 -0700, , improve encapsulation error class add error name used later disabling specific error funnel error single _add call disabling take effect  created moe http github.com google moe 120930357,,
3911,a117da420e316ce9d3b26ec738b4e0b5ebf3119a,baum <dbaum@google.com>, 2016-04-26 08:16:53 -0700, , add previously code either used implicit truth either errorlog errorlog.error determine severe error occurred work warning used added addition error field made private reason expose attribute directly since error log always iterated  created moe http github.com google moe 120814124,,
3912,80bbdb37c771696d73504530fd4b97aee08cde72,ramm <kramm@google.com>, 2016-04-20 14:21:58 -0700, , fix order parameter function call error message  created moe http github.com google moe 120375487,,
3913,4fd8ce704fa65eab73e64364b221481a3f53b885,ramm <kramm@google.com>, 2016-04-19 15:17:33 -0700, , allow pas python_exe host run bytecode compilation using python pytype  created moe http github.com google moe 120276055,,
3914,d526cc9f950d2320fd93405ade99873f210ddbea,ramm <kramm@google.com>, 2016-04-15 17:07:31 -0700, , implement typing.list  created moe http github.com google moe 120006158,,
3915,ca4fcab96b674d5beafc1641612d16390caf9d3c,ramm <kramm@google.com>, 2016-04-15 16:05:17 -0700, , improve error message display better error message specified find python executable  created moe http github.com google moe 120000697,,
3916,15cc2b86e2e6ff810ca71f46e2407ca62cd9756f,ramm <kramm@google.com>, 2016-04-15 10:47:42 -0700, , fix python try except  created moe http github.com google moe 119970136,,
3917,25950b4629a3856109f98541874f4079a1a3bb64,ramm <kramm@google.com>, 2016-04-15 10:44:59 -0700, , implement python opcode  created moe http github.com google moe 119969844,,
3918,9c33b844533fe362eab1f192c0349456f5f8bcfe,ramm <kramm@google.com>, 2016-04-14 15:12:38 -0700, , make python test work forge  created moe http github.com google moe 119896468,,
3919,21af4b063893d0f5373da719c2ade00b9dab132d,ramm <kramm@google.com>, 2016-04-13 16:15:51 -0700, , output error found circular inhertance  created moe http github.com google moe 119797475,,
3920,94ffb73555960718c6b8473cc2bfeb66b3c48bcb,ramm <kramm@google.com>, 2016-04-13 14:50:02 -0700, , ignore keyword argument  created moe http github.com google moe 119788095,,
3921,aa64f3f4e8d310b42f0bf60d04114c77f31359c8,ramm <kramm@google.com>, 2016-04-11 14:09:10 -0700, , generate better error message broken pyi file also improve handling generic base class  created moe http github.com google moe 119568618,,
3922,447ab009428c7016ad3c1d283b5bd9802a0cc79c,ramm <kramm@google.com>, 2016-04-06 12:52:10 -0700, , support checking typing.union ...  created moe http github.com google moe 119192303,,
3923,fdff7447e9154e145d53d8326745544f5ae29a3c,ramm <kramm@google.com>, 2016-04-06 11:18:03 -0700, , function type annotation use unknown  created moe http github.com google moe 119181640,,
3924,fb4115ca5cdf284069e373d7dbb8bce36eb67401,ramm <kramm@google.com>, 2016-04-06 11:16:28 -0700, , check function call annotation  created moe http github.com google moe 119181424,,
3925,d67d012e43ac63414cd49ce4c02bf4d39bbdccb7,ramm <kramm@google.com>, 2016-04-06 11:10:39 -0700, , fix matching call staticmethod builtins  created moe http github.com google moe 119180591,,
3926,b5268599b6d23a8b0a5212c72a5aa883b0978467,ramm <kramm@google.com>, 2016-04-04 08:33:40 -0700, , fix matching unknown  created moe http github.com google moe 118942436,,
3927,3b7f0452f2d234d260167bad989727cf6837369f,ramm <kramm@google.com>, 2016-03-22 15:51:06 -0700, , allow syntax variant optional parameter  created moe http github.com google moe 117873580,,
3928,89d09e3eb20f4b3b511d0f159957e8e5ffc4a3b8,ramm <kramm@google.com>, 2016-03-22 13:29:32 -0700, , switch builtin module typeshed following better representation typeshed hence deleted _functools _sre _weakrefset imp select signal atexit pprint shutil string struct textwrap traceback  created moe http github.com google moe 117857515,,
3929,50ae056aeee96e5428da89700c2e0b0e0b4d6b85,ramm <kramm@google.com>, 2016-03-21 15:16:13 -0700, , print optional parameter args kwargs ...  created moe http github.com google moe 117760035,,
3930,7a00001da62dfec9daf9e24e761a990f4229568e,ramm <kramm@google.com>, 2016-03-21 15:14:41 -0700, , improve pytd os.walk  created moe http github.com google moe 117759846,,
3931,df5028832180fe66ff19c17e55b1f3ae9f6cd326,ramm <kramm@google.com>, 2016-03-18 10:18:49 -0700, , fix behaviour two different state data stack  created moe http github.com google moe 117559089,,
3932,4d26f3bfe6028b87ec6287b9a4d6ebc97b9ef53b,ramm <kramm@google.com>, 2016-03-17 14:58:59 -0700, , make inplace operator also fall back normal operator  created moe http github.com google moe 117488916,,
3933,d4833ab118fb96a995bdd53bc2204c1ba3baada8,ramm <kramm@google.com>, 2016-03-16 15:14:20 -0700, , allow function pyi return type needed typeshed  created moe http github.com google moe 117388904,,
3934,f4d076202415267cdf444c7466fb214a1c16d8eb,ramm <kramm@google.com>, 2016-03-16 15:10:28 -0700, , output error invalid global reference add report error option  created moe http github.com google moe 117388484,,
3935,093f1f1c52740383b29bf436ad84dab8c91ce5c0,ramm <kramm@google.com>, 2016-03-15 17:29:11 -0700, , make load_pytd resolve externaltypes right away  created moe http github.com google moe 117296129,,
3936,82aeaffb075a0d53e785e55c7d838c07c7ea51de,ramm <kramm@google.com>, 2016-03-15 12:11:22 -0700, , change extension user import .pyi  created moe http github.com google moe 117264017,,
3937,5ae85c58dc4062256345c76cbc2ecc082d07bd8d,ramm <kramm@google.com>, 2016-03-14 16:08:47 -0700, , add flag pytype  created moe http github.com google moe 117182643,,
3938,ea6b8043b3bb36c743ce14b405d1dc8347da2883,ludemann <pludemann@google.com>, 2016-03-13 17:03:10 -0700, , remove lazy import  created moe http github.com google moe 117095169,,
3939,4644532653d63c5874ae4661cc5d9f3dbdfe6a35,ramm <kramm@google.com>, 2016-03-11 14:43:46 -0800, , make externaltype link type instead class  created moe http github.com google moe 117009817,,
3940,964c38af7d42e42c9785aa4210cd33045948c34c,ramm <kramm@google.com>, 2016-03-10 14:31:14 -0800, , move pyi validation try except  created moe http github.com google moe 116909266,,
3941,741489c1ed4f3d6342cee9000a322b14e21a1a1a,ramm <kramm@google.com>, 2016-03-10 14:20:09 -0800, , process emit inline type annotation  created moe http github.com google moe 116908015,,
3942,17ec3d01fa50a32f4181e8214eec5c9bc0144e06,ludemann <pludemann@google.com>, 2016-03-07 12:38:37 -0800, , remove circular import  created moe http github.com google moe 116576405,,
3943,f09b78f468399f4b8e9ab730fb67ac3c7e4b5e02,ludemann <pludemann@google.com>, 2016-03-07 12:37:18 -0800, , move transforms.py preparation removing circular lazy import  created moe http github.com google moe 116576283,,
3944,a54bb18aade1f7e4d5837aee4dac878cc8b65bb9,ludemann <pludemann@google.com>, 2016-03-07 11:05:55 -0800, , remove lazy import needed prevent circularity  created moe http github.com google moe 116566095,,
3945,b0d9e78445895e9e1259156a3e6fd1840beb6c87,ramm <kramm@google.com>, 2016-03-02 14:17:44 -0800,7, add new optimization remove redundant signature fix http github.com google pytype issue  created moe http github.com google moe 116180707,,
3946,2bbfa01b02e6bf0c62720679b3f6b4e913aa1210,ramm <kramm@google.com>, 2016-02-29 16:09:58 -0800, , add test optional parameter  created moe http github.com google moe 115917320,,
3947,2d086e60fd69ce1e6ea1d6877a39024d318e1ae9,ramm <kramm@google.com>, 2016-02-29 16:08:42 -0800, , allow function match callable  created moe http github.com google moe 115917163,,
3948,e68cdb23140a263b85c441ded6791c9426962c23,ramm <kramm@google.com>, 2016-02-29 16:07:17 -0800, , unskip test work remove useless test  created moe http github.com google moe 115916926,,
3949,beacc0ad272a30a043e4c6c4c47cebe1055929a1,ramm <kramm@google.com>, 2016-01-08 16:06:51 -0800, , fix matching pyi superclass  created moe http github.com google moe 115916854,,
3950,358361e836ff989f197662ce14e7e9fbbedb9c98,ramm <kramm@google.com>, 2016-02-29 16:06:23 -0800, , support staticmethod classmethod pyi  created moe http github.com google moe 115916773,,
3951,0231c7de5bdb33057fe8ddb7a319b2c62c5e7318,ludemann <pludemann@google.com>, 2016-02-29 12:13:04 -0800, , fix import fix file name fit naming convention  created moe http github.com google moe 115884065,,
3952,fe6f26345d00399a4d752e5573fe8bf38e63d6b6,ramm <kramm@google.com>, 2016-02-25 18:36:12 -0800, , add missing installation step readme.md also need clone submodule install ply  created moe http github.com google moe 115628832,,
3953,1debeed34d5144f79dc7ebd29feb31a6b1a48604,ramm <kramm@google.com>, 2016-02-23 13:19:00 -0800, , improve precision structural type converter dealing equality unknown type variable fix http github.com google pytype issue  created moe http github.com google moe 115375743,,
3954,2321a7a90b4ebc33d9899cb85be94ca3b8499451,ludemann <pludemann@google.com>, 2016-02-11 19:44:40 -0800, , fix typo broke one test  created moe http github.com google moe 114503360,,
3955,03da0c73ac09521e806f15f22453996e4b510dc8,ramm <kramm@google.com>, 2016-02-11 19:38:13 -0800, , support explicitly specifying module unknown content  created moe http github.com google moe 114503121,,
3956,21717aa1655b05ba27160df147816588053fe530,ludemann <pludemann@google.com>, 2016-02-11 16:52:22 -0800, , suppress error message first pas rename pytd thing pyi  created moe http github.com google moe 114492836,,
3957,534c3b7e5941395aa947239e5de0ba9326385761,ludemann <pludemann@google.com>, 2016-02-11 10:34:23 -0800, , change imports_info file including output map modify imports_info validated  created moe http github.com google moe 114452528,,
3958,3950ed59a4aaafa9dfa98394a95b4a5264e3e398,ramm <kramm@google.com>, 2016-02-11 06:54:40 -0800, , implement basic delete_gloal opcode  created moe http github.com google moe 114432847,,
3959,e550ac981b7fa5e5ccfc69cba3801ebbc60ce558,ludemann <pludemann@google.com>, 2016-02-08 14:54:04 -0800, , fix imports_map validator  created moe http github.com google moe 114152848,,
3960,613488c4e81ca153af01ecf7cf59445d20c1a640,ramm <kramm@google.com>, 2016-02-08 11:02:07 -0800, , simplify imports_map loading  created moe http github.com google moe 114128155,,
3961,d7761dc2c8e2d3ee8e3888a61652c05ad7dfe0ca,ramm <kramm@google.com>, 2016-02-04 10:16:34 -0800, , simplify imports_info file  created moe http github.com google moe 113862973,,
3962,69e3314515232610cfb1aa7f4d28b4a327f82889,ramm <kramm@google.com>, 2016-01-28 09:36:06 -0800, , add skipped test case  created moe http github.com google moe 113270892,,
3963,1039ffe1a2c584fd54729832173573d356f4932e,ramm <kramm@google.com>, 2016-01-27 21:44:19 -0800, , fix loading dummy __init__ entry imports_map turn os.path.isfile dev null return false  created moe http github.com google moe 113229849,,
3964,f72d03b4816388af4db026dbb676e5a126ba9b40,ramm <kramm@google.com>, 2016-01-27 21:43:16 -0800, , temporarily add ast.pytd  created moe http github.com google moe 113229808,,
3965,ffdc401b5cc7c838a2491b845b65e380259da318,ramm <kramm@google.com>, 2016-01-27 21:28:50 -0800, , get rid pytd import ext  created moe http github.com google moe 113229299,,
3966,93e6e75a3994790ee44f37d083a517a20fb54e4a,ramm <kramm@google.com>, 2016-01-27 16:27:07 -0800, , fix allow shorthand version pytype file.py  created moe http github.com google moe 113213420,,
3967,6f2b1e27b1a8c8a04cbc7de86a999d850a970d35,ramm <kramm@google.com>, 2016-01-25 13:45:42 -0800, , make quote parser.py consistent rest pytype  created moe http github.com google moe 112982851,,
3968,63e369bec8a9b5717f015fdc2a13cd32c0e5fce1,ramm <kramm@google.com>, 2016-01-25 13:43:04 -0800, , allow true false instead ... type bool  created moe http github.com google moe 112982594,,
3969,979df0b47532d379832726b6e78022473bf2e82d,ramm <kramm@google.com>, 2016-01-25 13:42:36 -0800,10, add skipped test case expose root cause http github.com google pytype issue list tuple  created moe http github.com google moe 112982533,,
3970,6a724745eaef365c5d10847494effcfd5b086f02,ramm <kramm@google.com>, 2016-01-25 07:03:33 -0800, , simplify see  created moe http github.com google moe 112946704,,
3971,54b5b15f199790e908138a4a5a6a8329996484e0,ramm <kramm@google.com>, 2016-01-22 14:22:44 -0800,9, use list instead list ... see http github.com google pytype issue  created moe http github.com google moe 112819092,,
3972,fda4663fbb90c33645c057b5935574f4b2b744d7,ramm <kramm@google.com>, 2016-07-08 13:53:44 -0700, , pep 484 compatibility fix  created moe http github.com google moe 112816237,,
3973,d90dc5a57e69efa66b398593aba296dd9439ace4,ramm <kramm@google.com>, 2016-01-22 09:25:37 -0800,12, output none nonetype see http github.com google pytype issue  created moe http github.com google moe 112790937,,
3974,54aa33ff352c11c352d142e9bbe59bc3de02b930,ramm <kramm@google.com>, 2016-01-22 09:24:21 -0800, , fix import constant  created moe http github.com google moe 112790856,,
3975,1b1a56900c80db5b59c00ba917a048a10664a96d,ramm <kramm@google.com>, 2016-01-22 09:22:31 -0800, , fix import object imported  created moe http github.com google moe 112790716,,
3976,ca964dde611afcd4a16086e2cb420476dc9350e2,ramm <kramm@google.com>, 2016-01-21 15:23:56 -0800, , add concept alias ast  created moe http github.com google moe 112730106,,
3977,8a80c61e8c3339b3fd017fc9d903de52c4e64037,ramm <kramm@google.com>, 2016-01-20 14:30:26 -0800, , add support __class__  created moe http github.com google moe 112620095,,
3978,29beb9261dcceba64d4ac0b33dc570cc76fe60a1,ramm <kramm@google.com>, 2016-01-14 16:21:15 -0800, , make pytype aware typeshed builtins gone  created moe http github.com google moe 112201714,,
3979,af1fd52246153b797ddb371ecf0487190bf14375,ramm <kramm@google.com>, 2016-01-13 15:30:01 -0800, , add support module.__file__  created moe http github.com google moe 112097036,,
3980,0600cbf9f32e1057f64450d0640951ee22d975bd,ramm <kramm@google.com>, 2016-01-13 15:29:19 -0800, , get rid  created moe http github.com google moe 112096954,,
3981,030775c0a851def55bbd2724a29c208ffaa9d926,ramm <kramm@google.com>, 2016-01-13 13:54:10 -0800, , make setup.py also install file typeshed  created moe http github.com google moe 112086889,,
3982,47558ca270a3abab81a23c4fd841826c66d4ea58,ramm <kramm@google.com>, 2016-01-13 13:52:12 -0800, , fix typeshed precedence also see http github.com jukkal mypy pull 1116  created moe http github.com google moe 112086686,,
3983,17b7a952eaa205f9b2185025377c8e250f528b56,ramm <kramm@google.com>, 2016-07-15 07:34:59 -0700, , make version check compatible typeshed  created moe http github.com google moe 127538577,,
3984,d630448b8945d70aa10dc7cb46db8c524077e9fb,echen <rechen@google.com>, 2016-07-14 18:00:08 -0700, , simplify generictype instance modify pytd optimize.py simplify generictype instance whose parameter sometimes leaf object constant return type adjust  created moe http github.com google moe 127495343,,
3985,ebb7c229bcb8146bbc02d87b1d3bd0832eaf6679,echen <rechen@google.com>, 2016-07-14 16:57:41 -0700, , make typing.callable callable since callable generictype addition editing typing.pytd need modify avoid getting type union callable callable first callable second typing.callable  created moe http github.com google moe 127489835,,
3986,26d96ec4686fe3eef9775a94b15a770f0811b69f,caceres <acaceres@google.com>, 2016-07-14 11:58:34 -0700, , fix python setup.py install broke install worked pytype left bad state  created moe http github.com google moe 127457446,,
3987,79003a898cf038bf473386839c8db3cc3aa00402,ramm <kramm@google.com>, 2016-07-14 08:24:05 -0700, , fix signature defaultdict.get  created moe http github.com google moe 127433979,,
3988,b392f1264cb28b558e2a4ac244fb2c0199ef2d17,ramm <kramm@google.com>, 2016-07-13 11:59:09 -0700, , handle pyi dependency error gracefully  created moe http github.com google moe 127343083,,
3989,3f0420c24159cda5de5f6eaee6427c537ee90dbc,caceres <acaceres@google.com>, 2016-07-13 11:55:40 -0700, , remove recently fixed pyis blacklist  created moe http github.com google moe 127342712,,
3990,a9d43f7b6244e8b140bfc7237ee6c87ad9ea655e,caceres <acaceres@google.com>, 2016-07-13 10:08:56 -0700, , use random.pyi typeshed instead  created moe http github.com google moe 127329472,,
3991,abcd0da7f48b05f71c992842385f884f4878b527,ramm <kramm@google.com>, 2016-07-13 09:39:52 -0700, , improve behavior alias pyi file  created moe http github.com google moe 127326357,,
3992,5ea2c6b76e8a9454fe1da74abe4bad5cb0c5cdba,echen <rechen@google.com>, 2016-07-12 17:44:28 -0700, , use mro use method resolution order looking inherited method move code test pytype.utils purpose add couple check bad inheritance pattern  created moe http github.com google moe 127264589,,
3993,c6abb632975c880ae49355bdb63fe91a33bd59ed,caceres <acaceres@google.com>, 2016-07-12 10:06:52 -0700, , add optional arg raw_input  created moe http github.com google moe 127211764,,
3994,61ba9a7d4af19e6f9c296cc8cb36d921734aa653,echen <rechen@google.com>, 2016-07-12 10:02:30 -0700, , always succeed matching object  created moe http github.com google moe 127211132,,
3995,e726912acbb6f6d27c05d301b5fd510f7689bf0e,caceres <acaceres@google.com>, 2016-07-12 08:13:52 -0700, , add builtin unicode exception  created moe http github.com google moe 127200534,,
3996,fc6a430b3c710ebf70aec8d962a43880eb8e6eea,ramm <kramm@google.com>, 2016-07-11 17:34:17 -0700, , fix parameter type time.sleep  created moe http github.com google moe 127148501,,
3997,df526720c96b08d328b2214d08eaa67ca342b01a,ramm <kramm@google.com>, 2016-07-11 17:29:39 -0700, , make pytd_tool run faster default optimization futile pretty printing  created moe http github.com google moe 127148074,,
3998,43567a3a5efe036f795bb16af3bbbf35619463d1,ramm <kramm@google.com>, 2016-07-11 10:23:19 -0700, , use realpath make log output useful  created moe http github.com google moe 127099943,,
3999,c1dfe14e017f7eedb65f03753e9f43fcce80ac23,ramm <kramm@google.com>, 2016-07-11 09:52:40 -0700, , treat anonymous property  created moe http github.com google moe 127096663,,
4000,84bab2eddb1fb641b05c41edb7c40f50c037fc0c,ramm <kramm@google.com>, 2016-07-08 15:18:08 -0700, , slightly better itertools  created moe http github.com google moe 126953329,,
4001,4d887d1bf51249d87a587aaea5b2570d5079a2d1,ramm <kramm@google.com>, 2016-07-08 14:46:27 -0700, , improve printing  created moe http github.com google moe 126949868,,
4002,38fbe353bf24eb79e0bb11ff519ffd6ade497960,ramm <kramm@google.com>, 2016-07-08 14:43:55 -0700, , allow dict syntax dict border solid height 10px  created moe http github.com google moe 126949584,,
4003,755b079a9e124574a2d784d6088188485f9820a8,caceres <acaceres@google.com>, 2016-07-08 14:27:42 -0700, , added shebang pytd_tool main.py either pip setup.py need get proper executable bin work pytype main.py  created moe http github.com google moe 126947889,,
4004,9170335471c8d2e6d6180b345a8df0576b98d41d,ramm <kramm@google.com>, 2016-07-08 13:15:37 -0700, , write __getattr__ name output failure case  created moe http github.com google moe 126940479,,
4005,cd9c823bee135466887377fd4c5f8c9ff4403f51,echen <rechen@google.com>, 2016-07-08 12:34:56 -0700, , update builtins definition  created moe http github.com google moe 126936745,,
4006,124fc9a09195154339b8000686ba50d2cec3f1de,ramm <kramm@google.com>, 2016-07-08 12:08:36 -0700, , generating fallback .pyi put __getattr__  created moe http github.com google moe 126934413,,
4007,098e8ca7ae9ca36df124ce7992b45e6adda2bab4,ramm <kramm@google.com>, 2016-07-08 12:05:23 -0700, , use typing.callable instead function  created moe http github.com google moe 126934099,,
4008,804e6dc810ae32098d07c61538b9ca75b4d210b7,ramm <kramm@google.com>, 2016-07-08 12:00:44 -0700, , fix matching bound function typing.callable  created moe http github.com google moe 126933625,,
4009,a41f12e6fc2e5a54b5c76f7766e8dbe3fd693a49,ramm <kramm@google.com>, 2016-07-08 10:34:18 -0700, , improve printing annotation fix matching bug  created moe http github.com google moe 126924380,,
4010,0ea31638726d5e3b21c75e57d77e23cc97879644,echen <rechen@google.com>, 2016-07-08 10:22:47 -0700, , use __getattr__ compute attribute normal attribute lookup fails check __getattr__ method defined use compute attribute fix attribute error caused  created moe http github.com google moe 126923315,,
4011,7951d5ccad41346c9ea7e651f61cd32c40187425,caceres <acaceres@google.com>, 2016-07-08 08:55:49 -0700, , adjust setup.py get travis build  created moe http github.com google moe 126915728,,
4012,bf1867cc6db92eb023277c8015cddadee02f0743,baum <dbaum@google.com>, 2016-07-07 13:44:13 -0700, , add splitting support empty list set frozenset  created moe http github.com google moe 126841688,,
4013,6191219d5b1a09a5221f3a1d7b59c2adef4fe2a1,ramm <kramm@google.com>, 2016-07-07 13:19:24 -0700, , upgrade typeshed version  created moe http github.com google moe 126838810,,
4014,b986bb1b08feccd128353c6f8a872a72ca9d4a04,ramm <kramm@google.com>, 2016-07-07 08:59:27 -0700, , relative import higher priority named import  created moe http github.com google moe 126810729,,
4015,08cddabd82d5c6fc9f333817e4f1902e3b82f3b5,echen <rechen@google.com>, 2016-07-06 17:51:11 -0700, , add missing set frozenset method builtins  created moe http github.com google moe 126758667,,
4016,3f2e64640d31bb10df59472b61d2ff20e54beda2,yquah <fyquah@google.com>, 2016-07-06 17:10:46 -0700, , add sorted_errors analyzer client access type inferencing checking error  created moe http github.com google moe 126755286,,
4017,d52ef467d9f71d1eb4d9a7d87002b01248b23de7,ramm <kramm@google.com>, 2016-07-06 16:07:47 -0700, , fix bug delete_global make assertnoerrors testing  created moe http github.com google moe 126749025,,
4018,6c3a5cda05906527da21b950ff5f1c461475e2b5,baum <dbaum@google.com>, 2016-07-06 12:59:42 -0700, , add splitting support isinstance  created moe http github.com google moe 126728399,,
4019,d637358cc2761d8223ccb40955c0da9c91f8faed,ramm <kramm@google.com>, 2016-07-06 11:41:35 -0700, , add delattr builtins  created moe http github.com google moe 126720455,,
4020,3aa68aa3532ded0c2d07ef837e724416eb1b108a,ramm <kramm@google.com>, 2016-07-06 11:15:55 -0700, , fix definition globals  created moe http github.com google moe 126717275,,
4021,4ec2f802aa183b116226e984d38f3ac03571333f,ramm <kramm@google.com>, 2016-01-20 14:30:26 -0800, , add support __class__  created moe http github.com google moe 112620095,,
4022,1cfc23e744426c9df3f023a6500a78fbcaa65608,ramm <kramm@google.com>, 2016-07-01 17:02:50 -0700, , fix error generation invalid super call  created moe http github.com google moe 126461317,,
4023,02420496fe41b8cd315e2efe647adf0b736b8aa9,echen <rechen@google.com>, 2016-06-30 17:22:01 -0700, , handle circular reference without blowing  created moe http github.com google moe 126362668,,
4024,0fa1f15df8a86788c754265c665b88dad348e40b,ramm <kramm@google.com>, 2016-06-30 10:57:05 -0700, , fix matching involving generic superclass  created moe http github.com google moe 126319939,,
4025,bcf65b5485221ff79d4967707441da77c5785608,baum <dbaum@google.com>, 2016-06-29 14:25:34 -0700, , splitting dicts support pretty minimal dicts either empty ambiguous  created moe http github.com google moe 126232875,,
4026,b5221c18a4af433409ac62e952aa7bf6590527c0,echen <rechen@google.com>, 2016-06-29 09:20:07 -0700, , fix argument passed __get__  created moe http github.com google moe 126198959,,
4027,5cf2659e6ab296dcc9d43b42fae1c54703a66bc7,baum <dbaum@google.com>, 2016-06-29 08:40:49 -0700, , make true false compatible splitting  created moe http github.com google moe 126195232,,
4028,023f34104d54731426e60573a5ca766239b7d502,ramm <kramm@google.com>, 2016-06-28 12:26:16 -0700, , make typing.io context manager  created moe http github.com google moe 126103853,,
4029,1c4b94320cb37244e4edc6019a11c3ba2398a46b,ramm <kramm@google.com>, 2016-06-28 12:21:53 -0700, , new error class callable  created moe http github.com google moe 126103431,,
4030,1f771eb14856233b30d43035b0b053baf9888433,ramm <kramm@google.com>, 2016-06-28 11:30:44 -0700, , remove old pytd smoketest supplanted pytd  created moe http github.com google moe 126097433,,
4031,49314914edad89e1c6b8a1fcea2a9c4a5c064fc7,ramm <kramm@google.com>, 2016-06-28 11:26:22 -0700, , improve sharding typeshed test  created moe http github.com google moe 126096908,,
4032,708c046e7f6d68e3ec52838bb3f9eaeffd6dc70d,ramm <kramm@google.com>, 2016-06-28 11:21:00 -0700, , report missing submodules import error attribute error  created moe http github.com google moe 126096158,,
4033,eb1798f56fd09a391e6ec1cd44bf2f0c34407e33,ramm <kramm@google.com>, 2016-06-28 10:09:16 -0700, , recover  created moe http github.com google moe 126086571,,
4034,ec010ba83bdfaab78203ffac261925e8e217de41,ramm <kramm@google.com>, 2016-06-28 10:02:56 -0700, , move builtins namespace __builtin__ fix bug caused naming thing python builtins like module lookuperror type etc  created moe http github.com google moe 126085747,,
4035,77db7494df5cb5d33d623d20787c5acca152c3e4,ramm <kramm@google.com>, 2016-06-23 15:33:19 -0700, , make optimization behave better  created moe http github.com google moe 125726418,,
4036,347faacae9de025c7ff98e95d691568a854d6ac7,baum <dbaum@google.com>, 2016-06-23 13:28:24 -0700, , use condition skip dead code  created moe http github.com google moe 125711496,,
4037,26c742364074b853811c9c0c5eeefef275904dbb,baum <dbaum@google.com>, 2016-06-22 13:03:40 -0700, , implement splitting  created moe http github.com google moe 125598948,,
4038,8829c995488362f340ff3315ee4ae941759d36d2,caceres <acaceres@google.com>, 2016-06-21 13:30:42 -0700, , add test pipe typeshed python2 stdlib file parser  created moe http github.com google moe 125488162,,
4039,5652593028e19f678aafb212d569271d55ae23d5,baum <dbaum@google.com>, 2016-06-21 10:28:07 -0700, , use import opcode determine error location pyi_error filename line number underlying pyi error also included message filename truncated basename otherwise long path file tend clutter error log  created moe http github.com google moe 125466494,,
4040,b93cb95d4e29a2a0dd901463d239d335941ecccf,caceres <acaceres@google.com>, 2016-06-20 15:40:30 -0700, , support class property pyi file class method decorated property foo.setter foo.deleter get parsed ast class attribute support read class property def self int ... equivalent class ... type int  created moe http github.com google moe 125388396,,
4041,31daac686c94a9194097e2f88fcfbff6d3caa1bb,ramm <kramm@google.com>, 2016-06-20 12:44:37 -0700, , parse .pyi leave broken module import cache  created moe http github.com google moe 125368271,,
4042,b47eb4653f9ffb650483cfbefd1f1eb1d9b8895d,ramm <kramm@google.com>, 2016-06-17 16:09:53 -0700, , add option pytype specifying module name  created moe http github.com google moe 125212676,,
4043,9c1df8e9f1eae040e68ce1e1d1cebc5639c91b1b,caceres <acaceres@google.com>, 2016-06-16 13:41:27 -0700, , pyi parser drop unused rule overload  created moe http github.com google moe 125096963,,
4044,afbb62ff3c362c3dd2df45a4960b308358dc56d5,ramm <kramm@google.com>, 2016-06-16 10:58:48 -0700, , make function subclass callable  created moe http github.com google moe 125078286,,
4045,77306e536ec1365f5a1d97d78f4856cce97f1679,ramm <kramm@google.com>, 2016-06-16 09:26:14 -0700, , improve support old style class  created moe http github.com google moe 125067949,,
4046,b0fee948aff80b9db862bc389bb3dbc8dec2e2ef,ramm <kramm@google.com>, 2016-06-15 14:53:13 -0700, , simplify test suite get rid unnecessary block  created moe http github.com google moe 124995611,,
4047,a99a8363a8a4403000fdb89c1569d5da9b5c4f4e,ramm <kramm@google.com>, 2016-06-14 15:08:32 -0700, , fix matching  created moe http github.com google moe 124887228,,
4048,8b0aa9ac434587640351c63f4ecc9395ed390589,caceres <acaceres@google.com>, 2016-06-14 12:35:44 -0700, , look __init__.pyi file loading module stub typeshed  created moe http github.com google moe 124869372,,
4049,f9b1acdbbb3b08c0596e6b70e956de707ab1e902,caceres <acaceres@google.com>, 2016-06-13 15:02:16 -0700, , fix incorrect pytd stub stat function  created moe http github.com google moe 124772522,,
4050,ba6a010e4ad62936a2426282dfabf9fd8e2fe974,ramm <kramm@google.com>, 2016-06-13 09:38:47 -0700, , properly infer optional parameter  created moe http github.com google moe 124734510,,
4051,22a084a35767c61a85ade9a72f657c8ca82d8abe,ramm <kramm@google.com>, 2016-06-13 09:21:46 -0700, , simplify error message empty container  created moe http github.com google moe 124732904,,
4052,c9f7ac78713c6703eaf69f321a049875e49eae78,ramm <kramm@google.com>, 2016-06-13 09:21:10 -0700, , improve quick behaviour add test case  created moe http github.com google moe 124732827,,
4053,07c5a42cba0947230eca6efe4ca6da554516c513,ramm <kramm@google.com>, 2016-06-13 09:20:29 -0700, , create new unsolvables import prevent cyclic mros  created moe http github.com google moe 124732769,,
4054,1d38876b1e3124e53ff5b5e3ab4e85e7158e376a,ramm <kramm@google.com>, 2016-06-13 09:19:48 -0700, , fix analyzing bound method variable  created moe http github.com google moe 124732703,,
4055,5235339f1f0ab804341538cd0fd1117fff4fadfa,ramm <kramm@google.com>, 2016-06-13 09:19:04 -0700, , add pastevariable optimization improve explaining fix bug test output  created moe http github.com google moe 124732630,,
4056,7d01c555edff8184448e964a74bfb29e8985ed89,ramm <kramm@google.com>, 2016-06-09 14:20:10 -0700, , point readme setup.py pytype need 2.7 run  created moe http github.com google moe 124496655,,
4057,4f314f62bb6409e78175ee2c17d14f783ab3ab42,baum <dbaum@google.com>, 2016-06-07 08:11:13 -0700, , save metric yaml add support merging multiple metric dump together  created moe http github.com google moe 124245280,,
4058,b070029b6f37dec98af4952f8b4c980fbaf13803,caceres <acaceres@google.com>, 2016-05-26 10:25:01 -0700, , add module import generated pyi  created moe http github.com google moe 123331692,,
4059,4eb81f58bee85a95b75200fa2af2134598fb36c5,ramm <kramm@google.com>, 2016-05-25 15:42:39 -0700, , fix set inheritance  created moe http github.com google moe 123261815,,
4060,083054b82d74b2c76c23ca8ee9ff01d5ff433168,ramm <kramm@google.com>, 2016-05-25 15:40:01 -0700, , improve support typing.sequence  created moe http github.com google moe 123261541,,
4061,7934224c538973ebb378e0b59d0e019ac19d112d,baum <dbaum@google.com>, 2016-05-25 11:01:58 -0700, , create metric add metric option also added code collect specific metric may helpful splitting though metric subject change mostly wanted something place pytd vmlib order verify build file change  created moe http github.com google moe 123231377,,
4062,c11775c6324e400b78a249ce82396d2f8af17d8f,ramm <kramm@google.com>, 2016-05-23 17:11:35 -0700, , hardcode reverse operator builtins hardcoding add signature side builtins pyi example remove __radd__ int complex add __add__ complex int remove need reverse operator support inferencer also turn support overloading reverse operator default  created moe http github.com google moe 123055372,,
4063,0bc4feb6b479061d01a187409e2db5822fef2bf9,ramm <kramm@google.com>, 2016-05-23 17:06:05 -0700, , give __builtin__ class proper typing superclass  created moe http github.com google moe 123054772,,
4064,b6549c5b33080be71af59a6a77f7eefc3d17cdaa,ramm <kramm@google.com>, 2016-05-20 15:21:03 -0700, , make list subclass iterable  created moe http github.com google moe 122872067,,
4065,90e2fcab12587f3727dac33357438c751e3d5a03,baum <dbaum@google.com>, 2016-05-19 14:27:21 -0700, , add detail field error  created moe http github.com google moe 122769468,,
4066,66c88daeedeb1ad0720e84a5714fcef824dc3994,baum <dbaum@google.com>, 2016-05-19 13:37:21 -0700, , add profile option  created moe http github.com google moe 122764244,,
4067,defc084ed5b610f426e2cbed92fe819f74c60645,ramm <kramm@google.com>, 2016-05-18 13:23:56 -0700, , make import error mention .pyi  created moe http github.com google moe 122661636,,
4068,888677e0225a9bf50926b0c7e52705c278188ddd,ramm <kramm@google.com>, 2016-05-18 13:22:39 -0700, , simplify readme.md  created moe http github.com google moe 122661511,,
4069,d7e2348ce7c664b5973c0284b126bf8b75ec78fc,ramm <kramm@google.com>, 2016-05-18 13:21:57 -0700, , add command line option  created moe http github.com google moe 122661458,,
4070,552a48fed8290baf98ef98f822993ebf1cb8bdc2,atthias Kramm <kramm@google.com>, 2016-05-17 16:32:19 -0700, , update typeshed,,
4071,8f30eb5161905eace8409cc6dd0ef34ffb1dd25a,baum <dbaum@google.com>, 2016-05-12 13:25:04 -0700, , rename value binding term value purged cfg.py external value variable.values etc also changed still many occurences value val local variable file changed needed later affect public api  created moe http github.com google moe 122190667,,
4072,f2e898058e906f2ddc9094242ce69b4c3488119e,baum <dbaum@google.com>, 2016-05-12 11:09:27 -0700,20, improve pseudocode output sample output none none none none 197 return frame bar 129 v129 str str 256 129 v14 nonetype nonetype 256 v20 int int 257 254 locals.y 129 v129 str str 216 129 v14 nonetype nonetype 216 255 129 v129 str str 254 129 v14 nonetype nonetype 254 256 129 v129 str str 254 129 v14 nonetype nonetype 254 none none none 197 return frame bar 129 v129 str str 256 129 v14 nonetype nonetype 256 v20 int int 257  created moe http github.com google moe 122175763,,
4073,78ba7c2602bcbed5a1d4f6151f6192282ffc0dfe,baum <dbaum@google.com>, 2016-05-06 12:48:37 -0700, , add node svg output  created moe http github.com google moe 121700533,,
4074,7b94bdb7a431dcb2a2291d6e10d1b0d4b0c3f1a1,baum <dbaum@google.com>, 2016-05-04 08:58:02 -0700, , add support disabling error added director class manages support single file support type ignore pytype disable error name added filter errorlogbase allows arbitrary predicate function determine error actually added log make errors.error public since show arg filter function added invalid directive warning catch error detected within pytype comment  created moe http github.com google moe 121485724,,
4075,bef5f9f334efab600b02541d3002996297d7e5e1,baum <dbaum@google.com>, 2016-04-27 10:42:12 -0700, , improve encapsulation error class add error name used later disabling specific error funnel error single _add call disabling take effect  created moe http github.com google moe 120930357,,
4076,34a2df0dfc2bdcceb8aa93e3a166a70bc3a16e1f,baum <dbaum@google.com>, 2016-04-26 08:16:53 -0700, , add previously code either used implicit truth either errorlog errorlog.error determine severe error occurred work warning used added addition error field made private reason expose attribute directly since error log always iterated  created moe http github.com google moe 120814124,,
4077,797b4af4f9b92c51195dcb3f1ca84b9529905814,ramm <kramm@google.com>, 2016-04-20 14:21:58 -0700, , fix order parameter function call error message  created moe http github.com google moe 120375487,,
4078,8a96d030f22bffd6584622d3b40083918c1c8ab1,ramm <kramm@google.com>, 2016-04-19 15:17:33 -0700, , allow pas python_exe host run bytecode compilation using python pytype  created moe http github.com google moe 120276055,,
4079,dfc5840660b2bbbddeb614a06da42191525b02d8,ramm <kramm@google.com>, 2016-04-15 17:07:31 -0700, , implement typing.list  created moe http github.com google moe 120006158,,
4080,00cc97f68a026a687e7d88eef7863fb98172b990,ramm <kramm@google.com>, 2016-04-15 16:07:16 -0700, , support python 3.0 3.3  created moe http github.com google moe 120000859,,
4081,4635acf42f44acc4f9499ae1c86bc1607cf27014,ramm <kramm@google.com>, 2016-04-15 16:05:45 -0700, , fix keyerror pytype 3.5  created moe http github.com google moe 120000728,,
4082,fe9968c9acf6625b1879d626dae00f2e0b9a0abf,ramm <kramm@google.com>, 2016-04-15 16:05:17 -0700, , improve error message display better error message specified find python executable  created moe http github.com google moe 120000697,,
4083,899fa779e316256f03206842eec8837c1710f30e,ramm <kramm@google.com>, 2016-04-15 10:47:42 -0700, , fix python try except  created moe http github.com google moe 119970136,,
4084,28355e3631ce373ff88216316a28d0c11ff3903a,ramm <kramm@google.com>, 2016-04-15 10:44:59 -0700, , implement python opcode  created moe http github.com google moe 119969844,,
4085,737056111786fcab6cbca034de8df4ae6e17f4a9,ramm <kramm@google.com>, 2016-04-14 15:12:38 -0700, , make python test work forge  created moe http github.com google moe 119896468,,
4086,7544e958e5ee5d7b5e4f68c34fed741be92030fb,ramm <kramm@google.com>, 2016-04-13 16:15:51 -0700, , output error found circular inhertance  created moe http github.com google moe 119797475,,
4087,992807b23afc987a1a94fb3b9b379313bc18b460,ramm <kramm@google.com>, 2016-04-13 14:50:02 -0700, , ignore keyword argument  created moe http github.com google moe 119788095,,
4088,2b7b8e325893572fa778585c1e806b3285360d34,ramm <kramm@google.com>, 2016-04-11 14:09:10 -0700, , generate better error message broken pyi file also improve handling generic base class  created moe http github.com google moe 119568618,,
4089,c23a9927709debcc3729c13b5a86d5c2ad2832bf,ramm <kramm@google.com>, 2016-04-08 16:32:01 -0700, , add dummy abc.pytd use warnings.pyi typeshed  created moe http github.com google moe 119421546,,
4090,1264c4133512ddf4740ea136e8c2d631ca336460,ramm <kramm@google.com>, 2016-04-06 12:52:10 -0700, , support checking typing.union ...  created moe http github.com google moe 119192303,,
4091,f5277b592d6c1e583bd3543b99bc0aa7895c85ee,ramm <kramm@google.com>, 2016-04-06 11:18:03 -0700, , function type annotation use unknown  created moe http github.com google moe 119181640,,
4092,5c5ebdbbe0dd670ca135bc8b758fb204b854fde7,ramm <kramm@google.com>, 2016-04-06 11:16:28 -0700, , check function call annotation  created moe http github.com google moe 119181424,,
4093,f668b793fa17e8e1db3fc9a587204050da8e8cd6,ramm <kramm@google.com>, 2016-04-06 11:10:39 -0700, , fix matching call staticmethod builtins  created moe http github.com google moe 119180591,,
4094,2986339f06da304a1bcd42897e39b5cc094e786d,ramm <kramm@google.com>, 2016-04-04 08:33:40 -0700, , fix matching unknown  created moe http github.com google moe 118942436,,
4095,8a37fd2965e82fd75683a786f253ac45740eefd0,ramm <kramm@google.com>, 2016-03-22 15:51:06 -0700, , allow syntax variant optional parameter  created moe http github.com google moe 117873580,,
4096,4c88c35bd3a30fd2c95bda156dd6d89114245cff,ramm <kramm@google.com>, 2016-03-22 13:29:32 -0700, , switch builtin module typeshed following better representation typeshed hence deleted _functools _sre _weakrefset imp select signal atexit pprint shutil string struct textwrap traceback  created moe http github.com google moe 117857515,,
4097,cc087ffb356cd95ed02822519922f7591eeb9595,ramm <kramm@google.com>, 2016-03-21 15:16:13 -0700, , print optional parameter args kwargs ...  created moe http github.com google moe 117760035,,
4098,3d15a198704152f4ab1fa025b79e749e0a8f9d8f,ramm <kramm@google.com>, 2016-03-21 15:14:41 -0700, , improve pytd os.walk  created moe http github.com google moe 117759846,,
4099,f2b5854e190c381bf6fadc0cf1429c0df13dd384,ramm <kramm@google.com>, 2016-03-21 15:14:09 -0700, , fix calling pyi function args  created moe http github.com google moe 117759788,,
4100,5e14780d78301df320b11e83911086041af93958,ramm <kramm@google.com>, 2016-03-18 10:18:49 -0700, , fix behaviour two different state data stack  created moe http github.com google moe 117559089,,
4101,c67b2718e84583677b5b5dfcd55b54f8ffa82301,ramm <kramm@google.com>, 2016-03-17 14:58:59 -0700, , make inplace operator also fall back normal operator  created moe http github.com google moe 117488916,,
4102,466bf551230cff8c4abcc931eb7c843239fcf906,ramm <kramm@google.com>, 2016-03-17 09:30:46 -0700, , make nofail catch exception pytype swallow type error  created moe http github.com google moe 117452808,,
4103,77b8bf310850fe9af8071cdcf971e3eb3e1f81ec,ramm <kramm@google.com>, 2016-03-16 15:14:20 -0700, , allow function pyi return type needed typeshed  created moe http github.com google moe 117388904,,
4104,e0ae595aaa73eff0c52e861bc97b57cd33ce6786,ramm <kramm@google.com>, 2016-03-16 15:10:28 -0700, , output error invalid global reference add report error option  created moe http github.com google moe 117388484,,
4105,b8e96783661039508f962439cd04d7eacd304631,ramm <kramm@google.com>, 2016-03-15 17:29:11 -0700, , make load_pytd resolve externaltypes right away  created moe http github.com google moe 117296129,,
4106,f10b202a750f253435ac5ef760dc2e182a3d1c70,ramm <kramm@google.com>, 2016-03-15 12:11:22 -0700, , change extension user import .pyi  created moe http github.com google moe 117264017,,
4107,adcd102e739548ca68c646e1f7272cc179e701aa,ramm <kramm@google.com>, 2016-03-14 16:08:47 -0700, , add flag pytype  created moe http github.com google moe 117182643,,
4108,2c822593a496a1d819adc744fe1d537e0aa67b15,ludemann <pludemann@google.com>, 2016-03-13 17:03:10 -0700, , remove lazy import  created moe http github.com google moe 117095169,,
4109,0ec916563d2e95499340dfcd3e1e0e1ee18e7a25,ramm <kramm@google.com>, 2016-03-11 14:43:46 -0800, , make externaltype link type instead class  created moe http github.com google moe 117009817,,
4110,d60c66d820a956e8ebe2cd83d7b47766f09e9599,ramm <kramm@google.com>, 2016-03-10 14:31:14 -0800, , move pyi validation try except  created moe http github.com google moe 116909266,,
4111,259f93e96b26cfa731da83119dd5c776c06ce0db,ramm <kramm@google.com>, 2016-03-10 14:20:09 -0800, , process emit inline type annotation  created moe http github.com google moe 116908015,,
4112,6566787d606c4407d22802e9b93dc1b055a6608e,ludemann <pludemann@google.com>, 2016-03-07 12:38:37 -0800, , remove circular import  created moe http github.com google moe 116576405,,
4113,f165f473b75b91f46fd1fa19f631417627179873,ludemann <pludemann@google.com>, 2016-03-07 12:37:18 -0800, , move transforms.py preparation removing circular lazy import  created moe http github.com google moe 116576283,,
4114,d1897850fd4eed5c1729a30958510d4912b8b7d0,ludemann <pludemann@google.com>, 2016-03-07 11:05:55 -0800, , remove lazy import needed prevent circularity  created moe http github.com google moe 116566095,,
4115,fb0f7fb005f33223a05437833d15325a6f4a3a35,ramm <kramm@google.com>, 2016-03-02 14:17:44 -0800,7, add new optimization remove redundant signature fix http github.com google pytype issue  created moe http github.com google moe 116180707,,
4116,6b8064705f31adb49c9e68308feff76ba3a222e8,ramm <kramm@google.com>, 2016-01-20 14:32:15 -0800, , add simple definition defaultdict  created moe http github.com google moe 112620288,,
4117,4059c676d313d0ce445539ef685682de899c7ae8,ramm <kramm@google.com>, 2016-01-13 13:54:10 -0800, , make setup.py also install file typeshed  created moe http github.com google moe 112086889,,
4118,1e752747ee2f67de1094c055d299bed5fe039e60,ramm <kramm@google.com>, 2016-02-29 16:09:58 -0800, , add test optional parameter  created moe http github.com google moe 115917320,,
4119,2a72e71044f9092fe895bf6e429a670ed9424376,ramm <kramm@google.com>, 2016-02-29 16:08:42 -0800, , allow function match callable  created moe http github.com google moe 115917163,,
4120,7fb15a7881987f3752b1dbc6889a76b3f83430df,ramm <kramm@google.com>, 2016-02-29 16:08:12 -0800, , better intersection union difference set  created moe http github.com google moe 115917080,,
4121,144b4e7140cf29313db0d9d6aa2d645901cc8b09,ramm <kramm@google.com>, 2016-02-29 16:07:45 -0800, , make types.pytd slightly accurate  created moe http github.com google moe 115917002,,
4122,4e521a3dda9f6c4568c65278c7b1e28e7a266e99,ramm <kramm@google.com>, 2016-02-29 16:07:17 -0800, , unskip test work remove useless test  created moe http github.com google moe 115916926,,
4123,752d5cffcc7338eee5f4a699604cbf9625222023,ramm <kramm@google.com>, 2016-01-08 16:06:51 -0800, , fix matching pyi superclass  created moe http github.com google moe 115916854,,
4124,c53d91f695abf863df021a8d03465d57cf96f0e4,ramm <kramm@google.com>, 2016-02-29 16:06:23 -0800, , support staticmethod classmethod pyi  created moe http github.com google moe 115916773,,
4125,7235fbca7d321495062b2355a39c1a98818e04cc,ludemann <pludemann@google.com>, 2016-02-29 12:13:04 -0800, , fix import fix file name fit naming convention  created moe http github.com google moe 115884065,,
4126,ab08ec7be664243e46d56b7529956c303859eb70,ramm <kramm@google.com>, 2016-02-25 18:36:12 -0800, , add missing installation step readme.md also need clone submodule install ply  created moe http github.com google moe 115628832,,
4127,9a93f7bb63934130ff1445df6bf258ed8d7a1f20,ludemann <pludemann@google.com>, 2016-02-25 16:48:07 -0800, , minor change help message consistency  created moe http github.com google moe 115619864,,
4128,ea875ee0c58eabc10d91f9e63574c96661eb2dcc,ramm <kramm@google.com>, 2016-02-23 13:19:00 -0800, , improve precision structural type converter dealing equality unknown type variable fix http github.com google pytype issue  created moe http github.com google moe 115375743,,
4129,b136c92bedccefd8ad345d4cbe80a630b4a28ed5,ludemann <pludemann@google.com>, 2016-02-11 19:44:40 -0800, , fix typo broke one test  created moe http github.com google moe 114503360,,
4130,e5c7beef23eb567f53dcfebb30a20d5f1e035e39,ramm <kramm@google.com>, 2016-02-11 19:38:13 -0800, , support explicitly specifying module unknown content  created moe http github.com google moe 114503121,,
4131,3654a6bdfa7663e1f7e37de6cb59d2d9ecc1a4d9,ludemann <pludemann@google.com>, 2016-02-11 16:52:22 -0800, , suppress error message first pas rename pytd thing pyi  created moe http github.com google moe 114492836,,
4132,142a7997159aea0295fa0a5ee39c656ac8102eb1,ludemann <pludemann@google.com>, 2016-02-11 10:34:23 -0800, , change imports_info file including output map modify imports_info validated  created moe http github.com google moe 114452528,,
4133,571b533097c1843f9b442eee3e5671cea17e2fa5,ramm <kramm@google.com>, 2016-02-11 06:54:40 -0800, , implement basic delete_gloal opcode  created moe http github.com google moe 114432847,,
4134,b00a85d71c5e9958594481477395514c1f50d11a,ludemann <pludemann@google.com>, 2016-02-08 14:54:04 -0800, , fix imports_map validator  created moe http github.com google moe 114152848,,
4135,b3d6e2cdcb3f56ce2cd00b051fc5f347819b6497,ramm <kramm@google.com>, 2016-02-08 11:02:07 -0800, , simplify imports_map loading  created moe http github.com google moe 114128155,,
4136,925cc853066f05be379282b836d53210ff94fab0,ramm <kramm@google.com>, 2016-02-04 10:16:34 -0800, , simplify imports_info file  created moe http github.com google moe 113862973,,
4137,36f4f6a699c7273334f0ac003991cfaf466aa09d,ramm <kramm@google.com>, 2016-01-20 14:32:15 -0800, , add simple definition defaultdict  created moe http github.com google moe 112620288,,
4138,1c085df54565b5b3cb77f2a6866709700b3865bc,ramm <kramm@google.com>, 2016-01-13 13:54:10 -0800, , make setup.py also install file typeshed  created moe http github.com google moe 112086889,,
4139,6b8f207070470a3af45a173ee5f3f0bcfb43fc49,atthias Kramm <kramm@quiss.org>, 2016-01-30 06:41:53 -0800,20, merge pull request berkerpeksag issue pip install make pytype installable via pip,,
4140,a349f65647db84ec7c0d21f57fe8fa80d772e830,erker Peksag <berker.peksag@gmail.com>, 2016-01-30 11:26:32 +0200,6, make pytype installable via pip close,,
4141,8b1150f9f8270fbb7e15102bca511921a2991db7,ramm <kramm@google.com>, 2016-01-28 09:36:06 -0800, , add skipped test case  created moe http github.com google moe 113270892,,
4142,d18ef6ceb530ae59c9c39e0c140cba793bfb724d,ramm <kramm@google.com>, 2016-01-27 21:44:19 -0800, , fix loading dummy __init__ entry imports_map turn os.path.isfile dev null return false  created moe http github.com google moe 113229849,,
4143,1fc41c63dfe0ec111a70cf98fed5f6ec06e05ea8,ramm <kramm@google.com>, 2016-01-27 21:43:16 -0800, , temporarily add ast.pytd  created moe http github.com google moe 113229808,,
4144,5542b33b5347440bf0a364db5e030cc50c40d3fc,ramm <kramm@google.com>, 2016-01-27 21:28:50 -0800, , get rid pytd import ext  created moe http github.com google moe 113229299,,
4145,aaf8f6865ec26eec409238697e4050e7b64fbf75,ramm <kramm@google.com>, 2016-01-27 16:27:07 -0800, , fix allow shorthand version pytype file.py  created moe http github.com google moe 113213420,,
4146,cab3bf409f55b2c0ca0dba00d5d04369c90814cf,ramm <kramm@google.com>, 2016-01-20 14:32:15 -0800, , add simple definition defaultdict  created moe http github.com google moe 112620288,,
4147,40dd9dceee14ffd70f349a176c364245c1d806c2,ramm <kramm@google.com>, 2016-01-26 12:10:07 -0800, , optimize away int bool etc  created moe http github.com google moe 113083121,,
4148,ef9b27e9e67a6c78f2481b01295e423868063222,ramm <kramm@google.com>, 2016-01-25 13:45:42 -0800, , make quote parser.py consistent rest pytype  created moe http github.com google moe 112982851,,
4149,35a9b5d7fa2493aa3184d7b8575cc30c60ef1fd6,ramm <kramm@google.com>, 2016-01-25 13:43:04 -0800, , allow true false instead ... type bool  created moe http github.com google moe 112982594,,
4150,6377ff099db6aba55b866b03f96706df3dcfb366,ramm <kramm@google.com>, 2016-01-25 13:42:36 -0800,10, add skipped test case expose root cause http github.com google pytype issue list tuple  created moe http github.com google moe 112982533,,
4151,b589e18b5fad057c7cd60a6bc820f02bd2c1dbae,ramm <kramm@google.com>, 2016-01-25 07:05:27 -0800, , make byte alias str python  created moe http github.com google moe 112946867,,
4152,c61ba5b43ef90a8f401bb7532202255763940041,ramm <kramm@google.com>, 2016-01-25 07:03:33 -0800, , simplify see  created moe http github.com google moe 112946704,,
4153,5277026c1ba6136e5b32eda34db87d1364f0f08a,ramm <kramm@google.com>, 2016-01-22 14:22:44 -0800,9, use list instead list ... see http github.com google pytype issue  created moe http github.com google moe 112819092,,
4154,b72cc33bc955718a9f5c03a742cae254ed63780b,atthias Kramm <kramm@google.com>, 2016-01-22 16:43:16 -0800, , update typeshed,,
4155,7962da97bca21649db24f158aec07edb470c5529,ramm <kramm@google.com>, 2016-01-22 13:53:44 -0800, , pep 484 compatibility fix  created moe http github.com google moe 112816237,,
4156,a52b6d8d1b445b5500c344a422aa3141e258d9d7,ramm <kramm@google.com>, 2016-01-22 09:25:37 -0800,12, output none nonetype see http github.com google pytype issue  created moe http github.com google moe 112790937,,
4157,9511ac517e9a95a938d3bff210734fd44a1c0f2d,ramm <kramm@google.com>, 2016-01-22 09:24:21 -0800, , fix import constant  created moe http github.com google moe 112790856,,
4158,ec4d00776cd7b5fb84c3033197899bfbaa8ce3fc,ramm <kramm@google.com>, 2016-01-22 09:22:31 -0800, , fix import object imported  created moe http github.com google moe 112790716,,
4159,2b2eef35a81494289a898450e6f55c7d1b019bf1,ramm <kramm@google.com>, 2016-01-21 15:23:56 -0800, , add concept alias ast  created moe http github.com google moe 112730106,,
4160,f0410291f54144478134222cb336e29c7b672448,ramm <kramm@google.com>, 2016-01-20 14:32:15 -0800, , add simple definition defaultdict  created moe http github.com google moe 112620288,,
4161,752f010667e56b3ae6b5f6d6efce3ee932918e80,ludemann <pludemann@google.com>, 2016-01-18 22:39:00 -0800, , minor typo  created moe http github.com google moe 112443579,,
4162,06253f479f1f0100502baae11920ce75757d9e8b,ramm <kramm@google.com>, 2016-01-14 16:21:15 -0800, , make pytype aware typeshed builtins gone  created moe http github.com google moe 112201714,,
4163,14eb67493c2efc72eae89b798b1591ae0e3a4484,atthias Kramm <kramm@google.com>, 2016-01-15 11:01:22 -0800, , improve defaultdict definition add __class__,,
4164,ae9e8f3521d7207d54a18f45cecc455b2921e46a,atthias Kramm <kramm@google.com>, 2016-01-14 14:15:57 -0800, , fix bug typeshed loader,,
4165,159c447a6bf4bb060bc1ec67267a9efd1eb2cac6,atthias Kramm <kramm@google.com>, 2016-01-14 13:29:35 -0800, , make pytype aware typeshed lost builtins,,
4166,ac60ac57547fd08f1566d00379ec78e018d764a4,ramm <kramm@google.com>, 2016-01-13 15:30:01 -0800, , add support module.__file__  created moe http github.com google moe 112097036,,
4167,5a14676e7d563b956af144ba38bf6a6b4485fccd,ramm <kramm@google.com>, 2016-01-13 15:29:19 -0800, , get rid  created moe http github.com google moe 112096954,,
4168,f85ecdb28de088aa967f86b7f9a73d1f39bc9ab2,ramm <kramm@google.com>, 2016-01-13 13:54:10 -0800, , make setup.py also install file typeshed  created moe http github.com google moe 112086889,,
4169,91f170125715d5a6a51de37c50a4bf0839c82913,ramm <kramm@google.com>, 2016-01-13 13:52:12 -0800, , fix typeshed precedence also see http github.com jukkal mypy pull 1116  created moe http github.com google moe 112086686,,
4170,19beec68ac5eb10386a0a18e6b66b3453418d512,atthias Kramm <kramm@google.com>, 2016-01-13 08:45:49 -0800, , make setup.py install typeshed,,
4171,571c526bc10788606b37e23e2079fc2465263b80,atthias Kramm <kramm@google.com>, 2016-01-13 07:39:55 -0800, , add typeshed submodule,,
4172,371d4e0fbb97492fca0ab2b11b20e41d0de23e0b,ramm <kramm@google.com>, 2016-01-07 14:40:25 -0800, , fix false warning caused args kwargs  created moe http github.com google moe 111639998,,
4173,60352154d6a4e790c30d92fd4dffebcb5dd4bb2f,ramm <kramm@google.com>, 2016-01-07 13:12:19 -0800, , add class generator wrapsdict utils.py  created moe http github.com google moe 111631337,,
4174,f58abc1a0d8cb6d858b5dc86a8abc5a00af34132,ludemann <pludemann@google.com>, 2016-01-05 17:45:23 -0800, , separated option handling main.py passed around option parameter shorten parameter list following option yet incorporated run_builtins solve_unknowns cache_unknowns maximum_depth simplified test bit  created moe http github.com google moe 111468213,,
4175,444c0309bf2c81258e0be7773ac51b1fa2bf6786,ramm <kramm@google.com>, 2015-12-30 15:13:59 -0800, , add test case import parenthesis  created moe http github.com google moe 111154227,,
4176,efc50175c1eae3db3fc1f3ebf34b2ca1715fba75,ramm <kramm@google.com>, 2015-12-30 15:06:39 -0800, , allow override typeshed location using environment variable  created moe http github.com google moe 111153842,,
4177,df2b0792e1a18ab5f4c51ece5f4ac1c0299c9c4f,ramm <kramm@google.com>, 2015-12-30 15:06:14 -0800, , add pyi support typed args kwargs needed json.pyi  created moe http github.com google moe 111153821,,
4178,f06b687d8cf10a770187af89667ea99ebdef8e19,ramm <kramm@google.com>, 2015-12-30 15:05:47 -0800, , fix bug converting typing.py type native type  created moe http github.com google moe 111153793,,
4179,c0556846adecef758e6b652a6edfb1ca6e0a602b,ramm <kramm@google.com>, 2015-12-29 15:57:10 -0800, , fix solving inheriting unknown inheriting unknown class make sure function call follow rule solver  created moe http github.com google moe 111096008,,
4180,2f20c68f5b105ef3572664af1f27ad6342936672,ramm <kramm@google.com>, 2015-12-29 15:30:46 -0800, , treat args kwargs ...  created moe http github.com google moe 111094798,,
4181,6062949074b3f4957bac868cac600094a73f97da,ramm <kramm@google.com>, 2015-12-29 15:28:36 -0800, , make sure solver see pyi  created moe http github.com google moe 111094700,,
4182,13de7bca99d49beff723b529fa2f0bb152f230e2,ramm <kramm@google.com>, 2015-12-29 12:13:58 -0800, , better display eof error  created moe http github.com google moe 111084307,,
4183,5c11fca1d5d2c458b914f8ae558d3c64cc9e2e20,ramm <kramm@google.com>, 2015-12-29 12:11:22 -0800, , fix handling optional parameter pyi  created moe http github.com google moe 111084170,,
4184,20a3406ca2d40788606ce2c77c92b1e56cfb6ea3,ramm <kramm@google.com>, 2015-12-28 17:46:42 -0800, , delete pytd file working typeshed version  created moe http github.com google moe 111042122,,
4185,84851846dc4ab32be1745f005d1660c2a50fcff8,ramm <kramm@google.com>, 2015-12-28 17:45:11 -0800, , sys.exit pyi parser  created moe http github.com google moe 111042060,,
4186,ae74b135d61430597a016e04fc7fd5b5db1a89f5,ramm <kramm@google.com>, 2015-12-22 16:54:12 -0800, , make builtins complete enough parse abc.py  created moe http github.com google moe 110806985,,
4187,0587c6f6e2344835abc43905da5396eb89cc162a,ramm <kramm@google.com>, 2015-12-22 16:52:45 -0800, , add typing.pytd  created moe http github.com google moe 110806919,,
4188,30c4ffa6bdae110df5838670635210086c1698c3,ramm <kramm@google.com>, 2015-12-22 11:37:21 -0800, , fix parsing handling typing module  created moe http github.com google moe 110786453,,
4189,6598594734a7082162999e9f7262d55885a88619,ramm <kramm@google.com>, 2015-12-21 12:12:13 -0800, , generate attribute error underlying object valid affect quick  created moe http github.com google moe 110707649,,
4190,1c1b3cd5fbcbd87a4dd64e00076bb98c0ede23bf,ramm <kramm@google.com>, 2015-12-21 12:11:06 -0800, , fall back typeshed builtins stdlib move file stdlib builtins  created moe http github.com google moe 110707558,,
4191,3ad78cab34569e93856093242b95efd1add95c83,ramm <kramm@google.com>, 2015-12-21 10:44:28 -0800, , minor refactoring load_pytd move builtin logic separate method  created moe http github.com google moe 110700383,,
4192,77f89ff08a0979dd37b44da2210a9b9bf5042230,ramm <kramm@google.com>, 2015-12-21 10:41:29 -0800, , tweak load_pytd test add skipped test  created moe http github.com google moe 110700107,,
4193,a5c914aa97fb6ced909637f7c1dd0cbd0ebc8782,ramm <kramm@google.com>, 2015-12-21 10:40:42 -0800, , builtins fix itertools well __builtin__  created moe http github.com google moe 110700035,,
4194,4671bf0bd13041e2a03ea3d0612628327da0e693,ramm <kramm@google.com>, 2015-12-21 08:03:37 -0800, , deduplicate error message  created moe http github.com google moe 110689247,,
4195,c897a848bb5f6d615ffb607e06befc8a45f04cb3,baum <dbaum@google.com>, 2015-12-15 09:18:24 -0800, , fix arg popping make_function make_closure python  created moe http github.com google moe 110264325,,
4196,37a07f2570191a3818216d1727b2c375897d4d44,ludemann <pludemann@google.com>, 2015-12-14 14:51:04 -0800, , change list set possible clean todos removed bug fix  created moe http github.com google moe 110194788,,
4197,3f1eef8db39f4a834720fa1ca5b5549c154d1c95,baum <dbaum@google.com>, 2015-12-10 14:42:28 -0800, , refactor opcodest_test make easier write test case apply python  created moe http github.com google moe 109937229,,
4198,92dd3c2446720c80a93dcd0a6e046ba1c33f19b8,baum <dbaum@google.com>, 2015-12-09 13:35:29 -0800, , fix extended_arg bug bytecode parsing  created moe http github.com google moe 109826629,,
4199,1fbfbed5e172414401b7bfe561e119242869d839,ludemann <pludemann@google.com>, 2015-12-08 16:00:46 -0800, , support __future__ import python 2.7 backported type annotation add preliminary support pytype handling python source  created moe http github.com google moe 109738336,,
4200,ff9a7f8d9447a84c4d01ddfbcb14363e95a265c8,ramm <kramm@google.com>, 2015-12-08 07:16:45 -0800, , add code loading .pyi file typeshed repository  created moe http github.com google moe 109684958,,
4201,957ddbb6f59eae7436ded5c7111db5cf5c791303,ludemann <pludemann@google.com>, 2015-12-07 17:05:54 -0800, , moe must flush left column  created moe http github.com google moe 109637936,,
4202,222413f666d936d04db453e36fb986a3798a1267,ramm <kramm@google.com>, 2015-12-07 13:20:07 -0800, , fix function name handling python  created moe http github.com google moe 109614039,,
4203,018e69c35b37028622acd04109ebb1a998be085f,ramm <kramm@google.com>, 2015-12-07 13:14:45 -0800, , fix pyc path python 3.3  created moe http github.com google moe 109613377,,
4204,5d638617b98bcabced7944fbe867c034d7e6f938,ramm <kramm@google.com>, 2015-12-07 13:12:38 -0800, , fix  created moe http github.com google moe 109613169,,
4205,037b04e8fc4f19170ad26497b86f5f3d355287fe,ramm <kramm@google.com>, 2015-12-04 16:08:15 -0800, , add ply  created moe http github.com google moe 109457583,,
4206,3f7c5840e90f8e9dc65c8bb5d9a2d5a366a25db1,ramm <kramm@google.com>, 2015-12-04 14:58:00 -0800, , show type error unsupported operation  created moe http github.com google moe 109451455,,
4207,b87b4b6e84b71202c17ff74097f80e760bc16508,ludemann <pludemann@google.com>, 2015-12-01 17:16:44 -0800, , initial version code find output pytype used smart merge tool changed item defaultdict list defaultdict set  created moe http github.com google moe 109142673,,
4208,eb82887901d8852bfeec8c3c9763cffebf4a9e4d,ramm <kramm@google.com>, 2015-11-10 13:39:39 -0800, , use pep 484 name list dict etc container type also add pep 484 definition builtins.py  created moe http github.com google moe 107519972,,
4209,2029153ae42cd3a60148307e35d9ad4179e4dc95,ramm <kramm@google.com>, 2015-11-10 12:46:36 -0800, , flesh import use fully qualified name generic  created moe http github.com google moe 107514493,,
4210,d2b86becb9a1517c0166a930156d35ae0bf5ab20,ramm <kramm@google.com>, 2015-11-10 08:56:07 -0800, , treat whitespace  created moe http github.com google moe 107490796,,
4211,b7a40154d62aae839a0c57f0b1ecf918f09abe6c,ramm <kramm@google.com>, 2015-11-09 14:50:39 -0800, , pyi allow ignore import statement top also add support docstrings  created moe http github.com google moe 107424832,,
4212,6a9125bd35ef192e5d36a87fd90ffe1367f99061,ramm <kramm@google.com>, 2015-11-05 12:54:38 -0800, , add parsing support individual optional parameter  created moe http github.com google moe 107166810,,
4213,1f1f06b60ab45295434705ae37266183936289fc,ramm <kramm@google.com>, 2015-11-05 08:54:38 -0800, , add support ... class function body also add support pep 484 type name  created moe http github.com google moe 107143448,,
4214,5a23f4b6dd3542ce12d83629d2d31c4bcc7cadd3,ramm <kramm@google.com>, 2015-11-04 14:31:11 -0800, , pyi parser use tuple unpacking longer rule  created moe http github.com google moe 107078541,,
4215,3c1a3b98a215b61a49e2c0481a70aded76fcf8a5,ramm <kramm@google.com>, 2015-11-04 11:44:23 -0800, , make hoc polymorphic function pep484 compatible  created moe http github.com google moe 107062722,,
4216,fbf1b64f857146b51bc0986c980f094a04d2d854,ramm <kramm@google.com>, 2015-11-04 07:12:10 -0800, , change class syntax class name class name generic also even pytd explicitly subclass object new style class additionally fix bug parser_test.py  created moe http github.com google moe 107037327,,
4217,4bc3fb4bc27f5b77671ac27797613c4c921b0905,ramm <kramm@google.com>, 2015-11-03 13:08:04 -0800, , use syntax ... type constant pep484ification pytd  created moe http github.com google moe 106971066,,
4218,6178d69dd66f4bbb275364df649bba3f772a471e,ramm <kramm@google.com>, 2015-11-02 15:57:51 -0800, , change pytd use instead move step closer pep484 .pyi idea gradual change like pytd pyi  created moe http github.com google moe 106889665,,
4219,d8e0a223cf274f0fab79f642a45a69c607b11740,ramm <kramm@google.com>, 2015-10-22 08:03:11 -0700, , silence spurious log message add pop set  created moe http github.com google moe 106057441,,
4220,76fa7ae00a45159e3f6678cb21a8d532632d2f3e,ramm <kramm@google.com>, 2015-10-19 14:54:59 -0700, , fine tune maximum_depth  created moe http github.com google moe 105798802,,
4221,df7d644b6757192e008246b881c8b85b1958d8c2,ramm <kramm@google.com>, 2015-10-19 11:01:07 -0700, , new option quick  created moe http github.com google moe 105773506,,
4222,1a7b99c83f08b305abc3aabd01b50b39c2a2c424,ramm <kramm@google.com>, 2015-10-19 07:48:35 -0700, , remove old glob functionality  created moe http github.com google moe 105754944,,
4223,010004374634db33a651402795d9748f454ab947,ludemann <pludemann@google.com>, 2015-09-28 17:03:32 -0700, , pytype_gen_cp copy rule need pytype dependency avoids circular dependency fix visibility handling fix proto_library py_wrap_cc py_extension depend native version rule handle builtin os.path  created moe http github.com google moe 104152923,,
4224,4b81a975ab248e413d52f1942dc3d66c047ce964,ramm <kramm@google.com>, 2015-09-25 18:36:27 -0700, , prevent automatic tuple unpacking generating bad parameter name  created moe http github.com google moe 103994714,,
4225,94a087a3ae26f0e1c33dc933dd6053bc89a8fb1a,ramm <kramm@google.com>, 2015-09-25 18:34:03 -0700, , fix counter lookup bug careful retrieving name externaltype also fix canonical ordering presence externaltype test  created moe http github.com google moe 103994640,,
4226,212865869534608fea88d187a84cc3d1c23bfa24,ramm <kramm@google.com>, 2015-09-24 16:20:37 -0700, , fix assert node bug report recover invalid lookup  created moe http github.com google moe 103893926,,
4227,18f8a37fb884c9d5aa34aca7309458bdd3fb255e,ramm <kramm@google.com>, 2015-09-24 14:12:21 -0700, , defacing generic remove type parameter  created moe http github.com google moe 103881019,,
4228,505896df8114cc7fbb3914221964650d26d86d71,ramm <kramm@google.com>, 2015-09-24 11:58:21 -0700, , limit type base type generic prevent generation invalid pytd like  created moe http github.com google moe 103867028,,
4229,d8f5309da0ddda67f693a68dfe1ee1df0fa76936,ludemann <pludemann@google.com>, 2015-09-22 16:22:11 -0700, , remove use .resources break circular dependency requires pytype.par  created moe http github.com google moe 103693490,,
4230,cf203974dd27eb1dcba4727a049a0a8b2c6fc240,ramm <kramm@google.com>, 2015-09-22 15:58:52 -0700, , make pytype exit code found error remove irascible used scan guess using internal log message order figure whether pytype found problem pytype errorlog contains explicit list user facing error use remove old irascible hack  created moe http github.com google moe 103691121,,
4231,8d3f27db833f278aa671583ee1d083e0239c8eb7,ludemann <pludemann@google.com>, 2015-09-21 18:36:33 -0700, , split test remove unused imports_info processing reactivate test case  created moe http github.com google moe 103604530,,
4232,83802c65cfcefeded175188502b2dda106d38080,ludemann <pludemann@google.com>, 2015-09-21 18:28:51 -0700, , implement py_ binary library test pytype.bzl partially implement py_wrap_cc proto_library turn irascible flag done properly handle transitive import add imports_info imports_map throughout removed auto creation __init__ whe running outside add delete change option pytype speed pytype processing multi file input largest file add design implementation doc g3doc rough draft add test case various generated exported file duplicate file add unit test utility pytype.bzl  created moe http github.com google moe 103603989,,
4233,3d1852a19a675d833bb64d55c2613cfe405483fd,ramm <kramm@google.com>, 2015-09-11 19:42:16 -0700, , make inherit dict int dict  created moe http github.com google moe 102897954,,
4234,083f7ee3e1c8d8e398bbb49ac83021545b63b62b,ramm <kramm@google.com>, 2015-09-11 19:41:08 -0700, , treat class inherits match everything  created moe http github.com google moe 102897907,,
4235,d412c423a33a964c96bac7f7092a10aa5ed83d21,ramm <kramm@google.com>, 2015-09-11 19:39:19 -0700, , fix matching generator type  created moe http github.com google moe 102897862,,
4236,53811ccfdadc62ee2cbde9195abba2e16bd8be3f,ramm <kramm@google.com>, 2015-07-23 20:09:44 -0700, , report nameerror unsupported operand error  created moe http github.com google moe 102623306,,
4237,b4e2fb707f92b74f5745f66a8cdeaef0a99c413d,ramm <kramm@google.com>, 2015-09-04 13:05:10 -0700, , make next iter default work add new special builtin __undefined__  created moe http code.google.com moe java 102367499,,
4238,53622c4318163fcfa1b4ddc4c4a879558f125d50,ramm <kramm@google.com>, 2015-09-04 13:03:28 -0700, , fix labelling class error message  created moe http code.google.com moe java 102367341,,
4239,77a190a465398b8294fc4673a17da15f1759852b,ramm <kramm@google.com>, 2015-09-04 05:54:40 -0700, , fix simplify coroutines generator add test  created moe http code.google.com moe java 102334705,,
4240,b464a31a0d8c726723f4d69be96073208d4aa61c,ramm <kramm@google.com>, 2015-09-02 15:20:30 -0700, , fix extract superclass bug  created moe http code.google.com moe java 102186990,,
4241,1592926fe11db0ec697f4f7dd06a158aabe441fe,ramm <kramm@google.com>, 2015-09-02 05:55:01 -0700, , make check aware class add test  created moe http code.google.com moe java 102135684,,
4242,a5dedf95ac30564d795dfa80f0b7320a780d54ca,ramm <kramm@google.com>, 2015-09-01 12:55:42 -0700, , checking foo.py foo.pytd allow foo.pytd external dependency  created moe http code.google.com moe java 102070298,,
4243,5d6f890c347a73c3cd1480c874bbf65b1f4fdb32,ramm <kramm@google.com>, 2015-09-01 12:53:26 -0700, , fix bug deriving module name input filename  created moe http code.google.com moe java 102070123,,
4244,212ed3fc86cb4ce430bbab3272ee697732436e09,ramm <kramm@google.com>, 2015-08-31 16:49:36 -0700, , add support package import name  created moe http code.google.com moe java 101990582,,
4245,a8a39397ef5688ffd38cb42f87f89fc5120c599e,ramm <kramm@google.com>, 2015-08-31 14:36:42 -0700, , add __iadd__ method unicode  created moe http code.google.com moe java 101975820,,
4246,e79a0e17791c4976174a913b3161fbc2a341375c,ramm <kramm@google.com>, 2015-08-31 14:34:17 -0700, , report impossible call solver  created moe http code.google.com moe java 101975540,,
4247,9aaad4759f8b098153a1499611de0d53ca609368,ramm <kramm@google.com>, 2015-08-31 10:49:10 -0700, , add two test one skipped  created moe http code.google.com moe java 101949869,,
4248,6d8982d386675394821954252d9168ed96fb9a31,ramm <kramm@google.com>, 2015-08-31 10:47:21 -0700, , fix behavior mro merging inheriting unsolvable instance  created moe http code.google.com moe java 101949605,,
4249,c22c342be16c636ad17f2496ada78934ea57f2d7,ramm <kramm@google.com>, 2015-08-28 18:31:08 -0700, , fix bug optional arg matching  created moe http code.google.com moe java 101826765,,
4250,aecf563657407dd7ed5d696ecf83bf7e767726ee,ramm <kramm@google.com>, 2015-08-27 15:35:15 -0700, , consider subclass matching method  created moe http code.google.com moe java 101725983,,
4251,e9f032b5c9bec9f60291386b012dd7280edf2d65,ramm <kramm@google.com>, 2015-08-27 15:32:40 -0700, , fix bug  created moe http code.google.com moe java 101725664,,
4252,139ef399da305f44d5a32bf73bcabb9ffa341a27,ramm <kramm@google.com>, 2015-08-27 15:29:34 -0700, , move unit test next file testing  created moe http code.google.com moe java 101725450,,
4253,ecb5ec9a854ca11b38dd7d2b9a5b72ebfb1df7e1,ramm <kramm@google.com>, 2015-08-27 15:27:52 -0700, , fix bug triggered stdlib datetime.pytd  created moe http code.google.com moe java 101725313,,
4254,38017db9ee95143b0f3ea0ffbffba6defeb615da,ramm <kramm@google.com>, 2015-08-27 10:00:37 -0700, , report error recover invalid base class  created moe http code.google.com moe java 101689188,,
4255,68a50b8f8533b30bfccdca38d5d9ceed35e7a871,ramm <kramm@google.com>, 2015-08-26 15:26:24 -0700, , allow error type inference unit test assertnoerror add assertnocrash smoke test treat missing reverse operator error tweak fix pytd builtins  created moe http code.google.com moe java 101624306,,
4256,524d9f2af6a215cb8a677ca2c38125b4728c7bff,ludemann <pludemann@google.com>, 2015-08-25 16:56:44 -0700, , add gen_file rule creating file testing create c3.py using gen_file used yet rename readme readme.md remove unnecessary return value main.py write comment output file debugging remove unneeded file minor refactoring change debug info logging  created moe http code.google.com moe java 101525921,,
4257,edaeae1150319db1f4db6b3a5006b362b808e222,ramm <kramm@google.com>, 2015-08-25 06:08:25 -0700, , fix return type reversed .__iter__ .__next__  created moe http code.google.com moe java 101458280,,
4258,d0b97512511563c1b083e22a9ccf7ff06d9ad91a,ramm <kramm@google.com>, 2015-08-25 06:06:32 -0700, , implement super mro lookup  created moe http code.google.com moe java 101458176,,
4259,f66ad7d401cfba67d3b8f90a4fbfe1087cb48d1e,ramm <kramm@google.com>, 2015-08-25 06:06:07 -0700, , error occurs write output file  created moe http code.google.com moe java 101458151,,
4260,5aedd68985c3be0f0ed0e2bb9f72c773cfa0403b,ramm <kramm@google.com>, 2015-08-25 06:05:41 -0700, , simplify inheritance valuewithslots  created moe http code.google.com moe java 101458124,,
4261,319ccb3ecec606d69cb6f2b0f9d21e215024331d,ramm <kramm@google.com>, 2015-08-20 18:16:02 -0700, , implement better handling import_name level python 3.1  created moe http code.google.com moe java 101182200,,
4262,91ce19dff139aa663f26a032bc305428edaad99b,ramm <kramm@google.com>, 2015-08-20 18:14:27 -0700, , order error line number fix dict.copy  created moe http code.google.com moe java 101182112,,
4263,77ce09d5952564c102c712091cb5327b24dd5246,ramm <kramm@google.com>, 2015-08-20 14:02:40 -0700, , fix bug xyz import add test  created moe http code.google.com moe java 101157367,,
4264,5eadbf77e1cee160985775d9d12117b76968ab43,ramm <kramm@google.com>, 2015-08-19 15:33:12 -0700, , remove dead code fix potential attributeerror  created moe http code.google.com moe java 101068139,,
4265,0797f62e60680bb06336ee53be89f67c6733005d,ramm <kramm@google.com>, 2015-07-30 15:31:28 -0700, , report pretty print index error  created moe http code.google.com moe java 101067926,,
4266,e1710393913b8c856f11ed23aba324e4ea2e1398,ramm <kramm@google.com>, 2015-08-19 15:30:58 -0700, , pretty print bad call builtins  created moe http code.google.com moe java 101067863,,
4267,faf31cd0b9f45222dc166255ca484a74dd573329,ramm <kramm@google.com>, 2015-08-19 15:30:26 -0700, , make possible call to_type middle analysis  created moe http code.google.com moe java 101067793,,
4268,ada825c15290c9e36541a8da487633796c362687,ramm <kramm@google.com>, 2015-08-18 15:50:20 -0700, , fix two bug import code  created moe http code.google.com moe java 100970663,,
4269,8aa6252e4e38a4681f2940a7523e3330228bf15f,ramm <kramm@google.com>, 2015-08-18 15:48:32 -0700, , fix nameerror main.py  created moe http code.google.com moe java 100970505,,
4270,4dad466825c21da4f1cd2da86752f8e6acee740e,ramm <kramm@google.com>, 2015-08-18 14:04:17 -0700, , pretty print import error  created moe http code.google.com moe java 100959626,,
4271,4baa8d40f9fa29711751dc9e5e7b0ad88b3899c7,ramm <kramm@google.com>, 2015-08-18 14:02:20 -0700, , fix co_lnotab parsing short program  created moe http code.google.com moe java 100959381,,
4272,04a55a22cab51b55a075eff2d6aa7597bc1efc21,ramm <kramm@google.com>, 2015-08-18 14:01:45 -0700, , add scaffolding storing displaying error conveniently  created moe http code.google.com moe java 100959306,,
4273,fbbb59697f0996c27d85d1d099261331ba0ce50a,ramm <kramm@google.com>, 2015-08-18 14:01:02 -0700, , add __random__ builtin make branching test readable  created moe http code.google.com moe java 100959222,,
4274,dd8db9f9654c0f2fa0090b56db392adaf6c2ef3a,ramm <kramm@google.com>, 2015-08-17 12:54:28 -0700, , remove stringio test slowest test exercise code already covered test  created moe http code.google.com moe java 100852430,,
4275,c8157d072a4decee44a6e234ab20be38634fafc2,ludemann <pludemann@google.com>, 2015-08-17 09:31:53 -0700, , add pytype debugging integration note change seems made test_stringio increase second even timeout cause obvious  created moe http code.google.com moe java 100831058,,
4276,c1a6ade42455ea4847d1a430cdcfcf95ca4efc42,ludemann <pludemann@google.com>, 2015-08-17 08:40:05 -0700, , add _ctypes dotted name implicit import pytd  created moe http code.google.com moe java 100827054,,
4277,6fdd593c27c355f23f2a5ea82699bb73534ac160,ramm <kramm@google.com>, 2015-08-14 15:35:52 -0700, , get rid has_attribute  created moe http code.google.com moe java 100713814,,
4278,7fd02a7fd5eeb90b168a486669b7caebaa1d6c0b,ramm <kramm@google.com>, 2015-08-14 15:34:02 -0700, , move descriptor logic also fix bug causing pytype try import module.__get__  created moe http code.google.com moe java 100713681,,
4279,406fedf0fb5b6a088a21312db41ba4c1458d2186,ramm <kramm@google.com>, 2015-08-14 10:02:24 -0700, , make check check return type global function add __iadd__ select builtins  created moe http code.google.com moe java 100682154,,
4280,f9a5e5fc0a423016d80cb0e9f688a90913c2a687,ludemann <pludemann@google.com>, 2015-08-13 16:13:37 -0700, , add smoke test builtin .pytd file new version pytype.par tweak builtins  created moe http code.google.com moe java 100626239,,
4281,9eac51d135e9ae023431d9ec0cc29a4dfe533c8a,ramm <kramm@google.com>, 2015-08-13 16:11:31 -0700, , new pytype option check  created moe http code.google.com moe java 100625987,,
4282,2c3983f7b73ece4ae58d6d079a0bd89bb51c355f,ludemann <pludemann@google.com>, 2015-08-13 14:22:51 -0700, , add builtin .pytd file make protobuf test work change pytype.bzl take account 100590519 new version pytype.par  created moe http code.google.com moe java 100614094,,
4283,6c0f10df36d93e9b527675c9d904ef7894749528,ramm <kramm@google.com>, 2015-08-13 10:44:35 -0700, , remove src_out replace infile outfile  created moe http code.google.com moe java 100590519,,
4284,49db192cd3b06495ad8c07e2bf180443f0e159e4,ramm <kramm@google.com>, 2015-08-13 09:49:49 -0700, , fix functools.py set attribute function  created moe http code.google.com moe java 100584002,,
4285,915da5bd1d1d5a141df62fbb7d9aebbb9cda7e89,ramm <kramm@google.com>, 2015-08-12 13:36:51 -0700, , slightly improve namedtuple behavior  created moe http code.google.com moe java 100508173,,
4286,54a5e5ab941eda7ea6db8b6e7e98de194a666c49,ramm <kramm@google.com>, 2015-08-12 13:35:15 -0700, , fix inheriting namedtuple  created moe http code.google.com moe java 100508009,,
4287,67c42384cb52652c2e38cbafa0212498c8de1f1c,ramm <kramm@google.com>, 2015-08-12 13:34:49 -0700, , fix import class attribute  created moe http code.google.com moe java 100507963,,
4288,0ef93d9e62adbcf2232a60f68eef16b2e3e317a5,echen <rechen@google.com>, 2015-08-12 12:15:29 -0700, , handle matching instance nothing  created moe http code.google.com moe java 100500788,,
4289,384442be63a05d55d55211014fe813ad1426f3de,echen <rechen@google.com>, 2015-08-12 10:55:33 -0700, , skip repeat function call detect repeat call checking whether argument environment changed know origin return value skipped function cause loss precision change output following flag flagvalues.pytd def self filename ... list str def self filename ... list str addition netting performance gain change fix memory related crash expvar.py logging __init__.py  created moe http code.google.com moe java 100492060,,
4290,7c7580de79b394cb921c8b87054f7250d686a0ec,ramm <kramm@google.com>, 2015-08-12 07:05:20 -0700, , careful name collision top level identifier  created moe http code.google.com moe java 100472846,,
4291,4b9d566a1bef2b26cf5a613b9c06e6a5cf19e3a5,ramm <kramm@google.com>, 2015-08-12 07:00:27 -0700, , fix matching implemented boundmethod bug  created moe http code.google.com moe java 100472509,,
4292,47b8fec71b7f5c0d9488cfd81a0facb19ce1794f,ramm <kramm@google.com>, 2015-08-12 06:57:04 -0700, , distinguish unknown created fix bug distinct __call__ attribute map unknown  created moe http code.google.com moe java 100472333,,
4293,d3abd897e5229ed5fcc89d641905f84e1336a6d2,ludemann <pludemann@google.com>, 2015-08-10 18:40:19 -0700, , add temporary flag aid testing integration  created moe http code.google.com moe java 100339049,,
4294,27734d9be30ec90f8c17d3622c3de411b4c53252,echen <rechen@google.com>, 2015-08-04 17:50:19 -0700, , sort signature ordering final output  created moe http code.google.com moe java 99879167,,
4295,9d10fcdc31947351a5a00602d6a396a329b8d562,echen <rechen@google.com>, 2015-08-04 12:33:57 -0700, , include type parameter get_type_key  created moe http code.google.com moe java 99847887,,
4296,dd2f989f281176dc495c59ba088d23ae51d3dbf4,ludemann <pludemann@google.com>, 2015-07-31 17:24:21 -0700, , fix complaint super subclass exception  created moe http code.google.com moe java 99621152,,
4297,39005567f4fa26296eec847799180ea7d9327557,ludemann <pludemann@google.com>, 2015-07-31 17:22:28 -0700, , add rule prefix prioritizing library choosing amongst multiple .pytd gen file  created moe http code.google.com moe java 99621028,,
4298,0969ceb5a231f2b17cf0147038002f620af97240,ludemann <pludemann@google.com>, 2015-07-31 16:30:33 -0700, , add inplace name place visitor make mutability clear  created moe http code.google.com moe java 99616951,,
4299,3bff45f71860298b0afa542c3129f8d4c126c7f7,ramm <kramm@google.com>, 2015-07-31 15:29:11 -0700, , make pytd definition super compatible actual code  created moe http code.google.com moe java 99611889,,
4300,58ccb2897d7c0f39ce1bae649a0cfc5d41857956,ramm <kramm@google.com>, 2015-07-31 14:05:56 -0700, , make solver work matching imported type  created moe http code.google.com moe java 99604277,,
4301,cad9bf6d77ae737d1290bd4072eebd44d19a9330,ramm <kramm@google.com>, 2015-07-31 14:03:09 -0700, , make externaltype subclass classtype  created moe http code.google.com moe java 99603991,,
4302,c6be742f1979de0ed3dd9d5f1b54a9cb5fefafd2,echen <rechen@google.com>, 2015-07-31 13:28:46 -0700, , ignore repeated type parameter value  created moe http code.google.com moe java 99600894,,
4303,4586dc4bb477665b73e800df60e6dbaa81184535,echen <rechen@google.com>, 2015-07-31 06:41:19 -0700, , minor cleanup  created moe http code.google.com moe java 99568030,,
4304,2bc673094e204fde938e1a319fd1d5f6e6a35119,ramm <kramm@google.com>, 2015-07-30 14:25:15 -0700, , fix pytd object.__init__  created moe http code.google.com moe java 99513600,,
4305,d1f40e092c6b411090034c3f7ad465292dfa26f7,ramm <kramm@google.com>, 2015-07-30 14:23:51 -0700, , record call pytd constructor method solver  created moe http code.google.com moe java 99513469,,
4306,8b024ed094a4ffb3b2382e7afcb005c5f4ddf5b0,ramm <kramm@google.com>, 2015-07-30 14:18:48 -0700, , logging tweak log full parameter information function call  created moe http code.google.com moe java 99512895,,
4307,a2efd199b9245e8260204545f0e23a008e9af98e,ludemann <pludemann@google.com>, 2015-07-30 10:34:36 -0700, , remove pytype option force complicated unnecessary  created moe http code.google.com moe java 99489680,,
4308,26da983c01d8f507e14d6e4c493d7349775c11d1,ludemann <pludemann@google.com>, 2015-07-29 21:32:00 -0700, , allow pattern importing generated .pytd file pytype.bzl add rule name inside ... .pytd gen file make unique change pytype pytd_import_ext reflect pattern match add pytype handling pytd gen file appear multiple rule  created moe http code.google.com moe java 99444503,,
4309,076e7c29028824db9c530215d36001da0ec27548,echen <rechen@google.com>, 2015-07-29 08:46:54 -0700, , improve handling primitive class instance careful throwing away concrete value put cached instance virtualmachine _convert_cache  created moe http code.google.com moe java 99378558,,
4310,64a6fffc2efc29ec31fe9a96e6cfc7cccdb2f42b,ramm <kramm@google.com>, 2015-07-27 12:50:40 -0700, , fix using imported method class attribute  created moe http code.google.com moe java 99207785,,
4311,b3c56bac7525f87197f69fcce9dc3a7639ac52e8,ramm <kramm@google.com>, 2015-07-27 12:01:53 -0700, , fix file explicit import __builtin__  created moe http code.google.com moe java 99202965,,
4312,fa9097e3269da371507d83897788151a26f1256e,ramm <kramm@google.com>, 2015-07-27 11:55:21 -0700, , fix solving isinstance call  created moe http code.google.com moe java 99202280,,
4313,5f1446951a170e8d7d43fd293fe30f72f1bc8c87,ramm <kramm@google.com>, 2015-07-27 11:53:15 -0700, , improve matching pytd signature delay mutable parameter call consider type parameter option separately memoize instance generic class fix bug surfaced change deal empty variable earlier call chain fix mro matching fix incorrect builtins fix call __get__ load_attr  created moe http code.google.com moe java 99202084,,
4314,84cfb5c24b1d5c8cd3055ca4b557a8bf1ed644fe,echen <rechen@google.com>, 2015-07-27 10:36:58 -0700, , replace data abstract data type parameter  created moe http code.google.com moe java 99193236,,
4315,8873711deee81da2f0cd06e4a20e998a60c46b17,echen <rechen@google.com>, 2015-07-21 10:39:11 -0700, , speed compressing cfg  created moe http code.google.com moe java 98948100,,
4316,18bf5a42627c1f39a59efe003b955a3d039054da,ramm <kramm@google.com>, 2015-07-23 07:08:41 -0700, , make behave better presence empty variable  created moe http code.google.com moe java 98931356,,
4317,b563b9ff87883855e1422431e606d999e4f05856,ramm <kramm@google.com>, 2015-07-23 07:06:11 -0700, , fix bug os.open importing  created moe http code.google.com moe java 98931136,,
4318,d4b2502d4f5cb86c6b93b22dede81a6413d908e9,ramm <kramm@google.com>, 2015-07-23 07:05:43 -0700, , fine grained handling function parameter calling pytd  created moe http code.google.com moe java 98931080,,
4319,5c98f72c1c256ad0d350010a18cd6915f036d1f0,ludemann <pludemann@google.com>, 2015-07-22 02:19:10 -0700, , pytype handle multiple input output file src_out option  created moe http code.google.com moe java 98816026,,
4320,d18341831e9502455a2ed4a53b0a77f161ba4cb8,echen <rechen@google.com>, 2015-07-21 16:07:49 -0700, , store new goal separate set  created moe http code.google.com moe java 98783850,,
4321,09a46c875a5b296ec1785a6da0b455095c430524,echen <rechen@google.com>, 2015-07-21 14:56:46 -0700, , add use remove duplicate signature  created moe http code.google.com moe java 98776565,,
4322,ef70bb21172d98cda0c7ea9a7339a3ab4fe9c70c,ramm <kramm@google.com>, 2015-07-21 14:43:24 -0700, , new function  created moe http code.google.com moe java 98775113,,
4323,6d54d63a572cfcbd2b9e8b1306e1068bd2412311,ludemann <pludemann@google.com>, 2015-07-21 12:36:10 -0700, , add missing constant posix.pytd os.pytd improved comment genrate pytype.par  created moe http code.google.com moe java 98761089,,
4324,c244ab95b33e43064a3316b310a789785f03693c,ramm <kramm@google.com>, 2015-07-20 12:05:37 -0700, , unskip test work  created moe http code.google.com moe java 98661620,,
4325,e0e6bcb31e55c3050ec965e96d3c99ccf1375049,ramm <kramm@google.com>, 2015-07-20 11:35:51 -0700, , fix solving type module  created moe http code.google.com moe java 98658424,,
4326,0d62c7acec6b3ca35abfc09a281c7023d0129a4c,echen <rechen@google.com>, 2015-07-20 11:24:39 -0700, , improve performance  created moe http code.google.com moe java 98657164,,
4327,002ced52a014d4cf5af7469ad169c732895d62b2,echen <rechen@google.com>, 2015-07-20 11:19:47 -0700, , call hascombination combination would give new signature  created moe http code.google.com moe java 98656587,,
4328,50005550241e178d13e266f7b6eb5177960b2dba,ramm <kramm@google.com>, 2015-07-20 11:00:07 -0700, , implement relative import implement linking pytd file  created moe http code.google.com moe java 98654483,,
4329,931d0e61203f849551ddb7a796f66d6a3cac150f,ramm <kramm@google.com>, 2015-07-20 10:24:02 -0700, , rename import_paths.py load_pytd.py make look pretty  created moe http code.google.com moe java 98650614,,
4330,f4a7d52037ac4251293f2a4c82b626fb7a322d34,ramm <kramm@google.com>, 2015-07-17 14:01:12 -0700, , add visitor externaltype support allow utils.tempdir create subdirs  created moe http code.google.com moe java 98520955,,
4331,ed6614378cc2653d86b458e3a6414c358219d2ab,ludemann <pludemann@google.com>, 2015-07-17 12:44:42 -0700, , use precompiled pytype.par change pytype gen default false larger scale testing add test multiple file bit change needed pytype.bzl however  created moe http code.google.com moe java 98514386,,
4332,93c3b92c7505198417f56ffb238c5956f5cb88f5,ramm <kramm@google.com>, 2015-07-17 08:12:42 -0700, , fix bug irascible handling  created moe http code.google.com moe java 98492228,,
4333,d4394f7e7cc7365fa5717f2e5bdb19ba6b4e9b5a,ludemann <pludemann@google.com>, 2015-07-17 07:40:02 -0700, , move .py test file pytd subdir delete obsolete pytype.pytd need better test future  created moe http code.google.com moe java 98490287,,
4334,5c0f916521d894ca94ce4b0a8b5e3bcff1aae4c3,ludemann <pludemann@google.com>, 2015-07-17 07:38:26 -0700, , add import unit test make import test comprehensive using add extra_verbose test option helped debugging move single test_import easiest way test path look inferencer doe currently import work inferencer doe wrong thing  created moe http code.google.com moe java 98490192,,
4335,d56f7f6bb19a99999691c03cacba2a22260f3c13,ramm <kramm@google.com>, 2015-07-17 07:13:12 -0700, , default disable irascible  created moe http code.google.com moe java 98488989,,
4336,1b054b5dda4ad40678a16c3d686c3de3ca87a15d,ramm <kramm@google.com>, 2015-07-17 07:10:42 -0700, , add memoizing decorator  created moe http code.google.com moe java 98488883,,
4337,58dd1dd0da124983b9a956e1855a702523469250,echen <rechen@google.com>, 2015-07-16 08:31:29 -0700, , break early pivot  created moe http code.google.com moe java 98403741,,
4338,a1a5c98b76b1710da818532b988cddab54721cd8,echen <rechen@google.com>, 2015-07-16 07:45:37 -0700, , use compute  created moe http code.google.com moe java 98400718,,
4339,5210ccefadbb06f600c32ee5a114c58933ebdce0,ramm <kramm@google.com>, 2015-07-15 16:39:57 -0700, , moe update add rebecca author list  created moe http code.google.com moe java 98356862,,
4340,9477986f7424f308d7322eaf67f29c3bbe91f4c3,ramm <kramm@google.com>, 2015-07-15 16:39:57 -0700, , moe update add rebecca author list  created moe http code.google.com moe java 98356862,,
4341,c17e52e2707d972734d323b34e84195cc63c9f3e,ramm <kramm@google.com>, 2015-07-15 13:52:54 -0700, , improve moe stripping add missing file extension  created moe http code.google.com moe java 98340058,,
4342,248b1403ead0042db9b5c3dc3cae25fdd8a63375,echen <rechen@google.com>, 2015-07-16 11:03:08 -0700, , update variable doc method name delete unused  created moe http code.google.com moe java 98324323,,
4343,2428aea23d25970c1f767b98f580716af32e11e5,ludemann <pludemann@google.com>, 2015-07-15 09:23:50 -0700, , add pytype attribute py_ binary library test rule  created moe http code.google.com moe java 98315015,,
4344,d78a86141823f0baf87530c98c5fe57095b4d208,ludemann <pludemann@google.com>, 2015-07-15 09:15:56 -0700, , refactoring force  created moe http code.google.com moe java 98314409,,
4345,88477b2725429f411c42831075da786b4c8abb19,echen <rechen@google.com>, 2015-07-15 09:06:42 -0700, , quickly eliminate impossible combination  created moe http code.google.com moe java 98313693,,
4346,b97cd0ce58979acb33fc023c5591d37d8ea41b55,ludemann <pludemann@google.com>, 2015-07-15 01:57:44 -0700, , handle import  created moe http code.google.com moe java 98291277,,
4347,4f72636e8add88b9b9f1444a59ced08067891f68,ludemann <pludemann@google.com>, 2015-07-15 01:28:52 -0700, , add pythonpath everywhere refactor importing builtins import necessarily work yet fixed next  created moe http code.google.com moe java 98289944,,
4348,ec37c1a2ab40f9540ebf4f87946948c1cd7fc95d,ramm <kramm@google.com>, 2015-07-14 15:15:50 -0700, , get rid  created moe http code.google.com moe java 98255399,,
4349,590606242a6df0f46ad7fa14a13023d3174abb64,ramm <kramm@google.com>, 2015-07-14 15:12:03 -0700, , always use object flag unknown parameter type test  created moe http code.google.com moe java 98254966,,
4350,286bcfa6735cffed2eae60a1feca9345f84bd113,ramm <kramm@google.com>, 2015-07-14 13:21:48 -0700, , solve unknown even main  created moe http code.google.com moe java 98243970,,
4351,c9687a72f7ef0e203ca5bcabfb6cdb948ba80e24,ramm <kramm@google.com>, 2015-07-14 13:20:54 -0700, , add test case possibly accessing empty dictionary  created moe http code.google.com moe java 98243893,,
4352,e351db8f0e0276697761516e8bdfa1ae1290eea8,ramm <kramm@google.com>, 2015-07-14 12:40:10 -0700, , make sure formal type appear right side matching  created moe http code.google.com moe java 98240334,,
4353,b2fa619637a352e23d868ed49198b7a518710d0e,echen <rechen@google.com>, 2015-07-14 10:30:37 -0700, , replace ordereddict dict list  created moe http code.google.com moe java 98227145,,
4354,b10adf7c6c993d8a9a474298629afcc67c169b3c,ramm <kramm@google.com>, 2015-07-14 10:03:14 -0700, , simplification refactorings abstract.py mark formal parameter remove dependency pytdsignature move unknown utility method class  created moe http code.google.com moe java 98224120,,
4355,68fce9ed079635666641ccf705e32d019d228f35,echen <rechen@google.com>, 2015-07-14 08:48:47 -0700, , use keep track reachable node every node keep around subset reachable node use information speed variable.values  created moe http code.google.com moe java 98217854,,
4356,8abcb277931f723b54fc6e6171f35f179bac32a8,echen <rechen@google.com>, 2015-07-13 18:55:42 -0700, , remove unused support list dicts _visitnode  created moe http code.google.com moe java 98177711,,
4357,2b72feed9c8b58938a8742cdad035cf5c3d800f1,ramm <kramm@google.com>, 2015-07-13 16:16:22 -0700, , make __class__ attribute instance explicit  created moe http code.google.com moe java 98164719,,
4358,ced4670ee2fd9b130c647418b3c07519a670002a,echen <rechen@google.com>, 2015-07-10 17:52:45 -0700, , fix typeerror argument type nonetype iterable failure  created moe http code.google.com moe java 98014753,,
4359,b4e4614560f12d9aea15bfcfe12c6536cf69e5d3,ramm <kramm@google.com>, 2015-07-10 15:07:55 -0700, , cleanup remove unused function vm.py utils.py  created moe http code.google.com moe java 98002515,,
4360,c2a6556e231be8d75dc3dc4d3afced4f0c110f23,ramm <kramm@google.com>, 2015-07-10 14:38:10 -0700, , remove unused code checker log_traceback  created moe http code.google.com moe java 97999552,,
4361,1fe5640b3de70f9238c849bc3d3d1663fbcfcf78,echen <rechen@google.com>, 2015-07-10 12:41:33 -0700, , get rid little faster check  created moe http code.google.com moe java 97988289,,
4362,84aea539f49ea8e36b32e5db4f1193dd753ca49f,ramm <kramm@google.com>, 2015-07-10 12:14:54 -0700, , fix bug module name resolution  created moe http code.google.com moe java 97986079,,
4363,8ba032d54587bfd1bf6c2105f63ee30306cc1a20,ramm <kramm@google.com>, 2015-07-10 08:27:36 -0700, , try access __get__ module  created moe http code.google.com moe java 97966208,,
4364,440cabe04b634e3aaae6882c5fc18778f739d634,ramm <kramm@google.com>, 2015-07-10 08:16:11 -0700, , add new command line flag  created moe http code.google.com moe java 97965547,,
4365,2ba5d1eea9f136012f82b98e116155833dbad4df,ludemann <pludemann@google.com>, 2015-07-09 06:55:48 -0700, , add smoke test running pytype pytype.par pytype.bzl test add smoke test a_main.py working analyzed pytype  created moe http code.google.com moe java 97869555,,
4366,4251dca45b4da505e42ae420b2a7f393b7721676,ludemann <pludemann@google.com>, 2015-07-08 23:59:45 -0700, , change pytype macro rule adding pytype action py_ binary library test doe fix pytype right thing import future  created moe http code.google.com moe java 97848260,,
4367,486fe128016121458ac5ac6319344a580afa7647,ramm <kramm@google.com>, 2015-07-08 19:59:48 -0700, , explicitly distinguish builtins stdlib new directory stdlib assume stdlib end pythonpath  created moe http code.google.com moe java 97838655,,
4368,56afd5cb79cd8bd808d5dba7a83efcfc2f8ba7e7,ramm <kramm@google.com>, 2015-07-08 14:25:11 -0700, , better handling import_name import_from  created moe http code.google.com moe java 97813522,,
4369,edbc7b49519e2c0edf7cd74cdc054c0f15af03fd,echen <rechen@google.com>, 2015-07-08 13:38:24 -0700, , fix test_stringio  created moe http code.google.com moe java 97808080,,
4370,8d9d6c90d6123022277b819a5537a2b16f0c63df,echen <rechen@google.com>, 2015-07-08 13:10:47 -0700, , use self.infer test_pytree  created moe http code.google.com moe java 97805147,,
4371,cba61a5dd8fa70687154f6ff9ae1076ce0c80f0b,echen <rechen@google.com>, 2015-07-08 08:40:00 -0700, , add skipped unit test falling back __add__ reporting type unknown done currently consider type __iadd__ method fall back __add__ __radd__ see http docs.python.org reference datamodel.html object.__iadd__  created moe http code.google.com moe java 97777348,,
4372,3a633bbe5798073fec14230bee0cccdef5633e43,echen <rechen@google.com>, 2015-07-08 08:36:10 -0700, , create one cfg.solver per program  created moe http code.google.com moe java 97777099,,
4373,075f26bda95f610351daa9cc8a6178a9222ff02e,echen <rechen@google.com>, 2015-07-07 17:48:08 -0700, , fix definition dictionary get builtins  created moe http code.google.com moe java 97729819,,
4374,4f3dd0d6e5f5b7873c96b73a9761816fef4990b2,ramm <kramm@google.com>, 2015-07-06 11:32:28 -0700, , trim svg graph somewhat new flag output cfg  created moe http code.google.com moe java 97596556,,
4375,86e409d7b427afc8e437799df896436596028fac,ramm <kramm@google.com>, 2015-07-06 11:23:59 -0700, , better support import module  created moe http code.google.com moe java 97595690,,
4376,7d8603d07735779f671b63c497536f28ab35e468,echen <rechen@google.com>, 2015-07-01 16:22:04 -0700, , override __init__ rather __new__ better style make difference performance wise error prone since using visitor forgot call super __init__ would crash pytype drawing attention oversight pretty quickly  created moe http code.google.com moe java 97373993,,
4377,001be7c8bc336086e54d2919673016414ddf0c11,ramm <kramm@google.com>, 2015-07-01 13:52:56 -0700, , fix pytd definition divmod  created moe http code.google.com moe java 97360988,,
4378,d4409a7f2dabdd1d19263e013e116e31e6edef58,echen <rechen@google.com>, 2015-07-01 11:01:03 -0700, , exit variable.values early value encountered  created moe http code.google.com moe java 97342649,,
4379,706311d20dd6b110f83adc48bf52ffd6673c6fd0,ludemann <pludemann@google.com>, 2015-07-01 06:07:32 -0700, , fix name run_pytype_on_ script  created moe http code.google.com moe java 97320404,,
4380,bbec3edcb7db54bb4c6193cb45f604918fb1f562,ramm <kramm@google.com>, 2015-06-30 10:17:23 -0700, , new builtins flag aggressive filtering get_attribute  created moe http code.google.com moe java 97238461,,
4381,a2cdb9b41d6c732cc19c05b355c8af12ccba3e80,ludemann <pludemann@google.com>, 2015-06-30 06:43:50 -0700, , make pytype.pytd import utils always pytd_utils consistency  created moe http code.google.com moe java 97222628,,
4382,d12647ab50bbe0b6708d8c956530df0ed4f0e797,ludemann <pludemann@google.com>, 2015-06-29 23:44:45 -0700, , add directory handling  created moe http code.google.com moe java 97200462,,
4383,4fbb01cf3eeaad73ca1565c7af112cbfd3fc0814,echen <rechen@google.com>, 2015-06-29 08:59:12 -0700, , add ctime time time.pytd  created moe http code.google.com moe java 97134023,,
4384,3108fbe7d09bd951d76b17e6785c1535d426ed8c,ramm <kramm@google.com>, 2015-06-29 06:17:33 -0700, , added unit test import across file  created moe http code.google.com moe java 97124069,,
4385,e6c4b383ca4807d6c4fccc83784bb7b50fc4d644,ramm <kramm@google.com>, 2015-06-26 16:01:23 -0700, , better error message function mismatch solver  created moe http code.google.com moe java 97011819,,
4386,4b833b4e7638897fa14aad39363b260e8af1f1a1,ramm <kramm@google.com>, 2015-06-26 15:59:25 -0700, , let nothing type slip function arg  created moe http code.google.com moe java 97011675,,
4387,d05d15fe3e15bac091e9463ef16cd4c95d846ea5,ramm <kramm@google.com>, 2015-06-26 14:24:24 -0700, , better api inference function args  created moe http code.google.com moe java 97003171,,
4388,a98e17d86a19da3f5e942139d43cbb77ec1fbe6b,ramm <kramm@google.com>, 2015-06-26 14:22:19 -0700, , better support api inference kwargs  created moe http code.google.com moe java 97002988,,
4389,73b896fc17561a0c7bb1b7adf20504cf74533c96,echen <rechen@google.com>, 2015-06-25 13:41:29 -0700, , eliminate need _visitnode use getattr add visitor base class inspect visitor method name build dictionary node class name corresponding enter visit leave method cache dictionary need built visitor class  created moe http code.google.com moe java 96905923,,
4390,37eea8bd226351ca783762aa9ea773681c099d21,echen <rechen@google.com>, 2015-06-25 08:40:29 -0700, , potpourri trivial change fit anything else  created moe http code.google.com moe java 96875830,,
4391,5f1a86c675fb4445b885194f5edf2e36f72fe7ad,ramm <kramm@google.com>, 2015-06-24 15:07:02 -0700, , make parser properly read externaltypes back  created moe http code.google.com moe java 96816135,,
4392,3cd1dcdfe5f5e02a195a7f5cef0532dbab129891,ramm <kramm@google.com>, 2015-06-24 10:45:57 -0700, , fix naming imported type  created moe http code.google.com moe java 96789490,,
4393,b1ddea8f7b077c87561686688ad39bb101c1e20e,ramm <kramm@google.com>, 2015-06-23 15:59:31 -0700, , unskip test fix bug skipped one  created moe http code.google.com moe java 96719586,,
4394,37bbbfd012155d801045ab12597023cff1bd646c,ramm <kramm@google.com>, 2015-06-23 15:12:01 -0700, , remove unittest.skip test case work  created moe http code.google.com moe java 96714972,,
4395,c75014f4129e71c5d4dd314664d766e9ee294a06,echen <rechen@google.com>, 2015-06-23 14:53:18 -0700, , cache return value  created moe http code.google.com moe java 96712931,,
4396,bcecc6a4cb6fbd232bb06706bb9f3fc294ecac7c,echen <rechen@google.com>, 2015-06-23 07:33:26 -0700, , cache return value  created moe http code.google.com moe java 96670000,,
4397,a59605e667a49f608e1154f4af3cde9eb2a733e3,ramm <kramm@google.com>, 2015-06-22 14:56:43 -0700, , add skipped test case matching args  created moe http code.google.com moe java 96610930,,
4398,f681bad106ff75e7c8a0d8009d7bbb9c858fe33f,ramm <kramm@google.com>, 2015-06-22 14:43:38 -0700, , use precision recording function call  created moe http code.google.com moe java 96609295,,
4399,44c7a5cb3c210c036a0fb671d85f66a1c330e24c,echen <rechen@google.com>, 2015-06-22 11:20:32 -0700, , make faster replace algorithm based floyd warshall one start root follows outgoing edge update predecessor needed brings execution time flag flag flags_test.py   created moe http code.google.com moe java 96587382,,
4400,c9b38819c882e2331c77f9b936cd615c09b91b06,echen <rechen@google.com>, 2015-06-19 19:43:01 -0700, , prefilter class function pas unknown pytd builtins separately typesolver partition class function former unknown partial complete subset generating equation solving also let pas pytd namedtypes changed classtypes back convert_pytd ensures namedtypes show solution  created moe http code.google.com moe java 96459808,,
4401,2cfe2aaeadc08f0e89e2716e500d2af3ad6ee244,echen <rechen@google.com>, 2015-06-19 19:39:31 -0700, , fix nonetype object attribute current_opcode error  created moe http code.google.com moe java 96459725,,
4402,89d4fb2b921fc400d90130176d31c575dc626d01,ramm <kramm@google.com>, 2015-06-19 17:08:15 -0700, , make cache_unknowns behaviour robust enable default remove command line parameter add opposite  created moe http code.google.com moe java 96453082,,
4403,c9773c5fca525258304581c28adbe00c036e9f90,ramm <kramm@google.com>, 2015-06-19 17:05:50 -0700, , expose cache_unknowns parameter new command line option  created moe http code.google.com moe java 96452930,,
4404,fefcb00bd31dc1c89734bfd83a4b6c6a8d4b3587,ramm <kramm@google.com>, 2015-06-19 17:05:17 -0700, , aggressive memoization value greatly reduces memory requirement thing like redblack.py  created moe http code.google.com moe java 96452896,,
4405,ca283d2c551a4a40b05d4f7ecb9d6966d616e0ce,ramm <kramm@google.com>, 2015-06-19 08:47:39 -0700, , fix bytecode line number parsing  created moe http code.google.com moe java 96407093,,
4406,c304fb1fbcd2bb02b9c46f8b6c8bc1f9ecce9c71,ramm <kramm@google.com>, 2015-06-19 08:32:48 -0700, , allow variable garbage collected  created moe http code.google.com moe java 96406122,,
4407,d8ac67b7bc0d8dc9c0d72e88bcef45f2ebdd46a8,ramm <kramm@google.com>, 2015-06-18 18:22:34 -0700, , conservative creating instance primitive type also minor refactorings constant instantiation code distinguish booleans true false undetermined respectively  created moe http code.google.com moe java 96369001,,
4408,abd34864b1c688a57e00402bc6d5d6bb022b3775,echen <rechen@google.com>, 2015-06-18 17:35:22 -0700, , make output program_to_dot helpful add command line flag builtins run program run_builtins false reduces size cfg use variable actually visible cfg node  created moe http code.google.com moe java 96365809,,
4409,5065d1572729afc335063944a63ce3abd5be6421,echen <rechen@google.com>, 2015-06-18 13:35:26 -0700, , remove  created moe http code.google.com moe java 96340904,,
4410,a0d2287db1d767f42b6a34f39d414f9e0f4a7c12,ramm <kramm@google.com>, 2015-06-18 12:01:46 -0700, , create new cfg node every store every jump  created moe http code.google.com moe java 96332651,,
4411,12106974f3039a2fecd6043770cb665d77131d53,echen <rechen@google.com>, 2015-06-18 07:36:43 -0700, , register value booleq.solver longer necessary  created moe http code.google.com moe java 96306427,,
4412,9f53580cf2b4fbbf3a78d247e4c8806f470f8ac4,ramm <kramm@google.com>, 2015-06-17 15:22:17 -0700, , filter preemptively rather filtering impossible value end analysis filtering ssa level also bytecode interpretation attribute access come  created moe http code.google.com moe java 96249193,,
4413,df5d8da4179718c3843d974d4ecddad543965ee5,ramm <kramm@google.com>, 2015-06-17 15:17:02 -0700, , explicitly pas cfg node state around error prone storing shared class especially modified also fix bug shaken loose  created moe http code.google.com moe java 96248632,,
4414,87a98733a76e9b17f051bb8465464b99136ab486,ramm <kramm@google.com>, 2015-06-16 11:48:20 -0700, , use possible  created moe http code.google.com moe java 96128564,,
4415,c4b0552f3b54c5a9ea1c364291d2bb1053aac215,echen <rechen@google.com>, 2015-06-16 11:31:32 -0700, , reorganize _visitnode performance  created moe http code.google.com moe java 96126917,,
4416,46741de7944fbdc72940dd78518e22d8533cd35a,echen <rechen@google.com>, 2015-06-16 07:34:59 -0700, , _visitnode use loop visit child check change  created moe http code.google.com moe java 96106512,,
4417,6b5c11fffee93bff888bb0144c2cff3949283e67,echen <rechen@google.com>, 2015-06-15 16:33:27 -0700, , make booleanterm creation frequent expensive _eq _and _or move expensive check __new__ factory method within booleq skip check know safe solve run save updated implication avoid recomputing special case situation implication true also fix use __slots__  created moe http code.google.com moe java 96057145,,
4418,15296016343fbb978a406ce2fb5c1b725fb22855,ramm <kramm@google.com>, 2015-06-15 12:47:08 -0700, , simplify  created moe http code.google.com moe java 96034061,,
4419,3a128321881850d91c8f29a41105791bb33556fa,ramm <kramm@google.com>, 2015-06-15 08:29:28 -0700, , fix bug handling nothing type  created moe http code.google.com moe java 96009428,,
4420,652a21f528df88637449b68877ba399ce554a635,ramm <kramm@google.com>, 2015-06-11 15:00:48 -0700, , building classtype make sure class  created moe http code.google.com moe java 95780395,,
4421,f402419777bfa72de44886e2b72092865177ed21,ramm <kramm@google.com>, 2015-01-07 15:00:26 -0800, , fix matching nothing object exception  created moe http code.google.com moe java 95780357,,
4422,d4644396ac9343149115b38ada5d00f3201b3e97,ramm <kramm@google.com>, 2015-06-11 15:00:01 -0700, , better error message class initialization add stub os.path  created moe http code.google.com moe java 95780313,,
4423,8a7eb9bddc3ceca1313071fbabd755ebcdfa1ec3,ramm <kramm@google.com>, 2015-06-11 14:59:34 -0700, , fix inheriting builtins  created moe http code.google.com moe java 95780263,,
4424,407555aa9b878df355a3f0ab414031d2431dc1a5,ramm <kramm@google.com>, 2015-06-11 11:21:49 -0700, , fix inheritance anythingtype  created moe http code.google.com moe java 95758268,,
4425,1f37c3d7e01ef1e965d960fc9a6dab59f698dd53,ramm <kramm@google.com>, 2015-06-11 07:49:20 -0700, , fix constant object attribute method problem  created moe http code.google.com moe java 95737862,,
4426,48a4845d09f38cbca295096a4712fdb9f12aea16,ramm <kramm@google.com>, 2015-06-10 14:33:36 -0700, , make visitor work nested container  created moe http code.google.com moe java 95675230,,
4427,86b13e5b6480f86cc40ca36b019a8d16dcb14a69,echen <rechen@google.com>, 2015-06-10 14:32:31 -0700, , consider interesting combination booleq.solver booleq.solver consider variable value combination appear directly indirectly implication allows solver check much smaller space possible assignment  created moe http code.google.com moe java 95675115,,
4428,10a725e6ae5bd2e0ff8e999a214b484f011aae15,ramm <kramm@google.com>, 2015-06-10 11:11:37 -0700, , fix definition map builtin  created moe http code.google.com moe java 95653669,,
4429,b37166d9bf64286a7239b885c9f47940b0f1a079,ramm <kramm@google.com>, 2015-06-10 11:07:40 -0700, , tweak logging better description solve section log name type log unoptimized pytd usually prohibitively large  created moe http code.google.com moe java 95653253,,
4430,64c384a7db219cf9ae5f52f88b3da29826a7d9ac,ramm <kramm@google.com>, 2015-06-10 11:07:09 -0700, , possible type debug logging solver  created moe http code.google.com moe java 95653183,,
4431,4ee20acdf49dc1b8ffe71f89828447baca3a1432,echen <rechen@google.com>, 2015-06-09 12:28:46 -0700, , register variable matching generic type  created moe http code.google.com moe java 95561709,,
4432,d6d3b8f1f7744a1e8602e276f5f95cf7541aa38c,ramm <kramm@google.com>, 2015-06-09 11:21:44 -0700, , rename pytd gendirs pythonpath  created moe http code.google.com moe java 95554843,,
4433,fc851e6b3bfb2350c21640535b4b3e8e87d562fb,ramm <kramm@google.com>, 2015-06-09 11:10:18 -0700, , leave temporary .pyc file lying around  created moe http code.google.com moe java 95553711,,
4434,74d4f517d5479640a116aeccb8d563303e40dd4b,ramm <kramm@google.com>, 2015-06-09 11:06:35 -0700, , fix definition builtin setattr  created moe http code.google.com moe java 95553285,,
4435,5b40b23ec8db9f66ad78f133360081d11e11de9b,ramm <kramm@google.com>, 2015-07-22 06:56:26 -0700, , encode ambiguous type constant  created moe http code.google.com moe java 95532176,,
4436,44638b53d35233472f4aa46c894cc4c402d512fd,ramm <kramm@google.com>, 2015-06-08 13:03:52 -0700, , fix pylint warning visitors.py  created moe http code.google.com moe java 95465190,,
4437,f00a2faa68bc21a4bb2d2086ffcda254cf7a4e36,ramm <kramm@google.com>, 2015-06-08 13:03:26 -0700, , fix inference gettid.py  created moe http code.google.com moe java 95465140,,
4438,22a08b2ef41803e737618c8d0db7d162b044912f,ramm <kramm@google.com>, 2015-06-08 13:01:07 -0700, , rename function  created moe http code.google.com moe java 95464901,,
4439,cd34a390e2612ec258b3e0efc038972b95960dc9,ramm <kramm@google.com>, 2015-06-05 16:11:11 -0700, , fix handling builtin type sys.argv  created moe http code.google.com moe java 95332577,,
4440,094dd2fdcdd4eb7a1b581a76f63e43cd9e2aa696,ramm <kramm@google.com>, 2015-06-05 15:21:38 -0700, , fix inference datelib.py  created moe http code.google.com moe java 95328741,,
4441,cb081c49dcbdd744d3ed5f0023b2ca23fe0cf006,ramm <kramm@google.com>, 2015-06-05 11:29:54 -0700, , fix bug inferring  created moe http code.google.com moe java 95308634,,
4442,6c86eb2245599371ae9cc6fed1f4e4a456f88e14,echen <rechen@google.com>, 2015-06-04 16:47:51 -0700, , use nested dictionary implication booleq.solver store instead drastically reduces number instance created solver make easier get implication associated particular variable  created moe http code.google.com moe java 95249579,,
4443,8e34aebf188b4c73f14305204fb162360b1ea7d0,ramm <kramm@google.com>, 2015-06-04 14:35:37 -0700, , fix another bug inheriting unknown  created moe http code.google.com moe java 95237356,,
4444,1df4cc012162fa632b4d3bb3d434aaeca3d9dd3b,ramm <kramm@google.com>, 2015-06-04 14:32:24 -0700, , fix bug inheriting unknown class  created moe http code.google.com moe java 95236981,,
4445,0a90d9ad71ce4e085ee9cdada3d635f5159536f1,ramm <kramm@google.com>, 2015-06-04 14:32:00 -0700, , cleanup remove unused rarely used attribute method vm.py  created moe http code.google.com moe java 95236949,,
4446,bafe011681883e81fb031233206eb1d6f07c2683,ramm <kramm@google.com>, 2015-06-04 14:31:29 -0700, , fix naming scope problem occurs analyzing atomic_file.py  created moe http code.google.com moe java 95236881,,
4447,21af830f0c11aa4b10c5ca866566616a6520f9f5,ramm <kramm@google.com>, 2015-06-04 14:30:58 -0700, , new visitor removing unresolvable reference  created moe http code.google.com moe java 95236834,,
4448,d69a31822234d7f4860fdacd45df1ded2c29d7c0,ramm <kramm@google.com>, 2015-06-03 16:32:13 -0700, , favor super ... .__init__ see http fuhm.net super harmful  created moe http code.google.com moe java 95154219,,
4449,d08f203a9be0f7c9889be7b4d40fa7898454f17e,ramm <kramm@google.com>, 2015-05-27 12:12:05 -0700, , partly fix inference atomic_file.py  created moe http code.google.com moe java 94595971,,
4450,6fb1c6dc68cb5ac671111fc3bfeb8674355cd974,ramm <kramm@google.com>, 2015-05-26 12:58:42 -0700, , fix inference datelib.py  created moe http code.google.com moe java 94498931,,
4451,ffa57bc319e8fcdd8e09e08f1a69b3c085f3e276,ramm <kramm@google.com>, 2015-05-26 12:54:21 -0700, , fix bug type converter blow duplicate function  created moe http code.google.com moe java 94498539,,
4452,f13afa66013322ac10d9e36e76264dcfecca6e93,ramm <kramm@google.com>, 2015-05-26 12:53:48 -0700, , deliberate cfgnode handling make get_attribute call etc take return cfgnode prevents bug disconnected control flow graph  created moe http code.google.com moe java 94498475,,
4453,07dfbf5b2e728cb60ad36e468dc64a8c987a7601,ramm <kramm@google.com>, 2015-05-20 14:54:00 -0700, , remove unittest.skip test work  created moe http code.google.com moe java 94128211,,
4454,33caaa9f2969b005d373e544666f237b99461307,ludemann <pludemann@google.com>, 2015-05-15 18:56:56 -0700, , basic handling import existing .pytd gen file allows specifying directory reading .pytd gen file pass around actual read parse merge doe handle .pytd file input defines simple macro genrule run pytype generate .pytd gen file transitive dependency computation must done hand right fix pylint complaint fix asteq test indented incorrectly thank pylint finding final change 93644072 ended mistake  created moe http code.google.com moe java 93769104,,
4455,372d06c5b21100e6101c6e4313b7d45ebb192412,ludemann <pludemann@google.com>, 2015-05-14 12:00:15 -0700, , pytype return code error  created moe http code.google.com moe java 93644219,,
4456,0ba857a2e9dcbddf081de2fb2e8ac2e539baf2d4,ludemann <pludemann@google.com>, 2015-05-14 11:58:47 -0700, , fix definition pytd dotted name restrict inside ... name preparation fully qualified name import removed unused add ast equality test robust test likely give false positive due print giving representation different asts  created moe http code.google.com moe java 93644072,,
4457,dbf5d049e7963a857ed4fb95b6b33340aaa92b74,ramm <kramm@google.com>, 2015-05-01 17:56:06 -0700, , enable pytree test  created moe http code.google.com moe java 92600104,,
4458,c6584c61c93748e201ad0d539d4d4e54e395aa18,ramm <kramm@google.com>, 2015-05-01 16:29:06 -0700, , fix assertion pycfg.py  created moe http code.google.com moe java 92593392,,
4459,ebf52949a4ac2b27f671db9c5ece97c1bd1f6a31,ramm <kramm@google.com>, 2015-05-01 16:26:04 -0700, , fix improve slice test unskip test work  created moe http code.google.com moe java 92593164,,
4460,76e82ad6128510384fee845e3f87db75e7df75fb,ramm <kramm@google.com>, 2015-05-01 16:24:42 -0700, , rewrite output generator add test pytd.concat accepts two file  created moe http code.google.com moe java 92593064,,
4461,396ca05b1145d5eaab3bdaab22f705192e6c8168,ramm <kramm@google.com>, 2015-04-27 15:23:47 -0700, , add skipped test case tupleiterator problem  created moe http code.google.com moe java 92188915,,
4462,24da5cecc0775fba00fbc25c54eb452b787a89d4,ramm <kramm@google.com>, 2015-04-27 12:35:58 -0700, , add name parameter constructor  created moe http code.google.com moe java 92171471,,
4463,dc65f31a5e707d05116c22724b3f701372cf670e,ramm <kramm@google.com>, 2015-04-27 12:15:00 -0700, , move pytd loading abstract.py pytd utils.py also fix handling tuples co_consts  created moe http code.google.com moe java 92169586,,
4464,320de1916bf95492cda64da0b4fadfc025f70c03,ramm <kramm@google.com>, 2015-04-27 12:14:26 -0700, , make optimize api default option  created moe http code.google.com moe java 92169536,,
4465,c68bb18573015bf17eb30fba0e68212340ef45c6,ramm <kramm@google.com>, 2015-04-17 15:38:33 -0700, , limit none one instance add instance __class__  created moe http code.google.com moe java 91446869,,
4466,d946ca43e8d01b5ae20851e48367c444c78acfef,ramm <kramm@google.com>, 2015-04-17 12:14:53 -0700, , make pytype deterministic  created moe http code.google.com moe java 91429029,,
4467,13319f08f47f468bf8619542184b11ce04f1ee69,ramm <kramm@google.com>, 2015-04-15 15:50:43 -0700, , temporarily disable flaky test broke tap  created moe http code.google.com moe java 91242950,,
4468,bc6c03cff69b01a1089d6525eca45cf92a933a82,ramm <kramm@google.com>, 2015-04-15 14:14:41 -0700, , make opcode dispatch magical  created moe http code.google.com moe java 91231807,,
4469,4fd6cd160935f2086749e25861e33823601a7e5e,ludemann <pludemann@google.com>, 2015-04-15 14:09:33 -0700, , remove obsolete test rule related data fix pytree output match necessarily correct  created moe http code.google.com moe java 91231239,,
4470,d2ae57e2f1f014620049d0d3e6efea762d8ec6c0,ramm <kramm@google.com>, 2015-04-15 13:31:35 -0700, , add test case passing args kwargs  created moe http code.google.com moe java 91226974,,
4471,1150180c4f4d63be52fc32c1fe0e3271eb570249,ramm <kramm@google.com>, 2015-04-15 13:28:22 -0700, , make sure co_filename contains right filename also print co_name printing co_filename  created moe http code.google.com moe java 91226623,,
4472,22b744c40c58274952fccf9129a6526f48852c88,ramm <kramm@google.com>, 2015-04-15 13:27:20 -0700, , remove pycfg.py replace simpler opcode based state logic add slice support __getitem__ note skip test test broken merely expose breakage  created moe http code.google.com moe java 91226514,,
4473,0121076c310ea066279e3a55caf904f8508d0185,ramm <kramm@google.com>, 2015-04-15 13:26:24 -0700, , added process_code method blocks.py  created moe http code.google.com moe java 91226422,,
4474,933aaa81aed1ec0b1554761ec595bfe95926345b,ramm <kramm@google.com>, 2015-04-15 13:25:12 -0700, , improve block ordering try except try finally  created moe http code.google.com moe java 91226328,,
4475,4427f0088a8551c659fec3156886e52dcfc9056c,ramm <kramm@google.com>, 2015-03-30 09:00:43 -0700, , add ply dependency setup.py  created moe http code.google.com moe java 89869733,,
4476,a560af4e09fc7bc635df0fa38617ad7066b5d55d,ramm <kramm@google.com>, 2015-03-27 17:22:11 -0700, , output pytd instance attribute  created moe http code.google.com moe java 89743331,,
4477,e6bc9683de763bf1cb825f4869beaa6b642514e0,ramm <kramm@google.com>, 2015-03-26 18:30:17 -0700, , fix mro lookup class pytd  created moe http code.google.com moe java 89657431,,
4478,76ea4307d767ae389cd93425b2e2891e6e4993e9,ramm <kramm@google.com>, 2015-03-26 06:35:19 -0700, , simplify loading __builtin__.py  created moe http code.google.com moe java 89595891,,
4479,ef5885ddee857249478cf9c9e0e38851db864f44,ramm <kramm@google.com>, 2015-03-26 06:34:46 -0700, , sorting pytd also sort exception  created moe http code.google.com moe java 89595868,,
4480,07d27af9d8537cf8b93c5cda1cea81e66177aede,ramm <kramm@google.com>, 2015-03-24 16:11:05 -0700, , allow positional parameter type leak args kwargs  created moe http code.google.com moe java 89447924,,
4481,c9b4b06e819711515f74b6a544603d512f76a7a5,ludemann <pludemann@google.com>, 2015-03-24 10:00:27 -0700, , test workflow doc example example yet work skipped  created moe http code.google.com moe java 89409489,,
4482,14c44df17535e1397190452d7f55b420ddb8840b,ramm <kramm@google.com>, 2015-03-24 08:59:01 -0700, , fix return inside bug  created moe http code.google.com moe java 89403822,,
4483,88eae18f0e1cf3e393b7e0389d42778e2a96230f,ramm <kramm@google.com>, 2015-03-24 08:52:07 -0700, , implement pytd import  created moe http code.google.com moe java 89403364,,
4484,d908d34b60dec47ddab8c1cc0d5393cc671e1762,ramm <kramm@google.com>, 2015-03-24 08:51:38 -0700, , add test return inside  created moe http code.google.com moe java 89403335,,
4485,7633436f4d6fcf8a3be4d19e8f7cb194f8eee90a,ludemann <pludemann@google.com>, 2015-03-23 15:22:11 -0700, , fix stringio test use new api still work  created moe http code.google.com moe java 89342429,,
4486,b5985ce7dd008a2dd0c5c7b46c0b0368890b8c90,ramm <kramm@google.com>, 2015-03-23 13:42:06 -0700, , adjust pytype flag readme.md  created moe http code.google.com moe java 89332349,,
4487,1256e7e83109058790cc0695c22c9e33a1726d07,ramm <kramm@google.com>, 2015-03-23 13:36:15 -0700, , add blocks.py blocks_test.py  created moe http code.google.com moe java 89331750,,
4488,adc43678f40e5372bba1e4a51bf880a6442592ec,ramm <kramm@google.com>, 2015-03-23 13:34:02 -0700, , add test python raise raise  created moe http code.google.com moe java 89331537,,
4489,504428a6dd5d1f82877b4d1265ea236a228c83e0,ramm <kramm@google.com>, 2015-03-20 16:52:07 -0700, , clean build file remove unnecessary dependency merge library  created moe http code.google.com moe java 89168699,,
4490,859a119571558e13edac2d5e8081faf179cd849b,atthias Kramm <kramm@google.com>, 2015-03-20 16:48:49 -0700, , add pytd tool script fix export contributing.md  created moe http code.google.com moe java 89168380,,
4491,42cfd4250332779d9ab229b90068ad623a3e80c4,atthias Kramm <kramm@google.com>, 2015-03-19 16:40:59 -0700, , make setup.py install builtins  created moe http code.google.com moe java 89080676,,
4492,776bb506525c823247e579dbbf3e957b55f4ae15,atthias Kramm <kramm@google.com>, 2015-03-19 15:55:04 -0700, , add shell script exporting github add raoul user name  created moe http code.google.com moe java 89076392,,
4493,c632043c61242e029080df71d7c98c129abcef8b,atthias Kramm <kramm@google.com>, 2015-03-19 15:57:46 -0700, , make python setup.py install install pytype executable well created moe http code.google.com moe java 89076648,,
4494,ec3c541ea7b4dbbb020c249ac8085f0c7df5da9e,atthias Kramm <kramm@google.com>, 2015-03-19 15:55:04 -0700, , add script pytype,,
4495,2921d5cc20134207fea555771a38a223a90d88d3,atthias Kramm <kramm@google.com>, 2015-03-19 15:03:38 -0700, , add pytd subdirectory,,
4496,d69fb74a5abc5d4a6218c184d02d3d0c9af5dcce,atthias Kramm <kramm@google.com>, 2015-03-19 14:39:59 -0700, , add pytype source,,
4497,ba911e81f934a43bafbd987dc034b839b8b05bfe,atthias Kramm <kramm@google.com>, 2015-03-19 11:17:57 -0700, ,,,
