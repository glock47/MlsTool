id,sha,author,date,issue,message,file,content
0,d41b30dc93d296ab1d59363fec98ef2892a1c7fd,ascinatedBox <FascinatedBox@protonmail.com>, 2021-07-10 00:00:00 -0700, , version 2.0,,
1,9c8235405305a8ade82d13ca1b4ec7e725ac16df,ascinatedBox <FascinatedBox@protonmail.com>, 2021-07-08 18:06:01 -0700, , remove variable used,,
2,82951e854dd56f3338196a67ae1804cb4e3d8cc4,ascinatedBox <FascinatedBox@protonmail.com>, 2021-07-06 14:54:29 -0700, , remove contribution file information outdated,,
3,8358a8eb9bba162fdd89343b697d29e88c57d295,ascinatedBox <FascinatedBox@protonmail.com>, 2021-06-30 13:27:29 -0700, , remove community link,,
4,33b554363b867d8debe82a6397fb12a80dba0624,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 16:12:04 -0700, , update example use latest lily feature,,
5,6afb7f31b5ee4b97c9f2637ed2f42c6fdd35799d,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 15:57:59 -0700, , update script test driver use latest lily feature,,
6,c2d35084eb6db45c8ae2da1a099b8eb7e9204fab,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 15:50:00 -0700, , add long overdue foreach keyword fix 531,,
7,d744b311176bfa0842fe544960fb26d5cc8cdaa6,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 15:48:59 -0700, , silence warning incompatible type,,
8,c04fcfb1e913bde442f238bd0ab17a8927b1b6b8,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 15:33:32 -0700, , add missing comment,,
9,f6909399b6b8a179f7731476796c7c012b2c433e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 13:19:13 -0700, , remove unnecessary empty line,,
10,aa5f3847d3a07febdc079c6b1a29184a36b3ff31,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 13:17:25 -0700, , add fix 536,,
11,ef479e3dddaa19acf3666f3043546d59aabcda92,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-28 12:50:25 -0700, , build debug,,
12,e10736cbe3dc421d153e51391a237c03a7c729bc,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-27 20:56:18 -0700, , allow escape string.format fix 524,,
13,c58c5440ac3d773b5cf81283abfc203f9bc9ab51,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-26 19:55:47 -0700, , add list.accumulate fix 527,,
14,8cf83ae81b760d91e69c9979518330fc5f661431,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-19 12:57:37 -0700, , use correct mode whoop,,
15,964a0a4c30ff95be671707c6fcf907c31979978f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-19 12:54:41 -0700, , fix binding desync caused last commit,,
16,e36337a526685b715357b3dc37be8bee4dbce047,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 18:55:32 -0700, , list.insert return input allow chaining fix 534,,
17,a65b706bdb4ba4047c13511c2cfcdf4c948e3e2f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 18:46:45 -0700, , add fix 528,,
18,2b2ccbba3dfa314a6400dea9d177adc25c04bfbb,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 17:40:40 -0700, , push prelude file open function,,
19,aa87302a0fb80aca8100a0bbea665db100b14e7f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 16:29:03 -0700, , add keyed maximum string.split fix 525,,
20,cdaceee9652f67d4def05a7c20614aa510463736,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 16:13:24 -0700, , small adjustment error message,,
21,caa126f84956c875004f39688b827d02ffdda48d,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 15:52:05 -0700, , add internal iterator string.format fix 532,,
22,61025bfa63b11c68e22ff6782cd6c4d86464bc59,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 14:57:08 -0700, , allow binary octal hex number string.parse_i fix 523,,
23,3c760ff257c4f7b3adfcb7fed1835cbb4ac4be4a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 14:18:38 -0700, , block number base value fix 535,,
24,4df46ccadf2586e0fed95e800a5faa92fb2a4eed,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 12:02:00 -0700, , add binary hex octal conversion function fix 522,,
25,c7610479627e13a035fc5ff97d507bf4bae4a212,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-18 11:59:42 -0700, , remove stale reference interpolation,,
26,f6051f114f7b95f2479a0c3f8f82b81ec72a19e2,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 17:57:54 -0700, , add list.reverse fix 529,,
27,743c5091c360a38c467a4b9c4a3cedec7b8015a3,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 17:40:39 -0700, , fix sorting order static method,,
28,c29f11e84336883ec7e141a38f3df8765f991eaf,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 17:31:30 -0700, , fix content loading error sticking around fix 520,,
29,1179dac14111ab0696ded181c718065d3865bf60,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 16:44:04 -0700, , small consistency adjustment,,
30,4fe379bee1563dd0a21324c4ebd204838e30aa42,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 16:25:49 -0700, , add list.any list.all fix 526,,
31,72ad04d3ba5ddcdc0523942c7a860de27ce0cf70,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 15:36:31 -0700, , add keyword argument string.find fix 519,,
32,9d2ce8edccb34a74abfdd7436afe1b4c0fd7e526,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 14:34:14 -0700, , block list unifying varargs fix 516,,
33,8dcf8366fb641194381b9e78c9b1830c4c83605b,ascinatedBox <FascinatedBox@protonmail.com>, 2021-05-17 14:21:12 -0700, , list.delete_at correctly return unit fix 518,,
34,8dc7ebaefedda214555fb1323d22d37ecef31a10,ascinatedBox <FascinatedBox@protonmail.com>, 2021-04-30 15:52:27 -0700, , organize .gitignore,,
35,286d12f163502d74433de0053a3a8c0935c717f1,ascinatedBox <FascinatedBox@protonmail.com>, 2021-04-10 20:15:09 -0700, , version 1.16,,
36,10c0a7d8f98e52c89cf163ab2e20c1660e3ef22f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-04-09 15:07:55 -0700, , prelude script run cmake updating file,,
37,feb8adbc27b4c71e820cbf0355142bd205d33221,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-27 13:31:17 -0700, , better packing catch entry,,
38,cc52114922a67ea5ccd76aea526af75180393407,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-26 18:02:30 -0700, , shrink expr tree field bit padding,,
39,e045ce553824770705096c12761b743b7ea34a31,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-26 16:49:53 -0700, , shrink field bit put padding,,
40,bbd55c1d077d7153edad706d02b46f6428805c15,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-26 16:45:54 -0700, , tidy emitter patch writing function,,
41,30dd2638d0441069fc8a21fd59c6df2f87025b77,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-24 16:54:39 -0700, , omit size table generated script,,
42,6b48498eabe05cb5d296f684388487c9d87ea595,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-24 16:43:32 -0700, , fix slice interpreter table generated correctly,,
43,0cd47ffcc82a48d909920292ac25aad0884566ed,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-23 17:07:16 -0700, , docblocks must toplevel symbol,,
44,2185b192a27e3c1cf81b725dc642e3ada61b29a9,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-22 17:15:38 -0700, , remove link use sorry,,
45,17dd928d6826f76fa30abb2715c7fb0cab608c63,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-20 00:11:24 -0700, , organize emitter intro,,
46,3a646747a6382977f578f9f9006846e3ff3269d4,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 23:32:44 -0700, , remove protoypes function exist,,
47,6f84e502a20d3a366a516a6bbc21caf7608677fe,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 19:46:52 -0700, , register prelude predefined module,,
48,f811f65e4f664b6aa412bf976ddca3092c43519b,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 19:36:34 -0700, , register predefined module main module,,
49,5fcd13804bf43d6305d150cb8fbb2ab73a365e9d,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 18:18:17 -0700, , introspect module fully covered,,
50,54b38897dd4ef1f210c9834a35d81c65e7ea667f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 16:13:33 -0700, , add line number check introspect manifest testing,,
51,bffeb4586f4385fb3cf0910b683eed242e7fd348,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 15:27:04 -0700, , allow definition within anonymous block whoop,,
52,79fa708f2d5034f6a37116145e541b995d7443cd,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 15:04:34 -0700, , rebuild introspect testing using manifest testing model introspect testing verifies native code whereas manifest testing introspection verify manifest mode introspection testing weak since created interpreter extra info config flag syncing way two file testing make easier deploy new introspection test whenever introspection change,,
53,0be4601f375874d68f34890f7cde68be46287709,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-19 01:29:56 -0700, , allow docblocks constant,,
54,f64a8150c19263a4aced9e24286cf4af8e5b2c64,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 22:51:11 -0700, , reduce memory usage manifest testing one simple trick use tuple value comparison avoid unnecessary stringification,,
55,3ac5ea692aa5eb58bc989013f97f31a23869da6f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 21:58:58 -0700, , dynaloaded method use self return type,,
56,ec201eb47cccc14e0b512b1728784a626445bec8,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 21:30:24 -0700, , add introspect fix 514,,
57,d19788aac2fae4df8fe24114d587231eae7cabb7,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 14:06:53 -0700, , self return type string literal whoop,,
58,428ecd6ad0f0155ba0b82ecf8473e454af14d206,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 14:03:42 -0700, , create section self class fail test,,
59,5840cc0720b9972ba9a08b1be78cff5773b143be,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 01:21:11 -0700, , fix oops reporting missing keyarg fix 513,,
60,c8e0ee76fded6ef475247972176f6ca047a12fe2,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-18 00:14:03 -0700, , break required args come optargs,,
61,2651a27b3e3ab45a855129f9353838277b4c2743,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 19:21:37 -0700, , add fail testing manifest mode,,
62,c5ab2c3403fd29dc7a4b59add6db88de9652ba58,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 18:38:25 -0700, , simplify manifest import verification long native code manifest file fine blocking manifest file package import trouble worth bother,,
63,e95ce3917642bab2d9dbc6f4cc106b2a5f0e5f03,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 16:04:54 -0700, , remove unused variable,,
64,e086aa9095897f11b28a177cd68b524aa9388689,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 16:01:11 -0700, , yeah flag whoop,,
65,5fdb2ddc0bd5c0c3e93104cb9222f95e3dced370,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 15:55:13 -0700, , remove unreachable condition,,
66,3503e8071a8e04a64abc0e10b6c3a6d65adda700,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 15:37:52 -0700, , newline whoop,,
67,797b63c277e00193da46267b386685ffe65254fc,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 15:24:59 -0700, , remove goto handling import manifest_loop,,
68,da56eddb71216166d850a779c9d353067e3cc05a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 15:14:14 -0700, , functionize parser header check raise,,
69,97bc3136e3af5058dd79faece0ee9d30ff5c7be0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-16 15:09:15 -0700, , add test coverage parsing entry point,,
70,aa02e97e1840afdd0702c4186e62be745530b0ae,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-11 00:49:12 -0800, , add pas testing manifest file,,
71,7fd28de52371b361cef515327f9f40fa01bd7491,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-10 21:10:59 -0800, , enums write generic introspect data,,
72,9cf6a397d0c6f0047218cb378b00e77adb00590e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-09 18:22:16 -0800, , rewrite fenced code block source file long time ago thought good idea left alone tiny used part interpreter leaving import fenced section used show file filesystem code,,
73,01805689eee1ff5348e2c3ccd31d3c43e2eb93dc,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-08 18:59:45 -0800, , modest expansion test coverage uncommon area patch add extra coverage used part interpreter like string pile uncommon part type system machine coverage patch given complexity interpreter 100 coverage sign lack defect several function flagged unreachable line code due calling raise function 100 possible anyway raising coverage interpreter make easier identify code necessary help prevents accidental regression,,
74,a1df16f30624cf662cffa88868639509aff155ca,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-07 09:42:33 -0800, , template assertion include expected output,,
75,d7acebd5b05693de5357f54e538657a688d32d1a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-06 18:57:22 -0800, , testing backbone synced spawni prior patch backbone using outdated spawni adjustment applied upstream version spawni,,
76,af94c2069e58bdbf35e995ff6e9c156905ee20ab,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-05 23:51:59 -0800, , add extra data pointer interpreter config used anywhere prior patch data pointer also used target render caused problem trying attach custom data use custom rendering function,,
77,bc975ff3273df36eb830a5cd80890af876443a23,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-04 17:29:53 -0800, , add lily_has_exited api,,
78,a8e1d33aea24bbf80b040aa83f4071d308dbcbd5,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-03 19:26:45 -0800, , block using upvalue loop var work see use case blocking,,
79,828e95709a3218184534fb0c80d52ab3f9263828,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 18:21:00 -0800, , allow docblocks enum method manifest mode,,
80,a5374ed2a463895b4800c7c85c62e2d27bc4670f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 17:24:46 -0800, , correct invalid docblock usage error message,,
81,1fd94b2f315c36d1b83ac10b113731742a292147,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 17:16:43 -0800, , allow docblocks enums manifest mode,,
82,da2f3e2f73f78a9acb3e6c880fbea97026e9f8f5,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 17:13:24 -0800, , update intro comment parser data script,,
83,250b53ab27b01f116ee22bb92edf3ba5a955da1c,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 16:01:17 -0800, , unify docblock capture,,
84,a662c22b178896a9765511a9fadd193fbbe02457,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 14:49:37 -0800, , allow docblocks var property non manifest mode,,
85,387ba813c08b05d0aecf389411a738d8172cb391,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 13:53:26 -0800, , generate table keywords allowed docblocks,,
86,5585eea8aba197b450f0e4809d622e1a7caf5963,ascinatedBox <FascinatedBox@protonmail.com>, 2021-03-02 13:39:15 -0800, , remove unused variable,,
87,41591ed8a595ec5a1f20b0ff79f5f36f8feab0b0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-28 13:29:19 -0800, , test interpolating foreign made enums,,
88,b6c89193ef722654adf66d81cc97c08b4ae62bf9,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-27 12:33:45 -0800, , remove version dir used long time,,
89,7c404bcbab48b32334c1316ffd383f89a4352a5a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-26 12:29:29 -0800, , fix minor documentation error migrated predefined library manifest file used script rollover seems script format list element correctly went unnoticed,,
90,9b3e5532bb987f8d74998b4c9a73fd1f7feac2b8,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-24 18:14:08 -0800, , fix exit folding block,,
91,065aa28154fa9fd9947755762acf432c990fda8e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-24 13:50:08 -0800, , allow else block,,
92,df0653e5603d109947aae9c9ab4cffaac1ee6784,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-24 13:39:26 -0800, , simplify handling else match,,
93,7a741d90ec2b3af1b924fe6270355052ab0a38d0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-22 21:56:30 -0800, , fix minor manifest doc issue found rewriting docgen doc rendering,,
94,92cf8f7d67226120e84f8d45b8f59efc2d0a7c7e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-22 20:07:43 -0800, , allow raise within lambda fix 512,,
95,d56f92cdb704f77c2489628b3749519afcf1172e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-22 00:55:49 -0800, , fix crash using constructor var upvalue fix 510,,
96,18035f0cad64644bc5d31c194f8ab6079ef30f9b,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-21 18:03:35 -0800, , msgbuf print table checking escape character prior using isprint letting quote slash,,
97,cdc5271604d3c5c9fe799274fa4bd4054c93e536,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-21 16:30:14 -0800, , minor style tidying around parser keyword_for,,
98,bd0664169cbb9b15c487c428f8406dee9cc60efa,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-21 14:05:52 -0800, , fix potential crash string.split fix 509,,
99,f585035fe8018818b4481fbfe55c3d344974d9c2,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-20 17:23:45 -0800, , change order test test driver put simpler passing test complicated test coverage failing test end make test helpful event catastrophic failure,,
100,a7c96a2bc25cffa1c14225c5e66a777df97ee08d,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-20 17:19:14 -0800, , simplify test path stored test driver,,
101,c1647d851b75f6042dfa984d6e3401bb575d09d6,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-20 16:28:07 -0800, , test init file start test_,,
102,a19882fae4c2a83ad2f1176142d46a8f80254fc7,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-20 00:42:53 -0800, , add keyword fix 508,,
103,6556b64259a00a7141882799f379eaaab0672099,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 21:06:32 -0800, , better error message invalid match expression,,
104,98e1a3e5573ce33e491744c0a5bb57e5b751d306,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 20:42:25 -0800, , better error message invalid match expression,,
105,a7e237028873186193c8ab67dd1fcfdb16a1307d,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 20:19:53 -0800, , better error message value expected,,
106,e36e267fa2d28ef0673bfae1b0f0060019810d3a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 19:47:29 -0800, , allow multi case match empty variant fix 475,,
107,f70de319f7923a178d333da4436ca27180c16006,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 16:36:54 -0800, , lift match case writing divided parsing function,,
108,95fb7aeae6797ebb42bbf9e5cc376be1e09be8a9,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-19 16:03:29 -0800, , tidy parser large intro comment,,
109,cfe2a08340f84fdef509beedb855c2fe012b5648,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-18 23:19:56 -0800, , simplify duplicate match case checking,,
110,8c1fb05790838bf872fb2f5729026185a789a30e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-18 22:33:49 -0800, , add,,
111,78de067fcb2224c4f705793e3f3da5e5c774c02a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-18 21:06:35 -0800, , create internal,,
112,fb697f732882d335a4eb9c96077b2c8e58281fbc,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-18 17:17:12 -0800, , fix lambda inferring unit result case fix 507,,
113,658c096437a2aee2e7816747cb574426e9b46362,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-17 16:24:31 -0800, , block inheritance unresolved forward class fix 501,,
114,31782a7fa7e4967340b0d1a4ddb9da6abf6e526a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-16 17:04:30 -0800, , allow import file starting number fix 506,,
115,38f2070a9a885ec026e91cc0ab23dd34940ad376,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-14 14:46:49 -0800, , fix testing function potentially reporting error,,
116,c855529ac3b8a70e68228f661494a48efbae29f0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-11 12:10:04 -0800, , second shot getting __dir__ work,,
117,e509a8f9708bbbbe3af840bf81d83791fb92ec99,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-09 18:24:17 -0800, , fix hash walking visiting entry,,
118,28a0adf52149f258d50ef033f76dbbb81aa2dd74,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-09 18:21:03 -0800, , comparsion walk hash element fix 505,,
119,696eebfaff01053c69c93e24f2d445797971d435,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-07 22:19:53 -0800, , better window support findlily.cmake fix 504,,
120,e3d303341b9fa0425d6f88177132b2a2e68dd44a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-07 18:07:58 -0800, , internalize fix 502 long time ago interpreter api split among handful header file eventually unified lily.h except two mentioned back created two file still working issue lily bytecode day bytecode format stable going update dis tooling copy patch file need case make bytecode change future,,
121,3e0d107d85b9980a029c70c8cc246a29eac8bdb7,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-07 13:44:15 -0800, , fix accidental memory leak sys.exit,,
122,783a3026d4384529d9fd0070545063555561fae9,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-07 10:30:04 -0800, , template write stdout,,
123,ceb788775a796864784520968eb96f2c79002650,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-06 18:25:05 -0800, , add exit support sys fix 503,,
124,a35099da08e3f4912d5c6897ee26f34db8f61252,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-06 16:35:28 -0800, , create module fix 496,,
125,4bc6b265c47f0bbbbddc2031216744f597225267,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 15:11:24 -0800, , suitable integer literal infer byte 500,,
126,83b7e833c170e31226789bb963eb3cda75edc2f0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 13:37:51 -0800, , add lily_strerror macro,,
127,4fb495454ab8c430ff8cb0312b84290e79e893ad,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 13:26:11 -0800, , rename src lily_config.h src lily_platform.h old name misleading since hold lily_config struct content configured,,
128,c65ed147e54b323806521e940e407e1d2af5319f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 12:04:43 -0800, , allow early exit class method returning self fix 499,,
129,cc3a52401e807f51f7d40d6402940107b8d95c88,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 11:38:34 -0800, , fix weird error message invalid property call fix 498,,
130,13eb599a97bba24868511faebae1eb1ae49cd06a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 11:29:24 -0800, , fix string.find return value offset given fix 494,,
131,ca773f83476201b0478d298ae88b2b55d9ac3a54,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-05 09:31:43 -0800, , remove unnecessary forward definition,,
132,ce28912b37d39ad8de789ab682bb0ea0bcf34092,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-03 18:46:53 -0800, , fix typo last commit whoop,,
133,5e6362a1dae4222000d61cfeaffe6740df2be45f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-03 15:09:37 -0800, , introduce extra_info rework doc storage fix 497,,
134,d3ffdb9de212bc425a0c19622afeb697df845b01,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-01 19:23:50 -0800, , add api fix 470,,
135,9fbf8dd9402e318fcc1e9297d32e12f2fb14c6a3,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-01 17:01:13 -0800, , add hex escape code xnn fix 472,,
136,8cd9f99af5b0c398a7567b908f22ba9d4cfd4ed7,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-01 14:40:54 -0800, , fix last commit oops,,
137,a46fdf759fee92c5ac86d0368af632b6e0634f27,ascinatedBox <FascinatedBox@protonmail.com>, 2021-02-01 14:34:41 -0800, , add __dir__ magic constant fix 495,,
138,07a0ceccc02c5b3e5bc839c1b22688ba08a4e453,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-30 21:37:01 -0800, , default template output raise stdout closed fix 492,,
139,d21018100ceccbff2d6745c2f16c0d3b9cad9843,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-30 17:42:33 -0800, , split capture stdout print parser internals,,
140,8231426f9c424ac037c9292309c1d531a8e12442,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-29 19:29:09 -0800, , cache stdout register global state,,
141,860a59ffeabcd9240789a4adeb45faac0cc7d6c0,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-22 17:52:08 -0800, , account native closure lily_call fix 491 one tricky closure work creating function copy register replacing current frame function lily_call executes function clear caller register assumes callee frame function unchanged caller looping function list.map subsequent pass could delete callee function attempt call,,
142,6494a9515e4b76e758d2cb0b3787eca665fdd490,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-19 10:54:08 -0800, , tree eval longer null denote inference prior mixture question type null used,,
143,d0c1f7350467359b57fd9d7d83846222730739ca,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-18 21:14:01 -0800, , unset var use question type instead null,,
144,b1d835342fc06d2c1a22c7d8c1f1bf7bda0f23ae,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-18 20:21:34 -0800, , parser var init longer start type case type passed var null special case responsible setting type making,,
145,ef446fc1e60dcbd5196e17e819c0297d8ccd0d03,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-18 18:21:07 -0800, , fix assign optimize working binary ops,,
146,fc35c1425a38d44b7baebb88c9aaa09d11b05de8,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-18 17:45:07 -0800, , fix invalid read loop step,,
147,95bf87d28308b6cb595247780fddc7761f702da5,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-18 17:22:05 -0800, , cover formatting circular value,,
148,d69a8b500b59852b29b32a7cf2ce31bf09eba706,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-17 19:00:29 -0800, , fix crash formatting tagged value fix 490,,
149,7c848602989f59be50f30e096135c520d086650a,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-14 17:54:02 -0800, , fix crash comparing two kind variant fix 489,,
150,16836efcd6b79592b059cfd9fe1337ded7218a9b,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-13 19:36:27 -0800, , fix warning overridden building window cmake cflags default replace get avoiding complaint overriding,,
151,9288bed73b62d03e3829853f5fc33c14536f550f,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-11 19:59:38 -0800, , remove quick_build build option non window hardly ever use day,,
152,992ec2d0109061a0edcdb237b1e41a24a7308e54,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-10 22:11:48 -0800, , move sandbox repo fix 488 internals well past stable enough sandbox new repo http gitlab.com fascinatedbox lily sandbox,,
153,ec470add5fe31583cc2b295dedbb32fe5061b450,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-10 12:00:00 -0800, , version 1.15,,
154,1602c39489fb0dbf590ba6ef79b371ac1d385760,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-07 21:32:59 -0800, , add hash.each_value fix 478,,
155,077e5d3c34e44bfb5019d2f81c779c1203dd7ab9,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-07 20:36:44 -0800, , fix valgrind warning lambda many args inference,,
156,e6a09a82094376f2f161e1996b362e352b542854,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-06 18:57:21 -0800, , add test case foreign function trying coroutine,,
157,0d277b46cde973e7ec4c1f3aadc13cff1218f695,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-06 17:32:26 -0800, , remove unused,,
158,c1695551ef4de8c77baec605e773db31a1318c10,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-06 17:26:18 -0800, , remove unreachable code around finalizing enum match enum match case check see block marked finalized check finalization unreachable opening check block finalized catch removed code trying,,
159,6268655b67fc47161f3fb549f7656c8d9ef94782,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-06 17:13:47 -0800, , remove unreachable brace check emitter block leave parser block exit check,,
160,391426ec9eca30aa8e30e82753b50a1c0bb73e50,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-06 17:09:58 -0800, , remove unreachable mismatched base check value compare added dynamic removed v1.5 allowed deep comparison dynamic class allowed storing kind monomorphic value fetching back later cast coming back function part api drop check,,
161,c9516d1d3fd19d0ac28afc26de9e717b5cbdb643,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 23:01:31 -0800, , add lcov coverage report coverage badge,,
162,d45f8e86a0cf9b1804045e577d5824c183d67efe,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 21:58:52 -0800, , remove codecov cmake build file,,
163,1e2e4638064689a78f2cbdd60c0e96d5e2eb39c4,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 21:22:53 -0800, , replace travis codecov badge gitlab pipeline badge travis replaced gitlab pipeline codecov replaced soon well pipeline depends appveyor keeping badge anyway want make clear window supported,,
164,6eca31d50f3c4c7275be771fb847764ff4b01d37,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 19:38:23 -0800, , hide appveyor yaml since gitlab yaml hidden,,
165,fab977eea523665d88c4c2ce60005c5b29bae11e,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 14:09:57 -0800, , support building lily msbuild fix 443,,
166,1a822784e310a3e566686ad637c2a5bbe81dc642,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-05 13:16:22 -0800, , functionize setting cmake dirs cover backbone test,,
167,587834124579285e52ac1064a27110e3b6d58062,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-01 02:15:00 -0800, , migrate main branch,,
168,c71e2779d218b9661bddd3355b958ace7962c092,ascinatedBox <FascinatedBox@protonmail.com>, 2021-01-01 00:00:00 -0800, , mit license 2011 2021,,
169,f0d9094e3fb9cac371c89125a34b2b02fb649f35,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-31 17:12:08 -0800, , convert tab space aside csiphash.c tab slid accidentally editor inconsistency inconsistency long since fixed time fix tab,,
170,86e415bc88bb33fe0e971b4eaa3b82a8e57604d9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-24 23:53:45 -0800, , fix crash printing error invalid binary arith,,
171,2da8a5ed2f351aafdc2fcc9ad8032237c002e53c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-23 15:27:33 -0800, , add list.merge prelude fix 479,,
172,a207c4980c494f2bda5deed6395d38652f25063f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-23 12:47:05 -0800, , introduce anonymous block fix 471,,
173,e94551497015b88ea50cdda708a6791748fea12d,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-22 20:07:20 -0800, , add api,,
174,e17056a90a3027ffbb2dd01359870c22c12ebc95,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-22 18:39:13 -0800, , introduce forward class fix 440,,
175,5c0e3d40226b28290644bde456364f24602d3119,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-11 18:57:10 -0800, , add test short enum name,,
176,860ed521b3e04c849e19dd0c6dca3007fde52b55,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-08 15:22:13 -0800, , add subprocess predefined module fix 438,,
177,e496e0011e826173b1139fc758f070e4e9c0c7cc,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-06 12:27:41 -0800, , remove parser long standing todos opposed really low priority see anytime soon,,
178,7332f384d89a0e4ec79222984a57487c24941f19,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-06 12:02:38 -0800, , remove unnecessary unit end testing lambda think added work around 465 fixed,,
179,3574905925d5cca15c2c929e2d7ddf2bc321f6a8,ascinatedBox <FascinatedBox@protonmail.com>, 2020-12-06 10:38:40 -0800, , fix handling tk_eof template mode fix 487,,
180,a416d7e011453d3b88045672b1fbe54781ed7224,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-26 19:37:33 -0800, , fix coroutine test run test driver,,
181,e95cf2427d4dc302cbc6fa006f704c1df0245aaf,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-17 21:04:14 -0800, , update script prelude.lily builtin prelude migration,,
182,ee2d3cb73a66fd0230ebfd5c73c457997cea9bc9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-17 15:48:50 -0800, , fix oops optargs allowing token value,,
183,8989b09d645e078411f4aef5adb85dcdc00158fc,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-17 13:53:50 -0800, , lily_push_file take close function file,,
184,d74bcc3c46a25e162861747e6d0b19c71ae67526,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-16 21:30:58 -0800, , pull lily_push_file api seem use outside interpreter,,
185,e972723194816106a19b18429641841b1bb619b2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-16 18:13:18 -0800, , add basic support constant fix 436 allows declaration basic constant double integer string declaration limited single token make constant easy implement support constant currently limited native code introspection provides function extracting information constant however manifest mode thus dynaload observe constant yet,,
186,2b450082feaf1254d8d84076b24e9855ece60cf0,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-15 18:35:35 -0800, , remove unnecessary use item_is_varlike,,
187,8b5796e85402fe7863f976dba794c817d316db20,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-11 16:50:59 -0800, , update comment usage,,
188,15f20b782bc41afa6c547f2d369e3eba596161ce,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-09 23:02:36 -0800, , add item_define definition method,,
189,0ea59285c3ad8e2c1b4f3cede92bbdda15bc1a28,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-08 18:51:51 -0800, , fix declaration type lily_gc_stopper,,
190,2e52ce15467cbf8f9349d9b97cbe0143a531d99f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-08 17:19:00 -0800, , enums variant marked tagged fix 408,,
191,cdef65019f3b3e063dae9a2bf0cf33c7bb332db1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 21:17:24 -0800, , use instead uint32_t,,
192,6de853703bb33510128fa7d522848cf8d339220a,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 21:08:50 -0800, , change implicit fallthrough flag work older version gcc,,
193,1b5893a0e0f7438ce93c1b4203d9b90519cdfc00,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 16:11:05 -0800, , use correct int size cast clear msvc warning,,
194,98647117cb2ef7ee66cb3ad756f4eb28a0389786,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 15:41:27 -0800, , massive rewrite many prelude method fix 485 rewrite long time coming rewrite focus primarily list string method written long time ago method class given style adjustment otherwise done aim clearing msvc warning highlight follows method list string use api function grab data size several string method simplified using pointer standard library function method list properly wrap around given negative integer test suite assertion common list string method situation,,
195,0c90a739b57c28467c59b3b051156aed0efbb611,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 14:58:40 -0800, , add api,,
196,1f067af9024ac2aa16d6a099031b968630c488ea,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-06 14:41:14 -0800, , test suite count assert_raises test total,,
197,b337adf0a320f50570fb4d3b8b1163d834da55d2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-11-02 17:59:53 -0800, , fix oops lambda string backslash handling fix 486,,
198,a74d0d3dd4da96295d43218e326c402be975aa9e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-30 16:45:16 -0700, , create src lily_api.c mostly src unifies majority interpreter api implementation one file push function value creation function relocated new file,,
199,378f466929e14313358b4f52e4117ebe3183caa1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-28 22:10:47 -0700, , merge src lily_value_ flag raw structs src lily_value.h,,
200,a3af893451a0c4f6173786972a71d1ae68fd64f6,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-28 19:31:32 -0700, , fix flip unary handling,,
201,2c26187f8d47fd49747096cca3059f3f4b2a3f9f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-27 18:53:31 -0700, , pull literal symtab struct may shared part interpreter one time day see little use outside symtab since shared much large complex symtab,,
202,075c549c3fbb37c4c600ad6523a37293c0d62962,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-27 16:10:00 -0700, , use uint16_t uint32_t api,,
203,f9e87c6cc563f0989ccd870e122817835bbde5a4,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-26 22:17:05 -0700, , drop parser const key lookup,,
204,e00457fc15b49e8faf78b7231b2068e617ca7c45,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-26 20:11:27 -0700, , pas counter replaced status field,,
205,2a5d76d69f8de445dc6f88525bd2a25b6aa50c4e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-26 19:15:37 -0700, , use uint16_max place uint16_t one case block last_exit set without cast cover whole interpreter minus place int16_t,,
206,e7b0f07e5255468e362de66511ddc322a0d9cfde,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-25 20:29:47 -0700, , file opened append mode written fix 484,,
207,03dc2c668c41279d06eaad88f85b5bdaa6d258dd,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-24 20:00:24 -0700, , compare equality opcodes include jump fix 406 many case comparison equality check base elif entry check operation include jump take comparison fails jump false includes basic folding conditional root tree eliminate jump comparison equality tree root storage loaded true false slowdown one run frequently inspired seeing lua testing fibonacci show consistent noticeable speed boost testing suite seems tiny bit faster,,
208,4d648317e82eb135554e9e002b19cc167c9cd18d,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-24 17:15:26 -0700, , alphabetize switch case code iter,,
209,b2b88410d885b3351a95b8e0a96b5578845a08ac,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-24 15:31:35 -0700, , housekeeping compare equality macro,,
210,c5b26b8b46c695daeb943191ddccb27b8624dba0,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-19 20:40:59 -0700, , fully remove coroutine access api,,
211,e2d5d8d5e2d16a5a9dc484b2ba33412083d67ad1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-19 19:56:07 -0700, , rewrite coroutine task example add testing rewritten example removed randomness blocker test suite,,
212,e2d6ab97d33c83482077737aacec69ed13efc7d8,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-18 23:22:39 -0700, , fix definition cycling argument name whoop,,
213,d5eb4477326b6c1717d64147ad0da86774f645ea,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-18 23:12:28 -0700, , builtin module called prelude fix 474,,
214,e67fccc9e1c2de69351420068e2da5504f939401,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-15 15:07:48 -0700, , create coroutine module holding coroutine fix 437,,
215,682b94c376bea80cde606dd13b4a564ad6f711a1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-12 23:51:29 -0700, , foreign class generic fix 483,,
216,bbf3301e4873fba28706add4772e4b481a1f137f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-10 13:50:02 -0700, , version 1.14,,
217,b9cdbf7d9fcb856fcc646c0a26619ec3c0397ac3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-10-08 14:15:45 -0700, , lexer parser make template rendering work fix 480,,
218,58545a905e3821a5aaf1eac348945c8e8222d655,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-29 21:51:54 -0700, , remove couple section dead code,,
219,d50b224c9021ed1d1ed9173d6a90cba07ea29a62,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-28 22:39:33 -0700, , emitter fix potential crash bad keyarg call fix 469 crash happens keyarg call missing parameter first parameter provided,,
220,ff571c78c2806a416aa9c180f6bc8e769ff100e1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-27 21:56:41 -0700, , emitter rewrite start call fix bug fix 468 old call start drawing call type item correct move make except property property item unsolved property right type result type rewriting call also tames mess starting call became time,,
221,3c2dcdf86d9e336c1a292c49c1b0da09d32c101f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-25 21:39:10 -0700, , syntax numeric escape past 255 error fix 463,,
222,d1608ed456f37914e293e1fd731a0d9c39570907,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-25 17:43:54 -0700, , internal add v_boolean_flag allow minor optimization,,
223,fb8da258631773ce9c5fb55d43fac29a1a3383ff,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-25 17:17:47 -0700, , emitter store match case lily_buffer_u16 make consistent buffer emitter hold importantly allows removing custom grow code match case using,,
224,3a6e52dba4a5a9dcca16394b726993519e4b6a36,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-25 14:46:26 -0700, , internal organize group includes,,
225,e3e5e0b85df41871158fe26736793340b60f57d0,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-25 11:55:16 -0700, , parser cleanup parser init teardown function,,
226,496ad2bcc772e3521e6a4d637e155533b40c72c7,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-24 16:10:56 -0700, , bugfix keyerror double quote escape fix 467,,
227,31ce33818530ad1cccb77da169974251ae18c37a,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-22 22:08:25 -0700, , api add lily_push_unset calling keyopt function fix 356 mostly completeness since reasonable use case,,
228,fc224cc099b6343579bd7135029b3341c800c9d5,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-22 17:59:42 -0700, , emitter send unit lambda inference fix 465,,
229,4e714265397ff8cc02f50d34acb9c41ce60b374e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-19 21:52:09 -0700, , emitter expr use tree_cached keeping first call arg,,
230,e708a0fd0622da517ee04ffcb902629219cbde33,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-19 17:08:17 -0700, , emitter fix indentation oops,,
231,3977572f8150a0d9f313e18596996beec239e42e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 22:03:43 -0700, , expr spread sort tree type,,
232,ab47ec8ab4768adb1ff1f94d4cc3efe3b151730a,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 22:02:46 -0700, , expr minor simplification binary tree merge,,
233,33e6a2f5e9ee61098c103fee7c70a79c63954fbf,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 21:44:28 -0700, , build compile wextra fix warning case unused var avoided void var used prevent warning wimplicit fallthrough added build block part wextra,,
234,d1f1005166d2bba1fb09fe3dfb2e09aa74947503,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 16:34:27 -0700, , simplify lily_vm_execute intro comment top,,
235,f7976130f00f4eb2e02c9c1d42cd3098aa410bc3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 13:54:33 -0700, , builtin add function missing fix 461,,
236,64a62be9d486fc332d553f9f32f61d238a5edd0b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-18 12:47:12 -0700, , emitter block self solving generic fix 464,,
237,028fe9d425634b2af048af145110036206b31a7a,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-16 20:03:22 -0700, , parser block duplicate keyargs fix 446,,
238,d410b3da7e45bef52a620f24f1b9545fca0c856f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-15 19:29:53 -0700, , testing check render importing file end tag,,
239,97d7228c37413017694ea57a7dc6d3cb76b95b3f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-15 19:20:11 -0700, , testing check lambda loop trying break continue,,
240,a32fad4e792bcf596ee143b123231ae2549aa320,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-14 13:33:21 -0700, , internal fix several issue caught wsign compare,,
241,5643ef8736c57897fb3d23c50cb41b9cfcdaca42,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-13 09:20:11 -0700, , emitter use uint16_t argument min max,,
242,2a105029f189208d77f914be37302ad1dbc78264,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-13 00:49:02 -0700, , tidy stale comment around invocation,,
243,768e893ad4e0a9a37108201ee984f71b5db42121,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-12 22:30:21 -0700, , emitter fix argument reporting empty static fix 462,,
244,393732889d9bb656ce721b0e02190848d1f40d80,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-12 18:33:52 -0700, , emitter use none,,
245,5c4fbc46325ce9abedc505924395776de952024f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-12 18:23:49 -0700, , emitter tidy empty variant accidentally called message,,
246,7232b7bb7d5c834ec87522c7ca051c8125b644e6,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-12 13:44:17 -0700, , build whoop forgot account apple build 459,,
247,c5e4ef06b3f9679a3fe6d9ff03cedaad0a346800,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-12 13:38:42 -0700, , testing use win32 consistency src cmakelists.txt,,
248,72b4cd1c5e4849e82470c04d4d35dc643e7017b4,ascinatedBox <FascinatedBox@protonmail.com>, 2020-09-10 23:45:43 -0700, , build compile wshadow fix shadow warning,,
249,b31ccf7d6370cb05efbb19d1e9b2c1dcc0bdab2a,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-18 00:56:06 -0700, , internal apple two library suffix 459 prior patch assumed every platform exactly one library suffix patch extends try multiple suffix need two test modified account potentially multiple suffix returned,,
250,2fa54a6076d866190c1d94e48b3ef850a9dd0cbe,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-17 22:53:52 -0700, , config add missing include guard,,
251,b603f434449e98e97ae888ed78f4c250d9d231d2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-10 13:05:34 -0700, , version 1.13,,
252,1c6b50cb876f3554d705ad126de6299f213fd6f9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-02 20:14:07 -0700, , manifest finally prelude manifest file commit introduces predefined keyword allowing builtin manifest override builtin class enums along also add override builtin library keyword two change last barrier migration module prelude rewritten use manifest file generating binding,,
253,723044081e2610443cc4b481dce4958c2fb16c71,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-02 19:49:47 -0700, , testing migrate backbone covlib manifest file,,
254,e2f713cdb1705a250fffdbbb6ca85e883d4c498b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-02 19:42:39 -0700, , testing small adjustment backbone collect source,,
255,d47b53a976676892aa8612a7f4aa123a80885526,ascinatedBox <FascinatedBox@protonmail.com>, 2020-07-02 19:26:15 -0700, , manifest add scoped keyword scoped enums,,
256,a38e2c2b20f12e927097f934a907a67d6224aca2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-29 23:32:26 -0700, , manifest require exactly import manifest first line,,
257,18512e6d9cf4d5b22bbcb6f3c4d82845c61c71b9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-17 02:53:35 -0700, , parser use right raiser bad template header,,
258,0a8ad7218dd0f0f0c3db98a2680a17cba4695753,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-17 01:40:14 -0700, , introspect add methodentry.doc,,
259,4a25185de5ef424832ceea13467d015bb32dfdf2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-14 00:17:50 -0700, , introspect add,,
260,238afb7bc0cbab8700e663f18b1867b77bd77f6e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-11 23:47:30 -0700, , parser use check incomplete enums,,
261,b8132d66a4a05c41f3b97173dd2abd819076fd89,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-11 22:47:12 -0700, , parser split enum parsing entry header,,
262,bf96809a93cb384312a9440a947e7bcbd757b0c9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-11 20:56:07 -0700, , manifest give manifest definition access scoop,,
263,bf3453c2f0939c2da5a464e3aace998ce076facc,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-11 20:55:04 -0700, , symtab fix outdated comment function,,
264,727464e154dda8887715d1d6de98c3aec43447e4,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-11 19:47:14 -0700, , parser pkg_builtin insert unit type builtin class make parser deletion straightforward also allows mutating field unit class make unit easier deal future builtin manifest file,,
265,c77c08433f8a69d557d4d1c89e368651dd68bdbb,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-08 16:11:47 -0700, , testing fix test removing module_path,,
266,3501ffb696f55f44e5094d5277b4bb90770dff7f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-02 05:52:14 -0700, , manifest docblocks must followed keyword,,
267,4d026b7a671453edb3e67bde737cea7813faaeb5,ascinatedBox <FascinatedBox@protonmail.com>, 2020-06-01 02:33:55 -0700, , manifest add import keyword adjustment manifest import,,
268,ae35166a3648aa5f6008b44b1f7633356d9e2d3b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-29 16:19:10 -0700, , introspect add,,
269,6b309bf95ab168647d68b2e80e4528ef24ef84f3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-29 02:22:42 -0700, , introspect add,,
270,ff7e7ddaf64d05f2c528584ae2d06481c03d8231,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-29 02:03:49 -0700, , introspect remove module_path across board,,
271,fd27e37c970174fcea046050ac9e3c635e8b6ea1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-28 18:15:29 -0700, , core_types.h organize magic class fill hole,,
272,8dce8c8186d2df25b92ffa7ba96b6ed4ada30107,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-28 17:51:32 -0700, , introspect add,,
273,84d5ddcee0e9adb443ba66a196d45c0c56a40843,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-28 17:30:23 -0700, , introspect remove moduleentry.id thought docgen needed,,
274,bdbd951f3ca2e6c63eaca84a7ef63486764f586d,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-25 22:34:44 -0700, , introspect add classentry.id enumentry.id,,
275,6b7ea1208e8355da930ea227281ca6023c5b2c42,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-23 16:31:41 -0700, , introspect add,,
276,6c316f04eb4302fcdd30e69a3e6a2a387af0e4cc,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-22 18:06:12 -0700, , introspect add,,
277,6dc7e620abe6d41c1e47eb16a2ebdff32eb8e3a1,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-20 17:59:25 -0700, , manifest foreign static class constructor exported,,
278,6a757a38aff884e6e9a1ce0074f5796e61a57603,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-20 00:34:13 -0700, , manifest block foreign class declaring property,,
279,e1d0a48e58c188a8d1022a546bae98db0f4e418b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-19 18:07:38 -0700, , manifest use specialized block exit write code,,
280,bacf990b0152f361b137e77a05f39d722e240fee,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-18 17:06:38 -0700, , manifest introspect add static modifier,,
281,90eaa27fd83b64f230ae25f1bc10aaf6468cec1c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-18 16:19:24 -0700, , manifest introspect add library keyword moduleentry.doc,,
282,6364f13f11cff813b947d4fab203eb408ee418f2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-17 23:49:59 -0700, , manifest block protected private method maybe later,,
283,287a96092782a6cea68a47d2ec5d2e3912efda1c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-17 22:55:44 -0700, , introspect add,,
284,5ad9314b8aac600653b23a294ddc2a6323ad08ae,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-17 07:24:35 -0700, , manifest introspect support parsing introspecting generic,,
285,3d04d5f7cef039ffdf8ec59186d3672b7047459b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-07 17:57:45 -0700, , manifest emitter lift manifest use,,
286,b64209f609f133954c47da97476480d448cfd908,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-07 16:11:32 -0700, , manifest allow foreign class,,
287,39e65c55b3fd6db1a6f72322f5da8ce77dc078c3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-04 19:11:11 -0700, , lexer docblock scanning trim space afterward,,
288,40c9f5f2739b1ece82c684389725a19d5f3a1da6,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-03 23:45:44 -0700, , manifest introspect var varentry.doc,,
289,a7f48cb0d7d66c7ebee1d1ec8371b6ed06f4aa03,ascinatedBox <FascinatedBox@protonmail.com>, 2020-05-02 23:40:56 -0700, , manifest introspect add enums enumentry.doc,,
290,7e2efeb95bf9d18d2187ea24781a8d76023f74d9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-30 20:21:05 -0700, , manifest allow private protected public modifier,,
291,d8f55cb23fbeb50b6d73289d35ac4b0217481859,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-30 00:40:08 -0700, , manifest introspect add class classentry.doc,,
292,1a4ca3f940ea1e882b5d4a8f34f31cf4c1a3ea69,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-29 23:58:04 -0700, , manifest invalid keywords raise,,
293,ce222ae40d53a3431f1746ab82ec4f2b0e7e9101,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-27 21:27:58 -0700, , manifest introspect add parameter parameterentry,,
294,4dd0e8457e3b1f5e2e5a5d5785c924c8b7b160c4,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-27 18:04:22 -0700, , manifest store docblocks definition,,
295,43da1a628c6b64421f304b1d1eca0e722920c5a3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-23 23:47:22 -0700, , internal add line_num property line parent structs,,
296,3cf861757904db82e56e2a76b935d71f5ca82917,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-23 18:20:13 -0700, , parser beginning definition parsing manifest,,
297,db7faaa3cc13c3eb364248782f40ade47b4f7d62,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-21 23:16:50 -0700, , parser store modifier parse state flatten definition parsing,,
298,822818cff0710c70391a7fadbec84b578505e184,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-18 23:26:36 -0700, , parser var define modifier stored state allows flattening parse function,,
299,01783520e553c479f2c42bca7979bf62238b32d4,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-17 23:05:16 -0700, , parser add basic manifest loop reachable executable,,
300,c076dad5218dad497bd7d7dcbfeb6a849d2ab897,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-16 18:31:35 -0700, , parser add beginning manifest,,
301,d28ae8d01285e0829050aa483242fbe176681abd,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-15 07:58:42 -0700, , introspect add,,
302,577e6522fd638c7ed131dd74528128b6473e1fc9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-14 23:46:31 -0700, , introspect add class_name typeentry moduleentry,,
303,9fdd86aefa1eab595dcfee8586864fcc958555d2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-13 21:54:09 -0700, , parser keyargs stored null terminated array,,
304,1ffc3a01e48c83adde919c16435b54259eefbf45,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-10 19:29:20 -0700, , version 1.12,,
305,3b24e54573f9e63c4f6d878d6057da9372fc10ac,ascinatedBox <FascinatedBox@protonmail.com>, 2020-04-03 01:58:57 -0700, , parser fix template properly checking exiting,,
306,b4bbf8a9c2c8a4fd780368d91ef4ff04f31708c9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-31 23:37:34 -0700, , parser block handling longer recursive line count small patch build recent work massive rethink block parsing block keywords entered like import recursive block handling mean function scope long block scope patch keyword function block setup return lambda parsing parser loop responsible exiting block making sure curly brace balanced test changed since resulted line number since keywords moved around anyway error message changed longer quote keywords hopefully case done inconsistently seem useful,,
307,fa34e511dbaf7e19a8e8cd4f233defc94b60f082,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-27 11:14:30 -0700, , tooling keyword dispatch table autogenerated,,
308,d41e28da60a1dc58f4c53520734c461d8d5a87ff,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-23 16:25:28 -0700, , parser tooling generated dispatch table expression fix 458 token expression complicated enough need function handle handled function put dispatch table dispatch table generated easier verify also easier change becomes necessary made src lily_expr_op enum obsolete removed,,
309,c96aa5e3fb96088a1cfc5bdd44f57565fd2a233b,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-23 15:51:20 -0700, , parser make expression_word handle entire word case,,
310,8f29715a5322eec444632d8a9769d36cbb8e7d0f,?? <???@???.com>, 2020-03-22 22:22:25 -0700, , cleanup split parser literal pushing different function,,
311,7c266f1e416b813fb06e92974b5dd5fa08bdade2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-20 18:08:00 -0700, , tooling parser keyword constant table generated,,
312,5bb212e0145ce07a4e79e059a126d10035ffc328,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-18 20:03:39 -0700, , tooling add common file token_data.lily token.lily,,
313,5a420c50cf2ae81ac1f932047e6d78a678e625fa,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-18 17:05:59 -0700, , parser fix property handling expression 458 forgot check depth marking state done saw operator case could cause crash,,
314,ee573a60daf26dd3f0219ce8ace3795c356204c3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-18 15:24:57 -0700, , parser better testing keyarg expression 458,,
315,54cef82e08a0b03de7dd0c3aa9afddd5a84f301f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-18 13:25:27 -0700, , parser better error closing token 458,,
316,d8fc6ebfa7d7c731c25e7ffe7ae982de2e2b5e1c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-17 22:54:37 -0700, , parser unify expression close token better error 458 super argument collection merged expression putting together fine better error message bonus,,
317,ccdd78a1116ec73a085b7a7564fcc4ae43d2378e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-17 22:16:43 -0700, , parser add toplevel state clearer error 458,,
318,61010b7935b27549c6251a1405b31a7a49ffbb2f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-17 01:56:09 -0700, , parser merge super arg collection expression 458,,
319,23c4e2b87cc68d7298224d00fbd22141a5f30221,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-16 18:49:03 -0700, , parser fix entry state simplify expression close logic 458,,
320,f687f963ae2406246e0bf7fc47dcf89652ebc64c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-16 16:39:46 -0700, , parser dot check wanting operator 458,,
321,67f5859af5eb782d3ad45716c20376102883909c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-16 15:39:30 -0700, , parser typecast check type 458,,
322,8562081cf799643db62077ecf0a6c85e65fab446,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-15 22:12:08 -0700, , parser comma set want demand based saved tree 458,,
323,2aaa2882779a665d117e79d68e2e6a7926df03aa,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-15 21:52:53 -0700, , parser block comma parenth expression 458,,
324,50309b253db9ab7306ba91d58e3277ea38a253c9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-13 17:07:08 -0700, , parser split expression handling comma arrow,,
325,f2a214ee7263a68accc53905a89d41ebbfc958db,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-13 16:44:36 -0700, , parser select operator instead naming value state,,
326,bd0e2daf0ab2a1c87dfba3ee63919712591304e9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-12 21:59:35 -0700, , cleanup rearrange st_ defines small optimization,,
327,56f98cfde4e818d1a92838a5c0683249d161ef6e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-11 20:25:24 -0700, , parser functionize expression handling close token lambda,,
328,df53ead2d06b873b16617cf347da14e2bd83171e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-11 18:37:52 -0700, , tooling generate precedence table use token ops parser token table lily_expr removed longer used,,
329,2fe43f750d00959efec6d8e6400efbd5c01a0486,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-11 01:52:01 -0700, , lexer squeeze lily_token uint8_t,,
330,47465f2af13cea11ce570c05791eaa4b4c4bfac2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-10 15:37:07 -0700, , tooling create new tooling generate lily_token lexer table prior lexer allocating initializing table lily_next_token used grouping table generated lexer lexer identity table generated token string table tokname also generated latter done ensure token description misalign accident happened lily_token enum generated file case part interpreter want use future,,
331,d09ec10638aaaa69145f7ff68ef827d61d0520f9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-09 17:28:36 -0700, , pkg_math use llabs instead math.abs,,
332,cbbd65c9361a224d984915c5975f907a7317ff01,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-06 19:33:32 -0800, , cleanup give parser dynaload long overdue tidying,,
333,a19012b436448569f54f2710304536bab56cea17,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-05 16:48:42 -0800, , lexer use straightforward check,,
334,76fc63aee80a16857624e79cc8be8065122f50e7,ascinatedBox <FascinatedBox@protonmail.com>, 2020-03-04 19:44:26 -0800, , cleanup var declaration simplification,,
335,97b077ac9ee97c15cc967c5a5134034d9a622927,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-27 16:22:52 -0800, , cleanup huge cleanup reorganization block related code,,
336,bbf6b922b3b0cfbe1d03d112c58fcd75be7edd6c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-27 11:53:14 -0800, , cleanup major area rewind function,,
337,fd42334b4d16946289421c924205e3375fceb4ef,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-26 23:33:44 -0800, , cleanup add function modifier string conversion,,
338,c56de8f8ba219018c450998820500e658a57289e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-26 22:49:15 -0800, , cleanup add consistency prior strategy public absense protected private work feel hacky,,
339,8751185a28a7f2eb2064c8102a46ab64fc426cd7,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-26 17:00:50 -0800, , cleanup move uninitialized property error parser,,
340,9664223ce55f39363dc812f505306e4eaca494ab,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-26 16:21:55 -0800, , cleanup simpler internal path writing assign global,,
341,32fda618818fec8b1e482d6bc81ffcc61a358d62,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-26 16:06:57 -0800, , cleanup reduce goto simplification,,
342,c0bff60a773f8ca7c85f9515fadaad96db00c8d8,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-25 01:04:06 -0800, , cleanup simplify bytecode generation optargs prior optarg handling positional argument wrote set jump assignment table likely performance decrease hair two jump writing code nigh impossible read,,
343,23dfa019d0d221e30e375289c218c3cae6390e7e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-24 12:08:55 -0800, , cleanup add flag use optargs block lambda front instead lambda entered resulting better error message,,
344,e4a33a67c99bc706efe8f764688fd31403853208,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-23 09:53:55 -0800, , emitter fix last exit bubbling unit return,,
345,6a7eebab27f4cef8a17cdcabc5857988f4aefcb0,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-23 00:38:46 -0800, , cleanup struct name wrong function gone,,
346,8ee6ef15f548f7c7750d4728ed762f6b09340d28,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-23 00:36:54 -0800, , cleanup add need_colon_and_ brace next convenience macro,,
347,8dea0bd0f252e0d1d925a8cdd80f48285f349398,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-21 18:46:55 -0800, , lexer whoop forgot set eof,,
348,1f7e7968cbac00a887a2ea4e988838c25044e1c3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-21 17:21:10 -0800, , cleanup specialized teardown function scope block,,
349,acaa27ac185c5534a3ab437f41d0a067c41225c5,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-20 01:35:27 -0800, , parser put module __main__ __module__ function used yet might useful later,,
350,624ba9b7319ce8c25ec33ba97771c7f80a9ee848,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-17 11:50:20 -0800, , parser consolidate parser mechanism short string storage,,
351,7d494dc1bbe71af5fc22ac806ee5335183f4c4f9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-15 23:40:52 -0800, , parser add flag field consolidate simple parser field,,
352,b77b612197adaae31be2b41577ac1e36644f03de,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-15 00:29:04 -0800, , cleanup simplify variant collection drop reverse enum variant used emitter type system need placeholder,,
353,afa3476bf071041bc16ea3469e3f4db8b05b5326,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-14 21:14:45 -0800, , cleanup one block init function per kind block,,
354,de6362f639537e710d6e4c7269a5b80e0db747c9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-14 15:05:57 -0800, , cleanup simplify block branch switching,,
355,cedf1126894b76ac68904de1511a4325149562ce,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-13 00:35:10 -0800, , emitter add scope_flags block_type group testing,,
356,897b96183201463eaf98ed1d3f80d099148d09ed,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-13 00:25:31 -0800, , cleanup simplify deep loop checking,,
357,6158072a695bc81579f69298cb04f38718ab7a7e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-12 16:00:08 -0800, , cleanup long overdue tidying lily_block field reasonable order better comment numeric field uint16_t across board consistency call block referred scope block appropriate renaming emitter,,
358,cc7741497b09697fb81567dc49f549c94daf9022,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-09 10:56:23 -0800, , parser emitter introduce access flag self fix 457 access self consistent organized,,
359,045c57cab468c38ad67dda91381b7eafe64b4c54,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-05 18:51:23 -0800, , parser class_self_type current_class,,
360,ef0bade3274b24139a56cc94fa7a8039569d258e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-05 10:54:30 -0800, , parser enum dynaload need necessary dynaloads able run expression,,
361,8e751a563e199c4224f43fb462123aa5c48ebeb5,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-05 10:50:44 -0800, , parser use dynaload friendly check self return type,,
362,ae090029aa58f96315c2298c6725e8c35c9928df,ascinatedBox <FascinatedBox@protonmail.com>, 2020-02-02 04:54:21 -0800, , internal add closure_spot var storage faster lookup,,
363,bf54cef519564b2785bc177678df868d33831b0d,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 22:51:43 -0800, , parser collecting generic set self type,,
364,57d05e8111f31c253e1edb4b7774c04544c9d338,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 22:19:24 -0800, , parser finally get rid field,,
365,933ae3ab2530c758c95854dfab255aaf725ef666,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 22:09:13 -0800, , cleanup quick pas parser remove reword stale comment,,
366,3145d0577cf2064ef8a6e4d93009183a9ac42a9f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 20:48:45 -0800, , internal organize flag,,
367,f64dc232c177d44529aa2f8301d9ee5900ecf1d7,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 17:42:14 -0800, , emitter remove unnecessary code empty variant set result,,
368,df2b2808c143f213ddb57e1797e6730ef6933f0e,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-29 16:52:49 -0800, , emitter storage default assignable eliminates potential issue resulting caller forgetting set result storage assignable,,
369,1864c0cd4b1886e7b9c88948b7d5abe061dc296f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-28 23:53:39 -0800, , parser empty variant longer build type,,
370,94d47b5d493ff0fb35dfcff6e959761a06a4923f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-26 23:30:52 -0800, , cleanup use bitflags item_kind remove several sym flag,,
371,a4b20cccc826f066ce3a5e81ee6fb92a520e3a5f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-25 23:32:35 -0800, , emitter drop main_block field,,
372,ec72ced14d405b460e7a4e090500b06a8dfda28f,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-25 01:17:59 -0800, , cleanup drop flag,,
373,b4775d87de73da16573f06adf76535c8e32ac4c3,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-25 00:43:40 -0800, , cleanup fix comment layout,,
374,d0ca8d3b1f22b16995b37dbcf22dcfff148acdff,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-24 15:09:41 -0800, , cleanup move lily_storage struct emitter header,,
375,7d51d99ac573c4ee5887aba3ea9d0d475010b620,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-23 12:38:58 -0800, , cleanup tidy const class type,,
376,028daf4fa1b5f1cfb6608aadbf6c45a42d8752da,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-22 16:18:30 -0800, , emitter add drop emitter field,,
377,48682f92b3577801196f714dfc9ec57307766cfe,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-20 23:50:16 -0800, , emitter make sure storage self unique,,
378,c2cfdb899ea785e37b88a77ed4bb2599723166ff,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-19 23:16:41 -0800, , emitter add flag,,
379,25f304210b68e8ce1c89bfae4a0b52a9e2735e71,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-18 23:46:24 -0800, , emitter enums entered function without writing code allows enums consistent class make internal optimization possible near future also note enums longer setting emitter class entry fine class entry used check private protected method access enum method always public,,
380,441310ead0b8bf87f142a2eb18b01a2904015b94,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-16 12:52:43 -0800, , emitter introduce locking storage class enum self,,
381,f7318e082bbdc33c820d8770b512ea1aa5e35289,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-15 15:54:10 -0800, , parser merge keyword_class plus cleanup long time ago dynaload initialized exception writing text buffer calling parse class parse split two function since code gone never come back merges function remove unnecessary save restore code,,
382,4920ac7d0ab2e3695623587e6c3758470714fb65,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-14 11:51:07 -0800, , fix function narrowing scoop fix 456,,
383,706b5d35d209860145f06e09b0900c52dd898aa2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-11 23:55:25 -0800, , emitter callable block carry storage count storage stack starting position within current callable block operates another callable block entered start move block exit start move make consistent save restore mechanism interpreter,,
384,cde9bf3b6c30fdf8c130dcf6208e37cb7d528faf,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-11 00:19:21 -0800, , emitter better idea getting closure storage,,
385,b211f61cf455ed9c0300f99d56bead6b189c03bf,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-10 17:40:42 -0800, , version 1.11,,
386,a762a70004c5b87f1ca08b1dc8803bd4f7d54d4c,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-10 17:32:09 -0800, , testing fix introspect testing window,,
387,4619dd4ef01482846762c3e5f5b490e38169ff22,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-08 14:13:19 -0800, , interp add introspection predefined module fix 454,,
388,6663c91788e061ab72df3b4912136d3730ce6ee9,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-04 11:46:15 -0800, , internal empty variant build type internals testing empty variant flag poking build type symtab need adjusted done part consistency class done way mostly introspection without introspection crash trying print build type empty variant,,
389,d764a51530da2d6d0ceb5d4a2e7fa78da0dac4f2,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-04 11:36:17 -0800, , internal use class generic_count outside parser emitter msgbuf type system use subtype_count type instead hair faster also correct since class might set infinity function tuple,,
390,95e5e2e4528100045f5ff47dfaf4f2471d19b904,ascinatedBox <FascinatedBox@protonmail.com>, 2020-01-02 22:49:32 -0800, , mit license 2011 2020,,
391,eb04e4376d1389163dfa2233162a2b703f98e3ce,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-31 23:28:39 -0800, , tooling prelude autogenerated outside parser prior parser needed extern data table prelude module order call module registry function add script autogenerates prelude init function parser call since one step involved adding new module interpreter prelude script also includes checklist comment make easier add new module interpreter prelude,,
392,0e21ea411b40b9e51510d5ac3074ddfdd934d1ed,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-29 05:10:30 -0800, , parser allow redeclaration super private 396 pushed 396 thought correct behavior warn member redeclared full stop adjusted interpreter testing suite accordingly part patch turn correct behavior done applied member declaration context exception shorthand shorthand property come inheritance visibility check testing impossible discovered trying run testkit new test added make sure slip,,
393,14bc0b357e360e0847a5cf08155176b563862cb1,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-27 22:48:21 -0800, , parser minor simplification consistency,,
394,28365be8e045517541d97527d6d22a9c310758d5,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-25 22:57:26 -0800, , emitter subscript assignment run left right externally make difference since var index tree literal var even index call one side effect right side depends gross multiple level internally allows simplification,,
395,152111b83df8591c4cb92112e35a59b1adfc5265,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-25 14:25:06 -0800, , emitter list hash inference adjustment fix 410 patch inference ignored first element doe agree situation almost certainly going error somewhere however incorrect say list hash literal value mismatching spot result better error message since error occur point sent inference,,
396,12fd073ac10553cb46e7f29e6484c625abe88eaf,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-24 23:20:00 -0800, , internal make identifier lookup consistent fix 396 yet another internal cleanup long time coming time target parser symtab work together discover symbol cleaning area interpreter issue discovered fixed part commit first importantly search done module given prior commit sending null module would search builtin module well active module explicit behavior helped make expression search heavy part interpreter clear search done module given magic behind scene behavior speaking symtab longer take generic pool since longer doe generic class lookup parser concern especially since limited area need search generic class member redeclaration private member check unified make consistent member lookup also expanded upon area done shadowing detection better may cause code fail worked however fixing code trivial simply rename offending method property plenty test added cover new path,,
397,618cd3571cbbe3dc84a4aabee1888ffc8e91dcdb,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-21 02:17:39 -0800, , parser send line number dot access tree whoop,,
398,406cf74f668a89f3c3b6584d0f8e5cd81938e77c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-20 22:22:16 -0800, , emitter tidy check assign optimizable,,
399,83c1082679ba842a13808243253c51392dfd4f3e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-20 16:19:45 -0800, , parser block enums trying use prop patch error message would mention property defined technically true since enums allowed property patch interpreter say enum allowed better error message,,
400,99841226f50625a83f84d19172af317a2af4cd5f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-18 16:09:10 -0800, , parser fix variant name collision detection 396 mentioned issue caused inconsistent search mechanism really simple logic bug,,
401,34e86509338f9b04ba6c959718d64729dad5c995,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-13 22:19:51 -0800, , internal merge symtab old hidden class chain,,
402,1dc57129080f2ed39255fa399d522b4907075d87,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-12 11:59:27 -0800, , internal scoop class global readonly previously scoop type accessed parser walking hidden class chain chain different old class chain class failed exec stored take step toward removing silliness,,
403,f64a0fea25b7a98d759940396d8e2f2fb9527dcd,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-02 11:56:00 -0800, , internal class unit symtab unit class need easily accessible global readonly make work symtab attached end first class integer symtab torn unlinked symtab keep dropped unit reachable like class removing possible inconsistency different area different search,,
404,1091e80d1e78454ce6e089ca7052d25e9eb20727,ascinatedBox <FascinatedBox@protonmail.com>, 2019-12-02 00:28:24 -0800, , parser walk parent nexts marking circularity,,
405,c6c5c9636547dcd01326e445526efb7b4aec22b2,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 20:46:07 -0800, , parser add uniqueness check shorthand property fix 447,,
406,7d863f12bda3b880e545481d0a372de5ff415de4,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 20:43:41 -0800, , parser consistent quotation class member redecl check,,
407,fe6417aacabf0627b4218db9b4f6c4f139e5afde,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 14:31:53 -0800, , rewind add test uncommon rewind scenario fix 389,,
408,45c6a95eba4e988c2c7097326eb728f808bf2bc1,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 13:56:00 -0800, , rewind fix unlikely crash due incorrectly freeing class 389 crash occurs four part exception raised execution parse error occurs within class interpreter think still executing destroys class unfortunately incorrectly think still class parse error occurs declaring var attempt made access last var found current class searched except current class current class destroyed interpreter crash also fix keyarg buffer position held parser rewound test added though since reasonably tested test suite,,
409,650e84370248e1436693a53fad97bb231e0c0074,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 13:52:42 -0800, , emitter storage need cleared rewinding fix 453,,
410,cf5563795439fb6a7d24d2fced078c64286a1b70,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-28 00:28:08 -0800, , emitter move storage clearing function,,
411,ac67cf66c8137147f4b1f5488db720d4b5bc0206,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-27 23:58:03 -0800, , internal move emitter rewinding emitter,,
412,6cb094baf634d3ffaeab45fd97bb705c0803fbf4,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-27 16:33:44 -0800,389, parser better class enum variant redeclaration message fix 452 class declared name enum interpreter mention enum prior source versus always saying class redeclaration message also mention source predefined class enum variant fix small nit wherein using predefined class like exception attempting declare different error message directly attempting redeclaration discovered working 389 better rewind testing,,
413,f212f238daed5e54179ea071ce0b0d3e01415cab,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-27 16:29:13 -0800, , internal class enums variant set line_num,,
414,32562ca9eece625cd0c00a8c9532b1a93adff197,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-20 20:04:20 -0800, , parser check package slashed path fix 388,,
415,7ed3f4327ae7aa0f026ea457ffda44a8bbab0feb,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-15 23:18:36 -0800, , testing benchmark testing fix 411 benchmark include quiet mode suppresses output limit stress first test run still quiet second test run gist benchmark without lag since benchmark unlikely catch bug,,
416,8c9aeb2f7cfe6b38817a01c9862d74c5b2336fe4,ascinatedBox <FascinatedBox@protonmail.com>, 2019-11-10 00:30:15 -0800, , lexer fix numeric rescan double value fix 449 includes adjustment testing math package one test written new correct numeric rescan causing syntax error,,
417,9c27ea82fdbca6d73ddf686298c322ee57d17914,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-30 22:59:47 -0700, , lexer prevent token gluing lambda fix 450,,
418,fd61a0a0c22fddf56b91ef01783e1f5c7d89cc4f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-30 21:01:04 -0700, , lexer nest condition docblock scanning,,
419,f722f009815a2a67bca12ab59dee053dec833fea,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-30 20:55:31 -0700, , lexer check whitespace first line docblock fix 451,,
420,65608872c9e74084a9550ffdba96a70f5ce31c1e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-30 20:03:53 -0700, , docstrings actually docblocks,,
421,01ef62740a4bc01e4ce8650c2bf00368e0aaf081,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-30 17:42:50 -0700, , lexer rewrite long time coming seriously sizeable rewrite focus mechanic lexer lexer entry scanning function mostly despite finding bug rewrite bug fixed future patch build upon work rewrite lump together several idea could broken smaller piece enough overlap would added unnecessary extra work change follows lexer refers lex making consistent parser lily_lexer function lily_next_token lexer carry read cursor read cursor used lily_next_token place offset start line scanning function previously used offset take update cursor lambda longer use string scanning special mode instead separate string literal skipping function string scanning begin earliest part string allows scanning work without need flag passed lexer line number canary first entry used greatly simplifies logic deciding entry select lexer longer take symtab longer creates literal lexer save restore store current line identifier literal string pile function added allow inserting bytestring value since may embedded zero entry longer carry final token used much logic unrolled applicable one usage even removed template reading possible inside lambda,,
422,3efcf5717612e72b5717a857ebe3fadc13b00f0b,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-27 00:01:58 -0700, , window fix oops test causing appveyor fail,,
423,61398c6fe2c08daf9c90b74f6f28e7b6f74621a8,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-23 18:26:31 -0700, , lexer small simplification tk_scoop,,
424,b1c400f3a56b4d213e57789f0b773324ebdb4327,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-20 23:35:16 -0700, , need hold data since config doe,,
425,1dfade5beb047e1289a59dc1e9128650deb6ed9c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-19 23:10:51 -0700, , lexer parser line number bit sorry bytecode hold bit line number bother storing way frontend,,
426,844ef9c34ebc8ba9d4d7452ab354ed9591b050c9,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-18 19:34:47 -0700, , template check whole header fix 448,,
427,27af7c82e6e11b711f9f02e716181c8dffbded35,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-17 01:05:53 -0700, , parser var dynaload type need copied,,
428,08baf9145c1a7771646429f07c4d3c622da77951,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-16 18:14:41 -0700, , interp organize exception internals fix bug fix 439 bug question message returned asking interpreter error message successful parse prior would read similar  error test  interpreter return empty string error message internally involved cleaning interpreter raiser raiser hold enum signal issue came raiser exception handling fails emitter sends failed tree instead setting line adjust parser error building cleaned,,
429,0cc2a2d2f2ed8fa73b78cbdf48626faaacb8518f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 23:32:31 -0700, , import omit registered package slashed path fix 387 doe include behavior change behavior place time fix logging incorrectly reporting registered package tried,,
430,dad2bb9fb8bde7e0bd0a27f84b2ca31687a4d2b7,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 22:08:04 -0700, , parser tidy import keyword handling using ims,,
431,c05fa95744ed5249826a4d743a3ec944f1c01a03,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 19:40:07 -0700, , emitter resolve unscoop unnecessary,,
432,d51d135b85297fa176996644a76cea2c9c08201e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 16:12:38 -0700, , testing better testing file cover file.read fix 412 following adjustment made method testing bad read write closed file done using std stream subinterpreter writer method check output test used assert_raises explicit close replaced try except explicit close file eventually closed either way open file one time better file.read covered,,
433,5bcbd701491423a377df51c142fad4989d14a28f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 15:14:56 -0700, , repo ignore backbone testing library cmake testing directory,,
434,6158a8e5474bd29f6d1df3a0ff95e307ab78dbee,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 15:13:23 -0700, , repo remove unused target .gitignore,,
435,e03456a5eab3a2a5eac8c58ad33a016fec419e85,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 14:15:01 -0700, , version 1.10,,
436,2f585e57ff1a0268e1b6ea1489d91a26318fbe5f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-10 00:23:50 -0700, , typing stronger barrier scoop leaking fix 445 initializing assignment include barrier test make sure allow scoop inside assigns lambda also barrier scoop tripped since scoop match type right side also adjusted barrier scoop resolving generic previous form block potential code like option allowing option pas,,
437,f302d79793cae41193139e4d8f17e23dabbcd887,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-05 23:46:12 -0700, , lexer fix syntax error reporting,,
438,23eceb89a8b8af1dc282fd9931062211ea4fcb5a,ascinatedBox <FascinatedBox@protonmail.com>, 2019-10-05 02:22:30 -0700, , testing huge rewrite testing suite fix 444 massive commit completely change test organized executed focus commit introducing new test system old test migrated new test suite driven driver hardcoded list directory target expects find target import testing file defines customizable subinterpreter testcase running test target define set public method execute code execution done driver writing code invoke target test class design similar testkit make use testkit code well spawni code simplifies external dependency right main advantage new suite brings organized simulate import solid framework necessary provide deeper testing needed ever growing interpreter,,
439,e5395ef400f76f92fef9753866a6a727f996da5c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-30 20:28:11 -0700, , api add lily_optional_ set function fix 366 function allow fetching simple argument integer boolean string fallback value provides way implementing optional argument involve checking argument count account optional keyword argument,,
440,46aa3e976def6ce13dd4697fc96056cd9932848c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-25 00:39:56 -0700, , syntax registered module global fix 352 rationale follows provides single point replaceability preloaded module simulated providing single file worked likely accident resulting module registered internally subpackage might package name registered module case registered module win could lead subpackage breaking peculiar way particular embedder bad,,
441,0ac9ef873a653080f44fdc9d028fe4597a30d84c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-23 20:46:23 -0700, , testing remove obsolete test made obsolete interpreter learned add source independent would used used test case rendering file otherwise untested,,
442,68130ac1bf32c8b631dedff01ecff32ec611517f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-22 16:06:09 -0700, , cmake add findlily.cmake use extension library currently difficult write extension library work linux window many extension library written linux mind therefore fail load window file provides cross platform mean finding interpreter information also provides provides cross platform way creating library also set common option extension library set,,
443,5e3fdf0fa405a3640e338f73ff2fa47d1acd3e2c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-16 18:33:55 -0700, , readme add missing public example,,
444,9b1378c31592f7c82bc494c37f5f9d01a3e1fad9,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-16 18:31:40 -0700, , window readme point working appveyor link fix 441,,
445,2ddaa7d02d0990f5f24106681add08235392a841,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-15 13:22:46 -0700, , window build liblily static library,,
446,cd0d4a2b21df3037f2131fcbffd41b63ce2943cd,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-14 21:47:20 -0700, , window update binding mandatory covlib 441,,
447,8848695b33e6fb25e452702d019db6b373fd1bcf,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 22:10:09 -0700, , window lot slash fix test pas 441,,
448,264d406cb1928973ed1af4511e9f408abfa33fc1,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 21:45:57 -0700, , window send char ctype.h function fix 442,,
449,468a945c4c4a10a3438603e9ecf9420e151fe9ea,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 20:12:41 -0700, , cmake block msbuild used 441,,
450,461dfa48a4c5df567c73c80f6a01da6592ba3471,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 20:10:12 -0700, , appveyor switch building ninja 441 msbuild putting library wrong place doe seem way fix use ninja instead,,
451,722f39d067b0d4c4da5015f9d82f09b4610293d2,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 20:00:58 -0700, , window library need build target object 441,,
452,46938f3865deae05ba2f67ebe258b6306f3f0062,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-09 19:51:25 -0700, , window libm try link 441,,
453,561a06551f95270827bdc77b184cbb78db18997e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-07 20:38:52 -0700, , internal generic marked speculative previously container marked speculative generic marked different way getting result feel correct,,
454,6bf0cd17ef2fea5455ac9e4e253684715281e99c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-07 19:13:48 -0700, , small optimization instance creation,,
455,e5cedeec35bcf9f5a8180acb2d431c7273ed7720,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-06 07:09:21 -0700, , parser let cls_visited leak flag used anywhere else best safe,,
456,8fef41523cf320a7838256d632ef5ae03b3680ed,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-05 07:15:26 -0700, , parser remove unnecessary parameter,,
457,039f37d67a05105facf9c4a500cad917a0a5a740,ascinatedBox <FascinatedBox@protonmail.com>, 2019-08-05 07:08:35 -0700, , fix potential invalid read lily_push_super invalid read tough come across verify test added caused test creates exception lily_push_super test creates custom class inherits exception want use temp slot invalid read create new instance path lily_push_super initializing ctor remaining zero since regular instance need,,
458,2a13d2e5d3d988d3b940817ab832754ec433c091,ascinatedBox <FascinatedBox@protonmail.com>, 2019-07-10 18:40:01 -0700, , version 1.9,,
459,40252b9ce5248d14044f25415ec56aa0f6cee14c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-07-03 15:54:29 -0700, , parser docblocks work public definition fix 432,,
460,e83f63abb3332d8a9e41020bc0abaf12df2154da,ascinatedBox <FascinatedBox@protonmail.com>, 2019-07-02 04:59:40 -0700, , core_types add line_num class enums variant uint16_t line_num record class enum variant declared field currently unused interpreter future version interpreter use better error message line number set similar var native code line number time declaration whereas dynaloads use,,
461,a90415377fdb0acec5badf9413120edaac9d1b1a,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-29 23:47:03 -0700, , core_types cls_is_builtin cls_is_foreign clarity builtin class native see exception change functionality,,
462,25f837a2bad926482efb0695716608424a20c4fb,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-28 18:19:56 -0700, , traceback instead fix 419 two area traceback constructed one parser two subtle format divergence parser saying saying noticed working testkit since testkit need show traceback unexpected error testkit currently string replace eventually like use traceback directly small detail matter sometimes,,
463,6dc7fab3dfd901a853a3661d62489db1163ebb08,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-28 16:46:41 -0700, , pkg_builtin make follower_table uint8_t remove negative 327 previously follower table array char used value indicate invalid state feeling causing issue common architecture table invalid state defined array uint8_t lily expects string value proper utf affect string function use follower_table,,
464,ff2178df1d532d0a0636a635cce53f75b6aee0da,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-28 02:54:10 -0700, , api add 434 enum function allow discovery bucket value fall useful case embedder would like poke around value part call,,
465,9ebf65fb66391010510baf5cb3d8613da2bcf785,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-26 22:08:20 -0700, , update testing library new bindgen whoop,,
466,33830226cdc427c03c5f873fc6a7ec62b069edb0,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-12 23:00:32 -0700, , api fix creating bad path fix 435,,
467,a468330520205256ea89b7f1454ae9edadf1af48,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-12 20:14:44 -0700, , parser run code next pas function introduced allow syntax pas well introspection useful introspection run code since code could lock side effect clear __main__ succeeds,,
468,587748d3350ef61d2eb642ed6021a9e8381d8d2f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-06-12 19:33:32 -0700, , update bindgen creating binding file,,
469,196bf80baa7e12b430445ce553dcd44029fb5a79,ascinatedBox <FascinatedBox@protonmail.com>, 2019-05-27 19:56:41 -0700, , api pushed container speculative fix 433 possible container created push api sole source tagged value previously tagged value would missed causing incorrectly destroyed include testing metric make sure said testing actually working though modifies pushing api function caller notice differece aside crashing rare case lol,,
470,b38634e509a5ffebff5cbb16c004464025eb2135,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-27 00:55:12 -0700, , symtab item_kind marking class enums previously handful predefined class item_kind properly set item_type_class extends class also add item_type_enum set enums change done part consistent internals driving reason allow introspect easily walk boxed symbol,,
471,439ee1c9d3a0d5c838b799fc36058e246ef7f4d2,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-27 00:48:11 -0700, , core_types correct comment item_type defines,,
472,50f1aba0853d9bbe1758b1bc50b35c476cd4bd60,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-10 19:17:19 -0700, , fix unit push return api function,,
473,4487765c542596a9bf55a7913ab4619dd55f1f59,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-10 18:09:17 -0700, , parser properly drop depth calling __main__,,
474,7f469f7e49755feac5e709dbd0d3456c4a86286e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-10 13:03:06 -0700, , parser class circular see whoop fix memory leak new testkit,,
475,3168a78d730c8099a42039a4702b2787f94f989e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-04-03 21:10:12 -0700, , mismatched function return properly narrow fix 429,,
476,d93d1e9d539286701f3036f6edf4efe0e5ffe035,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-20 15:40:59 -0700, , internals import funcs account missing use fix 431 api doc used simply suggest always calling import directory selection function calling import never said consequence failing api clearly document failing call directory selection function one function cause lily_import_ function except one load library data,,
477,fe59c63b6ec51bda8eba5e9020c260d11fcd5520,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-20 14:25:47 -0700, , syntax static method use class method fix 430 static method able call class method provide suitable value self prior attempt call non static static would complain self capture reference python allows behavior call norm one test moved fail feature adjustment,,
478,31acb2e81bfe5cee638bd6266345efce0cbff482,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-15 18:51:20 -0700, , parser class method dynaload search recursive fix 428 went unnoticed exception doe export method would found found trying make spawni export native class trying inherit class,,
479,a2b8a90b5822c26bb94db492c30d5a66c3fc4e7f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 15:06:05 -0700, , api add syntax pas fix 425,,
480,9ccb90f48855994c1c8bd8f93cd1aa51ae196161,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 15:00:28 -0700, , parser flatten away function wanting run __main__ would use function mentioned function call main_func_setup invoke __main__ call correctness cutting layer stack needed run __main__ every little bit help,,
481,87bc1c5e66f63eb8c4baa3c41dcf51e8e2407770,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 14:42:08 -0700, , parser finally lift execution parser_loop parser_loop used execute convenient though bit hackish yield content handling function cleaner pave way writing syntax pas interpreter,,
482,4606872f8ca43f6ae9ff9c957bfb8170eb90158f,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 13:28:57 -0700, , emitter fix emitter code main init safe embedders parsing execution code based exception dynaload gone comfortable saying idea never ever coming back,,
483,ec5c29466642ee09c164f8026629b53e5cfc708e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 12:46:14 -0700, , raiser trivial documentation tidying,,
484,d0bcd1b038b843f0da27621f49a31178cbf0bfc6,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-13 01:16:45 -0700, , api drop copy_str_input fix 427 previously copy_str_input option config determine string content passed interpreter copied new approach copy string input passed render parse function string data passed likely survive processing done likely stack somewhere hand string input passed import function always copied case like spawni string data may non literal string might wiped granted would corner case still possible new approach think straightforward obviously correct also satisfies use case mentioned commit first brought config option,,
485,d8cb33a2e7f8d1ae3816b15522b41b0829fb9a33,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-10 23:06:41 -0700, , version 1.8,,
486,c25dd6d18c7e033f207b77723b5b1db57baf799c,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-08 22:05:54 -0800, , parser store main module path literal fix 426 spawni let subinterpreters care lifetime path pas first file,,
487,0777fba7c4b2fc7f1d0258d58fd838284425fbd1,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-08 17:32:00 -0800, , parser super ctors use base member init fix 424 base member super ctor available,,
488,d60b1dd92f3ebe25198033a79a952298c98d002e,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-08 16:29:03 -0800, , parser use proper path module lookup fix 423 interpreter creates path dot slash front prevent platform trying system library path however path storage raw path since dot slash useless bug caused dot slash path used lookup since path different new module entry created instead using old one end result incorrect type error,,
489,c34c698f51e0522fb8b6de11ece63e5a469eb279,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-01 16:48:51 -0800, , parser fix silly shadowing error message fix 421 grabbing proto name var would print decorated name function class.method versus method however existing test care use var name since print correct output,,
490,c7d2a930517b5b08adc257826d4387300fe490c4,ascinatedBox <FascinatedBox@protonmail.com>, 2019-03-01 16:22:01 -0800, , parser let crash __function__ __main__ fix 420,,
491,46fec66aa9295037590e97a5e6dfe66aa3c7bfec,ascinatedBox <FascinatedBox@protonmail.com>, 2019-02-18 13:46:28 -0800, , parser set __main__ defined line since native make foreign function line line declared,,
492,b0e7a9fa70a6ffe5eaa20f8a6df54f40f2349cd5,ascinatedBox <FascinatedBox@protonmail.com>, 2019-02-18 13:40:23 -0800, , parser last param always always called line number lex line_num omit last parameter function source line number ever use case function custom line number revert doubt going happen,,
493,40f8a5d57aef449f4bf379cdff0ab44c46bbe9d0,ascinatedBox <FascinatedBox@protonmail.com>, 2019-02-06 01:05:26 -0800, , api properly export oversight missed import rewrite done last release function exported twice doc need updated since name correct documentation,,
494,4e5d17cf0f48c2099a48e7797036dee5624e3ab2,ascinatedBox <FascinatedBox@protonmail.com>, 2019-01-30 18:41:47 -0800, , internals rename module_entry root_next next update comment consistency kind symbol make easier build tooling,,
495,de7d73186e11e7bd6b96ad4f27bc877a493cebf9,ascinatedBox <FascinatedBox@protonmail.com>, 2019-01-30 17:54:28 -0800, , internals adjust module link laid make module link consistent symtab symbol next field always first named next,,
496,cb1a5e10d6e2ec0c2ed6d13520465668cff1ce66,ascinatedBox <FascinatedBox@protonmail.com>, 2019-01-13 14:39:55 -0800, , internals line number unsigned 65k enough everyone bumped long time ago thought would better traceback really file size discouraged since high level interpreted language additionally bytecode unsigned bit ints even frontend supported bit line number bytecode would line number wrapped around 65535 patch doe cleaning isolated change,,
497,dc2ad1461ae1bea86da04d51cd13dcc96f713d94,ascinatedBox <FascinatedBox@protonmail.com>, 2019-01-10 20:33:40 -0800, , version 1.7,,
498,1b026f892f005e782698597d586cd1b710966888,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-31 22:50:01 -0800, , mit license 2011 2019 happy new year yall,,
499,aa4362129332f14f8cfa6fd722a5624b8e5c2ed9,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-25 21:41:15 -0800, , parser drop couple unused forward decls long time ago dynaload could run code forward decls ,,
500,68144f732180350ea3a58e98e12596d3247702a4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-12 16:10:15 -0800, , api internals huge rewrite import internals fix 416 huge patch rewrite parser receives content import hook work externally difference term api several break import hook caller receive state target old lily_load_ function lily_import_ function renamed function automatically tack appropriate suffix allows useful hook without even looking msgbuf new function package_dir function control import function going use local dir package dir caller specify directory fit package root target allows building system test test directory cross import src file new function added omits leading directory first module seems right testing system yet built possible content loading also changed done lily_load_ function newly made unrelated old embedder call parse render function advantage decouples parse render content render_file hard test example embedders broken patch sorry,,
501,7116984ad768f8e87911551cc744928fe3fc17ff,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-11 16:31:37 -0800, , import add import path fail small optimization case failed import avoids unnecessary path copy,,
502,3ee05c21675af075350c1f4b7cd783621fc97935,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-10 17:04:56 -0800, , import simplify,,
503,221adeb67ed669a10924ba7cce40a9d36520a6c5,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-10 16:49:26 -0800, , parser symtab make exist use,,
504,7f1229509a43a2e77e8a72a86b87fc61d8f12dcd,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-10 16:37:52 -0800, , import loadname first module importable,,
505,c60d4ee91ea09b8de295df7f7f13b791f41e4d8f,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-10 15:24:25 -0800, , import simplify dirname used checked real solution store directory name module since useful import done one day,,
506,2559e61dbe6a315a7c4a7a1d8fd143d0683bfecf,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-09 21:04:27 -0800, , doc simple one line fix search replace oops,,
507,4fd381f692ea2456fbaba214fed2c37558680a46,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-09 20:59:19 -0800,394, import derive loadname path fix 415 otherwise wrong name made available also make 394 possible without adding special api,,
508,8dac673b665a4c371155c5611465f5ec74825bd4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-09 18:57:35 -0800, , import make error prone foreign module always set data flag unset likely accidentally forgotten way,,
509,3ce890d8e53f662b88d71724bec622cb5e00ebea,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-05 16:16:35 -0800, , doc update comment lily_raw_value really long time since lily_value contained type,,
510,41b32068f5cf18883411ed9cb4cec892e601144a,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-05 15:07:42 -0800, , contributing fix name typo pre commit test,,
511,f149bd565425d2e7c88c73210d0a1a7a665c8955,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-04 16:01:35 -0800, , syntax trailing comma container literal fix 409,,
512,2b60b438651ea36097959a20b091399673585d6d,ascinatedBox <FascinatedBox@protonmail.com>, 2018-12-04 13:15:27 -0800, , syntax list.unshift return source list fix 407,,
513,01a4f855e28786302d64f9e4c5b365d1b9bd8e2c,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 15:05:33 -0800, , doc fix typo hash print doc,,
514,c7df0b37b9a6872752de5f7140adb571e3fa1fa7,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 14:38:01 -0800, , testing add message_equal testing missing import message_equal member check import work .dll .so allows testing check error message missing import render differently based platform ideally would use platform library unfortunately available yet try assumes one going work import failure,,
515,131634d24bc0c7b26de8110b0b377b9f44337d33,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 14:15:11 -0800, , lexer use bit size prevent potential locking bit provides max 65535. rare case large string terminated continually read input buffer hit halfway mark try grow overflow result hard lock interpreter grow test included since would huge,,
516,b7033e59ec1d5a05803fcea0905321f6b7bcd041,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 13:35:43 -0800, , builtin add string.size,,
517,1550e7539ab421df4081c36d40c8b9a188ffb2ec,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 13:19:45 -0800, , syntax forbid specifying explicit unit return thought already case,,
518,774f330933e9858c7b46a1b4b810301d344d411f,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-28 12:55:11 -0800, , builtin list.push return self fix 405,,
519,4a0d16ffd71d784e76d99f9e7eb1b15057db0214,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 19:50:43 -0800, , error clip traceback path fix 355,,
520,06dd688fe678df92d9eaae6f36cfac691dad1b46,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 19:14:24 -0800, , error better traceback foreign library fix 399 prior path foreign registered module okay source obvious like builtin class method class name attached however helpful classname math.fmod change registered module write name bracket library write path loaded latter adjustment original issue message interest clarity,,
521,ec1c1a3ef34f69bb62cd13f591c6d995960ca145,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 18:45:33 -0800, , symtab skip builtin registered module search,,
522,a1f67947f0d9e2e9a72e435ce18970cfe9d666d1,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 17:34:41 -0800, , emitter allow static list hash narrow fix 404,,
523,f134bd2f584e165c4f73f45038ea4fd413e2c324,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 16:56:39 -0800, , syntax allow subscript byte fix 403,,
524,df7f19c2091709359ae1fe91626f3e055be29f71,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-24 16:21:05 -0800, , parser change __import__ __module__ make language consistent python term python traceback call backing module function module import hook called __import__ since python close lily way ought help alleviate potential confusion,,
525,428742038ee341274e35d0c2ce657409fd2bc952,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-22 19:54:05 -0800, , bytecode introduce o_jump_if_set optargs fix 395 allows specialize class variant matching new opcode specializes optional argument,,
526,974a227b86cfa23e60ae31e548d9eab62ddc4a6b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 23:57:03 -0800, , emitter fix broken closing self enum fix 392,,
527,cca4e29d93050cee147b90be4522a560a7bb21ef,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 23:48:49 -0800, , emitter depth always closing class self,,
528,db5133478f316c77f8bb7637b4c4f80b7bf30bdc,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 23:43:18 -0800, , emitter give enums fake depth bump drop later closure fix,,
529,4becab4a3ad66c09bea285f35faa7ffbb7cb7c78,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 23:18:13 -0800, , emitter use closure rule storing backing,,
530,e0da8e520e256d722ea8c3f293b5d5bdbac7c52a,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 22:54:07 -0800, , emitter closure transform need emit always going reason documented,,
531,f422b1bcd592236328d6b84241cdc9f599d0e105,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 22:18:04 -0800, , fix class property able start fix 402,,
532,f08c93cf41aa7ce49aea28d9f429d94b6aa3c3f8,ascinatedBox <FascinatedBox@protonmail.com>, 2018-11-11 21:40:12 -0800, , emitter hash build use test key equality,,
533,71428193ca027cf5c98d567441b6f83abf44e776,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 20:25:30 -0700, , syntax constructor var require scope break fix 400 previous version made optional specify scope shorthand constructor var last version require idea came late release even release code relied automatic promotion public broken change done variable declaration consistent requiring scope throughout language,,
534,78716bc2bf623298ed14a4d28e5d286d3856749e,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 20:00:43 -0700, , builtin fix file.read_line break fix 382 old version file.each_line include newline line sent back made inconsistent language work file.read_line former version file.each_line also neglected send line final eof found break script rely file.read_line previously untested,,
535,833d84674ddbc23e8bc37deb32ad6ec5cc9a2781,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 19:25:37 -0700, , testing add test file_for_io positive test file.read_line,,
536,66b17e3c30b67a2ab71d5fbcfcbf800b73d7ded1,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 19:11:29 -0700, , lexer fix scan backslash newline inside lambda fix 401,,
537,210dd6c5692008d0adb38c57fcd9baf1fe769477,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 17:03:39 -0700, , testing organize,,
538,72e476482f093682c5fb887428a713111c0d5d6a,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 15:35:21 -0700, , syntax add unary negation double fix 390,,
539,06be692b115e7e6caf4e177c610a257e7e81e4d6,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 15:11:49 -0700, , emitter minor tidying unary dispatch,,
540,945fbaf132b67105596c59b5a4f112d25d40beac,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-24 14:36:44 -0700, , put detail contributing.md fix 398,,
541,a66c71c1c4966716820cb99e3d35e482d59dc03b,ascinatedBox <fascinatedbox@protonmail.com>, 2018-10-21 21:11:56 +0000, , merge branch master master adding math library lily see merge request fascinatedbox lily 363,,
542,bc07ef0dcc3a4676df50f5e411a9817ed2dd4a79,lias Flores <elias_50@live.com>, 2018-10-21 21:11:56 +0000, , adding math library lily,,
543,9b36dcf8e6895c2736e9524516b7d713fe49b50e,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-10 14:56:08 -0700, , version 1.6,,
544,65ecd4c6ba954acd2a314fe89fd8759a546c9e02,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-08 16:31:03 -0700, , testing add proof narrow unit bad fixing narrow unit broke earlier test relied case testing mechanism change putting test break old behavior enabled accident old behavior allow narrowing unit two function value disagreed type turned wrong allowing code unsound list function integer equal list function example,,
545,2107df0c15f3e1642069defb6cf3a556da744a9b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-04 17:30:46 -0700, , testing add missing test,,
546,d1d4f589e08d60ae7cdd3eabc19499d40ca479e6,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 19:36:27 -0700, , parser testing coverage testing add library directory build two library better exercise interpreter look reducing one next release,,
547,4e6c89d2e9e9c8e99336fbaac10a98c50df7e87d,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 19:06:38 -0700, , parser unreachable rewinds jump back,,
548,6505e3b82edec2e75c28f5caff2a0a14caef568b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 19:05:36 -0700, , parser closure atomic rewind rewind buffer,,
549,33280cafa6db527f0a9e4aed94f0be37bda9ac2d,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 16:30:36 -0700, , parser simplify internal search class,,
550,30f6980c59adbc0aabb51dbed40c7c96ea973aed,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 16:06:32 -0700, , parser remove impossible check type parsing check,,
551,ca1792c8361417e61b6da1e6b2325977d915d659,ascinatedBox <FascinatedBox@protonmail.com>, 2018-10-02 16:05:12 -0700, , parser fix crash invalid import path fix 385,,
552,3015afd070fd80ac42c9068927c636333ee3c827,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-30 22:41:56 -0700, , parser single line block longer exist,,
553,80789e1bc111551c0f4baf169ff671ec6b82f212,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-30 21:57:44 -0700, , parser remove impossible check,,
554,4b86162c72bdecd45958107b4e6720420b22f56f,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-30 21:34:21 -0700, , parser reorganize make sense,,
555,73faffa54f5985cf7b8fc013049db5b30f78cd1d,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-30 20:48:03 -0700, , parser flag marking smarter generic speculative case old code reachable generic without generic lol,,
556,f32480e49951ee10790d10c15f1048d86725a607,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-28 00:16:34 -0700, , correct test,,
557,043499f0d94244f654c35b71844cf644f6ca97ef,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 20:19:30 -0700, , lexer testing coverage lexer,,
558,faf25e3b629465e89c7b76691e0582109c0c599b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 19:52:56 -0700, , pkg_builtin testing coverage almost builtin omission file.read_line file.each_line need adjustment done next release,,
559,79384cb7318a561dad9c5ca4a9d7b41980198d53,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 18:57:13 -0700, , list.repeat error message adjustment message claimed acceptable also writing negative value correctly,,
560,8c8d9a2abb3ee8af97aa3ecc655b09402d4f9d90,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 18:37:20 -0700, , pkg_builtin testing string.format report non numeric used incorrectly complain empty,,
561,aee4a5a4ff7c94f8c4f9114690c99aaeccc7737e,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 18:11:33 -0700, , pkg_builtin testing fix string.strip cover fix 384 funny one missing unsigned huh,,
562,1094d670026157553ae1d943a08f3b945d11daa4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 17:12:07 -0700, , emitter adjust coverage,,
563,28b1d66b4a0a29c4dc43733bdacc628f0af4565c,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 17:06:23 -0700, , testing cover emitter keyargs binary decomposition,,
564,77a765b0e4290cbf2c61a1bfa5c2017c8851539f,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 16:33:52 -0700, , emitter remove impossible test keyargs always args,,
565,1c497f74b216b6e422c8be40ae7598fd2587f82c,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 16:14:34 -0700, , testing cover internal random package,,
566,e97d3d128bac35a132714fc35c7bafb7c1be8fc4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 16:01:05 -0700, , testing cover internal sys package,,
567,0c642eecf15d34fc5a5574a332f0f910673272f5,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 15:56:55 -0700, , testing cover internal time package,,
568,2a57555b66d53b76f0faf2efa8371fef4b5502ac,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-27 15:15:04 -0700, , parser testing cache broken import fix 383 dump broken module want risk causing another problem close release,,
569,4a22dd8372ba229a8491273f2e15b7b8bf9aaeb7,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-26 14:25:23 -0700, , testing cover used disassemble,,
570,e7b47ef7823d09ee7c70157078427538cafc4a46,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-26 14:16:18 -0700, , tiny adjustment full coverage,,
571,b10874576fb2f6adae2bbd8463035a40a53a994d,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-26 14:12:05 -0700, , testing coverage st.c csiphash.c hash test,,
572,fbb4ca7f75462b453e2db13638ab305759bc31ff,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-24 21:58:49 -0700, , nothing lily_tm_get remove,,
573,1d93f2c0684ad38a920ab5f07933ec88d058d3db,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-24 21:55:23 -0700, , remove unreachable code,,
574,2b31b9167fdf42b4a42c4beaee60b5d4bcf66ce9,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-24 21:53:02 -0700, , value_stack remove unreachable code used store literal symtab drop literal need dropped section fire,,
575,388ab673b2004bc62cb8522e91a0ed8734341346,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-24 16:16:30 -0700, , pkg_builtin fix accidental shadowing,,
576,e7d4eaef87052d0338134bf07128c50392de2c82,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-24 12:33:19 -0700, , testing fix exception test actually run,,
577,0a0d3f674df02fc768473a6acdcdd6f8ac681690,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-23 15:04:01 -0700, , testing remove verify file double integer check main test suite make sure importing test file two missing along one tried import broken broken since beginning know slipped purge history since assume kind file system corruption silently allowed move upstream,,
578,ad2dd625349afabe7d6a84ab47df6842898bce83,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-23 14:32:33 -0700, , parser testing stop import invalid char fix 381 one pretty bad imported file invalid character somewhere parsing file would stop jump file internally checked found trying add coverage test know happened backtick snuck start file causing entire following set test never added test added make sure occur yikes,,
579,f443a8708aa9a42aef751dc7815a28d5c94e0a27,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-23 13:44:51 -0700, , parser easier simply ask expression,,
580,4184a70d56b36a514faeacc454ebbac8d694f9af,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-23 13:38:37 -0700, , symtab get rid weird implicit boxed lookup thing checked git history part initial checkin implicit lookup think trying make referencing flat enum allow access underlying part know would added want behavior currently able activated class mark right item kind okay though nothing care get rid even like look,,
581,cec7b5d0ffde8706f6fcac4e50892757de64fcf7,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-22 13:59:23 -0700, , lexer report properly empty byte literal,,
582,6cc75aac2f83e93e81cc15299a4089af063c8265,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-22 13:54:14 -0700, , emitter testing better inference call based result result call unsolved inference use try check fails may least useful information trying guarding type class check emitter bad idea really good comparing type emitter changed fail_variance fail_type_check added test depends one existing test needed changed better inference caused better thus different error message,,
583,e38cdb1e291b2bd3f23537fed62e5cdc829b1c34,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-22 13:44:01 -0700, , appveyor turn problem diagnosed use window sure appveyor failing build precommit test use covlib gladly accepted someone know going otherwise fix tackling lower numbered issue,,
584,4d2cfc0a661146a85acff79d9e6dae150e869e3b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-14 00:28:37 -0700, , emitter merge generic solve unscoop,,
585,0ad580af26cf64691984400931432d58eb375e2e,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-14 00:18:25 -0700, , resolve make space unscoop used separate function since return type solving care unscooping,,
586,bcd976b40647d4406fefa0f05b9dd561e92a1d4b,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-14 00:15:12 -0700, , simplify scoop code since one scoop type scoop originally written possibly scooping type acting since use case long gone second scoop type done remove complexity,,
587,b6803a0640fd6eb61e7ed42eea53bffc5cb438af,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-13 22:50:34 -0700, , test always narrow unit fix 380 fixing broke test instead writing custom test trip instead included fix various test along patch explain importance,,
588,72799df4d23102628a320897581cb113be313d15,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-13 22:44:42 -0700, , test option previous version actually wrong,,
589,f34ec5b1d9e45b5061e476228b69f653c2c671c4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-13 22:42:49 -0700, , test option function longer used function existed workaround lily quantify generic global function enough used away,,
590,f7836baddd1dd0018a93b9f9cbed30a53b229b0c,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-13 20:47:43 -0700, , make check_function easier read,,
591,08346d91dca42a2b98f7955b029af9673829f1e6,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-13 20:19:22 -0700, , use base pointer floor current scope reason follows resolve generic usage need repeatedly add type get floor current scope code look nicer add much resolve second swap base pointer call resolve major motivation cherry top,,
592,fe615279f1b6aca0ccdbfc325cca01a876e039f4,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-09 14:24:41 -0700, , simplify line,,
593,eb1a1dd6010bb7db083de3f44b35ea06570e6c0a,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-09 14:23:44 -0700, , remove check always true relic lily_malloc could fail,,
594,228c2744cbf6f87f90ad03cba3852fdc23f8caa1,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-09 14:00:28 -0700, , tuple scoop anymore remove check might allow tuple method really doubt useful hoped would existed,,
595,8b1ca0202b58aafb3ab8bb4b61c09cc21b199ddd,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-08 23:08:28 -0700, , sandbox turn wasm since making sandbox misbehave,,
596,372ff2dcb22e46c0bc15b9104409dc3b9b1c10be,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-08 17:57:15 -0700, , sandbox emscripten need cwrap explicitly exported,,
597,5d9fa61b1cc4b148bc87e8f63f691365f965fa05,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-07 16:38:26 -0700, , remove reference scoop type lexable pulled around tuple method yanked ago,,
598,733fdd6a6026fb1eebe7950e4baa491068d99484,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-04 23:15:11 -0700, , emitter remove impossible check variant variant build originally produced type variant class produce sometimes incomplete type enum code impossible already test test would tap impossible,,
599,09e01505dcaaebceea0d960d9d812173e1063b76,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-04 22:19:00 -0700, , fix crash double calling one arg keyargs fix 379,,
600,2dcbfa62aae4f7a7dd4b039c4640bc3b7f951d58,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-03 22:46:55 -0700, , emitter simplify like exception handling used two different opcodes one including var,,
601,7b5cf4ab59697f27e4993214ae9fcbc93fe7be3e,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-03 22:35:12 -0700, , emitter properly write fix 378 opcode missed transitioning opcodes line number end written improperly code iter standard causing jump patched wrong closure transform,,
602,c3fb43e5674f5cb7c8dabb3de0cd3d9922371e08,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-03 17:39:12 -0700, , simplify bit silliness,,
603,52c52a6c74c614825e4de73f05e0bbf4f28b42a1,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-03 17:13:34 -0700, , fix silly redundancy,,
604,bbf8913b02972f6879eb717dc03f07bb07fc4ee9,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-03 16:01:51 -0700, , greatly increase coverage 342,,
605,6c3310813e15f880c727a9172c494a18f0305cfd,ascinatedBox <FascinatedBox@protonmail.com>, 2018-09-02 01:07:16 -0700, , skip covlib based test fixed test involve loading covlib broken appveyor add skip covlib pre commit test hopefully temporary,,
606,df9cddaac1def72dd249e9c02c2caf7acd2ab916,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-31 16:20:46 -0700, , actually make scopeless shorthand constructor var work whoop,,
607,06b023a02a8ae28c191e2fc4423021dccf2ab973,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-31 16:03:11 -0700, , build coverage library test script use test using coverage library commented working build lily different directory library universally relative spot pre commit harness coverage library build testing directory used script couple test written uncommented test using covlib coming soon,,
608,7fd73e0666a4dfeb64d15442ef9e131067eedba8,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-31 15:49:11 -0700, , allow scopeless constructor var next release 333 forgot next release even number requiring scope clearly break existing code allows scopeless shorthand constructor var work revert next window open,,
609,66e36062e3e4a103b0aa2f19d8d3b5e5a863aff3,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-30 17:51:03 -0700, , shorthand constructor var require scope fix 333 class first added lily member public default followed naturally shorthand var public default well later reverted favor preferring explicit scope member however revert class constructor var forgotten somehow patch back make class constructor var consistent element class,,
610,d0e417260aab1763b930f801f90ceb548d476ca2,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-19 13:36:32 -0700, , value store class flag 327 prior patch value stored class lower bit flag upper bit flag reserved flag like refcountedness mark patch class replaced set base marker value belongs one different group get corresponding value range group also flag group like integer useful quick membership test flag empty variant store class field integer everything else class interest container thus class_id field set patch rough place value pushing could made simpler possibly also potential kind flag originally goal patch get rid problem lily used big endian system however turn may performance potential long run,,
611,c20272704b66b68705f09390ff17b011a2f94089,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-09 15:04:00 -0700, , update benchmark required brace whoop,,
612,9698a3a01e437604a2e15ff3d52374f5e8ad97ea,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-09 14:57:07 -0700, , goodbye old garden old garden good starting point helping discover really wanted package manager language since language grown enough taken time write powerful replacement put link new garden readme,,
613,b05f8ac41ef75aa1b54b15b9aabef6b5f720de44,ascinatedBox <FascinatedBox@protonmail.com>, 2018-08-08 21:34:49 -0700, , readme.md github gitlab lily lang.org,,
614,34414aebc92e6cd1572c2be076ff7ef6a90b5dce,ascinatedBox <FascinatedBox@protonmail.com>, 2018-07-11 17:35:46 -0700, , version 1.5,,
615,37a782fbb32751aad78bfda76c895b288e7daf55,ascinatedBox <FascinatedBox@protonmail.com>, 2018-07-09 10:48:10 -0700, , symtab skip dup checking long string bytestrings longer likely unique,,
616,a849a761c18200b10747f8c2551f38f1171b1737,ascinatedBox <FascinatedBox@protonmail.com>, 2018-07-02 15:02:43 -0700, , add cmake install beforehand,,
617,5e9c081e24fe11ca9d3284cbc1d24fb53782b556,ascinatedBox <FascinatedBox@protonmail.com>, 2018-07-02 14:59:34 -0700, , add gitlab file,,
618,204980004a3feb010436fc31e94f7c683e5eaed7,ascinatedBox <FascinatedBox@protonmail.com>, 2018-05-08 22:50:51 -0700, , api add fix last commit breaking build commit call table defined void pointer couple area api lead compiler ignoring incorrect definition resulting load embedder test compiling crashing hard binding redone additional patch remove offset definition rendered useless loader taken,,
619,7698d691af311f02f75109aaf149779255fd1b64,ascinatedBox <FascinatedBox@protonmail.com>, 2018-05-01 17:37:38 -0700, , dynaload info call table fix 373 dynaload needed loader function long time ago var method loaded different kind value var implemented calling function signature method bindgen creates call table interpreter instead loader existing library source need bindgen rerun interpreter refuse load old library,,
620,94674cc2acc2f510aaec3a3e9fdbbe77619b943a,ascinatedBox <FascinatedBox@protonmail.com>, 2018-04-22 20:49:21 -0700, , block require brace fix 370 rationale follows simplicity style war question brace non brace ambiguity dangling else either brace feature pushing get people acclimated one brace block distinctiveness make lily code look like python brace made hard syntax error since mechanism error fatal,,
621,90f513bab6c3452f53bccd833c284fab0de6bbf3,ascinatedBox <FascinatedBox@protonmail.com>, 2018-04-22 20:19:34 -0700, , fix try fib.lily example reformatting,,
622,7574e4a8b18fa5e0015e95e05bfb99b7ff800bb2,ascinatedBox <FascinatedBox@protonmail.com>, 2018-04-22 17:19:08 -0700, , readme mention unix makefiles window user,,
623,61fbdc58dcc27c74e5f46ba4f93f1171afd4de44,ascinatedBox <FascinatedBox@protomail.com>, 2018-04-13 11:46:01 -0700, , remove dynamic language fix 371 class existed interpreter since early time gone harder justify existence opt requires tag store monomorphic type maybe someone make argument coming back future time lily facility make class useful facility want put language,,
624,978ef3b1e552b9707bfa52c384a5e3040ea06219,ascinatedBox <FascinatedBox@protomail.com>, 2018-04-11 13:40:46 -0700, , add file.flush,,
625,8ab5fb523b4d555cd4c87694ab064d44b07ccf51,ascinatedBox <FascinatedBox@gmail.com>, 2018-04-10 13:54:41 -0700, , version 1.4,,
626,c3d78a5b374ee11c94adcd5a0887affa9be55446,ascinatedBox <FascinatedBox@gmail.com>, 2018-04-08 16:14:37 -0700, , lily random library license issue fixed fix 369 old library licensed using bsd clause collides lily license mit like people able embed use lily however wish without worrying component lily using license requires attribution effort lily require picked library unilicense effectively public domain one drawback change new library allow bit range thought big issue since user randomness need far reaching range,,
627,811b595da38c636b5cdc080ad1972a69e06c1973,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-18 17:32:08 -0700, , readme add test coverage badge,,
628,7413ec06e521f502bf59e836ed600e6f8d0380ed,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-18 14:47:55 -0700, , add build test section lily readme 367,,
629,f9240f3de798dadd6fdb8689fb9e644f01e1496e,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-18 14:31:00 -0700, , add documentation link readme 368 also clarify reference,,
630,70442d17823b5099725ca344387e1bf5e3cd686f,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-06 14:56:50 -0800, , builtin add list.fill,,
631,43dbc69aaec563ddcac34a3746919a1b1c16e1e5,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-02 15:26:04 -0800, , add list.zip plus two necessary emitter adjustment new function make use lily scoop type allow zipping number list value since lily nil unset kind value decided result size smallest list provided first emitter adjustment bring back accounting scoop handling return type second adjustment empty list value check inference scoop type possible sending argument list.zip decided case return unit since seems reasonable,,
632,36efe45b164da62d64e6ecb2280d24413c5cc733,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-02 15:07:01 -0800, , emitter simplify logic around building empty list,,
633,bc12303ec73942c8c2f897ec8fb4502da669d5da,ascinatedBox <FascinatedBox@gmail.com>, 2018-03-01 12:18:42 -0800, , fix window build failure due double escape,,
634,e050223c3073a88cefdd296f9773bb8099982850,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-26 00:47:10 -0800, , get rid still time sorry writing doc coroutines realized gross doe create intermediate builder coroutines get number extra argument getting work involved nudging type system scoop collection could result scoop removed favor coroutine.build one time args single one time arg coroutine want starting argument pas single tuple caller unpack use closure addition hack also made intermediate builder function every coroutine made would function made garbage _and_ second tag let commit reverts work needed open adding work back someone request provides good use case,,
635,798b8ff1e75e86691b62b9bf521aaeda44bf6b61,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-20 23:08:09 -0800, , coroutines last fix 273 coroutine function suspended executed later internally work sub wrapped value providing certain set function type system needed adjusted unroll scoop type since coroutines make use scoop type perform transformation coroutine function stored lily_vm.c since need use internal function new state created hold global state global state handed coroutine state allows coroutine access global var add ensures coroutines use stale table add small one pointer cost handful area interpreter,,
636,1fa3856b89901f4bc53ee5aa798cf45fe6b8fc21,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-20 20:08:30 -0800, , fix list.get crashing index equaling size whoop,,
637,abc2e20f2e798e53f33a67cbf045e4d3c39bb25e,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-15 20:30:37 -0800, , bubble optarg type need vararg information potentially building call type optargs bubble matter calling type wrote adjusted parser type collection using since still useful said collection parser responsible tagging optarg type easy done one place seems reasonable since optarg type one need carry flag type based class necessary scoop may collect optional argument rebuilding optarg status type harder letting status bubble,,
638,cd0743a61f62586d7816c0dfc9f5ad996c76268d,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-15 20:25:13 -0800, , varargs relevant looking type,,
639,faf386dd57397df203453a7c4c4fae78acf51615,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-15 20:02:44 -0800, , remove check null subtypes caller using default self_type never creating type inner type,,
640,25344fad8175a169b2947c265fbb8207ad79a90d,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-15 16:51:53 -0800, , take another shot function scoop collection previously function collect would simply give thumb saw scoop left side fine type scoop left end resolving using later coming patch resolve scoop patch fix function collect argument missing right side scoop last missing argument left side also adjusts optarg checking logic pretty necessary future coroutine work hopefully find way make prettier later,,
641,b1930c904ef229e71fe44218ca6f4e9a0fd8025d,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-12 15:43:23 -0800, , builtin direct grab msgbuf,,
642,2d726e03812369b2e6f11864f28192d8eb301152,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-10 00:28:55 -0800, , drop blasting register used walk clearing register work clearing value lost fails drop value circular still within register good example class instance one property still register tag caused old strategy leak new strategy blast register destroy value still alive new strategy safe tagged value hanging attachment back destroyed register test added using previous strategy caused memory leak,,
643,991d0897e9adc48d455626fb949dbdf929814362,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-09 14:46:05 -0800, , fix instance marking value pretty close name functionality instance creation checking former determine tag value parser tagging omits speculative tagged set instance creation simply tagging value let repeat instance creation tagging value changed flag get confused either flag,,
644,c1e1f766f049db0ebdbaca2620361a8ab055dbef,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-09 14:26:30 -0800, , parser class hold need tag,,
645,165c03ab292392182ae0a0162870d45cdad1676d,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-09 14:22:03 -0800, , parser null function return pre unit longer possible,,
646,f16884fd726790b82c409a8836b6627fb306a661,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-09 14:20:02 -0800, , parser remove double duty calculating flag,,
647,28c3764c7e59db5acae4e19dad4a41ace4937d65,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-08 23:25:23 -0800, , fix potential crash optional foreign call fix 365 crash hard trigger need foreign function taking optargs pas difference number spare register register available pas arg potential say interpreter crash trying clear register foreign function care anyway,,
648,9da37c10193c66110d36452eabdd25f7e0e53965,ascinatedBox <FascinatedBox@gmail.com>, 2018-02-06 19:16:06 -0800, , setup toplevel exist anymore,,
649,9b14279f7145dc50b5de9d7e73b73c173fc3f157,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-30 12:38:12 -0800, , mark list val_is_instance,,
650,30972765ab920447e431bddbb53714318bd6fad9,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-26 14:44:19 -0800, , builtin api hash.get return option added list.get fix 354 hash.get old function added long option even idea old signature required fallback value new signature return option instead chained adjustment complemented adding list.get act manner,,
651,1e2bc258bef517f8b46f8ac3c3cfaa04c6f62c1d,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-17 14:57:17 -0800, , api add copy_str_input option render parse load api provides several function use string input source instead file content depending api function copy content provided problem embedders provide guarantee two use case simulating import within interpreter calling interpreter easily guarantee string pass import deref destroyed hook nature importing emscriptenized interpreter current sandbox fine doe allow import emscriptened interpreter allows import problem occurs,,
652,472e94e8801c565bae55270be5755c3ef03aad99,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-11 12:46:18 -0800, , mit license 2011 2018,,
653,ca5349c66c30db7cf74e0bbe80a0eafe3ff84939,esse Adkins <FascinatedBox@users.noreply.github.com>, 2018-01-11 12:43:58 -0800,362, merge pull request 362 btaskaya patch readme license section,,
654,7a29ce049f51eaf4dded72cea967886b9fc89f38,atuhan Osman TaÅkaya <batuhanosmantaskaya@gmail.com>, 2018-01-11 15:52:04 +0300, , readme license section file readme.md change license section added license file linked,,
655,b4d29ff0bb0e689fd814bdf2e5cf771482dd8ebc,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-10 22:17:20 -0800, , fix documentation comment indexerror fix 361,,
656,aac7b9e02ee0a2a342ce23e54a320e2b4a5e8224,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-10 12:06:26 -0800, , fix sandbox link whoop,,
657,54b50efb250435b6cf2512bea85bd275b6f95b0e,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-10 10:44:21 -0800, , version 1.3,,
658,b350abf4df201e900ce4a63f1d499cec636e7e0b,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-10 10:31:30 -0800, , remove tree markdown doc use lily lang.org doc instead kept date,,
659,39bfd019353993a9f098388edd083f3476c39eae,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-10 10:16:48 -0800, , generic solve scoop type generic allow anything bad generic supposed nailed single type,,
660,baba2f6c549d1a38e84f0419d08d9b7e6a1bb34a,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-04 14:09:54 -0800, , fix import ref failing diamond fix 358 ran problem accident trying direct import one right another cause problem internal buffer state properly stored lookup happened happen causing interpreter complain duplicate symbol,,
661,03141c4e728253e600eae92d29d5b38e6232ac5e,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-04 14:09:31 -0800, , api typo fix comment name,,
662,2ccd6bf88744519e09087ac412a536968ddc23ca,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-03 14:53:13 -0800, , fix nested file able load base package fix 338 prior import worked relative path importing higher directory could done adding base import path however issue recently discovered approach  package mylib src mylib.lily somedir abc.lily library.lily  suppose library.lily import abc.lily latter want use mylib.lily old importing mechanism impossible abc.lily import ran relative adding work package change import system consider beginning package root import run relative package root directory unfortunate side effect abc.lily use somedir prefix importing sibling module however abc.lily import mylib.lily far important sorry close release,,
663,df49bfcff474d9801dad0e52c101ec1ca3a10300,ascinatedBox <FascinatedBox@gmail.com>, 2018-01-03 14:36:16 -0800, , api lily_load_ lily_open_ typo name,,
664,125f552f0fce3e73c2b677d926d9c76057f0bc9f,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-28 12:31:54 -0800, , lexer fix comment lambda use parenth curly,,
665,82c2605ea8881e67b11df697d091d956f5d6a5b2,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-27 12:59:29 -0800, , lily.h documentation correction,,
666,d853c979864998deef67ee7323c0ae88f7a512d5,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-25 13:03:39 -0800, , doc remove api doc use site api doc instead,,
667,48a81548eda414bae181eeb76dd8cb2da0178266,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-25 13:00:34 -0800, , add sandbox example test,,
668,59c2db90ca515c58c0bf1f61a67cb2d209e87ae0,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-25 11:54:32 -0800, , api redocument lily.h new comment meant processed naturaldocs generate api documentation hoped generating documentation way prevent documentation becoming stale,,
669,d967e961c654c0299143731ea03c6178001297ec,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-14 15:06:07 -0800, , parser static method return self type,,
670,c944ac660f33da543df3e4f62a1b5ce69886ec44,ascinatedBox <FascinatedBox@gmail.com>, 2017-12-06 16:46:03 -0800, , lexer lambda scan must resync lexer label case adjustment otherwise local copy label could point buffer longer used lexer label,,
671,0fe4853480042fb796b9564e51694baea04e7ed5,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-30 01:51:43 -0800, , temporarily stop using covlib breaking travis appveyor,,
672,d378cbf7b2f6f0ed18d0bd0c1a665e65f8b29c0a,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-29 15:25:03 -0800, , syntax comparison operator valid byte value,,
673,12e1df261d16d0daf039154923f60e104821387b,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-28 13:29:11 -0800, , error elif else multi line block fix 350 previously caused interpreter lockup single line expression broken bail try apply elif else next,,
674,9667a683c185320f3741de5202be49663828917d,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-27 00:11:39 -0800, , parser fix collect allowing return dynaload,,
675,65dc36cafb507e429c8ada3cca33797513a36f8f,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-20 16:58:08 -0800, , string literal import path fix 347 previously possible slashed path unquoted patch breaking change requiring path quoted upside string literal path mean relative path work coverage test enum uncommented run modification except path change,,
676,2c4742e639082890ef8573e5424c0f0f6413487e,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-16 15:11:43 -0800, , forward definition fix 337 add forward qualifier define forward definition one used immediately resolved end scope defined essential part getting mutual recursion lily currently import var declaration blocked unresolved forward simple strategy making sure forward define use var initialized time also added section modifier tutorial covering forward modifier currently present,,
677,82b4893be34784d88e6b34376ae3e037dee33053,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-15 03:04:07 -0800, , parser drop impossible block prev null check used grep make sure test obsolete likely year possibly whenever __main__ started file block instead call block became impossible reach,,
678,3bac9aed342bc5e5618013615bf80cd6cfe661c5,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-11 23:45:44 -0800, , better idea parsing qualifier,,
679,87fa4bc0fe74788312bbab638f5e1125364b35ee,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-07 14:44:12 -0800, , keyword argument round optargs documentation fix 332 patch barrier around trying put two together reason optargs keyargs present case function call may missing parameter parameter provided equipped deal feature turned time patch add new class lily_id_unset emitter make call argument hole hole filled taking register hidden unset type time foreign function want mix two feature need test argument count arg unset patch also add overall documentation keyword argument work smoothly call feature,,
680,95c600ec7e5065147b168ae82e8eedda7553c9e4,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-07 11:54:55 -0800, , builtin definition need space return otherwise return type mistaken keyword argument,,
681,0ac5d757778b2ec40f58e182163fd1bbd34a0719,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-05 11:56:45 -0800, , keyword argument variant 332,,
682,50c5ecb8d22937661ce582d57f3456b2947e3af3,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-05 11:17:49 -0800, , configurable recursion limit fix 288,,
683,7e583df312789e72c7d93b42829c60d3ce2b31e2,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-05 11:12:24 -0800, , fix shorthand constructor var marked ready first use var non assign call interpreter would complain var initialized,,
684,fcc68dd8922bf071b9536bb334dc7062de1775b8,ascinatedBox <FascinatedBox@gmail.com>, 2017-11-05 10:44:05 -0800, , emitter simplify away,,
685,f50ea9a8415ac420f90a728eaf8b3dedcca00702,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 21:56:59 -0700, , fix crash recovering exceeding recursion limit,,
686,83389f19a7d732d2179b045761c9eca266e7f2b6,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 18:14:59 -0700, , static class method fix 339 method take self first argument,,
687,f6cfe47c72768801d717eb5d541ee8d4964d398a,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 18:10:44 -0700, , tutorial small correction missing public qualifier,,
688,3e8b201e06dbf63d55345f4a0ed94614b6028e25,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 17:10:40 -0700, , simplify self work emitter really fix 346 original fix included invalid read test well well beyond adjusted self work emitter way worked broken prone issue self valid one drawn function block drawing non function block wrong longer bubble question need draw self closure simple doe current function block self,,
689,60727c7cceedee661ea1ff447faf4a878b6ba63c,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 15:37:21 -0700, , parser rename x_handler function keyword_x function entirely internal change meaning long time editor much like keep autocompleting else else_handler file parser open quite annoying fix,,
690,1a9668f6f12f7510473e080077a9c7a52455f517,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-31 15:28:08 -0700, , unbreak window build whoop,,
691,19cea1e7c830351d4b6a1f7fbd20c5ceebad27b1,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-30 14:20:11 -0700, , parser define inside method method fix 340,,
692,4026d973c078107d6e930a2187fe69b5ed2a5158,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-29 14:26:24 -0700, , msgbuf fix optional varargs printed,,
693,e7070754dd9ea899f3f4b7a78a15c6821b77c3b1,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-29 13:55:25 -0700, , keyword argument round 332 add keyword argument language written keyword valid identifier used keyword argument caveat patch variant allowed use keyword argument possible declare keyword argument varargs still unsure mixing optional argument keyword argument allowed doe include documentation future patch address concern decided split work two different patch since optargs keyargs difficult interaction put together,,
694,f77567a5c4c89d097a5c2ce0cf1eb9ba2233a28d,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-24 23:58:12 -0700, , emitter simplify call handling dropping first tree beginning call always arg start source later x.y call method call another method made complicated added lot complexity call running writing gone begin_call cut away first argument source part run involves storing info source call tree loaded info make keyword argument easier merge,,
695,02d8ccb0c59e26683e6d21e281be93534fda3385,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-24 18:12:14 -0700, , emitter send self x.y class member fix 346 used accidental side effect call managed sending self seems consistent language also allows class instance var function class method,,
696,3491bdbd8e65d25d857502dece3be40e61c216fb,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-23 15:10:21 -0700, , emitter tree_method closure possible since class could longer closure,,
697,17275ae282f02d23fbb2dc214fd8bba630f0ebbc,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-22 23:45:11 -0700, , emitter call store info tree calling tree store target sym original one first tree begin_call set calling opcode calling target instead letting write_call figure patch step toward simplifying call,,
698,b421bb0a102b76b9b33a1f963d79c4a8470e0215,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-18 13:53:03 -0700, , parser ordering adjustment inherited new outlier far call work call value get swallowed tree_call pushed bug fix adjustment consistent internals,,
699,9a132f785a52da621f44a1e52c4b2dd2d9bfe52e,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-17 12:59:55 -0700, , emitter func pipe rewrite tree type call keyword args dispatching tree type make simpler,,
700,bc4ffe5b158ca60e7737faa31baab7ab5fd6c6ec,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-17 12:52:37 -0700, , update binding keyword argument without return type binding instead seen named argument,,
701,5d292ba5a3f9e48cb7b32b92902d1180a7c5c50c,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-17 11:46:19 -0700, , parser set type instead returning,,
702,a1a27534da7671ac25eb952ffbf4b96cc6b919b0,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-17 01:01:41 -0700, , parser commonize foreign define creation,,
703,b8c0762e71823792196a3b7548aca9d9e9472f33,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-16 16:35:08 -0700, , lily_tm_make longer take flag use flag question used call type,,
704,bcc96ad45b89e2bd996518465f9ff6cd1a099c2d,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-15 23:53:46 -0700, , parser centralize argument collection,,
705,25841a808aa2046931cde25e837fff7f5b29aba3,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-15 12:26:42 -0700, , shorthand constructor var self init fix 345,,
706,f2e2286b9a6aff305440c6bcf4c574ee025219bf,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-14 12:33:41 -0700, , comment wrong 344,,
707,6c6f46684d1641e2fa15f3945635c10a472173db,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-12 22:22:04 -0700, , emitter grab right kind storage varargs using element type instead list type may cause memory leak low level operation expect primitively typed register list stored primitive would stored ref never get corresponding deref,,
708,743a45e9707b2a869713c4a151fe44258e0af0ad,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-10 14:26:20 -0700, , version 1.2,,
709,aeea7d5041328ca7d76ffb892a4c04ba62a1afbf,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-06 00:23:07 -0700,336, drop covlib test 336 land travis appveyor create build directory directory different cause test work fail two platform lily understands relative import attaching front import path work think something else,,
710,f3173e22704b23bc82d6cb9ee00f99b43c11ace7,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-03 16:17:26 -0700, , add unit keyword fix 312 implemented shared literal value avoid creating new opcode loading unit value,,
711,9a45207a725f9aede5e64c5d435c366b0fd008c3,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-03 16:05:47 -0700, , time lily_move lily_move low level way placing raw value whole one user others use api take part lily_move using pull lily_vm.c static prevent part interpreter using room simplifying remains another patch,,
712,700e27ea502321f37f33d59f214f7907642b3d21,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-03 14:13:50 -0700, , make unit class visible,,
713,5c44562ada2a048a94965c44390f22373ca1d8f2,ascinatedBox <FascinatedBox@gmail.com>, 2017-10-03 00:37:35 -0700, , dynaload scoped enums plus dynaload coverage fix 322 add covlib become home coverage involves dynaloading currently export scoped flat enum testing also added another kind test run within testing directory test kind removed import understand path enough testing dynaload previous patch fixed covered interpolation foreign class reason issue added,,
714,ef6920fdadc1028de1c379b0b23a482c4698c0ff,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-09-29 12:00:57 -0700,335, merge pull request 335 acconut patch fix table content tutorial,,
715,0154d47ef6c56cc5a2a65d4da23c54f447963847,arius <Acconut@users.noreply.github.com>, 2017-09-29 20:51:59 +0200, , fix table content tutorial,,
716,bdee39cb4de188356fe68f3a7d96b9ba16bb650f,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-26 21:43:55 -0700, , special self return work advertised fix 334 supposed return original type passed first argument way method chain include superclass method without losing type information,,
717,4ea01d7fbc10b2ff8aefb3e36d9f72943ca56a63,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-26 21:13:29 -0700, , proof lambda returning self type bad 334 class method take self first parameter necessary self return work lambda guarantee provides proof explaining allowing lambda bad solve issue make easier,,
718,ba3671f140c938649fcf6d56245c1ffb620efcc0,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-25 16:52:16 -0700, , remove unused sym_closed_over,,
719,16216ddea28eeb79d807563bd81036e5861863b5,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-24 14:40:28 -0700, , private class member longer pollute parent namespaces used declaring private member base class would prevent declared inheriting class bad mean class writer careful name pick private var method patch allows overriding private member inheriting class time also provides warning trying call private member upward class instead allowing succeed internally done making nested lookup member longer return private member base class instead caller must another lookup get scope member knowledge lookup succeeds private member done way hope eventually removing class property var,,
720,411d6a304263d85174b9ac939f56928e9d16a6d2,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-23 23:01:35 -0700, , update builtin package latest bindgen latest bindgen add generic information foreign class provides generic information list hash however class manually initialized internally see bottom information therefore entirely useless purpose commit prevent bindgen update showing unrelated patch,,
721,e9f125b077798744ef2a621a63e8a83e94c7be76,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-23 14:49:08 -0700, , parser prevent duplicate class member declaration,,
722,3314c2ec390811ea3e91716c24fc7a7e6e8d1078,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-17 14:55:56 -0700, , add code pointer local protos first make tearing code easier protos bytecode whereas function vals closure second reduce closure need copy undone union around cid_table upvalues setting upvalue count uint16_t feel hacky tried getting rid zero upvalue closure find difficult worth small gain,,
723,b1ebc989a253907dbc6369353745b9474d7d04fe,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-17 11:42:13 -0700, , add prototype struct function value hold full name function well full path module used former simplification around printing name function idea overall use protos future creating closure expensive,,
724,c7882122e1d7062dd74bf443fda3b7ca86f15414,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-16 23:42:56 -0700, , emitter function need store first line instead create code iter walk first line hit use line perfect step right direction importantly allows cleaning function val bit,,
725,c5ad4aafb4c4f2dde3cce8f2e346b143ec54f9dc,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-16 23:32:17 -0700, , emitter write correct line number closure,,
726,317b8d1d24045f9fb6a83a446a83ec707ad7e644,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-16 14:32:16 -0700, , symtab enums variant start reverse enums done collecting variant get real result variant guaranteed sequentially exactly enum allow bindgen generate macro variant using enum parent plus variant position id_option none,,
727,e5b4cfb9873fd880bea46cd0a147580a0ee83710,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-13 14:24:04 -0700, , add rewind test fix 321,,
728,a4cc1568f4bc8e0b6496525d673058caceaa2780,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-10 16:46:13 -0700, , raiser remove impossible code clarify impossible,,
729,508ace9a4fa320ce093e588d2c63d6db238b4211,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-10 16:43:16 -0700, , msgbuf remove couple unused var,,
730,037f1ed13eeac9bce6d763f96b70df5128790d61,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-10 14:22:45 -0700, , add codecov support,,
731,01cf644abbe3b40aa11a15ee99233c1c110effe1,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-09 01:26:17 -0700, , add massive pile test still part interpeter covered nearly much decided merge incomplete set test issue involving test commit several bugfix commits pushed lately result catching problem developing test merging incomplete set test several reason believe low hanging fruit crash varargs wrong type fully picked currently two issue involve test want different commit involve area yet tested would incomplete anyway provides test run octeon,,
732,8aef9cc48b4cf34ae8127e175a217a9ec766e136,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-09 00:54:15 -0700, , msgbuf cast byte value unsigned char printing otherwise value like printed interpolation,,
733,ff194a22e7d642e216c4dd0755bfd5347af3f7b5,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-09 00:50:13 -0700, , msgbuf remove impossible code generic use generic,,
734,68669f66b47df2daa3d30fe7e0b4d3cbfda9d237,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-07 23:03:43 -0700, , symtab add scope member lookup put task restricting scope symtab way parser easily control,,
735,50b4723aca3cbf2be379f21cf2410855114e08f3,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-07 22:31:58 -0700, , parser remove code impossible used creating class method caused immediately added var would later get pulled var chain put class method chain properly short time ago changed method var immediately placed happened two section became impossible execute,,
736,0454e04bbad12a2ec72036dedd422a21b0960751,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-04 14:42:07 -0700, , emitter fix potential crash varargs wrong type,,
737,d759f413948cbd6df9a1190379a999043bb8bc27,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-04 13:34:52 -0700, , away default dynamic behavior fix 324 behavior leftover long time ago dynamic instead back great day type type would implicitly boxed upward example code var would become list dynamic allow push kind value dynamic opt magical defaulting using make sense emitter requires right side assignment always complete type,,
738,bf670ada7e4287e71eaf3eea262d2f229a67f74f,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-04 12:21:11 -0700, , emitter organize assign switchboard helper design unifies common concern compound ops type checking noticed upvalue assignment type checked fix well,,
739,99a499e4b8b774aea0ce49080e3beebc23c3a9bb,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-04 09:50:40 -0700, , emitter fix unquantified solving defaulting dynamic stumbled upon working 324. went unnoticed resulting type never interacted,,
740,04f6a45f6fa0f619053f3dab006b2696a303ac30,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 18:17:03 -0700, , use instead null long time ago function unit returning like doe return type call output denoted null null check check_raw one example impossible test never erased unit added using placeholder also simplifies checking code,,
741,031aa90558c178289259129107c6e6396a4baad6,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 18:12:50 -0700, , internal type global readonly reason create unique class since member,,
742,e9efe9ec384afe0c44c8ecdd2409d481f3763d79,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 17:37:28 -0700, , emitter type_matchup anything relic type_matchup autoboxing necessary doe nothing,,
743,483021da73fedb2fc64e5597759d0b0c0f7cb073,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:47:33 -0700, , repurpose type implement bottom inference 324,,
744,dfb0db7ac093022337620a3b7601ab5f76b86dc1,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:12:34 -0700, , emitter look right place lambda self self lambda always sourced class method constructor fix potential crash,,
745,ce13c68636d4baa89ba825f14fd58ab36fddd2b2,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:11:13 -0700, , emitter fix call error name global var interaction,,
746,0300af98943c37e262f74edfd04f31496ba66f0e,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:09:46 -0700, , expr remove impossible test expression read left right always take right side never left,,
747,ffa934702150cae3150525313a9f1f2653124a94,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:06:30 -0700, , emitter fix loop going back success,,
748,e46615520bc225e39e40892b8a037bdb873ee6e5,ascinatedBox <FascinatedBox@gmail.com>, 2017-09-02 16:03:56 -0700, , emitter lambda eval return last value possible prior code relic lily unit return,,
749,a2ff0c69b5f03c2baf007335b47e41ec0f8cdd2f,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-24 17:45:28 -0700, , cmake require emscripten building sandbox fix 298 bonus ask user often done forgot source environment first,,
750,675f300fe2dc591967abef0fea388c0c7eae9e2b,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-24 17:18:59 -0700, , allow direct import symbol another module fix 320 allows import import strictly module new syntax work every kind symbol except module forbidden aim feature reduce boilerplate like time.time dis.dis,,
751,00fdff49800da3bceb396016b0dd0089152f7fe1,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-24 16:06:45 -0700, , parser make sure set cid table function without attempting create foreign class crash,,
752,d0654ba5f09b73d385657b2052e1cf954d141370,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-20 13:59:36 -0700, , travis please begin using trusty,,
753,302db95f37e95b57443df4915a99d27f777ef660,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-17 23:09:18 -0700, , parser remove writing qualifier non __main__ builtin error also found working octeon debug branch time test failing point removed dot namespace qualifier considering removing time think someone raising error error sort indication error rely solely namespace context example json package might export jsonerror part rationale behavior make package friendly toward explicit scope include content yet plan done near future also hunting excuse get rid lazy fix test,,
754,709d6b6f4f6d28e8352abbe6b7f67a2832a2ccfe,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-17 23:06:18 -0700, , parser allow else complete enum match discovered working octeon debug branch old test suite test failing apparently rewrite enum handling rewrite test suite test lost put new test make sure bug come back,,
755,1fd81b4e39c2a92939ff2b73e59800f271e19dff,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-08-17 22:04:50 -0700,331, merge pull request 331 ibara master add missing include stdarg.h,,
756,fea65dfab4b4405f512f55bd032664f8012a1106,rian Callahan <bcallah@openbsd.org>, 2017-08-17 20:16:17 -0400, , add missing include stdarg.h,,
757,af429f33cdca2b32d528c0167469eb3769e4f509,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 22:55:53 -0700, , fix test window,,
758,8b0497f2f85656c2ce8e48a7e67c056fc1137bf2,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 22:38:25 -0700, , api function actually exist,,
759,0bbd07541d490a1ae304a6049d56af9d09cea3e0,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 22:32:26 -0700, , readme prune link documentation inside repo seems silly readme point last one pruned content show yet,,
760,dd73d09fa6a069656732a7c8f652f85fcff3a235,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 22:30:55 -0700, , doc add embed extend doc site fix,,
761,807dd3e5b80b283b25d346e425325f3fc7e39190,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 20:28:04 -0700, , fix template honoring multiple tag underlying problem end tag calling next token first tag everything getting ignored make sure happen decided write new kind test render need give error noticed traceback included two __main__ call turn parser prep __main__ every pas patch includes fixing since test check traceback,,
762,911af83de9c23894b50147333eef67c4102baee1,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 18:52:32 -0700, , doc add site tutorial correction,,
763,12894561a7b1c5062ad70936020556bb0c405c76,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 17:59:18 -0700, , add doc directory api documentation,,
764,fbbd32fef9c049c53c6195e9ff6034224e170f95,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 15:37:27 -0700, , codeiter stop based offset check remove default case opcodes default case exist hit removing also mean new opcodes accounted generate warning good,,
765,6c18b8eebff5495ecd392dd5db5bc3bb4a1f09f8,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-16 15:23:52 -0700, , builtin print maximum list size bit int 325,,
766,f9e9cee2fa50783638621e5e3d30529f386064f9,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-09 14:26:40 -0700, , import add src package path fix 316 prior import would search toplevel directory package loaded change made toplevel directory package cluttered source file,,
767,e2568c775b22db83f921eeb210e836a63db3500d,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-09 12:46:30 -0700, , add missing scope call test file otherwise failing test incorrectly report came,,
768,f4e8489062ce6af90f67ec4613f946a4d1b6585a,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-09 12:41:33 -0700, , whoop wrong slash last couple test,,
769,f76b712a17e6feee06b041a3da6fb15b593c3c5c,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-09 11:56:24 -0700, , remove default scope class fix 308 add public new keyword language class method var declared user must choose item public protected private keyword meant item question would public first seemed natural choice concise code writing parsekit noticed several time would accidentally leave method public since default actually want method public thought time making default private eventually decided away default reason need remember default programmer must think scope proper instead accidentally omitting keyword usage easily sifted using grep consistency language default scope,,
770,68c71000498e310e85c734d35f0f2c88a5f11520,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-07 19:15:02 -0700, , api merge api header single lily.h misc change fix 318 development interpreter api many idea tried discarded patch merges various api file single lily.h file consider sign interpreter always flux api finally solidified great deal effort,,
771,0caabea68cd66d68ea30f00bbf4ca6c5b93fbbdd,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-03 19:32:05 -0700, , exception handling one single function make control flow handling exception simpler,,
772,a3d78a09916986bb092cd7bf0043bef6663bed2e,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-02 12:31:31 -0700, , store class raised instead raiser step toward pulling raise handling jump dispatching away raiser,,
773,079cb9f3d05dbf44ec00cb02cfe4de4273339f16,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-02 12:07:59 -0700, , rewind make sure rewind raiser jump nothing currently lack likely oversight,,
774,a40d1c1ec4e7af3adf87c7d0c4df5d3757e0f875,ascinatedBox <FascinatedBox@gmail.com>, 2017-08-01 13:20:12 -0700, , st.c fix copy paste oops fix 330,,
775,1baec16fda2cbb135a47dd96e0af5e5bdf8bf6df,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-31 14:13:12 -0700, , build operation must move last fix 329 back commit 9997c7e removed call state merged together variant handling rest call since commit binary tree benchmark broken reason call like check one input register outgoing type variant well problem would show writing code like branch leaf leaf emitter would notice first leaf enum type use result prior build operation would move first code would instead create branch wherein left side leaf branch safety adjusted build ops instead variant,,
776,2e42715ce25f6ac5511ab7ccdecdab607f56b5bd,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-30 10:48:53 -0700, , api add error callback foreign function allows foreign function clean way fixing whatever need without registering jump builtin package hash iteration raise error fix iter count,,
777,5a7f8567d5db241800767e16473cd1251c31ef21,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-29 10:35:12 -0700, , fix incorrect comment register type long time since value included type,,
778,03f7cd84d3f2045be227cfd83609fc31aad48d82,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 18:45:23 -0700, , api one hash creation function rule internal function hash setup comparison function instead one struct allows making one hash creation function instead three integer string one make copy another kind,,
779,d77fda486a0215a3806a2f78f1a07c570c7e9f83,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 18:14:49 -0700, , api use siphash guard hash flooding fix 328 commit hash function take state object first instead commit also reintroduces siphash time api completely hide detail instead making front center,,
780,af6c65eb2748e7ce86c7983c7f519768009d470f,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 13:19:11 -0700, , add msgbuf int64_t value 325 msgbuf used use int still doe exists allow value explicitly bit since lily usually built bit system problem noticed however compiling bit int longer int64_t integer bit int followed another int value second value correct since bit taken bound error message list.insert list.delete_at doe exactly precaution patch also adjusts internals use raising boundary error,,
781,18f7bef4c0cda4de039601fa1ee3befd12cb2dc8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 13:11:19 -0700, , msgbuf forgot mark function static,,
782,4e19c8792f767c053d32b62c3a7c195f4dceee0b,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 13:09:12 -0700, , key error flush msgbuf first,,
783,3e868e4188c7f96ade96121be126629a6b3cf652,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 12:51:29 -0700, , use macro simplify common part subscript get set,,
784,0b8cd4eed54b0149c8f6759a3d87d34d739a96d8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-26 12:47:02 -0700, , parser allow scoop type,,
785,37b1e702d9c85a5950a275f3b7cdb1148fa6c61b,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-07-21 22:21:27 -0700,326, merge pull request 326 jonathonf patch fix remaining reference old python test,,
786,3d00bc71028a82b3723ff28dd447c2966ca8cd52,onathonf <j.fernyhough@gmail.com>, 2017-07-21 08:46:18 +0000, , fix remaining reference old python test test command long exists switch new one,,
787,672d182d9fa2c77f138b4bbcef4dc4b5d2aa654b,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-19 10:29:08 -0700, , fix issue caused eadde9f remove loop_start block first continue using last block start instead deepest loop start second block always initialized code start,,
788,d182aea714a35fa75aad84c8fc9e4669ade78f9d,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-19 08:39:02 -0700, , allow read scoop type fix 317 still scanned scoop type parsekit dis rolled removed,,
789,41b8f93969235795311ba365c83ee49e959e8f15,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-19 08:30:00 -0700, , cleanup opcodes fresher comment simplifying code iter many opcodes renamed similar idea similar prefix comment within opcode file also freshened patch last opcode adjustment time disassemble stabilized side note patch also includes fix code iter o_interpolation,,
790,2d0ea57a42ab5508c140a690161430ab0040bb02,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-18 13:50:36 -0700, , core_types swap type_ cls_ flag type_ flag rarely update whereas cls_ flag seem change semi often put latter top change result smaller diffs,,
791,43bf92c6eddeb88433b50222cbd4b36b02db12f9,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-18 13:25:42 -0700, , msgbuf api lily_mb_flush return source msgbuf reduces getting msgbuf flushing single line,,
792,ec0aef807f8ddbea43a10dbcccc720ab4c7c59f9,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-18 12:59:55 -0700, , emitter is_loop_block used one place remove,,
793,0cd82c1844a18f22bcd57fbbb602fc01c017ba12,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-17 21:28:15 -0700, , think noticed bitwise missing better late never right,,
794,85913214a3b4b46ea5d20cafaa0fe988720d3817,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-17 20:28:53 -0700, , emitter fix missing binary breakdown,,
795,e98d2b426ca8c2d3ca5a155537bd4bfe9731dc17,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-17 18:30:10 -0700, , code iter opcode adjustment get rid special,,
796,1b03fa39a7c9f1d2a939fef95ac145d3feac7a05,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-17 17:33:53 -0700, , redo simplification opcodes around exception pulled near end last release breaking line number line number pulled differently issue longer problem,,
797,206a2427b92b86399303c24b838843c36482d63a,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-17 16:46:26 -0700, , emitter instance creation get flag class information used come opcodes meant three opcodes constructing instance removed usage opcodes still remain however away near future cleanup opcodes,,
798,eba6f847212f8ec4ac35b275655f550d64353352,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 22:43:38 -0700, , emitter merge function block exit one function closure transform longer var whole function block exit one function also occurs dropping var,,
799,690127c214c7a833e6bbf5989881309e2f66bf0c,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 19:19:01 -0700, , emitter closure transform use self var instead rely self always position,,
800,7e31284ec43fc3c77d745028e60137180ae27026,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 19:16:39 -0700, , emitter add raw version sym searching,,
801,f0197d90a33a5a71bca0a83be06a2313219f9097,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 18:46:41 -0700, , emitter use closure data make sure params set previously making sure parameter set done looking var strategy made block closing code awkward final code written block dropped data come emitter closure spot added benefit needing extra loop pas parameter,,
802,f75d39cac6ad31acf846a47d570fe95f2a15ffd7,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 16:31:31 -0700, , parser enum dynaload longer parse_enum building msgbuf send parsing routine bad idea dynaload many problem encountered past class dynaload ran native code bootstrap exception rewrite enum dynaload directly call function needed create variant setup work necessary,,
803,3be3b434057b6728758778421ad7317150eb4b35,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-16 13:16:16 -0700, , emitter add flag block open one field also make easier add marker block future,,
804,bccef5da6315d85f211bfe61cf0f95417a77582f,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-15 23:23:58 -0700, , generic pool use uint16_t instead int,,
805,14ec98c3f4b05b5baabf25486127e6298edee81f,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-15 21:21:04 -0700, , emitter fix unroll debugging whoop,,
806,c860bfb4e6f74ca1049364d1b33cdf44f00a5345,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-15 20:02:52 -0700, , emitter remove type parameter eliminates needing store original call var later,,
807,80c294dc341b24a172e6c7d22a552281260e4bf8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-14 11:28:20 -0700, , parser emitter hide var scope previously emitter stored first var scope entered block exited branch changed would hide block var emitter block instead store count many var declared current scope branch change preceded parser hide block var even better var scope immediately removed instead marked scope hide search behavior relic long time ago stored type information,,
808,0bf1818f2e272ddf5257eca23bb2c0a775ab998a,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-14 11:10:09 -0700, , emitter close register spot depth instead syms previously closure information stored holding lily_sym value emitter buffer allow future patch longer hold var scope another advantage patch well tested u16 buffer instead custom grow checking,,
809,eadde9f517101af2d2f3ab32fbada99c74c0b75f,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-13 15:49:23 -0700, , emitter remove loop_start block used break continue happen nearly often enough warrant storing field block loop block utilize code_start loop_start used,,
810,3217eb02cbf96f406e191d6931ab4674c8379314,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-13 15:08:40 -0700, , emitter function end instead function leave writes code,,
811,dbf70a719ff8c577523a71b8b686f73a54c71c99,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-13 14:39:15 -0700, , emitter longer relies function var make said function longer rely function var active module var chain,,
812,47c54fea2d8bd1f37e8735b1a5d31e0a6a72d749,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-12 21:44:35 -0700, , emitter simplify handling call variant interaction,,
813,4c0c434e76e69e93a8c1f07df53665b3bfb6009d,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-12 12:53:39 -0700, , better default argument fix 289 patch allows default argument full expression instead requiring literal mean storing checkpoint adding function reverse checkpoint side effect reasonable default value optional argument emitter parser token handling updated support optargs varargs function doe change backend function receive either kind argument purely getting parser emitter understand two mix,,
814,f6af49ced48b28780a5054b059697c8e6d164fc6,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 14:30:39 -0700, , parser handle inherited new directly simplify expression get rid expression state instead argument parsing inherited constructor handled function directly allowed simplifying expression_raw longer need starting state since always demanding value,,
815,78a024833ed7be33bf0ae27f987f5362495f2861,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 14:06:00 -0700, , parser close token exit expression depth wrong caller either complain token unexpected start expression demanding value causing unexpected token error,,
816,272935e8f1f73d2f877330538e65f68dcb50cbb7,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 13:51:40 -0700, , parser always quote token writing unexpected token,,
817,74e658bd864c1b447fd7dc28d534c37a6299a9c5,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 11:47:43 -0700, , stack line number obtained code frame longer need carry line number field execute call may fail current frame code fixed beforehand make code valid native function frame result pending line field completely erased interpreter,,
818,933f25f733f1207c4d15af9bdf704d4de7824f16,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 11:31:31 -0700, , move macro execute,,
819,e5a006561417d6e93b24645a94bbc1bfe39514ab,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-11 10:59:27 -0700, , massive opcode rewrite put line number end since lily beginning opcodes always put line number right opcode time code iter walking opcodes used primitive hardcoded table putting line number first made easy find change rewrite opcodes line number end added line number emitter assign optimization count line number always existing preparation future patch make easier get line number stack position,,
820,60f99f40598081f2ff54f5ea91657d26c1fb52ac,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 23:01:44 -0700, , centralize common part o_function native call,,
821,0f7f3d1e939b5e92dcdf8cd3b63e161e539a0d71,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 15:42:07 -0700, , fix check_function test scoop preventing lily dis repo dis function able handle function like list.push really want since code point dis.dis work type scoop,,
822,0120e58daf58bbcf69ee095164e3aa85be2e6c6d,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 15:41:03 -0700, , emitter fix unquantified generic solved wrong order,,
823,8aab1a45f1d207e5c2e22ba073342c00e06f4fe8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 15:37:40 -0700, , solve scoop type resolve resolve function used map generic type solved time scoop type need truly replaced resulting argument calculated simply removed functionality since function remain return scoop type library allow testing api throw test,,
824,cda9fb05f7fd6e33928aba7102e3dd4daf4e7711,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 15:02:04 -0700, , emitter fix parameter passed reverse order,,
825,65fdf3eab5e4752092678eb5aa50ebf6fc977ba7,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 13:39:27 -0700, , replace lily_vm_prep lily_call eliminates duplication making call __main__ use function foreign call use,,
826,c6606b0ae2af81e99440734e84d5c054837541b1,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 11:30:14 -0700, , fix potential invalid read suspect compiler causing helpfully read tree type together since next unfortunately set except binary ops set time make sure invalid read away,,
827,5108a8e9cf6306946c36ec426b360df0a2bfdaf1,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-10 10:00:01 -0700, , version 1.1,,
828,647c1020c56bde03cfc386cf6d3f5528021cecb0,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 20:12:21 -0700, , fix travis warning,,
829,3da06188f55771012e3aa1f7f67517e37df6b0c4,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 19:57:14 -0700, , revert simplify opcodes related exception handling reverts commit cause line number travis build,,
830,e13ecbd5c0dad386248910b0da02a25237308c50,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 17:31:59 -0700, , symtab next_class_id field,,
831,4dcabc3ec4f29f40d46386e7bdfb838f49234797,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 15:37:59 -0700, , symtab remove main_var field,,
832,22ca9c27632a68dc62018f300ec42020a13af1b2,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 15:33:56 -0700, , fix crash resulting __main__ __import__ type,,
833,b9bac5460e241dff3ba247722c6e46ebd7d52cee,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 15:19:23 -0700, , symtab remove main_function field,,
834,514f5d91e1dc78790061a21d94de0d1af0fa0fec,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-09 13:59:23 -0700, , emitter break different funcs functionality hold used class constructor make parser much obvious,,
835,e393c7a4a8b0090a706aabd157c82669de15a3f7,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-08 13:18:59 -0700, , parser push unit value save slot globals prevents globals leaked since value stack underlying globals never gotten rid also simplifies var loader put another value,,
836,3737ffe3117d20c92a8c1325a3a5cf8e66f0386b,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-08 12:35:07 -0700, , parser fix potential crash failing load certain file cmp_len set registered file path causing failure linux import expanded q.so length random,,
837,0874229431334a6f52df7c567ae3c7484b3ee8bb,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-07 12:37:57 -0700, , parser responsible creating var function_vals previously symtab responsible creating var linking somewhere symtab lot necessary init var since symtab still know give parser needed create var would emitter strategy caused emitter init complicated var creation complicated needed new strategy parser responsible var creation includes creating underlying function value native foreign function allowed unifying emitter init function well init function also removed toplevel function parser creating function value holding __main__ instead,,
838,2997a08e444457b6e1aa14c33800baa8671ba206,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-07 12:07:36 -0700, , emitter loop finalize create var parser given step parser make step var emitter always one also syncing read need done use storage instead var difference time slightly smaller memory use emit time,,
839,775d13848e57c268758194827a9222f65733cf54,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-06 00:48:55 -0700, , store symtab field still passed argument lily_vm_prep eventually erased entirely,,
840,030d6ec0980a9cea7731093fe989a1c080a4e6e2,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-06 00:09:51 -0700, , move print fix check parser use couple trick,,
841,7559729aabcc3a78785ba6c52f1aaeed6def8e3d,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 23:33:00 -0700, , emitter make top_var obsolete remove,,
842,a0787d659bafd5a336b2a89bb4ab30ea01d6e6e0,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 23:18:49 -0700, , emitter make obsolete remove,,
843,cccc2fa0b91d88d96dab9b18c4d5a74ab5aa5e87,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 22:39:49 -0700, , remove impossible test __main__ block block_file type,,
844,b77ec726caaa1e5506fbe9c5295930dd1cb24903,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 22:35:35 -0700, , parser decentralize code exit error raising,,
845,795049036bdd6650d89f7c8663e37b4de3901348,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 17:01:53 -0700, , symtab create boolean literal anymore,,
846,f010d71194d68b07ea0e50b44aceda4141642972,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 14:42:29 -0700, , remove variant_members field lily_class,,
847,1b3c7398594cf751dcbcbe5b7ada04a983e8be37,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 14:25:13 -0700, , parser simplify static func check class member access,,
848,41a5fdfe8cbb0c1311c59b12901ef46896c1bf0e,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 13:43:59 -0700, , register spot bit prevents class enums properly item since field set bit also correct bytecode handle bit,,
849,a20ca54a8b9584bd97a9e35a6d5407a7b0a3b435,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 12:21:54 -0700, , lily.c always free state exit,,
850,3c2ec0a4362954db104f9fdf7016daef10f7ff35,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-05 11:53:28 -0700, , emitter remove jump_offset lily_block unused,,
851,18faec6f03e2c3b08e13e73ec75a778e98d24f81,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-04 19:09:55 -0700, , expression state store checkpoint array previously expression state created stack meant one expression could saved time also meant entire expression state kept stack kept creates array checkpoint checkpoint status kept within expression state stack conservative default size used created often,,
852,d13108a92b76418fd0efd46babe5476fe76437f9,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-04 16:48:23 -0700, , huge cleanup enum handling prior match user defined class dynamic went different path parser enum match class match different opcode different strategy enum matching used use difference match dispatch would lay series jump whereas o_jump_if_not class opcodes chained together unifies two path together adjusts emitter provide different set function match handling unifying two path exposed bug match handling fixed added test finally doe away,,
853,3cd445e952d7dd22495b08dbc6c5c67bbb843fd8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-03 11:08:59 -0700, , remove field calltrace user calltrace adjust frame asking traceback,,
854,119f084285ed27bb98a9d52227a74616a5a8fd16,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-03 11:01:52 -0700, , remove assert assertionerror builtin originally added imagined used testing framework however testing framework started lily core work fine without furthermore like idea builtin function could trivially implemented outside builtins module desired,,
855,70a71abf9a1780ad9ba9cca9ab28a5ce8f823170,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-02 12:17:48 -0700, , replace o_less_ o_greater_ instead emitting equal emitter swap left right emits greater greater equal idea borrowed lua,,
856,78e5b449841f505056955e3c5460ea70e6b4f5b8,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-02 01:04:51 -0700, , allow match dynamic remove o_dynamic_cast make typecasts type useless always throw error different special cased allowing dynamic sure want repurpose cast leave since harmless,,
857,3bbd55651548b3ad3751e02b4cd51bfa262073b2,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-01 22:12:14 -0700, , replace class,,
858,e5d2324b2d228510856d79b76e241ec832e189ab,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-01 21:15:57 -0700, , lily_u16_insert lily_u16_set_at macro performs effectively subscript assignment insert also function called inject insert value slide value right result using last one obvious certain crash however trying figure cause difficult since name similar yes happen fixing,,
859,9997c7e175e83a22fe1ddcd14eb26f19294bab62,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-01 17:38:49 -0700, , emitter remove call state call handling call state nice step forward first added provided way call need modify tree eval time gone call state great big structure mess much information contain gained poking source ast right way call work main call body run argument well handling error part well nice side effect call state longer stored stack call value buffer also disposed,,
860,6b57c8eb39688553af4d4030bf65eaedc07c9620,ascinatedBox <FascinatedBox@gmail.com>, 2017-07-01 14:16:20 -0700, , parser make result variant parent self type,,
861,2ad60ff85b0f29907ae5932d385fa39639b9d511,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-28 20:10:23 -0700, , emitter use different strategy call name printing relying tree type instead call state seems sturdier special case also added case new tree added accounted,,
862,26998bf0925850d300d7b4028c7f2e99665284be,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-28 10:22:42 -0700, , replace o_get_property work enums class instance layout difference variant multiple field see multiple o_get_property load upside remove opcode empty decompose using storage free,,
863,c23070a2e4783e3f054e7e9d086e43e29cd5adf5,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-28 10:07:48 -0700, , get rid expr,,
864,d473a17f7bfa9af7442ebd46357e2c1c13749b20,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-28 10:02:38 -0700, , call put result end input call started long time ago api foreign function grab register directly return consistent spot first longer case call put result end make call consistent opcodes allowing future simplification,,
865,00b7a03c962ab2f1f7d0c1d867d8c02f5e1c2556,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-27 17:44:55 -0700, , simplify opcodes related exception handling,,
866,a103a257d1e8c708d756ad1c5b49df42dd3d8089,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-27 11:57:10 -0700, , dead code removal,,
867,d9c5f17a6d8b75ec70f9943d816489fe729375a5,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-26 11:35:08 -0700, , create new lily driven test suite fix 293 creates new test suite driven lily code subinterpreters heart suite test object test file add test case new test suite composed old test merged fewer file use subinterpreters moment involves creation different executable since quite convince cmake build library test directory plain lily executable load test suite run using pre commit test directory resides run actual test suite suite driven lily code downside test suite crashing test stop suite also interpreter severely broken suite simply function hand test suite running single process make easier test valgrind eventually get coverage metric,,
868,b9018adba0d2df040677b8eb371a45d3e3757d6c,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-26 11:05:06 -0700, , lexer add escape character expands path separator current platform,,
869,39c05e0798b9543291f30e6405e26c5ec2fe17fc,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-25 14:15:54 -0700, , toplevel frame must toplevel function else without set calling interpreter outside crash,,
870,3b55873bc2ea4561724e1ba550124adb6fb16a0b,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-25 12:05:06 -0700, , lexer add backslash end string feature rust backslash found end string newline written additionally space character start string counted allows creating triple quote string indented without indentation showing output work bytestring string literal testing added new testing framework coming soon,,
871,3d2e0b9d4ddd98bb0330c344c2bfd858b1f30ee2,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-22 13:59:47 -0700, , know,,
872,82fa160fb9772c058c1d30544364b3df3a6e693a,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-21 17:42:01 -0700, , lexer simplify escape character handling string collection,,
873,9a203287d8da9a5f8bce30c5785b5e6adfbc2230,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-21 14:40:37 -0700, , lexer replace loop scanning backward,,
874,221bbf866621f4a25f321f5a9595c0cd010a6e01,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-21 13:13:21 -0700, , remove ... interpolation fix 313 interpolation replaced call string.format able job done large part simplify string collection interpreter made much complex interpolation,,
875,f91b3260253d962d63f5e6f2a89c9845c7e0f3f9,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-20 12:01:53 -0700, , rewrite large part value api fix 310 idea rewrite came taking peek value api working configuration structure following change made user longer directly create value instead value creation done using lily_push_ pushing container container returned filled language expects container filled returning function added set hash container value stack given lily_box_ function gone creating superclass straightforward lily_push_super put stack end reduce number return function function end single extra value stack thus use new lily_return_top send back important prevents user creating value without using state object open door future possibility like custom allocator ... ever route apologize breaking api severely 1.0 release may small adjustment api future none severe time documentation left stale planning breaking change near future prefer update documentation,,
876,21a9a9f475ba0739274efba7e891c2627a18a0ff,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-18 12:52:39 -0700, , function value closure store local previously emitter would write o_load_closure top non backing closure function instruction would copy upvalues drop local upvalues dropping local closure necessary make sure closure cell fresh idea right implementation calling closure multiple time would lead multiple drop closure input strongly believe may large contributor many closure problem lily faced function closure backing closure upvalues cleared upvalues cleared furthermore upvalues stored unstored function value instead call frame,,
877,396348b4a5ae09f5b706e8d017420bf6166dc259,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-18 14:26:38 -0400, , remove class level closure fix 311 previously class constructor allowed lambda close self allowed modify class member also permissible close parameter inside constructor either case closure would created would stored class behind scene longer permissible close parameter class constructor user want instead assign parameter private class member instead closing self forbidden well class method closure close content inside result longer need create closure class level opcode done away simplifying closure also partially address problem potentially incomplete self case exception constructor stored somewhere global,,
878,b65a9eefa2b8f1aaf2f532650164c550733a8567,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-17 18:10:20 -0400, , emitter remove unused error code,,
879,3a7f784160185d4f8f83094781d6b4e4e4847f2a,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-17 17:42:43 -0400, , emitter lily_block store previous function block,,
880,259c255e9d8be5204fbdbc9232cd84adcb70dd6f,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-17 01:17:00 -0400, , remove tuple.push tuple.merge function.doc fix 307 interpreter longer store docstrings function eventually tooling process native docstrings well library,,
881,462b5df425e88c0666a6cd35cb23b755c2c38809,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-16 20:19:00 -0400, , lily_call must fix register top native function,,
882,19a32ab009d6f9f3fe75614f338eb9b4104b7016,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-16 19:19:30 -0400, , fix extremely wrong trying load resource handle shallow string idea also copying path correctly,,
883,b6de55a3118c66b30d7b76fe910326989b89221c,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-13 02:47:22 -0400, , api add lily_mb_pos bytestrings created without size allowing creation bytestring without explicit size seems like bad idea also removed,,
884,b142c54396b064b7a0e6054cc379fba20b586acf,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-12 17:13:05 -0400, , parser use platform slash fix window build whoop,,
885,31919110ea6a41e1faa752ebae24483b6c303e56,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-12 17:11:25 -0400, , remove dot lily_lib_suffix definition,,
886,546f89c28d9e5b6d231cdee0951dfa5e24288c6a,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-12 13:56:49 -0400, , api greatly simplify call fix 309 call frame carry starting point top register end make moving around frame much simpler benchmarking show clear benefit api around call simplified set next frame push unit value onto stack call write spot caller push value want save return value call write work inside outside lily_call performs call taking argument stack,,
887,c61c98872b22724903606d2793c6193d5dcc18ac,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-12 13:51:34 -0400, , set register count last pas may cause delete value still exist visible register result double free crash final deref delete underlying value,,
888,3a3b1830f8c42cbc11ad00213864a15be872c189,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-10 16:06:09 -0400, , api config includes import hook fix 233 interpreter export set lily_open_ function take path possibly extra data attempt load interpreter check duplicate name already loaded well remembering path tried allows print file named ... error message end path loader try lily_open_ set function also include abstract dlopen loadlibrarya getting dynaload table etc import hook called interpreter try load module builtin registered still way configuring builtin module sandbox ifdef gate around import removed entirely allowing sandbox make use builtin import sandbox import hook true underlying filesystem,,
889,c22561e3994ddddac3d6d6266f66d7dd79bef0ae,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-10 14:39:10 -0400, , remove lily_get_data use lily_get_config data instead,,
890,14011e6305959b63d66a62dc5103ff23848ddb85,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-09 23:38:07 -0400, , rename,,
891,59a4fcf38377a19520f95fdd31f68011e258e2b0,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-09 23:37:36 -0400, , leftover last patch whoop,,
892,f7c61f9051a60f434aaf2e48da79fadd2aa211c7,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-08 22:16:57 -0400, , api put configuration struct back fix 306,,
893,da903e4ac0934b0a898d08b20ce6c5d6163f16e6,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-08 19:16:18 -0400, , lift render func data away lexer parser template information passed parser argument need saved structure somewhere think right move importantly remove lexer needing know configuration render func data parser template reading loop handle,,
894,a7f1ffda4c1b7ef58b98dc188a67f21509fd534b,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-07 23:45:17 -0400, , remove dyna_tools.py superceded parsekit,,
895,31e195c554b6f9d4d75c4ae8eac4818367982b79,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-07 23:42:34 -0400, , remove leaf.lily prototype parsekit needed anymore greatly superceded,,
896,bbaa959055e1bfcbd7223201a2a5f5cd21743619,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-06 23:02:58 -0400, , add link new reference,,
897,0ed96ecba988c837a0e9d51085809ca6a9cf0a3b,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-06 19:13:54 -0400, , add core pseudo package docgen target,,
898,c2e0a0368cf7729bcbaa729357ff82a8df864c72,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-04 20:23:04 -0400, , fix enum declaration binary_trees benchmark,,
899,4d8d039ddf754e335c15026a243b7fd67df929e5,ascinatedBox <FascinatedBox@gmail.com>, 2017-06-04 19:12:14 -0400, , fix time.time.clock signature,,
900,31ab0b6a3b90c0aa6e93cddb49e01f0c67d8c232,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-30 00:22:25 -0400, , emitter restrict comparison ops primitive previously allowed two value type matched allowed code like print print would nothing block primitive using rearranges emitter dispatch make cleaner well,,
901,cf8d74046287cdaaaec45317b39c34f6869fa7c8,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-30 00:15:16 -0400, , fix string comparison operation check case strcmp return ascii difference last character checked checking exactly easy get strange result comparison add file test make sure never happens,,
902,137e3f73d5873d0b0e7c405538d24b8999e9abda,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-29 03:19:06 -0400, , builtin add missing backtick hash.merge doc,,
903,df0a0e341ec323343bd002788768bdf41c6cd25b,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-27 03:34:50 -0400, , big using bindgen.lily generating binding lily documentation binding generation mess step toward cleaning mess doe binding lily internally generated bindgen.lily script kept different repo tool relies parsing engine understand lily definition step toward neat tool old tool dyna_tools.py kept new tool able generate documentation new tool input pretty close old tool expectation migrating difficult also adjusts lily internal loading mechanism previously always looked look lily_ packagename _table well mean multiple table live together single executable without clobbering name,,
904,dea7b883bc3a2742ff1ce5c6b2ee7434c123b7a3,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-18 01:39:01 -0400, , fix code_iter skipping incorrectly,,
905,dfd4590b8d7cdc298ea331b9d5a915988b69c868,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-05 01:35:42 -0400, , readme.md touchups add scoped qualifier example work lily_lang lily add discord link,,
906,ba65b7f2106d905d91bab853046ff6dfd6743357,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 08:36:15 -0400, , place need set pending line exception raise,,
907,28c51a228c4e5bffba01e622f5dc28db68ee0ab0,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 08:18:21 -0400, , fix string.split going infinite loop partial match sample case abc.def .split .xyz,,
908,7608bcf81aca7d6d4b46a1cf30ccd9e1b49ce0a9,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 07:57:31 -0400, , fix nasty bug hash value could become invisible hash value internally carry pointer raw key linked lifetime boxed key hash value updated old raw key updated since raw key used comparison hash would key updated moderately difficult trigger need hash type string string need interned string backing value need deref swept away,,
909,33b4ca53d0c74209ad6f45e1b2a716b56569009d,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 05:55:25 -0400, , implement another mean concatenation fix 305 implement binary join left right side together either side string interpolation used convert value string emitter clever enough join multiple single concat operation,,
910,8e6ebb1a886dd0f6166a707c9a13fede31942056,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 05:16:36 -0400, , expr place function pipe comparion ops precedence,,
911,abc76d942c3c1bd7b24297b88672d475780c85f1,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 05:08:51 -0400, , expr fix binary merge using possibly wrong parent case tree climbed upward active parent equal parent make sure use parent break test get break current code however testing new concat feature found construct like subtle single plus mark center cause infinite loop climbing tree reason turn parent improperly set patch fix,,
912,84bc1a0807886566e63399797f288dcc7e129fa9,ascinatedBox <FascinatedBox@gmail.com>, 2017-05-04 05:07:59 -0400, , ast make obvious binary operation correct,,
913,d334bacfe3c3cde7da3bb16d85973c2d6907da6d,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-30 09:23:30 -0400, , parser fix interaction inheritance shorthand fix 292 specifically interaction  class toggle var index integer class nthtoggle index integer var str string toggle index  would wrongly result nthtoggle setting str slot spot index good thing happen fixed inheritance bump property index running shorthand assigns,,
914,c3f312af7f2c5a6cbab1caaaf527560cd8f43733,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 21:51:05 -0400, , emitter var ... set type none set previously type always carried assumed harmless however user may specified base class type knowing right side inherited class,,
915,d63482fe582a117b12f2d285626213bb1114aa24,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 07:40:15 -0400, , building type keep essential flag prior source sending type base like would carry new type may resolved show obviously unable capture say option integer met error resolved,,
916,414fce551312805acdf3cc6cd20d0a95e252c144,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 07:23:51 -0400, , move fix instance variant getting proper marking long since run valgrind easy catch instance marked derefable leaking super mega bad plus side test still passing wow,,
917,c6d55cf7f63e1a502ef0691d326a52cba0c7e54c,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 06:46:33 -0400, , allow match work class fix 304 patch possible use match monomorphic user defined class prior possible extract derived class var typed base whoop pattern matching assign new var proper class  class one class two one var one two match case two ... else ...  ,,
918,e2db84fcefedd948c5eb9199f490e18a2ed39702,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 04:16:29 -0400, , emitter merge upvalue walking global static func walking,,
919,b58189592f1ed7647d1a36bf9217bf4dc40c848c,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-29 02:31:44 -0400, , parser match start word case,,
920,5d0a6afffa456a862f66dde5cf9f893c155b0f2e,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-24 05:57:40 -0400, , o_raise must set pending line first exception raised raise keyword likely wrong line number top line stack,,
921,bb9b608ebe94f2af5b805108cd4a62c9f6ab6303,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-17 07:17:50 -0400, , parser properly check code exit continue break,,
922,b28d295a88038b5ecffaf07eb5375893af58ddc2,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-17 01:25:19 -0400, , parser fix crash using constructor shorthand optargs construct like var name boolean true crashing var type set optional argument shorthand path,,
923,dc03f3e6c77098b463fecfc79af47b71feb9ec28,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-16 16:05:33 -0400, , lexer property word name reloaded hack lexer actually working like far entry push pop fix case property word dynaload would fail strange error message example added previously complained property class test trying use property,,
924,d73dc8b2649f9b6ed7c24689e16346f423357d93,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-04-09 18:05:43 -0400,303, merge pull request 303 mc10 patch fix typo comment,,
925,b216d481c06cb315b1496180ca0c13330e24b51d,evin Ji <kevin.ji@outlook.com>, 2017-04-09 13:15:12 -0700, , fix typo comment,,
926,bcf23f1bf553e6576a56fe8893527af901c3d1d7,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-04-02 13:30:10 -0700,296, merge pull request 296 mc10 sizeof replace sizeof var sizeof type,,
927,87aae119fc36d9878f4ae7c4da0cfc46d264bf5a,evin Ji <kevin.ji@outlook.com>, 2017-04-02 00:48:25 -0700, , use sizeof var malloc realloc memmove future proof using sizeof type,,
928,5410316f147e784199f641318828ab65f564733c,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-04-02 03:10:20 -0700,297, merge pull request 297 rurban check_target add check target skip cxx test,,
929,6ed2e8b6f6a10645d56ca1000c35e2651c45d24f,eini Urban <rurban@cpan.org>, 2017-04-02 10:00:06 +0200, , add check target skip cxx test,,
930,9650b586e85e3b2af17746e5a3dd0352ae165ee8,esse Adkins <FascinatedBox@users.noreply.github.com>, 2017-04-02 00:18:04 -0700,295, merge pull request 295 mc10 size use size_t return type strlen call,,
931,25fde63f36470553f8b34ff330a05a024ae80c05,evin Ji <kevin.ji@outlook.com>, 2017-04-02 00:11:34 -0700, , use size_t return type strlen call,,
932,6da0006eda9617bc9c0b61db2fd786f3470367bc,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-01 20:50:19 -0700, , fix buffer overflow matching lot variant got,,
933,dffc38e7f574c749df4e10298d649247f19c01b8,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-01 20:45:05 -0700, , malloc like realloc also fail,,
934,fa6eb637b2292bf8925663b4aea00e4708706941,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-01 20:32:58 -0700, , emitter made free,,
935,f03f3e4bbde4ce8b96d64816b460f6abd9ba9687,ascinatedBox <FascinatedBox@gmail.com>, 2017-04-01 20:28:54 -0700, , u16 make u16 inject grow check consistent write genuinely surprised anyone found buffer overflow ... regret,,
936,4eb9d7eae6063d22f27b6a522fb60c60d0d1adae,ascinatedBox <FascinatedBox@gmail.com>, 2017-03-04 17:12:28 -0800, , fix parse_expr sourcing repl result,,
937,2c91f64e8244d945392613a9f2f2f31508f01f5a,ascinatedBox <FascinatedBox@gmail.com>, 2017-03-04 16:08:07 -0800, , dyna_tools.py generate broken inits,,
938,76bd88cb58f23e76e42dde433cf32d972f56e019,ascinatedBox <FascinatedBox@gmail.com>, 2017-02-02 20:36:44 -0800, , fix tutorial link readme,,
939,f6be673f7bd2b2378492c293c187ffbc0536ed11,ascinatedBox <FascinatedBox@gmail.com>, 2017-02-01 12:34:26 -0800, , long last version 1.0,,
940,30221e74fd1e3af225e468668fd023897a33a4f7,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 14:11:44 -0800, , api first arg const current implementation fputs apache ap_rputs take const char,,
941,101c8fe03ab2987a5bbfd0816d44ca220d9f7459,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 12:28:19 -0800, , list.fill list.repeat plan list.fill,,
942,9795b83823d25f0a7a7f1925c175533a28a2f184,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 12:24:15 -0800, , update function name recent dyna_tools change,,
943,330828079c1e31fe6703a6afb3d1ff96b47f0188,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 11:08:52 -0800, , remove manual see new site,,
944,1ae1babf8968a17abb7229159dd18983eb60cb23,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 04:10:05 -0800, , freshen readme,,
945,8a96bf4960ac1a7a361b1f00d01a18cadc564595,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 02:50:58 -0800, , garden use latest version default chop lily prefix many package valid name import lily removed prefix also brand recognition garden also claim always drawning latest version instead version,,
946,9b715bfe35dc18426a26b50929520acc99238e5e,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 01:58:59 -0800, , mit license 2011 2017,,
947,9186bb83d5a6f688abb6dc4a8e1e6faef129a8d0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 00:24:25 -0800, , change file suffix .lly .lily apologize .ly originally .lly close enough .lily irks,,
948,0ca99218f8bb15c1b9cd3d00f5aad482285852aa,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-31 00:02:12 -0800, , garden use import,,
949,28d3345956b08e41768fd3ce6dd42d0b95e98ada,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 23:05:02 -0800, , dyna_tools add prefix function otherwise loader use lily_ package_ func wrong put extra underscore loader interpreter agree find function,,
950,03fa888f3ac00ed005208ea3d9ee6a82619daa7b,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 21:14:38 -0800, , api lily_get_msgbuf lily_get_clean dirty_msgbuf small problem occasion instinctual need clean msgbuf right getting know lily_get_msgbuf doe yet forget call clear twice small problem like solve 1.0 remove _noflush suffixed version replacing two done additional step dirty_msgbuf return pointer prevent accidentally calling getting dirty buffer,,
951,e5632d5c478fc282887c5d2397ec05d2c323ada0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 20:51:45 -0800, , remove unnecessary comment,,
952,75aa8d23b72271814e19356ebbc2eba7ba106ef5,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 20:24:25 -0800, , const ify last argument lily_parse render_string,,
953,29aa2a1d5bbe0dc228c9128c8f1be9bc36a59aa1,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 17:49:00 -0800, , enums require comma every variant last omitted long time ago sake simplicity looking language kind divider different variant include support trailing comma though come another version language,,
954,c8bec88ed31335178fcafe395a49c87f4c43956d,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 15:54:23 -0800, , exception dynaload resync readonly_table,,
955,161ec713701cadee0d807087c212471ab71400d3,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 15:18:04 -0800, , fix file.print opening read instead write,,
956,c5279daa84200a29a5b6072d239d512ff3242d47,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 14:11:40 -0800, , add end lexer based error traceback fix 243 like consistency,,
957,eda1b757352f323bbc2b81b25a70533833c8ada4,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 14:06:37 -0800, , parser add const avoid warning,,
958,850e7153ca24966f703b5e66d84ceee90c1cae93,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-30 01:16:14 -0800, , fix crash non embedded foreign library needing loader embedded library different path loader get registered dynamically opened library checked loader relying one would result crash,,
959,70ae76c563c043a50b2da826cd6adaee3dfc16ad,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 19:30:22 -0800, , api escaping string msgbuf sure flushing msgbuf start right caller want accumulate reason however make sense existing use case added mod_lily pretty dire need,,
960,dbecd61d1161b3841bc7487e6113a84a9bb266c5,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 17:10:18 -0800, , add benchmark sourced wren language fix 191,,
961,1010062a3bc68421e52efa6a40f7815c98011f6e,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 16:55:43 -0800, , cmake default non window dquick_build added suspect people interested trying lily first time implicitly want faster executable make pretty big difference benchmark default added quick_build flag non window side set skip using using rather faster build add window side know relevant flag use window,,
962,e9ea7d797a60b8624547274ce7d89684a55e1f16,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 15:37:41 -0800, , sure,,
963,68fe91e78e7d27def576ee060b4d8ad073f851db,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 13:51:35 -0800, , fix hash printing builtin looping function around,,
964,f61e0310d71314c95e5b63d41ca86a5ff5f30bf6,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 12:46:45 -0800, , syntax scoped enums scoped everywhere fix 211 consistency writing enum.variant returning enum write variant match optarg,,
965,f939e452cc5884687f936bd25d51d4540d8f7c6f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 02:35:28 -0800, , syntax rearrange operator precedence function pipe equality equality entirely grouped together bitwise operation grouped,,
966,149b2cc63bad40d36953b0e008b2dcc328226235,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 02:04:29 -0800, , api either result lily_file_for_ value api shuffling many people rightfully heh mentioned past either ought called result instead left right baggage name really convey purpose waiting good time think either left right result failure success respectively central api function gone place lily_file_for_ produce raw file success last two change lily_push_super put encourage proper use moved string handling function,,
967,429ec8a03934aacb22b1976f74a0f389955ede05,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 01:18:19 -0800, , syntax make dynamic print like instance make dynamic focus opaque container moving value use need,,
968,74bf5d3b8962a404cb4b9d04fb8c76272c48a6c0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-29 01:14:57 -0800,1, syntax dynamic pointer equality long time ago dynamic called back object transparent container value assigned would implicitly get wrapped made sense used call feature defaulting like dynamic explicit want make necessary evil give sucky pointer equality way comparison throw runtimeerror mind still possible happen need deep container,,
969,7d1a9b8844212a48572bbf92ac520b8803675e0f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-28 19:55:52 -0800, , syntax enums scoped use scoped keyword previously enum scoped contained variant recently decided like really annoying change one kind enum another enums handful member problem add quite annoying look weird compared language using keyword make distinction easy discover grep grep enum look scope existing precedent using keyword way language protected private qualifier also fixed dyna_tools.py scoped enum possible,,
970,c2727be22e21b8150a3a0eff4c4b6d32522b31c1,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-28 19:07:41 -0800, , dyna_tools wrap dyna index oct index otherwise subtly break strange circumstance,,
971,908b156c8e1329d568eedc6dda5737eae01d1fb0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-25 23:24:01 -0800, , api make option struct internal option created private interpreter get set option done state instead option structure eliminates problem ownership regarding option structure option configuration take place lily_new_state first parse render call,,
972,5d6e16eaaa7bba5ddac8fd9adabd4acc1aa2a161,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-25 23:20:05 -0800, , parser try print frame whoop,,
973,89f6c955a56621684171dbbd896adc6d0e8cf48a,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-21 17:10:21 -0800, , api rewrite lot value api fix 291 massive thinking centered around lily_api_value value transferred interpreter toplevel nameless frame receives globals place __main__ fix broken assumption __main__ always entered interpreter called directly outside parse render call reserve register temporary new set function lily_box_ take raw value put temp temp used place raw value different structure behind various container list dynamic tuple instance variant merged container may oversized list list never need marker allows uniform get set api speaking lily_nth_get set take place previous getter setter different container excluding hash container hold class move instance variant copy value class allowed creating new function make left right value added function check arg right turn allowed removing hardcoded none left right  dynaload take state get option state added remove need dyna_ function generated dyna_tools.py also longer doe dynaloading var callee finish push appropriate kind value creating new value also removed interpreter responsible creating foreign value also destroying destroy function focus content embedder put value two change allowed making allocation api internal allocation api made internal easier adjust lily allocation work future versus caller directly calling lily alloc realloc free api code iteration changed int portable last big breaking change 1.0,,
974,b2731d3db080be4e440becb860f7610fef333d0d,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-21 16:07:11 -0800, , use lily_mb_sprintf build trace avoid,,
975,2cd7c77db16035e6872a532e0193c1d16979a22b,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-19 21:04:55 -0800, , var made variant decompose must stay local,,
976,eab22ba14bcdc4d484bfa49350e2c51f938db2b0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-19 13:50:12 -0800, , remove comment really useful,,
977,4e6180ef1dc16a811359227b5999b9948608231f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-18 03:50:14 -0800, , store frame return target previous,,
978,a3e9af72baf677ce49bbab95d9ea2568cecf939b,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-17 23:07:20 -0800, , create toplevel frame hold globals __main__ always entered embed example called globals reside anymore right,,
979,a87c942c85a91f2965972288602d5eeffce56b44,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-17 22:33:39 -0800, , forgot remove whoop,,
980,4e33d65c4a4a1aa4a89e0696d3c444e5ca8d5b91,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-17 21:39:49 -0800, , use current frame local vm_regs dropped,,
981,2751029e7c2315599cb34b070a9e86c0d7f9fd91,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-17 20:58:36 -0800, , catch frame need,,
982,942f63890fd10ac30b0193869ddacdbd330a48a0,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-15 12:17:50 -0800, , remove num_registers relying per frame total_regs,,
983,c522f39bdf4ac74d87276a85d585215be267799d,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-15 00:33:51 -0800, , api drop think would broken,,
984,63f43d4c64bd8f4efa034895d2df45fdf2233e1c,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-15 00:10:38 -0800, , builtin package using num_registers poor example use lily_take_value,,
985,42ea9649aece7a2a96909b14632d9cfae8a6e75f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-13 15:21:15 -0800, , api rename lily_result_ pop drop lily_pop_value take value stack throw away lily_take_value hand value handling result handling top value stack,,
986,d80b67c7ec5e02899bbe98b559070a82bd12d119,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-13 15:15:49 -0800, , fix eager search replace,,
987,0086f180ac01ab48ca4d2a99944dee428ff11e61,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-13 12:17:49 -0800, , fix calling drop value result accumulate improperly drop register,,
988,b13b97351659047ee7f164ae188ea8c0eb0d338f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-12 13:45:04 -0800, , fix sync check loop temp assumes __main__ hold globals changing soon,,
989,a1307b7a625ebfbaef8eab0cee226d60c860c9c2,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 19:49:12 -0800, , set __main__ offset main field valid cause invalid read embedding demo read come __main__ offset used calculating register pick directly called function take,,
990,01200e7ef2eef1d6afeff2e7b3b32685e06b8856,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 18:12:35 -0800, , simplify __main__ teardown remove wrong comment,,
991,fc1bde9b517a88674388f088841a67014c765e03,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 17:53:32 -0800, , remove leftover build_value lily_call_frame,,
992,0126b00fa653c08cb9290ab73c7ebb2f23f05220,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 12:24:49 -0800, , api lily_render_,,
993,8c8fe328eb648b62a6c7931cf1cb2b8213acf866,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 12:02:58 -0800, , api lily template system html output change name around reflect,,
994,20c52a38f8f8db3c6de430a4faa34bea37a0f93e,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 12:01:14 -0800, , lexer remove intro comment almost entirely wrong,,
995,f293c9bb5574cbc6e9b9c601288b6f9f160af7db,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-09 10:23:40 -0800, , lambda use parenthesis fix 290 bulk patch rewriting lambda use var ... instead var ... reason done driving force behind patch consistency easier close expression contain parenthesis instead also consistent feel curly brace focus block whereas expression use parenthesis made slight adjustment lexer lambda interpolation loading yield corresponding end token instead generic eof done lexer mismatched curly brace case parser pump back proper unexpected token,,
996,31036e1ee321d2f7e7edfeb26709e3e8d13730b4,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-08 00:50:08 -0800, , lexer simpler approach tag mode management source adding template mode entry exit handled lexer function called beginning toplevel par remove numerous mention tag mode scattered throughout parser opening file string condensed handle open case except trying open file import failing acceptable opportunity refine save post 1.0,,
997,888686e37d6d4f5ac4b8957dac0e92951f820a46,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-04 20:40:00 -0800, , parser touch token parsing lambda body already checked never trigger token grab used,,
998,088ebe5898972649fa6a11258f6fa148ec69850f,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-04 19:48:14 -0800, , dyna_tools.py generate dyna_id_ macro properly whoop,,
999,04ff195cdcebda68a08295099d674624719fd826,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-04 19:03:02 -0800, , create lily_api_dyna.h hold function dyna_ extras_ file need,,
1000,75e9f40132d5e3218a1f902693b39174e25a087b,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-02 19:59:33 -0800, , parser lily_new_state create default option null passed,,
1001,75ebeaa212946bb49eb841713a7899d2269ac190,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-02 17:41:17 -0800, , manual add alloc manual,,
1002,99859f180816db31888d1cd1147c51eac86fdb59,ascinatedBox <FascinatedBox@gmail.com>, 2017-01-02 16:13:21 -0800, , msgbuf use prid64 integer value render properly,,
1003,e736637dd4ed100f38998f082d4ebbeac95b9a72,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-30 18:28:25 -0800, , add basic built time module fix 169,,
1004,d1df2252c302abc0d69c38a3aa56add3a337b0e1,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-25 12:41:54 -0800, , make actually work add,,
1005,8d9e8e761315407966a211baf71c34275026224d,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-25 12:29:08 -0800, , implement compound ops,,
1006,41e2a68fa01b57701c8e6e5eb7f5887b1d2a57a1,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-23 12:09:15 -0800, , randomness fix 167 much great work improved later randomness blocked many rosetta code demo,,
1007,0120bddfda0c88967dd099438086b75e4d3e6e97,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-20 20:58:58 -0800, , dyna_tools.py class fix output line,,
1008,243bedbd616b96ca8c7cfc3dcfd75ae301f6101e,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-20 12:17:38 -0800, , add file.read fix,,
1009,54e7e6d27fa9e53eaf26ff5aeba49fd293d30e77,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-20 11:33:39 -0800, , add,,
1010,a28e0f071e23f006eeae31f210d94bcce6719d7d,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-19 17:26:07 -0800, , add list.slice complement string.slice semantics,,
1011,ca0b6c5dc3a20f685c1b04687e91e1b6bf5dbbf8,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-19 17:20:29 -0800, , make string.slice negative offset consistent python,,
1012,e2a4c72fb9b8261363dd2cb870acdcccd2103b92,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-15 15:39:49 -0800, , add string.split,,
1013,f1398afd6d22d92f807d11967ce0beb6f6db84b1,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-15 13:48:27 -0800, , fix dyna_tools.py handling optional negative integer value negative sign removed breaking function dynaload,,
1014,f08de8fd93bb33c106c88ce0617040063a156eb5,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-15 13:01:43 -0800, , string.find take starting position default,,
1015,6b8db8b888bc6f1f1499e339652011b711012ef4,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-13 16:10:55 -0800, , fix implementing wow,,
1016,e0b3f7dff4473189aad150609463b4d19ac6463b,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-11 16:57:20 -0800, , add string.format stevedonovan lily extra thanks add python inspired string formatting replaces one argument passed,,
1017,ba4b3d167eb7a0f7c454a3984292153c6b68b66d,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-10 12:45:26 -0800, , add assert throw assertionerror failure fix 164,,
1018,8803dea6acea9fcb3e8c73a97504ee7bce770e25,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-07 13:10:38 -0800, , fix var crash,,
1019,b4eae744a0109c3762206171dbbb80c039ef8146,ascinatedBox <FascinatedBox@gmail.com>, 2016-12-04 06:07:44 +0000, , properly build lily standalone executable library,,
1020,bc8b239495c55e3b85bf54bb62bd04999ce56f4f,ascinatedBox <FascinatedBox@gmail.com>, 2016-11-24 21:43:50 +0000, , parser forbid within subscript,,
1021,456d7325e7430cc55dc0ee24da4ebc7300d81f01,ascinated Box <FascinatedBox@gmail.com>, 2016-11-23 22:49:11 -0800, , build lily shared library break window ... fix break apache depends lily shared library consider emergency fix figure proper patch,,
1022,49e1ae64f8abf019df02b6ea1a2c133f420429ff,ascinated Box <FascinatedBox@gmail.com>, 2016-11-23 13:12:11 -0800, , parser send f_scoop_ok type build,,
1023,abbc9be9853afafe2d6c4d518d72381d00c928cf,ascinated Box <FascinatedBox@gmail.com>, 2016-11-22 14:24:46 -0800, , emitter use type_matchup solved argument cause narrowing forgotten break function .each_byte print print narrow even worse generates error message saying function byte expected given,,
1024,75b14f500063346165b97b5798d83128e76092d1,ascinated Box <FascinatedBox@gmail.com>, 2016-11-22 13:01:57 -0800, , prevent larger function assigned smaller one,,
1025,aca356e1b1c277a7eb611cf68471e96a86992661,ascinated Box <FascinatedBox@gmail.com>, 2016-11-21 12:35:57 -0800, , add,,
1026,8879556d6e9dec0661b03b09464dcf69c99e5bcf,ascinated Box <FascinatedBox@gmail.com>, 2016-11-21 12:33:19 -0800, , parser fix literal unwrap checking allow testing next commit marking two string value beside error within list literal true outside fix mark done saved expression,,
1027,ba67eef5f42767868cb996cecea29732aae8e898,ascinated Box <FascinatedBox@gmail.com>, 2016-11-21 12:02:15 -0800, , fix single quote working lambda,,
1028,aa33b0efb8375f833c4c4a522af88ef1ac8bdbcd,ascinated Box <FascinatedBox@gmail.com>, 2016-11-19 20:34:06 -0800, , sandbox fix breakage caused option api change,,
1029,ceb5e318d31166302f7f86da9e512dd7dbb050a2,ascinated Box <FascinatedBox@gmail.com>, 2016-11-19 20:27:06 -0800, , docstrings last fix 127,,
1030,f068a49f6270581ee1972517827e763661f8f76c,ascinated Box <FascinatedBox@gmail.com>, 2016-11-19 11:23:43 -0800, , api bytestring operation take string,,
1031,69c90163bb608c58dac7d17706c402e3addd3925,ascinated Box <FascinatedBox@gmail.com>, 2016-11-18 11:37:30 -0800, , parser var check comma stop prevents var 10.to_s print var think could start another expression instead let statement handle part var worry comma,,
1032,c873b715e3f3daf4d1b15861979c4f07c589bf16,ascinated Box <FascinatedBox@gmail.com>, 2016-11-17 09:30:42 -0800, , lexer size need,,
1033,38f2e03f5f2c21b1073d3dcbc1cbc46dc2d00e9a,ascinated Box <FascinatedBox@gmail.com>, 2016-11-16 12:33:38 -0800, , api lily_op_freeze freeze option parser start new api function prevents modification option parser working hand parser owning option used initialize,,
1034,f639ae96564ea302b8dc2ada68de0eb3403d9419,ascinated Box <FascinatedBox@gmail.com>, 2016-11-15 23:53:09 -0800, , cleanup forgot sorry,,
1035,4be6d979e3afc6a1591e2e4108cfe19ec67f5059,ascinated Box <FascinatedBox@gmail.com>, 2016-11-15 23:32:41 -0800, , api make lily_options completely opaque use prefix funcs first pull representation lily_options entirely within exactly like lily_msgbuf allows option configured using series function thus allowing underlying option representation change needed removed field specifying option free parser parser always free option idea parser option,,
1036,a4c27481a099b62fb9b3b8cf969ddcb2b753eee8,ascinated Box <FascinatedBox@gmail.com>, 2016-11-14 19:38:16 -0800, , lexer simplify comment handling removing true group cc_sharp mean always,,
1037,602f702282e795defdf82eda01949de31c47d073,ascinated Box <FascinatedBox@gmail.com>, 2016-11-14 19:20:05 -0800, , emitter remove useless include anymore,,
1038,9ed9a706e0a1f99ff271cde132b73664e9bf3ff8,ascinated Box <FascinatedBox@gmail.com>, 2016-11-14 17:40:32 -0800, , manual add msgbuf manual,,
1039,efded0de0030dc71777bd0871b3643c4411659a2,ascinated Box <FascinatedBox@gmail.com>, 2016-11-14 17:36:05 -0800, , fix lily_msgbuf extremely bad reallocation strategy power much better exact size,,
1040,9cf382bb7187715d07bb07c3fe6276c395c81a06,ascinated Box <FascinatedBox@gmail.com>, 2016-11-14 14:51:52 -0800, , api many msgbuf adjustment prepare api documentation lily_new_msgbuf take starting size assuming byte enough everyone rather silly  lily_mb_sprintf return const char lily_mb_add_fmt used _sprintf _fmt_va longer accepts first escaping string internal call second indent last user show third errno caller handle making errno string custom one left type lily_mb_add_fmt broken support modifier broken worked numerics anyway added escape modifier support broken support give false hope much api presented useful outside core made internal msgbuf fetching function reference moved,,
1041,301d20e86fa321e38edfaf6cf6f4baa6ec5daf0f,ascinated Box <FascinatedBox@gmail.com>, 2016-11-13 23:19:15 -0800, , use name manual whoop,,
1042,9ae3d9d3f45390ee9e8ee2181a3ceaadc107d36e,ascinated Box <FascinatedBox@gmail.com>, 2016-11-13 23:18:22 -0800, , add extending_lily manual,,
1043,85ca6c10618cc5751cc46c2e63b9bf2017e3c723,ascinated Box <FascinatedBox@gmail.com>, 2016-11-13 14:35:50 -0800, , dyna_tools.py extra variant enums,,
1044,b096981972359dd971cfe6ac9736e9f3c518db01,ascinated Box <FascinatedBox@gmail.com>, 2016-11-13 14:14:24 -0800, , dyna_tools.py extras_ macro sorted organized,,
1045,424214d1c5d61d9f1ef977e72bf4e32adab545d9,ascinated Box <FascinatedBox@gmail.com>, 2016-11-12 22:41:41 -0800, , dyna_tools.py include cast setting destroy func destroy func say take generic val afford specific annoying destroy function need cast generic val especially type long,,
1046,49b8373b7cd8d1a85ed23220616e26ac7cb7fef4,ascinated Box <FascinatedBox@gmail.com>, 2016-11-11 23:38:34 -0800, , create manual directory first manual,,
1047,85c21b86908fdd23435ba6afdf493ed15cc41a4e,ascinated Box <FascinatedBox@gmail.com>, 2016-11-10 20:04:57 -0800, , api macro type error unloading three level macro annoying,,
1048,a1b0426d01b2d80273fb2e86d3cb26cf17e9a09d,ascinated Box <FascinatedBox@gmail.com>, 2016-11-10 16:25:59 -0800, , api forgot split bytestring string apart sorry,,
1049,ce65d48ea0fb9affb0c44e282617d0f67f1ddde7,ascinated Box <FascinatedBox@gmail.com>, 2016-11-10 14:58:44 -0800, , template mode render newline 276 easier user add newline take one away,,
1050,704c4859b27762b57f34a0c2b24843d28c6e1f60,ascinated Box <FascinatedBox@gmail.com>, 2016-11-10 13:46:11 -0800, , add string.replace,,
1051,f4fb07739357e3254cebcb49dd4865fc2a110df5,ascinated Box <FascinatedBox@gmail.com>, 2016-11-09 23:41:31 -0800, , push embed example core fix 283,,
1052,e3017b66a5565c876221199c7e0f7505b80645e4,ascinated Box <FascinatedBox@gmail.com>, 2016-11-09 16:53:11 -0800, , remove apache core 283,,
1053,670837bd6537fe63afdec06af4c75ea42db61cc0,ascinated Box <FascinatedBox@gmail.com>, 2016-11-09 13:10:12 -0800, , api exported type specific fix 285,,
1054,7a97ead26db65c48b8076e9e16c46e66381c183c,ascinated Box <FascinatedBox@gmail.com>, 2016-11-08 17:46:55 -0800, , api make export consistent,,
1055,922ee500d3ed448ab3bf10616094c4b23939b614,ascinated Box <FascinatedBox@gmail.com>, 2016-11-08 14:51:40 -0800, , api value operation value prefix,,
1056,ec519d6ee59b4f009b49c259f10e313aff98b3bd,ascinated Box <FascinatedBox@gmail.com>, 2016-11-07 13:02:16 -0800, , build lily core shared library,,
1057,8959138bdeb94ab23970727594f0665f4b426974,ascinated Box <FascinatedBox@gmail.com>, 2016-11-07 11:37:16 -0800, , push tainted outside core fix 279 adjusted dyna_tools.py generate different set extra native class dyna_id_x get dynaload id_x init_ macro pushing tainted outside core see critical use make sense apache mod_lily importantly mod_lily longer parser internals,,
1058,0301f006d51a2422755c9b1f33b9cf6dda0723a0,ascinated Box <FascinatedBox@gmail.com>, 2016-11-06 13:53:11 -0800, , dyna_tools.py drop bootstrap,,
1059,9eb745f73b96f5a195046631115f958296e5948e,ascinated Box <FascinatedBox@gmail.com>, 2016-11-06 12:28:26 -0800, , api lily_cid_at dyna_tools update dyna_tools.py generates macro make working foreign structs easier id_class call lily_cid_at given class struct arg_class index cast class init_class lily_malloc basic setup class,,
1060,033b53f1c12877ac1c8a32f192af0ccb15c096bf,ascinated Box <FascinatedBox@gmail.com>, 2016-11-05 14:53:56 -0700, , add bytestring.size,,
1061,7955c52dad60d69d8d6e27b74623b4e17ece3951,ascinated Box <FascinatedBox@gmail.com>, 2016-11-05 14:41:04 -0700, , add,,
1062,b277d18aa6be77fa3b7ec8f0a7ac2e13603f1466,ascinated Box <FascinatedBox@gmail.com>, 2016-11-05 14:18:51 -0700, , inspired single quote byte literal also changed msgbuf printing interpolating byte value favor quoted format suffix form,,
1063,62d6fc80abe347e549ced395005691e1a5505b0c,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 18:18:36 -0700, , lexer callee set adjust caller,,
1064,cafc4c7d0f8fec7de43f2e0f332d155d30b94ef0,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 15:30:08 -0700, , throw hack garbage,,
1065,3139809d9c4d3a3ffe49d493e9a328aaa39c65d3,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 15:20:22 -0700, , api replace dynaload bootstrap native dynaload fix 282 allows dynaload introduce native class interpreter class inherited really kind class build natively added api function lily_ctor_setup call foreign function acting constructor native class needed handle part inherited class directly called question need set property belong side effect documentation verbose dynaloaded class dynaloaded constructor seemed reasonable two part,,
1066,c01c7ec5e3a94baf1fe2762d4c9a4206dee2af3f,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 14:27:30 -0700, , instance build source superclass frame return long hated constructor gone good provide small speed boost longer needing worry build value initialization,,
1067,fc78e530ffe8830d92100bb733964a2005c59b3b,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 14:08:26 -0700, , emitter inner constructor push result self share backing instance value creating storage output seems wasteful unnecessary,,
1068,ab115aa6e805f7c748e1bd529337355c88aac9ef,ascinated Box <FascinatedBox@gmail.com>, 2016-11-04 13:50:54 -0700, , instance value track many constructor left much simpler way handling inheritance class instance simply constructor left inheritance check constructor left see value used,,
1069,64ea3ee9001d54bda9f6506b337504e53b8f1a71,ascinated Box <FascinatedBox@gmail.com>, 2016-11-03 23:21:36 -0700, , dyna_tools.py empty variant need tail causing problem trying get rid bootstrap lack tail meant next dynaload line bleeding causing none wrong name weird,,
1070,190389b7699b3462ffa45d147a15d36135a98bdb,ascinated Box <FascinatedBox@gmail.com>, 2016-11-03 15:52:46 -0700, , api instance action need instance whoop,,
1071,d83d940583f98aa2998667e579d8a5d0156838f1,ascinated Box <FascinatedBox@gmail.com>, 2016-11-02 14:59:21 -0700, , make dyna_tools.py easier extend slightly adjust format adjustment format make interpreter care value alignment make consistent main change overall make class generating part dyna_tools pull weight flatten dynaload loader generation two change make easier extend dyna_tools,,
1072,4dd2b6e33c6af750de93c819da54b08fd00b7c13,ascinated Box <FascinatedBox@gmail.com>, 2016-10-31 12:04:27 -0700, , api push apache away internals toward api added prevent apache creating string value invalid utf internal apache still using tainted,,
1073,4a5e60cf8f381bcd8d7526329617b167142499b8,ascinated Box <FascinatedBox@gmail.com>, 2016-10-30 12:52:04 -0700, , awful hash internals gone fix 179 new hash api within sourced st.c removed siphash related internals interpreter hope end regretting,,
1074,6f8f1ccfc13bcc32004a84f05d9d30fc5edec455,ascinated Box <FascinatedBox@gmail.com>, 2016-10-30 12:42:55 -0700, , fix hash test comparing wrong value,,
1075,a00bf1ff3f54aac9f66ae1b6a5f53702664696bd,ascinated Box <FascinatedBox@gmail.com>, 2016-10-30 12:09:34 -0700, , remove leftover lily_error fix apache,,
1076,42a01b3b2105b9016786b2bd134887a1f0543628,ascinated Box <FascinatedBox@gmail.com>, 2016-10-26 15:15:16 -0700, , remove leftover string subscript,,
1077,816b972d4b2b72bb67ac407935135b2af5d07db4,ascinated Box <FascinatedBox@gmail.com>, 2016-10-25 12:53:00 -0700, , api rely padding foreign header assume part foreign struct simply doe exist way padding need change forced break module,,
1078,a81081f0173bc30dd32a41c22dfadf00a3e647e1,ascinated Box <FascinatedBox@gmail.com>, 2016-10-25 10:27:57 -0700, , fix uninitialized property regression fix 281,,
1079,fe6f73f9eb03c343b653f7109fdcd7a2e30744fa,ascinated Box <FascinatedBox@gmail.com>, 2016-10-24 13:47:02 -0700, , api per error raising function instead lily_error prevents module raising hardcoded may moved future also simplifies error api prevents user exception think worked anyway,,
1080,b198b1278ae6b9e8134fc3cea1ad0eabd2843ea0,ascinated Box <FascinatedBox@gmail.com>, 2016-10-24 13:05:37 -0700, , lily_raise broken _err _syn previously lily_raise accepted code would store code use later ago moved toward routing visible exception lily_error lily_error_fmt lily_raise taking status value really syntax error internal error broken lily_raise also gotten rid old value definition used,,
1081,951c38a145602d854b43c49589e508ce41b13ee0,ascinated Box <FascinatedBox@gmail.com>, 2016-10-23 21:29:10 -0700, , allow hack inspired shorthand constructor fix 279,,
1082,dd829bcdbf408a66e233cbc7f9816ca45176b560,ascinated Box <FascinatedBox@gmail.com>, 2016-10-23 13:42:30 -0700, , emitter condense define class block setup,,
1083,19a85cfff96ea01ac31c4df9f2b4fa7dd9837f35,ascinated Box <FascinatedBox@gmail.com>, 2016-10-23 12:40:01 -0700, , prevent class property type self initializing existence type used check initialization allowed code like var integer wrongly execute,,
1084,bf64124951c3c3c31faccdbe5bbb8de078408277,ascinated Box <FascinatedBox@gmail.com>, 2016-10-23 12:07:23 -0700, , parser optarg_stack data_stack,,
1085,aa1fda82b5f29507e754a38b862e00933c412656,ascinated Box <FascinatedBox@gmail.com>, 2016-10-22 15:50:55 -0700, , dyna_tools.py output markdown format adjustment fix 277 doc block side longer use single quote mark denote value backtick quoting replace furthermore doc block parsed markdown mean list spacing work better added new error section via markdown style documentation output toplevel block containing function var global module question,,
1086,8986ad494ab90fc72a6839ed68e8392ecd80e4a6,ascinated Box <FascinatedBox@gmail.com>, 2016-10-20 20:10:44 -0700, , allow subscript bytestring fix 160,,
1087,88d65c022450ca8752d4b5f1860c09dc83290f58,ascinated Box <FascinatedBox@gmail.com>, 2016-10-20 10:57:42 -0700, , create byte class fix 159,,
1088,b2c1e35bc842cfdd072a210485dccae335a9b360,ascinated Box <FascinatedBox@gmail.com>, 2016-10-19 17:07:15 -0700, , cleanup numeric scanning,,
1089,98ccf3db1fac8a8a6f9d484c298d9ab21a935383,ascinated Box <FascinatedBox@gmail.com>, 2016-10-18 09:39:05 -0700, , apache add first configuration option showtraceback note current implementation slightly unsafe html entity escaped start least,,
1090,533d7b34693c44a7813fa9d8b6c83ed3d58b78ea,ascinated Box <FascinatedBox@gmail.com>, 2016-10-17 14:37:54 -0700, , big lily_value store class lower bit previously lily_value stored bitflags predefined class user defined class stored real class within instance_id field flag field lily_value store marker upper bit lower store exact class value needing store class inside instance enum value break instance enum related api everything else okay change done following reason empty variant needed default backing value thus discouraging use large enums like keep overhead small side getting default backing value difficult required looking class identity class table pointer access get default value made returning none tad irritating package wishing work empty variant would difficult previously move flag used translate class flag time move flag coming limit bit int forced either expand pad lily_class take different approach new approach drawback glean class instance variant raw value added adjusted api function accordance shift internals also increased class one necessitated flag indicates absence value class primitive way tell apart unset value,,
1091,1363f898f14475f6a7b5050c51f71d30eba5cfa4,ascinated Box <FascinatedBox@gmail.com>, 2016-10-17 11:32:51 -0700, , fix option.and_then returning filled none,,
1092,0958917e799483cd67e1102e6c7e550222202e34,ascinated Box <FascinatedBox@gmail.com>, 2016-10-17 08:45:14 -0700, , api sym_class_ lily_ _id better indicate purpose,,
1093,bcd1d647061bb97c3dc23c207195821eaf6da0c8,ascinated Box <FascinatedBox@gmail.com>, 2016-10-16 22:51:53 -0700, , replace emitter binary table lot binary table assuming integer double string specific prevents easy adjustment turn prevents change want,,
1094,9cdc11b4d96b075d6cacf988113c51331a9b045d,ascinated Box <FascinatedBox@gmail.com>, 2016-10-16 18:09:05 -0700, , disable implicit integer double conversion noticed recently went start adding byte language reasoning boil think useful like someone use good reason add back post 1.0 easier add feature later take,,
1095,f65907768a25557f6a29d8438b7137a2e5caac56,ascinated Box <FascinatedBox@gmail.com>, 2016-10-12 11:40:02 -0700, , fix missing symbol apache fix 275,,
1096,e90f14ff10e3728c9f19040cce73e189d8240735,ascinated Box <FascinatedBox@gmail.com>, 2016-10-09 09:28:30 -0700, , version 0.18,,
1097,3275b7992f80a0ad60a1b12522168716f84c9a3a,ascinated Box <FascinatedBox@gmail.com>, 2016-10-09 09:11:01 -0700, , remove executable repo .gitignore,,
1098,d44e824fec5ce2a8dd475cd9d467b54f869b9b41,ascinated Box <FascinatedBox@gmail.com>, 2016-10-09 08:32:36 -0700, , fix sandbox compiling whoop,,
1099,5e17a8f9108e121459ee79d18e0efa80eb749813,ascinated Box <FascinatedBox@gmail.com>, 2016-10-08 22:26:06 -0700, , add result type lily_parse_expr context,,
1100,7376b26774f663746096c69abb7f443573585e87,ascinated Box <FascinatedBox@gmail.com>, 2016-10-08 15:44:19 -0700, , add sys.getenv fix 216 wrapper getenv allow access environment information note currently assumes result valid string value future wrapper might check utf correctness give none case ... get get,,
1101,bfa95419a03c4338d16ab93baae3253f2601dbd0,ascinated Box <FascinatedBox@gmail.com>, 2016-10-06 16:35:48 -0700, , fix lambda allowing multi line block inside,,
1102,28732fb94e3656d59abe761bbc8f42c3a6d0761c,ascinated Box <FascinatedBox@gmail.com>, 2016-10-06 16:14:50 -0700, , fix invalid read recent commit,,
1103,ca6248f39e3ab9a6012f1a1e3debe886690ee778,ascinated Box <FascinatedBox@gmail.com>, 2016-10-06 15:36:05 -0700,3, handle rewind going back allowing previously rewind done parse destructive error information pas error pas rewind running new function allows getting error message last parse,,
1104,e329b97324d6c6dec6e79c0475ea282d291f2115,ascinated Box <FascinatedBox@gmail.com>, 2016-10-05 18:24:03 -0700, , add file.each_line,,
1105,6bc81bde5b5734bb0e734f44af766a2b354deeff,ascinated Box <FascinatedBox@gmail.com>, 2016-10-05 12:26:47 -0700, , create basic unit type fix 231 function previously return value return unit value type system unifies return function unit selected absolute fallback syntax function unchanged unit implied return given side function previously return value thus nothing must use,,
1106,17db3f06ac332c552c51a21402a83c9a0ead51a9,ascinated Box <FascinatedBox@gmail.com>, 2016-10-02 17:28:09 -0700, , make sure successful parse clear msgbuf,,
1107,0d0e55f96aa0e563662613aca5b2534debfe9813,ascinated Box <FascinatedBox@gmail.com>, 2016-10-02 15:00:42 -0700, , fix crash dynaloading constructor without loader,,
1108,2d9b10565567a2b179c81acf4c4659190e3eb36c,ascinated Box <FascinatedBox@gmail.com>, 2016-10-02 14:23:05 -0700, , fix macro typo,,
1109,548f00927a4526185447beb70ec3e66dc9daab11,ascinated Box <FascinatedBox@gmail.com>, 2016-10-02 11:55:42 -0700, , actually make lily_parse_expr send data back char function made build repl make sense repl would core easier value type poked,,
1110,a3e41e15ab97a8a42652b24b2860cd57e84b6ea2,ascinated Box <FascinatedBox@gmail.com>, 2016-10-01 16:38:19 -0700, , api add previously existed switch argument order make part api,,
1111,cb04c91250c73e45f6312e61629135b7366f6095,ascinated Box <FascinatedBox@gmail.com>, 2016-10-01 15:58:34 -0700, , add lily_parse_expr expects expression value,,
1112,bf34fb51f72b6075de58cfe2a8738cdfdc78d742,ascinated Box <FascinatedBox@gmail.com>, 2016-10-01 11:42:37 -0700, , add integer.to_bool,,
1113,549f7f2deebb0c3b102ee51dfa9312719943f745,ascinated Box <FascinatedBox@gmail.com>, 2016-09-30 14:50:21 -0700, , fix import library broken recently 1b08e1,,
1114,1ee6bb1282e532644d4f7ee3d89306883d431ebb,ascinated Box <FascinatedBox@gmail.com>, 2016-09-30 14:26:44 -0700, , fix print print crash,,
1115,703b3b690d55a765487f84ae8cca1a0b642096a5,ascinated Box <FascinatedBox@gmail.com>, 2016-09-30 14:01:24 -0700, , allow else default clause enum match fix 225,,
1116,37774728214b358bfe2d25fdad0f44e98ff3ca46,ascinated Box <FascinatedBox@gmail.com>, 2016-09-30 08:40:14 -0700, , allow self return type fix 138 going force people using think feature hard sell also wrote rule allow self implicitly returned like function return value added support self dynaload yet near future,,
1117,de95918caf0e54b69182f43798e816a165adafcb,ascinated Box <FascinatedBox@gmail.com>, 2016-09-29 19:05:42 -0700, , allow lambda start expression fix 210,,
1118,b25f055b3b120d26fe2ae2723e1492c61b175dd2,ascinated Box <FascinatedBox@gmail.com>, 2016-09-29 18:33:56 -0700, , match case use skip decomposition fix 158 hammer solve problem grabbing storage trying anything fancy polish later framework undoing storage grab really like see doable,,
1119,03376310523b06101bf6c110036070f8d74558cf,ascinated Box <FascinatedBox@gmail.com>, 2016-09-29 15:52:54 -0700, , make emit ugly,,
1120,1b080e1ea85e9e0db7f67eaaf57d9c243934013d,ascinated Box <FascinatedBox@gmail.com>, 2016-09-29 14:18:00 -0700, , show use package door fix 272 distinguishing package module doe add value similar outside commit scrap hopefully everything package back module import doe use past look relative path package directory time however package directory rooted first module loaded thought briefly relative package directory would allow overriding rooted package directory decided easier add later demand pull turn worthless something something spacebar heating,,
1121,dbb4794c1dc10fcec01c5d9dc2c8f1f2c78677e2,ascinated Box <FascinatedBox@gmail.com>, 2016-09-28 17:34:44 -0700, , create lily_mb_sprintf add_fmt plus get,,
1122,8f8fdfe4ef601ec106a62dcda330938a235a4845,ascinated Box <FascinatedBox@gmail.com>, 2016-09-27 08:13:10 -0700, , internal monomorphic class type fix 185 change lily_class type field self_type self_type field carry either class acting type actual type found within all_subtypes rearranging needed fool type system accept class type done combat memory use accumulated many monomorphic class built lily core importantly pave way potentially lily simple special class global read value,,
1123,7d1b06bfe5dde0ac508d5dea6607ab225cd672ac,ascinated Box <FascinatedBox@gmail.com>, 2016-09-26 12:30:12 -0700, , include method circularity calculation nearly class marked always circular since root method function,,
1124,d3ace2907747106d9d75e22c4963aa09de14835a,ascinated Box <FascinatedBox@gmail.com>, 2016-09-04 09:22:04 -0700, , remove old name repo,,
1125,5b8a959151d8ee8522cf802b2efe9336bafefcd7,onathonf <j.fernyhough@gmail.com>, 2016-09-01 19:48:10 +0100, , install header file destdir include lily default make install put everything usr local pre change destination lead usr local lily great usr local include lily instead,,
1126,50d37eb43a58bb0efc8720c1705894637ab7d0a6,ascinated Box <FascinatedBox@gmail.com>, 2016-08-23 17:44:26 -0700, , closure jump fixing must account upvalue read fix 268 may cause assign see stale local instead loading fresh upvalue first,,
1127,c573e724b4bb4a7bb34cd9bb29db2092b6462497,ascinated Box <FascinatedBox@gmail.com>, 2016-08-23 15:22:07 -0700, , internal merge lily_literal,,
1128,0c22f27f7a87801c516619caecd636b05eecbdeb,ascinated Box <FascinatedBox@gmail.com>, 2016-08-22 06:33:27 -0700, , thanks travis,,
1129,03d8f5c37df5945a8ecf1a60edc6bf2c10ebb83b,ascinated Box <FascinatedBox@gmail.com>, 2016-08-22 03:23:24 -0700, , lay foundation rewind fix 174 however ... tested pas failing test run twice rough around edge may missed part first like talk bad part difficult interpreter full fresh rewind matter part must stick around one example interpreter retains class used data recently loaded harder rewind away function rewind may accidentally rewind away data necessary mind current rewind strategy extremely conservative favor holding onto extra data versus potentially releasing something may cause crash mean time interpreter slowly leak memory fails exec last pas included class extra function literal rewound either possible interpreter accumulate well intend eventually roll better complete rewind scan determine absolutely necessary code iter believe possible perfect rewinding rewinding perfect good establishing foundation others use open door working repl itching time,,
1130,a5e58ec862cb94ef1754796867a267dcfb87d2df,ascinated Box <FascinatedBox@gmail.com>, 2016-08-14 23:24:34 -0700, , emitter expose storage stack give parser access data rewinding,,
1131,7de839fd7a048af9e47e399993dfc611bd0e0863,ascinated Box <FascinatedBox@gmail.com>, 2016-08-14 23:09:18 -0700, , maybe later,,
1132,899a9400172b7e4c472b8dc29dae7d591736a313,ascinated Box <FascinatedBox@gmail.com>, 2016-08-12 22:58:23 -0700, , strip trailing space src file,,
1133,01d8b743464cfa719d3278d5c488a567802071ee,ascinated Box <FascinatedBox@gmail.com>, 2016-08-11 23:13:56 -0700, , apache make sure handler null well,,
1134,710cde12eba81c20d71bc1a6f199693f61c13509,ascinated Box <FascinatedBox@gmail.com>, 2016-08-10 14:51:01 -0700, , api add lily_get_data,,
1135,3be8d5bb28aea4837a1e6b0d6c61dfb1d63b7eb8,ascinated Box <FascinatedBox@gmail.com>, 2016-08-09 05:33:31 -0700, , crash importing root package fix 266,,
1136,02c06719bef8c50d3611f849fc1dce5dbc44042f,ascinated Box <FascinatedBox@gmail.com>, 2016-08-08 23:36:00 -0700, , .gitignore tidying codelite special casing,,
1137,3679a23e21ae4963be35d3ef732eab59e2686996,ascinated Box <FascinatedBox@gmail.com>, 2016-08-07 18:11:45 -0700, , use multi pas strategy closure transform fix 265 thanks stevedonovan gave idea excited believe closure much stable use code_iter walk existing code make note jump target writing absolute position empty space transform code usual transform continually check opcode jump target write new location opcode come time handle jump turn relative jump absolute jump write transformed code write second kind pairing one record transform position distance transform position opcode transform finished perform second kind transform one quite bit trickier take absolute position written transformed code position transformed code offset three calculates new jump era old jump,,
1138,afa7624f846856d5b7c401c2407d034a4d7976a2,ascinated Box <FascinatedBox@gmail.com>, 2016-08-07 15:56:28 -0700, , api special class api moved,,
1139,b2f5d05004208abf82e70bd7f0391abba33507d2,ascinated Box <FascinatedBox@gmail.com>, 2016-08-06 16:02:39 -0700, , parser add module_top field package make easier determine recently added module,,
1140,ca01d2b204c69c26081d0ff69eb7909f51cd86b9,ascinated Box <FascinatedBox@gmail.com>, 2016-08-06 15:13:15 -0700, , parser asks symtab free module symbol take symtab business digging package parser territory free ing also hair faster since symtab parser itering module entry,,
1141,acf82c82b2841fd80137cebc8b3162b422ac5d1f,ascinated Box <FascinatedBox@gmail.com>, 2016-08-06 15:09:18 -0700, , symtab nothing special removing unnecessary parameter,,
1142,eaf4af52ac786d8aadeaec17ca19f3a5b87ebe33,ascinated Box <FascinatedBox@gmail.com>, 2016-08-06 00:33:39 -0700, , two fix allow function argument dis,,
1143,276c470f6d53adbc9b32b8a644de0efaed0bf31a,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 23:39:16 -0700, , api add struct decl stdio include value,,
1144,8c2c570851582eeec22dee2e3f170af7d38e274b,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 23:31:55 -0700, , int provide lily_opcode.h use dis need careful int file make guarantee breaking middle release said try best break code without warning reason,,
1145,5f05de17e78a3a7b2ef0e0235a23bc19592adbc1,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 23:20:17 -0700, , document organize lily_opcode.h,,
1146,92cff67852705d28458a474f57a154a9b971b9d2,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 18:43:21 -0700, , api provide code iteration part api disasm,,
1147,0df79e6252ef239f2bff07d8e0dbb14a35fe799c,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 15:32:35 -0700, , api add native foreign also dis package,,
1148,c3b35ff5fdca8524506ffbc5f5ddf883abd734b9,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 15:29:34 -0700, , emitter set code length field native function need time disassembly package,,
1149,7ef80314fa372622564562ed2531044100a88924,ascinated Box <FascinatedBox@gmail.com>, 2016-08-05 15:16:12 -0700, , o_load_closure move current code,,
1150,669e239e54dfbb9a3fa090cc93072ca50d2f3336,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 13:56:13 -0700, , api prefix removal add,,
1151,0d81a2e5ab9c3903bb29ace2063d5e0203d2991f,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 13:44:11 -0700, , api create directory embedding example fib,,
1152,e44af4e17b2dde2fe8c0945cf601970e384faf31,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 13:29:36 -0700, , rename with_emscripten with_sandbox sandbox,,
1153,275f96fa6a5a1d90bd6c80b2e31333ee7b457856,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 13:24:29 -0700, , api default parser free option shutdown time option thrown away parser done make default experimentation user feedback done future make sure clear user free option exit maybe another strategy better,,
1154,5fc5e99305bc022983e3aaaa49f061c56a6cc52b,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 13:12:29 -0700, , parser always register class setup etc seems safest assume need initialized least readonly table need set lily_get_func fails established __main__ empty,,
1155,17e229979b9825cdeb1f88bcb8931e4763b0e03e,ascinated Box <FascinatedBox@gmail.com>, 2016-08-03 12:44:58 -0700, , main runner need include,,
1156,b89fba1a998fafb29b803e6a1b56b844b9af985f,ascinated Box <FascinatedBox@gmail.com>, 2016-08-02 19:10:57 -0700, , api foundation lily_get_func,,
1157,f7a67d099fc4ac967a99052a20f189c621c0141a,ascinated Box <FascinatedBox@gmail.com>, 2016-08-02 09:02:57 -0700, , builtin use,,
1158,8af137109c176a01f402252efddd221e7b84243c,ascinated Box <FascinatedBox@gmail.com>, 2016-08-01 02:58:14 -0700, , small typo correction thanks ryan,,
1159,237b3dfc85fafa730f50070cf546d84ee576287c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-31 22:50:50 -0700, , api touchups calling remove prefix,,
1160,ed6cb59b028f765d846d74f66395bed4a9b3019f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 20:58:13 -0700, , api export lily_state hopefully unifies api extending embedding interpreter need know lily_state directly inspired lua want uniformity across api bear mind operation within suitable use outside extending interpreter majority made purpose,,
1161,ecbbd10ecb4b0d2f63a3e8cde3770b00435ce28f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 20:35:52 -0700, , api lily_state parser consistency allows presenting single lily_state embedder work eventually well,,
1162,f9b7b3aaf8c2633c5f93379c7bb8c8c653e6f648,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 20:26:32 -0700, , api pull back internal move internal necessary also pulled isa function since currently see use add back someone need rather wait instead assuming,,
1163,a636c22024fb3c5921fde6458ec898cd147e4187,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 19:54:34 -0700, , api merge remains lily_api_vm.h,,
1164,31ba8c938f03bc00e71442bc707d26fd29b10f20,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 19:37:47 -0700, , api lily_vm_raise lily_error move trying make one stop shop anything might want extend,,
1165,64544b889660afa80a525e79d2d6060794ec1f2e,ascinated Box <FascinatedBox@gmail.com>, 2016-07-30 19:21:37 -0700, , api add lily_instance variant_id move variant defines,,
1166,e06fcabdc001ba8ad158293fc1849f17c9cf50ae,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 19:21:31 -0700, , api create builder function help eliminate direct move,,
1167,90dd1f2237c83aa9da5b84c7e552389f6c441e2f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 16:29:49 -0700, , create holding storage motivation size reduction adjust lily_sym future time get storage need next pointer condensed single bit int type pointer held stack simpler implementation old way used pointer starting storage top starting unused pointer new implementation stack internal emitter much simpler use work easier rewind rewinding storage straightforward find first scope file function class block __main__ storage scope onward reset scope toward start zap storage rewind,,
1168,e8f11b46e101fa9300ffee68f644ad1cb1453c5f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 04:51:16 -0700, , lift condition branch,,
1169,319eea94844d5d5a92e9336eba5af9ac7a16bd03,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 03:41:57 -0700, , api add read write check get_raw file_val,,
1170,8c0891afd066aad396c37d848bb1870574faf84d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 03:34:27 -0700, , slight adjustment layout,,
1171,d8e9888caaaa1389192e07efe05fcf1938633602,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 00:36:43 -0700, , create decided create base lily_state resulting typedef parse state mean interpreter internals change later perhaps exporting interpreter front internals compiler driven created specific function template use plan template executed done regular run setup additional action calling specific globals somesuch added functionality yet though,,
1172,235661f6453d5eafaee605211d66875a31e115f6,ascinated Box <FascinatedBox@gmail.com>, 2016-07-29 00:31:14 -0700, , fix call accidentally trying reuse wrong storage 257,,
1173,46e7821a79f669371cfeb21043d1d4e01dbf4551,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 22:23:10 -0700, , dyna_tools.py fix oops generating register_ function,,
1174,a82c9ae8b747094d7f81c74c583d2243fa3aed92,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 16:24:39 -0700, , drop cls_is_variant use item_kind instead,,
1175,259702c2fbbd01ddde201a38477415376bce15ac,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 16:17:50 -0700, , remove unused hidden generic flag,,
1176,ea344f33f5dd37cb135c96c491a0b9125ee9b92d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 15:57:14 -0700, , generic pool commit fixed proof fix 154,,
1177,27a7804f13a8e6f6ff05ebc3fd4732b1fd96e316,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 15:56:00 -0700, , fix line number property access error,,
1178,d033190dd80d7b5d10f82821a696685e18ba25c8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 15:41:56 -0700, , create manage generic state big change important one commit lily one true generic class slight hand used place different generic type onto one generic class combined parser trying hand manage generic state caused quite problem way generic implemented barrier many feature nameable generic system etc also getting way rewind ugly miss old strategy declare generic one scope generic next scope always start old one left previously work enums patched around instead fixing test changed,,
1179,8c43c21a38536bedbe211d27822bfd30eb28b8f2,ascinated Box <FascinatedBox@gmail.com>, 2016-07-28 12:34:56 -0700, , make need symtab,,
1180,f3f3fb272acc412b2440ef659f88b2cf53c7a56a,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 15:49:06 -0700, , fix potential crash importing file toplevel loop function depth one __main__ block well __import__ block __import__ var globals storage __import__ loop would potential crash syncing assigns would written register local instead global,,
1181,8b6bb77caa64d72836eb2638ca3b6089d3ce5592,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 15:28:18 -0700, , fix comment left copy paste whoop,,
1182,b164ba264208f8345f69319665bc73b5f523ba86,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 11:42:10 -0700, , create fix 239,,
1183,2ca84a34fab0ace650c911edc9f157e0008a9191,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 01:18:35 -0700, , reorganize generic val bit 203 bit ugly proper solution generic val cast issue tackle later function deref ing value exit,,
1184,4c7f5ac6d079be8df998e94d42e60e92df8a31a5,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 01:05:40 -0700, , push pas marking marker function reduce generic val,,
1185,f19a8e36a3ad8d288c5d17e90d3dd014535949d6,ascinated Box <FascinatedBox@gmail.com>, 2016-07-27 00:47:45 -0700, , make dynamic constructor internal,,
1186,1a75c919d87f7709efc76172f872df12e700ba9e,ascinated Box <FascinatedBox@gmail.com>, 2016-07-26 05:06:49 -0700, , enable closure optarg test fix 183 relative jump fixed count wrongly transformed believe may source problem insofar closure doe make optional argument closure work together fix optarg writing assumed optargs always first o_new_instance least come problem closure transform part optargs ensured closure actually employing almost reverse logic keeping optarg params definitely wrong closed params need force o_set_upvalue make sure present closure,,
1187,7fcfe4f7c1a8eb5ab21061c9647cf5b2256f45e8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-26 04:01:24 -0700, , fix able close loop var fix 254 caused writing target output fixing yielded wrong number adjustment turn loop right ordering either fixed number would one lower start loop added test make sure come back,,
1188,70df1a4ddf29978842016202f2e93c552daed5de,ascinated Box <FascinatedBox@gmail.com>, 2016-07-26 03:32:26 -0700, , closure repeatedly transform first input,,
1189,8a27787749979d77db9db199e307b8a2f6a9b5b6,ascinated Box <FascinatedBox@gmail.com>, 2016-07-26 01:07:52 -0700, , relative jump finally landed slight powerful change jump processed jump position written always absolute position longest time matter code_pos runtime would add time code dropped awful idea favor direct adjustment code turn repeated add every code access actually fast thought absolute jump threw wrench required calculating distance code moved away starting position getting starting code position calculating move relative jump mean moved code value directly added unfortunately make much difference speed though also fixed almost certainly bug attempt transform done typically like mix fix preventing working really sure wrong really sure,,
1190,62ac8a1f74222f34cc13c1382156f55aa0fb4219,ascinated Box <FascinatedBox@gmail.com>, 2016-07-25 17:22:56 -0700, , emitter write unreachable branch exit jump real reason branch always exit exit jump target next code position branch exit code branch cause problem closure transform jump position bytecode position let altogether,,
1191,9f8028b4c04fd3c0a3140ea1bcefb12e5da578a8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-25 04:11:47 -0700, , fix crash scoop wrong arg type 263,,
1192,792ff8ba3c69dfb197494154c38b64df5f078c0f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-25 02:52:31 -0700, , remove debugging print dyna_tools refresh extra builtin,,
1193,ae40f89c2224ef6ea233c5869feeb2837afc043f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-25 02:49:46 -0700, , allow bare matching scoop type also written rule list matching discard unify breaking attempt try writing list.zip function,,
1194,bdaeaee8ece3738b51bd690e9f3a3bb7a4bd2626,ascinated Box <FascinatedBox@gmail.com>, 2016-07-24 15:55:55 -0700, , emitter create call state stack future call state might away favor local params since call state really much moment good enough allows getting rid holding state within emitter,,
1195,98a2662cce336cdb082bab7cad6d06b95db8edbf,ascinated Box <FascinatedBox@gmail.com>, 2016-07-24 01:57:16 -0700, , block_andor hack get rid,,
1196,cca5d8dc8063a02a4bfda886d4b095214a824edd,ascinated Box <FascinatedBox@gmail.com>, 2016-07-23 05:21:21 -0700, , use instead represent placeholder patch,,
1197,f9032263d72312be427af878b6abcb6baa19f79e,ascinated Box <FascinatedBox@gmail.com>, 2016-07-23 01:31:05 -0700, , dyna_tools.py handle builtin table huge make adding builtin method class great deal easier avoiding adding new builtins specifically ,,
1198,1c9b330122f1e78b805f473e93e47219dbeb4172,ascinated Box <FascinatedBox@gmail.com>, 2016-07-22 19:06:32 -0700, , builtin method implementation titlecased builtin_ prefix prepare autogenerating builtin dynaload table,,
1199,6e0240e2b0b63dfb282ba325b1942193cbc81d56,ascinated Box <FascinatedBox@gmail.com>, 2016-07-22 17:38:56 -0700, , reorganize dyna_tools.py scanning pushing tuple back instead make package entry contain filename rewrite none one found make easier add generated includes future,,
1200,efba589080fbf3e3196c93dcdbffc96c2e524733,ascinated Box <FascinatedBox@gmail.com>, 2016-07-22 15:10:36 -0700,183, closure header skipping add offset fix 262 cause jump target turn cause doe change 183 still broke doe toward fixing bug may one reason 183 issue,,
1201,58aacb1717f5b36b332b9a12d874deeb7a30e228,ascinated Box <FascinatedBox@gmail.com>, 2016-07-21 21:22:38 -0700, , api add bytestring operation fix file.read_line,,
1202,900d201c6ef666d3f98a9964d12b8ff77c78e3ed,ascinated Box <FascinatedBox@gmail.com>, 2016-07-21 20:01:13 -0700, , freshen readme add donate button,,
1203,0cf91b12356e943b2c36e1a025b1c5629af4c6c1,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 17:43:57 -0700, , never let dirpath empty importing 221 using lily test.lly dirpath empty since attempt load .so linux decides use system library path causing strange loading failure gated behavior linux however sake consistent output,,
1204,eff048c41217d78a1f824d5f5a3d44dec440ba43,an Skorupski <dan.skorupski@gmail.com>, 2016-07-19 19:24:35 -0500, , hide class .new,,
1205,53f99e211e7287b1e5d4ffddf8aac34630208ace,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 11:47:40 -0700, , garden install pull package directory,,
1206,d9019863a998531c265784dd40af66f10abcc213,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 10:58:50 -0700, , garden process config .garden file fix 202,,
1207,e0718d4c210e4b2c049cf5e47843526ae0b12a56,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 07:26:25 -0700, , garden use postgres example,,
1208,54cdbf44ee8ff771b7a4f1e6ea04b1912eee079e,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 07:03:52 -0700, , postgres moved jesserayadkins postgres lily api solid enough feel confident pushing postgres postgres development also allows postgres installed garden,,
1209,735490135f336bf58feba6cecc05b4a6971e090d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 05:56:13 -0700, , remove core includes postgres,,
1210,c60aa0ead4d210a0d5d1f6f77c5f99c2d22f90ec,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 11:38:21 +0000, , use call_chain get optimized weird,,
1211,e7fba56a61e440a991e6c51a9bcfb96ec2c8deaa,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 03:55:54 -0700, , create pending_line avoid wrong line number sometimes code wrong compiler optimization fix back ought,,
1212,3b12bc8396ea468903f8ad0e9432c6da89c22aa9,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 01:31:49 -0700, , add test throw constructor,,
1213,522f504a53a38d07578775681152f50c5d63c2bf,ascinated Box <FascinatedBox@gmail.com>, 2016-07-20 01:01:22 -0700, , api add postgres directly,,
1214,6411fd56587dbc2d36d9904864b83539d51bc9c2,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 23:57:44 -0700, , api include msgbuf encapsulate msgbuf fully encapsulated struct life file mention operation available changed prefix msgbuf wordy use full encapsulation come new lily_api_vm.h could make lily_vm_msgbuf get flush msgbuf part api also taken grow msgbuf api exporting bad idea caller instead file.read_line doe instead caller fixed size buffer sends sized chunk plan trim msgbuf api much function make sense like adding integer bytestrings right want focus last bit postgres push postgres core,,
1215,e35a5079a29278d65ff31a3a5e76654baf986495,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 21:48:34 -0700, , api give destroy function raw value inside,,
1216,2c774015dbfc105827e70da935da7c05e1f15e08,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 21:39:50 -0700, , api move destroy func add foreign header macro,,
1217,a71aa2fce9c99313f04c26079ef3a0c90f92bca0,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 21:17:12 -0700, , api,,
1218,561301c235410226d8130c33e2b84841e90594d8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 21:14:58 -0700, , postgres use instead direct access,,
1219,fc25327fc6cdf76e1c2dd64ea6d76ae31d2d77f0,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 21:10:10 -0700, , api use new declare_both even small api function,,
1220,70ddd75dd86473c52df717323fc099ca91e54c26,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 20:51:07 -0700, , api getter macro small name adjustment,,
1221,d9d00c4fbd4e195aa8094bbcc312c8014eff261a,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 20:02:00 -0700, , api add clean postgres func,,
1222,65bba9059dd43c0f678fc09cd0b4de0b853001f4,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 19:13:13 -0700, , big variant proper class done make easier discover variant enum without dig enum allow hopefully drop variant member field enum time future also make easier build enums one know position enum well instance enum fell variant get unique library would need know variant mean mucking around cid small bonus still bonus part interpreter change pass class instance subtracted allows jumping different way getting value class move_flags moved could brought aligned variant class variant class get proper instead offset start used importantly padding previously existed enums variant struct still possible shave whole uint64_t destroys alignment list decided moment leave padding may change later api damaged,,
1223,2991ff17167aba91de41949f47dd058a3058a323,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 19:03:30 -0700, , add missing static qualifier,,
1224,8891972fe51f085e8e071fd54692ac933f77378b,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 17:16:13 -0700, , simplify internals option.or,,
1225,67c40e0b91254771e5e77a6d6df171a782311deb,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 16:07:17 -0700, , code_pos erased optimization,,
1226,79372ac2db84a0de95580a31446b1bff9c7518c9,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 15:18:46 -0700, , replace new suffixed one also drop favor new version pushing back raw string instead one held value seems trend list remove old constructor would give hollow list expect caller fill hair slower value set moved well worth encapsulation also reduces list constructor one,,
1227,a5f4054b413f45820d9118da56438692999edda2,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 15:09:42 -0700, , create replace,,
1228,49cd6c8e1b15f5a836a9d3c86a2b0853c3dc7f92,ascinated Box <FascinatedBox@gmail.com>, 2016-07-19 14:00:44 -0700, , one register max please,,
1229,6892a69830f8515a2a3f402fa002e00d9e31bd9c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-17 01:54:19 -0700, , emitter function try use storage args first.x,,
1230,5af68897bab572e57b619554864aa932177cce71,ascinated Box <FascinatedBox@gmail.com>, 2016-07-17 00:33:37 -0700, , adjust little string.split logic,,
1231,9f7733c8d0295c7cbf3cea034c8b37577961c429,ascinated Box <FascinatedBox@gmail.com>, 2016-07-16 15:54:16 -0700, , drop formaterror used,,
1232,bb40e73857abef892d6a12a0128f536cc0e21ae1,ascinated Box <FascinatedBox@gmail.com>, 2016-07-16 15:09:49 -0700, , make starting lily syntax error change message,,
1233,5be12440d3dce90700625176ae7a62110033c807,ascinated Box <FascinatedBox@gmail.com>, 2016-07-16 14:38:40 -0700, , template mode send terminating newline,,
1234,2aab95245c948a3e5b0d47811df3d5a725cd4ec8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-15 07:19:59 -0700, , update dyna_tools enums comment builtin fix 156 builtin package yet generated loader dynaload table yet however adding comment large step toward dyna_tools.py patch also includes fix bug noticed trying generate builtin doc,,
1235,2a339fc9533d998eb4f0227dd484c6f4de087117,ascinated Box <FascinatedBox@gmail.com>, 2016-07-15 02:17:18 -0700, , redo dyna_tools.py inside fix 244 huge rewrite dyna_tools.py address many problem new command html refresh refresh main one give prefix either want refresh dynaload information file generate documentation tool generates dynaload information dyna_ file location source file tool comment decide generate well internals organized using small init class make easier determine going element within class plan add enums make easier,,
1236,3dac1180803617f8f0b82529d604f4fb2eefbe90,ascinated Box <FascinatedBox@gmail.com>, 2016-07-14 17:06:19 -0700, , suggest var missing property found fix 258,,
1237,18a40943b2e206c235b3c068d2d28a6848101a21,ascinated Box <FascinatedBox@gmail.com>, 2016-07-14 16:59:24 -0700, , prevent someinstance member fix 260,,
1238,9da44e57720bf9fbe9d5c02b2a2b358860d90cbe,ascinated Box <FascinatedBox@gmail.com>, 2016-07-14 00:34:55 -0700, , fix subscript assign property fix 256,,
1239,2d7297a4cb3e58b93434c12fa7677de19dcb4ea0,rasm <crasm@vczf.io>, 2016-07-14 01:23:33 -0400, , fixed make install failure,,
1240,535a3476be176f29bbfbf98a3e2cfe90367741f9,ascinated Box <FascinatedBox@gmail.com>, 2016-07-13 20:23:49 -0700, , proof list.fold work right string fix 186 fixed new api merged put test prevent regression,,
1241,7eb4f188cc880bf6427057d96ea021014271ac38,ascinated Box <FascinatedBox@gmail.com>, 2016-07-13 19:43:59 -0700, , fix move enum instance,,
1242,d11db5772178aab8ec4b334fbec903d86a22af7b,ascinated Box <FascinatedBox@gmail.com>, 2016-07-13 19:39:00 -0700, , comment fix,,
1243,3efee2eac5d39e7066a67d1e66251a9597a6e131,ascinated Box <FascinatedBox@gmail.com>, 2016-07-13 18:47:33 -0700, , big create new proper api backend patch massive change backend organized foreign function interact interpreter result mostly entirely complete foundation lily going forward layout lily_move created hold move operation phased shortly create part interpreter need know internals value create lily_api_value contain value operation present raw lily value opaque pointer resulted addition helper function grab part said value expect helper function expanded upon near future created hold flag describing value intent patch provide function foreign function need know intrinsics value effort still work progress eventually allow postgres apache use api file content foreign function use lily_arg_ function receive value interpreter argc code function internally value inside register instead pulling caller stack work done cleaning work establishing foundation usable others calling back interpreter done pushing value onto interpreter stack following call interpreter rewinds stack call however value call dump single register held caller value accumulate stack via pushing needed later popping away lily_list_set_ function exist setting value different type onto particular element list function exist pushing value setting variant content instance content forth mean overall reliance move need interact gut work addition lily_return_ function handle returning value foreign function need take pointer able use new api function need  api backend mean complete doe large amount need done allows others start working  intent patch overall make extension intepreter agnostic layout value inside hope one day might lilyjit seamlessly load extension written stock lily,,
1244,0a132c83ccb2cc55102b44e47a0ec0bdd63d9fb4,ascinated Box <FascinatedBox@gmail.com>, 2016-07-13 18:17:17 -0700, , exception longer need trailing newline fix 253,,
1245,990a480df1ba12746aa757f10f79b0909d2b355d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 17:57:45 -0700, , clarify message statement return fix 249,,
1246,c2b61262b9ae2ca64a27bbba9cd3839b8558843c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 17:30:50 -0700, , clearer wrong error method fix 247,,
1247,d9ff5e3bfcc0454b76998ee866959c6f820ff01a,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 15:09:39 -0700, , whoop forgot check lily_gc_stopper fix 251,,
1248,66ec4dbc3f146533f64b1cdaa3420ec711435aeb,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 14:59:39 -0700, , fix class lineage running constructor fix 250,,
1249,18081e45bfd421dcc1c73140cae816fc9605b73a,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 14:29:22 -0700, , need many generic fix 248,,
1250,940e67ea217984b519bb4a6f45245358c92928ca,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 14:24:03 -0700, , generic fixed use name error fix 246,,
1251,323767f835b6eef8ce014805fc12bcc1174e68ae,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 14:17:53 -0700,245, second shot 245 hopefully appveyor like,,
1252,58f7ea4d7deb7dda990db2af5e4253b8c9dd0888,ascinated Box <FascinatedBox@gmail.com>, 2016-07-12 14:01:24 -0700, , crash wrongly calling result call fix 245 error message good one lily currently facility pretty printing trace giving really good error something intend tackle release two stop crashing,,
1253,a7343f7f521d7a9af2408376c44dd2ebf74082a5,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 22:36:18 -0700, , remove osx travis build fail,,
1254,0e0cde64300223caa0de2f80f49dbd6b66d80356,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 22:07:56 -0700, , add osx travis thanks kainjow,,
1255,9bdb7a60db64dcbe231a1439694aae0096982d6b,rasm <crasm@vczf.io>, 2016-07-12 00:33:49 -0400, , fix indent space instead space,,
1256,bb50531c7e4e4c1fbe8c02d2d1b5daf791c31721,rasm <crasm@vczf.io>, 2016-07-12 00:19:51 -0400, , add magic number python2 script,,
1257,5c468b8fb1e995a59ec3dc08b69f7ed83f98cd3c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 20:05:16 -0700, , crash dynaload invalid scoop class never happen prepared case doe,,
1258,6f1dd36491cac61d70678b6337073ae8cc58e122,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 20:03:20 -0700, , crash return type fix 241,,
1259,76d8fe6d901fea42569d1d995eed13463f321b6c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 19:34:48 -0700,238, add test 238 whoop,,
1260,2612e7ef48dad3a08ee21f61f16d053873fc783f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 19:18:54 -0700, , fix crash lambda close self fix 238,,
1261,de63105ffc6995571ccec5cfc7fa2b6ca83e444c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 17:21:00 -0700, , abort lily does_not_exist dot fix 237,,
1262,20e613c8a5294ec8f8e341d6e397acf0d755b6bf,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 17:09:16 -0700, , properly make sure empty variant get args fix 236,,
1263,5470b61029ec656d74ae262a3f2d5aae4f1d2619,ascinated Box <FascinatedBox@gmail.com>, 2016-07-11 17:00:50 -0700, , parser check empty dynaload table fix 235,,
1264,c37bd70a91d4317d28fbcaedbdab4b1fdacd3af8,ascinated Box <FascinatedBox@gmail.com>, 2016-07-10 23:10:59 -0700, , segfault first line invalid utf fix 234,,
1265,ae3e4b968a6e659a1db51e2dcd7e5645f4734770,ascinated Box <FascinatedBox@gmail.com>, 2016-07-10 08:20:14 -0700, , version 0.17 format fix,,
1266,67aa024e5b918495db254f7040a69c3e71945d6b,ascinated Box <FascinatedBox@gmail.com>, 2016-07-10 00:00:15 -0700, , version 0.17,,
1267,0572f2032445013c16dc8cae1bab6a6c4fdc2ba9,ascinated Box <FascinatedBox@gmail.com>, 2016-07-09 23:30:53 -0700, , fix leak caused recent refcount patch hopefully last,,
1268,5c9e7981319f317e404e182c06d6a190954209be,ascinated Box <FascinatedBox@gmail.com>, 2016-07-09 18:24:19 -0700, , unquantified globals force strict match using raw greater equality allows transformation like .map option.unwrap fail strict equality unwrap solve type information better also compatible allow,,
1269,422bc89878900cbed37aaa461ec9a0e72a46671c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-09 01:01:19 -0700, , scoped variant print enum fix 218,,
1270,897859531a9a1f41f92564ec27864dba155aa8ef,ascinated Box <FascinatedBox@gmail.com>, 2016-07-09 00:57:01 -0700, , scope class printing seems right,,
1271,8e3e6ca4f84da6f1f787f563915754ef37f86eba,ascinated Box <FascinatedBox@gmail.com>, 2016-07-08 23:56:39 -0700, , fix leak default instance value recent fix,,
1272,43e073f3ca8835a7d77d7a15f11e8a39ec83b4b0,ascinated Box <FascinatedBox@gmail.com>, 2016-07-08 22:19:29 -0700, , class related everything 232 test provided alpha knew emit time relation beta runtime alpha incorrectly thought beta parent thus used beta structure later caused overridden string passed upper would instead instance mere fact tagged value reason inside beta non tagged value could also crash pas would incorrectly reclaimed,,
1273,53e5bcf6af0bd0c28fd0181dc511065c8ed7c191,ascinated Box <FascinatedBox@gmail.com>, 2016-07-06 20:44:14 -0700, , big refcounts start move ref increase many line big change internals refcounts previously newly made value started one ref move would put somewhere worked long time started write new api noticed problem start string.split creates list need put string inside ideally list created pre sized element ready receive value wanted function transfer value list would write ... string start ref need ref bump would need bump ref could write case want set specific kind value also want ref way easy get wrong new approach assign move increase refcount newly made raw value start ref offset except function never get true move assign,,
1274,400b4f0c2cf08b8e0c87c203e71c2480a2899e6a,ascinated Box <FascinatedBox@gmail.com>, 2016-07-06 20:29:42 -0700, , fix output refcount,,
1275,76ae5a02ac4872c1c898c8905942e31f8246a2b6,ascinated Box <FascinatedBox@gmail.com>, 2016-07-06 20:28:12 -0700, , allocate instance directly,,
1276,d5870d88696adadd49a555d887302f4b87468971,ascinated Box <FascinatedBox@gmail.com>, 2016-07-05 12:33:46 -0700, , correct v0.16 date typo fix 227,,
1277,f656887d2fe0b18f678e68e61f5727907cb45e42,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 20:46:00 -0700, , drop lily_tie favor value stack literal creates lily_literal lily_value extra space put different use dropping lily_tie save memory literal smaller transition linked list tie array readonly data,,
1278,9cf0e04c6723fa214c0ecd359dd10405184ca37d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 20:27:49 -0700, , fix crash trying interpolate none problem caused dynaload_enum fixing class running enum variant default store parent time made creation patching,,
1279,80a1c805038f37fc92b719e7a81b22202e7d2141,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 16:43:59 -0700, , expr remove lily_tie union nothing sends anymore,,
1280,a5a90de85806a496a6431006843559a315c1d6e7,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 16:42:38 -0700, , fix accidental replacement converting ast expr back,,
1281,c040b4634dc527d1d43b53783201e8f994f43e9f,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 16:12:47 -0700, , emitter match expression doe need check dynamic,,
1282,d277dd49a46015e465e6000261d18a81cf5ddb82,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 16:02:34 -0700, , replace foreign tie patch lily_value returned loader put stack held ready receive eliminates overhead creating foreign tie well entirety foreign tie,,
1283,7002f91d403a47046e37d62ba6fda48b80265b62,eter Cannici <turkess123@gmail.com>, 2016-07-04 23:24:17 -0600, , fix malloc used instead lily_malloc lily_malloc check failed null allocation,,
1284,1eae8a353de6c8acbe1f188a0d0cabfb9f009ef6,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 14:21:11 -0700, , add allow_sys lily option mod_lily sandbox 216 allows runner tell lily load sys package yes default,,
1285,2da45094ca67a7dd522a768a6fa50bd66a7973f7,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 14:00:48 -0700, , fix scoped variant collision issue 223,,
1286,4164e98a1f97c10bc6568a933c6fccad42d903a2,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 01:36:28 -0700, , drop is_builtin growing padding lily_class cls_is_builtin,,
1287,2ad2a9edd218b6abac9e95399857403c0ce1d1da,ascinated Box <FascinatedBox@gmail.com>, 2016-07-04 00:56:58 -0700, , finally drop is_refcounted lily_class,,
1288,f31f3ff2a359636c38efa9c3433aeb4a31b5a72c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 18:07:43 -0700, , sys generated loader dynaload table,,
1289,d7e0715d3376777591fd94a634edaf6f05492fc7,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 18:04:58 -0700, , mod_lily generated loader dynaload table,,
1290,fea3446571ad62d7a37e4575ea860a0cc1091d85,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 17:46:09 -0700, , dyna_tools.py fix handful small issue,,
1291,3eec17df8d05dba55a12ff2094da11afa580dee5,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 17:43:03 -0700, , dyna_tools.py add gen action loader dynaload table,,
1292,b8d2f3190b575af029359b475b8dec4b0895a54e,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 17:39:26 -0700, , dyna_tools.py gen dynaload pad output result going declaration left screen jarring make natural,,
1293,1541f74946d62201863f7b08269d73a85d010a3d,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 16:59:06 -0700, , dyna_tools.py generate basic loader fix 170,,
1294,c37ce69bcd3ffa514f18ee5e0596d0abeed30721,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 16:07:42 -0700, , dyna_tools.py generate dynaload table 170 everything builtin package builtin package nasty special case inside,,
1295,8b06013101e1e13326d4eedb22ec10bf97ea38d2,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 16:01:25 -0700, , added always give tainted matter consistency tainted built class needed entry cid table seems reasonable give tainted particular since small cost mod_lily updated longer use cid table tainted,,
1296,fc5771daa306c8c2954d053febe25c4b9f064efd,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 04:45:01 -0700, , change memory remark forth micropython possibly others beat lily memory usage,,
1297,5ab615fdd4b1dfaae5f982d8f7f477c0ca888d91,teve donovan <steve.j.donovan@gmail.com>, 2016-07-03 11:52:57 +0200, , emits boolean integer,,
1298,a525d06103c236fafd6d219caf775037fb237c0c,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 00:27:36 -0700, , builtins promise boolean deliver integer 205,,
1299,d8859471fcce49d10fa78f7d880a933463e9c8e4,ascinated Box <FascinatedBox@gmail.com>, 2016-07-03 00:12:32 -0700, , dyna_tools.py comment non core package 156 creates dyna_tools.py source tool use docblock comment base non core package commented core big next dynascan.py well tool directory gone useful begin,,
1300,2d7b21ed9164c24e3a813db5a3c5583f16c3705f,teve donovan <steve.j.donovan@gmail.com>, 2016-07-02 15:44:29 +0200, , mingw always link strerror_s window,,
1301,074709649e0f02f5240416f3893d5d9a20099fcd,teve donovan <steve.j.donovan@gmail.com>, 2016-07-02 15:43:43 +0200, , mingw try link ldl window,,
1302,4a53d6709fb2263484d4f3ec562cca4ab51cedb8,lireza Bashiri <azbshiri@gmail.com>, 2016-07-02 05:45:53 +0430, , extract specific functionality function make lily_parse_file function concise,,
1303,7c13a6be9c7375e155d380a7dbd2ddee1db00419,lireza Bashiri <azbshiri@gmail.com>, 2016-07-02 04:30:03 +0430, , remove pep8 violation use strip remove quote,,
1304,dfd6a42ebcdada25a40e8e5f6e7034bf6a6846be,oey Clover <joey.clover@sky.uk>, 2016-07-01 21:57:13 +0100, , improved lily file,,
1305,bdd619438f1ba2ac86657f543684b24085920c15,oey Clover <joey.clover@sky.uk>, 2016-07-01 21:54:12 +0100, , added help better argument support,,
1306,785a88534cced5331cd226460dc958a528ac3ccf,lpha123 <turkchess123@gmail.com>, 2016-07-01 13:12:45 -0600, , mention irc channel readme,,
1307,91d1005005f094cdfcc4800569af975ebe6f9f95,lpha123 <turkchess123@gmail.com>, 2016-07-01 13:00:35 -0600, , build bsds bsd libc includes family function loading dynamic library attempting link libdl fail,,
1308,b7e601f14261b9849ebed8cacd25a6ef493641a6,oey Clover <joey.clover@sky.uk>, 2016-07-01 17:21:31 +0100, , improved garden .lily file,,
1309,b622ce062226a8d8883c3ac06fb1f6ba42321eb1,ascinated Box <FascinatedBox@gmail.com>, 2016-07-01 08:58:00 -0700, , emitter binary check reuse storage getting new one,,
1310,8c4789724c09f7d059cb9f5da6acdb0282e6cb27,eini Urban <rurban@cpanel.net>, 2016-07-01 16:23:38 +0200, , silence wdiscarded qualifier src lily_lexer.c 1293 warning assignment discard const qualifier pointer target type wdiscarded qualifier new_entry source str,,
1311,a29f064568b2a87965b3d1fc819f811c72885644,eini Urban <rurban@cpanel.net>, 2016-07-01 16:18:51 +0200, , fix one wsometimes uninitialized problem lily_raise __attribute__ noreturn really need probe use adding null silence warning src lily_parser.c 709 warning variable used uninitialized whenever condition false wsometimes uninitialized else lex token tk_integer  src lily_parser.c 715 note uninitialized use occurs flag cls_is_variant  src lily_parser.c 709 note remove condition always true else lex token tk_integer  src lily_parser.c 705 note initialize variable silence warning lily_class  null,,
1312,c154e673263178e7150ae9fc083cc945cb868186,eini Urban <rurban@cpanel.net>, 2016-07-01 16:11:52 +0200, , fix wsometimes uninitialized apple clang src lily_lexer.c 1437 warning variable token used uninitialized whenever condition false wsometimes uninitialized   src lily_lexer.c 1616 note uninitialized use occurs lexer token token  src lily_lexer.c 1437 note remove condition always true ,,
1313,1ee706774d4339aef978242b36719e940cf755e6,ngo Blechschmidt <iblech@web.de>, 2016-07-01 15:23:58 +0200, , fix tiny typo,,
1314,bda7aa8ae290091a14b003d4d8a3f130c582b14d,amuel LÃª <samuel.le@gmail.com>, 2016-07-01 14:40:19 +0200, , removed file file breaking make install,,
1315,f2e709638992bcf004162d884c9cacc2c1a04787,ascinated Box <FascinatedBox@gmail.com>, 2016-07-01 02:37:04 -0700, , make __main__ file block seems right,,
1316,bf739af8bcf6770d42a8eebb91b0b6869fb52f82,ascinated Box <FascinatedBox@gmail.com>, 2016-06-28 07:23:12 +0000, , pull match case verification parser,,
1317,464c36d89fba096d093ccd31e2c2d6b6a9ab278f,ascinated Box <FascinatedBox@gmail.com>, 2016-06-28 04:43:45 +0000, , simplify jump handling condition eval,,
1318,259a19015996c0c58824c8943a3482a36349b03d,ascinated Box <FascinatedBox@gmail.com>, 2016-06-25 22:40:59 -0700, , lexer entry longer store filename lambda dynaload interpolation made lexer list entry actually opened also lot filename passed actually junk three could work around recently opened filename found poking symtab active module path needed,,
1319,40bfd5cbefbf550994bb9020a23055e1232a780f,ascinated Box <FascinatedBox@gmail.com>, 2016-06-25 19:44:18 -0700, , check many call making new frame already existing frame recursion limit going hit,,
1320,c39524ba7fd332e44837bdb0a9373519a34a79dc,ascinated Box <FascinatedBox@gmail.com>, 2016-06-25 19:23:09 -0700, , make class need field self type,,
1321,7f6831115bd74486d8c405ffeba97b87192cc28b,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 18:35:38 -0700, , fix invalid read dynaload table specifies cid table,,
1322,d430ca558ff9d0656adc20d4b6570a768aa0ab3b,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 16:02:55 -0700, , centralize dynaload cid table set,,
1323,9ee73dbadc26a413bdd00a3ee10674f3f2182a27,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 15:35:53 -0700, , cid_start unused since cid table made remove,,
1324,95dbd5a414ab8da63baa996322df6816402e6404,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 15:21:03 -0700, , create builtin package easy way make sure builtin package get cid table need one coming soon,,
1325,6867ce7790faab88b628b0dd5fcffd545a23145a,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 14:42:21 -0700, , drop enum_slot_count worse useless closer inspection enum allocation reveals leak enums allocated largest variant size given variant recorded also enums value class assigning creates new value initially thought swapping value enum class ref might useful nothing core doe ... let bother least,,
1326,4ffe1ed3c9663d8fb764849a701dc71a66de0305,ascinated Box <FascinatedBox@gmail.com>, 2016-06-24 14:37:14 -0700, , correct comment type field class,,
1327,ab9f4dc8697fed1ebdc42b29235b47a10bd9fcd2,ascinated Box <FascinatedBox@gmail.com>, 2016-06-23 22:04:58 -0700, , send partial eval trash old closure code idea variant would produce type instead result since may full type info past typeful even odd decision typeless result storage partial completely harmless since deal type rare chance one function might pull extra storage however chance infrequent doe get hit really feel going super huge function build many set many partial save insignificant easily outweighed numerous problem caused around drop make core simpler,,
1328,3f1c5e9c59311efe2d1c39ab901e95b5328f3aca,ascinated Box <FascinatedBox@gmail.com>, 2016-06-23 19:09:30 -0700, , lift block handling try match previously block would setup state call statement statement would peer peer would check correctness well handling expression body weird actually hacked around simple regular block start run body body expression peer block huge advantage block created recursed block destroyed recursion escaped using next patch another adjustment block work make make sense,,
1329,d80c5f302ffbd7eae3ca9900dc5f5fa09e3b461e,ascinated Box <FascinatedBox@gmail.com>, 2016-06-23 02:17:49 -0700, , rewrite outer facing part expression handling previously ast pool managed wanted save restore expression ask freeze state long time worked fine lambda even interpolation thing worked great try rewinding pool going easy got freeze state allocated even though need alive runtime another problem solution redo parser carry root expression think checkpoint expression state created stack based whatever last checkpoint rewinding much easier root becomes current rewind save entry also another benefit freeze entry longer hang around runtime longer allocated small gain part also included changing membuf string_pile many function trimmed expression using thing much limited use originally thought,,
1330,0a2a2da2f18b62a364ca96c78623363257d25050,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 17:48:00 -0700, , create replace call var __import__ function implicitly globals within scope instead __main__ need local exception capture loop iter etc fix number strange issue crash would happen trying import something code top,,
1331,eeaceb0345639ff932cf59b74643bc900a1bce79,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 15:25:04 -0700, , allocating traceback include func name strlen ...,,
1332,06068046de0161373c5b5e2655491266966f9a92,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 14:58:51 -0700, , fix exception class working together correctly problem dynaloading exception error class completely done emitter assumes recently entered class one receive class method happening dynaloading breaking assumption went like happened exception would get .new whatever class dynaloading turn would cause exception two different constructor one original exception one first error happens later second exception derived class come around wrong constructor message traceback field properly set ... interpreter segfaults raise good time,,
1333,82196f0729c711f413b552ed7f941c85684ab9ca,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 03:58:46 -0700, , fix simple oops either.left either.right caused bad free,,
1334,3f66e80be93918a78a6397ac1133f12f650cb365,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 00:53:50 -0700, , make unquantified global use sys prevents writing script import passing test interpreter complains use like complaint,,
1335,1b7ce0c45bb3926e48b3894e01b30b7bb0415aa1,ascinated Box <FascinatedBox@gmail.com>, 2016-06-21 00:50:58 -0700, , emitter prevent __import__ ever marked closure,,
1336,560413f84a5ad62b132ec74ac8d930ebf17db7df,ascinated Box <FascinatedBox@gmail.com>, 2016-06-20 23:11:30 -0700, , use macro common part lexer string file reading,,
1337,7fb1d42f842cc30be8701b626e1221703439e8aa,ascinated Box <FascinatedBox@gmail.com>, 2016-06-20 20:04:36 -0700, , let use patch ... new closure transform code smarter better instead tell two special first special later fixed closure transform code register closure decided take,,
1338,ea5424cb151bf0bbf21688e90a712a886a4942fe,ascinated Box <FascinatedBox@gmail.com>, 2016-06-20 17:00:27 -0700, , garbage old closure code belongs trash drop,,
1339,18a775c8ee6f8c1fb53ad22c175b9534020611c8,ascinated Box <FascinatedBox@gmail.com>, 2016-06-20 16:50:17 -0700, , create lily_code_iter use closure transforming ... first good part old closure code longer used instead new code iteration api walk code written auxillary buffer meantime make easier figure going transform code iteration also easier pleasant look  new code iteration part interpreter flexible structure old opcode table adding new opcodes fixing couple latent bug well disassembly much much easier bad part jumping back broken actually always broken closure using continue ... going break,,
1340,18a1391d495488680e97ce2b3e102556876a1f72,ascinated Box <FascinatedBox@gmail.com>, 2016-06-19 20:21:01 -0700, , o_for_setup remove last field unused,,
1341,dffd14f9bd4a353bc0b97d90396930f7eafee68c,ascinated Box <FascinatedBox@gmail.com>, 2016-06-19 12:49:31 -0700, , normalize o_integer_for o_except_ putting jump end,,
1342,acf3984da582fd8ee0b78cf4f0ff678cd98b7440,ascinated Box <FascinatedBox@gmail.com>, 2016-06-18 23:48:25 -0700, , let try link,,
1343,5b9f7201ef7ad48a2093124cf86b63757f765ffc,ascinated Box <FascinatedBox@gmail.com>, 2016-06-18 23:39:39 -0700, , rewrite front page readme incidentally fix 180 front page postcard example rather bunch code sandbox highlighted importantly focus lily picked language step toward serious language ... even example inclined towards cat unfortunately absent scooping type well tuple merging make note point future,,
1344,bbd6e07ec3aa27a8ff23bdec1c5b971688bb3864,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 22:18:03 -0700, , o_get_property o_set_property normalize make index first,,
1345,1c961c055093b38ac61f81a5e0fe03437aa8c8f7,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 21:49:37 -0700, , o_for_setup move output end,,
1346,bc34a853e26dfca38bfedf25a8ff5160e6c1b193,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 21:02:19 -0700, , create o_except_catch o_except_ignore specializes except clause code longer need field say code caught also done tuning actual exception catching around opcodes since silliness setting next jump checking success example also fixed o_push_try falsely mentioned took three value also said count two truth two field interest,,
1347,6f1e20bb593a7e5f8faaa7712fd7de515d91a0be,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 16:57:26 -0700, , create o_foreign_call o_native_call three opcodes calling function difference source call o_native_call target foreign function print o_foreign_call target function created define o_function_call target register may hold either lily doe allow built function function created define assigned detecting easy distinction allows call opcode focus exactly case longer need o_function_call call style field bytecode,,
1348,e6c9b7d4fefcbf88974589b822be8ef64e120e3f,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 13:53:01 -0700, , make custom local call handling,,
1349,101e6c3b34790a0c8fc215400f6d6c538231dc5f,ascinated Box <FascinatedBox@gmail.com>, 2016-06-17 13:19:26 -0700, , msgbuf clean prototype make header need mind actual implementation msgbuf need still outside longer need important msgbuf used frontend well backend parser change including dropping use add_fmt add_fmt_va instead likely actually need making passing bytestring passing buffer size directly,,
1350,d0060a7a2a5120adb1aa77d1825aa179ec89c831,ascinated Box <FascinatedBox@gmail.com>, 2016-06-16 13:07:54 -0700, , emitter code lily_buffer_u16 writing function emitter within lily_buffer_u16 thus available u16 buffer key motivation trying clean buffer used internally emitter make easier needed parser smidgen code writing also discourages direct writing source large number problem also step toward rewriting closure patching,,
1351,65d257d396c1b1a23deb1199a807a6d1386690ec,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 18:30:13 -0700, , lily_buffers lily_buffer_16 internally refines idea previously generic buffer type handle various type pretty weaksauce implementation template buffer uint16_t shortened u16 focus come along added writing function writing two new writing function help eliminate minor issue present optargs liked writing pair also lay foundation making emitter code code buffer instead spread emitter struct right,,
1352,c842759a3a7a005beba09ab747120a91fc120abc,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 18:09:17 -0700, , lily_vm.h remove couple unnecessary thing,,
1353,9be376a9564aa27be9f8a2832ffe9255212c43f5,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 15:12:32 -0700, , create lily_vm_raise handle dynaloading previously exception handling code dynaload logic bad hot area deal concern ever part previously called lily_raise instead call lily_vm_raise make sure exception matching given class associated dynaload run downside prep __main__ way bottom emitter doubled 32. done yet ready tackle underlying problem need framework first,,
1354,db8828ef85e3f4cd1697526bae20724dfd2e79bb,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 13:19:53 -0700, , raiser add aux_msgbuf drop used situation part interpreter needed build complex message part match block case failure key error would use raiser msgbuf write error would call bypass writing error let lily_raise super fast path much simpler way come recently auxillary msgbuf stored raiser storing raiser mean contention hold passing around free right emitter need raiser holding complex message interpreter grab aux msgbuf flush writes call raise using aux msgbuf message nicer easier make raiser api one function,,
1355,60cdb3b3d5eb21f334bdeda3bc06543b9d187ce1,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 13:11:21 -0700, , raiser msgbuf never fails alloc remove check,,
1356,a2665b93566782b6d1c40fe8d30e0049c7762d83,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 12:48:55 -0700, , raiser store exception value part interested raiser exception proper value make raiser responsible holding exception stored,,
1357,f03c21dd69995392b3813405d53ddb70172180f9,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 12:30:04 -0700, , minor cleaning lily_raiser.h nothing special,,
1358,cf6d2e2ab1bc2405d2f4d86fe5b504e4fa91bae0,ascinated Box <FascinatedBox@gmail.com>, 2016-06-15 12:03:11 -0700, , rewrite comment also get rid tab,,
1359,1b909d2574383d7236b55805f72b8e6fa0a1a4e6,ascinated Box <FascinatedBox@gmail.com>, 2016-06-14 04:59:57 -0700, , tainted builtin exception instead going use base dynaloaded error based position relative exception first move tainted exception error class,,
1360,10434a317d75ed119132e8d5f04573bd91d72885,ascinated Box <FascinatedBox@gmail.com>, 2016-06-14 00:55:17 -0700, , remove special cased tainted get,,
1361,2a62bcf3f9341b84364744bd3242577c6a4fa1af,ascinated Box <FascinatedBox@gmail.com>, 2016-06-13 20:00:09 -0700, , drop catch_top use catch_chain instead,,
1362,6243413f265c4dd3ff03424499719e51ac06a2ff,ascinated Box <FascinatedBox@gmail.com>, 2016-06-12 15:32:51 -0700, , remove google group link never used,,
1363,d03b8841b6295b8785fbb646e10ebe29b90d3d44,ascinated Box <FascinatedBox@gmail.com>, 2016-06-09 00:42:59 -0700, , mit license 2011 2016,,
1364,eb65ed42c5d174b2b5a6ad490c1f589e68cc116c,ascinated Box <FascinatedBox@gmail.com>, 2016-06-08 06:14:09 -0700, , introduce scoop type plus tuple.merge tuple.push scoop type solution allows arity tuple used two new tuple function scoop left greedily match many type right side important part matching bottom type degrading type come also type saved resolving type sent mean tuple.merge work combination two tuples still retains outgoing type,,
1365,c6e866daf47a8f7347dd17ee7fcb80b3088fc048,ascinated Box <FascinatedBox@gmail.com>, 2016-06-08 05:58:54 -0700, , cut o_build_list o_build_tuple forgot type erasure internally tuples getting tagged list caused issue value interpolating printing correctly backend function switch based opcode given,,
1366,d3d2ff1c7b558f1bd12a4b55d4c84e07b5d067ac,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 19:50:24 -0700, , resolve return solved type ... rebuilding something generic inside complete utter waste time know,,
1367,2dc378538391d76643a3cb0b311644747e64c176,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 18:49:07 -0700, , fix crash inferring really long tuple,,
1368,9330e2f03552e9dac92fdf111805f12e85e9f032,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 16:22:38 -0700, , actually type check first argument call otherwise code like stdin.open allowed crash later,,
1369,e966314bda2c0957522744d0fd8e922c7613d744,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 16:06:58 -0700, , lily_ts_check use covariant matching using invariant matching old way caused container inherited another properly match seems correct thing overall anyway note still pin generic generic found invariant position get later,,
1370,d9a8e98cfd71cdada10a893dafc899d7ec85e07c,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 15:20:41 -0700, , emitter bad_arg_error take wanted first got second make ordering lily_ts_check,,
1371,0d58dda454baa890da65b92468ddc8c161322bed,ascinated Box <FascinatedBox@gmail.com>, 2016-06-07 00:52:34 -0700, , save restores checkpoint struct,,
1372,49e0decdc9c1fcee476a2beabfd56382c46cfd08,ascinated Box <FascinatedBox@gmail.com>, 2016-06-06 20:58:05 -0700, , make never see reserve optarg class instance exist sequential waste space make class table also avoids search optarg class since always fail,,
1373,db25dc9f3049e23a34f86d07e37e7c2f5e0e2b7b,ascinated Box <FascinatedBox@gmail.com>, 2016-06-06 15:05:31 -0700, , big dynaload 2.0 cid table fix 181 huge change language doe many thing badly needed time dynaload table backed string instead linked list mean implementation lot saner seed worry special bit sure custom internal listing simpler easier spot runner registering package need define loader loader reponsible transforming integer entry dynaload table either function var probably slower lily used grab function seed linked list entry better library like postgres specify class method lily automatically load naming scheme lily_ pkgname_ clsname_ funcname saving cid table cid short class_id table contain integer dynaloaded class format dynaload table specifies usefulness cid table come right time regardless something dynaloaded used much near future also merges lily_cls_ file one file lily loader need boatload extern also gone trouble making tainted sanitize done built function instead bootstrapped done work adjusting postgres apache new internal stuff cid table new dynaload table dynaload table hand crafted future hope tool automatically generate added nasty stuff apache particular gotten around rewriting hash stuff yet,,
1374,4895b70eaa00376fe2bd818e82a5c1f19d030881,ascinated Box <FascinatedBox@gmail.com>, 2016-06-06 14:43:08 -0700, , prevent dynaloaded class accidentally becoming closure,,
1375,25344f942616cad56a6d596b5844e673cc562c48,ascinated Box <FascinatedBox@gmail.com>, 2016-06-06 00:37:52 -0700, , use check library using name instead liblily_name really like liblily_ special case apart others something want eventually use library actual library linking add lib prefix need also library get mixed around normal system library really seeing need special prefix may revisit future though,,
1376,a0604d60b56f236979fe668c1cf7ed682c337240,ascinated Box <FascinatedBox@gmail.com>, 2016-06-05 23:24:35 -0700, , forget restore parser generic count enums,,
1377,b30f416050870fd6f5f813d6310b1b29ad7c308f,ascinated Box <FascinatedBox@gmail.com>, 2016-06-04 21:44:49 -0700, , extract free lily_library obtained keeping around useful dynaload table important part handle immediately extracted believe library ever need keep anything two part keeping useless,,
1378,0baf58bec377747dd55088b450492e7aefecc0e9,ascinated Box <FascinatedBox@gmail.com>, 2016-06-04 18:08:32 -0700, , lexer scan_buffer field unused,,
1379,bc9634374a9230786917ccb6675650d27084ff84,ascinated Box <FascinatedBox@gmail.com>, 2016-06-02 20:12:30 -0700, , remove unused parser builtin_module,,
1380,6a581b21d200562420a812862d119370b45ff0bf,ascinated Box <FascinatedBox@gmail.com>, 2016-05-30 10:57:35 -0700, , class either property count variant size,,
1381,b7db3004491c27d8dfc7ad48f627bc33290d2661,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 19:53:29 -0700, , tree_literal hold type register spot also remove lily_tie ast thus emitter part trying reduce tie fewer fewer place eventual goal replaceing maybe lily_value,,
1382,725ed5a65fe58b8a9f39a33c6123bdbe777f36b2,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 19:37:52 -0700, , typecast_type type remove useless comment,,
1383,7546b4c05b528d63753b4507ab2377e27d1b9756,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 18:06:22 -0700, , simplier condition optimization optimization done boolean integer literal likely majority case true etc,,
1384,29eb18dafa3fa5ebbda144bd7d19df642b106566,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 17:33:28 -0700, , unused remove,,
1385,d7f7abe31586d49bfc11878506401d6104044715,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 17:32:10 -0700, , use o_get_boolean o_get_integer optional argument,,
1386,6d2dfddec66252c203e580814ee9561cc9a850a5,ascinated Box <FascinatedBox@gmail.com>, 2016-05-29 16:27:35 -0700, , create o_get_boolean use true false constant,,
1387,91e9bf0001491291a5f8a9415d8bfe59abb1cdec,ascinated Box <FascinatedBox@gmail.com>, 2016-05-28 01:23:56 -0700, , use o_get_integer everywhere optional argument getting emitter stop poking around literal value checking tree_integer used snooping around inside literal check backing value instead poking,,
1388,6d48fb111f22119787a27695997ef3e0dfb5c6cd,ascinated Box <FascinatedBox@gmail.com>, 2016-05-27 21:31:19 -0700, , __line__ make use new o_get_integer also add int16_t cast side make absolutely sure left getting right signed value necessary later,,
1389,189eea987ef3f5138c7d19adb0abbded59f89ffd,ascinated Box <FascinatedBox@gmail.com>, 2016-05-27 14:38:49 -0700, , replace o_setup_optargs however ... first rationale previously optional argument worked counted set pair register spot literal spot long time totally okay ... added variant value optional argument seemed natural backing value literal optional argument would work three problem approach new opcode o_get_integer used loading small integer literal ... optional argument since require literal variant require backing literal cascade foreign function follow pointer get backing value say none value strange opcode one series pair inside make difficult work term closure patching extra stuff want later new opcode doe pretty similar work take series jump follows appropriate one based argument first one value installed since work based jump write whatever want like new opcodes better way variant default bad part closure longer work optional argument inspection reveals actually happening match dispatch well decided comment offending test like unique situation really prefer start destroying closure code instead really fragile,,
1390,4b79c6f7a581a3bc782af4a6414be0f90938eba8,ascinated Box <FascinatedBox@gmail.com>, 2016-05-26 23:09:38 -0700, , remove repl .gitignore,,
1391,d838e51f3ba73384a5b5456bae3806a28dfa532a,ascinated Box <FascinatedBox@gmail.com>, 2016-05-25 18:41:11 -0700, , function dynaload forgot restore generic position,,
1392,b863875044d39f86e26c2eb5598ba99b47fc12eb,ascinated Box <FascinatedBox@gmail.com>, 2016-05-25 15:04:53 -0700, , fix recently introduced bug involving return exception bug caused moving try block pop processing return statement expression sent return capable throwing exception exception would caught try block pop fix also add test make sure goof ,,
1393,6239ff19f07674f255c7ac9e465cbccfc529f660,ascinated Box <FascinatedBox@gmail.com>, 2016-05-25 00:16:35 -0700, , simplify logic new type building,,
1394,a7f8d148c5a7bf35210320f4bb67fb17a17a86c5,ascinated Box <FascinatedBox@gmail.com>, 2016-05-25 00:08:14 -0700, , calculating result variant actually useless long time ago enums self type return variant useless stop calculating actually little dangerous causing empty option created,,
1395,799d3261b5929e85f30edff833f27698f51c71ea,ascinated Box <FascinatedBox@gmail.com>, 2016-05-24 18:19:41 -0700, , need stack type handle stuff,,
1396,eccf8c1204a10ad276ba0afdd22e4b055db04a0e,ascinated Box <FascinatedBox@gmail.com>, 2016-05-24 18:05:32 -0700, , fix weird search replace accident,,
1397,44edbd1ada2672ec2b6a36ae7079a126f28abe44,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 23:59:10 -0700, , string value always string check holdover allocation allowed fail instead lily aborting,,
1398,2f8ec145536ecb5b34a1d50662889a1aeb01799e,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 23:50:42 -0700, , tag set one probably impossible,,
1399,21ba01b952639a93a1300d02da6e71471d0bdcfc,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 23:46:11 -0700, , num_registers set anymore,,
1400,ae2b51cba31c976b20868d1b911637b1814252cb,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 21:45:16 -0700, , parser parse_constant push_constant handling magic constant used yield expression push push value constant expression allow redo pushing integer literal instead push integer constant,,
1401,6777db479e64cc7698be4126696d59ecd84ff4a4,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 21:34:25 -0700, , lexer stop making integer literal let parser decide want better view done lexer low level view,,
1402,0c866a7e06ab6a8353d46217908df8cc26091137,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 19:47:58 -0700, , create new o_get_integer opcode partial use implemented loading literal value value best solution imagine new opcode o_get_integer doe know condition boolean get later moment opcode help wean emitter literal information,,
1403,4db5fd06505629fbd4559a3b0593cc5232c2a887,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 16:58:13 -0700, , parser move error check self outside keyword checking way entire function doe need need error checking,,
1404,abcb38a3fa2e7550405673ca6b5937caae6421fb,ascinated Box <FascinatedBox@gmail.com>, 2016-05-23 15:42:30 -0700, , create constant table alongside keyword table centralize magic keyword handling expression word handling,,
1405,55df1371f327294ccbe4994147806e4da26fcc80,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 18:28:04 -0700, , get rid one user line,,
1406,1de927574ef0ffbef67d03828adc4ca542b6047f,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 18:15:28 -0700, , create use little bit,,
1407,326e2b6fa59f0d0f10d6604f8f33d2cb826dc48d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 17:57:51 -0700, , class store method property place get rid annoying call_chain class always around symtab still retains outside interface looking property inside going change rather shortly though,,
1408,d9ad78452098f804f3cc109c8ba45403450c5d1c,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 17:21:05 -0700, , create lily_named_sym class property start toward simplifying cleaning symtab put class property named sym proof concept also removed comment stuff longer exists case,,
1409,22894c8a9b69efb67c855b2a1464a11d0a67090f,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 17:06:13 -0700, , remove leftover reify instance building,,
1410,af7176a88fa9bf89d10df041a0dc0eb1b298fe10,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 15:14:59 -0700, , ast drop text tree packing shuffling,,
1411,7081c36820adcc188796863de71587bcd92633a0,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 15:05:54 -0700, , ast actually unary tree thing kinda suck ast getting packed better usefulness pushing everything subtypes starting quickly wear,,
1412,825a1293c55508adfe8327ae0212ea83548af43c,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 14:59:40 -0700, , ast add unify two field underneath,,
1413,f9cbfa1c8e18f8c3bbb630d85b077e0cbe76b0ad,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 14:34:13 -0700, , ast pack typecast_type item group,,
1414,41e6b83a1b11782f007c36a496f38b964648d86b,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 14:31:51 -0700, , ast make priority tree_type cram even harder,,
1415,e2a95605d1bd51e7cb2e40ffb976ecd8fe9c5ce2,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 14:26:41 -0700, , remove repl repl missing lot functionality also common people going look ask repl want first experience lily repl broken mess right fully plan add repl back time lot internal refactoring need done refactoring alter data going saved restored sorry,,
1416,8d52b56bce93c60172ee06617aa7d6341449ac4e,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 14:19:14 -0700, , ast union ize result result_type make use latest patch make lily_type able act lily_item putting item kind field,,
1417,e0dc3c7a47a97ad57278280844064242ea12e23d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-22 00:48:18 -0700, , lily_type item adjusts field make work doe yet make use functionality prof work without crashing interpreter failing test,,
1418,d169ac58f6be2126b7af8bb635e15bed965f6d18,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 20:05:20 -0700, , property unused,,
1419,0b12d158f46731c523f71bd28d448bb4b4256074,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 20:04:07 -0700, , optimize check need bidirectionally check downward checking upward waste time think least,,
1420,881ba491e4abea9a3f3423b957b8ca83ea3bc5cf,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 19:14:14 -0700, , ast create lily_text_tree,,
1421,5c902b76cbf1c1d6b295de76aec87da8185362f3,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 18:51:20 -0700, , create text pushing ... get rid _push_oo push_expanding,,
1422,e6b64b494037eb8b294fdc3f6f0db80b2cd90446,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 18:35:39 -0700, , take membuf away ast give emitter emitter fully charge rewinding buffer back doe whenever run expression currently small issue wherein parser rewind buffer freeze thaw state plan fix later line pull ast state away pool,,
1423,af8fce05305cae954860b848e663e9229be4898d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 18:13:08 -0700, , emitter charge rewinding ast_membuf,,
1424,3649652bddb6b74d39767dc08c07991987aa2984,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 17:47:49 -0700, , emitter raise take pool rewound,,
1425,b3f9bfc8e621256c203efded24e792642fb0f33f,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 16:57:21 -0700, , return work parser sending pool emitter checking pool previously done parser clearing pool exit emitter responsible resetting pool state since know ran tree slightly smarter also pushing tree resetting emitter space,,
1426,adc05445f232d4f36768ef5bb818ca1c6a9a931d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 16:42:37 -0700, , parser block checking return emitter,,
1427,d71b145cb15fd7cdbbc5dae4088a1008c198c3da,ascinated Box <FascinatedBox@gmail.com>, 2016-05-21 16:08:00 -0700, , ast new lily_unary_tree unary cleaning,,
1428,2fc9d322f6859d14512cb7b1be1782264eb560a1,ascinated Box <FascinatedBox@gmail.com>, 2016-05-20 18:37:46 -0700, , remove unused is_root field lily_package whoop,,
1429,25b976a73a38f97b48826a4d68c0b3bf4759d879,ascinated Box <FascinatedBox@gmail.com>, 2016-05-20 18:18:36 -0700, , learned something new today humbled,,
1430,22689a929ba52b33bec5968e5fc728596b7dabec,ascinated Box <FascinatedBox@gmail.com>, 2016-05-20 15:45:24 -0700, , value push placement gc_entry done three reason list tuple never mark inherited eventually allowed dynamic take field resulting size smaller dynamic might eventually represented sorta class entity internally since layout entry bottom instance enum implementation mean allocate short instance include entry field short term save memory every list tuple made penalizes dynamic long term eventually allow saving memory instance enums well,,
1431,89b8eeaca0b8d959105185253220b5b0cb6c4eb4,ascinated Box <FascinatedBox@gmail.com>, 2016-05-20 14:59:06 -0700, , move marking hide outside,,
1432,4cef493bf2cd0e7767ce41491569d0388148244c,ascinated Box <FascinatedBox@gmail.com>, 2016-05-20 14:45:09 -0700, , move destroy function lily_value_ops mean lily_cls_ file included get destroy function inside strategy also make easier see full reference implementation destroy function except hash make sure correct hash included couple function within hash require able destroy value probably merge later redoing hash internally,,
1433,20110c24e80f556bdf1b88e7c1fd30254ea7cc0a,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 21:38:12 -0700, ,  really doe describe operation value going include definition value though soon,,
1434,40d87bf78c7da28ac89f541437e3702e340feb0c,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 21:33:12 -0700, , cmake installs api header api may complete done far unlikely change start installing api file eventually apache postgres emscripten weaned using non api file true api established,,
1435,3ab2ad6b1f4d12b925f00ebe4f6523c2559ff07b,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 21:29:41 -0700, , promote lily_alloc.h,,
1436,e504a0d880803fd7fcddb0227e359b103982e19b,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 21:16:24 -0700, , make lily_free function macro hard guess future could see say compiling lily aggressive malloc implementation library using regular free instead lily new free implementation would make unable participate testing later macro ized later need want ,,
1437,cb8a04f41cbac962019027f5798df9b8a3f8c79d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 20:15:32 -0700, , add garden readme,,
1438,4c64f1d1ac9d7f05cae1c3b503cb9fac54b8af7d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 20:10:38 -0700, , small adjustment package path lookup ... previously library checked directly package directory consistent plain file loaded also plain file specific name care either new path package name name.lly package name liblily_ name dll,,
1439,77cdb9fdcd8d8bfc34f71eb68ba24da0194ad084,ascinated Box <FascinatedBox@gmail.com>, 2016-05-19 19:02:33 -0700, , create garden.py proof concept package manager script pre alpha little effort spent hope eventually garden designed entirely lily however going possible time soon lot core still need done work sorry,,
1440,39c2ac675f405589abc8da9aa1cab13253989eb0,ascinated Box <FascinatedBox@gmail.com>, 2016-05-18 16:12:20 -0700, , drop unused since type erasure,,
1441,79f35d46b2274eb1c9c6b755e40adbdc94b3f609,ascinated Box <FascinatedBox@gmail.com>, 2016-05-18 16:10:09 -0700, , emitter explain quantification better function call,,
1442,fdb585d9cf57ab5259b5590d759c8e2f87065282,ascinated Box <FascinatedBox@gmail.com>, 2016-05-18 02:57:49 -0700, , use smarter way get __file__,,
1443,de5350359a76bb3cfc5dec0365573e707afc81e7,ascinated Box <FascinatedBox@gmail.com>, 2016-05-17 20:47:05 -0700, , remove junk mod_lily.c source,,
1444,cf54db377d17dc3ea1abd3038c86c3f3da4b5499,ascinated Box <FascinatedBox@gmail.com>, 2016-05-17 17:38:22 -0700, , lexer html sending function within lily option default shove data stdout runner use care,,
1445,7a780fe7cac5d2f91f2d10c8d028210513e2f6ff,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:42:16 -0700, , pre commit add try dir test dirs,,
1446,c71602fcdda3e6ee807f6fcf8faa53f4e763f4f5,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:36:24 -0700, , pre commit count ... first line otherwise dumb thing like use lot single line comment instead big block comment,,
1447,88c97378f92da798e1af3a0ad805668c834686ee,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:27:35 -0700, , __name__ always main pre commit script,,
1448,b51b8b7246b3058ddddb1168b4ad7fba7e3a9350,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:23:21 -0700, , fix strange type issue try dynaloaded enums registering number generic available need information set aside space generic solve null ing slot since information provided integer type bleeding causing left solve wrong type,,
1449,a95c4612409d74f9ec179db0adee91bb17dbcc68,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:20:29 -0700, , make two try example work,,
1450,744e6ab58a10bae4cb4f0abf34c11f45218b07db,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 21:12:30 -0700, , emitter bother building useless type,,
1451,c162d86418ec2ad0468cb4a84fe9466264098be0,ascinated Box <FascinatedBox@gmail.com>, 2016-05-16 20:11:44 -0700, , sandbox leak option use,,
1452,1f15848723d6677c6be94fe66558a9f48f60b490,ascinated Box <FascinatedBox@gmail.com>, 2016-05-15 21:25:38 -0700, , new packaging system promised toward 178 complete rethinking lily organizes code importance understated commit extra code could come variety hardcoded directory path great convenience compile new library lily drop one directory easy right happens two package want different version library never taken consideration lily new keyword called use use load package package directory relative first file loaded running built package accessed use instead import bound lot naming change change two different package package directory two different version library wish two big benefit make package modular make easily repeated build later line package manager yet done doe internal work get ready,,
1453,bcb666df4e18bfaac18e4a39d4de89a09974eeed,ascinated Box <FascinatedBox@gmail.com>, 2016-05-14 23:33:48 -0700, , allocate memory foreign function always,,
1454,2f841a204a2b7fc24cad46e99c3feff0085cf692,ascinated Box <FascinatedBox@gmail.com>, 2016-05-12 23:30:24 -0700, , need prep __main__ register leftover reify,,
1455,c99287d21920b0784ee8136f0353b2f3c6db63cb,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 06:41:08 -0700, , ,,
1456,9a9701c7b7bc5b984ffe87f542092caad01f1588,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 06:36:21 -0700, , second try google group shield,,
1457,733bc5f083a198961f2f652bf3951b6476e7b1d6,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 06:32:28 -0700, , replace gitter google group,,
1458,4c8ba3d47a9046001f5cf8ba5afa599777893d3a,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 05:33:12 -0700, , basic rewinding partly working repl introduces lily_load_chunk rewind back error loading transparent caller think caller best position direct interpreter rewind still experimental repl half working right continuing doe rewinding yet yet come,,
1459,617f3f431601d2163f5e855fdc822e43ed9fe6a7,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 04:31:47 -0700, , remove unnecessary forward struct,,
1460,90bb8e4edc82b6f41ab87e9c821cc40bff993092,ascinated Box <FascinatedBox@gmail.com>, 2016-05-09 01:24:14 -0700, , parser quote unexpected token error name,,
1461,668a1e54694eda18dce7d5cdf5c4435f8da89a68,ascinated Box <FascinatedBox@gmail.com>, 2016-05-08 23:48:32 -0700, , remove freenode lily link small community right useful may added future change,,
1462,5cb45deab6e23cbc3ce71e1d590484ab4b953f66,ascinated Box <FascinatedBox@gmail.com>, 2016-05-07 23:14:48 -0700, , const ify class_name trace_name,,
1463,0f6dbcf319644f71f167921f7aaab357dab7b3fa,ascinated Box <FascinatedBox@gmail.com>, 2016-05-07 05:21:40 -0700, , drop lily_impl.h file never ever contained much first made lily added expected lily would end needing lot outer function provided work time shown case drop file lexer user declares top explains call good,,
1464,36e97e72ae1a6dbfdbed312d373f6c7cbefb6d76,ascinated Box <FascinatedBox@gmail.com>, 2016-05-07 04:32:55 -0700, , create lily_seed.h also includes new macro dyna_function allows much simpler creation function dynaload seed plan expand upon macro provided include macro first wish internal rearranging,,
1465,71c944e3c3eb5a1a2d059355c07d174fe04c3a98,ascinated Box <FascinatedBox@gmail.com>, 2016-05-06 21:46:54 -0700, , fix include guard name new header file name,,
1466,9091ce803501e1d04f3bcb402054476b65c60778,ascinated Box <FascinatedBox@gmail.com>, 2016-05-06 20:09:17 -0700, , broke build forgetting git add file,,
1467,1aff105db621fa0eb2ffb3a5cebf886320f7d6e9,ascinated Box <FascinatedBox@gmail.com>, 2016-05-06 19:49:10 -0700,176, merge pull request 176 pranomostro master rename number come argv stdin,,
1468,dab15a77d4c600403e097a6098053846e8b62fa2,ascinated Box <FascinatedBox@gmail.com>, 2016-05-06 17:13:15 -0700, , put sipkey option create toward 175 commit pull lily_options parser lily_core_types new contain struct default create destroy may may expanded upon future also move sipkey away option struct still dumb key positive side make feasible outside caller specify non dumb sipkey,,
1469,6f188ff4c4629151b5d9ac5cf309a26aea65eb88,ascinated Box <FascinatedBox@gmail.com>, 2016-05-06 15:40:41 -0700, , create toward 175 unifies raw value creation function put underneath new src lily_api_value meant one stop shop value creation file option either removed part contained absorbed completely new api file,,
1470,82b54c2efef737778bcc64fb4ce5097761356986,mpty <a.regenfuss@gmx.de>, 2016-05-06 17:08:06 +0000,1, merge pull request pranomostro rename fix name number read argv stdin,,
1471,ba8cd71e571963624c5efe623819f0438886c93c,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 23:58:42 -0700, , create foreign tie like literal tie ... lily_value instead raw field inlined allows var dynaloading finally use move var dynaloading look much nicer bonus annoying warnigns dead ,,
1472,74c5212560b40ef96312d4d8cb0fadc285352391,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 15:41:08 -0700, , replace bare lily_move recent change move work around raw move function longer important last remaining user lily_move list.pop list.shift slide value list result added work like except add ref right side satisfies list.pop list.shift need thus lily_move away,,
1473,9f350b34c5e3c59c632463cdbd1f932a76e29a6f,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 15:25:18 -0700, , remove leftover fprintf debugging mod_lily whoop,,
1474,7014a8f60c15cd0aa66aa2fa4dc6895e76d91df8,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 15:15:53 -0700, , add kill lily_new_value previously creating new value meant specifying val flag casting value union pretty ugly stuff move stable core stop new way create blank value use right move push whatever got inside new strategy two benefit harder get wrong since move specify type flag warning,,
1475,1415603cd1ecd8d19e93f67cf8ee19b9bc9a3570,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 14:13:17 -0700, , complex move suffix move_ flag new strategy recently introduced need move particular moving something going uninteresting explicit move suffix take flag added four flag lily_value.h indicate kind value simplified move shared_enum instance_gc closure well new move strategy make harder wrong since caller sends flag show deref ability interest level type indicator flag,,
1476,3d28348ef62157ec71339ef91ac0cc3a341f35f1,mpty <a.regenfuss@gmx.de>, 2016-05-05 14:23:16 +0000, , fix name number read argv stdin,,
1477,ac6e305feabc40b4f5ec8e104f2dfe069bd3fec2,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 01:52:53 -0700, , hash doe require gc_entry field never tagged,,
1478,9c46fb8c6ef2299d796ae94a243fc054a7855ff8,ascinated Box <FascinatedBox@gmail.com>, 2016-05-05 01:44:22 -0700, , unify collect destroy function one roof previously collect function destroy function two different beast part copy paste little bit change class error prone notice collect seemed forgetting destroy file properly patch unifies collect underneath one banner probably slower slightest hair due extra value check sentinel check top still better also added sentinel guard entrancy allows set last_pass indicate end first time seen new destroy hollow value swap use sentinel sentinel seen checked top nothing done value sentinel meaningless get optimized null pointer wrong bad,,
1479,2825e6c10e4595db70921bcadc1e84131b4b45b1,ascinated Box <FascinatedBox@gmail.com>, 2016-05-04 22:03:20 -0700, , new speculative tagging speculating touch interpreter mark huge change lily centerpiece new tag set value value walked however value set given tag includes new machinery parser write class either basic tag speculation speculative need new tag tagged must tag two new opcodes added class construction specialized changed build value stored stack hold full value assign value instead fixed move move src lily_value.c changed speculative default addressed future patch remove lot tagging previously done tagging replaced speculation case using basic class avoid tag altogether finally leaf lot low hanging fruit static list hash enums created speculative move speculative may need value marked speculative unmarkable future thing rectified increased performance,,
1480,fd72e3d981d91838cc45e1430713fc08cf43a392,ascinated Box <FascinatedBox@gmail.com>, 2016-05-03 23:49:50 -0700, , fix problem able map call default,,
1481,58d93f818fd9d4a18e4b56e69ca5a4592901941f,ascinated Box <FascinatedBox@gmail.com>, 2016-05-03 23:25:33 -0700, , revert fix register type except optargs reverts commit unfortunate temporary fix longer term problem problem want fast arithmatic operation need check register type also want fix register type pas stand right uncovered bug mentioned patch cause leak arith operation target storage never got zapped,,
1482,f9d8bc24e9df0450954da23f3a8a195671f97ea3,ascinated Box <FascinatedBox@gmail.com>, 2016-05-03 19:17:54 -0700, , prep include space result subtle invalid read,,
1483,930bcff10eeba7ad9a659eafec80132b21b9028d,ascinated Box <FascinatedBox@gmail.com>, 2016-05-02 22:37:16 -0700, , remove unused,,
1484,7eb6b54d3bcfd036c367286d3821d997bd31088f,ascinated Box <FascinatedBox@gmail.com>, 2016-04-30 12:18:00 -0700, , run exit nothing tagged pointless,,
1485,3e0f96bb714f88f1fe15744b84528cd6de6bb1bf,ascinated Box <FascinatedBox@gmail.com>, 2016-04-29 13:14:59 -0700, , fix register type except optargs type catch native function optional argument need behavior otherwise value last call may bleed next call demonstrate happening added test doe provides optimization native function storage getting wiped also fix bug,,
1486,4221e3df41672941e4a39e48c72e7a857f888954,ascinated Box <FascinatedBox@gmail.com>, 2016-04-28 16:32:35 -0700, , move initialization dumb place,,
1487,5ca19bf2d41c2e84b866e08206abaac91f1d80ea,ascinated Box <FascinatedBox@gmail.com>, 2016-04-27 11:50:42 -0700, , set first type null fix invalid read problem,,
1488,25ecb91acbbb1392c758ac0abb85f78e116a871f,ascinated Box <FascinatedBox@gmail.com>, 2016-04-27 10:25:49 -0700, , move function function instead macro stumbled upon subtle bug exception capture purely accident moving instance instead list trying use traceback nothing would gone wrong try subscript list use element going bad time decided make move specialized function way hopefully preventing kind problem regardless test added make sure come ,,
1489,20aa1b888de98058aa1eda07932f8255c18a1e65,ascinated Box <FascinatedBox@gmail.com>, 2016-04-26 21:23:43 -0700, , lily_value_eq lily_eq_value consistency,,
1490,2f735e40b75b3862c928958b8651b10f8e68bc8f,ascinated Box <FascinatedBox@gmail.com>, 2016-04-26 20:59:01 -0700, , drop lily_deref_raw symtab doe inline good reason unless symtab time turn light case use lily_deref,,
1491,6ae01628d3ee8f68966ebcfe88b7a327f50f098a,ascinated Box <FascinatedBox@gmail.com>, 2016-04-26 15:10:41 -0700, , const ify usage dynaload seed within parser,,
1492,f89b09ae32c05fbe7ce91e46ffda7f172462545b,ascinated Box <FascinatedBox@gmail.com>, 2016-04-25 14:44:14 -0700, , add freenode lily irc channel,,
1493,9183a0445cfc3c142307d7ce5b0a663cc2f87e9e,ascinated Box <FascinatedBox@gmail.com>, 2016-04-25 00:26:28 -0700, , label hold path char,,
1494,406f12d1b271bcbd5f76bd02e74a844717340d63,ascinated Box <FascinatedBox@gmail.com>, 2016-04-25 00:22:51 -0700, , add verbose option tell test failing,,
1495,e40da36b06ec7e62f2eb468b4c2f56085156a132,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 23:07:38 -0700, , clean pre commit hook.py little bit,,
1496,c47d6bddc533aa1e53ef4219e8bec4f4e57bc7e3,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 18:48:13 -0700, , appveyor travis badge,,
1497,857869421a7bb0c927556ab94d718440264cf2fe,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 17:36:04 -0700, , lexer move assignment condition,,
1498,153addab2357cb827170219be638f7fdf8147682,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 15:45:29 -0700, , fix potential invalid read call frame build_value field,,
1499,01cb653c1096a4a6b0cfbd4d8ac9f7e1e36eecd5,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 10:41:06 -0700,173, merge pull request 173 tyroxx msvc2015 compiles msvc 2015,,
1500,a99e852f1a6c130e3574e99fc19761dfbb7d232e,yRoXx <tyroxxxx@gmail.com>, 2016-04-23 13:40:45 +0200, , port visual 2015 several test fail,,
1501,fdb73fe8a65e5f1be1cc83ae7155a6c30a9e7449,yRoXx <tyroxxxx@gmail.com>, 2016-04-23 13:07:24 +0200, , test travis,,
1502,d4937a95a30b6617cdf0f15b43e3396a21b093db,ascinated Box <FascinatedBox@gmail.com>, 2016-04-24 09:01:35 +0000, , lay foundation window support notably pre commit hook.py work window shell true turned large reason failing plus os.sep missing also add attempt right thing slashed path parser lexer,,
1503,f0ac25e15a9f4daceb8373423075ea5adcdc215c,ascinated Box <FascinatedBox@gmail.com>, 2016-04-23 22:02:06 +0000, , __main__ setup must set emit fix invalid read importing file without defines,,
1504,329b435a6cf41a774dbe2cd393a9b069696a3f6b,ascinated Box <FascinatedBox@gmail.com>, 2016-04-23 21:53:17 +0000, , set item_kind storage,,
1505,568f0e0abd9c6c3370eeed4569dce73586599efe,ascinated Box <FascinatedBox@gmail.com>, 2016-04-23 21:20:13 +0000, , make stdout close test failing test moving damage stdout prevents run test,,
1506,cea2729fe4a9d640d1720fc9ee877dfea08ddc98,ascinated Box <FascinatedBox@gmail.com>, 2016-04-23 20:50:04 +0000, , emscripten trylily lily_sandox,,
1507,a72dd5a6441d26aee382dc75373d0badf5bd6629,ascinated Box <FascinatedBox@gmail.com>, 2016-04-22 13:05:17 -0700, , add list.join fix 162,,
1508,697bfc64bcdfc1c8654d58d90284684b822f0e77,ascinated Box <FascinatedBox@gmail.com>, 2016-04-21 19:04:10 -0700, , globals marked var_is_global,,
1509,f62bf0d59d300c03225a93fe4c529f11953509c4,ascinated Box <FascinatedBox@gmail.com>, 2016-04-21 14:07:03 -0700, , yeah termination strncpy whoop,,
1510,956bf3f13113b0217b8fd2d9edf671979953e0eb,ascinated Box <FascinatedBox@gmail.com>, 2016-04-20 13:18:50 -0700, , add license clause bsd license,,
1511,63d1ad30a7f835310e6908a5cd41c17859d0418b,ascinated Box <FascinatedBox@gmail.com>, 2016-04-19 12:32:19 -0700, , new import path huge language make module something realistic last prior commits builting  syntax import possible import trailing slash allowed may allowed future mean importing whole module sure yet path provided quoted prevents using string scooping would implicitly allow like path want note import path relative current import,,
1512,7f2a756774063c7597edbd245df27920272b8987,ascinated Box <FascinatedBox@gmail.com>, 2016-04-18 18:28:29 -0700, , dynamically check path relative current one ... instead one hardcoded fix,,
1513,1537add7aaa4f66aa8f17ebb8fad09495ddc7237,ascinated Box <FascinatedBox@gmail.com>, 2016-04-18 13:09:29 -0700, , import name based path put main import bootup two one rely lot first simple loadname import based path provided mean passing loadname path path needed second first import creating boot parser loop fix name first pas much fixing,,
1514,1b41a1656a399504ec6d26b73050acb14966d35a,ascinated Box <FascinatedBox@gmail.com>, 2016-04-17 12:49:50 -0700, , show qualified error based checking builtin first import,,
1515,f6dc4b504851d4868f41a141136456caa4a64c97,ascinated Box <FascinatedBox@gmail.com>, 2016-04-17 00:53:42 -0700, , create first import within parser init allows code depend first import always builtin import,,
1516,cc1a60a093224c90ea353e47cc9cad7c14092bf4,ascinated Box <FascinatedBox@gmail.com>, 2016-04-16 16:19:31 -0700, , use direct check instead strcmp,,
1517,266b2b52ea2c4422b94e563e5d6625c92a583a35,ascinated Box <FascinatedBox@gmail.com>, 2016-04-15 22:32:47 -0700, , require .lly suffix,,
1518,634ba00dab3b18d7f830b5b3739c9f8832381872,ascinated Box <FascinatedBox@gmail.com>, 2016-04-15 21:58:33 -0700, , segfault failing open first file,,
1519,c65acd887371fdc1ee2ddafc9f868ab2bed4cb6c,ascinated Box <FascinatedBox@gmail.com>, 2016-04-15 19:08:17 -0700, , parser flatten pyramid load_import,,
1520,103505e3ae5a8d88e588dbfc572b96e888b08712,ascinated Box <FascinatedBox@gmail.com>, 2016-04-15 16:11:43 -0700, , actually get rid whoop,,
1521,7d756f5cc6c2ebc0287b383b3e0e0e89564f169a,ascinated Box <FascinatedBox@gmail.com>, 2016-04-15 16:06:34 -0700, , use const char instead char possible touch prototype actual code lily mutate string argument enforces many place may cover everything cover lot,,
1522,25d2de98cce579a9227feecc1c3983ed64af72a4,ascinated Box <FascinatedBox@gmail.com>, 2016-04-14 18:19:25 -0700, , drop dyna_exception use instead fix 157 dyna_exception custom load specialized hacky extensible flip side slightly complicated seed much much flexible code related dyna_exception gone,,
1523,fdc04dc9c342e2f4cea24f8e52c09d270997efee,ascinated Box <FascinatedBox@gmail.com>, 2016-04-14 12:42:40 -0700, , new dynaloads must save restore ast state,,
1524,f1098640ed5b793fa2349aca791843906398f698,ascinated Box <FascinatedBox@gmail.com>, 2016-04-14 01:36:47 -0700, , dynaload tainted exception fix 141. fix 161,,
1525,fd379d03fcbd354f12e5b441e339019434d2747b,ascinated Box <FascinatedBox@gmail.com>, 2016-04-09 20:11:43 -0700, , remove junk emitter,,
1526,aa1a9d79ce6c70f9acd6c529e666e0234d63a291,ascinated Box <FascinatedBox@gmail.com>, 2016-04-08 22:53:41 -0700, , missing test last commit sorry,,
1527,c760eedc7d44fa2fe7db70a67184e912c395b64c,ascinated Box <FascinatedBox@gmail.com>, 2016-04-08 22:47:15 -0700, , argument eval try narrowing unquantified generic fix 165 perfect solution mean long way however least resolve problem cropping frequently lately inability use function polymorphic called,,
1528,035a3c68af51ea91ed7884897da3677dc0b0d762,ascinated Box <FascinatedBox@gmail.com>, 2016-04-08 14:43:34 -0700, , lily option include multiplier amount sweep unable reclaim anything amount allowed multiplied multiplier internally enforces max multiplier since seems sane limit give better behavior later larger program,,
1529,bd2940443c170e49a8908eba33858a925f366e66,ascinated Box <FascinatedBox@gmail.com>, 2016-04-08 13:45:52 -0700, , organize lily_vm_state layout remove another unused field,,
1530,6f4f4b1de54644087fb43e38e7f65dd97c39dc51,ascinated Box <FascinatedBox@gmail.com>, 2016-04-07 12:03:13 -0700, , dynascan.py fix missing import require_word,,
1531,4b4724e4bea48ccf30a83a360a7f3b96b9dd6934,ascinated Box <FascinatedBox@gmail.com>, 2016-04-07 10:12:10 -0700, , remove unused main integer_type field,,
1532,da0a8a8583f675fa8f1576cdb206ace5c4fe80d8,ascinated Box <FascinatedBox@gmail.com>, 2016-04-07 08:46:25 -0700,171, merge pull request 171 gernest fib add example generating fibonacci number,,
1533,4261163012ff3b7b87d5960f49db484b12170362,ernest <geofreyernest@live.com>, 2016-04-07 14:04:48 +0300, , add example generating fibonacci number,,
1534,122e37de1124ee25c7c7dd741c51462be7a91f37,ascinated Box <FascinatedBox@gmail.com>, 2016-04-06 13:56:27 -0700, , two fix move next_token call .isalpha first causing non generic anything get collected second causing ignored important say to_s,,
1535,c47083beeb80bcfba44887bb5239d18d33e261c9,ascinated Box <FascinatedBox@gmail.com>, 2016-04-06 01:11:31 -0700, , add tool dynascan.py dynascan.py used pull dynaload information file right kind comment currently understands define block suspect extended future built make easier tool currently unused soon using start generating dynaloads builtin class,,
1536,c967f4063e69df8bdf82db5c316c723248467673,ascinated Box <FascinatedBox@gmail.com>, 2016-04-06 00:29:02 -0700, , count dead thing living thing,,
1537,8e17de4fe74fbf7d5e7ddc81fb3cedf746df4ec1,ascinated Box <FascinatedBox@gmail.com>, 2016-04-04 23:36:19 -0700, , run __main__ nothing,,
1538,17c3e7ee10fbbd9bffb9d5e764d967b3590a76d7,ascinated Box <FascinatedBox@gmail.com>, 2016-04-04 16:04:23 -0700, , make naming consistent 168 following change made  string.isalpha is_alpha .isalnum is_alnum .isdigit is_digit .isspace is_space .endswith ends_with .startswith starts_with .htmlencode html_encode file.readline file.read_line  built function calltrace remains untouched think sensible without underscore one might ask thing done call backtrace also appears single word search online,,
1539,293e3928164e6b8497489cbb4a30c6a6c7f26fc3,ascinated Box <FascinatedBox@gmail.com>, 2016-04-03 12:01:35 -0700, , make clear contribution welcome,,
1540,5bcac5345f5e56b67c5d149a436e4e03bf7101fa,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 23:55:54 -0700, , inline creating builtin enums causing issue postgres wherein postgres bridge able find symbol inlined crashing,,
1541,7a4b812194e1d55f9109d114dcf9c19ffc501752,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 19:10:47 -0700, , version 0.16,,
1542,527e9c02005f1642386b70f1da440e71bec8832a,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 19:06:29 -0700, , unify version information root cmakelists.txt,,
1543,f2a9cbe2ff5b7536eb35af9e77e33fbd164bb00a,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 18:46:22 -0700, , remove last trace old site goodbye old friend,,
1544,86cd5760e4b393533576bc441d71d5f944bef408,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 18:12:23 -0700, , actually fix file read write mode calculated,,
1545,ab9f27729f88de2d50c8c21f8d09cb4a18d90012,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 17:46:27 -0700, , prevent sandbox non default import,,
1546,616d661c00dcf53c5e48754cff540546e2d5fb18,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 17:14:13 -0700, , postgres postgre bugging ...,,
1547,e5cbc86f14c20a344414b8c8afc9cc426ec96a0b,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 17:08:54 -0700, , update try directory renames fixing adding removing,,
1548,875aa82a69a09881c6ff8fefa41b0f833c49f7be,ascinated Box <FascinatedBox@gmail.com>, 2016-04-02 15:51:02 -0700, , string inside container quoted escaped fixed string escape came little weird specifically string held sort container like list would quote printed would escaped looked around python ruby least made sense  add toplevel string directly quote nested,,
1549,e5c06e63d8c25c94fb2bbee04cd003a0a138d3f6,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 17:35:16 -0700, , file.readline return newline bytestring,,
1550,e3e62727fe56d87e3a68d05b283a7a1d7d887a86,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 16:11:05 -0700, , file.open allows modifier previously supported eventually change allow new mode since seems useful also changed error string bit,,
1551,4448b54867eb6e25839d2a8f25ebdd303ad00413,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 15:23:04 -0700, , return option string bytestring test option baked core hard justify method throw exception could return option also added file test bytestring method currently method since ,,
1552,b217fb2c2866a4cab02dd3eaa2cd0cac2cd16825,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 14:58:13 -0700, , print stdout closed throw valueerror ioerror one thing like work next release getting file method throw eventually elimination ioerror entirely would nice also consistent python doe,,
1553,d09b0743ab30c8160b753cf5ab16c583efaf2407,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 14:22:00 -0700, , fix integer.to_d broken add test integer double forgot titlecase dynaload string trying use integer.to_d causing syntax error make sure happen add test double integer method,,
1554,28a39e39d0a9646dfc12b63a2daa86c05e77d711,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 14:11:17 -0700, , creating raw string manually stop feel like playing whack mole string problem recall fixing handful whole month seem root cause function trying create string value directly patch fix mostly string creation centralized lily_value likely one problem exception string creation string creation seems okay let without using new function next release want accidentally break something exactly tagging release,,
1555,9e35b891108fa37142c9d073fed18dfcc97d3c57,ascinated Box <FascinatedBox@gmail.com>, 2016-03-31 13:09:20 -0700, , add new string function lily_value hoping wait next release many path creating raw lily_string_val one potential problem commit tidy lily_value new function used outside yet done later verify newly made function broken caller,,
1556,31299efdde63eca19e0dfa2c9e4ce131ebcf176a,ascinated Box <FascinatedBox@gmail.com>, 2016-03-30 20:25:30 -0700, , make sure try except trying branch whoop make var spot receiving jump patch instead jump actually supposed patched problem,,
1557,b0a053d60a8abbb4a92ed3783c28796e567eb064,ascinated Box <FascinatedBox@gmail.com>, 2016-03-30 19:57:20 -0700, , string.parse_i forgot allow whoop,,
1558,85fa25c943daafe9ff926785da6b33a5ddf39c23,ascinated Box <FascinatedBox@gmail.com>, 2016-03-30 18:58:51 -0700, , make sure string.split make broken string value supposedly okay size set certain string function like isdigit use length string instead strlen non empty also empty hmm yeah,,
1559,cf3d71df7fcf8fe5acd1fd67ad928a3fb2ccb957,ascinated Box <FascinatedBox@gmail.com>, 2016-03-29 13:48:11 -0700, , fix backward,,
1560,e064e701d76992e220c8694dbb38bf795f2c5d68,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 17:04:08 -0700, , server.write new server.write new server.write function take non literal escape writes server server.write equal server.escape except overhead creating string two different function call also smaller simpler write,,
1561,1392f3ca034d4a73ce04af9e14ee37ecb5f45b80,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 15:51:31 -0700, , interpolation quote string ruby unheard seems like wrong thing given make one example btree one output look really weird,,
1562,894d79b28128932cf8a2c0dd723f19d9730f8033,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 15:47:55 -0700, , fix use isprint return non zero success,,
1563,7e8dd46a2914f7ad97b8ce9db3d5fe7ae35662da,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 15:20:53 -0700, , double hashable remove leftover case check,,
1564,8eeadc48f87a7174da017ddca9a7facdbbc721c1,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 15:00:32 -0700, , farewell string.concat bit sad see string.concat first real method put interpreter initially written really easy needed test class method time passed method found important arrival interpolation became simply impossible justify staying around interpolation advantage opcode incur function call overhead string.concat moreover interpolation quickly becoming idiomatic mind insofar want lily written farewell string.concat,,
1565,670bc5905272270a502d2ebef2c6bf20bd8e2ee5,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 13:42:42 -0700, , apache fix oops server.write check,,
1566,b25be1c2817ecee33a5f3bd4f9715df4a66939f1,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 13:37:20 -0700, , apache,,
1567,8465a724b710b8eecc8fe59d7c3be63d3c0c6abe,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 12:47:28 -0700, , fix calltrace test trace tuple anymore,,
1568,247fef23a9186890c09c780a33260af56dadefd4,ascinated Box <FascinatedBox@gmail.com>, 2016-03-28 12:40:33 -0700, , add data mod_lily,,
1569,a725b4b04a6e543cdf4fc37649e4627e8592a04a,ascinated Box <FascinatedBox@gmail.com>, 2016-03-27 10:37:33 -0700, , emitter fix uint16_t assigned,,
1570,2fd6b1d2c4752806fa9e33562433130f93a5c7de,ascinated Box <FascinatedBox@gmail.com>, 2016-03-25 21:57:24 -0700, , update readme push lily strength cover area,,
1571,ce2643caae571f64d250a45d11ce503a0bab8d91,ascinated Box <FascinatedBox@gmail.com>, 2016-03-25 16:43:48 -0700, , emitter fix equivalence generic type_matchup old code preventing subscript assignment within generic sorting algorithm,,
1572,74172269ea1c44fc6a6e8e1eb3c34cd033338d15,ascinated Box <FascinatedBox@gmail.com>, 2016-03-25 14:43:07 -0700, , lexer allow interpolated string multi line,,
1573,59cdfdd0db3bbe93de6dbd950cdc8843eeb28f7b,ascinated Box <FascinatedBox@gmail.com>, 2016-03-25 14:41:29 -0700, , lexer add result hitting multi line string newline,,
1574,3aca815908d399c9bc1658581d18019d0c1da5e4,ascinated Box <FascinatedBox@gmail.com>, 2016-03-25 13:24:54 -0700, , disable memory init file build,,
1575,588444abff22948dc68625d0b5c70d33bee93e33,ascinated Box <FascinatedBox@gmail.com>, 2016-03-24 11:38:37 -0700, , fix print use impl always use stdout previously print would always use whatever lily_impl_print bad mod_lily apache binding allowed bypassing safe server printing mechanism also stdout closed ioerror raised calling print additionally change stdout setting something else tracked instead ignored internally done something never done print dynaloaded stdout also exists print patched use safer grab stdout register ioerror check version mean using stdout result print hair faster default,,
1576,184f5250edc11ef5f811b3faed29b4e4ed714fdc,ascinated Box <FascinatedBox@gmail.com>, 2016-03-22 18:38:06 -0700, , mean commit comment ...,,
1577,2517f316100ca1e1be2e1acaea42a4d8cfcd6581,ascinated Box <FascinatedBox@gmail.com>, 2016-03-22 18:35:53 -0700, , lexer triple quote repeating first char line,,
1578,e5fe05a03715ce14e3b9a887531c0d6a17987df1,ascinated Box <FascinatedBox@gmail.com>, 2016-03-22 18:26:34 -0700, , farewell printfmt string.format ... making dynamic removing default put nail coffin two became difficult use exchange little benefit maybe future interpolation support name format string maybe function comeback right though obsolete since interpolation better,,
1579,669bd13be55478b9a6f4c8ec45a2018701c898e8,ascinated Box <FascinatedBox@gmail.com>, 2016-03-22 18:07:24 -0700, , interpolation landed fix 143 initially considered punting next release realized printfmt string.format take list dynamic dynamic unlike explicit casting dynamic really awful get lost interpolation marked ... ... work either case interpolation block denoted ... parenth matching done ensure balance interpolation block contain string pretty much anything long come single expression intend add restriction later lambda possible get rid printfmt string.format,,
1580,549c627f444e4d5a396759ba55449b619963b5c8,ascinated Box <FascinatedBox@gmail.com>, 2016-03-22 15:01:19 -0700, , emitter transform_code read end causing post transformed code scanned emitted old version lily show revealed junk written return closure cause worse problem given right kind input,,
1581,98d91d00973eda98ba4e07c2b9f6f0b5c47acb4c,ascinated Box <FascinatedBox@gmail.com>, 2016-03-16 16:52:44 -0700, , lexer call full line width old way check label size char scanned previously promised ensure line implemented slightly ugly case comment block strlen line max line length information left okay block comment frequent lambda line come extra large worst case see big problem lambda small check make sure lambda scan room add ever come thing necessary reduced removed likely overly aggressive okay right,,
1582,e0b703f46eb3742571c1fc0ec30666a09538084b,ascinated Box <FascinatedBox@gmail.com>, 2016-03-16 16:21:16 -0700, , lexer get rid lambda buffer use label instead scan_quoted responsible scooping starting quote mark instead letting scan_lambda awkwardly make lambda scan easier fill buffer precaution used make sure read_line reading function cause lexer label moved without local label copy updated,,
1583,2370f662fa08a0c6331ed1814d3b8ca1c3a07bb3,ascinated Box <FascinatedBox@gmail.com>, 2016-03-16 14:57:33 -0700, , lexer entry need read close funcs long time ago wanted lily line reading generic pluggable stranger time time even used apache reading function help scoop text file eventually got bored around time also gained different kind string reading lambda need copy text different kind entry stayed well entry get enum marker marker used determine entry read get closed,,
1584,e9c6b58095aac9532e4738fe5de0e7fba6ff7194,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 14:01:55 -0700, , lexer string lambda scanning use source position,,
1585,81f5d7574a5703dbae1bf89c912a7e02a4f94987,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 13:36:19 -0700, , lexer lambda still need process string,,
1586,602c9eb9b9506bfee03b25efc6797da1b09eb8d2,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 13:06:02 -0700, , lexer block comment scanning take source start position,,
1587,3f7570ad7cf546fd37e6ca641fc4e1045ef1549a,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 12:09:25 -0700, , lexer lambda scanning build string literal literal get built anyway lambda unrolled eagerly creating literal hurt performance,,
1588,c84ab78e4400149ecf30faa7db3436bc2d397e80,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 11:53:48 -0700, , lexer line reader return line length previously would return either success failure however line length would nice future string lambda handling could theory run single size ensure scooping whole line matter ensuring line_length handle able would eliminate grow check fire character scanned,,
1589,b0ff371fb4b869d20bc908995c3bb86cd2cfea9b,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 11:27:47 -0700, , know man,,
1590,7921719de7a3a0284ddba6bef33d8743f2fda7d2,ascinated Box <FascinatedBox@gmail.com>, 2016-03-15 10:54:53 -0700, , lexer scan_quoted take flag,,
1591,b0a3d6d7d0433e95b5c215f7807844283105beb4,ascinated Box <FascinatedBox@gmail.com>, 2016-03-14 20:56:14 -0700, , postgre conn.query kick back either fix 131,,
1592,80a06146503f834658138e9ee7ea5209bc76a731,ascinated Box <FascinatedBox@gmail.com>, 2016-03-14 20:53:13 -0700, , either option include guard copy paste snafu,,
1593,4d6aad21c6a990c653679834207a76753a49ca15,ascinated Box <FascinatedBox@gmail.com>, 2016-03-14 19:51:41 -0700, , goodbye bind better way creating string value new api consists three function lily_new_string create lily_value lily_string_val inside copy input strncpy use given length string.split need first one take ownership buffer please mess creating raw trying wrap moving assigning new api creates full value need touch underlying touched existing area apache sys use new api instead raw bind note mostly untouched function good reason manipulate raw newly made string immediately moved destination register,,
1594,36b4d08db74a82e40bb2fda3165ce080ad9f1d35,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 17:35:23 -0700, , new strategy naming option either old strategy ref something shallow copy enum practice turned wrong nearly 100 time case find correct closer leak inspection strategy shallow copy ref practice work perfectly made value case work lily_copy_value used clone value also made none left right creation verbose,,
1595,2d3c5df436e1ab575904ebca73e7f021fd0a5c5f,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 16:50:11 -0700, , ,,
1596,cecd121e029bae40e2adeed8d495d1a54b32ce20,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 16:41:52 -0700, , finally get postgres working many fix number thing bundled conn.new gone added conn.open result.each_row result.close added new api creating ref enums dynaloading bug method would attached wrong area fixed library loaded number class enums need set reserved filled needed postgre bridge option temporary want value api adjustment fixing eventually use either instead option commit suck huge fix nothing exists check stuff except postgres postgres need lot stuff work  old postgres.error class gone btw,,
1597,06e66eb4a8103bab05fc742f1abe897fad1e2569,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 13:08:03 -0700, , remove destroy_func lily_class class seed,,
1598,6cba2dbb808f1a04a0bf0bf87cb5cd52bc638f08,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 12:47:20 -0700, , val_is_foreign established foreign value need destroy_func embedded struct destroy_func function destroy given value,,
1599,9ec8e5a0f528baccfa806942d4e935f7c99e569e,ascinated Box <FascinatedBox@gmail.com>, 2016-03-13 12:17:29 -0700, , remove semicolon accidentally lily_new_ string list defines,,
1600,28d98b7e0ddf7138d5332b196b26588b08581d32,ascinated Box <FascinatedBox@gmail.com>, 2016-03-10 04:45:28 -0800, , remove comment committed,,
1601,cfc8fbc24b3f77772d8497e32373579831de1ac2,ascinated Box <FascinatedBox@gmail.com>, 2016-03-08 18:37:45 -0800, , lambda need check,,
1602,c29e8fee30d45aa6981e8936c9b46ac1ae97a765,ascinated Box <FascinatedBox@gmail.com>, 2016-03-07 16:43:31 -0800, , fix reporting newline single line string,,
1603,c337dce3d5352b118fa125b1e5a7026ea543da82,ascinated Box <FascinatedBox@gmail.com>, 2016-03-05 16:28:50 -0800, , yeah big change token good dead sys argv sys.argv string upper string.upper etc use filled,,
1604,b49bb36ad0a4d6daa7268b098b099832ed2176a0,ascinated Box <FascinatedBox@gmail.com>, 2016-03-05 09:56:09 -0800, , fix sys argv broken whoop,,
1605,930e15b9d7100cb18e335e240252cbeff2d25483,ascinated Box <FascinatedBox@gmail.com>, 2016-03-04 10:06:38 -0800, , test use class class new,,
1606,4399515e593110bbbaf9ec18b46ba6bfb2c6b090,ascinated Box <FascinatedBox@gmail.com>, 2016-03-03 18:38:06 -0800, , apache work plus fix builtin fix 153,,
1607,0a2eb4ffbbe32be3a63a51129b71c0d8efd74e31,ascinated Box <FascinatedBox@gmail.com>, 2016-03-01 10:12:56 -0800, , either plus simpler enum instance creation fix 144,,
1608,994d06e02136bbc7f5b2f182ea3fa4564a5a139a,ascinated Box <FascinatedBox@gmail.com>, 2016-03-01 10:06:59 -0800, , move generic save restore parser need function dynaload doe create block thus rely emitter save restore generic getting way either,,
1609,9466dbc08776e9f86c9268ee37d39d8cdcd9f9eb,ascinated Box <FascinatedBox@gmail.com>, 2016-02-29 02:10:48 -0800, , fix generic enum dynaload block entry without generic restore wrong count found trying add either,,
1610,a11c005fd5d119370759110729b3c7b3dea9c4ed,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 21:39:09 -0800, , cleanup boolean option method test,,
1611,f801fe1ba5a23ae53f1b5bcd55f232b7ff3f4249,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 19:10:15 -0800, , create new abandon previous test favor new test series aim check broad spectrum api,,
1612,6ada17badf8b1eecbc5d1178ad33760e35a62781,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 18:37:09 -0800, , merge string test,,
1613,d1d9ee525b6ec891e6f52d15d812987f7e59c111,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 18:31:57 -0800, , fix string trim crashing totally empty string,,
1614,93740085978e9861a116722794822f2bc46aaf51,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 18:11:03 -0800, , fix string split segfault utf chunk previous version moving using move table based last char utf segment turn caused incorrect count number value put list,,
1615,dae9776e8eec78ff119372448d61d43975f74f10,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 14:28:30 -0800, , string endswith need check,,
1616,925364a790d54f233a9dabdadb8cd8dbeb726f73,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 14:14:00 -0800, , string endswith move boolean integer,,
1617,a7c88bfc2cc07fc8eaffed93925111e4c880a29b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 14:04:01 -0800, , fix string find horribly broken,,
1618,5d6fafd934eebd85e26c001b6b2a5c5b42825c0b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 13:58:36 -0800, , remove failing api test merge,,
1619,2c8dd029be3982c603bbb1730706803680abf80d,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 13:53:35 -0800, , rewrite option test new style move,,
1620,9f9690a4a0771635aa532fe0e126dbaae2e1ed7b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-26 12:54:51 -0800, , merging test time list,,
1621,b9da3baa924b8b190b3a47501e2409e33796c4c5,ascinated Box <FascinatedBox@gmail.com>, 2016-02-24 23:14:12 -0800, , unify boolean method test one,,
1622,30dbe2becc6a5a6f6168a13149594f60747d2ad7,ascinated Box <FascinatedBox@gmail.com>, 2016-02-24 18:01:27 -0800, , check_raw add unless t_unify set,,
1623,cca7ba881edb835a60112d910f5ead3aba082e66,ascinated Box <FascinatedBox@gmail.com>, 2016-02-23 17:25:26 -0800, , slight adjustment var name print error stderr,,
1624,8e28d06c00465fdd11e8ba9e37a18b7d6e1d0afa,ascinated Box <FascinatedBox@gmail.com>, 2016-02-23 16:23:55 -0800, , merge lot test new many test checked simple thing unlikely accidentally broken digit collection nested making extra test chunk make sense stop effort make another huge sanity.ly test rather common ize testing infrastructure small group longer test lily becoming mature many test never crashed errored unless horrible problem occured thus useless,,
1625,fbbfb937289ea653f3888681236c71971828ace1,ascinated Box <FascinatedBox@gmail.com>, 2016-02-23 16:20:47 -0800, , fix crashing parenths need lift variant type,,
1626,7cd192d1048a76ca5e6cf66c96c733e6245ad0f7,ascinated Box <FascinatedBox@gmail.com>, 2016-02-23 15:39:29 -0800, , typecasts must copy dynamic value new,,
1627,88ae4512f7ab4036b7528ce24556c8f7708cd9e1,ascinated Box <FascinatedBox@gmail.com>, 2016-02-23 13:58:19 -0800, , emitter fold var crash one set case reduce one assign reduce different assign optimizing mean first set case target storage instead right value,,
1628,d218e1f59098fb2360f09ce96b81675b1fed1130,ascinated Box <FascinatedBox@gmail.com>, 2016-02-21 00:29:12 -0800, , remove comment syntax longer remotely valid,,
1629,95064955d6179bd95a792936caefc1d1eb44e928,ascinated Box <FascinatedBox@gmail.com>, 2016-02-21 00:12:18 -0800, , correct documentation msgbuf,,
1630,6b66ec193f0d4db03cd846dc0600cf2938aa17eb,ascinated Box <FascinatedBox@gmail.com>, 2016-02-20 20:45:57 -0800, , actually fix lambda storage damage problem lambda multiple expression increase expression count cause problem lambda tree sibling right expression count may cause grab storage really ought,,
1631,8b6d9d3177b6a02c63659ecafcbb7be603402c0a,ascinated Box <FascinatedBox@gmail.com>, 2016-02-20 00:56:15 -0800, , remove unused stuff lexer,,
1632,6b3f44efd9c0d92541ecf2009605cc80a6fd7533,ascinated Box <FascinatedBox@gmail.com>, 2016-02-20 00:18:48 -0800, , lex_entry input_end useless termination,,
1633,62b442d2561b3e8bb3b0e9ec8f937ae3779d5d9f,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 19:51:14 -0800, , pull variant class away regular one lily_class treated garbage dump far far long hold info builtin class user class foreign class enums variant commit doe rip away variant class part away regular class slight hack right variant class added class chain import get withdrawn later scoped enums parser allow bare variant safe may future linked list variant stored away regular class though test case var result one time saving roughly 200 byte,,
1634,776d831d45a6c86a324adaa6e4717b4444560d74,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 19:44:47 -0800, , assign tree never see bare variant useless,,
1635,437f17f0b67866461595f9b6a05fca3795d4c343,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 19:38:43 -0800, , remove enum variant checking unused,,
1636,05ef3523742171438b36da96455a77cdf4480434,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 19:23:49 -0800, , use actual self type method lookup old line assumed top class chain equivalent self true parsing method enum case likely variant class line worked anyway variant always enum parent new line straight right class attempt find method within variant,,
1637,3ae6d55902cddf323b260ecf2a5ce7481dab8dcd,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 17:27:43 -0800, , lily_item item kind flag splitting two thing mean kind item store flag since slot taken kind step toward adding information toward class allow splitting apart giant class struct,,
1638,87088d40b70cc09b0b95578f3b6db230f7cbbd35,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 16:30:57 -0800, , make lily_item first field struct next force struct next field consistent place instead scattered around,,
1639,59c3b602f56ea1c069bd16c91247020f28ecbec2,ascinated Box <FascinatedBox@gmail.com>, 2016-02-19 14:44:37 -0800, , unify common code is_class_seed,,
1640,602944ca9e19da1cd0ceaa9c33d9b5af336824d5,ascinated Box <FascinatedBox@gmail.com>, 2016-02-18 18:13:16 -0800, , build padded enum instead partial variant type padded enum type useless partial variant slim chance partial get returned generic call real point however make eventually reason build type variant since bare variant value banned anyway,,
1641,4cec6844934ff61dd82989bbe371ba9307cb24f0,ascinated Box <FascinatedBox@gmail.com>, 2016-02-18 12:23:07 -0800, , add option huge hack,,
1642,5f5dbc07a34f650ff6c41e6ee28f58363d7a6bed,ascinated Box <FascinatedBox@gmail.com>, 2016-02-17 02:24:53 -0800, , rearrange lily_gc_entry field allow certain typecast,,
1643,4f29a87d966296ddf3cfbe760ef1262d9726e63b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-17 02:06:05 -0800, , drop couple forward struct decls,,
1644,eb58d0b1f718b987338f2d8a8f4c8e99d24401a5,ascinated Box <FascinatedBox@gmail.com>, 2016-02-16 19:31:07 -0800, , lily_item flag bit instead,,
1645,263cccd5aa8646abd59607660abd9e13e167bd6c,ascinated Box <FascinatedBox@gmail.com>, 2016-02-16 13:53:16 -0800, , len unused,,
1646,6b930497db3e63f4f6f0a7bff8f4ac74fdd61f3b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-16 13:39:47 -0800, , lambda specify type argument optional argument allowed though since least sound like silly thing allow,,
1647,338a0d2bd8ed3384649db32959adf39debc372de,ascinated Box <FascinatedBox@gmail.com>, 2016-02-15 12:07:51 -0800, , variant need unique class save slot class table variant used always grab variant info parent enum,,
1648,c63285b8a56072c2ad8633c39c3a3bf6da50ae27,ascinated Box <FascinatedBox@gmail.com>, 2016-02-13 00:09:45 -0800, , remove unused field lily_enum_seed struct,,
1649,a28016ba84f7237f4271971eb983ba03b18b2f25,ascinated Box <FascinatedBox@gmail.com>, 2016-02-13 00:04:08 -0800, , double longer hashable ... hashability set loading builtin package longer come flag removed field class seed decided condense size field decided make double non hashable double type precise nan particular always non equivalent making bad hash key,,
1650,faf6df07c27294c4e90ddc10a272e88044d0a2eb,ascinated Box <FascinatedBox@gmail.com>, 2016-02-12 23:50:04 -0800, , variant case impossible,,
1651,f7ff919124eba1d7796cb0c5c448768a1161b364,ascinated Box <FascinatedBox@gmail.com>, 2016-02-12 17:57:32 -0800, , titlecase builtin class name fix 151,,
1652,bafc983e0b3d533064a698ec522c16dd58bbfc7b,ascinated Box <FascinatedBox@gmail.com>, 2016-02-12 14:43:38 -0800, , make try example work,,
1653,f1bbf5f55600c0c6a2079a3c426592cf34d821ed,ascinated Box <FascinatedBox@gmail.com>, 2016-02-12 14:32:50 -0800, , emitter check right tree value,,
1654,c5236aa25e9a11c34b569efe7011654ba200cd0c,ascinated Box <FascinatedBox@gmail.com>, 2016-02-09 22:01:05 -0800, , dynamic cast safe fix 150 huge change new dynamic class opt instead type fallen allowed removing lot special case emitter defaulting defaulting ... pretty much dead probably fix default new nothing type future new dynamic type make use previous commit allowing class name used constructor adjusted quite test add dynamic needed removed since new dynamic class allows nesting decided seeing haskell  side note cast work dynamic useless type ever since unification baked took another page haskell made casting yield option given type completely gone,,
1655,5412ee885c7a0b00a5d65a66d28b6b7f1d30ffe8,ascinated Box <FascinatedBox@gmail.com>, 2016-02-09 13:56:35 -0800, , new class ... construct new value still possible use class new since decided want get rid done new dynamic class opt without numerous dynamic new call far work implicitly targetting new class theory foreign class export new work  enums even new incorrectly created allowed use feature consider wrong enum created kind strategy least,,
1656,e6f16949a2efdf8485fdb67d5b49336f01045543,ascinated Box <FascinatedBox@gmail.com>, 2016-02-07 16:03:46 -0800, , remove cls_is_current information longer useful,,
1657,2ed87c730228f97fd09bba48680646428bb95f13,ascinated Box <FascinatedBox@gmail.com>, 2016-02-07 00:36:15 -0800, , actually close std stream,,
1658,14c33b2396f4f8785a12e8471c36be739506c693,ascinated Box <FascinatedBox@gmail.com>, 2016-02-07 00:25:52 -0800, , make lily_file_val smaller use smarter,,
1659,baf5a26de42c8944a17afb0376d374cefd5dbe74,ascinated Box <FascinatedBox@gmail.com>, 2016-02-05 22:44:09 -0800, , clean includes bit,,
1660,fb9229208d90f25c76e9c62ac5d60f663bf08fd4,ascinated Box <FascinatedBox@gmail.com>, 2016-02-05 22:41:08 -0800, , intptr_t cast unnecessary,,
1661,607c1e899b46db59f6dab77a22390fd404e6f5c8,ascinated Box <FascinatedBox@gmail.com>, 2016-02-05 13:16:18 -0800, , merge typeless_vm fix 149 commit message long huge change beginning always type information value consisted full type flag value great generic came along generic came along idea solving generic time made choice want make specialized copy function demand either emitter chose runtime solving save memory reason made many decision lily alternative would generate unique specialization invocation seemed inappropriate lily handling primitive make sense long time worked well enough problem started showing creating value requires type come symtab parser suppose function close upvalue upvalue unsolved closure may need register type access type and_then bug solved type block making new register requires non derefable type foreign call may require solving need resulting type runtime solving mean building new type time lily type supposed unique turn mean operation thread safe removing type register give lot benefit though fewer register per function since used without keeping type fixed still keeping track type easy special assign rewrite type register generic function zero solving cost doe really need tagged nonsense sadly tagging aggressive theory leaf frontend handle typing handle complicated part future may useful allowing frontends downside erasure notably casting away much useful however feel performance benefit strongly outweigh benefit situation,,
1662,02465457a71317074bb09dbc120fe8938cbb1382,ascinated Box <FascinatedBox@gmail.com>, 2016-01-29 22:58:53 -0800, , time drop show show one lily earliest builtin function premise rather simple one function dump kind value given lily still doe support common protocol .to_s .inspect .repr made sense importantly show used mean dumping bytecode function way made sense initially representation pretty lame eventually went back redid ended show looked year plus long time show great made sure always updated provided useful analysis determine something emit time problem time problem time changed bad emitting unheard many model thing right emitter show biggest feature ability display anything rendered useful string type importantly string interpolation better formatting even better alternative show show something foreign value well see problem proper way least python ruby class get automatic to_s let define one use far instance really care value inside private protected public setting dump named value ruby function opcode dumping getting really bad keep new typeless_vm branch finally cripple show likely allowing storage change register type thus making show near impossible work furthermore new switch typeless_vm doe type information making show utterly unable list variant jump corresponds keeping leftover show needed variable name packed function want fix pulling typeless_vm,,
1663,f14a38b91ba92484eeda34a984bf270c499057a8,ascinated Box <FascinatedBox@gmail.com>, 2016-01-26 15:40:18 -0800, , except forbids catching type subtypes reason removed option likely either future provide opinion generally better way error handling custom exception see good use subtyped exception handling covariance invariance contravariance full generic make area potential surprise later undocumented honest never seen another language recommend something like could wrong though interferes typeless implies needing check specific type rather axe feature instead porting something dislike would even would need,,
1664,6e761547fe23f4913c2889620fb2866658d89f7f,ascinated Box <FascinatedBox@gmail.com>, 2016-01-17 02:25:14 -0800, , emitter use type matchup generic wanted wrong,,
1665,263bb92130beeff6d803cfc35060cc1a91804221,ascinated Box <FascinatedBox@gmail.com>, 2016-01-17 02:13:13 -0800, , get rid last use done long time ago type_matchup charge reboxing since longer doe two version wanted type longer necessary turned last use decided get rid prior commit mentioned almost always wrong return null really default,,
1666,4c89b959095b8cd3b78f0a547643d832507da3b6,ascinated Box <FascinatedBox@gmail.com>, 2016-01-15 21:38:55 -0800, , emitter remove useless comment,,
1667,f2bfcea25315fde6f451d475a49016fece53a8d4,ascinated Box <FascinatedBox@gmail.com>, 2016-01-15 20:20:42 -0800, , ast thaw actually rewind state wow fix 146,,
1668,f58c8d779c8bd063f813ac55caad86bfc37e7c46,ascinated Box <FascinatedBox@gmail.com>, 2016-01-15 20:18:51 -0800, , hate forget commit test,,
1669,839f955e5a843da198067d95784702fc492499bc,ascinated Box <FascinatedBox@gmail.com>, 2016-01-15 19:58:00 -0800, , bake option core finally fix 142 string to_i string parse_i string find string parse_i return option integer replaces string find would return string to_i would raise valueerror test went string to_i removed replaced new style testing utility test new string parse_i testing string find yet ... need think redoing bunch test beforehand,,
1670,bd07f51a7851a1d781abfa6d78011431cbfa0bae,ascinated Box <FascinatedBox@gmail.com>, 2016-01-15 18:24:21 -0800, , took option finally part core includes poor documentation template update adjusting current test longer define option two internal bug needed solved new option api could tested using new strategy lexer ensure adding making large lambda crash emitter type_matchup assumed result work case variant needed adjusted account variant padded type new dynaloading enums variant many test changed account option part core documentation ... option test one file use lambda lot ended good idea cause register loaded unloaded lot uncovered extra bug missing existing api touched soon option tested much could due two problem lily type system one narrow generic function possible two variant right thing method call eager defaulting,,
1671,5c7cf921f5d7ef500eee351a6912d9dbdffe050b,ascinated Box <FascinatedBox@gmail.com>, 2016-01-12 15:57:35 -0800, , site add try editor template,,
1672,5266e568b1384bf7c942ba6f12836fd26f2bd14f,ascinated Box <FascinatedBox@gmail.com>, 2016-01-11 22:49:57 +0000, , build emscripten ... sort incomplete step toward try online page doe .js build right though,,
1673,cc6df132183f6ef36b8716825bf4f09a0e896c16,ascinated Box <FascinatedBox@gmail.com>, 2016-01-08 18:30:57 -0800, , use strncpy string split simpler likely faster,,
1674,b292e12a10d58795327a4cbd95189b67037c131e,ascinated Box <FascinatedBox@gmail.com>, 2016-01-06 00:42:42 -0800, , enums backing new update call important add test prove test complains integer patch exist,,
1675,d2837f527600c7906e88391a49da889e5407e9ab,ascinated Box <FascinatedBox@gmail.com>, 2016-01-06 00:29:49 -0800, , generic update come block entry trying option dynaload accidentally stumbled onto problem happens option first case something dynaloads class generic certain case generic option dynaloads want set number generic problem come block entered update option restore generic restores caller caller generic fix updating generic stated also removed generic update bottom enums think necessary since function block exit update generic count automatically,,
1676,6ec251ae1c4820faf7960eb9802a8bbe17188716,ascinated Box <FascinatedBox@gmail.com>, 2016-01-06 00:15:43 -0800, , enums optional argument neat includes fix recent commit added backing literal empty variant code wrong broke variant concrete type includes fix test anyway possible enums optional argument provided least one variant completely empty none option partly simplicity exotic invocation variant default partly requires change debug work one use effectively default argument type simply make option whatever give none default caller added instead return default one example one test creates my_print function allows specifying file target stdin used none set added feature liked seeing python could optional argument print function finally like note commit reason added backing literal empty variant without,,
1677,a677e4c4596d08d2cc186612e9db866a2940248c,ascinated Box <FascinatedBox@gmail.com>, 2016-01-05 20:46:29 -0800, , empty variant get default value ... except instance useful example none option need multiple instance lying around define variant built enums done plain integer literal instead decided make instance code depend instance like entity,,
1678,a098f47da0513aa3763f3180bdfd3e662eff8cea,ascinated Box <FascinatedBox@gmail.com>, 2016-01-05 20:27:49 -0800, , last commit overzealous directly free literal,,
1679,8e26e0bf9d2f6b30774e4eed3d3f7e4dd291ab7e,ascinated Box <FascinatedBox@gmail.com>, 2016-01-05 19:42:28 -0800, , remove variant related junk symtab code doe nothing variant build enums,,
1680,443dcce960cfee47b3711aaa7e13ea72278cb8fc,ascinated Box <FascinatedBox@gmail.com>, 2016-01-05 15:29:27 -0800, , add double type list correct documentation integer int64_t inside uint64_t big difference also still know managed list type,,
1681,ea5b65b2043c64e9d656b77ae1d2c2b18ba7ac7d,ascinated Box <FascinatedBox@gmail.com>, 2016-01-01 15:37:42 -0800, , unify member access emitter parser previously static access parser dot access emitter two different thing naturally led different bug unifying common code mean happen ,,
1682,bd60b5428b82f31d88b24951dc51dcff7e2fcc95,ascinated Box <FascinatedBox@gmail.com>, 2016-01-01 14:34:38 -0800, , parser even simplification make caller lookup lookup either return null success,,
1683,015ce38b71c410f2a6b627bb6e96aacaf246ab06,ascinated Box <FascinatedBox@gmail.com>, 2016-01-01 14:27:47 -0800, , core dynaloading function split expression mean one central dynaloading function anything return item caller used anywhere except step right direction centralizing dynaloading,,
1684,788bdf99ef0b7573e02712f0078d0c4946b26d76,ascinated Box <FascinatedBox@gmail.com>, 2015-12-31 00:47:15 -0800, , finally variant build enums fix 148 new variant previously would get created tuples lifted enum kind little messy meant two thing around one variant two enum receive value made adjustment emitter fewer reboxers bigger gap partial non partial generic solving may unify type debug enums instance marked collected destroyed appropriately  option important enum dynaloaded core release cycle part able making interpreter able easily create enum value adjust content needed suppose function like option and_then need apply function option option inside sound easy previous structure two thing dealing one option two since may need marker need make sure right type time dear well ... know going result register option and_then new option type need made inside option ... bad need create new type runtime good thing get made runtime option well problem ... exist would  important single issue took long time barrier dynaloading option result,,
1685,aa5e178a23ea28474782c00cd292523e56784d6a,ascinated Box <FascinatedBox@gmail.com>, 2015-12-28 20:57:39 -0800, , emitter boxing call variant work tree move value future partially evaluated variant pushing value therefore reboxing variant value need depend value pushed tree wrote fixing nice little step toward better variant,,
1686,1c6f440b3dd1462444137e290e4c5bddafcd9f74,ascinated Box <FascinatedBox@gmail.com>, 2015-12-26 23:46:43 -0800,145, emitter epiphany call piping fake call fix 145 fair amount problem call piping notably issue piping variant failing instead going func pipe tree pretend call run call incidentally solves 145 caused call piping taking variant account func pipe shoot variant longer issue,,
1687,a2712843eeede803025b52a316ede40be637e98e,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 16:47:56 -0800, , emitter better error message args passed previously error message check varargs optargs even allowed future pretty lame also made decision defined ... invoking alone acceptable consistent normal function need explicit invocation since variant true function function like entity return argue bad idea anyway case written error message say none,,
1688,ed63a7b4a23cf263ded1dc91822e9de83df7f065,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 16:24:26 -0800, , emitter ruby like wrong number args printing test adjusted,,
1689,3f29b0cd23eac4dc6402ed37a32c345186f6e889,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 15:53:26 -0800, , emitter need first first_tt always arg_start right field lily_ast union together,,
1690,307403af0e4d3387834a6aebc3049e1b7a5bf228,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 15:35:31 -0800, , emitter count argument pushing first method marked tree_method take advantage easily determine first tree really provides value tree value pushed later checking argument count correct doe external change internally make call state important,,
1691,497f5551ed60446018fc0403c1e62ec972ac54f0,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 14:50:04 -0800, , simplify call new tree_method used parser previously call handling emitter would need check thing called method seem right becomes difficult get true argument count result call handling became even weird parser push thing method tree_method making calculation lot simpler step toward making emitter call state simpler overall outward change,,
1692,947cc466f4aa0402ac12bf9571e4c1c41c4be571,ascinated Box <FascinatedBox@gmail.com>, 2015-12-25 00:23:00 -0800, , emitter drop error_item field call state instead use call state ast get error item allows getting error item take origin ast instead use whole call state part effort start cutting away emitter call state,,
1693,c62fe32a9a5841e3079adf87c54a2b2c54928430,ascinated Box <FascinatedBox@gmail.com>, 2015-12-24 23:10:41 -0800, , emitter simpler printing call name error doubt anybody care something function variant part gone separator calculation simpler also longer writes directly msgbuf instead writes incoming string turn make error printing easier test updated since name printing altered well ordering name argument number,,
1694,a2d0290c071c3c870845baea465c8d9506c9812b,ascinated Box <FascinatedBox@gmail.com>, 2015-12-22 14:09:59 -0800, , emitter hash value require consistent type totally sure work variant though checking intend redo variant done soon almost,,
1695,de175a3ee6f46f64a13dd67c57bf5c2b5b88dee1,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 21:33:10 -0800,147, proper resolve fix 147 make error printing forcefully resolve otherwise solving broke error message test tested show ing __main__ 147 test sadly think test outward damage syntax error think therefore add test problem,,
1696,64be10be20ee02d47ca13c86c0db722f0c3e4741,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 21:15:34 -0800, , create partial_eval handle eval target might variant combine list build call arg handling get result may may variant keep mind code severely flawed doe handle parenthesis piping totally working still however encapsulating one area good starting point,,
1697,a2e88731d4b6928e068bec717767bfc0b4407ed4,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 19:53:56 -0800,140, add lily_ts_unify static list require consistent bottom type lily_ts_unify new api run type engine check equality also build common type make sure work decided use simplify building static list henceforth longer thing called default list uncommon type order get thing one must use typecast coerce data want may work though half unification 140 asks however largely relates 148 provides combination variant value knowledge padded type made test needed altered mostly list inconsistent value longer becomes list instead one must ask using typecast,,
1698,5fbe8af8b5b1a4f24321a811dd5df7024d7828fa,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 18:33:26 -0800, , emitter eval_tree doe reboxing local need eval otherwise reboxing work local var weirdest kind way,,
1699,e1bc9b9c4c87e6e40754af1f8e52afea8e558322,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 18:22:27 -0800, , emitter typecast wanted type inference,,
1700,eeb7b19a3075f1ed1ad0950021119c9ae60419e5,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 16:27:34 -0800, , emitter variant push back padded enum type also includes setting self type enums class easy way getting solved type ask solve type used call solving generic nice side effect longer defaulting variant early necessary yay better type information,,
1701,cab4b82c2c44d195c8685b99d05944bc88c79f95,ascinated Box <FascinatedBox@gmail.com>, 2015-12-18 15:08:38 -0800, , call inside type actually anything right variant get defaulted solving anyway need keep variant putting actually opinion something turn prevents bad defaulting necessary,,
1702,34b5a152920f1aae31546511814c172033f526c9,ascinated Box <FascinatedBox@gmail.com>, 2015-12-15 23:54:00 -0800, , emitter move empty list hash building different function building empty list hash really annoying contain single function way list hash build focus best put code doe error bad key one place simplify thing,,
1703,2ac10cc9938e12155d984a09eb73ec110939afc8,ascinated Box <FascinatedBox@gmail.com>, 2015-12-12 01:15:33 -0800, , eval_tree reboxing job trying make type_matchup magically alter value since seem like good idea anymore,,
1704,6a286303aab0081ba67fbd9d3461ac85f30ecaff,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 20:15:51 -0800, , lift else clause,,
1705,4208fa793b72836bf5bcffc87136a5c4e43699d5,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 20:06:08 -0800, , longer auto promotion previously option none okay auto promotion however bad idea reason make type easier use type stupid type trying avoid provides way dodging match instead working  two value one point point3d allow comparison unless point runtime value actually point3d comparison always false see people liking language good type system hate like match therefore must die,,
1706,02b2d9294e589678fb1544219923c157fb782423,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 17:18:43 -0800, , update version number add releases.md update,,
1707,46fa42b4b5e65a2deadd0a183b75ea46922f2344,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 16:36:53 -0800, , add try example fix 119 example capture bare basic lily language started like evolved rely type inference functional idea example great though held reason handle anything within printfmt want interpolation want printfmt die option need baked core change least string to_i currently throw error write name name class init annoying big need fixing shameful container support slicing limiting example lot list join hurt lot importantly release taken long want mind calling done contribute example within next release,,
1708,f2fbc5c6322893e77af3c22bac2f8e29a5c032a6,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 16:00:58 -0800, , wrong line number try,,
1709,aae703c83ba88a8e231e0c482adc403ff9c80c32,ascinated Box <FascinatedBox@gmail.com>, 2015-12-11 14:02:11 -0800, , new rule flush msgbuf using,,
1710,6e6e1569050986f065387f72b6d4ac177cd727d5,ascinated Box <FascinatedBox@gmail.com>, 2015-12-08 20:01:45 -0800, , fix really strange bug vlist vlist vlist crash problem parser allowing tk_label escape checking escape could done nested expression incorrect complicate matter vlist assume variant take varargs would get extremely confused ... infinitely recurse eval fixing label case improper behavior crash become hope impossible test added make sure problem never return,,
1711,c64d9b559d189a8034ffdf87a83bad9c5236f654,ascinated Box <FascinatedBox@gmail.com>, 2015-12-08 18:37:10 -0800, , redo loop fix semi related bug previously lily loop would try auto detect looping actually turn really bad idea sometimes want loop going value loop instead loop reverse one example trying hit wall also loop reverse step starting loop instead skipping check first time mean loop like ... would run longer ever worked bug caused grabbing local storage hold counter global bad idea storage almost certainly going snagged something storage target previously evident internal semantics loop work aware leaf loop unused slot get emitted however fix next release want break anything plan redoing fair amount emitting anyway simply include reduction emitting redoing,,
1712,1c23b802b7d6b0002133f4b9299e6b5757b47e21,ascinated Box <FascinatedBox@gmail.com>, 2015-12-08 14:19:51 -0800, , class able access method decl working static access access emitter,,
1713,5289973ee0c5e49f0c458152a2118cd0beb96b3c,ascinated Box <FascinatedBox@gmail.com>, 2015-12-05 23:31:02 -0800, , fix crash call variant default args updated test,,
1714,8a22a7ce2801aa4970d86926aa813a55d7797f72,ascinated Box <FascinatedBox@gmail.com>, 2015-12-05 23:05:06 -0800, , ast binary tree also want store sym lit etc,,
1715,091afd929c9aa90f88f5633edf0a345934ca12cf,ascinated Box <FascinatedBox@gmail.com>, 2015-12-04 17:38:41 -0800, , print complete madness work ... ast rewinding tree back credit problem really lexer rewinding broken started one early side note fixed lexer rewinding call another lex instead use strncpy better,,
1716,182fe00866b0523a61f6f8252aa3164c080ca39b,ascinated Box <FascinatedBox@gmail.com>, 2015-12-04 16:19:29 -0800, , file readline must flush msgbuf done,,
1717,673e1532277973a024ea7e7f1afffd96909d4c91,ascinated Box <FascinatedBox@gmail.com>, 2015-12-04 00:12:15 -0800, , header prototype also need inlining information,,
1718,b9a8289fdd895b65c07a8df159e3882f043d5a4d,ascinated Box <FascinatedBox@gmail.com>, 2015-12-04 00:07:10 -0800, , thought clever actually stupid,,
1719,1f768d0237e15c15bfa2a052e89a2187ce86a200,ascinated Box <FascinatedBox@gmail.com>, 2015-12-04 00:03:02 -0800, , really hope end redoing comment,,
1720,ce4c5360527eff08cb336f6043f645401fd8f6e6,ascinated Box <FascinatedBox@gmail.com>, 2015-12-01 21:40:42 -0800, , raiser comment cleanup made monster,,
1721,41babab5f4201567c7e45a7e8316bc745c3462cf,ascinated Box <FascinatedBox@gmail.com>, 2015-11-27 18:51:36 -0800, , symtab remove useless block code nested class dead,,
1722,019186b9780c79941054854efcf3a0b276d7c0ff,ascinated Box <FascinatedBox@gmail.com>, 2015-11-27 18:50:56 -0800, , symtab comment cleanup organize,,
1723,a90dc04dd2b34479866f105d0a68915731cb2a34,ascinated Box <FascinatedBox@gmail.com>, 2015-11-27 14:58:00 -0800, , comment cleanup organize,,
1724,18a5d6abf45b07d59cb44dfaf374c57c29c03af4,ascinated Box <FascinatedBox@gmail.com>, 2015-11-26 21:09:01 -0800, , emitter comment cleanup organize,,
1725,777bd936139eb9043f65a92defe4a0d262adbc6b,ascinated Box <FascinatedBox@gmail.com>, 2015-11-20 20:27:26 -0800, , var okay probably regression adding test good measure ... probably deleted test ,,
1726,093ef730aa3e730b0a364c6d407b27199d77d4c5,ascinated Box <FascinatedBox@gmail.com>, 2015-11-20 17:59:54 -0800, , touchup little remove oops,,
1727,7fc354e979bf7aea3b0d2bec152bf3c19fa75f4a,ascinated Box <FascinatedBox@gmail.com>, 2015-11-20 17:37:08 -0800, , time clean comment first parser,,
1728,e7b7b61b8cc90130ec5a521404740796a7132829,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 18:34:45 -0800, , remove unused variable lily_vm_execute,,
1729,34222d8a8019a5bf40369a618a6f114d6c5540c2,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 18:31:53 -0800, , need restore upvalues catching exception,,
1730,b65d83079c60b37d2893e594591851df177dbad9,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 18:22:57 -0800, , closure jumping finally fixed subtle problem existed since closure first introduced happens value closed used original scope sort condition work like suppose closure rewritten closure read writes injected need currently slot extra read writes jump previously went 100 would need 140 right well necessarily jump backwards yes jump forward 100 read writes injected jump 100 going 150. somewhere wanted reach 150 140 written result jump wrong place executes bad opcodes test added patching cause segfault instruction,,
1731,f0e6081d2cfccf81350f09902fbaf38c5a842156,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 15:49:55 -0800,133, add hash merge considering 133 done want add hash api need option baked core release concludes everything want hash,,
1732,05585b26015d475763fc57c989b30d52baace9bf,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 15:45:57 -0800, , dumb put wrong name hash reject select,,
1733,e46d0aa4da6c000881f0f63c96ebd4bc1d4f6fb0,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 15:23:58 -0800, , add hash select hash reject,,
1734,96c7417397c0a83df1a7070ebbf8349c635bc75e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 15:23:11 -0800, , add test file hash delete whoop,,
1735,b91226e4f4b25e08d1990184e077e04282df2644,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 15:05:35 -0800, , add hash delete,,
1736,49b0c99f56aafa0324f2e505daa8a70a42554c4a,ascinated Box <FascinatedBox@gmail.com>, 2015-11-18 14:49:57 -0800, , simplify common code fix memory leak hash map_values,,
1737,e1111659a86bebcb2a8447db6dffe95b2bbe1b6c,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 21:31:40 -0800, , add hash size,,
1738,8bd1f2ffbef461919b887a8313d78049394a11a5,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 20:05:49 -0800, , add hash map_values,,
1739,b3f3edfcb938cc884165c680dfcf0ce7a4f4461e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 18:26:25 -0800, , provide release unused jump wrap single line code thus might seem silly however rather well defined api function make sure manually adjust jump used latter rather yucky sounding former also lot clearer answering question okay happens jump used,,
1740,47bf120dc6c534eb1f6ed670a6badf12414410f4,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 18:14:28 -0800, , forbid adding removing hash element iteration stuff break allowed could allow removal iteration function need check removal one item ahead five item ahead mess quite willing get yet forbid entirely,,
1741,9a4fda843f94e6e098dbb70da064067b89624619,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 17:39:08 -0800, , add hash clear,,
1742,1c8e06df0a2e1ecdd91523f92762b64338872833,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 17:18:51 -0800, , internal list actually need iter_count field thought would problem started expanding list api turned case,,
1743,6368c553d1487dc4fac0385be4111cca997e1749,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 17:16:56 -0800, , remove comment seems rather dumb,,
1744,79d82ee2df3d2da49383b8a0f0e31eedffae17b3,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 17:10:43 -0800, , remove internal api nothing,,
1745,58478386b7ceeb8bad1ea68b7f80c1c96037d728,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 17:06:37 -0800, , internal hash api cleaner previously ... really remember problem hash api required explicitly creating siphash using sipkey sort potential something wrong way three internal hash api function take handle siphash part harder wrong good thing,,
1746,5d605903ab520569ff15c34d75fc0951cb456038,ascinated Box <FascinatedBox@gmail.com>, 2015-11-17 14:59:29 -0800, , move value related operation lily_vm lily_value operation need better suited file solely related operation value,,
1747,3de70b039e2b2ce0dd223f1c0f5990c82843ed1e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 18:40:19 -0800, , added hash has_key,,
1748,8620702942ff308bebedf98e734a46dd26c2ca10,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 15:43:20 -0800, , builtin print command add end,,
1749,c5e0835e3531b9ac6de4a3c8106b835b1e284ee0,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 15:26:50 -0800, , missed stderr.write,,
1750,d3b7ef6ed0621cb6a90108aa914839681ee9108e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 15:25:01 -0800, , test use stderr.print instead stderr.write new file function automatically put file code doe manually insert everywhere,,
1751,9f67ea480ffe51249c550536ff13d52e56c46e64,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 15:17:28 -0800, , add file print file write plus,,
1752,f7796f11219a9f01fff92be272c436009a31aa9b,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 14:54:39 -0800, , add documentation list delete_at whoop,,
1753,9e03e9563a0933a7000510029145297681496809,ascinated Box <FascinatedBox@gmail.com>, 2015-11-16 14:47:30 -0800, , add list delete_at fix 132 finally add next release option land concludes everything want current release,,
1754,70ee60a1cbd0807a75e4d5c2a0e5a770c8ff8070,ascinated Box <FascinatedBox@gmail.com>, 2015-11-14 00:27:01 -0800, , fix oops causing toplevel lambda accidentally closure caught trying make man boy test rosetta code test added test crash different reason baby step right,,
1755,8e57484257338c0c07af499689863a9a0061eb3c,ascinated Box <FascinatedBox@gmail.com>, 2015-11-13 17:23:53 -0800, , add list insert,,
1756,f8a5f7b4e0f88ef925d0d7616537372065125f07,ascinated Box <FascinatedBox@gmail.com>, 2015-11-13 15:42:32 -0800, , add list fold,,
1757,f8858c14b1300293281f34f9d261d7be5cc62d60,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 18:40:34 -0800, , add list unshift,,
1758,09221eee94c598c87be73e41099f1041d066d55e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 18:23:31 -0800, , alphabetize dynaloads within list class file otherwise order completely random look like complete mess,,
1759,eb57c762782c41b3d9ca56a143fcb31b9dafe3f1,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 18:16:55 -0800, , fix oops alphabetizing list api,,
1760,070052907b6b015499485eb5c3a07074954f6f2f,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 18:13:57 -0800, , add list shift,,
1761,dfc33093180d8008ce14b40d9c538f559714866e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 15:45:17 -0800, , add list count,,
1762,b2826ccb425feb076a3fbc4cd09f048cd248fa32,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 15:19:55 -0800, , implement list clear,,
1763,a87dc1e75f3661dc9cde44732f810cd81596fd2a,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 14:55:31 -0800, , list append list push symmetry list pop,,
1764,70a9f1bfe0f2f1842a7894b7702ff1efd3a5f47c,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 14:50:16 -0800, , add list each_index,,
1765,9211a701600589d3e6b2d2bc268846844cec401e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 14:01:09 -0800, , fix oops list would crash call grew register also add test file,,
1766,0a292bc8c05e4384109b6b0fd48fde3fd83651e4,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 13:56:07 -0800, , add accidentally forgotten test list pop,,
1767,507bbc2a358c807aabd4e54fd260907274ea66b4,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 13:50:48 -0800, , add list pop remove item end list fully realize way allocating free ing list element likely best one however also understand trying make super optimized list type something beyond scope knowledge instead trying something likely wrong stick simple improve later also aware list append due rename happen shortly,,
1768,67281c3087454b896cad2385b3d328b44f90fac6,ascinated Box <FascinatedBox@gmail.com>, 2015-11-12 13:22:47 -0800, , use smarter allocator scheme growing list patch add iterator count field useful later also field extra space growing mechanism list ... smart loose sense word better certain better way,,
1769,f607926cc72d0198d0290166d0f1a39d42319d16,ascinated Box <FascinatedBox@gmail.com>, 2015-11-10 22:02:56 -0800, , finally solved and_then problem fix 120 proper solution lambda closed unsolved type put information aside generic register solving come upvalues mean fixing type without type and_then unknown default bad,,
1770,22353994499a52b24495ea5b95b7d00857534622,ascinated Box <FascinatedBox@gmail.com>, 2015-11-10 11:06:38 -0800, , emitter functionize code call setup use call piping call piping check unresolved decide solve part normal call result kind call failing get type solved right particular and_then could implemented using type getting solved right however added test and_then work call,,
1771,d5420e34e6e06925d0f9142c1b30e56f32ccabbe,ascinated Box <FascinatedBox@gmail.com>, 2015-11-10 09:51:28 -0800, , emitter handle unresolved upvalues like unresolved local,,
1772,ade313f6e873bc7810df688abc189d929d4d43a4,ascinated Box <FascinatedBox@gmail.com>, 2015-11-09 01:21:16 -0800, , destroy list apply use list instead list apply map added bonus mutating input list would want good question know since taking tip ruby design list hash api provide list instead list sane decided retain return input behavior ruby encourages chaining like chaining,,
1773,d13d3dd30ee8946a33c34dd24810b224e1c43ee8,ascinated Box <FascinatedBox@gmail.com>, 2015-11-08 00:47:39 -0800, , use list map instead list apply list apply poorly designed never made first place sorry,,
1774,5cc71a837f4931070a20f645523b2d2c7852e837,ascinated Box <FascinatedBox@gmail.com>, 2015-11-06 14:17:52 -0800, , parser handle static call statement instead kick expression already handle static call,,
1775,08b5a0d58607d200df47c2bd2b6cf47285b725e3,ascinated Box <FascinatedBox@gmail.com>, 2015-11-05 18:43:49 -0800, , prevent static access grabbing wrong class previously test boxtwo new call would instead yielded box new call fail wrong argument count,,
1776,440391d1aae8d2ab72d9f416f7b246929d8ec53a,ascinated Box <FascinatedBox@gmail.com>, 2015-11-05 16:35:58 -0800, , okay wrong make enums pas value ref change folding done type enums done decided seeing function took could assign different value new value would stick send enum function function assign without changing original dislike far reaching magic,,
1777,1d1a9ed580d2980a908d46f36181331dd6728b42,ascinated Box <FascinatedBox@gmail.com>, 2015-11-05 16:34:08 -0800, , parser check right flag circularity,,
1778,d40ae70a46c0ae5fb39ccc0edd2f9bda585f50c7,ascinated Box <FascinatedBox@gmail.com>, 2015-11-05 15:08:21 -0800, , never ever compare type pointer ts_match allows potentially bypassing checking generic thereby bypassing solving bad,,
1779,3acd9c86de1a60dc37f24fa2562b3a30383bb82e,ascinated Box <FascinatedBox@gmail.com>, 2015-11-05 14:59:04 -0800, , deleted 100 test made handful new one test back lily would segfault much looked funny lily lot solid older test never failed test also put safety check completely broke feature test bothering lately prompted test many passing test crashing problem many sea panic test single thing broken helping consolidated lot test useless one completely gone looking andor.lly merged test 100 line call piping example test get merged together piping really easy feature build upon feature,,
1780,bb90b42b8bc9d32ddc4dad29d23612bb08a71f59,ascinated Box <FascinatedBox@gmail.com>, 2015-11-03 21:31:08 -0800, , fix oops type maker variant type turn patch added solving kinda fixed issue existed partial solving variant ... another problem trying build result variant wrong value used wrong value would end causing segfault fix therefore unleashes partial unification somehow fall place neat,,
1781,5417f2e69c99d8cb572cf6b57f9312f9a90837e1,ascinated Box <FascinatedBox@gmail.com>, 2015-11-03 18:37:35 -0800, , properly mark circularity ... sort fix hard problem solve variance function container current class without current class necessarily circular fix interpreter assume class need marker contains container anywhere inside something inside need marker great fix lot better enums always circular class ... busted overly aggressive least big step right direction,,
1782,6a704d2cad682bfbeef4b0c090371bed80b092ff,ascinated Box <FascinatedBox@gmail.com>, 2015-11-03 17:29:27 -0800, , use enum value prevent variant optimizing assign trying fix circularity bug noticed box assign always creating new value tagging seemed wasteful real problem never deref ing old value trivial assign refcounted value prevent destroyed fixing easy though obvious technique create new boxed value instead use old one except ... sometimes emitter like use storage happens var assigned option integer option integer copy storage bad thing next time something grab storage going overwrite inside content var value changed sort magic thus made decision enums variant type may storage reused function grab enum variant type storage storage stick function done reuse  another issue semantics enum type decided disable optimizing variant value optimized meant one could assign parameter enum parameter inner value mutated sit right took well,,
1783,dbb857992c785ef4344fc2b85b1a0a70a8482a76,ascinated Box <FascinatedBox@gmail.com>, 2015-11-03 14:26:47 -0800, , emitter force type become end call without test like variant generic test create value type option bad,,
1784,05eaf8fb452cbc8592a45d1dfc0a6eb233c7bef8,ascinated Box <FascinatedBox@gmail.com>, 2015-11-02 18:29:41 -0800, , add new class flag cls_always_mark set function function could instead closure bet closure,,
1785,e23f30a26b27607dd2cfeddf4a6323fe55a3eebf,ascinated Box <FascinatedBox@gmail.com>, 2015-10-30 13:10:07 -0700, , call frame hold full value return offset offset kinda nasty thing negative subscript vm_regs importantly offset mean caller specify specific value return  required change elsewhere emitter writes instead return value translates 65535 uint16_t trying eagerly grab register much offset crash force vm_regs null lily_vm_prep prevents crash __main__ register call import also register unlikely possible test pas import trigger debug check function return bogus skip ,,
1786,7d33497021c13320218e9de9f53001b0192e4656,ascinated Box <FascinatedBox@gmail.com>, 2015-10-30 10:43:05 -0700, , unify common code fix subtle bug new list api list iterated getting tag possibly second tag instead newly created list unification well list iteration function copy value vm_list shallow move later select reject shallow moving vm_list deep copying later,,
1787,f03682e3b72c064285f83a7599d88cba7a42e755,ascinated Box <FascinatedBox@gmail.com>, 2015-10-30 10:06:55 -0700, , fix invalid read main_block need make_closure,,
1788,20a48f524de340c2f9d9f9c28d8aae0453f3a932,ascinated Box <FascinatedBox@gmail.com>, 2015-10-29 17:29:26 -0700, , interior exception handling handle vm_list unwinding old way something easy forgotten function expected set catch rollback vm_list error new way simpler function need set jump link calling interpreter instead simply call interpreter worry fixing vm_list exception pass,,
1789,24d819441cff213ee63ac522de3681c90797c2f0,ascinated Box <FascinatedBox@gmail.com>, 2015-10-29 14:38:32 -0700, , rename unused field pad,,
1790,47a3d447c2b032082ac6aecd98156e9af9c1e792,ascinated Box <FascinatedBox@gmail.com>, 2015-10-29 14:30:40 -0700, , fix subtle bug try block popping return problem calculation return block popping going current loop block instead current define block meant possible try block get popped early return test added crash without fix try block used jump wrong area,,
1791,c500fef99ef28907c6974397d146531cf4200733,ascinated Box <FascinatedBox@gmail.com>, 2015-10-29 14:07:01 -0700, , make sure type within type oops possible right side generic type replaced left side actually cause problem within typecasting work one might expect would,,
1792,921dc59deaba19aede5c99e0de9fce2cc37b197f,ascinated Box <FascinatedBox@gmail.com>, 2015-10-28 23:54:39 -0700, , lexer remove unused follower_table,,
1793,ef2452c2fcf76d2013d69c7e2a0e784be46a0a8a,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 22:14:22 -0700, , add missing markdown file new tainted datatype,,
1794,50d3a693b9439682d90ec2392196ed10665c9bf6,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 22:12:05 -0700, , fix crash given line big sigh think noticed stumbled upon trying force standard library dynaload could figure much memory saved dynaload 40k sad discoved added test prevent coming back,,
1795,0a60cc0b1c8e94c1719d422cefbb29df96302c56,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 21:02:50 -0700, , correct documentation new varargs syntax,,
1796,058844a921ad27e806a31468d6c7157f4651b316,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 20:56:24 -0700, , varargs say type ... instead list type ... fix interpreter programmer understand varargs boxed within list feel rather trivial thing remember since builtin type array like,,
1797,a69e7438536d7a38198f74f32a788b586fedeed8,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 18:09:20 -0700, , syncing documentation,,
1798,bb24d24a83c9b44f67028cba36f5ed10592b5d66,ascinated Box <FascinatedBox@gmail.com>, 2015-10-27 12:07:30 -0700, , server server get post env value tainted string big really big fundamentally longer possible simply write data say server post directly query directly server data considered tainted must sanitized simple hello type safety,,
1799,ec2fb3e5eaa374614d5793c973eb08feff42af83,ascinated Box <FascinatedBox@gmail.com>, 2015-10-26 16:13:46 -0700, , create tainted class represent untrusted data since postgre server going need going need core going put tainted core directly time future tainted dynaloaded hopefully exception well tainted class represents container data retrieved sanitizing function sanitizing function particular however one may tainted string use string to_i retrieve data integer unless exception thrown,,
1800,476dd5b03e9a906fdbef507fcaa2dea9b5c934c2,ascinated Box <FascinatedBox@gmail.com>, 2015-10-26 16:05:55 -0700, , apache add three server function write escape write_raw start type safety stuff server one thing note server write first function check value literal denies reason allow server write fast writing server write_raw server escape writing escaped stuff,,
1801,9c17d02e1bb47dfa9e3df9b1f1bd7d0384a8d161,ascinated Box <FascinatedBox@gmail.com>, 2015-10-26 15:18:36 -0700, , apache allow invalid utf get post env eventually plan allow raw_get raw_post maybe raw_env allow access thing valid utf,,
1802,69ad707b9d13c485f84744841af4d29c8db02fdc,ascinated Box <FascinatedBox@gmail.com>, 2015-10-23 20:37:12 -0700, , much better sys argv behavior old behavior allow extra argument script also start sys argv exactly argv started extra script argument sys argv start either input string starting filename,,
1803,68e02197ecf5f86c747575d5dee1aff3477365ca,ascinated Box <FascinatedBox@gmail.com>, 2015-10-23 20:20:26 -0700, , add better utf checking function use instead mine,,
1804,f59d8de5c8a0b142142807b6814c7d4b7808486a,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 23:22:59 -0700, , ceiling raise need grow much awful store type past ceiling make sure safe era finally good riddance,,
1805,c841ae407b63148069a1a042b8c52f9fdd7c8285,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 23:13:53 -0700, , eval_call sends solved type ever since generic added common thing figure current function holding solved generic big problem handling confusing thus often wrong wrong handling solving bit mean either poor inference wrong inference double solving type safely substituted assigned instead fill unsolved generic type let set null need done result emitter inference code parser lambda inference code lot straightforward change inference better throughout interpreter lot harder incorrect inference,,
1806,f82182fe3866b66020a00a58edbfdcfc5d7dd265,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 18:20:13 -0700, , generic unresolved type error instead idea solving generic okay ... could rather confusing calling generic function another one hopefully make clear want something care something,,
1807,3ccdf1732fa7f1fc65c06c83b3e8b2012bf7d88c,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 17:53:23 -0700, , simplify flag reduction type maker,,
1808,f8d9f9fc7f09d1fd4421f78d4f181090cc1621c2,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 17:30:41 -0700, , emitter easy resolve accept null,,
1809,32876b21632808208ca133973dffd574ff1bb984,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 15:23:25 -0700, , create lily_buffers first buffer uint16_t give shoutout wren got idea bit ashamed think sooner starting get tired buffer growing function littered around sadly doe include fixing buffer emitter reason want fix buffer used match probably use jump like exception instead single glob closure could probably use padding var likely current plan back buffer fix type system work,,
1810,96b4f561ad29fe27d2216c73c410ba0569568698,ascinated Box <FascinatedBox@gmail.com>, 2015-10-20 14:33:01 -0700, , parser fixing patch try except need done let emitter instead since within emitter,,
1811,ece414cc54b0b13396cd0a9ab0abe1036282e148,ascinated Box <FascinatedBox@gmail.com>, 2015-10-17 12:26:57 -0700, , raw make anymore patch put little away using ceiling eventually want stop using ceiling entirely raise grow time since need account ceiling turn mean smaller grows around faster speed though hair make two new apis add type without size check giant size check vital resolve resolve used thus extra fast patch also stop resolve using aforementioned ceiling adjust ceiling calculation,,
1812,96bab8267de7c5a20c30140b7ab66f0ff72f6c53,ascinated Box <FascinatedBox@gmail.com>, 2015-10-17 12:02:39 -0700, , whoop initially intended call module type_builder realized prefix would seemed weird type maker thus seemed better,,
1813,a970ce2a9f3ecb924e805fa31eb7be65aa66272b,ascinated Box <FascinatedBox@gmail.com>, 2015-10-16 19:10:21 -0700, , parser simplify,,
1814,43aad422429b2f13714220c8907a467ce4f5c758,ascinated Box <FascinatedBox@gmail.com>, 2015-10-16 19:09:16 -0700, , properly check static access,,
1815,61aef740b98287c7c42a029c44a94c0dfd414352,ascinated Box <FascinatedBox@gmail.com>, 2015-10-16 17:51:32 -0700, , major adjustment closure handled consider function hold function function list two inner function add display function add add item list function display show list function return add display operate list closed commit calling function twice would work properly would store upvalues closure upvalues would retained copy correct invocation fresh list close patch doe also doe thing related closure longer place function closure proven unnecessary instead simply wrap given function upvalues current upvalue source thing group function sharing closure data closure data sharing cell function get upvalues copy cell longer eagerly created unlikely every closure created use o_load_closure tell given function cell position var local allows function loading closure intentionally null cell level force closure create fresh cell upvalues come along instead resorting damaging current cell vital two new test pas closure marking creation little aggressive previously assumed anything closure would closure yes style marking set default yes definitely closure needed nice function defined within another function going need closure information closure_data struct dead fully flattened function value simpler way verified correctness creating two new test would passed also run valgrind closure related test ensure leak,,
1816,0dd14f977a4d1511cbe27b57b42b61ace43b0bde,ascinated Box <FascinatedBox@gmail.com>, 2015-10-16 17:39:54 -0700, , remove class_depth parser use class_self_type null instead,,
1817,f9d8a872f0c0107cc79881910074a13fcf20e0bc,ascinated Box <FascinatedBox@gmail.com>, 2015-10-15 16:33:12 -0700, , lily_new_value used create value cleanup couple site use lily_copy_value instead creating empty thing assigning simpler also equivalent strange boxing thing type longer done,,
1818,571ee70a9c676b28af5d5bff8429b1d0c4def428,ascinated Box <FascinatedBox@gmail.com>, 2015-10-15 16:03:30 -0700, , fix embarassing oversight register growing,,
1819,64fcae4314272ee3cfeeceb8fb7f6d572c2628c8,ascinated Box <FascinatedBox@gmail.com>, 2015-10-14 13:10:44 -0700, , parser always allocate loadname save byte memory two different import cause headache part code cause symtab need check loadname null completely silly remove silliness,,
1820,73be5fb0372a178e7a32c0b0da6ab9b9f75d68b5,ascinated Box <FascinatedBox@gmail.com>, 2015-10-13 14:09:25 -0700, , allow boolean default value,,
1821,a2d3f893d27b98a84d7afb2565297cabb6fc0453,ascinated Box <FascinatedBox@gmail.com>, 2015-10-13 13:57:35 -0700, , update documentation new define style exception traceback change,,
1822,b70abc58cd13c9f3290194dba1c83d7053260f52,ascinated Box <FascinatedBox@gmail.com>, 2015-10-13 12:52:54 -0700, , pull remove named since get_named_arg relies upon need check optarg validity since already doe,,
1823,e8506da16f49c6e45c2f5ac42f7758c1d2627c48,ascinated Box <FascinatedBox@gmail.com>, 2015-10-11 10:41:37 -0700, , make optarg collection general internally,,
1824,f76e179d424084eb553eafc8b03a930096153e76,ascinated Box <FascinatedBox@gmail.com>, 2015-10-11 10:26:49 -0700, , take optional argument tag new,,
1825,6a53f86e9fe1ba6e89f3fe0512496b49fbe35155,ascinated Box <FascinatedBox@gmail.com>, 2015-10-10 01:39:41 -0700, , shuffle prototype around oops last commit,,
1826,5a758557fda9f404643939e77d0907c33af5cdbe,ascinated Box <FascinatedBox@gmail.com>, 2015-10-10 01:13:46 -0700, , finally much needed eviceration old type collection commit type collection lily used hobbling along believe collection back lily would collect name var couple year maybe old type collection system numerous problem main one tried satisfy everyone define class init rather simple sane variant collection real weirdo lambda complete oddball thus kind collect basic type collection var kinda simple old type collection give flag magically hard stuff worked okay ish variant showed life support since new type collection provides three core function give type get_type give argument give named argument get_named_arg caller form loop use one want unfortunately code repetative fix iffy want generic near future big change rolled massive change defines class infer type previously empty parenthesis defines class nothing inside instead define lily infers take args send anything either also made work inheritance say class without using annoying empty parenthesis commit important couple feature proper class circularity marking one really needed old type collection system destroyed huzzah,,
1827,5191ae180c97a3c7ecfed06bf5d1cb0052459206,ascinated Box <FascinatedBox@gmail.com>, 2015-10-09 16:22:26 -0700, , symtab argument used,,
1828,2f2926be59f7f1e0106debf9ef6cad72bbbc5b9f,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 14:17:53 -0700, , something stupid never asked valgrind whoop made two parser overwritten emitter basic dumb memory leak sorry,,
1829,cb6ce573a2fa4bd52130c126ff918d8182edfacf,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 14:02:52 -0700, , ast boot pool tree take parameter ast pool take parameter long long time ago thought various bit interpreter like configurable ended useful initially think may array tree long time ago also chosen tree used also function save node instead custom save node advancement lily core design save tree linked list think better choice also also reluctant allow tuning internal parameter option directly passed parameter,,
1830,be431d0cd945d90559054ddffc65ab5a68b4c2cc,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 13:54:41 -0700, , ast emitter neither use option,,
1831,2fc8df25e22d5c436325081bf12ccfdac726bb2e,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 13:44:58 -0700, , parser use import class item fixup previously would call parse_prototype line caller parse_prototype first problem another problem able unify import class meant two similar quite function create dynaloaded method dynaloaded toplevel function merged parse_prototype merged two argument one lily_item making code simpler cleaner two emit function similarly merged single one much cleaner also removed wrong comment unfortunately mean adding prototype mess already top parser sorry,,
1832,041e0daafb6c32415cce62bb6d7769bbd06f88e1,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 13:17:47 -0700, , parser remove useless line,,
1833,664f1ca2a6505dba782262d101edf09d76bffb3d,ascinated Box <FascinatedBox@gmail.com>, 2015-10-08 12:36:05 -0700, , parser make import entry able item ... make dynaloads easier instead passing raw dynaload table instead make dynaloading take item use casting item given allow added simplifying dynaloading near future,,
1834,95f5a4632fb807593ccd18d1c56078a7e728c0c0,ascinated Box <FascinatedBox@gmail.com>, 2015-10-07 17:43:52 -0700, , parser unique lambda help,,
1835,5d4c16ff5cda1b581d29345efcb842b6470e0d56,ascinated Box <FascinatedBox@gmail.com>, 2015-10-07 17:30:50 -0700, , parser type_stack,,
1836,792092b02f286b376b85cc8182084d33a488d1a1,ascinated Box <FascinatedBox@gmail.com>, 2015-10-07 14:47:43 -0700, , parser use type_by_name get exception type may fast ... previously done lot fragile,,
1837,a216f0d2e03a2c9d23df30202778b08de79dc40f,ascinated Box <FascinatedBox@gmail.com>, 2015-10-07 14:43:47 -0700, , finalize_type never see generic type,,
1838,d6e6bc24307445c207ba5a446998c207aa1cf144,ascinated Box <FascinatedBox@gmail.com>, 2015-10-07 13:25:03 -0700, , treat contravariance reversed covariance simplify,,
1839,fe3ff7cdd84167f6f80e31ada3fb086365c88842,ascinated Box <FascinatedBox@gmail.com>, 2015-10-06 15:54:08 -0700, , introduce new module one build type type creation fragmented parser new type created type stack shoving thing directly type stack symtab would asked actual build emitter make carry ceiling shove extra type ceiling tell build something based ceiling  store type ceiling manually ask symtab build one understandable resolve fast symtab actually type building however symtab doe actually type stack use type build using sent stack size offset thing one might expect led oops issue much little type building except symtab building generic default unified within new module called type maker parser fiddling pushing popping type stack emitter storing ceiling type new system lot safer module like parser emitter insert number subtypes need call type make many take top oops issue thing past certainly much harder sign stability completely rewrote enums build variant resulting code successful first time said lambda good module still work done area parser dynaloading need similar unification symtab freed make default type also need determine future generic type lookup symtab doe seem belong module represents rethinking type building good thing,,
1840,382bf7029ecc6ad4b59a74cb9dbe2dfcd1a48122,ascinated Box <FascinatedBox@gmail.com>, 2015-10-06 12:54:15 -0700, , need raiser option,,
1841,b55c0388e4a946e07a0596e0a6c7222a6e3f96c6,ascinated Box <FascinatedBox@gmail.com>, 2015-10-02 16:59:28 -0700, , parser nobody care many generic variant class take,,
1842,6970ac1cc4b2de98b0c758a0c0161e84625285c1,ascinated Box <FascinatedBox@gmail.com>, 2015-10-02 12:56:56 -0700, , prefer stdint.h inttypes.h also remove unneeded one inttypes.h includes stdint.h file really want stdint.h macro inttypes.h,,
1843,7dd6ffd9e8627ea55bd7d6240b0bcd6cf2c2f569,ascinated Box <FascinatedBox@gmail.com>, 2015-10-01 13:10:12 -0700, , move struct field join others like,,
1844,e0d8a10663959e1892b7cb9f0f23e655c838babb,ascinated Box <FascinatedBox@gmail.com>, 2015-09-30 13:21:04 -0700, , emitter remove unused top_function field,,
1845,0c39ff61398638c3d820a85ed56bb2a88da10249,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 16:51:07 -0700, , last type finally bucketed class made previously symtab root_type every type ever created linked initially pretty good idea one stop shop type stuff however great scaling one problem lot type lot relevant trying build list something would mean wading function type created far hash type tuple type etc type created placed class created all_subtypes field class struct mean searching faster done relevant type also cleaned generic done bit lookup_generic function symtab horrible look quite bit better,,
1846,6cbadfbe5150ab5f2a4a29947555bde16c496eb2,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 16:17:44 -0700, , parser charge making constructor return type,,
1847,fe58fd60bd147c012fca695ad7a832fa0bb8f469,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 16:15:11 -0700, , lily_build_type set default type,,
1848,eeb212496be569db1f511f3d7e3fe1d1ea449970,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 15:37:31 -0700, , symtab make generic lookup faster relying name size class allowed one letter long confusing class generic use information make generic lookup done possible thing generic,,
1849,5e9baf3302fdf5a6a2dabb6faed30bbf659326c1,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 15:08:53 -0700, , symtab skip alloc memcpy size definitely zero,,
1850,2d8e097c2cb4e5af7761a6446a8eacd4cd156370,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 14:58:06 -0700, , parser creates type variant take args,,
1851,5e116538120fb5f9c362a5de2ebc9a7291acc9a4,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 14:12:58 -0700, , lily_new_type make_new_type longer exported think good reason allowing non symtab module create raw type anything outside symtab use lily_build_type ensure consistency,,
1852,1a49a7d18c984dc795a59dc16fa9d7b0c2c62536,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 13:59:06 -0700, , emitter manually build type __main__,,
1853,770671c35f913b1e8dd101b9c8336158fa2884aa,ascinated Box <FascinatedBox@gmail.com>, 2015-09-29 13:53:14 -0700, , check impossible may useful one point user lookup_type heap based input type never ever pointer equal existing type,,
1854,cd1bbba086692b3084e3dade7211775868525d08,ascinated Box <FascinatedBox@gmail.com>, 2015-09-28 14:14:31 -0700, , delete absolutely useless line already,,
1855,771e50bc74c1060d03c187a6bbcc5cdf85fff8cb,ascinated Box <FascinatedBox@gmail.com>, 2015-09-28 14:10:10 -0700, , parser single line try excepts done thing last patch try except instead branch except exception clause nothing interest branch existing test changed would still fail way needed made multi line branch close early,,
1856,37aed509646449ea40534dcd50085e4b388ae2bb,ascinated Box <FascinatedBox@gmail.com>, 2015-09-28 14:01:44 -0700, , fix long standing bug nested single line consider else else branch inner branch also single line separate else branch parser used think else block inner block complain wrong correctly understands immediately finish else,,
1857,2e0e71014d336b33e1e163e01a4cc82497688f0f,ascinated Box <FascinatedBox@gmail.com>, 2015-09-27 10:44:07 -0700, , fix __file__ print latest real file lambda,,
1858,a3985d350223a60bb50a980d5b657312449e524c,ascinated Box <FascinatedBox@gmail.com>, 2015-09-27 10:37:46 -0700, , fix name test,,
1859,8d165352edae6fbc4e11ee9f5bd9e8824287db49,ascinated Box <FascinatedBox@gmail.com>, 2015-09-27 10:36:10 -0700, , print syntax error trace like regular trace,,
1860,846decc5fbf52f36c43633305515f8235c6a9704,ascinated Box <FascinatedBox@gmail.com>, 2015-09-26 13:29:19 -0700, , traceback redone also turned list string new format much easier deal wealth string function nothing work tuple string string integer also redone actual format look like mix lua ruby traceback lua took idea including call stack like know everything ruby took idea delimiter value,,
1861,1d685ec66912a15341180adea3120cbfb652c365,ascinated Box <FascinatedBox@gmail.com>, 2015-09-24 23:27:49 -0700, , generic solving fully understands contravariance may seem like change bare generic type unwrapped argument processing bare generic like already benefitted contra variance passed something complicated like ... define function ... function parameter would understand variance demand exact matching,,
1862,ec76214704e7c0848bbe2ac7b69b2615fb8e9091,ascinated Box <FascinatedBox@gmail.com>, 2015-09-24 22:48:43 -0700, , use type_matchup prop assigns fix nasty bug ... issue assigning variant type property assign would cause boxed enum really bad bare variant supposed happen could result assignment failing mentioning bare variant crashing trying show variant value,,
1863,05abf38673ab476defc397de2e0e831589592e82,ascinated Box <FascinatedBox@gmail.com>, 2015-09-22 19:26:02 -0700, , basic understanding contra variance exists added couple test two passing two failing demonstrate difference variance sorta variance woven match thus pretty much everything get however currently way specify class value either covariant contravariant come next release list hash tuple backed mutable thing passed mutated subtypes always looked invariant function parameter contravariant output considered covariant introduces new function understands variance replaces entirely consider patch step toward full recognition variance future,,
1864,b1f7526afdedcbe909f9d6da2142d21010568f3e,ascinated Box <FascinatedBox@gmail.com>, 2015-09-18 17:41:19 -0700, , check_raw static oops,,
1865,ee34d250983acc776981bb3e2cff82b7dc16a840,ascinated Box <FascinatedBox@gmail.com>, 2015-09-17 16:03:51 -0700, , doe enum membership check remove stuff emitter,,
1866,d68a825446ace8c044ec426260587b179ac47656,ascinated Box <FascinatedBox@gmail.com>, 2015-09-17 15:32:48 -0700, , lily_ts_check broken sub checker solve flag merging easier bisect case accidentally broken something,,
1867,47690360fc1438957bda15d8589a93e9bc2cce37,ascinated Box <FascinatedBox@gmail.com>, 2015-09-16 17:44:08 -0700, , use new simplified version lily_ts_match runtime solving runtime solving include verification lily_ts_match doe relies emitter done verification already thus use simpler version match,,
1868,ef9a75afc848aab4d20529e4f5bcbe1d964609e0,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 15:04:20 -0700, , site update script executable fix 134,,
1869,dec7b329beaac94fda271707383490c0f09d51b0,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 14:53:55 -0700, , site template link package wrong,,
1870,c3b4401e4479746bed95b7bf133da1fa0216d0b7,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 14:48:49 -0700, , create script make documentation update easier,,
1871,27b7af7af8e9abdca4393342a226badbcf02f138,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 14:27:02 -0700, , site add markdown file function type,,
1872,21e2c1af369632f80f58c584b2a8331d2d4e05dd,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 13:58:29 -0700, , add missing markdowns missing,,
1873,1e2a28274bf833024b639155e6fedb30ad4cc48e,ascinated Box <FascinatedBox@gmail.com>, 2015-09-14 00:36:11 -0700, , site fix reference builtin documentation,,
1874,1a887fbbb7059198f28fe47046103c382087fcd5,ascinated Box <FascinatedBox@gmail.com>, 2015-09-13 20:44:34 -0700, , delete unneeded thing markdown file,,
1875,7f3e9fc41aad9d1e97dd7844597776bd64245a0b,ascinated Box <FascinatedBox@gmail.com>, 2015-09-12 13:26:12 -0700, , remove unused test.markdown,,
1876,215d922e3d49465580d4d3739d01685ea8ced29a,ascinated Box <FascinatedBox@gmail.com>, 2015-09-12 13:22:24 -0700, , site doc need fenced code block remove print site gen,,
1877,0e906acc26969f9102163499a3b0b33b62f72aec,ascinated Box <FascinatedBox@gmail.com>, 2015-09-12 00:29:20 -0700, , add directory markdown based site documentation,,
1878,34cf4bb193f0e543385782bbbb948bd75bd76641,ascinated Box <FascinatedBox@gmail.com>, 2015-09-11 16:23:03 -0700, , forgot ensure vm_list list select reject map large list repeatedly would probably crash,,
1879,4622becf02e5f91edfc13127a415709c5a82def3,ascinated Box <FascinatedBox@gmail.com>, 2015-09-11 15:51:29 -0700, , add list map plus test,,
1880,3f267b3036c0d05a30616bd472d77877f379172f,ascinated Box <FascinatedBox@gmail.com>, 2015-09-11 00:29:54 -0700, , postgres conn new pulling argument incorrectly never fixed changed argc foreign call broken ignoring last argument given,,
1881,2e7da0a2400ae0bda710cac15f6737e72579ac2d,ascinated Box <FascinatedBox@gmail.com>, 2015-09-07 15:26:14 -0700, , assign solve left type using inference,,
1882,118f5cdf96f32898a5d072fd30a85865023ecf5c,ascinated Box <FascinatedBox@gmail.com>, 2015-09-07 15:06:40 -0700, , fix crash assign protected var,,
1883,ce6189918a310ba19fdb29307c7e1f6f916745e6,ascinated Box <FascinatedBox@gmail.com>, 2015-09-03 16:16:13 -0700, , fix potential crash something like .xyz problem dot call like variant properly marked boxing enum later call would run without boxed option redid current test check,,
1884,584af9b049fa4b8279cec00ccaac81acefec704e,ascinated Box <FascinatedBox@gmail.com>, 2015-09-03 12:53:31 -0700, , enum class variant class enums variant plan eventually extend enums think reason call enum class need distinguish say plain enums,,
1885,a79dca0af44f8019d50f028a24c2fcb3e5ac024e,ascinated Box <FascinatedBox@gmail.com>, 2015-08-30 21:30:44 -0700, , fix oops preventing bytestrings start line instead seen normal string preventing escape sequence working,,
1886,18e351cf06d0b88ae900ea5340599d584ce21876,ascinated Box <FascinatedBox@gmail.com>, 2015-08-28 17:36:42 -0700, , readme show lily feature give bullet point seems user friendly way,,
1887,3b47fd90df10051e551f3012b3a76f37a786b485,ascinated Box <FascinatedBox@gmail.com>, 2015-08-26 17:25:30 -0700, , recursionerror runtimeerror,,
1888,8475d890f41cd36d341a188ee49d6ff283af8a1f,ascinated Box <FascinatedBox@gmail.com>, 2015-08-26 16:03:34 -0700, , create list make,,
1889,68264fabc8c22355b38efd9319553196624be90e,ascinated Box <FascinatedBox@gmail.com>, 2015-08-26 15:52:24 -0700, , implement list reject opposite list select,,
1890,feca9383951c665532f62b2cd8b38efe0cbd7a94,ascinated Box <FascinatedBox@gmail.com>, 2015-08-26 15:48:02 -0700, , fix test actually validating output,,
1891,3670bd5888a8f21f3f30c1b749f71512ea6f5d3d,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 18:34:45 -0700, , implement list select internally add vm_list vm_list intended use future list apis may need create list size unknown onset list select similar ruby select return new list element match predicate given,,
1892,11e8667e1fcc8e28c03ea4bb38d50e93df20f6eb,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 18:12:44 -0700, , fix oops stack trace foreign call call depth incremented last function seen within calltrace exception,,
1893,653af003ea70c4322617579aa04cf2c870b53a98,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 17:57:50 -0700, , calltrace recent thing called nobody care,,
1894,e3a633e490897bf0bbae77858c26d3ae122653d0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 16:01:37 -0700, , allow keyword becomes value end lambda previously keyword seen value side effect allowing keywords become expression ,,
1895,d7b2cac0406214ffc020284a124f18425bf5d02e,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 15:38:51 -0700, , move api test directory sorted class plan add lot test additional mean sorting still keep class prefix make easy find test fail,,
1896,240d518070ed14b5f6aaf74dd651a42b30a7f717,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 14:52:13 -0700, , create lily_copy_value copy value use take advantage enum class type longer potentially triggering simple assignment new api create copy value give ref bump necessary builtin list tuple creation well list fill based information adjustment made thing repeatedly setting list count pas,,
1897,ac41c24bc7a67d313fe5919f04336a2e66eec68a,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 14:21:15 -0700, , doe need state also update comment,,
1898,e47f07a742130d59e33a8ee8500233372cd668ff,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 14:09:35 -0700, , simplify function dynaloading part describes type function need specify function already obvious dyna_function name needed since already provided anything provide name twice leaf potential issue later accidentally match result smaller dynaload string,,
1899,91a12a01966ac775cac4a2e04d5a34195cf8a8b7,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 00:46:58 -0700, , fix test relying whoop,,
1900,c1828fbe1150c1655e699a3f396ee86beb30fb01,ascinated Box <FascinatedBox@gmail.com>, 2015-08-25 00:39:20 -0700, , doe need take state,,
1901,5c922d106b4bc5aea3959c5207e9f79725c2f5e2,ascinated Box <FascinatedBox@gmail.com>, 2015-08-24 13:14:04 -0700, , longer class unnecessary since fixing behavior type enum class,,
1902,a5eeb9897fc57958594aef48ae87e3bc12de8919,ascinated Box <FascinatedBox@gmail.com>, 2015-08-22 14:11:41 -0700, , foreign call register type fixing cached longer need fix register type every time previously bizarre behavior type enums fixed save tiny bit time nice,,
1903,cd28ac5daec3270fd9a23492d2e4bf695fdfa19a,ascinated Box <FascinatedBox@gmail.com>, 2015-08-22 02:42:51 -0700, , stop weirdness enum class value since beginning introduction least far remember back without looking log type worked peculiar way value type start nil initialized first assigned value new assignment write inner value later enum class added really disguise problem currently possible cache multiple invocation foreign call register first run function enum class create new value second subsequent run use old value write place causing sadness bad something going assigned enum class boxed first made new opcode o_box_assign doe bonus simpler longer check enum class value thing needed hit emitter work one nice issue found list hash asking box thing type already lambda eval explicitly box variant type longer automatic variant enum promotion anymore,,
1904,851fc258efa5ca2176b8d87f7a4d3f0c18f0c9a6,ascinated Box <FascinatedBox@gmail.com>, 2015-08-21 19:57:34 -0700, , fix various issue string htmlencode add test,,
1905,209fbddff63dd08b7d754e15a78f5c860ebf1e80,ascinated Box <FascinatedBox@gmail.com>, 2015-08-19 14:37:09 -0700, , fix oops causing show circular value hang,,
1906,42409c03e8de1d00bf4267a0b547d6b23ce1e214,ascinated Box <FascinatedBox@gmail.com>, 2015-08-19 14:32:51 -0700, , break postgres whoop,,
1907,dca46da6413bc8c1282fd0ba3f4e59a23cc4c33b,ascinated Box <FascinatedBox@gmail.com>, 2015-08-19 14:19:50 -0700,129, printfmt string format allow value step toward 129 calling allows anything converted something string like however allow custom to_s method defined class print take doe file write test basic stringification added api test,,
1908,9b0a3bc9fb8192218df10cb635a73713085d38aa,ascinated Box <FascinatedBox@gmail.com>, 2015-08-18 22:23:56 -0700, , prevent inheriting built class like postgre,,
1909,c57e62be65d4f256c70fd543a3fa635d6367d8b7,ascinated Box <FascinatedBox@gmail.com>, 2015-08-18 22:16:53 -0700, , allow inheriting class different package,,
1910,8dd78a9c2db622ae4c07ed6d9c36cdbf0022cf24,ascinated Box <FascinatedBox@gmail.com>, 2015-08-18 22:09:47 -0700, , forbid inheriting variant class,,
1911,6f0fc78924fb0eecff6ad99ad024b395de117088,ascinated Box <FascinatedBox@gmail.com>, 2015-08-16 12:07:59 -0700, , create block barrier enum class class import prevents issue say trying import within class trying import within function,,
1912,77590e8c49554f9c53989c375e1e45ea06136167,ascinated Box <FascinatedBox@gmail.com>, 2015-08-15 20:09:15 -0700, , prevent import except top level,,
1913,6b362e172e8d1873c85a223fff5ff81bbc8f97b3,ascinated Box <FascinatedBox@gmail.com>, 2015-08-15 14:32:01 -0700, , fix bug long tuples would cause invalid read,,
1914,363eb8927106aaa6a484664b17f3dbaa712d8389,ascinated Box <FascinatedBox@gmail.com>, 2015-08-15 12:32:31 -0700, , fix double wrap oops closure previously emitter would take something like mark upvalue closed twice would result first properly attached upvalue second attached anything thus would always return second would wrapped would happen seeing open upvalue twice var would work fine making even stranger work assuming upvalue could closed working accordingly,,
1915,2d0f22937c06f708b69e41d97cd99b7b9bdb69a9,ascinated Box <FascinatedBox@gmail.com>, 2015-08-15 00:20:30 -0700, , allow boolean value,,
1916,58e4be91463f509ed3e9b9d0a8876e1fe360fbf0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-14 23:53:39 -0700, , back per block loop start idea loop start per emitter great ... except place loop start actually saved using code_start actually lie worked tried nested loop exit jump outer loop would set loop code_start likely zero nested loop within __main__ would infinitely jump back start __main__ yeah pretty bad add test make sure come back,,
1917,1bb17fb2a3cd710a58608da816f8d922a6856d3d,ascinated Box <FascinatedBox@gmail.com>, 2015-08-14 18:16:54 -0700, , create list fill associated test required exporting add_gc_item exposing new newly made list entry need,,
1918,98f3ac932d360b3884aa8e8d143622c2e78b53ee,ascinated Box <FascinatedBox@gmail.com>, 2015-08-14 18:09:46 -0700, , use list build also,,
1919,3d49b591cd34724a039aa9f2efe83927421724d1,ascinated Box <FascinatedBox@gmail.com>, 2015-08-14 18:02:12 -0700, , small optimization building list tuples,,
1920,f78fa5b5d34d31df74fe84d0e095866be5f335ae,ascinated Box <FascinatedBox@gmail.com>, 2015-08-13 13:07:21 -0700, , static access found stop,,
1921,622688fed626ab4d29321094dbd50ec536bb021a,ascinated Box <FascinatedBox@gmail.com>, 2015-08-12 17:37:54 -0700, , allow derived class typecast base class,,
1922,b7135d578aa53045858aa1972fb94be907eda62b,ascinated Box <FascinatedBox@gmail.com>, 2015-08-12 17:23:05 -0700, , lambda finally support multiple statement inside fix 111,,
1923,2a7d4bd614703a5fd0596406f30456c686f489c7,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 17:20:49 -0700, , possible catch exception include generic allows thing like except myerror might regret later sound really cool also done slight change instance used true_class changed true_type mean instance accurate hold seemed sensible implementing better exception catching,,
1924,d176d42577e6512ba6bbef35d4d4e41d0ef795a0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 16:50:06 -0700, , custom exception add field work previously trying throw exception custom field would fail internal stuff done wrong trying access field would cause segfault,,
1925,aa17e4ac00c82af358dd211a44d980e88bf2f1a0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 16:18:39 -0700, , exception traceback type cached,,
1926,fd74da17fd386c4f4e3f1e35dd5a82d522d807bf,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 16:16:35 -0700, , fix calltrace exception catch leaking caused transition call stack array linked list fair amount time ago,,
1927,7b92075d2198069c5a1a73a81655ca409d0db692,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 16:10:16 -0700, , please stop setting value directly bad use lily_move_value instead since flag value primitive need done cause ... problem related booleans introduced back lot ,,
1928,efea40f2a899049acaff928485ff819e29fcf74e,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 15:25:26 -0700, , parser make sure except var created right scope,,
1929,8ea8d1c682e48a55ca12f2046b18a814c86574aa,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 14:08:10 -0700, , remove incorrect comment write test,,
1930,f628753dbef5881be1e8bf6fd0ad847dc37043fe,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 14:07:33 -0700, , simplify little bit,,
1931,eb6c7270ffe4d80b8f28691a75496b82b2a4980d,ascinated Box <FascinatedBox@gmail.com>, 2015-08-11 13:19:47 -0700, , finally boolean class fix 125 begin add two new keywords true false mapped yield back literal boolean type also mean value assigned since literal string class api changed notably one push back boolean value instead integer one comparison operation yield back boolean result instead integer one admit boolean bit hacky placement written string bytestring internally likely fix later add byte class finally boolean class two method to_i conversion integer to_s conversion string also updated show display boolean value,,
1932,a54dd52916de7542a09a396e52a6e19d294dfea0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-10 14:31:14 -0700, , ignore cmake related stuff,,
1933,a58fbf66a85b99915300d5a63cc00c4c9e41b5c6,ascinated Box <FascinatedBox@gmail.com>, 2015-08-09 10:41:37 -0700, , allow enum class member function variant value,,
1934,c271e236a296749912d489ac39af3a860ac1f955,ascinated Box <FascinatedBox@gmail.com>, 2015-08-06 17:38:18 -0700, ," awesome call piping finally added fix 105 caveat one pipe lambda lily inference information requires considerable effort fix piping precedence bitwise operation comparison ops may change later given suitable reason piping automatically work dot access like stuff mean 1,2,3 .append work exactly target class method injection self get triggered function called normally",,
1935,05b8b11a4a8db98d7f41c03d53dbe1f21afd0060,ascinated Box <FascinatedBox@gmail.com>, 2015-08-05 16:04:26 -0700, , emitter make function injecting first type simplify bit make call piping easier implement since need emulate automatically injecting value x.y self case,,
1936,f66420a26eee0ef10a6daf2accb6e4c3fdfcd65a,ascinated Box <FascinatedBox@gmail.com>, 2015-08-05 14:47:14 -0700, , begin end call handle adjusting instead caller,,
1937,6aab4b177e35e8465beb0864850ae80c9d1e5c3f,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 18:56:42 -0700, , prevent foreign call allowing call depth wrap around,,
1938,ab6b796a027eb46470f4218c9dcdcfbe8ca7a506,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 17:00:04 -0700,115, enforce lily start fix 115,,
1939,441ce7cde5d952d459dd535cbae48ad7365e9d44,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 16:35:08 -0700, , fix weird message able load first file file builtin line printed end seems totally bizarre say file opened,,
1940,e258b6d39966f8e2df5eaac2e7380c98ce1f71e0,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:47:30 -0700, , add forgotten test case hash each_pair,,
1941,2c37b43e346fc36759d2a49aee3e3e848cc78e49,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:46:09 -0700, , string split default using,,
1942,28229df4198f3ebb41fe3bb109754e74da7716bf,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:39:31 -0700, , fix leak string split empty split string,,
1943,69a8b0a6c0f9c7b30477a31d96c09084c9539054,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:33:30 -0700, , implement hash each_pair fix include guard exception like ruby however also way remove element hash yet currently necessary,,
1944,56f3ed4d55a0830afbf416dbb7105922b2a3d98b,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:12:54 -0700, , better packing struct,,
1945,8cf099db8621a55d248c8f3902e38a0b04c79c9c,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 15:02:57 -0700, , multiple jump level fix 121 interpreter able handle exception come foreign function allow foreign function catch exception within something dispatched foreign function lily internal api shuffled bit raiser hold multiple jump level instead exactly may lead slight increase memory usage sadly,,
1946,5756e34b2a201a5fc86718aff7319e690ccd453f,ascinated Box <FascinatedBox@gmail.com>, 2015-08-04 14:55:24 -0700, , fix oops causing function unable catch error,,
1947,9b45c51bd215c7269349169a20380b92f0f44c23,ascinated Box <FascinatedBox@gmail.com>, 2015-08-03 15:25:06 -0700, , private protected finally fix,,
1948,a639f3cbc3e0dbc53bf777a56a5e2dc73335b288,ascinated Box <FascinatedBox@gmail.com>, 2015-08-03 14:52:28 -0700, , always statically accessed,,
1949,b5335e70dfc7e531afd774334e4e745f654bbe71,ascinated Box <FascinatedBox@gmail.com>, 2015-08-01 13:52:14 -0700, , val_is_literal plan add protected private keywords soon think could cause confusion best remove chance,,
1950,11d3c2345e968f997dc8a1a664a02c3086459d3c,ascinated Box <FascinatedBox@gmail.com>, 2015-08-01 01:41:33 -0700, , simplify var declaration little,,
1951,24452be04a8f3edacb218f9f19e822499dd53a1c,ascinated Box <FascinatedBox@gmail.com>, 2015-07-31 20:31:02 -0700, , prevent closing var certain case ... defined function generic could closed var another defined function generic well case possible crash one define solved something another define might add scoping generic later would fix gated prevent potential segfault,,
1952,d1fc3e42642c334d92358c45f04daf90bfff03ec,ascinated Box <FascinatedBox@gmail.com>, 2015-07-31 17:55:10 -0700, , remove unused thing,,
1953,c7638604c9de47187fa19edf6c161304c4d7cee7,ascinated Box <FascinatedBox@gmail.com>, 2015-07-31 16:16:11 -0700, , create string to_i currently assumes base plan eventually expand allow base besides decimal huge step forward lily currently way make string integer,,
1954,b2fca0768db62c54f16d7cb7fe42e5bce3630a36,ascinated Box <FascinatedBox@gmail.com>, 2015-07-31 14:28:07 -0700, , enum declaration longer need comma variant case brace make obvious enum class begin end also obvious type expression like entity inside enum class type member declaration ambiguity caused removing comma doe make slightly terser syntax like,,
1955,8683cc6c48f2c07e27ed7e958df5031a1b167e8a,ascinated Box <FascinatedBox@gmail.com>, 2015-07-29 13:48:29 -0700, , trying inherit enum class also removed busted inheritance logic new absent enum class diving block silly user make nested class anymore,,
1956,6fb5275e8ad31fdc7a0ca59a679e21012e4a8e6f,ascinated Box <FascinatedBox@gmail.com>, 2015-07-28 17:14:38 -0700, , base class assigned derived class value,,
1957,995f10a67e5cd500fc5b4cb980a7f05ba14785b8,ascinated Box <FascinatedBox@gmail.com>, 2015-07-28 14:37:04 -0700, , inject self base method base method derived class two thing intertwined would silly come separately first base class method derived class would inject self calling would cause fail unless use static call second derived class could call base method without using static access possible,,
1958,b32d02f691574e5e3cbc70f9f117888744351e94,ascinated Box <FascinatedBox@gmail.com>, 2015-07-28 14:08:06 -0700, , ,,
1959,46890f5efa3ec695cd89641e8590b79995dcc0e2,ascinated Box <FascinatedBox@gmail.com>, 2015-07-28 13:36:15 -0700, , base class method statically called derived value,,
1960,81904c1c7fba91f6c64a6b7259b475527e6efbe6,ascinated Box <FascinatedBox@gmail.com>, 2015-07-27 13:01:50 -0700, ,  also shove seems better fit symtab,,
1961,331c7211aea38e0649437b9bdd0dd6895f974e5b,ascinated Box <FascinatedBox@gmail.com>, 2015-07-26 01:24:41 -0700, , clause bsd license,,
1962,a76b07209dad03689115863a9b0430c4745bb68e,ascinated Box <FascinatedBox@gmail.com>, 2015-07-26 00:38:35 -0700, , lambda apply nifty feature inspired seeing scala rust small thing help cut away unnecessary parenthesis simplify thing,,
1963,1cf098c6179de3102cf54b81756a22182a848671,ascinated Box <FascinatedBox@gmail.com>, 2015-07-23 15:04:22 -0700, , class level function enum class finally fix,,
1964,7247bd2caaa0e457cc5898a9964e5be68d1c2fee,ascinated Box <FascinatedBox@gmail.com>, 2015-07-22 15:48:48 -0700, , longer take flag always,,
1965,f9c102faea6e0475db2da3a0f99857468bec48f8,ascinated Box <FascinatedBox@gmail.com>, 2015-07-22 15:35:59 -0700, , variable try available except lily like variable initialized variable try clause guaranteed initialize ban,,
1966,c02178185953e8e870673df188fa1ff81f1e9a6d,ascinated Box <FascinatedBox@gmail.com>, 2015-07-22 15:23:48 -0700, , internal remove lambda_depth use block_type block_lambda instead,,
1967,0e965ccf81a46d58c90d703be718e21ce2a4eb49,ascinated Box <FascinatedBox@gmail.com>, 2015-07-22 15:12:24 -0700, , internal block class_entry bubble fixing problem causing class method created without marking part given class since convenience printing later used deciding something class method easily missed simplicity emit current_class gone class information tracked block bubble upward two problem corrects dynaload within class method would interrupt current class causing anything inject self error raised non new class method would class name printed resulting incorrect seeming traceback,,
1968,26dd838dcf1afe410ac95b0e40bb8b629dcf2f12,ascinated Box <FascinatedBox@gmail.com>, 2015-07-22 14:06:30 -0700, , nothing used lily_block closed_start remove,,
1969,037c46a4bc7ee01891f930cbb43b9dc638128a3a,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 23:34:29 -0700, , emitter create function value needed ... ... instead creating within block letting linger reason code one large chunk doled function close also fix function tied wherein tie would wrong type sure would bug think tie normal assign fixed,,
1970,5107db85294eb785f89ff38181c590994bdfd23d,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 22:01:58 -0700, , simplify updating function block emitter want type self instead passing class emitter dig around get pas self going,,
1971,7e28b95a2345819c3b5c076742078eb162696459,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 17:23:55 -0700, , raiser msgbuf need lily_options,,
1972,5697b1bf779c1df1a9e48ee3dff60a4a07a8d0aa,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 17:15:55 -0700, , prevent return anywhere within class constructor block previous way check exactly within new allowed return self mean bypassing check,,
1973,d69a7411aaf5faf18f6743fb50783a054ba66cdd,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 16:06:49 -0700, , var var segfault,,
1974,02266e725cd52fc15ad30a3281a21caaa3dc28b4,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 15:52:30 -0700, , fix subtle nasty corruption bug extremely mad two reason one knew bug consider important two spent two hour chasing turned core level problem beginning type system say generic seen ceiling great function take generic reason allocate slot save generic extremely subtle bug emitter call handling would call ceiling raise begin call eval call would happen ceiling call dynaloaded something generic like list append corruption something generic ceiling get smashed type system broken becomes possible silently worse bad ... raise ceiling beginning call ceiling raised dynaload done add test never want coming back,,
1975,02045538ee534a4d3e67b17e0f0aea7cb8598988,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 13:05:33 -0700, , add test last commit,,
1976,70baeef5dc18b9e6b48731b0b889cc21693b8ee9,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 12:59:20 -0700, , allow static method within class fix 123,,
1977,22dae0e3376f0e3454531ee61d753e44ccd6d4e3,ascinated Box <FascinatedBox@gmail.com>, 2015-07-21 12:23:01 -0700, , parser organize little bit,,
1978,0ba383b3a7b6ace5d4efb8894902af63bdd72922,ascinated Box <FascinatedBox@gmail.com>, 2015-07-20 17:28:23 -0700, , string split finally landed fix 117,,
1979,7a783fa557e8b15beb25aff51987f63b60c2423c,ascinated Box <FascinatedBox@gmail.com>, 2015-07-16 14:56:03 -0700,122, o_new_instance fully pull caller value fix 122 increasing refcount dangerous leaving value marked nil flat wrong fix technically 122 fixed prior commit ignore nil show fix coming nil,,
1980,59f3ab8fd8cdf12a04bc45cbc02640f4b62dcf50,ascinated Box <FascinatedBox@gmail.com>, 2015-07-16 14:34:33 -0700, , debug user value nil anymore remove check back enum class put allowed option able,,
1981,22f5464a0fe3cef23c9a2d5d336a22957e6c3602,ascinated Box <FascinatedBox@gmail.com>, 2015-07-16 13:26:12 -0700, , move test right place,,
1982,c0613c039922c16703ef65ddf19e69bcb31e1d11,ascinated Box <FascinatedBox@gmail.com>, 2015-07-16 13:20:59 -0700, , fix segfault using self non method block fix regression ago put closure made block self start null caused block within method self thus segfault trying get property,,
1983,21d9f2fb6c11210de10b54a58af23835f86da55f,ascinated Box <FascinatedBox@gmail.com>, 2015-07-15 16:15:03 -0700, , idiot stdin mode stdout mode,,
1984,b0b6ad40b0aa311c5ae7f678cf00bf423c1a11c6,ascinated Box <FascinatedBox@gmail.com>, 2015-07-15 15:24:57 -0700, , fix segfault exception repeatedly caught nothing complicated number register scaled back,,
1985,2952a3d006d606d2f8aafe762f9c48a516e7d071,ascinated Box <FascinatedBox@gmail.com>, 2015-07-15 15:07:41 -0700, , mention import repo readme,,
1986,99146d0b96d7cc13c69b893369967aaa627fdb5c,ascinated Box <FascinatedBox@gmail.com>, 2015-07-14 17:45:09 -0700, , string subscripted fix want one bug birthday anyway pretty straightforward require utf information present lily string work positive negative index,,
1987,07e806c9e5e429970df4732615f71f99b9ec8e76,ascinated Box <FascinatedBox@gmail.com>, 2015-07-14 13:40:32 -0700, , greatly improve return handling finally fix 113 previously function claimed return value absolutely return end technically work annoying also block one feature class level function enum class thus axe grind elif else try except match keep track branch actually exit case elif else must else clause possible try except need catch exception branch exit block exit information bubble upward raising value returning considered thing exit also added dead code check return raise seemed like nice thing add try except report problem except clause except exception doe trap duplicate case silly one though,,
1988,99a823e7c338c237a992806790a205cde9ccb6b6,ascinated Box <FascinatedBox@gmail.com>, 2015-07-13 13:47:40 -0700, , block defined using enum instead bitflags nothing bitflags bitflags seem like right thing something largely exclusive group allows block type take space something soon make use ,,
1989,cac0bcc013bb47711105e9eca02c043424ad4d93,ascinated Box <FascinatedBox@gmail.com>, 2015-07-13 13:47:05 -0700, , emitter unused remove,,
1990,4212fd27f1156b209794c2c6564c8d0b5181d357,ascinated Box <FascinatedBox@gmail.com>, 2015-07-13 01:05:21 -0700, , yeah nested class declaration still wrong oops,,
1991,3d6ad261cdcedfa5024d369abd497f3e6f8974e6,ascinated Box <FascinatedBox@gmail.com>, 2015-07-12 21:21:40 -0700, , fix detection closing property tree property tree left side importantly semicolon belong,,
1992,8283e87d20f4935ae01c58282aa678bb44d899aa,ascinated Box <FascinatedBox@gmail.com>, 2015-07-10 16:57:35 -0700, , remove prototype non existent function,,
1993,c16b31d871b87379465f647fcd526ea8e7b715bf,ascinated Box <FascinatedBox@gmail.com>, 2015-07-10 16:51:36 -0700, , lambda return value caller want,,
1994,45d247f09ac4eb8f326a09b192dc9bf3e04fd90d,ascinated Box <FascinatedBox@gmail.com>, 2015-07-08 16:06:50 -0700, , foreign function stable fix 118,,
1995,4e059a0b06440fc5b19c296df8948b40db094c95,ascinated Box <FascinatedBox@gmail.com>, 2015-07-07 22:00:08 -0700, , simplify prep_registers related function,,
1996,b5d15a374091a8e0f9f0483538a9486ede04a5a7,ascinated Box <FascinatedBox@gmail.com>, 2015-07-07 16:23:17 -0700, , foreign function call foreign function,,
1997,66b77afa0f6b6a17e534d91720e7ad6f64b09cf4,ascinated Box <FascinatedBox@gmail.com>, 2015-07-07 14:57:03 -0700, , foreign function return instead argc necessary simplifying foreign function eventually call foreign function,,
1998,02efa5dd97a096421521dbd693d142dd97592a2b,ascinated Box <FascinatedBox@gmail.com>, 2015-07-07 14:10:06 -0700, , prototype fix builtin function get argc arg self,,
1999,08ae130f233da1704934e73a1825073fc3b6f8a0,ascinated Box <FascinatedBox@gmail.com>, 2015-07-06 17:41:48 -0700, , create new va_args note broke currently doe nearly exactly old foreign call api thus broke reason fix thing commits coming new api tolerate forign call call storage inside call need solving,,
2000,f4243213e60fa234ea8aaf910124a5b7f7326d33,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 14:55:57 -0700, , emitter prevent invalid read recent commit whoop,,
2001,d445ebee25715f9f3c5c1c6eff1fd7b7d328967f,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 14:54:39 -0700, , symtab simplify teardown fair amount,,
2002,9a59a453a4a356214cde1aa3767a1a8f7a4ab385,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 14:43:39 -0700, , symtab generic_pos set non generic anymore,,
2003,0f5f54792d0669d688a94dbe2389a46a808f7872,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 14:34:02 -0700, , arbitrarily skip first type type lookup pretty sure wrong likely relic year ago parser would stupidly create type check unique,,
2004,6b2c25604846e56b6d6ed348551c67e05dfdc3cf,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 14:28:06 -0700, , emitter figure,,
2005,9cfdaacac6aab889bc186136e17be25dbb4fa561,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 13:53:37 -0700, , allow outside block within import,,
2006,812d3504a980e2c93cecfc8bf1a899cf4a3861a3,ascinated Box <FascinatedBox@gmail.com>, 2015-07-01 13:38:15 -0700, , input loop marked output,,
2007,18abc3748269d7728c8041d907cb6f04892497e8,ascinated Box <FascinatedBox@gmail.com>, 2015-06-26 21:29:37 -0700, , fix invalid read __main__ small dynaload,,
2008,55bc9751e6974df6eefdec56e81ba3c07a6da6ed,ascinated Box <FascinatedBox@gmail.com>, 2015-06-26 14:14:57 -0700, , method dynaloads right scope postgre fix 100 first thing method dynaloads fixed make postgre function prototype dynaload class need came conn class query look like query conn string list string result posed problem result needed immediately dynaloaded within right scope work postgre basic api conn new create new connection conn query run query replacing value result fetchrow fetch next row result set much least lily sort basic conversation postgre,,
2009,e3d6f16a40fbfb71b74fbcef8a350675f1f72e15,ascinated Box <FascinatedBox@gmail.com>, 2015-06-25 17:40:48 -0700, , negative subscript list,,
2010,05f402e9cb814a2419f08d46ba53a06c8b93c763,ascinated Box <FascinatedBox@gmail.com>, 2015-06-24 14:52:14 -0700, , ... path shallow copy lex label ... need deep copy ... bad thing happen otherwise quite surprised caught yeah feel bit shame,,
2011,eb6deddcbeb68766ecdbe7eb5854d207217d44a6,ascinated Box <FascinatedBox@gmail.com>, 2015-06-24 14:44:31 -0700, , parser strlen right thing,,
2012,2d7983ea4540120bcf106628f11e6573bb5d9fb2,ascinated Box <FascinatedBox@gmail.com>, 2015-06-24 12:35:15 -0700, , huge rewrite var class rewriting outward change though symtab creates raw var let emitter set emitter provides set var creation helper function specific kind initialization reg_spot setting done solely emitter instead mostly symtab partly emitter emitter creates __main__ set awesome though symtab longer hold var_chain class_chain use active import version instead fact lily import multiple section var class scattered throughout core lily parser change import targetted simply parser symtab active_import simplification removal lily_set_import make easier dynaload thing specific scope second part core reason commit postgre need dynaload resolve within scope postgre stuff,,
2013,1af109b2fd133f731b1b46bb00c8320d92c39223,ascinated Box <FascinatedBox@gmail.com>, 2015-06-23 14:11:54 -0700, , function hold import make possible function defined within foreign loaded module raise exception may may dynaloaded dynaloaded exception information tied appropriate module nothing right something think part getting work making symtab put module thing declared within function value instead path allows determine module function belongs thus associate dynaloaded exception module,,
2014,482213ca2a09c88b48915f138e7f2a0afd78ffdd,ascinated Box <FascinatedBox@gmail.com>, 2015-06-23 14:01:48 -0700, , msgbuf const char char,,
2015,5b56eb20d6f1511aed62ae1e3dedad3d1a9e19e8,ascinated Box <FascinatedBox@gmail.com>, 2015-06-22 17:17:54 -0700, , build exception information totally necessary real reason exception information built turn necessary besides thrown exception stack put inside event thing get caught sound weird,,
2016,ed7e305550c5a1ffe8620fdf83b469991be2330b,ascinated Box <FascinatedBox@gmail.com>, 2015-06-22 15:51:00 -0700, , parser process class dynaloads along rest,,
2017,3048c5731df6d7ac68e0a37309602ee32103a202,ascinated Box <FascinatedBox@gmail.com>, 2015-06-21 21:21:24 -0700, , add wall make wall show warning,,
2018,5a74e3917c5624c61b44e68848df1de644c6109a,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 18:54:19 -0700, , register grows done double fix 114 quite bit faster growing double prevent bunch grows tiny amount size marking closed still fair amount speed squeeze however want focus thing,,
2019,c525cd1ba826d24f4372382cdb253d5b94169c7f,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 18:20:11 -0700, , add debug build option includes,,
2020,f689fe4142f51d8c8fd2f981d65d2625c7ab7855,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 18:02:47 -0700, , string_data unused unfreed remove,,
2021,f0e624217634b4d6121a41c745271a6485a4542c,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 17:38:30 -0700, , fix oops cause call frame leaked,,
2022,202b5488a828681d6eba45d85adb3fe78430e113,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 17:21:45 -0700, , simplify one flag needed prevent deref set value ... need set value initially setting register register always start nil value never used nil ness set upon also fixed issue list append function undoing val_is_nil pas completely however integer big integer refcounted instead lily_move_value used right thing,,
2023,d0ada600e549f0d7510360841e29048f83680f8b,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 15:16:52 -0700, , greatly simplify do_box_assign enum class assign case nil containing nil value possible since lily started requiring value assignment,,
2024,05b232c7edcaa9ff54dfcd453c80f9cfffd74031,ascinated Box <FascinatedBox@gmail.com>, 2015-06-19 15:02:43 -0700, , function stack linked list catching call stack array grew double long time ago alright finally replaced proper linked list changed name lily_call_frame like change name redesign stuff part catch entry hold far given frame vm_regs away regs_from_main exception stack unwind would easier stored far away main figure stuff side note old exception handling code lovely subtle little bug always ignored first frame unwind since first frame never get regs_used adjustment happens frame longer recent however exception handling would unwind two frame run exception unwind two frame one frame would get adjust leading nasty time trying debug,,
2025,2251fb0ab58fc4a8298613393a3eba114baf027d,ascinated Box <FascinatedBox@gmail.com>, 2015-06-16 21:07:47 -0700, , deref reason access class information fact bad idea type set case,,
2026,f872a80c600cf3d48869a4e7d8b158a5d22666fb,ascinated Box <FascinatedBox@gmail.com>, 2015-06-16 20:23:47 -0700, , use build_value saner consistent way call build_value stored stack entry called function pull info parent previously done call storing information callee,,
2027,df694b945dc451689e678a68550d19281e8b3ca6,ascinated Box <FascinatedBox@gmail.com>, 2015-06-16 15:42:25 -0700, , fix loop jump o_jump_if patching hope end,,
2028,0d4795148f34670f0d45aae28d2a858dae14a255,ascinated Box <FascinatedBox@gmail.com>, 2015-06-16 12:04:28 -0700, , symtab flag class primitive part trying squeeze performance symtab responsible tagging class primitive refcounted allows test something derefed flag supercedes checking either pyrotected nil primitive flag operation adjusted set instead taking away nility far performance rudimentary benchmark ran showed integer double speed wise string stuff refcountable run much faster,,
2029,19045382876a215aa4ce45d49e9d6aeded243f18,ascinated Box <FascinatedBox@gmail.com>, 2015-06-15 13:44:54 -0700, , long last closure landed finally fix closure work pretty much ... probably expect close something higher scope regardless class another function done creating copy function entry closure container shallow copy function get shared closure container shallow copy function using closure scope one ref container mentally seems ok. backing stuff function tagged maybe circular affect much lambda able refer self using closure self put closure need class method still used via refer class parameter upvalues case self take closure inside added test closure verified leak valgrind,,
2030,e30d02b5c6e8882e0a1fbc0249e1b8cb2e8c2f2a,ascinated Box <FascinatedBox@gmail.com>, 2015-06-15 13:35:41 -0700, , allow regular argument optional one,,
2031,140c9a8c24d0d97c392ea08bc47faeb4bde753d4,ascinated Box <FascinatedBox@gmail.com>, 2015-06-15 13:20:07 -0700, , properly decompose multiple value without next tok call get_named_var operate last label seen report something redeclared,,
2032,9c76d098cea49379488851cdcde31f025c9359ba,ascinated Box <FascinatedBox@gmail.com>, 2015-06-12 20:08:41 -0700, , optarg emit writes literal chunk register chunk used interleave closure code need walk output every opcode except optarg setup writes output end always together make optarg setup consistent everything else thus making closure code lot simpler,,
2033,c07c6745a08f4b43884ac4fb21cb9974ab89835f,ascinated Box <FascinatedBox@gmail.com>, 2015-06-11 17:14:06 -0700, , break jump patching turn emit patch get adjusted code buffer position doe patch wrong place since patching done adjusting test added crash jump broke caught many many test operate global space instead within function often need make function quick test,,
2034,6c62713cd07efef8c9c449cbe981dfb76375bcef,ascinated Box <FascinatedBox@gmail.com>, 2015-06-09 12:39:38 -0700, , parser blindly assume thing class method whoop,,
2035,a7fcb8862a2d3152c6cde247d0173f414a94af1e,ascinated Box <FascinatedBox@gmail.com>, 2015-06-05 17:03:55 -0700, , add missing return statement whoop,,
2036,84019e37c5a10fb6c9fe9548c7af73cc1f0455eb,ascinated Box <FascinatedBox@gmail.com>, 2015-06-04 09:40:56 -0700, , user declared nested class longer allowed like thought taking away feature however done different reason nested class default public mostly happenstance worked allowing public nested class make difficult print trace actual logic done implement see usefulness importantly closure would work nested public class lily case reason lily allows access class method using abc method bypass constructor closure still work simply unpack closure self class throw public nested class toss wrench thing abc def amethod amethod supposed close abc var never saw var constructor bypassed rather like feature much nestable class take note logic storing class still within emitter block intentional allows dynaload stuff fire time includes class,,
2037,25e09f85835a238bac933c53f4ac188b84e7d254,ascinated Box <FascinatedBox@gmail.com>, 2015-06-02 11:00:32 -0700, , remove invalid comment alloc failure aft,,
2038,5c45c865649639bb89915127dc47cc7c1c16ae76,ascinated Box <FascinatedBox@gmail.com>, 2015-06-02 10:49:03 -0700, , loop start stored emitter longer per block checked refreshing loop block exit,,
2039,57083db8354085c10fa4bba5d3be785b79a829f1,ascinated Box <FascinatedBox@gmail.com>, 2015-06-02 10:05:11 -0700, , remove impossible check within leave_function,,
2040,6199f1db23c9c7520226f9e45c40dea9665c22b1,ascinated Box <FascinatedBox@gmail.com>, 2015-06-01 13:13:19 -0700, , refactor oo_access weird bugfix oo_access would either result defined function set result property dumped storage actually bug defined function ever returned result loaded register attempting subscript assign dot loaded method crash also includes refactoring begin_call take tree caller figure thing suitable new feature mind refactoring make easier property getter setter function later,,
2041,f7bc266a36976a66678f68399dd8e936b2b5e634,ascinated Box <FascinatedBox@gmail.com>, 2015-06-01 11:48:42 -0700, , try allocation,,
2042,42f01ac9ae029cb93cbaa1b80895099f340fe87c,ascinated Box <FascinatedBox@gmail.com>, 2015-06-01 11:40:28 -0700, , try_add_storage add_storage,,
2043,acbc6fde9896a4b5fc152d4bf07f57d5700e6553,ascinated Box <FascinatedBox@gmail.com>, 2015-06-01 11:15:42 -0700, , ast original_sym ast sym,,
2044,91657c369c0a0c65d4d90fb541c83c08176769cd,ascinated Box <FascinatedBox@gmail.com>, 2015-05-31 16:31:40 -0700, , remove stashed_tree hack ast,,
2045,24cc1b403b4dae54f6691820a9600cef925976ef,ascinated Box <FascinatedBox@gmail.com>, 2015-05-29 22:33:47 -0700, , finally call longer damage tree super huge emitter evaluated call said call free reign adjust tree state one important thing would tree type tree_oo_access arg_start result arg_start arg_start result tree needed varargs patched also self needed set argument replaced value self becoming awful time call put value buffer sort like patch pretty much everything emitter get buffer starting position new call state added tossed around contains everything something might need know call bug fixed preparing __main__ intepreter would potential crash __main__ bytecode aligned power two pretty wide say 128 spot big,,
2046,277d2bb6e04694119245b668febf1ae985b6a176,ascinated Box <FascinatedBox@gmail.com>, 2015-05-28 17:19:43 -0700, , emitter call eval item adjusting ast result step toward making call adjust ast result numerous thing want many held back call modifying stuff bit rough around edge since property access still bit weird however make call failure look item thing called mean determining sort error message print also adjusted field within lily_ast condense similar stuff realize many pusher ast condensed however certain want condense one call requires tree type yet seems kinda ugly outward change however added test make sure property access wrong args call supported since see test external change doe set stage nice thing,,
2047,418aa938827439c5e2a81356c7d7a876040847f3,ascinated Box <FascinatedBox@gmail.com>, 2015-05-28 15:03:13 -0700, , create lily_item simplify flag within lily_core_types lily_item serve superset class whatever sym superset allow tidying couple different area lily_prop_entry lily_sym superset allow future refactoring finally flag within adjusted cause overlap item superset thing also simplified refactoring done yet,,
2048,b42465020e8d624a0bcac9fb36975f7994ca8402,ascinated Box <FascinatedBox@gmail.com>, 2015-05-28 14:14:39 -0700, , symtab function tie need val_is_readonly ignored o_get_readonly load value directly instead using literal always really simple,,
2049,2f0ef0f2b8e31bd1e7cc48147bd57dda5d9bea53,ascinated Box <FascinatedBox@gmail.com>, 2015-05-28 13:14:26 -0700, , purge everything related symbol class ... originally added symbol envisioned string mutable would save memory however problem symbol relation lily goal make poor fit lily imagined originally using database access pairing symbol field name string value seemed like great idea ... recently realize would involve database wrapper needing intern lot string symbol bit complicated handle since interpreter would need make sure internally made one collected externally made one see lily use symbol ruby elixir since mesh well feature meaning cut plan eventually trick learned perl think perl wherein string treated mutable string function see string given single refcount theory allow hash contain string mutated mutating key bad time allow say database query function overwrite string ref may require optimization emitter assuming possible assuming may look symbol think symbol right choice language fun experiment,,
2050,48d2d1392be23751b6f3e588940999d214bd6893,ascinated Box <FascinatedBox@gmail.com>, 2015-05-25 16:42:53 -0700, , debug fix incident code getting way first line cause problem second one fix take problem verified manually viewing output showing function optargs,,
2051,1b08398fa7a33d038201ba1606d02ea8494ef967,ascinated Box <FascinatedBox@gmail.com>, 2015-05-24 20:35:23 -0700, , parser method dynaload need done proper context done foreign import class method likely fail dynaload class looked context whatever current import happens instead proper foreign import class come,,
2052,896923c58e5d910cc340468b1394698bbf541261,ascinated Box <FascinatedBox@gmail.com>, 2015-05-23 11:56:55 -0700, , simplify using one trick,,
2053,3c87429d8a80fa45bf1200df6ec9f6d411690e29,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 21:01:36 -0700, , get_storage need line number,,
2054,22f261edd33082ea44ac579509f487d0035e283b,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 20:50:17 -0700, , refactor suck defense think abstracted back made original version also bonus fix bug old code would segfault first thing list hash given type,,
2055,38ce10a25c274de2f3d2b33a68c6ecd247db35fb,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 19:31:29 -0700, , emitter remove dead code tuple checking since bare variant type proper value possible type mismatch occur also wanting variant class variant class caught type mismatch case,,
2056,4757ad67b24e0ec20bae3bf0e1bc0dea86af6292,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 16:04:11 -0700, , add directory show show test fix 110 actually need special rule show directory recent readjustment pre commit hook.py internals made stdout ignored completely error output stderr work perfectly feature show always dump stdout,,
2057,d507b2b2c181c79ee9b90d1da0fedd020268090d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 15:54:58 -0700, , enable support import type import fix 107,,
2058,d509f95f260488be4903fba35cdc0c290a7925d4,ascinated Box <FascinatedBox@gmail.com>, 2015-05-22 00:50:27 -0700, , emitter creates code block function previously function would start code block size grow time code get written one single block emitter function done emitter slice code hand particular function except __main__ get shallow copy emitter code added two reason optimization large function cause bunch reallocs function code scale upward slot make closure easier since plan involves performing rewriting code rewriting easier large space rewrite code,,
2059,feb8953448ca7883770c30673ba528c25d388a95,ascinated Box <FascinatedBox@gmail.com>, 2015-05-21 16:32:11 -0700, , debug o_push_try second spot int val whoop,,
2060,79d093980ce51f22baaca39defbe6ee5498940c6,ascinated Box <FascinatedBox@gmail.com>, 2015-05-21 13:34:51 -0700, , finally stop using generic_pos totalling generic amount instead function value use has_generics field held generic_pos really useful emitter properly figure something resolved builtin package need mark type unresolved nobody else finally noted trying resolve variant enum totally broken loop useless quite sure truly fix broken first symtab least finally stop diving type tally generic good thing,,
2061,46cd21406e1f4b67a2edb441b60afa8e7c6d14ba,ascinated Box <FascinatedBox@gmail.com>, 2015-05-21 11:06:56 -0700, , emit unused,,
2062,dc18cf6e2e4968eb459933697513db6f73278f1f,ascinated Box <FascinatedBox@gmail.com>, 2015-05-21 10:43:45 -0700, , adjusts ceiling maximum number generic far parser one collect generic function report many generic saw ceiling raise raise max seen instead exactly given function need decided far far much bookkeeping needing track many generic function,,
2063,3e0cd839bc39ede3a116c35f1db447e23d96f1f0,ascinated Box <FascinatedBox@gmail.com>, 2015-05-20 15:18:57 -0700, , class seed directly hold dynaload_table setup funcs initially put setup funcs class long time ago case would something useful however turned every setup func setting dynaload table class loaded since rather annoying class seed hold dynaload entry directly,,
2064,baa9448ad07a4032e870b117a61e20840bd361db,ascinated Box <FascinatedBox@gmail.com>, 2015-05-20 14:33:24 -0700, , builtin function optargs involved changing self part foreign function argc could technically make offset argument count thing use code instead code use code however rather least right bytestring encode builtin function make use optargs error conversion string provided make note function use optargs result must come code argc optargs supplied function called,,
2065,b1100358a62ab38d95d1563a5bcaaf08e5b4922f,ascinated Box <FascinatedBox@gmail.com>, 2015-05-20 14:04:16 -0700, , foreign prep doe use caller remove,,
2066,34354616817c6e207fb5e9b7d66f24aeabfb2fd0,ascinated Box <FascinatedBox@gmail.com>, 2015-05-20 13:38:30 -0700, , lily interface loading .so file also tuned import error message print path tried idea copied lua library loaded need provide symbol called first linked list dynaloads library want make available ability provide init teardown function added deemed useful sometime later,,
2067,f9e54c279629f306409532c02b7369d6e5e6356d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-20 12:42:00 -0700, , fix embarassing mess path seeding yikes,,
2068,b46258ec5e65331ace92372dac2215671276963a,ascinated Box <FascinatedBox@gmail.com>, 2015-05-19 16:22:12 -0700, , use lily_set_import lily_ enter leave _import finally make parser consistent api tell symtab import use find var class etc within added benefit putting import related logic within parser symtab honor command set current import parser controlling save restore linking shall make easier import import later,,
2069,9bedc627acf6e387566f81540f9b01db9de3c6d9,ascinated Box <FascinatedBox@gmail.com>, 2015-05-19 15:59:06 -0700, , mod_lily oops use lily_free destroy option,,
2070,fbebb3a2ad256e34543659f63e064052cf455a88,ascinated Box <FascinatedBox@gmail.com>, 2015-05-19 22:54:53 +0000, , mod_lily register server import,,
2071,b3db5ff202475d132603ceec9a0d0785b3a4e5a8,ascinated Box <FascinatedBox@gmail.com>, 2015-05-18 14:48:51 -0700, , move error message creation parser,,
2072,952c677836002ef51e2feea1292c47656ce96cc5,ascinated Box <FascinatedBox@gmail.com>, 2015-05-18 14:32:20 -0700, , using boolean ish executing parser instead mode mode used three state one init longer done new oom behavior,,
2073,e7a6fb404c86e21e9bd26e5765125c5a6adf2e4d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-17 23:54:39 -0700, , sys registered package must imported step toward making package going provided particular lily runner automatically imported reason code depend runner calling,,
2074,ca993f7712dd4a3dd307d8f5085aba658f9ebef9,ascinated Box <FascinatedBox@gmail.com>, 2015-05-17 10:21:01 -0700, , remove class defines exception comment update used within core code anywhere also likely incorrect exception dynaloaded,,
2075,a1a7765dfcd8fd9d17f3f85828aed3fe1d052c19,ascinated Box <FascinatedBox@gmail.com>, 2015-05-16 14:04:04 -0700, , argc argv come lily_options,,
2076,d0f05a23520ab7ae277e50f5a79770ae778b57d4,ascinated Box <FascinatedBox@gmail.com>, 2015-05-16 13:39:27 -0700, , removed prototype non existant function,,
2077,fa8f161affe9aaa32ddbd6c43f04748c23756835,ascinated Box <FascinatedBox@gmail.com>, 2015-05-16 13:37:31 -0700, ,  leftover old naming scheme oops,,
2078,8f234175fb848720321414db341c74a9325924a0,ascinated Box <FascinatedBox@gmail.com>, 2015-05-15 19:01:21 -0700, , exception class dynaloaded need error dynaload interpreter point dynaload able exception allow  builtin exception dynaloaded basic hello world run instead 13k used,,
2079,a39af82e37c3007b2ffced38daaa6761d463b6a6,ascinated Box <FascinatedBox@gmail.com>, 2015-05-15 18:50:39 -0700, , ast always keep forward tree always target prev tree simplifies part ast particularly leave longer special case certain depth could dangerous lambda,,
2080,f1d07c468c5f70e9e4342c638a7c9be44f3d2039,ascinated Box <FascinatedBox@gmail.com>, 2015-05-15 18:28:28 -0700, , ast remove try_ add_save_entry alloc failure abort,,
2081,d375d9dcf23ab3f00ac4dcb2023bacdcb1d8b359,ascinated Box <FascinatedBox@gmail.com>, 2015-05-15 17:54:06 -0700, , except crash given invalid class also test,,
2082,dc1095a07b7945d92bdf96e619149490064e8ceb,ascinated Box <FascinatedBox@gmail.com>, 2015-05-15 17:12:08 -0700, , ast freeze include save depth root active lambda need however dynamic loading exception doe adding dispatching expression could come time,,
2083,50695ac4bbe31b5fbb0883620e8da33beb3e062b,ascinated Box <FascinatedBox@gmail.com>, 2015-05-14 15:40:09 -0700, , remove invalid comment custom exception fine,,
2084,eddd67fccab44f646e9f8eb4578b2b4a9fffba9a,ascinated Box <FascinatedBox@gmail.com>, 2015-05-13 14:55:35 -0700, , use msgbuf parser loading import membuf designed throw multiple string fetch later really made putting something need concatenated first msgbuf hand growing buffer doe exactly sort stuff also allows removal function horrible stench  msgbuf shared future idea soon commit,,
2085,a987060be7c44e727daf2a2d001a65a82659371a,ascinated Box <FascinatedBox@gmail.com>, 2015-05-13 14:28:40 -0700, , dynaload builtin function save memory unlikely someone want use builtin function save memory case ... attempt redefine builtin stuff thing okay,,
2086,768c7d971244b13cb8a697271a2d14f805f0a008,ascinated Box <FascinatedBox@gmail.com>, 2015-05-13 14:15:43 -0700, , interpreter dynaloads std err previously always loaded stdout stderr forgot put stdin importantly dynaloading file variable demand mean bit memory saved loading actually need loaded added couple new dynaload test test pas make sure dynaloading cause crash weird case scoped_use.lly test found nasty little dynaload bug,,
2087,9f6022e353fb3e3fbe1799027d94b67288d8e8a5,ascinated Box <FascinatedBox@gmail.com>, 2015-05-12 14:43:32 -0700, , believe forgot check,,
2088,a745191eaf391490367522213c4442cf5fcbd84d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-12 16:58:51 +0000, , parser except handle error import,,
2089,a565b588194fdfa8011ea5e09484f08ae5875e34,ascinated Box <FascinatedBox@gmail.com>, 2015-05-12 16:07:37 +0000, , parser charge linking import,,
2090,33750430581eb7b90da73e186ef234eaa243e7d5,ascinated Box <FascinatedBox@gmail.com>, 2015-05-12 15:20:00 +0000, , symtab remove junk include whoop,,
2091,85be05b139cf02e73900294a7760531b52add194,ascinated Box <FascinatedBox@gmail.com>, 2015-05-11 16:14:28 -0700, , parser greatly simplify expression_word dispatch import resolve import front search relevant package done var class dynaloading done single place expression_word,,
2092,332ba23172698102a4bcffcc2dbd9a6047054287,ascinated Box <FascinatedBox@gmail.com>, 2015-05-11 16:08:36 -0700, , parser functionize handling import,,
2093,9e8c9a81abbac159c593133968e9fea889eed47f,ascinated Box <FascinatedBox@gmail.com>, 2015-05-11 15:19:09 -0700, , symtab set val_is_nil var hold value,,
2094,1e5ad2a0a2d995087f04d50e0949fdabd9f11341,ascinated Box <FascinatedBox@gmail.com>, 2015-05-11 14:35:43 -0700, , correct block comment top ast emit parser symtab ast bad emitter half right half wrong parser incompletely symtab nearly 100 wrong though,,
2095,6812e7ba12e2837cb3bd4dd01eb11d554dd2882f,ascinated Box <FascinatedBox@gmail.com>, 2015-05-09 12:35:44 -0700, , remove raiser option thing need,,
2096,1416aaafff895149b168d30eea49c322102b5874,ascinated Box <FascinatedBox@gmail.com>, 2015-05-08 12:14:23 -0700, , symtab simplify searching import var class new api lily_find_ class var import take import entry middle parameter import null current builtin class searched search import given allow simplification parser turn make extending dynaloading needing done single place,,
2097,c604e2166976022f118af7431914da28c8820cae,ascinated Box <FascinatedBox@gmail.com>, 2015-05-08 11:26:02 -0700, , make dynaload generic stuff dynaloaded commit doe different thing dead life place  seed_table dynaload_table reorganization seed entry plus addition var seed currently unused type seed const void actual seed defines new lily_seed.h,,
2098,b2ba87aabfeaa2ed04ee78f0a11d6ec58eaeb931,ascinated Box <FascinatedBox@gmail.com>, 2015-05-06 15:00:55 -0700, , organize class function relevant lily_cls_ file previously lily_value contained new destroy function class contained function marker lily_gc contained collect destroy function huge mess everything say list new mark collect destroy within lily_cls_list lily_value remain holding collection generic stuff general collect function deref function big step right direction class work contained one singular file instead spread among bunch area,,
2099,e7f275a19e4a478e0bf380a6e9b5f6ed0e2aaa1b,ascinated Box <FascinatedBox@gmail.com>, 2015-05-06 01:00:32 -0700, , uhh ... lily_alloc kinda important whoop last commit,,
2100,b026cd5b18ae8d848c0779d7917d961a5c38f657,ascinated Box <FascinatedBox@gmail.com>, 2015-05-05 16:26:46 -0700, , away lily_mem_func use malloc realloc getting way couple thing like think time almost annoying check allocation failure time maybe feature come back time future taking pain see value lily since intend lily run mostly server embedded dunno open back future turn useful right nah,,
2101,62a3f2474667d00f66666aa79ddc9a3ab76ab22d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-05 13:18:02 -0700, , pull class init symtab new intention module eventually dynamic load area stuff class var defined function loaded demand useful particularly builtin section since stdio stderr stdout loaded needed begin process kick first stage symtab init builtin package init init responsible booting class hold builtin seed also adjusted thing symtab longer directly refers eq_func gc_marker different class real name lily_integer_eq instead refers using class loaded symtab integer_class eq_func temporarily ugly test still pas,,
2102,09d6dbc53f709f21232cdfe5b612507333a9b9df,ascinated Box <FascinatedBox@gmail.com>, 2015-05-04 21:28:43 -0700, , merge lily_expr_op.h lily_ast.h,,
2103,f3ce6c97caf072956980b56a58359105a05cc899,ascinated Box <FascinatedBox@gmail.com>, 2015-05-04 11:55:41 -0700, , lily_type_stack name accurate handle nearly complex operation involving type plain old stack type system solving building checking type,,
2104,d1237168c52dc4c3f7b3f0d57b6b36e883e28dfc,ascinated Box <FascinatedBox@gmail.com>, 2015-05-04 11:37:23 -0700, , lily show usage filename string null,,
2105,0ab6741af5ed306b42feb278216cf9f736e41c3d,ascinated Box <FascinatedBox@gmail.com>, 2015-05-04 11:28:28 -0700, , replace using lily_msgbuf simplify format string formatting used printfmt string format put together within benefit lily_msgbuf battle tested used within debug also got nice api allowed removing quite line code nice,,
2106,0ce5f664f4aeb5efec65b7993d2b856264e54e9e,ascinated Box <FascinatedBox@gmail.com>, 2015-04-28 21:05:49 -0700, , parser type lookup process package allows type somepackage type instead using type current package ... might end allowing really nasty looking type later however consistent thinking accessor work anywhere additionally future postgre module need,,
2107,f47a0e3500bcf38ad5159227e1428552728a5199,ascinated Box <FascinatedBox@gmail.com>, 2015-04-28 16:37:28 -0700, , symtab call class setup immediately class necessary future module need use initialize class setup func called method class loaded,,
2108,c260a19d015bc18d880055695e77bb26fa9c53d2,ascinated Box <FascinatedBox@gmail.com>, 2015-04-27 02:01:41 -0700, , give autotools boot welcome cmake system organized follows src contains file included kind build apache load static library src add mod_lily build mod_lily.so run load static library src add lily.c build lily toplevel directory also decided kick autotools good cmake build lily find cmake lot simpler use also make easier add extra module,,
2109,de1b7d906525d528f35432977f1785570b9f421e,ascinated Box <FascinatedBox@gmail.com>, 2015-04-24 17:46:28 -0700, , pre commit hook.py band aid around lily built within run currently figure get autoconf dump lily executable original source directory hopefully temporary fix pre commit hook.py script source run directory get built,,
2110,720f2b6a44d0a411e09d9c0deb0c00c5d84a0bd5,ascinated Box <FascinatedBox@gmail.com>, 2015-04-24 17:13:57 -0700, , symtab provide postgre module need also use internally current class boot done seed anyway,,
2111,b0e0530f93cff5f1a876b2247b60d9fa4eceb77a,ascinated Box <FascinatedBox@gmail.com>, 2015-04-23 15:13:26 -0700, , symtab create lily_class structs lily_new_class,,
2112,298dfd0b0edb5cf4a707210685690aab5445ed87,ascinated Box <FascinatedBox@gmail.com>, 2015-04-23 14:04:40 -0700, , symtab create type new lily_new_type multiple area malloc init type great way fun bug show forgetting initialize something destroy relic lily_build_type,,
2113,5f021fb639cba48880e780d8a3d89234bae535fd,ascinated Box <FascinatedBox@gmail.com>, 2015-04-22 15:28:26 -0700, , remove date readme builtins apache lily site better place information anyway,,
2114,dc6814e0073e2d34d26ed90af91793a09de8647e,ascinated Box <FascinatedBox@gmail.com>, 2015-04-22 15:26:47 -0700, , update .gitignore drop lily_aft add .la libtool stuff,,
2115,37c5ef3f85f6e6eff20cd4c946599fe17dd42e39,ascinated Box <FascinatedBox@gmail.com>, 2015-04-22 15:25:55 -0700, , add makefile.am run fix apache makefile.am,,
2116,0f3247926798f2f69892f19bb16c4f4b036d0ac4,ascinated Box <FascinatedBox@gmail.com>, 2015-04-21 22:56:33 -0700, , reorganization also lily core .so different thing rolled one list configure.ac longer add wpadded module specify done linking apache causing deluge padded notice apache test pulled src test test pre commit hook.py hoisted well lily_main.c life run lily.c hoisted apache apache instead src apache core interpreter build .so linked run lily.c apache mod_lily.c mean faster build building apache mod one done preliminary step toward building multiple server multiple database toplevel module linked common library source least src contains source stuff nice start thing,,
2117,d3a659b2ea6ad95c2cd5d80f7f2b2dab9a260753,ascinated Box <FascinatedBox@gmail.com>, 2015-04-21 12:11:10 -0700, , allow comma separated import fix 106,,
2118,5a3d425a60d695e39f5c883eaa440260206eb7e7,ascinated Box <FascinatedBox@gmail.com>, 2015-04-21 11:40:31 -0700, , lexer filename must copied membuf may move sake simplicity lexer allocates memory entry filename provided parser membuf may resize invalidate shallow copied string bad could make entry filename position within mem buffer mean accessing filename involves prodding entry membuf position grabbing membuf rather terminate newly made path parser strncpy ,,
2119,85aef15b69bc5b8c15bd9cfbd0e7c7302acef8d3,ascinated Box <FascinatedBox@gmail.com>, 2015-04-21 11:17:32 -0700, , remove lexer filename relic never got removed actually useful back lily support multiple entry doe recent entry filename used nothing actually used except parser __file__ fixed use lexer entry filename instead,,
2120,79ffe3bdc65bd047c1877c30e75eaba76d002fe4,ascinated Box <FascinatedBox@gmail.com>, 2015-04-21 10:21:28 -0700, , add exception package name needed fix 108,,
2121,03e7a47ffb3f3e1cf9e12a4549fcabbd0a6853c7,ascinated Box <FascinatedBox@gmail.com>, 2015-04-20 16:00:57 -0700, , create lily_config.h allow path taken lua default path setup lily allows putting code file versioned directory away base directory two directory supported usr lib lily 0.13 usr share lily 0.13  relative interpreter additionally interpreter still add load path relative first file however come directory may fix later added shared library .so like included directory thing loaded really want .so file www directory,,
2122,9dbede34caf76481e88278fa825791dc671d1a09,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 17:45:13 -0700, , type fix exception traceback type calltrace return supposed list tuple string string integer since filename included middle one trace,,
2123,cf4a6207f68aa8db403b7285858c3e58f55e9bad,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 17:32:57 -0700, , rewrite pre commit tag mode directory fix 109 pre commit hook longer care many test run run print total end issue interested fact passed one total numbered failed additionally touched test passing directory stderr.write instead print pre commit hook ignore anything dumped stdout print show also added tag_mode directory ensure running interpreter tagged mode lead segfault since stdout ignored tagged mode stuff output whatever stuff like,,
2124,c496413875399ae5f3f6706232ea24ecfa43158a,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 14:46:11 -0700, , pre commit hook.py okay use test fix,,
2125,c9a4dc0eba4ecf2b6a4949561991ded7ce48ba0b,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 14:39:29 -0700, , instance value must check see need marker causing crash one test set,,
2126,f80c1851b6c58a72c40c2a7146551fda42a77e57,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 14:30:09 -0700, , interpreter pass around option struct init allows something using lily set thing like data memory function etc pas main lily runner understands option set default threshold used make sure something crash happens trigger certain time step toward 91. pre commit script altered make use threshold part option one test crash threshold set,,
2127,47930504e9629574fb9c9038006e50bc0691728a,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 13:28:29 -0700, , use struct name instead supposedly suffix reserved posix easy change anyway,,
2128,9f8a865222be4eae3055b3e79f7c110e0f45e4b5,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 13:16:00 -0700, , include lily_impl.h need lily_impl_puts done nearly everybody used hold allocation routine lily since longer doe need included much,,
2129,9b5ac8c24f4cfab8d192d1ee7e70a79180846aea,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 13:11:43 -0700, , lily_build_type,,
2130,b1394cf3b1084aedee764a3d5d386d9c1dc7923d,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 13:08:42 -0700, , ast remove unused tree_package lily_tree_type,,
2131,bb39c45c194b73afd031e96197b061697b415dde,ascinated Box <FascinatedBox@gmail.com>, 2015-04-14 13:04:43 -0700, , ast binary tree need update parent upon absorbing important call check parent way determining value need returned since set  ... wherein return value would result crash,,
2132,cc80cb3efadcbf2c015bcf29cfcda3555ccdfca4,ascinated Box <FascinatedBox@gmail.com>, 2015-04-13 16:43:59 -0700, , default value function lily support default value function decided call optargs optional argument type default value core type integer double string bytestring symbol default value denoted type value function annotated indicate default value information passable function argument denote default value variant type directly optargs hold function take optargs friend generic type hinted default value guaranteed possible take function take integer assign var assign var function take integer sure optionally anything pretty awesome added lot test make sure busted currently built function accept default value likely change soon bytestring encode could use error default excited,,
2133,1360cb2ba02a6a850c26ff4cdf64c81677a54c20,ascinated Box <FascinatedBox@gmail.com>, 2015-04-10 09:20:38 -0700, , parser making var,,
2134,ac27ad3db3c27093be5fc45adf38d82aa3d9d001,ascinated Box <FascinatedBox@gmail.com>, 2015-04-09 16:32:06 -0700, , make sure builtins file builtin,,
2135,173c3e42e451a5b9ae4645c96fafc6fd0b6a8329,ascinated Box <FascinatedBox@gmail.com>, 2015-04-09 15:49:53 -0700, , long last file class read write ops finally fix brings lot change stdin stderr wrapped builtin package available write mode file file class created following method open close write readline considered suitable  bytestring class encode method transforms bytestring file class yield proper string encode method understands error raise error invalid utf sequence commit possible read write data file also possible open various file interpreter smart enough automatically close backing file value lily file value garbage collected deref one great part seal api string never inside critical database stuff general extension really nice lily string terminated string internally size refcount attached  mean end file related stuff plan add stuff line however allows finally reading writing file lily,,
2136,9e097dae132c5b80bfab2ef46ecd443275cb3b59,ascinated Box <FascinatedBox@gmail.com>, 2015-04-07 13:45:49 -0700, , change derefer function destroy function new type created outside interpreter make destroy function necessary new file class well class postgres package use additionally fix done box_assign trying deref something magically worked crashed new derefer rollover,,
2137,6574508e1888ee029bf5d924faefd9e0ab8731bb,ascinated Box <FascinatedBox@gmail.com>, 2015-04-07 11:34:31 -0700, , remove unused,,
2138,50e3bb654f60a71f83474e5ee5f5a2712ae96585,ascinated Box <FascinatedBox@gmail.com>, 2015-04-03 20:57:15 -0700, , update lexer comment import import,,
2139,cee1af2a950fd44d487d72eadaa43cd2593ea89b,ascinated Box <FascinatedBox@gmail.com>, 2015-04-03 18:41:16 -0700, , import skip repeat import finally fix 103 commit interpreter know import particular package subsequent import link package call __import__ python doe additionally attempting load thing twice file syntax error prevent junk includes later case people really use lily,,
2140,0bcc34aaf552d15fcdfb59916eb3edf7b2cae93b,ascinated Box <FascinatedBox@gmail.com>, 2015-04-03 17:11:26 -0700, , longer take import look default lily_find_ look active stuff builtin stuff something want look specific import call particular import,,
2141,8d0b834089b8181647f3d49b9ae4b2413ce0876c,ascinated Box <FascinatedBox@gmail.com>, 2015-04-01 16:03:09 -0700, , calltrace includes path longer leak leak caused cleaning build_traceback properly created use move value resulting register raise avoid creating lily_value simply free,,
2142,02a8451aa566db6312c0edb6f4b0fec93fa8a479,ascinated Box <FascinatedBox@gmail.com>, 2015-03-31 21:58:10 -0700, , create noticing pattern ... pattern seems check deref fix flag move raw value ref created doe long value type passed currently done anywhere,,
2143,d39ebc2a6acd0bd50bbd4d1b0d3ba8f750a5c238,ascinated Box <FascinatedBox@gmail.com>, 2015-03-31 16:47:14 -0700, , stack trace includes function path,,
2144,05a070843a7cba28e9e168e2caf2c8338285b93e,ascinated Box <FascinatedBox@gmail.com>, 2015-03-31 19:11:21 +0000, , importing call __import__ globals properly within __main__ import done parser call emitter make sure call proper __import__ done load stuff imported file additionally body imported file handled using statement loop benefit parser_loop simplified little bit since var top __import__ actually globals properly put within __main__ register fix nasty issue prevented using var package,,
2145,877f94e64b606c2507dfd23dcacd300c45ed56b2,ascinated Box <FascinatedBox@gmail.com>, 2015-03-31 17:04:18 +0000, , use depth defined function use flag var_is_readonly instead weird,,
2146,1b759e8ac8b9db265c69aff9221abff729f61007,ascinated Box <FascinatedBox@gmail.com>, 2015-03-29 22:54:34 -0700, , file parsing load import first file first done spotted python think make sense easy implement broken window right need get visual studio stuff figure macro use stuff like additionally pre commit hook.py longer installed version lily nasty temporary hack get around able patch provides,,
2147,8ed661777c7f8b3998eacf0a8927729af0446ea8,ascinated Box <FascinatedBox@gmail.com>, 2015-03-28 11:10:45 -0700, , var storage longer hold value took adjusting around namely making pas function val register prep also cleanup last patch removing lily_value_tie struct,,
2148,0ad1f10d8d15ba20ab3cfa7abe851d5bbe0f8b80,ascinated Box <FascinatedBox@gmail.com>, 2015-03-28 09:21:40 -0700, , result generic func longer used generic resolve workaround problem longer exists back interpreter used noreturnerror error raised value supposed returned failing return value claiming return one emit time error anyway generic resolve assumes use type parameter function solve type within function every case true except one define old noreturnerror system would resolved would cause segfault new system emitter raise syntax error saying value returned therefore longer necessary include return generic register,,
2149,6e87ff650b16476e5b837caffab0c664027a5583,ascinated Box <FascinatedBox@gmail.com>, 2015-03-28 00:43:48 -0700, , var longer hold value bigger sound like beginning lily var always held value could load value var great import came along happened tryint make sure value loaded became complete nightmare symtab provides associate var readonly value also literal lily_tie type lily_value_tie gone replaced lile_tie destroys foreign tie run literal function readonly table allowed removal single opcode really hard merging o_get_literal o_get_function o_get_readonly patch easier load changed literal readonly value really important loading web page lot tag faster prep case,,
2150,985a6c539489cceee40cdd0c5697220ee0a9c4a9,ascinated Box <FascinatedBox@gmail.com>, 2015-03-27 19:08:56 -0700, , remove prototype non existant function whoop,,
2151,2dca9f0d2c32e8ac6ae2476ec06fc3b2a2afaf35,ascinated Box <FascinatedBox@gmail.com>, 2015-03-27 14:31:03 -0700, , symtab builtin class member fast access gone longer reason thing lily mind sym_class_ defines still around case comparison seems make sense may soon change well additionally type comparison dealing ops use multiple type many case reg type doe reg type xtype faster integer double type stashed local within execution function,,
2152,66e1d786201af689c80535b689151e48fc08cd1c,ascinated Box <FascinatedBox@gmail.com>, 2015-03-26 11:45:24 -0700, , parser create destroy last type seed put end day processing list ints way creating proper lily type provides way create type based simple name proper type building channel everything else doe simple easy additionally kick old type code lingering around well code called good riddance,,
2153,7cbaa20aed0ae7e5a6d2e747c8b0f6677b4b0fce,ascinated Box <FascinatedBox@gmail.com>, 2015-03-25 15:48:18 -0700, , pull importing logic parser seems like sane idea considering import skip thing already imported future lexer would tuo import information parser already would also let parser know likely awful way given file already loaded ... file actually .so .dll etc kind module reason import logic pulled parser,,
2154,46a6fc3ecf74d2f82970f47b970b91185b155940,ascinated Box <FascinatedBox@gmail.com>, 2015-03-25 15:16:12 -0700, , condense importerror encodingerror error two error never raise able interpreter phlan eval like function deeply reason special name simply use error like python doe bail,,
2155,828f7878ada6e205b7accc39fdd68dd63be77de3,ascinated Box <FascinatedBox@gmail.com>, 2015-03-25 15:03:50 -0700, , drop support special loading trust interpreter importing partially done disconnect within interpreter import carried using fopen user interpreter could say want load special kind file bypass interpter direct fopen realized consistent interpreter would provide mean runner fopen kind call order return working file ... rather annoying souding think interpreter doe short special loading gone instead use lily_parse_file lily_parse_str directly interpreter handle opening closing file including starting file,,
2156,78a7679e5cc86f7b9f409c0fae14ef8608ce356d,ascinated Box <FascinatedBox@gmail.com>, 2015-03-24 15:39:49 -0700, , class created within imported file test,,
2157,b4c7851533e603d49c14840248cbbe0945e1313b,ascinated Box <FascinatedBox@gmail.com>, 2015-03-24 15:39:45 -0700, , create first import test additionally fix deep package access previously attempting grab package within another package would simply work fixed package within package supported however deep one wish test additionally first package import test added test ensures deep access pkg pkg func work,,
2158,1c7dc0cf67feb11a372f5ec71c9236e94a252517,ascinated Box <FascinatedBox@gmail.com>, 2015-03-24 15:39:41 -0700, , try except block invoke expression properly single line try dispatching exception handler wrong multi line state additionally except handler calling statement bottom multi set incorrect single line block fixed test added make sure happen,,
2159,78ffa719061d37898ae35b668c10fc5dfe25fcad,ascinated Box <FascinatedBox@gmail.com>, 2015-03-24 15:39:16 -0700, , __main__ value must tied come nil,,
2160,0a97e427cdf64910ee76b48d6a9c3af0439b39d2,ascinated Box <FascinatedBox@gmail.com>, 2015-03-24 18:14:38 +0000, , debug flush msgbuf show prevent junk show,,
2161,607d0ebccf1d0c1cf5eb6bc4f3428390d778ef63,ascinated Box <FascinatedBox@gmail.com>, 2015-03-23 17:01:51 -0700, , simplify parser teardown full destroy symtab think reason symtab needed interleave teardown value stored within symtab var specifically sys server package however thing longer around importantly doe trigger valgrind warning basic setup teardown test believe fine additionally checking different field parser teardown longer needed oom strategy simply abort patch merges teardown symtab teardown put symtab first ordering necessary need type info tearing value,,
2162,b33acde553018f9a6ee4bdd35a6f900b6e596a33,ascinated Box <FascinatedBox@gmail.com>, 2015-03-23 15:48:08 -0700, , remove unused lily_lasterror sure got put ...,,
2163,b210420223d3aad315b4eed7f133cfcd26dd706b,ascinated Box <FascinatedBox@gmail.com>, 2015-03-20 14:36:44 -0700, , test organized subdirectory future plan create special directory least pas wherein entry loaded using tagged mode needed tagged mode completely untested right super bad yet committed directory however tagged mode currently operating correctly shooting text ,,
2164,8bd4ea4003f061a64efe14ccc1a74728843a3974,ascinated Box <FascinatedBox@gmail.com>, 2015-03-19 16:29:55 -0700, , use uint32_t line number hardly extra memory necessary might useful point future,,
2165,81ca3c9aee8271f42110a5d290f067d4817c367c,ascinated Box <FascinatedBox@gmail.com>, 2015-03-18 16:22:54 -0700, , remove unused lily_define_var whoop,,
2166,4c89d316a12decf71514d17f93d7bda331e1e333,ascinated Box <FascinatedBox@gmail.com>, 2015-03-18 16:16:08 -0700, , death package type true package live package type never way reasonably figure thing package may may contain measure needed put place prevent assigned type nice thing new true package var builtin offshoot package sys server apache var true globals instead packed within var simplifies internal bit interpreter like able tie value builtin thing includes removal couple opcodes package get set value within package toplevel simple global meaning global get set used package get set used assigner package broke case gone goodbye package type missed,,
2167,8d7705d92bb9df4ae9cc00fbe2feaa7f9d8e7ebf,ascinated Box <FascinatedBox@gmail.com>, 2015-03-18 15:57:49 -0700, , user package type gone value tie package ftw major change happened core part interpreter parser provides lily_begin end_package start end package start mod api guess module loaded parser doe first pas loaded builtin namespace available anywhere time new package stuff used place awful ugly package type previously used internally longer load value var awful begin symtab provides lily_tie_value tie value type global tie loaded pas searching package builtin package subpackages inside checked fallback searching within current package space allows using sys argv example without import sys mod_lily server package doe,,
2168,2da19fd4b906625a69bfdcba6d0838c21443ed90,ascinated Box <FascinatedBox@gmail.com>, 2015-03-18 13:41:59 -0700, , drop unused lily_prop_seed type used since parser started bootstrapping exception information,,
2169,b35c0b8449c7f664dc78ee0e7cdbee8fcb0a6258,ascinated Box <FascinatedBox@gmail.com>, 2015-03-18 13:11:22 -0700, , lily .lly extension instead .ly recall people reddit thread mentioning conflicted lilypond brushed time thinking nobody would use lilypond language server together right new thinking lily start new extention nothing else make thing simple checked file extension database confirm lly currently unused real reason mood changed much really tired github marking language file lilypond file  said use .ly conflict lilypond hereby concede commit message right,,
2170,3cf8e230ca7ee270bb76707d2a4a3b0ddf0d04fe,ascinated Box <FascinatedBox@gmail.com>, 2015-03-16 16:15:52 -0700, , first shot import support fragile toward 103 cover fully work importing foreign file calling function importing current directory reading builtins current import  multiple import loading module backed .dll .so whatevers decided merge kinda crummy change step toward finally kicking package type interpreter favor making sys server real true namespaced thing allows small cascade code cleanup fix rough part import test yet still certain couple thing regarding importing however done importing polished well tested,,
2171,608b54160b96b7e5c2ed3d2d4b6dda5e7fbc7dbb,ascinated Box <FascinatedBox@gmail.com>, 2015-03-16 13:21:08 -0700, , merge branch master http github.com jesserayadkins lily,,
2172,2f17393aa834632d8cf595f9245aad62bf348995,ascinated Box <FascinatedBox@gmail.com>, 2015-03-16 18:23:21 +0000, , create o_get set_property property get set fix save loading literal index small speed win,,
2173,0238eb03a9126f0da928016118d8e0e091fe6721,ascinated Box <FascinatedBox@gmail.com>, 2015-03-10 19:46:50 -0700, , parser put bootstrap init get rid pm_init instead creating new parser start everything needing already loaded done necessary import module get loaded outside parser code exec may depend exception available likely case postgre module,,
2174,58f6e896b7acf482bb650d7d0b9644bbf80e8ac4,ascinated Box <FascinatedBox@gmail.com>, 2015-03-10 19:34:35 -0700, , lexer make entry pop explicit required parser make easier importing entry magically get popped middle lexing kinda weird also two different eof kind merged back one kind eof ,,
2175,9bd651ec9ce2abd49034c7be21b12d77f2973be2,ascinated Box <FascinatedBox@gmail.com>, 2015-03-10 16:55:58 -0700, , merge branch master http github.com jesserayadkins lily,,
2176,92d192303b7038c013990a91b4e3b71e7f68413d,ascinated Box <FascinatedBox@gmail.com>, 2015-03-10 20:53:57 +0000, , raiser fix wrong name user raise builtin raise,,
2177,80dce3d27d96936ed59563af46a71253a1ae757a,ascinated Box <FascinatedBox@gmail.com>, 2015-03-06 19:06:48 -0800, , apache mod server package close var,,
2178,ac6ca9af54f66d47aabab8bca5530c9d8ff9278a,ascinated Box <FascinatedBox@gmail.com>, 2015-03-06 16:10:26 -0800, , lexer fix subtle bug lexer state teardown,,
2179,7e2357bb0741a4ca09e270e9254d358de8199557,ascinated Box <FascinatedBox@gmail.com>, 2015-03-06 12:31:16 -0800, , introduce bytestring class numeric escape string first numeric escape decimal kind nnn observation python ruby suggests decimal escape allow short sequence longer sequence 009 additionally numeric escape swallow another value determined value large 999 scanned alone still need research figure common among language well good idea string literal symbol literal like ... allow numeric escape either 127 possible invalid utf make sure type deal valid utf terminated latter seems important imagine embedded play well lot different apis import coming shortly hopefully bytestring allows embedded doe allow numeric escape 127. bytestring class mutable currently class method current aim bytestring handle text either valid utf may contain embedded whereas string symbol remain pure finally trying display bytestring type show non printable value shown using numeric escape idea came python hex used hex escape supported yet,,
2180,7dde4d4e66692e1ede2d191aa1068e74cc416f26,ascinated Box <FascinatedBox@gmail.com>, 2015-03-02 15:48:59 -0800, , remove noreturnerror bootstrap oops,,
2181,51ae77019816da3f9ca17ed71c498b8ab96ca5c5,ascinated Box <FascinatedBox@gmail.com>, 2015-03-02 14:52:19 -0800, , lily_impl.h longer tinker allocation related stuff removed new pluggable allocation stuff added updated lot thing pull whatever file need lily_impl.h longer pull anything,,
2182,6d7d4f2bff2888a609dd158f7a18e0e4bbdd9e65,ascinated Box <FascinatedBox@gmail.com>, 2015-03-02 10:24:09 -0800, , remove since gone,,
2183,61489ed0e58713e4c4cf831fc51eb35e187a25c7,ascinated Box <FascinatedBox@gmail.com>, 2015-03-02 00:07:07 -0800, , remove nility checking class function longer necessary uninitialized value thing past,,
2184,866f68c04e86c4a4ba480f6a43c6b069dd6f61bc,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 18:58:59 +0000, , ... use inner var test added inner loop var guaranteed initialized,,
2185,a34084a7b40198b35f28550c4e298aea46245d78,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 17:40:36 +0000, , remove building_error obsolete interpreter oom,,
2186,7a1d2dd425de3dd815ff33e5c3245a29c4569c89,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 17:08:35 +0000, , to_integer to_i to_double to_d to_string to_s inspired entirely ruby,,
2187,0d616f9a53a8fc9f0a59eb4005b2bf7d3bfd2b57,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 16:58:28 +0000, , custom exception work right also added test custom exception load message oops,,
2188,66a5de539993be10a3e332b688898c4f6e8c759b,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 16:37:43 +0000, , nomemoryerror unused remove,,
2189,1f24a45d5cf0c4afba420c30cccdf0b21a35fd49,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 16:30:20 +0000, , cliexec_main.c obsolete ... goodbye,,
2190,a5bd170dbca2de427a61545abb84f8d8dc49c8d7,ascinated Box <FascinatedBox@gmail.com>, 2015-03-04 16:12:06 +0000, , msgbuf add print simple value use replace code different code path trying add one different group value msgbuf simple type unified msgbuf underneath fmt direct use hurray redundant code,,
2191,44901e510b6cc0a1480f05ebeecde9a88d5d6dce,ascinated Box <FascinatedBox@gmail.com>, 2015-03-01 23:33:43 -0800, , allow self within class fix couple note however show invoked class instance instance set value property property unset value printed place value absent self name used access property using get class method fine interpreter demand name used instead,,
2192,903f5d2d05e9d668a8015bbf3bba700dd4fcf63d,ascinated Box <FascinatedBox@gmail.com>, 2015-03-01 21:41:06 -0800, , fix calling function within class constructor couple problem previously went unnoticed possible call class method within new class regular function however worked fine still course passing function argument constructor would cause implicitly return class attached caused forgetting unset internal flag also fixed new test added cover,,
2193,ab3b89ff367bc2718f58141bde9679339cdf4337,ascinated Box <FascinatedBox@gmail.com>, 2015-02-27 20:44:20 -0800, , require return end function fix allows removal noreturnerror whole lily good riddance returning value end function emit time problem instead time one note point future likely look making branch return satisfies return needed however getting rid awful error good enough,,
2194,1011a4d64fa741d24efdfd4634c861a1f5f8894b,ascinated Box <FascinatedBox@gmail.com>, 2015-02-27 19:30:45 -0800, , emitter optimize dive parenthesis compare ... local var might inside parenthesis case assign would optimized add test pretty specific kind embarassing happened,,
2195,e3318a7a871bac7f909d19eee34305f249576d93,ascinated Box <FascinatedBox@gmail.com>, 2015-02-27 19:20:09 -0800, , type build default set type done possible lambda argument default type generic information provided behavior never supposed happen unfortunately transition using new type stack checked bug beforehand anyway added failing test lambda argument try default,,
2196,772821ce03e9c1944ba0b668d2e6dba7243b7fd8,ascinated Box <FascinatedBox@gmail.com>, 2015-02-27 17:23:31 -0800, , generic template outward change fix change everything refers generic generic instead mixing template generic based nothing particular sort consistency good thing,,
2197,af6fce2ecccc5531a675b59823aec0859bfffe29,ascinated Box <FascinatedBox@gmail.com>, 2015-02-26 14:29:39 -0800, , implement hash key fix hash function oops parser allows generic type key hash best solution though ... force problem onto emitter possibly later make sure hash key valid real true solution point future implement trait require hash hashable would mean would hashing function also commit break hash function turn allowing cause hash raise error silly message valid hash key,,
2198,d395fab16fd099c9cb877a1f7e79b42b15a073c4,ascinated Box <FascinatedBox@gmail.com>, 2015-02-26 21:05:17 +0000, , create immutable ruby inspired symbol datatype fix 101 commit allows creation symbol value parse time using name syntax well ... ... multi line symbol also created time using new string symbol function symbol created subject garbage collection unless future pas another code tag apache creates symbol literal name symbol created parse time subject garbage collection added basic test make sure leak various symbol usage,,
2199,1ebe40db80dce0ccf8bba2696f2d93781db7a202,ascinated Box <FascinatedBox@gmail.com>, 2015-02-25 18:16:27 +0000, , remove impossible test fix allocation stuff polish lot junk oom handling update commit namely function longer try name hopefully impossible oom error check gone good riddance,,
2200,71a3c000467e9409757db1a67d7bdc28898d047c,ascinated Box <FascinatedBox@gmail.com>, 2015-02-25 16:49:24 +0000, , remove aft blastmaster build new oom policy aft longer needed blastmaster pre commit hook need special build rule,,
2201,641fd6f97fb0980f2e10166cf408a02673f6f3a5,ascinated Box <FascinatedBox@gmail.com>, 2015-02-24 21:57:24 -0800, , custom allocator support huge change oom behavior fix 102 beginning lily default behavior oom memory handling attempt free everything local try raise exception longer case research project show unheard simply abort term memory allocation failure fact experience show attempt oom system either end system locking getting hit linux oom killer segfaulting something something giving memory really lily interpreter accepts allocation function runner provide one send null get default default allocator call abort memory interpreter core changed around fact lot code deleted change fairly conservative function still try_ name never fail additionally lot work done knocking around function function free malloc realloc way passed part args direct lily_ malloc realloc free doe fix 102 finishing touch coming shortly polish rough edge commit leaf,,
2202,ba8409fec9dee10b779e2d5d6c5084b77acd0ccb,ascinated Box <FascinatedBox@gmail.com>, 2015-02-24 14:43:57 -0800, , disable string without comma recently today discovered working something else worked logic oops working literal,,
2203,7cdf8b54a7098dc93ae8d996024ad4f39f234f05,ascinated Box <FascinatedBox@gmail.com>, 2015-02-24 14:21:04 -0800, , finally implement string format fix ended simpler expected couple test also added make sure string format decide break tested implementation valgrind look invalid read found none surprising since majority done 2am,,
2204,92538ad66b20cfcc4dba557efa31affda0e86452,ascinated Box <FascinatedBox@gmail.com>, 2015-02-23 22:36:41 -0800, , varargs empty fix fact empty due past issue longer issue like able comprehend empty list example,,
2205,d0a988801105eaec3514297c15e732261ae3a405,ascinated Box <FascinatedBox@gmail.com>, 2015-02-23 22:22:16 -0800, , remove unused defines regarding class unused ...,,
2206,eb1799d67597c5decbee48dc96ef01a3af94f18e,ascinated Box <FascinatedBox@gmail.com>, 2015-02-13 15:37:20 -0800, , add .gitignore stuff codelite ide found recently want give try also language dead ... working website still,,
2207,18c650a2f70b144d3e75bac547634f6c29d609ca,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 14:20:01 -0800, , remove trailing whitespace file,,
2208,18aee70349522c727c533b729537d764ee49d517,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 14:15:06 -0800, , remove incorrect comment nil ity much variable allowed nil thus longer valid,,
2209,e34e8fb3e5f0dee81fc36e0e1d5195458bf48441,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 13:33:55 -0800, , update builtin library use new syntax basic readme getting started leaving documentation builtin library since plan convert documentation instead writing also front page readme longer reference getting started readme oops last commit,,
2210,730078d8ae292ad4b5a43882d6faa9b974d1945b,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 13:12:57 -0800, , remove really long bland boring readme file good reason ... reason going building proper website language better demonstrates capable said site apart repository neat snippet explanation snippet become obsolete suck anyway remove,,
2211,6e3f9f84a159b9bcc65c6d2c19eb8f490b2085fa,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 13:10:56 -0800, , remove broken month str instead string sort give away ...,,
2212,f1668e9bd122f90375ac0f394cd3c0b6856be70c,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 13:08:35 -0800, , remove ... supposed anymore assume originally added testing file class somehow never got removed,,
2213,f509b403ff98c5868c6b6b68b13d31949ce97103,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 13:03:58 -0800, , replace triple pound comment pound brace fix new style comment unambiguous unlike previous triple pound comment failing test updated old comment block start end changed also pre commit hook.py updated recognizes new comment style new style comment doe nest,,
2214,e046eaabe98610345791af9b4c9c4641cba696ff,ascinated Box <FascinatedBox@gmail.com>, 2015-01-30 11:50:41 -0800, , completely redo variable declaration fix one last change next version released wanted slip language code outside test previously two way declare variable var value sometype value still two way declare variable ... var value var type value hoped new syntax encourage greater use type inference explicitly stated type still case type inference necessary var list integer additionally variable declaration function changed old function integer function list integer ... new function integer function list integer ... multiple variable declaration currently supported though may put back sometime future,,
2215,6afa932fed52130e2d03b095b6bf09d2a48f433c,ascinated Box <FascinatedBox@gmail.com>, 2015-01-27 18:20:54 -0800, , parser replace calculate decompose type yay code cutting,,
2216,91faed5cf3eb35c204a8d1a03761393e48eaf24d,ascinated Box <FascinatedBox@gmail.com>, 2015-01-27 18:14:09 -0800, , use new handle resolution generic far worst offender code duplication used horrible version type matching would perform pretty good case say used lot feed anything complicated like passing creating tuple later performance would degrade nice fast new version lily_ts_check fill generic parameter lily_ts_resolve resolve rest value within function simple clean 200 line,,
2217,82d5177c23cde9bedf2a839d0aae78dea4b0c670,ascinated Box <FascinatedBox@gmail.com>, 2015-01-27 15:46:33 -0800, , use lily_type_stack resolving instance property code exact duplicate function simply use instead,,
2218,14466340c75d1bd604090b98b46c8a8238fd2861,ascinated Box <FascinatedBox@gmail.com>, 2015-01-27 15:31:33 -0800, , emitter type operation put new lily_type_stack externally change test still pas internally emitter completely different longer type stack directly held emitter instead special type lily_type_stack held emitter lily_type_stack api provided mean manipulating type done reason far much code duplication emitter parser type related operation worst example resolving generic diving type type map etc emitter focus simply writing code inner working type operation abstracted away type operation easier debug done api previously whack mole trying figure setting type,,
2219,09484aba53ffe3e4b92f0467fe9a4a21e203f0f0,ascinated Box <FascinatedBox@gmail.com>, 2015-01-23 15:21:22 -0800, , merge branch master http github.com jesserayadkins lily,,
2220,10fd9654f3ae38fca332014c55a03739ea7f77d0,ascinated Box <FascinatedBox@gmail.com>, 2015-01-20 09:39:27 -0800,92, merge pull request gitter badger gitter badge add gitter chat badge readme.md,,
2221,ddcec8caf99a64277f2cc2579473398187a8111c,he Gitter Badger <badger@gitter.im>, 2015-01-20 08:30:29 +0000, , added gitter badge,,
2222,17af247bc635bf2b6250e9cb117d687c92ce8797,ascinated Box <FascinatedBox@gmail.com>, 2015-01-15 15:44:29 -0800, , emitter simplify case vararg call generic type,,
2223,548919d9b275da55eb3fb7d25f10ffd957f4d6f1,ascinated Box <FascinatedBox@gmail.com>, 2015-01-13 20:04:48 -0800, , interpreter unite lily_class call_start call_top instead linked list class method represented call_chain sufficient thing done part define done function taken immediately chain globals put class method emitter function exit add new class class method much simpler straightforward addition method class direct addition anywhere allowed simplifying lot code ,,
2224,313a6cbbc613f3488b97d3903c91753d74b7a135,ascinated Box <FascinatedBox@gmail.com>, 2015-01-13 19:43:59 -0800, , parser remove comment captain obvious,,
2225,873a375e640e3f2a468bd7b1a4f73bdfdaea8820,ascinated Box <FascinatedBox@gmail.com>, 2015-01-12 15:56:32 -0800, , parser symtab move variant type calulcation parser symtab feel parser better equipped calculate resulting type variant well figure variant used used make take awkward make type without type stack code symtab like,,
2226,904e153efb4e2bf0ccd8f59e7259466e97452105,ascinated Box <FascinatedBox@gmail.com>, 2015-01-11 13:17:38 -0800, , symtab new flag type simple clear way testing see given type need resolved generic need replaced known type used,,
2227,1d7f784d05fc7b12928f0640173aaa7411660b1a,ascinated Box <FascinatedBox@gmail.com>, 2015-01-11 11:32:46 -0800, , lily understands basic single inheritance fix begin restriction class inherit class scope name clash would looked subclass superclass well super check within subclass builtin class except exception derived one inheritable may change future class require generic laid consider first second case first demand sent  restriction unlikely change greatly simplifies generic without property first type may type initialized second class inheritance doe allow filling generic known type example first inherited second wherein second sends type integer may fixed future good thing commit exception implemented user code bootstrapped parser mean lot code initializing exception class seed builtin class init symtab gone lot seed stuff removed symtab resulting simpler init fewer thing class init much code removed symtab symtab seeding even teests added line count net negative wow tidbit debug fixed property show properly regard nesting previously superclass property subclass property property would show coming superclass possible inherit exception implement custom exception class created single tuple value new call super new super new able pull value subclass built instead creating new value say merging together expect lead lot memory saved future,,
2228,a9de835dfc0271a62abd1a94c613f4460bdef8c0,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 17:24:22 -0800, , symtab kick keywords symtab organize shorthash make teensy insignificant speed boost keyword lookup importantly keywords loaded internally parser lookup internal parser parser use keywords ever use keywords suppose,,
2229,149c39a177f9fdba6bebc11950971320c161408f,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 16:46:23 -0800, , symtab remove key_isnil drop amazed thing crash happy whoop,,
2230,cbd53b03a777557c0ccf89a6fdf0cb88e4841da1,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 16:30:11 -0800, , symtab turn start documenting struct field,,
2231,2e7af661e12cd3cbf75a1f048217fd14ac7e4653,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 16:09:14 -0800, , ast make sure tree_oo_access start result null important emitter check result oo_access make sure tree potentially double evaluated running call,,
2232,afac11647c30da8838b5a1bc2a46e6d014255db4,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 15:50:54 -0800, , ast split readonly defined_func literal one tree potentially one either two thing,,
2233,0f33b4fa3e69a4c975688d276d18fda3b03753cc,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 15:16:30 -0800, , ast remove prototype function longer around,,
2234,7a0f6fcf768326783d4b0a8b0f2d47813ca37bbb,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 14:57:52 -0800, , ast simplify lambda state freeze fix leak lambda workout turn lambda need save restore save_depth parser run expression save depth allow yielding thing freeze state necessary also fix leak nested lambda making sure last entry next forward toward new entry finally add test worked anyway make sure lambda nesting flexible horribly break somehow,,
2235,a1b690d9a1cebf78ecd7f0fc88b2548aacf5aab9,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 14:25:45 -0800, , ast better document various field different structs,,
2236,c31c16b0c43dfb54c81c3aa59e41064bac9cfa3b,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 13:46:04 -0800, , ast link new tree top front change beneficial corner ish case lambda within lambda prior commit new tree added front available start became start past make difference thing way make difference lambda take tree available current body processed lambda two different lambda within first may allocate tree front second would able see unnoticed normal stuff slight gain corner case,,
2237,f3dc33dc3e41e7e45564b1da28eb8d7c79092cbd,ascinated Box <FascinatedBox@gmail.com>, 2015-01-08 13:26:10 -0800, , ast unify save chain allocation code helper,,
2238,7ba319b8abb86d53c4609181684a0a1606f0539d,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 22:57:50 -0800, , emitter resolve type handle function test somehow type resolution never encountered function doe return value argument mismatch expected type bare function ... would crash whoop,,
2239,2f29279ac7100d37f5b09d22a9163358d5b16898,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 19:52:20 -0800, , emitter pull branch emit_assign first place,,
2240,fa651385f8032147c3b768efb49371d81d0b9283,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 19:28:19 -0800, , emitter bugfix case hit generic looking something else realized resolving generic getting pretty rare read unlikely case type inference could fail work subscript assign add test,,
2241,8148308c11f39783ca43b2f76fffa435ce171006,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 18:03:24 -0800, , ast type ast typecast_type plenty problem ast type instead ast result type past eliminates potential issue,,
2242,d2c58dbbf3711ddaee8fe40bef9f4239886a4252,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 17:22:46 -0800, , tree_var tree_global_var push_sym push_global_var external change clarifies thing since tree_var actually global var also push_sym always forcing cast lily_sym necessary cast done ast,,
2243,9df8279d3aeabbf122e85331be57c8559a5d7af2,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 17:08:31 -0800, , ast touchup argument collection bit ... particular make abundantly clear attempting collect situation tree totally fine doe nothing,,
2244,00c8e22298c09b30763bbeb857f5be420ea39544,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 15:27:30 -0800, , parser use membuf variant variant creation one make parser create variant class instead creating incomplete class later get filled variant info also remove return nothing using variant class used,,
2245,c348b58309b16f7327d498c0f1b54a470858ee3b,ascinated Box <FascinatedBox@gmail.com>, 2015-01-07 14:29:12 -0800, , export ast string pool stuff lily_membuf external change aside slightly increased memory use default pool string size internally standardizes string pool ast emitter using together something core part interpreter use additionally took opportunity make clean api using thing instead accessing internal stuff nasty way,,
2246,744cbb9c9f613932e0caea46dc6ae543584cbcc2,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 22:15:32 -0800, , emitter document field lily_emitter.h,,
2247,cac10fc0a7b70e21533c5c7f77ed4a6d9227335e,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 21:37:43 -0800, , emitter use match_sym hold symbol match block,,
2248,14491cd180e98aae88dfd74f8a2cd14ee4260b18,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 21:20:50 -0800, , emitter self inherited block state block state already store self nested class make sense emitter carry self info well drop always pull current block,,
2249,ad7cbe575b2745b103d115791eed26a21803d2c6,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 21:17:21 -0800, , emitter current_block block shorter,,
2250,1dbabb06363e3efd0b1753e57d7d0d495298d10d,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 20:32:22 -0800, , emitter remove unused first_block parameter,,
2251,171bcf1545a72b6b7b2f95d5564d2748367b1c53,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 20:22:44 -0800, , pack structs efficiently wpadded added build flag fix dropped interpreter basic memory use amount used parse absolutely nothing 8800 byte bigger like around big goal simply shuffling thing around,,
2252,74c598d3f28eced26261dd2a7686918af033ab5f,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 18:35:19 -0800, , interpreter signature sigs type time away special name type subtypes container type involved make much easier think interpreter type inference type involved instead well ... signature inference guess checked everything compiled test everything lined since feeling lot stuff going get blasted anyway,,
2253,15bd0fcaf526cda809775170c23e2663d997cba9,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 17:42:19 -0800, , define keyword declares function fix dislike fact function used create function value inside parameter define function value changed realized sounded like underlying problem consistency within language whole def short taste define nice size feel also get across happening definition function taking number argument giving back value maybe either  internally pretty easy externally requiring adjusting seems majority test first two big syntax change making closing release,,
2254,25093482c606b5005255b61d59df0eb11aaf546a,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 15:43:26 -0800, , emitter type infer variant enum info fix example option option integer opt none case part see option integer result first parameter option integer none seen get matched option integer thus everything proceeds ,,
2255,4ae634c4bffdb5888db2cef53e32044662532f55,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 14:45:00 -0800,2, emitter call infer type info given type resolved without new test complains argument type type string incorrect within call resolved type integer giving pure would incorrect  new test complains argument type integer type string correct within given call first argument establishes type integer,,
2256,4d7ac06682771a806628ea26fb788e1e7be1061a,ascinated Box <FascinatedBox@gmail.com>, 2015-01-05 13:36:40 -0800, , emitter assigns run left infer type gently peek giving thought turn evaluating ahead determine type left assign numerous problem lambda may evaluated twice closure land emitter able easily unwind info var closed call damaged problem call yield valid index ... call implicit self yield valid index new solution peek different tree could valid index result teensy bit duplication maybe fixed later,,
2257,77d2d4abbf2004765f3320881ba549ad66a27a13,ascinated Box <FascinatedBox@gmail.com>, 2015-01-04 00:24:12 -0800, , emitter return must default based expected signature otherwise function say want return list integer attempt return cause default list bad,,
2258,99bde9cc408bd07efce4d6b0627125082cdc9ac9,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 16:42:56 -0800, , lexer put common part entry setup function,,
2259,a83d4e4ef2034d031768d3047b6646de1f4e275c,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 15:35:30 -0800, , use strerror_r describe file fopen mentioned reddit cbraga thanks,,
2260,b1a4e3b2eb11821459e668471ac076d38239f9c1,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 15:19:06 -0800, , combine msgbuf error stuff raiser hand control new function called actually process varargs msgbuf function used formatting call function overall slight reduction code size lily_raise longer cheap clone part change anything raiser used format string consistent debug reason decided use caret capital letter would clear deferred fprintf custom,,
2261,ba89a25c55cae7d437fb63efe70fb1dff4e01d52,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 15:01:14 -0800, , emitter literal value longer wiped eval ... reason subscript result calculation subscript checking need literal passed well instead grab tree original_sym property literal still side effect commit fixed subscript assign type inference,,
2262,450522dd63b5c8cfea109e49c71dfbd27617d714,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 14:29:15 -0800, , finally solve pretty way subscript assign need run right left also need infer type based left easiest way evaluate left throw away result eval later many case eval complex however area might subscript assign doe run right order well type inference properly additionally subscript mark resulting storage assignable left subscript assignable necessary get invalid call result assignment test fail right,,
2263,994f04c85581e4009da41c45a4ccef7b39b2229d,ascinated Box <FascinatedBox@gmail.com>, 2015-01-02 14:10:50 -0800,64, emitter never allow become null instead make sure always one definitely unused storage within emitter get_storage responsible getting storage also ensuring least one valid last storage reason simplicity never null never reason loop upward fix storage start storage becomes available first time think overall reduction code get_storage also simpler also fixed huge problem,,
2264,84381a2842baa577f709dba8e8d49021360d2dc3,ascinated Box <FascinatedBox@gmail.com>, 2015-01-01 19:37:36 -0800, , emitter globals assignable sub assign evaluate globals though globals may loaded storage global still assignable reason nothing would want assign directly resulting storage instead work along thing would eval assign handle globals instead calling eval additionally subscript assign broken done within call left side global evaluating global var tree using index global local context ever also error case subscript assign simpler,,
2265,012aba07508d22adb4ecd9aaa9dcc2085482a65a,ascinated Box <FascinatedBox@gmail.com>, 2014-12-31 00:04:56 -0800, , emitter complex left simple assign wrong evaluate check valid handled simple assignment evaluate broke thing end,,
2266,4e753aa8dfa255fb93e1b83c04dfc7a1f4f28c2b,ascinated Box <FascinatedBox@gmail.com>, 2014-12-30 17:00:51 -0800, , printfmt use integer double lily fprintf act like use special formatting flag probably going confuse people know confused ,,
2267,7362e34617418e66ac9d8ec19437c5efee6dd832,ascinated Box <FascinatedBox@gmail.com>, 2014-12-30 16:58:35 -0800, , main runner accepts tag default main runner assume untagged mode test written mod_lily tagged mode default allows people simulate tagged mode would without actually using mod_lily,,
2268,0c98c0b69e81455c91dbadcaee9be2f8b3e11745,ascinated Box <FascinatedBox@gmail.com>, 2014-12-30 15:29:50 -0800, , update readme.md,,
2269,76d3eb0d3005a4876675b9f917d62d888dbffc66,ascinated Box <FascinatedBox@gmail.com>, 2014-12-30 15:26:34 -0800, , guide starting lily new front page lot added lately reflects,,
2270,839046929a7ca783c7dc697eb8e1a0e14cad921f,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 15:52:35 -0800, , scoped variant turned hard fix enum class considers variant member scoped entry start name decided based first name start doe first name start subsequent entry must start  decided syntax want obvious reading code enum scoped entry considered class name enum class option ... however decided believe something could easily missed reading code scoping requires use variant option however rule matching name must apply given enum class something else requiring would unnecessary credit feature inspired reading rust thing,,
2271,57f454e2baf543596fedb480811e4a0c9a9c1cb3,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 15:07:59 -0800, , parser disable attempt declare variant variant converted enum class type pretty much everywhere emitter parser allow declared variant usage somehow end enum class value,,
2272,74f95c93604062f325aae5a16e4364c8e4400d7e,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 15:00:57 -0800, , emitter better argument type mismatch error fix,,
2273,6ab4741bb22a8b8558b976a8d9bc8a754a10a8a7,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 14:06:20 -0800, , parser lambda body may expression returning nothing,,
2274,388539ec8b763a4cadc0de7cd9986ce6a5d9e482,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 13:54:22 -0800, , emitter bad typecast syntaxerror,,
2275,8b277b342163ea2e6b88cbab146357d3e1b0e93c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 13:51:22 -0800, , properly print message keyerror,,
2276,a71cad60267703370ee9dc15e74065b1b78c7608,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 13:47:15 -0800, , error error err leftover long ago seems missed conversion make extra sure get everything time,,
2277,94a0adc2f8a30c2a8c246e9c2ae621fe3e73298d,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 13:37:23 -0800,51, lambda show trace properly finally fix thing happen string loading take name used filename lambda error line number patched original file get printed trace main runner remove printing entry start lambda since lambda information parser make sense output commit declare lambda working properly fully admit useful without able become closure however believe done different set commits address function closure includes lambda,,
2278,a7ed306a4e5a68ec24561d01f0f6c06a9c73ca19,ascinated Box <FascinatedBox@gmail.com>, 2014-12-29 13:06:09 -0800, , functionize error dumping case another module need later,,
2279,be1a601c513b7721a45c82b0be5a6b6e2ad4faf9,ascinated Box <FascinatedBox@gmail.com>, 2014-12-28 02:34:26 -0800, , lexer lambda handle string concludes 41. last thing needed lambda line number patched real underlying file case error parser lambda,,
2280,f9d947ec4a4f19dd267042b743a8b618b03df1df,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 11:50:52 -0800, , remove unused variable,,
2281,7c1a5fe3b6b7f5014e37877dff3ab79b97746e1d,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 11:49:19 -0800, , lexer remove unused field lily_lex_entry,,
2282,029693e6ebaaa60a11d7000ede0b372ec72eca2c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 11:38:39 -0800, , emitter cut code setting sigs bottom function reason code needed various tree eval function emitter attempting resolve signature given however did_resolve passed tree chance something resolved resolved longer necessary yay code,,
2283,a2bee59a452f96c2f7fc5f143fa17d177f38baea,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 03:02:46 -0800, , add test nested match,,
2284,86d095a2cf5bc1ef9a8646c8cd25f495e6fb8ec6,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 02:31:26 -0800, , parser check name clash builtin function causing function .concat global concat function defined think safe assume builtin source smart enough redeclare symbol,,
2285,f497ef3942f0ba2ef720c577e1c94ae7d5195164,ascinated Box <FascinatedBox@gmail.com>, 2014-12-27 01:45:56 -0800, , parser variant class name need unique test,,
2286,9bcb5e90e60d1726376134b8fc9ed71c355790e5,ascinated Box <FascinatedBox@gmail.com>, 2014-12-26 16:07:38 -0800, , lexer greatly simplify scan_string original idea good use strcpy copy string simple instead byte byte copy however resulted complicated maze reallocs copy end simpler copy byte byte time roughly size used part reduction trick learned since first put function,,
2287,272b44965d8bac6962fffb49d2c660cc25b299f5,ascinated Box <FascinatedBox@gmail.com>, 2014-12-26 15:16:55 -0800, , provide use lambda ast string pool may resized expression within lambda happens lexer shallow copy result shallow copy moving right would bad new function lexer create deep copy lexer also responsible destroying happen,,
2288,8e4b5d13b392074ca96dcc94a494572ca39b91f0,ascinated Box <FascinatedBox@gmail.com>, 2014-12-26 14:50:39 -0800, , second pas lambda much better work lambda hold expression instead single value parser able resolve unresolved type lambda empty lambda work correctly reason different lambda start first bar seen different token supposedly lambda type infer result creates based given type type inference information bubble two test added test lambda info type inference requires args build signature result interesting one test generic able resolved argument processed essentially type able inferred left right across argument list pretty cool,,
2289,7ec9cd7e6a24179e67446b04e4e0d78138c9de63,ascinated Box <FascinatedBox@gmail.com>, 2014-12-26 14:28:19 -0800, , blastmaster still dead also _p_assing test,,
2290,36d578b6c978b474a89e287f6db462d13769519e,ascinated Box <FascinatedBox@gmail.com>, 2014-12-25 19:45:17 -0800, , emitter eval_tree fourth param did_resolve pretty certain potential double resolving able nail code show doe happen sample code added test commit generic resolved function may map generic spot function may specify called generic order case resolving type twice yield something nice given proof set list set list however resolved caller function resolving result type inference incorrect pretty bad,,
2291,6bf58c609d46b9e313b89fe29eedd33bf02e0a12,ascinated Box <FascinatedBox@gmail.com>, 2014-12-25 17:45:19 -0800, , initial swing lambda stuff work doe work freezing thaw ing state ast pool body lambda run expression verified comment multi line lambda trailer end function written lambda yield value theory nested lambda theory seems lambda smart enough clobber storage currently used exec  lambda currently assume single argument type resolution performed argument expected sig null result new sig lambda bein built properly describes return string within lambda intend redo string collection lexer since seems pretty terrible error message weird runner need updated show lambda also copy line number lambda downward,,
2292,0266b20c9c095c6e3ef77704b9de330e6aeb82d2,ascinated Box <FascinatedBox@gmail.com>, 2014-12-24 22:47:05 -0800, , emitter new macro caller check size right tried something bit complicated emitter got invalid read valgrind turn lot caller using instead sig_stack_size provide macro likely fix numerous problem process,,
2293,d1b4a092bb8cee54563bf013d75db32a92f29272,ascinated Box <FascinatedBox@gmail.com>, 2014-12-24 22:40:38 -0800, , hey typecast broke back whoopsies ... add new test make sure happen,,
2294,2a7a92bca231c4ed15e4f0ebc2f73266337bc304,ascinated Box <FascinatedBox@gmail.com>, 2014-12-21 14:19:28 -0800, , emitter call careful double resolve signature,,
2295,1796f09513e3a946fa4d168af60031d296da7b95,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 20:57:08 -0800, , emitter ... maybe tuples use thing within tuple may want lay signature call generic process tuples unrolling signature one time possible second pas fill signature build right tuple signature test added work patch,,
2296,42eea07eb985293604cee0726cf37fb94e9bfde1,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 20:02:14 -0800, , parser prevent name conflict class prop method could document order resolution top head believe method come first however since new language really hate idea people able yeah work,,
2297,d743df4affc267fd87faa73a3bd1037d9cfe7f58,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 19:32:50 -0800, , parser stop checking impossible thing declaration parsing,,
2298,5454faf6ac4c37ae461870ee5063b3c2d309a202,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 19:17:14 -0800, , emitter bare variant may satisfy generic consider enum class option none option option integer previously emitter would look inner function would yield integer nothing wrong would see want use integer resolve wrong bare variant allowed caused code complain option option integer assigned integer illogical call see bare variant trying resolve generic first put bare variant enum class based info variant allows code work,,
2299,7cc14d26fbf73886b80216ad55d2d31fa2bab666,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 18:11:58 -0800, , parser demand enum class least two variant,,
2300,eb4db87bb9aca8fce2dbcbc1ad6b5a51f6e2b9e1,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 18:05:17 -0800, , call infer result parent sometimes consider class container ... container integer container new patch interpreter would say container new default unknown however smarter way thing use value wanted left assign container integer infer result would work patch interpreter build container integer assignment work fine,,
2301,8ae95737760e3ae4318d5a9f4654427b3be16355,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 17:10:43 -0800, , lexer teardown first entry exiting ... caused bug spent considerable amount time trying chase  problem parser forward token might run situation first file eof lexer enter file recall builtin command read fake file done test patched say filename str string holding string concat interpreter bootstrap think active file,,
2302,9777696525e31a7c05bb91b5172c123ee1d3ad37,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 15:13:43 -0800, , emitter function block exit touch emitter sig stack declared function share common set generic signature resolved bottom signature stack reason may even dangerous,,
2303,2bb68427ed4cdebe6590c4ac45a5f5dfa994477a,ascinated Box <FascinatedBox@gmail.com>, 2014-12-19 15:04:40 -0800, , emitter upon entering function mark sig stack ... turn function emitter called supposed called upon function entry ensure emitter signature stack would ready number generic available turn function incorrectly written also called fact looking history never called ... whoop anyway proper action allow declared function share common bottom emitter signature stack generic adjust set call damage information additionally generic assigned generic recent commit realized proper thing within generic function generic var quasi known etc known common type assigning something generic information concrete type say integer incorrect known correct additionally test added make sure empty list default left side contains generic patch emitter would invalid read complain list assigned list,,
2304,81b08c2e76780e498645766127a709549b115f2a,ascinated Box <FascinatedBox@gmail.com>, 2014-12-18 15:44:01 -0800, , emitter generic parameter function autoresolve consider function function value value though generic function generic function type quasi known anything also since guarantee able allowed proceed short local function generic function generic automatically resolved happen otherwise function integer integer return  would work credit http scala_school type basics.html mentioning work scala thereby making notice problem,,
2305,8d148116535131c6e840de06e70e55466ddc146d,ascinated Box <FascinatedBox@gmail.com>, 2014-12-18 15:38:29 -0800, , emitter oops print name function passed args argument issue previously printing function passed args though anonymous untrue add test make sure silly problem come back,,
2306,ca33422f63aa32f5d3d83b02a6d4394d96a7b0be,ascinated Box <FascinatedBox@gmail.com>, 2014-12-18 15:00:06 -0800, , emitter better proper type inference static thing consider function value1 value2   scenario function unknown first pas second pas known list type information used inferring proper type second argument work value hash many value tuple additionally fix case previously work went crashed emitter tuple case hurray type inference,,
2307,576407aff0d46f04ff77e7e815a3b2434b24ca5c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-18 11:03:56 -0800, , emitter properly calculate signature generic property old function copy pasted must never checked crashed anything new function added smaller simpler calculate right resulting signature new test added make sure break,,
2308,cd6e9456bddde48dc8dba4977dab38f48f7535b4,ascinated Box <FascinatedBox@gmail.com>, 2014-12-17 16:00:51 -0800, , emitter use type inference list variant result known consider enum class option none list option integer none none none patch allows emitter look type wanted first default found needed three none value supply would default otherwise previously would create list option right side fail assign two value,,
2309,e8be57c724728e26c8d1dd9224e5f29da0bb1411,ascinated Box <FascinatedBox@gmail.com>, 2014-12-17 15:41:47 -0800, , emitter fix typecast eval straightforward particular writing rebox inline unnecessary function,,
2310,a3d0a42980ab6f1d72e0472b4fdde32d451c8ef5,ascinated Box <FascinatedBox@gmail.com>, 2014-12-17 15:35:25 -0800, , emitter replace old emit_assign mostly internal latter function wrap around ensures bare variant never directly put without put enum class value first probably bug two fixed nothing else consistency,,
2311,0522f4a038bddb9405415e7c1e8972b23e6510e4,ascinated Box <FascinatedBox@gmail.com>, 2014-12-17 15:17:47 -0800, , pre commit hook.py fix printing digit newline end accidentally forgot put terminator end printing failing test failing crashing test coming crammed together also part hundred test likely way,,
2312,8ae7747610d04a6322ca5eac49614f4e1b33950f,ascinated Box <FascinatedBox@gmail.com>, 2014-12-17 15:14:29 -0800, , emitter ban nested assignment condition assignment disables thing like well condition assignment reason entirely personal dislike kind thing banned added two test one checking condition nesting assigns assignment chain however still allowed assignment within non assignment tree 100 test pretty nifty,,
2313,7705f5c842f763fd58fc402151d7dfda4780f04a,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 23:50:16 -0800, , emitter simplify call evaluating explain interesting case figure emitter call arg evaluating template matching checking signature equal turn right move added test demonstrates one generic function called second one second one pass integer without template matching even though signature match interpreter think integer satisfies callee satisfied caller also kill fold call arg evaluating well simplifying whole thing overall,,
2314,1a2201d18131feb276103b8328b3673cec57828e,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 23:26:52 -0800, , emitter simplify template matching little bit,,
2315,6dbb7b074212429d9efc0e5f5f2b81981f47ca6b,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 23:06:08 -0800, , pre commit hook.py print test fail crash otherwise spam going get worse,,
2316,6842c095a7fdbc015b34e258ab149f966f86309d,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 22:42:57 -0800, , emitter better error message wrong number args wrong type previous handling wrong number args wrong type account variant crashing went completely bonkers class method failed used properly great thing done checking call argument eval_call handle argument start thing however class method thing used crash anymore nice test added check new type error stuff also fixed single test message little prettier,,
2317,ea54187a73e471db4aef3997baf59cde2cf0c4a4,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 12:09:01 -0800, , emitter eval_call check ast result null long time ago parser used handle call something known function making tree_call setting tree result particular function var changed parser expression handling written calling known function call would longer special case short always triggered therefore useless,,
2318,82a0e260033d4acc87504ee575c12531f9e6063c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-16 11:51:40 -0800, , match landed finally close commit introduces support match operation work like conditional block match expr ... match block must always multi line block decided made case condition within match automatically multi line pollution case match expression assuming enum class option none work decomposition value require one identifier since one value contained lily following language offer match feature doe require type specified doe type inference variable test added make sure match try decompose variant without value decompose something decomposed match block incomplete message printed saying well variant cased value end match case scope none case see decomposed value declared within case match case specify code intentional reasoning behind case without code way saying need anything however missing case assumed mistake forgetting add case added another variant enum support use say indicate decomposition value ignored intend add point future,,
2319,f0c58cc0ebf4a95d9e1dae4bae8c4384fdd5ba9a,ascinated Box <FascinatedBox@gmail.com>, 2014-12-14 13:19:20 -0800, , emitter return fix variant enum class value test added,,
2320,eb4e28ee89cec204f3dabccab729ea02861536e4,ascinated Box <FascinatedBox@gmail.com>, 2014-12-14 12:50:57 -0800, , emitter yeah tuples variant tuple building account variant enum class mistake last commit unfortunately tuples jump annoying little hoop fixing emitter sig_stack_pos reason function tuple build call want use sig stack nothing bad though added test tuple defaulting,,
2321,c4e0ae07ce6f0d90c7e13810bec1bd65af130baf,ascinated Box <FascinatedBox@gmail.com>, 2014-12-14 12:16:25 -0800, , bugfix hash integer failed problem embarassingly simple hash building checking hash value mixed making case however checking value expected making value anys case test added,,
2322,8a065e816b527d605b7f4231d2754cb525290177,ascinated Box <FascinatedBox@gmail.com>, 2014-12-14 12:02:36 -0800, , interpreter handle static list hash variant previously interpreter would allow bare variant static list hash problem interpreter like bare variant consistent previous behavior event static list value static hash variant enums interpreter call function fix type variant enum class value agree type becomes type value collection variant generic enum class missing missing generic filled type happen say option enum class static list contains none none none would become list option variant enums agree type variant put enum based information alone missing generic information filled usual value put  additionally check result input value variant input variant variant first put enum class value missing generic filled type put prevents bare variant visible within inconsistent part interpreter symtab bug fixed calculating siglist_size constructor return signature fixed crashing code test show break anything test added make sure variant defaulting correctly within static list static hash,,
2323,d0c569c84bde6e06fd93d6f088c6099b449add1c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-08 14:34:29 -0800, , emitter handle complex enum class finally went back fixed check proper enum variant really ought thing template_check doe check variant match use type rest commit possible thing like var none automatically worked option bug fixed symtab variant result calculation writing generic position fixed calculates proper variant result addded new test complex enum class updating existing test use var none test new thing,,
2324,3d08e66d1d82c3478fa04496cc4a2ce158b9656d,ascinated Box <FascinatedBox@gmail.com>, 2014-12-08 13:25:17 -0800, , interpreter handle variant generic consider setup enum class option none function option first option second case would nice none none integer none string commit following properly work reboxes variant proper enum class value added two test one check regular calling one test using varargs work part commit adjusting symtab finalize_sig mark function signature contain enum class one parameter make emitter job checking thing easier,,
2325,1d1f87f2fe5e2925a2762adddad78e0c3e4eddf9,ascinated Box <FascinatedBox@gmail.com>, 2014-12-08 12:32:04 -0800, , emitter template check doe partial match enum variant suppose got setup like enum class option  none  function option first option second would nice none none none none emitter allows doe box value sorta broken idea variant generic offer allowed generic defined used first case result option defined integer none first case allowed doe conflict current understanding option containing integer second case never defined fixed transformed function see option third case none doe specify generic doe passed option integer patch doe restrict improper definition however  error defined integer attempted defined string unlike scala lily smart enough make case sure want behavior either,,
2326,91e81bdf217c846038241901770f5beb45558481,ascinated Box <FascinatedBox@gmail.com>, 2014-12-07 22:08:08 -0800, , static call builtin function work test added keep forgetting fix basically string concat doe work couple thing lexer rewinding position back far yielding wrong token parser calling next token static call start expression test added make sure happen,,
2327,ff78611a0754503401349d67b4be4a6fc6aa5a03,ascinated Box <FascinatedBox@gmail.com>, 2014-12-07 01:50:55 -0800, , variant rebox variant enum target example enum class option none  show work pretty simple bare variant allowed integer boxed option integer value assigned hold option containing change comparison would result,,
2328,bfeb1f813f7a126b92611c0117d7e303e786b932,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 23:33:40 -0800, , update .gitignore new lily runner lily_fs lily_cliexec,,
2329,6378fe505ead9f1a52aed0b4b45d90ad02265d5e,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 14:52:32 -0800, , emitter handle unfilled generic return example function list var previously emitter would simply crash given replaces unfilled generic case type list,,
2330,e325eda61ac6bfc862a4477ff005e4084f917489,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 14:44:11 -0800, , testing unified fix pre commit hook.py old one divided different failing test like sanity.ly blastmaster.py ability read triple hash comment figure test dump stderr allows read test without user manually check error yes remember missing blastmaster.py pre commit hook.py check passing failing importantly crashing test test run fun test stop middle,,
2331,cdbf450d867056e3805ae31534d6d32a7a0cc1ed,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 13:47:03 -0800, , code_pos volatile trace weird otherwise example test fail infinite_eq.ly test show wrong line number without simple change,,
2332,b7a86d4e61704bf29857565edd4229e3b8c43565,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 12:45:54 -0800, , sanity.ly dead passing test turned smaller test thrown test pas somewhere reason change easier isolate exactly failed lot varying small test one constant problem sanity.ly test something would break internally idea start cutting reveal problem,,
2333,409fd0de3ecd18c5892241769e0eec00585a70b0,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 04:43:20 -0800, , extract basic assignment sanity.ly also bug fixed intended extract stuff sanity.ly one functionizing within sanity.ly revealed bug bug subscript assignment broken global var fixed basic assignment added pas test,,
2334,f884e0d3679720c82ba08797ad96f3dfa5642782,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 03:50:24 -0800, , begin extract passing test pre commit touchup blastmaster.py pre commit hook.py contains test fail soon completely purged blastmaster.py check output considers output failure temporary hack much like comment sanity test one big change made main runner lily aka lily_main.c run file tag mode eventually include option allow tag user want partly test would need tag testable,,
2335,82af9ff4452c98cbf4ae3d8a1ad490a52ee62c95,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 01:02:44 -0800, , lily_fs lily_cliexec within lily runner new runner lily standard going forward also seemed rather silly two different runner pretty similar work,,
2336,9b07433124543badb069d121063b12984d18fed6,ascinated Box <FascinatedBox@gmail.com>, 2014-12-05 00:04:31 -0800, , var work variant class,,
2337,45d1f58a78a716cfccfedef6d763723334cc149c,ascinated Box <FascinatedBox@gmail.com>, 2014-12-04 01:01:21 -0800, , variant class value show able,,
2338,0ee43ee28128543afa424e515f1a22c071e050e9,ascinated Box <FascinatedBox@gmail.com>, 2014-12-01 15:33:45 -0800, , assumption user var nil gone assumption baked code beginning combined change today mark massive change lily work ingrained lily since made intermediate value still nil reason still fair amount nil checking code never die however user never see value nil commit wave goodbye user level nil ity,,
2339,81126b20b537c655e90f198da54d6ab12d67d711,ascinated Box <FascinatedBox@gmail.com>, 2014-12-01 14:16:38 -0800, , primitive value condition case previously condition using would work condition must either integer double string list list considered truthy based count element string considered truthy based size case literal optimization fixed reflect previously empty string truthy o_jump_if longer check nil ity unbox value another step toward erasing nil ity,,
2340,3c70bbb989390052d181f9a0543c600dd76afa6e,ascinated Box <FascinatedBox@gmail.com>, 2014-12-01 13:08:28 -0800, , massive change variable demand initializing assignment enum class landed possible use option none represent variable may may initialized lily demand variable initializing assignment expect change since really wanting long time test updated initialize variable assignment emitter disables variable used initialize deleted one test involved nil ness dying concept interpreter,,
2341,7c6bc3e269c19f34aec5db9c3a6edb7faee58d84,ascinated Box <FascinatedBox@gmail.com>, 2014-12-01 01:25:32 -0800, , another try enum class ... turn misconception enum class variant work functionality change though thing seem likely crash time enum class create class instead needing class additionally need use new create instance variant mean usage enum class variant simpler going option class example possible use instead sometype new importantly none used place nonetype new unfortunately variant kind break previous lily thing one trying show variant take args even though look like function show function code since function used create variant value variant used wrong number args either use none would invalid like non showability variant enough roll back variant related test updated warning variant related code still fragile careful,,
2342,1f2e9e098e07aafb7ddb95f45ccb83284440475c,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 23:20:33 -0800, , ... loop use ... instead simplify language ... lexer also raise syntaxerror event getting message implies user wanted ... case typo getting rid possible token also nice,,
2343,d51281bc43091631d38fda49afcba2e51e6d9cb4,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 14:50:26 -0800, , debug remove unused local definition,,
2344,dfb4309026d8b575f7d124283bf83a205ee0fb58,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 14:40:10 -0800, , o_assign o_fast_assign ref _assign combined o_box_assign reflects fact regular o_assign rare integer double also simpler kind assign o_box_assign handle simple ref deref situation well enum class assignment assignment reason combined ref assign common opcode trigger assigning one var another var common interpreter fold lot stuff avoid write assignment drop opcode simplifying interpreter bit nice,,
2345,84d563942d8b827b0b555184cd48e744e02100f5,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 14:23:13 -0800, , remove automatic conversion integer double instead add double to_integer complement new integer to_double done integer double conversion could prove strange combined enum class additionally feature never recursable list integer would auto converted list double example felt like hack time additionally felt rather useless test removed test pas sanity.ly,,
2346,a592920c8b333524c399013d50afce91c277641d,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 14:00:13 -0800, , drop isnil nothing enum class better,,
2347,245042b50bfcbf8561b5f0429f1cb6149e1ccb7e,ascinated Box <FascinatedBox@gmail.com>, 2014-11-27 13:29:19 -0800, , enum class directly compare subtypes consider someval possible someval  someval also possible enum class option class sometype nonetype member compared directly sometype nonetype instance downside temporary hack put place keep crashing garbage collecting enum class instance fixed time real solution properly look class signature determine circular couple test added test pas sanity.ly well,,
2348,5174c8e4551ea463b8a05b07c68629118dc14669,ascinated Box <FascinatedBox@gmail.com>, 2014-11-25 21:53:03 -0800, , nasty bug fix collection hash really broke ran bug accident trying add enum class related stuff took long time pin causing actual issue pretty simple collect version hash teardown tear key free anything hash value refcounted say integer however normal deref hash teardown doe right issue garbage collector triggered right setup right time,,
2349,b0c96f53f0f5056f1c65879f4a0b1d0b498eca87,ascinated Box <FascinatedBox@gmail.com>, 2014-11-25 19:24:54 -0800, , emitter fix oops loop prep size calculation,,
2350,7ba7980b7fadae1d14bf40a0898e553eb35ad926,ascinated Box <FascinatedBox@gmail.com>, 2014-11-25 17:04:12 -0800, , option possible first pas enum class unstable commit possible define enum class style union different class type enum class currently doe allow specifying function come time syntax pretty simple assuming sometype nonetype defined enum class option sometype nonetype  instance created given value like option integer sometype new nonetype new beware new code tested much defaulting may broke stabilize next commits,,
2351,7c29ab3bdda0ed8ae88056ffc7f2de53e5b20b2d,ascinated Box <FascinatedBox@gmail.com>, 2014-11-21 16:27:10 -0800, , aft realloc null function malloc c99 7.22.3.5 specifies realloc null act malloc allow work causing aft falsely fail recent build interpreter think generic function mapping doe certain case ran aft sanity.ly issue,,
2352,7974d1a5bf121b55816f1f4798876c407b779c13,ascinated Box <FascinatedBox@gmail.com>, 2014-11-21 15:56:03 -0800, , finally internal code text fix since beginning lily internal function scooped using parsing ... pretty awful define print something like used  symtab read function varargs one argument mean return type return minor problem verbose easy get wrong scanning code pain big problem scanning function completely impossible set based module interpreter use module could guarantee would used another module want namespaced stuff nope stuff user also meant mysql type module would unable say use regexps new system code written would lily except function take name parameter name would discarded anyway may change print function function print string internal function use text define thing instead allowed removal pretty awful code bonus thing still old way exception class inheritance yet also pave way interpreter defining core stuff within text future may make higher level kind class exception based one defined code sent interpreter simplify symtab current job additionally make importing easier future file push pop bug solved,,
2353,1fc786429d0a5f78e2f7b844be3aa06e4e1b73f1,ascinated Box <FascinatedBox@gmail.com>, 2014-11-21 15:43:52 -0800, , lexer longer hit_eof calculate line bump eof seen reading function check eof start line start line meaning code terminates eof instead newline bump line number newline otherwise bump line number lexer hit_eof causing problem loading unloading file since loaded file always eof end would cause original file never increment line number last line eof end cutting away hit_eof bonus,,
2354,e2b4c11d06d68dea73291f30f6f5cdbfee4201c0,ascinated Box <FascinatedBox@gmail.com>, 2014-11-20 13:29:02 -0800, , lexer make literal symtab instead parser middle trying fix noticed problem newly added nesting lexer entry problem parser depends concept like call forward token mean many function expect next token called already instead scan starting worked rather well across interpreter allows scanning pull extra value pull even necessary one example return friend make sure next token used multi line statement problem come saving restoring lexer state since parser depends forward token proper way ... save restore token done word entry skipped bad got near complete patch forward token breaking example .size function ... forward token mean entering size parse definition current word function information lost returning saved entry anyway lexer creates literal instead parser ensures literal information get list entry sort also allows simplification parser plan couple touchups commit,,
2355,897921aeb2cd8b176a716fbfa396d7855582817f,ascinated Box <FascinatedBox@gmail.com>, 2014-11-16 12:28:45 -0800, , lily_syminfo.h name better reflects file become grouping type central part interpreter,,
2356,ddbc9f89ac94d101a4f0e592e7b618d269646477,ascinated Box <FascinatedBox@gmail.com>, 2014-11-16 12:18:20 -0800, , fix function inheriting generic recently broken test added function defines number generic function inside doe inner function inherits number generic allows calling inner function generic parameter without extra verbose example function function value test added pre commit hook.py come back,,
2357,405d8cd76234de23dc02423ec380f527f95f69f6,ascinated Box <FascinatedBox@gmail.com>, 2014-11-14 18:25:24 -0800, , parser simplify function parsing bit,,
2358,12571ee344bdef513d2d0f07091967d943912f33,ascinated Box <FascinatedBox@gmail.com>, 2014-11-14 18:06:55 -0800, , remove junk todo whoop,,
2359,88974afad7b24eed1e8202103969b501b1b5cf93,ascinated Box <FascinatedBox@gmail.com>, 2014-11-14 17:11:16 -0800, , lexer enter multiple source previously lexer allowed trying enter file string something already entered however would result crash unfortunately import mechanism critical part import mechanism plus part needed  additionally decision made important future lexer honor mode first file entered enforce tag policy entered file allow parser load tagless thing without save restore mode adding mechanism nifty thing future nothing right,,
2360,447a327e94e1d99fcbfa6e4c6f7743de9cc21bc9,ascinated Box <FascinatedBox@gmail.com>, 2014-11-14 14:51:10 -0800, , simplify line scanning currently three line scanning handler one file one string one apache apache file change apply  seen rewrite additionally seen done otherwise multi line string could different value depending newlines written editor python seems thing realloc check one place use size longer added,,
2361,e9c66f6e0bd76cbec93703d74426bcf260e63dc5,ascinated Box <FascinatedBox@gmail.com>, 2014-11-14 14:46:20 -0800, , lexer remove unused cc_str_newline cc_str_eof,,
2362,f9cb6ecf53022d6aea1f300318e86526766cd0cb,ascinated Box <FascinatedBox@gmail.com>, 2014-11-12 13:01:01 -0800, , fix better defaulting test added sanity.ly package get sending signature work wrong also binary comparison sends left side instead expected signature allows comparison empty list rather nifty added test sanity.ly make sure problem come back,,
2363,b0b8e7faccdf0ad42fecd339381c13283b437d88,ascinated Box <FascinatedBox@gmail.com>, 2014-11-11 15:42:46 -0800, , finally better defaulting landed fix better defaulting expanded work hash tuples took way way longer thought would take basic better defaulting seem work nuanced thing may broke fixup part emitter tried post repair type information gone since type fixing done list hash tuple building may slight decrease memory use sanity test building wrong signature ignoring anyway patch open syntax thing list list any_matrix work given wanted  work get empty list integer list integer finally list start empty test added sanity.ly check different part defaulting beware clever thing like generic defaulting may break point fix issue think clever thing better test defaulting,,
2364,dadefcd6233e5b8300462bc904b7940a1e43410d,ascinated Box <FascinatedBox@gmail.com>, 2014-11-10 14:03:05 -0800, , first attempt better defaulting list seem work begin emitter idea floating adjustment generic signature emitter sig_stack_pos adjustment considered use current generic call important necessary change allows eval_build_list look back determine generic additionally function entered reserve many generic eval_build_list access right consider list integer list list integer l.append resolved list integer empty list integer made function list val l.append val concretely known generic adjust bit ugly need way list evaluation able access generic really good part seems try fix back part type matching away part already removed list case issue possible list integer vital later declaration mandate assignment left need work hash tuples opportunity make signature building emitter bit better simpler case documentation need mention list type information use,,
2365,8a6bc8b45b4629b99c26d539781597bf34125924,ascinated Box <FascinatedBox@gmail.com>, 2014-11-09 23:49:37 -0800, , rip function decl regular decl parsing apart ... since beginning lily proper way enter function call collect_var_sig cv_toplevel cv_make_vars later changed take starting class class came along added enter function call collect_var_sig collect function type time enter function mention functionality stripped collect_var_sig proper way enter function internally call ... parse_function par header actually enters function also simplified logic handling generic stuff function outside change internally function two thing cut two function use collect_var_sig collect sigs part clearing bit mess generic brought ,,
2366,eb8bfe080de95b16e7c3dc29db43d420835a15b7,ascinated Box <FascinatedBox@gmail.com>, 2014-11-04 16:20:18 -0800, , remove invalid cliexec target pre commit hook.py test well,,
2367,3f27e52d2785ad73f8fe558a03ca46e4d2ed8cd6,ascinated Box <FascinatedBox@gmail.com>, 2014-10-30 14:49:59 -0700, , make sure nested class actually know work test added class integer class integer  var new   var new snippet reporting new take argument one first thing done make sure nested class constructor automatically get self parent class ... wrong calling new started crash turn reason loading function scoped class trivial fix added test pre commit hook.py prevent happening,,
2368,8d6093e649fcb39a5818a27239406e8837184423,ascinated Box <FascinatedBox@gmail.com>, 2014-10-29 15:56:33 -0700, , crasher fix passing varargs generic test added one bit simpler last one function list value ... function  crash varargs assumes use signature callee signature list varargs varargs came along fine happens one generic type list build contains list want instead building list really giving later try resolve encounter impossible generic given found thus interpreter crash fix simple passing varargs list template entry first arg given used build list signature resulting list value get passed see list patch list integer passing see get list integer value happy test added pre commit hook.py come back,,
2369,8a8a82d0c2734099e28b1c36cd5d546889bd96dd,ascinated Box <FascinatedBox@gmail.com>, 2014-10-29 15:00:06 -0700, , fix crash class constructor take container test added trying add better defaulting got ... side tracked trying add something would needed realized lot testing generic stuff decided run couple test crashing class listholder list value list value value listholder integer holder listholder new would crash infinitely recursive loop fun trying figure resolve type value crash caused one two bug bug generic function called type given parameter figure var storage inside function never fail generic type always require assignment constructor listholder present interesting problem list given need make resulting point make long story short resolution account point came point instead properly mapping resolver understands need generic find one parameter must must dig obtain bug class property resolver need resolve something would walk individual sig needed resolving far okay ... found element needed resolving would send parent complex element bound crash infinite loop yikes semi related also fixed debug instance dumper property container type like list get list value indented properly look wrong otherwise test added pre commit hook.py come ,,
2370,5c4edd6157a05acf281b2055c6f9309b1a3fa489,ascinated Box <FascinatedBox@gmail.com>, 2014-10-28 13:05:03 -0700, , crash fix umm ... generic building list test added crashing function  function list return    reason crash complicated may seem responsible mapping parameter type actually given integer case see four unique signature work list integer think anyway one important know emitter said build map convert concrete type unique one actually get let say get ... initial collection collecting signature parameter check signature map already given signature many spot used came time hard type calculating probably figuring would attempt store signature map far ... crash many slot already used fix rather small test case added make sure silly thing happen,,
2371,d43a0b84edb2bfbe7278edd81fe43cc43843f56b,ascinated Box <FascinatedBox@gmail.com>, 2014-10-27 15:34:31 -0700, , emitter track assignability test added fix emitter previous allowed silly thing like assigning result function call made sense assignment would targetting storage therefore affect anything also fixed easy thing couple test added pre commit hook.py make sure become issue,,
2372,0eb2237b7a5b1e94f6e467bdf57483682aa886cd,ascinated Box <FascinatedBox@gmail.com>, 2014-10-26 13:05:19 -0700, , fix list integer .append crash caused bug append tried swallow binary right side argument append tree updating parent since append see parent assignment would use null result causing crash fix given assign keep crashing compound ops test added pre commit hook.py keep occuring,,
2373,c852d67f7f462f7eba5e642f19213c6d0a0ee6d8,ascinated Box <FascinatedBox@gmail.com>, 2014-10-24 16:10:39 -0700, , emitter write_build_op really ought use line_num provided always first argument empty list,,
2374,bac259e506c0c7612c1104556aeb81924d034ba7,ascinated Box <FascinatedBox@gmail.com>, 2014-10-24 14:27:07 -0700, , emitter eval_tree take signature thought thing like build list hash tuple use figure type use default currently doe nothing right though ... starter commit,,
2375,fe216c1a8f58fed368a2f20c68ba345480e07f64,ascinated Box <FascinatedBox@gmail.com>, 2014-10-18 01:00:09 -0700, , fix two potential invalid read thanks aft,,
2376,668bd1773a5b0f0e578e4859b1c8d1733833ffc6,ascinated Box <FascinatedBox@gmail.com>, 2014-10-17 23:54:37 -0700, , aft assumed range default option fix aft assumes start max number allocation allowed allocation mean running aft sanity take lot time additionally aft take file string single pas given max also found bug aft considering non zero warning failure condition found couple issue interpreter fixing also running new aft valgrind blastmaster longer doe pas sanity done directly running aft sanity,,
2377,45728eb022814b9a0e61ce78dd90b38bf18fac1f,ascinated Box <FascinatedBox@gmail.com>, 2014-10-17 23:41:04 -0700, , merge branch master http github.com jesserayadkins lily,,
2378,0d1cf8a99ead578aa9ea930f6715e5199a4e3b40,ascinated Box <FascinatedBox@gmail.com>, 2014-10-17 23:36:27 -0700, , add subdir object automake init newer version automake complain bunch otherwise,,
2379,58863a63260c31a74bb5c7b60a8ffa9f2883cdaa,ascinated Box <FascinatedBox@gmail.com>, 2014-10-15 17:18:54 +0000, , attempt modulo zero trigger otherwise trying divide zero crash,,
2380,9d3c5da9c8c0716deafbc3ac90df953e6ca3a275,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 18:48:51 +0000, , emitter loop iteration longer target global var fix previously loop assumed var given local loop within __main__ resulted loop treating global var local within __main__ kind harmless within non __main__ function global var register spot interpreted spot local register could result say loop thinking counter also loop start peculiar case global var high register spot ... assuming would crash anyway fix create storage iteration o_set_global prep loop pas easy,,
2381,183621dd6cc2fc6a5d9af9bb996d5545a61c7237,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 17:31:16 +0000, , symtab lit_chain instead lit_start lit_top necessary literal sort order also simpler,,
2382,e030b5e1af35455d2ecc859c0352125c1ccb7c17,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 16:59:21 +0000, , symtab drop literal init stage longer required longer necessary emitter eval proper function getting integer literal good riddance,,
2383,9ec1bf0e50e02dac81dfa0c388b87896cd0e8191,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 16:50:08 +0000, , emitter assume literal position evaluation instead use symtab literal grabbing hacky,,
2384,304441fe316a6b7f860028bccb0f8b33c30b09b6,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 16:04:19 +0000, , emitter remove unused generic_adjust,,
2385,193ac9289c36b0b9e742a4a7c34e343734c2603f,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 15:51:15 +0000, , emitter remove impossible check within eval_call turn simply impossible think function call call global var function depth get marked readonly thus loaded func table tried using function var still could trigger check seriously think possible remove last user get rid,,
2386,670bb46e53f177369ddcb7783ed66f771257fc2e,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 15:28:44 +0000, , debug remove unused d_count_depth unused o_package_get set_deep gone,,
2387,c3f433b829fdc06f8bb458e6400241eb331c9a18,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 15:22:46 +0000, , emitter simplify global check assign evaluation,,
2388,9195ac3adbd254a26b5d59f3ba612305b17c9ffa,ascinated Box <FascinatedBox@gmail.com>, 2014-10-14 15:18:31 +0000, , emitter simplify eval_assign compound expression handling,,
2389,435c08b737cf6b772ae30e93ad6d62c6da52e938,ascinated Box <FascinatedBox@gmail.com>, 2014-10-11 01:42:08 -0700, , destroy package get set deep used long time ... hopefully ever come back good riddance,,
2390,c87fd4ff88fcb44164f2da89e6deb0abfb178df7,ascinated Box <FascinatedBox@gmail.com>, 2014-10-10 00:15:25 -0700, , finally make package assign account compound ops fix tested adding integer value sys taking since value actually necessary value worked calling working additionally package_ set get _deep gone used long time ever feel like fixing broken code good riddance,,
2391,598ff26932d6a95b2e0070a96e8c5028531a01a5,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 21:59:58 -0700, , compound operation work instance value yay still work package value though,,
2392,b6f9fe0aa46a27b3bd1513081d04fc60fcd00012,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 21:02:07 -0700, , ast remove unnecessary setting result null,,
2393,ebca5eb4b6d4ff3c51378c83d13f858f3a748b80,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 20:48:18 -0700, , set recursion limit 100 call fix probably user settable ... done later,,
2394,02ac0cf8ce5be059310f01b77ac10a8d8a023daa,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 20:13:00 -0700, , var keyword landed real fix time add test pre commit hook.py prevent breaking ,,
2395,9f9c7b319603c43fbfd7550bff8d59022635a9b3,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 14:22:42 -0700, , class possible get class function via without calling useful thing like show someclass new determine new function class trying example also tie making syntax language flexible,,
2396,c3804b5136ea9fe35c934f7acf9454a0291da286,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 14:05:34 -0700, , break sys argv add test sys argv usage starting prep __main__ prep previously fine symtab var became recent first kind linked list meant sys loaded using would cause crash code handling multiple package parser gone going anything package yet sure exactly want package waiting import specifically,,
2397,305ad685fbfb73815d762e7ec628299ff0678ef9,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 13:38:48 -0700, , pre commit hook.py add basic test class,,
2398,c1fc7854c8bee697d2a81ebf7d4cce6d3a6714cb,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 13:29:12 -0700, , pre commit hook failchecks return break continue end make sure checking return break continue end multi line block actually work,,
2399,de9264f2657aa254bff893fa1b53197f8d0d66de,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 13:23:11 -0700,62, add basic class test sanity.ly revert property part attempt fixing broke assignment class property completely well actually var local globals seems fine lax adding test time get,,
2400,90ee8bf5c7304fd34be4efa1122c248ab89335c3,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 12:48:21 -0700, , emitter fix weird space indent think caused mass removal pulling top function old write_ macro,,
2401,d4bcd6adb390a53ebf0558fd2a791b02eaac599a,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 12:41:44 -0700, , emitter fix oops setting result prop assign,,
2402,45f3772128963aca8649256bb6f8cddb155aa9a4,ascinated Box <FascinatedBox@gmail.com>, 2014-10-09 12:35:38 -0700, , var keyword landed fix long overdue since think initially mentioned reddit introduction thread back anyway var allows creating variable property without explicitly stating type type inferred example var created integer var created list integer class abc var created var safeguard also added make sure thing created using var used initialize var,,
2403,c1ff7925d552e1049ddd51e3f4aee2ae23915974,ascinated Box <FascinatedBox@gmail.com>, 2014-10-08 23:00:16 -0700, , begone compiler warning message,,
2404,dc3be1212ca5ed741fff002911bd23b76e96cfaa,ascinated Box <FascinatedBox@gmail.com>, 2014-10-08 22:47:18 -0700, , disable return within class constructor,,
2405,7a47e8eacb458e9b0519a1df359bdcad3b595952,ascinated Box <FascinatedBox@gmail.com>, 2014-10-08 22:44:08 -0700, , return break continue must end multi line block make dead code code block operator syntax error forcing taken care granted trivial easy thing check hard pas opportunity,,
2406,aba1c98c78b20347766e04fa3a6492127d9c4e8a,ascinated Box <FascinatedBox@gmail.com>, 2014-10-07 21:27:23 -0700, , property assign allowed invalid type whoop logic bug instead,,
2407,4f03d63d81712ceaa0eeaaf9586e8d13a0550853,ascinated Box <FascinatedBox@gmail.com>, 2014-10-07 21:12:24 -0700, , class generic access class property work yay commit possible ... class point value integer value value ... ... point integer point new p.value show point string point new s.value asdf show result work expected nice take much work either much left class think top head save inheritance,,
2408,15dcb97e6ffd0cfec432b3f0f76b8c6a72a6df5a,ascinated Box <FascinatedBox@gmail.com>, 2014-10-07 19:35:52 -0700, , class first pas combining generic constructor class creating generic class pretty simple class point value value value patch interpreter recognizes point contains element point integer valid class identifier point new case work constructed instance confused type wrong generic class still technically work step toward right direction,,
2409,0fbe53f49e27a45ceb1fbc137e5a1b755c27ed4e,ascinated Box <FascinatedBox@gmail.com>, 2014-10-07 16:51:13 -0700, , class class nesting work properly inner class scope exactly function work function inside another function declared inner function longer visible outer function close,,
2410,0f14ee2ea75e5f505ce1e6b162c6bd9d02808f8d,ascinated Box <FascinatedBox@gmail.com>, 2014-10-07 16:32:18 -0700, , class declaration must toplevel within another class conditional class silly allow sort thing,,
2411,a02bbdd0be0f9cb38f1e813085809cb72430fcd4,ascinated Box <FascinatedBox@gmail.com>, 2014-10-06 12:54:51 -0700, , class prevent single letter class name class ... would really confuse generic,,
2412,7092fb3f8fbf0d45dadc333b302cbea786a701f2,ascinated Box <FascinatedBox@gmail.com>, 2014-10-06 00:20:55 -0700, , class class possibly circular value get entry additionally class get tuple marker work perfectly instance layout doe handle class possible yet generic class also possible yet,,
2413,66cc2d80bdf559e020e7e1a217703c42ff2402d1,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 18:44:10 -0700, , debug make show print generic function print show function instead function like new way clear function generic also easy,,
2414,78f47bf376f3f76b0272e6ac5523726ea9d05237,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 18:22:39 -0700, , generic call argument checking match generic previously thing like assign return would use type_matchup fix type ... type_matchup also included code unbox template template matching bad mean thing like trying assign generic value work call evaluating try work generic proper time figure generic call evaluating doe type matching well generic stuff type_matchup longer doe generic stuff naturally also trying fixup static list hash tuples thrown function within type_matchup ... sort hope eventually get rid putting away everything else attempting call tree type right work commit generic variable properly assigned within generic call,,
2415,9557f4267c14d69470747dd3cb2c12373fd31ab6,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 14:08:53 -0700, , generic generic entry scope appropriately function val1 available nothing function val1 val2 available nothing  longer available  longer visible function nest within generic able scope well tested class deal generic yet probably crash ignoring make class work generic soon,,
2416,c83063eac1fffbcfa6dd7b8419d40e25d1fc31b6,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 13:24:59 -0700, , emitter call evaluating put new function call evaluation become complex enough repeating normal collect vararg collect longer feasible,,
2417,3f79684a825c0bec78044708ac98ddb8fcc46b08,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 13:02:47 -0700, , simplify eval_call little bit,,
2418,aa4a66869842649c69a76b4600a6e25cc21c9a7b,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 12:16:36 -0700, , generic fix template resolution eval call return oops resolve first one call checking template_pos sig non zero instead template class template sig template second issue call returning grabbing wrong signature wrongly assumed could pull call signature instead properly using emitter sig stack final issue updating register count generic function resolution,,
2419,a70acf8c4db7e41762c8d465a68bc6737361aeab,ascinated Box <FascinatedBox@gmail.com>, 2014-10-04 00:45:05 -0700, , generic local var storage resolved generic function really really big chunk getting generic working parameter generic function would get proper type local var storage generic function would left likely crash behave strangely function list lst tuple list list lst lst work called list integer tuple list integer list integer done rest generic getting different part emitter stop sig sig template matching adjusting generic available function enters exit,,
2420,467c6fa5db8e3407be9e56b3449740dd6c469e5b,ascinated Box <FascinatedBox@gmail.com>, 2014-10-03 18:48:33 -0700, , generic generic variable require initializing assignment consider function value without determine type value actually map also like eventually language require value declaration along option remove null ness,,
2421,bc4e5e786fa3f7eebde29fbcd4bd5e9f81d59a36,ascinated Box <FascinatedBox@gmail.com>, 2014-10-03 18:15:23 -0700, , drop exception seem stable ... maybe paying attention much removed ago actually,,
2422,21dfa2d628053a989404d5cadf568d9bf6032ed4,ascinated Box <FascinatedBox@gmail.com>, 2014-10-03 18:02:47 -0700, , generic first attempt stuff work stuff fragile work function myappend list lst value list lst.append value return lst  interpreter able call function 1.1 2.2 work fine however various thing work generic interpreter able handle generic function parameter handle var temporary inside function use generic generic always start sequentially alphabetically may changed allow name generic future sort doubt thought like consistency forcing ... hack done symtab keep scan_seed_sig damaging template parameter part problem scan_seed_sig removed generic stable need bandaged symtab fool parser switching sig template class parser asks generic class name rather nifty think,,
2423,8f4db71c86ba27efde9503d1852636931ac08257,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 17:16:31 -0700, , condition optimize always true literal fix might seem like silly optimization first glance good example useful ... without patch pas loop load constant check truthiness rather wasteful patch load optimized everything else seems work fine note condition always false ... still load constant perhaps fixed point future,,
2424,806c081cc82dff530f500def77a4bc7ce5f9bb56,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 16:00:35 -0700, , implement calltrace list tuple string integer fix decided put alongside show additionally bug mention result list tuple string string integer two string reason done import thus filename print update calltrace import work handy function determining current lily call stack could later used debugging function show call stack calling class function determine calling class function note built function integer part might fix later lily different add foreign function entry call stack may also make calltrace add trace later,,
2425,e05cb8508d34423fd55e88d72d4b1341eb26f37b,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 15:46:57 -0700, , register info longer hold class info show properly dump funcs think former really working pretty sure would stopped working function got table function table anyway even work better way get class name function given better way print class info particular function within show_function lily_debug access function called directly print class info tested list append make sure work also save little memory function longer spot register info holding class information,,
2426,79b595f7960567c3f665bd6f9fec81262e1a8d08,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 15:36:11 -0700, , merge o_build_list o_build_tuple one opcode writing o_new_instance class realized two could merged making initialization loop use sig since always proper thing list never change tuples always particular index hurray simpler,,
2427,b45d0e53236d618c7d94f3c598b638410b25766d,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 15:11:37 -0700, , parser function capture recurses capture fun fix fun bug class  class point function function point point new p.g error got arg expected  huh defined within class get implicit self inspecting showed ... class point entered ... function processed class point exited ... function processed problem function collection simply continuing loop function exited closed yielded caller point thought closed recursion used handling function collection also tested example lily_cliexec committing make sure work also implicit self passing seems okay consider user defined class stable enough push origin close,,
2428,13537ba822aa3c3a635cf3f9bcd51ad0a47980b3,ascinated Box <FascinatedBox@gmail.com>, 2014-09-30 14:28:18 -0700, , class call member function automatically get self fairly simple function call already add function first argument later pick simply check tree holding function get self instead count argument doe basic test prevent call global function getting self test need improved user defined class nest well inherit consider class function class inherits work since inherits defines   hurray class starting fragile,,
2429,5355b551d48df28bde372567485d74894d79927f,ascinated Box <FascinatedBox@gmail.com>, 2014-09-29 21:33:53 -0700, , class fix oops broke integer small oops within declaration parsing big deal also moved helper parse_decl shared function keep thing neat decl parsing touched tiny bit check token instead lex token much,,
2430,ea14184b8cc892172daaf7382929d5f6ab9be2d0,ascinated Box <FascinatedBox@gmail.com>, 2014-09-29 20:59:32 -0700, , class value passed constructor longer property actually care much remove making property declared within constructor become property ended liking automatically making thing property every property prefix used also user defined class property linked first last property class holding start class hold prop_count number property instead start start used anyway,,
2431,05dd8271d4aa5f0097c315308f87ccdec0f1f298,ascinated Box <FascinatedBox@gmail.com>, 2014-09-29 18:37:32 -0700, , class property creation get set working fragile class point integer integer integer interpreter creates property within point class within constructor point property available done obvious property class used global local variable somewhere idea borrowed ruby outside class accessible instance point using value notation interpreter also check class make multiple property name additionally interpreter requires value creating new property accident future intend assignment require value option class none value provided class still fragile least getting better,,
2432,43f708057aa5de80500d2e0213ef0b40a9ab0a8b,ascinated Box <FascinatedBox@gmail.com>, 2014-09-28 18:41:03 -0700, , class function implicit self class name trace function defined within class assumed self first var currently accessible name valid var name self reached via future additionally native function var created class name class name exception raised inside class function print class name name making clear part class also made block contain self intent use make nested class possible nested function possible nested class well,,
2433,1a51b27d28d7f9abf5ac6997868d524e1436dfb5,ascinated Box <FascinatedBox@gmail.com>, 2014-09-28 17:26:24 -0700, , class function defined inside new class linked previously class point integer integer function would result made available within point class pulled function provided point however thing work class instance first value example step right direction though,,
2434,e570a739e2c12c0681bb9b859d5cc8ecf7d2b16e,ascinated Box <FascinatedBox@gmail.com>, 2014-09-28 15:49:30 -0700, , show nicely dump instance value fix print name property well inherited print tag current class point class parent property simply printed valueerror class exception parent property listed inherited exception code bug however class property parent doe property printed parent intend leave class stable redo fix property change somesuch user defined class printed backwards whoop,,
2435,7c2d0821f49ac433b84574812f475c0bb42d98c9,ascinated Box <FascinatedBox@gmail.com>, 2014-09-28 01:16:59 -0700, , show function opcode debug comment touched decided turn function since rather thing function instead keywords later remove isnil maybe class finally come though long time think,,
2436,bf3dd0af31a30cf503ba1bfbf18296174694b202,ascinated Box <FascinatedBox@gmail.com>, 2014-09-27 23:42:20 -0700, , make show painful awful comment updated done prepare called function also o_new_instance o_get_function work properly show decided use giant table hold opcode information opcode front entry easily sanity checked looping opcode table checking opcode_table tried splitting show function horrified mess resulted backtracking make show function,,
2437,ee9047fac3a08c809721e0390b0a1855a6545cbc,ascinated Box <FascinatedBox@gmail.com>, 2014-09-25 13:19:12 -0700, , first pas user defined class careful unstable example class point integer integer point point new p.x scala clear inspiration user defined class syntax however subtle difference point instance obtained using point new instead new keyword constant default intend either various part class work however intent improve class one part time instead trying everything demoed work left adding property declaring variable within new class setting within new class update property point new reflected built class function within class get added class class scope close class properly marked potential circularity property potential leak class class work may creating new var new class add output nested class ... probably crash inheritance kind positive side show work class instance rather neat,,
2438,8809eb0e02b6a2fe7341a796a01422ae54793bde,ascinated Box <FascinatedBox@gmail.com>, 2014-09-24 15:25:47 -0700, , symtab hold var chain top recent previously variable held var_start var_top __main__ var_start new variable added var_top searching variable globals current var reason change class function variable linked newest oldest taking top var away symtab chain var done setting symtab var chain next entry fixing next old method much difficult writing basic user class ran wall needed make new function contains class scope however var new added option start __main__ search var new possibly expensive tell emitter class entry class entry eww prev var block entry get previous var kinda weird solution seemed like easiest one externally change doubt would even change speed,,
2439,5cb9cdf489dc077ebcba120ccf56cd6de29a9736,ascinated Box <FascinatedBox@gmail.com>, 2014-09-23 16:35:28 -0700, , class property accessed fix class property access done x.y similar method accessed difference class property tend callable needed code bit rough support get set type restriction private protected public touch access arrive finally tree_oo_call oo_call general called tree_oo_access oo_access respectively,,
2440,300e764b26e02dce24c0267c1f7052183cc349b1,ascinated Box <FascinatedBox@gmail.com>, 2014-09-23 16:29:10 -0700, , whoop fix exception bug last commit,,
2441,aaba0b3703f30916bc43cf10a6b58125a040e29f,ascinated Box <FascinatedBox@gmail.com>, 2014-09-23 14:57:29 -0700, , fix property init parent setting symtab first one always broken managed noticed gotten property access yet second one broken symtab started using linked list went unnoticed reason,,
2442,b2945fdc3b0b3b8724af05145285cb107cd58ace,ascinated Box <FascinatedBox@gmail.com>, 2014-09-23 12:34:18 -0700, , fixed lexer issue causing 10.to_string fail fix also added pre commit test make sure issue return,,
2443,8deb2e82491c5d6947799a35e9170d201d1c3dd8,ascinated Box <FascinatedBox@gmail.com>, 2014-09-21 01:32:04 -0700, , integer to_string fix,,
2444,e8181f98bd1ecc13397d171cde8479962cbba7af,ascinated Box <FascinatedBox@gmail.com>, 2014-09-17 12:46:20 -0700, , fix list apply broke method removed time add test sanity.ly make sure problem happen  also make sure prepare register callee function instead hoping right never done really miracle list apply ever seemed work,,
2445,3f9b2fbb17bbc9ff22d284dded5c5085700f02a1,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 17:00:56 -0700, , change lily lily fix newer format valid xml thus checked xml validator,,
2446,8b24f812495e779e8236be4807ecf975d6f3c879,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 16:31:49 -0700, , bugfix compound ops global crasher running compound check global global need loaded local register worked added test pre commit hook.py causing crash,,
2447,3f67f849fba847fc828fca9c0a32d4606e197e5b,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 16:13:44 -0700, , symtab hold class linked list begin,,
2448,421cd7ff009978194aa29a67081f09caf4bcfe02,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 15:39:07 -0700, , symtab drop symtab lily_main also remove comment register register,,
2449,d128d17463c0ee82c5e22a5f3944e9665a8cd9b8,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 15:31:50 -0700, , emitter finalize longer try load builtin function function class always readonly var chain loader ... skip everything readonly,,
2450,b4ba3140711c9a8efe5a37bc9a4941d2b5cc173d,ascinated Box <FascinatedBox@gmail.com>, 2014-09-16 01:31:13 -0700, , debug fix oops caused crash trying use show unsigned value test etc etc,,
2451,cc79ec1b6be0627370a2b8174e71c24c9cb0196d,ascinated Box <FascinatedBox@gmail.com>, 2014-09-15 23:42:07 -0700, ," bytecode bit amazing memory use reduction sanity uintptr_t bit system assumed memory reduction would significant bytecode take lot memory thought signature value took significant portion memory wrong number reported valgrind sanity.ly 402,872 402 ... 208,370 208 ... close half entire memory use far beyond expected memory saving made sure break mod_lily wow ... wow",,
2452,d0294fcf57bf5b86227f613e23aeb537a9cfe966,ascinated Box <FascinatedBox@gmail.com>, 2014-09-15 23:12:11 -0700,43, kick function literal bytecode fix made twofer easier kick instead booting one another commit commit table literal table function declared function builtin function function value still work though bytecode refers index particular table instead writing address literal function immediate benefit allows mod_lily work broke commits back made write_ macro write_ function within emitter believe possible reduce bytecode use bit ints considering bytecode longer store index however aiming bytecode bit seem like unreasonably small size,,
2453,57f5da216ce38554befc8e250c75578e56e42f9c,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 19:36:52 -0700, , fix show reporting invalid read showing function additionally fixed __main__ signature one null function take args extra signature instead unused null ever slight memory decrease since sig __main__ truly function mostly get rid invalid read show,,
2454,f5131d94dcaa4183dfe7639fbafa3f646164e8ec,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 17:35:34 -0700, , symtab cleanup reorganization finally fix main important module much better shape first started also much aware part need redone terrible skipping debug even though well aware great reason intend change show function well break code dumper individual function whole switchtable thing getting really really nasty time add new thing,,
2455,0a06545f427af0539d761f747867b2205ef66d80,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 16:41:35 -0700, , reorganize function comment exporting noticed quite function marked static properly well change functionality reorganizing stuff,,
2456,86d40eb60130d1789fc4a8ca5562eb5c74403769,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 16:19:44 -0700, , merge common binding mod_lily lily_bind done making exception instead copy pasting big chunk code mod_lily.c also changed function put common space take symtab making signature pas mean bind function symtab lookup okay,,
2457,f27bf8a96059b97a0519ae6ef4e228ba3f709260,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 14:06:58 -0700, , pas vm_regs build list tuple use vm_regs like everything else doe simpler way,,
2458,85d5d7f27df35610080ad34885bdcf3f041988d9,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 13:52:44 -0700, , fix crash trying tuple assignment o_set_item thought tuple implemented like hash easy fix rather embarrassing added small test test pas sanity.ly really tested,,
2459,e70b07493fc83cc4a74425e2688eabbea1e99132,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 13:29:26 -0700, , stop implementing assignment use fair code came however lot duplicated stuff sort thing make easy hidden bug somewhere o_return_val actually bug properly handling returning removing thing plain redundant,,
2460,a13635bd2f6628e7f7aabb4b4a1eaad3a89355eb,ascinated Box <FascinatedBox@gmail.com>, 2014-09-12 00:30:31 -0700, , replace ref assign bonus ref_assign bug deref ref always wrong value assigned one ref ... collected dead value given ref bad,,
2461,af4a359d3181831285c95e5d109f8583a7c2edd6,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 23:32:24 -0700, , ast cleanup header bit drop ast arg_top much easier simply loop find arg_top set since nothing else arg_top outside ast definitely saving ast field removal ... waste time removing one field save around 200 byte memory laughable current sanity.ly show use nearly 400k,,
2462,f5652ed19d49aa5baa25ca753a3c77f5cec7c2f2,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 23:18:27 -0700, , ast cleanup comment reorganization,,
2463,d76501f5902a35263d6ce37e61fc516615314db1,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 22:58:28 -0700, , ast hey unary use merge_value possible merge unary value current check done impossible doe happen parser explaining merging unary like binary started register added probably accident added time thought previous code sane well ...,,
2464,569d1dc40be199fd82382ca4fe80d15790821644,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 22:46:39 -0700, , finally take argument third argument initial value initially done hack old expression engine handle function call expression rewritten static access function used changed third argument null time good thing,,
2465,a3564e548e59a04d1d57ce710b3a82bf02579290,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 22:09:59 -0700, , parser actually ... use __main__ signature default new funcs ... using integer cause condition possible leak memory parser creates function var bogus signature emitter enters creating function val parser type collection hit oom symtab see integer doe free function val thanks aft,,
2466,3ca17eb3f087ab9c40875ec34294093269c18462,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 21:53:53 -0700, , symtab try_new_literal three helper symtab export creating new literal save calling class creating raw value specifically creating literal unlikely would used,,
2467,6d93eba1aa5543dfb8ce1823d29296c21165f20f,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 21:43:30 -0700, , drop use instead,,
2468,847a6e15868f671721f5989627086f93a83dba75,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 21:39:14 -0700, , ast remove unused prototype latter call used since parser expression handling rewritten,,
2469,a0c151289a1086a6b69e532852e28b2471dfbe82,ascinated Box <FascinatedBox@gmail.com>, 2014-09-11 21:03:35 -0700, , parser use integer sig new function default previously parser calling resulting one new empty function signature function declaration made ensure never done multiple blank function signature made signature integer one swap signature var created need result fewer allocation within sanity.ly nice,,
2470,e4b12b24bfd04f51b0c3ad4774ebcb75cec0052c,ascinated Box <FascinatedBox@gmail.com>, 2014-09-09 12:38:30 -0700, , parser comment make lily_parser parser_loop function called directly caller may set raiser jump caller may set file better let called exported api stuff,,
2471,259bc4e48a7a587c0ed2c7a7d4b9d46608fcd18d,ascinated Box <FascinatedBox@gmail.com>, 2014-09-08 12:57:48 -0700, , parser single line try cleave huge comment block,,
2472,cfb861eabadc722a968f97ccd93ff60be425e278,ascinated Box <FascinatedBox@gmail.com>, 2014-09-08 12:49:30 -0700, , emitter optimize done right global o_get_global patched write local value instead storage get written local value,,
2473,63e91acccc3911dd3df0695c4afa29d28ca6d16f,ascinated Box <FascinatedBox@gmail.com>, 2014-09-08 12:41:39 -0700, , parser type value push ast properly previously parser using regardless depth var technically correct ... except ast mark var global instead local var difference assignment global unlikely optimized emitter optimizing function optimization small one last instruction rewritten write local instead emitting storage writing local,,
2474,8f9b63328395ae2dc4fbe58bfa819aa888b3965b,ascinated Box <FascinatedBox@gmail.com>, 2014-09-08 00:57:19 -0700, , parser twofer cut elif else fix unknown bug bug elif dispatching elif else directly bug interpreter would report extra block popped twice pop elif last expression pop pop returned pop fixed making if_handler dispatch elif else loop making elif_handler else_handler leave block state alone extra measure condensed if_handlers block pop pop end add rather strange feature single line block every condition last one empty fully admit seems strange may wanted future removed future however if_handler would need check emitter expr_num single line block single line block two expression per elif one condition one statement route thing like break continue return get expression bump expr_num artificially otherwise break wrongfully trapped,,
2475,c7ba74ae89b71bad1a3c0d820776c74dc094dc15,ascinated Box <FascinatedBox@gmail.com>, 2014-09-07 22:49:42 -0700, , parser unify inner type collection type used separate loop list hash tuples versus function size two loop unified state stuff however type collection function function duplicate siglists longer malloced thrown away similarly case pretty wasteful minor change sanity.ly memory usage another part reorganizing internals interpreter,,
2476,c8ee3db6e47fc585747fa266301606678523eadd,ascinated Box <FascinatedBox@gmail.com>, 2014-09-07 01:41:10 -0700, , symtab take flag shuffled count back flag come class count end make last two parameter act range sort start many seems bit sane anyway flag added vararg sigs work otherwise function integer ... ...  function integer ... case emitter parser updated appropriately,,
2477,fdb178e18547c00706731fb6cfd66bccafe4dd13,ascinated Box <FascinatedBox@gmail.com>, 2014-09-07 00:15:18 -0700, , parser completely rewrite expression handling long old thinking expression expression one two state need value need binary long time part worked nicely ... outside inside two large growing function lot continue break statement trying figure something joke new syntax also introduced recently consider static call access member class using class name like valueerror new function called may used value two function model expression good handling also possible access member class may may callable syntax look like valueerror valueerror new test .message case message string attribute valueerror class callable however may callable member class later two function model good handling ... part exception branch include problem check left parenth parenth caller must continue value handling otherwise break binary ... access subscript want myclass myclass new abc 123 .funclist think parser could handle could handle abc .concat  enter new expression handler expression done single function helper three important state demand value might need value want operator operator subscript left parenth call binary comma etc function call handle thing also get address state easily fix state information also allowed bad token handling condensed one area instead scattering bunch unexpected token stuff expression loop perhaps best part new expression engine pas occurs single function fprintf trap becomes extremely useful also think issue still haunt new expression thingy finally patch emitter eval_call eval tree_readonly done temporarily actually evaluating replaces result hold var corrupts error information short version new expression function magic awesome,,
2478,ce7db79df7883f3dc3fe74ab95704a47014e5c66,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 18:30:18 -0700, ," symtab parser split ... fix idea behind grabbing literal value symtab supposed see literal value doe literal already value returned instead know blindly making another literal well ... turn random point important bit missing ret lit needed break since ... integer double literal unique sanity.ly beforehand 3,930 allocs 432,309 byte used  3,365 allocs 409,709 byte used 565 allocs 22,600 byte used additionally broken function require lily_raw_value class allowed code removed parser nice",,
2479,a5d407f8de36ce086de4ffcc9076b90a6025432b,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 18:06:12 -0700, ," parser allow block handle non word expression allows thing like whatever whatever might useful repl later even might useful chaining expression together consider something like .each ...  1,2,3 .split ... ... okay got nothing easy might useful later prof relatively useless also easily removed",,
2480,59052d3b250fdd7898fcab0d080cc83b2da66a9e,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 16:47:44 -0700, , emitter organize emitter header file bit,,
2481,ce9368e81370f437fbb20437f00393ad06435bae,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 16:35:59 -0700, , emitter remove unused prototype ... believe leftover lily went address based register based top head guess half year,,
2482,574df6f8c224c51d3b56032c83e0df06f5da6cad,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 16:34:25 -0700, , emitter shuffling exported function new big block comment yay organization,,
2483,6da30d6237e0f44212b9bdced2370788aae3404e,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 16:16:44 -0700, , emitter drop self type_matchup used,,
2484,f1fd0a317931d365b281886bfb77bdada98c7f74,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 16:05:05 -0700, , emitter end ast result null check noticed pattern lot emit stuff checking ast evaluated returned value ast potentially return value top function return anything print printfmt case emitter call eval doe check function return value necessary function another tree however thing like show raise etc. show etc tree wrap around call anyway wish thought long time ago crash get value issue,,
2485,80af2adcad937b65491ea88949ea0b8ff483dfcc,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 15:53:34 -0700, , emitter ... difference function used new one different jump block written also cleared comment really important within,,
2486,6a62b03e267260b90b7476ffce5799f0823894c0,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 15:40:21 -0700, , emitter merge fix old bug change mean parser parse return value needed give function valid ast null additionally bug discovered parser would crash return expected value given function return value bug around ... longer want think added test pre commit hook.py make sure bug doe come back though doubt ,,
2487,382ac9f15b353f6e6c757e06e5eba3a0dae79dff,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 15:19:17 -0700, , emitter create block transition function handle common part checking elif else except valid old function gone block transition elif else try except unified one area resulting code reduction also block validity checking seems sane also present unified area add future block transition,,
2488,6037d21d4cc1b48c1a62133bef0a5533de9239d0,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 14:46:35 -0700, , emitter block_ defines number flag long time ago thought might useful flag however time never came flag define number confusion future is_loop_block changed write separate check line small price pay,,
2489,f66b4144f9950382f886b5baa57cd179c9a7aa9d,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 14:34:24 -0700, , emitter use new comment style simplify lot comment comment particularly compound comment far far verbose need work commented function function pulled helper area,,
2490,26b3d8f192e261d6206b1d3bf95f896bae84b5e0,ascinated Box <FascinatedBox@gmail.com>, 2014-09-05 02:15:06 -0700, , emitter move various static function helper,,
2491,0aaa52b11fc55a3ecdd3f1efb39061c8f987fce5,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:40:18 -0700, , emitter emit_jump_if static emitter used function since emitter working code generation,,
2492,21658fcae61af5bb97d8807cfe4e38f32eb644b7,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:32:11 -0700, , emitter inline drop,,
2493,9fe644962bc8e5d4ac05017bb9c4d8b6debb6d5f,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:25:07 -0700, , emitter inline code writes leave_function remove function longer necessary since code writing function actually function macro,,
2494,13daf7cee57ce4cb47a6fa2df0aba1e465210040,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:17:29 -0700, , emitter get_storage micro optimization condition movement,,
2495,cd8b6a8e8e141fc328eb9bdcaf1b238827776033,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:03:13 -0700, ," emitter eval_build_ function use build_ensure make sigs mean list tuple hash building got fair amount code removed would try build signature siglist possibly get thrown away duplicate resulting code smaller also build new signature signature unique sanity.ly result reduction memory usage drop bucket compared 437k used beforehand however doe result 210 fewer allocation 4,140 3,930 slightly impressive",,
2496,028e567666196acad385ede99949b2977bc833fa,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 10:02:12 -0700, , emitter fix oops caused list reported subscriptable,,
2497,e1747c58f39212c9b40aaadc8ffa299090d032bc,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 02:27:08 -0700, , emitter simplify,,
2498,e4ff03edcf2fadf77ebf68fa88850ff0dfeae924,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 02:22:13 -0700, , emitter remove illogical nomem raise eval_call think accidentally leftover trying debug something oo_call either wrong error raise completely useless never happen former find write proper thing time hope,,
2499,c854ad5beb2d2e1455c6b12e2dae8e6ee653c0d3,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 02:20:35 -0700, , emitter new macro called new macro combine writing adjust raiser raising error purpose reduce redundant code shortening thing one line line many case also make thing clearer adjust versus adjusting,,
2500,24ebf1e1f06c058518c81cc2302ff8421a8fdb43,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 01:46:22 -0700, , emitter check bad class remove bad_subs_class function called one place,,
2501,9ed92a3ee3b4185245082bfc86d8614c17919d73,ascinated Box <FascinatedBox@gmail.com>, 2014-09-04 00:32:16 -0700, , emitter cleanup top documentation break writes function write_ macro function capitalized additionally write_prep folded single function called write_prep doe mean situation write_prep would grow used instead many grows causing bug trying writing ... huge tag first time seems working far lot function value created removed since write_ funcs take care stuff also cleaned comment explaining emitter doe finally added prev null set __main__ block fix invalid read warning valgrind,,
2502,48a17a0714d7202c56addd76a90f0ffa2066405e,ascinated Box <FascinatedBox@gmail.com>, 2014-09-03 12:41:54 -0700, , emitter drop first_block param time start cleaning interpreter,,
2503,ea8a9a6b9a7e4daf6ecf3c0ba4d60405897e6826,ascinated Box <FascinatedBox@gmail.com>, 2014-09-01 13:31:29 -0700, , exception pop try block continue break return fix previous issue one inside try block would cause block never unregistered next catch could possibly jump back block longer within added emitter emitter reach except block block_try becomes also help emitter determine many try block need popped,,
2504,730ebed80f05f3109f85b8ca99185e9eaf21fcd4,ascinated Box <FascinatedBox@gmail.com>, 2014-08-31 23:09:42 -0700, , exception raise test interpreter understands raise keyword keyword expects value derives exception test added ensure exception caught properly,,
2505,36e1903214d1fb4ab9028d29354b96376e57fd35,ascinated Box <FascinatedBox@gmail.com>, 2014-08-31 00:52:12 -0700, , exception exception work plus new new exception new exception instance created like new message work error caught aside exception since base class additionally comparison supported instance value raise yet though ...,,
2506,4aa4b5f574c950fc50d4c06203de22061f0a4dd4,ascinated Box <FascinatedBox@gmail.com>, 2014-08-29 18:07:32 -0700, , exception round rangeerror indexerror drop novalueerror maybe class would made novalueerror obsolete anyway conversion done python indexerror instead rangeerror invalid index,,
2507,c0ce2a465bdb2c0b0322a417f127abf6779ba3b8,ascinated Box <FascinatedBox@gmail.com>, 2014-08-29 17:33:57 -0700, , exception round nomemoryerror new finally work commit possible access function particular class using done first argument need passed function obtained since add first argument example abc .htmlencode also string htmlencode abc could useful future situation one would like pas certain function class without requiring instance maybe side effect allowing static call new anyway set thing allow creating error future later raising error,,
2508,468507d109b855ac0c4ab21c6d1f9bca9d935719,ascinated Box <FascinatedBox@gmail.com>, 2014-08-26 02:11:49 -0700, , exception round various fix aft debug stack unwind debug add d_int_val o_except fix last commit added know make exception object aft teardown move catch_chain beginning unwind use local var hold new wind otherwise adjusted two catch entry depth cause crash end fix catch_chain backward prevents old catch entry selected new pas wrong,,
2509,697cdaf8ca0696945c3cc069f918e5427930a93e,ascinated Box <FascinatedBox@gmail.com>, 2014-08-26 00:00:04 -0700, , exception round create proper exception object show parser understands adding name end except mean exception object made put var example except valueerror would put content exception var create exception object name specified optimization case user want know particular exception raised avoids creating somewhat expensive exception object get ignored exception object created fairly useless ... passed show prove content correct creating traceback object run memory following nomemoryerror get raised uncatchable done intentionally keep interpreter infinite loop trying build traceback memory aft test added test check new name syntax show created type,,
2510,b9dca0f292784e503c2c3a2cbd90dcda03e0654d,ascinated Box <FascinatedBox@gmail.com>, 2014-08-25 02:47:56 -0700, , exception round unwind stack catching exception new test one took bit time figure however seems work correctly except reclaim register also need adjust current number register used fix later though added two test one catch exception raised different function doe nested exception test,,
2511,02997d789452d8711f09c879c90769f197c75ef4,ascinated Box <FascinatedBox@gmail.com>, 2014-08-20 01:46:27 -0700, , exception round pop try end try block doe raise exception catch entry added need removed try use next exception near certain crash add instruction called o_pop_try pop try entry exception raised,,
2512,c78c952667691f8d584a8f76c46e09c0d787c170,ascinated Box <FascinatedBox@gmail.com>, 2014-08-20 01:19:11 -0700, , exception round inheritance check except verifies given class derives exception pretty important additionally check inheritance processing exception mean except class given general raised exception work anyway pattern used sometimes catch exception log also fix class actually init parent line set class needed moved small oopsie,,
2513,f7db6d2096c1823869c9cec158a17f4e8b3c84f1,ascinated Box <FascinatedBox@gmail.com>, 2014-08-20 00:31:00 -0700, , today lesson check commits forcing rebase ... might bit stashed change inside completely breaking code whoop,,
2514,20e47c02e13a41102cb83d92430e0cae2d0b019a,ascinated Box <FascinatedBox@gmail.com>, 2014-08-20 00:18:51 -0700, , exception round add parent class make sane first one parent class given string important future class need example mysql function need particular class guarantee need use string identity ... something second class init second pas parent initialized non null value called class filled may empty one step toward checking except get something know actually raised also inheritance,,
2515,c3e3885bce94e3d202de559e2e7e2eb8a8a032b2,ascinated Box <FascinatedBox@gmail.com>, 2014-08-19 22:01:05 -0700, , exception round handle exception error raised time initialized class handled error catching exception test check rangeerror raised subscript range also fix wildly incorrect comment symtab adjustment parser blank except entry work multi line block,,
2516,e548798a5e474da500688bc2c850ee37e88a2593,ascinated Box <FascinatedBox@gmail.com>, 2014-08-19 20:50:59 -0700, , exception round convert err error general sweep everything convert error name old name new pythonic name originally named err thought would fun way differ lily language also made number instead double object instead string instead str ... starting think making clever name stuff good idea simpler easier remember,,
2517,fea615568c52503fd37e1498625b898e1fb6fef3,ascinated Box <FascinatedBox@gmail.com>, 2014-08-19 19:46:02 -0700, , exception round added property unused basic try basic catch exception likely miss something piecemeal notion property exists exception stack trace well error message property also inherited division zero error future base exception doe add try keyword except keyword tested multi line try except block expect single line one may fail basic chaining try except block next except block seems working two new opcodes o_add_try o_except however doe actually use o_except block exception processing loop try entry find one proper class entry theory model support nested try block totally tried yet though added src level stay exception ironed added exception become complete exception pretty rough right slowly get better,,
2518,04db37dca779718188b22182842dbce3d393165e,ascinated Box <FascinatedBox@gmail.com>, 2014-08-18 01:18:07 -0700, , symtab class init use smart rule determine default sigs every add new type conversation something like okay adding new type easy ... huh set ... integer integer string integer ... weird like sigs ...,,
2519,923a7631eac25a6cb77f48dddce35100ca8bef97,ascinated Box <FascinatedBox@gmail.com>, 2014-08-18 01:11:33 -0700, , symtab fix seed scan allow tuples,,
2520,d756343e0705653569f4017bf5a00d1eac9766c9,ascinated Box <FascinatedBox@gmail.com>, 2014-08-17 22:44:27 -0700, , fix invalid read caused commit 963b7b9 whoop,,
2521,9ee40cd84b927c132d510c3cf89f10cc9ca81fd4,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 19:22:27 -0700, , merge fail test pre commit hook.py also symtab fix accidentally left fprintfs code removed importantly removed failing test determined simple file merged pre commit hook.py decided leave around complicated couple line good mean fewer test simply rot never used often,,
2522,3b6e2c83cfce90f272f0c48a5eabf30151711d82,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 18:31:57 -0700, , made test_cliexec.py precommit hook also auto set stderr stdout lot test stderr stdout fixed hook either unset would default make test smaller also installed pre commit hook reference script hopefully fewer break,,
2523,ca877bd66ffc14edafcf39ea5d5ecfc5e884d2af,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 18:13:22 -0700, , tuple literal start expression fix test_cliexec.py,,
2524,24fc13ac5661fa3fcdc0f80c01505ab8e2365900,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 17:55:51 -0700, , build non templated sigs call return new function called function take symtab lily class siglist count siglist siglist offset build sig siglist without mallocing lookup sig exist created installed symtab function used two way emitter build signature template one doe necessary return like list maybe parser build signature simple templated type cut memory usage parser creating list integer throw away also unified parsing list hash tuples cut redundancy also kicked circularity template counting code new symtab function called finalize_sig symtab bit rougher finalize sig finally gone,,
2525,09d1515e3b9d0e59823a8ff74817b61a4103356c,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 15:23:34 -0700, , symtab simplify circularity marking,,
2526,992dc6b0db921e67203455901c11d7c04b0e01e7,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 14:56:29 -0700, , emitter simplify template_check,,
2527,d3210a22c8e2c1a5132ec6ae50642ffc13b59189,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 14:12:39 -0700, , emitter get_storage never fails remove error check oops,,
2528,fa9f49a1224028dce25c678b41bb9d6e455e49e7,ascinated Box <FascinatedBox@gmail.com>, 2014-08-15 01:38:43 -0700, , better generic pave way maybe fix problem old system generic relied upon self first argument function long time worked fine function used generic particular templated type working list apply started list hash get started hash etc problem came wanted add new function take given type return maybe containing type function value maybe ... work old style new style generic still work old one major change internally emitter keep track signature seen particular function case list append list self value consider .append becomes list integer integer case use integer everything fine  also touched tree oo_call guard true double eval check_call_args eval check result without writing code twice,,
2529,12f4612f15ee5db3a4850e976b9236916d0420bc,ascinated Box <FascinatedBox@gmail.com>, 2014-08-12 21:15:28 -0700, , slash bunch code o_build_list implementation make static list building hair slower ... allows cleaving away large block code well ensuring likely bug considering pain got trying fast path subscript subscript assign past much rather way,,
2530,998edd58cb631cdf74102b0a7a8fa05b49a7ea25,ascinated Box <FascinatedBox@gmail.com>, 2014-08-12 15:07:26 -0700, , convert number double fix also changed printfmt function take double certain keep though since know int consistent idea format char first letter class name integer double string remembered update documentation time like think getting better remembering sanity test updated cliexec one one easier string change bit harder valid number line number needed avoided,,
2531,ee8dda63fa42a88cfc922a2286e687ea25d3f291,ascinated Box <FascinatedBox@gmail.com>, 2014-08-12 14:28:26 -0700, , fix test_cliexec.py last commit oops,,
2532,5afe0c36cbb7e3b0bafe8f38919382b592d73b7c,ascinated Box <FascinatedBox@gmail.com>, 2014-08-11 12:34:05 -0700, , finally added tuples fix tuple implemented way list list force single type tuples allow anything defaulting also work tuples garbage collector account tuples build tuples new syntax begin tuple close tuples must subscripted integer literal emitter determine type subscript finally fixed bug subscripting list would yield wrong type emit time,,
2533,1cb0be3762a6bae4fdcb4aa55f06c2b0de819b2f,ascinated Box <FascinatedBox@gmail.com>, 2014-08-05 20:29:01 -0700, , non label value start expression also test added decided add basic test test_cliexec.py create bunch file small little test test check different thing like integer number string start starting expression builtin keywords previously caused complaint able start expression start expression future would allow thing like wanted important building repl probably future least get rid something bothering long time addressed unfortunately meant adding flag expression small price pay though,,
2534,94a4b88fc014b11ae7579ed6be94ce82f95ebb72,ascinated Box <FascinatedBox@gmail.com>, 2014-08-05 16:22:27 -0700, , added test_cliexec.py basic test cliexec fix test much least cliexec completely break unnoticed test run cliexec test makefile.am invoked directly running test_cliexec.py considering folding failing test issue failing test failing differently past going unnoticed fix,,
2535,958999de581c7e3b4113290edfa3c325b3d98a78,ascinated Box <FascinatedBox@gmail.com>, 2014-08-05 16:10:53 -0700, , lexer complain found tag mode also bare invalid,,
2536,0a2ba05d036710cef75aa975ad4effcd475ef24c,ascinated Box <FascinatedBox@gmail.com>, 2014-08-03 23:05:10 -0700, , new function syntax various documentation update new syntax returntype instead returntype additionally nil return inferred example function taking args returning integer old function integer ... new function integer ... function taking list integer vararg returning nothing old function list integer args ... nil ... new function list integer args ... ... additionally minor correction made main readme builtin library readme correction new syntax various previous update object str string etc,,
2537,da5600c995ffe78ace11885686b9d3d294ffc28a,ascinated Box <FascinatedBox@gmail.com>, 2014-08-03 11:41:49 -0700, , object fix,,
2538,7a8ac35afd10b0aa38b62b95eae1f3fb3541d970,ascinated Box <FascinatedBox@gmail.com>, 2014-08-01 02:22:40 -0700, , update documentation str string whoop forgot commits back,,
2539,c47f7d0eb0476f3a4cbc87098f0f459c801d8b12,ascinated Box <FascinatedBox@gmail.com>, 2014-08-01 02:06:43 -0700, , terminate method extreme prejudice fix function method merged zero reference method anywhere except apache httpmethod binding breakdown interpreter think function two flavor native foreign native mean defined lily code foreign mean probably defined interpreter doe actually distinguish though fixed small bug creating stack entry list apply malloc ing block instead using foreign code block ... blatant leak never got checked yay shuffled test around name wise method dead updated test name change bug fixed hash comparison keywords never uncovered keywords length longer name also matched function letter function_list triggered better fix commit soon come got rid err_function in_function foreign function add stack entry properly feel hacky fixed oops seeding global function got empty class name instead null one raise printfmt showing printfmt remembered update documentation time yay updated runner dump stack method gone,,
2540,54b01e80ec49aa9f0582fa0bab9732ee2869a92a,ascinated Box <FascinatedBox@gmail.com>, 2014-07-29 20:59:39 -0700, , function take varargs list external change part needed make method function thing additionally function longer need num_args param since printfmt could get varargs removed function,,
2541,974f60585e9ec995f716083e1c728ccfac3e03c3,ascinated Box <FascinatedBox@gmail.com>, 2014-07-29 16:58:03 -0700, , init_func_seed fix oops ret parent set happened uncovered running blastmaster.py thanks aft,,
2542,bbe14d6e53120da18a23def725423d6162d983eb,ascinated Box <FascinatedBox@gmail.com>, 2014-07-29 16:50:27 -0700, , str class string class fix lily_str_value listed lily_raw_value union string instead str str changed string deemed appropriate internally place,,
2543,917907393affe7b01f0e9037cfbe5d168de61d25,ascinated Box <FascinatedBox@gmail.com>, 2014-07-28 12:48:35 -0700, , correctin typecasts actually postfix example fixed,,
2544,a1bbf59724cb41e8f77c52099187fc534bc3afdf,ascinated Box <FascinatedBox@gmail.com>, 2014-07-28 03:24:52 -0700, , integer signed whoopsies credit reddit soldiercrabs pointing,,
2545,491313e521cb00c779841b0fd45e8e4f8fe28621,ascinated Box <FascinatedBox@gmail.com>, 2014-07-27 23:55:38 -0700, , print class name function emitter stack trace fix mean calling append invalid args show list append instead append also stack trace show sort stuff way may need changed future since storing name allows single level class depth nested class need figured later also updated runner wrt print stack trace touch apache module dump stack yet,,
2546,badcca1b27bffd85aee4c7b23e04ff6094f5772e,ascinated Box <FascinatedBox@gmail.com>, 2014-07-27 09:56:11 -0700, , remove leftover debugging code oops,,
2547,a77078770d7e7318d7cb87899124b49fb52b96e1,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 22:52:38 -0700, , added readme mod_lily simple form example form example much except show post var collected htmlencode work also snuck feature example readme mod_lily added new user figure access post var suchness,,
2548,ca128029e9777a6203882dfa9db262d5e92eae19,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 21:43:37 -0700, , ... str htmlencode never worked non entity oops,,
2549,3d627919c90b99a803509bf226b3a00f99b86e3c,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 21:35:24 -0700, , added hash get call return handle simple template hash get thing subscript except take param act default value instead raising error key found made exported hash get duplicate code also fixed call return grab appropriate template return template since hash get return value type hash given work eventually full template replacement necessary call made apache since trying grab hash element fails otherwise,,
2550,a0a286a148150d2dc5d4b51a25bfc38fd433283b,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 20:16:29 -0700, , regression fix adding list apply broke list append argument checking emitter always grab self first argument given regardless reason list append break argument get complex one method template access something get however list append list integer meant took integer inner type template access ... crash added test sanity.ly make sure list append oops happen ,,
2551,9eec0e769be4db3848f23be2b89b1c2109a85d17,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 18:57:22 -0700, , finally fix case fix parser binary check digit token see started sign break appropriate binary value seen token wise instead latter caused message unexpected token added small check sanity test case,,
2552,e5a405499d1291a12b27fb08d279d10a9803bf92,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 17:22:36 -0700, , finally make readme builtin library fix rough around edge far better nothing,,
2553,bf89fc09f35305c4ce4225f694fdcb91ad710209,ascinated Box <FascinatedBox@gmail.com>, 2014-07-25 16:02:26 -0700, , list apply finally foreign call possible fix add function allow function call back point function call look like list apply list method nil type list call given method element list return value method assigned result pumped callee method additionally function added method stack function fails show properly error stack runner updated show stack trace properly,,
2554,d0f21de7bcb0bfbcfa1111cdaa62b1e0f81bf053,ascinated Box <FascinatedBox@gmail.com>, 2014-07-22 21:20:54 -0700, , function take self second argument make function future add entry stack done help adding list apply finally get put nothing actually self yet,,
2555,a65c9a92b35e78805009d905da51dfca48828493,ascinated Box <FascinatedBox@gmail.com>, 2014-07-22 17:29:18 -0700, , o_get_global use object assign left object oops,,
2556,33df3cc9d1b8e540adfcbc6c4308f73901062d10,ascinated Box <FascinatedBox@gmail.com>, 2014-07-22 16:34:48 -0700, , string buffer str htmlencode str htmlencode written apache module way make data safe insert page escape html safe version also added small growable buffer buffer used str htmlencode since function easy way determining size buffer hold best case replace nothing need size string given worst case element require input string size likely put cap buffer size point prevent trying exploit string silly size,,
2557,8c266d29ec85c12f326bd46a99220cd162603cad,ascinated Box <FascinatedBox@gmail.com>, 2014-07-19 00:29:29 -0700, , finally bind post var server post fix,,
2558,2bdacc6a6facdc34e3e36311a8ed0f395090dac5,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 19:19:00 -0700, , apache merge env get scanning code make server get hash feel bit dumb ... started thinking server post realized conditional var work server post request attempt access post variable would cause parser raise message unable find stuff decided make server get hash str str type suitable may updated future something fancier fancy request intending server post way reason since server get server env pretty similar code concerning merged together resulting code cutting,,
2559,ca9771482a9288e7cd83a63bd6c84688ec9bb477,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 16:58:19 -0700, , apache bind http method server httpmethod purely convenience much nicer way server env request_method much verbose clear,,
2560,c93a0161c4d40d3b2d7720338f89f86f221b8c1e,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 15:13:19 -0700, , apache bump count bind_get successful,,
2561,ad556e49906bfdbe65a6ff9c3bf71c075a3e14b3,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 14:54:36 -0700, , add complement fix apache mod assignment variable obtained get server get causing crash,,
2562,8a254a0fb7ee3608ef87c407263a2de0529c68e7,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 11:13:44 -0700, , apache allow multiple declaration server get oops,,
2563,ca84f461d52529d4cb4fc8d26461d6bcfb8a35e7,ascinated Box <FascinatedBox@gmail.com>, 2014-07-18 01:36:43 -0700, , apache fix makefile.am also bind get var fix makefile.am forgot add causing error trying load lily module make get var available server get assigning doe work yet fix soon server bind get var invalid name available anyway,,
2564,65277d5618367962d4d8db79e9624ce37c36bf89,ascinated Box <FascinatedBox@gmail.com>, 2014-07-17 23:30:04 -0700, , add support deep package access fix,,
2565,0983eb841e1322bf92fe608c097a4e7ed958e12b,ascinated Box <FascinatedBox@gmail.com>, 2014-07-17 12:32:20 -0700, , fix starter comment lily_debug.c since show symtab long dead,,
2566,a9fe3ddaf58e7482f47783781a3ac6157787339c,ascinated Box <FascinatedBox@gmail.com>, 2014-07-15 21:00:02 -0700, , ast merge absorb absorbing tree becomes parent whoop,,
2567,01988ace7b79a3063030d0f6b00a9ed415ee6b80,ascinated Box <FascinatedBox@gmail.com>, 2014-07-15 20:33:26 -0700, , get set item fix debug also fix show package package show working beginning checked wrong increment debug got super confused package access,,
2568,8e671c92aef37f4f3fefafad06f86c8e3cb77f75,ascinated Box <FascinatedBox@gmail.com>, 2014-07-15 00:24:22 -0700, , subscript get_item set_item name change functionality change feel name accurate since plan update subscript subscript assign handle stuff soon,,
2569,0884d3b57b0e7ee75af2785381339090837eac5b,ascinated Box <FascinatedBox@gmail.com>, 2014-07-13 22:06:57 -0700, , str lib simplify new str code try_make_sv,,
2570,73cd7e242d5fb9e05ee60ec4f9a5d923e6b002bf,ascinated Box <FascinatedBox@gmail.com>, 2014-07-13 21:27:21 -0700, , symtab fix oops dynamic loading could cause leak problem adding node list new node would add top current top node become new top node old next current top would vanish void bad,,
2571,019055f6be53d34afc4316c7639d4baa6ab2767d,ascinated Box <FascinatedBox@gmail.com>, 2014-07-13 20:37:57 -0700, , str lib comment str concat better fix numerous bug checking nil params probably dead check reallocing original string would violated string immutable best one zapping flag result register right situation literal last value register new str val would written ... would flagged protected literal ... bet would lot fun debug,,
2572,71eb98af3d369c48083685bd2dcd3f2c205702c8,ascinated Box <FascinatedBox@gmail.com>, 2014-07-13 10:12:18 -0700, , add str trim fix also changed strip related function take str val instead proper lily value allows str trim create fake str val pas strip function helper,,
2573,dfcad42086763039d902ca17b2c242e8d2cb0cb3,ascinated Box <FascinatedBox@gmail.com>, 2014-07-13 01:41:07 -0700, , added isnil keyword function fix,,
2574,7611821986d2808896c4338bb4aa61c7a59f99e6,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 19:15:08 -0700, , add errformat exception fix potential overflow printfmt turn printfmt accounting potential low count number value passed check done never triggered either making worse additionally fixed err_function grabbing,,
2575,65a8e447c1f31ecbc31c4356491a809bff03b866,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 19:12:04 -0700, , raiser add missing errnosuchkey string whoop,,
2576,04339060f02b889a35eeb616e7fa9540c320b954,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 18:38:14 -0700, , debug fix oops converting d_jump msgbuf incorrectly,,
2577,7f0cc2f5952ef637f7a6afe384fa8677371efff3,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 18:29:34 -0700, , complex type new lily_class_func fix also pulled marker function lily_gc lily_class_func decided special function pulled seems rather silly module load marker function added new test sanity.ly well new failing test new exception errrecursion get raised comparions used something circular,,
2578,244b01331e79837009d4c8617e4c7959cc89d044,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 13:48:04 -0700, , lexer touchup allow ... assume typecast yield,,
2579,c51d14e3d886efbd981cbd9adebaa083baa80dd9,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 13:28:04 -0700, , postfix typecasts value type fix removed old syntax hopefully old reference also stuff near expression_oo expression merged simplicity updated sanity.ly remove old typecasts favor new one like new syntax already,,
2580,cf220b611195ac87f6efbdff45fa90a68e1f3f18,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 12:47:04 -0700, , aft remove unused aft_entry struct,,
2581,b22a0389e9222e6ed073c80730f90a9ff0e15639,ascinated Box <FascinatedBox@gmail.com>, 2014-07-11 12:45:53 -0700, , aft remove unused funcname aft_entry struct,,
2582,470be74648bce6754b07547e79a85d777ddf7285,ascinated Box <FascinatedBox@gmail.com>, 2014-07-10 22:57:39 -0700, , merge branch master http github.com jesserayadkins lily,,
2583,d0d547bf68c36e844fead7146e964512b91f3bc7,ascinated Box <FascinatedBox@gmail.com>, 2014-07-10 22:54:58 -0700, , kick utf8 checking lexer new also lily various runner utf checking line reader result double pas input buffer utf much better duplicate code bunch area,,
2584,a6557f22dd2c097287d0c6a8672faee0f0ed1dab,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 22:33:29 -0700, , apache create server package server env creates server package give server env hash str str containing common environment variable,,
2585,27cbb4bafc87cf9a98286e161685ca7a20594f8c,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 22:27:15 -0700, , export apache,,
2586,81558049f39482f35af72d74c418e2d60071f386,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 21:09:30 -0700, , created readme.md wanting take swing long time much start,,
2587,0cf90b139e41266662da35b15dae626bb4dc94f1,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 15:00:48 -0700, , hash entry deref key hash elems copy key flag found memory leak apache time hash str key one ref protected str never get free hash derefs key get seems right since think hash ref key well additionally hash element creation copy key necessary keep hash elem deref thinking literal key literal key trying deref,,
2588,c99db92acffd7116b766ef229ba437b43b1e234b,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 14:45:50 -0700, , malloc sipkey original scope discovered trying add hash entry var apache mod surprised notice,,
2589,0f9c968cf810f5c595c375730681b37351ff4569,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 14:14:14 -0700, , blastmaster.py aft file never found anything fix bad enough aft sanity.ly take long aft file even worse also added touchups like stopping test pas fail like non sanity.ly test pushed front since run really fast,,
2590,164dfd585b15891db0201d6e324c49b2a8808ed8,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 13:03:45 -0700, , parser set starting parser mode fix potential invalid read potential read occurs lily_load_file fails since error current parser mode unset also happens lexer allocates entry fails,,
2591,d5f0f2e603ccfc32b37f644ae8c9a7fa89c59254,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 12:49:44 -0700, , src makefile.am add sanity target run sanity.ly valgrind,,
2592,4b196cef5c92315b50be9eb1dff69194d6097329,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 12:35:32 -0700, , lexer mode independent file type load need done reflect fact particular lexer input type going always tagged untagged file may want tagged untagged string may want tagged parser load_ call take mode also lily_lexer_mode lily_lex_mode consistent lily_lex_state lily_lex_ change mode lm_tags lm_no_tags better reflect mode also changed take mode source make consistent lily_load_ call take mode particular source runner updated pas mode want except apache args reordered,,
2593,5eb0330bc98e11d972bbed79d2a32b389677c95f,ascinated Box <FascinatedBox@gmail.com>, 2014-07-08 12:12:05 -0700, , added lily_lexer.h fix compiler warning,,
2594,9907ca0ff0a4a906dec2c45243df232c437996de,ascinated Box <FascinatedBox@gmail.com>, 2014-07-07 12:55:31 -0700, , success apache module able successfully parse file,,
2595,3c98d33783f4f7c00621053b6f7c100da7ec6ec2,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 22:31:12 -0700, , interpreter take runner data void lily_impl_puts take void first argument data runner pas new first argument passed around lexer handing debug interpreter doe touch pointer strictly runner done apache module obtain request_rec without resort global variable evilness,,
2596,c18bc8465e2413658aa3c48f53d86f7c946c2e24,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 21:10:08 -0700, , upgrade msgbuf blasted touchup debug touchups debug show_value seems updated properly since value started containing sig flag simplified bit added accepts format string args replaced longer need wrapped runner also simplifies debug bit since format string take place line code also added signature adding unified within msgbuf another nice thing come syncing two version gone runner except apache working lily_impl_puts implementation least one stub change done find apache function would print data va_list msgbuf longer important one easily wrapped lily_impl_puts easily handled apr_puts somesuch,,
2597,4a34d5e97c94b717db55153ee30cce8cd24263d1,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 19:23:10 -0700, , lily_impl_puts runner send html old name reflect really new name doe interpreter way put currently used print function html though,,
2598,086380550fd8ded030d933286effe12fed3b8790,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 17:09:58 -0700, , tk_eof val_or_end token make lily_cliexec work tk_eof caught lily_fs lily_fs remark unexpected eof hit within lily_parser however lily_fs set different file type eof fine,,
2599,88003e3328bf20a0b7e07185eede5df517db4621,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 17:06:07 -0700, , lexer fix debugging stuff accidently left previous commit oops,,
2600,14d88e76ddc937125cc907374dfe76132ed979fa,ascinated Box <FascinatedBox@gmail.com>, 2014-07-04 16:01:19 -0700, , added beginning apache module yay added rule configure.ac build apache mod demand default case people header build want build standard lily apache mod makefile.am replicates makefile generated apxs lily far apache command within make easy test apache mod developed note apache module doe anything except show excited work polled impl printing stubbed mod create working parser start,,
2601,1c7112f10c32e8d4e8a18e450b94e4821b73b621,ascinated Box <FascinatedBox@gmail.com>, 2014-07-03 00:11:45 -0700, , value object deref proper check flag flag incorrect discovered trying bind sys argv always use flag case flag added future,,
2602,4b27a9382788396a593affae6cb2d9113fe6da3e,ascinated Box <FascinatedBox@gmail.com>, 2014-07-02 23:49:34 -0700, , big change shove everything src dir use autotools compile done intend start apache module believe need autotools put together also streamlines build process getting rid makefile updated properly regard dependency also added couple new makefile target one run sanity test another run blastmaster suite test,,
2603,577fe9632fa79f66a7f1f0ed268d4a6e2ea87c74,ascinated Box <FascinatedBox@gmail.com>, 2014-06-30 01:59:35 -0700, , lexer modular scanning please fix lexer creates entry str file loaded though really support loading one entry total make easier add import later importantly entry take line reading function closing function make possible add file type important later also made source void help make thing modular interpreter care using long input_buffer filled synced label got close function tidy everything str read line like file doe mean ch_class adjusted anymore nice small win,,
2604,1e3bd246193fbb38b997d76d44f728db3bc9b9f8,ascinated Box <FascinatedBox@gmail.com>, 2014-06-29 20:57:25 -0700, , tidy lexer bit name wise change functionality,,
2605,933975a242fee4f8b97c07711e680532135f8c79,ascinated Box <FascinatedBox@gmail.com>, 2014-06-29 01:23:04 -0700, , fix aft compliance blastmaster work perfectly,,
2606,7b29ab0e965788c1716d5b118c606d85154b4f44,ascinated Box <FascinatedBox@gmail.com>, 2014-06-28 23:55:26 -0700, , couple fix allow multiple run fix surprisingly took couple change allow multiple run prep check two field prep_id_start prep_var_start last var read last position __main__ register read mean globals read last prep read well setting register necessary new globals execute doe clear value end anyway main reason multiple run discarding var multiple run behave one might expect var accessible previous run available interpreter done,,
2607,24c33e1397afbd462eb8289172f23078080d1562,ascinated Box <FascinatedBox@gmail.com>, 2014-06-26 22:33:55 -0700, , fix oops last commit,,
2608,64783a3c9c5f675ba158f3867a380c9645ca2a8e,ascinated Box <FascinatedBox@gmail.com>, 2014-06-26 14:37:14 -0700, , ast cleanup merge simplification,,
2609,29ee48351bcbc18b877cb8264cf1ba9ddb5c9e4c,ascinated Box <FascinatedBox@gmail.com>, 2014-06-24 22:42:38 -0700, , ast unary absorb merge everything fix problem unary merging call tree uncommon kind tree absorbing merge used swallow everything solving problem also fixed merge_absorb set active event active sent actually active test added sanity.ly prevent happening,,
2610,47b9db5331662533981b6f9f24f8acd8c8f61eae,ascinated Box <FascinatedBox@gmail.com>, 2014-06-24 19:50:54 -0700, , package entered like non ary tree done consistent ast handle tree binary unary,,
2611,3a06ab18be2a3ef90518cb7679967491b9963fb8,ascinated Box <FascinatedBox@gmail.com>, 2014-06-24 18:40:31 -0700, , parser fix oops causing .size work,,
2612,ac3f928383acfd68d4462bc935c41f1adab8bc17,ascinated Box <FascinatedBox@gmail.com>, 2014-06-24 18:04:30 -0700, , redo tree_typecast entered fixing object resulting object integer result binary tree taking typecast tree left side fixed entering typecast tree upon seeing token mean binary unable mess typecast tree subscript list building tree work added test behavior sanity.ly though doubt ever occur,,
2613,0be3991654134f0efa3f068a39d9e089563b3ade,ascinated Box <FascinatedBox@gmail.com>, 2014-06-24 00:59:55 -0700, , added tree_oo_call handle abc.xyz type call ... make emitter parser responsible class callable lookup since emitter doe evaluating asts already much much easier eval determine resulting class call instead parser ast growable string pool share emitter parser copy string tree_oo_call index string inside allowing ast grow without fear corrupting anything realloc ing axe taken parser nothing remains good riddance,,
2614,f74cf4da80dce6593c653dc97e32403f92dd4990,ascinated Box <FascinatedBox@gmail.com>, 2014-06-22 22:28:48 -0700, , symtab calculates shorthashes shorthashes params bandaged creating sys argv made sys var hold package stop make lexer print shorthash making sys could use really hated decided make symtab shorthash checking making mean passing shorthashes args slight slowdown microscopic probably lexer longer cheating making shorthashes also nice symtab change doe calculate shorthashes easily need,,
2615,09a69460db7b12098c4fb8b73a58915410c28558,ascinated Box <FascinatedBox@gmail.com>, 2014-06-22 00:44:55 -0700, , finally sys argv assignable grabbable ugly first patch took longer couple bug discovered meantime first new lexer understands new token separate package var inside sys argv example denotes argv within package sys parser understands getting package subsequent search done within given package argv fails special merge added ast package may wrong way thing especially since discovered maybe related bug typecasts testing package assignment package value access work opcodes expect package global future something need done allow support package package one idea use subscript subscript assign operate local bug fixed list deref checking flag deref checked flag second necessary future flag may added touched creation sys argv list visited initialized duplicate value created leaked oops bad part think package merge might replaceable usual absorb merge parser allow package bubble see package global var force next keep list package made well keeping package assigned object done package known emit time meaning package get set written index saving lookup package info time however also prevents show showing package call bug keep show awesome debug show o_package_get set index useful name show sys index instead sys argv current package evals emitter work package package current o_package_get set expect global opcode tackling yet package sanity need bunch new test sys need clear small bug first sys argv.size parser understand package insofar result grabbing class callable another bug long explanation part done sanity test new sys package short version package stuff like sys argv sys argv etc however little nit afoot decided commit nit want finally get taken much much longer commit first touch annoying bit next,,
2616,8a30c64525816fc7114097a999870eb075ac0fc9,ascinated Box <FascinatedBox@gmail.com>, 2014-06-14 12:27:14 -0700, , lily_pkg_ lily_cls_ except lily_pkg_sys make clear lily_cls_list implement list class instead providing list package important sys package class,,
2617,049f5afccddc5c2b53fa9ddf1a3aad17cb9e397a,ascinated Box <FascinatedBox@gmail.com>, 2014-06-13 19:11:18 -0700, , argv wrapped global argv lily step toward wrapping package used blastmaster ensure introduce memory leak also added lily_pkg_sys eventually add argv part new sys package add argv list globals,,
2618,4932421960b9b42ed4eb27dea1050c7b5ae3367f,ascinated Box <FascinatedBox@gmail.com>, 2014-06-10 14:22:50 -0700, , add str strip doe lstrip rstrip,,
2619,0283631866751f708ebffd513c0a55d5b535baab,ascinated Box <FascinatedBox@gmail.com>, 2014-06-10 13:38:18 -0700, , str fix oops lstrip rstrip empty strip string result set empty strip string instead input string also adjusted input check lstrip rstrip commented result set input case,,
2620,efe4307c0da71d413d9e5b2843ed0e83e10685f3,ascinated Box <FascinatedBox@gmail.com>, 2014-06-10 10:52:48 -0700, , added str find,,
2621,44ec220f3781e37b9e5817e0cadbfa8102e826b4,ascinated Box <FascinatedBox@gmail.com>, 2014-06-09 13:09:10 -0700, , str lower str upper,,
2622,fc943bceef772faf723800cc22dae2841045e51c,ascinated Box <FascinatedBox@gmail.com>, 2014-06-07 01:42:49 -0700, , str endswith written,,
2623,e2e7e2f8086935e6f99a9a66ba9253a7597fae62,ascinated Box <FascinatedBox@gmail.com>, 2014-06-06 22:43:19 -0700, , str rstrip added bit tricker lstrip,,
2624,2537ae533f5df5bc59c8ea9e465d3070a7c74d21,ascinated Box <FascinatedBox@gmail.com>, 2014-06-06 00:46:13 -0700, , added str startswith,,
2625,7cac3d318db5da5e32e95244772f8bf9eca813f6,ascinated Box <FascinatedBox@gmail.com>, 2014-06-05 12:50:45 -0700, , str lstrip added work utf chunk,,
2626,c37773afdc4cca49270f57e161f5aead2359ad8a,ascinated Box <FascinatedBox@gmail.com>, 2014-06-04 13:05:48 -0700, , str add str space alpha digit alnum via wrapping ctype function,,
2627,42f0c7e7741c6ee9b38a6aae40e0d39a9390c7bb,ascinated Box <FascinatedBox@gmail.com>, 2014-05-30 17:07:18 -0700, , add list append unbox template type matching list append new function add new value list value anything list accepts also mean list take object list append accept value autoconverts object type_matchup emitter check wanted signature template determines template match proceeds allows list append type matching  without two change list object obj_list obj_list.append fails str two change list object obj_list obj_list.append succeeds object case str made object additionally export needed get work,,
2628,fb47a7a1e9a3c871bdbf33cd869e17b485d061af,ascinated Box <FascinatedBox@gmail.com>, 2014-05-30 15:28:34 -0700, , lexer fix closing multi line comment first character processing skipped caused problem test added sanity.ly well,,
2629,66efcf35556c18aca290efae9a689afc9ae0fc26,ascinated Box <FascinatedBox@gmail.com>, 2014-05-27 20:48:24 -0700, , emitter fix crash show given value test added,,
2630,648a8eedd366ad2357bf578f4907ecb713ec5728,ascinated Box <FascinatedBox@gmail.com>, 2014-05-27 20:20:21 -0700, , parser use new token table simply expression,,
2631,d924344589367216198dff849d1e1e1e49000df9,ascinated Box <FascinatedBox@gmail.com>, 2014-05-27 12:04:34 -0700, , parser shove token info setup much better one easy see value token versus add cross finger making easier extend since think many new token making easier understand nice change token stuff parser without feeling like accidentally broke something debugging random token messup,,
2632,9677fa750bb02e798c7f33027ee8a271c01cadfb,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 19:30:34 -0700, , prune useless includes replace simpler includes,,
2633,0765faecef184c0bbadf6c659e9ee1f073dcbb3d,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 18:32:25 -0700, , remove trailing whitespace,,
2634,37277f3727c095bc507d75b9b55c566d5be133fe,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 18:27:08 -0700, , remove comment committed,,
2635,0c58d6a09526974c1ed9e364ff70e64f48318230,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 18:22:58 -0700, , remove dead code stick right place,,
2636,7f2b62de8ba98ed33880c46b1b4881defe715d4a,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 17:20:10 -0700, , parser use determine valid hash key,,
2637,cd86c436f4b0611586f7b2da4a77e486e13c988b,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 17:03:23 -0700, , parser expression longer take flag emitter clear ast eval parser adjusted bit longer need ex_save_ast ex_need_value done making declaration list push var assign since time value needed ex_save_ast removed making expression longer auto emit instead leave job caller block needed save ast two case need saved standard expression via statement declaration list fixed emitter function evaluate asts lily_emit_eval_ name clear ast pool next expression,,
2638,5b7776ba41d290fefc1a49adffbb7f764ae3dec7,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 15:46:17 -0700, ,  take ast pool clear done additionally moved eval ing function lily_emitter.h away non emitting one,,
2639,58d0a82e7665036cf15a3698234e758251695dd9,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 15:07:07 -0700, , parser _multiline multi handler function is_multiline others in_multiline resulting bit confusion eliminates possible confusion,,
2640,84cd2354236e80b00ce940043a623523587338d9,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 15:00:53 -0700, , parser fix damage caused recent commits oops,,
2641,769cce12effe71b84ae420ea428a98a1dbfeff40,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 14:18:07 -0700, , ex_condition gone favor replaces improved function take ast pool allowing clear ast done wish thought long time ago know bug ast cleared emit anyway handle conditional block realized pattern using exactly doe,,
2642,f1dc1f322230d2b3cd9141c9de42b4b1d5bd937d,ascinated Box <FascinatedBox@gmail.com>, 2014-05-26 01:22:14 -0700, , block single line also oops fix ... ... broken since first introduced jumping back top opposite condition never found test  merged multi line block handling function used main non block ... handle multi line case single line case basic though statement parser also reworked handler comment parser one rather redundant,,
2643,e8a2f7318f789841673a6c89cf12b36d3ed2842f,ascinated Box <FascinatedBox@gmail.com>, 2014-05-24 00:27:19 -0700, , parser drop ex_single dent expression ex_single never anything except keep ex_condition ex_save_ast working unless set think intentionally long time ago something faster check one flag checking others maybe actually wanted make expression multi line forgot whatever reason statement multi line last commit probably ever make expression multi line,,
2644,fae1bf5fd57afb0a3f53fa1a13f2cb3bb62d710b,ascinated Box <FascinatedBox@gmail.com>, 2014-05-24 00:06:29 -0700, , parser merge multi line non multi line code fix finally enables getting rid replicated much statement allow single line expression still restriction require block multi line even though really could single line might change later initial reason way thought certain block would useless single line refactoring aimed keeping compatibility rather refactor behavior change want guess went wrong debugging thing plus code twice every time add new keyword good thing,,
2645,2cae1a0dd6bea7bcad14f4321b21b178e728a588,ascinated Box <FascinatedBox@gmail.com>, 2014-05-23 15:27:45 -0700, , sanity.ly reorganized bit list method call method list size member also demonstrated yay silly test removed like testing addition relic language lot stable also went basic assignment added test type added since basic assignment test created lot comment first test overall much change line count however fewer test since couple merged together test merged finally importantly test object defaulting added believe issue past,,
2646,5be36e0f31f2621750598d6e6363a0a0ca17a9e4,ascinated Box <FascinatedBox@gmail.com>, 2014-05-22 23:26:48 -0700, , type_matchup doe template matching reboxing stuff something want list object static list object type_matchup fix done first boxing non object object rewriting static list result list object sort thing also done hash key match changed part sanity.ly use different initialization reflect,,
2647,ef2bbaa67d3331a07a91aa54dc7f4826ca1caba3,ascinated Box <FascinatedBox@gmail.com>, 2014-05-20 11:22:37 -0700, , class member loaded demand save small amount memory since str concat list size var made used somewhere hoping end saving great deal memory future required juggling around lily_func_seed next const seed str list static const hopefully result memory saving lily_pkg.h gone lily_func_seed found way lily_syminfo.h everything else come cost needing pas symtab class member lookup however making lookup automatically load mean future bug suchandsuch autoloading,,
2648,b060da016e85e53c3e46c38a189a1e77251e31bb,ascinated Box <FascinatedBox@gmail.com>, 2014-05-19 12:14:26 -0700, , reorganize lily_syminfo.h,,
2649,b967d66654055bce60753ef9ab60a17eeb1102a9,ascinated Box <FascinatedBox@gmail.com>, 2014-05-17 12:48:07 -0700, , ,,
2650,8ed05f1f50719eca0d6b757c744a6e3ec0581e92,ascinated Box <FascinatedBox@gmail.com>, 2014-05-17 12:23:36 -0700, , simplify lily_vm_prep bit removing redundant code,,
2651,6bf54234943cffae228a6d3eaea1bb49803f06c6,ascinated Box <FascinatedBox@gmail.com>, 2014-05-17 10:17:47 -0700, , register builtin function either,,
2652,6942ee021c45655a3f8098e5860ccbabf30d41da,ascinated Box <FascinatedBox@gmail.com>, 2014-05-16 23:36:43 -0700, , declared method longer put register declared method still stored symtab var table longer given register __main__ instead loaded literal marked var_is_readonly method loaded way get flagged never get ref bump get ref bump interpreter able threading easier lock ref bump drop loading method intend allow declared method assignable however method args future method var reassigned fine builtin function interested reassignable either method function global args called without register save ton o_get_global call calling method fewer register __main__ load method register already getting pretty bad sanity.ly call take another value determines get call info value value given assumed readonly var register assumed local register method arg required fun change debug support creating new var take flag allows creating var readonly passing var_is_readonly flag,,
2653,3a0c0145d278065d2dd954fc43b7c3505baf08e7,ascinated Box <FascinatedBox@gmail.com>, 2014-05-13 17:51:22 -0700, , mark literal loaded new flag value flag indicates associated value never receive ref deref nice save ref deref literal never deleted end overhead small thing used check nil check nil protected,,
2654,930039b0a21eac4e633942566655c4ba0b902bb5,ascinated Box <FascinatedBox@gmail.com>, 2014-05-13 13:10:25 -0700, , sym_is_nil val_is_nil flag made value symbol reflects,,
2655,7db787eb957c4077b73ccfe11758e2c2f246eb86,ascinated Box <FascinatedBox@gmail.com>, 2014-05-13 12:05:23 -0700, , remove relic circle_buster era,,
2656,3fd129e1e23e58fb14257c29c943d175b3e76dcd,ascinated Box <FascinatedBox@gmail.com>, 2014-05-13 11:42:54 -0700, , value rewriting part support proper vals naming change lily_value lily_raw_value raw value value flag signature longer common rather nice lily_value lily_value corresponds proper value proper value one signature flag raw inner value lot function rewritten take proper value instead sig raw value combo still keep sig raw value combo gc_entry little value creating proper value one would mean extra allocation save proper value proper value may register change sig value leaving confused added destroying raw value rewrite necessary reason subscript subscript assign list hash atrocious many many bug time forgotten part allowed making magic function copy data one proper value another used make subscript subscript assign saner also readable restricts ref deref stuff fewer place meaning fewer potential bug proper value passed thing like deref call resulting fewer argument call feeling make foreign function much much easier list append would need expand list element call without worry type stuff,,
2657,c97b5e8f032982ea811de4a97c8fb050f27920f4,ascinated Box <FascinatedBox@gmail.com>, 2014-05-13 00:38:09 -0700, , value rewriting part object hold register annoying case checking object valid value something like object inner_value flag whatever benefit one value unboxed object act like normal one case o_jump_if content object unboxed making o_jump_if work regardless something object commit value lily holding collection flag value sig using inner value brought lot nice thing like left naming change make thing take value instead sig value pair sort stuff,,
2658,450bbfbb816ad6d2daec543b0f916ddbbfbcb59a,ascinated Box <FascinatedBox@gmail.com>, 2014-05-09 20:45:17 -0700, , value rewriting part fix part hash appears part worked never make clean fix lily_debug.c make sense broken since doe dump internals random thing left behind part removed commit hash key one value value another proper value allowed hash take advantage new call handle assignment anything anything subscript subscript assignment greatly improved hash list use improved method setting value taking axe body two function fun subscript assignment allows nil value never hard enough without test yet though hash still ref key likely future whatever called replaced take key value register doe lookup new elem creation assignment one whack raise errnomem lot simpler nicer,,
2659,89879cd764bbb5f518cfac6f1791ade5ac168f50,ascinated Box <FascinatedBox@gmail.com>, 2014-05-09 15:07:06 -0700, , value rewriting part list fixed branch made handling rewrite inner value contain proper value set value instead flag value union stuck branch big change internally going bit messy reason found 15. put simply allows code reuse value passed around much easier change said done cosmetic change rather get meat fixing thing change list hold proper value currently added handle assigning two value signature list subscript subscript assignment handled calling list related bit stripped lily_gc.c lily_value.c updated handling list element change fully working pass blastmaster.py fully memory leak issue introduced,,
2660,8943193f27bb1979d281687a7f0755db2b570756,ascinated Box <FascinatedBox@gmail.com>, 2014-05-06 15:58:00 -0700, , simplify object assign,,
2661,9e292f23af96a0025e64a74a4cce945c0c29c5c9,ascinated Box <FascinatedBox@gmail.com>, 2014-05-06 13:12:33 -0700, , better idea directly copy flag longer inserted register flag register flag copied using plain old assignment right flag set register sym_is_nil,,
2662,31de21be36d311daac016c81f19dab3bcbb5f52b,ascinated Box <FascinatedBox@gmail.com>, 2014-05-06 06:26:32 -0700, , copy_nil_flags comment update done intend add new flag soon macro handle nility,,
2663,5bb1e348849c8b5f8196489035bae23122ee17a1,ascinated Box <FascinatedBox@gmail.com>, 2014-05-06 01:47:15 -0700, , drop also add emitter obsolete var method depth method depth precise allow upvalues later definitely stay getting rid also nice effect removing flag time totally useless slightly dangerous copied added emitter macro check particular symbol global one done reduce potential error future,,
2664,c6ba9a6188d244691d92fb6c8851696ca2b15554,ascinated Box <FascinatedBox@gmail.com>, 2014-05-06 00:32:56 -0700, , parser __main__ local globals regardless current scope logic oops one check front another value assumed global current scope global belong __main__ even __main__ done access __main__ value globals always done o_get_global o_set_global instead time,,
2665,d9292d306f2e71d1e7e042f962483d2ff148f77c,ascinated Box <FascinatedBox@gmail.com>, 2014-05-05 00:15:48 -0700, , hash value default object fix also fixed issue hash value object could result object value unset fixed another issue lily_value hash deref setting hash_value gc_entry value.generic null hash ref done list hash prevent looking value deref normally added couple test sanity.ly also pas,,
2666,468dbd3d31d8784ad9d2269940851841ac42a2f0,ascinated Box <FascinatedBox@gmail.com>, 2014-05-04 21:23:56 -0700, , hash properly marked collected,,
2667,d68059ace6957b646da901594b38157f875f5d77,ascinated Box <FascinatedBox@gmail.com>, 2014-05-02 23:29:08 -0700, , symtab properly tag hash circular,,
2668,d65769eb5550712c2a8fa8b9bebe0dca0ab123cc,ascinated Box <FascinatedBox@gmail.com>, 2014-05-02 18:37:36 -0700, , emitter oops formatting fix last commit,,
2669,799891bf9fd777dd96d79c058b23f3603f3b496a,ascinated Box <FascinatedBox@gmail.com>, 2014-05-02 18:34:49 -0700, , emitter try_get_storage get_storage cruft removal every call try_get_storage check failure see needed raise nomem get_storage never return null storage raise nomem needed remove bunch duplicate potential raising code lot different part emitter good riddance,,
2670,80c68624c75271322e9cf207c65a4314d165981b,ascinated Box <FascinatedBox@gmail.com>, 2014-05-02 18:13:49 -0700, , emitter put o_build_ stuff new write_build_op two area using o_build_list one area using o_build_hash three place used near identical code remove favor one call take fair number params move build stuff one place nice,,
2671,70a8549a80b1df09dba8bda6ffe896954cfba8ed,ascinated Box <FascinatedBox@gmail.com>, 2014-05-02 16:22:54 -0700, , finally allow static hash fix introduces new token tk_arrow handle showing associativity key value tree_hash also introduced hold chain key value key value ... pair looked building hash hash building account multiple key make right key resulting value python ruby well lua think key value default object yet key intentional object key object due decision stall bit later added test sanity.ly test new static hash creation,,
2672,a8104c8cffa6f39d7315b6c408bf2c9fdc5eb3e7,ascinated Box <FascinatedBox@gmail.com>, 2014-04-28 23:36:09 -0700, , kick deref new value stuff symtab lily_value thing take symtab really reason let stay symtab also spare stuff including symtab really want deref new value creation stuff,,
2673,ed985ec03d754752486e425b269779bc126a9dab,ascinated Box <FascinatedBox@gmail.com>, 2014-04-27 23:09:36 -0700, , remove reference circle_buster circle_buster dead,,
2674,bbaefaad29cdbb11ff488ec4b1ac2bf8db4fab30,ascinated Box <FascinatedBox@gmail.com>, 2014-04-26 12:48:11 -0700, , ast remove commented code incorrect comment true since ast got save chain,,
2675,7b89980cb49da5944f7bd9b8d2a3f16cb790ad78,ascinated Box <FascinatedBox@gmail.com>, 2014-04-25 21:17:20 -0700, , symtab calculated hash also trick zapping lexer hash trick take char cast uint64_t set cast zero cause whole char zero filled avoiding memset call lexer hot part lexer done partly kept lily properly compiled clang somehow hash giving print declared error,,
2676,13c38a002e2ea6d1198dfdec2767e159af27544b,ascinated Box <FascinatedBox@gmail.com>, 2014-04-25 16:52:05 -0700, , parser remove incorrect block related comment lily_parser,,
2677,40ed17acd95563841aef7112ad992cd531fe39b3,ascinated Box <FascinatedBox@gmail.com>, 2014-04-25 15:38:54 -0700, , kick object assign o_set_global use fix caused o_set_global special casing object decided would easiest kick object assignment call call o_set_global object left,,
2678,2803dc437f7a5950343672f1a4b285ed3f408812,ascinated Box <FascinatedBox@gmail.com>, 2014-04-25 14:15:42 -0700, , allow long signature match fix comparison done pointer new failing test added additionally failure binary ops print full type instead class mean return created two different list,,
2679,3b93e07d2207ff7c9380ce114e9bb96ae2c94edd,ascinated Box <FascinatedBox@gmail.com>, 2014-04-25 13:04:05 -0700, , always fix top line number catching raise fix small audit show looked various place find anywhere line numbering wrong reason saw line issue aft anything raise error without using helper would cause line number fixed error nomem raised directly thus causing problem,,
2680,7c2e499b23537dae39499a013c4dfc4854823d73,ascinated Box <FascinatedBox@gmail.com>, 2014-04-24 01:30:22 -0700,2, finally implement garbage collector fix circular value need entry created request add gc_entry may trigger set threshold item listed type like list integer entry become circular additionally symtab still deref value destroy even entry attached garbage collector work four phase use register use gc_marker call associated class register value call decends value mark everything seen setting entry last_pass start collecting everything value seen collect value value collected may refer dealing circular ref _unused_ register check value entry doe mark register nil prevents prep_registers trying deref value later finally free leftover value safe value longer referred anything else also sort entry visited unused entry used entry recount amount living value also done close call say register force clear everything good unfortunately symtab teardown kind weird fire request entry creation important think value creation transactional o_build_list good example new list assigned old one building value instead hereby declare circle_buster marking thing sym_is_circular worst idea ever added lily would refcounting signature decision made list far worse handle note hash marked done static hash created ... goodbye circle_buster,,
2681,298045227b92cafe0110816da5d4e27e3a736fe9,ascinated Box <FascinatedBox@gmail.com>, 2014-04-11 17:27:42 -0700, , ast kick saved_trees favor linked list save entry pretty sure old way minor bug would possible entered tree incorrect parent think would caused major problem though make tree saving seem like hack also make trying dump ast easier ... least hope,,
2682,12d8e13a50eee1625aed127f0ee6ea4d55ee662d,ascinated Box <FascinatedBox@gmail.com>, 2014-04-11 14:55:07 -0700,1, lexer pointer mean fewer subscript fix using pointer mean lexer instead ton lexer lex_buffer intermediate fix though lex_bufpos still exists need sorta synced well getting top lily_lexer still improvement far lexer lex_buffer type additionally first commit github going start marking fixed bug github tracker nnn instead evil confusion,,
2683,77555358e3c0ea8cc56fe94a6084db1992d29dda,ascinated Box <FascinatedBox@gmail.com>, 2014-04-06 00:24:55 -0700, , force objdir exist via useless .gitignore,,
2684,ff0fb787e1138739ce2b0b3ee9b13349eb00be43,ascinated Box <FascinatedBox@gmail.com>, 2014-04-01 11:16:18 -0700, , hash class siphash24 used randomization hash created like list except take two argument key value hash str int hash take str key return int result example value hash flexible well hash also create value subscript assignment add new value simply somehash newkey value cover static declaration hash circle_busting properly little tidbit show fprintf printing number done consistent lily_msgbuf able add double using improvment truncates number double size necessary raiser raise prebuilt message done control hash key printed error new error errnosuchkey raised subscript try access key doe exist much code used show parse list made generic template_count lily_class work either list hash show display hash show key value yet possible create hash static manner fixed next,,
2685,d002ff520ac23acbe9c68d26edf2bd984a03e2a0,ascinated Box <FascinatedBox@gmail.com>, 2014-03-25 12:45:19 -0700, , fix potential leak nil object ssa circularity suppose list created contains nil object assigned subscript assign new value created flag adjusted mean circle_buster check new value circular test added sanity.ly circular reference test well,,
2686,494677118df7930348a51ff5ca804e6d80bf2154,ascinated Box <FascinatedBox@gmail.com>, 2014-03-25 01:00:36 -0700, , check circle object assign result register list element mean impossible create circular reference object assignment,,
2687,129ceb1920440d308d601cb3b9c772b9cac844d7,ascinated Box <FascinatedBox@gmail.com>, 2014-03-25 00:54:02 -0700, , symtab think list ssa circular mark fix bug assigning new list element subscript assign could cause list lost may correct solution work pass new check added sanity.ly removed code used check list list fully admit likely wrong way eventually fix adding garbage collector,,
2688,3671d7a8646a4af951120da057d6a14c3de9e11e,ascinated Box <FascinatedBox@gmail.com>, 2014-03-21 20:48:40 -0700, , fix subscript assign circularity testing test added sanity.ly ssa strip circularity flag flag value set new value running circle_buster additionally circle_buster longer add circle count object match circularity already set together two fix bug assigning list circular ref something already marked circular would cause either leak invalid free,,
2689,c0df0dca6b9f961ee9daede2bb10d951c5e30b1d,ascinated Box <FascinatedBox@gmail.com>, 2014-03-21 18:09:48 -0700, , make subscript simpler saner also kick execute old version switching flag made object handling harder follow done partly make introducing hash easier,,
2690,237ac6bc14c3008fcdc701ef72ff4c11aec6459e,ascinated Box <FascinatedBox@gmail.com>, 2014-03-18 15:37:13 -0700, , massive simplification subscript assign,,
2691,ef8def5ee1a156980413344de8de00f319fabdac,ascinated Box <FascinatedBox@gmail.com>, 2014-03-14 16:37:07 -0700, , blastmaster stop test doe finish like fix test fail passing long time blastmaster pushing much spam failing seen blastmaster stop prevent sort thing happening,,
2692,835a2f9ff57963be18873e6dbabdb9c770e7247f,ascinated Box <FascinatedBox@gmail.com>, 2014-03-14 16:34:11 -0700, , fixed test failing instead lily top,,
2693,70ccb165a72e58f98e660c68a31de807817bc964,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 22:27:15 -0700, , emitter remove block_depth nothing,,
2694,bc10608b648c64e8c2d2cc6c95d69c5166988f71,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 22:16:42 -0700, , emitter bad result check trifecta result null result trying check reg spot reason worse yet correct example,,
2695,f0ce34ba162072987b959ac7637b5b4119320283,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 22:12:15 -0700, , emitter fix oops allowed return within __main__ another case wrong check used emitter checking __main__ block rather checking inside method,,
2696,1d8a5f646fe3439a5e6c01ef485d2547855b1f19,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 22:06:36 -0700, , emitter fix oops allowed else within non block like think way back thing around,,
2697,3aac6a69a65e998416f85ebe554ec21e1c3d2279,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 21:57:01 -0700, , fix checked reg oops caused sanity.ly fail,,
2698,81afb277b2ef60dbc8267cda0479cf9ba3db7097,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 11:43:10 -0700, , register info class_name debug print class possible fix,,
2699,9d69b989bb24f9c68c0150536a84ae51347b0bcc,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 11:38:05 -0700, , debug put builtin builtins builtin value,,
2700,7061960fca2800c0ede5fe169484d007710dc6a3,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 11:10:57 -0700, , removed unused line_num name field emitter ensures every named var unique position taken storage register therefore information grabbed current method register info rather register slims register focus holding value important stuff method register_info hold context like information never change,,
2701,11458205c09d784204a32e8e5987b946d5d0083b,ascinated Box <FascinatedBox@gmail.com>, 2014-03-11 11:05:50 -0700, , code_pos novalue_error register info changed code_pos appropriate done considered unclear added macro handle loading register checking nil done novalue_error take index used load register instead register novalue_error take index use current method register info look name done line number name field register removed future commit,,
2702,8669eb5ecad318f22c591754a76ac69f5bc9de67,ascinated Box <FascinatedBox@gmail.com>, 2014-03-08 17:32:26 -0800, , debug pass around state allowed lot simplifying much thought determine easiest way handling debug keep getting complicated also syncs part lily pas around state take flag determine show given allowed take lot repeated work done show_code like printing indent arrow different place finally show sym function debug take argument current method __main__ current method necessary since register might reference current method __main__ done step toward printing class also toward simplifying data register carry,,
2703,d14ef1bd8915743653c8e9315b8cd90ff48f504a,ascinated Box <FascinatedBox@gmail.com>, 2014-03-04 12:51:07 -0800, , get rid show symtab option obsolete superceded show show really useful way peer symtab see code actually executed used verify new opcodes given make sure actually worked typically made debug work first second however thing changed lately show came along much granular applied inner method show symtab always missed inner method new opcodes become frequent matured old one served reference access new one sanity.ly grown large turned useful mountain spam good option one time however superceded longer useful option may added parser future time though,,
2704,b001d3da527decb7aacdd281c807726bfc4c6d5f,ascinated Box <FascinatedBox@gmail.com>, 2014-03-04 12:17:45 -0800, , debug fix show_code lot lot well starting adding end made sense start one change ending part loop,,
2705,ea24592d330baa7e5678b488fbb9810c674f2a55,ascinated Box <FascinatedBox@gmail.com>, 2014-03-02 17:32:11 -0800, , fix another possible circular reference issue test added sanity.ly problem circle_buster would find list already dived check written check tag anything run list marked visited list marked circular returned count bumped test added sanity.ly circular reference checking area blastmaster run make sure cause issue,,
2706,d2ffd2e7a608d179393d3673b8ac701e5ad49947,ascinated Box <FascinatedBox@gmail.com>, 2014-02-28 12:50:25 -0800, , fix oops grabbing err_function incorrectly found poking around caused forgetting change grab lily went using register instead address value,,
2707,7dd1de38d399ec64cffd79ab9c1e6be7878cdf57,ascinated Box <FascinatedBox@gmail.com>, 2014-02-28 11:17:52 -0800, , fix method method nil causing infinite alloc error raiser discovered accident caused method signature using null place nil parser scanned return would finalize think incomplete signature return would would cause parser yield method signature would return thus impossible match return given raiser would infinite loop trying print signature,,
2708,2a539db6c746bf3694bbcc6d742102eaac32ec25,ascinated Box <FascinatedBox@gmail.com>, 2014-02-28 11:10:23 -0800, , symtab fix issue seed scanning set properly found running blastmaster.py thanks aft,,
2709,a266ec786d291ccc7607ec50292e4d6c1c7b122b,ascinated Box <FascinatedBox@gmail.com>, 2014-02-27 08:50:46 -0800, , fix oops argument ordering show is_global reg_id reg_id is_global caused show report register lot place,,
2710,9f2651838533f6804cf9e189f413213b53e3b157,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 21:43:17 -0800, , symtab pas arg_ids directly seed scanner seed scanner never anything else seed struct send arg_ids directly old behavior relic callables read arg count seed arg count wrong,,
2711,529a00545d5285d588cdc1635814d89ad947eb29,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 21:36:49 -0800, , symtab mark list one template seed scanning change list hash work except one take single inner sig take two inner sigs,,
2712,5b8730d5a16a9afe6bccd73ea7d4645378597b10,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 15:40:55 -0800, , ast pool keep chain available tree fix previously pool used array extra tree initially worked doubled realloced size anything complex assignment would result realloc allocating likely tree needed new way tree created linked needed also think new way might faster expensive ish call needed available tree,,
2713,4a2b325bf048495ba7cacb71bcf2f42e6c793e73,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 15:18:07 -0800,87, emitter parenth store value arg_start left found accident trying fix ast use chain available tree caused crash sanity.ly 791 likely new method using tree stick front instead expanding back verified arg_start correct looking emitter evals parenth tree walking weird,,
2714,9d4abbf328df0e8a89e076f7b251a9e1700a1714,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 12:40:47 -0800, , debug show say method builtin instead line fix saying method line zero rather odd could sound somewhat impossible new user say builtin value make sense,,
2715,9b12856ea1416815bb7b32531b77d688b5cd5545,ascinated Box <FascinatedBox@gmail.com>, 2014-02-25 11:58:06 -0800, , emitter fix crash break return outside loop fix oops resulted loop_start __main__ block set two new test added check break continue outside loop,,
2716,2e769038f76a9f8a36a2123a4a7aa9125c13ea94,ascinated Box <FascinatedBox@gmail.com>, 2014-02-24 17:39:10 -0800, , main __main__ fix mean global method passed show inspected issue __main__ chosen consistent python imply important two underscore probably something like reassign,,
2717,616d8ff7beb77defb19c8695c67158cbf5bbcee6,ascinated Box <FascinatedBox@gmail.com>, 2014-02-24 16:32:53 -0800, , debug show group code line number fix make show far useful one easily see code result particular line number make easier see wrong code generated something helping identify problem faster also pretty neat looking,,
2718,5a1a638866a6b1d9751650b180a6547bfcbd3d5e,ascinated Box <FascinatedBox@gmail.com>, 2014-02-24 15:44:59 -0800, , debug fix oops showing global output show printing arror global output actually showing result whoop,,
2719,0316172a767d0ec158d6e432c14e155797db04aa,ascinated Box <FascinatedBox@gmail.com>, 2014-02-24 15:13:50 -0800, , symtab fix another seed scan oops allocation sizeof use lily_sig lily_sig siglist store pointer actual object make difference 352 byte fairly big given small lily thing created hurray smaller,,
2720,5e795fec31bbca352145335830a98e587cb0fe23,ascinated Box <FascinatedBox@gmail.com>, 2014-02-24 15:09:35 -0800, , symtab oops fix seed scanning could cause potential crash case template assumed complex sig already created crash would caused trying set template_pos null sig returned credit lily_aft spotting,,
2721,b6bc7e97eeb731c8e1bdf4bd07734947a325c05e,ascinated Box <FascinatedBox@gmail.com>, 2014-02-22 17:20:16 -0800, , template work empty call list size added fix list size member take parameter except self required small change call handle case finally template checked mean list size work list template always match first type,,
2722,93b4fea45f12c32675d9bf6a31fade69ac14cfaa,ascinated Box <FascinatedBox@gmail.com>, 2014-02-22 16:02:14 -0800, , sigcast turned emit_obj_assign caller omits sending sig instead check object wanted calling emit_obj_assign sigcast written long time ago thought conversion might necessary case point likely become case doe become case sigcast resurrected ask write object assign,,
2723,70d3c93795f3f6c370f354abb254689dc03bb612,ascinated Box <FascinatedBox@gmail.com>, 2014-02-19 21:04:56 -0800, , added template class builtin sym scanning modular better sig creation longer initializes list instead leaving caller simplifies left inside corner case template class added doe anything used anywhere though look used upcoming commits scanning function used parse function seed modular handle complex argument place required rewriting seed current function made easy rewrite done partly allow template scanning take extra argument,,
2724,6559bcf723074463adc3f3b851907c7d18d9f48a,ascinated Box <FascinatedBox@gmail.com>, 2014-02-16 16:12:41 -0800, , symtab tag signature might hold circular value check set nested list check saving time,,
2725,19d19b7ff736b15acadb037846620793e03fb380,ascinated Box <FascinatedBox@gmail.com>, 2014-02-15 15:32:49 -0800, , flatten type information fix longer call sigs value_sig usage anymore done simplify signature addition template class future new system sig underlying siglist unused signature complex method function list siglist filled needed depending class sigs also flag field later used mark certain signature possibly circular,,
2726,0fe5e3dc7e7bf9fc0a05e711351a0d253763e1db,ascinated Box <FascinatedBox@gmail.com>, 2014-02-11 19:10:11 -0800, , comment fix signature longer refcounted signature linked symtab root_sig chain comment longer valid would also like forget ever,,
2727,5544857a4c5f13a554b311221e3ab0c979928362,ascinated Box <FascinatedBox@gmail.com>, 2014-02-11 14:42:45 -0800, , signature guaranteed unique fix previously parser would create new signature every complex type came resulted lot different signature described thing two signature could describe thing complex one would completely compared function rather complicated called new complex signature inner data filled either return signature given older one describes thing caller ensures var using old signature two nice benefit signature compared pointer even complex lily_sigequal longer necessary signature unique also checked many sigs alive end sanity.ly without patch without patch 202 signature dropped 43. quarter original size current patch deletes duplicate signature created made parser remove signature chain symtab however might decide save reuse future would save lot memory,,
2728,379c40f3fd33a89eb516a418140f877dc2ee06c4,ascinated Box <FascinatedBox@gmail.com>, 2014-02-10 15:46:04 -0800, , symtab create sigs class need object share sigs method function list always new signature returned create default default never used waste memory object share signature probably possible discovered emitter parser never write value_sig part rather inner sig object contained within value object save tiny bit memory ... around 100 byte every little bit help,,
2729,55fbc5cfb5a4a8e78f6ec5fec2aa9c0269723b06,ascinated Box <FascinatedBox@gmail.com>, 2014-02-10 14:59:49 -0800, , emitter try optimize assign possible fix case assignment avoided instead rewriting last result assign left side assignment literal good example previously emitter would write o_get_const storage assign storage var emitter rewrite result o_get_const load var long var local function determines something optimized blacklist condition may inclusive,,
2730,461a3bf97d6731f200c46ea8bbb05200b65c9517,ascinated Box <FascinatedBox@gmail.com>, 2014-02-09 18:55:41 -0800, , literal cached concat treat strs immutable fix integer number str literal cached duplicate longer possible integer number literal one call str literal another lexer str collection longer creates str val string made may already cache symtab clone string needed str concat longer reallocs either arg result arg instead creates new string derefs old string partly strcpy complained overlap otherwise triggered literal cached,,
2731,9a054a357f8b819df8e48e6a2a663f0fbe666a25,ascinated Box <FascinatedBox@gmail.com>, 2014-02-08 21:59:31 -0800, , simplify couple symtab thing var lookup checking name null never ever happens since var creation give copy given name sure blastmaster test issue also touched itering class callables,,
2732,c208c7e704f310823853db6029ff109dd5d6e23a,ascinated Box <FascinatedBox@gmail.com>, 2014-02-08 21:43:27 -0800,30, finally get around hash based lookup fix bigger thing right however also extremely tired seeing still around especially since made 0.6 lexer creates shorthash every label make based first eight byte shorthash check every lookup done strcmp nice save lot strcmp time think shorthashes given builtin class keywords might particular endian ness though entirely sure fix later,,
2733,4ee5dcbf8b61d6ec1cc6e510df3321b566aea6b5,ascinated Box <FascinatedBox@gmail.com>, 2014-02-08 01:06:09 -0800, , added __method__ equivalent __func__ fix changed symtab call getting file literal getting string literal __method__ new keyword even work current method main,,
2734,3abe50f2651849f644e7889826960af4675c0c74,ascinated Box <FascinatedBox@gmail.com>, 2014-02-07 19:59:50 -0800, , method properly reuse old storage oops last commit new method always started storage_start null thus method make register inner block could share storage kept emitter updated appropriately make method reuse storage method gone register storage indicating register use definitely working sanity.ly memory use noticable amount valgrind,,
2735,b932e18215445cc836ec7c990957c2687456b4dc,ascinated Box <FascinatedBox@gmail.com>, 2014-02-07 17:46:11 -0800, , lily register based massive change fix worked address storage literal var written system worked perfectly also meant method thread safe motivation moving register based new method given stack register storing value register prepared method enters cleared method exited new system every method thread safe long doe access globals additionally global access opcodes adjusted easily later mutex lock unlock accessing globals big change storage single pool controlled emitter method different set storage storage map register time instead emit time storage reused method exit var deleted method leaf changed future reused possible method longer access variable method used pas everything stored address parser never noticed sanity.ly test adjusted couple place account  method closed need finalize emitter writes information register method need create register properly later show debug tweaked bit information show global local register appropriate show opcode take marker tell given register local global scoping var bit worse used individual method table dump scope stuff yet small touchup done aft upon finding bug since aft free block told sometimes new block address old block search free look first block marked non deleted since newest one also aft realloc doe,,
2736,63eaaf3af6e682e1bec894f8aa86c284f02850ef,ascinated Box <FascinatedBox@gmail.com>, 2014-01-07 18:51:57 -0800, , parser collect_var_sig return sig collected instead stacking parser sig stack made method collection could store signature inside realloc much however quickly abused everything shoved sigs checked also dropped caller call arg collection method function drain use mean chance sig stack leaking larger also make collect_var_sig simpler use since return value like along also got rid helper merging back one big core except collection callable argument big enough shoved another function externally change internally tiny bit simplification,,
2737,71fecb55a36fa32f61e8978be8b1f1daa79ce25c,ascinated Box <FascinatedBox@gmail.com>, 2014-01-06 19:01:41 -0800, , added modulo modulo equal updated emitter opnames fix emitter opnames date would given hilariously wrong error case possibly crashed others modulo equal also folded modulo assign test added since modulo pretty basic,,
2738,d071a1d445895ca352d1abca5b4cc683cf669d02,ascinated Box <FascinatedBox@gmail.com>, 2014-01-04 15:21:08 -0800, , implement ... add macro loop block check new macro is_loop_block used place individual check scattered different part lily_emitter.c done make easier add loop block make sure one block type missed obscure area ... went along fine,,
2739,3cd2dcc46012a4f76a41d850b284b020469cb587,ascinated Box <FascinatedBox@gmail.com>, 2014-01-03 16:33:32 -0800, , add bitwise ops fix put comparison equality ops work without parens opposed would work way bitwise different precedence may eventually flattened,,
2740,644d1705da5ba8aea4f7142610c686e5b78818b3,ascinated Box <FascinatedBox@gmail.com>, 2014-01-03 15:21:06 -0800, , allow integer number typecasting fix much easier expected also fixed object containing integer cast number vice versa done consistency would require casting cast test added sanity.ly well,,
2741,8888a099d05f8350106b0d17d7fc43e6e1f9e3bf,ascinated Box <FascinatedBox@gmail.com>, 2013-12-25 19:53:22 -0800, , final fix added sanity.ly test fixed scanning fix finally sanity.ly test make sure loop working correctly lexer fixed seen term token finally comment filtering expression parser fixed already todo asking done,,
2742,5923d9d0462b9277330d69f1503990898d7151da,ascinated Box <FascinatedBox@gmail.com>, 2013-12-25 18:24:25 -0800, , add fix various thing broken last commit also added new error errbadvalue triggered given range zero couple thing iron done sanity test yet coming,,
2743,27f47ebaf9f95c4dac709536d2c4dc8288b05896,ascinated Box <FascinatedBox@gmail.com>, 2013-12-25 16:17:41 -0800, , finally implement integer loop implemented user assignment loop var usually change number loop done consistent lua loop step supported yet added soon doe support iteration going within range integer listofintegers kind stuff completed future point time,,
2744,509138f0432b22773cc47b0319546d6594d42dbd,ascinated Box <FascinatedBox@gmail.com>, 2013-12-24 15:35:28 -0800, , parser put common var creation code get_named_var four different place method creating new unique var used unites help prevent future accident also simplifies code removed macro part var declaration comma arg handling,,
2745,b0d01c9b1ab7416eec092b3c524502dba0222475,ascinated Box <FascinatedBox@gmail.com>, 2013-12-24 15:15:34 -0800, , emitter move patch growing code function couple place thing might well make function everything stay one place,,
2746,59c9f99e0a4c11c01017fa19194be59b835d7c1d,ascinated Box <FascinatedBox@gmail.com>, 2013-12-11 15:56:30 -0800, , fix sub assign nility deref circularity check fails else set make sure s_is_circular unset case set previously list contains object object check object value refcounted circularity derefing list containing non object may need ref regardless flag use flag check deref continue consider str nil_s list str nil_s str code previously checked initial flag ref resulted str getting ref list marking non nil caused extra deref caught randomly running valgrind sanity.ly,,
2747,d1a49e20dae190df91f6590c6e7fadcc3d3d7868,ascinated Box <FascinatedBox@gmail.com>, 2013-12-09 15:37:53 -0800, , emitter block structs prev next block entry exit saner remove stack position used nightmare keep track also alloc free code pile stuff annoying track method enter soon var found patch top_method_ret done additionally fixed bug collect_call would always update emitter top_method_ret end call dangerous unnecessary,,
2748,7b6dfb6b421e5339773b5006d0848d87ef2a527e,ascinated Box <FascinatedBox@gmail.com>, 2013-12-06 20:01:59 -0800, , symtab remove impossible null check,,
2749,cfe22e932f03309ce40d66026c1ac5e463c11ed5,ascinated Box <FascinatedBox@gmail.com>, 2013-12-04 13:48:49 -0800, , added __line__ __file__ keywords replace literal fix disabled within statement since useful within expression declared var since keywords recommended __file__ implemented try reuse literal last used lazy init also make using __file__ take extra memory except adding __file__ static const table __line__ attempt thing may changed future unlikely line number used multiple time,,
2750,bfcb8c0342fdf3f941822853885542f1c73ec2b1,ascinated Box <FascinatedBox@gmail.com>, 2013-12-04 01:55:19 -0800, , set value given reason given value set instead expecting caller set lit value value already given,,
2751,e2f2734e4a633f3d03e99a49020d6e665ac68c25,ascinated Box <FascinatedBox@gmail.com>, 2013-12-02 14:58:21 -0800, , add added test sanity.ly fix,,
2752,31b556b52ab0b147af64791a76714b58d2dc746c,ascinated Box <FascinatedBox@gmail.com>, 2013-11-30 16:59:56 -0800, , parser disable user declared function fix anything except alias builtins let declared also fix bug function declared via parse_decl including proper type info would cause crash,,
2753,2531c1ee24e456e5450e235de1383c628d55b52e,ascinated Box <FascinatedBox@gmail.com>, 2013-11-29 00:58:07 -0800, , subscript assign update nil ity fix sad missed initially yes subscript assign updating nil ity bad,,
2754,786fa9ef9561a7aa24bd6e0951de0f28a2542243,ascinated Box <FascinatedBox@gmail.com>, 2013-11-28 20:10:57 -0800, , check circular list subscript assign fix uncovered accident playing around subscript assignment involving object fixed subscript assign check list object tagging circular instead bumping ref added test sanity.ly ensure come,,
2755,0187240c0cecdb16e1f442da3dbe39652bfc7e7f,ascinated Box <FascinatedBox@gmail.com>, 2013-10-01 12:53:39 -0700, , add multi line comment fix also added test test pas sanity.ly decided use instead consistent multi line string,,
2756,a10e76e092b88a837fb803442486c0ace7830eb3,ascinated Box <FascinatedBox@gmail.com>, 2013-09-30 20:22:43 -0700, , fix line number eof counted twice file added hit_eof lexer tracking ensures bump line number twice also execute file empty tag would cause invalid read first lily_lexer call,,
2757,621f235e7985703d9d5bb6c11a3e9b26465e88b2,ascinated Box <FascinatedBox@gmail.com>, 2013-09-30 18:46:53 -0700, , fix issue eof comment eof newline previously eof newline comment would trigger infinite loop case would cause lily_lexer read file forever also fixed read_line lexer return line eof instead eof end current line causing last line read right eof also counting twice added couple test pas fail prevent regression,,
2758,28fb0e180e20f0be5555de5acfe2b0aecd1b1824,ascinated Box <FascinatedBox@gmail.com>, 2013-09-30 18:37:41 -0700, , lexer use lexer_mode determine file str based,,
2759,80dc6801695f2486f293e5e874d6564d1277ae45,ascinated Box <FascinatedBox@gmail.com>, 2013-09-30 00:12:06 -0700, , add end every method returning value fix included adding new exception line number put one raise error test added set failing test make sure reoccur,,
2760,05dbe53ee0f4f4fdc0f25d5e1b3c2c3365842c46,ascinated Box <FascinatedBox@gmail.com>, 2013-09-29 22:26:54 -0700, , emitter move eval_call saving also add list saving fix previously call evaluated inside list would save value already evaluated could cause storage overwritten calling method resulting strange value storage caller technique used save value list bit crude work better version would nice future especially method called lot also added note never ever registering var within new ,,
2761,4f4036da8e3a7c78264beed79c067e88c7e57bed,ascinated Box <FascinatedBox@gmail.com>, 2013-09-27 07:59:48 -0700, , lexer eof bump line number set handling page data fix also touched read_line lexer would use function resize lexer buffer instead making inline lexer set tk_invalid start check newline beginning bumping line number eof seen also fix line number reported zero case finally test added intentionally doe newline end make sure doe occur,,
2762,eb213f1ca12673d412983484f9a04dd2435a6099,ascinated Box <FascinatedBox@gmail.com>, 2013-09-26 08:40:51 -0700, , add list object test sanity.ly fix,,
2763,3a5248432f4571c863abb403ee51ef2447aa3906,ascinated Box <FascinatedBox@gmail.com>, 2013-09-25 22:46:39 -0700, , various fix make list empty object work fix fix o_build_list implementation check object sig null empty object testing object holding something refcounted sig is_refcounted adjustment made check empty object elsewhere prevent possible crash say assigning nil object added test test pas sanity.ly however circular ref test might taken test pas sanity.ly later simply lot test tested,,
2764,771c4e2cebeedb9abc320654d88477cca2311ecd,ascinated Box <FascinatedBox@gmail.com>, 2013-09-25 22:05:42 -0700, , show write nil circular also remove unused added everything print properly uncovered searching different bug also show_list_value value never used removed,,
2765,d6fc0e4ebc5d93f7fe546bdbc6a655dbaf6bb272,ascinated Box <FascinatedBox@gmail.com>, 2013-09-25 21:27:47 -0700, , blastmaster run pas test fail test test pas sanity.ly usually test break one doe make near first run fail test usually never break second,,
2766,6de0932849a3217187c6a481bcdbc07e72579629,ascinated Box <FascinatedBox@gmail.com>, 2013-09-25 09:47:22 -0700, , huge fix circular list handled fix additionally circle_buster fixed done correctly great deal analysis discovered circle_buster tag actual object circular never list symtab deletes object tagged circular nothing else longer check refcount object object list never shared always value object circular free circle_buster return many ref known circular used adjust object assigned drop many ref necessary symtab free list marked circular need deref accomodate circle_buster check nil flag set using value list check finally blastmaster run ensure introduced regression subscript assign still lot problem though step right direction,,
2767,865b490cd0ef514b67335acb331b601362289c61,ascinated Box <FascinatedBox@gmail.com>, 2013-09-23 02:07:57 -0700, , fix oops builtin printfmt caused invalid read fix double comparing lily_raiser formatting printer made problem obvious,,
2768,c9725f0220b5a6aa8ed43f69144ffe27fd85456d,ascinated Box <FascinatedBox@gmail.com>, 2013-09-22 22:19:20 -0700,54, added copy_nil_flag fixed flag copy lily_vm.c fix copy_nil_flag new macro used copy nil part sym flag another sym nil flag replaces hand three different area done another bug recently wherein valid nil return used would crash thought nil bug occured improper nil setting o_return_val assumed always nil method args blasted everything prevent problem causing yet another bug also caused method copied flag args,,
2769,0c3ac5c7b1515e211eccdc727c0dd778bccb7ce1,ascinated Box <FascinatedBox@gmail.com>, 2013-09-21 01:06:14 -0700,45, finally done show absolutely awesome show new keyword lily print information given value far print sym type var literal storage mystery relevant symbol info var mean dumping sig name right place method function storage mystery syms address printed since longer shown show tell stats kind variable print string integer number start dump object list function even method nested way get list method print name code method everything indented like new style debug indenting everything fit awesomely also note hit circular ref print appropriate info nil value,,
2770,6ee74ab8c4d5f8d5232afaaf1217d9318d8c9867,ascinated Box <FascinatedBox@gmail.com>, 2013-09-21 01:02:45 -0700, , merge branch master http code.google.com lily programming language,,
2771,260a99dc52d9d32ae2064492785cc2acc8555fbf,ascinated Box <FascinatedBox@gmail.com>, 2013-09-20 18:16:25 -0700, , debug properly show literal made adjustment msgbuf moved raiser private function may changed future done reduce includes lily_msgbuf.h causing includers use added add char reset message buffer another use lily_debug show_code take message buffer passed along used show literal fix escape code dump newlines place also func ified realloc code lily_msgbuf.c since nearly identical couple place another step toward fixing,,
2772,ca058df3f0047944d8c74b98ef297c50c803175a,ascinated Box <FascinatedBox@gmail.com>, 2013-09-20 18:16:25 -0700, , debug properly show literal made adjustment msgbuf moved raiser private function may changed future done reduce includes lily_msgbuf.h causing includers use added add char reset message buffer another use lily_debug show_code take message buffer passed along used show literal fix escape code dump newlines place another step toward fixing,,
2773,39e87c81d9071388cddbec6f132fcd8e09c1af1b,ascinated Box <FascinatedBox@gmail.com>, 2013-09-20 14:36:21 -0700, , debug fixups literal dump indent fix code showing literal longer dumped code dumping show value literal also easier matching literal large dump literal like used opcode name space show line number opcodes also print code position enough padding max instead two change make certain line number printed next opcodes within method making easier read considered putting line number indicating arrow code position indicator however lily eventually read file keeping would result massive prefix padding look strange perfectionism absolute sameness printing line number actually fixing anything,,
2774,38776281fd5827173f6a881ee5f6e5a275a60159,ascinated Box <FascinatedBox@gmail.com>, 2013-09-20 12:57:06 -0700, , opcode cleanup specified opcodes finish return value making future patching assign much easier lily_opcode.h detailed explanation opcodes work verification take kept date look pretty nice o_build_list changed longer take signature value_sig result determine proper value possible emitter reuse list storage anymore possible  touched debug bit removing one call info thing unary assign thing also added line number o_return o_return_noval debug print line number return,,
2775,4c41d78491e63bd14782d0d236146ff8b7fae5cf,ascinated Box <FascinatedBox@gmail.com>, 2013-09-17 20:19:01 -0700, , huge debug rewrite code simpler saner easier read assign used look like assign var literal debug would always dump literal top required user look top see value literal referenced bad way thing line number added info crammed save space new debug assign look like ____ assign line integer var line integer literal  assign indent value take ownership clear one last line used separate opcodes thing look like run together line number assign type printed value var name came arrow indicate occuring indicates sent indicate written another arrow type used jump result indicated arrow pointing away mean read intuituve point value subtle indication literal printed referenced line line number printed value additionally storage reference specific address instead number patch little rough around edge clear ops need changed badly order value stuff fixed debug totally fixed,,
2776,e7537936f36e0c2ee4dce966489c12817b7adad3,ascinated Box <FascinatedBox@gmail.com>, 2013-09-11 17:11:36 -0700, , simplify emitter storage grab fixing 50. test added sanity.ly symtab lily_sigequal updated two method compared would cause crash one returned nil emitter simple class need full sig know first two function existed already  rolled lily_emitter eval_call patched would return proper storage holding value causing added place misc test sanity.ly test call returned method,,
2777,278ae502aa43c827e0c2aded1754be06d2e56fb2,ascinated Box <FascinatedBox@gmail.com>, 2013-09-11 15:58:42 -0700, , call work pretty much anything fix bug ever since list introduced never found recently sanity.ly call checking updated cover list building subscript typecasts duplicate lot code used emitter specific unfortunate however keep something like copying name ast holding emitter get,,
2778,6ad38896ea8fc89ec35712076a1a5c2d1db5b123,ascinated Box <FascinatedBox@gmail.com>, 2013-09-11 14:17:08 -0700, , empty list require signature sanity.ly updated first time feature removed sanity.ly previously emitter would try guess type use empty list walking parent offsetting subscript checking right binary etc parser requires signature empty list might change future allow type expression part sanity.ly tested gone rationale make type empty list clear mean passing empty list method clear method str also make call empty list possible without great deal emitter code parser also prevents accidentally wrong guess type resulting confusion may may reversed future,,
2779,e7a5598e891dab16ba4180f0493fd69ee632a626,ascinated Box <FascinatedBox@gmail.com>, 2013-09-09 19:22:22 -0700, , parser expression check save_index close token allowing code incomplete parens close token afterward integer  checking ast still inside expression added test fail prevent regression,,
2780,cd5805b37b82b38d55a423c001aa05cec8981382,ascinated Box <FascinatedBox@gmail.com>, 2013-09-09 15:33:18 -0700, , walk_tree eval_tree broken finally make walk_tree function mostly call function longer try call stuff entirely inline greatly simplifies function per tree type mostly make thing saner function walk tree considered eval instead eval name instead walk also function location movement eval_build_list next helper next since similar,,
2781,04aee37c34252143bd20788eccfd4e5f591cd532,ascinated Box <FascinatedBox@gmail.com>, 2013-09-09 14:13:47 -0700, , fix comment used invalid code explain example oops b.concat never valid bad example use changed b.concat think used sanity.ly well oversight last commit already pushed,,
2782,94d6429cc5debba74f7700b09eac64bbfacf2338,ascinated Box <FascinatedBox@gmail.com>, 2013-09-09 14:11:04 -0700, , update ast comment change merge_oo merge_absorb merge_oo used much call long time new name better reflection actually doe comment relevant well actual code changed,,
2783,ccb640d81b23874a9930b393861986ae6d1e9882,ascinated Box <FascinatedBox@gmail.com>, 2013-09-08 18:22:13 -0700, , fix two issue o_return_val one could cause crash found poking around thing turn o_return_val two problem would ref deref storage going given value nil could lead refing value always assumed value returned nil could cause crash refcounted storage received valid value invalid value added test pas prevent regression allowing nil return may ideal crashing later definitely wrong,,
2784,1c6f2565c34b48fe6a6c3bc781d9b84f5708be80,ascinated Box <FascinatedBox@gmail.com>, 2013-09-08 17:27:27 -0700, , check anonymous call result actually callable fix added test fail prevent regression,,
2785,ebc063c99835fe0bfaea4efb0c395efdb3d4d0c3,ascinated Box <FascinatedBox@gmail.com>, 2013-09-08 16:35:09 -0700, , remove unused parent lily_list_val struct,,
2786,accb8716cc7aefbe25162319e966bbae03c96363,ascinated Box <FascinatedBox@gmail.com>, 2013-09-06 12:17:38 -0700, , make init code consistent emitter done far following change made init section variable created represent returned named thing normally called symtab called symtab init symtab everywhere else similarly ast pool called ret init everywhere else allocation done value returned checked later single long condition check near end init code call destructor object instead custom free call mean likelyhood say ast pool accidentally leaking ast pool deinit called end emphasizes code reuse removing custom free using object deinit end returning null error improves readability code opinion condition ast pool really bad multiple block free call,,
2787,fce218b15af4e806dfe65fe24b84c2f6965e9917,ascinated Box <FascinatedBox@gmail.com>, 2013-09-04 20:42:28 -0700, , trivial touchups last commits,,
2788,1d5fa6d8f9baff918f6c76dfa280b9691ea804ab,ascinated Box <FascinatedBox@gmail.com>, 2013-09-04 15:30:21 -0700,44, disable return main also set main return value fix main return value set trying return main result invalid read parse_return additionally emitter prevents return statement main,,
2789,887b20e75815b8d7dc23608182fb3d1ff64cd8a9,ascinated Box <FascinatedBox@gmail.com>, 2013-09-04 15:12:10 -0700, , leaving tree verify right close token fix issue since introduced somewhere around list added tree enterable either could used close list declaration could closed call could closed commit parser verifies tree type closed actually closed current lexer token two fail test added make sure behavior doe return,,
2790,60351dad4f828686a27ec187da52c7ac17920349,ascinated Box <FascinatedBox@gmail.com>, 2013-09-04 14:31:48 -0700,41, assign chain compound subscript assignment fix two fixed together easy fix together assign chain one assignment run  also work subscript assignment  code handle compound assignment turned function assign function emit_assign emit_sub_assign use handle breaking compound assignment therefore fix two bug normally two bug closely related easy ast updated assign like operation grouped right left ended trivial fix merging binary ops finally sanity.ly test updated test new assign chain,,
2791,603126d131f647edc179eeb8b333114c7c47ced1,ascinated Box <FascinatedBox@gmail.com>, 2013-08-28 17:49:24 -0700, , symtab remove var parent since used,,
2792,61f8ff36f6dc4415e335b82b2f221fff201944a5,ascinated Box <FascinatedBox@gmail.com>, 2013-08-27 23:44:40 -0700, , drop jump leaving fix unrecorded crasher dropping jump added resulted code broken two lily tag crash code second tag raised error returned raiser trying longjmp back  example lily integer lily,,
2793,e2db2a6300ea80732e246f6708ec30e9cbb31ca5,ascinated Box <FascinatedBox@gmail.com>, 2013-08-26 21:28:14 -0700, , sigs longer ref deref fix signature stored linked list root held symtab idea initially stop ref deref stuff found much easier remove ref deref code entirely take symtab complex signature linked root_sig symtab refcount completely gone signature nice change signature created init_classes set node.value_sig null causing valgrind error tried deref builtin sigs long time ago,,
2794,aed8db36bc704ee0ce58ee0028ea39d6477537db,ascinated Box <FascinatedBox@gmail.com>, 2013-08-03 18:42:25 -0700, , symtab begin user defined class giving class size journey user defined class begin expect long one like creating list,,
2795,9dd7875332f519fd8ec146493b0a61b5d5560314,ascinated Box <FascinatedBox@gmail.com>, 2013-07-30 19:00:17 -0700, , fix o_jump_if check integer number fix common case case,,
2796,82092303ab5bcd5d35a91648bd2b7a4f53fd48af,ascinated Box <FascinatedBox@gmail.com>, 2013-07-30 18:48:04 -0700, , add complement fix,,
2797,be55816cf327233724756f9260e1fcd8d8b0517b,ascinated Box <FascinatedBox@gmail.com>, 2013-07-30 18:15:29 -0700, , function raise lily error fix raiser allocates two jump created one parser one use trap raise handle accordingly function based raise setting err_function runner show function raised issue runner print function raised error applies however function limited name line number may changed future,,
2798,f7b6e5610819d41770a74c000c9aa5640b2b9efd,ascinated Box <FascinatedBox@gmail.com>, 2013-07-30 14:11:17 -0700, , replaced lily_value .ptr .func also funcs take function last user lily_value .ptr function lily_value proper .ptr longer needed function take addition number args actual args start letting function raise proper lily error also updated current function include struct params,,
2799,f09c0c94c5e53378bb9f799845fa4effdc4da6ac,ascinated Box <FascinatedBox@gmail.com>, 2013-07-26 14:22:22 -0700, , lexer fix scan_str str_size calculation single line escape triggering valgrind warning simple string like print double checked sanity.ly still passed since hold lot string test test added updated though perhaps future extend blastmaster test using valgrind though,,
2800,38ab9a095ff1c0d9983f6cb9e9618ed8a5a7ca15,ascinated Box <FascinatedBox@gmail.com>, 2013-07-26 00:39:28 -0700, , put method vals stack added trace_name method value method trace_name name method actually called allows stack trace know actually called important anonymous call method args ended making runner need change print stack runner changed new test test fail check anonymous method result crash stack trace printed previously caused segfault trying print stack,,
2801,89034e7890a3ceb0cd2cacbcd39e38cc99aec929,ascinated Box <FascinatedBox@gmail.com>, 2013-07-23 19:27:13 -0700, , fix bad method insertion nil printing str pkg bug ... think method took args would unable push method stack somehow discovered using blastmaster comb aft check assuming bad value var thus printable always case report generic attempt use nil value value question var bug also found str package ignoring particular malloc might fail blastmaster.py run test 100 success,,
2802,624f6158e8bcf40c6bf53f911d14c265406bf3f0,ascinated Box <FascinatedBox@gmail.com>, 2013-07-23 15:25:46 -0700, , parser list collect deref sig var creation fails fix leak showing sanity.ly found via blastmaster.py showing time sanity.ly aft checking,,
2803,58a17cf7343b0305fdadcdfecbb459033a2cedf6,ascinated Box <FascinatedBox@gmail.com>, 2013-07-23 14:55:46 -0700, , lily_raise msgbuf custom option done method adding thing msgbuf raising msgbuf really really verbose annoying caused couple previous issue error format lily_raise support passing sig using msgbuf raise converted standard lily_raise raise additionally msgbuf allocs char block instead nothing growing has_err changed truncated correct since msgbuf error truncation solves issue various area blastmaster.py brought light stuff creating msgbuf expecting succeed code longer need make message buf hurray,,
2804,b1b2809bbfa7400b5cff5959edf5745a2974baf8,ascinated Box <FascinatedBox@gmail.com>, 2013-07-21 21:51:53 -0700, , fix wrong assign picked case fix list integer resulting emitter seeing signature ptr wise resulting picking o_assign instead o_list_assign refcounting add failtest issued valgrind warning instead crashing anything seriously wrong,,
2805,ca039b32688d4a4c7b2a39f0fe44789a5b505724,ascinated Box <FascinatedBox@gmail.com>, 2013-07-21 18:58:17 -0700, , create blastmaster full bug testing suite fix thing changed fixed leftover fprintf parser mentioning dot ... getting var arg dot lily_failtest longer around since superceded blastmaster.py make passfailcheck also gone reason many small test made test inside lily_failtest put test fail sanity.ly hello_world.ly put test pas blastmaster already reporting issue taken care future commits,,
2806,17fe6ad719fc0a44bb7041652a12b361b8a9bee8,ascinated Box <FascinatedBox@gmail.com>, 2013-07-21 16:17:55 -0700, , aft revamp useful option new option include alloc limit determining many allocs file need run show symtab showing symtab via aft show alloc info showing verbose info aft change make aft useful mainly reducing spam wanted,,
2807,a92254604ee87a16598e6109882ea9aa275f017c,ascinated Box <FascinatedBox@gmail.com>, 2013-07-19 18:05:40 -0700, , debug show integer using prid64 oops,,
2808,93c4f62fa9a292f827798a530c3c88e87b9ca3a1,ascinated Box <FascinatedBox@gmail.com>, 2013-07-19 18:02:23 -0700, , added continue break fix,,
2809,905eba7509d9344c2132eed947058e5647e307f9,ascinated Box <FascinatedBox@gmail.com>, 2013-07-19 11:43:26 -0700, , various fix last commit lily_vm inttypes.h prid64 printing integer since integer explicitly bit signed ints removed wrong comment added different one scan_number within lily_lexer finally removed extra newline end latest sanity.ly method,,
2810,868f702313530d1ff50150ae983b0911283a0c66,ascinated Box <FascinatedBox@gmail.com>, 2013-07-18 12:17:26 -0700, , redo digit handling binary octal hex exponent fix integer assigned signed bit integer value integer octal ... hex ... binary ... well standard decimal decimal exponent denoted negative positive 1e1 number also denoted instead 0.1 integer value explicitly positive negative 0b1 0c77 allowed required change sanity old test scanner seeing instead also took leftover fprintf last commit finally lily_value changed reflect integer bit instead int,,
2811,2584897fd9596499a95b86bfc51a30b61506ca83,ascinated Box <FascinatedBox@gmail.com>, 2013-07-16 12:04:13 -0700, , multi line string window newline fix fix python style multi line string chosen ... think look nice consise also easy add lexer existing str scanning expected hardcore getching went away realized would easier modify str scanning code fixed couple small nit lexer one subtle future bug longer char lexer scan_str bug obviously would cause string chunk size greater 256 crash position wrapping around lexer previously buffer end set 127 instead 128 coming read_line changed size check size could added without another check,,
2812,4882ed64711093c2af6215a98bc21131de7b88c7,ascinated Box <FascinatedBox@gmail.com>, 2013-07-12 20:16:48 -0700, , fix lily support vararg method fix bug difficult implement one sanity test added va_2 complex statement revealed bug one extremely difficult nail special note currently possible pas method varargs function function pack varargs instead unrolling onto stack require argument name method however need name varargs rather essential args packed future something may created keyword perhaps unroll method varargs used call function simply possible,,
2813,71b50de8ec6d404bacde97ee5a8501b4a6a581b6,ascinated Box <FascinatedBox@gmail.com>, 2013-07-12 18:51:05 -0700,4, fix subscript deref object sig think third bug uncovered trying convert method varargs one discovered fluke extreme pain nail read detail start sanity creating two list circular ref test list particular storage say one method varargs test would test casting varargs batching extra args list object casting object bug trigger o_obj_assign either actual method would called list object created two object subscripted varargs array subscript would dump ... storage storage list object sig instead something primitive subscript writing object value sig causing deref quite difficult chase,,
2814,d510ce101899e06cba538cb7c9c8f214400005a9,ascinated Box <FascinatedBox@gmail.com>, 2013-07-12 17:45:20 -0700, , fix ast binary tree swap thing anymore discovered trying make method varargs work ast swapping left right tree binary certain condition met resulted something like wrong order ast swapping tree,,
2815,f66406ca55639c28e6a1e4673ab54c71d799a58f,ascinated Box <FascinatedBox@gmail.com>, 2013-07-12 12:18:26 -0700, , fix emitter fix really bad code generation noticed trying fix bug method varargs noticed something like else code written assigning literal emit_logical_op grabbing storage assign is_top true also removed incorrect comment bottom logical needing allocate storage true storage grabbed never assigned case caused jump based storage never given value,,
2816,3167ba189fff8acbbf2a8106827a5381d6a5e28b,ascinated Box <FascinatedBox@gmail.com>, 2013-07-10 00:17:02 -0700, , fix old save restore bug lily previously emitter really bad idea save overall wrongness function call would cause save dropped inner function call ... goodbye save main local specifically blocked call nice per call overhead call offset used help calculate save work entirely possible cause bad code emit like stuff asking save kind bad emitter saving storage performing method call think minute storage arg ... saved horridly useless  emitter save cache use time parser register var emit method_pos parser register method sooner ... reason function touch save anymore call checking done cache restored keep emitter saving storage came inner call emitter longer cause crash code made previously uncovered trying implement method able variable args figured fix instead ignoring side note lily year old,,
2817,49848774b0e45f1d27f003d7c14f2d984c4d6dd4,ascinated Box <FascinatedBox@gmail.com>, 2013-07-09 15:50:46 -0700, , emitter save method value return anymore emitter used save method var method return method value value code actually saved bit annoying value return grabbed var patch emitter save var entering method determines method ret saved var popping simplifies method entering exiting quite bit additionally made method value clearer making top_var top_method top_method_ret old system calling val target kind confusing saving fewer thing mean confusion well,,
2818,af6d222592e28150c670717ecef9f21b24e04921,ascinated Box <FascinatedBox@gmail.com>, 2013-07-04 19:01:01 -0700, , empty list smart autocasting fix part fix making push_tree_arg would set arg ast parent ast put inside two way linkage fixed previously unknown bug call returning nil placed list would cause segfault call see list child empty list basic autocasting patch empty list right side binary change match sig left side empty list passed arg call try figure satify place arg chain include diving sig necessary right side list multiple empty list likely perfect good step right direction,,
2819,8ef127d9032413721eaef821adba88f5f2cc9151,ascinated Box <FascinatedBox@gmail.com>, 2013-07-02 12:51:05 -0700, , big circular referencing leak fix fix bug val_is_nil part lily_list_val struct flag int well hold s_is_nil correspond nil value inside new s_is_circular indicate element contains circular reference added pretty big circular ref test sanity.ly working rather nicely circle_buster responsible fixing circular reference well making list mark element s_is_circular,,
2820,aa9bea8482b62db711b2bf5202634bb4f9785f34,ascinated Box <FascinatedBox@gmail.com>, 2013-06-29 21:42:43 -0700, , fix object value simple object assign previously would complain two signature compatible value compatible object writes object assign yield,,
2821,75d6eadf0244693689e290d754a0a674f6b63280,ascinated Box <FascinatedBox@gmail.com>, 2013-06-28 21:50:13 -0700, , list build copy value object given new object done resulted object acting like pointer made sense example   patch would become circular list consisting odd object previously held list patch would make sense since put inside another list patch doe make o_build_list make new object hold value object given keep object circularly ref  fix address way object could incorrectly circularly referenced,,
2822,8d8e661f4b726afaa23a50f20282a92b7704e6f5,ascinated Box <FascinatedBox@gmail.com>, 2013-06-28 16:52:20 -0700, , fix subscript list object may leak depending value list object list object causing problem something like list object 1.1 list object  turn object subscript proper deref result putting new value val code called ignored object passed also incorrect value object deref instead object also modified subscript code select object first instead checking refcounting object assumed bit faster may,,
2823,b13a5e8aac2f2493cf9692788d561bee7a1016ea,ascinated Box <FascinatedBox@gmail.com>, 2013-06-27 15:38:28 -0700, , fix intlist work also fixed unary line num sanity updated turn unary merge oo_merge subscript coming causing ... magic resulted emitter seeing intlist rightly complaining additionally discovered unary tree set line number would caused serious weirdness unary last fail finally fixed merge_oo saying merge_unary comment accident redid comment back added test sanity unary checker,,
2824,f88ecc5e55b4653ea85f820b3876cdaf4fedfe91,ascinated Box <FascinatedBox@gmail.com>, 2013-06-27 14:07:46 -0700, , fix decl allowed end method useless allow whatever declared unnecessary however even worse raise syntax error interpreter probably issue warning future run time test wanted check declaration,,
2825,0b88d073ca7963a3afc1b7e4d1cba7e2828718c7,ascinated Box <FascinatedBox@gmail.com>, 2013-06-27 13:42:49 -0700, , fix integer value working added test sanity.ly ast wrong merge subscript caused problem also changed typecast tree use right instead left value noticing lot code could shared binary,,
2826,57d1717b03c074b6e7c213372e6bafe73b690e81,ascinated Box <FascinatedBox@gmail.com>, 2013-06-21 12:56:50 -0700, , list varying type autocast list object fix test added sanity.ly well,,
2827,771b4cc443f4ca1e05066e84b9e93aa10105563b,ascinated Box <FascinatedBox@gmail.com>, 2013-06-21 12:05:12 -0700, , .gitignore oops forgot change lily_strload lily_cliexec,,
2828,3fe7ae24946223eabd6b9ce760d5286cf00bd88a,ascinated Box <FascinatedBox@gmail.com>, 2013-06-21 11:50:43 -0700, , subscript need take object account previously subscript would assign value anything refcounted bump value refcount incorrect object object never get refcounted unless copied somewhere else saving value putting object list subscript causing object leak simple assign overwrote container example object list object object caused leak single object value subscript writing storage initial object value subscript doe right thing object,,
2829,77f19c5f5380292127cdac5f2a8a19ee976c391c,ascinated Box <FascinatedBox@gmail.com>, 2013-06-17 16:33:23 -0700, , object finally typecast thing fix bug long time coming commit object anything return object finally typecast another type make object useful integer object finally extracted assigned something else used syntax bit different like type value make typecasts easy disguish parenth expression syntax leaf room ambiguity accidentally cast one variable instead whole expression number integer handled future commit object cast class could work casting something else except integer number expect future commit make sense think object cast flexibility argument declaration cast list method method taking whatever params etc updated sanity.ly new test,,
2830,15a013814535ee6eb463a3a515b9781ee0543ece,ascinated Box <FascinatedBox@gmail.com>, 2013-06-17 14:33:00 -0700, , create lily_syminfo.h hold basic sig value info msgbuf allows sigs lily_msgbuf support adding signature buffer lot data lily_symtab.h pulled new file named lily_syminfo.h code adding sig msgbuf pulled emitter put lily_msgbuf shared commit step toward allowing typecasts,,
2831,b578ead235128a45af0e56cd208c9503ed4bd487,ascinated Box <FascinatedBox@gmail.com>, 2013-06-10 21:15:07 -0700, , added failtests bad bad debugging asts back found bad comma bad right brace causing crash fixed added two different test lily_failtest ast debugging code scrapped horribly complicated,,
2832,386ef6410992a80f6b641e815c19a767d558869e,ascinated Box <FascinatedBox@gmail.com>, 2013-06-10 18:52:41 -0700, , lily_strload lily_cliexec run argv originally done back extensive ast test decided merge strload useless lily_failtest verifies string based loading work well useful test lily_cliexec intended used quick code check without modify file,,
2833,d843d021540aca0fb958dd377c1fc2b1091ec87b,ascinated Box <FascinatedBox@gmail.com>, 2013-06-10 17:30:19 -0700, , emitter cache storage complex sigs lot simplification previously emitter would grab available list storage either subscript build list would ref deref inner element storage ops ... thing emitter cache storage complex sig currently list call sig reused possible inner sig doe ref deref done save emitter lot needle work ref derefing list signature since run many time emitter offloading work emitter cache considered good tradeoff also help reduce extremely annoying forgotten ref deref issue,,
2834,e293aa589f9cb53dcc309632877f965e7a8984b0,ascinated Box <FascinatedBox@gmail.com>, 2013-06-03 15:49:46 -0700, , debug clear couple gcc warning,,
2835,ab26b99bdf5a6032de3e82b1b9a4b9dab87c45e2,ascinated Box <FascinatedBox@gmail.com>, 2013-06-03 15:36:20 -0700, , do_ref_deref ref deref case found strange bug up_sym down_sym thing since deref destroyed invalid value ref,,
2836,b876051b9ddef469a23b357ae70a94c22fd08723,ascinated Box <FascinatedBox@gmail.com>, 2013-05-31 18:57:10 -0700, , nil really mean nil list store nil ness fixed aft bug previously thing nil others book reference free_sym_common would blast everything end hope best worked ... sort thing supposed nil getting free fix nil really mean nil symtab creates initial value mark nil free_sym_common longer blast sym value without checking nil ness first list also store nil ness args per element may changed later could prohibitively expensive large list may may usefulness block reused aft every free would seem block kind funny seeing thousand free one really really sturdy block str pkg also setting str return nil failed realloc caught aft sanity.ly added test check future occurances,,
2837,2c34ae8fcf196905e5773974f2bb302e9630e451,ascinated Box <FascinatedBox@gmail.com>, 2013-05-28 13:52:53 -0700,21, sanity.ly add test showing fixed probably fixed side effect fixed,,
2838,2bc1cb706696430d60ce2ec0f59a181a3b9f1ba5,ascinated Box <FascinatedBox@gmail.com>, 2013-05-24 21:11:23 -0700, , emitter sigequal handle callables failtest added fix previously sigequal would handle callables instead assuming matched emitting return value checked exact match method return also fixed list method would accept wrong kind method test added lily_failtest check list method accept wrong kind method,,
2839,38837b65fcdb449bb2b458e9544018d29c07f189,ascinated Box <FascinatedBox@gmail.com>, 2013-05-23 23:19:51 -0700,26, allow subscript based anonymous call fix bug also merged right_parenth right_bracket case lily_parser expression essentially mirror copy made sense subscript based call also called anonymous call true name emit time time debug list anonymout least record storage come helpful determining call wrong storage also moved argument count check ast emitter would troublesome ast try verify normal anon call emitter doe type checking arg counting beware sanity.ly leak believe fix fix reporting bugzilla unless find otherwise,,
2840,a1566cfb410af4e1911ea185276658cd9e1ba882,ascinated Box <FascinatedBox@gmail.com>, 2013-05-21 14:21:20 -0700, , long last merge test_complex.ly sanity.ly ... caveat point list complex signature code stable enough finally merge sanity.ly part still incomplete though due missing feature elsewhere caveat object subscript assign tested object cast type function subscript assign tested function different signature method subscript assign tested result subscript called possible list object value reference result list never getting collected decided merge test_complex.ly overall complex sig subscript stuff finally stable aside aft report memory leak,,
2841,b47ef83f1bb74c215985ed658ed7f641a5f9d838,ascinated Box <FascinatedBox@gmail.com>, 2013-05-21 12:29:16 -0700, , emitter fix bad sub class check move code call subscript assign checking bad subscript walking tree fine var would fail var contained subscript would result obtain,,
2842,00c31fd99591246e3c04ecb03c9ab241006fe8ec,ascinated Box <FascinatedBox@gmail.com>, 2013-05-21 11:54:35 -0700, , parser make sure new method set nil,,
2843,836083668582cc3a8dccd75e51ba4e6762a57144,ascinated Box <FascinatedBox@gmail.com>, 2013-05-20 15:49:36 -0700, , fixed compare ops assigning number instead integer emitter using integer store result compare ops ... know long forever perhaps also make sense save boolean comparison result number anyway causing o_is_equal return wrong result comparison,,
2844,5c1601d0c9c02fd830a4d903d3ac2ad8060ef78b,ascinated Box <FascinatedBox@gmail.com>, 2013-05-20 15:14:18 -0700, , subscript assign work ... open bucket worm patch possible index able change value list obviously important feature however list also support object hold kind item inside brings couple bug fixed future possible list object element result parent list many reference thus never deleted confirmed two list element refers chance either infinite deref loop memory leak verified,,
2845,f80bfa4f218abe952720cac27b63a69b3022b377,ascinated Box <FascinatedBox@gmail.com>, 2013-05-16 14:31:21 -0700, , object value refcount sig value previously object strange sig object value stored sig sym holding object long time fine list came along possible list object value sig oops possible create real list object know inside object protect info loss,,
2846,5de31e6700b0f845b3f5d7be08ef86a56135b7ef,ascinated Box <FascinatedBox@gmail.com>, 2013-05-11 20:40:20 -0700, , aft fix false double free free message realloc free suppose block alloced 0xdeadbeef block get free though magic malloc aft get another block also start 0xdeadbeef caused aft think free went first block deleted one reallocs would also target wrong block discovered testing subscript new code aft realloc free look last block match pointer since recent valid block,,
2847,36312f465ccf3e1e85dca0e853f153ebfe267542,ascinated Box <FascinatedBox@gmail.com>, 2013-05-11 20:24:45 -0700, , subscript work interesting extra test added verified test_complex.ly aft make sure leak tad rough step forward truly completing list patch thing left list truly complete subscript assignment,,
2848,9de3bb5f1b4f67dda91511b3318856481208dede,ascinated Box <FascinatedBox@gmail.com>, 2013-05-10 18:14:56 -0700, , fix multiply divide equal remove list element signature emitter ref derefs signature placed value_sig part list sig storage doe allowing single deref end clean everything interesting comment free_sym_common gone,,
2849,b74b00d10ae917be586bf8147915a008b9315005,ascinated Box <FascinatedBox@gmail.com>, 2013-04-30 13:37:44 -0700, , added ops test_mul_div.ly deleted sanity.ly updated emitter cleverly change ops ops hand emit_binary_op write part writes standard assign finish thing mean debug need updated,,
2850,c80fc1da8ce8f88f53429cca699536d6f3c8d9d7,ascinated Box <FascinatedBox@gmail.com>, 2013-04-30 11:08:30 -0700, , debug fixed text number div say number div,,
2851,6173152b6d6e0fa575df657ab4a26868e01cf066,ascinated Box <FascinatedBox@gmail.com>, 2013-04-30 10:59:06 -0700, , added integer number scanned yet handled parser emitter added test_mul_div.ly test multiply divide fully working soon,,
2852,5fdbe3f637fafb6c0b9a20ef239cf25d0b305e62,ascinated Box <FascinatedBox@gmail.com>, 2013-04-23 10:52:43 -0700, , parser check unterminated block executing added test lily_failtest check unterminated single line multi line method also removed comment parser accidentally left behind adding parser option,,
2853,0898c9129d6dbce17e8d048cabb079761b37be90,ascinated Box <FascinatedBox@gmail.com>, 2013-04-23 10:23:08 -0700, , fixed unary ops checking set,,
2854,b52eb0d5ac229fdf72b4893af212768dfdeeab5d,ascinated Box <FascinatedBox@gmail.com>, 2013-04-23 10:13:04 -0700, , update sanity.ly redeclaration patch whoop,,
2855,815632f57713238291438d404bea15e8eb07ba52,ascinated Box <FascinatedBox@gmail.com>, 2013-04-23 09:55:29 -0700, , check redeclaration everwhere called added test failtest_main.c make sure done everywhere additionally original check modified use lexer label instead name var returned seemed appropriate,,
2856,95160986ef0cd66d2426d132c2572630cb5c9397,ascinated Box <FascinatedBox@gmail.com>, 2013-04-23 09:36:49 -0700, , cleaned lily_lexer.c forgotten earlier api change,,
2857,49a8a61b73389678ed8e3a706c0f7ff064ec964e,ascinated Box <FascinatedBox@gmail.com>, 2013-04-21 23:28:56 -0700, , parser accepts option dump symtab really really annoying huge symtab dump sometimes runner except lily_fs set dump symtab case important fs_main set parse command line option show symtab indicate symtab need dumped,,
2858,8278ddef9cbf00daf1726f2f14c7465f1cb097b9,ascinated Box <FascinatedBox@gmail.com>, 2013-04-21 19:59:27 -0700, , restrict symtab dump method also changed lily_debug show_sym show_literal handle class literal actually object check longer check nil value since literal never nil variable value discovered using printfmt code rather symtab dump,,
2859,982a7d15a7f137918fdac2a5f4fa6ea68d9963ac,ascinated Box <FascinatedBox@gmail.com>, 2013-04-21 19:17:03 -0700, , small cleanup lily_debug.c lily_raiser.c,,
2860,76c2d7f338af442ea0583d864b99769483b43598,ascinated Box <FascinatedBox@gmail.com>, 2013-04-20 16:39:29 -0700, , cleanup lily_vm.c api change time comment renaming,,
2861,e4042c1b7e2b13f1bf7b217cf297729982618325,ascinated Box <FascinatedBox@gmail.com>, 2013-04-17 17:55:56 -0700, , cleanup lily_emitter.c modified api parser also changed push_block pop_block enter_block leave_block similar ast doe enter_tree leave_tree mostly reorganization code renaming call make thing easier understand findable,,
2862,b89a40f83878ab2b0dc48f4df04afbf3dda06c07,ascinated Box <FascinatedBox@gmail.com>, 2013-04-13 15:41:56 -0700, , cleanup lily_ast.c modified api parser changed push_subexpr pop_subexpr enter_tree leave_tree similar emitter enter_method leave_method,,
2863,fd0e7bd6a36eacb8397bb8e76a0deb00046c981b,ascinated Box <FascinatedBox@gmail.com>, 2013-04-11 12:47:08 -0700, , cleaned lily_parser.c time,,
2864,d95354a410ec031f2217dc9362c81a89042ffa1a,ascinated Box <FascinatedBox@gmail.com>, 2013-04-07 21:19:55 -0700, , cleanup lily_symtab.c added lot comment organized call call organized different group making much easier locate minor change made improve couple function literal init grab class outside loop instead per loop trivial considering two literal loop part massive cleanup entire source code,,
2865,b2e3c9dc0ae65931b3d254e89874a0198a7e2ed8,ascinated Box <FascinatedBox@gmail.com>, 2013-03-31 14:46:50 -0700, , fix test_complex.ly pas aft chance extra deref problem o_build_list deref ing old data new data ready apparently symtab coming afterward deref ing storage resulting extra deref missing ref emitter list storage longer deref signature since get shared copy signature instead free signature cleaning symtab,,
2866,13f65fb44455fab7a91470d7b1ab03f6ea194957,ascinated Box <FascinatedBox@gmail.com>, 2013-03-25 11:38:31 -0700, , list hold str method without leaking test added,,
2867,c4301c5c0ff0d2a7f5fbb6e5e9b1d8f36679ed77,ascinated Box <FascinatedBox@gmail.com>, 2013-03-25 11:27:33 -0700, , complex_decl.ly pass aft without leaking parser deref leftover sigs used aft verify complex_decl.ly leak stage surprisingly easy took different lily_deref_sig work completely parser deref sigs sig_stack case something bad happens main problem,,
2868,00a91f904021dbb39dc762fab002796eb4b75747,ascinated Box <FascinatedBox@gmail.com>, 2013-03-25 10:35:01 -0700, , big redo collect_args ground collect_var_sig determined collect_args designed way made thing problematic biggest problem allowed creating either var sigs pulling sig data var sig stack method giant check see would get args collect_var_sig stuff everything sig_stack everything pull got helper function instead several page long longer take class take sigs doe ref signature often created directly handed var would result unnecessary ref deref lot area init_sym_common longer creates sig set value doe value part probably changed later made handle sig creation test_complex.ly updated bunch complex declaration test old checking code unceremoniously removed far everything work complex sig creation list method inside though list still bit useless point code expected buggy aft expected crash fixed later,,
2869,80c5b1d7030b9ced2e4c087ff3ea5958f89e9540,ascinated Box <FascinatedBox@gmail.com>, 2013-03-18 15:08:21 -0700, , emitter better bad assignment info also fully print list previously trying list integer list str would result assign list list print correct message assign list str list integer list info printed printed order left right printed backward anyway,,
2870,0e9e78d0717f36621aae07d5c18024f424a7164f,ascinated Box <FascinatedBox@gmail.com>, 2013-03-18 14:32:11 -0700, , merge list_test.ly test_complex.ly cleanup complex method decls list lot make sense put together tested together plan extend test test_complex.ly finally merging back sanity.ly far many thing covered yet working merge back sanity.ly,,
2871,6e012dd2f1b12484d8d414d352459933af3a7c6f,ascinated Box <FascinatedBox@gmail.com>, 2013-03-18 14:05:27 -0700, , signature even simple one refcounts since o_build_list came storage using signature first element done storage would complete signature emitting malloc could leaked however resulted certain signature leaked caused problem say list integer list list integer depended free first came time list list integer destroyed ... inner sig hopefully useful later module complex signature yet another hack make list work thing touched later,,
2872,66c51a4257744fb22678cf2e14a6237cb23646f8,ascinated Box <FascinatedBox@gmail.com>, 2013-03-12 14:12:38 -0700, , long last building list inside list test added sigcomp within emitter updated support list symtab list sig free storage allows storage freely reuse signature information without crashing initial sig list deleted storage require storage deleted first later okay fixed building list using storage directly instead value misc thing still issue free ing list data exit however big step forward leaf minor list cleanup subscript,,
2873,e958804170139de61ec00222ef9bbbfc778ec693,ascinated Box <FascinatedBox@gmail.com>, 2013-03-09 15:46:47 -0800, , complex decl support list list list integer added test list_test.ly code still bit rough since main focus right getting complex list list containing list call working cleaning afterward,,
2874,d9687d9a72aed0460ab7183d1712ea445a4643c2,ascinated Box <FascinatedBox@gmail.com>, 2013-03-07 16:20:57 -0800, , symtab fix oops returning null sig null found aft,,
2875,b45f0d82d130052861e38bf856c20914e436d3d6,ascinated Box <FascinatedBox@gmail.com>, 2013-03-05 18:25:12 -0800, , set storage s_is_nil default unset s_is_nil place preventing list related patch going also thought correct call may yield nil value later assuming storage nil would wrong,,
2876,53e70f2c22b88dd086ef43af24357491a9815723,ascinated Box <FascinatedBox@gmail.com>, 2013-02-28 15:01:04 -0800, , symtab sym_ init free _common unite bunch init free code lot sym initialization code spread different area var literal storage initialization code sigs value free ing var storage way add couple allocs hello_world.ly method storage value default however probably correct though able say sure storage hold method ... somehow,,
2877,0bc3280aa4e729c064c38c07ebc996c21d8990fe,ascinated Box <FascinatedBox@gmail.com>, 2013-02-27 13:26:15 -0800, , symtab need take symtab,,
2878,fe64b5d3ab94de27015052cb711b528d4b689980,ascinated Box <FascinatedBox@gmail.com>, 2013-02-26 23:49:16 -0800, , emitter finally dump complex data callables wrong class list handled yet sure list list yet give blueprint list nice,,
2879,af31570e71be26ff52c31958c35d36949450a49a,ascinated Box <FascinatedBox@gmail.com>, 2013-02-26 20:32:11 -0800, , use class is_refcounted simplify ref deref code eliminates two set similar code one method calling one returning value unfortunately set accounting list do_ref_deref added merge two similar block code also account list,,
2880,61670d1c3ee386bd40e3edd8a225a33e9ee4c674,ascinated Box <FascinatedBox@gmail.com>, 2013-02-26 14:13:14 -0800, , symtab change class seed is_refcounted property used later group thing together need ref deref,,
2881,ea2b3957fe5a69c9adbe2f32982cefc6f830a043,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 15:19:42 -0800, , lily_symtab.c remove fprintf debugging list,,
2882,0712cd45f421c2d6f3dc3c0d102d6fdf5473bd65,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 15:13:50 -0800, , implement o_build_list o_list_assign also cleaned representation o_build_list debug aligned nicer looking list finally work implementation rough still lot cleaning needed,,
2883,80a5fd6a05780a293643983ee35d4a8860eac9cc,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 13:29:22 -0800, , create lily_list_val list add lily_value list,,
2884,9d549a59b6250010ff5497692d9c7684d1f7d822,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 12:52:54 -0800, , fix oops last commit caused build failure,,
2885,b7b98db60a44a7286a036f2ce2e58d925b2d8adb,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 12:42:55 -0800, , added str method lily_value strval str_val cleanup lot code using ptr casting longer necessary also lily_strval changed lily_str_val consistent lily_method_val lot cleanup done get rid unnecessary use .ptr function still use .ptr fixed later use little important yet,,
2886,5464275777da712ddbee8fd2c46e8de18b0ae80a,ascinated Box <FascinatedBox@gmail.com>, 2013-02-21 12:06:25 -0800, , add o_build_list implement debug emitter unfortunately list expression work yet two list sigs list_test.ly match errsyntax raised message assign list list find amusing either way step toward working list,,
2887,357a370cecf9df8968f4b55cde78ebbcae0b0a8f,ascinated Box <FascinatedBox@gmail.com>, 2013-02-14 10:54:01 -0800, , make generic call subexpr list decl test added lot common requirement call parenth expression list expression made sense make well making generic allow receiving list part making list expression work note test list_test.ly raise error instead working come,,
2888,af05d398ab3fa421af9925ed3092283557fdb916,ascinated Box <FascinatedBox@gmail.com>, 2013-02-13 13:23:09 -0800, , make ast enum lily_tree_type var tree_var call tree_call etc also converted ast expr_type tree_type follows everything doe expression opcodes expr_assign expr_logical_or etc short small cleaning ast,,
2889,2ad67ae1199157777dc90fbe0dd4f498c43e3c0c,ascinated Box <FascinatedBox@gmail.com>, 2013-02-10 22:39:21 -0800, , list int finally work hurray list_test.ly temporarily added usual list_test.ly merged back sanity.ly code stable list able declared rough complex decls lot unfinished feature bug ahead list_test.ly show list show inner type bug handled one time eventually test merged back sanity.ly together wanted list year half consider major advancement even better work proper,,
2890,e766a0ff09535054989e2cd944ec303176a6f597,ascinated Box <FascinatedBox@gmail.com>, 2013-02-10 21:26:56 -0800, , added ca_once collect_args specify one arg collect currently unused however soon used collect single arg class list,,
2891,d6b0c93f1824ad4cf493a3019e7f0ea3527db88b,ascinated Box <FascinatedBox@gmail.com>, 2013-02-07 11:58:10 -0800, , introduce ca_toplevel collect_args replace collect_args lot work except collect_args way capture named argument within named method ca_toplevel cause collect_args removed since obsolete simple version lot redundant code removed,,
2892,4f284e1a93f159fc3fe17f6b425d0f8418de26a4,ascinated Box <FascinatedBox@gmail.com>, 2013-02-05 14:48:32 -0800, , add refcount method_val ref deref like str make test pas without valgrind complaining bad free admittedly code bit rough cleaned list,,
2893,c92971c470bc2392042455c0bc5e449b7a750e8f,ascinated Box <FascinatedBox@gmail.com>, 2013-01-31 00:35:35 -0800, , parser pas call args grab method_val time call current function passable language way convey var args yet would fail sig compare get fixed previously emitter writing method method_val func actual func writing call get var deal var old way causing crash method args emitter would write invalid method_val method arg var initial invalid method_val grab given var time commit expose new bug wherein method_val structs need refcounts ... something lot invalid free message,,
2894,b64e1230ea4156d1b95709eae98baa9cfbec7b3e,ascinated Box <FascinatedBox@gmail.com>, 2013-01-29 17:24:41 -0800, , fix s_free_name defined oops last commit,,
2895,43f9d37a57d3ce1f8a95a8482e4026c084f914a0,ascinated Box <FascinatedBox@gmail.com>, 2013-01-29 17:15:01 -0800, , lily_new_var unify method func creation previously builtin function registered symtab way would copy name much code copy pasted lily_new_var slight altering function created step toward function parameter method main registered separately builtin function thus longer seed,,
2896,8b150aa87687fe84543cd1495aece22dafb51802,ascinated Box <FascinatedBox@gmail.com>, 2013-01-26 14:34:28 -0800, , added collect_args handle method arg unfortunately still impossible pas call arg still problem complex arg collection big step right direction,,
2897,deb621684012244f5a4dd046763ef62f1b64f133,ascinated Box <FascinatedBox@gmail.com>, 2013-01-25 13:23:22 -0800, , symtab free_call_sig,,
2898,197519eb8cd0466c4aa0a8f66c6ba8f83ca41325,ascinated Box <FascinatedBox@gmail.com>, 2013-01-25 12:24:43 -0800, , method nothing nil removed leftover fprintf lily_new_var creates method_val field set null argument count parser redundant redundant would incomplete case setting number args effective ops gone comment added clarify situation,,
2899,7c05bc21820db6633752b0578f0d497a733148dd,ascinated Box <FascinatedBox@gmail.com>, 2013-01-25 11:54:50 -0800, , method use collect_args collect args method decl touchups step toward complex declaration method method take method function inside important list later allow method declared take list something function initialized differently allow list take complex type notably list able take list something else list list integer also avoids hacking list would take builtin type going back part,,
2900,96fe1d32c45dccb15a9a79f14e1f00c15de251c8,ascinated Box <FascinatedBox@gmail.com>, 2013-01-24 16:39:44 -0800, , method create method_val within lily_new_var every method need method_val point since code stored remove potential method exist failed method_val allocated set,,
2901,46626ed27233425717343825e0d6a1374d1d81f4,ascinated Box <FascinatedBox@gmail.com>, 2013-01-15 13:11:42 -0800, , added lexer list builtin class,,
2902,a46ef358d603890b259e50cf10ee78fa08913aa2,ascinated Box <FascinatedBox@gmail.com>, 2013-01-13 11:03:51 -0800, , emitter organize sig compare call fix bug function took object given ... object would o_obj_assign ... another object sending object printfmt would fail looked inside object found another one ordering also set nice stage later thing like comparing part func method flexible casting,,
2903,baff583ede644a7e2a7119e285fd774d5be54c77,ascinated Box <FascinatedBox@gmail.com>, 2013-01-11 13:38:58 -0800, , failtest update comment explaining,,
2904,95dba13d8d15b41a11debbd80edfc3fde6098a4d,ascinated Box <FascinatedBox@gmail.com>, 2013-01-11 11:41:02 -0800, , lily_ast.h remove two stub nonexistent function,,
2905,2febb1642bc1ec22951ccc7812b3c27209b0350d,ascinated Box <FascinatedBox@gmail.com>, 2013-01-09 17:46:20 -0800, , symtab fix two oops alloc symtab class immediate tip since six class caused alloc ing based raw struct size instead struct pointer size cost around 160 byte memory fair size lily hello world,,
2906,fe9fd0132c86fa65d67ee1e65aac4ebb20aa8301,ascinated Box <FascinatedBox@gmail.com>, 2013-01-09 14:10:32 -0800, , debug need verify builtin class name said nobody ever,,
2907,d4b988b36a3e66510f4d7142bf94622156f5462f,ascinated Box <FascinatedBox@gmail.com>, 2013-01-09 14:05:41 -0800, , emitter check using call return nil bug,,
2908,9d8d91b9e6306cda982335abd68aeac07274309c,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 16:35:41 -0800, , emitter raise errsyntax outside block added failtest,,
2909,75aec299bf057a56ac7eb3720141c91461812734,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 16:23:23 -0800, , emitter raise errsyntax elif else without failtests added,,
2910,11effbf8f83540f993ad4584a42857d4f09e9951,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 16:14:41 -0800, , parser free raiser component failed also free raiser message end first spotted running lily_failtest valgrind second spotted aft going sanity.ly,,
2911,aa2c805d0ce81fc80cccbdf0fd3c686696e35c00,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 16:10:55 -0800, , lily_parser raise bad token failtest added,,
2912,816acc891b05c4fe060c4069ffbfe819748d9531,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 15:57:48 -0800, , added passfailcheck makefile quickly check build broke filter noise sanity.ly lily_failtest showing pas total count,,
2913,fff7af979066b1accbfab5d7d81e939423e1541c,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 15:24:51 -0800, , removed bad_type.ly test covered lily_failtest,,
2914,6d370d12d33a100e0593d2afb58e27eb7144559d,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 15:24:02 -0800, , created lily_failtest run bunch test fail,,
2915,41cba104b9f5f3d3d8e03c93e4b620c6c295930c,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 14:05:29 -0800, , implicit return method returning nil sanity.ly updated close,,
2916,6d82cf98f9b69e74fe5f4f995652fe4af3c313cb,ascinated Box <FascinatedBox@gmail.com>, 2013-01-08 13:45:13 -0800, , emitter fix oops bad type caused extra error message,,
2917,e18102d1527547f402e465da466a75fc699fba17,ascinated Box <FascinatedBox@gmail.com>, 2013-01-07 19:01:29 -0800, , method check type return valid,,
2918,a97a32c1abbb294ed398e30ab882f569c80bfe93,ascinated Box <FascinatedBox@gmail.com>, 2013-01-07 15:48:33 -0800, , stop showing var value execution var got scoped skipped mostly useless time,,
2919,ca8e0e0358be57c5caad06f37b23c913c86e9982,ascinated Box <FascinatedBox@gmail.com>, 2013-01-06 17:00:30 -0800, , fold interp parser remove pm_init parser mode folding interp parser allows parser allocate either everything nothing making parser init simpler removed lily_parser parser export since used directly,,
2920,194ef20215a346d41efb95f27754fb38bac2495b,ascinated Box <FascinatedBox@gmail.com>, 2013-01-06 16:31:25 -0800, , lily_error lily_raiser struct error raiser given lily_raise structure actually contain stack probably seemed like appropriate name also used parser others raising exception,,
2921,88ed3cc19fcdb0d5aa45521349d8b13901644628,ascinated Box <FascinatedBox@gmail.com>, 2013-01-01 10:46:50 -0800, , aft exit interpreter raise error copy paste oops new error printing stuff added,,
2922,df4152b7db262fe1bdceb2d8b2dc5b47e72bd871,ascinated Box <FascinatedBox@gmail.com>, 2013-01-01 10:40:59 -0800, , raise errnovalue bad arith comp runner print stack runner print stack trace starting top call older call reverse python direction valgrind errnovalue also message indicating var offender though make mention,,
2923,9db2738a8bfc79192f6768b6703a96d8f3e6bc98,ascinated Box <FascinatedBox@gmail.com>, 2012-12-31 14:27:00 -0800, , fix method_stack allocated much data sizeof oops accidentally used sizeof struct instead sizeof struct pointer result byte mem saved initially,,
2924,1f3bd0ce68efe382bb934a42e472c65e0a7fe737,ascinated Box <FascinatedBox@gmail.com>, 2012-12-31 13:39:47 -0800, , add proper stack call line number info note doe raise exception yet also store stack time exception since way catch exception yet,,
2925,4ebc6d2c01e3d3af2f610b0a78805a0900f08d74,ascinated Box <FascinatedBox@gmail.com>, 2012-12-28 12:10:51 -0800, , lexer remove fprintf invalid token case,,
2926,44ea5d7e139c51c14dca2d64a045aa6c7f53cc30,ascinated Box <FascinatedBox@gmail.com>, 2012-12-28 12:09:10 -0800, , remove todo around o_save implemented,,
2927,28e60f0b327fb76473131de85432bc09d81edcac,ascinated Box <FascinatedBox@gmail.com>, 2012-12-28 12:08:05 -0800, , fix accidental change hello_world.ly last commit,,
2928,5ef11bb65357988d21aad62a5bd7778f0b92d65e,ascinated Box <FascinatedBox@gmail.com>, 2012-12-28 10:50:09 -0800, , lily_raise includes error code print file stack error parse previously file stack would shown error regardless context show file stack interpreter error parsing later extended interpreter show call stack error occurs execution error handling code still bit rough step forward,,
2929,38166849b70cba5244f081a521ceec4c5b4d31d6,ascinated Box <FascinatedBox@gmail.com>, 2012-12-25 11:15:40 -0800, , add mode init parse execute parser used yet later runner like lily_fs use determine show trace mainly use lexer includes use call stack,,
2930,0794e651fc1a56909d48d0bf39d45dd9548474dd,ascinated Box <FascinatedBox@gmail.com>, 2012-12-11 18:47:36 -0800, , str package free str realloc fails line 510 sanity.ly read s.concat .concat aaa causing realloc case lily_pkg_str lily_str_concat hit free ing strval string ... without dropping refcount later would get free realloc fails free anything ref make happy discovered accident running aft test 1061 think limit set 1059 hit warning invalid free double free short aft awesome,,
2931,942c72aa3aa60db43e0e1dd27564601be006bc49,ascinated Box <FascinatedBox@gmail.com>, 2012-12-11 14:25:11 -0800, , added long overdue parenth expression,,
2932,985a28f04e27b5e6fb5a0a3e28c3ddfe967241b8,ascinated Box <FascinatedBox@gmail.com>, 2012-12-08 13:36:02 -0800, , finally sanity.ly updated lot test took way longer hopefully verbosity test sanity.ly ensure break current version yield value result instead possibly yielding one value may may change future,,
2933,d90eebf9027faf4dbec17047096348c6a0a7e2ca,ascinated Box <FascinatedBox@gmail.com>, 2012-12-02 18:27:02 -0800, , lexer recognizes,,
2934,f6c98ace27a5b314690deb8184c970af76fd6934,ascinated Box <FascinatedBox@gmail.com>, 2012-12-01 16:36:42 -0800, , convert o_jump_if_false generic o_jump_if true false making generic need add o_jump_if_true opcode,,
2935,391df08350d35115b3cee5d4164c682c1d2332cf,ascinated Box <FascinatedBox@gmail.com>, 2012-11-27 14:03:07 -0800, , use uintptr_t lily code storage sizeof bit hope today switched linux distros found sizeof int sizeof void tested hello_world.ly sanity.ly well running aft test sanity.ly 861 found everything work used also audited every alloc used sizeof int make sure sizeof int proper,,
2936,0875be35a79998a8acdfd46f56325b2b09d9ef71,ascinated Box <FascinatedBox@gmail.com>, 2012-11-16 16:18:09 -0800, , symtab initializing symtab add literal eventually named constant value false true respectively hack,,
2937,eaa0535d0fc6e3e32b5b94eb6cdb7849d8f1bfa9,ascinated Box <FascinatedBox@gmail.com>, 2012-11-16 13:04:33 -0800, , ast fix outdated comment ... unary ops yet ...,,
2938,073fa0ea6a11f4827ed07a3799f4b9e2facf94d7,ascinated Box <FascinatedBox@gmail.com>, 2012-11-16 12:59:25 -0800, , emitter walk tree selectively binary catch binary ... tree walked regardless wrong assign requires var left side thus never able walk side check non var left side produce error message case check tested yet,,
2939,0baa2a42a720a8c76bf10644a5acd37ffd54a4a9,ascinated Box <FascinatedBox@gmail.com>, 2012-11-16 12:18:49 -0800, , ast fix priority ops sort well part higher precedence lower tree got confused sanity test added since sorted entry happen except since common,,
2940,e025f3bd013d6a2256e4e1fa06bd22a90d889e9c,ascinated Box <FascinatedBox@gmail.com>, 2012-11-14 16:02:53 -0800, , ast merge finding value current unary causing test write wrong opcode way write sanity test since code introspection prevention rely checking sanity emit result occasionally,,
2941,2233c2365b1459c3423aa3e7275c3e2c7531ded1,ascinated Box <FascinatedBox@gmail.com>, 2012-11-13 12:37:58 -0800, , fixed ast oops causing call crash test added sanity active null ... active parent null probably recipe disaster believe missed,,
2942,a40d2c22d43fee0964e4cfad64aa4bd95063a30b,ascinated Box <FascinatedBox@gmail.com>, 2012-10-31 14:41:12 -0700, , using aft found bunch potential memory related problem particular idiom used reallocing could result memory free parser need create new symbol creating part symbol since new sym creation expects succeed one case realloc directly used lily_pkg_str took hour figure discovered running aft test 846 sanity.ly 846 total number allocs sanity.ly far patch bit large many big patch like intend run aft least every build make sure new issue creep,,
2943,c78c59c81b1f5114cc3918efb420342f29310322,ascinated Box <FascinatedBox@gmail.com>, 2012-10-31 10:27:14 -0700, , introduce lily_aft allocation fail test run code like lily_fs doe .ly file one important difference allows set number allocation pas rejecting ensures failure allocate memory point lily result segfault invalid read double free etc downside requires double compilation source file also rough around edge still doe one pas time could changed given time,,
2944,62baad32d2a9dfa83b58a4b241400516c945b49e,ascinated Box <FascinatedBox@gmail.com>, 2012-10-18 14:49:56 -0700, , ast binary handle merge merge_tree merge_val time binary case merge_tree would true binary merged ... one place put binary push make binary case longer check active null impossible since binary always come value sort also non binary case longer check tree binary acting also completes breakaway merge_tree tried handle everything really long speed gain binary case needing jump merge_tree anymore stuff,,
2945,ee6d95ea272aa5239e7b1e691de710f2120077e6,ascinated Box <FascinatedBox@gmail.com>, 2012-10-16 20:34:59 -0700, , added equal sanity updated also added missing prototype missing lily_ast.h,,
2946,82043a5df5b4904cd0cb21b7f7aa80ffe1477edd,ascinated Box <FascinatedBox@gmail.com>, 2012-10-14 19:21:36 -0700, , unary negative work test added sanity.ly merged directly sanity.ly easy feature add really lot check expect included soon doe nothing,,
2947,1a64e6d9ab9adaa525cede3734f9cf1f5c1a7891,ascinated Box <FascinatedBox@gmail.com>, 2012-10-10 16:10:46 -0700, , parser make table map token value expr_op value expression simplifies expression removing handful annoying check,,
2948,d24e1bc5a8c5b413ee835c04e2e670716b2de244,ascinated Box <FascinatedBox@gmail.com>, 2012-10-08 14:07:19 -0700, , sanity.ly test return nil instead value never needed return value anyway parser add implicit o_return_noval nil method yet explicit return still needed,,
2949,ebaac04d877af9fabe08802cb490ea6225496e69,ascinated Box <FascinatedBox@gmail.com>, 2012-10-08 13:56:21 -0700, , added o_return_noval tidied parser returning sanity test dropped change possibly sanity test return nil next commit dedicated test necessary also moved parser return handling one place make change easier keep two like thing drifting apart point,,
2950,ed0495a7e61e3bd4fcdbd4dff68a130ea6ce55ff,ascinated Box <FascinatedBox@gmail.com>, 2012-10-08 13:23:27 -0700, , merge fib test save_test.ly sanity.ly drop save_test.ly save restore seems pretty stable strange save bug fixed merging sanity.ly calling save restore since seems stable,,
2951,bed8077e3ece60421d79eb493f72b5dd247cc4c9,ascinated Box <FascinatedBox@gmail.com>, 2012-10-08 13:02:11 -0700, , parser allow return oneline drop word check sanity test added causing fib test save_test.ly need written strange also noticed oneline allowing condition literal sort disallowing thing like somevar inconsistent multiline allows fixed test passing,,
2952,5e08f4f66b1413fd0b527c6a141615ee59df5d98,ascinated Box <FascinatedBox@gmail.com>, 2012-10-07 13:07:12 -0700, , parser trivial comment move method declaration,,
2953,47d4a4441bf5ed7c2b7dd2792c23ba2ac7754272,ascinated Box <FascinatedBox@gmail.com>, 2012-10-07 12:57:27 -0700, , emitter save method parent binary test changed since binary expression complete yet may modified call included saved well resulted fib method save_test.ly run fib fib different line instead single expression,,
2954,3bf9f3f3b3b0ab6805b9033a58c2e615266cfa74,ascinated Box <FascinatedBox@gmail.com>, 2012-10-02 14:27:02 -0700, , milestone implement o_save o_restore test added save_test.ly added save stack get work bit rough important save restore finally finally work fibonacci implemented bit strange couple quirk fix pretty soon feel like huge accomplishment start something awesome,,
2955,8385a1e3cefb61bd5468d92872a413f6bcb08989,ascinated Box <FascinatedBox@gmail.com>, 2012-09-27 20:37:03 -0700, , save test func method argument fix last commit memcpy last arg supposed added sizeof int causing crash test fix everything work fine save done correctly printfmt call save storage two local,,
2956,50d7e252db2415c1a93eaf1264ff1daede22d673,ascinated Box <FascinatedBox@gmail.com>, 2012-09-27 20:16:56 -0700, , emitter make walk_tree call case bit bearable rewrite particular limit number call work rest code around tiny bit faster guess also memcpy copying save cache code instead loop faster,,
2957,d36b42e1e03733775f23ae37d7f51b0677a9eaf2,ascinated Box <FascinatedBox@gmail.com>, 2012-09-27 19:24:18 -0700, , emitter check_call_args calculates num_args instead sent really kind odd walk_tree determine pas arg walk_tree never used also check_call_args perfectly able find value,,
2958,41e37b57908667c94649ddf3225202b54013bd7e,ascinated Box <FascinatedBox@gmail.com>, 2012-09-27 19:19:14 -0700, , recursion part add o_restore also stub,,
2959,a8e333635fa7c02172d3dabf6c08f586f2d26b46,ascinated Box <FascinatedBox@gmail.com>, 2012-09-26 18:41:58 -0700, , add save cache args var storage use misc extra fix checking args call function called check_call_args make walk_tree monolithic emitter added test save_test.ly o_save print type symbol saved non var debug prepared save args function case one args method method drained drain remove cache,,
2960,ee12f678fa310c52624afcf25b3a0317f252c305,ascinated Box <FascinatedBox@gmail.com>, 2012-09-09 11:19:09 -0700, , add new test checking proper working save restore,,
2961,bb8402f4c1393fa154975de5f16621b7c290cc79,ascinated Box <FascinatedBox@gmail.com>, 2012-09-09 10:51:11 -0700, ," recursion part implement saving local emitter printing debug offset added method kind easy figure many var need saved offset start method added time variable moved symtab old_var_table current offset number local save starting method caveat storage saved declaration expression integer add 1,2 saved actually perform save",,
2962,6629a5a1e1400291ca04b4c240c252d36c9d7e34,ascinated Box <FascinatedBox@gmail.com>, 2012-08-28 14:52:58 -0700, , fix integer working aka decl list initialization broken expression handler catching thought part call resulting valgrind warning crash added sanity test also check decl list handle call comma able allow integer add ... kind assignment,,
2963,767179e345fd1d7a9c851fa4693a2b05744b51ff,ascinated Box <FascinatedBox@gmail.com>, 2012-08-28 14:27:27 -0700, , sanity.ly organize test method track passed test pass read ... instead ... failed mark test failing important part printing many test passed end make running sanity.ly lot easier organizing test method lot weird variable name gotten rid currently test pas couple require human reading making sure string look correct escape test,,
2964,6cd801cedcace5d2ac4e0f76c488c35a746fefe8,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 19:25:37 -0700, , check saved_ret null making new state trivial,,
2965,853fc7c2856a33435247885111934e2dc1551ac5,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 19:23:28 -0700, , fix various memory issue grow_vm new state alloc many oopses allocating new state interpreter setup lily_raise_ must used instead null must returned parser free everything die gracefully growing ... use lily_realloc growing lily_malloc going pretend never committed,,
2966,4e065aec5ba758e5b86cf9369522a01f4f2229a5,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 19:11:45 -0700, , merge sanity.ly test,,
2967,9db81d402da89d85bd27e4e5ae72be33a646a10d,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 15:53:42 -0700, , fix jump_if_false miswired making work backward test added printing silenced comparison wrong may noticed earlier well hopefully never happens,,
2968,1526480d9ec63e6e50c79f752bdb8575e7968528,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 14:22:00 -0700, , o_is_equal using non str comparison instead oops,,
2969,2cc0fcee869381a0121f9501f8641d51ff796923,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 14:02:37 -0700, , fix o_assign properly set nil ness broke setting went unnoticed str object assignment coming first setting,,
2970,6975f113bdfa213fe5efdecd97402a7ac23bac28,ascinated Box <FascinatedBox@gmail.com>, 2012-08-26 13:50:24 -0700, , complete stub merge binary a.concat possible calling code step closer merging back sanity test,,
2971,961990d8561f3b77b4d5ce64419abeaf3e10697b,ascinated Box <FascinatedBox@gmail.com>, 2012-08-24 19:50:25 -0700, , parser allow nil return check class passed new method test added test_nil_ret method sanity.ly called yet emitter emit opcode return yet trying without result valgrind spewing error,,
2972,6dd0f8871f719ceac58293db1c04c96eab93cefa,ascinated Box <FascinatedBox@gmail.com>, 2012-08-23 19:08:13 -0700, , fix printfmt sig varargs fix vararg checking implement printfmt commit printfmt finally work ... part error handling well currently return anything unknown enough args printfmt set varargs obviously wrong ast say ... least args vararg call get enough args format accepted integer number string pushed sprintf number may print unnecessary digit fix vararg checking bumping new_pos emitter unnecessary annoying debug finally test printfmt added sanity.ly check well call test three together check extra args get handled correctly hurray working printfmt guessing runtime value long live printfmt,,
2973,cee96a6357a2f5b547c987190775729cab5b26a1,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 18:24:44 -0700, , properly set nil ness assigning tried make condition check hopefully expression used s_is_nil s_is_nil work faster else,,
2974,592e37af57cfe49e47e2aa35f7b2628765011371,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 17:38:45 -0700, , lexer fix strload thinking var first line builtin git log say fixed feel like 3rd 4th time done tested kind loading extra sure time,,
2975,86bb5bf4029fa08d29a2a1fd31fcc4ed561f159d,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 17:29:09 -0700, , lily function int num_args lily_sym args writing might open vararg function called num_args normal one called without num_args would trivial give vararg call opcode worry thing stable,,
2976,1db5810c6813964100a3233101d69b86a0d40dc1,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 11:14:43 -0700, , fix vfprintf oops strload_main.c caused compile,,
2977,e6055e844566c287b27f32018d9031b0d6e58d70,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 10:30:28 -0700, , lexer set htmlp breaking going read anymore bother setting comment added one place doe need set clearing buffer hopefully accident future,,
2978,ffa2707440cc7bbeff660caf55c84ccc479d5560,ascinated Box <FascinatedBox@gmail.com>, 2012-08-21 10:24:51 -0700, , send debug stderr html stdout fixed couple html bug lexer one bug skipping html would start lily closing tag page scanner using wrong position terminate lily found lbp position within current line htmlp position html buffer commit possible redirect output lily script file see work intended start useful printing data lily,,
2979,56756cb837328f2dd3853513ab289da784b2b875,ascinated Box <FascinatedBox@gmail.com>, 2012-08-20 17:26:41 -0700, , emitter obj_assign fix use arg ast otherwise call taken value instead value given totally wrong,,
2980,07185b4c6563369095b76560efe0497a62b0e27e,ascinated Box <FascinatedBox@gmail.com>, 2012-08-20 16:33:17 -0700, , add stub function printfmt str object ... set var_sym flag builtins reason object assignment resulting printfmt call sanity.ly somehow result object copy target builtin var_sym needed set builtins set already probably incorrect step forward,,
2981,9760b1db03e9dadc6a9899d3ac29d948a4dc7f78,ascinated Box <FascinatedBox@gmail.com>, 2012-08-16 19:39:31 -0700, , emitter type checking varargs callable extra argument checked last sig vararg callable allows caller specify vararg function say take string instead anything checking string vararg callable take string object fprintf style call,,
2982,4fa3077b370a73ec5198abcf0e34e8dd6b1f9beb,ascinated Box <FascinatedBox@gmail.com>, 2012-08-14 13:39:21 -0700, , added is_varargs lily_func_seed allowing var arg function none yet though,,
2983,43ac8c913f17958365a2c463cf7cf4d7b59c4f5f,ascinated Box <FascinatedBox@gmail.com>, 2012-08-14 13:18:30 -0700, , emitter call need object cast needed sanity test added previously call took object would require object passed silly anything object object already assigned non object value call need object object assign storage call used later fprintf style call,,
2984,26f8578a065b8ce255eb35170f7c9e7391e38c06,ascinated Box <FascinatedBox@gmail.com>, 2012-08-10 20:28:28 -0700, , emitter writes line info opcode except jump return lot magic number bumped forward one spot accomodate tested lily_strload sanity hello_world considered simpler creating additional table would map opcodes line number simpler think space storing line number one table line number even compressed version spot would represent maximum opcodes opcode map line space saved would complicate stuff found table way storing line information better used future reading future consider open better idea todo list month glad finally see get done code fails line number reference,,
2985,85b0f09181d6a20fe1ee3cc889b21730a9f3d016,ascinated Box <FascinatedBox@gmail.com>, 2012-08-07 14:06:26 -0700, , emitter method method work org emit_state sanity.ly updated commit method finally declared inside method without crash odd behavior certainly work trying declare method two deep emitter emit_state reworked branch gone hopefully work type control structure make nice stuff possible namely method declared within method suprisingly doe work properly least returning integer test declaring method inside method calling returning,,
2986,f1a93d9e7b20143f61e961d4ef5fa215014862e1,ascinated Box <FascinatedBox@gmail.com>, 2012-08-05 12:16:02 -0700, , emitter reuse space within branch patch previously patch_pos set originally patch applied every patch came would use new space instead possibly using old space reduces sanity.ly one alloc good metric since steady,,
2987,a8236a97f3fb34c274ff1509bbd657903a91341e,ascinated Box <FascinatedBox@gmail.com>, 2012-08-05 11:55:52 -0700, , fix oops last commit caused hello_world.ly work,,
2988,d23d828b5e6b37a3b4db83130b571851b6209c1e,ascinated Box <FascinatedBox@gmail.com>, 2012-08-04 17:48:39 -0700, , check call returning nil within thing need value work print print return nil far defined absence value like void versus pushing nil valued object,,
2989,88788adbd3a2c20273defbbe0f129e9737c3a9c2,ascinated Box <FascinatedBox@gmail.com>, 2012-08-01 20:15:21 -0700, , lexer move str handling function also fix escape char add test,,
2990,76d7ef533466bbee7024362de9769878cfdcb2f3,ascinated Box <FascinatedBox@gmail.com>, 2012-07-29 18:44:22 -0700, , fix return basic condition working condense sanity test   return resulting variable declared error errornously spawned also condensed basic assignment part sanity.ly method called putting test method variable inside given weird name,,
2991,9c37e0860403d4d0adc3f2ff0623d7e285e447d8,ascinated Box <FascinatedBox@gmail.com>, 2012-07-26 14:19:10 -0700, , fix missing last commit move main first drop symtab main symtab var_start used symtab main would,,
2992,e4dc2c5b9aef1b2cbbfb220e41b9c44423e9e31f,ascinated Box <FascinatedBox@gmail.com>, 2012-07-25 20:12:25 -0700, , finally support call without complaint whining argument,,
2993,c5a54ca272dfa961b26e1e92a9689e96deb989c6,ascinated Box <FascinatedBox@gmail.com>, 2012-07-23 19:50:30 -0700, , remove fprintf debug message leftover last commit used help track refcounts stuff refcounts okay need,,
2994,0f10f5981c73ae807b14ce6b22133196cc44e802,ascinated Box <FascinatedBox@gmail.com>, 2012-07-22 20:40:53 -0700, , fix refcount leak fixing str copy test added sanity.ly seems obvious copying string args return old get deref new get ref save overage reference cause mem leak returning string sending string argument,,
2995,9afd4c7e197f0c25b7a6acb2c7c51590c52bff06,ascinated Box <FascinatedBox@gmail.com>, 2012-07-22 15:27:35 -0700, , move strval deref stuff lily_symtab.c make debugging str ref problem easier good lot,,
2996,6cf3b48b448afa950ec50c465b9733b6e7e7a11f,ascinated Box <FascinatedBox@gmail.com>, 2012-07-17 19:18:09 -0700, , string refcount fix double free issue 1st step recently found sanity.ly causing double free storage literal copy data trying destroy o_str_assign added string would try ref deref string data appropriately start thing work right like string assigning object string sent returned result extra free ... think test come,,
2997,396490b1d269c8d8960afc1cb47b71bd41e3d8b9,ascinated Box <FascinatedBox@gmail.com>, 2012-07-15 11:58:52 -0700, , concat function work ... sort could probably use efficient algorithm though along bunch stuff function call fixed return would arg meaning first arg second seems easier put arg end first second ... str storage set null value creation since concat check previous one want make sure strvals allocated deleted might memory leak resulting yet fix,,
2998,8c55b5274efd516ae1cf0d4ff105d415ac82a63f,ascinated Box <FascinatedBox@gmail.com>, 2012-07-13 05:25:43 -0700, , ast handle a.concat .concat test added note concat backend function still written opcode dump debug work fine,,
2999,fbcaca29fd5f85a1941edab707e1b39734423ba9,ascinated Box <FascinatedBox@gmail.com>, 2012-07-13 03:44:43 -0700, , ast drop args_collected part asts direct grab needed one place code code take result check function instead saving ast save memory something performance loss since code executing different place nothing,,
3000,ee50441e3c4064125a4f6266025782452f077bd1,ascinated Box <FascinatedBox@gmail.com>, 2012-07-13 01:35:00 -0700, , emitter set line adjust wrong arg type raise,,
3001,696b5a1e533a15de5fbc00cd2ad4458c25918a1d,ascinated Box <FascinatedBox@gmail.com>, 2012-07-13 01:16:46 -0700, , lexer fix incorrect line number trivial optimization file based first seems correct start line_num lexer time line reader read something increment line number one starting line number instead also set line_num file based lexers changing str based otherwise line number already set,,
3002,a1d0dec438181fd56de74ab9dab817796a3de600,ascinated Box <FascinatedBox@gmail.com>, 2012-07-12 23:41:24 -0700, , ast save root call tree entry fixed bad reparenting test added previously root ast tree treated top tree others seemed work well except ... add would result first addition even showing tree top expression current current fixed lost root saved every call entry used instead current appropriate merge_tree fixed left right swapped right side higher priority also tree instead active right,,
3003,cd420adbb2161fa06225a61c4488a3430d5e8f3f,ascinated Box <FascinatedBox@gmail.com>, 2012-07-04 11:46:35 -0700, , ast refix oo_merge nesting get ignored case a.concat b.concat second pas first call root automatically becoming root result a.concat part ignored check active var root becoming parent,,
3004,14f860c5ed613163ba7597cc04fa40a79cee21ed,ascinated Box <FascinatedBox@gmail.com>, 2012-07-04 10:58:09 -0700, , added print a.concat test oo_merge become root active call becoming root active something weird going caused mentioned test crash make sense since call swallow var first arg,,
3005,3002eb9c11d198f56decb9d53548233a1f9747dd,ascinated Box <FascinatedBox@gmail.com>, 2012-07-04 10:40:21 -0700, , a.concat finally work added parent attr var var class second done lily_debug.c would able figure something str.concat concat,,
3006,db7c3fe812f5d5ac21173a7a0765222171a33f61,ascinated Box <FascinatedBox@gmail.com>, 2012-07-04 09:46:15 -0700, , dump correct var scoping two test added ... problem always occured third method since code executed second subsequent var closure wrong another test added check large resizes call working properly test added ran bug trying add,,
3007,e83ca098943fd8536baac36135335cb74b39cd5d,ascinated Box <FascinatedBox@gmail.com>, 2012-07-03 14:32:40 -0700, , emitter add callables many args otherwise large call call made near start program result enough size allocated call,,
3008,d7821e3f620716e79c8abc234ce5fb19e8abc59d,ascinated Box <FascinatedBox@gmail.com>, 2012-07-03 13:51:21 -0700, , ast value call become root root otherwise value inside call become root making call even happen caused reorganization merge_tree,,
3009,a9d8044bfdaf3d01b6e5a1c92c251fd326c649da,ascinated Box <FascinatedBox@gmail.com>, 2012-07-03 13:26:54 -0700, , str pkg fix concat signature take two string return one,,
3010,fd475c7f949f4e247752e19c4080088ca73a7af7,ascinated Box <FascinatedBox@gmail.com>, 2012-07-03 13:25:50 -0700, , add oo_method_test test str.concat function,,
3011,9f5cbc6f08e272adc02527df405dacef117cd535,ascinated Box <FascinatedBox@gmail.com>, 2012-07-01 15:56:29 -0700, , symtab actually initialize free package info,,
3012,ddb5cf234f4e18d77eecd689baab2d1730cdd062,ascinated Box <FascinatedBox@gmail.com>, 2012-06-29 16:14:47 -0700, , lexer fix infinite dot oops forgot simple lex_bufpos,,
3013,413c4c6cb0c77e07ebb9df23968eb458b5b673f6,ascinated Box <FascinatedBox@gmail.com>, 2012-06-29 15:13:34 -0700, , organize merge_tree case new_ast expr_type simplifying unary case grouped binary code seems cleaner figure put call stuff,,
3014,2318a8c323f5cb5c0f31126d21aae251d01697f9,ascinated Box <FascinatedBox@gmail.com>, 2012-06-29 14:22:41 -0700, , fix nested call working test added sanity.ly setting parent early case test added parent would null binary call switched two line joke first unexpectedly fixed,,
3015,961e2f190d52d8002ed411a5b2e3a978490b8f26,ascinated Box <FascinatedBox@gmail.com>, 2012-06-22 01:17:58 -0700, , lexer followed number send dot token,,
3016,bcf2c1107288c3e659a30e13bdf718a81f652282,ascinated Box <FascinatedBox@gmail.com>, 2012-06-21 12:06:48 -0700, , added identifier test sanity.ly oops,,
3017,1f3a4874515bcd40cff61e740d5a07f3789b92db,ascinated Box <FascinatedBox@gmail.com>, 2012-06-21 12:01:38 -0700, , lexer organize token ch_class defines remove group table new ordering old group table needed ch_class yield correct token token fall group top new non group token easily added bottom,,
3018,20e9f0042305a7ad090a8b70fce39ff41d2a1530,ascinated Box <FascinatedBox@gmail.com>, 2012-06-20 22:35:44 -0700, , introduce str package rearrange symtab seed stuff name str package currently one item concat anything eventually method accessible yet either also call_start call_top element added class used store method function class,,
3019,080c9bbef976371663cade729dbccffe80774021,ascinated Box <FascinatedBox@gmail.com>, 2012-06-17 19:58:59 -0700, , symtab make init_symbols take seed count args init_symbols used creating builtin string class function needed,,
3020,26bf97c13d6987e4dde48bd6760e11c86fd3be5c,ascinated Box <FascinatedBox@gmail.com>, 2012-06-17 19:04:37 -0700, , symtab init_symbols simplify ignore arg stuff last commit new either allocates sig space args neither would fixed bug mentioned last commit,,
3021,a0a1956618c0f331c0658769a7e7cb76494c582f,ascinated Box <FascinatedBox@gmail.com>, 2012-06-17 17:53:49 -0700, , symtab init_symbols condense malloc check fix bad argument check args set null args callable previous check assumed main would builtin callable would args unlikely another builtin take argument least crash ever happens,,
3022,ef99d6860a405734df893eef7deb3b91f83f21b8,ascinated Box <FascinatedBox@gmail.com>, 2012-06-17 17:27:11 -0700, , refer callables thing shared method function result splitting method callable lily code function callable non lily code usually builtins long time ago change reduces lot confusion thing saying function applied either function method,,
3023,4aecd2a0e3709d909ed81642e4d4c1c2ac63d78f,ascinated Box <FascinatedBox@gmail.com>, 2012-06-15 20:50:36 -0700, , fix prototype add lily_symtab.h oops,,
3024,743fa3419e7e1519e06b290b9c710d95e55e49c7,ascinated Box <FascinatedBox@gmail.com>, 2012-06-15 19:58:37 -0700, , use allocate method value cut duplicate code parser symtab also make starting size method uniform located single place,,
3025,50357d81a48593536e2bfd0d446f94720db1089a,ascinated Box <FascinatedBox@gmail.com>, 2012-06-14 19:33:34 -0700, , fold method_test.ly sanity.ly,,
3026,34bd517623d3417adc515af8240599919ccf395e,ascinated Box <FascinatedBox@gmail.com>, 2012-06-09 18:23:34 -0700, , update .gitignore lily_strload,,
3027,c6e658fd577a70c221984896e7ff718eef6e68e1,ascinated Box <FascinatedBox@gmail.com>, 2012-06-09 16:45:10 -0700, , lily_tester lily_strload tester actually test anything plus even hardcoding test would probably pretty ugly,,
3028,125ebf64fbfd5314f6f6fa4990551a673b066b5b,ascinated Box <FascinatedBox@gmail.com>, 2012-06-09 03:26:35 -0700, , move lily_reset_main emitter,,
3029,74522a1b62c0e19e0e74393e29650fba828690f4,ascinated Box <FascinatedBox@gmail.com>, 2012-06-09 03:19:10 -0700, , symtab drop useless todo note,,
3030,f4b0d458640b0ef098adf44561483235ea1acefd,ascinated Box <FascinatedBox@gmail.com>, 2012-06-09 01:54:56 -0700, , kill memory leak unreached code main sig made thing easier something method sigs,,
3031,883f05b207421ea7abb4383eafed092dd6aaf705,ascinated Box <FascinatedBox@gmail.com>, 2012-06-08 20:18:35 -0700, , emitter wrap storage sym grabbing function done incorrectly within function method call anyway would caused function method return value potentially swallowed way later,,
3032,d58a038e598bd39867c45c6079233683963a9c8b,ascinated Box <FascinatedBox@gmail.com>, 2012-06-08 19:39:11 -0700, , emitter popping block_return block mean code patching jump return leave method patching assignment related patching block block_return,,
3033,ae80c60bae583c21e2f1bed6fe6e252c26ae0cb6,ascinated Box <FascinatedBox@gmail.com>, 2012-06-08 19:06:53 -0700, , emitter merge type save size block_ size also pretend patch return block never patch patch introduces little waste one space saved_spots taken per method allows removing two var equal two spot also fewer index win,,
3034,75c32caeabb7058a280d989935a278137c946a15,ascinated Box <FascinatedBox@gmail.com>, 2012-06-05 19:16:43 -0700, , emitter remove extra header,,
3035,7c2f1dfc8eda31c4b1beda85acd15fa6f5c93a6e,ascinated Box <FascinatedBox@gmail.com>, 2012-05-29 21:58:58 -0700, , emitter remove long handling comment take one save level noticed ever one branch jump time reason keep whole list also comment really long unnecessary,,
3036,06236f6528d426f01034158fd6cb9881dfbe4908,ascinated Box <FascinatedBox@gmail.com>, 2012-05-29 17:53:24 -0700, , parser clear ast pool conditional emit oops broke trying fix return statement needing reset pool result could inspected,,
3037,8571503b8baf7dd51edf3cf412acd354787b0c2c,ascinated Box <FascinatedBox@gmail.com>, 2012-05-27 17:49:45 -0700, , make var unreachable fall scope done moving dead area normal symtab lookup find,,
3038,114cd82a92ffb63228ae2e0d9197e8263de4967f,ascinated Box <FascinatedBox@gmail.com>, 2012-05-27 16:56:54 -0700, , fix multi line else requiring word else test added validates token sent val value better way thing anyway allows expression start word example also made token scanned binary since binary blocking method.ly test passing checked value coming right var var okay multi line expression two test added one sanity.ly one method_test.ly,,
3039,54442704bb28f32159d3139802c77b7cbcfbfbd9,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 17:43:17 -0700, , ast check call answer always yes least fixed couple commits ago,,
3040,7b2414dd52fc7ab381555c7bbefdb2bcd5772eb5,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 17:42:28 -0700, , ast push_call_arg static think anything going use ever,,
3041,3aa8f99ad62964e962473048bef1615355209a5b,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 17:28:40 -0700, , ast fix wrong tree used push pop call method_test.ly updated add argument getting sent assignment tree interested also call done wrong current tree call instead assign tree made impossible example add,,
3042,7d56932412f325c7e831573936bd2807ccb16376,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 14:48:03 -0700, , remove len lily_vm_execute len impossible o_return_val o_vm_return always end method,,
3043,1afb6b72900f86ab0c61eced661663881830908f,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 14:37:27 -0700, , added o_return_val handle method value return,,
3044,f08cb8f2eb6223eaaa54402087a7dfbccc870dd3,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 13:48:22 -0700, , function method spot returning value function know return value yet though,,
3045,8fb3a57d71b303ea2913980bf8c85d1bb93edf97,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 13:08:21 -0700, , debug add print_call print debug function method,,
3046,691ce00b58e3a2bcef6ba35dcc6d8cbe1f17d9cb,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 12:36:01 -0700, , emitter fix oops check making new storage storage allocated circular fashion expression next current expression expression already claimed unsafe different expression using safe accidentally backwards,,
3047,f6a64c59e79762756c1837d9635c126c4efa7237,ascinated Box <FascinatedBox@gmail.com>, 2012-05-22 12:17:42 -0700, , o_method_call save code stack load new code finally enters method return yet,,
3048,ea23edb4c48d105a37144912f7faa5300177ed93,ascinated Box <FascinatedBox@gmail.com>, 2012-05-19 14:54:07 -0700, , added o_method_call work debug partial support copying storage appropriate var work return return value push pop code stack step right direction though,,
3049,3f2a05d613934f061f0844c958890821b39e5490,ascinated Box <FascinatedBox@gmail.com>, 2012-05-19 12:51:06 -0700, , emitter function getting first arg many time whoop,,
3050,b42afa7833ae22058db87fc32c8108563175bd8d,ascinated Box <FascinatedBox@gmail.com>, 2012-05-19 11:52:44 -0700, , expression emit ast saved get sent fix expression showing twice last commit,,
3051,1a66851a3f7e1ccf4a46398af92ff62c5931aed1,ascinated Box <FascinatedBox@gmail.com>, 2012-05-19 11:18:03 -0700, , show code method report method nil,,
3052,8a2bf04f67b370a7973ba5a9288993ee3f475025,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 21:57:59 -0700, , collect comma separated args first method call added method_test.ly long method call actually work ran fun bug setting active null arg collection result different expression sharing last storage yeah,,
3053,12dd2380c2bf94e734eedc2fb4a17344cd5bba57,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 21:07:43 -0700, , make use renamed main error field execute state state needed saving stack anyway,,
3054,e0d7eeba593fe6cac6df225b8afe4b2fda940bd0,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 20:29:31 -0700, , added first_arg last_arg track args method,,
3055,8db6a4634b4e8cdeb0ce2c6890d84a8f1ae61a80,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 18:27:13 -0700, , clear ast pool return statement test added method_test.ly,,
3056,ad2fa0547b326b20d188293dbb159767b798ddc3,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 17:16:44 -0700, , drop isafunc lame caused bug checked function method args collected parser,,
3057,d63adfde39927f23c5b5c5076530c0ff545a01b7,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 15:52:03 -0700, , lily_symtab.h pruned junk includes lily_builtins.h simplified lily_symtab.h including couple thing probably needed time likely need lily_vm.c includes lily_builtins.h lily_builtins.h lily_sym directly instead making stub struct,,
3058,160cb4e5c4357ff31adf5464c1e2c110b0cb65fb,ascinated Box <FascinatedBox@gmail.com>, 2012-05-15 15:25:16 -0700, , add struct act stack currently code entry expand later,,
3059,ecc742f518387f26c75f823f6a64ed95687a10dc,ascinated Box <FascinatedBox@gmail.com>, 2012-05-14 03:58:39 -0700, , method_test.ly finally crash anymore incorporates bunch small fix expression parser save asts inspection method entered created left block closure method created method value set leaf part done also var need cleaned block close,,
3060,dc18324c82312fbc5ca2e02e6232004267001775,ascinated Box <FascinatedBox@gmail.com>, 2012-05-13 01:10:46 -0700, , seed return value func sig main need get return value function later main going need return value set ... even returned next commit make one seem sensible ... hope expect signature die soon becoming annoying lately,,
3061,6e59725fbec9d818bec39db95068e6c0a12bd577,ascinated Box <FascinatedBox@gmail.com>, 2012-05-13 00:01:03 -0700, , add block return entering function stub return emitting eventually verify type return currently doe nothing,,
3062,abd9409d0cfa7921ccae0dce89118ece5f2252c8,ascinated Box <FascinatedBox@gmail.com>, 2012-05-09 00:03:11 -0700, , emitter branch much generic make supporting return lot easier,,
3063,9a1e16535ed46d8b9ed81309008af9ccf638506d,ascinated Box <FascinatedBox@gmail.com>, 2012-05-08 20:54:00 -0700, , simplify parser function name parse_expr_top particularly annoying expression helper ,,
3064,fcdadbc12b14e97d713b71a3c1b0e3ccdb99ade5,ascinated Box <FascinatedBox@gmail.com>, 2012-05-07 21:34:51 -0700, , close last block last allow proper method closure,,
3065,f9653857e66547e18c914649e361311ecbdbc971,ascinated Box <FascinatedBox@gmail.com>, 2012-05-07 19:07:49 -0700, , add enter leave method lily_emitter.h,,
3066,b4290d7d3ce412afc7b581d435718b7574918398,ascinated Box <FascinatedBox@gmail.com>, 2012-05-06 20:03:34 -0700, , method_test.ly creates add method take integer forgot str str work yet cause segfault parser assumes close return still working,,
3067,1fa7e56d10f525594cfcbb2060f5902a9b05950a,ascinated Box <FascinatedBox@gmail.com>, 2012-05-06 19:59:44 -0700, , add key_return check lily_parser.c fix target save emitter point kick back error str str implemented another step toward return statement working emitter save var target return type code var allows parser easy access want info current var save restore needed implement method,,
3068,34d89accb689fd1090833ace64eb6406f3489613,ascinated Box <FascinatedBox@gmail.com>, 2012-05-01 20:01:08 -0700, , fixed nested condition crashing added test sanity.ly,,
3069,41cd730101a5449dda3a1d0a0d86befc31ad0a9e,ascinated Box <FascinatedBox@gmail.com>, 2012-04-30 17:44:43 -0700, , added method_test.ly parser scan method header parser understand return yet though ...,,
3070,06359bc857da55a715ebb2a66f6d5463c9602f54,ascinated Box <FascinatedBox@gmail.com>, 2012-04-30 17:24:51 -0700, , create simple token checking macro need next token word went four line one,,
3071,f1b51c884bd61bcef2adee996add6cf7000c1257,ascinated Box <FascinatedBox@gmail.com>, 2012-04-30 16:25:28 -0700, , emitter add enter leave method also storing code target step toward declarable method,,
3072,62777b0fe7a52783313c3b26fb11ce289cff5645,ascinated Box <FascinatedBox@gmail.com>, 2012-04-01 19:01:36 -0700, , error format includes file name line number since form include import statement file name useful yet line number infinitely useful though step away guessing problem come,,
3073,bd2eee96bb112e4e6a9d679faa3bb7c164aae586,ascinated Box <FascinatedBox@gmail.com>, 2012-03-23 18:37:22 -0700, , merge branch_test.ly branch test sanity.ly drop branch_test.ly comment carried condensed way big help branch_test.ly test complete make checking thing easier need check sanity.ly pas,,
3074,d323760c439d88219094d9b489b0fae7a83d3427,ascinated Box <FascinatedBox@gmail.com>, 2012-03-23 17:58:44 -0700, , multi line condition work uncommented last branch_test.ly test added type branch store state branch needed multi line condition single line ifs use stack well might changed later importantly condition work hurray,,
3075,0907451fe0d030cee4aca3495420bc2cf3c3dde6,ascinated Box <FascinatedBox@gmail.com>, 2012-03-23 16:30:17 -0700, , simplify opcode debugging function lot mostly use function instead macro showing info also enclose entry printed obviously separated,,
3076,34115de2a837dcfd5b0fae5df0aa6fd026873106,ascinated Box <FascinatedBox@gmail.com>, 2012-03-17 01:58:32 -0700, , fix allowed right case turn simple condition closed current branch opened new one new instead dying,,
3077,6b446d87fe53c106456b5f4e2e60ee43feae865a,ascinated Box <FascinatedBox@gmail.com>, 2012-03-14 17:38:40 -0700, , fix oops caused elif ... fail simple missing break,,
3078,da894a83cbd222bbf53e4786097abdc7cf9df724,ascinated Box <FascinatedBox@gmail.com>, 2012-03-14 17:21:53 -0700, , single line else work removed useless continue awesome part little time code took,,
3079,839abe57e02f8735f67d8beea8d265128adbb5a5,ascinated Box <FascinatedBox@gmail.com>, 2012-03-14 17:12:03 -0700, , single line elif work o_jump opcode lot comment added elif else stuff easy mostly work yay,,
3080,8a668b4d74d0f8415bf7c249642267f95a7069e3,ascinated Box <FascinatedBox@gmail.com>, 2012-03-13 23:31:23 -0700, , branch depth support properly close create ifs explain ifs note extending depth part stub,,
3081,acac2cfc418ef7b534db65837fed41f97d651e2e,ascinated Box <FascinatedBox@gmail.com>, 2012-03-13 17:38:11 -0700, , parse_expr_top take flag argument reduce boilerplate code thing started like parser parse_expr_top parser lily_emit_ast parser emit parser ast_pool root parser ast_pool written parse_expr_top ex_need_value ex_single ex_multi allow multiple expression added future done mostly simplify handling code getting excessively redundant place,,
3082,0c3b193d37f8a53b6d4deab6e225ed88dbf4eda7,ascinated Box <FascinatedBox@gmail.com>, 2012-03-13 17:07:53 -0700, , first condition branch_test.ly finally properly handled jump patched,,
3083,03ee3e6e9388dce3e5263b824a2df9b171133e54,ascinated Box <FascinatedBox@gmail.com>, 2012-03-12 16:47:47 -0700, , make first test throw error still broke jump totally wrong,,
3084,3506cfde2db9f4ec7f4a8be772b45f5c2fd61c39,ascinated Box <FascinatedBox@gmail.com>, 2012-03-12 16:37:13 -0700, , use branch_test.ly add explanatory comment branch_test.ly,,
3085,868621b7c6cf21cf2ed4055c1b91d06f07ac4962,ascinated Box <FascinatedBox@gmail.com>, 2012-03-12 15:54:13 -0700, , add token got accidentally removed,,
3086,c66d53cb3e6e29eb01fe5c8f405d6d3cb2ff14b2,ascinated Box <FascinatedBox@gmail.com>, 2012-03-02 18:37:38 -0800, , merge basic_types.ly compare_test.ly math.ly sanity.ly hello_world.ly kept basic thing actually work branch_test.ly test added last commit kept branch still uncooperative work better merged sanity.ly test make checking accident lot easier,,
3087,83d1c44920b2728109b770a7d1a58c86635e466f,ascinated Box <FascinatedBox@gmail.com>, 2012-03-02 18:26:23 -0800, , basic test work fixed macro case macro grabbing wrong area comparison flat forgetting case arith macro fixed condition test relied  new condition code pretty fragile recognizes elif else par basic condition jump fail str also validate tree well func call tree tree set ast result cause crash,,
3088,ba1281222182694c5c25fe2abb78cdc39ff1dcee,ascinated Box <FascinatedBox@gmail.com>, 2012-02-21 17:28:57 -0800, , debug support comparison ops added compare_test.ly,,
3089,2466bc12b2f6fade9c664277b9ee85c23120fec7,ascinated Box <FascinatedBox@gmail.com>, 2012-02-21 16:16:08 -0800, , lexer fix greater flipped,,
3090,4ff14f81d0452f3a78b426bb9462c7e5d2b2fba4,ascinated Box <FascinatedBox@gmail.com>, 2012-02-21 16:00:13 -0800, , comparison ops added lily_opcode emit table simplify emitter opname realize greater fixed eventually finally noticed lack whoop,,
3091,6555cebf80127a7d9baf2a40a3a37f50ec8a30ef,ascinated Box <FascinatedBox@gmail.com>, 2012-02-21 12:31:09 -0800, , binary ops handle comparison ops asts calc priority,,
3092,79755f3c7187615e92418d22730f9ca0be2f8fff,ascinated Box <FascinatedBox@gmail.com>, 2012-02-20 18:00:46 -0800, , fixed duplicate adding greater grouped bin handling,,
3093,0dd86c14b6a60aac9fa6360b7045ddc92373f6bb,ascinated Box <FascinatedBox@gmail.com>, 2012-02-20 16:35:29 -0800, , lexer fix appearing left_curly ch_class oops,,
3094,958fcf5760a498f676d2453eab19d20c61d401af,ascinated Box <FascinatedBox@gmail.com>, 2012-02-20 16:32:33 -0800, , lexer add also fix group two scanned,,
3095,dbab7b708e2079364b6449391251ef07dba19db9,ascinated Box <FascinatedBox@gmail.com>, 2012-02-19 19:03:43 -0800, , simplify next_token introducing group within group token return specific token depending incoming group part section doe  token grp_one_table group cc_g_one_offset increase line count tiny bit make next_token func lot easier read random case strewn,,
3096,c34b43c059725863e166c135d2ae10eb2a33dd7a,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 23:13:36 -0800, , lily_load_str check valid utf string return failure,,
3097,e7af7c9fd3a81427253405c76e13d72ad60b29e4,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 18:33:40 -0800, , lexer finally resize buffer needed read_line lot lex_buffer replaced lexer lex_buffer needed realloc change memory location cached pointer pointing wrong place since simple sane way keep tossed,,
3098,41a82ff0ce8faf3980e8890cf5f16d42c74a8be8,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 17:30:21 -0800, , use lexer label instead html buffer fix hello_world.ly,,
3099,d40699cb5df3a95d187e5cabec3efafe1d0c27b2,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 17:14:33 -0800, , lexer simplify lily case htmlp would eof found merged eof handling case already removed var,,
3100,b8b5a6f1ca3ba9c99ae8f4f92c5a06c668f6b202,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 14:51:01 -0800, , comment fix longer set main_func_id,,
3101,2ad6277f24c7c8e60b8488a99dd8c86ee2c9eb19,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 15:56:27 -0800, , lexer support,,
3102,d4e4d07c4c5171d5c317bd08bf38421ac282db5a,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 14:40:46 -0800, , lexer return tk_colon used condition,,
3103,b540046a2fb1d5c03dad879c2bd2894e4140cc3a,ascinated Box <FascinatedBox@gmail.com>, 2012-02-14 12:55:23 -0800, , show type error wrong type calling function method,,
3104,e8679af05cd262f54ac68b4fd52963d4b646f628,ascinated Box <FascinatedBox@gmail.com>, 2012-02-13 19:47:56 -0800, , lily_msgbufs add ints removed leftover fprintf,,
3105,ccab266989decf91ccde188fc8c2762a39420572,ascinated Box <FascinatedBox@gmail.com>, 2012-02-10 18:40:03 -0800, , added error message use msgbufs lily_raise used msgbufs allocated need lily_free new func claim ownership string deletes container longjmp,,
3106,06ab61676d43711974dfe81c7f08b5719ec101c0,ascinated Box <FascinatedBox@gmail.com>, 2012-02-09 20:20:51 -0800, , add lily_msgbuf representing growing message buffer used send complex message lily_raise specifically dumping signature wrong one since enough another commit,,
3107,12c2a3d841a04bf18b2bde7aeb59898d3cd63ab5,ascinated Box <FascinatedBox@gmail.com>, 2012-02-09 13:05:10 -0800, , var utf number name number come letter either utf though test added basic_types.ly,,
3108,848d5292422ee47a2b22080fc3f2ff25e8ec742e,ascinated Box <FascinatedBox@gmail.com>, 2012-02-09 11:30:23 -0800, , read_line validates utf string test added basic_types.ly read_line currently doe lily_raise event bad utf rather writing utf invalid character much easier much chance error also allow identifier scanning simpler easily fixed later issue,,
3109,1d8ad5b0e12e144fe151ae186f6ce8acf3d4eac6,ascinated Box <FascinatedBox@gmail.com>, 2012-02-04 20:08:36 -0800, , reduce lexer buffer 1028 128 save around 2.4 memory test run half hello_world.ly bit basic_types.ly thought user line exceeding 128 char size may prove untrue later example server compress page parsing maybe get come,,
3110,f95ffd11eb21df80e93187c83ef3785cedf60090,ascinated Box <FascinatedBox@gmail.com>, 2012-01-31 22:32:03 -0800, , convert property method value doe method properly setting stage assignable method somewhere future also get rid property confusing,,
3111,7e7b936002709bd285a83c58f6955bf6ca5ff7ab,ascinated Box <FascinatedBox@gmail.com>, 2012-01-31 19:21:55 -0800, , clean init_symbols free name var line_num,,
3112,9593e5f228ea6024f0edb8375b09bd633ec0dcd5,ascinated Box <FascinatedBox@gmail.com>, 2012-01-31 18:57:17 -0800, , add class method main method begin start splitting lily function function done hope simplify thing later allow function smaller signature include allocation code method pointer func also make function assigned method vice versa allows know sure calling method function instead guessing time small speedup function may set unchangable later,,
3113,88b72555a702225120afec86019ebff62181dc78,ascinated Box <FascinatedBox@gmail.com>, 2012-01-28 20:00:56 -0800, , object assigned assigned value also fixed bug function write_prep call wrong value implicitly added write_prep,,
3114,d94a16cbafc14577e3edd303a27982aded2cc476,ascinated Box <FascinatedBox@gmail.com>, 2012-01-24 20:53:36 -0800, , break o_func_call oops,,
3115,505fecaa5e30ae0daee25c419137aa73576ab92a,ascinated Box <FascinatedBox@gmail.com>, 2012-01-24 20:41:31 -0800, , emitter use macro allocating writing code redundant code also chance oops,,
3116,8615fe6b47ad2797351f6bc1e7fe18e917060b08,ascinated Box <FascinatedBox@gmail.com>, 2012-01-24 18:35:41 -0800, , fix hilarious oops lexing number 19. updated math.ly,,
3117,5bf9afedb731f7c755968a0b54db4a845f006150,ascinated Box <FascinatedBox@gmail.com>, 2012-01-24 18:26:14 -0800, , allocate signature per object added value_sig lily_sig value_sig part node field lily_sig used hold sig object value ... object value still assigning object closer,,
3118,a8514030651d10095e02ee0e9c3fdb671f90b0a7,ascinated Box <FascinatedBox@gmail.com>, 2012-01-23 19:41:01 -0800, , object collected added object decl test basic_types.ly note assignment supported yet collection,,
3119,b84400b7fa1f1a7397e7129b36e5fe7ebe128069,ascinated Box <FascinatedBox@gmail.com>, 2012-01-20 14:41:29 -0800, , use sym_last_class last class make adding new class annoying,,
3120,426283590361c0e8f6af6af1722adb843d33947e,ascinated Box <FascinatedBox@gmail.com>, 2012-01-20 12:55:32 -0800, , free literal valgrind report mem lost test hesitating probably need sort refcounting system string later finally decided handle come make easier track new leak come since leak,,
3121,a8b6bc5a34567af154b39e139594c65d7be85c9d,ascinated Box <FascinatedBox@gmail.com>, 2012-01-20 12:44:28 -0800, , drop unused lily_sig_type,,
3122,2ff6a61da895601fec5b97931e36dcdfcc7c9244,ascinated Box <FascinatedBox@gmail.com>, 2012-01-20 12:43:14 -0800, , move args args lily_func_prop lily_func_sig step direction removing property hopefully better way,,
3123,59df5c441853890eeadbfb4a0c7f8c879ff7694f,ascinated Box <FascinatedBox@gmail.com>, 2012-01-17 18:05:58 -0800, , syms use signature instead class signature better hold class hold extra case function merging class info property one area result comparison type faster emitter since check class property match signature shared reducing memory usage special case extra property  solid reason one way finger crossed hoped better move property still around though gone soon,,
3124,319eaf1de92948c1024349bfe34a19795cb38445,ascinated Box <FascinatedBox@gmail.com>, 2012-01-10 17:13:50 -0800, , print generic function opcode fixed lily_vm.h includes previously print special opcode o_builtin_print worked print function symtab seed carry function written emitter later picked mean still blurry line function implemented code implemented lily code since func data carried lily_func_prop mean new function added easily debugger also print name line number non builtin function plus args function  lily_vm.h including lily_error.h lily_symtab.h fixed,,
3125,0facde93bd1c5c87507d1854dd3c6a0dd8cfbec8,ascinated Box <FascinatedBox@gmail.com>, 2012-01-03 13:34:19 -0800, , remove data field asts bringing everything increase memory usage byte per struct field supposed conditionally accessed marked appropriately lily_ast.h change done simplify code using ast worst offender trying get tree parent priority ast  ast parent priority worst example motivation change,,
3126,a65ab603ebc7c2867ea2864b4c995f976e4c235c,ascinated Box <FascinatedBox@gmail.com>, 2011-12-19 22:15:04 -0800, , function var store func property important number reason save space non function var lot property cast depending var class good foundation list store contained type put function information one place making thing easier input argument collected allowing type checking,,
3127,0ba26b64a2abf63409a71a3c072fffb93648639b,ascinated Box <FascinatedBox@gmail.com>, 2011-12-17 18:41:27 -0800, , symtab remove lily_listval wrong list,,
3128,22ae3d02fd0e0ec50e98f25759d4e4a48e075a4b,ascinated Box <FascinatedBox@gmail.com>, 2011-12-16 18:03:12 -0800, , added s_is_nil flag track initialization show var value run current implementation dump var value including one nil case supposed nil type information var seems bit superfluous sometimes integer integer better terse nil value shown nil,,
3129,8d2012a785e0ce7d2ceea5885376bfc90788cda6,ascinated Box <FascinatedBox@gmail.com>, 2011-12-13 22:51:35 -0800, , add line_adjust error object emitter record line adjusts suppose expression integer 1.0 1.0 lexer line really report line assignment simplicity error line_adjust used showing line number far emitter,,
3130,f5b6bfca4cdee502bf0d81728a62caad08688656,ascinated Box <FascinatedBox@gmail.com>, 2011-12-13 21:14:11 -0800, , ast add line number tracking asts,,
3131,767ff89f47d202a486a5372baf9e7fb751bffaaf,ascinated Box <FascinatedBox@gmail.com>, 2011-12-10 22:03:44 -0800, , lexer track filename use str string based,,
3132,335dd2ff936924c5634266274532b09e643f5b70,ascinated Box <FascinatedBox@gmail.com>, 2011-12-09 16:21:37 -0800, , fix file based load handling newlines fix lex_buffer str run,,
3133,9b28df76157c1f8abe9e89785d7351482711d1cf,ascinated Box <FascinatedBox@gmail.com>, 2011-12-09 15:57:51 -0800, , line start fix lily_tester test showing builtin,,
3134,7093bed1c36c21e48599c4b253453e1f63b906b6,ascinated Box <FascinatedBox@gmail.com>, 2011-12-09 15:34:49 -0800, , implement number add minus debug,,
3135,bd360851e5d46991f8d7becf84c9f39b7045650f,ascinated Box <FascinatedBox@gmail.com>, 2011-12-09 14:09:39 -0800, , add lily_tester .gitignore add tester_main.c file,,
3136,a308e9b6c9e8d754270491a3fb7a9c7c49feed7e,ascinated Box <FascinatedBox@gmail.com>, 2011-12-07 13:20:56 -0800, , allow parsing string misc fix added list token name parser correctly handle either end tag eof case used handle end tag version support tag within string since seem useful doe support one newline,,
3137,c964244e7e1f9d822a8aa4a760817c3800e30f5b,ascinated Box <FascinatedBox@gmail.com>, 2011-12-04 21:46:55 -0800, , reset lily_main run important repl parsing string etc,,
3138,f837fd7901089a17c36a5ec64954c5e4072edd78,ascinated Box <FascinatedBox@gmail.com>, 2011-11-27 20:38:50 -0800, , add support minus implement integer subtraction added fast_integer_op macro debug respectively make adding future new ops easier number ops implemented yet though documentation added new ops may still change thing waste time document opcodes,,
3139,d05e1065b7e3e87d13a77c8c7c903934dfd3adf2,ascinated Box <FascinatedBox@gmail.com>, 2011-11-27 19:33:52 -0800, , debug print class function number ... since function last class instead number,,
3140,0d29c066c9f70f830e5aa6cb11a7430788026e63,ascinated Box <FascinatedBox@gmail.com>, 2011-11-27 19:26:20 -0800, , fixed ast merge make work right order handle case new tree priority active tree involves walking tree reverse order finally making use parent param ast,,
3141,d904519b1eb4603013bd804a8a65e461c35bae19,ascinated Box <FascinatedBox@gmail.com>, 2011-11-27 16:03:18 -0800, , emitter resize code generic_binop necessary,,
3142,847c886b3c50254055ae61dab731beda643a20bb,ascinated Box <FascinatedBox@gmail.com>, 2011-11-24 12:34:02 -0800, , remove method generic binary ops use emitter table instead make sense following reason method inherited usefully since would return primitive type instead derived one method lookup would get worse ops supported current method table binop lhsid rhsid get either valid code different method type would needed defined later since method translate opcode used lot space defining something simple four method defined consumed byte space space would per interpreter unshared table shared interpreter con table rather user unfriendly may need auto generated later becomes unwieldly however change lily stabilizes table might also get rather large especially class added later auto generation would also solve ... maybe done last,,
3143,c8f06eaea31cd6ad816e9a5d7999195a02af79fe,ascinated Box <FascinatedBox@gmail.com>, 2011-11-11 19:24:24 -0800, , drop exception error code awful hack exception support probably exist long time even sure would useful caller since error would fall syntax error group memory much help anyway added back found useful,,
3144,77de3f8b340eac2386bd8fda20ace751ed836c26,ascinated Box <FascinatedBox@gmail.com>, 2011-11-09 17:28:30 -0800, , emitter check type assigning,,
3145,48ffddcb860f42d608397cd2afa2f21d7235733f,ascinated Box <FascinatedBox@gmail.com>, 2011-11-09 14:13:31 -0800, , finally support integer addition thing changed lexer tk_plus token added parser catch sends expr_plus ast emitter handle generic binary ops ops handled method lookup nice error message failure handle integer addition show_code lily_debug.c dump integer addition added math.ly test case used test various ops supposed work caveat work bug ast merging number adding work assignment check type compatibility operation easy implement though,,
3146,2e67d1130fb4a41ec9a8e69297e0e2310d443aec,ascinated Box <FascinatedBox@gmail.com>, 2011-11-08 23:14:50 -0800, , handle storage sym type debug set storage_sym new storage syms,,
3147,2f32a951087f61e3d3c9e0634f0c86ac172343da,ascinated Box <FascinatedBox@gmail.com>, 2011-11-08 20:40:29 -0800, , initialize method class initialized fix storage free ing previous method failing integer plus method depended number available also free ing class fixed crash storage created,,
3148,0e87014cd3c29a306595182486cb6c08c98c6888,ascinated Box <FascinatedBox@gmail.com>, 2011-11-08 17:25:44 -0800, , symtab init_symbols need check class null short circuit evaluation whoop,,
3149,d9f161a81b7d3078b6917294dbddc8a55951b418,ascinated Box <FascinatedBox@gmail.com>, 2011-11-07 18:59:13 -0800, , replace method_op expr_op move expr_op separate file parser sends ast expr_op instead token ast tiny bit simpler symtab init method take expr_op instead removed method_op,,
3150,6151bad5a9f81aeef7e5f29c8da30b3f248d328a,ascinated Box <FascinatedBox@gmail.com>, 2011-11-07 17:20:23 -0800, , add storage symbol emitter count different expression storage symbol used hold intermediate value necessary thing like plus class least one storage allocated emitter check null storage something would false time expression different expr_num emitter used make sure storage used twice single expression necessary later function argument expression since arg use different storage step toward plus working,,
3151,e7abfcf4f8061a1c505f470de08018da8fb6b8cf,ascinated Box <FascinatedBox@gmail.com>, 2011-11-07 15:10:07 -0800, , debug fix extra param debugf showing var,,
3152,81eb10f680b1144fd96963051cc9e3e034cd2fa5,ascinated Box <FascinatedBox@gmail.com>, 2011-11-07 14:33:42 -0800, , add method support opcodes plus addition currently work big step forward method extremely basic right intended support binary ops opcodes starting ground actual method future lexer parser support plus though work yet,,
3153,73b385da41b9930260ea56d6c6de8a3de8395275,ascinated Box <FascinatedBox@gmail.com>, 2011-11-06 14:14:50 -0800, , move lily_symtab.c init stuff new remove clutter top lily_symtab.c,,
3154,c411979f233bc98ccc7d3bd0ca952af4761a0304,ascinated Box <FascinatedBox@gmail.com>, 2011-11-06 11:13:29 -0800, , lily_literal lily_var derive lily_sym tree pop error message fix lily_object lily_sym lily_fixed lily_literal lily_symbol lily_var new name accurately reflect syms especially since var later fixed data true false example also bug fixed printing name symbol address symbol,,
3155,d197871998f2845dedaab5ca60940995dc8bb538,ascinated Box <FascinatedBox@gmail.com>, 2011-11-02 22:46:33 -0700, , symbol made keywords strcpy name anymore unnecessary allocation since keyword already name main func stored since syms malloc strcpy name need free,,
3156,8c9f03e56c7740ec654abb95b2162c5b9ed139da,ascinated Box <FascinatedBox@gmail.com>, 2011-11-01 20:35:18 -0700, , main function named main rather odd see name function debugging keep called user,,
3157,07007aa7d3b2bef5bf61a29070b9d09ec5446ef8,ascinated Box <FascinatedBox@gmail.com>, 2011-11-01 19:42:31 -0700, , lexer initialize error field fix segfault bad file name,,
3158,2483bb13bd9bbcd0ef425679be8f61dcb5238e82,ascinated Box <FascinatedBox@gmail.com>, 2011-11-01 18:59:02 -0700, , asts store func args arg_start arg_top var value result first change fix function argument run order ast num_args changed args_collected accurate next_arg added asts handle new style function arg collection added bonus able remove ast_list type whenever var loaded value saved ast result instead data.object allows emitter nothing encounter var instead assigning data.object result simplification,,
3159,f8e274b5e26549e707abf13d5abe9bac4062e936,ascinated Box <FascinatedBox@gmail.com>, 2011-11-01 14:13:58 -0700, , remove leftover register stuff lily_emitter oops,,
3160,8a77b6961d92dc4e39a54a3c5a071277fd56b0a6,ascinated Box <FascinatedBox@gmail.com>, 2011-11-01 14:02:53 -0700, , change lily_ast_ lily_ast_t consistency,,
3161,107fc0d87741f60a839b9084428a31bd04523f57,ascinated Box <FascinatedBox@gmail.com>, 2011-10-31 15:13:03 -0700, , lily_ast_pool manages asts lot simpler two tree merge support half handle plus least also check func args moved lily_ast.c,,
3162,ba19351d103df5d688195e5a084506a124d4af62,ascinated Box <FascinatedBox@gmail.com>, 2011-10-28 18:14:06 -0700, , parser finally check arg count funcs drop num_expected state num_expected intended job never happened symbol know many args need ast store many args received,,
3163,7f479bf2bc63e9e0bf9e48fab37810648b9034c0,ascinated Box <FascinatedBox@gmail.com>, 2011-10-28 17:29:03 -0700, , parser init ast pool element supposed committed ...,,
3164,6cdab4554ba1d7695252fbf5f448474a31c21aa5,ascinated Box <FascinatedBox@gmail.com>, 2011-10-25 16:53:21 -0700, , use fixed value storage instead register fixed value value collected lexer change storage value exist hold temporary result like result addition storage created used yet symtab dumper categorizes class fixed value storage symbol lexer allocates lily_strval get string instead reusing buffer used label removal register part experiment see would notable performance gain using address directly ops,,
3165,4db6ebe25c9c9e6c661cb8f23726320704363632,ascinated Box <FascinatedBox@gmail.com>, 2011-10-18 17:11:04 -0700, , added lily_value move value lexer parser symtab fixed redundant final assignment add_symbol previously three entry point creating nameless symbol symtab allowed combining lily_new_temp importantly lexer token actual token value stored lexer value lexer creates lily_strval get string instead packing word_buffer word_buffer changed label used variable name,,
3166,71d2bb4f42a6f3ed229a56faf96cd1223423bad5,ascinated Box <FascinatedBox@gmail.com>, 2011-10-11 18:16:41 -0700, , token integer_val number_val accuracy specifically since double type dbl_val inside token seemed strange,,
3167,b33337ea431c4aa8f60a98c8b854b10ac8f95dfd,ascinated Box <FascinatedBox@gmail.com>, 2011-10-11 18:01:39 -0700, , parser implement todo check balance,,
3168,67d895723919fe2809cbd99765abde704c9f8d69,ascinated Box <FascinatedBox@gmail.com>, 2011-10-11 17:41:39 -0700, , added class declaration require class name allow declaration list idea typed beginning always put behind favor thing class support method yet basic structure exists declaration standard fare integer integer basic_types.ly test updated supposedly work print function doe check type though comma added lexer initial class function str integer int number double,,
3169,1e9a565f53c76217ba571133bddfdf7bae035f60,ascinated Box <FascinatedBox@gmail.com>, 2011-10-04 15:41:12 -0700, , symtab move symbol initialization function,,
3170,5ffc3b9a510b2c07347bba60a2e2803e2c9877e5,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 17:12:24 -0700, , called whenever allocation fails local data free help ensure data allocated interpreter free interpreter shuts,,
3171,a2d54322e205b74408c61129868be58990d675cf,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 16:22:02 -0700, , ast pool init take exception object return properly,,
3172,1ed81779b0fa43edbda11488241c0a94837afe54,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 14:53:23 -0700, , added tokname get name token lily main func set sym_isfunc make exception raised parse_expr_top much easier work second thing resulting main func code get free symtab getting free wish checked,,
3173,f657fd2609f14023c82773d3edc791d17e18a582,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 14:37:18 -0700, , replaced sym callable sym flag added sym_isfunc isafunc defs much flexible,,
3174,f2b41b21e18c095cadd1ad7d536090a4eacec8e9,ascinated Box <FascinatedBox@gmail.com>, 2011-10-03 15:22:57 -0700, , lily main func take zero args one hand user never able call function saying take arg incorrect never supplied one pedantic yes,,
3175,57266c415f0c5bc5f4d6926b82ef655a41532ec5,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 14:30:24 -0700, , lily main func take zero args one hand user never able call function saying take arg incorrect never supplied one pedantic yes,,
3176,ce5c83f73f81058683dea2f580a3c5afd81b76b6,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 14:23:47 -0700, , fix memory leak interpreter fails init alloc func name fix function still using plain malloc realloc free allocation instead lily version double checked grep make sure fixed sure,,
3177,647e55cb7818768e94e690ec7e8d5c9f10c45fcc,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 13:09:58 -0700, , removed redundant sym sym_ sym fixed code_data strval beginning sounded like good idea kind namespace everything keep potential clash however strval str_size code code_pos sym sym_name kind construct actually annoying instead useful,,
3178,d10fee447ea212168cd88aaebbfb016a615a3417,ascinated Box <FascinatedBox@gmail.com>, 2011-10-02 12:28:05 -0700, , introduce lily_shutdown free interpreter memory valgrind show leak test due string freed result deeper problem able tell string reference another one referred reference counting needed leak fixed,,
3179,eb622bae095a243763938e33f2d681e0cddb7d70,ascinated Box <FascinatedBox@gmail.com>, 2011-09-28 21:39:15 -0700, , interpreter divided lex parse emit state symtab error object couple advantage reduces number unnecessary includes including symtab caused lexer included example interpreter access data properly freed closure soon allocating initial data lexer emitter symtab parser return null allocation failure symtab keep track lexer line number sent every call new symbol finally structure pointer new error object raise exception,,
3180,aeb675673945961753082bedef0eacb60874cede,ascinated Box <FascinatedBox@gmail.com>, 2011-09-25 18:01:20 -0700, , added exception made per interpreter allows one interpreter die without taking rest like lily_impl_fatal lily_impl_fatal removed doe mean funcs need interpreter argument memory error thrown yet message type currently shown commit interpreter finally isolated,,
3181,e1f5e24f6aafcd7516f3b2f2b2c32c568fc599b7,ascinated Box <FascinatedBox@gmail.com>, 2011-09-21 16:22:56 -0700, , remove lily_impl_ malloc realloc free function favor defines support allocation implementation eventually added back particular helping support per thread allocs per thread interpreter also done per interpreter alloc failure could raise per interpreter exception something impossible without sending interpreter malloc realloc free additionally method would make impossible free function local memory yet placed interpreter somewhere allocation checked failure fixed per interpreter exception come,,
3182,4e4a184a74ed1d0c3846fba18db9ce2cda4d3aca,ascinated Box <FascinatedBox@gmail.com>, 2011-09-21 14:06:08 -0700, , explain argument opcodes lily_opcode.h,,
3183,46b74e9835c0824e58058449a9c8bbc40623b575,ascinated Box <FascinatedBox@gmail.com>, 2011-09-16 19:24:07 -0700, , correction lily_impl_fatal,,
3184,9d0b9cb2224cd4cfd8a9a7b8c341e65109c6be41,ascinated Box <FascinatedBox@gmail.com>, 2011-09-16 18:33:49 -0700, , changed reg_info emit_state added target interp field target field reduces args set lily_emit_ast interpreter field used yet later throw exception,,
3185,0d28111dcfdc04075923e63622c929e12b6a119d,ascinated Box <FascinatedBox@gmail.com>, 2011-09-13 20:12:34 -0700, , symbol store line declared includes value symbol might useful later easily removed fixed lexer initializing line_num field within lexer data debug show line number named variable builtin,,
3186,028f56c196ebab47cdb9d4e16349a9db698e0537,ascinated Box <FascinatedBox@gmail.com>, 2011-09-13 14:28:09 -0700, , parser init var within variable initialized start expression necessary result duplicate symtab entry,,
3187,5b595597ffdc1a1e7440b0f0bea88a843b8ab32a,ascinated Box <FascinatedBox@gmail.com>, 2011-09-13 13:07:27 -0700, , symtab ordered oldest newest make symtab dump seem logical interpreter symtab_top added work symtab oldest itering symtab_top newest adding,,
3188,b145ce83f960cfbf838ab8856a043b598267691f,ascinated Box <FascinatedBox@gmail.com>, 2011-09-11 17:41:05 -0700, , added debug funcs show symtab lily code running code duplicate symtab entry symtab entry newest oldest lot type value printed available yet,,
3189,1f161b8c9d2f3b7d0c479b1f8944ae49d43768f5,ascinated Box <FascinatedBox@gmail.com>, 2011-09-06 20:03:00 -0700, , remove list assignment test basic_types.ly couple reason know type work yet lot lower level thing broken working still list work decided yet,,
3190,ea523dc29fb8154ed1342e577705146465176652,ascinated Box <FascinatedBox@gmail.com>, 2011-09-05 19:09:27 -0700, , big change interpreter type created hold previously global data make possible use multiple interpreter time also reduces reliance ugly globals strange place inside interpreter type within new parser_data type previously expr_data caveat graceful exit exit allocation failure lot freed data much might solved per interpreter pool allocation future maybe,,
3191,bf1c10575a81f10fe011bd0f8fc03f5f434a7886,ascinated Box <FascinatedBox@gmail.com>, 2011-09-02 17:47:10 -0700, , emit assignment round assignment handling noted version would leak contained list string fixing involve referencing complex method managing stuff get done later work assignment emitting work binary hopefully,,
3192,baf65aa00d46a738876230d023df1fe03c644df0,ascinated Box <FascinatedBox@gmail.com>, 2011-08-30 11:52:48 -0700, , parser properly merge tree new value also set current_tree null expression proper merging finally check null merging null value mean value becomes current,,
3193,4319244c38dda97f5876605f8147131b20136b25,ascinated Box <FascinatedBox@gmail.com>, 2011-08-26 11:24:29 -0700, , emit code reset ast pool expression fix walk_tree issue always using register realloc var reassigning code also expanding wrong size len versus sizeof int len,,
3194,4298c4d57da945991d965df05ebcca04ac0f1805,ascinated Box <FascinatedBox@gmail.com>, 2011-08-26 10:46:12 -0700, , fs_main.c change fs_main.c comment,,
3195,1873e27c5f312f09673e05626d8c11a8c309ba47,ascinated Box <FascinatedBox@gmail.com>, 2011-08-26 10:44:58 -0700, , change function decls void mean compiler complain extra useless argument strange sometimes,,
3196,4441e88167633dbb5de34e99dcdf6e80348b513d,ascinated Box <FascinatedBox@gmail.com>, 2011-08-25 10:58:24 -0700, , init expression necessary var created middle expression since var value lily_symtab.c fixed set callable since checked var come,,
3197,99cf92f5b0d5bed21ab88c3988f93a0160a857d8,ascinated Box <FascinatedBox@gmail.com>, 2011-08-24 18:11:04 -0700, , handle number decimal hopefully scanned double instead float flexibility hopefully backend work scanner support 8.8 term size even though double might able hold depending platform work non working test basic_types.ly list assignment,,
3198,fbb4a37e3c2b0f751fed60f4e6989f5f3c65a1ce,ascinated Box <FascinatedBox@gmail.com>, 2011-08-21 19:40:45 -0700, , make pool asts ast list lily_ast_pool type created hold pool tree list given start expanding necessary fix memory used asts lost hopefully performance improvement reducing would large number common malloc free call early tell ,,
3199,651343632e74ba00c7e1ce7b18f11ffe2572aee2,ascinated Box <FascinatedBox@gmail.com>, 2011-08-18 18:26:52 -0700, , lex parse basic number handled valgrind report leak asts properly reused yet,,
3200,bf44abf189b7fafaef4f61de87f87fc3feadcd29,ascinated Box <FascinatedBox@gmail.com>, 2011-08-16 12:46:36 -0700, , symtab fix new str symbol setting sym_name null,,
3201,07c11c9d138b9651860397e1673467499ed24e87,ascinated Box <FascinatedBox@gmail.com>, 2011-08-16 12:40:39 -0700, , parser make sure name null looking symbol temp value name need,,
3202,b6dbd65236caf49c05b30e5d248417b0bd3c5b19,ascinated Box <FascinatedBox@gmail.com>, 2011-08-16 12:37:03 -0700, , added binary ast type basic tree merging fixed ast_init funcs step right direction properly working expression note precedence binary ops exists yet lily_ast.c init function fixed returning value work ... barely,,
3203,733ac73861e87d5d600605eb4fc6e7c295536c3b,ascinated Box <FascinatedBox@gmail.com>, 2011-08-11 17:42:49 -0700, , fix o_builtin_print o_assign case breaking causing hello_world.ly test segfault,,
3204,4647a335960673ed9cc78e9c636301ea29147802,ascinated Box <FascinatedBox@gmail.com>, 2011-08-11 17:41:41 -0700, , parser creates var symbol hold value assignment still handled yet though,,
3205,893dca877fc147786d85d3ae2aecb13d9d5f7d9b,ascinated Box <FascinatedBox@gmail.com>, 2011-08-07 17:45:00 -0700, , lexer handle returning tk_equal,,
3206,daa22e7d0ee235ac7608447d6a490d0df72256b6,ascinated Box <FascinatedBox@gmail.com>, 2011-08-07 17:40:55 -0700, , lexer handle comment,,
3207,9f015003f736b2015074a683c24fd71813c477b1,ascinated Box <FascinatedBox@gmail.com>, 2011-08-07 17:34:32 -0700, , lily lexer handle newlines html scanner already though code cut paste eof within lily yet handled,,
3208,80418aabb2f92f19a522d7de81ebc10f118a2cf0,ascinated Box <FascinatedBox@gmail.com>, 2011-08-07 16:40:16 -0700, , add type int float list implement assign done first hope would cause lower level sane may may work code also carry implicit assumption someone besides responsible creating list temp symbol decided responsible creating list though,,
3209,8b2013626dac3cd4a069cf9f3e9ecce457bb7dc7,ascinated Box <FascinatedBox@gmail.com>, 2011-08-04 19:00:11 -0700, , add new test case example type,,
3210,48239ff850c95fa6b284bfc3be7b8449a03e9042,ascinated Box <FascinatedBox@gmail.com>, 2011-08-02 21:15:58 -0700, , work par end file parser handle statement loop needed future html handler set new eof token end file reached,,
3211,2a1230f80665fa0151395875661095334af6649c,ascinated Box <FascinatedBox@gmail.com>, 2011-07-31 18:50:03 -0700, , added lily_vm code executes take note page doe get entirely parsed yet,,
3212,2960bb036888ffbed476206fd6948d0129a32ef7,ascinated Box <FascinatedBox@gmail.com>, 2011-07-30 18:24:21 -0700, , handle basic escape character string single character escape handled except never seen wild,,
3213,b7384541f44226051fb4c317215f3ece2b821cfb,ascinated Box <FascinatedBox@gmail.com>, 2011-07-30 17:37:08 -0700, , initializers symbol init sym_id field also make defines lily_symtab.h useful later emitting builtin function ... something,,
3214,65ac4c9eaf0cccae2a5e9262c939d6c5b53779bf,ascinated Box <FascinatedBox@gmail.com>, 2011-07-29 19:19:35 -0700, , lily_ast.c write note tree walked backwards,,
3215,bde4db73f12fcee41a04d56f860b53957e7ba205,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 14:38:39 -0700, , remove bogus bindir lily_fs makefile target never get generated,,
3216,1557470021b7a504bd6315b09a29387fcbd1b2b3,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 14:31:16 -0700, , added lily_symtab hold symtab information symbol stuff allows parser focus parsing also lily_types.h lily_symtab.h make much sense,,
3217,1076fb0a06dae5014a4d10c9a3a52e17fb009f75,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 14:02:42 -0700, , move opcode data lily_opcode clean includes makefile deps makefile deps updated apparently also stdlib.h included lot place fixed added,,
3218,e82adfc66c0b57c2d5a5340ce4b97785f4c3cdd0,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 13:38:57 -0700, , remove unused structure added back ever becomes necessary,,
3219,7c1714a7722bccc6cba5c1e3fc20033282fc6235,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 12:34:34 -0700, , added emitter last three opcodes hack left behind process thing tad stable hello_world.ly example mostly working except  added reallocating code section moved code info lily_symbol lily_code_data structure make thing easier emitter thing nasty fixed soon,,
3220,0a4c9e7714f0d432c4f799a524601b6a1a274441,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 10:05:14 -0700, , parser finally collect expression hello_world.ly lily_symbol extended hold value lily_ast extended hold var type symbol value fixed linking arg correctly,,
3221,89dc83c7d5b38ee5d199e3d18ac6cc2fa5d120fb,ascinated Box <FascinatedBox@gmail.com>, 2011-07-28 09:29:18 -0700, , lexer return tk_end_tag thing come,,
3222,986fe4e5f7d30efb4c83874804e071279f31b384,ascinated Box <FascinatedBox@gmail.com>, 2011-07-27 12:30:59 -0700, , add parser initializers built type symbol help reduce redundant code well trap instance forgetting initialize field,,
3223,ba1228fbc5ef0c658e794c65eb39eafa075aeb97,ascinated Box <FascinatedBox@gmail.com>, 2011-07-26 22:15:33 -0700, , added handling lily mallocs much easier custom message failure since probably ignored anyway,,
3224,be567839488c0cef0b2fdadea63eef04bf0d4599,ascinated Box <FascinatedBox@gmail.com>, 2011-07-26 17:05:21 -0700, , remove string debugging lily_lexer.c trivial bother rebasing also still alpha care,,
3225,40c55e4c6dcb4e9d714390fac8f3b2019014ee7f,ascinated Box <FascinatedBox@gmail.com>, 2011-07-26 17:01:30 -0700, , added lily_ast handle expression eventually parser still handle expression hello_world.ly step forward,,
3226,63b423c3e215fa65e123c22b7b14414a3be407eb,ascinated Box <FascinatedBox@gmail.com>, 2011-07-26 14:15:20 -0700, , add include guard file,,
3227,b7bb101ca118a0e89c77020b2c96b2ab4510c607,ascinated Box <FascinatedBox@gmail.com>, 2011-07-23 20:35:59 -0700, , lexer handle string note string currently multiline escape checked,,
3228,6de9bbdc9355982eabb92e6c0883957c8ffc568b,ascinated Box <FascinatedBox@gmail.com>, 2011-07-23 19:29:51 -0700, , add mostly stub function expression parsing handle builtin function abstract syntax tree bytecode emitter still missing feel incomplete also lexer need send parenthesis least basic thing done progress,,
3229,f66abe331059f930a193ba9a6a4c9c0652bed2b1,ascinated Box <FascinatedBox@gmail.com>, 2011-07-22 18:25:35 -0700, , create lily symtab parser added lily_types.h definition lily_symbol guess emitter need consider pre alpha thing actually work makefile updated lily_types.h,,
3230,6bb034236977ee96246596de6ca0888561e4117e,ascinated Box <FascinatedBox@gmail.com>, 2011-07-19 13:53:39 -0700, , fixed oops caused marked invalid versus,,
3231,805027a70bf8205a429728c137167f0a1b4c5c4b,ascinated Box <FascinatedBox@gmail.com>, 2011-07-19 13:52:04 -0700, , lily lexer handle word page scanner adjusts position finding lily code block,,
3232,6f1210b5168debdc120023a53fccf8f6051f2158,ascinated Box <FascinatedBox@gmail.com>, 2011-07-18 19:26:39 -0700, , merge code lily_lexer.c read_page_line would needed copied lexer eventually going duplicate work apart 3rds code size syncing data func line dead backend directory ... hope makefile updated change,,
3233,b41d5ec26409ec77539714e4b368383e40cd4168,ascinated Box <FascinatedBox@gmail.com>, 2011-07-17 17:36:35 -0700, , create basic token share lexer parser hopefully need one token time one word buffer needed created ch_class give class different type scanned data,,
3234,f2a039e16fda1e80da6c2705ab73c8a5e4b1dd05,ascinated Box <FascinatedBox@gmail.com>, 2011-07-16 17:45:09 -0700, , fs_main.c usage message reference lily_fs,,
3235,1a7f978c9a6eed57f62ab58cf62d092fba6df84f,ascinated Box <FascinatedBox@gmail.com>, 2011-07-16 17:19:19 -0700, , reversed order frontend lexer initializes backend lexer end backward feeling thing getting fs_main.c initializes parser lexer front backend scanner still share data fs_main.c defines function lily_impl_ instead lily_be_ prefix function defined implementation lily_impl_fatal call exit expected change later,,
3236,3798b68effd4873286da199dadbe95ed82f74de4,ascinated Box <FascinatedBox@gmail.com>, 2011-07-14 17:55:40 -0700, , make use scan_ prefix scanning var,,
3237,ffcfbb4d34b308c9ac63b67f1d9852fa5e646947,ascinated Box <FascinatedBox@gmail.com>, 2011-07-12 12:22:55 -0700, , page scanner call lily_init_lexer also fixed makefile find lily_lexer.h lily_lexer.h added expected front backend lexers share data,,
3238,d646bea19922a63597e82a3e7a930cd650ea8659,ascinated Box <FascinatedBox@gmail.com>, 2011-07-11 16:27:47 -0700, , create basic frontend lexer scanner file also moved makefile objdir file .gitignore updated lily_fs lily finally noted frontend parser lexer called yet,,
3239,db5e315e44a0b1b08a79058a34461d822e6b73e3,ascinated Box <FascinatedBox@gmail.com>, 2011-07-10 19:20:55 -0700, ,,,
