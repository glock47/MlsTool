id,sha,author,date,issue,message,file,content
0,8ffce2563bc2464acf7dca1b8b51c71b7cd75596,en Manes <ben.manes@gmail.com>, 2021-07-16 01:00:59 -0700, , reduce entry overhead byte using weak soft value entry stored key normal operation lifecycle encoding value reference stored returned referencequeue collected eviction key remove entry backing map instead entry resolve key value reference rather storing twice,,
1,b5dbe2d9138e25a1073c784de4a73ce0502cd297,en Manes <ben.manes@gmail.com>, 2021-07-13 23:32:52 -0700, , optimize entry eligible refresh one thread block schedule previously reader would block map computeifabsent operation obtain future allows refreshes linearizable add small unnecessary synchronization point change restores non blocking behavior v2.x keeping improvement rewrite write timestamp soft lock allow subsequent reader skip attempting refresh least significant bit used flag locking causing timestamp 1ns ideal value thanks maaartinus suggesting idea http github.com ben mane caffeine issue 282 issuecomment 440887934 also restored suppress log exception cache loader fails producing refresh future inspection obtain entry age improved resurrecting expired entry,,
2,b13fcf0be486e7af41774615a15c929236539484,en Manes <ben.manes@gmail.com>, 2021-07-10 21:14:22 -0700, , minor touchups,,
3,80c40fb94cfe750d219bd41d8957faa1503eaff4,en Manes <ben.manes@gmail.com>, 2021-07-05 02:04:53 -0700, , run isolatedtests,,
4,d826021d266ec8783e8c8228eb4799a36ce20084,en Manes <ben.manes@gmail.com>, 2021-07-03 14:51:16 -0700, , stronger memory order setting weak soft value plain write value piggybacked volatile fence lock released guaranteed visibility however assume visibility delayed fence underlying system may inject fence earlier e.g safepont context switch compiler may change program order plain read writes case must ensure dependency partial visibility true strong value change 37c51d5 show dependency order needed weak soft value stricter correctness clearing reference must occur entry value visibly changed therefore release acquire ordering used ensure abide java memory model rather x86 total store order tso detail see http html j9mm.html,,
5,38df421c0913ceb72727f883b1726a31b31ebed5,urt Alfred Kluever <kak@google.com>, 2021-07-02 10:26:46 -0400, , use duration overload readme example 569,,
6,47f62fe99af86715cf9d63c6652723a7f0a75aa6,en Manes <ben.manes@gmail.com>, 2021-07-01 21:35:06 -0700, , release 3.0.3,,
7,37c51d5c22b8003367e179db283d427c63b5d2e6,en Manes <ben.manes@gmail.com>, 2021-06-30 21:57:44 -0700, , improve robustness racy scenario fix 568 entry updated concurrent reader observe either old new value operation replaces j.l.reference instance stored entry old referent becomes eligible garbage collection reader holding stale reference may therefore return null value likely due cache proactively clearing referent assist garbage collector null value read extra volatile read used validate reference instance still held entry retry loop negligible cost entry eligible removal due value garbage collected eviction atomic map operation eligibility must verified concurrently entry resurrected new value set cache writer already dispatched removal notification established live mapping evictor doe detect cause longer valid would incorrectly discard mapping removal notification containing non null key non null value collected removal cause like expiration size policy reference eviction policy validate entry longer eligible fixed expiration setting dynamically adjusted expired entry may resurrected longer eligible removal map operation detected case stemming entry updated lifetime reset outer eviction loop could retry indefinitely due stale read fixed duration caused loop retry ineligible entry instead terminate eviction fails scan queue ordered expiration timestamp authored justin horvitz jhorvitz google.com,,
8,f2794853e37bbad02b41780c72ce2cf7cee6fc07,en Manes <ben.manes@gmail.com>, 2021-06-27 13:35:07 -0700, , add simulator support lirs2 trace,,
9,7bca129d01c9b6a3cb16454e2fa5ee0f4d00dd31,en Manes <ben.manes@gmail.com>, 2021-06-18 20:24:46 -0700, , add findsecbugs check spotbugs,,
10,3ccb1bf97ff93b9f20717e299ea0aa70469c8260,en Manes <ben.manes@gmail.com>, 2021-06-18 02:17:30 -0700, , enabled error prone optional check,,
11,6445bb7504219169e10ad75cf72bcedf1932f603,en Manes <ben.manes@gmail.com>, 2021-06-14 00:45:24 -0700, , resolve relevant jetbrains static analyzer warning qodana report produced github action primarily false positive valid case mostly style one benign case incorrect parameter optimistic removal retry loop always ,,
12,a5d50a0b0d183c9595ac8eb0432a2dd9700e80c8,en Manes <ben.manes@gmail.com>, 2021-06-13 22:25:52 -0700, , use custom integer type unit test cache unit test used integer key value type allowed simpler code thanks autoboxing jls int cache however unit test require identity semantics weak soft reference caching used case integer constructor used java deprecated constructor removal future release make class value type migrate custom int type introduced mirror integer test use instead similar integer valueof may return cached instance within known range type also includes many convenvience factory function restore succinct code autoboxing afforded creating list map,,
13,0136596b8e3e4dff802bf87b622252426c4a4e7f,en Manes <ben.manes@gmail.com>, 2021-06-13 05:24:26 -0700, , run static analyzer generated source,,
14,a7b18fa5ed56ceda5be783dd6cd267568b0334d0,en Manes <ben.manes@gmail.com>, 2021-06-12 18:49:57 -0700,2394, fix compilation window machine excludepaths option errorprone used ignore warning generated code supplied path using builddir fact documented regular expression window separator invalid regex character escaped instead using generic pattern rather file path build cross platform http github.com google error prone issue 2394,,
15,ff3bc33effb00a3a8e6583fa5a994369152316cf,en Manes <ben.manes@gmail.com>, 2021-06-06 12:44:26 -0700, , misc cleanup fix flaky test case weak value prior assertion causing check fail guava adapter asmap return instance rather new forwarder time resolve gradle deprecation dependency update minor formatting,,
16,a8af2a29f81e919c787e9ee0d2577339707fa3c3,oc <simon@ochsenreither.de>, 2021-06-04 21:56:11 +0200, , drop transitive annotation caffeine requires,,
17,56bf6392a2e52e0630581b1dda35bb337b5755af,mri Himelbrand <himelbrand@gmail.com>, 2021-06-02 11:11:21 +0300, , camp greedy dual size based policy implementation 561,,
18,f4a78f0a31e65b5c0a5faa7236bdd904c45a23cd,en Manes <ben.manes@gmail.com>, 2021-05-21 22:34:38 -0700, , announce size aware tinylfu paper,,
19,b498408d9c36c2d29f75b1d73695f879639ae795,hanyoung <park910113@gmail.com>, 2021-05-16 17:58:02 +0900, , add simplified clockpro policy,,
20,b58dc1ca8f6f734fb60779c594d96149b93aed18,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-05-12 05:54:00 +0000, , bump action checkout 2.3.4 bump action checkout http github.com action checkout 2.3.4 release note http github.com action checkout release changelog http github.com action checkout blob main changelog.md commits http github.com action checkout compare ... v2.3.4 signed dependabot bot support github.com,,
21,e1e0c84d860dc0646c5599c15fa853cefeb53c98,en Manes <ben.manes@gmail.com>, 2021-05-02 19:40:48 -0700, , release 3.0.2,,
22,754b19da80c55351362be66144b184058c7dba85,en Manes <ben.manes@gmail.com>, 2021-05-02 18:03:26 -0700, , add clarifying javadoc see 537 537 deadlock occurs reload operation block waiting reloads complete batch individual reloads blocking queue drain task work performed due flight reloads tracked secondary map triggering reload performed map computation ensures stale reload doe insert outdated data entry removed reload completes original entry removed modified due reload blocking map lock batch completes future callback remove entry collides map lock due hashing cause task queue never reduced allow work reload holding lock stuck forever due hash collision usage map like eviction may collide fully disrupt cache performing writes,,
23,7b285410a6ae646fe10b59b493d7f63121d851c8,en Manes <ben.manes@gmail.com>, 2021-05-02 16:11:53 -0700, , add module descriptor guava adapter change required removing split test package import guava test suite compatibility package junit test applying caffeine jsr166 suite testlib suite moved caffeine module test package eclipse workaround applied project,,
24,99bf56b15191cd4a645138fea904e854ee5b743a,en Manes <ben.manes@gmail.com>, 2021-05-01 22:34:56 -0700, , additional test coverage,,
25,08511fd8aabf49a1dc4631b809a6c93867f0411f,en Manes <ben.manes@gmail.com>, 2021-04-30 01:01:36 -0700, , fix publication test coverage report,,
26,7fa11d4bc2a689aa53b061ed607af5a7270ed26c,en Manes <ben.manes@gmail.com>, 2021-04-29 23:11:39 -0700, , fix timer wheel cascading support cancelating scheduled task timer wheel advance higher level bucket evict lower wheel case reorganization failed nano time transitioned negative postive clock value number step turn wheel determined accurate calculation fix 541 scheduler enabled future task may exist next expiration event perform cache maintenance cache becomes empty beforehand e.g map.clear future canceled fix 542,,
27,d3488a716606ba0b082140c337d269c6139b2291,en Manes <ben.manes@gmail.com>, 2021-04-29 23:09:25 -0700, , enable build step jdk11 onward previously build step disabled non jdk8 jvm either due compatibility due secondary build longer applies oversight enable,,
28,3d735bcfdf940373da23766293fe42c6a61ec62c,248 <anandebeh@gmail.com>, 2021-04-29 08:10:04 -0400,535, add module descriptor maintaining eclipse ide experience fix 535 gradle eclipse plugin exclude module info compilation eclipse prevents horde issue,,
29,038153a3641b6192240923b3ceacb9e6566f40a3,mri Himelbrand <himelbrand@gmail.com>, 2021-04-27 17:54:46 +0300, , update fix null pointer migrate changed condition statment cause null pointer exception trying access wheel index bound,,
30,ba785593a091070000e0aa611f9d9802e991ffd6,en Manes <ben.manes@gmail.com>, 2021-04-17 22:21:06 -0700, , minor code cleanup clarified javadoc cachestats loading metric used bug pattern name instead non descript code fixed warning tinyset contribution removed outdated suppression,,
31,f068f0e6a338c0a7a08b2f2a9009f5d3b20a5952,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-04-13 07:13:31 +0000, , bump action cache v2.1.4 v2.1.5 bump action cache http github.com action cache v2.1.4 v2.1.5 release note http github.com action cache release commits http github.com action cache compare v2.1.4 ... signed dependabot bot support github.com,,
32,2f494fd30ab079a2f4a9519cdb8cf0ee627a751f,en Manes <ben.manes@gmail.com>, 2021-04-11 22:16:32 -0700, , improved gdwheel policy simulator version queue described paper storing prev next entry sentinel node used head tail list hierarchical cost wheel prior change allowed admittor accept access event future cost aware policy better mirror style used elsewhere key policy making event first class,,
33,dd8f77c7621457f2af03fefe14d0b66d69fe684d,mri Himelbrand <himelbrand@gmail.com>, 2021-04-10 12:06:23 +0300, , added gdwheel policy simulator close 529,,
34,66f793056de98c8e8b6d7b0e38ee34d47579f12a,en Manes <ben.manes@gmail.com>, 2021-04-11 14:00:29 -0700, , systor17 trace reader cleanup trace block device every block 512 byte since block uniform disk cache would store block instead object therefore mirror uma arc trace reader generating block sequence increase cachability number event trace file match system experiencing systor distribution tar file many gzipped file previously assumed tar.gz uncompressed entry trace reader recurse handle compressed entry minor fix empty event stream disabling jigsaw module eclipse doe handle well yet,,
35,7d39a0b9391c328a1b1928316d1906fdf55a39fe,mri Himelbrand <himelbrand@gmail.com>, 2021-04-10 11:43:36 +0300, , added systor trace file parser close 528,,
36,988e2eee9f6ea7864d8bfa9ea11f93e942b0e69a,en Manes <ben.manes@gmail.com>, 2021-04-10 14:52:46 -0700, , remove non null type argument fix 530 checkstyle interprets defaulting type non null also implicitly raw extends object intellij idea interprets generic type annotation requiring type non nullable e.g string versus string expressed java warning impossible resolve suppressed type argument add additional benefit checkstyles removing may make signature look odd better declairs intent,,
37,27163d0bbcb479d38500f89c3ae4c69b26f38c44,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-04-06 07:13:44 +0000, , bump action setup java bump action setup java http github.com action setup java release note http github.com action setup java release commits http github.com action setup java compare ... signed dependabot bot support github.com,,
38,7f98672657a6e3515eac00ec86990b877a9d10dc,en Manes <ben.manes@gmail.com>, 2021-04-03 22:33:46 -0700, , added greedy dual size freq policy simulator implement size aware policy time complexity family policy baseline newer policy compare ,,
39,969fc10050896c7d2bc53831f083fa551aed885f,en Manes <ben.manes@gmail.com>, 2021-03-28 13:20:56 -0700, , minor touchup,,
40,4db9e8e360d838d979b9ee10f8a86bcb3b77f045,en Manes <ben.manes@gmail.com>, 2021-03-28 10:22:25 -0700, , remove sun.misc.unsafe usage optional previously unsafe used available appending read write ring buffer unavailable fallback used varhandles valuable read buffer hot path previous commit removed case reworking probing strategy write buffer critical path use varhandles similar performance,,
41,8522b417cfb816c767497c2f9d765dc9f9bd60bf,en Manes <ben.manes@gmail.com>, 2021-03-28 10:07:30 -0700, , replace probing strategy selecting read buffer previously stripedbuffer used per thread hash code randomly reset contention detected optimized case used private field inside thread derived java striped64 technique jvm becomes restrictive accessed code allowed fallback thread local value degraded read throughput 14m ops laptop satisfactory 100m ops strategy needed reevaluated douglea suggested using incremental hash based thread loses perfect hash rebalancing benchmark show equivalent throughput randomized probe may benefit thanks caffeine allowed drop event exceeds retry threshold whereas longadder must retry counter incremented retain lazy allocation growth trick striped64 drop unsafe field access,,
42,8516838c4658599cdc81afeb20bf15510eeabdbb,en Manes <ben.manes@gmail.com>, 2021-03-17 20:30:48 -0700, , released 3.0.1 prepare next development version,,
43,cbc71f24a1732106308ff69ff619195374680b56,en Manes <ben.manes@gmail.com>, 2021-03-17 11:11:56 -0700, , fix thread local fallback initialization 515,,
44,50af7d79e10a40da038e79cd0c8898e45e7ab824,en Manes <ben.manes@gmail.com>, 2021-03-10 17:11:27 -0800, , improved eviction reordering weighted cache fix 513 weighted cache entry probation queue large promoted protected queue skipped could leave victim making eligable eviction small cache often used test code premature eviction surprising one still assumes lru reduce confusion reorder within probation queue treat lru instead fifo test case already pass due change selects candidate order handle excessively large entry however codifying intent seems worthwhile help reduce unit test confusion nice benefit,,
45,a8c274ddb0e50c591a9927dd3defc7bd82a4828d,en Manes <ben.manes@gmail.com>, 2021-03-07 00:35:59 -0800, , add putifabsent optimistic fastpath fix 506 put optimistically read existing value avoid map lambda hash table lock absent try add new entry fails racing another writer putifabsent validate return existing value immediately previously would step acquiring entry lock update code path mirror fastpath entry found update needed putifabsent case common assist populating e.g expiration many thread may try reload value,,
46,9074b619b430726ef537ec616a17371c07c43431,en Manes <ben.manes@gmail.com>, 2021-02-21 13:48:53 -0800, , released 3.0 prepare next development version,,
47,be6ad63ea4a7bf59eae10b92e62a1aed1883f951,en Manes <ben.manes@gmail.com>, 2021-02-21 13:28:32 -0800, , add javadoc link,,
48,a95ae264b0efff0519f3a6fab759b18a8fb7909a,en Manes <ben.manes@gmail.com>, 2021-02-21 11:53:11 -0800, , added snapshot view flight refresh operation ongoing refresh operation observed using doe provide live view due weak key needing unwrapped reference key possibly discarded null instead unmodifiable copy provided inspection future may canceled completed waited upon,,
49,0d239874033d6935f73c00e9f86223defb53ee73,en Manes <ben.manes@gmail.com>, 2021-02-21 02:05:53 -0800, , misc improvement javadoc generic build,,
50,b45b1cc93c7d36c093f9f8871b3aad0c8f2d2b76,en Manes <ben.manes@gmail.com>, 2021-02-20 21:44:15 -0800, , add refreshall key convenience method bulk supported interface method provides placeholder future support bulk reloading see implemented therefore method merely call refresh key key composes result bulk reloading supported method may optimized,,
51,b792cc3a059ca72b1d7616c0a0c54c6136acd613,en Manes <ben.manes@gmail.com>, 2021-02-16 10:27:45 -0800, , split release workflow build action,,
52,16ddc49000a5dc461831c4c325ffe6303cd0367c,en Manes <ben.manes@gmail.com>, 2021-02-15 21:00:54 -0800, , update version 3.0.0,,
53,28a456e5ccfb309b3b2c4f1c717de7acbad8ce2c,en Manes <ben.manes@gmail.com>, 2021-02-15 01:35:39 -0800, , remove cachewriter deprecated removal v2.9 instead prefer using map computation atomic operation within write path eviction listener atomic operation eviction,,
54,e1b3bca7c4bab5d2fdfb866bcf3b980ae28d387c,en Manes <ben.manes@gmail.com>, 2021-02-13 19:58:45 -0800, , remove jandex unused quarkus requested adoption reverted usage determined good solution aot problem runtime loading generated class,,
55,a0c310cb0650e6edc349bfc7c87bd76026da28f4,en Manes <ben.manes@gmail.com>, 2021-02-08 02:01:05 -0800, , prefer varhandle ring buffer array,,
56,d63c871cd63063f97b5647ced7f98cdded7ce388,en Manes <ben.manes@gmail.com>, 2021-02-07 22:46:09 -0800, , mirror usage guava http github.com google guava commit,,
57,9342f31f8b8298b8dd70db47d8432ad42a3d0dda,en Manes <ben.manes@gmail.com>, 2021-01-31 17:44:31 -0800, , improved generic type checker framework conformance 337 additional wildcards used throughput apis flexibly accept parameter example allows wider range method reference used load function generic type match checker framework rule improve usage cache apis project run checker project doe implementation class compliant nullness checker http manual generic instantiation,,
58,79e3f5cb9475fdc07a3e0d2a9ab84e06fa43cc0d,en Manes <ben.manes@gmail.com>, 2021-01-16 16:13:22 -0800, , remove unnecessary nullness annotation fix 337,,
59,5821cdb5e4d468896781e34d592147c2ba369ab6,en Manes <ben.manes@gmail.com>, 2021-01-16 15:17:22 -0800, , prefer tighter generic bound invalidate method mirror change query method recent commit,,
60,23de1bdd16541312aa10076144de802d173fbb35,en Manes <ben.manes@gmail.com>, 2021-01-16 14:23:13 -0800, , minor improvement make cache loader friendlier like cacheloader throw checked exception automatically rethrown unchecked cache avoids boilerplate logic implementation code small convenience static factory bulk mappingfunction provided loader interface delegate singular bulk load given function,,
61,f56eee15c9dd13e05b9f4780e3f5b144515c7754,en Manes <ben.manes@gmail.com>, 2021-01-15 10:21:54 -0800, , add jitpack config build jdk11,,
62,abb0489a107169b900ed217c2146249891722669,en Manes <ben.manes@gmail.com>, 2021-01-13 00:29:26 -0800, , varexpiration time based put return old value previously put duration return value putifabsent variant returned boolean due handling messier logic async cache current mapping fight mirror view handle case allowing richer response,,
63,e4b77d2527e54959050fd0b48b5364714164309a,en Manes <ben.manes@gmail.com>, 2021-01-11 22:16:12 -0800,157, support varhandles jctools fix 273 default unsafe used available due performance benefit discussed available access fallback varhandles queue sanity test run variant http github.com jctools jctools issue 157,,
64,4d874858bcaed17777335e7f66658513f530ece7,en Manes <ben.manes@gmail.com>, 2021-01-10 19:28:15 -0800, , enable recursive compute test case,,
65,242e8822e43afb3b6d4a9518ba7b2f57a6bf4e47,en Manes <ben.manes@gmail.com>, 2021-01-10 17:28:01 -0800, , prefer tighter generic bound query method collection famework idiom strict method insert loose query example add contains object guava cache followed practice relied static analysis discover poor usage type would never match put burden developer tooling flexibility desirable see technical detail behind idiom use stricter bound hope friendler experience thanks asmap .get object escape hatch anyway http errorprone.info bugpattern footnote would requiring better,,
66,df3e044f702251814d49120b6103f22c16bb65d4,en Manes <ben.manes@gmail.com>, 2021-01-10 17:03:50 -0800, , prefer set iterable callback key parameter iterable preferred parameter type method user may call getall key way accept widest range collection type cache remove duplicate callback method user code however use specific type key way implementor better use parameter rather copying usable collection type cache invokes callback pas set without boilerplate either side api mistake exists guava caffeine inherited impact minor bulk loader implementation use case like getall key func likely recompilation needed type inferred,,
67,32bb803d5dc5e8397e3bde26a464f5672ab0ef70,en Manes <ben.manes@gmail.com>, 2021-01-10 13:15:41 -0800, , improved refresh linearizability 193 flight refresh discarded write entry update removal eviction case entry removed refresh discarded removal cause explicit instead replaced mapping guava previous release would populate cache best used replaced cause even accurate resulting behavior pessimistic trying avoid refresh populating cache stale data practice little penalty,,
68,e45837248905d752d7fbd7c8df3ed1a439d7af89,en Manes <ben.manes@gmail.com>, 2021-01-04 00:57:02 -0800, , remove deprecated method promote default method abstract,,
69,f343bd7365f81d933ff2619a739afe0482093c2b,en Manes <ben.manes@gmail.com>, 2021-01-03 22:53:16 -0800,222, prefer method handle reflection restores optimization removed 222 due memory leak older jdks,,
70,474b24ac8b4ccefdf3b2208b4aaafff57f9486b8,en Manes <ben.manes@gmail.com>, 2021-01-03 22:34:10 -0800, , use varhandles generated code 273,,
71,551ade7bc1243a2980874e6cf19a59bd6613c6d7,en Manes <ben.manes@gmail.com>, 2021-01-03 13:40:59 -0800,467, return refresh future ignore redundant refreshes mapping flight refreshes maintained lazily initialized used allows cache ignore redundant request reloads like guava doe also remove disablement expiration refresh resolve aba problem entry modified previously undectectable way refresh future obtained loadingcache chain operation  fix 143 fix 193 fix 236 fix 282 fix 322 fixed 373 fix 467,,
72,bfec59c146cf10ffe9b937563bf0d13beb5e1759,en Manes <ben.manes@gmail.com>, 2021-01-02 01:31:25 -0800, , split fixed refresh interface,,
73,3ee9441adc3d1a3041d890044c4eb3fbbb4242c2,en Manes <ben.manes@gmail.com>, 2021-01-02 01:29:46 -0800,176, optimize getallpresent method restores optimization removed 176 due bug java,,
74,639ed397dfda20f9070d12dff74fa239b219345a,en Manes <ben.manes@gmail.com>, 2021-01-02 01:28:31 -0800, , switch j.u.l platform api fix 456,,
75,2a7efcc7fe8b77395d946956cfe204d83d5f0c98,en Manes <ben.manes@gmail.com>, 2021-01-02 01:22:01 -0800, , add varhandle threadlocal fallback stripedbuffer 273,,
76,d4f089dc7951ac4b8265adfc314b050808ca2d79,en Manes <ben.manes@gmail.com>, 2021-01-02 01:09:19 -0800, , removed scheduler reflective lookup delayedexecutor,,
77,46837cd714fd6ef2d376d9a5e5c64a00d1198c13,en Manes <ben.manes@gmail.com>, 2021-01-02 01:04:09 -0800, , removed deprecated public unsafeaccess,,
78,95135b29292813ee9d9bec0fc5149c3baadcfeb6,en Manes <ben.manes@gmail.com>, 2021-01-02 01:36:52 -0800, , upgrade jdk11 dependency,,
79,de32f02a7f8eff24a205e1ff4dc5aa9a7e7e4fed,en Manes <ben.manes@gmail.com>, 2021-01-02 01:02:42 -0800, , java baseline,,
80,59a0eb0721976b12de9977a1cff3cc057fab89d1,en Manes <ben.manes@gmail.com>, 2021-02-15 23:43:43 -0800, , sign artifact publishing github action,,
81,70b3a51b5e2221a98fc492e0d06460267fe4252a,en Manes <ben.manes@gmail.com>, 2021-02-15 21:01:47 -0800, , release 2.9,,
82,037e7a666fdb1c2e90ea7dcac8b8d96819601a98,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2021-02-16 01:10:06 +0000, , bump action cache v2.1.4 bump action cache http github.com action cache v2.1.4 release note http github.com action cache release commits http github.com action cache compare ... signed dependabot bot support github.com,,
83,25c31add4e7166855de751c1ffad594098f339fa,en Manes <ben.manes@gmail.com>, 2021-02-15 17:09:17 -0800, , add support releasing github action nexus publish plugin close release sonatype repository gpg key registered secret signing workflow conditioned creating new release tag intent allow anyone commit access perform release make project resiliant dependent single developer also streamlines process automating,,
84,031449f1e8238a821527815b34d70cec35e7603c,en Manes <ben.manes@gmail.com>, 2021-02-15 00:33:41 -0800, , add restriction eviction listener used eviction listener combined weak key async cache entry evicted key collected future still flight listener atomic map operation remove entry would require blocking therefore allowed,,
85,464bc1914368c47a0203517fda2151fbedaf568b,en Manes <ben.manes@gmail.com>, 2021-02-14 19:07:25 -0800, , eagerly evict entry large fit cache entry weighted size exceeds cache maximum size evicted immediately avoid flushing existing entry protection already built robust cover edge case thus could flush entry entire admission window insert many others update entry inserted updated admission window bounded window maximum size e.g total entry placed immediately window lru position promoted main space treated eviction candidate entry resides main space bounded cache maximum size moved window lru position becomes eviction candidate improved protection cause weighted cache discard recently added entry typically try minimize avoid surprise one generally assumes different victim chosen subsequent add entry may retained thanks building frequency therefore preference protect cache cost breaking invalid assumption step debugging sequence operation,,
86,577040831bbdaaf2cef83801f9dd0f4762a87b2e,en Manes <ben.manes@gmail.com>, 2021-02-14 14:07:57 -0800, , fix hill climber adjustment protected region cache size capped threshold honored thought allocated space incorrect window probation protected region shuffle entry size region change time cache make adjustment optimize hit rate done sampling using hill climbing favor lru mru lfu based workload characteristic two small bug visible impact discovered improving internal state check update protected region current size set max weight difference climbing protected region current size increased entry moved window probation region,,
87,bddccc8bd5d7368ca4c9aa4f550c9e7ad9d8ad9b,en Manes <ben.manes@gmail.com>, 2021-02-14 04:18:21 -0800, , simplify stats test using verifier utility previously cache stats checked using custom hamcrest matcher bit awkward usage code error always clear bit forced custom utility asserts used instead,,
88,e38463b1f484c6f41ad51fe4ae2910eba3870289,en Manes <ben.manes@gmail.com>, 2021-02-07 21:26:15 -0800, , introduce eviction listener deprecate cachewriter removallistener may configured called atomically entry eviction listener invoked calling thread map computation notified cause wasevicted true thrown exception logged swallowed replaces common case cachewriter case atomically handling explicit writes deletes better handled various asmap .compute method method offer flexibility behavior clearer listener may used weakkeys asynccache used together future may evicted prior value materializing cachewriter incompatible either set cachewriter deprecated scheduled removal 3.0,,
89,a9a89f97c6f0bf0181841805999af66229604265,en Manes <ben.manes@gmail.com>, 2021-02-13 13:52:38 -0800, , remove jcenter repository shutdown collision cache published jcenter actively maintained therefore dropped benchmark simulator elasticsearch fully publish central newly excluded dependency required http github.com elastic elasticsearch pull 68926,,
90,9423f15d6cdb19e75f71287bf71ba6c11dbd3aa1,en Manes <ben.manes@gmail.com>, 2021-01-16 21:24:10 -0800, , upgrade error prone static analyzer,,
91,3ee6531ecb28f4a2c101bf576537d8ac95ff4de5,en Manes <ben.manes@gmail.com>, 2021-01-12 09:58:54 -0800, , trigger maintainance iterator observes expired entry fix 487,,
92,259e4fe7dacc583db4dd56f30aa318af32a7e740,anis Batura <yanis.batura@gmail.com>, 2021-01-11 17:39:15 +0700, , fix couple typo cache.getall javadoc,,
93,9c1c9a78ae32905f6e7faab9d5a5005f789ae3d6,en Manes <ben.manes@gmail.com>, 2021-01-04 00:35:05 -0800, , cachestats value based class deprecates constructor introduces static factory obtain instance allocation cost reduced project valhalla jsr 169 delivered,,
94,c991a5071b39a0e3df4d88d21cefc31bb983b7eb,en Manes <ben.manes@gmail.com>, 2021-01-01 21:48:12 -0800, , jcache add active expiration using expirypolicy fix 265 previously jcache expiration implemented fully lazy wrapper relied size eviction eventually discard entry accessed matched implementation spec author however jsr 107 offer standard configuration setting maximum size would allow expiry cache run memory due lack cleanup author assumed size would applied followed example caffeine later added variable expiration fully compatible due slight semantic issue example jcache tck asserts inserting entry immediate expiration duration never actually inserted cache mean evaluating expiration time cache compute returning null mapping caffeine logic insert immediately discard effect except callback listener event receive create delete whereas jcache requires suppressed cause integration become difficult due small lifecycle difference tck asserts instead continue use lazy wrapper proactively clean via caffeine native support already option setting native option explicitly none native setting used adapter default use variable expiration read wrapper timestamp allow cache maintenance discard entry regardless maximum size set,,
95,1c818eba026ec526811dfaed897fc3fdd995aabd,en Manes <ben.manes@gmail.com>, 2020-12-20 17:39:10 -0800, , declare simulator policy name metadata previously policy name like linked.lru specified registry configuration lookup policy stats report minor detail always looked odd seemingly unnecessary duplication declared policyspec annotation possible time name computed stated twice meaningful impact except simplifying code everything work policyspec continues optional,,
96,4966df00e2e4e525fef636915bc4ce811b7623a7,en Manes <ben.manes@gmail.com>, 2020-12-19 15:15:50 -0800, , lazily initialize simulator policy previously metadata characteristic cache policy support instance method required creating policy filtering support required feature problematic policy constructor perform allocation initializing array based maximum size large weight based run could allocate large object immediately thrown away policy compatible configuration constraint customizations metadata defined optional policyspec annotation inspected filtered thereby avoiding unnecessary creation cut execution time 1gb objectstore trace 1.5m,,
97,200ed450652cb00164a246365e51510cd96882d8,en Manes <ben.manes@gmail.com>, 2020-12-17 20:45:25 -0800, , add support ibm objectstore trace simulator,,
98,780a02e070e9a5e2bcdbff69e1f06f1d7107ea1d,en Manes <ben.manes@gmail.com>, 2020-12-13 01:01:52 -0800, , upgrade pmd static analyzer,,
99,54fd50e4ea8245bad395b631a2d75603db57d4c0,en Manes <ben.manes@gmail.com>, 2020-12-07 22:22:40 -0800, , release 2.8.8,,
100,c1ed088897da806cd9700d01b961e65fe00ea8be,en Manes <ben.manes@gmail.com>, 2020-12-07 20:38:00 -0800, , fix npe bootclasspath fix 481 reduce runtime overhead due field needed certain configuration code generation used reflection load optimal implementation class trade small amount disk space reduced memory usage unfortunately wrong classloader method used available bootclasspath null value fails cache used compiler e.g errorprone javac fork instead class.forname used resolve non null acceptable class loader appears loader else system loader bootclasspath,,
101,f77b9e213f101ec26dffdeb962e74c81ede54650,en Manes <ben.manes@gmail.com>, 2020-12-06 22:57:03 -0800, , release 2.8.7,,
102,83ae0dcd365b2db5ab0f5a93ce0c56c0bc914de4,en Manes <ben.manes@gmail.com>, 2020-12-06 21:06:00 -0800, , fix write time optimization variable expiration fix 478 high write rate key overwhelm write buffer may drop entry maximum capacity full cause backpressure allow mainance task catch write need recorded buffer major event occurs entry size changed expiration time differs improve throughput tolerance used allow skipping write buffer recording read buffer instead improves throughput key write benchmark optimization updated take account variable expiration expire time may change based calculation determined configured expiry would cause entry reordered timerwheel possibly delaying automic removal indefinitely variable time differs write time reordering required authored christopher facboy gmail.com,,
103,a54afaa9d00a78e335e5c2d7b62c5ce1b6ef82a3,en Manes <ben.manes@gmail.com>, 2020-11-30 00:01:17 -0800, , improved simulator report formatting,,
104,64b50b6a75a0f102ed9b608990a48fb7c46b4ff5,en Manes <ben.manes@gmail.com>, 2020-11-28 22:00:25 -0800, , fix simulator bloom filter table minumum sizing table index calculated shifting hashed value modulus applied negation bit may lead minimum index table size one either index modulated via mask smallest table avoid one error increasing minimum allows simplifying code,,
105,5cc2c7d3cd403452d75fa88129e241e585b8c812,en Manes <ben.manes@gmail.com>, 2020-11-28 02:34:00 -0800, , improved simulator runtime large trace unfortunately elegant approach partitioning stream event batch using iterator view come hidden performance cost instead picking event one one large internal buffer created grown spinedbuffer first element provided consumer maximum chunk size element cause long pause trace read memory processed simulator ds1 trace add second startup time simulator double time trace rewriter foreach operation pull demand smaller buffer concurrent prefetching keep policy fed lower startup overhead also greatly reduces memory footprint allow easily analyzing large cache however coding structure slightly pleasant,,
106,23cd33361736f7be16be88d97eee49bf781309c9,en Manes <ben.manes@gmail.com>, 2020-11-21 16:48:33 -0800, , add support lrb trace simulator lrb offer 17gb cdn trace 2.8b event analyzed archive support improved tar.gz supplied entry concatenated hit miss penalty support added optimal policy degraded hold entire event memory conditioned non latency trace key primitive long held reduces pressure improves performance large trace,,
107,b95222ab4fbf4b01f34ea053522227cc4e3ee3e2,en Manes <ben.manes@gmail.com>, 2020-11-15 11:24:24 -0800, , minor cleanup simulator,,
108,cdd455fc267ff5708b0e60f06ec2e6f52805be47,en Manes <ben.manes@gmail.com>, 2020-11-14 17:56:48 -0800, , allow simulator policy add custom metric addition common policy statistic like hit rate may desire track algorithm specific metric example clock policy perform scan eviction unmark hot entry search cold entry evict might useful capture worst case run length observed given trace policy extend policystats register track new metric reporter capture output efficiency metric registered supplier rather updating mapping value avoids high rate object churn modified every access event may million instead metric kept primitive instance field accessor method registered metric captured policy reporter print empty result nothing captured across policy metric dropped report reduce visual noise also includes metric tagged feature characteristic employed trace entry weight,,
109,9f16577748ae5538e0aefc191f861a06f4adad8e,en Manes <ben.manes@gmail.com>, 2020-11-11 21:25:06 -0800, , return expired mapping keyset toarray fixed 472,,
110,8c91f6544f8f7cbfa5275aa05cce0713ea7f2863,hanyoung <park910113@gmail.com>, 2020-11-10 01:00:08 +0900, , add clockproplus policy,,
111,f5e46aae20bdeede58b0634c6969e5d06484a6f0,en Manes <ben.manes@gmail.com>, 2020-11-07 23:48:19 -0800, , use github action continuous integration unfortunately travisci gradually turning offering benefit using clearer flexible powerful workflow definition due getting little attention long standing flaky test fixed style cleaned,,
112,f5ababd430ddb7bee693653953ca851b3921af46,en Manes <ben.manes@gmail.com>, 2020-11-04 19:31:13 -0800, , simplify trace reader interface throwing ioexception remove checked exception interface never needed implementation synthetic one perform file based one utilize abstract base class template instead exception rethrown unchecked since halt simulator non recoverable minor nit pmd error simple aggregation loop used stream.empty base concatinate since variable reassigned closed updated check would need suppressed checked exception gone replaced using flatmap concat trace event,,
113,fb42e94cca3316ac43e6a379035e8e8b30dfd8f2,en Manes <ben.manes@gmail.com>, 2020-11-03 21:44:17 -0800, , add twitter cache trace simulator twitter released large data set cache cluster trace include anonymized key entry size ttls paper analyzes ttls represented paper trace available experimenting adding support ttls sample trace expiration event full trace large run hoc therefore improvement made evaluate key entry size cursory analysis show cache recency biased workload modest gain policy also leverage frequency match paper observation well prior working cache inside social network entry size aware policy fixed update entry size change throughout workload http github.com twitter cache trace 1a1a11a thinkingfish ohadeytan,,
114,1ed8c21da0b17a1c7938ffe8102e68543e6626df,hanyoung <park910113@gmail.com>, 2020-11-03 15:11:41 +0900, , add clockpro research code written author,,
115,6dae3be599fc4c900f576fb5fc653a5abf651e07,hanyoung <park910113@gmail.com>, 2020-11-02 21:41:14 +0900, , update clockpro based author paper,,
116,bd19a3cf3c5b10fe1214026b3ef6e3272f1e1800,leksei Semin <alllexsm@gmail.com>, 2020-11-02 16:40:21 +0100, , verify maximumweight setting,,
117,e6c1225aa4ab9e13fe696c1e93a058d7e3efa26e,en Manes <ben.manes@gmail.com>, 2020-10-20 22:46:57 -0700, , support iso 8601 duration caffeinespec fix 466,,
118,3b1921cdecfbc48911e614ca6542265c38da8a76,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2020-10-13 00:50:34 +0000, , bump junit 4.12 4.13.1 example coalescing bulkloader bump junit http github.com junit team junit4 4.12 4.13.1 release note http github.com junit team junit4 release changelog http github.com junit team junit4 blob main doc commits http github.com junit team junit4 compare r4.12 ... r4.13.1 signed dependabot bot support github.com,,
119,7183c5af7978c7428e637b9507d555c041049c56,ependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>, 2020-10-13 00:40:45 +0000, , bump junit 4.12 4.13.1 example write behind rxjava bump junit http github.com junit team junit4 4.12 4.13.1 release note http github.com junit team junit4 release changelog http github.com junit team junit4 blob main doc commits http github.com junit team junit4 compare r4.12 ... r4.13.1 signed dependabot bot support github.com,,
120,cff5f42466e7cdeb2e665531cad52f1257589dbf,en Manes <ben.manes@gmail.com>, 2020-10-11 22:32:22 -0700, , release 2.8.6,,
121,5d8a554d2e06b1cc8302cff2bbe2a78b482a7220,en Manes <ben.manes@gmail.com>, 2020-10-11 22:15:26 -0700, , upgrade spotbugs,,
122,ef5c40ecc8e492b79da3003831ada7a0d776a0bf,en Manes <ben.manes@gmail.com>, 2020-10-11 02:21:42 -0700, , migrate cla assistant fix flaky test cla hub silently disappeared along signature gathered thankfully apache license cover case contribution required offer cla case alleves concern corporate legal review cla term apply direct copy apache name updated test appears flaky due weak soft value collected execution test better ensures entry collected hopefully stabilizing test case,,
123,62801436499666c7c88e4b9ad0dc3bdd54160258,en Manes <ben.manes@gmail.com>, 2020-10-10 22:05:52 -0700, , aggressively clear testng result queue free memory testng retains test result various queue map result used test reporter none use since result object large held memory cause excessive past memory error due high number test execution build hack gut often relying reflection allows clear result test execution drop memory usage speed build ideally testng would avoid memory grab default reporter stream output rather waste memory waiting suite completes,,
124,7eccd722de1c4879e0161afd413bc1f0a7d383e1,en Manes <ben.manes@gmail.com>, 2020-10-10 20:17:53 -0700, , aggressively free test memory run memory error would occur locally due higher concurrency resulting pressure 512mb heap could fail despite test method friendly collect memory grab aggressively cleared helping cut heap half inspecting heap dump reduces test time minute speedup set awaitility executor avoid finalization awaitility awaitility 168 use thread poll verifier avoid async pile due lambda promptly assist removing circular reference timer wheel sentinel assist clearing cache data null ing node link remove heavy weight testng context enable parallel ref cleanup better discard weak soft entry,,
125,804945897f11176bc2059557d20ee409e58c9294,mclaughlin <kevin.mclaughlin@ipsoft.com>, 2020-10-10 13:55:09 -0700, , add record native stats option jcache fix 460 true enables stats collection via underlying cache statistic accessed using jcache unwrap method thereby registering another metric system e.g micrometer,,
126,c57120789a10e4532b5909fd5931f1726de654d5,en Manes <ben.manes@gmail.com>, 2020-10-09 02:14:11 -0700, , add test jandex index load content,,
127,fe0131bb4d6dbfca5db4bbb7a06f5b14b92b4ca2,en Manes <ben.manes@gmail.com>, 2020-10-08 14:31:40 -0700,10420, add jandex index quarkus graalvm aot http github.com quarkusio quarkus issue 10420,,
128,f77ab383459f9befeeffbaf542632e15c921d213,en Manes <ben.manes@gmail.com>, 2020-10-05 00:33:23 -0700, , update jdk15 field layout add deprecation protect false sharing field layout padded utilize different cpu cache line layout rule changed jdk requires verbose byte field desired effect due striped buffer already guarding contention padding ring buffer array slot unecessary softly deprecated class unsafeaccess explicitly deprecated unsafe still used access obtained using internal class test jctools version suppress compiler warning import inlined http shipilev.net jvm object inside,,
129,1ae5b95fc8c3a1e2c73416a38314e359d0733ffb,en Manes <ben.manes@gmail.com>, 2020-10-02 18:21:13 -0700, , add codeql gradle github action,,
130,5770ef376ad9eb8edccdd051f7209d977faf644f,en Manes <ben.manes@gmail.com>, 2020-10-01 11:24:13 -0700, , suppress removal listener notification future value null asynccache remove entry future resolve error null value treated unestablished mapping best mirror expected behavior e.g synchronous map listener notified successful mapping removed mean exceptional future ignored,,
131,6f7dfcf275944ae2c204abe808ae67e035f682a3,en Manes <ben.manes@gmail.com>, 2020-09-30 15:15:11 -0700, , add test async asmap computation failed mapping,,
132,f8e35aca340f55e1969a2d4c1c4708ad8cdb6b4e,en Manes <ben.manes@gmail.com>, 2020-09-30 02:11:47 -0700, , improved failure handling async asmap computation asynccache synchronous asmap view emulates synchronous map method underlying map data conditional method putifabsent replace remove compute merge must wait existing entry future complete flight future waited outside map lock reduce hold time block writes underlying hashbin future fails exceptionally null result future removed synchronous view treat absent change improve atomicity correctness method,,
133,c915bbbf46d1e7282fcadb96b5c6a79fbb8cdcc5,adu Cotescu <cotescu@adobe.com>, 2020-08-18 15:49:36 +0200, , fix 447 allow used osgi added carsten ziegeler pgp key apache felix,,
134,ac014b531aace241a423968697179737ceb4f926,adu Cotescu <cotescu@adobe.com>, 2020-08-18 13:30:47 +0200, , fix 447 allow used osgi annotated make osgi service running osgi container set classloader thread context classloader every api call provided make sure default config read bundle default classloader fallback app classloader allowing override define configuration added osgi test made bnd build reproducible extra bundle header,,
135,ecd5e13e1b8abe9796e0ec5c9ac30aa691f7d472,en Manes <ben.manes@gmail.com>, 2020-08-17 22:00:04 -0700, , support simulation large cache weighted policy type weight based trace entry different size e.g byte policy support characteristic evict multiple entry maximum size contraint integer setting small tencent photo trace setting increased long weighted trace updated accordingly trace use checked cast int value minimal migration minimize chance introducing bug linked policy fixed handle entry weight changing cache hit adaptsize simulator compatibility reduced trace reader simulator treat key different weight distinct entry rather update workaround hashing key weight entry key cause noticable workload skew since simulator like lhd group make odd choice restricted trace reader,,
136,057a78d3ba3f51e313ef7a1bada5ddca18504cd6,en Manes <ben.manes@gmail.com>, 2020-08-16 15:02:21 -0700, , add cloud trace simulator,,
137,383f8344ce7d380b0f9dcff8dbf5b23d89a93da2,en Manes <ben.manes@gmail.com>, 2020-08-16 02:47:38 -0700, , add tencent trace simulator,,
138,ba5e5f6e73305e0c02f5e496ff1f2874819b808b,en Manes <ben.manes@gmail.com>, 2020-08-02 23:33:52 -0700, , add linux page cache double clock simulator page cache used operating system decide data memory swapped disk includes application memory memory mapped file performance critical overall system linux lir inspired policy differs significantly slru structure named active inactive add non resident entry aka ghost shadow optimistically promote miss ghost entry present abides simple formula formula unique idea determines entry could active region miss occurred similar observation arc except formula adjust region size whereas one promotion linux decides region size upfront based system memory split baseline smaller inactive region large memory system policy hit rate mirror arc lir though similarity due using history concept sometimes doe better often worse typically outperforms lru due static configuration robust across workload observe notable gap compared tinylfu hit rate across various workload recorded http docs.google.com spreadsheet edit usp sharing,,
139,1b690178e66c0d39ae62b0c1eac5653ea72d72af,en Manes <ben.manes@gmail.com>, 2020-07-17 09:28:57 -0700, , dependency update mockito deprecation fix,,
140,f99022b06fc241be6e27e1f4020258c8852939ab,en Manes <ben.manes@gmail.com>, 2020-07-07 11:35:33 -0700, , improve variable name inverted logic http github.com ben mane caffeine issue 436 issuecomment 65474064,,
141,40f2d1b2894df96e866b3d3719bb5420ba241bcc,en Manes <ben.manes@gmail.com>, 2020-07-04 13:17:17 -0700, , auto format generated code using google java format,,
142,d201f529ffc9b3b2741dd258dbbdd5b563656e95,en Manes <ben.manes@gmail.com>, 2020-06-28 22:55:39 -0700, , fix flaky test case due one time advancement,,
143,29ec4a0bdace83103946fe6e626c1095c1558533,en Manes <ben.manes@gmail.com>, 2020-06-28 21:13:24 -0700, , release 2.8.5,,
144,59e30e908f4eb4b3dccea0dad15fdcc93e17984a,en Manes <ben.manes@gmail.com>, 2020-06-28 16:48:40 -0700, , remove coherence policy due causing odd build failure,,
145,49fc588c99d69a5e62bbc9d127f9529b74b7e3cf,en Manes <ben.manes@gmail.com>, 2020-06-28 13:55:59 -0700, , fix expiration delay scheduled cleanup fix 431,,
146,3150a927e21aa1673b9ecdf4033a4dc4716ef05a,en Manes <ben.manes@gmail.com>, 2020-06-25 01:31:19 -0700, , add coherence simulator,,
147,c13ed5b047d68c50bcfb44a7a33b20e2e1fdbb1f,had Eytan <ohadey@gmail.com>, 2020-06-15 15:06:17 +0300, , add support outbrain trace,,
148,56b31247bdcf3bff69d731152a1d115e1b3d299d,en Manes <ben.manes@gmail.com>, 2020-05-31 15:00:17 -0700, , upgrade error prone pmd static analyzer,,
149,4451d4443f1db71d3dc11925a1bca9a5206dd539,en Manes <ben.manes@gmail.com>, 2020-05-20 21:48:33 -0700, , release 2.8.4,,
150,7239bb0dda2af1e7301e8f66a5df28215b5173bc,en Manes <ben.manes@gmail.com>, 2020-05-18 21:32:59 -0700, , schedule absent lookup maintenance required fixed 420,,
151,14e44747003c0a02c7546e05bf9fb5de9ac7d61c,en Manes <ben.manes@gmail.com>, 2020-05-18 00:12:42 -0700, , release 2.8.3,,
152,1ea398c2f222b39acdc1c4317634a0176494052c,en Manes <ben.manes@gmail.com>, 2020-05-17 23:57:46 -0700, , fixed javadoc add eviction test case,,
153,eae580397787ebb5fc64bf8489caa05365f6c223,en Manes <ben.manes@gmail.com>, 2020-05-17 19:14:52 -0700, , generalize trace rewrite utility,,
154,49e3e4f994b856d986eaeffcd6a1bd6d056732ae,en Manes <ben.manes@gmail.com>, 2020-05-17 03:35:33 -0700, , add option lookup without updating metadata fix 418,,
155,79991677a73770d249efe26b35c53b06fb909e79,had Eytan <ohadey@gmail.com>, 2020-05-13 01:56:57 +0300, , allow rewriting arc trace adaptsize format,,
156,47d59e0e4a82450c0d5306b2565b351ca1a10ae7,en Manes <ben.manes@gmail.com>, 2020-05-10 21:00:59 -0700, , add support camelab trace,,
157,ddd207792f1a1d490b22cdb171762b3a003e73d4,vshichang <lvshichang@kuaishou.com>, 2020-05-04 11:13:01 +0800, , fix comment,,
158,9f2ee2e673494a40c768b830f8d840011dd4a7cc,en Manes <ben.manes@gmail.com>, 2020-04-27 01:05:27 -0700, , release 2.8.2,,
159,8121c1d2f24adce2f768ae2303b2cce398426070,en Manes <ben.manes@gmail.com>, 2020-04-26 22:11:50 -0700, , fixed race causing incorrect removal cause fix 412 bug manifest due incorrectly optimized map.remove key implementation cachewriter specified alternative implementation used doe suffer mistake change version case explicit removal eviction entry occur concurrently removal win race responsible retiring entry however even entry discarded eviction may necessary meet bounding criterion e.g weighted entry therefore eviction thread eagerly discard entry policy data structure continue evaluation entry synchronized case eviction thread could lose removal retire entry first lead removal seeing dead entry cause listener modest performance difference microbenchmark slightly coarser locking however difference library whether decide linearizable perform optimistic check entry absent optimistic check avoids locking also lead removal block waiting flight computation complete valid choice user expressed desire removal pessimistic rare enough follow wish,,
160,614fe6053e343481c15c55f1d696517d73baae0d,en Manes <ben.manes@gmail.com>, 2020-03-22 23:37:53 -0700, , add optimistic fast path putifabsent avoid locking mirror optimization computeifabsent lock lookup failed value may need computed see http github.com apache openwhisk pull 2797 use case user modify usage obtain performance goal,,
161,8c397e22e950528de2d741e498e0c4c42b97f764,ebastian Schuberth <sschuberth@users.noreply.github.com>, 2020-02-09 19:27:26 +0100, , fix scm connection url publishing url missing provider part git see http pom.html scm also connection url must usable anonymous clone contain user name finally github doe endorse use git protocol use ssh authenticated developer connection instead,,
162,608d5b4d2c6b5580b24e847d45f0896405b0ab95,en Manes <ben.manes@gmail.com>, 2020-01-30 08:45:49 -0800, , improved error message setting negative max size fix 390,,
163,8bdfb0d95db523d15c2560f05a228468ecdbe98d,arcel Overdijk <marceloverdijk@gmail.com>, 2020-01-27 08:23:14 +0100, , fixed typo,,
164,abdc478f60d1af60b4b9f99ec5bff4f91fa772b9,en Manes <ben.manes@gmail.com>, 2020-01-25 19:04:31 -0800, , prefer thread context classloader jcache fix 387 seems spring hibernate jcache support load class current thread context classloader differs provider class classloader closer match ehcache wrote hibernate integration differs avoiding redundant work two classloaders match,,
165,ddae49649b87b87542e7fe1cff9781b09815cff8,en Manes <ben.manes@gmail.com>, 2020-01-25 19:03:59 -0800, , minor clean dependency update,,
166,bbce9875f15594ba892d1db7d3be8d00ba39cc2a,en Manes <ben.manes@gmail.com>, 2020-01-15 15:33:29 -0800, , release 2.8.1,,
167,8dd18b1ef4335f1a267edc5f02da47f340086bd3,en Manes <ben.manes@gmail.com>, 2020-01-15 09:08:55 -0800, , fix publishing snapshot release,,
168,b2d67d19493a6b2205d023647040c93878298f9f,en Manes <ben.manes@gmail.com>, 2020-01-14 22:28:08 -0800, , fix new maven publish release process successfully performed release dry run dropped staging repository also remove afterevaluate hack,,
169,8cb2b08c6ff9c89f85d664f8e6a1ccbb15f70379,en Manes <ben.manes@gmail.com>, 2020-01-14 12:19:31 -0800, , migrate maven publish plugin previously release performed using legacy maven plugin hard configure used nexus plugin built top since plugin inspired official maven publish plugin similar configuration gradle legacy plugin deprecated output similar except includes succinct generated pom test scope dependency new gradle module metadata simulator application archive zip tar longer attached default since development tool known use case publishing otherwise asked longer provided,,
170,443bbb8efc789d7c2bfebc71b3b317de9a6f68fc,en Manes <ben.manes@gmail.com>, 2020-01-07 20:52:09 -0800, , dependency update,,
171,7272f62f60218fb460b0efe57ebdf5abf341940b,hodoris Sotiropoulos <theosotr@aueb.gr>, 2019-12-27 10:54:57 +0200, , fix race condition build script,,
172,757f6d5d99dec825421378db99cd2e8e0869cee3,en Manes <ben.manes@gmail.com>, 2019-12-23 01:21:56 -0800, , fix jmh benchmark timerwheel,,
173,fb4eae754570311d5bbecbd48682eafdc10f5c55,had Eytan <ohadey@gmail.com>, 2019-12-22 23:06:40 +0200, , weighted stats unboundedpolicy,,
174,af9523756e72422f2e25daec717deb96be0d407f,en Manes <ben.manes@gmail.com>, 2019-12-22 10:36:32 -0800, , support size field snia cambridge trace format,,
175,707a04a2f692cd1cd5f0f4e8e07994acf72bcbee,had Eytan <ohadey@gmail.com>, 2019-12-22 10:10:38 +0200, , make git ignore personal configuration file fix 381,,
176,72461302d4d5257a9a7be66e92df27ecfd509299,en Manes <ben.manes@gmail.com>, 2019-12-21 22:44:40 -0800, , fix jmh compilation task,,
177,81b854cdcaaf179335585e870851476497f084f0,en Manes <ben.manes@gmail.com>, 2019-12-21 21:34:42 -0800, , minor simplification,,
178,a34ba0d4ae09c040834dd810fda5f209e33b5317,had Eytan <ohadey@gmail.com>, 2019-12-18 10:39:12 +0200,378, merge pull request 378 ohadeytan master rehash key together weight weighted event add weighted stats make linked policy simulation weight aware,,
179,992e15167ea944b2f92b61bcab8723db3b2590c0,had Eytan <ohadey@gmail.com>, 2019-12-18 00:53:16 +0200, , record hit miss inside weighted record small nit,,
180,28fb0f16e3e377fcb77736b2ab141c89fd3d2c46,had Eytan <ohadey@gmail.com>, 2019-12-18 00:03:51 +0200, , add weighted stats,,
181,355aac1e21f8275c4aeda970bea13bfc26c6ee5d,had Eytan <ohadey@gmail.com>, 2019-12-17 01:06:31 +0200, , move rehashing,,
182,bf43349f31252c2816bd98a4d75b9d3b2fd4c2be,had Eytan <ohadey@gmail.com>, 2019-12-16 11:56:02 +0200, , make linked policy simulation weigth aware,,
183,f98efd29b0029119ee18e850b37b5530c2d6c5ca,en Manes <ben.manes@gmail.com>, 2019-12-16 22:59:15 -0800, , add hit miss penalty support simulator fix 375 authored omri himelbrand himelbrand gmail.com,,
184,7483ae9cbfec83b41a98373de1ef166075eae3d6,en Manes <ben.manes@gmail.com>, 2019-12-16 22:50:29 -0800, , add hash improvement simulator bloomfilter,,
185,1319201a40ac6b57147c02b6367c598daaba8294,en Manes <ben.manes@gmail.com>, 2019-12-14 21:38:00 -0800, , improve countmin4 spread hashcode zero hashcode zero due multiplicative spread array index also zero similarly difference positive negative number flip signum bit higher chance collision even caveat spread quite good cache scheme protect hashdos style attack improvement simply easy ignore nicer theoretical advantage adding seed differs per row avoid eye sore change hit rate noise 0.01 0.5 often better,,
186,a1c5f9f32b80ef06aac3f6103b3af627d47c57d5,en Manes <ben.manes@gmail.com>, 2019-12-13 11:02:44 -0800,3320, isolate osgi failure due guava split package osgi load bundle atomic unit classpath split package supported class verifier enabled fails find required class dependency test fails disabled test pass since need load missing class disabling verifying deprecated feature jdk13 removal originally added speed test since resolved reflectively loading class factory rather explicit class reference http github.com google guava issue 3320,,
187,f3129849c79bac3c16c6d2923a721be28a0ba40a,en Manes <ben.manes@gmail.com>, 2019-12-13 09:39:56 -0800, , fix osgi test need investigation,,
188,e6a9e61e5e9e8c29906ebb912e3375adde61e857,en Manes <ben.manes@gmail.com>, 2019-12-12 22:49:54 -0800, , disable errorprone jdk12 due incompatibility fix 376,,
189,1986ab81347c7430e3675451d1ef6da6cdc36957,had Eytan <ohadey@gmail.com>, 2019-12-12 23:14:36 +0200, , avoid overflow lir simulation fix 377,,
190,aa0cdfad2e94e4a39432f7d27f43ff0a3e25755a,en Manes <ben.manes@gmail.com>, 2019-12-09 21:05:50 -0800,11625, upgrade errorprone hacking around gradle bug annoyingly need local jar get caffeine compiler classpath build ourself gradle implicitly rewrite transitive dependency project dependency cause fail compiler run self hosting seems http github.com gradle gradle issue 11625,,
191,7a78372b596f07bcb73fbc88b8ba6b5fc4ef5b9a,en Manes <ben.manes@gmail.com>, 2019-12-09 09:35:49 -0800, , fix pmd warning,,
192,1ffb8fda8125109b8e8fb90714f383f985ddc115,en Manes <ben.manes@gmail.com>, 2019-12-09 02:34:28 -0800, , fix caffeine cache2k weighted eviction count,,
193,786acf59dd4587fdfd8fdee408e06b8c298153a7,en Manes <ben.manes@gmail.com>, 2019-12-09 02:18:41 -0800,1445, resolve errorprone 2.3.4 warning used clean build crash compiler see http github.com google error prone issue 1445,,
194,0263e986bee2ab91a77450b03062c9bf76a6f831,en Manes <ben.manes@gmail.com>, 2019-12-09 02:13:23 -0800, , add request metadata simulator fix 374 primitive long key replaced accessevent type contain metadata like entry weight miss penalty could used admission eviction policy adaptsize request trace added demonstrate entry weight extending metadata latency enhancing policy etc left future work policy characteristic defines feature support trace characteristic define constraint applied simulator filter policy doe meet configured trace requirement,,
195,9c100e709d0f42805ea73195c6c9717b3f92a687,en Manes <ben.manes@gmail.com>, 2019-11-30 16:48:32 -0800, , ensure guarded wrapper applied,,
196,a698999b294d4cc64e10dd41ee081afe7ca40336,en Manes <ben.manes@gmail.com>, 2019-11-10 11:02:07 -0800,364, delay fix 364 nnext major release revert qualify final artifact avoid name conflict fix 364 reverts commit,,
197,8cc71a1561cd43fe2b0c8fcddbaff5be897e2bab,en Manes <ben.manes@gmail.com>, 2019-11-10 10:16:56 -0800, , qualify final artifact avoid name conflict fix 364,,
198,37f6ad303eb4474cd8a644551d528dfda37c5bfc,en Manes <ben.manes@gmail.com>, 2019-11-09 12:02:52 -0800, , optimize entry size singleton weigher used case cache act maximumsize caller constructed using maximumweight weigher per entry weight field needed maximumsize entry used instead allows optimizing configured like http gerrit gerrit 244612,,
199,eda7b1084ebfac76a7e60e8915cc16a23267ff53,en Manes <ben.manes@gmail.com>, 2019-11-09 11:54:47 -0800, , upgrade gradle spotbugs beta doe resolve deprecation maven publishing simplified using gradle nexus plugin plugin feature provided built maven publish plugin migration required,,
200,a6d4ba420f12c6df776c0996794c5fc4b1e78a0b,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2019-11-09 22:29:54 +0300, , bump checksum dependency plugin 1.44 fix alldependencies v1.31.0 v1.33.0 v1.35.0 reduce verbosity downloading key v1.31.0 add property update checksum.xml avoid failure,,
201,20ab0c05b252c88f35f62e827efb721d447b4448,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2019-11-05 23:56:24 +0300, , ensure checksum dependency plugin activated travis build,,
202,0bdf7c7d76855e4f36d6b3b92ed3ea845e061b62,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 18:37:39 -0500, , fix disable archive publishing,,
203,a9f60afc4a6484cb4eae981ceb78034418bcfe3d,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 16:29:38 -0500, , chore upgrade pmd coverall gradle plugins,,
204,7d7f7751b4a1a25584db6515424cc87fe2d152d2,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 15:33:26 -0500, , fix disable archive publishing,,
205,2cf5e58af7b2b5267228f001cfe6b12a9258f185,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 15:32:40 -0500, , chore upgrade koloboke,,
206,b16429a9e5f4bdcde680a776429e3f5e440e4c83,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 15:09:18 -0500, , chore upgrade gradle wrapper,,
207,3d920d91013ed33b093e5b0f49f2f4070c93ccc0,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 14:02:12 -0500, , chore update checksum,,
208,0acdaa65dc44b5391af080c3af0c85a16d60bcfe,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 12:23:31 -0500, , fix travis build failing pull request,,
209,4d1c76df617f2759b3da3c5b904aa29e6fe1e2de,hristophe Roudet <croudet@stratacache.com>, 2019-11-05 08:46:54 -0500, , chore upgrade dependency,,
210,53f81d74743275d9d4b37fe99bcae5afc0062574,en Manes <ben.manes@gmail.com>, 2019-10-08 22:19:15 -0700, , update usage dependency,,
211,360a339c87a2d28d6cdbc8d96a57fc7685e367e8,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2019-09-30 00:19:18 +0300, , bump checksum dependency plugin 1.30.0 disables plugin case task execution graph,,
212,f66ad071ad1b5815d71d014b1d54d99a0329445a,en Manes <ben.manes@gmail.com>, 2019-09-29 12:09:34 -0700, , add jmh eclipse test container classpath recent version eclipse support separating test class compile classpath gradle buildship support causing jmh source reference test class compile ide mark jmh source part test container,,
213,b354fca82bc9f74c65584607c9ce3c54fef5b099,en Manes <ben.manes@gmail.com>, 2019-09-28 21:10:38 -0700, , resolve false positive warning lgtm.com analyzer,,
214,92c8d5962881f1317fc2479202f4280060435599,en Manes <ben.manes@gmail.com>, 2019-09-28 17:42:38 -0700, , allow custom jcache config source fix 312,,
215,ee1100e790226eb45c8b3c6570b820a7c5be6742,en Manes <ben.manes@gmail.com>, 2019-09-28 16:48:25 -0700, , suggest using thread executor disabled cache fix 348,,
216,a10a8756d3daf4e26965c3ec3e16bde8c1871b5d,uus C. Bloemsma <guus@bloemsma.net>, 2019-05-08 16:12:16 +0200, , coalescing bulkloader sample 336,,
217,50515e290e5cb345a5115f098e8cf1ce00c06b21,en Manes <ben.manes@gmail.com>, 2019-09-28 16:14:00 -0700, , upgrade dependency,,
218,9245741cccd554decb5ec803c0371566560137a7,en Manes <ben.manes@gmail.com>, 2019-09-28 15:31:38 -0700, , enable dependency verification plugin,,
219,ad662015c482b7db6577a3b92e7fd85df2772894,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2019-09-03 00:54:26 +0300, , use pgp dependency verification see http github.com vlsi vlsi release plugins tree master plugins checksum dependency plugin,,
220,2d5528dea3ff1e6af2a9f682d1e12122837aa4a4,eong Yeop (Terence) Kim <jeongyeop.kim@linecorp.com>, 2019-09-23 18:08:17 +0900, , update javadocs reflect actual behavior,,
221,19f0911a78fa8096a4f610a24b756741dd4ed984,en Manes <ben.manes@gmail.com>, 2019-08-25 22:35:39 -0700, , add simulator reader rewriter adaptiveclimb policy eviction policy still development author wish use simulator evaluation policy line deliminated format trace reader implemented supporting file use already simple trace rewriter provided simplify converting output format way author convert format support like arc format evaluate running simulator parallel,,
222,a915558ec085cb77233a4b342e883e5cb85eacfa,en Manes <ben.manes@gmail.com>, 2019-08-08 19:36:17 -0700, , improve delay calculation scheduled expiration timerwheel used new scheduler option delay next expiration event calculated scanning wheel bucket sequentially 165 total adjusted order returning first time period found missed cascade operation may occur could bring event fire earlier thus bucket next wheel peek minimum delay taken change functionality merely improves promptness new active expiration feature disabled default,,
223,0c3786fdf7f56312802f123231243d01c2a59056,en Manes <ben.manes@gmail.com>, 2019-08-06 20:23:48 -0700, , minor javadoc fix,,
224,fb89d910bc4199ef63b621bb3772d6dcf7d26045,en Manes <ben.manes@gmail.com>, 2019-08-05 22:17:58 -0700, , release 2.8,,
225,c06c5cca5c80e578495b206d03c8f76fb74f7b22,en Manes <ben.manes@gmail.com>, 2019-08-04 22:21:27 -0700, , replace multiplication shift since multiplier power two avoid relying compiler noticing perform optimization directly course jit doe realize ideally write code making assumption easy regress,,
226,2ce49a45286ecff1d5a7e967207c04e3b98a11d3,en Manes <ben.manes@gmail.com>, 2019-08-04 11:59:03 -0700, , improved javadoc cache invalidate key fix 284,,
227,6c72ccd0c538f03e51e19653bf50c00c459bfdfc,en Manes <ben.manes@gmail.com>, 2019-08-04 10:12:25 -0700, , enable checksum verification plugin,,
228,c6a4cc93d790fc36da19030579d24cfdb33c2957,en Manes <ben.manes@gmail.com>, 2019-08-03 22:11:36 -0700,335, update dependency checksum merging 335,,
229,77d86841f80e27a60aa71700d6b6b880b194c088,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2019-08-02 12:50:47 +0300, , add verification plugins dependency via dependency,,
230,9303c98de19d762cfafbbe8bf5b0279cc10330b7,en Manes <ben.manes@gmail.com>, 2019-08-03 21:48:02 -0700, , restore trace file previously proper approach store binary archive however github limit 1gb free repository owned user fork user consumes bandwidth make unattractive public repository stop working become popular unless user pay per price better store file directly git even poor practice additionally many user unfamiliar surprised need install run checked file work bandwidth restriction good central location stash e.g make build time dependency dumb letting exist git,,
231,cee7b34fd445d8b15154eb90fdecd6de68cc6e25,en Manes <ben.manes@gmail.com>, 2019-08-03 00:12:13 -0700, , fix test case scheduling next timerwheel bucket show one doe debug test tired train home broke test minimum span non empty bucket node lifetime correct may vary significantly compared neighbor due cascading effect.the global minimum tested validate correct schedule determined,,
232,5c6dd5fe37f85eede0b1486f3e5c9f6c5458aa71,en Manes <ben.manes@gmail.com>, 2019-08-02 23:29:27 -0700, , fix eclipse buildship resolving gradle 5.6,,
233,0c9b9fd7b43fcf0031b5958af11f829a26dc19d3,en Manes <ben.manes@gmail.com>, 2019-08-02 21:44:02 -0700, , improve meta inf jar metadata fix 325,,
234,e4d55348291ac97332d6ca329b4bef14730287de,en Manes <ben.manes@gmail.com>, 2019-08-02 13:31:09 -0700, , support prompt expiration via optional scheduler thread fix 195 typically cache using amortized maintenance routine periodically keep eviction policy date size replay hit evict expiration discover stale entry reference caching find key value policy algorithm cheap batch work avoid lock contention performs routine maintenance side effect normal cache operation activity cache routine maintenance triggered requires background scheduling thread generally okay memory already consumed activity may indicate low system usage cache transient data store however want trigger business logic leverage cache timing subsystem e.g using removallistener notify another component cache doe create manage thread defer work configured executor similarly schedule maintenance routine configured scheduler default disabled cache still perform maintenance periodically scheduler augments add additional liveliness scheduling based expiration time user may use cache.cleanup fixed period assist reference caching etc desired cache rate limit scheduler run reasonable pace never thrash example next expiration time tiny duration apart e.g 200ms cache run maintenance task instead ensure second delay 30ns scheduled run accounting lack real time guarantee scheduler impl similarly additional delay may occur due priority queue held best effort order scheduling variable expiration based timerwheel bucket expiration cascade event example timer 13m would schedule run would cascade 1hr bucket minute bucket next schedule would 13m followed java user prefer using rather creating dedicated thread leverage jvm wide scheduling thread primarily intended duration java method return instead,,
235,cc38ca4bfbfe5ae675f598faf2a69c0c0f2c0f24,en Manes <ben.manes@gmail.com>, 2019-07-10 20:34:30 -0700, , javadoc asmap provides atomic computation map computation powerful useful feature always fully supported concurrentmap implementation offer atomically doe caffeine extends support compute merge method added java always atomic user tend consider since characteristic well known defined noted specifically asmap feature useful abused e.g support recursive computation,,
236,cbd18cf572f30bd07ffa7656234702a1d231e292,en Manes <ben.manes@gmail.com>, 2019-07-09 11:21:34 -0700,9, fix spotbugs jmh jmhigspret error many warning include plugin maturing rapidly hope include soon without exclude reported problem http github.com diegoeliascosta spotjmhbugs issue,,
237,96edea8189c656a0579b0268135d63833d7be70d,en Manes <ben.manes@gmail.com>, 2019-07-08 21:13:52 -0700, , guava cache sync fix rawtypes http github.com google guava commit saturate longadder.sum result long.max_value overflow http github.com google guava commit authored kurt alfred kluever kak google.com,,
238,e5f3d1909fddac370521b0fef6aed05515d1ce65,en Manes <ben.manes@gmail.com>, 2019-07-04 00:55:16 -0700, , add getall manual cache fix 310 allows using capturing lambda mapping function pas contextual detail done cacheloader using request scoped provider e.g like threadlocal similar work asynccache done previously next release work found http github.com ben mane caffeine commit,,
239,aa634621c1ba082500e3e7cd4515ca9e78bd8b96,en Manes <ben.manes@gmail.com>, 2019-06-29 21:10:20 -0700,3503, guava cache sync improved overflow handling use cachebuilder avoid overflow http github.com google guava commit use subtract cachestats http github.com google guava commit http github.com google guava issue 3503 added overflow handling snapshot missing guava authored kurt alfred kluever kak google.com,,
240,1ff796054f179578f536dc2ecc2b5321438abe1d,en Manes <ben.manes@gmail.com>, 2019-06-22 14:33:33 -0700, , test maintenance fixed guava osgi test including transitive dependency reduced pressure faster test execution fixed line length exceeding 100 char enabled putall_mixed build java,,
241,c6264dad9b54eeff0193f9c6f77339d0c45f9141,en Manes <ben.manes@gmail.com>, 2019-06-19 10:29:36 -0700, , make add update race benign pretty hard hit harmful caught scanning code verified manually unfortunately way write explicit test case using debugger work imagine weighted cache weight value add hash table update hash table enqueue updatetask adder enqueues addtask write buffer add update operation complete maintenance scheduled update task run set policyweight add task run set policyweight however note node policyweight weight different field weight usually handled delta thus even though node policyweight wrong impact small due logic handle thing hit problem need two writer key different value weighted cache thrashing adder context switched adding buffer inconsistency leak,,
242,b6592fc1e79af13070cfdb6629bca327d9398bfe,en Manes <ben.manes@gmail.com>, 2019-06-05 11:21:03 -0700,317, add fast filter snia msr trace improved type checking contains lot small change accumulated locally none complex interesting therefore work split multiple commits done fix 320 adding errorprone compatiblewith annotation getifpresent invalidate take object key subtle reason therefore let developer mistakenly supply wrong parameter using errorprone warning shown snia popular repository trace file msr cambridge trace however cited trace historical snia strongly warns using included comparing paper ignored concern trace hard come adopted gradle nullaway plugin updated dependency fixed warning updated static analyzer updated jcache 1.1.1 changed cacheentryevent getoldvalue return tck fix 317 adding thomas mueller fastfilter filter library bloom filter available simulator provides good option evaluate tinylfu doorkeeper adopted filter http github.com fastfilter fastfilter_java authored thomas mueller gmail.com,,
243,4cf6d6e6a18ea2e8088f166261e5949343b0f2eb,en Manes <ben.manes@gmail.com>, 2019-04-28 18:50:21 -0700, , add getall manual asynccache 310 offer getall key invokes attached cache loader using either singular bulk implementation bulk logic promoted support getall key mappingfunction allowing lambda capture variable scope previously would passed cache loader e.g using request scoped guice provider similar work done manual synchronous cache left future commit,,
244,cf3b600cab7f3c5755c5395607433a388d3bf0dd,binyami <itamar.binyamin@intel.com>, 2019-04-22 18:16:56 +0300, , assigning ticker build builder creation fix 313,,
245,91eec88be93f16549ce82dd2f17959fd8eba75dd,en Manes <ben.manes@gmail.com>, 2019-03-05 23:22:59 -0800, , add removal cause statscounter fix 304 provides detail collector may optionally use differs previous norm collecting detail default implementation providing cachestats.here possibly future case cachestats default memory collector expected provide level granularity want detail able provide statscounter handle appropriately additional counter method added requested typically corresponding implementation built support,,
246,4a8c9690e56e24f24c194ffe9bafa60171994146,urka <fburka@noidea.de>, 2019-02-27 09:25:35 +0100, , updated link current spring documentation,,
247,2721dbfdd1f5d43add2afb858e156e3b3d6ce4e8,en Manes <ben.manes@gmail.com>, 2019-02-26 14:03:19 -0800, , use http build file fix 301,,
248,c297a29b308f1ce89bb9eb3a3d5cc151265ae33f,en Manes <ben.manes@gmail.com>, 2019-02-25 09:09:02 -0800, , add new highscalability article http blog 2019 design modern cachepart deux.html,,
249,1248aadbf7d49ccd14a6eb80cdd57d4468523615,en Manes <ben.manes@gmail.com>, 2019-02-24 13:36:39 -0800, , include adaptivity efficiency stats,,
250,2ab61f3b4acbf77f9f8e9bddf6ed9ce5c90c73c9,en Manes <ben.manes@gmail.com>, 2019-02-24 10:28:06 -0800, , release 2.7,,
251,2ba24a9d07f4e817bec18d97155c7332bdcc8985,en Manes <ben.manes@gmail.com>, 2019-02-23 20:16:39 -0800, , upgrade errorprone fix warning,,
252,801e532935dd822aab75e9625a520df7b62bb0b0,en Manes <ben.manes@gmail.com>, 2019-02-23 13:10:35 -0800, , fix async expiration race create read fix 298 future flight expiration dsabled using infinite timestamp finished callback update write called read come future done timestamp reset allowed set value could cause aba race infinite timestamp read replaced written back fix avoids using guard skip read updating,,
253,45feb12947a5e81594705cbe43a3ab75321c2362,en Manes <ben.manes@gmail.com>, 2019-02-20 11:03:51 -0800, , minor test optimization test hitting time limit due exhaustive nature brute forcing million case change avoids unnecessary churn though deeper dive needed request extend free limit using parallelgc required deterministic soft reference collection test switching test use reduces task 1.5 minute,,
254,3ade58b9a0af622c5b54f8a409eb690e5cfd0a06,en Manes <ben.manes@gmail.com>, 2019-02-19 23:28:13 -0800, , async map support fix 156 asynccache includes asmap view value allows directly working future flexibility map provides possible synchronous cache synchronous view limitation requiring existing future completes new value flight future put replace computes may flight completion future counted load success failure map operation insert future counted statistic typically future immediately obtainable fetching fail success fail cost meaningful attribute mean operation record load stats differently synchronous view topic stats fuzzy enough seems okay long provides meaningful metric fit mental model cache type used related difference future notion equality reference based cause subtle difference behavior,,
255,b752c586f7bf143f774a51a0a10593ae3b77802b,en Manes <ben.manes@gmail.com>, 2019-02-13 10:42:46 -0800, , add adaptive restart simulator hill climber make inline caffeine implementation,,
256,74d1d80b5241a2a1501d05e7abdca3b72f2a3724,en Manes <ben.manes@gmail.com>, 2019-02-13 10:21:24 -0800, , add jcache config file setting executor fix 276 continues default unless explicitly set different executor,,
257,930b1aac51c2f3d696f2401a1f5ceb905e07a1aa,en Manes <ben.manes@gmail.com>, 2019-02-12 21:24:15 -0800, , guava compatibility bulk get iteration order fixed 220,,
258,faf73706292674edaa1f68a5d70685ecb57cf130,en Manes <ben.manes@gmail.com>, 2019-02-09 12:12:40 -0800, , add test adaptive eviction fix 106 263 289,,
259,2e1db0c1e7759b50b8be94f70ab24bbc2c534d54,en Manes <ben.manes@gmail.com>, 2019-02-09 01:20:51 -0800, , setup git add corda trace,,
260,3a217b22c0801e7a97500892879ef9b10bf2b693,en Manes <ben.manes@gmail.com>, 2019-02-09 00:42:06 -0800, , fix bug adaptive policy skip observing behavior test run helped show flaw like incorrect step size due adding quota multiple time data visualization pretty neat simulator support multiple file reworked allow optionally mixing multiple format allows see adaption workload change proving algorithm robustness http docs.google.com spreadsheet edit usp sharing,,
261,c75c241a2bafcf00ebd838905b3500a79324622c,en Manes <ben.manes@gmail.com>, 2019-02-07 22:00:23 -0800, , fix setup nullaway static analyzer fix 296,,
262,263d013e86e1ba969b09f5b4072d6871697b8351,en Manes <ben.manes@gmail.com>, 2019-02-07 20:02:47 -0800, , adaptive tinylfu skip thanks user extreme case tinylfu performs poorly due recency biased workload motivated admission window capture short burst however set generally good value worked well majority trace originally saw larger value modestly improved case like arc uma oltp trace scarab gradle corda trace show much bias require larger window yet statically would hurt frequency biased trace like search analytics use hill climbing optimize admission window size done sampling hit rate adjusting setting repeating direction improved turning around initially take large step combat noise decay step size many iteration converge rather occilating around peak process restarted whenever hit rate change indicating workload may changed since user large cache amortize transfer item multiple cycle avoid penalizing thread minor change note many previously lazyset volatile field plain almost exclusively read written eviction lock unnecessary,,
263,2a7c18e168cb099c4124e4d65450ead5e18faaa3,en Manes <ben.manes@gmail.com>, 2019-02-07 09:52:54 -0800, , minor cleanup comment naming comment separator also made balanced amusingly copied typo remain early name eden replaced window name chose tinylfu updated code leaked people read code started using initial term split verbose unimportant change next commit keep focused simplicity commit contains related cleanup addition improvement affected file,,
264,55f5078d485bc14c14736a4a8d6a5e244e5b1467,en Manes <ben.manes@gmail.com>, 2019-01-01 22:30:52 -0800, , add decay rate simple hill climber simple climber effective gradient descent find good gradient equation however lack feature like momentum adaptive learning rate instead decay step size sampling rate get similar good behavior converge optimal value,,
265,79526a1a85da30149ce386d9516294788d5d5b19,en Manes <ben.manes@gmail.com>, 2018-12-31 21:53:03 -0800, , use double math gradient descent step avoid rounding error removed mayadapt hit density logic problem due old hack deal warming empty cache loopy trace okay full miss confused sgd still quirk resolve slowly getting closer correct cleaned climber friendlier future refactorings,,
266,cb04fa485993685a46129974c1137c75a3265041,en Manes <ben.manes@gmail.com>, 2018-12-30 12:41:39 -0800, , use hit density determine direction adapt advanced gradient descent algorithm work well long trace large cache small cache biased towards recency due unable grok workload due short step size however step size increased short trace slows adaption rate much particular loopy trace confused adam due sample 100 hit rate instead letting adam choose direction use hit density give region whose hit rate increase per resource given e.g region size region hit rate corrects adam let accelerate optimal configuration,,
267,2b2381b256ae1583278c5ca7bc1db1d90d07173e,en Manes <ben.manes@gmail.com>, 2018-12-28 19:47:36 -0800, , gradient descent optimizers adaptive tuning paper adaptive cache policy showed correct tinylfu performing recency biased trace default configuration window size biased towards frequency since optimal setting known beforehand sample hit rate dynamically tune better value using niave hill climbinb community advanced hill climbing also known gradient descent tuning cnn weight incorporate momentum adaptive step size bias correction discovers optimal setting faster better handle noise local optimas converges change includes sgd momentum adam nadam amsgrad popular choice attempt improve upon predecessor initial analysis extremely promising e.g recency biased trace default setting hit rate 0.6 climber optimal lru frequency biased hit rate degrade analysis required incorporating improvement caffeine upgraded gradle dependency replaced deprecated osgi plugin,,
268,bde839ff6d8edbfd97be4344ceba17fd268b47d8,en Manes <ben.manes@gmail.com>, 2018-12-13 12:51:25 -0800, , link new research paper adaptive eviction policy adaptive software cache management acm middleware 2018 http dl.acm.org citation.cfm 3274816 paper freely downloaded following link readme coming github acm authorizer service congrats ohadeytan work winning middleware 2018 best student paper award plan integrating idea work future release caffeine research source code available simulator,,
269,8f0a7563c57f9274b127f5985c661f6b0e01e0f3,en Manes <ben.manes@gmail.com>, 2018-11-12 10:04:08 -0800, , fix pmd warning,,
270,d360356c0b847a95364673fe0bd1c1378ae6ffc0,asahiro Ide <masahiro.ide@linecorp.com>, 2018-11-11 10:58:08 +0900, , fix typo,,
271,b4f195b3307acaa49e1a6d14e2c150e06756c3ea,had Eytan <OhadEy@gmail.com>, 2018-11-07 01:10:09 +0200, , clean adaptive policy merge constant extraction styling minisim hashing fix,,
272,1d7d45340476f73ca13d13bef9e7a3ddd3d58910,en Manes <ben.manes@gmail.com>, 2018-11-02 09:46:35 -0700, , clean adaptive policy merge upgrade dependency lot little change due static analyzer check,,
273,04f422fd7a1d9e8b4cb1c478b71d5f409f641376,had Eytan <ohadey@gmail.com>, 2018-11-01 18:18:22 +0200,266, merge pull request 266 ohadeytan master adaptive policy research,,
274,c105cb719518f9fdf824e1c532ab1807dc9cc780,had Eytan <OhadEy@gmail.com>, 2018-09-18 00:43:21 +0300, , styling dependency fix,,
275,4ccbc482656b96e4516828c543204c247129a296,had Eytan <OhadEy@gmail.com>, 2018-09-13 02:36:43 +0300, , add minisim version window adjustment,,
276,ecf7bc0c0328e343f8b8bd7a1ec76520c3c1c9ce,had Eytan <OhadEy@gmail.com>, 2018-09-13 02:09:44 +0300, , add indicator version sketch adaptation,,
277,65745b2168b89f245a39191cd200c3e4b89dbce0,had Eytan <OhadEy@gmail.com>, 2018-09-13 01:40:26 +0300, , rename climber sketch,,
278,d67eee8190b72a12c3995eb96987e5fcfe257405,had Eytan <OhadEy@gmail.com>, 2018-09-13 01:00:43 +0300, , add climber version frd policy,,
279,d4944cf115f67ad4244e5e204bade603d23138b6,had Eytan <OhadEy@gmail.com>, 2018-09-13 00:52:28 +0300, , add indicator version frd policy,,
280,439e7e44e4442b30de2fb948de87887d891a170a,had Eytan <OhadEy@gmail.com>, 2018-09-13 00:23:08 +0300, , adjust window according indicator policy,,
281,f107fbc8b93883ec5513916c6c7fb5a819e6b498,had Eytan <OhadEy@gmail.com>, 2018-08-27 00:53:20 +0300, , fix climber configuration parsing,,
282,29389bef6351bad4b60e8d432a5d1cb208d2db52,ilab <qilab@gmx.com>, 2018-07-18 18:03:09 +0900, , fix error message,,
283,e8ff6d3261e7f5666d2b486352cc04b2874d70ed,en Manes <ben.manes@gmail.com>, 2018-06-24 13:23:26 -0700, , reschedule async maintenance immediately pending work remains 225,,
284,d55406996dd64a5e987225b2d5e4fcd458d2c5f1,had Eytan <OhadEy@gmail.com>, 2018-06-10 11:09:32 +0300, , removed reference.conf fix 250,,
285,27a87b49d0e02fbdf0a8f25933d4742462eb8370,en Manes <ben.manes@gmail.com>, 2018-05-31 21:54:20 -0700, , sync guava test http github.com google guava commit,,
286,2e6d32844e033399e63e42c88e0ea8b587879af3,en Manes <ben.manes@gmail.com>, 2018-05-30 22:07:27 -0700, , jsr 305 migration fix 242 migrate removed usage nonnegative prior commit nonnegative add generic type nonnull excessively verbose,,
287,5851960f38b4431891a185b5105affbf1ec4228f,en Manes <ben.manes@gmail.com>, 2018-05-29 22:27:29 -0700, , migrate jsr 305 annotation errorprone fix 242,,
288,b8e6867709520142be87f72504920b20a63674ee,en Manes <ben.manes@gmail.com>, 2018-05-26 22:09:13 -0700, , introducing asynccache split fix 246,,
289,94337ab04e22e831d55bac71bdff1e88b8d7301f,en Manes <ben.manes@gmail.com>, 2018-05-12 18:52:36 -0700, , fix getifpresent record miss value collected,,
290,c9d9f36ee503a0f9304e33b45328a75005ab7b25,en Manes <ben.manes@gmail.com>, 2018-05-12 12:55:09 -0700, , fix flaky test enforcing random seed would fail spuriously async cache random seed set known value causing different entry evicted handle synchronous asynchronous cache wrapper underlying bounded map,,
291,a595c2c47a75344316e6c905fcdb058d60590ab5,en Manes <ben.manes@gmail.com>, 2018-05-11 01:39:34 -0700, , added compute time benchmark based trace goal benchmark simulate performance benefit switching algorithm fixed workload hit rate increase one would expect see execution time decrease cost miss however eviction policy overhead outweighs workload cost optimization worthwhile therefore goal show improvement advanced algorithm outweigh cost example lru extremely cheap execute small penalty tinylfu added increase hit rate workload like arc ds1 trace database clear cut introduced new policy expensive operate feasible practice expected used microbenchmark performance tune rather indicator whether technique mini sim sampling feasible practice,,
292,7ace6c4085ef6246877f3ebbe157233ca196446d,en Manes <ben.manes@gmail.com>, 2018-05-09 09:12:20 -0700, , fix improper recording stats fix 240,,
293,689b72607e9639261c21fb39cfc2072ee3e741d9,eventov <leventov@ya.ru>, 2018-05-01 16:39:07 +0300, , specify statscounter event recorded precisely,,
294,916407ea56bbb19567640da7b79ac27104bd45be,en Manes <ben.manes@gmail.com>, 2018-04-26 21:17:09 -0700, , prefer counter dropwizard example fix 235 upgrade,,
295,c02c623aedded8174030596989769c2fecb82fe4,en Manes <ben.manes@gmail.com>, 2018-04-07 21:20:56 -0700,2334, remove ehcache2 incompatible ehcache3 v3.5 ehcache3 classpath incompatibility ehcache2 due embedding statistic package package name due api incompatibility disinterest allowing coexist forced choose one since ehcache3 supported preferred version developer compare going forward detail see http github.com ehcache ehcache3 issue 2334,,
296,5c538dde79ebdbd521b16663b56eb792bbf11bbf,en Manes <ben.manes@gmail.com>, 2018-04-04 11:39:13 -0700, , sync guava java.time usage thanks kluever,,
297,06d572c076db797ea8d798c000ee989b7a408b85,en Manes <ben.manes@gmail.com>, 2018-02-21 19:19:52 -0800, , release 2.6.2,,
298,111925379d39a82eff0b942891cac674dd157f3c,en Manes <ben.manes@gmail.com>, 2018-02-20 23:35:51 -0800, , fix variable expiration overflowing maximum duration fix 217 duration set maximum length long.max_value nanosecond calcuation expirationtime currenttime may overflow negative occur thread calculates timestamps may occur across thread expirationtime concurrently updated using later base time reading currenttime occur whenever maintenance work triggered sweep expired entry user thread access entry later timestamp plus maximum duration result overflow causing remaining time negative therefore cause cache expire entry internal maximum capped long.max_value 150 year give broad safety net avoid concurrency inducing overflow normal code,,
299,20d9e0cfab5a8dde64e9e7f96a344f4c77a6d410,en Manes <ben.manes@gmail.com>, 2018-02-19 20:26:22 -0800, , prefer reflection method handle due memory leak fix 222 see jdk 8174749,,
300,f8cc328885bf38ba464d7feffd454cbe9e44c933,en Manes <ben.manes@gmail.com>, 2018-02-19 19:48:08 -0800, , improved guava compatibility wrt iteration order fix 220,,
301,b9bcc7f37e1cb5d585de0fbc284646782a6061cb,en Manes <ben.manes@gmail.com>, 2018-02-12 22:12:46 -0800, , promote usage java.time low level policy api fix 221,,
302,f585bdb684cfcee38e981602f0318ed148527398,en Manes <ben.manes@gmail.com>, 2018-02-12 09:56:50 -0800, , add java.time expiration refresh builder method see 221,,
303,27dfec3f1226631aed065bfe086dcf1526582ab3,en Manes <ben.manes@gmail.com>, 2018-02-06 11:19:24 -0800, , fix weighted slru demotion decrementing region size protected space size decremented promoted entry weight rather demoted entry entry weight e.g maximumsize cache still evict overall capacity reached caused wrong accounting test evictiontest evict_weighted known fail though seemed flaky assumption due randomness seed though recently making stable seemed fix reappeared yesterday mistake discovered working adaptive policy fortunate coincidence since failure difficult trigger hopefully seeing test case fail mean fixed,,
304,e84866fd6ad5bf9ab8c5a798df63b6f31f5e684a,ames Baker <j.baker@outlook.com>, 2018-02-02 23:07:10 +0000, , update default size,,
305,5a91bbe1dac1810d329c22d7ac914a76966b3b32,ames Baker <j.baker@outlook.com>, 2018-02-02 22:24:18 +0000, , change caffeine default cache size caffeine hood way work number bin bin contain node contain pair compute computeifabsent look bin node doe exist put placeholder bin compute put value doe exist lock bin whatever check need put value necessary unlock done grow map necessary generally increasing power caffeine default map size case created table cheap drawback caffeine starting bucket issue computeifabsent call synchronizes every computeifabsent call currently progress bigger problem compute function expensive pathological case key ending one bucket linearize end either linked list red black tree expected one would anticipate compensate indeed immediately try however order transfer node new table far read join synchronization bandwagon currently trying add data node eventually transfer able happen although suppose synchronization unfair case transfer complete mean get pretty brutal throughput characteristic dump load contention onto caffeine cache warmup period example 1000 thread try concurrently hammer caffeine loading cache sleeping 100ms loading function get throughput roughly writes second eventually grow take long time case ended something approaching deadlock low capacity cache think almost empty historical input received concurrently small number unexpectedly expensive request took say minute general system easily able deal request cache deduplicates request query could take long however case caused enter death spiral locked bucket stopped far cheaper request served compensate presizes cache element something like 256 additional byte memory cache created pretty much remove pathological case hope make sense may misunderstood stuff though,,
306,7c0e23508c66bbf376892a0945decd8ee8813862,en Manes <ben.manes@gmail.com>, 2018-01-29 09:24:13 -0800, , optimize generated code deploying artifact generated code recompiled remove debug symbol order reduce jar size invalidates compilejava task causing next build work change restricts optimization run uploadarchives executed used snapshot release deployment,,
307,c5ad64a6e100eff30c029d74b927e1894fe9478d,had Eytan <OhadEy@gmail.com>, 2018-01-29 11:12:39 +0200, , minor fix frd policy,,
308,d3624f30d7abb097797de338d703b5d9912b27cb,en Manes <ben.manes@gmail.com>, 2018-01-20 13:39:07 -0800, , clarify builder exception combining incompatible feature http question 48356731,,
309,5e310f2427fcdd46d718bd0c9ff7d5e3c81e4d10,en Manes <ben.manes@gmail.com>, 2018-01-13 21:42:57 -0800, , static analysis update,,
310,6cefa5d8942f9d02146c77965a70ed766f8e8dc0,en Manes <ben.manes@gmail.com>, 2018-01-01 01:53:06 -0800, , add nullaway extensive static analysis nullaway addition errorprone perform robust data flow analysis possible npes inferrence requires richer usage defacto null checking annotation defaulting non null expectation due limitation data flow false positive requires slightly verbose code suppression possible suppression isolated individual statement minimize scope,,
311,ace16b76481b879d3629e23d45b4177f2e9629b4,en Manes <ben.manes@gmail.com>, 2017-12-28 23:16:46 -0800, , add filtering based buffer cache policy simulator,,
312,b6132f54f8064cd6dddb8411545ef625a2a6dd5c,en Manes <ben.manes@gmail.com>, 2017-12-27 18:27:31 -0800, , release 2.6.1,,
313,303670ba1480adb2bcd9f76f808145272ec0299e,en Manes <ben.manes@gmail.com>, 2017-12-27 18:01:26 -0800, , fix javadoc link,,
314,3f06fc12cd46048547bf545aee02e7ee1fc989d8,en Manes <ben.manes@gmail.com>, 2017-12-27 13:15:14 -0800, , remove simulator split package jigsaw modularity countmin64 implementation provided addthis streamlib required modifying package private state tinylfu reset operation done using package name field access break jdk9 modularity restriction countmin64 slimmed fork original code bloomfilter option removed since others provided dependency could removed javadoc retains attribution,,
315,e785458b66e8d765e2026d296b8c567516cf2963,en Manes <ben.manes@gmail.com>, 2017-12-27 01:11:26 -0800, , upgrade pmd 6.0 enable optional errorprone check,,
316,78e97fcbea0566a300919d2eb706787c4c23bc8d,en Manes <ben.manes@gmail.com>, 2017-12-25 19:50:26 -0800, , jcache cache.invoke doe update entry initial load fix 210,,
317,4c670e5acd2688c7e63057edc62a9fb20f458138,en Dombeck <kdombeck@gmail.com>, 2017-12-12 13:20:02 -0600, , add test case showing issue updating doe occur jcache cache.invoke,,
318,b3e541214c268b268b4a7ea2f8fb85f5ac349d78,en Manes <ben.manes@gmail.com>, 2017-12-21 09:01:04 -0800,203, jcache 1.1 automatic module name potential fix pass tck test backwards incompatible 1.0. osgi test enabled jsr107 includes binding added jigsaw module name fix 211 java module work towards clean java library unsafe pending released version 3.0 ready stricter expiration check 212. previously stale read current time used perceived benign avoid excessive expensive call system clock might unintentionally resulted expiring future properly replaces unnecessary jdk rentrant one 203 deadlock occurs though reproducable likely due known scary linux kernel bug older version improvement state management also mean lock extremely cheap gain slimmer version detectable,,
319,c38afe2131ac51eca449ec7ec33f8049a8e48a62,en Manes <ben.manes@gmail.com>, 2017-12-11 15:55:58 -0800, , tinylfu paper published acm transaction storage long two year process pre print finalized paper major difference clarity fixed incorrect chart oltp accidentally tinylfu lfu much worse reported tinylfu lru appendix reviewer link acm authorizer service comply copyright requirement work project page work copied elsewhere,,
320,675aa3ebfcc54cb08c1a9f2eb8c692f4e7ac1c9a,en Manes <ben.manes@gmail.com>, 2017-11-24 17:31:50 -0800, , propograte null value completed future fix 206 store future cache value completed successfully null result entry properly discarded null result could propogated callback evaluator weigher removal listener expiry null handling tested various implementation check parameter returning fake response,,
321,1f8ddd3773da0b97412bf4147b0d91832efc1e5f,en Manes <ben.manes@gmail.com>, 2017-11-22 20:42:13 -0800, , wait future outside computation async asmap sync view synchronous asmap view block existing flight future performing computation block computation key eviction remove entry future cache write recursion may hit live lock instead entry future retreived blocked outside computation validated instance inside block mapping function executed else entire operation retried,,
322,a8640ef3a8040f76b6bf4f1973204affa9fa5058,en Manes <ben.manes@gmail.com>, 2017-11-06 17:44:57 -0800, , add javadoc generated type,,
323,a6e463d355852b01064a829b417f94ce276a9123,en Manes <ben.manes@gmail.com>, 2017-11-06 10:51:34 -0800, , make generated type package private suppress warning,,
324,db43053269d3be055101ac596fb97e2c486d7db4,ulian Vassev <jvassev@vmware.com>, 2017-11-06 11:46:50 +0200, , generate top level class node factory nested every method class field descriptor carry enclosing class name sign also slightly shorter name using french word avoid name collision,,
325,8699c96733c1a12ed8fb3a9c81ac99e17f993e6c,en Manes <ben.manes@gmail.com>, 2017-11-05 11:51:37 -0800, , fix pmd warning generated code,,
326,2a4c5f6a1e80f9935a0887101f3b23f5890a1889,en Manes <ben.manes@gmail.com>, 2017-11-04 22:34:09 -0700, , use method handle instead reflection,,
327,bb6198a0c3aa276c76be4f98406f4965398f81d5,en Manes <ben.manes@gmail.com>, 2017-11-04 21:37:08 -0700, , remove shadowing making nodefactory typed,,
328,bda189891f08d012a669670adb0057578d7b70dc,ulian Vassev <jvassev@vmware.com>, 2017-11-04 10:12:37 +0200, , make node factory patch refactors node also factory self save 90k zero field field inits half much anonymous class jar size reduce 700k nodefactory iterface default method factory singleton anymore,,
329,d19d07c2f98e7d1378cac923d8de7c77d0f63c71,en Manes <ben.manes@gmail.com>, 2017-11-02 14:25:34 -0700, , code generator cleanup,,
330,86ec6a9e1c6b3e41d2bff4ffcecc3755799070b1,ulian Vassev <jvassev@vmware.com>, 2017-11-02 19:14:37 +0200, , replace switch reflection generated code patch expands suggestion http github.com ben mane caffeine issue 110 issuecomment 238676087 instead proposed numeric code name factory used classname instantiate using reflection reduces class size 21k bringing jar size 786k,,
331,992a03579e141092dc05a04c120379491a8c6563,ulian Vassev <jvassev@vmware.com>, 2017-11-01 16:22:15 +0200, , compile generated class withoug debug info,,
332,c623aa3e90fd13a208b5c4cf9277e9d78b45b231,en Manes <ben.manes@gmail.com>, 2017-11-01 01:39:16 -0700, , release 2.6.0,,
333,6be13d692041106e51656dc524c52a2bfd68a76e,en Manes <ben.manes@gmail.com>, 2017-10-31 21:33:31 -0700, , fix jcache 1.1 preview except 1.0 tck breaking change preview jcache 1.1 made available review update includes javadoc fix spec correction additional test fix incorrect test 1.1 tck compatible 1.0 tck test assert opposite behavior relaxing type throw exception changing statistic putifabsent since 1.1 preview maintain 1.0 compatibility acceptable fix uncovered later tck particular specification requires loader writer expiry listener closed implement closable javadoc tck making easy overlook http jcp.org aboutjava maintenance jsr107 107mr1 summary.html,,
334,74a3dc3e78956b46f098971a93d82d1d82ee60f9,en Manes <ben.manes@gmail.com>, 2017-10-31 09:55:50 -0700, , fix javadoc,,
335,170d047f8474bfcdb907e639fb6ea0beda9a8062,en Manes <ben.manes@gmail.com>, 2017-10-31 01:11:44 -0700, , prefer advertising camel caffeine internal usage,,
336,ed5b702a5699680a9ef24e515ba4a4dc5c605a3a,en Manes <ben.manes@gmail.com>, 2017-10-30 23:56:37 -0700, , support putting mapping variable expiration fix 163 policy specific extension ignore configured expiry add mapping supplied duration better support custom cache apis expose often due abstracting memcached expiry must configured handle computation new put duration unit ignore write successful,,
337,66764adfab9861cefc9b92a62072cb4ef3cce087,en Manes <ben.manes@gmail.com>, 2017-10-30 16:48:42 -0700, , read current time computation fix 191 previously current time read beginning computation used determine entry expired computed associated timestamp long computation short expiration time could result newly computed entry expired chain computation would build timestamps older last due waiting predecessor ticker read computation completes timestamps set mean two read computation happy path cache hit note obtaining time expensive operation minimizing useful high load updated dependency fixed issue discovered spotbugs errorprone,,
338,78be027a7e89e750e3a1cc27584d7a8224d164bf,en Dombeck <kdombeck@gmail.com>, 2017-10-25 09:45:02 -0500, , allow configuration max size exiry simultaneously jcache,,
339,5473cab8afb17ec7aa288b57d74d81de6372351e,en Manes <ben.manes@gmail.com>, 2017-10-08 12:46:30 -0700, , fix jdk9 build,,
340,3116a8b3b0daaa34fd9f153e1dfc37087aa594f9,en Manes <ben.manes@gmail.com>, 2017-10-07 19:48:45 -0700, , fix javadoc badge updated dependency javadoc.io supply badge old host unmaintained went,,
341,6966668985bef7c698df8071b0631d768e271e29,en Manes <ben.manes@gmail.com>, 2017-09-22 17:10:52 -0700, , release 2.5.6,,
342,61008d9ca7fcc63d4a48c6a2d0a4c9dd84792fec,en Manes <ben.manes@gmail.com>, 2017-09-22 13:25:31 -0700, , disable statistic tcache jmh benchmark 185,,
343,ac004742def520b24fcf4daca9fbda30338c75d1,en Manes <ben.manes@gmail.com>, 2017-09-19 23:07:00 -0700, , fix jcache invoke triggering load expired entry fix 187,,
344,5c77faed337a2ea381efbc7e20faedc1bd8436b9,en Manes <ben.manes@gmail.com>, 2017-09-15 09:31:54 -0700, , fix jmh benchmark configuration fix 185,,
345,cb87b0f2bdc32a80559b9940d35cffbbaf130952,en Dombeck <kdombeck@gmail.com>, 2017-08-31 15:58:35 -0500, , allow unwrapping jcache cache native caffeine cache,,
346,582d3a00d2a90ebf01165bc665d68cb3ec68e0d8,en Manes <ben.manes@gmail.com>, 2017-08-30 12:15:28 -0700, , force error prone compiler version reproducable build default error prone plugin dynamic version upgrade dependency static analyzer break add new bug pattern build broken fine development mean release tag reproducable instead version fixed upgraded using report task like dependency allows master build downgrading see http github.com google error prone issue 733,,
347,908faa00ceb4953c5481828fef8777be0d6696dd,en Manes <ben.manes@gmail.com>, 2017-08-16 14:17:34 -0700, , release 2.5.5,,
348,9eeb53829140d98af8aa1f2a6263b7fac7516978,en Manes <ben.manes@gmail.com>, 2017-08-16 13:55:28 -0700, , clarify method javadoc match class documentation,,
349,6e61ee5b6ccbab6794146ee329e9fef807ce6042,en Manes <ben.manes@gmail.com>, 2017-08-14 21:56:45 -0700, , fix null mapping caused jdk 8186171 fix 176 getall getallpresent called duplicate key discarded lookup performed previously done building mapping sentinel value iterating entry performing load setting value removing accordingly approach avoided garbage unique key set let hashmap perform faster set remove operation unfortunately broken jdk8 bucket treeified due collision untreeified removal caused link chain rebuilt entry decoupled map sentinel value leaked result set given user used null convenience regression jdk7 bug obvious slightly efficient version implemented key stored copied hashset map populated value exists similar performance practice http browse jdk 8186171,,
350,4fb6cb3e8c25f74b474036617f10a9f34e334188,en Manes <ben.manes@gmail.com>, 2017-08-11 22:32:07 -0700, , added hyperbolic sampling policy simulator http www.usenix.org system file conference atc17 atc17 blankstein.pdf,,
351,707ad07b904986e3b74f7ab56ce38829ebfecc46,en Manes <ben.manes@gmail.com>, 2017-08-04 15:23:46 -0700, , release 2.5.4,,
352,26a98384f45e3b44277d5c3a03ecc4b21d5e1954,en Manes <ben.manes@gmail.com>, 2017-08-04 11:23:19 -0700, , refresh automatically waiting slow reload fixed 175 load time exceeded time new refresh triggered previous ignored due write timestamp used set current time delay expiration refresh refresh completes new value writes occurred stomp explicit writes reload stale read slow reload meant last refresh would honored may occur long time busy system also remove sync async difference never remembered place async problem due timestamp pushed distant future since recall special cased kept hoping previous smarter current seems pretty dumb,,
353,6ccd359fe45efc1e69f049f0465e0c146864b475,en Manes <ben.manes@gmail.com>, 2017-07-15 21:44:12 -0700, , setup sonarqube analysis http sonarcloud.io organization caffeine,,
354,e6fa7eb5bf241ef0d533983d7bbd3c35a8d6e272,en Manes <ben.manes@gmail.com>, 2017-07-08 21:40:08 -0700, , release 2.5.3,,
355,9bf94d413cc04d82c0ded357728a5d0fb7d2cb72,en Manes <ben.manes@gmail.com>, 2017-07-07 12:36:29 -0700, , fix travisci build due exceeding minute time limit support team kind extending minute merging slow test job fuller code coverage report moving instance container beefer machine hung guava test block indefinitely since switched test use pool instead new thread thread starvation meant progress could made reverted hoc thread added timeout awaits,,
356,05e7f64cc8b02cf355c913f43acc6163fe797e2c,en Manes <ben.manes@gmail.com>, 2017-07-05 00:42:33 -0700, , fix weak key held strongly weak soft value reference fix 167 code generated constructor weak key weak soft value node accidentally caused memory leak strong reference key passed value reference use look entry map eviction obtained reference queue map key actually weak reference lookup would fail since strong key used weak key collection could never occur causing entry never evict due reference collection generator fixed value reference hold weak key reference expected class unit test updated ensure scenario properly covered,,
357,e177d5d91a94e39334175e5ba941314ef8269255,en Manes <ben.manes@gmail.com>, 2017-07-04 18:25:54 -0700, , improved default layering rule jcache configuration fix 171 previously default honored resource configured cache explicit cache configuration via cachemanager createcache use default non jsr setting made default poorly named template used resource configuration used case well reduces surprise nice benefit anonymous cache created annotation stuck jsr default unbounded serialized safe threshold set default avoid memory leak etc restricted cachemanager createcache overriding externalized configuration cache lazily loaded destroyed creating defined cache could forced setting caused confusion layering e.g would explicit layer externalized added missing key type value type configuration setting getting cache name type,,
358,6c484c3b4c769a7335776ec0bf5366f23d5d0273,en Manes <ben.manes@gmail.com>, 2017-07-04 13:45:30 -0700, , honor unsetting jcache configuration value maximum size test value default configuration set cache unsets value null merged result default honor desired behavior additional inspection needed different configuration layer added unit test assert maximum size eviction honored removal notification published simpler test executor configuration option disable async processing uncovered custom weigher expiry given unwrapped value would cause delegated properly,,
359,4119f9c026d8ebb5bf59d9005b4c08428b0e9189,ick Robison <nick@nickrobison.com>, 2017-07-03 12:52:06 -0700, , fix thrown event type,,
360,3f8054d16842478de3139780bda339e04e5ed770,en Manes <ben.manes@gmail.com>, 2017-07-03 12:16:39 -0700, , fix build latest error prone release fix 169,,
361,c450502c5b38389c0ce76c91fd151813ca38b9db,en Manes <ben.manes@gmail.com>, 2017-06-26 00:24:29 -0700, , update gradle compatible jmh plugin,,
362,a4b72689186ae3ceb098521148bbdad9519b13ad,en Manes <ben.manes@gmail.com>, 2017-06-24 19:27:54 -0700, , upgrade gradle switched findbugs spotbugs successor dropped huntbugs unmaintained alternative plugin causing deprecation warning updated snakecase usage camelcase match gradle style jmh supposedly compatible seems fail futher investigation needed,,
363,89e6487686eb3bc0b43dae5b0151db034cc6a1a3,en Manes <ben.manes@gmail.com>, 2017-05-28 21:26:03 -0700, , release 2.5.2,,
364,eb44628f9b59d2f786f697b57da304be3d52170b,en Manes <ben.manes@gmail.com>, 2017-05-28 16:47:04 -0700, , fix variable expiration async cache fix 159 flight future mistakenly given maximum expiry allowed causing honor expire create setting instead supposed beyond maximum signal adaption completion update calculation fixed expiration made robust time rolling complies system.nanotime warning strengthened remove replace operation predictably linearizable removed optimization avoid unnecessary work checking entry present lock free manner since hash table supresses load complete might mean call remove loading entry performed contract allows either optimization left user code give preference need linearizable behavior see 156,,
365,abf9adddf2bda6344a6547edd60b32985f677f10,en Manes <ben.manes@gmail.com>, 2017-05-21 23:28:19 -0700, , release 2.5.1,,
366,1d6fa59c78ad002cef0052331af22015691bf630,en Manes <ben.manes@gmail.com>, 2017-05-20 11:56:18 -0700, , fix calculation jcache access expiration fix 158 entry eternal access current time set duration unit nanosecond instead millisecond jcache expiration time sometimes assumed wall clock behavior nanotime writes still magic value removed jcache rewrite use caffeine variable expiration improved documentation expiry unfortunately would probably best currenttime parameter provided free already obtained ticker default nanotime wall clock value main use case parameter would calculate external resource timestamp must done wall clock resolution focus implementation detail writing doc late meant api gaffe overlooked resulting hinting towards error prone usage,,
367,00ff445bf710c83df7f14b748d0043dfd2e9ae68,en Manes <ben.manes@gmail.com>, 2017-05-11 02:02:04 -0700, , intellij static analysis cleanup intellij seems import quirk reduces seems still get confused edits forget sibling module complains import class eclipse lot smarter resolved intellij compilation issue degrading raw type even though javac happy ran static analyzer fixed issue could somewhat justified dead code removal hopefully make project little friendlier want hack ide,,
368,e851a8309b073edf2b4c9175d0dfb49d90d4e7a4,en Manes <ben.manes@gmail.com>, 2017-05-10 13:51:16 -0700, , minor touchups fixed one nanosecond match verfied negative effect resulted scanning first bucket twice correctness expected performance change,,
369,dd33b1b53afe4215f0795b9826df8b357cd69a14,en Manes <ben.manes@gmail.com>, 2017-05-07 22:41:05 -0700, , release 2.5.0,,
370,70bae5de1bc627a90efdf3425495b9afcdee8799,en Manes <ben.manes@gmail.com>, 2017-05-07 22:29:02 -0700, , prepare release,,
371,1cc9eb0564604177e881c2fce4979975624e4cf9,en Manes <ben.manes@gmail.com>, 2017-05-07 21:43:26 -0700, , integrate variable expiration jcache jcache expiration policy unfortunately difference api requirement retain existing functionality mean two merged yet setting currently allow using variable fixed expiration together spec author assumed maximum size would also enabled thereby evicting expired entry lazily since exposed caffeine eager policy fixed two could used together caffeine new variable policy doe allow combination fixed variable core library thus lazy expiration mapped directly caffeine version retain previous combination could adapt fixed setting used supply eternal policy lazy logic adapter eager logic unfortunately api difference make difficult example jcache putifabsent doe return value failing therefore read caffeine doe result tck failure expiry policy call verified possible solution would use threadlocal signal case expiry call ignored add brittleness already complex adapter instead perhaps remove lazy fixed setting simplify adapter use threadlocal trick correct edge case given major jcache implementors lazy expect maximum jcache expirypolicy neutered providing key value think hacky solution worth effort user use caffeine expiry need eager behavior,,
372,fc572495c141b7fa4e3ce1b500a51290757afc57,en Manes <ben.manes@gmail.com>, 2017-05-07 14:46:49 -0700, , variable expiration unit test,,
373,be754c5faa8de0676677dcdea8153318461b95bd,en Manes <ben.manes@gmail.com>, 2017-05-05 01:42:09 -0700, , added ability inspect variable expiration policy supporting snapshot view entry expiration order required adding overflow bucket previously overflow scheduled furthest away bucket meant order could exact traversing note order within bucket computed view best guess,,
374,216dee74dfeba32aa40db157a433fc8225abd550,en Manes <ben.manes@gmail.com>, 2017-05-02 22:33:59 -0700, , variable expiration unit test expiration time set writer called evaluation done prior exception thrown expiry must occur writer notified operation rolled back entry expiration time set writer exception doe extend entry lifetime stub inspection interface defined yet implemented unit test added though needed feature,,
375,d69fb0c8597cf4b7216c1d102d10f30339a79658,en Manes <ben.manes@gmail.com>, 2017-05-01 12:16:47 -0700, , add timer wheel data integrity check validation aspect,,
376,c076d2b617f10528cb3508f8ec2dd8e3904fe10b,en Manes <ben.manes@gmail.com>, 2017-04-30 16:43:49 -0700, , variable expiration support fix 141 expiration time customized per entry basis allow expire different rate acheived time using timer wheel evaluating using new expiry interface setting combined incompatible fixed expiration type test suite updated incorporate new configuration option still remaining work released new test specific feature exceptional condition yet written incorporate data integrity check timer wheel validation listener inspection cache.policy jcache integration documentation,,
377,6e6541bab80931a3305d613b258a3835caaa4ce8,had Eytan <OhadEy@gmail.com>, 2017-04-26 12:36:41 +0300, , fix ohc gradle dependency,,
378,f9e3e6240464d97183a73040bf82fb88d64abb2c,en Manes <ben.manes@gmail.com>, 2017-04-16 22:46:35 -0700, , integrate variable expiration cache call create update atomic respect read racy evaluation order cachewriter etc reviewed tolerating user throwing exception expiry may desirable change helper method return timestamp instead set set done later safe position updating akka dependency simulator required migrating new apis remaining task review exception case add var expiration cachespec current test case add var expiration test case migrate jcache use native var expiry explore var expiry policy interface cache.policy inspection,,
379,1506b5a500adb701f8b59a0c46f4cbc666c7ebd2,en Manes <ben.manes@gmail.com>, 2017-04-16 14:25:18 -0700, , intermediate work towards variable expiration remaining step call expiry every read write update serialization add cache test,,
380,05264e00beecce4fbff757ab50790918c02db09e,en Manes <ben.manes@gmail.com>, 2017-04-11 18:31:53 -0700, , scaffolding variable expiration piggyback access expiration node cache code generated type,,
381,594cf59f1b8af83e48ef0807e5c212643d8207d8,en Manes <ben.manes@gmail.com>, 2017-04-07 23:10:28 -0700, , fix scheduling bug timer wheel wrong mask inserting overflowing last bucket corrupted linked list cascading entry due stale ref added basic benchmark optimize,,
382,26a45c601c908771c873e9e463d873cf0c9c121a,en Manes <ben.manes@gmail.com>, 2017-04-04 09:14:42 -0700, , use large sample pivot hill climber small sample reactive amortizes movement shifting entry list also suffers noise large sample doe noise shift many entry reconfiguring change config favor approach since provides better hit rate probably make movement penalty amortized spreading sample period,,
383,0ad8ebd21f3c7ae6c2646fcc19454b225fb1d221,en Manes <ben.manes@gmail.com>, 2017-04-04 00:04:04 -0700, , add gradle build cache simulator day trace gradle distributed build cache may server see client cache absorb request would explain lru fifo random near optimal lfu poor thanks gradle team extracting log,,
384,99004280426e7a144e764964af24a1bb790ca2e4,mihajlovski <nikolce.mihajlovski@gmail.com>, 2017-04-03 19:41:46 +0200, , including rapidoid cache benchmark,,
385,56aa693b03ac343df02bc084e4fb259b68377dc4,en Manes <ben.manes@gmail.com>, 2017-04-02 22:34:25 -0700, , update usage,,
386,1bd58276b46d0605c978a8157d96e49c206692a9,en Manes <ben.manes@gmail.com>, 2017-04-02 19:05:34 -0700, , expiry interface touch ups current duration provided avoid implementor calculate wanting change expiration time,,
387,8076b12ad402cff5f656ae09efa46c0d0b1cf858,en Manes <ben.manes@gmail.com>, 2017-04-01 19:08:20 -0700, , prototype hierarchical timer wheel timer wheel allows timer added removed fired amortized time instead using priority queue timer assigned bucket hashing wheel represents resolution e.g second minute hour structured hierarchy wheel rotate event cascade higher level lower bucket timer evaluated either cascaded fired amortizes cost cascading done small batch serf foundation variable expiration entry short lived others long lived custom policy defined user timer wheel operated cache maintenance cycle work progress show general idea going,,
388,f6c6568187ff9a691cbe8c059e2e1abf3be61bf2,en Manes <ben.manes@gmail.com>, 2017-03-21 18:04:57 -0700, , stabilize guava test due internal randomness guava test probably choses key hashed different segment relied lru ordering caffeine segmented lru randomness protect hashdos attack test assume key present operation,,
389,f010484ebbbdeef99a38e7693dd1b384939645ce,en Manes <ben.manes@gmail.com>, 2017-03-21 13:30:12 -0700, , reapply cleanup gil adaptive tinylfu sure lost gil merge make code consistent style convention,,
390,7a5b3f112e8f5f71821471da4eddd91d8e52ea36,il <Gil.einziger@nokia.com>, 2017-03-21 08:23:37 +0200, , fixed potential overflow due new step concept,,
391,9cab00e54b0dc75ad525c5e246a3e1442366a488,en Manes <ben.manes@gmail.com>, 2017-03-20 15:44:39 -0700, , fixed gil adaptive tinylfu commit note change countmin4 incrementat include step amount appears incorrect could cause overflow affect counter e.g however quick fix hurt adaptive sketch hit rate changing gil take look,,
392,fca6bbf937f86fb6b1eaeb9fb299f4bafd64684b,?Ã?Ã? ÃÂÃ?ÃÂ ÃÂ¦Ã?Ã?ÃÂ¨ <Ã?Ã?Ã? ÃÂÃ?ÃÂ ÃÂ¦Ã?Ã?ÃÂ¨>, 2017-03-20 23:14:07 +0200, , adaptive reset commit,,
393,d281e4fc9286a5370e65b6610b79ab2b167bb56e,×× ××× ×¦×××¨ <××× ××× ×¦×××¨>, 2017-03-20 23:14:07 +0200, , adaptive reset commit,,
394,a1672e68c9a767aee6477da6b039e0878e5f9f11,en Manes <ben.manes@gmail.com>, 2017-03-19 17:44:55 -0700, , add expiringmap simulator benchmark,,
395,337c85f9a02fb45169a7c203dcabd849eb17904e,en Manes <ben.manes@gmail.com>, 2017-03-03 11:40:18 -0800, , upgrade pmd resolve new rule violation,,
396,64096c02055f025c3d85ba2cb6162599ec96eb8a,en Manes <ben.manes@gmail.com>, 2017-02-22 09:09:32 -0800, , restore eviction optimization eviction fails due concurrent removal victim discarded eagerly may avoid extra eviction otherwise removaltask run next maintenance cycle lost fixing bug tiny rare optimization,,
397,654b1d2bdf5c65d28e4e7d44c3d4cde644b7456d,en Manes <ben.manes@gmail.com>, 2017-02-19 01:31:52 -0800, , scope test proper group may cause timeouts run expensive test test task,,
398,a2912fb937d4fec83917e7306951767a43458199,en Manes <ben.manes@gmail.com>, 2017-02-18 22:58:44 -0800, , release 2.4.0,,
399,9a1b77345bd2a00b17b2db789879f7c88f94e33f,en Manes <ben.manes@gmail.com>, 2017-02-18 22:23:07 -0800, , prepare release,,
400,166f89037909d2134526050585a45e561abb20b3,en Manes <ben.manes@gmail.com>, 2017-02-18 21:07:30 -0800, , fix stale notification clear raced update similar 83b47d1 clear guard concurrent update ensure notification given stale value version solr test case demonstrated bug occuring change resolve added two unit test rely synchronization demonstrate ordered blocking latest value notified depends change used generic sanity test like solr,,
401,83b47d193c9ca4b9fd5ad037cbfb8bba492ceaef,en Manes <ben.manes@gmail.com>, 2017-02-17 21:28:44 -0800, , fix stale notification eviction raced update solr 10141 http jira browse solr 10141 thanks yonik optimization update allowed bypass hash map synchronize read entry directly block check liveliness performs mutation notifies writer avoids expensive computation map previously eviction performed computation remove entry notify writer resurrect inside computation entry synchronized done removed table removal listener notified value initially read start method allowed update modify value entry removed hash table led notifying writer removal listener stale value writer must called exclusively mutation computation must use synchronized guard otherwise might preferred read value notifying listener add slight penalty eviction usually async allowing put still fast may block little often putslow removed longer needed computation based write safe issue used new weight zero update race would cause incorrect eviction primary path safe race unnecessary,,
402,c5cc2d4f04a317111705108a06b7babe3ce9dc6f,en Manes <ben.manes@gmail.com>, 2017-02-17 20:08:41 -0800, , upgrade error prone,,
403,d914e865877a10c9d85a7399934d2e92a84ad7f8,en Manes <ben.manes@gmail.com>, 2017-02-09 10:59:23 -0800, , add slide deck readme,,
404,f4470a6c72c6d0b1ff4e2aaa6d46c4872e31a933,an-Hendrik Peters <hennr@hennr.name>, 2017-01-16 14:51:19 +0100, , typo,,
405,3e503f08cfb3b5eb845c508bfd91768597434d23,en Manes <ben.manes@gmail.com>, 2017-01-07 22:48:35 -0800, , discard async proxy asyncloadall throw exception getall bulk load first insert proxy cache missing entry call loader asyncloadall populates proxy result method instead throw exception return null proxy removed propogating error previously remained cache unfulfilled thus blocking consumer forever,,
406,fdf81265fd785344a558fec945d8c99495a533ad,en Manes <ben.manes@gmail.com>, 2017-01-05 21:11:22 -0800, , proper fix gradle dirty check due jacoco gradle 3.3 check jacoco output part dirty check causing invalidation due appending single file detail see http slow build completion buildscan plugin 20333,,
407,dce112359ed89ffa93a16826b08e3f4bb160b79b,en Manes <ben.manes@gmail.com>, 2017-01-02 09:23:15 -0800, , consolidate pluggable hill climber strategy make easier focus optimizing hill climber duplicating entire policy climber may redundancy preferred rather complex sharing keeping well isolated helpful determine best climber approach,,
408,86358c52aaf4a7c52f0e24ec7a099b4b143eaffc,en Manes <ben.manes@gmail.com>, 2016-12-30 19:02:27 -0800, , minor optimization simulated annealing show similar improved hit rate trace changed equation different depending article comparison paper suggested using gaussian beneficial restart 3pt loss observed blind difference shrink pivot changing direction,,
409,0d7a166e85b59c5701a9ebf2d9d732eb87c7866f,en Manes <ben.manes@gmail.com>, 2016-12-30 15:28:40 -0800, , use simulated annealing optimize window size build simple hill climbing approach idea admission window size optimized making adjustment observing hit rate change adjusting ideally climb hill optimal configuration based feedback simple approach lot jitter moved slowly showed promise simulated annealing cool rate slow adjustment process nears optimal value also let reduce pivot take smaller step zero target process halt thereby ignoring jitter hit rate change dramatically new workload random restart triggered adaption method fine tuned may still much noise especially due resetting hit rate frequently probably use weighted average across hit rate sample avoid noise overall see nice improvement,,
410,b2aad9b670ccc7119854e0b809a997241799e21e,en Manes <ben.manes@gmail.com>, 2016-12-28 17:57:01 -0800, , improve sliding admission window remove infinispan sliding window appears work better adapting doe well large small recency skewed workload also doe degrade frequency skewed trace seemed adapt workload changed e.g sprite.trace gli.trace window size biased sticky infinispan 9.0 adopted caffeine memory container previous container deleted new old migration dropped integration since nothing compare,,
411,c2405bbbf652637a9cd82b2147e1e07bae0e3b2a,en Manes <ben.manes@gmail.com>, 2016-12-21 21:31:59 -0800, , enable buildscan plugin remove workarounds old guava bug,,
412,6884b5ee7832a8d39808fdecb8c352b865b306a8,en Manes <ben.manes@gmail.com>, 2016-12-17 02:25:55 -0800, , prototype sizing admission window using hill climbing know recency skewed workload favor large window mimic lru frequency skewed workload favor smaller window mimic lfu idea sample hit rate guess adjustment see fare give shallow view curve would let climb towards optimal configuration workload change process restart prototype basic hill climbing algorithm need fine tuning perhaps using simulated annealing provides scaffolding show desired behavior also cleaned simulator code included removing fast path evaluation idea improve read concurrency renamed adaptive tinylfu prototype feedback reserve name,,
413,d8f0aedc9e129bf3c67f0e31732cd182089c393f,rausti SÃ¦mundsson <trauzti@gmail.com>, 2016-12-13 23:15:41 -0800, , insert hashtable evicting implementation best found evaluate based implementation working change behavior several workload several data point,,
414,322c2298a4d58bbbc8a7e1edb6f2fe0b7577ad06,en Manes <ben.manes@gmail.com>, 2016-12-12 20:23:04 -0800, , enforce non null future async mapping function indicates future value nonnull always enforced user supplied future null case null future returned violating documented expectation change strengthens javadoc asserts behavior,,
415,2e5daad34e3a59306112b18e184516278fdd3c7c,en Manes <ben.manes@gmail.com>, 2016-12-12 04:02:02 -0800, , improved handling duplicate key bulk get method method getallpresent getall accept iterable key return map result drop duplicate query repeated could cause redundant load race invalidate skew stats artifically raise usage lfu frequency,,
416,d9ddcc877a7cdd5f588bd6044bc0ee6150db78fe,en Manes <ben.manes@gmail.com>, 2016-12-06 21:46:32 -0800, , upgrade write behind rxjava rxjava plus resolve warning shown errorprone upgrade,,
417,136a5f127231f5a3a24716ee20b3e32954b445f2,en Manes <ben.manes@gmail.com>, 2016-11-29 22:50:20 -0800, , add neo4j radar fix 132 neo4j 3.1 use caffeine query planning permission cache ohc cassandra heap cache adding eviction policy mango cache golang library inspired guava caffeine removed postgres due activity evaluating policy,,
418,308d27087071742ae6247bded8a4c2edc375c1e3,en Manes <ben.manes@gmail.com>, 2016-11-27 13:54:02 -0800, , add ohc simulator ohc heap cache used apache cassandra enhanced support tinylfu http github.com snazy ohc issue,,
419,5b1178e60d8b2170162ca4eadbccc0574a6f9091,en Manes <ben.manes@gmail.com>, 2016-11-06 20:56:41 -0800, , release 2.3.5,,
420,fe68b00ac52b303dd20231123d61e7c3e03782ac,en Manes <ben.manes@gmail.com>, 2016-11-06 14:02:45 -0800, , add coverity build scan fixed minor compilation error static analysis plugin assumes commercial installation local analysis open source portal seem accept emit due build log.txt file debugging required figure integrate coverity scan despite merging since change benign might get working future,,
421,47506310dc15ec51f019de5fcb6f649e87aab696,en Manes <ben.manes@gmail.com>, 2016-11-06 10:53:37 -0800, , add huntbugs static analyzer fix warning huntbugs unofficial successor findbugs clean code base remaining warning false positive sure suppress individually find mistake array checked null rather element weak key null guard see http github.com amaembo huntbugs detail,,
422,182f7a5279864239901e68470d0ea5a7bcc5bbb3,en Manes <ben.manes@gmail.com>, 2016-11-05 21:03:50 -0700, , fix deadlock caused unexpected fix 130 small performance gain scheduling maintenance work performed tiny effect win since scheduling might happen frequency load needed entrant caller run policy used task lock thread one submitting lock exception thrown maintenance work performed directly like may throw forkjoinpool never throw default non reentrant lock used custom executor specified reentrant one used since trust foreign code however may thrown time caused unrelated code assumption wrong resulting deadlock despite jvm unpredictable state still poor response test case covering scenario improved run non reentrant lock deadlock could observed corrected addition removed gradle buildscan plugin due causing performance issue due large 95k test run per test task,,
423,fccd7c23010c79dd3a5262bdf20d4541a780c5a1,en Manes <ben.manes@gmail.com>, 2016-11-04 22:22:10 -0700, , add uma youtube trace simulator trace thousand unique item highly recency skewed strongly disfavor frequency signal reuse,,
424,498e063724a64fb30cde5d479547eafa82bce523,en Manes <ben.manes@gmail.com>, 2016-11-03 20:39:29 -0700, , fix confusing internal documentation fix 129,,
425,818e39c8ecd18e15cdefac38af7d0d3829cb6651,en Manes <ben.manes@gmail.com>, 2016-10-30 18:56:46 -0700, , release 2.3.4,,
426,4b4d9712c834e46accd3bd05c8e1081c43aeec72,en Manes <ben.manes@gmail.com>, 2016-10-30 16:40:03 -0700, , update shaded jctools queue due live lock fix 127 127 live lock occurs write buffer due race consumer try transition last buffer shaded copy jctools fixed 2.0 see http github.com jctools jctools issue 135 difficult reproduce bug except reporter due thousand instance loaded system shaded copy verbose previous one minimize divergency introducing bug cutting deep updating guava required minor change due cache supporting write entry adapter mirror new behavior thanks everyones patience help fixing bug,,
427,260ec0587c4bd34a4450a093e9003ebd1128c7f7,amespedwards42 <james.p.edwards42@gmail.com>, 2016-10-13 13:18:26 -0700, , add collision cache simulator benchmark close 126 due requiring jdk9 enabled default easy way run enabled using jenv shell gradle status stop gradle simulator run daemon detail implementation see http github.com jamespedwards42 collision,,
428,45deefd6e72cbe281ea1ef2a4a8840bb599209f9,en Manes <ben.manes@gmail.com>, 2016-10-08 16:41:26 -0700, , improved hot iteration order solr test hot iteration order used cache warming provided cache.policy .eviction .hottest count giving warm hot cold order test tiny cache receive hottest warm,,
429,ecdcd54dc9b187c3eed110dc4e374f7fe2a5c642,en Manes <ben.manes@gmail.com>, 2016-10-04 11:10:28 -0700, , add public domain header per eclipse foundation advice recommendation review approve http github.com locationtech geomesa pull 1135,,
430,48e8c895f4393c203b2eb98e64ceac3c6d9f0c79,en Manes <ben.manes@gmail.com>, 2016-09-29 18:33:59 -0700, , ensure backpressure task executed last fix 124 workload writes relatively rare spaced apart write buffer handoff writer async maintenance task triggered buffer may grow limit point cache force backpressure cope high write rate case writer block try help performing maintenace work case writer task could scheduled performs clean must also run pending task previously done prior buffer drained order matter unit test user could observe premature eviction last addition pushed front admission window fix keep writer task tail writer evict entry early much real world impact doe play nicer unit test,,
431,eb6426bc06e662baaacf0cd7343d02899b09cae4,en Manes <ben.manes@gmail.com>, 2016-09-26 23:05:52 -0700, , fix license definition hbase check,,
432,f307a05f40d2765ddc76e6fc3a39c1edd5713a73,en Manes <ben.manes@gmail.com>, 2016-09-18 17:06:28 -0700, , add policy.eviction weightof key entry weight symmetric expiration ageof key allows querying metadata key similarly requested email new method useful test verify weight changed,,
433,125b7ec7f5883fefd3499f0f700035e1005f02b8,en Manes <ben.manes@gmail.com>, 2016-09-11 23:34:29 -0700, , run findbugs pmd build,,
434,f6fb60c7cf94a168ecbcfa487c8a054c607de050,en Manes <ben.manes@gmail.com>, 2016-09-11 16:46:14 -0700, , add example reporting stats dropwizard metric instrumentation performed using either push pull pull approach cache stats queried registered gauge e.g http antrix.net post 2014 codahale metric guava cache alternatively custom statscounter used push update metric included example show approach,,
435,f8119a1b9be7cf140336f9f4930047dfbcda58e8,en Manes <ben.manes@gmail.com>, 2016-09-01 11:12:08 -0700, , increase timeout due slow test,,
436,54ce68d9512955194f1552825955d1529a0bb9a4,en Manes <ben.manes@gmail.com>, 2016-08-31 23:10:14 -0700, , fix jsr107 cacheloader adapter handle null value fix 119 required specification per javadoc tck doe validate sadly failed handle case get functioning moving back jdk8 config know new config hang guava test think might distro also fixed misnamed method factory going argue break semver since jcache api impl hook one call directly,,
437,12cd7f257a5f113b7af74d9b5fe4dee5d738da68,en Manes <ben.manes@gmail.com>, 2016-08-27 16:09:49 -0700, , release 2.3.3,,
438,49c012c57c6a0e150ee406e0f3b3ff72c3b7d101,en Manes <ben.manes@gmail.com>, 2016-08-27 14:20:51 -0700, , pluggable jcache factory dependency injector fix 117,,
439,8973141aeda1e33a959aec528daff823d2645bcb,en Manes <ben.manes@gmail.com>, 2016-08-09 20:19:29 -0700, , jdk 9ea build pass locally following incompatibility disabled errorprone gradle errorprone plugin issue javadoc simulator akka issue 21165 soft reference test 9042970 osgi test felix 5322 guava test sure hang guava test pass locally need investigate,,
440,caf043f4059a4e78a06fb91c43035400c6a90bc0,ladimir Sitnikov <sitnikov.vladimir@gmail.com>, 2016-08-09 12:24:43 +0300, , jdk9 travis job early migration,,
441,86596654183c4574e2c75fff408e51f258d6bffe,en Manes <ben.manes@gmail.com>, 2016-08-12 09:09:30 -0700, , remove unnecessary osgi instruction fix 113,,
442,53910f760eb15cd55a9c079882664b59a22eb146,en Manes <ben.manes@gmail.com>, 2016-08-11 11:16:01 -0700, , release 2.3.2,,
443,d26d0c9a59f04d4ee871b935920164f781a9940c,en Manes <ben.manes@gmail.com>, 2016-08-11 02:09:31 -0700, , fix reference cache triggering maintenance write fixed 111 oversight caused write method try clean collected entry caching using weak soft reference configuration maintenance would triggered enough read manually calling cleanup change improvement unit test test flaw allowed bug introduced primarily cause due strict enough evaluating removal notification test highlight slight difference guava caffeine regarding replacing value instance trigger notification small mistake reference cache test uncovered fixed,,
444,3713aa8aa6e6c4eb3a5832154f4e1f55106fd088,irk-c-Walter <dirk.c.walter@gmail.com>, 2016-08-10 15:27:48 -0400, , fix typo error message fix typo error message,,
445,00bc8959d1ddbaebdab27a93779c1d7ebb45b402,eoand <geoand@gmail.com>, 2016-08-09 11:23:38 +0300, , removed upcoming word spring boot integration documentation,,
446,7b5b753505895c18ca39fd62e47eb1fb91dead6e,iktor SzathmaÌry <phraktle@gmail.com>, 2016-08-07 23:22:57 +0200, , scarab trace example parser,,
447,9e035c3ebf7c77f8d12b9e5cdb55dde670000321,en Manes <ben.manes@gmail.com>, 2016-08-02 21:40:43 -0700,103, null value field entry dead evicted 103 user broke map contract accidentially modifying key causing lookup find entry includes eviction find entry linked list node remove hash table stashed key node marked dead removal might fail practice racing explicit invalidation weak soft value entry dead already clear reference reduce burden common case null ing field would benefit would trace live object need hint case reduces impact memory leak collecting heavy user object node instance would still accumulate leak may take longer fail since reference caching could reduce likelihood outage doe seems friendlier null strong value field,,
448,23304585f973f4d6002fb454e8fb21e89a3441da,en Manes <ben.manes@gmail.com>, 2016-07-15 22:44:34 -0700,434, add work around http github.com google error prone issue 434,,
449,30426c439c78d4c50bb654fd80dbc864a01f8d89,im Deblauwe <wim.deblauwe@gmail.com>, 2016-06-26 14:17:58 +0200, , example usage caffeine write behind cache writer,,
450,ce60a877d60e5f0f71282a2172254837232793fc,en Manes <ben.manes@gmail.com>, 2016-06-26 01:02:14 -0700, , incorrect logging error fix,,
451,a9dac48b6d03bb7fa61bdc1c3a3878088a71ad3b,harles Allen <charles@allen-net.com>, 2016-06-22 07:47:31 -0700, , add druid radar,,
452,156a25953e0c6d280f4f6c20b2c08e78ee64c667,en Manes <ben.manes@gmail.com>, 2016-06-12 21:50:12 -0700, , release 2.3.1,,
453,419cfe7289d94f5bd394215e684f8cde7454c8a1,en Manes <ben.manes@gmail.com>, 2016-06-12 19:41:19 -0700, , assist maintenance task executor exhausted fix write buffer used allow writer update eviction policy non blocking manner maintenance work delegated async task possible minimize request latency previous iteration guava clhm amortized calling thread due system wide executor take advantage previously write buffer full writing thread would spin yield wait maintenance task catch assumption task running starved due synthetic load testing e.g running cache.put thread core belief write buffer would full normal usage maintenance task would scheduled promptly assumption fails workload every worker executor updating cache happen synthetic refresh test also future complete case maintenance task scheduled unable run worker thread spinnining endlessly trying append write buffer case degrade amortize maintenance work caller allows progress made avoids wasteful busy waiting increase response penalty case writer would wait anyway would typically happen asynchronous non user facing task completers refresh also remove ugly thread.yield hack look unnatural thanks douglea identifying oversight executor may exhaust thread causing problem,,
454,28118c5496f5f86147a4b10b6122b509d612ba15,en Manes <ben.manes@gmail.com>, 2016-06-06 10:38:12 -0700, , jcache register statistic management bean fix seems gap tck correctly registered cachemanager createcache called creating getcache added eiden test case augment tck,,
455,7ee54e19f7c4c980b80b9fcc8e82f935507a92c6,en Manes <ben.manes@gmail.com>, 2016-05-29 23:34:36 -0700, , add doorkeeper simulator analysis doorkeeper space saving technique reduce number counter needed tinylfu frequency sketch one hit wonder would member doorkeeper make frequency sketch discarded cache reduces number entry making count min sketch allowing save space without degrading hit rate optimization disabled requires analysis find best parameter cursory look show space saving small cache short trace,,
456,ef08fe8ae055da14288a9a7ebf83d391f599d025,en Manes <ben.manes@gmail.com>, 2016-05-29 20:08:29 -0700, , document nullability removallistener parameter fix,,
457,db0e225986f72fff933b99ca2b29780c09cf9a6e,en Manes <ben.manes@gmail.com>, 2016-05-28 21:52:43 -0700, , minor refinement simulator bloom filter simple optimization combine shift mask single operation since table size power two shift top bit get index bottom bit used index long find bit,,
458,6451e58b8c45991ea7c35f7f061bba1ff6841b29,en Manes <ben.manes@gmail.com>, 2016-05-28 15:51:55 -0700, , high false positive rate simulator bloomfilter fix see issue discussion clearly goofed thought process taken highest bit effect experiment due small used adaption see difference compared guava issue would problem doorkeeper idea analyzed,,
459,f6f5f4ded19f160cedc1f0e8d64103704f33db59,en Manes <ben.manes@gmail.com>, 2016-05-26 23:51:02 -0700, , adjust adaptive tinylfu larger amount adapting helped recency skewed workload never grew window large enough optimal using larger increment window grows quicker closer optimum policy still adapt towards frequency using smaller decrement help bias longer towards recency matter small trace seems good trade result better hit race recency skewed without hurting frequency skewed 0.5 worst,,
460,bdcc4005f6d384781e491acaead6d33f7b238a3d,en Manes <ben.manes@gmail.com>, 2016-05-22 11:20:08 -0700, , eclipse neon import fix prior neon gradle import using buildship broken due plugin handling generated source properly would force build directory marked derived consumed ide fixed neon tested rc2 cliff click highscalelib includes optional trick replace using bootclasspath used classloader resolve jdk e.g rt.jar neon choses cliff instead break due atomic computes lacking method like mappingcount likely culprit jigsaw change nbhm moved jctools otherwise longer maintained trick dropped switching dependency build issue away lastly eclipse make using unsafe error waiting jdk9 varhandles premature requires manually lowering threshold warning,,
461,ef6b223d22dad8aabb4a9bcfefe5b7fd1dda78bf,en Manes <ben.manes@gmail.com>, 2016-05-12 20:35:37 -0700, , early pas adaptive tinylfu gil idea instead using admission window adapting size adjust emphasis given new arrival lru workload adjust favor recent evict least recent frequency workload would behave like tinylfu favoring historic usage adjustment determined sample observe policy made good prediction version show uneven result workload performs par adaptive tinylfu others poor tuning parameter cause gain one trace hurt another analysis required,,
462,ef8c06a5e62f825ce9a647a49db0866a31206f95,en Manes <ben.manes@gmail.com>, 2016-05-11 23:59:45 -0700, , adaptive refinement reduce waste window capture recency information quickly becomes useless certain age cache small could play dominent role window need larger percentage however never need excessively large total entry count 256 appears ideal cutoff large cache avoid wasting time space using fixed size window small cache monitor adapt based workload resulting equation understandable large cache entry evicted window know used recently 256 recency distance tinylfu decides whether keep entry based frequency best hint reuse likely discarding entry avoids cache pollution small cache slightly complicated monitor sample 1024 detect mispredictions using bloom filter retain history detected grow else shrink threshold limit,,
463,e6709ac78311e7f92d0a3f18b3b3c4cd32cfff1b,en Manes <ben.manes@gmail.com>, 2016-05-10 01:10:45 -0700, , improved frequency correction adaptive tinylfu trace combination showed window stuck large value even though workload disfavored resetting feedback sketch every half sample period seems robustly solved cache still favor frequency lru optimal window may grow large enough even match lir derivative mean policy competitive,,
464,e3f74b2a529be9d7e942fc331d557b09ae1f253b,en Manes <ben.manes@gmail.com>, 2016-05-08 19:25:47 -0700, , custom bloom filter policy simulator implementation intended use tinylfu based cache doorkeeper adaptive sizing primary value hash function countmin4 allow computing hash use multiple sketch doorkeeper technique reduce size countminsketch preventing one hit wonder needing stored described paper implemented tinylfu backlogged caffeine simulated introduced point adaptive tinylfu sketch detect mispredictions increase hit rate dynamically tuning towards recency frequency depending workload amusing story based old interview prep code kata later led guava version joined team kept arguing efficient implementation possible believed securerandom needed hashcode seed reason googlers hate reading wikipedia research paper surprised showed working prototype yes toy hack never thought anyone would look ala pushed discussion due noogler result slow due poor hasher modulus operation rejected power two request http github.com ben mane blob wiki bloomfilter.md,,
465,9a4ae51125864177ef634fa41e87f0a2f89fd877,en Manes <ben.manes@gmail.com>, 2016-05-08 11:48:20 -0700, , finalize adaptive tinylfu algorithm close final version new policy knob fully externalized smaller membership sketch evaluates based number sample taken run different trace alone paired others indicates good performance adaptive behavior idea much crystalized,,
466,700ca90d1307980fc32945bb73a475f2763c9c23,en Manes <ben.manes@gmail.com>, 2016-05-07 13:37:08 -0700, , improved adaptive tinylfu recency workload added four trace cache2k java commerce webapp two trace orm extremely recency skewed suspect hibernate cache usually flushed regularly avoid stale data case lru near optimal policy tinylfu doe poorly recency dominant tinylfu help window static may small workload new adaptive version excellent though correctly adjusts emulate lru still able return leveraging tinylfu workload change help make policy robust different usage caffeine perform case adaption integrated future iteration,,
467,2b6c5fed7fdc613f592fe634cd3e8108c2c6b8da,en Manes <ben.manes@gmail.com>, 2016-05-05 17:16:11 -0700, , add guava testlib test linkeddeque,,
468,c2cda8cc0c0e4b3ef9320d50541e6ccf7ed96744,en Manes <ben.manes@gmail.com>, 2016-05-04 21:58:10 -0700, , proving adaptive tinylfu awesome first attempt showed adjust multiple rejection detected grew window recency trace kept small frequency trace bloom filter properly adapt multiple type run sequence favored large window next attempt showed constrain growth also detect another access quickly increased decreased window based changing worklaod however quick hack used tinylfu frequency 10x max size sample period would fine small cache recency signal would relevant larger one due long sample time version maximum size sample period signal done hacking another countmin sketch variant perhaps two bloom filter would better deciding right sketch future task making code horrible result nudge improving hit rate good adaption think found winner,,
469,abf4bef98c59cbdc45c2f194593fdc18029d9605,en Manes <ben.manes@gmail.com>, 2016-05-04 18:53:31 -0700, , improved adaption adaptive tinylfu workload recency skewed admission window larger smaller frequency skewed normal case previously sampling benefited recency shrink promptly workload changed finding right tuning challenging small tweak seems trick running oltp oltp show window resized quickly correctly result higher hit rate low cost desired,,
470,b581a30dc8ac3ff3ab9e1c2c698f8778bb2f9bba,en Manes <ben.manes@gmail.com>, 2016-05-02 19:13:45 -0700, , adaptive tinylfu refinement still quite right tweak cause either increase window grow liberally shrink timely also avoid jitter increase decrease constantly basic idea probably correct logic pivot need thought,,
471,47b4edfeb37603a465880cc0de1b3192dd1d0e2d,en Manes <ben.manes@gmail.com>, 2016-05-02 10:54:21 -0700, , fix adaptive tinylfu small cache protected space full adaptively reduced entry demoted probation space otherwise probation space may empty victim candidate causing assert fail,,
472,5deaca08cc35d722b2ca4ad7c084ec3f2d508063,en Manes <ben.manes@gmail.com>, 2016-05-01 22:39:48 -0700, , early prototype adaptive tinylfu policy experiment shown many workload tinylfu excellent filter however workload recency play larger role frequency filter strict devised admission window tinylfu capture sparse burst many workload window satisfactory degrading frequency workload helping recency workload however finding optimal window size workload specific adjust window size based workload detect tinylfu mispredicted new arrival rejected twice within short period increase window size see case decrease window size thus workload like oltp see improvement workload see change adjustment made implementation need refinement idea appears work,,
473,9c3ba92dc5bca15b94657ee4b02fa0e2788239f1,en Manes <ben.manes@gmail.com>, 2016-04-30 14:58:27 -0700, , add admission rate simulator probably added long time ago lot direct insight show tinylfu admits entry depending eviction policy follows general observation arrival pollute cache quickly discarded policy like lir slru based tinylfu doe explicitly interesting next step determine inject feedback cycle tinylfu correct mispredictions probably best done using adaptive window size e.g adjusting recently rejected entry would discarded twice indicating sparse burst,,
474,c934ee1e238630a7f4889c2fbc0eee749753f6fd,en Manes <ben.manes@gmail.com>, 2016-04-28 21:24:03 -0700,16802, add elasticsearch lru cache benchmark suite result show cache performs poorly concurrent workload striped lru match theoretical search far biased frequency result see http github.com elastic elasticsearch issue 16802,,
475,620bf77cbde1916f1ee82086147b0c36906a0ecb,en Manes <ben.manes@gmail.com>, 2016-04-28 00:22:18 -0700, , minor optimization clean update hit counter getallpresent avoids allocating jcache event necessary e.g skipped due listener event type chance done escape analysis annotated flag argument parameter name,,
476,375d30efc22755dcc683d96cb4bc66e7e849d17d,en Manes <ben.manes@gmail.com>, 2016-04-27 13:31:47 -0700, , add findbugs excludes ignorable warning,,
477,9dead5ae12dd0ee82a4deec4789f92ccd3c5da24,en Manes <ben.manes@gmail.com>, 2016-04-26 00:33:27 -0700, , small optimization explicit removal invalidate stress test increased removal throughput depending number thread,,
478,14709dc901d4340a4ec2d08813a0d12f59afd768,en Manes <ben.manes@gmail.com>, 2016-04-25 09:37:46 -0700,69, add test case demonstrating 2.3.0 pass,,
479,d182ded8bf03a41a38abc5cb5581c1ef052fca48,en Manes <ben.manes@gmail.com>, 2016-04-23 14:58:39 -0700, , release 2.3.0,,
480,cc4885b6d649a8d53b4a292f75817c312fb9f905,en Manes <ben.manes@gmail.com>, 2016-04-23 14:28:00 -0700, , prepare release,,
481,f11108a85091a13867e9e79d17f81e45eaeefcf3,en Manes <ben.manes@gmail.com>, 2016-04-23 12:38:17 -0700, , improved guava view entryset iterator compatibility,,
482,61dc09a33273c8936d671a09ae9a1acc22d4840a,en Manes <ben.manes@gmail.com>, 2016-04-01 04:03:09 -0700, , refresh non blocking write fix fix previously refresh implemented computation performed executor like writes allowed concurrent read blocked writes like updating invalidating evicting provided strong consistency cost lock granularity hash bin potentially wasting thread asynchronous cache simple model also shown broken per deadlock reported refresh performed without blocking better match guava newly loaded entry dropped mapping point different value like guava entry disappears e.g eviction loaded value inserted usage preferred try avoid redundant flight load unlike guava loadingcache refresh detect ignore redundant load may possible strengthen implementation explicit refreshes rare similar guava approach aba safe best effort doe user would likely prefer stricter reload behavior user perform map compute instead load testing uncovered weighted eviction bug cache heavily dominated zero weight entry e.g incomplete future main space eviction would find victim needed fallback scan admission window thanks everyone helped discussion wrap head properly implement,,
483,1e6ec2d1e1f43c296479773919f871bda03b5821,en Manes <ben.manes@gmail.com>, 2016-04-19 18:42:47 -0700, , reduce initial writer buffer size,,
484,a84573b7d53d21b46c015fdd61c23ab6b4d698b8,en Manes <ben.manes@gmail.com>, 2016-04-19 12:30:08 -0700, , add evictionweight stats fix,,
485,3988e0bdda802ce4e9ffcec543267f022c2ad0d4,en Manes <ben.manes@gmail.com>, 2016-04-19 03:31:59 -0700, , add write back pressure insert heavy workload write buffer used primarily modification change size cache insert remove update entry weight previous buffer unbounded due simplicity lack real world data indicating issue stress test showing yield writes allowed cache keep unbounded queue never great given read heavy nature cache workload visible issue bounded buffer grows initial size maximum based number core allows low footprint hoc usage also scaling well high demand usage simple stress test achieved good eviction rate 2.55m penalty implementation trimmed version jctools given compatible license friendly author great quality code seemed poor implement custom variant,,
486,6f01f8d8535dc8ac672474fb86e8b0825d89e26a,en Manes <ben.manes@gmail.com>, 2016-04-17 19:36:24 -0700, , fix extension javadoc link back caffeine,,
487,e2f68e2ded7609da8dcaf21578a204474c74c4c7,en Manes <ben.manes@gmail.com>, 2016-04-17 12:18:08 -0700, , release 2.2.7,,
488,d690f5cd85f15cd0f00af4a1397f1489854a5f37,en Manes <ben.manes@gmail.com>, 2016-04-16 16:01:00 -0700, , cassandra 11452 stronger resistence hash collision attack thanks discussion cassandra tinylfu folk fairly strong guard collision attack also low overhead impact existing hit rate previous commit fairly weak comparison concluded randomness desirable either admission eviction policy better option simulated favorite balance might change roy present feedback pondering long flight home attack requires victim pinned artifically high frequency due hash collision entry admitted warm candidate rejected frequency filter give chance accepted anyway kick attacker victim protects well multiple collision arsenal small large trace rarely triggered due normal usage doe admit frequency hurt hit rate attack vector sketch hash function already protected random seed protect weak bit hash code used java,,
489,9372ffcb2c9dd6ead97cfdf0956daa54675f9871,en Manes <ben.manes@gmail.com>, 2016-04-14 09:46:34 -0700, , cassandra 11452 improved resistence hash collision attack candidate victim hash code equal estimated frequency result candidate rejected hash collision attack cache admit new entry hit rate low causing poor response time ideally use bit hash java doe provide natively prefer exposing builder function long longhashcode would fix problem greatly reduce likelihood patch evicts victim case collision allow candidate flow eden probation segment similar effect using freq1 freq2 comparision strictly without degrading hit rate lir trace blambov please review iterate find good compromise solution,,
490,92f92f7a79a991d148cc88c9e691030dcebba22b,en Manes <ben.manes@gmail.com>, 2016-04-13 22:11:14 -0700, , randomized tinylfu policy added simulator instead lru slru cache space variant random eviction new entry added window random selection candidate window victim main selected one lowest frequency removed hit rate slightly lower tinylfu window size expected close show type improvement tinylfu due giving candidate chance build frequency approach would allow require read buffer lru list maximum size reduces per entry overhead improves throughput come cost 1.5 difference trace analysis needed determine tradeoff favorable appears promising,,
491,5b46f8a7754c8c876ac5a44e5537924f4876e5ba,en Manes <ben.manes@gmail.com>, 2016-04-13 02:27:58 -0700, , improve correctness match theoretical tinylfu random hash seed used 0.5 loss multi1 trace likely small trace similar difference due sizing difference early promotion eden entry main space led prematurely designating warm entry protected causing eligibility eviction delayed intentional conurrency optimization pan idea hottest entry could detected policy work skipped thereby avoiding read buffer contention since trick beneficial never enabled removed effect large trace much confusing small one remaining difference due buffer lossy full cause 0.01 difference could fixed statement convey full early instead late seems unnecessary given pareto principle,,
492,7c5115a7c303a9d07e05ea7ff69ecd9b06cd0d40,en Manes <ben.manes@gmail.com>, 2016-04-11 01:01:18 -0700, , jcache javadoc link jsr,,
493,5f7c3796a862469d356afacd00b6a82b4cd37827,en Manes <ben.manes@gmail.com>, 2016-04-10 22:05:03 -0700, , add logging exception thrown async computation isnull observed exception swallowed silently logged consumer future consumer responsibility change help debugablity making error visible misc clean ups otherwise,,
494,f577453ac893e0b549f1ecff45917d3e861addee,en Manes <ben.manes@gmail.com>, 2016-04-08 00:38:27 -0700, , update memory overhead analysis show aligned size ignores executor used present codegen causing much byte code bloat caused base size include quite hefty previous number wiki 1.x updated rough estimate insight gleemed tiny primarily let see suprising difference investigate,,
495,9711f8bb75cd6feb060ac4f4a58ad27ea0065deb,en Manes <ben.manes@gmail.com>, 2016-04-07 00:13:41 -0700, , initialize frequency sketch initial capacity set frequency sketch like hash table lazily sized entry added delayed cache least full begin recording frequency maximum size total entry count known maximum weight resizes based map size full laziness based observing many cache sized give safety net bounding especially true expirable case maximum weight many time user rough idea expected entry count e.g maximum weight avg entry byte size already sizing hash table size data structure similarly,,
496,c886306702efd318c1df46bbb236f173c9df255b,en Manes <ben.manes@gmail.com>, 2016-04-05 12:06:23 -0700, , document guard much possible hostile executor,,
497,c9297f20858ef73b90fb714ffb2cc96895901e14,en Manes <ben.manes@gmail.com>, 2016-04-03 20:20:24 -0700, , improve documentation subtle implementation detail,,
498,29eb48648a9adf441c8eee7faa6f87892eadbf62,en Manes <ben.manes@gmail.com>, 2016-04-03 13:20:27 -0700, , release 2.2.6,,
499,1b076b3c2cfc96569335027914e70e1da3634047,en Manes <ben.manes@gmail.com>, 2016-04-03 13:07:51 -0700, , improve timeliness fork join rescheduling,,
500,d3377481c0d36452b104c633244eefbcc07af444,en Manes <ben.manes@gmail.com>, 2016-04-03 02:19:54 -0700, , release 2.2.5,,
501,ceea49e33658b73e839ea47f78b36786db63c1f5,en Manes <ben.manes@gmail.com>, 2016-04-03 02:11:42 -0700, , minor cleanup release,,
502,d40f0a129f8e1fd4929bdf2d77db0b5c2f2b146b,en Manes <ben.manes@gmail.com>, 2016-04-03 01:20:41 -0700, , rollback 2.2.4 broken release use,,
503,0cf8f465da2a4ec527e1582c99f003586afeaef1,en Manes <ben.manes@gmail.com>, 2016-04-03 00:43:36 -0700, , forkjointasks must reinitialized prior submission,,
504,14292ec9d0e463c6075a1b8a44ca2ceaa02eace3,en Manes <ben.manes@gmail.com>, 2016-04-02 22:40:37 -0700, , ensure exception maintenance task logged forkjoinpool internal runnable wrapper rethrows exception forkjointask make available consumer future result adding safety net let user know unexpected failure occurred recall exception performcleanup allowed propogate caller something cachewriter explicit catch log still abides old behavior relying fjp log raw runnable need revisit understand propogation still make sense,,
505,3be91a4f1b0a5f3f13f3cc7c032a5e0259fe56fb,en Manes <ben.manes@gmail.com>, 2016-04-02 20:11:50 -0700, , release 2.2.4,,
506,f16a0c5f2bbe3afb840ba8310692e8424b804b7d,en Manes <ben.manes@gmail.com>, 2016-04-02 19:50:48 -0700, , fix minor pmd warning unnecessary final,,
507,2c5c1d96106cebb8d036043ffdd897f053fd32bb,en Manes <ben.manes@gmail.com>, 2016-04-02 18:30:26 -0700, , add tolerance handle high write rate full detail described jmh write benchmark write buffer overwelmed caused degredations occurs due needing reorder entry queue update due high rate update unbounded buffer system would perform poorly similar behavior seen maximumsize stress testing insert case thread.yield resolve problem case likely seen user benchmarking apps unfair resolve update within short time window second reordered queue allows async maintenance keep without problem honoring user expectation http github.com orbit orbit pull 144 issuecomment 204838214,,
508,b011f150d82ca89ee4e3053e54665293275344b7,en Manes <ben.manes@gmail.com>, 2016-04-02 13:11:21 -0700, , improve chance escape analysis avoid alloc weak key write get key lookup key allocated jit detects limited scope never escape thread write often due retry loop long method making lookup key simpler value object jit often able guess correctly inlining retry loop even likely resulting 10m ops improvement,,
509,9188e5a04c04541f87ef136072e163c0185c0ab1,en Manes <ben.manes@gmail.com>, 2016-04-02 11:38:48 -0700, , prevent nepotism write buffer linked list described scenario covered write buffer optimization applies optimistic queue used cache linearizable version prevent due needing walk chain notify completion reduce observing node consumed break chain http psy lob 2016 nepotism linked queues.html,,
510,776ca5884b8df892884ba23060bbbd1396970446,en Manes <ben.manes@gmail.com>, 2016-04-02 10:57:05 -0700, , avoid forkjoinpool wrapper causing churn submitting runnable fjp cause wrapped adapter forkjointask maximumsize significant due overhead maintenance work countminsketch hashing etc thousand object still good cache type create million weakkeys half read throughput see detail http github.com orbit orbit pull 144,,
511,90b60a2c22c9d30a7d6cea25d793fac8cc347a28,en Manes <ben.manes@gmail.com>, 2016-04-01 21:20:56 -0700, , add little flair,,
512,87524242b58a655e6d4250854c387f800c83b2e0,en Manes <ben.manes@gmail.com>, 2016-03-31 15:49:43 -0700, , avoid potentially expensive lazy view call bulk loaded map map returned loadall lazy transformation e.g deserialize value demand important pay penalty user could avoid code e.g using view reasonable ignorant return e.g map func,,
513,cf25a34307e1142c0c6e918e36e1b516961b744d,en Manes <ben.manes@gmail.com>, 2016-03-29 18:18:05 -0700, , update latest news,,
514,66407eebf751b908bc75933518606cff0a24686e,en Manes <ben.manes@gmail.com>, 2016-03-22 20:25:02 -0700, , release 2.2.3,,
515,ebd92875dbed130c28f2b121bcb0e9e4d7fafc10,en Manes <ben.manes@gmail.com>, 2016-03-22 20:12:31 -0700, , fix flaky test due racy assertion,,
516,b0cd1a5583c612aca4763ee1f8d61be0d2084a8f,en Manes <ben.manes@gmail.com>, 2016-03-19 15:37:39 -0700, , admit entry exceed maximum weight entry weight exceeds cache maximum capacity evict immediately avoids flushing probation segment though probably doe flush admission window total size thanks blemale reminding peeked weigherspec test fixed guava forgotten port v19 released also improved correction evaluating admission candidate evicting multiple entry candidate accepted evicted count decremented next set evaluation often occurs weighted cache http github.com blemale scaffeine http github.com google guava commit,,
517,80ea370a64c5a534d7a1082f3fb520d0d20da444,en Manes <ben.manes@gmail.com>, 2016-03-16 00:48:34 -0700, , forward default method guava asmap view guava inherit default version thread safe atomic explicitly forwarded though user encouraged rely guava java based would encourage improper use guava cache,,
518,18fe74322de9ea79cc462ec42308c662b4c4ebf4,en Manes <ben.manes@gmail.com>, 2016-03-14 17:15:31 -0700, , document behavior invalidating loading entry fix behavior invalidate key invalidateall key invalidateall undefined entry materialized undocumented behavior remove clear blocking loading entry however collection view keyset value entryset suppress loading entry result cache ignoring entry requires post processing removal noted doug behavior racy difficut document expectation user arrange quiescent point needed,,
519,81fc856b47330c2221e4e0f6d73064acdee74110,en Manes <ben.manes@gmail.com>, 2016-03-09 00:00:37 -0800, , stronger protection excess scheduling fix simpler state machine trylock guard protected unnecessary scheduling maintenance task could occur though due benign race high write rate pronounce effect clogged executor perfect scheduling negligible cost ensuring even synthetic stress test excess occurs,,
520,af36fba87803b9d83f419944726216f2d9fb1965,en Manes <ben.manes@gmail.com>, 2016-03-08 15:53:05 -0800, , graceful executor error handling removal notification previously rejected task dropped could lead resource leak documentation doe warn rejection could non deterministic removal listener invoked calling thread increase writer penalty cause additional pain warning still logged also cleaned stress test investigative work,,
521,7fa6c38964e9fe0c65dd1487154d654ca2917640,en Manes <ben.manes@gmail.com>, 2016-02-28 17:43:27 -0800, , release 2.2.2,,
522,49fed1e4fb41af221f6c4f798525cdd4f8dde26b,en Manes <ben.manes@gmail.com>, 2016-02-28 17:31:20 -0800, , fix async refresh prematurely replacing value refresh write triggered entry reloaded background present value available read atomically replaced new value loaded operation atomic writes entry blocking rather clobbering another write attempted work synchronous asynchronous cache unfortunately asycn cache new incomplete future immediately put cache available consumed next request due layering custom reloadasync called operation delegated load instead course wrong intended expected behavior fixed thanks etienne houle stingray notifying problem,,
523,92f9c598381df87685bbdba1c31e7f5f4799b7ae,en Manes <ben.manes@gmail.com>, 2016-02-24 21:35:54 -0800, , release 2.2.1,,
524,56d89daf971ca0deb23b94e793f276b235d4ddad,en Manes <ben.manes@gmail.com>, 2016-02-22 22:43:16 -0800, , misc cleanup,,
525,5792e670f2ef9854feeafef6c9dc5f8a70bc4ef9,en Manes <ben.manes@gmail.com>, 2016-02-22 01:52:37 -0800, , avoid estimatedsize trysplit test,,
526,da23464946e0936365cb3f06ff1d466124170d37,en Manes <ben.manes@gmail.com>, 2016-02-22 01:15:14 -0800, , add optimized spliterator implementation default spliterator provide characteristic like distinct concurrent optimized one better suited stream processing test identified bug incorrectly estimate size odd map split checking behavior report split populated map issue reported,,
527,4fdb6c7b9f998d199a3fdaeec203f71b77d3d8a6,en Manes <ben.manes@gmail.com>, 2016-02-21 01:54:15 -0800, , handle race due default replaceall function javadoc default implementation warns doe atomic property due using entry.setvalue odd choice instead replace oldvalue newvalue providing safer version concurrentmap,,
528,0bb8a86b49f1045764c5fda42909b12acbbca3e8,aleriy.Vyrva <valery1707@gmail.com>, 2016-02-19 14:12:57 -0800, , add stackoverflow badge link tag,,
529,e784a9be401df54324d81048775431d3fdc574df,en Manes <ben.manes@gmail.com>, 2016-02-19 14:07:29 -0800, , fix javadoc code example,,
530,6cfbd44fe2a0b091bd65b5f61459b3ce0ac3d929,en Manes <ben.manes@gmail.com>, 2016-02-19 10:52:13 -0800, , release 2.2.0,,
531,d52a68810270d8c8bdd86b8d1c1a368dc4a8a1fa,en Manes <ben.manes@gmail.com>, 2016-02-19 09:44:02 -0800, , prepare next release,,
532,610d90e10ff997ac43131a579f940ca64340a864,en Manes <ben.manes@gmail.com>, 2016-02-19 01:49:06 -0800, , reduce jar size 400kb codegen introducing code generation entry cache overly optimistic aggressive resulted larger binary slow byte code verification type hierarchy optimized least useful case promoted back declared reference cacheloader reference another memory optimization rolled back commonly used strongly recommend using self populating cache instead manual one difference 14k line generated 400kb lot byte code might verified,,
533,0337c688addc181a579bfbd74b41105ab828a74b,en Manes <ben.manes@gmail.com>, 2016-02-17 23:14:39 -0800, , asynchronous cache fix creating previously required passing cacheloader optionally lambda convenient computation written synchronous fashion cache provides asynchronous wrapping api clunky computation defined asynchronously bubbling future another library case asyncload default method overriden addition load may never called offered power needed combersome fashion resolve api flaw providing asynchronous computation loader make asyncload asyncloadall asyncreload used lambda buildasync e.g key executor future backwards compatibility retained cacheloader extend asyncload asyncloadall already defined default asyncreload introduced approach nice providing symmetry low integration effort minimal impact api,,
534,16e217348c96afeae843c0bd7968868f1f826fba,en Manes <ben.manes@gmail.com>, 2016-02-12 22:15:46 -0800, , minor cleanup,,
535,e07ebcf2b9a37c9fbbda226270216043a0b5d58d,en Manes <ben.manes@gmail.com>, 2016-02-12 10:32:04 -0800, , minimize lambda allocation jcache event dispatching,,
536,552d52615ab507aa58f5b6edadc8e5bc6636b4ba,en Manes <ben.manes@gmail.com>, 2016-02-07 15:17:08 -0800, , handle race due default removeif predicate default implementation collection removeif appropriate concurrent collection affect value entryset view similar bug found http bugs.java.com bugdatabase view_bug.do bug_id 8078645,,
537,095266c7e09bfd07fc5f0cef467ee8a97f401195,en Manes <ben.manes@gmail.com>, 2016-01-25 10:23:42 -0800, , add highscalability article plus minor tweak,,
538,dc9a938e2546a4b59940e67e9142daf57360d567,en Manes <ben.manes@gmail.com>, 2016-01-18 12:03:27 -0800, , slight improvement documentation,,
539,70db8d0172e9a85a711f9fb05cf9b37c039e9f45,en Manes <ben.manes@gmail.com>, 2016-01-17 20:56:15 -0800, , release 2.1.0,,
540,b936506aface3bf699a2bc22cdd39c163163d7ff,en Manes <ben.manes@gmail.com>, 2016-01-17 20:00:08 -0800, , list automatic refreshing feature bullet point,,
541,6e8b80a9503919b838981f8629d1792b784dc4df,en Manes <ben.manes@gmail.com>, 2016-01-17 18:30:10 -0800, , add caffeinespec externalized configuration fix similar guava caffeinespec simplifies creation builder externalized flag useful configuration file spring property string format option guava except supported disablecaching factory method ported since usefulness seemed questionable caffeinespec pass guava test case change made,,
542,71794bf4a100385b82e1b71fc4416420a765f75f,en Manes <ben.manes@gmail.com>, 2016-01-17 00:58:05 -0800, , code quality improvement,,
543,e6f4e35cee73f83b48dd26c0da42a8a05254ac46,en Manes <ben.manes@gmail.com>, 2016-01-16 18:33:15 -0800, , jcache configuration option refresh write expose caffeine refresh capability using read cache,,
544,4e495d797c10f4749b8bc1e449c0f250ff8bdb1e,en Manes <ben.manes@gmail.com>, 2016-01-16 17:09:04 -0800, , jcache tck test clear test coverage report,,
545,0c0e0ade93884a79eab57ffd761f36fd2f12ac22,en Manes <ben.manes@gmail.com>, 2016-01-16 16:53:18 -0800, , jcache expire updated test case,,
546,51df48a188916136c4378457e518c892b62b2903,en Manes <ben.manes@gmail.com>, 2016-01-16 16:06:50 -0800, , jcache expire created test case,,
547,3dec6ba37c40a883f6639d7bd7da3546fc7a096e,en Manes <ben.manes@gmail.com>, 2016-01-16 14:31:01 -0800, , jcache expire access test case,,
548,7673954b414b7d7f7328d1cf80fab4ec030d17c0,en Manes <ben.manes@gmail.com>, 2016-01-15 16:55:33 -0800, , fix jcache expiry access bug expiration time accidentally set current time next expiration time current expiry marknorkin discovered issue see http 34814622 19450 pass test tck doe verify expiration time next priority must add test case caffeine core expiration well tested jcache incompatible approach requiring custom feature may also worthwhile reviewing marknorkin found confusing http 34809817 19450,,
549,abacef9a5f658a54facfb78f060cf75402e14d10,en Manes <ben.manes@gmail.com>, 2016-01-08 00:32:16 -0800, , remove schedule removal data structure written initial seed project fit theme public api instead user look jctools focused specifically specialized concurrent data structure unused marked beta never matured promoted completed api beta opts semvar rule allowing deleted minor release stack backoff arena efficiently eliminate combine operation promoted due used cache write buffer backoff arena efficently handle producer contention batching update queue avoid write buffer write hotspot though profiling indicates hash table entry synchronization dominate jctools offer mpsclinkedqueue alternative class due semvar scq scheduled removal next major release 3.0.0 also allow revisit design perhaps prefering growable array queue friendly benchmark improved based excellent advise,,
550,3f07f937ff829fb7dd81bc1a5783948d5ecade69,en Manes <ben.manes@gmail.com>, 2016-01-07 09:30:09 -0800, , ensure predictable random seed used test avoids flaky case like iterating eviction order due seed changing cause different sketch collision cache may estimate different frequency etc,,
551,23ebe0f119f5d325aef4768de9b8f18d123a3d13,en Manes <ben.manes@gmail.com>, 2016-01-07 02:35:59 -0800, , add fastpath cache capacity cache threshold little advantage maintaining size based eviction order case frequency sketch already lazily initialized reduce footprint read buffer recording draining also skipped avoids maintenance cycle perform lru reordering assumption realistic workload long trace full cache cause policy adjust initial laziness warm difference theoretical expectation optimization useful cache sized safety threshold practice evict case performance close ideal using maximum size penalty incurred deemed necessary note fastpath enabled access expiration reference cache configured older disabled fastpath approach also removed idea avoid recording read hottest entry reduce contention read buffer entry grew colder optimization apply would bumped back due zipf like distribution seemed promising benchmark approach pan reason reduced quickly read buffer filled work lossy also created predictable latency throughput would vary wildly iteration worth experiment sadly bare fruit new approach show good result laptop server workload nice extra care needed test benchmark ensure lazily initialized data structure fact initialized predictable state,,
552,ee892e76b896bcd8479a75e03e5c38de83b2914e,aleriy.Vyrva <valery1707@gmail.com>, 2016-01-04 20:17:04 +0600, , javadoc badge service moved new domain,,
553,c3ac6608a6c6e8d681aaf475e1aed9c931bce2a8,en Manes <ben.manes@gmail.com>, 2016-01-02 20:57:09 -0800, , restore write time failed refresh reviewing refresh abatkin inquiry resulted observation worth correcting refresh may scheduled explicit write update entry start race refresh cancelled  refreh fails let entry expire based original time live extended reverting back last write time refresh documented propogate exception instead swallow log done loadingcache refresh exception reach executor would violate contract thread executor used update write time exclusively trigger refresh thrash executor expire write strict scheduled refresh queued executor excessive time slow complete entry may expired currently old value returned arguably load triggered instead either load refresh would complete fresh value returned thread cancelled guava work around custom computation logic based future instead updating write time schedule check value reloaded java compute future based lack type inspection would need refresh flag per entry poor memory trade edge case seems worth covering usually steal sign bit write time technically system.nanotime may return negative value case left wait see user complain brainstorm steal bit flag avoid waste,,
554,e7912f77808e84dc1633ded248f12705cd28bd66,en Manes <ben.manes@gmail.com>, 2015-12-31 19:44:49 -0800, , incremental reset analysis periodic reset age sketch every max_size increment caffeine handled background maintance cycle others may expose penalty caller thus concern seldomly seen latency spike type hiccup hard debug incremental reset age sketch gradual sweep making penalty constant slight cost accuracy however use filter detect heavy hitter slru find promising victim impact minimal reset array slot counter every addition done batch efficiency similar counter reset per addition result range 0.5 across variety trace spike 5.5 merges worst case data taken realizing increment counted reset change merges case dropped penalty refreshed data account fix enough draw early conclusion reasonable design choice http docs.google.com spreadsheet edit usp sharing,,
555,81bce90abfa2bcff08ad8ef8a6d6afa275f4137a,en Manes <ben.manes@gmail.com>, 2015-12-30 17:04:48 -0800, , add conservative update option simulator option improves accuracy sketch cost additional query tends 0.3 increase hit rate surprising negative effect like lir trace 1.3 use case filter seems indicate technique especially valuable used caffeine bit sketch useful simulator others observe writing caching library,,
556,0a40918330298bae3552257f6c990f04ae55d8fe,en Manes <ben.manes@gmail.com>, 2015-12-30 01:46:41 -0800, , touch ups,,
557,8012897063fbe78c39a3e69396df91f75d47741d,ran Hirsch <hirscheran@gmail.com>, 2015-12-30 08:57:46 +0200, , update build.gradle,,
558,d54a260a0eb11d6bcec1de4f04065e9da557a23b,aleriy.Vyrva <valery1707@gmail.com>, 2015-12-28 16:52:14 +0600, , use automatic version detection javadoc badge,,
559,8e5ad8895f5d081ed2b499715b20344f9cd3b0c5,en Manes <ben.manes@gmail.com>, 2015-12-25 20:24:11 -0800, , avoid unnecessary lambda allocation insert new entry inserted cache writer used computeifabsent instead replaced putifabsent avoids unnecessary allocation add pressure response cassandra 10855 perf run dominated insertion cache miss due uniform distribution least little optimization though much scenario,,
560,b0e8f14514cd660e3ed902dee42ead98263381b1,en Manes <ben.manes@gmail.com>, 2015-12-21 01:18:43 -0800, , touch ups,,
561,588f7cfe0dd60581bb7a7b4e9b6506fd9b2e6d08,en Manes <ben.manes@gmail.com>, 2015-12-19 20:31:33 -0800, , release 2.0.3,,
562,d9fd8c6e652c0c0335a0bf4dcd6cab17f330cdf1,en Manes <ben.manes@gmail.com>, 2015-12-19 17:19:03 -0800, , support change jcache configuration expiration policy may return null update access query change entry expiration time supported configuration file translated null mean eternal fixed default set eternal explicitly,,
563,f9af06a5b3632d3a62fbe8e15f04729aadcc1858,en Manes <ben.manes@gmail.com>, 2015-12-18 19:22:56 -0800, , add incremental reset option sketch simulator tinylfu reset periodic sweep halving counter sketch alternative reset incrementally halving table location every addition incrementing cursor would remove concern amortized cost period fully operation appears work well large cache long trace negative impact small cache short trace earlier hoc experiment indicated might promising sadly code kept current analysis match observation requires experimentation see feasibility approach,,
564,a19dd736d9e381ad65bee687cecace0cfa76d1d6,en Manes <ben.manes@gmail.com>, 2015-12-18 10:04:40 -0800, , ensure jcache event ordering jcache requires event received sequential order entry requires cache event publishing performed atomic operation case race could occur addressed,,
565,187a7a8ab020302d9feb4d67bfef44e7b9dd675e,en Manes <ben.manes@gmail.com>, 2015-12-17 21:45:46 -0800, , optimized jcache adapter simple benchmark showed stress cache performing 20m read writes laptop far cry result benchmarking core library read dominated native call acquire current time expiration statistic dynamic configuration factored construction instead smarter handling used avoid unnecessary call boosted 135m write rate increased 35m removing unnecessary event dispatch work acquiring current time churn seems account enough given writes common case complexity required reduce copier another since enabled immutable fastpath avoids work still half raw write performance may low hanging fruit missed likely use compute drop performance losing optimization done simpler put,,
566,5b454b2bc856c114c67905bd4a2ebde5eef9dae5,en Manes <ben.manes@gmail.com>, 2015-12-15 10:11:04 -0800, , clarify javadoc,,
567,1f11e5195d498d8ff81b65213c29e1fc5da1b922,en Manes <ben.manes@gmail.com>, 2015-12-14 20:05:01 -0800, , remove unnecessary allocation jcache get path profiling showed lambda allocated every read anything useful instead two case inlined read common case adapter doe create garbage stack allocation majority time spent annotation proxy provided due lookup overhead allocation,,
568,630ac528151b4dd6f9de438260c8d415b07dd0ad,en Manes <ben.manes@gmail.com>, 2015-12-14 01:51:58 -0800, , review time usage jcache removed redundant call get current time expensive native call performed excessively uncovered mxbean returning time millisecond instead microsecond resolution unfortunate tck spec provide time source help validate usage controlled clock,,
569,22a0e83a7df535260d36e39c0139d8aa051db92f,nknown <klarog@KLAROG-T440P.NORIA.local>, 2015-12-13 21:44:38 +0100, , returning microsecond divide 1000000 1048576 1000 1024,,
570,53ae2f952c7201641ea7e3ba42e78c5f4a619211,en Manes <ben.manes@gmail.com>, 2015-12-12 15:51:11 -0800, , minor touchups need always take penalty two randoms creating sketch edge case zero detected bounded random obtained rest static analysis warning safely ignored,,
571,924b528965c00dcd1dff7d6518bd029975043c4b,en Manes <ben.manes@gmail.com>, 2015-12-12 12:30:52 -0800, , avoid dead code elimination benchmark fix benchmark effected due making stateful change cache read updating policy observable frequency sketch 520m 60m benchmark used tuning show optimization unsafe helpful actually aiding jvm perform elimination fix help simplify code improves accuracy stylistically better,,
572,c9634d7d52670d92d0a12a5f15217fe34379d081,en Manes <ben.manes@gmail.com>, 2015-12-09 23:21:59 -0800, , add article news,,
573,1562d11262c1d0db17a5a08ba43dbacb378b9ac3,en Manes <ben.manes@gmail.com>, 2015-12-03 20:37:10 -0800, , tinylfu highly efficient cache admission policy,,
574,2bd0c0d0dc492c5c2e7cbe67e3137ff1b78ccfd6,en Manes <ben.manes@gmail.com>, 2015-12-02 21:24:58 -0800, , minor cleanup plus technical report published technical report eviction policy available paper submitted acm tos journal publication heavily revised version author original paper includes contribution http arxiv.org pdf,,
575,be2872348b38f53bc71d5ab868395624fbc45ab7,en Manes <ben.manes@gmail.com>, 2015-12-01 22:04:48 -0800, , release 2.0.2,,
576,5016c14c4ff5601ca0b9a32ff1f45237e6e1c52b,en Manes <ben.manes@gmail.com>, 2015-12-01 20:47:37 -0800, , add little tolerance due async scheduling shutting executor async task may rejected benign test example failed future removed removal notification published ignored cleanup cycle triggered fall back calling thread rejected case executor fail without harming test,,
577,023674e58b3733f5b11d7da6e587c3e6b16d8e6c,en Manes <ben.manes@gmail.com>, 2015-12-01 19:54:47 -0800, , cleanup swallow log exception,,
578,0e7daa29e7c0a533b59506a192b9089b00e4472e,en Manes <ben.manes@gmail.com>, 2015-12-01 18:43:16 -0800, , npe due improperly scheduled write task fix absent computation return null add removal task improperly scheduled node null field causing npe maintenance cycle usually background executor could visible cleanup called caught test since executor swalled logged logging disabled avoid spamming report executor instrumented validation assert failure occurred detected two bug found existing test provides coverage one fix,,
579,113a3321ff6dd55d0a72ad68986cd50580aeb9e5,en Manes <ben.manes@gmail.com>, 2015-11-25 21:57:11 -0800, , doc fix,,
580,ff2f754073ea233a7e35fcd08b1b4db757d1ddc7,en Manes <ben.manes@gmail.com>, 2015-11-23 10:07:53 -0800, , benchmark ehcache3 horribly slow large cache cache optimized eviction desirable scenario unfortunately running simulator ehcache take minute others take second jmh benchmark demonstrates effect cache size increase 100 eviction rate benchmark cachetype size score 16423100.754 ops 100 16533853.723 ops 10000 17622561.593 ops 1000000 11584697.390 ops caffeine 3009084.141 ops caffeine 100 3077116.605 ops caffeine 10000 2597455.692 ops caffeine 1000000 1485374.180 ops ehcache2_lru crashed ehcache2_lru 100 462582.410 ops ehcache2_lru 10000 614581.682 ops ehcache2_lru 1000000 257784.128 ops ehcache3_lru 1779093.342 ops ehcache3_lru 100 673023.642 ops ehcache3_lru 10000 516874.858 ops ehcache3_lru 1000000 1566.027 ops,,
581,072875271733dc86c4ff0536ec4923c4e5d12a3c,zmitry Rasolka <rosolkodv@gmail.com>, 2015-11-22 15:34:55 +0300, , replace guava charsets java standard charsets,,
582,e9315421382ae01e3e3916e92d108d9d7a301709,en Manes <ben.manes@gmail.com>, 2015-11-21 01:24:46 -0800, , add wikipedia trace filter error prefix,,
583,7fbd4d6821d138b78a1ca9dd47cdc456c58db5c3,en Manes <ben.manes@gmail.com>, 2015-11-20 21:57:36 -0800, , show longer database trace longer trace pretty interesting show tracking based recency lead flatline effect cache reach capacity point hit rate soar show tinylfu consistent predictable behavior,,
584,b832e93cb98b837f8af62a3e36a077065faba560,en Manes <ben.manes@gmail.com>, 2015-11-20 21:27:54 -0800, , rewrite wikipedia parser avoid preprocessing step instead preprocessing input file assigning unique parser process line 128 bit hash assign simulator read multiple trace file single sequence adding optimization performance acceptable hit rate nearly identical,,
585,25bfa45de1ec6852ea31a6b2a4fa308768c18917,en Manes <ben.manes@gmail.com>, 2015-11-16 10:00:08 -0800, , support small cache divide zero error occurs cache lte due divide zero error disables window supported due size constraint,,
586,05bd8bf8e675fb11a742850dfe45f8a6451978ab,en Manes <ben.manes@gmail.com>, 2015-11-15 15:45:39 -0800, , add simulator registry factory scheme replaces ugly builder brittle construction policy delegated allowing create combination configured support make easier test multiple combination e.g different window size,,
587,1d5a6aa564f127af0322c738e4e57c8a8f2dd7ec,en Manes <ben.manes@gmail.com>, 2015-11-13 15:51:22 -0800, , add uma storage trace support,,
588,5fe3170088cb62495f032d5345a3842aa47b1772,en Manes <ben.manes@gmail.com>, 2015-11-12 21:07:18 -0800, , release 2.0.1,,
589,03514e6c2f3ac1c90f8750e326d57fdfe614507f,en Manes <ben.manes@gmail.com>, 2015-11-11 22:46:42 -0800, , fix osgi manifest add test fix,,
590,a8c3630fb9b175af8a290255a3c05671e90cb84f,en Manes <ben.manes@gmail.com>, 2015-11-10 01:42:15 -0800, , fix confusing javadoc due typo,,
591,0f97ad0dd0d4ea0df0a5f852a476230fd9988e5b,en Manes <ben.manes@gmail.com>, 2015-11-09 19:36:23 -0800, , clarify legend label opt optimal hit rate chart feedback opt obvious reader efficiency analysis,,
592,8358da0606851b3fed291086ba491da59d3f56cf,en Manes <ben.manes@gmail.com>, 2015-11-08 22:51:37 -0800, , prepare next development iteration,,
593,b1f85c23dbac287ddafc6a37c381ae7f84fdaea2,en Manes <ben.manes@gmail.com>, 2015-11-08 22:25:36 -0800, , release 2.0.0,,
594,8ceaf81f7743d9d8faaa5aa524f925383f04b244,en Manes <ben.manes@gmail.com>, 2015-11-08 22:10:56 -0800, , use space object padding ring buffer padding used avoid false sharing cache line previously bloat object header etc used filler little better laptop server class machine spacing value primitive array efficient favoring large machine small difference significant bother anyone practice,,
595,4b73c14ba75d8cfbbff8602a0f3af9dc289e16b5,en Manes <ben.manes@gmail.com>, 2015-11-08 20:42:01 -0800, , disable fastpath hot read idea hottest entry need reordered read due already desirable state based power law would avoid unnecessary work majority read hot entry demoted due colder entry promoted fast path apply would regain status thus little impact hit rate faster throughput unfortunately benchmark show otherwise throughput varies wildly always lower might due type thrashing cpu cache really sure turned enabled future solution found,,
596,2a8c68832e0864d38af5035eca88e63fb9985f46,en Manes <ben.manes@gmail.com>, 2015-11-07 01:49:29 -0800, , allow supplying custom stats counter record,,
597,391b354d724e988637d18433c7a7763324dca4e8,en Manes <ben.manes@gmail.com>, 2015-11-03 22:31:11 -0800, , add s4lru s4w tinylfu policy simulator,,
598,3d3e6503704cbb93376cd59700e0d64f5e930a91,en Manes <ben.manes@gmail.com>, 2015-11-03 12:09:08 -0800, , remove public api,,
599,5fbd2c49f33377c754a9835fa2894912a7242881,en Manes <ben.manes@gmail.com>, 2015-10-31 22:05:29 -0700, , fix pmd findbugs warning,,
600,57ea20eb6376ed0617613cc0c88ab8dbfd34a57d,en Manes <ben.manes@gmail.com>, 2015-10-30 20:37:43 -0700, , cleanup ordered iteration handling prep moving zero weight entry queue avoid scanning eviction policy help find bug test also validate zero weigher default numerous queue make complex provide order useful case like warm restarts e.g cassandra messiness better composing smarter iterators instead work manually minor feature frustrating retain,,
601,75a91c23ab2822145b2b89bc847a6947e0462a72,en Manes <ben.manes@gmail.com>, 2015-10-29 20:50:39 -0700, , tinylfu mean segmented main space based analysis improvement original version lru main space version simple tinylfu improvement reflected updated stats upcoming paper,,
602,d368fd8d24012eee4259bc9c3fc970641075ea03,en Manes <ben.manes@gmail.com>, 2015-10-29 19:40:51 -0700, , use segmented lru main space cache improves hit rate many workload especially small cache segment allows recency play slightly higher role determining victim,,
603,77d3ac9cb8ff59a9210a67747ed2b7194d591ed6,en Manes <ben.manes@gmail.com>, 2015-10-21 21:31:32 -0700, , minor clean,,
604,33e6c8a7fffaf6d338080e379fcc0af2378e1571,en Manes <ben.manes@gmail.com>, 2015-10-19 20:48:15 -0700, , initialize sketch getting close maximum initial laziness avoid unnecessary bloat empty cache afterwards sketch must grow need create garbage intermediate transition weighted unclear maximum number entry common case delay reasonable starting point either addition reach threshold sized large shrunk new maximum within threshold sketch size state discarded growing,,
605,b481870895be887885d75ee72557d7c0a744a0b4,en Manes <ben.manes@gmail.com>, 2015-10-17 19:13:56 -0700, , add variation segment eden main space idea behind two policy use better strategy lru tinylfu space best policy doe use non resident entry segmented lru protects entry multiple access within short time window present tinylfu best candidate chose make admission effective also let protect tinylfu making poor decision window mostly resolve result segmenting main space seems improvement hit rate segmenting eden space seems slight penalty rather improvement,,
606,6a79aba1fb9d18998f4f43784ef2cb3dfe60c2e1,en Manes <ben.manes@gmail.com>, 2015-10-17 17:42:12 -0700, , add tinylfu variant using segmentedlru main space,,
607,639b4ab10009cdac61ea8daa30e78a52d50e7780,en Manes <ben.manes@gmail.com>, 2015-10-17 02:29:55 -0700, , longer need copy ycsb generator jitpack,,
608,bb7a42c0550848a36ec23a110d8b3c6154b2b297,en Manes <ben.manes@gmail.com>, 2015-10-16 18:20:31 -0700, , fix jmh fatjar include service loader,,
609,561e35e110136a138fa63e154044d8e662269ccc,en Manes <ben.manes@gmail.com>, 2015-10-16 11:36:04 -0700, , use hamcrest contains matcher ordering test,,
610,7440d70ede0717d589033e5799d771d06147dd51,en Manes <ben.manes@gmail.com>, 2015-10-16 10:00:05 -0700, , upgrade gradle 1.8,,
611,fa2aab54c2204bb8716850a99181d2b41e021ca0,en Manes <ben.manes@gmail.com>, 2015-10-15 19:11:07 -0700, , try trick tcache synchronous kind work spin forever policy match ideal sometimes higher sometimes lower think due estimated time source hard pin realistic behavior,,
612,6c043ecbdb1b086c72af3b4a9e7167fc1aae6d20,en Manes <ben.manes@gmail.com>, 2015-10-15 11:41:18 -0700, , add tcache simulator benchmark simulated hit rate seems incorrect cache evicts asynchronously higher hit rate obtained due cache exceeding size think matching lfus need investigate,,
613,2430a95a24bb30152e4c72db79dc6745e10ebb03,en Manes <ben.manes@gmail.com>, 2015-10-15 09:41:59 -0700, , faster writes weighted entry restores writes weighted entry optimal unless new weight zero faster incorrect case put used possible otherwise slower strict put used,,
614,1b977750aac5053d9ae818858aae6aacd40ae519,en Manes <ben.manes@gmail.com>, 2015-10-14 18:48:31 -0700, , read performance tuning bump performance 150m 180m ops laptop look like scheduling main culprit fast path aleviate hoped removing logic bump 285m isolating code remove drop 135m lead think false sharing creating contention field need padding might get mid 200s,,
615,6fe1eb488fee8281c719612a39057b4413ace948,en Manes <ben.manes@gmail.com>, 2015-10-14 02:36:17 -0700, , restore write performance rewriting put correctness zero weight major performance hit loss fast path mimic read update require extra policy handling e.g replace weight improved performance prior version use compute perform mutation slower get requires creating lambda heap stack allocated two reduce performance significantly worked around directly instead required correctness weight common case fix use specialized put method depending custom weigher used,,
616,53a5f223aa541a19f84b8929c80f56ceff79b1bb,en Manes <ben.manes@gmail.com>, 2015-10-13 22:42:49 -0700, , fix eager return causing lock released,,
617,eeb50200cfd298f4ebe7b6b99ba6ca7cd6c2237d,en Manes <ben.manes@gmail.com>, 2015-10-13 22:28:46 -0700, , add fast path unit test,,
618,be30125cfb7ecae2f637ab69af7ed5a0fad301de,en Manes <ben.manes@gmail.com>, 2015-10-13 21:08:04 -0700, , add fast path read hottest entry access recorded maximum size policy skipped entry considered hot hot entry resides top region least recently used space main queue sized 6.25 total entry observation cache typically obeys power law hottest entry requested frequently hot entry status degrades high likelihood used eviction regain hot status impact simulator showed roughly 0.05 change hit rate distance count per entry stored unused bit status flag whether entry eden main queue cost merely two entry integer cache optimization disabled reference caching used per access recording still needed test benchmark next step,,
619,b1a18626488ca9be6cbed60c3900445d87c4cf85,en Manes <ben.manes@gmail.com>, 2015-10-12 23:34:47 -0700, , guard worst case random seed multiplying zero would trigger collision xor would worse 0xffffffff much better instead bound int range zero optionally make negative,,
620,c669421de9b70fcdae1c20aa7d5eb34967614190,en Manes <ben.manes@gmail.com>, 2015-10-12 19:13:21 -0700, , add multiqueue policy simulator,,
621,6fb70432d7433c5dd445781e065183bc804cb1c3,en Manes <ben.manes@gmail.com>, 2015-10-12 00:04:36 -0700, , use long key simulator event,,
622,400a4d8f0cbd00c9a6265230270f5920fbf2630d,en Manes <ben.manes@gmail.com>, 2015-10-11 22:14:55 -0700, , cleaning simulator,,
623,0999acfa45b2caa42fc1a95c8fc9ecefd42bf6df,en Manes <ben.manes@gmail.com>, 2015-10-11 21:34:17 -0700, , avoid excessive scheduling maintenace task race scheduling occurs thread skip past due failing acquire trylock however may delayed long enough acquire trylock processing schedule cleanup necessary guard condition help protect case,,
624,59f34ac33981e10f5717dc2f024eb1aa24432ac4,en Manes <ben.manes@gmail.com>, 2015-10-11 21:05:33 -0700, , support throwing checked exception cacheloader,,
625,353fd8cd648a34756d1d508d136a13339b30df91,en Manes <ben.manes@gmail.com>, 2015-10-11 19:11:41 -0700, , remove api entirely,,
626,be05012fcb247c0561ce270092c534c4608ff328,en Manes <ben.manes@gmail.com>, 2015-10-11 18:01:59 -0700, , removallistener part primary api lambda generic builder ugly inferred raw type unless specified notification wrapper never evolved add value guava safely remove first step discard wrapper public api next step consider removed entirely,,
627,245ed6a33324a0e4048f6eb220b2e6360f64bb11,en Manes <ben.manes@gmail.com>, 2015-10-11 17:28:19 -0700, , add version,,
628,493e9c98d5f36ee6fd10d51afa9c9a24f92b4314,en Manes <ben.manes@gmail.com>, 2015-10-11 17:19:22 -0700, , remove public access,,
629,9d6352e6671f92899f3283ad92cec1a0f24f0a97,en Manes <ben.manes@gmail.com>, 2015-10-11 17:08:34 -0700, , remove tracing module adoption near optimal eviction policy negates need tracing added capture trace data user longer needed user welcome capture hoc using normal logger feed data simulator,,
630,eb53b8e8ef73d7016af92910f9391ff07fc150b7,en Manes <ben.manes@gmail.com>, 2015-10-11 16:28:24 -0700, , rename jcache copystrategy copier,,
631,c22108de320e1816456694cdbff903cbd1d758e3,en Manes <ben.manes@gmail.com>, 2015-10-11 16:22:14 -0700, , add ability inspect whether stats enabled,,
632,198b48cba582c6f9492fa238f298482198d5405a,en Manes <ben.manes@gmail.com>, 2015-10-11 15:40:34 -0700, , improved eviction handling tinylfu entry weight zero may resurrected mistakenly chosen eviction occur due race choice made concurrently update correctness allows cache used state machine e.g assigning zero weight flight transaction seen custom hack clhm main space tolerates zero weight occur entry weight changed moved eden space entry skipped ineligable eviction mru position occur newly added eden space candidate candidate victim chosen ensures weight exceeded lru entry evicted,,
633,303513ed239a532da22e5555d57b0b8612bef1f4,en Manes <ben.manes@gmail.com>, 2015-10-08 10:35:35 -0700, , add csv reporter simulation option,,
634,0b0ac90f2f529ffe342bc147e59c4f43e6e52555,ilga1983 <gilga1983@gmail.com>, 2015-10-08 15:08:41 +0200, , added policy windowtinycache version tinycache always admit item admitted tinycache admited window tinycache without ghost cache tinylfu random eviction cache limited asscoiativity,,
635,e501303000964f5298f389d44e799c830469f93f,ilga1983 <gilga1983@gmail.com>, 2015-10-08 13:57:16 +0200, , implemented tinycache policy dense hash table tinycache change cache size 512 power two looking number replacement tinycache especially low far tell lot lower policy 372 eviction multi1 trace nice news addition design slower,,
636,2736608cd9acea673c1d365c41b1b03723597de3,en Manes <ben.manes@gmail.com>, 2015-10-07 21:05:05 -0700, , rewrite put use compute discussed previous commit needed resurrecting entry evicted lost race set weight also way simpler version verify correctness lighter variant remap change lose optimization probably help much due writes dominated factor,,
637,7ba750b5f3fea4232bc4f6cbf84f25d09ba9c81a,en Manes <ben.manes@gmail.com>, 2015-10-06 20:18:31 -0700, , perform replace compute block similar issue resurrecting expired value occurs weight zero atomic change weight performed compute block proper fix applied non compute version replace put come clhm feature pre jdk8 issue remains put proven harder solve going alone fixed put almost compute via remap reuse quite work due small difference asserting negative weight happen prior calling writer fix may either modified copy remap flag remap current logic transformed compute call fixing put adding resurrection zero weight handling evictmain required unit test would good possible,,
638,41561862d29e007153a0729267d46847461cbc40,ilga1983 <gilga1983@gmail.com>, 2015-10-06 21:36:21 +0200, , bug fixing simplification tinycache still need think extensively test fuzzy bit logic,,
639,4d5224f379599735fb2ede5d99917c1b7d5ccf1c,ilga1983 <gilga1983@gmail.com>, 2015-10-05 12:59:14 +0200, , efficient implementation random removal policy includes novel method calculate indexing todo replace chain finding algorithm new one,,
640,4467df52115a356e38af1efd9fbaabf07b7966fb,ilga1983 <gilga1983@gmail.com>, 2015-10-04 17:57:28 +0200, , bit naive implementation victim finding correct far test working well still happy lot better,,
641,b7d3c79591bf17b704dea985419e211e409625af,ilga1983 <gilga1983@gmail.com>, 2015-10-03 23:28:18 +0200, , naive implementation correct eviction method tomorrow plan work efficent implementation still rare bug tomorrow,,
642,e11c6c5dbb4def80aecce8c09fbc9094977afa87,en Manes <ben.manes@gmail.com>, 2015-10-02 18:46:52 -0700, , formatting static analyzer fix,,
643,9596fc755fa9e168871f7a9e70d90116de572352,ilga1983 <gilga1983@gmail.com>, 2015-10-02 12:27:23 +0200, , adding tiny table based implementation admission policy work imagine still need bit cleaning,,
644,a52e0601126342c3b10af3d38720b74372f09cfb,en Manes <ben.manes@gmail.com>, 2015-10-01 22:35:40 -0700, , add cache2k simulator,,
645,96cccd5fd7680279cb7eb241104d993bfa5cdfd4,en Manes <ben.manes@gmail.com>, 2015-10-01 19:46:15 -0700, , improve eclipse experience marking folder derived,,
646,6cbb05693b0036d979aee31f5d1a46a3add60e62,en Manes <ben.manes@gmail.com>, 2015-10-01 11:25:12 -0700, , support varying weight tinylfu weight entry may change lifetime previous approach using node weight worked fine single queue lru using multiple queue race visible entry moved eden main queue concurrent update weight could result wrong size calculation update replayed adjusts main queue leaving eden queue incorrect size time eden queue may either shrink grow beyound expected boundary race solution use store policy view weight addition node allows policy adjust correctly however entry removed update may pending order policy weight relied upon since node finalized dead point continue use node weight instead quirk something ran first experimenting lir clhm knew solution time around since cache move entry queue support weight sizing race option either abandon multiple queue considered clhm done infinispan handle maintaining policy oriented view well,,
647,c988d21aee4363d304be659494c46b9e89c942e0,en Manes <ben.manes@gmail.com>, 2015-09-30 22:23:57 -0700, , enable weighted eviction test,,
648,7a3d9200507744841a60c9eecd4904fdb848ad0d,en Manes <ben.manes@gmail.com>, 2015-09-30 19:22:56 -0700, , add main queue warmup enable order test cache warming entry immediately promoted main queue would happen naturally eden queue evicted behavioral change policy advantage fast path used capacity hot entry lower chance eden queue eligable fast path eviction order test enabled observing order ideal frequency sketch would grow due small initial capacity setting sketch large enough making predictable operation,,
649,c25f2bec4a46541879a7fb6ab657edfe26bf7639,en Manes <ben.manes@gmail.com>, 2015-09-30 10:19:48 -0700, , fix test broken policy change,,
650,333432910421b3898f6e5d724331745f0e7d4575,en Manes <ben.manes@gmail.com>, 2015-09-30 03:02:15 -0700, , add infinispan simulator product list,,
651,8df4bbc6fda1f14faf85cc1b59b60d46ca8e1661,en Manes <ben.manes@gmail.com>, 2015-09-30 02:47:32 -0700, , disable test needing updated reflect policy fix,,
652,1783b7ba919632ccc3a5194ada19c6594f188d2f,en Manes <ben.manes@gmail.com>, 2015-09-30 02:41:24 -0700, , forgot increment freq sketch add,,
653,b842cdfc3874792ed28243294d33d0376c9a3fb0,en Manes <ben.manes@gmail.com>, 2015-09-30 02:27:50 -0700, , move random seed setting reuse,,
654,49bad6bf8c20e465106ff8f959046e62f3ab4b45,ilga1983 <gilga1983@gmail.com>, 2015-09-30 11:21:02 +0200, , merge remote tracking branch origin master,,
655,22d3f85946786e355fe0f725f30b0934fc05deda,en Manes <ben.manes@gmail.com>, 2015-09-30 02:22:33 -0700, , cleaned gil commit,,
656,6761e5f99203f78971a7e36f88d8db15c2a5ab71,en Manes <ben.manes@gmail.com>, 2015-09-30 01:49:01 -0700, , add caching product simulator caffeine tinylfu bug since acting like lru need test identify working like stock version guava ehcache2 match lru hit rate expected ehcache3 horrible bad trace verify mistake somehow made hit rate abysmal,,
657,eab75f11cd8bc772b60419244fc50cd7e59e5ab9,ilga1983 <gilga1983@gmail.com>, 2015-09-30 10:21:04 +0200, , revert revert added model future table based frequency sketch reverts commit,,
658,9827a69c561438265a51362c005ebd7f1c068c50,ilga1983 <gilga1983@gmail.com>, 2015-09-30 10:15:48 +0200, , revert added model future table based frequency sketch reverts commit,,
659,15c7ad9b3485eabaaed3c2d19d997dcd90388247,ilga1983 <gilga1983@gmail.com>, 2015-09-30 09:57:03 +0200, , added model future table based frequency sketch,,
660,2d83088df5dea8c102df173d4ee49d336a2ee8bb,en Manes <ben.manes@gmail.com>, 2015-09-29 21:33:43 -0700, , enable test,,
661,49b4a3cae51422984782577b323d693d22ba5d81,en Manes <ben.manes@gmail.com>, 2015-09-29 20:02:40 -0700, , enable validation test,,
662,2dc9fbea1fe6d8799db020102174786f7f891006,en Manes <ben.manes@gmail.com>, 2015-09-29 11:59:23 -0700, , fix charactor encoding problem window,,
663,b863bb6680c93353500b8f36cd6a4a7ad5808f8c,en Manes <ben.manes@gmail.com>, 2015-09-29 00:51:57 -0700, , tinylfu test fix,,
664,e60d716dcf00ecd929ef908009ec1f46421c2964,en Manes <ben.manes@gmail.com>, 2015-09-27 02:28:00 -0700, , tinylfu integration progress early support window tinylfu eviction policy integration break lot test disabled allow reasonably sized commit remaining issue assumption around single access order queue need corrected handling weight new policy test yet started,,
665,71cbf52cf8ae370297aaa1674af43589fe0f1f17,en Manes <ben.manes@gmail.com>, 2015-09-25 23:53:26 -0700, , isolate timing sensitive test separate build task,,
666,a0702aaceb66bb36c8e65aeab36578e597aad359,en Manes <ben.manes@gmail.com>, 2015-09-23 00:12:09 -0700, , policy hit rate measurement lir efficiency replaced stack scanning capping non resident entry dedicated queue part original algorithm scan slow large workload impact hit rate improved wikipedia compactor accept directory instead single file allows taking multiple wikibench file single run instead single subset added chart measurement taken,,
667,65b331b64cb681c865ca265cbb5b3e790cd2e40f,en Manes <ben.manes@gmail.com>, 2015-09-22 12:21:06 -0700, , rename edenqueue windowtinylfu new name better describes policy whereas old name originally stumbled onto configuration thinking way mix policy idea window calculation adjusted ensure zero small cache old calculation allowed gzip trace exhibit tinylfu poor performance calculation match lir need similar hir window optimal,,
668,0c385b48e56c73fda223fb155296859eb186cf6b,en Manes <ben.manes@gmail.com>, 2015-09-21 23:15:52 -0700, , little work new eviction codegen,,
669,79c746815d759c291a199aebc2e2b9b2fba7a416,en Manes <ben.manes@gmail.com>, 2015-09-21 18:54:15 -0700, , retry adding osgi import package,,
670,3e2526d714cf97dcea376f20be9ceb04e13a4d27,en Manes <ben.manes@gmail.com>, 2015-09-21 15:24:34 -0700, , revert add osgi import instruction package sure fails travis run locally retry piecemeal ... reverts commit,,
671,704b1b7eacae1474e7908133fcae4ed77e3e39f6,en Manes <ben.manes@gmail.com>, 2015-09-21 14:07:19 -0700, , add osgi import instruction package,,
672,794e34a1f6aadf4df8acf588965cf42f889511d4,en Manes <ben.manes@gmail.com>, 2015-09-21 09:13:27 -0700, , add missing osgi import package statement fix,,
673,079e7ee260dc2d9d1470789aebfd93c7c315b413,en Manes <ben.manes@gmail.com>, 2015-09-20 19:41:58 -0700, , split cache codegen rule,,
674,dc6d9c6e2f36d785e1d112ab93bafea189c2cfe4,en Manes <ben.manes@gmail.com>, 2015-09-20 18:13:51 -0700, , split node codegen rule,,
675,a782254abed8204f11f6273b10ea746c6ac94da7,en Manes <ben.manes@gmail.com>, 2015-09-19 23:12:02 -0700, , early codegen scaffolding new eviction policy stubbing method field code generated used implement new eviction policy,,
676,ca712daf99784d343a436d07cf3e03b17b521b6e,en Manes <ben.manes@gmail.com>, 2015-09-19 13:57:23 -0700, , ticker may return negative value fix constraint zealous addition annotating api implementation usage depended assumption,,
677,2fe1f3f5eea492959980edd24704343bbb7207aa,en Manes <ben.manes@gmail.com>, 2015-09-18 02:13:53 -0700, , add hash flooding protection test fix optimization random hash seed used per instance attacker construct attack cause cache become ineffective admission policy would retain existing entry additional unit test fix lack coverage showed reset optimization round odd counter eager designed item mapped single counter multiple like larger sample period beneficial divide odd count four size never negative,,
678,23db8366a61bf62dd5bdaabc71d4656bdf0d2be5,en Manes <ben.manes@gmail.com>, 2015-09-17 20:27:26 -0700, , improved hash seed frequency sketch previous seed generated randomly choosing set good hit rate trial seed come established hash function quality schmear higher one would hope result better hit rate trace tested ,,
679,55f4dc5bda20b725e982443d5ec64e17a98be795,en Manes <ben.manes@gmail.com>, 2015-09-16 01:02:18 -0700, , add secondary hash frequencysketch,,
680,0308215a6eb2cb4c0c0560237cf8ad462e755087,en Manes <ben.manes@gmail.com>, 2015-09-16 00:34:13 -0700, , document move frequencysketch cache,,
681,96ff7e0292ee1d17cb9fde19e44ae895f329380a,en Manes <ben.manes@gmail.com>, 2015-09-14 17:22:39 -0700, ," optimize bit countminsketch significant change use unsafe frequency faster reset increment successful faster small gain observed manual loop unrolling increment change helped one case hurt fickle final jmh benchmark number frequency 533,822,666 ops increment 98,869,969 ops",,
682,469426ed9826591d8c0d9e0d5d3941f938d6d6d6,en Manes <ben.manes@gmail.com>, 2015-09-13 23:52:51 -0700, , add bit countminsketch variant tinylfu reduces memory overhead 16th regular size allowing long 512 array represent sketch compact form requires little bit manipulation estimating increment counter also reduces cost reset operation performing reset per iteration,,
683,9124f4f6eea7be95514a1791a813651bd4ede391,en Manes <ben.manes@gmail.com>, 2015-09-06 13:35:19 -0700, , add edenqueue fast path optimization optimization avoids moving hottest entry access useful concurrent varients parameterized impact hit rate evaluated,,
684,cd2fdb81ce9ef76711d812a2cc3d9637de8a7979,en Manes <ben.manes@gmail.com>, 2015-09-05 20:17:58 -0700, , remove reference lir implementation 3rd party version useful development comparison general showed difficult create lir version match reference due subtle aspect paper,,
685,7acab88df01ae2604339d2a5cfb70c6d0e70337f,en Manes <ben.manes@gmail.com>, 2015-09-05 20:14:14 -0700, , add lir fast path optimization optimization void moving hottest entry access useful concurrent varients parameterized impact hit rate evaluated,,
686,34e79370140a590df1ea8806c6fa99c328c804b7,en Manes <ben.manes@gmail.com>, 2015-09-05 15:02:42 -0700, , bound number lir non resident entry paper doe discus bounding number non resident entry relies prunning bottom hoc bounding author reference implementation maximum stack length parameter emulated avoid traversing resident entry non resident queue used instead per jackrabbit version,,
687,a199e3f033b0036508588d7a7a38cd23dd9128ef,en Manes <ben.manes@gmail.com>, 2015-09-05 00:37:58 -0700, , handle jcache expiry returning null duration another quirk spec validated tck expirypolicy may return null indicate expiration time updated,,
688,855b2d5fb4a1a4218e53b38a5e6399be85c3bb3c,en Manes <ben.manes@gmail.com>, 2015-09-04 22:00:16 -0700, , reduce eden space increase hit rate relying tinylfu admission eden space need large enough handle workload like gzip temporal locality low frequency work tinylfu,,
689,3e83411c670ca61a859f0e1ed24e216b847ccd58,en Manes <ben.manes@gmail.com>, 2015-09-04 20:19:41 -0700, , tinylfu admit greater frequency written tinylfu admit candidate frequency greater equal victim turn changing greater nice impact 15.6 26.6 lir 30.4 gli 23.16 30.61 lir 33.6 loop 43.7 lir 48.9 multi2 47.9 48.4 lir 50.1 wikipedia 57.7 57.8 lir 57.1 negative impact minimal following degradation observed sprite 74.9 lir 56.1 56.0 lir 57.4 gcc 91.6 91.4 lir 90.1 multi3 41.7 39.8 lir 44.5,,
690,ddd0da9703c47ad0d3c5db4db96193685cb647e2,en Manes <ben.manes@gmail.com>, 2015-09-03 02:26:59 -0700, , add stats simulator,,
691,cc46e43df1e710ebf6e7652300e27ae454601d32,en Manes <ben.manes@gmail.com>, 2015-09-25 22:20:18 -0700, , release 1.3.3,,
692,0d0530637bc5184ad21f675f37d31598ec82edc4,en Manes <ben.manes@gmail.com>, 2015-09-24 13:05:17 -0700, , allow expired entry resurrected fix expired entry may replaced cache prior evicted maintenance cycle maintenace performed read stale timestamp eviction must validate entry still eviction candidate reported caused excessive eviction short time duration race benign originally thought,,
693,73b444397310cff20a8c2f579797b247c90a85c2,en Manes <ben.manes@gmail.com>, 2015-09-02 20:53:48 -0700, , release 1.3.2,,
694,39615086a310c9cf2c58b1ac70fc7c3fb093b4ff,en Manes <ben.manes@gmail.com>, 2015-09-02 17:11:01 -0700, , return null old value expired putx fix,,
695,2c257b9808ed3360281400202319a4e6d979f25e,en Manes <ben.manes@gmail.com>, 2015-09-01 23:05:53 -0700, , promote hir already top stack comparing multi1 trace version reference output seems hir lir promotion doe occur block already top stack occurs hir accessed multiple time row added stack non resident miss see stated paper though trace matching miss count like sprite one need looked next,,
696,54503f09ec0279ff2c2830459c84176c49654db3,en Manes <ben.manes@gmail.com>, 2015-08-30 23:44:13 -0700, , fix warmup hir block lir policy comparing output reference version discovered warmup hir incorrectly followed change result output small sample still mistake verified running large sample multi1 seeing eviction statistic askew small impact hit rate still try find subtle bug remaining ease comparing output debug format match reference,,
697,520487580ddb6b8984705aaa37702de1a2759a68,en Manes <ben.manes@gmail.com>, 2015-08-30 13:31:38 -0700, , add edenqueue policy inspired tinylfu eden space capture newly added entry tinylfu determines promoted main space eden full allows transient data pas cache highly temporal entry stay hot eden queue non resident trace maintained part tinylfu history rather separate queue approach take advantage tinylfu strong hit rate resolving inability handle short term temporal entry replaces victim cache experiment based similar idea efficient,,
698,89bd8f359268227df60c0f33a46a22e78211b37d,en Manes <ben.manes@gmail.com>, 2015-08-30 04:54:40 -0700, , fix victim cache reliably better baseline,,
699,8eabc0d8a410eadaf2f97f23ba764de05350adfa,en Manes <ben.manes@gmail.com>, 2015-08-30 01:08:42 -0700, , finish simulator lir implementation version exceeds hit rate compared reference implementation diverge paper often mistake version closest version provided author appears slight difference believe bug code per paper difference negligable remains two pending task left resolve maximum number non resident entry must bounded paper discus requirement author version doe restricting length jackrabbit version separate non resident queue capped approach chosen size configurable jackrabbit version includes optimization hottest lir entry reordered read improves concurrency hypothetically minimal impact hit rate technique implemented percentage configurable experimented find optimal value,,
700,6dfaa6580de22e9816ec90d622c640543d4461d2,en Manes <ben.manes@gmail.com>, 2015-08-29 18:16:21 -0700, , progress simulator lir policy appears correct based paper comparing step reference implementation however different hit rate implementation must investigated appears others prune stack eviction demoted lir entry may hirs seems description paper improves hit rate next step see get hit rate internal state author version java version match see reference version better adapt change renamed trace file consistency named using format name .trace.gz,,
701,0b6996f36c94b1ca2ed2d3c3afe3069695fb9ef4,en Manes <ben.manes@gmail.com>, 2015-08-29 07:00:11 -0700, , add comply pmd rule,,
702,c77db8f4102a22ed6fd15dfbd7555fbab8c1b9bd,en Manes <ben.manes@gmail.com>, 2015-08-28 04:15:14 -0700, , resolve findbugs warning,,
703,98d4fcad2e8a5c5d7612136269496b3e01b0bae5,en Manes <ben.manes@gmail.com>, 2015-08-26 16:12:12 -0700, , add clockpro based pyclockpro port,,
704,616415a86c9c29c0f47d22a63201b43c0fc85882,en Manes <ben.manes@gmail.com>, 2015-08-25 23:01:00 -0700, , random touchups remove unnecessary async fix build etc,,
705,c03ca9fa5e8efa623a0cc506cc7959df8ed2c3ac,en Manes <ben.manes@gmail.com>, 2015-08-18 11:47:16 -0700, , minor clean ups tinylfu pull request,,
706,492d8ff4f4cff6f1d4d5f43163e46253cea63a61,ilga1983 <gilga1983@gmail.com>, 2015-08-16 21:37:40 +0200, , completed simple tinylfu implementation based conservative update sketch tinylfu fully implemented parameter played,,
707,6a272be0d5885bd3c560d751353d903366b9a25b,ilga1983 <gilga1983@gmail.com>, 2015-08-18 14:01:03 +0200, , merge branch master http github.com ben mane caffeine,,
708,ecc1720b9828185b150e1c2431d003e65aec02d1,en Manes <ben.manes@gmail.com>, 2015-08-17 00:52:55 -0700, , early pas lir policy simulator first pas issue remaining need addressed goal gain familiarity algorithm adopted enough understanding implement properly test secondly alternative implementation show work needed find optimal value tuning parameter need configurable simulator implementation blindly follows paper issue first paper discus making lhirs sized done yet second number non resident entry capped paper doe discus detail third jackrabbit optimization optional configuration see effect hit rate,,
709,c70dd8e89030f5bec8b4d7c6435117484bfb024d,en Manes <ben.manes@gmail.com>, 2015-08-17 00:52:55 -0700, , early pas lir policy simulator first pas issue remaining need addressed goal gain familiarity algorithm adopted enough understanding implement properly test secondly alternative implementation show work needed find optimal value tuning parameter need configurable simulator implementation blindly follows paper issue first paper discus making lhirs sized done yet second number non resident entry capped paper doe discus detail third jackrabbit optimization optional configuration see effect hit rate,,
710,5bf093020f30b063b5d2be808e289644ea03bff3,en Manes <ben.manes@gmail.com>, 2015-08-15 01:51:42 -0700, , support arc trace file format,,
711,b2e52b237b8d746382239e7e57a8c6c9e45a0a11,en Manes <ben.manes@gmail.com>, 2015-08-12 12:43:24 -0700, , fix reading tace file simulator window,,
712,88c7565fa356c1f5112a3ee552b1a890f39faa9c,en Manes <ben.manes@gmail.com>, 2015-08-12 09:27:59 -0700, , add better simulator error handling previously error would always exit immediately would print invalid report exception exception printed application terminates,,
713,ddd9bd0174e04850758c565a9f9938823e0150ca,en Manes <ben.manes@gmail.com>, 2015-08-11 19:04:26 -0700, , fix window build issue bad file encoding due copying pseudo code paper jimfs memory path throw exception window,,
714,ceab65716f43dd9113dd12b4c444fbd0c33081a5,en Manes <ben.manes@gmail.com>, 2015-08-08 00:17:19 -0700, , jcache tck bug fixed change workaround tck prone race due assuming asynchronous action may occur result asynchronous state intercepted test due poor socket handling previously build tried isolate avoid leaking fix code jsr actively maintained since bug ignored promote change implementation,,
715,04f201ae66a90c2f3d73c476ef2f237660c73bac,en Manes <ben.manes@gmail.com>, 2015-08-05 21:49:07 -0700, , simulator mru policy never evict added entry previously mru implementation flaw linked policy inserted element mru position moved accessed entry lru position eviction awkward wrong order consistent victim taken mru position neither linked sampling version select added entry victim mru admission policy since would always reject new entry full definition best find policy prefer keep recent entry insert evict rather evict insert effect hit rate,,
716,a3cccf17d4bc90fc6e7395196d3dc647715135ad,en Manes <ben.manes@gmail.com>, 2015-08-03 22:04:40 -0700, , add cart policy simulator,,
717,2617cdfa9cb03da41bbe5059bca1c085ed5c5aed,en Manes <ben.manes@gmail.com>, 2015-08-03 19:39:31 -0700, , add car policy simulator,,
718,4180ad52a3d164a865078bee27cad3ec623d8cc1,en Manes <ben.manes@gmail.com>, 2015-08-01 23:39:02 -0700, , add tuqueue policy openbsd memcached simulator,,
719,7ca9dde9f62525ae648fe42c3778d5fa22e4e64f,en Manes <ben.manes@gmail.com>, 2015-08-01 00:49:52 -0700, , fix slow test task running slow test slow test task incorrectly filtered resulting running small subset referencetest test resulted slight contract difference guava caffeine previously caffeine reported true asmap .containskey key value entry present guava checked condition returned false caffeine match guava report false caffeine test relied behavior assertion use exact equally valid approach thankfully build mistake small due running many test ide development running whole test class verify guava bug fix identified problem,,
720,e1e6e4eca9bedf71c22463c21e7ea8532c1f41d7,en Manes <ben.manes@gmail.com>, 2015-07-30 23:24:06 -0700, , victim cache simulation cache split primary secondary layer eviction policy idea primary layer best handle recent entry high temporal locality secondary layer best handle long term entry track frequency thus use small lru backed fifo tinylfu victim cache general seems stabilize two policy lru degrades sharply looping workload full scan whereas tinylfu degrades high temporal locality combination retains stable moderate improvement lru without major drop suffer also without sharp gain tinylfu provide,,
721,4125dbba31e2974d6e2a1ad2a293d3d033cd3883,en Manes <ben.manes@gmail.com>, 2015-07-30 09:39:26 -0700, , add arc algorithm simulator,,
722,4d14d499f82c707b87702b6c026bfdb01d16c393,en Manes <ben.manes@gmail.com>, 2015-07-27 22:25:17 -0700, , quick hack lfu mfu simulator pretty ugly exists completeness used practice lot readability improvement needed make bit nasty frequency list used node chain cache entry miss entry created added lowest frequency chain hit entry moved next higher frequency chain eviction needed victim entry chosen lowest lfu highest mfu chain ensure operation empty frequency chain removed new one added needed list cross cut hash table map key node,,
723,5c7a08f529781728aaa06283f415819d29ea0f15,en Manes <ben.manes@gmail.com>, 2015-07-26 17:18:34 -0700, , simulator formatting doc report improvement,,
724,1b8297575ccfeb17556a723179323c01c812c7ee,en Manes <ben.manes@gmail.com>, 2015-07-26 04:07:26 -0700, , strengthen visibility order addition,,
725,7e82e1ef21904b8ec025fcd24eea0454833731d9,en Manes <ben.manes@gmail.com>, 2015-07-25 22:20:12 -0700, , add optimal cache simulator unlike policy opt must run post processing step order evaluate full usage history amount work could performed incrementally parallel policy miniscule due terminal entry 10m policy doe know terminal entry seen must wait entire trace recorded careful use data structure sequential time even worse case large trace second,,
726,e4da534b18af83250247d357b656b3096800dcaa,en Manes <ben.manes@gmail.com>, 2015-07-25 16:27:37 -0700, , add segmented lru policy simulator,,
727,2e1a6a4f0598dc3eae2266714c144480d3ecf922,en Manes <ben.manes@gmail.com>, 2015-07-24 22:24:00 -0700, , simulator clean,,
728,9de49dc5b842784dd5ee47acabf2e1c6b5c346ff,en Manes <ben.manes@gmail.com>, 2015-07-24 21:34:30 -0700, , batch event published simulator significant amount time spent forkjoinpool simply dispatching work batching event remove profiler,,
729,a4a439325478d07df6a39dcc74c1bc4fd3db114f,en Manes <ben.manes@gmail.com>, 2015-07-24 19:18:53 -0700, , add algorithm simulator,,
730,db0fa7e3fa070487165d1e7b4d338b4b9d252059,en Manes <ben.manes@gmail.com>, 2015-07-24 02:16:45 -0700, , avoid redundant completion call due forkjoinpool retries busy system descheduling thread performing completion step result forkjoinpool retrying another thread result test failure best guard behavior,,
731,7c8203d92d4b9935b1088d192536ef8562e20514,en Manes <ben.manes@gmail.com>, 2015-07-24 01:04:59 -0700, , add jackrabbit lir cache comparison,,
732,867dc80c7798781f9bf9fb5ae0fd21edf9143593,en Manes <ben.manes@gmail.com>, 2015-07-20 03:45:46 -0700, , add wikipedia request tracing simulator request 2007 2008 provided wikibench project trace file hour consuming 200mb compressed 1.2gb raw reduce size simulation time file preprocessed replace url numeric discard unused column reduces trace 20mb compressed 48mb raw due size file checked,,
733,4fe8395f7fa2222d51b34a87a7709ed7dc210442,en Manes <ben.manes@gmail.com>, 2015-07-18 03:51:07 -0700, , add program address trace,,
734,7a2e3bedbd6796f7a26497719c0ffe7c79328630,en Manes <ben.manes@gmail.com>, 2015-07-18 01:57:57 -0700, , add lir trace file simulator,,
735,303e800346f448a6bc61d960849c00c7a8869e3e,en Manes <ben.manes@gmail.com>, 2015-07-18 00:14:31 -0700, , simplified simulator eviction policy implement simple interface making easier add evaluation actor logic decoupled serf broadcasting event concurrency large trace easy add external trace like wikipedia real world data,,
736,48c65f1bcc095381f8e7a285980b3394b1af419f,en Manes <ben.manes@gmail.com>, 2015-07-17 18:36:43 -0700, , added tinylfu admission policy simulator eviction policy improve upon lru retaining usage frequency addition recency scan resistent keep longer history advanced policy non resident entry cache ghost entry key metadata like reuse distance lir clockpro tinylfu record frequency probabilistic structure newly added entry rejected historic frequency policy chosen victim e.g least recently used serf purpose non resident entry without keeping policy making much simpler augment policy current implementation countminsketch author tinytable structure experimented yet memory cost data structure need evaluated parameter optimized early testing show approach offer substantial improvement hit rate regardless eviction policy,,
737,eff6521279789e8a8c53e9b1ac36329082309256,en Manes <ben.manes@gmail.com>, 2015-07-15 20:01:38 -0700, , restore optimization removed debugging optimization removed debugging turned unrelated memory barrier produced impact performance provide visibility improvement since race tolerated acceptable target platform,,
738,744c8448d7218856a551b08838de993680fcc7f0,en Manes <ben.manes@gmail.com>, 2015-07-15 00:02:59 -0700, , use jvm arg reliably perform soft reference test soft reference difficult test due requiring major garbage collection typical hack like filling heap work reliably bit jvms algorithm behaves differently meant relied weak reference allude whether soft reference cache worked correctly jvm flag instructs collector retain zero soft reference retain millis per megabyte make soft reference behave weak reference strong reference exists test reliably perform assume reference cleared note running test referencetest ide requires flag added jvm argument launcher flag added build may honored ide,,
739,2b7e5aba84cdb5c9eb423f10c36404205a506c60,en Manes <ben.manes@gmail.com>, 2015-07-13 22:14:28 -0700, , release 1.3.1,,
740,220fc862d0ec662619fb934ba14cbdace7ea9571,en Manes <ben.manes@gmail.com>, 2015-07-13 18:16:29 -0700, , fix bad pom generated fix tracing api test artifact consumed caffeine tracing async project order share test utility due gradle generating maven pom dependency non deterministic order resulted maven resolving dependency incorrectly instead allowing test compile scope maven ignored compile scope consume transitive dependency downstream project utility class moved caffeine test async usage rewritted hoc verified pom generated includes compile scoped dependency,,
741,ba81c3603c489bcd7086197bff22406d67ed21cf,en Manes <ben.manes@gmail.com>, 2015-07-13 09:32:37 -0700, , silently publish jcache event slight change ensure doe ignore event already recorded however want ignore event occuring background executor since type eviction user facing may asynchronous required blocking call user facing thread,,
742,6fce9acefe286c10386061fc698f3b0582a0120d,en Manes <ben.manes@gmail.com>, 2015-07-12 17:43:52 -0700, , release 1.3.0,,
743,5ee68b7d8913a047563efcf352e0b688b96dbe73,en Manes <ben.manes@gmail.com>, 2015-07-12 17:11:09 -0700, , prepare v1.3.0 release,,
744,cb936aecf507804a8752ab1beefa22e924c2a5d5,en Manes <ben.manes@gmail.com>, 2015-07-12 16:38:42 -0700, , finalize cachewriter support,,
745,dc6e4e8c25920c95b67b02195476cdcd4bc27b8a,en Manes <ben.manes@gmail.com>, 2015-07-12 12:31:14 -0700, , notify jcache listener key order eviction specification requires listener notified sequence key operation cache like jsr107 implementation caffeine notifying entry order due eviction event published asynchronously write caffeine cachewriter used publish eviction atomically cache update jcache listener always receive event proper sequence,,
746,ea286bb089ff04ba6bf1141ac5fd352f3e64b700,en Manes <ben.manes@gmail.com>, 2015-07-11 23:11:48 -0700, , full reference caching test coverage,,
747,cdfcabf29f1caa4d8816220da113d9c13ce739f9,en Manes <ben.manes@gmail.com>, 2015-07-10 10:12:13 -0700, , reference caching test,,
748,82d5008cb7c40f9de538cd15be8421b452560cc8,en Manes <ben.manes@gmail.com>, 2015-07-10 00:11:25 -0700, , early pas towards reference test full coverage,,
749,588d9b56bb2833dba944ef9cc972543d26f47563,en Manes <ben.manes@gmail.com>, 2015-07-09 20:36:33 -0700, , share common expiration test added support test declare need either access write expiration generator filter combination neither enabled similar requirement needed future reference test added well remove lot bloat due duplication metadata change,,
750,c23bbb8cd78bbc6e9fcdd704dddb35dfd9389f22,en Manes <ben.manes@gmail.com>, 2015-07-09 10:09:43 -0700, , test fix,,
751,1c8785a7e5bc11394464092351782bb0b244b78c,en Manes <ben.manes@gmail.com>, 2015-07-08 23:19:39 -0700, , expiration weight test fix,,
752,bf2bb4d862da68b8bc5ca3ec43fb6e508202c936,en Manes <ben.manes@gmail.com>, 2015-07-08 01:44:07 -0700, , expiration test fix,,
753,cb87e2f45a175479897dee2f00536e01cfbf508f,en Manes <ben.manes@gmail.com>, 2015-07-06 23:31:06 -0700, , progress writer failure test,,
754,2d180301ec4d886257e71c1c69d9fe5720e00f69,en Manes <ben.manes@gmail.com>, 2015-07-05 21:13:16 -0700, , cachewriter test support,,
755,c7827f59cee3384642a2f09475cd16b15e57f6ef,en Manes <ben.manes@gmail.com>, 2015-07-04 21:07:05 -0700, , remove excessive system.nanotime call reading current time prohitively expensive due requiring operating system call nanosecond resolution slow window always reading hardware clock system optimized millisecond resolution periodically updating shared field linux optimized call equally performant unfortunately millisecond resolution poor source duration calculation nanotime recommended default either way slow time source justify removing excessive call ticker used expiration statistic calculate duration enabled default implementation delegate system.nanotime neither feature used constant value returned avoid clock penalty previously excessive call made due either redundant expiration ticker read within single cache operation unnecessary read expiration statistic enabled solved separating two ticker usage specific method abstraction like guava builder ticker used stats allow custom implementation reduce clock penalty,,
756,11b9bfba91793b11617b09bd8a865838a78e3a73,en Manes <ben.manes@gmail.com>, 2015-07-03 20:35:40 -0700, , another cachewriter test increment,,
757,2d85ff18b379b28e1274208c16e437786984e054,en Manes <ben.manes@gmail.com>, 2015-07-03 10:26:55 -0700, , little work towards cachewriter testing,,
758,b51ba118384922781408da0d54b29e585aa8432a,en Manes <ben.manes@gmail.com>, 2015-07-02 23:16:34 -0700, , basic idea cachewriter verified existing test,,
759,cefa60ebfa6cbef8ea63b88b88ed986048601a78,en Manes <ben.manes@gmail.com>, 2015-06-27 17:19:50 -0700, , fix visibility race appears fail rarely multithreaded test case field made visible due set prior publishing oddly null npes likely due reordering move store transfer despite memory barrier block compiler optimization enforce ordering field volatile lazyset minimal impact read write performance adding back beta annotation want time let bake feel confident subtle race,,
760,73cd2381d52b81c9297e88b54057e6dc2b77194e,en Manes <ben.manes@gmail.com>, 2015-06-27 16:51:29 -0700, , upgrade hamcrest new coordinate,,
761,26ca11c0126864a58d27887f53dfbc13d19de0f8,en Manes <ben.manes@gmail.com>, 2015-06-25 10:06:33 -0700, , add basic cachewriter validation existing test,,
762,64d1ecb845c012d4202ab4da4a649305f80b9701,en Manes <ben.manes@gmail.com>, 2015-06-24 21:49:07 -0800, , cachewriter test scaffolding test yet,,
763,93884f623c58e460f74bfa13c19b70c42002d465,en Manes <ben.manes@gmail.com>, 2015-06-23 01:07:17 -0700, , declare bnd export package explicity fix wildcard unintended consequence packaging tracing api class caffeine jar resulted duplicate tracing package required dependency generally problem result warning making fat jar,,
764,776f3c515414c808e2c9e8de6c967aa7607554a9,en Manes <ben.manes@gmail.com>, 2015-06-20 18:25:10 -0700, , remove lazy queue development plan completing lazy queue experimental mpmc queue optimistic clq included combining arena race never resolved likely queue contract could honored due optimistic property removed beta annotation api stable,,
765,cff8ab848357b5c940d11be10a6b399bb9023f2e,en Manes <ben.manes@gmail.com>, 2015-06-18 01:49:13 -0700, , unifying compute merge previous implementation remap method complex due handled expiration old assumption synchronization ordering notifying early quirk rewrite add cachewriter support provided opportunity better share code surrounding implementation matured,,
766,3449b7ffe59f845a2d00cc707fc94e921ca9d8c8,en Manes <ben.manes@gmail.com>, 2015-06-15 19:25:33 -0700, , cachewriter similar change computeifabsent rewrite careful avoid race could return wrong result due expiration,,
767,15b72307fd1dc47e03ab7ab351c98c95bd3b9ba2,en Manes <ben.manes@gmail.com>, 2015-06-15 07:57:52 -0700, , fix build due broken clear change,,
768,c25d137fe28fcff7c58890fc007304ad3d7bf965,en Manes <ben.manes@gmail.com>, 2015-06-14 22:30:13 -0700, , computeifabsent cachewriter previously prescreening validation cleaning entry needed evicted expired really done within computeifabsent refactored use map.compute handle present invalid node done provide correctness straightforward cachewriter integration,,
769,cc21a1b046bfaca881396b0d9b82df1cc3c36e1b,en Manes <ben.manes@gmail.com>, 2015-06-14 17:29:39 -0700, , early pas cachewriter support,,
770,eb5b876a1834ead8db5f04fdc9c115a3c91fa87f,en Manes <ben.manes@gmail.com>, 2015-06-14 12:05:14 -0700, , added support cachewriter,,
771,87ef37efb1fa8f46e2f9cb7580fa43010c9f7e60,en Manes <ben.manes@gmail.com>, 2015-06-14 03:31:27 -0700, , fix javadoc refresh always asynchronous,,
772,07967389f4563151cc241b35b167fcf58f01aa72,en Manes <ben.manes@gmail.com>, 2015-06-12 12:57:48 -0700, , added cachewriter tiered storage instrumented yet cachewriter enables write write behind caching entry persisted caching abstraction useful layered cache heap cache backed file heap cache also support victim cache evicted entry written secondary cache rather fully discarded cache yet instrumented support writer writer must called within atomic block hash table operation writer fails mapping change ignored exception propogates caller requires invasive change addition unit test,,
773,4168e8eb211e64dba01ded7b9d38be57a87b7742,en Manes <ben.manes@gmail.com>, 2015-06-09 10:06:29 -0700, , avoid skewing compute benchmark,,
774,b2b3d1bc4e1e61910a8682dee9847adf2bddb1c9,en Manes <ben.manes@gmail.com>, 2015-06-09 03:59:35 -0700, , add buffer variant spacing avoid false sharing version provides direct control cache line behavior avoid false sharing ensuring line used one element atomicreference version may allow reference per line greater chance conflict core machine performance equivalent tested core machine see change valuable,,
775,963f3afa532a88f5737faa3ffb0f924005f49c5a,en Manes <ben.manes@gmail.com>, 2015-06-08 11:34:39 -0700, , evict entry value different referent found check required update value would cause referent enqueued entry evicted hygenic reference cleared eagerly avoid enqueued thread,,
776,9e1c80cf8b5552af0b4fdddc726e395f33e0eebe,en Manes <ben.manes@gmail.com>, 2015-06-05 02:30:24 -0700, , remove unnecessary jcache call,,
777,f787eb9188164a1a6ee07df0eca2edaf2f5529b5,eans <jens.wilke@headissue.com>, 2015-06-01 16:57:07 -0700, , add,,
778,31bcb8beed68bf92a35484767bb16a73a45331d4,en Manes <ben.manes@gmail.com>, 2015-05-30 20:09:47 -0700, , add cache2k benchmark,,
779,4d636ef807ab9265e66576ec063179e557eafcce,en Manes <ben.manes@gmail.com>, 2015-05-26 01:50:38 -0700, , use provided scope jsr305 dependency scala 2.11.1 longer fails parse class file missing annotation 7751,,
780,4a17d40de08538a14f372c45dd83e19cb368e67b,en Manes <ben.manes@gmail.com>, 2015-05-25 15:33:45 -0700, , improved homepage documentation,,
781,0918430d0255c024c5f8a8f1f29dd8ef43c13d72,en Manes <ben.manes@gmail.com>, 2015-05-25 04:33:38 -0700, , add tear phase benchmark,,
782,520ee5ba17778d503ba1fa753ddc43d7bb59ca40,en Manes <ben.manes@gmail.com>, 2015-05-21 17:59:01 -0700, , clean buffer padding algorithm implementation use buffer interface padded make easier experiment optimization copy code directly boundedbuffer version used cache padding field name updated unique instead shadowing inheritted copy stylistic due previous laziness copying padding,,
783,f4b5f56616b2ab323295d4a04f0ef0c5bff39000,en Manes <ben.manes@gmail.com>, 2015-05-20 03:34:06 -0700, , fix error prone compilation failure latest release,,
784,b0fb33df7d77f372c93b200b54629545273f2a68,en Manes <ben.manes@gmail.com>, 2015-05-18 15:19:07 -0700, , add contributing.md cla pull request check,,
785,3b051ff519c04c7df450e4ea86eaf82d1dfa3c9b,illiam Burns <mudokonman@gmail.com>, 2015-05-18 15:02:11 -0500, , updated infinispan cache specific,,
786,75e625f54cdd63818989dcbff1aa5849d06b296c,en Manes <ben.manes@gmail.com>, 2015-05-15 16:39:48 -0700, , improve zipf distribution usage previously number item equalled sequence length unknown number request performed benchmark distribution fewer item better demonstrate power law behavior 4th item 32k sequence,,
787,debe0a89f911ec9ad749809815680864ffed20ff,en Manes <ben.manes@gmail.com>, 2015-05-14 06:29:56 -0700, , add ehcache infinispan benchmark comparison note infinispan rewrite use backport jdk8 chm decreased performance previously used guava like cache rewrite lock free deque cause contention thread try move element tail resulting sequential access ehcache rewrite backport minor gain due heavy use compute method resulting lock contention,,
788,a82346f440b3b87f4f1769ebaa7e8ede20c66a9e,en Manes <ben.manes@gmail.com>, 2015-05-12 02:16:51 -0700, , replace enum int drain status minor improvement memory usage read write benchmark replaces megamorphic method dispatch inlined switch statement overall hurt,,
789,bd7892b89934b9505e9646ba5e171a665160d497,en Manes <ben.manes@gmail.com>, 2015-05-11 19:52:31 -0700, , add write pre screening optimization optimistically fetch entry lock free falling back atomic putifabsent insert found add small penalty new entry cheaper existing entry node created observed overhead blocking putifabsent call made unless required add 20m ops write benchmark,,
790,67de6b5a05ebb0e3ec4b1b2218c8a4deecf7c2f6,en Manes <ben.manes@gmail.com>, 2015-05-09 19:34:07 -0700, , add javadoc badge,,
791,8c22834ff7a80c4d0c4606e73bcf80aca9ac6ebc,en Manes <ben.manes@gmail.com>, 2015-05-08 21:36:14 -0700, , release v1.2.0,,
792,d11df1aefd2be1ad72fbac4ce3405f877df18452,en Manes <ben.manes@gmail.com>, 2015-05-08 19:20:24 -0700, , pad drain status field profiling show field hot especially last change avoids maintenance penalty calling thread padding field read performance increased due avoiding false sharing cache line,,
793,1bbfc86c1f7a302a6a0ef7fff81bb166cd3c384f,en Manes <ben.manes@gmail.com>, 2015-05-08 03:39:00 -0700, , perform cache maintenance asynchronously default periodic cache maintence aka cleanup amortorized calling thread read write avoid lock contention spread penalty draining read write buffer asynchronous design predated java jvm wide fork join common pool change delegate maintenance operation configured executor thereby reducing latency incurred application thread custom executor defined reentrant lock must used slightly slower custom non reentrant lock caller run policy may used resulting recursive lock degrading previous model appears improve overall performance due benchmark thread penalized primarily observable reducing latency throughput application slightly slower read benchmark okay old throughput repeatable previous revision perhaps due correctness fix investigated separately,,
794,f3b7900633c3919db0f07524fdc3fbbeb2e34101,en Manes <ben.manes@gmail.com>, 2015-05-07 18:50:54 -0700, , disable test cllq found race prototype package private stable,,
795,4ec042446ad76ae68120137d3bb9515901d6a11d,en Manes <ben.manes@gmail.com>, 2015-05-07 16:27:24 -0700, , extract trace format logic event object data object include logic reading writing particular file format done simplicity hashing detail refactored api release cosmetic fix deprecated method removed version 2.0.0,,
796,30ef9a911ad9e74f8100465122baa24a691db12f,en Manes <ben.manes@gmail.com>, 2015-05-06 19:30:34 -0700, , remove unnecessary store store memory barrier previously using store store relaxed write lazy visibility normal store acceptable rely assumption visibility delayed ordered proceeding memory barrier primarily lock released store piggy back full memory barrier case access write timestamps metadata best effort enough store store barrier necessary,,
797,e0feefe8a38e11bee48fe37cca98d9d79e4b97a9,en Manes <ben.manes@gmail.com>, 2015-05-06 00:35:01 -0700, , jcache expiration correctness reviewed jsr107 spec implementation found oversight unfortunately tck poor quality provides shallow coverage specification making useless development perspective product branding feature checklist http docs.google.com document edit usp sharing,,
798,1f4e7c5d70d05b239fbef4bb0e63e7d11aa8e167,en Manes <ben.manes@gmail.com>, 2015-05-05 01:52:26 -0700, , hygenic clear,,
799,78c61fbf879e05e5c0da5ffa9dc75b449a0c8ad0,en Manes <ben.manes@gmail.com>, 2015-05-04 02:38:30 -0700, , optimization concurrent stack previously stack lazily removed deleted element leaving bubble interior element deleted remove object iterator.remove slight disadvantage increasing likelyhood node resides old gen allowing uncontrolled growth dead node deletion remove stack try unlink deleted node traversal eagerly sweep clear bubble may left place due concurrent traversal conflicting next field doe need volatile due optimistically unlinked always safe traverse due resulting similarity doug lea abandoned concurrent stack backoff node unlinking logic modelled consistent design,,
800,fe83409b62ec5387de8b91a397812b6e89495eba,en Manes <ben.manes@gmail.com>, 2015-04-29 19:05:26 -0700, , faster alternative clq optimistic queue next field lazily updated appending fixed removal traversal combining arena used improve performance multiple producer appending queue concurrently implementation provides bulk removal element,,
801,6a30c7bf8b81129fee1092615d2cba8f71e624d0,en Manes <ben.manes@gmail.com>, 2015-04-21 17:03:24 -0700, , minor optimization,,
802,a1bdabd0dad6087fd0513a428ed2fb020b7208ec,en Manes <ben.manes@gmail.com>, 2015-04-19 17:31:33 -0700, , touchups,,
803,2a9ae9b017ff7f2c3112a10504e09f6e3bce2ab2,en Manes <ben.manes@gmail.com>, 2015-04-18 09:25:08 -0700, , stack pop discard removed element,,
804,712244b7b3e49360cff4076f3a72dc6615b52de2,en Manes <ben.manes@gmail.com>, 2015-04-18 09:07:41 -0700, , release v1.1.0,,
805,2de80ef6fb380ebf71f784b20e5b3ebf35ee15de,en Manes <ben.manes@gmail.com>, 2015-04-18 07:51:00 -0700, , added stack multi threaded test extracted common thread code reuse,,
806,77721457b86278f6851321c557030d76445f6ab2,en Manes <ben.manes@gmail.com>, 2015-04-18 06:06:24 -0700, , rewrote stack support elimination combining backoff strategy eliminaton cancel opposite operation push pop combining merges similar operation push batch operation use arena transfer element thread backoff strategy stack top reference contended failed greatly improves scalability reducing number thread contending shared reference approach taken much simpler previous dec paper algorithm alternative rely multiple arena state model different scenario version arena slot either empty full consumer may receive multiple element mimic producer taking one element greatly simplifies dec algorithm resulting higher performance despite penalty incurred consumer producing,,
807,df9ac138f09ec3a03bfa5e9811b9428915e6fd61,en Manes <ben.manes@gmail.com>, 2015-04-17 18:17:08 -0700, , ensure consumer visibility waiting producer addition complete fixed,,
808,be221139d54a6ef1217bbac4cd50df5eb0e5fb23,en Manes <ben.manes@gmail.com>, 2015-04-09 23:34:58 -0700, , pad read write counter ring buffer,,
809,ef22ce3f52b437fd81ca6f4dff21afc312756835,en Manes <ben.manes@gmail.com>, 2015-04-09 20:00:38 -0700, , use scq cache write buffer implementation,,
810,43c145a7e2b4d0b77006884e327e9a67a516aa37,en Manes <ben.manes@gmail.com>, 2015-04-09 18:22:47 -0700, , add head tail padding,,
811,8b64e61590655a4c14e1865726b6ffc88ace947c,en Manes <ben.manes@gmail.com>, 2015-04-09 04:30:15 -0700, , add combining arena single consumer queue close,,
812,610ea88a113211c84ad073e31ef4f5fd0515bc5b,en Manes <ben.manes@gmail.com>, 2015-04-06 04:09:21 -0700, , minor touchups,,
813,2755f7d42d11f063275d186cf1287173b7ba91b2,en Manes <ben.manes@gmail.com>, 2015-04-03 21:23:00 -0700, , cache lambda garbage observed profiling done jvm,,
814,c78051f6eff8d89d50f56a85fae299f73648bf35,en Manes <ben.manes@gmail.com>, 2015-03-30 13:20:47 -0700, , release v1.0.1,,
815,a419a4101d5e7951b72b7cf8691c50ec65702a13,en Manes <ben.manes@gmail.com>, 2015-03-29 21:06:23 -0700, , dynamically size read buffer based contention previously read buffer consisted fixed number segment consisting bounded ring buffer provided performance heavy load cost high memory cache created cache heavily contended wasteful especially many constructed fixed cost replaced dynamic approach start single buffer expands needed upper limit result number read buffer high load dramatically reduces memory usage approach based j.u.c.striped64 provides mechanism java high performance bit atomic counter,,
816,bb846eb3b26bb33a9b1222a52ec75bf46e58fdf8,en Manes <ben.manes@gmail.com>, 2015-03-29 11:55:39 -0700, , add fastflow based buffer strategy,,
817,4b75e4dd051dd37cc5a89d1abb78ffcf32bbf84b,en Manes <ben.manes@gmail.com>, 2015-03-29 05:06:24 -0700, , fix racy test caffeine async default,,
818,abb79e8ca0390b47a0703d45be427200fe6056ee,en Manes <ben.manes@gmail.com>, 2015-03-29 04:28:21 -0700, , use simpler faster ring buffer implementation previous approach used ptl style algorithm simple hack replace non strict lossy buffer sequential implementation original used clhm allowed garbage element remain due cache used high throughput environment general purpose cache caffeine avoid retaining garbage entry buffer throughput unknown ptl workaround ideal created garbage placing ticket array location boxed long replaced classic algorithm watch two counter try append full garbage free,,
819,5783fed0c2b74727ae4371afde2c11437c47efbf,en Manes <ben.manes@gmail.com>, 2015-03-29 03:15:27 -0700, , added simple ring buffer strategy completeness,,
820,f5c9230df1da62f0ff476354b743be01868c031e,en Manes <ben.manes@gmail.com>, 2015-03-28 23:23:47 -0700, , relaxed constructor write volatile key field,,
821,6294e269ab49c3ccdfa88762df350ac206db702a,en Manes <ben.manes@gmail.com>, 2015-03-28 19:14:54 -0700, , minor test refactorings,,
822,839caea7def58c68d504f16561d4a71ffe54e00b,en Manes <ben.manes@gmail.com>, 2015-03-27 23:34:03 -0700, , detect entry computeifabsent refactored optimize large method per jitwatch detection added handling entry collected recomputed due guava implementation executor return new value iff caller triggered refresh therefore computed new value old value returned caffeine delegate work since spec restrictive updated test aware optional async behavior,,
823,3829a0a1ba26407b5b1f30a4f213dae62d98072c,en Manes <ben.manes@gmail.com>, 2015-03-27 16:55:28 -0700, , avoid long.valueof micro optimization profiling showed valueof taking noticeable fraction due jls cache check useful 127 writes segment always create boxed object,,
824,9913df06320be6b3e37bab3eab2b5444b8e733ee,en Manes <ben.manes@gmail.com>, 2015-03-27 03:51:17 -0700, , jcache coverage,,
825,788594fc2683f2f4dae6238a60f8924c92f88b2a,en Manes <ben.manes@gmail.com>, 2015-03-26 02:30:18 -0700, , jcache test serialization strategy,,
826,3e24ef2099bd89d0eafda789693dc5c0cd40f6aa,en Manes <ben.manes@gmail.com>, 2015-03-26 00:35:52 -0700, , add test jcache externalized configuration,,
827,1c7cde1977c9d478f6996c7742db22ee2173367f,en Manes <ben.manes@gmail.com>, 2015-03-25 21:31:46 -0700, , test event dispatcher,,
828,2787a26034c05dacbde6c585626820de6a370ad3,en Manes <ben.manes@gmail.com>, 2015-03-25 18:13:42 -0700, , increase jcache test coverage found fixed listener notification bug,,
829,4e44304e719a80aed17b60e9778feaa364fff7b5,en Manes <ben.manes@gmail.com>, 2015-03-25 04:29:13 -0700, , force periodic cleanup reference cache move codegen resulted oversight weak soft ref cache periodically cleaned unless specified user added unit test enabled read buffer policy later optimized specifically added simple test caller inspection javadoc update,,
830,8d8e2390a1113059f4a7853a200e99620b1b307d,en Manes <ben.manes@gmail.com>, 2015-03-23 18:19:33 -0700, , prepare next development iteration,,
831,499f73e82cf7d1d47df372551910a8549167a0bd,en Manes <ben.manes@gmail.com>, 2015-03-23 17:06:13 -0700, , prepare release,,
832,08748559cc729f66b8c082a69c03432c8fba1eb5,en Manes <ben.manes@gmail.com>, 2015-03-23 17:03:05 -0700, , port guava cache weight test addition b3855ef guava added two test verify maximum weight one make sense unported test validates segment bounding doe allow cache reach maximum fails caffeine correctly hold value doe split maximum size threshold across segment,,
833,cacd8e14ca7eaeb66c43f544eed37f2facdb5aa0,en Manes <ben.manes@gmail.com>, 2015-03-23 15:19:03 -0700, , use relaxed read key key fixed unless node transition retired dead state node lock doe entry visible caller perspective audited verify correct usage conditional remove modified follow standard pattern remove transition implemented conditional transition followed remove legacy clhm compute method originally available using conditionally remove assurance correct behavior previous may even wrong value weak soft relaxed read offer slight performance improvement due avoiding unnecessary memory barrier,,
834,333b7762ce4f7127b77b3c2a250a7e229b419cc4,en Manes <ben.manes@gmail.com>, 2015-03-23 03:44:58 -0700, , rename config option,,
835,ff98d9a42ebec95548c07cb8d39b9331e10f4058,en Manes <ben.manes@gmail.com>, 2015-03-23 01:44:08 -0700, , update compute benchmark,,
836,8883427226bcfcdaee16ef179dc04bd593485dde,en Manes <ben.manes@gmail.com>, 2015-03-22 23:07:51 -0700, , fix async cache weigh computing entry,,
837,fffd4d92637ee02f7e974648815b49b99b62eb38,en Manes <ben.manes@gmail.com>, 2015-03-22 20:30:21 -0700, , minor touchups point wiki doc,,
838,970f5017f9f9e18654ed9873efd4b61be145a206,en Manes <ben.manes@gmail.com>, 2015-03-21 23:10:17 -0700, , resolve lint warning,,
839,573009996245e340216c8e0a67447946e3c5e2fe,en Manes <ben.manes@gmail.com>, 2015-03-21 22:37:35 -0700, , expire flight async computation,,
840,cf5d49caad7dd5680048a22b097bbb5e619cb9a8,en Manes <ben.manes@gmail.com>, 2015-03-21 03:55:36 -0700, , port jsr166 tck test,,
841,cb59350c8efd6ce1c3027e360c3f9d6b499f7b5e,en Manes <ben.manes@gmail.com>, 2015-03-21 01:23:02 -0700, , add atomic merge support non retrying previously delegated retrying variant concurrentmap initially appeared challenging implement see compute complexity instead handling case directly cost lambda implementation becomes trivial seems like right tradeoff,,
842,df2bce27c948f70088c97a3d903c4684200c34b3,en Manes <ben.manes@gmail.com>, 2015-03-20 17:48:59 -0700, , misc minor touchups updated benchmark,,
843,646bfee1570e5acd6072390530843b544b9f8a6f,en Manes <ben.manes@gmail.com>, 2015-03-20 00:59:12 -0700, , run jcache tck test separately due racy testing logic cacheloadertest spuriously fail due race within configuration unordered test execution expecting speed memory efficient cache appears leak callback test stable run independently,,
844,9291cc3b188f49b46e7da9970cd14a89ec76aeb6,en Manes <ben.manes@gmail.com>, 2015-03-19 21:15:00 -0700, , explicitly remove guava async test task confusing forgotten ignored confused test task little guava async support point validating ,,
845,925aba9f3c70d8a6860e957555d4c3dc1cfd81e3,en Manes <ben.manes@gmail.com>, 2015-03-19 17:33:48 -0700, , reduce 1.5mb codegen jar bloat cache enum factory switch string node enum cache label class name encoded minimal form leaf class marked final aid jit,,
846,2c19cdc0a9c1f483396f02774dc614de8eeffccb,en Manes <ben.manes@gmail.com>, 2015-03-19 13:33:06 -0700, , abstract read buffer fixed race condition read buffer abstracted boundedbuffer class test independently previously mentioned race condition fixed ptl based scheme added benefit make easier moving fixed number segment dynamic number based contention,,
847,2e15ad377af5cce6875a29454c881e3202c24afd,en Manes <ben.manes@gmail.com>, 2015-03-19 03:51:33 -0700, , test benchmark read buffer implementation strategy recent change racy one read buffer race condition may benign detectable validation need robust way evaluate strategy introduced test cleaned hoc benchmark provided approach one shot buffer fixed using non blocking ptl scheme impacted performance cache internal version need updated well jctools mpsc array queue offer similar performance one shot queue consistent fixed one shot fluxuates benchmark evaluated depth e.g may due false sharing may best rewrite mpsc array queue adapt cache,,
848,2fd58a45a3474daa7204a48731983e1eb228db9a,en Manes <ben.manes@gmail.com>, 2015-03-18 14:06:35 -0700, , use one shot capacity buffer improved performance previously buffer allocated threshold record read drain process waste space requires extra volatile read add overhead buffer lossy avoid contention allowing producer overwrite write strictly sequential order reduced contention cost extra store potential garbage stuck buffer next full cycle one shot buffer peek next write index free attempt write element update counter buffer detectably full drain requested,,
849,13eca22ab782f2420d8bc276002898c92ae05957,en Manes <ben.manes@gmail.com>, 2015-03-17 14:40:34 -0700, , migrate size field codegen,,
850,6f470ae1ad13a8eccebc633d46fa47ce31c355a6,en Manes <ben.manes@gmail.com>, 2015-03-17 05:19:13 -0700, , remove holder class helper codegen,,
851,28e1e36cd1af53a4a2a7cb4ee5829f7eceeb4e6c,en Manes <ben.manes@gmail.com>, 2015-03-17 02:31:51 -0700, , instrument cache tracing,,
852,f04d0ef8a0eb8d0f0b297841c0da37f51e584942,en Manes <ben.manes@gmail.com>, 2015-03-16 21:32:39 -0700, , add async multi threaded test,,
853,8345d96bce209870b2d9bbfe6be9b9c83264e948,en Manes <ben.manes@gmail.com>, 2015-03-16 04:40:53 -0700, , add debugging info,,
854,cca1028cd65a611f28ed1245c6b8c8c657957cc6,en Manes <ben.manes@gmail.com>, 2015-03-16 03:30:55 -0700, , verify jcache guice integration,,
855,f6bb571f3b95d05c3416b49c852733395e13486a,en Manes <ben.manes@gmail.com>, 2015-03-16 02:48:07 -0700, , add configuration strategy name cache tracing purpose,,
856,2e1fd1319c56d5143ad346a52f05dc06d08e1e96,en Manes <ben.manes@gmail.com>, 2015-03-15 22:09:27 -0700, , progress tracing,,
857,670a8503baf01f7d78ddacbf1bd62fd3b9da4add,en Manes <ben.manes@gmail.com>, 2015-03-15 03:36:35 -0700, , improve build time disabling byte code verification,,
858,64f3bcbc95490737b98bea5739492ffc40812f2f,en Manes <ben.manes@gmail.com>, 2015-03-15 00:15:50 -0700, , add getifpresent fix get follow contract,,
859,28b048657b0bb66c2ef16c2a92ba73c0388880cf,en Manes <ben.manes@gmail.com>, 2015-03-14 19:39:58 -0700, , finalize jcache implementation,,
860,3a525408278062b9d3876699a88220ac67363e15,en Manes <ben.manes@gmail.com>, 2015-03-14 00:22:31 -0700, , publish snapshot every successful build plus sneaking small code cleanup,,
861,86e6f6541747d05e289f9b249213f5bc03940bab,en Manes <ben.manes@gmail.com>, 2015-03-13 16:38:14 -0700, , remove entryset add support java added support stream operating view though intent never matured contract confusing many opinion implemented discussing guava doug lea different implementation take least confusing support operation added testlib test async cache map view fixed iterator bug detected,,
862,5c74a3fa047c4631b02dd26617991cba2c975722,en Manes <ben.manes@gmail.com>, 2015-03-13 01:35:24 -0700, , jcache configuration external setting,,
863,39cd1bcc51b0a1738669f2d63f147023e77118b2,en Manes <ben.manes@gmail.com>, 2015-03-12 19:25:45 -0700, , record execution time jcache statistic,,
864,a99d580d83a68230bfb7b737406ab286856ffd17,en Manes <ben.manes@gmail.com>, 2015-03-12 17:31:50 -0700, , simplify clean jcache implementation,,
865,07ccf2836c6712e600afa0a6aaea2c14bd055c12,en Manes <ben.manes@gmail.com>, 2015-03-12 11:53:13 -0700, , fix iterator removing wrong entry hasnext called,,
866,1a007b0f91b6761d675469ffb5d6275d21d9c952,en Manes <ben.manes@gmail.com>, 2015-03-11 01:06:22 -0700, , first pas cleaning jcache implementation,,
867,f83680748984f88ac876ec2fb3782a4a2f94f1f0,en Manes <ben.manes@gmail.com>, 2015-03-10 23:03:27 -0700, , fix remaining jcache tck test fix,,
868,37551c07a428a7f675825058eb651a754d509543,en Manes <ben.manes@gmail.com>, 2015-03-10 04:15:33 -0700, , add guava testlib test queue,,
869,ec27eee14e80e4deb26bcca674f33a7d3d7ecf38,en Manes <ben.manes@gmail.com>, 2015-03-10 02:47:17 -0700, , add guava testlib test asmap view,,
870,fa7962e73641f439e65c75578741e0d0f2d47ec6,en Manes <ben.manes@gmail.com>, 2015-03-09 20:18:10 -0700, , progress towards jcache lazy expiration support,,
871,3edd3bad45b9ac09287bd20ed9ff7c5f33a5d756,en Manes <ben.manes@gmail.com>, 2015-03-07 02:29:15 -0800, , jcache expiration wrapper unused,,
872,deddfc078d6e3433431168dc201cc0c37d370890,en Manes <ben.manes@gmail.com>, 2015-03-06 02:45:40 -0800, , fully externalized jcache configuration,,
873,3c2cd4f3718f0221bd0174845694afc859f4e403,en Manes <ben.manes@gmail.com>, 2015-03-05 19:04:58 -0800, , added jcache stats support,,
874,70c2219e0a856f1d6c9b7b325785374b65c43a28,en Manes <ben.manes@gmail.com>, 2015-03-05 12:45:06 -0800, , added jcache jmx support,,
875,0021f9b4ca6413a31ed31df66661276f71ecb899,en Manes <ben.manes@gmail.com>, 2015-03-04 23:09:17 -0800, , jcache cachewriter support,,
876,3d666a81317c28641b187d681dff43d46d4c5193,en Manes <ben.manes@gmail.com>, 2015-03-03 01:14:25 -0800, , jcache listener support integrated test pas,,
877,25630f187af0f38a1597b1f16fe819e6e03ad7ce,en Manes <ben.manes@gmail.com>, 2015-03-02 21:59:17 -0800, , scaffolding jcache event dispatching,,
878,721a0b8f288632432bc0d5df9bb94596b5d131cf,en Manes <ben.manes@gmail.com>, 2015-03-02 02:58:01 -0800, , fix doclint warning move tck task,,
879,5edffe225764cb7ee0b71541f43e380780a68dd7,en Manes <ben.manes@gmail.com>, 2015-03-02 00:23:56 -0800, , fixed jcache test,,
880,719b80d92829c6b66e2ee01e0ce61ec65ecc966d,en Manes <ben.manes@gmail.com>, 2015-03-01 23:11:57 -0800, , implement jcache invoke,,
881,e705b632df06d762dac72a216f10a37d2ecbbd8c,en Manes <ben.manes@gmail.com>, 2015-03-01 21:51:20 -0800, , jcache test fix exclude hanging test,,
882,f82e7a78609aa734c6aafbfd3dc63889de726511,en Manes <ben.manes@gmail.com>, 2015-03-01 18:59:11 -0800, , jcache storebyvalue support external configuration,,
883,936572ad55b01b855857cfd88ab4e44100b4b0a4,en Manes <ben.manes@gmail.com>, 2015-02-28 21:51:11 -0800, , run jsr107 jcache tck part build disabled due partial impl,,
884,8b2ffbf81aa34dcb8564d77dca7a37612025be66,en Manes <ben.manes@gmail.com>, 2015-02-28 19:14:14 -0800, , scaffolding jcache configuration file,,
885,068d1d6c7d0fac5996a4360bbe261844d0d0ad98,en Manes <ben.manes@gmail.com>, 2015-02-28 15:10:24 -0800, , early work jcache support,,
886,c28b8c6c1ebec9f66c1e393697d66f8ef1d72ad3,en Manes <ben.manes@gmail.com>, 2015-02-27 21:43:30 -0800, , optimize bulk loading analyzing jitwatch,,
887,53547ee6c5bc802189ac744373c1c3903ef6c948,en Manes <ben.manes@gmail.com>, 2015-02-27 04:01:22 -0800, , writetime triggering refresh,,
888,c0df9f2f8a3c94039f8608d91a9c10d0615ad5ff,en Manes <ben.manes@gmail.com>, 2015-02-26 22:54:56 -0800, , javadoc update,,
889,35a525b0e9d4e517e0c3e14c8c56f4d883ebedf1,en Manes <ben.manes@gmail.com>, 2015-02-26 15:11:47 -0800, , reduce codegen bloat node inheritance,,
890,92e3d31a14525fe921d7ef59bef14d61605e3ce5,en Manes <ben.manes@gmail.com>, 2015-02-26 12:50:44 -0800, , remove annotation bloat node codegen,,
891,7d44d023fc3ad6aab614ce356c03399a75e5095f,en Manes <ben.manes@gmail.com>, 2015-02-26 12:16:35 -0800, , first pas codegen cleanup,,
892,2fee718e34a3da3fb690f560ff248bb52332540a,en Manes <ben.manes@gmail.com>, 2015-02-26 03:54:16 -0800, , remove annotation codegen bloat,,
893,2074c4588ab3fcd9f215e311bcff4a0fc6082d24,en Manes <ben.manes@gmail.com>, 2015-02-26 02:10:55 -0800, , reduce cache codegen size inheritance,,
894,26aff25d703f05216dc6a23de0544573937a3c2e,en Manes <ben.manes@gmail.com>, 2015-02-25 14:56:46 -0800, , remove codegen bloat,,
895,8c0ae87f60a2b66c43eb0d96f45af776d46070f0,en Manes <ben.manes@gmail.com>, 2015-02-25 12:43:37 -0800, , replace new thread creation shared pool,,
896,bf1cba61365f0c05cc7407fe0c2547f0c85ecbcf,en Manes <ben.manes@gmail.com>, 2015-02-24 17:56:24 -0800, , fix test code due codegen change,,
897,5a1f74fca8e2b3b7a68ed6e5c451e5850e036d09,en Manes <ben.manes@gmail.com>, 2015-02-23 21:54:26 -0800, , write buffer expiration code generated,,
898,0f8e6fe506a2c35dde1d855885c70ca38bcd2d61,en Manes <ben.manes@gmail.com>, 2015-02-23 18:28:39 -0800, , codegen access write order deques,,
899,e8272d053b305235baba650d77579b04b24ff1e4,en Manes <ben.manes@gmail.com>, 2015-02-23 14:55:43 -0800, , codegen ticker weigher,,
900,df05632d29bf4c8ffb1264e8fdbc7bec44a2bae1,en Manes <ben.manes@gmail.com>, 2015-02-23 13:52:42 -0800, , code generate stats field,,
901,d16379c219cb196c422d7d4d7ceadff7d8994d71,en Manes <ben.manes@gmail.com>, 2015-02-23 02:57:10 -0800, , codegen removallistener executor field,,
902,d89d3ba19865cf08bee650927e43c57ae21981be,en Manes <ben.manes@gmail.com>, 2015-02-23 00:44:02 -0800, , use codegen cache field migrated,,
903,66945acf161155ea20e2b5797aff1ead0ddffdc3,en Manes <ben.manes@gmail.com>, 2015-02-22 18:05:10 -0800, , early work cache code generator field optimization,,
904,c106fde749e82581d2bf332e3d4abb08f9f6e765,en Manes <ben.manes@gmail.com>, 2015-02-21 17:59:31 -0800, , try avoid race within test,,
905,9b4d1ad4f33dbfde1a57e0d4c95d677da1212497,en Manes <ben.manes@gmail.com>, 2015-02-21 15:15:11 -0800, , stub local cache code generator,,
906,4937692056d51be53f1d94aedc4b3783c6719e12,en Manes <ben.manes@gmail.com>, 2015-02-20 23:13:29 -0800, , debugging test failure,,
907,12583ce4abd034a5188d35cb1074a6f1ed332e41,en Manes <ben.manes@gmail.com>, 2015-02-19 02:05:29 -0800, , remove ambigious usage size policy method name,,
908,cc6ebb5997768f72bacb3b1d38fe1102b8b8c5a2,en Manes <ben.manes@gmail.com>, 2015-02-17 17:17:46 -0800, , beginning pull top level field prepare codegen variant,,
909,46e76d729cfc6cacd92777b792710b9b849fc5ba,en Manes <ben.manes@gmail.com>, 2015-02-15 03:53:24 -0800, , upgrade improved documentation additional buffer strategy,,
910,b368c18e6de7798efbc482e55a96efdd422b2945,en Manes <ben.manes@gmail.com>, 2015-02-14 19:51:43 -0800, , add debug information,,
911,b15d7ce797048c22f115379ddf010a51156ab809,en Manes <ben.manes@gmail.com>, 2015-02-13 16:33:53 -0800, , fix cacheloader javadoc,,
912,ea0b2f6f7239a6fe4b09914e362b712438e5b645,en Manes <ben.manes@gmail.com>, 2015-02-08 18:12:44 -0800, , add one shot read buffer,,
913,0704e4df7b3c9844ac5d4ba62c61bdc7985464a2,en Manes <ben.manes@gmail.com>, 2015-02-08 01:23:58 -0800, , incremental work tracing api,,
914,b6a36e3e7d154b8a3bb6e2c0ba2ef531e9349aa3,en Manes <ben.manes@gmail.com>, 2015-02-07 18:43:40 -0800, , baseline buffer benchmark prior adding idea,,
915,45ab878a0288e6c2d5031020b3aeee57b3facbc4,en Manes <ben.manes@gmail.com>, 2015-02-07 16:06:39 -0800, , robust async rejection test,,
916,c824b724d0cae6ff9226536569614aac00f5ae7b,en Manes <ben.manes@gmail.com>, 2015-02-07 03:02:09 -0800, , enable,,
917,c7ee6d26c315c96cbdf24e8eb340dbf497839991,en Manes <ben.manes@gmail.com>, 2015-02-06 18:46:42 -0800, , minor touchups,,
918,2498468e6b094d7d157d8f85bec0bc8899764520,en Manes <ben.manes@gmail.com>, 2015-02-06 01:26:54 -0800, , javadoc lint fix,,
919,f8a77969d72baba5c61603f92af76daac4bc3c69,en Manes <ben.manes@gmail.com>, 2015-02-05 15:52:56 -0800, , try force bounding jvm process,,
920,ca482c8c2a16ed4a6a6858f20e1d5eee31004eab,en Manes <ben.manes@gmail.com>, 2015-02-05 12:27:58 -0800, , fix test failure due value ref collected,,
921,5bc94fa70bca31299ddf99bc141a274926b9708d,en Manes <ben.manes@gmail.com>, 2015-02-05 00:30:25 -0800, , reduce heap size,,
922,5550f71bdd8c17f6db4dec01953cc1d6a0da6283,en Manes <ben.manes@gmail.com>, 2015-02-03 01:43:27 -0800, , upgrade enable errorprone,,
923,451ba539638df241d5eee2de1b81a4e04dec7940,en Manes <ben.manes@gmail.com>, 2015-02-01 15:10:32 -0800, , fix checkstyle,,
924,ca0ba7f51edb144ce1fd070370be73070d823be1,en Manes <ben.manes@gmail.com>, 2015-02-01 03:54:23 -0800, , disable error prone plugin due multi project bug,,
925,92ed13bbe38c9925d896fba14c807e5e1e1bdb7d,en Manes <ben.manes@gmail.com>, 2015-02-01 01:11:32 -0800, , added benchmark result wiki,,
926,2143f294bf0e1ec32ff65b6cc47691bda1ed7b7f,en Manes <ben.manes@gmail.com>, 2015-01-31 17:13:36 -0800, , add errorprone plugin,,
927,ffee9f200cbb9ebd301db5d8538d36efb6a8f1f4,en Manes <ben.manes@gmail.com>, 2015-01-31 04:15:50 -0800, , stub jcache module,,
928,d39f79a958586ce6377a85d69c94a375e39d7d23,en Manes <ben.manes@gmail.com>, 2015-01-31 02:34:44 -0800, , add memory benchmark evaluate cache overhead,,
929,82234262af4af2fd08b39db165e63dd2b55d9d4c,en Manes <ben.manes@gmail.com>, 2015-01-30 21:00:06 -0800, , split stats combination new task set stabilize,,
930,35f551975b4beb5cd174b56515ac86b55ba4d204,en Manes <ben.manes@gmail.com>, 2015-01-30 19:58:23 -0800, , reduce per node memory footprint previously weight used indicate whether entry alive retired dead state transition resolve race condition properly maintain maximum bound negative effect requiring extra integer field per entry even weight enabled key field overloaded avoid thi bloat asynchronous cache maximum size weight require weight field incomplete future value weight zero reweighed upon successful completion extra state probably removed intelligent check scenario yet optimized,,
931,a1e203af1c7773c7c9f1233cf58e2253d6fded0e,en Manes <ben.manes@gmail.com>, 2015-01-30 14:54:42 -0800, , copy guava incorrect immediate expiration handling,,
932,18dee3ebb6c208a92757bfe0abb7047f67ae17c9,en Manes <ben.manes@gmail.com>, 2015-01-30 02:33:58 -0800, , upgrade javapoet 1.0,,
933,5b58dca481015d739c75fc4ede8241a18010a4bd,en Manes <ben.manes@gmail.com>, 2015-01-26 21:39:29 -0800, , fix test,,
934,9494875440941c41e0e24e84335041c70c513269,en Manes <ben.manes@gmail.com>, 2015-01-26 21:14:15 -0800, , test fix reference caching iterator,,
935,d69885a45be477fdcb32cff09a292019729d8fa0,en Manes <ben.manes@gmail.com>, 2015-01-26 18:02:58 -0800, , add test policy access,,
936,7e60de75914187e0c04556e9f55eb493de8d871b,en Manes <ben.manes@gmail.com>, 2015-01-26 01:14:00 -0800, , fix support,,
937,02c22be657559503971708849479ff9582627229,en Manes <ben.manes@gmail.com>, 2015-01-25 23:12:32 -0800, , added test generator,,
938,4b2bc0db0e3a1973f03810bbbc13d3b46b51b2da,en Manes <ben.manes@gmail.com>, 2015-01-25 22:10:32 -0800, , generate variant,,
939,557489fdc7bab544e6661b2cefb0313fd8ff4bee,en Manes <ben.manes@gmail.com>, 2015-01-25 21:09:04 -0800, , generate tostring method,,
940,7adc18d8f9cc2ba286f17b23fb5f6204fbcf5fee,en Manes <ben.manes@gmail.com>, 2015-01-25 20:22:57 -0800, , use relaxed read writes generated code,,
941,4b0a3e4a7901e6fa3a37902501302bf0e2e1880c,en Manes <ben.manes@gmail.com>, 2015-01-25 05:11:06 -0800, , use code generated node due bug unsafe optimization disabled additional work needed replace state management requires weight field also discovered caffeine test cover configuration,,
942,0300b33a9b2ec22db62cf5faf66f49caeb23a768,en Manes <ben.manes@gmail.com>, 2015-01-24 00:52:25 -0800, , prepare move nodefactory based node,,
943,4892747f5c7badf5ffe8ad8326975ac956eed1a1,en Manes <ben.manes@gmail.com>, 2015-01-23 21:12:27 -0800, , remove weightedvalue use flat node structure prepares migrating code generated node minimize memory overhead wrapper useful model clhm compatible computation became legacy code,,
944,f5fc7d927257cef7258e64272c6874e1bf230883,en Manes <ben.manes@gmail.com>, 2015-01-23 03:26:28 -0800, , remove reminder invalid due remove blocking synchronizing necessary eviction handle concurrent update penalty small,,
945,b72e43306aa1604dc939ef4001e67b00d0ed3dfd,en Manes <ben.manes@gmail.com>, 2015-01-23 01:55:10 -0800, , reminder complexity safe handling weight flat layout,,
946,99c6c72215343c5b2c76645127eee2e03840f272,en Manes <ben.manes@gmail.com>, 2015-01-23 01:34:22 -0800, , try make code generator little ugly,,
947,deb5d390cfb963a57f4853db517428ef34acc085,en Manes <ben.manes@gmail.com>, 2015-01-22 16:46:26 -0800, , used relaxed read,,
948,45c2745c1b64cf057fef6536082786d317925da6,en Manes <ben.manes@gmail.com>, 2015-01-22 15:20:50 -0800, , try stabilize test case,,
949,c8a9aa79dc739d84e022ab74d6a451b8bf118db5,en Manes <ben.manes@gmail.com>, 2015-01-22 15:02:36 -0800, , lazily write constructor assignment,,
950,8207b4cde43e6f00e4fe8a3be2fa88f70253d195,en Manes <ben.manes@gmail.com>, 2015-01-22 05:20:47 -0800, , use lazy volatile writes generated code rely unlock memory fence,,
951,7e12f7c9ad7d4b01d951c3245f0e346095eba115,en Manes <ben.manes@gmail.com>, 2015-01-22 03:37:13 -0800, , add javadoc generated code,,
952,598489f73f2c4b8e27cacf48cae753e4607dabf6,en Manes <ben.manes@gmail.com>, 2015-01-22 02:48:05 -0800, , little coverage,,
953,c36e5bdbd6106b0ced07dc9464a881b3fc1e010e,en Manes <ben.manes@gmail.com>, 2015-01-22 02:03:35 -0800, , break apart ugly mess generator code,,
954,1857d88ed05f0a280b94f341e455777b6b4008c2,en Manes <ben.manes@gmail.com>, 2015-01-22 01:17:58 -0800, , added method find right factory given configuration ugly loop power two mask worth space cost lookup table loop construction bad scheme thing,,
955,453955203b872813e7e8e50c8ad52c6950405c73,en Manes <ben.manes@gmail.com>, 2015-01-21 23:00:14 -0800, , generate code part build,,
956,ebd5a9d55efb7f8c18736ebc89c69789a568bc82,en Manes <ben.manes@gmail.com>, 2015-01-21 20:18:36 -0800, , codegen work,,
957,685b5dfe7b3df6cffb88a985c139f81ae2bd02b5,en Manes <ben.manes@gmail.com>, 2015-01-21 03:30:07 -0800, , experimental work codegen,,
958,045504cb418eb7f19e955fcef08a51171b43d3a7,en Manes <ben.manes@gmail.com>, 2015-01-21 03:10:24 -0800, , feedback review remove padded atomics apply optimization internally needed package protected cleanup fix warning guava test use optionallong,,
959,e12240c41d15a3ff8bee3a47a6515d94660bd2ce,en Manes <ben.manes@gmail.com>, 2015-01-20 17:17:38 -0800, , minor cleanup unbounded cache,,
960,530d27678dd2b7dac563dbcf65aec6920d6a547b,en Manes <ben.manes@gmail.com>, 2015-01-20 04:40:12 -0800, , use common serialization proxy,,
961,4e9798153760d919e89e7b3bbe97bdd696aa6386,en Manes <ben.manes@gmail.com>, 2015-01-20 02:43:42 -0800, , javadoc shared code,,
962,b85109ad86a2c1104c3f810f7db5d00ed9884296,en Manes <ben.manes@gmail.com>, 2015-01-20 01:12:15 -0800, , little coverage,,
963,7ece85471e5b58bc8ec6412d9532e2c7d16d3afa,en Manes <ben.manes@gmail.com>, 2015-01-19 23:44:45 -0800, , little cleanup,,
964,c4195b048d94cbd2026213951a53913a9190b993,en Manes <ben.manes@gmail.com>, 2015-01-19 22:22:56 -0800, , minor doc update,,
965,aa10ddee94cc975d42a42d550761e8b0b6a5dbf2,en Manes <ben.manes@gmail.com>, 2015-01-19 22:07:17 -0800, , break shared code separate file need document,,
966,7d9522c76fd5e5e4eefe3fb2063bcb75d429262e,en Manes <ben.manes@gmail.com>, 2015-01-19 21:21:53 -0800, , dedup ing,,
967,49f99bf047dc66f347204b23f4a2fb64eb6ce8b0,en Manes <ben.manes@gmail.com>, 2015-01-19 19:52:20 -0800, , sharing common code,,
968,92adda12a5b857919e432866a869a44441e08b9c,en Manes <ben.manes@gmail.com>, 2015-01-19 18:04:09 -0800, , pulling common code,,
969,d14f04976e5d6c65225a48345e4bdc7ffd676107,en Manes <ben.manes@gmail.com>, 2015-01-19 02:11:46 -0800, , share code implementation,,
970,0c51d0d2291a942f9d0aeee493d728bfdffb2134,en Manes <ben.manes@gmail.com>, 2015-01-19 00:36:06 -0800, , added binary log format,,
971,b6791e24157dc274d78f86a51b524fec678a5abf,en Manes <ben.manes@gmail.com>, 2015-01-18 21:29:12 -0800, , distribution option,,
972,3ed5eee09c1f0860ac30cea0196bbecb6ca91c55,en Manes <ben.manes@gmail.com>, 2015-01-18 17:49:48 -0800, , added sampling based policy,,
973,2684cb9347e26d86e4622a8970c4988b7ded08e3,en Manes <ben.manes@gmail.com>, 2015-01-18 15:37:26 -0800, , rewrote lru fifo simulated policy added clock misc cleanup,,
974,5371a165ea521ebb6daac9bfe5e2e272918016aa,en Manes <ben.manes@gmail.com>, 2015-01-17 22:09:31 -0800, , pas configuration setting simulator,,
975,d368e8f8962ca82dd93f29856e968e3ec552452b,en Manes <ben.manes@gmail.com>, 2015-01-17 19:44:53 -0800, , javadoc fix,,
976,55a056538372b13f69c2389ed51e5f1497ed6577,en Manes <ben.manes@gmail.com>, 2015-01-17 19:33:16 -0800, , logreader test plus misc cleanup,,
977,0cf380ee06025f26937edf5a87a38d73002898ef,en Manes <ben.manes@gmail.com>, 2015-01-17 04:38:22 -0800, , basic functioning simulator,,
978,5fd266242369ccc4bf70765ab3bd37d40ed66628,en Manes <ben.manes@gmail.com>, 2015-01-17 01:36:36 -0800, , scaffolding akka based simulator,,
979,30693bebe0f58c03acb600a3804a80d15ecb1f02,en Manes <ben.manes@gmail.com>, 2015-01-16 19:37:18 -0800, , refactoring make tracing api tracing async subprojects,,
980,e2767f65a7e4269acd7592cde9cca450eb4a0ae8,en Manes <ben.manes@gmail.com>, 2015-01-16 03:25:57 -0800, , early stub tracer based lmax disruptor,,
981,d41e4865c61189e2ad36920265b708d66b1ffc5a,en Manes <ben.manes@gmail.com>, 2015-01-16 00:06:15 -0800, , coverage guava reload,,
982,13f43e94c6d89215af64c5258f0abe3dd69a4b49,en Manes <ben.manes@gmail.com>, 2015-01-15 23:42:25 -0800, , add test fix null bulk load cancelled future,,
983,aaf4bb8c0ea3e7c8cbab025af7b5858a68bcb59d,en Manes <ben.manes@gmail.com>, 2015-01-15 21:29:28 -0800, , fix package add coverage,,
984,a4c41b974a85d7f468e623e1a5c15be8c26d7c3d,en Manes <ben.manes@gmail.com>, 2015-01-15 05:23:06 -0800, , fix bug cacheloader return null miss,,
985,70fc4a56d14c848892a0dde66609b36d1b77ba3c,en Manes <ben.manes@gmail.com>, 2015-01-15 04:11:01 -0800, , add unbounded cache validation fix slow await call,,
986,f5241f115d9651d5cc4984a9ab41527d75dfa853,en Manes <ben.manes@gmail.com>, 2015-01-15 00:28:32 -0800, , replace hack another honor limit,,
987,1e24bff87efe7c40cae23c7312bfd20601533f3e,en Manes <ben.manes@gmail.com>, 2015-01-14 21:54:29 -0800, , test coverage unsafeaccess utility,,
988,b014187f2411823e074ea79684a8c3daeaa576b1,en Manes <ben.manes@gmail.com>, 2015-01-14 19:20:57 -0800, , nit,,
989,2cd2a818587ed39dd6ae8cc49e2c87531b334575,en Manes <ben.manes@gmail.com>, 2015-01-14 17:43:55 -0800, , try coerce test coverage,,
990,b596b9d8048f55edaff2715a65347d8bc09eba43,en Manes <ben.manes@gmail.com>, 2015-01-14 17:12:07 -0800, , explicit async weigher test,,
991,b6523477c7d962e71570e98c1963def1f6061c01,en Manes <ben.manes@gmail.com>, 2015-01-14 16:21:54 -0800, , added async cache validation reliable test race fix force matcher description output,,
992,12cd55392f0a688df675e91cf1e934a27cb37221,en Manes <ben.manes@gmail.com>, 2015-01-14 04:29:32 -0800, , try fix test race condition,,
993,093f249b30feab167a34a60bf2118005ff2dbc1a,en Manes <ben.manes@gmail.com>, 2015-01-14 03:55:16 -0800, , fix javadoc reference,,
994,ff2c1576e26a41982aa2b06abd120b605c62b921,en Manes <ben.manes@gmail.com>, 2015-01-14 03:40:39 -0800, , enabled test async weighing work,,
995,83f6ddffd58449a40d9aa15820d0e79bbda5d195,en Manes <ben.manes@gmail.com>, 2015-01-14 02:42:57 -0800, , update weight lru expire touch async task comples notify removal listener replace instance simpler code future hold dependency track,,
996,e09109cba1899adb3b184431bb09aae67cca2662,en Manes <ben.manes@gmail.com>, 2015-01-14 00:31:20 -0800, , minor javadoc fix,,
997,581e32ddc64015e285c02a90ad7a85e1b9c33d4d,en Manes <ben.manes@gmail.com>, 2015-01-13 23:22:43 -0800, , use async weigher weighted yet,,
998,bbed13a91f24a6cdf41c8ff2b6d7f8742245193f,en Manes <ben.manes@gmail.com>, 2015-01-13 19:35:56 -0800, , parameterize build async sync cache type stable build,,
999,dd0e660a5cd644cdd9e667f745a5ca64455da1ec,en Manes <ben.manes@gmail.com>, 2015-01-13 05:39:33 -0800, , improve getall javadoc,,
1000,1749fdb70f2b66d379c3ad1141a8e23ad67dd7a3,en Manes <ben.manes@gmail.com>, 2015-01-13 04:10:53 -0800, , bounded implementation weigher support code duplication unbounded version resolved focus maturing clean code functionality,,
1001,9a6032ef8f49fa3987e5a196473adcb6a6bd240e,en Manes <ben.manes@gmail.com>, 2015-01-13 01:00:10 -0800, , test bulk loader returning entry requested,,
1002,066bb4400de50cb1cebd0c2e4ef7b2300378e6e0,en Manes <ben.manes@gmail.com>, 2015-01-13 00:37:30 -0800, , iota coverage,,
1003,c9fa67987aa5b1bd6fdc3d08e2f158394a39fb4b,en Manes <ben.manes@gmail.com>, 2015-01-12 23:44:36 -0800, , cleaned bulk load implementation,,
1004,6377789b7b2d9fd465f1c65d046373c4bd800e57,en Manes <ben.manes@gmail.com>, 2015-01-12 21:06:45 -0800, , rename advanced policy,,
1005,87ea0569808f0f60236c94497d52fcf2d6f2303c,en Manes <ben.manes@gmail.com>, 2015-01-12 19:41:25 -0800, , break caffeine guava combination task,,
1006,8cb36cf7a71fe0605fbf2ebfd572157e6b8ad809,en Manes <ben.manes@gmail.com>, 2015-01-12 16:23:47 -0800, , better async mapping function,,
1007,2c37fe91b4fe5c089100c9ca2fbb1aa65effea2e,en Manes <ben.manes@gmail.com>, 2015-01-12 05:57:40 -0800, ," add aggregate test report task 1,123,933 test",,
1008,610583b6c9a44ba57ec3ade1541efe4fb22a744a,en Manes <ben.manes@gmail.com>, 2015-01-12 05:14:17 -0800, , add missing async test,,
1009,c1a8e00528bf4a79ead41f8f8fe39fa10f1e9234,en Manes <ben.manes@gmail.com>, 2015-01-12 04:57:11 -0800, , serialization support,,
1010,e6e6d1453b5f5248581451b8a53cb83427902e79,en Manes <ben.manes@gmail.com>, 2015-01-12 03:40:49 -0800, , javadoc link oracle jdk8 site,,
1011,161f05203b1788820add449ace36d72d3aa7aadc,en Manes <ben.manes@gmail.com>, 2015-01-12 03:18:39 -0800, , implementation unbounded cache,,
1012,b1d4f8f084e1cd891a1c97821eda72212ebedcb4,en Manes <ben.manes@gmail.com>, 2015-01-11 20:49:20 -0800, , another test,,
1013,7538582f6c2d74086e5b336fa88c522a8d29434d,en Manes <ben.manes@gmail.com>, 2015-01-11 19:24:04 -0800, , fix test,,
1014,8c84c7c55222aa6ceb466c6ad8fda800f9e51374,en Manes <ben.manes@gmail.com>, 2015-01-11 18:38:02 -0800, , little work bulk loading,,
1015,39e6295fa33b5fe734ba16b6969737930cec27bf,en Manes <ben.manes@gmail.com>, 2015-01-11 17:37:11 -0800, , javadoc failed entry automatically removed,,
1016,e75d5d133da62e5fa45db96ed0146e43554ce80d,en Manes <ben.manes@gmail.com>, 2015-01-11 17:24:57 -0800, , progress,,
1017,a9a755cd2e7e3fbce0b029b950cc9f5dc210d158,en Manes <ben.manes@gmail.com>, 2015-01-11 05:07:07 -0800, , async test,,
1018,1afe98d51fb928a508f5e56d54c59f6e56c2ab7f,en Manes <ben.manes@gmail.com>, 2015-01-11 04:33:04 -0800, , fix coverage report,,
1019,22515774af570795fcf2643b2349daedd12a922b,en Manes <ben.manes@gmail.com>, 2015-01-11 04:31:32 -0800, , early stub support,,
1020,e5b9903f158845c3cc6423ebd4e4508152aa87bf,en Manes <ben.manes@gmail.com>, 2015-01-11 00:13:42 -0800, , bit scaffolding tracing module,,
1021,773dd67ff6d6bf71264856a9b3d95b41441f9117,en Manes <ben.manes@gmail.com>, 2015-01-10 18:39:50 -0800, , little code coverage,,
1022,35d030e4ccd5251aed911801c6cf679bafaca42d,en Manes <ben.manes@gmail.com>, 2015-01-10 18:08:56 -0800, , remove zero weight optimization due update javadoc use google relaxed style 80c 100c match code line limit,,
1023,71130c453df44b415ad5c60d96740311e027e12b,en Manes <ben.manes@gmail.com>, 2015-01-10 17:47:22 -0800,5, merge pull request stephan202 documentation fix minor improvement documentation,,
1024,d64542101c402c131eb3e828f209e6fe57a55294,tephan Schroevers <stephan.schroevers@escaladagroup.com>, 2015-01-10 18:32:26 +0100, , minor improvement documentation replace respectfully respectively consistently write api upper case replace sizing oversizing render mono space font like type method mentioned documentation part either header link,,
1025,724e34eb8f78a0fcd519c1061838df0f8d830214,en Manes <ben.manes@gmail.com>, 2015-01-10 07:08:46 -0800, , force memory,,
1026,8f65252129956d6696fb96d6b87130a3f1bb36b1,en Manes <ben.manes@gmail.com>, 2015-01-10 07:01:47 -0800, , support afterwrite young old snapshot,,
1027,89b3c462e1077a6842bbcf2d5e2d403d62d1ef76,en Manes <ben.manes@gmail.com>, 2015-01-10 06:48:23 -0800, , reduce parallel thread,,
1028,75ca8b7c864bf08536265977199061d8b4cc6040,en Manes <ben.manes@gmail.com>, 2015-01-10 06:46:17 -0800, , coverage,,
1029,a8e08ca2da4fadc1530067e3d54fad866eb826ad,en Manes <ben.manes@gmail.com>, 2015-01-10 06:32:54 -0800, , increase code coverage,,
1030,864b4a5e24b7a86c516b7fbe91375977d5a927b2,en Manes <ben.manes@gmail.com>, 2015-01-10 05:47:19 -0800, , serialize guava adapter,,
1031,521bfc0ca8cd200801e4e2bdf61ec8df5412c7fb,en Manes <ben.manes@gmail.com>, 2015-01-10 05:24:29 -0800, , add serialization support,,
1032,247034eae1e27e5b844bbb9da42395910d5241f3,en Manes <ben.manes@gmail.com>, 2015-01-10 02:24:34 -0800, , clean multi threaded test,,
1033,ee8a21f76f56beb2d74cc2831f197773101c04b5,en Manes <ben.manes@gmail.com>, 2015-01-10 00:21:06 -0800, , enable lru test,,
1034,1717689ed0aee1cbd57e6a18d37116c2fc9e7671,en Manes <ben.manes@gmail.com>, 2015-01-09 22:49:34 -0800, , support weight,,
1035,48e6d0e25fbecac59af713076a44817db08033cd,en Manes <ben.manes@gmail.com>, 2015-01-09 21:36:58 -0800, , exclude simulator coverage report,,
1036,9b41f3830d75d8b2501432740ca3413acf50dad0,en Manes <ben.manes@gmail.com>, 2015-01-09 21:19:00 -0800, , ported concurrency test,,
1037,096105b7d1db25ceda84ebb05475c56d8274e2f4,en Manes <ben.manes@gmail.com>, 2015-01-09 20:28:24 -0800, , make tracing simulator project sharing distribution generator,,
1038,9974b29bdc185e22ce4173317baade7313c95906,en Manes <ben.manes@gmail.com>, 2015-01-09 20:05:19 -0800, , weighted cache test,,
1039,a2fd2f4c4a2858f65c6484b512dd3b40fc490f0d,en Manes <ben.manes@gmail.com>, 2015-01-09 17:43:49 -0800, , weigher test,,
1040,467abb954af38a2d32f8b6357ee8125e15cb352f,en Manes <ben.manes@gmail.com>, 2015-01-09 04:35:56 -0800, , migration guide,,
1041,533ed6b1e6eab4f6688a064e92128a83fc06b777,en Manes <ben.manes@gmail.com>, 2015-01-09 03:04:12 -0800, , fix tostring method,,
1042,445e9af87f11731644a467a9c1caf39e669c60ef,en Manes <ben.manes@gmail.com>, 2015-01-09 02:58:07 -0800, , check notification reference test,,
1043,39902574c2720740306557146db001df29d469de,en Manes <ben.manes@gmail.com>, 2015-01-09 02:01:24 -0800, , test,,
1044,e421ec45ebabc6e267aa12e381f2b3bbbd23292a,en Manes <ben.manes@gmail.com>, 2015-01-08 23:26:05 -0800, , statscounter test,,
1045,dfd3c55c42cf495cf07d893f94de8714cf70a681,en Manes <ben.manes@gmail.com>, 2015-01-08 22:56:21 -0800, , cachestats test,,
1046,43995cb0f1a682b2cd5d746625ea9a33baefd300,en Manes <ben.manes@gmail.com>, 2015-01-08 21:23:52 -0800, , aggregated jacoco report coverall,,
1047,fb0505bf26b75497f4727496bbe3ee2ca95cb7d2,en Manes <ben.manes@gmail.com>, 2015-01-08 20:22:31 -0800, , minor build cleanup,,
1048,e70ff6b907cddff47c2a5a588a1fc0038e001be8,en Manes <ben.manes@gmail.com>, 2015-01-08 20:14:35 -0800, , fix stats bug enable test,,
1049,408b0e6967def8a15f0ceb958b941b5b9bc80332,en Manes <ben.manes@gmail.com>, 2015-01-08 19:44:07 -0800, , pass guava test suite,,
1050,b65452030a33216280faf3756e858aa5f18279b2,en Manes <ben.manes@gmail.com>, 2015-01-08 19:08:01 -0800, , test fix,,
1051,baa6893e50effbfab75274cf35bd09addef6a374,en Manes <ben.manes@gmail.com>, 2015-01-08 18:26:17 -0800, , add support,,
1052,625b87e2cd0963bea92378d3422b665c7407502f,en Manes <ben.manes@gmail.com>, 2015-01-08 16:48:39 -0800, , migrate test delete useless code,,
1053,feda0262043c6bc3693e7244f503b1381f7081aa,en Manes <ben.manes@gmail.com>, 2015-01-08 16:15:55 -0800, , guava test fix,,
1054,df47272657611824a94c7759c3f55b97226349d8,en Manes <ben.manes@gmail.com>, 2015-01-08 14:54:08 -0800, , bulk load fix,,
1055,5fe1618cce25a8bfd99e92366c44e3fdd1a7129f,en Manes <ben.manes@gmail.com>, 2015-01-08 04:55:48 -0800, , inspect guava cache loader loadall support,,
1056,43d1b84bb889320cedab37436632a632fcf3ac4a,en Manes <ben.manes@gmail.com>, 2015-01-08 02:34:54 -0800, , guava refresh call load absent,,
1057,2d795da27cdefda4e982fd455396e9b64551654c,en Manes <ben.manes@gmail.com>, 2015-01-08 01:39:05 -0800, , ,,
1058,17ac0e9738904aa813fb1c9b9dc96890e343a4df,en Manes <ben.manes@gmail.com>, 2015-01-08 01:12:59 -0800, , guava test fix,,
1059,212b7965fe2ca9aaa62ce4e3415e06f3cf21280b,en Manes <ben.manes@gmail.com>, 2015-01-08 00:14:27 -0800, , guava test,,
1060,33933dc5b8297812c46c91c3255abe13aed3fc2d,en Manes <ben.manes@gmail.com>, 2015-01-07 23:38:30 -0800, , test fix,,
1061,c90a1ad2bdfa3e3b84e85af22445e07acdc82e3d,en Manes <ben.manes@gmail.com>, 2015-01-07 22:28:45 -0800, , fix containskey,,
1062,6a651f9013a25ad8c5c28fb4d0bf61c07f84f29e,en Manes <ben.manes@gmail.com>, 2015-01-07 22:10:05 -0800, , compiles broken guava test,,
1063,ae8a2e387bfc8d2e5eef0873f31a9a818936e4a3,en Manes <ben.manes@gmail.com>, 2015-01-07 21:06:48 -0800, , work towards migrating guava test broken disabled,,
1064,2943132ac56a465872f4b619dabbc250b0c93528,en Manes <ben.manes@gmail.com>, 2015-01-07 18:49:55 -0800, , fix build reference,,
1065,dc7822bc53070ad12cc7684d532f2535084df09c,en Manes <ben.manes@gmail.com>, 2015-01-07 18:25:03 -0800, , ported test fixed expiration bug,,
1066,7498b2ff5c26e7c313348600a56f2d2c2494eb83,en Manes <ben.manes@gmail.com>, 2015-01-07 17:41:42 -0800, , fix jacoco report directory coverall,,
1067,63b1a629c34d95d38af1c4d0e84f5ba99586a286,en Manes <ben.manes@gmail.com>, 2015-01-07 17:19:56 -0800, , initial port guava test caffeine adapter,,
1068,dcf83f80eaa2bfe1205b5498aa4588a57c5397f1,en Manes <ben.manes@gmail.com>, 2015-01-07 16:28:44 -0800, , try fix coverall multi project jacoco,,
1069,673ac5cebaeae3e498115cc6154419f457d98f7d,en Manes <ben.manes@gmail.com>, 2015-01-07 15:57:30 -0800, , fix weak value test bug,,
1070,e23c0259f51e492247d4349430d32a42e62e793a,en Manes <ben.manes@gmail.com>, 2015-01-07 04:43:45 -0800, , try fix checkstyle config,,
1071,3efebaf5eda4e48c1d29fea3d3cd8bab864f9d78,en Manes <ben.manes@gmail.com>, 2015-01-07 04:28:40 -0800, , fork kill process,,
1072,9d7173c06be21cf72fa1eea9ad657b63741966b3,en Manes <ben.manes@gmail.com>, 2015-01-07 04:02:07 -0800, , guava test fail,,
1073,6f71e6222372b723ce3855a12741ab4de3966e86,en Manes <ben.manes@gmail.com>, 2015-01-07 03:33:49 -0800, , disable expensive test hoping fix,,
1074,fce47c2cc54ebb81863265333198759ff7fd3fd4,en Manes <ben.manes@gmail.com>, 2015-01-07 03:11:15 -0800, , fix eclipse error due wrong truth lib,,
1075,79b79beb8b06edda4844dc35f694a50052f03db5,en Manes <ben.manes@gmail.com>, 2015-01-07 03:01:59 -0800, , setup nexus plugin fix javadoc lint error,,
1076,93a2ffadefd7b9417becf5996147b1b52399cc8a,en Manes <ben.manes@gmail.com>, 2015-01-07 01:55:24 -0800, , update readme,,
1077,8a76e0d2aceb8e7306990abec618390096ea249a,en Manes <ben.manes@gmail.com>, 2015-01-07 01:50:36 -0800, , fix slow test basic guava adapter,,
1078,8adf16e1de88db9cb6aea8b7c90e3193a1b610c1,en Manes <ben.manes@gmail.com>, 2015-01-07 01:12:11 -0800, , build cleanup,,
1079,8de1acd25780336d0b679c4ebbc0b76eb3bf076d,en Manes <ben.manes@gmail.com>, 2015-01-07 00:58:32 -0800, , clean multi project build,,
1080,72287ba1523d9841af7dba66c063c67e3d09651c,en Manes <ben.manes@gmail.com>, 2015-01-07 00:18:21 -0800, , guava subproject test compatibility layer,,
1081,77854ae6c8c0be48e60a8f4aa67208151877677b,en Manes <ben.manes@gmail.com>, 2015-01-06 23:14:31 -0800, , initial multi project build guava adapter tracing simulator subprojects,,
1082,f72e7f3ec334a39d78c374c3a4023e738b194631,en Manes <ben.manes@gmail.com>, 2015-01-06 22:28:53 -0800, , proper fix eclipse,,
1083,9e0a66c3a5e437c2a4f9500d4a2b5e9b73253c11,en Manes <ben.manes@gmail.com>, 2015-01-06 21:52:37 -0800, , fix jacoco coverage report,,
1084,71cb17c65359ee0319f77b23c7f8d5508a50dabc,en Manes <ben.manes@gmail.com>, 2015-01-06 21:18:34 -0800, , disable slow test somehow screwing coverall,,
1085,798468722087774ae078a14a1587eb8eb8e99637,en Manes <ben.manes@gmail.com>, 2015-01-06 21:00:12 -0800, , fix coverage reporting slow test,,
1086,46bd35cdc9eda18870ac7b9f8e95fd425f269a2f,en Manes <ben.manes@gmail.com>, 2015-01-06 20:42:35 -0800, , disable soft ref test unstable,,
1087,08a2fe1e20f220ce7927a4b7e38c18e2411d99b9,en Manes <ben.manes@gmail.com>, 2015-01-06 18:38:47 -0800, , might fix,,
1088,c94f312839e4614d5e36ea4eedf8ad245392a511,en Manes <ben.manes@gmail.com>, 2015-01-06 18:23:08 -0800, , easier debugging failure,,
1089,be95c0b9dca548430b78a6ac884732c295a2f89e,en Manes <ben.manes@gmail.com>, 2015-01-06 18:07:04 -0800, , try enabling slow test see failure fixed,,
1090,4600cf97029001bf35bf86f7853cb7aa339a247c,en Manes <ben.manes@gmail.com>, 2015-01-06 18:04:41 -0800, , break cache reference combination test task ensures none accidentally missing like hold onto context avoid accidental test run gradle test instead gradle check doe duplicate non cache test linkeddeque fast,,
1091,83834c03caecc8c7e817e55689b31fca7d27a8b2,en Manes <ben.manes@gmail.com>, 2015-01-06 02:47:59 -0800, , disable slow test fails though pass locally,,
1092,bb8360553392abbdd566a87bbfc7c2c776414dcf,en Manes <ben.manes@gmail.com>, 2015-01-06 02:47:41 -0800,4, fix javadoc,,
1093,a1a5bf94350aebfbb2bfcd02b7892f1eda35c387,en Manes <ben.manes@gmail.com>, 2015-01-06 02:19:06 -0800, , parallel build work coverall,,
1094,6b12e6939c32b028417ca935dcd6933a30c25d34,en Manes <ben.manes@gmail.com>, 2015-01-06 02:08:14 -0800, , parallel test task,,
1095,bf1d8902106d16d8314d491828ed1b4c5bf490d4,en Manes <ben.manes@gmail.com>, 2015-01-06 02:00:37 -0800, , run slow test parallel,,
1096,91b676c126a825ea9a2cbc8cf1389d5deab3b0d3,en Manes <ben.manes@gmail.com>, 2015-01-06 01:43:13 -0800, , fix,,
1097,accecd2c0e260959d7e1c085fcd6c33b8091d4b5,en Manes <ben.manes@gmail.com>, 2015-01-06 01:33:49 -0800, , enable slow test,,
1098,120af844fba09f18ca82f350f68ee4ccb961e0e9,en Manes <ben.manes@gmail.com>, 2015-01-06 00:37:21 -0800, , robust test wrt reference,,
1099,44157b35617eaa4dc41d2b0b93cc29e2a48979c2,en Manes <ben.manes@gmail.com>, 2015-01-05 23:34:34 -0800, , weakvalue test fix,,
1100,b7f8e18bd50ddcf0a4bd556763ce3605d325d553,en Manes <ben.manes@gmail.com>, 2015-01-05 23:13:51 -0800, , let gradle fork strength type new test runner,,
1101,83be48155a40a570f3f36d6bd96f21bbd663c078,en Manes <ben.manes@gmail.com>, 2015-01-05 19:35:22 -0800, , try run soft ref process,,
1102,ae76f353d466d28154a4a72ce45a78cc92313fb9,en Manes <ben.manes@gmail.com>, 2015-01-05 18:41:09 -0800, , try force collect soft reference kill,,
1103,14142945861ecd11bc629f96cf4949987164d4f4,en Manes <ben.manes@gmail.com>, 2015-01-05 10:10:26 -0800, , remove memory limit due oome,,
1104,82fdbad71ba7e24652aba53a5a6f75f5ffebcb18,en Manes <ben.manes@gmail.com>, 2015-01-05 09:47:42 -0800, , increment stats eviction,,
1105,ecd4f22ccfa7b9ee2143102bc1a8f0c3a02f5b58,en Manes <ben.manes@gmail.com>, 2015-01-05 09:03:59 -0800, , handle weak soft ref extremely well enable test million test,,
1106,24cbe1b943ba87ae3f265188987ccd0c1e5004cf,en Manes <ben.manes@gmail.com>, 2015-01-05 08:40:15 -0800, , rename size estimatedsize,,
1107,a3568a57b181a3b0cd099ca6a8d443946ed1f05c,en Manes <ben.manes@gmail.com>, 2015-01-05 08:20:24 -0800, , weak key fix disabled weak soft test due thrashing,,
1108,83ddf2453fe5a0473bffd05189ad907e29e66851,en Manes <ben.manes@gmail.com>, 2015-01-05 06:06:33 -0800, , fix weak key,,
1109,18a7e1f817e9bd988cf622408810eafcca8a5aa0,en Manes <ben.manes@gmail.com>, 2015-01-05 05:58:22 -0800, , fix weak soft value 355k test,,
1110,38488074055c034c9cee5ab2a7b1b8f05058ed22,en Manes <ben.manes@gmail.com>, 2015-01-04 20:01:18 -0800, , document static analyzer task,,
1111,393b431c4492ac943210e3167953d1c809e60f92,en Manes <ben.manes@gmail.com>, 2015-01-04 04:10:02 -0800, , upgrade checkstyle fetch google style dependency,,
1112,7d16583407fe538ff4d0f946e8872db5e7cf5bec,en Manes <ben.manes@gmail.com>, 2015-01-04 00:42:41 -0800, , perf fix,,
1113,a3a10f1a40a2a4de81fa97caaa4d362f94754066,en Manes <ben.manes@gmail.com>, 2015-01-03 22:39:43 -0800, , weak key pass,,
1114,280ec8d3d63dfc172d9a74fe003629a7621f7d2d,en Manes <ben.manes@gmail.com>, 2015-01-03 21:19:38 -0800, , basic test reference collection,,
1115,37bade9d06a2aac2ceb6b5a702546c286963880a,en Manes <ben.manes@gmail.com>, 2015-01-03 18:50:30 -0800, , little preperation work,,
1116,c510499bbd706585d2713eb9a30deaec9753408b,en Manes <ben.manes@gmail.com>, 2015-01-03 18:27:43 -0800, , add draining support reference collection,,
1117,3692075d1f0cf8692a1e302e8f0a10396ff8fbc5,en Manes <ben.manes@gmail.com>, 2015-01-03 17:38:32 -0800, , early scaffolding reference based eviction,,
1118,b700c9a88bdca899c5af3880dfccf30a955a32d8,en Manes <ben.manes@gmail.com>, 2015-01-03 04:16:04 -0800, , delete test made redundant,,
1119,5818986943a1209169f2a1ef551e4149e2121366,en Manes <ben.manes@gmail.com>, 2015-01-03 04:09:46 -0800, , add weigher test combination 180k,,
1120,82a29daf1221b737a1b72d90e28c393efdac157b,en Manes <ben.manes@gmail.com>, 2015-01-03 02:31:48 -0800, , enable expiration part default suite 90k test,,
1121,f4eb7f6252b4f750d5b799ea1ed3b8d48a502d98,en Manes <ben.manes@gmail.com>, 2015-01-03 01:53:59 -0800, , test,,
1122,0b65a4eb4d2480a0368d19023cd41b0ea40103a3,en Manes <ben.manes@gmail.com>, 2015-01-03 00:13:30 -0800, , asmap stats valid,,
1123,2dfbd9cedf6371542658823e909a9954cbef68ce,en Manes <ben.manes@gmail.com>, 2015-01-02 23:47:41 -0800, , stats fix,,
1124,550702da1789603afdfd1cf033b94f00ced1b05b,en Manes <ben.manes@gmail.com>, 2015-01-02 23:29:02 -0800, , asmap stats loadsuccess loadfailure hit miss confusing work right policy due equal etc,,
1125,ebc4c3dce7696628b74a5ada62b0222306a13e6a,en Manes <ben.manes@gmail.com>, 2015-01-02 21:46:26 -0800, , stats,,
1126,d96cf20e8e7c22d7d8de4c7e2aa0187eccf26f34,en Manes <ben.manes@gmail.com>, 2015-01-02 21:21:33 -0800, , work stats coverage,,
1127,97e3614989cfe562b40623a3f62b72ce7ea24271,en Manes <ben.manes@gmail.com>, 2015-01-02 17:01:18 -0800, , incremental work towards stats checking asmap view,,
1128,3df0d14d0445463153ac37a2960835733140d38a,en Manes <ben.manes@gmail.com>, 2015-01-02 02:40:00 -0800, , remove env var longer necessary,,
1129,c64afe555d63fc5f70471d591458f0d8c3907fb0,en Manes <ben.manes@gmail.com>, 2015-01-02 02:21:40 -0800, , elegant fix speed build solved memory issue removed hack,,
1130,77d568833589633a4abbc585f11a2c86a1e6ec9c,en Manes <ben.manes@gmail.com>, 2015-01-02 02:08:05 -0800, , work around testng holding params report causing memory leak,,
1131,eed4d6f90e8c1e7e4bd26b71350302b386b7d852,en Manes <ben.manes@gmail.com>, 2015-01-01 23:41:51 -0800, , enable test combination,,
1132,ae042b7172ead9d1ac907cc11d3dc64ae30f14bb,en Manes <ben.manes@gmail.com>, 2015-01-01 22:44:01 -0800, , fix build,,
1133,2f0a2b8a7a3040b499f55420e2cffbe1af81f302,en Manes <ben.manes@gmail.com>, 2015-01-01 22:37:12 -0800, , expiration test,,
1134,ba27744efe53c4b563faebfed54b17e4881dc8df,en Manes <ben.manes@gmail.com>, 2015-01-01 21:34:21 -0800, , little testing,,
1135,043c798aa5e4de0da3b2fa18b214e3dbc1b8ee35,en Manes <ben.manes@gmail.com>, 2015-01-01 19:17:12 -0800, , loose end,,
1136,6426cf7fa0febea1148df9704487e15c63be9d3d,en Manes <ben.manes@gmail.com>, 2015-01-01 18:44:25 -0800, , test,,
1137,239e2270617d49e497013f6befbc9e0114e09bf2,en Manes <ben.manes@gmail.com>, 2015-01-01 16:09:52 -0800, , added guava wrapper validate api compatibility caffeine test pending work reverse running caffeine guava test,,
1138,0e82f3f18b3600949326c4bf12864489fe9bbfca,en Manes <ben.manes@gmail.com>, 2015-01-01 13:10:01 -0800, , little expiration work,,
1139,949bb24ae946ad506cea8ea20cb7594f1f60ba52,en Manes <ben.manes@gmail.com>, 2015-01-01 04:12:44 -0800, , update test example,,
1140,bfc90d7c5a1de9c7e6e9ef9bf286cbae2a979d1a,en Manes <ben.manes@gmail.com>, 2015-01-01 02:21:49 -0800, , exploratory expiration code,,
1141,dc004fb398ca850d9503b0598d625dd250319689,en Manes <ben.manes@gmail.com>, 2015-01-01 00:37:15 -0800, , test example pending support,,
1142,a0868737f0abf89fa38b57737267e8efbdefa224,en Manes <ben.manes@gmail.com>, 2014-12-31 23:46:02 -0800, , expiration handling,,
1143,d9a748d3351ffdce9168bb2df8eb98c1b7fe87f9,en Manes <ben.manes@gmail.com>, 2014-12-31 22:52:02 -0800, , add expiration support cachespec faster test execution,,
1144,1a7da0f27dfe510087b205a1c37423f868ccf39a,en Manes <ben.manes@gmail.com>, 2014-12-31 17:58:47 -0800, , full coverage linkeddeque implementation,,
1145,8fdde074e051458a879b8fd02219611c9844ddaa,en Manes <ben.manes@gmail.com>, 2014-12-31 17:27:02 -0800, , expiration basic,,
1146,1af2c33df21527f211abcc84bd5f918254bc7a78,en Manes <ben.manes@gmail.com>, 2014-12-31 17:13:04 -0800, , scaffolding expiration access order write order deques,,
1147,3c9b0b3bab8673aee82aac602490abc4eec7cf53,en Manes <ben.manes@gmail.com>, 2014-12-31 13:31:26 -0800, , stricter memory setting,,
1148,acedef991bf6e6a24b2a2fe0f29bf94797e14f19,en Manes <ben.manes@gmail.com>, 2014-12-31 04:22:39 -0800, , reduce memory usage test,,
1149,636725879fc60905994c5a5b25e74d566c730928,en Manes <ben.manes@gmail.com>, 2014-12-30 03:16:37 -0800, , fix mask,,
1150,8b9afd4370db347b537825b5344ca16e0c36a359,en Manes <ben.manes@gmail.com>, 2014-12-30 02:46:53 -0800, , yourkit profiler,,
1151,eb7a5bc380819c9bc713442d435e14d1639e3821,en Manes <ben.manes@gmail.com>, 2014-12-30 02:30:44 -0800, , still confused 137s ...,,
1152,dbb7ac5c7e883f221c448f8af34fb05a5a571311,en Manes <ben.manes@gmail.com>, 2014-12-30 02:27:24 -0800, , accidentally set env matrix,,
1153,46d10bcb67dffc8cbf715a06f22cffe8b8dbfae4,en Manes <ben.manes@gmail.com>, 2014-12-30 02:19:42 -0800, , force work around guava memory leak,,
1154,016d916d2f0104650cf7e95a5777c784d96bfd96,en Manes <ben.manes@gmail.com>, 2014-12-30 01:46:48 -0800, , bother testing eviction allows miss test hit,,
1155,6a2e8622f4f61140ac50131c4d37f88d442db6b2,en Manes <ben.manes@gmail.com>, 2014-12-30 01:33:58 -0800, , fix build,,
1156,976b7724dedfd64c2a900dd2a1adda4986364470,en Manes <ben.manes@gmail.com>, 2014-12-30 01:27:10 -0800, , little profiling fun,,
1157,d706a0bb0879280bc76191d264c9b9d9c4b0fd69,en Manes <ben.manes@gmail.com>, 2014-12-29 21:43:08 -0800, , add support delegating bulk loader,,
1158,1bf9f3b1a96988d39d2406942bbcc57fa1c8bfdd,en Manes <ben.manes@gmail.com>, 2014-12-29 20:04:03 -0800, , bulk load support unbounded cache,,
1159,9a5c2759e7457b5f5d00837ba8efd05d6fd67658,en Manes <ben.manes@gmail.com>, 2014-12-29 17:47:20 -0800, , try reduce garbage,,
1160,2f2dc5671f8ae2694ff93976fb4aa9b0852b24ca,en Manes <ben.manes@gmail.com>, 2014-12-29 16:59:59 -0800, , eviction test,,
1161,de81566412c0efa807ccf92b0a7fd47cf12b5a96,en Manes <ben.manes@gmail.com>, 2014-12-29 04:35:04 -0800, , low level test,,
1162,35dc23024278cbbc211b97c897bd7da6de9481db,en Manes <ben.manes@gmail.com>, 2014-12-29 03:38:07 -0800, , lower level test,,
1163,dfb89f02db7acb17e09ca9156651b26eebd7b949,en Manes <ben.manes@gmail.com>, 2014-12-29 03:05:04 -0800, , added eviction test,,
1164,4cdbd797a375fda484e2946f84ccb46bd289281b,en Manes <ben.manes@gmail.com>, 2014-12-28 23:45:02 -0800, , sprinkle jsr305 annotation,,
1165,b71c63871fddcb33be848605b3010187bdf78224,en Manes <ben.manes@gmail.com>, 2014-12-28 23:11:33 -0800, , fix tostring,,
1166,c4adfed1893d1ebef84dc018812d6f8891d36a39,en Manes <ben.manes@gmail.com>, 2014-12-28 22:50:50 -0800, , javadoc fix,,
1167,54371aa3728700db42734537ed1e642381058b0f,en Manes <ben.manes@gmail.com>, 2014-12-28 21:17:09 -0800, , api spec,,
1168,f8e28c62b64877ce50461306c2d559c2fc9a7241,en Manes <ben.manes@gmail.com>, 2014-12-28 21:05:46 -0800, , provide low level access cache,,
1169,7c7e613e692bf6c88481903f65199a169a150065,en Manes <ben.manes@gmail.com>, 2014-12-28 17:45:01 -0800, , finish javadoc caffeine cache builder,,
1170,472d33a62ddcc638aa16cfe9b58397c506bd5a7e,en Manes <ben.manes@gmail.com>, 2014-12-28 17:10:20 -0800, , javadoc,,
1171,6efbcad58686fef4857b49575fdcb626ab5a70d3,en Manes <ben.manes@gmail.com>, 2014-12-28 16:13:50 -0800, , javadoc,,
1172,08ea7e8180b31bda6409b5d037573a634c2d49a2,en Manes <ben.manes@gmail.com>, 2014-12-28 15:21:23 -0800, , starting document caffeine builder,,
1173,644cb5d072ea9c90c6d03b90b4eb1437c383105e,en Manes <ben.manes@gmail.com>, 2014-12-28 14:11:59 -0800, , javadoc fix,,
1174,ce0b44b0082b4876033e59935f1d9e81bb9cbb8f,en Manes <ben.manes@gmail.com>, 2014-12-28 13:22:23 -0800, , minor stats fix,,
1175,b0e4e4e35f7006e8966b0a9597b531df9e329357,en Manes <ben.manes@gmail.com>, 2014-12-28 03:24:39 -0800, , make ticker interface referencing non public top level class instead abstract class nested private implementation,,
1176,82beee690e7173eb3b40d5087ef730ebf7c4214f,en Manes <ben.manes@gmail.com>, 2014-12-28 02:41:14 -0800, , document asynchronous caching api,,
1177,20fc66ade21b8b44d5b4ef2a8cba8cb0bcadb8c6,en Manes <ben.manes@gmail.com>, 2014-12-28 01:34:36 -0800, , stubbbing asynccache,,
1178,954dcebcccb5ba9ec7cc1eb05ac6f9156b9c7751,en Manes <ben.manes@gmail.com>, 2014-12-28 00:35:28 -0800, , minor cleanup,,
1179,b4565be9cfc350a819470220be68d4c888d3feb9,en Manes <ben.manes@gmail.com>, 2014-12-28 00:20:34 -0800, , remove dead code,,
1180,e6cd3111b3fa3c12a1b161985e2f649ea8e47768,en Manes <ben.manes@gmail.com>, 2014-12-27 23:45:07 -0800, , remove abstract class shared abstraction,,
1181,e50a9ab01b778662ccd7e93e8126caf49c729120,en Manes <ben.manes@gmail.com>, 2014-12-27 22:32:58 -0800, , linkeddeque test validators,,
1182,ea0944ea934fd5c5d3c9db7244441a589eccc5b8,en Manes <ben.manes@gmail.com>, 2014-12-27 21:31:59 -0800, , enabled stats testing,,
1183,593bd4f9b31066f7dd8f4cc890fb87797f1a5e67,en Manes <ben.manes@gmail.com>, 2014-12-27 20:17:57 -0800, , proactively free memory test completion,,
1184,f0b784f35291dbb2f6db8eea524e30ef056c19ba,en Manes <ben.manes@gmail.com>, 2014-12-27 19:43:06 -0800, , another experiment reduce memory usage,,
1185,99e5e3bb6d500811aa6c4064ecc0ca72204b85db,en Manes <ben.manes@gmail.com>, 2014-12-27 19:37:22 -0800, , use slimmer lock appropriate,,
1186,30ec8e76e351335b730819a0300f4de1570e1369,en Manes <ben.manes@gmail.com>, 2014-12-27 17:55:59 -0800, , try reduce oomes forking new jvm,,
1187,5ae2f77ff1e50e95e90202c5f34588696adaee00,en Manes <ben.manes@gmail.com>, 2014-12-27 17:34:40 -0800, , even worse ... idea oome,,
1188,f0afbaf5c7bebf05f2d5a3b66caf79083380a004,en Manes <ben.manes@gmail.com>, 2014-12-27 17:15:27 -0800, , try removing container based build see unstable,,
1189,cafacdd6ce6c59369ed1f343907632afe6be8f86,en Manes <ben.manes@gmail.com>, 2014-12-27 17:10:50 -0800, , loadingcache support bounded local cache,,
1190,30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e,en Manes <ben.manes@gmail.com>, 2014-12-27 16:20:45 -0800, , big nasty version compute might actually work,,
1191,e91f9d320e9fa9e1d595a5a0307960195b7ab936,en Manes <ben.manes@gmail.com>, 2014-12-27 15:29:42 -0800, , replace conditional remove loop synchronized block,,
1192,a0ff03c75aad74bad327c333b7834ce35ad17e88,en Manes <ben.manes@gmail.com>, 2014-12-27 14:39:51 -0800, , replace synchronized handle race compute method,,
1193,d9a19a5a1795a3314576195f7ce3f86623f2535a,en Manes <ben.manes@gmail.com>, 2014-12-27 12:43:05 -0800, , add benchmark lock type,,
1194,bcd9bd5d786d67de907be29114ae7883835219cd,en Manes <ben.manes@gmail.com>, 2014-12-27 03:55:30 -0800, , attempt make memory efficent test case generation may fix,,
1195,cc5fd571115e8bc2e2c7cf1fb00a84e29bcb6ba0,en Manes <ben.manes@gmail.com>, 2014-12-27 02:19:16 -0800, , remove travis kill job ...,,
1196,633ad80fcabb6f38e828000e20912809263cfb1c,en Manes <ben.manes@gmail.com>, 2014-12-27 02:15:47 -0800, , enable forkjoin pool probably memory overuse,,
1197,3ddc1dc4ac1e1dafe62904d6bc851275e43b9a4e,en Manes <ben.manes@gmail.com>, 2014-12-27 02:12:36 -0800, , try reduce memory usage test may killing build,,
1198,d373882959ecb49df3fc3405b81965ca0e916aa9,en Manes <ben.manes@gmail.com>, 2014-12-27 02:01:08 -0800, , reduction pas kill switch,,
1199,3e2199572b0ca625e2ad8909e34a958485b5a788,en Manes <ben.manes@gmail.com>, 2014-12-27 01:35:16 -0800, , investigating failure,,
1200,f4ee77dbbbfdd29dc2ff8acbd7a991c916df2c05,en Manes <ben.manes@gmail.com>, 2014-12-27 01:22:46 -0800, , reduce thread count fix travisci killing build,,
1201,5e364fb25d4ceae35b4c5eae707d4292584b0486,en Manes <ben.manes@gmail.com>, 2014-12-27 01:16:29 -0800, , removal listener supported,,
1202,363348d0dc1d0d428e9f5895d8c9e0d52db03b3b,en Manes <ben.manes@gmail.com>, 2014-12-27 00:23:39 -0800, , tested cachespec feature disabled yet fully supported,,
1203,8ca785e62bd77fcf49df15248c20a472dfb49c74,en Manes <ben.manes@gmail.com>, 2014-12-26 23:57:30 -0800, , progress towards maximumsize support,,
1204,811764712b47c7aed6a16f359a11c9c74f47e438,en Manes <ben.manes@gmail.com>, 2014-12-26 21:54:50 -0800, , flushing new compute method cause race condition handled,,
1205,46ec7d2310b06419051c2dca94f779c50b1a62de,en Manes <ben.manes@gmail.com>, 2014-12-26 20:00:06 -0800, , add removal notification replacement,,
1206,80e97a64300d1e4fb6052f3a9f94f45e57df0e0c,en Manes <ben.manes@gmail.com>, 2014-12-26 18:35:04 -0800, , transition shared builder,,
1207,385de8585a12eaadade5b504fcded0df366d8ac5,en Manes <ben.manes@gmail.com>, 2014-12-26 17:54:13 -0800, , rename clhm,,
1208,410edf36d846547d47bc168138c78c76c63b8416,en Manes <ben.manes@gmail.com>, 2014-12-26 17:47:08 -0800, , remove dead duplicated code,,
1209,de26be211f9cde52ae88591aafc69c608f5dde6b,en Manes <ben.manes@gmail.com>, 2014-12-26 17:45:10 -0800, , replace removallistener,,
1210,006253a5120aa2a3aa47076ad53d6ee2301b76bb,en Manes <ben.manes@gmail.com>, 2014-12-26 17:16:58 -0800, , transition clhm weigher guava,,
1211,54b5e3c0c41cfd6e4b0ef03bfd4382f19f31659a,en Manes <ben.manes@gmail.com>, 2014-12-26 17:06:20 -0800, , embedd clhm transitioning cache backend,,
1212,234a32237c7ce3f538378d9970a422fc0658a1e4,en Manes <ben.manes@gmail.com>, 2014-12-26 15:54:17 -0800, , embedd manual loading abstraction implementation likely always implementation specific also probably away due inability reuse evicting version unbounded variant stay mostly baseline api test evicting version built,,
1213,0f0826be0986f4d871441b2203c5b2e8316ee3ab,en Manes <ben.manes@gmail.com>, 2014-12-26 15:12:14 -0800, , spliterator test,,
1214,040ff47ea806ba002b39ff68ee812aa6a72ce91a,en Manes <ben.manes@gmail.com>, 2014-12-26 14:50:26 -0800, , stats instrumentation test,,
1215,c617f303de6c41597779118278722d7cc37c4c07,en Manes <ben.manes@gmail.com>, 2014-12-25 23:58:28 -0800, , comment experimental snippet,,
1216,008decc5fa35cff0487a677d7b26bd270ff13fc7,en Manes <ben.manes@gmail.com>, 2014-12-25 23:57:29 -0800, , test atomics code coverage,,
1217,e5fde0ddf7b0e0200599c00bb880f685cb65c300,en Manes <ben.manes@gmail.com>, 2014-12-25 23:22:36 -0800, , cache refresh test,,
1218,bc84b7a2e257da212141a09bdc26dc67bcb0a0e2,en Manes <ben.manes@gmail.com>, 2014-12-25 21:58:11 -0800, , loadingcache test,,
1219,5889e4f39f5f4f276889577006531815da1807fb,en Manes <ben.manes@gmail.com>, 2014-12-25 21:13:58 -0800, , stubbing loadingcache testing,,
1220,6b0de9d0e675f7f14d20f6b8c0990264c16ebf3c,en Manes <ben.manes@gmail.com>, 2014-12-25 19:56:31 -0800, , experiment pondering smart bulk loading strategy,,
1221,1c1eee2de92c7d6fac5260d2d481da92f66ebb0b,en Manes <ben.manes@gmail.com>, 2014-12-25 17:31:31 -0800, , javadoc,,
1222,b9f1cd27918014206309edf2afae96d5b9886efe,en Manes <ben.manes@gmail.com>, 2014-12-25 16:32:17 -0800, , added cachestats matcher,,
1223,ef93beb220396e4853c3f8634d5ff5e0be2d5fb2,en Manes <ben.manes@gmail.com>, 2014-12-25 15:04:46 -0800, , early work recording stats,,
1224,ce7293cac59000128b0674fe008c8c55915e082f,en Manes <ben.manes@gmail.com>, 2014-12-25 03:03:07 -0800, , stats,,
1225,62a79dbe6d2c2a0238efe1ce4de57aa8c5289326,en Manes <ben.manes@gmail.com>, 2014-12-25 01:32:06 -0800, , javadoc cache,,
1226,746dddfa0b1b5f7b8d635945acc1f47c9e6c8166,en Manes <ben.manes@gmail.com>, 2014-12-24 23:31:03 -0800, , entryset test,,
1227,f44347b548d25473da180b042ebec693ed7e2d80,en Manes <ben.manes@gmail.com>, 2014-12-24 23:01:39 -0800, , keyset value testing,,
1228,8971f01efdffefa846ccb97fb334b9c85a953f6a,en Manes <ben.manes@gmail.com>, 2014-12-24 21:25:19 -0800, , merge test,,
1229,750039cadc7790b8343b547edf716846da56364e,en Manes <ben.manes@gmail.com>, 2014-12-24 20:53:20 -0800, , compute test,,
1230,cb64859e7336563ba2fe4cd5b0924dd8c93c2fd0,en Manes <ben.manes@gmail.com>, 2014-12-24 20:01:34 -0800, , test,,
1231,07ea131788fedb12146d6b8aed705d5e26cc018f,en Manes <ben.manes@gmail.com>, 2014-12-24 18:56:53 -0800, , computeifabsent test,,
1232,4dbd22925d70e2379f5361d9a17d6ca2abd6c986,en Manes <ben.manes@gmail.com>, 2014-12-24 18:11:50 -0800, , replaceall test,,
1233,72bc13767ca532d9c487225e04ec90e6d9a74a36,en Manes <ben.manes@gmail.com>, 2014-12-24 17:15:09 -0800, , foreach test,,
1234,db918ed21b9df78b09e609e528a962f317bcca74,en Manes <ben.manes@gmail.com>, 2014-12-24 16:46:51 -0800, , getordefault test,,
1235,b31c0d7465cbdfaae84ae67af3d9ddfba60f8ba2,en Manes <ben.manes@gmail.com>, 2014-12-24 16:28:42 -0800, , tostring,,
1236,5b5030fb37c14c9091c274c18cb3895c3bf557d9,en Manes <ben.manes@gmail.com>, 2014-12-24 16:10:52 -0800, , replace method test,,
1237,833693966dac4e830603192bb3e23ebac12648bf,en Manes <ben.manes@gmail.com>, 2014-12-24 15:25:54 -0800, , remove test,,
1238,5d909b2d02de82f2577cc978c70495f7b85bf734,en Manes <ben.manes@gmail.com>, 2014-12-24 14:23:02 -0800, , putifabsent test,,
1239,6acc859d444f448bde3541bc70630a4d2e6c8e11,en Manes <ben.manes@gmail.com>, 2014-12-24 13:35:24 -0800, , putall,,
1240,c0bb98732b7453fab289b3aafee58e811d80ce37,en Manes <ben.manes@gmail.com>, 2014-12-24 13:00:41 -0800, , put test,,
1241,4ed9b2ab028e2fc6c52d1af58ab1816ab03e6310,en Manes <ben.manes@gmail.com>, 2014-12-24 12:33:34 -0800, , contains get test,,
1242,86d179193b6707d4de742deb36fc2f0099b01576,en Manes <ben.manes@gmail.com>, 2014-12-24 01:39:17 -0800, , use semantic versioning,,
1243,c6a5b012b416902d8d1bbd530c799a2c02d51dd0,en Manes <ben.manes@gmail.com>, 2014-12-24 00:12:46 -0800, , starting asmap test,,
1244,bc0d2251636929b3247d40b106c6c03490254e99,en Manes <ben.manes@gmail.com>, 2014-12-23 21:13:47 -0800, , drop guava checked exception model computing,,
1245,98e33edf00cb8c06a00a9b055ab61d7a28a8b2dd,en Manes <ben.manes@gmail.com>, 2014-12-23 19:51:17 -0800, , removal notification,,
1246,a392a537ef0324130df9893ce8decd1d9c47b8ec,en Manes <ben.manes@gmail.com>, 2014-12-23 19:20:47 -0800, , support removal listener,,
1247,d966e611a281d7d4dc8386f44e3db10cf18d00a0,en Manes <ben.manes@gmail.com>, 2014-12-23 16:15:33 -0800, , restore executor dispatch,,
1248,59b7d149f2cb9a25542a85244a350a86d9933f73,en Manes <ben.manes@gmail.com>, 2014-12-23 16:09:50 -0800, , smarter bypass sending notification removal listener defined,,
1249,78e75792de6251bf9e6f609259247a464d820e80,en Manes <ben.manes@gmail.com>, 2014-12-23 14:56:48 -0800, , putall test,,
1250,a757e8d6f7b1fa786f14b1cf7c0e8dd526f435c6,en Manes <ben.manes@gmail.com>, 2014-12-23 13:15:36 -0800, , invalidateall test,,
1251,7a14ad771b5d156799a5ea32639fa248e6fc68c3,en Manes <ben.manes@gmail.com>, 2014-12-23 02:47:37 -0800, , add put test case,,
1252,64ae4f3c306cdd02838a6c83c5c7a4061d353c89,en Manes <ben.manes@gmail.com>, 2014-12-23 00:22:35 -0800, , getallpresent test,,
1253,ee13599abd83e15ae550bb765ce618ad7b8866cb,en Manes <ben.manes@gmail.com>, 2014-12-22 23:18:02 -0800, , testing,,
1254,68d312bd2b301f0aeafce25c8484281b2e856194,en Manes <ben.manes@gmail.com>, 2014-12-22 21:52:21 -0800, , default allow max number test configuration,,
1255,32a34ee374b44ea4b3b580eec99d0d1d18e571b3,en Manes <ben.manes@gmail.com>, 2014-12-22 20:25:13 -0800, , work caching test framework,,
1256,959b53091b0220afaeb8fbc137dbf8e409d00509,en Manes <ben.manes@gmail.com>, 2014-12-22 02:22:09 -0800, , update deps add shell script,,
1257,82184ab6860e6313065e9a5c07846b97fa613cbf,en Manes <ben.manes@gmail.com>, 2014-12-22 02:01:38 -0800, , add removal listener test case,,
1258,bf830a218ad1f6f367c79363f6ecd45d0699a1dc,en Manes <ben.manes@gmail.com>, 2014-12-21 23:32:08 -0800, , testing,,
1259,03eb6c02b13031b86a7a466b789adf6dbd18e528,en Manes <ben.manes@gmail.com>, 2014-12-21 22:40:53 -0800, , test,,
1260,bdc3eedc60c6735cf7e1de793d2d4a2e68083825,en Manes <ben.manes@gmail.com>, 2014-12-21 22:23:51 -0800, , fix test,,
1261,4b4cf5bef870977cb093cd3912fa541726557782,en Manes <ben.manes@gmail.com>, 2014-12-21 22:01:24 -0800, , add cachecontext avoid hard coding test assumption,,
1262,601fc1b0953fb0829222fc5b4f0d93e48a49405e,en Manes <ben.manes@gmail.com>, 2014-12-21 15:58:57 -0800, , doug 2nd patch,,
1263,4e91ece8d73cc344177b16a09abcabf10d688b7a,en Manes <ben.manes@gmail.com>, 2014-12-21 15:17:57 -0800, , update chm2 use doug instanceof check,,
1264,98451104613fc0e823fd0fdd8bb9ed7b7cf9d1fa,en Manes <ben.manes@gmail.com>, 2014-12-20 13:06:54 -0800, , chm2 potential fix livelock issue,,
1265,7f2cad8a3478bac1ca97bf15fd8e7af593c5ca13,en Manes <ben.manes@gmail.com>, 2014-12-20 02:23:25 -0800, , verify max size cache spec,,
1266,c69526a9a21af2c0c142cf01e0a5ebec373711c9,en Manes <ben.manes@gmail.com>, 2014-12-20 02:05:08 -0800, , cachespec support,,
1267,81dadb0559ab70c30987bbf1ffaaad6e589d5cf0,en Manes <ben.manes@gmail.com>, 2014-12-20 00:57:09 -0800, , fix findbugs error,,
1268,d0e83d67ab44e270f898c263f96864d8c628219d,en Manes <ben.manes@gmail.com>, 2014-12-20 00:51:01 -0800, , cachespec support,,
1269,dc292151f15968aa49f4efe2ad625a56e10ef49d,en Manes <ben.manes@gmail.com>, 2014-12-19 23:03:00 -0800, , added combinational test support defining cachespec generate scenario,,
1270,005ea1d1642572e5cc16726c6ffb7e92166c7e65,en Manes <ben.manes@gmail.com>, 2014-12-19 16:20:51 -0800, , intercept default method concurrentmap,,
1271,7c327ddbe60cfadd6891864c0f99af006b1fdea3,en Manes <ben.manes@gmail.com>, 2014-12-18 15:39:59 -0800, , bit view,,
1272,aab7c2661ff01f1beb5d7c7eaa249aff318907ac,en Manes <ben.manes@gmail.com>, 2014-12-18 14:33:17 -0800, , scaffolding,,
1273,ed8d9d148456d34b0de1792c3439d27fd9817ceb,en Manes <ben.manes@gmail.com>, 2014-12-18 04:18:49 -0800, , basic scaffolding stubbing look ugly hacky,,
1274,7997a00bee40b6cc2d52db9e8a3f1eba77e11115,en Manes <ben.manes@gmail.com>, 2014-12-18 00:07:17 -0800, , check cslm,,
1275,a71ccbf0c9751a3b50aff8a9d18bb3836caed8cc,en Manes <ben.manes@gmail.com>, 2014-12-17 23:37:28 -0800, , chm performance livelock bug,,
1276,40f4e9d7c684c8c0a19377055df51d1b1140c8a7,en Manes <ben.manes@gmail.com>, 2014-12-17 20:11:07 -0800, , junk trying figure start ...,,
1277,02b0116aec4cdaf9ba0c9150f58b1692e234f3d1,en Manes <ben.manes@gmail.com>, 2014-12-17 17:30:38 -0800, , added checkstyle caching stub,,
1278,20a04e9f3778b7d2599c0a61dfd15630bff80835,en Manes <ben.manes@gmail.com>, 2014-12-17 06:02:51 -0800, , added cache benchmark ycsb distrubtion generator,,
1279,26f6588c0d1f45549fa62ab9703aa3204a579094,en Manes <ben.manes@gmail.com>, 2014-12-17 03:49:57 -0800, , parameterize benchmark,,
1280,db06dbbb610146994f32e050caa527641a74e0e1,en Manes <ben.manes@gmail.com>, 2014-12-17 02:30:03 -0800,1, merge pull request waffle iron master waffle.io badge,,
1281,529aac33a2d09ae1ba1a7d3b1b10682f4b596c48,aking GitHub Delicious. <iron@waffle.io>, 2014-12-17 03:27:49 -0700, , add waffle.io badge,,
1282,ce21ed48daa1e7f125cafaa1e15ac529c5146525,en Manes <ben.manes@gmail.com>, 2014-12-17 02:09:59 -0800, , touchups,,
1283,b610b1a0cacfe1c039c4e3ab149df0db5962213c,en Manes <ben.manes@gmail.com>, 2014-12-17 01:00:22 -0800, , fix false sharing impacting performance,,
1284,e6cb293f36e8357af3220f2cc30ac40274d2d2a9,en Manes <ben.manes@gmail.com>, 2014-12-17 00:34:39 -0800, , added benchmark mpsc,,
1285,d2555e9c35d3d858962e9630de8d3eb258562244,en Manes <ben.manes@gmail.com>, 2014-12-16 21:38:48 -0800, , removed dependency guava compiling src main,,
1286,521926478c338fd526d76c2ace3a8cc577cd0fd6,en Manes <ben.manes@gmail.com>, 2014-12-16 19:50:44 -0800, , fix data provider test running,,
1287,564b57aa1585d6d693e14e0a2f9faa2d9c2c076f,en Manes <ben.manes@gmail.com>, 2014-12-16 17:44:50 -0800, , fix naming,,
1288,04b2ae4b2197423d6772440a48f4e99095de576b,en Manes <ben.manes@gmail.com>, 2014-12-16 17:38:48 -0800, , fix iterator,,
1289,0ea1686254b4ea0d555c554bfd1b036fb20130d2,en Manes <ben.manes@gmail.com>, 2014-12-16 17:24:28 -0800, , work back original config,,
1290,b31ceee8338a40bb6c3b3678a5ec2bf4530f2c2b,en Manes <ben.manes@gmail.com>, 2014-12-16 17:15:39 -0800, , another try,,
1291,5ead14ea562ac90b7caa446b1a5b0435f78308ad,en Manes <ben.manes@gmail.com>, 2014-12-16 17:07:11 -0800, , trying fix coverall,,
1292,1247af69e92e50efced3bc1a8c8f4b08de6b3eb4,en Manes <ben.manes@gmail.com>, 2014-12-16 16:47:48 -0800, , add coverage containsall,,
1293,eaea3ae6f28467786a9f2a29ad2da53b7f261ef0,en Manes <ben.manes@gmail.com>, 2014-12-16 16:25:26 -0800, , added test listener validate internals successful test,,
1294,ac98aadf70246e0afec3d7fda261ca637450eca5,en Manes <ben.manes@gmail.com>, 2014-12-16 14:52:28 -0800, , fix race condition test case,,
1295,32552722531b2f12fefdcac2d738de3f652fb08e,en Manes <ben.manes@gmail.com>, 2014-12-16 12:29:16 -0800, , concurrency test,,
1296,826b38930e7eb4ba196075ce9b63fc1251394db2,en Manes <ben.manes@gmail.com>, 2014-12-16 04:35:19 -0800, , add link,,
1297,1e142c37bffa8178fde260223ae25e357d5981ba,en Manes <ben.manes@gmail.com>, 2014-12-16 04:33:45 -0800, , improved javadoc,,
1298,0df8cddd1640150a909faf7d78b88724d00f4068,en Manes <ben.manes@gmail.com>, 2014-12-16 04:08:51 -0800, , first proof multi threaded scq work,,
1299,ac0eab17287acc0310e6d8b656725ba4c30802ba,en Manes <ben.manes@gmail.com>, 2014-12-16 03:57:36 -0800, , pass single threaded test,,
1300,2ce63416dbe0146920e5623eae5b6dac6c46e74c,en Manes <ben.manes@gmail.com>, 2014-12-16 03:00:50 -0800, , test fix,,
1301,ccb5fbcfca078c80b080f9caf6edb070516023d7,en Manes <ben.manes@gmail.com>, 2014-12-16 02:03:22 -0800, , trying fix coverall,,
1302,0fa9137af36d51240adc7c9663d9705b1f36c356,en Manes <ben.manes@gmail.com>, 2014-12-16 01:44:04 -0800, , fix findbugs warning,,
1303,4359b897e4430ba368bbad0c67de2c54e09a28b4,en Manes <ben.manes@gmail.com>, 2014-12-16 01:35:20 -0800, , still bug closer,,
1304,19f9576af5827bb4da06fbae4169c485520bd5e5,en Manes <ben.manes@gmail.com>, 2014-12-15 23:48:33 -0800, , improved tostring,,
1305,ab518aa3c26db6451cce6b04b978485931486728,en Manes <ben.manes@gmail.com>, 2014-12-15 22:42:50 -0800, , testing still bug,,
1306,7182a26644520e2de89876b3cac0ca3a913574b3,en Manes <ben.manes@gmail.com>, 2014-12-15 16:08:40 -0800, , testing build tooling csq test removal fail osgi manifest findbugs unconfigured pmd coverage report,,
1307,c668d57c73cdb7dab628a3ddddeb72e2c1d17154,en Manes <ben.manes@gmail.com>, 2014-12-15 03:19:43 -0800, , progress scq,,
1308,0a4d36d1353bcf438ee553b192d6d4c818c9713c,en Manes <ben.manes@gmail.com>, 2014-12-14 23:58:09 -0800, , incremental work scq,,
1309,65f0819ab9526807e851bede903eccad1159c93a,en Manes <ben.manes@gmail.com>, 2014-12-14 21:19:23 -0800, , expand readme,,
1310,9a0c41cc7ab834d7865b5c8532ef168d83217bf7,en Manes <ben.manes@gmail.com>, 2014-12-14 19:40:21 -0800, , initial sketch single consumer multiple producer queue,,
1311,66da3bd983c858fcf426213342927e2d25c8a41b,en Manes <ben.manes@gmail.com>, 2014-12-14 17:11:17 -0800, , refactored profiler hook,,
1312,16d1324fa3a299232cbeecd8e4be44e0258cb286,en Manes <ben.manes@gmail.com>, 2014-12-14 05:08:47 -0800, , add benchmark comparing xfers queue,,
1313,062cc2d63d7f2e66037c9538e246ff3591bd0477,en Manes <ben.manes@gmail.com>, 2014-12-14 03:05:20 -0800, , add gradle task java object layout information,,
1314,32c4cabcf3efaf92df4b1626c1976620fed73a46,en Manes <ben.manes@gmail.com>, 2014-12-14 00:35:00 -0800, , added benchmark lookup strategy,,
1315,aeeb09081d4d161fd94a28d3fd1fdb415d6bb317,en Manes <ben.manes@gmail.com>, 2014-12-13 14:31:26 -0800, , jdk8 cleanup,,
1316,fe7868081a80e9daf422a63b567ae09cb99e4968,en Manes <ben.manes@gmail.com>, 2014-12-13 03:28:16 -0800, , added written previously experimenting,,
1317,89acc24221693352db317c7c3a1b8dc7a72a78c4,en Manes <ben.manes@gmail.com>, 2014-12-13 02:44:10 -0800, , add build scaffolding,,
1318,97b7960d4c8a5a79379c807f3b2405375abd9ebd,en Manes <ben.manes@gmail.com>, 2014-12-13 00:45:11 -0800, ,,,
