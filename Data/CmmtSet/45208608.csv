id,sha,author,date,issue,message,file,content
0,512033eed52fff82274650aca7d7374b4b305551,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-30 17:18:28 -0700, , properly print struct field name nominal 4042 field name lookup previously failing lookup used fresh struct type rather using intended struct type,,
1,479c63d56b5fe69663e90987a127c5918d79d961,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-30 10:07:28 -0700, , port test pass lit 4008 skip duplicate elimination test consider better inserting check removed item,,
2,57138f8cf94f0a55b615be9802ce76f6a6858f22,lon Zakai <azakai@google.com>, 2021-07-30 09:59:52 -0700, , crash extractfunction export already exists 4040 cleared list export exportmap still populated data inconsistent state fix case running extract function multiple time file usually useful unless one pass debugging add new function file,,
3,30ff262c916933a852805fe4acf07e5d7f34891c,lon Zakai <azakai@google.com>, 2021-07-30 09:59:32 -0700, , add comment simplifyglobals document existing work 4041,,
4,c5b945bb4c83192218d7706ea23d5ea91a82d65c,lon Zakai <azakai@google.com>, 2021-07-29 15:15:48 -0700, , wasm optimize repeated identical ref.casts 4039,,
5,be119e310624aa332fb476613a6e970fe214ec83,lon Zakai <azakai@google.com>, 2021-07-29 10:34:34 -0700, , wasm handle call_ref deadargument return refinement 4038,,
6,518ec5e028f540af69c9a346c4232941d81367ac,lon Zakai <azakai@google.com>, 2021-07-28 15:09:00 -0700, , refactor test separate file nfc 4037 test content moved around,,
7,bfe73c86b3dc6918334d678ab564e3dcb739a197,lon Zakai <azakai@google.com>, 2021-07-28 13:57:28 -0700, , wasm refine return type tail calling function 4036 need look tail call return,,
8,1ed257a587a30885f42f2c1b6170d662e741ae40,lon Zakai <azakai@google.com>, 2021-07-28 13:54:29 -0700, , wasm handle default value localsubtyping 4024 use default value reference even refine type would specifically typed null null compare however default used alter type non nullable use null allowed,,
9,c5166f636c5835413046be76e26c362ef4bbecc5,lon Zakai <azakai@google.com>, 2021-07-28 13:00:55 -0700, , wasm allow tail call subtyping 4035 partially reverts 4025 removing code update test show optimization,,
10,5aab7956eab367c12af1aadb052f67f40667e3ef,ax Graey <maxgraey@gmail.com>, 2021-07-28 22:09:01 +0300, , simd implement extra convert trunc demote promote ops interpreter 4023,,
11,8670f15676b3c6406d6e82327a7258c7c4d08b43,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-28 12:00:11 -0700, , support subtyping tail call 4032 tail call spec doe include subtyping based upstream spec doe contain subtyping however reason subtyping apply tail call like doe call return update validator allow subtyping avoid related null pointer dereference run test nominal buggy mode,,
12,be580c66645cdea13c8e8b3b77f12ef3a52e5f2e,lon Zakai <azakai@google.com>, 2021-07-28 09:11:43 -0700, , wasm update tee refining param type 4031,,
13,b99bf3a230d9e4333cb1fdf5e4b760f549f04057,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-27 12:22:40 -0700, , parse print pop compound type 4030 necessary using together instance,,
14,b3375bc19f67838d80eaa9af011952bfdaae243f,ax Graey <maxgraey@gmail.com>, 2021-07-27 18:41:43 +0300, , simd refactoring remove middle vec simd ops consistency 4027,,
15,e47dfd352bcf5ba71d18e402364be3e1c0df939f,lon Zakai <azakai@google.com>, 2021-07-27 08:21:08 -0700, , wasm refine return type tail callees 4025 tail call change return type function must match function tail call,,
16,8b606524401bf6fc9e0f46f51a66c5e37ec6e707,lon Zakai <azakai@google.com>, 2021-07-26 13:04:09 -0700,4014, wasm refine return type 4020 corresponds 4014 parameter type see whether return type actually returned function allow use specific type function return update type well call function,,
17,f09bb989a15451960c1078426b61dcc50f232a0a,ax Graey <maxgraey@gmail.com>, 2021-07-26 18:41:24 +0300, , simd add extending pairwise add interpreter 4022,,
18,ac05f9cef1085f62f40990e5fbbfdf32c0860409,ax Graey <maxgraey@gmail.com>, 2021-07-26 17:51:23 +0300, , simd add extend mul simd operation interpreter 4021,,
19,ccd0c966cbd6a9d94d57cd93a39de1aeb9feccc2,ax Graey <maxgraey@gmail.com>, 2021-07-26 17:12:20 +0300, , simd add extension i32x4 i64x2 ops interpreter 4016,,
20,ae060f070064fd87adae7ea9db5aeb2dace5a4ff,lon Zakai <azakai@google.com>, 2021-07-23 17:16:34 -0700, , wasm handle nondefaultable type localsubtyping 4019 pas handled non nullability another case tuple nullable value assigned non nullable value general stuff nondefaultable non nullable ignore,,
21,0b0054342af5c73de62ddf0603619292443c505c,lon Zakai <azakai@google.com>, 2021-07-23 14:40:24 -0700, , wasm fix heap2local non nullable local 4017 given local ref foo local.set local.get remove local.set get end local ref foo local.get look like local.get read initial value non nullable local allowed practice would crash precompute propagate would try propagate initial value get add assertion clear message full validation non nullable local spec flux pas bug end noticed fix replace get well replace null simplicity never used anyhow also uncovered small bug reached containing thing reached missing local.gets,,
22,d0d6ea3c201c52118c12c218c97f44efd6252542,ax Graey <maxgraey@gmail.com>, 2021-07-24 00:18:30 +0300, , simd refactor extend helper 4018,,
23,7996c8e5979147a8035e8f3ed7dfc9e02fc73152,lon Zakai <azakai@google.com>, 2021-07-23 12:56:46 -0700, , wasm local subtyping pas 3765 local say anyref value assigned something specific like funcref make type local specific principle might allow optimization local.gets local specific type user see like import func get funcref result funcref func foo result i32 local anyref local.set call get funcref ref.is_func local.get   func foo result i32 local funcref updated subtype original local.set call get funcref ref.is_func local.get optimized  possible downside using specific type may end allowing optimization may end increasing size binary say replacing lot anyref various specific type compress poorly also recursive type lub may unique type appearing nowhere else wasm investigate code size factor later,,
24,015d9f9dab116985fad1090f96e83ee71f036a6d,lon Zakai <azakai@google.com>, 2021-07-23 11:48:26 -0700, , clean rewrite wasm reduce element segment logic 4015 practically nfc doe reorder code little previously would find zero shrink segment use zero might longer table seems weird reorder significant difference output also reduce factor 100 practice important one dart benchmark huge number table segment,,
25,501259b4695ad6aaf42ce3f8875c3b8177ef756d,lon Zakai <azakai@google.com>, 2021-07-23 11:17:54 -0700, , wasm refine function parameter type 4014 function always called specific type declared make type specific name becoming increasingly misleading maybe renamed right place already doe lto scan call graph build parameter data structure etc,,
26,464ddbe5faf151b5ef50d56d00ad442ac76620a6,lon Zakai <azakai@google.com>, 2021-07-22 15:58:04 -0700, , wasm reduce avoid crash function name change 4013 reload wasm binary fails optimize without name section guarantee name would look name crash reverse order risk doe reload wasm binary carefully undoes tried fails,,
27,90545189ce4f790c798e83c1e65afb70f228d176,lon Zakai <azakai@google.com>, 2021-07-22 15:16:04 -0700, , reduce carefully look like failing 3996 instead skipping end move quickly towards end sometimes efficient jumping big factor factor skip big opportunity remove code instead instruction time,,
28,f01fd8cad1cb1a6a80ef12bcfc19502bd51ddf46,ax Graey <maxgraey@gmail.com>, 2021-07-22 21:16:45 +0300, , optimize instruction simplify zero sign extentions special case 4009 signed unsigned extension bit lowering partially filled bit argument rust i32.wrap_i64 maxbits i32.wrap_i64 maxbits ,,
29,b9b8d74a4c646c4df7ddad5be195cff976cf6704,lon Zakai <azakai@google.com>, 2021-07-22 10:23:15 -0700,4005, create select multivalue arm 4012 similar 4005 instead removeunusedbrs,,
30,556381b41aa95b56a77e9217afb2e2d7ecb230f5,lon Zakai <azakai@google.com>, 2021-07-22 09:11:12 -0700, , wasm avoid dangerous stackir opts 4007 force use local load emitted wasm work something nondefaultable like rtt run optimization enabled eventually perhaps want enable optimization different way,,
31,ed97c68294a8d95c57972eae22906cc0bea1aae8,ax Graey <maxgraey@gmail.com>, 2021-07-22 00:10:48 +0300,3973, optimize instruction combine reinterprets load store 4006 fix 3973 load i32.load f32.load i64.load f64.load f32.load i32.load f64.load i64.load store f32.store i32.store f64.store i64.store i32.store f32.store i64.store f64.store also optimize reinterprets undone    ,,
32,1e79c53ec1ad3d80db3354f15919331fdfa7ed28,lon Zakai <azakai@google.com>, 2021-07-20 13:04:28 -0700, , exponentially empty function body reducing 3997 remove code one time instead add way exponentially growing set function large testcases method work useful also adjust factor 20x often practice useful,,
33,e67d50d5a6290ec9968344ee5712ebf62847fea8,ax Graey <maxgraey@gmail.com>, 2021-07-20 22:28:07 +0300, , optimize instruction simplify sign extentions 4004 requiring sign extension  i64 i64.extend8_s i64 i64.extend16_s i64 i64.extend32_s i32.wrap_i64 i64.extend32_s  general  i32.wrap_i64 i32.wrap_i64 ,,
34,fb9de9d391a7272548dcc41cd8229076189d7398,lon Zakai <azakai@google.com>, 2021-07-19 14:38:24 -0700,3990, removeunusedbrs create select multivalue result 4005 spec disallows fix 3990,,
35,f98eb3463cdfb1ad6a97dc0c4ba6d6d99f77e706,lon Zakai <azakai@google.com>, 2021-07-19 14:38:10 -0700, , fix tiny typo 3995,,
36,e8c85ea1278c3ce77af2b60b68f78a35b5c58604,ax Graey <maxgraey@gmail.com>, 2021-07-19 23:18:04 +0300,3985, clang tidy diff replace readlink inline python script 4001 fix 3985,,
37,2d385ff8ebfcf65e3b532f4c42795758966abff4,outer van Oortmerssen <aardappel@gmail.com>, 2021-07-19 13:10:00 -0700, , memory64 fixed atomics bulk memory support 3992,,
38,ec6ef26ec4f4fdfc974e7087896ac004ac7c130a,lon Zakai <azakai@google.com>, 2021-07-19 09:07:50 -0700, , revert partially fix precompute simd 3983 4002 reverts commit instead applying workaround avoid precomputing simd place prevents thing could optimize probably focus making workaround needed implement full simd support intepreter reason todo comment engine implement v128.const simd aware optimization break large v128.const instruction smaller consts splat try precompute v128 expression,,
39,023bbb28f393032a8df6c743319cd835feddf5ba,ax Graey <maxgraey@gmail.com>, 2021-07-16 22:33:46 +0300, , optimize instruction simplify sign pattern like 3756 i32 i32 i32 i64 i64 i64 shrink byte,,
40,18375122edc23a5ff9acc0c4f930357687ff24dd,ax Graey <maxgraey@gmail.com>, 2021-07-16 22:28:01 +0300, , add ds_store non executable filter check.py 3999,,
41,88af50278a9bd36ae19a54151c2a3cf7a6f90023,lon Zakai <azakai@google.com>, 2021-07-16 10:14:54 -0700, , wasm fix getsenttype bron unreachable input 3993 without fix dce would end calling getheaptype unreachable input hit assertion heap type,,
42,5600a54526d3ed3d4501dc4db800de423a1c3b8d,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-16 09:59:42 -0700, , port test pass lit 3991,,
43,27831cba47722c10a8a6f412d56665a4e7074540,lon Zakai <azakai@google.com>, 2021-07-15 10:26:59 -0700, , wasm add wasm support 3976 add call import around every struct load store note value also array also note index useful debugging lowergc lowering wasm wasm mvp,,
44,a3d6930e59114196f29cb3318e96843dbd0b413c,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-15 09:21:50 -0700, , port test pass lit 3988,,
45,1b70f1e1f53084eae86680afd2c97ef034490197,lon Zakai <azakai@google.com>, 2021-07-15 07:06:04 -0700, , fuzzer fix handling feature initial content 3981 feature section add top commandline argument mean way test initial content use work wasm feature section enable feature even wanted see wasm work without feature fix strip feature section,,
46,3d4f128564a6ae2a378066112138a69b6414e521,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-14 16:12:08 -0700, , port test pass lit 3987,,
47,3130409376dff61eb7b1bec01166ff72e927bad6,lon Zakai <azakai@google.com>, 2021-07-14 15:07:42 -0700, , fuzzer use nametypes roundtrip 3986 work around issue wasm type sometimes getting truncated default name long even infinitely recursive truncation lead name collision wast valid,,
48,b842715392a6e18cfae6bdabce670a1d618611fc,ax Graey <maxgraey@gmail.com>, 2021-07-15 00:25:39 +0300, , implement interpreter 3984,,
49,b68691e826a46d1b03b27c552b1f5b7f51f92665,lon Zakai <azakai@google.com>, 2021-07-13 15:00:20 -0700, , partially fix precompute simd 3983 logic one place,,
50,aafd1bf1be09d6368127f9878ab1779cc258f526,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-13 13:44:01 -0700, , implement interpretation i64x2.bitmask 3982 like simd operation i64x2.bitmask implemented interpreter yet unlike others i64x2.bitmask type i32 rather type v128 precompute skipping leading crash http github.com emscripten core emscripten issue 14629. fix problem implementing i64x2.bitmask interpreter,,
51,b217effd56b644c08f6ce4b86533c133b564af6d,lon Zakai <azakai@google.com>, 2021-07-13 08:18:02 -0700, , fix feature section handling fuzzer 3980 feature section additive since 3960. fuzzer know feature used therefore need also scan feature section run print feature get total feature used flag feature section result list enabled feature instead enable disable actually clearer think doe require inverting logic place,,
52,2bdd9e2f70063ebc9004ea2dd2e89e2090ee1c20,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-12 17:56:34 -0700, , port test pass inlin lit 3972,,
53,d22bc1c5dc2685b2c3f9ee004197da249c2b416e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-12 17:37:47 -0700, , port test pass flatten lit 3971,,
54,58ce30422a24f44dcac6f5d1b6950d900582f0f2,lon Zakai <azakai@google.com>, 2021-07-12 17:15:50 -0700, , improve nametypes keep reasonable name 3977 set name name existing name really really long,,
55,e8137784824bb2578b8ecbe2f76e09e20a1e5442,lon Zakai <azakai@google.com>, 2021-07-12 12:31:14 -0700, , wasm add isnonnullable convenience method nfc 3978,,
56,22167e5c6e34773a9fbc52e11648a081d2731ca3,lon Zakai <azakai@google.com>, 2021-07-09 13:30:46 -0700,3967, fix fuzzer wasm2c2wasm emcc must request support 3975 emscripten stopped emitting shell support code default user run node.js literally fuzzing fix 3967,,
57,f77e8ddc8c0da06cc0cd2c063237660e8ec4020b,outer van Oortmerssen <aardappel@gmail.com>, 2021-07-09 11:02:45 -0700, , memory64 memory limit fix 3865 somehow missed triggered emscripten test,,
58,a533488572de0c8916add42b01530f0244ca4623,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-08 22:27:19 +0000, , execute lit test via external shell 3974 previously configuring lit execute test script via external shell caused lit look bash installation window make lit test work box window change configuration use lit built shell capability instead,,
59,397a06e5992b11eb89493b0ebce08990bd2830c2,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-08 18:15:13 +0000, , port test pass asyncify lit 3970,,
60,0a682d32870c3a7b2c908b0d7d7cab95338393c5,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-07 18:28:28 +0000, , port test pass lit 3969,,
61,7200d7b4db7e8d12d2c187621958aa85cdc6b5e5,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-07 18:26:40 +0000, , filter pass test porting script 3968 filter test using metric emit spec wrapper fuzz exec print stack dwarfdump etc ouput captured automatically generated check also filter based list pass rather test file case test .passes file,,
62,11050145e91bdcac580a5cc7e651133f5089e84f,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-07 15:46:17 +0000, , lit test tool help message 3965 add list test help message tool factoring common option shared test slightly brittle text wrapping depends length longest option brittleness worth benefit able see actual help text test,,
63,cdf9ee0fdff72384d2192fb32c20bf05287dba97,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-03 00:28:22 +0000, , add script porting pass test lit 3963 use port simple untee test,,
64,643b96736b7b5b75b91ab35ee926154eb33492e0,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-02 23:58:30 +0000, , support generating check multiple module 3962 conjunction foreach tool allows autogenerating check lit test containing multiple module supporting help automatically port existing bespoke wast test lit test since many test contain multiple module per file,,
65,94b6c5f625541550c1df484a37daf0225c318396,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-02 21:34:27 +0000, , nfc refactor 3964 decompose code function make simplifying change prepare multi module support introduced 3962,,
66,98d654257cd22b4912121d022d484e4750932329,lon Zakai <azakai@google.com>, 2021-07-02 10:04:48 -0700,3953, wasm add support non nullable local binary reading 3955 tested feature text format binary support reader need know feature enabled allows non nullable local case i.e. doe apply workarounds remove fix 3953,,
67,d2347ff02d807fc38559d5f436eabae694562dae,lon Zakai <azakai@google.com>, 2021-07-02 08:29:38 -0700,3955, apply feature commandline first 3960 suggested http github.com webassembly binaryen pull 3955 issuecomment 871016647 applies commandline feature first feature section present disallows warn otherwise feature combine example wasm may enable feature use user simply add flag feature want optimizer try use flag enabled important case need know feature parsing wasm case wasm doe use feature section particular non nullable local effect parsing typed function reference also doe found way apply effect time always use refined type happened break case feature disabled workaround possible non nullable local make error prone add featureset input parameter building module must give feature use unblock 3955 also add test actual usage feature loading test added unbreaks thing,,
68,ea20225d793b6c743703ea04cd9bb46c07384853,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-02 15:23:26 +0000, , add option add check item 3961 add item flag emit check module item match item input update two test use generated input new flag also improve readability insert empty line consecutive check different item,,
69,45703971dffbbb1e4bbf7b026ca01cabf18b989a,lon Zakai <azakai@google.com>, 2021-07-01 13:37:36 -0700,13899, set absolute maximum inlining limit 3959 seen case chrome firefox extremely large module cause overhead 3730 comment link therein emscripten core emscripten 13899 comment right value use limit pick arbitrary one high setting verified effect emscripten benchmark suite,,
70,ca27f40a2f1070a16ee7c0efc18ff35d342d8027,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-07-01 01:56:23 +0000, , preserve function heaptypes 3952 using nominal type func.ref two function identical signature different heaptypes yield different type preserve semantics function need track heaptypes signature replaces signature field function heaptype field add new utility method make almost simple update query function heaptype update query function signature,,
71,10ef52d62468aec5762742930630e882dc5e5c0b,lon Zakai <azakai@google.com>, 2021-06-29 16:03:37 -0700, , wasm fix 3954 traversal mention bron led incorrect work simplifylocals also add assertion end aim prevent future issue rest fix make simplifylocals assume thing switch block etc. crash bron,,
72,6ab05d914bbee87dd4a26f218a04e7ea918a2271,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-29 14:22:54 +0000,3933, set supertype nominal typing enabled 3958 code printing emitting experimental nominal type constructor added 3933 assumes supertypes returned getsupertype nominal typing enabled getsupertype turn assuming supertype field would set nominal typing enabled case bug caused use free error equirecursive left supertype field pointing temporary heaptypeinfo would freed end parsing accessed module writing fix issue set supertype nominal typing enabled originally intended,,
73,6a2d7f989065820476268a2382db2eccf72aadd7,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-28 22:02:17 +0000, , generate filecheck check module item 3957 instead generating check function generate check named top level module item type tag table memory module item different order input output filecheck check must follow order output need slightly clever emit check consider type input file  type ... type ...  order reversed output file check need emitted check resulting module look like  check type ... check type ... type ... type ...  rather look nicer would incorrect  check type ... type ... check type ... type ... ,,
74,395b071ae9b09f0b4fe3ce0f3a43f16ba74f01a5,lon Zakai <azakai@google.com>, 2021-06-28 14:25:40 -0700, , refactor separate file nfc 3956,,
75,1b0d724fd5938931e6924941641dd8924ad49938,lon Zakai <azakai@google.com>, 2021-06-24 11:32:37 -0700,14174, handle invokes invalid function pointer see 14174 3951 postemscripten turn invoke constant function pointer index direct call however due possible invalid function pointer crash nothing optimize course mostly whitespace avoid deep nesting added early return,,
76,21711ffea3cea19cab52bbd989a1c8638b3dd9a7,eejin Ahn <aheejin@gmail.com>, 2021-06-22 12:30:53 -0700, , make tag attribute encoding uint8 3949 change encoding attribute field currently contains value denoting tag exception varuint32 uint8 field effectively unused moment reserved future use likely need varuint32 even future see http github.com webassembly exception handling pull 162 doe change encoded binary encoded way varuint32 uint8,,
77,6951511e7079a0ff4b0ae06d137f9b3bd18b81f8,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-22 18:25:55 +0000,3935, revert accidental debugging change 3935 3950,,
78,40fc101296b11ef237a80224a194c2817e5864c3,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-22 16:18:59 +0000, , preserve function heap type text parsing 3935 previously ref.func instruction would assigned canonical i.e first parsed heap type referenced function signature rather heaptype actually specified type definition nominal mode could cause validation failure type assigned ref.func instruction would correct fix problem tracking function heaptypes rather function signature parsing text format still validation failure round tripping module function heaptypes properly preserved parsing addressed follow,,
79,e773dfd026ff939e9f4cb91816863bdc5292ff4e,eejin Ahn <aheejin@gmail.com>, 2021-06-21 21:24:11 -0700, , make tag attribute encoding detail 3947 remove attribute field tag class making reserved unused field known binary encoder decoder also remove attribute parameter maketag addtag method wasm builder.h api binaryen api suggested http github.com webassembly binaryen pull 3946 687756523,,
80,9fc276298b36080658236f0bc93d94cdf774492c,eejin Ahn <aheejin@gmail.com>, 2021-06-19 23:06:27 -0700, , remove attr tag text format 3946 attribute always reserved future use binayren unofficial text format writing field attr recently come conclusion necessary relevant discussion http github.com webassembly exception handling pull 160,,
81,aae35755e1d047c1f6fba9abfd2d836feafa5f66,lon Zakai <azakai@google.com>, 2021-06-18 17:04:06 -0700,3944, wasm fix inlining non nullable local 3945 need assign zero value local default value exists fix 3944,,
82,28e88b9f993a2e45662fde0b10920aa22e7b1b7f,eejin Ahn <aheejin@gmail.com>, 2021-06-18 14:20:03 -0700, , replace event tag 3937 recently decided change event tag event section tag section rationale section contains generalized tag reference type may used something exception name event confusing web context see http github.com webassembly exception handling issue 159 issuecomment 857910130 http github.com webassembly exception handling pull 161,,
83,97e277c51218778d1d76fd59fed3b4ca7756382e,eejin Ahn <aheejin@gmail.com>, 2021-06-18 13:49:25 -0700, , rename wasm delegation field def file nfc 3941 file special use define symbol defined within file file included file supposed defined source file include header caused clang tidy fail every time file changed compilable per solves problem changing extension def also used llvm codebase llvm dozen file like whose extension def make checked clang tidy,,
84,e1586984480daf475d0941d6b6b5640fbec80558,lon Zakai <azakai@google.com>, 2021-06-18 11:32:44 -0700,3942, wasm fix rse non nullable local 3943 check local already default value assign default non nullable local however initial value used assigned need skip local assume contain default value compare would assert trying create zero non nullable type fix 3942,,
85,ea0b9ee1e1083962da9bfa52fa09870fcc4f72bb,homas Lively <tlively@google.com>, 2021-06-17 07:28:44 -0700, , add extract function index pas useful alternative extract function know function name also move extract function test lit test extract function index test,,
86,8de4349ebdb6ce398ef4939f9f375a7413d99b09,homas Lively <tlively@google.com>, 2021-06-17 10:30:06 -0700, , add foreach script use lit test major drawback lit test far supported single module per test file commit add new utility script split input file multiple file run command giving lit test simple way test multiple module per file,,
87,acdea58d62079c1477eb35f460741908063ec26a,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-17 13:51:07 -0400, , add space option help text 3940 improve legibility option documentation adding vertical space option particularly helpful delimit text option longer explanation,,
88,fb9d2a779c0267b9348bb87a9de6974658dda69d,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-17 10:53:54 -0400,3935, wasm2js refactor assertion parsing 3938 assertion previously parsed replacing invoke call using normal expr parser parsecall method expr parser call target look correct signature module invoke target assertion use export name rather internal function name signature lookup inserting new bogus entry default value issue seem cause big problem 3935 turn hard error default heaptype doe associated signature fix problem least common case trivial argument expected result manually construction call expression rather depending expr parser construct,,
89,c36c6fa9e42f4e917864312780ba95fb996eda79,lon Zakai <azakai@google.com>, 2021-06-17 07:51:11 -0700, , wasm rtt.fresh_sub 3936 rtt.sub creates new rtt time see http docs.google.com document edit old literal implementation rtts becomes little complex designed original spec structure matter may worth complete redesign spec flux think approach good enough,,
90,9d279c08b9f37b6cf2c5a5fac564eee9ea4fb927,lon Zakai <azakai@google.com>, 2021-06-15 11:14:42 -0700, , wasm add experimental support non nullable local 3932 add new feature flag gcnnlocals enables support non nullable local validation applied check actually assigned use yet allows experimentation begin feature enabled default even enabled would take effect test likely confuse current user well instead flag must opted explicitly using enable local experimental feature flag must explicitly enabled spec stabilizes remove feature anyhow implement final status non nullability,,
91,e0a8f40f65b178556f6fcbed778923a36dca64e3,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-15 00:07:55 -0400, , parsing emitting nominal type 3933 add nominal option switch type machinery equirecursive nominal implement binary text parsing emitting nominal type using new type constructor opcodes extends super text syntax extension nominal mode extension still parsed effect used emitting,,
92,aec8d12282b5279b80e79f21d54491db5d55278e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-11 21:12:48 -0400, , wasm split add option emit placeholder map 3931 new instruction emits file containing map placeholder index name split function placeholder replacing table map intended useful debugging discussed http github.com emscripten core emscripten issue 14330,,
93,446634a503116186a025d23375c430cb837e00f0,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-11 09:41:09 -0400, , nominal subtyping 3927 add method typebuilder interface declare subtyping relationship built type relationship validated recorded globally part type building relationship valid fatal error produced future would better report error typebuilder client code behavior sufficient also update subtyper typebounder aware nominal mode subtyping lubs correctly calculated test failing behavior added future expose functionality command line since current example testing infrastructure handle testing fatal error,,
94,ca263c00ec8ff3b7c51d066b273eeee50180091b,eejin Ahn <aheejin@gmail.com>, 2021-06-10 23:44:57 -0700, , allow catch delegate try 3924 remove restriction try least one catch catch_all delegate see webassembly exception handling 157,,
95,83ae39af1f8ffe67856b16f7ee13de066169b48f,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-09 22:54:56 -0400, , store signature heaptypes parsing binary 3929 parsing func.ref instruction need get heaptype corresponding referenced function signature since constructing heaptypes signature expensive equirecursive typing keep track original function signature heaptypes directly parsing rather storing signature,,
96,d8877922143219eada93568074f2a262de62d04f,lon Zakai <azakai@google.com>, 2021-06-09 14:46:21 -0700, , wasm support struct.new global initializers 3930,,
97,cdc1bb3406f40bdab918749d020e0ef03942434d,lon Zakai <azakai@google.com>, 2021-06-08 18:56:10 -0700,3926, wasm properly validate bron 3928 notebreak call wrong place causing note break bronnull example could make validation miss error noticed 3926,,
98,eac90b56d4a749f10d440e4bb7fd744e4bc756e8,eejin Ahn <aheejin@gmail.com>, 2021-06-08 13:15:59 -0700, , convert test lit test 3923 convert test test pass test lit pass fixed file follow space indentation improved comment,,
99,28f227fb90d18d8c1fc2c52b592d2934469aef8e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-08 15:22:15 -0400, , initial nominal typing support 3919 nominal mode heaptype constructor besides signature constructor always produce fresh type distinct previously created type heaptype constructor take signature maintains previous behavior constructing canonical representative given signature used frequently throughout code base never situation would benefit creating fresh type left future work clean discrepancy signature heaptype constructor heaptype constructor typebuilder skip shape global nominal mode always creates fresh type entry work without typebuilder allocates temporary type global type store doe support building basic heaptypes nominal mode new mode available binaryen tool yet still missing critical functionality like ability declare subtyping relation correctly calculate lubs functionality implemented future,,
100,811f1614edef867228edaac08bdb5179325eac27,lon Zakai <azakai@google.com>, 2021-06-08 09:48:26 -0700,3915, properly handle comparison bit ints wasm2c fuzzer 3918 support code emits low high result example would high bit different number reported thing fuzz caused error fix 3915,,
101,7f27492e7440f7fd6daf3df7f474e79d1a196833,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-08 00:52:40 -0400, , fix example test check.py 3920 rename test suite gcc example match name also retrieve test run using properly applies filter argument match ,,
102,a4ab1c7ee7376977ca09e2d3c4358893e9fdfce2,ax Graey <maxgraey@gmail.com>, 2021-06-03 23:22:30 +0300,3906, handle post mvp sign extended operation 3910 fix part 3906,,
103,a440c7697875e5fcc046370b40295f6dffe44ee0,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-02 16:52:34 -0400, , wasm split add merge profile mode 3917 given list profile module merge profile produce single combined profile contains minimum timestamp among original profile function verbose output enabled also emit message profile could individually removed without affecting set function combined profile suggested 3912,,
104,d8f2ddd4d680b059c2daded7f57051bf21d77297,lon Zakai <azakai@google.com>, 2021-06-02 13:24:22 -0700, , wasm add negated bron operation 3913 basically flip version interesting part impl returned typed sent type different spec http docs.google.com document edit,,
105,e40396003798678803f4091ac4132aefa3905d7a,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-01 15:26:55 -0400, , wasm split make option validation declarative 3916 anticipation adding third wasm split mode merge profile addition existing split instrument mode refactor wasm split option validation let valid mode declared option approach scalable robust hoc validation previously,,
106,028f47368fe844130f52ad7811c8028ebd18a38e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-06-01 12:15:24 -0400, , wasm split minimize name newly created export 3905 wasm split would previously use internal function name create external name function newly exported primary module imported secondary module input module contains full function name commonly case emitting symbol map caused function name preserved export name even name otherwise stripped save code size properly anonymize function generate minimal export name debuginfo disabled instead,,
107,88606f75b97ef3014edb74484125534c2040095b,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-27 13:21:01 -0700, , nfc factor simplify minified name generation 3909 simplifies public api unnecessarily take index simplifies implementation use single integer state rather vector index,,
108,97f37aa13ce3ed318dc18980f03c41e7536624a5,lon Zakai <azakai@google.com>, 2021-05-27 12:53:05 -0700, , wasm add experimental array.copy 3911 spec http docs.google.com document edit also reorder thing wasm.h canonical order effect confusing read,,
109,27a18f990e022cfe5b6a5485fd2eaca73b6dfbaa,lon Zakai <azakai@google.com>, 2021-05-26 14:10:03 -0700,3907, wasm implement cfgwalker support bron 3908 without adding logic simply ignored branch could lead bad optimization thinking code unreachable trivial way add static error force add new class cfgwalker generalizes code handle branch unreachable instruction generic way thing need remember future add control flow structure normally fuzzer quickly find bug full fuzzing enabled yet fix 3907,,
110,7f31823120ba25075d783df863f6be536543f805,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-25 15:32:39 -0700, , wasm split add option emit module name 3901 even name stripped useful wasm split preserve module name split module differentiated stack trace adding option wasm split requires adding similar option modulewriter ,,
111,994757a6747793effc8e4bdda13c47ab7337afb8,aniel Wirtz <dcode@dcode.io>, 2021-05-25 04:37:21 +0200, , add get setter api 3904,,
112,24d71aa0146a6dacfce5d84a11c88195e66eee0a,eejin Ahn <aheejin@gmail.com>, 2021-05-20 19:54:46 -0700, , change walker taskfunc back function pointer 3899 walker taskfunc changed function pointer std function 3494 mainly make support cfgwalker easier notice much performance difference recently reported creased binaryen.js code size performance change walker taskfunc back function pointer doe little work manage catch index cfgwalker side hopefully fix 3857,,
113,dede877475625fa37e86400e3f4db363b76cd151,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-20 14:59:10 -0700, , emit imported function first symbol map 3900 imported function come first module emitted ensure function index correct need come first symbol map never noticed bug imported function always first function module parsed bug never mattered practice however wasm split add new imported function parsing causing symbol map index incorrect,,
114,35f9da76d53401ba4de054f4db631ce4177b32f1,lon Zakai <azakai@google.com>, 2021-05-20 06:09:08 -0700, , wasm validate struct.get set heap type early text parsing 3897 must assuming type heap type getstructindex hit assert,,
115,3ecad7a543e4ff1395e64b91efbddbbd0d9710a2,lon Zakai <azakai@google.com>, 2021-05-19 12:40:40 -0700,3895, fix usage comment extractfunction 3896 fix 3895,,
116,f308e37f42c33d18bafbbbf821a70a1ca2d7e655,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-18 19:33:58 -0700, , wasm split add symbolmap option 3894 new option emits symbol map file split module file name created appending .symbols wasm output file name,,
117,8099dd859dc2732bea9b9f0c56440bb34a4d22c3,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-18 16:33:25 -0700, , switch hopcroft valmari lehtinen dfa minimization 3883 valmari lehtinen algorithm broadly similar hopcroft algorithm precisely keep track input transition might able split partition state end much work unlike implementation hopcroft algorithm naively used set heaptypes new algorithm also optimized data structure split partition constant time never reallocate change improves shape time real world unoptimized type section minute 1.5 second,,
118,9343cbc52def4c9f2400a215589d9d31f3c7c321,lon Zakai <azakai@google.com>, 2021-05-18 16:22:41 -0700, , wasm reduce always decrease factor 3849 thing well reducer shrink factor thing slow kept factor unchanged annoying case really benefit reduction factor get small least reduces iteration,,
119,92b0cbdd9e2747c5cf6ecc546718d0ec0b1bc64b,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-18 15:58:31 -0700, , remove type ordering 3793 found 3682 current implementation type ordering correct although immediate issue would easy fix think current intended comparison algorithm correct first place rather try switch using correct algorithm sure know implement although idea remove type ordering entirely place used type ordering std set std map require deterministic iteration order insertordered set map instead,,
120,f8bb9c228446998882edea012bf9fa3004262504,lon Zakai <azakai@google.com>, 2021-05-17 15:13:27 -0700, , wasm heap2local replace allocation null 3893 previously would try stop using allocation much possible example writing local leaving pass actually remove remove get local etc seemed simpler modular doe actually work case fuzzer found specifically stop writing allocation local ref.as_non_null local.get trap null present local instead change rewriting slightly work simpler end replace allocation null replace place use accordingly example updating type nullable removing refasnonnulls etc literally get rid allocation place flow leaving pass later,,
121,9f8fca1456fe754ead197b4f9899be190e978c92,lon Zakai <azakai@google.com>, 2021-05-17 14:27:08 -0700, , wasm fix printing unreachable array operation 3892 similar struct operation reference unreachable know heap type print full expression,,
122,7296f51567d5db95c23247dbec116e35812df5a8,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-17 13:33:56 -0700, , add namespace include guard 3891,,
123,adba99a760ceb50adb5856e0010fc158163ef607,lon Zakai <azakai@google.com>, 2021-05-17 11:39:16 -0700,14161, attempt preserve dwarf previous pas remove 3887 run pas remove dwarf followed one could destroy possible problem nothing left destroy run later pas issue warning also add assertion running pas runner always assumption track whether added pass remove debug info need check fix emscripten core emscripten 14161,,
124,deff1560a29c0002d6de5c979da3f4875c1faee6,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-05-17 11:13:03 -0700, , nfc move insertordered set map new header 3888 move implementation relooper.h new used widely change implementation code use unordered_maps instead abort,,
125,c8b95adb9723c128f76507d79456779fec92c708,aulo Matos <pmatos@linki.tools>, 2021-05-17 19:08:49 +0200, , remove unused argument major 3889 affect printmajor printmedium usage optional argument source code,,
126,9844548855f0ebe962d2167356b9a4b31c248a2b,aulo Matos <pmatos@linki.tools>, 2021-05-17 18:54:36 +0200, , disable color writing module text 3890 via api,,
127,dc516f10b5fa8fa7bf270eda97950d6e714956d3,lon Zakai <azakai@google.com>, 2021-05-14 15:21:41 -0700,3882, support symbolmap symbolmap foo wasm opt 3885 wasm support symbolmap foo argument got request support wasm opt wasm opt doe print function map doe pas unify use new pas arg sugar 3882 allows add symbolmap pas whose argument set symbolmap foo perfectly match wasm notation keep old print function map notation well break emscripten remove remove,,
128,f59174c1cf526d7e9fe5d4ba74ab0370f40a1856,lon Zakai <azakai@google.com>, 2021-05-13 13:57:19 -0700, , add pas argument sugar commandline 3882 pas arg allows sending argument pas like wasm opt stuff pas arg stuff function_name equivalent wasm opt stuff function_name one give argument pas commandline fix optional mode command line.h cpp actually used anywhere also rename extract function pas argument match usage used wasm opt extract function pas arg extract function_name note pas name differed pas arg name change match breaking change doubt used enough justify deprecation backwards compatibility effort usage almost certainly manual writing manually becomes easier one  wasm opt extract function function_name existing test kept renamed new test added test new notation step towards unifying symbol map functionality wasm wasm opt later turn symbol mapping pas pas receives argument,,
129,284a47cbe888a3421d6f20f2bda716ae1ece097b,lon Zakai <azakai@google.com>, 2021-05-13 11:31:04 -0700,3879, start function may imported 3884 without fix segfault body fix 3879,,
130,665718a208786238633192d706c5cd61d4f5ad05,lon Zakai <azakai@google.com>, 2021-05-12 16:32:28 -0700, , wasm heap2local handle branch 3881 branch block branch final value block either mixing may able optimize allocation branch stopped add helper branchutils main flow logic heap2local used stop reached child second time branch however child flow immediate parent branch target proper thing look reach parent second time would definitely indicate mixing test added new functionality note existing test already covered thing optimize test needed existing one get block branch block,,
131,bfd01369a6dbb4629e88d227f085f959549e3dd5,lon Zakai <azakai@google.com>, 2021-05-12 07:43:35 -0700, , heap2local use escape analysis turn heap allocation local data 3866 allocate data let reference escape replace allocation local one local field allocation basically avoids allocation also allows optimize local  dart deltablue benchmark speedup making faster version incidentially also reduction code size test best way show doe pas assumes pass clean example clarify first pseudocode ref new int  ref.set ref.get import ref.get allocate int heap use counter unnecessarily could normal int stack wat module boxed integer entire struct hold int type boxed int struct field mut i32 import env import func import param i32 result i32 func example local ref ref null boxed int allocate boxed integer save reference local.set ref boxed int i32.const rtt.canon boxed int   increment integer loop looking condition loop loop struct.set boxed int local.get ref i32.add struct.get boxed int local.get ref  i32.const   br_if loop call import struct.get boxed int local.get ref       pas optimizer could essentially nothing even pas running effect pas used however running heap2local lead func local i32 local.set i32.const  loop loop br_if loop call import local.tee i32.add local.get i32.const       heap operation removed plain int allowing bunch opts run output basically optimal code think,,
132,4cfbb5d90bd253c066d92affa685dbab5d824699,lon Zakai <azakai@google.com>, 2021-05-11 16:16:53 -0700, , printing add comment emit something 3878 emit something instead emit replacement case structset unreachable rtt known heap type add comment mention replacement might avoid confusion debugging,,
133,ed92a8d5e493c839687c2f2d56cdc5123e6e3a47,lon Zakai <azakai@google.com>, 2021-05-11 12:29:46 -0700,3876, extractfunction always remove memory table 3877 instead run doe sort thing pas extract function turning others import almost removable via depending whether used table whether extracted function call etc without would error function table fix 3876,,
134,09052c055c07ec5a1385cd5c142ff4d8534f1d1c,lon Zakai <azakai@google.com>, 2021-05-10 20:06:53 -0700, , wasm fix structset finalize unreachable value 3874 also fix printing unreachable structsets must handle case unreachable reference mean know rtt must print replacement structset somehow emit block drop fixing old behavior missing drop,,
135,5670de328320a554d4b6fa20b2fde37b4f337ce3,lon Zakai <azakai@google.com>, 2021-05-10 16:16:15 -0700, , wasm fix precomputing incompatible fallthrough value 3875 precompute computes value look fallthrough local.set block stuff ignore fallthrough care value set local i32.const   normally fine fuzzer found case refcast may return different type fallthrough even incompatible type try something bad like cast function struct may propagate value place expects proper type cause error fix check precomputed value proper subtype look fallthrough compute entire thing case bad refcast func struct would indicate trap happens would precompute value,,
136,1c882c09fdf14317943235f60b6d1008c09aeefc,lon Zakai <azakai@google.com>, 2021-05-10 15:08:52 -0700, , fuzz maximal inlining time 3871,,
137,08e0a3cdc5303f6906bb807de3ad9ed9e2cbdb51,lon Zakai <azakai@google.com>, 2021-05-10 15:07:35 -0700, , implement builder case best 3872 method todos halted halt entire program best effort attempt replace node something simpler type call know value actually used,,
138,5499ef491a264b02d24180f5dad824feec52074a,lon Zakai <azakai@google.com>, 2021-05-10 15:07:05 -0700, , wasm fix casting code interpreter 3873 logic would construct cast value separately function data must attempt share code would check cast succeed nothing cast value wrong weird cast like struct function construct valid cast value error instead check cast work first know enough construct cast value,,
139,75c8584997e7e09a20c7ebba1802461362b67a7b,lon Zakai <azakai@google.com>, 2021-05-07 20:59:30 -0700, , wasm fix array initialization packed value 3868 truncated extended packed value get set initialization found fuzzer,,
140,88c7b3d6d0e9789caa466f76dfe3116611925756,lon Zakai <azakai@google.com>, 2021-05-06 14:49:38 -0700, , fuzzer ignore thing ignore even process succeeded 3864 ignored known issue process failed however thing bring process still necessary ignore fix another approach might make thing need ignore fail entire process however could annoying debugging want host limit say hitting limit recursion bring entire process limit manifest trap still run need test specific host limit made fix trap oom trying allocate array size 4gb,,
141,c79a0f8ab95e17203feeb919dcf4424ac6522110,lon Zakai <azakai@google.com>, 2021-05-06 10:56:12 -0700, , fix interpreting ref.cast function module 3863 binaryen allows optimizing function function parallel pass module still built function even added module yet since removal asm2wasm heavily tested fuzzer found closely related bug pass like inlining optimizing inline optimize function inlined mechanism optimizing relevant function create module want optimize relevant one inlined happens main optimization pipeline want optimize function inlined one specific bug ref.cast funcref looked target function module order get signature see cast right rtt fix return nonconstant flow case something precompute doe mean may miss optimization opportunity case optimize function module fully built still get function local optimization way subsequent round full optimization done later necessary,,
142,c84116dd715c3e548f6de1b8d2e2c29b5e248132,aulo Matos <pmatos@linki.tools>, 2021-05-06 19:17:46 +0200, , fix typo function name 3862 becomes,,
143,14506179e55978d5f8ef4547d05f8d134bdc4c6b,lon Zakai <azakai@google.com>, 2021-05-06 07:47:19 -0700, , branchutils addition 3860 add like existing utility provides child expression sent value branch also provide branchtargets utility map target name control flow structure used tested escape analysis,,
144,4687c85d38540a9840cb0f5208b684ddbb88b650,lon Zakai <azakai@google.com>, 2021-05-05 19:12:50 -0700, , refactor getfallthrough use loop instead recursion nfc 3859 new called loop aside efficient recursion new method used escape analysis,,
145,16dc2d06041473b838e5486a620e53416ff7e9fd,lon Zakai <azakai@google.com>, 2021-05-05 19:12:01 -0700, , allow computing necessary influence localgraph nfc 3861 pass need setinfluences getinfluences computing nonetheless make e.g mergelocals faster also help use localgraph new pass worry speed,,
146,5387a0b1ffcaf925b40ee661063893c475d4c632,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-30 12:39:18 -0700, , fix data race type 3852 fix two potential source data race identified help thread sanitizer first keep lock global heaptype store long reach temporary type ensure thread observe temporary type example another thread concurrently construct new heaptype shape one canonicalized happen type hashed global store pointer identity yet escaped builder rather shape second shape canonicalizer replace child new minimal heaptypeinfos already canonical even though writes always ops still race visible thread via canonical type,,
147,ea8ebefa551b8e6e2d4baa759df8c531cfd842d8,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-29 16:04:30 -0700, , use standard type traversal module utils.h 3851 add new public method type heaptype implemented using standard machinery 3844 use simplify moduleutils type traversal code wasm type.cpp used move appropriate place file also since user using visit top level child replace specialized reduce code duplication,,
148,b9c7497d1caae695ac5582590d73ad61abd7850f,lon Zakai <azakai@google.com>, 2021-04-29 12:57:10 -0700, , add localgraph equivalent 3848 compare two local.gets check whether sure equivalent contain value doe solve general problem existing info get positive answer common case two get receive value single set like local.set use local.get another use local.get receive value single set know must dominate risk set get set occurs one get happen loop theory loop loop use local.get local.set new value iteration use local.get br_if loop  get receive value set may different value different loop iteration mentioned source code problem since wasm always zero initialization value first local.get loop would another set receive value function entry way avoid entire code unreachable case nothing matter useful dead store elimination use reason reference pointer order able anything useful memory,,
149,59cc7e3d0a25051177a5c98d8c8bbe5f68c51da8,lon Zakai <azakai@google.com>, 2021-04-29 11:39:46 -0700, , wasm add print limit typeprinter 3850 similar limit typenameprinter print.cpp limit affect printed type debugging std cout type etc. print structure name,,
150,a4c7866f5e133c58ebbf09715a705d514209dac1,lon Zakai <azakai@google.com>, 2021-04-29 11:39:28 -0700, , improvement 3847 add clear add also property never repeat value output also add unit test,,
151,2785d936639c62d08eb836a775838a37033127b4,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-29 00:58:07 -0700, , generic type traversal fix lub bug 3844 fix 3843 issue lub type building hopcroft algorithm running temporary heaptypes typebuilder considering globally canonical heaptypes reachable temporary heaptypes meant temporary heaptypes referred equirecursively equivalent globally canonical type properly minimized could matched corresponding globally canonical heaptypes fix run hopcroft algorithm complete heaptype graph root heaptypes since already multiple implementation type graph traversal consolidates generic type traversal utility although creates boilerplate also reduces code duplication easier maintain reuse hopcroft algorithm partition contain globally canonical heaptypes also update step shape reuse globally canonical type unchanged since must already minimal without change could end incorrectly inserting temporary heaptypes globally canonical type graph unfortunately change complicates interface presented longer owns heaptypeinfos backing minimized type fixing left future work,,
152,8266211ec8dac694a14081cf03248f4c1ac5e016,lon Zakai <azakai@google.com>, 2021-04-28 19:43:34 -0700, , save exit block cfgtraversal nfc 3845,,
153,9b50667f7cf9d3deddaea520c4b6d8c5fc5ae678,lon Zakai <azakai@google.com>, 2021-04-28 17:12:20 -0700, , add const parameter 3846,,
154,3fe1823a59dc689d081a7a7e327639c20bf51bbc,lon Zakai <azakai@google.com>, 2021-04-23 16:09:35 -0700, , change unreachability select change 3840 example result i32 local.get return local.get  return local.get   move return outside become unreachable make type change pas handled dce vacuum found fuzzer,,
155,8b66a9d40f55758b99b528d7adb371d275707c5e,lon Zakai <azakai@google.com>, 2021-04-23 09:17:51 -0700,3838, fix new clang warning implicit tuple construction 3841 fix 3838 current breakage iiuc warning define copy assignment operator define copy constructor clang want exist however delete copy assignment one perhaps find way avoid copy construction happens src wasm wasm type.cpp note implicit copy constructor wasm tuple first required typeinfo const tuple tuple kind tuplekind tuple tuple  see easy way remove copy defines copy constructor clang want,,
156,b0dd7fe1b82fa7e3696e06cac1daafd5eb54c221,lon Zakai <azakai@google.com>, 2021-04-22 15:22:14 -0700, , run lit test pas debug well check error 3836,,
157,fa28a70db380c893b2c2bd236a422dc9ae1a383c,lon Zakai <azakai@google.com>, 2021-04-22 15:21:43 -0700, , handle eqzint64 select arm 3837,,
158,23a26c75c6d737d6f97ed1048639b41e948fdd58,lon Zakai <azakai@google.com>, 2021-04-22 13:47:21 -0700, , fix ignore eqz hoisting unreachable arm 3835 tried ignore unreachable code checked type entire node arm might unreachable moving code around requires work update type case best left dce anyhow check unreachability stop,,
159,ba8955f80b58e9a18b675c399b39a547d96facc2, Ð¾Ð¼Ð°Ð½ ÐÐ¾Ð½ÑÐµÐ½ÐºÐ¾ <dpb@corrigendum.ru>, 2021-04-22 20:18:33 +0300, , create shasum file window tarball 3832 cmake sha256sum subcommand used calculate checksum portably use release workflow create checksum window consistency use macos linux,,
160,0379e8b42daa116336f2688d02eeebed2240a99c,lon Zakai <azakai@google.com>, 2021-04-21 19:54:56 -0700, , wasm skip rtt parameter 3834 could carefully see local needed atm always add one work something nondefaultable,,
161,0e0147dd18a3875bde24f418b23230d454942c4a,lon Zakai <azakai@google.com>, 2021-04-21 19:54:38 -0700, , generalize moving identical code select arm 3833 effect fine moved code run one arm anyhow allow unreachable let hoist return example allow none let hoist drop call example also need careful subtyping least drop polymorphic child type may lub see example code add small child effectanalyzer call visit shallow analysis instead walk walk child,,
162,cb776da297a845e15171405b7f7518619122d7aa,am Clegg <sbc@chromium.org>, 2021-04-21 14:13:35 -0700,13786, wasm metadce keep symbol alive refeence corresponding got.mem got.func import 3831 prevents dce used symbol emscripten main_module use case starting use recommend lot part fix http github.com emscripten core emscripten issue 13786,,
163,3d8fafdffa9799d73c9cfd5e0df11f9ffe53b34f,lon Zakai <azakai@google.com>, 2021-04-21 13:28:18 -0700, , move identical unary code select arm 3828 select foo   foo   condition   foo select   condition   make simpler refactor optimizeternary templated,,
164,a72f5b7f440a73c23b7f1b0532446584d4da0854,lon Zakai <azakai@google.com>, 2021-04-21 12:40:51 -0700, , wasm fix tee 3830 change local type method turn non nullable invalid local nullable valid one must update tee well get type must match changed local type must cast user see change,,
165,b4e96d8dd6fded302b7c6be8a34b0a75773737b6,lon Zakai <azakai@google.com>, 2021-04-20 19:46:09 -0700, , update test expectation colliding landing 3827,,
166,eb2581d89fee86ac11a1452a946f9c69d4173a48,lon Zakai <azakai@google.com>, 2021-04-20 18:03:54 -0700, , refactor child iterator simplicity allow modification nfc 3826 instead creating class traversal simply use wasm delegate field get child directly simpler faster requires new way override behavior ended using crtp store pointer child instead child allow modifying child using class reason started refactoring next use also slightly faster theory avoid load memory find child maybe never get iteration stopped early goal speed roundtripping nfc nothing new ability modify thing yet,,
167,304658d67102d3ddd5aa8ea59bcc94402d8338b8,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-21 03:41:32 +0430, , fix element segment ordering print 3818 used print active element segment right corresponding table passive segment came print internal segment name empty segment printed meant way instruction refer table segment round tripping fix issue printing segment order defined including segment name necessary omitting empty segment anymore,,
168,1afe9d4374f6920981be132e1538f63b8f053c02,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-21 02:58:11 +0430,3792, run spec test binary transform 3817 3792 added support module linking register command wasm shell forgot three problem splitting spec test prevents linking test module together registered module may still used assertion invoke module may export imported object appends transformed module binary check spec.wast file plus assertion test register command run wasm shell whole file also keep module name registered name available wasm shell use shell command linked module furthermore correctly find module object defined even imported exported several time updated version imports.wast spec test enabled verify fix,,
169,82323064aebfdac2b5b3672faf999cc3b5471fe1,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-20 12:23:37 -0700, , minor wasm split improvement 3825 support function appearing table turn assuming asserting function would appear making use assumption way make getslot take function name rather reffunc expression avoid allocating leaking unnecessary expression add use builder interface building make similar module level item,,
170,e651186bbdbd36e775236c23f24f0baef1699101,lon Zakai <azakai@google.com>, 2021-04-20 09:03:23 -0700, , implement missing restructuring 3819 existing restructuring code could turn block br_if simple case todos noticed helpful benchmark one limitation need reorder condition value block br_if value condition  ...    condition value ...  old code checked side effect condition side effect reordered value example value constant definitely doe care side effect condition missing todo use select use block drop br_if value condition   ...   select value ... condition  case reorder condition value reorder condition rest block,,
171,1333d9a31ecacb39643e132400d9409aa3f989be,lon Zakai <azakai@google.com>, 2021-04-20 08:23:10 -0700, , wasm fix type ref.as_func non nullable 3821,,
172,02ae2661c9cb748d5479017a3db7bbd222e2daf5,lon Zakai <azakai@google.com>, 2021-04-20 08:21:42 -0700, , optimize select one arm eqz another 3822 select i32.eqz i32.const    i32.eqz select  i32.const    beneficial eqz may folded something outside see pattern real world code benchmark noticed shrink code size tiny amount emscripten benchmark suite well,,
173,f180f6c11d2ddf9acc806333c0a452bb57f8acf9,lon Zakai <azakai@google.com>, 2021-04-19 16:15:25 -0700, , wasm reorder ref.as_non_null tee cast 3820 case ref.as_non_null last beneficial optimization remove based consumed,,
174,069c9b8034f965023a4db0449e6bf6f5215b6199,lon Zakai <azakai@google.com>, 2021-04-19 15:22:03 -0700, , wasm optimize reference identity check 3814 note ref.cast fallthrough value optimize ref.eq identical input,,
175,da4e17d827c444bbbcceb08d577c528020d4d959,am Clegg <sbc@chromium.org>, 2021-04-16 17:55:35 -0700, , remove illegal import longer used 3815 prevents used import also happen duplicate name therefore provided wasm happen fill polymorphic function noticed working emscripten directly hooking module together seeing failure release build wasm opt would mop release build,,
176,423cf0b890e44356fbfa80c5bdfd4032fcc1da01,am Clegg <sbc@chromium.org>, 2021-04-16 11:09:26 -0700, , release 101 3812,,
177,f738f5c838476da230bd5a4dc75e56c4b7be9ba3,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-16 19:38:35 +0430, , simple module linking wasm shell 3792 rewrite wasm shell tool goal improved compatibility reference interpreter spec test suite facilitate module instance provided list linked instance imported object looked correct instance new shell register link module using register ... command parse binary module syntax module binary ... provide spectest module defined reference interpreter assert instantiation trap assert_trap better check linkability looking linked instance  call external function reference direct import would require bigger change,,
178,bd2e8661a31aa02f701e31110108a5f5c194afed,lon Zakai <azakai@google.com>, 2021-04-15 16:18:06 -0700,3803, wasm fix precompute data 3810 fix precomputation 3803 optimistic issue subtle precompute repeatedly evaluate expression propagate value flowing around ignores side effect example block side effect i32.const  evaluate see side effect regardless know value flowing propagate value assigned local read elsewhere valid struct.new array.new side effect noticeable result time call struct.new get new struct new address ref.eq distinguish pas evaluates thing multiple time get different result also precompute struct.get even know struct unless know reference escaped call could modify avoid precompute reference aside trivially safe one like null function reference simple constant time evaluate expression emitting minor bug fix checked type expression see create constant really check value since separate way emit constant struct etc also matter true replacing constant want value internally limit also add literal support comparing ref used ref.eq without tiny fix test crash add bunch test many corner case handle since make propagate reference helpful avoid mistake 3803,,
179,ac2a49bc53d4b0817657aed9f89f33868e5ab3b9,am Clegg <sbc@chromium.org>, 2021-04-15 16:10:32 -0700, , rename emscripten metadata key reflect new unmangled name 3813 turn removing mangling enough emscripten support version see http github.com webassembly binaryen pull 3785,,
180,dc041817642994d5d19c7f21bca734369564e842,lon Zakai <azakai@google.com>, 2021-04-15 14:35:42 -0700, , fuzzer fuzz multivalue testcases initial content 3809 conflict multivalue see detail comment good way get fuzzer avoid combination urgent disable multivalue area doe disable multivalue fuzzing fuzzer still emit stuff disables initial content test suite multivalue enough fuzzer emit thing need,,
181,ac55046821442b2f9140a106dde1436682dea8c4,am Clegg <sbc@chromium.org>, 2021-04-15 12:01:28 -0700,13893, remove renaming 3811 see http github.com emscripten core emscripten issue 13893,,
182,0e5ade3db77864d98a0d39fee31626b973b571a4,am Clegg <sbc@chromium.org>, 2021-04-15 08:31:07 -0700, , remove final remnant name mangling wasm emscripten 3785 see http github.com emscripten core emscripten pull 13847,,
183,b2c63a9665a9758c50eac60af605f0399f66580f,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-14 14:43:01 -0700, , fix lock free mixedarena allocation 3807 reduce allocator contention mixedarena transparently forward allocation thread local arena traversing linked list arena looking one corresponding current thread search reach end linked list allocates new arena current thread atomically appends end list using compare swap operation problem previous code used allowed spuriously fail i.e allowed behave though original value expected value even case mean might fail append new allocation list even next pointer still null result subsequent null pointer dereference fix use allowed spuriously fail way reported 3806,,
184,d4f8cd5ccabaaf2c55561548d88c075cfa4f765d,lon Zakai <azakai@google.com>, 2021-04-14 13:45:28 -0700, , wasm inline function rtt parameter 3808 inlined parameter become local rtts handled local unlike non nullable value least fix inline function rtt params,,
185,d321458d57e6977ceaba90099e80b80cf6d472ed,lon Zakai <azakai@google.com>, 2021-04-13 15:29:13 -0700, , wasm full precompute support 3803 precompute pas ignored reference type overly pessimistic precompute namely null reference function fully precomputable etc allow work add missing integration getfallthrough well precompute quite lot field access existing testcase seen output testcase run fuzz exec print logged value proving changed,,
186,b0af95200a37d76eccf285dcb45b4ed6162212d0,lon Zakai <azakai@google.com>, 2021-04-12 18:37:48 -0700, , fuzzer distinguish trap host limitation 3801 host limitation arbitrary modified optimization ignore example optimizer remove allocation host limit allocation error may vanish optimization remove recursion replaces loop may avoid host limit call depth done currently might day remove class annoying false positive fuzzer,,
187,c9aa77c3f6452154526456497731da1bc8e7d896,lon Zakai <azakai@google.com>, 2021-04-12 18:37:28 -0700, , reducer replace entire function body either unreachable nop 3802 previously used unreachable also try nop possible sometimes better code called nop may intrusive change,,
188,5c8dcfe744d759b9436a04b0267978f42e4725ab,lon Zakai <azakai@google.com>, 2021-04-12 18:36:46 -0700, , wasm optimize away unnecessary non null assertion 3800 ref.as_non_null needed value flow place trap null anyhow replace trap one instruction trap another allow thing even changing trap type doe happen,,
189,0d7dac2923f9164ca7f1450b6f394ef8fa9d8a68,aniel Wirtz <dcode@dcode.io>, 2021-04-12 22:22:16 +0200, , rename simd extending load instruction 3798 renames simd instruction load8x8svec128 load8x8uvec128 load16x4svec128 load16x4uvec128 load32x2svec128 load32x2uvec128,,
190,2e4c96fab93de97665648d4ae83164e177431ad8,aniel Wirtz <dcode@dcode.io>, 2021-04-12 09:19:14 +0200, , update simd binary constant 3799 update binary constant simd instruction match new opcodes v128load8x8s v128load8x8u v128load16x4s v128load16x4u v128load32x2s v128load32x2u v8x16loadsplat v128load8splat v16x8loadsplat v128load16splat v32x4loadsplat v128load32splat v64x2loadsplat v128load64splat v8x16shuffle i8x16shuffle v8x16swizzle i8x16swizzle v128andnot v128andnot                       i32x4doti16x8s             f32x4pmin f32x4pmin f32x4pmax f32x4pmax f64x2pmin f64x2pmin f64x2pmax f64x2pmax        ,,
191,70d62322406b3eac5441efe1ebd7ba4058c4f4a7,aniel Wirtz <dcode@dcode.io>, 2021-04-11 19:58:43 +0200, , rename various simd load instruction 3795 renames simd instruction     load32zero load64zero,,
192,67094a4a9b013a9705bcbf49ec7e0e8ab744389c,am Clegg <sbc@chromium.org>, 2021-04-09 10:31:16 -0700, , wasm split update dylink section growing table 3791,,
193,eb80aec0fa55357167f60afe7661015ae482f3e7,am Clegg <sbc@chromium.org>, 2021-04-08 20:27:51 -0700, , wasm emscripten remove unused em_asm_prefix stack_init 3786 sure stack init think used many year,,
194,8498027da4e078e6babe72f66829b479dd163510,lon Zakai <azakai@google.com>, 2021-04-08 18:06:15 -0700, , reffunc validate type non nullable avoid possible bug builder 3790 builder receive heaptype caller need set non nullability  nfc caller fact still making nullable,,
195,8e20e49a858f207e689589dfe9c056098c58eca2,lon Zakai <azakai@google.com>, 2021-04-08 16:09:12 -0700, , wasm enable fuzzing 3788 fuzzer generate much code yet doe fuzz thing test suite add fuzz allows using initial content also comparevms fuzzed day locally issue,,
196,362eb18350692dd333a81a5630ee409cab3ccbe6,lon Zakai <azakai@google.com>, 2021-04-08 16:08:43 -0700, , fuzz converge 3789,,
197,1b2fc6dce265a1ff1657cbe43679305311f9e4cf,lon Zakai <azakai@google.com>, 2021-04-08 14:55:50 -0700, , fuzzer assume table funcref initial content may include non funcref table 3787,,
198,0efebfe68cb0e2759b88093e1811d034ef3e8a79,aniel Wirtz <dcode@dcode.io>, 2021-04-08 23:50:51 +0200, , add v128.load storen_lane simd instruction api 3784 add apis simd instruction load8lanevec128 loadlanevec8x16 loadlanevec16x8 loadlanevec32x4 loadlanevec64x2    ,,
199,6921dd30dc82b3df2511def7c941f4a1a9aeeec2,aniel Wirtz <dcode@dcode.io>, 2021-04-08 22:22:27 +0200, , add v128.load32 64_zero simd instruction api 3783 add apis simd instruction load32zero load64zero,,
200,7048e9b6238904b8cf60c447276aeeffa369e6e3,aniel Wirtz <dcode@dcode.io>, 2021-04-08 21:54:55 +0200, , add new simd multiplication instruction api 3782 add apis simd instruction             ,,
201,8bc2f8024dd1ed1a74b538815229bd4106d55535,aniel Wirtz <dcode@dcode.io>, 2021-04-08 09:03:10 +0200, , add new simd conversion instruction api 3781 add apis simd instruction      ,,
202,756a718a16e96b37ae9a0ef6cb7e56210bef3b13,aniel Wirtz <dcode@dcode.io>, 2021-04-08 07:52:49 +0200, , add simd instruction api 3780 add apis simd instruction    ,,
203,cf38b658ff20c2b53066dc2a51266c033c6d7178,am Clegg <sbc@chromium.org>, 2021-04-07 15:06:13 -0700, , write name subsection increasing 3779 see http spec core appendix custom.html subsection may occur order increasing,,
204,a36c455f6a2e9fa48751c985fa49b33ce94277c4,aniel Wirtz <dcode@dcode.io>, 2021-04-07 23:27:06 +0200, , add high_ simd instruction api 3778 add apis simd instruction    ,,
205,2f2d5a80197b837aea928a0a604a13cc1c74219b,aniel Wirtz <dcode@dcode.io>, 2021-04-07 23:04:20 +0200, , add various simd instruction api 3777 add apis simd instruction popcntveci8x16 absveci64x2 alltrueveci64x2 bitmaskveci64x2 eqveci64x2 neveci64x2 ltsveci64x2 gtsveci64x2 lesveci64x2 gesveci64x2,,
206,b3484a7a44de4d46b0fec598074ca3f8b33a293c,lon Zakai <azakai@google.com>, 2021-04-07 13:51:49 -0700, , crash unreasonable array allocation interpreter trap 3559 spec doe mention trap like trapping oom runtime limitation reached specced trap add effects.h note result optimizer happily optimizes nop unused allocation array size unsigned behavior want,,
207,cb8cc0843ee79242c9c5921f368876b3734d5269,lon Zakai <azakai@google.com>, 2021-04-06 13:54:53 -0700,3767, fuzzer ignore current bug type br_if 3775 give br_if specific type 3767 noticeable rare case type br_if actually used realistically never really fuzzer testcases,,
208,e9fcf44bdab39e1768e4fbd0cc6164eb4094901e,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-07 00:03:35 +0430, , add type table element segment 3763,,
209,0c8c062f5ec2f11e5b6e17e692aeae0ef97cab89,lon Zakai <azakai@google.com>, 2021-04-06 10:09:40 -0700, , emit dollar sign relevant debugging expression element 3693 noticeable debugging locally quick print stdout,,
210,01bc21495af611948533686e372abddbd40825dc,lon Zakai <azakai@google.com>, 2021-04-06 10:09:19 -0700, , fuzzing vms emit null reference type params instead 3774 vms convert undefined wasm null reference must null,,
211,cc0439224cfc2eabe8f8c28d782ab6b44a0f24f9,lon Zakai <azakai@google.com>, 2021-04-06 10:08:35 -0700,3747, fuzzing vms print type nothing better 3773 match 3747 make log reference value instead print type also print type non reference thing replacing previous exception affect thing like simd bigints trap anyhow boundary believe change simd anyhow printing type give false comparing wasm2js output interpreter assuming interpreter print value type case could try better code side type string representation need parse etc,,
212,b900ed95deda68dad12b3aac7d1283f642e7a545,lon Zakai <azakai@google.com>, 2021-04-05 14:09:01 -0700, , reducer skip function failing remove 3718 avoids annoying case iteration try remove every function one one keep failing instead skip large number factor large least also shorten unnecessary logging,,
213,1bb172c789bb3a61aeaae78f5464d0544627ed3e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-05 12:33:25 -0700, , update simd name opcodes 3771 also remove experimental simd instruction included final spec proposal,,
214,c59df4cda843ef11ad261f5c889dddc9a9d59d3b,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-02 21:34:03 +0430, , reorder global definition print pas 3770 needed make sure globals printed element segment global.get appear offset expression,,
215,c75be5fc138f4f523a548758fa785cac310563fd,lon Zakai <azakai@google.com>, 2021-04-01 15:11:18 -0700, , improve test binary text 3769 instead specifying feature wasm enable using flag allows testcase text,,
216,08326e201fb52bba0ee427e477e90f6d26cd0ac6,lon Zakai <azakai@google.com>, 2021-04-01 15:01:43 -0700, , fix iterator invalidation error fuzzer 3764,,
217,1f6c0f2c8622b2051b6c5977498db406abcff3e1,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-04-01 14:53:12 -0700, , fix type bug 3761 canonical heap type already present global store example roundtrip pas type working correctly issue replacing temporary heaptypes canonical equivalent one type time act replacing temporary heaptype use canonical heaptype use could change shape later heaptypes preventing correctly matched canonical counterpart fix problem computing temporary canonical heap type replacement executing avoid similar problem canonicalizing type one solution would pre calculate replacement executing like heaptypes would required either complex bookkeeping moving temporary type global store first canonicalized would complicated unlike temporary heaptypeinfos unique_pointer temporary typeinfos readily available instead switch back using pointer identity based equality hashing typeinfos work ever canonicalize type canonical child change nice performance improvement well another bug fix shape hashing equality considered basickind heaptypes different corresponding basicheaptypes meant could produce different type type definition depending whether definition used typebuilder fix pre canonicalize basicheaptypes type child shape hashing equality mechanism also used simplify store fix 3736,,
218,df6df2086992943cefed9184b8e4ebf24e3ed021,lon Zakai <azakai@google.com>, 2021-04-01 12:20:57 -0700, , disallow flatten fuzzer due rtts 3768 rtts defaultable spill local,,
219,62b71e06eb69e00c9771d442ce7d2d93f3e03497,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-31 14:46:51 -0700, , catch bad tuple.extract index parser 3766 previously bound index would result bound read finalization tuple.extract expression,,
220,d9f0d8f09985320e0849f76d4ce8a8ee409f5e6d,bbas Mashayekh <martianboy2005@gmail.com>, 2021-04-01 00:30:13 +0430, , remove old syntax table elem parser 3753 keeping old syntax text format parser although removed parser hardly test case relies remove old syntax support table element segment simplify corresponding parser function test file affected updated,,
221,fdd6926c83a5901ba7d7ae12d02f1bd033c92657,lon Zakai <azakai@google.com>, 2021-03-31 07:58:07 -0700,3759, avoid flatten multivalue reference type fuzzer 3760 problem tuple non nullable element stored local need split tuple raise question allowed flat need allow nested tuple ops place combination seem urgent add clear error avoid fuzzer avoids 3759 fuzzer,,
222,f034dc656b058b69bff3246a27790ab8079f2e6a,lon Zakai <azakai@google.com>, 2021-03-30 18:50:47 -0700,3636, wasm optimize refcast ignore implicit trap 3748 ignoring implicit trap cast subtype supertype ignore possible rtt related inconsistency drop cast see 3636,,
223,a680b716efe08afd9920269253058a849d6c4286,lon Zakai <azakai@google.com>, 2021-03-30 16:50:55 -0700, , setglobals pas 3750 allows changing global value commandline easy way toolchains useful build contain global indicates something like logging level customize,,
224,330f722a4f4ae5288b21954aefa496af5cbc71e7,lon Zakai <azakai@google.com>, 2021-03-30 16:50:13 -0700, , scan module level code 3752 key fix call walkmodulecode pick type appear table nowhere else rest patch refactors code practical,,
225,38d73857a6a1ed6a404f393e69f838977dc27e83,lon Zakai <azakai@google.com>, 2021-03-30 14:08:50 -0700, , fix reffuncs 3749 code used remove function longer think needed add legalized version import would remove illegal one longer needed avoid removing illegal import still used checked ref.func appearance bad two way need legalize ref.funcs call illegal import way using direct call indirect call call reference ref.func silly remove unneeded function pas remove removal function add proper updating ref.calls mean call stub function look like original import call legalized one connects thing properly exactly way call also remove code checked stub thunk replace call code needed one ever call illegal import need careful preserving call,,
226,daa7e66be52285a0cbee04a7cf69886c63610097,bbas Mashayekh <martianboy2005@gmail.com>, 2021-03-31 01:04:20 +0430,2339, remove passive keyword data segment parser 3757 passive keyword removed spec text format data segment offset considered passive remove parser print pas plus test used syntax fix 2339,,
227,4441588c356ece316a36019715e511b7eed36021,lon Zakai <azakai@google.com>, 2021-03-30 13:05:42 -0700, , fuzzing minor execution results.h fix 3747 log i64 two i32s keep output consistent regardless whether legalize print reference result printed value compared funcref index function guaranteed opts trap trying call export nondefaultable type instead asserting trying create zero,,
228,38c119358b96d30b2af6c0ba29aa08f610fe2f73,lon Zakai <azakai@google.com>, 2021-03-30 12:32:42 -0700,3719, wasm optimize refis refas type let 3725 similar optimization bron 3719 3724. type tell kind input tell compile time result get like ref.is_func something type ref func always return etc code size perf tradeoff looked marked todos,,
229,2b62a65d7dcf91e1971048012a842f83e54761af,lon Zakai <azakai@google.com>, 2021-03-30 12:31:03 -0700,3754, wasm heap read writes read writes global state 3755 missed effects.h result set could look like side effect fix 3754,,
230,cdac6b123b1231859dc0dfbcb88dfabe005855e3,lon Zakai <azakai@google.com>, 2021-03-30 10:25:50 -0700, , fix pas non nullable local 3751 case natural place fix thing right removing parameter local get added avoids work function unnecessarily note could something even simpler calling generic code parameter used new local used could change type local add would slightly code though add complexity parameter removal method,,
231,a3ea08bd0588099225b5f2b1fb7e6f0ad49dddcb,lon Zakai <azakai@google.com>, 2021-03-30 08:53:43 -0700, , bool xor bool 3741 noticed samparker llvm http d99171 apparently pattern llvm emits help real world bullet physic codebase seems worthwhile well,,
232,9b38e4394034d6f25f54fc471bb9ac8812815331,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-29 15:34:48 -0700, , lubs 3731 partial revert 3669 removed old implementation type correctly handle recursive type new implementation typebuilder construct lubs recursive type return temporary heaptype yet fully constructed break would otherwise infinite recursion,,
233,09cba0fa50b0492ecf7b7886180dbd6c5aa5d04d,lon Zakai <azakai@google.com>, 2021-03-29 15:32:01 -0700, , scan module level code necessary place 3744 several old pass like need look ref.funcs scanned function enough instruction might appear global initializer fix add walkmodulecode method walkmodulecode useful pattern creating function parallel pas scan function quickly also want scanning code module level allows single line also possible walk entire module find code function parallel perhaps walkparallel option simplify followup would call walkmodulecode afterwards etc also add missing validation comment validator issue noticed relation new testcases,,
234,244f886cb2f1d9c5dddbf2dea5d47e6b0a434c5d,lon Zakai <azakai@google.com>, 2021-03-29 13:59:41 -0700, , wasm fix ssa pas non nullable parameter 3745 parameter written create new local write must handle non nullability new local,,
235,bac5b8195dd8bf6cd105559a04bb0e069aaddf97,lon Zakai <azakai@google.com>, 2021-03-29 13:25:24 -0700, , fix reduction nondefaultable tuples 3746 makezeros right assert nondefaultable type,,
236,41594d7a5bad76f567559e9496ab3d98ba170361,lon Zakai <azakai@google.com>, 2021-03-29 13:17:06 -0700, , modify params 3740 parameter non nullable must stay began mistake modified var,,
237,1a6efdb4233a077bc6e5e8a340baf5672bb5bced,lon Zakai <azakai@google.com>, 2021-03-29 11:33:52 -0700,13744, inlining always inline single use function 3730 implement emscripten core emscripten 13744 inlining function single use allows remove function afterward look highly beneficial shrinking every single benchmark emscripten benchmark suite average macrobenchmarks 3.5 speed also improves although mostly microbenchmarks might realistic may slight downside startup time due emitting larger function given baseline compiler vms day seems worth delay would get upper tier benchmark suite risk seems low see detail,,
238,9c1d69f6596b76fe83bff17709b92f8cc2054a31,lon Zakai <azakai@google.com>, 2021-03-25 19:37:19 -0700, , fix fuzzer creating function heaptype func 3738 also handle case non function data type,,
239,36d6f22cf71e66847fb06685b0e634fe0c4f770d,lon Zakai <azakai@google.com>, 2021-03-25 15:58:56 -0700,3736, print parse error reducer roundtrip 3737 without crash thing like 3736 simply get reported parse exception thrown detail,,
240,c248d90bdc2f439ed04b89aff408412dd7711f1f,lon Zakai <azakai@google.com>, 2021-03-25 14:41:45 -0700, , wasm add name type pas 3735 pas give simple short name type type useful debugging avoid autogenerated name long,,
241,a7b7cab1cbbdbf5ba93c6808e3e6c16e296a3535,lon Zakai <azakai@google.com>, 2021-03-25 12:27:31 -0700,3710, fix binary reading tuples containing non nullable type 3734 must write tuple nullable type fix reading similar except operates entire tuple type share code fix regression 3710 harder notice fuzzer ,,
242,00990c372522398a12d09d7dbed48c1a10d57657,lon Zakai <azakai@google.com>, 2021-03-25 11:53:29 -0700, , fix tuple type 3733 look like pre existing issue 3731 testcase fails reason investigate depth land first also fix check fuzzer,,
243,23ad3cee7d4b3d20ded8627efce3e6f400a35339,lon Zakai <azakai@google.com>, 2021-03-25 11:48:10 -0700, , flat allow ref.as_non_null nested position 3732 disallow result non null spill local may cause issue eventually combination flatten expect doe may need revisit,,
244,ae1a0a633cdffeec5354f8233c1321b832a96488,lon Zakai <azakai@google.com>, 2021-03-25 08:28:48 -0700, , wasm properly validate struct.new number operand 3726,,
245,4506ffba7da377044e5a4a6d9385591ff730221c,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-24 21:01:55 -0700, , refactor typebuilder 3728 make typebuilders growable add gettempheaptype method allows gettemp type method take arbitrary temporary canonical heaptypes rather index allows basicheaptypes assigned typebuilder slot change necessary upcoming implementation equirecursive lub calculation also add new utility typebuilder using operator intuitive readable wrapper around gettempheaptype setheaptype method,,
246,78de694ceb1b642076050d75c26ce4c1bf996b31,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-24 16:51:11 -0700, , resolve unused variable globalstore 3729 variable used asserts enabled causing compilation error optimized build wunused variable werror fix build error hiding variable behind ifdefs,,
247,55af054b6b0b6d30fca7da43ac1c4522ff812e67,lon Zakai <azakai@google.com>, 2021-03-24 16:40:00 -0700, , validator pas module along printing error type name used 3727 example invalid wat module type vec struct field i64 func test drop vec i32.const rtt.canon vec    used print wasm validator error function test struct.new operand must proper type i64 i32.const rtt.canon i64  print wasm validator error function test struct.new operand must proper type vec i32.const rtt.canon vec  note vec used real world example autogenerated structural name huge avoids,,
248,17684a20196194d6b0a930b4bd10688f9e2d3fa8,lon Zakai <azakai@google.com>, 2021-03-24 11:39:32 -0700,3719, wasm optimize bron wrong kind 3724 3719 optimized case kind want like br_on_func function handle opposite case know kind wrong break taken seems equally useful polymorphic code doe bunch check route different code case inlining optimization may see path taken also refactor checking code shared location refis also want use,,
249,0b0e20f9802afa2f74a896853b4c1be4d3f49f1e,lon Zakai <azakai@google.com>, 2021-03-24 10:54:49 -0700, , wasm handle non nullable local flatten pas 3720 pas add lot new local need handle non nullable one,,
250,7d00f654bb3545beb5772f2f19768a48779e3db6,lon Zakai <azakai@google.com>, 2021-03-24 10:31:01 -0700, , wasm validate number argument struct.new 3723,,
251,ffac06650507ac413d60d72aadc1e33fb1f91ccf,bbas Mashayekh <martianboy2005@gmail.com>, 2021-03-24 21:43:45 +0430, , support expression element segment 3666 add support ref.null valid element segment item abbreviated format elem ... func ... kept printing binary emitting item ref.func public apis updated,,
252,683c31381f5798016f683a6b42e2a8fad0f871cb,lon Zakai <azakai@google.com>, 2021-03-24 08:03:57 -0700, , wasm optimize br_on_ 3719 type may prove value null may also show type casting case simplify thing,,
253,182a1fbc41becdfdfbfcf02a2d67798fb087e7c1,lon Zakai <azakai@google.com>, 2021-03-24 08:02:59 -0700, , wasm fix canmakezero tuples 3721,,
254,6aa04fa17a5bf820c8bc3a7801ede7f57a9138e7,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-23 20:44:42 -0700, , equirecursive type 3717 equirecursive type use hopcroft dfa minimization algorithm properly canonicalize deduplicate recursive type type two stage shape top level structure heaptypes used split declared heaptypes initial partition hopcroft algorithm refines partition pair distinguishable type end different partition fresh heaptypeinfo created final partition new heaptypeinfo linked new heaptypeinfos create minimal type definition graph defines type original graph global new minimal heaptypeinfo doe finite shape existing globally canonical heaptypeinfo moved global heap type store become new canonical heaptypeinfo temporary type referenced newly canonical heaptypeinfos replaced place equivalent canonical type avoid leaking temporary type global store,,
255,f2abcbc8d1659d3e6506b1d4128646b892ebc218,lon Zakai <azakai@google.com>, 2021-03-23 14:23:43 -0700, , wasm add support non nullable type except local 3710 still support non nullable local longer turn type nullable upon load particular support non nullable type function parameter struct field etc enough experiment optimization binaryen vms regarding non nullability since expect optimizing vms well inside function anyhow non nullability across call data expected think let handled lowering get set addition turn non nullable local nullable one add ref.as_non_null get keep type identical used loading code let also needed inlining code change removing fixmes allowing non nullable type also code handle issue mentioned  test update removing extra null added turned type nullable test actual issue though also new test added cover code change,,
256,5ef255154172504385a8218f9712a48d98a47689,lon Zakai <azakai@google.com>, 2021-03-22 16:48:57 -0700, , use type selectification removeunusedbrs 3716 type replacing select use type could efficient also avoids current crash removal lubs worth regardless,,
257,418804035056bcd133ff5e292bf645d5d26d8d0d,lon Zakai <azakai@google.com>, 2021-03-22 16:33:37 -0700,3705, wasm emscripten finalize skip start function body 3714 skip function body still need parse start function pthreads case see detail comment still give speedup start function function big return full speed reversion 3705,,
258,8dddd9f3a3060d831af48387165703e1d8efcc63,lon Zakai <azakai@google.com>, 2021-03-22 16:13:33 -0700,3669, fix fuzz regression 3669 3715 entirely sure lub removal made noticeable seems pre existing bug however somehow 3669 noticable perhaps finalize code worked around bug removeunusedbrs moving code around finalizing parent child correct pattern always work child outwards otherwise parent trying finalize based non finalized child fix finalize stealslice method caller finishing work part refactoring move stealslice single pas aside orderly method really general purpose tool quite specific removeunusedbrs doe might easily used incorrectly elsewhere,,
259,5c17d353ce24dffabf05d7fd2bf9d20a3618962f,am Clegg <sbc@chromium.org>, 2021-03-22 11:57:17 -0700, , allow clang format diff clang tidy diff take branch argument 3711 also update clang format diff.sh match recent change branch name system change mirror already made clang tidy diff.sh,,
260,6856f261d78ba245b0f6364ad4683778e022b5d2,outer van Oortmerssen <aardappel@gmail.com>, 2021-03-19 15:39:01 -0700, , fixed reading bit memory output globals 3709,,
261,5d9a6049c08c3b9e7ddb0c061f15b2731c6bad77,lon Zakai <azakai@google.com>, 2021-03-19 08:49:15 -0700, , avoid warning error istemp type unused 3707 little fun fake overloaded type cppreference say way found way cast like std function fails,,
262,86f05289d8fb50875d58ed491380bb8b4097d4eb,am Clegg <sbc@chromium.org>, 2021-03-18 17:09:31 -0700, , add pipefail shell script 3706 mean command pipeline fails whole pipeline also fail,,
263,2c14fc3c11052e1db1bac3beb8193b9f05e45412,am Clegg <sbc@chromium.org>, 2021-03-18 16:59:21 -0700, , perform clang tidy clang format linting 3708 step diff upstream really make sense normal run,,
264,5575c13b1e8faef31e11ee0f009cd0f5d78b3e65,lon Zakai <azakai@google.com>, 2021-03-18 16:15:20 -0700,3689, revert effect 3689 3705 assumed wasm emscripten finalize doe need scan function body metadata case doe em_asms pthreads still require scanning code approach valid could maybe disable optimization pthreads think major use case need also simple way disable atm need change emscripten binaryen also longer reverted cleanly due change reason disables optimization user tot longer broken figure valid way optimize use case,,
265,26e6888d235645e993a9f870d597612412d28faf,lon Zakai <azakai@google.com>, 2021-03-18 15:12:28 -0700, , wasm emscripten finalize read name section writing output 3698 writing output need debug info relevant metadata save loading interning name take several second massive input possible principle tool doe change anything use name internally nontrivial way without opting would require refactoring also tool almost always write output 100 unobservable validation fails validation error would contain function index instead name name section one however finalize doe validate atm would matter change later,,
266,e5aaa07844687493e0155dacb6b79bf856a4dd81,lon Zakai <azakai@google.com>, 2021-03-18 15:10:11 -0700, , wasm fix mergeblocks bron 3702 pas aware break switch refactor use generic code first handle break anything remains note problem found path handle switch handled also bron etc git diff useful refactoring sadly basically move break code drop code add branchutils operateon stuff switch unified visitor get called expression,,
267,647ef50fc4de9b5c49ffad1aec4271e79b171785,lon Zakai <azakai@google.com>, 2021-03-18 11:41:51 -0700,3697, ignore missing dwarf rewriting 3700 recent change llvm cause sometimes end thing parent debug_line debug_loc refers perhaps llvm dceing something else changed sure seems like valid dwarf handle handle code two thing broke first locs must simply ignored second line trickier used compute position scanning list contained one missed ended wrong offset make thing simpler robust track position line table fix 3697,,
268,8ea6e13fe18b69419411edfd979ce15302820da2,aulo Matos <pmatos@linki.tools>, 2021-03-17 21:47:02 +0100,3664, use stdbool boolean instead int represent boolean value api 3670 fix 3664,,
269,f7b3289ed430bd86c083410539a92e12632c554c,lon Zakai <azakai@google.com>, 2021-03-17 11:45:22 -0700, , skip function body wasm emscripten finalize need 3689 sbc100 work em_asm em_js parsed wasm using export etc longer need parse function body result emitting wasm wasm emscripten finalize scanning global structure like import export emitting metadata indeed need emit wasm case specifically optimizing using wasm_bigint avoid needing legalize considering skipping wasm emscripten finalize entirely situation instead parse metadata wasm python emscripten side however sbc100 brilliant idea today skip function body simple need write another parser wasm also look simple also faster run wasm emscripten finalize mode run python downside byte wasm loaded even parsed almost certainly disk cache anyhow implement idea wasm emscripten finalize know write wasm output note skip function body binary reader skip body place unreachables instead wasm still validates new test tested design unobservable optimization could notice body skipped would skipped also change needed emscripten side benefit speedup basically binaryen see need skip parsing automatically benchmarking speed fast expect wasm emscripten finalize step 15x faster sqlite 1mb wasm almost 50x faster biggest wasm drive 40mb llvm number release build without debug info debug make thing slower speedup lower need work tested manually also wasm0 wasm2 emscripten,,
270,fcc6679d0ca148727939397ff1843b84a68a8e61,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-16 23:47:34 -0700, , nfc record istemp typeinfos 3695 istemp used new assertion guard leaking temporary type heap type global store replaces external set self referential type field additionally used upcoming improving type,,
271,7ca01ed8762a41ddf5268167a9a175c96019d7c2,lon Zakai <azakai@google.com>, 2021-03-16 16:44:28 -0700, , add missing field moduleutils copymodule 3692 missing type name feature section,,
272,39eac740cdf769b30e9969824387bf8b4b025aab,lon Zakai <azakai@google.com>, 2021-03-16 16:44:01 -0700,3694, wasm validate static subtyping rtt.sub 3696 also add spec test including one verifies validate rtt.sub global location fixed 3694,,
273,661ae32122f9f0ba70b03b2d76a41274ce5e4bb2,lon Zakai <azakai@google.com>, 2021-03-16 12:01:26 -0700, , validate code global data structure 3694 validation almost never needed start get interesting global initializer rtt.sub must valid test testing requires fix later,,
274,5fea332e1e6cf2b00334b617bb1bf399e9394592,lon Zakai <azakai@google.com>, 2021-03-16 11:17:03 -0700, , wasm optimize array.set stored value 3690 already struct.set,,
275,c68c656798daa65f380176394993f301091078b1,lon Zakai <azakai@google.com>, 2021-03-16 09:20:03 -0700, , remove unused module param name getvalidname nfc 3691,,
276,528763d53426b05ab0d02c2aab741810316bb259,lon Zakai <azakai@google.com>, 2021-03-15 07:54:55 -0700, , simplify fuzzer fixup code name 3688 rather use delegates.h helper scope name,,
277,81b6067b7b1edf50495dd3acf1465a62aec094e8,am Clegg <sbc@chromium.org>, 2021-03-12 15:04:04 -0800, , remove old asmconstwalker code 3685,,
278,99ae87fb9e5aa7a43cd7ac2a07ee5df681601784,am Clegg <sbc@chromium.org>, 2021-03-12 13:03:56 -0800, , regenerate lld test 3684 change automatically generated script test binaryen bin binaryen bin lld change mostly due llvm emits name globals segment emscripten pack em_asm consts single contiguous segment,,
279,d31f202cf860ba8690db2f4c3d521dfc6a178b5c,lon Zakai <azakai@google.com>, 2021-03-12 12:20:36 -0800, , fix fuzz issue elementsegment name collision 3674 name collide fuzzer want ensure segment add one add another,,
280,486f2611be3aefae0079de3c566474c9ed87a320,lon Zakai <azakai@google.com>, 2021-03-12 11:29:40 -0800,3682, wasm avoid std map type maplocals 3683 work around 3682 roundtrip large real world testcase,,
281,b98dce24827e006e9527ec50642ba77dfada662a,lon Zakai <azakai@google.com>, 2021-03-12 06:46:14 -0800, , wasm optimize struct store like store memory ignore unneeded bit 3680 storing ignore higher bit etc add getbytesize utility field make convenient,,
282,32be343d217781045572da274eb4d63f4ead86c5,lon Zakai <azakai@google.com>, 2021-03-11 16:42:44 -0800, , refactor use visit method nfc 3678 instead single big optimize method use separate function per instruction give smaller function nesting case avoids manually casting checking etc reason done originally pas doe repeated application optimize changed something would run result perhaps optimizing need run child result another full walk simplest way loop optimize replace modifies replacecurrent method call report current node replaced code keep processing change happen trivial code avoids recursion slight complexity seems worthwhile order simplify bulk large pas,,
283,74870e8a77625477e2c43883ec386380b2aea4e3,lon Zakai <azakai@google.com>, 2021-03-11 15:12:51 -0800, , wasm avoid extremely large output typenameprinter 3667,,
284,1f695bc88423abcf03c006e62f137ac0e76f93df,lon Zakai <azakai@google.com>, 2021-03-11 15:11:25 -0800, , wasm add passing spec test 3677,,
285,484563771dbca78e5323cc3f5129890aea03aed5,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-11 13:53:19 -0800, , remove lub calculation 3669 since correct lub calculation recursive type complicated stop depending lubs throughout code base also fix validation bug validator required block typed lub branch type fact upper bound valid addition fixing bug simplifies code break handling storing redundant information arity type,,
286,d369cd6474364e5797e40af94676339af03723a9,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-10 16:06:19 -0800, , make unreachable subtype everything 3673 since principle unreachable expression used position exception rule avoids replacing concrete expression unreachable expression need refinalize expression notably type already treating unreachable bottom type,,
287,9202df3864d2d8f09f191f61a964a08c30d10821,lon Zakai <azakai@google.com>, 2021-03-10 10:39:53 -0800,3656, wasm fix rtt type parsing 3672 missing 3663 fix 3656,,
288,752d3080c3a648c86a2625067973870ca043cd77,aulo Matos <pmatos@linki.tools>, 2021-03-10 19:20:12 +0100, , use uint32_t event attribute api 3671,,
289,a1187630835e747ba7609296ab0ecb85df0b07b2,lon Zakai <azakai@google.com>, 2021-03-09 12:30:36 -0800,3656, wasm properly handle typeindex binary format 3663 handled s63 instead u32 fine u32 value fit s63 strictly correct signed encoding may use additional byte unnecessary actual correctness issue u32 may interpreted large negative s63 sign extends final bit happens may help 3656 testcase still doe pas even,,
290,a1d3e63f89e9d13daabf626033a66fe5b8a8bce1,lon Zakai <azakai@google.com>, 2021-03-09 11:57:23 -0800, , wasm allow set value subtypes 3665,,
291,afc5fbd51759c07492fec4cae86d7e9484547626,lon Zakai <azakai@google.com>, 2021-03-09 11:53:05 -0800, , reducer improve reduction function body factor text reduction 3668 old code tried call visitexpression outside walk wasm work except replacecurrent doe nothing current node perhaps assert called outside walk might expensive check assert build maybe worthwhile replace working check walk also limit frequency 1000x often normal reduction time like used also optimize starting factor text reduction text file much larger amount initial factor far high inefficient,,
292,ef52d84bf6204a8a0f9348a9cc89e618526b8aae,outer van Oortmerssen <aardappel@gmail.com>, 2021-03-08 15:19:32 -0800, , fixed .debug_loc parsing wasm64 file 3660 address size hard coded get information .debug_info required changing parsing order also made failure parse .debug_loc fail program error easy ignore,,
293,89b8af006bc56cb4bf68f12a80b1cfe8e7a353d4,bbas Mashayekh <martianboy2005@gmail.com>, 2021-03-06 03:08:51 +0330, , reference type support passive elem segment 3572 passive element segment belong table link table elem need weaker i.e elem may table case active segment simply collection function reference case passive declarative segment take table segment turn first class module element like table function also implement early support parsing printing encoding decoding passive declarative elem segment,,
294,57619b508d38677844cb482a4034dc985d2cecc6,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-05 14:26:06 -0800, , effect record read writes heap 3657 read writes memory interfere read writes object interfere add new readsheap writesheap field effectanalyzer account interference note memory access never alias heap access considered separately similarly would possible prove different heap access never interfere based accessed type left future work fix 3655,,
295,d7cf703bf9c6c9e09a048b976cfb0c5db6a43270,lon Zakai <azakai@google.com>, 2021-03-05 20:47:01 +0000, , wasm fix cost.h 3658,,
296,dfafe354a0ebb6250851399a36b8263dd3d43de3,lon Zakai <azakai@google.com>, 2021-03-05 03:25:09 +0000,3648, fix binary writing local name index 3649 writing binary take local index turn format binary clump type writing name section aware ordering never noticed 3499 fix saving mapping local emitting name section using emitting local name also fix order type part refactoring used depend ordering type decide emit first good least two reason first hit 3648 order fully defined recursive type also good code size ordered local way think best already reorderlocals pas make pick order type based much possible see type first time append list whose order use test change use different order atomics64 actual fix e.g heap type local ref null vector indeed right vector likewise matrix etc wrong name another example local local_externref externref whereas name funcref wrong ... seems like incorrectness common reference type type noticed fix 3499 make part 3648 moot,,
297,f71927c7318a25d2dd2b2a6fd0cafc210e568fd5,erek Schuff <dschuff@chromium.org>, 2021-03-04 19:14:14 -0800, , add cmake option install tool 3654 option avoid installing static library header distribution want small possible need support development libbinaryen emsdk still installs dynamic library since needed tool,,
298,2bd5f60769506479316811da2b07913d0412abe0,lon Zakai <azakai@google.com>, 2021-03-04 20:31:58 +0000, , emit elem declare function need 3653 add support reading elem declare func foo text binary format simply ignore need represent rather find need declared writing part take little work add shared helper function,,
299,ecd05546466494973fcc196a6661e0d5dfff6aa1,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-03-04 11:23:33 -0800, , fix typecomparator satisfy compare requirement 3650 comparison implemented typecomparator previously antisymmetric held structurally identical nominally distinct recursive type meant satisfy condition compare requirement meant std set operate correctly discovered 3648. fix problem making false vice versa making type comparison properly antisymmetric drive also switch using std stable_sort make order type section completely deterministic accross platform fix 3648,,
300,4a98c9a5d6061bf40c35ff5a5dce4c08606d6801,lon Zakai <azakai@google.com>, 2021-03-04 19:09:55 +0000, , stop emitting feature section fuzzer 3652,,
301,13c0243251f06730e9d9330f4c60f0bc62c591ac,lon Zakai <azakai@google.com>, 2021-03-04 00:26:44 +0000, , make reduction script robust document text reduction 3640 check valid wasm file must different wasm feature section try way detect feature feature wasm valid least one work,,
302,11ec03ce930121736655769b9bbccaae0280b64c,lon Zakai <azakai@google.com>, 2021-03-03 19:53:26 +0000, , wasm parse text field name even type end canonicalized together 3647 name structurally identical type end collapsed together type canonicalized properly read content structurally identical type different name,,
303,a5e5be42cf32e0232ef7a4c3bce67c289623eea6,lon Zakai <azakai@google.com>, 2021-03-03 17:43:17 +0000, , wasm exception fix handwritten exception test 3639 catch_all pop,,
304,ecd915ef62cc4b08ad11f9daa9e0b9ff0a7580c1,aniel Wirtz <dcode@dcode.io>, 2021-03-03 02:29:13 +0100, , remove pass 3643,,
305,47c15838ad4378430b2d216fbf4474b71d3fb66f,am Clegg <sbc@chromium.org>, 2021-03-02 17:16:25 -0800,3459, release 100 3645 fix 3459,,
306,0632a4b287ab06039ed329bdb44e8c7150ddcb4f,am Clegg <sbc@chromium.org>, 2021-03-02 16:33:42 -0800,3459, build alpine linux match release builder doe 3642 also fix underlying issue lit correctly installed via pip3 see 3459,,
307,760a51bd15a51f02bc1c75087a9cd9e11b9f27bb,lon Zakai <azakai@google.com>, 2021-03-03 00:03:11 +0000, , wasm ref.cast ref.test zero immediates 3641 update correct current spec prototype,,
308,5f88277c4bddc097d2f073e41488889f02b08103,lon Zakai <azakai@google.com>, 2021-03-02 23:41:16 +0000,3636, wasm allow subtyping argument struct.get etc fix 3636 3644 note binaryen canonicalizes type test output end grandchild twice consequence storing heap type extra field think downside aside losing perfect roundtripping think worthwhile tradeoff efficiency thinking far fix 3636,,
309,e7c6356c7529c29ef06f4541bc3164659e8917f6,lon Zakai <azakai@google.com>, 2021-03-02 23:19:33 +0000, , remove duplicate assertion 3638,,
310,1f0ab5b54850812040b2e9f56a3428aeac54e425,lon Zakai <azakai@google.com>, 2021-03-01 22:14:58 +0000,193, wasm add name section support field name 3589 add support struct field binary format implementing webassembly 193 extra test needed see .frombinary output show working also minor fix parser always add name map index name exists without fix binary emitter would write null string,,
311,101aac786ccffe3714fdcf05437b2b740135b4de,lon Zakai <azakai@google.com>, 2021-03-01 22:08:35 +0000, , wasm add test spec br_on_null.wast validation fix 3623 add allow sharing builder code also validates text binary parser general share code validator validator run exists case even emit valid structure,,
312,4057747ddd1506924121a9cd3dc60496809b842d,lon Zakai <azakai@google.com>, 2021-03-01 22:07:31 +0000, , fix denan pas handle existing colliding name 3631,,
313,0d83a4d43f6215334773154f5b8314e27ed3b568,aniel Wirtz <dcode@dcode.io>, 2021-03-01 22:26:10 +0100, , add api binding ref.as_ 3628,,
314,d137e7f8fb5ae943b115885f256ad57bfae67f6b,lon Zakai <azakai@google.com>, 2021-03-01 20:48:30 +0000, , refactor code parsing.h nfc 3635 new parsing.cpp one method used expression parser moved,,
315,575aec37f3fe4793b1d16275426c6369864e1540,lon Zakai <azakai@google.com>, 2021-03-01 19:33:10 +0000, , wasm exception fix work around delegate issue inlining pas 3633 ignore fake delegate target unique name mapper mapper run inlining fix inlining function delegate caller inline function delegate support eventually think good enough inlining safe run exception code,,
316,27a841eec6ceb171caae2a2cbd7c92ecdf8d78eb,lon Zakai <azakai@google.com>, 2021-03-01 15:04:54 +0000, , wasm exception properly ensure unique try label inlining 3632 old code referred block loop refactor use generic helper code also handle try also add validation try name validator testcase would label appear twice fix fix label0 one,,
317,7d453930f1b211baf324b1c010924d3709ff12ba,eejin Ahn <aheejin@gmail.com>, 2021-03-01 10:30:00 +0900, , allow empty body within catch block 3630 previously assumed catch body size least catch keyword event name body catch body empty event type none fix bug allows empty catch body parsed correctly fix 3629,,
318,0eb513d730b122f38bd6c66280c8acfe183b9b35,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-28 08:44:04 -0800, , consider self referential heaptypes canonical 3626 make typebuilder move self referential heaptypes global heaptype store considered canonical mean heaptype constructed identical definition equivalent original heaptype constructed typebuilder doe _not_ mean self referential heaptypes deduplicated fix bug two version self referential function signature emitted global heaptype store aware original self referential heaptypes function signature used construct heaptypes type collection new heaptypes allocated emitted addition original heaptypes global heaptype store return original heaptypes extra heaptype never allocated,,
319,32bfd1c5b32a1ce38da310deb67819c471becb45,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-26 21:27:31 -0800, , use enum instead bool stacksignature kind 3625 readability improvement use enum polymorphic fixed variant represent polymorphic behavior stacksignatures rather bool uneachable,,
320,a276c7e9687a98bb4cb222c71278a8658633d80f,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-26 17:28:27 -0800, , support printing recursive type 3624 also fix location print.cpp type printed directly rather going expression type printer remove vestigial wrapper type longer used,,
321,1ba4d259616a71a6a80662f1dff95fc125ecac2e,lon Zakai <azakai@google.com>, 2021-02-26 23:00:15 +0000, , remove unneeded static_assert number name hashing 3606 assertion really needed wasm64 need change support name theory wasm64 memory64 atm need add general option index larger bit general nothing specific hashing code,,
322,db6fa71e32e67c85af03e3dab482fbd35ffd1889,lon Zakai <azakai@google.com>, 2021-02-26 20:30:09 +0000, , wasm add array.wast validator fix 3622,,
323,7bef936f181b9419640d6a68e2869808c21eda3e,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-26 11:06:09 -0800, , update clang tidy diff.sh action 3619,,
324,cafe85d6d8d5a7497ebf40b8474052be0885e58f,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-26 11:03:10 -0800, , use tarjan scc alg find self referential type 3621 previously computed fixed point parent child relation identify self referential heaptypes typebuilder canonicalizer algorithm worst case took five second find self referential heaptypes example program 1134 heaptypes probably due high allocation traffic std unordered_map std unordered_sets used implement parent child graph adjacency list replaces algorithm tarjan strongly connected component algorithm run find self referential heaptypes mentioned example program ms. strongly connected component one element heaptype parent child graph correspond set mutually recursive heaptypes therefore self referential self referential heaptypes mutually recursive heaptypes trivial find must direct child,,
325,b3f67918fe34e7de76d1f5565bd3f07f4f7eb12f,aniel Wirtz <dcode@dcode.io>, 2021-02-26 11:48:09 +0100, , slightly improve table api 3604 binaryenindex instead int mirror parameter type table construction add setter name initial max,,
326,54d13b1cab26e8b48d95b573e46ab672c0564d0f,aniel Wirtz <dcode@dcode.io>, 2021-02-26 11:14:37 +0100, , add feature api 3603,,
327,fd10f10d282f332e8c698da481747e34eb222901,aulingMonkey <git@maulingmonkey.com>, 2021-02-26 01:01:03 -0800, , fix vs2017 build std 3620,,
328,856c70b5985da942ffea82a613fc8357055020f2,aniel Wirtz <dcode@dcode.io>, 2021-02-26 09:05:00 +0100, , add refisgetop setop api 3605,,
329,3bc8c3b348699f45131f823b49024138f1992368,lon Zakai <azakai@google.com>, 2021-02-26 00:51:47 +0000, , simplify printing code 3618 iterate child using standard order delegates.h used binary format well exception control flow instruction need special handling,,
330,b89b601a36e9cfe17dc1f09c641266ac2a715299,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-25 16:21:35 -0800, , support comparing subtyping naming recursive type 3610 type section emitted type equal amount reference ordered arbitrary measure simplicity previously would infinitely recurse structurally equivalent recursive type similarly calculating whether recursive type subtype another recursive type could infinitely recursed avoids infinite recursion case switching algorithm using normal inductive recursion using coinductive recursion difference inductive algorithm assume relation hold pair heaptypes exhaustively shown hold coinductive algorithm assume relation hold unless counterexample found addition two algorithm also implement name generation recursive type using bruijn index stand inner recursive type additional algorithm need switched inductive coinductive recursion least upper bound generation presented good starting point sufficient get interesting program working end end,,
331,142d5f32ce792327de62b62f09f25528dcd86950,lon Zakai <azakai@google.com>, 2021-02-26 00:08:10 +0000, , wasm fix order operand array.new struct.new 3617 also add missing source file test let.wasm,,
332,2572bbcd975c3bb7f99112ced7fe437e7a88eec0,am Clegg <sbc@chromium.org>, 2021-02-25 15:57:26 -0800, , remove .obj gitignore 3616 cmake put object file inside cmakefiles already handled cmakefiles entry file mean git status git clean help find stray file one might made inadvertently tree,,
333,7977ad58a367f49555c70ea5f0f0f6ab06b28903,outer van Oortmerssen <aardappel@gmail.com>, 2021-02-25 13:18:34 -0800, , support bit data segment init exps memory64 3593 consequence http d95651,,
334,04c1515acb354714af3d07fe2a3b65b2bb0398ab,lon Zakai <azakai@google.com>, 2021-02-25 21:15:41 +0000, , support type name name section 3615,,
335,c64a50d46cd3b5d5c19411b3ac4d8f0ba10c2efd,lon Zakai <azakai@google.com>, 2021-02-25 20:00:55 +0000, , wasm print struct field name 3608,,
336,2a00fc6b0740ba0482c8e9748c05b3d87805a712,aulo Matos <pmatos@linki.tools>, 2021-02-25 18:54:56 +0100, , fix typo api header 3611 first occurrence segment refers memory,,
337,aff7ae130f39c0c83cea0d36a996b9cb5530fbd2,aulo Matos <pmatos@linki.tools>, 2021-02-25 18:54:08 +0100, , remove comment context nonexistent 3612 comment refers nonexisting comment table comment added 95d00d6 refers field bool exists removed meantime along comment table,,
338,d1d631d5f354ef3470c15003118d1c750b557fe2,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-24 18:57:30 -0800, , support building recursive type 3602 update typebuilder support recursive type recursive type particularly problematic current scheme necessary canonicalize type immediate child canonicalizing type avoid leaking non canonical temporary type typebuilder global type store case recursive type possible cyclic nature principle could overcome hashing recursive type based structure rather content would complicated instead take shortcut canonicalizing self referential heaptypes rather moving typebuilder global type store without changing address needing update use site break cycle make possible canonicalize type correctly note add support building recursive type almost anything type printing comparing emitting certainly lead infinite recursion follow update operation work correctly recursive type,,
339,95ccf32f3e74bf52d9db161cffc27637f3957820,lon Zakai <azakai@google.com>, 2021-02-25 02:46:37 +0000, , refactor name processing escaping deduplication shared place nfc 3609 100 nfc since also fix bug moving line loop,,
340,4311e46cc7ae7dd998698e5d15371b605c663bc0,lon Zakai <azakai@google.com>, 2021-02-24 22:29:45 +0000,3589, wasm move struct field name proper place 3600 3591 add type field name module object used type field field well remove name field field object completing refactoring binary format support added proper replacement 3589,,
341,6656dfaf9c52b1dda3426b6d7e2a1db3ec3617e5,lon Zakai <azakai@google.com>, 2021-02-24 17:54:57 +0000,13485, fix hashing use name without context target 3601 would assert hashing e.g without context recognized name somehow issue delegate happened hash thing believe remember aheejin noticed issue given testcase deferred fixing time guess delegate easy get e.g codefolding hash try delegate issue found emscripten core emscripten 13485,,
342,49a906dc04f760a7eb32627689f6cc98524c0f72,ndcn <xndchn@gmail.com>, 2021-02-24 15:57:36 +0800, , add missing visitfunctions 3596,,
343,538fe22e53b14695bb179796b91a6a168e99cd34,lon Zakai <azakai@google.com>, 2021-02-23 23:07:11 +0000,13485, wasm exception fix stackir writing nested delegate 3599 missing pop catchindexstack delegate end scope like tryend doe found emscripten core emscripten 13485,,
344,a7c66754ba86854ea3e0381986796e6565b93199,lon Zakai <azakai@google.com>, 2021-02-23 22:46:13 +0000,3589, properly use text format type name printing 3591 add typenames entry module store name type far store type name text format future add support field name binary format field name added wasm.h see agree direction work threading module various function print.cpp keep module optional still print expression independently module always case think keep module mandatory perhaps would little simpler could refactored form depends  diff test update since almost test use text format many specify type name used ignore step towards proper solution 3589,,
345,c127eccf753ab86a4d5deecbd0f3fa78a83e42ad,alkingeyerobot <mitch@thefoley.net>, 2021-02-23 17:11:49 -0500, , cleanup fallthrough warning building without asserts 3598,,
346,3f5eca2423450389c3444817c21aa0d24f512528,lon Zakai <azakai@google.com>, 2021-02-23 21:28:04 +0000, , add subtyping support heaptypes 3597,,
347,b3b6a81c6a74db656d8f2c07b91c4a0ba4b28734,lon Zakai <azakai@google.com>, 2021-02-23 00:59:27 +0000,13485, wasm exception fix cfg traversal linking basic block call 3594 unfortunate case order execution call argument link self currbasicblock self startbasicblock would run call first set currbasicblock end value parameter without fix testcase would drop result call thought also improve debug logging tiny bit found emscripten core emscripten 13485,,
348,84eb631330cbeb2afc80df2c2c856a2392dc66bb,outer van Oortmerssen <aardappel@gmail.com>, 2021-02-22 15:17:44 -0800, , fix global destructor ordering problem 3592 window map code caused double delete literal given order destruction unspecified decided make local fixed sure still latent ordering bug globals seems improvement regardless,,
349,611e6de8c850dce19c3be0a636977cc6151d69ba,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-19 13:44:20 -0800, , support type use definition binary 3588 update parsing binary type section use typebuilder support definition binary text parser support order type also relaxes logic emitting type allow emitted definition,,
350,e24c1f0c826db6dcd63fc015f961919657accce5,lon Zakai <azakai@google.com>, 2021-02-19 19:19:56 +0000, , wasm exception fix binary parsing normal break try singleton 3581 fix remove code maybe need block would remove try block thought needed however checked exception branch normal branch also possible location good way find block branch aside scanning content give mean add unnecessary block optimizer run matter could make binary parser complicated remembering whether block branch past sure worth,,
351,b6c094c8760b3c3e7ffbc54c46c6329b22d88cfe,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-18 21:48:19 -0800, , support type definition text parser 3584 traverse module find type definition typebuilder construct corresponding heaptypes rather constructing directly allows type used definition type defined important step toward supporting recursive type text parsing change necessary support recursive type beyond allowing type used definition also make couple incidental change parser behavior first compound heaptypes declared type ... element declared inline site use reduces flexibility parser line text format spec probably look like eventually see http github.com webassembly function reference issue second change type ... element parsed func ... element rather text order type index different wasts using numeric type index broken note however already completely spec compliant regard parsed type defined type ... func ... element type defined type call_indirect instruction,,
352,22fc60d86538a6111f7b953fd70362ee73dce7d8,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-18 17:48:58 -0800, , fix typebuilder 3578 type heap type used multiple time typebuilder instance possible algorithm canonicalize parent type canonicalizing component child type leaking temporary type globally interned type bug led incorrect result use free bug cause bug type canonicalized reverse order visited child visited first occurrence parent necessarily last occurrence parent one fix could remove logic prevented type visited multiple time child would always visited parent simple fix however would scale gracefully handle recursive type would require way detect recursion without accidentally reintroducing bug implement robust solution topologically sorting traversed type ensure child canonicalized parent solution trivial adapt recursive type recursive type trivial detect reachability graph used perform topological sort,,
353,3e31f4fd583324ad446fb96bc0d073e141157f7f,lon Zakai <azakai@google.com>, 2021-02-18 23:54:04 +0000, , wasm exception handle delegation caller 3585,,
354,ad0c8b4fd3808755fc071d43ebaa582a46d74922,lon Zakai <azakai@google.com>, 2021-02-18 22:32:34 +0000, , wasm exception fix try 3583 delegate field try scanned could remove name used delegate bug visittry override generic visitor visitexpression need call manually sadly code pretty old probably wrote back 2015 misleading unnecessary call generic visitor visitblock visitloop needed remove shorter cleaner also must handle case delegate field unset check name.is,,
355,ec2aa7e870ef4d9926e35c5f4bfc7cdbabe2441a,lon Zakai <azakai@google.com>, 2021-02-18 22:02:51 +0000, , wasm exception scan catch event 3582 also refactor away annoying repeated code pas visittry actual change,,
356,7089ada7c62618d36f5a0a3339334603c5b61a30,eejin Ahn <aheejin@gmail.com>, 2021-02-19 05:26:31 +0900, , remove dependency reference type 3575 new spec doe exnref doe dependency reference type proposal anymore content except previously target feature section contained reference type exception handling exception handling,,
357,629012c3f9a58ff2ecbac066788af57c16471969,eejin Ahn <aheejin@gmail.com>, 2021-02-19 05:26:04 +0900,147, change catch_all opcode 3574 decided change catch_all opcode 0x05 else 0x19 avoid complicated handling tool see http github.com webassembly exception handling issue 147 lso contains original cpp file used generate instruction generate wasm cpp file comment,,
358,d6ba20b0e43ea2a6cadbd82c236ad5614faafbbc,lon Zakai <azakai@google.com>, 2021-02-18 18:11:21 +0000, , create table import none 3580 fix llvm emscripten autoroller breakage due llvm llvm project f48923e commit head author andy wingo wingo igalia.com date wed feb 2021 0100 webassembly lld importtable flag import table needed importtable forced creation indirect function table whether needed import table needed differential revision http d96872,,
359,f7bfc85fae3bebf9ff818905c9bc6df51989ce70,am Clegg <sbc@chromium.org>, 2021-02-18 08:10:02 -0800, , allow em_js string exported globals 3577,,
360,3ed396e11f8aa5bd4fd4290eaf2bfbe9b8fbbe9d,lon Zakai <azakai@google.com>, 2021-02-18 01:13:58 +0000, , remove assertion prevent non assertion build 3576 fix error build,,
361,1254b564b2d36cbf96ef8b8fe0c17fa2fa668ae3,eejin Ahn <aheejin@gmail.com>, 2021-02-18 04:36:56 +0900,3562, make rethrow target try label 3568 previously mistaken rethrow argument rule thought counted catch depth turn follows rule delegate label immediate argument follows rule computing branch label target try label semantically target try corresponding catch otherwise validation failure unlike delegate rethrow label denotes rethrow exception rethrow example wasm try catch try catch rethrow rethrow exception caught catch end end  refer comment detailed informal semantics http github.com webassembly exception handling issue 146 issuecomment 777714491  also reverts delegatetarget exceptiontarget change done 3562 validator label validation rule apply differently delegate rethrow try catch example valid wasm try try delegate catch end  valid wasm try catch try delegate end  try label used within try catch range catch end range delegate rethrow rule different example valid wasm try catch rethrow end  valid wasm try rethrow catch end  try label used within catch end range instead,,
362,1d3f578d5dc26fc8ea83ea851ac0f1100a3cbad6,eejin Ahn <aheejin@gmail.com>, 2021-02-18 01:22:52 +0900, , update feature flag fuzzer 3569 remove feature flag included wasm staging add new experimental flag doe change fuzzer behavior moment fuzzer doe seem currently enabled typed funcref yet,,
363,a74bc72dbe6fa5f3edacfba160dc4e5d630b99b6,alkingeyerobot <mitch@thefoley.net>, 2021-02-16 13:37:16 -0500, , cleanup allow binaryen built strict environment 3566,,
364,3a368f480bcdc36564650f3c0236818613e5d510,lon Zakai <azakai@google.com>, 2021-02-16 17:43:24 +0000, , fuzzer avoid creating tuples non defaultable type 3567,,
365,097b70ce2f53e9cc110c1b5f9cac359a0129994f,am Clegg <sbc@chromium.org>, 2021-02-16 07:12:23 -0800, , fix removal em_js string 3570,,
366,c12cc3f50c0ef798b218739fc3de06237ea2c5d5,eejin Ahn <aheejin@gmail.com>, 2021-02-13 21:23:47 +0900, , update binaryen.js api delegate 3565 update binaryen.js api match new try structure support delegate added 3561. try take name null like block also additional delegatetarget field argument used try delegate otherwise null also add several variant maketry method wasm builder making try delegate try catch _all,,
367,ac3188facecb78ebaea1eec6cd6e4723a1a161fe,eejin Ahn <aheejin@gmail.com>, 2021-02-13 20:31:03 +0900, , rename delegatetarget exceptiontarget nfc 3562 far try label targetted delegate turn rethrow also follow rule delegate need target try label renames variable like method like  considered trytarget branch block counterpart name use blocktarget branchtarget chose exceptiontarget patch fix rethrow target follow preparation,,
368,df9389509c703ec0583d16a70306dbdd07426c56,lon Zakai <azakai@google.com>, 2021-02-12 23:12:51 +0000, , print feature section comment 3563,,
369,60eb7c8c4c76edb89e2d402769c6a3b8450ff7e8,lon Zakai <azakai@google.com>, 2021-02-12 22:47:53 +0000, , allow specifying additional feature past feature section 3564 wasm say simd let user specify simd well feature optimizer perhaps something ,,
370,f826df6e053e0541e16cc19ded8083cf8de7c59d,eejin Ahn <aheejin@gmail.com>, 2021-02-12 14:41:57 +0900,146, support reading writing delegate 3561 add support reading writing new delegate instruction folded wast format stack format poppy format binary format binaryen formal spec written yet please refer webassembly exception handling 137 webassembly exception handling 146 informal semantics current version spec delegate basically rethrow branch like immediate argument bypass catch delegate delegate represented new expression rather option within try class like catch catch_all one special thing delegate even though written _within_ try folded wat format like wasm try  ...  delegate   unfolded wat format binary format delegate serf scope end instruction separate end wasm try ... delegate  delegate semantically target outer catch delegate write delegate target try label give label block like scoping expression far given try label used inner block wrapping block case branch target try case delegate syntactically target try target block loop validation failure discussion 3497 give try label label targeted delegate unfortunately make parsing writing try expression somewhat complicated also one special case immediate argument try depth control flow stack mean delegate delegate caller handle case add fake label writing back wast format writes immediate value unlike case write label use represent try label delegate target many case try delegate label need treated way block branch label hashing comparing routine automatically assume label branch thought adding new kind defines use think also involve duplication existing routine class moment chooses use existing use try delegate label make necessary amount change branch utils revisit decision later necessary many change existing test case try automatically assigned label removed pas way block label targeted delegate support reading writing tested optimization pass yet  original unfolded wat file generate test try delegate.wasm wasm module event func try try delegate catch end func try try catch i32.const drop try delegate end catch end   ,,
371,8369064c09964ab77eae2af6f0d8cce58e412e11,am Clegg <sbc@chromium.org>, 2021-02-11 16:53:51 -0800, , finalize strip segment contain em_asm em_js data 3557 find data segment whose entire content em_js em_asm string strip binary see http github.com emscripten core emscripten pull 13443,,
372,e283300dbb8bf573584a811bdc973b3731b67486,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-10 17:31:14 -0800, , stacksignature subtypes lubs 3543 add utility calculating least upper bound two stacksignatures taking account polymorphic unreachable behavior important finalization validation poppy block block allowed directly produce fewer value branch target carry difference made polymorphism due unreachable instruction block,,
373,18e080756de0702e1816c406a4edc556dc544fdc,lon Zakai <azakai@google.com>, 2021-02-10 20:03:26 +0000, , comment validation wasm dis 3556,,
374,ed9d1a190383cd4705cf5725dcaef59b122c9770,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-09 16:28:46 -0800, , use correct table name 3560 hardcoding table name use call_indirects dyncall thunk hardcoded name different default name imported table call_indirects referred nonexistent table dynamic linking enabled instead name table creating call_indirects dyncall thunk,,
375,e130b58895b64a0fe3a088e25f4043a12f3634ca,am Clegg <sbc@chromium.org>, 2021-02-09 15:31:25 -0800, , simplify asmconst handling nfc 3558 support multiple signature per code string removed 2422 emscripten need know address body function see http github.com emscripten core emscripten pull 13452,,
376,2b63a468d84bd5b9d57f450ac5a8f4bf356ddee9,lon Zakai <azakai@google.com>, 2021-02-09 22:53:11 +0000, , support rtt constant builder 3550 allows reducer operate rtts could help thing,,
377,9752196fd1357fbc129d1e4f53e8eb22cd6219f9,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-09 14:41:49 -0800, , poppify pas 3541 add poppify poppify pas converting normal binaryen poppy like existing construction stacky poppify depends drive emitting instruction correct stack machine order instruction emitted poppify replaces child pop collect list end scope poppify creates block containing collected instruction scope injects block enclosing scope tuple globals instruction dealing tuples also expanded remove tuples program validator currently fails validate many valid poppy pattern produced test fixing left follow work keep focused poppify pas test simply skip validation,,
378,3da8b08ecd57f5662bebc69ea73bf59e1928341e,bbas Mashayekh <martianboy2005@gmail.com>, 2021-02-10 01:17:28 +0330, , reference type remove single table restriction 3517 add support module multiple table add field table name callindirect update apis accordingly,,
379,a12a8250da24aa5b5787bf89562b243fdc514302,lon Zakai <azakai@google.com>, 2021-02-09 15:17:56 +0000, , support cast function type 3554 completely missed spec allows ref.cast etc function type data function type rtt unlike data still cast function reference canonical rtt signature type like simplified case world without hierarchy rtts turn validation rule rtt.canon function type ref.cast one unintentionally already support aside actual casting add addition mostly trivial except need module base class function name actual function refactors thing allow,,
380,74ccdb87b3390e003b658b847526dad8722083f8,am Clegg <sbc@chromium.org>, 2021-02-08 15:27:18 -0800, , finalize refactor string extraction code nfc 3555 pure refactor preparation change enable stripping least zeroing segment contain em_js em_asm string,,
381,7bff209e0da1ea335cccfa9874fe830c49480eba,am Clegg <sbc@chromium.org>, 2021-02-08 11:48:35 -0800, , fix removal em_js function 3552 algorithm trying remove __em_js function using name function rather export name failing remove function unless internal function name happened match turn true build debug name,,
382,d4e31719c6609e121d5bb6758e1b9d3335113755,lon Zakai <azakai@google.com>, 2021-02-08 19:36:36 +0000, , avoid replacing non defaultable type fuzzer 3549 arbitrarily replace non defaultable type may lead needing temp local say tuple,,
383,3be78fdd2f8e673457d93f3c7bfb341f8074d298,bbas Mashayekh <martianboy2005@gmail.com>, 2021-02-08 21:30:31 +0330,3545, add feature option wasm dis 3548 allow .frombinary test executed desired featurs difference test .from wast test fix 3545,,
384,51c8f2469f8fd05197b7694c65041b1567f2c6b5,lon Zakai <azakai@google.com>, 2021-02-06 00:46:37 +0000, , use unordered map name possible 3546 unordered map hash pointer ordered one compare string find insert tree confirm speedup time though others see consistent improvement perf stat result like number instruction cycle result little noise seems logical could faster,,
385,9868c3636bf1309c23213dc8ef6de4c036d6c40b,lon Zakai <azakai@google.com>, 2021-02-04 21:09:24 +0000, , add test memory.size wasm2js 3547 support along reference test,,
386,56acee228d93d8ca36e40e4eb659e91d4a058f6f,lon Zakai <azakai@google.com>, 2021-02-04 02:33:13 +0000, , crash unreachable input struct.get set 3542 reference unreachable find heap type print text format instead crashing emitting something invalid print block instead block contains child emitted instruction unreachable anyhow noticeable effect also parallel binary format skip unreachable code,,
387,9ed635c3b4195e2842b155369ad09c07f1099793,lon Zakai <azakai@google.com>, 2021-02-03 16:16:07 +0000, , small fuzz fix 3540 fix label fixup code use delegate field make support bron etc add isrtt place rtts supported implement makeconst arbitrary rtts enough get fuzzer working iteration time,,
388,3f1287c4c30ff273972c7580d99ae1ca729ea108,lon Zakai <azakai@google.com>, 2021-02-02 19:18:58 +0000,3536, feedback 3536 3539,,
389,cf51ca4f3b727e7efcfc043bb8120ed2c766285d,eejin Ahn <aheejin@gmail.com>, 2021-02-03 03:09:18 +0900, , support stack new try catch _all 3538 add missing stack printing support new form try catch catch_all also printmedium printing instruction consistently,,
390,abbe4f7bf4512f52e4fc0ed969a91d7337540ac4,lon Zakai <azakai@google.com>, 2021-02-02 17:42:16 +0000, , dataref typing fix 3536 dataref noted isref also handle lub caused validation error two fix possible add testcase optimizer view without whitespace lub change lot,,
391,fa96b9725a95cae631654abd4dabe660284218ec,bbas Mashayekh <martianboy2005@gmail.com>, 2021-02-02 20:35:42 +0330, , allow printing expression based feature set 3537 discussed 3517 need way maintain ability print expression backward compatible way add featureset default featureset case feature set available used callindirect decide whether print table name arg,,
392,b5c287567ebcb3cbb1b1acb7f9e717f8b834ea83,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-02-01 16:53:01 -0800, , prototype 3535 proposed http github.com webassembly simd pull 395. note instruction proposal implemented llvm need implement binaryen right either introduces new expression class new instruction uniquely take immediate argument identifying portion input vector widen,,
393,a4837c095275b465005841616ff10bcd0b0d7996,lon Zakai <azakai@google.com>, 2021-02-02 00:47:46 +0000, , isgcdata isdata 3534 added isgcdata dataref clear parallel function data make consistent renaming isgcdata isdata using throughout also fix bug old isgcdata checked input array struct ignored data heap type possible test however due bug deferred,,
394,eafb0a4ef25cd82317ac8fa84a9d7e58f9382fcc,lon Zakai <azakai@google.com>, 2021-02-01 22:44:40 +0000,45, br_on_null 3528 partial support br_on_null also extra optional value spec implementing cumbersome binaryen ongoing spec discussion see http github.com webassembly function reference issue support simple case without default value also fix prefixed opcodes lebs refas noticed change made noticeable whether value int8 lebs,,
395,02f8c56aad18a2715904d1d5e0951b25bf7749c3,lon Zakai <azakai@google.com>, 2021-02-01 21:06:47 +0000, , emit i31ref fuzzer 3531 type non nullable need disable fully support right emit local immediately get validation error change fuzzer run least thousand iteration error,,
396,a8a2693fa6382e7e07feb6807d8681ecaf740cc3,eejin Ahn <aheejin@gmail.com>, 2021-02-02 02:04:30 +0900, , remove unnecessary breakstack push try nfc 3533 break stack maintained compute branch depth seems need push pop else block every single catch catch_all block would sufficient one stack entry whole try catch else,,
397,89b811699b2db0c0e2ad744a1240f6283f8eed86,eejin Ahn <aheejin@gmail.com>, 2021-01-29 12:01:02 +0900, , error used flatten 3526 used error flatten used flatten make block type none setting return value local getting later br_on_exn definition pop value value stack end block flattened br_on_exn need restriction,,
398,bbf40d06a162be8f88a60d1fc4edc3f0015c6c91,lon Zakai <azakai@google.com>, 2021-01-29 02:47:52 +0000, , ref.as_non_null 3527 different refas variant part typed function proposal part prototype note useful yet support non nullable type,,
399,6299471584ce74d365526e33ed0a662bd2ee3490,lon Zakai <azakai@google.com>, 2021-01-28 22:09:31 +0000, , add br_on_func data i31 3525 expands existing broncast bron also handle func data i31 variant elegant refis refas broncast extra rtt field think still best option already optional field break value condition making rtt optional odd allows share behavior br_on_ aside cast check identical returning value branch taken etc,,
400,53c471a445ef26eac7befc3f3a5e0a53870df8cb,lon Zakai <azakai@google.com>, 2021-01-28 00:18:43 +0000, , update br_on_cast text format also longer heap type 3523 result handle br_on_cast unreachable rtt binary format solves problem ignoring unreachable code make text format nice benefit remove casttype extra field,,
401,a5aa66c52e0b92597a3b90cf34ccc3b7dee775d0,lon Zakai <azakai@google.com>, 2021-01-27 23:31:09 +0000,3523, remove test suite assumption minify_check roundtripping perfectly 3524 minify_check check print read minified wast test also however assumed round trip thing perfectly never true chance unnoticed 3523 specific issue happening create block without name write text read read give block name rely optimization remove later possible avoids optimizing parser extra name look like bug minify_check,,
402,1b950a1c4eb7b1a0a1d71c7e68e223fe57fdff66,hilip Pfaffe <philip.pfaffe@gmail.com>, 2021-01-27 20:45:46 +0100, , memcpy data instead bytewise copy 3521 wasm finalize currently make byte wise copy section data user data section section large extraordinarily expensive memcpy instead see speedup 1.6 large wasm binary dwarf data,,
403,5331e9d18b9359aa0e9d6e0df455883f62e46ea0,lon Zakai <azakai@google.com>, 2021-01-27 19:40:08 +0000, , simplfy 3522 used return simple name like redundant proper printing logic turn trivial helper print name class print capital useful logging like metric think clearer earlier since actually counting class old emitting text format like name confusing emitted binary valid also replace usage method proper printing,,
404,2bdc4841b680ee44e132bbb07f5167eaa7226f99,lon Zakai <azakai@google.com>, 2021-01-27 17:46:31 +0000, , ref.as_ 3520 similar instead returning i32 answer trap invalid value return otherwise could theory single refdothing opcodes return value different would little odd name would clear,,
405,f82e94363a231bf570fbe3d7dc49259c8668206f,lon Zakai <azakai@google.com>, 2021-01-26 23:36:56 +0000, , ref.is_func data i31 3519,,
406,5e57a13614c56f959faab675d6bcabbd629ec562,lon Zakai <azakai@google.com>, 2021-01-26 21:09:31 +0000, , refisnull refis 3516 internal refactoring prepares ref.is_func data i31 renaming node adding field field must always null mean ref.is_null adjusts api match new shape high level api unchanged,,
407,89164cdf1403a21a3d79ada0f0cf529d526c9de6,lon Zakai <azakai@google.com>, 2021-01-26 14:49:45 +0000,13288, warn running pas compatible dwarf 3506 previously adddefault method would avoid adding opt pass know incompatible dwarf however handle case pass added way example running asyncify emcc run flatten pas compatible dwarf let warn annotating pass use annotation either run pas matching previous behavior show warning necessary fix emscripten core emscripten 13288 concretely running asyncify dwarf show warning user,,
408,9b6817c7e1b6436217b1c2acfd02c8dec74317bb,am Clegg <sbc@chromium.org>, 2021-01-25 15:33:37 -0800,3484, revert cmake version requirement bump 3515 originally landed part 3484 broke emsdk build binaryen bionic stuck 3.10.2 http bionic cmake use emscripten defined effect normal desktop build,,
409,c444fa579acc3b4a60f20cacb539ae60c44e5e95,am Clegg <sbc@chromium.org>, 2021-01-25 14:36:38 -0800, , consistent lowercase keyword method cmakelists.txt 3514 followup original conversion done 2495,,
410,c74acc0baece1296ad58a0ff44119fb36d98d2c6,lon Zakai <azakai@google.com>, 2021-01-25 18:12:37 +0000, , debug info handling new try catch 3496 multiple catch try possible catch change extra delimiter storage store either else unchanged arbitrary list thing use catch,,
411,27a5a7101d20ce5fc51648e775587ab3d640114e,eejin Ahn <aheejin@gmail.com>, 2021-01-23 04:27:20 +0900, , reorder i31ref dataref 3509 binary spec http docs.google.com document edit list dataref i31ref dataref also come i31ref binary code value increasing order reorder two wasm type.h place although place order irrelevant also add api dataref,,
412,69952a98c7c86286518d559958e35cd3639bd3a0,lon Zakai <azakai@google.com>, 2021-01-22 19:01:25 +0000, , document install lit test requirement skip 3510,,
413,5bcee680e8781d9ee3f78df9466b912929124c04,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-22 13:31:49 -0500,3503, partially split function optimize 3508 filecheck test case much readable output assertion close corresponding input line 3503 introduced script updating filecheck assertion know place input output line together function boundary smaller function produce readable test optimize large function include many test case break function smaller function make test readable change first quarter file leaving improvement future work,,
414,d5fc674859ccd035c03b1085901dceb1c58cf911,lon Zakai <azakai@google.com>, 2021-01-22 15:53:53 +0000, , update binary format prototype 3507 field removed see http docs.google.com document edit,,
415,6d62e3c4be466888239a89c2e98713f60074aaea,eejin Ahn <aheejin@gmail.com>, 2021-01-22 18:07:46 +0900, , remove exnref br_on_exn 3505 remove exnref type br_on_exn instruction,,
416,69ff866fc7e54f25d8d8598581aa3553cb87603b,eejin Ahn <aheejin@gmail.com>, 2021-01-22 11:25:23 +0900, , remove translate fuzz_all features.txt 3504 file updated since 3401,,
417,7a83bc744fff43349e6612263f11bce1fe8dbf34,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-21 19:34:57 -0500, , introduce script updating lit test 3503 demonstrate capability porting test optimize instruction pas use lit filecheck,,
418,3f4d3b3eff5d8112a9da3674a5f5eea696ca3c7d,lon Zakai <azakai@google.com>, 2021-01-21 22:09:47 +0000, , add dataref type 3500 100 everything enough get test passing includes full binary text format support getting switch compile without error addition,,
419,527e9f9ed76cee0baaa67e89569c282a3782be08,eejin Ahn <aheejin@gmail.com>, 2021-01-21 21:45:13 +0900, , update interpreter new spec 3498 update interpreter instruction modulo delegate match new spec exnref type threw literal exnref type contained exnref anymore add content wasmexception used class hierarchy exnref removed followup allows nonzero depth rethrow testing disallowed safety measure given pass modifies field think risk low,,
420,b77d0af3fc369dd78f51d61d0499571a74366762,eejin Ahn <aheejin@gmail.com>, 2021-01-21 21:10:43 +0900, , cfg traversal new spec 3494 update cfg traversal match new spec previously single catch block caught exception throwing instruction needed link innermost catch multiple catch per try requiring throwing instrutions edge innermost catch furthermore catch catch_all try throwing instruction unwind outer catch find catch_all unwindexprstack necessary track make correct link throwing instruction unwind destination  used remember catch currently processed processing make link catch last block continuation block try catch rse test case updated use cfg traversal test mainly test possible cfg edge local.set set value local local.set redundant thus removed,,
421,85cfc36f0fccdf700045caa15218cef6cbc3e267,eejin Ahn <aheejin@gmail.com>, 2021-01-20 09:36:55 +0900, , simplify set get vector binaryen.js 3495 existing getallnested function function also add setallnested work direction within function,,
422,a4d1b53ff3374a5d7843b0a879a7908334d5bb46,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-19 19:32:10 -0500, , prototype additional f64x2 conversion 3501 proposed http github.com webassembly simd pull 383 opcodes coordinated wip prototype,,
423,0f212dfc69306688afa5057e3179aed5af3edc85,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-19 19:14:37 -0500, , replace master main script doc 3502 updated default branch name master main update script configuration doc reflect change,,
424,2488b523216600b4de2fe1e33ad695b337f8b9f8,lon Zakai <azakai@google.com>, 2021-01-15 21:48:29 +0000, , wasm reduce fix setting feature flag loading 3493 mistakenly set flag meant feature section present proper feature set leading error writing,,
425,c57dd1ff777b04650e4603a043644a2519019665,lon Zakai <azakai@google.com>, 2021-01-15 19:42:11 +0000,3393, wasm reduce default make customizable 3492 back downside 2813 seems unavoidable without testcases without feature section use feature work least make easy customize flag send command see also 3393 comment,,
426,e2dc4c338476aedff8d95c7549ab0f39d1aaf6d1,lon Zakai <azakai@google.com>, 2021-01-15 18:13:05 +0000, , read lower let instruction 3485 support non nullability therefore lower let simpler thing let ...    block ...   let handle wasm binary let optimize current downside losing non nullability still trivial sadly indexing let somewhat odd binary let modifies index thing declared mean index mean different thing different time trickier add local needed tuples stacky code make track absolute local index let started allocate local binary testcase created wat using wasp module type vector array field mut f64 func main local i32 local i32 drop local.get index appearing binary first let vector f64.const 3.14159 i32.const rtt.canon vector  let local ref vector drop local.get drop local.get another one nested vector f64.const 1234 i32.const rtt.canon vector  let local ref vector drop local.get drop local.get drop local.get   another one later vector f64.const 2.1828 i32.const rtt.canon vector  let local ref vector drop local.get drop local.get  drop local.get  ,,
427,d808e900b8b8a0bc99d77fd38e94426df73c3afa,lon Zakai <azakai@google.com>, 2021-01-15 16:03:32 +0000, , reducer improve warning script ignore input 3490 risk warning check giving reducer script ignores input run command input run garbage file check result different however script doe immediately fail input input crash testcase doe work result garbage input may error avoid also check happens trivial valid wasm input show warning result original input garbage wasm trivial wasm case likely script really ignoring input,,
428,beccdf70258cd99ea25f10af13103e14dc243ffa,eejin Ahn <aheejin@gmail.com>, 2021-01-15 18:48:00 +0900, , basic instrucion support new spec 3487 update try catch catch_all rethrow instruction match new spec delegate included try contains single catchbody expression vector catch body event update existing routine optimization test modulo interpreter cfg traversal interpreter updated yet spec test temporarily disabled check.py also cfg traversal yet updated several test rse_all features.wast cfg traversal temporarily commented also added test existing test function test pass previous spec catch catching exception assumed anything try body throw caught catch assume catch_all newly added test test case catch_all case catch separately,,
429,f18c18e01d03d6d293fe3d701408855bbcea58bd,erek Schuff <dschuff@chromium.org>, 2021-01-14 15:57:52 -0800, , enable lto linux clang build 3491 also adjust check clang also match appleclang,,
430,d94982319a6904f81a7f615c6fc9ea4f88f3c820,erek Schuff <dschuff@chromium.org>, 2021-01-14 13:43:40 -0800, , add support building thinlto 3484 support clang win mac linux lld linux window tested yet mac theory work,,
431,01e0c98eb75ed389441ada253bcf02dbc8f1f6ef,lon Zakai <azakai@google.com>, 2021-01-14 16:43:56 +0000, , avoid usedelements around code modifys value 3488 followup 3486 wonder little clear way avoids confusion usedelements changed using general think best use usedelements internal method call size otherwise,,
432,fcbefa951e3e514f6b7555664b89fb786850f6bc,lon Zakai <azakai@google.com>, 2021-01-14 00:13:19 +0000,175, rtt type defaultable 3489 see webassembly 175,,
433,f882781c4bebba1625a745c2b19dc7f8e63aa531,eejin Ahn <aheejin@gmail.com>, 2021-01-14 01:52:03 +0900, , fix index error arenavectorbase 3486 resize set usedelements argument accessing data usedelements outside allocated memory depending internal state i.e. value hard come test case apparently failure condition depends vector internal state,,
434,dc7184afcbdcc72d0a6d66e2b36fc5857050dd87,lon Zakai <azakai@google.com>, 2021-01-12 22:50:54 +0000, , fix cast non data 3483 code previously assumed could always call getgcdata assumes input array struct could also anyref etc contains something data,,
435,46f0229bfd3c145873eca4d7db5e14f657ad729b,eejin Ahn <aheejin@gmail.com>, 2021-01-12 09:46:58 +0900,2266, remove extra 3480 test seems added 2266 test custom unreachable generation given frombinary file contain single unreachable whole function think test serf lot purpose also custom unreachable generation logic 2266 largely replaced 3110,,
436,e8e97f3dec5098bbadcfa0814b3a4f4081474b75,lon Zakai <azakai@google.com>, 2021-01-11 21:14:49 +0000, , add type isdefaultable use validation 3456,,
437,eadb53c442209962f98dde22f3b769c691398cad,lon Zakai <azakai@google.com>, 2021-01-11 21:11:03 +0000, , heaptype instead type 3475 handle nullable non nullable i31s heap type look isbasic case one two may fix issue release builder http github.com webassembly binaryen run 1669944081 true issue doe reproduce locally worry something else ...,,
438,fa3a74351be3c9903a95cff45dc8f903e1017461,lon Zakai <azakai@google.com>, 2021-01-11 21:10:28 +0000, , fix minor binary format issue ordering immediates 3472 noticed comparing wasp thing almost identical also least http issue detail 11300 test update due instruction two operand one unreachable new order put non unreachable first removed round tripping binary format like remove unreachable code,,
439,0a1972b56a5bae9874808673041d3a48d3c86153,heng Shao <cheng.shao@tweag.io>, 2021-01-11 21:38:22 +0100,3481, fix 3481 3482,,
440,d512d48196abbc997f1d2e30407accc66e375d19,am Clegg <sbc@chromium.org>, 2021-01-11 10:09:32 -0800, , finalize remove initializers metadata output 3479 see http github.com emscripten core emscripten pull 13208,,
441,ed2095427e6b6962730fa323eba5f9cff51bdac7,lon Zakai <azakai@google.com>, 2021-01-09 20:40:32 +0000, , version_99 3478,,
442,d7e9150e38f14c7ca083fe48bf1f49ab77cfc794,lon Zakai <azakai@google.com>, 2021-01-09 00:10:11 +0000,3459, add verbose logging assert happens release builder inexplicable reason 3477 see 3459,,
443,b266279cd393378bceab52e06b7b8bd0a5d7a80b,lon Zakai <azakai@google.com>, 2021-01-08 16:54:24 +0000, , validate struct.set mutable field 3473 required test fix ensure invalid wasts writes immutable field,,
444,b7e4ec5a39b3f0d5a416b50bad2477c60969437f,lon Zakai <azakai@google.com>, 2021-01-08 16:54:07 +0000, , fix opcode i31 3471,,
445,6a35e33f126d80e7583821e584ae9d101ba0ccb5,lon Zakai <azakai@google.com>, 2021-01-07 20:01:06 +0000, , fix parsing printing ref type using i31 3469 let parse ref null i31 ref i31 i31ref also fix parsing i31ref making nullable need support non nullability fix internal handling i31 i31ref meant handled non nullable type fixing bug printing print ref null i31 properly found simplification remove typename,,
446,5693bc850110f2fd6c687f2b8753ec04f15d1f9e,eejin Ahn <aheejin@gmail.com>, 2021-01-07 16:54:50 +0900, , remove api kitchen sink.txt.txt 3465 seems file used contain result tracing tracing gone file updated used anywhere,,
447,3d414652d36aeb27896cc6666ef15db39f245786,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-06 14:36:27 -0500, , prototype prefetch instruction 3467 proposed http github.com webassembly simd pull 352 using opcodes used llvm implementation,,
448,b79661ee03fc74b3f860bf04e6f1019f7b11c722,homas Lively <7121787+tlively@users.noreply.github.com>, 2021-01-05 19:27:53 -0500, , prototype simd extending pairwise add instruction 3466 proposed http github.com webassembly simd pull 380 using opcodes used llvm since opcodes overlap opcodes i64x2.all_true i64x2.any_true long since removed simd proposal also remove instruction,,
449,3e5ce644e0336bc7ce82a5f6df6b1f671097556d,aniel Wirtz <dcode@dcode.io>, 2021-01-05 21:48:14 +0100, , improve api module inspection feature 3464 return null element doe exist add corrects return type add related description api function,,
450,3b52424c5f064d407b4b24aea1b6509a2e5f1f5c,am Clegg <sbc@chromium.org>, 2020-12-30 15:06:40 -0800, , looking node binary search node nodejs 3164 node name used upstream project nodejs legacy name used older debian ubunru system searching nodejs first meant finding local old nodejs package even recent node path,,
451,dc4288cea1e403f011ec4ad7539df0f1b4dfdf47,am Clegg <sbc@chromium.org>, 2020-12-18 10:20:59 -0800, , memorypacking preserve segment name 3458 also avoid packing builtin llvm segment name segment __llvm_covfun use llvm cov preserved final output,,
452,97fcd64de4b2b438a638feac2ad99b1d910ed431,lon Zakai <azakai@google.com>, 2020-12-18 07:20:49 -0800,3451, followup 3451 feedback 3457 validation code simplified adding casttype missing test type flow br_on_cast,,
453,ac808519a6980474721b88b3d0fd9461cb07abb1,am Clegg <sbc@chromium.org>, 2020-12-18 05:11:14 -0800, , finalize ever single initializer function nfc 3452,,
454,ae16f5cb995e3756ccb2093749bc5595fd86a2df,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-17 22:35:16 -0500, , module splitting fix crash function exported twice 3455 modulesplitter creates thunk secondary function need exported main module previously secondary function exported twice code would try create two thunk rather making one thunk exporting twice caused fatal error second thunk name first thunk therefore could added module fix issue creating one thunk per function,,
455,cad723a3827913f53ecfa7189b011be389d28ae7,lon Zakai <azakai@google.com>, 2020-12-17 16:47:38 -0800, , add br_on_cast 3451 tricky part pointed aheejin previous attempt need know type value send branch taken normally calculate rtt parameter type casting rtt know type rtt unreachable problem fix store cast type broncast instruction includes test br_on_cast succeeds sends cast value one fails pass uncast value also one unreachable rtt includes fix precompute noticed new test break taken ref value precompute reason precompute ref general pointer possibly shared data,,
456,46789afc681de080ec9ba68ffe27d9f9871d8bb3,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-17 18:59:05 -0500, , wasm split add initial table option 3454 add option wasm split allow user specify initial table size instrumenting splitting use case short term used emscripten split_module dynamic linking workflow ensure expected table size baked work instrumented primary split module longer term may replaced elegant mechanism making work case,,
457,2257f857069faa56335d2e24d7d6853c9501fcb7,lon Zakai <azakai@google.com>, 2020-12-17 12:39:21 -0800, , refactor printing code printing expression always work 3450 avoids needing add include wasm printing file already achieve add std ostream hook wasm.h also use possible removing need special wasmprinter object also stop printing full print type line error message default user still get always using env,,
458,a8ded16f56afd880a9a6459fe5ce55a8667d9b3e,am Clegg <sbc@chromium.org>, 2020-12-16 17:38:48 -0800, , add comment followup 3424. nfc 3449,,
459,4423bcce31d9162c8f8e4262deda5e9278e0e55c,lon Zakai <azakai@google.com>, 2020-12-16 17:26:09 -0800, , refactoring branch utility code remove boilerplate 3448 almost nfc may emit slightly different case matter much specifically block result i32 also unreachable unreachable i32.const  finalized type unreachable i32 valid consistently thing place either option would prefer keep type one practice dce remove dead code anyhow leaving difference matter however different without dce may noticeable unoptimized build effect behavior binary,,
460,83114c51d5aedcb540d578790dbf3173d1775d5c,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-16 16:40:15 -0500, , fix wasm split name collision bug 3447 module splitting map constructed internal name corresponding export name code previously take account fact internal name may used different kind entity e.g table memory may internal name resulted secondary module incorrectly using import name entity shared internal name fix problem including externalkind entity key export map,,
461,b50bdf3491dcd8f1c379df6d64bc8fbc10518326,lon Zakai <alonzakai@gmail.com>, 2020-12-15 14:37:52 -0800, , fully implement rtt semantics 3441 add info rtt literal represent chain rtt.canon sub command generated add internal rtt allocation array struct approach taken simply store full chain rtt.sub type led literal efficient simple seems sufficient semantics described mvp doc specifically type matter repeated execution rtt.canon sub input yield equal output fix bunch minor issue regarding enough allow testing optimization execution ref.test cast,,
462,eff70e05b38e4e86ccbae169dbd400711f2fd561,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-15 00:12:42 -0500, , use enums mutability nullability 3443 previously using bools concept using enums make code clearer particular remove many instance nullability true,,
463,b4928af5e70c85d309f7a074ed80bbcd1ee414f9,outer van Oortmerssen <aardappel@gmail.com>, 2020-12-14 14:18:16 -0800, , fixed wasm emscripten finalize asmconstwalker handling bit pointer 3431 also improved lld test script accomodate bit test,,
464,c1ab2b33f63d5e79143e05de4e8e9e0ddd970e77,lon Zakai <azakai@google.com>, 2020-12-14 14:15:36 -0800,12834, stackcheck handle colliding name 3390 add name call ensure collide existing name fix emscripten core emscripten 12834,,
465,814e897b4b177518a835a9ef30dd649312a77c78,lon Zakai <azakai@google.com>, 2020-12-14 13:03:49 -0800, , refactor branchutils avoid boilerplate nfc 3442 make easier add br_on_cast example,,
466,2de4cb54cab3d2251f48ec0f94e180b34bf398f6,lon Zakai <azakai@google.com>, 2020-12-14 09:10:38 -0800, , wasm reduce improve support reducing text file 3437 passing detect feature work feature section,,
467,dd33ae0512aa97f537d40e61631d268c8a8fd17e,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-11 19:06:34 -0500, , prototype simd instruction implemented llvm 3440 i64x2.eq http github.com webassembly simd pull 381 i64x2 widens http github.com webassembly simd pull 290 i64x2.bitmask http github.com webassembly simd pull 368 signselect ops http github.com webassembly simd pull 124,,
468,290147d8d43a7448d68939ec711b524ba4fb3fbd,lon Zakai <azakai@google.com>, 2020-12-11 08:32:02 -0800, , fix array optimization issue 3438 precompute still tried precompute reference check topmost place also truncated i16 value extend properly also issue structs new test replaces old one moving run opts would noticed earlier add array operation including sign extends,,
469,e16cf5818de5a6e37ffcbce0bcde320290d9f9f1,lon Zakai <azakai@google.com>, 2020-12-11 08:27:43 -0800, , add ref.test ref.cast 3439 add enough read write test leaf interpreter support later,,
470,e1978e0274de74aa9ce5c6bcfa71e03ddadeb685,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-10 16:42:21 -0800, , typebuilder 3418 introduce typebuilder utility constructing heap type term heap type may yet defined internally work creating heaptypes backed mutable heaptypeinfos owned typebuilder let typebuilder create temporary type refer typebuilder managed heaptypes temporary type turn used initialize heaptypes refer since typebuilder managed heaptypes valid lifetime typebuilder step convert globally interned canonical heaptypes allows heaptypes built term yet undefined heaptypes currently error presence recursive type supporting recursive type require work canonicalize finite acyclic representation currently attempt compare print otherwise manipulate recursive type would infinitely recurse,,
471,c93da3de39a4592abc6cddbed30b5c7074069a24,lon Zakai <azakai@google.com>, 2020-12-10 15:25:23 -0800, , add array operation 3436 array.new get set len pretty straightforward structs infrastructure also fix validation unnecessary heaptype param text binary format structs well array fix printing packed type type name emitted i32 broke emitted name array i32 new testing also fix bug field operator wrong packed type easy notice new testing,,
472,57a9e77add02dc1d874fdbfee2c61cae8c0eefa1,am Clegg <sbc@chromium.org>, 2020-12-09 20:54:18 -0800, , read write data segment name name section 3435,,
473,bdc55d3781e55f7d51d2e21751e07f9ec6161c27,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-09 14:28:48 -0800, , small rtt cleanup 3434,,
474,64d2aef103ce19f280cff34e5a60f5035cacaa29,am Clegg <sbc@chromium.org>, 2020-12-09 13:50:41 -0800, , improve lit support 3426 technique used llvm lit enable running tree test tree build run something like binaryen bin binaryen lit test lit,,
475,823222ff566b38495327bc28b4726871b0a86b26,lon Zakai <azakai@google.com>, 2020-12-09 11:17:28 -0800, , add struct.new start test interesting execution 3433 struct.new read write support start interesting thing add test creating struct seeing reference behave like reference write value refers refers thing reading value see change well test run uncovered minor issue precompute try precompute reference type replace reference value note btw test show optimizer properly running coalescelocals reference type merging two local,,
476,63a042e3a94df7ba3a5c9dde03990a9813fdc366,lon Zakai <azakai@google.com>, 2020-12-08 18:55:20 -0800, , add basic rtt support 3432 add rtt.canon rtt.sub together rtt type support necessary together let test roundtripping instruction type also fix missing traversal globals example doc requires rtts globals doe yet add full interpreter support thing disables initial content fuzzer avoid fuzzer breaking renames binary exnref removed spec overlap binary rtt,,
477,2a0059dec2fe01dcf1358e0120c32aadd2d765b6,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-07 19:32:48 -0800, , intern heaptypes clean type code 3428 intern heaptypes using pattern utility already used intern type allows heaptypes efficiently compared equality hashed may important large struct type future change also benefit increasing symmetry apis type heaptype make developer experience consistent finally change make typebuilder 3418 much simpler longer introduce typeinfo variant refer heaptypes indirectly,,
478,a84898c11df3d93fb69365fb274a9bb06d60ed47,lon Zakai <azakai@google.com>, 2020-12-07 16:58:43 -0800, , add struct.set 3430 mostly straightforward struct.get renames value field struct.get ref think make sense struct.set reference thing value set onto thing calling former ref seems consistent giving ref value mirror load store example use ptr value ref playing role ptr basically,,
479,72a7881b42ebed6b2ef36e912a8f5937106e5824,lon Zakai <azakai@google.com>, 2020-12-07 15:23:24 -0800, , add struct.get instruction parsing execution 3429 first instruction struct array start actually need support interpreter value added data modeled gcdata field literal literal struct array represented array value type alongside would indicate struct array note data referred using shared_ptr work able really test add struct.new verify reference reference value etc first instruction care type possible struct array add support parsing emitting includes fuzz fix minor thing fuzzer found including bad printing resulttypename necessary place found text format roundtripping fuzzer,,
480,295780928d576613ea47bcc55dafc54619086bc8,exter Chua <dalcde@users.noreply.github.com>, 2020-12-08 06:02:12 +0800, , make num_params configuration option 3411 compiling scipy requires num_params least http github.com iodide project pyodide patch emsdk order compile avoid,,
481,18cf8a7557e34f722704c294f3d95817bac8cfc0,lon Zakai <azakai@google.com>, 2020-12-05 15:49:34 -0800, , support reading writing struct array type 3423 add support text binary format handling allows full test reading writing type also add name field struct field text format support,,
482,51dfeef750acacea8dd1331213aa87ae76423dea,am Clegg <sbc@chromium.org>, 2020-12-04 21:36:01 -0800, , wasm emscripten finalize support pic thread 3427 pic thread offset passive segment constant relative __memory_base trying find passive segment offset based target memory.init instruction need consider possibility well regular constant one llvm side generates call memory.init see http d92620,,
483,b501c243b0f0949438e98336c86e1942725fcbda,am Clegg <sbc@chromium.org>, 2020-12-04 14:37:34 -0800, , remove legacy dynamictop_ptr support safeheap 3425,,
484,ef8c9f6d06b29fe2c7fe63236d709e3278a55041,lon Zakai <azakai@google.com>, 2020-12-04 11:20:58 -0800, , refactor vacuum pas nfc 3421 shorter using childiterator general greater generality noticeable atm allow pas work instruction without testing optimizer doe well,,
485,7f09ac527f59834fd5cca9311cb92ff28aad99d5,am Clegg <sbc@chromium.org>, 2020-12-04 10:43:07 -0800, , apply safeheap wasm start function 3424 relocable code main side module use start function run load data segment place call get_sbkr pointer function sbrk pointer life static data segment,,
486,bd9872ddf850bf177298a5274a15807e6227cd3d,lon Zakai <azakai@google.com>, 2020-12-03 16:40:56 -0800, , type refactor signature collection heap type collection nfc 3420 allow writing type future non signature heap type allow work add operator heaptype used data structure collect drive fix weird hack sending name print,,
487,d6444b5032a64f3abe35bf60eb96e151669d2fa5,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-03 14:58:39 -0800, , nfc rename basicid basictype 3419 name descriptive pave way toward interning heaptypes well analogous basicheaptype,,
488,15356635e34ed8981c993d67ed90e83bc7bfa405,lon Zakai <azakai@google.com>, 2020-12-03 13:27:36 -0800, , type return const heaptypes structs array nfc 3417 starting write line like curr value .getstruct .fields curr index .type scare think may copy going issue type interned heaptypes component ,,
489,00f96c854ed3691b01fa35bba0a1d010d08958bd,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-02 16:10:00 -0800, , fix typo accidental script change 3414,,
490,5236916a649a97c1c32b83fc5ab21df36b79c25c,lon Zakai <azakai@google.com>, 2020-12-02 15:47:16 -0800, , dwarf properly handle llvm new tombstone value 3416 see http d91803 place mark something linker removed existing relevant ignore like ignore,,
491,edb8effe2554b5eb9aaca480b4f11d1ee43332f8,lon Zakai <azakai@google.com>, 2020-12-02 14:42:24 -0800,3362, fix fuzz bug shift 3376 code look sign extend right shift signed example sign extend bit value work shifting bit value sign bit position bit value sign bit shifting way back fill everything bit sign bit tricky thing case handle forgot place check specifically repeated sign extend necessary outer one extra shift annoyingly complex code purpose reviewing see unless messed change ensure look repeated sign extend optimize case extra shift repeated sign extend obviously remove  ancient bug showing hard find certain pattern either fuzzing real world ... fix 3362,,
492,aa53194dc3ce4676e124ee1af65eb8039b1da7b2,lon Zakai <azakai@google.com>, 2020-12-02 14:18:48 -0800, , fix fuzz bug getting shift unreachable 3413,,
493,e5f5d924ddee6d896203b3d1da862c463c01df24,lon Zakai <azakai@google.com>, 2020-12-02 13:26:18 -0800, , type refactoring allow future heap type parsing nfc 3409 defined type wasm really one heap type signature type struct array type refactors binary text parser load defined type array heap type start parse type replaces existing array signature type could support struct array locally parse print text simple type necessary also fix type getfeatures,,
494,16c1e3caff045666c5807b90998857da6ed8da74,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-02 09:07:12 -0800, , wasm split record checksum profile 3412 calculate checksum original uninstrumented module emit part profile data reading profile compare checksum contains checksum module split error module split module originally instrumented also fix bug profile data read char signed byte read profile incorrectly sign extended noticed profile tested contained small valued count,,
495,3b1d58aadd37ce8758447c9685d5c3a7bec9c418,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-12-01 18:41:33 -0800, , module splitting allow splitting non const table offset 3408 extend splitting logic handle splitting module single table segment non const offset situation placeholder function name interpreted offset table base global rather absolute index table since addition allowed segment offset expression secondary module segment must start place first table segment mean primary function must duplicated secondary segment fill gap exported imported necessary,,
496,a5403d47483836d5e2d53c3f3721bd376551624a,lon Zakai <azakai@google.com>, 2020-12-01 17:36:13 -0800, , printing print type name possible 3410 nested type used print e.g param ref func param i32 instead expanding full type inline get long deeply nested type print name running print pas example would something like param ref i32_ _none,,
497,16d44ff96be46e03690fc4853b2b1312e3a543ce,lon Zakai <azakai@google.com>, 2020-12-01 15:12:34 -0800, , fuzzer use liftoff running avoid nondeterminism 3402 running run liftoff avoid tiering causing nondeterminism result want compare tier already comparevms fix others place wanted run,,
498,9aeb8589dc46f15ba21f98872ec352614657cc17,lon Zakai <azakai@google.com>, 2020-12-01 13:57:19 -0800, , fix fuzz bug comparing signed unsigned value 3399,,
499,4a6e723f3813831a9a9bba59714ff2a6dcbaa664,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-25 16:39:25 -0800, , nfc clean sign zero extension code properties.h 3404 use matcher descriptive variable name clarify intent function finding inspecting sign extension pattern,,
500,3c66ad3c7c602416d4cf674b3d7528d9acd6d51f,lon Zakai <azakai@google.com>, 2020-11-25 15:36:04 -0800, , enable call_ref fuzzer fix minor misc fuzz bug 3401 count signature tuple local count nested signature type confirming aheejin right missing inlining using wrong type return unhandled type error fuzzer check ref type well typed function reference similar doe fuzzer creates function option creating constant expression function type doe ref.func handle unreachability call_ref binary reading expression parsing fix place add tiny fuzzer switch fuzzer test metric print fuzz output change lot also fix noprint handling worked binary fix property getliteral use specific function type properly make literal function constructor require prevent future bug turn input type nullable type,,
501,72c035e905b3695f2763fdeb21163003d8595887,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-25 12:24:00 -0800, , wasm type nfc encapsulate type typestore 3403 although one type store right subsequent add new typebuilder class manages universe temporary type rather duplicate logic behind type creation make sense encapsulate logic class typebuilder able reuse,,
502,2aa6aa62c6182317679596f7372dde6ee3665d15,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-24 21:16:30 -0800, , wasm split read use profile 3400 read profile produced wasm split instrumentation guide splitting initial implementation function profile show called kept initial module future user may able tune function run later still split,,
503,78ccc1976bac069ae65b2ec227e8c2c515a02801,lon Zakai <azakai@google.com>, 2020-11-24 12:36:11 -0800, , implement call_ref 3396 includes minimal support various pass also includes actual optimization work directize easy add almost fuzzer support actual makecallref stub far includes parser support parsing typed function reference type,,
504,cecff82aff317c3132f80a764dba163bcd852a78,eejin Ahn <aheejin@gmail.com>, 2020-11-24 09:56:52 -0800, , fix comment invalid options.wast 3398,,
505,38ee7e9c17f97ffe546d8ebd4345750b009d41c3,eejin Ahn <aheejin@gmail.com>, 2020-11-24 09:56:30 -0800, , let pointer globals nfc 3397 simply raw pointer given stored module using unique_ptr,,
506,b2d797f1f9f1192b8f4d2664f76a8d0b9278a0ef,lon Zakai <azakai@google.com>, 2020-11-23 11:14:19 -0800, , add typed function reference feature use type 3388 add new feature start use new type relevant use even without feature enabled know feature wasm loading hope given type subtype work practice print internal type may see typed function reference specific type ref.func example instead generic funcref affect anything else doe support non nullable type everything nullable suggested tlively simpler leaf nullability later work apparently require let something else many pass may need changed allow work need provide type creating reffunc wasm builder.h internal api updated apis breaking change dcodeio must also write read function type properly improves find type also sort dependency emit binary depends emitted need give index sorting end changing test output support printing function type funcref disabled figure make work decide important enough work fuzzer various fix emit valid type thing mostly whitespace also two drive fix call maketrivial fail create specific node try make another node theory could infinitely recurse binary writing change replace call standalone function write type one called binary writer object maintains mapping type index,,
507,68294338a1cc7337e808671e75933b1134d18a90,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-20 10:43:52 -0800, , wasm split initial instrumentation 3389 implement instrumentation pas record timestamp defined function first called timestamps actual time rather snapshot monotonically increasing counter instrumentation export function embedder call dump profile data memory buffer given offset size function return total size profile data embedder know much read buffer much need grow buffer parsing using profile left future work recording hash input file used guard accidentally instrumenting one module trying use resulting profile split different module,,
508,171cba44fe6fdaff63fff79d2c660b02d7a79747,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-19 21:51:55 -0800, , initial wasm split tool 3359 implement initial version wasm split tool split module primary module secondary module instantiated primary module eventually tool able split module also instrument module collect profile able guide later splitting initial version however wasm split neither perform instrumentation consume kind profile data despite shortcoming initial version tool already able perform module splitting according function list manually provided user via command line follow implement stubbed instrumentation profile consumption functionality,,
509,de5e7365957b3eaf0d9aa05eea4ee759efb67ca4,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-19 20:59:14 -0800, , wasm builder construct module element unique_ptrs 3391 function globals event export added module already std unique_ptrs wrapped new std unique_ptr owned module add extra layer indirection accessing element avoided allocating element std unique_ptrs update wasm builder allocate module element via std make_unique rather new future remove raw pointer version module add encourage using std unique_ptrs broadly,,
510,d0bc3811f00fe90762a9bee19bf354f780704ce5,lon Zakai <azakai@google.com>, 2020-11-18 16:54:19 -0800, , effects.h add trap effect unreachable 3387 really model effect unreachable properly always trap implicit trap anything mark branch really enough yes doe branch inside current function also trap noticeable outside fix add trap effect track implicittrap set trap well automatically ignore implicit trap enough check unless one care difference implicit explicit one,,
511,f7547064e38bcc8518d6ebf1a2de0d7a76d6ad15,lon Zakai <azakai@google.com>, 2020-11-18 13:20:20 -0800,3378, dae ref.func class 3380 take reference function dangerous change function type removing dead argument doe would observable different outside type change params ignored others reordered theory could find reference doe escape trivial related 3378 quite,,
512,1e527ec6c1553a47bceb60b6c70011552019b7e6,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-18 11:27:43 -0800, , introduce lit filecheck test 3367 lit filecheck tool used run majority test llvm lit test file contains command run test lit test much flexible precise current hoc testing system filecheck read expected test output comment allows test output written alongside interspersed test input making test readable precise current system add new suite check.py run lit test test lit directory test ported demonstrate feature new test runner change motivated need greater flexibility testing wasm split see 3359,,
513,3b5a67596be228d44471ecf66c934162c7b87882,lon Zakai <azakai@google.com>, 2020-11-18 09:52:08 -0800, , type handle function type fully place 3381 call isfunction check general function type instead funcref place care minor miscellaneous typing fix preparation typed function reference tested fully time change mostly whitespace,,
514,091a50c764362511c4c338cb781ea278611613b0,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-18 09:40:55 -0800, , remove unused pas preparetorun 3386,,
515,e2e2a7decd45f1011cb1ebe703f075d5e09834b9,lon Zakai <azakai@google.com>, 2020-11-18 08:18:07 -0800, , effects.h make internals internal forcing external api safe 3385 user effectanalyzer could call walk visit walk entire input visit node without chlidren unsafe exposed walker visitor api ensure user stuff analyze doe little stuff fact vacuum got wrong avoid move internals internal class external api allows caller call walk visit safe change mostly whitespace adding parent prefix nfc except fixing possible vacuum issue sure could happen practice,,
516,8b559e82156db94dc846830faa76071e58fe7d43,lon Zakai <azakai@google.com>, 2020-11-17 16:30:59 -0800, , reducer error compound type reduce 3383,,
517,8cb7d3b341f4c907da9dfecc1054e5136f22c606,lon Zakai <azakai@google.com>, 2020-11-17 15:57:45 -0800, , effects.h refactor throw handling 3370 new name clearly indicates actually doe affect global state memory globals table etc remove throw handle directly single caller method licm pas simplicity disallow exception pas leaving future work,,
518,5d1642bd600b591145ae96d1916f85888c0f4dbf,lon Zakai <azakai@google.com>, 2020-11-17 15:55:40 -0800, , fuzzer compare reference type 3384 several issue fully handle see 3378 basically comparing result two separate wasm module separate instance really identify identical reference thing compare thing structurally compare type,,
519,165fef7f4751baa561a125f5d7f5e5d5b7698ed1,lon Zakai <azakai@google.com>, 2020-11-17 15:23:05 -0800, , rereloop pas module calling refinalize 3382 happened notice one place call refinalize without module could error module actually needed pas might use based code rare enough never issue guess,,
520,a3d2a4d7854b8c14c7c7d222307b2af0c48b1275,lon Zakai <azakai@google.com>, 2020-11-17 08:31:13 -0800, , cost.h define cost i31new i31get fuzzer emits 3373 cost.h requires cost defined halt runtime fuzzer already emits two define unbreak fuzzer access reference least costly load i31new also allocates cheap generational add much,,
521,8046ebaa848617588f945a007adb2ba8489a6399,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-16 16:57:00 -0800, , add requirement dev.txt 3377 file make simple user bot install python dev dependency necessary run test suite right contains flake8 soon contain lit filecheck well see 3367,,
522,636c56b9bafcc8f000003da098fe81fb454b766d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-16 15:20:12 -0800, , remove deprecated add path command action 3374,,
523,eb4d1bb700b1ac3ef95bb396ea7ea3ef96dc099d,lon Zakai <azakai@google.com>, 2020-11-15 20:47:17 -0800, , cost.h require expression define cost 3363 almost nfc add cost datadrop try reflect costlier call call internals also much actually help perf long term preferred possible,,
524,59a74f9bfc83bd1cf67208bb41ecb3f9bda492e6,lon Zakai <azakai@google.com>, 2020-11-15 14:43:32 -0800, , minor code cleanup nfc 3364 vacuum code deleted handled default anyhow,,
525,6f433967372455aff90a6e0f03a72c403d77fd12,lon Zakai <azakai@google.com>, 2020-11-15 14:42:30 -0800, , type add type sorting signature 3366,,
526,c91c519cbb0a32e39e9a324cae611c5db0b66325,lon Zakai <azakai@google.com>, 2020-11-14 15:27:47 -0800, , identify subtyping funcref typed function reference 3357,,
527,54612e4f28bc1c68606713b1a5483dcde02047b5,lon Zakai <azakai@google.com>, 2020-11-14 15:26:12 -0800, , allow creation literal typed function type 3358 allow creation literal typed function type feedback,,
528,878c90a938a7aa78a48bb82d03cfcfea751ab908,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-14 11:22:31 -0800, , add .gitignore 3361 file emitted cmake set,,
529,5f45ce70c02f1f51aa3558d6933cb271da0c6479,lon Zakai <azakai@google.com>, 2020-11-13 17:46:40 -0800, , parsing store full function signature 3356 need typed function reference support need know full function signature function reach ref.func whose type signature generic funcref,,
530,dd618f11660fc6f89211b864a3bd9dcbd14bb013,lon Zakai <azakai@google.com>, 2020-11-13 17:02:52 -0800, , rename indirect nondirect preparation callref 3355 preparation callref take reference function call need aware anything direct call nondirect meant cover callindirect callref,,
531,75e61204b67e921464af14fd13ff768d88755e8c,eejin Ahn <aheejin@gmail.com>, 2020-11-13 15:54:08 -0800, , rename atomic.notify .atomic.wait 3353 atomic.notify i32.atomic.wait i64.atomic.wait see webassembly thread 149 renames instruction name printing internal data structure name atomicnotify always printed instruction name anyway also doe modify api fix interface function binaryen.js seems binaryen.js interface function follow corresponding instruction name,,
532,cc2b3e4175a6edc53487eec06da13b39eb66716b,outer van Oortmerssen <aardappel@gmail.com>, 2020-11-13 12:24:36 -0800, , wasm64 fix affecting dwarf data 3348 change addrsize cause dw_form_addr written differently depends http d91395,,
533,0497619b7e6bc449f07778576ed53ff8297d66e3,lon Zakai <azakai@google.com>, 2020-11-13 10:52:13 -0800, , fix warning delegation field header,,
534,6af57f53c0ab80891d97f4fed0d41951db0cc7fd,lon Zakai <azakai@google.com>, 2020-11-13 11:54:58 -0800,3349, quick followup 3349 avoid unnecessary allocation 3354,,
535,4989d79fb15dfc01d35be4b595d4246f91a55405,eejin Ahn <aheejin@gmail.com>, 2020-11-13 11:48:01 -0800, , make resemble instruction name 3352 function doe return exact instruction name category name matching instruction case global.get set local.get set seems return instruction name regard make return value similar real instruction name possible case atomic instruction memory.init copy data.drop hard make test function used limited way codebase printing error message printing stack instruction name control flow instruction printing instruction name metric,,
536,0f49b56029f93c1b54736ed2473d23f457d46894,lon Zakai <azakai@google.com>, 2020-11-13 11:14:44 -0800,3332, fix hashing regression 3332 3349 used check load sign matter hashing load doe extend sign matter ignored value turn value could garbage assign binary reader relevant rewrite missed actually really possible since macro field object may one fix always assign field simpler anyhow avoids confusion probably debugging testcase reduced fuzzer 100 guarantee catch read uninitialized memory hurt asan may pretty consistent,,
537,262bd62777fcde6b930d520e61457699dbb9901e,lon Zakai <azakai@google.com>, 2020-11-12 14:35:45 -0800, , remove boilerplate wasm stack.h 3347,,
538,8dcbab155f72a31110d53ad3c60d96d5b6db744c,lon Zakai <azakai@google.com>, 2020-11-12 14:35:30 -0800, , remove boilerplate api 3346 also slightly reorder code binary writer header noticed looking boilerplate,,
539,d239a265b95ee75d610e795861390eb57accea58,ndrei Alexeyev <akari@taisei-project.org>, 2020-11-12 22:59:42 +0200, , build linux correct rpath handling 3331 hardcode lib incorrect many system e.g lib64 common x86_64 distros like opensuse use instead,,
540,c48433eb9c24bf51ae24fbe646fc4719ea88e746,lon Zakai <azakai@google.com>, 2020-11-12 12:39:10 -0800, , update test following conflicting landing 3345,,
541,9f8bbcaa986258815a89af7472f27df98a428e33,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-12 12:26:32 -0800, , module splitting 3317 add capability programatically split module primary secondary module primary module compiled run secondary module instantiated call secondary function i.e function split secondary module primary module rewritten indirect call table initially table slot secondary function contain reference imported placeholder function secondary module instantiated automatically patch table insert reference original function process module splitting involves step create new secondary module export globals event table memory primary module import secondary module move deferred function primary secondary module secondary function exported primary module export place trampoline function make indirect call placeholder function eventually original secondary function allocating new table slot placeholder necessary rewrite direct call primary function secondary function indirect call placeholder function eventually original secondary function allocating new table slot placeholder necessary primary function directly called secondary function export primary function already exported import secondary module replace reference secondary function primary module table segment reference imported placeholder function create new active table segment secondary module replace placeholder function reference table reference corresponding secondary function upon instantiation function used referenced three way webassembly module exported called placed table procedure introduces layer indirection mechanism remove reference secondary function primary module restores original program semantics secondary module instantiated mechanism reference function added future ref.func instruction modified use similar layer indirection code currently written make assumption module split assumes mutable globals allowed could worked around introducing wrapper function globals rewriting secondary code access mutable globals shipped browser hopefully extra complexity necessary assumes table segment offset constant simplifies generation segment actively patch secondary function without overwriting table slot assumption could relaxed secondary segment write primary function slot well allowing addition segment offset synthesizing start function modify table instead using segment assumes function appears table necessarily true general even llvm output function deduplication relaxing assumption would require slightly complex code good candidate follow future binaryen work feature includes providing command line tool exposing functionality well api api fuzzer support also want provide simple instrumentation pas finding dead late executing function would good candidate splitting would also good integrate instrumentation future function outlining work dead exceptional basic block could split separate module,,
542,7ab4e6e23d0d3dc34ff5a9b07edb65f09b1f5783,lon Zakai <azakai@google.com>, 2020-11-12 11:35:16 -0800, , fuzzer compare liftoff turbofan 3342 previously picked one two compiler top level actually compare directly entire run used one two instead add separate vms keep existing well test tiering code also seems nicer way,,
543,8d29ce697d069906c16d8366a8ec65df0c4c2257,lon Zakai <azakai@google.com>, 2020-11-12 11:34:46 -0800, , remove boilerplate walking logic 3344 also fix order walking child wrong macro nice fixing would fix anything else using macro automatically however far nothing else affected,,
544,20422e2e6d64d79dffd110781f680f98bdb16405,lon Zakai <azakai@google.com>, 2020-11-12 11:33:52 -0800, , fuzzer add chance pick particularly important initial content 3343 seeing work day good fuzzer focus also move code around main test wast useful put feature module maximize chance getting used module single use atomics atomics disabled current run use module skip initial content entirely moving feature module reduces risk pick randomly module atm small module chance big one still seems worth,,
545,db64c53579dd925fc48260d4979d1bb9c1dfed9f,ax Graey <maxgraey@gmail.com>, 2020-11-12 20:18:44 +0200,3303, refactorings addition 3338 3336 see discussion 3303,,
546,1eb48a4f506a31e79be41f3bec091f799c6f5201,lon Zakai <azakai@google.com>, 2020-11-12 10:15:52 -0800, , remove boilerplate utils.h 3340 also avoid needing undef delegate time,,
547,d41782f9cac8cb059ccc03f69e10d44849e3d10f,lon Zakai <azakai@google.com>, 2020-11-12 06:46:22 -0800,3303, fix regression 3303 3275 3338    true mathematically case overflow e.g negative number true true negative  see discussion 3303 comment actual regression 3275 fuzzer easier time finding due 3303,,
548,24bd9b984fc71c38d3d24c5f03fa81a15d591322,lon Zakai <azakai@google.com>, 2020-11-11 16:33:25 -0800,3333, fix 3339 mistakenly tried run pass run function one fix 3333,,
549,f0d6b089960e089bcc5c1794003585ebbd91d33a,am Clegg <sbc@chromium.org>, 2020-11-11 15:50:33 -0800, , wasm2js declare data segment calling asmfunc 3337 maybe need reference segment start function example case pthreads conditionally load passive segment start tested emscripten test runner.py wasm2js1,,
550,d0d96a815fb2e6c397dce76fb1b74b803fd431f4,lon Zakai <azakai@google.com>, 2020-11-11 15:35:13 -0800, , avoid boilerplate comparing hashing 3332 expands 3294 scope name must distinguished either defs error core define missing error prone suggested tlively add let one define get field loop use help avoid boilerplate loop least case single object get field possible replace boilerplate comparison hashing logic also fix bug bronexn sent scanned add unit test hashing hashing subtly wrong without observable external effect collision,,
551,32171f1d6ff57fdb31f55d8aa554eac15cb5d8f5,am Clegg <sbc@chromium.org>, 2020-11-10 18:06:14 -0800, , wasm2js support exported memory 3323 asmfunc set outer scope bufferview variable well internal view,,
552,bb124f995527f650d98bdac30b00b125b76fab9c,ax Graey <maxgraey@gmail.com>, 2020-11-11 01:56:14 +0200, , optimize i32 c_pot boolean context 3307 bool i32 c_pot bool i32 c_pot bool i32 min_s bool i32 max_s situation already i32 i64 .rem_s,,
553,236296d8563e0f90c3b57f32f1f8f63bac414b89,ax Graey <maxgraey@gmail.com>, 2020-11-10 23:04:16 +0200, , wasm2js use native javascript math.trunc 3329,,
554,0c20d9f427b63a6fdc354bb917c11f382068eaec,ax Graey <maxgraey@gmail.com>, 2020-11-10 21:41:22 +0200, , canonicalize subtraction constant right addition 3321 using addition place better gzip help simplify optimizer well add finaloptimizer phase optimization like signed leb tweak reduce binary size rare case want subtraction,,
555,5d2c13f16af2183a5d1861828e512fe0f964990c,athann <dominik@greysector.net>, 2020-11-10 17:19:17 +0100,2999, allow setting path libbinaryen.so shared library 3025 make easier install libbinaryen.so alternative location fix part issue 2999,,
556,ffdaad6adb8fa45f3c9021228b8e880ca02ff9b9,lon Zakai <azakai@google.com>, 2020-11-09 12:15:04 -0800, , avoid boilerplate code big universal delegation header 3294 get idea sample header switch delegate_id  case expression blockid delegate_start block block list block name delegate_end block break  switch defined delegate_id provided case expression type calling delegate field type allows user define delegate want include header new header copying logic rewrite also avoids recursion fix missing bronexn sent scanning existing hashing comparing code used basis used fix bug,,
557,47607d445b62c98017ce4b9c6cc69b61fae85aa5,am Clegg <sbc@chromium.org>, 2020-11-08 12:24:27 -0800, , remove dead code unused includes nfc 3328 specifically try cleanup use asm_v_wasm.h asmjs constant,,
558,c8249b553f89ede0b4dedd6c00fe7f9f7e745de2,am Clegg <sbc@chromium.org>, 2020-11-06 20:07:08 -0800, , remove optimizecalls postemscripten nfc 3326 longer build module import global.math,,
559,040a7cc3721292669609cc8020bd11ad6930d321,am Clegg <sbc@chromium.org>, 2020-11-05 16:10:10 -0800, , wasm2js remove global dict argument asmfunc 3325,,
560,2887e516eb2a4564ddca76ec42282822af24dd97,am Clegg <sbc@chromium.org>, 2020-11-05 12:51:42 -0800, , wasm2js remove unused argument nfc 3324,,
561,efa6b497998dfcc2fe5b2e0f6d0904e51feb6812,lon Zakai <azakai@google.com>, 2020-11-05 10:11:59 -0800, , wasm reduce try replace non number like reference const 3218 also assume number bit,,
562,3e72b20c055bb3769cf0dfbc790e5822ad1894e7,lon Zakai <azakai@google.com>, 2020-11-05 10:11:38 -0800,2841, remove remaining bit api tracing removed 3322 removed 2841,,
563,09738d9c1988c7d1d00e68e222eacd94bf7b1b5a,lon Zakai <azakai@google.com>, 2020-11-04 16:11:57 -0800, , inlining slight reordering option 3308 simplifies three size related inlining flag meaning clearer also improve comment put consistent order file make difference general except possible inline function one caller function_size would default flag fit case change anything anyone passing specific inlining flag people pas flag make thing possible resolve fixme code refactoring inlining work planned,,
564,3cae759a6ddf2b69a343270f612cdd92dc00f892,ax Graey <maxgraey@gmail.com>, 2020-11-05 02:05:10 +0200, , optimize signed unsigned relationals min max constant 3314,,
565,e85122d218aed06e81ecf0279a0da8199a85131b,ax Graey <maxgraey@gmail.com>, 2020-11-04 19:06:35 +0200, , precise implicittrap detection binary extressions 3312 division remainder implicit trap right hand side constant one dangerous value also refactor handling clarity,,
566,3bf75aa82ef96fd52f47fbe63ebe1c555c9dfcb8,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-11-03 19:10:42 -0800, , remove unused wasm object.h 3319,,
567,97b1674067fd380571cdce8bf2200532de2dbc42,ax Graey <maxgraey@gmail.com>, 2020-11-04 00:14:21 +0200, , slight refactoring handoptimize 3305 move check unoptimizable expression type visitexpression simplify code,,
568,081019104a09b5201fa1307a4758c19ca392c2d8,ax Graey <maxgraey@gmail.com>, 2020-11-03 18:24:17 +0200, , optimize 1.0 non fastmath case 3315 still make 1.0 cheaper non fastmath mode 1.0 0.0 least help baseline compiler also could enable optimization e.g  0.0 0.0 ,,
569,cdc2d2c006bc0406c93509ed0d7a2dfbb6f51ea5,lon Zakai <azakai@google.com>, 2020-11-02 15:03:58 -0800, , memorypacking properly notice 3306 pack memory know zero filled,,
570,ab68c1b2ffd034f8c30d2a4820c5c708491679cb,aniel Wirtz <dcode@dcode.io>, 2020-11-02 16:57:37 +0100, , fix usage allocate longer take type argument 3311,,
571,69367c09b2e26701ff4d99fec0e462c0114aac87,lon Zakai <azakai@google.com>, 2020-11-01 12:00:28 -0800, , removeunusedbrs properly check effect selectify 3310 selectify turn else select possible previously abandoned hope part side effect fine condition side effect long moving end invalidate arm,,
572,f1f2843699f5fd7b87dcefe00ce1eb8f72b37465,ax Graey <maxgraey@gmail.com>, 2020-10-31 22:21:14 +0200, , improve costanalyzer 3309 make select cost realistic good jmp add missing child visiting shorten repetitive case switch,,
573,45f808c58c752b1b146b71b9d6e9e30758a808c2,ax Graey <maxgraey@gmail.com>, 2020-10-31 01:06:30 +0200, , canonicalize relationals well 3303,,
574,ebaddfbd09359a9de6424e0c302255b8f8caf6f6,lon Zakai <azakai@google.com>, 2020-10-30 11:36:52 -0700,3289, standardize nan interpreter nondeterminism 3298 specifically pick simple positive canonical nan nan output output nan tool like wabt fix testcase found fuzzer 3289 fault,,
575,253c6a50130a16a1a1aae80bba4885fe99d3f625,outer van Oortmerssen <aardappel@gmail.com>, 2020-10-30 09:41:25 -0700, , memory64 3302 fixed bug memory64 lowering pas memory.size grow,,
576,5fc27e20479edfef0674c89e9bb7888ee25cb054,ax Graey <maxgraey@gmail.com>, 2020-10-30 08:08:48 +0200, , fold subtraction sum difference constant 3295   ,,
577,25e47f2c3e7ca8151377075432b34c95073acaca,lon Zakai <azakai@google.com>, 2020-10-29 19:06:28 -0700, , inlining fix note start function 3301 without might think function global global use start,,
578,eb81ca4f81a27eb2fa775b8246f24f3bc3ea4f4b,am Clegg <sbc@chromium.org>, 2020-10-29 17:09:48 -0700, , wasm emscripten finalize remove staticbump metadata 3300 emscripten longer need information http github.com emscripten core emscripten pull 12643 also remove need export __data_end,,
579,b59f61678a415ccb3baa8074556c6b8759edc593,ax Graey <maxgraey@gmail.com>, 2020-10-29 21:56:04 +0200, , optimize negative one shift operation 3292,,
580,972c7a08cdf25c5bd8a3182668c589596563820d,lon Zakai <azakai@google.com>, 2020-10-29 11:49:34 -0700,3276, use raii fuzzer function context creation 3296 followup 3276,,
581,76f5b362bfc2665196048f8d811f259614db0072,am Clegg <sbc@chromium.org>, 2020-10-29 11:44:20 -0700, , remove support emscripten legacy pic abi 3299,,
582,8cd3ad23543b1e6d0c8e5f8a1563ca5f87960645,ax Graey <maxgraey@gmail.com>, 2020-10-28 20:52:24 +0200, , fix pow2 util avoid pow2 left shifting zeroremover 3293 fix fuzz bug triggered http github.com webassembly binaryen pull 3015 issuecomment 718001620 actually pre existing bug pow2 happened uncover,,
583,5f7d2636e926e0061e4f07dfd5c864d32a7f6144,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-10-28 09:05:03 -0700, , prototype new simd multiplication 3291 including saturating rounding q15 multiplication proposed http github.com webassembly simd pull 365 extending multiplication proposed http github.com webassembly simd pull 376. since prototype skip adding apis fuzzer well implementing interpreter,,
584,8fd93ee74150a8783c5118ea9804b508fe67701f,ax Graey <maxgraey@gmail.com>, 2020-10-28 01:52:04 +0200, , propagate sign constant float point expression 3289,,
585,5c31f461afe87088e1e0972dbcbf0507c15b2880,ax Graey <maxgraey@gmail.com>, 2020-10-28 00:42:05 +0200, , replace float 3016 require adding new local,,
586,c015eebaee6161112eb82b1faa892c864ddffa27,lon Zakai <azakai@google.com>, 2020-10-27 15:30:51 -0700, , rename 3285,,
587,9abf63c578d64bd7029f6d4f848e0ff083f67c9b,lon Zakai <azakai@google.com>, 2020-10-27 13:14:05 -0700,3264, reduce boilerplate macro class delegation nfc 3290 split 3264,,
588,6c28516678b12fb04715c046b39f256cd26d0726,lon Zakai <azakai@google.com>, 2020-10-27 10:42:07 -0700, , dwarf fix handling end control flow instruction 3288 previously processed block example start block result type end content  end delimiter represents block start end header extra delimiter mark end think wrong attempt handle offset llvm otherwise made sense one end header turn make completely incorrect thing low high pair need understand end block end opcode end end header change i.e start block result type content  end fix testcase already test suite test pass fib_nonzero low see lexical block valid value end proper scope extends way end big block function dwarf process test pass also improved  implement remove binarylocations end delimeter need one type delimiter actually refactor keep small see todo remove assertion longer valid assert ensures wrote end end control flow structure write end header automatically like expression overwrite later finish writing child end marker could theory special case control flow structure avoid first write would add complexity uncovered appears possible bug debug_line handling see test pass need looked suspect invalid info looked end header control flow structure note one definite bug uncovered fixed extra else oldaddr added definitely bug,,
589,9a174f0ce9dc44b74db0e04728de62e6556176f9,lon Zakai <azakai@google.com>, 2020-10-27 10:30:24 -0700, , fuzzer add option fuzz initial wasm content 3276 previously fuzzer constructed new random valid wasm file scratch new initial fuzz filename option make start existing wasm file add random content top also randomly modifies existing content example tweaking const replacing node thing type etc also chance replace drop logging test drop result match optimized output wasm instead result logging fuzzer check thing goal find bug using existing hand written testcases basis test suite testcases initial fuzz content find issue often check corner case designed interesting random data may likely find found several bug already see recent fuzz fix mentioned first twitter past stopped counting ... http twitter.com kripken status required various change fuzzer generation account fact existing function forth start run need avoid collision forth,,
590,ca16f7cdc57549333474d7042128d2007bc35fad,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-10-27 08:58:36 -0700, , implement i8x16.popcnt 3286 proposed http github.com webassembly simd pull 379. since instruction still evaluated inclusion simd proposal doe add support apis fuzzer also performs drive fix unrelated instruction api kitchen sink.c,,
591,91ac3be4364e6f9763d6ccff35c83fab0692ef5c,laine Bublitz <blaine.bublitz@gmail.com>, 2020-10-26 22:09:16 -0700, , fix mingw build add github action 3287 add mingw build add compiler flag successfully build mingw,,
592,f3125579cca998300c230232ed4ded4fe0aaa34c,lon Zakai <azakai@google.com>, 2020-10-26 18:43:29 -0700, , rewrite dce pas 3274 dce pas one oldest binaryen quite lot cruft change unreachability stuff wasm binaryen history rewrite scratch making size noticed looking place use code autogeneration old version annoying boilerplate new one avoids need may noticeable difference old pas needed overlapped remove unused name reason remember new pas leaf pas added another run remove unused name avoid noticeable difference optimized build see difference testcases run dce test difference mostly whitespace overlap block ended needed branch removed old dce would remove block pas faster old version however adding another run remove unused name difference basically vanishes speedup,,
593,514a6c5eb339b67db852643405428f3add7d0e39,ax Graey <maxgraey@gmail.com>, 2020-10-26 22:52:32 +0200, , drop shift effective shift zero 3209,,
594,c8eeeeaed96d7753efe1b597c1b6b68098d82c79,ax Graey <maxgraey@gmail.com>, 2020-10-26 22:27:54 +0200, , onstant value truncation store operation 3117,,
595,019b0ef15e966ecafa6cdfa357b00de09c332633,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-10-26 10:31:05 -0700, , nfc using namespace abstract make matcher compact 3284 change make matcher compact readable removing explicit abstract namespace individual operation case make multi line matcher expression fit single line change possible also add explicit rmw prefix element atomicrmwop enumeration without name conflicted name abstract ops,,
596,d0032c299695c765e757de5f9482a610bf687d69,ax Graey <maxgraey@gmail.com>, 2020-10-26 06:53:17 +0200, , optimize relation subtraction zero 3275,,
597,b8b457ddad939a316cb833a8beb8987ca04fa865,ax Graey <maxgraey@gmail.com>, 2020-10-24 04:38:51 +0300, , bit integer pattern 3015 extend zeroremover handle bit integer well use make easier,,
598,2dc156d1d3af7f3eb40bdce7c20aa84c98d50c15,lon Zakai <azakai@google.com>, 2020-10-23 16:01:40 -0700, , fuzzer fix wasm2c name mangling 3228 necessary case input export name need mangling like name common spec test suite,,
599,0daa41c4af29f7a2695e8356e610cf88dea10d7f,ax Graey <maxgraey@gmail.com>, 2020-10-24 01:34:07 +0300, , avoid pow2 func 3243,,
600,aaf7825293d4f5f767a4a759ab7c1f20703e4c20,eejin Ahn <aheejin@gmail.com>, 2020-10-23 15:33:13 -0700,3213, make pop valid test 3282 two test pop invalid location pop valid catch fix invalid wasm file remove pop os_print stack ir_all features.wast fix 3213 3283,,
601,d53f195c27f83afa18d1f35cc97877341eb03be4,lon Zakai <azakai@google.com>, 2020-10-23 12:57:38 -0700, , handle get settempret0 fuzzer support 3279 avoids printing warning nothing also increase coverage checking bit return value bug would already found already think ignored high bit likely fuzzer emitting thing running least,,
602,bacfd4760c2474c418000c6838a0f4c9fadb1c09,ax Graey <maxgraey@gmail.com>, 2020-10-23 20:13:45 +0300, , build without rtti 3280 improves binary size example shrinking binaryen.dylib macos half megabyte,,
603,fd7e53fe0ae99bd27179cb35d537e4ce5ec1fe11,am Clegg <sbc@chromium.org>, 2020-10-23 08:49:25 -0700, , remove redundant mutable flag finalize 3273,,
604,daf0782b7754e225c9063f9fbf5195b4b4a3c7e3,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-10-22 21:47:17 -0700, ," implement v128 load store 8,16,32,64 _lane instruction 3278 instruction proposed http github.com webassembly simd pull 350 implement throughout binaryen except apis fuzzer leaf todos instead right instruction implemented prototyping adding apis critical generally available fuzzed wasm engine",,
605,a2fa37eb94fdd6896f4d90f22e34fbd5f028d742,ax Graey <maxgraey@gmail.com>, 2020-10-21 22:43:30 +0300, , add float simplification absolute binary expression 3013,,
606,dc5638879350e7186ea79aa5199606ad570fa0c3,lon Zakai <azakai@google.com>, 2020-10-21 11:43:28 -0700, , fuzzer improve random selection feature 3268 used either apply pick random also add chance pick none,,
607,5374418d347e5adb242a2e92c3fec7aa02de8f13,lon Zakai <azakai@google.com>, 2020-10-21 11:36:35 -0700, , fuzzer handle case even generate wasm file 3270 run ttf stage point printing instruction reduce thing reduce without wasm,,
608,ddf0b590c48448176c9821669eedac6741434bd9,lon Zakai <azakai@google.com>, 2020-10-21 09:24:29 -0700, , fuzzer handle log_execution instrumentation warn unknown import 3271 log_execution useful run fuzz testcase debugging purpose add support fuzz exec printing value iow allows following debugging flow run wasm opt log execution wasm run fuzzer wasm opt fuzz exec get logging printed showing enter function exit etc also general fuzz exec ignores unknown import run wasm file least fuzz testing also add warning case surprising behavior doe change,,
609,da68e75db7c4ca9c32d5c296499b51858d432c02,lon Zakai <azakai@google.com>, 2020-10-21 09:19:49 -0700,3266, simplifylocals fuzz fix confused subtype assigns 3267 checked type match deciding two local equivalent type match forgot reset previously equivalent thing thought something equivalent see reduced testcase fix 3266,,
610,b7c452ea1bf0ebce9f8da19e8124c20b4373a009,lon Zakai <azakai@google.com>, 2020-10-21 09:03:56 -0700, , fuzzer tweak constant mutation well 3272 move tweak function outer location call mutate probability,,
611,fd4cfd180db4d8c9b2b99dca18e31763399b4702,lon Zakai <azakai@google.com>, 2020-10-21 09:00:03 -0700, , fuzzer run emcc memory growth enabled allow larger thing run 3269,,
612,c61cb6f07a244067a7964d0d99c0fef0a068a3bf,am Clegg <sbc@chromium.org>, 2020-10-20 18:24:54 -0500, , remove old non working spillpointers pas 3261 associated stack.h current stack.h clearly work llvm back assumes stack grows mean non working used long time rather trying fix unused feature probably cleaner remove restore rom git history someone anyone actually want use future,,
613,2927d92a0df05512649629084d9b0013e002ae89,lon Zakai <azakai@google.com>, 2020-10-20 16:15:24 -0700, , remove remnant spec interpreter excess mozjs warning 3262 spec interpreter longer used mozjs still used optionally crucial past test coverage entirely optional run default need warn,,
614,8b31756134ba4460d1dc5320198a87f88af2443c,ax Graey <maxgraey@gmail.com>, 2020-10-20 22:35:36 +0300, , optimize signed division signed minimum 3221,,
615,c0c3812dfde2b8086b2fdd603e0d70705ec8a1e4,lon Zakai <azakai@google.com>, 2020-10-20 10:46:58 -0700,3225, avoid name collision memorypacking 3265 collision happen run pas twice somehow find optimize make easy add general utility getting unique name based root numeric suffix avoid collision fix second testcase 3225,,
616,3732f36ce062c3ee60413e4c19667f256b9297f8,lon Zakai <azakai@google.com>, 2020-10-20 10:46:20 -0700, , warn memory segment overlap 3257 may fix eventually appears urgent least show warning toolchains chance see something fix,,
617,e0d092b1ad26e7ef4069e31807f7c76a9eb20587,am Clegg <sbc@chromium.org>, 2020-10-19 19:56:34 -0500,3042, remove legacy asm.js test 3260 think file referenced since 3042 landed,,
618,8408cab1fdf67ce9ff331a131f06610909b78e61,lon Zakai <azakai@google.com>, 2020-10-19 14:54:38 -0700, , wasm reduce trying remove function try replace ref.func usage 3254,,
619,3f1b6ca3f3dc852aaa0a427b4db340e75c5bb693,lon Zakai <azakai@google.com>, 2020-10-19 10:20:34 -0700, , fix usage validator i64 i32 bug hidden 3253 mean lookup module place missing wrong think reason wrong usage used type module removed validatable actually uncovered real bug i64 would ignore unreachable parameter call_indirect bad since type i64 need replace two parameter fix handle unreachability using existing logic skip call_indirect entirely case,,
620,770a042535cd901902cd23410d9a9488dfc020e2,ax Graey <maxgraey@gmail.com>, 2020-10-19 20:19:33 +0300,3200, remove longer needed 3200 3258,,
621,e382c577bc7df6f26933a7b7627757ad32bca842,lon Zakai <azakai@google.com>, 2020-10-19 09:13:45 -0700, , inlining fuzz fix notice ref.func function reference global inits 3252 reference may mean remove function inlining,,
622,8d8e1c53aa1b03ad4285437a6c41bc86f86731ca,ax Graey <maxgraey@gmail.com>, 2020-10-18 20:56:07 +0300, , optimize comparison boolean context 3240 i32 bool i32 bool i64 bool i64 bool also clean related matching rule add explanation ispowerof2float rename ,,
623,bde6878ee30baeda4a1ee82fb9c933768a17b6b2,laine Bublitz <blaine.bublitz@gmail.com>, 2020-10-18 10:47:40 -0700, , ignore root config.h file 3256,,
624,056870687abaa7ff9cd887a8fcf13bba1ccfa203,am Clegg <sbc@chromium.org>, 2020-10-18 12:08:43 -0500, , remove redundant stack pointer manipulation pass 3251 use pass removed emscripten side http github.com emscripten core emscripten pull 12536,,
625,8cdb2eaa7cb3f4c693239e32fe4d4c7f3d75e005,lon Zakai <azakai@google.com>, 2020-10-16 12:35:27 -0700, , add pas option 3246 set assume imported memory modified let assume zero optimize zero memory segment doe actually anything flag add avoid rolling problem next emscripten emit without erroring start use,,
626,98dcde79d27eb1df2db47120e0102497bf385320,am Clegg <sbc@chromium.org>, 2020-10-16 13:55:05 -0500, , finalize remove legacy support table import 3249 day always export table except case dynamic linking even use name ,,
627,5e92a4f1864c49867906624f1b16b14c57ee357a,am Clegg <sbc@chromium.org>, 2020-10-16 01:42:56 -0500, , finalize add mutable flag 3250 flag disables feature wasm emscripten finalize replace mutable global import __stack_pointer see corresponding emscripten change depends one http github.com emscripten core emscripten pull 12536,,
628,76d551d762d550f15cc1abd58a14fbb95a5bcfbf,am Clegg <sbc@chromium.org>, 2020-10-15 22:28:53 -0500, , finalize move functionality behind legacypic 3248 internalizing stack pointer needed legacy pic mode since new pic mode support mutable globals also additional function exists support legacy mode,,
629,d0dae28c05dd9ef4da0d77fee42cf15cd1d94e3c,am Clegg <sbc@chromium.org>, 2020-10-15 13:13:10 -0500,3226, write explicit name name section 3241 fix 3226,,
630,c2e6cb0b5530b0d4e1a3161de319fc8373476578,lon Zakai <azakai@google.com>, 2020-10-15 10:03:28 -0700, , fuzz fix memorypacking trampled data 3222 believe originally wasm allow overlapping segment one memory segment trample data previous one spec changed mind allowed binaryen seems assumed original case checked trampling chance trampling optimize zero zero may effect trample data previous segment doe occur practice llvm output problem far think existing testcase hit issue split,,
631,3e1fdf28f3aaf2191f4f02c64f4557ee6b109271,lon Zakai <azakai@google.com>, 2020-10-15 09:02:26 -0700, , log nested pas name 3214 validate print wasm case least logging name run help debug situation,,
632,9c5df069cc466d904c8faa1888095e84ae74d404,am Clegg <sbc@chromium.org>, 2020-10-14 21:10:26 -0500, , assign import name consistently text binaryn reader 3238 parser assigning number name per type binaryn reader using global import count number append change switch use per element count think preferable increase stability auto generated name e.g memory always named mimport0,,
633,6216becd5e8d93cd17c758a63f24db4494719e2c,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-10-14 14:26:13 -0700, , memorypacking emit correct segment index memory.init 3239 fix bug segment index memory.init instruction incorrect circumstance specifically first segment index used output memory.init instruction always index first segment created splitting corresponding input segment incorrect input memory.init offset caused skip first emitted segment first output memory.init referred subsequent output segment fix 3225,,
634,6f255d3bea628bd8d2ae2e43d29faeac6dbd7daf,ax Graey <maxgraey@gmail.com>, 2020-10-14 20:14:57 +0300, , improve partial evaluation 3236,,
635,b2d4a1811c7ea9f44720bb0e5aba4f64a7f73e58,lon Zakai <azakai@google.com>, 2020-10-13 18:53:42 -0700, , pickloadsigns fuzz fix make atomic operation signed 3235,,
636,1a1b547aee688a0d96251e8afd565999acfb1922,ax Graey <maxgraey@gmail.com>, 2020-10-14 03:49:46 +0300, , optimize power two float division 3018,,
637,8943fcc31d12545043043c06c037cf6dfee14722,am Clegg <sbc@chromium.org>, 2020-10-13 10:59:21 -0500, , emscriptenpic remove internalization got entry 3211 wasm doe better binaryen doe default linking executable optionally bsymbolic linking shared library see http d89152,,
638,639dc87a9ea6a633acca5b5ababfe81f8059cf5f,outer van Oortmerssen <aardappel@gmail.com>, 2020-10-13 08:57:34 -0700, , added initial pas 3230 pas convert module bit load store accessing bit memory regular bit one pointer remain bit truncated use,,
639,947ad6e14d2de3d1f1ca14b8de3f3c341185ed96,ax Desiatov <max@desiatov.com>, 2020-10-13 16:55:23 +0100, , fix wasm capitalization binaryen c.h comment 3233 according webassembly spec wasm abbreviation acronym,,
640,8dfe13494b97f0204670935b9cfa7a45a4ac61ab,am Clegg <sbc@chromium.org>, 2020-10-13 10:32:02 -0500, , release 3234,,
641,60cc473e57bb869761f753748af91dad2be4ae13,ax Graey <maxgraey@gmail.com>, 2020-10-13 17:12:21 +0300, , optimize unsigned division negative constant 2991 uint32_t uint32_t shrinklevel uint64_t uint64_t uint64_t,,
642,689a6fc5fa03a969f099613cd85893332ecdb5e6,lon Zakai <azakai@google.com>, 2020-10-13 06:57:45 -0700, , update test landing collided 3232,,
643,5ae1724add800780475e02e05a4af133e3729bd6,lon Zakai <azakai@google.com>, 2020-10-12 17:11:30 -0700, , interpreter add limit much try grow memory avoid 3227 growmemory also return whether succeeded without could eventually start swap etc. annoying,,
644,d38ddda4c299a40ee48efb777ec69c823312c9dd,lon Zakai <azakai@google.com>, 2020-10-12 14:54:26 -0700, , fuzzer emit random global.get set hang limit global 3229 global internal use emit random set could prevent job preventing infinite loop normally decrease time loop run recurse reach set nonzero value code would bad random get problem may confusing debugging testcase,,
645,9d6413cd2d504684d026bdec27e2d030d4c60598,lon Zakai <azakai@google.com>, 2020-10-12 14:48:41 -0700, , slightly improve validator error text segment 3215 mentioning memory table segment convenient,,
646,65a4e05b75e714268f6b7aaf33e0f97ad7a635c1,lon Zakai <azakai@google.com>, 2020-10-12 14:19:00 -0700, , memory64 fuzzing preparation 3223,,
647,f4d074fc3ee8184cd89c870612fc316adaeb8e1a,eejin Ahn <aheejin@gmail.com>, 2020-10-10 20:01:06 -0700,12399, rename emscripten ehsjlj function wasm backend 3191 renaming invoke wrapper wasm backend deletes related renaming routine relevant test depends 3192 address 3043 3081 companion http d88697 emscripten core emscripten 12399,,
648,caf624d0b1b81cf93cfb66dfdb50f49c5cc51578,lon Zakai <azakai@google.com>, 2020-10-09 19:51:22 -0700, , removeunusedbrs fuzz fix switch single target value 3220 turn br_table single target reverse order condition value forgot take account,,
649,399cb3df1e2e053fc601ed77744d41fe2378e54c,lon Zakai <azakai@google.com>, 2020-10-09 16:58:18 -0700, , asyncify fuzzing harness fix growth 3205 fuzzing asyncify data memory growth showed harness handle growth growth happens must recreate view simplicity always refresh location dominates,,
650,7f5bb7ab4c4d44316dc191f17a3cbdf7fb2e6d31,ax Graey <maxgraey@gmail.com>, 2020-10-10 01:01:00 +0300, , refactor naming convention function handling tuples 3196 two version function one handling tuples handling non tuple value previous naming convention single name non tuple handling function simplifies convention shortens function name making name plural tuple handling version singular non tuple handling version,,
651,788974a6bcdd00d5edc3ddaafc70107bc8c37c86,lon Zakai <azakai@google.com>, 2020-10-09 14:25:33 -0700, , add optimizer overview readme 3210,,
652,16e4cc21605cb7e973176b2369b60653b214606b,am Clegg <sbc@chromium.org>, 2020-10-09 16:12:40 -0500, , generate lld test input 3212 generated running script test ,,
653,369b8bdd3d9d49e4d9e0edf62e14881c14d9e352,lon Zakai <azakai@google.com>, 2020-10-09 11:02:05 -0700, , fix split_wast asserts first module 3206 normally wast file module asserts test asserts without module case set module none happen asserts refer module top wast file,,
654,13351616886ad7d31528c6349ea397dbc6100778,lon Zakai <azakai@google.com>, 2020-10-09 10:42:07 -0700, , add little code prepare exception handling support fuzzer 3207 fixlabels fuzzer look invalid label fix random change existing wasm check type may invalidate label remove target branch example add trivial support bronexn try,,
655,9d50c1f4a7fb81ead03a2b8445655f157553fa1b,lon Zakai <azakai@google.com>, 2020-10-09 10:40:01 -0700, , optimize fuzzer add isloggabletype 3208 previously getloggabletype would allocate vector every time cache also add isloggabletype need caching calling quite lot future patch fuzzer,,
656,87fddcb0aa28f322c0781c08cca6ce2a756d8728,lon Zakai <azakai@google.com>, 2020-10-08 20:07:00 -0700, , validate memory64 3202,,
657,c8661e115309626a87708cb25067b6a3210367fe,lon Zakai <azakai@google.com>, 2020-10-08 16:00:20 -0700, , fuzz fix 3204 utility replaced export name check kind could get confused name happen overlap,,
658,d68896d8c54f538c04d4fe43825a63ba135ed0fe,ax Graey <maxgraey@gmail.com>, 2020-10-09 00:36:58 +0300, , add static guard cast dyncast 3201,,
659,e433611dbef8dd83e48fc9402f8ad3fce63c3690,lon Zakai <azakai@google.com>, 2020-10-08 12:37:39 -0700,11860, remove pas fastcomp 3199 see emscripten core emscripten 11860,,
660,b326a3e84de1125ea0cd11162eea822f7e7e927e,lon Zakai <azakai@google.com>, 2020-10-08 12:37:17 -0700, , remove old attempted dsl beginning 3200 wasm turned good dsl peephole optimization never made progress meanwhile new matcher stuff work well,,
661,6fbf158b04f6ba2771f4856e41d070086b5b0d96,ax Graey <maxgraey@gmail.com>, 2020-10-07 21:13:06 +0300, , add optimization rule shift operation 3099 specifically truncates constant shift value greater number bit available optimizes explicit masking shift value redundant implicit masking performed shift operation,,
662,fe56186c48350e7b4b4a2243022da65703a8f1b7,ax Graey <maxgraey@gmail.com>, 2020-10-06 22:47:38 +0300,3193, revert change 3193 3197 signed i32 i64 .min_s i32 i64 .max_s valid unless compared zero,,
663,8548101838bb72ca06abb5cbdc033e39c9d970a7,ax Graey <maxgraey@gmail.com>, 2020-10-06 05:26:45 +0300, , refactor makefromuint64 makefromint64 3194 consistency makefromint32,,
664,fc7f66a870f6bcf17091d6cb8b7545a8e7593e7c,ax Graey <maxgraey@gmail.com>, 2020-10-05 23:37:43 +0300, , fast math fold 3189,,
665,654cfca4fabda64dd91d2df9b07422b8bffc9357,ax Graey <maxgraey@gmail.com>, 2020-10-05 19:34:17 +0300,3153, generalize transforms 3153 3193 implement general additional version 3153 also handle negative constant divisor int32 c_pot c_pot special two complement value well int32 0x80000000 0x7fffffff int64 separete rule int32 0x80000000 0x7fffffff int64 previous http github.com webassembly binaryen pull 3153 use possibility,,
666,3da66481b94cba2d3f5717316755fe3a60fcbe52,lon Zakai <azakai@google.com>, 2020-10-05 09:00:05 -0700,3047, ordering correction fix 3047 3195 found fuzzer valid replace reordered also valid replace reordered subtle reason reordered affect value opposite possible checked side effect could remove one copy second appearance could different e.g read local writes whereas reorder,,
667,ecaa818922fe2571649a621a00f7f3c40ebb217a,eejin Ahn <aheejin@gmail.com>, 2020-10-02 09:25:15 -0700, , let generate dyncalls invokes 3192 move dyncall generating functionaity invokes pas pas take care case need dyncalls function table invokes,,
668,42aec827c2233eb4adbb56c6d1b23d70399bfac1,ax Graey <maxgraey@gmail.com>, 2020-10-02 09:12:36 +0300, , simplify numeric code 3186,,
669,2959218552a202b2b1d983ffcff68b015b9a94bd,ax Graey <maxgraey@gmail.com>, 2020-10-02 03:12:44 +0300, , optimize clear bit mask combination cyclic rotation preinverted mask 3184,,
670,f703a3a3c9021e1ae2cb009a37786210d3fcf870,ax Graey <maxgraey@gmail.com>, 2020-10-01 23:57:58 +0300, , add comment signed unsigned lowering 3187,,
671,7549fa413b6e3a8eba1f8cfba1c24f01692cfb5b,am Clegg <sbc@chromium.org>, 2020-10-01 11:27:02 -0700, , stop generating 3180 depends http github.com emscripten core emscripten pull 12391,,
672,e1a843b15d9939eaa258261f5fed67ea9c493a65,ax Graey <maxgraey@gmail.com>, 2020-10-01 15:49:40 +0300, , add apis fast math 3188 add api respectively api,,
673,2a935b64dde22671644c4712d0f45e8df60f94eb,am Clegg <sbc@chromium.org>, 2020-09-30 17:21:51 -0700,3180, wasm2js override incoming memory grow method 3185 allow completely removal followup currently unconditionally generate function  see 3180,,
674,2f6939a2cecc37691a1e474ff15a7801f9509cfb,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-30 16:08:00 -0700, , clean support bits.h 3177 use overload instead template applicable change function name pascalcase camelcase also put function bit namespace avoid naming conflict,,
675,b91603f65c45139ad49dfa257749d100117b763d,eejin Ahn <aheejin@gmail.com>, 2020-09-30 14:42:27 -0700, , update lld test 3182 update lld test running latest toolchain,,
676,20d6236b1b96878015c050fc953d63a040d60385,lon Zakai <azakai@google.com>, 2020-09-30 12:40:05 -0700, , remove unnecessary new table generation wasm2js 3163 actual constructor function return object,,
677,07047103a26e1c17ee995ef3e1358ddb26d8e8c8,lon Zakai <azakai@google.com>, 2020-09-30 12:39:05 -0700,2958, add fast math mode 3155 similar clang gcc fast math make ignore corner case floating point math like nan change done yet lack associativity forth future may want separate fast math flag specific thing like gcc clang undoes change 2958 3096 assumed change nan bit binji corrected thing fast math mode put optimization behind flag add test restores interpreter simpler code special case,,
678,11de8894505d37b7b970a2103bc5b1cfd094b115,ax Graey <maxgraey@gmail.com>, 2020-09-30 22:21:30 +0300, , fold i32.eqz wrap_i64 i64.eqz possible 3181 specifically bit wrapping change value,,
679,7e99538386e047bddc41ad50b9762b7d4b9611b8,ax Graey <maxgraey@gmail.com>, 2020-09-30 05:36:17 +0300, , simplify signed remainder compared zero 3153 specifically divisor power two eqz signed c_pot eqz c_pot signed c_pot c_pot,,
680,67a96ae60085366b59d64bc997c9e6525c247e27,aniel Wirtz <dcode@dcode.io>, 2020-09-30 00:15:33 +0200, , fix applying default unify sexpr wasm builder name 3179 applying default memory table import name memory table unlike function globals event applies also aligns default import name use shorter form binary parsing,,
681,7d673ce83206349159a68fe683bc7da02dcdaf98,aniel Wirtz <dcode@dcode.io>, 2020-09-29 22:19:09 +0200, , add stub remaining instruction 3174 nfc except adding boilerplate remaining instruction implementation site marked respective todo theinstruction typical boilerplate code,,
682,781da4c206c54e92b46358c00d079ada66cef0df,ax Graey <maxgraey@gmail.com>, 2020-09-29 22:45:08 +0300, , add also non equal zero simplification boolean context 3178,,
683,a629dc27bcb8022fad559ecdb2d3138e39183c6b,aniel Wirtz <dcode@dcode.io>, 2020-09-29 21:24:02 +0200, , fuzzing support i31 3169 integrates i31ref type instruction fuzzer assuming i31.new i32.const constant hence suitable used global initializers,,
684,fa4c884f4ebfde185c9d8a3ee4e54f96c57cebed,aniel Wirtz <dcode@dcode.io>, 2020-09-29 17:55:28 +0200, , prototype extended name section proposal 3162 implement part extended name section proposal trivially applicable binaryen particular table memory global name doe yet implement label type elem data name,,
685,e9e5f30212f44927859d3dad5fe48499d860f61c,aniel Wirtz <dcode@dcode.io>, 2020-09-29 17:10:16 +0200, , refactor literal equality hashing depend getbits 3159 comparing hashing literal previously depended getbits fine basic numeric type map well reference type anymore hence change limit use getbits basic numeric type implement reference type aware comparison hashing deal newer type,,
686,9de15862c1bc4e2b092ccbe89fdb4b850704bbfc,outer van Oortmerssen <aardappel@gmail.com>, 2020-09-28 17:28:20 -0700,3149, fix regression memory.fill due memory64 3176 detail http github.com webassembly binaryen issue 3149,,
687,2a869194c5fb7f54b3811043bfcf723e3d53c1df,lon Zakai <azakai@google.com>, 2020-09-28 16:49:35 -0700,12329, restore minification emscripten build 3173 emscripten bug fixed emscripten core emscripten 12329,,
688,5a4db93bac7e123910ea173bb0a9c9f61bc6ee78,ax Graey <maxgraey@gmail.com>, 2020-09-29 02:43:46 +0300, , lower signed binops unsigned binops possible 2988 unlock instruction optimization apply signed operation,,
689,c721f85e79f97936f4804afe51dcd2859ad13afd,lon Zakai <azakai@google.com>, 2020-09-28 14:26:53 -0700, , fix low_pc updating expression right start 3175 case llvm emits address declaration area local declared function even earlier instruction actual first byte sure doe easy handle,,
690,fbdcaf70c6b8888254d409bf57c80ea007058838,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-25 14:12:57 -0700, , allow atomics validate unshared memory 3172 relaxation made chrome stable make sense would allow tool,,
691,46d2cbab48ebbc8c9aab3f285cc42b2544bb526a,aniel Wirtz <dcode@dcode.io>, 2020-09-25 10:10:56 +0200, , fix missing feature validation 3171 instruction ref.null ref.is_null ref.func try throw rethrow br_on_exn previously missing explicit feature check change add note already validate reason like requiring use type checked otherwise ref.null try validated even context featureset mvp better sure,,
692,fadf01842175202f59340f8c7093a090962e2269,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-24 17:05:31 -0700, , add new unary binary matcher 3168 add new matcher allow matching unary binary operation optionally extracting previous matcher allowed matching specific unary binary operation help simplify 3132,,
693,13e43b16b368e24727e9e368b78c925320380c9d,am Clegg <sbc@chromium.org>, 2020-09-24 15:48:13 -0700, , cleanup emcc tests.sh 3170 use ninja use sub directory use emmake running make ninja redundant use emconfigure configure build,,
694,f61ec303bca392fcec18a3c6116f9fa5fca17a1a,am Clegg <sbc@chromium.org>, 2020-09-24 14:34:05 -0700, , wasm2js skip heap creation absence wasm memory nfc 3167 also format asmfunc call make readable es6 module case,,
695,7886f784967b60f656fcbcd831fbafb1777e8bcd,am Clegg <sbc@chromium.org>, 2020-09-24 10:15:53 -0700, , fix emcc lto flag 3166,,
696,e9e1b2ff00aeb05aaeb57af3811add267dc25323,aniel Wirtz <dcode@dcode.io>, 2020-09-24 12:02:09 +0200, , add i31 instruction 3154 add i31.new i31.get_s instruction creating working i31ref typed value doe include fuzzer integration yet fuzzer expects trivial value creates suitable global initializers case trivial i31ref expression,,
697,a42423fafa8cf731c69303ddc0acbe80c890e0ab,lon Zakai <azakai@google.com>, 2020-09-23 18:09:00 -0700, , stop minifying wasm2js temporarily fix minification 3165,,
698,fd15ea4e8cdadcaadebbf9be1e4c4f554e7a678d,am Clegg <sbc@chromium.org>, 2020-09-22 17:00:48 -0700,12057, remove unused stack pointer emscripten sbrk ptr pas args postemscripten 3161 removed completely emscripten side 12057,,
699,b867a54c92e36b5a53bb1c2d97c043bb6173a3af,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-22 12:37:54 -0700, , fix build semantic merge conflict 3160 remove even allocator,,
700,e5bf7680a0616f994a9c5c266df9ba76f21e93e9,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-22 12:13:12 -0700,3130, remove redundant allocator builder 3144 builder gained module field 3130 require extra context properly finalize expression since module contain allocator old allocator field builder became redundant change remove redundant allocator field,,
701,0f9339d4e9cfce796d5056c962a183680a19c8ea,lon Zakai <azakai@google.com>, 2020-09-22 08:48:47 -0700,2879, bits.h cleanup 2879 3156 improve comment remove fast path optimization compile time code clarity matter,,
702,b410773b502abfcd8cc225fe4cd36d84108c0aeb,lon Zakai <azakai@google.com>, 2020-09-22 08:44:31 -0700, , dwarf fix abbreviation lookup relative 3158 apparently misunderstood dwarf spec abbreviation offset relative valid number reason thought first die index base practice llvm always emits lowest index llvm yaml code suggested,,
703,4b3c35b34c62dc619b1c706e5562e90c089f2419,lon Zakai <azakai@google.com>, 2020-09-21 17:23:03 -0700, , fuzz negative zero often 3133 earlier sometimes would pick tweak negation favored positive make coverage symmetric,,
704,85e0e50e86797d63912742c1c2aac0332dd2cf40,am Clegg <sbc@chromium.org>, 2020-09-21 16:58:55 -0700, , remove stale test output 3157 test output file ignored contain stale output neither checked check.py updated  three clases test spec test end 64.wast ignored script test wasm2js.py spec test globallyi ignoed shared.py cant tell came remove seems like anomaly,,
705,ee00f647750f23e6c24e67424bafab39b244c835,am Clegg <sbc@chromium.org>, 2020-09-21 16:39:46 -0700, , wasm2js support exported table 3152,,
706,4d6e9ea2d1796c984e3ebc38d0b6abdf8049941a,ax Graey <maxgraey@gmail.com>, 2020-09-22 00:20:34 +0300, , fix i64 type checking 3150 problem existed long time since almost never used create problem,,
707,5eebc8a4d053ed7bcbd88f787cab60b0f246e71d,aniel Wirtz <dcode@dcode.io>, 2020-09-21 22:32:39 +0200, , add memory64 feature flag apis 3148,,
708,51350a8d2e7a361cf658951798351fc242420328,aniel Wirtz <dcode@dcode.io>, 2020-09-21 09:45:58 +0200, , add ref.eq instruction 3145 eqref integrated ref.eq instruction implemented valid value ref.null implementation fuzzer integration otherwise complete,,
709,e35cdb97adf6eb2ade2be7734d1c6c397d440dc1,aniel Wirtz <dcode@dcode.io>, 2020-09-19 08:48:06 +0200, , integrate eqref i31ref type 3141 add eqref i31ref type respective code location implement implemented trivially otherwise trap todo integration eqref mostly complete due nullable like anyref i31ref need remain disabled fuzzer lacking functionality create trivial i31ref value i.e i31.new i32.const left follow ups implement,,
710,e308db569ab2582d3b0ea9accdbaa3b27abdb044,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-18 21:37:31 -0700, , expression matching api 3134 provides easily extensible layered api matching expression pattern extracting component low level api provides modular building block creating matcher data type high level api provides succinct flexible interface matching expression extracting useful information matcher currently provided const unary binary select instruction adding matcher new type expression straightforward enough expect add become useful part change,,
711,3b4cb935f83c7fabacbf61146e56dabc0d65a441,outer van Oortmerssen <aardappel@gmail.com>, 2020-09-18 15:50:25 -0700, , initial implementation memory64 proposal 3130 also includes lot new spec test eventually need spec repo,,
712,1a928bc3ff4b511e81b3f93db8aea872e88abaaf,aniel Wirtz <dcode@dcode.io>, 2020-09-18 17:08:58 +0200,3115, update api function wrapper 3128 update api function wrapper introduced 3115 binding api function also add additional comment describe inner working wrapper detail,,
713,2548f04c198594a21e4144261e8cfea5de56308a,ax Graey <maxgraey@gmail.com>, 2020-09-18 02:39:39 +0300, , optimize binary operation bit const 2948 expr expr expr expr expr expr expr maxbits expr i.e expr boolean,,
714,2d47c0b8ae7b72e710b982abce83429c50c6de30,ax Graey <maxgraey@gmail.com>, 2020-09-17 23:05:55 +0300, , implement case getmaxbits 2879 complete bit case range addint64 ... shrsint64 extendsint32 extenduint32 unary case binary case addint32 addint64 mulint32 mulint64 remuint32 remuint64 remsint32 remsint64 divuint32 divuint64 divsint32 divsint64  also fast path getmaxbits calculation,,
715,6116553a91b5da4fd877480bb27fc88b264b737f,outer van Oortmerssen <aardappel@gmail.com>, 2020-09-17 10:55:02 -0700, , improve testing window 3142 contains change enable disable test window allow better local testing also change many abort fatal really exiting error abort generates dialog window window great automated script improvement cmake better work project ides,,
716,9f7a053bf0ca3185336eb4616f88d85df573adbf,ax Graey <maxgraey@gmail.com>, 2020-09-17 20:31:27 +0300, , unary binary duplicate expression elimination 3047 simplifies pattern expression applied twice operand  ceil ceil ceil floor floor floor trunc trunc trunc nearest nearest nearest eqz eqz bool bool sext sext sext neg neg     ,,
717,edc03a69da757e9b106b67647d7914b94680b97a,am Clegg <sbc@chromium.org>, 2020-09-17 08:57:50 -0700, , release 3140,,
718,2841eddaabc7a5e24517e043a1aab8adc6d5c1e4,aniel Wirtz <dcode@dcode.io>, 2020-09-17 12:58:21 +0200, , refactor host expression memorysize memorygrow 3137 aligns internal representation memory.size memory.grow recent memory instruction removing legacy host expression class adding separate expression class memorysize memorygrow simplifies related apis also breaking api change,,
719,e1d74ef2acdd88f06b9e58f91f30bb56b9a26fe8,aniel Wirtz <dcode@dcode.io>, 2020-09-17 07:46:40 +0200, , add feature flag 3135 add enable feature flag far enabling anyref type incl subtyping remove temporary enable anyref feature flag replaces,,
720,a96e8310e1a58c0a43b2d0e2ff4f9db24dd9a18a,aniel Wirtz <dcode@dcode.io>, 2020-09-16 15:46:22 +0200, , fix bit binaryenliteral 3136 maximum storage size type changed introduction tuples type memory address canonicalized type vector change aligns storage type type binaryenliteral literal changing type int32_t uintptr_t,,
721,bced89d2986bde990bf9bf52306e55772b02707e,eejin Ahn <aheejin@gmail.com>, 2020-09-15 23:46:32 +0900, , fix inner block problem catch 3129 fix 3114,,
722,bcc6f2994e8f71b633b1d0257547aeed691f6ceb,ax Graey <maxgraey@gmail.com>, 2020-09-15 06:44:43 +0300, , add float operation issymmetric util 3127 add floating point operator property issymmetric also treat additional float ops symmetric specifically operand known non nan,,
723,18716065cc470c3bc29a4fecf3889891a9bf604b,aniel Wirtz <dcode@dcode.io>, 2020-09-14 11:51:59 +0200, , implement module local name name section 3115 add support module local subsection name section plus respective apis populate obtain local name api func func index func index func index name api func func index func index func index name,,
724,0ade3f2761b0661ab4d1290ab704c594c1d90df9,aniel Wirtz <dcode@dcode.io>, 2020-09-14 05:12:24 +0200, , add mozjs wabt setup script 3053 add new script third_party setup.py conveniently install necessary dependency testing fuzzing including spidermonkey shell mozjs shell wabt script automatically pick installed fall back look tool path like,,
725,cd9bd149162ecdd9f2715367617771ea55b7cd7e,ax Graey <maxgraey@gmail.com>, 2020-09-14 04:04:38 +0300, , simplify subtracting zero float expression 3125 0.0 0.0 0.0 0.0 f32 f64,,
726,643facd9bf6af1792db473e73e16983df940106f,aniel Wirtz <dcode@dcode.io>, 2020-09-13 06:11:17 +0200, , fix refnull issue 3123 fix ref.null equality check include precompute fix ref.null expression reuse also update fuzzing fix ref.null func becoming canonicalized ref.func funcref evaluating execution result adding check isnull fuzzing print actual expected execution result aborting test update arm subtype test optimize instruction check identical arm become folded identical arm kept,,
727,0c53fb5d84afe32bfdf13231908aad760cb1d89d,aniel Wirtz <dcode@dcode.io>, 2020-09-12 05:56:07 +0200,3050, include potentially tree bin directory reduce.sh 3120 since 3050 fuzzer test tree build using binaryen bin argument argument yet added generated reduce.sh fuzzing failure change add,,
728,926dcf27012322d92eddc3b7ce41df890984ec39,am Clegg <sbc@chromium.org>, 2020-09-11 14:57:36 -0700, , wasm emscripten finalize add new pic abi option 3118 option skip pic abi transforms normally done wasm emscripten finalize keep llvm pic abi place llvm abi mutable globals got.mem.foo got.func.bar data function offset rather accessor function foo bar,,
729,8ec8a0bbfb039852b60f121fb23c439228b9fe36,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-11 13:34:01 -0700, , update pop text format handle tuples 3116 previously pop printed type .pop popped type tuple something like i32 i64 .pop would get printed however parser support pop anything besides single basic type change text format pop type add support parsing pop tuples basic type text format change designed make parsing simpler change necessary writing poppy test see 3059 contain break return instruction consume multiple value since poppy requires tuple typed pop,,
730,dbff242b3bc1fdaec15140cc48a537d7a497fb48,lon Zakai <azakai@google.com>, 2020-09-11 09:09:15 -0700,3043, stop renaming longjmp wasm emscripten finalize 3111 instead finalize renaming nothing finalize optional post emscripten pas rename exist end using two import optimization pass remove unneeded import depends emscripten core emscripten 12157 land first emscripten handle name optimization one see http github.com webassembly binaryen issue 3043,,
731,95c0b44f88e733307c0cc3fd2f5efcff579d95b4,am Clegg <sbc@chromium.org>, 2020-09-11 06:06:06 -0700, , remove script 3112,,
732,192757772adce7568fc1f3f3e733a4263b6392c6,aniel Wirtz <dcode@dcode.io>, 2020-09-11 03:04:17 +0200, , add anyref feature type 3109 add anyref type enabled new feature enable anyref type primarily used testing pass correctly handle subtype relationship codebase continue prepared future subtyping since enable anyref meaningless without also using enable reference type also make validation error pas former similarly make validation error enable exception handling without enabling reference type,,
733,cd6f0d908f0e4c68d72fd476a6e0e7cfb7ae8595,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-10 17:49:56 -0700, , simplify 3110 previously inconsistent whether emitted instruction instruction reachable instruction produced value emitted unreachable instruction produce value always emitted additionally block continued emit child even emitting unreachable child since possible tell whether unreachable instruction parent would emitted defensive emit many extra unreachable instruction around unreachable code avoid type error unifies logic emitting non control flow instruction change behavior never emits instruction reached due unreachable child mean extra unreachable instruction need emitted unreachable control flow construct also stop emitting instruction inside block first unreachable instruction extra optimization change also simplify poppy stackification see 3059 guaranteeing instruction unreachable child emitted stackifier make satisfying poppy rule unreachable pop trivial whereas previously satisfying rule would required 700 additional line code recompute type unreachable child instruction,,
734,739144d96d162b430d5fd54e4fe11b8ce2d34d47,lon Zakai <azakai@google.com>, 2020-09-10 12:49:40 -0700,12123, fix wasm2js memory import case minified 3113 hardcoded env.memory usually correct minify import name emscripten need use minified name note test emits var memory env.a import fix emscripten core emscripten 12123 noticed earlier since import used memory growth test would catch wasm2js3.test memory_growth run wasm2js1 add testing land,,
735,2aa0cf300998c62aea8cc6698f8325653a9f0895,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-09 13:01:21 -0700, , poppy wast parsing validation 3105 add profile function validator determine validation rule apply add flag wast parser set profile poppy testing purpose,,
736,41ea543093ed734c73e5202c58c899be447b3223,lon Zakai <azakai@google.com>, 2020-09-09 09:56:50 -0700, , interpreter change nan bit multiplying 3096 similar 2958 multiplication thought limited division happen addition example fuzzer found doe indeed happen multiplication well overall kind workarounds interpreter normal f32 f64 multiplication using host cpu pick oddness nan behavior using soft float might safer much slower,,
737,916ce6f1a9f7c85102a8c69f593b301c8df5d19d,aniel Wirtz <dcode@dcode.io>, 2020-09-09 03:40:09 +0200, , update reference type 3084 align current state reference type proposal remove nullref remove externref funcref subtyping literal nullable reference type represent null previously type nullref update test temporarily comment test relying subtyping,,
738,0fdcf5b51a0c8c379b2d3ad8262aa22bb234f0e9,aniel Wirtz <dcode@dcode.io>, 2020-09-08 20:18:24 +0200, , enable leaksanitizer 3106 lsan disabled ago due issue runner problem resolved indirectly meanwhile switching github action turned new problem slipped since due checking anymore fixed lsan enabled,,
739,cdd069b464c3c70c121398d8e3ae03cbe20b653b,aniel Wirtz <dcode@dcode.io>, 2020-09-08 19:25:30 +0200, , stay 3108 switch back standard support easily upgrade autoroller issue resolved atm chromium roller doe libc support,,
740,4a8d1abc61e657436616203a75935b3df8af515b,aniel Wirtz <dcode@dcode.io>, 2020-09-08 05:58:28 +0200, , fix relooper leaking branch 3097 fix relooper leaking branch optimizer skipemptyblocks refactoring api std unique_ptr ensured block branch shape upon adding relooper,,
741,a6816a287bd3f802cb6db51032e77145f036c8b7,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-07 18:29:33 -0700, , stack utils 3083 implement test utility manipulating analyzing new stacky form binaryen able express arbitrary stack machine code new poppy eventually replace stack new optimization pass built utility see 3059,,
742,775363a98002a14c64bdc4f8d591c6f37b1e1604,aniel Wirtz <dcode@dcode.io>, 2020-09-07 06:21:09 +0200, , upgrade 3103,,
743,8b436ba3046deb69e5b736a6cef003b8b0dde0c0,ax Graey <maxgraey@gmail.com>, 2020-09-05 04:30:25 +0300, , improve inlining heavyweight 3085 split mode option check loop indicate function heavy constant check call case call different would need logic avoid infinite recursion willing inling function call practically renames,,
744,44df23efd69fd2dd4c260755c82ddede226c40ff,lon Zakai <azakai@google.com>, 2020-09-03 16:11:05 -0700,3090, optimize mergeblocks caching branch result 3102 cache set branch node child help compute new result looking cache using data child avoids quadratic time common case post walk tower nested block common switch fix 3090 testcase pas minute second,,
745,132c72bb5e93591de34a9bfc267e4a2007908626,lon Zakai <azakai@google.com>, 2020-09-03 08:06:34 -0700, , remove old stack function stackcheck 3100,,
746,560baeea1810e7e4a0da6155be6e3dc9716a6758,lon Zakai <azakai@google.com>, 2020-09-03 08:06:22 -0700,3043, wasm emscripten finalize rename imported table 3101 minimizing wasm change leave llvm emits also remove renaming memory never needed llvm already emits memory see 3043,,
747,5effd0d06cceb25c75a561b505a4e6a23ce0bab2,aniel Wirtz <dcode@dcode.io>, 2020-09-03 03:30:31 +0200, , fix wasm2jsbuilder leaking temporary function 3098 fix wasm2jsbuilder leaking temporary function wasm2jsbuilder processwasm function created converted actually part module either need cleaned separately added module doe latter case useful,,
748,7c1253ee4513ec86e851536e29fd5f11d13b0b19,aniel Wirtz <dcode@dcode.io>, 2020-09-02 21:57:04 +0200, , fix leaking duplicate stub function 3095 fix makelegalstub forgetting delete stub function turned needed check whether stub needed otherwise skip creating redundant stub right away,,
749,7438b6cbcb9b194db59c0e5c497208ce57c964a9,lon Zakai <azakai@google.com>, 2020-09-02 11:54:54 -0700, , minify memory table well 3089 careful minify well stack pointer make sense dynamic linking run pas dynamic linking anyhow need proper name symbol case helping leftover early state useful optimization also important 3043 wasm backend export table much longer name emscripten table changing would regress code size small project land name matter minified anyhow,,
750,89020a0b4074d18c3fedd0aec2b2aa900c538a1d,lon Zakai <azakai@google.com>, 2020-09-02 11:23:01 -0700,11860, stackcheck check overflow 3091 see emscripten core emscripten 9039 comment valid stack area region memory previously checked new stack position prevented growing much stack grows worked growth small enough overflow become big unsigned value make check way requires know stack start still support old way passing growth limit remove roll principle done llvm side emscripten core emscripten 12057 sure detail easy fix get testing help later llvm work help emscripten core emscripten 11860 allowing clean fastcomp specific stuff test,,
751,ef7ab77b598885a88ca8eb5cc3b8485c3da84db9,aniel Wirtz <dcode@dcode.io>, 2020-09-02 15:57:43 +0200, , fix dataflowopts leaking temporary function 3093 fix dataflowopts leaking allocated temporary function created precompute expression body reusing body afterwards fine since expression arena allocated separately,,
752,949bf4916c6dcd9409888a677739c4c844bb9eda,aniel Wirtz <dcode@dcode.io>, 2020-09-02 03:28:47 +0200, , harden exnref literal 3092 make literal type immutable guarantee lose track literal exn changing literal type add assert guarantee create exnref literal without enforce rvalue reference creating exnref literal std unique_ptr avoiding redundant copy mean requiring std move,,
753,85234cb540c2b2863dfea6c20496dcb451df8889,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-09-01 15:55:58 -0700, , fix memory error 3088 first add explicit destructor call fix memory leak literal operator existing would silently dropped next change literal return value avoid use free bug interpreter surfaced new destructor call future improvement would switch using std variant fix 3087,,
754,fecfa92d71633f8bb28bb97a60adc9b54998456f,ax Graey <maxgraey@gmail.com>, 2020-08-28 16:23:32 +0300, , add binaryen get set binaryen c.h 3082 declaration previously missing causing respective apis exposed also make sure boolean returned api add test verify working,,
755,547e2be14d1f8f9b21905baee87b1946045b0fe7,ax Graey <maxgraey@gmail.com>, 2020-08-27 05:27:41 +0300, , add inlining option 3032 discussed 2921 allows inlining function identified lightweight include loop example,,
756,a61b9dff9be3da4d4c56f92f494e5f2914f32e1e,aniel Wirtz <dcode@dcode.io>, 2020-08-26 23:05:36 +0200,3012, add new compound rtt type 3076 extends compound type introduced 3012 representation rtt described proposal also introducing concept heaptype shared typeinfo rtt non functional change since rtt used anywhere yet subtyping rule updating xref alias left future work,,
757,9371352930ccfc1947dadb8130530db65608732b,am Clegg <sbc@chromium.org>, 2020-08-26 09:56:17 -0700,3043, wasm emscripten finalize add flag limit dyncall creation 3070 two new flag one completely remove dyncalls another limit signature contains i64 see 3043,,
758,18d678043438937222101290988ff3260053edcd,lon Zakai <azakai@google.com>, 2020-08-25 15:22:19 -0700, , safe_heap remove fastcomp prepare new emscripten approach 3078 fastcomp implemented wasm exported need anymore remove however want switch implementing wasm upstream part removing dynamictop_ptr silliness around link 3043 make support export prefix also make sure instrument function may contain memory operation safe_heap ify get infinite recursion safe_heap method need call,,
759,21a08f751bd641f9658455cbf44ecadbf895f5b2,ax Graey <maxgraey@gmail.com>, 2020-08-25 00:06:06 +0300, , avoid wasted work local 3060 add early return local optimization pass case local optimize,,
760,429b2611f3a159efe3b27f99be34d7aebe9bf45f,ax Graey <maxgraey@gmail.com>, 2020-08-25 00:03:28 +0300, , also drop size memory.copy 3075 fix bug side effect calculation size could lost,,
761,fa43b5070b9c46c88d725ceb76f61340324d2ea0,aniel Wirtz <dcode@dcode.io>, 2020-08-24 20:13:02 +0200, , add new compound signature struct array type 3012 extends type hash consing infrastructure handle type parameterized constructed type introduced typed function reference proposal non functional change since new type used anywhere yet recursive type construction also left future work authored thomas lively tlively google.com,,
762,d2e2521e55120465549ddbccc4660ff98e929008,ax Graey <maxgraey@gmail.com>, 2020-08-24 18:30:33 +0300,145, memory.copy use nop reduction 3074 according change spec webassembly bulk memory operation 124 webassembly bulk memory operation 145 unfortunately fold nop even memory.copy revert reduction nop flag,,
763,33ccea3bdcb82f638c888b36bb779291d04568f3,ax Graey <maxgraey@gmail.com>, 2020-08-23 22:32:12 +0300, , remove optimization memory.copy 3073 trap remove trap ignored handled properly revert consider option,,
764,1f439f7227f2d1f2d15d058ec5acdb41556cb9bb,ax Graey <maxgraey@gmail.com>, 2020-08-23 18:20:22 +0300,3038, memory.copy check size side effect well 3072 fix issue found fuzzer 3038 comment,,
765,fa83375d2bed8802de67e1689e056209561636e6,ax Graey <maxgraey@gmail.com>, 2020-08-23 08:41:33 +0300, , optimize bulk memory.copy 3038 replace load store size small constant remove entirely would nop,,
766,7d1c17479318609b4af564f8206c1e367fdf6eac,lon Zakai <azakai@google.com>, 2020-08-21 12:00:44 -0700,3043, remove old em_asm handling method 3069 flag doe nothing new change coming keep around move always new way thing update test see 3043,,
767,4548845a9689e235894e28174bf79358960ab29d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-08-21 00:27:09 -0700, , use fnmatch test filtering 3068 allows using wildcards simplifies code,,
768,47b6dd223d0e8c98f8b4261302c8c5752e59b8a4,outer van Oortmerssen <aardappel@gmail.com>, 2020-08-20 15:38:07 -0700, , test runner filter test name 3067,,
769,70e855b30114853b86f0947f49cb5a77ddad6aa9,lon Zakai <azakai@google.com>, 2020-08-20 14:00:18 -0700, , harmonize auto updater test runner wasm opt update .frombinary output 3066 confusing run binfmt update test checked check.py wasm opt instead make wasm opt update symmetrical,,
770,af87f23744477b034dcb1c59af2a1a208becab23,aniel Wirtz <dcode@dcode.io>, 2020-08-20 21:35:14 +0200, , use const modifier dealing type 3064 since make code clearer self documenting,,
771,a18d30fb42838f2e4002338d6e57a25322f9e422,aniel Wirtz <dcode@dcode.io>, 2020-08-20 01:36:17 +0200, , replace type expand iterator based approach 3061 lead simpler code prerequisite 3012 make type backed vector expand could return,,
772,b43807a835fc878e5eefcb8b4a18aff62d7f4540,lon Zakai <azakai@google.com>, 2020-08-19 14:55:46 -0700,3043, wasm emscripten finalize make em_asm modification optional 3044 wasm emscripten finalize renames em_asm call signature name actually useful emscripten benefit think optimized fastcomp upstream copied general form optimization em_js came along easier optimize anyhow make change optional leaf call emscripten need change handle simple convenience add flag minimize wasm change idea flag avoids needing double roll inconvenience change need happen tandem emscripten side flag reused later change similar one done remove flag note code ifdefed flag removed longer need old way thing new approach simpler binaryen side see 3043,,
773,11ec7c544e60944146e7e51b82c60bbc9d169af2,lon Zakai <azakai@google.com>, 2020-08-18 12:56:59 -0700, , dwarf optimize abbreviation index offset computation 3033,,
774,89c1b79edba9fbc9293138b01fab5dbff5893245,lon Zakai <azakai@google.com>, 2020-08-18 11:27:03 -0700, , remove test code cmakelists.txt 3056 apparently run anymore since referred file removed asm2wasm suspect changed keep running anyhow useful window lot testing,,
775,7703caff73f49471f2ef1a1a0a0a0d8aa7ebada7,aniel Wirtz <dcode@dcode.io>, 2020-08-18 19:56:43 +0200, , support fuzzing tree build 3050 run script fuzz_opt.py binaryen bin build bin opts ... fuzz tree build handle positional argument looking option removed instead raw sys.argv,,
776,77fe6ded258ce37bd3ea78fd43c8bc0ef639682b,lon Zakai <azakai@google.com>, 2020-08-17 19:13:42 -0700,11860, remove asm2wasm 3042 fastcomp removed emscripten need asm2wasm tool used compile fastcomp asm.js output wasm see emscripten core emscripten 11860,,
777,f5a8bfd25c83dc05d48cbc525c5e8ec2deb246b3,lon Zakai <azakai@google.com>, 2020-08-17 17:09:45 -0700, , make wasm emscripten finalize output optional 3055 help towards goal allowing emscripten always modify wasm link wasm emscripten finalize always wrote output doe asked either giving output filename asking text output noticeable change make error specify output ask text non error run print metadata write wasm,,
778,8139c9d99d4639a2173e51828a6e7bbae397fc2c,lon Zakai <azakai@google.com>, 2020-08-17 16:18:06 -0700,3044, add source test lld em_asm_o0 3045 wat file add file best guess look pretty close update lld test script test lld diff show handwritten wat different emcc lld emit think must switch em_asms variadic point currently would explain diff see discussion led 3044,,
779,825c6a8f218666e3c0dc190e4ef2c474ce34734c,aniel Wirtz <dcode@dcode.io>, 2020-08-18 00:35:35 +0200, , checkout python script keep shebang intact 3051 python script previously checked crlf line ending default window unless configured otherwise globally leading problem shebang correctly recognized mounted wsl trying run thescript.py without prepending python3 like .sh file bash already addressed nfc except help mixed setup,,
780,0fdbb1d33810d84bbd9a408b3486bff0d9015989,aniel Wirtz <dcode@dcode.io>, 2020-08-17 19:50:37 +0200, , prepare compound type single basic 3046 follow http github.com webassembly binaryen pull 3012 459686171 prepares new compound signature struct array type single basic includes renames type getsingle type getbasic nfc previously name representing implementation issingle excluded none unreachable getsingle i.e getsingle really getbasic note hypothetical type getsingle return valuetype anyway new compound type single map valuetype figured best skip implementing actually need mark location still assuming single type basic type suggested http github.com webassembly binaryen pull 3012 using macro get useful error start implementing new type quickly traverse affected location macro added used switch type.getsingle similar handled basic type nfc future also handle single type basic type dealing unary binary load store atomicxy instruction since deal compound type anyway,,
781,5f992018bf0e80a430d9a0169c7f8048e0a98b2b,am Clegg <sbc@chromium.org>, 2020-08-17 09:18:49 -0700,3052, fix installation phase 3054 followup 3052,,
782,d198941ef4aac4f721be556e63d9b12a6c89f62d,am Clegg <sbc@chromium.org>, 2020-08-17 06:29:47 -0700,3048, include full install release 3052 mean also include header library part install step fix 3048,,
783,85154a1ea62a6c5d4fa698497543e2fe943e55e7,aniel Wirtz <dcode@dcode.io>, 2020-08-16 22:12:18 +0200, , add bit hash_combine 3041 currently low bit hash guaranteed shuffled combining hash also add bit variant hash_combine including comment constant coming,,
784,72f07db50f68001a555bd647e240e0f552dd098c,lon Zakai <azakai@google.com>, 2020-08-13 19:28:32 -0700, , release 3040,,
785,902469769dee0a3f61e7e5aaca597d3cbac139ad,aniel Wirtz <dcode@dcode.io>, 2020-08-13 02:48:52 +0200, , refactor hashing 3023 unifies internal hashing helper naturally integrate std hash remove previous custom implementation computed hash always size_t introduces hash_combine helper fix overwritten partial hash relooper.cpp,,
786,f067a45c1e88124173af992e66a7125fe6ab366a,lon Zakai <azakai@google.com>, 2020-08-11 10:31:51 -0700, , skip test fail window enable rest 3035 let run test least platform add new function skipping test easy find test disabled window later fixing effort fix minor issue window like comparison ignore case rename pass test use dwarfdump contain dwarf name make easy skip clearer anyhow,,
787,454a1cb0b90397593472b9dd31c5418e23c40be3,lon Zakai <azakai@google.com>, 2020-08-10 12:45:23 -0700, , remove unneeded old binary validation test suite 3034 useful back many vms test confident binary valid wasm today lot testing vms particular test tends fail thing like reorder simd opcode constant fail installed path never reached doe happen locally,,
788,e80fc8098e31833894ddd243d6c29d4a6c9d6565,outer van Oortmerssen <aardappel@gmail.com>, 2020-08-10 12:42:08 -0700, , added header cmake file 3037 needed header show ide project effect build,,
789,e7d9111ad020d64e6094ebfb6c325d86ffbbdb5c,ikita Baksalyar <nikita.baksalyar@gmail.com>, 2020-08-10 19:28:57 +0100, , fix typo asyncify comment 3031,,
790,a355a7ea6151d4bd6dbb7895317fba0f3e8e422f,lon Zakai <azakai@google.com>, 2020-08-07 10:45:15 -0700,3007, dwarf fix debug_info reference abbreviation section 2997 previous code assumed compile unit abbreviation section order normally llvm emits thing 2992 testcase linking object file file somehow end different order proper fix track binary offset abbreviation abbreviation section section comprised null terminated list offset beginning offset match thing properly add testcase crash without prevent regression fix 2992 fix 3007,,
791,cdc38d3162eb62cb313704f264f17d230989084b,lon Zakai <azakai@google.com>, 2020-08-06 19:17:13 -0700, , fuzzing compare wasm2js interpreter 3026 comparing interpreter wasm2js done file opts ensures wasm2js right semantics need make sure wasm contain thing wasm2js semantics diverge normal wasm includes legalize i64 export remove operation handle full precision like i64 f32 force load store byte unexpectedly unaligned operation fail wasm2js also requires ignoring subnormal comparing vms interpreter,,
792,1b102f2ca87d54781b10110c375ea7d0cf5da837,lon Zakai <azakai@google.com>, 2020-08-06 19:16:20 -0700, , remove callindirects 3027 wasm2js doe full call_indirect support trap type incorrect wasm doe therefore pas need remove operation fuzzer find spurious issue,,
793,449e7a410bdaee17e139c8121cdf125d82a73dff,lon Zakai <azakai@google.com>, 2020-08-06 16:15:55 -0700,2942, fix msvc 3028 logic wrong msvc intrinsic return bit index number leading zero identical scanning forward reverse ... fix 2942,,
794,e89b40149ff6327df9dcc47043528b0ddef6c377,lon Zakai <azakai@google.com>, 2020-08-06 09:27:34 -0700, , asyncify verbose option 3022 log decision made instrumenting function help figure function instrumented get list might need test show print thing like asyncify import import change state asyncify call import change state due import asyncify call call import change state due call import asyncify call call call import change state due call call import test call call call import call call import call import import,,
795,550b36a1866a262f21c008a4d8cbaf65d14d0c01,am Clegg <sbc@chromium.org>, 2020-08-05 18:27:20 -0700, , refactor wasm emscripten finalize use single pas runner 2987,,
796,e93fbc0c117bcfe645bab1b30d5802e619e68abc,lon Zakai <azakai@google.com>, 2020-08-05 17:48:54 -0700, , add remove operation doe support 3024 lower replaces unsupported operation drop useful fuzzing compare correct semantics must avoid operation always accurate also fully document i64 f32 conversion issue,,
797,9c84d90712c1183f1d9ab3e5068d902eb7d627ea,lon Zakai <azakai@google.com>, 2020-08-04 16:14:14 -0700, , adjust fuzzing frequency 3021,,
798,a82ad5d060f29b68affefa2ca7a47bf2d9451af1,am Clegg <sbc@chromium.org>, 2020-08-04 14:16:01 -0700, , move pas nfc 3000 core logic still living used also followup figure make independent,,
799,d78c794ffd61946bf2035042cbda082f042272db,lon Zakai <azakai@google.com>, 2020-08-04 13:06:37 -0700,2879, refactor getmaxbits add beginning unit testing 3019 getmaxbits move around logic changed aside adding getmaxbits change bits.h whitespace help 2879,,
800,b44c1af1eb3c4900863b1b4e6b96713cbdb98609,ax Graey <maxgraey@gmail.com>, 2020-08-04 19:11:14 +0300, , modernize binaryen.js glue code 3005,,
801,daa442b40f92ee5117c9c7c391171c3304abc67e,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-08-03 13:48:10 -0700, ," implement prototype v128.load 32,64 _zero instruction 3011 specified http github.com webassembly simd pull 237. since prototype necessary benchmarking doe add support instruction fuzzer apis also renumbers qfma instruction previously used opcodes new instruction renumbering match renumbering llvm",,
802,79f2fe4eb4197b3f2a1f8ad0c3a34bf9c28149a1,ax Graey <maxgraey@gmail.com>, 2020-08-03 17:24:29 +0300, , use consistent backquotes instead ordinal quote grain readme 3017,,
803,ae56f9919a7263c7f8df00f0552ee0f302f8d286,lon Zakai <azakai@google.com>, 2020-07-31 15:45:47 -0700, , handle possible case i64 f32 f64 3008 previously handled i32 enough real world code people run wasm2js apparently place pas needed lower unaligned load individual load etc. unaligned operation fail apparently pretty rare unaligned f32 load example useful fuzzing wasm2js without compare result interpreter doe alignment properly,,
804,d09c607ff2f2c264546b7d4ea3593ae75a037750,lon Zakai <azakai@google.com>, 2020-07-31 12:35:01 -0700, , new dealign pas reduce load store alignment 3010 pretty trivial useful wasm2js testing assume incorrectly aligned load store still work need pessimistic alignment,,
805,26060b2cfe835e208d29e12d70a1a8eee70b3c14,athann <dominik@greysector.net>, 2020-07-31 17:03:41 +0000, , specify utf encoding instead relying locale default 3009 current locale may utf make spec names.wast test fail fix issue 3003,,
806,6733a055fd7873210b6f3b50f198ae05178ec8fb,lon Zakai <azakai@google.com>, 2020-07-30 11:55:17 -0700,1224, better const fuzzing 2972 tweak floating point number integer also float apply tweak power well found bug various codebases see webassembly spec 1224,,
807,f8cd0ad7e2aa389ac04c5978ed9d654bdcf1e22f,lon Zakai <azakai@google.com>, 2020-07-30 11:41:43 -0700,11743, wasm2js add export scope name resolution 2998 previously used top export top level function globals warning name collision meant export name collides must renamed mean externally visible oddness user applied function could annoying dangerous worst might confusing reading emitted seeing name_1 name_2 effect execution export fix add new export name scope separate function name export name however run another issue checking name conflict big set name scope foo would ever used one scope period appearance name wasm would get suffix result exported function foo name foo export foo name function foo_1 annoying fix keep set name scope mangling name care relevant scope except local name must also conflict function name would bad function foo bar var bar  function bar call parameter bar function name well could called scope mangling local scope also check top one well test output change due non overlapping scope specifically local label fine foo var foo  foo conflict fix emscripten core emscripten 11743,,
808,4253dae801b7f5526c28c4bbd8cda1d32067344d,ax Graey <maxgraey@gmail.com>, 2020-07-30 02:32:38 +0300,2955, fix build win32 3001 check x64 using non 32bit operation see 2955 context,,
809,95a33d7e3233c0f00b0043bb2225d514ae1cd10e,lon Zakai <azakai@google.com>, 2020-07-29 12:51:25 -0700, , wasm2js remove incorrect optimization 3004 optimizeboolean doe receive boolean done output flow boolean context,,
810,74f0eeff6f9cedf40e32e60595475ec243e8c35e,ax Graey <maxgraey@gmail.com>, 2020-07-29 20:33:43 +0300, , binaryen.js use ecmascript6 closure compiler 2990,,
811,0fa3b823576001e00fbb9e3e7c10ecb9a050c422,am Clegg <sbc@chromium.org>, 2020-07-28 17:29:48 -0700, , remove dyncall generated fpcast emu 2995 precursor moving dyncall generation pas seems caller want run dyncall generation either fpcast emu verified change doe effect emscripten wasm2 test suite,,
812,fceb216b9ad28dabc8c0fd5790b544d5d64acf64,lon Zakai <azakai@google.com>, 2020-07-28 11:12:15 -0700, , remove code around reinterpret value fallthrough 2989 turn reinterpret load different load forth reinterpret non load child load fallthrough good enough remove extra code reinterpret block extra code load   turned load flipped type,,
813,63d60fef3b07a343e21fb4bb8227c4e674633704,lon Zakai <azakai@google.com>, 2020-07-28 11:08:17 -0700, , fix side effect data.drop 2996 marked readsmemory could reordered various thing except memory.init however fuzzer found quite right global side effect memory.inits run later notice reordered anything might affect global side effect happening testcase added instruction may trap reordered data.drop may prevent data.drop happening changing global state may way optimize carefully would allow optimization rare instruction sure worth work,,
814,26f240c72dd62ed8a39f7466df99e51ec34487aa,lon Zakai <azakai@google.com>, 2020-07-28 06:58:34 -0700, , wasm2js remove boolean context 2993 usually fine since care value however cast turn incorrect fuzzer found 2147483648 2147483648 sum maybe look safe way remove big impact code size pretty rare e.g minimal runtime code size test broken,,
815,32ab8bac04af52121c6985a9a019c0fdec957f03,am Clegg <sbc@chromium.org>, 2020-07-27 22:23:17 -0700, , move stack check pas 2994 new pas take optional stack check handler argument name function call stack overflow argument passed trap,,
816,85e45a4371ef9e6b143e9675d5f52136ef881c12,ax Graey <maxgraey@gmail.com>, 2020-07-27 22:58:59 +0300, , minor improvement binaryen.js epilogue 2947 simplify stack allocation array generation logic,,
817,7ee1440d3fb3bca01df8213dae13a8ed1fd34bd6,am Clegg <sbc@chromium.org>, 2020-07-27 09:51:46 -0700, , wasm emscripten finalize remove exportwasistart 2986 needed since emscripten standalone mode always include crt1.o includes _start,,
818,109f9fef53c16afaf1ced4149c9b2536adca0c2c,am Clegg <sbc@chromium.org>, 2020-07-24 21:36:16 -0700, , move emscripten pic abi conversion pas nfc 2985 way happens order function module otherwise nfc,,
819,dad719e97b8461f31d29faebe2f15ad4843c0417,am Clegg <sbc@chromium.org>, 2020-07-24 11:53:51 -0700, , move pas 2984 first step making wasm emscripten finalize use pass,,
820,c0cbee736291e75bfe78c726de3fa065ee167a50,am Clegg <sbc@chromium.org>, 2020-07-24 11:53:28 -0700,2857, update flag used 2981 section added part 2857 needed fact change output test experimental pic needed day building shared library emscripten abi two change verfied following command generated local change i.e script test binaryen bin pwd binaryen bin pwd llvm build bin pwd emscripten,,
821,1f231c39e52eab712eda9bcbf540752b813b567d,lon Zakai <azakai@google.com>, 2020-07-24 07:12:14 -0700, , wasm2c fuzz support emit call hang limit function present 2977 may present reducing testcase reducer removed,,
822,0efd168824ac58abaf8ac484460a43241882dc93,lon Zakai <azakai@google.com>, 2020-07-24 06:47:07 -0700, , wasm2js fuzzing properly ignore trapping code 2980 wasm2js fuzzing compare output wasm would trap wasm2js trap far fewer thing wasm would trap like indirect call wrong type weird undefined thing previously running wasm2js trapped ignored output good enough need check wasm would exactly case mentioned wasm would trap wasm2js run wasm interpreter see happens see trap ignore everything function call onwards least let compare result previous call add amount coverage ignored entire output completely trap comparison also give better name js.js file wasm2js fuzzing creates,,
823,d25b4921d2de5218ac4107084274dbce68e95930,lon Zakai <azakai@google.com>, 2020-07-23 15:34:00 -0700, , dwarf reorder local binary writing 2959 binary writer reorder local unconditionally forgot made dwarf disable optimization pass reorder left active optimally writer would reorderlocals pas would look like need special logic tuple local anyhow expand multiple local amount local order change seems unavoidable atm test change mostly lot offset ignored new test test pass dwarf local order show issue print foo roundtrip showing reordering strip dwarf section print another roundtrip doe show reordering also make avoid stack writer dwarf present match source map prevent known bug simpler way debugging stack opts important combination,,
824,9bfade13c4cd5ebce7ae70681c655302f0f02ce7,lon Zakai <azakai@google.com>, 2020-07-22 18:25:56 -0700,2869, wasm2js coerce function pointer index 2979 emit function_table ptr function_table array rare case true handled differently typed array add would cast etc must explicitly cast  fix issue existed became problem due 2869 optimized selects form emitted true false function pointer could bad see http pipeline github emscripten core emscripten 6699 workflow 0c4da49c 75d0 4b0a 8fac 686a8330a3fe job 336520 new test wasm2js indirect output show happened verified passing emscripten wasm2js1 wasm2js2 test suite,,
825,3ac849384aa861382d2ca9636a89556e237e55d6,lon Zakai <azakai@google.com>, 2020-07-22 15:14:01 -0700, , fix i32.trunc_f64_u value round uint32_max 2976,,
826,d406654f7cd6249277a2eef542c883603b4b3b53,aniel Wirtz <dcode@dcode.io>, 2020-07-22 21:42:34 +0200, , extend apis 2586 renames following api function        add following api function                                                                                                                                                       also introduces wrapper api resembling class perform operation expression example var unary binaryen.unary module.i32.eqz unary.getop ... .op unary.setop ... .op ... unary.getvalue ... .value unary.setvalue ... .value ... unary.gettype ... .type unary.finalize ... usage wrapper optional one also use plain function var unary module.i32.eqz unary ... ... also add comment affected function case like generate api documentation point,,
827,c9ef77622de3bc0112fafd5ef0fd6f2eab8fe4fe,athann <dominik@greysector.net>, 2020-07-22 18:40:20 +0000,2970, disable nodejs warning test suite 2973 fix issue 2970 avoids exception run_command unexpected stderr running wasm2js test nodejs 14.5.0 due extra warning node test usr bin node experimental module loader builddir build build binaryen version_95 script test node esm loader.mjs a.2asm.mjs node 187299 experimental loader experimental feature feature could change time use node trace warning ... show warning created,,
828,a097820b6f0d2bc4d31ace2764f07bfa17c2cad8,ax Graey <maxgraey@gmail.com>, 2020-07-22 20:45:47 +0300, , optimize select const arm 2869  forth,,
829,86362be31f1ae2d65e03fcc28bbf6526e48242f7,lon Zakai <azakai@google.com>, 2020-07-22 06:53:15 -0700,1224, fix i32.trunc_f64_s value round int32_min 2975 see webassembly spec 1224,,
830,481e3eeade76a07a250979e2fbe0072d2662fe7d,lon Zakai <azakai@google.com>, 2020-07-21 13:47:41 -0700, , add helper template 2971,,
831,71c9572e8bdcf05306e6df1fb3bd1afc924d2f83,lon Zakai <azakai@google.com>, 2020-07-21 09:15:27 -0700,1223, fix i32.trunc_f64_s value near limit f64 representation 2968 see webassembly spec 1223,,
832,8da3c515bd13b3621047849548b7dc0c5586ec89,am Clegg <sbc@chromium.org>, 2020-07-20 21:04:33 -0700, , version 2967,,
833,2e18aff8c9d4867d9c8e7db81948a672c028348f,lon Zakai <azakai@google.com>, 2020-07-20 19:24:56 -0700, , wasm2js fix bug adjacent reinterprets 2964 i64 reinterprets lowered i64 pas i32s end wasm2js could break since i64 pas wasm2js run optimization optimizer aware lower i32 reinterprets call use scratch memory call side effect altering scratch memory optimizer saw i32 reinterpret moved across i64 reinterpret scratch memory call make bit reinterprets use separate scratch memory bit one mean never interfere,,
834,4b60d34d807bf803cefee8fd16b9000bcfc1bdc7,am Clegg <sbc@chromium.org>, 2020-07-19 21:57:37 -0700,2946, fix github action release 2965 also perform cmake install archive asset normal build mean include binaryen shared library platform use fix 2946 2962,,
835,224d1a113f4d7f112314a8d3f62b830d698d00b2,lon Zakai <azakai@google.com>, 2020-07-17 15:17:17 -0700, , randomize jit fuzz_opt.py test baseline optimizing compiler 2961,,
836,e2a1f74acbf69e155914e86ccd3dc6a7a483fe3c,g Zhi An <ngzhian@gmail.com>, 2020-07-17 11:32:04 -0700, , add v128 support instrument local 2960 instrument locals_all features.wast added test end file diff expected output smaller easier read otherwise constant change since order dependent,,
837,1c75f7de7e5f93373da34182a8729ace838ef7bd,lon Zakai <azakai@google.com>, 2020-07-15 11:49:21 -0700, , interpreter change nan bit dividing 2958 valid change nan bit case per wasm spec fuzz testcases fail optimization nan foo nan foo leave bit consistent simple valid optimization removing divide found fuzzer look like x64 float32 nan bit actually change see testcase seen two machine consistently normal apparently disable old wasm spectest updated upstream anyhow new test even strict verifies interpreter literally change bit,,
838,78e1e5fb58810fcf25ee9192397baa26e3ee017e,lon Zakai <azakai@google.com>, 2020-07-14 08:26:32 -0700, , wasm2c signal handler fix 2957 use wasm_rt_setjmp use sigsetjmp need also disable signal emcc wasm2c fuzzer emcc look like unix enters ifdef use signal wasm signal ...,,
839,8dc843d6e2eec2c20e34b8b97338cf35bb6a811d,lon Zakai <azakai@google.com>, 2020-07-11 08:21:31 -0700, , fuzzer cleanup use shared.v8 instead hardcoding string 2954,,
840,c243e2889faa939b655940da7b0b0e7b21cfd08b,lon Zakai <azakai@google.com>, 2020-07-10 17:45:20 -0700,11403, noexitruntime pas assume argument side effect 2953 bug present first version pas 2018 went unnoticed large project broke reason emscripten core emscripten 11403 nothing wrong probably luck started happen ...,,
841,bc4bb83d94a8a6240bead6ad9c18702bd9c331e7,lon Zakai <azakai@google.com>, 2020-07-10 10:19:09 -0700, , wasm2js sign extend support 2949 usual trick extend shift left sign bit small integer sign bit bit integer shift right spread sign bit return lower bit proper place,,
842,8092b1173717b55829374d5af5135287af75518e,lon Zakai <azakai@google.com>, 2020-07-10 10:18:56 -0700, , update readme include grain skip 2950,,
843,ec5a88c12bea053200c4529758cf1f5ce916e455,ax Graey <maxgraey@gmail.com>, 2020-07-09 03:01:56 +0300, , optimize booleans argument negative integer 2930 bool bool,,
844,18095a6c6030fb157f89889b8094eca0b3f654cb,ax Graey <maxgraey@gmail.com>, 2020-07-07 01:38:00 +0300, , avoid __popcnt __popcnt64 intrinsics msvc 2944 may need check cpu something else using special thing msvc safe avoid,,
845,49421e42a8082a1b75dda65411af3fb4b0ba9fe5,ax Graey <maxgraey@gmail.com>, 2020-07-07 00:17:02 +0300, , efficient isinteger util 2945,,
846,cd0cc95e2794375c463a69833b1ccc9cc96d597c,lon Zakai <azakai@google.com>, 2020-07-01 11:27:54 -0700, , dwarf ignore debug_loc span invalid 2939 span updated new binary span longer valid optimizer reordered thing much possible could flipped certain seems safer omit rare see larger testcases emscripten test suite,,
847,de9f46eb7d6ab13671019335d3dc5bd98179431c,lon Zakai <azakai@google.com>, 2020-07-01 11:27:16 -0700, , dwarf never emit mean empty span debug_loc 2940 mapping new position relativizing base end must emit something else would interpreted end list empty span actual value matter happen first span compile unit empty span case relative base compile unit would,,
848,ca89a9f2f59e991ea1a3341bd4a567b043699eb8,lon Zakai <azakai@google.com>, 2020-06-30 16:27:18 -0700, , dwarf always update .debug_loc base offset 2936 .debug_loc entry base value value list relative previously used keep base value keep thing similar original dwarf possible however optimization move code around value base base value could longer emitted skipped effect make always pick new base list allows base always work value doe mean change list quite lot extra meaning original base may lose dwarf spec seem indicate anything like however clear llvm always choose maximal base code doe llvm value seem oddly arbitrary also properly note base compile unit previously noted old value look new one new binary written,,
849,0d5eca6cf4f61798d0854226d2c78d2655e07c30,lon Zakai <azakai@google.com>, 2020-06-25 16:58:04 -0700, , dwarf track sequence handle reordering within one 2932 previously tracked sequence end instruction marked end keep marking way output however form sequence reordered need emit end give sequence number debug line emitting tell two adjacent line sequence emit end properly fix large partner testcase allowing llvm dwarfdump verify debug line pas change easier remove hackish handling prologueend reset instead emit set particular get rid reset state resetafterline call emitdiff function emits diff side effect marked const refactoring move needtoemit check earlier place instead noting line never emit even note  test diff seems large due one small change change later offset 0x00000831 dw_lns_copy is_stmt 0x00000831 is_stmt end_sequence note add end_sequence used entry right line marked end sequence new code emit unnecessary line previously emitted end sequence instead emit end sequence last valid line,,
850,eae2ee3dff0c68cfa783f45ee3ced06f4b5aa47c,lon Zakai <azakai@google.com>, 2020-06-24 12:55:15 -0700, , dwarf fix sequence_end emitting 2929 must emit even otherwise look like line omit end sequence important meaning dwarfdump warn without look like fannkuch0 test suite already example incorrectly omitted sequence_end need new testcase verified without e.g added lead wasm warns debug_line section reported valid dwarfdump,,
851,df660c241dcde92d634bb0704a449c8e1b4dd5a4,lon Zakai <azakai@google.com>, 2020-06-23 18:43:08 -0700, , wasm2js atomics support 2924 atomic load store rmw cmpxchg wait notify enough get asm.js atomics test emscripten test suite pas least subset entire pthreads suite,,
852,8540db83abf2044bbabb85e293e5b98a4bb4b9a8,lon Zakai <azakai@google.com>, 2020-06-23 16:36:58 -0700,11456, wasm2js avoid bit scratch memory helper wasm intrinsics 2926 code originally used memory location 1024 save bit data rust doe apparently refactored manually instead use scratch memory helper safer however bit function end legalized actually change interface module outside confusing cause problem optimization remove gettempret0 import see emscripten core emscripten 11456 instead use global i64 stash bit requires adding support copying globals intrinsics module otherwise seems simpler overall,,
853,baec7c0ff1ba483f38b4e8a13c5295ad6534e7d9,lon Zakai <azakai@google.com>, 2020-06-23 09:56:15 -0700, , fix breakage master colliding landing 2927,,
854,92423bebfc267373b28f5cf8c28e5711767adb4c,lon Zakai <azakai@google.com>, 2020-06-23 09:20:50 -0700, , asyncify liveness analysis 2890 find local live call site might pause resume set local need actually save load local alive call site function value need stay alive sleeping save local saved loaded 1.5 final code size,,
855,63e580f737352d877fb90b4efca2eee89d780755,lon Zakai <azakai@google.com>, 2020-06-22 18:07:35 -0700, , wasm2js start function support 2920,,
856,a3acdae356fc53eecdb52338d9bdd82310afa8a7,ax Graey <maxgraey@gmail.com>, 2020-06-22 22:15:53 +0300, , optimization pow two neg one const right 2870,,
857,721f15831ca547de98992f9ce6158d822b94d167,lon Zakai <azakai@google.com>, 2020-06-22 07:00:13 -0700, , wasm2js bulk memory support 2923 add special helper function data.drop etc. unlike wasm instruction big emit inline track passive segment runtime var memorysegments whose index segment index emit var bufferview even memory exists even without memory segment still need view order operate also add constant atomics useful future update constant list anyhow,,
858,711f8cb0ccc0de434a86c6c704acd5a13848f4db,lon Zakai <azakai@google.com>, 2020-06-20 14:24:50 -0700, , wasm2js testing improvement bulk memory 2918 necessary preparation later add bulk memory support wasm2js splitting next big fix logging print function wasm2js spec test extra space output console.log add automatically item assume output always empty test like bulk memory expected output rename test bulk memory.wast conflict test spec bulk memory.wast problem scan place emit file test wasm2js would collide name overlap extend parsing emitting assert line assert_return invoke foo i32.const i32.const also handle invoke foo i32.const i32.const without skip invoke line spec test normally fine bulk memory least side effect need must run later assertion,,
859,dd4c07c77ee11a6f89651990ad66fd96776b58db,lon Zakai <azakai@google.com>, 2020-06-18 12:46:55 -0700,2915, fuzzer ignore warning removed flag comparing vms 2916 fix 2915,,
860,f6eb790eec107064798b9e54552f1ef5966f6359,ax Graey <maxgraey@gmail.com>, 2020-06-18 04:13:59 +0300, , optimize bit count polyfills 2914,,
861,251a68b603080c86cd417db4f02801510376b279,lon Zakai <azakai@google.com>, 2020-06-17 08:06:17 -0700, , asyncify instrument indirect call function add list list 2913 manual tuning call using asyncify list want possible write function stack pausing work quite work right ignore indirect option would ignore indirect call time foo call bar indirectly indirect call instrumented check pause around even foo bar listed way make work except ignoring indirect call make add list list fully instrument function mentioned indirect call note direct call need special handling add direct call target add list list may add overhead existing user function instrumented anyhow also indirect call slow anyhow probably fine simpler way instead adding another list indirect call handling,,
862,139d0203d520ca589070ad5d5c2d8c08e7d96afe,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-06-15 17:21:58 -0700, , add expression dump use debugging 2912 found similar dump function extremely helpful debugging llvm rather implement locally whenever need would better utility upstream,,
863,d26f90bba43c1672232f51bc90c8194a31aea065,lon Zakai <azakai@google.com>, 2020-06-12 17:15:22 -0700,10746, asyncify add add list rename old list 2910 asyncify doe whole program analysis figure list function instrument emscripten core emscripten 10746 comment realized need another type list add list list function add instrumented function list definitely instrument use case link disable indirect call one special indirect call need instrument able add one much efficient assuming indirect call big codebase need instrumentation similar issue come add profile guided option asyncify discussed existing list good enough allow new option needed took opportunity rename old one something better consistent list follows old remove list previously blacklist remove function list function instrumented new add list add list note add remove clearly parallel old list previously whitelist simply replaces entire list function instrumented temporarily still support old name commandline argument avoid immediate breakage,,
864,49f2443338c00931d2f30f9d8c1706398bd5cb34,am Clegg <sbc@chromium.org>, 2020-06-11 16:18:54 -0700, , move optional metadata field last 2909 avoid conditional trailing comma,,
865,f813ac9fd58849043ed25c8543af6f6a884d506c,am Clegg <sbc@chromium.org>, 2020-06-11 15:07:55 -0700, , version 2907,,
866,353c73a09393d42d30ab046f3f3373a272113d26,am Clegg <sbc@chromium.org>, 2020-06-11 11:52:28 -0700, , default mainreadsparams true standalone mode 2906 process dce ing argument handling already handled different way standalone standalone mode entry point _start take args argv code included demand via presence absence wasi syscalls argument processing __wasi_args_get,,
867,b9feef2861b6f7286c6a8bf1a89c1699b2fcae01,am Clegg <sbc@chromium.org>, 2020-06-10 16:54:40 -0700, , support new clang mangling main 2671 plan standlone mode function like wasi sdk call correct main crt1.c non standalone mode still want export call main directly rename back main part finalize see http d70700,,
868,f21eb572dd4a30c27dfad813249c3d715b4d1bca,ay Phelps <hello@jayphelps.com>, 2020-06-10 16:34:56 -0400, , rename anyref externref match proposal change 2900 anyref future semantics changed represent opaque host value thus renamed externref chromium http issue detail 7748 c360 updated today yet released find mozilla bugzilla ticket mentioning externref immediately know updated yet http github.com webassembly reference type pull,,
869,6ec03c5c0c664660a88fdb61ac1d3bd1f8b14771,eejin Ahn <aheejin@gmail.com>, 2020-06-07 18:20:28 -0700, , prevent call sinking try 2899 expression may throw sinked try start try drop sinkables may throw,,
870,7fdec3735c712eb3588728c42bec4d34b82c5185,uj <jujjyl@gmail.com>, 2020-06-06 20:25:44 +0300, , micro optimize base64decode 2897 micro optimize base64decode update test expectation,,
871,037d7a5d04c376b2fa8fc26076af9579c3712063,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-06-05 10:46:23 -0700, , add prototype simd rounding instruction 2895 specified http github.com webassembly simd pull 232,,
872,0c58de1d350928e5e45594e4642349dc77697725,erek Schuff <dschuff@chromium.org>, 2020-06-03 14:07:41 -0700,2864, reland link binaryen tool dylib 2892 reland 2864 also ensure relative install rpath adding setup tool config cmake code cribbed llvm implementation,,
873,0dff178cb4467b07d7bd58713e80b46d15601757,lon Zakai <azakai@google.com>, 2020-06-03 06:41:55 -0700, , denan improvement 2888 instead instrumenting every local.get instrument parameter arrival function entry every local always contain naned value since would denan local.set efficient also confusing think also avoid anything value fall already fixed,,
874,501b0a08fafd2b4d2fbb5dd6a4320641bfc823b1,eejin Ahn <aheejin@gmail.com>, 2020-06-03 00:12:15 -0700, , prevent pop sinking simplifylocals 2885 prevents exnref.pop sinked separated catch example wast try  catch local.set exnref.pop call foo i32.const local.get     sink exnref.pop remove local.set local.get becomes wast try  catch nop call foo i32.const exnref.pop     move possible i32.const doe side effect incorrect exnref.pop doe follow right catch prevent patch check case cansink simplifylocals encountered similar case codefolding prevented every expression contains pop anywhere moved conservative add danglingpop property effectanalyzer pop enclosed within catch count dangling pop prevent pop moved sinked,,
875,3c4630bbe90752c7c720da4ad3805808852b8566,erek Schuff <dschuff@chromium.org>, 2020-06-02 17:31:08 -0700, , revert link binaryen tool dylib 2864 2891 reverts commit,,
876,f6b7f0018ca5ce604e94cc6cf50ee712bb7e9b27,erek Schuff <dschuff@chromium.org>, 2020-06-02 14:39:27 -0700, , link binaryen tool dylib 2864 building libbinaryen dynamic library also link binaryen tool reduces combined tool size mac 76m 2.8m,,
877,88fcf614c69c64691df9101192e277629e9ca124,lon Zakai <azakai@google.com>, 2020-06-02 14:22:25 -0700, , fuzzing run denan etc even given wasm 2887 fuzzer script given wasm create new one scratch still apply denan thing preserve property reducing without possible reduction start wasm nan lose property eventually end reduced testcase quite want,,
878,cb6b1a1f8c17341ca2e8c0f552b24b455f7e2c3b,lon Zakai <azakai@google.com>, 2020-06-02 12:57:04 -0700, , fuzzing asyncify avoid optimization nan 2881 already avoid comparevms asyncify issue also optimize binaryen run another different nan behavior,,
879,5c0b857fcc2fce78afc2f222f7d716be8c1949b2,lon Zakai <azakai@google.com>, 2020-06-02 11:23:39 -0700, , fuzzer keep denan etc testcase handler 2889 fuzz_opts thing like denan affect generation original wasm passing testcase handler meant addition random optimization picked also running denan etc confusing remove,,
880,1b8942ce72a25e1e3d63128660d76b5ecde8acfb,eejin Ahn <aheejin@gmail.com>, 2020-06-02 00:01:58 -0700,2783, fix sideeffect branch represent branch 2886 2783 sideeffects branch includes possibly throwing expression call enabled change sideeffects branch back include branch return infinite loop 2783,,
881,65d495f50a8e804c2d38505201ef5afc448dab86,eejin Ahn <aheejin@gmail.com>, 2020-06-01 18:25:57 -0700, , prevent call escaping try codefolding 2883 codefolding take expression may throw try scope patch add restriction canmove,,
882,beafd4721df6233556dfa330342ad10de7c0b9f5,eejin Ahn <aheejin@gmail.com>, 2020-05-31 19:54:30 -0700, , put validator test output test 2882 put output test test order pollute test directory validator test output file specified output file written test validator add a.wasm validator test command line way test make test directory,,
883,d0e1b15337e04eb16b356e3149dba1763da02b29,lon Zakai <azakai@google.com>, 2020-05-29 10:54:59 -0700, , refactor effect 2873 avoid special work analyze let breaktargets always reflect break seen might external check hassideeffects etc also internal refactoring renamings clarity,,
884,dfe473e6af0a31cad7a7b26f5dead358d9bbf536,lon Zakai <azakai@google.com>, 2020-05-27 13:30:12 -0700, , flat local.set value control flow 2589,,
885,c7f18b7fb34e2464f7a7beb31d8c8363e8597902,lon Zakai <azakai@google.com>, 2020-05-27 09:18:36 -0700, , denan pas 2877 move fuzzer nan logic separate pas cleaner also better since old way would nan reducer could generate code nan new way let nan reducing,,
886,616463d1f33804f639d6c32ad284e7280a0a7b71,lon Zakai <azakai@google.com>, 2020-05-27 08:32:34 -0700, , improve fuzzer message finding bug 2878,,
887,a57ff3c61125b890dbd5f4937e6c9ea26c830cfc,aolo Severini <paolosev@microsoft.com>, 2020-05-27 08:03:46 -0700, , fix dwarf location list updating nonzero compilation unit base addr 2862 .debug_loc section start end address offset location list relative address compilation unit refers location list problem function wasm debug updateloc compare offset actual module address expression function causing generation invalid location list fix trivial dwarf debug_loc section doe specify compilation unit associated location list entry simple workaround store locationupdater map location list offset base address compilation unit referencing easily calculated updatedie,,
888,25912210b32012bf64359a89baef4514a6b37205,lon Zakai <azakai@google.com>, 2020-05-27 07:53:18 -0700, , flatten fuzz fix unreachable special casing 2876 special casing unreachable could lead bad behavior nothing unreachable ended moving something side effect see testcase test pass flatten_all features.wast emits efficient code dce run earlier probably worth optimizing,,
889,31a8d2f19df620427a81f787ebaff7412964e538,lon Zakai <azakai@google.com>, 2020-05-27 07:52:56 -0700, , fuzz asyncify fuzzer exported memory skip 2874 need memory exported order read write stuff asyncify data structure,,
890,799df43f39f69fa79c5dc2b5c8b3a3af9be11d9d,ax Graey <maxgraey@gmail.com>, 2020-05-27 00:29:26 +0300, , add link github action tab badge 2875,,
891,a103439260c06f6d4dda8725ec68663d9097b580,ax Graey <maxgraey@gmail.com>, 2020-05-26 19:58:01 +0300, , update filer action badge 2866,,
892,d38d0b294ad22bcbc0874084a77b6d2e0fe25b7e,ax Graey <maxgraey@gmail.com>, 2020-05-26 19:55:30 +0300, , fix issue cleanup dsym script macos 2871 remove rmtree call check.py,,
893,bb0ff51597f254ab199f8ad5b63de7a4bbca2c17,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-22 13:19:47 -0700, , remove push 2867 push pop superseded tuples original intended purpose supporting multivalue pop still used represent block argument exception handling plan use push anything future,,
894,c193e5727d541ad04bb1601da92f2a86ae959cc8,erek Schuff <dschuff@chromium.org>, 2020-05-21 16:29:48 -0700, , update status badge,,
895,f0772d9af64b93405817717f8db8f280d06939d2,erek Schuff <dschuff@chromium.org>, 2020-05-21 16:00:59 -0700, , rebaseline test stack_save update 2865,,
896,e4d1e203c8bf8577e645dbf7ab265d1ec1c68bee,am Clegg <sbc@chromium.org>, 2020-05-20 17:00:36 -0400, , remove stacksave stackalloc stackrestore code generation 2852 implemented assembly part emscripten compiler see http github.com emscripten core emscripten pull 11166,,
897,677a9b8e29ac9088c361b9b20f6d513c76355106,eejin Ahn <aheejin@gmail.com>, 2020-05-19 12:52:46 -0700, , add support simplifylocals 2858 br_on_exn target block optimized separate return value handle simplifylocals br_on_exn rethrow trap arg null handle effectanalyzer fix nit,,
898,fc7346918f8d15ce45639472f00fea5fa8102ff0,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-19 10:17:07 -0700, , implement i64x2.mul 2860 instruction current spec proposal yet implemnented tool,,
899,417ccb54ccbb0776148f51cb2869c122826db6d9,lon Zakai <azakai@google.com>, 2020-05-18 15:40:10 -0700, , dwarf handle bad mapped base debug_loc updating 2859 turn testcase already wrong thing,,
900,86697b641baf3d54dd4c3e0331d5ccec47a33efc,am Clegg <sbc@chromium.org>, 2020-05-18 12:49:36 -0400, , machine generated update lld test 2856 change generated running script test binaryen bin pwd binaryen bin pwd llvm build bin pwd emscripten  binaryen bin binaryen bin lld,,
901,b3275eb89f086b3a2b0effbafa3b38b4f6ce4ef6,am Clegg <sbc@chromium.org>, 2020-05-18 12:15:41 -0400, , add additional test check stack overflow 2857 test verifies function llvm input source stack pointer manipulation get correctly handled wasm emscripten finalize check stack overflow,,
902,c451ca33ce6609d8fac0529a84c8396c80fdbfa1,lon Zakai <azakai@google.com>, 2020-05-15 18:10:16 -0700, , warn skipping debug location info 2855 old source map logic dwarf useful debug source map actually useful regular user see message plan since dwarf future,,
903,be61c69e3921d969fdb4743d31b289429aa280c0,eejin Ahn <aheejin@gmail.com>, 2020-05-15 13:29:40 -0700, , fix br_on_exn handling refinalize 2854 refinalize branch handling supposed executed branch replaced argument guaranteed taken also move visitbronexn base class doe depend anything runtime instance work effectively nfc visittry still implemented relies multivalue handling without create valid exception literal,,
904,954acedd317817708ad4a20a29bd6b879086396a,am Clegg <sbc@chromium.org>, 2020-05-14 19:34:02 -0400, , skip generating emscripten stack function already exist 2853 allow http github.com emscripten core emscripten pull 11166 land afterwhich completely remove function,,
905,8e73ee0d79c03468ca764adfa4ef869e53dcdff6,eejin Ahn <aheejin@gmail.com>, 2020-05-14 15:43:57 -0700, , make clause mandatory try 2851 previously able omit new syntax try body empty make clause mandatory try body empty folded text format  try  catch ...   suggested http github.com webassembly exception handling issue issuecomment 626696720,,
906,5db77a72a7c62d045e6650e96974fe1455fa1a1a,eejin Ahn <aheejin@gmail.com>, 2020-05-13 17:10:59 -0700, , add support mergeblocks 2848 add support throw rethrow br_on_exn mergeblocks unrelated instruction within block hoisted instruction br_on_exn requires special handling problemfinder unlike br_if exnref argument moved br_on_exn,,
907,5930ada5bee7061d8063f2638cdb1cb25dce5292,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-12 09:58:37 -0700, , implement pseudo min max simd instruction 2847 specified http github.com webassembly simd pull 122,,
908,a5a355747146d7725db7253478a028286dece715,eejin Ahn <aheejin@gmail.com>, 2020-05-11 16:13:17 -0700, , generate wasm reduce script given seed 2843 currently fuzzer generate script wasm reduce first discovers case seed given get bug report seed want reproduce situation still helpful fuzzer generates reduce script ,,
909,655fd6b5cd1e3dd7441139cfca95a905004d2209,aniel Wirtz <dcode@dcode.io>, 2020-05-11 20:48:51 +0200, , add apis copy expression 2840 api enables use case want keep original expression yet utilize pass like vacuum precompute evaluate without implicitly modifying original api expr module api module copyexpression expr,,
910,3de8c98b682e1347e5c50c58eaddc4b01f3e26ab,eejin Ahn <aheejin@gmail.com>, 2020-05-11 10:51:07 -0700, , make try body start 2846 webassembly exception handling decided put try body clause consistent catch  wast try ... catch ...     wast try  ...  catch ...    another upside change multiple instruction within try body longer need wrap block,,
911,91ec2ee5bedefc4736fcda78ae39298846aeeb41,eejin Ahn <aheejin@gmail.com>, 2020-05-11 10:50:11 -0700, , handle throw rethrow dce 2844 add missing handling throw rethrow dce set reachable variable false like branch,,
912,2c30ee408a72f5403fddeba8b4b856437c711727,aniel Wirtz <dcode@dcode.io>, 2020-05-11 18:34:51 +0200, , mention removed api tracing changelog 2842,,
913,3deec2f5312b6b2517731045a3479b3e30e93ed2,onstantin Podsvirov <konstantin@podsvirov.pro>, 2020-05-11 18:56:00 +0300, , cmake installation fix 2839,,
914,98b1e6a64e49bbec03dad679bcb716fd79dc13e1,aniel Wirtz <dcode@dcode.io>, 2020-05-09 02:44:23 +0200, , remove api tracing 2841 feature useful early day api shown usefuless quite significant maintenance burden make sense remove,,
915,f23bf9a4cd45b7ed03805f217f6c4f645a513822,aniel Wirtz <dcode@dcode.io>, 2020-05-07 21:58:25 +0200, , mimic 2838 turned behavior removed emscripten lately easily reproduced using modularize instead modularizing attempting undo good old wrapper code achieve,,
916,a489568e3641d2431eba94518add65fd928ab86d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-06 19:22:38 -0700, , move std hash specialization std namespace 2835 hopefully fix build problem older gcc reported 2827,,
917,edff400acf8d7d1fb26e373cbf1102438f4dee48,lon Zakai <azakai@google.com>, 2020-05-06 18:21:12 -0700,2831, fuzz_opt.py fix 2836 use emit target feature detect feature rename asyncify handler temp file happened notice overwrote file annoying fix 2831,,
918,7c35582d4a847f01d8eec3e44657897c0c46380f,lon Zakai <azakai@google.com>, 2020-05-06 17:49:55 -0700,2831, make reduction even easier fuzz_opt.py 2832 find bug need copy paste single line run reducer creates reducer script fill script doc used print console console output focused concise case running single line suggests work however found always one reason 2831 also add missing sys.exit without returned despite printing error failing testcase,,
919,4c9473a4bb6109c38ae669667036baedb090ef99,lon Zakai <azakai@google.com>, 2020-05-06 17:36:19 -0700, , fix emscripten test 1.39.14 fix lack 2834,,
920,5585d3a46f2b1daf74d4a7cf7b1d9a17b102b05c,eejin Ahn <aheejin@gmail.com>, 2020-05-06 16:38:37 -0700, , add interpreter support 2780 add interpreter support instruction add struct contains info thrown exception event tag thrown value union literal take unique_ptr need destructor copy constructor assignment operator literal union literal member trivially copied deleted,,
921,33ee4ccd4985ab134bf48dac4088131105290fee,lon Zakai <azakai@google.com>, 2020-05-05 17:11:55 -0700, , use emscripten latest tot removed use 2830 need find another approach trivial unbreaks,,
922,9d68b0cf137804003ab2cd58449dba2cb82b10e2,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-04 16:21:35 -0700, , remove constexpr cause gcc build fail 2828 gcc complains enclosing class constexpr member function literal type change remove constexpr qualifier fix gcc build fix 2827,,
923,c0eb93567e278fe86a6fd8fb0002db5984db1a84,am Clegg <sbc@chromium.org>, 2020-05-04 14:08:43 -0400,2825, use stripped release build distribution 2826 even though release default configuration make better explicit also window build need make sure pas config release actually building since project file build debug default regardless fix 2825,,
924,e093d14f85ef3b6fd2e7172ef3f548deb8003305,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-05-01 16:09:06 -0700, , final renumbering simd opcodes 2820 described http github.com webassembly simd pull 209,,
925,632351df3b92b9353b600c438a3e106ad4e86182,am Clegg <sbc@chromium.org>, 2020-05-01 15:18:39 -0400, , add stack pointer argument post emscripten pas 2823 allows emscripten statically set initial value stack pointer allow use avoid dynamically startup http github.com emscripten core emscripten pull 11031,,
926,107e2fd4814be2855cf111596f5dd69c026da55d,lon Zakai <azakai@google.com>, 2020-04-30 14:21:40 -0700, , fuzz_opt.py improvement 2822 run wasm2c2wasm large wasm file oom seen happen single wasm multiple engine specific engine bug sticking average wasm size seems change mean check run per wasm basis required refactoring mean may able run wasm one vice versa fix tiny nondeterminism issue iterating set tiny doc improvement error shown bug found,,
927,45ff1e4c306645bd95e69c777152bd6cdf2f85e4,am Clegg <sbc@chromium.org>, 2020-04-29 00:46:55 -0400, , stop generating wasm emscripten finalize 2819 list identical export list need output twice,,
928,e44b0c9225cf17d3c76cfb9e41a83eb0104f13e4,lon Zakai <azakai@google.com>, 2020-04-28 15:34:45 -0700, , simple reduction fuzzer found bug 2817 build recent work deterministic reproduction fuzzer testcases using remove old auto reduction code make something similar possible thing fuzzer script check idea simple run fuzzer script find bug print found run fuzz_opt.py run exact testcase making random choice made new addition  fuzz_opt.py wasm also add wasm file provided still randomly generate one fuzzer script later random number swap provided wasm let wasm reduce drive fuzz_opt.py whole extracting testcase command done fuzzer script print hopefully useful text find bug something like  found bug please report seed exact version binaryen found plus exact python version hopefully deterministic random number identical run testcase fuzz_opt.py initial wasm file used saved home username binaryen test original.wasm try reduce testcase wasm reduce home username binaryen test original.wasm command bash reduce.sh home username binaryen test t.wasm home username binaryen test w.wasm reduce.sh something like check input even valid wasm file bin wasm opt home username binaryen test t.wasm echo run command script fuzz_opt.py home username binaryen test t.wasm cat tail echo may want adjust printed example save stdout stderr separately print wasm reduce see think relevant part output make sure includes right detail preferably detail allow reduction raise risk reducing something quite want may also need add timeout testcase slow one  text full instruction run reducer work almost case see note corner case think safer run reducer automatically quick copy paste away user adjust reduce.sh script necessary well almost corner case fuzzer generator includes bound check wasm reduction might remove fix eventually making bound check addition pas run fuzzer generator meanwhile work around making reduction script look right thing i.e look failing return code enough removed bound check fail something else,,
929,1cd20951895a8e54ab52bdbf011296c666b0630f,lon Zakai <azakai@google.com>, 2020-04-28 11:35:23 -0700,2812, fix wasm2c loop 2816 refactoring loop 2812 wrong need loop export ignore non function one rewrote stress part,,
930,1d54be44e4ea261a457ea56bc9c444161ff4d89b,lon Zakai <azakai@google.com>, 2020-04-28 10:41:13 -0700, , remove wasm2c2wasm 2814 like parent wasm2c nan compare self optimization binaryen optimizer doe different thing llvm optimizer nan bit change,,
931,d8f9e9635ca7ca31d3dc02f3030c9fdaa453f967,lon Zakai <azakai@google.com>, 2020-04-28 09:51:14 -0700,2813, use detect feature wasm reduce fix 2813 2815,,
932,d9ec300d178d68f0a1dca587fa6f8f66e74acfae,aniel Wirtz <dcode@dcode.io>, 2020-04-28 04:59:24 +0200,2797, refactor 2804 tackle concern raised http github.com webassembly binaryen issue 2797 directly related http github.com webassembly binaryen pull 2702 reverting merging base instead adding common base precompute pas new api inherit functional change  current hierarchy http github.com webassembly binaryen pull 2702        contains functionality utilized new hierarchy         precompute pas api shared functionality moved new also renames previous better represent http webassembly.org doc module initializer expression make previous name usable new intermediate template fit perfectly also add comment answering question came recently old hierarchy http github.com webassembly binaryen pull 2702 comparison      ,,
933,1e6435ac012a20025ae499d498f2b8901e01c326,lon Zakai <azakai@google.com>, 2020-04-27 15:56:02 -0700, , emcc fuzzing followup 2812 avoid pas debug fuzzing emcc slow care clean loop,,
934,f53f88f5c9a9c80c253902f4301dbd4986c58510,am Clegg <sbc@chromium.org>, 2020-04-27 18:29:28 -0400, , version 2800,,
935,720aad93fcf3ce8b121ed73f2a8482a36b80fa55,am Clegg <sbc@chromium.org>, 2020-04-27 15:45:12 -0400, , fix binaryenjs testing 2810 test optional however run build found error order avoid silently failing,,
936,25c884e6b91e25e87a4fd6298bf511d17737b112,lon Zakai <azakai@google.com>, 2020-04-27 09:07:23 -0700, , fuzz frequency tuning 2806 hoc tuning node emit frequently fuzzer good thing like load store example far rare also easy adjust frequency add simple way adjust passing size_t weight node make number copy making likely picked example output comparison node  binary 281 365 block 898 649 break 278 144 call 182 290 call_indirect const 808 854 drop global.get 440 398 global.set 223 171 335 254 load local.get 429 301 local.set 434 211 loop 176 nop 117 return 264 197 select store unary 405 304 unreachable lot noise obviously large increase load store compared also add testcase random data typical size fuzzer run print metric might help get feel future tuning change affect frequency,,
937,12445969dc5b32cbe82b829fe8c061f5d98fcbe7,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-24 15:51:11 -0700, , remove fuzz binary simplify round trip 2799 since roundtrip pas general fuzz binary anyways also reimplements moduleutils clearmodule use module destructor placement new ensure member missed,,
938,204cc7b7172d665ee731171d20995edb5897ef7d,lon Zakai <azakai@google.com>, 2020-04-24 15:24:22 -0700, , wasm2c2wasm fuzzer wasm2c emcc 2791 add variant wasm2c emcc instead native compiler help fuzz emcc make practical rewrite setjmp glue use one setjmp wasm backend end linear work per setjmp quadratic many setjmps instead big switch loop construct around single setjmp,,
939,99708992211d82dd7f157b2dda6dd81e59671378,lon Zakai <azakai@google.com>, 2020-04-24 14:22:21 -0700,2807, fix loop name child different type fix 2807 2808,,
940,8e7a5c2bd2e8f296d840cc1ab76b1712609e71d8,am Clegg <sbc@chromium.org>, 2020-04-24 14:22:13 -0400, , trigger pull_request 2801,,
941,ed8fb551ab4f84e0ad3f4976fbb36a07b11f57a2,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-24 00:29:11 -0700, , emit section byte 2803 described spec,,
942,50fee5228acfbc3ffb882c5a1489475589d9fc1f,am Clegg <sbc@chromium.org>, 2020-04-23 18:25:06 -0400, , use alpine linux building official linux release 2796 alpine linux build exists produce portable binary used building release asset rather,,
943,2704a9d3b4225f16e2637f38ebb200d588fffd26,am Clegg <sbc@chromium.org>, 2020-04-23 16:21:35 -0400, , trigger branch push even opened 2793,,
944,420d0aea0b1e5cf0ccb3606af00abd558fe1714b,aniel Wirtz <dcode@dcode.io>, 2020-04-23 21:44:36 +0200,2788, fix issue found fuzzer 2790 fix 2788 found fuzzer introduced 2702 turned incorrect usage std move removing std move introduced better safe sorry also fix problem spotted debugging,,
945,2a5d77d7f71a4c48804e83c10129b8c0b53e1b32,hao Cheng <cheng.shao@tweag.io>, 2020-04-23 19:51:05 +0200, , add snake_case method name returncall api 2795,,
946,127d9b4a898a19aa626a5c2418573eea69af7ed6,lon Zakai <azakai@google.com>, 2020-04-22 16:23:15 -0700, , emit text pas reduction text mode 2792 without emitted binary confused size comparison reducing smaller size usually good sign also provides deterministic way know stop infinite loop keep going size shrink,,
947,f419cb797b740e5a1ced7104defa4caf697a4574,am Clegg <sbc@chromium.org>, 2020-04-22 18:44:12 -0400, , avoid downloading cmake unnecessarily 2789 also fix typo,,
948,35a36b15e1bf16b78a6f3e174543681748295e81,lon Zakai <azakai@google.com>, 2020-04-22 12:11:46 -0700, , fuzzing wasm2c integration 2772 add support fuzzing wabt wasm2c binji wrote basically compile wasm compile native executable custom main wrap around executable print exactly wasm run either binaryen interpreter wrapper wasm word compiling wasm another way run wasm main reason want fuzz wasm2c another option fuzzing emcc latter fuzz wasm opt quite lot fuzz non wasm opt part emcc using wasm2c nice since starting point always wasm file mean use tool like wasm reduce forth integrated fuzzer also refactors fuzzer harness little make easier add vms run wasms autoreduce running testcase hit developing,,
949,d8b414d22b032efc87dbceb50abef8bce5ce8266,hao Cheng <astrohavoc@gmail.com>, 2020-04-22 19:58:33 +0200, , add api 2779,,
950,a1d562a89423de2b27f808749b4771e35c34622c,am Clegg <sbc@chromium.org>, 2020-04-21 21:53:33 -0400, , fix window asset upload 2785 also add upload shasum file,,
951,5fbbdbf8601811f57b880fa02861b7f602fe4b83,am Clegg <sbc@chromium.org>, 2020-04-21 21:21:23 -0400, , also update internal name 2782 without change import get renamed internal name since internal name one end name section mean rename effecting name section,,
952,086bee68e4f4bef146970f8dc6740356473c8bed,am Clegg <sbc@chromium.org>, 2020-04-21 18:10:54 -0400, , clang tidy requires cmake run 2783 somehow missed transition github action also forgot include gen parser test,,
953,8e017e9fe58687251275d6fe8a1a0b23813c3b1e,am Clegg <sbc@chromium.org>, 2020-04-21 13:49:45 -0400,2356, convert travis appveyor github action 2646 intention move away travis appveyor become slow see 2356,,
954,483d759230f4693abfca3a74a97b1c1db6d2a0d6,aniel Wirtz <dcode@dcode.io>, 2020-04-20 23:01:26 +0200, , refactor expression runner used via apis 2702 refactors precompute pas expression runner base class also used via apis also add option populate runner known constant local global value upfront remembers assigned intermediate value well traversing function requested,,
955,1dc820c913712a2c50d05caee77e90a7ec49d2e1,am Clegg <sbc@chromium.org>, 2020-04-20 16:06:39 -0400, , version 2778,,
956,4b04ef114a53fcaba27e9000ffb698fe898d1a37,am Clegg <sbc@chromium.org>, 2020-04-17 17:23:22 -0400, , remove non x86_64 architecture build travis config 2777 working since 1554 switch using alpine docker image rather alpine sysroot install script honor arch environment variable nobody noticed last year releasing copy x86_64 binary e.g file actually contains x86_64 binary http github.com webassembly binaryen release download version_91 binaryen version_91 aarch64 linux.tar.gz really job release binary different architecture let downstream distos node ship 32bit x86 linux image,,
957,a308fc3239091c7dbfac1530f0c70eada740fe0a,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-16 19:30:06 -0700, , fix issue type feature 2773 emit exnref part subtype exception handling enabled fuzzer correctly report funcref nullref require reference type enabled enable multivalue normal feature fuzzer possibly fix 2770,,
958,e30f52e59d2fdb578030685c19a60df5774e366e,am Clegg <sbc@chromium.org>, 2020-04-16 22:06:03 -0400, , report error script clang tidy diff.sh clang tidy found 2775,,
959,727c91af3bc1a317107fbffb0e7bab778dc3f5b6,eejin Ahn <aheejin@gmail.com>, 2020-04-16 19:03:55 -0700, , dummy interpreter support 2774 add dummy interpreter support instruction mainly fuzzing plan make interpreter support instruction correctly using asyncify future also support correct behavior need literal exnref type added later currently dummy implementation doe try catch end run try body ignores catch body throw trap retyrow trap nullref argument correct behavior based spec trap otherwise dummy implementation br_on_exn trap nullref correct behavior otherwise assume current expression match current event extract literal based current type also add interpreter test test basic dummy behavior deleted test one tested ,,
960,c9162258a5364f31907786078685b567878c79db,lon Zakai <azakai@google.com>, 2020-04-16 12:31:49 -0700, , disable multivalue fuzzer clearer way 2771,,
961,0d5c9dc7b8f704283b2586d88385709326a1c81d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-16 11:40:16 -0700, , validate tuples multiple operand 2768 previously unwritten unchecked assumption,,
962,5177b9180f978baa94a7297111ac60ec4b0251cc,lon Zakai <azakai@google.com>, 2020-04-16 10:40:16 -0700, , fix oob fuzzing 2769 weird change fuzz code allow bound operation oob check generated build changing remove check fuzz time without oobs really hurt,,
963,2302955b17104978453e84b0af3d5db490fb16c5,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-15 18:42:19 -0700, , emit tuples fuzzer 2695 emit tuple.make tuple.extract multivalue control flow tuple local globals multivalue enabled also slightly refactors top level makeconcrete function selective try make based requested type reduce number trivial node created requested type incompatible requested node,,
964,598b3dffae13a9fc823257d668972c3b4890b2d4,lon Zakai <azakai@google.com>, 2020-04-15 15:06:08 -0700,2760, enable cross fuzzing related improvement fuzz_opt.py 2762 main benefit comparing vms instead comparing opts comparing vms little tricky since room nondeterminism result printed annoying thing work well earlier run thousand iteration without finding issue binaryen interpreter fixing various issue last day found 2760 2757 2750 2752 aside main benefit ended adding improvement make practical testing randomize global fuzz setting like whether allow nan bound memory access necessary since disable cross comparison nan enabled better logging statistic like many time handler run remove redundant handler look like past refactorings longer adding value deterministic testcase handling run e.g fuzz_opt.py run one testcase exactly one run without argument run forever fails fails print easily reproduce guess binaryen python sure python deterministic rng change version build upgrade python,,
965,e04d25e2e6cab2df0dfda5e4a206714a202313bc,eejin Ahn <aheejin@gmail.com>, 2020-04-14 17:27:05 -0700, , fix reuse constant node precompute 2764 previously tried reuse const node precomputed value constant node two kind constant node refnull reffunc reuse interchangeably meaning try reuse const node value hand refnull correctly check type node try reuse type node match fix 2759,,
966,359525bc5c04798e394a6e0a48c40fbfed7366db,eejin Ahn <aheejin@gmail.com>, 2020-04-14 15:51:48 -0700, , note removal catch body vacuum 2765 certain try body doe throw replace try catch try body case notify type updater catch body removed parent type updated properly,,
967,ec76e9e8922a55b521c8b72ca970c7aee7b6d44a,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-14 12:22:03 -0700, , fix build sprinkling brace 2766,,
968,9ee2706337a48c503492d8acb9c4117a017f2b87,lon Zakai <azakai@google.com>, 2020-04-13 19:11:55 -0700,2755, fix auto updater spec test 2755 2763,,
969,1bddd6be5416be08d92d0b4a8248decb400b60e0,lon Zakai <azakai@google.com>, 2020-04-13 15:57:51 -0700, , fix atomics fuzz bug interpreter 2760 working bring fuzzer comparison vms comparing binaryen interpreter found atomics issue atomic operation including load store must aligned trap atomicrmw wrong thing operand atomiccmpxchg must wrap input proper size load byte look byte expected value atomicwait atomicnotify must take account offset also simdloadextend missing confusing code two existed one compute offset one doe renamed one without explicit easily see call one instruction without offset case memoryinit memorycopy memoryfill atomicnotify must check address see trap even though actually multiple thread running atomic load fewer byte type always unsigned extension signed,,
970,c16bfeebb5879e9512f2bbf7d611b3b1e0be7dee,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-13 14:02:58 -0700, , use direct pointer type 2745 instead using index global interned type table mean lock never needed access expanded type type lock acquired complex type created real world wasm2js workload improves wall clock time machine core make traffic type lock entirely insignificant  core real 0m6.914s user 184.014s sys 0m3.995s core real 0m25.903s user 0m25.658s sys 0m0.253s  core real 5.349s user 70.309s sys 9.691s core real 25.859s user 25.615s sys 0.253s,,
971,c45ae16497ea76ad24982813cace1927565b0d45,lon Zakai <azakai@google.com>, 2020-04-13 11:40:43 -0700, , update flag 2754,,
972,e0716f53362f233662537a27f2165ed9dbb301e3,lon Zakai <azakai@google.com>, 2020-04-13 11:37:29 -0700, , add deterministic flag wasm2js fuzzing 2757 wasm2js ignore thing trap wasm really handle like load memory bound would trap wasm want emit bound check load wasm2js focus program trap however annoying fuzzer turn behavior place wasm would trap deterministic wasm would trap wasm2js would trap behavior wasm2js optimization would also trap behavior produced false positive fuzzer might annoying manual debugging workaround add deterministic flag wasm2js try deterministic doe case wasm would trap handle case int division trap wasm without flag could different behavior wasm2js without opts see detail patch,,
973,585f8174c1339d7ac5eeceed89d2ac30e4ba8826,eejin Ahn <aheejin@gmail.com>, 2020-04-13 10:40:46 -0700, , fix invalid index checking readimports 2758 fix 2751,,
974,13efc1eca8eebd93aae5ea0e96ef84282f56c822,lon Zakai <azakai@google.com>, 2020-04-13 10:17:53 -0700, , speed wasm reduce test 2756 test want see reducer remove significant amount code changed file 3.6k 200 byte enough see effect much faster,,
975,d7d251b75c46a814b764ff2ded0d9c5a275a7e46,lon Zakai <azakai@google.com>, 2020-04-13 07:58:10 -0700, , use std cout interpreter trap logging 2755 used std cerr workaround logging interfered spec testing easy enough filter stuff spec test benefit using std cout see test output relevant test output side channel debugging rest interpreter output std cout trap std cerr might end order etc. best keep together allow easier addition test fuzz testcases,,
976,53c70d9ccd56d9d28eb65ccc5954024b6b0e921b,lon Zakai <azakai@google.com>, 2020-04-12 12:49:29 -0700, , fuzz fix simplifyglobals nopping 2750 actually nop forgot value may side effect drop opts remove later possible,,
977,69aa3893b189369f9a8f94384eb4a913f17fd57f,eejin Ahn <aheejin@gmail.com>, 2020-04-12 11:48:40 -0700, , remove duplicate type prefix nfc 2753 seem accidentally introduced enforced use type type name 2434 way til actually compiles know  type type type type type type type type none ,,
978,3f3e17788c28d2cb069548acbe68d8095305f87d,lon Zakai <azakai@google.com>, 2020-04-12 09:31:02 -0700,2749, legalize return_calls properly 2752 fix 2749,,
979,6d4974135a9409a75822a0fe9c501676234c1f37,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-10 17:09:24 -0700, , fix multivalue event fuzzing 2748 fuzzer previously unconditionally emitting one event parameter supposed meant multivalue event emitted multivalue enabled,,
980,7126b2c70d2e087c0e6af463f963d6e84326ecb6,am Clegg <sbc@chromium.org>, 2020-04-10 19:48:09 -0400,2741, remove redundant vacume pas followup 2741 2747 based freedback 2741 look like use existing simplify globals optimizing pas trigger cleanup need,,
981,6a51af5d858b6d3378749d17065c44cf50b62a26,am Clegg <sbc@chromium.org>, 2020-04-10 01:01:23 -0400, , remove writes globals never written 2741 since global never read know write operation unobservable,,
982,1b56c2b341e838656adca9a7101d824ed757d6ad,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-09 17:42:36 -0700, , optimize uint32_t type constructor 2744 avoid taking type interning lock look size provided corresponds statically known type eliminates considerable amount unnecessary lock traffic using apis,,
983,c2760038591df9e67b49bb71c9aedb70eadb5b11,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-09 16:42:42 -0700, , handle tuples asyncify call support 2743 instead adding globals hardcoded basic type traverse module collect call type might need handled emit global adapted 2712,,
984,1cfaf2e723968443611b06895212d4328b4881de,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-09 11:57:19 -0700, , nfc update readme discus tuples rather push pop 2722 general multivalue stacky code represented using tuples push never used removed pop used exception catch block,,
985,e4ae33c93b3834ad06bc88b3a7649f57eabb242f,am Clegg <sbc@chromium.org>, 2020-04-09 14:50:51 -0400, , remove old setup.cfg 2736 believe originally used drive pep8 called pycodestyle flake8 still use configured via .flake8 file clear used since warning suppression wrong use space indent,,
986,9c75b8f8ef58347f2fab44463f9a65eb37212742,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-09 11:41:40 -0700, , remove function index printing 2742 binaryindexes used two place print.cpp wasm binary.h seem great fit module utils.h change move wasm binary.h remove usage print.cpp mean function index longer printed limited utility source annoying noise updating test anyway,,
987,b3d79f406ab80d5f36995e03385df3903e52f46e,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-09 11:40:07 -0700, , performance optimization type 2733 cache type size unused bit type rewrite type method avoid unnecessary call expand type known basic non tuple type eliminates locking traffic reduces wall clock time cpu time percent one real world program machine,,
988,0dcb68967dfcbd0d839563b848cb494b475ed15a,am Clegg <sbc@chromium.org>, 2020-04-09 13:51:07 -0400, , move script script directory 2735,,
989,9d572bd24d4e9109fad70dbbd29bb04b2ea47113,am Clegg <sbc@chromium.org>, 2020-04-09 13:50:42 -0400, , remove executable bit test script 2734 driven two top level script check.py  broken run isolation due relative import rule python3 e.g  script test binaryenjs.py traceback recent call last file script test binaryenjs.py line module import shared importerror import name shared __main__ script test binaryenjs.py ,,
990,88b2b6411e13ed08d3d10fd77749d8e536d71c4c,am Clegg <sbc@chromium.org>, 2020-04-09 13:50:11 -0400, , enable color diagnostics ninja gcc 2739,,
991,f5df71a54ffdf1145dbd679726afa9b89321ba30,am Clegg <sbc@chromium.org>, 2020-04-09 13:49:51 -0400, , factor wasm_opt testing nfc 2737 also factor auto updating binaryenjs testing life alongside actual test code,,
992,9ee5f403d1f434a0ea19b140ee4c33fb51f62fcd,lon Zakai <azakai@google.com>, 2020-04-09 10:34:09 -0700, , fix old misleading comment 2738 skip,,
993,d81236ad837c5f64366633184fa0864966af6fcc,am Clegg <sbc@chromium.org>, 2020-04-08 21:45:39 -0400, , remove reference vanilla emcc 2731 look like part vanilla test removed back 2482,,
994,dc5a503c4d54dc71ab46535c1966540785562dd7,am Clegg <sbc@chromium.org>, 2020-04-08 18:38:27 -0400,1677, remove .gitmodules file 2732 two entry removed 1677 2118,,
995,2f9d019267bd792e1df09a00648eb4d8edb39ac1,lon Zakai <azakai@google.com>, 2020-04-08 13:59:21 -0700, , avoid main module possible 2721 realized valid optimization main side module symbol might appear like rtti weak symbol need one appearance win doe optimization main module global appears main module avoid import instead compute location directly module since win module symbol anyhow,,
996,95a66b5b3ad34b47703131207bbab739366408c4,lon Zakai <azakai@google.com>, 2020-04-08 09:47:26 -0700, , run reorder local wasm2js 2729 coalesce local nonlinear number local greatly beneficial reorder local drop unused one end automatically default pass already wasm2js doe custom work missing change pas take 10x time poppler flatten flatten simplify local notee nostructure approximates wasm2js doe,,
997,0a44e995d9b09812260ca46add0f823820d4cc31,lon Zakai <azakai@google.com>, 2020-04-08 09:43:35 -0700, , fix reorderlocals handling local name 2728 think history localnames used vector made map update pas ... rare case could end emitting wrong stuff,,
998,7531e7b46c2889bd8a1cbe9227a1e306f6c7c0aa,lon Zakai <azakai@google.com>, 2020-04-08 09:23:21 -0700,2727, work around compiler issue macos 2730 post commit mac bot github failed compile 2727 undefined symbol architecture x86_64 wasm reorderlocals unseen referenced wasm reorderlocals dowalkfunction wasm function symbol found architecture x86_64 clang error linker command failed exit code use see invocation seems odd defined like static const index unseen perhaps hitting weird compiler bug anyhow use enum safe also clarity switch unseen value,,
999,c8a1489f2720ccde4aa79f68f4bb75cc1b20d579,lon Zakai <azakai@google.com>, 2020-04-07 19:53:15 -0700, , optimize reorderlocals map vector 2727 original code quite old guess assumed use map really huge amount local end mattering lot make pas faster poppler flatten flatten double flatten creates lot new local generally similar wasm2js doe,,
1000,e77d85fecd2bfe707f3e9b7ab84cfd6744bdc7b7,lon Zakai <azakai@google.com>, 2020-04-07 17:55:40 -0700, , optimization main module 2720 weak symbol interposition etc mean replace call symbol module chance another symbol would overridden side module risk exists make stop main module loaded first symbol provide win others anyhow,,
1001,eaa7240105811ffa565dc97768f1399e7855744b,lon Zakai <azakai@google.com>, 2020-04-07 11:59:29 -0700, , wasm bigint support wasm emscripten finalize 2726 wasm emscripten finalize given bigint flag using bigints side need legalization since i64s bigints,,
1002,ac8b0b71219a1c96d3dab4c9eeddbb4c8401cd1d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-03 23:32:48 -0700, , emit multivalue event fuzzer 2723 unless multivalue feature enabled validation event recently changed disallow event returning multiple item unless multivalue feature enabled fuzzer updated accordingly fix glitch,,
1003,80c5164e1f50ed26e6fab373a563fd7a84135429,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-02 10:36:19 -0700, , tuple globals 2718 since easy support tuples asyncify call support using temporary function decided allow tuple typed globals add support parsing printing lowering interpreting tuple globals also add validation ensuring imported exported globals tuple type,,
1004,702b99508487bc5f56c409d890644b3b9212ae81,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-04-01 15:24:32 -0700, , revert using globals asyncify call support 2719 reverts commit decided would easier allow tuple typed globals make call work reverts change keep small improvement made clarity,,
1005,a32102c7dd7b321330c6cce4d0e3b16e7187a007,lon Zakai <azakai@google.com>, 2020-03-31 15:20:50 -0700, , avoid unnecessary side module 2717 update dylink section properly optimization side module main one module provides function call method startup instead add table use relative offset table base fix issue table segment initially code added offset right instead __table_base import use offset abi specific wasm emscripten finalize leaving tableutils assert singleton segment add test wasm file dylink section lld test,,
1006,d8179402b3bb991f336b19bcca8ccbc60c842166,lon Zakai <azakai@google.com>, 2020-03-30 11:14:29 -0700, , represent dylink section update 2715 update wasm emscripten finalize append table,,
1007,2b758fbdc46fc8fe5241bcf1ba5bbd81e6d556ed,eejin Ahn <aheejin@gmail.com>, 2020-03-27 21:51:40 -0700, , error used unsupported code 2713 call fatal instruction used unsupported code currently instruction unsupported flatten rereloop dataflow using pass,,
1008,d595a45b66cbb4d59472d2954131ee1f4cf6ad8e,lon Zakai <azakai@google.com>, 2020-03-27 17:25:49 -0700,10741, avoid access main_modules 2704 depends emscripten core emscripten 10741 ensures table index unique guarantee main module add function pointer table use based index loader see table give module identical function pointer function ensuring function pointer equality avoids calling function startup main module function slow still call thing import outside anything put table depend loader suspect also done side_modules want try much,,
1009,9101f65c7b18ab607c472a3d50b52db66497402f,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-26 16:33:35 -0700, , tuple operation apis 2711 add function creating inspecting tuple.make tuple.extract expression apis,,
1010,ce6ae49863d7d2da54aabf9637ee299659f4bd0c,aniel Wirtz <dcode@dcode.io>, 2020-03-26 17:41:14 +0100, , use emscripten upstream compiling binaryen.js 2488,,
1011,91061dace07b74e0e1f9b44a81354af1882ca4bb,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-25 17:31:40 -0700, , add tag .gitignore 2710,,
1012,5ddda8d2e6a3287ff6adcd69493e1e1c8b6c3872,lon Zakai <azakai@google.com>, 2020-03-25 08:51:31 -0700, , convert asyncify fake globals fake call nfc 2706 easier extend tuples also add clarifying comment,,
1013,e01e7e9db72eeb688ecb774b58416521e320c3fe,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-24 19:08:26 -0700, , disallow tuples mvp 2707 previously multivalue feature enabled tuples control flow position tuples elsewhere require multivalue feature however allowing tuple operation local mvp module mean pass tool need support tuples even high priority support multivalue allowing tuples mvp module provide much value change disallows entirely unless multivalue enabled,,
1014,e7315448c95d248fb1bcdb869a39da30974f73ea,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-24 16:13:53 -0700, , fix event section ordering 2708 version pulled jsvu recently updated expect new ordering event section fix,,
1015,18fcad6df1edb3589759018da172c03414cfc561,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-23 14:29:49 -0700, , allow subtypes tuple operation 2700 optimization may replace tuple element simpler value simpler value may subtype original value tuple operation continue validate without refinalized case,,
1016,03ae7fcbfc5cedefd25c2414616cb1d3f77ab51b,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-20 16:31:16 -0700, , simd integer bitmask instruction 2703 add full support i8x16 i16x8 i32x4 .abs instruction merged simd proposal http github.com webassembly simd pull 128 well i8x16 i16x8 i32x4 .bitmask instruction proposed http github.com webassembly simd pull 201,,
1017,39fda77da51f83b200fc63bbfbc4dd2ccbfc2388,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-18 10:09:14 -0700, , emit unreachable tuple.make properly 2701 previously thought unreachable tuple.make instruction require special unreachable handling consider following wast  module func foo tuple.make unreachable i32.const     validates expression body unreachable emitted binary becomes  unreachable i32.const  doe validate end i32 function expected empty stack end fix emit extra unreachable unreachable tuple.make instruction unfortunately impossible write test right binary parser silently drop i32.const making function valid,,
1018,5946b9aa75c8257b8741f0786ebd21f37929cb36,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-17 19:52:26 -0700, , support tuple local asyncify 2696 iterate tuple local separately load store component,,
1019,b4a8ace5c6d7f31e6d2117529220688975b6e59b,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-17 18:17:39 -0700, , dump initial wasts fuzzer 2697 tuple operation lower stacky code round tripping binary back lossy operation help make diagnosing bug uncovered fuzzer easier change writes original generated fuzzer produced optimization file inspected crash determine exactly emitted,,
1020,595d8a3f360b7642a82459ea0ed0a825b0dd7043,lon Zakai <azakai@google.com>, 2020-03-17 14:55:50 -0700, , 2698 meaning intend constant const node contains number think full name confusing,,
1021,38a795c48e269b92a1e6c54682a436ce23339a8d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 14:42:11 -0700, , fix binary emitting signature index 2694 signed leb128 unsigned leb128 bug causing module invalid number signature type section large multivalue block present,,
1022,83d69b30b56fdc9966c84082092fe25830472dd1,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 14:41:50 -0700, , handle tuples removeunusedbrs 2693 removeunusedbrs produce selects pattern selects multivalue type valid change check type tuple type producing selects,,
1023,aadec4526b339af4d2d2b92d3d64f07f935df7a5,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 13:51:31 -0700, , collect signature block kind 2691 previously signature collection mechanism responsible populating type section signature used instruction collected signature indirect call block instruction work long control flow construct like ifs loop try contain block signature possible non block child would need collect signature well,,
1024,2b8e9248604b2419a69c268ab131366a7408ebaf,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 10:35:08 -0700, , interpret tuple local tail call correctly 2690,,
1025,69d34c6bd9ad78f192cf4142b48a123eb61941ca,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 10:30:48 -0700, , handle tuples wasm reduce 2689 also increase usefulness couple wasm builder method useful,,
1026,a3bbe87a97fe6cafa665d3e1a03c28f31b82eff5,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-16 10:30:02 -0700, , handle unreachable tupleextract finalize 2692,,
1027,5c0bf993bc530a5b69caac1a9d70eec13c887d70,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-11 11:53:51 -0700, , update work tuples 2688 also make work constant expression ref.func ref.null instruction optimization may important illustrates simple update pas handle tuples also already looking prior change made,,
1028,0abc9ce8e9676c95f7ff572529eebf3018179dad,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-10 18:52:50 -0700, , update precompute handle tuples 2687 involves replacing literal makezero literal makezeroes literal makesinglezero updating handle constant tuples well also make literal struct add convenience method,,
1029,8f16059d3c29e285d4effed7f0c1f84c1f2f4d9d,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-10 13:43:06 -0700, , handle multivalue return interpreter 2684 update interpreter properly flow vector value including function boundary add small spec test multivalue return,,
1030,49e31f2034d9532f29704be3039829aa201556a0,lon Zakai <azakai@google.com>, 2020-03-10 11:49:29 -0700, , use emcmake 2686 switch emcmake emconfigure emscripten made requirement meanwhile,,
1031,5d7248b1613017af4f26d176e6ee725210b0fa88,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-10 10:22:48 -0700, , add non const iterator smallvector 2685 using crtp yay,,
1032,9bcc431a470d54020a09393b4e98443686e27cbf,lon Zakai <azakai@google.com>, 2020-03-09 10:19:04 -0700,2680, add warning name section warning help 2680 2683,,
1033,dc264342e4d304a77da92642a737bbeb49d0c9ac,lon Zakai <azakai@google.com>, 2020-03-05 16:55:09 -0800,2680, asyncify fix wasm instrumentation unnamed import 2682 assumed import already named internal name properly processing binary file without name name match general true fix use moduleutils renamefunctions proper renaming front also fix renamefunctions assert case renaming function name already help 2680,,
1034,9e3dbb1f668a14341e9aebae479537d4a26095a5,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-05 15:52:44 -0800, , initial multivalue support 2675 implement parsing emitting tuple creation extraction tuple typed control flow text binary format todo extend precompute interpreter handle tuple value api support testing figure lower stack fuzzing,,
1035,3a275d0627da443cce93631a64d78e7b3f441416,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-03-05 14:33:45 -0800, , update build instruction readme 2667,,
1036,5034bf1dd28c9066422680cf516513af92bbbb8a,lon Zakai <azakai@google.com>, 2020-03-04 17:37:22 -0800,2673, dwarf ignore compile unit abbreviation 2678 module valid since way interpret also check dwarf section llvm content empty section may exist null data fix 2673,,
1037,57a81a04f7a49593438dcae4ca8cbad8e465dc2e,lon Zakai <azakai@google.com>, 2020-03-04 13:21:39 -0800, , expose asyncify state via getter 2679 normally wrapper track state separately know unwind rewind actually call import function exposing asyncify state help avoid duplication avoid subtle bug internal wrapper state get sync since tiny function useful asyncify embedder decided expose default rather hide behind option,,
1038,2a0f6a513c6d6a99d16ca31de3e76a63b1490b4c,lon Zakai <azakai@google.com>, 2020-03-03 18:49:31 -0800, , improve comment unreachability skip 2672,,
1039,6371cf63687c3f638b599e086ca668c04a26cbbb,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-02-28 14:07:51 -0800, , simplify binary block parsing 2674,,
1040,1f682f4323cb6b7d81dabccb0b989e6e542da7ce,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-02-27 20:08:06 -0800, , generalize binary writing tuples 2670 update longer hardcodes possible local type also add new inner loop element local tuple type update map local index binary index additionally keyed index within tuple type since generate tuple type yet additional index hardcoded zero everywhere used later adding tuple creation operation extend functionality add test,,
1041,f0834cc1aa293f779005d11c39cd2874be9510f2,sen <kpedersen@live.co.uk>, 2020-02-27 23:14:40 +0000, , openbsd 6.6 libc fileno defined macro work 2669,,
1042,2105214971e722525c328a23a5d215789fafb24c,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-02-27 09:55:33 -0800, , add multivalue feature 2668,,
1043,f79faeb14e4da75f131c00c26796ae25ee96a7b7,eejin Ahn <aheejin@gmail.com>, 2020-02-26 18:20:24 -0800, , add support codefolding 2665 doe two thing treat target branch br_on_exn unoptimizables conditional branch make sure move expression contain exnref.pop follow right catch add containschild utility function search child optionally limited depth actually added used codefolding ended used removed case later,,
1044,b17e84b491a309c9f15e7a502f115ece19404b11,uj <jujjyl@gmail.com>, 2020-02-25 09:59:45 +0200,2170, fix http github.com webassembly binaryen issue 2170 2654 fix http github.com webassembly binaryen issue 2170 adjust fix clang format,,
1045,dfb2f27d0123ad62b44914fd0210db1d21cfc91e,am Clegg <sbc@chromium.org>, 2020-02-21 11:15:44 -0800, , version 2642,,
1046,3f4837b2d17181a4de9a2619372f0b38033bb432,eejin Ahn <aheejin@gmail.com>, 2020-02-20 18:09:55 -0800, , add autodrop support try 2663 add autodrop refinalize support try autodrop option add separate test basically doe,,
1047,42e566c7983ef54e1fedf8ec2addfb23153509fa,OFFEETALES <46571757+COFFEETALES@users.noreply.github.com>, 2020-02-20 20:18:55 +0100, , add api 2554,,
1048,0761f5d1b8cc2bf6041370706e82c80e5881d0b0,eejin Ahn <aheejin@gmail.com>, 2020-02-19 13:06:43 -0800, , add br_on_exn support 2659 add support add test inlining pas,,
1049,eca1a663fead59b2b70271a96abb6793e366b7e6,eejin Ahn <aheejin@gmail.com>, 2020-02-19 02:06:31 -0800, , code pushing support br_on_exn 2660 like br_if br_on_exn conditional branch across code pushed past condition satisfied also add line comment nfc change couple place change vacuum nfc handled default way anyway added explicit consistent existing code,,
1050,4b79514283d5f6a4fdd058690b78b3bd97e193b0,lon Zakai <azakai@google.com>, 2020-02-18 19:35:29 -0800,2634, concise error output 2652 print entire module error instead print validation error however user passed print print otherwise nothing would get printed error would pas print happens general user passing request print would expect printed module anyhow fix 2634,,
1051,08cc4d6711702a3f69159a0a4aa6e8ecedb98b5c,lon Zakai <azakai@google.com>, 2020-02-18 19:22:39 -0800, , dwarf fix debug_range handling invalid entry 2662 invalid entry appears either began became invalid optimization emit end marker instead emit invalid entry marker something  bonus test pass case noprint name print wasm default testcase example care dwarf printed module would quite large thank paolosevmsft identifying suggesting fix,,
1052,8307ac45a831273ba86707a8267f908ee1c7c747,eejin Ahn <aheejin@gmail.com>, 2020-02-13 15:56:58 -0800, , fix ninja build travis archive configuration 2658 archive configs cmake doe generate build.ninja try use currently causing failure travis build commits,,
1053,32bb67f4660de4b5b03bdff5c9c59ab92f8a0049,aniel Wirtz <dcode@dcode.io>, 2020-02-13 22:48:12 +0100, , add apis inlining option 2655 allows user modify inlining limit using apis binaryen number binaryen size number void binaryen number binaryen size number void binaryen number binaryen size number void,,
1054,41e9d4b244986149603ad83a4f526d950b3a441b,eejin Ahn <aheejin@gmail.com>, 2020-02-12 18:19:46 -0800, , fix clang tidy travis 2656 run cmake clang tidy clang tidy requires build database file created cmake change error message clang tidy unlike clang format clang tidy doe show diff apply print error message fix 2653,,
1055,321f61c7c3975e902b6f1d2a606b6595aaf701c9,aniel Wirtz <dcode@dcode.io>, 2020-02-13 01:59:52 +0100, , update node esm loader work latest node lts 2657 attempt fix node esm loader related issue http travis ci.org webassembly binaryen job 649056649 l22931 seen currently apparently due automatically picking newer node lts 12.16.0 released 2020 api changed,,
1056,4dceacb6ff662e382f1385ec038b9fdd062c0ed0,am Clegg <sbc@chromium.org>, 2020-02-11 18:25:31 -0800, , convert remaining python script run python3 2643,,
1057,5cfac758ce4086300f93f29dd1584346f9ad030b,uj <jujjyl@gmail.com>, 2020-02-10 17:41:33 +0200, , fix missing newline marker 2626 fix missing newline marker flake update test,,
1058,64760b10911d4dfc828be1fd9ffc74fdd82998ed,uj <jujjyl@gmail.com>, 2020-02-09 18:23:34 +0200, , optimize base64 decoding 2623 optimize base64 decoding 10x faster temporary garbage free compared original version new uint8array reuse uint8array view fix end handling code format update test,,
1059,11c6d59843967640081d7da32f0c43f9fd6ddce6,am Clegg <sbc@chromium.org>, 2020-02-07 20:20:58 -0800, , switch using ninja travis except osx 2645,,
1060,f16078bf354b91ac56329b12e5c0274524579675,eejin Ahn <aheejin@gmail.com>, 2020-02-07 16:58:53 -0800, , optimize try vacuum 2644 try body doe throw whole try catch replaced try body,,
1061,2b77f6ae60cfaf3f3cbdcc4121e82a619b9372c3,aniel Wirtz <dcode@dcode.io>, 2020-02-08 00:52:15 +0100, , add apis lowmemoryunused pas argument 2639 allows user enable disable lowmemoryunused option get set clear arbitrary pas argument using apis binaryen boolean binaryen boolean void binaryen getpassargument key string string null binaryen setpassargument key string value string null void binaryen void,,
1062,2119f3fcc32c58d581d7c86b7612e3bc89da24e0,lon Zakai <alonzakai@gmail.com>, 2020-02-07 14:28:38 -0800, , properly order actual exepcted output fail 2649,,
1063,2cc0aa2b21453e121f5f081189d4863a291d427d,am Clegg <sbc@chromium.org>, 2020-02-07 13:53:34 -0800, , use .appveyor.yml rather appveyor.yml 2648 convention file hidden default,,
1064,23e9e8c6cfa8fd684deedc564f530a96eebf3145,am Clegg <sbc@chromium.org>, 2020-02-07 13:48:45 -0800, , cleanup travis configuration 2641 explicitly name job clear split flake8 linkers thier job rather thing time rename build phase archive since build could mean number thing normally mean thing testing  combine gcc test tree test,,
1065,7168130594a226b6a48186a7c1dd68987f2007cf,lon Zakai <azakai@google.com>, 2020-02-06 16:17:49 -0800, , dwarf disable optimization pass fully compatible dwarf yet 2640 anything merges swap etc local inlines merges function must disabled however doe still leave almost pass affect output size much full llvm optimizer run time resolve fixmes test output show disabling allows twice much debug_line info preserved,,
1066,aab75ed890a3e491d00e652bbfbe19edd17d38cb,eejin Ahn <aheejin@gmail.com>, 2020-02-05 15:40:04 -0800, , fix localcse usable local selection 2638 subtypes reuse local contains expression local type supertype example  local anyref local nullref ... local.set ref.null local.set ref.null replaced local.get  extends usables map key contain local type get right usable local presence subtypes,,
1067,7be22c4d68270573ee010938aa8cd06be89e54d2,eejin Ahn <aheejin@gmail.com>, 2020-02-05 14:37:53 -0800, , add support 2608 add support try optimizeboolean function add support try getfallthrough function add approximate cost value instruction reference type proposal,,
1068,33f92aa06fe5de7bcf9f6b7fe2e74ba5e8e1e782,lex Crichton <alex@alexcrichton.com>, 2020-02-04 17:09:39 -0600, , avoid infinite loop ttf generation 2637 throwing fuzzing wasm implementation recently one strategy use wasm opt ttf fuzzer input generate wasm module test though failing due memory wasm opt generating module loop appears infinitely executing since input happens onein return true every byte input file least enough xor factor merged least generates long sequence true look like elsewhere file onein used also guarded finishedinput added similar guard well,,
1069,e0a449672a372aced4d11b4d60a49293d413a9bb,eejin Ahn <aheejin@gmail.com>, 2020-02-03 14:41:37 -0800, , trap call_indirect signature mismatch 2636 make interpreter trap signature call_indirect instruction actual function table mismatch also make wasm ctor eval evaluate call_indirect case signature mismatch compared argument signature function signature sufficient subtypes signature call_indirect actual function different even argument signature,,
1070,c9f2e9b7b24182e830f39c176170d5ca64d3d05e,eejin Ahn <aheejin@gmail.com>, 2020-02-03 10:44:49 -0800, , add support effectanalyzer 2631 add support effectanalyzer throw rethrow conservatively set property effectanalyzer new property throw represent expression throw expression throw set throw correctly enabled call throw reorder another expression side effect meaning call treated way branch evaluating invalidate prevents many reordering patch set throw call exception handling feature enabled also passed disable exception handling wasm2js test code change outside effectanalyzer class made order pas featureset throw always set whenever expression contains throwable instruction throwable instruction within inner try caught corresponding inner catch doe set throw,,
1071,cd8d82910d229aa8357eb18882745397f6ed87eb,rion Vibber <brion@pobox.com>, 2020-01-30 10:11:23 -0800, , fix cmake 3.10 ubuntu lts 2632 predefined cmake 3.12 later previous code produced empty version number lead parsing error emcc check version use older project_version variable source original version work one toplevel project defined,,
1072,9384ff68eea8090578354bab35fce2e621a588c4,lon Zakai <azakai@google.com>, 2020-01-28 10:45:48 -0800, , dwarf fix debug_abbrev section 2630 compilation unit abbreviation must terminated zero use right abbreviation add support yaml layer adding zero parsing look right abbreviation section right time also add two large testcases zlib cubescript crash without last,,
1073,b00f7f9b97631b214eff177b92639df6307db286,lon Zakai <azakai@google.com>, 2020-01-28 09:31:13 -0800, , dwarf update dw_at_stmt_list offset debug_line section 2628 debug_line section one change size must update offset turn offset dw_at_stmt_list without updating handle multi unit dwarf file,,
1074,bfff812cdfe3caccbceee73cee168326d4b9dc63,lon Zakai <azakai@google.com>, 2020-01-27 20:15:53 -0800, , optionally minify imported module name 2620 replaces import like env.foo a.foo save bunch byte many imported function note changing import name end requiring single merged import module note also modify import minifying module name since make sense careful minifying module known env wasi minifyin name module require emscripten benefit,,
1075,090a40518e21d36f31becc06f8f955945edb0fa1,aniel Wirtz <dcode@dcode.io>, 2020-01-28 01:30:34 +0100, , fix warning treated error building emscripten 2605,,
1076,79fdd327c239597207e8313c6bf83a846917ebc2,lon Zakai <azakai@google.com>, 2020-01-27 14:24:08 -0800, , dwarf fix emitting dw_form_sdata 2627,,
1077,de18d960d51810d71b5f2fa812c21a991924f00c,lon Zakai <azakai@google.com>, 2020-01-24 16:06:13 -0800, , dwarf properly emit signed bit value advance_line 2625 llvm sdata field bit support bit address suppose assigned actually led emit leb signed bit value unsigned bit one worked llvm guess force value bit anyhow failed gimli guess,,
1078,a134dbba6686621924a75dc8645abe8ab2273f44,am Clegg <sbc@chromium.org>, 2020-01-24 14:04:12 -0800,2619, reland fix renaming 2513 2622 reverts commit change fix 2619 make safe,,
1079,1a0530da9c0217e7118965aeb4ee1f59f68df73c,lon Zakai <azakai@google.com>, 2020-01-24 11:28:18 -0800,2619, handle indirect call 2624 ignored bad default typically imply call anything table table might change instead notice indirect call traversal force user decide whether ignore issue postemscripten user asyncify already indirect call analysis needed thing fix bug uncovered 2619 fix current binaryen roll,,
1080,1ca6394d34c827904e6ececb6463ef4899c95fe9,lon Zakai <azakai@google.com>, 2020-01-23 19:32:18 -0800,2615, use node lts alpine 2621 using led problem updated 13.7.0 break module test suite integration clear bug one change get file path instead node esm loader.js working around enough even path correct even try load env.js file say requested export behavior changed quite bit seems perhaps intentionally rather spend time seems safer use lts release intended reach lts need investigate fix 2615,,
1081,b880950c56673b36127438d432f0a24eca92c773,am Clegg <sbc@chromium.org>, 2020-01-23 17:44:55 -0800, , consistent detection invoke_ function 2619 looking import name determining function invoke function precursor landing fix http github.com emscripten core emscripten issue 9950,,
1082,dbb33e7dcc514b19bf91518f47fa46a47cd484a3,am Clegg <sbc@chromium.org>, 2020-01-23 16:39:01 -0800,2617, error git describe fails 2618 occurs shallow clone example version tag history happening travis causing build fail since travis depth clone fix 2617,,
1083,a74e9cd840e70cf6350b0c0d971a4316e7c3ee9e,lon Zakai <azakai@google.com>, 2020-01-23 14:11:15 -0800, , dwarf update .debug_loc 2616 add support section yaml layer add code update updating slightly tricky unlike .debug_ranges size entry fixed skip entry end marker smaller normal entry instead replace invalid segment size ignored debugger use would end marker special base marker future probably want sophisticated manner completely rewriting index section well though enough binaryen doe optimize move reorder anything note update location description like wasm expression stack value correct binaryen optimize fully optimized build would need track thing would hard also clean code extra instead delimiter missed shorten unnecessarily long name,,
1084,d6d565505076581da85e2fc5044a697a8186abf9,lon Zakai <azakai@google.com>, 2020-01-23 09:09:02 -0800,2451, initialize vector function 2614 missed review 2451 quadratic work function touched entire array size function speed pspdfkit testcase mailing list several minute stopped measuring minute locally second suspect noticed earlier testcase large number function hit issue especially hard,,
1085,cfc581f7d3c629016aa382a7e915f8b0a955fb40,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-01-22 16:23:09 -0800, , limit number passive segment work around chrome bug 2613 chrome currently decoding segment index signed number range index greater work temporary workaround limit number segment produced memorypacking bulk memory enabled,,
1086,60cfc85293c18ca49b25daa4328e5902d4130dae,lon Zakai <azakai@google.com>, 2020-01-22 14:00:25 -0800, , dwarf update debug_ranges 2612 pretty straightforward given far note example sequence range must skipped others must showing handle skipping bad one updating remaining sequence two begin end span   possible map new binary 110 120 eliminated optimizer nothing valid map case emit 110 120,,
1087,70a6817d39fc578def7e91c1abcf31eeb7270135,lon Zakai <azakai@google.com>, 2020-01-22 12:53:14 -0800, , dwarf fix debug line fannkuch 2611 trivial fix properly reset prologue line unlike others flag reset immediately test function end address first llvm output appears use past end function location function next note first byte next function ambiguously identical value used least low_pc sure used debug line ignore address llvm emitted doe sometimes,,
1088,ed3277ab496555fcf7cd449d1e1da01618d764ed,lon Zakai <azakai@google.com>, 2020-01-22 11:03:49 -0800, , dwarf use end_sequence copy properly 2610 need track end_sequence directly use either end_sequence copy copy emits line without marking ending sequence fib2 debug line output look perfect,,
1089,3fbe9423fcadf1b71eb45143f18dc994fb7c69e1,lon Zakai <azakai@google.com>, 2020-01-22 09:51:20 -0800, , dwarf allow debug line column 2609 line address value skipped seems like column valid line emitted llvm,,
1090,474269867c54c7f6031bd6797f4fe96db5783c49,lon Zakai <azakai@google.com>, 2020-01-22 08:48:53 -0800, , dwarf track function location 2604 dwarf llvm refer first byte belonging function size leb first byte local declaration end opcode one byte past one byte past byte belong function sure llvm doe track debug line position identified however case debug line refers one past end function may llvm bug location ambiguous could also first byte next function made discovery possible happened last function another section,,
1091,d6ce516017f6ea809babb6d81e5bb791ea94659c,lon Zakai <azakai@google.com>, 2020-01-21 19:03:22 -0800, , dwarf track position end else catch binary location 2603 control flow structure addition normal span start end need track tracking reading requires track control flow structure parsing know structure end else catch refers track location using map side instruction extra location avoids increasing size tracking info much common non control flow instruction note one end location function referring instruction left later increase one much,,
1092,51fff211d7aae002ff28e1c6245e3f9349493f11,lon Zakai <azakai@google.com>, 2020-01-21 17:24:01 -0800,2343, handle invalid abbrcode dwarf handling 2607 fix testcase 2343 comment look like rust sure would invalid abbreviation code perhaps llvm emits dwarf differently tested far may worth investigating emit warning skip element crash also fix valgrind warning span value initialized invalid bad well wasted memory map might overlapped real value interfered figuring,,
1093,52550c26325ff3d6649fa84c83bf8d4ce9ad4fde,aniel Wirtz <dcode@dcode.io>, 2020-01-21 22:29:18 +0100, , unify memory segment api 2533 binaryen.js offset instead byteoffset inspecting memory segment matching argument memory segment creation also add inspection passive property previously one would specify offset data passive creation get back byteoffset data upon inspection unifies key creation also adding respective api retrieve passive status missing,,
1094,1e79dcced11cd1da42ca0eb532ee52568c4ab2f0,lon Zakai <azakai@google.com>, 2020-01-21 10:12:04 -0800, , simplify binary parsing little 2602 instead hackishly advancing read position binary buffer call readexpression also debug info handling,,
1095,2510cff1e02961b7a4da94ce39be59c7e694d342,eejin Ahn <aheejin@gmail.com>, 2020-01-17 14:37:17 -0800, , remove limit log length fuzz_opt.py 2601 convenient full command debugging fuzzing error fuzzer sometimes fails running wasm reduce able reproduce command right away log handy case,,
1096,2fe75d7f4cebddeb1a88ac3e08bc08da6f1d14bc,lon Zakai <azakai@google.com>, 2020-01-17 10:14:58 -0800, , update debug line info function entry 2600 llvm point start function debug line entry right size leb function local declared instruction,,
1097,98f5507c508d6fde326347df3fcad70740b634ea,aniel Wirtz <dcode@dcode.io>, 2020-01-17 18:43:45 +0100, , expose api 2585 instead reinventing wheel side add binding apis useful generator example generator may decide simplify compilation step subexpression side effect simply skip emitting something likely compile drop empty block right away,,
1098,e873e2a84db3fda3c8df5ed8e0b39578a1fb2f2d,lon Zakai <azakai@google.com>, 2020-01-16 17:30:00 -0800, , use binarylocation instead hardcoding uint32_t 2598 make easier switch something else offset wasm binary get 4gb file,,
1099,0ec999db121197d7da242dd4a1136997e02c67cc,lon Zakai <azakai@google.com>, 2020-01-16 15:51:32 -0800, , dwarf high_pc computation 2595 update high_pc value interesting may relative offset compared low_pc function already start end add tracking instruction well,,
1100,0848a27fdecf3ffd5170986dceec7ba04c4e50a0,eejin Ahn <aheejin@gmail.com>, 2020-01-16 14:49:20 -0800, , add support cfgwalker 2597 add instruction support cfgwalker also implement call instruction handling within try catch every call possibly throw unwind innermost catch block add test pas cfgwalker,,
1101,987bbca3a13678b1974cba7838178c81e2d76d02,lon Zakai <azakai@google.com>, 2020-01-16 13:26:24 -0800, , update dwarf testcases 2594 touch test code file compiled latest llvm http d71681 order get realistic dwarf content,,
1102,d464748b86321c51b355400829917786b27d53f7,lon Zakai <azakai@google.com>, 2020-01-16 12:28:07 -0800, , update llvm support wasm_location 2596  llvm llvm project adf7a0a,,
1103,5d2c760fa086b9964ec22156a4cdf3847b019b76,lon Zakai <azakai@google.com>, 2020-01-16 09:37:26 -0800, , dwarf function location tracking 2592 track beginning end function reading writing track expression function separately instead single big map oldaddr newaddr potentially ambiguous case final expression function end might identical offset end function two different thing map offset however context end function updated address new end function even function end different instruction old last instruction might moved optimized concretely getnewexpraddr getnewfuncaddr ask update location either expression function use contextual information check die tag order know looking safe hit unknown tag halt silently miss thing test update show new thing thanks update compile unit subprogram low_pc location note btw first test change correct since test doe write dwarf intentionally track binary location writing nothing update test show actual updating also fix order python test runner code show diff expected encountered reverse confused ,,
1104,719b4d7d7897e25e5868989f0c708565e12d3295,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-01-15 11:04:23 -0800, , optimize passive segment memory packing 2426 memory packed passive segment bulk memory operation reference segment index need updated reflect new index possibly split multiple instruction reference multiple split segment bulk memory operation necessary introduce new globals explicitly track drop state original segment careful add globals necessary,,
1105,5ca79a71b2a2379083093d4d9136b2ae4095dfe8,aniel Wirtz <dcode@dcode.io>, 2020-01-15 01:00:08 +0100, , align binaryen.js npm package 2551 binaryen.js binaryen binaryen global name align npm package also fix issue emitting testing wasm build,,
1106,a43b533b0778a1daf47178a3d3d9e559f3d390ed,lon Zakai <azakai@google.com>, 2020-01-14 10:18:43 -0800, , dwarf updating update dw_at_low_pc attribute 2584 mostly straightforward dwarf entry find low_pc one update position slight oddity must traverse dwarf context rich apis analsis yaml data structure minimal used writing,,
1107,a7be271b6371c5968b77b4227bd3159db558951f,lon Zakai <azakai@google.com>, 2020-01-14 08:51:18 -0800, , omit dwarf debug line range starting 2587 check entry start new range address range set related address particular first zeroed linker must omit entire range initial range others offset relative look like random address perhaps middle instruction perhaps happen collide real one debugger would ignore must easier better simply omit see http bugs.llvm.org show_bug.cgi 44516,,
1108,58d973cb15d2c1d53d16a5837a537ee0ebe50e27,eejin Ahn <aheejin@gmail.com>, 2020-01-13 16:59:55 -0800, , clear mixedarena moduleutils clearmodule 2588,,
1109,4953bcc59085c49343c334ccc852fc5c0339c938,am Clegg <sbc@chromium.org>, 2020-01-10 15:03:40 -0800,10175, verify version output match changelog 2580 new version string look like wasm opt version version_90 g77329439d version reported version cmakelists.txt file followed git version bracket verify main version match changelog prevent people changing one without changeing help emscripten want able programaticaly check version binaryen tool see http github.com emscripten core emscripten issue 10175,,
1110,cb103967c458dc5620bc8dc29dcada2ca1d01e47,lon Zakai <azakai@google.com>, 2020-01-10 13:44:59 -0800, , fix emitting .debug_abbrev 2582 gimli perhaps also spec require final terminate list llvm fine without,,
1111,263d2d5025c98092f781c8b8d9eb7ac6df6aadab,lon Zakai <azakai@google.com>, 2020-01-10 06:37:00 -0800,10173, wasm2js convert 2581 isbinary used accept signed binary removing unsigned value may incorrect doe regress small thing seen diff important add sophisticated optimization perhaps like assumption signedness local never matter fix emscripten core emscripten 10173,,
1112,98747d97f089354091d115fb300006f3cc506a0c,lon Zakai <azakai@google.com>, 2020-01-09 13:39:53 -0800, , dwarf support multiple line table 2557 multiple table appear emitted linking file together fix support update size properly required patching yaml emitting code llvm order measure size emit code apparently designed handle change line table content minor fix set flag dwarfdump command emit llvm dwarfdump doe add support opcodes set_basic_block set_isa handle compile unit without abbreviation yaml code apparently something llvm code intended handle compile unit zero entry yaml code ditto properly set addresssize use dwarfcontext different way llvm expects apparently emscripten test suite pass gforce_dwarf without crashing overall impression yaml code probably long term solution perhaps may end scaffolding replace code eventually based remove llvm code deciding get everything working first seems like quickest path,,
1113,77329439d6307d292e59986db3a194c3085abbe2,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-01-08 17:43:25 -0800,2572, remove implicit conversion operator type 2577 remove implicit conversion operator type type must explicitly converted uint32_t type getid valuetype type getvt fix 2572 switch use type getvt getvt getsingle,,
1114,8d4db9fb86c3b80df3eaa0d8e5eb379d081c8399,am Clegg <sbc@chromium.org>, 2020-01-08 12:17:48 -0800,2563, remove git dependency 2578 use git set version number .git directory present mean release archive version string used  fix 2563,,
1115,132daae1e9154782bb1afa5df80dfe7ea35f0369,am Clegg <sbc@chromium.org>, 2020-01-07 17:33:47 -0800, , revert reland fix renaming 2513 2542 2576 reverts commit,,
1116,e8f9d207427bda2f6e22c28ff0210b294b1f70e1,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-01-07 11:16:44 -0800, , nfc enforce use type type name 2434,,
1117,f73b40c7873dbd2dd46a962f3afe5b97a7fc8b0a,homas Lively <7121787+tlively@users.noreply.github.com>, 2020-01-07 10:16:10 -0800, , nfc clean unnecessary template call 2394,,
1118,85de1c127d7d05966b4589d33718bbb70b961c24,lon Zakai <azakai@google.com>, 2020-01-06 16:03:07 -0800, , fix debug build 2561 requires removing llvm code pulled debug build,,
1119,0dab8853d60e2e61a749b93056faae35e7ec6ce6,lon Zakai <azakai@google.com>, 2020-01-06 16:01:38 -0800,2558, dce end wasm2js 2574 ensure call convert wasm type type never try convert unreachable fix 2558,,
1120,44c3c2d4e71686d42b7eff8ab9c554f83a9fe71e,eejin Ahn <aheejin@gmail.com>, 2020-01-06 13:11:06 -0800, , print push pop stack 2571 make push pop instruction printed stack format make valid wat form push pop still generated stack memory printed text format,,
1121,591914d8de144cf76432e6fec7dbfb510366cabb,eejin Ahn <aheejin@gmail.com>, 2020-01-06 13:04:11 -0800, , allow subtype throw instruction 2568 allows subtype argument throw also renames  consistent,,
1122,c971df1e943cafba05385f341126a772d8e2aa0c,eejin Ahn <aheejin@gmail.com>, 2020-01-06 13:03:51 -0800, , add line col info wast parser exception 2570 add line column info wast parser exception message readable encoutered case make existing line column number fine grained add helpful string line column info available,,
1123,6c91da0888c4b515c6875ac586fbe938ab80278f,lon Zakai <azakai@google.com>, 2020-01-06 11:50:17 -0800,2559, skip liveness analysis many local 2560 analysis currently dense matrix 65535 local index fit bit type like wasm32 index led overflow incorrect behavior avoid run pass liveness analysis many local note skipping coalesce local main liveness using pas bad run likely even first must skipped still run second simplify reorder local greatly reduce local count fix 2559,,
1124,240e1e3ed3eb328f574ce26ddb24819796a5e6e3,eejin Ahn <aheejin@gmail.com>, 2020-01-03 20:12:06 -0800, , parse memarg atomic.wait atomic.notify 2569 allow atomic.notify atomic.wait instruction parse memory argument align offset print offset instruction writing binary rather assuming change argument reference,,
1125,2343e9fea395455954adde1b70f8bd2efcc48d4a,eejin Ahn <aheejin@gmail.com>, 2020-01-03 16:56:13 -0800, , generate push pop stack 2566 generating push pop instruction stack even though written binary stack match number input output instruction currently used stack generation binary generation emit instruction inherits doe anything push pop instruction still emitted binary,,
1126,3fbec348f6de9c213d0091984305f9bb4906af47,eejin Ahn <aheejin@gmail.com>, 2020-01-02 16:19:19 -0800, , use featureset instead featureset feature nfc 2562 featureset place featureset feature possible making possible function take set multiple feature one argument,,
1127,bcc76146fed433cbc8ba01a9f568d979c145110b,eejin Ahn <aheejin@gmail.com>, 2019-12-30 17:55:20 -0800,2444, add support reference type proposal 2451 add support reference type proposal includes support reference type anyref funcref anyfunc nullref four new instruction ref.null ref.is_null ref.func new typed select also add subtype relationship support reference type doe include table instruction yet also doe include wasm2js support fix 2444 fix 2447,,
1128,a30f1df5696ccb3490e2eaa3a9ed5e7e487c7b0e,eejin Ahn <aheejin@gmail.com>, 2019-12-29 21:13:12 -0800, , move type related function type class nfc 2556 several type related function currently exist outside type class thus wasm effectively global namespace move function type class making either member function static function also renames getsize getbytesize make confused size return number type multiple type also reorder order function wasm type.cpp match wasm type.h,,
1129,f2ba91b6340a8c3099ab6a48700c717cbd33599e,lon Zakai <azakai@google.com>, 2019-12-24 14:01:47 -0800, , add dwarf updating test run doe lot code change movement 2552,,
1130,aab879d12576177ae4ff3114adcf8f768544b704,rion Vibber <brion@pobox.com>, 2019-12-23 15:37:23 -0800, , fix binaryen.js switch name 2553 switch label name br_table instruction corrupted binaryen.js api layer label cropped number character index list due passing utf8tostring callback method pass index second parameter second parameter utf8tostring max number byte copy initial label came lab etc corrected existing test case wrong output,,
1131,604cda7fffadee6cc414121396f48e0192084785,lon Zakai <azakai@google.com>, 2019-12-23 15:11:11 -0800, , version_90,,
1132,f42d8f62151d4b34ece60a7a4c6b85ac117146cd,eejin Ahn <aheejin@gmail.com>, 2019-12-23 14:55:28 -0800,2489, refactor module element related function nfc 2550 doe something similar 2489 function removing boilerplate code module element using template function,,
1133,977aa84f357d051b0ddc60f204c6b743463c3c6f,lon Zakai <azakai@google.com>, 2019-12-22 10:24:11 -0800, , reorder git ignores 2549,,
1134,8f78bb90561fa17791ae6b865c4238b5fca1b8d4,eejin Ahn <aheejin@gmail.com>, 2019-12-20 19:38:07 -0800, , fix memory size calculation memorypacking 2548 memory.size return size number page multiply size page size converting memory.init,,
1135,3f6fd583ca283c12f05c1258962cebdd2202e949,lon Zakai <azakai@google.com>, 2019-12-20 19:13:19 -0800,9, dwarf debug line updating 2545 update dwarf debug line info properly write new binary track binary location write instruction mapped location written must also adjust move code around leb optimization emit function section byte leb placeholder maximal size later shrink almost always possible take second param new location instruction map debug line info original offset binary new offset binary written core logic updating debug line section wasm debug.cpp basically track state machine logic read existing debug line emit new one find way reuse llvm code reading llvm code useful final tricky thing need update dwarf section internal size annotation llvm yaml writing code luckily pretty easy update first byte place section size emitted know size ignores debug line line col addr see webassembly debugging comment ignores debug line offset middle instruction llvm sometimes emits reason see webassembly debugging comment handling would likely least double memory usage unfortunate run lto manner entire app dwarf present may massive think see odd offset bug llvm fix prevent doe emit special opcodes debug line purely optimization wanted leave later even without decrease size quite lot btw many line ... add testing show load save fib2.c fannkuch.cpp properly latter includes one function nontrivial code actually emit correct offset minor fix done fix code section location tracking reading correct offset care body code section including section declaration size fix wasm stack debug line emitting need update visit right writing byte instruction differs visit recursive function also call child offset would first child reason correct source map understand wrong dwarf ... print code section offset hex match tool remove dwarfupdate pas useful testing temporarily make sense update without writing binary yurydelendik,,
1136,c97d6e4f529f181d81f1fc8c76f0ce28c16782b8,lon Zakai <azakai@google.com>, 2019-12-20 16:24:16 -0800, , strip dwarf finalize avoid keeping around til later unnecessarily 2544 without first wasm opt invocation remove large soon start automatically updating exists avoid work actually building final output dwarf,,
1137,f62e171c38bea14302f9b79f7941a248ea704425,am Clegg <sbc@chromium.org>, 2019-12-20 16:02:34 -0800, , reland fix renaming 2513 2542 reland fix renaming 2513 previous iteration change calling renamefunctions function removed problem manifested rename imported function case import already exists remove import correclty calling renamefunctions handle rename add additional test case cover failure saw emscripten tree,,
1138,bd4cac987f19ee4f59b161a77b996ff1de46c4b9,lon Zakai <azakai@google.com>, 2019-12-20 14:32:02 -0800, , enable clang tidy 2543,,
1139,05d785e6e476e55c05fda9b7e3fb38c15b25271e,lon Zakai <azakai@google.com>, 2019-12-19 15:45:16 -0800,2400, binary format code section offset tracking 2515 optionally track binary format code section offset loading binary remember node read necessary dwarf debug info offset dwarf refers note eventually may want something else like first read dwarf add debug info annotation llvm like manner straightforward enough update debug line range tracking add noticeable overhead every single node add entry map avoid unless actually necessary specifically user pass actually dwarf section binary remove section need print binary format code section offset text printing help debug test dwarf support look like code offset 0x7 annotation right node also add support wasm opt test unlike pas one prefix help 2400,,
1140,02e6ba2b139e6c7ac0a97baa2af75df4250e140f,aniel Wirtz <dcode@dcode.io>, 2019-12-20 00:36:11 +0100,2452, compile binaryen webassembly 2503 enables compiling binaryen webassembly building binaryen.js since webassembly best compiled instantiated asynchronously browser also add new mechanism tell respectively module ready mean one following using promise const binaryen require binaryen  ... use normally ...  using await const binaryen require binaryen async await binaryen.ready ... use normally ...  top level await available const binaryen await require binaryen .ready ... use normally ... one also tell binaryen already ready example assuming follow code already know ... use normally ... else throw error binaryen supposed ready  test case updated accordingly wrapping everything test function invoking ready documentation updated well cover course new file size 2.5mb even though wasm becomes inlined file make distribution across different environment lot easier also make building binaryen either wasm emit binaryen.js binaryen_js.js etc supersedes thus fix 1381 .ready also fix 2452,,
1141,81c16df401347e8e067fe9ccf0c26ae532bc03d5,am Clegg <sbc@chromium.org>, 2019-12-19 10:58:06 -0800, , revert fix renaming 2513 2541 reverts commit,,
1142,4d28d3f32e7f213e300b24bc61c3f0ac9d6e1ab6,lon Zakai <azakai@google.com>, 2019-12-19 09:04:08 -0800,2400, dwarf parsing writing support using llvm 2520 import llvm code dwarf handling code apache license like also code used emit dwarf common toolchain seems like safe choice add two pass dwarfdump run code llvm run llvm dwarfdump show parse useful debugging dwarfupdate writes dwarf section unchanged read roundtrips updating need 2515 put llvm thirdparty added llvm code behind use_llvm_dwarf default increase code size current approach import llvm file directly intended used required bunch local change expected actually platform specific stuff seems work may good enough long term may want switch linking libllvm downside binaryen user would need llvm build even waterfall build problem ship llvm anyhow constantly update mean binaryen would need latest llvm time otherwise given dwarf quite stable might need constantly update even larger issue work learned dwarf work llvm reading code easy reuse writing code trickier main code path heavily integrated layer might want create fake layer sound hard instead yaml path used mostly testing convert dwarf yaml binary using non yaml part convert binary dwarf yaml layer nice info data convert binary work however path llvm normally support basic dwarf section add range support fact need complex thing may end needing use layer approach consider dwarf library however hopefully affect core binaryen code call library dwarf stuff help 2400,,
1143,0048f5b004ddf50e750aa335d0be314a73852058,eejin Ahn <aheejin@gmail.com>, 2019-12-19 02:43:52 -0800, , fix trapping dangling insts memory packing 2540 doe two thing restore visitdatadrop handler deleted 2529 convert invalid data.drop unreachable nop conforms revised spec data.drop active segment treated nop make visitmemoryinit trap offset size equal dest address bound otherwise drop argument fix 2535,,
1144,8b15ceea0fdcde214965aea337e887af5129ad88,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-12-18 15:28:41 -0800, , simd i8x16 i16x8 .avgr_u instruction 2539 specified http github.com webassembly simd pull 126,,
1145,323e475a3ab57fe4ffd0b5826af5f6cbf0061265,eejin Ahn <aheejin@gmail.com>, 2019-12-17 13:55:01 -0800, , correctly clear memory table info clearmodule 2536 currently moduleutils clearmodule doe clear exists flag memory table running roundtrip pas module memory table fails result creates clear function memory table make clearmodule call,,
1146,f0a2e2c75c7bb3008f10b6edbb8dc4cfd27b7d28,am Clegg <sbc@chromium.org>, 2019-12-17 10:18:31 -0800, , fix renaming 2513 fix http github.com emscripten core emscripten issue 9950 issue show debug name present change come disabling debug name lld test want make sure wasm emscripten finalize run fine without debug name think make sense test mode actual bugfix wasm emscripten.cpp part problem name function rather import name added importrenames mean debug name present two name see bug,,
1147,fad92eaf2092efddf84da455d4af8431d5f87592,eejin Ahn <aheejin@gmail.com>, 2019-12-17 01:03:54 -0800, , fix misc test 2534 remove function memory packing_all features.wast doe test anything meaningful 2529 rename test file use feature started failing guess exnref requires also reference type feature sure far,,
1148,48ccb2bb8a7d013abba4667dfc0fb46548bef2af,eejin Ahn <aheejin@gmail.com>, 2019-12-16 16:30:05 -0800, , implement len drop spec change bulk memory 2529 implement recent bulk memory spec change webassembly bulk memory operation 126 binaryen data.drop equivalent shrinking segment size dropping already dropped segment active segment thought dropped beginning treated bound checking performed advance partial copying filling initializing doe occur tried implement visitdatadrop interpreter exactly revised spec say end also deletes content active segment case wasm ctor eval delete active segment store changed content back segment fuzz exec given wasm opt run module compare execution call result transformation running module nullify active segment applying transformation module running doe make sense,,
1149,2a972a9457a42b274848ae3e8790333328e65ead,lon Zakai <azakai@google.com>, 2019-12-16 14:04:15 -0800, , allow test pass test arbitrary name side file contains pass 2532 already supported required filename number let name anything check .passes exists,,
1150,c1526e700cc534a0f8d80265582f8a05fc20fff7,lon Zakai <azakai@google.com>, 2019-12-16 12:50:22 -0800, , improve roundtrip pas avoid copying 2531,,
1151,d8830094801f92589fb498ce743f5e45532a1707,eejin Ahn <aheejin@gmail.com>, 2019-12-13 18:50:13 -0800, , write wasm wast file 2527 currently print .wasm file actually text wast file make print wasm wast file wasm contains binary file wast text file,,
1152,321222a26b8fcc3a284b52e5cedd4c3a5b734939,lon Zakai <azakai@google.com>, 2019-12-13 14:22:35 -0800, , mention diff clang format tidy applied 2526,,
1153,fbce98c6fdeb2a78ef58079ce1c2a385a17357d6,eejin Ahn <aheejin@gmail.com>, 2019-12-12 23:01:56 -0800, , remove redundant instruction flatten 2524 expression type none doe seem necessary make prelude insert nop also result unnecessary block contains expression nop reduced expression also add newlines improve readability,,
1154,16c6b44da64630cd6906433cf35edabcea93cffc,lon Zakai <azakai@google.com>, 2019-12-12 19:15:39 -0800,10019, support stack overflow check standalone mode 2525 normal mode call import import standalone mode instead trap case unreachable error reporting good case least catch error halt emitted wasm valid standalone mode help emscripten core emscripten 10019,,
1155,89d1cf92be0636a219ee6415eead387241963dcf,eejin Ahn <aheejin@gmail.com>, 2019-12-12 18:36:31 -0800, , make local.tee type local type 2511 according current spec local.tee return type local type discussion whether change rule going webassembly reference type assume spec doe change change change many part binaryen transformation anyway ... currently binaryen local.tee type computed value type make difference mvp subtype relationship 2451 become problem example  func test result funcref local anyref local.tee ref.func test    validate spec pas binaryen validation current local.tee implementation make local.tee type computed local type make localset maketee get type parameter pas corresponding local type embed local type class localset may increase memory size also fix type local.get local type local.get local.set pair created local.tee,,
1156,759c485a9f35bd859d43b86b02e1397a669fa469,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-12-11 17:12:37 -0800, , remove functiontype 2510 function signature previously redundantly stored function object well functiontype object two signature representation always kept sync error prone needlessly complex take advantage new ability type represent multiple value type consolidating function signature pair type params result stored function object since longer module global named function type significant change made printing emitting function type well parsing manipulation various pass apis test also updated remove named function type,,
1157,acd786dbd1e59f9d105c4ec8603c2ff46f233649,eejin Ahn <aheejin@gmail.com>, 2019-12-11 14:49:31 -0800, , fix loop parent computation dataflow.graph 2522 fix parent child relationship computation dataflow.graph loop discovered used souperify souperify run flatten pas produce redundant block inside outside loop,,
1158,8dd1b2d545ea5ecf6bce90ce726dd95d319b5d63,am Clegg <sbc@chromium.org>, 2019-12-10 18:16:06 -0600,2518, rename couple file missing 2518 2521,,
1159,183bfb9eaab6ec7356144e8eb7534dcf97275384,lon Zakai <azakai@google.com>, 2019-12-10 11:05:02 -0800, , look bin binaryen_js.js directly instead expecting copy 2508,,
1160,247884e68b30dedeb01457d6c7e50d4bba5e4abc,lon Zakai <azakai@google.com>, 2019-12-09 15:27:25 -0800, , add roundtrip pas 2516 pas writes read module show effect converting back binary format useful testing dwarf debug support need see writing reading module preserve debug info properly,,
1161,72bacfd46fb0ed4851c22344c3cc632e701ce022,eejin Ahn <aheejin@gmail.com>, 2019-12-09 06:42:10 -0800, , fix comparison none unreachable type 2514 currently none unreachable type stored empty src wasm wasm type.cpp make type operator incorrectly given none unreachable expands given type compare expanded vector empty found fuzzer line modder visitexpression try retrieve candidate type really compare two type give unreachable key candidate none type returned generates incorrect code end failing validation weird way hard generate small testcase trigger part found generating fuzzed code random data file guess fix pretty straightforward fix 2512,,
1162,42b61e3c2e7851ed001bf26a7e1afab21d0cb38d,am Clegg <sbc@chromium.org>, 2019-12-08 20:50:25 -0600, , use wat wast text format filename 2518,,
1163,b232033385b025ba276423613fb67f644c0596ce,am Clegg <sbc@chromium.org>, 2019-12-06 14:56:07 -0600, , include name unless outputting wat format 2506 actually part name marker start name wat format confusing see show cerr name example change print.cpp add seem like right place plus revealed bunch place calling printname escape name printing,,
1164,6f55457c3edbeed202f27647a2cf0482160af098,lon Zakai <azakai@google.com>, 2019-12-06 10:27:31 -0800, , avoid error binaryen.js assertion build enable assertion debug build 2507,,
1165,65c334d514347af34c16ba95fa416896654d6484,am Clegg <sbc@chromium.org>, 2019-12-05 21:38:16 -0600, , include minification import module starting wasi_ 2509 allows support wasi_unstable also new beyond see http github.com emscripten core emscripten pull 9956,,
1166,bc46254ebae456e39ab68b55f99a67cbc2e43542,am Clegg <sbc@chromium.org>, 2019-12-05 21:15:50 -0600, , add tracing wasm emscripten finalize 2505 also fix splitting name trace channel obviously write string.split correctly first time around,,
1167,c6f5f165c8fd930f598c8255a811ce1275806e5b,am Clegg <sbc@chromium.org>, 2019-12-05 13:25:52 -0600, , regenerate lld test input 2502,,
1168,a28343a33ed28b4d5c83c37e350aceaf09b5246f,am Clegg <sbc@chromium.org>, 2019-12-05 13:09:21 -0600, , add string parameter 2499 work like llvm unreachable handler preserve information even release build,,
1169,cbf121df96cfce5038f52ed04f9780e19ed3b762,am Clegg <sbc@chromium.org>, 2019-12-04 20:42:46 -0600, , add option allow assertion disabled 2500 always enable assertion default option allows build without fix error assertion build even though normally build good keep building,,
1170,255d28a7bd903cedacc9ca0a00b7379188bf17bc,am Clegg <sbc@chromium.org>, 2019-12-04 15:47:39 -0600,2497, fix metadce debug info 2497 2501 like mistakenly removed part byn_trace conversion,,
1171,4056443a5c926ac009b455bf6774445edb6050ba,lon Zakai <azakai@google.com>, 2019-12-04 13:04:57 -0800, , remove none type branch target refinalize 2492 needed super old wasm type system allowed block br_if unreachable nop   differentiated taken branch named one referred name actually taken unreachable code need differentiate remove refinalize code considered also remove named taken distinction place,,
1172,a2f1a6375a596b3dea6fa615f6ff544c368c3991,am Clegg <sbc@chromium.org>, 2019-12-04 14:49:44 -0600, , cmake convert using lowercase function macro 2495 line modern cmake convention much shouty,,
1173,19d929cedb4dcf8b646dbbb58bfe59853b5d08e5,am Clegg <sbc@chromium.org>, 2019-12-04 13:09:41 -0600, , convert using debug macro 2497 mean debugging tracing enabled controlled centrally without managing passing state around codebase,,
1174,f346478e1eb510d61c603eb6533d2c01f413e47a,am Clegg <sbc@chromium.org>, 2019-12-04 02:19:51 -0600, , add byn_debug byn_trace macro similar llvm debug system 2496 allows debug trace message split channel pas debug simply debug everything debug opt debug wasm opt change initial introduction followup hope convert tracing new system easily control debug output,,
1175,9cbe295d20dd8bf625e16f26953cb19d35c6daee,aniel Wirtz <dcode@dcode.io>, 2019-12-04 02:29:49 +0100,2483, fix error building wasm opt.js latest fastcomp 2494 2483 merged emcc hit following warning attempting compile wasm opt emsdk latest fastcomp shared warning wasm need set binaryen optimizer doe automatically shared error treating warning error werror appears happens set target using fastcomp even though binaryen_js wasm move binaryen_js target,,
1176,b7f75aba59123eca79774d096524079f635cadbd,aniel Wirtz <dcode@dcode.io>, 2019-12-03 22:27:59 +0100, , add emscripten memory helper using api wasm 2476 already export _malloc _free emscripten build way yet initialize data without resorting hence add additional memory helper emscripten build becomes possible manipulate binaryen memory without need extra glue code example binaryen webassembly import one allocating string used reading string returned binaryen expect bit controversial use case relatively specific make sense consuming api directly eventually wasm rely binaryen.js post.js,,
1177,31eac76abfc24afe2217fae0f20ebee2a5871e5c,lon Zakai <azakai@google.com>, 2019-12-03 11:26:06 -0800, , apply old fastcomp flag reverting large size regression 2483 use lto upstream opt build improves code size,,
1178,0c2b5b417fdf897037d1e91e170601a67c80dab8,lon Zakai <azakai@google.com>, 2019-12-02 19:25:19 -0800, , enable asan testing without lsan still fails due 1351 2490,,
1179,9d4acee666dfa46e81838d385a663b4c4730c852,eejin Ahn <aheejin@gmail.com>, 2019-12-02 16:34:03 -0800, , refactor removing module element 2489 creates utility function removing module element removing one element name removing multiple element using predicate function make part code use think light handed approach calling module updatemaps removing part module element also fix bug inlining pas call module updatemaps removing function patch caller need additionally call anyway,,
1180,86492f7b3d48c9ec5f27ca7d3abd90ec02972a40,aniel Wirtz <dcode@dcode.io>, 2019-12-02 22:17:43 +0100, , fix cmake command line issue export_name window 2485,,
1181,24d274983df9f7dbeebe8a890297d4f30d5bbca7,eejin Ahn <aheejin@gmail.com>, 2019-11-29 18:33:41 -0800, , update spec test suite 2484 update spec test suite current date version http github.com webassembly spec repo failing test added blacklist shared.py reason test already existed passing started failing update add new test blacklist preserve old file renaming old_ filename .wast lose test coverage cause error fixed unsupported construct get support new test pass delete corresponding old_ filename .wast file add support spectest.print_ type style import,,
1182,8c97dc61a713768d7f8302ec3a695c1207ce7239,lon Zakai <azakai@google.com>, 2019-11-27 11:28:44 -0800,2453, use cmake build binaryen.js 2464 fix 2453 bonus also provides port wasm opt etc noderawfs everything seems work run stuff like nodejs wasm opt.js input.wasm metric,,
1183,132d81eca7f9b07520ce17f69ea348bfb4dbc8e8,eejin Ahn <aheejin@gmail.com>, 2019-11-26 18:16:12 -0800, , auto update spec test output 2481 make update spec test output one printed spectest.print import extract spec test blacklist shared.py comment reason fails also deletes label doe seem match existing test,,
1184,d15fe879834b0c58d2d4d8526cb428990f7b50a7,eejin Ahn <aheejin@gmail.com>, 2019-11-26 18:05:09 -0800, , remove vanilla test 2482 used year seem outdated,,
1185,5c81d48c70e62e11d9a8fd0fd8231fac10c3bf29,mmanuel Haffner <haffner.immanuel@gmail.com>, 2019-11-27 02:20:59 +0100, , collect object file object library cmake variable 2477 using target_objects objlib syntax use variable adding libbinaryen static shared library additionally use variable object file simplify command add object library source executables drop use library object library linked must used source see http cmake.org pipermail cmake 2018 june 067721.html,,
1186,ec53d11e0792884e1125fe5a1a437a5eff260259,lon Zakai <azakai@google.com>, 2019-11-26 15:22:04 -0800, , refactor optimize binary writing type collection 2478 create new helper let run parallel function collect info without manually handling lock etc use binary writing code type collection logic avoiding lock type increment also add signature printing useful debug,,
1187,7665f703f4e3437564be25ae276e1daaedd98d79,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-26 14:38:38 -0800, , update type information em_asm function 2480 updating imported function type name field failing update params result caused binary writer start using wrong type 2466 fix code update type representation imported function double bookkeeping removed entirely upcoming,,
1188,2ad71336a9f156a6f33958c96e4c08967f4920ed,lon Zakai <azakai@google.com>, 2019-11-26 12:30:55 -0800, , run mac bot build 2479 want upload build time think bot slow become available,,
1189,0215a392ce9f4c5d11305191e27c2e5a2bfd6d7f,ngvar Stepanyan <rreverser@google.com>, 2019-11-26 17:37:59 +0000, , use opaque type handle reference api 2473 improves typechecking verifying user pass pointer correct type,,
1190,6e23f8e5f4d28eb2056d0b3636b8317b9f299bfc,eejin Ahn <aheejin@gmail.com>, 2019-11-26 02:36:38 -0800, , print literal value printing literal 2469 current operator literal print type .const type .const rather instruction literal printing literal make sense later literal whose type const instruction reference type patch make operator literal print value make wasm shell shell interface comply spec interpreter printing format value type print wasm shell trap message stderr make fix_ routine spec test check.py unnecessary,,
1191,98ab07f9e471e713e7b00732a84e260aaaecc25f,eejin Ahn <aheejin@gmail.com>, 2019-11-26 01:45:36 -0800, , ensure example test validate 2470 make sure example test validate adding missing assert call fix existing error example test,,
1192,6a384c13500fab5dd937de65249a1975e1e599aa,lon Zakai <azakai@google.com>, 2019-11-25 16:48:12 -0800, , revert build libbinaryen monolithic statically shared library 2463 2474 reverts commit,,
1193,8a70121a421204e05d020c67294e7e517c2d15d2,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-25 15:46:56 -0800, , remove functiontype event 2466 start larger refactoring remove functiontype entirely store type signature directly entity use update bronexn event remove use functiontype make binarywriter traverse module collect type rather using global functiontype list collecting type also sort frequency optimization remaining functiontype function callindirect parsing removed future,,
1194,d90583cf509c3f21b3b5136d3872b097c5f2800c,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-22 17:40:23 -0800, , upgrade travis macos take 2465,,
1195,9a2cb235332616dc55b6527ac0716ebb24010a16,homas Lively <tlively@google.com>, 2019-11-22 16:25:47 -0800, , revert update macos version reverts commit accidentally committed directly master via github,,
1196,88f6c72946a7ba1d2d8010840fb7919ff0d82210,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-22 16:20:57 -0800, , update macos version also enables macos possibly temporarily,,
1197,66008703800039e9de7cee83ceab1352857d80ea,eejin Ahn <aheejin@gmail.com>, 2019-11-22 14:46:09 -0800, , use package name import nfc 2462 directly import name shared.py support.py use prefix instead also reorder import based pep recommendation,,
1198,bf8f36c31c0b8e6213bce840be66937dd6d0f6af,mmanuel Haffner <haffner.immanuel@gmail.com>, 2019-11-22 22:48:46 +0100, , build libbinaryen monolithic statically shared library 2463 transform library created subdirectory statically linked library cmake object library link object library private libbinaryen according cmake documentation library target following private linked made part link interface exactly want want api part interface,,
1199,e2587f30827cd3d35dd409c2958b25a6c5517092,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-22 12:46:04 -0800, , multivalue type creation inspection 2459 add ability create multivalue type vector concrete value type type transparently interned representation still single uint32_t type extracted vector component part single value type expand vector containing multivalue type yet used creation inspection functionality exposed tested apis also make common type predicate method type improves ergonomics type printing,,
1200,a0c423ef501ea7267c24c46e645296e713b2ea42,lon Zakai <azakai@google.com>, 2019-11-21 16:09:24 -0800, , add pas inline __original_main main 2461 clang llvm introduce __original_main workaround fact main may different signature downside user get stack trace confusing normally inline __original_main anyhow debugging non optimized build matter add pas implementation trivial call doinling however must check corner case first bonus minor fix findallpointers unnecessarily created object get class valid class take input reference properly meant get pointer function body toplevel,,
1201,77b3743f58f59acdb5e40c6e4eea87a4bafc96d3,eejin Ahn <aheejin@gmail.com>, 2019-11-20 18:09:06 -0800,2457, fix syntax error 2457 2460,,
1202,21888c253f775047bcfac28e8110abdcad9d6bcb,eejin Ahn <aheejin@gmail.com>, 2019-11-20 16:37:09 -0800, , simplify test script nfc 2457 make test script simpler reducing loop depth extracting repeating code method variable get_tests return list test specified extension includes file full path rather file name reduces loop depth using early exit get_tests,,
1203,f17f8f927c96c2e6ec25b4c2dbb8b9d70f7af9b7,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-19 20:09:14 -0800, , add config.h .gitignore 2455,,
1204,cfa647c9fb0474687014de8d3f0b6c9f0d56a88b,lon Zakai <azakai@google.com>, 2019-11-19 17:05:22 -0800, , add strip dwarf pas 2454 pas strip dwarf debug section debug section useful emitting source map need sourcemapurl section dwarf section longer necessary seen testcase massively large big wasm even loaded browser ... also contains trivial one line fix extract function necessary create testcase pas extract function wasm file like llvm extract check export already existed function,,
1205,00bbde099c0d968ce4ab95eba56d767d534e4094,aniel Wirtz <dcode@dcode.io>, 2019-11-19 19:58:58 +0100, , add pas 2407 add assemblyscript specific pass post assemblyscript post assemblyscript finalize eliminating redundant arc style retain release pattern conservatively emitted compiler,,
1206,365e6f239926e3da640014237b5420895ec247b9,lon Zakai <azakai@google.com>, 2019-11-19 08:41:25 -0800,9817, optimize away invoke_ call possible 2442 see invoke_ call emscripten generated code know call try catch exception target called throw check whole program manner simply skip invoke confirmed fix regression emscripten core emscripten 9817 comment optimization upstream around fast fastcomp native wasm exception handling extended optimize well,,
1207,9d21a951dfc60a0fed861763f50f4130dd0a42b6,lon Zakai <azakai@google.com>, 2019-11-18 19:03:39 -0800, , refactor helper nfc 2441 move code asyncify general helper class class automates scanning function property propagating function call asyncify property may call something lead sleep propagate backwards caller find may sleep useful future exception optimizing pas want write property may throw able remove exception overhead case definitely throw,,
1208,ee3022fd3be7ba0b9e7a12e426a8246134134cc4,lon Zakai <azakai@google.com>, 2019-11-18 16:26:40 -0800,2430, fix 2430 properly 2449,,
1209,af5ebec502f0055889ef1cf7bf6ce37d54c7b64e,lon Zakai <alonzakai@gmail.com>, 2019-11-18 09:39:58 -0800, , document wasm reduce readme 2445,,
1210,28dfa0e0238bc0bdb3958e3884e45189ec34e47a,lon Zakai <azakai@google.com>, 2019-11-15 16:53:35 -0800, , warning improvement 2438 wasm opt run pass warn gotten report people assume tool called wasm opt optimize automatically follow llvm opt convention add quiet flag suppresses minor warning minor warning output file,,
1211,89530ffd9a1b2d0b07bd9f0b91a96665afca3262,eejin Ahn <aheejin@gmail.com>, 2019-11-13 17:11:01 -0800, , add thing instruction checklist 2437,,
1212,1bb8862042eface18bdd876096c7ee67296061c2,aniel Wirtz <dcode@dcode.io>, 2019-11-14 01:01:49 +0100,2361, reuse binaryen_api emscripten build 2435 alternative 2361 implement reusing binaryen_api list function build js.sh differs keep file relatively straight forward without going overboard bash functionality also add various quote case whitespace path make .sh file always use line ending ease window support instance pulling repository window compile wsl git properly configured check line ending would otherwise break file fix 2361,,
1213,24bb5d83b1b877638053a5f8761ab8372aeeeac9,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-13 14:17:29 -0800, , nfc make type class instead enum 2433 plan extend type represent arbitrary multivalue type prerequisite necessary make class instead enum bend backwards add automatic conversion constant necessary allow rest code compile unmodified future possible standardize usage across code base remove utility,,
1214,284e3946029d347b8bf1dc189988081a5636f89f,OFFEETALES <46571757+COFFEETALES@users.noreply.github.com>, 2019-11-13 04:18:28 +0100, , uint32_t instead int64_t return type 2432 uint32_t instead int64_t return type minor fix test,,
1215,5ee9e0a0e34da622e525a58b4cfa8ebab3a0b1a1,lon Zakai <azakai@google.com>, 2019-11-12 15:40:30 -0800,2430, cast bool bitwise operation avoid msvc warning 2431 fix 2430,,
1216,485de15c5233e2fbfc14e27f1ec0cfdecd6fb630,lon Zakai <azakai@google.com>, 2019-11-11 17:19:37 -0800, , support pas arg tooloptions 2429 allow pas pas args wasm emscripten finalize run legalize interface internally recently added optional argument,,
1217,e83a9e2a21b35f19fe56a0d375191369b9b67148,lon Zakai <azakai@google.com>, 2019-11-11 15:39:45 -0800,9562, legalizing optionally export original function orig 2427 original necessary want pas wasm called directly without legalization example dynamic loader emscripten need emscripten core emscripten 9562,,
1218,63ddbc04cf75a45a05a2b1f11564563915ebdbec,eejin Ahn <aheejin@gmail.com>, 2019-11-11 14:27:53 -0800, , fix catch parsing 2428 catch body block call finalize function correct type create block one instruction catch body remove makecatch gen parser.py necessary fix test case catch without try,,
1219,4ad7a2cfd0b3ac14fbe767d50e4994f8297d37f6,eejin Ahn <aheejin@gmail.com>, 2019-11-07 22:30:18 -0800, , add stack optimization support 2425,,
1220,42f70a7c8608f5fc85b2676fda29b8405459ebdf,eejin Ahn <aheejin@gmail.com>, 2019-11-06 16:12:51 -0800, , improve type selection fuzzer 2424 add item function featureoptions get vector eligible type replaces hardcoded enumeration mvp type also add v128 type list simd enabled remove gettype function doe seem used anywhere renames vectorpick pick use absolute path fuzzer,,
1221,3cd309f8df18274d27f40465a05636f810352856,am Clegg <sbc@chromium.org>, 2019-11-04 22:06:36 -0800, , attempt duplicate asm consts 2422 since switched using memory address asm const index stopping trying modify code loner duplicate asm const string want duplicate string emscripten could seems like marginal benefit fix failure currently showing emscripten waterfall,,
1222,368f8a743c8322c3a01633f0cfa8ce205d58fb49,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-04 15:44:19 -0800, , add 2420 experimental instruction specified http github.com webassembly simd pull 127 implemented enable investigation performance impact,,
1223,74526f3effdab0d5bca9cb122989335b6527e76f,lon Zakai <azakai@google.com>, 2019-11-04 15:17:46 -0800,2417, eq64 eqz64 2421 fix 2417,,
1224,7fa8c78dc02501ba4cd6088b3664a1eb8b794cda,eejin Ahn <aheejin@gmail.com>, 2019-11-04 14:03:23 -0800, , fix postwalker traversal push instruction 2419 postwalker traversal visit value,,
1225,0a5925a52cc0888fb61bc7b55c78666add5025cd,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-11-01 18:22:05 -0700, , add simd integer min max instruction 2416 proposed http github.com webassembly simd pull,,
1226,90297e84007031ec884d829f973556d49c9b9467,eejin Ahn <aheejin@gmail.com>, 2019-11-01 17:28:19 -0700, , add support dce pas 2415 like try construct reachable either try body catch body reachable add support,,
1227,e53d4bdae0fffb6763ec4ae4fbf6f727d0da04d2,eejin Ahn <aheejin@gmail.com>, 2019-11-01 13:51:50 -0700, , remove event used instruction 2412 previously pas preserved exported event preserve event used throw br_on_exn instruction fix,,
1228,fb78a120277c023531020b146dd6506608aa9bcc,am Clegg <sbc@chromium.org>, 2019-10-31 09:29:09 -0700,9013, use absolute memory address emasm string index 2408 used based index meant needed modify code calling emasm function replace first argument use string address index code emasm constant allows use code unmodifed emscripten side accept memory address index code see http github.com emscripten core emscripten issue 9013,,
1229,2a787cdbe4cfb84801d4f885b155555c864ac006,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-10-30 15:55:01 -0700, , precompute simdload 2409 fix crash program containing load_splats optimized,,
1230,74d438ec0e3c51d757e8a0fa0e461824b9e1d161,rmen de Jong <irmen@razorvine.net>, 2019-10-28 21:57:57 +0100, , fix parameter type 2406 fix compiler error trying compile code calling function compiler,,
1231,4f9151dec445abb901ae22d8d4db5c5ea8e4c528,am Clegg <sbc@chromium.org>, 2019-10-25 14:19:12 -0700,2180, renaming function ensure corresponding got.func entry also renamed 2382 fix http github.com webassembly binaryen issue 2180,,
1232,8d19d00268a4b1af556008bea933ede869d8a757,lex Crichton <alex@alexcrichton.com>, 2019-10-25 12:09:47 -0500,4276, upgrade build container linux release 2405 continued effort try track 2273 came still present current release binary issue like crystal lang crystal 4276 may indicate exception somewhat broken static linking using alpine least locally able verify upgrading container produce working binary previously segfaulted wasm file,,
1233,bb41564ff8a495d19a6d41ffe7f057f241e9739c,lon Zakai <azakai@google.com>, 2019-10-23 15:09:11 -0700, , add modasyncify pass 2404 pass meant run asyncify run modify output assume always unwind reach import never unwind etc meant help lazy code loading ability initially downloaded wasm contain code code present called download rest continue could work something like wasm created contains call special import lazy code loading asyncify run initially downloaded wasm created running mod asyncify always unwind special import lazy code loading called definitely unwind rewind binary lazily downloaded wasm created running mod asyncify never unwind rewind binary longer need support unwinding optionally could also third wasm asyncify run swap max speed mod asyncify pass allow optimizer lot work especially initially downloaded wasm lot call lazy code loading import case optimizer see call unwind mean code reached potentially making lot code dead removable,,
1234,760904ab458aa73d97fe4bea848caf8070c56571,rad Morris <bradley.morris@sas.com>, 2019-10-23 13:32:49 -0400, , convert usage utf8tostring 2403 fix 2396. convert use old new utf8tostring added test kitchen sink.js cover,,
1235,8a149bbc96e478a13cf93fa5881c754b1076ddba,rad Morris <bradley.morris@sas.com>, 2019-10-22 20:18:27 -0400, , fix incorrect assert 2393,,
1236,29da5c9909249ea18d67a00c276e586199b7c945,OFFEETALES <46571757+COFFEETALES@users.noreply.github.com>, 2019-10-21 23:39:48 +0200, , ability list item export data segment function 2386 add functionality api getting number item module fetching index,,
1237,87d12c2dc788e49f82e3bc91b825a40b8d1c2efc,rmen de Jong <irmen@razorvine.net>, 2019-10-21 22:00:10 +0200,2054, move wasm_deprecated binaryen c.h selfcontained fix 2054 2399,,
1238,d2550891e41ad0215b1cae46fa711bc1e264166a,lon Zakai <azakai@google.com>, 2019-10-17 17:29:32 -0700, , fix autoreducing binaryen directory 2390 argv default way find location wasm binary wasm reduce need call wasm opt,,
1239,83f61457fd10feffe8cdcc6c278bc79cfb1667aa,lon Zakai <azakai@google.com>, 2019-10-17 15:28:50 -0700, , add dir allow setting test output dir 2389 allows fuzzing parallel invocation,,
1240,1abfe595aae2baa68c2888e53ac7f2890f9a75b5,am Clegg <sbc@chromium.org>, 2019-10-15 14:41:55 -0700, , use early return wasm opt.cpp nfc 2387,,
1241,d63b8a44d8db26f88d2b30920ad4eea4afe43fae,am Clegg <sbc@chromium.org>, 2019-10-14 11:06:28 -0700, , add startup function list wasm standalone mode 2384 mode crt1 take care calling,,
1242,66cb7b3f80f6ce32f426c3cb52eaf19430289ac2,aniel Wirtz <dcode@dcode.io>, 2019-10-12 00:41:32 +0200, , add api 2381 add new api generator add arbitrary custom section module,,
1243,4e80fde446764102fe5685496f351f0539377ff6,aniel Wirtz <dcode@dcode.io>, 2019-10-11 19:35:30 +0200, , add offset parameter 2380 add offset parameter table element start value imported constant global previously offset fixed zero usual breaking change api backwards compatible using api,,
1244,c6cd444496c4c1b684dbc69b10fc2f5cbfdd8e47,eejin Ahn <aheejin@gmail.com>, 2019-10-11 00:30:06 -0700, , enable exnref instrumentation enabled 2379 exnref enabled reference type feature exception handling feature sorry missed 2377,,
1245,4507ee5767b62095b29ca3b9c775475400f5423a,eejin Ahn <aheejin@gmail.com>, 2019-10-10 20:38:44 -0700, , instrument pop 2378 pop real instruction automatically generated reading binary deleted writing binary doe work instrumentation,,
1246,f841dd1b33e4060de64b92e6c467450d7a1f77d8,acob Gravelle <jgravelle@google.com>, 2019-10-10 18:08:36 -0700, , add instrumentation reftypes featureset support 2377,,
1247,9fe79b8c94c0d5224add710781a2419c1feb910a,eejin Ahn <aheejin@gmail.com>, 2019-10-10 14:50:24 -0700, , add support reftypes pas 2375 add support anyref exnref type pas,,
1248,1582c525a620b00f9a8c8a1134078e2665e40363,eejin Ahn <aheejin@gmail.com>, 2019-10-10 09:29:54 -0700, , add push pop support anyref 2376 add push pop support anyref also add missing api test push pop,,
1249,13725e54f845ec84947130aaa888b4c11e53f9af,eejin Ahn <aheejin@gmail.com>, 2019-10-09 13:40:06 -0700, , make try body multiple instruction roundtrip 2374 previously print additional block multiple instruction within try body wast file parsed correctly wast parser assumes two body within try scope try body catch body need print additional block catch body catch ... serf scope,,
1250,d0f538ef24853e88d97f9f1aee3baa6414ac2b13,ike J Innes <mike.j.innes@gmail.com>, 2019-10-09 21:34:24 +0100, , fix case windows.h include 2372 capitalisation cause issue case sensitive file system example cross compiling binaryen window,,
1251,8e78dbcad6bf35386e05c2fa503ce44191318895,acob Gravelle <jgravelle@google.com>, 2019-10-07 09:08:50 -0700, , support 2367 support sync async main thread em_asm fix import name well update test fix whitespace clang format,,
1252,3c78269032071490bc13dc5dbac02567d4d491e0,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-10-03 18:07:02 -0700, , v8x16.swizzle 2368 specified http github.com webassembly simd blob master proposal simd simd.md swizzling using variable index,,
1253,fc6d2df4eedfef53a0a29fed1ff3ce4707556700,lon Zakai <azakai@google.com>, 2019-09-30 17:15:20 -0700, , apply sbrk brk value compile time 2366 option set location sbrk ptr value applying value well necessary standalone wasm otherwise set ,,
1254,3c27bc8267a52661ecfc2e1a369585ef420a6055,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-27 16:53:26 -0700, , add feature flag validation wasm metadce 2364 sometimes wasm metadce last tool run binary emscripten case need know feature enabled order emit valid binary example need know whether emit data count section,,
1255,3bba1955745ce0aae8e76c5e88dd46ab5b6612d6,am Clegg <sbc@chromium.org>, 2019-09-27 14:27:27 -0700, , create _start already exist 2363,,
1256,6459efffec8282b53b135edcbaeb2da8964a822b,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-26 19:57:12 -0700, , revert build js.sh 2360,,
1257,dc31b460fef47dfb3415b4ae6276fff4919a03e2,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-25 12:27:32 -0700, , move back 2358 since waterfall cmake old target many lts system may yet support 17. also update minimum required cmake version one mention cxx_standard variable doc,,
1258,ed2c3cd0892be8a1380a6c6bfddfa3492c16f91c,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-24 16:57:57 -0700, , simd load extend instruction 2353 add support new load extend instruction also update order use generic lambda interpreter implementation,,
1259,034ed383a968204427befda3f9fb8bb5d2f63f75,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-24 15:29:15 -0700, , v128.andnot instruction 2355 specified http github.com webassembly simd pull 102 also fix bug api simd bitwise operator,,
1260,835581f58eb5040656243f7345ebcacf6d7deee5,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-23 18:15:14 -0700, , vnxm.load_splat instruction 2350 introduces new instruction class simdload implement encoding decoding parsing printing interpretation load splat instruction including apis v128.load remains load instruction class interpreter code expects load able load memory value type,,
1261,fb217c80c6d9c4b52d90571c435fc52dc868df47,lon Zakai <azakai@google.com>, 2019-09-23 17:38:09 -0700,2344, show unescaped name asyncify pattern warning 2351 part fix http log emscripten release buildbucket step stdout specifically fix name shown escaped followup 2344,,
1262,bf7e40f9bb3325b3f194de96a2b8602f2e5ca52c,am Clegg <sbc@chromium.org>, 2019-09-23 17:06:01 -0700, , wasm emscripten finalize add checking __data_end global 2352,,
1263,f5f53bb222c0d634ea3dcf9d73f645b582ba41c3,euc <beuc@beuc.net>, 2019-09-23 22:57:48 +0200,9381, asyncify support matching whitelist blacklist 2344 see emscripten core emscripten 9381 rationale,,
1264,e0bfb1c314a2c3c9ec1d345b7a9c80148901bc10,am Clegg <sbc@chromium.org>, 2019-09-23 12:28:27 -0700,356, revert part 2281 allow possiblity building python2 2349 even though support python3 python path happens python3 work fine also want continue support user still python2 i.e mac user relying default system python see http github.com emscripten core emsdk issue 356,,
1265,31b132be0d9edf75a118efc00e06abf636fe5b15,ichal StrehovskÃ½ <MichalStrehovsky@users.noreply.github.com>, 2019-09-21 19:45:00 +0200, , mark api dllexports window 2342 window symbol explicitly exported make visible accessible shared library binaryen.dll currently export symbol result marking exported method binaryen_api defined __declspec dllexport window unless building static library,,
1266,aeaad27d41b8df5d8ec30e7136cc1b5ead89bbd2,euc <beuc@beuc.net>, 2019-09-19 18:28:11 +0200, , fix typo asyncify 2346,,
1267,3d7c4cfb41c4f34238dd6f42367747411ee6a478,lon Zakai <azakai@google.com>, 2019-09-18 15:14:23 -0700, , avoid fuzzing multiple flatten operation cause exponential overhead 2345,,
1268,159e9a45877351f89af8ec0a05a7b3fe57d34aad,lon Zakai <azakai@google.com>, 2019-09-18 15:11:44 -0700, , add standalone wasm flag wasm emscripten finalize 2333 flag indicates want run wasm without support case emit dyncalls etc. also emit wasi _start main i.e. try use current convention wasm space,,
1269,844998f1b4f4b0f439875e6b36bc6b821be87939,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-14 16:25:43 -0700, , simd narrowing widening operation 2341,,
1270,167acc73c36fefe9da501c0a48a5de1502f4133b,lon Zakai <azakai@google.com>, 2019-09-13 17:39:31 -0700, , simplifyglobals apply known constant value linear trace 2340 optimizes stuff like global.set i32.const 123 global.get  global.set i32.const 123 i32.const 123 help much llvm output rare use globals except stack pointer already well optimized may help general wasm also help asyncify doe use globals extensively,,
1271,6a9aceaae7480aa9034243614600634beb350316,lon Zakai <azakai@google.com>, 2019-09-13 16:51:50 -0700,9389, add asserts asyncify 2338 optional asserts throw see unwind begin code thought could never unwind say user incorrectly blacklisted help emscripten core emscripten 9389,,
1272,19bc69abe34d61771cffd0171a57dc027086f541,arkus Koschany <apoleon@users.noreply.github.com>, 2019-09-13 21:53:01 +0200, , replace python command python3 2281,,
1273,bcd80a9b20c83753f0712f12ae7de42fdfdc32cb,aniel Wirtz <dcode@dcode.io>, 2019-09-11 18:40:08 +0200,2328, fix bitselect operation apis 2336 2328 simdbitselect api replaced simdternary bitselect one multiple operation currently exposed unlike new qfma qfms operation exposed add,,
1274,241aa71a776ae7e4c0cddb11523358242832daa4,lon Zakai <azakai@google.com>, 2019-09-08 07:06:04 -0700, , response file support asyncify whitelist blacklist 2335,,
1275,fefb75ef7f3b1cd6c8bf27dd6d288439c6ca7bc8,lon Zakai <azakai@google.com>, 2019-09-06 16:10:16 -0700, , properly handle fastcomp wasm safe heap 2334 properly handle fastcomp wasm safe heap asm.js library function mean inside wasm asm2wasm exported find via export,,
1276,849ea2105919dbd65c003439fb8d16c55692c247,lon Zakai <azakai@google.com>, 2019-09-06 11:06:04 -0700,9397, handle sbrk import emscripten upstream safeheap 2332 allow 2331 roll forgot upstream fastcomp handle sbrk differently fix handle upstream case import sbrk simplify emscripten core emscripten 9397 land however may also nice keep backwards compatibility running existing wasm file wild,,
1277,77fa3988c7e272425c72bcc04c8a10e02b3a12ec,ngvar Stepanyan <rreverser@google.com>, 2019-09-06 18:16:59 +0200, , print custom section content printable 2326 help debugging human readable section like,,
1278,7b4f97823cf46532ac65b980a957f67a681e3002,lon Zakai <azakai@google.com>, 2019-09-05 20:19:04 -0700,2325, safeheap prepare 2331 currently emscripten link wasm link computes final static allocation particular location sbrk ptr i.e location memory brk location emscripten import asm.js wasm however work wasm backend support importing globals implement sbrk proposing change model allow write sbrk compile wasm code import extern function basically return location postemscripten pas even apply value compile time avoid function call end optimal place see 2325 emscripten opened stuff land however safeheap pas must updated handle break middle fix basically making check exists looking handle,,
1279,a0c77bf09dc561f9857bd44167fb04d571e3036a,lon Zakai <azakai@google.com>, 2019-09-05 18:12:26 -0700, , wasm2js fix memory.size 2330 emitted function memory growth enabled used without theory could emit either memory growth memory.size used think expect minifiers later also fix test suite bug check auto_update script run wasm2js test run argument wasm2js used list test instead list file confused ...,,
1280,3ac5416a6b070096fcd26c94fcdb7c0c144c72b4,lon Zakai <azakai@google.com>, 2019-09-04 10:26:45 -0700, , add option postemscripten pas set sbrk ptr location called dynamictop_ptr emscripten 2325 assumption import exists replace value returned constant wasm emscripten finalize happens compiler run add static allocation know sbrk ptr later compilation replaces import function returning constant inlining etc help later setting compile time reduce code size avoid importing runtime make compatible wasi special import,,
1281,86507ab974542a7ac7a9e9e127321622025e3795,lon Zakai <azakai@google.com>, 2019-09-03 17:05:39 -0700,2323, wasi followup 2323 2329 remove wasi wasi_unstable make sense also remove shared constant wasi know yet needed later,,
1282,0faa68b9dfbe478c6d238a5c55ac61b54a86a3c3,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-09-03 14:13:29 -0700, , qfma qfms instruction 2328 renames simdbitselect class simdternary add new f32x4 f64x2 .qfm ternary instruction simdbitselect class backwards incompatible change interface new instruction yet used fuzzer yet implemented corresponding llvm commit http rl370556,,
1283,445881f6c8a28faae22a764c96449be86b48a96b,ngvar Stepanyan <me@rreverser.com>, 2019-09-03 22:35:01 +0200, , ignore .manifest file check.py 2324 file produced alongside .exe cmake used window subsequently check.py find try execute fails since excluded,,
1284,d4171920b4d87f23e9e962df09b34278416abb02,aniel Wirtz <dcode@dcode.io>, 2019-09-03 20:00:54 +0200, , add mutable parameter global import api 2317,,
1285,6cec37ef2e38ae1844c61832566cfc22cb3e0ef6,lon Zakai <azakai@google.com>, 2019-09-01 17:51:10 -0700, , minify wasi import export env 2323 make minification pas aware wasi_unstable wasi well,,
1286,b61f67c33daa45bab1fff1941c42ea41ee8e36a8,lon Zakai <azakai@google.com>, 2019-08-30 16:51:09 -0700, , support response file use asyncify 2319 see emscripten core emscripten 9206 asyncify name need complex escaping provides escape hatch,,
1287,a537db2a966b1fc959754c3838e3eab04ee7cc77,lon Zakai <azakai@google.com>, 2019-08-30 16:46:51 -0700, , workaround current breakage master avoid assertion see http github.com emscripten core emscripten pull 9360 2320,,
1288,c134c574e9e755a85806d42481c1b6d490d0d445,rion Vibber <brion@pobox.com>, 2019-08-30 14:20:48 -0700,8886, followup workaround minification wasm2js mem init 2318 emscripten minifier minifies couple bit memory init function used wasm2js using external memory init file http github.com emscripten core emscripten issue 8886 previous fix worked around bug one place failed account another confirmed work change place updated test case match,,
1289,eace464174f1abefead072dc580244483e499af6,am Clegg <sbc@chromium.org>, 2019-08-29 15:23:04 -0700,2314, temporarily build wno implicit int float conversion 2315 see 2314,,
1290,1eeaa3278b329e8e0bf140725b81b67b8d1d5654,erek Schuff <dschuff@chromium.org>, 2019-08-29 14:42:26 -0700, , update appveyor visual studio 2017 2316 also duplicate build,,
1291,44aec78e7bd176502c5a8434564e5949a0bb128d,aniel Wirtz <dcode@dcode.io>, 2019-08-29 01:53:00 +0200, , add missing new feature apis 2312,,
1292,e06fc1414bff1085047a559eca1a8b659a20a32e,eejin Ahn <aheejin@gmail.com>, 2019-08-28 14:31:08 -0700, , allow feature wasm2js add atomic test 2311 add argument wasm2js testing fix wasm2js actually take argument currently take wast file also add wasm2js test atomic.fence instruction added 2307,,
1293,cb0b31a2d185f18662814c9f3c9158b2eea74760,eejin Ahn <aheejin@gmail.com>, 2019-08-27 16:40:59 -0700, , add atomic.fence instruction 2307 add atomic.fence instruction http github.com webassembly thread blob master proposal thread overview.md fence operator also fix bug atomic.wait atomic.notify instruction binaryen.js add test,,
1294,f070e8c10a15a02735fbd9b88c4c569a8c786933,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-08-26 12:40:38 -0700, , hoist truncation wasm2js division 2305 valid defer truncation division accumulated non integral result produce different value combined truncation causing test failure rust test suite,,
1295,84da536f584a11edd2c6d9d7d422e917df0e0155,am Clegg <sbc@chromium.org>, 2019-08-26 12:37:31 -0700,2114, fix 2114 2306,,
1296,c57f93c8919ab33574e5ce78f0044980ca33de76,am Clegg <sbc@chromium.org>, 2019-08-21 08:54:57 -0700, , remove test output source tree 2114,,
1297,2895ca0816507a9ca1ea19b5d990a1bb8299c9c4,am Clegg <sbc@chromium.org>, 2019-08-20 17:55:11 -0700, , support version argument command line tool 2304,,
1298,dce1fe8c16559437cae05c0dd782237474ca6082,ay Phelps <hello@jayphelps.com>, 2019-08-20 15:27:58 -0500, , add initial support anyref opaque type 2294 another round trying push upstream thing fork add support anyref opaque type doe implement full reference type proposal http github.com webassembly reference type blob master proposal reference type overview.md table.get set grow etc ref.null ref.func etc figured easier review merge especially something fundamentally wrong  put enable reference type flag imagine even though complete full feature set probably right home lmk also adding github comment place want point question,,
1299,86b8cf6c299d0189d7819cf5eabb1ea03d34ff3a,uanzhong Chen <gzchen@google.com>, 2019-08-16 15:37:58 -0700, , fix infinite loop asmconstwalker visitcall 2303,,
1300,42f98bc9937b76ae12574bdb01652d09034fdec4,uanzhong Chen <gzchen@google.com>, 2019-08-16 13:32:11 -0700, , remove code handle em_asm setjmp longjmp 2302 reverts commit 2283 done due complexity supporting em_asm setjmp longjmp especially dynamic linking thrown mix http d66356 using em_asm setjmp longjmp function error,,
1301,c8a797d120a1413d993281c98268c1c2ee9f3f94,am Clegg <sbc@chromium.org>, 2019-08-16 13:31:52 -0700, , switch python indentation space space 2299 pep8 specifies space indentation use space believe historical anomaly certain large organization google chose yet make switch since much code binaryen today seems reasonable make switch,,
1302,ee0564088c7f89814bf951cc5936aa096538e38f,lon Zakai <azakai@google.com>, 2019-08-16 10:16:28 -0700,2300, wasm2js fix switch lowering fall hoisted part 2301 switch lowering hoist block code switch hoist others must fall others fall hoisted one began nested block falling fix hoisted one issue break switch contains hoisted code breaking get code right hoisted one fix 2300,,
1303,1b8c19a021c09aa4024fe79753ab922cd5762ec0,uanzhong Chen <gzchen@google.com>, 2019-08-13 13:12:58 -0700, , upgrade flake8 run python 2297,,
1304,e2f49d8227f2b71e4dede5cf4074bb9f65e3d77f,eejin Ahn <aheejin@gmail.com>, 2019-08-13 00:29:26 +0900, , add basic exception handling support 2282 add basic support exception handling instruction according spec http github.com webassembly exception handling blob master proposal exceptions.md includes support binary reading writing wast reading writing stack validation binaryen.js api routine branch utils type updating etc pass enough make wasm opt pas test doe include support many optimization pass fuzzer interpreter follow try catch construct modeled binaryen similar manner else try body catch body contain block omitted single instruction block emitted wast binary else else class try contains two expression try body catch body catch modeled instruction exnref value pushed catch get pop instruction br_on_exn special return different type value taken taken make exnref type br_on_exn push taken br_on_exn type,,
1305,69ad1e8a8d2e1d395e30230433742f4f5668563b,eejin Ahn <aheejin@gmail.com>, 2019-08-11 21:30:09 -0700, , add missing copy copier visitpush 2295 seems missing 2289,,
1306,da59a1567819601c3f7fb66771113c721b576cd1,lon Zakai <azakai@google.com>, 2019-08-09 19:15:32 -0700, , followup 2292 code cleanup opt utils.h 2293,,
1307,0cd48e6c19207e54066f621bb8e0d9e8e4b6c085,lon Zakai <azakai@google.com>, 2019-08-09 19:14:31 -0700, , support empty export name wasm2js mangling general 2290,,
1308,15f94c2f14b5e6337072f52e4a2a68d85ec99b8a,lon Zakai <azakai@google.com>, 2019-08-09 16:01:52 -0700,2285, duplicate import elimination 2292 optimization workaround problem emscripten core emscripten 7641 uncovered reverted going wasm emscripten finalize turn llvm internal reason long comment source fully follow two import already one name ended one end two two minification import name get confused two import name code end ignoring one sure changed thing guess wasm emscripten finalize code look name changed name appears sbc100 maybe 2285 related anyhow trivial make import minification code support two identical import think avoid duplication anyhow add assert exist open later possible fix duplication adding useful pas remove duplicate import function pretty simple yet even wasm emscripten finalize bug need fix duplicate import think pas still good thing add confirmed fix issue caused,,
1309,12add6f17c377de7ac334e8fa7885b61b98f3db4,uanzhong Chen <gzchen@google.com>, 2019-08-09 10:49:37 -0700, , fix em_asm working setjmp longjmp 2283,,
1310,ab3a1f65fb9d2e4ec7e2640daca0b3953a030da6,lon Zakai <azakai@google.com>, 2019-08-07 19:40:26 -0700,2288, copying fix 2289 copying code sadly unimplemented visitor return null explains crash 2288 missing visitor push pop,,
1311,bf4737bbed3482ce1d82c8d28ebec080318f0b39,uanzhong Chen <gzchen@google.com>, 2019-08-07 15:44:00 -0700, , make support selective update 2287,,
1312,4c9cfebfa95d551cdc4f04295b5d191793dddf97,uanzhong Chen <gzchen@google.com>, 2019-08-07 11:26:26 -0700, , allow running portion binaryen test suite 2286,,
1313,777342684f5af51105be710c06591513433ed879,am Clegg <sbc@chromium.org>, 2019-08-06 17:25:05 -0700, , wasm emscripten finalize remove reliance name section 2285 couple place relying internal name therefore name section change wasm emscripten finalize work correctly binary without name section relies name import export,,
1314,36909a3205e807534d3bb0dbda6baaa49aedf3ff,eejin Ahn <aheejin@gmail.com>, 2019-08-06 14:45:03 -0700, , remove trailing whitespaces else stack 2284,,
1315,4f0d960ef686dff7d635cb6051d07111e6e27a27,uanzhong Chen <gzchen@google.com>, 2019-08-02 14:15:58 -0700, , implement check stack overflow flag wasm emscripten finalize 2278,,
1316,8d4d43f0f239877b10789d3a85deb92f1927bc2e,lex Crichton <alex@alexcrichton.com>, 2019-08-02 12:22:51 -0500, , remove pie since clang like 2279 appears previous clang actually run forgot include removal pie sorry fix issue seen http travis ci.org webassembly binaryen job 566546589,,
1317,f89589bbec41dccd82b8c89604d7c878a27f02d8,lon Zakai <azakai@google.com>, 2019-08-01 13:54:11 -0700, , revert fix em_asm working setjmp longjmp 2271 2277 reverts commit see detail reverted,,
1318,2459889f968cc28d6234dccc5cd92276491e41a0,lex Crichton <alex@alexcrichton.com>, 2019-08-01 10:57:21 -0500,2273, compile linux release binary clang 2274 fix 2273 ... unknown reason current release binary built alpine container seem segfault run wasm file exception thrown clang built binary magically seems segfault,,
1319,0ec9ddf416de2dc9fc68d574513c52079c7ab238,lon Zakai <azakai@google.com>, 2019-07-31 20:33:26 -0700,9128, proper asyncify list name handling 2275 list comma separated name internal comma since human readable add awareness bracketing thing void foo int double parsed single function name properly help emscripten core emscripten 9128,,
1320,cbcca4cf42690514c04fce958675dcc05c1e86e3,lon Zakai <azakai@google.com>, 2019-07-31 17:41:06 -0700,1691, python3 ify check.py 2270 fixed flatten.bin.txt seems corrupted data removed fancy unicode spec comment test sure important enough figure fix fix 1691,,
1321,692f4666fd116fb7827b53348978f29bba253d47,uanzhong Chen <gzchen@google.com>, 2019-07-31 13:51:43 -0700, , fix em_asm working setjmp longjmp 2271 fix doe handle dynamic linking requires additional work ref http github.com emscripten core emscripten issue 8894,,
1322,ff9bd3acecc2e1a8a7e73cf2fa186598197395e3,eejin Ahn <aheejin@gmail.com>, 2019-07-29 14:50:20 -0700, , make sure binaryen.js test validate 2269 without assert even test doe validate error show corresponding .txt file test succeed make sure error test fails validate also add validation check none,,
1323,be6f7c4795ab3bc135e10162b0d7a1063e5d65ba,illiam Maddox <16312695+wmaddox@users.noreply.github.com>, 2019-07-28 11:02:14 -0700,2229, fix stack pointer identification wasm abi getstackspace 2243 fix stack pointer identification wasm abi getstackspace recent stack pointer simplification emscripten broke spill pointer pas fix 2229 restores functionality recognizing alternative coding idiom emscripten generated wasm code,,
1324,6ac5fa713b421588eede2e791235e4b60b22b172,lon Zakai <azakai@google.com>, 2019-07-28 10:57:23 -0700,2263, wasm2js mangle import name 2267 fix name would invalid like a.b turn compiler emits wasm import also add doc use wasm2js fix 2263,,
1325,772891f6270c20c34f3dc1d3984cffc6fa824d02,eejin Ahn <aheejin@gmail.com>, 2019-07-27 22:41:50 -0700, , fix extra unreachable generation 2266 currently various expression handle differently consistently follow rule  non control flow value returning instruction type expression unreachable emit unreachable emit instruction emit unreachable instruction follow validation failure wasm binary format example  unreachable f32.add unreachable i32.eqz unreachable unreachable  ...   valid prgram binaryen unreachable type propagates expression making i32.eqz f32.add unreachable binary format becomes  unreachable i32.eqz f32.add validation failure expects f32 take i32  f32.add cause validation failure wasm validation case add unreachable prevent following instruction consume current value i32.eqz actual test used global.get f32 global doe return value instead f32.add f32.add emitted one argument unreachable  change instruction return value remove unreachable emitting code exists add unreachable emitting code value returning instruction one check unreachability emitting child atomic instruction currently atomic instruction check unreachability visiting child bail right valid consistent others emit extra unreachable return return_call guess unnecessary,,
1326,edf001feb62d32c76f20d5564fabfab93035afdf,eejin Ahn <aheejin@gmail.com>, 2019-07-26 19:04:45 -0700, , fix unreachable prefix instruction printing 2265 memory instruction type unreachable i.e. one child expression unreachable instruction printed like invalid text format print unreachable prefix instruction type i32 make pas parser reachable anyway also remove printing atomic.rmw instruction printing,,
1327,ccd95f8f5725a8d52557772b3081875babda312f,lon Zakai <azakai@google.com>, 2019-07-26 13:45:48 -0700,2261, asyncify whitelist blacklist support 2264 blacklist mean function ignored instrumented assume never unwind whitelist mean function others unwind hoped list would necessary since asyncify overhead much smaller old asyncify emterpreter project noticed overhead size speed still significant list give power user way reduce unnecessary overhead slightly tricky thing escaping name escape name name section see 2261 1646 list arrive human readable format escape comparing internal escaped name enable refactored wasm binary little bit provide escaping logic yurydelendik list specified error shown since meaningless name appears list module show warning hopefully help people debug typo etc hoped make error problem due inlining etc single list always work unoptimized optimized build function may vanish optimizing due duplicate function elimination inlining fix 2218,,
1328,6ca3f4c80d57bd92c18f028828b889f5c74e10e9,eejin Ahn <aheejin@gmail.com>, 2019-07-25 20:28:55 -0700, , enable feature wasm shell assert failure test 2254 enable feature assertion failure test new feature test fail malformed unsupported feature hard add test existing assert_invalid test already failing unsupported feature,,
1329,443c0069df34bac9640ed75e396c8b76d3870ae0,eejin Ahn <aheejin@gmail.com>, 2019-07-24 23:57:04 -0700, , push pop support 2260 add push pop support type v128 exnref push pop support binaryen.js binaryen.js follows binaryen ast structure without pop binaryen.js instruction represented binaryen.js,,
1330,7bf827d38eb710069662b99eed6ba9ece20775c1,eejin Ahn <aheejin@gmail.com>, 2019-07-24 23:56:24 -0700, , remove extra parens binaryen c.cpp nfc 2262,,
1331,b72aa5028ebd5ba4b475ec91d100d1d28e836df1,lon Zakai <azakai@google.com>, 2019-07-24 18:08:17 -0700, , fuzz feature flag fix another signext issue fuzzer 2259,,
1332,daf0b9cf0a5cf32727bfd06960fac48b30813d93,lon Zakai <azakai@google.com>, 2019-07-24 16:12:56 -0700,2257, put extend opcodes behind signext feature fix 2257 2258,,
1333,eb6edf286d65fa791373735f87beb578c6cc27c7,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-24 14:16:38 -0700, , add tail call change log 2253,,
1334,407a0ad4adead4a44f8a4421187e840bb9e37d21,eejin Ahn <aheejin@gmail.com>, 2019-07-24 13:15:37 -0700, , print event color 2255 print event color like module element globals also split visitevent two function consistent visitglobals visitfunctions,,
1335,62e2d1fa038ccf96bfd61a8a5864c7a9d5d45be6,eejin Ahn <aheejin@gmail.com>, 2019-07-24 13:15:07 -0700, , allow value event 2256 disallowed event value spec doe say anything think restriction necessary,,
1336,a2741b360b444a26cd87327a3d60a601bb33119f,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-23 17:12:22 -0700, , finalize tail call support 2246 add tail call support fuzzer make small change handle return call multiple utility pass make larger change dae inlining pass properly handle tail call,,
1337,0beba8aad60e4bdadcd3fc3e5126e7befb7b7994,eejin Ahn <aheejin@gmail.com>, 2019-07-23 13:38:54 -0700, , upgrade travis system 2252 upgrade travis bionic gcc version also fix bug compiler_flags correctly added build time gcc test somehow bug manifested far upgrading failed thread sanitizer test fsanitize thread added link time build time,,
1338,00d02f71cf08a16ccfe5acde25e5a54b3915d2d7,eejin Ahn <aheejin@gmail.com>, 2019-07-23 00:46:06 -0700, , refactor stack binary writer nfc 2250 previously stackwriter subclass routine three mode binaryen2binary binaryen2stack stack2binary within single class split routine separate class also factor binary writing separate class class make use new class  binary instruction writer responsible emitting binary content logic convert binaryen something else writes binaryen binary convert binaryen stack writes stack binary,,
1339,ff2b10bd641039e2cf4eb00b767ac5139a41583e,lon Zakai <azakai@google.com>, 2019-07-22 18:00:52 -0700, , wasm emscripten finalize add mainreadsparams metadata 2247 new flag indicates whether main read argc argv parameter doe avoid emitting code generate argument trivial small program requires string conversion code nicely existing test input enough testing see output depends emscripten change land first emscripten.py asserts metadata field recognize,,
1340,c8101d1b67ffcce38718f07ba560ce56ddb3f240,lon Zakai <azakai@google.com>, 2019-07-20 18:09:18 -0700, , simplifyglobals propagate constant global initializers 2238 global mut i32 i32.const global i32 global.get optimized global mut i32 i32.const global i32 i32.const even though mutable mutated module instantiation,,
1341,beef3e931fd776baa025cd58345b644b47481aa7,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-20 17:58:24 -0700,2242, land 2235 fix 2245 2242 exposed bug trapper pas defining walkfunction defining dowalkfunction,,
1342,aed3d6ce85ce5eb3d53f2c1eb948b7ae916cc4b7,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-19 23:56:11 -0700, , revert remove bulk memory instruction refering active segment 2235 2244 reverts commit causing test failure merged,,
1343,72c52ea7d4eb61b95cf8a5164947cb760fe42e9c,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-19 16:24:37 -0700, , remove bulk memory instruction refering active segment 2235 prevents instruction becoming invalid due memory packing optimization also code size win fix 2227,,
1344,88ef839433ac0cf58c2a29f369d0268a22b5ae0e,lon Zakai <azakai@google.com>, 2019-07-19 16:01:15 -0700, , simpify passrunner.add automatically parallelize parallel function 2242 main change pass.h everything else change work new api add name remains weird variadic add constructed pas get std unique_ptr pas also make memory management internally fully automatic make trivial parallelize walkerpass run parallel pass benefit allows removing lot code since many case need create new pas runner running pas single line,,
1345,7bc5f1891f77e53f5a4e6905e02e80c680c728c3,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-19 11:21:32 -0700, , add cmake file gitignore 2239,,
1346,59b5c1d7869822d85477e227fd51891fd8445e7c,lon Zakai <azakai@google.com>, 2019-07-19 10:31:23 -0700, , fuzzing emit autoreducer script env var one piece global state use 2237,,
1347,8d3bc3f67cd55e99de29b66c43dbe2806a4dcdfb,lon Zakai <azakai@google.com>, 2019-07-18 17:08:14 -0700, , simplifyglobals constant propagate constant value immutable globals 2234,,
1348,9bdf71324b84796170bf099ff64117a03052d937,lon Zakai <azakai@google.com>, 2019-07-18 15:25:22 -0700, , auto reduce testcases fuzzexec handler fuzzer 2232 find failing testcase reduces list optimization run wasm reduce reduce wasm refactors testcase handler two kind one return list command run get_commands auto reduce others get parameter whatever want internally auto reduce yet useful auto reducing could added handler comparevms wasm2js etc modifying new form tested manually breaking stuff,,
1349,e4ae8848b484110207c9a77d0c089aac3db482bb,lon Zakai <azakai@google.com>, 2019-07-18 15:24:17 -0700,8993, generalize em_js parsing code 2233 key thing single constant may may saved loaded local may may get added global relocatable code fix emscripten core emscripten 8993,,
1350,6cc61b89bc3a22fb2dc42999d27af52124197baf,lon Zakai <azakai@google.com>, 2019-07-16 13:10:05 -0700, , cleanup renaming bysyncify asyncify 2228 clarify difference old new asyncify remove old bysyncify pas option,,
1351,f6ca3828aca8e7da966ba158dd9dab16205206db,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-15 17:12:10 -0700, , tail call api 2223,,
1352,c7e927179b4ce67bbf4f4c10a62e0fb0f7960750,lon Zakai <azakai@google.com>, 2019-07-15 14:56:08 -0700, , fuzzing give testcase handler list feature flag requires 2225 way still test new flag mode support e.g fuzzexec run everything,,
1353,774fdbb2f691e367113169d2641810402b8806ad,lon Zakai <azakai@google.com>, 2019-07-15 14:50:04 -0700, , bysyncify asyncify 2226 discussion seems like confusing name pas doe asyncify code one downside name overlap old emscripten asyncify utility need clarify doc keep old bysyncify flag around helpful avoiding temporary breakage move emscripten side well,,
1354,cdab4ef130626958790cb2601209f14d192fa10a,eejin Ahn <aheejin@gmail.com>, 2019-07-14 15:25:16 -0700,79, rename except_ref type exnref 2224 webassembly exception handling agreed rename except_ref type exnref,,
1355,8d13b5a9c59b5b215583568ddd117a626cc8f59f,lon Zakai <azakai@google.com>, 2019-07-12 13:46:03 -0700, , stop emitting almost asm wasm2js output 2221 ever emit use asm anymore similar annotation really useful increase size,,
1356,29b6458350747ef325bcbc98ec79860edb2e1867,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-11 17:40:58 -0700, , handle passive segment wasm emscripten finalize 2217,,
1357,39b9e38f8b76f64afdd8c146357d35699fafc347,lon Zakai <azakai@google.com>, 2019-07-11 16:48:40 -0700,2216, optimize select fallthrough value 2220 became noticeable 2216 led eqz eqz pair test suite,,
1358,6d47b7bf14da72489bac4f4637e797b854f317c8,lon Zakai <alonzakai@gmail.com>, 2019-07-11 16:30:18 -0700, , add option emit symbol file wasm2js 2214 use normal wasm opt mechanism modify discard wasm part running wasm2js need emit proper place middle,,
1359,6f73ad6e22b6be458f91c5ebe1f72cbcd6641264,lon Zakai <azakai@google.com>, 2019-07-11 09:40:19 -0700, , fix fuzzexec fuzzer forgot run opts 2215 skip,,
1360,03f3528f2f216378537988d22c66e4e22d2ddda3,lon Zakai <azakai@google.com>, 2019-07-11 08:55:00 -0700,8941, optimize br_if 2216 whose body br_if turned br_if combined condition side effect allow naive size byte identical pattern select may avoid hardware branch also select may optimized benchmark suite help every single benchmark quite small amount e.g 100 byte sqlite 1mb noticed emscripten core emscripten 8941,,
1361,1a9b0e166a747fefbf0502318e6c2cc27669f3a1,am Clegg <sbc@chromium.org>, 2019-07-11 08:12:59 -0700, , minify __stack_pointer import 2219 core import like __memory_base __table_base,,
1362,9838b396d72e96741348b6c11c6fd02500b54171,ean Stangl <sean.stangl@gmail.com>, 2019-07-10 14:35:11 -0600, , fix comparison signedness error 2211,,
1363,90449a5699567283586460aa127c311f72f81704,am Clegg <sbc@chromium.org>, 2019-07-10 10:37:33 -0700,8915, wasm emscripten finalize internalize mutable __stack_pointer import 2213 working change lld cause pie binary import __stack_pointer like shared already yet support mutable globals everywhere change internalize import create new immutable import used initialize internal one change part fix http github.com emscripten core emscripten issue 8915,,
1364,3f46ac22ac0d682f50480b997597e40660dd7a6a,am Clegg <sbc@chromium.org>, 2019-07-10 03:00:59 -0700, , create version_86,,
1365,be0a20c3fa39e1fff584f0eb334dd9285e1f1ffa,am Clegg <sbc@chromium.org>, 2019-07-10 02:59:11 -0700,8905, ignore initial stack pointer arg wasm emscripten finalize 2201 passing bad value initial stack pointer include static_bump since static_bump determinted output finalize emscripten want set stack pointer position calling stackrestore function startup argument removed completely stop passing emscripten side see http github.com emscripten core emscripten issue 8905,,
1366,f7ebd218d42dd33d512625c2c8f05a5aee1065ab,lon Zakai <azakai@google.com>, 2019-07-09 19:09:09 -0700, , support wasm file without exported memory script fuzz_shell.js 2210,,
1367,03a883356bd3aba53b2dfadb424d53b1db04a842,yoga <ryoga_314@yahoo.co.jp>, 2019-07-10 06:50:06 +0900, , allows multiple argument passed passrunner add 2208 struct foopass public wasm pas foopass int int  passrunner runner module runner.add foopass allow change avoids unnecessary copying allows pas reference without struct barpass public wasm pas barpass std ostream  runner.add barpass std cout error cout uncopyable runner.add barpass std ref std cout  runner.add barpass std cout passed reference runner.add barpass std ref std cout,,
1368,cbca5a29865e93ba543d1ede1b13bcc8f32bc1fd,lon Zakai <azakai@google.com>, 2019-07-08 16:36:17 -0700, , fix wasm2js compilation conflicting landing 2209,,
1369,26e93a4d6b53dac0ddef3ad62b7a41c9a746ed00,lon Zakai <azakai@google.com>, 2019-07-08 15:32:41 -0700, , update fuzzer use feature pas fuzzing mode currently sign ext ... 2200,,
1370,e1d218f5d25ba1a9b619bc651262c60dbd30a372,lon Zakai <azakai@google.com>, 2019-07-08 15:32:26 -0700, , wasm2js use show clear error unsupported instruction 2199,,
1371,2a138faec4b21ee2eae89f00d1e00987bab6305a,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-03 15:56:04 -0700, , initial tail call implementation 2197 including parsing printing assembling disassembling todo interpreting effect finalization typing fuzzing api,,
1372,256187c823ab6a04b3b55c3d9d3497ae2004d165,lon Zakai <azakai@google.com>, 2019-07-03 15:29:31 -0700, , use test wasm binary valid test suite binary check 2206,,
1373,f82e708ee048d5a17d9cf04d205985b32719276e,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-03 15:00:44 -0700, , loosen condition memorypacking 2205 allow memorypacking run passive segment even bulk memory enabled,,
1374,a5547a56649771a708de8d5b013dbbf62d0fcbae,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-07-03 14:35:42 -0700, , clean loose end feature handling 2203 fix test mutable globals support replace string literal constant add pas emit target feature section,,
1375,23d8497ce605b41652e97aea06150c9d59b93796,lon Zakai <azakai@google.com>, 2019-07-03 12:45:16 -0700, , minimal push pop support 2207 first stage adding support stacky multivaluey thing add new push pop instruction far show read written optimizer anything immediately wrong fuzzer support since correct way use yet current test show incorrect usage nice see parse emit replace proper usage push pop actually see comment test enough unblock exception need pop try catch also step towards multivalue added doc multivalue left done,,
1376,7d1ff56acafae9c769bc8dd8da2c8ef3c66a2aa6,lon Zakai <azakai@google.com>, 2019-07-03 11:36:40 -0700, , wasm2js export memory growth function memory growth enabled 2194 previously tried export memory exported even growth caused error,,
1377,2d773d6ddfeaefffe7161fdd26b523f16608dce8,eejin Ahn <aheejin@gmail.com>, 2019-07-02 19:26:42 -0700, , fix event section order 2202 event section global section export section present test missing good way testing validity binary anyway planning add test separate,,
1378,f154364c01603b0b8cfd0055951e8283f20fabd7,lon Zakai <azakai@google.com>, 2019-07-01 19:23:52 -0700, , bysyncify assertion improvement 2193 add assertion stack overflow bysyncify api call previously also add check assertion hit,,
1379,c3e45d4e5272486fae1ffb353c56e4d117fe4a21,lon Zakai <azakai@google.com>, 2019-07-01 19:22:08 -0700, , limit interpreter depth precompute running whole module 2191 keep limiting precompute useful since pas run part normal compilation want avoid native stack limit platform also pas likely find pattern size higher precompute sum smaller piece restore 250 limit interpreting entire module without fuzzer sometimes hit limit cause false positive,,
1380,be3135ca8db88ed7445dc2dd12ea78f55d963c7d,lon Zakai <azakai@google.com>, 2019-07-01 17:45:53 -0700, , bysyncify fuzzing 2192 get fuzzing support bysyncify working add python run fuzzing bysyncify add script load run testcase bysyncify support code runtime support sleep resume etc. doe call import random deterministic manner export memory fuzzer access fix tiny builder bug makeexport,,
1381,ab34a779552ea4a8747e7729433d8c7f89c458c0,rion Vibber <brion@pobox.com>, 2019-07-01 16:46:08 -0400,8886, workaround wasm2js output minification issue emscripten 2185 workaround wasm2js output minification issue emscripten using emscripten memory init file minification break function memory initialization setup causing exception thrown module setup moving two var declaration variable one avoid hitting change functionality var get hoisted anyway http github.com emscripten core emscripten issue 8886,,
1382,6f466401cb5ee6138898cddb0e9ed3e741166011,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-06-30 14:04:21 -0700, , relax bulk memory rule 2186 decided recent person meeting,,
1383,ec178c958940ffd436bef52c0ca089700b5638df,lon Zakai <azakai@google.com>, 2019-06-30 08:43:48 -0700, , bysyncify allow wildcard ending import list 2190 allows thing emscripten like note env.invoke_ function important,,
1384,ba6cf2eff312a571fb1964e05aeb285c63a4772c,lon Zakai <azakai@google.com>, 2019-06-30 08:43:06 -0700, , bysyncify fix skipping flattened condition 2187 assigned local run maybeskip result executed rewinding broke restoring saved value found fuzzer,,
1385,04c55fd025a972722cfdaf7ff30e8fc6e597e2af,lon Zakai <azakai@google.com>, 2019-06-30 08:42:16 -0700, , wip 2189,,
1386,ebbcde7585ccfa0217bcf7557dc7f66553f36fcf,lon Zakai <azakai@google.com>, 2019-06-30 08:41:36 -0700, , bysyncify ensure memory exists 2188 need memory order read write rewinding info add module memory found fuzzer,,
1387,78287cefb34e8bbbcd5b1c8bfedbf33162ecaaa5,lon Zakai <azakai@google.com>, 2019-06-26 12:48:29 -0700, , binaryen.js building assume intermediate form bitcode 2184 using wasm backend object file,,
1388,5d842aa0e864bb384d62c7bdcf95b5a522dbb272,lon Zakai <azakai@google.com>, 2019-06-25 17:05:34 -0700, , refactor python fuzz script 2182 create class handling current fuzz testcase implement subclass various fuzz thing disentangles lot code,,
1389,08e52f94db3737038bb01daca610504316e50fdb,lon Zakai <azakai@google.com>, 2019-06-25 13:41:36 -0700, ," bysyncify optimize better coalescing instrumenting control flow 2183 result better code size many testcases sometimes much better example sqlite 150k function local instead 3,874 also reduces total code size sqlite key issue instrumenting control flow lot bigger live range must done rather carefully need introduce temp local early breaking ifs call return value etc",,
1390,e63fe0b42d8a334a48c2988f3c05705ee04701f9,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-06-24 17:33:35 -0700, , skip import table removeimports 2181 prevents removeimports producing invalid module reference function longer exist,,
1391,cbc7e868d85a81e1a2f802b633d3cf323a14338f,lon Zakai <azakai@google.com>, 2019-06-21 14:48:06 -0700, , bysyncify instrument function call bysyncify_ directly 2179 function assumed part runtime instrumenting would mean nothing work fix bysyncify useful pure wasm import,,
1392,3f797c82e49bb2a5e5f6bcd2393e369ef618a49b,lon Zakai <azakai@google.com>, 2019-06-21 09:14:06 -0700, , bysyncify add ignore import ignore indirect option 2178 ignore import make assume import may unwind rewind stack ignore indirect make assume indirect call reach unwind rewind mean assumes indirect call stack unwinding,,
1393,06698d7a32cb4eeb24fea942e83d1b15e86a73e6,lon Zakai <azakai@google.com>, 2019-06-18 09:02:10 -0700, , make feature section error warning 2175 otherwise way view wasm object file binaryen,,
1394,3d3a5a6c28e9266eebcad7315cce96fba6e6dc09,lon Zakai <azakai@google.com>, 2019-06-16 11:01:29 -0700, , bysyncify 2173 add method note stopping unwind enough implement coroutines includes example coroutine usage test suite,,
1395,1cd34c211dffa66fa2f2e45f3f9291e8ad836e07,lon Zakai <azakai@google.com>, 2019-06-15 12:04:16 -0700,8561, bysyncify async transform wasm 2172 add new pas bysyncify transforms code allow unwind rewinding call stack local state allows thing like coroutines turning synchronous code asynchronous etc new pas file large comment top doc far test seem show work tested heavily yet next step hook emscripten replacement asyncify emterpreter see emscripten core emscripten 8561 note completely usable could useful language need coroutines etc. one using llvm emscripten see doc abi pas source,,
1396,22ba24118ef04720e6c7605dbaf90b22cdba006f,aniel Wirtz <dcode@dcode.io>, 2019-06-13 00:39:03 +0200, , fix naming binaryen c.h 2171 fix naming binaryen c.h enable build js.sh,,
1397,b2167087ac9d97a6ee024d7ecfc5e29a5bc157f3,att Topol <zotthewizard@gmail.com>, 2019-06-12 18:15:47 -0400, , enable compiling gcc 2149 _isoc11_source preprocessor flag specifies whether aligned_alloc defined exists gcc version lower include construct include std aligned_alloc check allows compiling version gcc defaulting posix_memalign situation appropriately,,
1398,284c9357d84165b51e04fa939debddeedbf2eb99,lon Zakai <azakai@google.com>, 2019-06-07 11:31:35 -0700, , refactor param parsing 2167 use one shared location optimization option much possible also allows tool like wasm2js receive flag,,
1399,cac94c5aece24855c2d8cdc73e75f7f5abb29cd2,lon Zakai <azakai@google.com>, 2019-06-07 11:05:30 -0700, , copy debug info inlining 2168,,
1400,5f252c3a6c2129a3f86e00401806b74bc2f266df,obby8 <hobby8@users.noreply.github.com>, 2019-06-07 17:31:07 +0000, , fix bug leak relooper merge consecutive block 2159 fix relooper merge consecutive block entry block getting removed part loop bb1 addbranchto bb2 nullptr bb1 addbranchto bb3 ... bb2 addbranchto bb1 nullptr bb3 addbranchto bb4 nullptr bb1 bb2 bb3 bb4 bb1 branch memory leak,,
1401,1578cec27d45cf5104480f533fb092e81f0dbeb5,am Clegg <sbc@chromium.org>, 2019-06-06 12:52:14 -0700, , improve error detection clang tidy clang format script 2156 error shell script command fails try run travis build i.e upstream prefer origin master master folk use master locally hide stderr piping dev null,,
1402,4e299e978fd56692d2a2f5169008009567a36046,am Clegg <sbc@chromium.org>, 2019-06-06 12:51:39 -0700, , split binaryenjs test main check.py script 2163,,
1403,616abe47020c90278eaf8d14ae9815c31d2d14fb,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-06-05 19:34:34 -0700, , use splatted zero vector makezero 2164 prevents optimizer producing v128.const instruction supported time,,
1404,917fabf8fb8c2efbfadc608efa79c0937830ce10,lon Zakai <azakai@google.com>, 2019-06-04 15:22:31 -0700, , reduce interpreter recursion limit 2162 small enough work 512k stack linux may small enough work common update spec test actually recursive call think change reduces relevant amount test coverage may fix mac bot finally pass stack size think mac default,,
1405,14e09685f1994327dec5aec3a7fd5349696600af,eejin Ahn <aheejin@gmail.com>, 2019-06-04 13:31:55 -0700, , use binaryindexes instead copy binarywriter nfc 2161,,
1406,9d4f053070fa4a0d61663901d5206c025d694bb2,lon Zakai <azakai@google.com>, 2019-06-03 19:09:46 -0700, , add recursion limit interpreter expression runner 2160 previously one call spec test check infinite recursion internal limit interpreter recursify may make sense point unlikely interpreting massively recursive thing beneficial optimizer anyhow since could something could also smaller piece iteratively,,
1407,fe99e3458f11d1a01fa3ad5b68883dbcba3903af,eejin Ahn <aheejin@gmail.com>, 2019-05-31 20:02:37 -0700, , add event section 2151 add support event event section specified http github.com webassembly exception handling blob master proposal exceptions.md change binary model wasm event feature suspend current execution transfer control flow corresponding handler currently supported event kind exception event includes support binary file reading writing wast file reading writing binaryen.js api fuzzer validation metadce pass metric minify import export remove unused module element,,
1408,7306f60a4474ca1fa948bddee5c068e7c2f635f6,lon Zakai <azakai@google.com>, 2019-05-31 19:57:09 -0700, , add print function map print map function index name 2155 work fix fix format,,
1409,c0fba4a898273b9998c7ce09a3663bb35271dbd7,lon Zakai <azakai@google.com>, 2019-05-31 19:56:56 -0700, , recursify 2157 help avoid issue smaller stack size fix last mac test failure emscripten release happens massively nested addition constant,,
1410,c5b50feac3e1faeb51c6910e37357596e4700717,am Clegg <sbc@chromium.org>, 2019-05-31 16:22:28 -0700, , fix run_gcc_tests tree build 2152,,
1411,fc54b7c9fbbf3b87339bd55b86fdb51afae97c9c,eejin Ahn <aheejin@gmail.com>, 2019-05-29 16:46:30 -0700, , refactor typeuse parsing nfc 2146 parsetypeuse always return functiontype params return pair make sure two consistent caller doe populate params result type specified,,
1412,b60dad3428ae61efe8ed38d0f2ad5a45081d4c39,eejin Ahn <aheejin@gmail.com>, 2019-05-29 15:08:55 -0700, , add features.mvp features.all binaryen.js 2148 add features.mvp features.all binaryen.js make test case use,,
1413,4b05489435a8f7c4a149db16a11f6c82ce63d622,eejin Ahn <aheejin@gmail.com>, 2019-05-28 15:55:32 -0700, , simplify function list nfc 2147 look need maintain function functionimports separately,,
1414,4b223a33d9f44b99a783cb63329facea7edfb783,lon Zakai <azakai@google.com>, 2019-05-28 10:58:14 -0700, , wasm2js switch optimization 2141 pattern match tower block br_table switch much smaller code size also avoids heavy nesting exceed recursion limit parser enough yet pattern match specifically reality switch look slightly different followup extend pass test suite passed including massive switch test fuzzing good start,,
1415,899263882c48dba8e34717af1e28005f8888dca7,eejin Ahn <aheejin@gmail.com>, 2019-05-24 16:39:52 -0700, , refactor type function parsing 2143 refactored fixed typeuse parsing rule rule closely follow spec multiple parsing rule different subtle way supposed according spec duplicate type i.e. type signature type section allowed long given name name given use type name given generate one form funcsig signature string generated name already exists type section append end cause change autogenerated type name test output typeuse order type param result one exist case function definition local fixed test case violate rule param result given type type smallest existing type index whose parameter result type new type created inserted added test case test type naming duplicate type refactored parsefunction function add override helper function getsig ,,
1416,dc37d7b74edde1876f2114ad8edd10ab076e778f,eejin Ahn <aheejin@gmail.com>, 2019-05-24 15:02:42 -0700, , add getglobal binaryen.js 2142 getfunction getglobal name clashed apis deprecated instruction get_global reflected instruction renaming code add consistency,,
1417,7ae38053cf1e1e5c8f84c34a142efb043f6d4810,eejin Ahn <aheejin@gmail.com>, 2019-05-24 12:44:50 -0700, , show line col parsing exception gen parser 2138,,
1418,5644d15b87577478659d7cbeb9bb0555cc233631,outer van Oortmerssen <aardappel@gmail.com>, 2019-05-23 16:43:06 -0700, , inlining exposed inlining threshold command line parameter 2125 inlining exposed inlining threshold command line parameter allow easier experimentation optimal setting also tweaked default logic slightly always inline single caller function certain size command line argument tested desired effect example makefile change commit http github.com aardappel lobster commit turn relies http github.com emscripten core emscripten pull 8635 grouped inlining option reverted default default inlining sake redo lot test added fixme indicate current inlining logic need fixing fixed default value pulled code clang format,,
1419,eabf9ed363ebc3c889ea53da5dab1961ea21e5c4,eejin Ahn <aheejin@gmail.com>, 2019-05-23 11:57:32 -0700, , factor nfc 2137 checking first string match certain string within list element appears many time within parser extracted helper function,,
1420,b1ecf05b3303fda057dcd87e46e75cb779d97f7d,eejin Ahn <aheejin@gmail.com>, 2019-05-23 11:57:05 -0700, , disable clang static analyzer clang tidy 2136 clang tidy default enables two group check clang diagnostic clang analyzer two clang analyzer static analyzer seems often produce false warning example write object somefunction sure object null i.e. assert object produce warning sometimes annoying inserting assert everywhere doe seem appealing also noticed llvm also disabled analyzer disables check enabled clang diagnostic readability brace around statement,,
1421,257a4c5ac940fe14bb85518a78fc9dba1c78b959,iddharth <siddharth.bath@tweag.io>, 2019-05-22 02:42:19 +0200, , add write module string expr format 2106 fix 2103,,
1422,9b5e470bcef1c6934ae74457d8094143bad8d74a,erek Schuff <dschuff@chromium.org>, 2019-05-21 16:08:30 -0700, , use colon filename 2134 window filename contain colon use instead passing argument pass,,
1423,1a3c1a58cc7e97a846f612baf7f74a370980458f,eejin Ahn <aheejin@gmail.com>, 2019-05-21 13:25:14 -0700, , reflect instruction renaming code 2128 reflected new renamed instruction name code test get_local local.get set_local local.set tee_local local.tee get_global global.get set_global global.set current_memory memory.size grow_memory memory.grow removed apis related old instruction name binaryen.js added apis new name missing renamed typedef sortedvector localset setsoflocals prevent name clash resolved several todo renaming item wasm binary.h tableswitch brtable i32converti64 i32wrapi64 i64strunci32 i64sextendi32 i64utrunci32 i64uextendi32 f32convertf64 f32demotei64 f64convertf32 f64promotef32 renamed  consistency,,
1424,d78be9ac6c02910bbf8ac71118e68adff4fdc570,eejin Ahn <aheejin@gmail.com>, 2019-05-21 13:24:30 -0700, , remove old import export parsing routine nfc 2127 format seem used,,
1425,5c33c04d51a64775b8e164a9d38d06c720c6505e,eejin Ahn <aheejin@gmail.com>, 2019-05-21 00:44:13 -0700, , refactor type signature local parsing method nfc 2129 created parseresult parsetyperef make method use deleted unnecessary member variable,,
1426,677808afb18a059d3dadcf2be7bd8daade5b77f9,lon Zakai <azakai@google.com>, 2019-05-17 19:12:01 -0700, , fix reinterpreted load fewer full size 2123 fix fix style,,
1427,d6a6188493031c5f6bbe2ca49860c9d9df962752,lon Zakai <azakai@google.com>, 2019-05-17 19:11:02 -0700, , fix vacuum bug load changing type 2124 happened wasm2js implicit trap default bug specific tested mode,,
1428,f4fd88496db1a217954abc0509393c9523c3c1d3,eejin Ahn <aheejin@gmail.com>, 2019-05-17 14:07:20 -0700, , remove test 2120 s2wasm removed test seem used anymore,,
1429,a4b7041d3bac69a99048b7e52eba19dc3cad90d9,eejin Ahn <aheejin@gmail.com>, 2019-05-17 14:07:00 -0700, , fix misc thing globals 2119,,
1430,1a312a848bb20394e4efcba747d32c515d23d215,lon Zakai <azakai@google.com>, 2019-05-17 13:55:04 -0700, , rename local camelcase consistency 2122,,
1431,07ccba5e3cbcc9ff3e36692d184fcaa15318f304,lon Zakai <azakai@google.com>, 2019-05-17 13:06:41 -0700, , fix dae fuzz bug 2121,,
1432,d8c46cf57840eadc3d59ef8bffb2d1b3d4438daf,lon Zakai <azakai@google.com>, 2019-05-17 13:06:24 -0700, , fix infinite loop avoid reinterprets unreachable code loop get 2118 unreachable code get may single set assigns set may assigned get,,
1433,9c637288cf3b1c7505fa7d8edc1536b6e64d5967,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-05-17 12:56:53 -0700, , feature api 2049 add feature handling apis feature enabled default used feature explicitly enabled order module validate,,
1434,1184678086b284944bb119a97ca048b64d4078b6,iddharth <siddu.druid@gmail.com>, 2019-05-17 21:43:50 +0200, , allow color api enable disable color 2111 useful front end wish selectively enable disable coloring also expose apis api,,
1435,1095ef96673f4f33d76da6d58b0ad65c3c257f76,lon Zakai <azakai@google.com>, 2019-05-17 09:09:17 -0700, , add fuzzer option emit code oob load indirect call 2113 useful wasm2js emit trap oob load etc like wasm like trap bad float int hard undefined behavior anyhow may also help general fuzzing trap may make interesting pattern likely also add wasm2js support fuzzer includes using oob option,,
1436,1dd37de69aae51edaf93219f31e736576f751191,eejin Ahn <aheejin@gmail.com>, 2019-05-16 15:52:53 -0700, , add globals metric 2110,,
1437,8c30cd13e556c2f556fea84cedd26250871d07b7,am Clegg <sbc@chromium.org>, 2019-05-16 11:09:34 -0700,2105, fix cmake install binaryen.js 2115 oversight 2105,,
1438,64e6807dc2c5fbb642518f8262d8ffc91b674fa3,am Clegg <sbc@chromium.org>, 2019-05-16 11:01:05 -0700,2104, first stage cleeanup source tree pollution 2105 update build js.sh output directory district bin directory used cmake build may may live source tree directory currently always life source tree followup change hope additionally move test outout tree see 2104,,
1439,f86375ac2121db5fec236f4e35f73adde9318a8c,lon Zakai <azakai@google.com>, 2019-05-15 17:50:49 -0700, , wasm2js coercion optimization 2109,,
1440,cff4b756e61dad01aa1965ceb4d76a24de7413c5,lon Zakai <azakai@google.com>, 2019-05-15 16:22:08 -0700, , wasm2js remove unnecessary label 2108,,
1441,e54b1d3bf6470dde708abca4442edaeb0d01d0b3,lon Zakai <azakai@google.com>, 2019-05-15 11:04:20 -0700, , wasm2js optimize away unneeded load coercion 2107,,
1442,104d52a0e8c2e76e9496de7dae5f3e28fdd9b49e,lon Zakai <azakai@google.com>, 2019-05-13 20:29:24 -0700, , wasm2js emit table way friendly emscripten minification 2102 set local asmfunc scope minifiers easily see simple local value instead using upvar parameter higher emscripten glue emitting,,
1443,b4eb90ce9bc43d9f3897bd13d6fd11f40f706b5a,lon Zakai <azakai@google.com>, 2019-05-13 16:55:06 -0700, , wasm2js precompute bitwise operation 2101 happens e.g i32 load constant offset constant,,
1444,67019f9a72175bc7a098d72aa14a6f6afeb2efce,eejin Ahn <aheejin@gmail.com>, 2019-05-13 10:33:55 -0700, , add missing method globals binaryen.js 2099 print globals array tracing mode like array function export import ... add accessor function globals,,
1445,a1ff274b6bca0ff8d1635c32a6d206863f0a2fc3,eejin Ahn <aheejin@gmail.com>, 2019-05-12 15:13:38 -0700, , delete mappedglobals nfc 2098 seem used anywhere know implementation getglobalname different renamed getfunctionname consistency,,
1446,70434ef31994391ae28c4aaaffd0d4f470da7fdc,am Clegg <sbc@chromium.org>, 2019-05-10 14:05:16 -0700, , generate dyncall function signature used invoke function 2095 previously creating dyncall function signature statically table however dynamic linking may need invoke function table entry e.g table entry different module,,
1447,4b35f384fe753f06c22a04bfa1be056e92f67739,lon Zakai <azakai@google.com>, 2019-05-10 12:24:03 -0700, , look fallthrough value precompute propagate 2093 help quite lot wasm2js,,
1448,d216f8742ba0663fffb035c577a5449bbc8a33a2,lon Zakai <azakai@google.com>, 2019-05-10 10:23:58 -0700, , wasm2js avoid reinterprets 2094 reinterpret especially expensive implement write temp buffer read using another view find place load value memory reinterpret later case load using another view cost another load another local helpful thing like box2d many reinterprets due main vector class union two float ints llvm like single i64 load,,
1449,bdfdbfbbac4a0f47d8b789167697d6dd70a39720,lon Zakai <azakai@google.com>, 2019-05-10 09:08:28 -0700, , emit process filename byn tempfiles 1916 help avoid trampling binaryen called multiple time emcc example,,
1450,14a286971d203e3caf6f49089fe6ddc16024861f,eejin Ahn <aheejin@gmail.com>, 2019-05-07 18:52:57 -0700, , add except_ref type 2081 add except_ref type part exception handling proposal,,
1451,da716eb233f9fe7cefc61d9d1ce54f8b8c9d9126,lon Zakai <azakai@google.com>, 2019-05-07 10:02:01 -0700, , wasm2js optimize booleans 2090,,
1452,9384c1d52a8176666e0412b23d9a32ccbc4a8f44,eejin Ahn <aheejin@gmail.com>, 2019-05-06 18:20:03 -0700, , make sexp instruction parser pas clang tidy 2088 current clang tidy setting requires ifs unlike clang format find directive option allow exclude generated inc file clang tidy anyway adding pair brace take make pas,,
1453,badcb4098c9f5fc1700d994366600171e71270a2,eejin Ahn <aheejin@gmail.com>, 2019-05-06 18:19:45 -0700, , fix formatting comment nfc 2091 thing missing 2048,,
1454,36b6a94cec5799bddab682996a02b41aab878816,lon Zakai <azakai@google.com>, 2019-05-06 17:11:35 -0700, , update readme wasm2js doc stuff 2086,,
1455,f10bc3e2c9c6a96634e14500347bbd2c51ce607c,lon Zakai <azakai@google.com>, 2019-05-06 15:09:53 -0700, , wasm2js handle saturating float int conversion handle precisely anyhow 2087,,
1456,ae7c24e664cf95fb63fcb2bac2477d7391cae01b,eejin Ahn <aheejin@gmail.com>, 2019-05-06 11:42:20 -0700, , show stderr output clang tidy travis 2089 run clang tidy second time show error show stderr output helpful error message printed stdout,,
1457,923c6465c97dc22d0eccc6fcbf4c5ae701e92ea8,eejin Ahn <aheejin@gmail.com>, 2019-05-03 19:22:58 -0700, , add exception handling feature 2083 add feature flag instruction yet,,
1458,415e8b37c2e570117b17394d4910ca57fa2d11d8,lon Zakai <azakai@google.com>, 2019-05-03 13:47:49 -0700, , wasm2js optimize load 2085 loading boolean prefer signed heap commonly used may faster never use heapu32 heap32 always enough remove,,
1459,909ac3410093c0b35b3181abcd44b9fb9ceb4781,lon Zakai <azakai@google.com>, 2019-05-03 11:26:41 -0700, , wasm2js avoid slow operation optimizing 2082 without emscripten took extremely long time compile,,
1460,80b509cfb8fa35d229643f35e423e6d049ab8849,lon Zakai <azakai@google.com>, 2019-05-02 16:40:20 -0700, , wasm2js emit obviously unnecessary parens 2080 minifier would probably remove later anyhow make reading code annoying hard,,
1461,29e7e4483dc04ca8e882f12871c7eb395c82de00,lon Zakai <azakai@google.com>, 2019-05-02 14:17:49 -0700, , wasm2js ignore implicit trap 2079 actually try emit trap load store invalid float ints etc. optimizing may well assumption trap exist let emit nice code select whose operand load example otherwise value seem side effect,,
1462,b394fcc887dbb2e02b5ff5b307004e4dc7ec2baf,lon Zakai <azakai@google.com>, 2019-05-02 13:09:18 -0700,2011, optimize mutable globals 2066 global marked mutable assigned make immutable immutable global copy another use original remove duplicate fix 2011,,
1463,01a4bfdb5c28d54fd480d603cba2d35c943a0bf5,lon Zakai <azakai@google.com>, 2019-05-02 11:41:34 -0700, , add pas lower unaligned load store 2078 replaces wasm2js code lowered pessimistic byte aligned load store new pas optimal thing keeping byte alignment possible also nicer standalone pas simple property run load store aligned instead code scattered inside wasm2js,,
1464,3b4d9013c6c2dd6cfa90e02e2307a758a0f91140,eejin Ahn <aheejin@gmail.com>, 2019-05-01 18:07:04 -0700, , reenable clang tidy travis hook 2077 reenable clang tidy hook temporarily disabled 2075,,
1465,af459403bc6e1bb99468ad05f351665143193082,lon Zakai <azakai@google.com>, 2019-05-01 17:18:04 -0700, , wasm2js run coalesce local optimizing 2076 pas slow unoptimized code super linear number local unoptimized massive due flatten,,
1466,2bd3758a22131cfd6925b3fd995657b211095c90,lon Zakai <azakai@google.com>, 2019-05-01 14:48:41 -0700, , clang tidy brace change 2075 applies change 2065 temprarily disables hook since slow run change large enable later commit,,
1467,73709b4da08d285c2237c8c23a54ba53274c0c7f,lon Zakai <azakai@google.com>, 2019-05-01 10:43:01 -0700, , wasm2js run optimization 2073 particular coalesce local useful even closure run later apparently find stuff closure,,
1468,ac93469d7fde75397403db94d9bf0c1bac0cf60f,lon Zakai <azakai@google.com>, 2019-05-01 09:18:44 -0700, , proper error unsupported segment type 2068,,
1469,8d4bcd6e02bb0df3ac87e4850896ba733525b055,lon Zakai <azakai@google.com>, 2019-04-30 20:30:03 -0700, , wasm2js run full optimization pipeline 2071 flatten i64 lowering etc pass worth optimizing afterwards clean stuff created run user ran wasm2js optimization level like wasm2js split test file check optimized unoptimized code,,
1470,fba743ca5bdfe4fb437a36503b8983c5f42e4575,eejin Ahn <aheejin@gmail.com>, 2019-04-30 17:51:03 -0700, , make clang tidy check header file 2072 without header file error would ignored,,
1471,d77f0fdfb5f38b254a9382439a4961559b5d8cbe,eejin Ahn <aheejin@gmail.com>, 2019-04-30 17:12:36 -0700, , add clang tidy diff hook travis 2060 add clang tidy hook travis run clang tidy diff current head master take long time run clang tidy whole repo feasible anyway,,
1472,a360a68b78248196b157ba6b950456d17d1b5190,lon Zakai <azakai@google.com>, 2019-04-30 15:14:11 -0700, , wasm2js optimize away cast going suitable store 2069,,
1473,a81f5cb4201a9569c80e101e5e86dcd7aa320943,eejin Ahn <aheejin@gmail.com>, 2019-04-30 14:52:55 -0700, , merge branch master clang_tidy_hook,,
1474,3399f8853ece7e9945a696f5d2ff7e1dc906faa4,eejin Ahn <aheejin@gmail.com>, 2019-04-30 12:29:59 -0700, , change error message slightly,,
1475,06f659ccea289ba25a96b3877f1458c835c7f43b,lon Zakai <azakai@google.com>, 2019-04-30 12:29:27 -0700, , use alignment everywhere 2070 i64 load store broken higher alignment use,,
1476,c3525e03cf45e9bccbdf6b40208e5fae7769b6c9,eejin Ahn <aheejin@gmail.com>, 2019-04-30 12:25:05 -0700, , remove clang tidy error used trigger travis error,,
1477,fa4e1e5d9bf94c43b9b0b2295476e6b72daa81ff,lon Zakai <azakai@google.com>, 2019-04-30 10:48:51 -0700, , wasm2js optimize switch 2067 emit unneeded break switch case instead case case  case break group also group default need case default,,
1478,6ef03f511a98565cb62d8e50940bcda95599e7f6,eejin Ahn <aheejin@gmail.com>, 2019-04-29 11:28:40 -0700, , run clang tidy diff.sh exists,,
1479,78f22b7eb7d1ee2525eff5f7e9f240142ea03d2b,eejin Ahn <aheejin@gmail.com>, 2019-04-29 10:55:10 -0700, , change error brace related one,,
1480,1dc9ae587ec57d45a789bbbe54473ae673f67130,eejin Ahn <aheejin@gmail.com>, 2019-04-29 10:51:11 -0700, , temp,,
1481,28e01f3e832498237d78a64aafc1ee2a26f92bb4,eejin Ahn <aheejin@gmail.com>, 2019-04-29 10:42:58 -0700, , add .clang tidy 2062 add check later check style variable function class match currently body do_while inside brace clang tidy default check related possibly buggy code,,
1482,ba8cade3019758243ebda74c1a563e38687d4ba9,lon Zakai <azakai@google.com>, 2019-04-29 10:15:42 -0700,2063, properly handle optimizing set inside value another set simplifylocals 2064 detail lengthy comment source fix 2063,,
1483,e2b1fe063c0a2dc55c28f10a42ebd36d8348494a,eejin Ahn <aheejin@gmail.com>, 2019-04-27 19:58:45 -0700, , final,,
1484,e6229bad2e7f5d22d7d2a77e84c53174c0a3f863,eejin Ahn <aheejin@gmail.com>, 2019-04-27 19:48:29 -0700, , well,,
1485,cb467246860fda1a6b9c0a561fb2408b3835fa9f,eejin Ahn <aheejin@gmail.com>, 2019-04-27 19:45:56 -0700, , test,,
1486,8bc75ee50fb19af7e45ee2dcb95a394b82cce3fe,eejin Ahn <aheejin@gmail.com>, 2019-04-27 19:08:26 -0700, , clang tidy version,,
1487,f204f02ae151a71ce1def135c31ca7e458ee4165,eejin Ahn <aheejin@gmail.com>, 2019-04-27 18:54:24 -0700, , working,,
1488,d886a3d46c3dc5bf71528d6d03235800b366379f,eejin Ahn <aheejin@gmail.com>, 2019-04-27 18:39:32 -0700, , remove special case handling,,
1489,706f3e846bc4619ce5b4711898baacb734e079aa,eejin Ahn <aheejin@gmail.com>, 2019-04-27 18:37:52 -0700, , change clang tidy error brace related one,,
1490,fd85f81810162757be8c2baed6290e9d5361c1ab,eejin Ahn <aheejin@gmail.com>, 2019-04-27 18:27:17 -0700, , add helpful message skipping test,,
1491,7621a10aab6a5c440c1a3c71d96209906445e6e3,eejin Ahn <aheejin@gmail.com>, 2019-04-27 18:21:56 -0700, , add clang tidy error show travis work,,
1492,c6fa2a3c6873d2e05c942f5ed534c170dfef1b4b,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:46:55 -0700, , wingardium leviosa,,
1493,a6f55c52396ffb66bdd2cd3826b68d8b60668b96,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:39:39 -0700, , ...,,
1494,a64aa9532afbce555fc963c58a4fc984d4180038,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:32:59 -0700, , doe succeed wrong style,,
1495,708975939fae92a5ae2970ba9aa2e2e049a332cb,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:15:19 -0700, , ,,
1496,270dd95aa8fc7adf960eb03e3c44def33d1bdbb9,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:11:12 -0700, , ,,
1497,0b8b67cbb48dfa912139f61db74140eaf37337cb,eejin Ahn <aheejin@gmail.com>, 2019-04-27 17:06:41 -0700, , missing,,
1498,83ce0d595a8b029f80bcea3a413f43c02fb1174d,eejin Ahn <aheejin@gmail.com>, 2019-04-27 16:43:46 -0700, , typo fix,,
1499,f32eb725333dc842396bbf674fb28b59c1884907,eejin Ahn <aheejin@gmail.com>, 2019-04-27 16:42:08 -0700, , finally,,
1500,0c0975902b2b8478c051f5f58d421dfbb7f880ed,eejin Ahn <aheejin@gmail.com>, 2019-04-27 16:32:58 -0700, , whatever,,
1501,9eb096545ad0d07b56addbaf812566c1dbd0e1da,eejin Ahn <aheejin@gmail.com>, 2019-04-27 15:53:14 -0700, , directory query,,
1502,d224f879e380d5a6c1c3f10a1d8372363ccc6419,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:36:49 -0700, , fix unintended clang format error,,
1503,af61625bc8ef6fc24e9f58f8b9e73c394fc24628,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:32:18 -0700, , running clang tidy,,
1504,73193d24aca7e9c0c8001567b75a3f0ccc26ed66,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:23:05 -0700, , run clang tidy,,
1505,5984a71b3e914c8cc149efbb1117b7e96678cdb8,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:15:52 -0700, , current directory,,
1506,3992d785a670ce322d3d21265f44680a72769335,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:12:55 -0700, , add,,
1507,fe1bba9e3e84363fb244b70adf78da135372122c,eejin Ahn <aheejin@gmail.com>, 2019-04-27 12:07:00 -0700, , run clang tidy cmake,,
1508,e340bb6e2b0a28d8a8c15b45395b7b97e7765b8b,eejin Ahn <aheejin@gmail.com>, 2019-04-27 11:33:32 -0700, , add cmake,,
1509,56e194a7b3c23cd08a80d6b292744968d1fdb0b3,eejin Ahn <aheejin@gmail.com>, 2019-04-26 18:33:23 -0700, , add missint exit,,
1510,6320febe5844842aaca39a599ef3f8982239c307,eejin Ahn <aheejin@gmail.com>, 2019-04-26 18:11:10 -0700, , add clang tidy travis hook test,,
1511,07dee0d88cd7f76099ab2b0f690ec3ff4ca5a2d5,eejin Ahn <aheejin@gmail.com>, 2019-04-26 16:56:58 -0700, , clang tidy diff.py,,
1512,b2e82b386037d2363d0d0b397530dc460106f021,eejin Ahn <aheejin@gmail.com>, 2019-04-26 16:46:43 -0700, , clang tidy binary,,
1513,ccced7c7610334295be6d0e04175679929dfb3dc,eejin Ahn <aheejin@gmail.com>, 2019-04-26 16:36:49 -0700, , clang tidy hook test submit,,
1514,7c3d4cd8d9f102af24ad32f6bf86e79a4f850c4f,lon Zakai <azakai@google.com>, 2019-04-26 17:29:29 -0700, , fix 2061 breakage prevented noticed make binaryen.js use no_filesystem need investigate recent emscripten change broke usage flag update binaryen.js test,,
1515,db9124f1de0478dcac525009b6f1589b44a7edd8,lon Zakai <azakai@google.com>, 2019-04-26 16:59:41 -0700,2048, apply format change 2048 2059 mass change apply clang format everything applying git blame mine aheejin work get clang format set manual work tidy thing make output nicer 2048,,
1516,87636dccd404a340d75acb1d96301581343f29ca,eejin Ahn <aheejin@gmail.com>, 2019-04-26 14:42:40 -0700, , add clang format diff hook 2057 add commit hook travis error incoming diffs clang formatted turn clang format also capable formatting javascript agreed style yet disables javascript formatting also add clang format exempt header footer generated source file,,
1517,34dd4c7893056e13cc9174db988d03e438a6af3d,lon Zakai <azakai@google.com>, 2019-04-26 11:07:42 -0700, , wasm2js remove unneeded break continue label 2058,,
1518,78a4f9ef1afd6c209a5c69a8e7906ffe33575f58,lon Zakai <azakai@google.com>, 2019-04-25 17:10:06 -0700, , wasm2js2 optimize call_indirect select operand 2056 use temp var reorder unless need,,
1519,21f014f4bd0ea1086895d8674f1473af222eb416,lon Zakai <azakai@google.com>, 2019-04-25 17:09:47 -0700, , wasm2js support non constant index memory table segment 2055 mostly need dynamic linking least binaryen side,,
1520,ef6020cd5fbf9af61e7fdc17a5c787fc733f793d,lon Zakai <azakai@google.com>, 2019-04-25 10:35:22 -0700, , wasm2js optimize loop eqz 2051,,
1521,09945884f7461135286357d14f993f9b5c5a329b,am Clegg <sbc@chromium.org>, 2019-04-25 07:50:15 -0700, , remove f32 legalization 2052 well i64 splitting pas also converting f32 f64 wasm boundry however appears actually useful make somethings dynamic linking harder,,
1522,c3ed0f176b36a502ef2e1fd915550a808b8d8f0b,lon Zakai <azakai@google.com>, 2019-04-24 15:27:05 -0700, , wasm2js optimization 2050 emit ints signed big unsigned number constant larger wasm  avoid unnecessary coercion call return load etc need coercion entering exiting wasm internally actual operation need,,
1523,bc0a605e8864324d40aafbd00e8de0e50240ce26,astian MÃ¼ller <bastian@turbolent.com>, 2019-04-24 13:36:02 -0700, , fix typo api 2047,,
1524,f81c78bd62548a1eabc27adfbcbdc44cefb320cf,lon Zakai <alonzakai@gmail.com>, 2019-04-24 10:22:56 -0700, , wasm2js start optionally optimize 2046 remove redundant similar thing apparently closure compiler make sense,,
1525,5d3fcffdd9f9d9de10a0ce60d1e0163693c007c3,lon Zakai <alonzakai@gmail.com>, 2019-04-23 17:13:47 -0700, , wasm2js emit quoted property export support closure compiler 2043,,
1526,7c5a789c6ccf09bfaec9c449aa606d8a6276b855,eejin Ahn <aheejin@gmail.com>, 2019-04-23 16:59:17 -0700, , allow short case block single line 2044 looking code change mass clang formatting current codebase think rather hurt readability improves none preset style llvm chrome google mozilla webkit allows exception google allows short ifs single line,,
1527,4c3297bba82905994a36e52701696be412573b3f,lon Zakai <alonzakai@gmail.com>, 2019-04-23 14:26:57 -0700, , wasm2js emit call memory growth helper memory growth used 2042,,
1528,455f431260efbd48f018259bf8db544e1b9d03c4,lon Zakai <alonzakai@gmail.com>, 2019-04-23 12:40:14 -0700, , wasm2js avoid non es5 stuff like let 2041 also fix fuzzer handling feature flag wasm2js work,,
1529,7fe2701d3bcbea625405f7b8c852aa3154face6b,lon Zakai <alonzakai@gmail.com>, 2019-04-22 16:22:10 -0700, , wasm2js remove code need since flat 2039 also run remove unused name became noticeably necessary change,,
1530,831a774641b63bc4980eb6e71b1c59d92d19fb4d,eejin Ahn <aheejin@gmail.com>, 2019-04-22 16:18:08 -0700, , binpack argument parameter 2038 looking current codebase mostly binpack argument parameter fit single line   true void    false void        true void int int int false void int int int ,,
1531,d4f5162f62e9ea920abd196bd5ca2f9505e2823e,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-22 15:56:38 -0700, , finish bulk memory support 2030 implement interpretation remaining bulk memory ops add bulk memory spec test light modification fix bug preventing fuzzer running correctly bulk memory fix bug found fuzzer,,
1532,711a22c65f28029ae0ca2d31a0cd6f8be9b953c7,lon Zakai <alonzakai@gmail.com>, 2019-04-22 14:46:42 -0700, , wasm2js get rid non flat code assumption 2036 run flatten let simplify thing lot turn assertion run still needed old non flat code path add flatten remove old code assumption,,
1533,ff710e63eaed7cf8fbf3042843f6243597da49be,lon Zakai <alonzakai@gmail.com>, 2019-04-22 14:00:35 -0700, , wasm2js unreachability fix 2037 also test pas debug mode better coverage,,
1534,f87de2ae0d430f8d4204df8fceb194c24e29b413,am Clegg <sbc@chromium.org>, 2019-04-22 11:36:50 -0700, , wasm emscripten finalize handle relocatable code asmconstwalker 2035 replacing first argument asm call allow complex expression expressing address fix case first argument might result adding constant __memory_base,,
1535,b2161e3148e40cec252abb0ef33538b797954579,lon Zakai <alonzakai@gmail.com>, 2019-04-22 09:42:30 -0700, , wasm2js fix printing negated negative constant 2034 invalid print need add space valid parse,,
1536,b8d93ea629f59f534093d20f37cb8baf9809062e,lon Zakai <alonzakai@gmail.com>, 2019-04-22 09:37:15 -0700, , wasm2js remove unneeded code also risk incorrectness 2032 risk child type may unreachable case may forgotten signing could get incorrect result,,
1537,b99d668ead5c6a6a4891ec58b5a53e80ea9f5705,lon Zakai <alonzakai@gmail.com>, 2019-04-22 09:28:23 -0700, , wasm2js use scratch memory properly 2033 replaces __tempmemory__ old scratch space location call function import scratch memory access let implement way doe use heap main memory avoids possible bug scratch memory overwriting something general observable side effect confuse fuzzing etc intrinsics currently implemented glue could perhaps emit inline instead might limit asm.js optimization wanted keep option open easy change later also fix place used scratch space address,,
1538,db14d0477f2715e3071687f42b77d8712477d83e,lon Zakai <alonzakai@gmail.com>, 2019-04-19 15:22:55 -0700, , wasm2js2 import fix 2031 assume function type exist legalize interface properly handle ignore import removenonjsops try recurse run legalize interface remove unused module element wasm2js first necessary last nice,,
1539,a4baf2152d11c28964025759d2702fe7c48d321e,lon Zakai <alonzakai@gmail.com>, 2019-04-18 17:05:30 -0700, , wasm2js handle unreachable select global.set 2029,,
1540,5becae69e29c876f3ba46d6746764e409bd7fd9b,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-18 15:40:30 -0700, , reland emitting datacount section 2027 reverts commit issue feature validation mostly resolved 1993 finish job adding feature flag wasm avoid emitting datacount section bulk memory enabled,,
1541,9233afca9a27f8794fb0c8b79b5fa0d8e47060d4,lon Zakai <alonzakai@gmail.com>, 2019-04-18 13:25:16 -0700, , wasm2js2 fuzzing improvement 2028,,
1542,769b92faf0447264c363aba6ce1fcec58786507f,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-18 13:13:34 -0700, , refactor interpreter initialization use bulk memory 2025 corresponds change made initialization procedure spec also remove heavy initialization work external interface interpreter nice encapsulation win implementation interpretation remaining bulk memory operation rigorous test interpretation come follow,,
1543,a9808ac6982e88262fc652d0634bf17119e1ee5f,lon Zakai <alonzakai@gmail.com>, 2019-04-18 13:06:23 -0700, , wasm2js try smart emitting brace corner case tricky 2026 leave later optimizers minifiers,,
1544,8dc68bc96db046127d648644daa89f524a668863,lon Zakai <alonzakai@gmail.com>, 2019-04-18 10:39:41 -0700, , wasm2js remove use asm asm.js anymore 2020 also emit memory growth code based memory growth whether use asm,,
1545,77c44ecded323174d79a98bd43c3d2c064ac08e4,lon Zakai <alonzakai@gmail.com>, 2019-04-18 09:33:40 -0700, , wasm2js support i64 globals 2021 split two i32 globals,,
1546,13dd8771d57161618acec8907f739bcdbdcf66cb,lon Zakai <alonzakai@gmail.com>, 2019-04-17 20:29:32 -0700, , use 2024 prevent surprise future,,
1547,2d6e3e108d0f4a484a7dde47c98081537754350e,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-17 20:08:43 -0700,1984, precompute bulk memory operation 2023 fix 1984,,
1548,f20f8c39adccc8593c0eea3b98378ca9549f9c26,lon Zakai <alonzakai@gmail.com>, 2019-04-17 19:52:20 -0700, , fuzz prep wasm2js 2022 get fuzzing runnable state,,
1549,c7712d3757461da036f9c7714cec372d584733e3,lon Zakai <alonzakai@gmail.com>, 2019-04-17 17:03:36 -0700, , wasm2js fix br_table loop 2018,,
1550,aaf1c43f10cb703c9f926ddcb5aa2e728b651e07,lon Zakai <alonzakai@gmail.com>, 2019-04-17 16:37:00 -0700, , improve log execution pas also log around return 2019,,
1551,f75cf7fe9a70ec7041f758f061ac45deed18f4ab,lon Zakai <alonzakai@gmail.com>, 2019-04-17 10:34:54 -0700, , fix else printing body labelled block 2017 print label else wrong end early print label else bug checked body block labelled block,,
1552,4a1a935ff0e30c9e46f4b7469488a5b6ffee2714,lon Zakai <alonzakai@gmail.com>, 2019-04-17 10:34:16 -0700, , demote wasm2js warning scope 2016 actually analyze scope properly see comment commit demote warning sure worth fixing removing,,
1553,db6d6dc9049bf01423202a445e57450ae230e7c2,lon Zakai <alonzakai@gmail.com>, 2019-04-17 10:33:58 -0700, , wasm2js fix unaligned load store 2015 forgot set unsigned meant reading uninitialized memory checking field mostly worked except previously contained something ...,,
1554,93152948b0bc5d5a3a501f5a08bd864262d1957b,am Clegg <sbc@chromium.org>, 2019-04-16 16:53:02 -0700, , create version_80,,
1555,4d81752204fede13d6513def4195aabe66c5586f,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-16 16:47:50 -0700, , change default feature set mvp 1993 absence target feature section command line flag command line flag error exactly match target feature section except detect feature provided also add print feature pas print command line flag enabled option make feature test rigorous,,
1556,698fddca4e598cb4f72fe61557c9f91ed879a289,lon Zakai <alonzakai@gmail.com>, 2019-04-16 14:38:03 -0700, , improve instrumentation pass 2012 make memory instrumentation pas log pointer value use env import module simpler support get working,,
1557,a8fde2fa899cfbca9069f0796fce284ab7a6ffc4,lon Zakai <alonzakai@gmail.com>, 2019-04-16 14:37:35 -0700, , wasm2js support memory import properly updating buffer 2013 emit import statement memory update imported memory buffer grow,,
1558,b30e2c576b317b4cbc49e9e18139cbd260ed0317,am Clegg <sbc@chromium.org>, 2019-04-16 13:19:13 -0700, , create version_79 2014,,
1559,a76c9dcddf1280b76b0c18c2605453d66a2af410,am Clegg <sbc@chromium.org>, 2019-04-16 13:05:04 -0700, , make sure always add signature function 1994 previously searching function name work internal name function different order repro case shared.c test converted since binaryen internal name different since come mangled name section,,
1560,324238cc44e51c65637d29a938c435248d384154,lon Zakai <alonzakai@gmail.com>, 2019-04-16 10:00:19 -0700,2007, verify flat expected give nice error 2009 fix 2007 2008,,
1561,cb2d63586c08a3dd194d2b733ceb3f5051c081f8,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-15 15:57:36 -0700, , emit datacount section 2010 presence causing validation error emscripten test suite reverted default feature set longer,,
1562,1e91e1b666cc76874732d27843d0048c15b6152b,lon Zakai <alonzakai@gmail.com>, 2019-04-15 13:57:56 -0700, , use single table wasm2js 2005 replaces multiple asm.js table power size single simple table also support importing table,,
1563,a803c119f1a4babb7efc3dda0f475e1e87893475,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-15 11:15:17 -0700, , datacount section 2006 datacount section read datacount section verify agrees data section also emit datacount section bulk memory enabled nonzero number segment factor shared unit test code,,
1564,9495b338121140d585648d64fb99e8ef7f92f867,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-12 18:27:13 -0700, , move feature passoptions module 2001 allows emit potentially modified target feature section conditionally emit section datacount section based presence feature,,
1565,883d14de7157950063f74b81658d00df0d53be8d,lon Zakai <alonzakai@gmail.com>, 2019-04-12 15:45:10 -0700, , wasm2js memory fix 2003 assume address hardcoded location scratch memory import __tempmemory__ removenonjsops also use __tempmemory__ oddly address hardcoded 1024 perhaps rust program put static global support imported ints wasm2js coercing needed add env import support test since emit import make wasm2js test split multi module test using split_wast robust avoids emitting multiple output one file make sense es6 module,,
1566,53badfbea40e78eadf652735d247649948e0b9a9,lon Zakai <alonzakai@gmail.com>, 2019-04-12 09:16:50 -0700, , wasm2js memory improvement 2002 refactor memory code share two emitting mode get memory emitting set emscripten mode,,
1567,fc3b8eed2b9fb2aa7e55ac833ea08cf7eae46a0a,lon Zakai <alonzakai@gmail.com>, 2019-04-11 15:57:05 -0700, , wasm2js emscripten glue option 2000 add wasm2js option glue emscripten compatible format opposed es6 doe thing far emit start_functions end_functions marker code future use optimizer emit glue function called emscripten,,
1568,b769b4ede65eb014376b67f78ba5e6cb04e0cef8,lon Zakai <alonzakai@gmail.com>, 2019-04-11 14:01:51 -0700,1929, wasm2js refactoring 1997 early work 1929 leave core wasm module asm.js function wasm2jsbuilder add wasm2jsglue emits code currently es6 code may want change later add add class sole purpose emitting module assertion testing avoids hack like starting index assuming module first position already parsed printed printing f32equal etc function top due technical limitation logic wise visible change except whitespace reodering made exception print source assertion failed wast check2 fail2 check2 throw assertion failed assert_return call add i32.const i32.const i32.const fail2 etc exist seems given unique number assertion,,
1569,4905c3d3b4be20a89920ea2a56c1868294e77b65,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-11 00:49:51 -0700, , bulk memory side effect 1998,,
1570,6b517f6f70d5af72ed5d217a307a0b9b9284be24,lon Zakai <alonzakai@gmail.com>, 2019-04-10 19:39:12 -0700, , precompute anything vector 1999 handled normal case optimizer also precompute return value check output precomputation well,,
1571,7be5d23122aba2791fb6ff382bcaa19388a72932,lon Zakai <alonzakai@gmail.com>, 2019-04-10 16:27:29 -0700, , compare running binaryen opts non binaryen vms nan allowed nondetermnistic 1996,,
1572,39eae1d5772099282af656ee2bb0ce388e2e7268,am Clegg <sbc@chromium.org>, 2019-04-10 11:24:00 -0700, , handle relocatable code asmconstwalker 1992 relocatable code constant offset might relative __memory_base,,
1573,85c303de41b1e0d46cb3d389512b9ab10472391e,lon Zakai <alonzakai@gmail.com>, 2019-04-10 10:42:50 -0700, , minor wasm2js cleanup 1995 look sign load actually matter prepare imported globals refactoring cleanup,,
1574,3b27c3bc9a155315dd3b417edca16094571f5ff6,eejin Ahn <aheejin@gmail.com>, 2019-04-11 02:35:08 +0900, , modify .clang format 1986 modifies .clang format reflect discussion 1981. basically remove custom 100 col line length allows one line ifs case block one similar option clang format find one line loop codebase think use,,
1575,7cc509f54a759034fbff57fae64e142ad15cc097,lon Zakai <alonzakai@gmail.com>, 2019-04-10 10:16:57 -0700, , fuzz fix 1991 get fuzzer attempt create almost feature pas flag allow fix fuzz bug read signed_ even irrelevant type load improve wasm reduce fuzz testcases try replace node drop child child,,
1576,b13db5a0bc1170494ba845ab66129a506b251fde,lon Zakai <alonzakai@gmail.com>, 2019-04-09 10:34:21 -0700, , avoid signed overflow undefined behavior constant computation 1990,,
1577,d318b18d8c415357e8ee65dd4ae34ec28dc8f9d0,lon Zakai <alonzakai@gmail.com>, 2019-04-09 09:31:26 -0700, , directize change type unreachable need propagate 1989,,
1578,b56c691ab87c2cd09255b2617213ec5d8e92a748,lon Zakai <alonzakai@gmail.com>, 2019-04-08 17:26:24 -0700, , better memory fuzzing 1987 hash content memory log random place fuzzer sensitive catch memory bug fix uncovered binary writing code segment empty look vector instead use vector.data add builder addexport convenience method,,
1579,c9eeaefbd839cc5176957e479475625fc8b2bcf0,am Clegg <sbc@chromium.org>, 2019-04-08 17:23:02 -0700, , wasm emscripten finalize rename function pointer getter function 1988 turn already precedent emscripten using function also improve heuristic guessing stack pointer global case use explicit stack pointer imported exported globals,,
1580,c5ad2e5ecc517030aa242c18fd738b9d79f11429,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-08 15:49:26 -0700, , move segment merging fit web limit pas 1980 previously part writing binary changing number segment late stage would work presence bulk memory datacount section also update memory packing pas respect web limit number data segment,,
1581,3eb9b27246d5d021d68b9a854c064d5a537728dd,lon Zakai <alonzakai@gmail.com>, 2019-04-08 13:06:26 -0700, , directize argument may side effect remove optimizing unreachable 1985,,
1582,37443aef8c22f100dc59e81aff6af5a252f3217d,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-05 19:48:54 -0700, , passive segment 1976 add support bulk memory proposal passive segment new data passive ... expression syntax mark section passive,,
1583,5b24f039ba1f55520a61f6dd6bb8ca46556c592b,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-05 16:30:15 -0700, , add missing comma metadata json 1983,,
1584,fc13d0f3585318ada789b9f27421e667056e9a84,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-05 16:08:51 -0700, , add feature option emscripten metadata 1982 emscripten run wasm emscripten finalize running wasm opt target feature section stripped optimization run one option would add another wasm opt invocation end strip target feature section dumping feature metadata avoids extra tool invocation long run would nice single binaryen invocation work need,,
1585,2129cef6acbbe4acd5fd675fbb00c329e2220a40,am Clegg <sbc@chromium.org>, 2019-04-04 15:45:57 -0700, , wasm emscripten finalize add namedglobals output metadata 1979 key used emscripten building main_module order export global variable main module side module,,
1586,cac81ba0ec2e477f106632f0eb0e774a2e10d491,lex Crichton <alex@alexcrichton.com>, 2019-04-04 12:32:33 -0500, , attempt fix sha256 generation osx 1977,,
1587,b175e75d2b247b3687061cf51174e72f8ada4aca,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-04-03 18:15:00 -0700, , use target feature section wasm opt 1967 user doe supply feature explicitly command line read use feature target feature section validation pass user doe supply feature explicitly error superset feature marked used target feature section user doe explicitly handle,,
1588,773759f7842611bbe3e30f7b9d4cd24350291976,lon Zakai <alonzakai@gmail.com>, 2019-04-03 17:49:47 -0700, , update test spec memory.wast latest upstream 1801 minus multi memory support yet improve validator fix minor validation issue test,,
1589,02198da745469104cb6ced60b37efa8d8a7f4464,lon Zakai <alonzakai@gmail.com>, 2019-04-03 10:49:48 -0700, , add mechanism pas argument pass 1941 allows wasm opt pas arg key value key value string added pass read used extractfunction instead env var,,
1590,29d638f9d298a9448996bcd3f50a9d51b7d200d9,lon Zakai <alonzakai@gmail.com>, 2019-04-03 10:48:11 -0700, , fuzz carefully using nan 1956 vms disable comparison case,,
1591,91704fbae74fa7c89a017764eaa5ff03eda5ec0d,am Clegg <sbc@chromium.org>, 2019-04-02 16:52:54 -0700, , update changelog.md 1978,,
1592,d2f7d4db6ef38b6653cb2b0ef115b8282d825673,lon Zakai <alonzakai@gmail.com>, 2019-04-02 15:08:14 -0700, , directize turn indirect call direct one 1974 wip skip work test output test update build better location running directize,,
1593,b192c53c6ef549bb5264bc58a71424ce311a4890,am Clegg <sbc@chromium.org>, 2019-04-02 14:53:48 -0700, , wasm emscripten finalize improve shared library support 1961 convert pic code generated llvm work current emscripten abi dynamic linking convert mutable global import got.mem got.func internal globals initialize globals started foo foo imported function calculate address runtime also add test case linking finalizing shared library allow __stack_pointer global non existent case shared library allow __stack_pointer global import case shared library,,
1594,d988bff19c7905bd992fd726288d4927d377ec2e,lon Zakai <azakai@google.com>, 2019-04-02 12:55:23 -0700, , better location running directize,,
1595,8e8cb825cd28bc1c188f9cf796bd97626bc1bb40,lex Crichton <alex@alexcrichton.com>, 2019-04-02 11:32:26 -0500,1695, add window binary release appveyor 1700 commit tweak appveyor configuration publish bit artifact part normal release build configuration also added sure compile code msvc ensure released artifact depend dlls possible hopefully making portable possible 1695,,
1596,a534f4220fdecc63a05bd6945c20dae54552a2f5,lon Zakai (kripken) <alonzakai@gmail.com>, 2019-03-31 14:17:38 -0700, , build,,
1597,040ccad52a1123be2fca36d7adcd9589ec1981ff,lon Zakai (kripken) <alonzakai@gmail.com>, 2019-03-31 11:29:01 -0700, , test update,,
1598,5e2e0024be006d6f523d0828881b4b7b8ba28dd5,lon Zakai (kripken) <alonzakai@gmail.com>, 2019-03-31 11:02:27 -0700, , test output,,
1599,7d11134a5a668bd6f581de5df4a237889bc3a3af,lon Zakai (kripken) <alonzakai@gmail.com>, 2019-03-31 11:01:51 -0700, , work,,
1600,c1b0559ccc49acc2e606ab97f88cf24a68334db6,lon Zakai (kripken) <alonzakai@gmail.com>, 2019-03-31 09:27:51 -0700, , wip skip,,
1601,812bce93447756891e311334bff413e3b79ed2c7,eejin Ahn <aheejin@gmail.com>, 2019-03-30 21:29:41 +0900, , rename atomic wait notify instruction 1972 renames following i32.wait i32.atomic.wait i64.wait i64.atomic.wait wake atomic.notify match spec,,
1602,3e2529386d221841137bd558fab71c91b5e00f1b,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-29 18:09:31 -0700, , warn running gen parser.py python 1971,,
1603,d2ce12f1315bf38df34edfef86701d4bc4f0db35,lon Zakai <alonzakai@gmail.com>, 2019-03-29 17:45:42 -0700, , avoid risky iterator addition 1970 actual problem hit assertion d_glibcxx_debug likely,,
1604,f44c56c961724312224a13e209b3b6db39ad9d77,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-29 15:51:17 -0700, , delete wasm merge 1969 useful,,
1605,c5a22baecfdfc2707bcd06b8e9f168348a6afa43,yoga <ryoga_314@yahoo.co.jp>, 2019-03-27 08:47:35 +0900, , change arenavector iterator satisfy standard legacy concept 1962,,
1606,596ad8288827bd68e7f0fd2e632b9f37f47a36a6,lon Zakai <alonzakai@gmail.com>, 2019-03-26 14:53:07 -0700, , remove getstring used insecure boot 1966,,
1607,56c5ff78310ad956e70bf1a00a64c72ee81d18bd,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-25 18:11:45 -0700, , validation test fix simd 1964 move feature validation unit test file new directory unit add new test simd sign ext add validation v128 globals v128.const,,
1608,5e19a7b05144736ec17ee6b0bb366afa744137c6,lon Zakai <alonzakai@gmail.com>, 2019-03-25 14:11:02 -0700, , semi ssa improvement 1965 add ssa nomerge pas like ssa creates new local index set doe alter index merges practice adding index merges lead copy end also stop adding new local index set already ssa form one set aside zero initialization wasm mandate ssa form index must used enables ssa nomerge help much well optimized code like wasm backend doe sometimes 0.5 code size improvement box2d assemblyscript example remove copy body benchmark seen test update,,
1609,5d240dc566267ec1871df8b43e53cb56b2d2ff40,lon Zakai <alonzakai@gmail.com>, 2019-03-22 19:23:30 -0700, , optimize instruction last precompute propagate 1963 propagated constant helpful various pattern optimize instruction testcase show example action optimize load offset constant propagated afterwards would miss general two pass help maybe combined run multiple iteration converge meanwhile change improves seems common case guessed noticed practice run fuzzer see type case,,
1610,08f9dc5341b9c698681a72805284ddc6fbfe6bae,lex Crichton <alex@alexcrichton.com>, 2019-03-22 10:15:44 -0500, , fix osx build error master 1958 accidentally introduced 1698 look like set low 10.7 cause build error investigation look like minimum currently required 10.9 commit change osx deployment target 10.9 effort compatible many osx installation possible investigation http travis ci.org webassembly binaryen build 509462566,,
1611,9414fa7f9a4299ab192bb6c1f6b01a318636414f,am Clegg <sbc@chromium.org>, 2019-03-21 17:44:20 -0700, , improve test script 1959 improve test script feedback skip move code respective script use shared argument parsing use wasm rather passing flavor,,
1612,6f9360f2b2de71910c9c52b1bfd4bc8479ebb4c6,am Clegg <sbc@chromium.org>, 2019-03-21 14:24:35 -0700, , update lld test expectation 1960,,
1613,5a72c0433d9a984ea217e82ac2690faccd688916,lon Zakai <azakai@google.com>, 2019-03-20 15:52:51 -0700, , clenaup,,
1614,1690311955c5add86d634ecc47e937315b3b6c41,lon Zakai <azakai@google.com>, 2019-03-20 15:52:19 -0700, , merge remote tracking branch origin master nan,,
1615,fe0b16aa222318588f3bfd84e549b4a1528be296,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-19 18:18:20 -0700, , discover run unit test check.py 1948 unittest python standard testing framework change allows arbitrary test written without introducing new dependency code check.py new test possible write also included first many,,
1616,1787295fa5dc81c5eae95df5e847d77e1672a18e,lon Zakai <alonzakai@gmail.com>, 2019-03-19 15:56:24 -0700, , improve zlib test 1953 recreate using extract function turn unwanted function export avoids weirdness empty function body inliner taking advantage also updated llvm longer incorrectly identified irreducible control flow,,
1617,9f1e78627f3c77053b6a8ccfffa48a975ef07d4c,am Clegg <sbc@chromium.org>, 2019-03-19 13:14:14 -0700, , add export count metric 1954 also always output high level metric even zero,,
1618,9e2559b789424ea1920c5e9c73b63a976390226c,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-19 09:18:53 -0700, , update v128.const text format 1934 parse format allowed spec proposal emit i32x4 canonical format,,
1619,dd3873375ca7375b79105742b30fa03f9f8a0c24,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-18 20:38:07 -0700, , validate type match feature 1949 refactors feature new wasm features.h file update validator check type allowed currently relevant v128 simd type new type added future test change 1948,,
1620,a2dd7c4feae3c4da3a1f8de90171795d12eb8879,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-18 17:30:33 -0700, , allow tool read stdin 1950 necessary write test require temporary file 1948 generally useful,,
1621,1cd0157985c7f09e81aee4fb79511888212559f2,lon Zakai <alonzakai@gmail.com>, 2019-03-18 14:55:19 -0700, , add assemblyscript body benchmark test 1951,,
1622,e65f66425a823401783a02ba6155bee2ca216cde,yoga <ryoga_314@yahoo.co.jp>, 2019-03-19 06:02:49 +0900, , add const specifier 1952 write stuff like const wasm expression const wasm binary cast wasm binary,,
1623,907dfb0a2527fb849c068f80b683fa05f6b3e798,shley williams <ashley666ashley@gmail.com>, 2019-03-18 13:55:10 -0500,1695, feat release add osx binary github release 1698 fix 1695,,
1624,fecbb93b74ffcf6c1cdfb6c435b4b6658c9f0023,yoga <ryoga_314@yahoo.co.jp>, 2019-03-19 03:44:09 +0900, , remove unnecessary semicolon 1942 removed semicolon cause error compiling pedantic error,,
1625,c9307d91bfeaf5d9f75e1697dbe062527c091c18,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-15 20:52:12 -0700, , add sign ext feature 1947,,
1626,fc085c0971029bd5fe2bf66074c467f304dfc1e4,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-03-14 18:23:59 -0700, , add strip target feature pas 1946 run wasm emscripten finalize prevent emscripten output changing target feature section land llvm,,
1627,d9cdee0437ebee89377d361e5a9320b44f252152,lon Zakai <alonzakai@gmail.com>, 2019-03-14 17:09:46 -0700, , erase internal debug strip producer pas unconditionally erasing strip pass 1939,,
1628,e18ab2a0cd8b36144578d37585e8a67af618ecd1,am Clegg <sbc@chromium.org>, 2019-03-13 14:19:40 -0700, , add checking 1944 expect stack pointer certain type fix segfault seeing passed binary quite meet expectation,,
1629,0c429ea85f309353c68ea887303ccd1f3935b15e,arris BrakmiÄ <brakmic@users.noreply.github.com>, 2019-03-13 17:43:43 +0100, , trivial typo link win32 compilation 1943,,
1630,65446aeade5b5a1acab6ae2a605ae1702251fda2,aniel Wirtz <dcode@dcode.io>, 2019-03-13 16:58:45 +0100, , add api 1931 add void expr uint8_t api api,,
1631,f0ec4b02fb797387040c65d63f690b3856b1183e,am Clegg <sbc@chromium.org>, 2019-03-12 12:06:58 -0700, , wasm emscripten finalize remove jscall thunk generation 1938 implement addfunction creating wasm module wrap function simply adding table,,
1632,fec88b85e44b49ac3273b0b7d4e06fba060df36f,lon Zakai <azakai@google.com>, 2019-03-11 14:39:36 -0700, , compare vms fuzzing nan since,,
1633,d8bcf64e48f2c33dc785b16c8d3c0b8f5ccc63ef,lon Zakai <alonzakai@gmail.com>, 2019-03-07 17:13:02 -0800, , optimize away set local 1940,,
1634,1a5b410701542413f497b3030c0b87f3600dc1bc,lon Zakai <alonzakai@gmail.com>, 2019-03-07 09:07:30 -0800,1838, fix target instead curr target 1936 caused miss switch target code folding bug fix 1838 sadly fuzzer find code folding look particular code pattern unlikely emitted randomly,,
1635,3a5dcc61ffcc54cecdba2cac272be66310ab2f3d,am Clegg <sbc@chromium.org>, 2019-03-06 18:50:08 -0800, , use stdout help message 1937 noramlly help considered normal output error output example normally pipe output help pager,,
1636,2c4e9d89d483edc0845eeecd38fa8cffd29217aa,lon Zakai <azakai@google.com>, 2019-03-06 14:33:56 -0800, , add test,,
1637,7e56e5b9eb08a68631d98f6d0d7db2adc2cd8236,lon Zakai <azakai@google.com>, 2019-03-06 14:21:07 -0800, , coalescelocals run even var may able remove one var reusing param,,
1638,83aa0dc2daf327ed264cc22e51af1a866787a764,lon Zakai <azakai@google.com>, 2019-03-06 14:12:26 -0800, , optimize added constant propagation see remove original add otherwise may adding work offset add refactor local utils.h make also check side effect cleanly remove trace unneeded set,,
1639,22fe3269f79c38c7954967ec303642b5168844c3,lon Zakai <azakai@google.com>, 2019-03-06 11:15:42 -0800, , run multiple iteration multiple propagation may possible case like nested structs,,
1640,56fc114121716c672d4a16f92e8323eada557177,lon Zakai <azakai@google.com>, 2019-02-26 17:47:28 -0800, , propagate load store offset even local ssa form initial pas try handle case non ssa local however happen optimizing case improves almost code size large benchmark like bullet work see   load copy base value add    load offset longer guarantee improving code size since theory may however practice common optimized later,,
1641,8b5b85463cd5f5fcfec4d0bc6acb52f2acb30d79,lon Zakai <alonzakai@gmail.com>, 2019-03-06 16:02:34 -0800,8229, create already existing dyncalls 1932 happen emscripten run fpcast emu previous pass created dyncalls already fine nothing fix emscripten core emscripten 8229,,
1642,6657500c924bdd40c8abf8c6a9655654b9342eca,aniel Wirtz <dcode@dcode.io>, 2019-03-04 19:49:27 +0100, , align v128 text format wabt 1930 change formatting v128.const literal text format stack like v128.const i32 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xa 0xb 0xc 0xd 0xe 0xf 0x80 v128.const i32 0x04030201 0x08070605 0x0c0b0a09 0x800f0e0d recently hit trying load binaryen generated text format wabt errored error unexpected token 0x5 expected,,
1643,689fe405a3417fbfd59456035add6f6f53149f35,lon Zakai <alonzakai@gmail.com>, 2019-03-01 10:28:07 -0800,1919, consistently optimize small added constant load store offset 1924 see 1919 consistently add lowmemoryunused option passoptions passed commandline low memory unused enabled run new optimize added constant pas doe real work replacing older code post emscripten aside running proper time unlike old pas see 1919 also propagate mode stuff like   load  load    load offset  load offset propagate offset load store pattern common big interpreter loop pointer offset big struct state pas doe propagation using new feature localgraph verify local ssa mode binaryen ssa intentionally since later local single set get mean local state optimized tricky thing local initialized zero minimum two set verify real set dominates get zero initialization reach safe also make safe heap aware lowmemoryunused check access range 1023 make zlib faster either wasm backend asm2wasm also make 0.5 smaller also help sqlite 1.5 faster lua faster,,
1644,f59c3033e678ced61bc8c78e8ac9fbee31ef0210,ohdan <bogdan@soramitsu.co.jp>, 2019-03-01 01:52:49 +0200,1921, fix memory leak 1925 fix 1921 signed bogdan vaneev warchantua gmail.com,,
1645,1a483a28bb7c58349d668ad3f54ef0e9f9607cad,lon Zakai <alonzakai@gmail.com>, 2019-02-28 10:22:41 -0800, , optimize normally debug info 1927 optimize normally debug info may removed price higher optimization level optimizing normally profiling etc build comparable normal one yielding better data copy debug location automatically replacecurrent wasm traversal optimization pass least default preserve debuggability,,
1646,87a6512c5ba86bd6a7b7bafe778c89756de037f2,am Clegg <sbc@chromium.org>, 2019-02-28 09:58:35 -0800, , remove reference old __wasm_nullptr function 1928,,
1647,23ce677fdb0af5af919bf8faf0be04c3692cc457,lon Zakai <alonzakai@gmail.com>, 2019-02-27 13:54:07 -0800, , simplify 1920 refactors hashing comparison code use single immediate value iterator make single place know list immediate field every node type instead also fix bug found particular make slightly slower since hashing field,,
1648,c6237e8ea6236aa4a622cae64517cc3fd4f27b83,lon Zakai <alonzakai@gmail.com>, 2019-02-26 16:15:04 -0800, , dead return value elimination 1917 find function whose return value always dropped remove return run multiple iteration pas one enable others run debug info present improvement became much likely destroy debug info save 2.5 hello world simple libc call,,
1649,8b698a87ba2c7891a8c17c07744bf3fcfe49f691,lon Zakai <alonzakai@gmail.com>, 2019-02-25 13:00:20 -0800, , vacuum unused value 1918 check value dropped higher like  drop block i32 block i32 i32.const     handling force careful pas whether value used whether type matter example replace unary child case return value matter,,
1650,605e2b7498a7979b59917aa5db17d5022e974c8b,lon Zakai <alonzakai@gmail.com>, 2019-02-25 10:04:09 -0800, , smallvector 1912 trying refactor code simpler redundant ran perf issue seems like small vector fixed size storage optional additional storage needed might help implement class place seems help see fewer instruction cycle perf stat hard tell really make noticeable difference,,
1651,f11b7e712fab6f11ce9f51b85459ab199e817cae,lon Zakai <alonzakai@gmail.com>, 2019-02-25 10:03:38 -0800, , add option fuzz memory 1915,,
1652,3564b71c25d7691267f5f7d8b95f10fd5929090a,lon Zakai <alonzakai@gmail.com>, 2019-02-19 10:14:59 -0800, , nan fuzzing improvement 1913 make de_nan avoid creating nan literal first place add reducer option denan introduce nan destructive reduction add literal isnan method also remove default exception logging fuzzer glue source non useful difference like nan nondeterminism added option fuzz nan make easy avoid nan fuzzing without hacking source recompiling background trying get fuzzing jsc working despite open issue http bugs.webkit.org show_bug.cgi 175691,,
1653,8b820ed0021ab1a6ad5dad3972cfbf2cecb77e45,lon Zakai <alonzakai@gmail.com>, 2019-02-15 14:32:45 -0800,1907, output specified wasm opt warn emitting nothing 1908 user doe  wasm opt input.wasm  may assume input file optimized without emit output often may want output like want run pas like metric user wasm opt probably going used optimizer file suggests emit warning case comparison llvm opt would print console avoids printing binary issue warning instead warning perhaps would also confusing close 1907,,
1654,90d0ee4337c56ce4b30a6cb2a931ae814d150ee7,lon Zakai <alonzakai@gmail.com>, 2019-02-12 11:31:29 -0800, , respect validation pas debug mode 1904,,
1655,92c10bce1a2d5635e3e7a5432066e660821c5d2d,lon Zakai <alonzakai@gmail.com>, 2019-02-12 09:04:12 -0800,1903, optimize stack writer deeply nested block fix 1903 1905 also remove old debugging,,
1656,9628a034ef51117a40e4509c023ad6d28af1b330,lon Zakai <alonzakai@gmail.com>, 2019-02-08 11:43:02 -0800,7679, legalize invokes even minimal legalization need 1883 see emscripten core emscripten 7679,,
1657,5bd9908e94ba6ac1b12028b124b04c22a964d605,lon Zakai <alonzakai@gmail.com>, 2019-02-07 18:59:10 -0800, , avoid deprecated removed 1906,,
1658,66dc2673a46e7041809cd990f016df843e6f27d0,lon Zakai <alonzakai@gmail.com>, 2019-02-07 14:20:45 -0800,1900, fix fuzz bug peeking forward binary reading 1902 fix 1900,,
1659,ab35a43ed3f3e5173b511e7e00239c50172fbddf,lon Zakai <alonzakai@gmail.com>, 2019-02-06 16:10:06 -0800, , wasm emscripten finalize fix 1897 emit file data segment starting global base starting zero data unneeded emscripten loading code assumes also fix auto updater work properly .mem test updating,,
1660,e2e0c2751f3fe4b3cc7493d2ea3274d821e62b8b,lon Zakai <alonzakai@gmail.com>, 2019-02-06 13:09:29 -0800, , fix breakage 1901 landed two logic conflict source conflict bulk memory added ops comparison optimization removed need push ops bulk memory added,,
1661,4e8c339a5ab327aa896a761fc33fd9ae4be57718,lon Zakai <alonzakai@gmail.com>, 2019-02-06 12:59:14 -0800, , fix printing unreachable atomics add print fuzzing 1899,,
1662,cc0ccef87716fd8223fc16793c9ec3bc3249da13,lon Zakai <alonzakai@gmail.com>, 2019-02-06 12:58:43 -0800, , fix binaryen.js binding handling literal 1896 hardcoded size longer valid broken happened overwrite important memory testing wasm backend hit breakage,,
1663,4a0d0d92190d836388844dfbda62d96e4dfcb82d,lon Zakai <alonzakai@gmail.com>, 2019-02-06 12:57:53 -0800, , use iteration flexibleequal manual work new node 1895,,
1664,327245dfe20d45cf6782d8e4ca53fe1f86abd6a9,lon Zakai <alonzakai@gmail.com>, 2019-02-06 12:57:29 -0800,1893, throw early error expr parsing makeblock inside function 1894 fix 1893,,
1665,f424f81886405fc26a415fc86900c0f8d0df14eb,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-02-05 12:35:09 -0800, , bulk memory operation 1892 bulk memory operation part missing interpreter implementation spec test,,
1666,b747cf9847da03bc7ed115486c46dfd4086a313d,lon Zakai <azakai@google.com>, 2019-02-04 13:22:36 -0800, , use iteration flexibleequal manual work new node,,
1667,484f62f985cb2180139d1cf991ac04ee41635417,lon Zakai <alonzakai@gmail.com>, 2019-02-04 11:14:04 -0800, , fix em_asm pthreads 1891 calculate metadata must look segment split earlier thread,,
1668,ddb5acd34238967a2487a70926849c89f38a35e2,lon Zakai <alonzakai@gmail.com>, 2019-01-31 09:35:32 -0800,93, strip producer section strip producer 1875 webassembly tool convention summary emscripten current thinking binaryen want anything producer section default want possible optionally remove achieve creates strip producer pas remove section creates strip debug pas remove debug info old strip still around deprecated followup emscripten use pas default,,
1669,5f1afa58d22dce1088c63eff690283d8c615feee,lon Zakai <alonzakai@gmail.com>, 2019-01-29 12:39:02 -0800, , wasm emscripten finalize emit illegal dyncalls legalize 1890 emit illegal dyncalls wrong need e.g function setjmp call call function i64 param invoke signature need legalize fix first emitting second running legalization late dyncalls generated legalizes,,
1670,5bfb98b97c18342d851d2e0841a3091ae671f88c,ill Glynn <will@willglynn.com>, 2019-01-29 12:14:31 -0600, , increase num_params 1884 support hardcoded number parameter enough everybody described need match dynamically linking also dynamic linking detect automatically module see static const int num_params turn enough everybody ruby 2.6.0 need num_params 16. patch necessary support ruby 2.6.0 webassembly fact patch needed make relevant build process work otherwise normal emscripten toolchain,,
1671,153ba18ba99dc4dcef29a61e1e586af3df8d921d,lon Zakai <alonzakai@gmail.com>, 2019-01-28 11:32:19 -0800,7928, handle em_asm em_js llvm wasm backend output 1888 see emscripten core emscripten 7928 optimizing wasms noticed wasm object file path optimizing method handling em_asm em_js fail since pattern different specifically em_asm hunt constant without opts may get local em_js function body may contain const block set const return get later add logic track get set basic block sufficient handle,,
1672,85e95e315a8023c46eb804fe80ebc244bcfdae3e,lon Zakai <alonzakai@gmail.com>, 2019-01-24 13:12:36 -0800,1885, validate function index binary reading 1887 fix bug reported comment e63c4a7 1885 comment 1879 comment,,
1673,119525ea6078c9af697de0038407ab541f3d4c12,lon Zakai <alonzakai@gmail.com>, 2019-01-23 16:15:38 -0800,1885, validate unique local name use validation wasm2js fix 1885 1886 also fix bug wasm2js test validate rename featureoptions tooloptions contain basic stuff tool need commandline option validation yes feature,,
1674,e63c4a7d04c145dafaf4b09de5f9f5de69cee8ef,lon Zakai <alonzakai@gmail.com>, 2019-01-22 17:15:37 -0800,1879, misc asan fix 1882 fix buffer overflow simple_ast.h printing check wasm binary format reading function export index error check expr format import non empty module base fix 1876 fix 1877 fix 1879,,
1675,0e5e55053c171b138a0cf5aa8a08de8c7714048f,lon Zakai <alonzakai@gmail.com>, 2019-01-19 05:30:43 -0800,1872, show proper error invalid type binary reading fix 1872 1874,,
1676,777d33d40ff030f1711c40bf3cd5bc4bc36af313,lon Zakai <alonzakai@gmail.com>, 2019-01-16 13:22:39 -0800, , emscripten stack simplification 1870 take advantage recent memory simplification emscripten static allocation done compile time mean know stack initial location compile time apply binaryen side asm2wasm support asm.js globals initial value var stack wasm emscripten finalize support flag initial stack pointer remove old code import stack initial location,,
1677,cbb24eb4a0810640c9dcee2f6682c64f9bc6c512,lon Zakai <alonzakai@gmail.com>, 2019-01-16 11:15:05 -0800,1865, misc minor asan fix 1869 handle end input skipwhitespace parser fix 1863 ignore debug location function fix 1867 error properly invalid user section size fix 1866 throw proper error invalid call offset binary reading fix 1865,,
1678,d24427dcc8cd6e0dbcd8c302eb2e8a5d0d6fdead,lon Zakai <alonzakai@gmail.com>, 2019-01-15 13:20:05 -0800, , code style improvement 1868 use modern notation initialize class field use modern default notation empty class constructor,,
1679,45714b5fc6cf14c112bc4f188aca427464ab69d8,lon Zakai <alonzakai@gmail.com>, 2019-01-10 19:31:20 -0800, , compare binaryen fuzz exec vms 1856 main fuzz_opt.py script compare vms separately run binaryen fuzz exec compare binaryen interpreter opts let directly compare binaryen interpreter output vms found bunch minor thing better side giving fuzz coverage enable bunch tiny fix needed add fuzz exec like fuzz exec run code opts run instead normalize double printing print comparable thing includes negative zero never printed properly til various improvement print fuzz exec logging remove unuseful thing normalize others across properly legalize wasm emit wrapper i.e. run code use wrapper code,,
1680,4084d6e70922f8b1cc00c3a24bf5db41e03d5e79,lon Zakai <alonzakai@gmail.com>, 2019-01-10 19:30:58 -0800, , fix copying globals 1854 broke refactored import global two field test func metric depends copying compute thing,,
1681,6f435bc063840f16b782fd3faa733990cdf3a24e,uj <jujjyl@gmail.com>, 2019-01-10 19:00:22 +0200, , fix build macos high sierra 10.13.1 xcode 9.2 9c40b doe aligned_alloc sure newer macos xcodes issue old macos xcode version 1862,,
1682,51a481f6ed9e39b284421778b63b265eca6c1b58,aweÅ Bylica <chfast@gmail.com>, 2019-01-10 17:23:08 +0100, , require unique_ptr module addfunctiontype 1672 fix memory leak readsignatures caused probably exception thrown functiontype object safe also make clear module becomes owner functiontype object,,
1683,e71506165996f7a12cd54361761bc88c7f883cd2,uj <jujjyl@gmail.com>, 2019-01-10 13:28:33 +0200,1823, merge pull request 1823 juj fix visual studio 2017 15.8 build,,
1684,58f3579974855fe7e4ca3b8ebd7b1f83a4e4dc68,lon Zakai <alonzakai@gmail.com>, 2019-01-09 18:11:06 -0800, , remove wasm.js reference cmakelists.txt 1859,,
1685,6c2dc6e2117e725565de10fba27c159146c10d9a,ergey Rubanov <chi187@gmail.com>, 2019-01-10 02:59:53 +0300,1859, remove wasm.js reference 1860 following 1859,,
1686,5f114452cd73fcad861660b2b715af726c925084,lon Zakai <alonzakai@gmail.com>, 2019-01-09 13:05:08 -0800,1845, aligned allocation fix fix 1845 1846 error 1845 show pkgbuilddir src mixed_arena.h member function void mixedarena allocspace size_t size_t pkgbuilddir src mixed_arena.h 125 error new type mixedarena chunk aka std aligned_storage 32768 type extended alignment werror aligned new new chunk numchunks  pkgbuilddir src mixed_arena.h 125 note void operator new std size_t doe alignment parameter pkgbuilddir src mixed_arena.h 125 note use faligned new enable aligned new support turn misread aligned_storage doc actually need convenient cross platform way aligned allocation since new support sadly seems cross platform way right added header support abstract window everything else way also add ctest testing run window get basic window coverage,,
1687,af5adae23e7cfcc2c933d72142a3d58576af769d,lon Zakai <alonzakai@gmail.com>, 2019-01-08 14:59:51 -0800,7831, remove interp fix test 1858 update test latest notation change also remove wasm.js see kripken emscripten 7831 need either rebuild update new notation well used point,,
1688,34fbbb3dde9f17a83ed63264d1165ebb7a66ddc7,lon Zakai <alonzakai@gmail.com>, 2019-01-08 09:55:24 -0800, , determinism fix code folding 1852 depend hash value ordering use fixed order based order appearance,,
1689,7d94900ded8e2e5ce8ef8ee2687528531d8f2a97,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-01-07 13:24:58 -0800, , massive renaming 1855 automated renaming according http github.com webassembly spec issue 884 issuecomment 426433329,,
1690,6f91af190effd7b8a5969314dd4fb3d2ec540524,homas Lively <7121787+tlively@users.noreply.github.com>, 2019-01-06 21:28:37 -0800, , fix simd test placement 1853,,
1691,c33b333bc403af7878ac7b1850862bdaa78c8753,lon Zakai <alonzakai@gmail.com>, 2019-01-03 11:39:39 -0800, , wasm opt fuzz script improvement 1851 allow fuzzing directory looking wasm opt relative script ignore debug assertion fuzz bug already filed pick random seed based process better parallel fuzzing remove commandline parsing stuff fuzz_opt.py work commandline parsing test.shared need anyhow,,
1692,1d90bee3990ac8bc85de5f9023d023525e283901,lon Zakai <alonzakai@gmail.com>, 2019-01-03 10:36:16 -0800, , determinism fix ssaify 1850,,
1693,2a0dcfed03d2a39172450941d83acb16a14af1f8,lon Zakai <alonzakai@gmail.com>, 2019-01-02 15:05:07 -0800, , emit simd fuzzer unless requested code path missed 1849,,
1694,3685831416a9ae2180de2d8d06189ab7e0292d7e,lon Zakai <alonzakai@gmail.com>, 2019-01-02 13:30:32 -0800, , determinism fix ssa pas 1841 iterated set instead iterate relevant item order,,
1695,5ebf2745783417c0cb7d9e3d71849c617a1672ad,lon Zakai <alonzakai@gmail.com>, 2019-01-02 13:15:59 -0800, , refactor feature code 1848 add features.h centralizes feature detection code need another place validator til,,
1696,18fb2c238f3b4c04e3666d8a0d34492936a6bcc0,lon Zakai <alonzakai@gmail.com>, 2019-01-02 11:14:08 -0800, , minor code style cleanup 1844,,
1697,3f3fc857ff6204517281ed5caa3209cc8f02d4fc,lon Zakai <alonzakai@gmail.com>, 2018-12-27 15:24:57 -0800,1842, fix fuzzing glue code 1843 added logging fuzzer forgot add glue code necessary import run also add legalization glue code import export also add missing validator check import function type fuzzing code missing one fix 1842,,
1698,fdd4cb7b11d43c6ff200c9541f8567000a8d4bcd,lon Zakai <alonzakai@gmail.com>, 2018-12-21 13:19:18 -0800,1831, localcse consider pas option size cost 1840 optimize redundant global access fairly well least locally licm also work see 1831,,
1699,0f41b0708384c1f5d85304d5ed94d9edd57d38c9,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-19 19:22:09 -0800, , precompute v128 expression 1839 without change sequence like i32.const i32x4.splat get precomputed v128.const ops much larger also implemented yet simd aware optimization pass least engine support v128.const perform transformation,,
1700,fcbcf3bd670a9ee793a836be49d825b944baf501,lon Zakai <alonzakai@gmail.com>, 2018-12-19 10:51:50 -0800, , use interned name noexitruntime 1837,,
1701,44558539bf5842ac67ea845fc0e63983f77e7ffc,lon Zakai <alonzakai@gmail.com>, 2018-12-18 13:20:13 -0800,1833, remove unused flow value block block doe actually flow value fix 1833 1835,,
1702,af0ff220fd5bd4aa05b2472f3d6e98e08175f517,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-18 11:40:00 -0800, , rename idx index simd code consistency 1836,,
1703,6974dbb4a6184c88792557fb5dfb59265a6c4a56,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-18 11:39:48 -0800, , attempt optimize v128s yet 1834 abstract interface gain notion simd lane optimization crash v128 type,,
1704,dfdae1aece431cc98defaf04e08108fea0f07a34,lon Zakai <alonzakai@gmail.com>, 2018-12-17 17:04:51 -0800, , partial legalization 1824 review followup 1832,,
1705,bf6972c3816dc81b167317a94487d5b9d2c88db0,ury Delendik <ydelendik@mozilla.com>, 2018-12-17 15:49:30 -0600, , fix i64 select lowering 1773,,
1706,39411ccd87b44abef98ec34b21d4c5cee41eb4f9,lon Zakai <alonzakai@gmail.com>, 2018-12-15 08:12:46 -0800, , consistent spacing around namespace keyword 1829,,
1707,e037e7a02e3c7d739de743b891bb6e145b63156f,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-14 23:57:58 -0800, , fuzzing v128 associated bug fix 1827 fuzzing v128 associated bug fix,,
1708,c300e05873da1c8cafb654285f31959af1b3b9fc,am Clegg <sbc@chromium.org>, 2018-12-14 18:52:15 -0800, , wasm emscripten finalize delay function creation module walk 1828 fix crash startsave stackrestore could created iterating,,
1709,6cc598496a62ff4dbdb680b400ca26a9b1059e7c,lon Zakai <alonzakai@gmail.com>, 2018-12-14 17:27:29 -0800, , minimal legalization 1824 even want fully legalize code still legalize thing care particular dyncall_ method used call wasm table exist legalize use case motivating dynamic linking may want disable legalization wasm wasm module call fast even i64s still need dyncalls legalized even case otherwise invoke i64 parameter would fail,,
1710,e8f5842d4a58a94b8a485a7e63dd8657d88eb805,am Clegg <sbc@chromium.org>, 2018-12-14 10:57:46 -0800, , wasm emscripten finalize add tablesize metadata 1826 allows emscripten generate table correct size right simply default creating table size 1024,,
1711,97c2f0eb7cf57cab242b2707c3514bf0d2d7d13e,am Clegg <sbc@chromium.org>, 2018-12-14 10:11:47 -0800, , wasm emscripten finalize add table max none present input 1825,,
1712,3325a9cc203932e58b6e85dfefe5feb6e72839a4,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-13 17:40:27 -0800, , simd 1820 implement test following functionality simd parsing printing assembling disassembling interpretation api api,,
1713,0fd96e6b07f0a0907737c0f44e55060e057c2bb9,lon Zakai <alonzakai@gmail.com>, 2018-12-13 15:45:21 -0800, , exit runtime pas 1816 emscripten know runtime exited tell codegen emit atexit call since callback never run save code size startup time asm2wasm jsbackend doe directly wasm backend pas doe output wasm,,
1714,e8ac331501c91373a77967a5f609b0912aa05fc4,ukka JylÃ¤nki <jujjyl@gmail.com>, 2018-12-13 23:58:54 +0200, , fix visual studio 2017 15.8 build,,
1715,802dd8ff76d423f438c1d69dd5da6c47bb762c88,lon Zakai <alonzakai@gmail.com>, 2018-12-13 13:17:52 -0800, , error many local oom 1822 think added error fuzzing harmful prevents module many local loaded could load might able optimize fewer local ...,,
1716,e4ad86cafeb6d636ccf96e2deefedbc388612a6e,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-12 18:40:09 -0800, , create api feature dependent picking fuzzer 1821,,
1717,75b693434b5af75d105af4900b5d0c6048155421,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-12 14:11:04 -0800, , update wrap demote literal name 1817 update literal name remove demotetof32 favor demote,,
1718,7edaebedb0f7185fae0f3fbf146a1c6b44842f5c,lon Zakai <azakai@google.com>, 2018-12-11 15:30:16 -0800, , wasm emscripten finalize import env.stacktop like asm2wasm doe,,
1719,3307ca89fc270bdca7e5124dca8dcb54027918c2,lon Zakai <azakai@google.com>, 2018-12-11 15:29:02 -0800, , wasm ctor eval handle stack going either,,
1720,60b57973318faca7b5f42a25323209763980283c,lon Zakai <azakai@google.com>, 2018-12-11 15:28:23 -0800, , constant refactoring stacktop stack_max,,
1721,8e19c94cf6c1d7609eaede0a30121bfbdc7efecc,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-10 16:43:24 -0800, , use template magic tracing expression 1815,,
1722,1cf103efdd4f11c29263cde5d379f5b1ddb2ed36,am Clegg <sbc@chromium.org>, 2018-12-07 12:54:22 -0800, , remove unused test test dot_s 1814 bug open 1813 verify loose coverage point keeping unused file,,
1723,c26a403c3049e2a861cccdfdb126a9ac693205c8,am Clegg <sbc@chromium.org>, 2018-12-07 12:41:55 -0800,1808, fix comment src module utils.h 1810 followup 1808,,
1724,366e52e9913fc480e2d0ec20281ae788e4d5ccd5,am Clegg <sbc@chromium.org>, 2018-12-07 11:07:28 -0800, , wasm emscripten finalize fix type json output 1812,,
1725,68952631cb04de95154708277b98c1fdba397907,lon Zakai <alonzakai@gmail.com>, 2018-12-06 17:22:52 -0800, , wasm2js error handling improvement 1807 move code around assertion caught big try catch report error parsing error,,
1726,b4503a23f28551acfc725a6e3aba2d72036eff4f,am Clegg <sbc@chromium.org>, 2018-12-06 09:49:05 -0800, , handle missing function renamefunctions 1808 case simple update missing function fixed current emscripten failure,,
1727,4c764d52b1e734c8dad295e1c970007512794bf6,lon Zakai <alonzakai@gmail.com>, 2018-12-05 14:55:05 -0800, , add function rename utility 1805 use wasm emscripten,,
1728,6cd3386410ba53e20afbf523c955f73bd352299b,am Clegg <sbc@chromium.org>, 2018-12-05 14:03:34 -0800, , revert accidental change 1806,,
1729,daf4fcad1b1e6b9fc2835cc447114ef7caf328ff,am Clegg <sbc@chromium.org>, 2018-12-05 14:01:11 -0800, , format metadata json using mutliple line readability 1804,,
1730,e4b9f0f7d07c0c156dc2dec806945e31a5a7093a,am Clegg <sbc@chromium.org>, 2018-12-05 11:57:49 -0800, , fix output wasm emscripten finalize 1803 broke alwasy empty 1795,,
1731,3be44c1a2c4219aab20d4d23567dc0ff91a40062,lon Zakai <alonzakai@gmail.com>, 2018-12-05 08:54:02 -0800, , properly optimize loop value 1800 remove existing hack optimize like ifs block able handle case,,
1732,26ef829628b1dd0d4b36a173e3db53a8b148f8b0,lon Zakai <alonzakai@gmail.com>, 2018-12-04 12:33:36 -0800, , remove unnecessary constraint remove unused optimization br_if handle concretely typed well happen end block 1799,,
1733,b650f20121d7e1e79c12e6abfaf317f0d00e5f3b,lon Zakai <alonzakai@gmail.com>, 2018-12-04 11:35:57 -0800, , warn linking section present handle yet 1798,,
1734,bebbeb54f177bdc2cfdff71d6a256a35f2f2057b,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-04 10:30:35 -0800, , implement nontrapping float int instruction 1780,,
1735,b4badb815ec844e438a05d501eafb6bb99383bc6,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-12-02 08:22:33 -0800, , run coalesce local final simplify local emit set tee simplify local coalesce local necessary remove ineffectual get read,,
1736,f5b8221e9759c37ef44158c2d2858dcee51b6c1f,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-12-01 18:32:32 -0800, , improve selectification remove unused turned select optimizing size side effect etc allow patch improves optimizing size also look beneficial given amount work side result create selects etc,,
1737,e6048c1dabde9e511d25c8bd6d2da68461807f74,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-12-01 18:28:52 -0800, , speculate simplify local worth turning else set local  condition set_local value  turn set_local  condition value get_local   increase code size add branch allows set optimized tee optimized entirely worst case optimization break copy one arm later includes determinism fix equivalentsets patch triggered,,
1738,774768375dbe8cdee91b797f1e8deec586085fb4,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-12-01 10:51:15 -0800, , move copy logic coalesce local remove unused copy case arm get feed set local set_local result i32 condition result get_local   rework else executes code path going get done coalesce local likely work coalescing copy however logic removing branch belongs remove unused fit alongside existing logic handling ifs arm also refactor code two optimization feed,,
1739,6b6e89d0c8feeead83d6d83fa94e17fc9f75e0f8,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-12-03 18:26:16 -0800, , feature option 1797 add feature flag struct interface default feature set feature enabled,,
1740,99cad87cea463fc3b978850a1d1416d9b338a14c,am Clegg <sbc@chromium.org>, 2018-12-03 16:54:58 -0800, , wasm emscripten finalize ensure table memory import use emscripten expected name 1795 mean lld emscripten disagree naming import emscripten wasm finalize take care paper difference,,
1741,d53c64875ff0367dbc28ccea3d3299809fd8ee36,lon Zakai <alonzakai@gmail.com>, 2018-12-03 15:35:35 -0800, , add strip remove debug info 1787 sort like strip native binary specific use case e.g link library cflags want debug info final executable hit poppler make emcc pas binaryen emcc building output intended debug info,,
1742,3d98b5bb767a2bacf791ad000e75d4ed8df1a385,am Clegg <sbc@chromium.org>, 2018-12-03 11:54:14 -0800, , use default rather empty destructors 1794,,
1743,120bc39f96ad2ae97f65fe677dd2b875159d406d,am Clegg <sbc@chromium.org>, 2018-11-30 14:45:59 -0800, , check node environment variable looking node 1792 allows run test system default installed node recent enough,,
1744,33e337e5c141026505b114967a6bf0bf975e5dfc,am Clegg <sbc@chromium.org>, 2018-11-30 14:09:35 -0800,1779, add virtual destructor fix build warning error 1793 error started showing 1779 error delete called non final wasm virtual function non virtual destructor,,
1745,3814fd6f2dab5adb5fb81022308818e4dd3b1020,am Clegg <sbc@chromium.org>, 2018-11-30 12:20:33 -0800, , wasm emscripten finalize remove stack pointer global shared libs 1791 wasm backend wasm global __stack_pointer shadow stack location order make work shared library main module would export global shared library would need import mean relying mutable globals yet implemented browser change allows move forward shared library without mutable global support replacing stack pointer access shared library function call,,
1746,0e068c386ef1588c09e57a4d081be626d83bc31c,lon Zakai <alonzakai@gmail.com>, 2018-11-30 09:54:57 -0800, , fuzzing log value execution 1779 looked function return value looking difference running pass fuzzing add logging value execution represent control flow monitor local etc. giving lot opportunity fuzzer find problem also clean function allocated struct returned make safer returning struct value also easier use fix printing imported function call without function type turn always generate function type loading notice broken new fuzzer feature hit,,
1747,f16a7605b8226502062c6ca24323d431669c90ec,am Clegg <sbc@chromium.org>, 2018-11-30 08:45:29 -0800,1644, add support mutable globals feature 1785 pick 1644 indeed borrows test case,,
1748,955a9a9440f26438ba50e35ebe57a86a5111d4a1,am Clegg <sbc@chromium.org>, 2018-11-29 15:29:58 -0800, , format changelog 1783,,
1749,8d915d515b366842fd8934a712527b952899ce35,am Clegg <sbc@chromium.org>, 2018-11-29 14:29:51 -0800, , cleanup shared constant 1784,,
1750,252fd7f176c4a5ae6a6fa9a5124e153ddbaab638,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-29 13:54:10 -0800, , add v128 type 1777,,
1751,5274d943ec65866089f6764af89205d003a15078,lon Zakai <alonzakai@gmail.com>, 2018-11-29 12:51:40 -0800, , standardize template template i.e. remove space 1782,,
1752,0b425638bdafe7be7ed914943de931b491881e23,lon Zakai <alonzakai@gmail.com>, 2018-11-28 16:45:34 -0800, , localcse fuzz fix invalidate set operation 1778 invalidated based effect set value set without set could overridden something irrelevant thought could still reuse old value testcase would last set value optimized get incorrectly,,
1753,2de7b22f2b245ab2cf4efffab500a88511972bd8,lon Zakai <alonzakai@gmail.com>, 2018-11-28 16:44:26 -0800,1764, start implement 1764 1776 add first instance rule discussed 1764 specifically ,,
1754,5d92d866d8326b1908328485cccd2f8ebe57ac75,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-27 15:12:21 -0800, , remove default case 1757 reasonable readability perspective remove default case switch type instruction make future feature addition easier making compiler complain location new type instruction yet handled,,
1755,70b949ffdc3e5f3fa83dd4044f632c95159674cf,lon Zakai <alonzakai@gmail.com>, 2018-11-27 09:26:29 -0800, , stricter 1774 canonicalized const right side add get right sorting binary unary guarantee fixed order small combination instruction pattern matched simple way future,,
1756,69c93dd9fb4cf8081237c4303a416bf12dff6b58,lon Zakai <alonzakai@gmail.com>, 2018-11-27 09:26:12 -0800, , refinalize fuzz fix 1771 refinalize adding value flow block need fix branch might exist without value possible branch taken practice also refactor refinalize separate file,,
1757,1fc71f608c5ac60fa93edaa239803f34dc3e8a8b,lon Zakai <alonzakai@gmail.com>, 2018-11-27 09:25:35 -0800, , add option work text file wasm reduce 1772 reducing text file useful binaryen binary reading writing noticeable effect due wasm binaryen identical text format closer match,,
1758,e1b585c512fd197838aea1206d3ffdd7dee989a4,lon Zakai <alonzakai@gmail.com>, 2018-11-26 19:02:52 -0800,1766, fix void warning api 1768 fix 1766,,
1759,12c18c73558be7d2922c063b7646429998f9e4d6,lon Zakai <alonzakai@gmail.com>, 2018-11-26 19:02:29 -0800, , relooper merge consecutive block 1770 branch case guaranteed increase code size,,
1760,3eea53509fb6275c3fd39060129396a98ef13ab5,lon Zakai <alonzakai@gmail.com>, 2018-11-26 19:01:33 -0800, , initialize binary writer debug info even without source map debug info may exist without source map 1733,,
1761,9f49e3d9c92703c3f5cf3589a78a3318bfe2bca4,lon Zakai <alonzakai@gmail.com>, 2018-11-26 17:32:31 -0800, , branch invalidate side effect 1765 previously assumed reorder branching instruction anything else however risk thing side effect,,
1762,4d65912ee77fd665a1bfff50d81e0aa896dab8a5,lon Zakai <alonzakai@gmail.com>, 2018-11-26 14:15:54 -0800, , merge block improvement 1760 previously try merge block parent block name let merge part block  block child  child     block  moved block child child    beneficial reason child may singleton remove block canonicalized containing code head child may able turn,,
1763,da3bb2ffcc8a6efd6a95a07f7de793d1362f4a07,uj <jujjyl@gmail.com>, 2018-11-22 11:58:56 +0200,1761, merge pull request 1761 juj minify_exports minify_exports,,
1764,e2b52c187bda1f93b5607509f9070fb2553d635a,ukka JylÃ¤nki <jujjyl@gmail.com>, 2018-11-21 16:59:35 +0200, , adjust optionally minify export name sometimes desirable,,
1765,6cc2bb302d5729c76da42dc0815d6dbba645d952,lon Zakai <alonzakai@gmail.com>, 2018-11-21 08:59:13 -0800, , relooper cfg optimization 1759 previously relooper would optimization deciding use switch group block etc add additional pre optimization phase basic useful simplify cfg style pass skip empty block one exit merge exiting branch equivalent canonicalize block content make comparison useful turn trivial one target switch simple branch help noticeable way running rereloop pas e.g llvm wasm backend output also binaryen api change relooper get module constructor need optimization may construct new node many relooper fuzzer improvement clean hashtype usage,,
1766,44335674936254ef6f8695883e4376a9d5fd1521,am Clegg <sbc@chromium.org>, 2018-11-20 14:08:28 -0800,7304, use gettempret0 settempret0 1709 simpler always import function embedder rather synthesizing various placed part part change llvm http d53240 fastcomp http github.com kripken emscripten fastcomp pull 237 emscripten http github.com kripken emscripten pull 7358 binaryen http github.com kripken emscripten pull 7358 fix http github.com kripken emscripten issue 7273 fix http github.com kripken emscripten issue 7304,,
1767,7ca9e24aa22bc57a4d37d3018cd02cf39cd9957a,lon Zakai <alonzakai@gmail.com>, 2018-11-20 09:25:16 -0800, , switch optimization remove unused 1753 switch optimization remove unused thread switch jump turn switch identical target refinalize interm operation remove unused confused,,
1768,801ff52bd0e7696ff105efd2a46932fa5f076708,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-19 21:44:17 -0800, , reject nonexistent instruction sexp format 1756,,
1769,ec38a5118f055709cd21a8db873d4d26691571c6,lon Zakai <alonzakai@gmail.com>, 2018-11-19 15:31:16 -0800, , fix merge block fuzz bug 1755 moving block arm may change block type code written assumption true move block sinking merge block remove unused natural pas refinalizes everything anyhow,,
1770,7011e47ff4ef1a48d15d399f4dfaa761de4779af,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-19 13:31:47 -0800, , generate sexp instruction parser 1754 also fix broken test surfaced new parser,,
1771,fa0dfb6a3da3d05e01051a72d9348b2f3024222b,enjamin Bouvier <public@benj.me>, 2018-11-16 19:49:00 +0100, , wasm opt add option select generation atomic opcodes runtime 1751 partially solves 1676,,
1772,82685aec4167a8c7557b1c1fe0bca44feb7a540b,lon Zakai <alonzakai@gmail.com>, 2018-11-16 10:44:32 -0800, , wasm reduce reduce switch target 1752 try reduce replacing target default shrinking list target,,
1773,c0cf612ccab6b45867b2a4ab3e3565d7dd1b741a,homas Lively <7121787+tlively@users.noreply.github.com>, 2018-11-15 17:28:47 -0800, , use assert addition abort 1747 yield useful information something wrong,,
1774,991bd336973702b4996237fc4610ad52af6718a1,lon Zakai <alonzakai@gmail.com>, 2018-11-15 13:43:49 -0800, , optimize exit block arm 1749 enclosed block used exit one arm move arm better optimized similar loop 1736,,
1775,ec16a4d076d290f892fc00f598777631cdda5f09,am Clegg <sbc@chromium.org>, 2018-11-15 10:22:12 -0800, , wasm emscripten finalize initial support handling shared library 1746 case want generate normal memory helper function come main module,,
1776,f1666bd5eb86324867b50a9aa3d039832183f8d1,am Clegg <sbc@chromium.org>, 2018-11-15 10:20:12 -0800, , fix segment size validation imported memory 1745 without wasm opt operation emscripten produced side_modules zero sized memory import technically validation failure segment larger initial memory regardless whether import non imported memory helpful though leaving catch error,,
1777,622cba9c49378f89ca94e05cbbe2af0b0c62ab44,lon Zakai <alonzakai@gmail.com>, 2018-11-15 10:06:39 -0800, , try optimize away unused name removeunusedbrs 1750 rely dedicated pas worth extra complexity try easily handle case anyhow add another run dedicated name removing pas default pass,,
1778,892d2d747883aca132d2eb4e3ba5a6b261f944af,homas Lively <tlively@google.com>, 2018-11-14 23:09:30 -0800, , avoid segfault printing null name strpbrk segfaults name.str nullptr check first,,
1779,c1e75fe5c79a5e47c0c861fe19f78d8aa700bd16,lon Zakai <alonzakai@gmail.com>, 2018-11-14 16:38:53 -0800, , mergeblocks canonicalize loop exit block position inside 1736 move loop exit block block name one child loop loop mergeblocks better pass,,
1780,a259699cfed19b56469ccff88e1c76c7199e4a45,acob Gravelle <jgravelle@google.com>, 2018-11-14 16:33:28 -0800, , handle em_asm function table 1739 sure seeing easy enough handle might well,,
1781,4442d98dbfcd54c8e920bd11bb376a1003957daa,lon Zakai <alonzakai@gmail.com>, 2018-11-14 16:26:56 -0800, , restructure ifs value 1743 previously code recreate block branch possible block return value add support restructure value,,
1782,145846c563e06a82309a48437b8abb050054812f,lon Zakai <alonzakai@gmail.com>, 2018-11-14 16:20:53 -0800, , clean unnecessary type setting binary format loading finalize properly later 1744,,
1783,b79f3a48140e99ac917274bfd680217fe28ae17c,lon Zakai <alonzakai@gmail.com>, 2018-11-14 13:11:05 -0800, , refinalize fix 1742 handle corner case refinalize incrementally type code change problem need figure type block look last element flowing break value last element break taken unreachable value tell block proper type asserted case block still type handle fix could look parent see type would fit however seem simpler remove untaken break switch part refinalization carry useful info anyhow removing block signal concrete type unreachable bug existed least 1.5 year look back think noticed fuzzer due recent fuzzing improvement optimizer improvement saw bug found second time,,
1784,7e9f7f62d230f7ed083c0c2d425ae47dac4f513f,erek Schuff <dschuff@chromium.org>, 2018-11-14 13:03:30 -0800, , add wasm emscripten finalize flag separate data segment file 1741 writes data section file suitable use emscripten memory init file flag,,
1785,37d82ba9574d440a89b1d7f91af89cd30b35b158,lon Zakai <alonzakai@gmail.com>, 2018-11-13 16:36:50 -0800, , modernize relooper code 1738 use auto iterators etc,,
1786,b67917ee7392c4d49402cb5e7320e663208390ef,lon Zakai <alonzakai@gmail.com>, 2018-11-13 16:36:29 -0800, , fix alignment mixedallocator 1740 necessary simd add type alignment broken,,
1787,6b99d143a32263478b7d525886b0bea46cbbdcaa,lon Zakai <alonzakai@gmail.com>, 2018-11-13 16:35:53 -0800, , better fuzzing 1735 recombine function piece randomly generating creating copy moving around give realistic probability seeing duplicate expression optimization look otherwise fuzzer would almost never reached mutate function piece recombination giving perfect duplicate also near duplicate operation take account type nesting uniqueness label fix afterwards something broken replace something trivial,,
1788,ea158f22d646c7b9bd49c6279189e25fdb31b247,lon Zakai <alonzakai@gmail.com>, 2018-11-09 12:51:39 -0800, , updated build 1734,,
1789,0014c71b0607bf3e335ba32ec3a893aec741ae7d,lon Zakai <alonzakai@gmail.com>, 2018-11-08 14:24:28 -0800, , fix flipping dataflow graph generation 1732 souper need flip operation dataflow since souper redundant one flipped left right also equal equal wrong,,
1790,ba1cf64bc926c7fd9e5b679d69800a47a9b0210b,am Clegg <sbc@chromium.org>, 2018-11-08 14:22:08 -0800, , rename tablebase memorybase __table_base __memory_base 1731,,
1791,43d1e70cedfa02c1c2f5f33aaaf6920d269a4083,lon Zakai <alonzakai@gmail.com>, 2018-11-08 09:53:48 -0800, , fix merge block fuzz bug 1730 block code unreachable element make merging outer block tricky child block may unreachable parent return type block result i32  block unreachable nop   end unreachable block nop typed one avoid child block dce able code ignore,,
1792,30f0e0a6c9df43f3a70089629b6baa11688bfce4,lon Zakai <alonzakai@gmail.com>, 2018-11-07 10:41:05 -0800, , fix dataflowopts bug 1729 create fake node internal use looking one mistake fix creating non ambiguous fake node call represents unknown value properly unlike zero make dfo rely value know node constant apply constant value found fuzzer,,
1793,b2070673bd4f6e4eb9eb7707bc0e64c76e9ecef7,lon Zakai <alonzakai@gmail.com>, 2018-11-07 10:40:45 -0800, , fix bug add sub sub 1727 need verify reordering valid side effect original bug report http forum nomobile true topic emscripten discus hilgf8o2ato,,
1794,fb8db513e2772654b3804795c72aebd9eb8f3bca,am Clegg <sbc@chromium.org>, 2018-11-06 08:57:01 -0800, , wasm ctor eval hard error requested ctor doe exist 1728 able evaluate ctor different ctor absent masked bug emscripten spelling name ctors wrong command line,,
1795,fce199ca454fcac97237273062dd48032899018f,lon Zakai <alonzakai@gmail.com>, 2018-11-05 13:22:15 -0800,1724, add support new call_indirect syntax fix 1724 1725,,
1796,e20bd90c841a1cf227275055d4f213a74c7036a9,aniel Wirtz <dcode@dcode.io>, 2018-11-04 16:06:54 +0100,1717, suppress stackir comment printing stackir 1726 follow 1717,,
1797,49bb4290ce46b0e58f4817cbb46f3dada4f41409,lon Zakai <alonzakai@gmail.com>, 2018-11-02 15:41:55 -0700,1718, fix asm2wasm handling heap8 1720 fix kripken emscripten 1718 way fastcomp emits compareexchange little odd need ignore shift,,
1798,33665b6b0c33e79049c832b9a60dcfe07fa54b59,am Clegg <sbc@chromium.org>, 2018-11-02 12:07:45 -0700, , call static desructors fatal error occur 1722 causing deadlock destroying thread pool,,
1799,0ed4d2fabb8dcfcdf4e5ca79480f75db476fec76,lon Zakai <alonzakai@gmail.com>, 2018-11-01 19:14:35 -0700,7414, add pas minify import export name 1719 new pas minifies import export name example may minify import env longname func internal  import env func internal updating provides import call export use minified name properly save useful amount space wasm see kripken emscripten 7414,,
1800,c0977d3c25d3dc695677ba97df5eaae34ec63391,lon Zakai <alonzakai@gmail.com>, 2018-11-01 15:47:39 -0700, , document binaryen text valid wasm text stack skip 1716,,
1801,77c66027f0dcbd7160f78c5de4943372836ab142,lon Zakai <alonzakai@gmail.com>, 2018-11-01 13:34:53 -0700,310, emit import defined thing text format 1715 correct order text format wabt error otherwise see assemblyscript assemblyscript 310,,
1802,7d3ddd09d5f68945160cda3f3749a217a13928bf,aniel Wirtz <dcode@dcode.io>, 2018-10-31 19:22:48 +0100,1716, add module emitstackir api 1717 related 1716 comment,,
1803,9c7b910d88d1d08861dd35beccd4731cf2cb5354,lon Zakai <alonzakai@gmail.com>, 2018-10-30 11:55:59 -0700, , fix build latest emscripten undefined symbol error 1714,,
1804,8bbcd4337b25cc90dfeb365581be1e517964b1b6,ichaÅ Janiszewski <janisozaur@users.noreply.github.com>, 2018-10-29 11:35:02 -0700, , add missing include guard 1713,,
1805,235607de3d3b4a448f9661b431c0471f748c0c64,acob Gravelle <jgravelle@google.com>, 2018-10-25 09:54:57 -0700, , expand asmconsts metadata fit shape proxying async em_asms actual support 1711,,
1806,9877514e369254c92f22264fadf043eae03b543c,am Clegg <sbc@chromium.org>, 2018-10-18 22:33:37 -0700, , fix typo readme.md,,
1807,f4e5e3adf9b39884d5705352557d5b06bd2a2e22,am Clegg <sbc@chromium.org>, 2018-10-19 06:07:53 +0200, , cleanup formatting readme.md 1708,,
1808,905aea256a3b5114121ef106084a55bad0e3ab1d,lon Zakai <alonzakai@gmail.com>, 2018-10-16 16:36:13 -0700, , comment nondeterminism precompute pas skip 1704,,
1809,021a2b85fb9264d9cb4a21c039682d1f0fddbd1c,lon Zakai <alonzakai@gmail.com>, 2018-10-15 16:07:24 -0700, , support 4gb memory 1702 fix asm2wasm parsing max allow 4gb also change internal memory kmaxvalue value reflect used use kmaxvalue also represent limit split kunlimitedvalue,,
1810,66dbc57d32bb2c8c01deefba7a035ebed5a42e2c,lon Zakai <alonzakai@gmail.com>, 2018-10-11 17:51:28 -0700,1693, properly handle unreachable atomic operation fix regression 1693 1696,,
1811,f6162405686348cf6f0b032e6796b5b76f750abf,lon Zakai <azakai@google.com>, 2018-10-11 16:36:31 -0700, , update list breaking change skip,,
1812,230b9cd7f96eb3d7e35f07d4bb6f029264e6543c,idin Vinayakan <nidinthb@gmail.com>, 2018-10-12 01:10:29 +0200, , shared memory support add memory import set memory function 1686,,
1813,91ecfd0ac94791612af40a7acee5640d185a84a9,shley williams <ashley666ashley@gmail.com>, 2018-10-11 16:12:38 -0400, , feat ignore add generated file ignore 1697,,
1814,1ec5a4f00f9bf4a4186e831b9f78d5fb2b663918,aniel Wirtz <dcode@dcode.io>, 2018-10-10 04:33:54 +0200, , add api 1692,,
1815,e7756828726ec87afeb923a94d785f594de96aa7,lon Zakai <alonzakai@gmail.com>, 2018-10-05 10:50:48 -0700,7208, atomic float operation 1693 safeheap emitting look like invalid according wasm thread spec fix kripken emscripten 7208,,
1816,f7db9e9760ea39d77433766e299f29a3084c948c,aniel Wirtz <dcode@dcode.io>, 2018-09-29 00:10:28 +0200, , add initial maximum table size parameter api 1687,,
1817,ad9152e4973afa83d093600dda0d925f5c7cf714,lon Zakai <alonzakai@gmail.com>, 2018-09-20 12:26:10 -0700,1678, 1678 fix 1685 debugging fix waterfall regression noticed wasm reduce regressed need careful visitfunction may visit imported function found well tested pass also regressed way,,
1818,41ebb1b11041bf43f0e8b7ebacbed132511fcc55,lon Zakai <alonzakai@gmail.com>, 2018-09-20 10:30:22 -0700,1678, fix iterator invalidation regression 1678 1684 fix regression mentioned comment 1678,,
1819,fe88b47749115009da0447e340cbdc86edf30984,lon Zakai <alonzakai@gmail.com>, 2018-09-19 15:50:30 -0700,1649, unify imported non imported thing 1678 fix 1649 move single object function imported likewise globals result getglobals need check global imported etc imported thing inherit importable module base import set import convenient iteration helper like moduleutils wasm global global use global  often iteration care imported defined non imported thing,,
1820,a53356ab155a7d8c2f334dc9a3c1432bacbc78fe,lon Zakai <alonzakai@gmail.com>, 2018-09-19 08:24:20 -0700, , wasm opt fuzz script 1682 skip small fuzz script using locally run wasm opt random input random pass looking breakage pass changing something also run vms pass compare vms,,
1821,cefbbfadae87135ff37fb4fc1058c6baf8de0140,ury Delendik <ydelendik@mozilla.com>, 2018-09-17 10:05:43 -0500, , add debug information location function prolog epilog 1674 current patch preserve debug location function prolog epilog preserve debug location nested block,,
1822,403be53fb84645b9338454681792538af876cf87,lon Zakai <alonzakai@gmail.com>, 2018-09-15 07:42:57 -0700,7123, fix sign detection floating point mod fix kripken emscripten 7123 1681,,
1823,559c16ea758d397fe447edbd6b09350e8471d7a6,lon Zakai <alonzakai@gmail.com>, 2018-09-12 18:33:14 -0700, , note call import lightweight inlining pas 1673 call_import lightweight inlining purpose call callimport even light,,
1824,18adb993929883fedf24655195d988c7f5105bb1,lon Zakai <alonzakai@gmail.com>, 2018-09-12 16:25:20 -0700, , misc tiny fuzz fix 1668 show proper error empty asm2wasm input handle end input binary reading memory segment size unsigned validate input wasm ctor eval update test,,
1825,5d9ff4e46b595a5f20aa4732256462609a9614ea,lon Zakai <alonzakai@gmail.com>, 2018-09-12 09:45:34 -0700,1665, remove pagesize hasfeature wasm removed back 1667 1665 fuzz bug noticed handled stack.h,,
1826,4d737f27edb5e2bb5f514aae800ba9c6ab61ca5a,lon Zakai <alonzakai@gmail.com>, 2018-09-11 13:38:11 -0700,1665, fix parsing memory attribute expression parser 1666 need check read past length string 1665,,
1827,30de95a537857eac7c33b46cdf3606f93dff37c9,ay Phelps <hello@jayphelps.com>, 2018-09-11 16:09:45 -0400, , check test spec suite instead submodule 1677,,
1828,249b4b78d765c0f83029c3afd107cbe9ea025681,lon Zakai <alonzakai@gmail.com>, 2018-09-11 12:08:14 -0700, ," binary format local parsing fix 1664 error local browser allow 50,000 usually warn stuff like need limit else hang oom use agreed upon web limit generate nice string name local binary parsing name var instead much benefit worse name interned actually slow fuzz testcase hang instead ooming testcases bugreport 1663",,
1829,f831369f8586f86cafe10ee4f34c9b1f239abbfc,ury Delendik <ydelendik@mozilla.com>, 2018-09-05 17:35:46 -0500, , wasm2js fix base64 encoding 1670 static std string base64encode std vector char data signed char input data int data convert signed int making xff char patch fix casting,,
1830,a0cbc9dbbfcfd5bb254da904c19e3f6b0a1716c1,lon Zakai <alonzakai@gmail.com>, 2018-09-05 13:44:43 -0700, , pas 1641 add pas remove unnecessary call argument lto like manner parameter actually used function need send anything remove function declaration concretely func param i32   func call   func   func call   parameter ever sent constant value set constant value function mean value sent outside longer used previous point concretely func param i32 may use  func call i32.const call i32.const   func local i32 set_local i32.const may use  func call call  much help depends codebase obviously sometimes pretty useful example shrink 0.72 unity 0.37 mono note number include optimization optimization enables particular second point earlier lead inlining constant value often allows constant propagation also removing parameter may enable duplicate function elimination etc explains shrink unity almost implementation pretty straightforward work make heavy part pas parallel bunch corner case avoid change function exported table etc like inlining pas standard optimizing version pas latter also optimizes function change like inlining useful need run function optimization whole module,,
1831,8900ceb7e1adf6b91374c236a30ad7f20b980106,ury Delendik <ydelendik@mozilla.com>, 2018-09-05 15:38:46 -0500, , wasm2js fix nested selects 1671 wasmjs nested selects trying use temporary local patch reserve temporary right time avoid overriding value,,
1832,ff5d6f922555469d59e04268a143a201197cdce7,lon Zakai <alonzakai@gmail.com>, 2018-09-04 16:37:22 -0700, , loop invariant code motion 1658 add licm pas important llvm originating code obviously assemblyscript non llvm compiler might help lot also wasm bunch non llvm language may arrive benefit pas mostly straightforward considered using dataflow since ssa form cfg end actually pretty convenient use main explicit loop already present plus localgraph connects get set influencing passed bunch fuzzing also emscripten test suite licm added default pass think would make sense run default llvm need limit code moved pas follows increased code size fuzz testcases rarely real input happen due stuff like loop set_local i32.const    set_local i32.const loop   const get_local assignment local cheap copy another local may optimized later moving may prevent optimization since pas try move code back loop edit well default precompute propagate etc would run high opt level made pas move trivial code set tee consts get however risk remains code moved later reduced constant something like flatten licm may make sense,,
1833,a852156980986d6c5875981a49c16fe8b98875c3,lon Zakai <alonzakai@gmail.com>, 2018-09-01 09:59:04 -0700, , change literal class operator bitwise 1661 change mean nan value compared bitwise writing float rule nan different would apply think safer default particular fix fuzz bug rse pas placed literal hash table due nan nan infinite loop ... also look like really want bitwise comparison pretty much everywhere anyhow seen diff really single place need floaty comparison intepreter implement f32.eq etc. code already using proper code path anyhow,,
1834,9750c18faba7be48f9e086fd2d00838ca4ae9d0f,ay Phelps <hello@jayphelps.com>, 2018-09-01 10:58:11 -0400,1645, accepts array func name funcs 1650 allows using import table fix 1645,,
1835,480acf06144a056ee3569823e7cb65fea42cf808,acob Gravelle <jgravelle@google.com>, 2018-08-31 18:58:05 -0700,1646, remove assert import name match 1662 rewrite name anyway fix llvm invokes get escaped match 1646,,
1836,317d6e948d57c73dd6a181507f5e3d051bcae5d2,ury Delendik <ydelendik@mozilla.com>, 2018-08-31 12:00:02 -0500, , fix findfield 1660,,
1837,02ae5a6643a17ea02f5fa5f2e91f0497b571ab21,lon Zakai <alonzakai@gmail.com>, 2018-08-31 07:27:36 -0700, , fix read write dylink section 1648 dylink user section must emitted section per spec allow simple parsing loader make reading writing dynamic library remain valid dynamic library,,
1838,5c01f256df98dfe94b0c62323f94c1bcdcc3679d,ury Delendik <ydelendik@mozilla.com>, 2018-08-31 09:26:23 -0500, , escape name section binary format reading writing webassembly spec compatible 1646,,
1839,e4d014f4293e38f179354af7b049133679b256d8,am Clegg <sbc@chromium.org>, 2018-08-30 16:52:52 -0700, , remove replaced import 1657 pas replacing certain import bothering delete old one,,
1840,f109f3cae1cd81db22ba490a4da17a7a4c495047,lex Crichton <alex@alexcrichton.com>, 2018-08-30 16:10:26 -0700, , rename wasm2asm wasm2js emit esm default 1642 rename wasm2asm tool wasm2js commit performs relatively simple rename wasm2asm tool wasm2js functionality tool change yet intended start generating module instead asm.js function soon wasm2js support .wasm input file previously wasm2js supported .wast file make bit easier use tooling pipeline commit add support reading .wasm file directly determining parser use depends input filename binary parser used .wasm file wast parser used file wasm2js emit esm import export default commit alters default behavior wasm2js emit esm default either importing item environment exporting item like initialization memory also handled,,
1841,3976440ccb2c3ab9d67af7239f87ae04ebdeda1e,am Clegg <sbc@chromium.org>, 2018-08-30 14:49:19 -0700,1653, update test 1653 1656,,
1842,6e80adefb1605f3ca76d5a2f77a4ea65bf5acaee,ay Phelps <hello@jayphelps.com>, 2018-08-30 10:07:56 -0400,1185, use comma rpath instead equal sign fix macos 1651 macos gcc equal sign rpath invalid best tell comma used instead rpath cross platform travis tell think fix 1185 provided install real gcc mac clang pretend gcc provide gcc cxx check.py,,
1843,9723f53ec46ad83e3ff8c89b60eb64a71a8eb74c,am Clegg <sbc@chromium.org>, 2018-08-29 13:34:04 -0700, , run legalize interface wasm emscripten finalize 1653 ensures bit value correctly handled boundary,,
1844,f35b208a360882570bf97bfa7ff8d1293017dc95,am Clegg <sbc@chromium.org>, 2018-08-29 13:30:36 -0700, , wasm emscripten finalize allow duplicate declares invokâ 1655 allowing duplicate cause emscripten generate object duplicate key,,
1845,1c2871993bd219042814705a59b3bf81e4cbee58,lon Zakai <alonzakai@gmail.com>, 2018-08-29 11:35:27 -0700, , greatly simplify iteration.h 1654 avoids needing update new expression type simd etc future,,
1846,235e30bea040862f41f3ac5ee0acb3c88325ec45,am Clegg <sbc@chromium.org>, 2018-08-28 10:24:28 -0700, , wasm emscripten finalize make optional 1647,,
1847,65112ceec0cb92ec853f3391263d51a12b15bad0,lon Zakai <alonzakai@gmail.com>, 2018-08-27 11:41:48 -0700, , improve getfallthrough 1643 method look tee_locals operation receive value let flow like block final value etc handled operation handled also refactor pas think may useful propagating returned constant,,
1848,f215193ec12a45fdd893ea8a8cec1353aa3b529e,lon Zakai <alonzakai@gmail.com>, 2018-08-27 10:47:07 -0700,323, souper integration dataflow optimization 1638 background google souper 323 add souperify pas emits souper text format read souper emit rule hope eventually integrate rule binaryen work emit internal dataflow ssa based write souper text also add dfo pas stand data flow optimization dataflow generated like souperify performs trivial optimization using thing optimization already also good testing dataflow plus good preparation using souper output would also construct dataflow like matching souper rule,,
1849,57328f8e1e4db509b9956b53dd5300fc49e424eb,lon Zakai <alonzakai@gmail.com>, 2018-08-20 15:46:59 -0700, , fix value flowing remove unused 1639 fuzzer found bug flowing value pas one arm none typed flow value odd fuzzer find earlier bug since pas written year ago practice seems need specific set circumstance outside hit fix stop flowing value case also realized fixing valuecanflow global state variable entirely unneeded removing make pas significantly simpler time flow contains branch value might flowing flow stop remove etc need extra state variable say flowing possible want use flow check flowing branch remove flowing value replace branch value etc. case flow right place anyhow,,
1850,fb578443a44cf400aadd2b0b1354f9da70bc08b9,ay Phelps <hello@jayphelps.com>, 2018-08-17 14:06:22 -0600, , switch support binaryen 1637,,
1851,15b4a4c66fdad9a31bfb3912673378c1c9cf7e1c,lon Zakai <alonzakai@gmail.com>, 2018-08-14 11:29:34 -0700, , print stack proper .wat format 1630 make generate stack print stack emit fully valid .wat wasm file stacky format,,
1852,9f8fa5a14d3b48c650c2574529fd95c329cb5358,lon Zakai <alonzakai@gmail.com>, 2018-08-07 20:01:07 -0700, , wasm ctor eval improvement 1631 eval ctor nop function body longer need executed also remove export report ctor evalled outside longer call run pas remove unused global thing usually remove evalled ctors unless something else happens call happen normally llvm use ctor another place e.g duplicate function merging might merge ctor another function,,
1853,353e2c4fcb7662b8c73f5673fd0fc21bcb7287c6,lon Zakai <alonzakai@gmail.com>, 2018-07-30 17:36:12 -0700, , stack 1623 add new stack represents wasm low level simple stream instruction basically wasm binary format unlike binaryen structured tree format give small win binary size case usually 0.25 0.50 much looking forward prepares multi value really need like able optimize well also possible already currently stack optimization implemented dce local2stack check set_local get_local pair removed keep set value stack star align popped instead get block removal remove block branch valid wasm binary format implementation wise defined wasm stack.h new stackinst defined representing single instruction simple reflection binaryen add load etc pointer control flow construct expanded multiple instruction like block turn block begin end may also emit extra unreachables handle fact binaryen unreachable block ifs loop wasm doe overall binaryen difference wasm vanish way stack life function unique_ptr stack function may stack alongside main stack present write binary writing binaryen wasm binary process affect speed design let use normal pass stack particular defines pass generate stack optimize stack might worth splitting separate pass eventually print stack debugging purpose normal pass convenient run parallel across function convenience current pas system however downside keeping second option function using normal pass operate mean may get sync generate stack modify binaryen stack may longer valid example maybe removed local modified instruction place etc avoid pass define modify binaryen throw away stack miscellaneous note writing stack writing binary optimization slower going directly binary one reason still support direct writing doe lead fun template code make convenient single stackwriter class templated mode either binaryen2binary direct writing binaryen2stack stack2binary avoids lot boilerplate mode share lot code overlapping way stack doe support source map debug info use debug info present tiny text format comment emitting non minified text indicates stack present stack may help debugging case people forget also pas print stack debug purpose mentioned sieve binaryen.js test actually validating along new opts broke noticeable manner fixed added extra check pas debug mode verify stack thrown help avoid confusion invalid added comment possible future stack main depending optimization result following discussion earlier today,,
1854,0483d81ad9a665d404f2e2182e718ccbf0592be7,ury Delendik <ydelendik@mozilla.com>, 2018-07-25 17:37:30 -0500, , fix source map entry offset leb compressed 1628,,
1855,89ac9f8bb7e9bfaa57fd2c9bf0c6e950bd06e123,oppin Vincent <vincent.loppin@gmail.com>, 2018-07-25 02:13:30 +0200, , notice parse error number parsing text format 1608 throw parseexception istringstream failed read number modify invalid test add test,,
1856,f7d9536ad653a9e6cc059c1539c2807e754be264,lon Zakai <alonzakai@gmail.com>, 2018-07-23 15:16:13 -0700, , clarify function parallel pass fix asm2wasm bug 1627 problem fix made precompute look globals 1622 asm2wasm creating globals adding function optimizing could race caught threadsanitizer low frequency missed initial landing underlying issue function parallel pass able read global state modify read function content call node name pointer function clarifies doc fix asm2wasm handling function body parallel creating globals,,
1857,2f5774ca60119189b5123f170f39486e1efe94e6,lon Zakai <alonzakai@gmail.com>, 2018-07-21 16:51:43 -0700, , minor localgraph improvement 1625 remove action class need pointer get set simplifies code save little memory seem impact speed miscellaneous code style comment change,,
1858,5852b13a30d00a6b40683a1e3a8760dacd520ee0,lex Beregszaszi <alex@rtfs.hu>, 2018-07-22 00:18:06 +0100, , mark argument const callexport 1626 argument read therefore could const immediate benefit caller need define local variable see literal callexport name name,,
1859,7db96b6d0c93e3b92b396169506b5fd4f14a7dd3,oppin Vincent <vincent.loppin@gmail.com>, 2018-07-21 02:29:26 +0200, , speedup localgraph 1610 localgraph replace seen unordered_set boolean check localgraph use unordered_map store index last set_local instead vector localgraph use internal counter avoid invalidation cycle move block structs contiguous vector smaller one,,
1860,25890f53cba4b9b05341ac146dde755a7fa4fddd,aniel Wirtz <dcode@dcode.io>, 2018-07-18 19:16:29 +0200, , support constant globals precompute pas 1622 includes non mutable globals precompute allow continue removing manual inlining constant assemblyscript without breaking something related 1621 i.e enum animal cat dog cat requires animal.cat evaluated precompute constant value animal.dog ,,
1861,e601522b1e15e5a2a96578244faca1648021fb2d,lon Zakai <alonzakai@gmail.com>, 2018-07-16 12:01:54 -0700, , refactor stack writing code new stackwriter class 1620 separate part stack writing separate class stackwriter previously general writing stack stuff stack stuff global state manually cleaned etc seems nicer separate class class focused one thing functional change also add timeout wasm reduce test happened fail one commits running slower commit reason could random verified general wasm writing speed unaffected added timeout prevent future random timeouts,,
1862,6285642d3c2e267c40eab1c46dff887fca1bd3d7,lon Zakai <alonzakai@gmail.com>, 2018-07-10 11:05:44 -0700, , minor code cleanup 1617 code cleanup wasm binary remove param standardize whitespace add doc relooper handle block outgoing branch skip,,
1863,5ccfbacb8914bd220d67c95f9e9310c872eb987f,lon Zakai <alonzakai@gmail.com>, 2018-07-10 11:05:14 -0700,1479, proper error handling add get method 1570 see 1479 comment also one line readme update remove obsolete compiler mir2wasm add new one asterius also improve warning error reporting binaryen.js show stack trace relevant instead node.js process.exit avoid atexit warning spam debug build,,
1864,14ea9995281718b9694db4ed5441d44d1171e86f,am Clegg <sbc@chromium.org>, 2018-07-06 07:27:35 -0700, , fix tree install wasm.js 1616,,
1865,4c16bd2ce73707e24c4b054d59564049d539a440,lon Zakai <alonzakai@gmail.com>, 2018-07-04 16:21:19 -0700,1571, stop bundling binaryen.js build 1609 instead point user bot dcodeio see 1571 useful otherwise every change binaryen.js requires bundling build work contributor also grows git repo time still keep bundled build wasm.js use testing interpreter currently emscripten depends eventually wasm2asm may replace case wasm.js build required far frequently binaryen.js,,
1866,ac306cb081c8e6a2ea0b50e51b7f673dc2cf989b,lon Zakai <alonzakai@gmail.com>, 2018-07-03 14:57:38 -0700,6756, emscripten longer allows modifying module print runtime modify internal method instead see kripken emscripten 6756 1614,,
1867,11047d8791eabf77114164b3643bc5f8cd1ee298,am Clegg <sbc@chromium.org>, 2018-06-28 17:42:15 -0700, , remove s2wasm 1607 s2wasm longer used emscripten far know user,,
1868,487cee5ac474ec5971fad94ecbd85075ba5dbc92,oppin Vincent <vincent.loppin@gmail.com>, 2018-06-20 21:58:01 +0200, , fix check.py window platform 1605 fix file reading endline issue window platform,,
1869,4730172cd9114d03c448e9420628764fc2e72723,am Clegg <sbc@chromium.org>, 2018-06-19 17:55:37 -0300, , remove testing s2wasm via wasm waterfall script 1604 wasm waterfall moving away testing s2wasm s2wasm hopefully going removed soon,,
1870,e43526589eb88c708fa381ad7eed40d173c9992f,lon Zakai <alonzakai@gmail.com>, 2018-06-14 18:54:10 -0700, , build file error undefined symbol 1600 build file error undefined symbol make sure never regress add missing file wasm intrinsics generate wasm intrinsics build js.sh,,
1871,aab16136b9752eb0586b3a5b32b1d0e7a5803835,am Clegg <sbc@chromium.org>, 2018-06-13 16:01:14 -0300, , improve source map parsing handle whitespace 1598,,
1872,7bed8a09423dbe94200fd73bf1b9ede5eb646e59,am Clegg <sbc@chromium.org>, 2018-06-10 08:28:31 -0700, , add source map handling wasm emscripten finalize 1595,,
1873,c7b78eadec731675ef3274126d0d19df5e4263c5,lon Zakai <alonzakai@gmail.com>, 2018-06-08 17:51:22 -0700,1593, enough 1596 defines new optimization mode flatten flat opts currently local cse practice flattening needed llvm output pretty flat already block value etc. even doe use tee doe nest expression llvm already done gvn etc anyhow general though wasm generated non llvm compiler may naturally nested wasm allows see example 1593 assemblyscript testcase requires flattening fully optimized help take longer run testing basically flat much bigger useful may worth doe handle assemblyscript testcase others like much big real world code llvm yet running fuzzer happily creates nested stuff time see consistently shrink size around,,
1874,e3d201158d9136d6ffb655f70904dae5f9079317,lon Zakai <alonzakai@gmail.com>, 2018-06-08 15:45:02 -0700,1521, improve local cse 1594 make much effective rewriting depend flatten flattened simple check expression equivalent one already available use local use one instead basically track value local help 1521,,
1875,7676221b837bbd20daf1889dbdabf3cb76721658,lon Zakai <alonzakai@gmail.com>, 2018-06-07 19:23:49 -0700, , wasm opt source map support 1557 support source map input wasm opt refactoring loading code wasm use wasm wasm support output source map wasm opt add test wasm opt source map,,
1876,3af404435b3cfa90704810370703f20921c055dd,lon Zakai <alonzakai@gmail.com>, 2018-06-07 19:05:43 -0700, , duplicate function elimination improvement 1590 codebase 370k function 160k fact duplicate ... took many many pass figure minute fact may identical see function call identical long chain avoid limit many pass one pas get duplicate pass get almost codebase many pass necessary i.e. old behavior least let iteration build nice fast also refactors hashing code used pas moving nicer header file clearer readability also minor cleanup hashing code helped debug,,
1877,682bb461e6084048d1085f985f2a0973977d06b4,am Clegg <sbc@chromium.org>, 2018-06-06 12:16:01 -0700, , handle parse error wasm emscripten finalize 1589,,
1878,1f9bb69a7011ce527fe009b71e2cea26e5f42b37,am Clegg <sbc@chromium.org>, 2018-06-06 10:22:11 -0700, , fix check 1588 check supposed check rename needed need compare original,,
1879,f0d1c31121d40d958fc94c9bbcaa1a5feacc923a,am Clegg <sbc@chromium.org>, 2018-06-05 11:39:25 -0700, , ensure import function name match 1587 ran issue recently wasm emscripten finalize passed input without debug name currently supported,,
1880,465b18b4a1f9c0d44d927d22a1291ca89c29a896,am Clegg <sbc@chromium.org>, 2018-06-05 10:13:18 -0700, , increase flake8 coverage 1586,,
1881,bfae82fc4107a8115b41db4a2bd3d9204a92ad16,lon Zakai <alonzakai@gmail.com>, 2018-06-04 15:31:18 -0700, , run precompute propagate early would run also late helpful position general code 1581,,
1882,240c6bbe07602ccfcf094e7e47ff7a3f3635229b,am Clegg <sbc@chromium.org>, 2018-06-04 12:00:45 -0700, , add debuginfo flag wasm emscripten finalize 1584 brings tool parity existing s2wasm,,
1883,408b8164d5849b15c4715901065232e79490ebcd,acob Gravelle <jgravelle@google.com>, 2018-06-01 17:07:38 -0700, , always incorporate table segment offset calculating 1579,,
1884,1b99c7507d75566ba6314e157ceadfbbbe8301e5,am Clegg <sbc@chromium.org>, 2018-05-31 10:46:36 -0700,1066, fail fast 1578 command build script fail want continue travis really provide option probably default http github.com travis travis issue 1066,,
1885,0b6a1f5aa243d8542c086d4274e43bf411d63d59,lon Zakai <alonzakai@gmail.com>, 2018-05-30 16:51:12 -0700, , optimize validation many nested block 1576 testcase http github.com tweag asterius issue issuecomment 393052653 make almost faster use memory main improvement simplify optimize data structure validator validate target use unordered map use one also speedup using map effectively use iterators avoid multiple lookup also move duplicate node check internal validation section make sense anyhow wasm validation internal validation like check stale internal type debugging,,
1886,706b3f6c6cc95d688a5f97e9d82e15df6d04d54d,lex Crichton <alex@alexcrichton.com>, 2018-05-29 18:19:19 -0500, , wasm2asm fix enable large number spec test 1558 import abort environment add passing spec test bind abort function wasm2asm fix name collision currently function name local name collide namespaces causing buggy result function intends call another function end using local value target fix required enable fac spec test wasm2asm get multiple module one file working spec test seem multiple module defined test invocation use recently defined module commit update allow asserts mode wasm2asm work mode test enabling enable spec test wasm2asm wasm2asm enable float_literals spec test needed modified account engine work nan bit way otherwise largely test additionally turn asm.js accept either infinity nan ambient globals needed get imported global variable rather defined literal code wasm2asm fix function pointer invocation commit fix invocation function function pointer previously table name lookup definition mismatched table signature based namification rather athe name type  overall enables slew spec test wasm2asm enable left right spec test two small bug order evaluation operator wasm2asm select instruction would sometimes evaluate condition first supposed last similarly call_indirect instruction would evaluate function pointer first supposed evaluated last select instruction case relatively small fix one call_indirect bit pessimized generate temporary hopefully becomes problem tightened wasm2asm fix signed load promotion bit ints commit enables endianness spec test revealed bug bit load smaller size signed previously upper bit bit number set zero fix signed load upper bit match highest bit low bit load wasm2asm enable stack spec test internally spec test mixture expression syntax wat syntax copied wasm2asm folder going wat2wasm ensure consistent binaryen wasm2asm fix unaligned load store float replace operation removenonjsops using translate float integer use existing code unaligned load store integer wasm2asm fix tricky grow_memory codegen bug commit fix tricky codegen bug found grow_memory instruction specifically stored result grow_memory immediately memory would look like heap32 though look like evaluates destination grow function called grow function invalidate destination furthermore actually generalizable function call heap32 foo function could transitively call grow_memory commit fix issue ensuring store instruction always considered statement unconditionally evaluating value temporary storing destination bit pessmimization hopefully fix bug wasm2asm handle offset table commit fix initializing table whose element initial offset hopefully help fix rust code function pointer offset default update test tweak location type rename entry namescope document fromname comment lowercase name update compiled update test output expectation rename namescope global namescope top switch enum class switch fatal add todo asm.js longer generated,,
1887,91b90b76ea870cf96b2853b54cbe42ff46e387bf,lon Zakai <alonzakai@gmail.com>, 2018-05-26 14:09:35 -0700, , allow total memory greater signed int32 1565,,
1888,74339e385ba31b6c61cbdc93262659b70cde9487,am Clegg <sbc@chromium.org>, 2018-05-25 18:29:33 -0700, , add tree build travis 1567,,
1889,a8104784ffad6cac4389bba67c59db3e29fb235b,am Clegg <sbc@chromium.org>, 2018-05-25 16:37:09 -0700, , cleanup script script test 1566 remove executable bit script entry point add missing licence test move arg parsing function remove legacy only_prepare underscrore argument,,
1890,1b691e57f6377d3816bd213d4d16341773b82cb5,am Clegg <sbc@chromium.org>, 2018-05-25 14:30:27 -0700, , fix embedwast.py tree building 1569,,
1891,becfa3ee4214bb4e6fbe1dbdbf6c3756c548d82b,lex Crichton <alex@alexcrichton.com>, 2018-05-25 10:54:05 -0500, , wasm2asm finish i64 lowering operation 1563 wasm2asm finish i64 lowering operation commit finish lowering i64 operation implementation division remainder primary change compiled rust wasm linked via intrinsics removenonjsops pas updated include previously basically replacing instruction call intrinsics intrinsics tracked one location hopefully intrinsics need regenerated much posterity source currently life gist gist although suspect gist continue compile work time gist http gist.github.com alexcrichton,,
1892,6e56ef195d01936c0c7f7a6d1c0f5d1c7e2c2e52,am Clegg <sbc@chromium.org>, 2018-05-21 16:42:12 -0700, , cleanup .gitignore 1555 followup want remove test generated file test write elsewhere,,
1893,d0ce93f8d7a08017618839498a9b920bbb132267,lex Crichton <alex@alexcrichton.com>, 2018-05-19 16:14:00 -0500, , wasm2asm finish f32 f64 operation 1554,,
1894,cb64ec3879db3422ac4afd3119938f8dfe7b7b05,lon Zakai <alonzakai@gmail.com>, 2018-05-17 08:00:59 -0700,1540, fix optimizing equivalent local bug introduced 1540 1556 skip flowing tee value drop current outermost find redundant child tee may still necessary,,
1895,3c5a2de669542caebd7ef001db6678b70375f0b5,lex Crichton <alex@alexcrichton.com>, 2018-05-16 18:40:45 -0500, , wasm2asm implement float int conversion 1550 commit lift conversion strategy emcc take convert float point number integer implement various matrix i32 u32 i64 u64 f32 f64 refactoring performed i64 i32 pas allow temporary variable get allocated type i32 otherwise contains pretty direct translation emcc operation wasm2asm,,
1896,d4aa0d30234ac9e553d743bd881a767d96554a4a,lon Zakai <alonzakai@gmail.com>, 2018-05-15 15:58:13 -0700, , clean printing code 1548 make iostream override receive reference pointer i.e. like e.g llvm printing work avoiding overriding printing pointer address sort odd move code header especially unrelated header,,
1897,1354d20a1765c9132958c69661d613dc62eb3216,am Clegg <sbc@chromium.org>, 2018-05-15 12:44:50 -0700, , travis move flake8 script phase 1553 mistakenly added before_script,,
1898,35b563da815d1a0b63e13902246f698fc1fd80dd,am Clegg <sbc@chromium.org>, 2018-05-15 11:25:34 -0700, , wasm emscripten use debug name 1537 use export name internal debug name function especially imported lld debug name demanagled contain function accessible outside module i.e exported point adding internal function list accessible outside anyway tesed emscripten using test runner.py,,
1899,d731efbfc6106f1e111ef550905533000781fe65,am Clegg <sbc@chromium.org>, 2018-05-15 11:24:31 -0700, , apply flake8 remaining python code 1542 also refactor function match check.py,,
1900,95990c43cc8a1af46af630841e6a430a71f6ea8a,lex Crichton <alex@alexcrichton.com>, 2018-05-15 10:53:49 -0500, , wasm2asm implement f32 f64.copysign 1551 commit implement copysign instruction wasm2asm binary implementation new pas wholesale replaces copysign instruction equivalent bit ops instruction intended match emscripten implementation lowering,,
1901,4615f00d6fdc314e6ca08ad3abbd42bfed60737c,lon Zakai <alonzakai@gmail.com>, 2018-05-14 18:52:49 -0700, , full printing mode print comment control flow ending help readability 1552 like block  end block also fix current breakage master,,
1902,689ca6b29a135b8eaa206d790f4a01562fbe5fe4,aniel Wirtz <dcode@dcode.io>, 2018-05-14 20:51:35 +0200, , wasm2asm add math alias floor ceil sqrt 1549,,
1903,e086ef9ad169443b85b4d4c9d915bbd378276552,lex Crichton <alex@alexcrichton.com>, 2018-05-14 13:44:30 -0500, , implement bit rotation lowering wasm2asm 1545 much fancy rather operation naively lowered inline else chain execute,,
1904,7ae28f8edba5b23223e4db4dc281b8bf77ce88ea,lex Crichton <alex@alexcrichton.com>, 2018-05-13 16:14:36 -0500,1458, wasm2asm implement instruction 1547 mentioned 1458 naive implementation instruction round trip value address linear memory also pointed 1458 necessarily valid language though language like rust would likely horribly broken valid data could stored low address commit ahead add implementation instruction traveling data address likely need update language come long validly store data first byte linear memory seems like happen near future close 1458,,
1905,4282c9478c7cb435401e0eed1a464c1d7a2db213,lon Zakai <alonzakai@gmail.com>, 2018-05-13 10:46:37 -0700, , clean wasm2asm testing 1546 move wasm2asm test output natural location test wasm2asm let people create new test auto generate output like test,,
1906,51e515748e56c3ace6b3181e9ca8bf464c86f0e0,lex Crichton <alex@alexcrichton.com>, 2018-05-12 23:26:45 -0500, , implement signed bit shift right wasm2asm 1544 mostly piggy back pon previous bit shift lowering code filling gap,,
1907,e4927328ed2f748bd02d47a281d35fe22dfe5ef8,lon Zakai <alonzakai@gmail.com>, 2018-05-10 16:40:24 -0700, , merge loop tail 1543 e.g  block  loop  br_if code doe branch loop top  code could moved   moving code loop may help loop body become singleton expression readable anyhow,,
1908,51135887cf773586b6ca84e8d9efe5a223f8a91c,am Clegg <sbc@chromium.org>, 2018-05-10 11:53:09 -0700, , move renaming llvm generated __invoke_xx function s2wasm wasm emscripten 1539 allows functionality used also wasm emscripten finalize i.e lld path,,
1909,111b4f1950467d51a78211af183f4ae6398aac49,lon Zakai <alonzakai@gmail.com>, 2018-05-10 08:58:09 -0700, , optimize equivalent local 1540 local known contain value pick local use get_local make sense prefer common increase chance one dropping zero remove copy local one know contains value consistent win small though around 0.1 0.2,,
1910,6a9ececa2fc9eca99a12b65ca130612942babdce,aniel Wirtz <dcode@dcode.io>, 2018-05-09 22:01:18 +0200, , fix msvc warning compiling binaryen target 1535,,
1911,991974c2049796676a967b5a5d3ffe195e5d818d,am Clegg <sbc@chromium.org>, 2018-05-09 09:33:46 -0700, , couple fix tree build 1538,,
1912,65ea79b18c1fc2492b993cdde221b974d605a883,aniel Wirtz <dcode@dcode.io>, 2018-05-09 00:18:05 +0200, , add way remove function type binaryen .js 1536,,
1913,a5d33e7faaa965565f9ca1d0c23c3077389f2389,lon Zakai <alonzakai@gmail.com>, 2018-05-08 07:57:49 -0700, , reducer improvement 1533 add helper class iterate node child use attempting replace node child child different type parent try replace parent conversion child example call may receive two f32 input return i32 try replace call one f32s conversion i32 possible try replace function body child even child different type changing function return value,,
1914,691cde4c8bed1a3694b6ae97160843736a204a1e,aniel Wirtz <dcode@dcode.io>, 2018-05-07 23:29:36 +0200, , expose sign extension ops binaryen .js 1534,,
1915,dbe49a6238f8a8df2d1a648fe0659916aad00c35,lon Zakai <alonzakai@gmail.com>, 2018-05-04 16:35:49 -0700, , improve remove unused module element 1532 remove entire memory table possible particular imported exported used previously look whether imported assumed could never remove also add variant remove everything function useful reducing testcase care code function,,
1916,21dc96b1852d6dbadedfec3336980be3f7bc7d45,lon Zakai <alonzakai@gmail.com>, 2018-05-04 12:52:18 -0700, , reducer improvement block loop node reduction attempt 1530,,
1917,723cf52095fb98d0a34a0851683dbb17c9ec989f,lon Zakai <alonzakai@gmail.com>, 2018-05-04 12:51:46 -0700, , misc minor cleanup codebase 1531,,
1918,e77743ee826ab3c2978711c856b1072ae97f6143,lon Zakai <alonzakai@gmail.com>, 2018-05-04 11:47:25 -0700, , add missing atomics used metric 1529,,
1919,dba8e94c423d555086f8233935558c0853835e64,lon Zakai <alonzakai@gmail.com>, 2018-05-01 16:10:38 -0700, , fix fuzz bug 1528 remove unused handle declared returning value despite unreachable condition simplify local work loop main pas making change set_locals tracked modified,,
1920,16d3174db2f3b8c56600633156f9765bc3ad96b1,lon Zakai <alonzakai@gmail.com>, 2018-05-01 10:21:22 -0700, , generate loop return value optimizer 1527,,
1921,1bd0b00d54d9863449d357db7f390a24437bc537,lon Zakai <alonzakai@gmail.com>, 2018-05-01 08:25:45 -0700, , simplify local opts 1526 use return value one side unreachable undo return value use br_if instead,,
1922,e020f4a2cb44fcbfd56c95a4a097f08cddc8367e,lon Zakai <alonzakai@gmail.com>, 2018-04-30 19:40:30 -0700, , simplify local nonesting 1525 add version simplify local doe create nesting keep flat sense flatten also refactor simpify local template various mode template parameter,,
1923,ec426c6b8ba87c5c5107ed30497ad13252dd3258,onathan Foote <jmfoote@loyola.edu>, 2018-04-30 14:38:32 -0400, , make generating atomics optional translate fuzz 1513,,
1924,b38d9bc6c0d382aedd4c769093139a49ee69afdc,lon Zakai <alonzakai@gmail.com>, 2018-04-30 11:19:52 -0700, , flatten improvement 1522,,
1925,032ddd6a88bf608953c76422c317eb5aa875985e,lon Zakai <alonzakai@gmail.com>, 2018-04-30 11:19:10 -0700, , optimization inlining precompute propagate plus regular opts 1523,,
1926,23f53674fc7aed90313cc70cbdde7dffa0ea6a5b,lon Zakai <alonzakai@gmail.com>, 2018-04-30 11:14:18 -0700, , add converge option wasm opt 1524 option keep running pass told run cycle converge term binary size keep optimizing shrink also fix metric bug uncovered expect metric object still around running pass later another passrunner,,
1927,be12baa0384c06e26effaff2ea45870c3030b589,lon Zakai <alonzakai@gmail.com>, 2018-04-27 14:51:03 -0700, , optimize selects constant condition 1516,,
1928,a645da8fd22cea7789f07d4e0b88fdf38f9f5035,lon Zakai <alonzakai@gmail.com>, 2018-04-27 14:50:13 -0700, , improve extract function 1517 remove unwanted stuff leave export function extracting optimization effective cleanup,,
1929,7e8a47add58ebf5f39523fe70461aa7119ee490d,lon Zakai <alonzakai@gmail.com>, 2018-04-27 14:49:02 -0700, , precompute propagate may benefit multiple pass 1518 one pas may remove code includes tee make optimization possible found souper investigation,,
1930,52d14d008a6a836c2cdbfe68852d274840e5de14,lon Zakai <alonzakai@gmail.com>, 2018-04-26 15:22:46 -0700, , code folding improvement 1512 noticed souper folded identical code else arm block missing case one arm singleton expression wrap block rest optimization work see going folded turn common phi ran code folding assumed good code size may remove phi wasm later seems like run optimizing size well together two shrink lua almost,,
1931,353be4a0537de508f45ee72624d1af65bd5597dd,lon Zakai <alonzakai@gmail.com>, 2018-04-26 14:42:40 -0700, , improve precompute propagate 1514 propagate constant tee_local found souper detail patch comment basically differentiate precomputing value expression,,
1932,14552064348c08159d6f8562a872c1be69e669b0,am Clegg <sbc@chromium.org>, 2018-04-25 12:49:21 -0700, , mark prebuilt file diffable 1462 otherwise git grep rendered rather useless,,
1933,fd3b3e54bd97abbf8269b33d937ad2f44ba4bb60,lon Zakai <alonzakai@gmail.com>, 2018-04-13 09:17:21 -0700, , refactor interpreter 1508 move logic literal class leave work except handling trap avoid switching type opcode literal method usually switch type instead one big switch opcodes literal method unchanged shorter clearer avoids first switching,,
1934,7a8273ae2c1854b9840fc56a952e572f673bb10f,lon Zakai <alonzakai@gmail.com>, 2018-04-13 09:16:34 -0700, , better binary error reporting 1505 report offset error also fix compiler warning comparing signed unsigned type leb code,,
1935,b1cf66d5761cc40a26451d1bd97bcdf1bcc23326,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-04-11 19:28:26 -0700, , fix typo skip,,
1936,a9d59bd033e98d6399a7efab81a57aafcf241be3,lon Zakai <alonzakai@gmail.com>, 2018-04-11 18:46:48 -0700, , math opts 1507 xor,,
1937,61388bbd1fe6ef472e656298483efa2d81cd9ed3,lon Zakai <alonzakai@gmail.com>, 2018-04-11 15:23:49 -0700, , simple math opts 1506 optimize shift optimize various e.g.,,
1938,92afb40eea6e9a09af2d355ff9ab6a4bd04c54bb,lon Zakai <alonzakai@gmail.com>, 2018-04-11 12:02:29 -0700, , simple integer math opts 1504 stuff like also cleanup utility function noticed writing istypefloat isfloattype inspired http github.com golang blob master src cmd compile internal ssa gen generic.rules,,
1939,9b5ce471992033eeec9a8779bce55f2429496431,lon Zakai <alonzakai@gmail.com>, 2018-04-10 17:17:16 -0700, , fix bad param var type error handling 1499 improve error handling validation assertion non concrete type inappropriate place fix fuzz testcase,,
1940,df19ebde22c48fba43f88c71c4870f53b8974f93,lon Zakai <alonzakai@gmail.com>, 2018-04-10 10:44:07 -0700,1501, br_table optimization 1502 inspired 1501 remove unneeded appearance default switch target front back list target optimize switch target chain optimize br_if pair target make e.g fastcomp libc smaller noticeable improvement thing like box2d etc,,
1941,27517701d611ad7de5b467eaee2f0d589180465f,lon Zakai <alonzakai@gmail.com>, 2018-04-09 11:25:28 -0700, , add validation option commandline tool disabling validation make loading large wasm file twice fast 1496,,
1942,e42e1e3d4a5c67c0c066fe397b456ab8d41a78fd,lon Zakai <alonzakai@gmail.com>, 2018-04-07 10:19:58 -0700,1495, handle literally unreachable 1497 optimization 1495 bug found fuzzer binary format parsing emit unreachable code may stacky ignore however parsing note break taken removed code leading state break taken code thought clarifies difference unreachable code wasm sense anything start block til unreachable reachable literal sense even code start may literally reachable block reachable use literal unreachability know code ignored therefore ignore break,,
1943,5b5789495a97602869f18d552b2a9e1814edefae,lon Zakai <alonzakai@gmail.com>, 2018-04-05 14:49:25 -0700, , creating block binary format parsing know block break use avoid rescanning block unreachability purpose 1495,,
1944,82151243bbd4c018191721dce5381c8e449f3c77,eejin Ahn <aheejin@users.noreply.github.com>, 2018-03-30 14:52:44 -0700, , use .set instead alias 1491 llvm mirror llvm 9273bb3 phabricator http d44256 changed alias assignment syntax      .set  patch reflects change,,
1945,709bca8d2c59923cd397fc55cdcdb7f80751555d,lon Zakai <alonzakai@gmail.com>, 2018-03-30 09:41:36 -0700, , refactor path utils store bin dir user api use standard call even modified user input move wasm reduce.cpp 1489,,
1946,5f61c3208212beaf9e69230f69770ab64c61e06f,ichael Ferris <mike.ferris@hotmail.com>, 2018-03-26 12:46:21 -0700, , support wasm reduce window 1488,,
1947,339548b048d4c58c9d488b33f78551e7ac14724c,athan Froyd <froydnj@gmail.com>, 2018-03-23 14:08:06 -0400, , fix wasm opt 1487 1450 look like changed account new updated expectation filename,,
1948,9c2fa9247333233d3454c546677205b4a3c2e96a,athan Froyd <froydnj@gmail.com>, 2018-03-23 12:38:07 -0400, , remap get set _local index 1486 lowering i64 value function create new local variable i64 local variable one local low bit one high bit create mapping old local new well translation encountered get_local type i64 skipped supposition nothing true local getting may remapped new index lowered function need account change similar logic hold set_local,,
1949,f7ebc7c0e53241e4604be5321134d48d640f0a40,athan Froyd <froydnj@gmail.com>, 2018-03-22 13:36:40 -0400, , reorder local wasm2asm 1482 documentation simplify local pas suggests running reorder local clean unnecessary local wasm2asm meant generated code number unused variable good minimizer probably clean let ahead clean wasm2asm,,
1950,4eeec14d343793af27e77620e1e66eda522a8a6b,athan Froyd <froydnj@gmail.com>, 2018-03-20 17:51:02 -0400, , add highbits global 1483 using global return bit value function said global actually present omission caused generated code fail validation,,
1951,267e4b55f8c2f598ea5ea44d5df88d83bfb3ebac,athan Froyd <froydnj@gmail.com>, 2018-03-19 17:02:40 -0400, , include filename erroneous diff output possible 1452 failing test case often start  incorrect output diff expected actual  make difficult figure expected output might live information derived examining test course much nicer provided diff see straightaway introducing new check one take filename expected output enables display failing file e.g  incorrect output diff home froydnj src binaryen.git test pass code folding.txt actual  arguably nicer new check also enables reducing boilerplate open ... .read call various place still place using usually .strip used expected output,,
1952,9c9b78db2e6ce178cc0c546d59aacaa4c72c001b,lon Zakai <alonzakai@gmail.com>, 2018-03-19 12:56:07 -0700, , fix fuzz bug fpcast emu call_indirect modifying unreachable modified version well 1481,,
1953,c52f23608e33ab972cfa187409e8c78793103d4b,lon Zakai <alonzakai@gmail.com>, 2018-03-16 13:17:45 -0700, , use jsvu get spidermonkey 1443 jsvu easy way get vms get spidermonkey used check asm.js validation wasm2asm test,,
1954,963b585bf66a6b9a31c13f244f1e6612d0c96991,lon Zakai <alonzakai@gmail.com>, 2018-03-16 09:40:30 -0700, , check error parsing expression load store immediates 1475,,
1955,d37e6942a011ac72cf59934ca26c1993e37a23fd,lon Zakai <alonzakai@gmail.com>, 2018-03-16 09:40:11 -0700, , validate function context adding label binary parsing found valgrind 1478,,
1956,8fd854d6f60c6c711c3c04e1d30c74a6b2f1821b,athan Froyd <froydnj@gmail.com>, 2018-03-16 12:25:47 -0400,1443, create math_ min max variable wasm2asm generated 1476 using math_ min max wasm2asm generated file without declaring said function decision created problem test math_min resp max would first used f32s thus returning f32 validation would fail used f64s resulting change make wasm2asm test pas mozjs asm.js validation move 1443 forward,,
1957,8faa79c0dafe2c358a7949910bb1a225a3b32ede,lon Zakai <alonzakai@gmail.com>, 2018-03-15 08:46:45 -0700, , reducer improvement 1471 see function removed deprioritize trying remove may unremovable focus reducing segment exponentially first zeroing left exponential helpful reducing massive sqlite testcase,,
1958,987f210d2cae3fca548575084bb7c2a9a908f2bc,aniel Wirtz <dcode@dcode.io>, 2018-03-14 18:38:14 +0100, , include pas build js.sh 1473,,
1959,6bd81e541b7ae524f4c94fe91349f133f0007704,lon Zakai <alonzakai@gmail.com>, 2018-03-14 09:58:46 -0700, , fix liveness traversal action either get set assumed non get set caught valgrind 1472,,
1960,d52213c3f5e96bb3450721d96aa68d3c5e0865b6,lon Zakai <alonzakai@gmail.com>, 2018-03-13 09:29:38 -0700, , function pointer cast emulation 1468 add pas implement function pointer cast emulation allows indirect call even number argument type incorrect undefined behavior practice somehow work native arch even relied upon e.g python emscripten already emulation asm.js also worked asm2wasm implement something like binaryen also allows wasm backend use result python portable using wasm backend mechanism used emulation make indirect call use fixed number argument type i64 return type also i64 thunk placed table translate argument properly target basically reinterpreting i64 back result receiving i64 i32 sent upper bit zero reverse would truncate upper bit etc note different emscripten existing emulation convert signed double make sense double contain numeric value wasm i64s also bitwise conversion may like native arch anyhow enough python also add validation function type matching function actual params result surprised even place test suite wrong also simplifies build script moving two cpp file wasm subdir built shared various tool,,
1961,0008b795d11d65d0759c3c0a71ee74b536f1ecf8,lon Zakai <alonzakai@gmail.com>, 2018-03-08 14:54:34 -0800, , fuzz fix fix copying host node operand 1464,,
1962,9ca513a79c38ae60fbf3773af94e3ee10ca8d800,lon Zakai <alonzakai@gmail.com>, 2018-03-08 14:54:19 -0800, , asm2wasm warning improvement 1463 limit amount asm2wasm warning argument added removed flexible argument handling e.g python many thousand warning flooding output ... also lock warning come multiple thread,,
1963,073d3707cb5980a76161105e421034e85ac0f8ce,acob Gravelle <jgravelle@google.com>, 2018-03-08 13:47:00 -0800, , let s2wasm emit binary output 1465 emit invokefuncs list metadata refactor s2wasm use modulewriter fix wasm emscripten finalize metadata output binary output add flag emit binary s2wasm note chose emit text default binary behind flag mismatch asm2wasm expectation user 2wasm tool break existing user s2wasm s2wasm deprecated favor lld least disruptive change live awkward default long emit source map binary output s2wasm emit binary outfile specified,,
1964,be9243419302aca1ff088004546205f1c252f9c5,lon Zakai <alonzakai@gmail.com>, 2018-03-07 09:35:29 -0800, , fuzz fix global doe exist report error run rest check 1461,,
1965,e8b75397304ca6d6c2ef87217df07e697248a576,lon Zakai <alonzakai@gmail.com>, 2018-03-06 10:21:48 -0800, , afl fuzz fix table memory instantiation 1460 replace assert proper trap invalid offset table initialization fix offset handling initial table size computation unsigned value handle trap fuzz exec creating instance optimization may remove import imported table init may trap opts may remove trap check result comparison right order get bothered,,
1966,e5dd0fdfc554be665cbe586fbbe4f9d038f5b9d6,lon Zakai <alonzakai@gmail.com>, 2018-03-06 08:35:26 -0800, , wasm reduce improvement function removal work keep 1459,,
1967,1997b28e98604a8e8a26fde44cec1ae9782e67bb,lon Zakai <alonzakai@gmail.com>, 2018-03-05 13:04:55 -0800, , allow small name test pass 1450 allow test test pass numeric name case name.passes file name instead name containing pass might long see 1020,,
1968,ac93e8bebf97aec9407e094f56c3fd523399f59e,lon Zakai <alonzakai@gmail.com>, 2018-03-05 13:04:11 -0800, , better asm2wasm error handling reporting 1456,,
1969,363c2c7abd68847b4b226764160e2d3431dc3b54,athan Froyd <froydnj@gmail.com>, 2018-03-01 17:05:36 -0500, , eliminate multiple return statement wasm2asm function 1448 change eliminates one issue prevents asm.js validation generated code see 1443,,
1970,142bd78059afd225c404ea1caedd0114699f7bc7,aniel Wirtz <dcode@dcode.io>, 2018-02-28 23:56:12 +0100, , drop start function empty 1449 drop start function empty update test dist file,,
1971,eb8c45786d7b553d94669369b14a388a2a0f7373,lon Zakai <alonzakai@gmail.com>, 2018-02-28 13:37:59 -0800, , fuzz parameter improvement params var 1451,,
1972,01098f1288d37058b5fbac50468a1b07408d6dec,ichard Diamond <wichard@vitalitystudios.com>, 2018-02-27 18:29:15 -0600, , allow disabling werror 1445 werror warning provided specific toolchain compiler standard,,
1973,89daa028fec6b627f1cbad3285b3176361f36e3d,lon Zakai <alonzakai@gmail.com>, 2018-02-27 14:04:45 -0800, , flexible param number asm2wasm 1439 refactor code writing byn file make easy emit binary instead text fix bad argument number asm2wasm caused undefined behavior llvm side happens work natively nicer fix like would native build give warning instead failing compile update build js.sh updated build,,
1974,de999c4673688e1b6f29a9a3023e1295fca33446,acob Gravelle <jgravelle@google.com>, 2018-02-26 15:17:23 -0800, , em_js binaryen support 1410 emit em_js metadata include s2wasm style em_js support change em_js metadata keyed name add testcase em_js always emit emjsfuncs metadata better error handling unexpectedly formatted __em_js__ function,,
1975,8bbf9b759b92f5d5248ee66096f07835caf6062a,athan Froyd <froydnj@gmail.com>, 2018-02-26 16:56:43 -0500, , fix implement unary ops 1442 add test i32.popcnt lower i64.popcnt add test i64.extend_u i32 lower i64.extend_s i32 fix lowering i64.eqz lower i64.eqz efficiently add test i32.clz i32.ctz lower i64.clz i64.ctz,,
1976,efeff741fc53fd0a253e6a4d73c85ac149fb66ca,acob Gravelle <jgravelle@google.com>, 2018-02-26 08:29:18 -0800, , generate s2wasm metadata binaryen 1440 extract comma handling logic lambda function start emitting metadata binaryen handle declares extern add export metadata remove em_asm call declares,,
1977,326205357c92016343f879c68e0042857a833676,an Gohman <sunfish@mozilla.com>, 2018-02-23 09:27:47 -0800, , say wat instead wast 1430 http webassembly.org doc text format say recommended file extension webassembly code textual format .wat note .wast format understood listed tool superset .wat format intended writing test script,,
1978,d9692277357ba6fd67a7e25ce16934209d049033,an Beich <jbeich@FreeBSD.org>, 2018-02-22 21:01:50 +0000,1437, fix 1437 limiting mfpu 32bit arm target 1438,,
1979,a8538a40783bd9455972f146404d8cbbb5a3774f,lon Zakai <alonzakai@gmail.com>, 2018-02-22 11:10:32 -0800, , fix ssa bug assume even set location assign local read local local may also written elsewhere 1423,,
1980,a40f14508fb769358737c3f8c9b94e6c42f79c61,lon Zakai <alonzakai@gmail.com>, 2018-02-22 11:10:12 -0800, , ensure unique import name type giving prefix avoiding collision say global import function name name section happens match 1424,,
1981,30c1b0c58ee60a730ddfd862fbed7dd5e4d7cf93,lon Zakai <alonzakai@gmail.com>, 2018-02-22 11:09:39 -0800, , add i64 high bit tempret0 helper funcs legalizing interface 1428 add tempret0 helper necessary legalize interface,,
1982,07f6dfbf0d89d4c07106c0519711dc132f09fab2,obert Flack <flackr@gmail.com>, 2018-02-21 18:02:07 -0500, , use mfpu vfpv3 instead march native 1192,,
1983,3f5ee87d262080265b65a3789392b399c91f30ad,aniel Wirtz <dcode@dcode.io>, 2018-02-21 23:22:11 +0100, , improve name mangling asm.js identifier 1433 also refactors mangling file reused generator consumer i.e. important know import must named switch_ otherwise would switch update test dist file,,
1984,5578bb58402fde2bb2c932bfa08ab71045854a41,lon Zakai <alonzakai@gmail.com>, 2018-02-20 19:28:23 -0800, , wasm2asm fix 1436 look asm.js compilation message almost asm fix wasm2asm f32 operation,,
1985,eacd9a987750ae3984c225a73e9567931277d6a0,aniel Wirtz <dcode@dcode.io>, 2018-02-20 23:59:12 +0100, , add global initializers wasm2asm 1434 add support constant i32 f32 f64 global variable initializers previously ignored though get_global set_global supported,,
1986,27000a9bfa616133c9368214386fd0416f398dfe,lon Zakai <alonzakai@gmail.com>, 2018-02-16 08:18:55 -0800, , determinism fix hash result may differ run 1431 hash result may differ run depend pointer remove duplicate function matter except considered first item hash group others avoid fine except hash collision collision mean group merged one considering first item rest miss duplicate single group hash collision occur rarely practice instead consider comparison hash group fine unless large amount hash collision,,
1987,85ae8cc6ffeffa65ff30d17649a0d8589dab2b00,athan Froyd <froydnj@gmail.com>, 2018-02-15 14:08:59 -0500, , better handling float ops wasm2asm 1427 explicitly handle binary float operation handling obvious make non handling explicit code add handler shortly add handling simple binary float operation min max copysign require sophisticated handling add handling float comparison move float min max handling correct place previously grouped i32 ops handle float promotion demotion,,
1988,e0f86a24bda5612fb798524df23b6071d2dccc14,athan Froyd <froydnj@gmail.com>, 2018-02-14 18:31:50 -0500, , implement lowering i64 subtraction 1429 fix lowering i64 add permitted reuse input temporary variable result weird thing happen otherwise add support lowering i64 subtraction,,
1989,4a592c7e03af7a692cfb5ba9cda0ce4ae723adde,athan Froyd <froydnj@gmail.com>, 2018-02-14 15:30:10 -0500, , adjust test script cope tree build 1420 many place assume test blah valid valid executing script binaryen source directory binaryen_test option general enables tree testing using instead,,
1990,55324135a5e105a2ad9ec5c3f74fe2a438a8bfba,acob Gravelle <jgravelle@google.com>, 2018-02-14 12:07:09 -0800, , fix flake8 1426,,
1991,b5ac1aa5f17cebac494228dc4380cfc509ee8846,athan Froyd <froydnj@gmail.com>, 2018-02-14 14:34:26 -0500, , add wasm2asm lowering bit signed comparison 1421 plus test make sure implemented thing correctly,,
1992,11a83d799d1b539f7c7a1eec987dc87119a098dd,athan Froyd <froydnj@gmail.com>, 2018-02-14 14:16:14 -0500, , fix comment typo 1425,,
1993,ee78bc9bccb02bb2b63fbb881fd2893a5fca0044,acob Gravelle <jgravelle@google.com>, 2018-02-14 10:30:16 -0800, , fold wasm link metadata wasm emscripten finalize 1408 wasm link metadata use __data_end symbol add global base param emscripten wasm finalize compute staticbump properly let modulewriter write provided output object,,
1994,e97d485bb1f1818e2c2118d28507d49cb61ea57b,lon Zakai <alonzakai@gmail.com>, 2018-02-14 08:06:52 -0800, , simple math opts 1414 optimize simple math operation mul mul mul power urem power fix asm2wasm callimport parsing optimizer may get rid added offset function table update build,,
1995,41faf2409f3e1d8d2dcaf456141f4ce6ac6a3d75,eejin Ahn <aheejin@users.noreply.github.com>, 2018-02-13 13:56:45 -0800, , add .clang format 1407,,
1996,8ddbac2c642e9fe0809afadbc28abe7c5f668674,eejin Ahn <aheejin@users.noreply.github.com>, 2018-02-12 13:43:25 -0800, , support multiple extension lld test generation 1417,,
1997,1f8fd302b35d4e192901b3f0b1eb915aabb3ae03,lon Zakai <alonzakai@gmail.com>, 2018-02-12 11:24:56 -0800, , fix safe heap bound checking 1415 fix safe heap check load store fewer byte type,,
1998,e7f2213265816dbb051ff34867c69fab85d0a861,lon Zakai <alonzakai@gmail.com>, 2018-02-11 14:02:17 -0800, , wasm reduce tweak improvement 1405 wasm reduce tweak improvement better error message better validation better function removal etc,,
1999,ea9b66b204fb4aa59227e677298c1e524b961bf3,lon Zakai <alonzakai@gmail.com>, 2018-02-11 14:02:02 -0800, , remove recursion avoiding code fuzzer hang prevention useful test infinite loop 1404,,
2000,1a85018da5fb6fdd8efdbec4685a4dfab1698e93,akub Jirutka <jakub@jirutka.cz>, 2018-02-09 20:29:31 +0100, , travis remove build ppc64le take minute 1413,,
2001,9ce090dee72a36ed7665e625df93a651d8a9a791,aniel Wirtz <dcode@dcode.io>, 2018-02-09 18:19:40 +0100, , link binaryen.js api doc wiki instead 1412,,
2002,ecda4af803f628f66ddc24ae6ca1f97a4395b2fa,lon Zakai <alonzakai@gmail.com>, 2018-02-08 20:39:10 -0800,1409, merge pull request 1409 jirutka travis travis fix failure update alpine chroot install 0.7.0,,
2003,ccf2b671e65f5f8d3e0dde810b25ffafe70d70f0,akub Jirutka <jakub@jirutka.cz>, 2018-02-09 01:12:16 +0100, , travis replace hack conditional build stage proper method travis finally implemented conditional stage job yay see http docs.travis ci.com user conditional build stage job,,
2004,5e4facc64c22438af5cfd8ce7cdc05562eea52ae,akub Jirutka <jakub@jirutka.cz>, 2018-02-09 01:00:31 +0100, , travis fix failure update alpine chroot install 0.7.0 ubuntu apparently deleted qemu user static package zesty ... script package artful since 0.7.0,,
2005,7c4fe0bc095e067c8605f60a66664bd58bac3ac5,eejin Ahn <aheejin@users.noreply.github.com>, 2018-02-07 14:36:56 -0800, , emscripten addfunction support wasm backend 1395 add necessary command line option addfunction support generates required jscall import generates jscall thunk function,,
2006,a3232460dd4dc63b0ed39a68f0bebecc805572d4,acob Gravelle <jgravelle@google.com>, 2018-02-06 11:17:37 -0800, , dedupe function name reading binary 1396 dedupe function name reading binary robust name deduplication use instead add name duplicated wasm binary,,
2007,a85be9781620696b79d0efd694605f608417098d,ris Selden <kris.selden@gmail.com>, 2018-02-06 07:17:17 -0800, , update wasm2asm generate almost asm grow_memory used 1340 allow wasm2asm generate almost asm grow_memory current_memory export memory used generate almost asm memory growth support log reason almost asm stderr,,
2008,fd03054a5dac582ea1cbe8745c9b4852a7c9c686,lon Zakai <alonzakai@gmail.com>, 2018-02-05 20:48:57 -0800, , note isatomic load store 1406 check isatomic comparison hash isatomic,,
2009,d322b4f3ce429de5215fd52db24735b8f85ab878,lon Zakai <alonzakai@gmail.com>, 2018-02-05 15:55:21 -0800, , std string std string 1403 type proper convention,,
2010,e33d487206e79b5e2fd1382627255a1ea39dad75,osh Stone <cuviper@gmail.com>, 2018-02-05 13:43:19 -0800, , fix wcatch value gcc 1400 instance may simply caught reference instead,,
2011,874e89eec8ee4c56ecdb9e6cd68f8366fe983b79,lon Zakai <alonzakai@gmail.com>, 2018-02-02 18:47:39 -0800, , inlining improvement 1397 simplify inlining logic special case first iteration change behavior based optimizing instead use one simpler set heuristic inlining inlining optimizing run inlining optimizing default anyhow point try make inlining without optimization useful realistic use case inlining still useful debugging run optimization anyhow later everything case inlining optimizing might add redundancy simpler heuristic let somewhat better job longer paranoid inlining multiple iteration also raise limit inlining thing obviously worth size size thing size never lead increase code size optimize take least node generate something read two local revers order would require temp local outside scope etc also fix infinite recursion inlining infinitely recursive set call,,
2012,6b05f000e8b9249afd0838774b6bdaf64fcaf90a,lon Zakai <alonzakai@gmail.com>, 2018-02-02 18:47:10 -0800, , rename wasmtype type 1398 rename wasmtype type wasm namespace anyhow without wasm fit better alongside index address expression module etc,,
2013,c81857a3a7708738b20bb28a320fc971e74626a7,aniel Wirtz <dcode@dcode.io>, 2018-02-01 22:42:55 +0100, , fix hard wired buffer limit api 1394,,
2014,6bc97008eca2f8776f6fe4d480f3227d2a05a7c5,lon Zakai <alonzakai@gmail.com>, 2018-01-30 10:13:07 -0800, , simplify threadpool isrunning 1391 simplify threadpool isrunning need static global unique_ptr undefined behavior access threadpool shutting thread parent destroyed,,
2015,52f115f8ea66467d8c500fa9b03d2deb98eaafa2,eejin Ahn <aheejin@users.noreply.github.com>, 2018-01-29 15:55:19 -0800, , add startswith function istring 1393,,
2016,b1d24f5c552ccb0c3076e252b893990340d6016e,aniel Wirtz <dcode@dcode.io>, 2018-01-29 22:51:39 +0100, , sourcemap support binaryen 1392 initial source map support also test,,
2017,f9087893cde7e653a66dd125386a97d228a749a2,ury Delendik <ydelendik@mozilla.com>, 2018-01-26 17:33:25 -0600, , write section url empty 1390,,
2018,6c081144e5bcf31edece0806c38d63c97257cc4c,lon Zakai <alonzakai@gmail.com>, 2018-01-26 14:32:06 -0800, , threadpool refactoring 1389 refactor threadpool code clarity fix bug using pool different thread parallel singleton pool need ensure created used one thread time model simple way ensure use number thread equal number core pool per module might lead number core number module optimized refactoring add parent pointer worker thread giving direct access pool make simpler make sure pool thread creation teardown threadsafe commit also add proper locking around pool creation pool usage,,
2019,4ef6655e887e4088b8faf0cf5857fd49edbcd498,athan Froyd <froydnj@gmail.com>, 2018-01-25 13:40:29 -0500, , address msvc warning 1386 fix unused variable warning wasm2asm.cpp need give bad_alloc exception name nothing add appropriate cast shift operand msvc complains implicitly converting result bit bit might well make clear intended bit shift happen first place disable c4722 msvc annotated fatal fatal wasm_noreturn yet msvc still warns take next step silence warning completely warn deprecated posix function msvc non window platform name msvc recommends using everybody understands posix name silence warning,,
2020,f9e49c05050723ee1be717d725e649a269f6807e,lon Zakai <alonzakai@gmail.com>, 2018-01-24 15:50:50 -0800, , inlining improvement 1375 inline element function optimizing smaller call replacing add extra useful vacuum inlining optimizing,,
2021,0ddfd3a397eefde12a2999111cbdda0e77ab5639,lon Zakai <alonzakai@gmail.com>, 2018-01-24 15:50:13 -0800, , threading fix 1377 threading fix careful creating pool one thread may try create check running thread constructor assertion child thread call get initialize lock,,
2022,544cce0a37a124415b00a6b3a1dd2791d714a807,lon Zakai <alonzakai@gmail.com>, 2018-01-24 15:49:16 -0800, , improve localgraph 1382 simplifies logic standard flow operation always faster much faster worst case saw like sqlite simpler rewrite also fix fuzz bug,,
2023,9baf87e8961079da478ec3d3f718d3331963cc77,lon Zakai <alonzakai@gmail.com>, 2018-01-23 14:44:46 -0800, , show binary byte remove without export func metric 1379 show binary byte remove without export func metric check start,,
2024,155d0b5f42b57100582649dfbdb81806b10579a2,lon Zakai <alonzakai@gmail.com>, 2018-01-22 17:36:06 -0800, , atomic wait wake fix 1383 fix wait wake binary format support alignment offset emit unreachable part atomic operation simplicity avoid special handling emit atomic wait default fuzzer hang native support,,
2025,02729a12e1735f629d3066b51c96a056f712b080,acob Gravelle <jgravelle@google.com>, 2018-01-22 12:50:36 -0800, , first pas lld support emscripten 1346 skeleton beginning o2wasm wip probably going used get building post cherry pick ast remove commented code include debug module print linking read linking section print emscripten metadata json emits user section module remove debugging print everything needed build metadata rename o2wasm lld metadata lld metadata support outputting file use table index instead function index initializer function add lld emscripten tool add emscripten runtime function wasm module built lld handle em_asm lld emscripten add list function forcibly export initializer function disable incorrect initializer function reading add error printing parsing file lld metadata remove metadata prefix lld metadata output standalone json support em_asm consts start segment initial test framework lld metadata tool add em_asm test add support wasm_init_funcs linking section remove reloc section parsing unused lld emscripten read write text add test harness lld emscripten export function add missing lld test output add support reading object file differently difference far importing mutable globals object file representation symbol invalid wasm update help string update linking test stackalloc fix rename lld emscripten lld metadata wasm emscripten finalize wasm link metadata add help text header comment auto instead auto extract linktype abi wasm object.h remove special handling wasm object file reading allow mutable globals add brace around default switch case fix flake8 error handle generating dyncall thunk import well use explicit bool use glob pattern lld file iteration use initializer function,,
2026,b01f2bb237e086fe4ae852c6004297fa8f8b39c2,lon Zakai <alonzakai@gmail.com>, 2018-01-20 09:36:59 -0800, , optimize wasm reduce 1359,,
2027,eb7ec3286f781407f9f019b298eb241f4019234b,ergey Pepyakin <s.pepyakin@gmail.com>, 2018-01-20 06:11:56 +0300, , add readdata fuzz support making easier use 1378,,
2028,3a13cbeaed21e452b855ce7b132de92d09b9e997,aniel Wirtz <dcode@dcode.io>, 2018-01-20 00:56:54 +0100,1370, use tree compatible path build js.sh see 1370 1373,,
2029,63ebdb6d360c6e96e6f0e10974dfd8c29baade73,aniel Wirtz <dcode@dcode.io>, 2018-01-19 21:33:40 +0100,1369, also clear import export map 1372 fix 1369 update binary kitchen sink test,,
2030,3b1f2c488a1d3f392b2eba2ff08b621e3616783c,aniel Wirtz <dcode@dcode.io>, 2018-01-19 19:01:38 +0100, , skip applicable globals 1374 currently whenever global used wasm2asm fails assertion error implement anything allows use non i64 globals lowered anyway,,
2031,ba4eeb394c466bf4d64013a71a73ec2c424f14f0,aniel Wirtz <dcode@dcode.io>, 2018-01-19 18:56:44 +0100, , use emscripten building binaryen.js 1368,,
2032,9bde26331ba0f8da5165a8aaf192d9bb2bb72648,lex Beregszaszi <alex@rtfs.hu>, 2018-01-18 18:53:48 +0000, , make input const reference 1367,,
2033,14cb0c01ee22fbcd2923db0502e11b1fc51df05d,lon Zakai <alonzakai@gmail.com>, 2018-01-17 21:20:53 -0800, , optimize zero used negate int possible 1365,,
2034,692069c6eef63754c27e815fd948fea6185d7619,lon Zakai <alonzakai@gmail.com>, 2018-01-17 20:26:04 -0800, , refactor optimization default 1366 followup 1357. move optimization setting pass.h various place also split huge line tracing code put block child whose number arbitrarily large one line seems caused random error bot suspect overflowing buffer anyhow much clear split line reasonable length,,
2035,0a9ddae715b2cff23a86cf14bbf6a4b870511395,lon Zakai <alonzakai@gmail.com>, 2018-01-17 13:11:14 -0800, , global optimization fix 1360 run dfe end may effective inlining optimize reorder function final dfe asm2wasm opts make inlining deterministic std atomic value zero initialized global post opts end asm2wasm also module builder fix function type removing inline optimize preserving debug info,,
2036,01b23987405d8d7b2f13e40ef906169163ac2a5f,aniel Wirtz <dcode@dcode.io>, 2018-01-17 18:25:49 +0100, , add optimize shrink level debug info option 1357 add optimize shrink level debug info option add instantiate functionality creating additional unique instance api use workaround running test node test misuse module script concatenating instead catching case library catch update sieve test seems optimized output changed due running optimize level use option pas runner update relooper fuzz api test share default tool api add test optimize level unify node test support check.by also add getters optimize level test also test debuginfo add debug info test used well fix missing nodejs import detect node.js version wasm support update hello world test also run node feature test webassembly node instead document option apply globally make sure hello world.js output differ mozjs node,,
2037,3d8358f8e10a01869ef59189539ab1d17d52cb10,an Gohman <sunfish@mozilla.com>, 2018-01-15 13:35:42 -0800, , make triple explicit llc command line readme 1361 s2wasm currently depends wasm32 unknown unknown elf triple depend explicitly rather relying default,,
2038,d4de67daab18a320ee78a05d27c6d5612d1c73fd,lon Zakai (kripken) <alonzakai@gmail.com>, 2018-01-13 12:56:54 -0800, , update test pass func metrics.txt racing landing,,
2039,d9ef39df1139837df5d7f7294ca45b62e3e282aa,lon Zakai <alonzakai@gmail.com>, 2018-01-12 11:58:33 -0800, , function metric pas 1353 emits binary size opcode count function help investigating taking space wasm binary,,
2040,2bdd116719017bf13d8d4bda37b81be1baf13b37,lon Zakai <alonzakai@gmail.com>, 2018-01-11 17:51:25 -0800, , disable leaksanitizer build 1351 disable leaksanitizer build started fail consistently apparent reason probably change infrastructure use waterfall compiler outdated,,
2041,d516cab66bfa065742a9d7b5bb3273fd8625074a,lon Zakai <alonzakai@gmail.com>, 2018-01-10 17:12:34 -0800, , allowing atomics emit new extend instruction arrive 1354,,
2042,66385f1ad6c16b104e2cf4e9c7010aec8e3b3432,lon Zakai <alonzakai@gmail.com>, 2018-01-10 16:14:56 -0800, , runfunction runonfunction run function run function 1356,,
2043,1cc353a06dce586fb1515026d091f62335493280,acob Gravelle <jgravelle@google.com>, 2018-01-10 11:35:01 -0800, , update wasm shell expected failure 1268 update wasm shell expected failure update waterfall revision check.py waterfall test driver update torture file latest waterfall,,
2044,623e42aa7be8aa030093b204491d94f3c297d312,lon Zakai <alonzakai@gmail.com>, 2018-01-10 11:34:53 -0800, , optimize memory table possible 1352 remove memory table import imported used pretty minor large wasm file reading small wasts noticeable unused memory table time,,
2045,8f90b655201e4cd77196a0b90ea4f398ecfe2c56,lon Zakai <alonzakai@gmail.com>, 2018-01-09 21:13:11 -0800, , emit 100k data segment browser reject 1350 instead merge constant offset segment must order stay limit many non constant offset segment issue warning,,
2046,23728627ec6fbd43936b7564a7c8b598227ef9ce,lon Zakai <alonzakai@gmail.com>, 2018-01-05 17:53:16 -0800, , redundant set elimination pas 1344 optimizes 1343. look store value already present local particular remove initial set loop starting zero since local initialized already help real world code super common since coalescing mean tend assigned something else anyhow need zero mainly help small function running coalescing would extend live range potentially bad way,,
2047,4c55e497d7455f6bbda2567f5535b89de7ce7c69,erek Schuff <dschuff@chromium.org>, 2018-01-04 16:23:11 -0800,5974, fix stackalloc runtime function generation wasm backend 1348 returning top allocated space rather bottom fix taken tbfleming kripken emscripten 5974,,
2048,bbcb50de8d60158067913e27908f43593c8c23c4,lon Zakai <alonzakai@gmail.com>, 2018-01-03 17:55:30 -0800,1317, validation fix 1317 1347 add get_global set_global validation validate get_local index update build fix test,,
2049,5aee9479ca2839f5d3baf4dc34f0b6f1dec19fe3,lon Zakai <alonzakai@gmail.com>, 2018-01-03 10:42:10 -0800, , fix infinite loop fuzz testcase generation code 1345,,
2050,593178a3e207e5382338fbf05adce419fe9545fd,lon Zakai <alonzakai@gmail.com>, 2017-12-30 11:05:47 -0800,5998, fix 5998 1341 binaryen.js wasm.js need filesystem support newest emscripten longer runtime build fix binaryen.js wasm.js also move binaryen.js use standard emscripten modularize run binaryen.js possible engine update build emit debug build different name emit binaryen.js make testing easier safer remove volatile thing binaryen.js info printing test,,
2051,b5ee16f318019f89d8a897437fb906d470cfa8d9,lon Zakai <alonzakai@gmail.com>, 2017-12-30 08:38:31 -0800, , spillpointers pas 1339 experiment help boehm style spill thing could pointer stack seen conservative garbage collection spill add code size runtime overhead actually thought slower smaller difference vms gzip size larger even better optimization like dead store elimination pas doe following add new pas create abi dir info pointer size stack manipulation utility separate liveness analysis coalescelocals pass use like spillpointers refactor sortedvector class liveness analysis separate file seems nicer way,,
2052,10bf008c73948d4592e567cdbce330dff724b1c2,avid Dorfman <d3dave@users.noreply.github.com>, 2017-12-21 20:23:21 +0200, , readme add instruction build visual 1337,,
2053,f4b7df08b27a2fe000424524957cf9cf10041193,aniel Wirtz <dcode@dcode.io>, 2017-12-20 20:46:14 +0100, , add getters various specific expression field 1332,,
2054,a0de358f7d73222501775e5f21ed4ec9838311cb,lon Zakai <alonzakai@gmail.com>, 2017-12-17 20:28:41 -0800, , merge local pas 1334 optimizes situation described 1331. namely copied subsequent get could use instead vice versa value equal specifically seems get rid definite overlap live range removing allows coalesce local merge pas therefore doe nothing live range end anyhow danger may extend live range cause conflict thing heuristic tested every codebase find always produce net win even one saw 0.4 reduction code size surprised fairly slow pas localgraph much optimized includes minor optimization rewrite meanwhile enabled also includes fuzzing improvement better test stuff like,,
2055,dc2c05153c57b55fdd949a8827d4c8f648db8484,lon Zakai <alonzakai@gmail.com>, 2017-12-14 20:23:12 -0600, , fix binary fuzz bug 1323 check currfunction using need stacky code valid wasm need function location anyhow put memory table offset limited huge alignment led power shift undefined behavior also add test facility check crash testcases,,
2056,183be2f02636335ba1253e00ee942fb1e69cffe5,lon Zakai <alonzakai@gmail.com>, 2017-12-08 17:32:09 -0800, , update binaryen.js doc skip,,
2057,1d0fa771b97a39ce487a202db4785c78a4c5ba29,lon Zakai <alonzakai@gmail.com>, 2017-12-08 11:26:28 -0800, , allow exporting import 1326,,
2058,9c51f2b51ecc57dfad1478bbc6932ec2795b1374,lon Zakai <alonzakai@gmail.com>, 2017-12-07 21:33:47 -0800, , metadce fix 1329 ignore missing import wasm may already optimized handle segment hold globals root remove segment run reorder function optimal order may changed dce fix global global init segment offset reachability fix import rooting processing import may imported,,
2059,22f1ce86e48173e9e55a021350c1ec9ca046080f,lon Zakai <alonzakai@gmail.com>, 2017-12-07 09:56:44 -0800, , binaryen.js improvement 1324 binaryen.js improvement block default value none undefined add text format style alias thing like getlocal write get_local text format,,
2060,0571fe31c8a5f91d962fa435ea2f9507d2339280,lon Zakai <alonzakai@gmail.com>, 2017-12-06 14:23:14 -0800, , wasm metadce tool 1320 add new tool better dead code elimination problem help overcome wasm module part something larger like wasm combination therefore dce either one sufficient remove cycle spanning wasm world concretely binaryen performs dce never remove export considers root larger meta space outside may actually removable solve tool receives description outside graph abstract form including node root add graph node wasm single graph representing entire space outside wasm connection performs dce finding reachable root cleaning wasm course clean thing outside since abstract representation thing graph print removable node outside tool use tool written general way possible hopefully multiple use mind write something emscripten dce wasm combination emit,,
2061,b7f0a896efc12bb72b40bdaf19986736ccb9315a,lon Zakai <alonzakai@gmail.com>, 2017-12-06 09:25:23 -0800, , support .extend instruction interpreter 1322 also fix optimizing precompute,,
2062,82d8dc7a9f5ca1c7989ab227bf32edfcd7e4a3c1,lon Zakai <alonzakai@gmail.com>, 2017-12-05 10:55:29 -0800, , handle debug info without filename asm2wasm 1249 support debug info without filename asm2wasm input happen llvm know file line,,
2063,42acc22254c89b035bbaba512c86c1784545278d,lon Zakai <alonzakai@gmail.com>, 2017-12-05 10:41:06 -0800, , support fixed non relocatable segment wasm merge also printing fix multiple segment never really printed prettily 1316,,
2064,0d5a39f17a854b4241c2704a1269620687bb6a07,lon Zakai <alonzakai@gmail.com>, 2017-12-04 19:06:01 -0800, , br_if table 1313 implement 1309 subsequent br_ifs compare value various constant converted br_table block br_if i32.eq get_local i32.const br_if i32.eq get_local i32.const br_if i32.eq get_local i32.const  block tablify br_table tablify get_local   constant apply e.g. range value would make huge jump table fairly conservative think hard tell probably tweaked based experience pas practice later,,
2065,e91d1bf256d70d0e1635dcf35a3d253d11555f58,ban Eguia <razican@protonmail.ch>, 2017-12-01 02:40:00 +0100, , fixed compilation gcc 1301,,
2066,bcc6205e83ec98f9b3d5704b79255a853a4ee8bd,lon Zakai <alonzakai@gmail.com>, 2017-11-30 11:12:17 -0800, , morgan law 1297 eqz eqz eqz normally morgan law apply boolean var xor version work case side true iff zero bit,,
2067,290b875970c535f910bbcd5755090f1723447573,lon Zakai <alonzakai@gmail.com>, 2017-11-30 11:11:33 -0800, , remove unneeded code handle return function 1299 remove unneeded code handle return function use doe anyhow,,
2068,0108e9b3a21bb6220e8e91fbb9aa8466dfe74343,lon Zakai <alonzakai@gmail.com>, 2017-11-30 11:10:58 -0800, , add invocation function fuzz function tested many input value 1303,,
2069,09ac6aa8c1dcd6b3045495fde0bc515c9731aeb2,lon Zakai <alonzakai@gmail.com>, 2017-11-30 11:10:33 -0800, , make sure fold code block fallthrough value since parent block value finalize type concrete type vanish 1302,,
2070,81afbbf6fd1be74071813cb63311b3491ff9332c,aniel Wirtz <dcode@dcode.io>, 2017-11-29 19:08:24 +0100,2, make segment optional setmemory 1310 currenty throw omitted see assemblyscript binaryen.js,,
2071,c68fe0dd8f948c8f980616d6b527182cd5c682c3,lon Zakai <alonzakai@gmail.com>, 2017-11-28 13:32:36 -0800, , binary fuzz fix disallow popping outside block 1305 remove unneeded code handle return function use doe anyhow fix fuzz bug popping outside block,,
2072,94cbe63149248e251580ef95a6d3a31faf00a238,aniel Wirtz <dcode@dcode.io>, 2017-11-22 18:35:45 +0100, , provide addimport addexport element api 1292 provide addimport addexport element api,,
2073,13ec76dfbc1c72a5e77d6a33fca5bf349308162d,lon Zakai <alonzakai@gmail.com>, 2017-11-21 17:08:28 -0800, , fix reading break function exit 1304 remove unneeded code handle return function use doe anyhow,,
2074,4da2ad6ef86ea21fa95bae10c5b74cbe16202c84,lon Zakai <alonzakai@gmail.com>, 2017-11-21 13:06:39 -0800, , name function import using name section 1290,,
2075,6cf7343bffa3d485161e221b23dfacd9243dec68,lon Zakai <alonzakai@gmail.com>, 2017-11-21 13:05:52 -0800, , fix wasm reduce testing tree 1284 fix wasm reduce tree use hardcoded bin wasm opt instead add path namespace utility get proper path use binaryen_root test setup code ensures,,
2076,eedcc291164a46474116e0e54ede3133214a7621,aniel Wirtz <dcode@dcode.io>, 2017-11-21 21:43:12 +0100, , running pass single function binaryen .js 1295 also function utility apis,,
2077,07c54750eb626ea7434341e439f6cee75efbf4b5,aniel Wirtz <dcode@dcode.io>, 2017-11-21 00:19:12 +0100, , add atomic load store binaryen .js 1298,,
2078,a6c4f10233c0caeb0503960d90aa36a2dd76ed64,lon Zakai <alonzakai@gmail.com>, 2017-11-18 15:12:39 -0800, , fix build add testing 1291 run emscripten test travis docker run emcc verifies built wasm.js binaryen.js work run binaryen.js wasm.js test check new build also bundled build updated build,,
2079,8a6964014cc1198acda11646c4b2f79406c5fec2,lon Zakai <alonzakai@gmail.com>, 2017-11-17 21:36:40 -0800, , fix code folding fuzz bug 1282 fix code folding bug merging function level tail moved code could reach break target must move code break target enclosed effectanalyzer already functionality move code around little make clearer,,
2080,da0c45566118c863f12a2edb004e28a084ef5660,lon Zakai <alonzakai@gmail.com>, 2017-11-17 16:50:31 -0800, , flatten tee 1296 flatten tee_local flatten lead optimizable code tee_local nested introduce side effect bad place also fix test stuff recent merges,,
2081,dcdaa5de3b2c63a1349faacfe921527d972fc95c,lon Zakai <alonzakai@gmail.com>, 2017-11-16 09:22:57 -0800, , fix copying 1278 fix copying preserve forced explicit type one infer arm add builder method makeif receives type apply block method make block list also variant provided type,,
2082,27474b7482ad2673ef3c9aca09aa443769e7447f,acob Gravelle <jgravelle@google.com>, 2017-11-15 16:09:08 -0800, , decouple wasm linker emscripten glue 1293,,
2083,dc0cd445c08ede80fa2b1747cffcd2254c97a0f6,aniel Wirtz <dcode@dcode.io>, 2017-11-15 18:55:50 +0100, , add const expression utility binaryen .js 1288,,
2084,4deed1eb310993391fa0e7e06a18cf2303674f98,lon Zakai <alonzakai@gmail.com>, 2017-11-14 16:42:25 -0800, , add i64_atomics_ support asm2wasm 1262 add i64_atomics_ support asm2wasm atomic load signed,,
2085,82d693b2bd23778b29bbd1019936a2857580c7ed,lon Zakai <alonzakai@gmail.com>, 2017-11-14 12:10:51 -0800, , run binaryen.js test using node travis 1275,,
2086,47a27b1ae440cec5272c4460f3a6c2e0b3e97021,lon Zakai <alonzakai@gmail.com>, 2017-11-14 10:52:41 -0800, , accept overlapping segment 1289,,
2087,4231ff2f3c9bcbaa639659b39618e4a46db9eb23,lon Zakai <alonzakai@gmail.com>, 2017-11-14 09:28:44 -0800, , fix test broke due recent merges 1287,,
2088,0cc695efaf1423fb8615a302ed28f9142252eb16,lon Zakai <alonzakai@gmail.com>, 2017-11-13 15:48:16 -0800, , stacky value middle block may consumed 1267,,
2089,ca09203416a556f0a895f6cfa32426bdd46f9824,erek Schuff <dschuff@chromium.org>, 2017-11-13 15:18:30 -0800, , update call_indirect text syntax match spec update 1281 function type get element rather part call_indirect see webassembly spec 599,,
2090,20b8b02ff331f8b59d44e2a72ebd6f81e08f49ac,aniel Wirtz <dcode@dcode.io>, 2017-11-14 00:06:30 +0100, , avoid merge conflict build js.sh 1286 change parameter single multiple line make easier extend human also prevents merge conflict,,
2091,fd8e78a65ba51fbc636ac6832a0e29501b43838b,aniel Wirtz <dcode@dcode.io>, 2017-11-13 22:26:12 +0100, , fix yet another tracing issue 1283 also includes test,,
2092,29963c3088ec829e9ad4f889cc13fd21e3ce45f7,aniel Wirtz <dcode@dcode.io>, 2017-11-13 22:25:19 +0100, , add atomic ops binaryen.js 1280,,
2093,7261008d021723d8e88b410b7d0c410631677196,lon Zakai <alonzakai@gmail.com>, 2017-11-13 11:29:07 -0800, , fast pas fuzzing 1258 add fuzz pas option pick random pass fuzz wasm opt invocation,,
2094,5e4ea073ed1f6000197fab70041544ea73a8b4a0,aniel Wirtz <dcode@dcode.io>, 2017-11-11 19:39:21 +0100, , added expression utility function binaryen .js 1269,,
2095,5b44a8bbf43bb4f1bd8c27d8eceae0111e729c89,aniel Wirtz <dcode@dcode.io>, 2017-11-10 20:24:19 +0100, , fixed use undefined type array tracing 1279 fixed use undefined type array tracing also fix use expression,,
2096,566e2c15016cbcf45dfa844ef2788ce27cdfab6f,lon Zakai <alonzakai@gmail.com>, 2017-11-09 15:09:34 -0800, , rereloop fuzz fix 1259 fix relooper bug ensure function body right type relooper output doe flow stuff wasm function result expect flow value none option word doc say relooper block must end terminator return unreachable break etc flow,,
2097,83f62325ac33706b1fcc589bc5ad6e290ed14d3f,aniel Wirtz <dcode@dcode.io>, 2017-11-09 22:46:32 +0100, , added binaryenatomic incl ops binaryen 1276 added incl ops binaryen atomiccmpxchg atomicwait atomicwake,,
2098,e6eb478ec4eae111063780bd67c48abbf9c68947,lon Zakai <alonzakai@gmail.com>, 2017-11-09 11:56:06 -0800, , fix wasm reduce bug second validator param feature flag 1277,,
2099,1e2528ec1d2c7bc6130760aed900741ebe565b60,lon Zakai <alonzakai@gmail.com>, 2017-11-07 20:55:23 -0800, , build binaryen.js wasm.js travis 1260,,
2100,cf8336221d128b56fcbbb4130949a06a56748075,aniel Wirtz <dcode@dcode.io>, 2017-11-08 02:10:41 +0100, , use instead globals binaryen 1270,,
2101,d38eeadc55a4b3a97b2879ba3d13a50224c28df6,aniel Wirtz <dcode@dcode.io>, 2017-11-01 23:46:07 +0100, , restrict validation output validation error api 1253 print entire possibly large module validation fails leave printing tool using validator instead always validator overridden,,
2102,d328024d8c435379f248b0a257df2aedbe1c1b84,lon Zakai <alonzakai@gmail.com>, 2017-11-01 12:48:01 -0700, , fix binaryen.js wasm2asm 1257 fix wasm2asm binaryen.js function local may name add necessary,,
2103,7a4c47e7d4e70404249af4a9ac4ffcbe23d2cd67,aniel Wirtz <dcode@dcode.io>, 2017-10-30 19:27:31 +0100, , added ability run specific optimization pass binaryen .js 1252,,
2104,da871deea05366006a3942cebb61e8463c1c4100,lon Zakai <alonzakai@gmail.com>, 2017-10-27 10:56:13 -0700, , print wasm2asm parsing error 1251,,
2105,2e51491a15914c5ba7eff9afeaaee8f998e82ede,erek Schuff <dschuff@chromium.org>, 2017-10-27 09:20:01 -0700, , add feature enum 1250 enum describes wasm feature expected include validator reject operation require excluded feature pass avoid producing requires excluded feature make easier catch possible error binaryen producer e.g emscripten asm2wasm flag enable disable atomics tool currently accept feature dis opt inspecting modifying existing module would annoying use flag tool expect risk accidentally introducing atomics low,,
2106,9d409e10f5fc6188e4b774e6b757ab25dfabefed,am Clegg <sbc@chromium.org>, 2017-10-25 10:43:25 -0700, , pin flake8 specific version travis 1242,,
2107,47c9021401a69d407a3e730012824cae75dd66f9,lon Zakai <alonzakai@gmail.com>, 2017-10-24 20:36:28 -0700, , notation change ast 1245 indeed tree abstract syntax tree since language syntax except trivial meaningless sense,,
2108,93f5f167d7674e87f634eca1f5980baee4de5053,lon Zakai <alonzakai@gmail.com>, 2017-10-24 19:02:28 -0700, , improve constant fuzzing 1244 generalize constant emitting fuzzer using effect create constant convenient way also workaround gcc 7.2 window issue fully understand removing pick call avoids bug,,
2109,059e6e37ce17fb16d1087d00579a92d7b8634c25,lon Zakai <alonzakai@gmail.com>, 2017-10-24 16:48:13 -0700, , fix atomics refinalization missing glue 1241 add visitor must override element never happens,,
2110,de4b36f88138637132f428789187cde9fb499dd2,aiju Tsuiki <tzik@users.noreply.github.com>, 2017-10-25 07:13:04 +0900, , fix flake8 failure script 1239 flake8 start warning bare except python script job failing,,
2111,a26b8ce4e37ebf0ddf5f59ee8cd35e6177d16db3,lon Zakai <alonzakai@gmail.com>, 2017-10-24 10:33:30 -0700, , fix safe heap regression handling existing import 1237,,
2112,0ebb699f0cf1128dfeca1abc967b21490230ab93,aiju Tsuiki <tzik@users.noreply.github.com>, 2017-10-25 01:38:40 +0900, , remove unused passoptions wasm ctor eval.cpp 1238 passoptions wasm ctor eval.cpp cause compile failure wunused variable clang build,,
2113,54efd418f3758882aaf0401d3e7f0f7a86c21cc2,lon Zakai <alonzakai@gmail.com>, 2017-10-23 16:37:27 -0700, , add timeout param wasm reduce 1230,,
2114,83a05025ee883f86cabdf92a9891d6c5ef5afbd4,lon Zakai <alonzakai@gmail.com>, 2017-10-23 09:48:40 -0700, , look signed field load relevant 1235,,
2115,1005b1267f70a5a7cf7a8774af6c12d813464720,lon Zakai <alonzakai@gmail.com>, 2017-10-20 19:38:31 -0700, , emit binary function index comment text format convenience 1232,,
2116,71dc0791361a79e4346eb84ebadf77a324767e32,ark A. Ropper <mark@chavfreezone.me.uk>, 2017-10-20 20:33:27 +0100, , move pointer positioning outside vector access operator avoid msvc complaining range value 1233,,
2117,74d026b9afb7b11bf01639e900a382b32bacfb33,lon Zakai <alonzakai@gmail.com>, 2017-10-20 11:11:30 -0700, , atomics support interpreter optimizer fuzz fix 1227,,
2118,939706d9c4d7584a2a1c2627986f977512490058,lon Zakai <alonzakai@gmail.com>, 2017-10-20 10:28:09 -0700, , avoid returning passrunner 1234 avoid returning passrunner would need careful design copy constructor instead simplify api thing need run pass disallow copy constructor delete copy operator,,
2119,23808ad092d409c1022b552eddae8093160fd37e,lon Zakai <alonzakai@gmail.com>, 2017-10-20 10:01:49 -0700, , use simplify local wasm2asm output horribly verbose los extra inefficient variable similar output flatten rewrite 1229,,
2120,b66518f2300ed1a9c28f983cbbfb377dcb8502a8,acob Gravelle <jgravelle@google.com>, 2017-10-17 14:51:51 -0700, , update trap mode flag 1225,,
2121,dfe92af3e85a7d0e558ffbfaa387ac9f9cf0e8ec,lon Zakai <alonzakai@gmail.com>, 2017-10-17 14:46:27 -0700, , clean importutils make getimport return import consistent similar apis fix ctor evalling handling import incorrect need create fake globals importing globals later late initialized globals import 1226,,
2122,73c04954fa52addb709d7de3f2364ec3082c408b,lon Zakai <alonzakai@gmail.com>, 2017-10-16 12:40:04 -0700, , use type system check something flowed 1224 type system proper unreachable need,,
2123,faaa20b4950351528fd00888040fdd2b14a5a084,lexander MeiÃner <AlexanderMeissner@gmx.net>, 2017-10-16 19:09:42 +0200, , fixed parsefile skipping every line 1223 fixed parsefile skipping every line caused strchr also replaced recordfile parsefile exactly added parsefile process s2wasm.h,,
2124,a8da89653981bb37565981afc69104f918fea64a,lon Zakai <alonzakai@gmail.com>, 2017-10-11 10:13:32 -0700, , fix ssaify bug failed update location value moved around causing zero wrong thing another place ensuing hilarity 1212,,
2125,f0d858b6c2793f7bae00e4c5dc2d0f38fc1e30f8,lon Zakai <alonzakai@gmail.com>, 2017-10-11 10:13:06 -0700, , fix simplify local bug create br_if value dangerous moving code br_if condition value executes 1213,,
2126,69408e62ee1909c09a9a1a87616b3d0f6a8329e5,lon Zakai <alonzakai@gmail.com>, 2017-10-11 10:12:43 -0700, , fix reloop fuzz bug need ensure terminator relooper block 1214,,
2127,d11d8743a74e5f0651c2492454ecd636edc18b2f,lon Zakai <alonzakai@gmail.com>, 2017-10-11 09:14:58 -0700, , remove unneeded outdated test useful bootstrapping much better covered emscripten test suite anyhow 1222,,
2128,110f9bdf13d141253c19fb3c46a4dd07b61232ab,lon Zakai <alonzakai@gmail.com>, 2017-10-10 18:53:39 -0700, , add builder makeglobal nicer global creation 1221,,
2129,76c6883057d1249a626468bea7af4dcfd32e5ae7,lon Zakai <alonzakai@gmail.com>, 2017-10-10 15:54:02 -0700, , fix test breakage colliding landing quickly 1220,,
2130,0d1836f2e96f63906d2f2dc17719a428e45194ca,lon Zakai <alonzakai@gmail.com>, 2017-10-10 10:11:41 -0700, , readme doc fix improvement 1219,,
2131,de9a8687baac9695807042d6ba4e7b47dd7c5fe9,lon Zakai <alonzakai@gmail.com>, 2017-10-10 10:11:31 -0700, , fix dce fuzz bug changed unreachable propagate effect also add set_global support dce 1218,,
2132,58d13aeef288d33fa6634e31985ae6c296d88edb,lon Zakai <alonzakai@gmail.com>, 2017-10-10 10:11:17 -0700, , fuzzer create use globals fuzz program 1217,,
2133,874fc0897484d97cf94c0eb898ca5fabe7a9b34a,lon Zakai <alonzakai@gmail.com>, 2017-10-10 10:10:22 -0700, , fix wasm builder set_global creation must call finalize value may unreachable 1216,,
2134,fcbe7bff9e21e63f8c74a71f167aaf225cca0b79,lon Zakai <alonzakai@gmail.com>, 2017-10-04 16:45:40 -0700, , optimize helper funcs like i32 div created asm2wasm consistently handled regardless whether optimize parallel 1208,,
2135,9f9e9ae0fc94825c7db4edc8a2e6aa1190f39fc7,gravelle-google <jgravelle@google.com>, 2017-10-04 10:14:36 -0700, , add superclass typedef walkerpass simplify override 1211,,
2136,7c491995ea89685f1381bd37227857820dbc0a34,lon Zakai <alonzakai@gmail.com>, 2017-10-03 15:20:42 -0700, , flattening rewrite 1201 rename flatten control flow flatten flattens everything control flow e.g i32.add call call   block set_local temp_x call set_local temp_y call i32.add get_local get_local   local much simpler avoids bunch corner case fuzz bug old one hit optimize later necessary,,
2137,47c37d0c4457ede9f4343abca0d56e2baa7f3d8a,lon Zakai <alonzakai@gmail.com>, 2017-10-03 10:55:35 -0700, , refactor validator api use enums 1209 refactor validator api use enums,,
2138,8283229f6bccdcfa60d7613be10d0f93531fdd34,gravelle-google <jgravelle@google.com>, 2017-10-03 10:30:50 -0700, , add trap mode allow clamp argument asm2wasm s2wasm 1210 add trap mode allow clamp argument asm2wasm s2wasm update asm2wasm script use trap mode throw std instead adding new invalid trapmode type remove legacy asm2wasm trap mode argument,,
2139,1f8d8a53e8fcee0791c11345fd7f328255cfa22c,lon Zakai <alonzakai@gmail.com>, 2017-10-02 13:52:16 -0700, , fast validation 1204 make wasm validation parallel function part make loading validating tank 12mb wasm file 2.3x faster core machine 3.5 1.5 second big speedup loading validating actually validating also noticeable compilation since validate default end faster actually fairly significant build bonus also move code header header,,
2140,a9f91b9774d117a13c231ef0f40861372456878f,gravelle-google <jgravelle@google.com>, 2017-10-02 13:51:55 -0700, , share trap mode asm2wasm s2wasm 1168 extract asm2wasmbuilder trapmode shared floattrapmode extract extract extract asm2wasm test script script test asm2wasm.py match s2wasm.py make iterating asm2wasm slightly faster simplify callsites arg struct combine func adding across i32 i64 support f32 int asm2wasm add pas run pas s2wasm pas take trap context parameter pas fully support non trapping binary ops defer adding function iteration hackily update asm2wasm work deferred function adding rebuild test extract extract add unary conversion trap pas add function pas set s2wasm trap mode command line argument print state testing get asm2wasm using pas instead handling inline also handle f32 int asm2wasm make need floattrapmode caller pas current binary expression directly combine pas unary expr unify move maketrapping function inside make addedfunctions non static remove minor cleanup extract smaller subfunctions emit name switch casing rename is32bit isi64 consistency rename floattrap make trap mode nested enum add comment explaining floattrap non parallel rename addedfunctions precision rename move split float clamp.h pass floattrap cpp use builder instead allocator instantiate trap handling pass via pas manager move pass floattrap.h ast trapping.h add helper function add trap handling pass add trap mode pas test rename floattrap.cpp trapmode.cpp add s2wasm trap mode test force float int conversion signed add test unit.asm.js fix flake8 issue test script update pas description comment extract building function method make generate function top level function add class manage function import addition move ensure maketrapping function outside class scope use add immediately asm2wasm mode remove test added test trapping division would get constant folded correct time changing timing trapping mode test unneeded problematic review feedback add validator .wasm .gitignore add support unsigned float int conversion use opcode directly instead bools update s2wasm clamp test unsigned ftoi,,
2141,28d670ade33ab7a1d091bafee243a2c5ffc93bc9,lon Zakai <alonzakai@gmail.com>, 2017-10-02 13:03:53 -0700, , fix regression left may exist need return curr left change 1207,,
2142,45d88e3ef5f895b2fde77e3588f84d66e67bdd88,lon Zakai <alonzakai@gmail.com>, 2017-10-02 11:12:50 -0700, , fix optimize instruction handling shift zero zero combining added constant 1206,,
2143,2ec15bea0c5b7d4112e06fadcc3a531f303d4a4c,lon Zakai <alonzakai@gmail.com>, 2017-10-02 10:59:28 -0700, , thread fix 1205 use multiple thread torture test parallel anyhow fail create thread use multiple thread,,
2144,ee9d515581998165c0e573d2b5a468c5b361cfcd,lon Zakai <alonzakai@gmail.com>, 2017-09-28 11:07:29 -0700, , optimize wasm reading 1202 optimize wasm reading use set break seen rescan block see break,,
2145,b3d9ad57566c4d30f57626c6a44e2afd664b7459,lon Zakai <alonzakai@gmail.com>, 2017-09-27 16:42:15 -0700,1195, merge pull request 1195 webassembly fuzz fuzzer improvement fuzz fix negative zero comparison,,
2146,d4f7519e64d2246be81b24b8e5fc72c8abccb759,lon Zakai <alonzakai@gmail.com>, 2017-09-27 13:08:24 -0700, , fix equal consts need bitwise equal i.e.,,
2147,27af98deb91d1d64be44cdf12f01833b677fbf34,lon Zakai <alonzakai@gmail.com>, 2017-09-12 13:37:39 -0700, , fuzzing improvement randomize initial memory low chance tiny block decent chance branch back loop top,,
2148,c69253378014ffc451adf916d017d8f21faae77c,lon Zakai <alonzakai@gmail.com>, 2017-09-25 14:36:32 -0700, , fix dce bug updating parent turning node unreachable 1198,,
2149,23d015b159e6805022cfac1797030fbec42aa8d1,lon Zakai <alonzakai@gmail.com>, 2017-09-23 20:50:15 -0700, , wasm2asm fix coercion rotl rotr ctz popcnt call refactor name constant include wasm_ prefix collide constant unprefixed value 1199,,
2150,de54837f0ff631cd8f215a447b15cb3d9d99fdff,homas Lively <7121787+tlively@users.noreply.github.com>, 2017-09-23 21:55:54 -0400, , refactor i64 lowering use raii temp var 1177 refactor i64 lowering use raii temp var always generate trampoline block switch lowering,,
2151,1fb2b02d11e8310883b966c8247adc4b54a8f5b3,homas Lively <7121787+tlively@users.noreply.github.com>, 2017-09-23 21:54:19 -0400, , make localnames map 1189,,
2152,f84fa96a0abb482a392040cf0aeab627345d812d,lon Zakai <alonzakai@gmail.com>, 2017-09-22 14:28:11 -0700, , finalize function body may changed unreachable none bad function return value unreachable none case must add unreachable 1193,,
2153,db66e646df6512d4eb2be344778001c62402e4c5,erek Schuff <dschuff@chromium.org>, 2017-09-22 12:52:35 -0700,58, update text syntax shared memory limit 1197 following webassembly thread e.g memory 256 shared memory shared 256,,
2154,b29158db92c6fdab578b8b550cb965b020901768,eremy Day <jaday@email.sc.edu>, 2017-09-20 12:28:24 -0400, , remove implicit fallthroughs 1194 1196,,
2155,0532093e5856662a11cf66cbf59feaeb3acb9c29,lon Zakai <alonzakai@gmail.com>, 2017-09-18 16:33:06 -0700, , expression appear twice ast 1191,,
2156,8f2f6a13736336ca13d6b4bccb1af6d34f3aae48,ergey Pepyakin <s.pepyakin@gmail.com>, 2017-09-18 23:39:11 +0300, , add missing object build js.sh 1187,,
2157,34eec4675a3f17a7983d5c470850bf1ab33e471e,lon Zakai <alonzakai@gmail.com>, 2017-09-16 10:05:32 -0700, , default waterfall testing 1186,,
2158,9f4e3288c17a48186b959648fedb93b9a226ef9f,ergey Pepyakin <s.pepyakin@gmail.com>, 2017-09-14 19:12:56 +0300, , add missing finalize call api call_indirect 1184,,
2159,5d27b204c39d8adc8f328fbdab1837493804ec71,ergey Pepyakin <s.pepyakin@gmail.com>, 2017-09-13 22:31:31 +0300, , add missing prototype globals binaryen c.h 1183 add missing prototype globals binaryen c.h use int8_t mutable_,,
2160,d669b5f960ad521d0371739bbf225829889b39f3,lon Zakai <alonzakai@gmail.com>, 2017-09-13 10:28:29 -0700, , disambiguate hash usage 1182,,
2161,048bcadbc0fdc9866e70995984813551aa5681ea,lon Zakai <alonzakai@gmail.com>, 2017-09-12 17:12:56 -0700, , avoid new block binary reading writing 1165 emit toplevel block need wasm list context create unnecessary block wasm reading,,
2162,c6729400f68a346c1d51702946bf6026638782a6,lon Zakai <alonzakai@gmail.com>, 2017-09-12 15:09:21 -0700,1168, precompute propagate pas 1179 implement 1172 add variant precompute precompute propagate also doe constant propagation precompute run interpreter expression see fact constant precompute propagate also look graph connection get set local propagates constant value help case noticed 1168 case llvm already important inlining e.g inlining clamping math function new pas run inlining otherwise doe increase compilation time noticeably run everything almost benefit llvm run code refactoring ssa pas get set graph computation used ssa pas precompute propagate,,
2163,40f52f2ca41822e9dc47ff57239cdf299f7e1ce5,erek Schuff <dschuff@chromium.org>, 2017-09-12 13:46:53 -0700, , make several derived class final 1180 recent version clang turn wdelete non virtual dtor warning level fire deleting non final class virtual function non virtual destructor pre standard rule thumb always virtual destructor virtual function final even better since may allow optimization,,
2164,6977feb0f371c31f35ab8b1304c97dc3ac155d92,lon Zakai <alonzakai@gmail.com>, 2017-09-12 11:28:18 -0700, , const hoisting 1176 pas hoist repeating constant local replaces get local reduce binary size also increase gzip size mostly experimentation used default,,
2165,72f72c8b4a005bbd728d7246f87b9d347c2a775f,erek Schuff <dschuff@chromium.org>, 2017-09-11 14:07:56 -0700, , clarify block binaryen readme.md 1178,,
2166,999232d4b634b3af7217835d66689d5f82e8679a,akub Jirutka <jakub@jirutka.cz>, 2017-09-11 20:58:10 +0000, , travis run build stage master release tag 1173 fix 1161 popular project major part build usually triggered pull request think sufficient disable build stage pull request let run master branch release tag imo better run periodically cron,,
2167,13bccf058972660d7d59e68c08c0278c1554a19b,lon Zakai <alonzakai@gmail.com>, 2017-09-11 10:22:41 -0700, , asm2wasm atomics 1171 translate asm.js atomics wasm atomics fix wasm builder atomic load emitting alignment loaded size output size require code node type vaccuum non mentioned node assume optimize support atomics hashing comparing copying,,
2168,9fafcef2c3dfe18b119b11fa527514835a4371ce,lon Zakai <alonzakai@gmail.com>, 2017-09-10 09:29:41 -0700,1175, merge pull request 1175 webassembly fuzz fuzzer improvement fix,,
2169,67133b57486339249f65872b5959873fef390455,lon Zakai <alonzakai@gmail.com>, 2017-09-09 10:01:34 -0700, , code folding must propagate type optimizes something,,
2170,a9bf3a323837c366b7d467b720495d08e46d2e32,am Clegg <sbc@chromium.org>, 2017-09-07 10:24:10 -0700, , refactor check.py seperate function nfc 1158 one could argue separate file seems like good first step,,
2171,d2a401d27ef3592638e0e7689eebed317966334a,erek Schuff <dschuff@chromium.org>, 2017-09-06 14:13:29 -0700, , add support sign extension operator threading proposal 1167 atomic operation added atomic operation keep define atomic version sign extending load atomic zero extending load signext operation used instead,,
2172,192b59a8bc8e5376ca120dc592d5abad7c654230,lon Zakai <alonzakai@gmail.com>, 2017-09-06 10:00:57 -0700, , clean untaken unreachable well unnecessary named stuff validation differentiated reachable unreachable break 1166,,
2173,cec102e94e594a9e74d6e5940a6899168daf6d5f,lon Zakai <alonzakai@gmail.com>, 2017-09-06 09:57:53 -0700, , special constant class fuzzing,,
2174,68b57f6c015af1eaf95b039b0bc2bc3b9efbab4e,lon Zakai <alonzakai@gmail.com>, 2017-09-05 11:33:22 -0700, , arm identical merging may change type forced type,,
2175,3d1c3a3a342d4d22dcda4e45e4f4aae93b464ec8,lon Zakai <alonzakai@gmail.com>, 2017-09-01 16:02:12 -0700, , initial call_indirect support ttf mode,,
2176,c0f21e10a1166829afd34c4fb06366d7430802bb,lon Zakai <alonzakai@gmail.com>, 2017-09-05 19:26:19 -0700, , return structured type rule block 1148 block concrete final element break value even unreachable child keep concrete type mean longe allow silly case block unreachable middle concrete final element block unreachable change block would type final element concrete element one arm make type result even condition unreachable parallel block make type rule switch simpler ignore whether reachable whether dead code affect influence type,,
2177,4f58e1e666cff6f1e61d888279dba42d1be14251,aniel Wirtz <dcode@dcode.io>, 2017-09-05 19:47:15 +0200, , updated build js.sh safeheap pass 1163,,
2178,6de14693110b4f898344ff1cb383caf0d74eb42e,lon Zakai <alonzakai@gmail.com>, 2017-09-01 12:34:03 -0700, , wasm reduce tool 1139 reduce interesting wasm smaller still interesting wasm take arbitrary command run reduces wasm much keeping behavior command fixed used reduce compiler bug arbitrary etc,,
2179,b013f744e3d70effd9be348cbde7fb93f0a16c6a,homas Lively <7121787+tlively@users.noreply.github.com>, 2017-09-01 14:26:01 -0400, , i64 i32 lowering wasm2asm 1134,,
2180,b1e8b1b515b2a1d0264975abc4de39c8044f7195,am Clegg <sbc@chromium.org>, 2017-08-30 17:24:23 -0700, , move test local revision test wasm install 1157 mean test wasm install get redownloaded,,
2181,701c291ade59dd0824c167412746433a4f3d1366,am Clegg <sbc@chromium.org>, 2017-08-30 11:36:09 -0700, , update test torture 1155 update taken directly wasm waterfall http wasm stat.us builder linux build 23620,,
2182,2f78c6492361f42496ea2a6af259c64c078ab083,am Clegg <sbc@chromium.org>, 2017-08-30 11:35:17 -0700, , fix markdown block formatting readme.md 1150,,
2183,a0517dbde4df692e041f4fa42036910b1846ea49,am Clegg <sbc@chromium.org>, 2017-08-29 16:56:56 -0700, , fix locaion wasm merge 1151 also fix rpath lib directory run tree,,
2184,8373d2bd7290893066ea313974425fda8d7e81d7,am Clegg <sbc@chromium.org>, 2017-08-29 10:35:15 -0700, , fix uninitialized member wasm2asmbuilder flag 1152,,
2185,d621116cada789d15c569385ea79a57ba534c08f,lon Zakai <alonzakai@gmail.com>, 2017-08-28 20:12:48 -0700,1154, merge pull request 1154 webassembly fuzz fuzz fix,,
2186,5c2f4ab22367d04753678fbd12d67b4dc2a29010,lon Zakai <alonzakai@gmail.com>, 2017-08-28 15:21:34 -0700, , safe heap pas 1145 add safe heap instrument code check heap load store validity null pointer derefs within range valid sbrk memory alignment used safe_heap emscripten,,
2187,2d9e5a1c60a41e747956880ab199955b8f12d53c,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-28 14:53:00 -0700, , improve fuzzing function unreachable body,,
2188,d199aafed128cdf52de229aba4cf4c6769929e71,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-28 14:36:22 -0700, , fix inlining bug void function unreachable body,,
2189,3c8be1c57c3c30168d795e46a4389ec878156215,lon Zakai <alonzakai@gmail.com>, 2017-08-28 11:26:38 -0700, , fix remove unused bug merging br_ifs unreachable code,,
2190,8c89a7baae740013b038865fc4e290439b91eb6f,lon Zakai <alonzakai@gmail.com>, 2017-08-27 08:18:32 -0700,1147, merge pull request 1147 webassembly betterfuzz fuzzer improvement small fix,,
2191,9592b881bd1d17dfa24cfee5aea31f6f9d8312d5,lon Zakai <alonzakai@gmail.com>, 2017-08-25 13:48:29 -0700, , fix flow value stopping remove unused must remove flow value current state set global state whether flow set later thing,,
2192,ddfa483430c35ce81f05a6497cc68536b594c2b3,lon Zakai <alonzakai@gmail.com>, 2017-08-25 11:33:12 -0700, , avoid trying optimize ifs unreachable condition remove unused dead code anyhow pointless work hard handle type change,,
2193,fe618683f2c8762f8817c7a573095a21751b2ed2,lon Zakai <alonzakai@gmail.com>, 2017-08-25 11:29:46 -0700, , quickly avoid unreachable branching ifs,,
2194,e88e1f1cdfd3807ca4f6cafe84d35083a92eddb1,lon Zakai <alonzakai@gmail.com>, 2017-08-25 10:40:57 -0700, , turn unreachable ifs br_ifs dead anyhow would need special handling emit valid code,,
2195,4367194dc08e981b85effc2127564f53ecbc0af1,lon Zakai <alonzakai@gmail.com>, 2017-08-24 18:53:06 -0700, , set type set_local properly unreachable,,
2196,db3adf6c6a6a34bb23f0a91a7fad568dfa906062,lon Zakai <alonzakai@gmail.com>, 2017-08-19 14:03:37 -0700, , add option run extra command fuzzing wasm opt linux popen etc,,
2197,f3d59ea84e899f2b1cca9c1c7d23c80260b0df04,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-19 08:13:56 -0700, , add chance make get_local maketrivial hang check return etc always return constant may return result computation,,
2198,e0c5e9cd83f2bc27c8f1ca3cc9c6a5029c6641b2,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-19 08:07:49 -0700, , increase fuzz hang limit basically point spec interpreter almost fails,,
2199,e60fcd0ba97ed75440c6f838619455be7a5e90a3,erek Schuff <dschuff@chromium.org>, 2017-08-24 12:43:12 -0700, , add support atomic wait wake operator 1140 according spec http github.com webassembly thread blob master proposal thread overview.md wait wake operator,,
2200,b07fafcebebab82dba46012256edc6445862cfce,aniel Wirtz <dcode@dcode.io>, 2017-08-24 18:31:15 +0200, , initial asm.js output binaryen binaryen.js 1136 added using wasm2asm module emitasmjs binding,,
2201,ac8ee6c9e7c43c80d8fb2c8166fd73f23e212069,lon Zakai <alonzakai@gmail.com>, 2017-08-22 20:41:36 -0700, , fuzzing improvement run execution result instance 1132 run execution result instance side effect memory writes persist run code directly compare fuzz exported function thing opts might remove note result fuzz exec export name,,
2202,cfeddd741f6503457c6c4a5e1741d91eb0e7e08d,lon Zakai <alonzakai@gmail.com>, 2017-08-22 10:27:52 -0700, , inline many 1125 improve inlining pas inline single use function fairly small make useful removing unnecessary global constructor clang add inlining optimizing pas also optimizes inlined new opportunity arise enable default addition also inline small function multiple help lot thing like safe int divide function int divide replaced safe divide trap inlining get rid around half overhead,,
2203,ad8bc65685b19c0c3323dbb0a5cf2b6f709c7b92,lon Zakai <alonzakai@gmail.com>, 2017-08-22 09:47:50 -0700, , ignore unreachable code wasm binary 1122 ignoring unreachable code wasm binary let avoid corner case unstructured code wasm binary poor fit binaryen structured,,
2204,e5e77281ca516b7b802eb6c9b4bc3b39e2a8201e,lon Zakai <alonzakai@gmail.com>, 2017-08-18 13:58:14 -0700, , reorder implicit trap global side effect 1133,,
2205,229764b0d52bce0d0e973c96b9bdb686e4ec1f1e,aniel Wirtz <dcode@dcode.io>, 2017-08-18 18:44:22 +0200, , export start function 998,,
2206,5fafb87a2819cebd94941c77c07ebe067471eb7d,homas Lively <tlively@users.noreply.github.com>, 2017-08-16 15:01:56 -0700, , wasm2asm test generation 1124 translate assert_return invokes asm translate assert_trap test enable wasm2asm test fix wasm2asm translation store update ubuntu nodejs travis free jsprinter buffer use unique_ptr function prevent leak add test assert translation,,
2207,21d06aea04244fa71b5053bd87f2ec6a2ac9d5c2,lon Zakai <alonzakai@gmail.com>, 2017-08-15 14:25:45 -0700, , emit optimal size lebs section subsection function body size 1128 emit optimal size lebs section subsection function body size instead preallocating byte,,
2208,4216894b22e5891e83851d2af42080293e6089e4,lon Zakai <alonzakai@gmail.com>, 2017-08-11 10:53:21 -0700, , new fuzzer 1126 add new method fuzzing translate fuzz mean consider input stream data translate valid wasm module sort like random seed process creates random wasm module using input way explore space valid wasm module quickly make afl fuzz integration easy also add fuzz binary option similar fuzz execution make wasm opt execute code opts also write binary read helping fuzz binary format,,
2209,5295929fd239ea8a760cd2c3f65510da9972c33c,lon Zakai <alonzakai@gmail.com>, 2017-08-10 19:55:28 -0700, , inlining must zero non param local initial zero value may depended 1127,,
2210,4f0bf336e0e04ec349c7524d86ffd2c4066cb644,lon Zakai <alonzakai@gmail.com>, 2017-08-07 15:43:36 -0700, , improve enable inlining pas 966 improve inlining pas inline single use function fairly small make useful removing unnecessary global constructor clang add inlining optimizing pas also optimizes inlined new opportunity arise enable default fix bug run pass properly refactor pre post version run post version incremental optimizing build function appear one one optimize first global stuff done run full optimize copy inlining allowing multiple inlinings function future,,
2211,b93ea39b239052314123d3641df29ff5c5730515,lon Zakai <alonzakai@gmail.com>, 2017-08-07 15:42:17 -0700,1123, merge pull request 1123 webassembly fuzz yet fuzz fix,,
2212,62f6a12c4fa109522229526e9d89969d2fde7399,homas Lively <tlively@users.noreply.github.com>, 2017-08-07 13:42:49 -0700, , wasm2asm i32 arithmetic support 1120 rotation popcnt ctz etc,,
2213,e17202e4d20bf79bd285425bac606a31bf3a8131,lon Zakai <alonzakai@gmail.com>, 2017-08-06 14:00:55 -0700, , properly handle merging block concrete unreachable element middle,,
2214,323e0b489a2b26d144da440d8043189ebbf49db2,lon Zakai <alonzakai@gmail.com>, 2017-08-06 11:19:03 -0700, , handle merging block item unreachable merged would invalid stop unreachable easier better,,
2215,7231e619004414c33b30f4a3dd55ff85c69e1406,lon Zakai <alonzakai@gmail.com>, 2017-08-05 12:06:22 -0700, , fix merge block bug replacing unreachable block concrete final element never reached,,
2216,cc193a49fa612142fdea016ed8fe8a527be7c835,lon Zakai <alonzakai@gmail.com>, 2017-08-05 11:53:48 -0700, , turn untaken br_ifs ifs remove unused,,
2217,077c531131be9404e97e94147fc5c5af9006ef07,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-05 08:08:14 -0700, , fix merge block logic ensure optimize doe change outside type,,
2218,6303389c7540aaa4e52b61c732cb65d04d6585e4,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-04 19:43:20 -0700, , merge block remove unused name type identical branch interchangeable,,
2219,5b9fff4399b959a4af28a6c82e8ab9243898f360,lon Zakai <alonzakai@gmail.com>, 2017-08-03 14:49:41 -0700, , emit unreachable unreachable block context doe end unreachable,,
2220,9149f4cdeee0949e5dab4b0e0e076c73b822cbfc,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-08-05 10:44:12 -0700, , fix reading stacky unreadable code element need drop,,
2221,b9ce58696487fb4961070e322879b3d3e0cfc9d3,lon Zakai <alonzakai@gmail.com>, 2017-08-03 14:15:48 -0700, , move code around drop block block contains unreachables cause type change outside dce run anyhow,,
2222,ffd9a72d28d36915fb173a6d52fbb6e43f7c15db,homas Lively <tlively@users.noreply.github.com>, 2017-08-02 20:20:14 -0700, , get wasm2asm building 1107 get wasm2asm building update cmakelists.txt wasm2asm built default update wasm2asm.h account recent interface change restores jsprinter functionality implement splice array value clean wasm2asm testing print semicolon statement block cleanup semicolon condition arm prettify semicolon emission,,
2223,de15161e110f26212095c5cf4faf2e3668d2531b,lon Zakai <alonzakai@gmail.com>, 2017-08-02 14:47:05 -0700,1119, merge pull request 1119 webassembly fuzz fun fuzz fix,,
2224,6d686bd1a5b3610ad49fd607ae5e49c70410af51,lon Zakai <alonzakai@gmail.com>, 2017-08-01 15:42:24 -0700, , fix one error clz ctz popcount used bit computation,,
2225,114ed43b24d3c74112b922a7469c48c736172833,lon Zakai <alonzakai@gmail.com>, 2017-08-01 10:22:31 -0700, , fix proper wasm emitting untaken br_tables,,
2226,04418d5617f6ab7015c5cf7b905b4775a5219f4b,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-31 14:11:33 -0700, , use effective shift place optimize instruction,,
2227,5a07a930ad51003411b2bc827ea9bf08728ecc5a,lon Zakai <alonzakai@gmail.com>, 2017-08-01 08:06:04 -0700,1116, merge pull request 1116 webassembly fuzz fuzz fix,,
2228,44154e3d0895e2f5688861f0bc8d62af71ee6b6d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-31 15:27:29 -0700, , test update,,
2229,5f2dd574d6ed53acc96443b9cf3f7a6d806986c3,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-31 15:11:11 -0700, , merge remote tracking branch origin master fuzz,,
2230,76751bf1f9df4eb2ee6c216744af9ed1e097132e,lon Zakai <alonzakai@gmail.com>, 2017-07-31 15:10:38 -0700, , polymophic stack support 1117 emit valid wasm binary even corner case unreachable code emit unreachable node push value unreachable type wasm type checking would pushed concrete type conversely hack emulate wasm polymorphic stack mode emptying stack one element element unreachable let pop work returning unreachable element,,
2231,bfdbc0c3f6a835231b218a60ddd6b52f7e9affed,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-31 13:39:46 -0700, , review comment,,
2232,4aa3463a6b98e41070d03ddbe60e689537b02b59,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-31 08:05:26 -0700, , handle squared shift unreachable,,
2233,b69f8a6bfc7963e0c56b10a69603e5dd36de58c3,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-30 16:55:06 -0700, , remove value break value side effect,,
2234,6cdffee098cb891c7309eb372aea63c0baa7a2c5,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-30 11:07:51 -0700, , fix optimizing two shift one number effective shift overflow vali add,,
2235,56e49752b4258b89660825f2970a7e55067d7122,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-29 19:00:37 -0700, , swap element invalidate enough check side effect must check interaction well,,
2236,7a06499ada2f5d0d349731595b3a09a46919c443,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-28 16:26:46 -0700, , fix binary emitting untaken branch also handle reading unreachable stacky code may introduce concrete element non final block positoins,,
2237,db51c2efa3a9c2da064db199792b3bf0de4e850f,lon Zakai <alonzakai@gmail.com>, 2017-07-28 15:45:27 -0700, , refactor effective shift size computation,,
2238,bd7f7ca58a93f438bd278e6ecb13afb685e5ed6e,lon Zakai <alonzakai@gmail.com>, 2017-07-28 15:41:10 -0700, , fix shl shift computation getmaxbits,,
2239,1de12041904d5571ead6e64b5e51a3e26c8cfce1,lon Zakai <alonzakai@gmail.com>, 2017-07-28 14:10:25 -0700, , fix shift computation getmaxbits wasm lower bit matter bit shift,,
2240,1d67ab02aeb71b1a250a44161c8fdb3e97b04210,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-28 12:45:19 -0700, , combine load store offset constant pointer would wrap negative value positive one trapping tricky,,
2241,4d46a7e2c37299d5a9b9d9d6323ce9fca3a1cf3a,lon Zakai <alonzakai@gmail.com>, 2017-07-27 16:29:12 -0700, , fix import type detection call comma operator parent comma coersion would parent coercion result type none 1115,,
2242,203b7f758c34bf38357ec770659713647585538e,lon Zakai <alonzakai@gmail.com>, 2017-07-27 12:59:02 -0700,1114, merge pull request 1114 webassembly fuzz fuzz fix,,
2243,c8218452f1048449dff6c54a3f2d910538fe8f4e,lon Zakai <alonzakai@gmail.com>, 2017-07-26 12:11:33 -0700,1109, fix asm2wasm wasm i64 switch large bit offset 1109 1111,,
2244,96e9398420dd4612bc3f72ad8fedbcbc55e1577a,lon Zakai <alonzakai@gmail.com>, 2017-07-24 13:50:29 -0700, , finalizing block mergeblocks use type need consider type change parent changing forced i32 unreachable might mean parent need become unreachable,,
2245,93dcb15eba5051f36dad86d479935dede6f0b05f,lon Zakai <alonzakai@gmail.com>, 2017-07-22 21:07:03 -0700, , ignore untaken branch determining block type,,
2246,cfe0fa129be2022ba9521bbd9355bd4b0aa1f01d,lon Zakai <alonzakai@gmail.com>, 2017-07-21 11:16:37 -0700, , add api key 1089,,
2247,ab8dbae1d1a27e4de24fd9ee09d45785a414922d,erek Schuff <dschuff@chromium.org>, 2017-07-21 08:46:23 -0700, , optimizer support atomic instruction 1094 teach effectanalyzer reorder atomics wrt memory operation teach effectanalyzer reorder host operation memory operation teach various pass operand atomicrmw atomiccmpxchg factor function mergeblocks,,
2248,da680fdbcb7eaad1c692369c7c826fc02b00c877,lon Zakai <alonzakai@gmail.com>, 2017-07-20 13:33:29 -0700,1105, fix f32 frem asm2wasm 1105 1106,,
2249,9ff9885b5d5d3415bb83a88967709e0c941be16e,uj <jujjyl@gmail.com>, 2017-07-19 23:23:13 +0300, , set stack size mingw match 8mb set visual studio 1103,,
2250,fa5165bb52fae9742ebcbb224ec7907b8d914d21,lon Zakai <alonzakai@gmail.com>, 2017-07-19 11:33:23 -0700, , improve wasmvalidator check unreasonable size even type unreachable 1102,,
2251,0b2122d49a28f199ef7fde247e7e7a14829fa96e,lon Zakai <alonzakai@gmail.com>, 2017-07-18 11:22:08 -0700,1100, merge pull request 1100 webassembly fuzz yet fuzz fix,,
2252,275c5ebafdf2860edb965d322bdad4c3e3717bea,uj <jujjyl@gmail.com>, 2017-07-18 19:41:21 +0300, , fix wasm read_file read correctly sized input string text mode 1088,,
2253,e865f2fa2863b6e91521c059a61a4483769bf5c9,lon Zakai <alonzakai@gmail.com>, 2017-07-18 09:17:57 -0700,1095, merge pull request 1095 webassembly fuzz fuzz fix,,
2254,24accd15fb59d476daaebbbcd492b8a9ee729b2b,lan Mimms <alanmimms@gmail.com>, 2017-07-17 17:18:31 -0700, , fix wrong name help output 1099,,
2255,2daf000f471afdcf21f784f83440bb4bdc1a9de9,lon Zakai <alonzakai@gmail.com>, 2017-07-17 11:16:49 -0700, , fix one assertion optimize instruction,,
2256,557eca7055ba7b0546624006ddac9eed544a2647,lon Zakai <alonzakai@gmail.com>, 2017-07-17 10:44:34 -0700, , fix vacuum bug nop ing whose body cause type change removed,,
2257,d1b598c542d174bd9a55d0edcdfaf27948a140dd,lon Zakai <alonzakai@gmail.com>, 2017-07-17 10:23:42 -0700, , add missing finalization removeunusedbrs change side outer block need finalize first block containing,,
2258,a2e170294c03d5fe0d91e2797d96acdb95b1d37c,lon Zakai <alonzakai@gmail.com>, 2017-07-17 10:23:06 -0700, , fix blockifymerge logic need skip code block merge since fairly specific functionality needed removeunusedbrs move,,
2259,7bc2ed70de137aa6615fcd5d0e1f3e88f008a738,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-14 21:39:26 -0700, , fix merge block logic call call_indirect select need avoid danger moving something past side effect also fix asm2wasm bug call_indirect fixups call target may block need look,,
2260,8b97aba305f21a5040ac5df4a59f41d01815645a,erek Schuff <dschuff@chromium.org>, 2017-07-14 18:47:10 -0700, , validation atomicrmw cmpxchg 1092 also fix case fail argument backwards error lol template also fix template sfinae expression properly get specialized version,,
2261,908a74b7db6c51e6ca450a3f68a5ffe4c011f316,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-14 16:27:17 -0700, , handle unreachable block reachable final element merge block,,
2262,9792a40a8704cbae0ee515126c0b63eb9879d626,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-13 17:55:10 -0700, , removing copy coalesce local tee still need get arm tee remove arm make else,,
2263,2be8a24959a2482a8e95e065a6aa69b8cb8bdc84,aniel Wirtz <dcode@dcode.io>, 2017-07-14 02:12:31 +0200, , added wasm validator.cpp build js.sh 1091,,
2264,00dd3b97455652113fa36cf639315388052f502d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-13 12:00:11 -0700, , fix validation membytes load type unreachable try validate,,
2265,29cf8735b0a0dd1cd6640e27206f2e2ac78503c1,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-13 10:31:28 -0700, , note change removing body vacuum,,
2266,f755250db869781db4206eee8db00c8060ac398b,lon Zakai <alonzakai@gmail.com>, 2017-07-12 11:37:10 -0700, , optimize shift,,
2267,b85e8b51464d0ea1d76d08c2a1b53648e9b7ed9c,lon Zakai <alonzakai@gmail.com>, 2017-07-12 11:16:04 -0700, , zero shift sign extends,,
2268,26b2f331a210bf6de22816e2564516a9f59178d0,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-11 18:55:13 -0700, , handle unreachable condition properly vacuum simplification,,
2269,485166f4a184543fda936b8c458f0f4b74c0368f,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-11 15:00:14 -0700, , fix handling tee without else coalesce local,,
2270,cf6c4cff644b87b4c9688931e2924e2d73b9998f,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-11 14:18:52 -0700, , infinite loop side effect,,
2271,b2c17a105e9fbe86c059793032ee0be676245a8a,lon Zakai <alonzakai@gmail.com>, 2017-07-12 19:27:17 -0700,1087, merge pull request 1087 webassembly fuzz fuzz fix,,
2272,25cbf641c6133d5156e8591072d2705fde92752b,erek Schuff <dschuff@chromium.org>, 2017-07-12 17:41:43 -0700, , refactor validation failure printing validate atomic memory 1090,,
2273,dec4529844e517220d9b336b23afb61aa057eb6a,akub Jirutka <jakub@jirutka.cz>, 2017-07-13 00:48:02 +0200, , set travis run build various architecture using alpine deploy statically linked binary release 1064 travis refactor config use build stage travis add job building various architecture using alpine travis build static binary deploy release,,
2274,e6ea66898b90cd7b468aa5a78589672edf557389,lon Zakai <alonzakai@gmail.com>, 2017-07-11 18:38:32 -0700, , add doc error hint call callimport 1081 add doc error hint call callimport fix binaryen api doc doc,,
2275,6159fb42fcd2dae593ee61ebb7e3e163445ae9d0,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-11 09:45:10 -0700, , fix handling unreachable value merge block,,
2276,e5ebae7cc965f3272e03cf29cc114c638b00eb3a,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 22:02:31 -0700, , fix coalesce local handling set tee local unreachable still need value may thing,,
2277,75162c41b83f67eee967b1d7a1068ba87e17b4eb,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 20:48:39 -0700, , fix block removal remove unused even taken named must preserve,,
2278,b2445bf12b1ba96209b6ebece3806503411f1c94,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 20:31:58 -0700, , changing set tee vice versa need take account value may unreachable,,
2279,4be7ec00157250ca83b61a2e1885645c67c6369c,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 18:48:02 -0700, , handle unary binary node implicit trap vacuum,,
2280,45f8fedce6d432bfe24573ae4edb092202ef7bb9,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 18:01:37 -0700, , fix const finalization use properly finalization precompute,,
2281,90b9b94fdeee3def639006e53be8e282cd7d14f0,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 16:10:58 -0700, , load may trap remove vacuum unless pas option allow,,
2282,5c4c6ba03e1c42cee86e580c09b8c66a6bb1a71c,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 15:43:21 -0700, , properly handle arm removal vacuum,,
2283,987003944456c3d04f74c12067ac950feca1a81e,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-10 11:22:19 -0700, , add option seek named break taken break refactor header make practical,,
2284,51f26947d7fe801224115abdd601d738eea8ee8d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-11 10:43:20 -0700, , refactor improve break validation break name unique need stack break target must exist even actually taken,,
2285,18e096c4940f51df50d5f7a4e9fff03cc2f3beaf,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-09 22:02:45 -0700, , finalize new drop simplifylocals,,
2286,ee7538a3e912b20bf295cdfce81a531fafb0bb7c,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-07-09 20:39:12 -0700, , remove unreachable node vaccuum alter type dce doe anyhow let thing,,
2287,812943d51bac4767c4b7f749f17c26277e27f796,erek Schuff <dschuff@chromium.org>, 2017-07-10 16:08:54 -0700, , factor wasm validator cpp file 1086 also small cleanup cmake library,,
2288,f56e70d7e8a120fdd8c97f639d6f60e3e1780397,erek Schuff <dschuff@chromium.org>, 2017-07-10 13:58:29 -0700,1084, fix visitor stub traversal template 1084 making valid mean derived implementation need implement fall back one template,,
2289,bcb29e59c92347eebcd138034a4f4c06d042670a,erek Schuff <dschuff@chromium.org>, 2017-07-10 09:47:21 -0700, , add parsing printing binary atomic cmpxchg 1083,,
2290,4995132cfaf575e430a7d0e95257b677286171c3,erek Schuff <dschuff@chromium.org>, 2017-07-06 22:36:38 -0700, , add parsing binary support atomicrmw instruction wasm thread proposal 1082 also leave stub valid visitatomicrmw visitor template visitor need implement function yet,,
2291,cd2a431004aa2e165722ff0b85aeece5b32da140,lon Zakai <alonzakai@gmail.com>, 2017-07-05 15:43:43 -0700, , show clear error null inline string binary format 1068 show clear error null inline string support general seen practice technically valid wasm binary format reading,,
2292,2d289c32cc66c8c289f0b5285d26d4c4240c5ecd,aniel Wirtz <dcode@dcode.io>, 2017-07-05 22:28:44 +0200, , unified module loader support binaryen.js 1074 unified module loader support binaryen.js recompiled binaryen.js wasm.js,,
2293,d1ccc3d33adb191e6728cd136ef6596d98e2a716,erek Schuff <dschuff@chromium.org>, 2017-06-30 13:28:42 -0700, , use sanitizer runtime print pretty stack trace unreachable 1079 even better debugging support,,
2294,e488da5adbef2613c08fe205db5b79b1765a4af3,lon Zakai <alonzakai@gmail.com>, 2017-06-28 22:05:05 -0700, , code folding 1076 add pas fold code i.e merges possible see detail comment pas implementation cpp enabled default seems risky enable anywhere else doe add branch likely predictable one maybe slowdown still risk code size number wasm backend 196331 binaryen 182598 binaryen folding 181943 asm2wasm 172463 asm2wasm folding 168774 reduces wasm backend output additional 0.5 could mainly wasm backend already code folding whereas asm2wasm output folding save 0.5 improvement wasm backend output might fold type code llvm fold nested control flow particular,,
2295,e2c08d42ab0ffc05d980ae2d34fee0e77b201134,erek Schuff <dschuff@chromium.org>, 2017-06-28 12:05:27 -0700, , add atomic load store 1077 add wast binary support atomic load store currently generated mean parsing wast binary file always generates non atomic access optimization yet made aware atomics certainly ready used yet,,
2296,14bcc443282146cb85ef2798c36fcb2fe6fa74fa,gravelle-google <jgravelle@google.com>, 2017-06-28 09:53:37 -0700, , grow wasm 1073 grow wasm stackalloc align properly update test,,
2297,21e08eeef1ccc489cd06495e4370e1dffccfe088,erek Schuff <dschuff@chromium.org>, 2017-06-27 14:24:21 -0700, , add shared memory 1069 begin implement wasm threading proposal http github.com webassembly thread blob master proposal thread overview.md shared memory attribute wast binary support,,
2298,bf37733de319b5e0f0b6b0205c1745c5214fea1e,erek Schuff <dschuff@chromium.org>, 2017-06-27 13:51:39 -0700, , fix printing minifier test 1071 using wasm shell instead wasm opt print emitting error empty output also mean min.wast test input get updated along spec fixed well,,
2299,bc46556496b8086941076ff61bfa481344c1f0d1,lon Zakai <alonzakai@gmail.com>, 2017-06-22 11:13:32 -0700, , consistently handle possible trap case 1062 consistently handle possible trap asm.js ffi result consistently handle possible trap i64 float conversion,,
2300,17f3d395774195c8d8595b9417f4856b5c95be52,akub Jirutka <jakub@jirutka.cz>, 2017-06-22 20:12:06 +0200,1059, change char auto avoid type limit warn arch 1066 fix 1059,,
2301,4f21c0f8c8c891dab0ce9302ae0a9ea0be6925d8,am Clegg <sbc@chromium.org>, 2017-06-22 09:10:44 -0700, , revert update known failure running s2wasm result wasm shell 1057 1063 reverts commit,,
2302,722e6a1893b7d662e536da206835821b2096c0ee,am Clegg <sbc@chromium.org>, 2017-06-20 11:17:07 -0700, , update known failure running s2wasm result wasm shell 1057 two new failure calling aboirt date back lkgr build http wasm stat.us builder linux build 20068 hard say started failing,,
2303,7179572c7fe842df688bcf6b2a1c08e7623ab284,lon Zakai <alonzakai@gmail.com>, 2017-06-14 22:05:55 -0700, , untee pas 1053,,
2304,8aa91ecb38cc7beaec1f56982e25bb2833cbab39,lon Zakai <alonzakai@gmail.com>, 2017-06-13 21:04:50 -0700, , expression parsing api binaryen.js 1050 add api binaryen.js support parsing expression update build test,,
2305,b5b40c9ab0c35ed74e97a6491e15651382091b2e,lon Zakai <alonzakai@gmail.com>, 2017-06-13 16:05:01 -0700, , ssa pas 1049 add ssa pas ensures single assign local except merged local ensure exactly single assign one path leading use also add pas useful debugging local similar local fix pickloadsigns bug tee ignored noticed ran flatter output default ssa pas uncovered bug,,
2306,61b409bc845f385f1d7ea7ac81d1649b63435828,lon Zakai <alonzakai@gmail.com>, 2017-06-12 18:00:18 -0700, , fix interpreted code wasm.js 1043 fix interpreted code wasm.js result none must return empty literal interpreter asserts update build,,
2307,68dc2eddc24844c7582cafa85afeb4023a47888f,am Clegg <sbc@chromium.org>, 2017-06-12 16:50:28 -0700, , support new result syntax loop block 1047 support syntax format input since old spec test still need parsable,,
2308,93c65f98b7a9b0977578dbf55778529efec646f1,lon Zakai <alonzakai@gmail.com>, 2017-06-12 16:04:20 -0700, , optimize merge duplicate function type 1041,,
2309,d1448e7903ed175eca23a3867b348bad42d36271,am Clegg <sbc@chromium.org>, 2017-06-12 16:00:35 -0700, , add flag cmake_c_flags 1052 noticed setting clang getting cmake warning building dummy.c error invalid argument std allowed objc,,
2310,ec76c8c1d7bf28e025770eb3a84d5ee6c7040d82,am Clegg <sbc@chromium.org>, 2017-06-12 14:43:54 -0700, , log callimport fatal error cerr buffered 1036 use fatal rather stdout report callimport error without write stdout lost since following line abort,,
2311,3b81197bd37484a43921076f6592950734d4f3f4,am Clegg <sbc@chromium.org>, 2017-06-11 16:45:59 -0700,1046, merge pull request 1046 webassembly inf_symbol output inf inf rather infinity infinity,,
2312,e82a9c4602a42c674155594e73595488bc5b9720,am Clegg <sbc@chromium.org>, 2017-06-09 20:28:31 -0700,1038, merge pull request 1038 webassembly fix path wasm ctor eval binary used test code,,
2313,07b104d9aefe4ccaf3a6452587cffde8232f783b,am Clegg <sbc@chromium.org>, 2017-06-09 19:23:28 -0700, , update test,,
2314,22e06c81bbf5c6f717a1e4873725f9cc466dfbfc,am Clegg <sbc@chromium.org>, 2017-06-09 18:55:37 -0700, , output inf inf rather infinity infinity wast2wasm wes recently updated support former http github.com webassembly wabt pull 482,,
2315,314a97687fc0acc7d5b9fa9d58447dc54cf09288,am Clegg <sbc@chromium.org>, 2017-06-02 14:26:15 -0700, , fix path wasm ctor eval binary used test code,,
2316,df58435d385ddf49c501eafd4e324ebe0caa8cbb,lon Zakai <alonzakai@gmail.com>, 2017-06-07 13:38:53 -0700, , api fix 1042 fix mutex usage api minor cleanup around update testcase forgotten updated,,
2317,2c220f5cebd915447e786f0b365b0bac1e2f719f,aniel Wirtz <dcode@dcode.io>, 2017-06-07 20:28:08 +0200,1029, update binaryen binaryen.js fix 1028 fix 1029 1030 add global variable support addglobal getglobal setglobal host operation currentmemory growmemory utility function removeimport removeexport latter scheduled removal better alternative place introduces additional argument specify result type binaryenblock effectively breaking api retaining previous behaviour introducing type purpose additionally enables compilation exception support build js.sh exception thrown caught optimizing endless loop intentionally resulting unreachable opcode affected test case updated accordingly,,
2318,3f0db5a7aafaaa4de713ff3ba3c3bbeb59fe566e,gravelle-google <jgravelle@google.com>, 2017-06-05 09:34:15 -0700, , s2wasm runtime funcs 1027 generate stacksave function s2wasm generate stackalloc s2wasm generate stackrestore s2wasm update dot_s test runtime function add s2wasm check exporting runtime function fix flake8 s2wasm.py rename wasmbuilder builder,,
2319,4eb81f6cf14b02e77f84f6a5a89d926d4eac535f,lon Zakai <alonzakai@gmail.com>, 2017-06-02 11:15:04 -0700, , validate returned value case even function return none still return value etc update spec test remove stacky test fit new validation rule 1034,,
2320,6611f548cc1e6b373693cde09e9a7379659e8832,lon Zakai <alonzakai@gmail.com>, 2017-06-01 18:45:26 -0700,1033, merge pull request 1033 webassembly fuzz2 misc fuzz fix,,
2321,bd001c187b90a570ce8babaad83af3b420f48eb5,lon Zakai <alonzakai@gmail.com>, 2017-06-01 17:24:57 -0700, , clean unnecessary spacing,,
2322,89cb24ae1f91132315479475c70a1224a224aab6,lon Zakai <alonzakai@gmail.com>, 2017-06-01 17:24:12 -0700, , use atoll string parsing,,
2323,0db29f6e05f03800b05b4778c118818149a193f9,lon Zakai <alonzakai@gmail.com>, 2017-06-01 17:23:01 -0700, , refactor expr parsing code remove duplication unnecessary thing,,
2324,f47d054dcc34dd709f36716c9fab07087db829e1,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-28 13:14:33 -0700, , remove unneeded code interpreter,,
2325,ed21d9ce96f51851a4fa357804f58972f4b66284,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-28 11:26:58 -0700, , error select side concrete different,,
2326,9b3594b4c704d8562b583da7f27711373ff17f3c,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-31 10:50:16 -0700, , fix fuzz exec catching trap occur init call,,
2327,fd71c67747c3a85db9670a0d558670c4cb124c91,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-30 19:55:40 -0700, , handle range memory size value expr parsing,,
2328,1c7e82a4c6035d9ab52d892065bfff709a4424f8,lon Zakai <alonzakai@gmail.com>, 2017-05-30 14:20:57 -0700, , handle range break offset parsing,,
2329,08849db00cca62b3886458665b0bf2952f42a9d5,lon Zakai <alonzakai@gmail.com>, 2017-05-30 14:19:58 -0700, , verify expr parsing alignment,,
2330,2ce31515cbb0953344dd5d67cfadb718a9abc8d8,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 21:55:51 -0700, , validate memory table address value expr parsing,,
2331,4cb970fa052d5f2f5d29de60f612dc1e22fb81ee,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 20:08:48 -0700, , trap bad result type shell interface calltable,,
2332,b32e1a966681e5d480d2beb81310a4c8bf65ecdb,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 18:45:46 -0700, , handle empty stack sourcetounique,,
2333,1a5dffbba9c247786ccfe4dd0a510d4e0f156595,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 17:01:02 -0700, , host parsing error handling,,
2334,a2822077c5f92a11e02fba2aba83495254027a31,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 16:41:18 -0700, , handle duplicate function expr parsing,,
2335,f53de1118e63f091494a8b106f6fe8abbd3f07ae,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 16:31:18 -0700, , throw parse error,,
2336,a13a4ea6d71d2bd06bc906ab5d26f3323c8d3cf6,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 14:11:22 -0700, , handle duplicate function type expr parsing,,
2337,989c5295deebe71e4bf80e6cc5ae4f334134f9ea,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 13:56:25 -0700, , handle duplicate import globals expr parsing,,
2338,7438fbd5cb4d882584f405ae37e726fd14928f4d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 13:52:42 -0700, , handle parse error function declaration mixed import inside,,
2339,18e83cb152447a07fc0b3fe9c16b2b8c60aab328,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 13:49:32 -0700, , expr parsing handle empty switch,,
2340,e0166ea8978928436813a3cf7d3cee73961baa7a,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 12:29:47 -0700, , harden parsing.h,,
2341,b29b88ac31f552dae5b2976f39fb6f08f92b5649,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-29 12:10:38 -0700, , harden expr parsing,,
2342,a5e32dfc7c3cd2899739298d80a2e707cc025bb2,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-27 12:48:34 -0700, , fix call depth detection wasm opt interpreting,,
2343,61f0890c258753dd08afeb24ec822e2f6f99d794,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-27 12:48:12 -0700, , fix wasm opt,,
2344,4f33690ae906622adcf06f2c4b1f3436da4c3448,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-27 10:38:18 -0700, , handle wrong number function provided binary format,,
2345,adbb5e5c4469d720c4804d5825719cf57b9f18c8,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-25 10:43:57 -0700, , extra pas debug validation assume always function error may global init,,
2346,0dc07eaa7db35cf65edbbccebe5c89b995613745,ury Delendik <ydelendik@mozilla.com>, 2017-06-01 14:53:42 -0500, , exporting importing debug location information .wast .asm.js format 1017 extends wasm wasm dis s2wasm consume debug location export source map asm2wasm,,
2347,fcbe14a64d082117d7aab9bbf479e941964cd0de,lon Zakai <alonzakai@gmail.com>, 2017-05-24 16:38:08 -0700, , simplify reloop testcase,,
2348,c977ef7266b13a16d6abe26a38bd9098a02360ac,lon Zakai <alonzakai@gmail.com>, 2017-05-24 13:10:53 -0700, , refactor optimization opts 1023 refactor optimization opts helper code class,,
2349,dd621a6c6cf94ea7f371181d8eb7a80ef2b2f0f1,lon Zakai <alonzakai@gmail.com>, 2017-05-24 13:10:09 -0700, , careful deleting file testing binaryen method file may exist error want 1024,,
2350,20e127088a39342c65c2af1e8e860beca8fc070b,lon Zakai <alonzakai@gmail.com>, 2017-05-22 18:21:10 -0700, , fuzz fix 1021 validate memory table segment value fit initial range validate select condition i32,,
2351,21cb9e8fa9f12680df0a25d969c935c79b388d3e,lon Zakai <alonzakai@gmail.com>, 2017-05-21 08:07:56 -0700,1019, merge pull request 1019 webassembly fuzz fuzz bug fix,,
2352,026accbe55dde6b9d769292195c3ad1ac0a3b8b0,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-20 21:13:52 -0700, , add fuzz exec option wasm opt possible executes result optimization run checking change used fuzzing,,
2353,2f3bcb914b55f469426418fed1d85e00d0e4db1b,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-20 14:38:23 -0700, , relooper improvement,,
2354,1462c0dbfa9980481058e17d2aac317420e45acc,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-20 11:55:30 -0700, , use typeupdater vacuum,,
2355,9e0958982d2044949746c2d8290dbc0368546ebf,lon Zakai <alonzakai@gmail.com>, 2017-05-20 10:50:02 -0700, , afl fuzz bug fix 1018 value flow without else never return value check pas test pas debug mode add missing finalization binary reading,,
2356,2ddb7cb1f45cf9aeef90ec5c8000a2d279f0302b,lon Zakai <alonzakai@gmail.com>, 2017-05-18 14:47:27 -0700,1014, address review feedback 1014 1016 address review feedback 1014,,
2357,a5416d2a10490602beb49e5a356828111d229720,lon Zakai <alonzakai@gmail.com>, 2017-05-18 12:18:12 -0700, , optimize dceing block known exist child 1015,,
2358,9c6b8e0f626ade30cee113294019edbdbf29dd36,lon Zakai <alonzakai@gmail.com>, 2017-05-18 10:47:23 -0700, , validate finalization 1014 validate type properly finalized pas debug mode env var check pas run type node equal proper type finalizing i.e. fully recomputing type fix many fuzz bug found particular fix dce bug type change fully updated code removal add new typeupdater helper class let pas update type efficiently helper tracking deps block branch etc. updating propagating type change necessary,,
2359,bb1c44a3f975bf8fb72216b9c04bcd34e31bd815,lon Zakai <alonzakai@gmail.com>, 2017-05-17 11:29:11 -0700, , optimize select case value identical 1013,,
2360,443cfe929d094e34d8d84270965c738743d06585,lon Zakai <alonzakai@gmail.com>, 2017-05-16 18:27:46 -0700, , reloop pas 1009 add pas convert cfg run relooper generates wasm depends flatten control flow run main goal help code generator asm2wasm already receives relooped code fastcomp,,
2361,6331e094380bc538cc7dcd5a716968b764939f81,lon Zakai <alonzakai@gmail.com>, 2017-05-16 16:35:12 -0700, , parallelize istring creation 1008 parallelize istring creation thread local set global set guarded mutex time new string show thread added thread set accessing global set lock first mean lock per new string per thread leak string istring store since create name parallel thread safe manner need pre create name,,
2362,77802a63e5814bcde5ac9af3f4694507d8bae9e9,lon Zakai <alonzakai@gmail.com>, 2017-05-10 20:49:16 -0700,1007, merge pull request 1007 webassembly misc minor remove unused improvement,,
2363,b3c97a9d6e9c0858c7a021c6437a4f38ceb7a156,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-10 14:55:34 -0700, , merge block remove unused,,
2364,a42f2247e0f4ddd7c4560a9d466f65ee88753bd7,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-10 14:40:42 -0700, , allow value flow loop simplify unnecessary complexity pas well,,
2365,6efa4a97b2c643bf35756bb6e989b90d6b3e44bc,lon Zakai <alonzakai@gmail.com>, 2017-05-10 14:38:20 -0700, , flatten control flow pas 999 pas flattens control flow order achieve property control flow structure block loop control flow operation br_if br_table return unreachable may block child loop body true false i.e. nested inside i32.add drop call condition etc disallow block loop return value i.e. use control flow pas around value result expression contain control flow overall control flow simpler structured flat make thing like relooping wasm code much easier run cfg flattened,,
2366,dbe3384034e12909694c554149a1fb536fbece21,lon Zakai <alonzakai@gmail.com>, 2017-05-09 18:10:18 -0700, , asm2wasm properly infer return type call inside sequence 1006,,
2367,647271a97ac534320ef5477367d1eb511afdebd5,lon Zakai <alonzakai@gmail.com>, 2017-05-09 16:04:30 -0700, , fix autodrop properly set block type unreachable easily happen autodrop handling 1005,,
2368,64aa81e0e9655cf16e3af65e1bbe98e7fc6cf974,lon Zakai <alonzakai@gmail.com>, 2017-05-09 09:36:45 -0700, , unreachable typing fix 1004 fix type drop set_local set_global load etc operand unreachable node support binary test properly test pass fix unreachable typing block name unreachable child fix continue emitting asm2wasm properly handle emitting unreachable load,,
2369,b856925f6c25df22a0901d8f9e24e4247b4acc18,lon Zakai <alonzakai@gmail.com>, 2017-05-08 14:05:22 -0700, , text format parsing fix 1002,,
2370,c72d10b7ffbc3083cf52de001407f89935422112,lon Zakai <alonzakai@gmail.com>, 2017-05-08 14:05:05 -0700, , fix afl fuzz bug precompute alters remove condition doe properly modify type 1000,,
2371,0b8acfc0139652d1c0f284c7650812a309574586,lon Zakai <alonzakai@gmail.com>, 2017-05-05 09:42:31 -0700, , ctor eval fix 996 fix wasm ctor eval need look stacktop etc import may named build pack memory ctor evalling since merge efficient useful opts ctor evalling clean thing,,
2372,7ba0e4e55dc4cced9de62ef8c76c4638c24f3136,am Clegg <sbc@chromium.org>, 2017-05-04 13:29:45 -0700, , make header guard consistent 997,,
2373,5af21d6692c130a69af6bc96e74bed9717e4d4a3,lon Zakai <alonzakai@gmail.com>, 2017-05-04 13:28:58 -0700, , optimize duplication check binary format reading 995,,
2374,d0f4e932110812a35cfee9d213e9cd0ce610011a,lon Zakai <alonzakai@gmail.com>, 2017-05-03 20:57:37 -0700, , make function name duplicate testing handle case function named colliding others original name 994,,
2375,b6526bbfeb12a793654f918d142ba07852df69af,lon Zakai <alonzakai@gmail.com>, 2017-05-03 11:29:04 -0700,993, merge pull request 993 webassembly dce type make use unreachable type consistent,,
2376,a8f493f24d41295b63c6834fe8efb4996370fee5,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-02 14:36:56 -0700, , fix unreachable typing node reached e.g. binary either side unreachable unreachable make usage unreachable type consistent,,
2377,d0df9588b9adb5c9000d008c8cb739dd3289e68d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-05-02 14:02:16 -0700, , creating block dce make sure type transformation outside might care,,
2378,e10a6e22921889970ceb6e1fb76e786bc66d79d7,lon Zakai <alonzakai@gmail.com>, 2017-05-02 13:47:31 -0700, , disallow empty block type return type must content make s2wasm avoid outputting well 992,,
2379,5de55af88eaac818f86eaaec3f686eaede01397e,lon Zakai <alonzakai@gmail.com>, 2017-05-02 13:46:53 -0700, , improve dce handle case nested unreachable code 989 improve dce handle case nested unreachable code particular child unreachable type actual unreachable node e.g case need verify block loop handle unreachable switch condition dce handle dce condition unreachable host argument handle dce block i32 etc actually unreachable,,
2380,1f1018564c472b75335bf4bddbf65cfebb226fb0,lon Zakai <alonzakai@gmail.com>, 2017-05-02 13:46:10 -0700, , validation fix issue noticed afl 988 properly validate block ending block value must last element none fully validate input type binary expression validate i32.eqz i64.eqz carefully condition must i32,,
2381,7addcae1ea9a09b8c82e0ad660323a42d6535baa,lon Zakai <alonzakai@gmail.com>, 2017-05-02 13:45:37 -0700, , parsing fix 990 properly catch bunch possible parse error found afl fuzz clean wasm interpreter use instead abort detect duplicate name function name section detect duplicate export name,,
2382,6ae56e73d0eb3a5769af3920a2e75e0a910777bb,oel Martin <github@martintribe.org>, 2017-05-01 17:55:02 -0500, , ffi opt disable ffi mangling 984 always use bin path update script test shared.py add wasm_merge relative build directory update use variable bin path update check.py use wasm merge path missing allows check.py run source directory using built binary different location legalize javascript ffi disables ffi mangling web platform call import wrapped convert i64 i32 f32 f64 likewise call export inverse wrapping change provides option disable wrapping use original type call includes test test test make sure neither f32 f64 i64 i32 type mangling happening legalize javascript ffi specified fully disable ffi mangling using emscripten fastcomp ffi mangling must also disabled using emscripten legalize javascript ffi flag,,
2383,b6d42e0c28460667d9e9c992833be668d0897362,lon Zakai <alonzakai@gmail.com>, 2017-05-01 15:11:08 -0700, , handle drop arm unreachable possible since wasm added type mean i32 even arm unreachable etc 991,,
2384,5bd7b2869f9ec664fd3e8746c1d469a04566a548,ichael Bebenita <mbebenita@gmail.com>, 2017-04-29 13:17:31 -0700, , add pas instrument load store 959 add pas instrument load store simplify instrumentation document,,
2385,a88d9b83a4629f4bf4c3b210b07d11d2396c594d,lon Zakai <alonzakai@gmail.com>, 2017-04-28 14:34:25 -0700, , ctor evaller 982 add wasm ctor eval evaluates function compile time typically static constructor function applies effect memory saving work startup encounter something evaluate compile time interpreter stop similar ctor_evaller.py emscripten asm.js,,
2386,5d4f9eb82226acc0fdb5e2dea1a04e17c340c371,lon Zakai <alonzakai@gmail.com>, 2017-04-28 10:48:27 -0700, , preserve debug info optimizer 981 add debuginfo option pass use keep debug info alive optimization need add fib testcase debug info preserving debug info move code around call import debug info intrinsics remain stationary improve wasm module building handling single threaded case create worker efficient also nicer debugging process debug info precise way reordering node comment node remove unreachable hack debug info longer needed since reorder make sure finalize block reorder,,
2387,a0b162d13c7e8d5df1f1b6e33efd4d9e3f699aa9,-Plus-Time <hydrogenplustime@gmail.com>, 2017-04-25 04:52:09 +1000, , fixed issue 965 per binji wabt fix 978 fixed issue 965 per binji wabt fix add platform specific build option fix building arm added logging platform specific flag,,
2388,b16768ec9b72d075ae2e36cc85aa216fdf4fd354,lon Zakai <alonzakai@gmail.com>, 2017-04-19 19:18:30 -0700, , update wasm.js binaryen.js 977 update wasm.js binaryen.js update test output new name section,,
2389,943715f274088fe748249c1b62399f3cd2e704d0,ink Saville <wink@saville.com>, 2017-04-19 13:56:27 -0700, , fix typo finalize table base short name ftb 972,,
2390,b5ea3ad86bb22f17c5ea40d8896c4137c0b0c954,erek Schuff <dschuff@chromium.org>, 2017-04-19 11:38:05 -0700, , use trusty instead defaut precise travis bot 973,,
2391,c945f3be7732e77402d696389482b290be7626cd,lon Zakai <alonzakai@gmail.com>, 2017-04-18 17:27:32 -0700,976, merge pull request 976 webassembly fix f2u fix asm2wasm unsigned float int,,
2392,a9b1d78072bd1875d926cfb0ae51a6eb4dc49b4e,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-04-18 12:58:57 -0700, , test interpreter trap mode try value trap recently changed default trap mode emscripten make change necessary,,
2393,12e8c5c20bf9f7d1e5fd85a56c722adf786b5bab,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-04-18 11:55:02 -0700, , handle unsigned float int properly asm2wasm,,
2394,e1bfd0c5851122762d54d0f578f049e7005bde86,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-04-18 11:48:15 -0700, , add test f64 int signed unsigned,,
2395,0dc8efbf7f5ac474fadff934eb78cd5f8551d0bb,lon Zakai <alonzakai@gmail.com>, 2017-04-18 11:54:32 -0700, , fix bustage 975 support wasm opt make easier upgrade binary bustage upgrade binary test merge new name section format,,
2396,0c850464aa7f6466dba6bf975bf40f14c9d6d55e,lon Zakai <alonzakai@gmail.com>, 2017-04-17 17:31:41 -0700, , fix s2wasm.py hanging indent 969,,
2397,2e210c1fca804a4ec86bef8855f819747d8bd7ca,lon Zakai <alonzakai@gmail.com>, 2017-04-17 13:26:33 -0700, , wasm merge tool 919 wasm merge tool combine two wasm file larger one handling collision aware dynamic linking convention doe full static linking may eventually,,
2398,ec66e273e350c3d48df0ccaaf73c53b14485848f,erek Schuff <dschuff@chromium.org>, 2017-04-13 15:12:48 -0700, , replace text annotation explicit file line debug info 967 rather storing debug info text annotation store explicit file line information make easier experiment outputting serialization representation e.g source map allow outputting debug info binary well,,
2399,57a2bb96c7b8a98433446828aca845a9e9be8c3d,ipcet <pipcet@users.noreply.github.com>, 2017-04-13 15:49:52 +0000, , extensible name section 933 see http github.com webassembly binaryen issue 914 extensible name section support read function name api unused mem.txt change expected size match new name section check subsection size match print warning unknown name subsection including local section,,
2400,5fb669ac8cca51baff8b3a6478d6fd3ef92a7c97,ax Klein <max.kleinleibold@gmail.com>, 2017-04-12 22:15:31 +0200, , s2wasm add command line option importing memory 963 option allows import linear memory code instead exporting emscripten glue doe often emscripten glue needed option affect memory code necessary importing memory basically already exists nothing except command line option added,,
2401,0f3102d13617e70b598e7d82f12684d8fa01969b,akub Jirutka <jakub@jirutka.cz>, 2017-04-12 19:21:02 +0200,951, fix install location per fhs allow customize 958 fix install location per fhs allow customize include built cmake module gnuinstalldirs defines customizable cmake_install_ variable common default per fhs new structure installed usr  usr bin asm2wasm s2wasm wasm wasm dis wasm opt wasm shell include binaryen c.h lib64 libbinaryen.so share binaryen binaryen.js wasm.js src  binaryen.idl binaryen.js extended.js binaryen.js post.js binaryen.js pre.js see http cmake.org cmake help v2.8.7 cmake.html module gnuinstalldirs information used variable fix 951,,
2402,4d452bd81adbd18ef793ab1a02f28c15abc080d3,arco Trivellato <marcot@unity3d.com>, 2017-04-11 21:04:13 +0100, , fix asm2wasm stack overflow window 962 fix asm2wasm stack overflow window set stack size 8mb consistency linux mac,,
2403,6d617838304dd753bd4eea3b1bc1d38f467d8d37,gravelle-google <jgravelle@google.com>, 2017-04-07 11:35:44 -0700, , iterate removed erased function 961,,
2404,114e4cec95f6b0d1aafd9d7a976b0fb2c0fddc36,orris Hafner <mmha@users.noreply.github.com>, 2017-03-29 19:20:25 +0200, , fix build gcc 957 add missing functional include put fallthrough comment closing bracket compiler doe emit implicit fallthrough warning,,
2405,f1c992f946438ba8785c418e769ee024606fdde0,lon Zakai <alonzakai@gmail.com>, 2017-03-24 15:45:31 -0700, , new binaryen.js 922 new binaryen.js implementation based api underneath friendly api top see doc doc api detail,,
2406,7b71bb6b0d3966ce42b631d433c772e24d6e68be,lon Zakai <alonzakai@gmail.com>, 2017-03-21 18:25:18 -0700, , fix comparison sign extends weird constant 956 fix sign ext constant constant never equal effective sign bit upper bit set sign ext would emit,,
2407,ee501dfb427e675adee7790a6dbc7e90f9f5a4ca,lon Zakai <alonzakai@gmail.com>, 2017-03-16 14:12:44 -0700, , add pas log execution trace via instrumenting code 950,,
2408,5079b89949d4c5c5c7b6d29658d058db459be9e6,gravelle-google <jgravelle@google.com>, 2017-03-16 13:57:26 -0700, , skip .size directive follow .import_global directive 949,,
2409,a407b989ecc0c57ed4862ceaaa25acb0a41af63c,lon Zakai <alonzakai@gmail.com>, 2017-03-14 14:06:36 -0700, , fix emitting unreachable ifs 944,,
2410,c1e18d8aded2b86cfd8fb86886ad74cee2f14535,lon Zakai <alonzakai@gmail.com>, 2017-03-13 16:48:38 -0700, , finalize interim ifs relooper handling issue 940,,
2411,62e9f5d881e2d7e7f9f5da845ed2dbc176bc0bc5,gravelle-google <jgravelle@google.com>, 2017-03-10 13:10:17 -0800, , wasm cpp 926 move wasmtype function implementation wasm.cpp move literal method wasm.cpp reorder wasm.cpp shared constant back top move expression function wasm.cpp finish moving thing wasm.cpp split literal .cpp also factor common wasm type module remove unneeded transitive includes wasm.h add comment try check method rename tryx checkx method getxornull add missing include fix appveyor build breakage appveyor,,
2412,d54c03e99f9a43bde1b6cec94f05b0af412d0e4f,lon Zakai <alonzakai@gmail.com>, 2017-03-10 10:44:37 -0800, ," optimize pow 934 optimize pow x,2 optimize pow 0.5 sqrt",,
2413,d79d71ac7dfe807a5e98b94c9d1f67df4da7998a,lon Zakai <alonzakai@gmail.com>, 2017-03-09 16:46:38 -0800, , fix sign ext opt issue 935 fix bug compared sign exts different size turned zero exts fix bug consider almost sign ext change sign load inside ignoring load extra shifting,,
2414,be4be557567251a73f40bfd7a48220b33f5ddc58,lon Zakai <alonzakai@gmail.com>, 2017-03-09 13:32:03 -0800, , use single space pretty printing wasts massive wasts unruly 928,,
2415,d6508e1f9cef33c43016e4da7dd4b94392f280a9,lon Zakai <alonzakai@gmail.com>, 2017-03-08 13:54:04 -0800, , local cse 930 simple local common subexpression elimination useful mostly reduce code size vms gvn etc enabled default,,
2416,71804e2bfd1ba49b7dd4ce82b6ad26ba13f1bca8,lon Zakai <alonzakai@gmail.com>, 2017-03-07 13:56:35 -0800, , use mode potentially trapping ops asm2wasm 929 use mode potentially trapping ops asm2wasm allow emit potentially trapping exactly doe even take slow ffi clamp avoid trap clamping necessary,,
2417,a452f92aeb96e9617a20146503720cd5acb64f29,lon Zakai <alonzakai@gmail.com>, 2017-03-06 15:02:11 -0800, , stop dce need temporarily browser figure spec 932,,
2418,8968a50fd4248860cc79ee20eabf4071336f0481,lon Zakai <alonzakai@gmail.com>, 2017-02-28 19:21:27 -0800, , merge drop side different type would invalid 927,,
2419,9607b1b7692edad2fe379ade5ee146132fa5f0d7,lon Zakai <alonzakai@gmail.com>, 2017-02-28 11:00:34 -0800, , asm2wasm import overloading fix 924 asm2wasm promote overloaded import result f64 single type void,,
2420,6df76ac7cffc27ed181f26b40b63676bfecb78b2,azuki Oikawa <k@oikw.org>, 2017-02-28 04:34:23 +0900, , fix compilation error clang 925,,
2421,db6f2bf0fa8cd1913bd498ca17641e2bda44a263,lon Zakai <alonzakai@gmail.com>, 2017-02-23 12:59:42 -0800, , fix option 908 fix option add isnested property passrunner,,
2422,7c183a6ec06fa32098c9eb61993f857d821e0afe,gravelle-google <jgravelle@google.com>, 2017-02-23 10:48:02 -0800, , refactor asmconstwalker use smaller subfunctions 923 refactor asmconstwalker use smaller subfunctions replace cashew istrings name,,
2423,3ddf9405cf887c1e0e0034b364c453e7c31acf4c,gravelle-google <jgravelle@google.com>, 2017-02-23 10:22:02 -0800, , default walker subclass using visitor subtype 921 module walker use postwalker visitor let pattern expressed simply postwalker,,
2424,7e133b55c7babaabb83fc0f665b4a60022d4b8fb,gravelle-google <jgravelle@google.com>, 2017-02-23 07:27:08 -0800, , fully handle em_asm s2wasm 910 fully handle em_asm s2wasm iterate size_ts remember erase importsmap well fix dot_s test em_asm signature move name file support name.h move module class,,
2425,38a029f5b697878d13e41d5ecdc6c5fa69837b77,lon Zakai <alonzakai@gmail.com>, 2017-02-21 14:09:33 -0800, , fix asm2wasm import type setting set type used call based 920 fix asm2wasm import type setting set type used call based context early valid optimizer,,
2426,c27040e315f75f5b5c50078e539714973dc21d12,lon Zakai <alonzakai@gmail.com>, 2017-02-21 10:54:26 -0800, , read unknown user section binary data stored module 918,,
2427,a32c0eff473d39b816679a5f7c65b522886726b0,lon Zakai <alonzakai@gmail.com>, 2017-02-21 10:29:59 -0800, , allow traversing inits globals 917,,
2428,d946d68963d4731020d7dc0e41f331e0ab89591c,lon Zakai <alonzakai@gmail.com>, 2017-02-17 13:49:53 -0800, , clean raw pointer import functiontype make name like everything else 915,,
2429,359c6133b3d7d6451cf65f3edce0bcf319f9af22,lon Zakai <alonzakai@gmail.com>, 2017-02-17 13:28:46 -0800, , allow traversing offset inits table memory segment 916,,
2430,dafe89619cfae269b8f3e9e01ead6102a9d168ad,lon Zakai <alonzakai@gmail.com>, 2017-02-17 08:00:23 -0800,906, merge pull request 906 webassembly opts super misc opts,,
2431,67fd2a8bece9b4ecad4d0bef2d357245492a66bb,lon Zakai <alonzakai@gmail.com>, 2017-02-14 15:58:57 -0800, , fix sign unsigned compare compiler warning,,
2432,63230c06a8d98f4326de5d1a2ef6e908ed6a5945,lon Zakai <alonzakai@gmail.com>, 2017-02-14 15:31:40 -0800, , finish pickloadsigns pas,,
2433,13f9265b9632f887e6c22a024c4c4d8ded187dd1,lon Zakai <alonzakai@gmail.com>, 2017-02-14 15:18:46 -0800, , refactor sign zero extension code nice header prepare pickloadsigns pas,,
2434,5b248af887acdce430c97eb953e3bbdfe0494c6e,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 18:00:35 -0800, , fix clean fallthrough logic,,
2435,ff8705ef08502411093cef7a90c7f30833147af1,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 17:47:48 -0800, , optimize compare load_s sign extend load_u cheaper zero extend,,
2436,ced44f4fd543b50980d4bf674fa6a30f9c31790f,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 17:35:39 -0800, , take account load local info,,
2437,eec567640d154147fb88754fd13aada738a63eef,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 15:17:57 -0800, , use local info maxbits sign extendedness fix maxbits signed load uncovered bit may used case,,
2438,04d38f6f881b16a014c47e897a4590d76ec548ff,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 14:15:48 -0800, , remove unneeded mask using getmaxbits,,
2439,f05efb982f8472c1dd6beb0e8dbc8afc73e82fcb,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 13:48:38 -0800, , tiny refactoring clarity,,
2440,53b94fca7da5eeb08bb9b9802367a29c3e811e92,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-13 10:44:00 -0800, , fix fuzz testcase xor maxbits max min,,
2441,8a4edd97499120430fe1c6f2fdcbb0f5920cceab,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-12 17:06:34 -0800, , handle fallthrough value load_s sign zero extend optimization,,
2442,6affe6fb4d06550a40b4d73efe19c085317854d7,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-12 16:37:45 -0800, , handle load getmaxbits,,
2443,85d2c4ffdaf3934f7e529cc43842a03c3304107b,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 22:04:22 -0800, , handle tee_local getmaxbits,,
2444,c06b3762a09e95443fd0f159b2675209db1dbb29,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 21:55:14 -0800, , optimize sign ext store size,,
2445,2553266cf716df3f03d5d057887ed660c12f4fb6,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 13:27:04 -0800, , optimize add sub,,
2446,f57637d7164d8a6369d2ba281559b8d3cef7bd33,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 13:20:35 -0800, , optimize sign extends boolean,,
2447,51d57932a34dd265a8c3c35a6773387e5dd7bc9e,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 13:13:24 -0800, , optimize sign extends eqz,,
2448,41eee37bc153a68b0f0c46162e21f825d1784499,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-02-11 13:09:04 -0800, , optimize sign extends,,
2449,c6ea79d1532face076c2dfeb8eadb58319e4e5fd,lon Zakai <alonzakai@gmail.com>, 2017-02-16 22:42:31 -0800, , optimize squared operation 905 optimize almost sign extends remove one entirely extra shift left behind place optimize squared operation like shl shl doe break sign extend opts,,
2450,0728a53fb6bf0540b9789c7bcd26e195800c5ecc,lon Zakai <alonzakai@gmail.com>, 2017-02-16 22:11:13 -0800, , optimize linear sum 904,,
2451,a78dddbcf2bf9f23840c7074ce16c04a8d55c3df,lon Zakai <alonzakai@gmail.com>, 2017-02-16 21:37:39 -0800, , optimize sign extends 902 optimize sign extend output optimize sign extend input,,
2452,1d72468f464a725afdee4b28c5f6bd4d7a631c92,lon Zakai <alonzakai@gmail.com>, 2017-02-16 16:50:26 -0800, , add sqrt test 912,,
2453,4d2978f8a82a8999c1b6ced85a7ec4996b10f36b,lon Zakai <alonzakai@gmail.com>, 2017-02-16 15:20:13 -0800, , update wasm version 0x01 913 update wasm version 0x01 prep release since browser ready accept update wasm.js,,
2454,5e29a613bb8bf059f5f7b9ec2f166f8d2e413ac5,lon Zakai <alonzakai@gmail.com>, 2017-02-16 14:27:23 -0800, , fix emitting unreachable block loop 911 unreachable block one unreachable child plus break document new difference binaryen wasm fix relooper missing finalize add bunch test assume test .wast file print exactly print from.wast allows wast test comment emit unreachable block block unreachable unreachable without else unreachable iftrue still unreachable none update wasm.js cleanup empty block none type,,
2455,97077693a6458d51bd5b3dc85187d5a4bd16c3ee,lon Zakai <alonzakai@gmail.com>, 2017-02-16 11:34:32 -0800, , optimize precise mode integer ops 907 improve precise integer operation call wasm function possibly trapping div rem handle corner case instead ffi also fix bug existing parallel bit code remove longer needed wasm.js post.js file moved emscripten repo,,
2456,08345e231133cd44b956f11a68f72a5c7b5fd1d9,oo Rong Jie <loorongjie@gmail.com>, 2017-02-16 07:18:59 +0800, , hide dead code 909,,
2457,76c8f82d5cf98171ff46ed4bf36791d3b891357f,lon Zakai <alonzakai@gmail.com>, 2017-02-07 11:24:57 -0800, , asm2wasm debuginfo 895 parse file line comment asm.js debug intrinsics convert debug intrinsics annotation print ignore debuginfo emitting text wasm binary support yet emit full debug info emitting text emitting binary name section update wasm.js,,
2458,985bcba6239792ebcb3808f1066ca6ea20ac5688,lon Zakai <alonzakai@gmail.com>, 2017-02-06 16:24:33 -0800, , improve handling implicit trap 898 add ignore implicit trap option default ignore properly preserve semantics implicit trap reordered side effect removed add testing ignore implicit trap,,
2459,04fc050edf3eeff85a77910a4d6821bff59fade2,ric Holk <eric.holk@gmail.com>, 2017-02-03 16:06:02 -0800, , remove unused capture fix warning error compiling clang 896,,
2460,47457e4d7d5fa750c343d288b3f5a607d27f66ff,lon Zakai <alonzakai@gmail.com>, 2017-02-02 08:58:10 -0800, , read first byte check file wasm binary 894,,
2461,5725c4376cf674378084e700073d0e3a7f3c95f3,lon Zakai <alonzakai@gmail.com>, 2017-02-01 21:28:50 -0800,893, merge pull request 893 webassembly shrink asm parser shrink asm.js ast,,
2462,ae6612e4c394af30bb0871ad9735ac853811f807,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-31 20:55:42 -0800, , refactor asm.js ast use assignname node common case assigning name arbitrary ast node,,
2463,f6c0bc26b65c6cfd58d1bb011c1587d343c42ab5,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-31 20:03:41 -0800, , refactor asm.js ast use stat node need print asm.js anyhow knowing unnecessary bloat,,
2464,f2af5a9d587cbdeb8f164fb5d37d20daef527213,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-31 16:08:36 -0800, , refactor asm.js ast use assign node,,
2465,7bc8f14d8699f56777a763f99ad8098fcf7c0583,erek Schuff <dschuff@chromium.org>, 2017-01-31 16:27:50 -0800, , make ast_utils library 892 split cpp file turn giant template function simple function take callback organization fewer mammoth header make build second faster binary couple smaller,,
2466,e8d6188499260d599b2002d1b17405220d22869a,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-31 14:17:39 -0800, , use mixedarena asm.js ast,,
2467,abb48f7460b26e14076fd34ed1f7274ab3a949cc,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-31 10:43:19 -0800, , refactor asm.js ast use string node directly instead name string,,
2468,818fa1dc19b0edcaaf1a8aa78b94bf052420252d,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-30 12:13:56 -0800, , refactor asm.js ast use number node directly instead num number,,
2469,64284970344ce5463adada38e348230256b31226,lon Zakai <alonzakai@gmail.com>, 2017-01-26 15:11:43 -0800, , read write abstraction 889 added modulereader writer class support text binary use wasm opt asm2wasm,,
2470,8bcdfb20d73c931529a458fb0dd3078724c38315,lon Zakai <alonzakai@gmail.com>, 2017-01-26 11:04:47 -0800, , code pushing fix push set_local side effect may execute 890,,
2471,21eb2c7cba6af6e01219f1f3b06e82dfcf2788e8,erek Schuff <dschuff@chromium.org>, 2017-01-24 13:44:04 -0800, , export memalign along malloc friend 888 emscripten mmap2 syscall started using memalign instead malloc kripken emscripten 4874 need export well,,
2472,009f172a595d5554e7e85f6acacef34e9d4e8010,lon Zakai <alonzakai@gmail.com>, 2017-01-19 19:05:01 -0800, , fix bustage caused conflict last two landing 886,,
2473,00f432220444234e6ddca827f82cabcb6a2ef92a,lon Zakai <alonzakai@gmail.com>, 2017-01-19 10:34:37 -0800, , dce even 884,,
2474,665de854468175e9254ed7218fe7dd65bc5bc55e,lon Zakai <alonzakai@gmail.com>, 2017-01-19 10:31:22 -0800, , handle unreachable param export asm2wasm ignorable 885,,
2475,eafc06f8cf2b815d151b67c67086f33b3dae6b8b,erek Schuff <dschuff@chromium.org>, 2017-01-13 17:45:01 -0800, , allow release build asserts window 882 posix build enables assertion release build undebug window build doe add undebug release build flag additional complication dndebug added cflags cmake default msvc warn ufoo dfoo command line scrub dndebug cflags well additional window build cleanup disable conversion truncation warning canonicalize flag style use slash everywhere instead mixing msvc disable optimization,,
2476,370029bf981bee0c88dfdc7b9f4739959a1b8c05,lon Zakai <alonzakai@gmail.com>, 2017-01-12 15:40:02 -0800, , asm2wasm switch big create else chain instead 877,,
2477,d908ea7ba67c3544bcaa7906ce8e61cb5bf0846d,lon Zakai <alonzakai@gmail.com>, 2017-01-12 14:21:29 -0800,880, merge pull request 880 webassembly dce moar dce end asm2wasm,,
2478,d14499fd0696e5acc5f3c06ab2fb551ff654c2be,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-12 12:27:00 -0800, , add dce end asm2wasm handle code change intermediate optimization pass,,
2479,7e933f4e5a8870e7dfa282c86cfd9b6c49118d0a,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-12 12:24:55 -0800, , add test showing unreachable code return,,
2480,9ccea0e0f97538c8c2349144e83c20bbc6c8c413,lon Zakai <alonzakai@gmail.com>, 2017-01-10 13:07:37 -0800,865, merge pull request 865 webassembly fix fix angrybots parsing,,
2481,90e06072f321507e61120bed891642f191c63547,lon Zakai <alonzakai@gmail.com>, 2017-01-05 15:33:55 -0800,863, merge pull request 863 webassembly linking fix linking cleanup,,
2482,4935b96a60fc2d45dd5229acb9c784f278c37b78,lon Zakai <alonzakai@gmail.com>, 2017-01-05 10:59:30 -0800,871, merge pull request 871 webassembly fix api unused mem mark memory existing created api,,
2483,9be46c626ce03d2967c817a3f8f2ffce0bc06a26,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-01 16:21:19 -0800, , handle binary break return,,
2484,649bbfc66fff32bf2bb34eec2106e28a4adef585,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-01 16:10:38 -0800, , handle module globals,,
2485,e1371b9c6ae1ad9a7e758f43af4d56def1f331d3,lon Zakai <alonzakai@gmail.com>, 2017-01-04 17:32:57 -0800, , handle stacky code 868 handle stacky code binary using block local,,
2486,967c1e4181702f6058b7bfbad1d6ed54887813b7,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-04 16:25:06 -0800, , mark memory existing created api,,
2487,f5d0aa800e45488aa2277e97edf9383722c00969,lon Zakai (kripken) <alonzakai@gmail.com>, 2017-01-04 16:43:40 -0800, , ensure export added binary,,
2488,a47a3e7b4181f8cef2e7a7b371e52da71a859d2d,oo Rong Jie <loorongjie@gmail.com>, 2017-01-04 02:51:32 +0800, , print long string one call 864,,
2489,892e6524c147c8ff21e68556efee799a9c67f63c,lon Zakai <alonzakai@gmail.com>, 2016-12-30 10:00:59 -0800, , add memorybase tablebase already,,
2490,585fd8af473354b9dfa7e57c5c6af396fa60945e,lon Zakai <alonzakai@gmail.com>, 2016-12-30 13:41:02 -0800, , memorybase tablebase mutable need use segment element offset,,
2491,c25d24447aeede9df0e76aac5176cf525522343b,lon Zakai <alonzakai@gmail.com>, 2016-12-30 10:13:04 -0800, , emit globals table memory may use global element segment offset,,
2492,575d695762f545e1c2784595d9c926488062f383,lon Zakai <alonzakai@gmail.com>, 2016-12-27 21:42:44 -0500,859, merge pull request 859 webassembly linking dynamic linking,,
2493,e5704f392404b1f69d762217b89e3b8736277f08,lon Zakai <alonzakai@gmail.com>, 2016-12-21 11:10:24 -0800, , fix copy call_indirect bug 860,,
2494,97968a879d0b55baccb5f72627fca84a6a015356,lon Zakai <alonzakai@gmail.com>, 2016-12-07 14:08:41 -1000, , handle import table interpreter,,
2495,7a7d142903b6eb18854cb9b955fc728a7e3853bd,lon Zakai <alonzakai@gmail.com>, 2016-12-03 19:30:55 -0800, , properly legalize imported table element,,
2496,8ce6594dc19cb3203267d1f5e8f335f0ee5a450e,lon Zakai <alonzakai@gmail.com>, 2016-12-03 16:12:40 -0800, , fix legalization issue f32s,,
2497,92fb30a71c901c08bf676215efa0103cf23bcab8,lon Zakai <alonzakai@gmail.com>, 2016-12-03 15:59:10 -0800, , verify legalize table element,,
2498,9cd6b3ef888e992fd2e0d90106ebd6a3b1ae83ec,lon Zakai <alonzakai@gmail.com>, 2016-12-03 14:49:55 -0800, , comment,,
2499,b0d3056aa9dfda88f86db9d580989372ab198f11,lon Zakai <alonzakai@gmail.com>, 2016-12-02 20:23:59 -0800, , lower min max asm2wasm wasm .min max,,
2500,0a498b945e6fe51db9fd3e5b76997e3f40b735a7,lon Zakai <alonzakai@gmail.com>, 2016-11-19 12:13:58 -0800, , make handle f32s well valid asm.js ffis,,
2501,420f28ff46322b1d9eddd20ce4bd4f30b42fa311,lon Zakai <alonzakai@gmail.com>, 2016-11-18 17:13:42 -0800, , convert ftcall_ mftcall_ table call,,
2502,7bd25106baf71882badec1e03f45f6cae5d31560,lon Zakai <alonzakai@gmail.com>, 2016-11-17 14:20:43 -0800, , support asm.js numeric export creating global exporting,,
2503,98e9e604c7e2e4f928abe8f05691df90cddf09e4,lon Zakai <alonzakai@gmail.com>, 2016-11-15 21:36:33 -0800, , add pas make create tempret0 needed otherwise might remove use,,
2504,49bdfd20094e909fb6f4ea989e2a2cbfe01e8741,lon Zakai <alonzakai@gmail.com>, 2016-11-14 16:03:00 -0800, , use tablebase table segment,,
2505,5242ab0fe2ec18f249aafc34fd73a0b36d1e48ac,lon Zakai <alonzakai@gmail.com>, 2016-11-14 15:49:38 -0800, , export wasm table module,,
2506,2b0a4276cac1bb247e4f3a5e4333734a6e35794e,lon Zakai <alonzakai@gmail.com>, 2016-11-14 15:40:42 -0800, , use,,
2507,d88cd2ddeb3c8a690533b4d758f74a83f057eb06,lon Zakai <alonzakai@gmail.com>, 2016-11-13 11:52:29 -0800, , fix order emitting start section,,
2508,22f7562e2291c6b8f377c41dd5af797c4bb9df4e,lon Zakai <alonzakai@gmail.com>, 2016-11-13 10:54:02 -0800, , fix table import size maximum provided,,
2509,e0d5a85961d21d651298d6f069a3753e011aa280,lon Zakai <alonzakai@gmail.com>, 2016-11-12 20:47:09 -0800, , add table max option make mem max set limit limit,,
2510,e44343a76d96a836e7f0abc0779d774e90621674,lon Zakai <alonzakai@gmail.com>, 2016-12-07 14:31:10 -1000, , hash type node 856,,
2511,6c4f6d7022ebdd640f2a8e4df8c4885774b9b184,lon Zakai <alonzakai@gmail.com>, 2016-12-07 14:30:52 -1000,857, ignore unknown user section fix 857 858,,
2512,76ddda73d630d50839c2eef5e86a96e16625b6ed,lon Zakai <alonzakai@gmail.com>, 2016-12-06 15:58:02 -1000, , use exported static base bump 853,,
2513,9f78d931f450163da81672b42697b98776746918,gravelle-google <jgravelle@google.com>, 2016-12-06 07:41:54 -0800, , refactor check.py group test split separate 849 refactor check.py group test split separate file move helper util function test shared.py move script support.py test support.py split s2wasm test file fix flake8 warning shared.py s2wasm.py move test script test script test replace shared import explicit import,,
2514,ba7638d561f09ec24f90d571763b2ef84b775318,gravelle-google <jgravelle@google.com>, 2016-12-01 14:07:37 -0800, , update known test failure waterfall revision 854,,
2515,1a9f60907a7e5c36c4040b4af004dc09d29595f7,gravelle-google <jgravelle@google.com>, 2016-12-01 11:36:37 -0800, , generate global import separately emscripten glue 852,,
2516,4caea4872aed6d1cb7ef42c9a2364870eb574e41,gravelle-google <jgravelle@google.com>, 2016-11-30 15:34:39 -0800, , handle importing globals s2wasm 843 handle importing globals s2wasm make importedglobals set name make name hashable revert make importedglobals set name make name hashable reverts commit refactor relocation parsing handle expression directly feedback move comment belongs add comment ownership addrelocation remove nothing reword imported globals imported object flip consistency add test s2wasm globals also implement import relocation expression handling simplify globals.s test fix memory leak relocation use unique_ptr instead delete,,
2517,36be3e0151dd7357e47b2d8f432bdd706a30466c,lon Zakai <alonzakai@gmail.com>, 2016-11-30 15:02:01 -0800,850, fix regression 850 851 fix regression 850 always safe fold added offset load store offset add wrap offset doe small refactoring simplify asm2wasm pas invocation,,
2518,7d2d9ec9f2f936d0a53b7dc60089456a0654d29c,lon Zakai <alonzakai@gmail.com>, 2016-11-29 19:35:55 -0800, , optimize added factor load store offset 850 optimize added factor load store offset removing add optimize offset load store constant constant,,
2519,724814c5adafaacac693f9a11e3517e411c4c5de,lon Zakai <alonzakai@gmail.com>, 2016-11-28 15:11:17 -0800, , consistent placement type 848,,
2520,d0ba62047ed64a7169ec4565020adaff7b2649ed,lon Zakai <alonzakai@gmail.com>, 2016-11-28 15:02:21 -0800, , increase limit 847,,
2521,e2581997bbf81b828d9c60601b003b0f7330aef3,oo Rong Jie <loorongjie@gmail.com>, 2016-11-29 04:05:27 +0800, , wrap description 839,,
2522,3da6038303d25ffa2599971c94967a86a2300886,lon Zakai <alonzakai@gmail.com>, 2016-11-25 17:13:24 -0800, , fix reordering bug merge block 846,,
2523,d9e318c9d8228212ea83cf3baad38db88852ff1a,lon Zakai <alonzakai@gmail.com>, 2016-11-15 11:24:47 -0800, , fix python spacing script 841,,
2524,4f18246f37becf6aae00bd8863401ec44462a08c,lon Zakai <alonzakai@gmail.com>, 2016-11-11 17:07:00 -0800, , add mem max option set maximum size memory overriding default normal size memory growth infinity growth 837,,
2525,485b1dca62848be92f9fcce4a70a5c63eb5015ee,lon Zakai <alonzakai@gmail.com>, 2016-11-11 17:05:18 -0800, , run wasm natively default fallback interpreting 838 run wasm natively default fallback interpreting improve error message suggesting people add method want,,
2526,f9695926d067cd66a296c38b42da2ae3bcb1131d,lon Zakai <alonzakai@gmail.com>, 2016-11-11 10:22:13 -0800, , improve memory growth ignoring code asm2wasm may marker symbol e.g only_my_code case 835,,
2527,76c9f5b2ad40efab9d712c4903782ba1059cc2dc,lon Zakai <alonzakai@gmail.com>, 2016-11-11 10:21:36 -0800, , update wasm.js 836,,
2528,08050a4cc65958c92dbfbd62dfdaf8031beb3955,oo Rong Jie <loorongjie@gmail.com>, 2016-11-12 01:41:59 +0800, , fix window color 833 fix window color update readme.md,,
2529,d0ee29345f9c697073d5dee7949dae0ee45be836,lon Zakai <alonzakai@gmail.com>, 2016-11-10 16:46:57 -0800, , show warning guidance memory size incompatibility issue make wasm compilation fail 834,,
2530,a3afc150c3768b351434c734448b7ab456d17f57,lon Zakai <alonzakai@gmail.com>, 2016-11-10 16:45:27 -0800,831, merge pull request 831 webassembly symbol map symbol fix,,
2531,f0c32b28cb01fe17cf86c0f48b56bb221407ad76,lon Zakai <alonzakai@gmail.com>, 2016-11-09 14:23:32 -0800, , emit entry name section import well recently changed spec,,
2532,7d0bb485aa40492c85181f477ae39e6bca56234b,lon Zakai <alonzakai@gmail.com>, 2016-11-09 11:58:14 -0800, , add symbolmap option wasm emits side file name mapping similar name section external,,
2533,3dac399ba503e05ee014e96a7ce9c82f29f6981c,lon Zakai <alonzakai@gmail.com>, 2016-11-07 16:47:47 -0800, , support assigns f32 heap64 asm2wasm 830,,
2534,89d393ed02f6b15a3a8dc60b489f969184070625,lon Zakai <alonzakai@gmail.com>, 2016-11-07 10:20:42 -0800,827, merge pull request 827 webassembly relooper reloop loop label target,,
2535,4a3892d31288bded757e3805cb53d4e20ccc6be0,lon Zakai <alonzakai@gmail.com>, 2016-11-06 16:49:23 -0800, , handle label setting inside body label value,,
2536,962c9a63f854f888e4f0fc48f217beefccce4266,lon Zakai <alonzakai@gmail.com>, 2016-11-06 16:48:38 -0800, , make extractfunction use env var instead hardcoded string,,
2537,033b5e161e677173bda01aad9e6850545b93c97e,lon Zakai <alonzakai@gmail.com>, 2016-11-06 11:07:08 -0800,826, merge pull request 826 webassembly opts minor optimization,,
2538,57d0a549d715a25b471c8913c3013fc407eceea6,lon Zakai <alonzakai@gmail.com>, 2016-11-05 19:29:26 -0700, , improve local simplication simplify without block structure value coalesce coalesce remove copy another pas full simplification,,
2539,5447c53b612c8d0f0d0902efe5053f2f81bd1595,lon Zakai <alonzakai@gmail.com>, 2016-11-05 16:38:34 -0700, , add variant simplify local without teeing structural opts,,
2540,13ce3488333f70607411eb504ea2046fe2dc7c6d,lon Zakai <alonzakai@gmail.com>, 2016-11-04 17:24:01 -0700, , optimize booleans i32.or,,
2541,fd5d26f549ec95f46d8696dac51ba5b5f7316248,lon Zakai <alonzakai@gmail.com>, 2016-11-04 17:19:11 -0700, , remove unused coalesce local,,
2542,5af71eea09abfa9078c62633cea89b121ec4ec08,lon Zakai <alonzakai@gmail.com>, 2016-11-04 14:55:32 -0700, , fix fround unsigned integer 821 fix fround unsigned add testing f32 ops remove duplicate test f32 default wasm need check without precise_f32 update wasm.js binaryen.js,,
2543,22699ebad0972fa7604dd8ffd26f9f6607e82fb0,lon Zakai <alonzakai@gmail.com>, 2016-11-01 21:32:38 -0700,819, merge pull request 819 webassembly optimize memory pack memory segment,,
2544,0ff4359de75b4dd2a786dfa50cb17b3ec01a701a,lon Zakai <alonzakai@gmail.com>, 2016-11-01 21:31:41 -0700,817, fix large f32 consts fix 817 820,,
2545,1bcbf5fd9b6cbedf302309eaae719115b2d83d4a,ichael Bebenita <mbebenita@gmail.com>, 2016-11-01 15:44:03 -0700, , work around dot quirk related updating node style remove indirect call edge greatly increase size graph 818,,
2546,26cf3235f9f73a8f187fa75f274bc517a65c3fe9,lon Zakai <alonzakai@gmail.com>, 2016-10-31 17:50:42 -0700, , add pas optimize memory segment pack memory asm2wasm,,
2547,c8eccc4ceb1d538fc394578c23ba87bb50835b3f,lon Zakai <alonzakai@gmail.com>, 2016-10-31 17:09:27 -0700, , add memory base option asm2wasm fix memory base instead depending import,,
2548,119564e943fb47f081021d69a5456de8d051fe83,lon Zakai <alonzakai@gmail.com>, 2016-10-31 13:42:14 -0700, , optimize away copy 816,,
2549,c8f1c1fc99905e286c15538957e24545a5c72536,lon Zakai <alonzakai@gmail.com>, 2016-10-29 15:46:54 -0700, , add inlining pas 814,,
2550,adc568e7d0bde50419a0bae8a96f7dbb0f69cf4d,lon Zakai <alonzakai@gmail.com>, 2016-10-29 15:46:42 -0700,813, merge pull request 813 webassembly fix mergeblocks drop fix mergeblocks drop,,
2551,73a2bae85261757303deb9e3ff5be230483d5ba4,lon Zakai <alonzakai@gmail.com>, 2016-10-29 12:25:57 -0700, , optimize child block merge block drop value may new subchild block,,
2552,68bf64141dc4d35e6ff174fb68ce5bc50ff27c79,lon Zakai <alonzakai@gmail.com>, 2016-10-29 11:02:28 -0700, , fix break value removal merge block br_if type change without value finalize node remove drop,,
2553,c7cb56099d6a3b8b1dfb540cc64f6572c1101ed4,lon Zakai <alonzakai@gmail.com>, 2016-10-29 10:45:38 -0700, , handle case br_if whose value used merge block,,
2554,1cdee58fed2479997c1e386236879be87036d60c,lon Zakai <alonzakai@gmail.com>, 2016-10-28 14:35:21 -0700, , refactor get_local counting simplify local 812,,
2555,a83d29e019f28c0940730bc58f96d703aa614345,lon Zakai <alonzakai@gmail.com>, 2016-10-27 19:42:21 -0700,811, merge pull request 811 webassembly iffify minor br_if opts,,
2556,af021c52634d66db1a3815f553602b9f9464e023,lon Zakai <alonzakai@gmail.com>, 2016-10-27 14:24:43 -0700, , merge adjacent br_ifs,,
2557,498210cf0b006ff86e57bd6a68816bda2467266b,lon Zakai <alonzakai@gmail.com>, 2016-10-27 12:28:07 -0700, , recreate simply ifs,,
2558,aa06410ccd112d6276e734f8413f2754d32a1f47,lon Zakai <alonzakai@gmail.com>, 2016-10-27 11:28:35 -0700, , recurse optimizeboolean 809,,
2559,82639c7c658f4335850fe290f4cd6b34f3fb91f5,gravelle-google <jgravelle@google.com>, 2016-10-27 10:56:11 -0700, , set type implicit block use loop body s2wasm 810 loop modeled binaryen block body block added module walker validated like normal block s2wasm add block need make sure type loop body match type loop run issue,,
2560,afad1ee305719cf2a34b6dcccff72b07e1a5e34d,lon Zakai <alonzakai@gmail.com>, 2016-10-27 09:19:16 -0700, , optimize boolean context 808,,
2561,7047ed25b3ca34aeddb67d0082a998fec0841372,lon Zakai <alonzakai@gmail.com>, 2016-10-26 20:24:09 -0700, , code pushing 807 push code forward potentially letting execute,,
2562,cf80d22442549707fb748e81028f41c88d41cb87,lon Zakai <alonzakai@gmail.com>, 2016-10-26 17:50:01 -0700, , update wasm.js binaryen.js 806,,
2563,e120601c0b2cbc5722950fb1ce7d0901842f5dff,lon Zakai <alonzakai@gmail.com>, 2016-10-26 10:42:48 -0700, , conditionalize boolean operation based cost 805 expensive expensive boolean execute one conditionally side effect,,
2564,c5ab566cc3343d3b9e07eab4855b0dbfb2c81afe,erek Schuff <dschuff@chromium.org>, 2016-10-26 10:11:27 -0700, , binary 0xd change 803 renumber opcodes 0xd unified type encoding add reserved flag field host instruction call_indirect rename flag reserved fix line number wast parser also throw memory defined element export memory validity checked later anyway skip spec binary.wast spec testsuite still 0xc 0xd match order update 0xd need implement additional functionality import test namely register,,
2565,ded69c16a2b3f27dd9b12b184d7045596d2a21d0,lon Zakai <alonzakai@gmail.com>, 2016-10-25 17:03:10 -0700, , optimize bool 804 asm.js correction unit.asm.js test optimize bool,,
2566,dc35ac6e83694fda26a78d8b11712c3210e30b36,erek Schuff <dschuff@chromium.org>, 2016-10-25 11:57:38 -0700, , create cmake install target libs file 798 creates install rule binaryen shlib header well various file wasm.js binaryen.js well used emscripten recreates install target current layout used tree build,,
2567,94511d74d495bed63da81d742ea61ea6e1ccabf1,gravelle-google <jgravelle@google.com>, 2016-10-24 14:53:10 -0700, , update s2wasm reordered call_indirect 802 update s2wasm reordered call_indirect http d25708 fixed call_indirect 0xc reordering operand s2wasm need aware update test update torture test run update handwritten dot_s test call_indirect args,,
2568,f4900d69e884f7a40468c4084907bb87405984db,lon Zakai <alonzakai@gmail.com>, 2016-10-22 09:10:23 -0700, , fix binary format regression must handle float literal carefully change sign bit platform compiler commit made relevant function non inline hit bug 801,,
2569,58123ff10f075100bfb4fc5885cae04607564139,lon Zakai <alonzakai@gmail.com>, 2016-10-22 09:10:11 -0700,799, merge pull request 799 webassembly pas cleanup tiny pas cleanup,,
2570,64e9b3fa53e5b4a88ad424f4cdf00f923664246f,lon Zakai <alonzakai@gmail.com>, 2016-10-21 13:42:33 -0700, , pas passoptions pas passrunners creates letting proper option time,,
2571,8f0bfac3a2b7618e2af6e813357193f7d1540219,lon Zakai <alonzakai@gmail.com>, 2016-10-21 13:41:38 -0700, , cleanup call notenonlinear necessary block branch add missing call unreachable like return halt control flow,,
2572,5177e11e24b08c6a53215b59fe1ac25141763429,lon Zakai <alonzakai@gmail.com>, 2016-10-21 13:40:35 -0700, , support pas test file plus level like etc,,
2573,9afa80951a3e9e59d5348780370a8b67d829ded1,erek Schuff <dschuff@chromium.org>, 2016-10-20 15:50:53 -0700, , move wasm binary reader writer header file libwasm 797,,
2574,b02b5ec36f706d704e19888412d51cd2abf02ca9,ichael Bebenita <mbebenita@gmail.com>, 2016-10-20 14:27:45 -0700, , add pas print call graph .dot graphviz format 794,,
2575,e687b4483c79e37ec5c7c411600a2b332deef4d1,erek Schuff <dschuff@chromium.org>, 2016-10-20 12:38:09 -0700, , move wasm.cpp wasm parser library 796 also move bulk code wasm parser cpp file allows namespace include cleanup improves compile time also make future parser change easier localized,,
2576,ec7476c108c6ec7eead873fe76943c3d58df4f4a,lon Zakai <alonzakai@gmail.com>, 2016-10-20 12:10:05 -0700, , add priority copy backedges 791 add coalesce local test costly backedges add script strip local name convenient diffing prioritize backedge copy,,
2577,245d63551b520078feb76167fa58444821ae0c22,lon Zakai <alonzakai@gmail.com>, 2016-10-20 12:09:19 -0700, , optimize i64.store 792,,
2578,d887023271985fcf2caa91067e636a0697849589,lon Zakai <alonzakai@gmail.com>, 2016-10-20 12:08:13 -0700, , update wasm js.cpp code asm2wasm constructor change 793,,
2579,d9e63fed50f4bfc032123d6fdc5fe052f0e31b2f,uj <jujjyl@gmail.com>, 2016-10-20 20:23:57 +0300, , fix c6246 local declaration hide declaration name outer scope warning 795,,
2580,00354666afcc5c9fa489c446e23febe7efbcd311,gravelle-google <jgravelle@google.com>, 2016-10-19 16:49:36 -0700, , add support i64.store 789 add support i64.store previously storing i64 interpreter assumed 8byte store store like i64.store8 would use special case i64 storing code could use i32.store8 code add printf test interpreter update wasm.js,,
2581,f08f75cf2fe1b6b8275f7f7fd4356919616ba95c,lon Zakai <alonzakai@gmail.com>, 2016-10-19 15:07:20 -0700, , add etc option 790 use wasm opt asm2wasm consistently uniformly,,
2582,f94bbcdc60e7e435b15a2f95dfce465766e940a3,gravelle-google <jgravelle@google.com>, 2016-10-18 11:01:21 -0700, , minor improvement wasm interpreter debug message 784 minor improvement wasm interpreter debug message indent nested block readable structure numeric label make even clearer print name variable used note_evals print value argument entering function call move indenter class wasm interpreter.cpp,,
2583,b9698cc7076390ae2bb937537850395ae7bad056,lon Zakai <alonzakai@gmail.com>, 2016-10-18 10:50:54 -0700, , pas option 788 add passoptions structure use new param wasm opt,,
2584,c3d2775402d74a920577ed317930f3693305354f,lon Zakai <alonzakai@gmail.com>, 2016-10-18 10:49:44 -0700, , add table memory content metric 787,,
2585,d9aff8254f82af4cdcbcb5046a3603dfd5093b96,uj <jujjyl@gmail.com>, 2016-10-18 04:25:27 +0300, , add support running test valgrind 785,,
2586,af0e9e358f3464d7dede48562db7ce7a37f051aa,uj <jujjyl@gmail.com>, 2016-10-17 22:49:24 +0300, , add new cmake option enable running visual studio static analyzer build 786,,
2587,f386510e65c8d20b69372eb684aa4a1f32931468,oo Rong Jie <loorongjie@gmail.com>, 2016-10-18 02:31:30 +0800, , use steady_clock measure code execution time 776,,
2588,e2013e6fb81da197fbabacb689cc0d28a0d3fd39,uj <jujjyl@gmail.com>, 2016-10-17 21:04:58 +0300, , fix relative path absolute depend fixed cwd 781,,
2589,360b5ee6d941995fdc97bb030527537c957ae70f,lon Zakai <alonzakai@gmail.com>, 2016-10-16 16:37:05 -0700, , reorder local simplify local remove unused local coalesce local making much faster 783,,
2590,c749ad6c43ad34a23356b80870612028437d79d2,lon Zakai <alonzakai@gmail.com>, 2016-10-15 11:30:38 -0700,780, merge pull request 780 webassembly load store optimize common asm.js pattern,,
2591,6deb76d51d58ec910855c38eaf4f2cdd5619076d,lon Zakai <alonzakai@gmail.com>, 2016-10-14 18:18:10 -0700, , optimize i32.and,,
2592,f38142569b0fc29f3831ada7b23ac928b58c5b42,lon Zakai <alonzakai@gmail.com>, 2016-10-14 17:01:06 -0700, , optimize load store mask value load store operation mask,,
2593,16b9087e17effc544d82a69b93de17d8f8c979e2,lon Zakai <alonzakai@gmail.com>, 2016-10-14 17:27:08 -0700,778, merge pull request 778 webassembly passe add remove unused function default pass,,
2594,58f7d6cd477701d7fb4c87ffa9e795ddc6423abb,erek Schuff <dschuff@chromium.org>, 2016-10-14 10:27:36 -0700, , import memory instead defining exporting using emscripten glue 777 emscripten module code creates memory using native wasm apis import wasm module,,
2595,87c3aab6500f2a3a3ca8cecfaf65cc14e407a0cd,uj <jujjyl@gmail.com>, 2016-10-14 20:26:48 +0300, , fix crash loading archive file dereferencing iterator .end undefined behavior 769,,
2596,5881b541a4b276dcd5576aa065e4fb860531fc7b,lon Zakai <alonzakai@gmail.com>, 2016-10-13 18:07:29 -0700, , run remove unused function default,,
2597,0dee67086c9340380975d6e7469fe223a5c8b924,lon Zakai <alonzakai@gmail.com>, 2016-10-13 17:51:13 -0700, , reuse code add pass,,
2598,392995b646d2f5f36bf3110eac149892ebda74df,aiju Tsuiki <tzik@users.noreply.github.com>, 2016-10-15 01:57:17 +0900, , use exported memory root set pas 763 use exported memory root set pas pas wasm opt fails memory exported due wrong root set handling exported symbol fix failure ignoring non function exported symbol,,
2599,89844da32a940042f0fcd61506e5c422e82c7536,uj <jujjyl@gmail.com>, 2016-10-14 19:02:32 +0300, , fix check.py run window improve configurable executed different environment 771 relates 762,,
2600,46bd45f74a7dde15b7feb042f880da5526b7a664,lon Zakai <alonzakai@gmail.com>, 2016-10-13 15:00:53 -0700,775, merge pull request 775 webassembly fix fix simplify local adding value br_if,,
2601,edd94ad2fa4c4b4f529aa3778760ad0f9209e279,lon Zakai <alonzakai@gmail.com>, 2016-10-13 15:00:36 -0700,774, merge pull request 774 webassembly dce fix dce fix globals,,
2602,6e397e4ee50ba09a6f555fcf36406273e5f40d29,uj <jujjyl@gmail.com>, 2016-10-14 00:52:45 +0300, , expand a.js export check binaryen.js also work running window 767,,
2603,34d354b2de094671d10f479cc84ca6ef1da3c993,uj <jujjyl@gmail.com>, 2016-10-14 00:50:49 +0300, , add .gitattributes enforces archive file treated text 768,,
2604,db0e551d2a64e47b59c9196f580fb306bb8205bb,uj <jujjyl@gmail.com>, 2016-10-14 00:49:37 +0300, , remove non cmakeism depends fixed configuration time allows type build debug release fix multigenerators visual studio xcode 764,,
2605,7077f78538be1364df24477fc713dfe480e63558,lon Zakai <alonzakai@gmail.com>, 2016-10-13 12:22:50 -0700, , simplify local give br_if value br_if also return must dropped,,
2606,98e7ff034aa0c5d370ce3dcca3f48c30eb470ad8,lon Zakai <alonzakai@gmail.com>, 2016-10-13 12:25:22 -0700, , pas wast fuzzer improvement,,
2607,502f14c83aa5bb80171916062e9f30a5363dc59a,lon Zakai <alonzakai@gmail.com>, 2016-10-13 11:11:32 -0700, , convert unreachable unreachable dce,,
2608,a4ea106957a29620e6b90839060d9acb8abaaf08,lon Zakai <alonzakai@gmail.com>, 2016-10-13 11:10:09 -0700, , handle globals dce,,
2609,ff360121bf73d969af14ad4a8e42d7fe052df08a,uj <jujjyl@gmail.com>, 2016-10-13 20:48:02 +0300, , fix crash loading archive member field initialized null caused dereferencing garbage pointer 770,,
2610,95d00d699c9e05b8a04885d019a09d8d2eebd0b5,enjamin Bouvier <public@benj.me>, 2016-10-13 19:41:59 +0200,772, create memory section imported memory fix 772 773,,
2611,b4d7c60d82fc336e401026e7ba6dd67138259ae2,lon Zakai <alonzakai@gmail.com>, 2016-10-12 14:37:27 -0700, , update spec test using binary 0xc branch stack test refactoring landed upstream 754,,
2612,ada5fb540164823f8dab45330a190479afa24120,lon Zakai <alonzakai@gmail.com>, 2016-10-12 11:32:56 -0700, , handle unreachable tee_local properly coalesce local 761,,
2613,a08ccc3cdc2e53354f0eaeba419655b641b2b056,lon Zakai <alonzakai@gmail.com>, 2016-10-12 11:32:19 -0700, , fix bug set memory max initial value max specified 760,,
2614,2aad55d7fd4c8ad99d06937ab6838b0a0455e10a,oo Rong Jie <loorongjie@gmail.com>, 2016-10-13 02:13:24 +0800, , implement binary search coalesce local 744 implement binary search using algorithm,,
2615,7e543286b099d7f78816e087c230c2ef23f34beb,lon Zakai <alonzakai@gmail.com>, 2016-10-11 18:24:14 -0700,759, merge pull request 759 webassembly api memory growth fix,,
2616,0f42a9d1d43dcffc76cd816725f278ed8cf28702,lon Zakai <alonzakai@gmail.com>, 2016-10-11 17:16:43 -0700, , handle memory growth native wasm support result grow_memory tell succeeded new buffer found memory object,,
2617,859686c79388b5c34022a8bf8d7794480c9ad2bd,lon Zakai <alonzakai@gmail.com>, 2016-10-11 16:21:06 -0700, , remove memory maximum asm2wasm memory growth,,
2618,85900965a12a3f07c9cca8ef620d4bee039f16fc,lon Zakai <alonzakai@gmail.com>, 2016-10-11 16:15:15 -0700,757, merge pull request 757 webassembly api tiny fix native wasm support,,
2619,943fd287247f9d23d463a24e8eb4b0f666900c43,lon Zakai <alonzakai@gmail.com>, 2016-10-11 14:50:34 -0700, , wasmtablesize allowed,,
2620,6e04c61c78cdf8196b6944c290041611d1f68d2d,lon Zakai <alonzakai@gmail.com>, 2016-10-11 14:48:12 -0700, , see asm.js function table table size,,
2621,1e783f3e96f904b88b692522de04f786feaf41a0,lon Zakai <alonzakai@gmail.com>, 2016-10-11 14:40:23 -0700, , allow maximum size table,,
2622,a3dc8bf8cba7cd1b5ece8abf0489a9dcacfa3f2e,lon Zakai <alonzakai@gmail.com>, 2016-10-11 13:51:34 -0700, , refactor memorybase tablebase init shared location affect native build,,
2623,5e3f26285100854cead459effe409e250a6b4d2f,lon Zakai <alonzakai@gmail.com>, 2016-10-11 11:51:19 -0700, , update,,
2624,717bbe620aa36bc7b85040eade18b1a0300bcec4,lon Zakai <alonzakai@gmail.com>, 2016-10-11 11:51:05 -0700, , use wasmtablesize provided,,
2625,1dbdfff8e997f74154dfebce124756e415aa431a,lon Zakai <alonzakai@gmail.com>, 2016-10-11 11:02:21 -0700, , put heavy pas debugging operation behind 755,,
2626,56c6ca407f3232ede398b78e7f284f6ed80c9f00,erek Schuff <dschuff@chromium.org>, 2016-10-11 09:15:05 -0700, , create table section imported table 756 previously print pas searched import table import skipped printing local table declaration found instead refactors make importation explicit also create importation record previously inconsistent whether record created depending wast syntax,,
2627,2a8fea01444dac7d95eea64c2d49b86bb58713d3,lon Zakai <alonzakai@gmail.com>, 2016-10-09 11:23:19 -0700,753, merge pull request 753 webassembly cfg opts minor cfg traversal opts,,
2628,9cfbe71f45a1234737178eee514b003387ff35de,lon Zakai <alonzakai@gmail.com>, 2016-10-08 12:22:04 -0700, , improve comment,,
2629,b211e9d70456b995996aa9c0d656650177590927,lon Zakai <alonzakai@gmail.com>, 2016-10-08 12:09:53 -0700, , track unreachable code coalesce local know unreachable anyhow add overhead ignore,,
2630,99e50f51ba9917ee45d336e204e1c8d59e9ccc9e,lon Zakai <alonzakai@gmail.com>, 2016-10-08 10:51:19 -0700, , remove unneeded param,,
2631,18c332220f655dbad552c369ccde5da6e5b7fde2,lon Zakai <alonzakai@gmail.com>, 2016-10-07 21:14:20 -0700, , clean unneeded processing cfg walker,,
2632,1b32ff705c52443fc855cdfce446dcff6bf7b85c,lon Zakai <alonzakai@gmail.com>, 2016-10-07 18:06:20 -0700, , use 0xc memory table glue 752,,
2633,cbeb4c9f9ba7c8f50fcb938ef668842bbd5dacb4,erek Schuff <dschuff@chromium.org>, 2016-10-07 10:57:50 -0700, , change print order top level module component 751 wast file spec wabt require import appear non import definition see also http github.com webassembly wabt issue 152 patch order visitmodule wast printer meet requirement match order binary section also remove extraneous whitespace around table definition,,
2634,caf0a3db20bbc03d2261b2c5a112bc0eddd3ca73,lon Zakai <alonzakai@gmail.com>, 2016-10-06 17:37:50 -0700, , require unique name binaryen 746,,
2635,eb958269b8f3c5dd98bb24f99e9f1d5deceaa032,gravelle-google <jgravelle@google.com>, 2016-10-06 17:00:17 -0700, , dot block signature 747 support block signature s2wasm format autogenerate test update cfg stackify test remove conflict file,,
2636,3370c630d4f3fe9590e78be48b417b87d6771455,erek Schuff <dschuff@chromium.org>, 2016-10-06 16:35:12 -0700, , update removal loop bottom label llvm 750 corresponds llvm change http d25122 r283502,,
2637,7b637b77437157fdf207304e3179079a78de72b9,erek Schuff <dschuff@chromium.org>, 2016-10-06 15:55:21 -0700, , update s2wasm removal store result 749 corresponds llvm change http d25122,,
2638,b910f49ede15d27391418b0056e1817e462d855f,erek Schuff <dschuff@chromium.org>, 2016-10-06 15:12:27 -0700, , remove hard coded path llvm test auto generator 748 use command line instead also update blacklist handle new test,,
2639,fcdadc6c124c3a93c68b33c26207ecd5ead47273,lon Zakai <alonzakai@gmail.com>, 2016-10-06 13:46:13 -0700, , validate get_local type 745,,
2640,9caad5e1f85a301b1123420eab45ca8caaf6e837,erek Schuff <dschuff@chromium.org>, 2016-10-04 23:08:36 -0700,740, update wasm.js 743 compatible 740,,
2641,45ba1270e8d99c0c7fdc008c0db7c9d7fa0a4f38,lon Zakai <alonzakai@gmail.com>, 2016-10-04 20:05:45 -0700, , dce bugfix 736 fix dce bug invalid truncate block leaf final element bad type wasm always allow removing unreachable code add wast pas fuzzer,,
2642,4e1667aa3454f56b3e96df674c504cb16366b628,lon Zakai <alonzakai@gmail.com>, 2016-10-04 20:04:57 -0700,741, handle ifs i64 condition 741 742,,
2643,c5b8f379fc3834bc5df10743b525570ffe1a5a73,erek Schuff <dschuff@chromium.org>, 2016-10-04 16:29:21 -0700, , binary 0xc remove arity return instruction 740 also skip binary roundtrip stacky spec test,,
2644,a8386c3d6fcf6bf28f369b85784a89a8f272b59d,erek Schuff <dschuff@chromium.org>, 2016-10-04 15:03:00 -0700, , write global mutability wasm binary 739 compatibility 0xc also update opcode get_global,,
2645,a78bd60bc68993c746a9f236d01558e04b6765bd,gravelle-google <jgravelle@google.com>, 2016-10-04 11:27:25 -0700, , update i64 store 0xc 731 update i64 store 0xc update autogenerated llvm test update known torture test failure add i64.store32 test unit.wast,,
2646,be02365a017f93febcae641705945e9df55ff907,erek Schuff <dschuff@chromium.org>, 2016-10-04 11:02:52 -0700,733, update wasm.js 737 update build accepts binary format change 733,,
2647,c4e70a04c42cdad380707d2e4b4f6f9503462414,erek Schuff <dschuff@chromium.org>, 2016-10-03 21:41:43 -0700, , binary update 0xc 733 refine table explicitly exist previously printed encoded segment initial max size however table defined empty special hack defined empty segment really wanted empty table make existence explicit update function table encoding 0xc table element section add end opcodes function body consumed getmaybeblock behavior reached function end explicit decode update call_indirect encoding 0xc arity call target last,,
2648,5046a524d506add48cb3779b39b4983e78292410,lon Zakai <alonzakai@gmail.com>, 2016-10-03 21:38:40 -0700, , create unnecessary duplicate block asm2wasm switch default 734,,
2649,d19721bc110f0c4545eeaed825de99f963834a0a,lon Zakai <alonzakai@gmail.com>, 2016-10-03 16:40:18 -0700, , refactor import kind export kind externalkind enum class 725,,
2650,eab1c956d2dbdcc83a861c94f95662bfc0af38cc,lon Zakai <alonzakai@gmail.com>, 2016-10-03 13:02:11 -0700, , document clean validation option 730 document clean validation option,,
2651,08136f5d7fd042539e69f9a330f2e55d28b738b9,lon Zakai <alonzakai@gmail.com>, 2016-10-03 12:03:16 -0700, , use new webassembly api 724 use new module api detect presence wasm webassembly object,,
2652,652d70cecc75fbcb4933bdc695be4d2be168f16f,lon Zakai <alonzakai@gmail.com>, 2016-10-02 21:38:20 -0700, , wasm addition i32.cttz copysign popcnt 729,,
2653,9046e5fb540c92c7d994ba72893c724415ab371b,lon Zakai <alonzakai@gmail.com>, 2016-10-02 16:35:41 -0700, , fix vacuum big changed unreachable node nop 728,,
2654,31ceb6ef95835952097ecc868eff9bdd7fb17d34,lon Zakai <alonzakai@gmail.com>, 2016-10-02 15:36:36 -0700, , wasm opts 727 wasm load store wasm bit bitcasts,,
2655,926e4ab3c19c0adc965a3b75d9bd2624a4a2b58f,lon Zakai <alonzakai@gmail.com>, 2016-10-02 15:19:46 -0700, , passrunner debug validation improvement 726,,
2656,58832ad0b8a197ece6165bfe163f634a21f8bd6d,lon Zakai <alonzakai@gmail.com>, 2016-09-30 17:04:25 -0700, , asm2wasm i64 support 723 support i64 intrinsics fastcomp adding wasm flag refactor callimport logic asm2wasm avoid recomputing wasm type legalize illegal i64 params export import safe i64 binary ops depending precision fix addvar assert name using name,,
2657,cbe71a99f3b53db81cfd23f7a12f2010daeff65d,erek Schuff <dschuff@chromium.org>, 2016-09-30 10:47:52 -0700, , make linker always create table segment 722 previously table created address taken function new module validation rule require existence table call indirects validate even dead never called however use case seems common enough might want make continue work linker always creates empty table segment indicating empty table,,
2658,2a543b48db250ea9cd7172b6db9a0b8d3657475a,lon Zakai <alonzakai@gmail.com>, 2016-09-30 09:15:48 -0700, , validate drop 712,,
2659,a82528f17feba6b1c34794c645ea5c78892a57d0,erek Schuff <dschuff@chromium.org>, 2016-09-29 12:55:52 -0700, , update waterfall 11453 enable torture test 721 torture test clang disabled first 0xc udpate update test new waterfall build turn also updating known failure 0xc also update download url since mac window bot added waterfall yet support script tested yet,,
2660,2234cc7374797d188761916f6b1e82ce9ade1fa3,erek Schuff <dschuff@chromium.org>, 2016-09-28 17:38:44 -0700, , print name memory along size 720 otherwise export undefined name spec interpreter actually reject although think intended work given test export.wast wabt also accepts,,
2661,345b04253dcf7d42dcefabdec4e4b0edc3a3ca44,lon Zakai <alonzakai@gmail.com>, 2016-09-28 17:00:00 -0700, , fix signed int64 leb bug large negative value 719,,
2662,093894012d86673fd6bca304da08ccfba88deb44,erek Schuff <dschuff@chromium.org>, 2016-09-28 15:59:26 -0700,708, s2wasm add drop void value 718 fix 708,,
2663,2da1b20451a744daa613e818f71e8f52de3a818e,lon Zakai <alonzakai@gmail.com>, 2016-09-28 13:10:59 -0700, , type check block loop sigs 717 type check using block loop type provided text binary format print loop sigs missing remove dsl change need rethinking,,
2664,ef22ce6c360b70b5bfad40b2930c481d48ed9780,erek Schuff <dschuff@chromium.org>, 2016-09-27 22:38:56 -0700, , update binary encoding block loop signature 711 also update test change binary 0xc update nop unrechable opcodes fix name section,,
2665,ea5b5e20910d8b1773a2adeaad5c92a5f37d0cab,lon Zakai <alonzakai@gmail.com>, 2016-09-26 21:40:09 -0700, , make wasm emit name section debug info 705,,
2666,ad79b7d1a8773ea08203ebece5da49a432dd8877,lon Zakai <alonzakai@gmail.com>, 2016-09-25 21:34:58 -0700, , precompute break return 715,,
2667,f6bc44f11bace70754470694f9101ba9cc5c2887,lon Zakai <alonzakai@gmail.com>, 2016-09-24 18:25:26 -0700,714, merge pull request 714 webassembly precompute void precompute void expression help ifs,,
2668,97cf0d7bf6f115d44636dd52dc7c0036567ca798,lon Zakai <alonzakai@gmail.com>, 2016-09-24 16:39:18 -0700, , optimize const,,
2669,f28bba29833bad06a76c7aabf31cf0257e12f5ba,lon Zakai <alonzakai@gmail.com>, 2016-09-24 14:00:56 -0700, , precompute void expression,,
2670,49ddf2f8ba2439f767cdbeb656c6ff42d5530cf8,lon Zakai <alonzakai@gmail.com>, 2016-09-23 21:14:24 -0700, , add pas fuzzer script 709,,
2671,b6469ed600832887e8874d1a0407b993dd2c03e8,lon Zakai <alonzakai@gmail.com>, 2016-09-23 20:34:56 -0700,710, merge pull request 710 webassembly autodrop fix autodrop fix,,
2672,7d5180a5b3e369634dbc1442117068d332d71049,lon Zakai <alonzakai@gmail.com>, 2016-09-23 16:23:20 -0700, , fix simplify local bug notice already result value,,
2673,8ef9aafab1a2c47f9a09c8e64636da570870dc00,lon Zakai <alonzakai@gmail.com>, 2016-09-23 15:35:58 -0700, , replace two drop else one,,
2674,8f897c7d5543fd1529b8279801ddbb59ffff7f1b,lon Zakai <alonzakai@gmail.com>, 2016-09-23 15:14:34 -0700, , autodrop fix,,
2675,dc82f588309f1a4413be18460159699df74661c4,erek Schuff <dschuff@chromium.org>, 2016-09-22 16:02:55 -0700, , update binary encoding call instruction segment 706 call instruction longer encode arity segment encode linear memory index mvp,,
2676,44978317c4068cea4778e264d03efb5537c009ea,erek Schuff <dschuff@chromium.org>, 2016-09-21 14:35:41 -0700, , update binary format toward 0xc 704 update section header format type import function table memory export section well name section user section,,
2677,8be82627c6a8cbded0dab67ad1f31906a54ba78c,lon Zakai <alonzakai@gmail.com>, 2016-09-21 19:33:11 -0700,703, merge pull request 703 webassembly spec update spec update get passing 0xc spec test minus stacky stuff,,
2678,740e36eab98d679387fea60cd642591a69ce809f,lon Zakai <alonzakai@gmail.com>, 2016-09-21 17:59:50 -0700, , fix use endoffunction uninitialized state wasm binary,,
2679,32fbcf2d042292860e6c0a64e82becefe585fb6f,lon Zakai <alonzakai@gmail.com>, 2016-09-21 16:02:39 -0700, , wasm.js need wasm emscripten.cpp,,
2680,5b315375b5a98c2b57454e3b062f85ea99c80747,lon Zakai <alonzakai@gmail.com>, 2016-09-21 15:31:09 -0700, , update spec test check.py handling,,
2681,182fa17148031a162f4b8cb2c2adea54ffd9e996,lon Zakai <alonzakai@gmail.com>, 2016-09-21 15:30:43 -0700, , update wasm.js binaryen.js,,
2682,c79bbb19b59161e0768674816b477f74355912b1,lon Zakai <alonzakai@gmail.com>, 2016-09-21 15:30:12 -0700, , error putting spectest.print table,,
2683,da134d909f0b9dbd49545ceed77e37721b32f0d1,lon Zakai <alonzakai@gmail.com>, 2016-09-21 14:57:37 -0700, , auto generated import name must unique kind,,
2684,d8229dcfa82a24809a17384df4220b4f3e70a82b,lon Zakai <alonzakai@gmail.com>, 2016-09-21 14:14:04 -0700, , fix start section binary format,,
2685,3355792fba29e62f02cf1f1acb3a219cf5a69970,lon Zakai <alonzakai@gmail.com>, 2016-09-21 13:33:51 -0700, , new label behavior,,
2686,228b9a1cfc89ede2dcc064de9b2e60f53a047128,lon Zakai <alonzakai@gmail.com>, 2016-09-21 12:20:59 -0700, , loop block signature,,
2687,e0b2af0827e98fb91f4ff90b57b7579da1608365,lon Zakai <alonzakai@gmail.com>, 2016-09-20 17:00:38 -0700, , refactor wasm.h remove numericindex hack move indexing parser,,
2688,64bfe1d84db6c0b9b63aa27bb2c2cb1d79f3f504,lon Zakai <alonzakai@gmail.com>, 2016-09-20 16:18:21 -0700, , function numbering fix wasm parser,,
2689,98f2a79dd9ceb95c8df55d3fd755a886e65c567f,lon Zakai <alonzakai@gmail.com>, 2016-09-20 14:47:54 -0700, , memory data parsing fix,,
2690,3308ed63f2556dc969ea9fffd265705469e797e4,lon Zakai <alonzakai@gmail.com>, 2016-09-20 14:39:05 -0700, , table elem parsing fix,,
2691,dc3990106d0363da5fc0e9e1de766459bf67161c,lon Zakai <alonzakai@gmail.com>, 2016-09-20 13:55:19 -0700, , max memory table fix,,
2692,947cd3f224623f2d1e76f3c6cc30487ea8fd79ef,lon Zakai <alonzakai@gmail.com>, 2016-09-20 13:45:16 -0700, , memory table printing fix,,
2693,2aa7ba43b59782243cd4960df43c7936292c41f4,lon Zakai <alonzakai@gmail.com>, 2016-09-20 13:16:51 -0700, , memory parsing fix,,
2694,48a0da1be94a8cabb36dc84d0bc6203c20c22b15,lon Zakai <alonzakai@gmail.com>, 2016-09-20 12:01:44 -0700, , memory table parsing fix,,
2695,4a2c27df27f3415ecd9950110ceddde84008dae4,lon Zakai <alonzakai@gmail.com>, 2016-09-20 11:46:38 -0700, , table parsing executing fix,,
2696,6e6abe73ddf77755c08ba473c52d111fa8fda768,lon Zakai <alonzakai@gmail.com>, 2016-09-20 11:13:46 -0700, , mark table present seen import,,
2697,469d90aaf3d708ffcb0f9f28b29120524055ba6f,lon Zakai <alonzakai@gmail.com>, 2016-09-20 11:13:23 -0700, , validate spectest.print function,,
2698,1338ad989ba30007bc1ba7f0fd05237a9fbec474,lon Zakai <alonzakai@gmail.com>, 2016-09-20 11:04:14 -0700, , support spectest.global,,
2699,552d700c7e21afae03e55b6d6574a67946510972,lon Zakai <alonzakai@gmail.com>, 2016-09-20 10:38:36 -0700, , global importing fix use right counter globals function,,
2700,e9e6b5aeee24f36e92c1e02de6eff31154ca4f07,lon Zakai <alonzakai@gmail.com>, 2016-09-19 20:36:33 -0700, , import parsing fix,,
2701,ba0a6541885d324b9562a79a8977ed8733191b7f,lon Zakai <alonzakai@gmail.com>, 2016-09-19 17:18:59 -0700, , globals mutability fix,,
2702,38dc263c303be13bec2fcee713bdb18fa89057c8,lon Zakai <alonzakai@gmail.com>, 2016-09-19 14:02:57 -0700, , global parsing,,
2703,5f6a5dea206fafd140534f8c494208eb96f7994a,lon Zakai <alonzakai@gmail.com>, 2016-09-19 12:01:18 -0700, , new style import parsing,,
2704,456e3e8625064370281629c71d9c29d8f7d09d06,lon Zakai <alonzakai@gmail.com>, 2016-09-17 15:31:27 -0700, , parsing validation fix,,
2705,0201f77b30f875de0d0fc8e407ffc985d47f8535,lon Zakai <alonzakai@gmail.com>, 2016-09-16 21:08:58 -0700, , support module operation shell test,,
2706,d46a737d421d53f68fc13d55fe405cf8c3c5d4c0,lon Zakai <alonzakai@gmail.com>, 2016-09-16 20:30:09 -0700, , parse empty module without error,,
2707,4ebe1f0c41c3d9311853b79f2cbeb4ec5b4b886c,lon Zakai <alonzakai@gmail.com>, 2016-09-16 19:05:48 -0700, , use export name internal name internal name better expr debugging,,
2708,0a9df805f688d5eab8be380ab7c9dde115d88852,lon Zakai <alonzakai@gmail.com>, 2016-09-16 17:55:58 -0700, , br_if return value,,
2709,f0546a0c8322a4e2f1777c8a749207a70cdca681,lon Zakai <alonzakai@gmail.com>, 2016-09-16 17:10:06 -0700, , block signature,,
2710,8ff678788ada565d15273ca6ca872946f14584d6,lon Zakai <alonzakai@gmail.com>, 2016-09-16 16:48:20 -0700, , support shell test runner,,
2711,5126ebef968cd27ae3cb8f61357c95626c25ad25,lon Zakai <alonzakai@gmail.com>, 2016-09-16 16:45:37 -0700, , expression module name,,
2712,444d7f66182c091b2e207a7bc842309f0925e228,lon Zakai <alonzakai@gmail.com>, 2016-09-16 11:18:04 -0700, , call_import change call_import shared index space function,,
2713,7292ef9c863a0766c697cc0a77516447ff652820,lon Zakai <alonzakai@gmail.com>, 2016-09-16 10:34:44 -0700,699, merge pull request 699 webassembly opts fuzz bug fix,,
2714,88c92cbfe7d9f69fa8605fa406e5dbb2ac628172,lon Zakai <alonzakai@gmail.com>, 2016-09-15 20:20:29 -0700, , handle gettempret0 extra code happen emterpreter assertion mode,,
2715,a969d443230c82212164e4d3d3792ed723fee057,lon Zakai <alonzakai@gmail.com>, 2016-09-15 17:34:03 -0700, , fix remove unused bug checking safe conditionalize code,,
2716,22548bf789359be1f3c14aa41ffd4a23fda38542,erek Schuff <dschuff@chromium.org>, 2016-09-15 15:49:03 -0700, , update s2wasm 0xc change 698 several update s2wasm test add explicit drop emitted llvm already convert loop still modeled old way llvm wrap explicit block exit label also allows simplifying loop creation need post process implicit block loop body engine update 0xc update llvm model loop 0xc way remains compatible 0xb 0xc fix order call settee creating tee_locals add explicit drop creating _start entry function wrapper needed update dot_s test remove store result optimization minor update fix test auto updater fail subprocesses fail still seems validation failure building libc think stricter drop rule may source rather compiler least make binaryen test,,
2717,e567fa8675831e79f855cea2181fa58beb107e42,lon Zakai <alonzakai@gmail.com>, 2016-09-14 21:28:43 -0700,695, merge pull request 695 webassembly opts get optimizer par emscripten asm.js optimizer,,
2718,af3bea2786fe62070522b7fd7add4290a4cb4e6d,lon Zakai <alonzakai@gmail.com>, 2016-09-14 20:47:35 -0700, , add comment,,
2719,d90f13b7fd15b688f03fd8f1dad481d2f2236a59,lon Zakai <alonzakai@gmail.com>, 2016-09-14 20:38:16 -0700, , allocate newcopies demand coalesce local avoid allocation practice need lot e.g sqlite large,,
2720,76a621f50b579e24f4210c1e2d35a9b3f72b0f94,lon Zakai <alonzakai@gmail.com>, 2016-09-14 20:31:20 -0700, , coalesce local code cleanup,,
2721,77be43eb794dd0268fbf8298639ca2f717ef0663,lon Zakai <alonzakai@gmail.com>, 2016-09-14 20:08:35 -0700, , fix switch traversal order,,
2722,fe5d3c1f034770dd8fe948c3f2361d457fe182c0,lon Zakai <alonzakai@gmail.com>, 2016-09-14 17:30:16 -0700, , fix getcopies return type take account full range value,,
2723,63b499e3ec9bbdf4e79ab6d9dc198299516e8aec,gravelle-google <jgravelle@google.com>, 2016-09-14 15:32:57 -0700, , asmconstwalker assume segment exists 697 possible generate em_asm call empty content due ifdefs example get converted empty string asmconstwalker assumes point address pointing corresponding data section reasonable however case empty string create data section leave address uninitialized i.e set case asmconstwalker correct thing emit empty string metadata becomes empty call,,
2724,7d748241d3c69d0d87cf8d78174f174c234e406e,lon Zakai <alonzakai@gmail.com>, 2016-09-14 14:01:21 -0700, , optimizing block return value replacing sunk set value possible break unconditional condition must tee value break condition false jump new value local line,,
2725,d8f45bca8141f6d4dcd46c46ef354756728848c6,lon Zakai <alonzakai@gmail.com>, 2016-09-13 20:58:20 -0700, , avoid threading jump irreducible control flow hard know safe,,
2726,da407c06333857f153f9fd1dba780dfbc64677bc,lon Zakai <alonzakai@gmail.com>, 2016-09-13 17:50:17 -0700, , drop else arm necessary,,
2727,6cb6d65dd0c19dc5cba43d9367bcbdf691f80df3,lon Zakai <alonzakai@gmail.com>, 2016-09-13 16:58:03 -0700, , add extractfunction pas,,
2728,02e43255350e8d9336b658dfcfd73ed5696fbb58,lon Zakai <alonzakai@gmail.com>, 2016-09-13 16:42:23 -0700, , fix finalize,,
2729,39ed7c6477f24b06e7ec33d03a86d932aa9a6a5f,lon Zakai <alonzakai@gmail.com>, 2016-09-13 10:41:14 -0700, , update type turning br_if remove unused,,
2730,b4a77cf9b0780248c1a62c4409899ee1e23573ef,lon Zakai <alonzakai@gmail.com>, 2016-09-12 16:56:17 -0700, , fix bug turning br_if without checking reordering danger,,
2731,284865e47ed545beeff40629caa59f169885f560,lon Zakai <alonzakai@gmail.com>, 2016-09-12 12:24:52 -0700, , simple jump threading,,
2732,4d0fea95aec72f932efa83a0601b98c177e59a85,lon Zakai <alonzakai@gmail.com>, 2016-09-11 11:39:31 -0700, , thread relooper jump,,
2733,ff9757dd827f16e132fdab16bc615ba29f07b415,lon Zakai <alonzakai@gmail.com>, 2016-09-12 10:12:55 -0700, , clean database ensuring code using new preparetorun method,,
2734,2e543e392bdd24194f693191b6fb8c39aed0da93,lon Zakai <alonzakai@gmail.com>, 2016-09-12 10:05:09 -0700, , refactor pas hook creating proper way run code pas run,,
2735,d44d104c26c09e408dddcac6c382a66fc1db5812,lon Zakai <alonzakai@gmail.com>, 2016-09-12 08:31:53 -0700, , fix type remove unused first opportunity later,,
2736,4ed9d8f6608d768fe9ef2e2916e770d605e6b0e1,lon Zakai <alonzakai@gmail.com>, 2016-09-11 20:51:05 -0700, , remove final element vacuum carefully must preserve return value one,,
2737,6eccbd4c70fb31a788e6a93ee2a163bb7dc6d06b,lon Zakai <alonzakai@gmail.com>, 2016-09-11 18:56:58 -0700, , validate debug mode passrunner,,
2738,8a25e5ccdb2d43d9966247c737f963d53c4edb73,lon Zakai <alonzakai@gmail.com>, 2016-09-10 16:47:18 -0700, , run another optimize expression end asm2wasm,,
2739,3d6b218cc288bb1c9f234cb9a54796f512294107,lon Zakai <alonzakai@gmail.com>, 2016-09-10 16:05:04 -0700, , refactor optimizeboolean method,,
2740,7c0edee0dec829f6c739533aa4c4631978ff4632,lon Zakai <alonzakai@gmail.com>, 2016-09-10 14:28:19 -0700, , optimize else br_if block,,
2741,1c6a1375140c7b2ef720e706d7d97efe7140cdcc,lon Zakai <alonzakai@gmail.com>, 2016-09-10 14:24:11 -0700, , optimize eqz select br_if,,
2742,91b33ce4d692c221336f2d6d4345eb239ead401e,lon Zakai <alonzakai@gmail.com>, 2016-09-10 12:03:23 -0700, , optimization comment,,
2743,facfa01e3ffa3f89de4e2a2453fabf01be15eb4c,lon Zakai <alonzakai@gmail.com>, 2016-09-10 10:49:35 -0700, , test name fix,,
2744,3158ada0ee9f5e3d2daf019cfda545498b55285b,lon Zakai <alonzakai@gmail.com>, 2016-09-10 10:47:37 -0700, , sort local number total copy,,
2745,2427725215ad4a9a52c89c7d791a9277cc23db14,lon Zakai <alonzakai@gmail.com>, 2016-09-09 16:21:39 -0700, , take account removed copy even number local coalesce local,,
2746,1775473f735f40412899676469f3d7e8fbba93dc,lon Zakai <alonzakai@gmail.com>, 2016-09-08 17:20:23 -0700, , optimize loop ending removeunusedbrs rotate near end loop let break flow naturally removable turn br_if allows optimization case help remove structure,,
2747,ac078dcb1c677f83527693536cb1c06157095447,gravelle-google <jgravelle@google.com>, 2016-09-09 10:41:00 -0700, , add flag s2wasm export function 696 add flag s2wasm export grow_memory binaryen wasm.js post.js call back wasm order grow linear memory via function asm2wasm export called  change expose method s2wasm invoked flag move asmconstwalker wasm linker wasm emscripten add test memory growth s2wasm move wasm emscripten module move mutation gettablesegment separate method move emscripten metadata generation wasm emscripten also make asmconstwalker internal wasm emscripten module used metadata pas,,
2748,2065ecbe1ad951dc7263f76040b085019423ada9,lon Zakai <alonzakai@gmail.com>, 2016-09-08 11:38:29 -0700, , use debug wasm.js binaryen.js large without opts unwieldy,,
2749,e93486b7936153e21312bcc11f2c99ed9a151300,lon Zakai <alonzakai@gmail.com>, 2016-09-08 10:31:26 -0700, , enable udivmoddi4 opts asm2wasm,,
2750,282369b5430287c2397eb9e3cdd859ad12fa3937,lon Zakai <alonzakai@gmail.com>, 2016-09-07 15:59:58 -0700, , autodrop body else,,
2751,b518e564be25cc2705ab3993b71f0170feabac7e,lon Zakai <alonzakai@gmail.com>, 2016-09-07 15:37:07 -0700, , properly handle block return value vacuum remove final value directly dropped drop,,
2752,443d7a8e39c4ccfaeab6066160aae17e1fee8cc8,lon Zakai <alonzakai@gmail.com>, 2016-09-07 14:38:41 -0700, , vacuum drop better,,
2753,d8af68954309ef2cd34449a50b4d82d3bb96c7e7,lon Zakai <alonzakai@gmail.com>, 2016-09-06 20:59:08 -0700, , first pas simplifylocals focus single use local,,
2754,c02e76e5a61c507df4c48f644f3702b660f6fab9,lon Zakai <alonzakai@gmail.com>, 2016-09-06 17:59:56 -0700, , add test,,
2755,e9dfbe4de951ff6c3f3830fbcd1229d3d31a1190,lon Zakai <alonzakai@gmail.com>, 2016-09-06 17:01:06 -0700, , flip select eqz possible,,
2756,96ae0dda155b47299245a89e6a68fbb97ccda33f,lon Zakai <alonzakai@gmail.com>, 2016-09-06 16:44:50 -0700, , optimize set get global,,
2757,2b98366e3f4787fc8d3d21ba0c01a577b8ea0d66,lon Zakai <alonzakai@gmail.com>, 2016-09-06 16:38:16 -0700, , track globals effectanalyzer,,
2758,c2072c3f7c96eed6abbc7901c181bec92e3b9ced,lon Zakai <alonzakai@gmail.com>, 2016-09-06 16:14:13 -0700, , optimize load shift signed load,,
2759,779c2a20af50c351fb725b785a0ed6932143280d,lon Zakai <alonzakai@gmail.com>, 2016-09-06 14:47:12 -0700, , optimize eqz,,
2760,92ec03790fb9c6a5c72002eb739e017178eabf3e,lon Zakai <alonzakai@gmail.com>, 2016-09-06 14:45:32 -0700, , add option remove duplicate funcs name,,
2761,8f0726cc87494f6721baab55ec035fa3facae0e3,lon Zakai <alonzakai@gmail.com>, 2016-09-06 10:32:02 -0700, , use eqz optimization,,
2762,87f65f1623983bfc516ff4b222a3bb2537971837,lon Zakai <alonzakai@gmail.com>, 2016-09-07 16:50:03 -0700,694, merge pull request 694 webassembly binary order fix ordering bug fix window,,
2763,c24b9f9f6af61abd9ef124837bee41cbba35a8f2,lon Zakai <alonzakai@gmail.com>, 2016-09-07 10:38:49 -0700, , ensure create database demand avoiding global ctors,,
2764,5d3fbce683a80a2dcbe17d9e100d6a0a287412ff,lon Zakai <alonzakai@gmail.com>, 2016-09-06 09:46:37 -0700, , make sure use right order operation loading composite ints binary format reading,,
2765,135a20cd110d356d5d098a08a7b447205adaed7a,lon Zakai <alonzakai@gmail.com>, 2016-09-07 10:55:02 -0700,678, merge pull request 678 webassembly stack stack machine 0xc update,,
2766,dd197d3212ac28e778d372df9d03e58b21386648,lon Zakai <alonzakai@gmail.com>, 2016-09-07 10:21:45 -0700, , update wasm.js binaryen.js,,
2767,b116d3a45854f9c92e98c5526c1d6bccd3d9cfbe,lon Zakai <alonzakai@gmail.com>, 2016-09-07 10:01:32 -0700, , recognize platform colors.h nothing color,,
2768,52b0fe21ad36ef0e81193d4418916dbec7352fa4,lon Zakai <alonzakai@gmail.com>, 2016-09-02 17:42:34 -0700, , new validation check upcoming spec test,,
2769,a07797f1b1264e60912a8c18cb673b829ae0d1a5,lon Zakai <alonzakai@gmail.com>, 2016-09-02 15:54:21 -0700, , additional parsing support new spec thing,,
2770,6b216592116cdf23738df4aebabe7c6d759674e6,lon Zakai <alonzakai@gmail.com>, 2016-09-02 12:21:24 -0700, , new export syntax spec repo,,
2771,e62f54d9d38e8f6b999d5f18f052424b7d603b6b,lon Zakai <alonzakai@gmail.com>, 2016-08-31 16:53:12 -0700, , new import syntax spec repo,,
2772,f1c74afc64d9f195729e1ad7e203f27566248e26,lon Zakai <alonzakai@gmail.com>, 2016-08-30 16:36:06 -0700, , enable spec test,,
2773,0793f2f87ca023e1769c7e7d4c64fa16d7fec1a2,lon Zakai <alonzakai@gmail.com>, 2016-08-28 19:20:53 -0700, , add refinalize helper use properly handle asm.js import whose return value polymorphic,,
2774,d58adf43956c65615c9cd8d6c2f4c2a3cceff8bb,lon Zakai <alonzakai@gmail.com>, 2016-08-28 18:15:33 -0700, , support heap8 notation asm2wasm,,
2775,fd0160dafa25699404c1603adfcf965c75115854,lon Zakai <alonzakai@gmail.com>, 2016-08-28 11:17:36 -0700, , import memorybase tablebase,,
2776,28767f631cfdae86ff16ca112bc5b1855b1368c4,lon Zakai <alonzakai@gmail.com>, 2016-08-28 10:33:09 -0700, , import table,,
2777,42ad2cdbe5baa32dd1b0aea143a4e45f81e8b9b5,lon Zakai <alonzakai@gmail.com>, 2016-08-28 09:02:18 -0700,684, import memory 684,,
2778,304fef1d997f1c43249996737ef7ce6deb961481,lon Zakai <alonzakai@gmail.com>, 2016-08-28 08:31:32 -0700, , refactor reallocbuffer assignment location technically part mergememory,,
2779,88e8b7138e4e37ee092d9e0657257f079f8c279e,lon Zakai <alonzakai@gmail.com>, 2016-08-26 16:21:59 -0700, , update empty.fromast test output,,
2780,b8ff5de842769fe2c1cc7c6d626c29ac5d503572,lon Zakai <alonzakai@gmail.com>, 2016-08-24 14:46:36 -0700, , add asm2wasm option import mem init file apply memory segment memory initializer need asmjs asm2wasm mode use wasm opt check recreated wasts validity wasm shell would try execute add testing combined mode like asmjs interpret binary,,
2781,5e8ae1770e66d3a7ff00b3991195fd15c27ac65b,lon Zakai <alonzakai@gmail.com>, 2016-08-23 16:28:41 -0700, , fixme disable spec test bot,,
2782,fd3f6dbe31f07e142ac87f599e7315cfacbe61fe,lon Zakai <alonzakai@gmail.com>, 2016-08-23 16:08:37 -0700, , little optimization end asm2wasm processing,,
2783,e073b8f59e7cddd3a86443444f00b0b1f48691f1,lon Zakai <alonzakai@gmail.com>, 2016-08-23 15:55:11 -0700, , sink drop single arm,,
2784,323e32bc1ca73c92d81b7fe28fd54e62c2218801,lon Zakai <alonzakai@gmail.com>, 2016-08-23 15:05:40 -0700, , autodrop must run optimize asm2wasm otherwise input yet valid finalizecalls must autodrop drop thing finalizecalls changed,,
2785,e125ae76b29b84563892263663e66ff072852c99,lon Zakai <alonzakai@gmail.com>, 2016-08-23 14:38:29 -0700, , simplify local loop contain branching may invalidate branch,,
2786,8384ada03f9ffc5d09d2a39e1dfa49cd1e1c8686,lon Zakai <alonzakai@gmail.com>, 2016-08-23 12:22:37 -0700, , use cfgwalker,,
2787,14fe75e4d6e670d2e7f3e171d3d96c340b574eab,lon Zakai <alonzakai@gmail.com>, 2016-08-23 11:39:58 -0700, , replacing condition body must drop,,
2788,1d3f3dda67c24c148dce13734c21cdab487ddc87,lon Zakai <alonzakai@gmail.com>, 2016-08-23 11:33:57 -0700, , allow forcing full print mode env,,
2789,eb1def34a4183c5a4227686fee5209e2419ecce7,lon Zakai <alonzakai@gmail.com>, 2016-08-23 11:33:44 -0700, , add finalize call ifs,,
2790,c05ac6a217cb7657c7aa4e248bcc76d47e65983d,lon Zakai <alonzakai@gmail.com>, 2016-08-22 21:35:04 -0700, , add test loop finalization,,
2791,31fca059e62a10b0f1d3de3a3f517721a41a7595,lon Zakai <alonzakai@gmail.com>, 2016-08-22 21:29:14 -0700, , finalize loop asm2wasm necessary may need dropped,,
2792,c9b4cd0716ddd1b0def1cc7b26aa94355ab9ef6f,lon Zakai <alonzakai@gmail.com>, 2016-08-22 18:16:12 -0700, , drop first element block necessary,,
2793,d044aeab0c2f66c4bb8aa4b85f91c8af0ed633ae,lon Zakai <alonzakai@gmail.com>, 2016-08-22 16:03:20 -0700, , run vacuum autodrop asm2wasm optimizing,,
2794,f3bb9debe6af0576d76bda1580df2570e749bd36,lon Zakai <alonzakai@gmail.com>, 2016-08-22 16:01:10 -0700, , handle asm.js globals set return value used,,
2795,83e0dde16f381b28c1ee0d099de25444b0f34e58,lon Zakai <alonzakai@gmail.com>, 2016-08-22 14:58:38 -0700, , fix autodrop block handling block type might change modify content,,
2796,9c1947f84e13dcf79b50e53e6abbf6ce4db6573a,lon Zakai <alonzakai@gmail.com>, 2016-08-22 14:54:27 -0700, , improve full mode printing,,
2797,26070505e9885f6bb6dbf8a5039ef537b3c61ba2,lon Zakai <alonzakai@gmail.com>, 2016-08-22 14:32:00 -0700, , fix handling ifs looking break target,,
2798,3eb8c8b19383418416b7512a87e5353a9aa88cc0,lon Zakai <alonzakai@gmail.com>, 2016-08-22 14:02:05 -0700, , asm2wasm debugging asserts,,
2799,db5ee8d83eb32fc7fd007f9e3d9b46d748161ae7,lon Zakai <alonzakai@gmail.com>, 2016-08-22 12:05:20 -0700, , set type call target instead previous behavior asm.js context informed let add drop necessary,,
2800,266e922cddf0a5c78ed22f046eeebc053a9305c0,lon Zakai <alonzakai@gmail.com>, 2016-08-19 09:49:38 -0700, , use globals asm2wasm,,
2801,9660c200eff60c10266a85aae0637b495c4cba39,lon Zakai <alonzakai@gmail.com>, 2016-08-18 18:03:05 -0700, , get_global set_global use name instead index consistent refering global object e.g avoids ordering issue imported non imported globals,,
2802,a10ca64dc04bdba4fbf4a468604c0c88f62a4a8d,lon Zakai <alonzakai@gmail.com>, 2016-08-18 17:56:01 -0700, , import type globals,,
2803,793863a5d0e2f864f46dac86baa8e12c63b5b004,lon Zakai <alonzakai@gmail.com>, 2016-08-18 15:53:45 -0700, , import kind,,
2804,2e2e0241a10c0eccb89365c1b50217d6d0d3a386,lon Zakai <alonzakai@gmail.com>, 2016-08-18 11:15:39 -0700, , export kind,,
2805,e0809680bb82ecfc950aef97537827442b559fcf,lon Zakai <alonzakai@gmail.com>, 2016-08-16 21:23:29 -0700, , support data separate string data,,
2806,ada1e2671ac3095e62f52932d3358489fdf195f0,lon Zakai <alonzakai@gmail.com>, 2016-08-16 18:25:12 -0700, , add drop final element block used,,
2807,15a264ee9c67816693d92a5454ad7469f1f255ff,lon Zakai <alonzakai@gmail.com>, 2016-08-16 18:24:35 -0700, , add expressionstack traversal,,
2808,fbd3c89390220d304a93640664f7b8351523ca99,lon Zakai <alonzakai@gmail.com>, 2016-08-16 17:06:33 -0700, , update check.py skip list spec test,,
2809,094a4e8b4d1d8f163e8f8601d908727a37c7c97c,lon Zakai <alonzakai@gmail.com>, 2016-08-16 17:03:58 -0700, , update test,,
2810,1780339679e771f8ffe94ea5f7c38cb1272e0994,lon Zakai <alonzakai@gmail.com>, 2016-08-16 17:01:28 -0700, , grow_memory longer trap,,
2811,99410c94d3a03aad24a9a6f53f5fc137bd336e71,lon Zakai <alonzakai@gmail.com>, 2016-08-16 16:58:03 -0700, , interpreter debug asserts fixing,,
2812,38fdfdd800bc9c029ebd334ac9a08649b4d4d42e,lon Zakai <alonzakai@gmail.com>, 2016-08-16 16:57:01 -0700, , globals printing fix handle case module,,
2813,2f5c81810d827be6412056fc33188bdae622d55d,lon Zakai <alonzakai@gmail.com>, 2016-08-16 16:21:55 -0700, , setglobal return value,,
2814,ccec65e3d0c980bb1079fd0946f48dea069d224e,lon Zakai <alonzakai@gmail.com>, 2016-08-16 15:40:22 -0700, , additional validation,,
2815,a8356e139ffcbaa17715a2213a47a4c75051396a,lon Zakai <alonzakai@gmail.com>, 2016-08-16 15:17:49 -0700, , support memory data notation,,
2816,c774db526decf16bfd69d322afc45cc41b4ec070,lon Zakai <alonzakai@gmail.com>, 2016-08-16 15:17:25 -0700, , table needed call_indirect,,
2817,34d614a7e9026b793dd5b34d268fa7176d3771bd,lon Zakai <alonzakai@gmail.com>, 2016-08-16 14:54:01 -0700, , call_indirect structural need pas type name around,,
2818,8014a63b064a497ee4c18a70500f89fa51f75c79,lon Zakai <alonzakai@gmail.com>, 2016-08-09 15:04:25 -0700, , check store value type validation printing improvement,,
2819,b19f9feb9f45774272fa0f26f7a561b3b1bd9e3a,lon Zakai <alonzakai@gmail.com>, 2016-08-09 14:31:27 -0700, , print wasm type full mode,,
2820,5d1af1e3b6836a4cd621d114ef30b6cf52882356,lon Zakai <alonzakai@gmail.com>, 2016-08-09 14:18:53 -0700, , parse expression quoted string carefully,,
2821,f0bc2a7937f775e722740e9c6aeff010c7d0c639,lon Zakai <alonzakai@gmail.com>, 2016-08-09 11:43:31 -0700, , wip get spec test pas ignoring stacky stuff,,
2822,08293f0f451b398d3fa816c4d1bc6c87bbe6f102,lon Zakai <alonzakai@gmail.com>, 2016-08-09 13:47:17 -0700, , ignore unused return value function,,
2823,af7985c92a79f46eb1e10cd2964ad03c581e745e,lon Zakai <alonzakai@gmail.com>, 2016-08-09 12:09:23 -0700, , tolerate returning nop,,
2824,0b6faf409ff92f6c4f81b5dd2474f43a4238878c,lon Zakai <alonzakai@gmail.com>, 2016-08-09 11:54:31 -0700, , throw parse error bad result arity,,
2825,ef82c858b9ca6e1a9e34e79398195e7b549507aa,lon Zakai <alonzakai@gmail.com>, 2016-08-09 10:05:01 -0700, , wasm shell improvement print module built add option skip line,,
2826,15240ea1537d00f03af1abec8633e3890918be8e,lon Zakai <alonzakai@gmail.com>, 2016-08-09 09:20:22 -0700, , update binary version 0x0c,,
2827,fb5d853af156eeec3e12d85db6d134e8e17c43ad,lon Zakai <alonzakai@gmail.com>, 2016-08-07 13:56:40 -0700, , temp wasm backend test,,
2828,676be6636f69acbe05098b8308498340e607d6ee,lon Zakai <alonzakai@gmail.com>, 2016-08-07 12:15:13 -0700, , temp torture test,,
2829,abb498167e4c8178a5cb6cd22dcf106959eaa7d4,lon Zakai <alonzakai@gmail.com>, 2016-08-07 12:04:25 -0700, , depend order operation call varies compiler,,
2830,e9d057d097f3875be50bba44d874e66ad71e40f2,lon Zakai <alonzakai@gmail.com>, 2016-08-07 11:27:30 -0700, , fix compilation error recent clang,,
2831,f48690ceeea66cf44e8f64be6543d6ed6b9e6bb5,lon Zakai <alonzakai@gmail.com>, 2016-08-05 11:10:04 -0700, , select value must valid,,
2832,42155057a56a979eccb6d811671cfbf290cf429e,lon Zakai <alonzakai@gmail.com>, 2016-08-03 18:03:24 -0700, , move drop block dropping break well possible,,
2833,f30d9f6cde023b29409f73aba68f472c06c3b11c,lon Zakai <alonzakai@gmail.com>, 2016-08-03 12:12:24 -0700, , loop longer label upstream loop update,,
2834,72616971b2a35cbc37ea974e47c870556ef8ef4d,lon Zakai <alonzakai@gmail.com>, 2016-08-02 20:53:48 -0700, , call_indirect target end,,
2835,1cc33903a0b1b9dddd40674d792a59ee0d1bccf7,lon Zakai <alonzakai@gmail.com>, 2016-08-02 21:21:44 -0700, , cool return nop,,
2836,9d27d6818f83308c4853e3d8870d5b88a374453f,lon Zakai <alonzakai@gmail.com>, 2016-08-07 10:38:34 -0700, , add drop tee expression,,
2837,0783d60d9490666ab4b365e738b0132b378c6018,lon Zakai <alonzakai@gmail.com>, 2016-08-30 16:28:36 -0700, , remove wasm2asm test temporarily disable test,,
2838,9507066763db50de86db4d1ffead766f23d63116,lon Zakai <alonzakai@gmail.com>, 2016-08-07 10:38:04 -0700, , remove lower else longer needed,,
2839,f9020a0bdb3912a65f3f051b3b841fad412d2f13,lon Zakai <alonzakai@gmail.com>, 2016-08-07 10:37:15 -0700, , remove drop return value pas,,
2840,c846fb7dad4f18485979cf8c80c77bbb5d65c35f,lon Zakai <alonzakai@gmail.com>, 2016-07-29 15:02:29 -0700, , fix parsing split_wast,,
2841,981c7efa1ae4b27d1efd212284e61b77e89977a5,lon Zakai <alonzakai@gmail.com>, 2016-07-30 09:41:13 -0700, , make sure create unique implicit block name parser,,
2842,96c47400b8bce7b51d161432ff0cc03a9622cf3d,lon Zakai <alonzakai@gmail.com>, 2016-08-01 15:35:47 -0700, , debugging print,,
2843,b349c227aad37db102c644e6fe8030e9f939ef89,lon Zakai <alonzakai@gmail.com>, 2016-08-02 20:35:15 -0700, , better printing assert_invalids fail,,
2844,fbe77b167002e8a49225b607ca8c37dc7e4b41fe,oo Rong Jie <loorongjie@gmail.com>, 2016-09-08 00:49:50 +0800, , color support window 693,,
2845,f872f2d456921df1c2b256b9c448031371d8a713,asmus <rasmus@notion.se>, 2016-09-02 13:41:08 -0700, , improvement build js.sh api 679 add command line argument build js.sh specifying location emscripten also spread program argument separate line expose api allow writing wasm module access produced byte via api update bin binaryen.js bin wasm.js change build js.sh add exclude pattern .gitignore file generated build js.sh .ds_store macos change build js.sh use emscripten env var instead command line argument provide path emscripten improvement build add flag build js.sh build unoptimized unmangled version binaryen.js wasm.js output g.js suffix allow existence regular optimized build enables closure compiler non debug build add browser test expression parser wasm code gen requires wasm enabled browser add iterator interface symbol.iterator available add toarraybuffer typedarray available add compilewast sourcetext string arraybuffer module parsing compiling expression code wasm module change way binaryen.js exported allow usage commonjs amd umd envionments expose binaryen global better way work a.js generated check.py fix binaryen.js export global variable running test a.js inside module avoids polluting global e.g nodejs also fix spelling mistake better wasm detected message test binaryen.js browser.html small change error message build js.sh emscripten doe point directory change emcc args build js.sh investingating large number argument combination also add browser benchmark result emcc argument effect performance summarized doc http gist.github.com rsms enable inferring emscripten path looking path emscripten set env,,
2846,1651ac798181107f8547b58c4c129c977f2b11e8,lon Zakai <alonzakai@gmail.com>, 2016-09-01 15:42:41 -0700, , update readme stack machine plan 690 update readme stack machine plan see 663,,
2847,a1f3b147439885d61a86724632ed42ca50f83ad3,erek Schuff <dschuff@chromium.org>, 2016-08-31 16:05:39 -0700, , update waterfall build 10372 689 brings llvm change r28025 includes fix pr29127 includes disabling store result optimization remove extraneous wasm interpreter.h change,,
2848,b781f8518985e5aa07e0b8fd3d3ed800621150eb,erek Schuff <dschuff@chromium.org>, 2016-08-30 22:22:09 -0700, , asm.js style setjmp longjmp handling wasm 687 change call imported,,
2849,328824ae754b46a65b3fad55d840c816fdd3f347,heejin <aheejin@gmail.com>, 2016-08-30 21:35:28 -0700, , method name fix,,
2850,800c1f4ba3b658c9ea1b664329aa13d7069529a6,heejin <aheejin@gmail.com>, 2016-08-30 17:47:25 -0700, , asm.js style setjmp longjmp handling wasm add handling name,,
2851,4a04fc609133313ab18ef49599f365d3587af55b,eejin Ahn <aheejin@users.noreply.github.com>, 2016-08-26 11:29:18 -0700, , asm.js style setjmp longjmp support wasm 681 need export realloc well addition malloc free handled 4469. support asm.js style setjmp longjmp wasm need export realloc well addition malloc free handled 4469. savesetjmp realloc within realloc implemented glue code,,
2852,801baed1ca81d87380d56298289fe8cc0b4f1e1a,lon Zakai <alonzakai@gmail.com>, 2016-08-26 10:13:48 -0700,682, merge pull request 682 loganchien fix empty deadlock fix asm2wasm dead lock caused empty module,,
2853,2cb8b275caf090bf56cc78424aaa97766cd02fb6,eejin Ahn <aheejin@users.noreply.github.com>, 2016-08-26 08:56:42 -0700, , fix alignment bug .lcomm 680 parsing .lcomm directive s2wasm doe parse alignment number skip cause alignment bug case test case attached buf byte aligned doe align properly code generated  call foo i32.const   byte aligned patch fix bug,,
2854,a008d4fd7af3b04a3d351a03d56df7c28998690e,ogan Chien <tzuhsiang.chien@gmail.com>, 2016-08-26 02:13:00 +0800, , fix asm2wasm dead lock caused empty module commit fix asm2wasm dead lock asm2wasm compiling empty module i.e module without function without commit worker thread likely leave workermain decrease liveworkers early consequently never observe liveworkers numworkers,,
2855,a08643d788dd025345c63798f2e3ed7ca9b12e06,ogan Chien <tzuhsiang.chien@gmail.com>, 2016-08-26 02:09:35 +0800, , remove unnecessary type cast std thread forward argument main function properly cast void,,
2856,eb15a35ecbe2acd3437cff474686df8fde9bf42a,ogan Chien <tzuhsiang.chien@gmail.com>, 2016-08-26 02:06:27 +0800, , replace std unique new make_unique commit modernize code base replacing std unique_ptr new ...  make_unique ...  wasm make_unique ... step closer adopt std make_unique ...,,
2857,e168e2b9b6dd099c97c7ec313c3062d80fa1a9a8,lon Zakai <alonzakai@gmail.com>, 2016-08-18 17:03:47 -0700,677, merge pull request 677 sethsamuel patch update readme.md full source,,
2858,5e87de50ae9be4a3348623b7dc9c7d9cd7054fd9,eth Samuel <seth@airtime.com>, 2016-08-18 16:30:07 -0700, , update readme.md full source tripped complete beginner since copied example code readme rather test file,,
2859,e5e3bf39f25ed3a2fb45a9ca1f55d6828d81a3eb,lon Zakai <alonzakai@gmail.com>, 2016-08-16 09:40:59 -0700,668, merge pull request 668 webassembly table memory,,
2860,e268d939b86d8639d014b8036e7664d66b6a32e9,lon Zakai <alonzakai@gmail.com>, 2016-08-15 18:07:59 -0700, , interpreter debugging fix 672,,
2861,7851e3a7a3bea679f422116862c5801f1938806d,lon Zakai <alonzakai@gmail.com>, 2016-08-15 15:03:43 -0700, , update wasm.js,,
2862,113efcaa1e814304662ccc56312d8c59014a3a6c,lon Zakai <alonzakai@gmail.com>, 2016-08-15 14:29:57 -0700, , offset support table,,
2863,086c4c0f89bbe626f4c98ae95716084db0541b0d,lon Zakai <alonzakai@gmail.com>, 2016-08-12 17:26:07 -0700, , update wasm.js,,
2864,35bd9109ab07aa21f9e55214a61390fa61c93638,lon Zakai <alonzakai@gmail.com>, 2016-08-12 14:40:26 -0700, , support function table initial max size new printing format,,
2865,7e3917884152eda021cff9107b5f789aee92fb1b,lon Zakai <alonzakai@gmail.com>, 2016-08-12 11:57:12 -0700, , support expression segment offset,,
2866,79029eb346b721eacdaa28326fe8e7b50042611c,lon Zakai <alonzakai@gmail.com>, 2016-08-12 17:15:03 -0700, , parsing fix compiled parser 669,,
2867,1448c6bb26a60b26e70f7e913e56e0d0bf03b5da,eejin Ahn <aheejin@users.noreply.github.com>, 2016-08-11 21:02:33 -0700, , implement asm.js style exception handling wasm 664 implement asm.js style exception handling wasm convert invoke wrapper name generated llvm backend real invoke wrapper name expected javascript glue code required support wasm exception handling asm.js style llvm backend lower invoke func arg1 arg2 label invoke.cont unwind label lpad  ... code call invoke_sig func arg1 arg2 ... code sig mangled string generated based llvm level function signature llvm type lowered yet mangling scheme simply take llvm string representtion parameter type concatenate example name invoke wrapper function void foo struct mystruct int __invoke_void_ struct.mystruct _int function convert name invoke wrapper based lowered argument type return type example resulting new wrapper name becomes invoke_vii address comment change variable name camelcase add small semi handwritten test case export malloc free wasm available add test case exporting malloc free feature cosmetic file name change  add todo,,
2868,8e8c311aaeecf9b5433e4a651585914465731f0c,lon Zakai <alonzakai@gmail.com>, 2016-08-08 20:47:39 -0700, , demotefloat64 truncated value exactly limit return 665 update spec test,,
2869,49b99e6675424ff0866a670ed83f2393330198dd,eejin Ahn <aheejin@users.noreply.github.com>, 2016-08-05 08:41:48 -0700,615, fix parsing bug introduced 615 661 name getstrtosep skipequal strchr break continue  code snippet introduced 615 bug one word e.g .text line one word line skipequal also skip newline character end line strchr move cursor end next line effectively skipping whole next line,,
2870,e8da13d1e4d0b553ef103d196e83a93f0e64ed8a,erek Schuff <dschuff@chromium.org>, 2016-08-04 14:32:09 -0700, , update waterfall build revision 9397 662 includes torture test new expected pass,,
2871,e45b9a772f2e25cca99fcff9e0decaf7580a3236,ominic Chen <d.c.ddcc@gmail.com>, 2016-08-03 15:26:00 -0700,312, create dummy function prevent null miscomparisons necessary 658 resolve webassembly spec 312,,
2872,959bc7638aebb27fcdf7079daf0d0cafe845f56a,ominic Chen <d.c.ddcc@gmail.com>, 2016-08-02 18:01:26 -0700, , support pre assigning index function called indirectly 616 patch add support .indidx primitive pre assigns table index function called indirectly used upstream llvm webassembly backend support fine grained control flow integrity indirect function call emitting instrumentation indirect call site check destination index within certain range correspond disjoint equivalence class indirect call target reason primitive necessary layout table section determined webassembly linker executed indirect function table index mapping need known opt executed generate correct range checking llvm,,
2873,4268555dfd7887ff1110fb02717807f42616125e,ominic Chen <d.c.ddcc@gmail.com>, 2016-08-01 20:36:43 -0700, , update gitignore autogenerated test file 657,,
2874,cffbc4bc36f5e5f53e34f16ba4e687fdf130131d,lon Zakai <alonzakai@gmail.com>, 2016-07-28 14:16:19 -0700, , wast function type name desugaring changing spec 301 654,,
2875,3dc2e2579199fb0457846a22b3759ef16531b3da,ominic Chen <d.c.ddcc@gmail.com>, 2016-07-22 16:39:57 -0700, , fix trailing whitespace single character string checking map element presence eliminate explicit index counter 633,,
2876,b17a18ada8a6b4bdc8fcd9957f88f566bcbfa766,lon Zakai <alonzakai@gmail.com>, 2016-07-22 12:42:01 -0700, , binary support wasm globals 652,,
2877,fdbba5eb702a945c0a72ae5c4ab00c5579730f4a,lon Zakai <alonzakai@gmail.com>, 2016-07-21 16:07:30 -0700, , support wasm globals 650,,
2878,12abb63203788cba23f5c65a971a2af922e05bfc,lon Zakai <alonzakai@gmail.com>, 2016-07-20 21:31:46 -0700,648, merge pull request 648 webassembly relooper opts relooper improvement,,
2879,fa60ade30e03c6a13bbce26ff81c03ed1ae4da0b,lon Zakai <alonzakai@gmail.com>, 2016-07-20 20:05:28 -0700, , opts merge name possible block loop merging based name,,
2880,56901f8cb6fb6db4622937479d3a375744289ff0,lon Zakai <alonzakai@gmail.com>, 2016-07-20 14:23:13 -0700, , remove unused label loop general clean ups,,
2881,5e9058c9b108298406da7474c524e8d452431710,erek Schuff <dschuff@chromium.org>, 2016-07-20 15:45:21 -0700, , update waterfall build 8774 649 also update torture test file,,
2882,97ad14b01a9fccf1c52e79468b7983c16e0693a8,lon Zakai <alonzakai@gmail.com>, 2016-07-20 10:36:40 -0700, , avoid label variable usage relooper forward branch use stack block change irreducible control flow cause label variable usage,,
2883,b5642384c47ddb33187868e1d4cfc002797b2111,lon Zakai <alonzakai@gmail.com>, 2016-07-19 20:01:35 -0700, , add relooper testing improve existing,,
2884,9528fd93bb1317b9e22973b415b06326271dfd45,lon Zakai <alonzakai@gmail.com>, 2016-07-20 10:35:45 -0700, , improve validation error,,
2885,24a0f28153c65db7f489f3b6c4e3f5457f8eb1c0,erek Schuff <dschuff@chromium.org>, 2016-07-19 17:18:34 -0700, , update .gitignore readme.md wasm shell wasm opt split 647,,
2886,6f5062bc67c775f2bf9b5dfd80f57adb541783fc,lon Zakai <alonzakai@gmail.com>, 2016-07-18 15:37:47 -0700, , refactor calling makemultiple relooper,,
2887,8ae76ea9554267a5cf482b7f0443080656e13a5a,lon Zakai <alonzakai@gmail.com>, 2016-07-18 15:31:52 -0700, , remove unneeded param relooper,,
2888,1335cf78817d993a50c62a1c6395ffb35d0a0c63,lon Zakai <alonzakai@gmail.com>, 2016-07-18 12:18:15 -0700, , remove old code relooper,,
2889,4fcd68852b622e59da22af02f974ea840ebc92e9,lon Zakai <alonzakai@gmail.com>, 2016-07-18 12:18:03 -0700, , update relooper fuzzer,,
2890,9f0c103be14144488c9bc64823d63e2c398eaa6e,lon Zakai <alonzakai@gmail.com>, 2016-07-17 17:17:15 -0700,645, merge pull request 645 webassembly coalesce copy optimize remove many copy possible coalesce local opts,,
2891,4a6e828989ab6f627e6b35c66bd8c6130c9d65e2,lon Zakai <alonzakai@gmail.com>, 2016-07-17 15:31:49 -0700, , optimize updating interference copy table coalescelocals,,
2892,6fab89853edd16f2a0e1d31e753c6339cda751a5,lon Zakai <alonzakai@gmail.com>, 2016-07-17 14:50:33 -0700, , optimize type coalescelocals,,
2893,0c7476b4e1e1d6312c2c56021eb31cb12fbe350e,lon Zakai <alonzakai@gmail.com>, 2016-07-17 11:06:50 -0700, , try natural reverse order coalese local,,
2894,52497a2f34cb3cf98afe706f57e9a60d8ab4990d,lon Zakai <alonzakai@gmail.com>, 2016-07-16 11:40:24 -0700, , optimize remove many copy possible coalesce local,,
2895,cd61f6a1ae959cc3ee22f4e72f0f4ba73c2abbd1,lon Zakai <alonzakai@gmail.com>, 2016-07-16 16:27:38 -0700,644, merge pull request 644 webassembly fix debug fix dce bug non parallel mode happens debug mode,,
2896,07170478897c81aa973217ae8070d2d155d16b2e,lon Zakai <alonzakai@gmail.com>, 2016-07-16 15:59:11 -0700, , make sure create instance function parallel function even debug mode,,
2897,8597c85a6066bb2f814f5ab821d307d415493c58,lon Zakai <alonzakai@gmail.com>, 2016-07-16 15:51:20 -0700, , fix dce bug non parallel mode happens debug mode add debug testing,,
2898,ce8ee20462a465f00520dbe0dd2aa3e1601f4ca1,lon Zakai <alonzakai@gmail.com>, 2016-07-16 14:45:38 -0700, , fix unreachable constructor without allocator 643,,
2899,184cc11cee2a65d30c7696eb3284e132099e4acb,lon Zakai <alonzakai@gmail.com>, 2016-07-15 13:19:23 -0700, , optimize even nan 640,,
2900,8364330269151591f435ea0328aeee1c34decf79,lon Zakai <alonzakai@gmail.com>, 2016-07-15 10:48:26 -0700, , simplify using morgan rule float nan 638,,
2901,e4f99f6c81a5f23318787adba6fea1137dc755bb,lon Zakai <alonzakai@gmail.com>, 2016-07-14 17:59:33 -0700, , emit safe call i32 div rem precise mode asm2wasm trap 637,,
2902,4994da80284c337e5395ad836948ee38ffb967f1,ominic Chen <d.c.ddcc@gmail.com>, 2016-07-14 09:32:58 -0700, , fix waterfall submodule 634 brings update renaming binary 5936f05,,
2903,5936f053848a7e878096158e207f4e59fbd62ab6,lon Zakai <alonzakai@gmail.com>, 2016-07-13 16:30:40 -0700,632, merge pull request 632 webassembly tool renaming refactoring,,
2904,b0fc363b3a86ade1b5da54b3452bf00568b5b360,lon Zakai <alonzakai@gmail.com>, 2016-07-13 16:06:41 -0700, , validate properly wasm opt,,
2905,1cc8b854d6f32f44a2f60b3e090a805954e6377c,lon Zakai <alonzakai@gmail.com>, 2016-07-13 16:03:14 -0700, , use open,,
2906,9e2f21c9aa1993325b5a7043d206e2baf07e9180,lon Zakai <alonzakai@gmail.com>, 2016-07-13 12:15:20 -0700, , separate wasm opt wasm shell opt optimizes shell run wast shell test,,
2907,bb8a2aa3e5b02e297a2ef79131a511efe21d78d8,lon Zakai <alonzakai@gmail.com>, 2016-07-13 11:54:16 -0700, , emit empty array literal trace output 631 emit empty array literal trace output,,
2908,9d3801039d2e2f9738d2c4829ee59aa047da1cc6,lon Zakai <alonzakai@gmail.com>, 2016-07-13 11:44:18 -0700, , rename binaryen shell wasm shell,,
2909,1a07fc4cc4f729b116d41e6ea4a6a22207af53b8,ominic Chen <d.c.ddcc@gmail.com>, 2016-07-13 09:03:35 -0700, , handle alias without size e.g weak symbol add redefinition warning 630,,
2910,a5e2d3a40690e2a258e7e7b13edd6ba37230a7de,lon Zakai <alonzakai@gmail.com>, 2016-07-12 15:15:18 -0700, , handle param overloading asm2wasm ffis 629,,
2911,cd707e8ef504cca1e1a6a73580672af14bc40d38,lon Zakai <alonzakai@gmail.com>, 2016-07-12 15:00:26 -0700,627, merge pull request 627 webassembly trace api nice add tracing option api,,
2912,43ae9d622a33ca6ede829524a99bdec9f6b2bfc6,lon Zakai <alonzakai@gmail.com>, 2016-07-12 13:56:30 -0700, , comment,,
2913,9d9211beb0c1b1d66232eefba74b11987d02bbcc,lon Zakai <alonzakai@gmail.com>, 2016-07-11 15:38:06 -0700, , relooper tracing fix,,
2914,f050b6300ceb6039d608abc20939ebf241378cdc,lon Zakai <alonzakai@gmail.com>, 2016-07-11 15:22:58 -0700, , allow multiple trace,,
2915,91e38285dc27e5dbac3291258342835fc3e90eab,lon Zakai <alonzakai@gmail.com>, 2016-07-11 14:46:57 -0700, , add tracing option api log runnable program api call,,
2916,6bb2deb73d48e3d0a773bc6018fb02aa8e36e48d,lon Zakai <alonzakai@gmail.com>, 2016-07-12 12:06:40 -0700, , fix relooper leak,,
2917,8e936ce0635b66a3b2754292bab7c6c262b0bb1f,ominic Chen <d.c.ddcc@gmail.com>, 2016-07-11 14:29:59 -0700,4422, add support symbol assignment close 4422 615 add support alias object along existing support alias function,,
2918,8c2ef78baf1bd93afe48a9112eda56aea6cb884d,erek Schuff <dschuff@chromium.org>, 2016-07-11 13:52:19 -0700, , fix appveyor badge url unambiguous 626 url using name github project work appveyor project using github repo apparently true use unique url webassembly appveyor account project use status master branch instead global status,,
2919,7f4c1297eef1b5d846acbb52ad8ea9e4cb807683,eter Jas <necmon@yahoo.com>, 2016-07-11 22:42:21 +0300, , add appveyor.yml window 623 added job mingw bit msvc bit release configuration well msvc bit debug configuration added badge readme,,
2920,e74dcc425dfb95bbf0bb296fa0d6c4494355b6e1,lon Zakai <alonzakai@gmail.com>, 2016-07-07 12:49:51 -0700,622, merge pull request 622 webassembly duff device test add relooper test duff device api improvement,,
2921,4215d5f76f151fe2c4609db7f6041c4354851af3,lon Zakai <alonzakai@gmail.com>, 2016-07-07 10:53:59 -0700, , clarify local var param distinction,,
2922,b8685c30fc9b566cf0fcc397334e5e0fb20a2ecd,lon Zakai <alonzakai@gmail.com>, 2016-07-07 10:23:41 -0700, , add relooper test duff device showing irreducible control flow helper var use,,
2923,9455a8749e1bb2c4788c37495b9cd319f046f6ff,lon Zakai <alonzakai@gmail.com>, 2016-07-06 13:10:21 -0700,621, merge pull request 621 webassembly spec update spec test update,,
2924,fa050b2f9c1e4b68c5067487515d1f67ae9bf9cf,lon Zakai <alonzakai@gmail.com>, 2016-06-24 09:42:52 -0700, , update spec test handle flux call_indirect upstream,,
2925,5287706104bc07394e64bd73b1e1ddbc06b957b5,lon Zakai <alonzakai@gmail.com>, 2016-07-06 11:44:00 -0700, , fix parsing large ints,,
2926,d4d55f9c45740df17f9fc2896e54378c2561d58a,lon Zakai <alonzakai@gmail.com>, 2016-07-06 11:26:10 -0700, , print line number running test shell,,
2927,05d7bd3028793de007043eacc6e73b1c0cedb7ba,lon Zakai <alonzakai@gmail.com>, 2016-07-06 09:23:58 -0700,618, validate set_local type function 618 620,,
2928,50eff30d0ccda99dc2af71c1636f782cdf9dafa6,lon Zakai <alonzakai@gmail.com>, 2016-07-05 11:17:32 -0700, , printing fix 619 printing parsing fix,,
2929,0f8430da631fe3292d5ac50354a9a94fbef37308,lon Zakai <alonzakai@gmail.com>, 2016-07-05 10:39:23 -0700, , quote name format need,,
2930,8a1f1de079e9098df8ba2f51c108ea63f9707106,lon Zakai <alonzakai@gmail.com>, 2016-07-05 10:26:00 -0700, , add parse error array misindexing,,
2931,ef93042503a61e5a051536ba7f02b41fffcd69bc,lon Zakai <alonzakai@gmail.com>, 2016-07-02 10:05:23 -0700, , relooper switch support 617 support switch relooper api update relooper fuzzer switch,,
2932,44290db4fc014c8e032fb61f95ca9805d2ce57bc,lon Zakai <alonzakai@gmail.com>, 2016-06-30 16:45:00 -0700, , parallelize asm2wasm fixups 614,,
2933,b1975e28f0f188191e0588c5ad2f6a4a774128c6,lon Zakai <alonzakai@gmail.com>, 2016-06-29 16:28:20 -0700, , asm2wasm optimizes function built rely node staying fixups proper fixup end 612,,
2934,b7420eb7b37a589c7fc2fb3a59d91a36c19e6dcb,lon Zakai <alonzakai@gmail.com>, 2016-06-29 13:28:03 -0700,611, merge pull request 611 webassembly update update,,
2935,b3cd0621ff58d6a6e02c77ab29caa6efec097988,lon Zakai <alonzakai@gmail.com>, 2016-06-29 11:50:36 -0700, , asmjs test wasm.js test one hello world enough,,
2936,b182295345c10f6e19226fc6bee19ff7e7194f4d,lon Zakai <alonzakai@gmail.com>, 2016-06-29 10:02:23 -0700, , update wasm.js stop optimizing asm2wasm wasm.js,,
2937,a0fcba4f5f188268f8f1b4dc659cf63ec6aa1ffd,lon Zakai <alonzakai@gmail.com>, 2016-06-29 10:41:20 -0700, , improve validator error,,
2938,4ab71c88f4b25cb456f43b58bd8f30e8444206a9,lon Zakai <alonzakai@gmail.com>, 2016-06-29 11:15:08 -0700, , fix wasm interpreter bug checking indirect call params,,
2939,854f4d98e0d35bf129ab07e1c147dbb4db39a51c,lon Zakai <alonzakai@gmail.com>, 2016-06-29 09:11:04 -0700, , update emscripten submodule,,
2940,04fa143e85bc870c80c50aa57cdbce833df0aa2d,qd <remy.rakic@gmail.com>, 2016-06-29 16:24:17 +0200, , add option build libbinaryen static lib 610 option default cmake .triggers,,
2941,e26a90b337fbf31b62276afb8eb3a561544cf840,lon Zakai <alonzakai@gmail.com>, 2016-06-27 16:49:09 -0700, , avoid exception precompute pas 606,,
2942,6f0609ae19a3124010eaceba17de02c026cbb9df,lon Zakai <alonzakai@gmail.com>, 2016-06-27 16:05:28 -0700, , simplify wasm builder allocator never need access module 605,,
2943,29afb7a67fafb7b6325d5e8f60d37be0f65b0cb0,lon Zakai <alonzakai@gmail.com>, 2016-06-26 13:39:31 -0700, , make creating function type parallelizable api 603,,
2944,45b358706c86415c5982f9e777fa9e19a33b27a3,lon Zakai <alonzakai@gmail.com>, 2016-06-26 11:00:02 -0700,602, merge pull request 602 webassembly dsl nice use dsl,,
2945,87f3020cf4e666a6eb6620106e48ee042cd2f666,lon Zakai <alonzakai@gmail.com>, 2016-06-26 10:05:58 -0700, , rewrite use dsl pattern,,
2946,4ad7b4317d77c161cab69f5ae2b52b1583c96f11,lon Zakai <alonzakai@gmail.com>, 2016-06-26 10:04:46 -0700, , make makecallimport similar makecall assume import exist let function created way independent global state,,
2947,287f85e3e8c247dcec669f1169b8929e095b3dc9,lon Zakai <alonzakai@gmail.com>, 2016-06-24 16:16:50 -0700, , expression copying utility,,
2948,5f6b81a8c75eab046eb38b41f501cb604a5aab52,lon Zakai <alonzakai@gmail.com>, 2016-06-24 13:18:05 -0700, , add flexibleequals,,
2949,0da770d9660919b03553374d36ce1d5ca93cf78f,lon Zakai <alonzakai@gmail.com>, 2016-06-23 15:06:40 -0700, , add shared constants.h wasm constant,,
2950,c410d93d3af9813f889b4011f964d4becf43bc27,lon Zakai <alonzakai@gmail.com>, 2016-06-25 12:03:02 -0700, , add api method interpret module calling start method 601,,
2951,a88f8f275e068d6cdfb8879dc3bab1fe3201efbc,lon Zakai <alonzakai@gmail.com>, 2016-06-24 13:06:00 -0700, , finalize block properly relooper 600,,
2952,ed4e614430e8864c9f02508f5920c45fd137faf1,lon Zakai <alonzakai@gmail.com>, 2016-06-24 12:00:56 -0700, , add api 599,,
2953,51e7034690b3db8b18b2dee59e896181cf2eca24,lon Zakai <alonzakai@gmail.com>, 2016-06-23 13:13:48 -0700, , prefix make_unique binaryen_shell visual studio workarounds 595,,
2954,a654dc03933af4e6ff5f3b992300474263afbc26,ominic Chen <d.c.ddcc@gmail.com>, 2016-06-23 13:12:54 -0700, , make assertion error useful 597,,
2955,463bef3f8afeadb658612896384cc439897533a0,lon Zakai <alonzakai@gmail.com>, 2016-06-21 17:11:02 -0700,593, merge pull request 593 webassembly remove div0 explicit registering pass,,
2956,41689a5dde63c96eb1bf7daf50bc192979aa0452,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-06-11 01:08:30 +0300, , add initialization function pass avoid missing pas registration due linker dead code elimination fix 577,,
2957,cd788a1a62025fed3832672cb539dda4c4ce1329,lon Zakai <alonzakai@gmail.com>, 2016-06-21 16:03:10 -0700, , test api example api internal unstable tested codebase,,
2958,52821472b93e551375b8df43cc1b8a7bfc18e8f5,uj <jujjyl@gmail.com>, 2016-06-21 21:34:39 +0100, , build fix workarounds support visual studio 2013 build trouble new construct 581,,
2959,509319ac42a18b5a120ae9e45daac624affc07e1,lon Zakai <alonzakai@gmail.com>, 2016-06-18 22:49:26 +0100, , support binaryen shell 592,,
2960,0b19905878d0a34964163431257284ed380dc5bc,lon Zakai <alonzakai@gmail.com>, 2016-06-18 22:12:34 +0100, , update readme link new talk 591,,
2961,b06555e330e48a42918492086cbf4b24353ed62d,lon Zakai <alonzakai@gmail.com>, 2016-06-18 18:27:03 +0100,590, merge pull request 590 webassembly precompute precompute expression compile time possible,,
2962,d6bda73f13fe17434f3bd78b58da6961d297361a,lon Zakai <alonzakai@gmail.com>, 2016-06-18 17:55:44 +0100, , run precompute every optimize instruction,,
2963,e85c594b0a8897da88d976859159db7f2d994b61,lon Zakai <alonzakai@gmail.com>, 2016-06-18 16:44:01 +0100, , add precompute pas,,
2964,d82816166d9cfb7912368af20dffe8b8ffa5e7cf,lon Zakai <alonzakai@gmail.com>, 2016-06-18 16:22:56 +0100, , refactor interpreter code provide expression executor standalone full funtime execution,,
2965,ec931e717a07dc21f22ac543ab0fe5af78879cc8,lon Zakai <alonzakai@gmail.com>, 2016-06-17 17:01:14 +0100,589, merge pull request 589 webassembly spec fix spec fix,,
2966,40a40a9bf6dd5385dfa703e98a376222f03882aa,lon Zakai <alonzakai@gmail.com>, 2016-06-17 16:41:37 +0100, , support parse error .fail test,,
2967,873a1d5db152530f089a009aa4ce8005c3bd9e07,lon Zakai <alonzakai@gmail.com>, 2016-06-17 16:40:19 +0100, , fix assert proper error bad func decls,,
2968,fe8e92e1a8bb3079a9f13e007022536836bd6b58,lon Zakai <alonzakai@gmail.com>, 2016-06-17 16:22:36 +0100, , fix interpreter indirect call argument checking call might flow,,
2969,6fdd9dd2137a563bc41a85cf45178cc734e499a2,erek Schuff <dschuff@chromium.org>, 2016-06-14 15:46:30 -0700, , create dyncall thunk function i64 result params 586 dyncall thunk meant used emscripten web however web function i64 result params allowed exported,,
2970,8f524e8f926b6993878f02334e730fe5f65096f6,erek Schuff <dschuff@chromium.org>, 2016-06-14 11:32:10 -0700, , add mode wasm validator check web environment constraint 584 web embedding module allowed import export function i64 params return value add mode validator check add flag s2wasm wasm enable disable check also add test,,
2971,24fa19071d309c59eee5c2bd966139eaab45b5ba,lon Zakai <alonzakai@gmail.com>, 2016-06-11 19:21:48 -0700,583, merge pull request 583 webassembly fix improve optimization,,
2972,9a4007e0ba7a77e1eed742278cd24a3914daae30,lon Zakai <alonzakai@gmail.com>, 2016-06-11 17:42:05 -0700, , run remove unused simplify local,,
2973,a3c339c259d0dafc87fac565fac308e9699726f9,lon Zakai <alonzakai@gmail.com>, 2016-06-11 17:31:12 -0700, , fix br_if value optimization remove unused,,
2974,996262dcdb88388717aab72bd8f37841aaabb24c,erek Schuff <dschuff@chromium.org>, 2016-06-10 13:08:58 -0700, , s2wasm validate result module 574 add s2wasm option validate disable validation debugging purpose also fix several validation error adding call finalize creating expression ensuring import created earlier linker getimportthunk,,
2975,59542c98459771905ef25c5fe48079f3353d6869,lon Zakai <alonzakai@gmail.com>, 2016-06-08 21:31:37 -0700, , use wasm_unused place fix compiler warning error unused variable use asserts 579,,
2976,71f276cecc03a1af68a9bc349df9ba2d23c85ea3,lon Zakai <alonzakai@gmail.com>, 2016-06-08 21:30:57 -0700, , add pas remove memory segment 580,,
2977,3bec8b4c39d86c165fd80a7c046bceaa7ffbc54f,eter Jas <necmon@yahoo.com>, 2016-06-07 02:05:39 +0300, , updated .gitignore meta noise 576,,
2978,74906514eed3196212b370f09946ba76d1fccee3,lon Zakai <alonzakai@gmail.com>, 2016-06-06 15:53:09 -0700, , fix type one none concrete still none 575,,
2979,208d1806972d20f22f76ab3a880310d3104d1603,lon Zakai <alonzakai@gmail.com>, 2016-06-06 11:10:54 -0700, , handle break function implicit block scope 573,,
2980,1a4c50e562cf5ed1e18e2bbbf6eec839cf4d28f2,lexander MeiÃner <AlexanderMeissner@gmx.net>, 2016-06-06 19:03:32 +0200, , fixed missing type assignment host operation s2wasm 572,,
2981,ca46b0772a8e7bb8d2237a27dcf538117842def4,lon Zakai <alonzakai@gmail.com>, 2016-06-04 11:37:08 -0700,570, start parse string find empty invalid 570 571,,
2982,b6668d8ca5b08bdf69f057ecdc6ad8a588429761,lon Zakai <alonzakai@gmail.com>, 2016-06-03 16:31:49 -0700, , make call_indirect type name dependency module would break consistency make parallel pass tricky 568,,
2983,c8ec0cd6c053f9e68daf4ba4fdf8137957c1b236,erek Schuff <dschuff@chromium.org>, 2016-06-03 15:48:53 -0700, , generate duplicate import thunk link time 569 previously every address take import would cause new thunk generated check getimportthunk thunk exists already return,,
2984,f6b5c1e5c1c0de26fd078d336782508dd0186820,lon Zakai <alonzakai@gmail.com>, 2016-06-03 14:55:29 -0700, , move function parallelism pas pas runner allows efficient parallel execution 564,,
2985,b76818e23eab75876f1981800ef12d55ce2f579b,lon Zakai <alonzakai@gmail.com>, 2016-06-03 14:21:02 -0700,567, merge pull request 567 webassembly spec test update misc fix new spec test,,
2986,1826f4132d52a1c767f012fad5d1ab3e746e632b,erek Schuff <dschuff@chromium.org>, 2016-06-03 13:53:53 -0700, , update waterfall 7268 566 also update torture test brings .functype directive cause test pas,,
2987,74bc353d4fedd9fff308aecfae183b6b7525c7d3,lon Zakai <alonzakai@gmail.com>, 2016-06-03 13:52:38 -0700, , check function type parsing,,
2988,eafdf9dc78e858b6d823771a2add8302564d93ef,lon Zakai <alonzakai@gmail.com>, 2016-06-03 13:52:26 -0700, , trap invalid call_indirects bad argument type provided,,
2989,4f323502ff00e0ca4a45759ed958f508812a7781,lon Zakai <alonzakai@gmail.com>, 2016-06-03 13:40:17 -0700, , improve parsing error text,,
2990,eb0ce0ea23ae6d74da3d2d805faf37ce8aeb8b8e,lon Zakai <alonzakai@gmail.com>, 2016-06-03 13:29:29 -0700, , check local parser,,
2991,cfc0029a95c8be562a595adb507b0aa171f01a31,lon Zakai <alonzakai@gmail.com>, 2016-06-03 12:07:38 -0700, , check call carefully validator,,
2992,f0e79fc18be7013f43f79317836dc71d623c40d6,lon Zakai <alonzakai@gmail.com>, 2016-06-03 10:48:14 -0700, , add pas print function name size 562,,
2993,e2a6ee77c6acf518036259ca11c18e9abc834b19,erek Schuff <dschuff@chromium.org>, 2016-06-03 10:27:03 -0700, , fix leak functiontype parsefunctype already module 563 pas ownership wasm module,,
2994,f64e1852dc065c17d7c78b43a7cfb7fbe64e3cb4,lon Zakai <alonzakai@gmail.com>, 2016-06-02 20:20:23 -0700,560, merge pull request 560 webassembly func running option optimize building module,,
2995,e4a81f9ea487441e0c01f399d15026672fdeadf9,lon Zakai <alonzakai@gmail.com>, 2016-05-30 16:35:11 -0700, , add faster incremental module building optimizing,,
2996,bed10e24a9a1818e8583a1f3b30a6dfdd3b57bfa,lon Zakai <alonzakai@gmail.com>, 2016-06-01 16:19:22 -0700, , refactor getnumcores method,,
2997,c8a57dee5e9c99c51433f3d08da3edc2aadb0140,lon Zakai <alonzakai@gmail.com>, 2016-05-30 12:08:17 -0700, , add option run pass individual function get default optimization pass suitable refactor visitfunction module,,
2998,b37bd96ea3345cf7015e9e925e0d33524cd1c3db,lon Zakai <alonzakai@gmail.com>, 2016-06-02 16:05:43 -0700, , use clang waterfall 557 avoids relying clang llvm sometimes see 553,,
2999,803a9f108d750eff57e9f88e3fadd48308acefc8,erek Schuff <dschuff@chromium.org>, 2016-06-02 14:59:16 -0700, , update waterfall 7426 559 also update torture test brings clang compiler library http github.com webassembly binaryen pull 557,,
3000,d4dc216888d5028f41e6189e65001694e49a66c2,erek Schuff <dschuff@chromium.org>, 2016-06-02 14:30:30 -0700,392, generate thunk address taken import 554 emscripten code take address function implemented javascript exposed via import wasm import linear memory address wasm need generate thunk target indirect call call import directly facilited new directive .functype declares type function declared defined fix http github.com webassembly binaryen issue 392,,
3001,d595e89003dc3636952de4c561679e3a077e6015,lon Zakai <alonzakai@gmail.com>, 2016-06-01 13:00:08 -0700, , missing test file,,
3002,9087f362507bdf7a033c3d3b24baba1318689877,ven-Hendrik Haase <svenstaro@gmail.com>, 2016-06-01 21:49:46 +0200, , specify version python interpreter 547 without script work distros use python3 default,,
3003,ee909d82d0e5f7f11d280df44b4c27f15eae0404,lon Zakai <alonzakai@gmail.com>, 2016-06-01 12:34:17 -0700,555, merge pull request 555 webassembly spec test fix spec test fix,,
3004,db2ae40be2c52c0821da355285384aa0db8fc948,lon Zakai <alonzakai@gmail.com>, 2016-06-01 12:33:55 -0700, , use zero init value local coalesce param 556,,
3005,f740552daa7c717f3cc0c3c266fa84549b0f203d,lon Zakai <alonzakai@gmail.com>, 2016-06-01 11:42:45 -0700, , invalid break label parse error,,
3006,031c55702bd3770cbf014b7f834e8765dd22a158,lon Zakai <alonzakai@gmail.com>, 2016-06-01 11:11:25 -0700, , note default type checking switch,,
3007,208959079a9c4b97a2457e8d6b11c5bc295c0754,lon Zakai <alonzakai@gmail.com>, 2016-06-01 10:53:52 -0700,552, merge pull request 552 webassembly dup asm2wasm export asm2wasm regression fix,,
3008,9e9e6c29f3734c1fa871d36d72fbbe30b6f3f2ae,lon Zakai <alonzakai@gmail.com>, 2016-05-31 15:06:11 -0700, , handle stack frame skip jumping stack update wasm.js,,
3009,b43d48965bcb26e2a0388c308d87963e70685186,ominic Chen <d.c.ddcc@gmail.com>, 2016-05-31 19:31:38 -0700, , fix bug found using afl 546,,
3010,6c1baf1971adaf9f8a393943d4ba31d280e04e77,lon Zakai <alonzakai@gmail.com>, 2016-05-31 14:46:58 -0700, , handle duplicate export asm2wasm,,
3011,fa7573de6c3b17f831217e30745ea1092935eb54,lon Zakai <alonzakai@gmail.com>, 2016-05-30 09:54:23 -0700, , refactor walk logic walk dowalk method regular api clearer overridden 551,,
3012,f33f1dbbee7b3f95d8437f1ee60c9075013858b6,lon Zakai <alonzakai@gmail.com>, 2016-05-29 16:39:17 -0700,550, merge pull request 550 webassembly dfe nice duplicate function elimination,,
3013,44aeb85b2fa2c743e2d0f7e00349f99cfcbc7639,lon Zakai <alonzakai@gmail.com>, 2016-05-28 15:03:26 -0700, , add pas eliminates duplicate function,,
3014,b426fda5e43f612ddd122b6aa25a8dd0a549b64f,lon Zakai <alonzakai@gmail.com>, 2016-05-28 15:02:07 -0700, , add hash utility support hashing comparing expression,,
3015,5615ca92dd2c3c60bcc13d87cbb20267495a8a89,lon Zakai <alonzakai@gmail.com>, 2016-05-28 15:01:35 -0700, , canonicalize order reorder local using first appearance break tie,,
3016,4c07db98d1d02856549c1478902d4d44ad57c50c,lon Zakai <alonzakai@gmail.com>, 2016-05-28 14:53:17 -0700, , note number function metric,,
3017,2ae825133430a71e3b16a2699edf08ae63a03d7f,lon Zakai <alonzakai@gmail.com>, 2016-05-28 14:52:48 -0700, , add getbits equal helper funcs literal,,
3018,1715b4a1ec845f1dd6b08f48a599f346beb0f758,lon Zakai <alonzakai@gmail.com>, 2016-05-26 21:06:40 -0700, , update function map 545,,
3019,0ffa458ed98c71b8106ff659c3335d0408e1fe28,ury Delendik <ydelendik@mozilla.com>, 2016-05-26 19:43:28 -0500,544, merge pull request 544 yurydelendik parse debug allows parsing debug information file,,
3020,1963afd6894c1f408b65a0f893e009b4e9f36e55,ury Delendik <ydelendik@mozilla.com>, 2016-05-26 19:26:36 -0500, , allows parsing debug information file currently ignores information also allows parse file asm verbose true,,
3021,45618ddc8eee4f288a2d11d1afe763dbdeab8559,lon Zakai <alonzakai@gmail.com>, 2016-05-25 19:27:24 -0700,543, merge pull request 543 webassembly fix merge block fix merge block named block,,
3022,948f6fe7c4d2a9256310c07c54724685f27874ac,ichael Bebenita <mbebenita@gmail.com>, 2016-05-25 19:26:57 -0700, , add remove unused function pas 463,,
3023,5b6918ec2245a6e3c512dcee45766731b49805cc,lon Zakai <alonzakai@gmail.com>, 2016-05-25 17:54:56 -0700, , add merge block test,,
3024,bbff98549d2c29b050ea1b867c226ec09c9d78f5,lon Zakai <alonzakai@gmail.com>, 2016-05-25 17:51:17 -0700, , fix merge block bug merged named block,,
3025,21d93d50b8eba98ca619897528fb707d1b15e265,lon Zakai <alonzakai@gmail.com>, 2016-05-25 17:50:11 -0700, , allow pass test one pas,,
3026,43a9ecd084b828bb715211d91bf412727ff58cff,lon Zakai <alonzakai@gmail.com>, 2016-05-25 13:16:10 -0700, , update spec test handle new .fail test 541,,
3027,e89c819e741f3a2059a24b30c8eaa1c8e213b924,lon Zakai <alonzakai@gmail.com>, 2016-05-24 16:07:11 -0700,540, merge pull request 540 webassembly merge block merge block improvement,,
3028,f1384f6c98765de6ac9777ae44661c1a713a6e11,lon Zakai <alonzakai@gmail.com>, 2016-05-24 12:02:06 -0700, , move block outside merge block merged later,,
3029,ab05c684e570951c39e081cc15fa659296445186,lon Zakai <alonzakai@gmail.com>, 2016-05-24 11:58:37 -0700, , show parse error empty stack,,
3030,10d1257f6fa637415b4b4b1becb8055f3d9ea93d,lon Zakai <alonzakai@gmail.com>, 2016-05-24 11:58:17 -0700, , catch parse exception parsing,,
3031,3a993f98daefc9a851824f5099b76b4a427f81ed,lon Zakai <alonzakai@gmail.com>, 2016-05-23 19:59:06 -0700, , add pas drop return value set_local store 539,,
3032,57ec2122cf0971d7869e56699b768026268745ea,lon Zakai <alonzakai@gmail.com>, 2016-05-23 17:20:33 -0700,538, merge pull request 538 webassembly asm2wasm validation validation,,
3033,9a59635c2148511cb72cbd9e1f9cf1026b4a1f3a,lon Zakai <alonzakai@gmail.com>, 2016-05-23 16:50:06 -0700, , fix isresultused bug ifs,,
3034,8022c3c1bff02f2c33f37ac1a0566a38e78fbff9,lon Zakai <alonzakai@gmail.com>, 2016-05-23 16:01:01 -0700, , update wasm.js,,
3035,6d280bb282553b5eb832729a42b919c36926ca90,lon Zakai <alonzakai@gmail.com>, 2016-05-23 15:51:09 -0700, , validate running pass shell,,
3036,03d5f2a3d11151887d8c2a1a0ef93011b75979c7,lon Zakai <alonzakai@gmail.com>, 2016-05-23 15:11:26 -0700, , validate asm2wasm fix validation error,,
3037,a78daa409853b106228d0cca0c5564222c489e04,an Gohman <sunfish@mozilla.com>, 2016-05-23 05:12:42 -0700, , avoid redundant return dyncall function 533,,
3038,f5aad6d1614ca32e7ade296dc9bce8c7c74d3f63,lon Zakai <alonzakai@gmail.com>, 2016-05-22 21:23:18 -0700, , dead code elimination pas 536,,
3039,5d16d4b3b344aa1dbe07deff0d282adea6f8c369,lon Zakai <alonzakai@gmail.com>, 2016-05-22 15:05:02 -0700, , depend asm.js type detection binary formation asm2wasm use full asm global info 535,,
3040,89a3fcbc78903d1a904354dd6eb2c4bd1ac44e8e,an Gohman <sunfish@mozilla.com>, 2016-05-20 20:08:54 -0700, , update s2wasm llvm change regenerate test 532,,
3041,b28a3a6eba4c4fbe64333dd544977a0c4f37c650,lon Zakai <alonzakai@gmail.com>, 2016-05-20 11:21:47 -0700,531, merge pull request 531 webassembly fix type checking fix,,
3042,a2f3fbdc80b72fcf04a789e723de7f5561387dcc,lon Zakai <alonzakai@gmail.com>, 2016-05-20 10:48:10 -0700, , type check return type fully,,
3043,e9c7c20ef84fc5a66823b9fa871f54f98a8a714a,lon Zakai <alonzakai@gmail.com>, 2016-05-20 10:38:48 -0700, , type check loop output type properly,,
3044,fe93b86e0e1dd470c3508fa2ef9f3affbf18b146,lon Zakai <alonzakai@gmail.com>, 2016-05-20 10:20:29 -0700, , makemaybeblock alloc nop nothing,,
3045,41d11f1feb622494aeae9f7dd6a0115972b077e4,lon Zakai <alonzakai@gmail.com>, 2016-05-20 10:05:39 -0700, , fix loop parsing,,
3046,244da920eedafec42da4e91b83c09d0021a36a7f,lon Zakai <alonzakai@gmail.com>, 2016-05-19 19:57:14 -0700, , notice branch effectanalyzer internal control flow ignored 530,,
3047,373cfe3a4364d657b04ea9c35e84324e9edec097,an Gohman <sunfish@mozilla.com>, 2016-05-19 17:05:58 -0700, , allow implicit function return 529,,
3048,e396635727ca7fd571aa4fd19ba310942767307e,lon Zakai <alonzakai@gmail.com>, 2016-05-19 16:35:32 -0700,528, merge pull request 528 webassembly vacuum better vacuum improvement,,
3049,579010855a134a78cab8ed129cbbbe52bd52a380,lon Zakai <alonzakai@gmail.com>, 2016-05-19 16:13:08 -0700, , vacuum top function,,
3050,fe1bda7da797e5586d39122aec931a8a84df4ac7,lon Zakai <alonzakai@gmail.com>, 2016-05-19 15:40:23 -0700, , vacuum pass create garbage make total time better,,
3051,322e89791721ce5130242c87eb1c01163f0ad21d,lon Zakai <alonzakai@gmail.com>, 2016-05-19 15:26:43 -0700, , add opt testing asm2wasm,,
3052,08abcbb9211cc1452a8b6420d4e160aaad061e01,lon Zakai <alonzakai@gmail.com>, 2016-05-19 15:12:48 -0700, , vacuum away everything tied,,
3053,1f4d6d05d48cf60f6761525942815a8fefc92313,ury Delendik <ydelendik@mozilla.com>, 2016-05-19 15:09:21 -0500, , allows running check.py mac osx 517 also try cleanup example.dsym file hide,,
3054,63c7898825c50fbfce9a0ec54113ab2274c7a077,an Gohman <sunfish@mozilla.com>, 2016-05-19 11:34:31 -0700, , avoid double dollarsigns s2wasm local name 527 avoid double dollarsigns s2wasm local name recognize part syntax register name exclude forming wasm local name change name like fix comment,,
3055,d541e4fdaff224d61c9ff0036d707d423de76ed8,I3Guy <pcguy49@yahoo.com>, 2016-05-19 13:04:11 -0400, , added static_cast prevent direct conversion subclass void 502,,
3056,ce03a34d97b1afa3b7abd88d04bbbaffe346f1d9,lon Zakai <alonzakai@gmail.com>, 2016-05-18 23:25:55 -0700,526, merge pull request 526 webassembly spec test update spec test update many validation fix,,
3057,50c94e3e9fb6cdf043c7841d73299ee8be5d2cbd,lon Zakai <alonzakai@gmail.com>, 2016-05-18 20:28:43 -0700, , store local vector interpreter update wasm.js also fix address usage wasm.js,,
3058,d8adcc182d69974096063ad57b50e8fec3fcccf8,lon Zakai <alonzakai@gmail.com>, 2016-05-18 18:45:32 -0700, , careful checking total memory limit bit,,
3059,013644bd98de23f0e1c303dd72994956486b455a,lon Zakai <alonzakai@gmail.com>, 2016-05-18 18:11:29 -0700, , finalize s2wasm block end constantly,,
3060,9070ff54453bec5e90727cc586b4a702b54628d4,lon Zakai <alonzakai@gmail.com>, 2016-05-18 17:32:43 -0700, , use separate internal opcodes binary variant,,
3061,b88e9de7df6a8b2ba9381e27dff3aa3dff64f764,lon Zakai <alonzakai@gmail.com>, 2016-05-18 15:49:41 -0700, , use separate internal opcodes unary variant,,
3062,cf224aa34a3660aa5154091759d396936e946b28,lon Zakai <alonzakai@gmail.com>, 2016-05-18 11:39:22 -0700, , spec test update many validation fix,,
3063,4a7080b8dc98422b63dc5db3245029d3f689de15,lon Zakai <alonzakai@gmail.com>, 2016-05-17 21:29:54 -0700, , avoid deprecated random_shuffle 524,,
3064,9700fca02229f4c3e15425a2396740384f7736cb,lon Zakai <alonzakai@gmail.com>, 2016-05-17 18:22:00 -0700, , emit extra unnecessary block loop binary format 523,,
3065,3f137abe061fd060b2c9bbffcb8796144ecbada9,lon Zakai <alonzakai@gmail.com>, 2016-05-17 17:06:56 -0700,518, merge pull request 518 webassembly true learning activate true learning local coalescing,,
3066,7dc410d13171219af8903480539d393979d75b8b,an Gohman <sunfish@mozilla.com>, 2016-05-17 17:06:35 -0700, , print newline end metadata line 521,,
3067,748f581e712bb0715f19867af5b251d970c682f6,an Gohman <sunfish@mozilla.com>, 2016-05-17 16:24:04 -0700,519, merge pull request 519 webassembly drop rename discard drop syntax,,
3068,0231f518d830c31545448e515b515eb5bba5ab4d,lon Zakai <alonzakai@gmail.com>, 2016-05-17 14:57:48 -0700, , learn using multiple generation,,
3069,ecf110239a8cada6de219cee8bd5c7b178c9e51b,lon Zakai <alonzakai@gmail.com>, 2016-05-17 14:57:05 -0700, , tweak learning index picking,,
3070,e420a217b8dd0253379deaae1275209becbc511f,an Gohman <sunfish@mozilla.com>, 2016-05-17 15:49:02 -0700, , rename discard drop syntax shorter consistent terminology used discus webassembly,,
3071,a76f0a4a17a0da8431e5a0ab2ab3078991460196,lon Zakai <alonzakai@gmail.com>, 2016-05-17 14:31:22 -0700, , calculate interference finishing liveness flow 516,,
3072,92cbfdb2fb58986724bb796489b8138d217ca5f1,lon Zakai <alonzakai@gmail.com>, 2016-05-17 13:42:26 -0700,515, merge pull request 515 webassembly learn coloring smarter local coalescing,,
3073,5d76c53d350cc4565c8c4f4298c8fd346ca8fcb5,lon Zakai <alonzakai@gmail.com>, 2016-05-16 20:44:02 -0700, , add learning local coalescer,,
3074,700846f46148cc92485c59b37b46272978ab3e42,lon Zakai <alonzakai@gmail.com>, 2016-05-16 21:40:46 -0700, , allow inheriting function parallel class add hook creation,,
3075,e86d46fb38ece8c35e50bf1f483cac49796a8b39,lon Zakai <alonzakai@gmail.com>, 2016-05-16 20:45:02 -0700, , add genetic learner,,
3076,d3b2d24fddc1f7aa065a8ea2d324e94fffec2c0f,lon Zakai <alonzakai@gmail.com>, 2016-05-16 20:27:01 -0700, , refactor index picking,,
3077,90d4fa0164ab0fad4ca7b60489c43eebd41ed9e3,ury Delendik <ydelendik@mozilla.com>, 2016-05-17 12:49:51 -0500, , fix wasm build address refactoring 514,,
3078,5302ec27da80e035f8f97731fcdddc0421278f14,erek Schuff <dschuff@chromium.org>, 2016-05-17 13:37:31 +0200, , update waterfall build 6633 513 new expected failure mostly due change way torture test compiled http github.com webassembly waterfall commit,,
3079,f5ad1c2d4488feea9711516fff40602f3f8031bd,erek Schuff <dschuff@chromium.org>, 2016-05-17 13:31:21 +0200, , quietly extract waterfall tarball 512 verbose exctraction make travis build much readable also print url downloading,,
3080,ed9f3272b911ffb69aec9d0ee854f725a80b3baa,lon Zakai <alonzakai@gmail.com>, 2016-05-16 17:23:35 -0700,511, merge pull request 511 webassembly metric better metric improvement,,
3081,ec184cc9df650b2b7e047633a407d55a21ba3760,lon Zakai <alonzakai@gmail.com>, 2016-05-16 17:07:40 -0700,510, merge pull request 510 webassembly vacuum vacuum improvement,,
3082,3a01c5d7d1f03fb88d249ca1ecca6325b77e799a,lon Zakai <alonzakai@gmail.com>, 2016-05-16 17:06:02 -0700, , add total var non param local metric,,
3083,70e761dd4e75f658797457c427e1388dd91f678a,lon Zakai <alonzakai@gmail.com>, 2016-05-16 17:01:10 -0700, , emit total metric way show diffs,,
3084,d920c7252da51fba9580648abad16a8a8baee295,lon Zakai <alonzakai@gmail.com>, 2016-05-16 16:46:31 -0700,509, merge pull request 509 webassembly optimize coalesce optimize coalescelocals,,
3085,0a081486bb4eb7e1962a9463cb919ae3deed4d99,lon Zakai <alonzakai@gmail.com>, 2016-05-16 16:44:42 -0700, , run merge block vacuum,,
3086,017440afd21551a0ea4d01490e7e0bb963ef53f9,lon Zakai <alonzakai@gmail.com>, 2016-05-16 16:30:32 -0700, , remove dead get_locals vacuum,,
3087,e4f97c2dd9cd6b4b2e4e0c2b74b9a73867eca9b2,lon Zakai <alonzakai@gmail.com>, 2016-05-16 15:54:10 -0700, , canonicalize usage interference vector,,
3088,568ea92489f883094c12b8be33c6b1ec05017bf0,lon Zakai <alonzakai@gmail.com>, 2016-05-16 15:41:30 -0700, , optimize adding new conflict merged start,,
3089,72b196f92b7c326349b0c6053af30dc29f4878f5,lon Zakai <alonzakai@gmail.com>, 2016-05-16 15:36:52 -0700, , restructure coalescelocals everything inline,,
3090,824c2effb943db981b163c77593d30e15ee03021,lon Zakai <alonzakai@gmail.com>, 2016-05-16 12:43:01 -0700, , debugging improvement,,
3091,04ee5b924d1cf27a822c9c503cdc519be6c1987c,lon Zakai <alonzakai@gmail.com>, 2016-05-16 12:08:20 -0700, , use unordered set main flow queue,,
3092,1f86eb85ec0a110528a635cc35a109b826d84523,lon Zakai <alonzakai@gmail.com>, 2016-05-16 11:56:59 -0700, , add optional timing coalescelocals flow,,
3093,4d636a67c71548b9e627e747e9ef859252472b84,lon Zakai <alonzakai@gmail.com>, 2016-05-16 11:56:43 -0700, , add timer class,,
3094,a39994f434a3cb7ce0b05987365e3ad550f03d71,lon Zakai <alonzakai@gmail.com>, 2016-05-16 11:03:11 -0700,507, merge pull request 507 webassembly coalesce local coalesce local,,
3095,6c3e068a87d81cc10204971706ff848162d4c751,lon Zakai <alonzakai@gmail.com>, 2016-05-16 10:40:31 -0700, , emit extra endline s2wasm 506 508,,
3096,dbeb12e41075f4f271a194a49de6225d569aeb92,Salita <BSalita@yahoo.com>, 2016-05-16 06:21:58 +0200, , update api kitchen sink.c 504,,
3097,adfb6372da4286c754d7c3c328950194725533b7,lon Zakai <alonzakai@gmail.com>, 2016-05-15 17:42:21 -0700, , use sorted vector live local,,
3098,0239e3d01cb1c049770e99044516ed0479a0ce48,lon Zakai <alonzakai@gmail.com>, 2016-05-15 16:46:00 -0700, , create basic block block branch,,
3099,22686b6bb91361c3ab20e07bc8b9ce17fdac661f,lon Zakai <alonzakai@gmail.com>, 2016-05-15 16:33:29 -0700, , add cfg building traversal pas coalesce local using,,
3100,a76a828b7b086d80b6673fa8e87887d84f7c5488,lon Zakai <alonzakai@gmail.com>, 2016-05-14 18:54:37 -0700, , make instance per function function parallel pass pass need clean internal stuff,,
3101,9f25d3db7fae275160880721cf67a27c89e6a122,F Bastien <github@jfbastien.com>, 2016-05-14 11:03:22 -0700, , use typedef instead explicit type 503,,
3102,ec15c34698d91a3e8d315ee853ca4a9b75ca1373,lon Zakai <alonzakai@gmail.com>, 2016-05-13 18:05:01 -0700, , allow providing name function type api 501,,
3103,63bac0a2ec0b22feadf9652a2292ce66ea6174d7,lon Zakai <alonzakai@gmail.com>, 2016-05-13 17:42:41 -0700,499, merge pull request 499 webassembly validation fix validation fix,,
3104,ee5a2454b7b49b645383754b19f4dfc93ef35014,lon Zakai <alonzakai@gmail.com>, 2016-05-13 13:32:26 -0700, , validation improvement,,
3105,3a92901ed09535a4fbcbf1dc97a85bd2c40c8df8,lon Zakai <alonzakai@gmail.com>, 2016-05-13 13:31:59 -0700, , test fix,,
3106,e2250bcb5e35c2382b9bc7fd9da8b7a0efe9a86f,lon Zakai <alonzakai@gmail.com>, 2016-05-13 13:31:45 -0700, , remove wasm2asm stuff,,
3107,7a2073cad4e532be94d954a00611762630674da2,lon Zakai <alonzakai@gmail.com>, 2016-05-13 13:28:55 -0700, , fix binary reinterpret opcode bug,,
3108,87af1a5002bf7e44b8bcb3b0629645fc3fb23a43,lon Zakai <alonzakai@gmail.com>, 2016-05-13 13:28:35 -0700, , make reinterpret printing precise,,
3109,6b9ec2184292cd0fa2b0a947e798476a404b2e87,lon Zakai <alonzakai@gmail.com>, 2016-05-13 12:53:06 -0700, , validation check,,
3110,311ce634f772886939af75524dee52b955f78a59,erek Schuff <dschuff@chromium.org>, 2016-05-13 13:31:18 -0700, , disable msvc warning unsafe runtime function 487 going switch msvc alternative function portable,,
3111,22d10db3a9b04e5c225b0f472c07dba7ce9dc6d3,lon Zakai <alonzakai@gmail.com>, 2016-05-13 12:38:44 -0700,493, merge pull request 493 webassembly error improvement error handling improvement,,
3112,348565b6a9a823c0fee30c96d8d783810d540a78,an Gohman <sunfish@mozilla.com>, 2016-05-13 11:20:28 -0700, , fix maximum memory size valid 492,,
3113,377f1f661d373afe5770d1ff0d3a4772a71ef893,lon Zakai <alonzakai@gmail.com>, 2016-05-13 10:52:03 -0700, , fix spurious validation error unreachable type,,
3114,7861d1558490df98febd4b6498f9bec0b64722ad,lon Zakai <alonzakai@gmail.com>, 2016-05-13 10:49:11 -0700, , support new syntactic sugar export name function,,
3115,d58c26e37a40ab7fe796c639b6a652fb01b6d109,lon Zakai <alonzakai@gmail.com>, 2016-05-13 10:36:48 -0700, , error expr comment starting string,,
3116,7ccc6a3dcc3b2945e03dff20c6ecb0b6e1074ac4,lon Zakai <alonzakai@gmail.com>, 2016-05-13 10:27:55 -0700, , break type system fix avoid spurious error mismatched type,,
3117,4513ec24ad33a4d0157d562217b310390d9cdb1b,lon Zakai <alonzakai@gmail.com>, 2016-05-13 10:13:01 -0700, , add line col info parsing error fix small bug made noticeable change,,
3118,4a720eca42c463d53db1c81f9957a3e5d9011836,lon Zakai <alonzakai@gmail.com>, 2016-05-12 17:50:44 -0700, , move console tool source src tool 490,,
3119,f518f097c80c0659fbacf11fe12f89955093282b,lon Zakai <alonzakai@gmail.com>, 2016-05-12 17:18:55 -0700,488, merge pull request 488 webassembly error_reporting better error reporting,,
3120,c8293a3f9112ad486f6f3639fc5680d73e7559ca,lon Zakai <alonzakai@gmail.com>, 2016-05-12 16:02:03 -0700, , show parse error wasm dis wasm,,
3121,9f4e494a74a0f2d30c4288f20657bc8fac186a4a,lon Zakai <alonzakai@gmail.com>, 2016-05-12 15:41:20 -0700, , show parse error api,,
3122,fb02ea5328089ab92493ec2ca784b0bd635d0c85,lon Zakai <alonzakai@gmail.com>, 2016-05-12 15:38:43 -0700, , show parse error shell,,
3123,031f22eb8e84e098afceffa787126d8b6ab79e92,lon Zakai <alonzakai@gmail.com>, 2016-05-12 14:58:20 -0700, , parse error detail,,
3124,d84fd5be60d4ead6bc9fbb3f27a710bef0c688c8,erek Schuff <dschuff@chromium.org>, 2016-05-12 14:55:47 -0700, , use class implicit overflow check address 486 includes implicit conversion u64 implicit conversion address_t make easier use without ugly casting still get overflow check,,
3125,a18b153e1940b6e1504084c60f3feca46dfa2870,lon Zakai <alonzakai@gmail.com>, 2016-05-12 14:35:58 -0700, , use exception consistently report input error,,
3126,87c583fb258bd373219fdfae3fa181c2d10b56b7,Salita <BSalita@yahoo.com>, 2016-05-12 20:34:31 +0200, , fix visual studio 2015 warning casting double int32_t 480,,
3127,a74dac17dbb9a0a871c8a52a89b6782dc3439238,Salita <BSalita@yahoo.com>, 2016-05-12 20:32:52 +0200, , fix warning s2wasm.h 481,,
3128,b048e6e18fba54527f1d9492b6f9f7f764a9c080,lon Zakai <alonzakai@gmail.com>, 2016-05-11 20:16:12 -0700, , update spec test 478,,
3129,ac827e35fec84074d9d8141ca2c94ad01ca9c5c3,erek Schuff <dschuff@chromium.org>, 2016-05-11 15:34:49 -0700,278, introduce separate type linear memory address 477 using size_t thing address generally wrong depends host fact depend target partial fix 278 i.e right fix think applied quite everywhere yet,,
3130,9c79f86a3f518c60840b416287a5d26502911ad6,erek Schuff <dschuff@chromium.org>, 2016-05-11 12:38:17 -0700, , update waterfall torture test 6423 476,,
3131,fe53b91511f29b0dafeb66616481a96afe072317,Salita <BSalita@yahoo.com>, 2016-05-11 20:51:53 +0200, , warning fix api kitchen sink.c double constant used float args 473,,
3132,5a077dc419c97a67455bd5181dac8bbc6008f92b,Salita <BSalita@yahoo.com>, 2016-05-11 19:54:26 +0200, , fix visual studio 2015 warning negating unsigned value adding typename bits.h 471,,
3133,80764746479e34a982c62e8c4801766836032271,erek Schuff <dschuff@chromium.org>, 2016-05-11 10:50:15 -0700, , pas sort comparison function argument const reference 472 fix build failure libstdc 4.8,,
3134,a8af7ade78bf1f0f5c7ba14cb31b6a7495de1a87,Salita <BSalita@yahoo.com>, 2016-05-11 19:31:18 +0200, , fix warning ast_utils.h 469,,
3135,20de99e0243cb385e92c74e17a22f23b44b6ad2d,Salita <BSalita@yahoo.com>, 2016-05-11 19:30:56 +0200, , fix warning wasm validator.h 468,,
3136,3e526d08aceaba90aa2449e8bc9975dadb047a6c,Salita <BSalita@yahoo.com>, 2016-05-11 19:30:32 +0200, , fix warning relooper.h 467,,
3137,ca5a37818565504ce78f6a807b4f8b7f6ea0b5ba,Salita <BSalita@yahoo.com>, 2016-05-11 18:23:23 +0200, , replace null nullptr quiet warning 466 replace null nullptr quiet visual studio 2015 optimizer warning prepending,,
3138,fe952e30e5a796a0f5d14c66deb7e6dd237fc402,Salita <BSalita@yahoo.com>, 2016-05-11 18:05:48 +0200, , change null nullptr quiet visual 2015 optimizer error using 465,,
3139,0cd4f81442cdeac61ec611d94f381832bdbd361f,ichael Bebenita <mbebenita@gmail.com>, 2016-05-11 09:03:44 -0700, , add pas order function use frequency 452,,
3140,7ab2885a399f4f8084c92546a82375af598371c1,lon Zakai <alonzakai@gmail.com>, 2016-05-11 08:46:30 -0700, , remove longer supported wasm2wasm tool readme,,
3141,ee563858b128512c9fa29eb6a66c8dda8313172c,lon Zakai <alonzakai@gmail.com>, 2016-05-10 15:58:58 -0700, , use int32_t binaryenliteral api simpler good enough since translate anyhow 462,,
3142,1db8ae1f4909b5949a48a2266fce6eef2edd6742,lon Zakai <alonzakai@gmail.com>, 2016-05-09 13:33:15 -0700,461, merge pull request 461 webassembly spec update spec test update,,
3143,b519fd87f7f1e1adead0ed648f29301303518ff0,lon Zakai <alonzakai@gmail.com>, 2016-05-09 11:07:28 -0700, , add error handling binary error new spec test,,
3144,bc307c19ddca4bef900db3ff9d512bd21a57be60,lon Zakai <alonzakai@gmail.com>, 2016-05-09 11:02:43 -0700, , allow error handling binary parsing,,
3145,7cb38a21e3e1085a39048b20dbbbb5c06f9dc4c5,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:54:32 -0700, , parse binary module encoded wasts arrive piece,,
3146,d36b1975100f3c73557fd303d095ee8e57306089,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:52:40 -0700, , allow appending stringtobinary,,
3147,aca5642e0d8d17c31c86f6da3dff4256ae53babd,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:48:34 -0700, , parse binary module encoded wats,,
3148,795303fcbca40586ed9b0cd3b4406fb3f41a6d34,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:45:17 -0700, , remove wasm2wasm build longer tested longer maintained,,
3149,d6034d9790030efa3f1cb4fce62abba36f014646,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:36:08 -0700, , refactor string binary parsing expression code use place,,
3150,cd73748368e7da8d4f82c4a7aa909b60d7e6d089,lon Zakai <alonzakai@gmail.com>, 2016-05-09 10:16:50 -0700, , update spec test,,
3151,f6d5a9df297997af5165ff164cb1609fbc0239e6,lon Zakai <alonzakai@gmail.com>, 2016-05-08 14:12:39 -0700, , careful loading i64 wasm glue bug bit trampled read 460,,
3152,da1b3b84f04113d5ea3b05f21dd30dca0e113ade,lon Zakai <alonzakai@gmail.com>, 2016-05-07 20:01:20 -0700,390, use target link library unbreaks breakage 390 450,,
3153,9c9fb503a8a5ffce9eae4b48cce4b06d41146fc1,lon Zakai <alonzakai@gmail.com>, 2016-05-07 19:51:36 -0700, , fix relooper fuzz testcase valid old style 459,,
3154,b0f8df05f1d4f751629296f48675b46a017f7925,lon Zakai <alonzakai@gmail.com>, 2016-05-07 19:28:55 -0700, , rename binaryen library binaryen 458,,
3155,6521cbe4b58ba45eecbc97021c0b434d3cfa958a,lon Zakai <alonzakai@gmail.com>, 2016-05-07 17:37:06 -0700,454, merge pull request 454 mi3guy master minor fix api,,
3156,59bf80e9844822698d66ec5cdb8fce963142b7ab,lon Zakai <alonzakai@gmail.com>, 2016-05-07 17:04:14 -0700, , use atomics mixedarena list generation instead locking 456,,
3157,bd90eaea7daae8c57d611becd897b8b5ed395fe5,lon Zakai <alonzakai@gmail.com>, 2016-05-07 17:03:51 -0700, , fix block finalize type 457,,
3158,a3a8ac3af0a36ba35a6723b45340b9d826688951,lon Zakai <alonzakai@gmail.com>, 2016-05-07 16:06:30 -0700, , remove obsolete comment relooper fuzzer,,
3159,b80ff5c73351d0e6762d8122914bb6c10bcd8d9f,erek Schuff <dschuff@chromium.org>, 2016-05-07 10:41:41 -0700, , use static library cmake build 451 factor pass emscripten optimizer static libs remove redundancy source set main cmakelists.txt make pass object lib use static libs whole archive travis old cmake,,
3160,64532d175bdca6e0ac8699be61ca0133b42c727d,ohn Bentley <john@johnbentley.ninja>, 2016-05-07 07:38:58 -0400, , changed empty parameter function api void,,
3161,a4eb7ae40abbd0a7b01829edf1ce5e719143089d,ohn Bentley <john@johnbentley.ninja>, 2016-05-07 07:35:53 -0400, , added additional file gitignore,,
3162,40068a9f3c614ba15131a8a90d8586816799f11a,lon Zakai <alonzakai@gmail.com>, 2016-05-06 22:20:09 -0700, , relooper fuzzing improvement 453,,
3163,254601c78a03b2012d42f15d64c51b773a8fbe4c,lon Zakai <alonzakai@gmail.com>, 2016-05-06 18:28:41 -0700,449, merge pull request 449 webassembly fuzz relooper fuzz relooper api,,
3164,a2cfae4c54ba79d7e8b348da10c77840ca934595,lon Zakai <alonzakai@gmail.com>, 2016-05-06 10:28:47 -0700, , add fuzzer relooper api,,
3165,ffb9e4b9cfac5091dfe19b9b5215c43bd0f98e72,lon Zakai <alonzakai@gmail.com>, 2016-05-06 15:31:47 -0700, , add return type parameter call call_import api need since know type building function,,
3166,e4d6be7f1a92bd8809777e59583e2d7544b065a0,lon Zakai <alonzakai@gmail.com>, 2016-05-06 10:28:40 -0700, , comment api header,,
3167,a3b3a516bd8117cd83aa0625839e614110d1fc0b,erek Schuff <dschuff@chromium.org>, 2016-05-06 15:19:55 -0700,444, use rpath instead ld_library_path shared object use 448 use rpath linker flag locate libbinaryen c.so instead injecting path user ld_library_path also link libsupport libasmjs libbinaryen fix 444,,
3168,5f2b05fd3d03e353e5f461a6d334e2c8e2eadd3a,dam Smaza <adam.smaza@gmail.com>, 2016-05-06 22:31:27 +0200, , using find_package thread setting compilation flag 390,,
3169,cff4b04d4306e0192c914c2a6281992e2610109c,ichael Bebenita <mbebenita@gmail.com>, 2016-05-06 11:10:46 -0700, , fix breakseeker switch default target 447,,
3170,07f0bad2540a6023ab7b0029b9532e1d44b41c03,lon Zakai <alonzakai@gmail.com>, 2016-05-05 18:12:00 -0700, , add reading writing binary api 443,,
3171,b253b083e1fc96434527511b68d6fd07f8d6f233,lon Zakai <alonzakai@gmail.com>, 2016-05-05 17:26:45 -0700,441, fix breakage master 441 445,,
3172,6ea92a08db051ce3eea56081150caac9432210cf,lon Zakai <alonzakai@gmail.com>, 2016-05-05 16:48:37 -0700,439, merge pull request 439 webassembly api validation api,,
3173,727c08faf01da99d57dfe86b3fb0fee9db415f41,F Bastien <github@jfbastien.com>, 2016-05-05 15:54:23 -0700, , fix nan 442 discussed http github.com webassembly spec pull 282 issuecomment 217280544,,
3174,4dfa39338f188ff8e70b8b796dc61d89aadfd3b0,F Bastien <github@jfbastien.com>, 2016-05-05 15:54:17 -0700, , fix ld_library_path 441 need concatenated overwritten,,
3175,1d267ad1ecf7e9fd5ea6b22679beeb82585723f0,lon Zakai <alonzakai@gmail.com>, 2016-05-05 15:47:42 -0700,436, merge pull request 436 webassembly fix switch fix switch simplify local,,
3176,fae63cb6a26ab5a9cc2fdaa56d778215d1a1fc35,lon Zakai <alonzakai@gmail.com>, 2016-05-05 15:47:13 -0700, , make wasm.js safe closure compiler 438,,
3177,b92edd31f2b819f62cd38f49b6feb828cac60b38,erek Schuff <dschuff@chromium.org>, 2016-05-05 15:43:33 -0700, , linker make repeated pass archive member 440 archive member depend archive member adding member link introduce new undefined reference must satisfied linker must continue iterate member nothing new added link,,
3178,b39f2dd816cfb518a9327e8df4545556b8ad4c30,lon Zakai <alonzakai@gmail.com>, 2016-05-05 14:46:30 -0700, , add validation api fix thing uncovered api test,,
3179,99576530e6067863486dbbacf39b9a8adb98876e,lon Zakai <alonzakai@gmail.com>, 2016-05-05 14:46:04 -0700, , improve validator error message set_local,,
3180,6ca7e6915aa32e14ddad45d5c0671040ab1885a0,lon Zakai <alonzakai@gmail.com>, 2016-05-05 14:45:29 -0700, , fix set_local finalize,,
3181,b0e91ae0c42ddd8fa92408cbfc18e4f25b574acf,lon Zakai <alonzakai@gmail.com>, 2016-05-05 13:44:54 -0700, , make print flag archive.cpp nicer 437,,
3182,f81355b2750717584e309699dfcae3c814167578,lon Zakai <alonzakai@gmail.com>, 2016-05-05 12:25:44 -0700, , clear sinkables unoptimizable block control flow merge,,
3183,e6f6d700054ce30e9455697a39328f5366543096,lon Zakai <alonzakai@gmail.com>, 2016-05-05 12:18:45 -0700, , note default switch simplifylocals,,
3184,bb3dbb2784e91a517916f366e710e01a2e7331f6,lon Zakai <alonzakai@gmail.com>, 2016-05-05 11:47:54 -0700,435, merge pull request 435 webassembly relooper add optimization api relooper test,,
3185,bbf846554a407e0385f91f5b7eeb9594c12e0bc5,lon Zakai <alonzakai@gmail.com>, 2016-05-05 10:30:36 -0700, , improve test,,
3186,715d1becddcb89c49d71aa19e62ed27f967e5860,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:41:01 -0700, , add optimization api find pass api library make dynamic,,
3187,9afdb5e5512ae4c9c23d7f2d41a35e63ecc3a0f5,lon Zakai <alonzakai@gmail.com>, 2016-05-05 10:21:45 -0700, , handle missing local name reorderlocals,,
3188,5d91adec8d601faba388960b15b630f3895b4009,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:43:29 -0700, , better error missing pass,,
3189,aa1cf3d0c20d5bc6f98ac3ab96c06f0ff6c2eb61,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:31:19 -0700, , simplify passrunner api get module directly,,
3190,adda43ea1e59f401d874cfcb41c9ffb17f87f44d,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:30:28 -0700, , fix archive.cpp bit,,
3191,a23899ddfde13d400abac29f2cf04b71b743093b,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:23:13 -0700, , add relooper test,,
3192,f85e310924535da09822f3d43aeee9265eb12760,lon Zakai <alonzakai@gmail.com>, 2016-05-05 09:20:41 -0700, , import emscripten relooper port binaryen ast provide api 434 also ignore libstdc bug ubsan,,
3193,2811727a118e92e6b7ef293458f9bab1cf5dacdc,erek Schuff <dschuff@chromium.org>, 2016-05-05 08:01:57 -0700, , linker handle archive file add class parse archive file support linking archive file archive semantics i.e archive member linked satisfies undefined reference archive file must gnu format archive containing file add test linking semantics,,
3194,1397997bc91663f19c387c69c7e47930efe57539,F Bastien <github@jfbastien.com>, 2016-05-04 14:10:37 -0700, , nicer shift mask 431 nicer shift mask yet nicer shift mask fix typo,,
3195,c7d7083920ddd9ff7d1a44577287b8ecc048a221,lon Zakai <alonzakai@gmail.com>, 2016-05-03 22:01:14 -0700, , harmonize internal opcodes binary format 433 harmonize internal opcodes binary format clearly parallel also help avoid needing type disambiguate comment getlocal api,,
3196,5b2adeb4b2a66dfcda7667ce7a4c27ec49c62b1b,lon Zakai <alonzakai@gmail.com>, 2016-05-03 17:14:07 -0700,427, merge pull request 427 webassembly api nice api,,
3197,fd14d9cfc4cd744a8d143bb6a2622c68f5d33cfd,lon Zakai <alonzakai@gmail.com>, 2016-05-03 14:26:20 -0700, , kitchen sink test api,,
3198,d435670997e524df9707354d468a22432a181411,F Bastien <github@jfbastien.com>, 2016-05-03 14:46:28 -0700,404, fix signed integer overflow 430 put back 404 wanted ubsan know cause abort say gone merely test trigger ubsan know find,,
3199,b6ec3620376a8b9cf7cedfe7f61fd4c943e0275b,F Bastien <github@jfbastien.com>, 2016-05-03 14:05:44 -0700, , fix shift 429 getting close finishing 404,,
3200,09153904803c628393a8ff65c1791d3bc57c756b,F Bastien <github@jfbastien.com>, 2016-05-03 13:22:07 -0700, , fix null 428 continuation 404 fix dereference std vector zeroth element size vector zero symptom stl_vector.h 866 runtime error reference binding null pointer type char,,
3201,5d2c7a86ba47ef0a0cb27508d81669c4a923a857,lon Zakai <alonzakai@gmail.com>, 2016-05-02 16:00:55 -0700, , api plus test,,
3202,e888c841832895f292e8582c0043c8bf232e5d96,lon Zakai <alonzakai@gmail.com>, 2016-05-02 17:01:53 -0700, , add default finalize valid call node,,
3203,318746771e7ff11a1223cc5d08433fe5dfeab9db,lon Zakai <alonzakai@gmail.com>, 2016-05-02 17:01:33 -0700, , makeloop makebreak,,
3204,13c428a6850afb00937732eac227979cf0604e8f,F Bastien <github@jfbastien.com>, 2016-05-02 20:32:34 -0700,404, ubsan recover failure 426 fixed existing ubsan failure part 404 would like prevent regression patch allows sanitizer check continue execution null shift signed integer overflow make one hard error preventing regression remaining error addressed commit 404 move ubsan fno sanitize recover likely requires good checked math library,,
3205,40f9359713c9aff3a735901a7e3c2370559bfad8,F Bastien <github@jfbastien.com>, 2016-05-02 18:42:02 -0700, , fix alignment 425 may place broken trigger ubsan right another fix 404,,
3206,757084eec25159a1f34a1a6fde7754dee18ac8b9,F Bastien <github@jfbastien.com>, 2016-05-02 18:03:16 -0700, , fix divide zero 424 another fix 404,,
3207,5456ae59515d08c1c3de3aaca7331d420ede8a32,F Bastien <github@jfbastien.com>, 2016-05-02 16:08:23 -0700, , f32.demote f64 fix 423 another fix 404,,
3208,91c62dd70ec09a762542e2835273942f97509c5d,F Bastien <github@jfbastien.com>, 2016-05-02 15:55:07 -0700, , fix memcpy 422 call memcpy size nullptr init,,
3209,2559cb90937b4b88377a0e17e0725771511a08a7,en Smith <binjimin@gmail.com>, 2016-05-02 14:47:11 -0700, , fix i32 i64 .trunc_ f32 f64 interpreter 421 check binary representation float instead converting float first,,
3210,203d8b2f4021e61dede148a9f0ada0f0b0a02da9,Salita <BSalita@yahoo.com>, 2016-05-01 00:14:31 +0200, , changed type flag fix visual studio 2015 error 418 changed type flag line read_file auto std ios_base openmode fix visual studio 2015 error,,
3211,e11b0c43df135d473baf4ce3878e83de7da9bf5d,F Bastien <github@jfbastien.com>, 2016-04-30 15:11:28 -0700, , check leb128 encoding fit destination integer 408 check leb128 encoding fit destination integer found 404 insignificant leb128 bit silently dropped dealing signed leb value tripped ubsan hello_world fix 409 fix typo,,
3212,199c7d3e558d4c2f3dc6be1e0fc826ca45b52b8f,lon Zakai <alonzakai@gmail.com>, 2016-04-29 16:30:40 -0700,416, merge pull request 416 webassembly full validation nice full validation,,
3213,af6b1a77673b1c49f4501918385bd463c50cb28b,lon Zakai <alonzakai@gmail.com>, 2016-04-29 14:59:10 -0700, , validate binaryen shell wasm binary fix type checking,,
3214,8ac323bb58c0e1891dea6492160939eb1b6bb1d2,lon Zakai <alonzakai@gmail.com>, 2016-04-29 14:58:17 -0700, , add wasm.cpp doe full type detection block prepare full type checking everywhere,,
3215,623918767242c36b9197e83a9e3b4e35ee17f8db,lon Zakai <alonzakai@gmail.com>, 2016-04-29 14:57:09 -0700, , warning breakseeker,,
3216,eb2ea67bf52eac93de977922763a0ee3787be240,lon Zakai <alonzakai@gmail.com>, 2016-04-28 19:49:42 -0700,413, merge pull request 413 webassembly binary fix reinterpret binary fix,,
3217,a04e5b17fb97fe67747fcc070b06d872a5904c9b,lon Zakai <alonzakai@gmail.com>, 2016-04-28 18:29:57 -0700, , get reinterpret opcodes right float int,,
3218,1b5bd6e3e6102aa96cc4e1047d0684c726881705,lon Zakai <alonzakai@gmail.com>, 2016-04-28 18:03:30 -0700, , fix size detection reinterpret operation binary format,,
3219,5c11c30dad7ac608acf9ee6bf473f6407547bca2,lon Zakai <alonzakai@gmail.com>, 2016-04-28 12:55:21 -0700, , fix asm2wasm f64 f32 i32 bitcast 412,,
3220,eff3a393493f5ce4c906f50f4b360c3f9ecdf2eb,lon Zakai <alonzakai@gmail.com>, 2016-04-28 12:53:47 -0700,411, merge pull request 411 webassembly flexible method refactor wasm glue defer wasm wasm polyfill asmjs fallback point,,
3221,1620162471a60a905e1e8e6072e676d73b8ddfff,lon Zakai <alonzakai@gmail.com>, 2016-04-28 10:50:46 -0700, , fall back wasm compilation error add logging,,
3222,91c8337db2421f027de77e9dfa6085b69a195f2c,lon Zakai <alonzakai@gmail.com>, 2016-04-28 10:24:42 -0700, , refactor wasm glue defer wasm wasm polyfill asmjs fallback late possible let recover wasm compilation failure still fallback method,,
3223,5b29a636cb092bcc9e21568db0dfe845538d34c0,lon Zakai <alonzakai@gmail.com>, 2016-04-28 09:58:22 -0700, , avoid dynamic allocas 410,,
3224,6a6bdc1cef5ec35cb9f7caf6e10ec76ee1107d0d,lon Zakai <alonzakai@gmail.com>, 2016-04-27 19:25:15 -0700,403, merge pull request 403 webassembly leak fix leak enable leak check,,
3225,f0a4f15dc27ffff9505503a8168854b7662b2657,lon Zakai <alonzakai@gmail.com>, 2016-04-27 17:53:58 -0700, , cleanup following review comment,,
3226,3e99796818f8a774e9c88a5d04aadfe12846ee36,lon Zakai <alonzakai@gmail.com>, 2016-04-26 22:00:17 -0700, , enable leak check,,
3227,5512058de8984a0a782e9af055b9a7e6b3d0fa40,lon Zakai <alonzakai@gmail.com>, 2016-04-27 16:48:34 -0700, , avoid leak parsing hit error,,
3228,09d356d7438ea9a9497820fc2fbf9c018ea0d139,lon Zakai <alonzakai@gmail.com>, 2016-04-27 16:33:30 -0700, , leak currfunction parser,,
3229,36b8c029b90c9f0dd3ba564cf040dadbbe96d970,lon Zakai <alonzakai@gmail.com>, 2016-04-27 16:04:47 -0700, , leak parsing segment parser,,
3230,f22e2796f5ac72c64c36cb562d1462093741f8d7,lon Zakai <alonzakai@gmail.com>, 2016-04-27 14:54:30 -0700, , use simple vector data segment,,
3231,90bdf763537815a523d0dbe75a67e7f0b14b0d9e,lon Zakai <alonzakai@gmail.com>, 2016-04-27 13:24:09 -0700, , leak istringset,,
3232,2c8e64a91197beed1792e65a9d409ca50e12697c,lon Zakai <alonzakai@gmail.com>, 2016-04-27 13:21:53 -0700, , clean import passed wasm module asm2wasm,,
3233,f4aaf7bfce3808c95554100606cc73916a09fc44,lon Zakai <alonzakai@gmail.com>, 2016-04-27 12:16:57 -0700, , clean emscripten optimizer arena,,
3234,6db9e90affac38d9bbcec89d978f67877923f207,lon Zakai <alonzakai@gmail.com>, 2016-04-27 11:54:58 -0700, , use arena vector switch target,,
3235,127f9688cc26ab362dabadac5494af23cd78ac8b,lon Zakai <alonzakai@gmail.com>, 2016-04-27 10:43:21 -0700, , allocate expression arena function import export function type simply held unique_ptrs owning module avoids need coordinate arena allocation element far plentiful expression node perf factor anyhow,,
3236,46f99e692014e714ffeed7f3db870ffd12bf077c,lon Zakai <alonzakai@gmail.com>, 2016-04-27 10:19:07 -0700, , leak running test shell,,
3237,de7f3480d1ba898bc5ec270ef24b69f5408de633,lon Zakai <alonzakai@gmail.com>, 2016-04-26 22:17:09 -0700, , use arena allocation expr element,,
3238,4a85f62e8a83117a081e9691d8830b6a7a876d1d,lon Zakai <alonzakai@gmail.com>, 2016-04-27 15:15:25 -0700,406, merge pull request 406 webassembly i64.load32_u fix zero extension i64.load32_u,,
3239,63271d39f8a1100a703adc50861e02caefc2a9d5,lon Zakai <alonzakai@gmail.com>, 2016-04-27 14:41:46 -0700, , use hack _only file test wasm_backend,,
3240,afcba6ce6e24d775c66bb82e23777a6ff1271f4f,lon Zakai <alonzakai@gmail.com>, 2016-04-27 14:02:06 -0700, , update wasm.js,,
3241,a4967c271b106032c0264d3ec13c04c41481c3e4,an Gohman <sunfish@mozilla.com>, 2016-04-27 13:46:35 -0700, , add testcase,,
3242,3b2b18dc06da3895f0b54a0660ab561f2b305c92,F Bastien <github@jfbastien.com>, 2016-04-27 13:46:31 -0700, , remove 405 ubsan fails wasm binary.h runtime error left shift negative value also use type_traits is_signed,,
3243,65dd0079b21cc72a3e2e6f5bc2f43ab0e2d3abfd,an Gohman <sunfish@mozilla.com>, 2016-04-27 13:29:08 -0700, , fix zero extension i64.load32_u,,
3244,d63486d0ef085f905dafdb14a76cfb2ca1fb452e,erek Schuff <dschuff@chromium.org>, 2016-04-27 09:18:37 -0700, , split construction scanning building phase s2wasmbuilder 400 instead s2wasm work constructor split construction scanning determine implemented function building wasm module allows linker get symbol information e.g implemented function without build entire module useful archive allow linker link new object existing one building wasm module place existing module,,
3245,206338a6c4e3f9739abd7a2ad082d1770b3a628f,lon Zakai <alonzakai@gmail.com>, 2016-04-26 20:06:40 -0700, , prep arena vector arena vector,,
3246,d9096704dfa84aea94bb6ac2ffa02d88fa546bfa,lon Zakai <alonzakai@gmail.com>, 2016-04-22 22:01:43 -0700, , add arenavector internal array allocation expression node,,
3247,7fd8aac5084223c48901ca20f9d233e9764d536a,lon Zakai <alonzakai@gmail.com>, 2016-04-26 18:37:28 -0700, , ignore stderr binary format check test,,
3248,f9e69902fbe143f72251721a305bd1f2466154e8,lon Zakai <alonzakai@gmail.com>, 2016-04-22 20:11:00 -0700, , make chunk size flexible arena,,
3249,c8a7755461d5e806bd734b75f441ac61c9963ee9,lon Zakai <alonzakai@gmail.com>, 2016-04-22 20:06:46 -0700, , refactor arena allow allocating space directly,,
3250,895e3e016d4875f70517411d195fbab5193784ea,lon Zakai <alonzakai@gmail.com>, 2016-04-22 19:47:42 -0700, , remove old globalallocator,,
3251,dd778824cfc60c4478bbe7690769f444dad92803,lon Zakai <alonzakai@gmail.com>, 2016-04-26 17:39:14 -0700, , ast_utils improvement 399 make effectanalyzer little fun use create convert method turn node smaller node reusing memory use nop use convert wasm linker,,
3252,1b01c37546262069391e5a41e8a4a6daf2471a36,erek Schuff <dschuff@chromium.org>, 2016-04-26 11:31:47 -0700, , update waterfall llvm torture test build 5780 398 brings fix llvm r267511,,
3253,a0ec089707a33be6a4e29d917a7664519df50afc,erek Schuff <dschuff@chromium.org>, 2016-04-26 11:08:43 -0700, , defer creation callimports link time 395 s2wasm currently creates call ast node target implemented current object thus far assumed final executable callimport node preparation adding additional object link layout time make call node link time convert callimport undefined time,,
3254,25a81de39898b7acd4d813779f3f605784203d27,lon Zakai <alonzakai@gmail.com>, 2016-04-26 10:31:58 -0700,397, merge pull request 397 webassembly binary opts improve emitting ifs binary format,,
3255,ea1d1e60d48159c15075fb86b7e442329101f79c,lon Zakai <alonzakai@gmail.com>, 2016-04-26 10:06:27 -0700, , emit ifs optimized way binary format,,
3256,62ed39b5806e75c3c8835b6d996cd3b07a6cec23,lon Zakai <alonzakai@gmail.com>, 2016-04-26 10:03:22 -0700, , breakseeker need look br_table,,
3257,1db57d5b4275a107f43e29c16a4e87a9abd15845,lon Zakai <alonzakai@gmail.com>, 2016-04-26 09:48:39 -0700,393, merge pull request 393 webassembly arity arity,,
3258,75f0736812804980272729c6c3e9dda84539a3d6,lon Zakai <alonzakai@gmail.com>, 2016-04-25 20:47:05 -0700,396, merge pull request 396 webassembly opts selectify side effect,,
3259,791c765cda070e47d90577de2d798f046431d095,lon Zakai <alonzakai@gmail.com>, 2016-04-25 20:08:24 -0700, , selectify control flow,,
3260,cb35ee67868bdc2b8839766b7e10b65e8fcc122a,lon Zakai <alonzakai@gmail.com>, 2016-04-25 17:27:11 -0700,394, merge pull request 394 webassembly opts control flow optimization,,
3261,8a68b4e6506e66312d75c3cff8aa0b36563548e3,lon Zakai <alonzakai@gmail.com>, 2016-04-25 16:51:49 -0700, , optimize return flow,,
3262,b48cfe91be0381a049a413e1c6d7d1ba83514a95,lon Zakai <alonzakai@gmail.com>, 2016-04-25 15:48:07 -0700, , optimize break value removeunusedbrs check value flow target anyhow,,
3263,921b57fd7b595d8657c696b8471583f9bf95a0da,lon Zakai <alonzakai@gmail.com>, 2016-04-25 14:14:51 -0700, , update wasm.js,,
3264,3bbde4f1d28e2cc664d8e29cacee7e429251efcf,lon Zakai <alonzakai@gmail.com>, 2016-04-25 14:07:37 -0700, , use arity call,,
3265,ef494cae68946b631abeba80ba6556f320475f0b,lon Zakai <alonzakai@gmail.com>, 2016-04-25 14:04:59 -0700, , use arity switch,,
3266,15c400329191072a59db433056fbdfcc12b67257,lon Zakai <alonzakai@gmail.com>, 2016-04-25 14:03:21 -0700, , use arity return,,
3267,cb417c68cd75e01b9eaef7bb9d06c38c3068e19b,lon Zakai <alonzakai@gmail.com>, 2016-04-25 13:56:47 -0700, , use arity break,,
3268,27ef6de772ca90824018819b91b8a230136f56c3,erek Schuff <dschuff@chromium.org>, 2016-04-25 13:16:18 -0700,370, separate linkerobject linker 383 create linkerobject class wasm module represents module plus information needed relocate lay linker owns main executable linkerobject s2wasmbuilder requires linkerobject instead module llvm asm file require relocation linking represent full wasm module merging support yet real functionality 370 coming soon,,
3269,0d17b75113d4f50d4b05ef3b243dcad962483def,an Wolski <jan@wolski.fi>, 2016-04-25 23:02:09 +0300, , use module instead binaryen.js test 391 use module instead binaryen.js test include compiled binaryen.js,,
3270,902ab1ec7c91597f5cd9be8b9f43d820f19c7960,lon Zakai <alonzakai@gmail.com>, 2016-04-24 17:27:11 -0700, , update build js.sh,,
3271,e62602d6295f9e0c782b720e51ba14217844adbf,lon Zakai <alonzakai@gmail.com>, 2016-04-24 16:57:47 -0700,387, merge pull request 387 webassembly block return nice optimize block return,,
3272,f9cc3ba2d568cc43ff33dbe21606c40e4ddff596,lon Zakai <alonzakai@gmail.com>, 2016-04-24 10:26:39 -0700, , update wasm.js,,
3273,1fa7f7fef75d2cb795f04b2737efb46a280c9cdc,lon Zakai <alonzakai@gmail.com>, 2016-04-22 15:29:16 -0700, , optimize block return merging set_locals flow,,
3274,308a2e24f8690a76d3ada08f4c5cfb70c6cccbb5,lon Zakai <alonzakai@gmail.com>, 2016-04-22 14:56:19 -0700, , comment replacecurrent,,
3275,16eb3c65245bb8a6c60ee3bb3ec7b96e18fe62c6,lon Zakai <alonzakai@gmail.com>, 2016-04-22 14:55:52 -0700, , provide current expression notenonlinear,,
3276,4a12b112defaa80dfb2d661793c809abd4757c0b,lon Zakai <alonzakai@gmail.com>, 2016-04-22 14:54:33 -0700, , fix effectanalyzer block loop branch,,
3277,c2abbda652e2fc92e6bdd710952198ee3005653b,lon Zakai <alonzakai@gmail.com>, 2016-04-24 16:00:47 -0700,389, merge pull request 389 webassembly fix thread fix,,
3278,f86771d7a7752656bbbca17f7a1a4e6a148d4a4d,lon Zakai <alonzakai@gmail.com>, 2016-04-24 15:31:13 -0700, , make optimized build optimized,,
3279,e677013be90a55bdd06cd0752ffee3612ebd6034,lon Zakai <alonzakai@gmail.com>, 2016-04-24 15:20:41 -0700, , back using mutex mixed arena get atomics working,,
3280,f885aad48c55a0e293c5387f88b82c581a5e5c7e,lon Zakai <alonzakai@gmail.com>, 2016-04-24 09:57:25 -0700,386, merge pull request 386 webassembly improve remove improve removebrs,,
3281,186765307f12e6c7628ad6da11b332c2bfbcaa07,lon Zakai <alonzakai@gmail.com>, 2016-04-23 21:50:20 -0700, , run multiple cycle removeunusedbrs,,
3282,7dcb613e392757bd5a442c89f45f885a63d7b1dd,lon Zakai <alonzakai@gmail.com>, 2016-04-23 21:42:52 -0700, , run optimize instruction second time end,,
3283,203d502f9c3c5fc1f16822d3432087785653d767,lon Zakai <alonzakai@gmail.com>, 2016-04-23 21:39:52 -0700, , get rid nops ifs,,
3284,9f1849ef99db9fa8a8a44daec348b7f2bb562453,lon Zakai <alonzakai@gmail.com>, 2016-04-23 20:00:39 -0700, , handle general control flow removeunusedbrs,,
3285,c2dfbb512297e0d008de6ffad4a97799e68b3ed1,lon Zakai <alonzakai@gmail.com>, 2016-04-23 18:12:44 -0700, , vacuum dead code br_table,,
3286,759bafb906ba3addc5ab470ca41455ef452f30ab,lon Zakai <alonzakai@gmail.com>, 2016-04-23 18:10:05 -0700, , vacuum dead code unconditional,,
3287,2cc2b8288f0179b8e506d420dd27fada5652e0c3,lon Zakai <alonzakai@gmail.com>, 2016-04-24 09:09:04 -0700, , allow allocation side thread 365,,
3288,e9349f082af7d3057aa475a76a58cba7adac2b21,lon Zakai <alonzakai@gmail.com>, 2016-04-24 09:04:34 -0700, , build cleanup 385,,
3289,a493b1dfcfbac5165beed3e05891fd467dd4da25,F Bastien <github@jfbastien.com>, 2016-04-23 17:28:27 -0700, , add missing algorithm string header 382,,
3290,c12647ea31f3bb312e721ca8ca6a53246733106d,erek Schuff <dschuff@chromium.org>, 2016-04-22 13:35:22 -0700, , simplify static segment relocation 380 also defer address assignment layout time preparation separating linker object linker,,
3291,41b62f9e8c525f899177a7d34cf24312e65b1337,lon Zakai <alonzakai@gmail.com>, 2016-04-22 11:54:42 -0700, , fix conversion opcodes 381,,
3292,70233cc553b8ab314cf15120e35e7a49ad9b76ab,lon Zakai <alonzakai@gmail.com>, 2016-04-22 10:45:53 -0700,379, merge pull request 379 webassembly zero_x_b 0xb fix,,
3293,0a43823615155f956f078ce7b7a8a580bc01fbe1,lon Zakai <alonzakai@gmail.com>, 2016-04-21 21:26:32 -0700, , br_table offset int32s lebs,,
3294,8a58f27b7cc8effa4ebabc30c633a895cd1fa4b9,lon Zakai <alonzakai@gmail.com>, 2016-04-21 21:00:26 -0700, , put segment right order 378,,
3295,a35db41bcca092212328b6be2fa0eddb635f2f3f,lon Zakai <alonzakai@gmail.com>, 2016-04-21 20:36:34 -0700, , put segment right order,,
3296,a180c863ac4b6882f47e5e05ceeebe94b1208a7d,lon Zakai <alonzakai@gmail.com>, 2016-04-21 19:01:47 -0700,377, merge pull request 377 webassembly zero_x_b 0xb work,,
3297,171668684ad91dc8d397ef411ce5fd337bc7a976,lon Zakai <alonzakai@gmail.com>, 2016-04-21 18:40:20 -0700, , update wasm.js,,
3298,c24d8add1582e6c9caa6c8951d7bcc5c3d64b8c9,lon Zakai <alonzakai@gmail.com>, 2016-04-21 18:37:48 -0700, , function toplevels list,,
3299,cae6b923c96655c1b81cbe821e9b838e87ae7313,lon Zakai <alonzakai@gmail.com>, 2016-04-21 18:36:22 -0700, , block helper utils,,
3300,523cfa206c06fd900cafbe75213e362aaccb4ef0,lon Zakai <alonzakai@gmail.com>, 2016-04-21 18:25:04 -0700, , update wasm.js,,
3301,89292a31f04882a51338e6c1b98532de2d4ad750,lon Zakai <alonzakai@gmail.com>, 2016-04-21 18:24:51 -0700, , ifs binary format always break scope,,
3302,bc8f5204f0ced242dac61957ce0d46e7e9cb6390,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:34:45 -0700, , update wasm.js,,
3303,51283a2da84f8cbd606b64a1883777a4a3a6aff0,lon Zakai <alonzakai@gmail.com>, 2016-04-21 17:32:49 -0700, , fix else body list,,
3304,66412d32a863fff2308ffc349eeca7f6ffbc2a31,lon Zakai <alonzakai@gmail.com>, 2016-04-21 17:13:32 -0700, , fix loop binary parsing,,
3305,a7ddd9614b4a7b567258eb018d5e7827d3f48cba,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:32:47 -0700, , condition popped pre order inline,,
3306,29b750807ec1f017a6b0d5c581608b06e4152ea1,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:10:52 -0700, , update wasm.js,,
3307,10766f949b05379f543ed1f2f4e148fdc9e9ea96,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:06:47 -0700, , update br_table binary format,,
3308,07c4e7b75f91e1d332a33073838098e23befe8c4,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:06:33 -0700, , fix nop printing br_table,,
3309,bcfa7289f5df48f40e59542f66c0504cfae3a19b,lon Zakai <alonzakai@gmail.com>, 2016-04-21 16:04:52 -0700, , fix spidermonkify,,
3310,e9ba8d7dfe1754cb48b1efeb6eb9572bd6388a4e,lon Zakai <alonzakai@gmail.com>, 2016-04-21 15:53:16 -0700, , fix reinterpret opcode,,
3311,569eeebd307710b3de0a0da60a85f123dd9cf0c5,lon Zakai <alonzakai@gmail.com>, 2016-04-21 14:57:17 -0700, , update wasm.js,,
3312,a90070a487d232555831959d78e1c47e9274c97d,lon Zakai <alonzakai@gmail.com>, 2016-04-21 15:09:29 -0700, , update eqz opcodes,,
3313,d5afd73f49c592315200e02d6f56313fbc9d8c3e,lon Zakai <alonzakai@gmail.com>, 2016-04-21 15:07:10 -0700, , spidermonkify debugging comment,,
3314,fab4db7cd141388b9fdf5c0632f50912fff38891,lon Zakai <alonzakai@gmail.com>, 2016-04-21 15:05:47 -0700, , name unnamed function binary,,
3315,d0aa7bd92d4ccd0148c082fb4df5c0d21aba88ba,lon Zakai <alonzakai@gmail.com>, 2016-04-21 14:54:28 -0700, , function ending fix,,
3316,9310952685937ea824b8b49288e3a30180ff6dc1,lon Zakai <alonzakai@gmail.com>, 2016-04-21 14:52:46 -0700, , fix file size binary file read,,
3317,7b180b286a3df1a231454399869516ae8571d9bb,erek Schuff <dschuff@chromium.org>, 2016-04-21 13:52:18 -0700,370, move wasm linker cpp file 375 still making thing nicer 370 pulling wasm linker file also necessitated pulling asm_v_wasm.h cpp file new lib directory src asmjs actual code change,,
3318,bf110a08e4e717961d811170a49a72212fbf0b96,lon Zakai <alonzakai@gmail.com>, 2016-04-21 13:46:27 -0700, , support exporting memory binary,,
3319,a4aba7acd77a2e86ae23f243962be78e889c35d3,ury Delendik <ydelendik@mozilla.com>, 2016-04-21 15:31:13 -0500,345, remove wasm parser debug logging binaryen.idl 373 continuation 345 see http github.com webassembly binaryen commit diff currently building binaryen.js fails src glue.cpp 102 error matching constructor initialization wasm,,
3320,36bb0ed43c9e0644cc92b6508ec2fff290c17034,erek Schuff <dschuff@chromium.org>, 2016-04-21 13:16:59 -0700, , move fatal utilities.h 376 follow 372. probably even better error handling might mean cpp file support small improvement,,
3321,20ecea3457553e308bede7037a5ac625916e074f,erek Schuff <dschuff@chromium.org>, 2016-04-21 12:49:23 -0700,370, factor linker related functionality s2wasmbuilder class 372 first couple refactorings 370 functionality change minimal code change make work,,
3322,34a74e9e72d2a572bb8ae9f820f4b553fa06632a,lon Zakai <alonzakai@gmail.com>, 2016-04-20 18:39:19 -0700,374, merge pull request 374 webassembly opts tiny optimization tweak,,
3323,7ce2aefd8e14d6507fbe4abdcbbba9b0507944f0,lon Zakai <alonzakai@gmail.com>, 2016-04-20 17:49:02 -0700, , optimize vacuum little,,
3324,39afd2a64d72b251fc2da067d338d826b06985b7,lon Zakai <alonzakai@gmail.com>, 2016-04-20 17:42:04 -0700, , crash printing expression whose function known,,
3325,6b7963ca2c79836a984a4c74121a55e523f797f0,lon Zakai <alonzakai@gmail.com>, 2016-04-20 17:41:07 -0700, , run merge block later optiize simplify local output,,
3326,a6112412ce60546f9d9523476edddc0a891ad11e,lon Zakai <alonzakai@gmail.com>, 2016-04-20 17:40:26 -0700, , add utility check result used,,
3327,c2d9d476b853212e96f301106cf00ceb19baefca,ury Delendik <ydelendik@mozilla.com>, 2016-04-20 18:13:16 -0500,371, merge pull request 371 yurydelendik initarray mutilple par one entry .init_array section,,
3328,b9637c4b74d340e1e8f5a3ab7a4f11e4fee7ce76,ury Delendik <ydelendik@mozilla.com>, 2016-04-20 17:15:52 -0500, , par one entry .init_array section,,
3329,86154bff23044b24e18235c8c92721eb463e616a,lon Zakai <alonzakai@gmail.com>, 2016-04-20 08:24:59 -0700,368, merge pull request 368 webassembly zero_x_b 0xb update,,
3330,589fb94100c02f8a6e6e923b73d5f7e578fe978a,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:24:34 -0700, , update wasm.js,,
3331,0bd8ffe12c3375706504e9af8440dbe9cd271bf8,lon Zakai <alonzakai@gmail.com>, 2016-04-19 22:08:52 -0700, , comment,,
3332,6159981ce829941a6950610d1f56f763adaaedc7,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:55:08 -0700, , update check.py wasm default method native binary support,,
3333,877d785ad57a96020257ed38f9e1ccbb13692350,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:50:29 -0700, , update emscripten,,
3334,d9d594dfab8f7f31c8e54751f28147d7eb53d574,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:47:37 -0700, , update test,,
3335,3fb82c630ac40fdbf879e191448aeb3bd1ce9c9e,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:25:38 -0700, , disable asm2wasm i64 opts browser ready,,
3336,84b176f04bdea84ebcbddc5c661920b7966491c5,lon Zakai <alonzakai@gmail.com>, 2016-04-19 20:06:55 -0700, , update binary version 0xb,,
3337,31dd39afd6197743d3ccbb2cfa4276134c6751d2,lon Zakai <alonzakai@gmail.com>, 2016-04-19 10:56:11 -0700,640, extensible type form update design 640 367,,
3338,2553dbe4c01a0f7d04f230bebe3ba41825ede46e,lon Zakai <alonzakai@gmail.com>, 2016-04-19 08:57:41 -0700, , save module walker object pass easy way access module 366,,
3339,eb50dce005ad4ca10aaad7d15aa7a518d39ae887,lon Zakai <alonzakai@gmail.com>, 2016-04-18 17:56:23 -0700,364, merge pull request 364 webassembly update spec test update,,
3340,237cb832673ba6478bcd9bfa395f2f2c07e97a9d,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:16:43 -0700, , update wasm.js,,
3341,fcdea4f9f43e8b96c5b5af972fc144780b3d2130,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:09:39 -0700, , update test,,
3342,650928c4c4877186134556ae684938662d9e23ec,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:09:05 -0700, , disable wasm2asm test well check.py,,
3343,d06406cc9d05e5654a3df73ab1d09252c774aadb,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:07:08 -0700, , grow_memory return unit page size,,
3344,9f61ec61a3c46705ac0b81e87a591ae9e58d030c,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:05:49 -0700, , current_memory return unit page size,,
3345,f0f98a3480394495a11d73c74ea81808bea44530,lon Zakai <alonzakai@gmail.com>, 2016-04-18 16:00:12 -0700, , update memorysize currentmemory,,
3346,0b5d70e43b4b984ed7a25cf16ee2ccece3812dbf,lon Zakai <alonzakai@gmail.com>, 2016-04-18 15:54:55 -0700, , fix br_table order evaluation value first,,
3347,684ed50648fd45199edca7532c743b16a7050695,uddhabrot <maarten.mortier@gmail.com>, 2016-04-19 00:27:43 +0200, , fix readme.md ninja documentation 263 fixed readme.md mistake ninja generator,,
3348,003834c73f30268f5314cc717b994368cd548d98,lon Zakai <alonzakai@gmail.com>, 2016-04-18 14:49:59 -0700,359, merge pull request 359 webassembly dead store todos simplifylocals,,
3349,d3653cb44c4798290ce6bb579789fc2792986d5e,lon Zakai <alonzakai@gmail.com>, 2016-04-17 10:47:37 -0700, , handle dead store simplifylocals,,
3350,d0c419f70938023bfc1c72365f9901a718a9eec6,lon Zakai <alonzakai@gmail.com>, 2016-04-17 10:33:59 -0700, , remove old comment simplifylocals,,
3351,b2fbce4f40c4b8adfdb7cd291d510de9e7219fc6,lon Zakai <alonzakai@gmail.com>, 2016-04-18 13:44:51 -0700, , create pass want single visitor function avoid confusion visit visitexpression single pas 357,,
3352,0438aa2383724cf0b29554ecb396c9ef26dab92d,lon Zakai <alonzakai@gmail.com>, 2016-04-18 13:15:50 -0700, , use vector get_local count simplifylocals 356,,
3353,ae7bc10828f64f06647cd45449d3c67acb1effb3,lon Zakai <alonzakai@gmail.com>, 2016-04-18 12:06:29 -0700, , update binary section name per latest design 363,,
3354,5494c531db30145e7bf8745b46e9784967781616,lon Zakai <alonzakai@gmail.com>, 2016-04-18 11:52:07 -0700, , remove class make module allocation distinction really useful pass need allocate would need pas around around anyhow 361,,
3355,a2b0849ab7e2ca0d6136c57db7321d20965b89f4,lon Zakai <alonzakai@gmail.com>, 2016-04-18 11:47:31 -0700, , let traversal access current function 355,,
3356,b08aa103597b00a2b4a54d81cde6454f3082b4d5,lon Zakai <alonzakai@gmail.com>, 2016-04-18 11:47:04 -0700, , index local get_local set_local index local name kept function object 354,,
3357,c611306758e6c811642623500a51b0da52758303,lon Zakai <alonzakai@gmail.com>, 2016-04-18 11:44:55 -0700,353, merge pull request 353 webassembly thread tweak thread fix,,
3358,4b5d4efc7091e25b303cb57076ebdee980b8b464,lon Zakai <alonzakai@gmail.com>, 2016-04-18 11:44:23 -0700, , nicer pas printing 358,,
3359,bbc39d6e75e8b87170f7a3cd72dd34976687e7f6,ury Delendik <ydelendik@mozilla.com>, 2016-04-18 13:40:27 -0500,352, fix typo hex number parsing asm2wasm 362 fix 352,,
3360,d929ba9756378b4b67a921714f608b505cb6cb99,lon Zakai <alonzakai@gmail.com>, 2016-04-18 10:30:38 -0700, , use pthread compile flag link flag,,
3361,60f1c1516df1218b37f1cd2caba847c48ba93f67,lon Zakai <alonzakai@gmail.com>, 2016-04-15 20:48:57 -0700, , fix threadpool size thread object created one core since run main thread anyhow,,
3362,1b1df06741db2368ed05d7589b5588edfeb68fae,lon Zakai <alonzakai@gmail.com>, 2016-04-15 20:48:15 -0700, , allow limiting core thread pool useful debugging,,
3363,4dfeb1c3a84b13188c22e158c5947c68964cddff,lon Zakai <alonzakai@gmail.com>, 2016-04-15 15:34:07 -0700, , function parallelism 343 allow traversal mark function parallel case run using thread pool also mark thread safety risk interned string arena allocator assertion modify main thread,,
3364,f2905f962984df939555aad134c48a194b9e270d,F Bastien <github@jfbastien.com>, 2016-04-15 14:25:07 -0700, , allow tsan fail 351 shoulnd timeout anymore,,
3365,e61a73d633769473e26d534bd7cac26d7891ef19,F Bastien <jfb@chromium.org>, 2016-04-15 13:54:24 -0700, , update waterfall get rlimit bump,,
3366,8e1d662f4e7b1611e39d6deaadc60e2ed2da7e85,an Wolski <jan@wolski.fi>, 2016-04-15 21:17:58 +0300, , clarified wasm.js binaryen.js use case 350,,
3367,3e28445757a8904dc0927698c5b9f33d3a0caeaf,lon Zakai <alonzakai@gmail.com>, 2016-04-14 17:39:03 -0700,336, rename function local params var together local preparation 336 349,,
3368,f0c739b5f78e63e9ad4c11bfdc50a55ef18b388f,lon Zakai <alonzakai@gmail.com>, 2016-04-14 16:39:30 -0700, , add debug mode passrunner log time 344 add debug mode passrunner log time address comment,,
3369,4bbc4fda9623a92377552c83d99686d010b4e364,lon Zakai <alonzakai@gmail.com>, 2016-04-14 10:49:51 -0700, , refactor check.py use run_command method check proc return code instead hackishly looking stderr error 346,,
3370,2887883029de293458344a5d564039074d93246e,lon Zakai <alonzakai@gmail.com>, 2016-04-14 10:38:23 -0700, , remove excessive wasm parser debug logging 345,,
3371,b3f9bb4c4a2f919ae0d73aa880609ad51abdc6b8,erek Schuff <dschuff@chromium.org>, 2016-04-13 16:10:15 -0700, , generate emscripten dyncall thunk s2wasm 342 generate emscripten dyncall thunk s2wasm part usual emscripten glue asm.js thunk calling function module given function pointer aka dyncall implemented via thunk generated module called dyncall_ signature give support s2wasm generate thunk wasm module along emscripten glue also introduces flag s2wasm make generation emscripten glue optional,,
3372,f2753329c4c647cc6950f62f944a39de06ab4c88,lon Zakai <alonzakai@gmail.com>, 2016-04-12 09:54:53 -0700,341, merge pull request 341 webassembly opts optimization goody,,
3373,6302b75a023154bad7e11551e27d54bc35b415da,erek Schuff <dschuff@chromium.org>, 2016-04-12 09:19:59 -0700, , add method generate dyncall thunk 337 currently called anywhere bulk change refactoring add makefunction makereturn wasm builder make s2wasmbuilder call,,
3374,5da280167ac6f3e76d27c109ee08ae1747405b5c,lon Zakai <alonzakai@gmail.com>, 2016-04-11 21:21:50 -0700, , drop completely unused local reorderlocals,,
3375,546a234d6e195a69c5e0b89cf20ed020f8d09db5,lon Zakai <alonzakai@gmail.com>, 2016-04-11 21:18:21 -0700, , add reorder local testcase,,
3376,3c961d1383629e9907bc8d4c5b6f1f566d13a3f2,lon Zakai <alonzakai@gmail.com>, 2016-04-11 20:27:35 -0700, , continue simplifying local opportunity present,,
3377,cfa616dffc11e82390070315cc2e4635e42c437e,lon Zakai <alonzakai@gmail.com>, 2016-04-11 20:26:58 -0700, , allow overriding startwalk function,,
3378,57c8e86a69e7d191e3a5698f81bc7e7627716bf0,lon Zakai <alonzakai@gmail.com>, 2016-04-11 20:17:36 -0700, , add simplify local testcase,,
3379,dbfe22ed34ac3941ff14946b34f4ac4acfda3359,lon Zakai <alonzakai@gmail.com>, 2016-04-11 20:02:29 -0700, , refactor default optimization pass central location,,
3380,73c606a04d01dc7018d028eed3216a507ab03ee9,lon Zakai <alonzakai@gmail.com>, 2016-04-11 19:43:58 -0700,334, merge pull request 334 webassembly opts2 optimization,,
3381,1044d6cbca6d279d457cdd1cf7000671ec48e841,lon Zakai <alonzakai@gmail.com>, 2016-04-11 17:31:10 -0700, , dyn_cast dyncast,,
3382,9663f99fa5beb06255d9b564ae9926cfb80a53d8,lon Zakai <alonzakai@gmail.com>, 2016-04-11 17:26:39 -0700, , remove unneeded virtual destructor,,
3383,59a4bb90b9214f66df0854979c5bf6a180b286e7,lon Zakai <alonzakai@gmail.com>, 2016-04-10 19:33:56 -0700, , remove set_locals remaining get simplifylocals,,
3384,2b195ce5d72da0786183c169d6e56e1d0c60042e,lon Zakai <alonzakai@gmail.com>, 2016-04-10 19:02:24 -0700, , add simplify local test,,
3385,2df4d555ae85e0748a26e7f2a278a64f13281c50,lon Zakai <alonzakai@gmail.com>, 2016-04-10 18:55:14 -0700, , track individual local effectanalyzer,,
3386,65d9334b3066bae667e729f3202f7aa2d7c11530,lon Zakai <alonzakai@gmail.com>, 2016-04-11 13:40:07 -0700, , recurse traversal 333 refactor core walking recurse add simplify local test reuse parent non branchey scan logic reduce code duplication update wasm.js rename thing following comment,,
3387,675c045de41d609e431a5b97f8b00fe433dd18cd,F Bastien <github@jfbastien.com>, 2016-04-10 16:22:12 -0700, , update revision 5147 332,,
3388,3e00d9a1481c6f61cef163b186c2b13b8160cdad,lon Zakai <alonzakai@gmail.com>, 2016-04-09 18:34:12 -0700,329, merge pull request 329 webassembly opts begin ast builder helper class asm2wasm opts,,
3389,4c98c3f9c6d0c98fbcbaa44a4fc5eb3b7e21b201,lon Zakai <alonzakai@gmail.com>, 2016-04-09 12:34:29 -0700, , add option print full ast elision,,
3390,d70661f8372ebd72a15e39675eddda463d8cdb31,lon Zakai <alonzakai@gmail.com>, 2016-04-09 12:22:15 -0700, , clean print,,
3391,27db261724ad96e8251fa2dcd28806cd887bb667,lon Zakai <alonzakai@gmail.com>, 2016-04-09 12:14:43 -0700, , add counter expression,,
3392,07cd2e2902124e667dd136a77cf7ebaa06ae60ae,lon Zakai <alonzakai@gmail.com>, 2016-04-09 11:45:37 -0700, , add test eqz comparison folding,,
3393,f03404e14317b79e47d11300ab21f8e92036fa85,lon Zakai <alonzakai@gmail.com>, 2016-04-09 10:55:04 -0700, , fold eqz comparison,,
3394,98a76440fa47c784b3e425aa3ae4d3a3bad05f25,lon Zakai <alonzakai@gmail.com>, 2016-04-09 10:46:26 -0700, , optimize asm2wasm loop branch using eqz,,
3395,b7fbe0910cddf984426505de51200ed263d834d8,lon Zakai <alonzakai@gmail.com>, 2016-04-09 10:04:32 -0700, , fix asm2wasm udivmoddi4 optimization gettempret0,,
3396,8efc401621d1794c057bfb43345b6ac4d615b2e0,lon Zakai <alonzakai@gmail.com>, 2016-04-08 18:47:17 -0700, , ast builder class use optimzie umoddi4 asm2wasm,,
3397,f046fa3a19252e2dc301a82e7f699aec4dc2eb43,lon Zakai <alonzakai@gmail.com>, 2016-04-08 21:08:22 -0700, , fix bug if.finalize,,
3398,6efa130aaf02ef6b5ae838308eb2a85e70db2858,lon Zakai <alonzakai@gmail.com>, 2016-04-08 17:20:17 -0700, , optimize llvm.cttz.i32 i32.ctz,,
3399,d30b98d47697daa167333db66ac0fe3d8a693eae,lon Zakai <alonzakai@gmail.com>, 2016-04-07 21:28:26 -0700,319, merge pull request 319 webassembly traversal refactor traversal header,,
3400,540056ededd811b859e0cf4db9782d8cb7711215,lon Zakai <alonzakai@gmail.com>, 2016-04-07 20:44:27 -0700, , update wasm.js,,
3401,1b6a1099f857d70005380cb4f980c9defeba4b22,lon Zakai <alonzakai@gmail.com>, 2016-04-07 20:42:17 -0700, , add missing check nested block,,
3402,db3d83e79532cd48fbd852f7ab1370d0218dfe91,lon Zakai <alonzakai@gmail.com>, 2016-04-07 20:36:53 -0700, , refactor check simplifylocals,,
3403,e39dfc187c9d9582c3cb786447ddab57ecdd341c,lon Zakai <alonzakai@gmail.com>, 2016-04-07 19:22:11 -0700, , update wasm.js,,
3404,e444aefddd6e491e193e5eb53beae0c3f9252422,lon Zakai <alonzakai@gmail.com>, 2016-04-07 19:16:37 -0700, , handle loop effect analyzer,,
3405,0a03aacd4ea32476714066eebe0cded77c87ca66,lon Zakai <alonzakai@gmail.com>, 2016-04-07 19:09:05 -0700, , block must mark branching effect analyzer control flow join end block branched,,
3406,e98b5a7d1866a9f29c5bf06a9b231894222ad30b,lon Zakai <alonzakai@gmail.com>, 2016-04-07 19:04:29 -0700, , fix invalidation logic simplifylocals visit node hit walk look invalidating element child already saw,,
3407,0d267afdf948de326055e58a94e5f48d9310a52a,lon Zakai <alonzakai@gmail.com>, 2016-04-07 17:54:02 -0700, , derecurse block helper use simplifylocals,,
3408,24b0cf11a4b2482ceae7d9e64af576ce2f472479,lon Zakai <alonzakai@gmail.com>, 2016-04-07 15:43:38 -0700, , start pass check.py,,
3409,f86afff36d364ba2daf2102264880d70907bd6ab,lon Zakai <alonzakai@gmail.com>, 2016-04-07 12:13:28 -0700, , update wasm.js,,
3410,67762b6f5639d1ef5ab6861895713f7860d3d9fb,lon Zakai <alonzakai@gmail.com>, 2016-04-07 12:06:56 -0700, , update test,,
3411,6279be0fb7013db1bc89755f9bc8db4befef2ddf,lon Zakai <alonzakai@gmail.com>, 2016-04-07 12:03:11 -0700, , fix effect invalidation logic,,
3412,068a3ed6efdb3f6b0c3b93cdf89bf6a02a5bb113,lon Zakai <alonzakai@gmail.com>, 2016-04-07 11:34:45 -0700, , add simplify local testing,,
3413,2bf63aadfbf30494455ac31c2fe90bdbc6774d71,lon Zakai <alonzakai@gmail.com>, 2016-04-07 11:13:41 -0700, , add vacuum pas,,
3414,5d7631a655926f57f824c31505694adac1f44c39,lon Zakai <alonzakai@gmail.com>, 2016-04-06 21:21:09 -0700, , rewrite simplifylocals use,,
3415,1ba1cee0514b1ba16ef474daf3f2b964d5f784eb,lon Zakai <alonzakai@gmail.com>, 2016-04-06 21:20:40 -0700, , traversal improvement,,
3416,7bfdd4fc4e0328ab60796f9fc2bf37cb6b81c3b5,lon Zakai <alonzakai@gmail.com>, 2016-04-06 20:51:17 -0700, , move method wasmwalkerbase,,
3417,53f4c97487e90baa226614e63867add700ed12e5,lon Zakai <alonzakai@gmail.com>, 2016-04-06 20:51:08 -0700, , effectsanalyzer,,
3418,e5b5e0111879ef7bd80c7d36f22bd9844faa8d4f,lon Zakai <alonzakai@gmail.com>, 2016-04-06 17:05:12 -0700, , refactor class,,
3419,c0f0be986d9009a05a3bbaf42c841b863d9b83c1,erek Schuff <dschuff@chromium.org>, 2016-04-06 16:18:05 -0700, , ensure static initializer function exported,,
3420,3c6203ab0c936570c0e9cf25d810c911fc93fc05,lon Zakai <alonzakai@gmail.com>, 2016-04-06 15:36:12 -0700, , add,,
3421,41b7c45e6ad662161a8cdc5fd5c88e3bae3363fc,lon Zakai <alonzakai@gmail.com>, 2016-04-06 13:20:49 -0700, , remove obsolete comment,,
3422,eee81f13cf8e7652cd9733d03de57bd9e9e7def7,lon Zakai <alonzakai@gmail.com>, 2016-04-06 13:20:15 -0700, , refactor wasm traversal code separate file,,
3423,a3279d60a87539301186f0558231f726dc905cdc,lon Zakai <alonzakai@gmail.com>, 2016-04-06 15:37:24 -0700, , optimize eqz,,
3424,265225f703a6d94dd20d42c322233b52d73f22f8,erek Schuff <dschuff@chromium.org>, 2016-04-06 15:28:30 -0700, , fix output initializer list metadata fix output initializer list metadata turn trailing comma valid json,,
3425,c4c82597aaf43d7fee3cd8877801d9dd91e33f7b,erek Schuff <dschuff@chromium.org>, 2016-04-06 15:12:14 -0700, , fix s2wasm handling aliased function fix bug s2wasm handle address taken alias i.e appear relocation looking subsituting address aliasee skip whitespace top scan loop instead requiring match multiple alias declaration row match function end alias delcaration consumes whitespace beginning next line causing fail match tab character specified match pattern top loop,,
3426,0d1a66c540a2c89e1d4543fe318976ad1c6411f1,erek Schuff <dschuff@chromium.org>, 2016-04-06 14:38:03 -0700, , allocate __dso_handle s2wasm unlike asm.js module wasm module imported extern object allocate __dso_handle traditionally defined crtbegin similar toolchain file linked user code s2wasm,,
3427,62c07b549d14dfb974f73554026f0b9fff365968,erek Schuff <dschuff@chromium.org>, 2016-04-06 11:58:55 -0700, , properly align stack pointer properly align stack pointer default global base given global base seems wrong case stack pointer get address unaligned definitely wrong start global base instead default align stack pointer also factor allocation static function unconditionally allocate stack pointer explicitly reserve address,,
3428,c885ca69d19e7bd2c58b44eef242de334ac8c9dd,erek Schuff <dschuff@chromium.org>, 2016-04-06 09:05:09 -0700, , handle static initializers llvm emits static initializers elf style placing pointer constructor function .init_array section handle s2wasm converting standard emscripten metadata,,
3429,176cac16a7a7910620f88d62b6a5675cdca87741,lon Zakai <alonzakai@gmail.com>, 2016-04-05 16:13:04 -0700,314, merge pull request 314 webassembly binary update binary format update,,
3430,656fc9ec3161111b27be861b1e920e4f77b4bf60,lon Zakai <alonzakai@gmail.com>, 2016-04-05 15:07:44 -0700, , fix assertion,,
3431,e776a41a97756d9f0c2efee84d48c7b25b477fee,lon Zakai <alonzakai@gmail.com>, 2016-04-05 14:53:34 -0700, , update wasm.js,,
3432,b2ecb1b9d1403fad7b0f8796b9b3ed257007780a,lon Zakai <alonzakai@gmail.com>, 2016-04-05 14:49:17 -0700,641, binary code update else update see design 641,,
3433,e14cbf695a6f30373a94d00f1e06c0af5c556892,lon Zakai <alonzakai@gmail.com>, 2016-04-05 11:28:09 -0700, , update wasm.js,,
3434,559c3372cfc68a338a204f58cb5e559a35f4ae4b,lon Zakai <alonzakai@gmail.com>, 2016-04-05 11:24:50 -0700,639, reorder section size location binary format see design 639,,
3435,155223a2a0dd222817881dab85fa11166cc5bbb3,lon Zakai <alonzakai@gmail.com>, 2016-04-05 09:49:37 -0700,312, merge pull request 312 webassembly webidl webidl binding,,
3436,ea448f35ada45647c200019cc34b4315cb16cdd9,lon Zakai <alonzakai@gmail.com>, 2016-04-05 08:57:07 -0700, , fix example testcase,,
3437,391d5cebaa5ad227a6e97f821bedee1dbf92b59a,lon Zakai <alonzakai@gmail.com>, 2016-04-04 21:44:06 -0700, , add testing binaryen.js,,
3438,55d0683bfe07485c4b53cad0433da3f0e91bddd3,lon Zakai <alonzakai@gmail.com>, 2016-04-04 21:38:04 -0700, , idl addition fix idl test,,
3439,4ba903820b63ba9137d297ff05030b754099803d,lon Zakai <alonzakai@gmail.com>, 2016-04-04 21:31:13 -0700, , trap bad callexport assert,,
3440,57779ed47c2e126a5455c5eb560928e958312015,lon Zakai <alonzakai@gmail.com>, 2016-04-04 21:02:31 -0700, , idl test fix,,
3441,8388772a8a41a7e65e2285b9ca37ba8c2cfe103f,lon Zakai <alonzakai@gmail.com>, 2016-04-04 20:59:01 -0700, , idl,,
3442,c93cb496e9decf897f4a9b28d8be5c7afc94e577,lon Zakai <alonzakai@gmail.com>, 2016-04-04 20:58:50 -0700, , refactor printing,,
3443,475a152951e5ca2a675640dfb6155ea4f1b9c137,lon Zakai <alonzakai@gmail.com>, 2016-04-04 18:06:43 -0700, , add necessary idl constructor,,
3444,526ef65bf5b5424784074b44f705e9e90934d858,lon Zakai <alonzakai@gmail.com>, 2016-04-04 17:46:14 -0700, , add debug param,,
3445,cebc941e9d0772faa74aeb8cf2ebf6c4ceaaa15b,lon Zakai <alonzakai@gmail.com>, 2016-04-04 17:39:57 -0700, , update example,,
3446,5f7257a970cb3bedfbb26da77843c85db8af83b3,lon Zakai <alonzakai@gmail.com>, 2016-04-04 16:48:21 -0700, , refactor shell interface file,,
3447,70a61e1b1fc2f85c81201b6a1e7d2e71e36dcee3,lon Zakai <alonzakai@gmail.com>, 2016-04-04 16:45:11 -0700, , add simpler constructor,,
3448,178b869dcdab8ad5877101cbc0347a23e80b02c0,lon Zakai <alonzakai@gmail.com>, 2016-04-04 16:44:39 -0700, , clean callexport type,,
3449,10196a4dfae03b08748af26d930c141998cf3e21,lon Zakai <alonzakai@gmail.com>, 2016-04-04 16:44:24 -0700, , clean old comment,,
3450,b243bf42bf89bee18ece60fb0607cf1fb70ce702,lon Zakai <alonzakai@gmail.com>, 2016-04-04 17:24:07 -0700,311, merge pull request 311 webassembly module access access module element using call,,
3451,e6e701474b102b0f9b9d15f6b2c82f26cf956b6d,lon Zakai <alonzakai@gmail.com>, 2016-04-04 14:34:19 -0700, , update wasm.js,,
3452,9fb040740ec3ca1c298ecd95f21c071ab1ab170e,lon Zakai <alonzakai@gmail.com>, 2016-04-04 14:34:02 -0700, , add apis accessing module element,,
3453,f84152a645d5585bb16f37164f838f87bfcf972e,lon Zakai <alonzakai@gmail.com>, 2016-04-04 11:02:54 -0700,310, merge pull request 310 webassembly load64unaligned fix unaligned bit load wasm.js,,
3454,891807fbf2c97df974b38fae5abc353d6843c8f1,lon Zakai <alonzakai@gmail.com>, 2016-04-04 10:28:33 -0700, , update wasm.js,,
3455,47c88ce06292b77fe75522cfa8d8f8b4126bb19c,lon Zakai <alonzakai@gmail.com>, 2016-04-04 10:24:57 -0700, , handle unaligned i64 load wasm js.cpp,,
3456,e959e9b05a7e24b4bfff252ac9b959e9eecd35af,lon Zakai <alonzakai@gmail.com>, 2016-04-04 10:07:01 -0700,309, merge pull request 309 webassembly update 4893 update waterfall 4893,,
3457,a76de5b15b946b677faca9b830071761cd969579,F Bastien <jfb@chromium.org>, 2016-04-04 08:24:54 -0700, , update waterfall 4893 new failure trap final memory 65524,,
3458,c70c7513aa97229d0008aa22319ac44caad8205e,lon Zakai <alonzakai@gmail.com>, 2016-04-01 17:44:57 -0700,308, merge pull request 308 webassembly update emscripten update emscripten,,
3459,ef7e49682a06f5e07eb240c70caabcbd786410b1,lon Zakai <alonzakai@gmail.com>, 2016-04-01 17:34:37 -0700, , update wasm.js,,
3460,64f173d71a0cc97de0d5b77b572b5637f481e2df,lon Zakai <alonzakai@gmail.com>, 2016-04-01 17:34:21 -0700, , verify import valid wasm.js wait abort called,,
3461,c0c0abc12c62dc4f86eb42a09b0f47b212eb273d,lon Zakai <alonzakai@gmail.com>, 2016-04-01 17:22:35 -0700, , update emscripten,,
3462,8140bfd01a50374b3511434d89514af7e9e5c3cf,lon Zakai <alonzakai@gmail.com>, 2016-04-01 16:43:21 -0700,307, merge pull request 307 webassembly update fix memory growth,,
3463,493e2d928189e97b0309cf25844a98061fbbf906,lon Zakai <alonzakai@gmail.com>, 2016-04-01 16:32:02 -0700, , update wasm.js,,
3464,1bf1dd8864d7752ef23d55907f3664e43cabc059,lon Zakai <alonzakai@gmail.com>, 2016-04-01 16:31:43 -0700, , fix reallocbuffer send growwasmmemory size page,,
3465,dd3086a32e790c423c48bf2cfe6a7d8cc8754a15,lon Zakai <alonzakai@gmail.com>, 2016-04-01 16:02:06 -0700,286, merge pull request 286 webassembly asm2wasm opts asm2wasm opts,,
3466,6daea13bd8e31bbf098a2c0bef92932f70a6f47f,lon Zakai <alonzakai@gmail.com>, 2016-03-28 15:53:09 -0700, , handle minified tempdoubleptr,,
3467,63fb0a4c2541a622275948cebec2fdf30434f848,lon Zakai <alonzakai@gmail.com>, 2016-03-28 15:03:32 -0700, , optimize bitcast pattern asm2wasm,,
3468,bca89bde3e532e0632dd08c478cf5ca14645b2ed,lon Zakai <alonzakai@gmail.com>, 2016-03-28 14:30:39 -0700, , add test bitcast pattern asm2wasm,,
3469,b22f29a4ee0858721278df7d9cea1a487bc7b543,lon Zakai <alonzakai@gmail.com>, 2016-04-01 10:50:38 -0700,305, merge pull request 305 webassembly enums refactor file flag enums,,
3470,59972bd1b723d6a2441ef74d724b1355e07fea2f,lon Zakai <alonzakai@gmail.com>, 2016-03-31 15:37:53 -0700, , refactor file flag enums,,
3471,d0ae4a2d778a92be712d3f510f94273bb3e394da,F Bastien <github@jfbastien.com>, 2016-03-31 15:12:04 -0700,303, merge pull request 303 webassembly binary file window set binary bit file need open binary mode,,
3472,286b5bebd2c2f9bfe66b84b9b258c63afaac89f1,lon Zakai <alonzakai@gmail.com>, 2016-03-31 11:10:46 -0700, , set binary bit file need open binary mode,,
3473,57bd72bee0153ad41c9e4f9441cd2cf19ab89d81,lon Zakai <alonzakai@gmail.com>, 2016-03-31 11:08:49 -0700,301, merge pull request 301 pjuftring file size_check repair broken file size check,,
3474,a20ae57a77332f8c49fdfb0c5536f46c3627d141,juftring <uftring@hotmail.de>, 2016-03-31 19:58:50 +0200, , repair broken file size check,,
3475,2a6d8344caa4d52864a08440535eec1752b94302,F Bastien <github@jfbastien.com>, 2016-03-31 08:26:24 -0700,300, merge pull request 300 ossy szeged buildfix fix build gcc 5.3.1 clang 3.8.0,,
3476,122a26b01657b4be63c0e25ae140c9994a8d446a,saba OsztrogonÃ¡c <oszi@inf.u-szeged.hu>, 2016-03-31 17:11:01 +0200,299, fix build gcc 5.3.1 clang 3.8.0 fix 299,,
3477,4848d6f15206dd4a92205fdf6b34885c7463d512,lon Zakai <alonzakai@gmail.com>, 2016-03-30 17:47:19 -0700,296, merge pull request 296 juj ,,
3478,9b79d4ccac0c47e58ce3cfe033730106b6fd302f,lon Zakai <alonzakai@gmail.com>, 2016-03-30 17:46:55 -0700,297, merge pull request 297 webassembly test wasm backend,,
3479,57275446a9cca19ab58bb937753cf75cbd1481fb,lon Zakai <alonzakai@gmail.com>, 2016-03-30 17:05:46 -0700, , add testing vanilla llvm emcc without hack thing starting work add full real hello world testcase,,
3480,bb124a9d8bf891d2482600396a7495f3051a3455,lon Zakai <alonzakai@gmail.com>, 2016-03-30 17:01:51 -0700, , avoid hardcoded function pointer address test,,
3481,d984d25273c512b0a2de9f60fadbf26500a7abbd,lon Zakai <alonzakai@gmail.com>, 2016-03-30 16:34:49 -0700, , fix wasm.js load aligned i64s,,
3482,84bb319442fc0bc333924679e910c5a3475ca236,lon Zakai <alonzakai@gmail.com>, 2016-03-30 15:37:22 -0700, , update emscripten submodule,,
3483,acf12735450c275a937e5133df618608c9990e18,lon Zakai <alonzakai@gmail.com>, 2016-03-30 15:35:30 -0700, , export memory properly need,,
3484,94e6dbab5d9d8449f09d787201831ab322f60374,lon Zakai <alonzakai@gmail.com>, 2016-03-30 15:35:15 -0700, , update wasm.js,,
3485,292269159ceab5d2443d6931b9cc6f0163665a65,lon Zakai <alonzakai@gmail.com>, 2016-03-30 15:34:57 -0700, , fix wasm.js load i64 read byte,,
3486,9dbec27cb6b65312360dab5175f1ac5574a36dfd,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-30 23:12:59 +0300, , suppress cmake generating debug release etc subdirectory bin lib output directory building cmake multigenerator like visual studio xcode,,
3487,cb71620e64a267bb39412b3b578379835feb64b2,lon Zakai <alonzakai@gmail.com>, 2016-03-30 10:14:46 -0700,295, merge pull request 295 tzik grow_memory_fix fix grow_memory translation s2wasm,,
3488,915089d275ddf28b4b129de047187474d234f8b7,lon Zakai <alonzakai@gmail.com>, 2016-03-29 21:57:03 -0700,293, merge pull request 293 webassembly fix s2wasm function type fix,,
3489,a3626f94e5e7ae2243beded3e3fa796352ca2033,zik <mail@tzik.jp>, 2016-03-30 12:53:33 +0900, , fix grow_memory translation s2wasm s2wasm used mistranslate grow_memory operation memory_size .wast fix,,
3490,da01ed78f16d6793dfe09f70016efba904bcaf4f,lon Zakai <alonzakai@gmail.com>, 2016-03-29 21:20:33 -0700, , add explicit function type indirect call targtets s2wasm,,
3491,4e71858950c4d1bb7ddfac871e72e5802c2e8362,lon Zakai <alonzakai@gmail.com>, 2016-03-29 20:37:49 -0700, , use s2wasm ensure consistent function type name,,
3492,1604b4b7e265095c7d7d22455312684ee8dc0790,lon Zakai <alonzakai@gmail.com>, 2016-03-29 16:58:39 -0700,291, merge pull request 291 webassembly update update,,
3493,62db86d38e0b8253c8777d0f1738047a73b5af0b,lon Zakai <alonzakai@gmail.com>, 2016-03-29 16:05:11 -0700, , update emscripten submodule,,
3494,9a9d5cd4bc8999f184a48b5db16b79d738929c9d,lon Zakai <alonzakai@gmail.com>, 2016-03-29 15:29:28 -0700, , update emscripten submodule,,
3495,43ceb0359156f6e1a7e8e8dd994bc899f0ee1fcf,lon Zakai <alonzakai@gmail.com>, 2016-03-29 15:28:13 -0700, , avoid alignof sake,,
3496,9a9cf237bd52c1587094f4521ad823fa7a17aa13,F Bastien <github@jfbastien.com>, 2016-03-29 13:41:47 -0700,289, merge pull request 289 webassembly minor fix use local enum init line,,
3497,9c549743e741fd9ace8c6832a1e9b2c4cd2bb3eb,F Bastien <jfb@chromium.org>, 2016-03-29 13:11:05 -0700, , use local enum,,
3498,137f11440fb6639b4ec6a30ca1bc817f4fba8e88,F Bastien <jfb@chromium.org>, 2016-03-29 11:16:55 -0700, , use static const init line,,
3499,baac207cf0fe3f207f067b7edec2d6ea6e9e4f65,lon Zakai <alonzakai@gmail.com>, 2016-03-29 11:05:17 -0700,288, merge pull request 288 webassembly fix visual studio fix,,
3500,ecca6d3153e787c345cae1d94b84b1324df5f6a0,lon Zakai <alonzakai@gmail.com>, 2016-03-29 10:36:23 -0700, , avoid constexpr since visual studio like,,
3501,fb0d9509f23472df14d03d93d333d242d23bd2bd,lon Zakai <alonzakai@gmail.com>, 2016-03-28 18:26:24 -0700,287, merge pull request 287 webassembly vs2015_fixes vs2015 fix,,
3502,5cc2c2182332cd17bf12e3cdb58e61d0582eafc1,lon Zakai <alonzakai@gmail.com>, 2016-03-28 18:13:58 -0700, , streampos may signed platform,,
3503,5c1d36fb66b5aad63b02ab44433af201d22eebe0,lon Zakai <alonzakai@gmail.com>, 2016-03-28 18:10:46 -0700, , merge branch vs2015_fixes http github.com juj binaryen vs2015_fixes conflict src support,,
3504,97972db66d30c1acb716e4f7a421f1fbe7410927,lon Zakai <alonzakai@gmail.com>, 2016-03-28 17:38:04 -0700,285, merge pull request 285 webassembly safety first safety stuff,,
3505,1a09f6d5162df5177cf7209f9898cfd5e6705b6c,lon Zakai <alonzakai@gmail.com>, 2016-03-28 13:51:37 -0700,283, use strncpy 283,,
3506,68e15c423d92dd69138702cc572e503a33b31782,lon Zakai <alonzakai@gmail.com>, 2016-03-28 13:42:53 -0700,284, merge pull request 284 webassembly tighten safe int tighten safe integer,,
3507,e34634c2448d0de88284ec01356e8cb98af54ada,F Bastien <jfb@chromium.org>, 2016-03-28 12:52:56 -0700,282, tighten safe integer 282 removed assert code handle negative unsigned conversion properly behave well 0.0. super comfortable bit int min max double conversion either another patch,,
3508,cefb6b6e05c985524e885af17160b9e146f9b088,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 21:38:54 +0300, , add missing cctype include conflict src wasm parser.h,,
3509,246c58952f4f56ebc9614459b218cbc885dd13d4,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 21:33:03 +0300, , use std numeric_limits uint32_t max instead 0xffffffff,,
3510,4b019795697ddd33bd66089881b351f9f0549c78,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:08:34 +0300, , clean unused variable warning src binaryen shell.cpp 262 warning c4101 unreferenced local variable src binaryen shell.cpp 290 warning c4101 unreferenced local variable src binaryen shell.cpp 310 warning c4101 unreferenced local variable,,
3511,6f2d0dc9b17bfd7039418681bb34386c69aaed22,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:07:32 +0300, , cleanup redundant check src binaryen shell.cpp 251 warning c4804 unsafe use type bool operation,,
3512,c685cc43c8b8a3a36837b26a358408c5d8da68d0,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:06:28 +0300, , clean truncating cast warning src binaryen shell.cpp 181 warning c4244 argument conversion int64_t int8_t possible loss data src binaryen shell.cpp 182 warning c4244 argument conversion int64_t int16_t possible loss data src binaryen shell.cpp 183 warning c4244 argument conversion int64_t int32_t possible loss data,,
3513,6f7f0286a93a0356f8548760082d082bede57ed8,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:04:49 +0300, , clean src wasm interpreter.h 644 warning c4244 initializing conversion double int64_t possible loss data,,
3514,bce9c632434bafd99bc18e57a0ba077785b333fa,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:03:19 +0300, , clean src wasm interpreter.h 307 warning c4244 argument conversion int64_t unsigned int possible loss data,,
3515,a471455c7fb4ffc01badedbb2ac9328a646f4693,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 16:01:56 +0300, , clean src wasm interpreter.h 286 warning c4800 int64_t forcing value bool true false performance warning,,
3516,a6c00e1fee1a840902cb10e715e2571e824666fa,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:56:33 +0300, , also clean visual studio build warning wasm tosinteger32 double int32_t cast,,
3517,5340abb9ebd1ea73df0c3cf724522510637a9a1c,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:37:32 +0300, , clean build warning c4244 return conversion double uint32_t possible loss data src support,,
3518,9da4e6ea0e2631f0643578e8c3603d1f5f825179,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:33:57 +0300, , fix wasm read_file abort input file big read building bit executable size_t bit,,
3519,ef0d9f61157ae22bd7c57cf9211bf4bdfe76284e,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:26:42 +0300, , clean unsigned long long size_t assignment build warning visual studio 2015,,
3520,6dabb50603975681c5ae6ac8048abd66a582bf40,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:20:49 +0300, , avoid use crt pow function generate integer bit pattern since pow return double clean build warning c4244 conversion double size_t possible loss data,,
3521,432163d499f183ed794f50ec4d38919a169fb80f,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:16:49 +0300, , clean visual studio build warning c4800 int64_t forcing value bool true false performance warning,,
3522,f5446dfe4d569cf4d3fae0693385620985ab956c,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:14:36 +0300, , ignore visual studio compiler warning c4146 unary minus operator applied unsigned type result still unsigned used commonly bit manipulation,,
3523,85f814e17f7d4e8d665fee4281831c8f4576e40f,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:12:17 +0300, , fix function trapifgt operate bit integer even building bit executable,,
3524,77b998fc2711a1f46e699d581c50a6cf9d50c7c2,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:11:36 +0300, , hide visual studio build warning casting bit int bit know safe,,
3525,1c915b86558f32cfceaa8331bc26f5f17624c198,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 15:10:49 +0300, , visual studio 2015 longer arch sse2 compiler flag pas vs2013 older,,
3526,b8d01b47e5f53a92cd5db528d1939462f919d5f6,lon Zakai <alonzakai@gmail.com>, 2016-03-28 11:18:41 -0700,282, merge pull request 282 webassembly safe int fix remove bogus asserts safe_integer cast,,
3527,c9ebb2e4f469831d0db0b8e14ac74778380ab3dd,lon Zakai <alonzakai@gmail.com>, 2016-03-28 11:00:06 -0700, , remove bogus asserts safe_integer cast,,
3528,696c76cc5abf7dec13f437e38027a3a2e70e341c,ukka JylÃ¤nki <jujjyl@gmail.com>, 2016-03-28 14:58:31 +0300, , remove wall warning level building visual studio since spam thousand warning visual studio runtime header,,
3529,cb4322e8504cce394383e0a5ebcf37c2a4d5cc18,lon Zakai <alonzakai@gmail.com>, 2016-03-25 12:00:13 -0700,276, merge pull request 276 webassembly spec update update spec test new memory page size usage,,
3530,b0d45999db49576baee192145d06d310653c4b81,lon Zakai <alonzakai@gmail.com>, 2016-03-24 16:18:09 -0700, , update spec test new memory page size usage,,
3531,cbbdaf782716e7a66fc95513e56eac58f2db1dc3,lon Zakai <alonzakai@gmail.com>, 2016-03-24 16:12:38 -0700, , module.asm already set use,,
3532,1ad605a7e2f413d90213ae50824af20b8cac2397,lon Zakai <alonzakai@gmail.com>, 2016-03-23 18:40:24 -0700, , note using wasm,,
3533,359c895db53b99fd176aac926914ecebcb4ddd93,lon Zakai <alonzakai@gmail.com>, 2016-03-23 16:10:35 -0700,275, merge pull request 275 webassembly closure fix test suite corner case fix,,
3534,85959a42f97857491bac46a25e9634029f6eb3b4,lon Zakai <alonzakai@gmail.com>, 2016-03-23 14:56:11 -0700, , update wasm.js,,
3535,10159a897c404ec52d63faeb54a052c48cb1a6c9,lon Zakai <alonzakai@gmail.com>, 2016-03-23 14:45:13 -0700, , add function stack printing interpreter,,
3536,4967e68bcb7f59134c35675a46f6020d2996eb99,lon Zakai <alonzakai@gmail.com>, 2016-03-23 14:07:54 -0700, , quote string closure compiler,,
3537,a67434f2dd05f7590c2b7ab18b6bf9d6215f79f2,erek Schuff <dschuff@chromium.org>, 2016-03-23 12:48:36 -0700,274, merge pull request 274 webassembly rotr s2wasm add rotate support s2wasm,,
3538,6ae3a452453cce6513f27d5ed302c3fe1ff1cce3,erek Schuff <dschuff@chromium.org>, 2016-03-23 11:35:07 -0700, , update llvm test waterfall 4425,,
3539,9a4d9f5e59fa6c5a88148ee077936924b76bb8cd,erek Schuff <dschuff@chromium.org>, 2016-03-23 11:31:41 -0700, , add rotate support s2wasm,,
3540,c5a6210d4a60d194f6ab690f6f1206c6076e222d,lon Zakai <alonzakai@gmail.com>, 2016-03-22 18:06:29 -0700,251, merge pull request 251 mbebenita opt wasm optimize function index mapping,,
3541,b4c0c719e14327df55a2b70f92475e89ce1e055e,ichael Bebenita <mbebenita@gmail.com>, 2016-03-22 16:58:31 -0700, , flip condition,,
3542,468e0dde46724e2a40fa311a878d0d50cac8f831,lon Zakai <alonzakai@gmail.com>, 2016-03-22 15:20:00 -0700,273, merge pull request 273 webassembly memory growth fix test memory growth,,
3543,3cde7acb07202af8f04f73eaaa9c7579e19a32cf,lon Zakai <alonzakai@gmail.com>, 2016-03-22 15:06:03 -0700, , add memory growth testcase,,
3544,98106a0a81a2bf1b0e1865236b7857a8108a2de9,lon Zakai <alonzakai@gmail.com>, 2016-03-22 15:03:34 -0700,270, fix memory growth 270,,
3545,94bf9d12986fb069323738247bea5a480cfd8ef6,lon Zakai <alonzakai@gmail.com>, 2016-03-22 10:55:07 -0700,272, merge pull request 272 webassembly asm2wasm fix asm2wasm fix,,
3546,49a5fedf0e9ab16d294d9aba860a0375fc4debd9,lon Zakai <alonzakai@gmail.com>, 2016-03-22 10:17:00 -0700, , update wasm.js,,
3547,996416ccefc4f079b14495bcb4ac66e7aa705f4f,lon Zakai <alonzakai@gmail.com>, 2016-03-22 10:13:08 -0700, , reuse nameless block blockify asm2wasm named broken bad loop construct,,
3548,12a5d972ec7c5144cd54afe7bdee7351219aaca0,lon Zakai <alonzakai@gmail.com>, 2016-03-22 10:06:16 -0700, , add option optimize asm2wasm,,
3549,232327c1a687fa7571dac7c4742a3db1b2a7e166,erek Schuff <dschuff@chromium.org>, 2016-03-22 09:46:24 -0700, , remove useless forward,,
3550,59f3f635e1ebd7975c9a75600058e8350341211b,lon Zakai <alonzakai@gmail.com>, 2016-03-21 17:35:08 -0700,269, merge pull request 269 webassembly update wasm update wasm.js,,
3551,bfe7270aa561bac1c261d58713df10ef0b9fbb94,lon Zakai <alonzakai@gmail.com>, 2016-03-21 17:07:41 -0700, , make debug work,,
3552,8782986ee1942b3c0592d0b2fd10b936621c711b,lon Zakai <alonzakai@gmail.com>, 2016-03-21 17:01:03 -0700, , update wasm.js,,
3553,c46ef0905565dfa9e24067a050d6c5095178c4ec,lon Zakai <alonzakai@gmail.com>, 2016-03-21 16:55:00 -0700,268, merge pull request 268 webassembly eqz type update eqz operator support specifying memory size command line,,
3554,18ac67a3a23f4c54d4deab2d6621601662af899e,erek Schuff <dschuff@chromium.org>, 2016-03-21 16:38:29 -0700, , support initial size max size specify linear memory size given fall back size calculated link step,,
3555,83a7310f1126a91c2b8472c3d5f802865aa8e4de,lon Zakai <alonzakai@gmail.com>, 2016-03-21 16:02:04 -0700, , update emscripten submodule,,
3556,b2489b81b9b6fef70e4cbb0af913734442d2bd03,erek Schuff <dschuff@chromium.org>, 2016-03-21 15:33:46 -0700, , make type eqz unary operator always i32 make symmetric binary relational operator also support eqz s2wasm parser,,
3557,c34ed229b2df8bf4e8d0773917d0301c034980e3,lon Zakai <alonzakai@gmail.com>, 2016-03-21 13:04:04 -0700,267, merge pull request 267 webassembly asm2wasm eqz use eqz asm2wasm,,
3558,7c6be8c282a6a45031768ce7e2f45b47d9f2c742,lon Zakai <alonzakai@gmail.com>, 2016-03-21 12:47:55 -0700, , use eqz asm2wasm,,
3559,ff45fb37885b66a60b22e40eca41628b83cdc748,lon Zakai <alonzakai@gmail.com>, 2016-03-21 12:46:38 -0700,266, merge pull request 266 webassembly growth memory growth fix,,
3560,3dd7f17b10a1c6d0de11f3fa297beb9b18016e38,lon Zakai <alonzakai@gmail.com>, 2016-03-21 12:34:09 -0700, , add memory growth asm2wasm test,,
3561,c4c132bd59acec4b81c5c6d5807499c9b3108be3,lon Zakai <alonzakai@gmail.com>, 2016-03-21 12:30:08 -0700, , fix unit testcase,,
3562,3437e886f32275ba385dfc7ae2c2473ed672c01d,lon Zakai <alonzakai@gmail.com>, 2016-03-21 11:57:06 -0700, , special case asm.js memory growth function,,
3563,c733dd24ba5df55272feb4880fe302bed42d5568,lon Zakai <alonzakai@gmail.com>, 2016-03-21 11:38:10 -0700, , use asm2wasm output,,
3564,b3f029d8b3be1cfc74a035a6549f4ab2e62e9931,lon Zakai <alonzakai@gmail.com>, 2016-03-20 20:28:05 -0700,265, merge pull request 265 webassembly asm2wasm opts asm2wasm opts,,
3565,c67c3b8d9b5d09b1f04a602c6248be50ef51569f,lon Zakai <alonzakai@gmail.com>, 2016-03-20 17:41:47 -0700, , update emscripten,,
3566,da80a33ba574ae76e5f560e53b8c0c8ac6edefb2,lon Zakai <alonzakai@gmail.com>, 2016-03-20 17:08:52 -0700, , add option imprecise asm2wasm opts,,
3567,2fc279ed7e106a01aa0529ead93dc3f04af8e77c,lon Zakai <alonzakai@gmail.com>, 2016-03-20 14:39:52 -0700, , fix float int trap text,,
3568,d802638ea36ce950f260c42e8bc8e2195c625efa,lon Zakai <alonzakai@gmail.com>, 2016-03-19 16:31:27 -0700,261, merge pull request 261 webassembly eqz update spec test support eqz,,
3569,ff792474724765983b14f8088c259ff55fcf567e,lon Zakai <alonzakai@gmail.com>, 2016-03-19 15:59:21 -0700, , update wasm.js,,
3570,eb135274e30454715fca36e6b0db640778982018,lon Zakai <alonzakai@gmail.com>, 2016-03-19 15:56:55 -0700, , update spec test support eqz,,
3571,c8faff5ddbc7e93134763a845371b66bc2be56a4,lon Zakai <alonzakai@gmail.com>, 2016-03-18 21:39:12 -0700, , improve doc,,
3572,ae4d2f092bbe973542c18a2b948838ac79af1f39,lon Zakai <alonzakai@gmail.com>, 2016-03-18 21:36:25 -0700, , readme update,,
3573,abc902c1037ca26293bcd25d100c5256afe4c282,lon Zakai <alonzakai@gmail.com>, 2016-03-18 19:06:14 -0700,255, merge pull request 255 webassembly leb fix leb fix,,
3574,45d4cb781b0b6fddbe410f0762147e59784555c8,lon Zakai <alonzakai@gmail.com>, 2016-03-18 17:51:55 -0700, , update wasm.js,,
3575,9d2ba77ecb2bfa848beaff4307b8f60a2a3df45b,lon Zakai <alonzakai@gmail.com>, 2016-03-16 21:09:25 -0700, , proper signed leb,,
3576,c10391b1128094210602b27c7d8efb7fee3f9cd2,lon Zakai <alonzakai@gmail.com>, 2016-03-18 14:38:27 -0700,258, merge pull request 258 webassembly jfbastien patch make pretty fancy unicode rightward double arrow,,
3577,7ef0e0117f522f87b56a810633b882a3421a3be7,F Bastien <github@jfbastien.com>, 2016-03-18 14:36:30 -0700, , make pretty fancy unicode rightward double arrow,,
3578,6f1cf66e71f3db6af5c2c8087e001fe0c77b0fc4,lon Zakai <alonzakai@gmail.com>, 2016-03-18 14:32:50 -0700,257, merge pull request 257 webassembly better method name better method name,,
3579,e120fe8163125a7a8d5cb5879863873a47eb0f4c,lon Zakai <alonzakai@gmail.com>, 2016-03-18 14:08:45 -0700, , improve method name,,
3580,cd87eb847378d038342a8e9b73960e74352d29ed,lon Zakai <alonzakai@gmail.com>, 2016-03-18 14:09:15 -0700,256, merge pull request 256 webassembly debug make debug boolean,,
3581,31c278f2480bfa164e841c248b1cfe399d841d5f,lon Zakai <alonzakai@gmail.com>, 2016-03-18 14:06:01 -0700, , link emscripten wiki emcc binaryen usage,,
3582,ac74a808876a27f44a0eb66cef7cb441be1c2017,F Bastien <jfb@chromium.org>, 2016-03-18 13:55:23 -0700, , check debug,,
3583,72c5e955d27436d9a6dae4191f6cc6a52676438e,F Bastien <jfb@chromium.org>, 2016-03-18 12:40:10 -0700, , make debug boolean discussed 248,,
3584,127abbb171c3595bf37f3155836ac5dcf900169d,lon Zakai <alonzakai@gmail.com>, 2016-03-16 20:50:01 -0700, , fix name lebs,,
3585,a3312f5f2390bf3fe515c99d29d22dff201eeaf9,lon Zakai <alonzakai@gmail.com>, 2016-03-16 18:01:39 -0700,254, merge pull request 254 webassembly spec binary spec binary update,,
3586,b25d38b20934cd22955fd86438703139659a3360,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:51:43 -0700, , update wasm.js,,
3587,2467f6f72ecdd1e3f5353abecc67e8e8241f93e6,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:51:29 -0700, , update memory access binary format,,
3588,3245c24d1fd59c2d4a969570743f764022eb5033,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:46:46 -0700, , add log2 pow2 support method,,
3589,41173e4fa1469a3b5a1d99da5f75148be89d5b9a,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:35:04 -0700, , update wasm.js,,
3590,b0e342231cab63668a98c8b1caac700e4a1cb0fc,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:23:55 -0700, , update const binary spec,,
3591,31e92024ae8859c9387dbdcda1dfebb888f82510,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:20:15 -0700, , add bit leb,,
3592,65716c4ec22ad2edb9326920487d804f91ba75b4,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:02:43 -0700, , update wasm.js,,
3593,1574710289a5ff49f983d96fd9782800d8d87c00,lon Zakai <alonzakai@gmail.com>, 2016-03-16 17:01:03 -0700, , update switch encoding,,
3594,9c374b6a2368ef5cb0c102e3e2f164410289f454,lon Zakai <alonzakai@gmail.com>, 2016-03-16 16:52:20 -0700, , use leb128 break,,
3595,41e662bc564c99b54f64360f97c97db57d755754,lon Zakai <alonzakai@gmail.com>, 2016-03-16 16:19:42 -0700, , update wasm.js,,
3596,fbd820246f8e721aab2e6696d22dacdf3271e6ae,lon Zakai <alonzakai@gmail.com>, 2016-03-16 16:18:03 -0700, , write function local per spec,,
3597,fcc348ac052f213d7b57d27f82a743fbc932ef45,lon Zakai <alonzakai@gmail.com>, 2016-03-16 16:05:08 -0700, , use function body size like spec,,
3598,cec883550664a64b9f6a425dd68a3caf529fa306,lon Zakai <alonzakai@gmail.com>, 2016-03-16 16:00:10 -0700, , use name section function name,,
3599,4af293a357d6db3726b57deeacbbb37b5f9dab1e,lon Zakai <alonzakai@gmail.com>, 2016-03-16 15:38:33 -0700, , update wasm.js,,
3600,0c73e0b7462fa353a7865768375694f48e937aea,lon Zakai <alonzakai@gmail.com>, 2016-03-16 15:38:22 -0700, , stop assuming know function name decode binary,,
3601,b00602830cbae7d820aa96bb0787e9c83bba8cc3,lon Zakai <alonzakai@gmail.com>, 2016-03-16 14:59:55 -0700, , update wasm.js,,
3602,8c47cbf61b8751e0f82d002bea57e24f3461458f,lon Zakai <alonzakai@gmail.com>, 2016-03-16 14:53:36 -0700, , backpatching leb128 always fill byte,,
3603,227f4e473b39d28f749f4252a0a922517d3a4938,lon Zakai <alonzakai@gmail.com>, 2016-03-16 14:44:04 -0700, , refactor leb128 placeholder method,,
3604,3b2f6ad3db1b6fecd9e8e67c27a441cc62cf91a2,lon Zakai <alonzakai@gmail.com>, 2016-03-15 21:28:43 -0700, , todo,,
3605,55502aaa3d91c8a28e9db6eb4e421e2166d6c51d,lon Zakai <alonzakai@gmail.com>, 2016-03-15 21:26:50 -0700, , use getfunctionname another place,,
3606,2e2cbb4e5349fe20209a9e8f4ca740eea6fb9f6f,F Bastien <github@jfbastien.com>, 2016-03-16 13:11:02 -0700,253, merge pull request 253 brakmic patch switched html link markdown link,,
3607,e6689ebc5237ffa282d937f88ad1edd840ed6594,arris Brakmic <brakmic@users.noreply.github.com>, 2016-03-16 20:21:24 +0100, , switched html link markdown link referencing http github.com webassembly binaryen pull 252 discussion diff 56397106,,
3608,d7b08243dcdf1d6bb37f7a8db3dc38afe6330fc9,lon Zakai <alonzakai@gmail.com>, 2016-03-16 11:47:08 -0700,252, merge pull request 252 brakmic patch added link tutorial building win32,,
3609,789b8b24f162e4f0ca2a5c64435ac70a9ebd539a,arris Brakmic <brakmic@users.noreply.github.com>, 2016-03-16 19:35:42 +0100, , added link tutorial building win32 link tutorial compile binaryen window x64 cmake visual studio 2015,,
3610,a824194957e5a82f1c2cf19e8406f34625b1cd14,ichael Bebenita <mbebenita@gmail.com>, 2016-03-15 14:33:18 -0700, , optimize function index mapping,,
3611,d588ecdea2b423bc4de22580f20b0647c4100399,lon Zakai <alonzakai@gmail.com>, 2016-03-15 20:44:05 -0700,246, merge pull request 246 webassembly spec binary binary spec stuff,,
3612,e266b793ec120daf77ae2d40407b04d98ba45984,lon Zakai <alonzakai@gmail.com>, 2016-03-15 20:08:40 -0700, , update wasm.js,,
3613,b51dcb905311c9d808c6ff0123b107e735a45c2e,lon Zakai <alonzakai@gmail.com>, 2016-03-15 20:07:01 -0700, , make function table entry leb128,,
3614,e72838760425ea77f5b075e6bad0ecf90b820b69,lon Zakai <alonzakai@gmail.com>, 2016-03-15 20:03:49 -0700, , update wasm.js,,
3615,854f30c5e2a9cc0b4835e467e05f63bcbc6204c2,lon Zakai <alonzakai@gmail.com>, 2016-03-15 20:01:41 -0700, , update data segment binary format,,
3616,0e9bcd36bc8b7e24f3ca2cb7160d922769a7af60,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:42:42 -0700, , update wasm.js,,
3617,493998e54d63be8d7efcdd857334ee621295dd9d,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:40:52 -0700, , parse start properly offset,,
3618,2f128693cd5b029aaa59d7cc51fe67f2fcbb529c,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:28:15 -0700, , emit start function function index,,
3619,fa0dbae5b907cc25715b070d64a30275a191f3f0,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:21:51 -0700, , update wasm.js,,
3620,59c18e0a395cd73d1bd9069b2c447600907a6357,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:21:42 -0700, , add export section,,
3621,32fff6e2a757589e234fb2d224791f6cf58a0ad5,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:15:20 -0700, , update wasm.js,,
3622,dd69e1a4029dcfd747a735170a81e23595269734,lon Zakai <alonzakai@gmail.com>, 2016-03-15 18:12:38 -0700, , add call_import binary split import function,,
3623,a0156dbc900c642dd9f1b8f44ab13c06ff2e8fb9,lon Zakai <alonzakai@gmail.com>, 2016-03-15 17:26:54 -0700, , add explicit memory export support,,
3624,c68e1ebb0c63f427400230cd71e46dd7629b735f,lon Zakai <alonzakai@gmail.com>, 2016-03-15 15:18:44 -0700, , add function signature section,,
3625,7256ad317c061afabab8f79c38667529de4c72d4,lon Zakai <alonzakai@gmail.com>, 2016-03-15 14:59:58 -0700, , update wasm.js,,
3626,23ceb9808a5332a6599d669c2a46d2431a1343e9,lon Zakai <alonzakai@gmail.com>, 2016-03-15 14:57:15 -0700, , write import separate section,,
3627,34b3761d3daf29c181da8c72edfc9a0b9bf1e6db,lon Zakai <alonzakai@gmail.com>, 2016-03-15 12:42:10 -0700, , num params signature leb128,,
3628,f156316aebdba6a26eb6cddcef1034612f32e087,lon Zakai <alonzakai@gmail.com>, 2016-03-15 12:09:46 -0700,247, merge pull request 247 mbebenita opts misc optimization,,
3629,e35a06baa37f2b392fd4bb9796f71317665a0b08,ichael Bebenita <mbebenita@gmail.com>, 2016-03-15 10:38:48 -0700, , fix block comment,,
3630,ac2a4a62dd903e11be089018bcd11d7a7584a973,ichael Bebenita <mbebenita@gmail.com>, 2016-03-15 03:24:55 -0700, , remove recursion expr parsing,,
3631,f04dd1bb5b06d64ebfdd347a852a55322743b363,ichael Bebenita <mbebenita@gmail.com>, 2016-03-15 02:56:12 -0700, , reinsert set interning string,,
3632,00f0c39b82f0a46bacce7f884699c3f01d51cd8e,lon Zakai <alonzakai@gmail.com>, 2016-03-14 18:11:36 -0700, , update binary format use section spec,,
3633,5a5a322f74fbeaa9a5cf80c2cddcb26f6fb794d0,lon Zakai <alonzakai@gmail.com>, 2016-03-14 15:56:59 -0700, , add binary header,,
3634,48a12f0cf134a15434432954c56c893ea1fc6eca,lon Zakai <alonzakai@gmail.com>, 2016-03-13 22:05:35 -0700,244, merge pull request 244 webassembly interpret binary wasm binary method,,
3635,8de76ffa8588a72788f3967806df43d4d4e43453,lon Zakai <alonzakai@gmail.com>, 2016-03-13 21:10:04 -0700, , add two missing finalize call wasm binary,,
3636,a398457c9e4089f0349a99c5147bd9129f56bc51,lon Zakai <alonzakai@gmail.com>, 2016-03-13 18:07:28 -0700, , remove unnecessary test,,
3637,cf04149b2dfa51093c6ad0676171cf7c8c506238,lon Zakai <alonzakai@gmail.com>, 2016-03-13 17:16:01 -0700, , test wasm binary method wasm.js testcases,,
3638,f41c310f8da01d082e776112a643d6483757999f,lon Zakai <alonzakai@gmail.com>, 2016-03-13 17:15:12 -0700, , use bit int break offset necessary e.g bigswitch.cpp,,
3639,a1287af38f12b5ba3d2874424f67289fe1ea49e7,lon Zakai <alonzakai@gmail.com>, 2016-03-13 12:34:55 -0700,245, merge pull request 245 kingcheez master binaryen shell doe print print,,
3640,9aeb16ac2c9a545c96338ce948539bb2a16dc062,lon Zakai <alonzakai@gmail.com>, 2016-03-12 20:19:55 -0800, , update wasm.js,,
3641,e70981caae2ed0f6ce9cd2f2d80bc0a8e0ae30a9,lon Zakai <alonzakai@gmail.com>, 2016-03-12 20:17:26 -0800, , recurse binary block reading,,
3642,d5a7f3ffe79a8c1169d40b21fb2d56f5ec1ab17f,ohail Somani <me@sohailsomani.com>, 2016-03-12 19:48:25 -0500, , binaryen shell doe print print,,
3643,f1702697bab8f8ab40428f40ac809c9d0dd43118,lon Zakai <alonzakai@gmail.com>, 2016-03-12 16:45:17 -0800, , python fix,,
3644,6b215997b21fdf86c430fc184909804af7b44069,lon Zakai <alonzakai@gmail.com>, 2016-03-12 16:27:09 -0800, , finish wasm binary method update emscripten,,
3645,0cfe85c2d52a5cb5c64065d029375b005c9bc541,lon Zakai <alonzakai@gmail.com>, 2016-03-12 14:39:50 -0800, , add optional native wasm checking,,
3646,cb24663efde2d12d94e358d63d32b1cf97c4d342,lon Zakai <alonzakai@gmail.com>, 2016-03-12 14:39:21 -0800, , update fix page size already done,,
3647,f02c4903db7368a108067723e2ab66a8bc60b7b7,lon Zakai <alonzakai@gmail.com>, 2016-03-12 14:09:58 -0800, , refactor wasm.js prepare loading interpreting binary,,
3648,7702b4f1b46939c31666e0684f4db7d72f80e04f,F Bastien <github@jfbastien.com>, 2016-03-12 12:47:46 -0800,243, merge pull request 243 webassembly flake8 enable flake8,,
3649,88013fea2df72949e1e3d6c29a05c1a8c2f0bd69,F Bastien <jfb@chromium.org>, 2016-03-12 12:39:03 -0800, , enable flake8 disabled http github.com webassembly binaryen pull 229,,
3650,b8b54704bf510ad49e6897b9903d74a9553fd9d1,lon Zakai <alonzakai@gmail.com>, 2016-03-11 17:47:10 -0800,242, merge pull request 242 webassembly method support comma separated list method wasm integration,,
3651,6fc08966aeaace7db8220e8ba9c3f85297564abb,lon Zakai <alonzakai@gmail.com>, 2016-03-11 14:52:45 -0800, , fix test harness assignment,,
3652,ea3a2f2c276c76ff27665e168877ebb771fa12b4,lon Zakai <alonzakai@gmail.com>, 2016-03-11 14:42:25 -0800, , update emscripten add testing including wasm.js polyfill unnecessarily,,
3653,b3e7a79fc90ac61641723974296c90624742e92a,lon Zakai <alonzakai@gmail.com>, 2016-03-11 14:25:42 -0800, , log failure wasm integration,,
3654,0df60eadd9bcba09b0288ad5b5733cd79aed490f,lon Zakai <alonzakai@gmail.com>, 2016-03-11 14:22:18 -0800, , check wasmjs polyfill glue,,
3655,2ab5a35bbf64b8e910eda87b248c460a8abefec2,lon Zakai <alonzakai@gmail.com>, 2016-03-11 14:20:16 -0800, , support comma separated list method wasm integration,,
3656,eb1e5b6cc7f32b704bb14b147f47ee7919241503,lon Zakai <alonzakai@gmail.com>, 2016-03-10 19:26:58 -0800,241, merge pull request 241 webassembly spec update spec update,,
3657,a8e570c75d3a6cc398a4b1a4c3d492d56c4d8091,lon Zakai <alonzakai@gmail.com>, 2016-03-10 14:37:20 -0800, , add big switch test check heavily nested block,,
3658,c0dd2398aa0d16c63d02ae875ff2d8c83f44ea1a,lon Zakai <alonzakai@gmail.com>, 2016-03-10 14:44:40 -0800, , udpate wasm.js build,,
3659,7734ce6ef5f95697c5bdebc18b96d3902c766b8e,lon Zakai <alonzakai@gmail.com>, 2016-03-08 12:20:53 -0800, , recurse operation nested block,,
3660,0467407decb3cd30ad407f553a078b9f533b479d,lon Zakai <alonzakai@gmail.com>, 2016-03-09 21:24:29 -0800,240, merge pull request 240 webassembly globl s2wasm export function unless marked .globl,,
3661,68ee6d97130dfb7da474b85fd99382a0569e602f,an Gohman <sunfish@mozilla.com>, 2016-03-09 20:53:53 -0800, , s2wasm export function unless marked .globl,,
3662,54eec1104b34be2c8342942870fb62390606dedf,lon Zakai <alonzakai@gmail.com>, 2016-03-09 21:02:05 -0800,239, merge pull request 239 webassembly s2wasm prefixing fix export arriving wasm backend output,,
3663,a3d89e6a1973670230fe304d8c204150b33263ff,lon Zakai <alonzakai@gmail.com>, 2016-03-09 19:05:57 -0800, , update emscripten,,
3664,2eab69ff78311c03757de89d0020306d4977eb83,lon Zakai <alonzakai@gmail.com>, 2016-03-09 17:59:56 -0800, , fix import arriving wasm backend doe prefix,,
3665,b91486c4e796e3a50bd1afe3a00135024131ff9f,lon Zakai <alonzakai@gmail.com>, 2016-03-09 17:41:27 -0800, , use .exports,,
3666,5598931f54d2aefc0ea1550e41f424b830331a22,lon Zakai <alonzakai@gmail.com>, 2016-03-09 17:39:02 -0800,238, merge pull request 238 webassembly update emscripten update emscripten,,
3667,864fa9c37ba1b33605805d89ab920e6fa4e67a38,erek Schuff <dschuff@chromium.org>, 2016-03-09 17:38:56 -0800,225, merge pull request 225 webassembly memory_pages make initial max memory size page instead byte,,
3668,ac9d61d45fec988640b57dc6b9de97e7d46c41f5,erek Schuff <dschuff@chromium.org>, 2016-03-09 17:02:00 -0800, , move rol ror src support bits.h,,
3669,589e3006d139884e25a399d3a52f8657d4abba4a,lon Zakai <alonzakai@gmail.com>, 2016-03-09 17:22:50 -0800, , update emscripten,,
3670,0c0850ed5e2a2e82ad42f803894defcc53692ccd,erek Schuff <dschuff@chromium.org>, 2016-03-09 13:05:41 -0800, , implement rotates,,
3671,1b45938aadd6e03e9210d88436be9c393623fb42,erek Schuff <dschuff@chromium.org>, 2016-03-04 17:09:47 -0800, , make initial max memory size page instead byte ast everything treat value page javascript continues use byte match sexpr wasm consensus live discussion pr209 spec,,
3672,e9d98deed872a72a826f78c8525464c446c6f21b,lon Zakai <alonzakai@gmail.com>, 2016-03-09 11:17:48 -0800,235, merge pull request 235 webassembly update emscripten update emscripten latest incoming,,
3673,e9bdbf509ad08b4a0a0bf27ce2b94aff5db5b325,lon Zakai <alonzakai@gmail.com>, 2016-03-09 11:03:40 -0800, , update emscripten latest incoming vanilla,,
3674,c9d6856a65d06a1f092c7f1ad91bd41d32f35227,lon Zakai <alonzakai@gmail.com>, 2016-03-09 10:28:30 -0800, , comment,,
3675,dc395f29a075a33370e68ec853f763fd3894630d,lon Zakai <alonzakai@gmail.com>, 2016-03-08 19:41:47 -0800,234, merge pull request 234 webassembly integrate wasm fix move cleaner way emcc.py integrating wasm.js post.js,,
3676,f19f5c387941ee6a91145f043a1bbc0baf199f6a,lon Zakai <alonzakai@gmail.com>, 2016-03-08 17:56:54 -0800, , update emscripten,,
3677,ff6e75ea41d85935a640f5494cfd946906675b50,lon Zakai <alonzakai@gmail.com>, 2016-03-08 17:35:10 -0800, , move cleaner way emcc.py integrating wasm.js post.js,,
3678,78214a4de784379722187042c8d6fa7a803d883a,lon Zakai <alonzakai@gmail.com>, 2016-03-08 15:35:43 -0800,233, merge pull request 233 webassembly br_table update s2wasm tableswitch br_table change,,
3679,ec003c7b1ab24a0b2248664c2278a32439f56862,erek Schuff <dschuff@chromium.org>, 2016-03-08 15:26:42 -0800, , update s2wasm tableswitch br_table change,,
3680,6c12704bf58c32a1c1436f53e5d8994452a273fd,lon Zakai <alonzakai@gmail.com>, 2016-03-08 13:56:43 -0800,232, merge pull request 232 webassembly update emscripten update emscripten submodule,,
3681,ae8a296440017c83fc70d9435ca567e7d3dafd5a,lon Zakai <alonzakai@gmail.com>, 2016-03-08 13:33:13 -0800, , update emscripten submodule,,
3682,f2f91c4eecf34c12748af0bdfafd035c725ceb6e,lon Zakai <alonzakai@gmail.com>, 2016-03-08 12:22:14 -0800, , update emscripten submodule,,
3683,bc74a6478aa229abf6dbf7269e67aeeb570e7554,lon Zakai <alonzakai@gmail.com>, 2016-03-07 21:25:14 -0800,231, merge pull request 231 webassembly spec update spec update,,
3684,9407880de631fb4e9f8caa0c746e4d39f40be91d,lon Zakai <alonzakai@gmail.com>, 2016-03-07 21:18:02 -0800, , precise br_table parsing,,
3685,f99a4155e9221922a8f50646507cd3cb38e02376,lon Zakai <alonzakai@gmail.com>, 2016-03-07 20:37:09 -0800, , better error logging,,
3686,1f9c5923b370e532815e07ad95a7b631e466c7ce,lon Zakai <alonzakai@gmail.com>, 2016-03-07 20:37:02 -0800, , remove lower else spidermonkify,,
3687,a59745b73d1206a78a8a0ac8ae98ac717f9ff756,lon Zakai <alonzakai@gmail.com>, 2016-03-07 20:19:54 -0800, , remove br_table hack spidermonkfiy,,
3688,26e4710625d3b50fca6f1fe0b88d9e4a1c7875ef,lon Zakai <alonzakai@gmail.com>, 2016-03-07 20:16:54 -0800, , update wasm.js,,
3689,8d71da97f2901971c136bf5902fe5e5f128b6aba,lon Zakai <alonzakai@gmail.com>, 2016-03-07 20:14:57 -0800, , remove old invalid optimization pas asm2wasm,,
3690,284ae677cca8794a464f9bf702e3ec6aace6c65b,lon Zakai <alonzakai@gmail.com>, 2016-03-07 17:03:38 -0800, , br_table case,,
3691,ea3a9db4a071292d4e976ef36f4c197a9e8a5fea,lon Zakai <alonzakai@gmail.com>, 2016-03-07 17:41:40 -0800, , disable wasm2asm never fully functional anyhow much flux,,
3692,8efa11fbb9ff8cfd8bacc9d16642e13e2bbac9b4,lon Zakai <alonzakai@gmail.com>, 2016-03-07 17:03:23 -0800,224, merge pull request 224 webassembly spec update spec update,,
3693,a94f9938701920fe11c4f21a875ed3174ff7e9ba,lon Zakai <alonzakai@gmail.com>, 2016-03-07 15:58:19 -0800, , parse empty block properly,,
3694,2e9bc3d4f2799bfcb7876d3edbbead8cd8a444b0,lon Zakai <alonzakai@gmail.com>, 2016-03-07 15:39:31 -0800, , update spec test repo,,
3695,029bf12684e9b1a659614cb6a99e9f49a2959ad5,lon Zakai <alonzakai@gmail.com>, 2016-03-07 15:39:25 -0800, , parse else,,
3696,1a3a0d839ce0e8f7cc523694f40142eea656331a,lon Zakai <alonzakai@gmail.com>, 2016-03-07 15:30:58 -0800, , refactoring preparation else parsing,,
3697,6299a2d2fb198845c9b140a308b6b7d433d5902b,lon Zakai <alonzakai@gmail.com>, 2016-03-07 15:03:08 -0800, , update parsing new spec rule,,
3698,6edb9f8958f155e289babad80fa234c2074af4d2,lon Zakai <alonzakai@gmail.com>, 2016-03-04 18:45:06 -0800, , min test fix,,
3699,2e761e571f7b3d3df7ba7407a13b37c81ee4e9eb,lon Zakai <alonzakai@gmail.com>, 2016-03-04 18:36:05 -0800, , add finalize method block,,
3700,7ffdc335c7c899c282cb3d8216773dca1c26455b,lon Zakai <alonzakai@gmail.com>, 2016-03-04 16:26:51 -0800, , fix min.wast testcase,,
3701,b65a994c24e83694f27cb835845b3b281207fc2f,lon Zakai <alonzakai@gmail.com>, 2016-03-07 13:10:44 -0800,229, merge pull request 229 webassembly integrate wasm fix integrate wasm fix,,
3702,91008b47488fe87943b7c2b66c3f362907d37bee,lon Zakai <alonzakai@gmail.com>, 2016-03-07 10:32:32 -0800, , allow setting total memory asm2wasm,,
3703,60bfb02f752e6d7383f077e892b8c10096c40824,lon Zakai <alonzakai@gmail.com>, 2016-03-07 10:32:21 -0800, , remove temp file,,
3704,8f16bf557b9bc261b10aeee9aafd544ff2c1e082,lon Zakai <alonzakai@gmail.com>, 2016-03-06 16:35:28 -0800, , need .buffer,,
3705,573aa7adf10858b0bf8f566f72142be2775076c4,lon Zakai <alonzakai@gmail.com>, 2016-03-06 16:19:21 -0800, , assume wasm binary preloaded web lack sync binary read,,
3706,5acbb8d34f88eae9b5b50cf5d00f86dc56a7057c,lon Zakai <alonzakai@gmail.com>, 2016-03-05 22:31:09 -0800, , handle continues one time loop,,
3707,c1823df9feea7ea90e3886cb18fedee56df48156,lon Zakai <alonzakai@gmail.com>, 2016-03-05 19:06:32 -0800, , cast f32 f64 calling f64 int asm2wasm,,
3708,49b8031ecf4695850d060ef11926caddf4bd3352,lon Zakai <alonzakai@gmail.com>, 2016-03-05 17:00:26 -0800, , disable flake8 idea make happy,,
3709,198ddd04e5c464839448fdfa9fc5dcf0faac13c6,lon Zakai <alonzakai@gmail.com>, 2016-03-05 16:57:40 -0800, , python fix,,
3710,d1b8d2fc754aca8e4313e28d6440d0ebe958e804,lon Zakai <alonzakai@gmail.com>, 2016-03-05 16:48:03 -0800, , python fix,,
3711,69b457cd2da748175f8fc46312c8f7b40e368205,lon Zakai <alonzakai@gmail.com>, 2016-03-05 16:45:22 -0800, , warn grow wasm memory mergememory,,
3712,d8232efb1664c162f834a3d540d8bbefb7035ec0,lon Zakai <alonzakai@gmail.com>, 2016-03-05 16:35:18 -0800, , python formatting,,
3713,3f838fd9c42eb9408b82120a43da0caeae44963e,lon Zakai <alonzakai@gmail.com>, 2016-03-05 16:28:09 -0800, , harmonize ffi call asm2wasm adding argument needed help asm ffis tolerate overloading unlike wasm,,
3714,9445c4900b120455583fbf48c8a08666a050bc5a,lon Zakai <alonzakai@gmail.com>, 2016-03-05 15:21:45 -0800, , fix global.math import,,
3715,bb4c679ebd25594c1efa797ec2d643c15abc4fa7,lon Zakai <alonzakai@gmail.com>, 2016-03-05 11:46:25 -0800, , spidermonkify improvement enough hello world work,,
3716,2c6f442fe58bfddc0736312ce107a5cbf6179b13,lon Zakai <alonzakai@gmail.com>, 2016-03-05 10:52:02 -0800, , add spidermonkify script,,
3717,a96bf5cbb71ee5923f4f534db49cedeccf6d51d0,lon Zakai <alonzakai@gmail.com>, 2016-03-04 22:15:18 -0800,228, merge pull request 228 webassembly integrate wasm fix integrate wasm fix,,
3718,e9be280e476026af4ecb0b0bc839e0a9d967168d,lon Zakai <alonzakai@gmail.com>, 2016-03-04 22:00:47 -0800, , place nan infinity global,,
3719,a0fe0c518d95a90137d7a28898add5eee1532142,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:57:57 -0800, , send typed array,,
3720,04889b818323309d1b6ddd2b628409a83dcf4ba1,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:57:32 -0800, , move wasmtypes integratewasmjs right place,,
3721,d576691b9a62dbae733e86af69569e9de1a2abb5,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:50:54 -0800,227, merge pull request 227 webassembly integrate wasm fix integrate wasm fix,,
3722,2a36300d4318a0a7b7275eac4939d4badfe74877,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:39:38 -0800, , pas buffer,,
3723,c5f98754c9c2938c1eaa493f8103bff11ebab628,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:38:59 -0800, , wasm wasm,,
3724,c4ba893ba88b7560c31d6c5c7cc0b93a3ebaeab7,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:37:49 -0800, , use lookupimport directly,,
3725,463842bd3456abda471e4031c100d2586fae9783,lon Zakai <alonzakai@gmail.com>, 2016-03-04 21:05:59 -0800,226, merge pull request 226 webassembly integrate wasm fix wasm integration fix,,
3726,90ec61b409e3a4d0fc2418d2ba19264b38cdf095,lon Zakai <alonzakai@gmail.com>, 2016-03-04 20:49:23 -0800, , move unification import handling interpreter native path,,
3727,4bde5052f0183a33cbaa454e1a4d01785c0d257b,lon Zakai <alonzakai@gmail.com>, 2016-03-04 11:46:19 -0800,222, merge pull request 222 webassembly memory merging fix memory merging fix,,
3728,e82c6e77e2fa2a2443fd3cc4ef4f4c9c0ba0ca62,lon Zakai <alonzakai@gmail.com>, 2016-03-04 11:25:11 -0800, , support memory segment wasm module get wasm backend used,,
3729,7b604a383873b0042056cf9b78f9cb6ab466953c,lon Zakai <alonzakai@gmail.com>, 2016-03-04 11:14:49 -0800, , fix setting must used,,
3730,7c498ab3df26edbb6077e0c84b379bea4a066f44,lon Zakai <alonzakai@gmail.com>, 2016-03-04 10:54:38 -0800, , wasm.js glue integration added emscripten pre optimized rest code part wasm.js executable,,
3731,e054eda4d85d01aba5cd61d97429b7456b0bc3d8,lon Zakai <alonzakai@gmail.com>, 2016-03-04 10:42:00 -0800, , update wasm.js build,,
3732,5d54bd1c2713ac802d919351f668e2316ab27d70,lon Zakai <alonzakai@gmail.com>, 2016-03-04 10:40:10 -0800, , remove optimization interpreter memory generation make always return memory like native code path,,
3733,23d0b0a717cd139c27e9127b2a0bdcaf19abf6ec,lon Zakai <alonzakai@gmail.com>, 2016-03-04 10:35:15 -0800, , fix mergememory,,
3734,b9443f47b084b1931d459490ecfd465dfcef68d3,lon Zakai <alonzakai@gmail.com>, 2016-03-04 10:18:32 -0800, , improve check error logging wasm method,,
3735,00e3875bb7feda59faf347b6887fcdb143d7e50b,lon Zakai <alonzakai@gmail.com>, 2016-03-03 16:49:21 -0800,221, merge pull request 221 webassembly update vanilla update emscripten,,
3736,edb841114c10a771c041ede482ca6bb0f326b621,lon Zakai <alonzakai@gmail.com>, 2016-03-03 15:57:34 -0800, , update emscripten,,
3737,e5f02a129130d873ba3bd855a06ba488512abf65,lon Zakai <alonzakai@gmail.com>, 2016-03-02 17:36:58 -0800,217, merge pull request 217 webassembly spec fix fix latest spec test update,,
3738,e68cf04a0df1dfbfa2d7f5f892669b728c5d8b11,lon Zakai <alonzakai@gmail.com>, 2016-03-02 17:35:07 -0800,218, merge pull request 218 webassembly update wasm update wasm.js,,
3739,de2d1e41de14e7885dc98781d302c52c45a4d075,erek Schuff <dschuff@chromium.org>, 2016-03-02 17:28:00 -0800, , update wasm.js several change wasm js.cpp since last update,,
3740,7543689ae566f2cde0fc4d2d0898f969d1e96c75,lon Zakai <alonzakai@gmail.com>, 2016-03-02 10:36:59 -0800, , update spec test repo,,
3741,14cc71b380005d3b2c5289ebfd20f5bf82ff4c79,lon Zakai <alonzakai@gmail.com>, 2016-03-02 10:34:36 -0800, , update select change spec,,
3742,af8073f0d361ee232152e411b89f48c6309281c2,lon Zakai <alonzakai@gmail.com>, 2016-03-02 10:30:06 -0800, , fix assertion interpreter strong block return type still end returning type due branch,,
3743,91f6a135f9accf0dfcf1a47bb1da45635d1d943e,lon Zakai <alonzakai@gmail.com>, 2016-03-01 20:17:15 -0800,216, merge pull request 216 webassembly update check.py documentation match emscripen pr4135,,
3744,eaa724a423b98be047459fb4db4e2b048fce3673,erek Schuff <dschuff@chromium.org>, 2016-03-01 17:37:32 -0800, , update emscripten pr4135,,
3745,c90de4964d89f8e0aeb0d36e2c2571e391c6b664,lon Zakai <alonzakai@gmail.com>, 2016-03-01 16:49:09 -0800,215, merge pull request 215 webassembly postorder postorder,,
3746,11c52f9ca64ccec0d8db6dac22247c8b0eed503f,lon Zakai <alonzakai@gmail.com>, 2016-02-29 16:25:26 -0800,204, merge pull request 204 mbebenita print compact compact printing,,
3747,9d71ab268097ede5fa4cac5262c1e8129250d81a,lon Zakai <alonzakai@gmail.com>, 2016-02-16 14:40:08 -0800, , switch postorder,,
3748,84aa340d56ca3bf8b3ae9a2ea3ba4990f975977e,lon Zakai <alonzakai@gmail.com>, 2016-02-25 10:48:45 -0800,214, merge pull request 214 webassembly new spec change new spec change,,
3749,ad4ce50e5c4d0ef1e530f286f4ebedba4f8a121f,lon Zakai <alonzakai@gmail.com>, 2016-02-25 10:33:52 -0800, , update spec test repo,,
3750,324962ecf1dd63eebfc94993df0d7e91c86a96f0,lon Zakai <alonzakai@gmail.com>, 2016-02-25 10:33:39 -0800, , support function index table,,
3751,51c52bb5e1547c4abece7e9ee0ca0c5fa1e8f4e2,lon Zakai <alonzakai@gmail.com>, 2016-02-25 10:15:15 -0800, , support block comment check.py,,
3752,654feec8e99413bd989ede7143fcf5a9c67c9db6,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-23 15:06:36 -0800, , remove minifiedprinter header file,,
3753,0bc91f2983cfcf44cb94a94454e8b689b58dec43,F Bastien <github@jfbastien.com>, 2016-02-23 14:57:58 -0800,213, merge pull request 213 webassembly 3450 update waterfall revision 3450,,
3754,c28b1a17ea319393a3c193626cb0acd353ad497a,F Bastien <jfb@chromium.org>, 2016-02-23 14:47:08 -0800, , update waterfall revision 3450 new test abort investigated,,
3755,ac3a3bb22be94bf253558c43ad6d8c96340e1553,lon Zakai <alonzakai@gmail.com>, 2016-02-23 14:05:02 -0800,212, merge pull request 212 webassembly grow memory return grow memory return value,,
3756,9c16dbe573d2fda9fca45f6ef9d60ac90fec9f79,lon Zakai <alonzakai@gmail.com>, 2016-02-23 14:04:50 -0800,210, merge pull request 210 mbebenita fix parsing bug fix add printing parsing test,,
3757,3121d8ce04d265032e1d7753b97a0cf17f8725c3,lon Zakai <alonzakai@gmail.com>, 2016-02-23 13:55:55 -0800, , grow memory return value update spec test,,
3758,817d92d7dd48752f6c0a82989ecfbde4553ad066,lon Zakai <alonzakai@gmail.com>, 2016-02-23 13:48:56 -0800,211, merge pull request 211 mbebenita fix switch fix switch offset,,
3759,e20fd0a5fec82a48ff3389acae47cfbb601b8f90,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-23 00:18:48 -0800, , fix switch offset,,
3760,8c12e60328a9491104df2937c1528b354141d5d3,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-22 15:40:05 -0800, , whitespace removal,,
3761,af0f6ef999e8ddf9c168b697710fd313883e8807,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-22 15:11:09 -0800, , bug fix add printing parsing test,,
3762,75a6357e2b57a908f955e4cc7b3e9e627524f385,lon Zakai <alonzakai@gmail.com>, 2016-02-22 12:38:16 -0800, , document env.exit support hack torture test,,
3763,ed567a4f49d3296dcf91bdb966c0deb077dacff7,lon Zakai <alonzakai@gmail.com>, 2016-02-21 12:10:26 -0800,209, merge pull request 209 webassembly asm fix asm fix,,
3764,1956794aa5200274d7b67329be55bf97af83f49e,lon Zakai <alonzakai@gmail.com>, 2016-02-21 12:02:55 -0800, , update wasm.js build,,
3765,1e53c3f4776ce442a63fdc9548b2cb9134813392,lon Zakai <alonzakai@gmail.com>, 2016-02-21 11:53:14 -0800, , support asm.js ceil,,
3766,2532fb4f2ffac65e287f7a26a4b84e19a83f42e5,lon Zakai <alonzakai@gmail.com>, 2016-02-21 11:39:24 -0800, , debugging tweak,,
3767,7bf31d447bca02947b56f05edf0a171c68c92c7a,lon Zakai <alonzakai@gmail.com>, 2016-02-20 20:11:26 -0800,206, merge pull request 206 webassembly align implicit print default alignment,,
3768,ebfac87c82cb8faa8cb55c0f51552bdb4ecb9169,lon Zakai <alonzakai@gmail.com>, 2016-02-20 20:07:43 -0800, , print total node metric,,
3769,ed77a619dc1550ce4ac4c0c420093b25e687996a,lon Zakai <alonzakai@gmail.com>, 2016-02-20 18:25:28 -0800, , print alignment implicit default number byte,,
3770,21daeab0f1fdfe799af93d35f1744873dad2ea8d,F Bastien <github@jfbastien.com>, 2016-02-20 11:41:15 -0800,205, merge pull request 205 webassembly 3321 update torture test 3321,,
3771,417c43cc20e4a9aa3af290e954944f9493753139,F Bastien <jfb@chromium.org>, 2016-02-20 08:24:39 -0800, , update torture test 3321 two new test fail import used pas memset llvm smarter,,
3772,8039a98d3b4b978a4aa2d8486c35596165981c3d,lon Zakai <alonzakai@gmail.com>, 2016-02-19 17:47:20 -0800,203, merge pull request 203 webassembly wasm.js improvement wasm.js improvement,,
3773,5fa252b63c29121ea4e240f5ccccb32f0a7327c8,lon Zakai <alonzakai@gmail.com>, 2016-02-19 16:42:55 -0800, , update wasm.js build,,
3774,af854dd0e98c0b3185ead411ffb9164cb9cb8796,lon Zakai <alonzakai@gmail.com>, 2016-02-19 16:42:47 -0800, , fix unaligned wasm.js load store,,
3775,21bea4589aaf5d0de92cd6917ec284444ad6557a,lon Zakai <alonzakai@gmail.com>, 2016-02-19 16:15:33 -0800, , handle aligned unaligned int64 store wasm.js,,
3776,33fc36930b2b73ff98eba6037138eaa8d3a20404,lon Zakai <alonzakai@gmail.com>, 2016-02-19 16:08:09 -0800, , make wasm.js tolerate wrong alignment per wasm spec,,
3777,5a1adcc357995089766ed333a55ff93204fe75ae,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:52:35 -0800, , add unaligned access wasm_backend testcase,,
3778,5ec0fdb423075356756c3f791a938b23f0495084,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:47:57 -0800, , support bit store wasm.js,,
3779,dc7b490d57736def99a40920ad4e6e8ef1cfa3a4,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:33:57 -0800, , add unaligned memory access wasm.js,,
3780,4eeeb2d30d095af620ab34144927ee9440b94d32,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:33:13 -0800, , update build.sh,,
3781,a3bbf686b5bd350b6339fd4f96f9dd2cbce3b04b,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:01:59 -0800, , use newer vanilla emscripten,,
3782,0df6175fa445c1925d41a2ca1d489a1b6d199d1f,lon Zakai <alonzakai@gmail.com>, 2016-02-19 15:01:47 -0800, , use 3321 newer llvm,,
3783,c2a7d79c3a44c8064f5e5099e7b14a12423b0d77,lon Zakai <alonzakai@gmail.com>, 2016-02-19 14:12:38 -0800, , merge branch reorder local,,
3784,3205dc9c54e49d4bc57c9cbfcb9163407b097580,lon Zakai <alonzakai@gmail.com>, 2016-02-19 14:12:04 -0800, , ensure stable sort reorderlocals,,
3785,6422258ee076d29bdb611d32268afbe692c59bc4,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-19 14:06:34 -0800, , remove empty function,,
3786,846579362c2cc2dc4d129abddd01a97be41d01dd,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-19 13:38:57 -0800, , reorder local,,
3787,47b9763af12799e1845677106de1f9c0a00ee2c4,lon Zakai <alonzakai@gmail.com>, 2016-02-18 13:45:42 -0800, , fix topmost switch label lowercase,,
3788,1547a9c0c6b702d86b4efb584c910ffbc0fb6b23,lon Zakai <alonzakai@gmail.com>, 2016-02-18 11:28:58 -0800, , fix copyright date,,
3789,a684cff9e123db38eec9a6c7fbd423aed0b127ab,lon Zakai <alonzakai@gmail.com>, 2016-02-18 11:23:10 -0800,201, merge pull request 201 webassembly lower case add optional pas lower case,,
3790,1f36e3a7ba07ba4460a2682805d259b19113727e,lon Zakai <alonzakai@gmail.com>, 2016-02-18 11:11:46 -0800, , lowercase pas,,
3791,849322a1135479f79f7d94b8b032486efe7955a8,lon Zakai <alonzakai@gmail.com>, 2016-02-17 17:46:54 -0800,200, merge pull request 200 webassembly print pas move printing pas,,
3792,10b929720a8701ef2a960f5b45e39d7a999cca41,lon Zakai <alonzakai@gmail.com>, 2016-02-17 16:53:14 -0800, , overload wasm printing std namespace,,
3793,29370f0fc7ad44f506e1bd54441f19111fe9ff5f,lon Zakai <alonzakai@gmail.com>, 2016-02-17 16:46:39 -0800, , remove print print flag since print,,
3794,5648c5bea8433116aeb0f267fe7e4443de28dd17,lon Zakai <alonzakai@gmail.com>, 2016-02-17 16:43:46 -0800, , fix date,,
3795,8b7548707893cf2a643325db8dfdfc6f437f7f86,lon Zakai <alonzakai@gmail.com>, 2016-02-17 14:58:40 -0800, , update auto updater,,
3796,51a0ffcc0a6bdd205e3979cc147adcf0e1186af4,lon Zakai <alonzakai@gmail.com>, 2016-02-17 14:37:06 -0800, , add wasm printing.h,,
3797,dbb5f32bafcf3c8f51eefb95e6c298ce6b9ac8cc,lon Zakai <alonzakai@gmail.com>, 2016-02-17 12:44:14 -0800, , move printing pas,,
3798,252962faba97b68684a470447c7202cf27ad8c05,lon Zakai <alonzakai@gmail.com>, 2016-02-17 12:52:51 -0800, , add example testcases auto updater update,,
3799,f1f7875381b8407f926c805eb71810bc9a5729f1,lon Zakai <alonzakai@gmail.com>, 2016-02-17 12:52:29 -0800, , wasm_backend testcases require vanilla_llvm anything else may old,,
3800,aac1151e72c416406ed35e8ee74a2e90a8ae189b,lon Zakai <alonzakai@gmail.com>, 2016-02-17 10:57:25 -0800, , memory max optional emit necessary,,
3801,f268d8ae74cc6a2b43fcb1b0f47ebbfe09b4b9da,erek Schuff <dschuff@chromium.org>, 2016-02-16 14:21:47 -0800, , update llvm build test 3913 r261014 includes recent bug fix also update waterfall spec repo,,
3802,f606ae65312c82bcb69de4f60a53610bf097df58,lon Zakai <alonzakai@gmail.com>, 2016-02-16 14:21:04 -0800, , update wasm.js build,,
3803,396a5118f502f5ce9b9a50d09e02609d76f796ba,lon Zakai <alonzakai@gmail.com>, 2016-02-16 14:11:48 -0800,198, merge pull request 198 gskachkov master tiny fix readme file,,
3804,4c43d933a5b2f773363cb47cc61d7279d9ad012a,lexandr Skachkov <gskachkov@gmail.com>, 2016-02-17 00:03:58 +0200, , fix typo readme,,
3805,6f6813c152ab90f811102f19128b82902e7f62ea,lon Zakai <alonzakai@gmail.com>, 2016-02-15 22:13:13 -0800, , send flattened output structed send function,,
3806,d4bd7dd9c6024db514c34435ce3476875360ede4,lon Zakai <alonzakai@gmail.com>, 2016-02-15 20:10:07 -0800, , add code parallel code integratewasmjs,,
3807,afbb7dbfd3034f33e41f28a1e361ad96c6ba7fa4,F Bastien <jfb@chromium.org>, 2016-02-15 09:21:25 -0800, , update build 3140 change waterfall finally caught infra issue updating nice,,
3808,145243a99e2669cdd53a9a2932c48c01108c3161,F Bastien <github@jfbastien.com>, 2016-02-13 14:26:48 -0800,197, merge pull request 197 webassembly update 3113 update 3113,,
3809,551005d16fd71c47271f2fc84d806c04c136603b,F Bastien <jfb@chromium.org>, 2016-02-13 14:20:09 -0800, , update build 3113 llvm test make,,
3810,a53cf3b263c26bacdac24b0a4a67a8c3189645ca,F Bastien <jfb@chromium.org>, 2016-02-13 14:13:18 -0800, , update waterfall,,
3811,6395ca27a90fdb50f1b74ca0b17e25d39f80342e,lon Zakai <alonzakai@gmail.com>, 2016-02-12 21:36:10 -0800,196, merge pull request 196 webassembly spec start fully support start wasm module,,
3812,adadace7899133b4a25dab47044a373879647ddb,lon Zakai <alonzakai@gmail.com>, 2016-02-10 17:07:54 -0800, , refactor operation literal,,
3813,f061ca831b4ec6d9d3fab0043a42fce0a0b52cf7,lon Zakai <alonzakai@gmail.com>, 2016-02-12 12:33:10 -0800, , call start method interpreter,,
3814,3d3c666bfbac06f34566a3cfcd1a2b969ce0c4a9,lon Zakai <alonzakai@gmail.com>, 2016-02-12 12:40:06 -0800, , add start binary format,,
3815,f2f05739d41a4e96953dc184dd768ff308ad4983,lon Zakai <alonzakai@gmail.com>, 2016-02-12 12:29:46 -0800, , validate start,,
3816,9dc79642d9ec619af46d3717111fbb5348f7bca1,lon Zakai <alonzakai@gmail.com>, 2016-02-12 11:03:35 -0800, , refactor binaryen shell accept wast begin module invalidity test,,
3817,760fca8004d8b1d47f9b53aadfd75bbf94407be5,lon Zakai <alonzakai@gmail.com>, 2016-02-11 13:43:08 -0800,195, merge pull request 195 webassembly swaptsan allow failure tsan travis build require asan pas,,
3818,4c579d0079ae0454290c425d8ab4dede06758355,erek Schuff <dschuff@chromium.org>, 2016-02-11 13:13:04 -0800, , allow failure tsan travis build require asan pas fixed asan error bot stay green flake tsan bot,,
3819,fd0c6cd9bb8f44d27bef15c46160b7bcf8e6e48b,erek Schuff <dschuff@chromium.org>, 2016-02-11 13:07:22 -0800, , update test revision torture test waterfall build 3002 brings llvm change varargs new test pas,,
3820,c21d0b14b1e5e94c82549926b2f5e7a68e291895,lon Zakai <alonzakai@gmail.com>, 2016-02-10 21:14:31 -0800,194, merge pull request 194 webassembly store parsing store parsing fix,,
3821,7b778798f1bbecfd95ff65ea94317957e79b9ee7,lon Zakai <alonzakai@gmail.com>, 2016-02-10 18:10:47 -0800, , fix s2wasm store parsing,,
3822,837ac371eaa356ba381ed01a872c56a8245669f8,F Bastien <github@jfbastien.com>, 2016-02-11 04:03:29 +0100,192, merge pull request 192 webassembly longjmp throw longjmp throw,,
3823,67c4675514ec9c220a74274f6fea10a47c7d5bac,lon Zakai <alonzakai@gmail.com>, 2016-02-10 18:10:37 -0800, , fix store printing,,
3824,2576165beae767f73cffdc449c80537030e59387,F Bastien <jfb@chromium.org>, 2016-02-09 17:17:49 -0800, , longjmp throw older tsan like longjmp use throw,,
3825,b528843ea6b68fe932ccad1d2ff5611b7c27a6d8,lon Zakai <alonzakai@gmail.com>, 2016-02-09 15:42:59 -0800,176, merge pull request 176 webassembly asan parse fix bound read,,
3826,03495efec37b331652701e64dc72f985e6e9f7c2,F Bastien <jfb@chromium.org>, 2016-02-03 09:50:46 -0800, , fix bound read found asan,,
3827,d5cc09449032972b07aaf4625349991fe61b62c1,erek Schuff <dschuff@chromium.org>, 2016-02-08 16:49:50 -0800, , align stack allocation byte satisfy aligment abi,,
3828,d3bbf5a4ddd70940d22eb3f1690c2637d725e43e,lon Zakai <alonzakai@gmail.com>, 2016-02-08 15:16:08 -0800,190, merge pull request 190 webassembly br_if operand order update binaryen several test new br_if operand order,,
3829,e9df05441f31bca550cc7f89935f10bf052b1464,erek Schuff <dschuff@chromium.org>, 2016-02-08 15:06:39 -0800, , update waterfall build torture test file 2907,,
3830,a9158298ebd8fcf2fe369a46635a458ce9f9f5d4,an Gohman <sunfish@mozilla.com>, 2016-02-08 11:58:32 -0800, , update binaryen several test new br_if operand order,,
3831,2262204746437423211930d83d8ea336be3efac2,lon Zakai <alonzakai@gmail.com>, 2016-02-08 13:33:34 -0800,189, merge pull request 189 webassembly br_if change br_if update,,
3832,28ac77ff3f5668d543a6c7a99f3e1b1dceff6201,lon Zakai <alonzakai@gmail.com>, 2016-02-08 12:01:42 -0800, , make mem.cpp test sensitive stack position,,
3833,d241be7ea16782273b626ce88da4fe87bd206455,lon Zakai <alonzakai@gmail.com>, 2016-02-08 11:35:35 -0800, , update wasm.js,,
3834,32ead1ba35e0ad6575e9d27370aba80160f11f7c,lon Zakai <alonzakai@gmail.com>, 2016-02-08 11:32:33 -0800, , update test output,,
3835,7dc054d36488bdea267dfb394758fc56a28e397e,lon Zakai <alonzakai@gmail.com>, 2016-02-08 11:26:33 -0800, , check break type validator,,
3836,74d54530b2405f67332d636de19f79894cb2a419,lon Zakai <alonzakai@gmail.com>, 2016-02-08 11:05:36 -0800, , remove wast wast operation break spec change remove unnecessarily big wasts,,
3837,79d405b82b648cc406a12ce7164a4ef31279c67c,lon Zakai <alonzakai@gmail.com>, 2016-02-08 10:54:19 -0800, , update spec test shift putting br_if condition end changed spec,,
3838,271504de91e3f396251041f94c0f29094af92207,erek Schuff <dschuff@chromium.org>, 2016-02-05 17:16:55 -0800,188, merge pull request 188 webassembly select_parse fix parser accept new order select operand,,
3839,31c0fb8bdf84a21d7c71953bec9107f504662f56,erek Schuff <dschuff@chromium.org>, 2016-02-05 16:43:17 -0800, , fix parser accept new order select operand also update waterfall revision llvm generated test,,
3840,66719ac9e42d5fc85e3defaa52ab25c0ca547a23,erek Schuff <dschuff@chromium.org>, 2016-02-05 15:25:47 -0800, , fix travis asan build apparently env something special travis setting environment variable instead manually export variable before_install,,
3841,64452d23768464f9be9463cfb3037b501c380f40,erek Schuff <dschuff@chromium.org>, 2016-02-05 14:03:24 -0800,183, merge pull request 183 webassembly asan_no_leak suppress leak detection asan builder,,
3842,0c98499bf13673c1ff4344edb99cd73655f88419,erek Schuff <dschuff@chromium.org>, 2016-02-03 16:51:14 -0800, , suppress leak detection asan builder,,
3843,22ec908443eec3b7e1112562c089398692fb5feb,lon Zakai <alonzakai@gmail.com>, 2016-02-04 16:36:31 -0800, , fix import parsing,,
3844,323b61318d81a140584aae22fad102209b42294a,F Bastien <jfb@chromium.org>, 2016-02-05 06:04:15 -0800, , update build 2804 update bunch llvm test fix e.g select make next diff easier though,,
3845,29eb5d43d47fad7be03536ef50638dd14fd1dc5c,F Bastien <jfb@chromium.org>, 2016-02-05 05:28:05 -0800, , auto update pas start needed,,
3846,9cfdb12d4976e4a9fbf6d902065904ffa48bdbec,F Bastien <github@jfbastien.com>, 2016-02-05 14:14:10 +0100,187, merge pull request 187 webassembly select fix select,,
3847,7459e5af01fbe3a8e75e73783794b4cdffda34e9,F Bastien <jfb@chromium.org>, 2016-02-05 05:11:50 -0800, , fix select ordering changed http github.com webassembly spec pull 221 changed spec test breaking sexpr wasm pull spec test fixed http github.com webassembly sexpr wasm prototype commit turn break binaryen feed sexpr wasm .wast file old select operand ordering note new failure running torture test binaryen shell order evaluation correct binaryen shell emitted properly llvm file require another patch fix llvm,,
3848,8f67b6e27a38c93fbca7f3c44a88889b3896952f,F Bastien <github@jfbastien.com>, 2016-02-05 11:23:11 +0100,182, merge pull request 182 webassembly start support start,,
3849,31409184708b04bae830869c7b6ce61726020444,F Bastien <jfb@chromium.org>, 2016-02-05 01:25:56 -0800, , review comment,,
3850,3fbae879fc1b678e748ab3f8c24148e1c3818f45,F Bastien <jfb@chromium.org>, 2016-02-04 05:18:07 -0800,231, support start spec http github.com webassembly design pull 495 discussed http github.com webassembly spec issue 231 make simpler uniform add start entry point s2wasm right place add start eventually need basic setup e.g put code start setup stack dschuff http github.com webassembly binaryen pull 179 rather linker right place s2wasm happens act linker right,,
3851,c1f9026c2788e4ef6f6af0c6d9aa04d22fc00320,lon Zakai <alonzakai@gmail.com>, 2016-02-04 16:49:11 -0800,185, merge pull request 185 webassembly update waterfall build revision,,
3852,3c62319b021279d1f715b86884868abb4957ea53,erek Schuff <dschuff@chromium.org>, 2016-02-04 16:27:22 -0800, , update waterfall build revision brings change pas allocate stack s2wasm update lot new expected passing test,,
3853,756b12bea5f313ba0f2811254e2826b30987f42f,lon Zakai <alonzakai@gmail.com>, 2016-02-04 16:21:58 -0800,174, merge pull request 174 mbebenita fix import fix import parsing,,
3854,f8c16d02b9ddb42a71424fe8a33e6c1d1f7a5f80,lon Zakai <alonzakai@gmail.com>, 2016-02-04 15:55:58 -0800, , comment,,
3855,9b12bb3742534c25b8c2e5906ca663b66b4be766,erek Schuff <dschuff@chromium.org>, 2016-02-04 15:04:02 -0800,179, merge pull request 179 webassembly allocate_stack allocate space user stack link time,,
3856,c081e08014473a66f7e1a496fdeb3477c1325d7f,erek Schuff <dschuff@chromium.org>, 2016-02-03 11:19:03 -0800, , add option allocate space user stack link time currently s2wasm pre allocates space special __stack_pointer variable actual stack __stack_pointer null real system stack allocated dynamic linker thread runtime toolchain system provided startup code since wasm yet add option allocate stack linker continue run single file libc free test,,
3857,0c0b6bab2ed651a92d36a74ddb737cb7e7f4c985,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-04 14:52:22 -0800, , formatting,,
3858,3b89982be258921b120dfb2e951533b3e87b70e1,F Bastien <jfb@chromium.org>, 2016-02-04 01:23:39 -0800, , nfc improve minsize rationale discussed http github.com webassembly binaryen pull 167 issuecomment 179496231,,
3859,b1cda3d4cabc068eb46aa1508814df886fd27f63,F Bastien <github@jfbastien.com>, 2016-02-04 10:09:02 +0100,180, merge pull request 180 webassembly unsigned_binary use unsigned type evaluate i32 i64 binary operator,,
3860,ddaca4202886f036bf525eb174a1b2fd339fa42c,erek Schuff <dschuff@chromium.org>, 2016-02-03 15:01:43 -0800, , use unsigned type evaluate i32 i64 binary operator instead defaulting signed type casting necessary use unsigned type explicitly make signed copy appropriate avoiding lot casting improving readability avoids undefined behavior signed overflow,,
3861,838a5fcf62995c17cdac3a6d39cf139b44e9ba0d,erek Schuff <dschuff@chromium.org>, 2016-02-03 15:54:28 -0800,181, merge pull request 181 webassembly de_inline inline signed wrapper template bit manipulation function,,
3862,9a79c2f7b83fae35eef47ca307d834ba5a632689,erek Schuff <dschuff@chromium.org>, 2016-02-03 15:42:26 -0800, , inline signed wrapper template bit manipulation function fix clang build,,
3863,2aa80630b873cfe32c7df6617d5bc644d4c937a4,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-03 13:32:24 -0800, , remove assert,,
3864,26d5aa903a1f5908e26e63095fd92749e1bc9544,lon Zakai <alonzakai@gmail.com>, 2016-02-03 13:21:25 -0800,178, merge pull request 178 webassembly fix_ambig fix ambiguous constructor call explicit cast,,
3865,83616f8a27bfc0966435b2d96f3ee201eed6c9a7,erek Schuff <dschuff@chromium.org>, 2016-02-03 12:53:19 -0800, , fix ambiguous constructor call explicit cast fix travis build,,
3866,353e6ee10dc15c8ad01533c0adfc4fc5413b64f0,lon Zakai <alonzakai@gmail.com>, 2016-02-03 12:21:26 -0800, , update spec test,,
3867,0c4e4521b5ede340a7060bf052ccdf84269c3f0a,lon Zakai <alonzakai@gmail.com>, 2016-02-03 12:20:59 -0800, , break return unreachable type,,
3868,83b368381eb1e9e499f213129627d0c188d0008f,lon Zakai <alonzakai@gmail.com>, 2016-02-03 11:36:26 -0800, , merge remote tracking branch origin improve memory trap,,
3869,6dab47590562df6e542ff3f0c105db138b8f4fd9,lon Zakai <alonzakai@gmail.com>, 2016-02-03 11:32:45 -0800, , fix gcc 4.8.2 breakage due,,
3870,1ceff1c7ede8014782cae7170e75ce6cd3a52a16,lon Zakai <alonzakai@gmail.com>, 2016-02-03 11:17:30 -0800,152, merge pull request 152 webassembly float refactor float refactoring nan comparison change,,
3871,b1ba1b81ae7a382018f5b5769e25d9431fd462b9,lon Zakai <alonzakai@gmail.com>, 2016-02-03 10:19:28 -0800, , fix type large consts,,
3872,136cb714d38df62f7f100904a8088a425ff6ae93,F Bastien <jfb@chromium.org>, 2016-02-03 07:32:22 -0800, , shell improve memory trap make easier debug message look like trap final memory,,
3873,fda7aeb6547e98419b220676b9fe829c8635962a,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-02-03 02:23:54 -0800, , fix import parsing,,
3874,ff497f7a261331b3aa6a1e7a1f8a5e476f856d3c,F Bastien <github@jfbastien.com>, 2016-02-03 11:06:25 +0100,170, merge pull request 170 webassembly bit support move bits.h support,,
3875,5c9cb3b2176a20f3a645546c1f7e97e5414f0309,F Bastien <github@jfbastien.com>, 2016-02-03 10:42:49 +0100,167, merge pull request 167 webassembly unaligned shell use unaligned memory,,
3876,66da1ee9cc70e3848c45745c21a244e54512fa9c,F Bastien <jfb@chromium.org>, 2016-02-02 11:12:06 -0800, , move bits.h support faster compiles,,
3877,b6d45f364779f40c7ba43973cc4404d7cf9b953a,F Bastien <jfb@chromium.org>, 2016-02-02 08:47:08 -0800, , shell use unaligned memory,,
3878,bdcc9c30e68e63ac2b17a415d9aceff3e62bbd07,lon Zakai <alonzakai@gmail.com>, 2016-02-02 19:11:52 -0800, , fix nan comparison,,
3879,d467c8f522d7ed8e495b548a753b5f599f7778fa,lon Zakai <alonzakai@gmail.com>, 2016-01-28 18:34:20 -0800, , assert test verify nan identical,,
3880,edc07c0cb8e66f8ca33de759b02cf1d3171b5df9,lon Zakai <alonzakai@gmail.com>, 2016-02-02 19:07:43 -0800, , simplify interpreter int reinterpreting,,
3881,5273c5c4eb03e78c6226e928973301566c8abc2a,lon Zakai <alonzakai@gmail.com>, 2016-02-02 19:07:29 -0800, , parse nan due care,,
3882,a28ccaece49c9c5a59eba7d951f2a61b9c27f18a,lon Zakai <alonzakai@gmail.com>, 2016-02-02 16:43:36 -0800, , convert copysign use int bit,,
3883,b1cd906c688f52228a59a8ff244ec581d062550e,lon Zakai <alonzakai@gmail.com>, 2016-02-02 16:40:44 -0800, , convert neg use int bit,,
3884,9a4dc90db0433473fbcf2b0ba3fa99efc9e77a31,lon Zakai <alonzakai@gmail.com>, 2016-02-02 16:35:41 -0800, , convert use int bit,,
3885,26e30285dd5b91742feb18dd6b924e359dae8901,lon Zakai <alonzakai@gmail.com>, 2016-02-01 14:08:54 -0800, , save int bit literal bitcast float double explicit request,,
3886,1eb620220ba91257d080721f194874960f4fb5fe,lon Zakai <alonzakai@gmail.com>, 2016-02-02 13:36:24 -0800, , update spec test,,
3887,793cb20b7b8e94c607ad83b18892cc339862f96f,lon Zakai <alonzakai@gmail.com>, 2016-02-02 13:34:08 -0800,163, accept 163,,
3888,0cd317a9f870ea701a54badee9f34329f3430744,F Bastien <jfb@chromium.org>, 2016-02-02 11:17:01 -0800, , update revision 2686 add new test clang generate r259508 one fails execute properly,,
3889,b4ab45dca8698a1c65a85e6c767c42c3416cc1c5,F Bastien <github@jfbastien.com>, 2016-02-02 15:37:10 +0100,166, merge pull request 166 webassembly explicit make literal ctors explicit,,
3890,b20025479124b041c94f9bf6f8053eaa95e46c0c,F Bastien <jfb@chromium.org>, 2016-02-02 06:14:34 -0800,40, make literal ctors explicit tends avoid silly mistake worried adding explicit ctor enum wasmtype parameter see coding standard 101 rule guideline best practice rule avoid providing implicit conversion,,
3891,4044cbd8fe593a118456079eaddfb393c84b9e76,F Bastien <github@jfbastien.com>, 2016-02-02 14:59:58 +0100,165, merge pull request 165 webassembly entry params shell fix entry parameter number,,
3892,c0c40ceaf1c5e2c4fc966b36ec04592e6c67979f,F Bastien <jfb@chromium.org>, 2016-02-02 05:51:04 -0800, , shell fix entry parameter number running shell entry assumed signature zero parameter true main look function parameter list construct zero initialized argument vector right type fix failure hiding failure,,
3893,9a0faea4e061d0ce6686914543204e05cc7b93c3,F Bastien <github@jfbastien.com>, 2016-02-02 13:09:07 +0100,164, merge pull request 164 webassembly update 2678 update waterfall build 2678,,
3894,46ea8b27b10a718053ab46f3bf11cba25489834c,F Bastien <jfb@chromium.org>, 2016-02-02 02:36:31 -0800, , update waterfall build 2678 update torture test update classify binaryen shell failure,,
3895,fb96a666713bbef6de104366fe5d834f46fb1e4c,lon Zakai <alonzakai@gmail.com>, 2016-02-01 15:11:14 -0800, , use return s2wasm,,
3896,a9fee5a35d0ac49d8a90c5fcbd5a8ac0506c3724,lon Zakai <alonzakai@gmail.com>, 2016-02-01 15:02:37 -0800, , use return asm2wasm,,
3897,5a2217d4d50c5302562ba29fb38a60edbe84d262,lon Zakai <alonzakai@gmail.com>, 2016-02-01 14:43:19 -0800, , add return node,,
3898,f18096a0d7d355499a218e1ff4196b296a1f82b1,erek Schuff <dschuff@chromium.org>, 2016-02-01 13:14:14 -0800,157, merge pull request 157 webassembly test_branch update llvm build 2566,,
3899,f275618272a6a5802458beea2e66491d207e14f5,lon Zakai <alonzakai@gmail.com>, 2016-01-29 14:28:54 -0800, , relax wasm.js assertion alignment update wasm.js build,,
3900,cc92414e1145557c17d90cae8b8acb028c377196,erek Schuff <dschuff@chromium.org>, 2016-01-29 13:49:09 -0800, , update llvm build 2566 pull support frame pointer llvm expose test binaryen update test expectation accordingly,,
3901,b4e04afe0a74edf35642908e715e2497f6c18e7f,lon Zakai <alonzakai@gmail.com>, 2016-02-01 11:14:39 -0800, , use if_else select,,
3902,45aa22043f265eafe701d5dda76f78cf50b2bf9c,lon Zakai <alonzakai@gmail.com>, 2016-02-01 11:03:36 -0800,160, add unreachable type properly type check binary unreachable side ignore 160,,
3903,34c5a1756596119e84349d97b01946a3522a5902,lon Zakai <alonzakai@gmail.com>, 2016-02-01 10:54:20 -0800,161, set type loop 161,,
3904,27bdda2e01d83a5b4023a729ed2a427f1ee9fe41,lon Zakai <alonzakai@gmail.com>, 2016-02-01 10:39:27 -0800,162, fix call_indirect s2wasm parsing order 162,,
3905,d7e7328addef046ef103837e24e6df40645f4040,lon Zakai <alonzakai@gmail.com>, 2016-02-01 10:37:46 -0800, , clean refactored call processing code,,
3906,805d930305d792f472881a06f72fc0974d704c48,lon Zakai <alonzakai@gmail.com>, 2016-02-01 10:31:35 -0800, , refactor call processing code s2wasm share much call_indirect others need rewrite call_indirect code,,
3907,4eeee5fbc1b60f02c4c2c75b8d6ab0e7c05ea2de,lon Zakai <alonzakai@gmail.com>, 2016-01-31 18:40:36 -0800, , optimize store offset emscripten output,,
3908,6defea9c1b451051714cabbcdd8fbe22872c78c9,lon Zakai <alonzakai@gmail.com>, 2016-01-31 18:32:53 -0800, , optimize load offset emscripten output,,
3909,36df20b097e074c3f37a6a2b2bc0bb3b174cdd30,lon Zakai <alonzakai@gmail.com>, 2016-01-31 09:08:36 -0800, , fix block type lowerifelse,,
3910,9cbcb0753617a61f34bd716cfceb0555035772c2,lon Zakai <alonzakai@gmail.com>, 2016-01-31 08:45:32 -0800, , update spec test,,
3911,48832b5d4dbd06f6f7f6afca5822055f219a7392,lon Zakai <alonzakai@gmail.com>, 2016-01-31 08:44:51 -0800, , handle initial comment wast splitting,,
3912,ae918ff5f5746398d0393cf871f6208e582b82d2,lon Zakai <alonzakai@gmail.com>, 2016-01-30 15:02:58 -0800, , refactor binary writing code,,
3913,2d966169a94a5f852491310c4f8868f71ea65631,F Bastien <jfb@chromium.org>, 2016-01-30 08:13:32 -0800, , relocation properly ignoring unknown symbol previous patch perform relocation stuck around make nullptr instead,,
3914,4a182068c6f3360dbf9c27420bbb0a11f34af3dd,lon Zakai <alonzakai@gmail.com>, 2016-01-29 20:32:04 -0800,153, merge pull request 153 webassembly binary spec test binary spec test,,
3915,fece87ba4008c20978639580a8dc7264c57c489d,lon Zakai <alonzakai@gmail.com>, 2016-01-29 20:19:07 -0800, , enable binary format spec test output,,
3916,a0e109c8bf15d55af2280dbd95df67d89fa65520,lon Zakai <alonzakai@gmail.com>, 2016-01-29 20:17:57 -0800, , enable binary format spec test,,
3917,17ab9b60b0cd48b2fd37217fd91a3c65feb03e5f,lon Zakai <alonzakai@gmail.com>, 2016-01-29 17:57:02 -0800, , fix switch binary format,,
3918,d569cf1db86179981d27145c6e126247d4d89ae3,lon Zakai <alonzakai@gmail.com>, 2016-01-29 17:44:33 -0800, , refactor binary format break code,,
3919,9ec15cf362ac5df76e2021282489ab414dfd6fd6,lon Zakai <alonzakai@gmail.com>, 2016-01-29 17:12:07 -0800, , let ceil binary memory size computation let get uint_max overflow,,
3920,1cf76c3293fdf8e0326384c39696df844d8d6aed,lon Zakai <alonzakai@gmail.com>, 2016-01-29 17:06:49 -0800, , allow memory size binary format,,
3921,6c52601dde6699e0655c9a61dc2df3089e0a0204,lon Zakai <alonzakai@gmail.com>, 2016-01-29 17:00:40 -0800, , fix i8const usage,,
3922,fd0488f48cd2561aacb0f2eb02df6e9524dc9b62,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:54:14 -0800, , update test,,
3923,ef2b1b630496dc695de5f9b722576682580a5a3f,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:53:47 -0800, , function already type named change type,,
3924,1ce6cc0d79fe819648c5df2033ad508a98da933d,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:53:27 -0800, , print named type function,,
3925,dd74f3a36493fec082f44bf6c4f8b954e48e0300,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:53:17 -0800, , fix function type parsing parser,,
3926,b055cb0bc90482d41d52b62a3664df2d0d61c06f,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:29:54 -0800, , update test,,
3927,a52a8cb20e03c786f846cf66ef19b72de8de4104,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:21:35 -0800, , update test output,,
3928,03d1a16684c9b13ad0df9e86fa6c7bd89138798f,lon Zakai <alonzakai@gmail.com>, 2016-01-29 16:20:35 -0800,152, fix float payload based 152,,
3929,c4b9d323f28109a4e918d7f1d31e11931c4aaf58,lon Zakai <alonzakai@gmail.com>, 2016-01-29 15:44:16 -0800, , support export different name binary format,,
3930,fa3b5371b8d0587cf9489110bcbc77e86da44076,lon Zakai <alonzakai@gmail.com>, 2016-01-29 15:44:00 -0800, , clarify export field,,
3931,df10192f3445648b797977e54ae64ae955d5e21c,lon Zakai <alonzakai@gmail.com>, 2016-01-29 15:21:17 -0800, , fix printing i64 load byte,,
3932,2ecdaa083088588e39705bdbe5d78338283fa9e8,lon Zakai <alonzakai@gmail.com>, 2016-01-29 15:09:08 -0800, , fix convertsint64 binary format,,
3933,6537e5205b9d2e319dc0d7642aebba2cd32a2790,lon Zakai <alonzakai@gmail.com>, 2016-01-29 15:03:28 -0800, , fix conversion opcodes,,
3934,e81ed44795bcb3e3c181177009cb6390d1b0a555,lon Zakai <alonzakai@gmail.com>, 2016-01-29 14:54:49 -0800, , fix conversion opcodes binary format,,
3935,6d8015094f49f5403d9b9a54bab694e41014cc2a,erek Schuff <dschuff@chromium.org>, 2016-01-29 14:18:14 -0800, , revert change,,
3936,0bc7b7dbdc15fc144a8cb7d750fa585408b4d745,lon Zakai <alonzakai@gmail.com>, 2016-01-29 13:40:21 -0800, , remove outdated comment,,
3937,72b94954b52a40abc996f5f451be4c73780350fe,lon Zakai <alonzakai@gmail.com>, 2016-01-29 12:08:13 -0800,156, merge pull request 156 webassembly cmake debug cmake add debug option,,
3938,db708900111b720e62af4abd2cc0e278c69f8b38,lon Zakai <alonzakai@gmail.com>, 2016-01-29 11:52:58 -0800,155, merge pull request 155 paulaustin master update readme example test name change,,
3939,337569fded88e177de01afd380ecf83abffa4c09,F Bastien <jfb@google.com>, 2016-01-29 11:42:04 -0800, , cmake add debug option use debug use debug build default get release getting tired manually changing cmake file,,
3940,9683f9fd119afb81787d1d3032c7b4616831fb2d,erek Schuff <dschuff@chromium.org>, 2016-01-29 11:37:09 -0800, , update torture test expectation frame pointer support recently added llvm exposing test rest pipeline,,
3941,da0f9511ea7be4f32c1aedfba0463dc91cd4e422,aulAustin <canoetime@gmail.com>, 2016-01-29 13:20:46 -0600, , update readme example test name change,,
3942,5019e941939734347e535e117960df8452a8b990,lon Zakai <alonzakai@gmail.com>, 2016-01-28 21:08:56 -0800, , add import module.base binary format,,
3943,e723adfc542a0dd0440c2429fcd2e7fcfcddd4e0,lon Zakai <alonzakai@gmail.com>, 2016-01-28 21:05:46 -0800, , join adjacent identical ifs,,
3944,8ed5ab1e5610df34d781d346c1e50ec04d1a4036,lon Zakai <alonzakai@gmail.com>, 2016-01-28 17:25:50 -0800, , current binary format power memory use ceil ensure conversion increase memory doe make small segment,,
3945,991891ef329f099ab2927af173dc920bfe2f9234,lon Zakai <alonzakai@gmail.com>, 2016-01-28 17:23:30 -0800, , fix memory segment reading binary format,,
3946,1dda2d7a26d4cf214ad723d8ea43a6dc126aa563,lon Zakai <alonzakai@gmail.com>, 2016-01-28 16:37:50 -0800, , gather invokes splitting wasts,,
3947,892a59c999fe5af096d18d27c8bdc4f16f2bb7a9,lon Zakai <alonzakai@gmail.com>, 2016-01-28 16:35:38 -0800, , refactor check.py preparation running spec test converted binary back,,
3948,d4b6c15705fc45834e9d3557c6f0796fb1e9381e,lon Zakai <alonzakai@gmail.com>, 2016-01-28 11:26:40 -0800,151, merge pull request 151 webassembly nan output nan payload,,
3949,a6198ed82965e40145bc7e14096e7333a2590be6,F Bastien <jfb@chromium.org>, 2016-01-28 10:48:34 -0800, , use bit_cast parseconst avoid,,
3950,876c24812ae7660553b47797bb45461fcea1cc20,F Bastien <jfb@chromium.org>, 2016-01-28 10:42:01 -0800, , factor bit_cast,,
3951,76b1a52626151906b769d8537c16a5144b1cd3b3,F Bastien <jfb@chromium.org>, 2016-01-28 10:27:29 -0800, , emit nan payload zero,,
3952,700c910cd1be1dcfd84f3a2bc4252a47999b9341,F Bastien <jfb@chromium.org>, 2016-01-28 09:01:07 -0800,28, output nan payload discussed binji sunfish http github.com webassembly sexpr wasm prototype issue,,
3953,30a371284f7a8128c52beec39ccbac03103a2b5c,F Bastien <jfb@chromium.org>, 2016-01-27 18:46:20 -0800, , write memory segment line 30k column file silly,,
3954,9ced7de31c9317f2c9ad579bb6c7ff466741b968,F Bastien <jfb@chromium.org>, 2016-01-27 18:35:11 -0800, , add s2wasm option ignore unknown symbol useful bringup,,
3955,dbe29fc629356ca5abdfeeaf0da573b1208eb3de,F Bastien <jfb@chromium.org>, 2016-01-27 17:56:12 -0800, , s2wasm support aliased function,,
3956,be3ee4d97e81af88dcc9ac97b86da53d0d49c302,lon Zakai <alonzakai@gmail.com>, 2016-01-27 19:44:11 -0800, , sort key metric,,
3957,6f0e64113c98dec8fa32270b7c7556ce266190a3,lon Zakai <alonzakai@gmail.com>, 2016-01-27 19:23:27 -0800,147, merge pull request 147 mbebenita metric add metric command line argument,,
3958,54c77ff7c48d250a1a5b0aa2a262689fa8184d78,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-01-27 18:34:14 -0800, , add metric command line argument print metric .wast file optimization pass,,
3959,9effac86e9679d723f17d999d233f5b15ce61094,lon Zakai <alonzakai@gmail.com>, 2016-01-27 17:02:24 -0800, , test part spec test binary format even multiple module one file,,
3960,002080c03eca29fb26901b5953e29cb1dac34c9f,lon Zakai <alonzakai@gmail.com>, 2016-01-27 17:01:36 -0800, , ignore zero size segment binary format,,
3961,d378fd9a098572d1517f8ac9ce8909fd38f11122,an Gohman <sunfish@mozilla.com>, 2016-01-27 15:43:24 -0800,146, merge pull request 146 webassembly update test latest llvm http d16650,,
3962,ace3199b27b4f15f30fd6a2f3dbe5534a0ccf6b5,an Gohman <sunfish@mozilla.com>, 2016-01-27 15:22:53 -0800, , parenthesize macro argument,,
3963,047e78d18d997cb206ee121a23bdf466dba17034,lon Zakai <alonzakai@gmail.com>, 2016-01-27 15:14:44 -0800, , support tee_local file,,
3964,aca3e33790045db5db58df711d3e03030f5076eb,an Gohman <sunfish@mozilla.com>, 2016-01-27 13:55:04 -0800, , latest llvm http d16650,,
3965,f329e28d111ea3462fa89dacf53024fba1c52415,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:48:12 -0800, , verify binary output valid wasts,,
3966,24992f477f21167efafdc8d5f1a2a9fd197baab6,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:45:38 -0800, , parse size block,,
3967,f0dd7c4c98566751a63807572b9ca66b294ef434,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:39:53 -0800, , fix select type,,
3968,de4fcd7a0118072991ad1ab0bb11d798ef895458,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:35:09 -0800, , fix memorysize type,,
3969,3bb222899258e32e17692a18a6e65c3051a0cf20,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:26:53 -0800, , fix function result binary format reading,,
3970,79e05f5d713b90f50ece22dfc6410f065de78be7,lon Zakai <alonzakai@gmail.com>, 2016-01-27 13:26:18 -0800, , improve assert,,
3971,691e179fe4fc0d7349e7066e2a14f080f9488ca9,lon Zakai <alonzakai@gmail.com>, 2016-01-27 11:06:08 -0800,144, merge pull request 144 mbebenita apple color fix color osx,,
3972,ca07ba59a12584bc61a9d76553abdb31fd091481,lon Zakai <alonzakai@gmail.com>, 2016-01-26 21:24:07 -0800, , increase function block size binary format get real world code build,,
3973,3ab7b505d3ccfe2351eea8e3ccb1a5c958b27886,ichael <mbebenita@Michaels-MacBook-Pro-4.local>, 2016-01-26 17:52:14 -0800, , fix color osx apple define __apple__ instead lower case __apple__,,
3974,d4fd9f214b888db359748b04c5a0dcb255448acd,lon Zakai <alonzakai@gmail.com>, 2016-01-26 17:31:11 -0800, , verify convert spec test binary back,,
3975,787dbd34f57318d79cc1cf6011beafa601b72474,lon Zakai <alonzakai@gmail.com>, 2016-01-26 17:30:14 -0800, , fix growmemory parsing,,
3976,fcc6ebb468c0b48c2fbc6efff9c512503747f805,lon Zakai <alonzakai@gmail.com>, 2016-01-26 17:17:32 -0800, , refactor binary format check method check.py,,
3977,b886afc6f023c9aa4fe1dd84e1d2f8ec2a233a99,F Bastien <jfb@chromium.org>, 2016-01-26 13:16:46 -0800, , update waterfall repo need update argument,,
3978,c2f0a42a36ea4a6047c483aa51d9fced98b96ada,lon Zakai <alonzakai@gmail.com>, 2016-01-26 11:33:18 -0800,143, merge pull request 143 lichtso master ignore meta data emitted clang mac,,
3979,5e0a7f42b82f1096a41a51ada2a370e0f465ea93,lexander MeiÃner <AlexanderMeissner@gmx.net>, 2016-01-26 20:17:04 +0100, , added test case _version_min meta data,,
3980,413a7e6dfd8b278e0cc951ad47102846ee7d9e3f,lexander MeiÃner <AlexanderMeissner@gmx.net>, 2016-01-26 19:41:23 +0100, , ignore meta data emitted clang mac,,
3981,d9bb568c5693e042676bfd2d8797270dc6e55922,lon Zakai <alonzakai@gmail.com>, 2016-01-25 21:38:14 -0800,142, merge pull request 142 webassembly update test update test llvm r258792,,
3982,1f807e7caec06649e8329fdf9266768644ef9a64,an Gohman <sunfish@mozilla.com>, 2016-01-25 21:15:21 -0800, , update .wast file expected output,,
3983,2f37781a6714d20a5e564a9027fa9ce477369e45,an Gohman <sunfish@mozilla.com>, 2016-01-25 21:08:50 -0800, , update test llvm r258792,,
3984,c57934eb52a0a415bb362f4e6f09065a40515e3f,lon Zakai <alonzakai@gmail.com>, 2016-01-25 17:48:26 -0800, , support p2align function alignment s2wasm,,
3985,30b67c29dfd9a075b526043dfbf8556c918c6e5a,lon Zakai <alonzakai@gmail.com>, 2016-01-25 17:44:05 -0800, , accept either align p2align globals s2wasm,,
3986,513cfdc94d0b2e99c48fda4dbbbdfcff0aa97a0b,lon Zakai <alonzakai@gmail.com>, 2016-01-25 16:43:23 -0800,140, merge pull request 140 webassembly alignment latest llvm http d16534,,
3987,c0c72f2fed5cd7ef4512cffa8c18152658f20e2c,lon Zakai <alonzakai@gmail.com>, 2016-01-25 10:51:01 -0800, , handle new alignment format llvm,,
3988,28adf7c1bdbed96e97499ca5955594790a0022b9,an Gohman <sunfish@mozilla.com>, 2016-01-25 08:02:38 -0800, , latest llvm http d16534,,
3989,da726f060373d957704c51cdb019026e6c3c0a41,lon Zakai <alonzakai@gmail.com>, 2016-01-23 14:18:35 -0800, , fold br_if,,
3990,0e6ba7b1ee49bacd2a5ff4ae1b01982f624463f6,lon Zakai <alonzakai@gmail.com>, 2016-01-23 11:03:08 -0800,139, avoid emitting block loop .wast format allows 139,,
3991,627b4f16433739136dc9f51a7dc9db93ce0384a1,lon Zakai <alonzakai@gmail.com>, 2016-01-22 17:19:23 -0800, , allocate __stack_pointer completely,,
3992,c41dbabf22b069c1dd766e6a44dbe6f4858b7dbf,lon Zakai <alonzakai@gmail.com>, 2016-01-22 16:06:10 -0800, , remove bad comment,,
3993,91ed39b09313549924be949e706d1bbe9c970234,lon Zakai <alonzakai@gmail.com>, 2016-01-22 16:02:52 -0800, , flexibility section reading binary format code,,
3994,8bf766c858c996c88017c589d921da3326210801,lon Zakai <alonzakai@gmail.com>, 2016-01-22 16:01:52 -0800, , missing file,,
3995,31c6f4b2b0d79e7fe1e801432537e627d11f3091,lon Zakai <alonzakai@gmail.com>, 2016-01-22 10:59:10 -0800,136, add binary opcodes kitchen sink test 136,,
3996,bb72adc023a0c1484ed0a12deffeec189f199db7,lon Zakai <alonzakai@gmail.com>, 2016-01-22 10:48:55 -0800, , add binary format,,
3997,0d512c9013aa8410a05bf1b3b4bb203dd1d526cc,lon Zakai <alonzakai@gmail.com>, 2016-01-21 20:40:36 -0800, , add missing binary opcodes,,
3998,7b043e38223b1e5d5673f87b704ef220a42525eb,lon Zakai <alonzakai@gmail.com>, 2016-01-21 20:40:17 -0800, , update auto updater,,
3999,89a89095b9bc170c62a210bc4531ad22587bce37,lon Zakai <alonzakai@gmail.com>, 2016-01-21 20:18:04 -0800, , remove sys.exit surely intended pushed,,
4000,41952a28f66f63c19520b445aa5ef30da7bf9efd,F Bastien <jfb@chromium.org>, 2016-01-20 17:53:29 -0800, , add help test,,
4001,4e7c814b4d37cbb1bffcb205f19ab2167ce6815d,lon Zakai <alonzakai@gmail.com>, 2016-01-20 17:04:25 -0800,129, merge pull request 129 webassembly binaryen shell command line use command line waterfall binaryen shell,,
4002,cda8084b61a1d9f67c4cdd201bad3e4138b942f2,lon Zakai <alonzakai@gmail.com>, 2016-01-20 16:54:25 -0800,130, merge pull request 130 webassembly wasm2asm command line wasm2asm use support command line.h,,
4003,1de108fcc050dc3f63a7674f5946e1e005c40d29,F Bastien <jfb@chromium.org>, 2016-01-20 16:45:33 -0800, , wasm2asm use support command line.h,,
4004,ccea1fb53442cccaa80945dc8f7a97264af673a5,F Bastien <jfb@chromium.org>, 2016-01-20 15:44:11 -0800, , use command line waterfall binaryen shell,,
4005,5f3c6cf04945591a2322238134172d7b68463b41,lon Zakai <alonzakai@gmail.com>, 2016-01-20 15:19:59 -0800,127, maplocals even local params 127,,
4006,8e44bc31fd60a51906123685976609fc2adf4382,lon Zakai <alonzakai@gmail.com>, 2016-01-20 15:05:08 -0800, , istring constructor name avoid memory copying,,
4007,f032a4a7b14fc8c60b1a07d44c38fdff573b3baa,F Bastien <github@jfbastien.com>, 2016-01-20 15:05:29 -0800, , fix command line help long short,,
4008,9f52fd46b6c6c961c8eeb9891e2a5c4f36fe09b2,lon Zakai <alonzakai@gmail.com>, 2016-01-20 15:04:04 -0800,126, merge pull request 126 webassembly jfbastien patch name support std string ctor,,
4009,f757481c15046d3fe68d96135401c34e883cb802,F Bastien <github@jfbastien.com>, 2016-01-20 14:55:53 -0800, , allow using memory,,
4010,db405e1b6cbe6be6a6bf5231340260d7fa53b5ee,F Bastien <github@jfbastien.com>, 2016-01-20 14:13:09 -0800, , name support std string ctor make code verbose,,
4011,b942d638054b4d17a228de483f2677a47087b6ed,F Bastien <github@jfbastien.com>, 2016-01-20 13:48:41 -0800, , fix format,,
4012,b970cc7bfcacd7e0d3dc145121cc7ba1c990fd44,lon Zakai <alonzakai@gmail.com>, 2016-01-20 13:31:51 -0800,125, clear global state function binary processing 125,,
4013,f7101c51ae61b52ba56e4240a649cb0a1582e990,lon Zakai <alonzakai@gmail.com>, 2016-01-20 12:12:09 -0800, , fix vanilla llvm workable locally,,
4014,13548a538ae581411841506884c28f1be223079c,lon Zakai <alonzakai@gmail.com>, 2016-01-20 12:11:24 -0800,123, fix switch default binary format 123,,
4015,daf75cc0649ad6e615de98afdc10154a14af8e9b,lon Zakai <alonzakai@gmail.com>, 2016-01-20 10:46:41 -0800, , fix non vanilla llvm testing wasm backend testcases,,
4016,64923a04cf9795482cc55264b75d1294c32a007d,lon Zakai <alonzakai@gmail.com>, 2016-01-20 10:35:49 -0800, , improve wasm2asm switch emitting add testcase,,
4017,960043a359046b1536c75aeca2f7092e15714d45,lon Zakai <alonzakai@gmail.com>, 2016-01-19 18:07:28 -0800, , fix maplocals binary format handling,,
4018,4fc14789140316a3636f3c43dc3f0a7ae00f87ae,lon Zakai <alonzakai@gmail.com>, 2016-01-19 16:44:54 -0800, , set llvm vanilla llvm remove later confuse normal emcc,,
4019,22ed7f49494e6ecf6c431b40ab6961953c2e3a8b,lon Zakai <alonzakai@gmail.com>, 2016-01-19 15:26:48 -0800,103, merge pull request 103 mbebenita static poly use llvm style static polymorphism ast visitor,,
4020,d3390ed43dbfb4834273b4296521f95b4d448654,lon Zakai <alonzakai@gmail.com>, 2016-01-19 11:11:41 -0800,119, merge pull request 119 jsstats mem offset flag memory access offset flag bit,,
4021,0b0fecfabcfabd3002a7cbfbe772adf6b2709382,lon Zakai <alonzakai@gmail.com>, 2016-01-18 19:37:21 -0800, , fix check.py recent movement code,,
4022,bc02d17a59a5fa6387cc399b919e3e144f4b3a99,F Bastien <github@jfbastien.com>, 2016-01-18 14:12:57 -0800,120, merge pull request 120 webassembly node detect whether vanilla emcc work,,
4023,239d2cff28354e32800a4272165b85340a40800c,F Bastien <jfb@chromium.org>, 2016-01-18 11:06:50 -0800, , strip rev removing newline,,
4024,adc13b1322830e5a8133fa4886ca7426b38ab424,F Bastien <jfb@chromium.org>, 2016-01-18 10:50:49 -0800, , detect whether vanilla emcc work run wasm_backend test doe,,
4025,25bf857873bd92e88327d7e6d6d09d8c6b35c182,F Bastien <jfb@chromium.org>, 2016-01-18 10:31:23 -0800, , update revision 2053 revision contains shared library version llvm much smaller,,
4026,c7e77be94e042768a6a3d20e1d5a55103f51cb59,F Bastien <jfb@chromium.org>, 2016-01-18 09:45:04 -0800, , merge branch master github.com webassembly binaryen,,
4027,7c08bb7983cb9cef688d674fe93d25e98be11c29,F Bastien <jfb@chromium.org>, 2016-01-18 09:44:50 -0800, , update waterfall,,
4028,cef2b2b2e3431d2735c30fae3796a8dceb614a8d,lon Zakai <alonzakai@gmail.com>, 2016-01-18 09:40:40 -0800,113, merge pull request 113 jsstats func sig order function section flag signature index,,
4029,0bfc82d51f2b781cd7640cee783c86a23845c5b9,lon Zakai <alonzakai@gmail.com>, 2016-01-17 19:33:14 -0800, , update readme,,
4030,8821914decb0b479847123b46489d23a59af6fa5,lon Zakai <alonzakai@gmail.com>, 2016-01-17 17:42:06 -0800,112, merge pull request 112 webassembly vanilla vanilla llvm testing,,
4031,9877cd7629d9346b6e4e4c74eeada7baa161c692,lon Zakai <alonzakai@gmail.com>, 2016-01-17 17:00:54 -0800, , back simpler method getting waterfall check.py refactor later shared api stabilizes,,
4032,f99d4a1f30dfd1892c88ca5d9cf38d21836280b4,F Bastien <jfb@chromium.org>, 2016-01-17 16:10:12 -0800, , improve update.py diagnostic,,
4033,1f21f5769429f81acfe0b6d316b27c743e000671,F Bastien <jfb@chromium.org>, 2016-01-17 16:06:08 -0800, , improve diagnostic download_tar,,
4034,0f21cd9beeb828b3b0206f308a63541f7823edb6,ouglas Crosher <info@jsstats.com>, 2016-01-18 11:02:15 +1100, , memory access offset flag bit,,
4035,705fe594cbabd272a99bfd626be00c2835c94141,F Bastien <jfb@chromium.org>, 2016-01-17 15:55:12 -0800, , fix remove call,,
4036,32228f3c5b9eec4c9ec8f575c3948efe7013c1d8,F Bastien <jfb@chromium.org>, 2016-01-17 14:33:04 -0800, , remove older tarfiles properly,,
4037,e96540b5bc824924b3ddefcce4b609781b0f22de,ouglas Crosher <info@jsstats.com>, 2016-01-16 10:44:23 +1100, , function section flag signature index,,
4038,a2acebabb40b09ae2d0c2dc3c49a2d445754fe61,F Bastien <jfb@chromium.org>, 2016-01-17 11:42:01 -0800, , fix untar usage,,
4039,eb9d676d358ce154d56aca5162e9f8f5c4d04ad6,lon Zakai <alonzakai@gmail.com>, 2016-01-17 10:40:14 -0800, , try untar base dir like full target dir,,
4040,e324eeb799d94645baa497731d82b46624494599,lon Zakai <alonzakai@gmail.com>, 2016-01-16 20:04:15 -0800, , improve clang checking reporting,,
4041,fa4cad6f178842d1901dbcd680dfe80dfde6853f,lon Zakai <alonzakai@gmail.com>, 2016-01-16 20:03:52 -0800, , update emscripten submodule,,
4042,8d2e027a90399020f20e15076f911ee27767da9a,lon Zakai <alonzakai@gmail.com>, 2016-01-16 19:46:07 -0800, , update waterfall build dir,,
4043,c2b77f33023d7946c8024cdc81428b4880c4b44c,lon Zakai <alonzakai@gmail.com>, 2016-01-16 19:36:41 -0800, , improve warning check.py,,
4044,1c4f49e8e94d888feceeac9e920386914c0fd1d5,lon Zakai <alonzakai@gmail.com>, 2016-01-16 16:28:26 -0800,117, refactor code use 117,,
4045,aaf927d137498ff131d546f1c0be42a8ae8e3c2d,lon Zakai <alonzakai@gmail.com>, 2016-01-16 10:55:55 -0800, , update emscripten submodule,,
4046,6f693f31c1e4f2f15ca5bb93ca426ca8c340f460,lon Zakai <alonzakai@gmail.com>, 2016-01-16 10:47:19 -0800, , need set env var emcc using vanilla llvm,,
4047,320df8eea98ceeb3aa2339de2bd06f3510f5ad67,lon Zakai <alonzakai@gmail.com>, 2016-01-16 10:33:57 -0800, , update emscripten submodule,,
4048,ed22b7970e6a63112337c8196820110b3ed78f59,lon Zakai <alonzakai@gmail.com>, 2016-01-15 20:29:37 -0800, , try install node travis,,
4049,3a51b0a4553b1d98ecec232593dc02d5db8e7259,lon Zakai <alonzakai@gmail.com>, 2016-01-15 20:20:56 -0800, , look node either nodejs node,,
4050,77fecceff0959987e08b7a387cc0400e48151b65,lon Zakai <alonzakai@gmail.com>, 2016-01-15 20:09:42 -0800, , use nodejs travis,,
4051,e70476124fb665ef7736de5e87a7aec44d9abb30,lon Zakai <alonzakai@gmail.com>, 2016-01-15 20:00:05 -0800, , add wasm.js build,,
4052,efc4500c917f0fdd1f01cfb416ff6d722b077a0c,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:54:28 -0800, , update emscripten submodule,,
4053,0f72c9053c64188ad8c5b0500f5fb8918f5b08af,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:49:42 -0800, , print content llvm env var,,
4054,4de7679d71fe4ed87bff14eebf5b1dcc9b0f76ec,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:47:45 -0800, , run vanilla emcc make sure set properly never run,,
4055,19fa7c8e14844f7a25c2ef143cb89464d639c8a9,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:45:55 -0800, , make sure a.wasm.js emitted backend test,,
4056,455eff4d01b5b9502ef66a220bacb58e77ed1fe0,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:45:10 -0800, , mention checking node,,
4057,3b4af6bab9b92c6639e56c0e3ad88afef0575517,lon Zakai <alonzakai@gmail.com>, 2016-01-15 19:39:58 -0800, , use wasm_backend env per new emscripten,,
4058,a42db3fff0cb64a8aff57c1a1d67d00ba04fb822,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:27:26 -0800, , update emscripten submodule,,
4059,268175dc4bbeeb682e015ff6330b08e1ddfb405c,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:22:10 -0800, , english grammar fix,,
4060,4da9d3c3a4494f588d174a6f988fd67bf6334ed2,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:21:31 -0800, , improve warning text,,
4061,f0199de2037543538441b2ea532f7329b6b8a6e0,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:20:43 -0800, , use waterfall llvm avoid warn,,
4062,106dad088baedf7847c4d2f4cfec9a3afd24032c,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:13:02 -0800, , improve check.py warning,,
4063,d0876f3fef94b59ae1bc3803c3c500529a846e56,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:12:27 -0800, , set llvm env var emcc find waterfall llvm build,,
4064,0284de4884e77a63eeb23fcde5174d173dab9101,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:08:39 -0800, , move wasm backend test use emcc emscripten submodule,,
4065,be4cc9edd28aa12fd70ca6c8145d02723dbeb16c,lon Zakai <alonzakai@gmail.com>, 2016-01-15 17:06:18 -0800, , update emscripten submodule,,
4066,0d9a88446723b5558ce0328e5fc6a8351c4ce457,lon Zakai <alonzakai@gmail.com>, 2016-01-15 14:35:22 -0800, , wip waterfall build fetching,,
4067,58be64a9b1f00d399383852a858df7e514d7b535,lon Zakai <alonzakai@gmail.com>, 2016-01-15 14:14:24 -0800, , print check.py warning end chance noticed,,
4068,2db4c1648bdf2f3382c8daba73665f50b18c6d9a,lon Zakai <alonzakai@gmail.com>, 2016-01-15 14:12:04 -0800, , add emscripten submodule vanilla branch,,
4069,c01ef410c9c3df8c12504f365e04190935ac2376,F Bastien <jfb@chromium.org>, 2016-01-17 11:28:58 -0800, , untar compare dir exist fix issue 112,,
4070,7ec2f95c5684dbdca9d443a56e14578b52c8466b,lon Zakai <alonzakai@gmail.com>, 2016-01-17 10:31:58 -0800, , use visitnop break value,,
4071,d59d14ffa46bcf9d061a6f3d1e941ac8a70d5bda,lon Zakai <alonzakai@gmail.com>, 2016-01-17 09:54:03 -0800,116, merge pull request 116 jsstats value break operation may value must encoding,,
4072,5cbf5020590d61a5d9dbfcc77d7eb7cc144694c7,F Bastien <jfb@chromium.org>, 2016-01-17 08:35:17 -0800, , update build 2026,,
4073,c45e278c53d44e823b7814a454f7bbb921f6cd8b,F Bastien <jfb@chromium.org>, 2016-01-17 08:34:52 -0800,112, allow updating specific build even downloaded content 112 add usage binary tarfile separate torture test,,
4074,0c78665777e244741bfe6e2ab30fedded96354bd,ouglas Crosher <info@jsstats.com>, 2016-01-16 12:32:34 +1100, , break operation may value must encoding,,
4075,74b3798652f65fbbbe94b9aac2cb4f0fb8ccea09,F Bastien <jfb@chromium.org>, 2016-01-16 20:08:36 -0800, , make untar api intuitive discussed 112,,
4076,7dd053aa3cc99e63b3be57514c28ac2b94932e2e,F Bastien <jfb@chromium.org>, 2016-01-16 19:25:22 -0800, , update build 2016,,
4077,307fa22e522d5ca82829a117bffa0060cddc72e2,lon Zakai <alonzakai@gmail.com>, 2016-01-16 16:18:04 -0800,117, merge pull request 117 webassembly factor support factor support code,,
4078,1fa790550e38043ba388e5e927821c1beabdfa2b,F Bastien <jfb@chromium.org>, 2016-01-16 13:54:50 -0800,112, factor support code patch 112 could use,,
4079,8e3dde6a4d2c861edc25df5f7d3d0e8b1eaac1e9,lon Zakai <alonzakai@gmail.com>, 2016-01-16 13:45:41 -0800, , improve abort unknown symbol,,
4080,7b52fbbbedafd46f7c74c304e2a41cabad1cf75b,lon Zakai <alonzakai@gmail.com>, 2016-01-15 20:49:10 -0800,114, merge pull request 114 webassembly disable offset folding disable importing offset folding test,,
4081,1021013aa7efdd6d071a8b053f87de846a6d30bd,ichael Bebenita <mbebenita@gmail.com>, 2016-01-15 18:39:44 -0800, , add unreachable macro default case,,
4082,8d7dba5d0ce1bc0bbd15c5fc453ccfdced99c491,an Gohman <sunfish@mozilla.com>, 2016-01-15 15:51:44 -0800, , disable importing offset folding test llvm test generated external global variable supported s2wasm,,
4083,1abc08f121413b671d3890065c63c479f6a39b82,lon Zakai <alonzakai@gmail.com>, 2016-01-15 10:07:07 -0800,106, merge pull request 106 webassembly jfbastien patch travis run asan tsan allow asan fail,,
4084,3d3d3ccd7214c09cf6c2fe96567557b7d9580dfb,F Bastien <github@jfbastien.com>, 2016-01-14 22:57:59 -0800, , travis run asan tsan allow asan fail,,
4085,5192fc38ca377939b4411f52e73e1a4bc3127d2d,lon Zakai <alonzakai@gmail.com>, 2016-01-14 17:50:26 -0800,104, merge pull request 104 webassembly torture torture,,
4086,30abeaa9e2151cd5d7b0ad730ee26eec12d69636,lon Zakai <alonzakai@gmail.com>, 2016-01-14 17:48:59 -0800,100, merge pull request 100 webassembly wasm dis wasm dis,,
4087,921c9d96698c9c515aa274eaeb42b8fd1c140abd,lon Zakai <alonzakai@gmail.com>, 2016-01-14 17:44:12 -0800, , improve loop,,
4088,38d8e5d627f1694586e84f475a4879336cad9623,ichael Bebenita <mbebenita@gmail.com>, 2016-01-14 17:21:29 -0800, , add default case gcc complain,,
4089,3f61f46ef2e660ad8001d2dd93218c1e830188c8,lon Zakai <alonzakai@gmail.com>, 2016-01-14 17:01:08 -0800, , fix type const value binary,,
4090,faca86f35240da34558006f29706f34b3da27ea2,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:50:57 -0800, , add missing type binary reading,,
4091,4c0f7e27bfff16daf610463c326f3a11b36d7e6e,ichael Bebenita <mbebenita@gmail.com>, 2016-01-14 16:44:42 -0800, , cleanup,,
4092,2c4a72b3148700d2a5175c6af5cbe3f9378b3dc1,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:42:38 -0800, , add expected output text binary text test,,
4093,280289a07e706691dae64ea8579da91b0ffa350f,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:21:31 -0800, , use std pow,,
4094,1b89d3b0dc0191db3fcaf2c5f5f8914eccfff35e,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:20:53 -0800, , add constant natural alignment binary format,,
4095,52fe6cabbbaa59cd50e95306bb1b6d357037fa50,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:17:41 -0800, , improve loop,,
4096,1897786b3643095ab3560afac6b8171885e5b6d2,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:16:55 -0800, , minor binary update following comment,,
4097,1e80630b009ecd5e63206353292fd63197ac9bdd,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:14:56 -0800, , comment,,
4098,831f8e982fdaa447950571b5e5cc5d179aa132cc,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:07:17 -0800, , update known failure,,
4099,0ec26a1ffa95bf1d2e4fa28dab7e188bdfaf599c,lon Zakai <alonzakai@gmail.com>, 2016-01-14 16:04:37 -0800, , add continues parser,,
4100,b03afb04b43d435f39fecd7b443e8323a3cdf80a,lon Zakai <alonzakai@gmail.com>, 2016-01-14 15:14:49 -0800, , check.py note,,
4101,68bf9868afae04d603810c862642c794e8eb998f,lon Zakai <alonzakai@gmail.com>, 2016-01-14 15:14:07 -0800, , add assert wasm segment,,
4102,99c8870d4220d180575cc645b46e54ed5947a745,lon Zakai <alonzakai@gmail.com>, 2016-01-14 14:53:52 -0800, , run shell s2wasm output list known failure,,
4103,14d497a1b60509af54619b4b36660ade48f3fe38,lon Zakai <alonzakai@gmail.com>, 2016-01-14 14:44:39 -0800, , prepare running binaryen s2wasm torture output,,
4104,e696560332211216d26e9396033b8ba50af0fa82,lon Zakai <alonzakai@gmail.com>, 2016-01-14 14:43:59 -0800, , entry option binaryen shell let call entry point also support exit,,
4105,4bcda1c61bf9d5138980db34b49a9ccf37d1fd09,lon Zakai <alonzakai@gmail.com>, 2016-01-14 14:08:28 -0800, , run s2wasm output torture test binaryen shell verify parse,,
4106,af146aa19fa7ebee5b7def5fdf3c61b225857be4,lon Zakai <alonzakai@gmail.com>, 2016-01-14 13:28:01 -0800, , enable binary format testing,,
4107,3c1b7750e9ba8e0c6205b305890d973948ff4fae,lon Zakai <alonzakai@gmail.com>, 2016-01-14 13:27:47 -0800, , fix leb128 bug,,
4108,b78c9900f8908fbd28689e1c254fa6a443050504,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:55:12 -0800, , add local assertion,,
4109,aa3b46f7fd0699aa5ae0df5f83eee6e067c0c532,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:52:47 -0800, , break switch fix,,
4110,db7285b8f8e1a536fdfee60103bafc4ecfe3ed1f,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:45:13 -0800, , break assert,,
4111,786e95242caa4343edc6781a5738ebfbe1df1592,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:39:22 -0800, , add location recursion debugging,,
4112,76db2f00068f732c6bee8346085c794d26061fc0,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:30:35 -0800, , fix binary writing callindirect,,
4113,666822e6cfaf53944e2eb2792dfe1b9c85446952,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:27:18 -0800, , fix binary writing brif,,
4114,9bf5aa7c0727e6e287f17fa89705a1af65c4fc87,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:23:36 -0800, , fix recursion debugging,,
4115,ded8b2557912c77322d20c6feb7fd170f8c0d220,lon Zakai <alonzakai@gmail.com>, 2016-01-14 11:17:28 -0800, , artisinal debugging,,
4116,d053ddfa70f5a2bccfd9ff997f98130088d84b98,lon Zakai <alonzakai@gmail.com>, 2016-01-14 10:44:12 -0800, , binary debugging,,
4117,1345f70a7d5c56196fb42ab9ae3cc1162c2c46bb,lon Zakai <alonzakai@gmail.com>, 2016-01-14 09:48:49 -0800, , fix call_import,,
4118,6431ed05813b76d583a7ca98bf193c66c834b993,F Bastien <jfb@chromium.org>, 2016-01-13 21:28:02 -0800, , update.py lkgr everything green,,
4119,0bfe85636f9068819387edcad5d39d33af65f491,lon Zakai <alonzakai@gmail.com>, 2016-01-13 21:01:34 -0800, , fix function size offsetting,,
4120,d4f713522f1580b6f2aa7a0716c8ec8df7b48275,lon Zakai <alonzakai@gmail.com>, 2016-01-13 21:00:32 -0800, , binary fix,,
4121,12bef76986cb6c3b915d811640581faab4977b05,lon Zakai <alonzakai@gmail.com>, 2016-01-13 20:52:33 -0800, , fix local binary format,,
4122,6bc27c2f165bc9f409165eed8c831c47359acc48,lon Zakai <alonzakai@gmail.com>, 2016-01-13 20:48:04 -0800, , fix binary skipping bug,,
4123,8e629f9cd68966cf531e1d7789c38543b74a3c3f,lon Zakai <alonzakai@gmail.com>, 2016-01-13 20:28:04 -0800, , fix buffer writing bug,,
4124,e165020f87f807179d27203195843c88fb8afe55,ichael Bebenita <mbebenita@gmail.com>, 2016-01-13 20:13:04 -0800, , use llvm style static polymorphism wasmvisitors,,
4125,7e3bdd00f9b390c36461291fa5b884ace55e82d6,ichael Bebenita <mbebenita@gmail.com>, 2016-01-11 20:51:27 -0800, , generic compiler pas system,,
4126,ab3b76b29488ca8f85c39491c5ac96d6274fac7c,lon Zakai <alonzakai@gmail.com>, 2016-01-13 20:05:02 -0800,102, merge pull request 102 webassembly clobber avoid potential setjmp clobber,,
4127,01455820d430120c694dbc9978ed4dc8192185e0,F Bastien <jfb@chromium.org>, 2016-01-13 18:55:57 -0800, , avoid potential setjmp clobber wextra add check potential clobber triggered binaryen shell.cpp might clobbered longjmpâ vforkâ werror clobbered fix move setjmp longjmp using code another function pass potentially clobbered value parent frame clobbered could also mark volatile big hammer,,
4128,477e456f1ac5e7572f280993bd6eda9b4c7b0db5,lon Zakai <alonzakai@gmail.com>, 2016-01-13 18:29:21 -0800, , debugging,,
4129,503e6779973e95417de1729c726e1fbedd291947,lon Zakai <alonzakai@gmail.com>, 2016-01-13 18:24:06 -0800, , function must parsed target known,,
4130,77c55b36cf5cc4b72d62e24b69ca7de61b671328,lon Zakai <alonzakai@gmail.com>, 2016-01-13 18:05:52 -0800,101, merge pull request 101 webassembly jfbastien patch travis check style update.py,,
4131,cca4d2b10054906d1603c6a4b7fba91bd495fb50,lon Zakai <alonzakai@gmail.com>, 2016-01-13 18:02:37 -0800, , testing prep,,
4132,3334c090c73f861a1b94145dd6105255d7d21a6b,lon Zakai <alonzakai@gmail.com>, 2016-01-13 18:02:03 -0800, , add call assert debugging,,
4133,3c6a18dae8e1efc115c3ddaf663ee0fbdeea4536,F Bastien <github@jfbastien.com>, 2016-01-13 16:58:06 -0800, , travis check style update.py see flake8 doc http pypi.python.org pypi flake8 pep8 http latest exclusion specified setup.cfg currently ignore space convention use space,,
4134,4f559956ed0082347002ac257f7eda93c78dbaad,lon Zakai <alonzakai@gmail.com>, 2016-01-13 17:46:35 -0800, , fix maybevisit logic,,
4135,9d54e79c390713e8103e1244e8e8a1d9f8445a3d,lon Zakai <alonzakai@gmail.com>, 2016-01-13 17:42:34 -0800, , use unsigned type wasm binary.h,,
4136,91e8b41c32d050408948995f7560e9a1a9b1f7bc,lon Zakai <alonzakai@gmail.com>, 2016-01-13 17:07:32 -0800, , debugging,,
4137,fea7841e9e5f5a04c341303ccbe33d2dfcc120b4,lon Zakai <alonzakai@gmail.com>, 2016-01-13 16:49:02 -0800, , avoid char casting bug wasm binary,,
4138,1466e072717f6516eae1885296ace1d7acb38f2f,F Bastien <github@jfbastien.com>, 2016-01-13 16:32:39 -0800, , flake8 also ignore e114,,
4139,fa00663d82ea1f641368a4d10327c102805e4bde,lon Zakai <alonzakai@gmail.com>, 2016-01-13 16:28:30 -0800, , fix leb128 bug,,
4140,1f608d0138162db54a3727c6de3c0ebc9cf6120f,lon Zakai <alonzakai@gmail.com>, 2016-01-13 16:28:19 -0800, , add debugging wasm binary.h,,
4141,4b47bb5d717ca9afdd12c13767f5b716d4d9f25a,lon Zakai <alonzakai@gmail.com>, 2016-01-13 11:56:12 -0800, , prepare wasm dis testing,,
4142,8bf0cb2d0661fb49e7ceb93c4518f13a5a6065d5,lon Zakai <alonzakai@gmail.com>, 2016-01-12 13:47:22 -0800, , initial work wasm dis,,
4143,4937306bfaa78ed030f4805cdba58b8887528f59,lon Zakai <alonzakai@gmail.com>, 2016-01-13 15:34:55 -0800, , avoid unportable size wasm.h,,
4144,11569ac8ad89517afc1601e07674109fd2bdad53,F Bastien <github@jfbastien.com>, 2016-01-13 15:08:25 -0800, , update.py fix argparse force latest,,
4145,a21fb164cd00e7683661c6dbd343f34cc973333e,lon Zakai <alonzakai@gmail.com>, 2016-01-13 15:04:33 -0800,99, merge pull request webassembly update torture update torture test,,
4146,8ae75a62d0974273a6ece5e3fb1b72f58c85224f,lon Zakai <alonzakai@gmail.com>, 2016-01-13 15:02:09 -0800, , update waterfall,,
4147,7e3efaec50e59ebe1e267f50328a88d639d08947,F Bastien <jfb@chromium.org>, 2016-01-13 15:01:47 -0800, , update torture test,,
4148,2a6045447873a92ccb7dfbb6cb7546b715c5dcd5,lon Zakai <alonzakai@gmail.com>, 2016-01-13 14:56:53 -0800, , function parsing change s2wasm due upstream llvm,,
4149,9a3a2cb975ab171c4f23c5bf5e938db940c707d4,F Bastien <jfb@chromium.org>, 2016-01-13 13:59:28 -0800, , update.py support json output updating waterfall separately,,
4150,80d0b8eb31b1bb15ecd2245ef6ad57ca4d3a2575,F Bastien <jfb@chromium.org>, 2016-01-13 10:48:44 -0800, , merge branch master github.com webassembly binaryen,,
4151,2a0404579a2c061a965e2ac032801e250ab7f2bc,F Bastien <jfb@chromium.org>, 2016-01-13 10:48:29 -0800, , check python indentation,,
4152,3da40ef949ddfac78df2db33e6b35e14f54cb78c,lon Zakai <alonzakai@gmail.com>, 2016-01-13 10:04:49 -0800, , update spec test submodule,,
4153,c54dadc397030412b566bfa1e1d80eb65be0aa23,lon Zakai <alonzakai@gmail.com>, 2016-01-12 13:23:54 -0800,98, merge pull request webassembly wasm as_testing wasm testing,,
4154,7daceb70fd2b97751d47fa9b792a0ba7bb846284,lon Zakai <alonzakai@gmail.com>, 2016-01-12 13:23:04 -0800, , default torture test,,
4155,c7c035b043902f3b4847b1f6ee390f0fa8d70b38,lon Zakai <alonzakai@gmail.com>, 2016-01-12 12:06:13 -0800, , disable torture test current known breakage,,
4156,783eea2fff10a315b728c952ef78293c7957390a,lon Zakai <alonzakai@gmail.com>, 2016-01-12 12:01:16 -0800, , avoid unit.wast wasm f32.demote f64 binary format currently,,
4157,860d56e5c724d32ce8cc890ff97a02dbdf379259,lon Zakai <alonzakai@gmail.com>, 2016-01-12 11:56:12 -0800, , implement br_if wasm,,
4158,e404e460b93eb8aee8995827dfbe29840315a572,lon Zakai <alonzakai@gmail.com>, 2016-01-12 11:53:45 -0800, , implement switch wasm,,
4159,944b56ad5d6a0f0df040cac684109a5e3f50f653,lon Zakai <alonzakai@gmail.com>, 2016-01-12 11:40:42 -0800, , fix macro wasm,,
4160,84211500dbf6860d745a3f0a251cdd169896deac,lon Zakai <alonzakai@gmail.com>, 2016-01-12 11:36:19 -0800, , test wasm doe crash binarifying testcases,,
4161,2e5363210f7ef4861bf734e89fef96176b4157bc,lon Zakai <alonzakai@gmail.com>, 2016-01-12 11:24:34 -0800, , ensure function type function wasm binary format requires,,
4162,3cb2281ac161edb08a2fd79cd66302caa330d583,an Gohman <sunfish@mozilla.com>, 2016-01-12 11:20:59 -0800,97, merge pull request webassembly depth update test upstream change,,
4163,c5913b6ab62bb2a638981344b9e10d8765f6c357,lon Zakai <alonzakai@gmail.com>, 2016-01-12 10:54:17 -0800, , add option run check without torture,,
4164,e3e589f54b426ec057fdc1079b85a7b535b17206,an Gohman <sunfish@mozilla.com>, 2016-01-12 10:41:06 -0800, , update memops.s new label syntax,,
4165,cca18b7e44c91334462ef6386ed2ae0b25bf72b0,an Gohman <sunfish@mozilla.com>, 2016-01-12 10:28:53 -0800, , update basic.s new label syntax,,
4166,b4c6e2bfb11dbdec9e801f36cecd860d5270eed5,lon Zakai <alonzakai@gmail.com>, 2016-01-12 10:17:24 -0800,97, update s2wasm new block loop format file llvm,,
4167,dad2bf5e5ffe3cfc3557d11a8310e4218123ea3d,an Gohman <sunfish@mozilla.com>, 2016-01-11 22:01:02 -0800, , update test upstream change update test following change http d16105,,
4168,686a8334090f57e1ba218e552819b3c6374059b5,lon Zakai <alonzakai@gmail.com>, 2016-01-11 20:40:55 -0800, , refactor functiontype always accessed module central store necessary simple binary writing,,
4169,efe369358fd6c8ede5145f12bfa511b515d2a32a,lon Zakai <alonzakai@gmail.com>, 2016-01-11 23:08:00 -0500,13, merge pull request webassembly wasm finish initial pas wasm binary add wasm tool,,
4170,f816012ca318555b1cac6d822fe8abad275c2864,lon Zakai <alonzakai@gmail.com>, 2016-01-11 17:10:40 -0800,13, finish initial pas wasm binary add wasm tool,,
4171,0aec75b1d1f38b262da4e6f8454d259401a203d9,lon Zakai <alonzakai@gmail.com>, 2016-01-11 20:57:15 -0500,94, merge pull request webassembly update 4cato update include function change llvm,,
4172,e982e93d68671443214dd91b4aefc6fe5992ac6b,lon Zakai <alonzakai@gmail.com>, 2016-01-11 20:56:20 -0500,93, merge pull request webassembly asm2wasm use command line asm2wasm use support command line,,
4173,e59b572bf59f2e2b07ca5f2262a1fdc8a5ef124d,F Bastien <jfb@chromium.org>, 2016-01-11 17:38:45 -0800, , update include function change llvm,,
4174,e821979eb433ee0cefed786d46c870caec7a6234,F Bastien <github@jfbastien.com>, 2016-01-11 17:28:38 -0800, , shush travis want email like stop emailing,,
4175,1b3600b0aca6a8f23b6d9e8ae33dcd75c9493810,F Bastien <jfb@chromium.org>, 2016-01-11 17:23:27 -0800, , asm2wasm use support command line,,
4176,500e88b8ed4f94f9f2a9aec04128a0aed2eb3b78,lon Zakai <alonzakai@gmail.com>, 2016-01-11 16:15:29 -0800,13, emit data segment binary,,
4177,c64a73ae12fdbc39176c8d94ffaa21840606e516,lon Zakai <alonzakai@gmail.com>, 2016-01-11 16:08:24 -0800,13, implement leb128 writing binary format support,,
4178,4037b2886731c2ff6f6d18da3cb03c89f5f974e0,lon Zakai <alonzakai@gmail.com>, 2016-01-11 14:25:11 -0800, , update build.sh,,
4179,91becc1a6cfa3c57eb6d2cb5f3c42f312d65f8b2,an Gohman <sunfish@mozilla.com>, 2016-01-11 15:42:48 -0800,92, merge pull request webassembly function update test upstream change,,
4180,20f01a9f8277111b69f3d916ec2e066f1f996c7d,lon Zakai <alonzakai@gmail.com>, 2016-01-11 15:19:26 -0800, , update userstack test output,,
4181,a54e90879958c3f89a74c15160cf10b2276a54ab,lon Zakai <alonzakai@gmail.com>, 2016-01-11 15:19:14 -0800, , ignore function,,
4182,91a244f733b7db2c7779b215b5d0748ae43bae1b,an Gohman <sunfish@mozilla.com>, 2016-01-11 15:01:21 -0800, , add function suffix hand written test,,
4183,cb9700ce0513cf0dd3dfac58f3d16a1e06c7cc6f,an Gohman <sunfish@mozilla.com>, 2016-01-11 14:51:48 -0800, , update test upstream change change include function symbol kind .skip instead .zero test,,
4184,4e98f922cb2d727a319f62d32e51afabb2e46d24,lon Zakai <alonzakai@gmail.com>, 2016-01-11 17:16:57 -0500,91, merge pull request webassembly sanitizers add travis build sanitizers,,
4185,873e5b0500a3edb07a09ed285ba8421be375cd25,F Bastien <jfb@chromium.org>, 2016-01-11 11:32:25 -0800, , check negative overflow,,
4186,eb0444e0870052b8ea8021eb50563a9f4d957486,F Bastien <jfb@chromium.org>, 2016-01-10 19:56:36 -0800, , safe integer assert converting double integer,,
4187,16ed70cb09569b881b6416955000fa7902119264,F Bastien <jfb@chromium.org>, 2016-01-10 19:51:50 -0800, , asm2wasmbuilder allow building int32,,
4188,e3c38c14e7dd9c115da960daafd109d2687f1a08,F Bastien <jfb@chromium.org>, 2016-01-10 10:49:59 -0800, , add travis build sanitizers trigger independent build test run clang sanitizer clang sanitizer clang address sanitizer disabled clang thread sanitizer disabled gcc enabling ubsan led change fix bunch undefined behavior throughout code base fix test relied undefined behavior make test easier debug printing command line add ubsan blacklist work around libstdc bug example testcase also need sanitizer libsupport.a,,
4189,75a562190a9f4588c8ffb19b8304f76c15a850c6,lon Zakai <alonzakai@gmail.com>, 2016-01-10 13:19:54 -0500,90, merge pull request webassembly travis travis change,,
4190,60c26fcb2bfec74b0a8d0bf13cedd1014d81db17,F Bastien <jfb@chromium.org>, 2016-01-10 09:59:07 -0800, , travis change initialize git submodules index sure initialized right move export before_script print compiler version invoke check directly shebang permission take care remove sleep warning slows travis,,
4191,f637ed52c79a04b60806cf0e031847a4d7da7ff6,lon Zakai <alonzakai@gmail.com>, 2016-01-09 20:40:10 -0500,89, merge pull request webassembly travis start add testing travis,,
4192,dbc1be8a3b029513c643387ccaa8caf940477a26,lon Zakai <alonzakai@gmail.com>, 2016-01-09 17:22:05 -0800, , start add testing travis,,
4193,5ad3dfa6447685a3b436140780721d21db6d5a51,lon Zakai <alonzakai@gmail.com>, 2016-01-09 17:31:30 -0800, , use cxx example testcases defined,,
4194,88fed02162ac940fdd1cfdec236e6ec44441d370,F Bastien <github@jfbastien.com>, 2016-01-09 16:53:28 -0800,88, merge pull request webassembly travis add basic travis build,,
4195,e878d88f7febd35e2711a19dd8796a68249dbcb1,F Bastien <jfb@chromium.org>, 2016-01-09 15:44:16 -0800, , add basic travis build setup test yet first want get basic working properly,,
4196,e385996f5a2bba427bbda7437e160e25a83fd076,F Bastien <jfb@chromium.org>, 2016-01-09 14:28:59 -0800, , update test waterfall fix make testing faster failure,,
4197,c32dc275c594f83e652d419a1452b65a3b628779,lon Zakai <alonzakai@gmail.com>, 2016-01-09 10:07:43 -0800, , use simplify local default,,
4198,c6cefdac99c511bdd05b68f8e2b53a0edb7ff815,lon Zakai <alonzakai@gmail.com>, 2016-01-09 10:06:24 -0800, , start work simplifylocals,,
4199,cbd9d53ac1e034c315993d88c1572c900389e670,lon Zakai <alonzakai@gmail.com>, 2016-01-08 17:07:06 -0800, , add test,,
4200,487058c8e0d8449596ea6117ad4b4190956f90ba,lon Zakai <alonzakai@gmail.com>, 2016-01-08 17:05:32 -0800, , add option shell run default optimization pass,,
4201,0b7c518f556857fd0ac02d95b463e37d48ab486b,F Bastien <github@jfbastien.com>, 2016-01-08 16:30:52 -0800,87, merge pull request webassembly lkgr allow force updating latest waterfall hash,,
4202,d390f154a8e769621ab2a239e61f9d0c4c034dc4,F Bastien <jfb@chromium.org>, 2016-01-08 16:11:42 -0800, , allow force updating latest waterfall hash allow overriding hash,,
4203,02910f3defc1be94ee1d4af6d43ec05b1c37d18d,lon Zakai <alonzakai@gmail.com>, 2016-01-08 15:11:34 -0800, , remove code block break,,
4204,382ea607d99c73a6e893f4f92b0b63bde698e487,lon Zakai <alonzakai@gmail.com>, 2016-01-08 15:05:46 -0800, , improve removeunusedbrs unify else one outside,,
4205,a695f82586d452dfc7ba51c18a5b76aa0cd8fb22,lon Zakai <alonzakai@gmail.com>, 2016-01-08 14:51:52 -0800, , add testcase,,
4206,ff29d891b7b58376712a48152b0a1406b08d5fd7,lon Zakai <alonzakai@gmail.com>, 2016-01-08 14:47:37 -0800, , update waterfall,,
4207,3a5cd7dc0360d1b12a0558758fa587f0268122b8,F Bastien <jfb@chromium.org>, 2016-01-08 12:54:09 -0800, , use waterfall instead experimental repo moved,,
4208,6e5eb6bf9c9450428b418e65167e488416dbc9ec,F Bastien <jfb@chromium.org>, 2016-01-08 12:49:28 -0800, , s2wasm torture test delete output dir done,,
4209,631c527e2eda16819d4c24b19e2b5b8a3f075336,F Bastien <github@jfbastien.com>, 2016-01-08 12:46:48 -0800, , pr24716 failing sexpr wasm s2wasm,,
4210,48a4607463cbff966a0212b2bcc25f8707b9a8c6,lon Zakai <alonzakai@gmail.com>, 2016-01-08 15:03:24 -0500,86, merge pull request webassembly jfbastien patch s2wasm create output file successful,,
4211,b2760f93e66c628f58d92484bb2885713bb9877c,F Bastien <github@jfbastien.com>, 2016-01-08 11:28:24 -0800, , s2wasm create output file successful previously file created empty s2wasm failed caused sexpr wasm sad tried use empty file,,
4212,ae2a84670ff06f2d06df01a0e384f6944f1ad939,F Bastien <github@jfbastien.com>, 2016-01-08 10:09:26 -0800, , undo todo waterfall seems borked,,
4213,3c0cf0b29b8cb468469844e7d1bb38e311b6692d,lon Zakai <alonzakai@gmail.com>, 2016-01-08 09:58:17 -0800, , simplify print output pass test,,
4214,f4958962bce2035f9de1ca409672607e68e4b5a3,lon Zakai <alonzakai@gmail.com>, 2016-01-08 09:46:46 -0800, , optimize if_else removeunusedbrs,,
4215,2dc5714c7b80d4d53dbebae2dd851d4b056266ab,F Bastien <github@jfbastien.com>, 2016-01-08 07:36:25 -0800, , temporarily mark test passing even,,
4216,05383c0dc2e0f45a82bbd655d7148047e1ca8c55,lon Zakai <alonzakai@gmail.com>, 2016-01-07 16:22:56 -0800, , updat experimental submodule,,
4217,d0863fa49acc642353c99aa9c46a1aacc4be57d0,lon Zakai <alonzakai@gmail.com>, 2016-01-07 16:22:46 -0800,84, optimize removeunusedbrs handle value,,
4218,5110e2adc9351c7df283419041c154bf79eaddc7,lon Zakai <alonzakai@gmail.com>, 2016-01-07 18:29:36 -0500,83, merge pull request webassembly skip handle .skip,,
4219,e7aebfe111b6a854fc12131e8d790b90378c08c5,F Bastien <jfb@chromium.org>, 2016-01-07 15:27:16 -0800, , handle .skip llvm generate,,
4220,85eec55eda839bf691dc88e122e90968d8b485c4,lon Zakai <alonzakai@gmail.com>, 2016-01-07 15:10:39 -0800, , handle .zero,,
4221,7d69ee4af775c4cd48e509c66330fa8ceecf4a24,lon Zakai <alonzakai@gmail.com>, 2016-01-07 14:09:12 -0800, , merge branch private label name conflict test cfg stackify.wast test switch.wast,,
4222,2faeb4e6608807455e6411e02c48ef5c03bae654,lon Zakai <alonzakai@gmail.com>, 2016-01-07 12:32:32 -0800,70, fix default switch,,
4223,6c4c158537c3ad0b8819312c8a6c737df1cdfdc6,an Gohman <sunfish@mozilla.com>, 2016-01-07 11:07:20 -0800, , llvm emitting private label prefix update binaryen prefix convention admittedly prettiest convention possible widely used elf ecosystem,,
4224,0c7e5beba6a1e2f5a6f23d20acc4cdce72f29f20,lon Zakai <alonzakai@gmail.com>, 2016-01-06 22:52:13 -0500,78, merge pull request webassembly update needed update.py update needed,,
4225,d73b0be51bc1d64c0fcb6a992927ace75876abde,F Bastien <jfb@chromium.org>, 2016-01-06 19:32:56 -0800, , update.py update needed kripken asked test lkgr could updated downloaded content different patch doe,,
4226,d8c94b6ad4094b580f4a788de3733b5433ca4c2a,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:35:16 -0800, , fix switch parsing semantics table,,
4227,750cb1029cea2dfe5ae98ac4aa9fa47e522228e0,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:30:02 -0800,70, update switch output,,
4228,88b14beb1009e81bbaf1144806c36fdee11846e1,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:29:41 -0800, , update,,
4229,3c32e7144c787fdba4953d98d9eb997abf407306,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:27:05 -0800,70, fix switch case printing,,
4230,8ae085fb1f79d6a72d234c5d33704f6106fe6f4b,an Gohman <sunfish@mozilla.com>, 2016-01-06 16:20:12 -0800,74, merge pull request webassembly replace experimental prototype wasmate test test,,
4231,10d9c8223360714918808aeafa24308039c1518b,an Gohman <sunfish@mozilla.com>, 2016-01-06 13:34:59 -0800, , remove .wast file test currently blacklisted removed,,
4232,f754b307a6cc55fa882a90bb66bfa5576bff6a27,an Gohman <sunfish@mozilla.com>, 2016-01-06 13:32:22 -0800, , print nan literal nan ... rather nan ... match spec,,
4233,f2cd4b8f141de2b71bbeeef06783b4d53f817f2f,an Gohman <sunfish@mozilla.com>, 2016-01-06 13:30:07 -0800, , remove .wast file live,,
4234,b0abc686c4dae518f1ff7b1d71e5710eb36ae61e,an Gohman <sunfish@mozilla.com>, 2016-01-06 13:23:13 -0800, , run binaryen shell dot_s test .wast file,,
4235,bde95949f89e8f288ed0a9a8356460f9e3bbbbbf,an Gohman <sunfish@mozilla.com>, 2016-01-06 12:52:09 -0800, , replace experimental prototype wasmate test test use test instead,,
4236,176a955c63f7891f00c1f29e33079dc3d77539da,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:15:10 -0800, , merge branch section visibilties,,
4237,3cfb90c2acac907dfbf9db7ad0940a06183dcda4,lon Zakai <alonzakai@gmail.com>, 2016-01-06 16:14:26 -0800, , handle ignore visibility s2wasm,,
4238,9053bd501b9e69c044410900fdeac25bd38b078e,lon Zakai <alonzakai@gmail.com>, 2016-01-06 15:50:41 -0800,77, get proper full type including result indirect call type,,
4239,fe7f311a4365ac5740ba89fdfaea706ddd2c8b7a,F Bastien <github@jfbastien.com>, 2016-01-06 15:32:47 -0800,75, merge pull request webassembly commit torture commit torture file,,
4240,d7632fc6d76289ab2d66f54cb8eb87049b743818,F Bastien <jfb@chromium.org>, 2016-01-06 15:32:35 -0800, , add test torture,,
4241,1deb9c22d62c853ae3701fdae0e605436c9ed648,an Gohman <sunfish@mozilla.com>, 2016-01-06 14:06:17 -0800, , add test assembler construct llvm may use soon add test kind assembly construct produced ffunction section fdata section fvisibility hidden fvisibility protected fvisibility internal,,
4242,004bb9433e8e6143968530f9f0f60102aa5f7715,F Bastien <jfb@chromium.org>, 2016-01-06 13:57:59 -0800, , commit torture file update.py used download folder .gitignore hid checked instead test lkgr identify version llvm built,,
4243,acfb322187321f69b8f3cf71009c423ab594e200,lon Zakai <alonzakai@gmail.com>, 2016-01-06 13:12:34 -0800,71, print infinity properly,,
4244,200a93c606b72b9694b69e2ec0bafe43153ddcf5,lon Zakai <alonzakai@gmail.com>, 2016-01-06 12:58:16 -0800,72, fix type neg s2wasm,,
4245,2b46381bf4fcf8c00b15f7b1b6fd2a261908dcf4,lon Zakai <alonzakai@gmail.com>, 2016-01-06 12:51:31 -0800,73, fix missing slash reinterpret,,
4246,ea5e4f70785f3a8f3039e1d59ba4378caa665ed0,lon Zakai <alonzakai@gmail.com>, 2016-01-06 14:34:25 -0500,69, merge pull request webassembly import wasmate test import wasmate test,,
4247,b376986e36c7ba9bb85bb558be54842280633877,lon Zakai <alonzakai@gmail.com>, 2016-01-06 11:25:46 -0800,68, set function type import s2wasm,,
4248,9099f5020db191e0189f5b7b9784f721fcc4d29f,an Gohman <sunfish@mozilla.com>, 2016-01-06 11:10:43 -0800, , check llvm s.py script used generate test,,
4249,05c0f27ec6e36de1bd137343d236ac69a42518d5,an Gohman <sunfish@mozilla.com>, 2016-01-06 10:53:48 -0800, , initial auto generate test llvm test,,
4250,c1ad16b5426ab621c380433dca815355e000fb9f,an Gohman <sunfish@mozilla.com>, 2016-01-06 08:44:03 -0800, , import hand written test prototype wasmate,,
4251,da223dd8af711c47554dddce0727fe927a769a17,lon Zakai <alonzakai@gmail.com>, 2016-01-06 13:34:59 -0500,66, merge pull request webassembly offset align s2wasm load store swap offset align params,,
4252,c00f9d8e54bdbfccdc86f7cb0546f92db764f48a,F Bastien <jfb@chromium.org>, 2016-01-06 08:37:30 -0800,17, s2wasm load store swap offset align params probably commutable human remember order read write thing pushback really matter fix bikeshed github require associated fix sexpr wasm gcc torture test failure list ref http github.com webassembly sexpr wasm prototype issue ref http github.com webassembly spec pull 205,,
4253,4d772e54ad5711dd5ee690daeb3813c06fb98c30,lon Zakai <alonzakai@gmail.com>, 2016-01-05 16:42:27 -0800, , update experimental submodule,,
4254,68a09177f896484be3796dcaa611f4ef743bf879,lon Zakai <alonzakai@gmail.com>, 2016-01-05 16:42:18 -0800, , make build.sh use cmake much possible,,
4255,77ed10771007a2d3a9b69f29741711341cc57d82,lon Zakai <alonzakai@gmail.com>, 2016-01-05 19:38:50 -0500,65, merge pull request mbebenita fix build fix build.sh script,,
4256,be04d8bfca5ca3a84d4497c689fdf00f028c4dff,ichael Bebenita <mbebenita@gmail.com>, 2016-01-05 16:31:50 -0800, , fix build.sh script,,
4257,72668529806f67c2bc719f9a21071cdcdebe98a4,lon Zakai <alonzakai@gmail.com>, 2016-01-05 16:02:41 -0800, , fix return handling parser,,
4258,644ef3072d389b9097e3a2709af5c40811e95839,lon Zakai <alonzakai@gmail.com>, 2016-01-05 11:40:31 -0800, , fix parsing error parser function block content,,
4259,8452a0b54562590e568b5f86fe35c0fb4001a78c,lon Zakai <alonzakai@gmail.com>, 2016-01-05 10:57:41 -0800,32, mergeblocks,,
4260,6c3b37355c7e24a763e0f6e65829391f5fe29b42,lon Zakai <alonzakai@gmail.com>, 2016-01-05 10:24:47 -0800,32, removeunusedbrs,,
4261,618c1737be20acd60a2653dfd0d65bfed5990480,lon Zakai <alonzakai@gmail.com>, 2016-01-05 10:08:03 -0800,32, print toplevel block function need one,,
4262,4c9e463f2c2012f72d701d96f62f1c4e03a27595,lon Zakai <alonzakai@gmail.com>, 2016-01-05 09:54:43 -0800, , fix,,
4263,680fdff9b7bad8653548fb4145c983ded41d466a,lon Zakai <alonzakai@gmail.com>, 2016-01-05 09:54:35 -0800, , update experimental submodule,,
4264,ee448c9d83abc710f567c389f53afc4bc6b3b5e3,lon Zakai <alonzakai@gmail.com>, 2016-01-04 17:39:52 -0800, , update build.sh,,
4265,44e07a9ba2c53dfae94b41f9c24acd0d57b4d6bf,lon Zakai <alonzakai@gmail.com>, 2016-01-04 20:35:58 -0500,64, merge pull request webassembly color disable disable color outputting file,,
4266,aea8cbf812299d85567daf9eaeca4543ede43192,lon Zakai <alonzakai@gmail.com>, 2016-01-04 20:35:00 -0500,63, merge pull request webassembly support file move file input output support,,
4267,4abf3e03f772348e193f00219da8b2f0baa454ee,lon Zakai <alonzakai@gmail.com>, 2016-01-04 17:24:51 -0800, , run asm2wasm,,
4268,908539ab1f4cc54a9511f076ae670457533806a4,F Bastien <jfb@chromium.org>, 2016-01-04 17:22:58 -0800, , disable color outputting file allow tool consume output,,
4269,15043f71f901882203cbaf0d98a6e325ed97f56a,lon Zakai <alonzakai@gmail.com>, 2016-01-04 17:16:22 -0800, , add pas,,
4270,3f4b5c1a4286ced0f1ffab14226246fe8b83b89e,F Bastien <jfb@chromium.org>, 2016-01-04 17:11:16 -0800, , move file input output support,,
4271,c6d08d97c196e2ceae5e3b960befcd6c66916cad,lon Zakai <alonzakai@gmail.com>, 2016-01-04 14:27:46 -0800,60, parse loop asm2wasm,,
4272,5e82fc26d6bb0cec8863156e052250a4e441595c,F Bastien <jfb@chromium.org>, 2016-01-04 13:03:12 -0800, , update test experimental,,
4273,c7e7a9215e4c833653549b806a29b02399320bd6,F Bastien <jfb@chromium.org>, 2016-01-04 12:43:29 -0800, , test s2wasm using buildbot last known good file,,
4274,1f8e4a4da473f6a76e48c3ffb6f0aec2d3c1b5a3,lon Zakai <alonzakai@gmail.com>, 2016-01-04 11:30:06 -0800, , add test s2wasm option,,
4275,9a92d6fd774221d66f5d6fdab17b517180535a6b,F Bastien <jfb@chromium.org>, 2016-01-04 11:30:07 -0800, , fix one option parsing,,
4276,f9fba61d0ad055a57db2b13d8b7672a36db16b9a,F Bastien <github@jfbastien.com>, 2016-01-04 11:24:51 -0800,61, merge pull request webassembly jfbastien patch readme mention update.py,,
4277,95f3e51691d865a0429bd579cce4918dfe27aef1,F Bastien <github@jfbastien.com>, 2016-01-04 11:24:45 -0800, , typo,,
4278,a9b0fd332b67d1aaff723a3d57b52f39be80dece,F Bastien <github@jfbastien.com>, 2016-01-04 11:19:15 -0800, , readme mention update.py,,
4279,816deb062f33d6396e1bcd4eecb57634d2abd381,lon Zakai <alonzakai@gmail.com>, 2016-01-04 14:06:40 -0500,57, merge pull request webassembly update.py create update.py,,
4280,666d84802c36550f586e4849fbb68386eb3558d0,lon Zakai <alonzakai@gmail.com>, 2016-01-04 13:50:45 -0500,56, merge pull request webassembly fix check.py license fix check.py license,,
4281,7e6e3c78074101931bca83d9f7383fde55d6f380,F Bastien <github@jfbastien.com>, 2016-01-04 10:46:28 -0800,58, merge pull request webassembly command line generalize command line parsing,,
4282,ec87a4d54110965a2145349c697764a06db6bf21,F Bastien <jfb@chromium.org>, 2016-01-04 10:46:13 -0800, , add curlies,,
4283,2410eccb2a4bc7bbda87b299a6cd6fc434c77c01,F Bastien <github@jfbastien.com>, 2016-01-04 10:36:48 -0800,59, merge pull request webassembly jfbastien patch readme mention cmake build,,
4284,6f21a0a07e6ec8e326a49cdbe2af08ca06f79cda,F Bastien <github@jfbastien.com>, 2016-01-04 10:36:25 -0800, , mention ninja,,
4285,0c0afc1a2960972fc7aa24cfb85289ead5b3441d,F Bastien <github@jfbastien.com>, 2016-01-03 18:00:07 -0800, , readme mention cmake build,,
4286,ae24c9056d05b5f3ebe90cf4c345a986a6539bf4,F Bastien <jfb@chromium.org>, 2016-01-02 13:49:11 -0800, , generalize command line parsing allow program use command line support,,
4287,0a85cbe347f410df8d9e88fe1122450914ddfadf,F Bastien <jfb@chromium.org>, 2016-01-01 11:22:03 -0800, , update test experimental,,
4288,cab54599715f9e8c6c2a111d37b4083754b8ea78,F Bastien <jfb@chromium.org>, 2016-01-01 11:20:48 -0800, , fix __init__.py exec bit,,
4289,4c55b2ef14e414ae2098c3b358006975d25230e3,F Bastien <jfb@chromium.org>, 2015-12-31 14:25:07 -0800,54, create update.py offshoot use buildbot output run test,,
4290,0ccfca7138cbbd483e23703e11c832a08e10d027,F Bastien <jfb@chromium.org>, 2015-12-31 14:05:28 -0800, , fix check.py license,,
4291,c823a8c37f1eb12d93fab1755788c010afadf405,F Bastien <jfb@chromium.org>, 2015-12-31 14:02:39 -0800, , add test __init__.py,,
4292,33b823c5467ca915db85f644084f978c6ea28148,F Bastien <jfb@chromium.org>, 2015-12-31 14:00:12 -0800, , update test experimental,,
4293,9ab2086e41da78925826d22bb5020c2962a8ae0b,F Bastien <github@jfbastien.com>, 2015-12-30 09:30:21 -0800, , typo,,
4294,c34dd278a73ecb34fb10825f238ef98d394e4f0b,lon Zakai <alonzakai@gmail.com>, 2015-12-30 12:03:31 -0500,55, merge pull request webassembly support command line start moving command line processing libsupport.a,,
4295,44a8aeaf5820ee06e8c6dbc061d131d7b4d39cd3,lon Zakai <alonzakai@gmail.com>, 2015-12-29 21:15:26 -0800, , ,,
4296,fb895476f8ba11c27a4732be28ec53356f6d759f,lon Zakai <alonzakai@gmail.com>, 2015-12-29 21:02:29 -0800, , binary binary format,,
4297,d26cd0e48e948862b545d4fbf98c98b0978d1022,lon Zakai <alonzakai@gmail.com>, 2015-12-29 20:51:18 -0800, , unary binary format,,
4298,a7dccb1294a258793203720b1dc889a5993c95bb,lon Zakai <alonzakai@gmail.com>, 2015-12-29 20:23:56 -0800, , binary stuff unary binary,,
4299,1e765b3b8b34ec48c8cdccd79667d2e5c957d983,lon Zakai <alonzakai@gmail.com>, 2015-12-29 20:18:05 -0800, , const binary avoid char,,
4300,e9a2d9dc3dcbd6523b30853ae0708290c1eed32f,lon Zakai <alonzakai@gmail.com>, 2015-12-29 20:12:49 -0800, , load store binary,,
4301,d62b5863dc8231bfdea1b72291b7c854dec64f8c,lon Zakai <alonzakai@gmail.com>, 2015-12-29 22:30:00 -0500, , start emit ast node binary format,,
4302,41e1551c99a8f7378e5941e684c95b615c5b120d,lon Zakai <alonzakai@gmail.com>, 2015-12-29 21:33:59 -0500, , binary work,,
4303,0421bd0c27ea57c7c5c9bc3b1ce6f71f8ce240dc,lon Zakai <alonzakai@gmail.com>, 2015-12-29 21:14:29 -0500, , start work binary format per spec,,
4304,358f8d614e34c240a089ea02d08da47da4393d7b,lon Zakai <alonzakai@gmail.com>, 2015-12-29 19:53:30 -0500, , remove another obsolete comment,,
4305,d0eaa583d99a4c116b054fe7431d76d1d7ae8529,lon Zakai <alonzakai@gmail.com>, 2015-12-29 19:52:39 -0500, , remove obsolete comment,,
4306,a372e22c7a54bcfce2b485f57b38c0eafee8ee7a,lon Zakai <alonzakai@gmail.com>, 2015-12-29 19:50:18 -0500, , check.py explanation,,
4307,782b708984d38fdcd2191f65236227cf6ea11702,lon Zakai <alonzakai@gmail.com>, 2015-12-29 19:47:40 -0500, , add parser debugging,,
4308,50223b341b38c35034821250683635d1fd6a4f76,lon Zakai <alonzakai@gmail.com>, 2015-12-29 19:47:07 -0500, , update check.py disabled test reason,,
4309,3bf113b601de6d1a55f54ed1b788037cd5514419,F Bastien <jfb@chromium.org>, 2015-12-29 17:29:13 -0800, , add help avoid bound,,
4310,e78f6ad3b4c9af4eaaec7309768525ea541d1c3e,F Bastien <jfb@chromium.org>, 2015-12-29 17:22:45 -0800, , fix include guard,,
4311,c17a9376713fc4aaef9f3ff40b6a12bab0153ea0,F Bastien <github@jfbastien.com>, 2015-12-29 17:22:17 -0800, , fix include guard,,
4312,e8a564897cfd3945a097bd07c553d7a5d29355b8,F Bastien <jfb@chromium.org>, 2015-12-29 17:19:32 -0800, , start moving command line processing libsupport.a move thing functional change yet,,
4313,edc992eb3cd3afece4ba623c382f408aecde4e4a,lon Zakai <alonzakai@gmail.com>, 2015-12-28 16:33:40 -0500,53, merge pull request webassembly jfbastien patch update expected gcc test failure,,
4314,b800b555d79b0a4219bb4a160498109d70644832,F Bastien <github@jfbastien.com>, 2015-12-28 08:41:29 -0800, , update expected gcc test failure negative relocation fixed fix,,
4315,600d2c32cc347d77826de8e0c996949536f5c209,lon Zakai <alonzakai@gmail.com>, 2015-12-27 20:31:23 -0500, , add test negative relocation,,
4316,49bc6a370abf20ee2b2749ee3ca73373bfeceeb7,lon Zakai <alonzakai@gmail.com>, 2015-12-27 20:30:28 -0500, , merge addressings relocation improve getconst use easily implement negative offset,,
4317,55a5d2c8ddfd24e94c56448ffc3ba904f69b267d,F Bastien <github@jfbastien.com>, 2015-12-27 08:29:21 -0800, , update,,
4318,00cad7e5794087bd4f3062af655cad0b11a4e29a,F Bastien <github@jfbastien.com>, 2015-12-27 08:20:34 -0800,51, merge pull request webassembly jfbastien patch update expected gcc test failure,,
4319,100cfe1c40ef0304a1721fa2148ae2e5a9842b8f,F Bastien <github@jfbastien.com>, 2015-12-27 07:59:00 -0800, , update expected gcc test failure new unexpected symbol lot fewer alon added workaround find new bug negative relocation,,
4320,871ae55b7e1d12af157e46914182651dbc204f8b,lon Zakai <alonzakai@gmail.com>, 2015-12-26 16:30:44 -0500, , add testcase output,,
4321,b258f03455399fcadc6a4ba7426fa447fe6dff66,lon Zakai <alonzakai@gmail.com>, 2015-12-26 16:20:40 -0500, , implement temporary hack __stack_pointer,,
4322,fc2d299ffe1877a635277acff15574d987da9a53,lon Zakai <alonzakai@gmail.com>, 2015-12-25 20:31:48 -0500, , update test experimental,,
4323,714df6b655f5d5f7da33ef091f3c8c758549597b,lon Zakai <alonzakai@gmail.com>, 2015-12-25 20:31:21 -0500, , finish updating test,,
4324,0f7bffb6b66698d21cb2f44a4a5b7bbaa3acd59c,lon Zakai <alonzakai@gmail.com>, 2015-12-25 20:28:55 -0500, , start implement lcomm,,
4325,7e1189e72938f23b463b7b531c1e91faea1f2c5e,lon Zakai <alonzakai@gmail.com>, 2015-12-25 18:54:34 -0500, , update,,
4326,09c2af18e4581a45c7765279a9c3af1f265f7351,lon Zakai <alonzakai@gmail.com>, 2015-12-25 18:54:12 -0500, , ignore lcomm,,
4327,58f9fb42a8be00e56aa23778c01da21b06207936,lon Zakai <alonzakai@gmail.com>, 2015-12-25 18:40:54 -0500, , start update test latest change,,
4328,bf3eba4084311696937f88b93b7a9ecbcc333f3b,lon Zakai <alonzakai@gmail.com>, 2015-12-25 11:54:16 -0800, , add indirect call testcase wasm backend,,
4329,23834dd0c7de36cf054db7178619b0755eec9b98,lon Zakai <alonzakai@gmail.com>, 2015-12-25 11:50:21 -0800, , fix function indexing s2wasm,,
4330,f9a5d31370a0e021c3384245f19a2c751afa02ea,lon Zakai <alonzakai@gmail.com>, 2015-12-25 11:39:50 -0800, , need reverse call operand anymore,,
4331,b9dd33226924ac299166169b1b58a00aae20b85a,lon Zakai <alonzakai@gmail.com>, 2015-12-25 11:10:59 -0800, , handle global addressings starting,,
4332,0cdd61e4552509a9f06f729421eb5045114cebac,lon Zakai <alonzakai@gmail.com>, 2015-12-25 10:42:09 -0800, , emit memory size s2wasm,,
4333,a62d9e30d85cef666055a3afe33942017766b008,lon Zakai <alonzakai@gmail.com>, 2015-12-25 10:35:47 -0800, , handle function index relocation,,
4334,49eff55076f009630c859424df932ad1e78bf33f,lon Zakai <alonzakai@gmail.com>, 2015-12-25 10:04:50 -0800, , fix const literal s2wasm bit,,
4335,b300e9bafb4d4085e7cc2fc5c3d37630d0cc61d0,F Bastien <github@jfbastien.com>, 2015-12-25 07:52:45 -0800, , update expected gcc test failure fixed r256402,,
4336,9ed14f5b12e1b6b2000f13952e6a075c9c307d9b,lon Zakai <alonzakai@gmail.com>, 2015-12-24 13:47:59 -0800, , ignore function alignment parse globl main process loop,,
4337,d13a16c17de50546a2272627fee29e1ec5f64385,lon Zakai <alonzakai@gmail.com>, 2015-12-24 13:39:02 -0800, , enable another passing test,,
4338,6f57800cedfcb6903783ca2d495f6033645dcb11,lon Zakai <alonzakai@gmail.com>, 2015-12-24 13:38:27 -0800, , fix relocation segment multiple part,,
4339,a03ffe19481eb0d9fa8497dd9695cbf4fe981dcc,lon Zakai <alonzakai@gmail.com>, 2015-12-24 13:00:36 -0800, , update build.sh,,
4340,35be999879f7af5366c0195dbe45b1fd8a22a539,lon Zakai <alonzakai@gmail.com>, 2015-12-24 10:54:19 -0800, , update check.py,,
4341,fe9fb1844dec17fe48ef8c70ef6cec0679e63cb6,lon Zakai <alonzakai@gmail.com>, 2015-12-24 10:51:31 -0800,48, merge pull request webassembly lib dir specify library archive output directory,,
4342,61fd115827c9dc02965fc56ee84d0f6b41ce0caf,F Bastien <jfb@chromium.org>, 2015-12-24 10:11:11 -0800, , specify library archive output directory archive needed static library also add library output directory,,
4343,fbf23be76c01b706ff3cd661a1463546291c5f9c,lon Zakai <alonzakai@gmail.com>, 2015-12-24 10:01:10 -0800, , update check.py libsupport,,
4344,4fda7967edabc917a2be541c2bd3f0ba2cfcb63a,lon Zakai <alonzakai@gmail.com>, 2015-12-24 09:57:14 -0800,47, merge pull request webassembly support add support static library,,
4345,42039d1a5f2d53f64828a378bc5ce59b816ef8de,F Bastien <jfb@chromium.org>, 2015-12-24 09:53:39 -0800, , add support static library moved color check made check environment note function local static initialization thread safe make build slightly faster allow move platform specific code header file reducing amount include gunk eventually move part code support especially command line parsing reusable,,
4346,207af0d877d195cf22540c00ebe8607c9ef41316,lon Zakai <alonzakai@gmail.com>, 2015-12-24 09:38:26 -0800, , merge branch simplify bit,,
4347,f2773d476c835fcc95e4e67d775736affa224552,F Bastien <jfb@chromium.org>, 2015-12-24 09:26:04 -0800, , simplify bit function ... bit,,
4348,35df36e4c18498c72bd8345d99e27856582d9054,lon Zakai <alonzakai@gmail.com>, 2015-12-24 09:17:26 -0800,45, merge pull request webassembly update expected fails3 update expected s2wasm failure,,
4349,fa5c5abb890371fabc5c4091c72675568a3d6c8e,F Bastien <jfb@chromium.org>, 2015-12-24 08:53:24 -0800, , update expected s2wasm failure,,
4350,a8f29286f99b8cde3dbb4656d5ac24a0ec2bdf5c,lon Zakai <alonzakai@gmail.com>, 2015-12-23 16:19:57 -0800, , ensure proper literal type popcnt result,,
4351,5ae3515596921ca5721a540d9aeb74fdf1af87ae,F Bastien <github@jfbastien.com>, 2015-12-23 16:20:00 -0800,43, merge pull request webassembly clz32 clz32 handle ctz,,
4352,6874599d894b925ee5708c30de0cd3d355fed729,F Bastien <jfb@chromium.org>, 2015-12-23 16:19:49 -0800, , add curly,,
4353,686551ec7012aa293730c4836edfe3003b519d95,F Bastien <jfb@chromium.org>, 2015-12-23 16:15:28 -0800, , clz32 handle ctz,,
4354,fa3d3bab09730f7bbce4e6d6889ebda3be3795d6,lon Zakai <alonzakai@gmail.com>, 2015-12-23 16:10:06 -0800,42, merge pull request webassembly bit bit return ctz32 clz32 instead,,
4355,d049ae31248fd3db11717a3ea006c5d1f59c913d,F Bastien <jfb@chromium.org>, 2015-12-23 16:07:43 -0800, , bit return ctz32 clz32 instead,,
4356,cef89df8e5ad80a0fb881af31804eef854909552,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:58:19 -0800,41, merge pull request webassembly use bit use new bit function,,
4357,b055995ff2cb99d10d5be3ffd9ed3757b499ede9,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:55:31 -0800,36, handle indirect call parent asm2wasm,,
4358,a40e154b2cfc9eaf0b55c1a478f848e4f851dbd0,F Bastien <jfb@chromium.org>, 2015-12-23 15:51:44 -0800, , use new bit function,,
4359,df0e9b04330a0df3aab31856ad4567312a8affcd,F Bastien <github@jfbastien.com>, 2015-12-23 15:41:08 -0800,40, merge pull request webassembly update expected fails2 update expected s2wasm failure,,
4360,ce86316ecc8f028265e6557488a064f8623dbf26,F Bastien <jfb@chromium.org>, 2015-12-23 15:40:32 -0800, , merge,,
4361,05cf6cc7750d41377c95a66f15976acf527a3bf3,F Bastien <jfb@chromium.org>, 2015-12-23 15:37:35 -0800, , update expected s2wasm failure used fail s2wasm.h 937 void wasm s2wasmbuilder parseobject wasm name assertion seensize size failed fixed ,,
4362,3b52cb1fc5909198e42c9813e289f11e898b0a6b,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:35:14 -0800, , note bug failing test,,
4363,9ec32cf1ee5f67de5fc3782ce175ef2324b202c0,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:11:25 -0800, , fix typo,,
4364,8823074de217c11ad4fcbf2d21ff588c297704c2,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:09:41 -0800,38, merge pull request webassembly update expected fails update expected s2wasm failure,,
4365,24bb902bf9c80311718c98e34c97363e41790849,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:08:44 -0800,39, merge pull request webassembly bit portable bit function,,
4366,138dee6fb54ef464c0a674f359aff71ab9d0c868,lon Zakai <alonzakai@gmail.com>, 2015-12-23 15:07:48 -0800,34, merge pull request window fix fix window vs2013 compile error,,
4367,a96c0af450174cb6d07db5e93a43795a280d3c3b,F Bastien <jfb@chromium.org>, 2015-12-23 15:02:21 -0800, , portable bit function discussed http github.com webassembly binaryen pull useful portable bit function instead relying compiler builtins always portable,,
4368,070b1102338a7baa8d0c5f0e5c6731b93cf0e09a,lon Zakai <alonzakai@gmail.com>, 2015-12-23 14:58:57 -0800, , emit table s2wasm,,
4369,b414b0e0b2d8b7e35375bcff4696f608f9e5bd14,F Bastien <jfb@chromium.org>, 2015-12-23 14:45:26 -0800, , update expected s2wasm failure test pas new one failing unexpectedly though investigate separately,,
4370,b6214708e08fe8cc894bfd4ace866beb6bb3606f,lon Zakai <alonzakai@gmail.com>, 2015-12-23 14:40:44 -0800, , handle combined globals better s2wasm,,
4371,24c5e1807f583ecc5b6fdeb87eeba2c501f0bac4,ndrew Scheidecker <andrew@scheidecker.net>, 2015-12-23 13:18:42 -0800, , change colors.h isolate minimize code compiled platform,,
4372,6f573309b3ee704eff76068297511934ca13009f,lon Zakai <alonzakai@gmail.com>, 2015-12-23 13:11:42 -0800, , add wasm backend globals testcase,,
4373,781ac0929c76862c9988867a731b4699b459f5fd,lon Zakai <alonzakai@gmail.com>, 2015-12-23 13:08:24 -0800, , fix parser handling memory segment,,
4374,e06c85acfe7332640aadfea2c4f62ab71d159a88,lon Zakai <alonzakai@gmail.com>, 2015-12-23 12:39:19 -0800, , emit staticbump metadata,,
4375,dd48f32a130a4c45d7b2ca0df95f4a27cadd117e,lon Zakai <alonzakai@gmail.com>, 2015-12-23 12:05:11 -0800, , generalize commandline option add global base option s2wasm,,
4376,253d42efc00510ce7a07e7ab05930ff93bd3c70d,lon Zakai <alonzakai@gmail.com>, 2015-12-23 11:36:39 -0800, , refactor memory merging code,,
4377,441f3a1d04a698bc9e71cbd29be085ca2a80b3c4,lon Zakai <alonzakai@gmail.com>, 2015-12-23 10:55:02 -0800, , improve check.py,,
4378,06952cee2becd83ab5a531b3e5649ad5f137d09f,lon Zakai <alonzakai@gmail.com>, 2015-12-23 11:35:11 -0800,37, merge pull request webassembly extern error emit error message unknown symbol found,,
4379,cb256d096ff2c6b53bb8e0175920e1c9734c476b,F Bastien <jfb@chromium.org>, 2015-12-23 11:31:26 -0800, , output symbol name,,
4380,3d35e0ad734716d1f7c2bb123d7d6150d6fadbac,F Bastien <jfb@chromium.org>, 2015-12-23 11:23:18 -0800, , emit error message unknown symbol found,,
4381,65f8f24c7bb1da884eb74d5fd742fcf35526483c,ndrew Scheidecker <andrew@scheidecker.net>, 2015-12-23 10:17:50 -0800, , implement feedback,,
4382,a009c9c935c732c357f73358630bd1c55e4a87a9,lon Zakai <alonzakai@gmail.com>, 2015-12-23 09:44:45 -0800, , s2wasm const parsing fix,,
4383,32490684ab0fa568d4e539c24f7c560295da57de,ndrew Scheidecker <andrew@scheidecker.net>, 2015-12-23 09:09:49 -0800, , fix window vs2013 compile error,,
4384,a79329fbe135bab9a319fd3afc911620b12f0124,lon Zakai <alonzakai@gmail.com>, 2015-12-22 20:09:19 -0800, , misc minor s2wasm fix globals,,
4385,125f085cb5d28e75635844f1b72b8b3ce82b314c,lon Zakai <alonzakai@gmail.com>, 2015-12-22 19:36:38 -0800, , fix parsing large offset bit,,
4386,fe912e2582e7589a890f3c1a317252e8d2738a2c,lon Zakai <alonzakai@gmail.com>, 2015-12-22 19:20:30 -0800, , update experimental test,,
4387,8c2f9320fc3eff1080a1e98c79c8b83d372ca6cf,F Bastien <jfb@chromium.org>, 2015-12-22 17:16:19 -0800, , s2wasm failure identify one bug llvm,,
4388,30e50a249b5addeef577dfd59501a569f34de920,lon Zakai <alonzakai@gmail.com>, 2015-12-22 16:55:09 -0800,31, merge pull request webassembly int8 int16 s2wasm support .int8 .int16 data,,
4389,175da4d20630afd2c0ab5b9be5842c41694c2b35,F Bastien <jfb@chromium.org>, 2015-12-22 16:50:59 -0800, , s2wasm support .int8 .int16 data fix bunch torture test failure,,
4390,9fd7cfcb3f50eac87016170e8c130674fd37fcd0,lon Zakai <alonzakai@gmail.com>, 2015-12-22 15:16:16 -0800, , visitstore lowerint64,,
4391,50dca4285a53bf5107e0f44e695a1085d6a55d00,lon Zakai <alonzakai@gmail.com>, 2015-12-22 15:00:09 -0800,30, merge pull request webassembly include guard fix uniformize include guard,,
4392,b6786d8187e79d60fcb24e3e6589444cf463128a,F Bastien <jfb@chromium.org>, 2015-12-22 14:53:34 -0800, , fix uniformize include guard,,
4393,7c39b5ee5dcaf2182d20ca1cb540bbff9adc4c0b,F Bastien <github@jfbastien.com>, 2015-12-22 14:36:07 -0800,29, merge pull request webassembly s2wasm known failure add list known gcc torture test failure,,
4394,353df280a0343b5b3180055da331ef20c993275f,F Bastien <jfb@chromium.org>, 2015-12-22 14:35:36 -0800, , known test,,
4395,b221bd91e51ef404f14ac938f111833b4892320e,F Bastien <jfb@chromium.org>, 2015-12-22 14:19:26 -0800, , add list known gcc torture test failure run test bot triage failure fix,,
4396,89972f57fc1d98a2990a635878df39867d1f98f9,lon Zakai <alonzakai@gmail.com>, 2015-12-22 14:03:21 -0800,28, merge pull request webassembly wall fix warning found gcc,,
4397,397ddb4bbced30b96d6f05dddaea6a395269cf34,F Bastien <jfb@chromium.org>, 2015-12-22 13:59:54 -0800, , add curlies,,
4398,5f7c296dbaba32bc4dad65cbee84ee95a01919bf,F Bastien <jfb@chromium.org>, 2015-12-22 13:56:21 -0800, , bit enough since asm.js pointer,,
4399,e54299ed9f4f53b441689dbe96281947247ef138,F Bastien <jfb@chromium.org>, 2015-12-22 13:52:41 -0800, , add compiler support.h,,
4400,58cb71723a5243f8a347e51e9ceb20b664719585,lon Zakai <alonzakai@gmail.com>, 2015-12-22 13:52:29 -0800, , load lowerint64,,
4401,e3c5ca02fde4282a3797be6ecea5a473ac8c3a1d,F Bastien <jfb@chromium.org>, 2015-12-22 13:51:20 -0800, , fix warning found gcc previous patch addressed llvm warning one address gcc one well mostly signed unsigned mix patch also turn wall werror,,
4402,4726dcfd02ca4bea786fe4b6ef4629e3e2a1561d,F Bastien <github@jfbastien.com>, 2015-12-22 13:05:14 -0800,27, merge pull request webassembly unused fix unused variable function warning,,
4403,8e3fa9c80d50a6b3e883d218aaaddf02ff4b94d3,F Bastien <jfb@chromium.org>, 2015-12-22 13:04:55 -0800, , restore getstr dicard result,,
4404,dd1b898e98ae19012ef18a990a9283ab7d349652,F Bastien <jfb@chromium.org>, 2015-12-22 12:57:27 -0800, , fix unused variable function warning,,
4405,afd2e66106d08792f54aea7ddfa408853ce229ed,lon Zakai <alonzakai@gmail.com>, 2015-12-22 12:51:02 -0800,26, merge pull request webassembly virtual dtor add missing virtual dtor,,
4406,1749331c841d5ecc42d4b82617cb958766cbdfb6,F Bastien <jfb@chromium.org>, 2015-12-22 12:48:46 -0800, , put wall yet,,
4407,48d8e31f81f16b059728b4b098223ec0ef4c7510,F Bastien <jfb@chromium.org>, 2015-12-22 12:47:47 -0800, , add missing virtual dtor deleting pas right thing,,
4408,bf680f7553433c2cd0ffdd641e4e37fceed8b7ed,lon Zakai <alonzakai@gmail.com>, 2015-12-22 12:44:26 -0800,25, merge pull request webassembly warn struct class fix warning mixing struct class,,
4409,2c1cf74201b03852f19082c1346ee5a80e6ed7cd,F Bastien <jfb@chromium.org>, 2015-12-22 12:42:44 -0800, , fix warning mixing struct class,,
4410,475bc5601fcacc260d4aac6f71cfff5b224c4847,lon Zakai <alonzakai@gmail.com>, 2015-12-22 12:31:25 -0800,24, merge pull request webassembly uninint fix uninitialize variable warning,,
4411,e546e2fec81baf447c7146b5f84274ca653fb7cb,lon Zakai <alonzakai@gmail.com>, 2015-12-22 12:29:22 -0800, , update test newlines,,
4412,8c8294bad3068267940f293be9c2c26b64e66219,F Bastien <jfb@chromium.org>, 2015-12-22 11:49:44 -0800, , move command line file,,
4413,dc9f3977561017924e08a8f87727f1ee1bcf8f97,F Bastien <jfb@chromium.org>, 2015-12-22 11:43:20 -0800, , fix uninitialize variable warning,,
4414,05a6eb48c1258a9d8f7cb8356e541d0fad50bc30,F Bastien <jfb@chromium.org>, 2015-12-22 11:29:34 -0800, , s2wasm add outfile use place propagate similar change rest codebase later also need turn color outputting file isatty stdout separate touch file,,
4415,8794a809838ba609400f7f8c5d41571700cbf289,lon Zakai <alonzakai@gmail.com>, 2015-12-21 17:29:33 -0800, , prepare function lowerint64,,
4416,ce6b595a23455004af001109979467a462dbc076,lon Zakai <alonzakai@gmail.com>, 2015-12-21 17:26:00 -0800, , getlocal setlocal lowerint64,,
4417,0abd164bcb5c8fe0c2ff2b9d69a5b39519e64573,lon Zakai <alonzakai@gmail.com>, 2015-12-21 16:41:58 -0800, , improve auto updater,,
4418,3e342a74b272a2d395b00b8d1e73d54ab29d4d0e,lon Zakai <alonzakai@gmail.com>, 2015-12-21 16:37:53 -0800, , start work lowerint64 pas,,
4419,681b4d1c5b5e28ea96b8f54b48e6de1e823afd61,lon Zakai <alonzakai@gmail.com>, 2015-12-21 16:37:14 -0800, , use concrete list pass build.sh,,
4420,299ab38173483b22ee754f147c74b0e6f53d7432,lon Zakai <alonzakai@gmail.com>, 2015-12-21 15:42:57 -0800, , add first spec test wasm2asm,,
4421,d41d290af2e14261ccbe35744514bee00d2d0623,lon Zakai <alonzakai@gmail.com>, 2015-12-21 15:30:42 -0800, , unaligned load store wasm2asm,,
4422,f0dbc606f7217e1151edd14c9ecfa80290b3009b,lon Zakai <alonzakai@gmail.com>, 2015-12-21 14:53:57 -0800, , support load store offset wasm2asm,,
4423,97f639e459643de5e6659080335174cb795dff4d,lon Zakai <alonzakai@gmail.com>, 2015-12-21 14:50:49 -0800, , move wasm2asm testcases later spec testcases set,,
4424,869dabbb011e80b26018f38de06823fb159b05e0,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:47:59 -0800, , enable another test,,
4425,6f8a5cd09ad3bb3a171689e344ac5e6846df81d8,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:46:18 -0800, , enable test,,
4426,a032c1bedf0df186f5f6166ba41af82a42e7db2f,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:44:17 -0800, , escaping,,
4427,bdb9bf5a59073ca6ff45cb851fa85ee67fefe22f,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:42:35 -0800, , reformat blacklist experimental wasts,,
4428,b860ac84f6fb286793c9dfcbc4fd767de9cbfa24,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:39:11 -0800,22, merge pull request webassembly fix license header fix license header,,
4429,20ffcb30b5d9d58de0a2be55c998610ae01cb45f,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:34:31 -0800, , start verify experimental wasts parse,,
4430,bcfa3e8520d220ae274ffe98701a13b032da3cd7,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:34:01 -0800, , revert add debugging wasm parser reverts commit,,
4431,37ea049f1135bda96e00ed58b25fe9fa462016a6,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:24:33 -0800, , add debugging wasm parser,,
4432,b65195fdd982b3d3c741f4e91f375ae92351143a,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:20:12 -0800, , handle return value parser,,
4433,157a0eb6577464ffffe4a16ac42f39fd3f8a7bca,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:14:36 -0800, , update experimental test,,
4434,fab26d37f7e107596bd733d70d2330410eae24cf,lon Zakai <alonzakai@gmail.com>, 2015-12-21 13:02:35 -0800, , parse import early may end,,
4435,73345105034640d09d9557c55ce5e9077c2cb8f8,F Bastien <jfb@chromium.org>, 2015-12-21 12:56:01 -0800, , fix license header applies apache 2.0 properly far lawyer told early since code written alon zakai,,
4436,c0dcfbc09887ed3bfaa978fc64d9293946ff7aad,lon Zakai <alonzakai@gmail.com>, 2015-12-21 12:41:02 -0800, , rename post.js component,,
4437,007c2960ee5790c83bd105a6a7ec1c6dc6e7e69c,lon Zakai <alonzakai@gmail.com>, 2015-12-21 12:37:58 -0800,5, merge pull request webassembly jfbastien patch license contributing,,
4438,14bc8843341ccbd9a8fec4aba7954dd2a201fd20,lon Zakai <alonzakai@gmail.com>, 2015-12-21 12:34:49 -0800,21, merge pull request webassembly gitignore ninja .gitignore ninja file,,
4439,13ea1c52bbd620ba1818dd3ed6bbeb77fd7b06ab,F Bastien <jfb@chromium.org>, 2015-12-21 12:33:31 -0800, , .gitignore ninja file get generated using cmake ninja,,
4440,2654fe23914c87afb2dd7340709db2cea5e2b047,lon Zakai <alonzakai@gmail.com>, 2015-12-21 10:50:37 -0800, , look coercion asm2wasm,,
4441,b58eadbc45b58322c1efa1f94f14bf0f15ae4d23,lon Zakai <alonzakai@gmail.com>, 2015-12-21 10:17:21 -0800, , update experimental submodule,,
4442,c7eaa6261215689f4cea1264da8b44494bc7f2a9,lon Zakai <alonzakai@gmail.com>, 2015-12-20 19:22:08 -0800, , ignore .section inside object s2wasm update test,,
4443,42000f2ed456c05747c04e8b4a159bb8a3464c21,lon Zakai <alonzakai@gmail.com>, 2015-12-20 19:15:50 -0800, , parse weak s2wasm,,
4444,7becfbed08e5404c19e1f241f160576354e402a8,lon Zakai <alonzakai@gmail.com>, 2015-12-19 17:18:09 -0800, , improve joke,,
4445,105adf640bd6b2ef8c8e5722fe21bfe93d8b9985,lon Zakai <alonzakai@gmail.com>, 2015-12-19 10:04:49 -0800, , gitignore,,
4446,bbc008136ca948101229d2d7c8eb9773001596dc,lon Zakai <alonzakai@gmail.com>, 2015-12-19 10:00:54 -0800, , optimized build cmake,,
4447,e0e17362506d63ed0ffb5509f9ba5b0d41d5e578,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:59:34 -0800, , add float args build.sh cmake,,
4448,05d96f1517dc801b14c69ae3b72f590c86286448,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:58:18 -0800, , cmake note readme,,
4449,843ff2b613e734a31a6acb061476a105f1669949,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:56:50 -0800, , improve gitignore,,
4450,552e8f2f912811022d8bae1a10b9430c9205903c,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:55:33 -0800, , specify cmake,,
4451,d004ea9799ec3f0a9a25071ca3ced5ee3cd7144f,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:54:32 -0800, , lower required cmake version ubuntu 14.04 lts bunch user,,
4452,bc560295e015020d9b9e60fdab329c36e91d0260,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:53:45 -0800,15, merge pull request waywardmonkeys cmake initial start cmakelists.txt,,
4453,c743580ccc6e34dc498cd0a8ed24c6aaeee119ec,lon Zakai <alonzakai@gmail.com>, 2015-12-19 09:05:13 -0800,14, remove old debug code s2wasm close,,
4454,1a533352acd93cbad0c48f532a1e83cd5e262939,ruce Mitchener <bruce.mitchener@gmail.com>, 2015-12-19 23:38:49 +0700, , initial start cmakelists.txt yet complete perform emscripten build stage doe attempt run test work progress issue,,
4455,8c19c7eefe4980cfba39e835fd6ab7bb95c3f9ad,lon Zakai <alonzakai@gmail.com>, 2015-12-18 17:31:44 -0800, , careful parsing expression comment,,
4456,884b9f8a688766e08907431cd6759bfaa89399dc,lon Zakai <alonzakai@gmail.com>, 2015-12-18 14:30:46 -0800, , remove label removed spec,,
4457,2651a7c315cb5bf7343fe889585659074d5056c8,lon Zakai <alonzakai@gmail.com>, 2015-12-18 14:19:44 -0800, , update upstream test,,
4458,1728102c32ee94dae1269bbba15e1c9836fdc8fb,lon Zakai <alonzakai@gmail.com>, 2015-12-18 14:18:52 -0800, , update test,,
4459,e7e30dfabf39b84ad11179a3638acbbbaa8ef071,lon Zakai <alonzakai@gmail.com>, 2015-12-18 14:02:23 -0800, , fix block label parsing,,
4460,ee704bf65d71e63fc6d268204ede55e247261872,lon Zakai <alonzakai@gmail.com>, 2015-12-18 13:46:44 -0800, , readme note git submodules,,
4461,f7037892baf98635764e0baadb17963409f65165,lon Zakai <alonzakai@gmail.com>, 2015-12-18 13:43:59 -0800,11, merge pull request thekk makethemworks update submodules running build.sh make run well,,
4462,4cc1485b11726a5c6fd0eda25fe2b092f174bedb,lon Zakai <alonzakai@gmail.com>, 2015-12-18 09:25:56 -0800, , readme update,,
4463,174ab890d66bcaeda615204ae94a733e95dbb19a,lon Zakai <alonzakai@gmail.com>, 2015-12-18 09:23:35 -0800,12, merge pull request loganchien fix readme fix typo readme,,
4464,4fdeac9210714cd902f8e6db52b47b16a326c231,ogan Chien <tzuhsiang.chien@gmail.com>, 2015-12-18 22:38:52 +0800, , fix typo readme,,
4465,e6afdf3d6c679e7cf09ca31641dbfd8fc7dcc184,ing Ruei Liang (KK) <thumbd03803@gmail.com>, 2015-12-18 17:50:08 +0800, , update git submodules running build.sh,,
4466,3673eb319c9d6674d257cd13ca702d606d053e57,ing Ruei Liang (KK) <thumbd03803@gmail.com>, 2015-12-18 17:35:01 +0800, , use http url prevent permission problem,,
4467,4148c6e4ebd7d9e631365e092c04c34a769ca63a,lon Zakai <alonzakai@gmail.com>, 2015-12-17 20:27:33 -0800, , add new test file,,
4468,33b580d7a61b0666970855510992619fa1cab467,lon Zakai <alonzakai@gmail.com>, 2015-12-17 20:26:43 -0800, , generalize relocation add multiple element global name,,
4469,3369c929b2da94428c6f2055d58236352354af43,lon Zakai <alonzakai@gmail.com>, 2015-12-17 20:09:04 -0800, , support global offset store s2wasm,,
4470,738feca9aa0ca0b21e47d0a6d9bf5f572902d2a3,lon Zakai <alonzakai@gmail.com>, 2015-12-17 20:08:19 -0800, , accept thing s2wasm,,
4471,c5b829c88862b3a0bf996696a6bc29f51f825cca,lon Zakai <alonzakai@gmail.com>, 2015-12-17 19:57:02 -0800, , support constant global address load s2wasm,,
4472,8fbc5c08f87c978914a7dfafb55b2869297145e5,lon Zakai <alonzakai@gmail.com>, 2015-12-17 19:31:50 -0800,9, fix s2wasm comment output,,
4473,2a761fa9c8ebe419a547db69e3c636a01b68eaa8,lon Zakai <alonzakai@gmail.com>, 2015-12-17 18:42:11 -0800,8, merge pull request waywardmonkeys missing override fix missing override warning,,
4474,cdb2e4c0cf106ee145f5a32ba5d17c62df2e92d2,ruce Mitchener <bruce.mitchener@gmail.com>, 2015-12-18 08:25:21 +0700, , fix missing override warning,,
4475,b61b273ad7ed9b6b27170f3726be79b527198788,lon Zakai <alonzakai@gmail.com>, 2015-12-15 16:52:31 -0800, , emit zero segment,,
4476,cdc654c5a132cda78d0f4760b499daa7a10f6cde,lon Zakai <alonzakai@gmail.com>, 2015-12-15 16:52:20 -0800, , add test output,,
4477,d1bfe365bbf163e94b741c715787da23f5cdd3e9,lon Zakai <alonzakai@gmail.com>, 2015-12-15 16:48:05 -0800, , update test,,
4478,8291fd4a435dbb95661e13c5f823498312db4d79,lon Zakai <alonzakai@gmail.com>, 2015-12-15 16:46:01 -0800, , support offset relocation,,
4479,7e9bc12167a0f92a82f3615cedef6f4c818d8c10,lon Zakai <alonzakai@gmail.com>, 2015-12-15 15:16:27 -0800, , add memops benchmark,,
4480,c9d8cd2b39a286687b917ff1b4f32c2ebb827ba7,lon Zakai <alonzakai@gmail.com>, 2015-12-15 14:54:39 -0800, , refactor type parsing s2wasm,,
4481,7df1e482dcdc2305767ab483406a60490fe98555,lon Zakai <alonzakai@gmail.com>, 2015-12-15 14:26:13 -0800, , add another wasm backend testcase,,
4482,5cced1f88657b628f55cc48c486f85f772001472,lon Zakai <alonzakai@gmail.com>, 2015-12-15 14:24:27 -0800, , fix stack popping s2wasm,,
4483,03e1465919fe68416fc4b4e19a14f96456578002,lon Zakai <alonzakai@gmail.com>, 2015-12-14 20:12:13 -0800, , add first wasm_backend output testcase,,
4484,7314f30d61b4850b2b4c7850901725ea287fd715,lon Zakai <alonzakai@gmail.com>, 2015-12-14 20:03:12 -0800, , need prefix,,
4485,dcef40dbc73de2496c05476379603bdf521b34fe,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:52:18 -0800, , fix import asm const method,,
4486,2ce78b61261357ce1c9391e318ed87e992a02587,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:31:37 -0800, , fix asm const arg,,
4487,bd3a35d28606220000b160cbd4494242542d0502,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:29:25 -0800, , patch call sig,,
4488,119896a6688ff3ae78bdd0b0cc47328c3383ac2a,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:24:08 -0800, , emit asm const,,
4489,3fe9c430f321a5cdf948a903509367ba872e37a6,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:14:00 -0800, , escape asm consts,,
4490,89e0212e5cb1824dc936a5994176de85f259df0b,lon Zakai <alonzakai@gmail.com>, 2015-12-14 19:02:47 -0800, , start emit metadata s2wasm,,
4491,76617512d2bbffb6abf0a1b3ba13da433c194425,lon Zakai <alonzakai@gmail.com>, 2015-12-14 17:27:37 -0800, , add import s2wasm,,
4492,bea7c5af891e0a6dee9b2551cd3632848f652fa1,lon Zakai <alonzakai@gmail.com>, 2015-12-14 17:22:16 -0800, , detect call import s2wasm,,
4493,d2e86e43d69252f7262c5a17f9c4e0ff8ba75753,lon Zakai <alonzakai@gmail.com>, 2015-12-14 16:31:06 -0800, , relocation.s work,,
4494,4a6a88ae8387c9db99acda5b4fb1d2bff999a8a0,lon Zakai <alonzakai@gmail.com>, 2015-12-14 16:10:24 -0800, , add relocation support,,
4495,0b41a7d99f7652d607b14897e2ee963b28b6916e,lon Zakai <alonzakai@gmail.com>, 2015-12-14 15:48:14 -0800, , parse switch s2wasm,,
4496,1d9bacd6187703e2dff43a09d034e4ac094b241c,lon Zakai <alonzakai@gmail.com>, 2015-12-14 15:37:16 -0800, , handle loop block combo s2wasm update test output,,
4497,07e236b06dfb8d223b93c893ffe92a2b1d64bc9d,lon Zakai <alonzakai@gmail.com>, 2015-12-14 15:27:37 -0800, , update experimental test handle new call syntax,,
4498,91c353b3c9f1f4121992bd3bd04eed84907ddeb4,lon Zakai <alonzakai@gmail.com>, 2015-12-13 19:53:54 -0800, , export method s2wasm,,
4499,cf5d4c86462e4da31d6a6e10f9104828dc6eb64f,lon Zakai <alonzakai@gmail.com>, 2015-12-13 15:18:28 -0800, , readme stuff,,
4500,4b5c9e7fb5e5323cd558e33ac4c6c8f85cba2fbb,lon Zakai <alonzakai@gmail.com>, 2015-12-13 15:03:12 -0800, , mention s2wasm usage,,
4501,de14ec0b8b1d6a40b5ec9a2e0131c2fe89b4f268,lon Zakai <alonzakai@gmail.com>, 2015-12-13 07:06:53 -0800, , readme update,,
4502,8b5dfadc89a2e08b4d7ff3c28c4f91dd7815b52a,lon Zakai <alonzakai@gmail.com>, 2015-12-12 18:21:46 -0800, , add test file,,
4503,062518cbe64d096186c5b48e1de0717bc02486f9,lon Zakai <alonzakai@gmail.com>, 2015-12-12 18:15:58 -0800, , scan function result type s2wasm,,
4504,d429bbcc5d9aa402b8902274dce5b9a71653676f,lon Zakai <alonzakai@gmail.com>, 2015-12-12 15:31:33 -0800, , escaping,,
4505,b9adbb829ccd3232d4bb3026c88944f08bb88ca9,lon Zakai <alonzakai@gmail.com>, 2015-12-12 15:23:07 -0800, , escaping,,
4506,63c53fea0b37c2af8e3a106428625e227943dc25,lon Zakai <alonzakai@gmail.com>, 2015-12-12 15:10:54 -0800, , disable switch.s look nonstandard,,
4507,500c47b78571f6bcffba00ae2519782814c9d29e,lon Zakai <alonzakai@gmail.com>, 2015-12-12 13:30:05 -0800, , finish escaping add many file,,
4508,53bfa6cae963c62c40c1eac305ae94b6dea6e59c,lon Zakai <alonzakai@gmail.com>, 2015-12-12 13:19:15 -0800, , escaping,,
4509,ba882732bbe63010cd2b3fe3ad2bd57c16cf6eec,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:47:47 -0500, , data parsing fix,,
4510,819b22e163f5f1f51fbf150fe1efa6c3145ab29d,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:47:38 -0500, , wip data parsing fix,,
4511,611652074f94d8878cf6ee695b54d2f711dc3803,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:22:58 -0500, , quoting data fix,,
4512,5b97dfbf7cd4ecffbde111020f992b2c7a9bd03a,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:13:38 -0500, , fix s2wasm load,,
4513,b330c295d6ca2b2787bf99f0e036b3a46f9e4448,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:11:39 -0500, , many ops,,
4514,d4727a75ad4c199d5fa59002b10341936b895b91,lon Zakai <alonzakai@gmail.com>, 2015-12-12 12:02:54 -0500, , .type parsing negative getint,,
4515,97670cdc62b48cea0237496996cabdfbe0ac5bad,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:51:23 -0500, , data parsing,,
4516,1ad63eecab0cf8ad49b553827d623e43b074f883,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:30:38 -0500, , host better const parsing,,
4517,1bdc7ea94745412d73821e7ab3846f1693423756,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:30:25 -0500, , fix memory_size printing,,
4518,7986699edb9974c546937c69738cb5f51f69b997,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:05:21 -0500, , test update,,
4519,979c212d64fdfaa2017ebf19b8cc97b063ea09de,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:03:43 -0500, , update test,,
4520,30b612178e4059b4f5012a25bc1d961da932470a,lon Zakai <alonzakai@gmail.com>, 2015-12-12 11:01:18 -0500, , load store,,
4521,187394be5d5f8ac230b61170161466791c589567,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:50:18 -0500, , ops,,
4522,69235e272d211e5d5f0aa545a8ae4830f720dbb4,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:43:16 -0500, , copy_local,,
4523,525f0a16e22d3a4b2ff95b985d609b6b36c4771c,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:40:18 -0500, , support multiple local,,
4524,ecc6d59826d1fc47db3b53efc2ab2e564d679bd3,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:37:49 -0500, , cpus.s,,
4525,082b484ed36bbab55e22898bd268ba961df2f213,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:37:08 -0500, , many ops s2wasm,,
4526,efbc76812555d28241ae7fc7687a0ae4e588006a,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:24:59 -0500, , fix debug name,,
4527,79727c13bb60eeb5899c87e7564ba31a844217df,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:23:38 -0500, , comparison .ses,,
4528,22ec2948019182bb7792e66f38e083bbe5b950ef,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:21:59 -0500, , float comparison another,,
4529,9918cd1666e5083286d4db6ea96f1d35b6a59a3b,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:15:44 -0500, , add cfg stackify.s,,
4530,56fc0562393cbeab434c3caa3a7cbdfef158c73f,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:15:36 -0500, , unreachable s2wasm,,
4531,b93d65397055283791fb9034f5d80a9455d2c091,lon Zakai <alonzakai@gmail.com>, 2015-12-12 10:12:49 -0500, , load store s2wasm,,
4532,fc4018f7f5f83f91c61276430f2e7da6ad0ccb22,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:59:59 -0500, , add function type s2wasm,,
4533,7bdcdb2f5ee6e2346f946637dc6ba766256badea,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:52:41 -0500, , handle type.op non i32 well,,
4534,f4182a31c0c3cbf7121166b982447e8f8a24aa9d,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:49:09 -0500, , const fix comparison s2wasm,,
4535,722bb6a82070fa8bd3a263f478b3d2779eee7f1d,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:33:32 -0500, , work call_indirect s2wasm,,
4536,54e70e4b391d87482024efcf0829e967e46da866,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:19:28 -0500, , add call.s,,
4537,a6be5ae3d999d514359fdd4a2f5284555ade54a0,lon Zakai <alonzakai@gmail.com>, 2015-12-12 09:13:23 -0500, , parse call_indirect skip import,,
4538,6e31f25903dd0fb7dd43da64aff0e0ed020a4641,lon Zakai <alonzakai@gmail.com>, 2015-12-12 07:27:37 -0500, , share operand base class call,,
4539,84288282ef586d5664159b9a9fc54dacfc89c052,lon Zakai <alonzakai@gmail.com>, 2015-12-11 23:16:13 -0500, , handle missing assign call discard,,
4540,339b2bfa765a95cdb7d7a991257b59fafe23aef1,lon Zakai <alonzakai@gmail.com>, 2015-12-11 23:12:33 -0500, , func name,,
4541,8bd7af92305240767d231cb482f767d00e79842e,lon Zakai <alonzakai@gmail.com>, 2015-12-11 23:10:33 -0500, , parsing improvement,,
4542,e2a00ea9d0450f250ef8eaf27adf3b23111f6575,lon Zakai <alonzakai@gmail.com>, 2015-12-11 23:01:45 -0500, , better abort,,
4543,17b16f075fd0c70d5f809712967ecd869bb6b525,lon Zakai <alonzakai@gmail.com>, 2015-12-11 22:15:30 -0500, , update spec test,,
4544,0c6b382c3a893a5be98878bf8451627204427c97,lon Zakai <alonzakai@gmail.com>, 2015-12-11 22:14:59 -0500, , add experimental submodule test,,
4545,2ceaaf0c976e4fdb9bb10bdf1d5fb8ef56406de5,lon Zakai <alonzakai@gmail.com>, 2015-12-11 18:52:12 -0500, , fix static address s2wasm basic test complete,,
4546,15f1677713a2b9eb6180788ae3f26bc1ecffec5a,lon Zakai <alonzakai@gmail.com>, 2015-12-11 18:46:13 -0500, , fix static allocation code s2wasm,,
4547,32240a18abfdfcf70796bb72b0851163f0314e19,lon Zakai <alonzakai@gmail.com>, 2015-12-11 18:43:47 -0500, , parse data s2wasm,,
4548,83c7d3f4c38157f2750f0f6cb7dc89693eab15eb,lon Zakai <alonzakai@gmail.com>, 2015-12-11 18:42:24 -0500, , remove import basics.s may vanishing format anyhow,,
4549,927242bc9be3c5aaace97fd01de9eb44f6c71abd,lon Zakai <alonzakai@gmail.com>, 2015-12-11 18:09:39 -0500, , fix label loop s2wasm,,
4550,7fbb349bde8ede4542b81b14cea52dcc3e93a02d,lon Zakai <alonzakai@gmail.com>, 2015-12-11 17:58:16 -0500, , add loop s2wasm,,
4551,8fe1dcbf33748b18d309cebe5f8b70e64e39a996,lon Zakai <alonzakai@gmail.com>, 2015-12-11 17:56:22 -0500, , fix block handling s2wasm,,
4552,1ff97c6de3d8dcd67f85433d1142ade65c9f2360,lon Zakai <alonzakai@gmail.com>, 2015-12-11 13:31:35 -0500, , add wip testcase,,
4553,1260181dfb5f975c72661bd611cbc651744de6da,lon Zakai <alonzakai@gmail.com>, 2015-12-11 13:30:02 -0500, , fix comment,,
4554,9b9f6ad461fd2aa98591a9bbe6260a63f4563edb,lon Zakai <alonzakai@gmail.com>, 2015-12-11 13:28:46 -0500, , stack fix,,
4555,3c0faf1bce309974c82e96620113bf29dbf4a99a,lon Zakai <alonzakai@gmail.com>, 2015-12-10 23:18:19 -0500, , almost enough parse basics.s,,
4556,41757a06fbc13466e7f71cfe65c878685d76c457,lon Zakai <alonzakai@gmail.com>, 2015-12-10 23:07:19 -0500, , control flow s2wasm,,
4557,d60ffc7021ecf4dfcf0785362afdd5efffe817c5,lon Zakai <alonzakai@gmail.com>, 2015-12-10 22:54:08 -0500, , binary s2wasm,,
4558,46041b5b73c0f88e07bf1ed7b5af0ce2c2301267,lon Zakai <alonzakai@gmail.com>, 2015-12-10 22:15:20 -0500, , progress,,
4559,c415467d30eb104c33d5211e22d4a7069f75b521,lon Zakai <alonzakai@gmail.com>, 2015-12-10 21:55:36 -0500, , parse call,,
4560,bfd65fee1403ca93e847ee2cbd109aca46d7e41c,lon Zakai <alonzakai@gmail.com>, 2015-12-10 16:59:18 -0500, , process s2wasm first working testcase,,
4561,3bb2ec9cbaece20ce5930db64aa82d2018bbc10d,lon Zakai <alonzakai@gmail.com>, 2015-12-10 16:10:57 -0500, , refactor const parsing,,
4562,d05c5eb177687b3b0e41683027720b3d03b77ced,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:45:24 -0800, , update comment,,
4563,fad93f9d6a9589d92d01c0399901ecec9f07f662,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:42:53 -0800, , remove old comment,,
4564,c69ce72e2f1c256b99e2f5e293936825c6a6621c,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:40:17 -0800, , remove unneeded code,,
4565,8337e254c6dff7d5983779b2d5546da1c52f0318,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:38:47 -0800, , update comment,,
4566,30212c13effee262b1810babcbc7d7e12d8fd003,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:38:21 -0800, , remove old code,,
4567,321f427c789895b8c13e9aa3bf719bf2a8ebd609,lon Zakai <alonzakai@gmail.com>, 2015-12-07 17:35:23 -0800, , fix numeric name wasm2asm,,
4568,298b7f81a832eabda73e5ff4be1236fe87d38ce4,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:46:06 -0800, , add passing testcase wasm2asm test,,
4569,465a85fb977fd569f8f04cbc117f68d894b77a66,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:45:39 -0800, , import math.clz32,,
4570,246bf84adcba84abc96cc6910ca4b5a0898d6c46,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:42:59 -0800, , fix sign aware div mod,,
4571,4f542922b1b42536be31f6c1987b976f39a921b7,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:39:09 -0800, , fix double mul,,
4572,9cf484e68a8c200f997f001ce111c92bc3b970a7,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:36:53 -0800, , fix double,,
4573,fc46fce89fe13dbc10596efbdc5ca92ff3cc8229,lon Zakai <alonzakai@gmail.com>, 2015-12-07 16:31:05 -0800, , fix vector scoped temp,,
4574,940de255e89a4d4f5b85602a51ff09c05e4927e5,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:52:26 -0800, , restore temporarily disable example testcase,,
4575,4bb84be7e05946fadf38695074bd2854a6d6fff5,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:51:21 -0800, , update gitignore,,
4576,7c506037b668d4d4cc7c21534da4b325d3eae36c,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:50:59 -0800, , fix unit.asm.js testcase table contained method wrong type,,
4577,e7e2fe18e406aae3cade9200884014eda1f41f51,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:40:42 -0800, , import math.abs wasm2asm output,,
4578,4ef7b2ef49787bc22a73a13b24819a43d7d133d6,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:38:27 -0800, , fix signed int double,,
4579,aa3adeff8a9052e82db4353cd7d77e4da64e9a9d,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:36:06 -0800, , assume flattened import wasm2asm output,,
4580,4ddbf14c65b0217720cc794838a75df8faaeb8c7,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:29:47 -0800, , emit math.fround wasm2asm,,
4581,f9782b01cd76e76d5921a7e526e2e4577dbf29e4,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:28:00 -0800, , check asm.js validation wasm2asm output,,
4582,567ac5040752e1e06910f97fe181b95f19e0613d,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:25:19 -0800, , check tool existence check.py,,
4583,4fe0ddde6db8d21bd30f7f5ee1fa5322aa49bd5b,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:16:55 -0800, , quote key object printing necessary,,
4584,a3e8e7d7ee21808051fba70ee8990ad20beb0223,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:09:52 -0800, , emit export wasm2asm,,
4585,4b23bd513d926fb03e549bc1cf704a6016a91a70,lon Zakai <alonzakai@gmail.com>, 2015-12-07 15:00:53 -0800, , emit asm function table wasm2asm,,
4586,75e8b709fe900efcfb53813f884a1cde6e81907b,lon Zakai <alonzakai@gmail.com>, 2015-12-07 14:42:18 -0800, , handle import wasm2asm,,
4587,0fb0a68db70f2720d93a182129e73e4a0eaeb3cb,lon Zakai <alonzakai@gmail.com>, 2015-12-07 14:11:55 -0800, , import math.imul,,
4588,c44dc7b23fae93222c8a38da53e50c0b0aaa0366,lon Zakai <alonzakai@gmail.com>, 2015-12-07 14:06:46 -0800, , use math.imul wasm2asm,,
4589,09771ea21a3f30ade4a8abb7482fdd3b6eaaba7a,lon Zakai <alonzakai@gmail.com>, 2015-12-07 13:59:59 -0800, , emit function table call wasm2asm,,
4590,43ddf341c47350db98618c49a5d0acb0af6960ab,lon Zakai <alonzakai@gmail.com>, 2015-12-06 18:00:38 -0800, , coerce return wasm2asm,,
4591,79d04e7fd2fc6a09f2318e227b1d68bfd3bc0325,lon Zakai <alonzakai@gmail.com>, 2015-12-06 17:58:04 -0800, , sign wasm2asm,,
4592,095de9bebfff3e609cfeddd57248a0b6f74b5663,lon Zakai <alonzakai@gmail.com>, 2015-12-06 17:55:15 -0800, , coerce load wasm2asm,,
4593,52c8004d2b5c7bbd059ee36089e5724498933fc5,lon Zakai <alonzakai@gmail.com>, 2015-12-06 17:47:09 -0800, , emit heap view wasm2asm,,
4594,7efb88f9806799357f026dd15ffe28e898bf283d,lon Zakai <alonzakai@gmail.com>, 2015-12-06 16:15:27 -0800, , emit use asm wasm2asm,,
4595,72bca2037dd1699132e34c17d4b55ba29bafacf6,lon Zakai <alonzakai@gmail.com>, 2015-12-06 16:11:58 -0800, , verify wasm2asm emits valid,,
4596,3e5ee789acecd01c092d9c834530f3ee2bf382c8,lon Zakai <alonzakai@gmail.com>, 2015-12-06 14:17:10 -0800, , handle nested block return wasm2asm,,
4597,7fd4379192eb8d1296373ff454ea643f1b147fa0,lon Zakai <alonzakai@gmail.com>, 2015-12-06 10:53:52 -0800, , statable,,
4598,fa27379216ea90f1a1c80ffbdc6d83307c3474ee,lon Zakai <alonzakai@gmail.com>, 2015-12-06 10:52:09 -0800, , ensure branch statement,,
4599,34e45ae6426706ae31c4df8e0b36a4d14ea1f682,lon Zakai <alonzakai@gmail.com>, 2015-12-06 10:48:18 -0800, , fix if_else return value wasm2asm,,
4600,1585a63c8846eef56b95f076be2ffe2f7e2f15da,lon Zakai <alonzakai@gmail.com>, 2015-12-05 22:08:50 -0800, , fix label,,
4601,5c3a102d7476b2200787aa66a84175bb47862c36,lon Zakai <alonzakai@gmail.com>, 2015-12-05 21:25:50 -0800, , avoid unnecessary return,,
4602,9722b016a63726cc790fb3db38d7bb7503c9bf27,lon Zakai <alonzakai@gmail.com>, 2015-12-05 21:17:15 -0800, , use flattenappend top level function,,
4603,a7a20cc4a0323ebd4743da5219650cc139264d3a,lon Zakai <alonzakai@gmail.com>, 2015-12-05 21:12:48 -0800, , handle negative zero wasm2asm,,
4604,0f592cc75ce20168a76264a76ed8dd62d7d00885,lon Zakai <alonzakai@gmail.com>, 2015-12-05 20:20:06 -0800, , fix wasm2asm switch,,
4605,1cdd8c414e3eeef6b69a4016ef23d639ce33cdee,lon Zakai <alonzakai@gmail.com>, 2015-12-05 20:11:38 -0800, , flattenappend,,
4606,51f4b2c655ff868f139b3e38d14d1f9721c44c68,lon Zakai <alonzakai@gmail.com>, 2015-12-05 19:59:19 -0800, , use visitandassign place,,
4607,29ced06333527018db02cecdfae9b4761326da25,lon Zakai <alonzakai@gmail.com>, 2015-12-05 19:57:40 -0800, , fix binary wasm2asm,,
4608,4752e205dc84df8b41cd6dbc7282f85a38a89e8e,lon Zakai <alonzakai@gmail.com>, 2015-12-05 19:40:30 -0800, , coerce call argument wasm2asm,,
4609,2b38d9587a5dff98f918ccf7d1112e8db2b357fe,lon Zakai <alonzakai@gmail.com>, 2015-12-05 18:04:27 -0800, , start fix invalid name wasm2asm,,
4610,538e2d9813dd46e76aa226143b978f2b1acfb8e6,lon Zakai <alonzakai@gmail.com>, 2015-12-05 17:53:36 -0800, , call coercion wasm2asm,,
4611,b2812d358ef291cee41f4670d2a0622876c5b113,lon Zakai <alonzakai@gmail.com>, 2015-12-05 15:02:43 -0800, , flatten block wasm2asm,,
4612,730c770784cc83922bcfdf43fe04064319d191d5,lon Zakai <alonzakai@gmail.com>, 2015-12-05 14:57:10 -0800, , use breakresults break,,
4613,3ca8dd6de1093d67fd9eb76c6c0da823cf39c5a8,lon Zakai <alonzakai@gmail.com>, 2015-12-05 13:33:56 -0800, , fix signing wasm2asm comparison,,
4614,e1ad2c5541e3e9e8b00c387d7aa072a6b76e3008,lon Zakai <alonzakai@gmail.com>, 2015-12-05 13:32:48 -0800, , add makesigning method,,
4615,05684cead0dfa8c553d1bed38a5b8746b45e0dec,lon Zakai <alonzakai@gmail.com>, 2015-12-05 13:13:55 -0800, , fix asm double wasm2asm,,
4616,41ff4225d80f881f42fd9daf8cc7d5ba804238f2,lon Zakai <alonzakai@gmail.com>, 2015-12-05 13:13:35 -0800, , add wasm2asm,,
4617,dca96ba53339695ea4131d374cee00e916b0ac70,lon Zakai <alonzakai@gmail.com>, 2015-12-05 12:22:51 -0800, , add wip unit.wast testcase,,
4618,34a8ec55d8bb2cfa63f0a3738426503d4350c32c,lon Zakai <alonzakai@gmail.com>, 2015-12-05 12:21:00 -0800, , pretty print wasm2asm debug,,
4619,440894df858f8f408352d9a2e52840a992d9b537,lon Zakai <alonzakai@gmail.com>, 2015-12-05 12:20:49 -0800, , fix demotefloat64 wasm2asm,,
4620,164805eb14c4ecdad1088cf92f241509552a85ec,lon Zakai <alonzakai@gmail.com>, 2015-12-05 12:16:02 -0800, , refactor call add callindirect wasm2asm,,
4621,9024b061cbf4609a3925bfd0100a6a5734ce9d92,lon Zakai <alonzakai@gmail.com>, 2015-12-05 10:53:09 -0800, , switch wasm2asm,,
4622,473ea1f21189c413ebc81f3f4d5b75ab3064ef8c,lon Zakai <alonzakai@gmail.com>, 2015-12-04 22:20:00 -0800, , unaries wasm2asm,,
4623,baf52c53ae9af1f55012e4b31ea6c32aeb639c86,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:54:02 -0800, , rename file,,
4624,e72f45c46d7f0416dda883c9ba35cd3f62feb7be,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:52:59 -0800, , add another wasm2asm testcase,,
4625,23f28802796080813f0e806248a91a9ad5fc6275,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:40:14 -0800, , add first working wasm2asm testcase,,
4626,56c1189004dbfa1713dfe418c322906403402d60,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:35:22 -0800, , infrastructure wasm2asm testing,,
4627,315e543f60541284af52983f10eabc4172ca8937,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:08:22 -0800, , statement,,
4628,1dc1d8a7958c85d4768afa1abcc4f2706510bee1,lon Zakai <alonzakai@gmail.com>, 2015-12-04 21:00:16 -0800, , wasm2asm fix,,
4629,19109e4228c2687427257f06f80b19f3c95e1642,lon Zakai <alonzakai@gmail.com>, 2015-12-04 20:45:47 -0800, , return result block,,
4630,6c37ba0c87208cf0e1a5f3a84ba9df26a93aab9f,lon Zakai <alonzakai@gmail.com>, 2015-12-04 20:45:21 -0800, , rename temp file,,
4631,eb9ec0570b19dd58ef1cd7f2ab64254c2b28539b,lon Zakai <alonzakai@gmail.com>, 2015-12-04 20:39:46 -0800, , fix wasm2asm store,,
4632,ed4e14a5fc0f928db29690b35c06ada80ef68102,lon Zakai <alonzakai@gmail.com>, 2015-12-04 17:58:22 -0800, , add return non expression case wasm2asm,,
4633,f81abd08214a17e257d08c24408ff395b919e2dc,lon Zakai <alonzakai@gmail.com>, 2015-12-04 17:54:19 -0800, , fix scanwalk scopedtemp wasm2asm,,
4634,a834d6e9523d65710c09cd61e5d95c1a2a5a8d34,lon Zakai <alonzakai@gmail.com>, 2015-12-04 17:35:27 -0800, , start handle f32 wasm2asm,,
4635,396d4c0466819235464f379d19f93399121400da,lon Zakai <alonzakai@gmail.com>, 2015-12-04 17:25:17 -0800, , start building wasm2asm,,
4636,194f8a85f2913c04063347b756f923dc54ec5cfc,lon Zakai <alonzakai@gmail.com>, 2015-12-04 17:25:09 -0800, , wasm2asm fix,,
4637,3e1bb693f27039d308d941c1399ff920fa10aae7,lon Zakai <alonzakai@gmail.com>, 2015-12-04 16:31:28 -0800, , handle function whose entire body expression,,
4638,ef4553db21e7e93fb82b375df4d32feb7f3f5915,lon Zakai <alonzakai@gmail.com>, 2015-12-04 16:27:22 -0800, , statement,,
4639,f646dbde5e485c88dd904b95d962e1b8674395d5,lon Zakai <alonzakai@gmail.com>, 2015-12-04 16:20:04 -0800, , get wasm2asm start printing,,
4640,0b468697da93e7495ecd2a22c89509d271ed4c02,lon Zakai <alonzakai@gmail.com>, 2015-12-04 16:04:41 -0800, , fix params,,
4641,1bc7f6017c343335b0221124dda6c3434b170ad0,lon Zakai <alonzakai@gmail.com>, 2015-12-04 16:01:37 -0800, , fix free,,
4642,3a5fe5c481ba2b2424a97e58820d3b5285c34c1b,lon Zakai <alonzakai@gmail.com>, 2015-12-04 15:58:58 -0800, , get wasm2asm building,,
4643,5b062214c3696cb2a9d1ac3a782b9380d08fbb64,lon Zakai <alonzakai@gmail.com>, 2015-12-04 15:46:38 -0800, , wasm2asm progress,,
4644,016ba0d2f6d078b133dec713987c663c937f7de6,lon Zakai <alonzakai@gmail.com>, 2015-12-04 15:25:25 -0800, , fix continue logic wasm2asm,,
4645,15d52de57ac98e822abcef0fa5b06d58335d59ac,lon Zakai <alonzakai@gmail.com>, 2015-12-04 15:16:42 -0800, , wasm2asm fix,,
4646,3d9dd361a2d7f5d3a26d0c95ea9f7c6cdd502ceb,lon Zakai <alonzakai@gmail.com>, 2015-12-04 14:31:23 -0800, , use br_if loop,,
4647,3f57e66627adff9e6ff5ef4ce4533f69b37e57c2,lon Zakai <alonzakai@gmail.com>, 2015-12-03 18:08:45 -0800, , wasm2asm fix,,
4648,03c06d780abcd463375a6fb2dd41a61a084faf13,lon Zakai <alonzakai@gmail.com>, 2015-12-03 18:07:45 -0800, , fix wasm2asm,,
4649,0d2c26a5578447097d061a68ebaa6cd07b32d688,lon Zakai <alonzakai@gmail.com>, 2015-12-03 17:59:38 -0800, , start wasm2asm tool,,
4650,be0ddfa9844389df8956f30528a021dc194d7a5a,lon Zakai <alonzakai@gmail.com>, 2015-12-03 17:53:22 -0800, , update spec test,,
4651,e7707396ea86ded822848b0fb40b8b1180ac4a84,lon Zakai <alonzakai@gmail.com>, 2015-12-01 16:17:19 -0800, , refactoring wasm2asm arags local,,
4652,e0cff3c71ffa5683173f968641bd78e6014cd5e3,lon Zakai <alonzakai@gmail.com>, 2015-12-01 15:55:35 -0800, , implement gettemp freetemp,,
4653,10ed2e48ef88dafc347f17ebeb07191be261913f,lon Zakai <alonzakai@gmail.com>, 2015-12-01 15:15:17 -0800, , finish first pas wasm2asm,,
4654,fec53d40e6cbd7948ca1a9fb86e3699c6ac276c8,lon Zakai <alonzakai@gmail.com>, 2015-12-01 15:07:02 -0800, , wasm2asm progress,,
4655,39360bab029b18aeb82ba13e5c558d5385787d2e,lon Zakai <alonzakai@gmail.com>, 2015-12-01 14:26:44 -0800, , update spec test interpreter new spectest module name,,
4656,9b3e915cb4e8bde6c371fcbe7dbfac1684fc0f7b,lon Zakai <alonzakai@gmail.com>, 2015-12-01 10:54:30 -0800, , wasm.js import refactoring temporary flattening import native wasm,,
4657,2f724fe14e6ad05da26ba918a826466091bc3a20,lon Zakai <alonzakai@gmail.com>, 2015-11-30 15:54:15 -0800, , limit check.py error output,,
4658,754654a7e261ca64bcbd2e9389e979e161862fb5,lon Zakai <alonzakai@gmail.com>, 2015-11-30 15:21:07 -0800, , spec test update,,
4659,22ad6ab514be34b586aea7ada24f3c3917e83ccc,lon Zakai <alonzakai@gmail.com>, 2015-11-29 21:52:52 -0800, , asm checking,,
4660,587b3b9573c503c32ea09bb702d894a33217798d,lon Zakai <alonzakai@gmail.com>, 2015-11-29 21:10:56 -0800, , refactor wasm.js method add testing,,
4661,7a0879dc88c49b38b75e8fc61d1f65570380fafc,lon Zakai <alonzakai@gmail.com>, 2015-11-29 13:34:12 -0800, , use wasm parser method efault,,
4662,00a1f43f3c6572a8d7d5a4e71f4e4e49f691be9e,lon Zakai <alonzakai@gmail.com>, 2015-11-29 11:22:48 -0800, , handle memory,,
4663,ddb9959668e64b4bc81153407aef679fc352baaa,lon Zakai <alonzakai@gmail.com>, 2015-11-29 10:48:54 -0800, , apply mapped globals wasm.js asm2wasm output whether done client ahead time,,
4664,f1cb59bda5688f761fadad997bda18658bf9a32c,lon Zakai <alonzakai@gmail.com>, 2015-11-28 21:35:48 -0800, , readme fix,,
4665,b2aef8cfb300f5095486e66c59cf4fd0dd7bf320,lon Zakai <alonzakai@gmail.com>, 2015-11-28 21:34:52 -0800, , readme update,,
4666,b7967131b07daca8826945828c3fd155e3889ba6,lon Zakai <alonzakai@gmail.com>, 2015-11-28 20:50:16 -0800, , fix wasm.js expression parsing global mapping,,
4667,d8f258e8e74b17d06ee7d94fc7c4dd3165819f0d,lon Zakai <alonzakai@gmail.com>, 2015-11-28 20:07:28 -0800, , careful converting double ints asm2wasm,,
4668,37b7e93a71e1a51fcb826cb2bce88f47bd396674,lon Zakai <alonzakai@gmail.com>, 2015-11-28 19:11:47 -0800, , enable wasm parser test binaryen method,,
4669,5c19367f08d59d0edb17f7acdafe122e1d10e2a6,lon Zakai <alonzakai@gmail.com>, 2015-11-28 19:02:38 -0800, , optionally emit mappedglobals asm2wasm use help parsing expression,,
4670,2d43e52b3ae1589d0f3127373e92a689e651ed33,lon Zakai <alonzakai@gmail.com>, 2015-11-28 15:25:42 -0800, , prepare test parsing wasm.js,,
4671,b4a8d4f3e58426e3807f7f4f5d1e983ee2737c03,lon Zakai <alonzakai@gmail.com>, 2015-11-28 15:14:36 -0800, , work parsing wasm.js,,
4672,f30c01daf0375dee57d0d88896cad1c3dbd59db8,lon Zakai <alonzakai@gmail.com>, 2015-11-28 15:14:13 -0800, , use new arraybuffer,,
4673,bbefe366f4d585ae1103c59b3c20a3f1dfc9f225,lon Zakai <alonzakai@gmail.com>, 2015-11-28 14:15:45 -0800, , support interpreting wasm either asm2wasm wasm parser wasm.js,,
4674,d98de7569efadb1c654cd53c6404f40b15ad7ae7,lon Zakai <alonzakai@gmail.com>, 2015-11-28 14:08:55 -0800, , using native wasm support need merge written data mem init wasm provides,,
4675,6d36e9640efa7bbefc05e4db0fc6c97d79053c9b,lon Zakai <alonzakai@gmail.com>, 2015-11-28 12:17:52 -0800, , refactor wasm.js able support multiple wasm loading method,,
4676,86491ff1fb2a7bebc357b28db74385785c0644ef,lon Zakai <alonzakai@gmail.com>, 2015-11-27 20:18:51 -0800, , wasm2asm progress,,
4677,a6c2f37ca6b0f1031ca706904766a836e1ea5668,lon Zakai <alonzakai@gmail.com>, 2015-11-27 20:10:27 -0800, , wasm2asm progress,,
4678,8ac3bc71809fddadf14bb9cbedcd2d9f87fcb09c,lon Zakai <alonzakai@gmail.com>, 2015-11-27 20:03:45 -0800, , comment,,
4679,60b6bf5509e56a96b9498eae9b8f629b8ccc58a8,lon Zakai <alonzakai@gmail.com>, 2015-11-27 19:05:48 -0800, , handle default printing switch,,
4680,fafb8ad3b144bb84282004689fcd91f332f0ae78,lon Zakai <alonzakai@gmail.com>, 2015-11-27 19:05:36 -0800, , handle empty block parser,,
4681,013c4987d4d14047aef036188d8d7bcea693c1cf,lon Zakai <alonzakai@gmail.com>, 2015-11-27 18:56:13 -0800, , ensure memory initialized native shell,,
4682,e7461ed17e5f0cc9e49ada34b0fb340dce8e9b49,lon Zakai <alonzakai@gmail.com>, 2015-11-27 16:39:05 -0800, , unify convert compare unary binary pre pas expression parser function type fix new assertion notice missing type,,
4683,26842a8da165276fd9f38dc4bab2267269c237a0,lon Zakai <alonzakai@gmail.com>, 2015-11-27 13:18:09 -0800, , fix makecall,,
4684,6f91d9e310b206ae801768f45f4a82aa647df1c6,lon Zakai <alonzakai@gmail.com>, 2015-11-26 21:22:29 -0800, , wasm2asm progress,,
4685,a7bfbd7ab12aca7d1592e04165c3d0ec00c962e8,lon Zakai <alonzakai@gmail.com>, 2015-11-26 20:24:35 -0800, , wasm2asm progress,,
4686,05d212cb44ec58c83f714338fb9c5089373a581e,lon Zakai <alonzakai@gmail.com>, 2015-11-26 20:10:32 -0800, , wasm2asm progress,,
4687,7ea9b53194e78fc6655dfca8f69f3f8ef84d9939,lon Zakai <alonzakai@gmail.com>, 2015-11-26 19:45:44 -0800, , wasm2asm progress,,
4688,6b58eeb25fd37489d57a997d33619f773fd01fef,lon Zakai <alonzakai@gmail.com>, 2015-11-26 15:32:13 -0800, , wasm2asm progress,,
4689,d029c2fe9570c04060e3586eb3369e778200be57,lon Zakai <alonzakai@gmail.com>, 2015-11-26 15:05:09 -0800, , wasm2asm progress,,
4690,3aa164ab9a7b447f6c5f52e5ac4d0faf65e68eac,lon Zakai <alonzakai@gmail.com>, 2015-11-26 14:45:07 -0800, , wasm2asm progress,,
4691,dc42799c04f9c7efdbc01086b4f48dc5b1985777,lon Zakai <alonzakai@gmail.com>, 2015-11-26 14:14:56 -0800, , wasm2asm progress,,
4692,65d2cd95a07db06be01242c5be705c52aba98543,lon Zakai <alonzakai@gmail.com>, 2015-11-25 21:59:56 -0800, , wasm2asm progress,,
4693,e0174f1c03175a687265815da32f71266eb64521,lon Zakai <alonzakai@gmail.com>, 2015-11-25 20:34:29 -0800, , wasm2asm progress,,
4694,0cffb67b5dad635115e0687832ad7766479d24de,lon Zakai <alonzakai@gmail.com>, 2015-11-25 18:10:59 -0800, , wasm2asm progress,,
4695,48823c099b0418b975c9a7c0c3ea042cd5077a94,lon Zakai <alonzakai@gmail.com>, 2015-11-24 22:08:56 -0800, , wasm2asm progress,,
4696,f981a0b24e53464762022ac052521f667b9f66dd,lon Zakai <alonzakai@gmail.com>, 2015-11-24 21:18:23 -0800, , wasm2asm progress,,
4697,b407d091d729b03d94c62cc788cb09ea7b0b120a,lon Zakai <alonzakai@gmail.com>, 2015-11-24 20:25:08 -0800, , wasm2asm progress,,
4698,dbe75f327b170a714a11b70f3076617fab03d5f5,lon Zakai <alonzakai@gmail.com>, 2015-11-24 20:06:50 -0800, , wasm2asm progress,,
4699,78560acbd0da7238cbf619ada67e4ad98d17605a,lon Zakai <alonzakai@gmail.com>, 2015-11-24 17:56:39 -0800, , initial work wasm2asm,,
4700,a1d8724f01ad324754cfbab6a175ad47001b87a9,lon Zakai <alonzakai@gmail.com>, 2015-11-24 17:49:04 -0800, , add destat emscripten optimizer,,
4701,9734a1899224de1d29ca2174a372d1870694642f,lon Zakai <alonzakai@gmail.com>, 2015-11-24 16:05:39 -0800, , update spec test,,
4702,83cd8a4e2618e2883c97fc3a2fe58b544f8bf778,lon Zakai <alonzakai@gmail.com>, 2015-11-24 15:07:47 -0800, , create handle allocation element,,
4703,e97c5c94c14e83ff7535bafb80a9ae0bae332030,lon Zakai <alonzakai@gmail.com>, 2015-11-23 16:34:53 -0800, , mention pass binaryen shell description,,
4704,f904394c1a9eff5aa8607e7409aebfd8e3ad1352,lon Zakai <alonzakai@gmail.com>, 2015-11-23 11:27:56 -0800, , design principle section,,
4705,7d0250a6e0f6a656637abce0a29cb4618eeedd68,lon Zakai <alonzakai@gmail.com>, 2015-11-22 21:54:03 -0800, , support memory growth wasm.js native wasm integration code work memory growth shared asm2wasm shell,,
4706,6e83fe2f9e9fdfb88fc9a62bb31c1f79768aa31a,lon Zakai <alonzakai@gmail.com>, 2015-11-22 21:50:42 -0800, , refactor memory growth code central location,,
4707,9db247422037009967c3ef4657b231477a76cb44,lon Zakai <alonzakai@gmail.com>, 2015-11-22 21:39:41 -0800, , refactor asm2wasm proprocessing shared location,,
4708,3365cb2f426345370ce7caf03d77be64a38edc0a,lon Zakai <alonzakai@gmail.com>, 2015-11-22 16:17:55 -0800, , fix testcase,,
4709,4504594bdf832a24d19ae3a70019bb5242422e0e,lon Zakai <alonzakai@gmail.com>, 2015-11-22 16:11:26 -0800, , fix case printing,,
4710,d504e759a6d343d321128d1f98be683f80ccda87,lon Zakai <alonzakai@gmail.com>, 2015-11-22 15:41:50 -0800, , another check.py fix,,
4711,5fc4bde436bc51be040abb7375b61c5d106a6a44,lon Zakai <alonzakai@gmail.com>, 2015-11-22 15:40:26 -0800, , fix check.py,,
4712,f5beae2835377e452c95c5b64a90a75b97b3234e,lon Zakai <alonzakai@gmail.com>, 2015-11-22 15:39:06 -0800, , emit constant instead callimport type necessary,,
4713,45a011e1071ba511b3deee134219dd2f9eb6c8aa,lon Zakai <alonzakai@gmail.com>, 2015-11-22 15:17:23 -0800, , improve interpreter error printing,,
4714,295c4718d924f5d31e1bd25fe63add1833cc9c98,lon Zakai <alonzakai@gmail.com>, 2015-11-22 14:57:50 -0800, , remove import calling spec interpreter,,
4715,0313ab7a9816481bbdcbdb902710f1e3fbd2ca9e,lon Zakai <alonzakai@gmail.com>, 2015-11-22 14:57:35 -0800, , print logging print stderr,,
4716,5b590e4bbba075bba5fe87c44986939f26816549,lon Zakai <alonzakai@gmail.com>, 2015-11-22 14:41:30 -0800, , add remove import pas,,
4717,860e52c64da5200676d4226a2e48c849945f6687,lon Zakai <alonzakai@gmail.com>, 2015-11-22 14:37:21 -0800, , refactor pas test,,
4718,ac1d0f855f3fde65753aeea546c6781dbfd331ba,lon Zakai <alonzakai@gmail.com>, 2015-11-22 10:34:50 -0800, , fix detectsign recursive call need minified fround,,
4719,f9764009d8df47eeddf9e542705bb6a5e7d397b0,lon Zakai <alonzakai@gmail.com>, 2015-11-22 10:11:05 -0800, , return optimized build,,
4720,5288a513d3075469e130349d93b7b5b9dd94a616,lon Zakai <alonzakai@gmail.com>, 2015-11-22 10:06:47 -0800, , special case floor sqrt asm.js overloaded float double,,
4721,02c94097fcff0aef304e7b4b46fb2d2d81c9e503,lon Zakai <alonzakai@gmail.com>, 2015-11-22 10:00:58 -0800, , fix import merging logi,,
4722,9b5be208da3c32658c5aa6487c5f6d91039b063d,lon Zakai <alonzakai@gmail.com>, 2015-11-21 22:20:00 -0800, , handle indirect call float,,
4723,14ad84c09bd93958cc8fcfa4a38bbcc7e7267169,lon Zakai <alonzakai@gmail.com>, 2015-11-21 22:10:43 -0800, , handle f32,,
4724,c750ead5ac06a906d17756ca41420d4ca649f84d,lon Zakai <alonzakai@gmail.com>, 2015-11-21 21:55:05 -0800, , add minified output test,,
4725,89dd1fc5eaf9b19038d98388b6d3082f37c1fcf1,lon Zakai <alonzakai@gmail.com>, 2015-11-21 21:50:30 -0800, , notice minified fround function params local,,
4726,3ab1d2c459ed6a235ba04c4ec70ff654530a7de9,lon Zakai <alonzakai@gmail.com>, 2015-11-21 21:16:27 -0800, , spacing,,
4727,021e145f74b217aa83d088d3da32692c79fcc80d,lon Zakai <alonzakai@gmail.com>, 2015-11-21 20:47:00 -0800, , simplify wasm.js loading code since embedded use outside module,,
4728,54c460ea4e4d23cdba56c2d5f1d3407cf5f676d9,lon Zakai <alonzakai@gmail.com>, 2015-11-21 20:30:16 -0800, , clean import double space,,
4729,ec8eaa4cca92eaa64fa8179bc920dc1b5d65e7fa,lon Zakai <alonzakai@gmail.com>, 2015-11-21 20:05:47 -0800, , clean printing,,
4730,8d146b65fe461fbf3fb3d04fd785cc5af4484b30,lon Zakai <alonzakai@gmail.com>, 2015-11-21 19:56:49 -0800, , update test,,
4731,c7140e7bd23a36c9a8e8f869617c2f8e55d1f780,lon Zakai <alonzakai@gmail.com>, 2015-11-21 19:54:50 -0800, , fix loop,,
4732,9eefdcb1adea44b7c9b05e767f98ed5fef8f5401,lon Zakai <alonzakai@gmail.com>, 2015-11-21 19:48:46 -0800, , update test,,
4733,43df3fc2ff0252bfd2343c2b023e0e0bf6d8a7bf,lon Zakai <alonzakai@gmail.com>, 2015-11-21 19:45:12 -0800, , emit automatic continue loop since wasm loop loop automatically,,
4734,ae28357303c157015d37bd730a6949613c3f3da5,lon Zakai <alonzakai@gmail.com>, 2015-11-21 19:35:24 -0800, , loop automatically loop,,
4735,24398d3d05d7f1276e6c464a7a20626a9bd35fdc,lon Zakai <alonzakai@gmail.com>, 2015-11-21 18:44:30 -0800, , prepare native wasm suport wasm.js,,
4736,46a76c03e09f3854d76aba0f076a01ce4e0441cc,lon Zakai <alonzakai@gmail.com>, 2015-11-21 17:06:32 -0800, , refactor memory allocation code create buffer asm.js link,,
4737,8b77837812708b1ca87b8b38ab1a6a3d243dd0aa,lon Zakai <alonzakai@gmail.com>, 2015-11-21 10:03:28 -0800, , if_else return value doe,,
4738,bf599213828a42ee1723305abcba6569751298f0,lon Zakai <alonzakai@gmail.com>, 2015-11-20 21:47:40 -0800, , readme,,
4739,d5201343e9f494c14ecc730e632fddd5a037731e,lon Zakai <alonzakai@gmail.com>, 2015-11-20 21:46:36 -0800, , update readme passing emscripten test suite,,
4740,09025d02feee02e07c8df1871d8a1c51ceed902e,lon Zakai <alonzakai@gmail.com>, 2015-11-20 21:46:03 -0800, , minified wasm.js build,,
4741,386296c58bf9222c36affe7de8d7b27833cf078a,lon Zakai <alonzakai@gmail.com>, 2015-11-20 21:33:56 -0800, , detect minified fround detecttype,,
4742,471489a264a386d1a9cd08b3dfc955c0e2e44247,lon Zakai <alonzakai@gmail.com>, 2015-11-20 21:33:30 -0800, , function debugging interpreter,,
4743,e7856871eac50658ed648e4a7f36dcf0e7dbeb43,lon Zakai <alonzakai@gmail.com>, 2015-11-20 20:55:56 -0800, , add test,,
4744,7389fd34ad5addd48daf775c67e365220b2b06ba,lon Zakai <alonzakai@gmail.com>, 2015-11-20 20:55:07 -0800, , handle breaking labeled block,,
4745,1f84970eab7c99122e50d475c4328ef1e76b7d53,lon Zakai <alonzakai@gmail.com>, 2015-11-20 20:47:48 -0800, , handle label block asm2wasm,,
4746,02d9f159c96f46730c6a2f472521b11ec537a26c,lon Zakai <alonzakai@gmail.com>, 2015-11-20 20:27:16 -0800, , detect minified fround,,
4747,001f91409ce55cc416565e2e28b3a0d4a171d728,lon Zakai <alonzakai@gmail.com>, 2015-11-20 20:11:12 -0800, , detect seq sign,,
4748,f54b8332c7fd00cc7b431b3aae2cd015e0cf333f,lon Zakai <alonzakai@gmail.com>, 2015-11-20 15:55:09 -0800, , refactor wasm.js integration code method,,
4749,29200f6d693af396385013e89a7b048067302393,lon Zakai <alonzakai@gmail.com>, 2015-11-20 15:54:52 -0800, , wasm.js,,
4750,7e236af057510394f1572a93da86b16f85035784,lon Zakai <alonzakai@gmail.com>, 2015-11-20 10:26:24 -0800, , validate function result type,,
4751,38454808a9e7d7c69458579ccda031486cc73bb0,lon Zakai <alonzakai@gmail.com>, 2015-11-20 10:19:43 -0800, , validate unary type,,
4752,0c6095401fe1305774b9d70f72d65c3fd44f6d42,lon Zakai <alonzakai@gmail.com>, 2015-11-20 10:14:58 -0800, , add printing module validity test,,
4753,b974e9351405880fe1d021e3ae7fda92f1b3bb4f,lon Zakai <alonzakai@gmail.com>, 2015-11-20 09:58:10 -0800, , br_if,,
4754,39891e0c123103ceef18150c9d1145924dced2bf,lon Zakai <alonzakai@gmail.com>, 2015-11-20 09:57:54 -0800, , update spec test,,
4755,9c55ad5d1c7c4110bab82e412a510ca39d58256f,lon Zakai <alonzakai@gmail.com>, 2015-11-19 21:00:20 -0800, , implement growmemory wasm.js,,
4756,58c138333ade389a592083b095093107d5e935f3,lon Zakai <alonzakai@gmail.com>, 2015-11-19 20:51:42 -0800, , wasm.js memory growth fix,,
4757,c8ae18ee624867d1d7598a9a936ebf7c381903ae,lon Zakai <alonzakai@gmail.com>, 2015-11-19 20:35:53 -0800, , work towards memory growth asm2wasm code,,
4758,f7070e21f92a2fedb61bdc9fa1f28a092852d7aa,lon Zakai <alonzakai@gmail.com>, 2015-11-19 17:46:48 -0800, , start parse asm.js memory growth code,,
4759,c233b37837dd8a1a768741b19ab8221384d4441e,lon Zakai <alonzakai@gmail.com>, 2015-11-19 10:50:08 -0800, , update spec test,,
4760,72df9069a59ffcdfe88bcb5caa8bec87d3f4de93,lon Zakai <alonzakai@gmail.com>, 2015-11-19 10:49:56 -0800, , missing word,,
4761,b800f24ee3bc90fcd22b55fb04dd4e30de3510d5,lon Zakai <alonzakai@gmail.com>, 2015-11-19 10:49:47 -0800, , stricted break checking per latest spec update,,
4762,a2505ffa27be948780e3c0953ed8883f6dddc1e5,lon Zakai <alonzakai@gmail.com>, 2015-11-18 21:17:47 -0800, , label asserts,,
4763,d9324eaf694af686fe81f05847dac640875b5499,lon Zakai <alonzakai@gmail.com>, 2015-11-18 21:17:17 -0800, , use label switch asm2wasm,,
4764,ebb4cc7d0c655975cfc7b5538ed61bd09fd9a507,lon Zakai <alonzakai@gmail.com>, 2015-11-18 21:11:45 -0800, , add assert breaking,,
4765,fc5ee5c99bc8cdf383563c791d175da5002cb963,lon Zakai <alonzakai@gmail.com>, 2015-11-18 21:09:39 -0800, , runtime debugging wasm.js,,
4766,154a6c210d89cf4270ff32fc9c996c8d8b5de63e,lon Zakai <alonzakai@gmail.com>, 2015-11-18 18:13:23 -0800, , receive total_memory emscripten wasm.js,,
4767,5f855e559ce9e4a976951cdddfa527e26a66d242,lon Zakai <alonzakai@gmail.com>, 2015-11-18 17:39:18 -0800, , update test,,
4768,b9fe7a26991c6baead28716f7ca37bc94ec68521,lon Zakai <alonzakai@gmail.com>, 2015-11-18 17:36:33 -0800, , fix i32,,
4769,55f0836d239e5580eeed10df888bef4076d323d0,lon Zakai <alonzakai@gmail.com>, 2015-11-18 17:35:33 -0800, , update test,,
4770,1bdbc52f2949c427c92da74575d57b9c64a50d92,lon Zakai <alonzakai@gmail.com>, 2015-11-18 17:34:42 -0800, , handle import parsing parser,,
4771,7749b84bfaf5f7d95d22332b520ea541c6f9ae80,lon Zakai <alonzakai@gmail.com>, 2015-11-18 17:26:02 -0800, , handle overloading math.abs,,
4772,8936d78d84473b258aa1b0245d2f0f22c79643f4,lon Zakai <alonzakai@gmail.com>, 2015-11-18 16:37:43 -0800, , stop working around import issue spec interpreter,,
4773,0b02cbdc0af0a42032b35344bc2f8d3f768766db,lon Zakai <alonzakai@gmail.com>, 2015-11-18 16:22:26 -0800, , use builtin type mark callimports directly need coercion understood,,
4774,262bf6fbddf19eb1b365de91aab36c7d4578c135,lon Zakai <alonzakai@gmail.com>, 2015-11-18 16:06:12 -0800, , start special case asm math builtins,,
4775,a3c2d97c0d8c0f2d33ea9e381e98d9dec8172d63,lon Zakai <alonzakai@gmail.com>, 2015-11-18 16:05:54 -0800, , add interpreter debugging,,
4776,fda902dce36c78fe358b48252af5e0e1e4b2ad75,lon Zakai <alonzakai@gmail.com>, 2015-11-18 13:55:14 -0800, , handle debugger keyword asm2wasm,,
4777,98c318e18c6fc43e851429a2a5e43bac16ae1ee1,lon Zakai <alonzakai@gmail.com>, 2015-11-18 13:48:38 -0800, , handle negative zero properly asm2wasm,,
4778,913114cd027722b8576c83f2bb334701c0b9a518,lon Zakai <alonzakai@gmail.com>, 2015-11-18 11:45:26 -0800, , handle f32 params wasm,,
4779,876495a6c436a0a0fe6980e3dce49d3a7f0a5cf6,lon Zakai <alonzakai@gmail.com>, 2015-11-18 11:43:26 -0800, , heapf32 f32 heap need cast f64s writing,,
4780,cb41c9a8b11970a01e3f2f1eb2d8d38e29e7489b,lon Zakai <alonzakai@gmail.com>, 2015-11-18 11:32:15 -0800, , add precise float test,,
4781,25804b0a505beda9efb0b0fa2e8a1bde7e401042,lon Zakai <alonzakai@gmail.com>, 2015-11-18 11:30:46 -0800, , store f32 properly wasm,,
4782,c4e71c7e1a18594735cb49b013dd42d9f5826e23,lon Zakai <alonzakai@gmail.com>, 2015-11-18 10:57:41 -0800, , clean coercion handling code make work heapf32,,
4783,47add7947265b99c6c68add694e6ae70911f4f4e,lon Zakai <alonzakai@gmail.com>, 2015-11-18 10:46:50 -0800, , fix call type based coercion modify thing automatically,,
4784,f948a0e9f1c75f3275b219100a901adb3f96083f,lon Zakai <alonzakai@gmail.com>, 2015-11-18 10:17:28 -0800, , improve interpreter debugging,,
4785,362102c3540ccbe8dc0892b34eeae26f81d3fc84,lon Zakai <alonzakai@gmail.com>, 2015-11-18 10:14:57 -0800, , mark host type,,
4786,50876c7e6893b4b86d72767dc93e3565fcb0afb9,lon Zakai <alonzakai@gmail.com>, 2015-11-18 10:10:30 -0800, , set call type post pas parser,,
4787,c988fb1a8b66f4c2241e98cbabc2068c968d6003,lon Zakai <alonzakai@gmail.com>, 2015-11-17 21:53:50 -0800, , return float wasm load float,,
4788,280936837010d75a9a8863e486e05e13b1ef964a,lon Zakai <alonzakai@gmail.com>, 2015-11-17 21:53:36 -0800, , add asserts,,
4789,a88651b6b9853c62fdc8e38948375fe894172298,lon Zakai <alonzakai@gmail.com>, 2015-11-17 21:29:55 -0800, , handle fround call coercion,,
4790,ea0015403b3695d873a2c7eabc6fcdf0641b8e2e,lon Zakai <alonzakai@gmail.com>, 2015-11-17 21:26:11 -0800, , fround improvement,,
4791,65db7e5e8f3994a7d4ca1b4e01f87eef13c7c87b,lon Zakai <alonzakai@gmail.com>, 2015-11-17 20:35:29 -0800, , handle float double conversion,,
4792,875df2b921ae704a3a820b2922ce732fc574d727,lon Zakai <alonzakai@gmail.com>, 2015-11-17 20:31:52 -0800, , parser update emscripten,,
4793,05333ef74607f88cca53723a2aa8f731d0396a91,lon Zakai <alonzakai@gmail.com>, 2015-11-17 16:27:20 -0800, , asm2wasm f64 i32 conversion fault asm.js expects,,
4794,d48bd66a54633f94b7c499c490660280ac77c6e7,lon Zakai <alonzakai@gmail.com>, 2015-11-17 16:26:40 -0800, , refine trap text,,
4795,c93a347a702e556c3ccbc517fe048577fe347e01,lon Zakai <alonzakai@gmail.com>, 2015-11-17 16:05:26 -0800, , annotate trap,,
4796,297d6048ea0c1350f7b6418084fc57ab560677a8,lon Zakai <alonzakai@gmail.com>, 2015-11-17 15:18:31 -0800, , port detectsign emscripten asm optimizer use,,
4797,eab9bb324d4a88fe94b044bf773fa27c3e842b7a,lon Zakai <alonzakai@gmail.com>, 2015-11-17 11:39:39 -0800, , return undefined wasm.js return type none,,
4798,a439812485b58cf555d02735668b53cfc5889ba4,lon Zakai <alonzakai@gmail.com>, 2015-11-17 10:40:19 -0800, , update test,,
4799,574b5add085113d7dedfa784d01e19d6ea8187fd,lon Zakai <alonzakai@gmail.com>, 2015-11-17 10:37:53 -0800, , implement function table concatenating asm table offsetting support asm function table usage without hack,,
4800,cbb918466e8acff5dfd443a8931500fe19a84ca9,F Bastien <github@jfbastien.com>, 2015-11-16 21:51:01 -0800, , create contributing.md,,
4801,9d3c3cadb3b383f64a45dbfa20d07a144ff59c8d,F Bastien <github@jfbastien.com>, 2015-11-16 21:50:22 -0800, , update readme.md license,,
4802,7aae938750a981baf4f2d3ba3b47a7a98c4ea0c8,F Bastien <github@jfbastien.com>, 2015-11-16 21:49:26 -0800, , add license file consistency repos,,
4803,a2c0146a8540d3c8485a43767172ce56dd8f8621,lon Zakai <alonzakai@gmail.com>, 2015-11-16 21:02:05 -0800, , asm_float,,
4804,689d7cf5d1c1f96a44cc614c16ee2f9cdee0ea4e,lon Zakai <alonzakai@gmail.com>, 2015-11-16 20:36:46 -0800, , support fround global constant,,
4805,8a802c8bd50e9c84646ee6b92a969a6f97a1d2f8,lon Zakai <alonzakai@gmail.com>, 2015-11-16 18:22:27 -0800, , add frem test,,
4806,c8804f12e3d37030e1b2f158d5932e0626933c89,lon Zakai <alonzakai@gmail.com>, 2015-11-16 18:22:21 -0800, , handle import return type,,
4807,df2d946238e80e2b3ef6b198301b3947e28646dd,lon Zakai <alonzakai@gmail.com>, 2015-11-16 17:55:42 -0800, , emit special call special import handle floating point remainder exists asm.js wasm,,
4808,797dd8d4119e0b02abd3ddd4d99557d8dfe591e9,lon Zakai <alonzakai@gmail.com>, 2015-11-16 17:13:09 -0800, , handle import call parent node,,
4809,ee3fb8aa23ed03593d9a1b8ef7d09c5c35377481,lon Zakai <alonzakai@gmail.com>, 2015-11-16 17:12:38 -0800, , adjust build params,,
4810,a83195692cc33020a03ec9599766bd8067ea8012,lon Zakai <alonzakai@gmail.com>, 2015-11-16 16:14:37 -0800, , udpate test,,
4811,dc22040358e467763c80c233f01a384f17d19c30,lon Zakai <alonzakai@gmail.com>, 2015-11-16 16:14:30 -0800, , add switch testcase,,
4812,f47a02e09028434fab7c094a390eaf4e87a3313e,lon Zakai <alonzakai@gmail.com>, 2015-11-16 16:11:45 -0800, , emit switch native build offset switch value,,
4813,ecc9cb452e71e22b70e9f29ad03cd7789f052251,lon Zakai <alonzakai@gmail.com>, 2015-11-16 16:10:57 -0800, , fix switch printing,,
4814,ba6c4700fd22e3c0ccfb9cb4f3bfe8af5e910993,lon Zakai <alonzakai@gmail.com>, 2015-11-16 16:10:36 -0800, , improve auto updater,,
4815,6457e86fe40f8b0ee5cfddd2685d537462ea24f9,lon Zakai <alonzakai@gmail.com>, 2015-11-16 15:36:45 -0800, , use memory growth wasm.js codebases large,,
4816,4aee30b209d5394f539af0000eb24064af11fa0c,lon Zakai <alonzakai@gmail.com>, 2015-11-16 14:35:58 -0800, , use new binaryen option emscripten,,
4817,ee74df535b0c9757642410957ac478085f6ba6ae,lon Zakai <alonzakai@gmail.com>, 2015-11-15 18:01:05 -0800, , update build flag,,
4818,46b1677c8020e20b4b27689646022090ced3c07b,lon Zakai <alonzakai@gmail.com>, 2015-11-15 14:58:56 -0800, , comment,,
4819,0fff336950b8397ae7db7081eafe075565366b25,lon Zakai <alonzakai@gmail.com>, 2015-11-15 14:54:20 -0800, , faq entry,,
4820,1f0d6fbb8a83450d52750dbe66e5255059a1b415,lon Zakai <alonzakai@gmail.com>, 2015-11-15 12:06:26 -0800, , text,,
4821,80689f9cf86724c75b5c8cab80fff808c89dee12,lon Zakai <alonzakai@gmail.com>, 2015-11-13 22:23:11 -0800, , doc,,
4822,84c8a4b2deade2ecfe0780813d976049c5e7f1fb,lon Zakai <alonzakai@gmail.com>, 2015-11-13 22:20:12 -0800, , doc,,
4823,749cd728ee33223423055aa02baeaeae61eb90a4,lon Zakai <alonzakai@gmail.com>, 2015-11-13 22:12:58 -0800, , remove unneeded emscripten optimizer.cpp file,,
4824,f08d6fbd7c24dc9dc07081c72869095dab3647ea,lon Zakai <alonzakai@gmail.com>, 2015-11-13 21:27:25 -0800, , set seq type properly asm2wasm,,
4825,514a7e8b88b727bfa0871b5df0ba362fa6b529fb,lon Zakai <alonzakai@gmail.com>, 2015-11-13 20:21:16 -0800, , add description pass,,
4826,06f34506dd1a190e3886097a528a9cdea7c834e1,lon Zakai <alonzakai@gmail.com>, 2015-11-13 18:47:05 -0800, , update readme,,
4827,2d141917e87e73e2853cbf2538e7ccacc6095041,lon Zakai <alonzakai@gmail.com>, 2015-11-13 18:44:38 -0800, , add shell test,,
4828,97b943c832dd3389b81c0896826977e0c447de28,lon Zakai <alonzakai@gmail.com>, 2015-11-12 21:49:04 -0800, , pas support,,
4829,06a9c12ea045dfb9b1dd4f4ccf959ac715d4df8a,lon Zakai <alonzakai@gmail.com>, 2015-11-13 09:10:49 -0800, , use sse2 math,,
4830,79ebd738bcfc07a8479632ff7b804e60d907880d,lon Zakai <alonzakai@gmail.com>, 2015-11-12 20:01:53 -0800, , move todos issue,,
4831,1e3caa2d4e603691e6a9b8f569cbc8e697961f12,lon Zakai <alonzakai@gmail.com>, 2015-11-12 18:09:27 -0800, , update test latest emscripten,,
4832,f80d7b23b6b9d3a335e83bf6d1cd8cc9c0fbdd25,lon Zakai <alonzakai@gmail.com>, 2015-11-12 18:04:56 -0800, , reorder check,,
4833,674c2f10a2cdb6547fc1592c2e9cb407f8fd40e6,lon Zakai <alonzakai@gmail.com>, 2015-11-12 12:55:07 -0800, , text,,
4834,3a2768127856e7113317e5d907ead6cc41f60299,lon Zakai <alonzakai@gmail.com>, 2015-11-12 12:45:34 -0800, , merge branch binaryen,,
4835,afce1de1495cc5782ec55b016d4e864b316d9920,lon Zakai <alonzakai@gmail.com>, 2015-11-12 10:18:20 -0800, , simplify find_div0s,,
4836,d226b1f67d2f42867e83e59fb362cf032b893c21,lon Zakai <alonzakai@gmail.com>, 2015-11-12 10:18:02 -0800, , readme update,,
4837,53c3592f51861d8568be66f18bafbedda44d1484,lon Zakai <alonzakai@gmail.com>, 2015-11-12 10:17:55 -0800, , max memory bit,,
4838,0cf476441af11dfec2f351a8f6cae83acd9ff7b7,lon Zakai <alonzakai@gmail.com>, 2015-11-11 21:29:49 -0800, , text,,
4839,608547e56c97592fbc0c919fc310b86890268d62,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:52:20 -0800, , faq,,
4840,10c67d791dca5db1feb388db3afa21e8077d7ff5,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:51:01 -0800, , faq movement,,
4841,1ac690c7adddebeaa4d73a96bca0153b5f92db5b,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:50:42 -0800, , faq movement,,
4842,e53badb26a1a3d2de0c7df30bb7e656299d91b21,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:49:51 -0800, , text,,
4843,d66ced45eeab6f890972a4789789164f026cb259,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:42:10 -0800, , fix,,
4844,7176e82d1e3dd728b2f36913693f31cc89fda31d,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:41:45 -0800, , fix,,
4845,17a0a9dfd614859d46d9021c71e4d7e9928573dc,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:40:57 -0800, , text,,
4846,4427bdc5a1697d1eb255cf95237856f5bc7796bf,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:39:45 -0800, , text,,
4847,a43caa75ce7293a4aea91228daf379f06817f5d8,lon Zakai <alonzakai@gmail.com>, 2015-11-11 20:38:18 -0800, , add simple example,,
4848,ed47fbc9ce48e712548d937195e0f7d333da55c4,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:54:40 -0800, , improve printing,,
4849,2e93ee803907bcea3724b67e80d44d6c02cb2d9a,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:51:18 -0800, , update env var,,
4850,dc5a2bf6f34b2eea26919b79e6ae9c020e750538,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:49:57 -0800, , update check.py,,
4851,955995a59d6ddfebd09b73d727fc0795f81a5c96,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:47:57 -0800, , text,,
4852,05185ec99098d8b0e21a20952e1df4955e40edc2,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:45:52 -0800, , update .gitignore,,
4853,ecc5ea47b7c9c8df9d7c24b32724b933f3a47c0f,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:44:49 -0800, , argument handling shell,,
4854,ed6621625b2e4c058866d31a6bf56c68e3a87c95,lon Zakai <alonzakai@gmail.com>, 2015-11-11 19:34:25 -0800, , readme update,,
4855,9349a87c141540a028633dc50a5b680f3afb2e99,lon Zakai <alonzakai@gmail.com>, 2015-11-11 18:56:13 -0800, , name,,
4856,7725a4b87feead9416e419b3c95228c4515813da,lon Zakai <alonzakai@gmail.com>, 2015-11-11 18:37:58 -0800, , comment,,
4857,e5ec713b7e404084b3fc5561849525d90d7f644b,lon Zakai <alonzakai@gmail.com>, 2015-11-11 18:01:27 -0800, , wip,,
4858,83994c9c54f7300701e1736ac0c6d8f2f5adf2c6,lon Zakai <alonzakai@gmail.com>, 2015-11-11 15:09:10 -0800, , use name fromint,,
4859,498577be5fbec6c251f71356f4e03f085c58ae34,lon Zakai <alonzakai@gmail.com>, 2015-11-11 14:51:26 -0800, , move validation side file full wasmwalker,,
4860,3a8876cbde436085f6361e93377ee96e3578e2dd,lon Zakai <alonzakai@gmail.com>, 2015-11-11 14:50:15 -0800, , validate offset parser remove hack,,
4861,15903fda75b5392df886b512bae8b8d74fafc61f,lon Zakai <alonzakai@gmail.com>, 2015-11-11 13:59:38 -0800, , allow direct access vector module object,,
4862,6002ab916590ef634edeb306a14846913a4e626a,lon Zakai <alonzakai@gmail.com>, 2015-11-11 13:55:27 -0800, , comment,,
4863,df5801fd2b8d3d128bca238d22eb19039251ffba,lon Zakai <alonzakai@gmail.com>, 2015-11-11 13:49:04 -0800, , store casemap switch pure optimization,,
4864,3bce77f4aa50b1d070b852de484256e32220ce0b,lon Zakai <alonzakai@gmail.com>, 2015-11-11 11:41:12 -0800, , break,,
4865,6cbb5943f93e0edcee676569751748547e6ee990,lon Zakai <alonzakai@gmail.com>, 2015-11-11 11:38:03 -0800, , nan fix test suite fully pass,,
4866,be42e377272dbdee8c592706bbce8753aa6539b6,lon Zakai <alonzakai@gmail.com>, 2015-11-11 11:28:48 -0800, , nan fix,,
4867,e21c014dfd50a2a0cd89b6988ccf74a48d12ad3f,lon Zakai <alonzakai@gmail.com>, 2015-11-11 10:54:12 -0800, , start handle new nan rule,,
4868,e82c94a9720f69ad689d91c811d0eb338d7b8e19,lon Zakai <alonzakai@gmail.com>, 2015-11-11 10:42:11 -0800, , remove debug print,,
4869,8c447d4e5a7d0eca389699305476727b172a33fd,lon Zakai <alonzakai@gmail.com>, 2015-11-11 10:37:51 -0800, , enable wasm shell look,,
4870,62543cf4800ae728924fe461b1e62972eeb09d00,lon Zakai <alonzakai@gmail.com>, 2015-11-11 10:13:41 -0800, , update blacklist,,
4871,3afe5626da1ef2946c66aa36c49b01932bd4f879,lon Zakai <alonzakai@gmail.com>, 2015-11-11 10:12:38 -0800, , update spec test,,
4872,1135df1ed8aade5b64c3c4ddd8944e8ed4f38644,lon Zakai <alonzakai@gmail.com>, 2015-11-09 14:09:37 -0800, , unreachable,,
4873,0cb8d3e030c9cd5c5df49d3bd513c6a8b412e5ff,lon Zakai <alonzakai@gmail.com>, 2015-11-09 14:26:49 -0800, , comment,,
4874,b0c93d1d664dca6f6269517101bfca298e495b3d,lon Zakai <alonzakai@gmail.com>, 2015-11-10 17:06:17 -0800, , restore almost spec test,,
4875,f067c29c08a6f4299e68cc34bb8e4979730dd94d,lon Zakai <alonzakai@gmail.com>, 2015-11-10 16:54:10 -0800, , update test update shift behavior latest change,,
4876,0afa7808bb7e791ba39c51f3d691a1192d8706a7,lon Zakai <alonzakai@gmail.com>, 2015-11-10 16:52:34 -0800, , update wasts,,
4877,404846caeaf2f866aeffc3523403c2272e323dac,lon Zakai <alonzakai@gmail.com>, 2015-11-09 20:15:20 -0800, , handle switch error get switch testcase passing,,
4878,0073656f9d1a0f74da798bf3b1890f94e9502517,lon Zakai <alonzakai@gmail.com>, 2015-11-09 19:47:55 -0800,1, gcc workaround,,
4879,78e71886c5ca119ffd16b0baed9bfa511764172f,lon Zakai <alonzakai@gmail.com>, 2015-11-09 19:41:03 -0800, , wip switch work,,
4880,b6ea5a37e0ec47df1bafed35c629d46fe98d613f,lon Zakai <alonzakai@gmail.com>, 2015-11-09 19:21:09 -0800, , handle empty switch temp blacklisting,,
4881,b8b815a6cc5f6d43222f623e63f9e665ff460085,lon Zakai <alonzakai@gmail.com>, 2015-11-09 19:19:19 -0800, , update control flow operator blacklist new float error,,
4882,9c6476efe9403658bb69851bfa3aa30f67a32868,lon Zakai <alonzakai@gmail.com>, 2015-11-09 18:59:05 -0800, , update spec test use proper label stack start update control flow change spec,,
4883,884c1de0f6dd282881029f03525c1bc8b93c134c,lon Zakai <alonzakai@gmail.com>, 2015-11-09 17:16:29 -0800, , print else,,
4884,6098d7c270a3b16c4c68dd6996597eae2a74a5f4,lon Zakai <alonzakai@gmail.com>, 2015-11-09 11:24:06 -0800, , restructure code put emscripten optimizer stuff dir,,
4885,2c6f7cfa8156448e5ce82ebd1a7526b523dfc7f0,lon Zakai <alonzakai@gmail.com>, 2015-11-08 17:29:43 -0800, , clean check.py,,
4886,be1bbc6bb827a13a450262a9ab872816ba94cefb,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:38:52 -0800, , remove blacklist entirely,,
4887,3d161f19c82bc6eb2e2788f8a0446a0cf839e4a7,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:37:47 -0800, , add final spec testcase everything pass,,
4888,78a8208beb12e3a1640670dc9a8fc4ecbb4b6085,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:36:35 -0800, , nan fix,,
4889,ca0dc47b386a74e0493be77cfcbdcd7cd2fff61f,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:16:29 -0800, , fix negative nan,,
4890,93559fcddc5cf02074189f6bad391c632a423e32,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:12:46 -0800, , nan,,
4891,733d78b0584b1b5dbf2fb3545dfa36e4268e0177,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:11:25 -0800, , negative nan,,
4892,d60432e933d6940dd2030addb6be13ec64a927b1,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:07:20 -0800, , fix hex nan parsing,,
4893,36530dd093564b642219bd0d84dc0c62cf937c20,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:01:28 -0800, , ensure nan ness,,
4894,f6700a3a9bc6ee5dba59b0d61e8815d71d7272db,lon Zakai <alonzakai@gmail.com>, 2015-11-08 15:00:13 -0800, , parse hex properly,,
4895,c2dc40d42a0f88465861f0fc26a5f47552970e58,lon Zakai <alonzakai@gmail.com>, 2015-11-08 14:59:55 -0800, , fix printing,,
4896,504b1a981cf6d0d560a1160b106a1b49eaea4cd7,lon Zakai <alonzakai@gmail.com>, 2015-11-08 12:41:10 -0800, , enable test,,
4897,a0d9673cf965c72f7ea8f4484f23e98e5ec3ba65,lon Zakai <alonzakai@gmail.com>, 2015-11-08 12:40:01 -0800, , parse nan,,
4898,57481a28ac4935928bca3deae8d202d88c780789,lon Zakai <alonzakai@gmail.com>, 2015-11-08 12:38:55 -0800, , print compare nan properly,,
4899,8bbc4d10232a73bb8c61a315b224d0b93c4713c6,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:57:54 -0800, , blacklist remaining spec failure,,
4900,c4b4b9ae5d19dd12b9cc00719c57dfa5fd216853,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:54:46 -0800, , check spec testcases,,
4901,887c03898b4a8e59cecb0d8f9dc37d2b7e494ee8,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:54:40 -0800, , accept bit offset,,
4902,2c8edcc0fa082a21e90ac18d39c11855cbe042ac,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:46:52 -0800, , fix bit switch,,
4903,4d8022da3af7d2604e7779e43f721ade1f04b89e,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:30:34 -0800, , switch fix,,
4904,92ac805edc6ebe06e5ad850c8a03202bd1a7f397,lon Zakai <alonzakai@gmail.com>, 2015-11-08 10:19:20 -0800, , switch fix,,
4905,01363d0daeb33c93a166ae00ed5e9791d7de8f9f,lon Zakai <alonzakai@gmail.com>, 2015-11-08 09:19:56 -0800, , switch parsing improvement,,
4906,35a8d0862150622841f9ef545a30ee2b37ae610b,lon Zakai <alonzakai@gmail.com>, 2015-11-08 09:19:47 -0800, , return switch,,
4907,74613082bcdd62ea7aeb78f5783a4b1421ace460,lon Zakai <alonzakai@gmail.com>, 2015-11-07 21:51:22 -0800, , use view info detectasmtype,,
4908,87bc980afc4658f1e33a7e540e525cb4636dbc45,lon Zakai <alonzakai@gmail.com>, 2015-11-07 18:02:03 -0800, , fix host return type,,
4909,591048f13ba61e42383ab520ea61c3d1ddfc08cb,lon Zakai <alonzakai@gmail.com>, 2015-11-07 17:33:05 -0800, , wip switch,,
4910,14f71b7a6bacaf71a4240dccd1b86c16cb86d968,lon Zakai <alonzakai@gmail.com>, 2015-11-07 17:32:48 -0800, , debugging,,
4911,f1e0e4742168d920cc0ca65eb0d147e62474400d,lon Zakai <alonzakai@gmail.com>, 2015-11-07 14:23:50 -0800, , add testing,,
4912,a54be54b62f68ccf99ff3487783e2b8619371ae1,lon Zakai <alonzakai@gmail.com>, 2015-11-07 14:23:24 -0800, , fix export call wasm.js,,
4913,264a3bdab4496d907a934dc1e8e680846b3254b5,lon Zakai <alonzakai@gmail.com>, 2015-11-06 20:50:20 -0800, , remove old comment,,
4914,8ba1707d4f3fe2f3f342a56cdae67895a4b014aa,lon Zakai <alonzakai@gmail.com>, 2015-11-06 20:47:54 -0800, , detect implicit block loop,,
4915,36ba5d1679c1dda83573730145e2aafc03608d07,lon Zakai <alonzakai@gmail.com>, 2015-11-06 20:14:52 -0800, , parse etc data segment,,
4916,414d7cc09edadde3bbef527a2568d9f56e0b9b44,lon Zakai <alonzakai@gmail.com>, 2015-11-06 19:54:07 -0800, , make maxcalldepth conservative,,
4917,80e27d2fcba39ef96f3043f79e0fd3fb9e92241d,lon Zakai <alonzakai@gmail.com>, 2015-11-06 19:52:03 -0800, , fix negative hex parsing,,
4918,54cc7b3916c61a0fefd66455ed6de7efe6d317bd,lon Zakai <alonzakai@gmail.com>, 2015-11-06 19:33:20 -0800, , fake return,,
4919,c66aca505a96c5e043bc00aa6311101de9339854,lon Zakai <alonzakai@gmail.com>, 2015-11-06 19:10:53 -0800, , update test,,
4920,487f0080559bedb473b5dd0e3e034a19b9916e2e,lon Zakai <alonzakai@gmail.com>, 2015-11-06 14:26:31 -0800, , add testcase,,
4921,ce6e00f2b32c63fb6f2a74f67b4d8c574d7143c6,lon Zakai <alonzakai@gmail.com>, 2015-11-06 14:22:55 -0800, , validate setlocal result,,
4922,b99d42ef849a5e655be40d6514d24bafe5febf79,lon Zakai <alonzakai@gmail.com>, 2015-11-06 14:08:17 -0800, , parse select,,
4923,2de858ae8ed2d33011d7c0ad224438033cacc2e4,lon Zakai <alonzakai@gmail.com>, 2015-11-06 14:02:46 -0800, , resolve local name parse time,,
4924,1c62fc77b7ac612f4a09a9b64aa1f6823809665a,lon Zakai <alonzakai@gmail.com>, 2015-11-06 11:38:28 -0800, , trap runaway recursion,,
4925,3bb8401c5d8ae826da4ee42f67e7cf2bbda07c57,lon Zakai <alonzakai@gmail.com>, 2015-11-06 11:25:54 -0800, , update readme,,
4926,99d106aa4f8528e3ac537ecdc5d1cc8879c2f522,lon Zakai <alonzakai@gmail.com>, 2015-11-06 11:16:43 -0800, , memory fix,,
4927,57f090cb36ac54f8077444af0be7b7605f7e4a17,lon Zakai <alonzakai@gmail.com>, 2015-11-06 11:01:49 -0800, , memory fix,,
4928,74363f311d7fd4c2ead5bd6fcdcdb58648640864,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:57:44 -0800, , set max memory default,,
4929,bbd01fb6f40d315b24e061c6a99e5eb72ba33322,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:53:56 -0800, , print host ops,,
4930,f5322cdb712db7bd12b6133164e6c5f95edd1873,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:32:05 -0800, , assert trap,,
4931,9a565d05ebafca5dd24ba4316af7efdfa0175a38,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:29:47 -0800, , parse escaped double quote,,
4932,40a7faed41cfb05d7d877878e14a553457e284b1,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:24:13 -0800, , call export function outside,,
4933,d1d4442df4388bdcfd283a2cfb789ddce4834ef8,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:24:02 -0800, , tolerate empty string name,,
4934,651b8e1bdac39036f5c3658966e55e6ba5897072,lon Zakai <alonzakai@gmail.com>, 2015-11-06 10:23:27 -0800, , addexports properly,,
4935,ec70dbcb17d8acace08e8abe9cc0ea30e0c825d1,lon Zakai <alonzakai@gmail.com>, 2015-11-06 09:20:46 -0800, , module validation,,
4936,38b6e18b5b563ee235f426d695a89c20cb08ada5,lon Zakai <alonzakai@gmail.com>, 2015-11-06 09:08:21 -0800, , host ops,,
4937,034596930c9d4ca3e771e78e03e06efc026fadff,lon Zakai <alonzakai@gmail.com>, 2015-11-06 09:08:14 -0800, , convenience method,,
4938,eeba133dffb9e50e8cb3cbd58b46ea02a9e34c1b,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:57:48 -0800, , add test,,
4939,dc9ef1be919cee495cfdc48ee10fcee184e93e58,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:56:45 -0800, , fix shell memory access,,
4940,b26bffbb8bb96fa6ba04779cceb9916d881b2517,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:45:06 -0800, , handle param i32 i32 noting 1st index either name type,,
4941,52ef3cda1cd6f093f5260d685149fbbda9881bc3,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:44:37 -0800, , add test,,
4942,f85fca65799a61910d43a1099e7f33299df327ac,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:04:03 -0800, , add passing test,,
4943,d17aaea3ddf73369af3c7fad3f42a23928d4009d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 21:02:49 -0800, , fix print add import test,,
4944,b78563b607f3a851dee9495ad21307b23e2c2666,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:55:56 -0800, , bit popcnt,,
4945,2298da8a685268e0f4bdf6a7a03e47429c39105a,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:41:41 -0800, , clz fix,,
4946,00588550c369ec56feaafe6993e2192d9def72d6,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:23:30 -0800, , update test,,
4947,826fc908280887d57a6e7203c7da8326b9e40ba2,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:23:23 -0800, , add test,,
4948,a858e75a26e387d9d937ad72bc805c2624d61692,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:23:12 -0800, , i64 clz ctz fix,,
4949,194d152e26edca924dd272ee578c493d92154298,lon Zakai <alonzakai@gmail.com>, 2015-11-05 20:09:52 -0800, , clz ctz corner case,,
4950,a7aef882a766e12847d021981b2f445c310aaf5e,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:48:17 -0800, , shift corner case,,
4951,d6837db077213c218599e33042f1006118d97be4,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:26:46 -0800, , int trap,,
4952,0f96bc8b34c00562597bbfbacead38d94cd14319,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:23:56 -0800, , remove unnecessary flow,,
4953,bafa09a4ae9df0a1eb97847a2c1eb51bfac0de5c,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:18:48 -0800, , divide,,
4954,72b5a8e5effd9043f1e868e399ef84648a869a15,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:16:47 -0800, , print unaries,,
4955,9c9c4861ff747525d827dfd604700e6dd72066d3,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:14:32 -0800, , parse inner comment add unaries,,
4956,0500af8981f03982aa68bee6d28e3ad339c01e28,lon Zakai <alonzakai@gmail.com>, 2015-11-05 19:08:02 -0800, , has_feature,,
4957,2b314faa4c50738473f977dcf9adae3708363e16,lon Zakai <alonzakai@gmail.com>, 2015-11-05 18:12:22 -0800, , discard return value function none,,
4958,12d6877a9361fa1a647541ba83e35272aeb319f3,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:56:27 -0800, , addfunction properly,,
4959,2ad311f635c3d2d545283255cfdf1e7c0f4c7bc9,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:46:52 -0800, , handle expected output spec test suite,,
4960,ed491cb6677b1f992beae3c8935855aa8f05fb5d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:40:35 -0800, , add test,,
4961,8e379d5409507acc75c3c2b1bdf6291297bfdbee,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:38:12 -0800, , refactor trap code add callindirect trap,,
4962,9f375280e1168645ba9be9a6b5889c58ebcf565a,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:37:59 -0800, , remember function type name later check,,
4963,46393bd1004c8fd679394ceaf0d64d1d5c3c616c,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:26:14 -0800, , error checking,,
4964,6106ce2475998d4c0564c7c71a2351cc8b539516,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:23:41 -0800, , refactor invocation shell,,
4965,2d62cad7e131ffb8b7bde80542f72dd8d278a859,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:12:53 -0800, , name fromint,,
4966,9c14e35d31a91558e2a4efe02d11406665f1f6f0,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:12:43 -0800, , find local index,,
4967,be88a262864f1bb3fa0f36be20030546451a2735,lon Zakai <alonzakai@gmail.com>, 2015-11-05 17:00:43 -0800, , function may params type,,
4968,2c7f50ed2663212f4fe9e0b2b6b9b7d4822add36,lon Zakai <alonzakai@gmail.com>, 2015-11-05 16:55:40 -0800, , function parsing fix,,
4969,9b8cbda9322b4aec1c86460396fcb472c768843b,lon Zakai <alonzakai@gmail.com>, 2015-11-05 16:47:41 -0800, , allow accessing module element index name,,
4970,a8a78dd5e6f83263085cb3e4dea21c0f10a60b4f,lon Zakai <alonzakai@gmail.com>, 2015-11-05 16:27:01 -0800, , parse funcs named type,,
4971,6570d8cafc74e2ed6cf877f9b4a12c40ceac5e52,lon Zakai <alonzakai@gmail.com>, 2015-11-05 16:13:01 -0800, , refactor data structure,,
4972,b3ee570f3f513e580958e020806df5b014c8b7c0,lon Zakai <alonzakai@gmail.com>, 2015-11-05 15:39:35 -0800, , unnamed naming fix,,
4973,75e6a46d07ab4a641c2c5676e5276bab014555aa,lon Zakai <alonzakai@gmail.com>, 2015-11-05 15:24:05 -0800, , update spec test,,
4974,b991b575a8b97a4ff83cb99448c0249526e86549,lon Zakai <alonzakai@gmail.com>, 2015-11-05 15:21:10 -0800, , parsing improvement local unnamed,,
4975,18ed75e5a7da5dfd14e5a2c8d3fee5b9eaf7f284,lon Zakai <alonzakai@gmail.com>, 2015-11-05 15:01:58 -0800, , handle comment top scope,,
4976,a3f479d3694ddfcbf7fe35658dff435fce0ae59b,lon Zakai <alonzakai@gmail.com>, 2015-11-05 14:18:53 -0800, , add passing testcases,,
4977,6942a84d371eb80fdc066cac6a573a0a6a275f09,lon Zakai <alonzakai@gmail.com>, 2015-11-05 14:16:40 -0800, , use std unaries,,
4978,842ed2be4c19fd72ba6c13457d59b58e9839027d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 14:14:58 -0800, , unary ops,,
4979,a991641006b201ce99878d09d7c2ee61ab5d138f,lon Zakai <alonzakai@gmail.com>, 2015-11-05 14:06:22 -0800, , negative nan,,
4980,accc583fb7e0c859d7beffeab4120a79f527b282,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:59:30 -0800, , print negative,,
4981,cf40973ef6a2b96ba755626f71bec9802f8aca95,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:58:06 -0800, , copysign fix nan,,
4982,06eda827f3a5ec67e5302b8d51d82e300d07ff23,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:56:43 -0800, , negative zero f64,,
4983,8568369a26510b61db639f55142797385e59abcb,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:54:57 -0800, , negative zero,,
4984,ebc45c89ca10c0e91a717abf83d914bb225ced0f,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:44:54 -0800, , parse unaries,,
4985,86c4e807f469b0133ec959a700ce6b76be31c2d0,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:38:51 -0800, , nicer note end shell,,
4986,5f96c2d7b8cf685547f8d5f08d9979dad816ee4d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:35:11 -0800, , parse denormals,,
4987,cbfb617529f162889652548d5cbcc6232f9a02d0,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:35:04 -0800, , fix shell bug,,
4988,aea64c6fa801b926e090ef3feb2f16fe068b6f71,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:15:30 -0800, , fix compare type bug,,
4989,126c556960bf550fdbab9e34ca5b666657c03a7e,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:15:15 -0800, , add validation checker module,,
4990,a3df15c2c6e7cfad29ce41603f954573f0726659,lon Zakai <alonzakai@gmail.com>, 2015-11-05 13:04:15 -0800, , error callback,,
4991,4c7dc453f761391cc44646a5058036977272ca15,lon Zakai <alonzakai@gmail.com>, 2015-11-05 12:50:10 -0800, , type fix,,
4992,eddea1fef9822b9444bc2e24c56ffdee1e05093e,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:54:54 -0800, , endianness test pass,,
4993,2caa3c2dca33bb0a2b765c0fb75319ecc8a0e0db,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:54:14 -0800, , i64 store shell,,
4994,c7751d19598dcb6262114f45a91ec2d05dd2f974,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:52:39 -0800, , i64 ops,,
4995,a858f83483527f978c9ee70db4a91bc9c2c7022b,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:37:38 -0800, , refactor memory bound check,,
4996,272cf05739fb95e85d2cabb0dd7600c0f03c7906,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:15:56 -0800, , i64 load fix nice color shell,,
4997,01ef67f22fb597b7c749d2c82c93556cc8eea5b2,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:11:52 -0800, , add i64 load shell,,
4998,180e1ce3f8e371fb790d1aa8f810bdff4bcd102d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:10:24 -0800, , fix store2 parsing,,
4999,35e529924880d72103ee9f83b587821917f7a45a,lon Zakai <alonzakai@gmail.com>, 2015-11-05 11:10:08 -0800, , fix load2 parsing,,
5000,445bfe103df655fa2c2b69bc61290bc13cbb7ac8,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:56:44 -0800, , fix silly break bug,,
5001,f117fd69b9568aa31fd4b78b9ce0413220f4eb40,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:49:32 -0800, , nan,,
5002,9c5850f24085ac5843a799692d5099c8af98def7,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:42:47 -0800, , conversion parsing fix,,
5003,d16e8900cb98af97775e406c25d4a8b0c8c86039,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:29:23 -0800, , conversion fix,,
5004,a1b24a29d50d6e060adf1ffd97d406bc5d71f290,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:22:23 -0800, , overflow checking,,
5005,f50602c3b20810a6f83fc178145b99aaba478766,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:15:31 -0800, , fix overflow check,,
5006,2266390bc8055693b26438ddd3544a8cb20d0db0,lon Zakai <alonzakai@gmail.com>, 2015-11-05 10:07:32 -0800, , fix float conversion,,
5007,8839251f5148bcaff3b9b784afdf8937d2ba032e,lon Zakai <alonzakai@gmail.com>, 2015-11-05 09:59:35 -0800, , start test spec test,,
5008,1de298f63480e5ff006a09a50dc99d635c639b4d,lon Zakai <alonzakai@gmail.com>, 2015-11-05 09:59:22 -0800, , parsing fix,,
5009,8e6f7d38f17c0d2c8f80a1f459405e07cce02e1e,lon Zakai <alonzakai@gmail.com>, 2015-11-05 09:52:08 -0800, , use exception wasm trap,,
5010,29677188899bb00ec7a06b85349ce9fc1b344094,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:57:11 -0800, , conversion,,
5011,04388516db30df7184bd4eb3ef36498af9b9d9c7,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:51:18 -0800, , nan,,
5012,69f0f91c03f593ea6b5c30515afdf33d5c7827fb,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:46:48 -0800, , infinity,,
5013,e2b0a2a26eac53661964739c2be344c90850626d,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:33:02 -0800, , trap i2f overflow,,
5014,9db25c0958470f3da763861967c842f42fd112c5,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:17:10 -0800, , fix string parsing,,
5015,71447b6490106f5ce6c77ee882213aaac4548a35,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:06:38 -0800, , trunc fix,,
5016,578461d1ad4fe34235f67016d703f568fdf92c6a,lon Zakai <alonzakai@gmail.com>, 2015-11-04 21:03:47 -0800, , numeric fix,,
5017,8bc2c03d245df4eab03f6545d55a9f2d34c261a3,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:46:17 -0800, , fix hex parsing,,
5018,10d59ea332a69971a0284ae08379672eb0fb8477,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:25:47 -0800, , interpreter debugging,,
5019,9b50ed1c8702c1e9236ae146a31c79be443f6c84,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:25:33 -0800, , verify return value,,
5020,1b693d221566b017b63e002526bfbe724522e679,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:25:16 -0800, , literal,,
5021,0a4c572572944f19f839ec3052ca79c4b2d950ea,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:16:54 -0800, , implement conversion,,
5022,6802e5795929d3725a96a3e2095b1ce836fb5335,lon Zakai <alonzakai@gmail.com>, 2015-11-04 20:03:21 -0800, , conversion,,
5023,e0023d29a8beade034a219b060ddf00b7c4302e9,lon Zakai <alonzakai@gmail.com>, 2015-11-04 19:55:28 -0800, , conversion ops,,
5024,c4fb7473071da6b26e2d1f3f32101e77e8aed26f,lon Zakai <alonzakai@gmail.com>, 2015-11-04 19:39:02 -0800, , add first passing spec test,,
5025,d5629c6dbb9b8ab05963ea900be526087f5b0b00,lon Zakai <alonzakai@gmail.com>, 2015-11-04 18:13:32 -0800, , get first spec testcase passing,,
5026,f36058e50d0aadcdeeb68716e69af83c75a51cff,lon Zakai <alonzakai@gmail.com>, 2015-11-04 18:07:09 -0800, , fix load store trap,,
5027,4a464bbd20dda5f67adc8721b7cc3df6f0f0f06f,lon Zakai <alonzakai@gmail.com>, 2015-11-04 18:03:49 -0800, , implement assert_return assert_trap,,
5028,8ba70395b294b8525f52c511054ca95eef1f2686,lon Zakai <alonzakai@gmail.com>, 2015-11-04 18:01:09 -0800, , write segment memory parse line function,,
5029,8272166eb79bfff9e7aab73af125085ea7198b46,lon Zakai <alonzakai@gmail.com>, 2015-11-04 17:22:25 -0800, , implement print,,
5030,452ba27711102ed0515b76761b86b3f1987292f5,lon Zakai <alonzakai@gmail.com>, 2015-11-04 17:17:49 -0800, , implement shell interface,,
5031,bd3840e9892389f7a3d415e673a5bd0878fb13ee,lon Zakai <alonzakai@gmail.com>, 2015-11-04 16:41:58 -0800, , add init method wasm interpreter,,
5032,cb88dc19d126e9083011a5a72b3703abecea570a,lon Zakai <alonzakai@gmail.com>, 2015-11-04 16:36:10 -0800, , compilation fix,,
5033,822857a28cec499a8ab2688f2784c961ae1d4c19,lon Zakai <alonzakai@gmail.com>, 2015-11-04 16:12:35 -0800, , prepare run assert test,,
5034,913dfe73a9fad60e8498160fcabb715cb966bc97,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:54:18 -0800, , refactor expression parser,,
5035,7f4bc21e8068a0463dfdff442a0d8d0f17d48fae,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:48:09 -0800, , parse segment,,
5036,9390921427885c22133933fb0b93d4ee39c3e726,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:45:10 -0800, , memory fix,,
5037,2bb4b33e296f999d45b95b2252dfaa11e2ea61b5,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:40:33 -0800, , memory,,
5038,98719470da218f2cbe2a256e478f56520a29f4dc,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:40:29 -0800, , disable spec test default,,
5039,89ade169dc44964b55dbb1bcb584fb14beb70ebb,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:27:31 -0800, , offset alignment fix,,
5040,87f90374a799beeb5b3541bb8e2870f0eaedd80a,lon Zakai <alonzakai@gmail.com>, 2015-11-04 15:05:49 -0800, , emit align needed,,
5041,734241d4061886009b6f31913672a615d499f230,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:57:31 -0800, , emit offset,,
5042,1f6860afeb96795bd3a2478dda2c55b2ecce34c8,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:54:35 -0800, , handle comment,,
5043,0ee26b62aa9a0a957f61c338ff4d9f8f0a1efdf2,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:52:45 -0800, , parse import,,
5044,76cd27e2e25db7d08578a261d29730b10491d1b5,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:36:44 -0800, , prepare spec testing,,
5045,3fe4d9915bedb9abe564556d9c4de5d2b44783db,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:26:16 -0800, , add submodule spec test suite,,
5046,4e062c10fb8d57be88da2e03fb58c86d57b07f2f,lon Zakai <alonzakai@gmail.com>, 2015-11-04 14:03:28 -0800, , update readme,,
5047,c28bc968fb79fe144bfc08ada568936933a28edd,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:57:22 -0800, , update .gitignore,,
5048,7b19d4aa053df8d48647d919d9e88dadc38976dd,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:56:56 -0800, , fix rem sign detection,,
5049,c93259f03f7ff3c870e760fc04c954e546875885,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:55:55 -0800, , fix load sign detection,,
5050,240e35cdc436d705bc2ec6bbda0719944a34cc6e,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:50:35 -0800, , parse call,,
5051,af7374115dc89eda2365778ece51e71259b24745,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:38:47 -0800, , parse loop,,
5052,2cf75357101099e9bb6c59ca2688ee244286686b,lon Zakai <alonzakai@gmail.com>, 2015-11-04 13:30:53 -0800, , parse function type,,
5053,0b54b574ba7227dd7ab60ab32fb2b7947cdecc32,lon Zakai <alonzakai@gmail.com>, 2015-11-04 11:50:00 -0800, , put type union need constructor,,
5054,e28c0efc48adb5f49f4ef131681ddf55cf3b8de5,lon Zakai <alonzakai@gmail.com>, 2015-11-04 09:42:22 -0800, , fix compare inputtype,,
5055,a99e4f20a773aa7d6698e126ff7f39290db54675,lon Zakai <alonzakai@gmail.com>, 2015-11-04 09:39:33 -0800, , start testing wasm shell,,
5056,6dc54fdfd2b0c40f43fe854e7a463d5b726fd650,lon Zakai <alonzakai@gmail.com>, 2015-11-04 09:39:26 -0800, , build wasm shell,,
5057,200a70965a58698422b239b42a8b889eb8336abf,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:32:47 -0800, , add function,,
5058,0866a86b24beaccaf5f711a8aa99d1cbfbf77046,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:31:47 -0800, , string parsing improvement,,
5059,643352df3c52022c3a13898fa00bdfa975e4e63c,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:28:28 -0800, , break nop,,
5060,e9b3051ed21cb6c406a95acbcb2a2d1f88396676,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:23:24 -0800, , fix load store,,
5061,a0de6e95733602f7f246bb537af79e87c4a6070a,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:18:56 -0800, , factor float_,,
5062,48d593f3ba3505a60a6f37bc244998b8562e6137,lon Zakai <alonzakai@gmail.com>, 2015-11-03 21:01:41 -0800, , parsing,,
5063,dd98b084f15b16f5a5a86c2d611f0c41f3bd724e,lon Zakai <alonzakai@gmail.com>, 2015-11-03 19:56:51 -0800, , parsing improvement,,
5064,6e4bf311175ad8c8b4e2874ee1bfa0a997343c28,lon Zakai <alonzakai@gmail.com>, 2015-11-03 18:49:22 -0800, , implement new select operator,,
5065,0756845309f2cf3e5cd817dd3d25e727c96499ce,lon Zakai <alonzakai@gmail.com>, 2015-11-03 18:00:37 -0800, , start module parsing,,
5066,687a7c439987b8cc5ee7d298f14b948a8c98350c,lon Zakai <alonzakai@gmail.com>, 2015-11-03 17:56:04 -0800, , sexpression debugging,,
5067,f9ccaa4157bacd3a4690497bc8b5fa2e49ef739c,lon Zakai <alonzakai@gmail.com>, 2015-11-03 17:49:48 -0800, , shell fix,,
5068,d64776c06b70afac0a05c51f4538743cbb74a8c2,lon Zakai <alonzakai@gmail.com>, 2015-11-03 17:28:46 -0800, , main shell,,
5069,820c7c66829f4c64b7566f45163cdadf31480163,lon Zakai <alonzakai@gmail.com>, 2015-11-03 17:24:39 -0800, , progress wasm shell,,
5070,679a41cce15def601a57a88ced7e8ee03b59b8df,lon Zakai <alonzakai@gmail.com>, 2015-11-03 14:07:09 -0800, , start work shell sexpr parser,,
5071,5b30873eb082df02a79e7daa2f3aa8b59dab358a,lon Zakai <alonzakai@gmail.com>, 2015-11-03 11:51:41 -0800, , comment,,
5072,8555bd445598fdcba593eef3fc4bd5e527b19068,lon Zakai <alonzakai@gmail.com>, 2015-11-03 11:43:18 -0800, , comment,,
5073,a4c2588fd5144b0b8759865d42138e1f6bb228a9,lon Zakai <alonzakai@gmail.com>, 2015-11-03 11:00:55 -0800, , add memorysize module,,
5074,948f9255e2adac2b9e8b290742f06a515c14d043,lon Zakai <alonzakai@gmail.com>, 2015-11-03 10:50:08 -0800, , cleanup emit import,,
5075,ff95c47b26530d91192ee932ec1a8936ef4758c8,lon Zakai <alonzakai@gmail.com>, 2015-11-03 10:27:55 -0800, , refactor printfullline,,
5076,3505f2162d92fde5edb590254ec9553146b053bf,lon Zakai <alonzakai@gmail.com>, 2015-11-03 10:22:41 -0800, , rename iswasmtypefloat,,
5077,aa122695e53bb2c39175e2d04f626b2cd6c2e911,lon Zakai <alonzakai@gmail.com>, 2015-11-03 10:18:14 -0800, , refactor pretty printing code,,
5078,3b0fc2374d042ba81e16ee09f57cdef9891be065,lon Zakai <alonzakai@gmail.com>, 2015-11-03 10:14:03 -0800, , refactor arena code,,
5079,a18f879612876860429aa153336be293a9368310,lon Zakai <alonzakai@gmail.com>, 2015-11-02 21:32:17 -0800, , simplify,,
5080,ef4f2c7490600a0d868eb5a426a0617d055d8cb3,lon Zakai <alonzakai@gmail.com>, 2015-11-02 17:41:27 -0800, , add fasta test,,
5081,786a3064b9f49b629067213e859714f35258dd99,lon Zakai <alonzakai@gmail.com>, 2015-11-02 17:39:09 -0800, , add fannkuch test,,
5082,04f43409abbebd9d3d07f1e38037ba47e6906fa7,lon Zakai <alonzakai@gmail.com>, 2015-11-02 17:38:50 -0800, , add optional argument check.py,,
5083,2510ac0df0e68cedfdff4e16224413f86a45e076,lon Zakai <alonzakai@gmail.com>, 2015-11-02 17:31:54 -0800, , update test add working hello world test,,
5084,1c25d8bd86c466306cc8e0bebed4fe7ae066e64e,lon Zakai <alonzakai@gmail.com>, 2015-11-02 17:30:37 -0800, , fix condition loop,,
5085,79c1a48d3b50c6298f4b89c3237df426aebd3f75,lon Zakai <alonzakai@gmail.com>, 2015-11-02 16:08:04 -0800, , fix load store,,
5086,a25a0091a2066a390ee6eade7e6ca1fc6309292a,lon Zakai <alonzakai@gmail.com>, 2015-11-02 15:22:31 -0800, , fix switch,,
5087,c711d4407abe1d02a7474329d7f6fa2b315a8df8,lon Zakai <alonzakai@gmail.com>, 2015-11-02 15:22:19 -0800, , move wasm debug printing behind flag,,
5088,a3abf0bd1ab3707dda013fa59ef3f2e5c74b70e9,lon Zakai <alonzakai@gmail.com>, 2015-11-02 15:21:56 -0800, , allow printing none literal,,
5089,0da73c1845a58823c0fde138115849a65f79e0ea,lon Zakai <alonzakai@gmail.com>, 2015-11-02 14:40:44 -0800, , implement switch,,
5090,25a335b740da7e7f199edcad617251d19aa6b18b,lon Zakai <alonzakai@gmail.com>, 2015-11-02 13:00:23 -0800, , abort switch,,
5091,1a9469b0ed84be32dc264effbe7736a03cb7b608,lon Zakai <alonzakai@gmail.com>, 2015-11-02 11:44:42 -0800, , add forever test,,
5092,8d25878a2d49199079b7c81a396ee2d4fb03032d,lon Zakai <alonzakai@gmail.com>, 2015-11-02 11:25:38 -0800, , wasm.js debugging,,
5093,1e3848b2e5f0ea947d67954ab3044a3653eacb23,lon Zakai <alonzakai@gmail.com>, 2015-11-02 11:07:45 -0800, , fix import call return type handling,,
5094,cd36ba627d84d5ac27948bb30296d34f72b765f8,lon Zakai <alonzakai@gmail.com>, 2015-11-02 11:07:27 -0800, , intepreter debugging,,
5095,c4cbc717311f50607c420c2d388bafd82e7ef518,lon Zakai <alonzakai@gmail.com>, 2015-11-02 10:53:14 -0800, , debugging support interpreter,,
5096,4990b96eaa6ce91ecbb84b784df5622f9742f47e,lon Zakai <alonzakai@gmail.com>, 2015-11-01 20:55:49 -0800, , add stack test imported mapped global,,
5097,d8c2d69dd253bd6f67e1f3c374be2c20d43dfc03,lon Zakai <alonzakai@gmail.com>, 2015-11-01 20:54:46 -0800, , save module base mapped imported globals fix writing mapped imported globals,,
5098,bb6f33c9f19581e2ea60b46653bb1a10ced4a2eb,lon Zakai <alonzakai@gmail.com>, 2015-11-01 20:03:30 -0800, , avoid warning,,
5099,d96c63dc0e6b0a9ccf0c327d8c6c0cb61f95d57f,lon Zakai <alonzakai@gmail.com>, 2015-11-01 19:57:03 -0800, , refactor lookupimport method,,
5100,90304bf9703e768fcdf87914e6117f87beea3f59,lon Zakai <alonzakai@gmail.com>, 2015-11-01 19:16:37 -0800, , tell emcc leave 1024 use,,
5101,c8cbfbeb8d1cc108bbb0f1a7f145a50c06059c0e,lon Zakai <alonzakai@gmail.com>, 2015-11-01 19:13:24 -0800, , add mem test,,
5102,c0a332693eceec4171c4e2fef30924e4f22771fc,lon Zakai <alonzakai@gmail.com>, 2015-11-01 19:13:02 -0800, , handle float void type wasm call,,
5103,2740fa0342c11481e3dad18c775a1aa0b862e8d8,lon Zakai <alonzakai@gmail.com>, 2015-11-01 18:50:26 -0800, , test conversion,,
5104,e4734d90b261d47b7fbf17996b59564a0df4e706,lon Zakai <alonzakai@gmail.com>, 2015-11-01 18:03:39 -0800, , add test call library call wrong argument,,
5105,c78f1e7ff9197f211e1798ff53281d08ad59110d,lon Zakai <alonzakai@gmail.com>, 2015-11-01 17:51:37 -0800, , add call test,,
5106,a3e712df50f43f6a176a750043c32c752f2dfe2b,lon Zakai <alonzakai@gmail.com>, 2015-11-01 17:17:07 -0800, , improve unnecessary block removal,,
5107,01fa6454d5b375ea85ba8662306cb0ac30a1de29,lon Zakai <alonzakai@gmail.com>, 2015-11-01 17:12:20 -0800, , fix wasm walker replacement logic,,
5108,5ad0538c67dcc27c28fb99e058995de110550de1,lon Zakai <alonzakai@gmail.com>, 2015-11-01 16:22:09 -0800, , set auto init field,,
5109,5fe20a3b2fabd4f0f2497ff01040b7a951cf0adb,lon Zakai <alonzakai@gmail.com>, 2015-11-01 16:07:03 -0800, , auto init optional field,,
5110,b66a85cb7379b1ec604cceed7af101227550d710,lon Zakai <alonzakai@gmail.com>, 2015-11-01 15:50:59 -0800, , optimize away break end block block,,
5111,b2e067893efbe22132b210d5af9026b7bd59c270,lon Zakai <alonzakai@gmail.com>, 2015-11-01 15:39:04 -0800, , fix loop,,
5112,44e83f2fb039a38b0764a172aa7c64ec3290d8c5,lon Zakai <alonzakai@gmail.com>, 2015-11-01 15:31:00 -0800, , remove condition break,,
5113,b25e59d51d828f6a818141a715e9008f05e7063f,lon Zakai <alonzakai@gmail.com>, 2015-11-01 15:00:59 -0800, , remove hello_world.c pass,,
5114,dd26c6de358b78900bb4780f7fa640812776d129,lon Zakai <alonzakai@gmail.com>, 2015-11-01 15:00:34 -0800, , add control flow test,,
5115,0da541c634a8c72c9ee5af8f2546a541ba7c5aae,lon Zakai <alonzakai@gmail.com>, 2015-11-01 13:22:22 -0800, , disable part float_ops.cpp requires memory ops tested yet,,
5116,835e1d8081af43b995ada5c701d96a420b0b728c,lon Zakai <alonzakai@gmail.com>, 2015-11-01 12:54:20 -0800, , avoid assertion basic ops test,,
5117,47573b3463559f4978b417717b5b5ce2f3bed3c1,lon Zakai <alonzakai@gmail.com>, 2015-11-01 12:54:01 -0800, , fix import global.math,,
5118,bfc059c04c55a86603e540109367e882e7026cdc,lon Zakai <alonzakai@gmail.com>, 2015-11-01 12:25:36 -0800, , fix callimport,,
5119,34b3a09aae11f04deb08c14954707f99b0d49b83,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:51:30 -0800, , enable import emcc build,,
5120,904aba781d4cdd7074d2f8d4faa833207a31e83e,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:38:05 -0800, , fix execution compare float,,
5121,f8ca2533c9c3a389375e4f6b4b78f09eb6dee30c,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:36:33 -0800, , add float_ops testcase,,
5122,b0f8bb17b8695698541f241a37e9b43cdd441206,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:34:16 -0800, , support .cpp file check,,
5123,bbd8b2eb841b71c4801e2d0a942550709bb22574,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:22:45 -0800, , rename emcc wasm.js script,,
5124,adca39121c270b4e31776ef32733788b73b4ccd1,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:19:35 -0800, , refactor dynamic_cast,,
5125,70a2b7753dac3967e45a367a940589e34bd065ea,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:19:26 -0800, , readme typo,,
5126,df61218b7587aa2915eeb3620e35f10b372d788d,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:19:18 -0800, , asserts wasm.js,,
5127,04fb140a62205772b1b2347e17a38e0edd958ab8,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:19:01 -0800, , optimize default,,
5128,34203ee327de86071c4f35f2a237f3ea671e312c,lon Zakai <alonzakai@gmail.com>, 2015-11-01 11:17:32 -0800, , free builder stil need allocator,,
5129,fb4151c56a72134f04152bed78f8fa73beb70f35,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:36:30 -0700, , update readme,,
5130,7b06b0157e4102393f36fd6a039a28fa2612b731,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:34:51 -0700, , update readme,,
5131,641f7b4581eafc5d7d0afb9916ac7a0d295bb188,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:32:58 -0700, , update readme,,
5132,d8e4d241890263569bef12d706a1133dc594e7b7,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:32:19 -0700, , update readme,,
5133,b44b5f10b462f70a220a2b5ff435455419d39077,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:19:35 -0700, , int fix,,
5134,3e87906af10d70e158a5ce34aac72baf35ace9d6,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:16:08 -0700, , test improvement,,
5135,70e280d07d9bdc54d299daf85dfcf0cefd614232,lon Zakai <alonzakai@gmail.com>, 2015-10-31 22:02:45 -0700, , int ops test,,
5136,4536c4935aa936505c56d600c78e814a07393430,lon Zakai <alonzakai@gmail.com>, 2015-10-31 21:25:49 -0700, , better error bad params,,
5137,0f0167441eee217e565400d2a4ac88ded545e464,lon Zakai <alonzakai@gmail.com>, 2015-10-31 21:03:58 -0700, , fix typo,,
5138,289015c222e43eea2fddfede5efaa0436ddfc4a4,lon Zakai <alonzakai@gmail.com>, 2015-10-31 21:02:37 -0700, , optimize build,,
5139,77b63fa4db80eeb23ec4187f0a6d0f716dbd7edb,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:59:41 -0700, , update readme,,
5140,4d566bd9c9084cb57adc9d206cac612bec02c63c,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:46:12 -0700, , fix interpreter bug binary compare working add test wasm polyfill,,
5141,cfb0cefcf93417a30c03bca7ff0a6c4d0428b1b5,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:22:42 -0700, , debugging,,
5142,4f4a650c67d5105fedf44b83c06a51102947c045,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:10:45 -0700, , start test wasm test,,
5143,b85cd243b3e289e0dda56d37cd7649883a085e6a,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:07:54 -0700, , add simple add test,,
5144,0aa0bf8fe5e87cfafee3d13209f0457b3e3f7764,lon Zakai <alonzakai@gmail.com>, 2015-10-31 20:00:10 -0700, , checker improvement,,
5145,bbdaf1ce90c0782d70a66cc48f9e9a7b90a8ca22,lon Zakai <alonzakai@gmail.com>, 2015-10-31 17:44:20 -0700, , fix store,,
5146,60690631a5f9f29ec326021d562e4a390f6c867f,lon Zakai <alonzakai@gmail.com>, 2015-10-31 17:41:47 -0700, , interpreter debugging fix visitbreak,,
5147,db878524df6a123e7e96d4c153f2b7f125741422,lon Zakai <alonzakai@gmail.com>, 2015-10-31 17:31:20 -0700, , polyfill fix memory default type correction,,
5148,3e618d9570b278ca9e94663240cf33d4f3cb22a9,lon Zakai <alonzakai@gmail.com>, 2015-10-31 17:11:04 -0700, , call wasm,,
5149,2635938b578aa55419bd2a59b837dfaeb546ddcc,lon Zakai <alonzakai@gmail.com>, 2015-10-31 16:45:54 -0700, , optimize emscripten build,,
5150,d726a11c7ee90b0bd2dfd3be1774fe3367da0432,lon Zakai <alonzakai@gmail.com>, 2015-10-31 16:09:10 -0700, , polyfill fix,,
5151,a8963f481e5db2c212a7e7fa83d3599c65d7ef5f,lon Zakai <alonzakai@gmail.com>, 2015-10-31 15:54:11 -0700, , make emit a.wasm.js,,
5152,6512f29a40c72979c05e73318b957e425363980e,lon Zakai <alonzakai@gmail.com>, 2015-10-31 15:48:08 -0700, , prepare polyfill testing,,
5153,547867eb0e78cac6be7f35bbd80c6582224df807,lon Zakai <alonzakai@gmail.com>, 2015-10-31 13:54:50 -0700, , callimport,,
5154,39db17f164e21473d839272db2271791259666d7,lon Zakai <alonzakai@gmail.com>, 2015-10-31 13:45:03 -0700, , load store interpreter,,
5155,81e35a5fdf894232e4167a9d66c7b93ecf31ea41,lon Zakai <alonzakai@gmail.com>, 2015-10-31 13:29:45 -0700, , progress wasm.js communication,,
5156,dcdf2e222f0b42c71ca41f7e37bc77decfef37f7,lon Zakai <alonzakai@gmail.com>, 2015-10-31 12:30:30 -0700, , start sketch interpreter,,
5157,b39e36e0b3cc74de46d62f7448058942240555c5,lon Zakai <alonzakai@gmail.com>, 2015-10-31 12:14:04 -0700, , start build interpreter,,
5158,3dd389f52b556530ec0514fac67277a41a21b47e,lon Zakai <alonzakai@gmail.com>, 2015-10-31 11:05:05 -0700, , refactoring,,
5159,2824e966bb1dc9cbc90365b39000540f84fae82c,lon Zakai <alonzakai@gmail.com>, 2015-10-31 10:31:50 -0700, , convert host,,
5160,6d2dec86df49087c9e0a8f530e47fe9fb344e6e6,lon Zakai <alonzakai@gmail.com>, 2015-10-31 10:28:34 -0700, , compare,,
5161,f7c1b4907c40dfd46da8e86f2c23412f8603479a,lon Zakai <alonzakai@gmail.com>, 2015-10-31 10:22:58 -0700, , unary binary,,
5162,16414bf70e5143726907cbeecd868a5439e291c9,lon Zakai <alonzakai@gmail.com>, 2015-10-31 10:08:54 -0700, , interpret call,,
5163,e12434696a4594b2a2a77c91609a7b18232f11b4,lon Zakai <alonzakai@gmail.com>, 2015-10-31 10:02:23 -0700, , load store shim,,
5164,9f8a400879dcd35853e6c42bd1bc53c8c3fa51eb,lon Zakai <alonzakai@gmail.com>, 2015-10-30 22:27:58 -0700, , getlocal setlocal interpreter,,
5165,3067079eec5759fbbbf81872b32a9ae4a2dd99fc,lon Zakai <alonzakai@gmail.com>, 2015-10-30 22:13:30 -0700, , function scope,,
5166,51be0e93e50c3717cb8e4dff47000a494e67b29a,lon Zakai <alonzakai@gmail.com>, 2015-10-30 21:54:41 -0700, , progress interpreter,,
5167,2d6a5ed822740a6ac53d1807fe2111bee5098bc6,lon Zakai <alonzakai@gmail.com>, 2015-10-30 21:01:12 -0700, , refactoring,,
5168,6ebb87ce79d6aed56addfc0d275ee4e93d143469,lon Zakai <alonzakai@gmail.com>, 2015-10-30 20:51:52 -0700, , refactorings begin interpreter,,
5169,a6701a55871bdccd60445da4a47bcc63840c0115,lon Zakai <alonzakai@gmail.com>, 2015-10-30 20:00:07 -0700, , refactoring,,
5170,0fd1b5602dd4d55abcd264ee7fd48a17c2780271,lon Zakai <alonzakai@gmail.com>, 2015-10-30 17:41:01 -0700, , fix conversion,,
5171,4a99322972bd744cd97825f6373f1eee3b3d35b1,lon Zakai <alonzakai@gmail.com>, 2015-10-30 17:32:28 -0700, , handle aliasing local global,,
5172,b8b69e896b18efbe553bf1c01e4eb3acbfb909f1,lon Zakai <alonzakai@gmail.com>, 2015-10-30 17:02:56 -0700, , fix logical,,
5173,dce3791b402cc1e49da000cfe918bb21e81b4a6a,lon Zakai <alonzakai@gmail.com>, 2015-10-30 16:47:22 -0700, , fix double compare,,
5174,9b799d7164478bf0c1463ed8ac804f65704000df,lon Zakai <alonzakai@gmail.com>, 2015-10-30 16:38:33 -0700, , fix float constant,,
5175,c720a74951ef0d7f472b639c3be617a551a68df7,lon Zakai <alonzakai@gmail.com>, 2015-10-30 13:54:51 -0700, , cleanup,,
5176,f7fc8052ffaa6ece619a2c5c98c7025ca45acd5f,lon Zakai <alonzakai@gmail.com>, 2015-10-30 12:52:14 -0700, , handle minified function table,,
5177,418ebad61c099737b4fd56f3030b1fd1e0e89a2b,lon Zakai <alonzakai@gmail.com>, 2015-10-30 12:19:06 -0700, , fix type detection globals,,
5178,dbb84c00b4bf99340fab321d7e6a8105ab56d643,lon Zakai <alonzakai@gmail.com>, 2015-10-30 11:30:14 -0700, , debug note,,
5179,d93ca9e91e89e6ca9dc3c974e6dfd3329a3d4f17,lon Zakai <alonzakai@gmail.com>, 2015-10-30 10:54:13 -0700, , fix printing large negative,,
5180,1f3825ea4fd717de015705651b9911a47751f13c,lon Zakai <alonzakai@gmail.com>, 2015-10-30 10:29:08 -0700, , parse large negative literal properly,,
5181,cd0ada7a34736790d368c11ec536dd32c36aeffa,lon Zakai <alonzakai@gmail.com>, 2015-10-30 10:00:48 -0700, , function pointer,,
5182,57b80000a96e08592237f36dc46ecf60932ab6e4,lon Zakai <alonzakai@gmail.com>, 2015-10-30 09:59:05 -0700, , add optimized hello world testcase,,
5183,86626450d7bc165be94efb004e9e3699074777a4,lon Zakai <alonzakai@gmail.com>, 2015-10-29 21:39:05 -0700, , nop import test pas,,
5184,0b866305ecee485ec5ef2a314fe79ac2df52b21a,lon Zakai <alonzakai@gmail.com>, 2015-10-29 20:21:26 -0700, , fix unary printing,,
5185,39cef85d01a43b4f1352c065ddccc58d3b62bfe5,lon Zakai <alonzakai@gmail.com>, 2015-10-29 20:19:46 -0700, , clz,,
5186,f32ab820be47c968685dc5e24e27218bb0c9861c,lon Zakai <alonzakai@gmail.com>, 2015-10-29 20:09:15 -0700, , fix large int constant,,
5187,3e8516cb75e7941da0b16443fbd4b4a298fa3644,lon Zakai <alonzakai@gmail.com>, 2015-10-29 19:59:10 -0700, , double fix,,
5188,88b6549b74dd767733cd823de410e00067a79756,lon Zakai <alonzakai@gmail.com>, 2015-10-29 19:58:09 -0700, , add test auto updater,,
5189,c9b8b17f6f5d01511bcfd511bfda28584533b467,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:55:50 -0700, , print memory section,,
5190,891de7b9f3c173095b0e09d0f9069c14c6bd2bc4,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:50:13 -0700, , print call_import properly,,
5191,58df6d31beaedacbd7e6d017b12cd31d088d9339,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:35:43 -0700, , fix conditional type,,
5192,ec5e1d0ffdc2769d754cc7c679c3b286f787bb6e,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:32:59 -0700, , emit empty block,,
5193,d93c05bfa9a7fc813c31c7972e6680d6ef0277d2,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:26:23 -0700, , fix convert,,
5194,4d319b84d83ad3168ee798c52071e4b4b831e042,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:19:55 -0700, , use nop,,
5195,19abe35b2c6d191e14170c993e757cee786867cb,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:11:56 -0700, , ignore switch,,
5196,afcd6fdb7fc9158a76616de552b53bd1c2b233df,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:03:02 -0700, , fix load printing,,
5197,14c68d96986a61509c76a45db3b834d5d94de0cc,lon Zakai <alonzakai@gmail.com>, 2015-10-29 17:00:26 -0700, , add faq,,
5198,9f9e8f848dd3472e4ffa9f1ba301dd261f5e10da,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:56:54 -0700, , fix function type printing,,
5199,c9cd6c7726df7ee0ca4cb6ecf969d98c50335046,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:56:45 -0700, , fix check.py try interpreter provided,,
5200,d9ae6b3dcccf32a46e92d18105dcf38702e25573,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:44:44 -0700, , fix export printing,,
5201,067c77c9607764405bdf42023c3105a7e6ee81fd,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:41:19 -0700, , pretty print wasm interpreter error,,
5202,38b9478a1572af74b0aa7e45810fd5c7c4e27329,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:24:29 -0700, , improve check.py,,
5203,a25d742c05732e9168494b434e15889352e3ee60,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:04:56 -0700, , update readme,,
5204,773a24bb0b597255ab6c7fa2d33e3b7cc1a853cf,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:04:23 -0700, , update example,,
5205,107261df1decdb33b5baeb18844e2e5e0d4a9880,lon Zakai <alonzakai@gmail.com>, 2015-10-29 16:04:18 -0700, , ignore diff file,,
5206,665b5a7114e4c39671fbcb41bd76f9b665b2bda7,lon Zakai <alonzakai@gmail.com>, 2015-10-29 15:58:55 -0700, , optimize away trivial block,,
5207,8874a52a603e1c275ff3dea90d0b1ad312294c5c,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:56:49 -0700, , ensure deterministic order check,,
5208,2d0cdc28ee75c46d65f8e2e251010cd3698dc9a8,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:55:23 -0700, , todo,,
5209,660759c84a256c15124a0e5d3ffcfbf8f02946bb,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:54:23 -0700, , note,,
5210,12e127b0bc921fedd036119eabd605aaedf3af5c,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:52:08 -0700, , comment,,
5211,a005bec46e86ec4b51c780ef3e21e89532fa8457,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:51:06 -0700, , syntax highlighting,,
5212,9ad8db8fb7fbf6be577682b88a12f58b841ed296,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:49:47 -0700, , improve example,,
5213,44d196ec4a14478924ccb585a8c5b028050ccc91,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:48:37 -0700, , mention opts,,
5214,310ef3b5425da52ccacb3bbcba70193e7e11b8cb,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:46:46 -0700, , improve text,,
5215,3da36398325dde5246c85107a8472b5839b6fad5,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:46:15 -0700, , mention,,
5216,4bcc077b34d4ea936415039efd2172043bde0425,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:45:25 -0700, , fix readme,,
5217,106fc21e9175b9c1e8d299f6093cc56b169cb876,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:44:17 -0700, , update name,,
5218,1c10dce09bd5cd5596f71e398c3924bd26a10901,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:42:31 -0700, , add example image,,
5219,ded68e787b5cfa2cf50f6598354003e40ae92e18,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:21:01 -0700, , nicer check.py output,,
5220,ea64101b46407fb1e0f3f6c257f1089253b961ac,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:17:29 -0700, , fix check.py,,
5221,2d131f6fe75cfc9477d2a326aedb1b634a3193a6,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:16:14 -0700, , add emcc output testcase,,
5222,4fc6bdf853d112f235cd70ff6608f5b38283a733,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:15:34 -0700, , support emcc separate asm output,,
5223,29bea2e426d3506a3fd510c9539797a57f542204,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:11:26 -0700, , support almost asm,,
5224,f0058e1fb8e1273a714f7a2526fe19addb2c0f4f,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:10:58 -0700, , check.py improvement,,
5225,d455c96f4d4b6289c6a75dd918d138de5129ef04,lon Zakai <alonzakai@gmail.com>, 2015-10-29 13:01:03 -0700, , add testing,,
5226,4fbd4f442a899e1c87cb1a60f52916339d42534c,lon Zakai <alonzakai@gmail.com>, 2015-10-29 12:51:54 -0700, , asm2wasm update,,
5227,afdeefd0df0e2806af334954021e437d78659c11,lon Zakai <alonzakai@gmail.com>, 2015-10-29 12:46:03 -0700, , readme update,,
5228,ece9ebc81b7011beba27a48bd723046392e34147,lon Zakai <alonzakai@gmail.com>, 2015-10-29 12:45:13 -0700, , add missing header,,
5229,b3b8d931068ff09e245233451b4f1d47648f1e2b,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:57:08 -0700, , add readme,,
5230,4e7ef8331977cf53d7160d8928ad343d573e204b,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:56:57 -0700, , add .gitignore,,
5231,2379c7f345e55ea04a91a78f7b64193487264d3d,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:56:35 -0700, , add bin dir,,
5232,cd9ae15a0fdf560d2f85919d7d5220e440ec7928,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:55:56 -0700, , add build script,,
5233,2c9072c4e58f6908d68a401557479b9e74456df2,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:57:21 -0700, , add test,,
5234,5c839bb462f43f7a356593f537edb08014d0f25f,lon Zakai <alonzakai@gmail.com>, 2015-10-29 11:55:39 -0700, ,,,
