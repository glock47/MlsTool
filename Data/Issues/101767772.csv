url,state,title,label,comments_url,diff_url,patch_url
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3131,closed,Fix warning on new-stable,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3131/comments,https://github.com/bytecodealliance/wasmtime/pull/3131.diff,https://github.com/bytecodealliance/wasmtime/pull/3131.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3126,closed,Add x64 support for remaining int-to-int extend simd instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3126/comments,https://github.com/bytecodealliance/wasmtime/pull/3126.diff,https://github.com/bytecodealliance/wasmtime/pull/3126.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3070,closed,Enable simd_extmul_* for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3070/comments,https://github.com/bytecodealliance/wasmtime/pull/3070.diff,https://github.com/bytecodealliance/wasmtime/pull/3070.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3110,closed,C/++ API - Add ability to define functions in linker without Store context, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3110/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3077,closed,Async counter part to `wasmtime::Linker::module` (`module_async`), ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3077/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3114,closed,Implement simd i32x4 trunc sat f64x2 for x64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3114/comments,https://github.com/bytecodealliance/wasmtime/pull/3114.diff,https://github.com/bytecodealliance/wasmtime/pull/3114.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3116,closed,Update `gimli` to 0.25; `addr2line` to 0.16,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3116/comments,https://github.com/bytecodealliance/wasmtime/pull/3116.diff,https://github.com/bytecodealliance/wasmtime/pull/3116.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3117,closed,cranelift: Move most debug-level logs to the trace level,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3117/comments,https://github.com/bytecodealliance/wasmtime/pull/3117.diff,https://github.com/bytecodealliance/wasmtime/pull/3117.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3113,closed,Add more documentation to `ModuleLimits` and `InstanceLimits`.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3113/comments,https://github.com/bytecodealliance/wasmtime/pull/3113.diff,https://github.com/bytecodealliance/wasmtime/pull/3113.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3058,closed,CLIF interpreter: handle divide-by-zero traps, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3058/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3104,closed,Some api docs,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3104/comments,https://github.com/bytecodealliance/wasmtime/pull/3104.diff,https://github.com/bytecodealliance/wasmtime/pull/3104.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3093,closed,A bit of inconsistency in the WASI tutorial , ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3093/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3096,closed,Riscv disassembler support,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3096/comments,https://github.com/bytecodealliance/wasmtime/pull/3096.diff,https://github.com/bytecodealliance/wasmtime/pull/3096.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3064,closed,Cranelift: ishl with i128 shift amount panics on AArch64,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3064/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3090,closed,"wiggle: dummy executor traps instead of panics, improve testing",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3090/comments,https://github.com/bytecodealliance/wasmtime/pull/3090.diff,https://github.com/bytecodealliance/wasmtime/pull/3090.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/90,closed,Capabilities granularity too low,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/90/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3034,closed,Update documentation in Config about Send futures,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3034/comments,https://github.com/bytecodealliance/wasmtime/pull/3034.diff,https://github.com/bytecodealliance/wasmtime/pull/3034.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3078,closed,wasmtime: fix typo in `Store` doc, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3078/comments,https://github.com/bytecodealliance/wasmtime/pull/3078.diff,https://github.com/bytecodealliance/wasmtime/pull/3078.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3071,closed,Add setter for enabling multi-memory to the C API.,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3071/comments,https://github.com/bytecodealliance/wasmtime/pull/3071.diff,https://github.com/bytecodealliance/wasmtime/pull/3071.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3069,closed,Upgrade Tokio to 1.8.1,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3069/comments,https://github.com/bytecodealliance/wasmtime/pull/3069.diff,https://github.com/bytecodealliance/wasmtime/pull/3069.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3068,closed,Fix error messages reporting number of expected vs actual params,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3068/comments,https://github.com/bytecodealliance/wasmtime/pull/3068.diff,https://github.com/bytecodealliance/wasmtime/pull/3068.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3056,closed,aarch64: Fix incorrect encoding of large const values in icmp.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3056/comments,https://github.com/bytecodealliance/wasmtime/pull/3056.diff,https://github.com/bytecodealliance/wasmtime/pull/3056.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3057,closed,Implement Display for settings::Value,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3057/comments,https://github.com/bytecodealliance/wasmtime/pull/3057.diff,https://github.com/bytecodealliance/wasmtime/pull/3057.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3055,closed,Remove some dead code in Cranelift,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3055/comments,https://github.com/bytecodealliance/wasmtime/pull/3055.diff,https://github.com/bytecodealliance/wasmtime/pull/3055.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3044,closed,Enable the simd_i32x4_trunc_sat_f64x2 test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3044/comments,https://github.com/bytecodealliance/wasmtime/pull/3044.diff,https://github.com/bytecodealliance/wasmtime/pull/3044.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3046,closed,Changing `out_of_fuel_async_yield's` `injection_count` to a `u64` type, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3046/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3035,closed,Enable the simd_i16x8_q15mulr_sat_s test on AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3035/comments,https://github.com/bytecodealliance/wasmtime/pull/3035.diff,https://github.com/bytecodealliance/wasmtime/pull/3035.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3032,closed,aarch64: Implement missing atomic rmw ops,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3032/comments,https://github.com/bytecodealliance/wasmtime/pull/3032.diff,https://github.com/bytecodealliance/wasmtime/pull/3032.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/398,closed,Update wasi-common version, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/398/comments,https://github.com/bytecodealliance/wasmtime/pull/398.diff,https://github.com/bytecodealliance/wasmtime/pull/398.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3026,closed,aarch64: Implement TLS ELF GD Relocations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3026/comments,https://github.com/bytecodealliance/wasmtime/pull/3026.diff,https://github.com/bytecodealliance/wasmtime/pull/3026.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3028,closed,cranelift-codegen: move old x86 and RISC-V backends to isa/legacy/.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3028/comments,https://github.com/bytecodealliance/wasmtime/pull/3028.diff,https://github.com/bytecodealliance/wasmtime/pull/3028.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3027,closed,aarch64: Implement lowering i128 select,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3027/comments,https://github.com/bytecodealliance/wasmtime/pull/3027.diff,https://github.com/bytecodealliance/wasmtime/pull/3027.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/12,closed,Implement tables and call_indirect, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/12/comments,https://github.com/bytecodealliance/wasmtime/pull/12.diff,https://github.com/bytecodealliance/wasmtime/pull/12.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3024,closed,Increase timeout for poll_oneoff tests,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3024/comments,https://github.com/bytecodealliance/wasmtime/pull/3024.diff,https://github.com/bytecodealliance/wasmtime/pull/3024.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3023,closed,Simplify the list of builtin intrinsics Wasmtime needs, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3023/comments,https://github.com/bytecodealliance/wasmtime/pull/3023.diff,https://github.com/bytecodealliance/wasmtime/pull/3023.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3012,closed,s390x: Basic support for IaddIfcout,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3012/comments,https://github.com/bytecodealliance/wasmtime/pull/3012.diff,https://github.com/bytecodealliance/wasmtime/pull/3012.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3011,closed,"Fix `bint` on x64, and make `bextend` consistent with bool representation.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3011/comments,https://github.com/bytecodealliance/wasmtime/pull/3011.diff,https://github.com/bytecodealliance/wasmtime/pull/3011.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2058,closed,"Aarch64 codegen: represent bool `true` as -1, not 1.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2058/comments,https://github.com/bytecodealliance/wasmtime/pull/2058.diff,https://github.com/bytecodealliance/wasmtime/pull/2058.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3014,closed,Fix updating srclocs in truncate_last_branch,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3014/comments,https://github.com/bytecodealliance/wasmtime/pull/3014.diff,https://github.com/bytecodealliance/wasmtime/pull/3014.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3005,closed,aarch64: Implement uextend/sextend for  i128 values,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3005/comments,https://github.com/bytecodealliance/wasmtime/pull/3005.diff,https://github.com/bytecodealliance/wasmtime/pull/3005.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3002,closed,"aarch64 implement brz,brnz,br_icmp for i128 values",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3002/comments,https://github.com/bytecodealliance/wasmtime/pull/3002.diff,https://github.com/bytecodealliance/wasmtime/pull/3002.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3007,closed,Use hand written legalizations in simple_legalize,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3007/comments,https://github.com/bytecodealliance/wasmtime/pull/3007.diff,https://github.com/bytecodealliance/wasmtime/pull/3007.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3008,closed,aarch64: Implement ireduce for i128 values,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3008/comments,https://github.com/bytecodealliance/wasmtime/pull/3008.diff,https://github.com/bytecodealliance/wasmtime/pull/3008.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3004,closed,aarch64: Implement lowering rotl/rotr for i128 values,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3004/comments,https://github.com/bytecodealliance/wasmtime/pull/3004.diff,https://github.com/bytecodealliance/wasmtime/pull/3004.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2997,closed,Enable the simd_i8x16_arith2 test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2997/comments,https://github.com/bytecodealliance/wasmtime/pull/2997.diff,https://github.com/bytecodealliance/wasmtime/pull/2997.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3010,closed,Connect helper C symbols to their static library, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3010/comments,https://github.com/bytecodealliance/wasmtime/pull/3010.diff,https://github.com/bytecodealliance/wasmtime/pull/3010.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3006,closed,Unable to compile when dynamically linking `wasmtime` crate. , ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3006/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2983,closed,Calling `Caller::get_export` allocates memory that can't be un-allocated,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2983/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2991,closed,s390x: Add z14 support,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2991/comments,https://github.com/bytecodealliance/wasmtime/pull/2991.diff,https://github.com/bytecodealliance/wasmtime/pull/2991.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2985,closed,aarch64: Implement I128 Loads and Stores,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2985/comments,https://github.com/bytecodealliance/wasmtime/pull/2985.diff,https://github.com/bytecodealliance/wasmtime/pull/2985.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2990,closed,aarch64: Add i128 bit counting instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2990/comments,https://github.com/bytecodealliance/wasmtime/pull/2990.diff,https://github.com/bytecodealliance/wasmtime/pull/2990.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2988,closed,s390x: Add support for atomic operations (part 1),cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2988/comments,https://github.com/bytecodealliance/wasmtime/pull/2988.diff,https://github.com/bytecodealliance/wasmtime/pull/2988.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2976,closed,Lower Arm64Call relocations in cranelift-object,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2976/comments,https://github.com/bytecodealliance/wasmtime/pull/2976.diff,https://github.com/bytecodealliance/wasmtime/pull/2976.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2975,closed,aarch64: Implement lowering i128 icmp instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2975/comments,https://github.com/bytecodealliance/wasmtime/pull/2975.diff,https://github.com/bytecodealliance/wasmtime/pull/2975.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2959,closed,aarch64 add basic i128 bit ops,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2959/comments,https://github.com/bytecodealliance/wasmtime/pull/2959.diff,https://github.com/bytecodealliance/wasmtime/pull/2959.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2964,closed,cranelift: Merge all run tests into runtests dir,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2964/comments,https://github.com/bytecodealliance/wasmtime/pull/2964.diff,https://github.com/bytecodealliance/wasmtime/pull/2964.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2966,closed,Enable the simd_int_to_int_extend test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2966/comments,https://github.com/bytecodealliance/wasmtime/pull/2966.diff,https://github.com/bytecodealliance/wasmtime/pull/2966.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2946,closed,expose eager thread-local resource initialization on Engine,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2946/comments,https://github.com/bytecodealliance/wasmtime/pull/2946.diff,https://github.com/bytecodealliance/wasmtime/pull/2946.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/277,closed,Remove broken links in README.md., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/277/comments,https://github.com/bytecodealliance/wasmtime/pull/277.diff,https://github.com/bytecodealliance/wasmtime/pull/277.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2947,closed,global module registry: switch from Mutex to RwLock,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2947/comments,https://github.com/bytecodealliance/wasmtime/pull/2947.diff,https://github.com/bytecodealliance/wasmtime/pull/2947.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2882,closed,"on or after June 6, 2021: review and un-ignore RUSTSEC-2021-0064", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2882/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2963,closed,Remove empty crates directories, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2963/comments,https://github.com/bytecodealliance/wasmtime/pull/2963.diff,https://github.com/bytecodealliance/wasmtime/pull/2963.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2897,closed,Implement RFC 11: Redesigning Wasmtime's APIs,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2897/comments,https://github.com/bytecodealliance/wasmtime/pull/2897.diff,https://github.com/bytecodealliance/wasmtime/pull/2897.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2958,closed,x64: fix AVX512 flag checks,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2958/comments,https://github.com/bytecodealliance/wasmtime/pull/2958.diff,https://github.com/bytecodealliance/wasmtime/pull/2958.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2938,closed,aarch64 tests no longer running on CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2938/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2937,closed,"bench-api: pass in explicit stdio files, allow repeated instantiations per compilation", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2937/comments,https://github.com/bytecodealliance/wasmtime/pull/2937.diff,https://github.com/bytecodealliance/wasmtime/pull/2937.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2932,closed,Try to ease up on CI usage slightly, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2932/comments,https://github.com/bytecodealliance/wasmtime/pull/2932.diff,https://github.com/bytecodealliance/wasmtime/pull/2932.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2929,closed,Provide BB layout info externally in terms of code offsets.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2929/comments,https://github.com/bytecodealliance/wasmtime/pull/2929.diff,https://github.com/bytecodealliance/wasmtime/pull/2929.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2928,closed,"Implement iadd,isub,imul for i128 in AArch64",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2928/comments,https://github.com/bytecodealliance/wasmtime/pull/2928.diff,https://github.com/bytecodealliance/wasmtime/pull/2928.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2892,closed,Handle i128 arguments in the aarch64 ABI,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2892/comments,https://github.com/bytecodealliance/wasmtime/pull/2892.diff,https://github.com/bytecodealliance/wasmtime/pull/2892.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2924,closed,Remove reference to non-existent README.md in wasi-tokio crate.,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2924/comments,https://github.com/bytecodealliance/wasmtime/pull/2924.diff,https://github.com/bytecodealliance/wasmtime/pull/2924.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2914,closed,x64: lower fcvt_from_uint to VCVTUDQ2PS when possible,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2914/comments,https://github.com/bytecodealliance/wasmtime/pull/2914.diff,https://github.com/bytecodealliance/wasmtime/pull/2914.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2911,closed,cranelift: move wasmtests in cranelift-wasm,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2911/comments,https://github.com/bytecodealliance/wasmtime/pull/2911.diff,https://github.com/bytecodealliance/wasmtime/pull/2911.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2910,closed,Tests for cranelift-wasm use wat files located outside the crate, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2910/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2900,closed,Implement simple benchmarks for instantiation., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2900/comments,https://github.com/bytecodealliance/wasmtime/pull/2900.diff,https://github.com/bytecodealliance/wasmtime/pull/2900.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2883,closed,Cranelift: `unreachable` in `cranelift-codegen/src/isa/x64/lower.rs:1800:26` for `Opcode::SsubSat`,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2883/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2749,closed,cranelift: properly splatting bytes in emit_small_memset,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2749/comments,https://github.com/bytecodealliance/wasmtime/pull/2749.diff,https://github.com/bytecodealliance/wasmtime/pull/2749.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2899,closed,wasi-tokio: up test timeouts from 20ms to 50ms,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2899/comments,https://github.com/bytecodealliance/wasmtime/pull/2899.diff,https://github.com/bytecodealliance/wasmtime/pull/2899.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2879,closed,Implement the `allow-unknown-exports` option for the run command.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2879/comments,https://github.com/bytecodealliance/wasmtime/pull/2879.diff,https://github.com/bytecodealliance/wasmtime/pull/2879.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2893,closed,Remove errno dependency from cranelift-jit,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2893/comments,https://github.com/bytecodealliance/wasmtime/pull/2893.diff,https://github.com/bytecodealliance/wasmtime/pull/2893.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2896,closed,wasi stdio tests: increase timeout,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2896/comments,https://github.com/bytecodealliance/wasmtime/pull/2896.diff,https://github.com/bytecodealliance/wasmtime/pull/2896.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2874,closed,Support IBM z/Architecture,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2874/comments,https://github.com/bytecodealliance/wasmtime/pull/2874.diff,https://github.com/bytecodealliance/wasmtime/pull/2874.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2886,closed,Allow i128 amount operands on shift instructions in the x64 backend,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2886/comments,https://github.com/bytecodealliance/wasmtime/pull/2886.diff,https://github.com/bytecodealliance/wasmtime/pull/2886.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2832,closed,"wasi-common support for tokio, & wiggle support for async methods containing sync code",wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2832/comments,https://github.com/bytecodealliance/wasmtime/pull/2832.diff,https://github.com/bytecodealliance/wasmtime/pull/2832.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2881,closed,cargo deny: ignore RUSTSEC-2021-0064, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2881/comments,https://github.com/bytecodealliance/wasmtime/pull/2881.diff,https://github.com/bytecodealliance/wasmtime/pull/2881.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2865,closed,Expose new `JITModule::read_got_entry` function,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2865/comments,https://github.com/bytecodealliance/wasmtime/pull/2865.diff,https://github.com/bytecodealliance/wasmtime/pull/2865.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2730,closed,Remove some dependencies,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2730/comments,https://github.com/bytecodealliance/wasmtime/pull/2730.diff,https://github.com/bytecodealliance/wasmtime/pull/2730.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2746,closed,"Allow passing arbitrary MemFlags to emit_small_mem{cpy,move}",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2746/comments,https://github.com/bytecodealliance/wasmtime/pull/2746.diff,https://github.com/bytecodealliance/wasmtime/pull/2746.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2757,closed,Optimize calling a WebAssembly function,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2757/comments,https://github.com/bytecodealliance/wasmtime/pull/2757.diff,https://github.com/bytecodealliance/wasmtime/pull/2757.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2862,closed,Enable the simd_boolean test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2862/comments,https://github.com/bytecodealliance/wasmtime/pull/2862.diff,https://github.com/bytecodealliance/wasmtime/pull/2862.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2854,closed,debug: Support big-endian architectures, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2854/comments,https://github.com/bytecodealliance/wasmtime/pull/2854.diff,https://github.com/bytecodealliance/wasmtime/pull/2854.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2791,closed,Add a compile command to Wasmtime.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2791/comments,https://github.com/bytecodealliance/wasmtime/pull/2791.diff,https://github.com/bytecodealliance/wasmtime/pull/2791.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2857,closed,Factor out byteorder in cranelift,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2857/comments,https://github.com/bytecodealliance/wasmtime/pull/2857.diff,https://github.com/bytecodealliance/wasmtime/pull/2857.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2850,closed,Wasmtime: missing trampolines for declarative element segments (should be treated as possibly exported).,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2850/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2736,closed,Add resource limiting to the Wasmtime API.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2736/comments,https://github.com/bytecodealliance/wasmtime/pull/2736.diff,https://github.com/bytecodealliance/wasmtime/pull/2736.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2848,closed,Use `map_or` instead of `map` and `unwrap_or` in `TableElement::into_raw`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2848/comments,https://github.com/bytecodealliance/wasmtime/pull/2848.diff,https://github.com/bytecodealliance/wasmtime/pull/2848.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2842,closed,Additional performance improvements for module instantiation.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2842/comments,https://github.com/bytecodealliance/wasmtime/pull/2842.diff,https://github.com/bytecodealliance/wasmtime/pull/2842.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2845,closed,Generate unwind information on Win64 with the old backend,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2845/comments,https://github.com/bytecodealliance/wasmtime/pull/2845.diff,https://github.com/bytecodealliance/wasmtime/pull/2845.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2758,closed,cranelift: Use a deferred display mechanism instead of `log_enabled!`,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2758/comments,https://github.com/bytecodealliance/wasmtime/pull/2758.diff,https://github.com/bytecodealliance/wasmtime/pull/2758.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2843,closed,cranelift: Fix spillslot regression on big-endian platforms,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2843/comments,https://github.com/bytecodealliance/wasmtime/pull/2843.diff,https://github.com/bytecodealliance/wasmtime/pull/2843.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2837,closed,Add back support for accumulating outgoing arguments,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2837/comments,https://github.com/bytecodealliance/wasmtime/pull/2837.diff,https://github.com/bytecodealliance/wasmtime/pull/2837.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2836,closed,Fix frame size after unwind rework,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2836/comments,https://github.com/bytecodealliance/wasmtime/pull/2836.diff,https://github.com/bytecodealliance/wasmtime/pull/2836.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2838,closed,Allow unwind support to work without a frame pointer,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2838/comments,https://github.com/bytecodealliance/wasmtime/pull/2838.diff,https://github.com/bytecodealliance/wasmtime/pull/2838.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2840,closed,cranelift: always spill i32 with i64 stores,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2840/comments,https://github.com/bytecodealliance/wasmtime/pull/2840.diff,https://github.com/bytecodealliance/wasmtime/pull/2840.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2833,closed,x64: fix Inst::store to understand all scalar types,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2833/comments,https://github.com/bytecodealliance/wasmtime/pull/2833.diff,https://github.com/bytecodealliance/wasmtime/pull/2833.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2823,closed,Cranelift AArch64: Improve the handling of callee-saved registers,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2823/comments,https://github.com/bytecodealliance/wasmtime/pull/2823.diff,https://github.com/bytecodealliance/wasmtime/pull/2823.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2828,closed,"Fix srem.{i8,i16}",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2828/comments,https://github.com/bytecodealliance/wasmtime/pull/2828.diff,https://github.com/bytecodealliance/wasmtime/pull/2828.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2830,closed,CI: pin nightly Rust version to limit breakages to explicit pinning updates., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2830/comments,https://github.com/bytecodealliance/wasmtime/pull/2830.diff,https://github.com/bytecodealliance/wasmtime/pull/2830.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2750,closed,Support declaring anonymous functions and data objects,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2750/comments,https://github.com/bytecodealliance/wasmtime/pull/2750.diff,https://github.com/bytecodealliance/wasmtime/pull/2750.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2821,closed,Precompute fields in `VMOffsets`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2821/comments,https://github.com/bytecodealliance/wasmtime/pull/2821.diff,https://github.com/bytecodealliance/wasmtime/pull/2821.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2814,closed,wasmtime-environ: Mark all VM offset functions as `#[inline]`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2814/comments,https://github.com/bytecodealliance/wasmtime/pull/2814.diff,https://github.com/bytecodealliance/wasmtime/pull/2814.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2811,closed,Refactor store frame information.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2811/comments,https://github.com/bytecodealliance/wasmtime/pull/2811.diff,https://github.com/bytecodealliance/wasmtime/pull/2811.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/793,closed,Reconciling `wasmtime::Instance` and `Send`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/793/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1178,closed,"Enable Rust/C functions to ""hook up"" to multi-value functions",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1178/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2805,closed,Release 0.26.0.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2805/comments,https://github.com/bytecodealliance/wasmtime/pull/2805.diff,https://github.com/bytecodealliance/wasmtime/pull/2805.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2718,closed,Switch default to new x86_64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2718/comments,https://github.com/bytecodealliance/wasmtime/pull/2718.diff,https://github.com/bytecodealliance/wasmtime/pull/2718.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2802,closed,"Trap in host function leaks memory, 0.25 regression ",bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2802/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2801,closed,Fix incorrect range in `ininitialize_instance`., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2801/comments,https://github.com/bytecodealliance/wasmtime/pull/2801.diff,https://github.com/bytecodealliance/wasmtime/pull/2801.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2800,closed,cranelift-frontend: Seal unsealed block in switch generation,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2800/comments,https://github.com/bytecodealliance/wasmtime/pull/2800.diff,https://github.com/bytecodealliance/wasmtime/pull/2800.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2796,closed,"Revert ""wiggle: generate a span that is present at all levels""",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2796/comments,https://github.com/bytecodealliance/wasmtime/pull/2796.diff,https://github.com/bytecodealliance/wasmtime/pull/2796.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2777,closed,Don't document peepmatic in CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2777/comments,https://github.com/bytecodealliance/wasmtime/pull/2777.diff,https://github.com/bytecodealliance/wasmtime/pull/2777.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2793,closed,Disable module linking in spectest fuzzing,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2793/comments,https://github.com/bytecodealliance/wasmtime/pull/2793.diff,https://github.com/bytecodealliance/wasmtime/pull/2793.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2792,closed,Update wasm-smith dependency,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2792/comments,https://github.com/bytecodealliance/wasmtime/pull/2792.diff,https://github.com/bytecodealliance/wasmtime/pull/2792.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2790,closed,wiggle::async_trait is defined as async_trait::async_trait(?Send), ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2790/comments,https://github.com/bytecodealliance/wasmtime/pull/2790.diff,https://github.com/bytecodealliance/wasmtime/pull/2790.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2106,closed,Make spectest fuzzing more deterministic,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2106/comments,https://github.com/bytecodealliance/wasmtime/pull/2106.diff,https://github.com/bytecodealliance/wasmtime/pull/2106.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2787,closed,Remove fixed todo,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2787/comments,https://github.com/bytecodealliance/wasmtime/pull/2787.diff,https://github.com/bytecodealliance/wasmtime/pull/2787.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2782,closed,wiggle: generate a span that is present at all levels,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2782/comments,https://github.com/bytecodealliance/wasmtime/pull/2782.diff,https://github.com/bytecodealliance/wasmtime/pull/2782.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2785,closed,"wiggle-wasmtime: use fully qualified Rc, RefCell in expansion",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2785/comments,https://github.com/bytecodealliance/wasmtime/pull/2785.diff,https://github.com/bytecodealliance/wasmtime/pull/2785.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2776,closed,`wasmtime-wasi` usability: re-exports of common siblings,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2776/comments,https://github.com/bytecodealliance/wasmtime/pull/2776.diff,https://github.com/bytecodealliance/wasmtime/pull/2776.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2525,closed,Don't compile all trampolines for all modules on each module-linking module, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2525/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2763,closed,Handle `srem` properly when `avoid_div_traps` is false.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2763/comments,https://github.com/bytecodealliance/wasmtime/pull/2763.diff,https://github.com/bytecodealliance/wasmtime/pull/2763.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2760,closed,"wiggle: delete GuestErrorConversion, improve some error reporting",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2760/comments,https://github.com/bytecodealliance/wasmtime/pull/2760.diff,https://github.com/bytecodealliance/wasmtime/pull/2760.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2756,closed,wasi: make WasiSched::sleep fallible,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2756/comments,https://github.com/bytecodealliance/wasmtime/pull/2756.diff,https://github.com/bytecodealliance/wasmtime/pull/2756.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2741,closed,Split out fiber stacks from fibers.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2741/comments,https://github.com/bytecodealliance/wasmtime/pull/2741.diff,https://github.com/bytecodealliance/wasmtime/pull/2741.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2743,closed,Fix an incorrect link.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2743/comments,https://github.com/bytecodealliance/wasmtime/pull/2743.diff,https://github.com/bytecodealliance/wasmtime/pull/2743.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2739,closed,cranelift-module: Add support for passing a StackMapSink when defining functions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2739/comments,https://github.com/bytecodealliance/wasmtime/pull/2739.diff,https://github.com/bytecodealliance/wasmtime/pull/2739.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2738,closed,No way to access stackmaps using cranelift-module, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2738/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2740,closed,Explicitly install LLDB in CI to fix intermittent failure on Ubuntu 20.04 image., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2740/comments,https://github.com/bytecodealliance/wasmtime/pull/2740.diff,https://github.com/bytecodealliance/wasmtime/pull/2740.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2456,closed,Consider adding support for MacOS exception ports, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2456/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2731,closed,Make 0.25.0 release,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2731/comments,https://github.com/bytecodealliance/wasmtime/pull/2731.diff,https://github.com/bytecodealliance/wasmtime/pull/2731.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2724,closed,Cranelift AArch64: Add initial support for the Armv8.1 atomics,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2724/comments,https://github.com/bytecodealliance/wasmtime/pull/2724.diff,https://github.com/bytecodealliance/wasmtime/pull/2724.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2710,closed,"Rework/simplify unwind infrastructure, implement Windows unwind, and add Windows/new-backend to CI.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2710/comments,https://github.com/bytecodealliance/wasmtime/pull/2710.diff,https://github.com/bytecodealliance/wasmtime/pull/2710.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2722,closed,Update RELEASES.md to mention the change to `Engine::new`.,wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2722/comments,https://github.com/bytecodealliance/wasmtime/pull/2722.diff,https://github.com/bytecodealliance/wasmtime/pull/2722.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2518,closed,Implement the pooling instance allocator.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2518/comments,https://github.com/bytecodealliance/wasmtime/pull/2518.diff,https://github.com/bytecodealliance/wasmtime/pull/2518.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2714,closed,EntityList improvments,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2714/comments,https://github.com/bytecodealliance/wasmtime/pull/2714.diff,https://github.com/bytecodealliance/wasmtime/pull/2714.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2713,closed,[simd] Implement load*_lane and store*_lane,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2713/comments,https://github.com/bytecodealliance/wasmtime/pull/2713.diff,https://github.com/bytecodealliance/wasmtime/pull/2713.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2678,closed,x86-64 Windows fastcall ABI support.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2678/comments,https://github.com/bytecodealliance/wasmtime/pull/2678.diff,https://github.com/bytecodealliance/wasmtime/pull/2678.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2701,closed,wiggle: support for Rust async,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2701/comments,https://github.com/bytecodealliance/wasmtime/pull/2701.diff,https://github.com/bytecodealliance/wasmtime/pull/2701.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2696,closed,fuzz: Remove peepmatic fuzz targets,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2696/comments,https://github.com/bytecodealliance/wasmtime/pull/2696.diff,https://github.com/bytecodealliance/wasmtime/pull/2696.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2695,open,peepmatic: rewrite type checking to use traditional unification,cranelift:area:peepmatic,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2695/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2682,closed,Fix some `i128` shift-related bugs in x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2682/comments,https://github.com/bytecodealliance/wasmtime/pull/2682.diff,https://github.com/bytecodealliance/wasmtime/pull/2682.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2685,closed,Fix incomplete trap metadata due to multiple traps at one address.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2685/comments,https://github.com/bytecodealliance/wasmtime/pull/2685.diff,https://github.com/bytecodealliance/wasmtime/pull/2685.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2683,closed,Fix bad jumptable block ref when DCE removes a block.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2683/comments,https://github.com/bytecodealliance/wasmtime/pull/2683.diff,https://github.com/bytecodealliance/wasmtime/pull/2683.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2672,closed,Cranelift: ishl.i8 with i128 shift amount panics,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2672/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2662,closed,Surprisingly slow module compilation,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2662/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2632,closed,Switch macOS to using mach ports for trap handling,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2632/comments,https://github.com/bytecodealliance/wasmtime/pull/2632.diff,https://github.com/bytecodealliance/wasmtime/pull/2632.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2674,closed,Make Module object safe,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2674/comments,https://github.com/bytecodealliance/wasmtime/pull/2674.diff,https://github.com/bytecodealliance/wasmtime/pull/2674.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2671,closed,Clean up our github issue templates, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2671/comments,https://github.com/bytecodealliance/wasmtime/pull/2671.diff,https://github.com/bytecodealliance/wasmtime/pull/2671.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2661,closed,Make our issue templates less scary :-p, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2661/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2668,closed,rename some wiggle tests to reflect new witx ast names,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2668/comments,https://github.com/bytecodealliance/wasmtime/pull/2668.diff,https://github.com/bytecodealliance/wasmtime/pull/2668.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2653,closed,More atomic ops,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2653/comments,https://github.com/bytecodealliance/wasmtime/pull/2653.diff,https://github.com/bytecodealliance/wasmtime/pull/2653.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2527,closed,Add serde serialization support for the full clif ir,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2527/comments,https://github.com/bytecodealliance/wasmtime/pull/2527.diff,https://github.com/bytecodealliance/wasmtime/pull/2527.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2654,closed,Add methods to construct RexFlags from OperandSizes.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2654/comments,https://github.com/bytecodealliance/wasmtime/pull/2654.diff,https://github.com/bytecodealliance/wasmtime/pull/2654.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2658,closed,Specified type for V128AnyTrue,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2658/comments,https://github.com/bytecodealliance/wasmtime/pull/2658.diff,https://github.com/bytecodealliance/wasmtime/pull/2658.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2642,closed,Path existence doesn't work correctly for dirs on Windows,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2642/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2638,closed,Code runs in Wasmer (Cranelift JIT) but crashes in wasmtime with out of bounds memory access,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2638/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2648,closed,Tweak C API for fuel,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2648/comments,https://github.com/bytecodealliance/wasmtime/pull/2648.diff,https://github.com/bytecodealliance/wasmtime/pull/2648.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2644,closed,Runtime invocation overhead 800ns/op, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2644/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2641,closed,WasiCtx: default to empty/sink stdio files rather than throw,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2641/comments,https://github.com/bytecodealliance/wasmtime/pull/2641.diff,https://github.com/bytecodealliance/wasmtime/pull/2641.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2487,closed,rewrite wasi-common in terms of cap-std,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2487/comments,https://github.com/bytecodealliance/wasmtime/pull/2487.diff,https://github.com/bytecodealliance/wasmtime/pull/2487.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2636,closed,Fix build_value_labels_ranges for newBE when there are no labels,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2636/comments,https://github.com/bytecodealliance/wasmtime/pull/2636.diff,https://github.com/bytecodealliance/wasmtime/pull/2636.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2631,closed,Make the stackslot offsets available for debuginfo,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2631/comments,https://github.com/bytecodealliance/wasmtime/pull/2631.diff,https://github.com/bytecodealliance/wasmtime/pull/2631.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2620,closed,Fix `fd_readdir` to properly truncate directory entry names.,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2620/comments,https://github.com/bytecodealliance/wasmtime/pull/2620.diff,https://github.com/bytecodealliance/wasmtime/pull/2620.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2626,closed,cranelift x64: add instruction set checks for popcnt/tzcnt/lzcnt,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2626/comments,https://github.com/bytecodealliance/wasmtime/pull/2626.diff,https://github.com/bytecodealliance/wasmtime/pull/2626.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2623,closed,Update some wasm-tools dependencies, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2623/comments,https://github.com/bytecodealliance/wasmtime/pull/2623.diff,https://github.com/bytecodealliance/wasmtime/pull/2623.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2621,closed,Replace MachInst::gen_zero_len_nop with gen_nop(0),cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2621/comments,https://github.com/bytecodealliance/wasmtime/pull/2621.diff,https://github.com/bytecodealliance/wasmtime/pull/2621.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2614,closed,Avoid creating 0-sized nops in x64's gen_nop().,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2614/comments,https://github.com/bytecodealliance/wasmtime/pull/2614.diff,https://github.com/bytecodealliance/wasmtime/pull/2614.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2617,closed,Add knobs to limit memories/tables in a `Store`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2617/comments,https://github.com/bytecodealliance/wasmtime/pull/2617.diff,https://github.com/bytecodealliance/wasmtime/pull/2617.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2616,closed,Disable module-linking in plain instantiate fuzzers,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2616/comments,https://github.com/bytecodealliance/wasmtime/pull/2616.diff,https://github.com/bytecodealliance/wasmtime/pull/2616.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2615,closed,Only handle signals at pcs with trap information,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2615/comments,https://github.com/bytecodealliance/wasmtime/pull/2615.diff,https://github.com/bytecodealliance/wasmtime/pull/2615.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2606,closed,"wasmtime: clarify `Memory::{read,write}` behavior with out-of-bounds ranges",wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2606/comments,https://github.com/bytecodealliance/wasmtime/pull/2606.diff,https://github.com/bytecodealliance/wasmtime/pull/2606.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2599,closed,bench-api: Allow access to files in the current directory, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2599/comments,https://github.com/bytecodealliance/wasmtime/pull/2599.diff,https://github.com/bytecodealliance/wasmtime/pull/2599.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/70,open,WASI: expand networking functions,enhancement,https://api.github.com/repos/bytecodealliance/wasmtime/issues/70/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2601,closed,Add additional tests for icmp-i128. Fixes #1136.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2601/comments,https://github.com/bytecodealliance/wasmtime/pull/2601.diff,https://github.com/bytecodealliance/wasmtime/pull/2601.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2603,closed,Fix cargo-deny issue with raw-cpuid advisory., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2603/comments,https://github.com/bytecodealliance/wasmtime/pull/2603.diff,https://github.com/bytecodealliance/wasmtime/pull/2603.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2565,closed,Detailed debug-info (DWARF) support in new backends (initially x64).,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2565/comments,https://github.com/bytecodealliance/wasmtime/pull/2565.diff,https://github.com/bytecodealliance/wasmtime/pull/2565.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2434,closed,Implement support for `async` functions in Wasmtime,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2434/comments,https://github.com/bytecodealliance/wasmtime/pull/2434.diff,https://github.com/bytecodealliance/wasmtime/pull/2434.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2595,closed,Implement Mach-O TLS access for x64 newBE, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2595/comments,https://github.com/bytecodealliance/wasmtime/pull/2595.diff,https://github.com/bytecodealliance/wasmtime/pull/2595.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2589,closed,Cranelift AArch64: Improve the Popcnt implementation,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2589/comments,https://github.com/bytecodealliance/wasmtime/pull/2589.diff,https://github.com/bytecodealliance/wasmtime/pull/2589.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2575,closed,Wasmtime trap handler doesn't build on latest libc 0.2.82 for aarch64-apple-darwin,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2575/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2541,closed,x64 and aarch64: allow StructArgument and StructReturn args.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2541/comments,https://github.com/bytecodealliance/wasmtime/pull/2541.diff,https://github.com/bytecodealliance/wasmtime/pull/2541.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2540,closed,Add ELF TLS support in new x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2540/comments,https://github.com/bytecodealliance/wasmtime/pull/2540.diff,https://github.com/bytecodealliance/wasmtime/pull/2540.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2585,closed,Update support for the module linking proposal,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2585/comments,https://github.com/bytecodealliance/wasmtime/pull/2585.diff,https://github.com/bytecodealliance/wasmtime/pull/2585.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2539,closed,Support for I128 operations in x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2539/comments,https://github.com/bytecodealliance/wasmtime/pull/2539.diff,https://github.com/bytecodealliance/wasmtime/pull/2539.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2584,closed,Adjust `wasmtime_func_callback_*` type signature, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2584/comments,https://github.com/bytecodealliance/wasmtime/pull/2584.diff,https://github.com/bytecodealliance/wasmtime/pull/2584.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2432,closed,Investigate non-deterministic failures with SIMD spec tests on the x64 backend , ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2432/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2577,closed,wasi-c2 improvements, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2577/comments,https://github.com/bytecodealliance/wasmtime/pull/2577.diff,https://github.com/bytecodealliance/wasmtime/pull/2577.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2576,closed,x64 bugfix: prevent load-op fusion of cmp because it could be emitted multiple times.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2576/comments,https://github.com/bytecodealliance/wasmtime/pull/2576.diff,https://github.com/bytecodealliance/wasmtime/pull/2576.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2574,closed,wasmtime-bench-api: Randomize the locations of heap objects, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2574/comments,https://github.com/bytecodealliance/wasmtime/pull/2574.diff,https://github.com/bytecodealliance/wasmtime/pull/2574.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2570,closed,wiggle: generate flags using `bitflags`,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2570/comments,https://github.com/bytecodealliance/wasmtime/pull/2570.diff,https://github.com/bytecodealliance/wasmtime/pull/2570.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2564,closed,machinst lowering: update inst color when scanning across branch to allow more load-op merging.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2564/comments,https://github.com/bytecodealliance/wasmtime/pull/2564.diff,https://github.com/bytecodealliance/wasmtime/pull/2564.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2568,closed,Cargo.toml metadata for publishing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2568/comments,https://github.com/bytecodealliance/wasmtime/pull/2568.diff,https://github.com/bytecodealliance/wasmtime/pull/2568.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2563,closed,"fix: `dst` should be `Writable`, not `ValueRegs`", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2563/comments,https://github.com/bytecodealliance/wasmtime/pull/2563.diff,https://github.com/bytecodealliance/wasmtime/pull/2563.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2558,closed,x64: support PC-rel symbol references using the GOT when in PIC mode.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2558/comments,https://github.com/bytecodealliance/wasmtime/pull/2558.diff,https://github.com/bytecodealliance/wasmtime/pull/2558.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2550,closed,wiggle: introduce Trap enum,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2550/comments,https://github.com/bytecodealliance/wasmtime/pull/2550.diff,https://github.com/bytecodealliance/wasmtime/pull/2550.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2557,closed,Wasmtime 0.22.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2557/comments,https://github.com/bytecodealliance/wasmtime/pull/2557.diff,https://github.com/bytecodealliance/wasmtime/pull/2557.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2555,closed,Document that the module linking proposal is implemented,wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2555/comments,https://github.com/bytecodealliance/wasmtime/pull/2555.diff,https://github.com/bytecodealliance/wasmtime/pull/2555.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2549,closed,wasmtime-wiggle: missing memory can just Trap,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2549/comments,https://github.com/bytecodealliance/wasmtime/pull/2549.diff,https://github.com/bytecodealliance/wasmtime/pull/2549.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2538,closed,Multi-register value support: framework for Values wider than machine registers.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2538/comments,https://github.com/bytecodealliance/wasmtime/pull/2538.diff,https://github.com/bytecodealliance/wasmtime/pull/2538.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2548,closed,"aarch64: fix reg/imm `sub` insts that read `SP`, not the zero register.", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2548/comments,https://github.com/bytecodealliance/wasmtime/pull/2548.diff,https://github.com/bytecodealliance/wasmtime/pull/2548.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2546,closed,x64: handle tests of b1 values correctly (only LSB is defined).,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2546/comments,https://github.com/bytecodealliance/wasmtime/pull/2546.diff,https://github.com/bytecodealliance/wasmtime/pull/2546.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2520,closed,"Prune deps, comment deny.toml",lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2520/comments,https://github.com/bytecodealliance/wasmtime/pull/2520.diff,https://github.com/bytecodealliance/wasmtime/pull/2520.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2522,closed,cranelift-native crate: add API variant allowing backend selection.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2522/comments,https://github.com/bytecodealliance/wasmtime/pull/2522.diff,https://github.com/bytecodealliance/wasmtime/pull/2522.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2517,closed,cranelift-object: reject symbol names with NUL byte without panic'ing.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2517/comments,https://github.com/bytecodealliance/wasmtime/pull/2517.diff,https://github.com/bytecodealliance/wasmtime/pull/2517.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2519,closed,Lint deps tree with cargo deny,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2519/comments,https://github.com/bytecodealliance/wasmtime/pull/2519.diff,https://github.com/bytecodealliance/wasmtime/pull/2519.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2516,closed,"Add filestat_get for stdout, stdin and stderr",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2516/comments,https://github.com/bytecodealliance/wasmtime/pull/2516.diff,https://github.com/bytecodealliance/wasmtime/pull/2516.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2515,closed,"fstat on stdout, stderr and stdin fails with ""bad file descriptor""",bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2515/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2512,closed,bench-api: Clean up the benchmarking API, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2512/comments,https://github.com/bytecodealliance/wasmtime/pull/2512.diff,https://github.com/bytecodealliance/wasmtime/pull/2512.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2437,closed,Introduce benchmarking API, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2437/comments,https://github.com/bytecodealliance/wasmtime/pull/2437.diff,https://github.com/bytecodealliance/wasmtime/pull/2437.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2492,closed,Support explicit endianness in Cranelift IR MemFlags,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2492/comments,https://github.com/bytecodealliance/wasmtime/pull/2492.diff,https://github.com/bytecodealliance/wasmtime/pull/2492.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2505,closed,Fix a memory reservation bug in `reserve_modules`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2505/comments,https://github.com/bytecodealliance/wasmtime/pull/2505.diff,https://github.com/bytecodealliance/wasmtime/pull/2505.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2506,closed,Fix fuzzer expectation about valid modules,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2506/comments,https://github.com/bytecodealliance/wasmtime/pull/2506.diff,https://github.com/bytecodealliance/wasmtime/pull/2506.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2497,closed,Enable fuzzing the module linking implementation,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2497/comments,https://github.com/bytecodealliance/wasmtime/pull/2497.diff,https://github.com/bytecodealliance/wasmtime/pull/2497.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2490,closed,x64 lowering fix: i32.popcnt should not merge load and make it 64-bit.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2490/comments,https://github.com/bytecodealliance/wasmtime/pull/2490.diff,https://github.com/bytecodealliance/wasmtime/pull/2490.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1697,closed,Fix missing modification of jump table in licm,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1697/comments,https://github.com/bytecodealliance/wasmtime/pull/1697.diff,https://github.com/bytecodealliance/wasmtime/pull/1697.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2486,closed,Two Lucet-related fixes to stack overflow handling.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2486/comments,https://github.com/bytecodealliance/wasmtime/pull/2486.diff,https://github.com/bytecodealliance/wasmtime/pull/2486.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2483,closed,x64 regalloc register order: put caller-saves (volatiles) first.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2483/comments,https://github.com/bytecodealliance/wasmtime/pull/2483.diff,https://github.com/bytecodealliance/wasmtime/pull/2483.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2364,closed,peepmatic: Make the test-we-can-get-and-rebuild peephole optimizers test work on arm64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2364/comments,https://github.com/bytecodealliance/wasmtime/pull/2364.diff,https://github.com/bytecodealliance/wasmtime/pull/2364.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2473,closed,Fix lowering instruction-sinking (load-merging) bug.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2473/comments,https://github.com/bytecodealliance/wasmtime/pull/2473.diff,https://github.com/bytecodealliance/wasmtime/pull/2473.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2293,closed,souper-harvest: Do not generate assignments of constants,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2293/comments,https://github.com/bytecodealliance/wasmtime/pull/2293.diff,https://github.com/bytecodealliance/wasmtime/pull/2293.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2094,closed,Implement the module linking proposal in Wasmtime,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2094/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2403,closed,SimpleJIT hot code swapping,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2403/comments,https://github.com/bytecodealliance/wasmtime/pull/2403.diff,https://github.com/bytecodealliance/wasmtime/pull/2403.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2471,closed,Disable some x64 SIMD tests that seem to be nondeterministic., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2471/comments,https://github.com/bytecodealliance/wasmtime/pull/2471.diff,https://github.com/bytecodealliance/wasmtime/pull/2471.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2413,closed,Cranelift AArch64: Further vector constant improvements,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2413/comments,https://github.com/bytecodealliance/wasmtime/pull/2413.diff,https://github.com/bytecodealliance/wasmtime/pull/2413.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2453,closed,Add differential fuzzing against wasmi (a Wasm interpreter).,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2453/comments,https://github.com/bytecodealliance/wasmtime/pull/2453.diff,https://github.com/bytecodealliance/wasmtime/pull/2453.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2463,closed,x64 backend: fix condition-code used for part of explicit heap check.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2463/comments,https://github.com/bytecodealliance/wasmtime/pull/2463.diff,https://github.com/bytecodealliance/wasmtime/pull/2463.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2462,closed,Debug info: two fixes in x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2462/comments,https://github.com/bytecodealliance/wasmtime/pull/2462.diff,https://github.com/bytecodealliance/wasmtime/pull/2462.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2464,closed,Update to a CentOS 7 docker container for binary compatible builds., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2464/comments,https://github.com/bytecodealliance/wasmtime/pull/2464.diff,https://github.com/bytecodealliance/wasmtime/pull/2464.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2460,closed,interpreter: fix confusion caused by overloading of FuncRef,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2460/comments,https://github.com/bytecodealliance/wasmtime/pull/2460.diff,https://github.com/bytecodealliance/wasmtime/pull/2460.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2440,closed,Adds support for i32x4.trunc_sat_f32x4_u,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2440/comments,https://github.com/bytecodealliance/wasmtime/pull/2440.diff,https://github.com/bytecodealliance/wasmtime/pull/2440.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2414,closed,arm64: Refactor Inst::Extend handling,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2414/comments,https://github.com/bytecodealliance/wasmtime/pull/2414.diff,https://github.com/bytecodealliance/wasmtime/pull/2414.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2450,closed,Fix Wasm translator bug: end of toplevel frame is branched-to only for fallthrough returns.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2450/comments,https://github.com/bytecodealliance/wasmtime/pull/2450.diff,https://github.com/bytecodealliance/wasmtime/pull/2450.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2449,closed,Add FuncEnvironment hooks to generate prologue and epilogue code.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2449/comments,https://github.com/bytecodealliance/wasmtime/pull/2449.diff,https://github.com/bytecodealliance/wasmtime/pull/2449.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2446,closed,Propagate optional import names to the wasmtime/C API,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2446/comments,https://github.com/bytecodealliance/wasmtime/pull/2446.diff,https://github.com/bytecodealliance/wasmtime/pull/2446.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2448,closed,refresh wasi-nn/spec version to an in-history commit, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2448/comments,https://github.com/bytecodealliance/wasmtime/pull/2448.diff,https://github.com/bytecodealliance/wasmtime/pull/2448.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2400,closed,Specify unsealed / unfilled blocks,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2400/comments,https://github.com/bytecodealliance/wasmtime/pull/2400.diff,https://github.com/bytecodealliance/wasmtime/pull/2400.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2428,closed,wiggle: support overlapping immutable borrows,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2428/comments,https://github.com/bytecodealliance/wasmtime/pull/2428.diff,https://github.com/bytecodealliance/wasmtime/pull/2428.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2433,closed,Run rustfmt 1.48,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2433/comments,https://github.com/bytecodealliance/wasmtime/pull/2433.diff,https://github.com/bytecodealliance/wasmtime/pull/2433.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2426,closed,"Carry `MemFlag`s on loads/stores in MachInst backends, and emit trap info only where needed.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2426/comments,https://github.com/bytecodealliance/wasmtime/pull/2426.diff,https://github.com/bytecodealliance/wasmtime/pull/2426.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2389,closed,x64 backend: merge loads into ALU ops when appropriate. ,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2389/comments,https://github.com/bytecodealliance/wasmtime/pull/2389.diff,https://github.com/bytecodealliance/wasmtime/pull/2389.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2366,closed,MachInst lowering logic: allow effectful instructions to merge.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2366/comments,https://github.com/bytecodealliance/wasmtime/pull/2366.diff,https://github.com/bytecodealliance/wasmtime/pull/2366.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2406,closed,wasmtime: Remove typo in doc comment,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2406/comments,https://github.com/bytecodealliance/wasmtime/pull/2406.diff,https://github.com/bytecodealliance/wasmtime/pull/2406.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2376,closed,AArch64 SIMD: replace `LoadSplat` with pattern-matching on load+splat,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2376/comments,https://github.com/bytecodealliance/wasmtime/pull/2376.diff,https://github.com/bytecodealliance/wasmtime/pull/2376.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2425,closed,Fix assertion with cross-store values in `Func::new`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2425/comments,https://github.com/bytecodealliance/wasmtime/pull/2425.diff,https://github.com/bytecodealliance/wasmtime/pull/2425.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2408,closed,Fix a use-after-free of trampoline code,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2408/comments,https://github.com/bytecodealliance/wasmtime/pull/2408.diff,https://github.com/bytecodealliance/wasmtime/pull/2408.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2420,closed,Update docs to reflect that reference types work on aarch64 now,wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2420/comments,https://github.com/bytecodealliance/wasmtime/pull/2420.diff,https://github.com/bytecodealliance/wasmtime/pull/2420.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2410,closed,Fix and enable GC on new x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2410/comments,https://github.com/bytecodealliance/wasmtime/pull/2410.diff,https://github.com/bytecodealliance/wasmtime/pull/2410.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2411,closed,Don't run old x86 backend-specific tests with new x64 backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2411/comments,https://github.com/bytecodealliance/wasmtime/pull/2411.diff,https://github.com/bytecodealliance/wasmtime/pull/2411.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2079,closed,machinst x64: investigate remaining test failures,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2079/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2369,closed,Cranelift AArch64: Various small fixes,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2369/comments,https://github.com/bytecodealliance/wasmtime/pull/2369.diff,https://github.com/bytecodealliance/wasmtime/pull/2369.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2407,closed,Remove the global variable associated with traps,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2407/comments,https://github.com/bytecodealliance/wasmtime/pull/2407.diff,https://github.com/bytecodealliance/wasmtime/pull/2407.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2354,closed,Add extension marker to i32 arguments of builtin functions, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2354/comments,https://github.com/bytecodealliance/wasmtime/pull/2354.diff,https://github.com/bytecodealliance/wasmtime/pull/2354.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2363,closed,Do value-extensions at ABI boundaries only when ABI requires it.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2363/comments,https://github.com/bytecodealliance/wasmtime/pull/2363.diff,https://github.com/bytecodealliance/wasmtime/pull/2363.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2395,closed,Add support for brff/brif and icmp_sp to new x64 backend to support Lucet.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2395/comments,https://github.com/bytecodealliance/wasmtime/pull/2395.diff,https://github.com/bytecodealliance/wasmtime/pull/2395.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2386,closed,Runtime panics with 'every on-stack externref inside a Wasm frame should have an entry in the VMExternRefActivationsTable',bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2386/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2394,closed,Remove size-of-struct asserts that break with some Rust versions.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2394/comments,https://github.com/bytecodealliance/wasmtime/pull/2394.diff,https://github.com/bytecodealliance/wasmtime/pull/2394.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2328,closed,Implement emission of constants,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2328/comments,https://github.com/bytecodealliance/wasmtime/pull/2328.diff,https://github.com/bytecodealliance/wasmtime/pull/2328.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2393,closed,arm64: Fold some constants into load instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2393/comments,https://github.com/bytecodealliance/wasmtime/pull/2393.diff,https://github.com/bytecodealliance/wasmtime/pull/2393.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2390,closed,More SimpleJIT refactorings,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2390/comments,https://github.com/bytecodealliance/wasmtime/pull/2390.diff,https://github.com/bytecodealliance/wasmtime/pull/2390.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/4,closed,imported functions, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/4/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2388,closed,"MachInst backends: handle SourceLocs out-of-band, not in Insts.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2388/comments,https://github.com/bytecodealliance/wasmtime/pull/2388.diff,https://github.com/bytecodealliance/wasmtime/pull/2388.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2059,closed,Validate modules while translating,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2059/comments,https://github.com/bytecodealliance/wasmtime/pull/2059.diff,https://github.com/bytecodealliance/wasmtime/pull/2059.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2367,closed,Update immediate and transitive dependencies,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2367/comments,https://github.com/bytecodealliance/wasmtime/pull/2367.diff,https://github.com/bytecodealliance/wasmtime/pull/2367.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2344,closed,Wasm native stack limit protections don't always work with ASan, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2344/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2319,closed,Refactor how signatures/trampolines are stored in `Store`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2319/comments,https://github.com/bytecodealliance/wasmtime/pull/2319.diff,https://github.com/bytecodealliance/wasmtime/pull/2319.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2360,closed,aarch64: Fix aarch64_map_regs for FpuRRI,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2360/comments,https://github.com/bytecodealliance/wasmtime/pull/2360.diff,https://github.com/bytecodealliance/wasmtime/pull/2360.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2356,closed,machinst ABI: Support for accumulating outgoing args,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2356/comments,https://github.com/bytecodealliance/wasmtime/pull/2356.diff,https://github.com/bytecodealliance/wasmtime/pull/2356.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2345,closed,machinst ABI: Allow back-end to define stack alignment,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2345/comments,https://github.com/bytecodealliance/wasmtime/pull/2345.diff,https://github.com/bytecodealliance/wasmtime/pull/2345.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2346,closed,machinst ABI: Pass fixed frame size to gen_clobber_restore,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2346/comments,https://github.com/bytecodealliance/wasmtime/pull/2346.diff,https://github.com/bytecodealliance/wasmtime/pull/2346.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2353,closed,Update nightly used on CI for testing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2353/comments,https://github.com/bytecodealliance/wasmtime/pull/2353.diff,https://github.com/bytecodealliance/wasmtime/pull/2353.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2318,closed,Serialized wasmtime modules are extremely large, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2318/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2347,closed,Cranelift: Specifically formatted valid WASM panics with 'block Insertion point not in the layout',bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2347/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2352,closed,x64 new-backend CI: use `Cargo.lock` in build., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2352/comments,https://github.com/bytecodealliance/wasmtime/pull/2352.diff,https://github.com/bytecodealliance/wasmtime/pull/2352.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2351,closed,peepmatic: Update to z3 version 0.7.1,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2351/comments,https://github.com/bytecodealliance/wasmtime/pull/2351.diff,https://github.com/bytecodealliance/wasmtime/pull/2351.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2348,closed,Print a message in `log_wat` while fuzzing,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2348/comments,https://github.com/bytecodealliance/wasmtime/pull/2348.diff,https://github.com/bytecodealliance/wasmtime/pull/2348.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2310,closed,Cranelift AArch64: Improve code generation for vector constants,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2310/comments,https://github.com/bytecodealliance/wasmtime/pull/2310.diff,https://github.com/bytecodealliance/wasmtime/pull/2310.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2343,closed,Fix icmp_imm.i128,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2343/comments,https://github.com/bytecodealliance/wasmtime/pull/2343.diff,https://github.com/bytecodealliance/wasmtime/pull/2343.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1097,open,Redundant SSA parameter,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1097/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2341,closed,Updates comments on Int to Float conversion,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2341/comments,https://github.com/bytecodealliance/wasmtime/pull/2341.diff,https://github.com/bytecodealliance/wasmtime/pull/2341.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2287,closed,Some SimpleJIT improvements,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2287/comments,https://github.com/bytecodealliance/wasmtime/pull/2287.diff,https://github.com/bytecodealliance/wasmtime/pull/2287.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2339,closed,peepmatic: update z3 dependency to version 0.7.0,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2339/comments,https://github.com/bytecodealliance/wasmtime/pull/2339.diff,https://github.com/bytecodealliance/wasmtime/pull/2339.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2163,closed,Investigate slow fuzz module generation with binaryen, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2163/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2278,closed,Introduce the Cranelift IR instruction `LoadSplat`,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2278/comments,https://github.com/bytecodealliance/wasmtime/pull/2278.diff,https://github.com/bytecodealliance/wasmtime/pull/2278.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2329,closed,CI: upload built peepholes as artifacts, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2329/comments,https://github.com/bytecodealliance/wasmtime/pull/2329.diff,https://github.com/bytecodealliance/wasmtime/pull/2329.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2298,closed,Replace unmaintained directories crate - RUSTSEC-2020-0054, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2298/comments,https://github.com/bytecodealliance/wasmtime/pull/2298.diff,https://github.com/bytecodealliance/wasmtime/pull/2298.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2305,closed,Don't store `Arc<VMInterrupts>` in instances,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2305/comments,https://github.com/bytecodealliance/wasmtime/pull/2305.diff,https://github.com/bytecodealliance/wasmtime/pull/2305.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2306,closed,Remove the `finished_functions` field in `Instance`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2306/comments,https://github.com/bytecodealliance/wasmtime/pull/2306.diff,https://github.com/bytecodealliance/wasmtime/pull/2306.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2300,closed,Don't allocate a new ISA for each `Func::wrap`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2300/comments,https://github.com/bytecodealliance/wasmtime/pull/2300.diff,https://github.com/bytecodealliance/wasmtime/pull/2300.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2301,closed,Avoid allocations in trampoline shims,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2301/comments,https://github.com/bytecodealliance/wasmtime/pull/2301.diff,https://github.com/bytecodealliance/wasmtime/pull/2301.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2292,closed,Fix typo,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2292/comments,https://github.com/bytecodealliance/wasmtime/pull/2292.diff,https://github.com/bytecodealliance/wasmtime/pull/2292.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2290,closed,Register source locations for instructions that may load in x64 backend, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2290/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2257,closed,Peepmatic: Do not use paths in linear IR,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2257/comments,https://github.com/bytecodealliance/wasmtime/pull/2257.diff,https://github.com/bytecodealliance/wasmtime/pull/2257.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2284,closed,Fix enabling interrupts in fuzzers,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2284/comments,https://github.com/bytecodealliance/wasmtime/pull/2284.diff,https://github.com/bytecodealliance/wasmtime/pull/2284.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2249,closed,Rework the interface of cranelift-module,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2249/comments,https://github.com/bytecodealliance/wasmtime/pull/2249.diff,https://github.com/bytecodealliance/wasmtime/pull/2249.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2267,closed,"Fix AArch64 ABI to respect half-caller-save, half-callee-save vec regs.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2267/comments,https://github.com/bytecodealliance/wasmtime/pull/2267.diff,https://github.com/bytecodealliance/wasmtime/pull/2267.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2260,closed,Add ARM32 build test to CI., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2260/comments,https://github.com/bytecodealliance/wasmtime/pull/2260.diff,https://github.com/bytecodealliance/wasmtime/pull/2260.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2259,closed,Fix arm32 build after some ABI framework changes.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2259/comments,https://github.com/bytecodealliance/wasmtime/pull/2259.diff,https://github.com/bytecodealliance/wasmtime/pull/2259.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2224,closed,arm64: Use SignedOffset rather than PreIndexed addressing mode for ca…,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2224/comments,https://github.com/bytecodealliance/wasmtime/pull/2224.diff,https://github.com/bytecodealliance/wasmtime/pull/2224.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2228,closed,AArch64: Add test cases for callee-saved SIMD & FP registers,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2228/comments,https://github.com/bytecodealliance/wasmtime/pull/2228.diff,https://github.com/bytecodealliance/wasmtime/pull/2228.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2223,closed,"Support for SpiderMonkey's ""Wasm ABI 2020"" in general and on AArch64.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2223/comments,https://github.com/bytecodealliance/wasmtime/pull/2223.diff,https://github.com/bytecodealliance/wasmtime/pull/2223.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2230,closed,[machinst x64]: add lane operations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2230/comments,https://github.com/bytecodealliance/wasmtime/pull/2230.diff,https://github.com/bytecodealliance/wasmtime/pull/2230.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2218,closed,cranelift-object: Support per function sections,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2218/comments,https://github.com/bytecodealliance/wasmtime/pull/2218.diff,https://github.com/bytecodealliance/wasmtime/pull/2218.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2212,closed,Fix relocated readonly data in custom sections,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2212/comments,https://github.com/bytecodealliance/wasmtime/pull/2212.diff,https://github.com/bytecodealliance/wasmtime/pull/2212.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2103,closed,cranelift: arm32 codegen,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2103/comments,https://github.com/bytecodealliance/wasmtime/pull/2103.diff,https://github.com/bytecodealliance/wasmtime/pull/2103.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2214,closed,Fix Switch for 128bit integers,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2214/comments,https://github.com/bytecodealliance/wasmtime/pull/2214.diff,https://github.com/bytecodealliance/wasmtime/pull/2214.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2201,closed,wasi-common: code motion around type imports,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2201/comments,https://github.com/bytecodealliance/wasmtime/pull/2201.diff,https://github.com/bytecodealliance/wasmtime/pull/2201.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2181,closed,arm64: Combine mul + add into madd,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2181/comments,https://github.com/bytecodealliance/wasmtime/pull/2181.diff,https://github.com/bytecodealliance/wasmtime/pull/2181.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2203,closed,Clean up `clif-util`: use anyhow and structopt,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2203/comments,https://github.com/bytecodealliance/wasmtime/pull/2203.diff,https://github.com/bytecodealliance/wasmtime/pull/2203.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2184,closed,Harvest left-hand side superoptimization candidates,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2184/comments,https://github.com/bytecodealliance/wasmtime/pull/2184.diff,https://github.com/bytecodealliance/wasmtime/pull/2184.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2197,closed,Account for duplicated if-block params on `end` op in unreachable case.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2197/comments,https://github.com/bytecodealliance/wasmtime/pull/2197.diff,https://github.com/bytecodealliance/wasmtime/pull/2197.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2192,closed,Convert Souper optimizations to Peepmatic DSL,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2192/comments,https://github.com/bytecodealliance/wasmtime/pull/2192.diff,https://github.com/bytecodealliance/wasmtime/pull/2192.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2195,closed,machinst x64: two optimizations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2195/comments,https://github.com/bytecodealliance/wasmtime/pull/2195.diff,https://github.com/bytecodealliance/wasmtime/pull/2195.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2194,closed,wasm: Remove duplicated parameters when popping an If,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2194/comments,https://github.com/bytecodealliance/wasmtime/pull/2194.diff,https://github.com/bytecodealliance/wasmtime/pull/2194.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2193,closed,Update minimum Rust version in CI to 1.43.0., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2193/comments,https://github.com/bytecodealliance/wasmtime/pull/2193.diff,https://github.com/bytecodealliance/wasmtime/pull/2193.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/16,closed,Implement real jump tables, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/16/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2191,closed,machinst x64: fix gen_store_base_offset for multi-value returns,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2191/comments,https://github.com/bytecodealliance/wasmtime/pull/2191.diff,https://github.com/bytecodealliance/wasmtime/pull/2191.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2189,closed,machinst x64: a few small refactorings/renamings,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2189/comments,https://github.com/bytecodealliance/wasmtime/pull/2189.diff,https://github.com/bytecodealliance/wasmtime/pull/2189.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2188,closed,AArch64: Add various missing SIMD bits,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2188/comments,https://github.com/bytecodealliance/wasmtime/pull/2188.diff,https://github.com/bytecodealliance/wasmtime/pull/2188.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2142,closed,x64 new backend: port ABI implementation to shared infrastructure with AArch64.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2142/comments,https://github.com/bytecodealliance/wasmtime/pull/2142.diff,https://github.com/bytecodealliance/wasmtime/pull/2142.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2185,closed,Expand modules instantiated in instantiate-wasm-smith,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2185/comments,https://github.com/bytecodealliance/wasmtime/pull/2185.diff,https://github.com/bytecodealliance/wasmtime/pull/2185.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2187,closed,AArch64: Introduce an enum for ternary integer operations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2187/comments,https://github.com/bytecodealliance/wasmtime/pull/2187.diff,https://github.com/bytecodealliance/wasmtime/pull/2187.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2179,closed,arm64: Don't always materialise a 64-bit constant,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2179/comments,https://github.com/bytecodealliance/wasmtime/pull/2179.diff,https://github.com/bytecodealliance/wasmtime/pull/2179.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2173,closed,lldb cannot symbolise the last retq of functions,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2173/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2160,closed,wasi-common: factor out common string array writer code,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2160/comments,https://github.com/bytecodealliance/wasmtime/pull/2160.diff,https://github.com/bytecodealliance/wasmtime/pull/2160.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2182,closed,CI: pin nightly toolchain to 2020-08-31 - staticvec is broken with 09-01, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2182/comments,https://github.com/bytecodealliance/wasmtime/pull/2182.diff,https://github.com/bytecodealliance/wasmtime/pull/2182.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2140,closed,wasi-common: refactor error types,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2140/comments,https://github.com/bytecodealliance/wasmtime/pull/2140.diff,https://github.com/bytecodealliance/wasmtime/pull/2140.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2169,closed,"wiggle-wasmtime: witx paths should be relative to CARGO_MANIFEST_DIR,…",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2169/comments,https://github.com/bytecodealliance/wasmtime/pull/2169.diff,https://github.com/bytecodealliance/wasmtime/pull/2169.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2175,closed,Bump wasm-smith dependency,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2175/comments,https://github.com/bytecodealliance/wasmtime/pull/2175.diff,https://github.com/bytecodealliance/wasmtime/pull/2175.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2164,closed,wasi-common: remove unnecessary check - fixed in std since Rust 1.38,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2164/comments,https://github.com/bytecodealliance/wasmtime/pull/2164.diff,https://github.com/bytecodealliance/wasmtime/pull/2164.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2139,closed,wasi-common: switch all logs from `log` to `tracing`,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2139/comments,https://github.com/bytecodealliance/wasmtime/pull/2139.diff,https://github.com/bytecodealliance/wasmtime/pull/2139.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2162,closed,Add a fuzz target for instantiating `wasm-smith` modules,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2162/comments,https://github.com/bytecodealliance/wasmtime/pull/2162.diff,https://github.com/bytecodealliance/wasmtime/pull/2162.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2155,closed,AArch64: Implement SIMD conversions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2155/comments,https://github.com/bytecodealliance/wasmtime/pull/2155.diff,https://github.com/bytecodealliance/wasmtime/pull/2155.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2150,closed,arm64: Implement SIMD i64x2 multiply,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2150/comments,https://github.com/bytecodealliance/wasmtime/pull/2150.diff,https://github.com/bytecodealliance/wasmtime/pull/2150.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2148,closed,Fix put_input_in_reg,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2148/comments,https://github.com/bytecodealliance/wasmtime/pull/2148.diff,https://github.com/bytecodealliance/wasmtime/pull/2148.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1520,closed,"Lower fcvt_from_{u,s}int for 8 and 16 bit ints",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1520/comments,https://github.com/bytecodealliance/wasmtime/pull/1520.diff,https://github.com/bytecodealliance/wasmtime/pull/1520.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2141,closed,delete cranelift-faerie,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2141/comments,https://github.com/bytecodealliance/wasmtime/pull/2141.diff,https://github.com/bytecodealliance/wasmtime/pull/2141.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2138,closed,Use regalloc 0.0.30.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2138/comments,https://github.com/bytecodealliance/wasmtime/pull/2138.diff,https://github.com/bytecodealliance/wasmtime/pull/2138.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2134,closed,AArch64 ABI: properly store full 64-bit width of extended args/retvals.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2134/comments,https://github.com/bytecodealliance/wasmtime/pull/2134.diff,https://github.com/bytecodealliance/wasmtime/pull/2134.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2135,closed,Dependency version gardening,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2135/comments,https://github.com/bytecodealliance/wasmtime/pull/2135.diff,https://github.com/bytecodealliance/wasmtime/pull/2135.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2128,closed,Refactor AArch64 ABI support to extract common bits for shared impl with x64.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2128/comments,https://github.com/bytecodealliance/wasmtime/pull/2128.diff,https://github.com/bytecodealliance/wasmtime/pull/2128.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2130,closed,Upgrade to regalloc 0.0.29.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2130/comments,https://github.com/bytecodealliance/wasmtime/pull/2130.diff,https://github.com/bytecodealliance/wasmtime/pull/2130.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2129,closed,wiggle: doc fixes,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2129/comments,https://github.com/bytecodealliance/wasmtime/pull/2129.diff,https://github.com/bytecodealliance/wasmtime/pull/2129.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2123,closed,Update error message for bad table init, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2123/comments,https://github.com/bytecodealliance/wasmtime/pull/2123.diff,https://github.com/bytecodealliance/wasmtime/pull/2123.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2120,closed,Wasm translation bugfix: properly clean up value stack for else-branch when if-branch ends in unreachable.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2120/comments,https://github.com/bytecodealliance/wasmtime/pull/2120.diff,https://github.com/bytecodealliance/wasmtime/pull/2120.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2122,closed,Fix execution of spectest fuzzer,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2122/comments,https://github.com/bytecodealliance/wasmtime/pull/2122.diff,https://github.com/bytecodealliance/wasmtime/pull/2122.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2118,closed,Enable ref types and bulk memory operations by default,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2118/comments,https://github.com/bytecodealliance/wasmtime/pull/2118.diff,https://github.com/bytecodealliance/wasmtime/pull/2118.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1883,closed,Cranelift: `emit_stackmaps` should avoid walking the IR if the function doesn't use `r32` or `r64`,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1883/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2110,closed,Peepmatic: Implement maximum nesting level in parser,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2110/comments,https://github.com/bytecodealliance/wasmtime/pull/2110.diff,https://github.com/bytecodealliance/wasmtime/pull/2110.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2111,closed,"Rename ""Stackmap"" to ""StackMap""",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2111/comments,https://github.com/bytecodealliance/wasmtime/pull/2111.diff,https://github.com/bytecodealliance/wasmtime/pull/2111.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2105,closed,DW_TAG_enumerator gets lost in translation,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2105/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2067,closed,Enable the spec::simd::simd_lane test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2067/comments,https://github.com/bytecodealliance/wasmtime/pull/2067.diff,https://github.com/bytecodealliance/wasmtime/pull/2067.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2097,closed,Fix Wasm translator to handle loop parameters on br_table default target.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2097/comments,https://github.com/bytecodealliance/wasmtime/pull/2097.diff,https://github.com/bytecodealliance/wasmtime/pull/2097.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2053,closed,wiggle: lifetime not applied to field,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2053/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2081,closed,Aarch64: fix narrow integer-register extension with Baldrdash ABI.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2081/comments,https://github.com/bytecodealliance/wasmtime/pull/2081.diff,https://github.com/bytecodealliance/wasmtime/pull/2081.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2075,closed,AArch64: Implement SIMD floating-point arithmetic,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2075/comments,https://github.com/bytecodealliance/wasmtime/pull/2075.diff,https://github.com/bytecodealliance/wasmtime/pull/2075.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2061,closed,Aarch64 codegen quality: support more general add+extend address computations.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2061/comments,https://github.com/bytecodealliance/wasmtime/pull/2061.diff,https://github.com/bytecodealliance/wasmtime/pull/2061.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2051,closed,Aarch64 codegen quality: handle add-negative-imm as subtract.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2051/comments,https://github.com/bytecodealliance/wasmtime/pull/2051.diff,https://github.com/bytecodealliance/wasmtime/pull/2051.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1,closed,add binary files?, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2066,closed,Add timing for several new-backend stages.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2066/comments,https://github.com/bytecodealliance/wasmtime/pull/2066.diff,https://github.com/bytecodealliance/wasmtime/pull/2066.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2063,closed,arm64: Implement Vselect opcode,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2063/comments,https://github.com/bytecodealliance/wasmtime/pull/2063.diff,https://github.com/bytecodealliance/wasmtime/pull/2063.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2062,closed,AArch64: Improve code generation for Extractlane + Sextend / Uextend,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2062/comments,https://github.com/bytecodealliance/wasmtime/pull/2062.diff,https://github.com/bytecodealliance/wasmtime/pull/2062.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2052,closed,Add a GC function to the C API,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2052/comments,https://github.com/bytecodealliance/wasmtime/pull/2052.diff,https://github.com/bytecodealliance/wasmtime/pull/2052.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2038,closed,arm64: Enable arith2 tests,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2038/comments,https://github.com/bytecodealliance/wasmtime/pull/2038.diff,https://github.com/bytecodealliance/wasmtime/pull/2038.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2043,closed,Aarch64: handle csel with icmp/fcmp source without materializing the bool.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2043/comments,https://github.com/bytecodealliance/wasmtime/pull/2043.diff,https://github.com/bytecodealliance/wasmtime/pull/2043.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2042,closed,Aarch64: mask shift-amounts incorporated into reg-reg-shift ALU insts.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2042/comments,https://github.com/bytecodealliance/wasmtime/pull/2042.diff,https://github.com/bytecodealliance/wasmtime/pull/2042.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1960,closed,peepmatic: Be generic over the IR we are optimizing,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1960/comments,https://github.com/bytecodealliance/wasmtime/pull/1960.diff,https://github.com/bytecodealliance/wasmtime/pull/1960.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2022,closed,peepmatic: Add bnot operation,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2022/comments,https://github.com/bytecodealliance/wasmtime/pull/2022.diff,https://github.com/bytecodealliance/wasmtime/pull/2022.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2034,closed,Update to regalloc.rs 0.0.28.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2034/comments,https://github.com/bytecodealliance/wasmtime/pull/2034.diff,https://github.com/bytecodealliance/wasmtime/pull/2034.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/85,closed,Performance, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/85/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2026,closed,Fix signature of wasmtime_module_new,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2026/comments,https://github.com/bytecodealliance/wasmtime/pull/2026.diff,https://github.com/bytecodealliance/wasmtime/pull/2026.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2021,closed,AArch64: Introduce an enum to specify vector instruction operand sizes,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2021/comments,https://github.com/bytecodealliance/wasmtime/pull/2021.diff,https://github.com/bytecodealliance/wasmtime/pull/2021.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2019,closed,AArch64: Remove show_freg_sized(),cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2019/comments,https://github.com/bytecodealliance/wasmtime/pull/2019.diff,https://github.com/bytecodealliance/wasmtime/pull/2019.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2016,closed,arm64: Implement saturating SIMD arithmetic,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2016/comments,https://github.com/bytecodealliance/wasmtime/pull/2016.diff,https://github.com/bytecodealliance/wasmtime/pull/2016.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1852,closed,Reference type support in MachInst backend and on AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1852/comments,https://github.com/bytecodealliance/wasmtime/pull/1852.diff,https://github.com/bytecodealliance/wasmtime/pull/1852.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1939,closed,Fix Switch for 128bit integers,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1939/comments,https://github.com/bytecodealliance/wasmtime/pull/1939.diff,https://github.com/bytecodealliance/wasmtime/pull/1939.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1992,closed,Refactor the InstSize enum in the AArch64 backend,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1992/comments,https://github.com/bytecodealliance/wasmtime/pull/1992.diff,https://github.com/bytecodealliance/wasmtime/pull/1992.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/40,open,Examples for wasm2obj, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/40/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1996,closed,Support reference types in the C API,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1996/comments,https://github.com/bytecodealliance/wasmtime/pull/1996.diff,https://github.com/bytecodealliance/wasmtime/pull/1996.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1999,closed,machinst aarch64: fix encoding generation of left-shift by 0,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1999/comments,https://github.com/bytecodealliance/wasmtime/pull/1999.diff,https://github.com/bytecodealliance/wasmtime/pull/1999.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1977,closed,arm64: Implement SIMD shift instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1977/comments,https://github.com/bytecodealliance/wasmtime/pull/1977.diff,https://github.com/bytecodealliance/wasmtime/pull/1977.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2010,closed,WASI: make O_CREAT|O_TRUNC actually truncate files on Windows,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2010/comments,https://github.com/bytecodealliance/wasmtime/pull/2010.diff,https://github.com/bytecodealliance/wasmtime/pull/2010.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/929,open,Tracking issue for the reference types proposal,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/929/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1991,closed,Support reference types in `Func::wrap`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1991/comments,https://github.com/bytecodealliance/wasmtime/pull/1991.diff,https://github.com/bytecodealliance/wasmtime/pull/1991.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1868,closed,Enable `Func::wrap` support for functions using reference types,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1868/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1983,closed,Remove 'set frame pointer' unwind code from Windows x64 unwind. ,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1983/comments,https://github.com/bytecodealliance/wasmtime/pull/1983.diff,https://github.com/bytecodealliance/wasmtime/pull/1983.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1975,closed,peepmatic: add reminder by a power of two rule,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1975/comments,https://github.com/bytecodealliance/wasmtime/pull/1975.diff,https://github.com/bytecodealliance/wasmtime/pull/1975.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1984,closed,wasmtime: Support reference types in the Rust API,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1984/comments,https://github.com/bytecodealliance/wasmtime/pull/1984.diff,https://github.com/bytecodealliance/wasmtime/pull/1984.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1982,closed,fuzzing: Enable reference types by default,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1982/comments,https://github.com/bytecodealliance/wasmtime/pull/1982.diff,https://github.com/bytecodealliance/wasmtime/pull/1982.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1973,closed,wasmtime: Implement `table.fill`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1973/comments,https://github.com/bytecodealliance/wasmtime/pull/1973.diff,https://github.com/bytecodealliance/wasmtime/pull/1973.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1972,closed,"readme: Make ""wasmtime-go"" use monospace font",wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1972/comments,https://github.com/bytecodealliance/wasmtime/pull/1972.diff,https://github.com/bytecodealliance/wasmtime/pull/1972.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1962,closed,AArch64: avoid branches with explicit offsets at lowering stage.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1962/comments,https://github.com/bytecodealliance/wasmtime/pull/1962.diff,https://github.com/bytecodealliance/wasmtime/pull/1962.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1968,closed,Link to C API docs and make a landing page,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1968/comments,https://github.com/bytecodealliance/wasmtime/pull/1968.diff,https://github.com/bytecodealliance/wasmtime/pull/1968.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1966,closed,arm64: Implement basic SIMD arithmetic,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1966/comments,https://github.com/bytecodealliance/wasmtime/pull/1966.diff,https://github.com/bytecodealliance/wasmtime/pull/1966.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1961,closed,wasi-common virtfs pipe: convert to be Send and Sync; fix Clone,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1961/comments,https://github.com/bytecodealliance/wasmtime/pull/1961.diff,https://github.com/bytecodealliance/wasmtime/pull/1961.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1949,closed,🕳 Add virtual pipes to wasi-common,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1949/comments,https://github.com/bytecodealliance/wasmtime/pull/1949.diff,https://github.com/bytecodealliance/wasmtime/pull/1949.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1954,closed,AArch64: fix shift ops: mask shift amount.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1954/comments,https://github.com/bytecodealliance/wasmtime/pull/1954.diff,https://github.com/bytecodealliance/wasmtime/pull/1954.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1930,closed,Spectre mitigation on heap access overflow checks.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1930/comments,https://github.com/bytecodealliance/wasmtime/pull/1930.diff,https://github.com/bytecodealliance/wasmtime/pull/1930.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1938,closed,wiggle: factor BorrowChecker concrete implementation to live in engines,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1938/comments,https://github.com/bytecodealliance/wasmtime/pull/1938.diff,https://github.com/bytecodealliance/wasmtime/pull/1938.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1923,closed,wasmtime: Implement `table.get` and `table.set`,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1923/comments,https://github.com/bytecodealliance/wasmtime/pull/1923.diff,https://github.com/bytecodealliance/wasmtime/pull/1923.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1947,closed,Warnings during doc building, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1947/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1944,closed,Implement customer [de]serialization for `IntegerInterner`,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1944/comments,https://github.com/bytecodealliance/wasmtime/pull/1944.diff,https://github.com/bytecodealliance/wasmtime/pull/1944.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1917,open,Wasmtime: need mechanism to associate a runtime borrow checker with a linear memory,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1917/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1937,closed,deps: Bump `z3` to 0.6.0,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1937/comments,https://github.com/bytecodealliance/wasmtime/pull/1937.diff,https://github.com/bytecodealliance/wasmtime/pull/1937.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1929,closed,wasmtime-wiggle: change stray `log` ecosystem macro to `tracing`,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1929/comments,https://github.com/bytecodealliance/wasmtime/pull/1929.diff,https://github.com/bytecodealliance/wasmtime/pull/1929.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1922,closed,"wasmtime: Rip out incomplete/incorrect externref ""host info"" support",wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1922/comments,https://github.com/bytecodealliance/wasmtime/pull/1922.diff,https://github.com/bytecodealliance/wasmtime/pull/1922.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1914,closed,Register individual FDEs for musl libc., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1914/comments,https://github.com/bytecodealliance/wasmtime/pull/1914.diff,https://github.com/bytecodealliance/wasmtime/pull/1914.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1921,closed,CI: use `cargo fuzz` 0.8.X, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1921/comments,https://github.com/bytecodealliance/wasmtime/pull/1921.diff,https://github.com/bytecodealliance/wasmtime/pull/1921.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1910,closed,Factor Wiggle's wasmtime integration into a standalone crate,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1910/comments,https://github.com/bytecodealliance/wasmtime/pull/1910.diff,https://github.com/bytecodealliance/wasmtime/pull/1910.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1901,closed,"Support for `funcref`s, `ref.func`, and `table.grow` with `funcref`s",wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1901/comments,https://github.com/bytecodealliance/wasmtime/pull/1901.diff,https://github.com/bytecodealliance/wasmtime/pull/1901.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1909,closed,wiggle: GuestPtr<[u8]> => GuestPtr<str> conversions ,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1909/comments,https://github.com/bytecodealliance/wasmtime/pull/1909.diff,https://github.com/bytecodealliance/wasmtime/pull/1909.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1900,closed,MachInst isel and aarch64 backend: docs / clarity improvements.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1900/comments,https://github.com/bytecodealliance/wasmtime/pull/1900.diff,https://github.com/bytecodealliance/wasmtime/pull/1900.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/30,closed,Master doesn't build on macOS, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/30/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1899,closed,Fix compilation error due to redefinition.,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1899/comments,https://github.com/bytecodealliance/wasmtime/pull/1899.diff,https://github.com/bytecodealliance/wasmtime/pull/1899.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1892,closed,AArch64: Implement SIMD floating-point comparisons,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1892/comments,https://github.com/bytecodealliance/wasmtime/pull/1892.diff,https://github.com/bytecodealliance/wasmtime/pull/1892.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1893,closed,AArch64 CI tests: qemu hits memory limit and fails with SIMD tests enabled, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1893/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1836,closed,Cranelift: Module data apis should allow specifying the object file section,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1836/comments,https://github.com/bytecodealliance/wasmtime/pull/1836.diff,https://github.com/bytecodealliance/wasmtime/pull/1836.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1890,closed,arm64: Implement AllTrue and AnyTrue,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1890/comments,https://github.com/bytecodealliance/wasmtime/pull/1890.diff,https://github.com/bytecodealliance/wasmtime/pull/1890.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1887,closed,Add `TODO` comments with link to issue for aarch64 reference types, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1887/comments,https://github.com/bytecodealliance/wasmtime/pull/1887.diff,https://github.com/bytecodealliance/wasmtime/pull/1887.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1832,closed,externref: implement stack map-based garbage collection,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1832/comments,https://github.com/bytecodealliance/wasmtime/pull/1832.diff,https://github.com/bytecodealliance/wasmtime/pull/1832.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1804,closed,Do not leak `externref`s passed into Wasm,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1804/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1665,closed,"Add initial scalar FP operations (addss, subss, etc) to x64 backend.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1665/comments,https://github.com/bytecodealliance/wasmtime/pull/1665.diff,https://github.com/bytecodealliance/wasmtime/pull/1665.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1865,closed,AArch64: make use of reg-reg-extend amode.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1865/comments,https://github.com/bytecodealliance/wasmtime/pull/1865.diff,https://github.com/bytecodealliance/wasmtime/pull/1865.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1866,closed,"Remove uses of `matches!()` macro, incompatible with Firefox build.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1866/comments,https://github.com/bytecodealliance/wasmtime/pull/1866.diff,https://github.com/bytecodealliance/wasmtime/pull/1866.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1864,closed,arm64: Implement SIMD bitwise operations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1864/comments,https://github.com/bytecodealliance/wasmtime/pull/1864.diff,https://github.com/bytecodealliance/wasmtime/pull/1864.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1858,closed,Bugfix: scaled addressing mode: round B1 up to one byte.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1858/comments,https://github.com/bytecodealliance/wasmtime/pull/1858.diff,https://github.com/bytecodealliance/wasmtime/pull/1858.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1855,closed,"wasi-common: don't rely on platform dependent ""NUL"" device",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1855/comments,https://github.com/bytecodealliance/wasmtime/pull/1855.diff,https://github.com/bytecodealliance/wasmtime/pull/1855.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1861,closed,Correct example module doc comment typo, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1861/comments,https://github.com/bytecodealliance/wasmtime/pull/1861.diff,https://github.com/bytecodealliance/wasmtime/pull/1861.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1859,closed,Enable the spec::simd::simd_address test for AArch64, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1859/comments,https://github.com/bytecodealliance/wasmtime/pull/1859.diff,https://github.com/bytecodealliance/wasmtime/pull/1859.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1854,closed,Enable the wast::Cranelift::spec::simd::simd_load_splat test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1854/comments,https://github.com/bytecodealliance/wasmtime/pull/1854.diff,https://github.com/bytecodealliance/wasmtime/pull/1854.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1847,closed,Enable the wast::Cranelift::spec::simd::simd_load_extend test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1847/comments,https://github.com/bytecodealliance/wasmtime/pull/1847.diff,https://github.com/bytecodealliance/wasmtime/pull/1847.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1826,closed,arm64: Implement Icmp for I16X8 and I32X4,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1826/comments,https://github.com/bytecodealliance/wasmtime/pull/1826.diff,https://github.com/bytecodealliance/wasmtime/pull/1826.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1802,closed,Enable the wast::Cranelift::spec::simd::simd_align test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1802/comments,https://github.com/bytecodealliance/wasmtime/pull/1802.diff,https://github.com/bytecodealliance/wasmtime/pull/1802.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1846,closed,Rewrite `lower_edge` to produce better phi-translations:,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1846/comments,https://github.com/bytecodealliance/wasmtime/pull/1846.diff,https://github.com/bytecodealliance/wasmtime/pull/1846.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1824,closed,cranelift: Better document and test stack maps,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1824/comments,https://github.com/bytecodealliance/wasmtime/pull/1824.diff,https://github.com/bytecodealliance/wasmtime/pull/1824.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1825,closed,Three fixes to various SpiderMonkey-related issues,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1825/comments,https://github.com/bytecodealliance/wasmtime/pull/1825.diff,https://github.com/bytecodealliance/wasmtime/pull/1825.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1834,closed,Allow ModuleTranslationState to be constructed with signatures.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1834/comments,https://github.com/bytecodealliance/wasmtime/pull/1834.diff,https://github.com/bytecodealliance/wasmtime/pull/1834.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1833,closed,Wasm translator multi-value bugfix: handle branch to loop with loop parameters.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1833/comments,https://github.com/bytecodealliance/wasmtime/pull/1833.diff,https://github.com/bytecodealliance/wasmtime/pull/1833.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1640,closed,Cranelift: Module data apis should allow specifying the object file section, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1640/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1830,closed,Update from qemu 4.2.0 to qemu 5.0.0 for emulation-based CI jobs., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1830/comments,https://github.com/bytecodealliance/wasmtime/pull/1830.diff,https://github.com/bytecodealliance/wasmtime/pull/1830.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1817,closed,Avoid touching encodings in `EncCursor` if using a MachInst backend.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1817/comments,https://github.com/bytecodealliance/wasmtime/pull/1817.diff,https://github.com/bytecodealliance/wasmtime/pull/1817.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1796,closed,wiggle: switch logging to use `tracing` crate,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1796/comments,https://github.com/bytecodealliance/wasmtime/pull/1796.diff,https://github.com/bytecodealliance/wasmtime/pull/1796.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1810,closed,fix(tagged-union): changed test programs to use new tagged union, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1810/comments,https://github.com/bytecodealliance/wasmtime/pull/1810.diff,https://github.com/bytecodealliance/wasmtime/pull/1810.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1816,closed,Add deprecation notice to cranelift-faerie README and FaerieBuilder.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1816/comments,https://github.com/bytecodealliance/wasmtime/pull/1816.diff,https://github.com/bytecodealliance/wasmtime/pull/1816.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1774,closed,Multi-value return support on aarch64/Wasmtime.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1774/comments,https://github.com/bytecodealliance/wasmtime/pull/1774.diff,https://github.com/bytecodealliance/wasmtime/pull/1774.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1811,closed,Fix build warnings (errors on CI) due to mmap flag rename and deprecation.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1811/comments,https://github.com/bytecodealliance/wasmtime/pull/1811.diff,https://github.com/bytecodealliance/wasmtime/pull/1811.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1781,closed,"Initial, partial support for `externref`",lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1781/comments,https://github.com/bytecodealliance/wasmtime/pull/1781.diff,https://github.com/bytecodealliance/wasmtime/pull/1781.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1790,closed,wiggle: allow user-configurable error transformations,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1790/comments,https://github.com/bytecodealliance/wasmtime/pull/1790.diff,https://github.com/bytecodealliance/wasmtime/pull/1790.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1801,closed,arm64: add support for I8X16 ICmp,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1801/comments,https://github.com/bytecodealliance/wasmtime/pull/1801.diff,https://github.com/bytecodealliance/wasmtime/pull/1801.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1670,closed,Implement passing arguments by ref for win64 ABI,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1670/comments,https://github.com/bytecodealliance/wasmtime/pull/1670.diff,https://github.com/bytecodealliance/wasmtime/pull/1670.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1793,closed,"💖 wiggle: escape rust keywords, allow witx literals",wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1793/comments,https://github.com/bytecodealliance/wasmtime/pull/1793.diff,https://github.com/bytecodealliance/wasmtime/pull/1793.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1510,closed,Always check if struct-return parameter is needed,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1510/comments,https://github.com/bytecodealliance/wasmtime/pull/1510.diff,https://github.com/bytecodealliance/wasmtime/pull/1510.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1780,closed,cranelift: Implement serialize/deserialize for stack maps,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1780/comments,https://github.com/bytecodealliance/wasmtime/pull/1780.diff,https://github.com/bytecodealliance/wasmtime/pull/1780.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1778,closed,Disable tests for the peepmatic-macro crate,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1778/comments,https://github.com/bytecodealliance/wasmtime/pull/1778.diff,https://github.com/bytecodealliance/wasmtime/pull/1778.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1775,closed,peepmatic-macro tests fail when running cross-architecture via qemu,cranelift:area:peepmatic,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1775/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1748,closed,Enable the wast::Cranelift::spec::simd::simd_store test for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1748/comments,https://github.com/bytecodealliance/wasmtime/pull/1748.diff,https://github.com/bytecodealliance/wasmtime/pull/1748.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1741,closed,Merge `vcode` filetest mode into `compile`.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1741/comments,https://github.com/bytecodealliance/wasmtime/pull/1741.diff,https://github.com/bytecodealliance/wasmtime/pull/1741.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1732,closed,arm64: Use FPU instrctions for Fcopysign,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1732/comments,https://github.com/bytecodealliance/wasmtime/pull/1732.diff,https://github.com/bytecodealliance/wasmtime/pull/1732.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1734,closed,Cranelift: Fix FPR saving and shadow space allocation for Windows x64.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1734/comments,https://github.com/bytecodealliance/wasmtime/pull/1734.diff,https://github.com/bytecodealliance/wasmtime/pull/1734.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1717,closed,Automate borrow checking in wiggle,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1717/comments,https://github.com/bytecodealliance/wasmtime/pull/1717.diff,https://github.com/bytecodealliance/wasmtime/pull/1717.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1746,closed,"cranelift: add i64.[us]{div,rem} libcalls",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1746/comments,https://github.com/bytecodealliance/wasmtime/pull/1746.diff,https://github.com/bytecodealliance/wasmtime/pull/1746.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1729,closed,Fix MachBuffer branch optimization.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1729/comments,https://github.com/bytecodealliance/wasmtime/pull/1729.diff,https://github.com/bytecodealliance/wasmtime/pull/1729.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1733,closed,Rename `anyref` to `externref` across the board,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1733/comments,https://github.com/bytecodealliance/wasmtime/pull/1733.diff,https://github.com/bytecodealliance/wasmtime/pull/1733.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1726,closed,Limit the size of automaton keys in the `peepmatic_simple_automata` fuzz target,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1726/comments,https://github.com/bytecodealliance/wasmtime/pull/1726.diff,https://github.com/bytecodealliance/wasmtime/pull/1726.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1718,closed,"Rework of MachInst isel, branch fixups and lowering, and block ordering.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1718/comments,https://github.com/bytecodealliance/wasmtime/pull/1718.diff,https://github.com/bytecodealliance/wasmtime/pull/1718.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1722,closed,Docs: add section on running under qemu.,wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1722/comments,https://github.com/bytecodealliance/wasmtime/pull/1722.diff,https://github.com/bytecodealliance/wasmtime/pull/1722.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1720,closed,Add build instructions for Aarch64 cross-compilation,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1720/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1711,closed,Automatically label PRs related to the new x64 backend, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1711/comments,https://github.com/bytecodealliance/wasmtime/pull/1711.diff,https://github.com/bytecodealliance/wasmtime/pull/1711.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1692,closed,Update to using `wasmparser` 0.55.0,lightbeam,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1692/comments,https://github.com/bytecodealliance/wasmtime/pull/1692.diff,https://github.com/bytecodealliance/wasmtime/pull/1692.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1699,closed,Reduce arm64 Inst enum size,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1699/comments,https://github.com/bytecodealliance/wasmtime/pull/1699.diff,https://github.com/bytecodealliance/wasmtime/pull/1699.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1710,closed,peepmatic: remove unused member from `PeepholeOptimizer`,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1710/comments,https://github.com/bytecodealliance/wasmtime/pull/1710.diff,https://github.com/bytecodealliance/wasmtime/pull/1710.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1701,closed,Add github labels actions integration for peepmatic, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1701/comments,https://github.com/bytecodealliance/wasmtime/pull/1701.diff,https://github.com/bytecodealliance/wasmtime/pull/1701.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1687,closed,cranelift: Sign extend `Imm64` immediates,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1687/comments,https://github.com/bytecodealliance/wasmtime/pull/1687.diff,https://github.com/bytecodealliance/wasmtime/pull/1687.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1647,closed,Introduce peepmatic: a peephole optimizations DSL and peephole optimizer compiler,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1647/comments,https://github.com/bytecodealliance/wasmtime/pull/1647.diff,https://github.com/bytecodealliance/wasmtime/pull/1647.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/5,closed,stack protection, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/5/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1095,closed,iconst + icmp -> icmp_imm incorrect for out of bound values with signed comparison,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1095/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1674,closed,MachInst backend: don't reallocate RealRegUniverses for each function compilation.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1674/comments,https://github.com/bytecodealliance/wasmtime/pull/1674.diff,https://github.com/bytecodealliance/wasmtime/pull/1674.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1607,closed,Rework aarch64 stack frame implementation to use positive offsets.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1607/comments,https://github.com/bytecodealliance/wasmtime/pull/1607.diff,https://github.com/bytecodealliance/wasmtime/pull/1607.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1147,open,Too many raw_bitcasts in SIMD code,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1147/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1570,closed,"Fix long-range (non-colocated) aarch64 calls to not use Arm64Call reloc, and fix simplejit to use new long-distance call.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1570/comments,https://github.com/bytecodealliance/wasmtime/pull/1570.diff,https://github.com/bytecodealliance/wasmtime/pull/1570.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1635,closed,Allow setting the number of filetest threads via the CRANELIFT_FILETESTS_THREADS env var,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1635/comments,https://github.com/bytecodealliance/wasmtime/pull/1635.diff,https://github.com/bytecodealliance/wasmtime/pull/1635.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1521,closed,Cranelift ARM64 (AArch64) backend: fix remaining failing tests / correctness holes,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1521/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1638,closed,Add some debugging assistance to spectest oracle,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1638/comments,https://github.com/bytecodealliance/wasmtime/pull/1638.diff,https://github.com/bytecodealliance/wasmtime/pull/1638.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1632,closed,MachInst backend: attach SourceLoc span information to all ranges.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1632/comments,https://github.com/bytecodealliance/wasmtime/pull/1632.diff,https://github.com/bytecodealliance/wasmtime/pull/1632.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1575,closed,MachInst backend: pass through SourceLoc information.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1575/comments,https://github.com/bytecodealliance/wasmtime/pull/1575.diff,https://github.com/bytecodealliance/wasmtime/pull/1575.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1186,closed,SIMD testsuite tests failing with speed optimization.,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1186/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1501,closed,Setting vmemoryuse to 3G causes OOM errors,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1501/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1597,closed,cranelift_object returns an unnamable type from object, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1597/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1614,closed,Use new regalloc.rs version with dense vreg->rreg maps.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1614/comments,https://github.com/bytecodealliance/wasmtime/pull/1614.diff,https://github.com/bytecodealliance/wasmtime/pull/1614.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1601,closed,[crash] assertion failed or unimplemented panic when table type is not anyref,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1601/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1593,closed,Fix a memory leak in the test suite, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1593/comments,https://github.com/bytecodealliance/wasmtime/pull/1593.diff,https://github.com/bytecodealliance/wasmtime/pull/1593.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/3,closed,obj: minor fix to emit_module compile, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/3/comments,https://github.com/bytecodealliance/wasmtime/pull/3.diff,https://github.com/bytecodealliance/wasmtime/pull/3.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1596,closed,Broken link in README, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1596/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1580,closed,Add a MinGW release to our CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1580/comments,https://github.com/bytecodealliance/wasmtime/pull/1580.diff,https://github.com/bytecodealliance/wasmtime/pull/1580.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1586,closed,aarch64: emit SP copies when SP is involved in an explicit add during address lowering,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1586/comments,https://github.com/bytecodealliance/wasmtime/pull/1586.diff,https://github.com/bytecodealliance/wasmtime/pull/1586.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1588,closed,Don't set warnings as errors in Rust nightly builds in CI,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1588/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1582,closed,"Fix ImmLogic.invert(), and with it, `fcopysign` and `float_misc` test.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1582/comments,https://github.com/bytecodealliance/wasmtime/pull/1582.diff,https://github.com/bytecodealliance/wasmtime/pull/1582.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/117,closed,Update the documentation about C/C++ toolchain limitations., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/117/comments,https://github.com/bytecodealliance/wasmtime/pull/117.diff,https://github.com/bytecodealliance/wasmtime/pull/117.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1535,closed,Support MinGW as a wasmtime target,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1535/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1571,closed,"Fix aarch64 load trap info: HeapOutOfBounds, not OutOfBounds.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1571/comments,https://github.com/bytecodealliance/wasmtime/pull/1571.diff,https://github.com/bytecodealliance/wasmtime/pull/1571.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/900,closed,Improve wasm handling for stack overflow conditions,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/900/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1538,closed,implement emit_all_ones_funcaddrs in new backend,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1538/comments,https://github.com/bytecodealliance/wasmtime/pull/1538.diff,https://github.com/bytecodealliance/wasmtime/pull/1538.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1527,closed,"Add vcode test for floating-point, and fix two FP bugs.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1527/comments,https://github.com/bytecodealliance/wasmtime/pull/1527.diff,https://github.com/bytecodealliance/wasmtime/pull/1527.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1530,closed,Pending arm64 fixes for Spidermonkey integration,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1530/comments,https://github.com/bytecodealliance/wasmtime/pull/1530.diff,https://github.com/bytecodealliance/wasmtime/pull/1530.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1522,closed,Implement stack_addr for AArch64,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1522/comments,https://github.com/bytecodealliance/wasmtime/pull/1522.diff,https://github.com/bytecodealliance/wasmtime/pull/1522.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1528,closed,"arm64: Support less-than-64-bit integers in Bitrev, Clz, Cls, and Popcnt instructions.",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1528/comments,https://github.com/bytecodealliance/wasmtime/pull/1528.diff,https://github.com/bytecodealliance/wasmtime/pull/1528.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1466,closed,Refactor unwind generation in Cranelift.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1466/comments,https://github.com/bytecodealliance/wasmtime/pull/1466.diff,https://github.com/bytecodealliance/wasmtime/pull/1466.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1479,closed,Trap symbolication doesn't work after `Module` is dropped, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1479/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1494,closed,Add new `MachInst` backend and ARM64 support.,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1494/comments,https://github.com/bytecodealliance/wasmtime/pull/1494.diff,https://github.com/bytecodealliance/wasmtime/pull/1494.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1502,closed,wasi-common: export `WasiCtxBuilderError`,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1502/comments,https://github.com/bytecodealliance/wasmtime/pull/1502.diff,https://github.com/bytecodealliance/wasmtime/pull/1502.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1450,closed,Teach scripts/bump-wasmtime-version.sh about more versions, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1450/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1471,closed,wasmtime fails to compile with could not find `fde` in `isa` within: crates/environ/src/data_structures.rs:18:41 on arm,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1471/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1454,closed,"Add a new method Linker::get_export(module,name).",wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1454/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1470,closed,Wiggle: changes to traits used for error conversion and reporting,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1470/comments,https://github.com/bytecodealliance/wasmtime/pull/1470.diff,https://github.com/bytecodealliance/wasmtime/pull/1470.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1342,closed,Avoid `infer_rex` and `w` on the same encoding template,cranelift:meta,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1342/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1463,closed,Fix wasmtime-c-api tests and run them in CI,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1463/comments,https://github.com/bytecodealliance/wasmtime/pull/1463.diff,https://github.com/bytecodealliance/wasmtime/pull/1463.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1421,closed,Only infer REX prefixes in i64 mode,cranelift:meta,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1421/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1390,closed,Home for language bindings for wasmtime,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1390/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1245,closed,Remove duplicate code for mapping registers, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1245/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1423,closed,Cranelift: x86_pextr encoding using wrong source register %xmm7 instead of %xmm15,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1423/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1411,closed,Reimplement the .NET API in terms of a linker,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1411/comments,https://github.com/bytecodealliance/wasmtime/pull/1411.diff,https://github.com/bytecodealliance/wasmtime/pull/1411.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1402,closed,Enable GDB JIT debugging, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1402/comments,https://github.com/bytecodealliance/wasmtime/pull/1402.diff,https://github.com/bytecodealliance/wasmtime/pull/1402.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1392,closed,Add initial 0.13.0 (unreleased) release notes,wasmtime:docs,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1392/comments,https://github.com/bytecodealliance/wasmtime/pull/1392.diff,https://github.com/bytecodealliance/wasmtime/pull/1392.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/727,closed,Improving `Instance::new` experience,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/727/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1160,closed,Move documentation from readthedocs.io to docs.rs,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1160/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1272,open,Filling out missing Introductory Documentation,help wanted,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1272/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1336,closed,[wiggle] Tweaks from lucet integration,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1336/comments,https://github.com/bytecodealliance/wasmtime/pull/1336.diff,https://github.com/bytecodealliance/wasmtime/pull/1336.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/849,closed,Not writing results in callable has a weird default behavior, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/849/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1357,closed,Expand `Memory` docs and add examples, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1357/comments,https://github.com/bytecodealliance/wasmtime/pull/1357.diff,https://github.com/bytecodealliance/wasmtime/pull/1357.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1237,closed,Add a first-class way of accessing caller's memory, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1237/comments,https://github.com/bytecodealliance/wasmtime/pull/1237.diff,https://github.com/bytecodealliance/wasmtime/pull/1237.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1354,closed,Update `arbitrary` and `libfuzzer` dependencies,fuzzing,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1354/comments,https://github.com/bytecodealliance/wasmtime/pull/1354.diff,https://github.com/bytecodealliance/wasmtime/pull/1354.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1127,closed,Encode x86 SIMD instructions with REX prefix to use more XMM registers,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1127/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/243,closed,Add public Compiler::get_published_trampoline, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/243/comments,https://github.com/bytecodealliance/wasmtime/pull/243.diff,https://github.com/bytecodealliance/wasmtime/pull/243.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1322,closed,Trampoline compilation needs relocation support,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1322/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1343,closed,Turn off binaryen in fuzzing by default, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1343/comments,https://github.com/bytecodealliance/wasmtime/pull/1343.diff,https://github.com/bytecodealliance/wasmtime/pull/1343.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1344,closed,Re-add Cranelift publish script, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1344/comments,https://github.com/bytecodealliance/wasmtime/pull/1344.diff,https://github.com/bytecodealliance/wasmtime/pull/1344.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1306,closed,Cranelift: Register allocator entering infinite loop,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1306/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1327,closed,Add support for hidden visibility,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1327/comments,https://github.com/bytecodealliance/wasmtime/pull/1327.diff,https://github.com/bytecodealliance/wasmtime/pull/1327.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1311,closed,"cranelift-{module, faerie}: minor improvements to error reporting",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1311/comments,https://github.com/bytecodealliance/wasmtime/pull/1311.diff,https://github.com/bytecodealliance/wasmtime/pull/1311.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1333,closed,fuzzing: Enable Cranelift's IR verifier for differential fuzzing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1333/comments,https://github.com/bytecodealliance/wasmtime/pull/1333.diff,https://github.com/bytecodealliance/wasmtime/pull/1333.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1312,closed,Put all labels and globs in quotes for automatic labeling config, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1312/comments,https://github.com/bytecodealliance/wasmtime/pull/1312.diff,https://github.com/bytecodealliance/wasmtime/pull/1312.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1307,closed,[wiggle] missed versions and fields in wiggle cargo.toml, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1307/comments,https://github.com/bytecodealliance/wasmtime/pull/1307.diff,https://github.com/bytecodealliance/wasmtime/pull/1307.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1304,closed,Re enable subscribe to label action and more bot configs, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1304/comments,https://github.com/bytecodealliance/wasmtime/pull/1304.diff,https://github.com/bytecodealliance/wasmtime/pull/1304.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1271,closed,Remove current outdated implementation of interface types,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1271/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1298,closed,Increase the size of the sigaltstack.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1298/comments,https://github.com/bytecodealliance/wasmtime/pull/1298.diff,https://github.com/bytecodealliance/wasmtime/pull/1298.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1300,closed,Temporarily disable subscribe to label, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1300/comments,https://github.com/bytecodealliance/wasmtime/pull/1300.diff,https://github.com/bytecodealliance/wasmtime/pull/1300.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1294,closed,wiggle: make paths relative to use site of macro,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1294/comments,https://github.com/bytecodealliance/wasmtime/pull/1294.diff,https://github.com/bytecodealliance/wasmtime/pull/1294.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1291,closed,Use our fork of the labeler action that supports cron schedules, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1291/comments,https://github.com/bytecodealliance/wasmtime/pull/1291.diff,https://github.com/bytecodealliance/wasmtime/pull/1291.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1287,closed,Two more label tweaks, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1287/comments,https://github.com/bytecodealliance/wasmtime/pull/1287.diff,https://github.com/bytecodealliance/wasmtime/pull/1287.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1278,closed,[wasi-common]: Hello wiggle!,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1278/comments,https://github.com/bytecodealliance/wasmtime/pull/1278.diff,https://github.com/bytecodealliance/wasmtime/pull/1278.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1276,closed,"Enable the ""Subscribe to Label"" github action", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1276/comments,https://github.com/bytecodealliance/wasmtime/pull/1276.diff,https://github.com/bytecodealliance/wasmtime/pull/1276.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1234,closed,Set up bot like Servo's @highfive to @-mention people when files in a subdirectory are modified?, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1234/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/958,closed,What to do about cross-`Store` calls?,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/958/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1242,closed,[wasi-common]: yanix now returns io::Error directly,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1242/comments,https://github.com/bytecodealliance/wasmtime/pull/1242.diff,https://github.com/bytecodealliance/wasmtime/pull/1242.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1168,open,cranelift-codegen-meta is slowish to build,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1168/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1214,closed,cranelift-module: expose trap information when defining functions, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1214/comments,https://github.com/bytecodealliance/wasmtime/pull/1214.diff,https://github.com/bytecodealliance/wasmtime/pull/1214.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1235,closed,CI: Run fuzzer corpora with `RUST_BACKTRACE=1`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1235/comments,https://github.com/bytecodealliance/wasmtime/pull/1235.diff,https://github.com/bytecodealliance/wasmtime/pull/1235.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/38,closed,Kernel Module for running WebAssembly, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/38/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/36,closed,Invalid function arguments and global values offsets, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/36/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1205,closed,Should Cranelift's test parser be fuzzed?,fuzz-bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1205/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1217,closed,Rename 'an block' to 'a block', ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1217/comments,https://github.com/bytecodealliance/wasmtime/pull/1217.diff,https://github.com/bytecodealliance/wasmtime/pull/1217.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1000,closed,Add support for WAT module validation/creation and API,enhancement,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1000/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1197,closed,Testing: caches created in home-dir, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1197/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1193,closed,Limit rayon to one thread during fuzzing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1193/comments,https://github.com/bytecodealliance/wasmtime/pull/1193.diff,https://github.com/bytecodealliance/wasmtime/pull/1193.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1190,closed,Fix build of cranelift-tools, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1190/comments,https://github.com/bytecodealliance/wasmtime/pull/1190.diff,https://github.com/bytecodealliance/wasmtime/pull/1190.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1189,closed,Fuzzing api calls timeouts, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1189/comments,https://github.com/bytecodealliance/wasmtime/pull/1189.diff,https://github.com/bytecodealliance/wasmtime/pull/1189.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1021,closed,wasmtime now in Bytecode Alliance, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1021/comments,https://github.com/bytecodealliance/wasmtime/pull/1021.diff,https://github.com/bytecodealliance/wasmtime/pull/1021.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1019,closed,Merge the Cranelift repository into Wasmtime, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1019/comments,https://github.com/bytecodealliance/wasmtime/pull/1019.diff,https://github.com/bytecodealliance/wasmtime/pull/1019.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/26,closed,can't find crate hashmap_core, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/26/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1014,closed,Change `wasm_module_new` to use `Module::from_binary`., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1014/comments,https://github.com/bytecodealliance/wasmtime/pull/1014.diff,https://github.com/bytecodealliance/wasmtime/pull/1014.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/984,closed,macOS dylib has undesired dependency, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/984/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1006,closed,Bump .NET NuGet package version to 0.12.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1006/comments,https://github.com/bytecodealliance/wasmtime/pull/1006.diff,https://github.com/bytecodealliance/wasmtime/pull/1006.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/978,closed,"GitHub release uploads fail intermittently, breaking the install script", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/978/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/976,closed,Implement most of bulk memory, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/976/comments,https://github.com/bytecodealliance/wasmtime/pull/976.diff,https://github.com/bytecodealliance/wasmtime/pull/976.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/928,closed,Tracking issue for the bulk memory operations proposal,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/928/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/988,closed,Change default opt-level for Config to `speed`., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/988/comments,https://github.com/bytecodealliance/wasmtime/pull/988.diff,https://github.com/bytecodealliance/wasmtime/pull/988.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/977,closed,Implement a WASI instantiation C API., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/977/comments,https://github.com/bytecodealliance/wasmtime/pull/977.diff,https://github.com/bytecodealliance/wasmtime/pull/977.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/980,closed,Test book documentation on CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/980/comments,https://github.com/bytecodealliance/wasmtime/pull/980.diff,https://github.com/bytecodealliance/wasmtime/pull/980.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/975,closed,Update cranelift to 0.59.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/975/comments,https://github.com/bytecodealliance/wasmtime/pull/975.diff,https://github.com/bytecodealliance/wasmtime/pull/975.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/970,closed,Document and codify the release process, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/970/comments,https://github.com/bytecodealliance/wasmtime/pull/970.diff,https://github.com/bytecodealliance/wasmtime/pull/970.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/951,open,Can `RelocationTarget` be entirely removed?,wasmtime,https://api.github.com/repos/bytecodealliance/wasmtime/issues/951/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1216,closed,Windows fprs preservation,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1216/comments,https://github.com/bytecodealliance/wasmtime/pull/1216.diff,https://github.com/bytecodealliance/wasmtime/pull/1216.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/940,closed,Trap handlers assertion failed: !p.is_null(), ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/940/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/953,closed,Implement wasm_func_type in the C API.,wasmtime:c-api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/953/comments,https://github.com/bytecodealliance/wasmtime/pull/953.diff,https://github.com/bytecodealliance/wasmtime/pull/953.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/195,closed,Fix RelocationTarget::JumpTable handling in wasm2obj, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/195/comments,https://github.com/bytecodealliance/wasmtime/pull/195.diff,https://github.com/bytecodealliance/wasmtime/pull/195.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/193,closed,Enable cranelift-codegen's new all-arch feature to maintain full architecture support by default, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/193/comments,https://github.com/bytecodealliance/wasmtime/pull/193.diff,https://github.com/bytecodealliance/wasmtime/pull/193.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/492,closed,Numerous assert_malformed failures in test suite output in CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/492/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2637,closed,Allow missing imports in WASM module through a feature flag,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2637/comments,https://github.com/bytecodealliance/wasmtime/pull/2637.diff,https://github.com/bytecodealliance/wasmtime/pull/2637.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/905,closed,Panic on modules containing an `anyref` local, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/905/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/178,closed,Descriptive `call_indirect` trap error messages, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/178/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/52,closed,invoke doesn't check that the right number of arguments are passed, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/52/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/48,closed,Tidy up the API for instantiating and running wasm, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/48/comments,https://github.com/bytecodealliance/wasmtime/pull/48.diff,https://github.com/bytecodealliance/wasmtime/pull/48.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/885,closed,Don't rebuild `wasmtime-cli` on all file changes, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/885/comments,https://github.com/bytecodealliance/wasmtime/pull/885.diff,https://github.com/bytecodealliance/wasmtime/pull/885.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/886,closed,Add a `Debug` implementation for `wsmtime::Config`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/886/comments,https://github.com/bytecodealliance/wasmtime/pull/886.diff,https://github.com/bytecodealliance/wasmtime/pull/886.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/880,closed,Don't spend build time optimizing build-time-only crates, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/880/comments,https://github.com/bytecodealliance/wasmtime/pull/880.diff,https://github.com/bytecodealliance/wasmtime/pull/880.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/879,closed,Fix a memory leak with link errors, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/879/comments,https://github.com/bytecodealliance/wasmtime/pull/879.diff,https://github.com/bytecodealliance/wasmtime/pull/879.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/848,closed,Panics are not caught within Callable, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/848/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1367,closed,Add a safe method `GuestPtr::copy_from_slice`,wasi,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1367/comments,https://github.com/bytecodealliance/wasmtime/pull/1367.diff,https://github.com/bytecodealliance/wasmtime/pull/1367.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/861,closed,Remove a stray empty file, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/861/comments,https://github.com/bytecodealliance/wasmtime/pull/861.diff,https://github.com/bytecodealliance/wasmtime/pull/861.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1176,closed,Determine best way to encode SIMD `load_extend` instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1176/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/784,closed,Document the behavior of some rights-related functions., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/784/comments,https://github.com/bytecodealliance/wasmtime/pull/784.diff,https://github.com/bytecodealliance/wasmtime/pull/784.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/552,closed,Minimal viable implementation of poll_oneoff for Windows,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/552/comments,https://github.com/bytecodealliance/wasmtime/pull/552.diff,https://github.com/bytecodealliance/wasmtime/pull/552.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1325,closed,Add support for hidden visibility, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1325/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/707,closed,Reduce boilerplate in `wasmtime-wasi`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/707/comments,https://github.com/bytecodealliance/wasmtime/pull/707.diff,https://github.com/bytecodealliance/wasmtime/pull/707.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1159,open,undefined reference to `__cranelift_probestack',bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1159/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/840,closed,Update libfuzzer-sys dependency version number, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/840/comments,https://github.com/bytecodealliance/wasmtime/pull/840.diff,https://github.com/bytecodealliance/wasmtime/pull/840.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/833,closed,Add initial differential fuzzing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/833/comments,https://github.com/bytecodealliance/wasmtime/pull/833.diff,https://github.com/bytecodealliance/wasmtime/pull/833.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/611,closed,Initial Fuzzing Infrastructure, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/611/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1329,closed,[wasi-common] add custom FdPool container for managing fd allocs/deallocs,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1329/comments,https://github.com/bytecodealliance/wasmtime/pull/1329.diff,https://github.com/bytecodealliance/wasmtime/pull/1329.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/770,closed, Fix rights checks across the codebase.,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/770/comments,https://github.com/bytecodealliance/wasmtime/pull/770.diff,https://github.com/bytecodealliance/wasmtime/pull/770.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1004,closed,Add dependency versions and a README.md, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1004/comments,https://github.com/bytecodealliance/wasmtime/pull/1004.diff,https://github.com/bytecodealliance/wasmtime/pull/1004.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/829,closed,Trap handling may segfault due to being out-of-stack, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/829/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/828,closed,Error message on trap is ugly, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/828/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/759,closed,Backtrace WebAssembly function JIT frames, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/759/comments,https://github.com/bytecodealliance/wasmtime/pull/759.diff,https://github.com/bytecodealliance/wasmtime/pull/759.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/821,closed,fix build error for using the optional 'wasi-c' feature, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/821/comments,https://github.com/bytecodealliance/wasmtime/pull/821.diff,https://github.com/bytecodealliance/wasmtime/pull/821.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/708,closed,Evolving the API of the `wasmtime` crate,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/708/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/802,closed,Update wast to 6.0.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/802/comments,https://github.com/bytecodealliance/wasmtime/pull/802.diff,https://github.com/bytecodealliance/wasmtime/pull/802.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/788,closed,Remove `HostRef` from the `wasmtime` public API, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/788/comments,https://github.com/bytecodealliance/wasmtime/pull/788.diff,https://github.com/bytecodealliance/wasmtime/pull/788.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/785,closed,Fix various tests to pass CI again, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/785/comments,https://github.com/bytecodealliance/wasmtime/pull/785.diff,https://github.com/bytecodealliance/wasmtime/pull/785.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/739,closed,Use structopt instead of docopt., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/739/comments,https://github.com/bytecodealliance/wasmtime/pull/739.diff,https://github.com/bytecodealliance/wasmtime/pull/739.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/741,closed,ci: don't run full fuzz corpora, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/741/comments,https://github.com/bytecodealliance/wasmtime/pull/741.diff,https://github.com/bytecodealliance/wasmtime/pull/741.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/672,closed,[lightbeam] Refactoring Error handling + remove panicking calls in lightbeam backend, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/672/comments,https://github.com/bytecodealliance/wasmtime/pull/672.diff,https://github.com/bytecodealliance/wasmtime/pull/672.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/726,closed,Move the `fuzz` directory into main workspace, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/726/comments,https://github.com/bytecodealliance/wasmtime/pull/726.diff,https://github.com/bytecodealliance/wasmtime/pull/726.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/721,closed,Fix log at =0.4.8, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/721/comments,https://github.com/bytecodealliance/wasmtime/pull/721.diff,https://github.com/bytecodealliance/wasmtime/pull/721.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/718,closed,[dotnet] Some small fixes and unit tests, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/718/comments,https://github.com/bytecodealliance/wasmtime/pull/718.diff,https://github.com/bytecodealliance/wasmtime/pull/718.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1288,closed,test labeler, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1288/comments,https://github.com/bytecodealliance/wasmtime/pull/1288.diff,https://github.com/bytecodealliance/wasmtime/pull/1288.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/688,closed,Compile wasi-common to Emscripten, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/688/comments,https://github.com/bytecodealliance/wasmtime/pull/688.diff,https://github.com/bytecodealliance/wasmtime/pull/688.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/149,closed,Ignore non-existent refs in the transformed DWARF, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/149/comments,https://github.com/bytecodealliance/wasmtime/pull/149.diff,https://github.com/bytecodealliance/wasmtime/pull/149.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/700,closed,Fix WASI test program running., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/700/comments,https://github.com/bytecodealliance/wasmtime/pull/700.diff,https://github.com/bytecodealliance/wasmtime/pull/700.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/585,closed,Move command function invocation out of wasmtime-instance., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/585/comments,https://github.com/bytecodealliance/wasmtime/pull/585.diff,https://github.com/bytecodealliance/wasmtime/pull/585.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/685,closed,fuzzing: Add initial API call fuzzer, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/685/comments,https://github.com/bytecodealliance/wasmtime/pull/685.diff,https://github.com/bytecodealliance/wasmtime/pull/685.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/680,closed,[dotnet] Root bindings so the delegate in FunctionBinding is not GCed,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/680/comments,https://github.com/bytecodealliance/wasmtime/pull/680.diff,https://github.com/bytecodealliance/wasmtime/pull/680.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/668,closed,[wasi-common] wig: update to latest witx, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/668/comments,https://github.com/bytecodealliance/wasmtime/pull/668.diff,https://github.com/bytecodealliance/wasmtime/pull/668.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/676,closed,Fix .NET interop issue for Windows release builds.,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/676/comments,https://github.com/bytecodealliance/wasmtime/pull/676.diff,https://github.com/bytecodealliance/wasmtime/pull/676.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/663,closed,Contributing docs, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/663/comments,https://github.com/bytecodealliance/wasmtime/pull/663.diff,https://github.com/bytecodealliance/wasmtime/pull/663.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1117,open,Make Settings more static,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1117/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/645,closed,Trampolines for Callable are not registering user trap,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/645/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/662,closed,Run our fuzz targets on our corpora in CI, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/662/comments,https://github.com/bytecodealliance/wasmtime/pull/662.diff,https://github.com/bytecodealliance/wasmtime/pull/662.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/660,closed,fuzzing: Provide dummy imports for instantion oracle, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/660/comments,https://github.com/bytecodealliance/wasmtime/pull/660.diff,https://github.com/bytecodealliance/wasmtime/pull/660.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1248,closed,Implement SIMD swizzle, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1248/comments,https://github.com/bytecodealliance/wasmtime/pull/1248.diff,https://github.com/bytecodealliance/wasmtime/pull/1248.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1254,closed,CI: Use an HTTPS download link for LLVM, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1254/comments,https://github.com/bytecodealliance/wasmtime/pull/1254.diff,https://github.com/bytecodealliance/wasmtime/pull/1254.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/643,closed,Remove in-repo fuzz corpus, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/643/comments,https://github.com/bytecodealliance/wasmtime/pull/643.diff,https://github.com/bytecodealliance/wasmtime/pull/643.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/641,closed,Instantiate empty module, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/641/comments,https://github.com/bytecodealliance/wasmtime/pull/641.diff,https://github.com/bytecodealliance/wasmtime/pull/641.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/636,closed,Failure to instantiate valid empty Wasm module,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/636/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/624,closed,Move Wasmtime for .NET to the Wasmtime repo. , ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/624/comments,https://github.com/bytecodealliance/wasmtime/pull/624.diff,https://github.com/bytecodealliance/wasmtime/pull/624.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/637,closed,Fuzzing: Add test case logging and regression test template, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/637/comments,https://github.com/bytecodealliance/wasmtime/pull/637.diff,https://github.com/bytecodealliance/wasmtime/pull/637.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/619,closed,Introduce the `wasmtime-fuzzing` crate, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/619/comments,https://github.com/bytecodealliance/wasmtime/pull/619.diff,https://github.com/bytecodealliance/wasmtime/pull/619.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1116,open,Extend constant pools to support f32/f64 too,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1116/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/600,closed,Feature-gate test-programs,wasi:tests,https://api.github.com/repos/bytecodealliance/wasmtime/issues/600/comments,https://github.com/bytecodealliance/wasmtime/pull/600.diff,https://github.com/bytecodealliance/wasmtime/pull/600.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1226,closed,"wasi-common error cleanup: part 1, yanix",wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1226/comments,https://github.com/bytecodealliance/wasmtime/pull/1226.diff,https://github.com/bytecodealliance/wasmtime/pull/1226.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/407,closed,Make more code work with no_std., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/407/comments,https://github.com/bytecodealliance/wasmtime/pull/407.diff,https://github.com/bytecodealliance/wasmtime/pull/407.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1156,open,"[panic] panic! called when ""reference types found but safepoints not enabled""",bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1156/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/562,closed,Reduce number of crates needed for `Config` usage, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/562/comments,https://github.com/bytecodealliance/wasmtime/pull/562.diff,https://github.com/bytecodealliance/wasmtime/pull/562.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/561,closed,Squash improper_ctypes warnings on nightly, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/561/comments,https://github.com/bytecodealliance/wasmtime/pull/561.diff,https://github.com/bytecodealliance/wasmtime/pull/561.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1052,open,Optimize bitreverse using rotate instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1052/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/542,closed,Fill out book chapter on writing WebAssembly with Rust, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/542/comments,https://github.com/bytecodealliance/wasmtime/pull/542.diff,https://github.com/bytecodealliance/wasmtime/pull/542.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/467,closed,Update cranelift for full multi-value, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/467/comments,https://github.com/bytecodealliance/wasmtime/pull/467.diff,https://github.com/bytecodealliance/wasmtime/pull/467.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/534,closed,Miscellaneous cleanups, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/534/comments,https://github.com/bytecodealliance/wasmtime/pull/534.diff,https://github.com/bytecodealliance/wasmtime/pull/534.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/531,closed,Use the more-asserts crate in more places., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/531/comments,https://github.com/bytecodealliance/wasmtime/pull/531.diff,https://github.com/bytecodealliance/wasmtime/pull/531.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/526,closed,Move cache configuration documentation into book, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/526/comments,https://github.com/bytecodealliance/wasmtime/pull/526.diff,https://github.com/bytecodealliance/wasmtime/pull/526.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/525,closed,Add a `keywords` field to Cargo.toml files., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/525/comments,https://github.com/bytecodealliance/wasmtime/pull/525.diff,https://github.com/bytecodealliance/wasmtime/pull/525.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/512,closed,Reorganize the codebase, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/512/comments,https://github.com/bytecodealliance/wasmtime/pull/512.diff,https://github.com/bytecodealliance/wasmtime/pull/512.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/522,closed,Update README with Github Actions badge, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/522/comments,https://github.com/bytecodealliance/wasmtime/pull/522.diff,https://github.com/bytecodealliance/wasmtime/pull/522.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/502,closed,Merge wasi-common into wasmtime, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/502/comments,https://github.com/bytecodealliance/wasmtime/pull/502.diff,https://github.com/bytecodealliance/wasmtime/pull/502.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/462,closed,Implement registering JIT unwind information on Windows., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/462/comments,https://github.com/bytecodealliance/wasmtime/pull/462.diff,https://github.com/bytecodealliance/wasmtime/pull/462.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/11,closed,What is the goal of this project?, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/11/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/8,closed,wasm code accessing data on the native stack, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/8/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/500,closed,Update faerie to 0.12 to finish the `target-lexicon` update story., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/500/comments,https://github.com/bytecodealliance/wasmtime/pull/500.diff,https://github.com/bytecodealliance/wasmtime/pull/500.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/474,closed,Migrate from Azure Pipelines to Github Actions, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/474/comments,https://github.com/bytecodealliance/wasmtime/pull/474.diff,https://github.com/bytecodealliance/wasmtime/pull/474.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/832,closed,[wasi-common]: Generate strerror from witx; tweak Display for WasiError,wasi:impl,https://api.github.com/repos/bytecodealliance/wasmtime/issues/832/comments,https://github.com/bytecodealliance/wasmtime/pull/832.diff,https://github.com/bytecodealliance/wasmtime/pull/832.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/154,open,problems building js-polyfill, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/154/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1179,closed,x86: Consistently permit REX prefix in SIMD operations,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1179/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/440,closed,poll_oneoff with wasi::EVENTTYPE_FD_READ resulting in EBADF ,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/440/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1150,open,Improving Cranelift's IR generation,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1150/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/137,closed,Update .rustfmt.toml, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/137/comments,https://github.com/bytecodealliance/wasmtime/pull/137.diff,https://github.com/bytecodealliance/wasmtime/pull/137.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/441,closed,V128 support removed, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/441/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1152,closed,Legalization with isplit as last instruction generates invalid clif ir,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1152/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/396,closed,enable wasi-c by default for releases,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/396/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1132,closed,"cranelift-module allows func declare local -> export, but faerie doesn't",cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1132/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2,open,wasm2obj: Implement memory initializers, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1106,open,icmp_imm implemented incorrectly for i8 + eq/ne,bug,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1106/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/406,closed,Improve the workaround for what is now wabt issue #59., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/406/comments,https://github.com/bytecodealliance/wasmtime/pull/406.diff,https://github.com/bytecodealliance/wasmtime/pull/406.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/397,closed,Integrate Lightbeam, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/397/comments,https://github.com/bytecodealliance/wasmtime/pull/397.diff,https://github.com/bytecodealliance/wasmtime/pull/397.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/111,open,Order of preopened directories matters,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/111/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1066,closed,Optimize live value handling,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1066/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1067,open,Bitfield Extract/Create instructions,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1067/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1051,open,Infix operators in the text format?,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1051/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/493,closed,Removes build warnings for usused code for lightbeam build, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/493/comments,https://github.com/bytecodealliance/wasmtime/pull/493.diff,https://github.com/bytecodealliance/wasmtime/pull/493.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1038,open,Better LICM,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1038/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/996,closed,Dependabot can't resolve your Rust dependency files, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/996/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1016,closed,Disallow values to cross stores, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1016/comments,https://github.com/bytecodealliance/wasmtime/pull/1016.diff,https://github.com/bytecodealliance/wasmtime/pull/1016.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/854,closed,Simplify the `signalhandlers` module, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/854/comments,https://github.com/bytecodealliance/wasmtime/pull/854.diff,https://github.com/bytecodealliance/wasmtime/pull/854.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1003,closed,Update usage of target_lexicon to be consistent with v0.10, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1003/comments,https://github.com/bytecodealliance/wasmtime/pull/1003.diff,https://github.com/bytecodealliance/wasmtime/pull/1003.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1022,open,Automatic stack slot alignment,cranelift,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1022/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/24,closed,test-all.sh failing - requires cargo-fmt, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/24/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/1009,closed,Set a more reasonable LC_ID_DYLIB entry on macOS, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/1009/comments,https://github.com/bytecodealliance/wasmtime/pull/1009.diff,https://github.com/bytecodealliance/wasmtime/pull/1009.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/765,closed,Go back to testing true nightlies, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/765/comments,https://github.com/bytecodealliance/wasmtime/pull/765.diff,https://github.com/bytecodealliance/wasmtime/pull/765.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/908,closed,Dependabot can't resolve your Rust dependency files, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/908/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/916,closed,Remove a use of `lazy_static!` in `cache.rs`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/916/comments,https://github.com/bytecodealliance/wasmtime/pull/916.diff,https://github.com/bytecodealliance/wasmtime/pull/916.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/2625,closed,Implement shared host functions.,wasmtime:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/2625/comments,https://github.com/bytecodealliance/wasmtime/pull/2625.diff,https://github.com/bytecodealliance/wasmtime/pull/2625.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/255,closed,fd_write should be unbuffered,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/255/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/252,closed,Update cranelift-native requirement from 0.37.0 to 0.38.0,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/252/comments,https://github.com/bytecodealliance/wasmtime/pull/252.diff,https://github.com/bytecodealliance/wasmtime/pull/252.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/49,closed,Switch to passing the vmctx hidden argument at the beginning., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/49/comments,https://github.com/bytecodealliance/wasmtime/pull/49.diff,https://github.com/bytecodealliance/wasmtime/pull/49.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/224,closed,Update cranelift-entity requirement from 0.36.0 to 0.37.0,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/224/comments,https://github.com/bytecodealliance/wasmtime/pull/224.diff,https://github.com/bytecodealliance/wasmtime/pull/224.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/834,closed,Disable rustdoc on the wasmtime cli binary, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/834/comments,https://github.com/bytecodealliance/wasmtime/pull/834.diff,https://github.com/bytecodealliance/wasmtime/pull/834.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/797,closed,Remove `allow(improper_ctypes)`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/797/comments,https://github.com/bytecodealliance/wasmtime/pull/797.diff,https://github.com/bytecodealliance/wasmtime/pull/797.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/790,closed,Bump version to 0.9.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/790/comments,https://github.com/bytecodealliance/wasmtime/pull/790.diff,https://github.com/bytecodealliance/wasmtime/pull/790.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/773,closed,"Don't render errors twice, only once", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/773/comments,https://github.com/bytecodealliance/wasmtime/pull/773.diff,https://github.com/bytecodealliance/wasmtime/pull/773.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/774,closed,Update wast to 5.0.1, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/774/comments,https://github.com/bytecodealliance/wasmtime/pull/774.diff,https://github.com/bytecodealliance/wasmtime/pull/774.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/23,closed,segmentation fault when allocating, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/23/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/10,closed,switch from region to memmap?, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/10/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/9,closed,Implement memory.grow and memory.current, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/9/comments,https://github.com/bytecodealliance/wasmtime/pull/9.diff,https://github.com/bytecodealliance/wasmtime/pull/9.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/7,closed,Error: Call must have an encoding, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/7/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/6,closed,Merge the index-fix branch, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/6/comments,https://github.com/bytecodealliance/wasmtime/pull/6.diff,https://github.com/bytecodealliance/wasmtime/pull/6.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/20,closed,add a way to provide imported functions during relocation, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/20/comments,https://github.com/bytecodealliance/wasmtime/pull/20.diff,https://github.com/bytecodealliance/wasmtime/pull/20.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/133,closed,Update WASI tutorial with Rust howto as well, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/133/comments,https://github.com/bytecodealliance/wasmtime/pull/133.diff,https://github.com/bytecodealliance/wasmtime/pull/133.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/132,closed,Add link to Rust version of the WASI tutorial, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/132/comments,https://github.com/bytecodealliance/wasmtime/pull/132.diff,https://github.com/bytecodealliance/wasmtime/pull/132.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/743,closed,Update WASI tests to use wasi crate v0.9.0, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/743/comments,https://github.com/bytecodealliance/wasmtime/pull/743.diff,https://github.com/bytecodealliance/wasmtime/pull/743.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/18,closed,add a --target option to wasm2obj, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/18/comments,https://github.com/bytecodealliance/wasmtime/pull/18.diff,https://github.com/bytecodealliance/wasmtime/pull/18.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/558,closed,Update lightbeam link, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/558/comments,https://github.com/bytecodealliance/wasmtime/pull/558.diff,https://github.com/bytecodealliance/wasmtime/pull/558.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/477,closed,Add error message to failed WAST directives, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/477/comments,https://github.com/bytecodealliance/wasmtime/pull/477.diff,https://github.com/bytecodealliance/wasmtime/pull/477.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/507,closed,Simplify `#[test]` generation for `*.wast` files, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/507/comments,https://github.com/bytecodealliance/wasmtime/pull/507.diff,https://github.com/bytecodealliance/wasmtime/pull/507.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/503,closed,Reformat with new stable rustfmt, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/503/comments,https://github.com/bytecodealliance/wasmtime/pull/503.diff,https://github.com/bytecodealliance/wasmtime/pull/503.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/495,closed,Update cranelift-frontend requirement from 0.47 to 0.49,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/495/comments,https://github.com/bytecodealliance/wasmtime/pull/495.diff,https://github.com/bytecodealliance/wasmtime/pull/495.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/485,closed,Update cranelift-frontend requirement from 0.47 to 0.48,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/485/comments,https://github.com/bytecodealliance/wasmtime/pull/485.diff,https://github.com/bytecodealliance/wasmtime/pull/485.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/434,closed,Switch from `wabt` crate to `wast`, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/434/comments,https://github.com/bytecodealliance/wasmtime/pull/434.diff,https://github.com/bytecodealliance/wasmtime/pull/434.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/392,closed,Fix lightbeam build by updating support for the compiler trait, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/392/comments,https://github.com/bytecodealliance/wasmtime/pull/392.diff,https://github.com/bytecodealliance/wasmtime/pull/392.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/461,closed,wasmtime-wasi-c: allow(non_snake_case) to suppress warnings on consecutive underscores, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/461/comments,https://github.com/bytecodealliance/wasmtime/pull/461.diff,https://github.com/bytecodealliance/wasmtime/pull/461.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/454,closed,Remove incorrect executable bits, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/454/comments,https://github.com/bytecodealliance/wasmtime/pull/454.diff,https://github.com/bytecodealliance/wasmtime/pull/454.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/359,closed,Why would I use this in the browser?, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/359/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/68,closed,WASI: remove __wasi_proc_raise(),wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/68/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/345,closed,Fix crash when cache disabled, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/345/comments,https://github.com/bytecodealliance/wasmtime/pull/345.diff,https://github.com/bytecodealliance/wasmtime/pull/345.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/303,closed,Cache worker, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/303/comments,https://github.com/bytecodealliance/wasmtime/pull/303.diff,https://github.com/bytecodealliance/wasmtime/pull/303.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/301,closed,Update wasmparser requirement from 0.36.0 to 0.37.1,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/301/comments,https://github.com/bytecodealliance/wasmtime/pull/301.diff,https://github.com/bytecodealliance/wasmtime/pull/301.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/226,closed,Update cranelift-wasm requirement from 0.36.0 to 0.37.0,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/226/comments,https://github.com/bytecodealliance/wasmtime/pull/226.diff,https://github.com/bytecodealliance/wasmtime/pull/226.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/227,closed,Update cranelift-frontend requirement from 0.36.0 to 0.37.0,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/227/comments,https://github.com/bytecodealliance/wasmtime/pull/227.diff,https://github.com/bytecodealliance/wasmtime/pull/227.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/216,closed,Remove cranelift-native dependency from wasmtime-wast., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/216/comments,https://github.com/bytecodealliance/wasmtime/pull/216.diff,https://github.com/bytecodealliance/wasmtime/pull/216.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/218,closed,Update wabt requirement from 0.8 to 0.9,dependencies,https://api.github.com/repos/bytecodealliance/wasmtime/issues/218/comments,https://github.com/bytecodealliance/wasmtime/pull/218.diff,https://github.com/bytecodealliance/wasmtime/pull/218.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/223,closed,Add command line option for custom cache directory, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/223/comments,https://github.com/bytecodealliance/wasmtime/pull/223.diff,https://github.com/bytecodealliance/wasmtime/pull/223.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/201,closed,Fix compilation of wasmtime-environ from within wasmtime-jit., ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/201/comments,https://github.com/bytecodealliance/wasmtime/pull/201.diff,https://github.com/bytecodealliance/wasmtime/pull/201.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/146,closed,system_v <-> windows_fastcall mixup, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/146/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/144,closed,Panic during debuginfo processing, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/144/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/141,closed,Add example of compiling wat and running with wasmtime, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/141/comments,https://github.com/bytecodealliance/wasmtime/pull/141.diff,https://github.com/bytecodealliance/wasmtime/pull/141.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/123,closed,Build fail on CMake Warning on Windows 10, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/123/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/114,closed,"When path_open fails, set the output fd to -1.", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/114/comments,https://github.com/bytecodealliance/wasmtime/pull/114.diff,https://github.com/bytecodealliance/wasmtime/pull/114.patch
https://api.github.com/repos/bytecodealliance/wasmtime/issues/88,closed,"wasmtime tutorial does not work (""error opening input test.txt: Bad file descriptor"")", ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/88/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/69,closed,WASI: Split networking into a module,wasi:api,https://api.github.com/repos/bytecodealliance/wasmtime/issues/69/comments, , 
https://api.github.com/repos/bytecodealliance/wasmtime/issues/46,closed,Updates to wasm2obj to produce stubs for C code, ,https://api.github.com/repos/bytecodealliance/wasmtime/issues/46/comments,https://github.com/bytecodealliance/wasmtime/pull/46.diff,https://github.com/bytecodealliance/wasmtime/pull/46.patch
